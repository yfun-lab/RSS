[{"title":"汽车音响系统升级全面讲解","date":"2022-03-17 13:22:23","description":"\n<p data-pid=\"F1t-GY3t\">对以前多篇文章做一个概括和总结</p>\n<a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//www.zhihu.com/video/1217807895150120960\" target=\"_blank\" data-video-id=\"\" data-video-playable=\"true\" data-name=\"汽车音响系统升级全面讲解\" data-poster=\"https://pic4.zhimg.com/v2-ca1c0edf07973138efc020063221cbad.png\" data-lens-id=\"1217807895150120960\"><img class=\"thumbnail\" src=\"https://pic4.zhimg.com/v2-ca1c0edf07973138efc020063221cbad.png\"><span class=\"content\"><span class=\"title\">汽车音响系统升级全面讲解<span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span><span class=\"url\"><span class=\"z-ico-video\"></span>https://www.zhihu.com/video/1217807895150120960</span></span></a><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/deng-yan-92?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">邓琰</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/110273421?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"为什么同排量的柴油车比汽油车省油？","date":"2022-03-17 12:57:53","description":"\n<p></p>\n<p><img src=\"https://pica.zhimg.com/v2-172fbbc24538757b174a63cf6356a380_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"231\" data-rawheight=\"246\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"g1BZlXvX\">汽油机和柴油机谁更省油？是大家一直关心的问题。柴油机比汽油机更省油，这是真的吗？原因是什么？为什么我国轿车绝大多数还是采用汽油机？汽油机又是如何提高其燃油经济性？下面我们一一作答。</p>\n<p data-pid=\"7vWFE-zi\"><b><i>记得关注我新开的专栏，每周会更新汽车类相关知识～～</i></b></p>\n<a href=\"https://www.zhihu.com/column/c_1411290542387294208\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-52a669542a8699d42a3c5796c7e536e9_l.jpg?source=b1748391\" data-image-width=\"200\" data-image-height=\"200\" class=\"internal\">车辆知识-进阶</a><hr>\n<h2><b><i>1</i></b></h2>\n<p data-pid=\"eJVY4xh3\">首先，我们来对比分析一下图1中数据。同为奔驰CLK双门跑车，270CDI车型装的是柴油机，240车型装的是汽油机。两个发动机的排量近似，最高车速和加速时间基本一致，而百公里燃油消耗量装柴油机的跑车为6.74（L/100km),装汽油机的跑车为10.8（L/100km)，柴油机比汽油机跑车节油37.6%。</p>\n<p><img src=\"https://pica.zhimg.com/v2-809cf53bb9ec6710bddd07d5dcbb959d_720w.jpg?source=b1748391?rss\" data-caption=\"图1 不同发动机的CLK双门跑车动力性和经济性对比\" data-size=\"normal\" data-rawwidth=\"973\" data-rawheight=\"552\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"grpn99QF\">  我们首先来看一下，汽车百公里油耗的计算公式：        </p>\n<p data-pid=\"EsrPRyu_\"><img src=\"https://www.zhihu.com/equation?tex=Qs+%3D+%5Cfrac%7BPb%7D%7B1.02u_%7Ba%7D%5Cgamma%7D\" alt=\"Qs = \\frac{Pb}{1.02u_{a}\\gamma}\" eeimg=\"1\"></p>\n<p data-pid=\"NR4nSdNf\">式中，b燃油消耗率为发动机每发出一个单位有效功(kw.h)所需要的燃油消耗量(g/kwh)；P为发动机实际发出的功率，ua为汽车的车速，为燃油的重度。发动机实际发出的功率等于传动系损失功率和汽车行驶时的阻力功率之和。即：</p>\n<p data-pid=\"BR4AQYRE\"><img src=\"https://www.zhihu.com/equation?tex=P+%3D+%5Cfrac%7B1%7D%7B%5Ceta_%7BT%7D%7D%28P_%7Bf%7D+%2B+P_%7Bw%7D%29%3D+%5Cfrac%7B1%7D%7B%5Ceta_%7BT%7D%7D%28%5Cfrac%7BF_%7Bf%7Du_%7Ba%7D%7D%7B3600%7D%2B%5Cfrac%7BF_%7Bw%7Du_%7Ba%7D%7D%7B3600%7D%29\" alt=\"P = \\frac{1}{\\eta_{T}}(P_{f} + P_{w})= \\frac{1}{\\eta_{T}}(\\frac{F_{f}u_{a}}{3600}+\\frac{F_{w}u_{a}}{3600})\" eeimg=\"1\"></p>\n<p data-pid=\"PyAdq6FX\">将其带入（1）式，得到：       </p>\n<p data-pid=\"Rt2huZQN\"><img src=\"https://www.zhihu.com/equation?tex=Qs%3D%5Cfrac%7BFb%7D%7B3672%5Ceta_%7BT%7D%7D%3DC%5Ccdot%5Cfrac%7BFb%7D%7B%5Ceta_%7BT%7D%7D%28L%2F100km%29\" alt=\"Qs=\\frac{Fb}{3672\\eta_{T}}=C\\cdot\\frac{Fb}{\\eta_{T}}(L/100km)\" eeimg=\"1\"> (2)</p>\n<p data-pid=\"RCRgy2hn\">由（2）式可知，汽车的百公里油耗与汽车的行驶阻力F、发动机燃油消耗率b和传动系统的机械效率T有关。行驶阻力F取决于车重、车速与汽车的外部造型、道路条件等因素；发动机燃油消耗率b主要取决于发动机种类、设计和制造水平、使用负荷率；效率T取决于特定的结构和使用时的调整和保养。不难得出图1中两车油耗差异的关键在于发动机的不同，柴油机的燃油消耗率b更小一些。</p>\n<h2><b><i>2</i></b></h2>\n<p data-pid=\"7kZcg3sd\">为了比较汽油机和柴油机的油耗，下面将标定功率、转速接近的汽油机和柴油机负荷特性曲线进行对比，如图2所示。可以看出：</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-847533c5fb6fb3e5026ac89417e725b1_720w.jpg?source=b1748391?rss\" data-caption=\"图2 汽、柴油机负荷特性曲线的对比\" data-size=\"normal\" data-rawwidth=\"544\" data-rawheight=\"504\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<ol><li data-pid=\"L31FrI9q\">汽油机的有效燃料消耗率（be）比同负荷的柴油机高，这是由于两种机型的混合气形成、着火燃烧以及负荷调节方式不同造成的。</li></ol>\n<p data-pid=\"VpwpGYKv\">汽油的沸点低，蒸发性好，因而在常温或稍加热的条件下易于在缸内与空气形成预制均匀混合气；而柴油的沸点高达180-360℃，不适合缸外预混合，即使加热后能在缸外气化混合，也因加热造成空气密度下降而减少进入气缸的充量，并且额外消耗加热所需的能量。</p>\n<p data-pid=\"FVBr_f-v\">汽油机若进行预制混合气压燃，由于同时着火，压力升高率过高，近于爆炸，这是不允许的，因此适合采用先在火花塞附近高温处着火，然后在混合气中进行火焰传播燃烧。柴油的着火温度较低，在初期着火燃烧后，紧接着进行边喷油、边气化、边混合的扩散燃烧。柴油适合压燃，在喷雾条件下的点燃难度大，也无必要。</p>\n<p data-pid=\"q4T1s5Ki\">混合气形成方式的差异带来了负荷调节方式的不同。汽油均匀混合气能点燃的过量空气系数（0.4-1.4）较小，一般靠改变节气门的开度，控制混合气进气量来调节负荷，这种方式称为负荷的量调节。柴油机在循环喷油量较大的变化范围内，喷束内都有适合着火的混合气，因此柴油机在较大的平均过量空气系数范围内都可以压燃着火，所以可以体靠循环喷油量的多少来调节负荷。由于循环进气量基本不变，依靠改变喷油量，即改变平均的过量空气系数来调节负荷的方式，称为负荷的质调节。对汽油机来说，其负荷是通过节气门控制的，当节气门半开时，进入发动机的空气会有阻力，这称为泵气损失，也是降低汽油机热效率的一个因素。柴油机没有节气门，没有泵气损失。</p>\n<ol><li data-pid=\"CtXeVTT1\">中低负荷区be的差值明显比最低油耗点和标定功率点大，如图△be1&gt;△be2&gt;△bemin.因为汽油机的be曲线过于陡尖，而柴油机的be曲线有较宽平坦段。</li></ol>\n<p data-pid=\"k7wxYx7X\">由于混合气形成、负荷调节方式不同，汽油机的负荷越低，过量空气系数越小，汽油机是量调节负荷，负荷越低，进气量越少，残余废气系数越高，会使汽油机的燃烧速度降低，热效率下降。而柴油机是质调节负荷，低负荷时过量空气系数增大，柴油机的残余废气系数在低负荷变化时大致维持不变。这样汽、柴油机低负荷时的工质温度差别很显著，引起两者热效率的差距加大。</p>\n<p data-pid=\"D8mZqQzu\">在高负荷条件下，汽油机的混合气较浓，过量空气系数 =0.8-1.0，而柴油机的平均过量空气系数=1.3-2.0，混合气总体偏稀。汽油机的压缩比虽然较低，但由于混合气较浓而且等容度也较高，所以它的最高燃烧温度反而比柴油机高很多; 此外，汽油机的残余废气系数比柴油机高。以上两方面的原因，使得汽油机的等熵指数比上柴油机小，高温热分解作用加剧，使得汽油机的热效率相对于理论循环的下降幅度远大于柴油机。</p>\n<p data-pid=\"OOoucWFY\">统计资料表明，汽、柴油机的最低燃料消耗率bemin差值约15%-30%，而综合使用油耗的差值可达25%-45%，这是由于汽车大部分时间在中、低负荷工况下运行所致。由上可知，若单纯从燃油经济性考虑进行汽车动力的选择，柴油机优于汽油机。实际选配发动机时，无论是汽油机还是柴油机，都希望尽可能提高负荷率，使其经常接近最经济的80%～90%负荷率区工作（万有特性图3中涂色区域）。这一点对汽油机尤为重要。提高运行负荷率已成为改善发动机燃油经济性、降低实际使用油耗的一个极为重要的原则。</p>\n<p><br></p>\n<p><img src=\"https://pica.zhimg.com/v2-879613a0090336828ba6a640feedb34b_720w.jpg?source=b1748391?rss\" data-caption=\"图3 轿车汽、柴油机万有特性曲线 \" data-size=\"normal\" data-rawwidth=\"532\" data-rawheight=\"289\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h2><b><i>3</i></b></h2>\n<p data-pid=\"mhvQAqpq\">尽管柴油机比汽油机省油，但汽油轿车目前占中国轿车市场主要份额。汽油机的热效率是低于柴油机，不过其成本低，且在中国汽油供应比柴油充足，升功率高、重量轻、后处理技术较成熟。柴油机在轿车使用不多，与我国柴油品质也有很大关系。提高汽油机部分负荷热效率的主要途径如下：</p>\n<p data-pid=\"XUOdHYoj\"><b>1）提高进气压力来降低泵气损失。</b>采用可变气门定时或可变升程机构、均匀混合直喷与可变气门定时结合、废气再循环、稀燃、分层燃烧缸内直喷、各缸进气道节流等技术。其中“软喷射”或称“喷雾 引导”型分层燃烧缸内直喷汽油可提高汽车在规定运行工况的平均燃油效率近15%。 </p>\n<p data-pid=\"cn3ySvRY\"><b>2）避免或减少发动机在低效率的低负荷工况区工作。</b>包括采用部分气缸停缸技术、发动机启停技术、变冲程数发动机减小排量、增压减小发动机排量等。其中直喷增压减小排量后汽车平均燃油效率可提高 10% 以上。混合动力汽车的引入，是减少发动机在低负荷工况工作区的有效措施。 </p>\n<p data-pid=\"xcPLyTra\"><b>3）其它节油措施   </b>包括改进结构设计和各运动副的摩擦来降低机械摩擦损失、控制润滑油粘度和温度、排气热量利用、冷起动时用排气加热进气、冷却水温控制提高机体温度、可变压缩比机构、可变排量机油泵、电动水泵、低负荷工况冷却水节流、电动风扇、高效电机等，都能不同程度地降低油耗。</p>\n<p><br></p>\n<p data-pid=\"iWT0U1Q5\"><b>结束语：</b></p>\n<p data-pid=\"3HYTZgc2\">目前能源、互联、智能革命正在为汽车产业创新发展注入强劲活力，传统内燃机汽车向新能源汽车转变，互联化和智能化相辅相成，这些将带来汽车动力的深刻改变。</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/green-49-75?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">飞行员绿师傅</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/21044512/answer/2393587827?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">16 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/330859414?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">柴油车真的很省油吗？</a><br><a href=\"http://www.zhihu.com/question/38226190?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">涡轮增压有什么缺点？大排量和小排量涡轮增压哪个省油更明显？</a><br>\n","link":"http://www.zhihu.com/question/21044512/answer/2393587827?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"为什么 4S 店保养一次要三四个小时？","date":"2022-03-17 12:20:32","description":"\n<h3><b>去4S店保养要不要排队取决于这个品牌在当地的店多不多、保养时间段以及工位数量和机修师傅数量</b></h3>\n<p data-pid=\"3R8CrM1K\"><b>1、当地4S店数量</b></p>\n<p data-pid=\"0C_i9F3J\">举个讴歌的例子，有的地方只有省会城市有一两家店，那么这一两家店就要承担本市以及周边城市车主的保养需求，再加上免费保养（跟题主奥迪送的基础保养一样），即便路程远，也有部分车主会跑到4S店保养，这就会导致保养时间过长。</p>\n<p data-pid=\"3uu30jsQ\"><b>2、保养时间段</b></p>\n<p data-pid=\"uW8nyIw8\">去的时间段也会影响保养时间，如果不想等太久，建议在工作日的早上早点去，跟4S店售后人员打好招呼，把钥匙留给4S店值班人员或者门卫，基本上中午就可以过来拿车了。或者在去之前先打电话问4S店工位情况，也可以提前预约，有的4S店预约还会有工时费折扣。</p>\n<p><img src=\"https://pica.zhimg.com/v2-422744f3c5fcd64a7f1195b40d2c8dc4_720w.jpg?source=b1748391?rss\" data-caption=\"图片来源于网络，侵删\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"446\" data-watermark=\"watermark\" data-original-src=\"v2-422744f3c5fcd64a7f1195b40d2c8dc4\" data-watermark-src=\"v2-84d04119f0f2fe99578355c87d83322a\" data-private-watermark-src=\"v2-9811b4dce6948fdb7cc0c8a3b7edac4f\"></p>\n<p data-pid=\"jT7CmGWm\"><b>3、工位以及机修师傅数量</b></p>\n<p data-pid=\"tFOIHA0X\">机修师傅分为大、中、小工，小工就是学徒，从啥也不懂到能够独立做保养（更换机油、机滤）只需半年时间，一般一个维修小组就是1个中工或者大师傅带2~3个小工，负责2~3个工位的保养，保养基本上都是小工在做，工位多，机修师傅多当然就做的快，反之就慢。</p>\n<p data-pid=\"RmBNbGYG\">如果不想等待时间太长也可以去工位多，师傅多的4S店。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-45003dd9b115db546d62422a7e3acb47_720w.jpg?source=b1748391?rss\" data-caption=\"图片来源于网络，侵删\" data-size=\"normal\" data-rawwidth=\"550\" data-rawheight=\"354\" data-watermark=\"watermark\" data-original-src=\"v2-45003dd9b115db546d62422a7e3acb47\" data-watermark-src=\"v2-20ca495c33a1fa0b31e5695ccb245f8e\" data-private-watermark-src=\"v2-b475ec7e2120175e421169b3ffd96eba\"></p>\n<p data-pid=\"2fXVGd2k\"><b>机修师傅是怎么维修保养车辆的</b></p>\n<p data-pid=\"Kr7XQa2Y\">不论是4S店还是维修厂，白天和晚上机修师傅做的事情是不一样的，白天讲究快，就像饭店的翻台率一样，翻台的快，做的保养多才能赚钱，所以白天基本上都是在做保养。</p>\n<p data-pid=\"s-AuKgZz\">晚上下班之后没客户保养了，机修师傅就会处理一些比较麻烦的问题，比如偶发性故障和大修车辆，这类问题往往花费的时间比较多，所以会放到晚上来处理。</p>\n<p><br></p>\n<p data-pid=\"_J_Jyoh5\"><b>当然，如果真的图快，可以去专门做网约车保养的地方</b></p>\n<p data-pid=\"QBPYHeIt\">网约车师傅时间就是金钱，基本上半个小时到一个小时就可以做完保养，并且机油还相当便宜。弊端也很大，机修师傅没那么专业，为了图快全车检查也没那么到位，机油都是小牌子也不排除有的不法商家用假货。家用车真的要去的话可以自带机油，再出点工时费就行了。</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhang-xiao-5-34-17?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">张立晨</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/341386481/answer/2394154747?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">11 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/475043709?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">一般情况下，保养汽车需要预约吗？我可以随时去 4S 店换机油吗？</a><br><a href=\"http://www.zhihu.com/question/35270482?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">上门保养汽车那种，不升起汽车能放干净机油么？</a><br>\n","link":"http://www.zhihu.com/question/341386481/answer/2394154747?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"新玩意 098｜少数派的作者们最近买了啥？","date":"2022-03-17 08:57:54","description":"这个世界上还是有插入设备时不必全部重新连接的多口充电器。<a href=\"https://sspai.com/post/72116\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72116"},{"title":"看起来很快的 Wi-Fi 看视频老是需要缓冲？家庭 Wi-Fi 优化指南","date":"2022-03-17 08:00:00","description":"速度快的 Wi-Fi 并不一定是好 Wi-Fi，跟着本文做你也可以辨别一个 Wi-Fi 的质量到底怎么样以及如何优化家庭中的 Wi-Fi。<a href=\"https://sspai.com/post/72111\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72111"},{"title":"与你共创下一个十年：少数派共创体系更新","date":"2022-03-17 06:46:52","description":"在少数派迎来十周年之际，我们对现有的投稿流程和奖励方案做了全新升级，用更优厚的回报和更规范的流程，与作者们一起迎接下一个十年。<a href=\"https://sspai.com/post/72089\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72089"},{"title":"什么样的工具，才能算得上「学习工具」","date":"2022-03-17 06:30:01","description":"把大学当作通过「应试教育」筛选的奖赏，把中小学当作「为了进入大学」而必须的苦行，这种当代中国的流行观念，功属洪堡。虽然他必然也无法理解这种播下龙种生出跳蚤的事情。<a href=\"https://sspai.com/post/71823\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/71823"},{"title":"如何评价动画《万圣街》第三季？","date":"2022-03-17 05:01:48","description":"\n<h2>天使降临我身边：评《万圣街》第三季</h2>\n<p data-pid=\"mT2k1YtY\">by 乌合之子但愿君</p>\n<p data-pid=\"yWts4gnp\">要想将处在不同位面的神明妖怪放在同一世界观下，分子传媒在四部作品里采用了完全不同的涉及思路，《非人哉》是将其置于现代化生活中（非人公司也是万事屋），《有兽焉》是通过统一画风和作为化外之地的自然进行承载，《不小心变成野怪》是通过一个名为天青游戏的世界观将其统摄起来。</p>\n<p data-pid=\"G2G2yNLf\">而《万圣街》则采用了更加简单的异空间拼贴法，将不同种族的不同风格、不同职业的不同特质通过不同房间行程相互独立又相互关联的生活空间。在我前几个有关分子传媒系列的回答里就说过，《万圣街》不只是妖怪大集合，还是不同职业大集合（同时也是国家代表大集合），而《非人哉》则和具体职业一点关系都没有。</p>\n<table data-draft-node=\"block\" data-draft-type=\"table\" data-size=\"normal\" data-row-style=\"normal\"><tbody>\n<tr>\n<th>分子传媒漫画代表作</th>\n<th>异生物相处模式</th>\n<th>关联属性</th>\n</tr>\n<tr>\n<td>非人哉</td>\n<td>现代生活</td>\n<td>万事屋式的模糊职业</td>\n</tr>\n<tr>\n<td>万圣街1031</td>\n<td>共处一室</td>\n<td>相当具体的职业</td>\n</tr>\n<tr>\n<td>有兽焉</td>\n<td>自然山野</td>\n<td>自然形成的职业</td>\n</tr>\n<tr>\n<td>怎么办！我穿越成了最弱小野怪</td>\n<td>游戏世界</td>\n<td>由游戏给定的职业（属性）</td>\n</tr>\n</tbody></table>\n<p data-pid=\"5Wh5-ykn\"><a href=\"https://www.zhihu.com/question/498273149/answer/2219015631?utm_source=wechat_session&amp;utm_medium=social&amp;utm_oi=28802960850944&amp;utm_content=group1_myAnswer&amp;utm_campaign=shareopn\" class=\"internal\">有哪些对山海经/易经的运用令人眼前一亮的中国漫画/动画作品？</a> </p>\n<blockquote data-pid=\"Zs431j64\">《万圣街》的角色的自然属性设定，都是外国（不一定是西方）的妖魔鬼怪，比如地狱的恶魔尼克、包泥泥；天堂的林恩、莉莉；吸血鬼艾勒、狼人大毛、木乃伊阿布、僵尸小陆等，具体名字都有英文对应词，可以看《万圣街》的设定集。<br>在该作中，这些角色都不是特别需要化形术，因为他们的初始自然设定里就有人类的模样，很少出现非人类角色，比如猫又桃子和独角兽水晶。<br>《万圣街》的人物自然属性被能力化了，建立在能力适配的基础上，发展出对应的职业。结合职业和自然属性之间的反差，形成幽默感。</blockquote>\n<p data-pid=\"5dM-vI2q\">《万圣街》有一个看起来小叙事的主线，包泥泥和莉莉的双相恋爱故事。基于这条故事线上的发展，进而读者得以观察其他角色的反应完成日常叙事。其他角色的出场往往是随机的，然后由这个随机事件与其他相遇。在《万圣街》漫画里，恋爱或磕CP是经常出现的设定，读者甚至能看出不止一对关系密切的角色搭配，比如之前有独角兽和海豹的百合，有吸血鬼和蚊子的爱情。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-e50c7c06fe6e8e26620f7710cc6e95e5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"389\" data-watermark=\"original\" data-original-src=\"v2-e50c7c06fe6e8e26620f7710cc6e95e5\" data-watermark-src=\"v2-d5cf8a662de66266a4ac660e5090095c\" data-private-watermark-src=\"v2-9a4ffcf2db9d005240ca83da0d434939\"></p>\n<p data-pid=\"d7r4ol7_\">在前两季动画作品里，其他角色的恋爱线被尽可能简化，所有角色能出现在1031里，都是因为包泥泥。因为包泥泥作为魔王容器的关系，每个角色都成为对包泥泥的观察者，他们彼此之间会给自己所在的种族交换讯息（除了最后一集发现都是观察者之外），只有包泥泥自己是不知情的。</p>\n<p data-pid=\"sl5KRltv\">于是这就形成一种大叙事和日常叙事之间的反差撕裂。动画的观众难以完全享受日常相处模式中各位角色之间的生活互动，而是会带有“观看癖\"scopophilia的紧张感。这种观看癖与其说是动画原创的，不如说是从《有兽焉》移植过来的。毕竟《有兽焉》的大叙事与日常叙事之间的撕扯更加明显。</p>\n<p data-pid=\"P7YzDPv2\">魔王是什么样的存在？是一个集所有妖怪种族之力都无法打败的终极武器。虽然魔王附身了很多个恶魔，但他并没有“毁灭世界”的想法，只是想睡个好觉而已。其他妖怪种族都完全不会理解魔王这样朴素的愿望，而是给他加上了更多宏大叙事的特质，这才引发了妖怪界的数次大危机。</p>\n<p data-pid=\"Zs193qbK\">这个剧情设定本身就非常<b>后现代</b>。这种极其微不足道、细枝末节的理由成为整个严肃作品的本质命题，想必看过《Legal High》第一季大结局的观众有非常深刻的印象。</p>\n<p data-pid=\"zj6cXoIl\">但是终极对战还是无法避免。一般而言，作品会停留在吐槽役角色哑然失笑作为结束。但是包泥泥采用了另一种方式：用后现代解决后现代。第二季的终焉，包泥泥用“演戏”的方式，让魔王和其他妖怪种族的最后大对战以<b>拟像</b>的方式落下帷幕，顺利解决了大危机，最后魔王成为包泥泥的共生者。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-bda267139a2509d31a5b78f2e694368f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"1008\" data-watermark=\"original\" data-original-src=\"v2-bda267139a2509d31a5b78f2e694368f\" data-watermark-src=\"v2-f5cc61f0dfb1d7a8ef87ce9e24c90261\" data-private-watermark-src=\"v2-a08d84ea8fb3e10f202d4cb0b3d88cb1\"></p>\n<p data-pid=\"2R5U0FN1\">这个场景非常符合鲍德里亚所说的超真实的第三序列：幻象之外的幻象。而第三季的结局，正如主创所说，又是一场舞台剧，包泥泥将扮演魔王。只不过这次真的众人合力完成的演戏，而不再是真实的战斗。不知道会不会唤醒观众对《天使降临我身边》最后一集的感觉。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-6df1de4b43c4829b7edad792c61e66c8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"367\" data-watermark=\"original\" data-original-src=\"v2-6df1de4b43c4829b7edad792c61e66c8\" data-watermark-src=\"v2-a94cfc077b0801b060b65381a431b77c\" data-private-watermark-src=\"v2-7dd80ef0390fecede5b501dae36e87b6\"></p>\n<p data-pid=\"6xniT4IM\">我们说世界系作品有一个特点，<b>主人公谈恋爱≈拯救世界</b>。更展开的说，就是主角的情感变化和周遭世界的变化密切相关，这种变化是处在个人和世界之间的<b>社会</b>无法改变的。而在第三季里，既然拯救世界已经完成，那么恋爱修罗场就会开场。</p>\n<p data-pid=\"HakkVpDm\">于是第三季开端，魔王开始关心起包泥泥的恋爱问题，包泥泥和莉莉之间各色相关的情感人物逐一登场，首次出场的就是天使伊万。在漫画里，围绕两人情感的人物还有很多，罗斯、萨莎、伊万等不胜枚举。</p>\n<p data-pid=\"ZIlMiu0j\">而包泥泥和莉莉的恋爱关系一直处于”被隐藏的状态“，正与魔王的被隐藏的状态相一致（形成强烈互文），虽然魔王说包泥泥对莉莉的”心跳加快“是恶魔对天使的生理反应。</p>\n<p data-pid=\"5FjFKEpc\">所有人都知道魔王在包泥泥体内，只有包泥泥自己不知道（直到第二季大结局）。即便他知道了，也没有产生背叛感和失落感，反而认为这就是一种关心。到第三季，这种情况发生了翻转。所有人都认为魔王已经被击败了，只有包泥泥在保护魔王继续生活——他的使命似乎依然还是拯救世界，通过把自己活成普通人的方式保护世界。</p>\n<p data-pid=\"ZsVGMYWl\">同样的，所有人都看得出来包泥泥和莉莉的双箭头好感，林老师的恨意也完全掩盖不住（在水族馆瀑布的时候，包泥泥的小心思又被林老师发现了）。但他们之间确定恋爱关系却是私下进行的，大家都认为是”追，但是没有追到“。</p>\n<p data-pid=\"1C23MhT7\">目前重头戏的两集，就是林恩和包泥泥的额外感情线。前有林恩与九月甜蜜大约会，后有包泥泥吃醋伊万喜被追求。三人修罗场就是好看。</p>\n<p data-pid=\"RO9-vOs_\">当然恋爱不只出现在两人之间，还出现各角色之间。漫画里几乎每个主要角色都有CP，CP有时还会混搭。这说明漫画的核心驱动其实就是彼此相处的情感，这份感情会一直被维持在“半糖主义”上。</p>\n<p data-pid=\"Yzm7yjXK\">万圣街的相处模式让我想起尼科尔·桑德曼（Nicole Sonderman）的一句话<b>：比起自己，我们更关心彼此</b>。需要知道的是，万圣街生活的妖怪们，他们的身影出现在文学作品里，大多是18世纪前后。比起《非人哉》的妖怪神明来说，是<b>非常现代的</b>生物。而18世纪前后对感情的态度，正是一种热情、忠诚、跨越性别的鼎盛时期，这些情感被统称为“<b>romantic friendship</b>”。玛格丽特·福尔滕（Margaretta Forten）就写下了一首诗的节选，其结尾是这样的：“<b>美好的友谊联聚起整座天穹/因为天堂里的爱和友谊相同。”</b></p>\n<hr>\n<p data-pid=\"6ndQ1cdA\">最后，再说一下《万圣街》和观众的视角关系。</p>\n<p data-pid=\"696Zkctn\">在《非人哉》里，OP的结尾画面是神仙大合影加睡着的白泽。正如OP所唱的那样，“先人留下故事要不要继续”，非人哉的角色是古神们的现代化，观众是（和白泽一样的）旁观者，是好奇神仙故事在新时代的变化，<b>虽然漫画都是重复格</b>，但动画中的大量镜头都是从某个已有角色的视线里发出的。</p>\n<p data-pid=\"1KWBA9QS\">而在《万圣街》里，OP的结尾画面是包泥泥关上1031房门号的房间。OP里唱的是“一起看才最好笑”。这里的一起，当然也包括观众。虽然<b>漫画都是重复格</b>，但在动画里，大量镜头都是从观众视线出发的，正反打镜头的部分反而变得很少。这种视线交错，会给人带来一个错觉，观众就住在1031的某一个房间里，和大家一起生活。</p>\n<p data-pid=\"cCxaIbGv\">在标题对应上也是如此。</p>\n<p data-pid=\"UqF-DoIq\">《怎么办！我成为了最弱小野怪》需要单独拿出来说。这是非常典型的日式轻小说取名法。虽然题目表达了身处异世界的疑惑，但作为骷髅的东东很快熟知了游戏的运行模式，并且凭借自己多次玩游戏积累的经验，不断试错并一步步逆袭。也就是说这部作品的主角本身是游戏性的，带有丰富经验的（可以随时调取的读档与存档）。同时也更接近于<b>元宇宙</b>的。从某种意义上说，”异世界-游戏-元宇宙“模式下的作品，是高度类型化的。中国漫画这么画，日本漫画这么画，美国漫画也这么画。韩国漫画就不这么画了吗？也这么画。我心中的神作<b> 《四格勇士：拯救世界后不是应该娶公主吗？》</b>也完全遵循这个思路。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ff435205eea2a99ad68f0644cda855d1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"546\" data-watermark=\"original\" data-original-src=\"v2-ff435205eea2a99ad68f0644cda855d1\" data-watermark-src=\"v2-38df17d559fbdc606b660f937fe9dd39\" data-private-watermark-src=\"v2-ae2a15432bcd69ccb9bb71306ca2a7bb\"></p>\n<p data-pid=\"E8aakOO0\">除开这部作品外，回到分子传媒三个支柱漫画，我们就能发现，只有《万圣街1031》是有后缀的，后缀名为房门号。</p>\n<p data-pid=\"bfE7ICLJ\">万圣街的布局结构是内生和连绵的。说它内生，是因为1031房的各房间可以被分为是向内嵌套并各自独立的状态。比如艾勒、阿布和小陆同样是”已死的生物“，但他们沉睡的床都各有千秋。说它连绵，是因为既然有1031，就可以有1032（动画第三季出场的猫又桃子）、1033、1034。当然也可以有2031、2032......甚至可以落到”街“上。我们都知道中国有”街道办“的说法，在万圣街小区里也可以看到有各种高楼（10就是十楼），这些楼宇之间还可以塞进更多的故事。</p>\n<p data-pid=\"LIwdMvNR\">比如随时增加的新人物，大毛的家人（你们住哪里呀？）、包泥泥和尼克的家人（另一个小区）、死神阿克和他的忠实管家（也不知道是败犬还是忠犬）......所以完全不用担心《万圣街1031》有完结的一天，主创可能会停笔，但故事可能性要被挖掘完，恐怕是难上加难，说不定连载十年都是大有可能。</p>\n<p data-pid=\"xAko_VNw\">而且《万圣街1031》试出了一条日常搞笑动画的可能性，即在完全没有主线叙事的前提下造出一条主线叙事，并且这条主线叙事不会干扰搞笑互动的本质。所以观众既可以为包泥泥的魔王处境感到担忧，也可以为1031中相处的各位日常互动感到温馨。而另一个相左的例子是《有兽焉》，等动画上映，我再具体展开吧。</p>\n<p data-pid=\"C5Cz6-TG\">~全文完~</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/dandoliya?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">乌合之子但愿君</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/522130609/answer/2392674961?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">9 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/384567114?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价动画《万圣街》？</a><br><a href=\"http://www.zhihu.com/question/382432820?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价璀璨星空动画《京剧猫之脚踏实地》？</a><br>\n","link":"http://www.zhihu.com/question/522130609/answer/2392674961?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价《画江湖之不良人》第5季第10集？","date":"2022-03-17 04:59:15","description":"\n<p data-pid=\"6yH7Ekf4\">大好我鱼今十。<br><br>在规划五六两季故事之初，老李决定踏上大帅之路，就注定这崎岖一路会布满荆棘流沙，会划伤你会吞噬你，而与你并肩的人也会和你一样，一样穿越流沙荆棘。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-2d0b913b021de11857c4e4728b593a82_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"5118\" data-rawheight=\"2126\" data-watermark=\"watermark\" data-original-src=\"v2-2d0b913b021de11857c4e4728b593a82\" data-watermark-src=\"v2-f32263f6ab3e2c9a13149122b6b84f29\" data-private-watermark-src=\"v2-9150f7687cefe19d50f84867f5e99ab8\"></p>\n<p data-pid=\"_BMMbPu6\"><br>成为不良帅不是说说就可以的，你需要付出难以想象的代价，而对于如今的老李，就算直面死亡也不再会皱下眉头，他的软肋，是他在乎的人，他最怕的，是保护不了他在乎的人。我们本可以让他的路次次化险为夷如有神助，同样可以很爽很燃，但他的背负他的选择，袁天罡三百年的坚持，各方诸侯的血与火，无数的牺牲让这一切无比真实、深沉，李星云想打破这一切就必须面对可能发生的任何后果。<br></p>\n<p data-pid=\"fjym9C6j\"><br>不良人世界的故事就是这么一季一季演变而来，也许这就是原创的魅力所在，我们从来不是站在上帝视角去推演，我们创造角色，再从角色出发做出选择，在老李老张走上各自的路，除了姬如雪和陆林轩，第一时间会出现在李星云身边的，就是上官云阙和温韬。老李一直很自信，他没有一味的霸道而是选择用自己的方式解决问题，他现在很强，但强如袁天罡也无法保护所有人，上官和一众不良人，用自己的生命告诉了老李，你要走的路远比你想象中的艰辛痛苦。<br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-04531c92f740572e089767fd5af79e5d_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"5118\" data-rawheight=\"2128\" data-watermark=\"watermark\" data-original-src=\"v2-04531c92f740572e089767fd5af79e5d\" data-watermark-src=\"v2-7505a5565378cfed61ead32d025c8fa1\" data-private-watermark-src=\"v2-5ad0c43e80a7da2c45982f423cf0a1a4\"></p>\n<p data-pid=\"XhjVq5B_\"><br>第十集与我而言又是一个新的挑战，因为第十集有一首专属的插曲，本身有一个月的时间可以打磨歌曲，但临时跳集制作打破了一切，更可怕的是一开始选择的歌手因为一些原因泡汤了，只有一周的时间就要进第十集了，歌曲必须就位，一切都要从头开始，那段时间我真的是崩溃……<br><br><br>我们没有用成品的歌曲的先例，都是要为剧情量身定制，但要知道只有一周的时间，哪怕只要demo基本也不会有团队愿意接的，太赶了。感谢高老师用最快的时间帮我联系到了S.A.G的谭哥和制作人超哥，这个节骨眼只有你们回应了我们！谢谢你们！还记得当天下午我就跑到你们公司，谭哥反复和超哥强调，时间太赶了，兜不住就不要接，但超哥在跟我深入交流后毅然决然的接下了，让我迎来了曙光。在和超哥的交流中，我推翻了最早选择的参考歌曲，因为我听到了一首让我觉得无比契合的歌曲，昨夜派对的《玫瑰往事》，这也是我噩梦的开始。<br></p>\n<p data-pid=\"V42GOoR4\"><br>哪有什么一帆风顺，一周的时间过去了，歌曲demo并没有达到我的要求，不得已我下了也不得不下的一步错棋，用《玫瑰往事》来定剪第十集。之所以选择这首歌曲，是因为上官真的很像玫瑰啊，上官的离去是悲伤的但正因为如此我更不想去矫情的用一首悲曲去书写，上官的离去最伤的是老李，但凡上官还有力气他也会亲自动手不会让老李沾满鲜血。但事与愿违，世界以痛吻之，报之以歌，至少还有你送我一程。所以我想要一首温暖多过忧伤的歌来作告别，而一切的温馨都是李星云压抑的情绪，我还需要一段间奏去爆发。上官那一剑对老李的伤不是最重的，最重的伤是老李自己给的，老李做不到毫无反应，在他倒下的那一刻，是那个永远都会接住他的女人，就像片头中一样，不会放手。姬如雪可以感受老李的痛，这一切无需多言，厮杀奔命中释放情绪，美丽的麦田是他们无法到达的彼岸，金色的麦穗其实是飞射的弩箭，遮天的乌云伴随着是无数铁蹄的轰鸣，只剩下无尽的奔跑……<br></p>\n<p><img src=\"https://pica.zhimg.com/v2-20ca1a0296b49e7d32fa28c86b05dfae_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"5114\" data-rawheight=\"2128\" data-watermark=\"watermark\" data-original-src=\"v2-20ca1a0296b49e7d32fa28c86b05dfae\" data-watermark-src=\"v2-8d44736789313f93328f238ca56f9b68\" data-private-watermark-src=\"v2-7cc6760f4168c42720a16020539c154d\"></p>\n<p data-pid=\"xgquDVWS\"><br>然而结果就是，我掉到《玫瑰往事》中出不来了，我不愿再折磨制作人停掉了新歌，开始跑《玫瑰往事》的版权，几经波折，最终版权方给了一个不能再低的价格，但预算依旧不够，我自费也被制止。可能我陷的太深，不愿妥协；新歌是对着画面打造的，它是合适的，这是我再次来到新歌的录音室才意识到的。<br></p>\n<p data-pid=\"_po2Wehq\"><br>再次感谢谭哥超哥，面对我这么轴的人，还把《玫瑰往事》的原唱二哥找来了，二哥在看了画面后也愿意为新歌献唱。新歌的最后调整中，超哥看着画面一手吉他即兴solo一气呵成是真的爆炸，也算是让我第一次了解歌曲的创作过程！听着那句“往事焉能了”的时候，我突然感觉这一路兜兜转转都值了！还有个很有趣的事，新歌出来的时候我没起名字，他们问我叫什么，我想了想叫《孤岛》吧，作词的谭哥将最早的词稿发来，上面写着《孤岛》。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-dfb4e679d655fc9bb5ad4906e4c5be47_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1186\" data-rawheight=\"1568\" data-watermark=\"watermark\" data-original-src=\"v2-dfb4e679d655fc9bb5ad4906e4c5be47\" data-watermark-src=\"v2-e3a802c689dbca84895f0c95c7e76e9e\" data-private-watermark-src=\"v2-729d820556ede361843896db873cf414\"></p>\n<p data-pid=\"uw3V2Sg9\"><br><br>最后再说说我们的尸祖萤勾……第一集的时候我说了，阿姐不是尸祖…因为萤勾才是尸祖呀doge（我跟你们讲若森导演的话一个字都不要信）。其实从一开始我就没打算藏萤勾，我们应要求单出阿姐的人物小传外加阿姐这么多戏份她怎么可能只单纯是个小神经呢，所以片头中的群像中大家能发现有一个红眼睛的阿姐，我还特意放在侯卿前面（当然我们前段时间也自爆了~）。而侯卿老弟之所以一直躲着阿姐就是因为他和阿姐之间有一笔血仇，很是冤孽，下集会讲。侯卿的演员王凯老师来录音的时候，听了“他姐”的陕西腔，“突发恶疾”硬是要我给他录了版陕西腔的，不过实在是让我出戏，我看看以后有没有机会用一下。还有第三集时阿姐形容了一下自己三位“弟弟”，嗯，有真有假跟我们一样。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d14ea82cab96a6c8b9c41b0f35486b00_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"5114\" data-rawheight=\"2130\" data-watermark=\"watermark\" data-original-src=\"v2-d14ea82cab96a6c8b9c41b0f35486b00\" data-watermark-src=\"v2-c3d2c128bf8ea720489d6d0d602ae92f\" data-private-watermark-src=\"v2-0d8a0f3dd19eac052e9ff41eeb5b46ff\"></p>\n<p data-pid=\"NPZkoF4Q\"><br>下集见。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/qiu-dao-yu-5-64?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">十万个秋刀鱼</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/522413482/answer/2393409920?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">250 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/517086941?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价《画江湖之不良人》第 5 季第 8 集？</a><br><a href=\"http://www.zhihu.com/question/519756214?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价《画江湖之不良人》第 5 季的第 8集？</a><br>\n","link":"http://www.zhihu.com/question/522413482/answer/2393409920?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"标准意义上的「平板电脑」——第五代 iPad Air 使用体验","date":"2022-03-17 02:49:18","description":"能让生活变得开心和充实，这就是一部好设备存在的意义。<a href=\"https://sspai.com/post/72104\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72104"},{"title":"派早报：华为召开春季新品发布会、moto 30 系列推出新品等","date":"2022-03-17 00:45:13","description":"Google 公布 2022 年 I/O 大会举办日、2022 全球隐私计算专利排行榜发布等。<a href=\"https://sspai.com/post/72108\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72108"},{"title":"叉工评昂克赛拉：吾之砒霜，吾老婆之蜜糖","date":"2022-03-16 09:38:20","description":"\n<p data-pid=\"BjTnhg1w\">太长不看：</p>\n<p data-pid=\"htS0EbBQ\">次世代马自达3昂克赛拉，好看，好开，经济易用。</p>\n<p data-pid=\"_7TAmlUP\">次世代马自达3昂克塞车啦，简陋，减毒，操稳不行。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-811b42897ec46261e6bc567f60925553_b.jpg\" data-rawwidth=\"4032\" data-rawheight=\"3024\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"4032\" data-original=\"https://pic4.zhimg.com/v2-811b42897ec46261e6bc567f60925553_r.jpg\"></figure><p data-pid=\"FCkEIPmY\">——正文——</p>\n<p data-pid=\"DnB70U36\">马自达那些宣传册，我觉得看看图片就行了，喜欢外观就可以无脑冲。你要是看了文字，会对它的行驶性能有过多期待，到时候再开上车，我怕你感情受伤。</p>\n<p data-pid=\"C70OJrV4\">如果你是冲着操控性口碑去买atarashi昂克赛拉，那请千万冷静，建议先去试试4008或者十一代思域再下单。</p>\n<p data-pid=\"tOaVHCub\">如果你开车比较老实，从不超速，又看重颜值和实用性，这车非常适合你。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"wWz14sxT\">——地毯式吐槽模式开启——</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>NVH: 4/5分</h3>\n<p data-pid=\"NMrU_7JS\">……NVH赞：</p>\n<p data-pid=\"wpJAVsMh\">对马自达来说，这一代NVH是确实有质的飞跃，我和我老婆一致认为震动噪声方面的舒适性好于我之前的宝马F20。关上窗几乎只剩轻轻哼的引擎声，如果不大脚油门的话。</p>\n<p data-pid=\"NLzcUdkP\">……NVH喷：</p>\n<p data-pid=\"1iOmEcV1\">引擎声浪质感有明显下降，以前的马自达，叫声是有节奏的、舒服愉悦的（羞），但现在这一代的声音有一种“演技不行”的既视感，不是那么令人兴奋。</p>\n<p data-pid=\"8EYdnzrM\">另外，在一些路面下，车厢内比较容易传入极低频的压耳声，声音不大但是闷沉的感觉也不舒服。据说极低频的声音隔绝需要依赖车身刚性，是否反映这车某些部位刚性不行？有NVH专家现身说法吗？</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>动力系统: 4.9/5分</h3>\n<p data-pid=\"ACX4UgFf\">……动力系统赞：</p>\n<p data-pid=\"tKkbNjh8\">驾驶性整体匹配非常恰当，整体上兼顾了平顺和迅速，这不仅得益于“厨师”的手艺好，而且也是自然吸气发动机瞬态扭矩大、转动惯量小的“食材”先天优势。</p>\n<p data-pid=\"096Py171\">如果只是在城市快速路里开车，你手中158马力的车开起来像有230马力，在限速范围内的短时间爆发动力的典型超车工况下，完全不觉得动力不够用。我以前开的是零百7.2秒的宝马，尚且需要提前降挡以应付超车工况，然而9秒的昂克赛拉不用切手动模式直接KickDown就能瞬间追进前车，这方面体验甚至好于184hp宝马。</p>\n<p data-pid=\"DZosbx6j\">……动力系统喷：</p>\n<p data-pid=\"YJm3Udat\">先澄清一点，我不认为它马力太小，因为不超速不飙车的话，这个2.0L动力是满足绝大部分驾驶需求的。</p>\n<p data-pid=\"gPdtp9Zc\">但动力系统标定还是明显还有点恼人的问题，首先低速区域的液力变矩器锁止控制比较粗糙，能听到转速莫名其妙飘来飘去，宝马同样也有多片式锁止离合器但宝马这方面就做得很细致；其次，这是一个足够敏捷但是不通人性的变速箱，宝马即使在同一个模式下，你开的节奏不同，它换挡早晚的时机（甚至离合器接合振动烈度）也会有变化，但这代昂克赛拉只是让转速尽力地追你的踏板，不论你节奏快还是慢，它都会软下来回到低转速。</p>\n<p data-pid=\"5MmaEM2x\">……动力系统总结：</p>\n<p data-pid=\"ja2ecB0X\">总体上，这套动力系统不是把钱花在了刀刃上，而是把钱花在了刀尖上，整体凑合用、亮点足够耀眼。工程师把大部分常用工况调平顺，再把Power-on-downshift调得很快，就下班了。什么轮端扭矩连续性，转速稳定性，不给加班费就不搞。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>外观：5/5分</h3>\n<p data-pid=\"7HLijuyx\">……外观赞：</p>\n<p data-pid=\"fqSdLXxm\">好！叉工不懂设计，但叉工觉得外观很优雅很酷。</p>\n<p data-pid=\"khWeSgSp\">……外观喷：</p>\n<p data-pid=\"ZLI3CxaD\">老婆说好就是好，不可以有疑问。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>操稳：2/5分</h3>\n<p data-pid=\"PEShyYCf\">……操稳赞：</p>\n<p data-pid=\"CMFjKHeJ\">营销应该大赞，操稳吹得很好，要不是我是调电控底盘的，我就真信了。</p>\n<p data-pid=\"_A-KsLkV\">……操稳喷：</p>\n<p data-pid=\"smTR5nsz\">首先最大的槽点是，高速下横摆响应偏“软”，而且“粘”。操稳好的车，在车速超过100kph之后，当驾驶员做快转向输入的时候，能感觉到车头的动作与方向盘的动作一致性很高——手一动，车头就动，手一停，车头也该马上停下。但是这昂克赛拉呢，好家伙，车头指向绵软，而且我手停了之后它车头又移动了半秒才停下来。这就导致如果我做一些钻缝超车之类的略高动态的工况，它的车态会明显拖沓，变道完成之后还会晃一小会，令人感觉车子不稳定。</p>\n<p data-pid=\"1x362QKC\">其次槽点是抢呔，继206之后我很少开到这么小扭矩也在抢呔的车了。它的转向助力系统似乎有抢呔补偿的功能，但动力在大开大合的过程里，还是有一些不平衡齿条力短暂地“漏”到了我的方向盘上，零散地传递到我的手上，导致方向盘力时大时小，非常恼人。</p>\n<p data-pid=\"V_QPPIgx\">最后的槽点稍微强人所难，即饱和区的转向手感。在侧偏力极限附近，有一种前轮才刚刚接近极限，转向系统就给我躺平了的感觉，关闭了跟我交流的大门。做得好的车，转向力与前轴侧向力的相关性要高，极限攻弯的时候前轴侧偏力什么时候衰减，什么方式都好，应该反馈到手上；但是昂克赛拉才刚刚接近侧向力极限，方向盘力就变模糊了，不再传递信息给我了，导致我也不知道该打多少方向让车子接近极限，反正就扔方向呗，人马一体都在梦中。</p>\n<p data-pid=\"UJdzZwiK\">……操稳总结：</p>\n<p data-pid=\"qw-YL18T\">说“中规中矩”真有点过喻了，在它的一众对手面前，马自达此前积累的操稳口碑，如今像是班门弄斧。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>驾驶辅助：4/5分</h3>\n<p data-pid=\"WsykSejS\">……驾驶辅助赞：</p>\n<p data-pid=\"umS1vinJ\">我买的顶配，驾驶辅助工作状态展示在HUD上，真是太方便了。我的手、脚、眼睛都很放松，眼睛的肌肉疲劳都缓解了，因为我甚至不需要让眼睛大范围变焦，就能跟驾驶辅助功能互动。香爆了朋友们。</p>\n<p data-pid=\"gCEch31a\">……驾驶辅助喷：</p>\n<p data-pid=\"-DT1okXe\">首先，60kph以上就不能开启车道居中是什么鬼呢？我懂了，车速高了之后你们自己的系统都没法控制好横摆吧，靠。</p>\n<p data-pid=\"9HWxBlcU\">其次，这个车道居中有时候很坑，有一次过路口，它居然顺着对向车道的左转待行道走，幸好我及时发现大力掰回来。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>服务：1/5分</h3>\n<p data-pid=\"uOjWr7bQ\">……服务赞：</p>\n<p data-pid=\"Y_oWeyV0\">不想赞只想喷。</p>\n<p data-pid=\"04nM26H-\">……服务喷：</p>\n<p data-pid=\"TTa-zNlW\">我遇到的销售的沟通还挺顺畅，买车前没有尽到的告知细节，买车后也尽可能帮我弄明白。但是长安马自达这个导航系统的售前售后真是太糟糕了，首先买了顶配之后我发现还是不能用导航，仔细研究宣传册发现一行小字，说要选购导航卡才能开通。</p>\n<p data-pid=\"DIPqZ86d\">好嘛，那我就选购导航卡，一问报价758元我一口老血。更令人惊愕的是，4S店和厂家都表示这个导航系统他们没法激活，非要激活的话他们帮我找黑客……等等，WTF，黑客？？？我眼前一黑。</p>\n<p data-pid=\"dQzK1yBX\">Carplay在悦联系统上的体验是很棒的，中控按钮跟Carplay的匹配互动可以说是完美。但叉工为啥非得钻原厂导航这个牛角尖呢，因为车机系统的鲁棒性要求是比较高的，可以作为备用导航系统在某些应急环境下使用。Iphone是一个非常不可靠的完蛋玩意，有一次我去大众三叔那儿面试，路上iphone晒过热了，重启之后就找不到信号了，然后叉工就迷路了，求此时叉工心理阴影面积。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>总分：4/5分</h3>\n<p data-pid=\"D43AxdHO\">……那为什么还要买昂克赛拉？</p>\n<p data-pid=\"RnzpvXVa\">原计划其实是买顶配标致R83的，设计、操控、舒适、空间和配置都满足需求。但是叉工过于任性，在订G42的时候选配了四万块钱，挤占了老婆购车预算，同时又不幸连续拍中两张沪牌，现金流可谓雪上加霜，给老婆的车就降级了。</p>\n<p data-pid=\"guhctCjG\">降级之后，想在15-20万价位找好看、好开、配置高的车，没几个能跟昂克赛拉打的。读者朋友们如果有话说，可以在评论区留言“为啥不买XXX”，我们可以互动一下理由。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/nitrodomi?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">NitroDomi叉工</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/481957955?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"报道称苹果汽车团队已解散，目前具体情况如何？你期待苹果汽车吗？","date":"2022-03-16 09:35:29","description":"\n<p data-pid=\"gcje1Vtc\"><b>最近也在研究苹果汽车，我相信苹果汽车一定会出来，只不过是时间问题！</b></p>\n<p data-pid=\"3DRXA-6s\"><b>前段时间坊间沸沸扬扬传的几个跟苹果的消息：</b></p>\n<p data-pid=\"-hUwrUrx\">1、苹果iPhone的制造供应商立讯精密和富士康都介入了电动汽车业务，为代工苹果汽车做准备；</p>\n<p data-pid=\"WFXLfKpY\">2、苹果汽车在跟CATL和BYD谈电池合作的事情；</p>\n<p data-pid=\"g03zX0Bj\">3、苹果汽车跟韩国现代等几家车企谈合作。</p>\n<p data-pid=\"21m7Rkp-\">虽然上面的消息都是坊间传闻，真实性难辨。但是通过这些传闻不难发现其中隐藏的逻辑：<b>苹果打算以苹果手机的开发模式开发和制造苹果汽车。</b></p>\n<p data-pid=\"nHccXaZX\">回到另外一个事情：<b>据传蔚来汽车、吉利汽车都在介入手机业务。</b>背后的逻辑是车企开始介入到生态链的建设中。（突然想到了乐视汽车的贾跃亭，哎！）那么，苹果在手机生态和用户生态上有这么强的先天优势，不介入智能化电动汽车的业务简直就是大逆不道！</p>\n<p data-pid=\"bcZi5ERL\"><b>现在造车最核心的问题：钱！</b>苹果公司不差钱，而且也在泰坦项目上投入了很多时间、成本和资源。</p>\n<p data-pid=\"8GEimyhx\">综上：<b>苹果既有钱，又已经在做很久了，又有先天的生态品牌优势，智能电动化又是不可逆的趋势……苹果公司没有理由不继续！</b></p>\n<p data-pid=\"YZgMI2Tb\"><b>那么，个人认为苹果汽车现在面临的问题有几个：</b></p>\n<p data-pid=\"t2BAh0L1\"><b>1、用户及行业的超预期期待。</b>几乎所有人都认为，苹果汽车一定是一个划时代的产品，包括我自己！那么在现在这个时间点，电动汽车能出现划时代的产品，其可拓展的大空间主要还是集中在自动驾驶上，但是当前的技术条件、道路状况、法律法规似乎都不利于这个空间的发挥。至于三电系统，很难有质的飞越。</p>\n<p data-pid=\"kmDA49dE\"><b>2、苹果汽车的定位。</b>以苹果手机为例，苹果汽车一定不会是一个平民产品，至少早期产品一定不是。那么当下推出电动汽车，在很多基建条件，用户电动化行为习惯都尚未完全激活的情况下，苹果汽车的推出，可以参考当下Model S/X和保时捷Taycan，不是很划算。</p>\n<p data-pid=\"wjnoJ20T\"><b>3、苹果汽车代工模式。</b>现在很多新老汽车企业，都在大跨步的杀入电动汽车行业和转型。就算是传统的车企，也在积极寻求转型。目前完全代工模式在电动汽车行业内还不够成熟。第三方代工厂比如富士康、立讯精密还在建设中；老的车企现代、宝马等这种汽车当下是决不甘心只做代工的；自建工厂对于苹果汽车来说资产投入过大，参考苹果手机制造模式不适用。</p>\n<p data-pid=\"6EMIjQKk\">综上：<b>这些问题都可以交给时间来解决。这也不难理解之前坊间传的苹果汽车从2024年发布，推迟到25年，甚至27年。哪怕是现在的汽车团队解散。再者说，解散也可以再重组！</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-8da40fd4e4d3f9bd1496b62cdcd1f6c7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"349\" data-watermark=\"watermark\" data-original-src=\"v2-8da40fd4e4d3f9bd1496b62cdcd1f6c7\" data-watermark-src=\"v2-8d79a3890238fbbfaef05d6274734cfb\" data-private-watermark-src=\"v2-97a77aad1a22cef621a1b2be54c2a7bf\"></p>\n<p data-pid=\"sAqtRgQN\"><b>最后，分享一下苹果造车的时间轴，期待苹果汽车的到来，总得有些不一样的期待吧！</b></p>\n<p data-pid=\"Y9ScCpzB\"><b>——————————</b></p>\n<p data-pid=\"Y6PX5MjG\"><b>2021</b></p>\n<p data-pid=\"PwtnujDu\">十二月</p>\n<ul>\n<li data-pid=\"uQLtbC92\">另外三名工程师离开航空创业公司</li>\n<li data-pid=\"fJMG6J5q\">工程高级总监离开航空初创公司</li>\n</ul>\n<p data-pid=\"B1AOMd86\">十一月</p>\n<ul>\n<li data-pid=\"rQ8PX_9O\">来自<i>彭博</i>、<i>韦德布什</i>和<i>摩根斯坦利</i>的报告建议 2025 年“Apple Car”发布窗口</li>\n<li data-pid=\"LRrHgkik\">苹果授权使用 69 辆汽车和 137 名飞行员</li>\n</ul>\n<p data-pid=\"F5TNflRo\">九月</p>\n<ul>\n<li data-pid=\"bw9umc1S\">苹果授权使用 69 辆测试车和 114 名飞行员</li>\n<li data-pid=\"PkZQncBx\">菲尔德离职后凯文·林奇接任首席执行官</li>\n<li data-pid=\"q2aIL8pB\">苹果将​​ Apple Car 重新聚焦于内部开发</li>\n<li data-pid=\"kl3KEQbX\">空壳公司购买的亚利桑那州车辆测试设施据信由苹果公司运营</li>\n<li data-pid=\"VJsuN1kb\">福特挖走道格菲尔德 </li>\n</ul>\n<p data-pid=\"zIjXmJk0\">八月</p>\n<ul>\n<li data-pid=\"jcotjpgo\">苹果授权使用 69 辆测试车和 92 名飞行员</li>\n<li data-pid=\"1pjBcbuu\">外部显示器可以警告其他人自治系统正在做什么</li>\n</ul>\n<p data-pid=\"odop-K-m\">七月</p>\n<ul><li data-pid=\"tEOywnI1\">苹果希望在美国制造汽车电池</li></ul>\n<p data-pid=\"yl5Sbid9\">六月</p>\n<ul><li data-pid=\"Rg2cLl-m\">机器人团队负责人 Dave Scott 离开项目</li></ul>\n<p data-pid=\"3Tb2YWNE\">五月</p>\n<ul>\n<li data-pid=\"a3bbHRPy\">挡风玻璃可用于AR显示</li>\n<li data-pid=\"tY2NLL8d\">振动可用于帮助在座椅下找到丢失的物品</li>\n</ul>\n<p data-pid=\"cWshrDAz\">四月</p>\n<ul>\n<li data-pid=\"_Zi8MgfP\">分析师称苹果有望在 2021 年夏季之前分享有关“Apple Car”的信息</li>\n<li data-pid=\"c11iYOUi\">LG和麦格纳的合作可能赢得“Apple Car”合同</li>\n</ul>\n<p data-pid=\"TM1oJI6O\">三月</p>\n<ul><li data-pid=\"0oBeVoQX\">富士康可以组装“Apple Car”</li></ul>\n<p data-pid=\"G0PZ9R8t\">二月</p>\n<ul>\n<li data-pid=\"PomspJko\">日产对制造“Apple Car”表现出兴趣</li>\n<li data-pid=\"87ox8dCK\">尽管已接近达成协议，但苹果和起亚的讨论仍被搁置</li>\n<li data-pid=\"Jb5RPij9\">分析师称“Apple Car”将没有方向盘</li>\n<li data-pid=\"0LncTR1u\">保时捷卡宴前负责人 Manfred Harrer 博士加入苹果</li>\n</ul>\n<p data-pid=\"czkpVaUT\">一月</p>\n<ul>\n<li data-pid=\"9FiX7lnV\">据报道，苹果要求以 36 亿美元的价格生产 10 万辆汽车</li>\n<li data-pid=\"WwPwWEXb\">现代确认正在与苹果进行谈判</li>\n<li data-pid=\"m6KSzxAU\">据报道，苹果正在与现代谈判使用子公司起亚制造“Apple Car”</li>\n<li data-pid=\"dOjetD4f\">报告称不要指望“Apple Car”再过五到七年</li>\n</ul>\n<p data-pid=\"90PZKdlG\"><b>2020</b></p>\n<p data-pid=\"6-KF7rta\">十二月</p>\n<ul>\n<li data-pid=\"HLdWYoL-\">据报道，苹果生产具有“下一级”电池技术的汽车</li>\n<li data-pid=\"ZGC7TXH2\">供应链报告称“Apple Car”可能会在 2021 年 9 月推出</li>\n<li data-pid=\"WVqfcJkO\">传闻苹果将与台积电合作开发“Apple Car”处理器</li>\n<li data-pid=\"zRSN5svl\">John Giannandrea 开始监督“泰坦计划”</li>\n</ul>\n<p data-pid=\"rVQvL5EO\">九月</p>\n<ul><li data-pid=\"fGqDhInJ\">Apple 报告 LiDAR 系统如何捕获 Apple Maps 数据</li></ul>\n<p data-pid=\"NXTz1Qf-\">六月</p>\n<ul><li data-pid=\"AvdLq4F0\">NHTSA 推出自愿计划，让公司报告自动驾驶汽车在哪里进行测试，称为 AV TEST</li></ul>\n<p data-pid=\"8N3d4GXD\">三月</p>\n<ul>\n<li data-pid=\"aI8_9bFk\">摩根士丹利表示，苹果将保留对“Apple Car”的“碰碰”控制权</li>\n<li data-pid=\"KKZ13Gqt\">苹果根据一项新专利研究使用特斯拉式感应电机</li>\n</ul>\n<p data-pid=\"V5YtRL0P\">二月</p>\n<ul><li data-pid=\"Znx8XX0x\">苹果向 DMV 报告了 23 辆自动驾驶汽车</li></ul>\n<p data-pid=\"Y6yllnWq\"><b>2019</b></p>\n<p data-pid=\"vABklmQi\">十二月</p>\n<ul><li data-pid=\"lVTA2iKE\">苹果代表要求联邦法院密切监视被指控窃取商业机密的前雇员</li></ul>\n<p data-pid=\"OpADa9zF\">七月</p>\n<ul><li data-pid=\"OMX_iWpu\">前特斯拉汽车内饰出口商史蒂夫·麦克马纳斯（Steve MacManus）加入苹果</li></ul>\n<p data-pid=\"rCWrLI_v\">六月</p>\n<ul><li data-pid=\"ISfzaOCR\">苹果收购 Drive.ai</li></ul>\n<p data-pid=\"Htv5WUvY\">五月</p>\n<ul><li data-pid=\"XiwV5sXL\">报告称苹果在加州建造了多个大型驾驶室，用于改进电池技术</li></ul>\n<p data-pid=\"rkKTuztS\">四月</p>\n<ul>\n<li data-pid=\"GFY_JqGk\">苹果向 DMV 报告了 69 辆自动驾驶汽车</li>\n<li data-pid=\"c_aOAsD8\">据报道，苹果正在与用于“泰坦计划”的激光雷达传感器供应商进行谈判</li>\n</ul>\n<p data-pid=\"z-VUHfhz\">三月</p>\n<ul>\n<li data-pid=\"_n7dMBoN\">特斯拉前工程副总裁 Michael Schwekutsch 加入苹果</li>\n<li data-pid=\"O_W74-CM\">蒂姆库克表示，随着公司“掷骰子”，未来的产品将“让你大吃一惊”</li>\n</ul>\n<p data-pid=\"JHQA9s3F\">二月</p>\n<ul>\n<li data-pid=\"A6uQtBYU\">德国报道称“Apple Car”将是一辆面包车</li>\n<li data-pid=\"4awys-eG\">DMV 报告显示，苹果的自动驾驶系统在脱离接触或驾驶员控制方面表现最差</li>\n</ul>\n<p data-pid=\"0Bvcb56U\">一月</p>\n<ul>\n<li data-pid=\"Gy8ZntQx\">陈纪中涉嫌窃取商业机密被捕</li>\n<li data-pid=\"UnsgdmWm\">200名员工从“泰坦计划”转移或裁员</li>\n<li data-pid=\"V2rJ3zFr\">亚历山大·希辛格 (Alexander Hitzinger) 离开苹果前往大众汽车</li>\n</ul>\n<p data-pid=\"Fg26HTmz\"><b>2018</b></p>\n<p data-pid=\"opmYVsxA\">十二月</p>\n<ul><li data-pid=\"DMC-Qwqj\">特斯拉前高级设计师 Andrew Kim 加入苹果</li></ul>\n<p data-pid=\"JXc8mdEs\">十一月</p>\n<ul><li data-pid=\"7YUYtEhJ\">苹果向 DMV 报告了 72 辆自动驾驶汽车</li></ul>\n<p data-pid=\"FNQlUzyw\">八月</p>\n<ul>\n<li data-pid=\"t3hixpOq\">第一起涉及苹果自动驾驶程序的登记车祸，其他司机有过错</li>\n<li data-pid=\"9RDAHG05\">报告称苹果在 2018 年全年从特斯拉雇佣了 46 人</li>\n<li data-pid=\"rpOkHkMG\">加入特斯拉的前 Mac 硬件副总裁 Doug Field 重返苹果</li>\n</ul>\n<p data-pid=\"n0dUbUMQ\">七月</p>\n<ul>\n<li data-pid=\"4WoYTp68\">前“Project Titan”计算团队成员张晓浪因涉嫌盗窃商业机密被捕</li>\n<li data-pid=\"k0_q2kUB\">苹果向 DMV 报告了 66 辆自动驾驶汽车</li>\n</ul>\n<p data-pid=\"bZNrH2TP\">六月</p>\n<ul><li data-pid=\"nLf5zU_s\">Waymo 前高级工程师 Jamie Waydo 加入苹果</li></ul>\n<p data-pid=\"wDwfdqCG\">五月</p>\n<ul>\n<li data-pid=\"mTsLLt3J\">与大众汽车相连的 PAIL 班车</li>\n<li data-pid=\"h_CvJS1U\">苹果向 DMV 报告了 55 辆自动驾驶汽车</li>\n</ul>\n<p data-pid=\"on0vkTip\">四月</p>\n<ul><li data-pid=\"7JeGnf2f\">谷歌前人工智能主管 John Giannandrea 加入苹果</li></ul>\n<p data-pid=\"AUmVK01_\">三月</p>\n<ul><li data-pid=\"AH-tzXQ9\">苹果向 DMV 报告了 45 辆自动驾驶汽车</li></ul>\n<p data-pid=\"u2cL0ozy\">一月</p>\n<ul><li data-pid=\"GAn5Z7E0\">苹果向 DMV 报告了 27 辆自动驾驶汽车，高于之前的 3 辆</li></ul>\n<p data-pid=\"DyABdRvT\"><b>2017</b></p>\n<p data-pid=\"VLOi7Pxb\">十二月</p>\n<ul><li data-pid=\"u9bWK6Dn\">苹果 AI 研究总监 Ruslan Salakhutdinov 在 NIPS 机器学习会议上发表讲话，提到基于摄像头的识别如何检测被雨水和停放汽车遮挡的物体</li></ul>\n<p data-pid=\"6SEynORe\">十一月</p>\n<ul>\n<li data-pid=\"0Ald3hY6\">Apple 发布研究论文，解释基于 LiDAR 的 3D 对象识别</li>\n<li data-pid=\"G1WTv6pn\">报告称苹果在亚利桑那州的惊喜租用了一个前菲亚特克莱斯勒试验场</li>\n</ul>\n<p data-pid=\"UfpSTbs6\">八月</p>\n<ul>\n<li data-pid=\"9uiZjydh\">17 名专注于制动、悬架和其他系统的工程师离开苹果前往 Zoox</li>\n<li data-pid=\"WAcHt9Ru\">“泰坦计划”的招聘冻结结束</li>\n<li data-pid=\"P7o_XOLj\">传感器测试台在车辆上升级，配备新的 LiDAR 阵列、GPS、摄像头和其他项目</li>\n<li data-pid=\"81NigPZF\">报道称，苹果与一家老牌汽车制造商合作，为员工创建了一项名为 PAIL 的自动驾驶服务</li>\n</ul>\n<p data-pid=\"XeAuoMIa\">七月</p>\n<ul><li data-pid=\"3t1qpvAD\">声称表明苹果与中国宁德时代合作进行汽车电池研究</li></ul>\n<p data-pid=\"gvE3G7g0\">六月</p>\n<ul>\n<li data-pid=\"dgww_m3a\">报告称苹果与赫兹合作测试自动驾驶技术</li>\n<li data-pid=\"a9NHuSHC\">蒂姆库克戏弄汽车计划，称其为“核心技术”和“所有人工智能项目之母”</li>\n</ul>\n<p data-pid=\"mTq1yhMB\">四月</p>\n<ul>\n<li data-pid=\"M1PtH_ek\">Apple 要求 DMV 更改围绕测试报告的协议，以尽量减少公众曝光</li>\n<li data-pid=\"AwKPOFIf\">Apple 拥有的汽车被发现装有 LiDAR 传感器、雷达阵列和摄像头</li>\n<li data-pid=\"Ex1wdzH5\">有关 Apple 自动驾驶车辆泄漏的文件，显示了培训细节以及使用罗技车轮和踏板进行控制</li>\n<li data-pid=\"LlEpcJ-J\">苹果获得加州 DMV 许可在公共道路上进行测试</li>\n</ul>\n<p data-pid=\"SVayaaLK\">三月</p>\n<ul>\n<li data-pid=\"v8FCSecI\">报道称，苹果正在为瑞士的一家研究机构招聘计算机视觉和机器人专家</li>\n<li data-pid=\"jGUbN2tW\">中国公司滴滴出行在加州山景城设立人工智能实验室</li>\n</ul>\n<p data-pid=\"VfNKtQ9o\">一月</p>\n<ul>\n<li data-pid=\"hCPUD9Yw\">Apple 副总裁 Lisa Jackson 加入美国交通部自动驾驶汽车咨询委员会</li>\n<li data-pid=\"2cBrYxB4\">苹果 Swift 创始人克里斯·拉特纳 (Chris Lattner) 离开特斯拉</li>\n</ul>\n<p data-pid=\"-ZIqFDG7\"><b>2016 年</b></p>\n<p data-pid=\"wYJhSCv4\">十二月</p>\n<ul><li data-pid=\"Fmtxg37-\">保时捷 LMP1 项目前技术总监 Alaxander Hitzinger 加入苹果</li></ul>\n<p data-pid=\"7iCU6wOZ\">十一月</p>\n<ul><li data-pid=\"rQaIDebY\">Apple 要求 NHTSA 更新政策，为新来者提供与老牌制造商相同的公共道路测试机会</li></ul>\n<p data-pid=\"XyDAYEBY\">十月</p>\n<ul>\n<li data-pid=\"YozFtDMx\">报告表明，“Apple Car”作为一种车辆已经停滞不前，因为该公司专注于现有车辆的功能</li>\n<li data-pid=\"z4oFH0ZN\">苹果推动项目在 2017 年底前证明自动驾驶功能的实用性</li>\n<li data-pid=\"1egO-9SX\">“数百人”报告被解雇或退出汽车项目</li>\n</ul>\n<p data-pid=\"GTrTDoGX\">八月</p>\n<ul>\n<li data-pid=\"6uM6bI2i\">作为“泰坦计划”重启的一部分，苹果解雇了数十名员工</li>\n<li data-pid=\"x7OO7-vv\">苹果计算机视觉专家 Bart Nabbe 前往法拉第未来</li>\n</ul>\n<p data-pid=\"ouL4yNwi\">七月</p>\n<ul>\n<li data-pid=\"TR5fKzvy\">黑莓旗下 QNX 前 CEO Dan Dodge 加入苹果</li>\n<li data-pid=\"zLa0q_am\">鲍勃·曼斯菲尔德（Bob Mansfield）接任“泰坦计划”的负责人</li>\n</ul>\n<p data-pid=\"i1frxhTC\">五月</p>\n<ul>\n<li data-pid=\"wm3BK9Q8\">苹果与公司讨论汽车充电解决方案</li>\n<li data-pid=\"bBORn9SI\">苹果向中国公司滴滴出行投资 10 亿美元</li>\n<li data-pid=\"t9syqDlT\">Apple 在旧金山湾寻求 800,000 平方英尺的地块</li>\n<li data-pid=\"v10ZACus\">前 Google 研究员 Kurt Adelberger 加入苹果</li>\n</ul>\n<p data-pid=\"iLhyk33_\">四月</p>\n<ul>\n<li data-pid=\"1ABmDSA0\">前 Andretti Autosport 的 CNC 加工车间主管 Kevin Harvey 加入 Apple</li>\n<li data-pid=\"d8qJ3N5i\">特斯拉前研发硬件原型 CNC 程序员 David Masiukiewicz 加入苹果公司</li>\n<li data-pid=\"4ghHxnu4\">特斯拉前汽车工程副总裁 Chris Porritt 加入苹果</li>\n<li data-pid=\"oGYkM7J9\">报道称苹果有 15 至 20 名来自德国汽车行业的员工在柏林的一个秘密汽车实验室工作</li>\n<li data-pid=\"Xy7fRE6s\">报告称苹果使用希腊神话中的名称来指代桑尼维尔的建筑物，可能与“泰坦计划”有关</li>\n</ul>\n<p data-pid=\"nK_-bRmP\">三月</p>\n<ul><li data-pid=\"hEH8WOpO\">苹果在桑尼维尔租用了一个 96,000 平方英尺的仓库，该仓库以前用于装瓶百事可乐</li></ul>\n<p data-pid=\"Cwu0XWLY\">二月</p>\n<ul>\n<li data-pid=\"N-88kL0Y\">Apple 获得了 9,600 平方英尺空间的建筑许可和另一栋“汽车测试中心”的建筑</li>\n<li data-pid=\"C77vqrP3\">已就 Apple 拥有的 Sunnyvale 物业中的电机噪音提出噪音投诉</li>\n</ul>\n<p data-pid=\"aLghwhAi\">一月</p>\n<ul>\n<li data-pid=\"jTx2vsjL\">Jony Ive 对“Project Titan”导致招聘冻结表示不满</li>\n<li data-pid=\"714zJCd1\">Steve Zadesky 离开苹果和“Project Titan”</li>\n<li data-pid=\"zMFoH4JP\">苹果在黑莓汽车软件办公室附近租用的加拿大渥太华办公室</li>\n<li data-pid=\"hTwAvSmv\">苹果获得与“Apple Car”相关的新域名</li>\n</ul>\n<p data-pid=\"j-2WMzjS\"><b>2015</b></p>\n<p data-pid=\"QAocE0mF\">十一月</p>\n<ul><li data-pid=\"nl1aNEu8\">前 BMW 软件工程师 Ronan O Braonain 加入苹果</li></ul>\n<p data-pid=\"TCJlRQJR\">十月</p>\n<ul>\n<li data-pid=\"c3LvBH9D\">Nvidia CUDA 库和软件解决方案前总监乔纳森·科恩 (Jonathan Cohen) 加入 Apple</li>\n<li data-pid=\"2m1mMZAH\">Mission Motors 因苹果失去顶尖人才而关闭</li>\n<li data-pid=\"D5vxNl-U\">埃隆马斯克说苹果是“特斯拉墓地”</li>\n</ul>\n<p data-pid=\"G7pH6FuT\">九月</p>\n<ul>\n<li data-pid=\"h4JAkreK\">苹果律师会见了加州 DMV</li>\n<li data-pid=\"oDT_INX_\">报道称苹果挖走特斯拉员工导致 Model 3 延迟</li>\n<li data-pid=\"9VvqU381\">其他与自动驾驶汽车算法相关的招聘也会发生</li>\n</ul>\n<p data-pid=\"6MlVl0jD\">八月</p>\n<ul>\n<li data-pid=\"j4e28O-C\">特斯拉前高级工程师 Jamie Carlson 加入苹果</li>\n<li data-pid=\"wVG_ZJ-J\">Apple 在圣何塞收购了 43 英亩的土地</li>\n<li data-pid=\"dcOm1rLn\">Apple 在旧金山附近寻找 2,100 英亩的土地</li>\n</ul>\n<p data-pid=\"_6beDVxQ\">三月</p>\n<ul><li data-pid=\"LDdzHqV8\">SixtyEight 研究大楼被发现与苹果公司有联系</li></ul>\n<p data-pid=\"CAh6_Igb\">二月</p>\n<ul>\n<li data-pid=\"_NoVwGLw\">一辆装有苹果公司神秘设备的货车在加州行驶</li>\n<li data-pid=\"nJMd1LlB\">报告称 Steve Zadesky 正在运行“Project Titan”</li>\n</ul>\n<p data-pid=\"Jplk-aSa\"><b>2014</b></p>\n<p data-pid=\"gsGSqirc\">十一月</p>\n<ul>\n<li data-pid=\"z341AamG\">以车辆为中心的“泰坦计划”泄漏</li>\n<li data-pid=\"jSlT-TgW\">SixtyEight Research 在加利福尼亚州获得外国公司许可</li>\n<li data-pid=\"fj4I8dye\">前梅赛德斯-奔驰研发部的 Johann Jungwirth 加入苹果公司</li>\n</ul>\n<p data-pid=\"dHPflmvn\">三月</p>\n<ul><li data-pid=\"zGzKVLl9\">SixtyEight Research registered</li></ul>\n<p data-pid=\"qc1Vexhq\">————————</p>\n<p data-pid=\"10LogAFZ\"><b>好了，我是老王，欢迎关注！</b></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/river_wang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">工科男老王</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/522278303/answer/2392186301?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">91 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/313967394?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么没有出现媲美特斯拉整体产品的公司/车企？</a><br><a href=\"http://www.zhihu.com/question/436336636?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何看待马斯克自曝曾寻求苹果低价收购特斯拉但被拒，而如今苹果也开始造车？苹果造车对行业有多大影响？</a><br>\n","link":"http://www.zhihu.com/question/522278303/answer/2392186301?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"少数派十周年特别直播：和老麦来一场对话，开启下一个十年","date":"2022-03-16 08:10:33","description":"如果是关注少数派的读者，一定已经看过老麦写的《少数派十周年：创始人老麦的十问十答》。在这篇近万字的长文里，老麦回答了一些备受关注的问题：少数派的内容是怎么从专职编辑过渡到「编辑+社区共创」的？少数派真 ...<a href=\"https://sspai.com/post/72083\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72083"},{"title":"多语种、懂 Notion、能参会：我为什么用 Notta 做语音转写","date":"2022-03-16 07:32:52","description":"出于外贸工作的原因，公司经常会有各种各样的会议，很多会议会涉及到客户的定制化业务，需要记录和留存。记录会议耗时耗力，我希望找到一款能语音转写帮我记录会议的软件。经过一番了解和对比，我最终选择了 Notta。随着功能的更新补全，Notta 能给我的已经不止转写会议，它成为了我工作流中不可或缺的一环。\n在很多实际场景中，转写准确度只是基础技能。比如在会议、课堂等场景下，我们用手机录音，但很少人会使用手机对长文本进行编辑校对，所以转写服务最好实现多端同步，在大屏上实现编辑和校对功能。\n如果仅仅作为转写工具，Notta 有很多的替代品，中文有讯飞、英文有 Otter，在准确度和基础的功能方面，体验相差不大。而除了先前提到的多端同步，Notta 还围绕转写结果开发了一系列功能，为后续的整理与处理提供了不少便利。<a href=\"https://sspai.com/post/72093\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72093"},{"title":"新司机的第一份车险该怎么买？","date":"2022-03-16 06:30:00","description":"在文中，你将了解到有关辆保险的细分种类、购买渠道、投保与续费、出险流程的详细介绍。<a href=\"https://sspai.com/post/71577\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/71577"},{"title":"腾讯游戏某文章中提出了「魂系列游戏总销量远不及自家游戏流水」这一比较观点，如何看待这种论调？","date":"2022-03-16 04:48:47","description":"\n<p data-pid=\"SezqjpiK\"><a class=\"member_mention\" href=\"http://www.zhihu.com/people/70c5673ee4e9644003f7a725c4a06a4e\" data-hash=\"70c5673ee4e9644003f7a725c4a06a4e\" data-hovercard=\"p$b$70c5673ee4e9644003f7a725c4a06a4e\">@知乎游戏</a> 感谢邀请</p>\n<p data-pid=\"UrVyvSMM\">腾讯游戏赚钱是因为F2P的商业模式在盈利方面更加优秀，另外就是腾讯拥有庞大的社交平台用户群以及用户的信息。</p>\n<p data-pid=\"iIWhujrw\">这和游戏的关卡设计关系不大。</p>\n<p data-pid=\"rv74MEFd\">我相信作者喜欢他文章里提到的这些游戏。也并没有贬低这些游戏的意思。</p>\n<p data-pid=\"xfKY7NbC\">但问题是，除了这句话引起争议外，这篇文章有什么价值？这篇文章在我看来毫无意义。</p>\n<p data-pid=\"zCYrwW2L\">但这篇文章究竟是给谁看的呢？</p>\n<p data-pid=\"HJxqOLri\">对做关卡设计的人看了没用，做关卡设计和写小说一样，要根据小说的走向设置遇见npc，设置起承转合，思考受众的心理变化。也要设置各种各样的点。但是拓扑对于写小说有用吗？</p>\n<p data-pid=\"AjP8-9l1\">对于深入玩过这些游戏的人，这篇文章也没用，因为很明显作者对于类银河战士恶魔城的理解并不够深入，对魂系的理解也不够深入。把这两个东西拿在一起谈，题目不应该是魂味，而应该是“老式日本游戏的关卡设计研究”。</p>\n<p data-pid=\"yETIqxar\">《空洞骑士》的关卡设计思路主要来源于《塞尔达2》。如果要谈类银河战士恶魔城的关卡设计应该结合其技能解锁，涉及到的游戏应该是《塞尔达2林克的冒险》、《恶魔城晓月圆舞曲》、《空洞骑士》这样的结构。</p>\n<p data-pid=\"zBlQGS0u\">涉及到《黑暗之魂3》的关卡设计，应该去溯源《恶魔之魂》以及《塞尔达时之笛》。从这一角度去写3D魂系角色扮演类游戏的关卡设计。</p>\n<p data-pid=\"DntUiAyy\">分开再去写类银河战士恶魔城的关卡设计思路，以及《空洞骑士》从《塞尔达2》里面继承了哪些，和《恶魔城》有什么异同。以及关键技能解锁对于玩家可以去到新地图结合这类型项目的关卡设计思路去写横版的关卡设计。</p>\n<p data-pid=\"seRj8-H5\">硬把横版类银河战士恶魔城的关卡设计和fs社魂系拿在一起对比，一个是横版一个是3D大场景对于关卡设计应用毫无帮助。</p>\n<p data-pid=\"GXvVgYvS\">如果这篇文章是给没玩过游戏的人看，只会觉得云山雾绕，不明觉厉。</p>\n<p data-pid=\"_ay0UyCb\">所以这篇文章到底是写给谁看的呢？</p>\n<p data-pid=\"Qr0P_rvt\">这篇文章狗屁不通，毫无意义。</p>\n<p data-pid=\"YLfItpQS\">对魂系关卡设计感兴趣的同学，不如直接玩魂系游戏，玩到图和怪物位置都背下来还是挺简单的。玩完游戏，直接打开编辑器试试用kitbash的方式做出你自己的关卡，再用角色跑跑看，脑补一下你想要的各种保存点，剧情触发点，怪物点的设置。练好了工作随便找，米哈游随便进。</p>\n<a href=\"https://www.zhihu.com/video/1487232712330747904\">2分钟看完KitBash速通关卡设计</a><a href=\"https://www.zhihu.com/video/1487233085108813824\">6分钟看完一小时搞定一个关卡</a><hr>\n<p><br></p>\n<p data-pid=\"F38msKuE\">补充一下评论区 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/002f445102fcb582403fa01456302b86\" data-hash=\"002f445102fcb582403fa01456302b86\" data-hovercard=\"p$b$002f445102fcb582403fa01456302b86\">@喵星</a> 的观点。</p>\n<blockquote data-pid=\"9aRz6aDr\">这是因为作者缝合所引文章模型和自己对空洞骑士的分析部分的时候无视了原文中的那句“因此，我们再次对本文的理论适用范围做出限制——以探索为主要驱动的3D箱庭式关卡”，也无视了原文其实是一篇单纯分析黑暗之魂的文章的前提的缘故。<br>——他这种无视是必然的，因为他想要讲的那个空中楼阁般的模型比银河恶魔城和魂之间的差别还大得多。他相信这种差别是可以被忽视的，才有了这篇文章。</blockquote>\n<p data-pid=\"YyIkIF8t\">以及其所引用原文</p>\n<a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://zhuanlan.zhihu.com/p/415025159\" data-size=\"small\" data-image=\"https://pic1.zhimg.com/v2-6af93d0be60b5a2a3f2607e74d99e9c2_720w.jpg?source=b1748391\" data-entity-type=\"article\" class=\"internal\">如何设计一张有“魂味”的地图？——论“类魂”游戏关卡的拓扑结构</a><p data-pid=\"gGHp1mFx\">最后附上腾讯游戏学堂原文</p>\n<a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"http://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/5-hteUwCRN_4vsoOEVUURQ\" data-image=\"https://pic1.zhimg.com/v2-1af65f1a4392c9ed5869be89d75dae33_qhd.jpg?source=b1748391\" data-image-width=\"1080\" data-image-height=\"461\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">魂系列、恶魔城和开放世界——关卡结构理论和非线性流程设计方法浅析</a><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/skald?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">十八</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/521845175/answer/2391122495?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">325 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/264284592?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">怎么看待腾讯Wegame平台删除使命召唤OL、极品飞车OL、冒险岛2的游戏评论。？</a><br><a href=\"http://www.zhihu.com/question/268385673?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">腾讯的流放之路能玩吗？</a><br>\n","link":"http://www.zhihu.com/question/521845175/answer/2391122495?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"在 Google 上搜索你想要的答案，为什么越来越难了？","date":"2022-03-16 03:47:47","description":"这个全球最大的搜索巨头，也许正在走向消亡。<a href=\"https://sspai.com/post/72065\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72065"},{"title":"如何评价动画《万圣街》第三季？","date":"2022-03-16 03:41:56","description":"\n<p data-pid=\"G-RAokl_\">紫狗：大家好！我是万圣街动画的编剧之一，紫狗，目前《万圣街》动画第三季正在腾讯视频播出，每周三10点更新~我请来了我的好朋友，同时也是《万圣街》动画的另一位编剧，木吉，请她来聊聊动画第三季的幕后故事！</p>\n<p data-pid=\"Zp12iW1q\"> ————————————————————</p>\n<p data-pid=\"ocurdOAY\">木吉：大家好！我是紫狗——的好搭档，木吉。很高兴能作为编剧之一，继续参与到《万圣街》第三季动画的故事创作中。</p>\n<p data-pid=\"2yQg8OBi\">从动画立项到第二季收官的回忆还历历在目，转眼间第三季都播出了，真是让人感慨万分。</p>\n<p data-pid=\"9KXcs7-H\">本季的卖点也如海报所见，前两季播出时众多街坊千呼万唤的几位好邻居终于闪亮登场：影帝阿臂、战地记者桃子，甚至还有莉莉的好朋友伊万哦。（小陆？那是谁？）开玩笑的，热烈欢迎小陆回归1031动画大家庭！</p>\n<p><img src=\"https://pic1.zhimg.com/v2-613a981708ea5e771a981193c02a8cae_720w.png?source=b1748391?rss\" data-caption=\" 《万圣街》动画第三季海报\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"2039\" data-watermark=\"watermark\" data-original-src=\"v2-613a981708ea5e771a981193c02a8cae\" data-watermark-src=\"v2-973936d7580d212582a4ddc1cfbf43d3\" data-private-watermark-src=\"v2-9e9899a012560345d6158b26f3f42743\"></p>\n<p data-pid=\"W75oL7p_\">《万圣街》的第一季和第二季中有一条动画专属的原创主线串联故事，主线故事还有各个角色的专属篇章讲完之后很快就没有集数去登场更多角色了，主创们也一直感到十分的遗憾。很多街坊看完动画也表示日常故事看不够，因此从这一季开始的《万圣街》是满载着欢乐温馨日常故事的《万圣街》！希望大家多多指教。</p>\n<p data-pid=\"V_tjKP3l\">对我来说《万圣街》的魅力点一直在于性格各异、惹人喜爱的角色们和角色之间关系的发展。因为《万圣街》的故事背景主要发生在1031这个合租公寓里，其他登场的角色也大多是主角们的亲朋好友，总体来说是对友情、亲情和爱情都有细腻、诙谐描绘的作品。另一方面主角们都是来自不同国家和地区的神怪，又或多或少都是和原本种族的人格格不入的边缘人，却可以互相包容地住在一起生活。角色就像自己的朋友一样，看着他们的嬉笑日常，遐想他们的过去和未来，可以短暂地忘记自己的烦恼。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-fb9cb6a3bebb0f27649b628007ad38a0_720w.png?source=b1748391?rss\" data-caption=\" 《万圣街》动画截图\" data-size=\"normal\" data-rawwidth=\"2560\" data-rawheight=\"1438\" data-watermark=\"watermark\" data-original-src=\"v2-fb9cb6a3bebb0f27649b628007ad38a0\" data-watermark-src=\"v2-5d4e4669b1f43999f9e64d4144a2edaf\" data-private-watermark-src=\"v2-11de2daee43142364f2d4e63d2c88ed8\"></p>\n<p data-pid=\"-Lhar0yg\">本季动画中新登场的角色小陆其实在漫画中是大家熟悉的老朋友了，因此考虑他在动画中的登场我们也费了不少脑筋。实际上小陆的这几集是我写得最痛苦的几集，因为我很希望能给小陆这个角色带来一些突破。比如像微缩版《千年女优》那样子在各种不同的僵尸电影里穿梭，最终发现始终寻找的是那个热爱电影的自我一类的夸张展开都有认真考虑过，但还是在3分钟篇幅的现实下妥协了。在考虑了很多方案之后最后还是保持了小陆的原作故事，只是稍微添加了一点恐怖片风味的要素进去。（苦笑）尽管只是微小的突破，如果大家能喜欢就好了。接下来还有机会的话我还会继续挑战的！</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ce49b6aa3011ec43791f4affc3096b83_720w.png?source=b1748391?rss\" data-caption=\"《万圣街》漫画：小陆\" data-size=\"normal\" data-rawwidth=\"1324\" data-rawheight=\"2560\" data-watermark=\"watermark\" data-original-src=\"v2-ce49b6aa3011ec43791f4affc3096b83\" data-watermark-src=\"v2-735931dddb4a71f6a88686a3c15b8d45\" data-private-watermark-src=\"v2-58c9b3d32e9e18764dbab260ca82c37c\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-127f2e3dc644f330fc668c6f57edd8dd_720w.png?source=b1748391?rss\" data-caption=\" 《万圣街》漫画：小陆\" data-size=\"normal\" data-rawwidth=\"888\" data-rawheight=\"2560\" data-watermark=\"watermark\" data-original-src=\"v2-127f2e3dc644f330fc668c6f57edd8dd\" data-watermark-src=\"v2-3122e8d43ad3ca6b7701baf8c886bf94\" data-private-watermark-src=\"v2-74d8da306d0f71fdb9846f11d82d1324\"></p>\n<p data-pid=\"k86cGh2N\">而一直作为背景板的阿布也随着小陆的登场阿布在本季也有了亮眼的表现，大家终于有机会一睹他神秘房间的风采。以下是初次公开的设定，机会难得，大家不要错过哦~</p>\n<p><img src=\"https://pica.zhimg.com/v2-fcc5d3b8b3bacd521bbba7fbe256af41_720w.png?source=b1748391?rss\" data-caption=\"阿布书库：关于阿布每天在背景里都在看什么书\" data-size=\"normal\" data-rawwidth=\"1630\" data-rawheight=\"1440\" data-watermark=\"watermark\" data-original-src=\"v2-fcc5d3b8b3bacd521bbba7fbe256af41\" data-watermark-src=\"v2-bff59bd44dbe63b7635db153557b65e6\" data-private-watermark-src=\"v2-f50a6046dcb5e4c64c9aaf1a722d2743\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-326ff835558393bda850d61c5fbcd4e4_720w.png?source=b1748391?rss\" data-caption=\"阿布房间设定初公开\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1474\" data-watermark=\"watermark\" data-original-src=\"v2-326ff835558393bda850d61c5fbcd4e4\" data-watermark-src=\"v2-6a9e01026a2a4a94708b93bc918f160e\" data-private-watermark-src=\"v2-4a7ef256ba7211eda1da9ab9dbdcf3cd\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-12b5eb44e0bbe1eba8927c2f847d59f6_720w.png?source=b1748391?rss\" data-caption=\"阿布房间（？）友情客串卡司\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1596\" data-watermark=\"watermark\" data-original-src=\"v2-12b5eb44e0bbe1eba8927c2f847d59f6\" data-watermark-src=\"v2-b5f563bee59ba13c2ae5e7aa878c16ab\" data-private-watermark-src=\"v2-360645b1b8ac2196484ed9e7dd368bd0\" data-tags=\"porn\"></p>\n<p data-pid=\"_LqrBQRT\">另外，本季中有和《非人哉》的梦幻联动，谁能想到九月和林老师会气氛融洽、共享晚餐？预知二人相亲后续，还不快去看动画呀！</p>\n<p><img src=\"https://pica.zhimg.com/v2-363b041f620f5052ea31429db2c1d296_720w.png?source=b1748391?rss\" data-caption=\" 《万圣街》动画截图\" data-size=\"normal\" data-rawwidth=\"2559\" data-rawheight=\"1440\" data-watermark=\"watermark\" data-original-src=\"v2-363b041f620f5052ea31429db2c1d296\" data-watermark-src=\"v2-b44eb2f7db8c0abbf14b70c2e63d3d11\" data-private-watermark-src=\"v2-5ebde342c7574b3087b59f4422d11540\"></p>\n<p data-pid=\"XzPy1Hpc\"> 其实最开始创作这集的时候只是确定了“想要和非人哉联动”，原本剧本写的是大士来1031收房租的原作漫画故事段落，中间一度讨论到了哪吒也来到1031的火热展开。大士的概念图都画好了，结果剧本几经修改也没有通过（笑），最后大士只出现在了这样的画面里。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1741e73aff0568b6fb9a94901e370041_720w.png?source=b1748391?rss\" data-caption=\" 《万圣街》动画截图\" data-size=\"normal\" data-rawwidth=\"2559\" data-rawheight=\"1440\" data-watermark=\"watermark\" data-original-src=\"v2-1741e73aff0568b6fb9a94901e370041\" data-watermark-src=\"v2-a373f16a65a4aa3fa547d64a47749e32\" data-private-watermark-src=\"v2-a3339ea2fd0cc46813f5a95f2b7b3dcb\"></p>\n<p data-pid=\"R7f-QJ3I\"> ↑这样的画面</p>\n<p data-pid=\"FPjPOzM_\">真的是对不起画概念的老师。但那个时候确实是幽默细胞坏死，灵感枯竭了，一滴都没有了。我发自内心地感叹能源源不断创作梗和搞笑内容的创作者，真的很了不起啊。在这里把没能获得更多戏份的大士概念图展示一下，希望之后有机会让大士多登场呢。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-5ae7bbe5bdeeed72c69f68eddf7fe4ba_720w.png?source=b1748391?rss\" data-caption=\" 大士的《万圣街》版概念图\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"2033\" data-watermark=\"watermark\" data-original-src=\"v2-5ae7bbe5bdeeed72c69f68eddf7fe4ba\" data-watermark-src=\"v2-bcc2cf5e8e89e298d1696d58617df31e\" data-private-watermark-src=\"v2-f9d99070bde1412d6b42a6003ed964ae\"></p>\n<p data-pid=\"Af6h-Uzc\">在本季的结尾，更是有原作名场面的华丽还原，这里放出舞台的幕后设计给大家尝尝鲜。（*稍有剧透，介意的话请跳过哦！）</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f90f939c31e2e0cd2bc4ba0670325d35_720w.png?source=b1748391?rss\" data-caption=\" 《万圣街》动画 场景设定\" data-size=\"normal\" data-rawwidth=\"2373\" data-rawheight=\"1440\" data-watermark=\"watermark\" data-original-src=\"v2-f90f939c31e2e0cd2bc4ba0670325d35\" data-watermark-src=\"v2-17ec898d88b074830ebc9dc992d5c20c\" data-private-watermark-src=\"v2-ae42a710dd0b7567cfeb7f0811637d7d\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-3a4ce5fc5ef9e5f89d1e940b7c5eaa53_720w.png?source=b1748391?rss\" data-caption=\" 《万圣街》动画 角色设定\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"2016\" data-watermark=\"watermark\" data-original-src=\"v2-3a4ce5fc5ef9e5f89d1e940b7c5eaa53\" data-watermark-src=\"v2-5e28d1e2c6d99d3990da8c97648bf9dd\" data-private-watermark-src=\"v2-f7380f905700740fe20977c5df68f687\"></p>\n<p data-pid=\"wrIErokE\">创作的过程中也有一些奇妙的时刻。比如，开始写作新一季动画剧本的时候，和执行制片人多多、紫狗一起开了个会，探讨接下来的故事展开，聊着聊着就探讨起了万圣街当中的几对关系一直没有新进展的话题。结果动画的剧本没聊出什么内容，反倒是漫画里泥泥和莉莉的关系终于有了进展！真是让人期待他们的关系向下一个阶段迈进。（？）</p>\n<p data-pid=\"e_XfYzn4\">咳咳！我的意思是说，对于真正的情感关系，交往仅仅是一个开始而已。期待他们能获得更多的成长。</p>\n<p data-pid=\"WcDuST9p\">至于接下来故事的展开……敬请期待桃子、莉莉、水晶组合出道唱偶像歌曲的特别节目和林恩尼克双人乐队组合串烧（并没有！）</p>\n<p data-pid=\"ItQJps1e\">新角色会继续登场，老朋友也在持续出状况，家人也总是让人不省心……而总是被无视的人或许也会有主演一集的一天！什么都说了，又好像什么都没说，未来也请继续期待《万圣街》的故事！《万圣街》第三季正在腾讯视频播出，每周三10点更新，一定要看哦！</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zi-gou-31-98?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">紫狗</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/522130609/answer/2391373064?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">9 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/384567114?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价动画《万圣街》？</a><br><a href=\"http://www.zhihu.com/question/382432820?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价璀璨星空动画《京剧猫之脚踏实地》？</a><br>\n","link":"http://www.zhihu.com/question/522130609/answer/2391373064?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"「固态电池」和现在的电动车电池有什么区别？","date":"2022-03-15 09:54:15","description":"\n<p data-pid=\"eBFo1jBG\">先简单科普下我们现在车企用的锂动力电池原理。</p>\n<p data-pid=\"r_E9GXEm\">锂动力电池的核心组成部件CELL（电芯）的构造，是由<b>正极</b>（含锂化合物）、<b>负极</b>（碳素材料）、<b><a href=\"https://www.zhihu.com/search?q=%E7%94%B5%E8%A7%A3%E6%B6%B2&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2184302595%7D\" class=\"internal\">电解液</a></b>（非水液态电解质）构成。</p>\n<h3>锂电池基本原理</h3>\n<p><img src=\"https://pic2.zhimg.com/v2-2b4c6c5eaf860dc61949221163dae6c7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"998\" data-rawheight=\"552\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"-g3x-Mvv\">充电时，正极上的锂原子失去电子，被氧化成了<a href=\"https://www.zhihu.com/search?q=%E9%94%82%E7%A6%BB%E5%AD%90&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2184302595%7D\" class=\"internal\">锂离子</a><b>（脱嵌）</b>，然后在电解液中运动，跑到了负极，与流经外部电源的电子互相结合，又还原成了锂原子，嵌入到了负极碳层的微孔中。</p>\n<p data-pid=\"0f1EvtQm\">放电时，就是相反的一个过程，镶嵌在负极碳层中的锂原子，失去了电子，被氧化成了锂离子，回到电解液中，运动到了正极，与流经负载的电子结合，再度还原成了锂原子<b>（嵌入）</b>。</p>\n<p data-pid=\"EY2eXrUO\">所以，充放电过程中，锂离子在正负极材料之间往返脱嵌，这种电池又被形象地称为<b>“摇椅电池。”</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-ebbf53bbfe75763d50eed9fc46f0ef44_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"432\" data-rawheight=\"324\" data-watermark=\"watermark\" data-original-src=\"v2-ebbf53bbfe75763d50eed9fc46f0ef44\" data-watermark-src=\"v2-56ae28fa80b74f34c285999edfff314b\" data-private-watermark-src=\"v2-20036f0309f4618e8498398d85c655a7\"></p>\n<p data-pid=\"f-DYY8xy\">我们现在用的锂电池的正极和负极之间，充满了电解液（液体）。而全固态锂电池，顾名思义，就是中间没有电解液了，电解质是纯固体的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-81d62487cb87d53877f39fcdd314af6a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"323\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Eo-_LDqG\"><b>真正的理论上成熟的全固态电池，是怎么样的呢？</b></p>\n<p data-pid=\"WgSvTUg2\">首先电解液换成了固态的电解质，<a href=\"https://www.zhihu.com/search?q=%E9%94%82%E7%A6%BB%E5%AD%90&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2190529979%7D\" class=\"internal\">锂离子</a>（或许是其他离子）在里面通过技术和新材料的加持下，能跑得比之前更快。</p>\n<p data-pid=\"vLS738SW\">要知道，<b>锂离子移动速度的快慢意味着充放电的快慢</b>，现在的快充型锂电池号称20-30分钟快充30%的电量到80%电量。如果是真的全固态电池，那就是十分钟内能充满，十分钟内又能放完，十分钟内又能充满的节奏，速度那就是直接从乌龟到兔子的对比。</p>\n<p data-pid=\"5b62O-Vi\">而且现在的锂电池里面的电解液是可燃的，一旦泄露、挥发就容易造成电池起火。基本所有的电池快速自燃甚至爆炸，都是电解液在做“幕后英雄”。而固态电解质是不易燃的，即便外壳破了，也不会泄露、挥发，这个<b>安全性就大幅提高了</b>。</p>\n<p data-pid=\"VwQ-MQOk\">另一个优点就是<b>能量密度可以大幅提升</b>了，因为高电压的正负极材料怕和电解液溶解发生反应而不敢用。目前针对<a href=\"https://www.zhihu.com/search?q=%E9%92%B4%E9%85%B8%E9%94%82&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2190529979%7D\" class=\"internal\">钴酸锂</a>的电解质溶液可以充电到4.45V，三元材料可以充电到4.35V。如果继续充到更高的电压， 液态电解液就会承受不住而被氧化，正极表面也会发生不可逆的相变。如果是固态电解质，那么就能用提高电池能量密度的高电压正负极材料，比如可以提高到5V，使得整体能量密度显著提升。</p>\n<p data-pid=\"Gp7WlkPX\">除开电压提升，负极可以采用<a href=\"https://www.zhihu.com/search?q=%E9%87%91%E5%B1%9E%E9%94%82&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2190529979%7D\" class=\"internal\">金属锂</a>，正极采用硫化物或空气，对应锂硫电池和锂空电池，<b>理论能量密度达到当前锂电池理论值(387wh/kg)的7-10倍。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-0e18bd562839864f493f8d84493ee7b8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"605\" data-rawheight=\"362\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"StNBEa7m\">另外因为固态电池内部不含液体，可实现电芯内部的多层设计，减少了电阻组装壳体等用料，有效减少电池其它配件的配重。</p>\n<p data-pid=\"iHt5Hbd_\">所以，为什么固态电池号称是锂电池的终极形态，就是因为真正的固态电池对比现在的锂电池来说，优势太大了。</p>\n<ul>\n<li data-pid=\"y7epZ_6S\"><b>内芯安全性高，不泄露不挥发不易燃</b></li>\n<li data-pid=\"2CszoaKA\"><b>能超快速充放电，自放电大幅降低</b></li>\n<li data-pid=\"C3Ux9124\"><b>极高的能量密度，理论值接近当前液态电解质锂电池理论值的10倍</b></li>\n<li data-pid=\"NLCVwsRJ\"><b>更易设计电池的大小和形状，更能实现动力电池的定制化</b></li>\n</ul>\n<p data-pid=\"7hKK-YBz\">而按照动力电池的国家发展目标，2020年，单体电芯能量密度达到350Wh/Kg,2025年单体电芯能量密度达到400Wh/Kg,2030年达到500Wh/Kg。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-3b95713c524e22cb4439fdb5c6a44803_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"332\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"71TkXiCa\">而按照现有的液态电解质的锂电池发展，理论值限制死了，是不可能到达国家动力电池规划发展的目标的。</p>\n<p><img src=\"https://pica.zhimg.com/v2-463d7c1e35ad4b848ee51c8bb221e648_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"429\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"_sgRUcry\">实际，固态电池也是基本所有车企及动力电池厂商看好的主流发展方向。</p>\n<blockquote data-pid=\"MYf0y4aK\">Bloomberg数据预计，2028-2035年，采用固态电池的电动车将增长37倍，而固态电池的成本将下降至40美元/KWh，甚至低于液态电池。</blockquote>\n<p data-pid=\"4-YtePLG\">如题目中所说的，位于<a href=\"https://www.zhihu.com/search?q=%E5%9C%A3%E4%BD%95%E5%A1%9E&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2190529979%7D\" class=\"internal\">圣何塞</a>的QuantumScape电池初创公司，已收到汽车制造商和金融投资约十亿美元的投资，用于研究电动汽车的固态锂金属电池。</p>\n<p><img src=\"https://pica.zhimg.com/v2-d9964faa957d1d7501192b4753e6e720_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1025\" data-rawheight=\"492\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"8yFpqkSb\">大众汽车几度增持QuantumScape的股份，投资总金额达3亿美元，目的是推进固态电池的联合开发，并为其大规模生产做好准备，目前QuantumScape 的市值已超过百亿美元。</p>\n<p data-pid=\"6ZZIf7cJ\">国外其他车企品牌，如日产、现代、通用、福特、戴姆勒都给出了固态电池搭配车型的大概上市时间，从2025年到2030年之间，对固态电池的车型进行量产。</p>\n<p data-pid=\"FJeDf09e\">尤其是丰田，目前看来是投资固态电池力度最大，最有实力的车企。早在2020年6月，丰田搭载全固态锂电池的车辆，已经开始了在道路上的试车。在今年9月份，丰田给出了到2030年，将投资<b>人民币约880亿元的高额预算</b>，用于开发新型动力电池和电池供应链，以保证未来10年的汽车动力电池技术的领先。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-0a468d795fcf9dcd4603aa09e7cfca4b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1610\" data-rawheight=\"836\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"fFHNBFeU\">所以别说丰田之前没有推出纯电车的车型，但是人家该有的技术储备是一点都不差的，如果真的能够研发出能量产的固态电池，那又会造成新能源汽车的一场新的革命。</p>\n<p data-pid=\"PN9kRkEV\">国内的品牌，北汽、上汽、广汽先后参与了清陶能源（电池研发）多轮融资；但是和国外的投资量和规模相比，国内的固态电池研发整体还处于初级阶段。</p>\n<p data-pid=\"Z4vSm1wq\">不过，成熟的固态电池研发到商用，估计也不是一蹴而就的。技术上依旧存在难题，<b>比如现阶段固态电解质的离子电导率还远低于液态电解质，而固态电解质的高界面阻抗也会影响到锂离子在界面之间的传输。</b></p>\n<p data-pid=\"mk4rp2xS\">但接下来的五年到十年，随着技术突破，成本下降，工艺成熟，我们都会见证锂动力电池里面的电解液一点点减少，先是半固态电池转为商用的车型会越来越多，然后就是完全固态电池的出现。</p>\n<p data-pid=\"VilzR7cT\">但到时候，可能还是会有一批昂贵的车型先脱颖而出，比如充电一次十分钟，还能高速上跑个一千几百公里的豪门品牌率先用上固态电池。</p>\n<p data-pid=\"b-4QjchS\">那个时候，真的就不会有啥里程焦虑，充电时长的担心了，就是担心荷包里面的钱到底够不够买1500-2000公里的长续航版本了。</p>\n<p data-pid=\"fJseypXD\">对了，宝马这个预计搭载固态电池的概念车造型，是否有点像能那个直立怒吼的啮齿目神兽……</p>\n<p><img src=\"https://pic2.zhimg.com/v2-b8feae9070c00ce94f932a9c9f522d68_720w.jpg?source=b1748391?rss\" data-caption=\"图为宝马Neue klasse 概念车型，预计搭载固态电池\" data-size=\"normal\" data-rawwidth=\"591\" data-rawheight=\"356\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/520427982/answer/2390555151?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">5 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/464258612?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">汽车电池一般不鼓包，但是电动车电池鼓包却非常常见，这是什么原因？</a><br><a href=\"http://www.zhihu.com/question/307465045?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">电动车电池一般能用多久？</a><br>\n","link":"http://www.zhihu.com/question/520427982/answer/2390555151?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\n    return new Date(date.toLocaleString('en-US', { timeZone }))\n}\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        timeZone\n    })\n    return {\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\n        convert (date) {\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\n        }\n    }\n}\n\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\n    return converter.convert(new Date(secDate), tzName) - secDate\n}\n\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\ncmn-Hans-SG = 中文普通话-简体-新加坡\ncmn-Hant-TW = 中文普通话-繁体-台湾\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\ncmn = 中文普通话\n\nzh-Hans = 中文-简体\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\n}\n\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long'\n}\nconst now = new Date()\n\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\n\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\n\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\n\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\n\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\n\nzhCNFormatter.format(now) // 2021年10月13日星期三\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\n\njaFormatter.format(now) // 2021年10月13日水曜日\njaAltFormatter.format(now) // 令和3年10月13日水曜日\n\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\n// {locale: 'zh-CN', calendar: 'gregory', …}\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\n     // 基于一个固定日期计算，这里选择 1970.1.1\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\n    const base = new Date(1970, 0, 1).getTime()\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\n    return Array.from({ length: 7 }, (_, day) =&gt; (\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\n    ))\n}\n\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n}).formatToParts(new Date())\n// [\n//     { type: 'year', value: '2021' },\n//     { type: 'literal', value: '年' },\n//     { type: 'month', value: '10' },\n//     { type: 'literal', value: '月' },\n//     { type: 'day', value: '13' },\n//     { type: 'literal', value: '日' },\n//     { type: 'weekday', value: '星期三' },\n//     { type: 'literal', value: ' ' },\n//     { type: 'dayPeriod', value: '上午' },\n//     { type: 'hour', value: '1' },\n//     { type: 'literal', value: ':' },\n//     { type: 'minute', value: '00' },\n//     { type: 'literal', value: ':' },\n//     { type: 'second', value: '00' }\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\n}\n\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\n  timeZone: 'America/Los_Angeles',\n  year: 1995,\n  month: 12,\n  day: 7,\n  hour: 3,\n  minute: 24,\n  second: 30,\n  millisecond: 0,\n  microsecond: 3,\n  nanosecond: 500,\n  calendar: 'iso8601'\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote>\n<p>周六不放假休息，还在这加班搞 CTF？</p>\n</blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/86535/11/24318/75037/622032a8E4f94d4ae/89703ccc122cf4e0.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"从 Google Analytics 的统计代码说起 —— 谈谈 script 标签的 async 和 defer 属性","date":"2020-10-13 09:25:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/80291/2/16552/19311/622032b3Eb300c2aa/66748fc8124a01c5.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/script-async-defer/\">https://blog.skk.moe/post/script-async-defer/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/script-async-defer/"},{"title":"再快一点，再快一点 —— 优化博客白屏时间的实践","date":"2020-10-03 08:40:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/84919/3/23076/58443/622032aeEd00a9785/3b2dd1fa94299bc5.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/improve-fcp-for-my-blog/\">https://blog.skk.moe/post/improve-fcp-for-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/improve-fcp-for-my-blog/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将 […]","link":"https://flyhigher.top/develop/2160.html"}]