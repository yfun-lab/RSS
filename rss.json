[{"title":"处理器简史 04 | 专利官司刀光剑影，公关危机拱手河山","date":"2022-03-30 09:33:13","description":"80 年代末、90 年代初，英特尔和 AMD 在各自风格强硬的创始人领导下，在实验室、法庭展开了多线作战。凭借技术上的优势，英特尔一度接近独大，但接踵而来的产品纰漏、公关失算和法庭失利，却给了 AMD 重整旗鼓、以下克上之机。<a href=\"https://sspai.com/prime/story/sv-anecdotes-04\" target=\"_blank\">查看全文</a><p>本文为会员文章，出自<a href=\"https://sspai.com/prime/precog/single\" target=\"_blank\">《单篇文章》</a>，订阅后可阅读全文。</p>\n","link":"https://sspai.com/prime/story/sv-anecdotes-04"},{"title":"咖啡生活从摩卡壶开始，一杯简单的浓缩咖啡怎么做","date":"2022-03-30 07:50:15","description":"Espresso 的源头，从摩卡壶开始。<a href=\"https://sspai.com/post/71794\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/71794"},{"title":"汽车的 OTA 功能，真的能让车「常用常新」吗？","date":"2022-03-30 07:20:06","description":"\n<p data-pid=\"uDgh6t5f\"><b>理论上可以，并且OTA的使命就是让车“常用常新”</b>。</p>\n<p data-pid=\"2rByh1jg\">但是在具体操作上，各个车企或者车型能够给消费者带来的新鲜感并不一致，主要在于以下几个方面：</p>\n<ol>\n<li data-pid=\"tXGi9AXh\">这台车的哪些功能/性能是由软件控制/决定的？</li>\n<li data-pid=\"zHcsy9Rl\">在由软件控制的功能中，又有哪些控制器支持OTA刷新？</li>\n<li data-pid=\"2WJ-2Qry\">在支持OTA刷新的控制器中，又有哪些做到了足够的硬件预留？</li>\n<li data-pid=\"lIGEAb78\">车企对于车辆的“成长”是否有着统一的规划以及持续的投入？</li>\n</ol>\n<p data-pid=\"yLoHA4me\">那么接下来，我就一条一条的带大家来看一下。</p>\n<h2>这台车的哪些功能/性能是由软件控制/决定的？</h2>\n<p data-pid=\"bom2yoJs\">虽说“软件定义汽车”这个概念火了也还没多少年，但是软件在汽车上发挥作用的时间其实并不短。</p>\n<p data-pid=\"pkGOmyDf\">尤其是到了这几年，<b>即使是燃油车，大部分的功能其实也都和软件息息相关</b>。</p>\n<p data-pid=\"vnHr77Yu\">比如我们经常说的“变速箱的调校”、“动力总成的匹配”，其实都是依靠软件中逻辑以及各个参数的标定来实现。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-f05b2f45edf4340fed5a946cdf02f431_720w.jpg?source=b1748391?rss\" data-caption=\"毕竟这玩意儿咱也没法OTA对不对？\" data-size=\"normal\" data-rawwidth=\"1798\" data-rawheight=\"750\" data-watermark=\"watermark\" data-original-src=\"v2-f05b2f45edf4340fed5a946cdf02f431\" data-watermark-src=\"v2-b166ea3e1a186827d81d0b92fe53d7f2\" data-private-watermark-src=\"v2-bff8263a96ea0fc905a4142d87612906\"></p>\n<p data-pid=\"o_zGF5Ji\">事实上，除了车身、被动悬架（传统弹簧&amp;减振器）、手动座椅……等等部件外，别的包括发动机、变速箱、电动助力转向、制动（包括ESP）、门窗、灯光、辅助驾驶、智能座舱……等等一系列零件或功能都无法脱离软件而独立存在。</p>\n<p data-pid=\"RmYFN-gU\">所以，从这个层面来说，<b>如果一台车由软件控制/决定的功能越多，那么其OTA的基础也就越好</b>。</p>\n<p data-pid=\"p_M848pd\">毕竟，一个纯硬件的东西，咱也没法OTA不是？</p>\n<h2>在由软件控制的功能中，又有哪些控制器支持OTA刷新？</h2>\n<p data-pid=\"-3w418-0\">其实一般来说，绝大多数的控制器都是支持刷新的，最起码是支持用专业诊断工具刷新的。</p>\n<p data-pid=\"CRKj_Nw2\"><b>但是能否支持OTA刷新，主要取决于两个因素：</b></p>\n<ol>\n<li data-pid=\"QMy12otb\">控制器是否有空间和能力来支持AB分区；</li>\n<li data-pid=\"glxEkieV\">车辆是否有能力从外界下载软件包，并通过车内通信网络分发至各控制器。</li>\n</ol>\n<h3>控制器是否有空间和能力来支持AB分区</h3>\n<p data-pid=\"D5RMdP4v\">首先跟大家解释下什么是AB分区。</p>\n<p data-pid=\"Cwv198RN\">AB分区就是控制器需要把存储空间分成两块，一部分正常运行并作为备份（我们称之为A区），另一部分执行刷新工作（我们称之为B区）。</p>\n<p><img src=\"https://pica.zhimg.com/v2-6fab8814221f6d45281d5b33b243d513_720w.jpg?source=b1748391?rss\" data-caption=\"汽车ECU控制器\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1052\" data-watermark=\"watermark\" data-original-src=\"v2-6fab8814221f6d45281d5b33b243d513\" data-watermark-src=\"v2-94ccf5661deabcafec04a3f456d90ea4\" data-private-watermark-src=\"v2-230801b2683c1055bf2dd55899ad02aa\"></p>\n<p data-pid=\"DYK69eOV\">如果升级成功，则在重新启动后切换到B区工作，擦除A区部分的内容以便下一次升级时刷写；</p>\n<p data-pid=\"a8DbmEmn\">如果升级不成功，则继续保持在A区工作，擦除B区的内容以便重新升级。</p>\n<p data-pid=\"2oD4jTFp\"><b>虽然AB分区并不是OTA的必要条件，但却可以大幅度降低车辆控制器在OTA后变砖的可能性</b>，所以只有极少数服务保障做得好的车企才敢在控制器不支持AB分区的情况下OTA，否则大多都会放弃。</p>\n<h3>车辆是否有能力从外界下载软件包，并通过车内通信网络分发至各控制器</h3>\n<p data-pid=\"pzeS04Ns\">想要OTA，一个必要条件就是——车子能联网下载软件，并且FOTA Master有足够的空间来储存软件，最后还要顺利地将软件分发至各控制器。</p>\n<p data-pid=\"lPv14rJa\">前两个好理解，这里我主要讲讲分发的事情。</p>\n<p data-pid=\"--NTUSLd\">即使是现在，绝大多数的车辆其车内各控制器之间都是依靠CAN总线网络来通信，只有少部分车的少部分控制器用上了以太网通信。</p>\n<p data-pid=\"hxc3qhIT\">所以<b>在大部分情况下，通过CAN总线来传输或者刷新软件的速率是比较低的</b>，遇到稍微大点的软件，刷个半个小时也不是可能。</p>\n<p data-pid=\"aaxVQOR5\">此时如果是电动车，时间长就长吧，锁车走人就行。</p>\n<p data-pid=\"mHMMjmto\">但如果是燃油车，就不一定能做到这么从容了，因为12V蓄电池的电量不一定能支撑这么长时间的刷新，万一刷一半没电了还得喊救援，得不偿失。</p>\n<p><img src=\"https://pica.zhimg.com/v2-3118f9b08ea706da8c4d9fe84b20446f_720w.jpg?source=b1748391?rss\" data-caption=\"汽车电气架构的进化\" data-size=\"normal\" data-rawwidth=\"2800\" data-rawheight=\"638\" data-watermark=\"watermark\" data-original-src=\"v2-3118f9b08ea706da8c4d9fe84b20446f\" data-watermark-src=\"v2-7df42c0687aed1645874ee7bc10e36b8\" data-private-watermark-src=\"v2-ad76351a83f6cac568675e89c0a30e66\"></p>\n<p data-pid=\"qZlcm_wH\">正是因为上述原因，<b>真正能支持全车控制器升级的车往往都需要重新设计整车电气架构</b>。</p>\n<p data-pid=\"UjTNAHL9\">而那些出生于旧平台的油车，有的时候虽然会宣传自己支持“全车OTA”，但实际上可能只有少数几个控制器支持。</p>\n<h2>在支持OTA刷新的控制器中，又有哪些做到了足够的硬件预留？</h2>\n<p data-pid=\"4Zwu45zy\">不管是新势力还是传统车企，造车并不是一件暴利的事情，因此<b>绝大多数车企在物料成本方面的压力还是挺大的</b>。</p>\n<p data-pid=\"8kZP2OO5\">而在另一方面，由于近些年智能驾驶、智能座舱等领域的技术发展相对比较快，其<b>对外部硬件或者本身芯片算力、储存空间的依赖也是不断提升的</b>。</p>\n<p data-pid=\"W0ksDIhJ\">所以，如果想要真的做到“常用常新”，如何在硬件预留和整车成本压力间取得一个很好的平衡是个技术活。</p>\n<p><img src=\"https://pica.zhimg.com/v2-cfa94ddfafde8ac08366501190754638_720w.jpg?source=b1748391?rss\" data-caption=\"现在看来平平无奇的硬件，在当年还是比较领先的\" data-size=\"normal\" data-rawwidth=\"918\" data-rawheight=\"515\" data-watermark=\"watermark\" data-original-src=\"v2-cfa94ddfafde8ac08366501190754638\" data-watermark-src=\"v2-640e09a5d84bd79551d8d65cd28207a0\" data-private-watermark-src=\"v2-4485effeb68f7409e56284892a5fcfe7\"></p>\n<p data-pid=\"77vqA2ED\">这里我们以蔚来举例吧，蔚来的NT1.0平台自2017年上市以来在智驾方面是MobileEye Q4+5R1V的方案，在智舱方面则是Nvidia Terga处理器。</p>\n<p data-pid=\"K_AtPBd2\">毫无疑问，这个硬件配置在当时绝对是领先的，同时成本也是比较高的。</p>\n<p data-pid=\"Fwg9uKwO\">也正因如此，蔚来才能在NT1.0发布快五年的今天持续提升该平台的能力和用户体验，的确是做到了“常用常新”。</p>\n<p data-pid=\"aof4GT8k\">但与此同时，无论是和友商相比，还是和蔚来自己的NT2.0平台相比，NT1.0的硬件的确也落后了，智驾方面的潜力基本挖光，而智舱方面卡顿的抱怨也越来越多。</p>\n<p data-pid=\"v6DmE4rQ\">所以从这个层面上来说，<b>OTA让车新了，但又没那么新，因为相关控制器的硬件预留决定了OTA的潜力</b>。</p>\n<h2>车企对于车辆的“成长”是否有着统一的规划以及持续的投入？</h2>\n<p data-pid=\"0SXv9hne\"><b>如果说前三点更多的是能力问题，那么这一点则是态度问题。</b></p>\n<p data-pid=\"n8P5paPf\">我现在的两台车都是支持OTA的，但是其中一台自2018年提车后一共只进行了两次针对娱乐系统的OTA，最近一次是2019年年底。</p>\n<p data-pid=\"v3z41vVl\">而另一台车提车到现在不过9个月，已经对车辆各个控制器推送了好几次OTA，而且其中大多数都能够给用车体验带来比较大的提升。</p>\n<p data-pid=\"BKVs04q7\"><b>此外，并不是所有的用户都喜欢变化。</b></p>\n<p data-pid=\"ckV1OxdO\">那么针对这种情况，车企是否能够很好的把自己的更新计划与更新内容与用户分享，让用户对于即将到来的更新有个预期？</p>\n<p><img src=\"https://pica.zhimg.com/v2-60ee50029b137372fdce9f6e0062c1a8_720w.jpg?source=b1748391?rss\" data-caption=\"公测既是对用户的尊重，更是对产品的把控\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"405\" data-watermark=\"watermark\" data-original-src=\"v2-60ee50029b137372fdce9f6e0062c1a8\" data-watermark-src=\"v2-9797a57d085bf733f85f41ae0dca17fc\" data-private-watermark-src=\"v2-2216576a410c8c088be12550e3e3bda1\"></p>\n<p data-pid=\"gHa33xWm\">或者说，车企是否会先组织一批用户进行内测体验，根据反馈优化后再推出最终的版本？</p>\n<p data-pid=\"9AYjh9lr\">那么根据我个人的经验来看，传统车企在这两方面上都比新势力做得差很多。</p>\n<p data-pid=\"oKpuy6ls\"><b>而车企在量产后对于OTA的规划和投入，恰恰才是车辆能否“常用常新”的核心。</b></p>\n<hr>\n<p data-pid=\"EE0aJB85\"><b>我是 <a href=\"https://www.zhihu.com/people/9caf5861c83b0e4af5cdd5a04260151e\" class=\"internal\">@三斤哥</a>，一个新能源、变速箱、智能网联都有涉足的汽车主机厂工程师。有兴趣的朋友可以关注我，我会从汽车工程师的角度给大家分享相关知识、解读热点问题。</b></p>\n<a data-draft-node=\"block\" data-draft-type=\"ad-link-card\" data-ad-id=\"fee_9caf5861c83b0e4af5cdd5a04260151e\"></a>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/xu-xin-24-34?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">三斤哥</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/473989542/answer/2413445609?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">87 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/452921453?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">现在买车还是等小米汽车？</a><br><a href=\"http://www.zhihu.com/question/504383452?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">现在想买车，可是后面汽车更新换代出来的汽车更好，要不要再等一两年？</a><br>\n","link":"http://www.zhihu.com/question/473989542/answer/2413445609?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"同步、导入、链接，聊聊我为何用回 LiquidText 读文献","date":"2022-03-30 06:34:28","description":"LiquidText 在不断进化。因为加入了跨设备实时同步、文献管理器整合，以及深度链接这三个重要功能，显著改善了使用体验，丰富了应用场景。我愿意为它订阅付费，并且重新纳入到我的笔记工具系统中。<a href=\"https://sspai.com/post/72033\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72033"},{"title":"跨越十年的无线充电器：「点金石」与 MagSafe 的幕后哲学","date":"2022-03-30 02:56:59","description":"勇敢的尝试之下，包裹在优雅躯体之下的，是窥视未来和可能性的探索精神。\n在中国，它的名字叫「点金石」。<a href=\"https://sspai.com/post/72370\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72370"},{"title":"派早报：米家发布全能扫拖机器人、索尼推出全新 PlayStation Plus 订阅服务等","date":"2022-03-30 00:40:10","description":"英伟达 RTX 3090 Ti 正式发布，英特尔发布酷睿 i9-12900KS 处理器等。<a href=\"https://sspai.com/post/72369\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72369"},{"title":"《进击的巨人》到底有多少地鸣巨人？","date":"2022-03-29 12:53:32","description":"\n<p data-pid=\"9mGRCwPV\">来稍微算一下，纯属娱乐。</p>\n<p data-pid=\"NBjCmh8Y\">关于地鸣巨人（也就是城墙巨人）的具体数量，漫画中始终没有给出准确的数字，一直在用“几千万”“亿万”之类的模糊字眼来形容。</p>\n<p data-pid=\"hFFRxdfs\">比如，威利戴巴的演说：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-8e730e33ff319fa9266b4a35d211ed18_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1406\" data-rawheight=\"1286\" data-watermark=\"watermark\" data-original-src=\"v2-8e730e33ff319fa9266b4a35d211ed18\" data-watermark-src=\"v2-ff2a55af6dedebd86014e29c99e40c0c\" data-private-watermark-src=\"v2-54e68c73a74b33cb92a83ec4aa529612\"></p>\n<p data-pid=\"zcl51p1v\">艾伦第一次提及地鸣的威力：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-615a3df9b122f7e499992d4e181afdb5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"856\" data-rawheight=\"686\" data-watermark=\"watermark\" data-original-src=\"v2-615a3df9b122f7e499992d4e181afdb5\" data-watermark-src=\"v2-df5622598e07cd757a9122169fc83fa5\" data-private-watermark-src=\"v2-0613ebde7133659c112e97e15babb920\"></p>\n<p data-pid=\"RRgXnsrc\">那么，城墙中到底有多少巨人呢？</p>\n<p data-pid=\"XSr2Oh8K\">我们根据动画第二集中“现在可能公开的情报“可以看到，帕拉迪岛的三道墙”玛利亚之墙““罗塞之墙”和“希纳之墙”是三个同心圆的形状，<b>三道墙的半径都已经给出</b>，所以我们可以轻易地算出它们的周长，除以每个巨人所占的长度，就是每道墙中的巨人数量。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d3ca355d016c95dd675a945051bdeceb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1229\" data-rawheight=\"768\" data-watermark=\"watermark\" data-original-src=\"v2-d3ca355d016c95dd675a945051bdeceb\" data-watermark-src=\"v2-9886732af4e29c3190f14a4d055b31b0\" data-private-watermark-src=\"v2-8db79e75f43286812057b2af23b686c9\"></p>\n<p data-pid=\"Uxy1qVdc\">这个很容易理解。</p>\n<p data-pid=\"UbjGkzSP\">根据设定，三道墙的半径分别是：250 km，380km和480 km。所以三道墙的总周长是：</p>\n<p data-pid=\"bvSxfmRR\"><img src=\"https://www.zhihu.com/equation?tex=L%3D2%5Cpi%28r_1%2Br_2%2Br_3%29%3D6974%5C+km\" alt=\"L=2\\pi(r_1+r_2+r_3)=6974\\ km\" eeimg=\"1\"></p>\n<p data-pid=\"k9MmMTFp\">比较难算的在于，<b>每道墙上还有四个瓮城。</b></p>\n<p data-pid=\"zQmVYKe6\">所谓“瓮城”，是<b>中国古代城池的一种特殊设计。</b>为了<b>加强城堡或关隘的防守</b>，而在城门外修建的半圆形或方形的护门小城，形如“瓮”（口小肚阔的大瓶）。假若敌军攻入瓮城中，只要将主城门与瓮城门同时关闭，就能将敌军困于里面，形成“瓮中捉鱉“的局势。西方也有类似概念，叫做“<b>barbican</b>”。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-cf9e3d69a7c56c3bb2c77053315df384_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"461\" data-watermark=\"watermark\" data-original-src=\"v2-cf9e3d69a7c56c3bb2c77053315df384\" data-watermark-src=\"v2-b4e0f713eaf3ebccaafa1846290f567d\" data-private-watermark-src=\"v2-11d76de24e8b303f46ce8964dc270433\"></p>\n<p data-pid=\"EcbbipeY\">历史上的瓮城只有军事作用，一般瓮的面积非常小，里面是不住人的。而帕拉迪岛的瓮城的不同之处在于，它还肩负着<b>“吸引巨人”的诱饵作用</b>，所以，必须保证里面有<b>足够数量的人口</b>，所以，这些瓮城的相对面积要大得多。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-da51fa672933919755afb5e3ed12b828_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1278\" data-rawheight=\"1134\" data-watermark=\"watermark\" data-original-src=\"v2-da51fa672933919755afb5e3ed12b828\" data-watermark-src=\"v2-996aa90477f02acb2dd8fecfd42e1dcc\" data-private-watermark-src=\"v2-ec5fdb131607f82e0e3d590af7da1072\"></p>\n<p data-pid=\"iIi2G3Ig\">比如，故事开始的地点——希甘希纳区人口众多，粗略估计有2000幢房屋，1万以上人口。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-c675d08d3addaeb00fc78ffa7c4d9688_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-c675d08d3addaeb00fc78ffa7c4d9688\" data-watermark-src=\"v2-caa1e8b1bc4955c8724347c29b4d1864\" data-private-watermark-src=\"v2-5a4a0767e38b0c229acce82604bfcd74\"></p>\n<p data-pid=\"lrcQLUhI\">这些瓮城在城墙中所占比例不大。阿尔敏曾经说过好几次，希甘希纳区外墙里只有几百个巨人：</p>\n<p data-pid=\"rfr5VZTH\">“如果只是消灭马莱联合军，只靠希甘希纳区外墙那几百个巨人就足够了。“</p>\n<p><img src=\"https://pica.zhimg.com/v2-6e131ceadbcbc7fbd6fe8eb0b69f67a3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"561\" data-watermark=\"watermark\" data-original-src=\"v2-6e131ceadbcbc7fbd6fe8eb0b69f67a3\" data-watermark-src=\"v2-c715c4be6d76aa33a37419cf2a527ef9\" data-private-watermark-src=\"v2-fda9cd22587ee0f6a4fa3c12764acfbc\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-d85b36c14f4537f5030bea30a11a3095_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1100\" data-rawheight=\"936\" data-watermark=\"watermark\" data-original-src=\"v2-d85b36c14f4537f5030bea30a11a3095\" data-watermark-src=\"v2-008c369cb1bfb3958bdd51f3a6c90a67\" data-private-watermark-src=\"v2-1b25952a526e631a2bc4adc148b0197c\"></p>\n<p data-pid=\"i_y-KeS0\">而希甘希纳区外墙有几百个巨人，最早是耶雷娜提到的，即所谓的“<b>有限度地鸣</b>”。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-b546ba369e4289ca566d6d8e46ec3611_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"862\" data-watermark=\"watermark\" data-original-src=\"v2-b546ba369e4289ca566d6d8e46ec3611\" data-watermark-src=\"v2-85a9030dd8c746168b50385cb256c2b4\" data-private-watermark-src=\"v2-3dfe9b6695f330b2d672d0b83c9ffaa0\"></p>\n<p data-pid=\"n_4SAXg8\">我们从动画第1季第1集中的画面可以看到，希甘希纳区的城墙分为了近似相等的57个格子，而超大型巨人的肩宽大约占了2/3个格子。根据下文的计算结果，每个格子的长度约为28 m，希甘希纳区外墙总长度约为1596 m，大概可容纳 <img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7B1540%7D%7B16.8%7D%5Csimeq+95\" alt=\"\\frac{1540}{16.8}\\simeq 95\" eeimg=\"1\"> 个巨人，与耶雷娜、阿尔敏的描述勉强在一个数量级。</p>\n<p data-pid=\"HFxBdCpE\">考虑三道墙共12个瓮城，全部加起来，往多了说也不过数千巨人，所以对于我们后面计算的结果来说，是可以忽略的小量。</p>\n<p><img src=\"https://pica.zhimg.com/v2-11e7c65d7af95210feebf5278fbe46db_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"602\" data-rawheight=\"341\" data-watermark=\"watermark\" data-original-src=\"v2-11e7c65d7af95210feebf5278fbe46db\" data-watermark-src=\"v2-8080fccab2cd375f9b29a4e63be29fca\" data-private-watermark-src=\"v2-a1dad67df27a03522c3cc9ccd7106fda\"></p>\n<p data-pid=\"M3adGG4F\">好了，要知道城墙中有多少巨人，还要算出巨人的肩宽。</p>\n<p data-pid=\"MfmUobUY\">我们知道，城墙高50 m，而根据《进击的巨人》动画第2季第1集的镜头，巨人的头部离城墙顶端还有一段距离，约为5 m。感谢评论区 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/ec5759e6a6945c16336af06fc9ecda50\" data-hash=\"ec5759e6a6945c16336af06fc9ecda50\" data-hovercard=\"p$b$ec5759e6a6945c16336af06fc9ecda50\">@yun zi</a> 老师提醒，动画第1季第25集的“目前可公开情报”中提及一个矿工的故事，表明城墙在地下也有一定深度的延伸，因此我们假设巨人的脚部在地下5米处，即城墙巨人的身高依然为50 m。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-37cb0491cd5aa0ef43aec71b5fffdbd6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2268\" data-rawheight=\"1278\" data-watermark=\"watermark\" data-original-src=\"v2-37cb0491cd5aa0ef43aec71b5fffdbd6\" data-watermark-src=\"v2-99d043c3e4816402015276029fc44fa5\" data-private-watermark-src=\"v2-0688e17d6945d59a77bdee4618c9b98e\"></p>\n<p data-pid=\"CNCF1BZH\">从这个正视图中，可以计算出巨人的身高：肩宽 = 2.98。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-0766b225981bbca2a1f4e615ca6d1bed_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"612\" data-rawheight=\"1272\" data-watermark=\"watermark\" data-original-src=\"v2-0766b225981bbca2a1f4e615ca6d1bed\" data-watermark-src=\"v2-055ac69ace6d82a4a8796ec91c8ff72b\" data-private-watermark-src=\"v2-17a07cb7532ee2834e0231c1a21da4c9\"></p>\n<p data-pid=\"u0qqEPwd\">很多人都说“城墙巨人和超大型巨人的体型是一样的”，在这里说一个很有意思的点。很多人都知道城墙巨人（50 m）和超大型巨人（60 m）身高不同，但大家可能很少注意到，<b>同为超大型巨人，阿尔敏“超大巨”和贝尔托特“超大巨”的身材是不一样的。</b></p>\n<p data-pid=\"iN5d7-jp\"><b>阿尔敏“超大巨”的肩宽为15米，贝尔托特“超大巨”的肩宽为18.75米，前者显然比后者更瘦一些。</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-9c6d35d14c5d839313c0b7eff2ef06e1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1456\" data-rawheight=\"1338\" data-watermark=\"watermark\" data-original-src=\"v2-9c6d35d14c5d839313c0b7eff2ef06e1\" data-watermark-src=\"v2-7d8abcba0346281b17bb9c1fd683796a\" data-private-watermark-src=\"v2-6af77ba3278eb535284238b7e2cbf257\"></p>\n<p data-pid=\"0y4xqBYc\">照这样计算，<b>城墙巨人的身高肩宽比介于阿尔敏“超大巨”和贝尔托特“超大巨”之间，</b>其肩宽为</p>\n<p data-pid=\"Q3LaGFic\"><img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7B50%7D%7B2.98%7D%5Csimeq+16.8%5C+m\" alt=\"\\frac{50}{2.98}\\simeq 16.8\\ m\" eeimg=\"1\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-cc4f80f791c9130608f820fdbbe79cef_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"720\" data-watermark=\"watermark\" data-original-src=\"v2-cc4f80f791c9130608f820fdbbe79cef\" data-watermark-src=\"v2-09c1683c0798222abd78788f08e8e576\" data-private-watermark-src=\"v2-e9aabd9a452f4a5f42aec800abfe3640\"></p>\n<p data-pid=\"XTZ4WPev\">假设巨人肩部之间没有间距，我们计算的最后结果是：</p>\n<p data-pid=\"7NmhOc73\"><img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7B6974%5Ctimes10%5E3%7D%7B16.8%7D%3D415119\" alt=\"\\frac{6974\\times10^3}{16.8}=415119\" eeimg=\"1\"></p>\n<p data-pid=\"RC59mGqt\">因此，<b>地鸣巨人的总数量约为42万。</b>如果进一步考虑巨人彼此之间的距离，数字会进一步缩小。</p>\n<p data-pid=\"GEAMAhpi\">因此，这个计算结果离艾伦说的“几千万巨人”还是查了两个数量级的。</p>\n<h3>最后分享一个小细节：</h3>\n<ul><li data-pid=\"Wr81dRha\"><b>地鸣巨人的速度有多快？</b></li></ul>\n<p data-pid=\"LaAjRhAn\">地鸣巨人慢吞吞的行进方式会给我们一种其速度很慢的错觉。其速度究竟有多快？根据漫画第129话的内容，<b>地鸣巨人可以在半天内行进600 km，由此可以计算其的行进速度是50 km/h。</b>如果把“半天”理解为“半个白天（6小时）”，那么巨人的行进速度为100 km/h。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-80261213027e9cefec41ee7c1dd0f944_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"938\" data-rawheight=\"968\" data-watermark=\"watermark\" data-original-src=\"v2-80261213027e9cefec41ee7c1dd0f944\" data-watermark-src=\"v2-c0ee1cbefdd27dfbd312523ddea8cf02\" data-private-watermark-src=\"v2-26407213d4940bd758b99e5c5e838a3a\"></p>\n<p data-pid=\"sJ8OSHQm\">查阅资料得知，真实世界中<b>马匹急驰的平均速度也只有40-48 km/h，世界纪录是70.76 km/h。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-052dee620ee13f1121df759a1d8974e7_720w.jpg?source=b1748391?rss\" data-caption=\"https://en.wikipedia.org/wiki/Horse#Movement\" data-size=\"normal\" data-rawwidth=\"1134\" data-rawheight=\"188\" data-watermark=\"watermark\" data-original-src=\"v2-052dee620ee13f1121df759a1d8974e7\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"uLF0wdbO\">然而巨人世界中，调查兵团的战马是经过改良的，其速度可以达到75-80 km/h，因此韩吉口中的“半天”应该是“半个白天（6h）”的意思。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c59a31fd4f3d0d3c6ecf5f57a9ad4833_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1648\" data-rawheight=\"840\" data-watermark=\"watermark\" data-original-src=\"v2-c59a31fd4f3d0d3c6ecf5f57a9ad4833\" data-watermark-src=\"v2-c1e04450665685213eb4c2b1bfefb735\" data-private-watermark-src=\"v2-fe638389179982aa3d739492d77bb479\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-c9aa5e6beaf266e16a971174e7cd35a2_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1544\" data-rawheight=\"840\" data-watermark=\"watermark\" data-original-src=\"v2-c9aa5e6beaf266e16a971174e7cd35a2\" data-watermark-src=\"v2-64844d225cd9c68c1013cf1f703d1e2d\" data-private-watermark-src=\"v2-728f8fa50dd65b8d6dff4e72dcb6abdf\"></p>\n<h3>拓展阅读：</h3>\n<a href=\"https://www.zhihu.com/question/523295110/answer/2404884808\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-8ba5f0d19445d5266567431c5e18b9c3_qhd.jpg?source=b1748391\" data-image-width=\"1818\" data-image-height=\"1440\" class=\"internal\">《进击的巨人》中法尔科的颚之巨人真的能飞起来吗？</a><a href=\"https://www.zhihu.com/question/523798811/answer/2407852679\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-f0638ee39e9a73c5502b6e2a3e459268_qhd.jpg?source=b1748391\" data-image-width=\"2314\" data-image-height=\"1274\" class=\"internal\">为什么《进击的巨人》中巨人的身材比例不一样？</a><a data-draft-node=\"block\" data-draft-type=\"ad-link-card\" data-ad-id=\"fee_00c3f6bb68825344a7a8d80bfcbbe081\"></a><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/question/524277410/answer/2413636802?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\">知乎用户（登录查看详情）</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>延伸阅读：<br><a href=\"http://www.zhihu.com/question/392827950?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">在哪看进击的巨人漫画？</a><br><a href=\"http://www.zhihu.com/question/463677771?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">你是因为什么入坑漫画《进击的巨人》的？</a><br>\n","link":"http://www.zhihu.com/question/524277410/answer/2413636802?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评论《三国杀》这款游戏？","date":"2022-03-29 11:09:01","description":"\n<p data-pid=\"HDf6jJzI\">三国杀我是从2008年内测阶段就开始参与的玩家，于今已经14年了。从身份场，3V3到现在的国战，我见证了三国杀十多年来的各项重大改版，参加过不止一届的三国杀线上和线下的比赛，整个过程有友情、有爱情、有快乐、有挫折。从个人的角度，我对这一款游戏是很有感情的。</p>\n<h3>身份场</h3>\n<p data-pid=\"hm-w0JWp\">一开始打三国杀的时候，很多人都是从身份场开始的。8人局很经典，只是内奸的存在，一直是一个不太好处理平衡的事情。我觉得这是一个桌游从线下搬到线上的过程中的一个误会。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ecc3dfd1c6db2a54ba17117d2f67651c_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1028\" data-rawheight=\"583\" data-watermark=\"original\" data-original-src=\"v2-ecc3dfd1c6db2a54ba17117d2f67651c\" data-watermark-src=\"v2-f523375f8fd150209ed12f8f7797f816\" data-private-watermark-src=\"v2-eb7a68f9ea67b7250c8e650d7a912f74\"></p>\n<p data-pid=\"iLUEJ2v-\">线下打八人局，尤其是大家不怎么会玩的时候，表演是会有一些比重的，内奸这个角色非常有趣，装忠是合理而有趣的战术——可以参考狼人杀没有专业化，正规化之前的操作。但是把三国杀挪到线上之后，线上大家都是对着牌的陌生人，虽然聊天框可以打字，但是大家的专注点不在于社交，而在牌局上。</p>\n<p data-pid=\"yVw66kH8\">在三国杀Online，内的终极打法被迅速的开发出来，它是由两个经济学的权衡所决定的：</p>\n<p data-pid=\"jJizEQ5q\">首先是经济学中的显示原理——装忠是无效的，因为你的目标始终和忠臣不一样，如果你把自己装的特别忠，那么最终会失去和主公博弈的资本；如果你装的不是特别忠，那么装有什么意义呢？</p>\n<p data-pid=\"yfAAyvCL\">其次是最优化——因为内奸胜利的前提是反贼全灭，和主公单挑获胜，所以这个时候内奸分的是主公的胜率，而不是反贼的胜率——只有在反贼全灭的情况下，才谈得到内奸的胜利。所以内奸几乎一定是要在某个阶段表现出对主忠的敌意甚至于压制的。</p>\n<p data-pid=\"Knat8X3F\">没有了线下温情脉脉的表演加戏，线上三国杀回归了理性，迅速的把八人局吃透了。吃透之后大家都发现了这个不平衡的问题，加上三国杀向着竞技发展，就有了3V3.</p>\n<h3>3V3</h3>\n<p data-pid=\"L5ly5XNM\">3V3 是三国杀组织的竞技类游戏。有点像Dota，大家通过依次拿将组队，来获得优势。3V3 显然更加具有竞技性，由此开发出了很多的流派。最初对33的理解，大家着眼于稳和控，一回合能够偷两张牌的张辽在3V3中彻底封神。</p>\n<p data-pid=\"PkDsVKIC\">而在3V3发展初期，最古早阵型就是双爆张飞郭嘉黄盖的暖二连。黄盖详尽一切办法攻击郭嘉，然后郭嘉遗计给张飞一张A和所有的杀，等黄盖还剩一滴血的时候，轮到张飞动，拿到了黄盖的遗产之后，又收了黄盖三张牌加上郭嘉遗计的两张牌之后爆发收主。</p>\n<p data-pid=\"scFrdO4I\">这一个阵型在最初大家对黄盖这个武将理解不够的情况下，出来是革命性的。把3V3拉到了一个新的层次。打开了这个思路之后，以黄盖为核心的一批爆阵就被开发了出来：</p>\n<p data-pid=\"dhjUk50g\">包括不限于黄盖、郭嘉、华佗的冷黄金一波，黄盖、小乔、郭嘉的冷白银一波，都是抓到之后黄盖开始表演，并且以超过60%的概率直接获得胜利的局面。</p>\n<p data-pid=\"UzXDYiXw\">后来百花齐放，绝情阵（曹操郭嘉小乔，只要摸到一个AOE就封神），痴虎阵（许褚郭嘉张飞，几乎总是能组成，许褚直接上来裸衣一个杀郭嘉，郭嘉四张牌分出给张飞，加上张飞摸的两张牌，第一回合暖二连爆发）刘备张角甄姬（洛雷阵），3V3各种线上线下的比赛如火如荼。</p>\n<p><img src=\"https://pica.zhimg.com/v2-21792d10d6dcedcc8856e093e3953178_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"747\" data-rawheight=\"404\" data-watermark=\"original\" data-original-src=\"v2-21792d10d6dcedcc8856e093e3953178\" data-watermark-src=\"v2-5c48344dfdf219f993ec6d70e3de5f46\" data-private-watermark-src=\"v2-77ae9ebdc826ab1b4aff66d49bc302cd\"></p>\n<p data-pid=\"fTigTwKj\">但是3V3的局限性也很明显，首先就是线下的比赛几乎就是明牌——裁判说不许通牌，但是各个队伍都会有一点默契，比如反间的时候，翘中指是草花，翘食指是黑桃，张角搓搓手表示有闪……反而是线上路人局才达到了官方设想的样子，但是一开比赛，那必然是小组成员微信开群通牌…… 并且更重要的是3V3的天花板还是比较低——比如下围棋，下象棋，一个新手基本上对专业选手是十死无生的，不可能赢。</p>\n<p data-pid=\"vnSdf_17\">但是3V3手气就是最大的变数。即便是黄金一波——起手就刷，没有任何干扰，理论上可以刷完牌堆的组合，胜率也就是65%-70%左右，这也是3V3的上限。用黄金一波即便是完美的符合牌序，也有刷不出来连弩，都是黑牌无法续航而尴尬弃牌的情况。</p>\n<p data-pid=\"uKz5AV0S\">作为一个竞技游戏，随机性太大，冷暖开局不均衡，这些都制约了3V3的发展，后来3V3 2.0改进了一些，对冷做了一些限制，加入了新的武将。不过对三国杀有兴趣的还是可以玩玩3V3，也就是现在统帅三军，我个人对牌序的理解，完全就是在3V3爆阵中升华的。平时一手牌五六张，怎么出其实选择不多，显不出来牌序的问题，但是3V3里面黄盖苦出来20多张牌，先出什么，后出什么，对胜率的影响是很大的。</p>\n<h3>风林火山/一将成名/界限突破</h3>\n<p data-pid=\"v32_Q8XS\">三国杀武将的失衡是必然会发生的，这是三国杀框架本身所决定的。</p>\n<p data-pid=\"WTiK3E26\">因为三国杀就那么多类型的牌，而武将不断的出，总要设计出新技能，而技能无非就是转化、预测、改变或者多摸。前两者靠质、后两者靠量。</p>\n<p data-pid=\"Q9BSF_Wq\">有转化杀的关羽，有转化桃的华佗，有转化过河拆桥的甘宁，有转化顺手牵羊的邓艾，有转化万箭齐发的袁绍……转来转去还是这么多锦囊，转化系其实一般不太会失衡，因为一回合两张牌，转成顺手牵羊也就是张辽了。而到后来能转的都转差不多了，武将牌的设计就沿着「量」的途径一去不回头了。比如张郃。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-f2826928300414ece574be20027d080c_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"635\" data-rawheight=\"466\" data-watermark=\"original\" data-original-src=\"v2-f2826928300414ece574be20027d080c\" data-watermark-src=\"v2-776466f32af4e65abea7d7b0669b54aa\" data-private-watermark-src=\"v2-a0db398a0464f6b519024478d29da5ff\"></p>\n<p data-pid=\"nLyRLzJM\">张郃可以做很多事情，可以当吕蒙，可以当张辽，可以当夏侯渊，可以当吴国太…… 不同的是，人家发动技能都是免费的，而张郃发动任何一项技能都要消耗一张牌。这就是三国杀后期将领设计的『新思路』，消耗牌量来做X做Y，或者干脆就像刘焉那样，做X做Y可以多摸牌。</p>\n<p data-pid=\"jKpVJrim\">这样一来，本来设计的比较平衡的牌堆，质量就不再重要了，走量成为了判断武将强弱的主要标准，后来大家说的阴间武将，其实都是摸牌摸的比孙权都溜，甚至于在摸牌的同时还能兼顾输出的。</p>\n<p data-pid=\"6EIM_aOi\">当年大家开玩笑的时候说的：不会出着出着，大家都用王允、糜夫人，而不用五虎了吧…… 到现在已经成为了现实。就身份场而言，作为一个游戏要运营下去，就需要不断的出新武将，而新武将肯定是要比早期的接近白板的武将更强的，久而久之，大家就只能用这些三国志书缝里面抠出来的人物来游戏了。</p>\n<p data-pid=\"qjlK60JJ\">至于界限突破，其中不乏精品，比如黄盖的突破就非常的不错。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-63be9d202bc175e4f26664323b67dbab_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"200\" data-rawheight=\"290\" data-watermark=\"original\" data-original-src=\"v2-63be9d202bc175e4f26664323b67dbab\" data-watermark-src=\"v2-7a77e8c61a5616a0a749fea172fa9cf0\" data-private-watermark-src=\"v2-ef0fa80724844a44dd8561f6be14d02a\"></p>\n<p data-pid=\"l6e9zKdQ\">但是大部分武将突破之后依然是弱将，比如——界司马懿、界诸葛亮、界关羽等等。这些武将带的历史包袱太大了，单独对技能进行加强或者增加添头，其实也不会让人多用。</p>\n<p data-pid=\"U7mFfkgo\">总之，就身份而言，在牌堆没有彻底的重新设计之前，我认为武将越来越强，老武将越来越不受欢迎，这一点无法改变的。</p>\n<h3>国战</h3>\n<p data-pid=\"P94ygaQh\">国战我倒觉得是目前三国杀几大板块里面，可持续性比较强，博弈性也比较强的。国战比较均衡，策略能力一般来说大于将面能力，也是主播比较能播出直播效果的。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-8395c64a6e97250e1b4b5a5336e802ee_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"731\" data-rawheight=\"413\" data-watermark=\"original\" data-original-src=\"v2-8395c64a6e97250e1b4b5a5336e802ee\" data-watermark-src=\"v2-66743e3a69d3fa4cc377db76991b8aeb\" data-private-watermark-src=\"v2-71f5843564ebe4835c0acd7e714347b3\"></p>\n<p data-pid=\"SWCVudiM\">国战本质上就是一个博弈，除了超级大国的情况，一般来说虽然大家都想赢，但是如果其他人不让你赢，你就一定赢不了。所以这个问题就缩减为：如何能让别人让我赢。</p>\n<p data-pid=\"tSpDaQ_L\">这个到最后就变成，让自己的信息更少被对方预料到，就赢的面更大。</p>\n<p data-pid=\"5AhLzNc7\">但是人又不是理性的，所以国战就成了一个比耐心的游戏。单纯的示弱是没用的，因为示弱别人也一样可能把你带走。胜率比较高的『降低存在感一波带』需要很高的自我纪律和执行性，这也让国战更加的多元化——人们玩游戏毕竟不仅是为了追求赢，所以在痛苦的赢，和痛快的输之间就存在一个权衡。</p>\n<p data-pid=\"LVxGJJ9A\">国战是综合考量一个人牌序能力和策略能力的，从国战是很容易判断人的性格，尤其是看到国战胜率42%以上的人，一般来说这种人比较自律，目光长远，延迟满足感比较高，能够隐忍。牌序好，打的比较浪的，胜率一般能在39%-40%之间徘徊。</p>\n<p><br></p>\n<hr>\n<p data-pid=\"Q37p8ssO\">总之我是非常感谢三国杀长期以来的陪伴，在内测的时候也确实没有想到，作为一款桌游，或者说其名字已经将其限定在三国时代的桌游，能够持续了十四年。巅峰时期，自己做将，做技能的讨论都相当的成气候，希望能够在开发出一些新的思路，把这个品牌延续下去吧。</p>\n<p></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/divinites?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">司马懿</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/284031072/answer/2413504350?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">188 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/285730370?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何向别人介绍三国杀这款游戏？</a><br><a href=\"http://www.zhihu.com/question/507840770?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《三国杀》为什么是「聪明人玩的游戏」？</a><br>\n","link":"http://www.zhihu.com/question/284031072/answer/2413504350?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"试播集 04 | 少数派作者们最近读完了啥（上）","date":"2022-03-29 09:26:53","description":"本期作者们读了关于生命起源的新书，以及品味数学的美学经典。<a href=\"https://sspai.com/post/72335\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72335"},{"title":"从时代弃子回归主流：智能手机的「副屏」经历过什么？| 怪才科技 · 01","date":"2022-03-29 08:00:00","description":"智能手机失去创新力了吗？我们来回顾一下过去那些千奇百怪的副屏设计。<a href=\"https://sspai.com/post/72206\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72206"},{"title":"一日一技｜告别声音「忽大忽小」，借助 Reaper 实现播客音量均衡","date":"2022-03-29 06:24:22","description":"轻松实现基于 LUFS 的一键音量均衡，让播客的声音表现更加稳定。<a href=\"https://sspai.com/post/72348\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72348"},{"title":"简悦 +Logseq 个人知识库搭建 | 从零开始完全指南","date":"2022-03-29 03:31:20","description":"对我来说，简悦并没有降低我面对稍后读的压力，但它大大提高了我清空稍后读的动力，特别是当它和双链笔记软件进行无缝联动时，那种读完一篇再来一篇的激情就像小龙虾配啤酒一样让人欲罢不能。它的机制决定了，我必须用自己的思想来充实笔记库，而非僵硬机械地复制剪藏一堆二手文本。<a href=\"https://sspai.com/post/72022\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72022"},{"title":"三国杀对武将的设计应该多侧重于旧武将的突破，还是新武将的出品？","date":"2022-03-29 02:32:31","description":"\n<h2>标记、突破和小作文：我眼中的《三国杀》2</h2>\n<p data-pid=\"UUPY4EbI\">by 乌合之子但愿君</p>\n<p data-pid=\"T42pvRp8\">之前写了一个1：<a href=\"https://www.zhihu.com/question/284031072/answer/2408988196\" class=\"internal\">如何评论《三国杀》这款游戏？</a> <b>题目是：从西部类型片到东方叙事学：我眼中的《三国杀》，</b>基本把该聊的大的东西都聊了一遍。这篇回答开始深度到比较细化的部分，谈谈我认为的游戏模式问题，字数会比1少很多。</p>\n<p data-pid=\"Cu6kdOh9\">本回答所有图片依然来自：<b>三国杀官方网站</b>、B站UP主<b>吃蛋挞的折棒</b>和B站UP主<b>紫髯的小乔</b>。</p>\n<p data-pid=\"KRKuhhxY\"><b>一、基于武将的那些模式</b></p>\n<p data-pid=\"uG2mWiQF\">在上一个回答里，我已经说过了，三国杀最基础、最普遍的玩法机制来自扑克。准确的说，三国杀的运行机制，是基于两幅牌进行的，一副是武将牌，一副是公共对战牌。</p>\n<p data-pid=\"1GZmwncO\">武将牌自不必说，在大部分情况下你这一局选中了该武将，就不会再替换。那么想要改变战斗的感觉，尤其是流动速度，就需要对武将技能整体进行调整。</p>\n<p data-pid=\"2oL-vQsL\">这也是一开始模式被划分的标准，标风和军争。虽然军争也有军争牌堆，但（神话再临）风林火山作为一个单独模式，以及一将成名系列模式，都是以武将作为新模式划分的。</p>\n<h2>1.出新武将</h2>\n<p data-pid=\"tD7eb-Ux\">只要武将池的选择有所偏废，那么武将在场上带给人的游戏流动速度就完全不同。</p>\n<h2>四个经典包的风格差别都很大。所谓”其疾如风，其徐如林，侵掠如火，不动如山，难知如阴，动如雷震“。</h2>\n<p data-pid=\"IAlkdIvS\">风包可能还不是很明显，毕竟是作为标准包的第一个拓展包出现的，但是加快游戏速度就是从风包开始。从火包开始，就有比较大的武将风格差异率。</p>\n<p data-pid=\"WEDekcR0\">火包强调伤害多，卧龙诸葛是典型（火计），但注入典韦、荀彧、庞统、太史慈、颜良文丑和袁绍，都或多或少具备二伤的能力。就只有庞德比较拉。</p>\n<p data-pid=\"05wGeyP9\">林包强调控制多，于是不是通过伤害，而是通过控制带来收益的武将变多了。最典型的就是曹丕和鲁肃，一个是通过翻面控制对手的回合，一个是通过换牌减少对手回合内的输出。孙坚、董卓是抗伤害多，祝融和孟获则是专门克制火包的。在我看来，林包武将的出现，正式打破了”1血＝2牌“的基本公式。</p>\n<p data-pid=\"OHYsUeUf\">山包强调防御高，或者卖血之后反伤。比如邓艾、张昭张肱、孙策、刘禅就是防御高，左慈、蔡文姬就是卖血反伤。</p>\n<p data-pid=\"R5BVtOcK\">阴包强调难以预计，也就是上限高下限低，考操作的武将。于是就有了孙亮、王基、蒯良蒯越、许攸这些BB机武将（所谓的小作文模式，也是从这个包开始的）。稍微拉垮的严颜、卢植、王平其实也很考操作。</p>\n<p data-pid=\"OPpvBV0H\">雷包强调的是瞬间爆发力，这个爆发过了，基本就萎了，代表武将就是张绣。当然其他武将也是或多或少有透支的意思，比如周妃、郝昭、袁术，都需要透支未来或当下的某些代价换取一些更可能爆发的收益。</p>\n<p data-pid=\"SInDmXPY\">你看，这几个包走下来，基本就把一个武将操作需要的六边形填满了：</p>\n<h2>伤害（多点、持续、大面积、瞬间）、控制、防御、运气——唯独没有做的，就是反伤和治愈，因为这两个部分在标准包里已经做好了。</h2>\n<p><img src=\"https://pic2.zhimg.com/v2-96fa744870e230f6fcd5d5f763b25057_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1027\" data-rawheight=\"464\" data-watermark=\"original\" data-original-src=\"v2-96fa744870e230f6fcd5d5f763b25057\" data-watermark-src=\"v2-f0bef40c28d2a18b215e3bac87c6cd4e\" data-private-watermark-src=\"v2-269172749561ec9a18828cbd1bcf0f2f\"></p>\n<p data-pid=\"4ncI9FCb\">而一将成名和星火系列就用的的别的命名方式了。一将成名是按照时间排序，而星火系列分成的六个星则是按照某个特性（或事件）进行。</p>\n<p data-pid=\"yWZqSDRZ\">之后三国杀有出新的武将包，最近比较火的就是智包和严包。</p>\n<p data-pid=\"vNld-7mh\">智包的核心就是玩转锦囊，几乎所有武将都和锦囊有关系，而且还新增了[智囊]说法，以及[奇正相生]锦囊。</p>\n<p data-pid=\"QS36rv2b\">严包的核心就是加大牌序难度，这可以说是三国杀在<b>武将和用牌设计</b>上的一个成功亮点了。严包的很多武将都有和[整肃]有关的技能，要求就是非常苛刻的牌序。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-16489dc350a5cc00cfea88129e3d7274_720w.jpg?source=b1748391?rss\" data-caption=\"小乔文章：【秉清】3月手杀测试服来也!! 严包朱儁、SP毛玠、新孙休，还有界界孙权吕蒙徐晃？\" data-size=\"normal\" data-rawwidth=\"942\" data-rawheight=\"445\" data-watermark=\"original\" data-original-src=\"v2-16489dc350a5cc00cfea88129e3d7274\" data-watermark-src=\"v2-4358cc3109489762836b683ba161ae0a\" data-private-watermark-src=\"v2-afddbc3b18a71d8aac7e7cad08b598b8\"></p>\n<p data-pid=\"K6zvDCqf\">简单说，就是要三选一，在用牌的时候每一张牌都要沿革遵守这个规则，才能获得这个奖励。</p>\n<blockquote data-pid=\"c4N589ZM\">擂进：点数递增，至少3张。  变阵：花色均相同，至少2张。   鸣止：弃牌时花色各不同至少2张。</blockquote>\n<h2><b>出了这么多风格的武将，其实也不必有新模式。</b></h2>\n<h2><b>三国杀开个活动场，某个阶段只能用某几个包的武将就可以带来完全不一样的游戏体验——如果武将还可以试用的话。</b></h2>\n<h2><b>2.替换武将</b></h2>\n<p data-pid=\"K1FkklIa\">武将出得太多有个问题，就是你是否能有那么多设计创意。</p>\n<p data-pid=\"_iO_F0An\">就算有，又应该怎么实现呢？这时候就出现了比较棘手的三个设计方向。</p>\n<h3><b>第一个方向，就是标记太多，开始占用牌堆的份额。</b></h3>\n<p data-pid=\"1YUtiLgh\">标准包里没有一个武将是要标记的，但是之后就不好说了。</p>\n<p data-pid=\"tlCk0e-G\"><b>创（周泰）、田（邓艾）、令（刘禅、刘禅其实是一次性放权标记）、箜（周妃）、权（钟会）、梦（神关羽）、逆（刘封）、匡（孙登）、米（张鲁）、咒（张宝）、舞（大小乔）、星（神诸葛）、化身（左慈）</b>.....这些武将看起来不多，但其实和标记有关的武将还有一些，只不过不一定是把牌放到武将牌上做标记的，最典型的就是张琪瑛。</p>\n<p data-pid=\"QCZgAptU\">标记多，意味着武将的技能具有独占性，当然还有一点，武将的技能具有了阶段性。标记还是相对较好的，毕竟就算写出来也没有那么长，稍微看一下也能理解。</p>\n<h3><b>第二个方向，就是小作文越来越长。</b></h3>\n<p data-pid=\"ZjWr8RHp\">小作文武将越来越多，其实说明一个危险，那就是武将设计撞车的概率变高了，所以需要小作文辅助将武将技能进行分段。</p>\n<p data-pid=\"K0Uuzu8a\">在我看来，分段有很多方式，不只是小作文描述的繁文缛节，典范就是转换技和使命技。当然这两类技能都是从觉醒技演变而来的。当然还有，令下列武将选择一项之类的说法，其实都可以大致被归类到小作文系列。</p>\n<p data-pid=\"qWSDOXpL\">不管是转换技、使命技还是觉醒技（包括后面的双势力武将），都是在完成一个逻辑：<b>让某单个武将更加要可玩性</b>。这里说的可玩当然就是说让武将的技能在一局游戏里能有一些变化，这样不至于太枯燥。</p>\n<p data-pid=\"G-czizQ6\">所以左慈、南华老仙、司马徽、关索、曹爽等能复刻别人武将技能，或获得新技能的武将也都可以算在内。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-e9861737296d764c3cab90633d891f9c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1329\" data-rawheight=\"685\" data-watermark=\"original\" data-original-src=\"v2-e9861737296d764c3cab90633d891f9c\" data-watermark-src=\"v2-a37cf42c9ff8c129a38ec5db30c99d07\" data-private-watermark-src=\"v2-40bf5c6bdf2c00fbd79f821794250b86\"></p>\n<p data-pid=\"hEHT6UiM\">国战变包更是别出心裁，让副将或主将可以换武将。</p>\n<p data-pid=\"DhJmnWE-\">这个基本思路是没有问题的，就是站在武将的基础上增加可玩性。按照这个思路进行，将旧武将进行重做，然后出<b>”界限突破“</b>模式，让玩家自行选择是否要突破也是如此——当然突破了就不可逆了。</p>\n<p data-pid=\"D1hJ0a1i\">但是直接现在大家都看得出来有用力过猛的趋势——虽然三国武将还没有出完，虽然三国杀其实是<b>汉末三国魏晋南北朝</b>的代称，毕竟东汉武将和晋朝武将还茫茫多——这说明什么，说明即便是这段历史，<b>我们中华文化依然有如同群星璀璨一般杰出人物与百家文化</b>。</p>\n<h3>第三个方向，就是小游戏武将开始露头。</h3>\n<p data-pid=\"j9APrMBC\">小游戏武将虽然也可以直接归于小作文武将，但玩家其实熟悉了，某种游戏机制，就不用更多的文字进行表述了。</p>\n<p data-pid=\"mCrxuQKO\">目前已知的小游戏武将其实在武将库里还是比较少的，但每个都能引起很大的讨论热度。</p>\n<p data-pid=\"EyGwIqIV\">比如进行<b>猜拳游戏</b>的审配和张嶷、做<b>[水转百戏图]</b>的马钧、玩[<b>疯狂的小鸟]</b>的南华老仙、接<b>[果盘]</b>的孙寒华，玩<b>[水果忍者]</b>的郑玄。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-790a39af378c7cefc69cd988b0c5c2db_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"1024\" data-rawheight=\"1438\" data-watermark=\"original\" data-original-src=\"v2-790a39af378c7cefc69cd988b0c5c2db\" data-watermark-src=\"v2-af50eefef0c722fa00a7530a96017da7\" data-private-watermark-src=\"v2-af18de6b6b3f6b048cdbb267e022cbdf\"></p>\n<p data-pid=\"1xpUKgYC\">小游戏武将有个比较麻烦的问题，就是你自己玩得蛮嗨，但是其他人得陪着你玩，这就有点不高兴了。</p>\n<p data-pid=\"VDdcPeoL\">所以最新的孙寒华改版变了，变成了大家可以一起玩<b>接水果游戏</b>了，效果怎么样姑且不论——但这个思路其实是值得借鉴的。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-b623b42c7204bf97d8acee10bbdf0d48_720w.jpg?source=b1748391?rss\" data-caption=\"折棒视频：创造历史！第一个全民共同参与的小游戏武将诞生\" data-size=\"normal\" data-rawwidth=\"1119\" data-rawheight=\"644\" data-watermark=\"original\" data-original-src=\"v2-b623b42c7204bf97d8acee10bbdf0d48\" data-watermark-src=\"v2-3446d9beade6c352acc86f3702eb648d\" data-private-watermark-src=\"v2-acc95d598a694fd00cde85c1035816d3\"></p>\n<p data-pid=\"StMT4dyu\">在上一篇文章里，我说过，武将和技能真的需要契合吗？契合点又在哪里？当然，有标记的武将可能契合点更高。但是这种<b>松散的互文关系</b>是否<b>紧密的、独一无二的、排它的</b>呢？</p>\n<p data-pid=\"wJFkMco7\">当然不是。也正如我上一篇文章所说的那样，中华文化的”意境论“帮助我们补完了其中的结构性空白，让我们把技能和武将联系到一起了。<br>那么能不能拆解开来呢？其实是可以的。</p>\n<hr>\n<p data-pid=\"vDfSRb2A\">三国杀海外服，将[华歆][左慈][南华老仙]的思路进行延展，既然武将和技能不必绑在一起，那么我做成技能库行不行？</p>\n<p data-pid=\"r2qJe8ty\">当然可以，那就是<b>强令</b>模式。<a href=\"http://link.zhihu.com/?target=https%3A//www.bilibili.com/read/cv15848209%3Fspm_id_from%3D333.999.0.0\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【令戮】三国杀海外服《太虚幻境V5·何进诛宦》图鉴!!</a> </p>\n<p><img src=\"https://pic2.zhimg.com/v2-984ac53f578ad6251204e5f14f4a1608_720w.jpg?source=b1748391?rss\" data-caption=\"小乔文章：【令戮】三国杀海外服《太虚幻境V5·何进诛宦》图鉴!!\" data-size=\"normal\" data-rawwidth=\"942\" data-rawheight=\"346\" data-watermark=\"original\" data-original-src=\"v2-984ac53f578ad6251204e5f14f4a1608\" data-watermark-src=\"v2-47533c278ab0e0a14634d57ce10b6843\" data-private-watermark-src=\"v2-9bec419507222fd2884bbcbb6e358436\"></p>\n<blockquote data-pid=\"Asf4SfnY\">出牌阶段开始时，你可以对一名其他角色发动强令，令其获得一个对应的强令技能标记。在技能所述的时机，判断该角色是否达成强令条件，依照成功或失败，执行对应效果。 </blockquote>\n<p data-pid=\"flj6vWNa\"><b>其实就是一个大型的使命技。而太虚幻境那个模式可以说是非常好玩了，好玩到爆炸的程度。</b></p>\n<p data-pid=\"k8hxvyEF\">要说武将设计，不管是旧武将突破，还是新武将的设计，其实关键还是技能的设计，毕竟三国魏晋南北朝的英雄人物，至少还有三分之一没有出完。而三国杀之后还可以新开一个游戏，做<b>春秋杀</b>，那是中华文化百家争鸣的另一个高峰，武将技能可以说待开发的空间还有很多，不过游戏模式嘛，就需要再斟酌了。</p>\n<h2>最后，说一个我的武将设计。</h2>\n<p data-pid=\"Sp-_FuVJ\">这也是三国杀还没有出的新武将，那就是提出<b>中国美学意境论集大成的文人王弼</b>。</p>\n<blockquote data-pid=\"sv33QT8t\">正始十年（249），曹爽被杀，王弼受案件牵连丢职。同年秋天，遭疠疾亡，年仅二十三岁。<br>王弼人生短暂，但学术成就卓著。著有《老子注》《老子指略》《周易注》《周易略例》《论语释疑》《周易大衍论》三卷、《周易穷微论》一卷、《易辩》一卷等数种。但其成就，不在于著述数量，而在其质量，在于其创见。<br>王弼的贵无论对后世宋明理学影响很大，他的玄学对佛教中国化、本土化也起了重要作用，其“得意忘象”的思考方法对中国古代诗歌、绘画、书法等艺术理论也有一定影响。<br>王晓毅先生给的评价是：王弼在哲学上奏出了时代的最强音。“虽然他像流星一样匆匆闪过，只生活了二十三个春秋，却以其不可思议的天才智慧之光，照亮了整个时代，指明了魏晋玄学的理论航向”。</blockquote>\n<p data-pid=\"ukbdH-nM\">王弼，三血两技能。一技能叫【无玄】出自王弼的玄学理论中，对无的研究。二技能叫【忘象】出自王弼的意境论。</p>\n<p data-pid=\"mXiJ6NkR\">【无玄】的台词是：圣人体无，无又不可以训，故不说也。//老子是有者也，故恒言无所不足。</p>\n<p data-pid=\"uaFgFTob\">【忘象】的台词是：忘象者，乃得意者也。//得意在忘象,得象在忘言。</p>\n<p data-pid=\"KVbkqtGF\"><b>无玄：你的回合限一次，你可以弃置2张不同类别的牌并将你的武将牌翻面、或流失一点体力并扣减一点体力上限。若如此做，你清除场上所有标记和被标记的状态技，将所有升级后的技能回复到游戏开始状态。清除标记时，中止所有与之相关的武将技能。</b></p>\n<p data-pid=\"qB2HruE1\">faq：标记包括判定区的延迟性锦囊。被标记的状态技包括获得的阶段性技能，也包括断肠、缠怨、止息、裸衣等。神诸葛亮的七星，以及七星带来的大雾、狂风都会被一并清除。王司徒的鼓舌标记、神吕布的怒标记也如此，曹金玉、孙寒华等的技能也会随之被重置。但如关索、曹爽那样获得的衍生技不受影响。</p>\n<p data-pid=\"Vw-voyX6\"><b>忘象：每轮限一次，当你的回合外满足以下条件之一时：你被翻回正面，你于一轮中回复第2点体力，你增加至少1点体力上限，你获得至少两张不同类别的牌，你发动[无玄]超过3次。你可以标记一名武将，称之为【忘】。拥有【忘】标记的角色，回合开始时视为已满足觉醒条件，或限定技从未发动过。</b></p>\n<p data-pid=\"J0rCSJkG\">fag：拥有[忘]标记的角色回合结束后弃置[忘]标记。[忘]标记也受[无玄]技能的影响。在王弼的回合内，发动[无玄]三次之后，需要在回合结束后，系统才会提醒你，是否要发动[忘象]。</p>\n<p><img src=\"https://pica.zhimg.com/v2-85035bb732a1c7ff20d0c7953e6e74d8_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"707\" data-watermark=\"original\" data-original-src=\"v2-85035bb732a1c7ff20d0c7953e6e74d8\" data-watermark-src=\"v2-855ccc833d55e746a7384cbd8aa5023e\" data-private-watermark-src=\"v2-bb61c00df3077cf594049801c198ed5a\"></p>\n<p data-pid=\"Xa3Rq4Gk\">敬请期待下篇回答。</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/dandoliya?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">乌合之子但愿君</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/522725234/answer/2411996108?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">12 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/42727084?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">三国杀中设计得最成功的是哪个武将？</a><br><a href=\"http://www.zhihu.com/question/486453617?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">兄弟们，我三国杀设计个武将，帮我看看强度如何？</a><br>\n","link":"http://www.zhihu.com/question/522725234/answer/2411996108?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"《Sky 光·遇》宣布动画化，首支预告 PV 公开，你有什么想说的？","date":"2022-03-29 02:25:04","description":"\n<p data-pid=\"537tuCAH\">虽然这个系列还在制作中，但是我们团队每个人都很兴奋。因为这个故事发生在《光·遇》游戏世界时间段之前，讲述的是过去先灵时代发生过的故事。具体的角色、故事和动画长度暂时还不能公开。只能说自从Switch的CG预告片开始我们就在策划动画片一直到现在了。尽情大家期待！</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/jenovaxinghanchen?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">陈星汉</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/524567704/answer/2412233925?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">19 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/439115367?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《明日方舟》历届活动宣传 PV 里，哪位6星干员的登场让你觉得最惊艳最有feel?</a><br><a href=\"http://www.zhihu.com/question/442715447?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">我冲着pv看到了《无职转生》最新话，看完之后觉得很不舒服被恶心到了，打低分有什么错？</a><br>\n","link":"http://www.zhihu.com/question/524567704/answer/2412233925?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：《健听女孩》获得奥斯卡最佳影片奖等","date":"2022-03-29 01:07:28","description":"Spotify 开始测试新的播客发现功能等。<a href=\"https://sspai.com/post/72352\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72352"},{"title":"换人就能行吗？表面看是业务问题，实际上是组织问题 | 写在凌晨1点的读书笔记No.03","date":"2022-03-28 14:37:47","description":"\n<p data-pid=\"GHBBfkx6\"><i>写在前面：这是一个「读书思考」系列。因为读书感想总在深夜蹦出来，所以这个系列就叫「写在凌晨1点」。</i></p>\n<p data-pid=\"hVQE4SO9\">一本好书，可以牵引读者进入深度思考状态，重组已有的信息和知识，带来新的、巨大的收获，这是我读完三遍《第五项修炼》之后的感受。</p>\n<p data-pid=\"EBD_NxfK\">下面分别从管理者和员工的视角，来讲这本书给我带来的思考。</p>\n<p data-pid=\"aWW5YeD0\">01 <b>管理者视角：该不该换人</b></p>\n<p data-pid=\"4PIzbrs3\">很多年前，我在一个大厂工作，带小团队。时任上级在质疑我工作进展的时候，总会直指某个员工，对我说：张三到底行不行！不行赶紧干掉！</p>\n<p data-pid=\"LaSpNB2f\">经历过几次这种质疑后，我也有点困惑：团队里这几个人真的有这么差吗？换掉这个人，问题就能解决吗？当时我没有太多经验，没有分辨能力，但大概也会觉得换人可能是对的。</p>\n<p data-pid=\"OuxH8NAb\">这样的团队管理理念，并非少数。</p>\n<p data-pid=\"MyImf6EF\">我之后遇到的上级，或者接触过的团队管理者，很多都会依赖「换人」的方式，去解决当前的业务问题。可能不会那么激进，但内心是认可的。</p>\n<p data-pid=\"RTTU5CoO\">这么多年来，我一直在思考这个问题。在不同公司、不同场景、不同团队里，感受差异非常大。当然这里不只是指，我该不该换掉下属，也包括我该不该被换掉。</p>\n<p data-pid=\"RAeR5_jN\">就像做事的方法论一样，这属于管理理念，终归是要有自己的理解的，我之前一直是这么认为的。</p>\n<p data-pid=\"hNAfDZKR\">在读完《第五项修炼》之后，我发现自己的视角是错的，这不只是管理问题。</p>\n<p data-pid=\"89HsSp7a\"><b>之前的思路是这样：业务进展慢→人的能力不够→换成能力更好的人→业务进展变快</b></p>\n<p data-pid=\"e84XZUpn\">这就是典型的用「线性思维」观察因果链，而没有看到事情的相互关联结构，没有用「系统思考」的方式观察问题。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-e52feb37bd53689dab4b5657a7c01ade_b.jpg\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"442\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-e52feb37bd53689dab4b5657a7c01ade_r.jpg\"><figcaption>来自《第五项修炼》</figcaption></figure><p data-pid=\"oipkOpTx\"><b>《第五项修炼》中提到：当置身同一个系统中时，人们无论有多大差别，都倾向于产生相似的行为结果。</b></p>\n<p data-pid=\"yIcbueX6\">当问题出现或绩效不如意时，我们喜欢找出某人或某事加以责怪。但是，系统的危机往往是由其自身引起的。</p>\n<p data-pid=\"gA5EW-Lz\"><b>就是说，只是粗暴的换人，解决不了业务进展慢的问题。</b>甚至这不应该被定为成业务问题或管理问题，而是要以组织的视角来研究，否则无论谁在这个位置上，都是一样的。</p>\n<p data-pid=\"TjWAS4xL\">我是有感触的。</p>\n<p data-pid=\"MaCw4IZH\">在另一个我工作过的大厂，有足够的实力去招到领域里最好的员工，不管是产品、研发、运营、市场等，只要能定位到范围，大概率都能捕获。</p>\n<p data-pid=\"EWP4gIfN\">当这些「最好的员工」遇到业务问题时，公司就会招「更好的员工」去替代。既然是「最好」，为什么还有「更好」存在呢？因为在公司的眼中，当最好的员工入职后，就不再是最好的了，外面的人才更好。</p>\n<p data-pid=\"60EJRMrx\">眼看着一个个业内的优秀人才，从刚入职时的意气风发，到一年后的萎靡不振，这个普遍现象肯定不是少数人的能力问题，而是在这个系统里，个体倾向产生相似的行为。</p>\n<p data-pid=\"zDhgv0vd\"><b>逻辑是这样的：系统结构→行为模式→事件，左边依次决定右边。</b></p>\n<p data-pid=\"JY6ZIQH9\">在日常工作中呈现出来的是「事件」，前面讲的去换人，只是针对事件给出的措施，并没有看到根源是系统结构带来的。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-0e6fa11b82b7c6bd89468c20a8454fb0_b.jpg\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"390\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-0e6fa11b82b7c6bd89468c20a8454fb0_r.jpg\"><figcaption>来自《第五项修炼》</figcaption></figure><p data-pid=\"jc1QJBx0\"><b>那么，什么是「系统思考」？</b></p>\n<p data-pid=\"iYH4R9NO\"><b>系统思考是观察整体的修炼，是一个思考框架。</b>用来观察相互作用的关联，而不是各个分离的东西；以及用来观察变化的模式，而不是静态的快照图片。</p>\n<p data-pid=\"MlgFFmat\">划重点，系统思考的本质要看<b>相互关联结构，</b>要看变化的<b>动态过程。</b></p>\n<p data-pid=\"lyHlz9nZ\"><b>1）人类系统的结构很微妙。</b>在复杂的生命系统里的结构，是指支配行为模式的相互关联，包括人们怎么做决策。</p>\n<p data-pid=\"6MVfdQXD\"><b>2）解决问题的关键杠杆作用往往来自新的思考方式。</b>在人类系统中，人们常常不能发挥杠杆作用的潜力，找不到有效解决问题的关键，只注意自己的决策，而忽视这些决策如何影响他人。 </p>\n<p data-pid=\"dhnov_94\"><b>用一张图来描述「系统思考」</b>，大概是这样：</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-98b74947efe9c0b429cc7d88b38e3893_b.jpg\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"432\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-98b74947efe9c0b429cc7d88b38e3893_r.jpg\"><figcaption>来自《第五项修炼》</figcaption></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"2on1KhZ_\">上图是说，新产品带来收入，所以要持续研发新产品，来拿到更多收入。但研发团队的人数就要随之提升，才能跟上研发计划。</p>\n<p data-pid=\"eKSnr762\">随着团队人数增多，研发负责人就要投入更多精力在团队管理上，分散了做研发的精力，导致新产品上线时间延迟，以及新产品推出的速度下降。</p>\n<p data-pid=\"niO0Skoo\">所以，在面对「持续研发新产品」这个问题时，如果只考虑眼前短线收益，没有像上图一样系统的思考问题，会在一段时间后看到延迟的负反馈，反而解决不了问题。</p>\n<p data-pid=\"MSt5fIgy\">对于这本书的内容，正文就不做提炼，感兴趣的可以看本文第3部分。</p>\n<p data-pid=\"bLSfv3ik\">02 <b>员工视角：我的工作亮点是什么</b></p>\n<p data-pid=\"7oMsWdkx\">作者把这本书的理念主要应用在组织上，叫「学习型组织」，但我觉得系统思考也完全适用于业务层面，帮助我们去认识和分析业务的本质，以及遇到的问题。</p>\n<p data-pid=\"bbBuU9Fj\">或者，组织和业务本来就不能独立割裂来看，要放在一起才能做决策。组织要赋能业务，业务要给组织反馈。</p>\n<p data-pid=\"7soZDf6Y\"><b>话虽这么说，实际上我们组织的设计和搭建做得好吗？</b>有多大比例的员工，在组织中是如鱼得水的施展才能？有20%吗？</p>\n<p data-pid=\"gdDfkU7A\">可能是互联网行业发展太快、竞争太激烈了，所以组织建设一直追不上业务的发展，导致大部分员工都在疲于奔命，在组织中挣扎。这种感受就是想活活不好，想死不敢死。</p>\n<p data-pid=\"srfC_pkd\">既然选择在公司打工，那么评价这个人的方式就要跟着公司走。公司认为这个员工厉害和重要，在其他人眼中，他/她就像高人一等；反之，就低调苟活吧。</p>\n<p data-pid=\"c6-VAMw8\">公司对员工的评价，体现在绩效、级别、薪资奖金、业务范畴等。评价标准主要看工作成果。在工作成果里面，主要看工作亮点。</p>\n<p data-pid=\"W0TeAmbK\"><b>每个员工心里都有一个问号：我的工作亮点是什么？</b></p>\n<p data-pid=\"d8kX1Gpj\">要说明的是，我并不反对以亮点来评价员工工作，也认为有亮点产出的员工就应该获得更好的评价。我参与过多个公司的运营职级晋升标准的制定，全部都是这个导向。</p>\n<p data-pid=\"R3pV6cdx\">在执行这个评价标准的过程中，总会遇到这样的场景，让管理者都很难处理：一位兢兢业业的员工，把自己职责范围内的工作完成的很好，业务属性和精神属性都很强，但工作产出亮点不够，这样的员工可以晋升吗？</p>\n<p data-pid=\"glVDXpci\">这种情况，常出现在负责基础工作的员工身上，职责是做好后方保障，而不是去前线杀敌。比如内容审核、数据支持、用户服务等等。</p>\n<p data-pid=\"GZ5xmXxM\">工作的职责决定了很难出亮点，这也不是员工的错。如果出色的完成公司的任务，仍不能得到好的评价，那么谁还会做这个工作呢？这个岗位优秀人才的流失，公司是有损失的。</p>\n<p data-pid=\"adrscNAt\"><b>以《第五项修炼》书中提出的「系统思考」方法，来看公司的评价体系：</b></p>\n<p data-pid=\"IgIxYhUc\">1）公司是复杂度很高的协作组织，类似生命系统，需要不同类型的人才，也需要各种职责的岗位。如果用单一的评价体系，会导致部分岗位或人才在公司这个生态里「死掉」。</p>\n<p data-pid=\"p0erq0LX\">2）公司评价体系有导向作用，死板的只看「工作亮点」，会导致部分员工只做与亮点有关的事，这就违背了公司对这个岗位的诉求，造成表面虚假繁荣，但内功尽失。</p>\n<p data-pid=\"yr1cL1qt\">引用我与朋友的一段聊天记录：</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-92a6fdfe94a3dfa0512f78ae5129763d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"809\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-92a6fdfe94a3dfa0512f78ae5129763d_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"tQP2DXvo\"><b>这种情况该怎么解决？根本上说，需要一群懂业务的管理者。</b>从评价体系制定和执行两方面落地：</p>\n<p data-pid=\"7ztWwANP\"><b>首先，从评价体系制定上，适配不同岗位角色的各种情况，切勿一刀切。</b>这是制度上的保障，没有这个，在公司层面就不可能有统一认知；</p>\n<p data-pid=\"B0rlBvNu\"><b>其次，执行时做好度的把控，执法与立法同样重要。</b>要能看到努力并达到公司要求的好员工，也要能看到平时划水只在某些时刻刷存在的坏员工，在执行时给出导向。</p>\n<p data-pid=\"h8ArDAXC\">如果没有懂业务的管理者，这两点是都没办法做到的。不了解不同岗位会面临什么问题、痛点是什么，从评价体系制定时，就无法适配。在执行的过程，更是考验管理者，面对不同情况的灵活处理方法。</p>\n<p data-pid=\"Z0eb1HhS\">03 <b>读这本书的方法</b></p>\n<p data-pid=\"6yh-jGXG\">如果你不打算读这本书，这部分内容可以跳过。</p>\n<p data-pid=\"N_trNO4i\"><b>这本书有2个缺点：</b></p>\n<p data-pid=\"54eWisu6\">1）结构不太清晰，需要结合书后的附录才能梳理清楚。</p>\n<p data-pid=\"1qT49M7w\">2）描述有点啰嗦，读起来有些晦涩。</p>\n<p data-pid=\"WPE_RwOd\"><b>建议先看书后的附录，更容易了解结构。以及重点读前7章，是这本书的核心内容，也是对我们最有价值的那部分。</b></p>\n<p data-pid=\"W4j9zllb\">因为这五项修炼，分别是：系统思考、自我超越、共同愿景、心智模式、团队学习。书中重点讲的是「第五项修炼」：系统思考，这是其他四项的基石，前7章讲的是这部分。</p>\n<p data-pid=\"gcd3RMie\">之后的内容，是其他四项修炼，对于国内的读者来说，在很多管理书籍中都有提到，收获感会少很多，所以建议略读。这样的读书方法，可能会帮大家更容易搞定这本470页的书。</p>\n<hr>\n<p data-pid=\"C_OVaoMS\">附：《第五项修炼》读书笔记</p>\n<p data-pid=\"rluTIOHt\">这五项修炼，分别是：系统思考、自我超越、共同愿景、心智模式、团队学习。书中重点讲的是「第五项修炼」，是系统思考，这是其他四项的基石。</p>\n<p data-pid=\"T-HxBJAJ\">从我的视角来看，这个理念最有价值的地方就在于「系统思考」。其他四项在很多管理学书籍中都有提到，与这本书中讲述的内容差别不大。所以，以下只讲「系统思考」。</p>\n<p data-pid=\"uCHB_KZD\">在工作中或者分析问题时，会遇到「学习障碍」：</p>\n<p data-pid=\"wc5wkdye\">1、我就是我的职位。不具备全局视角；</p>\n<p data-pid=\"vHvUUCw8\">2、对手在外部。不从自身找原因，不是态度问题，是视角问题；</p>\n<p data-pid=\"lTIqDe1M\">3、主动积极的幻觉。应该是思考方法的结果，而不是情绪状态的产物；</p>\n<p data-pid=\"iLdF56B1\">4、执着于短期事件。只解决了眼前问题，没关注长期价值；</p>\n<p data-pid=\"-kcb9flT\">5、温水煮青蛙。危险的渐变过程，让人不容易察觉；</p>\n<p data-pid=\"V7deymG2\">6、试错法的错觉。当试错的结果超越我们的学习视界，比如有时间延迟等情况，就无法学习到经验；</p>\n<p data-pid=\"ee2IsMTE\">7、管理团队的迷思。团队成员要么表面团结一致，要么互相指责，都是掩盖问题。</p>\n<p data-pid=\"k-Gm0J0B\">通过「啤酒游戏」给我们带来的启示：</p>\n<p data-pid=\"The6GDyV\">1、结构影响行为。在同一结构中，不同的人也会做出性质类似的表现。当问题出现或绩效不如意时，我们喜欢找出某人或某事加以责怪。但是，系统的危机往往是由其自身引起的。</p>\n<p data-pid=\"aYIFrduE\">2、人类系统的结构很微妙。在复杂的生命系统里的结构，是指支配行为模式的相互关联，包括人们怎么做决策。</p>\n<p data-pid=\"liBQomza\">3、解决问题的关键杠杆作用往往来自新的思考方式。在人类系统中，人们常常不能发挥杠杆作用的潜力，找不到有效解决问题的关键，只注意自己的决策，而忽视这些决策如何影响他人。</p>\n<p data-pid=\"BqqNkDmo\">「系统结构」（啤酒游戏中提到过）影响行为模式：</p>\n<p data-pid=\"8fDr5q3S\">1、当置身同一个系统中时，人们无论有多大差别，都倾向于产生相似的行为结果。为了理解重要的问题，我们不能只看到个人失误或者运气不佳，也不能只看到人物和事件，必须看到隐藏在事物表面以下的结构模式：它们塑造了人的行为，它们创造的条件使各类事件得以发生。要改善这个问题，必须要重新认识自己的影响范围，你的影响远远超出你的职责范围，对周围或上下游的影响。</p>\n<p data-pid=\"ht7Bw0Qo\">2、解决和改进问题，取决于思考方式：系统结构→行为模式→事件。日常看到的事件，是被行为模式影响，被系统结构所决定的。</p>\n<p data-pid=\"ScG5TbfH\">什么是「系统思考」：</p>\n<p data-pid=\"lbUoz4kR\">系统思考是观察整体的修炼，是一个思考框架。用来观察相互作用的关联，而不是各个分立的东西；以及用来观察变化的模式，而不是静态的快照图片。</p>\n<p data-pid=\"3biYVOGy\">「系统思考」的实质是什么：</p>\n<p data-pid=\"3nr8Cm9b\">看清各种相互关联结构，而不是线性的因果链；</p>\n<p data-pid=\"fxPvQ6Rv\">看清各种变化的动态过程模式，而不是静态的快照图像。</p>\n<p data-pid=\"fgFRsrHj\">「系统思考」三元素：</p>\n<p data-pid=\"5Pz9KoHr\">系统思考语言中的所有观念，都是以正反馈、负反馈和延迟，这三个元素为基础建立的。</p>\n<p data-pid=\"YfXO9_WM\">正反馈，加速的增长或者衰减。注意，正反馈不是正向反馈；</p>\n<p data-pid=\"f9Qy4F6A\">负反馈，是指稳定反馈，比如一个坏习惯，声称要改掉，但坚持不改。</p>\n<p data-pid=\"FCIKHOXO\">系统基本模式：</p>\n<p data-pid=\"B_iQiyHz\">1、有延迟的负反馈。典型案例是热水开关反应迟钝的淋浴。要么保持耐心，要么使系统反馈更灵敏；</p>\n<p data-pid=\"u2-1Kk3V\">2、增长极限。不要在正反馈环路上使劲儿推，要试图消除限定因素；</p>\n<p data-pid=\"_SgjYosx\">3、转移负担。典型案例是通过饮酒来减轻工作压力；</p>\n<p data-pid=\"lBYBZGhf\">4、目标侵蚀。短期缓解方法使长期、根本目标受到侵蚀；典型案例公司为了降低成本，去降低质量标准；</p>\n<p data-pid=\"AGYTfXF6\">5、恶性竞争。典型案例是价格战。寻找双赢的方法，某一方可以单方面逆转这种恶性循环，用公开、主动、大胆的和平行动；</p>\n<p data-pid=\"_2pH-pNj\">6、强者愈强。</p>\n<p data-pid=\"C1a-z90H\">7、工地悲剧。个体根据自身利益需求来使用有限的公共资源；</p>\n<p data-pid=\"DwM9G0SH\">8、饮鸩止渴。短期修补带来未知的长期后果；</p>\n<p data-pid=\"eXPeCpQY\">9、增长与投入不足。如果还有增长潜力，要在增长增速下降之前，去做充足的投入；</p>\n<p data-pid=\"utGQu17H\">第五项修炼的法则：</p>\n<p data-pid=\"dxdMLc33\">1、今天的问题来自昨天的解决方法；</p>\n<p data-pid=\"gUBBansE\">2、你越使劲儿推，系统的反弹力越大。补偿反馈，即愿望良好的措施介入后引起系统的反应，结果抵消了介入行动所带来的好处；</p>\n<p data-pid=\"AhGZXjxN\">3、情况变糟之前会先变好。行为的目标往往是作用于当下的，补偿反馈会有一段时间延迟；</p>\n<p data-pid=\"AeRKedDG\">4、选择容易的办法往往会无功而返；</p>\n<p data-pid=\"06EV-VQR\">5、疗法可能比疾病更糟糕，转移负担给介入者；</p>\n<p data-pid=\"QrlNzcOH\">6、快即是慢。几乎所有的自然系统，从生态系统到动物再到人类组织，都有天然固有的最佳成长速度。最佳成长速度，比可能的最快成长速度慢很多。</p>\n<p data-pid=\"WVLOhNrj\">7、因和果在时空中并不紧密相连；</p>\n<p data-pid=\"NqPLKa4F\">8、微小的变革可能产生很大的成果——但最有效的杠杆常常最不易被发现，关键找到高效杠杆作用。难点在于高效杠杆和作用在时空上没有紧密相连；</p>\n<p data-pid=\"HCUpKEvU\">9、鱼和熊掌可以兼得——但不是马上。先集中完成一个目标，最终两个目标都能实现；</p>\n<p data-pid=\"_GNBSUMV\">10、把大象切成两半得不到两头小象，这句话的意思是组织边界的局限性。生命系统具有完整性，特性依赖整体，组织结构也一样，要理解大多数管理问题，必须看清产生问题的整个系统。但不是说每个组织问题都只有通过观察整个组织才能理解，有些问题只能从各个部门组织中的互动中理解。还有些问题是必须把整个产业情况都考虑进去，才能看清。系统边界原则，告诉我们必须考虑到的互动因素，是对眼下某个具体问题最重要的因素，不用考虑范围有限的组织边界。</p>\n<p data-pid=\"2z-0l_ew\">11、不去责怪，任何一个角色都是同一个系统的组成部分。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/hanxu?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">韩叙</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/489137798?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"古蛋白质：第二扇门","date":"2022-03-28 10:45:24","description":"\n<p data-pid=\"n69P66tN\"><b><i>这是一个伟大的事业，虽然还不够为人所知。</i></b></p>\n<hr>\n<h2><b>一只骆驼</b></h2>\n<p data-pid=\"mSNeK6AZ\">埃尔斯米尔岛(Ellesmere Island)是世界第十大岛，全岛位于北极圈内，是北国加拿大的北境之地。这里人迹罕至，全年平均气温低于零下20℃，地势崎岖，苍白寒冷的土地上唯有北风与雪原。在冰盖下的河流堆积物中，古生物学家找到了一些碎骨，它们的年龄大约为<b>350万年，</b>彼时世界尚是洪荒，人类的远祖南方古猿还漫游在非洲的大地上。根据研究，研究者确信，这些骨骼来自于一只大型哺乳动物——<b>它们来自一只骆驼</b>。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-d2c7a324b3f76ca190ea30c7cbadb7c5_b.jpg\" data-rawwidth=\"759\" data-rawheight=\"570\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"759\" data-original=\"https://pic2.zhimg.com/v2-d2c7a324b3f76ca190ea30c7cbadb7c5_r.jpg\"><figcaption>埃尔斯米尔岛(Ellesmere Island)位置示意，毗邻它的便是格陵兰岛</figcaption></figure><p data-pid=\"e3KLh0Yo\">骆驼，众所周知的沙漠之舟，金字塔下最常见的坐骑，丝绸之路的符号，唐代人最爱的陪葬品，它们黄棕色的皮毛似乎总是与干燥与炎热相关。不过在数百万年前，它们也曾广泛分布于北美洲与欧亚大陆。这只埃尔斯米尔岛的大型骆驼生活的时代约为中上新世，恰好处于距今最近的一次稳定暖期之中。在它的世界里，北极圈内并非只有恒定不变的皑皑白雪与凛凛寒风，广袤的森林才是这片极北之地的主色调。不知是因为意外，还是由于疾病的困扰，这只温和的大型植食动物在350万年前的一天离开了这个世界，它留下的骨骼不仅仅告诉我们北极圈里曾有骆驼驻足，还留给了我们另一件宝贵的礼物——<b>那就是目前为止，最古老的胶原蛋白序列信息</b>。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-8dd592282614651ac0e36c4b63f5dfc8_b.jpg\" data-rawwidth=\"810\" data-rawheight=\"539\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"810\" data-original=\"https://pic1.zhimg.com/v2-8dd592282614651ac0e36c4b63f5dfc8_r.jpg\"><figcaption>埃尔斯米尔岛的北极骆驼（High Arctic camel），它们生活的时期气温较工业革命前的平均气温高2-4℃，不过即便如此，在那个维度还是冷的够呛</figcaption></figure><p data-pid=\"MxeH-Cmi\">胶原蛋白是一种重要的结构功能性蛋白，是哺乳动物体内含量最高的蛋白质。这类纤维状的蛋白质赋予了皮肤、肌肉以及软骨卓越的弹性与韧性。无论是少女凝脂吹弹可破，还是壮士筋骨力拔河山，人们的外貌与运动能力都离不开这种蛋白质的恩惠。鉴于它对于皮肤的重要性，在医美行业中胶原蛋白常常作为主要的卖点——<b>当然你的老妈可能也会端着一碗猪蹄汤宣传胶原蛋白“美容养颜”的功效</b>。尽管事实上口服胶原蛋白对美容并无什么意义（甚至还会让你胖一圈），但是这也从侧面显示出了胶原蛋白所蕴含的“生命力”——它与动物的生活息息相关。不同于矿化的骨骼，作为生物大分子的蛋白质是直接携带生物体自身所包含的遗传信息的。<b>这些 “一手数据”比化石形态的提炼更为“真实”，一旦我们解析出古蛋白质的信息，我们便可以坚定地讲“这是什么”，而非仅仅提出一个可能性，去猜测古生物的情况。</b>这种确乎然的信息使得古生物学家越来越重视古蛋白质的研究——经由这些序列，我们终于可以穿过时间的帷幕，去面对面观察那些远古生物的真实模样。正是这一串350万年前的蛋白质序列信息，将这些北极圈内的零碎骨片与现代沙漠中的骆驼坚实地连接在一起。<b>即便漫长的时间消磨掉了血肉，遗弃了形体，碾碎了骨骸，但却依然留下了一个印记，一个属于鲜活生命的印记——那是12亿7000万天前，曾在这只骆驼身上跃动着的，最后的一丝生机。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-252f98ed4aa5e133d902d6c8ee8b506c_b.jpg\" data-rawwidth=\"906\" data-rawheight=\"442\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"906\" data-original=\"https://pic1.zhimg.com/v2-252f98ed4aa5e133d902d6c8ee8b506c_r.jpg\"><figcaption>胶原蛋白的三螺旋结构使得它拥有其他蛋白难以比拟的强度与韧性，这也是为什么它们更容易保存下来的原因</figcaption></figure><h2><b>第二扇门</b></h2>\n<p data-pid=\"5vX8zrOy\">如果说，古DNA研究提供了一扇通往过去世界的大门，那么古蛋白质则是这扇万众瞩目的大门旁的“第二扇门”。公众与研究者对DNA的偏爱使得古蛋白质的研究显得有些黯然失色，但究其根本，这两种研究途径都展示了古生物研究的新图景：<b>在现代分子生物学的参与下，古生物学的研究不再拘泥于化石材料的形态，而是更进一步，抵达更加深入的层面。</b>可以说，随着化石当中生物大分子的研究日渐深入，我们离这些古代生物的距离越来越近。新发现不断拓展着生物分子保存时间的上限，而越往前，我们所能得到的信息就越发激动人心。在这条道路上，古蛋白质的重要性是不言而喻的：<b>迄今为止最古老的可靠DNA年龄约为165万年，而古蛋白质所留存的时间远比这要长得多。目前发现的最古老的蛋白质序列来自于坦桑尼亚的蛋壳蛋白，其年代有整整380万年。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-6c9cb1d9a7f33210ebade29a95de7279_b.jpg\" data-rawwidth=\"800\" data-rawheight=\"534\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"800\" data-original=\"https://pic2.zhimg.com/v2-6c9cb1d9a7f33210ebade29a95de7279_r.jpg\"><figcaption>目前最古老的DNA来自于猛犸象，这与冻土卓越的保存条件密不可分</figcaption></figure><p data-pid=\"ep4iWtJh\">古蛋白质学的研究<b>肇始于20世纪50年代</b>，当时的研究者注意到化石当中可能蕴藏着古老的氨基酸分子。不过随后的几十年里，古蛋白质的研究却寥寥无几，零星的研究也饱受质疑。<b>与之相反，古DNA分子则在这一时期内脱颖而出，成为了备受关注的“学术明星”。</b>从1984年拉塞尔·希古奇（Russell Higuchi）成功获得灭绝物种斑驴（<i>Equus quagga</i>）的DNA开始，越来越多的研究者开始致力于这一方面的研究。随着1992年美国科学家宣称中生代琥珀中昆虫DNA被成功提取，公众关注古生物的热潮也抵达巅峰。次年，著名导演斯皮尔伯格的旷世巨作《侏罗纪公园》横空出世，从此之后，普通民众深深地记住了恐龙与琥珀中的DNA，即便时隔多年，也时不时地畅想着古DNA将会在未来的某一天大放异彩，成功地将亿万年前的生命带回到我们这个时代。显然，在这一时期，古蛋白质是被忽视的。<b>导致这两者境遇天差地别的原因不仅仅是大众媒体的偏好，更多的是研究难度与技术水平的参差。</b>早在1977年，桑格尔(Frederick Sanger)等人便发明了第一代DNA测序技术，而1985年，微量DNA测序所必要的聚合酶链式反应(Polymerase Chain Reaction, PCR)技术也被创立。因此，在上个世纪末，针对DNA的测序技术已经相当成熟，无论是考古材料还是犯罪现场，只要有极微量的DNA残余，都可以借助这些测序技术完成序列的识别。而蛋白质的测序技术虽然早在20世纪50年代便被桑格尔、埃德曼 (Pehr Victor Edman)等人发明，但这些技术对于未经纯化且含量极低的蛋白样品却束手无策。因此，在古DNA大放异彩时，古蛋白质只能在台下默默等待，等待一个属于它的机会。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-7aef4d442f6bd29232bdad74058aa659_b.jpg\" data-rawwidth=\"1790\" data-rawheight=\"1012\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"1790\" data-original=\"https://pic2.zhimg.com/v2-7aef4d442f6bd29232bdad74058aa659_r.jpg\"><figcaption>然而最终，学术界并没有认可琥珀中DNA的可靠性，它们更可能是污染，而非来自于中生代的昆虫。（图为《侏罗纪公园》剧照）</figcaption></figure><p data-pid=\"9_w2XRj6\">幸运的是，鼓动古蛋白质腾飞的羊角大风并没有缺席太久。<b>2000年，佩姬·奥斯特罗姆(Peggy Ostrom)等人宣布，她们成功获得了5万年前野牛骨骼中残余的骨钙素序列，也正是从这一研究开始，古蛋白质组学(Palaeoproteomics)这个全新的研究领域正式诞生。</b>而作为研究的关键，质谱(Mass spectrometry)的应用彻底改变了古蛋白质研究的窘境，使化石材料中沉寂已久的蛋白质信息再次得到唤醒。简单地说，质谱是一种根据质荷比（质量-电荷比）进行分类的技术，它具有非常低的检测限，常规质谱可以轻易检出浓度仅为<b>百万分之一级别(ppm)</b>的样品，因此，即便是化石中残余的极其微量的蛋白质也可以藉由质谱仪实现序列分析。<b>藉由质谱技术的加持，在化石氨基酸痕迹被发现的50年后，第二扇门，终于打开了。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-85a3aeb579b523d1c9b494dad553388b_b.jpg\" data-rawwidth=\"600\" data-rawheight=\"728\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic4.zhimg.com/v2-85a3aeb579b523d1c9b494dad553388b_r.jpg\"><figcaption>佩姬·奥斯特罗姆(Peggy Ostrom)任职于密歇更州立大学，她主要致力于生物地球化学与全球生态的研究</figcaption></figure><h2><b>马鹿辨异</b></h2>\n<p data-pid=\"WUJofiZm\">想象你正在一家餐厅里，你的面前摆放着三道看起来一模一样的菜肴。餐厅老板告诉你这三道菜分别是用<b>猪肉、牛肉和羊肉制作的</b>，只要你能猜对这三道菜对应的原材料是什么，便可以赢得一大笔奖金。那么请问，凭借你现在所知晓的知识，你觉得该如何在这场挑战中获得胜利呢？</p>\n<p data-pid=\"6dDNLFR1\">如果你对味道敏感，那你一定会很容易地注意到这三种食材的<b>滋味</b>是不一样的。只要这三道菜没有经过太多的加工过程，你便可以通过它们的味道来作出判断。<b>肉食风味的区别主要源自于肌肉蛋白成分、次生代谢产物以及脂肪含量的微妙差异，不同的动物由于生活环境与遗传特征的区别，使得它们最终的滋味千差万别。</b>但假若这三道菜都经过一番精雕细琢，难以靠味道判断，那么又该如何是好呢？或许我们还可以看看别的东西，比如骨头的形状，毕竟这三种动物体型相差甚大，自然会在骨骼上有所反映，牛骨粗壮，羊骨纤细，如果再露出个只鳞片爪，那要判断出种类就变得易如反掌了。只可惜，端到你面前的三道菜是又煎又炸，不仅仅裹上了一层厚厚的酱汁，厨师还撒了一大把辣椒和香菜干扰你的舌头。虽然骨头尚在盘中，但也被剁成小块，辨认不得，任由你左看右看，硬是没瞧出什么端倪。到这时，即便你心有不甘，也只能投子认负，放弃挑战，毕竟奖金事小，菊花事大，辣椒吃太多，可是得进肛肠医院的。</p>\n<p data-pid=\"e3sZGdOn\">如果埋藏过程中的各种侵蚀作用可以类比为炒菜加工中的一道道工艺的话，那么，这个难题也曾摆在过曼彻斯特大学教授<b>迈克·巴克利(Mike Buckley)</b>的面前。那是2008年，他还是约克大学的博士生，在他面前，整整齐齐地码放着32种哺乳动物的骨头——大至抹香鲸，小至老鼠，<b>而他的任务，就是用一种新兴的方法快速鉴别出这些骨头的主人</b>。巴克利选取了当年奥斯特罗姆曾用过的<b>基质辅助激光解吸电离飞行时间质谱(MALDI-ToF-MS)技术</b>，标定了骨骼I型胶原蛋白中可用于物种对比的92个标记。之所以胶原蛋白可以用于物种鉴定，是因为不同种类的动物胶原蛋白的氨基酸组成不尽相同，因此，在通过特定种类的蛋白酶处理之后，便会产生一系列质量有所差异的特征片段。质谱仪可以识别出这些片段的质荷比，并换算成片段的质量情况。这样一来，我们就可以得知某一物种所对应的特征片段情况。在获得足够多的物种数据之后，就可以构建图谱，以备查找。下一次需要进行种类鉴定时，便可以先计量样品的特征片段质量数据，然后按图索骥，快速查找出样品所归属的动物种类。<b>因为这些标记具有鲜明的特异性，犹如指纹，因此这又被成为肽质量指纹图谱(Peptide Mass Fingerprinting，PMF)。</b></p>\n<p data-pid=\"EVIf4NUv\">巴克利很快将这个技术应用于考古材料之中，在建立图谱后，他马不停蹄，开始验证这一技术在考古领域的应用潜力。同一年，巴克利与合作者成功区分出土耳其的一个考古遗址的骨骼样本所属的类群。这个遗址的时代为新石器时代晚期，距今约7800年。<b>借助肽质量指纹图谱，他鉴定得出这些碎骨分别隶属于山羊和绵羊——虽然年代并不久远，但者却暗示了这一新技术的卓越潜力。整理了技术流程后，巴克利将整套技术命名为动物考古质谱法(Zooarcheology by Mass Spectrometry)，而这，便是在未来大显神通的ZooMS。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-18cd6d2cc37a6a88de98426fd4ed89e4_b.jpg\" data-rawwidth=\"1109\" data-rawheight=\"618\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"1109\" data-original=\"https://pic1.zhimg.com/v2-18cd6d2cc37a6a88de98426fd4ed89e4_r.jpg\"><figcaption>巴克利通过质谱结果获得的32种哺乳动物的演化关系谱</figcaption></figure><p data-pid=\"ZELW-TZK\">ZooMS的建立，迅速引发了古蛋白质研究的热潮。在之后的几年中，巴克利与其他的一些研究人员测定了一系列考古材料与化石材料残存的古蛋白质组信息，成功识别出了草原猛犸象、巨龟、野牛、大河狸、嵌齿象等一系列早期难以识别或归属不明的动物物种，这些无法提取DNA数据的材料在ZooMS的帮助下被成功分门别类。快速、高效、低成本的ZooMS成为了动物考古与新生代古生物研究的救星。这些本应该放在仓库里吃灰的骨骼碎片终于得以展现出它们的价值，成为了研究远古生态环境与物种关系的重要参考。<b>古蛋白质的黎明，终于到来了。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-c085c3d24e7086cc21f95c1a82f65f30_b.jpg\" data-rawwidth=\"615\" data-rawheight=\"550\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"615\" data-original=\"https://pic1.zhimg.com/v2-c085c3d24e7086cc21f95c1a82f65f30_r.jpg\"><figcaption>迈克·巴克利(Mike Buckley)，文章开头的高北极骆驼也是他的手笔。他已经成为了这一领域的核心专家，几乎所有的ZooMS研究背后都有他的贡献。</figcaption></figure><h2><b>枯骨生肉</b></h2>\n<p data-pid=\"a2IZqut1\"><b>古DNA研究的高光莫过于丹尼索瓦人(Denisova)的鉴定。</b>在西伯利亚的丹尼索瓦洞里，研究人员仅用牙齿与指骨中提取到的DNA便识别出了一个新的人种。这一成果被《科学》杂志评为2012年的十大科学突破之一，它预示着古DNA正式步入古人类研究的核心，从那以后，依托于古DNA的发现，越来越精细的人类演化图景被徐徐打开。“我们从哪里来？”这一究极问题似乎不再模糊，凭借着今人与先祖的血脉联系，人类演化背后的真相似乎触手可及。</p>\n<p data-pid=\"1S45bBsu\">可是，很少有人注意到，在这珍贵的，蕴藏着古DNA信息的小小的几块骨头之外，还有数以十万计的骨骼碎片等待归类、整理与鉴定。在多年的发掘中，<b>丹尼索瓦洞一共产出了135600块骨骼</b>，但仅仅依靠形态学的鉴定，几乎无法判断这些骨骼的归属，它们大多只有几厘米见方，经过数万年的侵蚀破坏，早已丢失了可以用于判断的重要信息，故而只有极少数的骨骼能够被识别出来源。因此，为了解决这个难题，ZooMS临危受命，正式加入了古人类研究之中。<b>2015年，还是牛津大学硕士的萨曼莎·布朗(Samantha Brown)等人应用ZooMS，成功地在2315块碎骨中找到了一块属于人属的骨骼。</b>这块化石距今约90000年，这万里挑一的珍贵材料不仅仅保存了古蛋白质信息，更重要的是，它还携带了线粒体DNA信息，根据鉴定，布朗惊讶地发现，这块骨骼似乎属于一个尼安德特人(Neandertal)。她将这块骨骼编号为Denisovan 11，根据骨厚度判定，骨骼的主人约死于13岁。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-938f78b63254b31d68da0949b3ba03f1_b.jpg\" data-rawwidth=\"438\" data-rawheight=\"421\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"438\" data-original=\"https://pic2.zhimg.com/v2-938f78b63254b31d68da0949b3ba03f1_r.jpg\"><figcaption>丹妮的遗骨，正是这块小小的碎片，拼接起了遥远的两个世界</figcaption></figure><p data-pid=\"Quu7sR0a\">这块骨骼碎片的价值随着这一发现变得越发珍贵。<b>丹尼索瓦洞的尼安德特人？</b>这奇妙而又有些错位的感觉引发着她继续前行。这块骨头很快便被送到了古DNA研究的圣地——德国马克斯普朗克进化人类学研究所（简称马-普研究所）。在这里，从事古DNA研究的博士后薇薇安·斯隆(Viviane Slon)在化石中成功提取到了核DNA信息。而这一结果让她大吃一惊——<b>化石主人的核DNA竟然显示出了杂合的情况，这说明，化石的主人并不简简单单地属于丹尼索瓦人或者尼安德特人，她的情况更为复杂——这是一个混血儿，一个女孩儿，她的母亲是尼安德特人，而父亲则是丹尼索瓦人。</b>这是有史以来被发现的最早的混血结晶，而她的父母双方则横跨了两个完全不同的人类分支——<b>她既是已发现的最早的人类杂交后代，也是横跨距离最远的。</b>要知道，丹尼索瓦人和尼安德特人在数十万年前就已分道扬镳，虽然现在对于他们的分类学定位还有争议，但人们都承认他们之间相距甚远，截然不同。然而这块小小的，仅有24.75mm长的骨头却将这两个类群再次连接起来。这个最后被命名为丹妮（Denny）的13岁小姑娘成为了人类演化历史上惊人的一幕，她展现了数万年前人类类群的复杂交流，使得古人类研究获得了全新的视野——凭借这项工作，薇薇安·斯隆位列2018年《自然》杂志年度十大人物之一。<b>而这一切，都来之于一开始古蛋白质那微弱却清晰的信号。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-81ba9d860fba9f2aa955350aa22c4398_b.jpg\" data-rawwidth=\"213\" data-rawheight=\"274\" data-size=\"normal\" class=\"content_image\" width=\"213\"><figcaption>萨曼莎·布朗(Samantha Brown)，在牛津大学硕士毕业之后，她也加入了马普研究所，并在那里攻读博士</figcaption></figure><figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-e9d285a81a130ac9943d49ced5304f48_b.jpg\" data-rawwidth=\"2000\" data-rawheight=\"1333\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"2000\" data-original=\"https://pic1.zhimg.com/v2-e9d285a81a130ac9943d49ced5304f48_r.jpg\"><figcaption>薇薇安·斯隆(Viviane Slon)，与她一同获得年度人物的还有天才少年曹原与声名狼藉的贺建奎</figcaption></figure><h2><b>奇缘合缘</b></h2>\n<p data-pid=\"A22TkRur\">不知是不是丹尼索瓦洞结下的深切缘分，古蛋白质研究的又一个高峰也与丹尼索瓦人息息相关。这一次的故事发生在中国，在<b>甘肃省甘南藏族自治州的夏河县</b>。这里古称<b>白石</b>，是戎羌故地，由于其地理位置，唐王朝、吐蕃与吐谷浑曾在这里发生过多次交战，不过往事千年，过往的纷争早已难寻踪迹，只留下大夏河静静流淌，见证千年来的一幕幕悲欢离合的历史。</p>\n<p data-pid=\"gJeF2fGu\">不过，可能大夏河也没能料到，这片古老的土地将会成为全球科技媒体的焦点，并最终闻名世界。这突如其来的名声这源于一块骨头，准确的说，是一块人类下颌骨，一块只剩下右半边的下颌骨。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-d92b288c01c94b1ba679fd9e6c843235_b.jpg\" data-rawwidth=\"685\" data-rawheight=\"462\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"685\" data-original=\"https://pic2.zhimg.com/v2-d92b288c01c94b1ba679fd9e6c843235_r.jpg\"><figcaption>夏河人的下颌骨化石，灰色区域是计算机模拟补充的左半部分</figcaption></figure><p data-pid=\"_CY-F0GP\">故事的开始源自于一位僧侣——拉卜楞寺的六世贡唐活佛<b>丹贝旺旭</b>在<b>20世纪80年代</b>从一位喇嘛那里得到了一块古怪的骨头。据称，这块骨头来自于白石崖溶洞之中。在藏传佛教的记载中，地形俊奇的白石崖是胜乐金刚佛宫，因此，白石崖溶洞也成为了供奉佛像礼拜金刚的道场，在洞中，常年供奉着胜乐金刚唐卡以及藏地活佛的画像。风马烈烈，烟火袅袅，僧侣信众往来其间，已然是宗教圣地。也或许正是因为如此，那位不知名的喇嘛才会如此重视这块骨头，并将其交予丹贝旺旭。</p>\n<p data-pid=\"rtB9PARX\">不知道是什么缘由，贡唐活佛并未简简单单地将其视为先代修行者的遗蜕，他联系上了当时在中科院原寒旱所工作的<b>董光荣研究员</b>，并将化石移交给他。不过彼时董光荣正在做有关萨拉乌苏遗址的研究，这块小化石并未得到过多的重视，与其他的骨骼碎片一样，在编号之后，它便被束之高阁，静静地待在仓库之中。当时，不要说古蛋白质学研究，就是古DNA研究也方兴未艾，拿着这难以鉴别的材料，人们并未过多地注意。毕竟，属于它的时间还未到来。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-9c10c67587e84434002f7a148f2eee73_b.jpg\" data-rawwidth=\"557\" data-rawheight=\"800\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"557\" data-original=\"https://pic4.zhimg.com/v2-9c10c67587e84434002f7a148f2eee73_r.jpg\"><figcaption>张东菊，她自言她也未曾料到，这块“夏河人”的骸骨，能够改写青藏高原的人类演化历史</figcaption></figure><p data-pid=\"RFLmi6qQ\">在化石躺在仓库的时间里，一个年轻的研究者从千里之外来到兰州。<b>2004年，大学毕业的张东菊保研来到兰州大学，她的导师是史前环境考古的泰斗人物陈发虎院士。</b>张东菊在兰州大学完成了硕士与博士的攻读，并在毕业后加入了兰州大学资源环境学院，就在这时，她注意到了这个沉寂了三十多年的化石。<b>这块十二厘米长的化石残余了两枚牙齿，根据形态学分析，她注意到这件化石比预料的还要古怪，下巴的缺失暗示他并非现代人种，极有可能是前所未见的古老人类。</b>于是，在董光荣与陈发虎的带领下，她展开了针对这一材料的研究工作。首先需要确定的是化石的物种归属。她联系到了国内古DNA研究的权威专家<b>付巧妹</b>，希望借助她的技术，获得有关于这块下颌骨的古DNA数据。只可惜，结果并不理想，经过分子探针钩取，并没有任何有效的片段得以识别。于是她又将目光转到了新兴的古蛋白质研究之中——假如能够提取出古蛋白质，说不定就能解决这块化石所属的物种问题。<b>于是，她与哥本哈根大学地球研究所的弗里多·韦尔克(Frido Welker)取得了联系，后者在马普研究所学习了古蛋白质组学的研究手段，发表过大量有关于古蛋白质研究的成果。</b>面对这个遥远的材料，韦尔克并没有信心得到太好的结果。毕竟U–Th定年显示化石的年龄超过16万年——<b>这是当时人们已知的，青藏高原上最古老的人类。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-4228e2f74612a5a2f29cf48d51de0217_b.jpg\" data-rawwidth=\"685\" data-rawheight=\"371\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"685\" data-original=\"https://pic4.zhimg.com/v2-4228e2f74612a5a2f29cf48d51de0217_r.jpg\"><figcaption>牙齿蛋白序列显示出丹尼索瓦人与夏河人的密切关系</figcaption></figure><p data-pid=\"1kxZj1D4\">焦急的等待之后，令人振奋的结果从地球的另一端传来：化石成功保留了蛋白质信息。<b>根据蛋白质序列数据显示，化石的主人——被命名为“夏河人”的古老人种——与千里之外西伯利亚的丹尼索瓦洞的人类显示出了高度的亲缘关系。</b>化石材料拥有一个丹尼索瓦人特有的SAP（单氨基酸多态性）位点，这坚实地说明，<b>夏河人属于丹尼索瓦人的一支</b>，而这件化石也成为了<b>第一件</b>被发现于丹尼索瓦洞之外的丹尼索瓦人化石。在现代人踏上青藏高原前的十多万年前，这一支古老的人类便已经在这里繁衍。<b>他们征服了寒冷与低氧环境，在亚洲的北部迁移跋涉，实现了人类演化史上的一次伟大征服，而这一切的见证，只有奔流不息的大夏河水，以及化石中尚未抹去的一个小小的，可以称之为微不足道的氨基酸位点。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-1edcc037162d6fc9a022b1f4b1bb4582_b.jpg\" data-rawwidth=\"1716\" data-rawheight=\"1606\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"1716\" data-original=\"https://pic3.zhimg.com/v2-1edcc037162d6fc9a022b1f4b1bb4582_r.jpg\"><figcaption>弗里多·韦尔克(Frido Welker)，他的自我介绍是“对于古蛋白质和人类进化有关的所有事物都充满了兴趣”。</figcaption></figure><p data-pid=\"6EeCR02o\"><b>夏河人是第一种完全由古蛋白质信息鉴定出来的古人类物种</b>，这一成果标志着古蛋白质研究已经步入了全新的高度——它不再仅仅是古DNA研究的附庸。它坚实，稳定，复杂，它的价值与意义并不亚于任何研究手段。</p>\n<p data-pid=\"e7myDSnu\"><b>2019年，白石崖丹尼索瓦人相关研究被《科学》杂志评为“十大新闻”之一。2021年，与付巧妹一道，张东菊荣获第十七届中国青年女科学家奖。</b></p>\n<h2><b>继往开来</b></h2>\n<p data-pid=\"XJpyWdZw\">时至今日，我们到底能用古蛋白质做什么呢？</p>\n<p data-pid=\"AsJznvi_\">对于最早期的研究来说，物种的识别与鉴定，是古蛋白质研究最重要的目的。用支离破碎的骨骸作为线索，发现藏匿于历史与岩石背后的真相，这是古蛋白质研究伊始的任务。</p>\n<p data-pid=\"91enB2tq\">然而随着研究的进一步深入，<b>仅仅</b>将它视作一种鉴定手段就显得局促而狭隘。对于古生态、古环境以及宏观演化的要求，催促着古蛋白质研究不断前行。<b>我们需要用它来认识演化，认识生物与环境之间波澜壮阔的制衡与适应历程。</b>此时，古蛋白质组学变成了绘制过往历史图景的大笔，研究人员需要借用它，实现对更广阔领域的绘制。这是现在古蛋白质研究的核心，也是我们孜孜以求的目标。</p>\n<p data-pid=\"RLs_dx8w\">2015年，韦尔克发表了他第一篇《自然》文章。他的研究充满了野心——在文章的开篇，他便提到这项研究的渊源：这是曾经困扰过达尔文的谜团。这是被达尔文称之为<b>“有史以来最奇怪的”</b>动物，它们生活在南美洲，以古怪奇异的样貌迷惑着古生物学家们。它们或是拥有巨大的体型，或是长着古怪的角与鼻子，有的与现生动物毫不相像，有的则像是不同动物碎片拼接在一起的“奇美拉”。这些南美洲本土的有蹄类动物的演化一直是一个难解的谜团，而韦尔克却要拿着古蛋白质研究技术斩开这个“戈尔迪乌姆之结”，他相信，古蛋白质可以终结这个延续了一百八十多年的疑难。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-6bb518f1ba5de412b408bbad50e3859a_b.jpg\" data-rawwidth=\"330\" data-rawheight=\"340\" data-size=\"normal\" class=\"content_image\" width=\"330\"><figcaption>后弓兽(Macrauchenia)复原图</figcaption></figure><figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-56f96004839969c0f3de5885f41f03fc_b.jpg\" data-rawwidth=\"1200\" data-rawheight=\"801\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"1200\" data-original=\"https://pic1.zhimg.com/v2-56f96004839969c0f3de5885f41f03fc_r.jpg\"><figcaption>箭齿兽(Toxodon)复原图</figcaption></figure><p data-pid=\"so1j2cGL\">他选取了<b>后弓兽(<i>Macrauchenia</i>)</b>和<b>箭齿兽(<i>Toxodon</i>)</b>作为研究对象，分别挑取了26和22个样品进行ZooMS鉴定。然而因为年代久远，分别只有3个和2个样品显示出了良好的信号。随后，他补充了土豚、食蚁兽、河马以及南美貘等动物的胶原蛋白数据，用它们进行系统发育研究。<b>最终的结果表明，这两种古怪的动物与现生的马、犀牛及貘的亲缘关系最高，而不是之前形态学研究者所认为的非洲兽目（包括大象、海牛等）</b>。虽然与外界几乎隔绝的独立生态环境造就了它们无比古怪的形状，但是它们的演化脉络依旧有迹可循。</p>\n<p data-pid=\"RVTSgQKh\">到目前为止，古蛋白质与系统发育的研究已经是现在研究的主流方向。<b>承载着序列信息的古蛋白质可以清晰地展现出灭绝生物之间的亲缘关系，结合古DNA研究，那些越来越多的化石物种找到了属于它们的演化位置。</b>在韦尔克发表文章的同年，巴克利厘定了大地獭的演化位置，确定了它们与现生树獭的精细演化关系；2020年，中国科学院古人类与古脊椎动物研究所的饶慧芸等利用ZooMS研究了洞穴鬣狗，为斑鬣狗类群的起源指明了方向。类似的研究在近年里不断涌现，我们可以期待，在未来的某一天，一个类似于古DNA地图的古蛋白质地图也会被绘制出来，到那时，我们便可以利用它去描述哺乳动物的演化，古人类的征途，以及我们自身的慢慢长路。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-dbf774852d71fd9c5c9cc680153c6e5a_b.jpg\" data-rawwidth=\"1024\" data-rawheight=\"358\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"1024\" data-original=\"https://pic3.zhimg.com/v2-dbf774852d71fd9c5c9cc680153c6e5a_r.jpg\"><figcaption>这头四万年前的猛犸象的骨骼中提取到了126种蛋白质，这开启了一个全新的视野——多种古生物蛋白质的互作研究，这让古生物的生理代谢成为了可能</figcaption></figure><p data-pid=\"SL-ldewZ\">从鸵鸟蛋壳的碎片，到披毛犀的牙齿；从博物馆深处尘封已久的河狸头骨，到冻土层下不见天日的骆驼遗迹；从西班牙胡瑟裂谷的尼安德特人，到青藏高原白石崖溶洞的夏河先民，古蛋白质正在从幕后走向台前。我们通常会觉得冻土是最佳的有机质保存环境，但广西吹风洞那枚190万年前的巨猿牙齿中的蛋白质却告诉我们，即便是炎热潮湿的低纬度地区，古蛋白质仍旧大有可为。<b>而这个年轻又富有生命力的研究方向，正渐渐朝着越来越古老的地层走去，我们能否往那远古的时代再进一步，抵达500万年，1000万年甚至1亿年呢？当我们在未来叩击古老的地层时，这第二扇门，会为我们打开吗？</b></p>\n<p data-pid=\"Y03hwO_S\"><b>我们不知道答案，但是我们寻找答案。</b></p>\n<hr>\n<p data-pid=\"dJsvC9_e\"><i>题图：大地獭（Megatherium americanum）的骨骼示意。这是由著名的的博物学家，“古生物之父”</i><b><i>乔治·居维叶（</i></b><i>Georges Cuvier</i><b><i>）</i></b><i>命名的动物，而它的化石标本也是居维叶亲自拼装的第一件动物骨骼标本。</i></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/li-xin-35-46?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">破灭的Sunny</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/488205762?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何优雅地参与开源开发？","date":"2022-03-28 06:50:12","description":"\n<p data-pid=\"v4aUOym2\">文： 胡渊鸣 (<a href=\"https://link.zhihu.com/?target=https%3A//github.com/yuanming-hu\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">yuanming-hu</a>)，2022 年 3 月</p>\n<p data-pid=\"jL085fwH\">写在前面：最近疫情形势又逐渐紧张起来。我本人也因为一两周前去上海出差，回到北京后也被社区要求在家隔离。因祸得福，多出了一些时间思考、一个人想安静地写一些文章。打开知乎草稿箱，翻到这篇 2020 年中开始写的文章，居然因为种种原因鸽了快两年都没写完。看着窗外阳光明媚，门口贴着一纸封条，仿佛回到了 2020 年在波士顿躲新冠期间每天和网友们（比如当时同样悲惨地在日本东京隔离的 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/261344b5b53cb2b3a14faa4844cf0175\" data-hash=\"261344b5b53cb2b3a14faa4844cf0175\" data-hovercard=\"p$b$261344b5b53cb2b3a14faa4844cf0175\">@k-ye</a>）一起愉快地写 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/taichi-dev/taichi\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Taichi</a> 的时光。既然出不去，干脆把文章这篇写完吧！也希望这波疫情能够快点过去，也祝大家都能够身体健康、早日恢复平淡而珍贵的正常生活。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-d6b7b0b59e5040f809b2be76e4a1b1b6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1360\" data-rawheight=\"161\" class=\"origin_image zh-lightbox-thumb\" width=\"1360\" data-original=\"https://pic3.zhimg.com/v2-d6b7b0b59e5040f809b2be76e4a1b1b6_r.jpg\"></figure><p data-pid=\"itx-cee1\"><a href=\"https://link.zhihu.com/?target=https%3A//github.com/taichi-dev/taichi\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Taichi</a> 开源社区一直承蒙大家的关注，我们也在努力摸索如何能将社区建设得更好。本文为一系列中的第一篇（希望以后不要鸽...），主要聊聊参与开源社区之前需要了解的一些基本知识和跨国、跨文化团队合作技巧。部分内容来自 Taichi 的贡献者指南：</p>\n<a href=\"https://link.zhihu.com/?target=https%3A//docs.taichi.graphics/lang/articles/contributor_guide\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Taichi contribution guidelines</a><p data-pid=\"NIMnXVIe\"><i>(基本上是 2020 年的时候写的了，居然一直用到现在... 我们社区也算不上最完善、成熟的社区，这些指南也仅仅是我们在实践中总结出的小 tips，本文权当抛砖引玉，欢迎各位开源大佬批评指正。）</i></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-a27714934ac9d906370f0ceaad850e04_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"400\" class=\"content_image\" width=\"400\"></figure><h2>Intro</h2>\n<p data-pid=\"fdOroMJy\">和小规模兴趣项目 (hobby project) 不一样，开源项目随着开发者社区的成长，不可避免地会需要标准化工作流程与合作方式。对于合作方式的共识对于开源社区成员之间高效合作是非常必要的，但是刚刚加入开源社区的同学可能也会因为对社区规则和文化的不熟悉，对参与开源望而却步。</p>\n<p data-pid=\"xb2UiMTK\"><a href=\"https://link.zhihu.com/?target=https%3A//github.com/taichi-dev/taichi\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Taichi</a> 项目的开发始于清华大学紫荆学生公寓 2 号楼。项目由我于 2016 年在 GitHub 以 MIT 协议的开源软件，至今已经过去 6 个年头，其源代码也会在未来永远保持公开。目前 Taichi 由全球近 200 名开发者共同开发、维护。既然是社区的项目，那么维护一个互相尊重、让人愿意参与的社区就是至关重要的。本文主要聊聊<b>如何优雅地参与开源开发。</b></p>\n<p data-pid=\"eAJeZxqz\">不同的社区工作流程上稍有差别，不过我相信本文大部分内容对参与别的开源社区、甚至日常生活中的别的类型的团队合作也有帮助。本文的适用范围既包括开源社区，也包括各类需要团队合作（特别是跨国、跨文化）的场景。</p>\n<p data-pid=\"tOvW85-3\">本文主要会浅浅地讨论三个问题：</p>\n<ol>\n<li data-pid=\"fRItsAfb\">为什么参与开源开发？</li>\n<li data-pid=\"3gRMa6mw\">(Taichi) 开源社区的文化是什么样的？</li>\n<li data-pid=\"9UStiawl\">在开源社区如何做到有效沟通？</li>\n</ol>\n<hr>\n<h2>为什么参与开源开发？</h2>\n<p data-pid=\"oQoUd39T\">不可否认，参与开源项目开发会占用很多原本可以用来打游戏、看动漫等娱乐项目的时间，通常也不会获得物质方面的回报。即便如此，还是有很多同学乐于参加开源开发，原因通常有以下几点：</p>\n<p data-pid=\"WHI7_68w\"><b>提高编程能力。</b>这一点大概是最为直接的收获了。开源社区的每一份贡献都会收到其他社区成员的代码评审 (Code review)。在这个过程中，能够收获到很多在学校里学不到的编程经验。</p>\n<p data-pid=\"yj0l4d1z\">一些刚从学校编程作业转战 Taichi 社区的同学，第一个 PR 的几乎每一行代码都会因为规范性有待提升收到修改意见，一个 PR 里面有超过 50 个修改意见也不少见。千万不要受到打击，reviewer 只是在帮忙 :-) 但是他们在后续的 PR 中，代码质量就会有很大改进。这其实是一个很好的学习过程。事实上，在开源社区学到这一课，远比上班第一天被 leader 上这一课要好的多 :-)</p>\n<p data-pid=\"6n5VFq4x\">在 Taichi 开源的几年之中，我们也见证了很多社区参与者的快速成长。社区 maintainers 也在一个个 PR 中投入了大量的精力，与开发者一起成长。这本质上是一种互惠互利的过程，而开源社区本身也在这种双向的发展过程中逐渐壮大。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-9b2b218284b817b5c38c520042501558_b.jpg\" data-size=\"normal\" data-rawwidth=\"521\" data-rawheight=\"454\" class=\"origin_image zh-lightbox-thumb\" width=\"521\" data-original=\"https://pic1.zhimg.com/v2-9b2b218284b817b5c38c520042501558_r.jpg\"><figcaption>别怕，社区的同学带你一起学... (source: reddit)</figcaption></figure><p data-pid=\"x08VpBZc\"><b>通过设计决策解决实际问题的能力。</b>俗话说“小孩子才做选择，大人根本没得选。” 稍微复杂一些的实际问题中完美的解法往往是不存在的。悲观点说，设计决策就是权衡利弊，特别是项目具备一定规模以后。软件开发者需要在 “这也不行，那也不行” 中找出最不差的解决方案，从全局视角以最为实用主义（pragmatic）的精神进行设计，从而 <b>解决问题</b>。即使在开源社区，要真正做出有人关注的软件，大家通常想的也是解决问题，而不是炫技。</p>\n<p data-pid=\"GEmTbUEB\"><b>领域特定知识。</b>在 Taichi 社区主要的领域特定知识是编译器、计算机图形学、高性能计算等等。不同的社区有不同的领域特定知识，如 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/pingcap/tidb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">TiDB</a> 社区很明显就是围绕数据库展开的。毋庸置疑，每个社区都聚集着相应领域的大佬。</p>\n<p data-pid=\"1u9UJ5J9\"><b>团队合作能力。</b>我们汉字文化圈自古以来就强调集体为先，但是教育中却相对缺乏关于合作的教育（毕竟各种考试的时候一定是单兵作战嘛）。这意味着我们在 GitHub 上与世界各地的伙伴合作时，更要注意充分沟通、有效合作。</p>\n<p data-pid=\"1pfRWcfX\"><b>朋友。</b>比如 Taichi 开发者社区中既有潜力无限的中学生，也有身经百战的工程师。其中不乏清华/北大/MIT/CMU 等学校的本科生、研究生和研究人员、Google、Facebook 的专业软件工程师、IOI/NOI 金牌获得者等等。“三人行必有我师”，GitHub 作为 “全球最大（同性）交友平台” ，自然有不少自带闪光点的程序猿、程序媛出没，与他们合作本身就是一种乐趣。</p>\n<p data-pid=\"PUXwnF2Q\">我和匡冶（<a href=\"https://link.zhihu.com/?target=https%3A//github.com/k-ye\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">@k-ye</a>）就是在 GitHub 上认识的，经过一年时间我们在 GitHub 上一起编写了大量代码，建立了深厚的信任，最后决定出来创业，在此之前我们线下没有见过一面。Taichi 社区早期的绝大多数开发者都相互之间成了很好的朋友。毕竟程序员最喜欢的就是以码会友嘛。</p>\n<p data-pid=\"9OoJ-M6Z\"><b>成就感</b>。为流行的开源项目贡献代码，本身就是一种有成就感的事情，因为你的代码会被大量的用户所使用，为社会创造出价值。</p>\n<p data-pid=\"zkeWI0ke\">从实用主义的角度来说，如果成为知名开源项目的贡献者，这个经历会成为简历上的一个亮点。我相信不少公司的技术团队在招聘的时候是会看应聘者的 GitHub 的。我们就收到过一份海外图形学研究者的简历上赫然写着 “给 Taichi 社区开过 30 多个 issues。” </p>\n<hr>\n<h2>开源社区的文化</h2>\n<p data-pid=\"gNuaSnEk\">不同的开源社区有不同的文化，但是 <b>同理心、相互尊重、坦诚交流 </b>可能是开源文化中很重要的一点，也在很多社区被反复提及。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-8eb33f0bc85379084e72fdd231e2f14f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"960\" data-rawheight=\"513\" class=\"origin_image zh-lightbox-thumb\" width=\"960\" data-original=\"https://pic4.zhimg.com/v2-8eb33f0bc85379084e72fdd231e2f14f_r.jpg\"></figure><p data-pid=\"XnaQ7VI5\">首先要明确的是，开源社区其实并 <b>没有 </b>强制社区参与者回复 issue、review PR、merge PR 的能力，因为绝大多数贡献者都是被热爱驱动来参与社区贡献的。即使项目的原作者，往往也有自己的本职工作（比如我在开发 Taichi 的时候是在校学生），除了对项目和社区本身的热爱之外，没有人能够强制他们参与开源活动。</p>\n<p data-pid=\"FIGL0l6D\">很多开发者开发开源项目也只是为了在工作之余做一些自己真正感兴趣的事情，获得成就感。当然，对于项目的 “亲生父母” 来说，开源项目往往倾注了他们大量的心血，他们也选择了为社区 “捐出” 代码，出于责任心也会把项目维护好，为社区留下一个好项目。</p>\n<p data-pid=\"G5v8r4ca\">在这个前提之下，维护一个让人能够乐在其中、身心愉快的社区至关重要，甚至直接影响到社区的发展：谁愿意在自己原本可以自由支配的时间中，参与一个自己不那么喜欢的社区呢？</p>\n<hr>\n<p data-pid=\"XX6_abvh\">具体来说，类似其他开源社区，在 Taichi 社区我们会遵循如下文化：</p>\n<p data-pid=\"LqepYwuy\"><b>团队为先。</b>Again，开源的软件开发与单兵作战式的小项目有所不同，往往需要多考虑合作者的感受，而不能只顾自己“写得爽”。某种意义上说，<b>代码是写给别的程序员看的，而不是写给自己或者机器看的</b>。前者是专业软件开发的指导思想，后者是在学校或业余软件开发的指导思想。虽然两种指导思想都在各自的领域解决了问题，没有高下之分。但是如果希望将自己喜欢的编程作为安身立命之本，特别是要参与开源社区、和别的开发者合作，不妨在编程的时候注重代码质量。这其中就包括遵循命名规范、代码风格，编写清晰可读的 PR 描述和 commit message 等。</p>\n<p data-pid=\"Hv-4CwUu\"><b>质量大于数量，珍惜社区资源。</b>Reviewer 的时间就是社区最宝贵的资源之一，因此在 PR 被要求修改的时候尽量一步到位。举个例子， review 提出修改意见 apple 要换成 banana ，结果代码里改了，文档没改；又 review 一轮，文档改了注释没改；又 review 一轮，注释改了文件名标题没改。长此以往，reviewer 内心也很崩溃，很快就不乐意继续主动 review 你以后的 PR 了。（“社区还有这么多有意思的事情可以做，为啥要在一棵树上吊死呢？”）</p>\n<p data-pid=\"2qq9XFrC\"><b>谦逊、包容、冷静、理性，尊重社区的每一位成员。</b> 有话好好说 :-) 极端情绪、语言大多数情况下是不必要的。开源社区参与者就事论事，基于事实进行理性讨论，而不是诉诸情感。千万不要因为一些很小的分歧就中伤、攻击其他社区成员。实际上，任何形式的人身攻击（不管是社区内还是社区外），都是不可接受的。这一点几乎所有开源社区的 Code of conduct 都会提及。</p>\n<p data-pid=\"mGQnsGr9\"><b>礼貌、有效地沟通。</b>进行开发之前，需要与社区（通常是相关的 maintainer）及时沟通，这样才能避免重复开发、防止误入歧途，最好地利用自己和社区的宝贵时间。这一点文章后续也会提到。</p>\n<p data-pid=\"d-wkeekm\"><b>充分讨论，尊重决策机制。</b>某些时候做出决定本身比决定的内容更重要。与其无止境地争执，不如在有限的信息下基于决策机制勇敢决策。独断制，如 Linus 之于 Linux Kernel、退休前的 Guido 之于 Python；committee 制等等都是好的决策机制。这里无关独裁与民主孰优孰劣：无论如何一定要有一个最终拍板（并为结果负责）的人或团体来推动决策的进行，不然任何事情都会止步不前。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"j2RLqeBm\">我作为 Taichi 项目原作者和目前的主要 maintainers 之一，有构建、维护良好社区秩序和文化的职责，因此保留关闭（或要求修改）不友好或不符合社区文化、发展路径的 Issue / PR / comment 的权力。当然，迫不得已使用这些权力对于 maintainer 来说往往也是比较痛苦的过程，属于开源活动之中最不愉快、但又不得不面对的事情之一。和其他项目的维护者一样，我希望这些权力永远不被使用 :-) </p>\n<p data-pid=\"IHLUQ_01\">参与开源社区绝大多数时候是非常让人享受的过程，其中与社区其他开发者、用户的交互扮演了重要角色。有效的沟通其实还是需要不少技巧的，下面就这一点展开谈谈。</p>\n<hr>\n<h2>与社区的有效沟通</h2>\n<p data-pid=\"wm1-sTtW\">了解了参与开源的意义、开源社区的文化，应该不少同学都对加入开源社区有了一定的兴趣，也期待能够为开源软件提交自己的代码，造福社区和用户。在开源社区，<b>有效沟通</b>的能力是和技术实现能力同等重要的。只有掌握了沟通技巧，才能确保自己的参与方式在正确的道路上，才能确保自己付出的努力最终能够成为开源软件的一部分。因此这部分值得单独讨论。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-1ce65a91abd17ab1b81febc5cca25aa1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"960\" data-rawheight=\"605\" class=\"origin_image zh-lightbox-thumb\" width=\"960\" data-original=\"https://pic2.zhimg.com/v2-1ce65a91abd17ab1b81febc5cca25aa1_r.jpg\"></figure><p data-pid=\"afSRrmID\">开源项目的开发往往是通过提交 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/taichi-dev/taichi/pulls\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Pull request (PR)</a> 来实现的。一个 PR 说白了就是一个代码片段，有的地方也叫做 Merge request （MR）。每个 PR 都会被 reviewer 评审，质量合格、符合社区 roadmap 的 PR 就会被合并到代码的（主）分支中，成为一个 commit。这些概念我会在下一篇文章中详细介绍。这里主要讲讲有效沟通在开源社区的重要性。</p>\n<h3>沟通技巧</h3>\n<p data-pid=\"YyxUvhII\">有效沟通的最重要的一点是：应该尽可能站在<b>读者</b>（而不是写者）的角度考虑表达方式。比如：</p>\n<ul>\n<li data-pid=\"m_6nQW4t\">对方能否理解我的表达？（准确）</li>\n<li data-pid=\"CiTzbO2U\">我的表达是否会冒犯对方？（礼貌）</li>\n<li data-pid=\"EVzYWgSR\">我的表达是否对解决问题有帮助？（建设性）</li>\n<li data-pid=\"dmtIU9PT\">进阶技巧：对方是否容易回答我的问题？（在自己这边预先进行充分的思考，不为难对方）</li>\n</ul>\n<p data-pid=\"x7ZcqSOh\"><b>常见缩略语：</b></p>\n<ul>\n<li data-pid=\"EpFqIbGP\">LGTM: looks good to me (“看起来好对我”/ “我觉得这看起来不错”，一般用于表示批准PR)</li>\n<li data-pid=\"YbiKMgHP\">SGTM: sounds good to me (“听起来好对我”/ “我觉得这听起来不错”，一般用于表示赞同观点)</li>\n<li data-pid=\"ilNxgf6z\">IIUC: if I understand correctly (“如果我理解正确的话”，表示略微弱化结论)</li>\n<li data-pid=\"jbdyuM01\">IIRC:  if I remember correctly (“如果我记得对的话”，表示略微弱化结论)</li>\n<li data-pid=\"9y-VSn2B\">...</li>\n</ul>\n<p data-pid=\"kbmpdPfF\">值得注意的是，在使用别的缩略语之前，请确认它是否是英语环境中广泛接受的缩略语。通常没有必要发明新的缩略语，因为那样做只会让读者感到困惑，并不能让沟通更有效。每一位社区成员都应该明确的是，我们打了多少字不重要，重要的是其中有多少能够被读者理解和接受。</p>\n<p data-pid=\"FKZtLyuw\">Taichi 社区的贡献者来自地球上的各个角落，大家都用英语沟通。这里的一个技巧是<b>使用一个 spellchecker。</b>（我一般使用 Grammarly，如果大家有别的推荐的 spellchecker 欢迎在评论中指出。谢谢！）实际上，即使是 native speaker 也需要 spellchecker。</p>\n<h3>及时和社区交流</h3>\n<p data-pid=\"0bbduixX\">大部分情况下，及时和社区交流能够消除很多误解。开 PR 的大忌，就是看到社区用户或者自己有需求，就开始自己一声不吭地暗暗开发一个大功能，不和社区讨论，几天之后开出一个大 PR。开动之前至少要和社区打声招呼呀，哈哈 :-）</p>\n<p data-pid=\"zvXxmSsU\">事实上这样不但不能给社区一个”惊喜“，反而会导致 PR 难以被 review、无法被 merge。这种 “憋大招”、只顾自己写得爽的参与方式，往往是不可取的。这样事情经常在各种社区发生，是一个常见的误区，因此值得仔细讨论。比如，Linux Fundation 就专门<a href=\"https://link.zhihu.com/?target=https%3A//www.linuxfoundation.org/tools/participating-in-open-source-communities/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">讨论</a>过这个问题：</p>\n<blockquote data-pid=\"WrNLBrSJ\">\n<b>Include the community early and often.</b> Some organizations make the mistake of developing big chunks of code in house and then dumping them into the open source project, which is almost never seen as a positive way to engage with the community. The reality is that open source projects can be complex, and what seems like an obvious change might have far reaching side effects in other parts of the project. Any significant change is likely to require some community discussion before it moves to implementation to make sure that there are no side effects and that the solution is aligned with the broader goals for the project. While you discuss it with the community, it can help to focus on the problem, rather than a specific solution, before you invest too much time in the creation of a body of code. (See Jon Corbet’s guide on <a href=\"https://link.zhihu.com/?target=https%3A//www.linux.com/publications/how-participate-linux-community\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">How to Participate in the Linux Kernel Community</a>)</blockquote>\n<p data-pid=\"nENkBchR\">翻译成中文：（大意）</p>\n<blockquote data-pid=\"qUcrhEYq\">（贡献者应该）尽早和社区建立关系。很多组织和贡献者会犯的错误，是闭门造车开发大量的代码，然后把它们 “倾倒” 进开源项目。这几乎从来不被认为是参与社区的正确方式。事实上，开源项目往往比较复杂，即使是看起来很显然的改动也会对项目其他部分产生深远的影响。任何较大的改动往往偶需要先和社区讨论好，再开始实现，以确保改动没有副作用并且和项目更长远的目标所吻合。和社区讨论的过程也能帮助开发者们专注于问题本身而不是一个解法，这可以有效地防止开发者们投入太多（无效的）时间编写一大段代码。</blockquote>\n<p data-pid=\"F-8RQgbX\">刨去一次提交大量代码难以 review、保证正确性以外，这种独自开发的行为本质上和 ”开源“ 的原则是矛盾的。（感谢 tison 的博客指引我到这段经典的话，很推荐对开源有兴趣的同学阅读 tison 的文章：<a href=\"https://link.zhihu.com/?target=https%3A//tisonkun.org/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">tisonkun.org/</span><span class=\"invisible\"></span></a>）</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"dl0idyHF\">遇到这样的 PR，maintainer 也会被迫处于一个三难的境地。他们</p>\n<ol>\n<li data-pid=\"wgLBYxCq\">要么花费大量的时间和精力去和 PR author 沟通来确保 PR 内容符合项目未来发展的蓝图；</li>\n<li data-pid=\"pmzPQDbE\">要么不情愿地合并偏离开发路线的 PR；</li>\n<li data-pid=\"8PEIpq-Q\">要么直截了当地说明 “请按照社区的开发规则来进行开发以确保项目的健康发展”。</li>\n</ol>\n<p data-pid=\"Z0pArOaK\">不论是哪种情况，对于参与者的体验都是有损害的。我们社区的 maintainers 通常比较 nice，不好意思拒绝别人，因此通常会采用前两种方式处理，但这样往往会伤害 maintainers 的开源体验（别忘了 maintainers 自己也是开源贡献者）、使得项目偏离既定的发展路线。因此，作为开发者应当做好有效的沟通，才能最大程度上用好自己宝贵的时间和能力。这也是同理心的体现之一。</p>\n<p data-pid=\"lsk05edH\">最后，为了开源项目的健康发展，maintainer 必须有所判断、有所取舍。不少 PR 注定是要面临无法被 merge、 被 close 的命运。这在每个社区都是很正常的事情。Maintainer 必须有大局意识，如果真的遇到了上述情况，不能为了一个开发者的感受牺牲项目长远的发展，这一点也几乎是所有成熟开源社区的共识。Maintainer 要有明确的方向感，不能为了短期的情感被开发者带偏。当然，只要大家都遵守合理的规则（比如做到有效沟通），这样的情况就会很少发生。另外，作为开源贡献者，也完全有 fork 出一个自己版本的自由。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-aa1adfeddfcd09db411ad0e5e660f352_b.jpg\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"185\" data-thumbnail=\"https://pic3.zhimg.com/v2-aa1adfeddfcd09db411ad0e5e660f352_720w.jpg?source=d16d100b\" class=\"content_image\" width=\"300\"><figcaption>技术好当然是很重要的，但是确保项目能够沿着正确的方向发展，或许更加重要...</figcaption></figure><h2>总结</h2>\n<p data-pid=\"LAMvSPo4\">开源社区因为贡献者出于兴趣参与，没有强制机制，所以理想中每一位成员都应该维护社区的参与体验，才能让社区健康发展。这其中，同理心是开源社区正常运行的关键。推己及人，将心比心：你怎么对待别人，别人也会倾向于以同样的方式对待你。社区成员应当保持积极、友好，珍惜他人的时间。同时也要对社区伙伴有足够的包容（别忘了很多同学有自己的主要工作）。</p>\n<p data-pid=\"kI_Vuowr\">当然，Taichi 主仓库目前也就 166 个开发者，相对来说还不算是特别大的社区。我们也在不断努力提高开源社区的质量，也欢迎大家积极参与进来，和我们一起成长。也欢迎其他开源社区的小伙伴来我们社区逛逛。</p>\n<hr>\n<h2>扩展阅读</h2>\n<p data-pid=\"EGVTQswm\">不知不觉居然写了个万字长文，其实还有很多内容没有涉及到。如果想进一步了解开源社区，在知乎、各个博客上也有很多很棒的文章，这里列举一些。其中的不少对本文的撰写也起到了很大的启发作用：</p>\n<ul>\n<li data-pid=\"UC_gadx7\"><a href=\"https://link.zhihu.com/?target=https%3A//tisonkun.org/2021/12/05/effective-open-source-participant/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">高效参与开源的诀窍</a></li>\n<li data-pid=\"FYamXFkB\">如何让我的 PR 尽快被 merge？</li>\n<ul>\n<li data-pid=\"OF78CQDY\"><a href=\"https://link.zhihu.com/?target=https%3A//testing.googleblog.com/2017/06/code-health-too-many-comments-on-your.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Code Health: Too Many Comments on Your Code Reviews?</a></li>\n<li data-pid=\"-hDE9Yox\"><a href=\"https://link.zhihu.com/?target=https%3A//testing.googleblog.com/2019/11/code-health-respectful-reviews-useful.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Code Health: Respectful Reviews == Useful Reviews</a></li>\n</ul>\n<li data-pid=\"-j_WJXxN\">Rust 社区的 <a href=\"https://link.zhihu.com/?target=https%3A//www.rust-lang.org/policies/code-of-conduct\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Code of conduct</a>\n</li>\n<li data-pid=\"30X9GBTi\"><a href=\"https://zhuanlan.zhihu.com/p/26235066\" class=\"internal\">TiDB：如何从零开始参与大型开源项目</a></li>\n<li data-pid=\"RRUwvpCm\"><a href=\"https://www.zhihu.com/question/21965679\" class=\"internal\">中国开源现状如何？</a></li>\n</ul>\n<p data-pid=\"K0nWfqjQ\">本系列的下一篇文章会详细讲解 Issue、Pull request (PR)、Code review、Continuous integration (CI) 等入门开源社区常见的概念，并手把手带大家在 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/taichi-dev/taichi\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Taichi 社区</a> 开一个简单的 PR。</p>\n<hr>\n<p data-pid=\"A62ocTk1\">最后也介绍一下 Taichi。Taichi 是一个嵌入在 Python 中的开源并行编程语言，面向 GPGPU 等并行计算应用，力求实现优雅开发，高效运行，随处部署。更多技术介绍可以参见 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/taichi-dev/taichi\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GitHub</a> 和 <a href=\"https://link.zhihu.com/?target=https%3A//dev.taichi.graphics/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">网站</a>。想了解 Taichi 背后的故事，请移步<a href=\"https://zhuanlan.zhihu.com/p/97700605\" class=\"internal\">99行代码的《冰雪奇缘》</a>。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"cMns073G\">还没有用过 Taichi 的同学欢迎安装 Taichi：</p>\n<p data-pid=\"9gY0gcQp\"><code>python3 -m pip install --upgrade taichi</code> </p>\n<p data-pid=\"z5fu6xSO\">并执行</p>\n<p data-pid=\"g7rzm3SR\"><code>python3 -m taichi gallery</code> </p>\n<p data-pid=\"WCtOHG8O\">体验各种 Taichi demo 呀！(需要最新的 v0.9.2 版本)</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-28d857209f510b8c8728c9999a0caefe_b.jpg\" data-size=\"normal\" data-rawwidth=\"1108\" data-rawheight=\"680\" class=\"origin_image zh-lightbox-thumb\" width=\"1108\" data-original=\"https://pic3.zhimg.com/v2-28d857209f510b8c8728c9999a0caefe_r.jpg\"><figcaption>0.9.2 版本的 gallery 功能。点击即可运行各种 Taichi demo 并打印相关代码到终端。</figcaption></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"_KElz-_L\">如果你已经迫不及待想要来一起写代码了，最近手上还真有一个适合 CUDA/LLVM 玩家上手的小任务欢迎大家来搞一搞：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/taichi-dev/taichi/issues/4631\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">[RFC] [SIMT] Add CUDA warp-level intrinsics to Taichi · Issue #4631 · taichi-dev/taichi</a> </p>\n<p data-pid=\"Mnak0tT9\">（内容：给 Taichi 加入 CUDA warp-level intrinsics，每个 PR 应该 10-30 行代码就能写完。第一次贡献 PR 的同学会获得 Taichi 周边哦！）</p>\n<p data-pid=\"VNmg3cvH\">也可以关注一下我们的 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/taichi-dev/taichi/labels/good%2520first%2520issue\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">good-first-issues</a> 和 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/taichi-dev/taichi/issues%3Fq%3Dis%253Aopen%2Blabel%253A%2522welcome%2Bcontribution%2522\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">welcome-contribution</a> :-)</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-175892b56f2659ab1a5cc72e8e4c29fb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"909\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-175892b56f2659ab1a5cc72e8e4c29fb_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"cClHYKD2\">Most importantly, have fun! :-)</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://zhuanlan.zhihu.com/p/204492805?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\">知乎用户（登录查看详情）</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/204492805?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"《三国杀》中有哪些历史小细节设计的特别精妙？","date":"2022-03-28 02:36:13","description":"\n<p data-pid=\"VDmyTOUz\">仅举一例：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c9526015bb1e79c134557fbc9f64b8dd_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"136\" data-rawheight=\"182\" data-watermark=\"watermark\" data-original-src=\"v2-c9526015bb1e79c134557fbc9f64b8dd\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"BahmwPW9\">一件兵器，但是这件兵器其实背后故事挺多的，文明系列和帝国时代系列，都把诸葛连弩手作为中国文明的特色兵种。</p>\n<p data-pid=\"gtIy2Iq0\">考古学家曾经在山西发现了一个大约距今今天30000年前的石头箭头，说明至少30000年前在中国生活的古人类就开始使用弓箭。从古文献的记载来看，《吴越春秋》里楚国的神射手陈音阐述了弓弩的来源，说明弩来源于弓。</p>\n<p data-pid=\"4GQOsDXD\">到了战国中晚期，弩开始大量装备于军队。与弓相比弩的优势是可以把拉弓蓄能和瞄准射击两个程序分开。射弓箭要在拉弓的同时瞄准，弩箭则是把弦拉好挂在弩机的“牙”上，然后射手就可以专心的瞄准。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-3fda4fae62cf3538b309708425690179_720w.jpg?source=b1748391?rss\" data-caption=\"青铜弩机 秦代 国家博物馆藏\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"299\" data-watermark=\"watermark\" data-original-src=\"v2-3fda4fae62cf3538b309708425690179\" data-watermark-src=\"v2-4adb2789ff2ac6edc8361f5f74144137\" data-private-watermark-src=\"v2-0128f80718afab7273cdf8c37c75a983\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-13369bc7a78a0ec62af3fb491eecd3de_720w.jpg?source=b1748391?rss\" data-caption=\"弩结构图\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"387\" data-watermark=\"watermark\" data-original-src=\"v2-13369bc7a78a0ec62af3fb491eecd3de\" data-watermark-src=\"v2-b59d2c7094360030942433c1c98521f6\" data-private-watermark-src=\"v2-729f3400fe92e609d6386969f3879223\"></p>\n<p data-pid=\"1FDNi-tg\">看上面的弩的结构图，我们可以发现有个部件叫做“望山”，这是弩箭用来瞄准的工具，和现代步枪用来瞄准的照门原理类似</p>\n<p><img src=\"https://pica.zhimg.com/v2-4982f6ed0b109c633c9cc7ef5a29ebfd_720w.jpeg?source=b1748391?rss\" data-caption=\"步枪瞄准示意图，引用自https://www.zhihu.com/question/20027389/answer/24410269\" data-size=\"normal\" data-rawwidth=\"571\" data-rawheight=\"157\" data-watermark=\"watermark\" data-original-src=\"v2-4982f6ed0b109c633c9cc7ef5a29ebfd\" data-watermark-src=\"v2-5e0073498084cfc7b8bcb859040835d1\" data-private-watermark-src=\"v2-69ac2e9db4e21cabe038bbc32e11ee4e\"></p>\n<p data-pid=\"1HLrN9Om\">到了汉代，弩箭的望山高度有所增加，有的望山上甚至标明了刻度，提高了弩箭射击的精确度。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-35d4cd3ccbdb282e698343c30cd2cdf8_720w.jpeg?source=b1748391?rss\" data-caption=\"望山带刻度的青铜弩机 西汉 河北博物院收藏\" data-size=\"normal\" data-rawwidth=\"361\" data-rawheight=\"268\" data-watermark=\"watermark\" data-original-src=\"v2-35d4cd3ccbdb282e698343c30cd2cdf8\" data-watermark-src=\"v2-5c6c3ddf4aba8c694bdeefc1473f5004\" data-private-watermark-src=\"v2-ac94792c0e5c98774d674bd74d22105c\"></p>\n<p data-pid=\"thRhG98E\">到了三国时期，弩机上出现了工匠名字来进行流程追踪，南京石门坎曾经出土一件三国纪年的青铜弩机，上面有“正始二年五月十日，左尚方造，监作吏<b>鼍泉，</b>牙匠马*，师陈耳，臂匠江<i>，</i>师**。”可见各个不同部位都有专门的匠人负责制造，有专人负责验收。</p>\n<p data-pid=\"Z6mUpPCN\">弩箭不如弓的方面是射速慢，给弩上弦比拉弓认箭速率慢。所以《三国志》记载，“（诸葛亮）又损益连弩，谓之元戎，以铁为矢，矢长八寸，一弩十矢俱发。”</p>\n<p data-pid=\"W4ahbdR0\">等等，损益连弩？说明诸葛亮不是发明，而是改进连弩。</p>\n<p data-pid=\"k9kMohy7\">事实上，连弩在战国时期就已经出现了，考古学家在湖北江陵战国楚墓中发现了连弩实物。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-c7a0b6055ed4f00b96262e44b17c7715_720w.webp?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"612\" data-watermark=\"watermark\" data-original-src=\"v2-c7a0b6055ed4f00b96262e44b17c7715\" data-watermark-src=\"v2-afdc20be2baea7c36468d1bd89d8508b\" data-private-watermark-src=\"v2-8435266a5bd0bc9c8b6ea6c9b4b6fd02\"></p>\n<p data-pid=\"r5hvnaLh\">连弩的样子像平常的弩上面加了个木匣子，木匣子里面放弩箭，前面有两个射击口可以同时发射两支箭。专家推测木匣子和弩体之间的有活动的木臂，可以自动完成弩箭进入发射槽然后射击。不过，连弩的弩箭很短，只有不到15厘米，力量也不强，应该是近距离防身用的，无法射远。</p>\n<p data-pid=\"fJHI0-b0\">在《三国演义》里，诸葛亮临终之前，把连弩技术传给了姜维，“<b>“吾有连弩之法，不曾用得。其法矢长八寸，一弩可发十矢，皆画成图本。汝可依法造用。</b>”不过，诸葛亮的连弩特点是火力加强，<b>一弩可发十矢是一次发十矢还是连发十矢没有交代清楚，不过参照《三国志》的记载，应该是一次发十矢。</b></p>\n<p data-pid=\"YxfmIUQa\"><b>《三国杀》的诸葛连弩设计明显以战国连弩为原本，无限打“杀”的设定借鉴了连弩可以连续射击的特点，射程1借鉴了连弩射程近的特点，在牌面威力上形成了很好的平衡，又能找到考古实物的证据源头，我觉得还是挺能以小见大的。</b></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/luo-xuan-zhen-li?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">螺旋真理</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/523235899/answer/2410875769?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">8 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/417515519?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如果三国杀要设计一个只能在游戏结束时发动的技能，可以如何设计？</a><br><a href=\"http://www.zhihu.com/question/287855557?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《三国杀》的设计可以有多用心？</a><br>\n","link":"http://www.zhihu.com/question/523235899/answer/2410875769?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价动画《新秦时明月》第 19 集？","date":"2022-03-26 07:01:38","description":"\n<p data-pid=\"BDwDL3-r\">大家好，《新秦时明月》已经播出第十九集。</p>\n<p data-pid=\"LWawMjqq\">天明出门遇到了小高雪女，这里天明依然还不知道自己父亲就是荆轲。墨家虽然计划屠龙，推翻暴政，但是在孩子面前并没有引导天明向复仇的方向发展，墨家主张非攻兼爱，天明也因此得到了健康成长的机会，没有从小就活在复仇扭曲的世界里，他的成长会更多围绕着爱展开吧。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b4da5f22dfddc93e055dc578af18d3bb_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"714\" data-watermark=\"watermark\" data-original-src=\"v2-b4da5f22dfddc93e055dc578af18d3bb\" data-watermark-src=\"v2-254ae6ba06626fbf0bad96bb0d31f254\" data-private-watermark-src=\"v2-84a998053c9199cc26234957b00659e4\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-2663c15a8d8fe0396203826aafccf7ab_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"711\" data-watermark=\"watermark\" data-original-src=\"v2-2663c15a8d8fe0396203826aafccf7ab\" data-watermark-src=\"v2-b64d96ff99c0e27da9ce88c9ce422a21\" data-private-watermark-src=\"v2-1f8696250246b8ffaed09f398af53870\"></p>\n<p data-pid=\"1vXWtFCt\">练剑池这里的篇幅比较长一些，对于天明为何会知道咸阳宫，会记得见过天问，我其实也一直很好奇。天明离开咸阳宫的时候还很小，理应并不会有这些记忆，但是一些碎片化的画面会从脑海中浮现，这里显然说明天明的确在某种原因下对咸阳宫保有一些印象。我记得有个科普知识讲过，为何我们都不会记得2岁前的事物，它的理论是我们如果要清晰的记住某件事情，需要具备必要的几个要素，作为类似索引的作用，然而因为太小的时候人并不具备明确的认知，所以索引无法建立，导致大脑没有办法成功提取2岁前的记忆。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-55e84028e0a5eeb33be21b37de1e9eaf_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"710\" data-watermark=\"watermark\" data-original-src=\"v2-55e84028e0a5eeb33be21b37de1e9eaf\" data-watermark-src=\"v2-c43ca08db59dd68923f9fb7108999e66\" data-private-watermark-src=\"v2-0d3b06575b881adf8373e8277786eab5\"></p>\n<p data-pid=\"-R07H2sW\">这里名剑排行榜的知识又做了一次科普，不知道大家最喜欢的是哪柄名剑呢？</p>\n<p data-pid=\"xNhZ-0qE\">我个人比较喜欢小高的剑，寒冰加持后真的很帅~</p>\n<p><img src=\"https://pic2.zhimg.com/v2-9aa43f9a4e1b1179bfa9c900f3d51eb2_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"715\" data-watermark=\"watermark\" data-original-src=\"v2-9aa43f9a4e1b1179bfa9c900f3d51eb2\" data-watermark-src=\"v2-da37b8d9347e788173427e6f86e24d31\" data-private-watermark-src=\"v2-a6b3c872f7d72e614382840812a99bea\"></p>\n<p data-pid=\"gZ5nEYj6\">鲨齿虽然与第二名的渊虹不相上下，但是因为太凶太妖没被例入剑谱内，是持剑之人决定着兵器的命运呢？还是兵器决定了小庄？</p>\n<p><img src=\"https://pic3.zhimg.com/v2-119799187bf6b62150e76a5aed1be9dc_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"711\" data-watermark=\"watermark\" data-original-src=\"v2-119799187bf6b62150e76a5aed1be9dc\" data-watermark-src=\"v2-c1ff349eddf5786cc87df78effdb6ece\" data-private-watermark-src=\"v2-11563557aff66bb8c13587deea7e6f3b\"></p>\n<p data-pid=\"y5dW7bXb\">在家隔离这段时间我把之前一直没看的奥浩哉老师的《杀戮重生犬屋敖》漫画看了一遍，人没有简单的正与恶，黑与白，那么卫庄呢？ </p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/xie-xiao-ming-98-74?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">薛小明</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/524206401/answer/2408090381?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">3 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/519999486?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价动画《新秦时明月》第 16 集？ ?</a><br><a href=\"http://www.zhihu.com/question/518604100?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价动画《新秦时明月》第 15 集？</a><br>\n","link":"http://www.zhihu.com/question/524206401/answer/2408090381?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\n    return new Date(date.toLocaleString('en-US', { timeZone }))\n}\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        timeZone\n    })\n    return {\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\n        convert (date) {\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\n        }\n    }\n}\n\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\n    return converter.convert(new Date(secDate), tzName) - secDate\n}\n\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\ncmn-Hans-SG = 中文普通话-简体-新加坡\ncmn-Hant-TW = 中文普通话-繁体-台湾\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\ncmn = 中文普通话\n\nzh-Hans = 中文-简体\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\n}\n\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long'\n}\nconst now = new Date()\n\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\n\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\n\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\n\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\n\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\n\nzhCNFormatter.format(now) // 2021年10月13日星期三\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\n\njaFormatter.format(now) // 2021年10月13日水曜日\njaAltFormatter.format(now) // 令和3年10月13日水曜日\n\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\n// {locale: 'zh-CN', calendar: 'gregory', …}\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\n     // 基于一个固定日期计算，这里选择 1970.1.1\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\n    const base = new Date(1970, 0, 1).getTime()\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\n    return Array.from({ length: 7 }, (_, day) =&gt; (\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\n    ))\n}\n\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n}).formatToParts(new Date())\n// [\n//     { type: 'year', value: '2021' },\n//     { type: 'literal', value: '年' },\n//     { type: 'month', value: '10' },\n//     { type: 'literal', value: '月' },\n//     { type: 'day', value: '13' },\n//     { type: 'literal', value: '日' },\n//     { type: 'weekday', value: '星期三' },\n//     { type: 'literal', value: ' ' },\n//     { type: 'dayPeriod', value: '上午' },\n//     { type: 'hour', value: '1' },\n//     { type: 'literal', value: ':' },\n//     { type: 'minute', value: '00' },\n//     { type: 'literal', value: ':' },\n//     { type: 'second', value: '00' }\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\n}\n\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\n  timeZone: 'America/Los_Angeles',\n  year: 1995,\n  month: 12,\n  day: 7,\n  hour: 3,\n  minute: 24,\n  second: 30,\n  millisecond: 0,\n  microsecond: 3,\n  nanosecond: 500,\n  calendar: 'iso8601'\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote>\n<p>周六不放假休息，还在这加班搞 CTF？</p>\n</blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/86535/11/24318/75037/622032a8E4f94d4ae/89703ccc122cf4e0.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"从 Google Analytics 的统计代码说起 —— 谈谈 script 标签的 async 和 defer 属性","date":"2020-10-13 09:25:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/80291/2/16552/19311/622032b3Eb300c2aa/66748fc8124a01c5.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/script-async-defer/\">https://blog.skk.moe/post/script-async-defer/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/script-async-defer/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将 […]","link":"https://flyhigher.top/develop/2160.html"}]