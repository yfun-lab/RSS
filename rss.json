[{"title":"如何看待剧本杀定价逐渐升高，城限/独家本甚至赶超密室逃脱的价格，未来会产生何种影响?","date":"2022-08-16 03:50:14","description":"\n<p data-pid=\"9r9LzuVs\">这个提问其实是有点不严谨的，但剧本杀的价格不断飙升确实也是事实，是值得讨论的。</p>\n<p data-pid=\"w5ZVfQxR\">先问是不是，再问为什么。</p>\n<p data-pid=\"MaKvOzNE\">剧本杀价格不断飙升是事实，但同等水平下赶超密室则还有一定距离。</p>\n<p data-pid=\"j7g994aj\">首先，剧本杀和密室的体验时间有所差异，在<b>非北上广</b>地区，200 块钱一个人的剧本杀基本就是「独家」的价格。也就是说，在这些城市里，一般而言，200 块你可以体验最顶级的剧本杀，包括优秀的剧情和很不错的演绎，大概游戏时间在 5-7 小时之间。但同样的 200 块放在密室里，即使在郑州，也就只能在最普通，按小时计费的密室里玩两个小时。造成这样的原因自然是成本。当然在除了部分一线城市的其他城市中，优秀的密室本身就不多，这就又是另一个话题，暂且按下不表。</p>\n<p data-pid=\"J5cpU0kP\">当然，剧本杀在北上地区有所溢价（没去过广州所以就不提了），我甚至在北京玩过 238 块钱的盒装，而且没有演绎。但即便如此，剧本杀的价格也很少能在同等水平下（如盒装和最普通传统的密室）与密室相提并论。</p>\n<p data-pid=\"v3xMHUPX\">那么，是什么让大家都产生了一种错觉，即现在大部分的剧本杀价格都在不断提升，以至于要赶超密室了呢。一方面是由于剧本杀的价格提升快的惊人，另一方面则是因为惯性思维。</p>\n<p data-pid=\"sL7XIjiZ\">在传统意义上，我们一提到密室，就会想到精致的机关、精巧的解密和众多工作人员。而提到剧本杀，大家可能难免会想到最初的剧本杀——几个人，几个本，一个 dm 随便念念词钱就到手了。因此，这两年剧本杀价格飞涨。同时，剧本杀和密室又经常一起出现在大众视野中，所以难免会把原本属于两个不同赛道的游戏放在一起进行比较。这样一比较，难免会觉得，密室还没涨价，剧本杀凭什么涨价这么快。</p>\n<p data-pid=\"QO-2aLjl\">而事实上，目前剧本杀店家在结束野蛮生长之后，无论是环境还是服务人员质量都在稳步提升。已经不是最初大家印象中的剧本杀。至于密室也在稳步发展，只不过由于较为稳定，投资成本高且较少有人入场，相比之下不被大家多关注而已。二者从价格到赛道，还是要很大差距的。</p>\n<p data-pid=\"SnmjLcnE\">最后，看到有其他答主提到沉浸式剧场之类的，这种个人认为是剧本杀赛道中的一部分卷王，店家从发行拿本，然后让较有经验的 DM 进行改编，然后再由专业人员（北京这边很多是中戏北电毕业）进行演绎，称之为沉浸式剧场或者其他名字，以此打出门店招牌。当然能否改好就是两说，也有很多店家改的驴唇不对马嘴，但不可否认，优秀的改编剧本是可以吸引到相当一部分客流，且可以让剧本杀价格更高。</p>\n<p data-pid=\"7GTPfWNi\">最后的最后，突然想到还有实景搜证这么个东西，人均三四百，玩四个小时左右，这东西更多的是个噱头，溢价高，美名其曰增加沉浸感，实际上目前我还没见过哪个店的实景搜证剧本做的很好的，店家自己都不让熟客去玩……</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zha-yu-gua?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">爱吃猹的瓜</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/542960255/answer/2627641378?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">19 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/516147966?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">沉浸式剧本杀客单价达 500 元，剧本杀一桌难求，剧本杀为什么会备受年轻人喜爱？</a><br><a href=\"http://www.zhihu.com/question/519394791?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">上海将对「密室剧本杀」新业态纳入管理，这将对该行业带来哪些改变？</a><br>\n","link":"http://www.zhihu.com/question/542960255/answer/2627641378?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"基因组学数据科学双专业学生拯救知识点记不住：本科生学习工作流","date":"2022-08-16 03:32:35","description":"虽然不能说适合所有人，但全文一共提到的三个步骤两个技巧一个方法论和十几个常见的、不常见的 app 多少能引起一些思考，希望帮助大家找到适配自己工作/学习的习惯和内容的工作流。<a href=\"https://sspai.com/post/75145\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75145"},{"title":"假如能回到初入职场的时候，你最想对当时的自己说点什么？","date":"2022-08-16 03:31:55","description":"\n<p data-pid=\"b_C0_mFm\">职场若只如初见</p>\n<p data-pid=\"NgEsvIO3\">时光倒流这事儿呢，25岁之前会幻想得比较多。假如能回去，回到初入职场最初的起点，会跟自己说些什么呢？</p>\n<p data-pid=\"ML6yKYD3\">“赶紧买房”？</p>\n<p data-pid=\"iyelPavq\">大概率是不会的。具体的操作细节，在蝴蝶效应和时间尺度的扰动和扩散下不堪一击。我甚至可能什么都不会说，就看着青春然后笑，因为这十几年在职场上我没什么可遗憾的，走得虽慢，但方向确定，心中依然相信能够抵达。</p>\n<p data-pid=\"2TwIEQqB\">但有没有一些事，真的是知道得早一点、就好一点呢？</p>\n<p data-pid=\"x0BLUpsv\">还是有的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-3ec560f582cc9a9a6802ae703b335b84_720w.jpg?source=b1748391?rss\" data-rawwidth=\"6554\" data-rawheight=\"4371\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-3ec560f582cc9a9a6802ae703b335b84\" data-watermark-src=\"v2-0457ed1c0f3b3820d767d33255d7eed8\" data-private-watermark-src=\"v2-bb5c9ec326c0968582bca7c90c953899\"></p>\n<p data-pid=\"OBsG0ApI\">以下两件事，我会告诉那位青春的自己。</p>\n<p data-pid=\"HuB4s01_\">第一是，用最快的速度，找到热爱的事里—最擅长的那一件。</p>\n<p data-pid=\"mrNeLilA\">找到热爱已经不是件容易事了。广泛尝试、自我审视，还要经历时间的考验。但光热爱也还不行。要跟天赋点、已有技能点、进化速度进行比对，快速锁定。这事关职业大方向，越早敲定，越早出发。方向确定前，一切风向都是逆风。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-e5a7605298ca49f36069d4bdb5730c53_720w.jpg?source=b1748391?rss\" data-rawwidth=\"6356\" data-rawheight=\"4239\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-e5a7605298ca49f36069d4bdb5730c53\" data-watermark-src=\"v2-59595d90de3501be97c6db5e1528547b\" data-private-watermark-src=\"v2-75e35658af99614a9b3e6f1787ee6c37\"></p>\n<p data-pid=\"uGB74R66\">第二是，尽早写下人生原则。职场需要些清晰明确的原则，它们是人生的底线，行动的边界。在构思时可以再三斟酌，确定自己到底要什么，但落子无悔，一旦确立，自己定的，天塌下来也要做到。比方说，如果写上了诚信，哪怕天塌也要言出必信，慢慢的，“靠谱”这个特质就能在你身上发出光来。请注意：是写下，要落笔要具象，不能只在脑袋里想，一定要形成文字，倒逼自己明晰化，也方便日后行动中随时对照。一个人有多值钱，取决于你的原则有多值钱。原则确立了，你人生的确定性便开始显出轮廓。为自己立法，是你灵魂立起来的最重要一步。</p>\n<p data-pid=\"es_tlcxG\">好了，这位青葱少年，两柄武器都已递到你手上了，请拿好它们，接下来是过关斩将，还是游山玩水，你自己选咯！只请记住，屠完龙后，勿成恶龙，跃过深渊，勿要回头，越过山丘，不要怕无人等候，因为至少还有我，在山的另一头！</p>\n<a href=\"https://www.zhihu.com/zvideo/1542577108190068737\">在硅谷当程序员是怎样的体验？</a>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/chen-ming-46-51?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">陈铭</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/548490633/answer/2629097983?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">27 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/515174987?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">在最低谷的时候哪句话支撑着你走到了最后?</a><br><a href=\"http://www.zhihu.com/question/505422741?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">当你在工作的时候身边的同事处处打压你，你会怎么办？</a><br>\n","link":"http://www.zhihu.com/question/548490633/answer/2629097983?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价《明日方舟》2022 年 8 月开放的测试小游戏「博士行为测试」？","date":"2022-08-16 03:08:41","description":"\n<p data-pid=\"C_jb57pj\">首先，让我们一起来看看本次新登场的历史名人们，本次的测试结果共有五位，结果和各位选择时三类不同倾向的选项多少有关。</p>\n<p data-pid=\"hftXuHsv\">每次选择常规的三个选项代表的分别是：实力碾压、还原剧情、针对机制。</p>\n<p data-pid=\"IlcxyXXZ\">第一位：梦魇大可汗，实力碾压类选项最多时触发，同时可能是大家最常见到的结果。</p>\n<p data-pid=\"9AIoQMJG\">可汗，种族梦魇，原型为历史上的铁木真，又称成吉思汗。</p>\n<p><img src=\"https://pica.zhimg.com/v2-243adb0cc59ad1ff3d791f54d10606cb_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"883\" data-watermark=\"watermark\" data-original-src=\"v2-243adb0cc59ad1ff3d791f54d10606cb\" data-watermark-src=\"v2-0cbfa7206c7fa59abd7c68ad49d0fd09\" data-private-watermark-src=\"v2-cae01af5ca7abb6b1a82261f96f8cecf\"></p>\n<p data-pid=\"yDm-cPtn\">他统一并建立蒙古帝国，成为大蒙古国可汗。</p>\n<p data-pid=\"yLiZzk3W\">在目前的方舟剧情中，我们可知曾经的这位可汗发起了对泰拉各国的远征，并协助过萨尔贡击退外域生物。</p>\n<p data-pid=\"Uk0pAhMP\">目前可汗的直系纯血后代只剩下拓拉，此人在长夜临光中为重现过去的远征，向卡西米尔发起挑战，但最后被血骑士击败。</p>\n<p data-pid=\"IZWhT-JU\">纵观历史上和方舟中的可汗，无一不是在短时间内对各国形成迅猛而直接的进攻，成为了真正意义上各国领导人的梦魇。</p>\n<p data-pid=\"jHQQeUfm\">这样看来，选择纯碾压式的战术，真是无愧于“万国疆域的踏破者”这个称号。</p>\n<p data-pid=\"zpHAD6Zf\">第二位：伊戈尔，实力碾压和还原剧情选项各选择4项时触发，是第一个没有任何预告的新人物。</p>\n<p data-pid=\"H4sQpUNu\">伊戈尔，原型伊戈尔·留里科维奇，古罗斯王公，是俄罗斯国家的第一个王朝留里克王朝的实际创建者。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-0d4e097c3d06631bf3e13cffdce96b5a_720w.webp?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"220\" data-rawheight=\"293\" data-watermark=\"watermark\" data-original-src=\"v2-0d4e097c3d06631bf3e13cffdce96b5a\" data-watermark-src=\"v2-3be3fdf43c6d46822b106131d574b78b\" data-private-watermark-src=\"v2-911069c6b1e4cc37d7e67351771b749f\"></p>\n<p data-pid=\"9f4yLjYo\">历史上这位王公继承了先辈奥列格的扩张政策，曾经两次远征拜占庭帝国，最后死于进行索贡巡行时。因为他企图征取双倍的贡赋，结果被忍无可忍的德列夫利安人杀死。编年史把他的死归因于过度的贪婪。</p>\n<p data-pid=\"_xBLXcsg\">回到方舟，根据图中给出的骏鹰折翼的称号我们可以得知，此人是促使乌萨斯骏鹰政权消亡和乌萨斯上台的关键人物，将种族名乌萨斯变成这个国家名称的首任皇帝，同时也是乌萨斯近代历史的开启者。</p>\n<p data-pid=\"m4WkQq88\">从四皇之战半途参战，以及后续持续以战养战的细节，我们不难想象，这位初代皇帝与历史上的伊戈尔一样，善于抓住种族的身体优势，展开赌命般的大决战，可以说是无畏且喜好赌国运的战术代表。</p>\n<p data-pid=\"L_iQ6eI-\">第三位：威灵顿公爵，还原剧情选项最多时触发，同时也是全部人物中我们最熟悉的那一位。</p>\n<p data-pid=\"J5JypHCe\">杜兰兹曾经在梳理维多利亚八大公爵视频中对他进行过全方位的介绍，有兴趣的同学可以移步我们的往期视频。</p>\n<p data-pid=\"1WkrFcrG\">视频链接：<a href=\"http://link.zhihu.com/?target=https%3A//www.bilibili.com/video/BV1tv4y1K7fj%3Fshare_source%3Dcopy_web%26vd_source%3D291818f40a2d63c2e83445cc2b6cd6df\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">八大公爵为何争夺王位？-25分钟大公爵深度考据_手机游戏热门视频</a></p>\n<p><img src=\"https://pic2.zhimg.com/v2-f6c1e0282428704b3724cd085a1403d1_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"395\" data-rawheight=\"500\" data-watermark=\"watermark\" data-original-src=\"v2-f6c1e0282428704b3724cd085a1403d1\" data-watermark-src=\"v2-54b1bd3e6f76787a13b79dca91e655e1\" data-private-watermark-src=\"v2-83a764d485bef677104e931fe459de73\"></p>\n<p data-pid=\"TcMqzdxz\">这里我们简要说明一下，他的原型是阿瑟·韦尔斯利，初代威灵顿公爵，在方舟和历史上都被称为铁公爵。</p>\n<p data-pid=\"N5l7lm5i\">方舟中威灵顿的主要事迹就如同他的称号一样，是高卢帝国的丧钟，在四皇之战中为击溃高卢立下大功。</p>\n<p data-pid=\"Eg11nnBI\">但同时，他也是一位血统不正的塔拉人，因此是八大公爵中目前唯一不能正面竞争王位的大公爵。</p>\n<p data-pid=\"dv-4wGeq\">出于夺权需要，他暗中扶持了深池部队，在可见的未来将成为推进之王重回王位道路上最强大的敌人之一。</p>\n<p data-pid=\"K5gGa540\">威灵顿公爵的选项，预示着你往往不会拿到最好的底牌，但是总能够凭借自己的聪明才智打出最优解。</p>\n<p data-pid=\"84ObaYCV\">第四位：利奥波德大公，还原剧情和针对机制各选择4项时触发，第二位之前完全没有涉及的新人物。</p>\n<p data-pid=\"WoYgDxUx\">这位对应的历史原型十分复杂，但是基于官方给出的现代军事理论奠基人称号来看，克劳塞维茨是无论如何难以绕开的名字。</p>\n<p data-pid=\"KCliACf7\">克劳塞维茨，普鲁士人，著作《战争论》，被誉为“现代军事理论之父”，他在军事学方面的贡献毋庸置疑。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-8fefe3e6e4bf543f68353edb2766f0ca_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"649\" data-rawheight=\"807\" data-watermark=\"watermark\" data-original-src=\"v2-8fefe3e6e4bf543f68353edb2766f0ca\" data-watermark-src=\"v2-dab5970664126bfabc52d1aadaa15d45\" data-private-watermark-src=\"v2-0b6318f2599da5ac9f239eefffcb4645\"></p>\n<p data-pid=\"Xhf-FZLN\">但是同时，他不是利奥波德，也从未获封大公，因此这一名字另有其人的可能性很大。</p>\n<p data-pid=\"aVoldC59\">目前，我们最认可的另一个原型是利奥波德·约瑟夫·冯·道恩，神圣罗马帝国元帅，多次击败普鲁士的腓特烈大帝，以擅长防御和组织残兵反攻著称。</p>\n<p><img src=\"https://picx.zhimg.com/v2-41c2b5cce14da926274df9d52b2360d3_720w.webp?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"797\" data-rawheight=\"1033\" data-watermark=\"watermark\" data-original-src=\"v2-41c2b5cce14da926274df9d52b2360d3\" data-watermark-src=\"v2-8693abb17000cd54a88f406e2c8d5dd8\" data-private-watermark-src=\"v2-a0142405863956cccf33839b36f25f09\"></p>\n<p data-pid=\"UOJlhMne\">同时他也是深受当时的女大公玛利亚·特蕾西娅信任之人。</p>\n<p data-pid=\"wsNQpmHL\">目前我们对这位大公的信息知之甚少，只能从称号描述，以及历史原型上推断这位是泰拉第一位真正意义上的战争理论学家，最顶尖的智将，在莱塔尼亚历史乃至泰拉战争史上留下过浓墨重彩的一笔。</p>\n<p data-pid=\"WN0RbG7_\">最后一位：战争女神，当针对机制选项最多时才会触发，极有可能是干员帕拉斯的先祖。</p>\n<p data-pid=\"F_8OqBvA\">米诺斯原型希腊半岛地区，对应的战争女神自然是希腊神话中的雅典娜，同时也是罗马神话中的密涅瓦。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-91399490d8b96394edfe9f381db7ccc2_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"450\" data-watermark=\"watermark\" data-original-src=\"v2-91399490d8b96394edfe9f381db7ccc2\" data-watermark-src=\"v2-b0995ba16d7baaf46773e36b25853020\" data-private-watermark-src=\"v2-dc135688af748fd569b2339afff35643\"></p>\n<p data-pid=\"wzD5yi83\">官方给出的雅赛努斯的战争祭司称号也可以证明这一点，因为雅赛努斯就是指现在的雅典。</p>\n<p data-pid=\"l3OTDFhU\">关于雅典娜的故事可以说家喻户晓，我们在此就不多做介绍，真正令我们感兴趣的是，这位人物持有“游击队与特种作战之母”的称号，让我们确定了她对应的现实历史时期。</p>\n<p data-pid=\"ixwcalmq\">在希腊历史中，有两次重要战争涉及到了游击战术与特种作战，他们分别是古希腊的伯罗奔尼撒战争和现代希腊独立战争，前者是雅典城邦对抗斯巴达的独立战争，后者是现代希腊得以立国的重要战争。</p>\n<p data-pid=\"brs7DI4n\">可以说两者都有作为战争女神原型的可能性。</p>\n<p data-pid=\"_37K5TcB\">鹰角用这一人物和对应历史，喻指针对敌方弱点进行针对性破坏乃至毁灭的游击战术，体现以弱胜强的精髓，可以说十分适合了。</p>\n<p data-pid=\"L2mAHfQb\">最后，我们简单聊一下点击再试一次上方的残影可以触发的隐藏测试。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-3fd2895f55eb931b14db986e57ee97cd_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1030\" data-watermark=\"watermark\" data-original-src=\"v2-3fd2895f55eb931b14db986e57ee97cd\" data-watermark-src=\"v2-8a703bfbdfb5fd09ad84997aaefa08a8\" data-private-watermark-src=\"v2-4ba3e543c5f5e0a4297b744c01642580\"></p>\n<p data-pid=\"uUBte8bF\">在隐藏测试中，官方以半调侃的语气描述了水月的一个生活场景，三个选项分别对应没管孩子的凯尔希，不可以沉迷游戏的阿米娅，以及邀请高手测试软件的奸商可露希尔。</p>\n<p data-pid=\"Ht9WuRQN\">结合9月即将登录的集成战略新版本，水月的这个隐藏内容有一定可能暗示了肉鸽的主题。</p>\n<p data-pid=\"_GKXnnzh\">前两次集成战略，分别是小刻在梦境中游历了泰拉的历史，傀影在剧作家编制的剧本中再现了史诗。</p>\n<p data-pid=\"SBtpvrd8\">可以说，每次肉鸽都是亦真亦假的故事轮番上演。</p>\n<p data-pid=\"3QX7nCJh\">那么这次，水月该如何体现这一特征呢？</p>\n<p data-pid=\"10ggKhcA\">根据愚人号事件开发的rpg游戏，或许就是一个很好的载体。</p>\n<p data-pid=\"AM29itld\">从水月的视角，带领我们进入试玩时经历的故事。</p>\n<p data-pid=\"QTVJ6V6G\">巧合的是，官方夏日直播时曾经公布了名为启示的团队光环效果，有五个图标，而这次我们得到的倾向也正好是五个，这是否意味着，这五位泰拉战争名人，将会以游戏NPC的身份，给予我们启示？</p>\n<p data-pid=\"wUKMIABk\">而结合本次活动“游戏测试”的主题，常规的三个结局很可能是这样安排的：</p>\n<p data-pid=\"WhGYzdI7\">常规结局：水月通关游戏测试，和可露希尔庆祝。</p>\n<p data-pid=\"sVWk7t2_\">隐藏结局：水月发现游戏软件隐藏BOSS，获得胜利，得到表扬。</p>\n<p data-pid=\"8miXH6uj\">真·结局：水月游玩时发现游戏内容的系统漏洞，从而进一步揭开这个测试软件背后的秘密。</p>\n<p data-pid=\"76qyRZ5S\">#明日方舟##手机游戏#</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhang-dao-heng-29?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">杜兰兹移动大学</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/548513490/answer/2628795593?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">23 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/532610624?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《明日方舟》非萌新非大佬的box要怎么取舍训练？</a><br><a href=\"http://www.zhihu.com/question/516974508?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《崩坏3》玩家为何如此敌视《明日方舟》和《明日方舟》玩家？</a><br>\n","link":"http://www.zhihu.com/question/548513490/answer/2628795593?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"量化的职业发展简介","date":"2022-08-16 02:59:27","description":"\n<h2><b>引言</b></h2>\n<p data-pid=\"rZlfXz8k\">笔者在券商行业待了三年，在某家小私募在待了小半年时间，相当于在卖方和买方都待过，对量化行业这条路略有了解，加之在日常生活和工作中经常会 接触到行业内 (头部私募、中部私募、小私募、银行自营、券商自营，券商后台、互联网金融、币圈等) 的各路人士，在本文中，笔者就自己经历或身边 朋友的一些了解，简单介绍一些量化行业的职业发展路径，区分以及可能的收入情况。</p>\n<p data-pid=\"OXRUe5XV\">为什么写这篇文章，其实因为经常会碰到一些师弟师妹，或者量化爱好者咨询关于量化的就业，关于职业发展路径等问题，当然了，还有最敏感的，待遇问题。 在笔者博士毕业之后，也曾经非常迷茫，各种机缘巧合从事了量化金融相关的工作，其中各种未知，也是让自己惴惴不安。本文不希望成为贩卖焦虑的文章， 当然也不希望成为贩卖成功学的文章，笔者希望尽量客观，但是因为行业的缘故，某些情况也只是笔者从侧面了解到的情况，如果谬误，欢迎行业大佬批评 指正，不甚感激。</p>\n<p data-pid=\"UnxhWMgR\">以下，笔者将就自己接触到的一些常见问题，做一个简单介绍。</p>\n<h2><b>什么是量化</b></h2>\n<p data-pid=\"Z0akV2ym\">关于这个问题，其实是很多本科金融学或者研究生金融学，数学系，物理系等相关方向的学生常问的问题。因为在日常生活中，经常会听到一些关于前辈们的 传说，某某金融才子，就是物理系毕业的，某某行业巨擘，就是数学系毕业的，他们做的据说是金融相关内容，好像和量化有关系。但是如果当老师吹牛的时候， 一细问，老师可能也不清楚具体情况。</p>\n<p data-pid=\"cvyHxPp_\">从正常投资角度来看，投资分主观和量化，前者的投资很多是主观判断，宏观上做一个判断，中观行业上做一个判断，譬如宏观上看社融，看 PMI 等等，对经济 形式有个简单判断，中观看短期可能房地产不行，可能新能源，半导体是今年投资热点，微观上对热门行业的股票做一个筛选，然后做一个资产配置；后者可能 会更倾向于在数据上进行投资决策，最简单的可能就是价量，如果是资金稍大点，可能会做一个多因子分析，还有可能是做指增或者中性的，会根据指数成分股 的权重进行资金配置。但是从笔者的个人感觉来看，所谓主观量化的区分，界限并不明确，因为实际上，所谓主观投资，投资经理一样可能会需要根据各种数据 来辅助决策，所谓量化投资，相当多基金经理一样要做一些主观判断。因此，可能我们所谓的量化行业，就是数据决策部分会比人为决策部分会更多一些，当然， 这也仅仅是我一家之言，见仁见智。</p>\n<p data-pid=\"UWQlQPxt\">另外需要补充的是，量化投资的概念其实比较宽泛，因为某些做中低频策略的机构，只需要用多因子选股，然后手工下单进行资产配置即可。而另外一些中低频 的交易机构，可能会做的更多，譬如需要做程序化交易，即机器自动进行委托买卖，挂单撤单操作，笔者后文可能会更多着墨于程序化交易这个范畴。</p>\n<h2><b>量化投资分类</b></h2>\n<p data-pid=\"rXQxMXaO\">笔者对一级市场不熟悉，这里讨论仅限于笔者所了解到的部分二级市场。从笔者接触到的机构投资标的来看，相当多的机构投资都是有所偏好的，譬如有些机构就 比较喜欢投资期货，我们经常会听到什么 CTA 策略，一般都是指期货投资策略，这些策略一般都是择时策略，即选择品种买卖点，譬如海龟策略，海龟策略内 还会用到通道类策略 (唐奇安通道)，还有包括布林轨，心理线等等乱起八糟的各种策略，这些策略一般都是基于量价衍生过来的。因此，这些策略相比之下， 门槛比较低，但是 “易学难精”，在 CTA 上面，能够一年翻很多倍非常正常，毕竟有杠杆存在，但是要做到多年的稳定盈利，这样的机构必然有着过人之处。 CTA 策略还会有些包括套利 (跨期套利、期现套利)，套期保值，宏观策略等，这些是笔者对 CTA 的了解，实际还有更多内容，包括高频的做市商策略等， 这些笔者就不熟悉了，CTA 有些国际上非常知名的交易机构，譬如 JUMP、tower 等在国内做高频做的风生水起，感兴趣的读者可以自行了解。</p>\n<p data-pid=\"FhHHYqW6\">期货这个品种因为程序化交易方便 (CTP,XTP 等柜台可以自行接入)，流动性还不错，在程序化交易上来看，可能更多私募会选择它。但是，期货市场相比股票 市场，规模属实还是小了点，因此，相当于投资机构还是会投资股票市场的。股票市场的程序化接入因为涉及到合规等各方面因素，实际上程序化交易的门槛 会比期货要高。但是，因为股票交易的大众基础远高于期货交易，因此，在这个市场上，会看到相比 CTA 更为丰富的策略。一方面， CTA 的策略可以沿用到 股票市场，另外，还会有多因子策略 (期货也有多因子策略，但是数据维度上不如股票)，利用股票的财务数据、量化数据等对其进行综合判断，进行投资决策。 而且因为股票市场交易既有散户，也有公募等专业机构，不同的交易模式，会导致各种策略都有其适用范围，譬如高频策略可以纯做量价，股票 T0，T+1 高换手 策略，涨停板策略；中低频的多因子股票纯多头策略；还可以做指数增强，在指数跟踪基础上，超配或减配某些标的；中性策略，在买入一篮子股票的基础上， 买入相应的股指期货空头；还有一些很特殊的策略，譬如前两年打新很火，就可以有融券打新策略等等，不甚枚举。从笔者了解到的情况来看，策略不分好坏， 总是会有对应的周期和行情的。</p>\n<p data-pid=\"1LxhlruD\">股票、期货可能是交易门槛比较低的品种，但实际上，量化交易的范围远远不止这两样，还有期权交易，包括商品期权，股票期权，股票期权又有场内期权和 场外期权，还有国债期货，还有一些头部机构会做城投债，企业债等。当然了，当机构足够大的时候，国内金融市场可能也未必能承载得住这些机构，因为 会有机构去做港股、美股，交易的范围非常广，也因此，不同方向下都会需要不同的人才，同样是做量化的，可能交易的品种稍微一变，两边的交流都会变得 吃力起来。另外需要说明的是，做固收 (一般指交易债券等品种)，期权等品种，从行业需求来看，门槛又会比普通 CTA，股票投资要高，因为能交易这些品种 的机构，一般都是比较大型的机构，因此，除非校招进去，社招来讲，想从事相关品种交易，会比较困难，因此，如果想从事类似行业的在校学生，尽量在读书 阶段就去尝试相关的实习机会。</p>\n<h2><b>从事量化行业门槛高不高</b></h2>\n<p data-pid=\"mONB12Y5\">简单来讲，还是比较高的。这一行是业绩说话，如果没有业绩的情况下，一方面避免试错成本，另一方面，为了给投资人一个光鲜门面，对于初学者而言， 没有名校加持，很难。当然，这也不是绝对的，一些中小私募，可能对名校情结没有那么重，还有一些机构，对社招的门槛会不那么注重学校，反而会 比较注重候选人的实际投资能力，毕竟这些机构还是需要能赚钱的人来保持利润的。</p>\n<p data-pid=\"NAELM3vo\">对于公募机构而言，其实，如果不是清北的，笔者不太建议去，毕竟这些机构，对名校的情结，比其他机构都要高的多得多，至于哪些学校可以，感兴趣 的读者可以去各类基金网站看看基金经理的毕业学校就知道了。</p>\n<p data-pid=\"UL3B5z2W\">券商自营可能比较神秘，毕竟笔者也没有机会进去，只能从侧面了解到一些情况，相比私募，公募而言，其实笔者觉得券商自营可能性价比会更高一点， 当然，这也是建立在你能进入的情况下，一方面，实打实的业务部门，可以去市场上拼杀，另一方面，试错成本又没有私募那么高，一次错误就给你永久 打入冷宫，最最好的一点，可能还在于收入上，券商自营还能有底薪保证，相比其他，显得吸引力更高。</p>\n<p data-pid=\"N3WhWrxj\">除了以上这些，其实还有一类量化相关的从业者，即量化 IT 从业者，相比策略研究，投资而言，可能这一行没有那么光鲜，但是从性价比来看，IT 从业 除了收入上限没有那么高，但是收入下限也还不错。而且，量化系统开发的进入门槛，没有量化研究那么高，一些爱好者可能最开始学历不行，此时， 可以从量化系统开发，作为一个切入点，相当多的投资机构，对量化系统开发的需求都是非常高的，感兴趣的读者可以自行去一些找工作网站搜索看看。</p>\n<h2><b>量化就业收入高不高？</b></h2>\n<p data-pid=\"qwhdIo6x\">其实方差非常大，笔者了解到，某头部私募某基金经理某年拿了上亿的收入，手底下小弟都拿了几千万，当然了，他给公司创造的利润至少是五倍其收入起。 与此同时，很多私募给其员工开的工资，最低甚至只有几千，在北上广深这些大城市而言，生存非常艰难。虽然猎头讲的这行收入很高，但从笔者接触 到的有些样本看起来，正常私募给员工开的底薪在1~2W居多，一些厚道的老板会给一些 bonus cut，当然也会有很多不厚道的老板最后不兑现承诺。 也因此，在小私募，好的非常好，差的非常差。而在一些中大型私募，笔者了解到的，譬如某接近百亿的私募，普通因子研究员可以有接近 30 左右的 年收入，某千亿私募，普通量化系统开发人员，底薪在 60 左右，如果加上项目奖等各类奖金，高的有有几百个 W，低的也有上百个 W 的样子。</p>\n<p data-pid=\"Y0l8HOdB\">另外相当多从业者实在券商，银行，公募等金融系统工作的，因为公司不同，这一行的方差从笔者了解到的角度也比较大，一般中大型券商还是比较 厚道的，中后台人员工资可能在券商年报的员工平均工资水平，小型券商，有的自营部门员工，甚至底薪只有 8000，绩效只有几万，不知道是不是 小券商的常态。</p>\n<h2><b>是否可以成为一辈子的行业？</b></h2>\n<p data-pid=\"72NVpJ2E\">其中从笔者的角度而言，就是看这行卷不卷。国内目前貌似也就一些垄断行业还好，金融这一行，你说不卷，颇有点自欺欺人的感觉，当然，公司不同， 对应的卷的程度不同。市场化程度最高的私募，如果想要做的很好，除非真的确实有特别独特的思路可以赚钱，不然的话，每天一样需要不断学习， 不断琢磨新的策略，不断对老策略进行迭代升级，而做交易系统开发的话，如果公司有高频相关业务，就需要不断卷系统优化，如果公司有自己的 投研平台，就要去升级回测系统，数据清洗入库，系统运维等工作，市场化的行业，别人在进步，如果你不进步，那就是一种倒退，会被市场淘汰的。 当然了，这里笔者只是介绍一种状态，私募里面，对量化研究，投资而言，能赚钱就是最佳的衡量标准，因为这是对自己业绩负责，不是表演。 做系统开发，可能和老板有关了，有的老板花了钱，就喜欢看员工加班，那这只能自求多福，有的私募确实不错，各方面建设都很完善，那可以 做到工作生活平衡。</p>\n<p data-pid=\"nee9kg10\">对公募而言，可能投资经理压力会比较大，毕竟亏了基民的钱，有点良心的，还是会夜不能寐吧，哦，这是我猜的，真实的公募基金经理，我还没 和人家熟到那个程度。</p>\n<p data-pid=\"BXwv9yHb\">券商来说，做量化系统开发的会稍微好点，其实也和领导关系比较大，相比较而言，其实没有私募那么卷，当然了，给领导表演的成分就会多一点， 毕竟绩效还是需要领导决策的，而这一块，可比少的可怜的基本工资多多了。券商的前台业务部门，做量化投资的，可能心理压力会更多些吧， 亏了公司钱，还拿高工资，多少有点说不过去。</p>\n<p data-pid=\"NsXzOq-3\">其实说一辈子太遥远了，笔者也才工作几年，给读者们说这行可以干一辈子，那也太吹牛了。只能说，如果热爱，就真心热爱，哪怕不从事这个 方向，业务一样可以自己搞，其实门槛并没有想象的那么高，而实际回报也会在意想不到的地方回馈给自己。</p>\n<h2><b>结语</b></h2>\n<p data-pid=\"RQMHQX2e\">记得某天夜里快十二点了，我还某量化群里问到某个专业问题，有人在感叹，说，胡博，你咋这么卷呢？其实，对于热爱的东西，对于能提升自己的 东西，废寝忘食，不能称之为卷，笔者认为，对没有价值和意义的事情，去消耗生命，那才是卷，而且是浪费生命的卷。生命太短暂了， 相比于在领导面前表演自己的勤勉，享受生命中的每一分一秒，可能更好玩一些吧。</p>\n<p data-pid=\"vyDRhl4a\">笔者是物理学专业出来的，在热力学上有个第二定律，即熵增定律，万事万物都是从有序往无序发展，我们的人生一样如此，从呱呱坠地到老朽不堪， 相较于生命的这一熵增过程，不断学习，不断进步，其实是一种逆熵的过程，从某种形式上来看，其实也是一种延长我们的生命，甚至于超脱生命 的一种方式，希望与读者朋友们共勉。</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/hu-chen-69-57?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">CuriousBull</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/553758119?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：iOS 16 beta 6 开始推送、Android 13 开始推送等","date":"2022-08-16 01:04:10","description":"高德地图红绿灯倒计时功能上线，腾讯会议电话入会开始收费等。<a href=\"https://sspai.com/post/75171\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75171"},{"title":"虚幻4灯光拼多多练习12附上期点评","date":"2022-08-15 10:45:39","description":"\n<h2>在群里发起的风格化场景练习11，最后只有4位壮士做了练习。</h2>\n<p data-pid=\"CejhAdXW\"><b>太少了我淦</b></p>\n<figure data-size=\"small\"><img src=\"https://pic4.zhimg.com/v2-e8c4385d82d99bfe68f28aeb40a1ed7f_b.jpg\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"895\" data-rawheight=\"913\" class=\"origin_image zh-lightbox-thumb\" width=\"895\" data-original=\"https://pic4.zhimg.com/v2-e8c4385d82d99bfe68f28aeb40a1ed7f_r.jpg\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//space.bilibili.com/957181/channel/detail%3Fcid%3D186192%26ctype%3D0\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">哔哩哔哩 ( ゜- ゜)つロ 乾杯~ Bilibili</a><h2>投票第一的为：Kai桑</h2>\n<p data-pid=\"s1VRRO8P\"><b>恭喜Kai桑获得第11期练习第一名！奖品为100红包+社区赞助的周边礼物@大钊-UE社区经理</b></p>\n<a href=\"https://www.zhihu.com/zvideo/1383094425883680768\" data-draft-node=\"block\" data-draft-type=\"link-card\"></a><h2>以下为空闲时间写的点评：（点评以上传时间排序）</h2>\n<a href=\"https://www.zhihu.com/zvideo/1383094855623626752\" data-draft-node=\"block\" data-draft-type=\"link-card\"></a><p data-pid=\"ITu4LORg\">这个场景做的挺大的，道路比较明确，有一定规模，还做了昼夜变化，角色还能飞！可以看出作者还是比较用心。不过可能就是因为太大了，细节的处理上比较粗糙，在道路建筑跟地表的衔接上比较暴力，草地刷的也比较平均，大部分物件都是比较生硬的插在地上，每个建筑显得比较孤立，整体会比较简陋，推荐可以细化一下过度的部分，跟做静帧一样处理就行。</p>\n<a href=\"https://www.zhihu.com/zvideo/1383095253591830528\" data-draft-node=\"block\" data-draft-type=\"link-card\"></a><p data-pid=\"lFjp_zjB\">这个场景跟上面一个场景其实可以是一个互补的关系，场景很小，道路不明确，东西拼凑的比较多，一个画面上面的东西太杂乱了就容易失去中心，并且在道路不明确的情况下非常容易误导新手，比较违背新手村的这个主题，可以看看血缘刚开始的那个场景，即使是一个很昏暗荒凉的出生点，也是道路明确，主次分明。推荐梳理一下路线跟视觉中心，并且增加一些建筑或者景点，让整个新手村有主次之分。</p>\n<a href=\"https://www.zhihu.com/zvideo/1383095438719934464\" data-draft-node=\"block\" data-draft-type=\"link-card\"></a><p data-pid=\"XcI6dQh2\">这个场景其实最像一个完整的新手村视频，从建筑的分布、地形的层次、人物动作、场景特效和镜头的使用等，更符合一个新手村的视频展示，不过缺点也比较明显，这套素材看着比较简陋，模型品质跟材质颜色显得比较粗糙，让整个视频的效果差了许多，不过这也不能算作者的问题，只能说素材没有选择好吧。</p>\n<a href=\"https://www.zhihu.com/zvideo/1383096001062961152\" data-draft-node=\"block\" data-draft-type=\"link-card\"></a><p data-pid=\"D3TY6MCI\">这个场景的展示效果不错，氛围比较到位，细节也处理的不错，整体比较完善，算是一个好作品。场景跟新手村有点出入，然后切镜切的有点猛，空中的灯笼好像都是三个三个飘着的，可以改善一下，在灯光很强的地方可以考虑一下是否比较耐看，不然会显得比较简陋，可以稍微把灯光压暗一下，场景看起来似乎是实时光，暗部会比较焦，可以烘焙一下让暗部透气一些，多做一些灰阶的效果，让画面更加饱满。</p>\n<h2><b>于是我们就有了第十二期练习</b></h2>\n<p data-pid=\"tkieXmTU\">这次练习我们继续采用<b>视频录制</b>的方式提交作业，<br>使用UE5，lumen实时光。<br>做一个电影镜头，任意风格。<br>大小随意，按自身能力来做。<br>最终提交一段<b>视频</b>以及影片参考（图片格式），时间随意，展示动态场景。<br>时间就到6.15截止。</p>\n<h2>第一名奖励都是100红包+社区提供了一些周边赞助作为奖励奖给优秀者，希望大家能够好好学习！感谢官方的赞助！感谢大钊的支持~感谢金主爸爸！</h2>\n<h2>欢迎壮士们进群参加练习（看热闹）</h2>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-f4c84d67720c27b2dcdad8b48b1f48b8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"250\" data-rawheight=\"185\" class=\"content_image\" width=\"250\"></figure><figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-2ee62382303fcd05541d63fbcf6d6353_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"724\" data-rawheight=\"524\" class=\"origin_image zh-lightbox-thumb\" width=\"724\" data-original=\"https://pic4.zhimg.com/v2-2ee62382303fcd05541d63fbcf6d6353_r.jpg\"></figure><br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/RiTian?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">日天</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/377044268?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价 Unreal Engine 5 Early-Access?","date":"2022-08-15 10:44:23","description":"\n<h2><b>粗略测试了一下lumen，效果还行，不过问题比较多，估计不好用进项目，只能期待后续改善。</b></h2>\n<p data-pid=\"P4Bv3bsV\"><b>结论：速度较快，整体效果稳，噪点中等，直射光点光效果较好，天光一般，自发光效果较差，并且自发光受限于屏幕空间，植被效果差，抗锯齿效果不错，半透材质透光不支持，体积雾效果受间接光照影响较大，跟烘焙还有pathtracing有较大差距。</b></p>\n<p data-pid=\"RppvU2ff\"><b>整体来说爽了一发然后进入贤者时间，期待dlc。</b></p>\n<p data-pid=\"8Z5ojF3F\">1.植被透光效果不行，不过抗锯齿好很多。</p>\n<p data-pid=\"CxvQthDc\">2.墙体薄的时候会漏光，需要增加墙体厚度，具体厚度目前还没有测试出来，有时候1m，有时候0.2m</p>\n<a href=\"https://www.zhihu.com/zvideo/1381330238731849728\">虚幻5lumen光照测试</a><p data-pid=\"04wCZv7-\">3.项目设置中的距离场体素密度对漏光影响挺大。</p>\n<p><img src=\"https://pica.zhimg.com/v2-78aa266945316de9afeae6e829b089be_720w.gif?source=b1748391?rss\" data-rawwidth=\"3851\" data-rawheight=\"2125\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-78aa266945316de9afeae6e829b089be\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Srd_eLoX\">4.近处基于屏幕空间，容易丢失屏幕外的gi，特别是自发光物体。</p>\n<p data-pid=\"sJMJzwEX\">5.在软光追为全局追踪的时候某些场景会出现黑影。</p>\n<a href=\"https://www.zhihu.com/zvideo/1381331437577203713\">虚幻5lumen光照测试</a><p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-8229fcd9aa891fb7f424b6a31c8b2a22_720w.jpg?source=b1748391?rss\" data-rawwidth=\"475\" data-rawheight=\"88\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-8229fcd9aa891fb7f424b6a31c8b2a22\" data-watermark-src=\"v2-3ca0f23ff510805f95fd61dbe23868cf\" data-private-watermark-src=\"v2-25ee6fe42db72824d8d97a9878c780cf\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-2b55d6f5161954c2e114a30d182b762d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"2719\" data-rawheight=\"1825\" data-size=\"small\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-2b55d6f5161954c2e114a30d182b762d\" data-watermark-src=\"v2-4ee57b045f821ebab6363c8a6410d490\" data-private-watermark-src=\"v2-838a1a0acac00a7dc9594d254f512277\"></p>\n<p data-pid=\"B0i1SjT2\">6.post中的设置可以减少噪点，到10以上看不出什么区别。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-5255111e219f3df76f483ed17b275ead_720w.jpg?source=b1748391?rss\" data-rawwidth=\"453\" data-rawheight=\"183\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-5255111e219f3df76f483ed17b275ead\" data-watermark-src=\"v2-ba31394cd4c142da83917f0582e1eaf4\" data-private-watermark-src=\"v2-d6f6649039f80761552ca8814572b661\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-2bce6099c573a9e08c7b51c53bd314d3_720w.gif?source=b1748391?rss\" data-rawwidth=\"1604\" data-rawheight=\"1466\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-2bce6099c573a9e08c7b51c53bd314d3\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"V7Y5KCOe\">7.体积雾受间接光照强度影响较多</p>\n<a href=\"https://www.zhihu.com/zvideo/1381333656770940928\">虚幻5lumen光照测试</a><p data-pid=\"jXh-11E_\">8.跟pt效果差别挺大</p>\n<p><img src=\"https://picx.zhimg.com/v2-a609ffb5817824d8ea909f4d54298b61_720w.gif?source=b1748391?rss\" data-rawwidth=\"1926\" data-rawheight=\"1063\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-a609ffb5817824d8ea909f4d54298b61\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"ERwTACNA\">9.自发光照明在lumen下受屏幕空间影响较大</p>\n<p><img src=\"https://picx.zhimg.com/v2-4a27f417be3223437cfe0d4564f42ee1_720w.gif?source=b1748391?rss\" data-rawwidth=\"3851\" data-rawheight=\"2125\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-4a27f417be3223437cfe0d4564f42ee1\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"qSlU3jdz\">10.半透彩色玻璃不能透彩色光，但是方向光效果不错。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-2f5bd32ce32d01fc456bdff7fe0bd02d_720w.gif?source=b1748391?rss\" data-rawwidth=\"1926\" data-rawheight=\"1063\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-2f5bd32ce32d01fc456bdff7fe0bd02d\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"JcITqhVZ\">11.天光也还凑合。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-013663a6e7a21c8bf3fafd764b053fa0_720w.gif?source=b1748391?rss\" data-rawwidth=\"3851\" data-rawheight=\"2125\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-013663a6e7a21c8bf3fafd764b053fa0\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/RiTian?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">日天</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/461580449/answer/1909345506?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">17 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/529228745?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">Unreal Engine5零基础好入门吗？</a><br><a href=\"http://www.zhihu.com/question/537447087?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">虚幻（unreal engine 5）引擎中，商城中的素材能用于商业吗？</a><br>\n","link":"http://www.zhihu.com/question/461580449/answer/1909345506?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"从《Stray》拆解游戏关卡设计和美术（一）","date":"2022-08-15 10:16:25","description":"\n<h3>前言</h3>\n<p data-pid=\"DI62wQlQ\">近日新出的第三喵称猫咪模拟器《Stray》强烈建议喜欢线性关卡设计和游戏环境美术的朋友去体验，这款游戏的关卡设计属于是非常规矩的教科书，而其最大卖点关卡美术环境则更是亮眼。</p>\n<p data-pid=\"HXM2NHdJ\">本文章会按照游戏关卡的线性流程，将一些RPG游戏关卡设计包括一些零散的美术知识的个人见解和分析融入到体验过程中进行逆推。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-4a235d6bd1ff9ad33dc46a2f7a3dbb48_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-4a235d6bd1ff9ad33dc46a2f7a3dbb48_r.jpg\"></figure><p data-pid=\"MpdDZ9LE\">无论从哪种层面上来讲，游戏关卡的设计和美术都是不可分割的，作为第三人称的角色扮演游戏，其关卡很大程度上与画面的构成息息相关。</p>\n<p data-pid=\"PE3Gog08\">在众多游戏工作室中，既有关卡策划拥有更高的决策权的工作室，也有由关卡美术作为关卡的主力开发人员的公司，平衡设计-美术的权重极为重要。</p>\n<h2>序章</h2>\n<h3>世界观基调</h3>\n<p data-pid=\"9fgtu6nD\">游戏的第一眼极为重要。</p>\n<p data-pid=\"wQY1IBa1\">很多游戏在开始界面玩家就已经在一定程度上感受到游戏的整体氛围，比如《最后的生还者》就在开始界面下足了功夫，为整个游戏的美术定下了一个基调，甚至是为整个故事内容都隐喻在登录画面中：即末日但却有一丝生机，人性泯灭却有一丝希望。（此处不展开）</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-d120db9b0bf9f9eed0dde1057ca04f5a_b.jpg\" data-size=\"normal\" data-rawwidth=\"1300\" data-rawheight=\"363\" class=\"origin_image zh-lightbox-thumb\" width=\"1300\" data-original=\"https://pic3.zhimg.com/v2-d120db9b0bf9f9eed0dde1057ca04f5a_r.jpg\"><figcaption>两者的开始界面都极为简练</figcaption></figure><p data-pid=\"kvTRoNUj\">《Stray》同样是使用了类似的克制设计，在登陆界面展现极为有限的东西：游戏标题，选项和一只猫。但是却通过画面表现了阴霾下的神秘和一丝惊悚。虽然还未通关，但是故事内容肯定是八九不离十了。</p>\n<p data-pid=\"unezv2fI\">开始游戏正逢风雨交加的雨夜，有时一道闪电点亮洞穴内，再次奠定了游戏的氛围；而与之相对的，是猫咪带来的一种温顺，机敏的生机感，大胆预测主角会为这个压抑的故事带来温暖。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-307853bf9b72df8abcc4b4759bf09fc7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1030\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-307853bf9b72df8abcc4b4759bf09fc7_r.jpg\"></figure><h3>灰度与空间感</h3>\n<p data-pid=\"sTSDqk1G\">把握好灰度是增加画面纵深感的关键，而纵深感又是3D游戏的关键，写实的关卡环境如果画面很平，没有深度差的话，会很影响画面的真实感和玩家的体验，玩家会对所处环境感到失真并且难以很好地辨别物体的距离。</p>\n<p data-pid=\"BEINqn9k\">3D游戏美术师没办法确保玩家在每个画面情况下都有完美的美术体验，但是可以在关键的画面去设置关键镜头，保证在大多数引导下玩家的画面都是符合美术要求的。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-4e20684cf49d541e8e4a69fa0e51fa4d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1395\" data-rawheight=\"580\" class=\"origin_image zh-lightbox-thumb\" width=\"1395\" data-original=\"https://pic2.zhimg.com/v2-4e20684cf49d541e8e4a69fa0e51fa4d_r.jpg\"></figure><p data-pid=\"H81cWUr5\">当我们的关卡有了足够的空间感，那么我们的移动就变得有意义，我们了解我们位置关系。</p>\n<p data-pid=\"AGWxZiXe\">另一方面，三只伙伴AI猫咪的远近关系是有意义的。当所有物体的距离是一致的时候，玩家前往任何方向的动力都是均衡的，因为空间没有对比，任何方向都一样，<b>当玩家的选择没有任何区别时，其实本质上就是一种没有选择。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-c5c50faa315a3cd851b66da1ad017cc7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"753\" data-rawheight=\"382\" class=\"origin_image zh-lightbox-thumb\" width=\"753\" data-original=\"https://pic4.zhimg.com/v2-c5c50faa315a3cd851b66da1ad017cc7_r.jpg\"></figure><p data-pid=\"kkwd8e9S\">游戏中大量地采用了近暗远明，近明远暗，左明右暗，左暗右明的具有差异性的画面表现纵深和层次关系，这点后面会反复提及，但不会再专门作独立的小节。</p>\n<p data-pid=\"vjx_W5mH\">灰度重要表现的另一个点是，这三只伙伴AI小猫的肤色，是呈距离按灰度分布的，这有利于保证玩家的接触顺序。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-b981ee7c66e32c34d81ad2e4e9d28421_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1176\" data-rawheight=\"620\" class=\"origin_image zh-lightbox-thumb\" width=\"1176\" data-original=\"https://pic2.zhimg.com/v2-b981ee7c66e32c34d81ad2e4e9d28421_r.jpg\"></figure><h3>第一次接触</h3>\n<p data-pid=\"caMoqx2e\">当玩家第一次接触，进入游戏之后，他们会开始一段学习过程，逐渐学习与角色、世界的互动模式。不仅仅在序章，有的游戏在整个游戏中都在贯彻学习的行为，比如《双人成行》。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-d42e9730c5445e71dc156c92352ce5a4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-d42e9730c5445e71dc156c92352ce5a4_r.jpg\"></figure><p data-pid=\"Kn0wiMme\">游戏尽可能地减少HUD的出现和提示，降低UI的存在感，以增加电影化的体验和沉浸式叙事。</p>\n<p data-pid=\"knz6wR12\">在游戏开始阶段完全没有任何基础移动和视角操作的提示教学，也许在现如今大量的游戏培养玩家过后，在用户人机交互的基础机制上，开发者愿意相信玩家的游戏习惯。</p>\n<p data-pid=\"ZnuQ6BXC\">玩家凭借以往的先学经验，开始掌握视角转动以及移动，三只猫身上有淡淡的圆圈型引导UI，当玩家靠近时会出现按键Q的提示。</p>\n<p data-pid=\"jCAirs0m\"><b>第一次接触很重要，游戏需要告诉玩家，他们能够执行哪些交互行为，并为玩家提供直观的输入按键。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-1da652635a564d2403f624fba6156856_b.jpg\" data-size=\"normal\" data-rawwidth=\"744\" data-rawheight=\"432\" class=\"origin_image zh-lightbox-thumb\" width=\"744\" data-original=\"https://pic3.zhimg.com/v2-1da652635a564d2403f624fba6156856_r.jpg\"><figcaption>游戏告诉玩家，他们能够执行哪些交互行为，并为玩家提供直观的输入按键</figcaption></figure><p data-pid=\"hzwbN351\">再次告诉玩家这个交互行为的生效条件，必须在可交互的物体（猫）或者环境（纸板）边上，并且按下Q。</p>\n<p data-pid=\"bQpWKmt_\">《交互式叙事》中说到，交互设计需要”动词式思考“，游戏作为传达媒介的一大优点即是，它具有”动作性“，即玩家需要通过”动作“来与游戏产生互动。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-506136f3c0cb299f2182a5cb6b3c47cc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1001\" data-rawheight=\"488\" class=\"origin_image zh-lightbox-thumb\" width=\"1001\" data-original=\"https://pic1.zhimg.com/v2-506136f3c0cb299f2182a5cb6b3c47cc_r.jpg\"></figure><p data-pid=\"OrkX-FOp\">第一次接触之后，应该紧跟“反复练习”，这点我们后面会作为小节单独提到。</p>\n<h2>第一章-墙内</h2>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-62877456bcda14502851607c2dc88559_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1030\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-62877456bcda14502851607c2dc88559_r.jpg\"></figure><h3>情景设定</h3>\n<p data-pid=\"phkRZJr9\">情境可能是大部分人提到关卡最容易注意到的东西，人类天生就喜欢听故事，无论是听取还是讲述，也同样会喜欢那些<b>有故事潜力的场景</b>。</p>\n<p data-pid=\"pdDq-MW0\">大大的关卡标题占据整个屏幕，“墙内”是为何意？郁郁葱葱的植被，覆盖在高墙和管道之间，赋予了这个关卡环境丰富的故事潜力。这点虽然在这里随手带过，但却与后文很多内容息息相关。</p>\n<h3>关卡边界</h3>\n<p data-pid=\"HYaiIf85\">游戏是基于舞台的，可以是棋盘、网球场，对于游戏舞台来说，则一定要有<b>边界</b>。</p>\n<p data-pid=\"Mie5TI-3\">边界将”游戏之内“和“游戏之外”划清界限，超出边界则不再是游戏，这是玩家和设计师之间的基本共识，即<b>”所有玩家的目标、手段，都由设计师提供，且被局限于边界之内“</b>。</p>\n<p data-pid=\"e6h5oZmP\">在序章关卡中，玩家走到边界就不能在走，所有的游戏可能性都发生在边界之内的空间。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-8d4117d3337cc7745954764768048f21_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1822\" data-rawheight=\"923\" class=\"origin_image zh-lightbox-thumb\" width=\"1822\" data-original=\"https://pic2.zhimg.com/v2-8d4117d3337cc7745954764768048f21_r.jpg\"></figure><p data-pid=\"mYdtPeR9\">而游戏的”可能性空间“囊括了所有游戏可能性，包括玩家所有的行动、道具、策略、选择等等，还包含了玩家失败的可能性，所有会阻挡玩家的威胁。当玩家明确边界，并只能在可能性空间之内，选择和策略也会有不同。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-ab30a68dc05ea3d5848fb3de9080dd88_b.jpg\" data-size=\"normal\" data-rawwidth=\"1822\" data-rawheight=\"968\" class=\"origin_image zh-lightbox-thumb\" width=\"1822\" data-original=\"https://pic1.zhimg.com/v2-ab30a68dc05ea3d5848fb3de9080dd88_r.jpg\"><figcaption>实际上的关卡范围</figcaption></figure><p data-pid=\"FFrxqcf3\">在第一章，“墙”这个关卡元素，将通过视觉尺度清晰地告知玩家，关卡的边界。</p>\n<h3>尺度</h3>\n<p data-pid=\"UCZ-izju\">物体的尺度会影响玩家对于其作用的判断，高耸的墙的视觉语言告诉玩家，它是无法跨越的障碍，限定了关卡的可能性空间。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-443363ec489518fb30cc90ab38fcad59_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1823\" data-rawheight=\"963\" class=\"origin_image zh-lightbox-thumb\" width=\"1823\" data-original=\"https://pic2.zhimg.com/v2-443363ec489518fb30cc90ab38fcad59_r.jpg\"></figure><p data-pid=\"1UDAFM7j\">深度也是尺度的一种，在写实游戏中，多高的墙无法翻越，多深的底会摔死，都对这个游戏体验是否失真有着很重要的意义。比例尺不仅对于游戏性很重要，对于游戏世界的真实性也同样重要，当一个物体超出认知的比例时，游戏的真实感就会大打折扣。</p>\n<p data-pid=\"YHPnMhBq\">而在《Stray》这类以跳跃玩法为核心机制的游戏中，尺度的作用则更加显著。</p>\n<h3>利用环境教学</h3>\n<p data-pid=\"_ORP20Gc\">”关卡“以”环境“为教具，为玩家传授游戏的交互机制和策略。</p>\n<p data-pid=\"HpSvGSTu\">”墙内“关卡通过管道和阶梯等<b>功能与阻碍</b>，教授玩家跳跃的机制。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-a0bf3e94a6726f978d95ac29287a8e1d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1667\" data-rawheight=\"917\" class=\"origin_image zh-lightbox-thumb\" width=\"1667\" data-original=\"https://pic2.zhimg.com/v2-a0bf3e94a6726f978d95ac29287a8e1d_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-a37043c10d025d3782a938356a01697a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1030\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic3.zhimg.com/v2-a37043c10d025d3782a938356a01697a_r.jpg\"></figure><p data-pid=\"1U7MV5n4\">很快玩家会凭借直觉学习移动的方式，辨别出能够踩上或者进入的物体，掌握跳跃之后，会开始学会辨认哪些物体够矮，哪些太高跳不上去，这时候尺度的重要性就体现出来了。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-0592813b405b4ee0a9ccd95ef1e22d8c_b.jpg\" data-size=\"normal\" data-rawwidth=\"1687\" data-rawheight=\"899\" class=\"origin_image zh-lightbox-thumb\" width=\"1687\" data-original=\"https://pic1.zhimg.com/v2-0592813b405b4ee0a9ccd95ef1e22d8c_r.jpg\"><figcaption>没有造成影响的交互行为</figcaption></figure><p data-pid=\"5YCy4kkq\">通过环境的积水让玩家学习与环境进行交互也是同样的道理。但个人觉得不好的点是，游戏中会出现没有产生结果的交互机制，比如喝水，和一开始无意义的猫叫教学。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-4b3de87c89d04240d11a068cd49b108d_b.jpg\" data-size=\"normal\" data-rawwidth=\"1599\" data-rawheight=\"852\" class=\"origin_image zh-lightbox-thumb\" width=\"1599\" data-original=\"https://pic2.zhimg.com/v2-4b3de87c89d04240d11a068cd49b108d_r.jpg\"><figcaption>无意义的喵叫</figcaption></figure><p data-pid=\"Z5ltgxpS\">玩家应该借助”机制“来进行交互，并产生最终的<b>结果</b>。没有影响的交互，认为可能是为了降低游戏的目的性，将其游戏的节奏在此放缓，能够更加轻松地以一种嬉戏的态度进行游戏体验。</p>\n<h3>功能与阻碍</h3>\n<p data-pid=\"0dQDJ1qS\">”功能“是可以与之互动的环境，可以进入的空间，可以坐上、或者用作掩护的物体，阻挡敌人的行动、视野的障碍，可以爬上走上用作地基的地面，还有可以搜集的场景资源等等游戏中的事物。</p>\n<p data-pid=\"sPWbWgTs\">有些次要环境也是功能，比如上一节的水管，最重要的一点是，<b>功能必须被展示给玩家。</b>为此，游戏经常会提供机制锁，迫使玩家了解功能的用法。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-d395a4495b263b10408131be68d9b8b1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"386\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-d395a4495b263b10408131be68d9b8b1_r.jpg\"></figure><p data-pid=\"-sz-PWgT\">阻碍则是功能的反义词，那些会妨碍你的功能，比如阻挡道路的物体，挡住你的视线，限制你的策略和能力的物体，甚至帮助、保护你的敌人，这一块断掉的道路。</p>\n<p data-pid=\"5UxwrG9Q\">这两种情况其实是比较主观的，比如台阶，某种程度上它阻碍了你的前进，但你仍然可以通过行动去利用它更上一层。且功能和阻碍并不是一个固定的，而是动态的，一些阻碍可以在特定情况成为功能，比如《马里奥》里可以借助敌人跳跃到另一个平台上。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-f9a68e8eee8115aed9297e3d05155b80_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"354\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-f9a68e8eee8115aed9297e3d05155b80_r.jpg\"></figure><h3>反复练习</h3>\n<p data-pid=\"rDK_H7G-\">尽管很多游戏基本要素方面是共通的，大部分游戏细节方面还是有所不同，玩家仍然需要花一点时间才能刻进直觉中。</p>\n<p data-pid=\"t-Po7e_T\">玩家需要花费一些时间练习，才能完全掌握这些动词，尽管我们现实生活中可能对于”跳跃“这个动作很熟悉，但是要将其与特定的“空格键”操作绑定，仍然是非自然的，需要学习的。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-ab718a0173cf98548d5df58d51d366db_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1599\" data-rawheight=\"773\" class=\"origin_image zh-lightbox-thumb\" width=\"1599\" data-original=\"https://pic4.zhimg.com/v2-ab718a0173cf98548d5df58d51d366db_r.jpg\"></figure><p data-pid=\"pD1P3DDy\">当然玩家可能在其他游戏中也进行过类似的操作，跳跃过，但是每部游戏在具体的时机、高度、前摇等细节处仍有不同；不同的游戏可能还有不同的派生，比如跳跃攻击或者二段跳。</p>\n<p data-pid=\"iHEu-dcC\">在核心机制，比如移动和跳跃方式上，需要反复的练习将其变成为玩家的直觉操作。</p>\n<p data-pid=\"PSYnJl4s\">同样在游戏序章的部分，对于Q按键与环境的交互，也在短时间内经历了三次的反复的练习，<b>在玩家刚刚学会与世界进行互动的时候，让他多尝试几次！</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-4e606e2c0d33e6b54f17470376763de7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1132\" data-rawheight=\"630\" class=\"origin_image zh-lightbox-thumb\" width=\"1132\" data-original=\"https://pic4.zhimg.com/v2-4e606e2c0d33e6b54f17470376763de7_r.jpg\"></figure><h3>模糊与信息</h3>\n<p data-pid=\"L1uqtp2M\">模糊很重要，玩家不知道边界具体在哪，他们无法立刻知道解法，或者谜题，甚至接下来的挑战是什么。边界创造玩家的<b>“不可能性空间”</b>，而模糊则创造了<b>“可能性空间”。</b></p>\n<p data-pid=\"SnFCgwHp\">玩家如果没有走到墙边，不会有明确的感知边界的具体位置，但却能够在潜意识里被其影响知道靠近没有意义。这点对于关卡来说很重要，玩家不花费时间和精力去违反设计师的意图，也不会因此感到沮丧。</p>\n<p data-pid=\"wODnAWbr\">而模糊在美术中可以具象化为信息，对于看不清的地方，没有很好的信息识别能力的地方，拥有更多的可能性空间，更加吸引玩家前往。之前提到的近暗远明，和近明远暗都是采用了类似的思路。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-68d9f602de0f5600c3b6027af84bd9ff_b.jpg\" data-size=\"normal\" data-rawwidth=\"1811\" data-rawheight=\"992\" class=\"origin_image zh-lightbox-thumb\" width=\"1811\" data-original=\"https://pic4.zhimg.com/v2-68d9f602de0f5600c3b6027af84bd9ff_r.jpg\"><figcaption>近明远暗</figcaption></figure><h3>“屏风”与“狭管”</h3>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-3596046aa26e7661c0b62c2bc2ee2b2a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1786\" data-rawheight=\"958\" class=\"origin_image zh-lightbox-thumb\" width=\"1786\" data-original=\"https://pic3.zhimg.com/v2-3596046aa26e7661c0b62c2bc2ee2b2a_r.jpg\"></figure><blockquote data-pid=\"ltTP0zlP\">屏风，中国传统建筑物内部挡风用的一种<a href=\"https://link.zhihu.com/?target=https%3A//baike.baidu.com/item/%25E5%25AE%25B6%25E5%2585%25B7/860960\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">家具</a>，所谓“屏其风也”。屏风作为<a href=\"https://link.zhihu.com/?target=https%3A//baike.baidu.com/item/%25E4%25BC%25A0%25E7%25BB%259F%25E5%25AE%25B6%25E5%2585%25B7/714890\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">传统家具</a>的重要组成部分，历史由来已久。屏风一般陈设于室内的显著位置，起到分隔、美化、挡风、协调等作用。</blockquote>\n<p data-pid=\"vj_XTOcJ\">在设计和美术上来看，“屏风”的作用在于让玩家长期的视觉体验进行变化，一直以来相同的开阔场景难免玩家会感到视觉疲劳。通过一些阻隔，或是通过狭小的区域将玩家的视野变得狭窄，再迎来一个开阔视野的<b>Key Scene</b>，给关卡视觉带来新的震撼，同时也将节奏打断，通过一段较为平和的节奏，再迎来新的小节，已经是一种形成方法论的关卡设计方法了。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-b8fab6848e383cacdf2c5da6c8ac9763_b.jpg\" data-size=\"normal\" data-rawwidth=\"1298\" data-rawheight=\"353\" class=\"origin_image zh-lightbox-thumb\" width=\"1298\" data-original=\"https://pic4.zhimg.com/v2-b8fab6848e383cacdf2c5da6c8ac9763_r.jpg\"><figcaption>穿过小洞，迎来Key Scene</figcaption></figure><p data-pid=\"edOh9qJ4\">而在游戏《SIFU》中，工业区（贫民窟）地图使用了典型的方案，且对于游戏节奏的调整动作游戏中有着更显著的感知。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-a9376b5aae7805973bbf750d9ba9bbce_b.jpg\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic3.zhimg.com/v2-a9376b5aae7805973bbf750d9ba9bbce_r.jpg\"><figcaption>《SIFU》</figcaption></figure><p data-pid=\"wrPiG5Gb\">在技术上来看，这是一种常用的进行关卡优化的方式，过于深远的可视范围，让GPU和内存压力巨大，尽可能地使用高低起伏来打造视野区隔是一个长久的关卡美术命题。在开放世界游戏，一座阻隔视野的山越高，登上去之后可视范围就越大，是有舍有得的。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-b4fd66c27305d57cf4b4543464b5d80d_b.jpg\" data-size=\"normal\" data-rawwidth=\"1783\" data-rawheight=\"970\" class=\"origin_image zh-lightbox-thumb\" width=\"1783\" data-original=\"https://pic2.zhimg.com/v2-b4fd66c27305d57cf4b4543464b5d80d_r.jpg\"><figcaption>为了这个Key Scene甚至新增了一个交互行为——观察</figcaption></figure><p data-pid=\"0MOmZVYT\">而在线性关卡中，可以使用如此简单粗暴的方式，在迎来一个视野开阔或是内容丰富的关卡之前，利用一段狭长的通道，来清理之前的缓存，同时起到调整游戏节奏的功效。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-d4af070b16f9fd15a08e166589f48416_b.jpg\" data-size=\"normal\" data-rawwidth=\"1291\" data-rawheight=\"350\" class=\"origin_image zh-lightbox-thumb\" width=\"1291\" data-original=\"https://pic3.zhimg.com/v2-d4af070b16f9fd15a08e166589f48416_r.jpg\"><figcaption>《黑神话：悟空》实机演示中也有同样的设计</figcaption></figure><h3>利用明暗创造焦点</h3>\n<p data-pid=\"V4vDbnys\">即使整体画面很复杂，令人眼花缭乱，灯光（明暗关系）依旧能够重新整顿画面，利用灯光自然地引导玩家将视线集中在画面重要的部分。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-3f133f81527d14af7ba9d94b73b0c3bb_b.jpg\" data-size=\"normal\" data-rawwidth=\"1709\" data-rawheight=\"949\" class=\"origin_image zh-lightbox-thumb\" width=\"1709\" data-original=\"https://pic4.zhimg.com/v2-3f133f81527d14af7ba9d94b73b0c3bb_r.jpg\"><figcaption>利用光束进行视觉引导</figcaption></figure><p data-pid=\"0plaIeW1\">沿着光束放向往下看，光斑洒在的地方，观众往往会将目光放在明暗差异最大的部分，即这幅图的光斑处。可以看到我们的伙伴AI已经在等待你的到来了。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-d4a28992b774f23f0a042a4a35f167c5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1634\" data-rawheight=\"882\" class=\"origin_image zh-lightbox-thumb\" width=\"1634\" data-original=\"https://pic2.zhimg.com/v2-d4a28992b774f23f0a042a4a35f167c5_r.jpg\"></figure><p data-pid=\"mT0nYUSw\">光斑的强曝光洒在管道上将画面<b>戏剧化</b>，那么接下来的游戏内容也会变得充满<b>戏剧化</b>。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-d07ac9b3f74007b5a8ebb7717d71600e_b.jpg\" data-size=\"normal\" data-rawwidth=\"1448\" data-rawheight=\"262\" class=\"origin_image zh-lightbox-thumb\" width=\"1448\" data-original=\"https://pic3.zhimg.com/v2-d07ac9b3f74007b5a8ebb7717d71600e_r.jpg\"><figcaption>冲突来临，猫猫失足掉落</figcaption></figure><h2>第二章-死城</h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-526bc68efac9673db6ed10bef2883b36_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1030\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic3.zhimg.com/v2-526bc68efac9673db6ed10bef2883b36_r.jpg\"></figure><h3>重复结构</h3>\n<p data-pid=\"LwdzoC01\">通过不断反复的结构，可以打造画面的节奏感，从而打造纵深与引导。</p>\n<p data-pid=\"M4jINVVs\">人们擅长去寻找事物的规律，这是人类掌握真理的方式，所以通过反复的结构去进行引导，玩家会将其归类到自我学习的过程中，而并非是得到提示，这将会给玩家更大的成就感。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-969108a357c088761b50735608cacc0e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1801\" data-rawheight=\"936\" class=\"origin_image zh-lightbox-thumb\" width=\"1801\" data-original=\"https://pic3.zhimg.com/v2-969108a357c088761b50735608cacc0e_r.jpg\"></figure><p data-pid=\"P3zHiKDh\">画面结构或者元素的重复不仅有着极为难以感知地引导性，并且还可以将杂乱的环境变得有据可循，让一些繁杂画面重新变得清晰。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-8b7cd26576aeb687fc593b65fa07f67a_b.jpg\" data-size=\"normal\" data-rawwidth=\"2000\" data-rawheight=\"1125\" class=\"origin_image zh-lightbox-thumb\" width=\"2000\" data-original=\"https://pic3.zhimg.com/v2-8b7cd26576aeb687fc593b65fa07f67a_r.jpg\"><figcaption>《泰坦陨落2》</figcaption></figure><h3>视觉象征</h3>\n<p data-pid=\"34r-c6zX\">不同的画面构成，更加具体地说是不同的形状，都会给观众带来不同的感受。形状是很利于联想的，即使玩家并没有发觉，但他们的潜意识进行了联想。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-bd7024d4da029490d530cfb25d025a3e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1212\" data-rawheight=\"668\" class=\"origin_image zh-lightbox-thumb\" width=\"1212\" data-original=\"https://pic3.zhimg.com/v2-bd7024d4da029490d530cfb25d025a3e_r.jpg\"></figure><p data-pid=\"SWP1Z-K_\">当玩家进入”死城“关卡时，第一幕就是这个画面，甚至是在关卡标题“死城”出现之前。直接的视觉象征就已经为这一关卡的叙事和氛围做了铺垫。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-872a51fe23ff365fc030abe5dded56a2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"382\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic3.zhimg.com/v2-872a51fe23ff365fc030abe5dded56a2_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-528f1f3326afc3a034e929bc10eaf370_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"299\" data-rawheight=\"168\" class=\"content_image\" width=\"299\"></figure><h3>空间的力场</h3>\n<p data-pid=\"SfRHvdqf\">从建筑师角度来说，当我们观察空间时，空间有两种构成元素：虚Void 与 实Mass；虚是空洞的、易于获取信息的，而实是实体的、会阻挡信息的；</p>\n<p data-pid=\"QMA9hgBv\">虚实又在空间中形成“正形空间”和“负形空间”，正负形空间相辅相成，单独存在没有意义，互相定义，赋予意义。</p>\n<p data-pid=\"H9ME40bz\"><b>正形空间具有形状，负形空间则具有形状的边界。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-48161f313bc1cc01e646346320005c30_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1030\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-48161f313bc1cc01e646346320005c30_r.jpg\"></figure><p data-pid=\"xV2mWkj6\">这是从第三喵称视角看到的死城关卡最初的空间，我们为了方便理解，可以切换到俯视角进行观测。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-35ad46eeb76764f0eb5a91775098c124_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"942\" data-rawheight=\"687\" class=\"origin_image zh-lightbox-thumb\" width=\"942\" data-original=\"https://pic1.zhimg.com/v2-35ad46eeb76764f0eb5a91775098c124_r.jpg\"></figure><p data-pid=\"gP9N8vE8\">当我们在空间中放置物体（Mass），物体会和其他实，比如边界，产生力场，会意识到这些图形都是呈现出一种空间的正形感受，甚至在感官上给人一种“这些图形其实连在一起”的既视感。</p>\n<p data-pid=\"HR6Ry_ng\">这非常主观，就像电场一样，但这恰恰是我们日常生活中观测物体的方式；而玩家就像一个铁球，受到空间力场的影响。而灯光或者其他视觉上制造焦点的方式，会让一些物体的力场加大，力场则又分为斥力与引力。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-452eaab475da7ee0896a94bbf773a8c0_b.jpg\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"562\" class=\"origin_image zh-lightbox-thumb\" width=\"800\" data-original=\"https://pic1.zhimg.com/v2-452eaab475da7ee0896a94bbf773a8c0_r.jpg\"><figcaption>空间力场图</figcaption></figure><figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-7f3dd05fdbad77c6e9303fa4dab1bb17_b.jpg\" data-size=\"normal\" data-rawwidth=\"1510\" data-rawheight=\"958\" class=\"origin_image zh-lightbox-thumb\" width=\"1510\" data-original=\"https://pic4.zhimg.com/v2-7f3dd05fdbad77c6e9303fa4dab1bb17_r.jpg\"><figcaption>更大的吸引力场</figcaption></figure><h3>斥力与引力</h3>\n<p data-pid=\"Cz6aGWXx\">简单来说，在这个场景中的实体是不可以穿越的，会释放出斥力，而负形空间则会释放出引力，可以看到在这个封闭关卡的左下角和右下角的负形空间极具吸引力。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-59677cf7066ecfa0c29349080973ab6f_b.jpg\" data-size=\"normal\" data-rawwidth=\"862\" data-rawheight=\"539\" class=\"origin_image zh-lightbox-thumb\" width=\"862\" data-original=\"https://pic4.zhimg.com/v2-59677cf7066ecfa0c29349080973ab6f_r.jpg\"><figcaption>红色是推力，绿色是玩家的移动趋向</figcaption></figure><p data-pid=\"hx2j3hBy\">玩家在靠近墙或者物体时，会进入物体的场。虽然玩家是自由移动的，但你会发现<b>玩家的行进路线会倾向于和这些磁场形成对齐关系。</b></p>\n<h3><b>利用空间影响行为</b></h3>\n<p data-pid=\"D_Q-3VUD\">根据空间的场力可以影响玩家的移动趋向，那么我们就可以以此尽可能地去操控玩家的行为模式。</p>\n<p data-pid=\"iZTmtGsb\">依然是这个空间，在这个空间中，你可以像正形空间一样分辨出自己是否<b>“处于这个空间之内”</b>，而这种分辨的特质，就代表了空间的正形性。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-3b88858f9a259cf9226a45631cb2ec37_b.jpg\" data-size=\"normal\" data-rawwidth=\"904\" data-rawheight=\"566\" class=\"origin_image zh-lightbox-thumb\" width=\"904\" data-original=\"https://pic4.zhimg.com/v2-3b88858f9a259cf9226a45631cb2ec37_r.jpg\"><figcaption>玩家可以很明确的感知到自己所处的空间范围</figcaption></figure><p data-pid=\"WRLnuDBd\">在正形空间中，物体拥有更多的个性，玩家更愿意靠近与其互动。另外，<b>玩家会更倾向于在正形空间徘徊</b>，它具有家的边界和安全感。</p>\n<p data-pid=\"g7NvcIZJ\">所以当我们想要玩家仔细观察一个区域，将这个区域的空间内部感加强，并非一定是室内，而是<b>边界感</b>。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-5bea7aea5e5c9f008ac2a34657e153a1_b.jpg\" data-size=\"normal\" data-rawwidth=\"1700\" data-rawheight=\"989\" class=\"origin_image zh-lightbox-thumb\" width=\"1700\" data-original=\"https://pic2.zhimg.com/v2-5bea7aea5e5c9f008ac2a34657e153a1_r.jpg\"><figcaption>包围的室内空间解谜关卡</figcaption></figure><p data-pid=\"k1nPQPo7\">反之在边界不明确的负形空间，玩家倾向与动起来，移动、离开这片区域。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-8a80096c7f839973184b971c0a10888e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1786\" data-rawheight=\"889\" class=\"origin_image zh-lightbox-thumb\" width=\"1786\" data-original=\"https://pic3.zhimg.com/v2-8a80096c7f839973184b971c0a10888e_r.jpg\"></figure><p data-pid=\"smiBhruk\">我们同样也可以利用力场来打造急迫的关卡流向，大量排斥力的狭窄区域会加快玩家的移动趋势。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-1c8b3a8f1381e50737d90ce739e96edf_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1192\" data-rawheight=\"618\" class=\"origin_image zh-lightbox-thumb\" width=\"1192\" data-original=\"https://pic4.zhimg.com/v2-1c8b3a8f1381e50737d90ce739e96edf_r.jpg\"></figure><h3>点的作用</h3>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-e1a26a4fbc15cc2874abbefc37540bfd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1728\" data-rawheight=\"974\" class=\"origin_image zh-lightbox-thumb\" width=\"1728\" data-original=\"https://pic2.zhimg.com/v2-e1a26a4fbc15cc2874abbefc37540bfd_r.jpg\"></figure><p data-pid=\"fjN6lUSv\">点只是一个位置空间，没有长度、宽度之类的东西，一个物体是否是“点”的关键在于对比的观测和其作用，在这个画面中，我们可以抽象地将其表现为面和点的情况，你也可以眯着眼睛观察。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-b9799b66734436c4c4f7a36f0fa0eddb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1140\" data-rawheight=\"322\" class=\"origin_image zh-lightbox-thumb\" width=\"1140\" data-original=\"https://pic4.zhimg.com/v2-b9799b66734436c4c4f7a36f0fa0eddb_r.jpg\"></figure><p data-pid=\"FGu531oO\">关卡设计中有了这个点，当我们移动的时候，我们能够找到自己的位置，我们的移动就有了意义，因为我们比较了我们自己和这个点的相对关系。</p>\n<p data-pid=\"agMZj30O\">在美术方面，点让我们有了目标，视觉的焦点吸引了玩家的眼球，并让他们驱使角色前往焦点。</p>\n<h3>线的作用</h3>\n<p data-pid=\"22PGU7Wg\">线的作用无穷无尽，但总是离不开引导和划分。不同的线有着不同的阅读寿命，平线更加平缓，斜线更富有动感，竖线让人更加快速的阅读。</p>\n<p data-pid=\"-sqD_IRH\">当你不知道如何引导玩家的时候，不妨看看如何更加巧妙地使用线。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-32baddcce22de109863407d1d0001f32_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1620\" data-rawheight=\"916\" class=\"origin_image zh-lightbox-thumb\" width=\"1620\" data-original=\"https://pic3.zhimg.com/v2-32baddcce22de109863407d1d0001f32_r.jpg\"></figure><p data-pid=\"H6AkroNP\">值得一提的是，人眼遵从“F型视觉模型”，即从左往右读，从上往下读，无论是读图还是读书。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-f687fc93d3c55e248599824e6a27324a_b.jpg\" data-size=\"normal\" data-rawwidth=\"784\" data-rawheight=\"347\" class=\"origin_image zh-lightbox-thumb\" width=\"784\" data-original=\"https://pic3.zhimg.com/v2-f687fc93d3c55e248599824e6a27324a_r.jpg\"><figcaption>F型视觉模型，是由尼尔森在2006年提出的平面设计的基础理论</figcaption></figure><p data-pid=\"HFH8zpmx\">但我们毕竟是人，并不只是依赖直觉和第一眼，我们仍然会阅读和揣测所有的可能性。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-c1dc862fee830f34eb94db24df038ba9_b.jpg\" data-size=\"normal\" data-rawwidth=\"1870\" data-rawheight=\"979\" class=\"origin_image zh-lightbox-thumb\" width=\"1870\" data-original=\"https://pic2.zhimg.com/v2-c1dc862fee830f34eb94db24df038ba9_r.jpg\"><figcaption>点+线 进行关卡引导</figcaption></figure><p data-pid=\"QbfJ1z4K\">线并不只是实体的线，指向性的箭头，枪口，手指都会形成虚拟的线，虚线比实线的指引更强。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-2aa071521c8a76b974f5789f6742ce49_b.jpg\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1039\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-2aa071521c8a76b974f5789f6742ce49_r.jpg\"><figcaption>完全没有察觉地被指引</figcaption></figure><h3>外观与功能</h3>\n<p data-pid=\"ctkrgJlz\">物体都拥有外观，红色的涂料和磨损地表面让这两个圆柱体有了更多的内容。方块安插在墙上，就变成了门。</p>\n<p data-pid=\"upLHGPhw\">功能和外观紧密地联系在一起，<b>功能</b>总是优先的，而外观的存在为功能提供了一个<b>情景。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-2c8f539c5419f53d9980a49d4c11e4c6_b.jpg\" data-size=\"normal\" data-rawwidth=\"1748\" data-rawheight=\"951\" class=\"origin_image zh-lightbox-thumb\" width=\"1748\" data-original=\"https://pic3.zhimg.com/v2-2c8f539c5419f53d9980a49d4c11e4c6_r.jpg\"><figcaption>猫咪让桶滚动到合适的位置</figcaption></figure><p data-pid=\"cA7dAuaj\">外观让猫咪滚动空的铁桶变得更加合理，而铁桶作为功能也更加可信。同样的还有木板。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-18dffd4bafbec1eb3bab275d0dca6a51_b.jpg\" data-size=\"normal\" data-rawwidth=\"1302\" data-rawheight=\"431\" class=\"origin_image zh-lightbox-thumb\" width=\"1302\" data-original=\"https://pic2.zhimg.com/v2-18dffd4bafbec1eb3bab275d0dca6a51_r.jpg\"><figcaption>推到木板，使用其作为功能</figcaption></figure><p data-pid=\"L01ejyPT\">外观让游戏空间中，具有身份指向性和目的性的物体，很容易与玩家经历的故事和体验直接相关。<b>以更加具体的形式与背景区分开，成为玩家叙事的一部分，为关卡提供了情景的支持。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-cde6126c83bbf66f77accce68047e860_b.jpg\" data-size=\"normal\" data-rawwidth=\"1359\" data-rawheight=\"905\" class=\"origin_image zh-lightbox-thumb\" width=\"1359\" data-original=\"https://pic1.zhimg.com/v2-cde6126c83bbf66f77accce68047e860_r.jpg\"><figcaption>没有功能的铁桶</figcaption></figure><p data-pid=\"UIZVxJS_\">故事和关卡叙事在游戏开发过程中承担了重要得多的角色，游戏作为一种新型的、优秀的叙事传达媒介，定位发生倾斜，功能不再永远大于外观，有越来越多的仅仅为叙事服务的外观。</p>\n<p data-pid=\"kEz8jANR\">但当有着有功能的外观的物体不具备功能时，往往会让玩家感到疑惑。比如有按钮不能按，有门不能进，有桶不能推。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-7b18f1cad33f5eef3385745bff73d3e9_b.jpg\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-7b18f1cad33f5eef3385745bff73d3e9_r.jpg\"><figcaption>有灯光的门，却不是关卡的功能</figcaption></figure><p data-pid=\"cgqXaXuD\">如今游戏设计师经常容易忽略掉关卡的设计目的和功能，专注于打造绝美的环境，但是关卡承担着向玩家说话的职责，如果没有做好这一点的话，就会让玩家去瞎猜我们想表达的意思，感到迷惑。</p>\n<h2>第三章-公寓</h2>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-b3e68e5b70c8f9787eafadb30244b0b9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-b3e68e5b70c8f9787eafadb30244b0b9_r.jpg\"></figure><h3>灯光颜色与色温</h3>\n<p data-pid=\"SyLQFicA\">游戏在“墙内”关卡时主要使用的是偏向真实感的环境光为主，在进入“死城”后游戏开始以艺术化的人为打灯为主，进行氛围的渲染和加强画面的对比，而到了室内关卡“公寓”时，则可以更加自由地进行灯光塑造。</p>\n<p data-pid=\"j3D19pEX\">需要提到的关键是对于灯光颜色的控制，即何时使用色温，何时使用调色会更加真实合理。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-c7de13b834048303cc9ca55b26aa438b_b.jpg\" data-size=\"normal\" data-rawwidth=\"652\" data-rawheight=\"435\" class=\"origin_image zh-lightbox-thumb\" width=\"652\" data-original=\"https://pic4.zhimg.com/v2-c7de13b834048303cc9ca55b26aa438b_r.jpg\"><figcaption>灯光色温查找表</figcaption></figure><p data-pid=\"IkokPrmn\">在我们今天使用的灯，其发光原理从物理学角度来理解：当电流通过晶片时，N型半导体内的电子与P型半导体内的空穴在发光层剧烈地碰撞复合产生光子，以光子的形式发出能量（即大家看见的光）。在这种发光的方式下，使用色温会更加真实可信。</p>\n<p data-pid=\"Xj-_HNGb\">而像霓虹灯这类通过其中的稀有气体来发出各种颜色灯光的情况下，使用颜色来调整也不会觉得违和。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-8aee2a82514a75be6bf8d64075baaf6b_b.jpg\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"817\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-8aee2a82514a75be6bf8d64075baaf6b_r.jpg\"><figcaption>《SIFU》</figcaption></figure><h3>灯光衰减</h3>\n<p data-pid=\"8yPJRhtv\">很多时候，即使使用了色温，仍然会觉得灯光光很奇怪。在追求真实感的工作中，这可能很重要，但在你想要艺术化处理画面或者有个人的风格时，我并不认为这是一个铁律，但我们这里只讨论真实感。</p>\n<p data-pid=\"wGAmDMZD\">光是会随着距离衰减的，不仅仅是光的强度，包括它的色温都遵循二次衰减，也称之为平方反比衰减。如果光源不能遵从这个物理定律的话，那么他会看上去很假。比如《生化危机4》中的洞穴，被一只蜡烛就照的通明，不应该照的到那么广的范围还保持这种亮度。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-dff757265549c2d39dd6569df45ecbd9_b.jpg\" data-size=\"normal\" data-rawwidth=\"1457\" data-rawheight=\"405\" class=\"origin_image zh-lightbox-thumb\" width=\"1457\" data-original=\"https://pic2.zhimg.com/v2-dff757265549c2d39dd6569df45ecbd9_r.jpg\"><figcaption>《生化危机4》中的“小太阳”蜡烛</figcaption></figure><p data-pid=\"URCnH8q9\">除了灯光的强度衰减，另外我们可以在下图看出色温的衰减，光源发出的青色光和黄色光，在发散之后变成褐色和暗红色光。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-10411ad0153d83fc5b53f2c2856a9942_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1374\" data-rawheight=\"714\" class=\"origin_image zh-lightbox-thumb\" width=\"1374\" data-original=\"https://pic3.zhimg.com/v2-10411ad0153d83fc5b53f2c2856a9942_r.jpg\"></figure><p data-pid=\"m791AtOr\">过去的技术受到限制，而如今的引擎已经可以很好地去模拟真实的灯光衰减以及色温，我们可以在虚幻引擎的灯光组件中看到这些参数。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-18235cbbd96560dbddb4d0d81a950159_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"688\" data-rawheight=\"161\" class=\"origin_image zh-lightbox-thumb\" width=\"688\" data-original=\"https://pic2.zhimg.com/v2-18235cbbd96560dbddb4d0d81a950159_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-8c2ceefb6fedab51ffe49832f89ecab1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"590\" data-rawheight=\"139\" class=\"origin_image zh-lightbox-thumb\" width=\"590\" data-original=\"https://pic2.zhimg.com/v2-8c2ceefb6fedab51ffe49832f89ecab1_r.jpg\"></figure><p data-pid=\"ZoZ2VyKL\">但并不是引擎升级就可以确保万无一失了，很多时候错误的调参也会打破其物理的表现。</p>\n<p data-pid=\"xnCvO2Up\">霓虹灯变化多样，且吸引人，控制霓虹灯在场景中出现的位置以及频率是把握包含霓虹灯光效场景节奏的关键，霓虹灯远比比想象中要复杂。如果把握不好，画面的节奏就会变得纷乱繁杂，不易于阅读。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-d4dfb1ac948b9337355e04d74279c2ad_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"924\" data-rawheight=\"761\" class=\"origin_image zh-lightbox-thumb\" width=\"924\" data-original=\"https://pic2.zhimg.com/v2-d4dfb1ac948b9337355e04d74279c2ad_r.jpg\"></figure><h3>色彩对比</h3>\n<p data-pid=\"i-ix4JPG\">亮度和颜色都是对比出来的，周边亮度暗，那么我们看到的亮部就会感觉更亮。颜色也会受到周边的环境对比出现视误差，常见的例子有这双鞋到底是灰绿还是粉白。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-c0354412da340798d0a85f33e86ab394_b.jpg\" data-size=\"normal\" data-rawwidth=\"1307\" data-rawheight=\"678\" class=\"origin_image zh-lightbox-thumb\" width=\"1307\" data-original=\"https://pic1.zhimg.com/v2-c0354412da340798d0a85f33e86ab394_r.jpg\"><figcaption>光的颜色和亮度改变了视觉感知</figcaption></figure><p data-pid=\"P1uGJ8sX\">即使灰度（value）一样的情况下，周边的环境影响，仍然会让玩家感知的色彩发生差异。为了强调画面的焦点，比如一些指示牌，指引，我们可以用互补色来强化他们的色彩对比，《Stray》中大量使用了这种方式。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-8e57be4780f20dc61c26abba6cfc3fac_b.jpg\" data-size=\"normal\" data-rawwidth=\"1001\" data-rawheight=\"499\" class=\"origin_image zh-lightbox-thumb\" width=\"1001\" data-original=\"https://pic1.zhimg.com/v2-8e57be4780f20dc61c26abba6cfc3fac_r.jpg\"><figcaption>在一种色调环境下使用对比色指引</figcaption></figure><p data-pid=\"q5Z-J__R\">色彩对比的另一个作用是打造纵深，与灰度打造纵深的方式不同，直接利用不同的颜色来划分空间区域。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-9a607234b2966cff7583df3c8ed6cb6d_b.jpg\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"817\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-9a607234b2966cff7583df3c8ed6cb6d_r.jpg\"><figcaption>《SIFU》</figcaption></figure><figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-7d5f4d820388d418bb9286b246d65873_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"900\" data-rawheight=\"327\" class=\"origin_image zh-lightbox-thumb\" width=\"900\" data-original=\"https://pic4.zhimg.com/v2-7d5f4d820388d418bb9286b246d65873_r.jpg\"></figure><h3>色彩象征</h3>\n<p data-pid=\"msQnR0J-\">利用冷色或暖色打造氛围应该是大家都明白的道理，夏天的时候用冷白光会感到凉爽，而使用暖色光则更加燥热，在冬天却会感到温暖。</p>\n<p data-pid=\"79pUIzst\">除此之外，冷光还有清冷，寂静的感觉，当我们想要玩家在一个关卡中小心翼翼地进行一些探索时，我们可以使用冷色作为环境的主色。而在危机来临时，我们会使用红色进行预告，通常我们将危险或者敌人的主色设计为红色。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-4bf6278a280eceaba5f377ed76b9c9db_b.jpg\" data-size=\"normal\" data-rawwidth=\"1175\" data-rawheight=\"496\" class=\"origin_image zh-lightbox-thumb\" width=\"1175\" data-original=\"https://pic4.zhimg.com/v2-4bf6278a280eceaba5f377ed76b9c9db_r.jpg\"><figcaption>《Stray》的敌人设计</figcaption></figure><p data-pid=\"AeBW-KlA\">比如在《Grounded》（黑曜石工作室《禁闭求生》）中，当实验室的某处的出现红光时，预示着战斗即将来临。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-f176527cf658820b826f250b6c3cc3e7_b.jpg\" data-size=\"normal\" data-rawwidth=\"1459\" data-rawheight=\"415\" class=\"origin_image zh-lightbox-thumb\" width=\"1459\" data-original=\"https://pic4.zhimg.com/v2-f176527cf658820b826f250b6c3cc3e7_r.jpg\"><figcaption>刚打开门就被攻击</figcaption></figure><p data-pid=\"6w6LyzOd\">根据本节的学习，我们可以知道上一小节中，利用色彩对比加强纵深感的同时，还意味着什么。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-fbc5ac2aef70ddf1942dee5b87015c51_b.jpg\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"306\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-fbc5ac2aef70ddf1942dee5b87015c51_r.jpg\"><figcaption>《SIFU》同样是门后即将有一场恶战</figcaption></figure><h3>遮挡</h3>\n<p data-pid=\"5V-0ybuT\">谈到建筑学的虚实理论，我们就不得不提到遮挡，这是真正的“屏风”。</p>\n<p data-pid=\"moRim5NK\">任何与现实相关的场景都不能避免这一点，你放一个实体，这个实体就会挡住其后的物体；这迫使关卡和游戏设计师仔细斟酌，<b>判断哪些东西应该被同时看到，又有哪些是不应该被同时看到的。</b></p>\n<p data-pid=\"qOdLkQf7\">当玩家在进入这个空间时，右侧的立柱与窗帘并不是无意义的，它将“门”这个具有很强的功能与引力的物体<b>遮挡</b>，让玩家将焦点放在屏幕上。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-ca1aa28649035482521885fbeb991ee0_b.jpg\" data-size=\"normal\" data-rawwidth=\"1702\" data-rawheight=\"929\" class=\"origin_image zh-lightbox-thumb\" width=\"1702\" data-original=\"https://pic1.zhimg.com/v2-ca1aa28649035482521885fbeb991ee0_r.jpg\"><figcaption>被遮挡的门</figcaption></figure><h3>调整空间定义</h3>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-14838c5284ca5268cba6d573cc570ee4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1823\" data-rawheight=\"947\" class=\"origin_image zh-lightbox-thumb\" width=\"1823\" data-original=\"https://pic1.zhimg.com/v2-14838c5284ca5268cba6d573cc570ee4_r.jpg\"></figure><p data-pid=\"AYsry4Kc\">通俗地讲，调整空间定义本质上是对空间感进行改变，我们可以通过很多种方式</p>\n<ul>\n<li data-pid=\"9QCzXCDA\">骨骼结构，使用点和线打造空间边界的结构</li>\n<li data-pid=\"NtY_-bP5\">通过连接，创造某种沿着整体形状的线或者形体</li>\n<li data-pid=\"cDrNHCZ-\">图形对齐，空间内的整体图案可以与整体体积的形状相融合，或者干扰那个体积</li>\n<li data-pid=\"KYh2iOwD\">打造差异，如果能在不同的元素之间创造出一种很明显的差异性，那就可以看到它们是如何相联系的</li>\n<li data-pid=\"R2RWLmYr\">边缘完整性，如果我们定义的空间边缘更完整，那么会比形状溢出的感觉更强烈</li>\n</ul>\n<p data-pid=\"7HVJndY5\">我们可以通过这个相对独立简单的空间为例来看。</p>\n<p data-pid=\"W40QOWoq\"><b>骨骼结构</b></p>\n<p data-pid=\"e2r2Roqw\">当我们可以清晰看到这个空间的骨骼的时候，我们可以很好地理解这个空间的形状，但如果比如我们把空间的一个角落给模糊，或者受到遮挡时，我们就很难以在这个视角下去理解空间。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-458b41527c167214cf8b209919ff7ab7_b.jpg\" data-size=\"normal\" data-rawwidth=\"1177\" data-rawheight=\"394\" class=\"origin_image zh-lightbox-thumb\" width=\"1177\" data-original=\"https://pic4.zhimg.com/v2-458b41527c167214cf8b209919ff7ab7_r.jpg\"><figcaption>被遮挡的空间骨骼</figcaption></figure><p data-pid=\"37ChJJ50\">同样我们也可以使用在骨骼上去添加点和线来强调空间形状，比如在这个画面时，虽然有一个角落被遮挡了，但是仍然可以通过管道看出来这里发生了转折。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-7c8221d0653472c598a3e549178c2097_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1461\" data-rawheight=\"820\" class=\"origin_image zh-lightbox-thumb\" width=\"1461\" data-original=\"https://pic4.zhimg.com/v2-7c8221d0653472c598a3e549178c2097_r.jpg\"></figure><p data-pid=\"28YJd7Zv\"><b>连接表面</b></p>\n<p data-pid=\"YI_ZpMss\">连接表面是基于空间骨骼之上的一种增强，通过使用骨架式的关节，将表面进行连接，所以不一定能看到很强硬的角或者点之类的东西，但可以看到线型元素的重复，地面棋盘格，去判断这个空间的纵深。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-45f924d68d8bd5734342e93cf774a5c6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1826\" data-rawheight=\"934\" class=\"origin_image zh-lightbox-thumb\" width=\"1826\" data-original=\"https://pic3.zhimg.com/v2-45f924d68d8bd5734342e93cf774a5c6_r.jpg\"></figure><p data-pid=\"y0APweq-\">在这个空间的天花板上，就大量使用了连接，形成了棋盘格式的线路。</p>\n<p data-pid=\"DyhWHGwr\"><b>图形对齐</b></p>\n<p data-pid=\"ORRTASxR\">在这个空间里，大部分的元素都是正方形的，各种桌子电脑，并且它们并没有完全杂乱的进行摆放，全部都遵循了这个空间的形状，依照空间进行对齐，这些重复的元素和物体确实创造了一种很好的空间感。</p>\n<p data-pid=\"ApBSUBa2\">包括中间摆放的方形桌子，在空间内部使用mass强化了空间感。</p>\n<p data-pid=\"BtQ3Tg8d\">另外，关于形状的<b>视觉象征</b>，我们在上文有提过，大量的正方形物体加强了这个空间的秩序，工业，科技感。</p>\n<p data-pid=\"RgQjqfvJ\"><b>打造差异</b></p>\n<p data-pid=\"VO7vIsOX\">我们可以注意到，这个空间里的这两面墙，它们是不同的，红色区域的整面墙是一个机箱体，其中的工作区是内凹的，而绿色区域则是普通墙面和一些架子，它们的材质和模块都是不同的。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-be6506845d092cae60bbee67b0ea7094_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1194\" data-rawheight=\"616\" class=\"origin_image zh-lightbox-thumb\" width=\"1194\" data-original=\"https://pic1.zhimg.com/v2-be6506845d092cae60bbee67b0ea7094_r.jpg\"></figure><p data-pid=\"tNv4bWfB\"><b>边缘完整性</b></p>\n<p data-pid=\"FGGCc1jg\">这个应该很容易理解，本质上就是尽可能的确保空间的边缘完整，尽量少地遮挡会让空间的形状更加容易理解和阅读。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-91d32d041923e73ca180f438ab7962bf_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1688\" data-rawheight=\"784\" class=\"origin_image zh-lightbox-thumb\" width=\"1688\" data-original=\"https://pic4.zhimg.com/v2-91d32d041923e73ca180f438ab7962bf_r.jpg\"></figure><h3>逻辑光源与装饰光</h3>\n<p data-pid=\"i3AydF4-\">“逻辑光源”是指符合现实逻辑的光源，有时也可成为自然光效，这时一种纪实性质的照明方法。</p>\n<p data-pid=\"VyftxbYY\">大家可能会知道，很多时候电影以及游戏的灯光其实是另外由灯光师去打光的，因为如果在游戏中实时去进行光线弹射的计算，是非常消耗GPU性能的，有的时候会使用光照烘培的方式直接绘制在光照贴图上，但是一些情况下物理的灯光不足以达到一些需求的，这时候就会使用人为补光。</p>\n<p data-pid=\"z-DXywWJ\">例如在电影《银翼杀手2049》中，光线只能照亮右侧的人脸，而左侧则会漆黑一片，这让角色的灯光塑造变得不那么完美（特别是有的演员对于自己的形象特别在乎。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-ec739191eec4c2842e51ee3b1df957ce_b.jpg\" data-size=\"normal\" data-rawwidth=\"1919\" data-rawheight=\"748\" class=\"origin_image zh-lightbox-thumb\" width=\"1919\" data-original=\"https://pic3.zhimg.com/v2-ec739191eec4c2842e51ee3b1df957ce_r.jpg\"><figcaption>来源B站：【看电影学摄影】电影摄影灯光拉片《银翼杀手2049》①</figcaption></figure><p data-pid=\"_MCJwMsS\">在电影中，如果一个镜头可以不反拍，那么其背面则可能不会露陷，在游戏中玩家的镜头是可以随意转动的，而在这种补光下，装饰光（Motivated Light）的作用就显现出来。</p>\n<p data-pid=\"oKslbODL\">装饰光本质上是在人为补光的基础上，为其添加“逻辑”。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-6a7033517c68c980bf924e0d50e38fe7_b.jpg\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1030\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-6a7033517c68c980bf924e0d50e38fe7_r.jpg\"><figcaption>不合理亮度的指示牌</figcaption></figure><p data-pid=\"kKGzezV7\">在这个场景中，根据我们在上文提过的<b>灯光衰减</b>理论，我们可以知道，这个逃生出口的标志发光是不可能照亮如此大范围的。它其实起到的是装饰光的作用，灯光师在其前方使用了一个点光源才是真正的发光灯。</p>\n<p data-pid=\"7JE1H20v\">当然也不是必须使用装饰灯来确保逻辑，当玩家快速通过某处，过场动画，或者并不明显失真时，我们也可以使用戏剧灯光达到塑造的效果。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-a3e9f80a88fc167be56746677a964384_b.jpg\" data-size=\"normal\" data-rawwidth=\"1582\" data-rawheight=\"788\" class=\"origin_image zh-lightbox-thumb\" width=\"1582\" data-original=\"https://pic1.zhimg.com/v2-a3e9f80a88fc167be56746677a964384_r.jpg\"><figcaption>通风管中并不应该是这样的光比</figcaption></figure><figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-2f9ebd8d73c27d6f3ff79b3cdb2387ea_b.jpg\" data-size=\"normal\" data-rawwidth=\"1827\" data-rawheight=\"973\" class=\"origin_image zh-lightbox-thumb\" width=\"1827\" data-original=\"https://pic3.zhimg.com/v2-2f9ebd8d73c27d6f3ff79b3cdb2387ea_r.jpg\"><figcaption>但里面还是如此亮，并且这里的后期处理盒子变了</figcaption></figure><h3>视觉叙事</h3>\n<p data-pid=\"0-CBX-p7\">视觉叙事（Visual Storytelling）是每一位游戏美术师都应该知道的概念，所有构成，明暗，色彩等美术知识分开来看都不足以打造一个故事，但是当他们结合在一起，就能够通过一个画面就传达出故事。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-9dd67f28872c41e4b4514fc1d0ba7d3b_b.jpg\" data-size=\"normal\" data-rawwidth=\"1194\" data-rawheight=\"670\" class=\"origin_image zh-lightbox-thumb\" width=\"1194\" data-original=\"https://pic4.zhimg.com/v2-9dd67f28872c41e4b4514fc1d0ba7d3b_r.jpg\"><figcaption>《哈利波特：魔法觉醒》入学动画</figcaption></figure><p data-pid=\"Pn59wWqf\">可以从上述例子看出来，即使我们不去一一解释画面的表现和内容，也能很自然地将情感传递给观众，或是诱发他们的好奇、害怕等等。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-2687d173bd2a694ea45897f37dd5bc57_b.jpg\" data-size=\"normal\" data-rawwidth=\"1268\" data-rawheight=\"365\" class=\"origin_image zh-lightbox-thumb\" width=\"1268\" data-original=\"https://pic4.zhimg.com/v2-2687d173bd2a694ea45897f37dd5bc57_r.jpg\"><figcaption>同样是背光，不同的情绪</figcaption></figure><p data-pid=\"LLy7O99h\">视觉叙事是一个很宽泛的概念，包含了各种各样的视觉传达方式，是多种视觉语言共同协作的成果，同样我们在关卡中也可以通过关卡的结构设计在传达故事。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-ce30c48f60d6915269807a40fc120f8c_b.jpg\" data-size=\"normal\" data-rawwidth=\"1912\" data-rawheight=\"939\" class=\"origin_image zh-lightbox-thumb\" width=\"1912\" data-original=\"https://pic1.zhimg.com/v2-ce30c48f60d6915269807a40fc120f8c_r.jpg\"><figcaption>未知剪影-胆怯</figcaption></figure><h3>\n<br> 未完待续</h3>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhen-he-9?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">枕鹤</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/544157892?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"从《Stray》拆解游戏关卡设计和美术（二）","date":"2022-08-15 10:16:21","description":"\n<h3>前言</h3>\n<p data-pid=\"SBq2OmEJ\">在上一篇中，我们着重讨论了线性空间下的关卡，我在最后更新了一些内容关于<b>单空间内如何塑造空间感</b>和<b>逻辑光源与装饰光</b>的知识点，没看的朋友可以先看一下前篇的内容结尾。</p>\n<a href=\"https://zhuanlan.zhihu.com/p/544157892\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\"><span class=\"invisible\">https://</span><span class=\"visible\">zhuanlan.zhihu.com/p/54</span><span class=\"invisible\">4157892</span><span class=\"ellipsis\"></span></a><p data-pid=\"8OMHKP0t\">上一章严格按照《Stray》的剧情和游戏关卡顺序，为了不打乱读者的阅读节奏，不会引用还未提及的关卡作为例子，也没有大量使用东拼西凑的游戏来引用，但一些简单的知识点需要尽早提及，所以可能不是最合适的图例，大家了解其知识点的含义即可。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-252902e42b015bfa890f255a5f91f559_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-252902e42b015bfa890f255a5f91f559_r.jpg\"></figure><p data-pid=\"jInj0vPW\">入门的东西想必大家都看腻了，那么我们本章开始深入一些。</p>\n<h2>第四章-贫民窟</h2>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-08425618c82c35e68dd46711a70986ab_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-08425618c82c35e68dd46711a70986ab_r.jpg\"></figure><p data-pid=\"RnJbpsLs\">游戏从这个关卡开始，由原来的线性游戏关卡空间模式，变为一个更加自由探索的关卡空间，玩家并不再按照线性关卡打造的固定节奏和单向空间去进行游戏体验。游戏的节奏也从设计师完全的掌控逐渐放手，更大的控制权放在玩家手上，只能动态地控制玩家的行为，这对于任务的设计以及空间的布置都提出了更高的要求。</p>\n<p data-pid=\"1QB6AKuE\">所以新开一章内容，与前篇做出区分，在本篇文章专注拆解“贫民窟”这个空间的内容，会更大程度上涉及<b>多空间</b>和<b>自由探索</b>的关卡内容。</p>\n<h2>遮挡</h2>\n<p data-pid=\"Q_GNfPZi\">在上一章的末尾简单提及了遮挡，在这里再次提及，因为其在关卡设计中是一个非常实用的技巧。</p>\n<p data-pid=\"4WzSgFa3\">在建筑学的虚实理论中，不得不提到的是实体的一大体质：遮挡。</p>\n<p data-pid=\"lAflqszp\">任何与现实相关的场景都不能避免这一点，你放一个实体，这个实体就会挡住其后的物体；这迫使关卡和游戏设计师仔细斟酌，判断哪些东西应该被同时看到，又有哪些是不应该被同时看到的。</p>\n<p data-pid=\"4dpXcOX2\">实体信息传达的性质就在于，它会在后方<b>创造一片遮挡阴影</b>，内部信息我们无从得知。</p>\n<p data-pid=\"SCgdn07V\">在玩家首次进入贫民窟时，是需要指引其走到最后的电梯前的，那么，巧妙地规划玩家路线就是一个关键。除了使用一些可以封闭起来的门，以外，也巧妙利用了遮挡。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-2ff5fac3b2a3d4566c0a058234d421ff_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1769\" data-rawheight=\"779\" class=\"origin_image zh-lightbox-thumb\" width=\"1769\" data-original=\"https://pic4.zhimg.com/v2-2ff5fac3b2a3d4566c0a058234d421ff_r.jpg\"></figure><p data-pid=\"2SNaR4tc\">左侧的水管挡住了原来机器人逃脱的路，当然它也被临时关闭了。其次，根据上面的线的指引，从高到低也是指向右边。</p>\n<h3>弱化影响</h3>\n<p data-pid=\"CKyUeYvY\">遮挡的另一种作用是<b>弱化影响。</b></p>\n<p data-pid=\"MOUsGt23\">我们可以用遮挡来隐藏那些喧宾夺主，会与我们重心冲突的元素。在这个关键镜头下，左右两侧的道路都被前景的凸出结构给遮挡了，让观众把焦点放在电梯间。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-1bb937669eadf8cdbca04aa0c2c24db4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1388\" data-rawheight=\"772\" class=\"origin_image zh-lightbox-thumb\" width=\"1388\" data-original=\"https://pic1.zhimg.com/v2-1bb937669eadf8cdbca04aa0c2c24db4_r.jpg\"></figure><h3>利用遮挡提高空间理解的难度</h3>\n<p data-pid=\"OyBRLdlJ\">当我们想要<b>提高玩家理解空间结构的难度时</b>，也可也使用遮挡。</p>\n<p data-pid=\"w5_6LCu3\">如果我们想要提高难度，可以在多角度放置遮挡关键要素的物体，如此一来，我们就可以减少单一角度的信息完整性和清晰度，<b>迫使玩家从多个角度更加仔细观察环境。</b></p>\n<p data-pid=\"RmjMT1L1\">类似的做法顽皮狗在《神秘海域4》中的【莱伯塔利亚金融区】中被使用，他们使用连续三层的遮挡，让目标地点被隐藏起来。当玩家寻找出口一筹莫展之时，玩家再次回头走下楼梯，看到出口明明只有几步之遥，但却被物体挡住了。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-464a015b74ccf1110b8cf2a1ebe65f92_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1919\" data-rawheight=\"976\" class=\"origin_image zh-lightbox-thumb\" width=\"1919\" data-original=\"https://pic3.zhimg.com/v2-464a015b74ccf1110b8cf2a1ebe65f92_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-198570434681430c1000c898a85a4721_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"974\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-198570434681430c1000c898a85a4721_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-259941a55b6f93869b898757519c7797_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"365\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic4.zhimg.com/v2-259941a55b6f93869b898757519c7797_r.jpg\"></figure><p data-pid=\"3pfL0X3n\">即使<b>光线</b>指向了那里，并且是<b>明暗差距最大</b>的位置，但是仍然没有第一时间让玩家发现，而顽皮狗精湛的关卡设计，让玩家下意识地去探索他们设计的关卡空间，基本上为玩家做出了决定，尽管顽皮狗并没有强迫你去探索这些角落。</p>\n<p data-pid=\"pj5_yn87\">遮挡同样也可以调整空间的体积感，正如上一篇【调整空间定义】中，利用实体<b>遮挡骨骼结构</b>的知识点，可以让玩家无法第一时间清晰地了解这个空间的全貌。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-4dc06f56ae741a7312a7d01adff28745_b.jpg\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"241\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic2.zhimg.com/v2-4dc06f56ae741a7312a7d01adff28745_r.jpg\"><figcaption>这是矩形空间？还是半圆形？</figcaption></figure><p data-pid=\"JxrfXFVq\">《Stray》同样使用类似的手法，提高玩家理解这一区域的难度，让玩家在探索时有新发现。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-ffdb0cc930747f7a33fe3d85a742366c_b.jpg\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-ffdb0cc930747f7a33fe3d85a742366c_r.jpg\"><figcaption>来时没有发现的路</figcaption></figure><h2>重叠</h2>\n<p data-pid=\"pUwJyyrw\">重叠本质意义上是遮挡的一种类型，指在实体背后的东西并<b>不完全被覆盖</b>，并非无法获取信息。</p>\n<p data-pid=\"3yB1Muyr\">当作为设计师，想要为玩家传达清晰的信息时，这时考虑的第一要素；但另一方面，我们在设计时也会偶尔有目的性地使用遮挡。</p>\n<p data-pid=\"HNh10R2-\">当我们有一些奖励宝箱之类的东西，我们不想让玩家轻易地找到，想让他们在探索的时候给予奖励，我们显然可以放一个东西把它挡住，只有在仔细探索时才有资格拿到这个奖励。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-7cd22f1fb0a6c1f3fced63b14c1f139d_b.jpg\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-7cd22f1fb0a6c1f3fced63b14c1f139d_r.jpg\"><figcaption>被书堆挡住的保险箱</figcaption></figure><p data-pid=\"v68gqOxQ\">亦或者使用遮挡“暗示”<b>为玩家</b>引导某个目标。通过隐晦的让奖励露出一点点边角，将其与前面的遮挡物区分开来，能够引导激励玩家绕过去进行探索，寻找遮挡在另一侧的物体。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-6aec934d6382190994110df75bee6dcf_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1809\" data-rawheight=\"925\" class=\"origin_image zh-lightbox-thumb\" width=\"1809\" data-original=\"https://pic4.zhimg.com/v2-6aec934d6382190994110df75bee6dcf_r.jpg\"></figure><h3>加强结构纵深</h3>\n<p data-pid=\"kxnaw_tI\">重叠还可以用于<b>加强结构纵深</b>。</p>\n<p data-pid=\"yF2wJQXs\">如果场景中有大量的物体，他们各自分离，那么物体之间的距离和前后关系就会变得模糊。玩家无法很好地定位到自己与不同物体之间的距离关系，这对于其移动的欲望是不利的。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-4609704ebe3ee4ec145b31c86a3e1a43_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1731\" data-rawheight=\"953\" class=\"origin_image zh-lightbox-thumb\" width=\"1731\" data-original=\"https://pic4.zhimg.com/v2-4609704ebe3ee4ec145b31c86a3e1a43_r.jpg\"></figure><p data-pid=\"5SgnPny-\">也许在【屋顶】关卡时的感知会更加明显。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-f949f4478723ed4acea696b1be800830_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-f949f4478723ed4acea696b1be800830_r.jpg\"></figure><h3>利用不同形状遮挡规划玩家路径与预期</h3>\n<p data-pid=\"JdIGjrZF\">任天堂《旷野之息》中的开放世界在CEDEC 2017发表的演讲中，讲解了形状的妙用，玩家路径和遮挡关系息息相关。</p>\n<p data-pid=\"3mtBt_1x\">他们的环境设计师注意到一点在于，引导玩家左右绕过三角形的驱动力，三角形会分散玩家的前进力，将他们向左右两侧推进，也有多花费一点力气之前爬上去的，这将玩家前进欲望拆分成三种。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-488810373349c2087e44a4ce20d1021f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1366\" data-rawheight=\"702\" class=\"origin_image zh-lightbox-thumb\" width=\"1366\" data-original=\"https://pic4.zhimg.com/v2-488810373349c2087e44a4ce20d1021f_r.jpg\"></figure><p data-pid=\"YH6R7QTP\">方形的引导力则强制玩家从左右两侧分开，所以立方体基本只能为玩家提供左右两种的选择。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-6ec2d669e0d05d8289759d982f8ba761_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1313\" data-rawheight=\"686\" class=\"origin_image zh-lightbox-thumb\" width=\"1313\" data-original=\"https://pic2.zhimg.com/v2-6ec2d669e0d05d8289759d982f8ba761_r.jpg\"></figure><p data-pid=\"Ts0Jqbbk\">同时他在遮挡关系上还有独特的能力，当你在绕过三角形的时候，之后的物体会循序渐进地展现出来，玩家越前进，就越有更强的动力和目标。</p>\n<p data-pid=\"4XE3FEfp\">当你绕过正方体时，后方的物体会一次性暴露出来，所以它们<b>多利用三角形为引导，方体作为障碍</b>。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-408510775f66de45598d70301cae1946_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1323\" data-rawheight=\"680\" class=\"origin_image zh-lightbox-thumb\" width=\"1323\" data-original=\"https://pic3.zhimg.com/v2-408510775f66de45598d70301cae1946_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-78166c335bdded10afef813081076861_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1463\" data-rawheight=\"776\" class=\"origin_image zh-lightbox-thumb\" width=\"1463\" data-original=\"https://pic2.zhimg.com/v2-78166c335bdded10afef813081076861_r.jpg\"></figure><h2>利用视觉元素指引</h2>\n<h3>色彩对比</h3>\n<p data-pid=\"BhW3veEX\">游戏中的色彩与各类视觉对比的使用是非常具有关卡设计意义的，设计师使用视觉线索，依靠特定的颜色来突出物体，拥有很强的吸引玩家注意力的效果，让他们免于花费很多时间去寻找下一个目标。</p>\n<p data-pid=\"8NGK437z\">当玩家需要进行类似于跳跃这种本能操作时，他们需要快速可识别的目标，而不是需要动脑思考和犯错。在本能基础操作上失去目标，会让玩家感到很沮丧！</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-3952b421a75a66cf937853ce173cf963_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-3952b421a75a66cf937853ce173cf963_r.jpg\"></figure><p data-pid=\"nCE3t585\">而在并不需要强指引的位置，没有意义地指引则会打乱玩家的移动意图，则最好不要使用视觉元素。在后续的【中城】关卡中就有很多颜色鲜明的跳跃点，跳到最后发现只是用于截图与观景的。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-e37e73fa5477cb995116e7433da45b9d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-e37e73fa5477cb995116e7433da45b9d_r.jpg\"></figure><h3>重复元素</h3>\n<p data-pid=\"i5CtYMtT\">顽皮狗从《神秘海域2》开始发现利用色彩对比进行指引的规则，随着时间的推移，他们使用一种更为巧妙的方式来实现这一目标，这种模式在很多公司至今仍在使用，比如一些重复的视觉元素。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-c3754f0d54d6bf4bc1c17ae86f48d281_b.jpg\" data-size=\"normal\" data-rawwidth=\"1351\" data-rawheight=\"656\" class=\"origin_image zh-lightbox-thumb\" width=\"1351\" data-original=\"https://pic2.zhimg.com/v2-c3754f0d54d6bf4bc1c17ae86f48d281_r.jpg\"><figcaption>《神秘海域》</figcaption></figure><figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-b7e83cc0055f016f3c94138b7f7c2d3d_b.jpg\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"947\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-b7e83cc0055f016f3c94138b7f7c2d3d_r.jpg\"><figcaption>《战神4》</figcaption></figure><p data-pid=\"wvXOnOIv\">《Stray》中的重复元素设计则是这种类似于电箱的东西，发出蓝光。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-7fe014921d8adda3873cacebde2021b3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1588\" data-rawheight=\"956\" class=\"origin_image zh-lightbox-thumb\" width=\"1588\" data-original=\"https://pic4.zhimg.com/v2-7fe014921d8adda3873cacebde2021b3_r.jpg\"></figure><p data-pid=\"lhOztoWm\">这在半开放的关卡中是非常有意义的设计，当没有HUD时怎么去无形地规划玩家移动趋势，不让他们迷路，使用重复的元素会让玩家感到熟悉。</p>\n<p data-pid=\"11FFYLo2\">虽然你可以前往那些人迹罕至的区域，找到几个宝藏或者敌人的藏身处，但大多数玩家不会在意这个，他们一心盯着正确的方向。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-5282a7d79e759fa2d2e9a3e261a57786_b.jpg\" data-size=\"normal\" data-rawwidth=\"1360\" data-rawheight=\"654\" class=\"origin_image zh-lightbox-thumb\" width=\"1360\" data-original=\"https://pic3.zhimg.com/v2-5282a7d79e759fa2d2e9a3e261a57786_r.jpg\"><figcaption>《神秘海域4》开放关卡</figcaption></figure><h3>NPC/敌人引导</h3>\n<p data-pid=\"ovvdlIdX\">在很多后期的游戏中，这一设计有着更特殊的扩展，比如使用强烈的光线，还有敌人的位置，而有时使用敌人掉落的收集品去引导玩家路线也是很巧妙的设计。</p>\n<p data-pid=\"8sBW01Jr\">在《战神4》中这种引导方式被大量地使用，玩家在看似开放的空间，被一些敌人给不停地引导到设计师想让他们去的区域。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-94c89333ecf7ca421a87a4050ab543c6_b.jpg\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"964\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic3.zhimg.com/v2-94c89333ecf7ca421a87a4050ab543c6_r.jpg\"><figcaption>《战神4》</figcaption></figure><p data-pid=\"4H5Ht6K-\">在贫民窟中，有一些小路其实玩家很少会使用到，但那里有一些世界观设计和任务收集品，为了让玩家有机会去探索这些区域，专门设计了一个会在这些小路不停走动的NPC。</p>\n<p data-pid=\"6s8liaaU\">好奇的玩家会跟着它探索这一块为世界观服务的区域，当然，不去也不会影响主线流程。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-16c81ee0f61feeba2bb7ed47c665bfdd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-16c81ee0f61feeba2bb7ed47c665bfdd_r.jpg\"></figure><h2>欺骗与领悟</h2>\n<p data-pid=\"_t_pDSlv\">在游戏关卡设计中，如果指引过于明显和简单，也会让玩家感到过于容易和无趣。所以并不是每次都要给予玩家完美的反馈，而是利用一些欺诈性行为“玩弄”玩家预期。</p>\n<p data-pid=\"Xd2PcKDw\">这与叙事有着异曲同工之妙，冲突是故事的灵魂和价值所在，故事不能一帆风顺，主角总是要跌入低谷，再达到高潮，关卡在电影化游戏中一定程度上就充当了其叙事意义，所以也不能一帆风顺，总有一些地方指向了新的任务。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-4778bd6be1998678c8effb7312afc727_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-4778bd6be1998678c8effb7312afc727_r.jpg\"></figure><p data-pid=\"-WifJi62\">当然我们不仅仅可以利用任务来使用这种遭遇困难的技巧，我们可以在我们打造的重复元素或者视觉元素上去做文章。</p>\n<p data-pid=\"embXI4zu\">同样是《神秘海域4》，在【拍卖会】关卡，顽皮狗的技巧被反复使用，把玩家引到错误的道路，最后发现正确的路竟然就在背后。在拍卖会通风口的时候，你总可以瞥见左边的画面，以允许你观察外面的情况，顽皮狗故意这么做，让你会错过右侧的入口。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-e102dd80642dbdc2861c8c0d29a02c52_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"953\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic3.zhimg.com/v2-e102dd80642dbdc2861c8c0d29a02c52_r.jpg\"></figure><p data-pid=\"KgeOTvfI\">而当玩家意识到“原来是这里”的时候则会获取一种恍然大悟的情感，这大概与解半天的数学题，最后终于解出来的感觉差不多。</p>\n<p data-pid=\"8q7ciy-N\"><b>领悟和完成的感觉是很好的正反馈。</b></p>\n<h2><b>定义空间</b></h2>\n<p data-pid=\"Vj5H1W2m\">接下来的几个小节会着重讲诉和拆解关于空间的定义，是关卡设计与美术紧密结合的内容。</p>\n<p data-pid=\"k72klLtD\">我长达15个小时徘徊在贫民窟这一章的地图中，观察各个空间的结构。不得不感叹，这绝对是教科书级别的小地图箱庭设计，所有的细节都并不是过度解读，是关卡设计师精湛的设计和长时间的打磨，我这里仅仅拆了第一层的空间设计。</p>\n<p data-pid=\"qFSTIsdV\">我们除了在一个室内以外，我们在室外也可以感觉自己在一个广义的空间内，正如第一章所讲诉的<b>空间的场</b>，当几个实体结构放在一片空地上，他们会<b>相互产生场力</b>，形成一个空间。</p>\n<p data-pid=\"OKXY9OMe\">比如你站在巨石阵中，即使只有一些石头，但是他们仍然让你感觉你处于空间中。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-41408d8de250ce1a1446ac86b1792c65_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1104\" data-rawheight=\"622\" class=\"origin_image zh-lightbox-thumb\" width=\"1104\" data-original=\"https://pic2.zhimg.com/v2-41408d8de250ce1a1446ac86b1792c65_r.jpg\"></figure><h3><b>用点定义空间</b></h3>\n<p data-pid=\"bWHSaHjY\">我们可以使用点来定义空间，分别放置四个杂物或者其他实体在四个点上，这时候杂物充当了点的作用，这种案例在实际游戏关卡中其实是比较难找的，但是恰好游戏中有着这样的空间。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-edf37150dd9afc2b857e57b6b5f894de_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1407\" data-rawheight=\"743\" class=\"origin_image zh-lightbox-thumb\" width=\"1407\" data-original=\"https://pic3.zhimg.com/v2-edf37150dd9afc2b857e57b6b5f894de_r.jpg\"></figure><p data-pid=\"f3r20nir\">虽然没有太多的高度和体积感，但是这个空间有一种联系感，这些杂物创造了一个正形空间。它们与外面的负形空间是对立的，你会觉得置身于这些杂物中有一种封闭感，这也同样划分了这两个npc（这个我们后面再谈）</p>\n<p data-pid=\"iEgshucs\">可以上面的看到左侧的铁桶是层叠的，它们已经不是一个完美的点了，它们有点像一条线。它带有一种方向感，它们暗示了这里有一个空间的体积和意图。</p>\n<h3><b>用线定义空间</b></h3>\n<p data-pid=\"iyQZPLmN\">让我们放入一个完整的柱子进去，这个柱子的主要意义在于定义了一个空间体积的上限。</p>\n<p data-pid=\"-C1jMGYj\">即使四个角的点并不完整了，但是一条线的加入仍然让这个空间被定义了。这形成了一个更明确的边界，至少比点更清楚，创造了一种沿着地面的正方形图像，创造了体积感。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-00399926e1c82d6f50ddd8b908f330a3_b.jpg\" data-size=\"normal\" data-rawwidth=\"1404\" data-rawheight=\"742\" class=\"origin_image zh-lightbox-thumb\" width=\"1404\" data-original=\"https://pic4.zhimg.com/v2-00399926e1c82d6f50ddd8b908f330a3_r.jpg\"><figcaption>为什么屋顶上要放一个叠这么高的路障，是不是过度解读了</figcaption></figure><p data-pid=\"hlUQjKqM\">当这条引导用的霓虹灯线和柱子连接，中间<b>使用路障加固这个形体</b>，这形成更多隐形的线，它们创造了一个平面的强烈图像，线性元素能够创造出一种可以度量空间的感觉。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-3b4bd40604b2ffa7cef680b3d7f97d8a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1400\" data-rawheight=\"748\" class=\"origin_image zh-lightbox-thumb\" width=\"1400\" data-original=\"https://pic3.zhimg.com/v2-3b4bd40604b2ffa7cef680b3d7f97d8a_r.jpg\"></figure><h3><b>用面定义空间</b></h3>\n<p data-pid=\"oFIW_HU9\">上图使用了虚拟的面来定义空间，当然也借助了底面，面对于空间的定义已经非常直接了。</p>\n<p data-pid=\"KodMAgCV\">面可以简单分为三种类型：<b>底面（地面）、墙面、顶面。</b></p>\n<p data-pid=\"d9IehZmo\">这三个平面的类型，影响了我们如何寻找空间，也影响了我们如何想象空间，以及我们如何与空间互动和被空间影响。</p>\n<p data-pid=\"74pEAy9n\"><b>用地面定义空间</b></p>\n<p data-pid=\"coDQbeR3\">如果想要打造体积感，用地面是很难做到的，但把它和一些线性元素结合起来很快就会唤起那种感觉。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-35d5e33a440205a56f5bdbd57b802ddf_b.jpg\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1031\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-35d5e33a440205a56f5bdbd57b802ddf_r.jpg\"><figcaption>仅仅使用一条线</figcaption></figure><p data-pid=\"LFIHr8Yk\">将它与单一的线结合，就可以几乎创造整个体积感，虽然看不见这个结构任何的其他细节，但是这个结构的概念依然存在。</p>\n<p data-pid=\"gVw_Yllv\">当然我们也可以只是用一个具有体积的地面来打造一个不是那么具有体积感的开放空间。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-a67a27e0de92135f20acaeca9d20b787_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1389\" data-rawheight=\"744\" class=\"origin_image zh-lightbox-thumb\" width=\"1389\" data-original=\"https://pic4.zhimg.com/v2-a67a27e0de92135f20acaeca9d20b787_r.jpg\"></figure><p data-pid=\"nBozfok5\">我们仅仅使用<b>台阶</b>，无论是往高还是内凹，会让我们的结构更稳定，为了进入这个空间有了更多的障碍，我们必须走上台阶，当然从进入来说并不是很大的障碍。但这很重要，这把它定义成一个<b>有作用的空间。</b></p>\n<p data-pid=\"5CwfaIl2\">如果使用陷入地面的方法来观察它，可能会更具有体积感，这实际上更像是对一个既定空间的观察，而不是上台阶。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-4f2faff2327d2a3a32fd1a5fd25f237b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1396\" data-rawheight=\"743\" class=\"origin_image zh-lightbox-thumb\" width=\"1396\" data-original=\"https://pic4.zhimg.com/v2-4f2faff2327d2a3a32fd1a5fd25f237b_r.jpg\"></figure><p data-pid=\"O8GjbbKM\"><b>用墙面定义空间</b></p>\n<p data-pid=\"JGpC6f-9\">当然你也可以用墙面来打造空间，是同样的道理。比如说利用一个完整墙面和一些矮墙或者栏杆。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-f2731055be056ec11dc9faff4567263e_b.jpg\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1031\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic3.zhimg.com/v2-f2731055be056ec11dc9faff4567263e_r.jpg\"><figcaption>为什么盆栽放在右侧角落而不是中间</figcaption></figure><p data-pid=\"FXp22Iai\">这个空间很有意思，各位现在应该知道为什么盆栽和桌子杂物要放在左右侧角落了。但是这个空间的这块木板斜坡，把原本定义空间的台阶打破了，衔接和外部的空间。这个空间应该当成一个<b>单空间内的子空间</b>来看待，铁桶堆也印证了这一点。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-545c2db26381b8cd17b16d7ef6169873_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1404\" data-rawheight=\"752\" class=\"origin_image zh-lightbox-thumb\" width=\"1404\" data-original=\"https://pic4.zhimg.com/v2-545c2db26381b8cd17b16d7ef6169873_r.jpg\"></figure><p data-pid=\"9oCbgRRt\">这个后面我们再讲。</p>\n<p data-pid=\"nVq8BAr1\"><b>用顶面定义空间</b></p>\n<p data-pid=\"waYt5HrO\">很少有只使用一个顶面来打造空间的例子，就像上图，很多顶面是无法单独存在的（在物理情况下），它需要一些支撑物。但是《Stray》中就有，不然为什么叫做教科书呢？</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-68a2c0744b15bd23f04547c5d5706614_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1407\" data-rawheight=\"756\" class=\"origin_image zh-lightbox-thumb\" width=\"1407\" data-original=\"https://pic1.zhimg.com/v2-68a2c0744b15bd23f04547c5d5706614_r.jpg\"></figure><p data-pid=\"OTYvssyN\">当我们谈到圈地的时候，关注的想法除了定义以及空间如何被很好地定义之外，还有一些点：</p>\n<p data-pid=\"W4kUKHPz\">观众是否能够理解你试图表达的空间类型？</p>\n<p data-pid=\"6aG5qOd-\">空间是正形空间还是负形空间？</p>\n<p data-pid=\"UbdefC1V\">如何影响玩家路线的流动？</p>\n<p data-pid=\"szW94Nr6\">空间是如何被定义，如何暗示空间？</p>\n<p data-pid=\"HQuYR5tK\">空间中的空间是如何影响整体的？</p>\n<p data-pid=\"uRzx4I7s\">就比如这个用顶面定义的空间，它是开放的，它的正形性很低，玩家几乎不会在这里停留太久。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-6f6ee39860f627ba5cdfc3d5011f5457_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1398\" data-rawheight=\"750\" class=\"origin_image zh-lightbox-thumb\" width=\"1398\" data-original=\"https://pic4.zhimg.com/v2-6f6ee39860f627ba5cdfc3d5011f5457_r.jpg\"></figure><p data-pid=\"uVsg1eXF\">当我们定义了空间，我们可以使用上一章里的【调整空间定义】的方法，来对于玩家认知这个空间，以及这个空间的开放程度进行调节，这有利于控制玩家对于自己目前的空间位置的认知，以及出入一个空间的意图影响。我这里不再赘述。</p>\n<h2><b>多空间构成</b></h2>\n<p data-pid=\"McPtvXwt\">空间的构成和图像的构成很多时候是息息相关的，其本质上的差异只是三维与二维的不同，人们在理解空间上，很多时候仍然依靠视觉图像上的思维去认知。这里就不提及图像构成的内容了。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-db685fb0044f32508ae8259df5d62c39_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1101\" data-rawheight=\"565\" class=\"origin_image zh-lightbox-thumb\" width=\"1101\" data-original=\"https://pic2.zhimg.com/v2-db685fb0044f32508ae8259df5d62c39_r.jpg\"></figure><p data-pid=\"ofNz-kLH\">假设这是一个空间建筑的顶视图，我们很难通过场景来理解，这些物体是如何联系组织的，这里有太多的信息了，没有什么特殊的意义，<b>这么多身份意味着所有身份在这里都是失去了</b>。</p>\n<p data-pid=\"5Ldg3gwt\">但是我们仍然可以对其进行一些归类，因为他们的长短是有异同之处的。</p>\n<p data-pid=\"nYDBjFns\">我们可以用各种方法去加强他们之间的联系性，比如大小，形状，颜色。我这里就使用颜色。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-f5b284c1325d233f9a188baed0120183_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1155\" data-rawheight=\"555\" class=\"origin_image zh-lightbox-thumb\" width=\"1155\" data-original=\"https://pic4.zhimg.com/v2-f5b284c1325d233f9a188baed0120183_r.jpg\"></figure><p data-pid=\"SNiOiHQg\">可以看到，即使在左上角的矩形与其他的矩形没有连接关系，但是我们仍然能感受到他们之间有某种联系。</p>\n<p data-pid=\"VkSpLAzW\">我们可以看到一些不同的空间之间彼此关联，当我们进入空间构成，空间构成帮助我们布置空间，探索空间，我们了解我们的位置，我们在整个空间的位置。更多时候我们使用连接，或者其他更隐晦的方式来联系多个空间。</p>\n<h3>节点网格与决策点</h3>\n<p data-pid=\"mrozCgvX\">这是贫民窟关卡的第一层空间地图。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-9b5c7c86448d0c3d7182ff966415279e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1242\" data-rawheight=\"875\" class=\"origin_image zh-lightbox-thumb\" width=\"1242\" data-original=\"https://pic3.zhimg.com/v2-9b5c7c86448d0c3d7182ff966415279e_r.jpg\"></figure><p data-pid=\"d2LVGXmo\">我们可以画出这个空间玩家的行进路线可能。虽然他们肯定会走弯路或者斜线，甚至可能在一些地方绕圈，但本质上是这样的。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-a6e7960b0e912cb625ff3f348489935e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1078\" data-rawheight=\"884\" class=\"origin_image zh-lightbox-thumb\" width=\"1078\" data-original=\"https://pic3.zhimg.com/v2-a6e7960b0e912cb625ff3f348489935e_r.jpg\"></figure><p data-pid=\"gGAp4hkr\">玩家可能在一些位置发生选择，我们叫做决策点。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-ee519b5d3d79adc75b3f0d3e0efb3ec5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1145\" data-rawheight=\"810\" class=\"origin_image zh-lightbox-thumb\" width=\"1145\" data-original=\"https://pic2.zhimg.com/v2-ee519b5d3d79adc75b3f0d3e0efb3ec5_r.jpg\"></figure><p data-pid=\"6xEzYNXp\">在建筑学中的寻路设计里，这被称为节点网格（Node Network）。</p>\n<p data-pid=\"-Z81uQCv\">本质上，这就是给玩家发信息，当你创造关卡的时候，你应该想在哪里保证玩家会经过，我想让他们把注意力转移到哪里。</p>\n<p data-pid=\"EX2XvBye\">一旦进入这个空间，我们需要给玩家设置一个探索的步骤构图，这些空间如何引导玩家流向另一个空间。你可以发现在贫民窟关卡的决策点附近，一般都有明显的指向性方式或者指示牌。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-68614962960e015770cb53e2a86dab5d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-68614962960e015770cb53e2a86dab5d_r.jpg\"></figure><p data-pid=\"8neR4GAt\">而每个决策点，都是一个玩家会经过的关键点，是单独的摄像机镜头，静态的图像，但这一整个关卡整体流动的是空间构成，比如建筑和建筑，空间和空间是如何连接的。</p>\n<p data-pid=\"MgcqOOdV\">我们可以回头使用玩家第一次进入贫民窟的关卡流向来举例。</p>\n<h3>利用空间构成打造叙事节奏</h3>\n<p data-pid=\"2-TZLl8G\">单个空间打造的Mood是固定，我们姑且称之为“氛围”；而多空间之间切换时，可以理解为多个氛围之间变换，这形成了<b>叙事的节奏</b>。</p>\n<p data-pid=\"Z43D_3gI\">空间构成传达世界观，利用建筑和空间构成，尤其是空间的层次和组织，它能够讲述很多特定空间的意图。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-8baf9bf5dccf2417e0acbc1738e95ede_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1904\" data-rawheight=\"1022\" class=\"origin_image zh-lightbox-thumb\" width=\"1904\" data-original=\"https://pic3.zhimg.com/v2-8baf9bf5dccf2417e0acbc1738e95ede_r.jpg\"></figure><p data-pid=\"CuPr8uE7\">当玩家第一次进入这个空间，狭窄的通道加上前侧的冷光，这里的氛围是谨慎小心的，有一些胆怯。而远处的暖黄色光则让人觉得那里的空间氛围会更温暖，更安全。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-239b976507e8311d4cc8e92ae42b34d6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1030\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic3.zhimg.com/v2-239b976507e8311d4cc8e92ae42b34d6_r.jpg\"></figure><p data-pid=\"bn1tQJTk\">不幸的是当机器人原住民发现我们之后拉响了警报，全新的红色光效出现，加上BGM和这里狭窄的空间构成，我们开始紧张起来，叙事节奏加快。</p>\n<p data-pid=\"j49rDIgm\">与此同时，玩家的移动意向也加强，大多数玩家会加快脚步前往下一个空间。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-71112d67213ab5f042fef1dfd057de41_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-71112d67213ab5f042fef1dfd057de41_r.jpg\"></figure><p data-pid=\"0YSMXHuw\">当我们来到这个空间时，蓝色的墙和青黄色的灯光，打散了红光的危机感，空间构成也更加开阔。好奇的氛围取代了之前的紧张感，玩家会倾向于在这里进行一些观察，当然这里也很值得观察，这里有奶奶的围巾店，编程店和路牌。</p>\n<p data-pid=\"C0fFOo-u\">特别是围巾店，这是一个元素很多的空间，并且它是面向路口开放的，可以进入这个空间进行一段时间的探索，这里面是一个单独的正形空间！</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-0dee11bc5975fd08a372e442406d4da6_b.jpg\" data-size=\"normal\" data-rawwidth=\"1277\" data-rawheight=\"719\" class=\"origin_image zh-lightbox-thumb\" width=\"1277\" data-original=\"https://pic3.zhimg.com/v2-0dee11bc5975fd08a372e442406d4da6_r.jpg\"><figcaption>奶奶第一次是不在的</figcaption></figure><p data-pid=\"XGpU2Fo4\">这是同时使用了三个面（地面，墙面，顶面）以及许多点与线的元素打造的空间，它的正形性是非常完善的，它有强烈的理由让玩家在里面看一看。</p>\n<p data-pid=\"hSdkHAlJ\">当然这里的地毯也是一个会让玩家稍作停留的空间（反正我是跟这个招财猫玩了一会</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-137119021e75845b33e48ce96767448b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1039\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-137119021e75845b33e48ce96767448b_r.jpg\"></figure><p data-pid=\"szsmv7K5\">接下来我们转过弯之后，又重新被警报灯和红光带回略微紧张的情绪。这里有一小段台阶，如果你注意的话，这台阶的正上方有一段管道穿过上空，这个细节我们后面会提到。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-1c89ace0cf0e70980be487a23312e7bd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1039\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-1c89ace0cf0e70980be487a23312e7bd_r.jpg\"></figure><p data-pid=\"ELTSbrhO\">如果你这时候在这个台阶两侧左右横跳，你会很明显感受到两种不同的氛围在这里被无形的墙隔离。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-816cfa40c027282cac0b6fd4a4f48ead_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1039\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-816cfa40c027282cac0b6fd4a4f48ead_r.jpg\"></figure><p data-pid=\"3Z1tOlmv\">我并不觉得这是PPV的作用，我认为很大程度上这里的氛围取决于玩家身上是什么颜色的灯光效果，这其实是色彩心理学的进一步内容。</p>\n<p data-pid=\"bgioU77x\">当红色的光占领了那一块区域的GI时，玩家一旦进入光照探针范围内，身上的光即会变红，<b>人们对于自己身上的颜色非常在意</b>，当你身上被红光渗透时，你感到更加紧张。</p>\n<p data-pid=\"LKhriOQN\">我在Research《刺客信条：英灵殿》的Lightning时，也同样发现了这样的意图。当玩家进入那块灯光GI下时，气氛开始变得令人紧张。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-1f6a550bc29d35df2b2632be5b322fdc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2560\" data-rawheight=\"1440\" class=\"origin_image zh-lightbox-thumb\" width=\"2560\" data-original=\"https://pic1.zhimg.com/v2-1f6a550bc29d35df2b2632be5b322fdc_r.jpg\"></figure><p data-pid=\"i2Enz2pY\">当来到这里时，你是否会觉得接下来会进行战斗？可以想想是什么影响了你的判断。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-74c04681da1db010d970baa9b3cdf21c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1030\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-74c04681da1db010d970baa9b3cdf21c_r.jpg\"></figure><h3>在决策点打造关键构图</h3>\n<p data-pid=\"eQuV5ROv\">很多时候，决策点的镜头是很单纯的。单纯的艺术表达，什么感觉好，什么有趣，让人兴奋。我们希望玩家能够感受到他们不断移动的空间，有很多很棒的静态构图，这让我们感到关卡很有活力，赏心悦目。</p>\n<p data-pid=\"BxDxfalk\">当我在这里发现这面青蓝色的墙被红光影响时，是非常漂亮的，并且远处的路灯和指示牌也是很完美的构图。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-8855b77c9de19db46da82f8f71e79270_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-8855b77c9de19db46da82f8f71e79270_r.jpg\"></figure><h3>色彩故事板（Color Script）</h3>\n<p data-pid=\"S7fT3MsU\">色彩脚本是一个用于讲述故事的画面插图集，我们在整个游戏中应用的颜色脚本阐述每个关卡的色调和氛围。</p>\n<p data-pid=\"SuAYeFJg\">这是一个游戏关卡设计前期的美术脚本，是关卡构成，色彩，当然包括灯光的指导脚本，它将会定义一个关卡的节奏是什么样的叙事节奏。</p>\n<p data-pid=\"r41Ei1li\">正如我们上面小节提到的利用空间打造故事节奏，这种方案不仅仅是被使用在《Stray》中，在很多游戏中也同样被使用。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-e56874398765786081a9209b3fe741d5_b.jpg\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1813\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-e56874398765786081a9209b3fe741d5_r.jpg\"><figcaption>《SIFU》色彩脚本</figcaption></figure><p data-pid=\"tPCxm3we\">最基础的“起承转合”，游戏关卡也遵循这个叙事节奏原理，我们在第一次进入【贫民窟】关卡时正是这样的节奏。</p>\n<h2>空间组织</h2>\n<p data-pid=\"kvPkkReH\">正如上面【多空间构成】小节所述，当我有多个空间时，如果他们是无序的，身份混乱的，那么是非常难以让人理解的。我们需要为其进行构图，就像图像一样，创造它们之间的联系与差异，通过规则和对比来方便于理解。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-7216407de15312f9fb8808b5e508d4dc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1068\" data-rawheight=\"833\" class=\"origin_image zh-lightbox-thumb\" width=\"1068\" data-original=\"https://pic1.zhimg.com/v2-7216407de15312f9fb8808b5e508d4dc_r.jpg\"></figure><p data-pid=\"chGgQsjS\">如果玩家的决策点是如此多的，且关卡流向是复杂的，这让这些空间看起来并没有什么联系，很多时候它们甚至没有连接在一起。</p>\n<p data-pid=\"r8tcrY4S\">为此，关卡设计师在规划玩家第一次进入的路线时，制造了很多限制，让玩家只能按照设计师的意图进行空间流动。因为玩家最后是需要在电梯间前进行过场动画剧情的。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-4cead501fc908222a24cc323f673000b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1069\" data-rawheight=\"859\" class=\"origin_image zh-lightbox-thumb\" width=\"1069\" data-original=\"https://pic4.zhimg.com/v2-4cead501fc908222a24cc323f673000b_r.jpg\"></figure><p data-pid=\"TAxm5pse\">关卡设计师使用了可关闭的门和不可直接通过的铁丝网来限制玩家的流向，并且限制跳跃。确保玩家按照规划到达目标区域。</p>\n<p data-pid=\"gMK-rkef\">除了门和铁丝网之外，还有我们之前谈论定义空间时候使用的一些元素，比如台阶。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-28d12d678d79e7f432972bf412fcff04_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"933\" data-rawheight=\"800\" class=\"origin_image zh-lightbox-thumb\" width=\"933\" data-original=\"https://pic1.zhimg.com/v2-28d12d678d79e7f432972bf412fcff04_r.jpg\"></figure><p data-pid=\"1yfrvw4t\">这些边界给空间定义了组织，哪几个空间是连接的，哪一些空间的身份是相同或者有联系的。通过边界去进行归类和组织，有关系的空间同归属在一个组织下，这也与世界观和空间内的叙事有关系。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-5c0a09f637a6f78c1d693a206c78fbc2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1066\" data-rawheight=\"879\" class=\"origin_image zh-lightbox-thumb\" width=\"1066\" data-original=\"https://pic3.zhimg.com/v2-5c0a09f637a6f78c1d693a206c78fbc2_r.jpg\"></figure><p data-pid=\"Mx3xAT6A\">空间组织并不是完全跟距离呈正比关系，而是在于如何通过划分去组织空间。</p>\n<p data-pid=\"rLN7y7co\">坐在【编程店】门前面的两位NPC，完全跟编程空间组织下的理性身份不符合，而于【奶奶编织】的感性形象更类似，并且它们有着类似的元素——披巾。因此这里的阶梯是非常必要的，它划分了空间组织，把主导空间给确定下来。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-40f8cd9c30a17e80817f9cf6e9c467db_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-40f8cd9c30a17e80817f9cf6e9c467db_r.jpg\"></figure><h3>主导空间</h3>\n<p data-pid=\"5DTJGc5c\">我对于上面划分出来的空间组织进行了简要的身份和其代表的内涵描述。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-22addedb391026084ffbd1ca1db95e95_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"996\" data-rawheight=\"854\" class=\"origin_image zh-lightbox-thumb\" width=\"996\" data-original=\"https://pic2.zhimg.com/v2-22addedb391026084ffbd1ca1db95e95_r.jpg\"></figure><p data-pid=\"j9ivUtVH\">一般空间的组织中，会存在主导空间和其卫星空间，主导空间对其卫星空间具有<b>支配关系</b>，可以理解为主导空间的身份会溢出到卫星空间，卫星空间会拥有主导空间的属性。</p>\n<p data-pid=\"lv0ZuNJ4\">有很多因素会影响一个空间组织中的主导关系，如何让一个空间成为主导空间，这里简单来说就是一个有着强身份的空间，影响了周围的空间。</p>\n<h3>划分空间组织</h3>\n<p data-pid=\"-S_v3MQl\">划分空间组织的方法本质上和定义空间是类似的，比如我们看【死路口】这块区域，为什么它的空间组织到达这里就中断了？</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-2c03770ad3b58cb8b14ed8d0684564bb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1082\" data-rawheight=\"720\" class=\"origin_image zh-lightbox-thumb\" width=\"1082\" data-original=\"https://pic4.zhimg.com/v2-2c03770ad3b58cb8b14ed8d0684564bb_r.jpg\"></figure><p data-pid=\"-g3X6hGK\">这里的空间地面上有一个木板倒在这条线上，创造了一个线的划分，而上面顶面也与【死路口】的组织空间不同，形成了一个边界。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-dd55b5138fdc8952f0bc2998dee915d7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-dd55b5138fdc8952f0bc2998dee915d7_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-d2e2846c48ad9ce1a25b724fce4edd1f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1179\" data-rawheight=\"614\" class=\"origin_image zh-lightbox-thumb\" width=\"1179\" data-original=\"https://pic4.zhimg.com/v2-d2e2846c48ad9ce1a25b724fce4edd1f_r.jpg\"></figure><p data-pid=\"_ldmKp1n\">在游戏中，当玩家走过这个边界之后，可以明显的感觉到氛围的不同，类似的例子还有很多。</p>\n<p data-pid=\"7mff4Xjj\">在贫民窟也有一些弱划分的例子，比如在洗衣店门口的区域，使用从天上穿过的管道进行划分。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-c6de9c2a4666c215150535d98b136917_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1267\" data-rawheight=\"711\" class=\"origin_image zh-lightbox-thumb\" width=\"1267\" data-original=\"https://pic4.zhimg.com/v2-c6de9c2a4666c215150535d98b136917_r.jpg\"></figure><p data-pid=\"0VWSWYFT\">这些结构和定义与“门”的作用相似，目的在于让玩家知道自己来到了一个新的空间组织内，这里有全新的空间身份。同样我们也可以使用氛围来区分身份，比如使用灯光来切换氛围。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-f5ddc46cbc2436d95f7363c77a9cee17_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-f5ddc46cbc2436d95f7363c77a9cee17_r.jpg\"></figure><p data-pid=\"gQlvC31u\">空间的组织非常重要，因为其可以帮助玩家快速地记住这些空间之间的关系，就像在文字游戏时，随机无序的词组会让我们难以记住，而将其归类成有意义的近义词进行记忆时，则拥有了层次，这会把书面练习变为<b>思考练习</b>。</p>\n<p data-pid=\"CA7sUsqh\">当我们的空间具有联系时，它们会变成一种<b>相对关系</b>，玩家可以很快理解整个关卡地图的关系。</p>\n<h3>空间身份与叙事</h3>\n<p data-pid=\"uToq8x5J\">当我们在一个空间组织内时，我们可以通过其中的元素来获取这个空间的身份，而其中的叙事也需要具有联系性。同样我们也可以通过其叙事内容，来对空间的组织进行划分。</p>\n<p data-pid=\"Z3sCNQFj\">在《Stray》中我们可以通过与NPC进行对话，来了解这一空间组织下的身份归属。比如在【洗衣店】门前的这个通过上方管道的弱划分，其实并没完全将这两块区域分开，而是一种父子关系。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-8c92daf182a75c0505e39d91afa92b0c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1104\" data-rawheight=\"600\" class=\"origin_image zh-lightbox-thumb\" width=\"1104\" data-original=\"https://pic1.zhimg.com/v2-8c92daf182a75c0505e39d91afa92b0c_r.jpg\"></figure><p data-pid=\"vAoYzxWP\">我们可以通过一位NPC进行验证。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-10003c562dedab93c7569daa4d441a7d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-10003c562dedab93c7569daa4d441a7d_r.jpg\"></figure><p data-pid=\"5LchN0tb\">这位坐在角落的NPC虽然距离洗衣店门口有一些距离，并且是被管道划分在外的，但是它仍是归属于【洗衣/油漆店】的组织下。它仍在谈论着楼上那两个家伙，这里有一种生活的日常感。</p>\n<p data-pid=\"7mN_-Lk0\">空间的叙事内容除了被这个空间本身自带的身份属性，比如【酒吧】的安逸随性，也被空间中的一些特殊元素所影响。这个在电梯间里的“寺庙”就是最好的例子。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-d3083a5a2dca363727a5091071d75429_b.jpg\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-d3083a5a2dca363727a5091071d75429_r.jpg\"><figcaption>为什么这里是个寺庙？</figcaption></figure><h2>空间的象征意义</h2>\n<p data-pid=\"ABef4ipa\">可能接下来的内容会偏向哲学，可能可以当作一些参考或者抛砖引玉的解读，我想这一部分文案策划同学会更感兴趣，当然这也是美术发展为艺术应该拥有的知觉。</p>\n<h3>纪念性建筑</h3>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-66327b3dc7789c004dec9213aea18fa5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-66327b3dc7789c004dec9213aea18fa5_r.jpg\"></figure><p data-pid=\"iB4FJQx0\">纪念性在建筑学中，是指一种可以唤起一种伟大的光环，一种要求公众认可的力量和重力感特性的建筑。通常是大教堂，寺庙之类的。这些空间是拥有很高的顶面，用于激发敬畏的，通过极高的顶面，在我们无法触及的地方。</p>\n<p data-pid=\"etlmGOXA\">这个设计利用了原来宗教建筑的纪念性，让政府或政权取代了神的角色，为了让机器人们去赞美和崇拜它。这个世界观中的上层权力机构成为一种<b>新的宗教</b>。</p>\n<h3>电梯间寺庙</h3>\n<p data-pid=\"BC7WH8bv\">这个电梯间寺庙是很有趣的一个空间，首先它位于这座纪念性建筑的最底层，它代表了被压迫的意义。其次，它是一个很封闭的场所，它的有三个墙面，门也是卷帘门，类似于墙面。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-0091c399d51e616c732e57dc0c79f935_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-0091c399d51e616c732e57dc0c79f935_r.jpg\"></figure><p data-pid=\"cOSx6gBl\"><b>墙面</b></p>\n<p data-pid=\"kC4kb63d\">墙面代表社会，主要用来创造空间的边界，和我们的基平面相反。我们通过触摸与它互动，只有在我们想和墙面对抗的时候，我们才会选择互动。</p>\n<p data-pid=\"l4LBTI5d\">所以墙面是对立的，因为它们会限制我们的能力，可能还限制了我们无声地运动，我们不能轻易地通过它们，需要对抗它，但它们也可以让人感到舒适，它们可以很友好，提供隐私和安全，免受敌人伤害。</p>\n<p data-pid=\"n4joQRnV\">四个墙面代表着这个空间中的居民的胆怯，守旧。如果你给它们出示一些“外来者”的物品时，你会得到不可能离开这里的回答。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-335a623e37f91c163db96b86215786e8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-335a623e37f91c163db96b86215786e8_r.jpg\"></figure><p data-pid=\"Ls0h6v2I\">顶面本该是很高的，但是因为电梯的掉落，吊在上方，用一些篷布临时保护了上方的空间。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-52bcc80a6cf498f08a197c936a0426a6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic3.zhimg.com/v2-52bcc80a6cf498f08a197c936a0426a6_r.jpg\"></figure><p data-pid=\"8s4UrSw-\">如果我们走进里面，去翻译墙上的内容时，我们会知道，它们的信仰对象是人类。掉落的顶面意味着它们的信仰已经陨落。</p>\n<h3><b>顶面的象征</b></h3>\n<p data-pid=\"aV3JSFkx\">它的存在比其他两个面有着更强烈的庇护和封闭的感觉，你知道顶面就在上方，并不只是物理边界，它们倾向于定义一种情感基调。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-1e5adda1a2cc48b3d87f25339442d312_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic3.zhimg.com/v2-1e5adda1a2cc48b3d87f25339442d312_r.jpg\"></figure><p data-pid=\"h9-kZK0W\">我们第一次发觉我们一直处于一个穹顶之下是在这里。而后我们的剧情也暗示了这个世界观：人类为了在环境恶化中庇护自己，把自己关在了这个穹顶之下，但是却没想到因为封闭权力机构的自私贪婪，让人类最终走向了灭绝。</p>\n<p data-pid=\"xk0K60sd\">而这个穹顶，包括这个纪念性的电梯，也会一直伴随游戏的世界观，在后续都会遇到信仰权力机构宗教的信徒和类似的穿着的机器人。</p>\n<h3>空间层次象征</h3>\n<p data-pid=\"iaKuSuBg\">如果学过高中地理，应该知道高档住宅区一般都会选择位于上风上水的地方。上风，即风向的上风向；上水，即地势高的地方。住的地势高逐渐成为了一种地位的象征，对于空间来说也是如此。</p>\n<p data-pid=\"tyba20wi\">在【贫民窟】这个关卡中，有着向往中城区，逃离贫民窟的“外来者”都住在，或者曾经住在高层公寓里。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-43a689744079a8eb2c2b509036e8bae5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-43a689744079a8eb2c2b509036e8bae5_r.jpg\"></figure><p data-pid=\"2ttAJmf0\">而向往真实的蓝天的NPC，也躺在楼顶，最高权力机构则在电梯顶层，最守旧的信徒在电梯底层。这些都是空间层次的象征。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-5489ea76ddf67806ab288e6afa4d5066_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"865\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic3.zhimg.com/v2-5489ea76ddf67806ab288e6afa4d5066_r.jpg\"></figure><h2>未完待续</h2>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhen-he-9?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">枕鹤</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/550192071?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"近年来有哪些国产漫画值得推荐？","date":"2022-08-15 10:13:17","description":"\n<p data-pid=\"VeFzHTv8\">中国漫画一路走来，跌跌撞撞，有辉煌也有低谷，众多优秀的中国漫画家一直在探索</p>\n<p data-pid=\"vsIO3c-Q\">曾经我们拥有可以创造奇迹的“画王”时代</p>\n<p data-pid=\"Dam_Mw-2\">也经历过纸媒最辉煌的“知音漫客”年代</p>\n<p data-pid=\"54fwx1-B\">如今国内正在备受争议的“条漫”变革</p>\n<p data-pid=\"jgVtBn_9\">每一个时代的背后都有些无数优秀的中国漫画作品支持，这些优秀作品值得我们铭记，因此我有幸邀请到众多国漫爱好者一起举办了首个知乎国漫圆桌</p>\n<a href=\"https://www.zhihu.com/roundtable/guomanluzaihefang\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-e57952181b74692e59a110a9a0db9c96_l.jpg?source=b1748391\" data-image-width=\"400\" data-image-height=\"400\" class=\"internal\">国漫·路在何方</a><p data-pid=\"fNal-kgb\">在举办圆桌的过程中，我发现了多如繁星的优秀国产漫画，只是因为这样那样的原因，没能被更多的读者发现，于是乎，在圆桌结束之际，我给自己定了一个小目标，希望可以将我自己认为质量不错或者说颇有亮点的国漫作品推荐给大家！</p>\n<p data-pid=\"Q9w1muu2\">而每一部作品我希望是看完以后我都会写一个回答分享给大家，这个回答除了剧情亮点介绍之类，我希望有我的一部分思考在里面分享给大家，如果大家觉得感兴趣的可以自行阅读作品（最好支持正版），这样我也算是帮一部好作品推广了吧！</p>\n<p data-pid=\"Uk3ob6k1\">因此，有了第二个知乎国漫圆桌【那些宝藏中国漫画】</p>\n<a href=\"https://www.zhihu.com/roundtable/neixiebaozangzhonggu\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-70571dd7fd6908102b930ddb554e558b_l.jpg?source=b1748391\" data-image-width=\"400\" data-image-height=\"400\" class=\"internal\">那些宝藏中国漫画</a><p data-pid=\"UiE5vtM-\">这次圆桌中，我补充了不少作品，但是对于真正的优秀中国漫画作品来说，只是沧海一粟，因此接下来的日子里会不断补充这个回答，多想大家介绍优秀的国漫作品。</p>\n<p data-pid=\"NqrQolMM\">废话不多说，以下作品排名不分先后，任君选择</p>\n<h2>中国漫画纸媒杂志盘点</h2>\n<p><img src=\"https://pica.zhimg.com/v2-55fdc223b0efa1c14c9d14bcaecd5766_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\"></p>\n<a href=\"https://www.zhihu.com/answer/2613912451\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-fc1a7cfe6e131d3720615057b752e422_200x0.jpg?source=b1748391\" data-image-width=\"4080\" data-image-height=\"8240\" class=\"internal\">中国漫画纸媒时代有哪些优秀作品？如今这些漫画杂志都还在吗？</a><h2>画书大王国漫作品盘点</h2>\n<a href=\"https://www.zhihu.com/answer/2603044530\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-88a9089ed44053feafdb76095c92e8d4_qhd.jpg?source=b1748391\" data-image-width=\"800\" data-image-height=\"649\" class=\"internal\">《画书大王》(简称画王)中都有哪些经典的国漫作品，包括港台的？</a><h2>知音漫客作品盘点</h2>\n<p data-pid=\"dWG4BX8X\">这是第一个小目标，我会在有生之年将知音漫客曾经连载的所有漫画都写一篇回答。</p>\n<a href=\"https://www.zhihu.com/question/367486176/answer/1523064287\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-f6536b5f8900211abc6609f663c8b73d_qhd.jpg?source=b1748391\" data-image-width=\"4000\" data-image-height=\"3000\" class=\"internal\">你最喜欢《知音漫客》里的哪一部漫画?</a><h3>颜开《星海镖师》</h3>\n<a href=\"https://www.zhihu.com/question/29169402/answer/1577827478\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-643b02979febaaaf68bd2e31c0b31fd2_qhd.jpg?source=b1748391\" data-image-width=\"1440\" data-image-height=\"1111\" class=\"internal\">如何评价国漫《星海镖师》？</a><h3>颜开、陈翔、郑旭升《神精榜》</h3>\n<p data-pid=\"v39m8E_q\">待定</p>\n<h3>极乐鸟《暴走邻家》</h3>\n<a href=\"https://www.zhihu.com/question/22962863/answer/2255225031\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-db594cd9f687379bf630a6579a6953af_qhd.jpg?source=b1748391\" data-image-width=\"1000\" data-image-height=\"731\" class=\"internal\">如何评价国产漫画《暴走邻家》？</a><h3>米二《九九八十一》</h3>\n<a href=\"https://www.zhihu.com/question/40283269/answer/2233406464\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-0a6a22b3f06fc792e5661fb8f9ada482_200x0.jpg?source=b1748391\" data-image-width=\"720\" data-image-height=\"1026\" class=\"internal\">如何评价漫画《九九八十一》？</a><h3>米二《大爱project》</h3>\n<a href=\"https://www.zhihu.com/question/404776616/answer/1522600897\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://picx.zhimg.com/v2-2e395b7fdd6ada648846a448a623c2de_200x0.jpg?source=b1748391\" data-image-width=\"900\" data-image-height=\"1229\" class=\"internal\">米二的《一人之下》里是多少《大爱project》和《九九八十一》的角色或彩蛋？</a><h3>周洪滨、小松《偷星九月天》</h3>\n<a href=\"https://www.zhihu.com/question/388603499/answer/2206353370\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-53d1b9122550761e206144004578daa3_200x0.jpg?source=b1748391\" data-image-width=\"726\" data-image-height=\"1171\" class=\"internal\">你见过哪些创作很烂热度却很高的漫画？</a><h3>任翔《武道球魂》</h3>\n<a href=\"https://www.zhihu.com/question/490370257/answer/2234882096\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://picx.zhimg.com/v2-081c7201a176fa737e8b9552ac4388a4_200x0.jpg?source=b1748391\" data-image-width=\"720\" data-image-height=\"1006\" class=\"internal\">如何评价知音漫客漫画《武道球魂》？</a><h3>唐尼《零班编年史》</h3>\n<a href=\"https://www.zhihu.com/answer/2605507630\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-ef7dc21e709cf04508cdc46140ecfcd8_200x0.jpg?source=b1748391\" data-image-width=\"1253\" data-image-height=\"1772\" class=\"internal\">如何评价知音漫客漫画《零班编年史》，为什么现在都很难找得到了？</a><h3>章磊《蝴蝶少年》</h3>\n<a href=\"https://www.zhihu.com/answer/2604749536\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-0a97dff513c2bab45cc1dc51a41c2e59_qhd.jpg?source=b1748391\" data-image-width=\"1440\" data-image-height=\"879\" class=\"internal\">如何评价中国漫画家章磊以及他的国产漫画作品《蝴蝶少年》？</a><h3>李建《魔人DEVIL》</h3>\n<a href=\"https://www.zhihu.com/answer/2607305744\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-c553f8b46f2299afa241dd6e843a2c48_200x0.jpg?source=b1748391\" data-image-width=\"1279\" data-image-height=\"1706\" class=\"internal\">如何评价李建在知音漫客上的连载漫画《魔人DEVIL》?</a><h3>李雷雷《阿SA专用》</h3>\n<a href=\"https://www.zhihu.com/answer/2617235475\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-8801d7fb61937f326a86abc2d29f3d35_200x0.jpg?source=b1748391\" data-image-width=\"1280\" data-image-height=\"2222\" class=\"internal\">如何评价李雷雷连载漫画《阿SA专用》以及其它作品?</a><h3>Q斯基《心之海》</h3>\n<a href=\"https://www.zhihu.com/answer/2617928659\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-7659fd98a8903db2d277e58236ea9517_200x0.jpg?source=b1748391\" data-image-width=\"1280\" data-image-height=\"2420\" class=\"internal\">如何评价Q斯基在知音漫客连载的漫画《心之海》？</a><h3>王鹏《御狐之绊》</h3>\n<a href=\"https://www.zhihu.com/answer/2619514623\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-31b5e687f41da4d785edca691a353e3a_200x0.jpg?source=b1748391\" data-image-width=\"2053\" data-image-height=\"3262\" class=\"internal\">如何评价国产漫画《御狐之绊》?</a><h3>北巷《绯色安娜》《云海之上》《土星玩具店》</h3>\n<a href=\"https://www.zhihu.com/answer/2624773112\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://picx.zhimg.com/v2-17c1a4dc798e4fc108cafaedeb4f4792_200x0.jpg?source=b1748391\" data-image-width=\"853\" data-image-height=\"1200\" class=\"internal\">如何评价中国漫画家北巷的连载作品《绯色安娜》、《云海之上》等?</a><h3>知音漫客新人王短篇</h3>\n<a href=\"https://www.zhihu.com/answer/2612477341\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://picx.zhimg.com/v2-3f4d362ce12544b24bb9b42dcba898b0_200x0.jpg?source=b1748391\" data-image-width=\"580\" data-image-height=\"806\" class=\"internal\">知音漫客上有哪些短篇漫画让你印象深刻？</a><h3>短篇《我的阿利米斯》</h3>\n<a href=\"https://www.zhihu.com/question/396646220/answer/1538905744\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-ef3b32b54a33cc5c2cbc89b41c616fa4_200x0.jpg?source=b1748391\" data-image-width=\"800\" data-image-height=\"1134\" class=\"internal\">知音漫客上的一篇短篇漫画，不记得名字了，请问知道名字吗？</a><h3>新漫画</h3>\n<a href=\"https://www.zhihu.com/question/486120725/answer/2240751853\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-875dfdea9b9908b096391d1bf585eb4d_qhd.jpg?source=b1748391\" data-image-width=\"1440\" data-image-height=\"1087\" class=\"internal\">如何评价第五届新漫画国际原创漫画大赛？入围的哪些作品令你眼前一亮？</a><h2>漫画世界</h2>\n<h3>敖幼祥《乌龙院》</h3>\n<a href=\"https://www.zhihu.com/answer/2603789018\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-4686d10b61c025d647543f926a101b29_qhd.jpg?source=b1748391\" data-image-width=\"1080\" data-image-height=\"810\" class=\"internal\">如何评价敖幼祥老师的代表作《乌龙院》系列？</a><h2>陈晓韵《泡面超人》</h2>\n<a href=\"https://www.zhihu.com/answer/2609215337\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-a003678e7279cc1baa044fc799458a47_200x0.jpg?source=b1748391\" data-image-width=\"1280\" data-image-height=\"1929\" class=\"internal\">如何看待《泡面超人》这本漫画？</a><h2>暴雨《手机少年》</h2>\n<a href=\"https://www.zhihu.com/answer/2621472713\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-e24aa2620c4ec5976ce742b84783fe0d_qhd.jpg?source=b1748391\" data-image-width=\"1440\" data-image-height=\"1019\" class=\"internal\">如何评价国漫《手机少年》？</a><h2>漫画show</h2>\n<h3>白骁《4.9x4.9》</h3>\n<a href=\"https://www.zhihu.com/answer/2610832574\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-5b0bee7b62096f114b8f4cbbdcc861f7_200x0.jpg?source=b1748391\" data-image-width=\"720\" data-image-height=\"907\" class=\"internal\">如何评价白骁编绘的拳击漫画作品《4.9x4.9》?</a><h3>于彦舒《扳手少年》</h3>\n<a href=\"https://www.zhihu.com/answer/2622602899\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-45b87e454afd9ff3d50a7b3553345dc6_200x0.jpg?source=b1748391\" data-image-width=\"700\" data-image-height=\"962\" class=\"internal\">如何评价于彦舒漫画作品《扳手少年》？</a><h2>bilibili漫画</h2>\n<h3>核燃黑猫《魔王全书》</h3>\n<a href=\"https://www.zhihu.com/answer/2611600825\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-57e98d6a6bf0ac6cf614d4abf6aa519c_200x0.jpg?source=b1748391\" data-image-width=\"1440\" data-image-height=\"1965\" class=\"internal\">如何评价国产漫画家核燃黑猫的《魔王全书》以及其他作品？</a><h2>一本漫画</h2>\n<h3>鹤戾申《画漫画太难了》</h3>\n<a href=\"https://www.zhihu.com/answer/2608048228\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-3bd80935afa26f3ff3eed3b23a7e48cb_200x0.jpg?source=b1748391\" data-image-width=\"1440\" data-image-height=\"2989\" class=\"internal\">如何评价鹤戾申创作的国产漫画《画漫画太难了》？</a><h2>独立漫画短篇</h2>\n<h3>CMJ 《在成为你之前》</h3>\n<a href=\"https://www.zhihu.com/question/491879400/answer/2170152486\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-30448ff5441c43dbd40695f4237fd1f6_200x0.jpg?source=b1748391\" data-image-width=\"1095\" data-image-height=\"2141\" class=\"internal\">如何评价CMJ骆驼哥短篇漫画《在成为你之前》 ​​​​？</a><h3> CMJ《好样的》</h3>\n<a href=\"https://www.zhihu.com/answer/2563979547\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-4ba75cb2fbe07947de96370b110e5561_200x0.jpg?source=b1748391\" data-image-width=\"803\" data-image-height=\"2375\" class=\"internal\">如何评价 CMJ 的短篇漫画作品《好样的》？</a><h3>第年秒《5秒童话》</h3>\n<a href=\"https://www.zhihu.com/answer/2615381800\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-a63fa573711e5cb7c329232cc554b229_l.jpg?source=b1748391\" data-image-width=\"1440\" data-image-height=\"1474\" class=\"internal\">如何评价漫画《5秒童话》？</a><h2>微博/网络平台漫画</h2>\n<h3>《日刊少年囧rz》</h3>\n<a href=\"https://www.zhihu.com/answer/2616133794\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-ec0f42f51a909d67ce8c5ae058344261_200x0.jpg?source=b1748391\" data-image-width=\"720\" data-image-height=\"960\" class=\"internal\">如何评价中国网络漫画杂志《日刊少年囧rz》？</a><h3>极乐鸟《早安地球》</h3>\n<a href=\"https://www.zhihu.com/answer/2603678306\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-6df53770a1dbf9350958a74deac5c0de_200x0.jpg?source=b1748391\" data-image-width=\"960\" data-image-height=\"1337\" class=\"internal\">如何评价国产漫画《早安地球》？</a><h3>雨人Redregan《白乐园》</h3>\n<a href=\"https://www.zhihu.com/answer/2609837734\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-50d593f5f4962c2851e65097228273e1_200x0.jpg?source=b1748391\" data-image-width=\"690\" data-image-height=\"947\" class=\"internal\">如何评价雨人Redregan创作的国产漫画《白乐园》以及其他作品？</a><h2>漫画家</h2>\n<p data-pid=\"0X3POQ8Y\">之前国漫圆桌，写了一个关于中国漫画家的回答</p>\n<a href=\"https://www.zhihu.com/question/19641785/answer/2265373831\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://picx.zhimg.com/v2-e66a1a1270fe262f204c766699253e68_qhd.jpg?source=b1748391\" data-image-width=\"1152\" data-image-height=\"720\" class=\"internal\">国内有哪些好的漫画家？</a><p data-pid=\"QVzuuoEh\">圆桌结束后，又补充了一些漫画家</p>\n<h3>赵佳</h3>\n<a href=\"https://zhuanlan.zhihu.com/p/468923989\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">彬帝：还债十年也要闪光的，是“天才”漫画家啊--赵佳</a><h3>自由鸟 </h3>\n<a href=\"https://zhuanlan.zhihu.com/p/515996145\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">彬帝：中国漫画家--自由鸟</a><h3>张晓雨</h3>\n<a href=\"https://zhuanlan.zhihu.com/p/511118041\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">彬帝：中国漫画家之张晓雨篇</a><h3>丰子恺</h3>\n<a href=\"https://zhuanlan.zhihu.com/p/499418346\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">彬帝：中国漫画家：水墨画师―丰子恺先生</a><h3>张乐平 </h3>\n<a href=\"https://zhuanlan.zhihu.com/p/499416271\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">彬帝：中国漫画家：时代见证人―张乐平</a><h3>黄玉郎</h3>\n<a href=\"https://zhuanlan.zhihu.com/p/499411976\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">彬帝：中国/香港漫画家：漫画教父―黄玉郎</a><h3>华君武</h3>\n<a href=\"https://zhuanlan.zhihu.com/p/499420863\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">彬帝：中国漫画家：讽刺大师―华君武</a><h3>叶浅予</h3>\n<a href=\"https://zhuanlan.zhihu.com/p/499396367\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">彬帝：中国漫画家：一代宗师―叶浅予</a><p data-pid=\"KcN253My\">目前我在知乎创作的国漫内容大概就这些，未来的日子，也会不断更新新的回答，所以本回答也会持续更新，一年一次吧！</p>\n<p data-pid=\"1ESGHFt3\">以上</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/bin-di-47-74?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">彬帝</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/55000895/answer/2625624655?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">270 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/543825926?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">有什么优秀的国产动漫推荐？</a><br><a href=\"http://www.zhihu.com/question/545010503?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">你觉得现在有哪些优良的国产动漫可以媲美日漫？</a><br>\n","link":"http://www.zhihu.com/question/55000895/answer/2625624655?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何看待剧本杀定价逐渐升高，城限/独家本甚至赶超密室逃脱的价格，未来会产生何种影响?","date":"2022-08-15 09:56:15","description":"\n<p data-pid=\"n0hKkpaD\"><b>剧本杀在往死路上走，追求堆人头的演绎，早晚被戏剧斩首！</b></p>\n<p data-pid=\"aQ_yxV1P\">随着大型演绎本的增多，人工成本的增加让剧本杀价格不断上涨。题主举例了近些日业内大热的<b>《苍岐》</b>，除DM外，一般需要3+NPC。但这些并不重要，重要的是，《苍岐》的单人客单价在<b>298-318</b>。</p>\n<p><img src=\"https://pica.zhimg.com/v2-0354e402f710d9eda1f5a9c7ec14f064_720w.jpg?source=b1748391?rss\" data-rawwidth=\"650\" data-rawheight=\"511\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-0354e402f710d9eda1f5a9c7ec14f064\" data-watermark-src=\"v2-f4bdc3891ebd2ebcc8b6fe7a2a74d9ac\" data-private-watermark-src=\"v2-0190a82cec3ec237d8e941b4c7a2ca33\"></p>\n<p data-pid=\"0nZRxgVm\">如果说298-318/人，玩家选择《苍岐》，是去看一场表演，他在北京的竞品有蜂巢剧院孟京辉的话剧，比如<b>《恋爱的犀牛》《一个无政府主义者的意外死亡》《空中花园谋杀案》等</b>。</p>\n<p><img src=\"https://picx.zhimg.com/v2-40cff2fdfacb08d9a3464859493a043e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1170\" data-rawheight=\"604\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-40cff2fdfacb08d9a3464859493a043e\" data-watermark-src=\"v2-420ca1035212d6d493d7f07ae695b78b\" data-private-watermark-src=\"v2-4cb57f5a1de9eee0cfaca76f70e53077\"></p>\n<p data-pid=\"mthacbCT\">如果是追求玩家之间的互动，那么在上海，玩家互动性极强的《金钱世界》，也仅需要<b>269-369元。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-e8c894a2edef413b0964d9fd39345054_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1170\" data-rawheight=\"1247\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-e8c894a2edef413b0964d9fd39345054\" data-watermark-src=\"v2-db33396ae217ba81144a2798a7ecd6e3\" data-private-watermark-src=\"v2-bc0487f9bcb3dbc8462d667e7ef04887\"></p>\n<p data-pid=\"yuox2r35\"><b>在近300元的客单价下，玩家追求的到底是什么？</b></p>\n<p data-pid=\"RECChDhg\">是故事的整体美和演绎的表演美？</p>\n<p data-pid=\"4bC1vnnK\"><b>剧本杀自然赶不上话剧</b>。</p>\n<p data-pid=\"DLi3-eu6\">是强调玩家的互动性、自由的开放度？</p>\n<p data-pid=\"B9wqTWWa\"><b>《金钱世界》《死水边的美人鱼》《零和博弈》</b>等，自是有着更逻辑自洽的体系。</p>\n<p data-pid=\"0vX8JvKh\">所以这就回归到很久之前我们探讨的一个问题，<b>剧本杀发展至今，它到底成了个什么样？</b></p>\n<blockquote data-pid=\"DEdGhwKS\">硬核本越来越密室、机制本越来越桌游、情感本越来越舞台剧。</blockquote>\n<p><img src=\"https://picx.zhimg.com/v2-9c6c36108bee976b4171b588b5b0823c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"648\" data-rawheight=\"282\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-9c6c36108bee976b4171b588b5b0823c\" data-watermark-src=\"v2-832543de094a7dca30901cb90972087c\" data-private-watermark-src=\"v2-f19289193d049bfd6a208bf257574af3\"></p>\n<p data-pid=\"TZNSJa1j\">创作者们，越发的路径依赖起来。</p>\n<p data-pid=\"0GjueS0t\">我且不谈今年某爆款缝合怪仙侠本，就谈谈<b>《刺客博物馆》</b>这个机制本，他敢把“荆轲线”的故事甩到陈凯歌脸上，说一句：</p>\n<blockquote data-pid=\"JsZsTrgJ\">我就是抄了你的《荆轲刺秦王》，直接照搬，你能拿我怎么样？</blockquote>\n<p data-pid=\"ijUMHgS0\"><b>当剧本杀价格越定越高时，这个行业的雷也就会越爆越多。</b>客单价68-118时，很多人不想盯，也懒得盯，但你客单价敢上300还有人买单，不好意思，<b>律师函正在路上</b>。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-4ad0419bc9c8636f0d41acbde8fdd230_720w.jpg?source=b1748391?rss\" data-rawwidth=\"405\" data-rawheight=\"489\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-4ad0419bc9c8636f0d41acbde8fdd230\" data-watermark-src=\"v2-403963c8b7ebdadf33de5e2404751e0b\" data-private-watermark-src=\"v2-e2a3f327755a4460fc7171e58af5ee24\"></p>\n<p data-pid=\"jYstb4Sr\">做了一年的剧本杀实体店，目前有两家店，都是独资，起初我想说的话是，<b>行业生态就这样了，你不言，我不语，让这行的问题，烂在肚子里。</b></p>\n<p data-pid=\"LBD-Bm2V\">可有些事情，架不住<b>“捧杀”</b>和<b>“火烤”</b>。</p>\n<p data-pid=\"DyHfZauc\">硬核本可以回归到刑侦、解密；机制本可以桌游故事化；可你堆砌演绎的情感本，是没有未来的。要么继续叠加用工成本，拖死一部分店家，再让另一部分店家被话剧、沉浸式戏剧暴打。</p>\n<p data-pid=\"Ly1-_zgx\">要么就是及时止损，减少大型演绎本储备，不在用工和品控问题上把自己玩死。</p>\n<p data-pid=\"MwwA5hlL\">但你问我那该怎么办，做<b>“表演工坊”</b>啊！</p>\n<p data-pid=\"9PluDPHf\">既然追求演绎，那么就表演纯粹化，让其它店家开的本承接宣传，你只要做些简易的舞台剧《来电》《苍岐》《致新世界》，换一种方式，去圈下沉市场的钱。</p>\n<p data-pid=\"TqX_rgg5\">美其名曰：</p>\n<blockquote data-pid=\"ZtCUb3G4\">公共戏剧的回归。</blockquote>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/xu-huan-89-77?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">囧叔</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/542960255/answer/2628009490?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">19 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/516147966?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">沉浸式剧本杀客单价达 500 元，剧本杀一桌难求，剧本杀为什么会备受年轻人喜爱？</a><br><a href=\"http://www.zhihu.com/question/519394791?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">上海将对「密室剧本杀」新业态纳入管理，这将对该行业带来哪些改变？</a><br>\n","link":"http://www.zhihu.com/question/542960255/answer/2628009490?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派评 | 近期值得关注的 App","date":"2022-08-15 09:55:15","description":"你可以通过文章目录快速跳转到你感兴趣的内容。如果发现了其它感兴趣的 App 或者关注的话题，也欢迎在评论区和我们进行讨论。<a href=\"https://sspai.com/post/75164\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75164"},{"title":"一日一技 | 如何快速上手注音输入法","date":"2022-08-15 08:01:08","description":"一项有趣的知识储备。<a href=\"https://sspai.com/post/75103\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75103"},{"title":"数字文具盒 | 都是输入、沉淀与输出，我的选择有什么不一样","date":"2022-08-15 06:28:25","description":"Matrix首页推荐Matrix是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选Matrix最优质的文章，展示来自用户的最真实的体验和观点。文章代表作者个人观点 ...<a href=\"https://sspai.com/post/75127\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75127"},{"title":"獭可派 | 可背可提还「上镜」：为什么你该试试 Bellroy","date":"2022-08-15 03:00:00","description":"点击领取满700减70优惠券点击领取满1000减150优惠券点击领取满1400减280优惠券注：对领券及使用有任何疑问或需要帮助请直接联系Bellroy天猫国际旗舰店客服，发送「少数派」即可获取详细信 ...<a href=\"https://sspai.com/post/75123\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75123"},{"title":"派早报：苹果脸书曾就广告分成谈判但未果、网信办公示算法备案清单等","date":"2022-08-15 00:51:11","description":"你可能错过的新鲜事Apple和Facebook曾就广告分成谈判但未果据《华尔街日报》报道，知情人士透露，2016年至2018年期间，Apple与Facebook曾经就广告分成和业务合作进行过谈判。双方 ...<a href=\"https://sspai.com/post/75147\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75147"},{"title":"不治之症如何治——聊聊癌症的来历、治疗和现状","date":"2022-08-14 07:00:00","description":"这篇文章，我们从癌症的定义与发展开始，简单聊聊癌症的治疗手段都有什么，希望可以帮你消除一些对疾病与治疗的恐惧。<a href=\"https://sspai.com/post/75143\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75143"},{"title":"App +1 | 给你的播客加上章节——Podcast Chapter 使用体验","date":"2022-08-14 03:00:00","description":"无论从功能的完整度上还是实际体验来说，《Podcast Chapters》都是播客章节工具里的佼佼者。<a href=\"https://sspai.com/post/75079\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75079"},{"title":"你的日子有几种过法？聊聊日历应用中的阳历与阴历","date":"2022-08-13 07:00:00","description":"「农历」和「阴历」有什么不同你知道吗？中元节聊历法，带你做个「阴阳师」。<a href=\"https://sspai.com/post/75137\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75137"},{"title":"NPM 自动更新版本号","date":"2022-08-04 05:00:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>ChenYFan 大佬的文章：<a href=\"https://blog.cyfan.top/p/d3c51290.html\">SpeedUp!使用黑科技为你的网站提速</a> 有提到过将 Hexo 博客的全部静态文件上传至 NPM 达到加速效果。</p>\n<p>但是 NPM 版本号不能重复，而且为了精准命中缓存和防止边缘 <code>@latest</code> 缓存过长，就必须指定版本号。</p>\n<p>本人在 <a href=\"https://blog.yfun.top/posts/2876015612/\">我的图床解决方案</a> 一文中使用的方法是 <code>npm version patch</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804133426.png\"></p>\n<p>但这个方法也有一些弊端，比如 <code>patch</code> 只会更新 <code>z</code> 位数的版本号，而且并不会上传至仓库，很可能会出现版本号冲突导致上传失败。这就是为什么最后还需要重新推送 Git 提交。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E8%AF%95%E8%AF%95%E7%9C%8B\" class=\"headerlink\" title=\"试试看\"></a>试试看</h2>\n<p>NPM 版本号遵循 <code>semver</code> 规范，格式为 <code>major.minor.patch</code>。</p>\n<p>为了在获取最新版本号的时候不发生混乱，我选择先获取最新的版本号。</p>\n<blockquote><p>记得把 <code>cky-blog-static</code> 改成自己的项目名。</p></blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>获取到最新版本号后，就可以对版本号进行分析。</p>\n<p>以 <code>1.4.7-b541af2ea284a39da0bbf63b88fdb65c</code> 为例，先按 <code>major.minor.patch</code> 分离。当然，也需要考虑版本号后还有 <code>build metadata</code> 的情况。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\"><span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br></pre></td></tr></table></figure><p><del>为了版本号好看些</del>，可以通过判断实现满十进一。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位小于 9，直接 +1</span></span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">} <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位大于等于 9，y 位小于 9，y+1, z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">} <span class=\"keyword\">else</span> {</span><br><span class=\"line\"><span class=\"comment\">// z 大于等于 9，y 大于等于 9，x+1,y=0,z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>最后，重新拼接版本号。如果担心服务器缓存版本号导致冲突，还可以加上一些随机字符串。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br></pre></td></tr></table></figure><p>将最新的版本号信息重新写入 <code>package.json</code> 文件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">packageJson.version = newVersion;</span><br><span class=\"line\"><span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p><del>直接 CV 代码！</del></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 更新 package.json 版本号</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fetch = <span class=\"built_in\">require</span>(<span class=\"string\">\"node-fetch\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> md5 = <span class=\"built_in\">require</span>(<span class=\"string\">\"js-md5\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> update = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">    verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(newVersion);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">    packageJson.version = newVersion;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">    fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Complete!!\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">update();</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%90%8E\" class=\"headerlink\" title=\"最后\"></a>最后</h2>\n<p>如果是 Hexo 文件部署，就可以直接把文件直接丢在项目根目录，Action 集成部署加上：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">node update.js</span><br></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804135818.png\"></p>\n<p><del>Blog 半年没更新，除除草 --(....</del></p>\n","link":"https://blog.yfun.top/posts/2022/auto-update-npm-version/"},{"title":"我有特别的 DNS 配置和使用技巧","date":"2022-07-28 15:31:00","description":"\n<p>众所周知，DNS 的作用与电话簿类似，将人类可读的域名映射到机器可读 IP 地址、使人更方便地访问互联网。DNS 是非常重要的互联网基础设施，对于改善上网冲浪的体验中的重要程度不容小觑。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/96381/31/31172/23930/62e2ab5bE554d388b/37027f4a03351b9e.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/i-have-my-unique-dns-setup/\">https://blog.skk.moe/post/i-have-my-unique-dns-setup/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/i-have-my-unique-dns-setup/"},{"title":"优化博客的累计布局偏移（CLS）问题","date":"2022-06-07 17:24:00","description":"\n<p>距离上一篇文章发布已有四个月了，是时候写几篇文章给博客除草了。上一次我介绍了我如何迁移、重构了我的博客的架构，这次我想来谈谈我在重构中优化和打磨访客体验时解决的一个问题。我的博客优化之旅 图片 lazyload 的学问和在 Hexo 上的最佳实践 我的博客有多快？ 天下武功，唯快不破 —— 我是这样优化博客的 ...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/206311/26/14625/38940/629f7f81Eb11312de/b1e67f07b1cc9bc7.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/fix-blog-cls/\">https://blog.skk.moe/post/fix-blog-cls/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/fix-blog-cls/"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\r\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\r\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\r\n    return new Date(date.toLocaleString('en-US', { timeZone }))\r\n}\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\r\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\r\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\r\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: '2-digit',\r\n        hour12: false,\r\n        timeZone\r\n    })\r\n    return {\r\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\r\n        convert (date) {\r\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\r\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\r\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\r\n        }\r\n    }\r\n}\r\n\r\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\r\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\r\n    return converter.convert(new Date(secDate), tzName) - secDate\r\n}\r\n\r\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\r\ncmn-Hans-SG = 中文普通话-简体-新加坡\r\ncmn-Hant-TW = 中文普通话-繁体-台湾\r\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\r\ncmn = 中文普通话\r\n\r\nzh-Hans = 中文-简体\r\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\r\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\r\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\r\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\r\n}\r\n\r\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long'\r\n}\r\nconst now = new Date()\r\n\r\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\r\n\r\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\r\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\r\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\r\n\r\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\r\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\r\n\r\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\r\n\r\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\r\n\r\nzhCNFormatter.format(now) // 2021年10月13日星期三\r\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\r\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\r\n\r\njaFormatter.format(now) // 2021年10月13日水曜日\r\njaAltFormatter.format(now) // 令和3年10月13日水曜日\r\n\r\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\r\n// {locale: 'zh-CN', calendar: 'gregory', …}\r\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\r\n     // 基于一个固定日期计算，这里选择 1970.1.1\r\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\r\n    const base = new Date(1970, 0, 1).getTime()\r\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\r\n    return Array.from({ length: 7 }, (_, day) =&gt; (\r\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\r\n    ))\r\n}\r\n\r\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\r\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\r\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    second: 'numeric',\r\n}).formatToParts(new Date())\r\n// [\r\n//     { type: 'year', value: '2021' },\r\n//     { type: 'literal', value: '年' },\r\n//     { type: 'month', value: '10' },\r\n//     { type: 'literal', value: '月' },\r\n//     { type: 'day', value: '13' },\r\n//     { type: 'literal', value: '日' },\r\n//     { type: 'weekday', value: '星期三' },\r\n//     { type: 'literal', value: ' ' },\r\n//     { type: 'dayPeriod', value: '上午' },\r\n//     { type: 'hour', value: '1' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'minute', value: '00' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'second', value: '00' }\r\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\r\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\r\n}\r\n\r\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\r\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\r\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\r\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\r\n  timeZone: 'America/Los_Angeles',\r\n  year: 1995,\r\n  month: 12,\r\n  day: 7,\r\n  hour: 3,\r\n  minute: 24,\r\n  second: 30,\r\n  millisecond: 0,\r\n  microsecond: 3,\r\n  nanosecond: 500,\r\n  calendar: 'iso8601'\r\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<p>2020 年 11 月 11 日，苹果在本年度最后一次 Apple Events 上发布了全新的 ARM 芯片 M1、以及三款搭载了 M1 的 Mac：MacBook Air、MacBook Pro 13‘ 和 Mac Mini。在 WWDC 2020 库克宣布 Apple Silicon 后，这次 Apple Events 再一次掀起了热潮，不少 KOL 都把 M1 奉若神明，不少人也不以为然。本文通过 8 个问题来简单聊聊 M1 和 ARM Mac。M1 芯片的性能如何？本文写就时，搭载 M1 的 Mac 尚未开始发货，我们能看到的只有 GeekBench 上流出的跑分。所以，让我们先从跑分开始看起？...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"\n<p>WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将其表述为 \"An API for accessing Public Key Credentials\"，即“一个用于访问公钥凭证的 API”。WebAuthn 很强大，强大到被认为是 Web 身份认证的未来（当然，也很复杂）。你有想过通过指纹或者面部识别来登录网站吗？WebAuthn 就能在保证安全和隐私的情况下让这样的想法成为现实。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\" alt=\"通过 WebAuthn 调起 Windows Hello 登录网站\" width=\"1912\" height=\"966\" class=\"aligncenter size-full wp-image-2215\"></a>\n<p>你可以在<a href=\"https://webauthn.io/\" rel=\"noopener\">这个网站</a>自行体验 WebAuthn。或者，如果你有一个使用 WordPress 的站点，可以尝试一下 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WP-WebAuthn</a> 这款插件，它可以为你的站点启用 WebAuthn 登录。这是我为了写这篇文章而练手开发的插件，本文中的部分示例代码也来自这款插件。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"wp-webauthn\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/wp-webauthn\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>WebAuthn Level 1 标准已在 2019 年 3 月成为 W3C 推荐标准，而 Level 2 标准目前也已进入编辑草案阶段，但互联网上有关它的中文资料却仍然很少，国内也鲜有网站支持这一新标准。于是，在抱着各种英文资料和标准啃了几天以后，我折腾出了这篇文章。</p>\n<p>在这篇文章里，我将会从最基本的概念开始，逐渐深入 WebAuthn，直到解码公钥等深层细节。这可能是你能找到的有关 WebAuthn 最详细最基础的中文文章，也很可能是最长的。在开始之前，<strong>我强烈建议你打开菜单中的文章目录浏览一遍，以对这篇文章涉及的内容有所了解。</strong>如果你只是想了解如何简单地在你的项目中添加对 WebAuthn 的支持，那么“<a href=\"https://flyhigher.top/#webauthn-overview\">浅谈 WebAuthn</a>”部分就是你要找的；如果你想了解更多关于 WebAuthn 的底层细节，那么你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分。</p>\n<p>由于在本文写作时 WebAuthn Level 2 规范尚未定稿，<strong>这篇文章我们将只专注于 Level 1 规范。</strong></p>\n<p>这篇文章最后更新于 2020.9 ，在你读到这篇文章时，部分事实可能已经发生改变，请注意判断。</p>\n<p><strong>更新日志：</strong></p>\n<ul>\n<li>2021.1.16 添加 Chrome 开发工具信息</li>\n<li>2020.9.17 更新 iOS/iPad OS 兼容性信息</li>\n<li>2020.5.20 添加部分无用户名认证的平台兼容性内容</li>\n<li>2020.5.15 添加部分 <code>extensions</code> 相关内容与链接；添加全局凭证 ID 唯一内容；添加凭证 ID 查找相关内容；添加“从 U2F 认证迁移”一节</li>\n<li>2020.4.13 更新与修正 <code>userVerification</code> 相关内容；添加部分 Firefox 相关内容</li>\n<li>2020.3.23 文章发布</li>\n</ul>\n<p>那么让我们开始吧。<span></span></p>\n<h1>浅谈 WebAuthn</h1>\n<p>在这个部分里，我们将会从基础概念开始，了解有关 WebAuthn 和密码学的一些基础知识，并最终使用第三方库实现基础的 WebAuthn 认证。如果你已经对这些内容有所了解了，可以跳到“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”继续阅读。</p>\n<h2>为什么使用 WebAuthn</h2>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\" alt=\"钓鱼邮件\" width=\"709\" height=\"693\" class=\"aligncenter size-full wp-image-2162\"></a>\n<p>相信你一定收到过类似的邮件吧？只要你点进那个最显眼的链接，你就会进入一个设置好的圈套——钓鱼网站。如果你一时糊涂在这类网站上填写了你的账号和密码，bingo，你的账号就不再是你的账号了。</p>\n<p>不过，就算你警惕心再强，也无法避免密码泄露事件。Twitter, Facebook 等都爆出过明文密码泄露事件，证明再大的公司或组织也无法避免密码泄露问题。雪上加霜的是，很大一部分用户都非常喜欢使用重复密码，这就导致一次密码泄露会牵连很多网站，用户的账户安全性完全无法得到保证。</p>\n<p>那么，有什么办法解决这些问题吗？<strong>彻底解决的方法只有一个，那就是抛弃密码。</strong>可是没有密码还怎么验证用户身份呢？这就是 WebAuthn 的用武之地了。</p>\n<p><del>没有密码的好时代，来临力！</del></p>\n<h2>什么是 WebAuthn</h2>\n<p>那么到底什么是 WebAuthn 呢？如开头所说，WebAuthn 是“一个用于访问公钥凭证的 API”，网站可以通过这个 API 进行一些高安全性的身份验证。WebAuthn 一个最常见的应用就是用于网站登录时的 2FA（双重因素验证）甚至是无密码登录。通过网页调用 WebAuthn，在不同平台下，<strong>我们可以实现通过 USB Key、指纹、面部甚至虹膜扫描来认证身份，同时确保安全和隐私。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\" alt=\"WebAuthn 可使用的各种身份认证方式\" width=\"1294\" height=\"566\" class=\"aligncenter size-full wp-image-2213\"></a>\n<p>WebAuthn 标准是 FIDO2 标准的一部分，而 FIDO2 则是由 FIDO 联盟和 W3C 共同推出的 U2F（现称作 FIDO1）的后继标准，旨在增强网络认证的安全性。</p>\n<blockquote><p>你可能了解过 U2F，那么 U2F 和 FIDO2 的区别在哪里呢？从名字上可以看出，U2F，即“通用第二因素协议”，是专注于作为密码后的第二道屏障的，而 FIDO2 增加了单因素认证功能，这意味着使用 FIDO2 可以完全替代密码，真正实现无密码登录。</p></blockquote>\n<p>FIDO2 标准主要包括四个部分，其一是用于网站和访客设备交互的 WebAuthn，而 Client to Authenticator Protocol 2（CTAP2，客户端-认证器协议）作为 WebAuthn 的补充，则是用于访客的设备和认证器交互的协议。标准的其他两个部分则是 U2F 和 UAF 规范。在这篇文章中，我们只关心 WebAuthn，不会涉及 CTAP, U2F 和 UAF 的相关知识。如果你对这段话中的一些概念不了解，不要紧张，接下来我们就来谈谈 WebAuthn 中一些常用的术语和概念。</p>\n<blockquote><p>WebAuthn 只能在安全上下文中使用，也就是说，页面需要使用 HTTPS 协议或是处于 <code>localhost</code> 中。</p></blockquote>\n<h2>常用术语和概念</h2>\n<p>WebAuthn 中有许多不常碰到的术语，不过我只会在这里介绍一些常用的术语和概念——如果你只是希望做出一个简单的实现，那么了解这一段中的一些概念就足够了。同时，由于我实在没能找到一部分术语的通用翻译，有一些术语我按着自己的理解尽可能地翻译了，有任何问题请告诉我。</p>\n<p>在一个完整的 WebAuthn 认证流程中，通常有这么几个角色：</p>\n<ul>\n<li>Relying Party 依赖方 (RP) ：指服务提供方，即网站</li>\n<li>User 用户：正准备登录的你</li>\n<li>Authenticator 认证器：通常指 USB Key 或是设备内置的指纹扫描器、虹膜扫描器、面部识别装置等，正是它们在使用流程中代替了密码甚至是用户名</li>\n<li>User Agent 用户代理：通常指浏览器或系统，负责与认证器交互</li>\n</ul>\n<p>认证过程通常分为两种：</p>\n<ul>\n<li>Registration Ceremony 注册仪式：用户向账户上添加认证器</li>\n<li>Authentication Ceremony 验证仪式：用户通过已注册的认证器验证身份</li>\n</ul>\n<p>同时，认证过程中还会产生这些内容：</p>\n<ul>\n<li>Challenge 挑战：通常是一串随机字符串</li>\n<li>Public Key Credential 公钥凭证：由认证器产生的凭证，在技术上代替了密码</li>\n<li>Attestation 证明：注册时认证器产生的验证数据</li>\n<li>Assertion 断言：验证时认证器产生的验证数据</li>\n</ul>\n<blockquote><p><strong>请注意区分证明 (Attestation) 和断言 (Assertion)</strong>，特别是在这两个单词有些相似的情况下。在 WebAuthn 中，它们是不同过程中的类似概念，但并不相同。</p></blockquote>\n<p>如果你对于这些内容不是很理解，没有关系，我们会在“<a href=\"https://flyhigher.top/#how-to-webauthn\">使用流程</a>”一节中将这些概念放到实际情况中解释，你只要先区分这些概念即可。</p>\n<h2>安全性的基础</h2>\n<p>WebAuthn 为什么安全？和 HTTPS 一样，WebAuthn 使用非对称加密的思路来保证安全性，但侧重点又有所不同。要理解 WebAuthn 的认证流程，我们必须对非对称加密有所了解。如果你对非对称加密比较熟悉了，就直接跳到下一段吧。</p>\n<p>WebAuthn 的核心在于“认证”，即保证产生了凭证的认证器是用户的认证器，而不是第三方在伪造凭证。但为什么要使用非对称加密呢？我们可以先来看看对称加密。</p>\n<p>让我们假设小明和小红相互写信，见不到对方。这天小红突然想，给自己写信的人是不是真的小明呢？于是小红要求对方向小红证明自己是小明。怎么证明呢？他们商量出来这么一套方案：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明和小红商量一个统一的密码和密钥</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明用提前和小红商量好的密码和密钥加密文本后发回给小红</li>\n<li>小红使用相同的密码和密钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和密钥</li>\n</ol>\n<blockquote><p>在密码学中，我们通常把“加密算法”称为密码 (code)，和通常登录时用的密码 (password) 并非同一个概念。</p></blockquote>\n<p>在这种情况下，<strong>只要密钥不泄露</strong>，即拥有正确密钥的只有小明和小红，那么小红就能确定对方一定是小明。但这样的问题也很明显，如果小明和小红不能见面，那么他们就必须先以明文交换密码——<strong>在这个过程中一旦有人窃取到了密码，这个认证就无效了。</strong></p>\n<p>这时我们就需要使用<strong>非对称加密</strong>来拯救破碎的信任了。非对称加密的基础是一对密钥，也就是公钥和私钥，它们是互相关联但（几乎）无法互相推导的。在非对称加密的过程中，选择相同的密码后，使用私钥加密明文得到的密文只能由对应的公钥解密，无法使用私钥解密，同时这个过程反过来也是成立的。</p>\n<blockquote><p>本文的核心并不是非对称加密算法，因此不会详述非对称加密在数学上的证明，若有兴趣可以自行了解。</p></blockquote>\n<p>这就完美解决密钥泄露的问题了。让我们回过头来看之前的例子。现在小明和小红决定使用非对称加密来证明身份，过程如下：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明提前生成一对公私钥，将公钥发送给小红，私钥自己保管，同时商量好统一的密码</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明使用商量好的密码和自己的私钥加密文本，发送给小红</li>\n<li>小红使用相同的密码和小明的公钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和私钥</li>\n</ol>\n<p>在这种情况下，<strong>只要私钥不泄露</strong>，那么小红解密得到的文本和之前发送的一致，那么就可以证明收到的密文一定是由小明加密后发送过来的。而在整个过程中，私钥都没有离开过小明，更没有经过传输，也就几乎没有泄露的可能了。这时，小红终于可以确定对面和她通信的人的确是小明了。</p>\n<p>题外话：HTTPS 虽然也应用了非对称加密，但 HTTPS 更侧重于“加密”而非“认证”，因此思路上会有些许差异。要了解关于 HTTPS 和非对称加密的更多信息，你可以阅读我之前写的这篇文章：</p>\n<p></p>\n<div class=\"mdx-post-cot\" data-mdxposturl=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdx-post-wait-out-c2\"><div class=\"mdx-post-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<span></span>\n<h2>使用流程</h2>\n<p>了解了非对称加密，我们就可以来看看 WebAuthn 的认证流程了。</p>\n<p>和普通的密码一样，<strong>使用 WebAuthn 分为两个部分，注册和验证。</strong>注册仪式会在依赖方中将认证器的一些信息和用户建立关联；而验证仪式则是验证这些信息以登确保是用户本人在登录。根据上一节的思路，我们可以知道，注册仪式就是认证器生成一对公私钥，然后将公钥交给依赖方；而验证仪式是依赖方发送给认证器一段文本，要求认证器用自己的私钥加密后发回以验证。</p>\n<p>在实际情况中，WebAuthn 是基于<strong>挑战-应答模型</strong>工作的。要更好地理解，我们直接来看具体流程。先来看看注册的流程。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\" alt=\"WebAuthn 注册流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2224\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的注册请求</li>\n<li>依赖方向浏览器发送挑战、依赖方信息和用户信息</li>\n<li>浏览器向认证器发送挑战、依赖方信息、用户信息和客户端信息以请求创建公钥凭证</li>\n<li>认证器请求用户动作，随后创建一对公私钥，并使用私钥签名挑战（即证明），和公钥一起交给浏览器</li>\n<li>浏览器将签名后的挑战和公钥发送给依赖方</li>\n<li>依赖方用公钥验证挑战是否与发送的一致，如果成功则将公钥与用户绑定，注册完成</li>\n</ol>\n<p>我也做了一个交互式的 Demo，你可以对照流程来更好地理解。</p>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\">开始注册</button> <span></span></p>\n<div></div>\n<blockquote><p>注意，这个 Demo 和下方的 Demo 都只是一个本地模拟的简单示例，没有任何数据会被上传，当然也不会对数据进行验证。</p></blockquote>\n<p>而之后的验证流程如下：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\" alt=\"WebAuthn 验证流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2226\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的验证请求</li>\n<li>依赖方向浏览器发送挑战</li>\n<li>浏览器向认证器发送挑战、依赖方信息和客户端信息以请求获取公钥凭证</li>\n<li>认证器请求用户动作，随后通过依赖方信息找到对应私钥，并使用私钥签名挑战（即断言），交给浏览器</li>\n<li>浏览器将签名后的挑战发送给依赖方</li>\n<li>依赖方用之前存储的公钥验证挑战是否与发送的一致，一致则验证成功</li>\n</ol>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\" disabled>开始验证</button> <span>在上方注册后才能验证</span></p>\n<div></div>\n<p>可以看到，WebAuthn 不仅在理论上是安全的，同时<strong>在整个过程中并没有隐私数据被传输</strong>——用户信息实际上只包含用户名和用户 ID。因此我们完全可以说 WebAuthn 是安全且私密的。</p>\n<blockquote><p>为了避免用户在不同依赖方之间被追踪，认证器通常会为每个依赖方和用户的组合都创建一对公私钥。不过，由于认证器的存储空间有限，认证器通常不会存储每一个私钥，而是会通过各类信息和烧录在认证器内的主密钥“算”出对应的私钥以实现无限对公私钥。具体算法根据不同厂商会有所不同。对于 Yubikey，你可以在<a href=\"https://developers.yubico.com/U2F/Protocol_details/Key_generation.html\">这里</a>了解更多。</p></blockquote>\n<blockquote><p>如果依赖方需要，用户同意后，发送给依赖方的公钥凭证中可以包含用于辨认认证器型号的信息，不过这对隐私的影响微乎其微。</p></blockquote>\n<h2>浏览器接口</h2>\n<p>要使用 WebAuthn，我们必须要依靠浏览器作为媒介和验证器进行交互，而这就需要浏览器对于 WebAuthn 的支持了。绝大多数新版本的现代浏览器都为 WebAuthn 提供了统一的接口，而在这一段中我们会了解如何使用相关的接口。但是在开始之前，我们可以先来看看浏览器的支持程度（2020.9）。</p>\n<div class=\"mdui-table-fluid\"><table class=\"mdui-table\">\n<thead><tr>\n<th>浏览器</th>\n<th>支持情况</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>桌面端 Chrome</td>\n<td>67+</td>\n</tr>\n<tr>\n<td>移动端 Chrome</td>\n<td>67+<sup>[1]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Firefox</td>\n<td>60+</td>\n</tr>\n<tr>\n<td>移动端 Firefox</td>\n<td>不支持<sup>[2]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Edge</td>\n<td>18+</td>\n</tr>\n<tr>\n<td>移动端 Edge</td>\n<td>不支持<sup>[3]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Safari</td>\n<td>13+</td>\n</tr>\n<tr>\n<td>移动端 Safari</td>\n<td>13.3+<sup>[4]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Opera</td>\n<td>54+</td>\n</tr>\n<tr>\n<td>移动端 Opera</td>\n<td>不支持</td>\n</tr>\n</tbody>\n</table></div>\n<p><sup>[1]</sup> 受平台限制，Chrome 在 iOS 平台上不支持 WebAuthn，在 Android 平台上支持大部分 WebAuthn 功能，但仍不支持部分特性（如 <code>userVerification</code>）。<br><sup>[2]</sup> 移动端 Firefox 80 以下的版本支持 WebAuthn 但似乎会忽略 <code>authenticatorAttachment</code> 等一部分参数，同时移动端 Firefox Beta 80 以下的版本支持 WebAuthn 但无法成功调用。自 80 版本起移动端 Firefox 暂时取消了对 WebAuthn 的支持（可能是 Bug）。<br><sup>[3]</sup> 移动端 Edge 似乎支持 WebAuthn 但无法成功调用。<br><sup>[4]</sup> Safari iOS/iPad OS 13 仅支持外部认证器，无法调用 Touch ID 或 Face ID；自 iOS/iPad OS 14 起 Safari 已支持全功能 WebAuthn，可以调用 Touch ID/Face ID</p>\n<p>当然，一众国产浏览器，包括 Samsung Browser 和 Yandex Browser，目前都不支持 WebAuthn。此外，由于 WebAuthn 涉及外部验证器和 TPM 可信平台模块等，用户的操作系统也会对 WebAuthn 的可用性造成影响。以下是一些需要注意的信息：</p>\n<ul>\n<li>Windows 10 1903 以下版本仅 Edge 能提供完整支持，其他浏览器只能使用 USB Key 等外部认证器；1903+ 中所有浏览器都可以通过 Windows Hello 带来完整的 WebAuthn 支持</li>\n<li>Android 需要安装并开启 Google 服务</li>\n<li>iOS/iPad OS 13.3 以下的版本不支持 WebAuthn，iOS/iPad OS 14 以下的版本支持有限（参考上文），iOS/iPad OS 14 开始 Safari 已支持全功能 WebAuthn（功能完整度甚至超过了 Android）</li>\n</ul>\n<p>可以看出，WebAuthn 的发展之路仍然很漫长，但好在桌面端对它的支持已经比较完善了，在一些情况下我们完全有理由使用它。</p>\n<hr>\n<p>来看看浏览器提供了怎么样的接口吧。要使用 WebAuthn，我们可以使用 <code>navigator.credentials.create()</code> 请求认证器生成公钥凭证和 <code>navigator.credentials.get()</code> 请求获取公钥凭证。</p>\n<blockquote><p>你或许已经对 Credential Management API 有所了解了。通过这些 API，我们还可以实现一些有趣的特性，不过这值得另开一篇文章来讲了。</p></blockquote>\n<p>对于一个基础的实现，<code>navigator.credentials.create()</code> 需要传入的参数如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        challenge,\r\n        rp: {\r\n            id,\r\n            name\r\n        },\r\n        user: {\r\n            id,\r\n            name,\r\n            displayName\r\n        },\r\n        pubKeyCredParams: [\r\n            {\r\n                type: \"public-key\",\r\n                alg\r\n            }\r\n        ],\r\n        authenticatorSelection: {\r\n            authenticatorAttachment,\r\n            userVerification\r\n        },\r\n        excludeCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>在 <code>navigator.credentials.create()</code> 方法中，我们必须传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值。这指明了我们需要创建公钥凭证，而非普通的密码凭证。然后，在 <code>publicKey</code> 对象中设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rp: Object</code>：依赖方信息，其中有一项为必须：\n<ul>\n<li>\n<code>rp.id: String</code>：（可选）依赖方 ID，必须为当前域名或为当前域名的子集的域名（不是子域名）。如域名为 <code>test.123.example.com</code>，则依赖方 ID 可以是 <code>test.123.example.com</code>, <code>123.example.com</code> 或 <code>example.com</code>。不指定则默认使用当前域名</li>\n<li>\n<code>rp.name: String</code>：依赖方名称，用于方便用户辨认</li>\n</ul>\n</li>\n<li>\n<code>user: Object</code>：用户信息，其中有三项为必须：\n<ul>\n<li>\n<code>user.id: Uint8Array</code>：转换为 <code>Uint8Array</code> 的字符串。<strong>出于安全考量，这应尽可能不与任何用户信息相关联，如不要包含用户名、用户邮箱等</strong>\n</li>\n<li>\n<code>user.name: String</code>：登录用户名</li>\n<li>\n<code>user.dispalyName: String</code>：用于显示的用户名称，显示与否的具体行为取决于浏览器</li>\n</ul>\n</li>\n<li>\n<code>pubKeyCredParams: Array</code>：一个算法列表，指明依赖方接受哪些签名算法。列表的每一项都是一个对象，拥有两个属性：\n<ul>\n<li>\n<code>pubKeyCredParams[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>pubKeyCredParams[].alg: Number</code>：一个负整数，用于标明算法。具体算法对应的数字可以在 <a href=\"https://www.iana.org/assignments/cose/cose.xhtml#algorithms\">COSE</a> 找到</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection: Object</code>：（可选）用于过滤正确的认证器，这里介绍常用的一个参数：\n<ul>\n<li>\n<code>authenticatorSelection.authenticatorAttachment: String</code>：（可选）指定要求的认证器类型。如果没有满足要求的认证器，认证可能会失败。该参数可以为 <code>null</code>（表示接受所有类型的认证器）或是以下两个值之一：\n<ul>\n<li>\n<code>platform</code>：表示仅接受平台内置的、无法移除的认证器，如手机的指纹识别设备</li>\n<li>\n<code>cross-platform</code>：表示仅接受外部认证器，如 USB Key</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection.userVerification: String</code>：（可选）指定认证器是否需要验证“用户为本人 (User Verified, UV)”，否则只须“用户在场 (User Present, UP)”。具体验证过程取决于认证器（不同认证器的认证方法不同，也有认证器不支持用户验证），而对验证结果的处理情况则取决于依赖方。该参数可以为以下三个值之一：\n<ul>\n<li>\n<code>required</code>：依赖方要求用户验证</li>\n<li>\n<code>preferred</code>：（默认）依赖方希望有用户验证，但也接受用户在场的结果</li>\n<li>\n<code>discouraged</code>：依赖方不关心用户验证。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>excludeCredentials: Array</code>：（可选）用于标识要排除的凭证，可以避免同一个用户多次注册同一个认证器。如果用户试图注册相同的认证器，用户代理会抛出 <code>InvalidStateError</code> 错误。数组中的每一项都是一个公钥凭证对象，包含以下属性：\n<ul>\n<li>\n<code>excludeCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>excludeCredentials[].id: Uint8Array</code>：要排除的凭证 ID</li>\n<li>\n<code>excludeCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，超时后将强制终止 <code>create()</code> 并抛出错误。若不设置，将使用用户代理的默认值；若太大或太小，则使用最接近的用户代理默认值范围中的值。推荐值为 5000-120000</li>\n</ul>\n<blockquote><p>对于 <code>pubKeyCredParams</code>，通常我们只需添加 ES256 (alg: -7) 算法即可兼容大部分外部认证器，此外，再添加 RS256 (alg: -257) 算法即可兼容大部分平台内置认证器（如 Windows Hello）。当然，前端添加算法之后，后端也需要相应的算法支持。</p></blockquote>\n<blockquote><p>对于 <code>userVerification</code>，由于默认值 \"preferred\" 并不能很好地被所有设备支持，因此无论在 <code>create()</code> 中还是 <code>get()</code> 中不指定该参数都会在 Chrome 中触发一条警告。具体请参阅<a href=\"https://chromium.googlesource.com/chromium/src/+/master/content/browser/webauth/uv_preferred.md\">这个页面</a>。</p></blockquote>\n<p>调用 <code>create()</code> 之后，我们就可以拿到一个 <code>Promise</code>，并可以在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>create()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAttestationResponse {\r\n        attestationObject: ArrayBuffer(390) {},\r\n        clientDataJSON: ArrayBuffer(121) {}\r\n    },\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\",\r\n    type: \"public-key\"\r\n}</pre>\n<p>其中有：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：<code>AuthenticatorAttestationResponse</code> 对象，是 <code>PublicKeyCredential</code> 的主要部分，包含以下两个内容：\n<ul>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n<li>\n<code>response.attestationObject: ArrayBuffer</code>：CBOR 编码的认证器数据，包含凭证公钥、凭证 ID、签名（如果有）、签名计数等信息</li>\n</ul>\n</li>\n</ul>\n<p>然后将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串，我们就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证与注册了。具体怎么操作，我们会在下文详细讨论。当然，别忘了 <code>catch()</code> 注册过程中抛出的任何错误。</p>\n<blockquote><p>你可能会认为在所有情况下，注册时认证器都会对挑战进行签名。实际上在大部分情况下（同时也是默认情况），<strong>注册时认证器并不会对挑战进行签名</strong>，<code>attestationObject</code> 并不会包含签名后的挑战。只有依赖方明确要求证明且用户同意（部分浏览器要求）后认证器才会对挑战进行签名（具体实现据情况会有所不同）。对此，<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion#Attestation\">MDN 解释道</a>“大部分情况下，用户注册公钥时我们会使用「初次使用时信任模型」(TOFU) ，此时验证公钥是没有必要的。”要了解更多关于证明的内容，请参阅“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>而对于 <code>navigator.credentials.get()</code>，我们可以传入如下的参数：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.get({\r\n    publicKey: {\r\n        challenge,\r\n        rpId,\r\n        userVerification,\r\n        allowCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>和 <code>create()</code> 一样，对于 <code>get()</code> 我们需要传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值，指明我们需要获取的是公钥凭证而非普通的密码凭证。在 <code>publicKey</code> 对象中我们可以设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rpID: String</code>：（可选）依赖方 ID，需要和注册认证器时的一致。规则和上述的 <code>rp.id</code> 一致，不指定默认使用当前域名</li>\n<li>\n<code>userVerification: String</code>：和上文一样，只是需要注意它这次不在 <code>authenticatorSelection</code> 中了</li>\n<li>\n<code>allowCredentials: Array</code>：（可选）用于标识允许的凭证 ID，使用户代理找到正确的认证器。只有符合这个列表中凭证 ID 的凭证才能被成功返回。数组中的每一项都是对象，包含以下属性：\n<ul>\n<li>\n<code>allowCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>allowCredentials[].id: Uint8Array</code>：允许的凭证 ID</li>\n<li>\n<code>allowCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，和上面的一样，推荐值为 5000-120000</li>\n</ul>\n<p>嗯，要传入的参数少多了。之后，和 <code>create()</code> 一样，调用 <code>get()</code> 之后，我们就可以拿到一个 <code>Promise</code> 并在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>get()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAssertionResponse {\r\n        authenticatorData: ArrayBuffer(37) {},\r\n        signature: ArrayBuffer(256) {},\r\n        userHandle: ArrayBuffer(64) {},\r\n        clientDataJSON: ArrayBuffer(118) {}\r\n    }\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\"\r\n    type: \"public-key\"\r\n}</pre>\n<p>这里的东西就比 <code>create()</code> 时拿到的要多了。看看我们拿到了什么吧：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：对于验证流程，认证会返回 <code>AuthenticatorAssertionResponse</code> 而不是 <code>AuthenticatorAttestationResponse</code> 对象，这个对象包含以下 4 个属性：\n<ul>\n<li>\n<code>response.authenticatorData: ArrayBuffer</code>：认证器信息，包含认证状态、签名计数等</li>\n<li>\n<code>response.signature: ArrayBuffer</code>：被认证器签名的 <code>authenticatorData</code> + <code>clientDataHash</code>（<code>clientDataJSON</code> 的 SHA-256 hash）</li>\n<li>\n<code>response.userHandle: ArrayBuffer</code>：<code>create()</code> 创建凭证时的用户 ID <code>user.id</code>。许多 U2F 设备不支持这一特性，这一项将会是 <code>null</code>\n</li>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n</ul>\n</li>\n</ul>\n<p>同样地，我们将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串后就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证了。至于具体怎么做，别急，马上就来讲一讲。</p>\n<h2>简单实现</h2>\n<p>了这么多，我们终于可以实现一个简单的 WebAuthn 认证页面了。由于在实际操作中 WebAuthn 相关的数据解码和密码计算比较复杂，在服务器端我们可以使用第三方库来帮我们做这些脏活累活，我们只需专注于具体流程就可以了。</p>\n<p>要寻找可用的第三方库，你可以在 <a href=\"https://webauthn.io/\">webauthn.io</a> 上找到适用于各种语言的第三方库——除了 PHP（笑）。不过好在你可以在 GitHub 上找到几个不错的 PHP WebAuthn 库，比如 <a href=\"https://github.com/web-auth/webauthn-framework\">web-auth/webauthn-framework</a>。</p>\n<p>在我们的这个例子中，我们关心的主要是前端逻辑；而后端我们可以使用各类几乎已经做到开箱即用的第三方库，这样我们可以专注于流程而不必关心细节。当然如果你想了解后端的解码细节，可以阅读“<a href=\"https://flyhigher.top/#webauthn-decode\">手动解个码</a>”一节。</p>\n<hr>\n<p>让我们先从注册开始吧。现在，用户点击了注册认证器的按钮，一个请求被发送给服务器（也就是依赖方）。在最简单的情况中，依赖方需要将三个内容发送给浏览器：<strong>挑战、用户信息和用户已注册的凭证 ID 列表（即 <code>excludeCredentials</code>）</strong>。当然依赖方也可以自由选择发送更多信息，只要最终前端能构建合法的参数即可。</p>\n<p>挑战最终会被转换为 <code>Uint8Array</code>，即一组 0-255 的整数。如果使用 PHP，在后端我们可以这样生成 Base64 编码的挑战：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"php\">$challenge = \"\";\r\nfor($i = 0; $i \n<p>对于用户信息，我们需要登录名、显示名称和 ID 三项内容。我们可以从数据库中取出用户信息，也可以新建一份。需要注意的是，<strong>出于安全和隐私的考量，ID 不应该包含用户的任何信息，比如用户邮箱等。</strong>推荐的做法是和挑战一样，生成一个随机字符串/一组随机数，并将其于用户关联起来以供之后使用。</p>\n<p>发送已注册的凭证 ID 列表是为了防止用户重复注册同一个认证器。正确设置该列表后，如果用户试图注册同一个认证器，浏览器会中止流程并抛出 <code>InvalidStateError</code>。</p>\n<p>最后，别忘了将挑战等一些后续可能会用到的信息临时存储起来。Session 就是一个很好的选择。</p>\n<p>将所有信息发送到浏览器之后，我们应该可以构建出新建凭证所需的参数了。由于有多个参数需要以 <code>Uint8Array</code> 的形式传入，我们可以准备一个简单的工具函数帮我们将 Base64 的字符串转为 <code>Uint8Array</code>。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function str2ab(str){\r\n    return Uint8Array.from(window.atob(str), c=&gt;c.charCodeAt(0));\r\n}</pre>\n<p>除了 <code>challenge</code>, <code>rp</code>, <code>user</code> 和 <code>excludeCredentials</code> 几部分需要你根据具体情况设置外，上文提到的其他参数一般可以这么设置：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">publicKey: {\r\n    challenge, // 自行设置\r\n    rp, // 自行设置\r\n    user, // 自行设置\r\n    pubKeyCredParams: [\r\n        {\r\n            type: \"public-key\",\r\n            alg: -7 // ES256\r\n        },\r\n        {\r\n            type: \"public-key\",\r\n            alg: -257 // RS256\r\n        }\r\n    ],\r\n    authenticatorSelection: {\r\n        userVerification: \"discouraged\",\r\n        authenticatorAttachment: null // 除非用户指定，大部分情况下无需指定\r\n    },\r\n    excludeCredentials, // 自行设置\r\n    timeout: 60000\r\n}</pre>\n<p>然后就是传入 <code>navigator.credentials.create()</code>，拿到 <code>PublicKeyCredential</code>。如果一切顺利，接下来我们就需要考虑如何将返回的内容传回依赖方了。由于我们拿到的很多都是 <code>ArrayBuffer</code>，我们需要将其进行编码。再准备一个工具函数吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function array2b64String(a) {\r\n    return window.btoa(String.fromCharCode(...a));\r\n}</pre>\n<p>然后适当处理，我们就可以得到一个方便传输的 JSON 字符串了：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({publicKey}).then((credentialInfo) =&gt; {\r\n    const publicKeyCredential = {\r\n        id: credentialInfo.id,\r\n        type: credentialInfo.type,\r\n        rawId: array2b64String(new Uint8Array(credentialInfo.rawId)),\r\n        response: {\r\n            clientDataJSON: array2b64String(new Uint8Array(credentialInfo.response.clientDataJSON)),\r\n            attestationObject: array2b64String(new Uint8Array(credentialInfo.response.attestationObject))\r\n        }\r\n    };\r\n    return publicKeyCredential;\r\n}).then(JSON.stringify).then((authenticatorResponseJSON) =&gt; {\r\n    // 可以发送了\r\n}).catch((error) =&gt; {\r\n    console.warn(error); // 捕获错误\r\n})</pre>\n<p>依赖方收到数据以后，还需要做三件事：验证挑战、存储凭证 ID 和存储公钥。如果数据解码顺利，且收到的挑战和之前发送的一致，就可以认为注册成功，将凭证 ID 及公钥与用户关联起来。这一步有很多第三方库可以帮我们做，对于基础实现我们就不深入探究了。</p>\n<blockquote><p>由于不同厂商的认证器的实现方式不同，<strong>我们并不能保证凭证 ID 一定是全局唯一的</strong>，也就是说，凭证 ID 有可能碰撞——即使这些凭证实际上是不同的。依赖方在实现凭证 ID 的存储及查找时，需要注意和用户 ID 结合进行存储或查找，或是直接在注册认证器时在服务器端对比阻止相同的凭证 ID。</p></blockquote>\n<hr><p>接下来就可以进行验证了。某天，用户点击了验证按钮准备登录，于是浏览器发送了验证请求到依赖方，同时附上要登录的用户名。接下来依赖方至少需要发送两项内容给浏览器：<strong>挑战和用户已绑定的凭证 ID 列表（即 <code>allowCredentials</code>）。</strong></p>\n<p>之后前端的处理流程就和注册时基本一致了。只是需要注意验证流程中获取到的 <code>PublicKeyCredential</code> 的结构和注册时的稍有不同。</p>\n<p>当浏览器将数据传回后，依赖方需要做的事情就比之前要麻烦一些了。依赖方需要验证挑战，并用之前存储的公钥验证签名和签名计数。同样地，这一步有很多第三方库可以帮我们做。最后，如果验证全部通过，我们就可以允许用户登录了。</p>\n<p>到目前为止，我们已经实现了一个简单的 WebAuthn 验证服务。不过这只是一个最基础的实现，对于很多高安全要求的身份认证这是远远不够的。因此，我们需要摆脱对第三方库的依赖，深入了解 WebAuthn。你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分，不过对于基础的 WebAuthn 实现，我们的旅程就到这里了。</p>\n<h2>拓展阅读</h2>\n<p>如果你的目标只是快速了解如何开发 WebAuthn，那么你阅读到这里就可以了。同时，上一节例子中的部分代码来自于我为了这篇文章开发的 WordPress 插件 WP-WebAuthn，这个插件可以为你的 WordPress 启用 WebAuthn 无密码登录（并非二步验证），你可以查阅插件的 <a href=\"https://github.com/yrccondor/wp-webauthn\">GitHub 存储库</a>了解更多，也可以自己安装试一试。</p>\n<p>如果你正在使用 Chrome 开发，Chrome 87+ 版本添加了一个 WebAuthn 开发者面板，可以帮助你在没有任何实体验证器的情况下开发 WebAuthn 功能。你可以在 Google 的<a href=\"https://developers.google.com/web/tools/chrome-devtools/webauthn\">这篇文章</a>中了解更多。不够，如果你正在使用 Firefox，很遗憾目前我还没有找到对应的开发工具或是浏览器扩展可用。</p>\n<p>如果你希望了解更多关于非对称加密的数学证明，可以查阅阮一峰老师的<a href=\"http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html\">这篇文章</a>。</p>\n<p>如果你希望了解更多关于 Credential Management API 的信息，可以查阅<a href=\"https://medium.com/dev-channel/sign-in-on-the-web-credential-management-api-and-best-practices-d21aed14b6fe\">这篇文章</a>（英文）。</p>\n<p>如果你希望了解更多 WebAuthn 的细节，可以继续往下阅读。<span></span></p>\n<h1>深入了解 WebAuthn</h1>\n<p>如上文所说，如果摆脱对第三方库的依赖，或是要实现更安全的 WebAuthn，我们必须深入了解 WebAuthn。在这一部分中，我们会详细讨论上文没有提到的一些概念和参数，并了解 WebAuthn 中各类数据的结构以实现解码与验证。先来看一看一些进阶的选项吧。</p>\n<h2>进阶选项</h2>\n<p>没错，上文提到的传入 <code>navigator.credentials.create()</code> 和 <code>navigator.credentials.get()</code> 方法的参数其实只是所有参数的一部分。对于 <code>create()</code>，我们还可以配置这些可选内容（上文提及的已省略）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        rp: {\r\n            icon\r\n        },\r\n        user: {\r\n            icon\r\n        },\r\n        attestation,\r\n        authenticatorSelection: {\r\n            requireResidentKey\r\n        },\r\n        extensions\r\n    }\r\n})</pre>\n</pre>\n<ul>\n<li>\n<code>rp.icon: String</code> 和 <code>user.icon</code>：是的，你可以为依赖方和用户设置图标，可以使用 HTTPS URL 或 Base64，一般长度不能超过 128 字节，不过大部分浏览器不会显示图标，或是有非常小的图片体积限制，所以一般没有使用这一属性的必要</li>\n<li>\n<code>attestation: String</code>：表明依赖方是否需要证明。可选三个值：\n<ul>\n<li>\n<code>none</code>：（默认）不需要证明。如上文所述，依赖方不关心证明，因此认证器不会签名。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n<li>\n<code>indirect</code>：依赖方需要证明，但证明方式可由认证器选择。在支持匿名证明的认证器上，认证器会通过匿名证明的方式签名挑战，并向依赖方提供签名方式等信息</li>\n<li>\n<code>direct</code>：依赖方要求直接证明。此时认证器会使用烧录在认证器中的公钥进行签名，同时向依赖方提供签名方式等信息以供依赖方验证认证器是否可信。更多信息可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节</li>\n</ul>\n</li>\n<li>在 <code>authenticatorSelection</code> 中，我们还可以设置两个可选属性：\n<ul>\n<li>\n<code>authenticatorSelection.requireResidentKey: Boolean</code>：是否要求将私钥钥永久存储于认证器中。默认值为 <code>false</code>。对于 iOS/iPad OS 13，必须设置为 <code>false</code>，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n<li>\n<code>extensions: Object</code>：WebAuthn 扩展，可以提供规范之外的配置和响应。由于实际情况中很少会使用这一特性，我们不会在这篇文章中讨论它</li>\n\n<blockquote><p>将 <code>requireResidentKey</code> 设置为 <code>true</code> 可以实现无用户名的登录，即认证器同时替代了用户名和密码。需要注意的是，尽管大部分认证器可以实现无限对公私钥，<strong>但能永久存储的私钥数量是有限的</strong>（对于 Yubikey，这通常是 25），因此只应在真正需要的时候启用此特性。我们会在“<a href=\"https://flyhigher.top/#login-without-username\">无用户名登录</a>”一节中详细讨论原因。</p></blockquote>\n<blockquote><p><strong>如果你没有高安全需求（如银行交易等），请不要向认证器索取证明</strong>，即将 <code>attestation</code> 设置为 \"none\"。对于普通身份认证来说，要求证明不必要的，且会有浏览器提示打扰到用户。</p></blockquote>\n<blockquote><p>Android 暂时无法实施用户验证，进而会导致依赖方验证失败。你可以在<a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=997538\">这里</a>追踪这个特性的实现情况。</p></blockquote>\n<blockquote>\n<p>对于 <code>extensions</code>，由于目前浏览器支持和应用范围有限，我们不会在这篇文章中涉及，不过你可以看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    uvm: true, // 要求认证器返回用户进行验证的方法\r\n    txAuthSimple: \"Please proceed\" // 在认证器上显示与交易有关的简短消息\r\n}</pre>\n<p>你可以在<a href=\"https://www.w3.org/2019/01/webauthn-extensions.html\">这个页面</a>了解更多关于 <code>extensions</code> 的信息。</p>\n</blockquote>\n<p>对于 <code>get()</code>，我们其实只有一个可选内容没讲了，即 <code>extensions</code>。和上文一样，我们不会在这篇文章中讨论它。</p>\n<p>就这些了！<span></span></p>\n<h2>手动解个码</h2>\n<p>是时候看看如何手动解码了。我们将会在这一节中讨论认证器返回的数据的结构以及如何正确地解码它们。</p>\n<p>首先我们来看看如何处理注册过程中认证器发回的数据。假设所有 <code>ArrayBuffer</code> 类型的值都被正确地以 Base64 编码，且后端已经将 JSON 的字符串解析为字典。先来复习一下，我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"ZRBkDBCEtq...9XY8atOcbg\",\r\n    type: \"public-key\",\r\n    rawId: \"ZRBkDBCEtq...9XY8atOcbg==\",\r\n    response: {\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...i5jcmVhdGUifQ==\",\r\n        attestationObject: \"o2NmbXRkbm9uZWd...xNHuAMzz2LxZA==\"\r\n    }\r\n}</pre>\n<p>这里的 <code>id</code> 就是凭证的 ID，如果验证正确，我们最终要将它存储起来并于用户关联。同时可以看到 Base64 编码后的 <code>rawId</code> 其实和 <code>id</code> 是一致的（不过 <code>id</code> 是 Base64URL 编码的）。而 <code>type</code> 则一定是 \"public-key\"。</p>\n<p>不过，我们主要关心的还是 <code>respose</code> 中的两项内容。首先是 <code>clientDataJSON</code>。它的处理比较简单，看名字就知道，它应该是一个 JSON 字符串。</p>\n<blockquote><p>小技巧：如果你看到一个 Base64 编码的字符串以 \"ey\" 开头，那么它大概率是一个 Base64 编码的 JSON。</p></blockquote>\n<p>将<code>clientDataJSON</code> Base64 解码再 JSON 解码之后我们就能得到一个字典：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"NI4i1vsNmP2KHcmyFnBCKRVQPfHgg34SsYZUOPZY2lM\",\r\n    extra_keys_may_be_added_here: \"do not compare clientDataJSON against a template. See https://goo.gl/yabPex\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>结构一目了然。在这里，我们需要验证三项内容：</p>\n<ul>\n<li>\n<code>challenge</code> 和之前发送的一致</li>\n<li>\n<code>origin</code> 为创建凭证的页面的源（协议+主机名+端口号，并非 URL）</li>\n<li>\n<code>type</code> 为 \"webauthn.create\"</li>\n</ul>\n<p>同时可以注意到有一个奇怪的 <code>extra_keys_may_be_added_here</code>。这其实是 Google 在 Chrome 中搞的一点小把戏，有一定概率会出现，提醒我们需要将 JSON 解析后再验证键值以防额外插入的键值影响验证。具体信息你可以访问那个 URL 看一看。</p>\n<p>对于 Firefox，我们会多得到两项 <code>clientExtensions</code> 和 <code>hashAlgorithm</code> ，分别指明了客户端扩展数据和签名算法。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"3-4\">{\r\n    challenge: \"dg6ost6ujhAA0g6WqLe-SOOH-tbhvjW9Sp90aPKlLJI\",\r\n    clientExtensions: {},\r\n    hashAlgorithm: \"SHA-256\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>由于本文不考虑扩展数据，因此我们可以不考虑 <code>clientExtensions</code>。同时由于目前规范中指定的签名算法只有 SHA-256 一种，因此现阶段我们也可以简单地忽略 <code>hashAlgorithm</code>。</p>\n<p><code>clientDataJSON</code> 很简单地就处理完了。接下来我们要来看看 <code>attestationObject</code>。先来看看 <code>attestationObject</code> 的结构图示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\" alt=\"attestationObject 的结构\" width=\"1056\" height=\"532\" class=\"aligncenter size-full wp-image-2245\"></a>\n<p><code>attestationObject</code> 是 CBOR 编码后再被 Base64 编码的，因此我们需要额外对其进行 CBOR 解码。</p>\n<blockquote><p>CBOR (Concise Binary Object Representation, 简明二进制对象表示) 是一种多应用于物联网领域的编码方式，你可以将它看作体积更小、更方便物联网传输的二进制 JSON。大部分语言都可以找到对应的 CBOR 解码库。</p></blockquote>\n<p>我们当然不会手解 CBOR，直接来看看解开之后的样子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"none\",\r\n    attStmt: {},\r\n    authData: [211, 217, 43, 24, 199, ..., 97, 238, 166, 67, 107]\r\n}</pre>\n<p>这些键值的含义如下：</p>\n<ul>\n<li>\n<code>fmt</code>：标明证明的格式。WebAuthn 预定义了几种格式，分别为：\n<ul>\n<li>\n<code>none</code>：没有证明</li>\n<li>\n<code>packed</code>：为 WebAuthn 优化的证明格式</li>\n<li>\n<code>android-safetynet</code>：Android 使用的格式</li>\n<li>\n<code>android-key</code>：又是 Android 使用的格式</li>\n<li>\n<code>fido-u2f</code>：FIDO U2F 认证器使用的格式</li>\n<li>\n<code>tpm</code>：TPM 可信平台模块使用的格式</li>\n</ul>\n</li>\n<li>\n<code>attStmt</code>：证明对象，具体格式根据 <code>fmt</code> 的不同会有所不同</li>\n<li>\n<code>authData</code>：包含公钥、签名计数等来自认证器的数据</li>\n</ul>\n<p>诶，例子里的 <code>attStmt</code> 怎么是空的？还记得之前说的吗？大部分情况下，<strong>如果依赖方不要求证明，那么认证器不会签名挑战</strong>，于是 <code>fmt</code> 会变为 \"none\"，<code>attstmt</code> 会为空。如果不是高安全要求，我们可以只对这一种情况做支持。</p>\n<blockquote><p>注意，部分情况下 Firefox 会在不要求证明（即 <code>attestation</code> 为 \"none\"）时会返回 <code>fmt</code> 为 \"packed\" 的证明。<strong>这是符合规范的。</strong>此时认证器会进行自证明，你可以视情况进行处理。具体可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>对于非 \"none\" 的 <code>fmt</code> 我们稍后再谈，现在我们先来看看 <code>authData</code>。来复习一下 <code>authData</code> 的结构：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\" alt=\"authData 的结构\" width=\"1056\" height=\"384\" class=\"aligncenter size-full wp-image-2240\"></a>\n<p>对于它的解码比较简单粗暴，我们要做的就是根据图示将它切开，然后适当地转换类型。其中各部分的含义如下：</p>\n<ul>\n<li>\n<code>rpIdHash</code>：如其名，SHA-256 的 <code>rpId</code>，长度 32 字节</li>\n<li>\n<code>flags</code>：标识认证状态，长度 1 字节。其中 8 位分别为：\n<ul>\n<li>\n<code>ED</code>：是否有扩展数据</li>\n<li>\n<code>AT</code>：是否包含 <code>attestedCredentialData</code>。通常注册认证器时会包含 <code>attestedCredentialData</code>，而验证时不包含</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>\n<code>UV</code>：用户是否已验证</li>\n<li>保留位</li>\n<li>\n<code>UP</code>：用户是否在场</li>\n</ul>\n</li>\n<li>\n<code>signCount</code>：签名计数，长度 4 字节</li>\n<li>\n<code>attestedCredentialData</code>：包含公钥等凭据数据，变长。其结构如下：\n<ul>\n<li>\n<code>aaguid</code>：认证器的 AAGUID (Authenticator Attestation GUID)，对于同一型号的认证器，它们的 AAGUID 是相同的</li>\n<li>\n<code>credentialIdLength</code>：标识 <code>credentialId</code> 的长度，长度 2 字节</li>\n<li>\n<code>credentialId</code>：凭证 ID，和 <code>rawId</code> 一致，长度由 <code>credentialIdLength</code> 定义</li>\n<li>\n<code>credentialPublicKey</code>：CBOR 编码的 COSE 格式的凭证公钥，变长</li>\n</ul>\n</li>\n<li>\n<code>extensions</code>：扩展数据，变长，本文不讨论</li>\n</ul>\n<blockquote><p>出于隐私考虑，如果不要求证明，认证器会以 0 填充 AAGUID。</p></blockquote>\n<p>如果你的后端在使用 Node.js，这里有个工具函数可以帮你完成这一步（不考虑 <code>extensions</code>）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function parseAuthData(buffer){\r\n    let rpIdHash = buffer.slice(0, 32);\r\n    buffer = buffer.slice(32);\r\n  \r\n    let flagsBuf = buffer.slice(0, 1);\r\n    buffer = buffer.slice(1);\r\n\r\n    let flagsInt = flagsBuf[0];\r\n    let flags = {\r\n        up: !!(flagsInt &amp; 0x01),\r\n        uv: !!(flagsInt &amp; 0x04),\r\n        at: !!(flagsInt &amp; 0x40),\r\n        ed: !!(flagsInt &amp; 0x80),\r\n        flagsInt\r\n    }\r\n\r\n    let counterBuf = buffer.slice(0, 4);\r\n    buffer = buffer.slice(4);\r\n  \r\n    let counter = counterBuf.readUInt32BE(0);\r\n\r\n    let aaguid = undefined;\r\n    let credID = undefined;\r\n    let COSEPublicKey = undefined;\r\n\r\n    if(flags.at) {\r\n        aaguid = buffer.slice(0, 16);\r\n        buffer = buffer.slice(16);\r\n\r\n        let credIDLenBuf = buffer.slice(0, 2);\r\n        buffer = buffer.slice(2);\r\n\r\n        let credIDLen = credIDLenBuf.readUInt16BE(0);\r\n        credID = buffer.slice(0, credIDLen);\r\n\r\n        buffer = buffer.slice(credIDLen);\r\n        COSEPublicKey = buffer;\r\n    }\r\n\r\n    return {rpIdHash, flagsBuf, flags, counter, counterBuf, aaguid, credID, COSEPublicKey}\r\n}</pre>\n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>解开后，依赖方至少需要做四件事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>存储签名计数</li>\n<li>存储公钥</li>\n</ol>\n<blockquote><p>签名计数不一定从 0 开始。</p></blockquote>\n<p>对于公钥，也就是 <code>credentialPublicKey</code>，我们需要多一次 CBOR 解码，然后就可以得到类似这样的公钥：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    kty: \"EC\",\r\n    alg: \"ECDSA_w_SHA256\",\r\n    crv: \"P-256\",\r\n    x: \"ZGQALNfqo0L7HFYQHFHCS/X5db49z0ePnuQEs3w3X8w=\",\r\n    y: \"6qYxhnjYuez/Q8N6vX7nIIGfxFWdZ25NzQfZYuYOalA=\"\r\n}</pre>\n<p>然后可以选择适当的方法将其存储起来，之后的步骤本文就不再赘述了。现在，将目光拉回来，让我们看看包含证明的 <code>attestationObject</code> 是怎么样的。我们来看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"packed\",\r\n    attStmt: {\r\n        alg: -7,\r\n        sig: [48, 70, 2, 33, 0, ..., 132, 78, 46, 100, 21],\r\n        x5c: [\r\n            [48, 130, 2, 189, 48, 130, 1, 165, 160, 3, ..., 177, 48, 125, 191, 145, 24, 225, 169, 41, 248]\r\n        ]\r\n    },\r\n    authData: [211, 217, 43, 24, 199, ..., 158, 54, 87, 126, 54]\r\n}</pre>\n<p>这里有一个使用 \"packed\" 格式的证明。此时，<code>attStmt</code> 中包含三个值：</p>\n<ul>\n<li>\n<code>alg</code>：签名算法</li>\n<li>\n<code>sig</code>：签名值</li>\n<li>\n<code>x5c</code>：X.509 编码的证书链</li>\n</ul>\n<p>我们不会在这一节中详述对签名的验证。要了解更多信息，你可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。现在，让我们来看看如何处理验证过程中认证器发回的数据。我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"hmqdxPLit9...BWeVxZqdvU\",\r\n    type: \"public-key\",\r\n    rawId: \"hmqdxPLit9V...BWeVxZqdvU=\",\r\n    response: {\r\n        authenticatorData: \"09krGMcWTf...UFAAAABA==\",\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...XRobi5nZXQifQ==\",\r\n        signature: \"UsXZV3pvT3np8btj6V0g...WBkaqyt88DrD40qh+A==\",\r\n        userHandle: \"MmYxNWYzZjQyZjM...Tg2ZDY4NzhlNw==\"\r\n    }\r\n}</pre>\n<p><code>id</code>, <code>rawId</code> 和 <code>type</code> 和之前一样，这里就不再赘述了。让我们来看看 <code>response</code>。首先是 <code>clientDataJSON</code>，和之前的解法一样，要验证的内容也一样，只是 <code>type</code> 从 \"webauthn.create\" 变成了 \"webauthn.get\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"bnkd2CmrEuvKnAFXs2QlC3SKlg4XFvGtP4HJL1yEWyU\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.get\"\r\n}</pre>\n<p>然后是 <code>userHandle</code>。前面讲过，这是认证器在创建凭证时的用户 ID。如果用户在使用 U2F 认证器，很可能这一项为空，所以大部分情况下我们不关心这一项。</p>\n<p>接着来看 <code>authenticatorData</code>。这其实就是之前的 <code>attestedCredentialData</code>，只是这次不包含公钥。以相同的方式切开数据，我们应该可以得到 <code>rpIdHash</code>, <code>flags</code>和 <code>signCount</code> 三项。此时，依赖方至少需要做这三样事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>验证签名计数大于之前存储的计数，并更新存储的计数</li>\n</ol>\n<blockquote><p>如果签名计数比之前的小，那么这个认证器很可能是伪造的，应该中止验证并返回验证失败。同时，签名计数不一定每次按 1 递增，通常只要计数比此前的大就认为计数检查通过。</p></blockquote>\n<p>最后，我们来看 <code>signature</code>，也就是签名。不过这个签名不是简单的对挑战的签名，具体算法如图所示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\" alt=\"签名过程\" width=\"1034\" height=\"587\" class=\"aligncenter size-full wp-image-2231\"></a>\n<p>计算签名时，认证器会将 <code>authenticatorData</code> 与 <code>clientDataHash</code>（也就是 <code>clientDataJSON</code> 的 SHA-256 Hash）拼接起来，并使用对应的私钥签名。依赖方应该使用对应的公钥将其解密，并验证内容是否是 <code>authenticatorData</code> 与 <code>clientDataHash</code> 的拼接。这部分的计算不在本文的讨论范围内。</p>\n<p>最后，如果全部验证通过，返回验证成功。<span></span></p>\n<h2>验证认证器</h2>\n<p>WebAuthn 已经很安全了，但有的时候我们还要让它更安全一点。比如，如果用户在使用伪造的或是自制的认证器，认证器的安全性就得不到保证。此时，依赖方就需要验证认证器是否是可信的认证器。</p>\n<blockquote><p>这一过程仅发生在注册认证器时。此时，如果认证器验证通过，就可以存储公钥，后续步骤和之前描述的一致。</p></blockquote>\n<blockquote><p>再次说明，如果不是对安全性有极高的要求，向认证器索取证明以验证认证器是否可信是没有必要的。此外，验证认证器需要依赖方自行维护可信认证器列表，大大增加了维护的复杂性。</p></blockquote>\n<p>在调用 <code>navigator.credentials.create()</code> 时，我们可以将 <code>attestation</code> 设置为非 \"none\" 来向认证器索取证明。除无证明外，WebAuthn 定义了四种证明方式：</p>\n<ul>\n<li>Basic Attestation (Basic) ：基础的证明方式，认证器会使用认证器私钥签名</li>\n<li>Self Attestation (Self) ：自证明，认证器会使用凭证私钥签名</li>\n<li>Attestation CA (AttCA) ：认证器会使用多个证明私钥之一签名</li>\n<li>Elliptic Curve based Direct Anonymous Attestation (ECDAA) ：通过 <a href=\"https://en.wikipedia.org/wiki/Direct_Anonymous_Attestation\">DAA</a> 实现的匿名证明</li>\n</ul>\n<blockquote><p>和验证过程一样，这里签名的目标是 <code>authenticatorData</code> 和 <code>clientDataHash</code> 的连接。</p></blockquote>\n<p>还记得 <code>create()</code> 时 <code>attestation</code> 可选的三个值吗？这个值会决定认证器最终使用哪种方式进行证明。复习一下：</p>\n<ul>\n<li>\n<code>none</code>：大部分情况下认证器会选择不进行证明，部分认证器会进行自证明。此时 AAGUID 会被 0 填充</li>\n<li>\n<code>indirect</code>：认证器会试图通过替换 AAGUID 和选择合适的证明方式来进行匿名证明，具体方式由认证器选择</li>\n<li>\n<code>direct</code>：认证器会提供最直接的证明信息</li>\n</ul>\n<p>注意，大部分情况下，当认证器需要向依赖方证明自己可信时需要提供认证器公钥，<strong>这会触发浏览器提示，只有用户同意后认证器才会进行证明，否则认证器将不提供证明。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\" alt=\"浏览器提示\" width=\"446\" height=\"283\" class=\"aligncenter size-full wp-image-2217\"></a>\n<blockquote><p>为什么浏览器会说“安全密钥的品牌和型号”？事实上，为了避免用户通过认证器证书被跨依赖方追踪，FIDO 要求使用相同认证器证书的认证器的数量不能少于 100,000。于是大部分认证器厂商会选择<strong>让同一型号的认证器共用同一份证书。</strong>因此，浏览器的会询问用户是否同意“查看安全密钥的品牌和型号”。</p></blockquote>\n<blockquote><p>Android Safety Net 不会向用户询问是否同意，而是会静默进行证明。</p></blockquote>\n<p>当证明不为空时，依赖方收到数据后根据 <code>attestationObject.fmt</code> 的不同，需要选择不同的验证方式来验证认证器的可信情况。出于篇幅原因，这里我们不会讨论每一种 <code>fmt</code> 的验证方式，更多信息你可以查阅 <a href=\"https://www.w3.org/TR/webauthn/#defined-attestation-formats\">W3C 文档</a>。</p>\n<p>当 <code>fmt</code> 为 <code>packed</code> 时，<code>attestationObject.attStmt</code> 可能会有三种格式：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// 自证明\r\n{\r\n    alg, // 算法\r\n    sig // 签名\r\n}\r\n// 基础或证明 CA 证明\r\n{\r\n    alg,\r\n    sig,\r\n    x5c // X.509 证书链\r\n}\r\n// 椭圆曲线证明\r\n{\r\n    alg,\r\n    sig,\r\n    ecdaaKeyId // ECDAA-Issuer 公钥标识符\r\n}</pre>\n<p>此时，依赖方需要检查证书符合预期格式并检查证书是否在可信链上。首先，如果证明中既没有 <code>ecdaaKeyId</code> 也没有 <code>x5c</code>，就说明这个证明使用的是自证明，只需使用认证器提供的公钥验证即可；如果有 <code>x5c</code>，那么就需要验证 <code>x5c</code> 中的证书是否在可信链上。将 <code>x5c</code> 中的每个证书以 Base64 编码，按 64 个字符切开，并在头尾加上 <code>-----BEGIN CERTIFICATE-----</code> 和 <code>-----END CERTIFICATE-----</code>就能得到一个证书字符串了。之后，依赖方需要验证证书是否可信。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function base64ToPem(b64cert){\r\n    let pemcert = '';\r\n    for(let i = 0; i \n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>至于 <code>ecdaaKeyId</code>，由于目前应用较少，处理方法可能需要你另寻资料了。检查证书的具体步骤已经超出了本文的范围，具体可以查阅<a href=\"https://medium.com/@herrjemand/verifying-fido2-packed-attestation-a067a9b2facd\">这篇文章</a>（英文）。</p>\n<blockquote><p>你可以在 <a href=\"https://fidoalliance.org/metadata/\">FIDO Metadata Service</a> 找到各大厂商认证器的可信证书链。</p></blockquote>\n<p>当在 Android 上调起 WebAuthn 时，大部分情况下 <code>fmt</code> 将会为 <code>safety-net</code>。此时 <code>attestationObject.attStmt</code> 的结构会是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    ver: \"200616037\",\r\n    response: {\r\n        type: \"Buffer\",\r\n        data: [101, 121, 74, 104, 98, ..., 115, 104, 104, 82, 65]\r\n    }\r\n}</pre>\n<p>此时，<code>clientDataJSON</code> 中还会出现 <code>androidPackageName</code> 键，值是调起 WebAuthn 验证的应用的包名，如 Chrome 就是 \"com.android.chrome\"。</p>\n<p>在这个证明中，<code>data</code> 其实是一个 JWT 字符串，我们可以将它编码为字符串并将其按照 JWT 进行解码（别忘了验证 JWT 签名）。最终我们会得到一个类似这样的 Payload：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    nonce: \"0QAurN4F9wik6GEkblDJhGuf4kuaqZn5zaaxlvD1hlA=\",\r\n    timestampMs: 1584950686460,\r\n    apkPackageName: \"com.google.android.gms\",\r\n    apkDigestSha256: \"2BQHno+bmWWwdLUYylS8HLt5ESJzci3nt2uui71ojyE=\",\r\n    ctsProfileMatch: true,\r\n    apkCertificateDigestSha256: [\r\n        \"8P1sW0EPicslw7UzRsiXL64w+O50Ed+RBICtay2g24M=\"\r\n    ],\r\n    basicIntegrity: true,\r\n    evaluationType: \"BASIC\"\r\n}</pre>\n<p>其中包含了有关设备状态的一些信息。比如说，如果 <code>ctsProfileMatch</code> 为 <code>false</code>，那么该设备很有可能被 root 了。对于高安全要求的场景，我们可以视情况进行验证。</p>\n<p>同时我们可以在 JWT Header 中验证证明的有效性。我们应该能取得这样的 Header：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    alg: \"RS256\",\r\n    x5c: [\r\n        \"MIIFkzCCBHugAwIBAgIR...uvlyjOwAzXuMu7M+PWRc\",\r\n        \"MIIESjCCAzKgAwIBAgIN...UK4v4ZUN80atnZz1yg==\"\r\n    ]\r\n}</pre>\n<p>这里的结构就和上方的 <code>x5c</code> 验证类似了。具体步骤可以参考<a href=\"https://medium.com/@herrjemand/verifying-fido2-safetynet-attestation-bd261ce1978d\">这篇文章</a>（英文）。</p>\n<p>其他所有格式的验证方式也都可以在<a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">这篇文章</a>（英文）中找到。<span></span></p>\n<h2>无用户名登录</h2>\n<p>认证器已经代替了密码，可是这还不够！在进行第一因素认证（即使用 WebAuthn 登录）时，我们还是需要输入用户名，然后才能进行身份认证。懒惰是第一生产力，我们能不能不输入用户名就进行身份认证呢？实际上，大部分认证器都允许我们无用户名登录。<strong>而这一特性的核心就是 Resident Key 客户端密钥驻留。</strong></p>\n<p>你可以思考一下，为什么普通的 WebAuthn 为什么不能实现无用户名登录？事实上，大部分认证器为了实现无限对公私钥，会将私钥通过 Key Warp 等技术加密后包含在凭证 ID 中发送给依赖方，这样认证器本身就不用存储任何信息。不过，这就导致需要身份认证时，依赖方必须通过用户名找到对应的凭证 ID，将其发送给认证器以供其算出私钥。</p>\n<blockquote><p>Yubikey 实现了一个基于 HMAC 的算法，认证器可以在私钥不离开认证器的前提下（常规的 Key Warp 算法中实际上私钥离开了认证器）通过一些输入和凭证 ID 重新计算私钥，你可以阅读<a href=\"https://www.yubico.com/blog/yubicos-u2f-key-wrapping/\">这篇文章</a>了解更多。</p></blockquote>\n<blockquote><p>客户端通过凭证 ID 查找对应认证器的算法根据系统的不同是不同的。通常凭证 ID 中会包含认证器信息，因此系统可以通过凭证 ID 找到对应的认证器。</p></blockquote>\n<p>要避免输入用户名，我们可以要求认证器将私钥在自己的内存中也存储一份。这样，依赖方无需提供凭证 ID，认证器就可以通过依赖方 ID 找到所需的私钥并签名公钥。以下是具体流程：</p>\n<p>注册时：</p>\n<ol>\n<li>依赖方请求新建凭证，同时要求启用客户端密钥</li>\n<li>认证器生成一对公私钥，并将私钥存储在永久内存中且与依赖方 ID 及用户 ID 绑定，随后将公钥发送给依赖方以供存储</li>\n<li>依赖方将用户 ID 即公钥与用户绑定</li>\n</ol><p>验证时：</p>\n<ol>\n<li>依赖方请求验证，但不必提供除依赖方 ID 以外的更多信息</li>\n<li>用户选择认证器</li>\n<li>认证器根据依赖方 ID 找到对应私钥</li>\n<li>如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录</li>\n<li>确定私钥后，认证器签名挑战并将其返回，同时返回用户 ID</li>\n<li>依赖方通过用户 ID 找到对应用户并用对应公钥检查签名，正确则允许对应用户登录</li>\n</ol><blockquote><p>可以看到，这个特性同时要求认证器存储用户 ID，即上面提到过的 <code>userHandle</code>。依赖方需要根据此信息找到对应用户，因此不支持 <code>userHandle</code> 的 U2F 认证器无法进行无用户名登录。</p></blockquote>\n<blockquote><p>如之前所说，<strong>认证器能永久存储的私钥数量是有限的</strong>，因此只应在真正需要无用户名登录的时候启用此特性。</p></blockquote>\n<blockquote><p>目前暂时没有办法检测认证器是否支持客户端密钥驻留，因此在无用户名验证失败时应 fallback 至常规的 WebAuthn 验证，即向用户询问用户名。</p></blockquote>\n<p>现在让我们来看看如何实现这一特性吧。首先，调用 <code>navigator.credentials.create()</code> 时我们需要注意两个参数：<code>requireResidentKey</code> 必须为 <code>true</code>，<code>userVerification</code> 必须为 \"required\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"5-6\">navigator.credentials.create({\r\n    publicKey: {\r\n        ...\r\n        authenticatorSelection: {\r\n            requireResidentKey: true,\r\n            userVerification: \"required\"\r\n            ...\r\n        },\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Windows Hello <strong>似乎</strong>会存储所有已注册的凭据，因此无论是否指定 <code>requireResidentKey</code>，你都可以通过 Windows Hello 进行无用户名登录。</p></blockquote>\n<p>随后，浏览器会询问用户是否允许认证器存储私钥。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\" alt=\"浏览器提示\" width=\"445\" height=\"285\" class=\"aligncenter size-full wp-image-2208\"></a>\n<p>如果用户同意，认证器会存储私钥，并和普通的 WebAuthn 一样返回信息。不过，依赖方收到数据之后，只需将公钥、用户 ID 与用户关联起来，而不必再将凭证 ID 与用户关联起来。至此注册完成。</p>\n<p>之后，在用户请求登录时，无需再向依赖方提供用户名。同时在传入 <code>navigator.credentials.get()</code> 的参数中也有两个需要注意：<code>userVerification</code> 必须为 \"required\"，同时 <code>allowCredentials</code> 必须为空。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"4-5\">navigator.credentials.get({\r\n    publicKey: {\r\n        ...\r\n        userVerification: \"required\",\r\n        allowCredentials: [],\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Android 暂不支持无用户名验证，空的 <code>allowCredentials</code> 会导致浏览器返回 <code>NotSupportedError</code> 错误。</p></blockquote>\n<p>此时，认证器会根据依赖方 ID 找到对应的私钥。如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录。用户选择后，认证器就会使用对应的私钥签名挑战并将其返回。此时，<code>userHandle</code> 一定不为空。</p>\n<p>依赖方收到数据后，需要将 <code>userHandle</code> 作为用户 ID 找到对应的用户，并使用对应的公钥验证签名。如果验证成功，则认为对应的用户身份认证成功，依赖方可以允许其登录。至此验证结束。</p>\n<blockquote><p>有的时候你可能会需要清除认证器中的密钥。绝大多数认证器都提供了对应的软件以供清除存储的密钥，但大部分情况下这会重置整个认证器，这意味着相关认证器此前的所有凭证均会失效。因此建议不要将日常使用的认证器作为开发测试用的认证器。</p></blockquote>\n<h2>从 U2F 认证迁移</h2>\n<p>如果你的服务此前提供了 U2F 第二因素认证，你可能会希望在将依赖方从 U2F 升级到 WebAuthn 时用户此前注册的 U2F 认证器仍然可用而无需重新注册。由于 WebAuthn 向后兼容 U2F 设备，用户是可以继续使用原有的 U2F 认证器的。不过，由于 WebAuthn 的依赖方 ID 与 U2F 的 <code>appid</code> 并不一定相同，你需要将原有的 U2F <code>appid</code> 随 WebAuthn 流程一起传递给认证器，认证器才能使用正确的私钥进行响应。</p>\n<p>要实现这一点，我们只需要在注册及认证仪式中使用 WebAuthn 的 <code>appid</code> 扩展。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    appid: \"https://example.com\" //U2F appid\r\n}</pre>\n<p>此时认证器便可以得到正确的私钥，之后的流程与正常情况一致；依赖方除了正常的 WebAuthn 流程外，不需要再做任何其它操作。</p>\n<h2>拓展阅读</h2>\n<p>我们的 WebAuthn 之旅到这里就真的结束了。不过，你仍然可以自行探究，了解更多。<strong>本文只是一个粗浅的使用指南</strong>，而被称为“Web 身份认证的未来”的 WebAuthn 的深层还要很多细节值得我们挖掘学习，不过本文不会再继续讨论了。</p>\n<p>如果你想了解更多关于 WebAuthn 的信息，最好的方法是直接阅读 <a href=\"https://www.w3.org/TR/webauthn\">W3C 规范</a>。此外，Yubico 也提供了不错的 <a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn 文档</a>。</p>\n<p>要了解更多认证器存储凭证的信息，你可以阅读<a href=\"https://duo.com/labs/tech-notes/how-security-keys-store-credentials\">这篇文章</a>（英文）。</p>\n<p>如果你想了解更多 Android Safety Net 是怎样运作的，可以观看<a href=\"https://youtu.be/8lv_9mydrjg\">这个视频</a>，并通过 <a href=\"https://developer.android.com/training/safetynet/attestation\">Google 的文档</a>了解 Android Safety Net 的更多信息。</p>\n<p>如果你想方便地调试 WebAuthn，<a href=\"https://webauthn.me/\">webauthn.me</a> 提供了一个非常直观方便的<a href=\"https://webauthn.me/debugger\">调试器</a>。</p>\n<h1>参考资料</h1>\n<p><a href=\"https://www.w3.org/TR/webauthn\">WebAuthn Level 1 规范 - W3C</a><br><a href=\"https://github.com/w3c/webauthn\">WebAuthn Level 2 草案 - W3C</a><br><a href=\"https://blog.techbridge.cc/2019/08/17/webauthn-intro/\">一起来了解Web Authentication - TechBridge 技术共笔部落格</a><br><a href=\"https://medium.com/@herrjemand/introduction-to-webauthn-api-5fd1fb46c285\">Introduction to WebAuthn API - Medium</a><br><a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">WebAuthn/FIDO2: Verifying responses - Medium</a><br><a href=\"https://obeta.me/posts/2019-03-01/WebAuthn%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8\">WebAuthn介绍与使用 - obeta</a><br><a href=\"https://webauthn.io/\">webauthn.io</a><br><a href=\"https://webauthn.guide/\">webauthn.guide</a><br><a href=\"https://webauthn.me/\">webauthn.me</a><br><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion\">Attestation and Assertion - MDN</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Authentication_API\">Web Authentication API - MDN</a>（顺便翻译了一半）<br><a href=\"https://fidoalliance.org/fido-technotes-the-truth-about-attestation/\">FIDO TechNotes: The Truth about Attestation - FIDO Alliance</a><br><a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn Developer Guide - Yubico</a><br><a href=\"https://en.wikipedia.org/wiki/WebAuthn\">WebAuthn - Wikipedia</a><br><a href=\"https://techcommunity.microsoft.com/t5/identity-standards-blog/all-about-fido2-ctap2-and-webauthn/ba-p/288910\">All about FIDO2, CTAP2 and WebAuthn - Microsoft Tech Community</a><br><a href=\"https://webauthn-doc.spomky-labs.com/\">Webauthn Framework</a><br><a href=\"https://zhuanlan.zhihu.com/p/25279015\">如何开发支持 FIDO U2F 登录的网站 - 知乎专栏</a><br></p></pre>\n","link":"https://flyhigher.top/develop/2160.html"},{"title":"NLP 找门：用朴素贝叶斯进行文本分类","date":"2020-01-29 11:39:58","description":"\n<blockquote>\n<p>有一天，神收到了一封垃圾邮件，于是世界上就有了朴素贝叶斯算法。</p>\n<footer>——我瞎编的</footer>\n</blockquote>\n<p>为什么这篇文章的标题是 NLP 找门呢？因为如果你看完了这篇文章，你就可以<strong>准备入门</strong>自然语言处理 (<strong>N</strong>atural <strong>L</strong>anguage <strong>P</strong>rocessing) 了。我会把这篇文章当作一篇彻彻底底的 NLP 入门文章来写，尽量避免“专业高端”词汇和“全是奇怪符号”的式子，这样<strong>只要你有高中数学基础</strong>，就能毫无压力地看完这篇文章，学会使用朴素贝叶斯分类算法分类文本。</p>\n<p>让我们开始吧。</p>\n<h1>所以，啥是朴素贝叶斯？</h1>\n<p>简单来说，朴素贝叶斯 (Naïve Bayes) <strong>是一个简单但高效的分类算法</strong>，在进行不复杂的文本分类时高效且拥有不低的准确度，判断垃圾邮件就是用朴素贝叶斯进行文本分类的一个经典例子。当然朴素贝叶斯分类不仅能用在 NLP 中，在许多分类问题中朴素贝叶斯也有非常好的效果，但我们今天只关注它在 NLP 中的应用。</p>\n<p>要了解朴素贝叶斯，我们要先来了解一下贝叶斯定理。</p>\n<blockquote>\n<p>每增加一个数学公式都会使读者减半。</p>\n<footer>——霍金</footer>\n</blockquote>\n<p>那么，就让我们先来看看贝叶斯定理的公式吧（笑</p>\n<p>$$P(A|B) = \\frac{P(AB)}{P(B)} = \\frac{P(B|A)P(A)}{P(B)}$$</p>\n<p>其实还是很简单的，运用高中的条件概率知识就能理解。本质上，贝叶斯定理给出了一种方法，使得我们可以在 \\(P(A|B)\\) 和 \\(P(B|A)\\) 之间互相转换，因为通常情况下它们是不一样的。</p>\n<p>要更好地理解，请考虑这样一个例子：</p>\n<blockquote><p>假设有一个学校图书馆，图书管理员正为找不到某本书而发愁。已知老师有 70% 的意愿借走这本书，而是学生的意愿是 30%，这个学校的师生比例是 1:10，那么借走这本书的人是老师的概率有多大？</p></blockquote>\n<p>设学校总人数为 \\(T\\)，我们可以很容易地写出这样的一个式子：</p>\n<p>$$\\begin{align} P &amp; = \\frac{T\\cdot\\frac{1}{11}\\cdot 70\\%}{T\\cdot\\frac{1}{11}\\cdot 70\\%+T\\cdot\\frac{10}{11}\\cdot 30\\%} \\\\ &amp; = \\frac{70\\%}{70\\%+10\\times30\\%} \\\\ &amp; = \\frac{7}{37} \\end{align}$$</p>\n<p>这就是贝叶斯定理了！等等，你可能会挠挠头，这哪里是贝叶斯了？别急，如果我们把最上面的式子换个字母的话...</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>在这里，\\(H\\) 指 Hypothesis，即假设，而 \\(E\\) 指 Evidence，即证据。这样，这个式子就很好理解了，在我们上面的例子里，借走书是证据，那么 \\(P(E)\\) 就是某个人选择借走这本书的概率；这个人是老师是假设，那么这个人是老师的概率是 \\(P(H)\\)。<strong>注意这里的概率指在学校中抽一个人是老师的概率，并不是“在借走书的前提下”这个人是老师的概率</strong>，而“在借走书的前提下”这个人是老师的概率应该是 \\(P(H|E)\\)，也正是我们要求的概率。同样地，而“这个人是老师”的前提下借走书的概率就是 \\(P(E|H)\\) 了。</p>\n<p>那么再来看看上面我们凭小学知识就列出的计算式，如果把里面的具体数据换成概率来表示的话，这个式子就会变成...</p>\n<p>$$P(H|E) = \\frac{T\\cdot P(E|H)P(H)}{T\\cdot P(E|H)P(H) + T\\cdot P(E|\\neg H)P(\\neg H)}$$</p>\n<p>好吧，这里解释一下，\\(\\neg\\) 符号表示“非”，所以 \\(P(E|\\neg H)\\) 表示在“这个人不是老师”的前提下借走书的概率。而 \\(T\\cdot P(E|H)P(H)\\) + \\(T\\cdot P(E|\\neg H)P(\\neg H)\\)，即“可能借走书的老师的数量 + 可能借走书的学生的数量”，就是“可能借走书的人的数量”了，也就是 \\(T\\cdot P(E)\\)。上下消去 \\(T\\)，我们就能得到上面的式子了。</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>这就是贝叶斯了定理。如果你还是不太清楚，可以去看看 3Blue1Brown 的<a href=\"https://www.bilibili.com/video/av84799361\">这个视频</a>，图形化的讲解会清晰很多。</p>\n<p>这里我要提一下这个式子里各部分的专有名称了（“专业高端”词汇警告），你可以不记住，直接看后面。</p>\n<ul>\n<li>\\(P(H|E)\\) 叫做 \\(H\\) 的<strong>后验概率</strong>，反之亦然</li>\n<li>\\(P(H)\\) 叫做 \\(H\\) 的<strong>先验概率</strong>，反之亦然</li>\n<li>特别地，我们把 \\(P(E|H)\\) 称作<strong>“似然值”</strong>，即 likelihood</li>\n</ul>\n<p>那什么是朴素贝叶斯呢？按上面所说的，朴素贝叶斯是一种分类算法。简单来说，朴素贝叶斯将一个对象的各个特征考虑为互相独立，然后根据这些特征的概率的乘积来判断对象所属的分类。基本原理如下：</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)} \\propto P(E|H)P(H) = P(H)\\prod_{i}P(W_i|H)$$</p>\n<p>在这里，\\(W_i\\) 指某一对象的第 \\(i\\) 个特征，对于文本分类来说，这就是一段文本中的某个单词。</p>\n<p>朴素贝叶斯之所以“朴素”，是因为它要求<strong>各个特征间是独立的</strong>，在文本分类中也就是各个单词之间互不干扰。虽然思路简单的代价是适用范围变窄，不过由于这样的简化在很多情况下已经足够了，因此实际上朴素贝叶斯的应用范围非常广。<del>你看朴素贝叶斯 <strong>N</strong>aïve <strong>B</strong>ayes 的缩写都是 NB 了，能不厉害吗（逃</del></p>\n<h1>那么，咋分类啊</h1>\n<p>看来你这下完全听懂了呢（笑），是时候看看如何在 NLP 中应用朴素贝叶斯了。和上面一样，我们用一个具体的例子来说明。我们的目标是让电脑学会分类美国共和党和民主党的演讲稿，由于两个党派的演讲风格不同，所以这样的分类在理论上是可行的。</p>\n<div class=\"wp-block-file\">\n<a href=\"https://acdn.flyhigher.top/nlp/material.zip\" download>material.zip</a><a href=\"https://acdn.flyhigher.top/nlp/material.zip\" class=\"wp-block-file__button\" download>下载</a>\n</div>\n<p>上面我们要用到的数据集，你可以下载下来一起动手玩一玩。先说一下数据集的数据结构吧，压缩包里有两个文件，<code>train.txt</code> 将会被当作训练数据集，而 <code>test.txt</code> 则会作为训练结束后的验证数据集。两个文本文件里数据的结构是类似的，就像这样：</p>\n<pre class=\"EnlighterJSRAW\">BLUE WELL I AM SO HONORED AND PERSONALLY UNKNOWNWORD TO BE HERE...\r\nRED THANK YOU . THIS IS QUITE AN INSTITUTION . IT'S GOOD TO BE...</pre>\n<p>每行都是一篇演讲稿，每行的第一个单词指明了这篇演讲稿所属的党派，<code>RED</code> 指共和党，而 <code>BLUE</code> 指民主党。所有单词和符号都已经被转为大写并由空格分隔方便处理。<code>train.txt</code> 有共和党演讲稿和民主党演讲稿各 23 篇，<code>test.txt</code> 有 6 篇共和党演讲稿，12 篇民主党演讲稿。</p>\n<p>明白了？那我们就开始吧。</p>\n<h2>捋捋思路</h2>\n<p>首先，我们需要考虑如何在文本分类中应用朴素贝叶斯。很简单，按朴素贝叶斯的思路，<strong>计算每个词在某一分类下的出现概率，然后将某篇文章的所有词的概率相乘，再乘以该分类的先验概率，就可以得到某篇文章在某一分类下的概率。</strong></p>\n<p>$$P(Class|Article) = P(Class)\\prod_{i}P(Word_i|Class)$$</p>\n<p>各个分类概率都计算完成后，概率最高的那个分类就是这篇文章可能所属的分类。这个思路的核心就是用词决定了文本风格，文本的不同类别用词会有差异，只要能量化这些差异就可以分类文本。在我们的例子中，我们可以从 <code>train.txt</code> 中统计各个词汇的出现情况，然后用 <code>test.txt</code> 中的数据按上面的算法验证我们算法的准确性。</p>\n<p>这个思路很简单也很清晰，但还有一些问题需要解决。<strong>第一，有的时候，我们的测试数据集中可能会出现一个在训练数据集中没有出现过的词语。这个时候，朴素贝叶斯的计算结果会是 0。</strong>如果我们把 0 乘进式子中，那就别想得到正常的结果了。所以，我们还需要对计算某一单词在某一分类中的式子稍加改进。使用拉普拉斯平滑，就可以避免出现概率为 0 的情况。别被名字吓到，拉普拉斯平滑是一种非常简单的平滑方法：在分子上 +1，在分母上加整个取值范围，这样就可以给整个分式加上非常微小的偏移，避免出现 0。</p>\n<p>$$\\begin{align} P(Word_i|Class) &amp; = \\frac{Word_iCountInClass}{AllWordCountInClass} \\\\ &amp; \\approx \\frac{Word_iCountInClass + 1}{AllWordCountInClass + UniqueWordCount} \\end{align}$$</p>\n<p><strong>第二，对于长文本，大部分词语在某一分类中的出现概率是远小于 1 的，加上长文本词汇量大，往往概率相乘的结果会非常小。</strong>受限于计算机处理浮点数的原理，精确处理这么小的数字是很麻烦的。幸好，运用一些简单的数学知识就可以将其转化为更精确的表达，<strong>那就是取对数。</strong></p>\n<p>首先，将概率计算结果取对数并不影响我们的计算结果。因为取对数是一个单调递增的操作，而我们计算概率只是为了排序选择概率最高的分类，因此取对数是不影响我们排序的。而把多项式取对数，等于把多项式的每一项取对数后相加。所以我们有：</p>\n<p>$$\\lg{\\Big(P(Class)\\prod_{i}P(Word_i|Class)\\Big)} = \\lg{P(Class)} + \\sum_i\\lg{P(Word_i|Class)}$$</p>\n<p>大部分情况下，在每一次取对数的时候，要取对数的数字的大小，即 \\(P(Word_i|Class)\\) 尚还在计算机能处理的范围内，<strong>因此我们可以放心地使用取对数的方法</strong>，避免计算机精度不够影响结果。</p>\n<p><strong>第三就是在某些情况下，可能会有部分词语干扰计算结果</strong>，如 and, is 这类的被大量使用的中性词。如果希望得到更好的结果，我们可以维护一个停用词表，在计算时排除停用词即可。或者，我们可以在计算完每个单词的出现数量后，排除数量最多的前 \\(N\\) 个单词，避免这些单词过多地影响计算。</p>\n<h2>写点代码</h2>\n<p>现在我们终于可以开始实战，写点代码了。我会用简单的 Python 来表达思路。好了，理一理思绪，第一步我们要做的，是统计训练数据集中的用词情况。具体来说，根据上面的思考，我们需要统计的有：</p>\n<ul>\n<li>每个单词在各分类中出现的数量</li>\n<li>各分类中的不重复词数量</li>\n</ul>\n<p>用 Python 简单表示如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\"># 读入数据过程略...\r\ndata_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ndata_blue = []\r\ndata_red = []\r\nword_count_blue = {}\r\nword_count_red = {}\r\n\r\nfor line_data in data_raw:\r\n    word_list = line_data.split(\" \") # 分隔单词\r\n    if word_list[0] == \"BLUE\":\r\n        for i in range(1,len(word_list)):\r\n            if not is_excluded(word_list[i]): # 判断是否为停用词\r\n                data_blue.append(word_list[i])\r\n                # 统计单词出现次数\r\n                word_count_blue.setdefault(word_list[i], 0)\r\n                word_count_blue[word_list[i]] += 1\r\n    elif word_list[0] == \"RED\":\r\n        # Class = red 时同理...\r\n\r\n#统计非重复词\r\nunique_words_blue = list(set(data_blue))\r\nunique_words_red = list(set(data_red))</pre>\n<p>训练过程到这里就结束了，计算机已经知道了各政党演讲的用词习惯。很简单吧？接下来我们就要使用测试数据集来测试准确度了。<strong>这里开始就涉及到朴素贝叶斯的计算了</strong>，可能会稍微复杂一点点。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">import math\r\n#读入测试数据过程略...\r\ntest_data_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ntest_data = []\r\n\r\nfor line_data in test_data_raw:\r\n    if line_data[0] == \"BLUE\":\r\n        content_data = line_data.split(\" \").pop(0)\r\n        test_data.append({\"class\": \"blue\", \"content\": content_data})\r\n    elif line_data[0] == 'RED':\r\n        # ...\r\n\r\nfor line_data in test_data:\r\n    posibility_blue = 0\r\n    for word in line_data[\"content\"]:\r\n        # 计算各单词概率，取对数后相加，使用了拉普拉斯平滑\r\n        if word in word_count_blue:\r\n            posibility_blue += math.log((word_count_blue[word]+1)/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n        else:\r\n            posibility_blue += math.log(1/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n    # 最后加上该分类概率的对数\r\n    posibility_blue += math.log(len(data_blue)/(len(data_blue)+len(data_red)))\r\n\r\n    # 计算 Red 同理...</pre>\n<p>计算完成后，我们就得到每篇演讲稿在各分类下的概率了。之后，简单的比较就能得出推断的分类：如果 \\(P(Red|Article)\\) 大于 \\(P(Blue|Article)\\)，那么这篇演讲稿就更可能是共和党的演讲稿，反之则是民主党的演讲稿。</p>\n<p>很好理解吧？那么这么简单的思路，准确性怎么样呢？对于我们的例子，这是我设置了个别停用词后的结果：</p>\n<pre class=\"EnlighterJSRAW\">+-----+-------+--------------+--------------+-------+-------+\r\n|   ID|  Class|        P(Red)|       P(Blue)|  Guess| Status|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|    1|   Blue|  -23204.68377|  -22998.67066|   Blue|      √|\r\n|    2|   Blue|  -16438.44625|  -16137.48257|   Blue|      √|\r\n|    3|   Blue|  -33468.81214|  -32567.61801|   Blue|      √|\r\n|    4|   Blue|    -8606.2193|   -8601.50426|   Blue|      √|\r\n|    5|   Blue|  -12430.97436|  -11935.70662|   Blue|      √|\r\n|    6|   Blue|  -44033.02883|  -43877.55367|   Blue|      √|\r\n|    7|   Blue|   -16947.2851|  -16758.57542|   Blue|      √|\r\n|    8|   Blue|  -26957.26997|  -26889.62444|   Blue|      √|\r\n|    9|   Blue|  -27503.73985|  -27249.21828|   Blue|      √|\r\n|   10|   Blue|   -20528.4457|   -19991.1248|   Blue|      √|\r\n|   11|   Blue|  -20337.96493|  -19860.12831|   Blue|      √|\r\n|   12|   Blue|  -28409.28489|  -28118.98017|   Blue|      √|\r\n|   13|    Red|  -13756.01015|  -14488.11751|    Red|      √|\r\n|   14|    Red|  -17221.22732|  -17710.15936|    Red|      √|\r\n|   15|    Red|  -17397.45136|  -17899.98659|    Red|      √|\r\n|   16|    Red|  -10724.69095|  -11092.77837|    Red|      √|\r\n|   17|    Red|  -10402.40027|  -10859.48681|    Red|      √|\r\n|   18|    Red|   -9371.53792|    -9669.6769|    Red|      √|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|                                      Total: 18/18, 100.0% |\r\n+-----------------------------------------------------------+</pre>\n<p><strong>100% 的准确率哦！</strong>事实上，对于我们的这个例子，就算不设置停用词，我们仍能达到 100% 的分类准确率。朴素贝叶斯分类的确很 NB 呢。</p>\n<h1>更进一步</h1>\n<p>我们的探索到这里就结束了，但如果你有兴趣，完全可以继续探索下去。我们的例子是一个非常简化的例子，在实际情况中，还有很多问题需要解决。比如，对于中文及类似语言，不存在拉丁语系的天然分词结构，而朴素贝叶斯的文本分类是基于单词的，那么<strong>中文的分词就会是个问题；</strong>再比如，对于朴素贝叶斯分类来说，<strong>词语之间的顺序是不影响分类结果的</strong>，但这就会导致“今天心情很好，但昨天不好”和“昨天心情很好，但今天不好”在朴素贝叶斯看来是一样的，要想获得更好的结果，我们必须<strong>考虑词语的顺序。</strong></p>\n<p>这些问题，今天我们就不再深究了，但你可以自己探索。比如，引入思路同样很简洁的马尔科夫链，我们就可以让计算机学会考虑词语间的顺序，不过那就会是另一个话题了。</p>\n","link":"https://flyhigher.top/develop/1989.html"},{"title":"MDx 中增强页面可访问性的细节","date":"2020-01-25 16:45:04","description":"\n<blockquote><p>这篇文章本来是打算发在 <a href=\"https://mdxblog.flyhigher.top/\">MDx Blog</a> 的，不过写到后来发现这篇文章相对来说还是有价值的，于是就将这篇文章转移到了无垠，MDx Blog 则不再发表这篇文章。</p></blockquote>\n<p>从 MDx 开发之初，增强页面的可访问性就被列为了一个重要目标。从 HTML 语义化，到 ARIA 地标，再到 <code>prefers-reduced-motion</code>，随着浏览器对于增强页面可访问性的支持功能越来越多，MDx 也在不断地更新，让更多的人都能毫无困难地浏览、查看由 MDx 渲染的网页。本文会详细说明一些 MDx 中增强页面可访问性的细节，<strong>如果你希望增强自己开发的网页的可访问性，本文可能会对你有所帮助。</strong></p>\n<h1>基础性增强</h1>\n<p>增强可访问性，最重要也是最基础的一点就是 HTML 语义化。通过使用 HTML 5 语义化标签和 ARIA Role 标签，我们可以很方便地<strong>将整个网页在语义上分为几部分，而这将有效地改善屏幕阅读器对网页的分析质量，使视力障碍用户更好地浏览网页。</strong></p>\n<h2>HTML 语义化</h2>\n<p><strong>HTML 语义化属于增强页面可访问性的基础中的基础。</strong>通过使用语义化的 HTML 标签，我们可以方便地为网页中的各部分标记功能而不影响页面样式。随着符合 HTML 5 的现代化网页成为主流，语义化标签已被很大一部分网站所支持，我也不过多赘述了。就举几个常用的“地标性”标签吧：</p>\n<ul>\n<li>\n<code>header</code> 标签标记页眉，默认样式同 <code>div</code>，不要把它和 <code>head</code> 搞混了</li>\n<li>\n<code>main</code> 标签标记页面的主要内容，默认样式同 <code>div</code>\n</li>\n<li>\n<code>article</code> 标签标记文章（在 HTML 5 中它指任何独立或可复用的文本），默认样式同 <code>div</code>\n</li>\n<li>\n<code>footer</code> 标签标记页脚，默认样式同 <code>div</code>\n</li>\n<li>\n<code>nav</code> 标签标记页面导航栏区域，默认样式同 <code>div</code>\n</li>\n<li>\n<code>aside</code> 标签标记侧栏，默认样式同 <code>div</code>\n</li>\n<li>\n<code>section</code> 标签标记“一组内容”，你可以把它看作是划定网页中一块区域的通用标签，默认样式同 <code>div</code>\n</li>\n</ul>\n<p>只要用这些标签替代 <code>div</code> 而不是无脑使用 <code>div</code> 就能提高页面的可访问性。MDx 使用了这些标签来增强页面的可访问性。</p>\n<h2>下一步，ARIA</h2>\n<p>有的时候，出于一些原因，我们没法使用语义化的 HTML 标签，或者没有合适的语义化标签来标记内容，这时候<strong>我们就需要使用 ARIA (Accessible Rich Internet Applications，可访问的富互联网应用)。</strong>ARIA 的基础用法很简单，只要在相应元素上加上 <code>role</code> 属性指定该元素的功能即可。下面是一个简单的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;div role=\"navigation\"&gt;\r\n  &lt;ul&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page A&lt;/a&gt;&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page B&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page C&lt;/a&gt;&lt;/li&gt;\r\n  &lt;/ul&gt;\r\n&lt;/div&gt;</pre>\n<p>通过 <code>role=\"navigation\"</code>，我们把一个 <code>div</code> 标记为了导航栏区域。实际上，对屏幕阅读器来说，这和 <code>nav</code> 标签在语义上是一致的。上一节中的例子都可以分别用以下 ARIA Role 表示：</p>\n<ul>\n<li><code>role=\"heading\"</code></li>\n<li><code>role=\"main\"</code></li>\n<li><code>role=\"article\"</code></li>\n<li><code>role=\"contentinfo\"</code></li>\n<li><code>role=\"navigation\"</code></li>\n<li><code>role=\"complementary\"</code></li>\n<li><code>role=\"region\"</code></li>\n</ul>\n<p>除此以外，MDx 还使用了 <code>role=\"banner\"</code> 和 <code>role=\"search\"</code> 来分别标记页面中的顶部栏和搜索表单。另外，<strong>有的时候 <code>role</code> 属性还需配合 <code>aria-*</code> 属性一同使用</strong>，具体规则比较复杂，我就不在这里赘述了，具体可参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles\">WAI-ARIA Roles - MDN</a>。</p>\n<h1>媒体查询来帮忙</h1>\n<p>CSS 的媒体查询其实是一个非常强大的特性，<strong>妥善利用其中的一些特性，我们可以在网页外观上大大增强网页的可访问性。</strong>除了已经烂大街的“对浏览器窗口大小”响应的媒体查询，我会介绍 3 个很少有网站充分利用的媒体查询。</p>\n<h2>print</h2>\n<p><code>print</code> 媒体查询其实已经“历史悠久”了，<strong>只要使用 <code>@media print {...}</code> 就可以创建只在打印页面时生效的样式。</strong>通过这种方式，我们可以让页面在打印时应用一套为打印优化的样式，增强页面在物理纸张上的可访问性。</p>\n<blockquote><p>维基百科是对打印样式做了单独适配的著名例子。</p></blockquote>\n<p><strong>由于在打印的情况下，页面已经离开了“可交互”的范围，还有分页这种在屏幕中无需考虑的问题，要让页面在物理纸张上仍能被轻松地阅读，我们需要做一些特殊的适配。</strong>直接来看一个例子吧。以下是 MDx 针对打印情况进行的一些特殊优化，样式的具体理由已经写在了注释中。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media print {\r\n    /*隐藏不必要的元素*/\r\n    header, .mdx-ad-after-article, .mdx-ad-in-article, .mdx-post-money, .page-footer-nav, .mdx-same-posts, .spanout button, .mdui-drawer, .mdui-overlay, .mdui-menu, .mdx-share-img-dialog, .mdx-share-wechat-dialog {\r\n        display: none!important;\r\n    }\r\n\r\n    /*使用下划线标记链接*/\r\n    article a {\r\n        text-decoration: underline!important;\r\n    }\r\n    /*由于纸张不可交互，在链接后显示链接到的 URL*/\r\n    article a::after {\r\n        content: \"(\" attr(href) \")\";\r\n    }\r\n\r\n    /*强制白底黑字*/\r\n    html &gt; body {\r\n        background-color: white!important;\r\n    }\r\n    article p {\r\n        color: rgba(0,0,0,.8)!important;\r\n    }\r\n\r\n    /*对于纸张上的长文章，衬线字体拥有更好的可读性。以下字体列表来自 fonts.css*/\r\n    article {\r\n        font: 13pt Georgia, \"Nimbus Roman No9 L\", \"Songti SC\", \"Noto Serif CJK SC\", \"Source Han Serif SC\", \"Source Han Serif CN\", STSong, \"AR PL New Sung\", \"AR PL SungtiL GB\", NSimSun, SimSun, \"TW\\-Sung\", \"WenQuanYi Bitmap Song\", \"AR PL UMing CN\", \"AR PL UMing HK\", \"AR PL UMing TW\", \"AR PL UMing TW MBE\", PMingLiU, MingLiU, serif!important;\r\n    }\r\n\r\n    /*除部分元素外，禁止在元素内部分页*/\r\n    * {\r\n        page-break-inside: avoid;\r\n    }\r\n    article p, article a, #comments, article {\r\n        page-break-inside: auto;\r\n    }\r\n}</pre>\n<p>MDx 自 1.9.3 版本起已经包含了对文章页的打印样式优化。可以很容易地看出，优化后的样式在物理纸张上将更容易阅读。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\" alt=\"\" width=\"1345\" height=\"1602\" class=\"aligncenter size-full wp-image-1959\"></a>\n<h2>prefers-color-scheme</h2>\n<p><code>prefers-color-scheme</code> 是最近才被浏览器广泛支持的一个媒体查询，但它的功能却很强大：<strong>响应系统级黑暗模式。</strong>这样，我们可以在开启黑暗模式的系统中让网页具有更好的可读性。不过由于这个媒体查询直到最近才被广泛支持，因此大部分网站对此并没有进行适配。</p>\n<blockquote><p>一些适配这一特性的网站：少数派、微信公众平台（文章页）等。</p></blockquote>\n<p>通过像这样的媒体查询，我们可以在系统启用黑暗模式时让页面实时响应：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    body {\r\n        background-color: #212121;\r\n        color: rgba(255, 255, 255, .7);\r\n    }\r\n}</pre>\n<p><code>prefers-color-scheme</code> 一共有 3 个可能值：<code>no-preference</code>, <code>light</code> 和 <code>dark</code>。你也可以不像上面的例子那样默认使用亮色样式并在黑暗模式下启用黑暗样式，而可以反过来将黑暗样式作为默认，用亮色样式覆盖。在不支持的浏览器上将会显示默认样式（即媒体查询不会生效）。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<h2>prefers-reduced-motion</h2>\n<p>看名字就猜得出，<code>prefers-reduced-motion</code> 是和 <code>prefers-color-scheme</code> 师出同门的媒体查询。因此，和 <code>prefers-color-scheme</code> 一样，它也是在最近才获得了浏览器的广泛支持。它的作用也很强大：<strong>响应系统的“减弱动态效果”模式。</strong>这对某些不喜欢甚至无法接受动画的用户可能很有帮助。要知道，对有些用户来说这甚至是医疗上的必要。使用如下的媒体查询，我们可以在系统启用减弱动态效果模式时让页面实时响应，减弱动画：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-reduced-motion: reduce) {\r\n    /*只是一个示例，实际情况中可以保留一些淡入淡出效果*/\r\n    * {\r\n        transition: all 0s!important;\r\n        transform: none!important;\r\n    }\r\n}</pre>\n<p><code>prefers-reduced-motion</code> 只有 2 个可能值：<code>no-preference</code> 和 <code>reduce</code>，在不支持的浏览器上该媒体查询不会生效。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\" alt=\"\" width=\"792\" height=\"515\" class=\"aligncenter size-full wp-image-1962\"></a>\n<h1>黑暗模式适配</h1>\n<p>黑暗模式可不是简单地切换到黑底白字这么简单。<strong>单纯地使用黑底白字会导致页面元素之间对比度过高，文字刺眼，反而降低了页面的可访问性。</strong>我在下面总结了几条应用在了 MDx 中的黑暗模式优化规则和 Google 推荐的优化规则：</p>\n<p><strong>一是避免黑底白字。</strong>黑底白字看起来真的很难受，事实上，深灰和浅灰是黑暗模式最好的配色。比较下方例子里的两段文本，毫无疑问深灰色背景和浅灰色文字搭配的样式的可读性要比黑底白字高很多。（p.s. 有时候这条规则在白底黑字时也适用）</p>\n<p><strong>二是更改部分元素的亮度和对比度以增强可读性。</strong>你可能已经注意到了，下面优化的例子里标题文字的颜色改变了。很明显，未优化的黑暗模式中标题可读性不如优化的版本。在实际中，我们通常可以通过 CSS 滤镜来实现这一更改。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    h1 {\r\n        /*反相颜色后再将色相旋转 180 度，使亮度反相*/\r\n        filter: invert(1) hue-rotate(180deg);\r\n    }\r\n}</pre>\n<p><strong>三是避免让图片过亮。</strong>未经处理的图片通常会导致过高的对比度，降低可读性。在 MDx 中，我选择降低图片的亮度来避免图片刺眼，而 Google 的建议则是使图片灰度，不过这会影响图片的整体观感。无论是哪一种方案，都可以使用 CSS 滤镜来轻松实现。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    img { \r\n        /*MDx 方案*/\r\n        filter: brightness(.8);\r\n        /*Google 方案*/\r\n        filter: grayscale(.5);\r\n    }\r\n}</pre>\n<div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是未优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是经过优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n</div>\n<h1>其他细节</h1>\n<p>还有一些细节，虽然简单，但不可或缺。我把一部分没有在上文提到的 MDx 中的细节列在了这里。</p>\n<p><strong>一是允许页面缩放。</strong>在开发响应式页面时，很多网站会在页面头部添加这样一个 <code>meta</code>：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"&gt;</pre>\n<p>这样的 <code>meta</code> 设定了页面的宽度，却也固定了页面的缩放比例，用户难以手动放大网页。<strong>这样的设置对一部分视力障碍用户非常不友好</strong>，以至于苹果决定在自家的浏览器上忽略禁止缩放的 <code>meta</code>。按照 Google 的推荐，如果你在 MDx 设置中启用了“允许页面缩放”，那么 MDx 会输出这样的 <code>meta</code> 标签，允许页面进行五倍以内的缩放：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=5\"&gt;</pre>\n<p><strong>尽管很多时候放大页面会导致页面结构被破坏，但这大大增强了页面的可访问性，利大于弊。</strong>因此，在 MDx 中，“允许页面缩放”是默认启用的。</p>\n<p><strong>二是在跨设备阅读时同步阅读记录。</strong>这属于 MDx 的“元老级”功能之一。注意到页面右上角的那个“在其他设备上继续阅读”的按钮了吗？如果你滚动页面后重新点击它，你会发现二维码发生变化了。通过在二维码中记录阅读进度，用户在扫描二维码切换设备阅读时，MDx 在新设备上会自动滚动到和原设备上一致的位置——好吧，目前基于百分比的算法在某些情况下可能不太准，但我已经设计了一个更复杂但更精确的阅读进度记录算法，之后就会更新到 MDx 中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\" alt=\"\" width=\"1000\" height=\"574\" class=\"aligncenter size-full wp-image-1976\"></a>\n<p><strong>三是避免 Web 字体阻塞渲染。</strong>如果你在页面中使用了 Web 字体，在字体加载完成之前，浏览器可能不会渲染任何文本，这就导致用户可能需要等待一段时间才能开始浏览网页。Google 推荐使用 <code>font-display: swap;</code> 来向浏览器指定网页的 Web 字体渲染策略。这一规则会提供一个比较短的等待周期，如果在这段时间内 Web 字体没有完成加载，那么浏览器会以 fallback 字体渲染文本。任意时刻一旦 Web 字体完成渲染，浏览器就会使用 Web 字体重新渲染文本。这在大多数情况下都能满足可访问性的需求。</p>\n<p><strong>四是确保 html 元素具有合适的 <code>lang</code> 属性。</strong>这一属性声明了页面的主要语言，浏览器可以据此调整渲染策略，或者触发自动翻译；屏幕阅读器也能更好地阅读网页。</p>\n<p><strong>五是确保页面主要内容在丢失/禁用了 Javascript 甚至 CSS 的情况下仍然可用。</strong>作为一个以内容为主的网站，MDx 在禁用了 Javascript 的情况下页面主要内容仍然可用。这不只是为了 SEO，更是为了保证页面的可访问性。的确，目前的情况下，如果开启了 Lazyload，MDx 在禁用 Javascript 的情况下图片的确无法显示，但我会在后续版本中尽可能的优化这一问题。</p>\n<h1>附录：媒体查询开发技巧</h1>\n<p>有的时候，光有 CSS 响应媒体查询还不够，我们可能需要在 Javascript 中实时响应媒体查询。用如下代码就可以很简单地响应媒体查询：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let mql = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\r\nmql.addListener(handleMediaChange);\r\n\r\n//在添加监听后先调用一次，获得当前查询结果\r\nhandleMediaChange(mql);\r\n\r\nfunction handleMediaChange(mql){\r\n    if(mql.matches){\r\n        //查询匹配\r\n    }else{\r\n        //查询不匹配\r\n    }\r\n}</pre>\n<p>在开发上述媒体查询的过程中，我们需要频繁地切换系统的相应模式或者调出打印窗口。<strong>实际上，Chrome 提供了更简单的调试方法：</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1946\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\" alt=\"\" width=\"723\" height=\"681\"></a>\n<p>只要在这里更改模式，相关媒体查询就能实时生效。这不会影响其他标签页，在关闭开发者工具之后也会自动恢复系统设置。</p>\n","link":"https://flyhigher.top/develop/1912.html"},{"title":"MDx Blog 现已随 MDx 1.9.5 发布","date":"2020-01-22 17:54:11","description":"<p>随着 MDx 发布 1.9.5 更新，<a href=\"https://mdxblog.flyhigher.top/\" rel=\"noopener noreferrer\" target=\"_blank\">MDx Blog</a> 现已建立。我将会在 MDx Blog 中分享一些开发故事并发布 MDx 更新日志。</p>","link":"https://flyhigher.top/diary/1905.html"},{"title":"GitHub 2019 统计无垠版","date":"2020-01-12 13:02:00","description":"\n<h1>缘起</h1>\n<p>2019 年底，我突发奇想想要自己统计一番 GitHub 上存储库的一些信息。尽管 GitHub 有自己的<a href=\"https://octoverse.github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">年度统计</a>，我还是想试着自己爬取一下，说不定能挖出什么有意思的信息，何况这是我第一次有机会处理比较大量的数据，也算是一种学习的过程吧。于是花了一下午写了个简单的爬虫（时间都花在增加 Rate Limit 上了...），然后扔在了两台服务器上开始跑（GitHub  API 真是好文明）。</p>\n<p>从 2019.11.21 3 时到 2020.1.12 24 时的 52 天 21 小时内，我的爬虫一共爬取了<strong>与 2,024,705 个用户有关<sup>*</sup>的 14,651,923 个公共存储库的基础信息</strong>，平均每秒爬取 3.2 个存储库。据 GitHub 的官方数据计算，我爬取了大约 15% 的存储库信息，但由于封禁库和私有库的数量未知，我暂时无法确定我爬取的存储库占公共库的比例。同时由于存储库数量较多，基本可以认为爬取到的样本在时间尺度上已经足够随机，可以通过统计得出一般结论。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\" alt=\"\" width=\"700\" height=\"606\" class=\"aligncenter size-full wp-image-1892\"></a>\n<p>爬到自己了，合影.jpg</p>\n<p>那么下面就来看看统计出来的一些结果吧。爬虫的技术细节和数据集下载放在文末。</p>\n<p>* 指这些用户拥有至少一个库</p>\n<h1>统计信息</h1>\n<p><strong>以下统计结果均基于已放于文末的数据集。</strong>由于爬虫爬取的时间跨度长，加上我并没有完整爬取 GitHub 所有存储库，因此我<strong>不能保证以下统计结果符合真实情况</strong>，各位可以下载数据集或自行爬取进行验证。</p>\n<h2>一些数据</h2>\n<div>\n<div>\n<div>\n<span>3,120,930</span><br>总爬取用户数</div>\n<div>\n<span>44.7%</span><br>的存储库创建<br>自 Fork</div>\n<div>\n<span>6.59%</span><br>的账户被删除或<br>封禁<sup>1</sup>\n</div>\n<div>\n<span>23,913</span><br>单用户拥有最大<br>库数量<sup>2</sup>\n</div>\n</div>\n</div>\n<p><sup>1</sup> 基于用户 ID 规律合理推断<br><sup>2</sup> 统计范围仅限于当前数据集</p>\n<p>比较出乎我意料的是创建自 Fork 的存储库的占比。我预估这样的存储库占比不会太低，但没有想到能接近一半。此外单用户拥有最大库数量也大大超出了我的预期，<a href=\"https://github.com/pombredanne\" rel=\"noopener noreferrer\" target=\"_blank\">pombredanne</a> 这个用户名下拥有将近 24k 的存储库，不过绝大多数都是 Fork 来的，在情理之中。此外<strong>这个数据集中</strong>拥有最多存储库的账户其实是一个组织 <a href=\"https://github.com/gitpan\" rel=\"noopener noreferrer\" target=\"_blank\">gitpan</a>，这个组织拥有 36,377 个存储库。</p>\n<h2>语言</h2>\n<p><canvas></canvas><br>\n首先必须要说明的是，在这个榜单中我<strong>排除了 HTML 和 CSS</strong>，因为在严格意义上它们不属于“编程语言”。如果把它们计算进来的话，分别有 640,368 个和 361,425 个存储库的主要语言分别是 HTML 和 CSS，这样在这份榜单中它们可以排到第 6 和 第 10 名。JavaScript 毫无疑问获得第一，第二名 Python 的热度则和 JavaScript 相差将近一半。<strong>此外还有 2,448,486 个存储库未能识别出语言，占比 16.7%。</strong>在上面的榜单之外，与机器学习和数据科学相关的语言还有 Jupyter Notebook 排名第 13，R 排名 20，Julia 排名 43。</p>\n<p>说实话这份排名和 GitHub 官方的排名<strong>差别很大</strong>，除了前三名，后面的基本都不太一样。我的排名统计结果完全基于 GitHub 对于存储库的主要语言识别，加上我的存储库数据不完整，和官方的数据不同是很正常的，可以做一个参考，但大概率还是官方排名更加准确。</p>\n<h2>许可证</h2>\n<p><canvas></canvas></p>\n<p>自 GitHub 推出许可证功能以来，拥有许可证的存储库比例升升降降，却始终没有超过一半。<strong>选择一个合适的许可证对项目的良好发展真的很有帮助</strong>，要了解如何选择合适的许可证，请参阅<a href=\"https://www.runoob.com/w3cnote/open-source-license.html\" rel=\"noopener noreferrer\" target=\"_blank\">这篇文章</a>。</p>\n<p><canvas></canvas></p>\n<p>对于拥有许可证的存储库，MIT<del> 麻省理工许可证 </del>总是占比最大的；第二则是 Apache-2.0 许可证。此外，WTFPL 许可证也挤入了前 15 名。</p>\n<h2>星标</h2>\n<p><canvas></canvas><br>\nStar 数量毫无疑问是一个存储库受欢迎程度的体现，而 Star 数高的项目基本上大家都了解过。<strong>截至爬取结束时间</strong>，GitHub 中 Star 数最多的库是 <a href=\"https://github.com/freeCodeCamp/freeCodeCamp\" rel=\"noopener noreferrer\" target=\"_blank\">freeCodeCamp</a> <del>非常完美的驼峰命名法</del>，其次则是著名项目 <a href=\"https://github.com/996icu/996.ICU\" rel=\"noopener noreferrer\" target=\"_blank\">996.ICU</a>。<a href=\"https://github.com/vuejs/vue\" rel=\"noopener noreferrer\" target=\"_blank\">Vue</a> 现在的 Star 数已经稳压 <a href=\"https://github.com/facebook/react\" rel=\"noopener noreferrer\" target=\"_blank\">React</a> 一头，Vue YES! 此外 <a href=\"https://github.com/sindresorhus/awesome\" rel=\"noopener noreferrer\" target=\"_blank\">awesome</a> 也挤进第七名。<br><canvas></canvas><br>\n由于 Star 需要时间积累，新项目的 Star 数量很可能是比不过老项目的，这就会导致有实力的新项目无法出现在榜单中。因此我还统计了日均 Star 数，试图通过日均 Star 数来反映项目受欢迎的程度。<strong>由于正热门的项目会比老牌热门项目有优势，这一项的统计范围是 2020-01-01 之前的所有存储库。</strong>996.ICU 和 freeCodeCamp 再次出现在前 10 名，而最近的热门项目 <a href=\"https://github.com/wenyan-lang/wenyan\" rel=\"noopener noreferrer\" target=\"_blank\">wenyan</a> 则飙升至第 2 名。此外还有 <a href=\"https://github.com/menzi11/BullshitGenerator\" rel=\"noopener noreferrer\" target=\"_blank\">BullshitGenerator</a>，即最近热门的“狗屁不通文章生成器”和 <a href=\"https://github.com/evil-huawei/evil-huawei\" rel=\"noopener noreferrer\" target=\"_blank\">evil-huawei</a> 分列第 3 和第 5 名。<br><canvas></canvas><br>\n说实话这个曲线<strong>比我预估的陡多了。</strong>你可能已经注意到了，这个图表的横轴不是均匀缩放的，实际上曲线要比看起来陡很多。同时受爬取方式的影响，GitHub 中 Star 数较少的存储库数量远比我爬取到的多。也就是说，<strong>实际情况下曲线远比这个图表上的陡。</strong>拿点 Star 不容易啊。</p>\n<h2>名称</h2>\n<p><canvas></canvas><br>\n终于知道了原来存储库的名称是有长度限制的...尽管最长有 100 位，<strong>大部分人还是喜欢 8 位长的存储库名。</strong>此外 1 位长的名称也比我预估的要多一些。举几个存储库名称长度为 100 的例子吧。</p>\n<ul>\n<li>testing-something-elsetesting-something-elsetesting-something-elsetesting-something-elsetesting-some</li>\n<li>acts_as_validated_config_so_app_will_not_run_in_random_situation_and_qa_gays_will_not_cry_to_you_whe</li>\n<li>............................................________-....................................-.---......</li>\n<li>----------------------------------------------------------------------------------------------------</li>\n<li>nyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyan</li>\n</ul>\n<p>...创造力有够丰富的。</p>\n<p><canvas></canvas></p>\n<p>最近 GitHub 上有一种奇怪的风气，那就是建立 Awesome 合集<del>骗 Star</del>。看起来 Awesome 存储库满地都是，甚至还出现了关于 Awesome 的 Awesome 合集这种迷惑行为。于是我统计了一下，<del>还好，</del>占比<del>才</del> 0.5% 不到<del>，Awesomer 们任重而道远呐</del>。</p>\n<p><canvas></canvas></p>\n<p>尽管要在 github.io 上托管网站，存储库不一定要以 .github.io 结尾，但我还是统计了一下。拥有这类存储库的用户比我预想的要少一些，看来还有很多人没有完全发挥 GitHub 的完整实力啊<del>（比如我 Doge）</del>。同时<strong>这类存储库在所有存储库中占比 1.12%</strong>，看起来不多<del>，不过至少比 Awesome 多</del>。<br><canvas></canvas><br>\n看得出来 GitHub 对于用户名长度的限制是 1-40 位。用户名最短的 27 位占据了 <code>A-Z</code> 外加 <code>-</code> 的所有可能，而用户名最长的则是一个组织 <a href=\"https://github.com/UOIT-RESEARCH-database-information-group\" rel=\"noopener noreferrer\" target=\"_blank\">UOIT-RESEARCH-database-information-group</a>。不知道是巧合还是某种规律，<strong>最受欢迎的用户名长度和存储库名称长度一样，都是 8</strong>，有点意思。</p>\n<h2>创建时间</h2>\n<p><canvas></canvas><br>\n由于我并没有完整爬取所有存储库，我只能以相对值来统计每月新增存储库数量的变化趋势。<strong>在这个图表中，我将 2017-09 的数据设为了 100%。</strong>你一定一眼就能注意到 2017 年 6,7,8 月的“一柱擎天”。<del datetime=\"2020-02-05T09:18:30+00:00\">我第一次看到这个数据的时候的确愣了一下，不过就着这条新闻看就能明白为什么了：<strong>2017 年 6 月微软收购 GitHub。</strong></del></p>\n<blockquote><p>重新确认了一下，微软收购 GitHub 比这个高峰晚了一年，目前我对这个高峰没有什么很好的解释，如果你有什么思路的话欢迎评论。</p></blockquote>\n<p><strong>需要注意的是这张图表中我排除了 Fork 存储库</strong>，因为 Fork 存储库在 API 中的创建时间是原始存储库的时间，会影响整体趋势。此外，GitHub 中还有一个创建于 2007 年 10 月 29 日的存储库，那就是 <code>id: 1</code> 的...</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"mojombo\" data-mdxgithubp=\"grit\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/mojombo/grit\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>而它的创建者正是 GitHub 的创始人之一 Tom Preston-Werner。</p>\n<h1>一些有趣的结果</h1>\n<p>当初打算自己爬的目的之一就是想看看能不能挖出什么有意思的信息，结果真的有一些不挖不知道的信息。</p>\n<h2>奇怪的存储库</h2>\n<p>在爬取到的所有存储库中，<strong>有 3 个存储库是“无主”的</strong>，即它们的 owner 属性为空。这三个存储库的基本信息如下。</p>\n<div class=\"mdui-table-fluid mdui-table-hoverable\"><table class=\"mdui-table\">\n<thead><tr>\n<th>ID</th>\n<th>名称</th>\n<th>Forked</th>\n<th>Star</th>\n<th>语言</th>\n<th>许可证</th>\n<th>创建于</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>72385291</td>\n<td>vscode-redprl</td>\n<td>否</td>\n<td>10</td>\n<td>TypeScript</td>\n<td>apache-2.0</td>\n<td>2016-10-31 08:50:01</td>\n</tr>\n<tr>\n<td>181218346</td>\n<td>electron-sys</td>\n<td>否</td>\n<td>10</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-14 03:20:56</td>\n</tr>\n<tr>\n<td>181391880</td>\n<td>node-sys</td>\n<td>否</td>\n<td>6</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-15 09:33:08</td>\n</tr>\n</tbody>\n</table></div>\n<p><strong>更奇怪的是这三个存储库“无主”的情况还不一样。</strong>第一个存储库可以通过 <code>/repositories</code> 这个 GitHub API 找到， <a href=\"https://api.github.com/repositories?since=72385290\" target=\"_blank\" rel=\"noopener noreferrer\">这个链接</a>中的第一个存储库就是它；而其余两个存储库甚至无法在 <code>/repositories</code> API 中找到。不过就算能在 API 中找到第一个存储库，它的 <code>html_url</code>，即 <code>https://github.com//vscode-redprl</code> 仍然是不可访问的。这可能是 GitHub 早期的一个 Bug 导致的，不过我仍然对爬虫是如何找到这三个存储库的以及这些 Stars 是哪里来的感到好奇。</p>\n<h2>奇怪的用户名</h2>\n<p>在爬虫爬了一段时间以后，API 中突然开始出现大量的以 fdp 开头的 18 位乱码作为用户名的用户。这些用户拥有的存储库和 starred 的存储库都为 0，而他们的 <code>html_url</code> 为 404。以下是几个例子。</p>\n<ul>\n<li>fdpEpolGCEdQX4ZlRJ</li>\n<li>fdp8XaVrdtmDZnO5pR</li>\n<li>fdp8XRAGnwAOkTr2Ya</li>\n</ul>\n<p>由于我的爬虫并没有超过 Rate Limit，所以我排除了这是污染数据的可能。我怀疑这可能是某种 Bot 账户，于是一边更新爬虫过滤掉了这些用户，一边给 GitHub 支持发邮件问了具体情况。过了两天 GitHub 回复我说这些是<strong>被自动判为可疑进而被封禁的用户</strong>（原话是 they have been flagged by our automated measures for detecting suspicious behavior）。<del>想到我正在疯狂爬取 GitHub，突然害怕.webp</del></p>\n<p>行吧。</p>\n<h1>技术细节</h1>\n<p>爬虫使用 Python3 编写，数据库使用 MySQL。爬虫共使用了 4 个 API Token，在两台服务器上分布式爬取。爬取思路为：</p>\n<ol>\n<li>通过 <code>/users</code> API 遍历用户，每个请求最多获取 30 个用户信息</li>\n<li>循环 30 个用户，分别获取 <code>/users/&lt;user_name&gt;/starred</code> 和 <code>/users/&lt;user_name&gt;/repos</code> API 中的存储库信息，每个请求最多获取 100 个存储库信息，超过 100 个的分页获取</li>\n<li>提取存储库信息，插入数据库。对于已存在的存储库，更新数据</li>\n<li>获取下 30 个用户信息</li>\n</ol>\n<p>由于爬取过程中我多次调整了爬虫逻辑，爬虫爬取到的用户 ID 区间并非连续的，具体区间为1-839586, 14800001-14885493 及 28965251-31161101。</p>\n<h1>免责声明</h1>\n<p>本站会尽可能地提供准确信息，但本站不对此文章中信息的准确性和即时性及带来的任何影响负责。</p>\n<p>本站不代表 GitHub 官方，本文仅供学习之用，请不要将本文内容直接用于任何商业项目中。</p>\n<h1>数据集下载</h1>\n<p>导出的 SQL 文件大约为 1.38GB，全部放在了 GitHub 上（在危险的边缘试探.webp</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"github-analysis-2019\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/github-analysis-2019\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>此外我也提供了 MEGA 下载，链接<a href=\"https://mega.nz/#F!juxm3A6T!7Vwpzi82W1OFrqTLu1A1pQ\">在这里</a>。</p>\n","link":"https://flyhigher.top/develop/1564.html"},{"title":"Milkice 跨年红包解谜 Writeup 及无垠跨年红包解谜答案","date":"2020-01-02 04:29:19","description":"\n<blockquote><p><del>又到了水文章的时间呢</del></p></blockquote>\n<p>先说明一下，这篇文章原本不是在计划中的，而原来说好的「在路上的两篇」文章<del>绝对不会咕</del>。我自己的红包答案本来打算直接塞在年度总结里的，结果发现稍微有些长，再加上我还花了一些时间解了<a href=\"https://milkice.me/\">奶冰</a>的红包解谜游戏，就打算把两个解谜过程放在一起单独写一篇文章。<del>真是个水文章的好理由</del>（被打死</p>\n<h1>奶<del> 子 </del>冰的红包</h1>\n<p>奶冰的红包题目比我的难多了，所以让我们先从难的开始吧。首先看一下<a href=\"https://milkice.me/2019/12/31/2019-summary/\">题目</a>：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1524\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\" alt=\"\" width=\"746\" height=\"410\"></a>\n<p>入口是 <code>happy.2020.milkice.me</code>，扔到浏览器里面表示找不到 IP，那么大概率就是 DNS 的 TXT 记录了，查一下得到 <code>nb2hi4dthixs63ljnrvwsy3ffzwwkl3tivrvezluomxxg5dsmvqw2ltqmnqxa3th</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1525\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\" alt=\"\" width=\"896\" height=\"278\"></a>\n<p>第一眼没看出来是什么编码，直觉是 BaseXX 系列的编码，加上提示“不只有 Base64”，可以推断出是 Base32，转大写解码得到 <code>https://milkice.me/sEcRets/stream.pcapng</code>。是个 URL，下载得到一个 Wireshark 文件，打开一看是和某 USB 设备的通讯抓包。<del>不会做，不做了。</del></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1526\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\" alt=\"\" width=\"1500\" height=\"813\"></a>\n<p>奶冰提示我“Google 上搜得到”，结合第二条提示搜索“wacom pcapng”找到了<a href=\"https://blogs.tunelko.com/2017/02/05/bitsctf-tom-and-jerry-50-points/\">这篇文章</a>（<del>这™就是答案啊</del>）。看起来是一样的套路，即通过解析数据得到数位板上画的内容，于是按文章的思路筛选出数位板发给主机的数据，导出，然后再用 tshark 导出文本数据。本来我想直接用文章中的 POC 的，结果折腾半天因为源的蜜汁原因库没装上，于是按文章中给出的数据结构自己写了段代码，分别导出 X、Y 轴数据扔进 Excel 画散点图。（<del>别问我为什么用 Excel，因为我手边没有更好的工具了</del>）</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1528\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\" alt=\"\" width=\"1280\" height=\"530\"></a>\n<p><span>翻车现场之一</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1539\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\" alt=\"\" width=\"1000\" height=\"286\"></a>\n<p><span>懵逼奶冰.webp</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1533\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\" alt=\"\" width=\"1500\" height=\"462\"></a>\n<p>看得出有手写文字，不过是上下颠倒的，翻转图片得 <code>https://milkice.me/2020/uso.zip</code>。是个 zip，下载打开一看，有密码。<del>不会解，不做了。</del> 第一反应是暴力解密码，但是暴力跑了 15 分钟还是没有跑出来。暴力太不优雅了，肯定不是正确思路，但奶冰什么都不肯说了。不过在这时我终于发现第一个红包口令码就藏在压缩包的注释中，Get。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1544\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\" alt=\"\" width=\"806\" height=\"593\"></a>\n<p>然而题还没解完，回去看提示，看到提供了 osu 谱面下载，于是打算不管怎么样先下载来看看。然而 osu 谱面下载要登录，只好又花了几分钟找到第三方站点，成功下载。这时候可以注意到 uso.zip 里有个同名文件（432314 Mike Greene - Bill Nye the Science Guy Theme Song (Chinese Intro).osz），可以联想到是明文攻击。好吧，上 ARCHPR，十秒解出。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1530\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\" alt=\"\" width=\"462\" height=\"643\"></a>\n<p><span>现场还原.jpg</span></p>\n<p>.osz 文件并不是明文，猜测是压缩包（和 .pptx 一个思路嘛），于是改后缀 .zip 顺利打开。然后红包口令码就藏在奶冰的 .osu 文件中了，由提示可知是明文，打开即可得到。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1542\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\" alt=\"\" width=\"457\" height=\"255\"></a>\n<h1>我的红包</h1>\n<p>相比起来<a href=\"https://flyhigher.top/diary/1464.html\">我的题目</a>就简单很多了嘛...三天时间一共发出了 25 个红包，包括一位重复领取的🌚，比前几年还是多了一些的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\" alt=\"\" width=\"500\" height=\"306\" class=\"aligncenter size-full wp-image-1554\"></a>\n<p><span>这位同学以后请不要多次领取🌚</span></p>\n<p>那么来看看答案吧。</p>\n<h2>第一阶段</h2>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>首先观察字符串，可以发现 <code>.</code> <code>/</code> <code>_</code> 等一些 ASCII 字符原样留在了字符串中，而其他字符被由 <code>=</code> 和十六进制构成的某种编码所替代。如果你正好有所了解，你应该能认出这是 Quoted-printable 编码，这是一种常用于邮件中的编码，可以用<a href=\"https://mothereff.in/quoted-printable\">这个页面</a>解码。如果你不了解，你也应该可以发现这种编码和 URL 编码非常相似。如果你把 <code>=</code> 替换为 <code>%</code>，那么你就可以用各种方法顺利地把它按 URL 编码来进行解码，最后可以得到 <code>αхtоn.іm/соdе_оf_2020_⒈mρз</code>。这个字符串里大部分字符都不是 ASCII 字符，只是长得像而已。根据第一个提示“全是 ASCII 字符”，按样子把字符串用 ASCII 字符抄一遍，可以得到最终 URL 为 <code>axton.im/code_of_2020_1.mp3</code>。</p>\n<h2>第二阶段</h2>\n<p>下载音频，可以听出音频是经过某种处理的白噪音。白噪音的特点是各频段的功率都均匀分布，在白噪音上做文章，很容易就可以联想到线索藏在频谱中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1534\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\" alt=\"\" width=\"1200\" height=\"719\"></a>\n<p>频谱被处理成了 24x3 的网格，结合第二条提示“24x3，横向读取”可以推断出是将频谱当作二进制读取，得到 <code>01111001 01110010 01100011 00101110 01101101 01100101 00101111 00110010 00110000</code>，转为 ASCII 字符可得 <code>yrc.me/20</code>。</p>\n<h2>第三阶段</h2>\n<p>打开上一步得到的页面，提示要求输入十位数密码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1536\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\" alt=\"\" width=\"663\" height=\"460\"></a>\n<p>如果你在上一步注意到了这个音频文件奇怪的属性，你可以反应过来这里的密码就是 <code>2000202020</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1537\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\" alt=\"\" width=\"421\" height=\"651\"></a>\n<p>如果你没有注意到，查看页面代码可以看到一条注释 <code>&lt;!-- Tips: the attribute of the audio --&gt;</code> 将你引导向音频文件的属性。输入密码，解锁即可进入下一步。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1535\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\" alt=\"\" width=\"397\" height=\"223\"></a>\n<h2>第四阶段</h2>\n<p>可以看到是一张图片，内容为“<del>.JPG</del>”和“.ZIP”。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter size-large wp-image-1532\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n<p>和去年一样的套路，下载图片，将后缀名改为 .zip 然后打开，可以看到 README.txt。</p>\n<h2>最后一步</h2>\n<p>查看 README.txt 的内容，可以了解到需要去 🤔.axton.cc 获取红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1538\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\" alt=\"\" width=\"1131\" height=\"278\"></a>\n<p>扔到浏览器里会出现奶冰同款找不到 IP，于是可以联想到 TXT 记录。唯一的问题是 🤔 这个 Emoji 需要如何处理。域名使用 Punycode 将 Unicode 字符转换为 ASCII 字符，特点是以 <code>xn--</code> 开头。如果你把上面这个域名扔进浏览器，你会发现它变成了 <code>xn--wp9h.axton.cc</code>。然后查询 TXT 记录，即可得到红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1527\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\" alt=\"\" width=\"804\" height=\"557\"></a>\n","link":"https://flyhigher.top/develop/1519.html"},{"title":"无垠 2019 年度总结","date":"2019-12-29 12:25:52","description":"\n<p>又是时间飞快的一年...写 2018 总结的情景似乎还在眼前，转眼居然已经到 2019 年末了。</p>\n<p>2019 年，发生了太多事情，包括真的转折了人生的高考，这也导致我博客更新的不多（难以置信居然才更了两篇...），不过两篇技术性文章已经在路上了，可以期待一下。</p>\n<p>2019 年我也学了不少东西（单指技术方面），比如终于认真学了 Vue（但是还要练手）。书买了一大堆，看完的倒是没几本orz</p>\n<p>呼，好吧，是时候回顾一下充满坎坷的这一年了。2019 年还剩下最后两天，希望 2020 年，我能做得更好。</p>\n<h1>一些数据</h1>\n<p>照惯例先来看看一些数据吧。今年是统计系统完整统计了的第二年，终于可以和去年的数据比较一下了。以下数据的统计范围是 2019年1月1日0时至 2019年12月29日20时。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 26,901 (<span>+4%</span>)，年 PV 76,583 (<span>+3%</span>)，日均 UV 73.7，平均停留时间 5分13秒 (<span>-13.8%</span>)，平均跳出率 53% (<span>+20.5%</span>)。一年有效文章数 2 (<span>-50%</span>)，新增评论 439 条。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\" alt=\"\" width=\"1000\" height=\"1143\" class=\"aligncenter size-full wp-image-1511\"></a>\n<p>有趣的是今年文章数腰斩，访问数反而小有提升。<del>如果我哪天不更新了，访问数是不是可以无限大呢？</del></p>\n<p>今年博客最大的改动就是把整体风格切换到了 Material Design 2（当然这是 <a href=\"https://flyhigher.top/develop/788.html\">MDx</a> 中的可选功能，给自己打个广告2333），此外还有比较失败的 WebP 改造计划，因为和缓存冲突已经回滚了。<a href=\"https://flyhigher.top/develop/1245.html\">ABS 系统</a>进展不大，主要是真的没有太多时间，还是要再学习一个。</p>\n<h2>个人主页</h2>\n<p>虽然个人主页的 TODO List 列了老长，但今年完全没有更新，也没有推广，从今年 8 月底开始还莫名被某墙认证了，直到 11 月底才恢复，于是今年总访问量比去年少了很多，</p>\n<p>有多少呢？这么少：总 UV 2,141 (<span>-65.9%</span>)，总 PV 2,744 (<span>-66.6%</span>)，日均 UV 6 (<span>-65.9%</span>)，平均停留时间 62秒 (<span>+19.2%</span>)。主要来源是知乎和 V2EX，还有一些甚至是从微信来的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\" alt=\"\" width=\"1000\" height=\"1103\" class=\"aligncenter size-full wp-image-1512\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 8 次，新增 171 commits，2 种语言的翻译，Star 数增加了 175，现有 408。感谢所有人的支持，尤其是 <a href=\"https://github.com/Sn0bzy\" rel=\"noopener noreferrer\" target=\"_blank\">Hasan CAN</a>, <a href=\"https://github.com/yechs\" rel=\"noopener noreferrer\" target=\"_blank\">Ye Shu</a>, <a href=\"https://github.com/StarryLeo\" rel=\"noopener noreferrer\" target=\"_blank\">StarryLeo</a>, <a href=\"https://github.com/DCTewi\" rel=\"noopener noreferrer\" target=\"_blank\">冻葱Tewi</a>, <a href=\"https://github.com/syfxlin\" rel=\"noopener noreferrer\" target=\"_blank\">Otstar Lin</a> 等为 MDx 做出了不小贡献的你们。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：<a href=\"https://flyhigher.top/photograph/1309.html\">上手</a> DJI OSMO Pocket</li>\n<li>四月：最后一次参加浙江省普通高中学业水平考试</li>\n<li>五月：MDx 喜提 300 Stars</li>\n<li>六月：高考 <del>炸了，差亿点点上浙大</del>\n</li>\n<li>六月：入手了 Oneplus 7 Pro</li>\n<li>六月：和同学一起去成都重庆旅行</li>\n<li>六月：第一次近距离感受到地震</li>\n<li>六月：<a href=\"https://flyhigher.top/diary/1411.html\">入手</a>了一台雷蛇灵刃 15，目前是主力机</li>\n<li>七月：参与组织 THE Hack 2019 活动</li>\n<li>七月：面基了 <a href=\"https://itroy.cc/\" rel=\"noopener noreferrer\" target=\"_blank\">Tory</a>, Bie Shi 和 <a href=\"https://oxz.me/\" rel=\"noopener noreferrer\" target=\"_blank\">FHYunCai</a>\n</li>\n<li>八月：一个人去厦门武汉转了一圈，拍了自己的第一个 Vlog</li>\n<li>八月：入手了一个 Kindle Paperwhite 4，没有泡面可以压，于是用来看英文小说了</li>\n<li>八月：加入 TEDxNingbo 志愿者团队</li>\n<li>八月：和 Ralph 面基</li>\n<li>八月：入手了一个 Yubikey</li>\n<li>九月：人生第一次参加雅思考试 <del>7分，蛮开心的</del>\n</li>\n<li>十月：入手了一个 Samsung Galaxy Watch Active 2 <del>觉得不值</del>\n</li>\n<li>十一月：MDx 达到 400 Stars</li>\n<li>十一月：为 TEDxNingbo 设计开发的 H5 上线</li>\n<li>十一月：入手了第一台胶片相机，试图入坑胶片摄影</li>\n<li>十一月：参加 TEDxNingbo 2019 大会</li>\n<li>十二月：<del>我 Cytus II 入门了</del>\n</li>\n</ul>\n<h1>跨年红包</h1>\n<p>这算「传统习俗」了。和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2020年1月2日。</p>\n<p>今年的解谜旅程，从下面这个字符串开始。</p>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>由于今年的题目比以前稍微难了一些，所以今年的红包金额还是比较大的，而且不限量，尽你所能试一试吧。</p>\n<p>一点你可能用得上的提示：URL 里全是 ASCII 字符 / 24x3，横向读取。</p>\n<p><a href=\"https://flyhigher.top/develop/1519.html\">答案</a>已公布。</p>\n<h1>跨年海报</h1>\n<p>这算是另一个「传统习俗」（笑）。因为我有做跨年海报的习惯，所以以下就是今年份的海报啦。</p>\n<p>用了 C4D+PS，还有我的一整个下午。</p>\n<p>提前祝各位新年快乐！</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter wp-image-1467 size-large\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n","link":"https://flyhigher.top/diary/1464.html"}]