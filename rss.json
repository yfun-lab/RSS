[{"title":"《三角战略》游戏中人物强度哪些角色好用？","date":"2022-09-15 10:57:13","description":"\n<p data-pid=\"Tbl6cX3U\"><b>特别鸣谢：感谢风花吹雪ACC对本篇文章的大力支持~~</b></p>\n<p data-pid=\"McUV7-6d\"><b>关于故事流程分析（超长文警告）：</b></p>\n<a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://www.zhihu.com/question/516429321/answer/2609952483\" data-image=\"https://picx.zhimg.com/v2-9132c1cbe613683218c13e6aefe0c8bd_qhd.jpg?source=b1748391\" data-image-width=\"1280\" data-image-height=\"720\" class=\"internal\">如何评价《三角战略》这款游戏的剧情？</a><p data-pid=\"MVjdnJhL\"><b>关于结局分析（超长文警告）：</b></p>\n<a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://zhuanlan.zhihu.com/p/555570459\" data-size=\"small\" data-image=\"https://picx.zhimg.com/v2-5f6aaa369dbabdb299178364b910e38d_720w.jpg?source=b1748391\" data-entity-type=\"article\" class=\"internal\">【三角战略】四个结局完整分析，主角们的抉择对诺泽利亚的影响</a><p data-pid=\"ojYG_28P\"><b>前言：</b>讲人物的时候，顺便会讲讲基础机制，30个人物会全部更完的。其实没有弱的角色，只有使用偏好而已。</p>\n<h2><b>01 手握信念大旗的当家 瑟雷诺亚</b></h2>\n<p><img src=\"https://pic2.zhimg.com/v2-0b22f4c92c086d35530f4cea2e059267_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1056\" data-rawheight=\"432\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-0b22f4c92c086d35530f4cea2e059267\" data-watermark-src=\"v2-d8a6afc31864a83c4c9a39dd662b3e99\" data-private-watermark-src=\"v2-a4250c25bac5e56a496f0cabaea38a7a\"></p>\n<p data-pid=\"QTZhKqCv\"><b>加入条件：</b>本作主人公</p>\n<p data-pid=\"ItZAVqWu\"><b>特色：</b>全人物中最高的力量与暴击率，围绕着追击、反击，击杀恢复成为队伍中的核心一员。拥有守护队友，为全员增加TP的能力，相当全面均衡，但缺少爆发技。</p>\n<p data-pid=\"Eq1qBOqW\"><b>人物介绍：</b>瑟雷诺亚是近年来我见过的少有的不过分彰显个性的正派主角。他为人正派，向往正义与公平，身为沃荷德的当家，是一位相当杰出的剑士。在他出色剑术的表现下，使他成为同伴们协力作战的核心成员。</p>\n<p data-pid=\"_i-4qjUY\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-92a4fbe7b5978b6228e264655381526c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1140\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-92a4fbe7b5978b6228e264655381526c\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"D9-4KSU1\"><b>通用解读：</b>在如上数据表中，我们看到的是瑟雷诺亚达到50级，转职为最高级职业（3级），并且锻造完全兵器后所呈现的数据。黑字为基础数据。红字为“武器锻造”后可获得的额外属性。（其他人物相同，介绍新人物时不再赘述）</p>\n<p data-pid=\"xW-Tlnmu\">通常来说，由于前期敌我各项数据都较低，从武器中获得的数值越早，对于战斗的提升能力越大。</p>\n<p data-pid=\"CboVOhV_\">瑟雷诺亚的特点，是拥有全人物中最高的力量（决定物理伤害），达到56点力量的全游戏中一共只有四位角色。他的生命值、双抗都相当出色。大多数属性处于中等偏上的位置。</p>\n<p data-pid=\"SlRqlSXy\">在基础的伤害计算公式中，物理计算力量和物防，魔法则计算魔力与魔抗。如果一个角色没有魔法伤害技能，则魔力是无用属性。</p>\n<p data-pid=\"mZf8TAwj\">公式如下：</p>\n<p data-pid=\"aA7H5uaE\">伤害＝(（力量/魔力×4–物防/魔抗×2）×武器系数+5+武器威力)×(威力倍率+被动威力提升)×(1+暴击+特效+高度补正)×属性耐性×难易度补正</p>\n<p data-pid=\"TE_gc_wA\">我们通常能用到的部分，简化一点是：</p>\n<p data-pid=\"hq1qNnI9\">伤害＝(（力量/魔力×4–物防/魔抗×2）×武器系数+5+武器威力)×(威力倍率+被动威力提升)×(1+暴击）</p>\n<p data-pid=\"9dJCcxXY\"><b>武器强化</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-16d4304c8850432a8c123ffcbf0b2901_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-16d4304c8850432a8c123ffcbf0b2901\" data-watermark-src=\"v2-392f8b2b6312251b824da87cc17437ec\" data-private-watermark-src=\"v2-f404ad885b7ba0c527e309cd37428cec\"></p>\n<p data-pid=\"HN-cg9H2\"><b>通用解读：</b>在《三角战略》中，人物的大多数特色被动都广泛存在于“武器”之中，我们可以将武器理解为天赋树。每个角色的武器都分为一二三，总计三个层级。在消耗特定素材与金币解锁前，下一层的武器天赋不可见，同样不可强化。</p>\n<p data-pid=\"nfCR27kv\"><b>*新手注意：</b>解锁新的武器层级，本身不会给武器提高任何属性。只是解锁了新的一层天赋树而已。在图表中，被黑框框住的部分，说明有升级的前置条件。例如武器威力提升2，在武器威力提升1未解锁前，不可解锁。</p>\n<p data-pid=\"aY0a_PCq\">同一层之间，每升级一个天赋，会影响到同层下一个天赋的素材消耗量。具体表格如下。</p>\n<p><img src=\"https://pica.zhimg.com/v2-07d534611c52cd0f6d5001b274238d91_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1338\" data-rawheight=\"491\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-07d534611c52cd0f6d5001b274238d91\" data-watermark-src=\"v2-53bee46724e3257af068af886fdfb8c9\" data-private-watermark-src=\"v2-871ad24f2d9de73f3645572ea4f46621\"></p>\n<p data-pid=\"PBeJQKRS\">例如瑟雷诺亚消耗的素材为铁矿石，那么第二层的第四个天赋，就需要消耗掉十颗优质铁矿石，一颗特级铁矿石与1500的金币。所以在前期资源短缺时，点开每个角色的核心天赋，使队伍的整体作战能力提升，其效果要远远好于对于个别角色的深度强化。</p>\n<p data-pid=\"FgsZV3cW\"><b>天赋树中有不少角色拥有“二选一”天赋，</b>即只能发挥一种效果的天赋，不过无需担心，在铁匠铺，<b>你可以调整生效的天赋</b>。<b>而非</b>选择一次终身固定。</p>\n<p data-pid=\"eqEdx0ck\">武器威力提升是影响伤害的直观手段。每名角色或是拥有10点威力提升，或是拥有20点威力提升。通常来说，10点威力提升的物理角色，伤害通常要逊于20点提升的角色。</p>\n<p data-pid=\"-W5Bl1hM\"><b>瑟雷诺亚天赋树解读：</b>他的武器强化消耗素材为纯种的铁矿石系列，在《三角战略》中，绝大多数角色的武器升级，都需要消耗铁矿石，这使得资源方面有些吃紧。天赋为543结构。消耗资源相对较多。</p>\n<p data-pid=\"SUyPSDuG\">这里需要着重讲解的，是“击破时回复HP”，这个天赋。当瑟雷诺亚的攻击、技能亦或者“追击”产生击杀时，则会恢复最大生命值的20%。一次技能同时击杀多名角色，也只能够恢复20%最大HP。其中的“追击”，要详细讲解一下，许多“击杀”产生效果的天赋都是这样计算的。</p>\n<p data-pid=\"hJtk3Upq\">假如AB两人都有击杀后触发特效的技能，那么如果A发动攻击未击杀角色，B追击击杀角色，那么A的击杀特效不发生效果，B的击杀特效产生收益。<b>如果A击杀角色，触发B的追击，那么AB两人同时触发击杀特效。</b></p>\n<p data-pid=\"OO7soTiC\"><b>技能篇</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-bb6c9ef845aab5c097ece10ec44a9450_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1121\" data-rawheight=\"1096\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-bb6c9ef845aab5c097ece10ec44a9450\" data-watermark-src=\"v2-37fd25812855b6ab6742539e82708502\" data-private-watermark-src=\"v2-648551fcee4471ff48c9dafd8586ed35\"></p>\n<p data-pid=\"HqrYoqvh\"><b>通用讲解：</b>在《三角战略》中，取消了MP的存在，取而代之的是TP系统。每个角色在战斗开始时都会拥有3点TP值，在首轮行动后（本轮不增长），每轮行动都会恢复1点TP，不超过TP上限。</p>\n<p data-pid=\"w1ryDnMW\">TP上限：初始职业只有3点TP，中级职业则是4点TP，高级职业是5点TP。</p>\n<p data-pid=\"nenZrwIA\">通常消耗1点TP的技能，可以看作是该名角色的常驻技能，消耗2点TP的技能，则需要做好规划了。</p>\n<p data-pid=\"s1oWUj8_\"><b>瑟雷诺亚技能解析：</b></p>\n<p data-pid=\"tm-ivDSs\"><b>减速剑：</b>本身消耗1TP，但会使自己的攻击力打折90%，有一定拖慢对手行动的能力，但并不算特别可靠，不过配合工匠的减速网，可以对强力角色进行一定程度的控制。若是将其作为主要输出手段，也可以选择将其强化。但由于飞鹰击出色的效果，通常会选择强化飞鹰击。</p>\n<p data-pid=\"_igAAjm8\"><b>追击之势：</b>简要解析一下游戏中的夹击系统，当敌人C被我方A，B两名普通攻击为近战的角色从两个方向夹击时。那么，A攻击C角色，伤害结算后，将触发B对C的攻击。此时B造成的伤害为B对C普攻伤害的50%。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-50424847e1538f476ca278e629745cd9_720w.jpg?source=b1748391?rss\" data-rawwidth=\"101\" data-rawheight=\"101\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-50424847e1538f476ca278e629745cd9\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"s2VACk0M\"><b>*注：</b>若攻击瞄准的为C的背部，将提高20%命中率（侧面攻击提高10%命中率），必定触发致命一击（暴击），暴击产生的伤害，为正常结算伤害后×1.3。</p>\n<p><img src=\"https://picx.zhimg.com/v2-fb7a2938fbd3f1f2c40b25d3ce70ed36_720w.jpg?source=b1748391?rss\" data-rawwidth=\"167\" data-rawheight=\"101\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-fb7a2938fbd3f1f2c40b25d3ce70ed36\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"564ccK9V\">另一种情况，则是D为射手，对C角色使用射击，这时也会触发A的追击。</p>\n<p data-pid=\"mesPY4UQ\">瑟雷诺亚的追击之势，则是在自身产生对敌人的追击时，威力由50%上调至65%。配合高幸运、高力量往往能造成相当不错的伤害。</p>\n<p data-pid=\"G-NX0dhQ\"><b>飞鹰击：</b>消耗2TP，非常优秀的技能，武器升级之后，打击范围为3格。高度差也高达±5。该技能加成优秀（130%），可从远端触发对手的追击。若是由高打低，可触发高度差伤害加成，每1点高度差，可增加总伤害的2%，最多增高10%。</p>\n<p data-pid=\"SdxQRO4_\">触发暴击的情况下，即普攻伤害×1.3×1.4。</p>\n<p data-pid=\"TdmKrs8b\">通常飞鹰击出现在帝国的鹰骑兵战士中，唯有瑟雷诺亚不乘鹰，依然能施展这宛若猎鹰俯冲而下的强力招式。</p>\n<p data-pid=\"LBwolK-H\"><b>反击之势：</b>受到邻近四格的敌人攻击时（无论物理魔法），将给予敌人反击，造成50%普攻伤害。</p>\n<p data-pid=\"ksRgd2Me\"><b>旋风斩：</b>自身无法触发追击，伤害对比普攻略有缩减，优势之处在于可以触发暴击（背部必爆），配合高幸运，暴击结果又是每个角色独立结算，可打出相对不俗的伤害。</p>\n<p data-pid=\"kdaTZBCH\"><b>有情有义：</b>在两格范围内，高度正负差不超过2的情况下，如果队友在身边，则会使瑟雷诺亚的力量+2。触发与瑟雷诺亚的夹击时，必定会触发的增加伤害效果。需要注意的是，当瑟雷诺亚行动时，如果已在队友身旁，<b>那么即使移动到远处发动攻击，身边并没有队友，这次攻击依然会享受+2力量的加成。</b></p>\n<p data-pid=\"PIyyE7fm\"><b>有难同当：</b>我个人用的比较少的技能，但对于我方角色有着较为出色的保护能力。譬如盾卫遭到雷击会里面陷入濒死状态，若是由瑟雷诺亚分担50%的伤害，便一定程度上减轻了血量负担，另外此技能在守护脆皮角色时，也有一定效果。</p>\n<p data-pid=\"HMEmDUmT\"><b>追随信念之旗：</b>以自身为中心，波及范围极广的群体辅助技能。正如前文所说，伙伴们施展2TP的强力技能时，往往需要先积攒一轮，因此贻误战机。但瑟雷诺亚的终极技能，会将大范围内的全体我方角色恢复1TP，作为群体技能运转的关键。</p>\n<p data-pid=\"12qpVRd_\">该技能体现了瑟雷诺亚的兼爱，亦是吹响反击号角的奏鸣。</p>\n<p><br></p>\n<h2><b>02 掌控火焰的第一公主 芙蕾德丽卡</b></h2>\n<p><img src=\"https://pic3.zhimg.com/v2-e6d216eeca9b5a8c343ad68eda103bed_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1054\" data-rawheight=\"434\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-e6d216eeca9b5a8c343ad68eda103bed\" data-watermark-src=\"v2-562a4129ae77bb319cb462e14eebe114\" data-private-watermark-src=\"v2-e3234d3b49e9c66f99c711057bb51b66\"></p>\n<p data-pid=\"EqQimXGu\"><b>加入条件：</b>本作女主人公</p>\n<p data-pid=\"IzsHjtnb\"><b>特色：</b>所有魔法师中最高的魔力，双重加成，火中强化魔力，魔法输出最为恐怖的存在。击杀即可恢复TP的火焰魔女。</p>\n<p data-pid=\"B7qAtp5W\"><b>人物介绍：</b>长着一头玫瑰色秀发的公国第一公主，其发色来源于母亲罗洁尔族的“罪人”血统。在教国，罗洁尔一族世代在盐湖劳作，如同教国的奴隶一般。也因为这样的血统，公国的亲人们十分讨厌芙蕾德丽卡。她被许配给了沃荷德当家之子 瑟雷诺亚，虽然这是公国与王国为了对抗教国的一场政治联姻，但在两人携手对抗突袭而来的盗贼时，两人便已确定彼此是自己命中注定之人。</p>\n<p data-pid=\"MHJONtDS\">因为沃荷德家在盐铁大战时期，便将一部分罗洁尔族人收到领地之中，作为单独的罗洁尔村保护了起来。沃荷德家是大陆上少有的对罗洁尔族没有任何偏见的一群人。</p>\n<p data-pid=\"krL9vFTz\">芙蕾德丽卡公主虽然率真、善良，正如她口中所言，自己是为了和平而战，但其性格中亦有缺乏权谋，过于天真的一面。不过其优秀的火焰魔法，使其成为了队内不可或缺的一员。</p>\n<p data-pid=\"D4UUKHy0\">败阵台词或呼唤母亲，或呼唤瑟雷诺亚，看来在其生命之中，这便是她最为重要的两人了。</p>\n<p data-pid=\"MmS1-Svw\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-43791b65817dd2b9984e57c7af40a027_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1140\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-43791b65817dd2b9984e57c7af40a027\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"g-lMmtwy\">脆弱的生命，薄如纸的物理防御能力，使其注定不能成为前线的作战人员。魔抗虽然看起来颇为优秀，但自身对于冰霜魔法有-30%抗性，亦无法承受太多魔法伤害。芙蕾德丽卡所有的缺陷，都被其强大的魔力所掩盖。在30名可操纵角色中，芙蕾德丽卡的魔力位居第三。</p>\n<p data-pid=\"DuMa9bHI\">而前两名作为治疗者无法给予对手任何魔法伤害。也就是说在所有可操纵法师之中，芙蕾德丽卡的魔力是最为强大的。</p>\n<p data-pid=\"NuFtMvX2\">虽然三点的魔力优势看起来并不显眼，但在一众高额附加增伤的加持下，使得她成为了艳阳天下最为恐怖的火焰巫女。</p>\n<p data-pid=\"Oa5Y6vnf\"><b>武器强化：</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-78754727b5db002c5ae80fee5daf7c28_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1219\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-78754727b5db002c5ae80fee5daf7c28\" data-watermark-src=\"v2-256c50047ea5090b12dec016897f83df\" data-private-watermark-src=\"v2-b323acefa7c943130e7e9d25ace10a7d\"></p>\n<p data-pid=\"ZmAdlvJR\">芙蕾德丽卡的武器天赋，是大多数魔法师型角色的天赋构筑。特点是武器威力只能强化两级，即为10。魔法师的武器威力同样也可以提高魔法的威力。</p>\n<p data-pid=\"AGny1ut0\">后续魔力提升1，与魔力提升2，看起来提升的魔力数值不多，但3点魔力提升，实际上可提高12点的基础魔法伤害（倍率×12），比通常的武器威力提升10还要多2点。所以是非常有用的天赋。</p>\n<p data-pid=\"vod3CvF6\">芙蕾德丽卡的核心天赋，应该是晴天火伤提升、击破TP恢复、魔法威力提升的二选一（强化威力为10%）。晴天这个天气是大多数时候的通用天气，不过遇到暴雨、暴雪或者室内关卡，则没有将天气转晴的方法。晴天时火焰伤害提升15%，包含了芙蕾德丽卡自身的火盾，火焰道具和火焰魔法。</p>\n<p data-pid=\"O-5HJCBE\">击破TP恢复，由于芙蕾德丽卡的主攻技能需要消耗两点TP。所以，不断击破敌人，恢复1点TP便成了每次行动都能施展火焰魔法的必要条件了。上一个篇章中，利用芙蕾德丽卡追击，触发恢复TP的效果，在特定时候也颇为有效。</p>\n<p data-pid=\"Ipy-XcQh\"><b>消耗素材为纤维，</b>虽然素材与之争抢的人物不多，但是不注意的话，将容易将之消耗在混合素材的角色身上，导致芙蕾德丽卡武器无法升级。总层数为542，总消耗资源偏低。</p>\n<p><br></p>\n<p data-pid=\"LyCZ_rO2\"><b>技能解析：</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-c20f8637a4bc2ea098ebeb4a6821936c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1191\" data-rawheight=\"987\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-c20f8637a4bc2ea098ebeb4a6821936c\" data-watermark-src=\"v2-6410c25b1d4e953067f73c9569629634\" data-private-watermark-src=\"v2-5bcdd6f356883f3156e1ebbad5ff03ed\"></p>\n<p data-pid=\"edBDSF08\">芙蕾德丽卡作为火系魔法师，所有魔法造成的都是火系伤害，在此简要介绍一下火焰属性与地形的关系，并且简单说明一下燃烧地面的伤害计算方式。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-64cf09ee8fe1510a57cedad7ec8654a9_720w.jpg?source=b1748391?rss\" data-rawwidth=\"200\" data-rawheight=\"167\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-64cf09ee8fe1510a57cedad7ec8654a9\" data-watermark-src=\"v2-c8e4052b25646eddab35c1bff3ae6a15\" data-private-watermark-src=\"v2-6bf99cbe3a1446f7fbdd3a114fa65d5c\"></p>\n<p data-pid=\"GfC4aRdn\">正常火焰魔法攻击普通地面，不会发生燃烧现象。也就是说，如果地面并非农田，木箱子，草地等地点，想要人为点燃的话，需要先使用“油壶”。另一点需要注意的是，当油壶和地面的积水同时存在时，游戏中认定先蒸发积水。</p>\n<p data-pid=\"AfQL_LXl\">在游戏中，人物<b>经过燃烧的地面将受到5%的最大生命值火焰伤害</b>（可被火抗减免，不计算魔抗），而停留在燃烧的地面，<b>回合开始时则会受到10%最大生命值</b>的火焰伤害。</p>\n<p data-pid=\"wI4SFFSH\">获得燃烧时魔力提升后，芙蕾德丽卡在移动前，或移动后处于燃烧格子上，则基础魔力增加6点。如果并非刻意创造燃烧地面，该被动虽然强力，但应用面不广。</p>\n<p data-pid=\"WFlG5qDV\">魔法伤害无法产生“致命一击”（不能暴击），<b>炎击魔法</b>和<b>火焰锁魔法</b>是针对群体和单体相当不错的进攻魔法，选择强化哪一种，主要看想要针对战场上的哪一部分敌人。（强化式子实际为提升10%，譬如炎击魔法提升威力为105%×（1+10%）=115.5%，算上晴天加成则为105%×（1+10%+15%）=131.25%）</p>\n<p data-pid=\"ZKZ6NdfO\"><b>噬炎魔法</b>（受到火属性攻击可吸血）和<b>火盾魔法</b>都可以使我方角色免疫火属性伤害，特定情况可用。但考虑到其颇有些TP消耗量，多数情况不用。</p>\n<p data-pid=\"gOli8O9k\">芙蕾德丽卡的优势在于高魔力，多种加成，属性专一，拥有多种范围的火焰魔法打击手段，几乎可以应用于各种场景。</p>\n<p data-pid=\"yfB3S08u\"><b>最终奥义：陨落的太阳</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-a6a55e9c884a555e3da9fb38d003a871_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1280\" data-rawheight=\"720\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-a6a55e9c884a555e3da9fb38d003a871\" data-watermark-src=\"v2-b9d910d4e923f79175c29302b94b044b\" data-private-watermark-src=\"v2-eaa8fa82795487db925de6874c098da6\"></p>\n<p data-pid=\"hdS9qINy\">效果非常艳丽的广范围火焰魔法打击。任意TP均可发动，但低TP使用时伤害太低。升级到最高等职业后，5点TP可达威力最大。</p>\n<p data-pid=\"2xoOAcsK\">这招魔法涉及到“蓄力”机制。即魔法需要吟唱到下次公主行动时才会释放。下轮公主行动时，魔法伤害将以公主持有TP数量结算，且该轮不再自动增加1TP。如果没有特殊队友配合，往往这招容易贻误战机。而且即便有队友配合，在我看来，释放两次其它火焰魔法的收益也要远超过这个终极魔法。</p>\n<p><br></p>\n<h2><b>03 冷酷的军师 管家 本尼迪克</b></h2>\n<p><img src=\"https://picx.zhimg.com/v2-29be351eebb3acc5a159b9954fa80283_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1181\" data-rawheight=\"428\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-29be351eebb3acc5a159b9954fa80283\" data-watermark-src=\"v2-596b2ddf7eccb88c12e6a3b2691a1210\" data-private-watermark-src=\"v2-1a343283eaf7cbc8d15475f31e15891c\"></p>\n<p data-pid=\"b4kdZgUg\"><b>加入条件：</b>第一章，主角之一。</p>\n<p data-pid=\"I2lUzk2R\"><b>特色：</b>老谋深算，加强队友作战能力的军师，自身意外地也有不错的基础近战能力。</p>\n<p data-pid=\"qwhQ479a\"><b>人物介绍：</b>辅佐老当家 西蒙，忠心耿耿的管家。但比起管家，他更像是统筹一切的军师。在热血的故事中是个颇为反传统的存在。他的计谋通常精准狠辣，一切行动均以保护沃荷德家族利益优先，因此很多时候，显得有些不近人情。但他的存在，使得沃荷德家族在整个大陆的动乱中，得以存续。比起那些纸上谈兵的谋士，他本人有着相当强的前线指挥经验，自身的作战基本功也颇为扎实，是沃荷德家族不可缺少的谋臣。</p>\n<p data-pid=\"y-CripL9\">正如他经常说的那句话：“我看到了，通向胜利的道路。”</p>\n<p data-pid=\"GbjsNtdE\">他经常会为西蒙的妻子扫墓，这位年长于本尼迪克的姐姐，似乎对于他来说，是相当特别的存在。</p>\n<p data-pid=\"8f7n5hMH\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-7c074e5dde8e9af109b09eee69f28103_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1140\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-7c074e5dde8e9af109b09eee69f28103\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Ym_b5Gih\">本尼迪克的数据整体较为中庸，由于身着轻甲，有着出色的移动能力和跳跃能力。作为军师，生命值和防御力较为出色，危机时，可临时成为团队的副坦。</p>\n<p data-pid=\"fKTpEaCw\">自身力量不俗，幸运位列所有人物中的第二名，可在必要情况下参与补刀。虽然各项数据都很扎实，但也没有特别出彩的输出、防御能力。</p>\n<p data-pid=\"lAYd4zrK\">因为本尼迪克的价值，集中在他颇为杰出的指挥能力上。</p>\n<p><br></p>\n<p data-pid=\"9WtKlf-P\"><b>武器强化：</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-77862077a98d3f8c785d4ecde493d963_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-77862077a98d3f8c785d4ecde493d963\" data-watermark-src=\"v2-be640dbc080d4a9a30698469472eac77\" data-private-watermark-src=\"v2-554565863d6ab8ad74fd45893e747cf8\"></p>\n<p data-pid=\"FG16NjFb\">本尼迪克的天赋树中，包含了三个强化自身指挥技能的能力。其余皆为强化基础能力的天赋。由于经常要施展强力技能辅助队友，优先将其职业转为最高等级，获得5TP上限相当重要。倒是武器天赋带着点一点就可以，速度值对于本尼迪克相当重要，在主输出出手前，为其提供好buff，才能使其输出达到最高。</p>\n<p data-pid=\"TyZ3cK9t\">此外，龙鳞盾也是超级强力的技能，一定要优先点出。</p>\n<p data-pid=\"TBpmiMhR\"><b>素材消耗的是木材与石材</b>，较易升级。层数为553，总消耗资源高。</p>\n<p><br></p>\n<p data-pid=\"OFKdqYvr\"><b>技能解析：</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-8d257e8a92b08840095b488a0dba518c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1114\" data-rawheight=\"885\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-8d257e8a92b08840095b488a0dba518c\" data-watermark-src=\"v2-64ebac2b392f9b2041e7d9b842e66e23\" data-private-watermark-src=\"v2-3ff5e3bc7d2c2d762468874dc9c16bb8\"></p>\n<p data-pid=\"FThS4q5m\">本尼迪克的<b>猛如虎</b>与<b>坚如犀</b>，在前期敌我数据都较低的时候，是颇为强力的buff技能，尤其在前期得到强化后。4点的力量&amp;魔力（当然通常只能使用一种），5点的防御&amp;魔抗，都可以使人物的战斗力或防御力更上一层楼。但随着后期数值的增高，以及新技能的解锁。使得这两个招式的使用优先级有所下降。</p>\n<p data-pid=\"-o38SxYz\"><b>疾如鹰</b>增加的跳跃能力，可以使许多腿脚不利索的角色越过较矮的台阶，避免被战场分割。</p>\n<p data-pid=\"SqmQ3MZC\"><b>*跳跃为2的意思，就是指角色可以通过高度差为2的地形。</b></p>\n<p data-pid=\"ElbxBR66\"><b>开战TP+</b>，使本尼迪克开场即拥有4点TP。</p>\n<p data-pid=\"zMllju_y\"><b>心如止水</b>，则会使本尼迪克对于沉默，愤怒。魅惑免疫。</p>\n<p data-pid=\"6MTaTTEn\"><b>沉默：</b>无法使用技能。</p>\n<p data-pid=\"HLiS-DL2\"><b>愤怒：</b>强制普攻激怒你的角色，人物不受控制。</p>\n<p data-pid=\"Hpv-U77k\"><b>魅惑：</b>人物暂时倒戈，使用各种能力辅助对手，攻击队友。</p>\n<p data-pid=\"3K6MRNy-\">这里着重讲一下，就是现在和乘胜追击。</p>\n<p data-pid=\"ZBVqSVQN\"><b>就是现在！</b>这个技能并非让我方的角色多动一轮，而是将我方角色下次行动的次序变为本尼迪克之后。<b>也就是说行动结束后，需要跟据速度快慢重新排序。</b></p>\n<p data-pid=\"Q-AIBPLm\"><b>乘胜追击！</b>这个技能可以使我方角色在行动时，连续行动两次，即，可移动两次，可使用两次指令（攻击或技能）。但第二次行动时，不会获取每轮+1的TP。如果自身进入吟唱蓄力状态（例如释放陨落的太阳），也会直接结束掉当前回合，而不会有下次行动的机会。</p>\n<p data-pid=\"4IIOt3mL\">最后<b>龙鳞盾</b>是相当强力的保全我方战力的技能，施展之后，十字方格内的角色都将获得一次免疫伤害的能力。</p>\n<p data-pid=\"86RVsE6L\">考虑到本尼迪克与艾拉德尔是多年的好友，或许龙鳞盾的施用方式也是从艾拉德尔的仁王盾那里寻找到的灵感。</p>\n<p><br></p>\n<h2><b>04 刺客骑士 第二王子 罗兰</b></h2>\n<p><img src=\"https://picx.zhimg.com/v2-471de2c5357927f37d747dca8b56476b_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1052\" data-rawheight=\"428\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-471de2c5357927f37d747dca8b56476b\" data-watermark-src=\"v2-529b0d9f5afc0375fe4bea86c37fdec9\" data-private-watermark-src=\"v2-8f3952c53cb05088059324c2437e16e6\"></p>\n<p data-pid=\"rSKcPOul\"><b>加入条件：</b>第一章 主角之一。</p>\n<p data-pid=\"kIXplnnR\"><b>特色：</b>超强的战场穿插能力，技能型输出角色，独一无二的单杀刺客，但作为近战，体格过于脆弱。</p>\n<p data-pid=\"hs_4R64W\"><b>人物介绍：</b>格林布鲁克的第二王子，并没有国家的继承权，比起受到良好教育，被当作接班人培养的大王子。罗兰虽身处王室，但并不被看重，处于一种近乎被放养的状态。但麦克斯韦的故事里，似乎又透露出这件事另有原因。</p>\n<p data-pid=\"B5mncsNU\">罗兰是个颇为矛盾的人，正像游戏机制设计的那样，他骑着马，却使用着克制马匹的长枪。这种只出现在教国 海桑德的兵种，似乎也暗示了罗兰的最后抉择。</p>\n<p data-pid=\"6Mb5FRfb\">在故事中，罗兰其人也颇具自毁倾向，当危机来临时，罗兰总是会点燃内心中如同草莽的英雄情节——“牺牲自我，成就他人”，这仿佛成为了他的人生行动纲领。作为一位侠士，他是颇具魅力的，当初修艾特便是因为他的出手相救而下定决心守护在罗兰左右的。</p>\n<p data-pid=\"_iZNkQHv\">但当大陆陷入动荡，第二王子眼见保护自己的大哥离世，从陷落的王国得知一个个亲人，老师死亡时，他只有无尽的愤怒，却没有解决这巨大灾难的谋略，与容纳悲伤的气量。他并不是一个很好的国王人选，也从来没人期待过他能够成为国王，许多事我们对他无从指责，或许那也只是命运弄人罢了。</p>\n<p><br></p>\n<p data-pid=\"y_PZkLPq\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-5e467892d649ea6bf920779b1701b419_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1164\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-5e467892d649ea6bf920779b1701b419\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"aKgrrOLn\">蓝字6点幸运，为满血时触发的被动提供。移动+1点需在最高级职业晴天之时被动提供。</p>\n<p data-pid=\"XVAkR770\">罗兰伤害＝(（力量×4–物防×2）×武器系数+5+武器威力)×威力倍率×(1+暴击）</p>\n<p data-pid=\"mnSxK26m\">罗兰便是游戏中拥有至高力量的四人中的第二位。然而从伤害计算公式我们可以得知，罗兰对于其他敌人的基础伤害只有其它人的70%，他所使用的长枪虽然可以同时打击两个目标，但代价是伤害也极大地缩水了。</p>\n<p data-pid=\"4gUsKzbL\">不过长枪也有个优点，就是可以隔着己方角色利用攻击距离远的特点，触发队友的追击。</p>\n<p data-pid=\"n4sJU6P3\">作为一名主要依靠近战打伤害的角色，罗兰的普攻伤害偏低，幸运较为出色，容易打出暴击，命中略低。脆弱的身板，以及惧怕“枪类”攻击的兵种特性，让他几乎无法承受伤害。</p>\n<p data-pid=\"uN3zYC7W\">那么，如何利用罗兰打出高额伤害呢？这一点还要从罗兰的武器天赋与技能入手。</p>\n<p><br></p>\n<p data-pid=\"ctUKi9lO\"><b>武器强化：</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-c371b4611b3bada8160dc80cd2886181_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-c371b4611b3bada8160dc80cd2886181\" data-watermark-src=\"v2-25ed995537b8e6149814d6f1a2417632\" data-private-watermark-src=\"v2-f2ebfa0bf57a094d43e7e7ae5816f0c0\"></p>\n<p data-pid=\"l2b_GpK-\">由于罗兰需要消耗“铁矿石”强化武器，想要能打出伤害，则必须投入足够多的技能点数。</p>\n<p data-pid=\"o9rRm3SR\">另一方面他的武器天赋构成与瑟雷诺亚的结构几乎相同，这似乎也暗示了两人的关系。</p>\n<p data-pid=\"WMGvdaPY\">在天赋投入上，由于力量利用率低，武器威力提升则是实打实的，它们是罗兰提升伤害的必要天赋。而第二层的致命伤害提升，和各种各样的幸运提升，则说明了罗兰适合暴击流，利用高移动力进行绕背（必定暴击）打法，因此提升幸运的天赋倒是可以酌情延后开启。</p>\n<p data-pid=\"M9y1FXc1\">其它角色的暴击伤害为30%加成，而罗兰为50%加成。</p>\n<p data-pid=\"Qz7Jzjcp\">冲锋突刺和二连突刺孰优孰劣，我们在技能解析篇来说。</p>\n<p><br></p>\n<p data-pid=\"zo99IjwU\"><b>技能解析：</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-18c0c1a9d3b07083298fdc5ea8d6ffbb_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1138\" data-rawheight=\"831\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-18c0c1a9d3b07083298fdc5ea8d6ffbb\" data-watermark-src=\"v2-c8efc3582835974ce640598f7c91fdb9\" data-private-watermark-src=\"v2-7aac307243b705b87f549ecd9a808f10\"></p>\n<p data-pid=\"9WbQqNfp\">因为自身骑马，罗兰受到长枪类兵器攻击，伤害会提高至175%。在移动时要颇为小心。</p>\n<p data-pid=\"FREZ8cOP\">罗兰的所有技能都有着较高的TP消耗，并都能触发夹击。这使得他在没有辅助补充TP的情况下，往往使用的都是一波流的战法。这时武器天赋的减低TP消耗效果就体现出来了。</p>\n<p data-pid=\"pebYE_uf\"><b>二连突刺</b>有着极高的加成，当消耗TP降为1点时，可以作为常态化的输出手段。但这一定程度上会牺牲骑士的机动性。</p>\n<p data-pid=\"-cP4j_1J\">而<b>冲锋突刺</b>这个技能在施展技能的第四格为空时，罗兰能够位移至此，也就是说可以通过跑到敌人背后，再利用“冲锋”穿插回相对安全的位置。</p>\n<p data-pid=\"T7NzJdf4\">被动<b>奔袭</b>，是个相当不错的补充伤害手段，虽然其造成的伤害只有普通攻击的百分之五十。但作为移动后的补刀技能，仍是足够了——问题是，当罗兰同时接近两名角色时，奔袭的对象并不能由自己选定。</p>\n<p data-pid=\"pFu8M2Qg\">另外要十分注意，对方的盾牌兵以及高阶剑士，都有近战反击的能力，奔袭有可能触发敌人对罗兰的多次攻击。造成得不偿失的局面。</p>\n<p data-pid=\"Skr9eC_Q\"><b>马首击</b>除了自身伤害不错，也涉及到了碰撞伤害和掉落伤害。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-dc2b3300108ff2dc24c9b09f623ee6be_720w.jpg?source=b1748391?rss\" data-rawwidth=\"233\" data-rawheight=\"101\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-dc2b3300108ff2dc24c9b09f623ee6be\" data-watermark-src=\"v2-091ca1c65b43ff13f613cbaeb83fd182\" data-private-watermark-src=\"v2-373f6063c3d1668a8d1d1f75b4333ee1\"></p>\n<p data-pid=\"7iYT1W7k\">我们来看如图的两种情况，L代表罗兰，如果在1情况下使用马首击，则A会和我方队友B相撞，两者都受到碰撞伤害，<b>碰撞伤害与最大生命值和物理防御力挂钩</b>，粗略计算大概在10%最大生命值左右（没算出公式）。</p>\n<p data-pid=\"dXfl6erM\">而在2情况，使用马首击，A停留在B面前后，则会触发B的夹击，对A发动一次攻击。以后所有涉及到碰撞位移的技能，都是同样的效果。</p>\n<p data-pid=\"bFgpmrxm\">当敌人因为位移被撞落高台时，也会受到伤害，据我测算，10高度差会损失最大生命值的26%。8高度为22%，5高度为14%。1高度没有坠落伤害。由于并不成线性分布，公式我也没算出来，不过可以理解为高度越高，损失的最大生命值越多。而且从高台摔落还会造成敌人的临时减员。</p>\n<p data-pid=\"5JCH6f7w\"><b>龙闪</b>是强力的AOE技能<b>，</b>若直线上也排布着我方角色，将可触发多次追击。</p>\n<p><br></p>\n<p data-pid=\"GpMxwB_w\"><b>四头龙击：</b>对比枪圣麦克斯韦——罗兰的老师，这位精通近战的枪术大师，罗兰只从他身上学到了骁勇的一面，而且老师可以使用三连突刺，罗兰却只能使用二连突刺。这种利用多次突击弥补自身武器攻击力缺憾的技巧，罗兰也并没有完全掌握。</p>\n<p data-pid=\"AxIZ_aML\">这似乎也说明了罗兰的水平远不及自己的老师。</p>\n<p data-pid=\"wJtAp7l6\">但当罗兰解锁了四头龙击，利用超高速的刺击无视掉敌方防御之时，便是印证了在枪术上的某个部分，罗兰已经超越了枪圣 麦克斯韦。</p>\n<p data-pid=\"5UKUjpoJ\">前文我们已经分析过，因为力量低倍率加成，使得敌人的防御力对罗兰的伤害影响特别大。而四头龙击无视防御的特性，使得它成为了专门针对高防御角色的技巧。配合奔袭与致命一击加成，能打出相当恐怖的输出。</p>\n<p data-pid=\"H_DFwr7r\">不过四头龙击有种<b>凤凰乱点头</b>的架势，其<b>命中率要比普攻少20%</b>，为确保命中，最好还是配合绝技，或绕背使用。</p>\n<h2><b>05 盾如城墙的兵长 艾拉德尔</b></h2>\n<p><img src=\"https://picx.zhimg.com/v2-605d82399064992e9ebd0cee3a7010c8_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1224\" data-rawheight=\"433\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-605d82399064992e9ebd0cee3a7010c8\" data-watermark-src=\"v2-013177df2bf090a5871ba4e7f2733c21\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Tv6KuHro\"><b>加入条件：第二章</b></p>\n<p data-pid=\"eaPJT-by\"><b>特色：</b>首屈一指的物理防御力，团队的保护者，缺陷是魔抗极低。</p>\n<p data-pid=\"ILl3r8P-\"><b>人物介绍：</b>作为沃荷德家的兵长，他与本尼迪克共同辅佐西蒙，可以说是西蒙的左膀右臂，亦是本尼迪克的至交好友，只是两人的性格却是截然相反的。艾拉德尔粗放豪迈，不拘小节，十分看重“忠义”与“正统”，与本尼迪克唯有一点十分相像，那就是他也将“沃荷德家”的利益看的非常重。作为一个在信念天秤上有投票权的男人，有时他的想法显得略微有些固执。</p>\n<p data-pid=\"EoBq7Hty\">同时，现任当家 瑟雷诺亚，也是他一手带大的。是瑟雷诺亚长辈一般的存在。</p>\n<p data-pid=\"p0ZNA6qB\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-0f37f204f4e7c8d875303e1441b6334c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1164\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-0f37f204f4e7c8d875303e1441b6334c\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"xuXxWEJP\">拥有全人物第三的生命值，以及厚重到令敌人感到绝望的防御力。不过移动能力欠佳，劣势是他的魔防要排在全人物的倒数第二位。在遭遇敌人的魔法打击时，脆的就像一张纸。</p>\n<p data-pid=\"oGUtpZCQ\">由于魔防数据实在是太低，没有什么提升空间了，所以如果派遣艾拉德尔上场时，最好针对敌人法师属性，选择恰当的提升属性抗性的护符。两枚属性护符可降低60%的魔法伤害。不至于被敌人偷袭的法师刺杀减员。</p>\n<p data-pid=\"bltsasuT\">如果面对火系法师时，可以让芙蕾德丽卡对其使用火焰盾，提高100%的火焰抗性。</p>\n<p data-pid=\"IXUmKZ4k\"><br><b>武器强化：</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-af13de390a7c9fdc96ce0921eafa00a7_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1249\" data-rawheight=\"431\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-af13de390a7c9fdc96ce0921eafa00a7\" data-watermark-src=\"v2-49a2badadeac3e949c37ed73db7d69ff\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"izgSSlLk\">艾拉德尔的武器天赋多为提升基础抗性。消耗的铁矿石是较为紧俏的资源。</p>\n<p data-pid=\"JIxp4EXg\">他的武器威力仅仅提升到2级，导致他攻击伤害一般，仁王之盾、挑衅TP-1都是相当重要的技能。前者能让他聚拢敌人，并化敌人的攻击为无形，后者则可以使他每轮都可以施展挑衅，保护我方关键角色。</p>\n<p data-pid=\"PswPJHq0\">物理伤害提升，追击伤害提升，这个二选一技能，从表面上来物理伤害提升提供普攻、追击伤害（相当于提升至55%）、物理反击，技能伤害，提升范围极广。但实际战斗中艾拉德尔需要经常施展防御技能，导致实际主动进攻的情况并不多。</p>\n<p data-pid=\"nxKP948G\">而被挑衅或者仁王盾吸引来的敌人，我方角色倒是经常会与艾拉德尔连动，形成夹击。使得艾拉德尔可能会经常触发追击。孰优孰劣，还看玩家自行取舍吧。</p>\n<p data-pid=\"FjEaeW6x\"><br><b>技能解析：</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-440ec1ce5c3e91c0d243e92245564259_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1188\" data-rawheight=\"1039\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-440ec1ce5c3e91c0d243e92245564259\" data-watermark-src=\"v2-a41bccc5d6e40611b7dcfa4e41d26423\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"ZzlrhZPU\">​<b>挑衅</b>是艾拉德尔的核心技能，施展挑衅之后，敌人若是处于愤怒状态，则会追着艾拉德尔进行物理攻击，即便是法师也会拿着手中的书籍追打艾拉德尔。愤怒会使人失去理智与技能。故而挑衅是个十分强力的控制技能。</p>\n<p data-pid=\"b0Kpmgwu\"><b>足下生风</b>一定程度上可以弥补艾拉德尔作为前排，但移动能力欠佳的问题，通常战斗开始时会使用一次。</p>\n<p data-pid=\"O3vH8M1Y\"><b>钢背</b>是个相当有趣的技能，敌人攻击艾拉德尔的背后，依然会触发致命一击，进而造成130%的伤害，然而由于钢背的存在，这个伤害将被打折至65%。也就是说，使用其它角色时，尽量保证自己的正面面对敌人，而艾拉德尔由于钢背的存在，则需要让敌人尽量攻击他的后背。</p>\n<p data-pid=\"_RvRUWqS\"><b>撞击</b>应该是普通技能中可将敌人推行最远的技能了。与马首击不同的地方在于艾拉德尔也将前进一格。具体击坠伤害与碰撞伤害不再赘述。其用处与用法也相当多。但要尽量避免波及到队友。</p>\n<p data-pid=\"p4sZvMIl\"><b>物理反击</b>只要相邻的角色对艾拉德尔造成物理伤害，则艾拉德尔必定发动反击。这一点与瑟雷诺亚的反击之势（概率反击，贴近受到攻击、魔法都有概率反击）是不同的。同样也受到武器天赋物理伤害提升的加成。</p>\n<p data-pid=\"Opz5EPS2\"><b>舍身之势</b>是少有的，我评价为毫无用处的技能，该技能会将自身的物防降低6点，力量仅仅提升2点。而且本轮使用还会消耗掉“指令”，不可再动。讲道理你艾拉德尔也没什么物理高加成的招式。虽然可以配合本尼迪克的乘胜追击，完成舍身之势+仁王盾的联动。但有这组合，我用个法师是不是都把对面轰穿了……</p>\n<p data-pid=\"0fwDX-xT\"><b>危机时防御提升</b>这里要注意一点，虽然驻扎所的老板娘也有一个同名技能，但两者计算的减伤方式完全不同，可以说两个根本就不是一个技能。艾拉德尔的危机时防御提升，是在最大生命值≤50%时，降低伤害20%。物理端更甚城墙，但魔法端仍旧薄如纸。</p>\n<p data-pid=\"PxZXJ5Sw\"><b>仁王之盾</b>艾拉德尔的灵魂技能，必定使范围内的所有敌人愤怒，强制攻击自己。但在下一轮行动结束前，处于无敌状态，魔法、物理攻击都无法伤害到艾拉德尔分毫。挑衅和仁王之盾强大之处在于浪费敌人的输出，并且可以聚拢敌人，便于我方法师的AOE技能进行范围打击。</p>\n<h2>\n<br><b>06 密探 安娜</b>\n</h2>\n<p><img src=\"https://pica.zhimg.com/v2-79d66288c0d1c02f3fcc78add58e1c5c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1050\" data-rawheight=\"426\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-79d66288c0d1c02f3fcc78add58e1c5c\" data-watermark-src=\"v2-b397b3ca949cbd9a3d3c946212872701\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"E3v5M5lE\"><b>加入条件：</b>第二章</p>\n<p data-pid=\"WoHaIzLh\"><b>特色：</b>深入敌后的刺客，行动灵活多变。缺陷是与敌人正面作战伤害低下。</p>\n<p data-pid=\"5IJ75eF7\"><b>人物介绍：</b>沉默寡言，恪尽职守，秉承着冷酷无情的行事作风，是沃荷德家的杀手、密探。于暗中调查那些对沃荷德家不利的人与事。排除风险于未然。</p>\n<p data-pid=\"QHxPr02P\">安娜在孩童时便被沃荷德家收养，为了能够帮助到本尼迪克，向最为传奇的弓箭手拜师，她的天赋十分出色，是个在千里眼下亦能隐藏踪迹的刺客。这可能与她的血缘有着密不可分的关系吧。</p>\n<p data-pid=\"tyy-JIoF\">看似冷酷无情的安娜，实则对同伴却总是流露出自己亦不愿承认的温暖。由此看来，她的内心也有着温柔善良的一面。</p>\n<p data-pid=\"q37l2o2B\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-1d55306c42eaf196c9bcd3ea1563044b_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1164\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-1d55306c42eaf196c9bcd3ea1563044b\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"dsPxlvOu\">中庸的生命值与双抗，使安娜虽然并不能作为肉盾，却也并不是那么容易死亡。安娜最为出色的属性使速度、回避与跳跃。作为一名刺客型角色，她能在大多数地形穿梭，并能够高概率闪避不少物理攻击。</p>\n<p data-pid=\"DBaGFGut\">虽然她的力量成长相当出色，但却与罗兰有着相同的问题。亦或者说在武器系数方面，她的弱势远胜于罗兰。因为计算公式力量收益率折半，使得她的基础伤害极低。这也使得安娜在进攻时，应当首选弓箭手、法师这类低物防的敌人。进攻高防御的敌人，很难造成有效的伤害。</p>\n<p data-pid=\"kRtlx4Vc\">较低的幸运值，使安娜的“致命一击”近乎完全集中在从“背后偷袭”这一种路径上。</p>\n<p data-pid=\"dB-LKfyX\"><b>武器强化：</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-cae40a9c9a7b52b88641412a5555cd6d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-cae40a9c9a7b52b88641412a5555cd6d\" data-watermark-src=\"v2-7fbf8a6bd3d53a59277f806a61c84be9\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"kG9IPaZ0\">为了发挥出安娜的伤害能力，武器威力提升必不可少。甚至她的武器威力提升优先级要远高于其它人。</p>\n<p data-pid=\"qksm0TLx\">背面伤害提升，是指安娜在敌人的背后发动攻击时，威力会得到增幅。即从背后发动的致命一击，伤害系数为1.4。</p>\n<p data-pid=\"ID-GlRaJ\">飞檐走壁-1，使得安娜在跨越平台刺杀对手时，可以无消耗地施展该技能。将更多TP留给隐身、致命怒火这样的技能。</p>\n<p><br></p>\n<p data-pid=\"rY3Lt48C\"><b>技能解析：</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-12556df90095069f8a65535dbd13d7d7_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1146\" data-rawheight=\"995\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-12556df90095069f8a65535dbd13d7d7\" data-watermark-src=\"v2-9e679371b6babd872d12e81663a65ae5\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"zrD_oe19\">安娜作为刺客，虽然力量收益低。但却可以通过<b>双重连击</b>每回合使用两次指令。这使得安娜的行动非常灵活，你可以指令、移动、指令，也可以指令、指令、移动、亦或者移动、指令、指令。双重连击使安娜可以将攻击、技能、物品三项指令任意排列组合。无论是在进攻端还是防守端都相当灵活。</p>\n<p data-pid=\"_hG0x4zL\">当然，需要特别注意，安娜最好不要去攻击高级剑士、盾卫这样的角色，这样自带反击能力的高物防敌人，是安娜的天然克星。你打对方几次，对方就反击几次。</p>\n<p data-pid=\"5k_S3_M_\"><b>投毒</b>，伤害较低的2格技能。直线投掷，会被队友阻挡，不过侧面站位同样可以触发队友的夹击。它概率会使敌人陷入中毒状态，中毒的敌人每回合会损失掉10%的最大生命值。</p>\n<p data-pid=\"6OibrSHK\"><b>隐身</b>，消耗2点TP，持续2回合。是安娜的灵魂技能。在使用隐身之后，敌人将丢失你的位置。除非有敌人正面站在你的面前，这时你的隐身会破除，敌人则会终止行动。隐身是安娜深入敌后，摸向对手远程单位不可或缺的技能，也是探寻宝箱，解除机关等关卡，保障自身安全的能力。事实上，在飞檐走壁升级后，安娜也没什么需要消耗TP的能力，几乎所有点数都用在了隐身技能上。</p>\n<p data-pid=\"c-ApzSY4\"><b>飞檐走壁</b>：该技能可使安娜轻松地跨越高度差在15以内的所有高台。但在跨越高台后，若已执行过移动指令，便不可再移动了。这也使得该技能略微有些僵硬。不过用来对付高台弓箭手，却是相当棒的技能了。因为此技能的存在，使得安娜在所有地形中，都几乎如履平地。</p>\n<p data-pid=\"WUiLonTp\"><b>待机时恢复HP</b>：啥都不干可恢复20%HP的技能，有药水的话不如直接喝药水见效快。一个自我禁锢，聊胜于无的技能。</p>\n<p data-pid=\"WY2dT95s\"><b>困倦匕首</b>：可以几率附加给敌人“睡眠”的匕首技。消耗高，威力较低。睡眠状态会使敌人跳过自身的行动，本身是很强力的“控制技能”。当其它角色攻击“睡眠状态”的敌人时，敌人会惊醒，本次攻击也必定触发“致命一击”（暴击）。安娜通常可以普通攻击一次，配合困倦匕首收尾，当我方弓箭手行动时，可以攻击睡眠角色，配合安娜的夹击，对敌人造成高额伤害。</p>\n<p data-pid=\"Rj8CP0MO\"><b>偷袭</b>：隐身状态下，对敌人造成伤害，提升30%伤害。配合背刺，总共可造成1.7倍的伤害。是安娜打出伤害的关键技能。不过需要转职为最高级职业才可获得此技能。</p>\n<p data-pid=\"iK8dnmuX\"><b>致命怒火：</b>相当强力的武器技，可以削减敌方双抗各13点，长达5回合。相当于使全员对该名敌人伤害增加26×招式威力倍率×特效（无视防御的招式除外），极大增加了集火威力。该招式自身威力也不低，叠加背刺、偷袭等加成，可高达3.06倍普攻伤害，相当凶猛。</p>\n<h2><b>07 第一公主的魔法老师 侍女 吉拉</b></h2>\n<p><img src=\"https://picx.zhimg.com/v2-0f9927c0ac254bf89f66652f998583c3_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1054\" data-rawheight=\"430\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-0f9927c0ac254bf89f66652f998583c3\" data-watermark-src=\"v2-eb37c85fe937ec6229d48625825acde1\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"KWTLKxyP\"><b>加入条件：</b>第一章</p>\n<p data-pid=\"d65R2cZh\"><b>特色：</b>传统治疗者，治疗能力相当全面。</p>\n<p data-pid=\"1o6vvTzg\"><b>人物介绍：</b>表面人畜无害的吉拉，实际也有着自己的野心。能从管理森严的教国医法院，转籍到公国。可见其手段颇不一般。作为芙蕾德丽卡的魔法老师，却全然不会攻击魔法，对“治疗法术”却颇为擅长。不过这一点可能是为了游戏性的设置，自然不做深究。</p>\n<p data-pid=\"cj6AsKHN\">在辅佐第一公主 芙蕾德丽卡的过程中，见证了公主的成长，见到独当一面的公主，吉拉的心境也悄然发生了变化。</p>\n<p data-pid=\"pP77M5tv\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-a8c79baa957fc67ceec4bf92a09b6dfb_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1164\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-a8c79baa957fc67ceec4bf92a09b6dfb\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"FAFSjDAA\">吉拉的魔力为全员第二位，高魔力是治疗者不可或缺的能力。其它方面相当贫弱。不过作为后勤人员，她有着可靠的魔法，这便足够了。  </p>\n<p data-pid=\"yWCawYC1\"><b>武器强化：</b> </p>\n<p><img src=\"https://pic4.zhimg.com/v2-4ca00912fc52868292726eb2188146e1_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1219\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-4ca00912fc52868292726eb2188146e1\" data-watermark-src=\"v2-641098f5e2343c8e76430d02bcef329b\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"oUwStxoz\">吉拉的武器天赋没什么好分析的。只需要知道武器威力提升，同样可以提高治疗量就可以了。技能射程+1，是优先级较高的技能。因为吉拉移动能力较差，提高技能射程可以极大程度上避免就差一步治疗不到位的情况。</p>\n<p data-pid=\"iy8MG97l\">关于治疗量，与伤害公式有较大区别。在这里介绍一下。</p>\n<p data-pid=\"Or3U8Nlb\"><b>治疗量=（魔力+5+武器威力【0~10点】）×技能系数×（1+特效倍率）</b></p>\n<p data-pid=\"E_l3kG6i\">可以看到治疗量只与吉拉本人的魔力与武器威力有关，与队友的抗性无关。</p>\n<p data-pid=\"OfPiRQsO\"><b>技能解析：</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-b1b1dd117e0b822f6e19084a03c6c580_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1235\" data-rawheight=\"1137\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-b1b1dd117e0b822f6e19084a03c6c580\" data-watermark-src=\"v2-eb67726472a008e163762025202c81bc\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"U1f6GXXB\">吉拉拥有三种治疗手段，且拥有解除异常状态的魔法。由于其基础恢复魔法只消耗1TP，可以源源不断地为队友提供治疗，不过这也会使吉拉想用其它能力时，TP出现捉襟见肘的情况。有时吉拉的TP需要队友给予一定的补给。</p>\n<p data-pid=\"V_g_JML9\">对重伤者恢复效果提升能极大程度地救治残血队友（恢复量提高30%）。</p>\n<p data-pid=\"3lkhDWlc\">奇迹之光则可以使被击杀的队友有一次瞬间满血复活的效果。</p>\n<p data-pid=\"XcPli-kT\">吉拉自第一章便随着芙蕾德丽卡加入了主角团，长久以来是队伍中当之无愧的第一治疗。</p>\n<p><br></p>\n<h2><b>08 王国的亲卫队幸存者 罗兰身旁的第一保镖 修艾特 </b></h2>\n<p><img src=\"https://picx.zhimg.com/v2-0c75307e2caa82b18767eaf9702f6a4b_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1052\" data-rawheight=\"430\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-0c75307e2caa82b18767eaf9702f6a4b\" data-watermark-src=\"v2-d72fc3881b344511711638ba58b214e1\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"K3yueZ7p\"><b>加入条件：</b>第二章</p>\n<p data-pid=\"NZuR5ATj\"><b>特色：</b>高台射手，利用高低差输出伤害，并异常状态限制敌人保护队友。</p>\n<p data-pid=\"wj8NvIXU\"><b>人物介绍：</b>虽说修艾特与罗兰是从属关系，但两人无论从作战手法，还是平日里的对话，都可以感觉两人更像是较为亲密的朋友。修艾特曾在被山贼袭扰时为罗兰所救。在得知罗兰是第二王子时，修艾特便立下了为王室效力，确切地说，是为罗兰效力的目标。</p>\n<p data-pid=\"e93VIGsu\">年纪轻轻的她通过多年的努力，终于加入了亲卫队完成了自己的梦想。她也想向公国那样，组建起一支“鹰军队”，但直至王国陷落，王国的亲卫队惨遭屠戮，这个梦想也并没有达成。作为一名骑着鹰的弓箭手，她能通过多变的限制手段阻截敌人，以此保护冲锋陷阵的王子。</p>\n<p data-pid=\"dGo6VtX_\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-e335d415a1ef3dd810d7f3cdd08edf57_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1164\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-e335d415a1ef3dd810d7f3cdd08edf57\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"W7kEsLgh\">作为一名弓箭手，修艾特的力量虽然还算可以，但武器威力只有两级，招式威力也并不算出色。并且极低的幸运，也很难期待她能懵出致命一击来。不过她的技能和对残血必杀天赋，倒是补全了“暴击”方面的欠缺。</p>\n<p data-pid=\"VudD_gx8\">除了“异常状态”，修艾特也有一个让所有弓箭手眼馋的优点。那就是她的跳跃——亦或者可以说，她的“飞翔”能力。骑乘巨鹰的修艾特，可以轻松占领高台，并利用高台提供的射程优势与威力加成，打出相当不错的控制与伤害。</p>\n<p data-pid=\"PFXlv6jP\">因为自身可以飞行，所以，即使被敌人从高台撞落，大鹰也会扑扇自己的翅膀，缓缓降落，<b>避免一切坠落伤害。</b></p>\n<p data-pid=\"Ty9l_fRq\">弓箭手在高台上向下射击，通常每向下4点高度差提供额外1点射程（反之则会降低射程）。每1点高度差，提供2%的伤害加成。</p>\n<p data-pid=\"9jIbv8UW\">另外弓箭手在射击时，即使是弧线射击，也通常会受到柱子，高崖，队友等障碍物的阻截。这种情况下，很难造成有效伤害。在站位时需要特别注意。</p>\n<p><br></p>\n<p data-pid=\"GidDX8FA\"><b>武器强化：</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-10923657ae694452d5c5b145101dbf8b_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"431\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-10923657ae694452d5c5b145101dbf8b\" data-watermark-src=\"v2-ed4006725a0039739bb3b12802c67e7a\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"IkkK204v\">作为一名弓箭手，提升武器威力，射程（仅提升普攻射程，不会给近身剑加成），命中都很重要。二选一是增加异常状态的时效。通常情况下，基本不会等到那么久就会将敌人干掉了。提升控制时长，意义不大。</p>\n<p data-pid=\"MZvmhyq7\">对重伤者必杀提升，可以使修艾特在攻击生命值低于50%的敌人时，暴击率提升。</p>\n<p><br></p>\n<p data-pid=\"np4PEz63\"><b>技能解析：</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-5de3d205130122dcad8d344b0bab3a5d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1134\" data-rawheight=\"1086\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-5de3d205130122dcad8d344b0bab3a5d\" data-watermark-src=\"v2-108c0b359c5907a1621b19cbe65dc834\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"xxZQBkZQ\"><b>飞鹰的弱点</b>，使修艾特需要小心敌人的弓箭手。弓箭对她有特攻伤害，不过修艾特的弓箭对于公国的鹰兵来说，也有特攻效果。增伤30%。</p>\n<p data-pid=\"3NXWOWal\"><b>黑暗之箭</b>提供的黑暗效果，可以极大降低敌方物理角色的命中率。</p>\n<p data-pid=\"pxy0Pf0G\"><b>弗琉格的一击</b>，是让坐骑弗琉格近战攻击的技巧。这一招通常情况下意义不大，因为修艾特通常可以飞出包围圈，从外线进攻。不过当修艾特被禁锢，或者需要飞上高台处理敌方的弓兵时，弗琉格的一击便能多少派上一点用场。</p>\n<p data-pid=\"9kfviYyL\"><b>影缝箭</b>：主要输出手段，并能禁锢敌人，使敌人不可移动，可以极大限度地限制近战敌人的输出。</p>\n<p data-pid=\"Jjxiwijm\"><b>开战射程提升，</b>该被动会一直持续到你第一次使用普通攻击。</p>\n<p data-pid=\"zEhV5f_F\"><b>超集中，</b>大幅度提升命中和幸运（20点），缺陷是1TP的消耗，虽然持续回合数仅有一回合，但本轮使用，本轮仍可执行一次指令，在下轮行动结束前，命中与幸运的加成依旧有效。该技能也可搭配<b>近身剑</b>使用。</p>\n<p data-pid=\"wcuE0SYc\"><b>近身剑</b>：当修艾特占据高台时，可以开启的自动攻击技能。伤害为普通攻击的70%。</p>\n<p data-pid=\"VF43-WaD\"><b>流星箭：</b>超远距离，高额伤害的一击，动画效果出色。可触发追击，可以理解为大号的普通攻击。<br></p>\n<h2><b>09 叛教的冰霜法师 魔法学者 克伦蒂</b></h2>\n<p><img src=\"https://pic4.zhimg.com/v2-cef6bcf4fae69297c04b20c5ab08acfc_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1052\" data-rawheight=\"426\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-cef6bcf4fae69297c04b20c5ab08acfc\" data-watermark-src=\"v2-419e5405a4ea503ef0d7e8efd234c965\" data-private-watermark-src=\"v2-d417b3f04d61bafeaa3e771a95c79539\"></p>\n<p data-pid=\"719kkcFV\"><b>加入条件：</b>第三章前往教国</p>\n<p data-pid=\"U2mBGqJR\"><b>特色：</b>持续的冰霜魔法输出者，队友配合的话有强力爆发Combo，能有效阻碍敌人的行动步伐。</p>\n<p data-pid=\"KVKVi40R\"><b>人物介绍：</b>医法院的学者，掌握冰霜魔法的大师。因为无法忍受教国的限制，渴望自由的研究魔法，而趁机加入了沃荷德家。出身于教国的他，对身为罗洁尔族的芙蕾德丽卡却并没有什么偏见，倒是对她的魔法十分感兴趣。</p>\n<p data-pid=\"-LR6PeUF\">虽然平时看起来沉稳、聪慧，但却是个酒品很差的人。</p>\n<p data-pid=\"ZogHU6JG\"><b>*注：因为第三章的分支选项，冰法师 学者与弓箭手 猎人，只有其中一人会加入我方。而这名加入的角色，会在前期缺少队友时，长久地成为队伍的战斗力。</b></p>\n<p data-pid=\"QsXV73W9\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-18752a1322911456d811eb560560e1d8_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1164\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-18752a1322911456d811eb560560e1d8\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"LsDA_C0P\">魔力在进攻型法师之中排名第二（总共四位法师），与其它法师同样脆弱的身板。优势是天赋解锁后，移动范围比其它法师要远1点。</p>\n<p data-pid=\"oHwbrJOj\">魔抗相当优秀，配合高额冰抗，可以抵御一些冰霜伤害。但畏惧火属性伤害。</p>\n<p><br></p>\n<p data-pid=\"roDDX0qH\"><b>武器强化：</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-44d78e9958443b6f57779cf93d4b8ceb_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1219\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-44d78e9958443b6f57779cf93d4b8ceb\" data-watermark-src=\"v2-48517f38ae78dce4ddbd4bc4e8b78ea0\" data-private-watermark-src=\"v2-a3317b174b33f6601f05a7fc906bc864\"></p>\n<p data-pid=\"HTOlObJo\"><b>技能解析：</b>克伦蒂的天赋为法师通用型武器天赋，其中冰属性抗性，可以使克伦蒂冰属性抗性提高至45%。冰冻魔法与冰封魔法选择哪一个作为主输出魔法，需要一定程度的权衡。</p>\n<p data-pid=\"HWGP3tJB\">与芙蕾德丽卡抢锻造资源。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-fef8e4ba633082bbf605c0f76be58fef_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1152\" data-rawheight=\"995\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-fef8e4ba633082bbf605c0f76be58fef\" data-watermark-src=\"v2-77f74b54937ceedaa56b309932c6cbca\" data-private-watermark-src=\"v2-10cb0a759e18c47056ecc4a782e7f525\"></p>\n<p data-pid=\"BBOsOOT9\">主要施展冰霜魔法的克伦蒂，可以使大部分地面便为冻结地块。站在被冻结的地块上会消耗1.2移动力（例如移动力为4，在冰霜地块只能走三格。），并降低10%的命中率。</p>\n<p data-pid=\"HkuKrMaZ\">由于克伦蒂并没有像芙蕾德丽卡那样的多重加成，其伤害只能看自身的魔法倍率，“<b>冰封魔法</b>”的倍率在强化后为170.5%相当高，并可沉默敌人，使其无法使用技能2回合。是相当强悍的输出与限制手段。</p>\n<p data-pid=\"odaTGtMM\">冰系魔法比起火系魔法的纯输出，参杂了许多“限制敌人”的手段。例如<b>冰墙魔法：</b>用于堵截路口，限制敌人行动。</p>\n<p data-pid=\"7iYUplhM\"><b>冰柱华葬</b>：则需要在范围内消耗敌人脚下的冰冻地块，由于需要前置条件，输出虽高，但整体有点华而不实。不过配合管家的“就是现在”或者绝技令出必行，也可以先手爆裂冰月，紧接着冰柱华葬，打出恐怖的Combo。（此combo需要克伦蒂在5TP时释放爆裂冰月，自身立于冰面上，被拉起后，正好恢复至3TP）</p>\n<p data-pid=\"H3FcjgNX\"><b>冰上TP恢复</b>：保持冰法输出的核心被动，所以如果以冰法为主输出手，应当尽快将其转为最高职业，获得此被动。在不需要赶路的地图中，该技能会让冰法源源不断地输出“冰冻”与“冰封”两种魔法。不过，敌方的火属性伤害将是你强有力的敌人，他们不仅会对冰法造成高额伤害（冰之加护的负面效果），还会化掉克伦蒂脚下的冰封地面，使回复TP的被动失效。</p>\n<p data-pid=\"cBwU8gru\"><b>爆裂冰月</b>：消耗四点TP，威力相当于经过强化的冰冻魔法。虽然其威力远不如满TP的陨落太阳（约等于3TP的太阳），但它的瞬发优势简直太大了。而且，大范围的冰冻地面，也会极大限度地限制敌人的移动与输出。</p>\n<h2>\n<br><b>10 前·私盐商人 凶残的猎人 路德鲁夫</b>\n</h2>\n<p><img src=\"https://pic4.zhimg.com/v2-6fa7386073ce0c5ecde2bef2bf6d7ec8_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1054\" data-rawheight=\"432\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-6fa7386073ce0c5ecde2bef2bf6d7ec8\" data-watermark-src=\"v2-6d03e51cebffc5ab0e00826c6afe44f7\" data-private-watermark-src=\"v2-cf1e179894e37dfacb13d8df8e019b48\"></p>\n<p data-pid=\"BSWcqmGU\"><b>加入条件：</b>第三章前往公国</p>\n<p data-pid=\"FpX9sM4f\"><b>特色：</b>攻击与技能伤害极高，击杀敌人后，提升至超一流速度，拥有限制敌人行动的夹子。</p>\n<p data-pid=\"YT0PbB-0\">缺陷是命中率较低，射程短。</p>\n<p data-pid=\"lTZuLx1S\"><b>人物介绍：</b>王国流传着公国抓住了一位弓术精湛的猎人的传闻。据说那是个唯利是图的私盐贩子。路德鲁夫为了获得特赦，而协助揭发私盐交易。瑟雷诺亚一行人，则协助他们击溃了私盐贩子的武装。但最后路德鲁夫却被古斯塔德弗驱逐出国境。最后因其精湛的弓术被瑟雷诺亚收留。</p>\n<p data-pid=\"Bl6JdK19\">长相凶恶的路德鲁夫，实际上是个十分照顾家庭的人，但事与愿违，贫穷与“规则”夺去了他最重要的人，毁掉了他对亲人的承诺。不过加入沃荷德家族后，他得到了同伴一样的待遇，也算开启了自己新的人生。</p>\n<p data-pid=\"KI8DE2qp\"><b>*注：因为第三章的分支选项，冰法师 学者与弓箭手 猎人，只有其中一人会加入我方。而这名加入的角色，会在前期缺少队友时，长久地成为队伍的战斗力。</b></p>\n<p data-pid=\"0MmaVfKQ\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-6abe273791dd7476e54a69f1d4b1bcd0_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1164\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-6abe273791dd7476e54a69f1d4b1bcd0\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"MfNparV7\">在一众弓箭手中，路德鲁夫有着最为出色的力量，和低到离谱的基础命中率与幸运。以及弓箭手中最短的射击距离。</p>\n<p data-pid=\"xydMOdZH\">与鹰弓这种高台射手不同，路德鲁夫的作战方式，是“静如处子，动如脱兔”。寻找到最恰当的出手时机，施展暴雨般的弓箭射击追杀终结敌人。</p>\n<p><br></p>\n<p data-pid=\"xVXDbLoi\"><b>武器强化：</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-4d9f27c1a3e4a6b3beaa60f3464c2f98_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-4d9f27c1a3e4a6b3beaa60f3464c2f98\" data-watermark-src=\"v2-22635a9290df4e50f69813af46cd33ff\" data-private-watermark-src=\"v2-709b5b8790c2f9e485a96380a1e37291\"></p>\n<p data-pid=\"JxK64rHc\">路德鲁夫的武器天赋，除了武器技能 箭雨。全部为提升基础能力的天赋。并不强化技能，也无核心天赋。想要发挥路德鲁夫的全部威力，请优先提高他的武器威力与两层力量。这能极大程度强化他的杀伤能力。</p>\n<p><br></p>\n<p data-pid=\"6R3L10MU\"><b>技能解析：</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-0b40e2894b1ac9a0b296dfb7034dfdc3_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1084\" data-rawheight=\"946\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-0b40e2894b1ac9a0b296dfb7034dfdc3\" data-watermark-src=\"v2-b83224cdc84c26aa92f34596f97781d0\" data-private-watermark-src=\"v2-1108f26637d47e05fcf5e14152debadb\"></p>\n<p data-pid=\"HajhtK3j\">路德鲁夫的天赋与属性，仿佛与他的为人一般，仿佛没啥好讲的。这倒不是这名角色不强，而是他的所有招式和属性给的都太直接，就像弓箭的两种射击方式，弧线式和直线式一样。</p>\n<p data-pid=\"9_ZudqS6\">而路德鲁夫的三种射击方式，就分别可以划分为这两种射击方式。</p>\n<p data-pid=\"iIRjL_AW\">路德鲁夫的TP消耗量等同于法师，与修艾特的功能性不同，路德鲁夫的弓箭其更核心的部分在于击杀对手，而非限制。为了保障其高输出，最好有辅助适当帮其恢复TP。</p>\n<p data-pid=\"x6w770KP\">直线型射击的射击方式有一个特点，就是在自己的面前有友方单位时，射击轨迹将被阻挡。但可以攻击贴近自己的敌人。而直线型射击通常在高度差方面，都与飞鹰击相同。无法跨越太大的高度差。</p>\n<p data-pid=\"7tU-sG6S\"><b>穿心箭</b>和<b>击退箭</b>都是直线型射击技能。穿心箭本身伤害极高，是路德鲁夫的核心输出技能。</p>\n<p data-pid=\"922vrlRZ\">击退箭则可以将位于高台边缘的敌人推落，本身伤害并不出色。</p>\n<p data-pid=\"zmk2xVmN\">不过如果为了触发“原地停留”的被动，击退箭也可以作为击退近身敌人的手段。</p>\n<p data-pid=\"uKOW5Tla\"><b>捕兽夹</b>是强力控制技能，当敌人踩中架子时，将停留在原地，受到基于最大生命值的伤害，并且终止该回合的一切行动。多用于封锁我方近战角色的背后，防止受到夹击。</p>\n<p data-pid=\"gF4hXTfn\"><b>催眠箭</b>多用于点控敌人，本身伤害不俗，还可以让高伤角色对其进行致命一击（打破睡眠）。是控制与输出兼顾的技能。</p>\n<p data-pid=\"_Ikb1J-O\">原地停留提升幸运与命中，一定程度弥补了路德鲁夫在命中与低必杀方面的短板。</p>\n<p data-pid=\"BEBC9qZy\">动如脱兔与吉拉的被动相同，不过获取的更早，可以方便猎人拉开与敌人的距离。</p>\n<p data-pid=\"e1ShkbXn\">乘胜狙击则可以提升速度，便于路德鲁夫下轮更快的行动。</p>\n<p data-pid=\"aNWwqGk8\"><b>箭雨</b>消耗3TP，是少有的物理远程AOE技能，不过该技能无法触发致命一击，只能作为一个平稳的AOE打击使用。算是一个缺憾了。</p>\n<p><br></p>\n<p data-pid=\"MiVvA7Rj\"><b>前言：</b>在《三角战略》中，队友加入你的队伍大概分为两种形式，一是通过剧情加入，比如上一章节中我们介绍的，第三章 教国的克伦蒂与公国的路德鲁夫。在后续剧情中，像这样加入主角团的角色还有5人。</p>\n<p data-pid=\"JIZv4Ulu\">而更多的队友，则是跟据瑟雷诺亚的信念来加入队伍，当瑟雷诺亚的道德、功利、自由达到一定数值时，自然会有英雄们慕名而来。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-6697b4ddf8d6774309ba1e557134ae06_720w.jpg?source=b1748391?rss\" data-rawwidth=\"419\" data-rawheight=\"423\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-6697b4ddf8d6774309ba1e557134ae06\" data-watermark-src=\"v2-e0f18f405bbf08c82bafea489c95fbb5\" data-private-watermark-src=\"v2-19ef86e3e805d34fe745f7f3246b58a0\"></p>\n<p data-pid=\"0tT2Ut7o\">如果按照数值多寡来分，那么这些队友的加入条件，数值多寡，应该像如上表格这样，由上至下排列。但为了介绍的顺畅性，我们不妨先来介绍一下从一开始就在驻扎所协助我们的四人。</p>\n<p data-pid=\"pKUgDb4j\">这四位老板拥有着各自的故事，一直静静注视着主角，当他们发现自己的信念与主角相合时，便毅然加入沃荷德家，协助瑟雷诺亚终结席卷大陆的战争。</p>\n<p><br></p>\n<h2><b>11 酒馆老板娘 霍荷芭拉</b></h2>\n<p><img src=\"https://pic3.zhimg.com/v2-133eb3022483197cec8cc59c581c1a48_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1052\" data-rawheight=\"430\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-133eb3022483197cec8cc59c581c1a48\" data-watermark-src=\"v2-02f642d3d7656aae3c0a2f498692475f\" data-private-watermark-src=\"v2-d496d3fae98bd874eaca5c62929b64a9\"></p>\n<p data-pid=\"W4v7qksH\"><b>加入条件：道德0 功利275</b> <b>自由110</b></p>\n<p data-pid=\"PePUY6Rx\"><b>特色：</b>综合能力强，但无突出能力。</p>\n<p data-pid=\"6jfTLYC1\"><b>人物介绍：</b>酒馆的老板娘为大家提供了娱乐放松的地方——酒馆战场，在这里沃荷德家族可以锻炼自己的军队。霍荷芭拉与艾拉德尔等人早年便是熟识。</p>\n<p data-pid=\"HzMn-a15\">她是一个颇有阅历的女人，老公跟别的女人跑了，儿子也在最近的战争中丧生。虽然经历了种种不幸，仍然经营着酒馆，在战火纷飞的大陆上，为旅人们提供一方可暂时忘却烦恼的避风港。老板娘开朗乐观，这样豪爽的情绪，也激励着其它人。</p>\n<p data-pid=\"xnUqVWa1\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-c2d051299b3bbf56244d4abc9ba6eb12_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1164\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-c2d051299b3bbf56244d4abc9ba6eb12\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"CgqDOnss\">霍荷芭拉的力量与魔力都有用处，力量用于伤害技能的加成，魔力则用于治疗魔法的加成。本身幸运不低，移动能力较为出色。但血量和双抗作为近战来说，只能称作中规中矩，加上自身骑马的弱点，使得她并不能作为肉盾使用。</p>\n<p data-pid=\"kBYJwvgE\">她的力量极为出色，不过技能加成偏低，提升威力的被动，也有一些限制条件，且并无远程技能，这诸多条件综合起来，使她的输出受到了较大的限制，且远低于几位专职于近战输出的角色。</p>\n<p><br></p>\n<p data-pid=\"8abEthm9\"><b>武器强化：</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-35d69312fb41ba9d6c9be1a665348a99_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-35d69312fb41ba9d6c9be1a665348a99\" data-watermark-src=\"v2-40f23842230106c6497c62a3df19e68b\" data-private-watermark-src=\"v2-6d524059b6c75819596d278f31da0965\"></p>\n<p data-pid=\"LIxuIyMT\">霍荷芭拉的武器威力提升，同样作用于治疗能力。由于她自身魔力偏低，治疗威力加成极高，所以，优先提升武器威力，不仅能够使她的输出增加，也会使她成长为一位出色的治疗。移动提升能使她变得更加灵活。</p>\n<p data-pid=\"OZXLQe-6\">二选一方面，触发霍荷芭拉追击时，双方都可回复自身最大HP10%的血量，比起精力充能的少量加成，整体来说更有吸引力。</p>\n<p><br></p>\n<p data-pid=\"9bEUmQB2\"><b>技能解析：</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-87e4b271e195f84ad4f13c40b13d9872_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1138\" data-rawheight=\"901\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-87e4b271e195f84ad4f13c40b13d9872\" data-watermark-src=\"v2-77d65c9c6ab740b0b940fc1d1b4998a7\" data-private-watermark-src=\"v2-caf6c5a3e83e5e9b839a17f239524c4d\"></p>\n<p data-pid=\"nplqKDys\">霍荷芭拉的能力整体集伤害，高移动，治疗于一身。但是这些方面单单拿出哪一点来说，都算不上拔尖，很容易将其玩成一个四不像的角色。不过如果将她作为一个补位来用，其战斗力却相当不错。</p>\n<p data-pid=\"fPG-ArVC\">治疗量公式为：（魔力+5+武器威力）×威力倍率</p>\n<p data-pid=\"z1KeiwDi\"><b>移动TP恢复：</b>只要保证持续长距离移动，老板娘本身不缺TP，但需要格外注意的一点是，如果你只有1TP，那么本轮通过移动恢复的TP，你是没办法凑成2点直接使用的。本身老板娘的技能都是2TP的高消耗，这使得老板娘的技能灵活施展大打折扣。而且，老板娘没有罗兰“突刺冲锋”这样的穿插技能，如果进入敌阵，很容易阵亡。在移动层面，便也弱于罗兰了。</p>\n<p data-pid=\"NS1yvbGK\"><b>快马加鞭：</b>霍荷芭拉的核心被动，最高可将伤害提高15%，虽说只有达到顶级职业时才能获取，但这使得老板娘的输出得到了大幅的提高。</p>\n<p data-pid=\"DkB0nEwT\"><b>危机时防御提升：</b>拥有此技能时，使老板娘在50%HP以下时，获得50%的伤害减免，能为老板娘提供一定的保护，避免致命伤害。</p>\n<p><br></p>\n<p data-pid=\"ZMwaEmHB\"><b>精力充能</b>的消耗高，关键问题是，该技能不能给自己回血，如果到前排给队友回血，很容易受到伤害，使老板娘提前下线。</p>\n<p data-pid=\"F5wxJbgd\">所以，这是个辅助恢复的技能，而且多用于保护被攻击的后排。若想对多名队友使用，对于老板娘和队友的站位可能要求会比较严格。</p>\n<p data-pid=\"U-uJPZch\"><b>横扫</b>这是一个横向AOE技能，其特点是可以触发所有对面队友的夹击。只是这样的场景并不算多见。</p>\n<p data-pid=\"HMBUAytK\"><b>推击</b>：一个综合了马首击与撞击的技能，加成与撞击相同。击退范围与马首击相同。在高台竞技场，悬崖类图中，是个相当不错的技能。</p>\n<p data-pid=\"NJqwOqyL\"><b>弹射：</b>弹射给予的双抗聊胜于无，其主要作用，是辅助我方跳跃能力低下的队友跨越地形。或者是协助我方肉盾，穿插入敌人之间。</p>\n<p data-pid=\"J7xfkvXe\">这招与艾拉德尔的仁王盾相配合，可以尽可能地控制住大量的敌人。不过由于绝技缩地和时间法师空间扭曲的存在，弹射的效果便显得略微一般了（该技能需要贴身释放）。</p>\n<p><br></p>\n<h2><b>12 铁匠 延斯</b></h2>\n<p><img src=\"https://pica.zhimg.com/v2-dcedbeeb50ef2139ece67a70ffdd412e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1056\" data-rawheight=\"434\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-dcedbeeb50ef2139ece67a70ffdd412e\" data-watermark-src=\"v2-84562f5df56bbf3529096d59cd73c365\" data-private-watermark-src=\"v2-33414ee41c059ea7e709ce86282bf0de\"></p>\n<p data-pid=\"LTuHgSjo\"><b>加入条件：道德450</b> <b>功利0 自由0</b></p>\n<p data-pid=\"FLd1knOb\"><b>特色：</b>工程师，陷阱大师！</p>\n<p data-pid=\"1njxTZb2\"><b>人物介绍：</b>曾读过公国大书库内的许多工程书籍，无论是锻铁，还是制造精密机关，对延斯来说都不在话下。因为战争，延斯无法返回公国，后被瑟雷诺亚的信念所感召。</p>\n<p data-pid=\"NGzFzPcW\">延斯是驻扎所内的铁匠，所有队友的武器天赋解锁，都出自于延斯之手。</p>\n<p data-pid=\"3JmiXJ0D\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-60d7f89dce3da87b454c82a29e79a5ac_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1164\" data-rawheight=\"166\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-60d7f89dce3da87b454c82a29e79a5ac\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"QmNRqkWa\">延斯的跳跃与移动能力需要在二选一中进行抉择，其中只有一项可以额外+1。</p>\n<p data-pid=\"HlpCueX3\">满血时移动提升，则是他升级为工匠大师时，获得的终极被动。本身血量不低，拥有出色的防御力。可以作为一名副T，但魔抗很低，要小心敌方的法师。</p>\n<p data-pid=\"8tpzW-pa\">力量中规中矩，必要时，可以作为近战输出补刀。但更多的时候，他需要制造那些攻城兵器，没功夫直接投身到战争之中。</p>\n<p><br></p>\n<p data-pid=\"nAPEzthC\"><b>武器强化：</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-3696e64896fafa8b84c9466c0d2721ee_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-3696e64896fafa8b84c9466c0d2721ee\" data-watermark-src=\"v2-66b4c4485855ff2c2cfe187938ab7008\" data-private-watermark-src=\"v2-8598c631a84195896622b5fe6ae66db1\"></p>\n<p data-pid=\"3l4yxxn1\">延斯升级所用的素材为石材，且整体层数为443，消耗资源并不高。</p>\n<p data-pid=\"HiAaH_A1\">所有天赋中，弹簧陷阱TP-1为需要优先解锁的天赋。这样每一回合都可以布置弹簧陷阱，极大程度地限制敌人。由于延斯并不怎么参与到一线战斗，武器、HP的提升，不是那么迫切。</p>\n<p data-pid=\"dkHvuvaP\">建议优先升级移动力。另外，延斯在武器上能获得的额外属性极少。</p>\n<p><br></p>\n<p data-pid=\"ZwuQEuG5\"><b>技能解析：</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-1d5f733f4f504919c10ca7fa9f754029_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1146\" data-rawheight=\"1051\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-1d5f733f4f504919c10ca7fa9f754029\" data-watermark-src=\"v2-486573ed717fd867a4e2d78e27168adb\" data-private-watermark-src=\"v2-cb30be109c98829fba5bd851c44707c5\"></p>\n<p data-pid=\"GVGNQ1-I\"><b>弹簧陷阱+远程陷阱（被动）</b>：这是延斯在大多数时候需要使用到的技能，弹簧陷阱有着猎人的捕兽夹一样的能力，它能够中止踩中者行动，与捕兽夹不同的是，被弹射出的敌人，会造成碰撞伤害，被从高处弹下则会受到高额坠落伤害。</p>\n<p data-pid=\"yCjeUq6v\">陷阱配合隘口，梯子口，在悬崖、擂台、屋顶边缘设置，会极大限制敌人的行动。</p>\n<p data-pid=\"w2RM7tzG\">若是我方在山谷下，陷阱安排得当，还可以将敌人弹入我方包围圈。让他感受一下羊落虎口的感觉。</p>\n<p data-pid=\"V6ZGBahm\"><b>搭设云梯和搭设2号云梯：</b>延斯可以搭设云梯，使我方角色跨过高度差。爬上梯子会额外消耗1格移动。此技能多配合我方弓箭手登上高台，而人为创造的梯子，也可以勾引敌人爬上来，配合弹簧陷阱，捕兽夹以及一系列击落技能，来使我方对敌人进行单方面输出。1号2号梯子独立存在，最多只能同时存在各一架梯子。</p>\n<p data-pid=\"wXAvMRfe\"><b>减速网：</b>大幅度限制敌人行动，将其进度条拖慢，对Boss神技，配合瑟雷诺亚的减速剑，可以极大程度地限制强力敌人。</p>\n<p data-pid=\"YF6AIMZr\"><b>催眠打击：</b>自身加成不错，写作催眠，实际上是拿锤子将敌人敲晕。天赋加成后，可以使敌方睡眠3回合。睡眠可以使我方角色对其进行必中的致命一击。是个能够辅助输出的控制技能。</p>\n<p data-pid=\"i2qnDd7Q\"><b>自动炮塔：</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-151b9274040c30cc590a162fbc045492_720w.jpg?source=b1748391?rss\" data-rawwidth=\"914\" data-rawheight=\"256\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-151b9274040c30cc590a162fbc045492\" data-watermark-src=\"v2-90a832502980c10ecd6f4d8eecb2ca1e\" data-private-watermark-src=\"v2-77df034c73b28c8d6838415cbb70df7f\"></p>\n<p data-pid=\"PQe1wg6I\">此自动炮塔为延斯50级时的数据。总共可攻击五次。当敌人行动之后进入射程时，将自动被其射击，类似于修艾特的近身剑。此技能颇具特色，但消耗过高，困难难度下，威力略显不足。</p>\n<p><br></p>\n<h2><b>13 商人 莱昂纳尔</b></h2>\n<p><img src=\"https://pic1.zhimg.com/v2-66b5e42a3eb126ada99d954977f938b8_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1044\" data-rawheight=\"428\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-66b5e42a3eb126ada99d954977f938b8\" data-watermark-src=\"v2-95e3a4592726bab2f17d4b935d52ec48\" data-private-watermark-src=\"v2-9eebed05fe69df39f050d292ed629907\"></p>\n<p data-pid=\"JQmcubUN\"><b>加入条件：道德0</b> <b>功利400</b> <b>自由0</b></p>\n<p data-pid=\"LhqW0PYl\"><b>特色：</b>语言大师，超高近战伤害，团队资金供给者。</p>\n<p data-pid=\"88q-iTbQ\"><b>人物介绍：</b>利欲熏心的商人，因为战争利润愈发稀薄，希望投靠沃荷德家，利用瑟雷诺亚家族的名号，为他的商誉背书。不过他经常出卖一些劣质产品，若非安娜的劝导与协助，莱昂纳尔便已葬身于敌人之手。自那之后，他决定售卖一些优质商品，好好使沃荷德家变强，自己的生意才会更上一层楼。</p>\n<p data-pid=\"9ZgsxBzs\">虽说是个一门心思投入赚钱的男人，但他在驻扎所为瑟雷诺亚一行人提供的各类商品，可以说是货品齐全，童叟无欺了。</p>\n<p data-pid=\"kSy0kVj2\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-9c82e4d671f4723ba6cdc3b84a07f582_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1164\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-9c82e4d671f4723ba6cdc3b84a07f582\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"oNBYTEyl\">莱昂纳尔有着极为出色的生命值，和极高的幸运值。这一方面来源于他作为商人的敏锐，一方面来自于他肥胖的身体。但其他属性乏善可陈，或中庸，或低下，好在他作战时凭借的是一张搬弄是非的嘴，而非身体素质。</p>\n<p><br></p>\n<p data-pid=\"DwmWyceK\"><b>武器强化：</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-b88efc96ff7b4b3f78469a33462c9ed4_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-b88efc96ff7b4b3f78469a33462c9ed4\" data-watermark-src=\"v2-38b2342ac9f87e875c6cb2a8b0a60da2\" data-private-watermark-src=\"v2-c84a8e6e608294a909dea97910390ca2\"></p>\n<p data-pid=\"vpnl9tPI\">使用鞭子的莱昂纳尔特别擅长于欺凌弱小。对弱者伤害提升，是推荐优先点出的技能。</p>\n<p data-pid=\"v5l6M8-N\">笑里藏刀强化能够大幅削减敌人的双抗。激怒成功几率提升，则可以稳定控制敌人。</p>\n<p data-pid=\"igvajuhz\">都是相当不错的技能，跟据战场情况，自行取舍吧。</p>\n<p><br></p>\n<p data-pid=\"HlRvVCUw\"><b>技能解析：</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-fcb883e9554d934fd4a2d2a3d231b4cf_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1146\" data-rawheight=\"1058\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-fcb883e9554d934fd4a2d2a3d231b4cf\" data-watermark-src=\"v2-9ac9bdf384b1c4c8fe98605cc4917923\" data-private-watermark-src=\"v2-15c9a59da1b596146a54e516decdfc42\"></p>\n<p data-pid=\"Ob5ODdrf\"><b>好事成双、获宝HP恢复</b>：都与捡敌人遗落的物品有关，好事成双给予的金钱奖励非常高，高达1000金币。这两个技能多用于酒馆刷钱。这就造成了商人努力赚钱，再将自己赚来的钱交给自己，卖给队伍的奇景。真是感人肺腑的奸商啊。</p>\n<p data-pid=\"NjkVVXvY\"><b>笑里藏刀：</b>未强化前，效果并不明显，但强化后，其削弱效果直逼安娜的致命怒火。虽然安娜的致命怒火削减双抗13仍要比莱昂纳尔的双10高（当敌人70+物抗，50+魔抗时约为此数据），但笑里藏刀毕竟只是一个仅仅消耗1TP的普通技能。当然，笑里藏刀的缺陷是，要使商人这位远程拉扯的大师，接近敌人进行debuff，这容易使他自身陷入危险。</p>\n<p data-pid=\"pH1cVo3U\"><b>激怒：</b>由于愤怒的特殊机制，敌人被激怒后，一定会追杀莱昂纳尔到天涯海角，但莱昂纳尔激怒极远的技能范围，使得敌人必须跨越我方队友的阻隔，高低落差等一系列阻碍条件，才能对他进行输出。这是个极强的点控技能，尤其对近战与敌方法师来说。唯一的缺陷，只有TP消耗略高了。</p>\n<p data-pid=\"8dmADBU0\"><b>策反：</b>命中概率20~30%，远程嘴炮输出，消耗1TP的摸奖技能，没事儿干的时候，就可以对着敌人讲讲人生、理想。魅惑的强大之处，在于令敌人倒戈相向。并将他们积攒好的TP倾泻于队友之身。而敌人也会对被魅惑的队友疯狂输出。</p>\n<p data-pid=\"0-gUFNjz\">需要注意：被魅惑的敌人，如果遭到我方队友的攻击，会立刻解除魅惑。</p>\n<p data-pid=\"USk51D3x\"><b>大招·乾坤一掷：</b>既然讲到魅惑，就一起将乾坤一掷讲一下。该技能的伤害与莱昂纳尔的等级相关，力量、魔力无关。等级越高，消耗的金币便越多。</p>\n<p data-pid=\"PD1CNcux\">当莱昂纳尔投掷大量金币后，敌人会受到大量伤害，并瞬间倒戈1回合。此技能兼具输出，扰乱敌人于一体。是可以扭转乾坤的钞能力。</p>\n<p data-pid=\"LMRqN8vm\">唯一的缺陷，只有金钱消耗过高，看着肉疼了。</p>\n<p data-pid=\"RSvxOg6N\"><b>减益话术：</b>减益话术几率提供的睡眠、沉默，都是极为恐怖的负面效果。减速也能一定程度上控制敌人的行动。此技能范围广，威慑力极强。即将行动的敌人，很容易被莱昂纳尔一番言语限制住行动。</p>\n<p data-pid=\"rTB1NzYC\"><b>硬碰硬：</b>游戏内最高加成的物理技能，高达2倍，缺陷是有命中率修正，施展硬碰硬时，不易命中敌人。</p>\n<p data-pid=\"EGpHF07O\">但如果配合致命一击项链（50%），对异常状态特攻等加成（30%），其伤害可达到3.6倍。</p>\n<p data-pid=\"K_xe8FyX\">由于是个只消耗2TP的普通技能，所以，当达到4TP时，可以配合本尼迪克的乘胜追击，利用绝技“必定致命一击，必定命中”来两次使用硬碰硬，秒杀敌人。</p>\n<p data-pid=\"Ipx3qkpq\">因为莱昂纳尔自身力量不高，使用前最好经过本尼迪克猛如虎的力量加成，此技能还会受到敌人物防的极大影响。所以，在使用硬碰硬对抗Boss时，尽量配合安娜的致命怒火，降低敌人的防御力，并在二次行动时，使用投毒制造“异常状态”。</p>\n<p data-pid=\"dZF7Ofjw\">这里的配合就像故事中的那样，安娜是莱昂纳尔的最好辅助。</p>\n<p><br></p>\n<h2><b>14 弓神 阿奇博尔德</b></h2>\n<p><img src=\"https://pic3.zhimg.com/v2-7b39ae35e910f4ced13e5b1035bcc325_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1058\" data-rawheight=\"430\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-7b39ae35e910f4ced13e5b1035bcc325\" data-watermark-src=\"v2-0a0da4622571b7d373fa6a67aa2c4641\" data-private-watermark-src=\"v2-a168240492f176425277a1242963c9d2\"></p>\n<p data-pid=\"I3KBlX66\"><b>加入条件：道德400</b> <b>功利500</b> <b>自由0</b></p>\n<p data-pid=\"2hmaPd_n\"><b>特色：</b>弓术大师，移动能力极差</p>\n<p data-pid=\"LiC_mIn9\"><b>人物介绍：</b>在沃荷德家经营行铺，兑换功勋，收集伙伴情报（2周目）的老人。猎人 路德鲁夫初入队伍时，察觉到了他身上异于常人的气息。实际上，是被人称作为“弓仙”的教国原七圣人之一，后因协助罗洁尔族而被关押。</p>\n<p data-pid=\"WuGg-Y9U\">他是安娜的老师，安娜那一身潜行暗杀的本领，便是由他亲手传授的。阿奇博尔德如今看起来是个拄着拐棍行将就木的老人，但是他对于“弓箭”的理解，却是年轻一辈无人可以超越的。</p>\n<p data-pid=\"Wf47Zxan\">他对当年盐铁大战时，于战场中看见的一位公国 女将军颇感兴趣。希望战争结束后，能与其邂逅。</p>\n<p data-pid=\"Vf-v3pBN\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-e243c4834154a16d8ef9aa248c8cafa3_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1164\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-e243c4834154a16d8ef9aa248c8cafa3\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"fYeeHopP\">阿奇博尔德人已老迈，身体机能也已衰退。贫弱的生命值，极慢的速度，全队垫底的移动能力，都说明了这一点。</p>\n<p data-pid=\"v-eRcuCe\">但不输年轻人的力量，超高的命中，以及升级、强化后高达6点的射程，都说明了对于“射击”这项能力，他仍保持着巅峰时期的水准。</p>\n<p><br></p>\n<p data-pid=\"NZbfh7Op\"><b>武器强化：</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-930d6333f2387958e845c7921685de6b_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-930d6333f2387958e845c7921685de6b\" data-watermark-src=\"v2-592e9b6741dd7000bdb04857a181ad7e\" data-private-watermark-src=\"v2-0bd51ac1be53edf6095302677fee111d\"></p>\n<p data-pid=\"dTbtzgp5\">阿奇博尔德武器强化为553结构，相当消耗资源。但如果想发挥弓神的全部威力，绝大多数能力不可或缺。其中最为重要的是暴风天气提升物理伤害，致命伤害提升，武器威力，移动提升，普攻射程增加。</p>\n<p data-pid=\"XDTxLfxW\">最不重要的，是HP提升以及武器技真·贯通箭。</p>\n<p data-pid=\"gxxAqGbp\">大多数射手在暴风天气中，会降低命中率，但阿奇博尔德却可以利用风向，使自身伤害提升15%。从这一点来看，这个老迈的弓手，虽然未必在力量上胜过年轻人，却可以自然而然利用本对自己不利的天气，亦可称为“掌控风暴的男人”。</p>\n<p><br></p>\n<p data-pid=\"CmtyJSFl\"><b>技能解析：</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-44f0c0ad7f7724e8f9c1e4d46ecceab0_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1146\" data-rawheight=\"1138\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-44f0c0ad7f7724e8f9c1e4d46ecceab0\" data-watermark-src=\"v2-2dce457a1092e40383e28cce43c57dbe\" data-private-watermark-src=\"v2-ab5ab2e3e010afc3eae221f6c7df1648\"></p>\n<p data-pid=\"k1-gFU2b\"><b>贯通箭：</b>特点是无视防御的直线射击，但威力只有普攻的85%，若不考虑距离因素，以50级计算，当敌人的物防≥18时，普攻伤害便低于贯通箭了。</p>\n<p data-pid=\"Kh79Ukv1\"><b>距离提升威力：</b>该技能提升威力包含普通攻击，技能。直线距离每增加1格，威力上升2%，也就是说当使用万里箭这样的超远技能时，最多可增加伤害24%。（与暴风加成为加法，与招式威力加成为乘法），普通攻击不考虑高低落差，最远端加成为12%（需配合<b>千里眼</b>和<b>普通攻击距离+1</b>）。直线距离是指，阿奇博尔德与所攻击的敌人的直线距离。</p>\n<p data-pid=\"QRsmbfX2\">该技能若配合能将阿奇博尔德送上高台的角色，会使阿奇博尔德每一次普通攻击，都造成如同其它角色“技能”一般的伤害。</p>\n<p data-pid=\"qBD1_x2B\"><b>扇形箭：</b>与风魔法攻击范围相同的射击方式，无法触发队友的夹击，伤害较低。不过因为阿奇博尔德有<b>帮你解脱吧</b>（对低血量触发即死）这个技能，所以通常在法师使用魔法将敌人轰至半血时，可以用这招尝试抽奖。帮你解脱吧，是个触发率相当不错的“即死”技能。</p>\n<p data-pid=\"zizmJyg2\"><b>黏着箭：</b>这个技能多次触发游戏报错。降低8点回避，3回合，而且不耽误本轮攻击，便于队友激活。但对于弓圣宝贵的TP点来说，黏着箭的实用性并没有贯通箭与万里箭那么高。</p>\n<p data-pid=\"bASf0gZJ\"><b>万里箭：</b>弓圣的核心技能，超远的射击距离，无视遮挡，配合高度差和距离被动，堪称夸张的加成，纯理论上若是将所有buff叠满，可达到普攻1.2×（1+24%【距离】+20%【高度】+15%【暴风天】+50%【致命一击】）约2.5倍的伤害。</p>\n<p data-pid=\"0AIrBQQ2\">该技能可触发背刺，但无法触发夹击。</p>\n<p data-pid=\"oqlru8CG\">掌握风魔法的法师，由于可以改变敌人的朝向与弓圣十分般配。</p>\n<p data-pid=\"p1YMWOiG\"><b>真·贯通箭：</b>需要蓄力一回合的无视防御射击。看起来的确很凶猛，问题在于，敌人很难排布成一条直线。可能围绕这招也有一些打法，但个人觉得真·贯通箭并不是太好用。</p>\n<p><br></p>\n<h2><b>15 正直的参谋 尤里欧</b></h2>\n<p><img src=\"https://pica.zhimg.com/v2-8cdacb167cc2dfd62e722506e7532ba6_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1050\" data-rawheight=\"430\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-8cdacb167cc2dfd62e722506e7532ba6\" data-watermark-src=\"v2-97c1fb6c903d4ab3c896a6416fbabf4b\" data-private-watermark-src=\"v2-0eaaba0ae11467d73d008b30e42c9fba\"></p>\n<p data-pid=\"ZF5FAbpV\"><b>加入条件：道德275 功利110</b> <b>自由—</b></p>\n<p data-pid=\"zd7GbfCa\"><b>特色：</b>物魔双休的近战单位，队伍的TP中转站。</p>\n<p data-pid=\"q49Ekps3\"><b>人物介绍：</b>原王国的官吏，十分正直、负责。王国沦陷后，因被帕特里亚德陷害，而投靠瑟雷诺亚。文人的外表下，拥有着相当强悍的战斗力，在王国比武大会上，曾作为协助枪圣的战士登场，并一举击溃了瑟雷诺亚的队伍。</p>\n<p data-pid=\"JODjZMxo\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-edb976d7702cdd04fa509b09abb2732e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1164\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-edb976d7702cdd04fa509b09abb2732e\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"YBsSfV8R\">单从一名近战角色来说，力量优秀，幸运太低，血量，双抗普通。不过配合上被动技能，可以承担一些伤害。</p>\n<p data-pid=\"CyzgfH3e\">尤里欧的近战能力可勉强跻身于第一梯队。因为他可以针对敌人的抗性，选择最合适的进攻手段，造成普通物理角色难以打出的高额伤害。</p>\n<p><br></p>\n<p data-pid=\"gTSsHHwv\"><b>武器强化：</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-2980eaa26b92498ef5558a09c632a603_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-2980eaa26b92498ef5558a09c632a603\" data-watermark-src=\"v2-2f3901bdf441659c81c14575c4c700c3\" data-private-watermark-src=\"v2-1eeb4706ab80e3f6bfc03e3cf28d539b\"></p>\n<p data-pid=\"Zz_4mQj4\">尤里欧的武器天赋皆为强化基础属性的能力，应选择优先点出一决胜负TP-1，其次将武器威力生命值等技能点出，进一步提高近战伤害，便于补刀恢复TP。</p>\n<p data-pid=\"Pz8j8SCb\">镇压……！并不着急，TP消耗过大，实际应用面较窄。</p>\n<p><br></p>\n<p data-pid=\"SS7WdPRu\"><b>技能解析：</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-97cef9461e6867ad48ae4087d34aa836_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1146\" data-rawheight=\"995\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-97cef9461e6867ad48ae4087d34aa836\" data-watermark-src=\"v2-993a03df90a92d48e888e88d0bb65bd7\" data-private-watermark-src=\"v2-d8dff009cf8e265e62e9c145a9d2a6f8\"></p>\n<p data-pid=\"PYq9utn1\">尤里欧的技能分为三类，被动技能，攻击技能，传递TP的技能。</p>\n<p data-pid=\"r3OSonLe\">我们先从传递TP的技能讲起。</p>\n<p data-pid=\"h_qt3fuT\"><b>接下来靠你了：</b>尤里欧提升至最终职业时，可习得的技能，也是作为周转TP的核心技能，一般情况来说，由于TP的回复机制，通常在4TP时传递给0TP的角色，即可使其在自身行动时获得5TP，除非那名角色装备了黑色脚镣，或者角色本身是木桶……</p>\n<p data-pid=\"SJU32PvT\">该技能的存在，也使得另外两个传递TP的技能，成为了替代品。</p>\n<p data-pid=\"yewdQAWX\"><b>一决胜负：</b>初始的传递TP技能，在武器未升级前，传递效率低下，以2TP换取1TP，必须贴身使用，虽然还会强化魔力与力量2点，但对尤里欧本人的损耗过大。</p>\n<p data-pid=\"DRt0kco7\">不过在解锁武器天赋后，1TP传1TP使该技能变得相当灵活，也使得尤里欧可以专门为我方“需频繁使用2TP技能”的队友持续提供TP。</p>\n<p data-pid=\"7_7zJGSx\"><b>觉悟吧：</b>3TP换2TP的技能，在传递范围，高低差方面，比“接下来靠你了”优秀，通常在“靠你了”传递范围无法达到的情况下使用。在尤里欧自身有4TP+，而队友是1~2TP时，也可以使用觉悟吧为尤里欧节省1点TP。这个技能的存在，可以使尤里欧传递TP的方式更加平滑。</p>\n<p><br></p>\n<p data-pid=\"dJJVyvEx\"><b>被动技能</b></p>\n<p data-pid=\"Ro425sbO\"><b>击破TP恢复：</b>因为尤里欧是近战单位，良好的补刀与合理的站位触发追击，可以使尤里欧在参与击杀敌人时，获得TP的补充。</p>\n<p data-pid=\"TburAn8U\"><b>TP屏障：</b>每点TP可以抵消4%的伤害，最高可抵御20%的伤害。该技能的存在，使得尤里欧成为肉盾时，有着相当不错的韧性。可以承担一些副坦的职责。比起常规肉盾，他也能承受一定的魔法打击。</p>\n<p><br></p>\n<p data-pid=\"PWiyxvE5\"><b>攻击技能：</b></p>\n<p data-pid=\"eDXxeHpn\"><b>休想得逞</b>：休想得逞自身伤害不低，但TP消耗略高，主要是为了消耗拥有1TP的敌人，让对方无法施展能力。如果有舞娘的配合，则可以限制一些强力敌人，避免其释放出高伤害的技能。</p>\n<p data-pid=\"MiWUjEHk\"><b>化念一击</b>：超高加成的魔法近战攻击，TP消耗只有1点，虽然尤里欧的魔力并不高，150%在魔法中也并不算高的离谱的加成。但作为一个近战招式，他可以绕背对敌人进行暴击（约195%加成）。对于那些普通近战单位啃不开的罐头型肉盾，尤里欧可以对他们释放化念一击，对其进行高额魔法伤害。因为高加成的原因，也可以为尤里欧佩戴提高魔力的饰品。</p>\n<p data-pid=\"2wcgnqLI\">3点魔力对于尤里欧背刺来说，就是23点伤害。</p>\n<p data-pid=\"2iGAV8oq\"><b>镇压……！</b>：与瑟雷诺亚的回旋斩享有同样的打击范围，威力也还算可观。但自身缺点明显，极高的TP消耗，使得经常要转移给其它角色TP的尤里欧并没有多少富裕的TP。况且在敌阵中施展镇压，还会使尤里欧失去TP屏障的被动，变得更加脆弱。</p>\n<p data-pid=\"K2QzmWQz\">关于“效果TP-1”的额外打击，敌人TP高的，尤里欧是控制不住的。而TP低的，除非对方是法师，否则实际收效不大。但尤里欧本身又很难接近敌方法师……</p>\n<p data-pid=\"ikfEFgkR\">镇压这个技能，设计的初衷还不错。但应用场景属实不多。可以选择在解锁武器威力之后，回头再来解锁这个武器技。</p>\n<p><br></p>\n<h2><b>16 召唤风雷的祈祷师 艾泽娜</b></h2>\n<p><img src=\"https://pic1.zhimg.com/v2-3053a17f0411aefda7ecafca01939ef7_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1050\" data-rawheight=\"430\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-3053a17f0411aefda7ecafca01939ef7\" data-watermark-src=\"v2-93063b96c44cae6342953e92f37ea7ae\" data-private-watermark-src=\"v2-023cca290c33d066ab63a76b23b677c9\"></p>\n<p data-pid=\"LmZiDKFM\"><b>加入条件：道德500 功利—</b> <b>自由400</b></p>\n<p data-pid=\"6rEajLp6\"><b>特色：</b>风与雷的法师，改变天候的魔女</p>\n<p data-pid=\"laZMQwZT\"><b>人物介绍：</b>自身拥有可以改变天候的神奇力量。但对于信仰盐之女神的教国来说，这种奇异的力量会使民众产生其它的信仰。所以，即便艾泽娜能够为少雨的海桑德祈雨，仍然遭到了教国士兵的追捕。在追捕过程中，艾泽娜与自己的恋人被迫分开。</p>\n<p data-pid=\"wzvKTctp\">后来，因为在沃荷德家族领地为百姓祈雨，被发现这种奇特的能力后，加入了瑟雷诺亚的队伍。</p>\n<p data-pid=\"ofp5M7gD\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-d66670000e5690d055f45b14e9697f99_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1164\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-d66670000e5690d055f45b14e9697f99\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"2EpqvPd9\">拥有全人物中最低的力量，几乎无法进行近战补刀。</p>\n<p data-pid=\"WcYHEorT\">身为法师魔力颇为优秀与冰法克伦蒂持平，有不错的魔防。</p>\n<p data-pid=\"eutLbE_R\">其它属性十分低下，标准的法师身材。</p>\n<p><br></p>\n<p data-pid=\"nrHSYKfe\"><b>武器强化：</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-a3ca56d7b10b32c59607c7e2df530320_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1219\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-a3ca56d7b10b32c59607c7e2df530320\" data-watermark-src=\"v2-80f873d3e1294d2b6efac38a21814aa3\" data-private-watermark-src=\"v2-942a846aa8fbe110aff92378c7aa0f89\"></p>\n<p data-pid=\"VROSmYay\">作为一名输出法师，想要发挥艾泽娜的全部威力，几乎要开启她全部的武器天赋。</p>\n<p data-pid=\"C-lzx_uG\">天赋中<b>优先级最低的是HP提升和物防提升</b>。雷神降临仪式是个挺好玩的技能，可以放在后面升级。</p>\n<p data-pid=\"_mpNKcWJ\">艾泽娜自身天赋层数是552，消耗资源相当多的那一类，总体升级压力略大。</p>\n<p><br></p>\n<p data-pid=\"R7_9-44T\"><b>技能解析：</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-9a0820e6c2a057df8026d37ef8ac3d16_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1208\" data-rawheight=\"974\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-9a0820e6c2a057df8026d37ef8ac3d16\" data-watermark-src=\"v2-db1547b70fe8d8c6f7e94bf3d00f81da\" data-private-watermark-src=\"v2-e74cddfe3660f6202b7c734a8d40717f\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"D-zoZ8qN\">比起克伦蒂和芙蕾德丽卡来说，艾泽娜占据了两种属性的魔法，但单一属性攻击魔法实际上并不丰富，无法像前两者那样，跟据情况选择最合适的魔法。由于信念值要求较高，理论上是最晚加入的法师。</p>\n<p data-pid=\"0p0wpvyD\">除了特殊关卡，想要使艾泽娜发挥出魔法的强大威力，往往需要先行进行仪式祈祷。</p>\n<p data-pid=\"yrrmkcFN\">但艾泽娜的雨天强化雷击与芙蕾德丽卡的晴天强化火焰冲突。</p>\n<p data-pid=\"9uO5LPFj\">暴风天强化旋风魔法，倒是可以与芙蕾德丽卡的晴天强化共存，不过会影响到射手的命中率。</p>\n<p data-pid=\"Kx09pXJV\">另一方面，艾泽娜并没有自主恢复TP的手段，在武器天赋强化前，即使祈雨唤风的仪式都要消耗点2点TP，而且，发挥自身魔法威力需要天候加持，这两点使得她在持续输出方面远远弱于其他法师。</p>\n<p data-pid=\"ttLBcKO9\"><b>落雷仪式：</b>艾泽娜的雨天强化落雷，其加成与芙蕾德丽卡双强化（晴天，强化火焰锁威力）的火焰锁系数相比，略高于芙蕾德丽卡（火焰锁威力加成=1.4×（1+0.1+0.15）=1.75 雷击仪式威力加成=1.55×1.15=1.7825）。但由于芙蕾德丽卡的魔力更高，且拥有火中提高魔力技能，使得落雷仪式的伤害略低于火焰锁。但落雷仪式自身的伤害仍超越绝大多数魔法。</p>\n<p data-pid=\"nBlhKDSt\">雷的特点是几率令敌人麻痹，攻击麻痹敌人必定命中。麻痹敌人将跳过自己的回合。</p>\n<p data-pid=\"26sQfWSZ\">雷可以经由水面、铁轨传导，站在与雷击相连水面的敌人也将受到雷电伤害，跟据测试，离雷击点越近伤害越高，越远则伤害越低（都小于直接受到雷击的伤害）。该传导伤害会令敌人麻痹，但是<b>不会享受艾泽娜的被动降低魔抗与幸运</b>。</p>\n<p data-pid=\"RsrUvQY8\"><b>水面的产生：</b>向冰、雪地面释放火系攻击，祈雨仪式。<b>*积水地形也会额外消耗移动力，为1.2移动消耗。</b></p>\n<p data-pid=\"ph6mrrjv\"><b>旋风仪式：</b>中程魔法，偏向于与我方物理角色进行协作。该魔法除了本身的伤害外，最大的优势是将敌人的朝向改变。这样我方的弓箭手，与近战单位就可以对敌人的背后进行攻击。该魔法亦可以使那些将自己背部保护的很好的敌人暴露出弱点。</p>\n<p data-pid=\"ZVlBkuSV\"><b>伤害附加幸运、魔防降低：</b>来自于道具的攻击和普通攻击，同样会触发这两种被动。一定程度限制敌人的暴击，提升我方法师的魔法输出。尤其“魔防降低”，相当于为我方全体法师附加了一个“猛如虎”的效果。</p>\n<p data-pid=\"3Zus6A8b\"><b>祈雨仪式：</b>虽然祈雨仪式能够熄灭地面上的火焰，但如果火焰是在下雨之后点燃，则不会熄灭该火焰地面。</p>\n<p data-pid=\"9lqblmaB\"><b>暴风仪式：</b>暴风天能够降低所有弓箭手10%的命中率，但是对于弓神 阿奇博尔德来说，会提供其额外的15%伤害。因此弓神与艾泽娜适合同时上阵。</p>\n<p data-pid=\"0nTqnbM5\">需要注意的是，当艾泽娜阵亡，风雨也会同时结束。风雨天强化风雷仪式的正确计算方式应该是原本威力×1.15%，表格内列举的（178%和120%）是计算之后的数据。</p>\n<p data-pid=\"w4A5_O9i\"><b>幸运仪式：</b>虽说是提高6点幸运，但影响好像不是很大。艾泽娜的技能组设计的挺有趣的，被雷击的确不幸，可能因此附带“幸运降低”吧。</p>\n<p data-pid=\"j9bpgebP\"><b>雷神降临仪式：</b>打击面全屏，消耗5点TP，但是无法由水传导。</p>\n<p data-pid=\"2r9_nebF\">因为命中必定麻痹1回合，所以还是个强控技能。缺陷是命中率偏低，可以击空。该技能可以作为控制+压低血线之用，需要大量辅助角色的投入，为了确保命中，应利用道具装备提高艾泽娜的命中率。输出效率偏低，但比较好玩。动画演出也极具魄力。</p>\n<p data-pid=\"ennoLSoC\"><b>雷神降临仪式</b>虽然看起来与<b>“陨落的太阳”</b>相似，都是需要吟唱，下回合再释放。但两者的释放条件完全不同，芙蕾德丽卡可以随时吟唱陨落的太阳，在下次行动前为其补充TP，最后使招式威力提升就好。但雷神降临仪式需要满5点TP才能释放，加上释放之后，0TP的艾泽娜想要重新补充至5TP，有需要大量的队友协作。使得其实际释放条件变得十分苛刻。</p>\n<p><br></p>\n<h2><b>17 法师起源之孙 奈维</b></h2>\n<p><img src=\"https://pic1.zhimg.com/v2-f544eccb5bd4818cc11c0da978988c94_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1052\" data-rawheight=\"434\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-f544eccb5bd4818cc11c0da978988c94\" data-watermark-src=\"v2-b49fbf175ea6e17235d973d61719b6cd\" data-private-watermark-src=\"v2-1ce58e94f104c3606c74c793113ddc7f\"></p>\n<p data-pid=\"OKf2JtZI\"><b>加入条件：道德110 功利—</b> <b>自由275</b></p>\n<p data-pid=\"7A7v7G3v\"><b>特色：</b>掌握全属性魔法，甚至治疗术的全能法师。但是TP量经常不够……</p>\n<p data-pid=\"cnUw67tI\"><b>人物介绍：</b>大魔法使 古兰丹迪的弟子。古兰丹迪是构建了魔法体系的强大魔导师，但其对魔法的贡献，被教国所掩埋。奈维身为古兰丹迪的弟子，亦是孙子。决定通过自己的努力，恢复爷爷的名誉，进而加入瑟雷诺亚的队伍。</p>\n<p data-pid=\"aLe1ofVP\">理论上加入队伍的第三位法师（如果选择了猎人，他便是第二位法师）。</p>\n<p data-pid=\"NB_EKdny\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-7ae100b051b7d3e662397822d376c875_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1164\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-7ae100b051b7d3e662397822d376c875\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"KcTfWk56\">虽说奈维的来头很大，但在魔力方面，却是四位法师中最为低微的。</p>\n<p data-pid=\"EE8otrip\">相反，他的生命，力量，物防倒略微呈现了近战特色。看来他不仅对魔法略懂，对于近战也略知一二，不愧是传奇魔法师的传人。奈维的力量已经强悍到可以参与到“近战对残血补刀”的强度。</p>\n<p><br></p>\n<p data-pid=\"7A7-_50R\"><b>武器强化：</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-8571c6ad0dd26a3e1067b5c06cbfaef2_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-8571c6ad0dd26a3e1067b5c06cbfaef2\" data-watermark-src=\"v2-84bdd54b5f1837419c65eeb38fdad5b0\" data-private-watermark-src=\"v2-88b367c1328c85fb4a873d28c16daadb\"></p>\n<p data-pid=\"_vvsMfvK\">奈维的武器天赋层数是442，消耗资源最少的类型。应优先点出武器威力与两个二选一，强化魔法威力。</p>\n<p data-pid=\"Q4Vtf8AH\">比起其它三位法师，在魔力基础就较为低下的同时，奈维在“武器天赋上”也比他们少一点魔力。不过好消息是，在解锁终极武器时，可以不受到前排天赋限制，直接开启魔力提升。</p>\n<p data-pid=\"x2_m1TPq\"><b>技能解析：</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-cdba9b46d7b0bf5a650593fcaf75012b_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1201\" data-rawheight=\"1041\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-cdba9b46d7b0bf5a650593fcaf75012b\" data-watermark-src=\"v2-f29d526c72f4f8844ce2bd12a64e7433\" data-private-watermark-src=\"v2-e968e9d3268df0e5c5797497e74d8cba\"></p>\n<p data-pid=\"FWQB9mIZ\">奈维的魔法在芙蕾德丽卡、克伦蒂、艾泽娜、吉拉篇章我们都已完全介绍过了。虽然艾泽娜与奈维的魔法名称不同，但其效果与基础加成是完全相同的。</p>\n<p data-pid=\"xaEUec7V\">奈维并没有自主恢复TP的手段，而魔法全为2TP的高消耗，需要TP供给者源源不断的支援。否则战场中期就会开始乏力，有力使不出来了。</p>\n<p data-pid=\"QnbUzTbi\">他掌握的五种类型魔法，可以跟据属性生克对特定敌人进行属性打击。但比起专一属性的法师来说，由于缺乏“单体类属性魔法”，故而杀伤力仍然有所欠缺。不过雷击魔法的存在，一定程度也弥补了他单体杀伤力的不足。</p>\n<p data-pid=\"jA6mUV8R\">奈维存在的主要意义是<b>团队属性的中转者</b>。例如配合克伦蒂或芙蕾德丽卡创造水面，或者由奈维创造冰面给克伦蒂释放冰柱华葬。或者艾泽娜先行祈雨，由奈维打雷对敌人进行AOE伤害与控制。灵活的属性，使战场的属性变化更加激进。而奈维的“伤害使魔防降低”，也能进一步强化友方法师的输出。</p>\n<p data-pid=\"bAse9kc7\">奈维也能作为团队的救火队员，当治疗者无法及时提供治疗时，奈维便可以挺身而出。</p>\n<p data-pid=\"NsbHWKE9\">奈维的另一个特点是升级为法术大师后的射程加强（也可以作用于终极技能）。</p>\n<p data-pid=\"VuAFHpXs\">在水、火、雷魔法上，他的打击面明显要比队友法师更加“先声夺人”。</p>\n<p data-pid=\"J7XAG0uO\">最夸张的是风属性魔法，十二格的超大打击范围，已经堪比普通法师的武器绝技。配合近战攻击，他的站位也比艾泽娜更加安全。美中不足的是，他的风雷魔法加成，比不上艾泽娜的天候魔法加成（奈维：10%，艾泽娜：15%）。</p>\n<p data-pid=\"6dRYVYca\"><b>魔幻光束：</b>个人感觉奈维的终极大招，杀伤治疗效果虽然还算不错，但打击范围与极高的消耗，使他的适用面略窄。多数时候，没有风魔法的集体伤害效果好。</p>\n<p><br></p>\n<h2><b>18 马戏团的孤儿杂技师 碧可蕾塔</b></h2>\n<p><img src=\"https://pica.zhimg.com/v2-bf783c634b38be9f1fe177fcaed67bff_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1048\" data-rawheight=\"428\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-bf783c634b38be9f1fe177fcaed67bff\" data-watermark-src=\"v2-65635ed841ac2bcca41b153d851b917a\" data-private-watermark-src=\"v2-f8ef74201de1151ce9c6f09ba3be3021\"></p>\n<p data-pid=\"RXjnB3s0\"><b>加入条件：道德— 功利—</b> <b>自由450</b></p>\n<p data-pid=\"mRKWDqd7\"><b>特色：</b>攻击道具的王，独特的肉盾！</p>\n<p data-pid=\"SOcbimm6\"><b>人物介绍：</b>碧可蕾塔是一位因战争而流离失所的孤儿，跟随马戏团游历的她，因为战争也和他们走散了。在荒郊野岭，独自抛投着手中的球，饥肠辘辘的她，如果没有遇到瑟雷诺亚，可能就饿死在山中了……</p>\n<p data-pid=\"NMDyxmCa\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-d1dd53cf3d5be7381268025b164f848c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1164\" data-rawheight=\"202\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-d1dd53cf3d5be7381268025b164f848c\" data-watermark-src=\"v2-1f7865bba9941f006abb14de4c311b45\" data-private-watermark-src=\"v2-1fd51373aa7e8d15cd040fbadbc8306c\"></p>\n<p data-pid=\"DkF74_9W\">闪避，移动，跳跃是碧可蕾塔较为突出的属性。力量普通，魔力较为出色，因为碧可蕾塔可以复制敌人最后使用的技能。所以，力量与魔力对她来说都很有用。</p>\n<p data-pid=\"8SYItyk4\">下方是她所释放的诱饵的50级数据，虽然相当脆皮，但作为一个吸收伤害的肉盾，已是足够了。（仅有3TP）</p>\n<p><br></p>\n<p data-pid=\"OWOrrNsO\"><b>武器强化：</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-0e2a4d561444ad13797e54ca0ebca194_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-0e2a4d561444ad13797e54ca0ebca194\" data-watermark-src=\"v2-4260349d224a5c61a1d7b4520f04779d\" data-private-watermark-src=\"v2-79b4e36cafa87d883324cf31aceec660\"></p>\n<p data-pid=\"JATl1_DL\">碧可蕾塔没啥需要迫切升级的技能，或许提高移动能力，抛球威力提升，武器威力提升需要优先升级一下吧。作为一个主要依靠“道具”来打伤害的角色，在一周目，由于资金短缺使得碧可蕾塔并没有那么好用。</p>\n<p><br></p>\n<p data-pid=\"6lt7hN2g\"><b>技能解析：</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-beeb7c4b398ff7d40c46d26754dccb93_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1037\" data-rawheight=\"819\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-beeb7c4b398ff7d40c46d26754dccb93\" data-watermark-src=\"v2-e259b919543aaf9dff8af2c0eddcaf4a\" data-private-watermark-src=\"v2-aa5ef5864349aeed9df9b5f4195b4216\"></p>\n<p data-pid=\"2Rv3vXXF\">碧可蕾塔的技能也分为三个系列：强化攻击道具系列，分身系列，还有唯一攻击技能“抛球”。</p>\n<p data-pid=\"7LCbmseE\">当有钱储存大量的属性道具·大的情况下，基于碧可蕾塔30%的增幅以及道具的超远射程，她可以在相对安全的位置，像奈维那样协助队友使用不同属性的道具对敌人进行法术打击。</p>\n<p data-pid=\"wq3FC4rC\">而且风属性的魔法石，还有在易燃地面扩散火势的效果（我方没有这种效果的魔法）。</p>\n<p data-pid=\"1AcYgXv2\"><b>抛球：</b>抛球是碧可蕾塔唯一的“攻击技能”，虽然可触发追击，但碧可蕾塔自身力量成长低，抛球又是直线发射，很容易被队友所阻挡。不过由于抛球的低TP消耗，也可以作为碧可蕾塔的另一种常规远程攻击手段。</p>\n<p data-pid=\"EspF-H5L\">抛球的另一个特点是可以攻击队友，其原本的设计目的应该是攻击残血的诱饵，利用惊喜箱对周围的敌人造成AOE伤害。但本身<b>惊喜箱</b>的最大生命值11%的伤害，使得这个组合变得没那么有意义。</p>\n<p data-pid=\"qe2ORg9v\"><b>诱饵：</b>最主要的作用，就是充当肉盾吸收伤害，在阵亡时也可以爆炸对周围的单位造成一定伤害。诱饵只有3TP，会释放抛球技能，武器无任何加成。移动力极差，战斗力一般，但可以与队友触发夹击。由于“诱饵出动”和“移形换影”都需要消耗自身回合指令，且TP消耗较高。故而我个人认为<b>“移形换影”</b>这个交换动作不够灵活，即使利用本尼迪克的乘胜追击，完成了这种交换，其本身收益也不大。</p>\n<p data-pid=\"AYRVuZoy\">除非是为了登上高台，利用高度差，在安全地点向下使用攻击道具。</p>\n<p data-pid=\"F7Q7qAT7\"><b>其人之道</b>：概率复制一个敌人最后释放的技能，此技能在使用前会存在于碧可蕾塔的指令列表里，但若期间复制新的技能，会导致该技能被替换。</p>\n<p data-pid=\"_N0xMniL\">由于复制技能会消耗掉碧可蕾塔的指令，所以此技能只能用于未雨绸缪，无法即学即用。学会的技能，威力系数按照技能本身加成计算，力量与魔力则要按照碧可蕾塔自身的能力值计算。</p>\n<p data-pid=\"aGL9__9T\">碧可蕾塔的许多技能虽然看起来消耗都很高，但作为一个平常使用道具攻击敌人的角色，对TP应用的大头基本也都放在了“制造分身”上。故而TP反倒是够用的。</p>\n<p><br></p>\n<h2><b>19 医法院的药师 梅迪娜</b></h2>\n<p><img src=\"https://pic2.zhimg.com/v2-8b867425080760fd1968506cd1a5e326_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1048\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-8b867425080760fd1968506cd1a5e326\" data-watermark-src=\"v2-2e30daed39357bb4c5700fa176cfc679\" data-private-watermark-src=\"v2-14a070e1ee49bb4c10f4748cf4c199ae\"></p>\n<p data-pid=\"4h-PS7KQ\"><b>加入条件：道德500 功利—</b> <b>自由400</b></p>\n<p data-pid=\"3Qyb3bpa\"><b>特色：</b>团队加油站，钱够马力足</p>\n<p data-pid=\"DYBZQKSs\"><b>人物介绍：</b>作为医师，因为不满于教国医法学院轻视罗洁尔族成员的性命，而使重伤的罗洁尔族错过了最佳的治疗时机丧命，对海桑德的“价值观”产生了疑问，于是脱离了医法院。</p>\n<p data-pid=\"Fk1SvbV3\">她听说沃荷德家族有一个为人指明方向的天秤，因此寻找瑟雷诺亚想请秘宝为她指引方向，最后却得知所谓的信念天秤，决定方向的是伙伴们经过讨论后得出的“结果”。听到这个“真相”的梅迪娜，觉得这正是她所追寻的东西，因而加入了沃荷德家。</p>\n<p data-pid=\"TYMm8qrZ\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-894d4936a1d923d9bf487ea37d53235b_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1164\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-894d4936a1d923d9bf487ea37d53235b\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"GcVjlQkN\">作为一名救死扶伤的医师，她拥有着令人羡慕的速度与首屈一指的移动能力。加上可抛射的治疗物品，她可覆盖的治疗范围相当大。</p>\n<p data-pid=\"pGfeAI2h\">梅迪娜拥有一定的近战能力。</p>\n<p><br></p>\n<p data-pid=\"U61k7H5E\"><b>武器强化：</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-cd5111f13890fd7d38a88f5ea5730d89_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-cd5111f13890fd7d38a88f5ea5730d89\" data-watermark-src=\"v2-0ab67709f921bb9e7692d45722496fe2\" data-private-watermark-src=\"v2-98e183cc26320c7f9f09046c15bd2743\"></p>\n<p data-pid=\"WGgibs0H\">应优先点出“移动提升”，增加移动范围。“速度提升”更便于梅迪娜先出手，为队伍增加TP之后，让队友满火力行动。</p>\n<p><br></p>\n<p data-pid=\"xF6Yd5Y3\"><b>技能解析：</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-ec7ab4d1e91927970ccbe3d77a6c10d5_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1054\" data-rawheight=\"907\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-ec7ab4d1e91927970ccbe3d77a6c10d5\" data-watermark-src=\"v2-8fd218e8dfc2ca1d9ac742028fe30d39\" data-private-watermark-src=\"v2-46c9de19dab0bb153c6781a42665de54\"></p>\n<p data-pid=\"ZdgdzObW\">梅迪娜的技能，其实没啥好分析的。HP药学、TP药学、恢复道具距离更远（也针对强化我方的道具）三个被动技能，效果几乎全部砸在了“恢复道具”上。而梅迪娜的超强辅助能力，也是在学会TP药学后才体现出来的。</p>\n<p data-pid=\"YPGIt5qP\">其实全部30个队友中，不乏一些进攻、防御、辅助端的佼佼者。但由于TP的限制，往往行动起来束手束脚的。但梅迪娜“双重道具”使用范围恢复道具，集体+2TP的超强效果，使得这些队友像装满了弹药的加特林，亦或者不可摧毁的城墙。</p>\n<p data-pid=\"2XJLjPlW\">试想连续三回合二动（乘胜追击）的3~4TP芙蕾德丽卡是一种怎样毁天灭地的效果？</p>\n<p data-pid=\"CuxkTTge\">连续两回合使用仁王盾控制住敌群的艾拉德尔呢？</p>\n<p data-pid=\"TlqwaHQD\">梅迪娜就是那种，只要你有强力技能，我就能保证你短时间内可以连续使用的强力辅助。</p>\n<p data-pid=\"d1g0yq87\">不过需要注意的是，梅迪娜的<b>双重道具</b>自身消耗3TP，而梅迪纳的范围道具也可以捎带着给自己补充TP，只不过<b>双重道具</b>消耗3TP的效果，要在使用第二个道具时才会发生，也就是说梅迪娜如果在5TP时使用双重道具给自己补充TP，是补充不上的。</p>\n<p><br></p>\n<p data-pid=\"7b9EN5o9\"><b>下毒：</b>普通的中毒效果，但持续回合更长。</p>\n<p data-pid=\"4T-mDASY\"><b>速效药：</b>梅迪娜版“就是现在”，不过需要消耗强化速度的药剂，某些时候，当队友的TP足够时，可令队友立刻行动的技能。</p>\n<p data-pid=\"FzsOId6R\">但梅迪娜的核心技能，还是“双重道具”和使用恢复道具为队友补充HP与TP。补充TP时，用低阶的药水就行，真正需要补充HP时，再用高效药。</p>\n<p data-pid=\"ozJlQ39g\"><b>天使之药：</b>一个覆盖全部队友的恢复技能，每名角色固定回复150生命，不会回复TP，该技能消耗TP多，效果一般。仅在个别时候有用（例如全员残血，站位分散）。配合<b>“幸运女孩”，</b>即使战斗时缺少药剂，也可以通过搜刮战利品几率获得。</p>\n<p data-pid=\"KNcTswWM\">梅迪娜的HP与TP恢复能力，建立在队伍的财力与商人的进货能力上。话虽如此，但在关键的战役关卡，购买7~10个范围恢复HP的物品，也足够补充队伍整体火力了。消耗也并不算太大。不过低周目无法常常如此，因为商人的货源有所限制。</p>\n<p data-pid=\"5GPFQqfS\">梅琳娜在使用普通恢复药剂时，会有恢复量不足等状况出现，但当使用的药剂为大或特大时，配合双重道具的效果，其恢复量要远远高于普通治疗。</p>\n<p><br></p>\n<h2><b>20 不败铁拳 格罗马</b></h2>\n<p><img src=\"https://pic1.zhimg.com/v2-26743b62c318e18abc4dfadefe776566_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1056\" data-rawheight=\"432\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-26743b62c318e18abc4dfadefe776566\" data-watermark-src=\"v2-ec3031fde0471018ebaf8c2b2cd0cc99\" data-private-watermark-src=\"v2-b2e8485b5d0a77a571504ecfea0091e3\"></p>\n<p data-pid=\"rB9-HQsK\"><b>加入条件：道德— 功利1050</b> <b>自由750</b></p>\n<p data-pid=\"22r9N1S0\"><b>特色：</b>超强的回避能力，穿行于敌阵之中，给予敌人致命伤害。然而，生命值太低，已不复当年之勇。</p>\n<p data-pid=\"FDWMHz9g\"><b>人物介绍：</b>前公国将军 格罗马，是现任将军 奥罗拉的师父。格罗马号称不败铁拳，擅长近战的她，似乎与其它两国的弓箭手结下来了不解之缘。王国三巨头之一 法库斯家的当家 兰德罗伊，曾与她有一箭之仇。而教国的弓圣 阿奇博尔德，却青睐着战争中，她身为敌国将军的作战姿态。而格罗马于战争中结下的心结，却恰好是阿奇博尔德为她解开的。</p>\n<p data-pid=\"Z9h5eFP2\">时间来到了现在，阿奇博尔德决定在结束之后，寻找那位令他心动的女将军。而格罗马看着行铺的老板，认为自己一定会与这个老头子成为很好的朋友。</p>\n<p data-pid=\"mldqDCae\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-765c2a4c4362da454e22acd09cc87a28_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1164\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-765c2a4c4362da454e22acd09cc87a28\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"q9zXR9su\">拥有全人物中最高的基础回避值，但同时却是30位角色中生命值最低的角色。移动能力优秀，能跨越较矮的地形，力量值虽然不低，但可惜的是她的招式加成都太低，除了武器技，很难打出爆发伤害。</p>\n<p data-pid=\"bGVnKmAl\">利用追击与回避，不断打出拳击，倒也贴合拳法的进攻方式。</p>\n<p data-pid=\"S2CZ-ioa\"><b>这里，引用一下我从NGA（凉凉的游戏）抄来的公式：</b>（命中率公式真心难算）</p>\n<p data-pid=\"-UVFsEv0\">命中率 = 2 x (命中 - 回避) + 武器基础命中率 + 技能命中修正 + 方向修正 + 高度差修正</p>\n<p data-pid=\"P9fSB1g0\">其中武器基础命中率，近战武器为90%，远程为80%。</p>\n<p data-pid=\"FLzp_OJC\">技能命中修正，每个技能都有独立修正，比如商人的硬碰硬，就会大幅减少命中率。</p>\n<p data-pid=\"3BUy120b\">方向修正在瑟雷诺亚篇我们曾写过，侧面攻击，增加10%命中率。背后攻击，增加20%命中率。</p>\n<p data-pid=\"q25TsHiU\">高度差修正，高处向下射击有额外补正，比较难算。</p>\n<p><br></p>\n<p data-pid=\"px3sS2XL\">跟据这个公式我们也可以看出，格罗马的回避虽高，但在这种计算公式下，她也很难像其它游戏那样达成100%闪避。更何况，贫弱的生命值很容易让她遭遇两个强力魔法便失去战斗能力。所以，显然让她深入敌阵成为艾拉德尔那样的T并非上策。</p>\n<p><br></p>\n<p data-pid=\"CbGaoGI7\"><b>武器强化：</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-75fa5e47edc174cba3e96d77fa2e634e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-75fa5e47edc174cba3e96d77fa2e634e\" data-watermark-src=\"v2-bfe21014c5981a2fdaf0d34fa4df732e\" data-private-watermark-src=\"v2-35fea81bc0eee3ec36694c8d5b8d8a39\"></p>\n<p data-pid=\"4OFCE8jl\">格罗拉的武器，以强化速度，回避为主。是一套专注于“核心基础能力”的天赋。</p>\n<p data-pid=\"kJLaPJru\">需要注意的是，避实击虚与追击伤害提升，都能够使转移的伤害值，从普通攻击的50%提升至65%。</p>\n<p data-pid=\"XYnn3_6A\">避实击虚适合深入敌后的玩法。而提升追击伤害使格罗马相当于获得了瑟雷诺亚的追击之势更偏向于团队夹击作战。这亮点都与格罗马本身的被动“穿心身法”有着密不可分的关系。</p>\n<p data-pid=\"jQd2F3Iu\"><b>技能解析：</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-97f4b38c05ebd668c2b73e98f24a6044_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1187\" data-rawheight=\"911\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-97f4b38c05ebd668c2b73e98f24a6044\" data-watermark-src=\"v2-79ca9a13e98ddda193ec31433bfe21d3\" data-private-watermark-src=\"v2-d2310eaa548c090a2574c364642131c4\"></p>\n<p data-pid=\"rDrZRzQJ\">暂时抛开穿天拳不说。</p>\n<p data-pid=\"CjzjaCOD\">格罗马的战斗逻辑，围绕着闪避之后反击敌人。</p>\n<p data-pid=\"TKSG7C_X\">先说闪避，击杀和自身生命值降低，都会进一步提高闪避率。而闪避的前置条件，是敌人用物理攻击或技能来攻击格罗马。</p>\n<p data-pid=\"7MptRqhV\">为了达成这个条件，<b>诱饵战术，</b>就变得无比重要。格罗马需要锁定的敌人，是那些释放攻击魔法或者治疗魔法的后排法师们，这些敌人自身攻击低，命中低，被格罗马以愤怒控制之后，便很难发挥出战斗力了。</p>\n<p data-pid=\"r0JUSAIa\">这里关于<b>避实击虚</b>，我们要说一个关于反击的机制。游戏中的<b>反击之势（瑟雷诺亚、枪圣），物理反击（艾拉德尔）</b>触发条件都是只反击发起攻击者，而<b>攻击者引发的夹击，即使符合反击条件，也不会触发反击。</b>这一点一定注意。</p>\n<p data-pid=\"C777hNSL\">格罗马的另一个被动技能，<b>穿行身法</b>支撑起了她的核心玩法，身为一个移动力、跳跃还算不错的近战单位，她可以依靠穿行身法直抵敌方坦克保护的后排，或者来到敌人身后，对他们的背部给予致命一击。通常执行这一战法的是安娜，但安娜即使有“背刺”的伤害加成，依然无法与格罗马的高伤普攻媲美。</p>\n<p data-pid=\"EJyGLKWI\"><b>扫堂腿</b>威力虽低，但可触发队友的连锁追击，队形合适的话，配合穿行身法，从背后使用扫堂腿，威力相当不俗。</p>\n<p><img src=\"https://pica.zhimg.com/v2-eb05ba2964389d0377e24fe93a4d3c19_720w.jpg?source=b1748391?rss\" data-rawwidth=\"101\" data-rawheight=\"101\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-eb05ba2964389d0377e24fe93a4d3c19\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"n9Sxlgmo\"><b>气功波</b>则是直线远程的普通攻击，一定程度上弥补了格罗马作为近战的缺陷。</p>\n<p data-pid=\"DlhdLxRx\">格罗马一个显而易见的缺点就是，自身技能输出能力偏低，但也正因如此，让她可以积攒大量的TP值，使出穿天拳。</p>\n<p data-pid=\"m12Qkpq7\"><b>穿天拳</b>作为唯一一招以下克上的技能，其自身加成就以达到恐怖的1.8倍。当配合高低差与暴击等元素，极端情况下更是可以达到1.8×（1+0.5+0.3）=3.24倍，通常情况下，达到2.25倍问题不大。这一招打击范围极广，对于高台射手、法师等角色，将造成相当恐怖的伤害。</p>\n<p data-pid=\"up66qTWI\">格罗马的切后排特质，与阿奇博尔德的远程射击也可以达成联动。</p>\n<p><br></p>\n<h2><b>21 血盾 弗拉纳甘</b></h2>\n<p><img src=\"https://picx.zhimg.com/v2-00a7616727bfa371473ce584cf1a6b9d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1056\" data-rawheight=\"430\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-00a7616727bfa371473ce584cf1a6b9d\" data-watermark-src=\"v2-3e1fb8b9a9f824b99535c198b1b9d728\" data-private-watermark-src=\"v2-1670c2ee6de0bb8bc3a2180a816c7790\"></p>\n<p data-pid=\"KzyhryeM\"><b>加入条件：道德1050 功利750</b> <b>自由—</b></p>\n<p data-pid=\"hRoWMEzJ\"><b>特色：</b>超强的守护队友能力，不错的干扰能力，极低的魔抗。</p>\n<p data-pid=\"h2xBQvwp\"><b>人物介绍：</b>被称为“血盾”的公国军人，其实早在王国比武大会时，便已登场的男人。不过在奥罗拉与枪圣单挑时，并没有展现出自己的实力。本身顺从公国的“自由”，一路赚取军功向上攀升，直到有一天，看着自己染血的盾牌，发现失去了自己最应该守护的东西。</p>\n<p data-pid=\"_lrRSs2Z\">决定守护他人而战，而非再次为了“名誉”杀人时，弗拉纳甘追随自己的信念，投奔了瑟雷诺亚。</p>\n<p data-pid=\"DzvvIFWA\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-b12a6d0b023eeadaa4799b3d92987044_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1164\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-b12a6d0b023eeadaa4799b3d92987044\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"HeF5ukSG\">弗拉纳甘有着傲人的生命值（全队第一）与物防能力（全队第二），但魔抗、速度极低。十分惧怕敌方法师，应针对性的选择抗性饰品。</p>\n<p data-pid=\"XTBzUDiK\">自身虽有跳跃加持，可来去自如，但移动能力相对低下。不过在技能“鹰袭”的帮助下，又使他在战场中的位置相对灵活。</p>\n<p><br></p>\n<p data-pid=\"66g3qv8P\"><b>武器强化：</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-4ff71f825c83d5aebabad1f56f1eafe3_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-4ff71f825c83d5aebabad1f56f1eafe3\" data-watermark-src=\"v2-3cc96c28b8827d59ad2f4cace0a8eb55\" data-private-watermark-src=\"v2-1d8480a58b3c554031f8791d68ac87de\"></p>\n<p data-pid=\"WV95eMpR\">弗拉纳甘有着出色的武器威力加成，物防强化。故而普攻伤害还还算可以。</p>\n<p data-pid=\"osCZYBtm\">“击退无效”天赋，让施展庇护的弗拉纳甘可以稳定住自身位置，也避免了作为前排肉盾的他，受到冲击伤害到己方后排。</p>\n<p data-pid=\"8O3AcPwX\">“鹰袭TP-1”是核心天赋，在开启之后，就可以每回合通过鹰袭移动，进攻，调整自身位置了。</p>\n<p><br></p>\n<p data-pid=\"15VIuO8f\"><b>技能解析：</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-f496e34c89f16bf1f1b2de07511271c9_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1162\" data-rawheight=\"816\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-f496e34c89f16bf1f1b2de07511271c9\" data-watermark-src=\"v2-2a575b72b9680b979c42304c15a5abd5\" data-private-watermark-src=\"v2-d5d535c1b53e08695bdb4f393434bdd7\"></p>\n<p data-pid=\"A91xAOpc\">虽然弗拉纳甘同样也有飞鹰兵种共有的特点（受到弓箭上海提升30%），但因为自身极高的物防，以及正面的<b>钢铁胸膛</b>，令他并不是特别畏惧弓箭。</p>\n<p data-pid=\"j7crvRGz\"><b>盾牌惩戒</b>伤害不高，主打控制，可以在激怒对手后，利用地形高低差飞走，令敌人无能狂怒追你又追不到。盾牌惩戒因为消耗TP少，几乎每轮都能控制一个敌方角色，与艾拉德尔的挑衅相比，附带了伤害，但控制的角色较少。</p>\n<p data-pid=\"WSy7Yoxx\">但用盾牌惩戒嘲讽对方法师，仍然是个相当冒险的行为，一旦失败，被魔法攻击，很容易造成弗拉纳甘的退场。</p>\n<p data-pid=\"OCzTHjLL\"><b>鹰袭</b>是弗拉纳甘的核心技能，虽然不会触发背刺、不会触发高低差伤害，亦无法触发队友的追击，但会跟据幸运值触发致命一击。本身加成并不低，但因为弗拉纳甘的基础力量一般，所以打不出太高的伤害。该技能最关键还是提供更远的位移，以及更为灵活的走位。作为AOE技能，伤害方面可用于补刀或压低敌人血线。</p>\n<p data-pid=\"6-qj99sg\"><b>有难同当</b>该技能与男主瑟雷诺亚持有的能力相同，这里做一个详细解析。弗拉纳甘共同承担伤害的角色B，会跟据B的物抗、魔抗计算伤害，然后平均分给血盾，与血盾本人的抗性无关。由于血盾不可击退（武器天赋），且自身血量极高，能通过任何地形守护需要保护的角色，所以整体来看，血盾的有难同当更为强力一些。</p>\n<p data-pid=\"Pzdcau3v\"><b>铜墙铁壁</b>开启防守模式，使自身防御力暂时达到与艾拉德尔持平，进一步强化的物防。对物理耐受力更强，但移动距离再度受限。</p>\n<p data-pid=\"BM7v7c85\"><b>自我再生</b>每回合固定回复50点HP，怀疑是跟据等级走得。就是多少级回复多少HP。不过没具体测试了。</p>\n<p data-pid=\"HhATRYKf\"><b>庇护：</b>该技能可以使与自己相邻的四格角色受到的伤害降低50%，不会降低自身受到的伤害。跟据近战攻击范围来看，高度差应该在范围±2之内。</p>\n<p data-pid=\"3TQrPU2e\">庇护配合有难同当，可以进一步减少队友受到的伤害。利用鹰袭攻击敌人，再飞回到队友身边，则可以在阵地战时，兼顾输出与防御。</p>\n<p data-pid=\"2cNne6VH\">一位使用盾牌，征战多年，双手染血无数的老兵。终于在放弃过去，追求自己的信念之后，找到了自己存在的意义。</p>\n<p data-pid=\"Z1LZmxt4\">“守护自己身边的人，那便是盾牌这种武器本该有的意义。”</p>\n<p><br></p>\n<h2><b>22 不死的枪圣 麦克斯韦</b></h2>\n<p><img src=\"https://pic2.zhimg.com/v2-9429efe5e88f1d1dcc7ecb055027627a_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1054\" data-rawheight=\"434\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-9429efe5e88f1d1dcc7ecb055027627a\" data-watermark-src=\"v2-d05cda74d6fa645836c03babe46fed5b\" data-private-watermark-src=\"v2-5c69db78fe21c5e7887bf268952fe62e\"></p>\n<p data-pid=\"zhRI5wk8\"><b>加入条件：第十五章之后 道德750 功利—</b> <b>自由1050</b></p>\n<p data-pid=\"Acag-wUR\"><b>特色：</b>灵活的战技，不死鸟一样的男人。然而战技消耗TP量较大，普攻伤害太低，则是他的缺点。</p>\n<p data-pid=\"GJ5Uwi1w\"><b>人物介绍：</b>枪圣麦克斯韦，罗兰的师父。在坠河失忆之后，漂流到一户村落。当回忆起自己的身份与使命后，决心协助瑟雷诺亚终结战争。曾经他是一位首屈一指的剑士，在他的枪法里，如今还保留有剑士才会施展的“反击之势”，因为失去爱人的痛苦，让他戴上了面具，放弃剑法，以“枪”这种兵刃重新起航。他的生命中似乎存在着不死鸟的特质，每当陷入绝境，总是能够重生。</p>\n<p data-pid=\"gnBeoJM7\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-b626828016f89e747889457c2bbf8e35_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1164\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-b626828016f89e747889457c2bbf8e35\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"B1MoLYK4\">作为拳神、弓神、枪神三大神中的最后一位，麦克斯韦自然也是传奇一般的存在。是四位拥有最高力量角色中的第三位。与罗兰相同，因为使用的是枪术，对骑兵能造成1.7倍的伤害，但自身武器系数仅有0.7。</p>\n<p data-pid=\"v4NpHLdN\">经过测试，之前提供的公式有误。在这里再进行一次更正，前面的文章会在今日（2022年7月23日）之内修复。</p>\n<p data-pid=\"V5OFTkXh\"><b>我方造成的伤害=（（力量×4-目标物防×2）×武器系数+武器威力+5）×技能威力系数×（1+特殊倍率）</b></p>\n<p data-pid=\"zoUEblAY\"><b>特殊倍率包含：高度补正、技能补正（例如弓圣的远距离增伤，老板娘的TP越多增伤）、暴击补正、天气补正（公主的火焰魔法，或祈祷师的风雷魔法等），等等</b></p>\n<p data-pid=\"vEg91ZpF\">因此，麦克斯韦的力量利用率偏低，主要依靠高加成的技能打出伤害。</p>\n<p data-pid=\"662LcjHx\">麦克斯韦的命中极为出色，不用太过担心攻击落空。但幸运太低，暴击率堪忧。</p>\n<p><br></p>\n<p data-pid=\"jcfWuHBM\"><b>武器强化：</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-190e3a6f5212bbb27a56bd1e96571084_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-190e3a6f5212bbb27a56bd1e96571084\" data-watermark-src=\"v2-f5817adc722546e31569cf919d0381d5\" data-private-watermark-src=\"v2-147fb3e88c3aef61ea909f03a6f6e7f0\"></p>\n<p data-pid=\"BE5G5RG-\">与罗兰相同，武器威力提升需要优先解锁，三连突刺TP-1作为核心输出天赋需要尽快点出。</p>\n<p data-pid=\"ajK8-vdZ\">弱点伤害提升，使对骑兵的75%加成，变为95%加成。实际作战中骑兵并不多见。该天赋应用面不广。</p>\n<p data-pid=\"Kis-Vxtm\">天降正义，作为一个群体“三连突刺”，威力不俗。可尽快点出。</p>\n<p data-pid=\"sxWis-xk\"><b>​</b></p>\n<p data-pid=\"hhFxuJnw\"><b>技能解析：</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-7ec7bcd587c17f31295f885c4de3453c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1174\" data-rawheight=\"916\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-7ec7bcd587c17f31295f885c4de3453c\" data-watermark-src=\"v2-100e42c0767c65b18a2e33981d9f9011\" data-private-watermark-src=\"v2-f80a91ed5b0989a463988ecc47316491\"></p>\n<p data-pid=\"tk2wKRsS\">在麦克斯韦这里，我们不妨解析一下游戏中的跳跃机制。每个人物都有“跳跃”这项能力，比较一般的人都是2点跳跃值，较高的为3点，比如格罗马，路德鲁夫（猎人），本尼迪克这些轻甲角色。人类跳跃极限是安娜，跳跃值高达4点。至于修艾特和弗拉纳甘的32点，是基于飞鹰的飞翔能力，已经脱离跳跃的范畴了。</p>\n<p data-pid=\"g8WJRQ7l\">一般的跳跃值，拿安娜距离指可以跨越“4”点高度差以内的范围，在这样的差值内随意行动。像是瑟雷诺亚的2点跳跃值，就经常被3点高度差的高台卡住，无法行动（所以，本尼迪克的疾如鹰+1跳跃值，此时效果就显现出来了）。</p>\n<p data-pid=\"lIlUutlu\">另外一点，跳跃也指水平跳跃，就是在高度相同的情况下，两者中间中空的格子数。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-a3806e93740a3d26ed15e7d987cc565b_720w.jpg?source=b1748391?rss\" data-rawwidth=\"167\" data-rawheight=\"68\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-a3806e93740a3d26ed15e7d987cc565b\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"oq_JMwoz\">如上图，红格子高度相同，白格子与红格子有相当的高度差，那么安娜4点跳跃，可以跨过3格空格。瑟雷诺亚的2点跳跃，只能跨过1点空格。</p>\n<p data-pid=\"mDD2c_PH\">这既是跳跃能力的垂直与水平说明。</p>\n<p data-pid=\"aEValOso\">我们再来看麦克斯韦的技能“自由跳跃”，这是他在第七章伊始，为了保护罗兰，便展示出的绝技。</p>\n<p data-pid=\"aWiQ6HMh\">作为四大跳跃技能之一（其他三位 安娜，女贼，舞女），<b>自由跳跃</b>的特点是，跳跃距离不远，高度差极大，可跨越高台。如果先行使用自由跳跃，还可以施展别的技能。这些特点，使得麦克斯韦能够在危机时顺利脱战，也使得他比绝大多数近战角色，更容易绕到敌人的背后，给予“致命一击”。</p>\n<p data-pid=\"ccuFTXDj\"><b>投掷长枪：</b>虽然投掷长枪的消耗TP高，加成一般，但却并非只有“远程攻击”一个优点，利用自由跳跃，形成高度差后，投掷长枪同样享受“高度差伤害加成”，最多可达8×2%的伤害加成。</p>\n<p data-pid=\"mKofgJ2e\"><b>三连突刺：</b>罗兰的二连突刺便是三连突刺的劣化版，作为拥有1.65倍加成的技能，绕背并使用三连突刺是麦克斯韦的主要输出手段。</p>\n<p data-pid=\"qHad_9H9\"><b>破阵突刺：</b>破阵突刺作为罗兰“冲锋突刺”的前身，由于没有马匹的加成，其威力要逊于冲锋突刺。不过命中多名目标即可恢复1TP的被动，使得麦克斯韦的普攻或复数攻击技能，都能够回复TP，保证后续持续输出。</p>\n<p data-pid=\"m2Wc4upq\"><b>反击之势：</b>因为枪术自身的加成要低于剑术，加上麦克斯韦的幸运远不及瑟雷诺亚，所以虽然麦克斯韦与男主拥有同样的技能，但制造的伤害却要远低于男主。是个聊胜于无的技能。</p>\n<p data-pid=\"FhQboHAj\"><b>起死回生：</b>麦克斯韦自带起死回生能力，与复活戒指以及吉拉的“奇迹之光”并不冲突。可以多次复活。</p>\n<p data-pid=\"e7d1shnF\"><b>天降正义：</b>将自由跳跃、三连突刺、大回旋斩三式连接在一起的技能。强力的AOE，能造成致命一击，无法触发夹击，无高度差补正伤害。无法形成背刺。消耗TP极大。视觉效果出色，威力优秀，但容易使自身透支，陷入敌阵之中。</p>\n<p data-pid=\"Sqk3NmJg\"><br> 23~30为<b>游信攻略家，活动参赛作品</b></p>\n<h2><b>23 双面间谍 舞女 蜜萝</b></h2>\n<p><img src=\"https://pica.zhimg.com/v2-edc5b5152129d2f62af0e12e7a7006f6_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1052\" data-rawheight=\"432\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-edc5b5152129d2f62af0e12e7a7006f6\" data-watermark-src=\"v2-5739db332af46e9e1ee53390f8ac5808\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"dUMc0Fjt\"><b>加入条件：</b>第十五章 选择与本尼迪克一同回到沃荷德家，看望父亲。</p>\n<p data-pid=\"ExF4p-oP\"><b>特色：</b>灵活的刺客，能够穿梭于战场之中，并使用魅惑令敌人自相残杀。</p>\n<p data-pid=\"6e0ry45k\"><b>人物介绍：</b>蜜萝在第二章便以“妖艳的舞女”身份登场，首次亮相，则是在第十一章，瑟雷诺亚一行人抉择是否交出“罗洁尔村村民”时，作为海桑德七圣人使者的身份，拉拢了背叛了王国的三巨头之一 提里奥。</p>\n<p data-pid=\"e6X9Cm_L\">在第十三章作为掌握海桑德 秘密炸弹使用方法的特工人员，作为客将暂时加入了主角团。</p>\n<p data-pid=\"rN0Spflr\">蜜萝表面上只是一位舞女，实际上却是双面间谍，精通暗杀，善使多种植物类毒药，喜爱危险刺激的环境。善用美色扭转战局，并经常能出色地完成任务。</p>\n<p data-pid=\"BNYN28IZ\">如此优秀，但仅仅被伊德当作工具人的她，选择为瑟雷诺亚效力，开启了自己新的人生。</p>\n<p data-pid=\"IxH7AUU9\">但与此同时，她也将“矿山的秘密”出卖给了海桑德，似乎有双面下注之嫌。</p>\n<p data-pid=\"SFI0tQkh\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-b078b5d6151e901d0b2d9eee2c0bec21_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1186\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-b078b5d6151e901d0b2d9eee2c0bec21\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"BCjGmzkN\">蜜萝拥有不低的力量与物防，出色的魔抗，以及触发被动后，接近全队第一的回避能力。</p>\n<p data-pid=\"2HfTVk4H\">表面来看跳跃能力是她的短板，但在“月之跃”与“穿行身法”的双重加持下，使她可以自由往返于战场之中。</p>\n<p><br></p>\n<p data-pid=\"CgHTTxQU\"><b>武器强化：</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-00c4cc1343d6d5000a049c918551d59e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-00c4cc1343d6d5000a049c918551d59e\" data-watermark-src=\"v2-60126b779124bb2c35c504ce345f8005\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"HgXl6TP_\">蜜萝的武器天赋缺陷在于武器威力提升不高。武器威力、回避、速度建议优先点出。</p>\n<p data-pid=\"xvERmiQR\">而终极天赋，建议速速点出的武器技“爱的力量”，使用得当，这是足已影响战局的强大技能。</p>\n<p><br></p>\n<p data-pid=\"kS0EVxQ1\"><b>技能解析：</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-92e4db02e762f5360c29cd058f66ac8d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1158\" data-rawheight=\"876\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-92e4db02e762f5360c29cd058f66ac8d\" data-watermark-src=\"v2-d7cfdbc71825f6d68b01d64d3b84fcba\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"SXJQFJZs\"><b>阴绿之雾：</b>作为魔法伤害的攻击技能，也是蜜萝的唯一攻击技能。其威力并不算低。蜜萝自身拥有55点基础魔力，由于此技能能够造成暴击，触发追击。其威力通常为1.3×0.9=1.17，附带的中毒效果，也可以使它收掉一些残血的敌人。</p>\n<p data-pid=\"mAcfPHyO\">对魔抗低的敌人相当好用。而那些具有“物理反击”的角色，也会因为是魔法攻击，而不会触发他们的反击被动。</p>\n<p data-pid=\"b1X62Ypr\"><b>幽蓝暗夜：</b>限制敌人力量与魔力实际上并不算特别明显。该技能最重要的能力是对于敌方TP的抽取。蜜萝自身不会降低TP，还会使敌方的TP下降，会限制敌方强力技能的使用。在驻扎所中，蜜萝与尤里欧总是站在一起，实际作战中，休想得逞+幽蓝暗夜也能限制死绝大多数角色。</p>\n<p data-pid=\"iGndNF4m\"><b>月之跃：</b>四大跳跃技能中，相对来说综合能力最强，范围最广，也最为实用的技能。该技能的存在，使蜜萝能够在超远距离加入战团，绕后与脱离都信手拈来。二次移动也使得蜜萝的作战十分灵活。蜜萝也可以通过月之跃跨过高度差8以内的地形。</p>\n<p data-pid=\"r9YnWrFa\"><b>俘获人心：</b>利用美色，暂时劝降敌人。与商人的策反相比，俘获人心有着更加恐怖的成功率，缺点是蜜萝几乎所有技能都是近身释放，一旦失败可能就要承受敌人的反击了。不过长达两回合的“化敌为友”也是风险与机遇并存了，真是个喜欢刺激的人啊。</p>\n<p data-pid=\"uur4ip34\"><b>星尘：</b>使用植物调配的毒药，几率使周围的人陷入麻痹状态。配合月之跃、穿行身法等能力，很容易使复数敌人陷入瘫痪状态。不过高达3点TP的消耗量，已足够再等等释放一次“爱的力量”了。个人使用次数并不多。</p>\n<p data-pid=\"lCP42SVJ\"><b>爱的力量：</b>从单技能的效果来看，爱的力量似乎是商人乾坤一掷的劣化版，基本上除了“不消耗钱”这个优点，其他方面都被“乾坤一掷”压了一头。</p>\n<p data-pid=\"1kVphB2S\">但技能的优劣，并不能完全脱离“技能组”来分析。就像格罗马的穿行身法，主要用于突入敌方后排，回避敌人反击刺杀。而蜜萝同样拥有穿行身法和高回避，她的主要游玩方式却是受残血和多种方式限制敌人输出，回避只是在此前提下的自保能力。</p>\n<p data-pid=\"k9t2XVct\">蜜萝的缺陷在于普通指令足够强力，很多时候不太好积攒TP，但满TP的蜜萝（可用尤里欧配合蜜萝），几乎可以通过月之跃+主动移动，横跨大半个战场——这是商人做不到的。</p>\n<p data-pid=\"FnPTUulf\">因为强大的移动能力，蜜萝爱的力量几乎可以找到最佳的释放位置。虽然仅有1回合的魅惑，但因为该状态，未被魅惑的敌人会优先攻击受到魅惑的敌人，导致敌阵混乱，削减HP（甚至减员），消耗敌方TP，为我方队伍争取调整时间等一系列效果。</p>\n<p data-pid=\"0g8nWrqa\">该技能是足已逆转战局的技能。</p>\n<p><br></p>\n<h2><b>24 格林布鲁克王国 第一公主 科迪莉娅</b></h2>\n<p><img src=\"https://pic1.zhimg.com/v2-0fb9baee368aae201288cd0fca696c31_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1050\" data-rawheight=\"432\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-0fb9baee368aae201288cd0fca696c31\" data-watermark-src=\"v2-29ce8470920424600dc4240259d0a814\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"buz3d2OZ\"><b>加入条件：</b>第十五章 选择留在格林布鲁克王国辅助罗兰</p>\n<p data-pid=\"26FWlBFx\"><b>特色：</b>传统治疗者，更高的恢复量，更高的TP消耗。适用于防守战。</p>\n<p data-pid=\"3VKcar50\"><b>人物介绍：</b>贤王的第三个孩子，王国的第一公主。比起性格有些神经质的第一王子，更喜欢性格率真的罗兰哥哥。王国陷落时，罗兰被麦克斯韦以生命护送逃离王国，第一王子以及贤王被杀。科迪莉娅作为傀儡，被扶植上位，并被迫嫁给了公国总帅 古斯塔德弗。</p>\n<p data-pid=\"nCBsCKoi\">于陷落的王国中，她仍勉励支撑着，以个人魅力策反了在公国郁郁不得志的奥罗拉，决定联合王党派夺回王国的实际控制权。这时瑟雷诺亚与罗兰，带着海桑德的军队夺取王城来了。</p>\n<p data-pid=\"qcjyCw4u\">在十四章的三条故事线中，科迪莉娅分别因为心力憔悴，为了保护奥罗拉被罗兰刺伤，为了保护罗兰被弓箭射伤等原因，无可避免的进入了医法院。</p>\n<p data-pid=\"xDPnD7FO\">第十五章中，为了帮助受欺压的百姓，拖着病躯协助罗兰，击杀了王党派。</p>\n<p data-pid=\"3hTUhlnT\">作为一名性格坚韧，秉性善良的女王，她似乎并不擅长作战。因为愤怒而破音，是她作战时说话的特点。</p>\n<p data-pid=\"K3J3sY2X\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-89260a4fe343ce0dae1faf6fd7e986de_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1136\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-89260a4fe343ce0dae1faf6fd7e986de\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"dXOKwrtR\">全人物中倒数第二的生命值，法师中不低的力量，以及全人物中最高的魔力（不过是治疗者），是科迪莉娅的特点。自身移动能力低下，速度偏低。</p>\n<p><br></p>\n<p data-pid=\"W7uIBAiA\"><b>武器强化：</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-f1d6bcb4bb5176d9f4fb7e33b695af6a_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-f1d6bcb4bb5176d9f4fb7e33b695af6a\" data-watermark-src=\"v2-f0418bf2f4c4e72ea800bc6b5536c646\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"BitvnLea\">为了提升治疗效果，武器威力提升，技能射程+1，过量疗法都是需要优先解锁的技能。</p>\n<p data-pid=\"J4RQKRGG\">二选一中，个人倾向愈合时效+1，回避身法在实际游玩中，有时对高回避角色不生效，有时会触发bug强制退出（与回避相关的技能，经常会这样，例如黏着箭也是如此）。</p>\n<p><br></p>\n<p data-pid=\"4LPkegKP\"><b>技能解析：</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-4a356b4beabf1a230a7a607eb68a78e0_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1221\" data-rawheight=\"818\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-4a356b4beabf1a230a7a607eb68a78e0\" data-watermark-src=\"v2-fdeaef16608e387deb28823ae5e3b2c3\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"hbEFzoHO\">科迪莉娅的治疗范围要比吉拉还广。高TP消耗下，其恢复量也比吉拉更足。不过吉拉在治疗重伤者时，由于拥有被动的加持，实际治疗量并不比科迪莉娅低多少。</p>\n<p data-pid=\"9fen16Sq\">想要了解科迪莉娅的用法，先要清楚她的被动“<b>停留TP恢复</b>”，“<b>再生之源</b>”（发动时间为科迪莉娅行动时）以及超广的治疗范围，都说明了科迪莉娅更适用于站桩给为队友进行补给。适合补给关。</p>\n<p data-pid=\"0oNnq7E-\">比起吉拉的及时救治重伤者，科迪莉娅更偏向于防患于未然，</p>\n<p data-pid=\"rItnruDB\">“<b>愈合</b>”和“<b>过量疗法</b>”都是这种提前治疗的代表。其中愈合每回合可以恢复队友20%的最大HP，但当友方角色的最大HP＞500时，最多只能恢复100点HP。</p>\n<p data-pid=\"MRPc1ogO\"><b>过量疗法</b>可以对同一角色无限量叠加，亦可对科迪莉娅自己使用。对自身使用，则可与“舍己为人”进行联动了。</p>\n<p data-pid=\"l_x-4m1i\"><b>舍己为人</b>会固定消耗科迪莉娅最大生命值50%的HP作为代价，恢复其他角色其最大生命值50%的HP。当科迪莉亚对自己施展过量疗法时，相当于将自身的TP换成HP储存了起来（即使实际生命值为800，技能消耗的HP仍为207）。在队友生命不健康，自身TP捉襟见肘时，可以使用“舍己为人”治疗队友。同时高额HP，也可以避免敌人的突袭使科迪莉娅战败。</p>\n<p><br></p>\n<p data-pid=\"tdtTpY6D\">她百分比回血的能力，使得在技能上，十分契合经常需要自损生命进攻敌人的孤高战士 奥罗拉。</p>\n<p><br></p>\n<h2><b>25 前强盗 翠西</b></h2>\n<p><img src=\"https://pic1.zhimg.com/v2-8b830fce3367906648eae4114c277413_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1050\" data-rawheight=\"428\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-8b830fce3367906648eae4114c277413\" data-watermark-src=\"v2-7ee8c55b982a3053a86b2d9643cd35e8\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"S2pODVxG\"><b>加入条件：</b>第十一章选择不交出罗洁尔族人，第十五章与芙蕾德丽卡返回罗洁尔村。</p>\n<p data-pid=\"r-44Bc6p\"><b>特色：</b>身法灵活的短距弓箭手，TP需求量极大，非晴天命中偏低。</p>\n<p data-pid=\"7QePN8FV\"><b>人物介绍：</b>作为第一章就出场的敌对角色，翠西和特拉维斯可以说是一对活宝。他们的反派生涯贯穿于游戏始终，但实际上只是为了生存，没做过什么杀人放火的恶劣事件。</p>\n<p data-pid=\"7VsBoq3A\">不过想要绑架沃荷德家的未婚妻，在主角团贩卖私盐期间，劫掠盐，将假罗兰的尸首拿去公国换钱后，又在公国大图书馆行窃。这种种行为都令人不齿。</p>\n<p data-pid=\"z9g5Hl6t\">由于盗得公国大图书馆芙蕾德丽卡母亲的日记，了解到罗洁尔村留有“某个宝藏”，不过翠西的老父亲会因为罗洁尔村有人居住，过着与世无争的生活，而拒绝劫掠他们。</p>\n<p data-pid=\"PAZR1RKj\">翠西则显得更加肆无忌惮一些。之后，翠西被击败生擒，特拉维斯为了让瑟雷诺亚饶过他的女儿，甘愿代为承担一切后果。</p>\n<p data-pid=\"_163chl0\">最终，芙蕾德丽卡给予了特拉维斯一家在沃荷德家族领地正常谋生的机会，翠西也借由特赦，为沃荷德家效力。</p>\n<p data-pid=\"263Kkh_Y\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-553f15628baab5b697b533da417dd200_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1136\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-553f15628baab5b697b533da417dd200\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"empdINKL\">没有什么突出的属性，对于弓箭手来说，命中相当一般。非晴天情况下，其命中能力已和路德鲁夫持平。命中率堪忧。</p>\n<p data-pid=\"CzR3_Cdy\">虽然力量比修艾特低一点，但在武器方面强于修艾特，普攻伤害相对更高一点。自身“幸运”算比较出色，比罗兰基础低一点（不过罗兰有满血加成），有一定暴击能力。</p>\n<p><br></p>\n<p data-pid=\"MbvUshH3\"><b>武器强化：</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-ef71dc512434bb46e477d2100fba5ebb_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-ef71dc512434bb46e477d2100fba5ebb\" data-watermark-src=\"v2-21fa13e82a57339dcc1643eef781cee1\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"zP-t020D\">弓箭手应该确保攻击力与命中，所以武器威力提升和晴天时命中提升应优先点出。翠西也最好在明确的“晴天”出击，保证命中率。</p>\n<p data-pid=\"wyFP1J83\">纵身而起TP-1可提高翠西的灵活性，建议点出。</p>\n<p data-pid=\"03jIG2sw\">双重回合是翠西的灵魂技能，可以彻底改变翠西的玩法，建议尽快点出。</p>\n<p data-pid=\"nTOGjC7m\">获宝TP恢复，因为“回收之手”的存在，当翠西沿路摸走多个战利品时，每个战利品都可以为她提供1点TP。但此技能在实战中并不算出色，建议自身装配黄金尾戒，提高掉宝率，击杀后去拾取物品，以提高TP。</p>\n<p><br></p>\n<p data-pid=\"psAAlD40\"><b>技能解析：</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-a26eb29cf034faa477a2637e9d8a3953_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1138\" data-rawheight=\"813\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-a26eb29cf034faa477a2637e9d8a3953\" data-watermark-src=\"v2-af8bd601f7e28f443421481afdf7f9ec\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"85lUzxiZ\">翠西的大部分被动都与偷取道具，拾取战利品有关。炎之加护也没啥好介绍的。</p>\n<p data-pid=\"UGp2iY7W\">所以，我们从主动技能入手。</p>\n<p data-pid=\"UoKN1oS0\"><b>纵身而起：</b>如果此技能与蜜萝、麦克斯韦的机制相同，他们她的跳跃范围与高度，无疑是跳跃技能里最优秀的。可惜的是，翠西的纵身而起在使用之后，无法使用其它技能。即使在升级后不消耗TP，但她消耗指令啊！只有在配合双重回合时，移动和输出才能兼顾。</p>\n<p data-pid=\"p2OAMqJj\">不过配合获宝+TP的武器被动，也可以利用高移动能力，化身为拾荒者。为之后的战斗积蓄力量。</p>\n<p data-pid=\"j5hgR3fR\"><b>烈焰箭：</b>因为纵身而起的存在，翠西有成为“高台射手”的潜质，烈焰箭作为弧线射击技能在高台加持下，有比肩路德鲁夫穿心箭的威力。尤其对敌方冰系法师，烈焰箭更为致命（对火系法师则维力下降）。烈焰箭也是唯一一个我方角色的物理属性伤害技能。</p>\n<p data-pid=\"mettqzo1\"><b>百发百中：</b>通常作为收尾技能，用来击杀高回避的残血敌人。虽然有着必定命中的特性，但自身威力降低，导致输出能力堪忧。</p>\n<p data-pid=\"Xo1kb_VS\"><b>双重回合：</b>相当于给自身释放了两回合的“乘胜追击”，效果与“乘胜追击”不叠加。施展“双重回合”的本轮，无法享受两次行动的好处。双重回合的存在使得翠西的行动更加灵活。但也使翠西有了输出空档期。​</p>\n<p data-pid=\"bahXHci6\">各种射击技巧可以搭配纵身而起使用，也可以单纯的对敌人进行两次射击打击。</p>\n<p data-pid=\"wuZYOv7Q\">想要释放更强大的威力，则需要队友的辅助了。由于两次行动是独立的，所以在第一次行动获取宝物恢复的TP，可以直接用在第二次行动中。</p>\n<h2><b>26 大头领 特拉维斯</b></h2>\n<p><img src=\"https://pic2.zhimg.com/v2-42e3958aad610fedcfb58b2b81fce9c8_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1050\" data-rawheight=\"428\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-42e3958aad610fedcfb58b2b81fce9c8\" data-watermark-src=\"v2-9b9b46764d363dd648175fe782a3bead\" data-private-watermark-src=\"v2-a9cd33a129a7d043058f6b385ac1187e\"></p>\n<p data-pid=\"TzQljBbJ\"><b>加入条件：</b>第十一章选择交出罗洁尔族人，第十五章与芙蕾德丽卡返回罗洁尔村。</p>\n<p data-pid=\"e6yNXgG8\"><b>特色：</b>强大的力量，还不错的双抗与血量。但整体使用起来有点笨重。</p>\n<p data-pid=\"QvuCIG6W\"><b>人物介绍：</b>作为第一章就出场的敌对角色，翠西和特拉维斯可以说是一对活宝。他们的反派生涯贯穿于游戏始终，但实际上只是为了生存，没做过什么杀人放火的恶劣事件。</p>\n<p data-pid=\"cGvtfWYp\">不过想要绑架沃荷德家的未婚妻，在主角团贩卖私盐期间，劫掠盐，将假罗兰的尸首拿去公国换钱后，又在公国大图书馆行窃。这种种行为都令人不齿。</p>\n<p data-pid=\"ZYChPv6Q\">由于盗得公国大图书馆芙蕾德丽卡母亲的日记，了解到罗洁尔村留有“某个宝藏”，特拉维斯准备搜索空无一人的罗洁尔村，赢得这一票大的后，就金盆洗手。翠西却认为强盗是应该奉献一生的职业。优秀的强盗就应该不断去追寻大秘宝。因此与父亲分道扬镳。</p>\n<p data-pid=\"MyfVqj6n\">之后，特拉维斯被保护村庄的主角们击败，特拉维斯为了女儿的未来，仍想要获取村庄的宝藏。</p>\n<p data-pid=\"8hutnRm1\">最终，芙蕾德丽卡给予了特拉维斯一家在沃荷德家族领地正常谋生的机会，特拉维斯也因此为沃荷德家效力。</p>\n<p><br></p>\n<p data-pid=\"ViaaSgw2\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-b764f68c3620cc017dad1b83d161591f_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1136\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-b764f68c3620cc017dad1b83d161591f\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"x_tLQrkO\">四位拥有最高力量的角色之一，生命值与物防比瑟雷诺亚高一些，其它属性全面落后于瑟雷诺亚。拥有一些减伤手段，可以作为副坦，输出技能控制能力强，并没有主角那样灵活。</p>\n<p><br></p>\n<p data-pid=\"kNnj-R6Q\"><b>武器强化：</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-58754d36ed331356ea126bc639723ff8_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-58754d36ed331356ea126bc639723ff8\" data-watermark-src=\"v2-f0da1c398b3dba1af6b079bc773f0531\" data-private-watermark-src=\"v2-bbdef89c4a3db3ed224cad1d373d7041\"></p>\n<p data-pid=\"bsJYfI_q\">特拉维斯的特大火抗并不会降低自己的冰抗，使其在对付火系法师时，颇有建树。</p>\n<p data-pid=\"5EqQNQFI\">二选一方面，要看具体游玩方式，再对选择哪一项技能做定夺。</p>\n<p data-pid=\"hGoChawU\">打劫的优势在于可以从背后造成致命一击，进而使威力进一步提高，于此同时与队友一起夹击对手。</p>\n<p data-pid=\"fLNqRNHz\">而降低旋转摔技的TP，则可以使特拉维斯更频繁的将敌人背到我方包围圈中，破坏阵型，对其进行围殴。虽然可以触发背部暴击，但是无法和队友进行夹击，且通常为了将敌人抱入我方阵营，也不太适合绕背背投的玩法。</p>\n<p><br></p>\n<p data-pid=\"_eZm-PDN\"><b>技能解析：</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-a58deb8202b03ace415acafe0ba925df_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1232\" data-rawheight=\"844\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-a58deb8202b03ace415acafe0ba925df\" data-watermark-src=\"v2-e5c0c1132324bc31c2d8ab7c0a3bc180\" data-private-watermark-src=\"v2-0db5c9ccd0e3bf1b68f0e792b5fc1d73\"></p>\n<p data-pid=\"bYMJIJFW\">特拉维斯的<b>旋转摔技</b>是其特色技能，可以破开敌阵，或者靠墙站得角色，使其露出后背。配合<b>趁火打劫</b>可在与队友对其进行夹击的情况下，偷盗一些道具。不过旋转摔技在特拉维斯的背后有单位，或者高低差过高时，都会将敌人丢在原地。想利用位移特性，打坠落伤害的，可以打消这个念头了。<b>旋转摔挤无法令队友追击，可以打出暴击，可以从背后发动暴击。</b></p>\n<p data-pid=\"exAGRKC1\">自身<b>钢背</b>技能与艾拉德尔相同，虽然没有艾拉德尔那么高的防御力，但35%的减伤，也使得特拉维斯相对坚硬。</p>\n<p data-pid=\"bQbygUzo\"><b>减速打击</b>是个强力群体延时技能，比起瑟雷诺亚的减速剑和延斯的减速网，他的特点是群控，不过自身杀伤力和延时能力也相对更弱。</p>\n<p data-pid=\"TkZG4jwf\"><b>警戒之势</b>与瑟雷诺亚的有情有义相反，需要身旁没有队友才能触发。但其只减少10%受到的伤害，应该是所有减伤技能中，最容易触发，减伤幅度也最小的技能了。</p>\n<p data-pid=\"aOt2GF96\"><b>绝境反击</b>的翻译虽然声势浩大，但比起芙蕾德丽卡火中可获得6点的魔力来说，3点力量配合起其相当苛刻的触发条件，真的不太够看。</p>\n<p data-pid=\"HsFoOZcS\"><b>蓄力猛击</b>的伤害比血腥十字、天降正义等AOE物理技能更出色，且能触发背刺暴击，但作为一个需要蓄力的技能，势必需要“就是现在”、“速效药”、“令出必行”等技能或秘技帮助。本身特拉维斯行动全靠腿。技能又需要在原地蓄力发动，其威力实际上比不上获得“乘胜追击”的瑟雷诺亚冲入敌阵的两次旋风斩（0.85×2=1.7，且高暴击）。并且蓄力技能，无法使用必定命中必定暴击的绝技，其威力就更是弱了一截。</p>\n<p data-pid=\"JH0P2GrU\">若令特拉维斯突入敌阵，蓄力吸引敌人，然后进行蓄力猛击，他的身板又有点扛不住。</p>\n<p data-pid=\"m4TN_0R5\">不过，配合商人的减益话术（睡眠两回合，命中必暴击），或许是个不错的玩法。</p>\n<h2><b>27 计算大师 德西玛尔</b></h2>\n<p><img src=\"https://picx.zhimg.com/v2-dd5196cc8171578a52c26f7b31a623ea_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1054\" data-rawheight=\"428\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-dd5196cc8171578a52c26f7b31a623ea\" data-watermark-src=\"v2-e2ac789590e964c4a3d43754b67ff886\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"wdc5Gikj\"><b>加入条件：道德1600 功利—</b> <b>自由—</b></p>\n<p data-pid=\"cdubOY-i\"><b>特色：</b>大范围AOE，条件与敌人生命值、高低差有关。高低差杀手</p>\n<p data-pid=\"UmHmgVE3\"><b>机器介绍：</b>不知被谁研制出来的，表面上是个有点笨蛋的木桶机器人，经常会犯迷糊，说错话。实际上，拥有很强的人工智能与计算能力。每当回想起自己的制作者，就会大脑短路导致重启，这现象与琥珀颇为相似……</p>\n<p data-pid=\"sIACLbrb\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-96c904b9582db3eb65afc885f144eff6_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1136\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-96c904b9582db3eb65afc885f144eff6\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"EeeTng8q\">德西玛尔有着较高的力量、魔力、物防、魔防，倒数第二的幸运值（第一是蜜萝），由于被动“机关结构”的存在，使得德西玛尔可以装备大幅度强化力量与魔力（各+5）的漆黑脚链。但本身移动能力堪忧。</p>\n<p><br></p>\n<p data-pid=\"WlwWp8-e\"><b>武器强化：</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-bf5b337c0724315a2ad78195c02d874a_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-bf5b337c0724315a2ad78195c02d874a\" data-watermark-src=\"v2-de3de1ce8dc574258b548ec199077174\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"JG4go4oi\">个人使用德西玛尔都是在高低差地形使用。德西玛尔加入时间太晚，相对来说，除了提升武器威力，其它能力并没有太多必要。资源不充足的情况下，仅仅提升武器威力即可。</p>\n<p><br></p>\n<p data-pid=\"fzjcWkqi\"><b>技能解析：</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-279891f7b01dd7f0703593dfacc651ba_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1131\" data-rawheight=\"890\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-279891f7b01dd7f0703593dfacc651ba\" data-watermark-src=\"v2-4bf8b0659112d8d1ad0c2ab9a030175b\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"vnEib-UM\">德西玛尔几乎所有技能，都围绕着敌人生命值是否能被某个数整除。或者HP末尾数是否为7。</p>\n<p data-pid=\"hUPea0SL\">所以，虽然覆盖范围大，但选择性上比较随缘。其中，HP4有限制敌人移动的效果。HP5，有12%左右的即死率。杀伤力都还不错。</p>\n<p data-pid=\"atJG2fTW\">TP0为针对我方所有TP为0的角色，使其力量与魔力+3。（使用强化类技能时不要加速，否则跳过强化动画，容易导致游戏强退）</p>\n<p data-pid=\"Af1u03t2\">德西玛尔如没有队友补充TP，通常需要“休息”一回合，下一回合才能发动能力。</p>\n<p><img src=\"https://picx.zhimg.com/v2-e191ea18a0a0fe7b996fa75ec3adc785_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1280\" data-rawheight=\"720\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-e191ea18a0a0fe7b996fa75ec3adc785\" data-watermark-src=\"v2-8088832216dc0191297b3796a02ab898\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"MPBpTYvu\">德西玛尔最为实用的技能，是升级为终极职业后，获得目标【高度5】，在具有地形差的战场中。例如大桥下，悬崖下，这些明显与敌人有高低差的地图中。</p>\n<p data-pid=\"SGlb2gMO\">将德西玛尔放置在下方，配合药师、参谋等角色为其恢复TP。每轮执行一次【高度5】，几乎杀伤范围可以覆盖全部敌人的80%。以此手段大幅度削减敌人的血量。</p>\n<p><br></p>\n<h2><b>28 时间法师 琥珀</b></h2>\n<p><img src=\"https://picx.zhimg.com/v2-fe80e99d80de4000339a31d56487b1ed_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1052\" data-rawheight=\"430\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-fe80e99d80de4000339a31d56487b1ed\" data-watermark-src=\"v2-d333aa4b49cbc190624306a06618abf8\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"frlInQ8F\"><b>加入条件：道德— 功利1600</b> <b>自由—</b></p>\n<p data-pid=\"6eTwScx3\"><b>特色：</b>最强控场，改变战场难易度的顶级辅助</p>\n<p data-pid=\"D9r9qKzm\"><b>人物介绍：</b>拥有预知未来的神奇能力，被母亲寄养在沃荷德领地的偏远地区，在看到未来后决定面见瑟雷诺亚，协助他终结战争。虽然有观察未来与过去的能力，然而却看不清自己母亲的样貌。后来，他在安娜的帮助下，找到了母亲留给他的信，原来将他留在别处，是害怕他的能力被七圣人之一的伊德所利用……</p>\n<p><img src=\"https://pica.zhimg.com/v2-c4569126db6ff19196948170da969cf7_720w.jpg?source=b1748391?rss\" data-rawwidth=\"288\" data-rawheight=\"311\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-c4569126db6ff19196948170da969cf7\" data-watermark-src=\"v2-dee1422f17524ce9c172560bd4c13917\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"I56RE7IK\">琥珀也是唯一一位出现在完美结局插图里的非主线相关NPC角色。该结局里母子终于团聚了。</p>\n<p data-pid=\"f1tjOLwK\">当然，这一切都少不了瑟雷诺亚的努力。</p>\n<p data-pid=\"xsAh0R4V\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-2b6dbfa982a832a59b69105c295b3d2d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1136\" data-rawheight=\"160\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-2b6dbfa982a832a59b69105c295b3d2d\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"lhONb3SW\">全人物中倒数第二的力量，倒数第三的物防，并列倒数第一的命中。倒数第三的幸运。魔力虽高，但没有进攻系魔法。</p>\n<p data-pid=\"BVoxgryg\">唯一出色的是强化后与安娜并列的速度。以及强化好，还算不错的跳跃与移动能力。</p>\n<p data-pid=\"YCO3A_Nc\">这一切都说明了琥珀并非战斗人员。</p>\n<p><br></p>\n<p data-pid=\"ytJ5d13t\"><b>武器强化：</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-df7b131a93d9879d639261610d214d43_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1249\" data-rawheight=\"442\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-df7b131a93d9879d639261610d214d43\" data-watermark-src=\"v2-d4e80997d05449fdd4cf28c084391402\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"KXsW_pkt\">全游戏消耗资源最多的544型天赋。速度提升、移动、跳跃提升、世界回溯之言（最重要）都相当重要。</p>\n<p data-pid=\"lO-ltUMw\">也就是说，最耗资源的第三层武器天赋全部都要点开。</p>\n<p data-pid=\"RIkU6xBS\">当然资源不足的情况下，建议率先点出世界回溯之言。</p>\n<p><br></p>\n<p data-pid=\"Cit4cuwG\"><b>技能解析：</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-d8867c17463d2dc244ea38e20c92dc66_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1079\" data-rawheight=\"1376\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-d8867c17463d2dc244ea38e20c92dc66\" data-watermark-src=\"v2-d3d6d65adc46c941728a41464f5f2681\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"tXHq5Oyi\">琥珀的新手玩家会有一个惯性误区，导致琥珀在手中的强度大幅度下滑。那就是琥珀的许多技能并非只能指向我方或敌方。有的技能可以对敌方或我方使用。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-96cdaf096be8fa6d173bb9315cf063aa_720w.jpg?source=b1748391?rss\" data-rawwidth=\"438\" data-rawheight=\"246\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-96cdaf096be8fa6d173bb9315cf063aa\" data-watermark-src=\"v2-60036e4993e04b5a70cbc51482015767\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"-n8rjSfA\">这里最简单的时间压缩之言、时间追击之言（对Boss有不错的伤害）不做过多解析。</p>\n<p data-pid=\"-Ux_Qant\"><b>空间扭曲之言：</b>远距离型弹射，比霍荷芭拉的武器技更加灵活。能够让我方角色登上高台，突入敌阵，抽离包围的位移类技能。使用方法非常灵活。</p>\n<p data-pid=\"4W-pXVWj\"><b>空间回溯之言：</b>这是个非常强大的回复技能，与控制技能。当我方一名角色本回合承受了大量的伤害，或被附加了一系列异常状态，空间回溯之言，能够使该角色除TP、吟唱、蓄力外的一切状态（包括位置），回溯到上回合的状态。相当于单体重启。若是艾拉德尔开启了仁王盾效果，本回合再度挑衅成功，空间回溯之言，也将回复其上回合的无敌状态。</p>\n<p data-pid=\"uSX1y179\">对敌方角色，譬如对方刚刚解除了魅惑、麻痹、睡眠等状态。空间回溯之言，也会令其再度回归到异常状态之中。只要TP够，琥珀可以一直控制该名角色，令其无法正常行动。</p>\n<p data-pid=\"ymYOAZu6\"><b>时间停止之言：</b>该技能的最原始效果，是使所有角色（包含敌我双方）两回合无法行动。相当于绝技的跳过单一对手回合。在这两回合中，所有角色还是会正常回复TP。但可再度使用一次指令，使得该技能有了操作空间。未达终极职业前，可以用时间压缩之言，使单一角色更加快速的行动，提早解开束缚。终极职业5TP时，可用空间回溯之言，解开单一角色的“时间束缚”，令其与琥珀一起行动。这时配合一些需要咏唱、或者蓄力的招式。即可打出不错的伤害了。</p>\n<p data-pid=\"aAUuzPwZ\">另外，当时间停止结束后，琥珀也可以利用空间回溯之言，再度使敌人回到被“时间冻结”的状态。</p>\n<p data-pid=\"ckLUa4lT\"><b>空间交换之言：</b>基础玩法，是跨越一些普通角色无法到达的位置，与其交换位置，令友方单位也能够来到这里。但因为可以指定敌人，所以，空间交换之言，可以将敌方Boss拉到我方包围圈里，对其进行一轮暴力输出后，即可解决战斗。</p>\n<p data-pid=\"i9EZm521\"><b>世界回溯之言：</b>针对全体“<b>存活</b>”角色的空间回溯之言。不同之处在于可以使除自己外的所有队友TP恢复到先前的状态。该技能不会对现有的行动条有所干扰。</p>\n<p data-pid=\"-hfvk-Am\">因为不会令死去的角色复活。这一招通常是用在我方角色满TP，对敌方进行狂轰滥炸，击杀许多角色之后。这使得在接战之前，我方角色的TP一直是保持高涨的状态，并且一直可以通过强力技能，点杀掉对方的角色。</p>\n<p data-pid=\"q2NE782q\">为了能够完成这种战术，我们也需要一位和琥珀站位更近，3TP或以上的参谋。尤里欧的交给你了，会使TP条空掉的琥珀，瞬间补满TP，并每轮都可以释放世界回溯之言。</p>\n<p><br></p>\n<h2><b>29 地质学者 吉邦娜</b></h2>\n<p><img src=\"https://pic1.zhimg.com/v2-f602fa25fa3ac0ed957b3ab6920ad124_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1052\" data-rawheight=\"430\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-f602fa25fa3ac0ed957b3ab6920ad124\" data-watermark-src=\"v2-e2fa37f1de1afdc95c19da829a721e43\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"KeRENLLS\"><b>加入条件：道德— 功利—</b> <b>自由1600</b></p>\n<p data-pid=\"ZZbCKtt1\"><b>特色：</b>跟据地形使用不同效果的魔法，超高移动力，充裕的TP</p>\n<p data-pid=\"3doUlsQW\"><b>人物介绍：</b>在公国大书库学习地质学的学者。对于诺泽利亚大陆的变迁十分感兴趣，要探索这个世界的所有秘密，因为公国对书籍的封锁，而独自游历世界各地。不过因为不善于旅行，在旅途中晕倒了，被修艾特所救。</p>\n<p data-pid=\"kcCuvYzr\">吉邦娜对于地质学已达到了常人难以理解的痴迷程度。不过其学术能力相当强悍，跟据陆地上的化石，推衍出了“诺泽利亚”大陆，在古老的过去，实际上是一个巨大的盐湖。</p>\n<p data-pid=\"c7Al3MaJ\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-6485bc39105d442c2b73e8b9f51544f9_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1136\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-6485bc39105d442c2b73e8b9f51544f9\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"JaLcO5Ml\">吉邦娜的移动能力，是全角色中独一档的存在，只有晴天状态下的罗兰能与她的移动力持平。</p>\n<p data-pid=\"VsWpPsmQ\">拥有一定近战能力，双抗、魔法威力也还不错。</p>\n<p><br></p>\n<p data-pid=\"5SaWTj0p\"><b>武器强化：</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-46ff4d9eea5694f8865540e9c7c75aee_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-46ff4d9eea5694f8865540e9c7c75aee\" data-watermark-src=\"v2-aacaa3d20258200d5adb91ff52d259cb\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"XuR_G5aq\">平地飞石作为吉邦娜的常用攻击手段，建议先行点出。</p>\n<p data-pid=\"e19CnuBm\">由于吉邦娜的武器威力可提升至3级，释放魔法时，相较于普通法师，相当于多了2.5魔力。</p>\n<p data-pid=\"_Suguari\">又因为<b>TP知识</b>的存在，使得吉邦娜的魔法能造成相当不错的伤害。</p>\n<p><br></p>\n<p data-pid=\"8JNLpILH\"><b>技能解析：</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-f2e9892502ca80a9d80d84bb3d98d814_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1177\" data-rawheight=\"1034\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-f2e9892502ca80a9d80d84bb3d98d814\" data-watermark-src=\"v2-6827a541d5ca33111c0df5b7ca9c0812\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"5xPuHl3D\">单单从技能组来看，吉邦娜似乎是个被地形严重限制的角色。如果想要施展相对应的能力，需要利用，亦或者创造对应的地形，才能施展吉邦娜的能力。</p>\n<p data-pid=\"AQvxWG_G\">这些能力中最不受限制的是<b>平地飞石</b>。这一招消耗TP少，自身威力低，能触发队友的追击。</p>\n<p data-pid=\"Iy8E0wQh\"><b>蔓草之地</b>这个能力比较随缘，没有对应地形就是用不了。如果有了对应地形，敌人站位不好，也很难打出威力。</p>\n<p data-pid=\"NnzmL0Cf\">其它能力，例如<b>水岸愈波</b>，可以通过冰面点火创造。也可以通过祈雨仪式创造水洼使用。</p>\n<p data-pid=\"NFH4-b-P\">吉邦娜的能力优势在于<b>蔓草之地、烈火燎原、寒地冰锥</b>这三招极大的打击范围。</p>\n<p data-pid=\"p3YG5asc\">其中地形最不受限制的便是<b>寒地冰锥</b>（也是升到终极职业最后才能学会的技能）。</p>\n<p data-pid=\"rfW6tm39\">当习得<b>寒地冰锥</b>后，吉邦娜可以与冰法 克伦蒂产生联动。冰法克伦蒂先手冻结地面，吉邦娜踩在冰冻地面上，释放寒地冰锥，造成伤害并制造更广的冰冻地面，配合克伦蒂的冰面回复TP，打开战线。</p>\n<p data-pid=\"x0BWVerz\"><b>烈火燎原</b>如需强行使用，多数情况要配合油壶。多数情况敌方只有法师有冰火相关的抗性，而寒地冰锥、烈火燎原对阵普通敌人，也只是视觉效果不同而已。</p>\n<p data-pid=\"1WHqNYEQ\"><b>大地母亲的咆哮</b>其特点是极高的魔法伤害，与在较为平稳的地势上，延深至无限远的十字打击范围。高TP消耗在每轮2点TP入账的吉邦娜这里，算不上什么明显缺点。利用高移动力调整好打击位置，能对大范围敌人造成沉重的打击。</p>\n<p><br></p>\n<h2><b>30 洪水新娘 大将军 奥罗拉</b></h2>\n<p><img src=\"https://pica.zhimg.com/v2-9fe17f2e77f833cdfb943cfe871fa064_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1052\" data-rawheight=\"428\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-9fe17f2e77f833cdfb943cfe871fa064\" data-watermark-src=\"v2-4065c839609c2ae399c25281cadd672f\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"FvSs7qgh\"><b>加入条件：</b>进入隐藏结局</p>\n<p data-pid=\"yIW0ZIKQ\"><b>特色：</b>独狼，超高的属性加成，超高的技能威力加成，狂战士系角色，生命越低，战斗力越强。</p>\n<p data-pid=\"tACnfpr2\"><b>人物介绍：</b>公国前将军不败铁拳的亲传弟子，然而她的武技却自成一脉，只隐约有些师父的影子。虽然是孤儿，但依靠顽强的斗志从底层爬上了公国将军的位置。然而即便如此，仍然得不到血统纯正的现任宰相及其姐姐的尊重。奥罗拉的实力堪称游戏内的第一人，甚至能压制王国枪圣麦克斯韦。在对公国逐渐失望后，投身于与自己性格一样坚韧的王国第一公主 科迪莉娅麾下。拥有了一段跨越身份的友谊。</p>\n<p data-pid=\"A-8dAHtk\">作为侵略王国的主要打手，奥罗拉亲手斩杀了王国的第一王子，与罗兰有不共戴天之仇。跟据路线选择不同，她也将数次成为阻碍主角团前进的强大敌人。</p>\n<p data-pid=\"hddjcHZ2\">只是当命运的第十三、十四章到来时，奥罗拉都无可避免地陷入落入水中下落不明的命运——就像败在她剑下的枪圣一样。</p>\n<p data-pid=\"u6Psqprs\">当瑟雷诺亚最终找到了“全新的道路”，奥罗拉将作为隐藏角色，协助瑟雷诺亚完成大业。</p>\n<p data-pid=\"JypqOm7B\"><b>50级满级，武器强化满级数据</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-8baa56270f07fc8cc2082361a7d211aa_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1136\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-8baa56270f07fc8cc2082361a7d211aa\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"sTBUuJsy\">基础数据上来讲，奥罗拉拥有最高的力量。但通常选择奥罗拉上场的玩家，都喜欢只派她一人，或者辅以少量辅助上场。所以，应该看孤高的战士加成后的实际数据。</p>\n<p data-pid=\"KRkSWRd4\">孤高的战士数据，<b>感谢风花吹雪ACC提供的孤高战士数据</b>~~</p>\n<p><img src=\"https://pic1.zhimg.com/v2-baeeb22a9e72b86231a6d616c46d799e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1063\" data-rawheight=\"322\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-baeeb22a9e72b86231a6d616c46d799e\" data-watermark-src=\"v2-a57878d6c3e5815f1d734fd7b1e9773b\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"vr3Bu_IU\">建议给奥罗拉装备上红色围巾，这样在击杀敌人后，即可获得大量HP回复。</p>\n<p><br></p>\n<p data-pid=\"Wa7bhp5n\"><b>武器强化：</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-8acdda7f9fcf1c9e6dd9e66bf8608eab_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1212\" data-rawheight=\"424\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-8acdda7f9fcf1c9e6dd9e66bf8608eab\" data-watermark-src=\"v2-9118ad8c2b16d4dae6d461b4c6ed87de\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"U8-1Tem5\">奥罗拉也与阿奇博尔德相同，需要解锁大量核心天赋后，才能发挥出全部威力。</p>\n<p data-pid=\"Dy1Q_Bw8\">武器威力提升自不必说。舍身击、危机时攻击提升Ⅱ，血腥十字，这些天赋更是缺一不可。</p>\n<p data-pid=\"o1wQWbt_\">这使得想要发挥出奥罗拉的全部实力，需要消耗大量的铁矿石，在一周目来看，这几乎是不可能完成的任务。（基本在3周目时，各项资源才能放开购买）</p>\n<p data-pid=\"o2wHUPSj\">我在一周目游玩的时候，由于特技铁矿石不足，就感觉不到她的丝毫强度……</p>\n<p><br></p>\n<p data-pid=\"zReVsmxO\"><b>技能解析：</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-4a411398693c546b5238c4ffddba6426_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1190\" data-rawheight=\"921\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-4a411398693c546b5238c4ffddba6426\" data-watermark-src=\"v2-ff42fdf2df6f73299e44346a1f69b7a5\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"moRRdFgb\">奥罗拉在天赋升级后，25%生命值以下时，将获得50%的物理伤害威力加成。配合与老板娘相同的<b>危机时防御提升（正版）</b>，有一定的抗打击能力。</p>\n<p data-pid=\"n3xh4uqy\"><b>舍身击</b>作为消耗最大生命值的技能，一来可以减少TP的消耗，将TP留给武器技的释放。</p>\n<p data-pid=\"9uz1MfZg\">二来，可以配合被动，压低自身的生命值，打出更高度伤害。</p>\n<p data-pid=\"kpgelH21\">舍身击165%的伤害加成，已与枪圣麦克斯韦的三连突刺持平，且奥罗拉的力量利用率远高于其它角色，其威力相当恐怖。</p>\n<p data-pid=\"fA2b-Zx0\"><b>斩草除根</b>应该是脱胎于格罗马扫堂腿的技能，加成更高，但比起格罗马的几率禁锢，奥罗拉给予的则是更加明确的回避降低，移动降低。</p>\n<p data-pid=\"JMdj4PtS\">大显身手和艾拉德尔的舍身之势一样迷惑……而且大显身手+2点力量的效果，与<b>击破时力量提升</b>不能叠加。</p>\n<p data-pid=\"3RS98XQI\">也就是说，在大多数时候，奥罗拉的使用方式，就是舍身击+普通攻击的力量怪兽。</p>\n<p data-pid=\"fs82gvBV\">攒满大招，释放血腥十字即可。</p>\n<p><br></p>\n<p data-pid=\"RBBGJhpf\"><b>血腥十字</b>曾击败枪圣麦克斯韦的绝技。威力虽然不比舍身击，但同样可造成背部暴击。被击退的角色，如果退无可退，还可造成连锁碰撞伤害。当自身被包围时，是兼顾“杀伤力”与解围属性的神技。不过要稍微注意一下被击退的敌人，对于队友的碰撞伤害。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4f6324ca368e5d1fb446c85172995bc9_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1280\" data-rawheight=\"720\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-4f6324ca368e5d1fb446c85172995bc9\" data-watermark-src=\"v2-bea089f8155b9276906a9ea4c78e0df8\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"V0cChw0l\">不过在剧情中，罗兰曾避开了血腥十字，并将奥罗拉击退于湍急的河水之中。</p>\n<p><br></p>\n<p data-pid=\"tKtfSZgH\"><b>结语：</b>以上三角战略三十名可使用角色完全更新完毕。最后四位角色篇幅略短，这是因为除了琥珀具备一些使用难度以外，其它三位角色的使用方式，或是限制较多，或是颇为个性化。没啥需要特殊讲解的机制。</p>\n<p data-pid=\"rK9Ji9VL\">至此，为期二十天的更新正式结束啦。全文共四万余字。</p>\n<p data-pid=\"RC18Rrr8\">后续将对《三角战略》的主要人物及剧情做一篇较为详尽的分析。</p>\n<p><br></p>\n<p><br></p>\n<p><br></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wu-yue-bai-xiong?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">无月白熊</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/527176295/answer/2581815244?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/528765139?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《三角战略》游戏中哪些技能伤害高？</a><br><a href=\"http://www.zhihu.com/question/527379572?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《三角战略》游戏的一周目有哪些角色值得培养？</a><br>\n","link":"http://www.zhihu.com/question/527176295/answer/2581815244?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"《崩坏三》中的崩坏能是什么样的设定？","date":"2022-09-15 10:54:53","description":"\n<h2>【崩学】文献综述：崩坏能的量子物理诠释（万字未满，非常简单，放心食用）</h2>\n<h2>导论</h2>\n<p data-pid=\"8BNle-l2\">这篇文章的目的是对<b>米哈游宇宙（HoYoverse）中的“崩坏能”（包括崩坏本身）</b>这一设定做出基于现代科学理论的解释，描述其<b>物理起源、作用机理和在世界观设定中的作用</b>，通过研究其与<b>主流物理理论的异同</b>来分析崩坏能的<b>幻想特点与创作目的</b>。本文的诠释基于<b>两个假定</b>：</p>\n<ul>\n<li data-pid=\"AJtF2jbY\">假定一：描述米哈游宇宙（至少<b>在崩坏3RD世界观中</b>）的信息<b>在物理上是完备且自洽的</b>。不考虑哥德尔不完备定理的情况下，我们要求米哈游目前提供的信息能够不矛盾地<b>构建一个物理模型</b>。</li>\n<li data-pid=\"ZoWQXHKy\">假定二：假定一的物理模型是<b>符合已知物理规律的</b>。</li>\n</ul>\n<p data-pid=\"Tph1q1-V\">当这两个假定均成立时，我们就可以开始讨论崩坏能的物理性质了。不过由于这一讨论将要涉及高维量子引力理论、统计热力学、偏微分方程、进化生物学和科学技术哲学等交叉领域，而笔者对此的了解仅限于九年义务教育辍学水平，故<b>显然不能做出非常正确且深入的分析</b>，所以我将尽可能使用一般营销号科普水平的语言，在尽量不做计算的情况下完成这一篇小学生作文。</p>\n<hr>\n<h2>正文</h2>\n<h3>熵：虚数内能与亥姆霍兹自由能的傅里叶诠释</h3>\n<p data-pid=\"qdq62sqO\">首先我们讨论米哈游对<b>崩坏能的基本定义“虚数内能”</b>。我们注意到在<b>米哈游视觉小说《逆熵》的</b>爱因斯坦（如图所示，此处指<b>崩坏3中的爱因斯坦</b>，这一类同名角色可以简单理解为<b>以历史人物为原型的魔改</b>）口中有“属于<b>坍缩次元的虚数内能</b>，与作为<b>发散次元</b>——也就是我们平常能感知到的<b>四维时空</b>——的<b>热力表征</b>的<b>实数内能</b>”，这段话透露给我们两个信息：其一，<b>存在一组“坍缩次元/发散次元”和“虚数内能/实数内能”的对偶</b>；其二，<b>四维时空是发散的，额外维是坍缩的</b>。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-83b5062e57afa1e4f5f43ab0e2cea4f8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1210\" data-rawheight=\"681\" data-watermark=\"original\" data-original-src=\"v2-83b5062e57afa1e4f5f43ab0e2cea4f8\" data-watermark-src=\"v2-c21d13f5960621c31e873d098169ce41\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"UZS0Pev5\">这里存在一个<b>“内能是该空间热力表征”</b>的对应关系，也就是<b>“坍缩次元-虚数内能”</b>和<b>“发散次元-实数内能”</b>。通过这个关系我们可以从<b>空间关联</b>得到<b>内能关联</b>，所以这一步首要确定的是<b>米哈游宇宙中描述空间的物理模型</b>。同样是在《逆熵》中，我们可以得到对“坍缩次元/发散次元”的更详尽描述：<b>坍缩次元指的是“有限蜷缩的7个维度”，发散次元指的是“无限延伸的4个维度”，整个宇宙则是一类“膜”</b>。</p>\n<p><img src=\"https://picx.zhimg.com/v2-b000f62d400aeedce75627fbec8fec96_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"723\" data-rawheight=\"251\" data-watermark=\"original\" data-original-src=\"v2-b000f62d400aeedce75627fbec8fec96\" data-watermark-src=\"v2-047d4fa7c09492e863a9e62b941a4c2a\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"ZC1oqvaa\">11维这个幻数相当明确地指向了M-理论，“膜”和“蜷缩”也是该理论的前置概念。这一理论更耳熟能详的名字叫<b>超弦理论</b>，起源自1960s晚期，不同于<b>标准模型描述的任意时空中的点状基本粒子，M-理论描述的是超空间中名为</b><img src=\"https://www.zhihu.com/equation?tex=p\" alt=\"p\" eeimg=\"1\"><b>-膜的物体</b><sup data-text=\"Gelis F . Quantum Field Theory: From Basics to Modern Topics[M].  2019.\" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\">[1]</sup>。超空间是常规时空的推广，指包含<b>3+1维时空以外额外维</b>的时空，<b>特别地，当要求维数</b><img src=\"https://www.zhihu.com/equation?tex=D%3D11\" alt=\"D=11\" eeimg=\"1\"><b>时，这就是M-理论</b>。早期的杂弦理论对左行模式应用26维玻色弦形式、对右行模式应用10维超弦形式，此时的幻数分别为<img src=\"https://www.zhihu.com/equation?tex=D%3D26\" alt=\"D=26\" eeimg=\"1\">和<img src=\"https://www.zhihu.com/equation?tex=D%3D10\" alt=\"D=10\" eeimg=\"1\">，后来的物理学家们采用T-对偶、S-对偶等方法对五种原始超弦理论进行了进一步耦合，II A型和<img src=\"https://www.zhihu.com/equation?tex=E_8%C3%97E_8\" alt=\"E_8×E_8\" eeimg=\"1\">杂化得到了<img src=\"https://www.zhihu.com/equation?tex=g_%7B%5Cmathrm%7Bs%7D%7D+l_%7B%5Cmathrm%7Bs%7D%7D\" alt=\"g_{\\mathrm{s}} l_{\\mathrm{s}}\" eeimg=\"1\">大小的第11维，这就是上述 <img src=\"https://www.zhihu.com/equation?tex=D%3D11\" alt=\"D=11\" eeimg=\"1\"> 的起源。为了区别于过去的五种超弦理论，这一崭新的11维量子理论被称为M-理论，在低能下可以近似为<b>十一维超引力</b>的经典场论。M-理论所描述的<img src=\"https://www.zhihu.com/equation?tex=p\" alt=\"p\" eeimg=\"1\">-膜是一个<b>具有</b><img src=\"https://www.zhihu.com/equation?tex=p\" alt=\"p\" eeimg=\"1\"><b>个空间维数和张力</b>（或者说<b>能量密度</b>）<img src=\"https://www.zhihu.com/equation?tex=T_p\" alt=\"T_p\" eeimg=\"1\">的物体，<b>点状粒子是0-膜，1维基本弦是1-膜</b>（特别地，当我们粗略估计弦的特征长度尺度<img src=\"https://www.zhihu.com/equation?tex=l_%5Cmathrm%7Bs%7D\" alt=\"l_\\mathrm{s}\" eeimg=\"1\">，可以采用量纲分析来自然构造一个称为<b>普朗克长度</b><img src=\"https://www.zhihu.com/equation?tex=l_%7B%5Cmathrm%7Bp%7D%7D%3D%5Cleft%28%5Cfrac%7B%5Chbar+G%7D%7Bc%5E%7B3%7D%7D%5Cright%29%5E%7B1+%2F+2%7D%3D1.6+%5Ctimes+10%5E%7B-33%7D%5C++%5Cmathrm%7Bcm%7D\" alt=\"l_{\\mathrm{p}}=\\left(\\frac{\\hbar G}{c^{3}}\\right)^{1 / 2}=1.6 \\times 10^{-33}\\  \\mathrm{cm}\" eeimg=\"1\">的猜想，由于在<b>当前实验物理中远低于普朗克（Planck）能标</b>的情形里<b>无法分辨与普朗克长度相当的距离</b>，所以<b>弦可相当准确地由点状粒子近似</b>）<b>，我们熟知的3维空间则是一类名为D-膜（D3-膜）的特殊形式</b><sup data-text=\"Moore G W . What is$dots$a brane?[J]. Notices Amer.math.soc, 2005(2):214-215.\" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"2\">[2]</sup><b>。</b>这里要提到我们的诺贝尔物理学奖得主<b>杨振宁</b>老先生，他的<b>标准模型杨-米尔斯（Yang-Mills）量子场论可以位于D-膜的世界体上，这意味着我们所处的宇宙有可能就位于M-理论超空间中的一类D-膜上</b>。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-630c620cef9b5602668c7751a4c3bbbc_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"693\" data-rawheight=\"346\" data-watermark=\"original\" data-original-src=\"v2-630c620cef9b5602668c7751a4c3bbbc\" data-watermark-src=\"v2-fa82b46c0c00162b8162b41781850c5a\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"SmQG-y_A\">我们再回到崩坏3的描述，坍缩次元/发散次元这组对偶的实际对应已经得到阐释：<b>坍缩次元是超空间额外维，发散次元则是一类D-膜。</b>那么下一步我们要问，为什么会坍缩？<b>为什么7个额外维是蜷缩的？</b>这就要追溯到额外维的最早源头，卡鲁查（Kaluza）和克莱因（Klein）在1920s提出的理论，通过对广义相对论的5维拓展，他们<b>削除了一个维度</b>从而自然得出了4维中电磁力和引力的统一描述（即麦克斯韦方程）。如此优美的推导过程，让卡鲁查-克莱因理论轰动一时，这一方法也被历史所记载，称为<b>“紧致化”</b>。如图所示，我们会发现<b>一个3维的圆柱体在远处看起来像是一根2维的线条</b>，我们把圆柱体的半径视为7个额外维、高视为4维时空，就能得到紧致化的基本原理——<b>有7个维度“蜷缩”在了4维世界的内部流形（空间）中，于是世界看起来就只有四个维度</b>。这些不可见的蜷缩维度被称为<b>紧流形</b>，其<b>拓扑性质</b>将会决定粒子物理中<b>基本粒子的类别与结构</b>。<b>崩坏3的7个有限蜷缩的维度显然就是紧流形。</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-158d1ace852b584cf4807561b83c66b4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"1131\" data-watermark=\"original\" data-original-src=\"v2-158d1ace852b584cf4807561b83c66b4\" data-watermark-src=\"v2-77a346446d682ac70097ad4311b2e6f0\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"hsBE5GE7\">这里需要插入一下有关对偶的研究，对量子引力理论并不熟悉的读者可能并不能很快领悟为什么我将坍缩次元和发散次元称作一组对偶。这里的<b>对偶指两者间存在的一种严格等价关系</b>，来自崩坏3爱因斯坦的这个描述“在数学上可以通过高维<b>复函数</b>进行<b>统一的表达</b>”。熟读超弦理论的朋友们大概已经知道我想要说什么了，这种坍缩次元/发散次元——即<b>虚数空间/实数空间的对偶基本类同量子场论方法的AdS/CFT对偶</b>。AdS/CFT对偶是<b>M-理论</b>与<b>共形不变的量子场论</b>间存在的一种等价关系，描述了M-理论中一系列重叠的 <img src=\"https://www.zhihu.com/equation?tex=p\" alt=\"p\" eeimg=\"1\"> -膜可以形成像黑洞那样存在视界的时空几何、这一几何在视界边界又可以近似成一个反德西特空间（Anti-de Sitter space，即AdS）和球面的乘积、这一乘积还对偶于一个共形不变的量子场论（共形场论，Conformal Field Theory，即CFT；一种标量不变的量子场论，意味着共形平坦，即<b>引力不参与相互作用</b>）。在II B型超弦理论里 <img src=\"https://www.zhihu.com/equation?tex=N\" alt=\"N\" eeimg=\"1\"> 个重叠的D3-膜中，物理学家们找到了AdS/CFT对偶的一个经典实例，也就是5维反德西特空间（ <img src=\"https://www.zhihu.com/equation?tex=AdS_5\" alt=\"AdS_5\" eeimg=\"1\"> ）和5维球面（ <img src=\"https://www.zhihu.com/equation?tex=S%5E5\" alt=\"S^5\" eeimg=\"1\"> ）乘积给出的十维几何下II B型超弦理论与4维时空中具有 <img src=\"https://www.zhihu.com/equation?tex=%5Cmathcal%7BN%7D%3D4\" alt=\"\\mathcal{N}=4\" eeimg=\"1\"> 超对称的 <img src=\"https://www.zhihu.com/equation?tex=SU%28N%29\" alt=\"SU(N)\" eeimg=\"1\"> 杨-米尔斯理论之间的对偶。我们前文提过，杨-米尔斯理论是<b>标准模型</b>的一块拼图，标准模型正是一种<b>排斥引力存在的常规量子场论</b>（<img src=\"https://www.zhihu.com/equation?tex=%5Cmathcal%7BN%7D%3D4\" alt=\"\\mathcal{N}=4\" eeimg=\"1\">超对称的杨-米尔斯规范理论是共形不变的）。我们认为崩坏3中虚数空间/实数空间的对偶近似于AdS/CFT对偶，更进一步的猜想是<b>虚数空间具备反德西特空间的一些特征，而实数空间具备共形场论的一定特征</b>。对于后者，我们前文已经论及崩坏3宇宙实数空间D-膜世界体与杨-米尔斯场论的关联；对于前者，反德西特空间可以用外尔曲率（Weyl curvature）来表征其引力场的熵<sup data-text=\"Egan C A ,  Lineweaver C H . A Larger Estimate of the Entropy of the Universe[J]. Astrophysical Journal, 2009, 710(2):1825-1834.\" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"3\">[3]</sup>，通过共形变换将趋近于无穷大的熵重置回0，这一点可以解释<b>为何虚数空间作为崩坏能的来源却从未被无穷无尽的虚数内能淹没</b>。根据上述II B型超弦理论的例子，<b>AdS/CFT对偶实际上可以理解为5维反德西特空间与边界4维时空的映射</b>，这是<b>全息宇宙论</b>的一个论据，可以用于论证<b>我们身处的时空可能是更高维度的一个投影</b>——这一<b>高维AdS空间对低维CFT空间的投影</b>，恰好对应<b>崩坏3中高维虚数空间对低维实数空间的投影</b>，可以说这是AdS/CFT对偶在崩坏3宇宙中最有趣的一种体现。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-6c141fc6d2539cb73612cccd559a0231_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"332\" data-watermark=\"original\" data-original-src=\"v2-6c141fc6d2539cb73612cccd559a0231\" data-watermark-src=\"v2-cae9dcbb5d10e1b6082bdaa56710d761\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"4zF-ZnD7\">小小的题外话结束，再下一步我们需要研究<b>实数空间的发散性</b>：为什么只有这4个维度是发散的？为什么蜷缩的是另外7个维度，而不是更多或者更少？排除掉+1的时间维度，这个问题实际上是在问：<b>为什么空间维度只有3个？</b>一种假说认为是<b>亥姆霍兹自由能（Helmholtz free energy）决定了我们宇宙的空间维数</b><sup data-text=\"Gonzalez-Ayala J ,  Cordero R ,  Angulo-Brown F . Is the $(3+1)-d$ nature of the universe a thermodynamic necessity?[J]. Epl, 2016, 113(4):40006.\" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"4\">[4]</sup>。亥姆霍兹自由能是<b>热力学自由能</b>的一种，其密度可以视为<b>对整个空间的一种压力</b>，取决于<b>宇宙的温度</b>和<b>空间维数</b>。如图所示，亥姆霍兹自由能密度在宇宙大爆炸后几分之一秒的时间内达到峰值，此时空间的维数便大约是3。由于热力学第二定律决定了<b>不同维数的转变类似于物质的相变</b>，需要足够的<b>临界温度</b>（比如冰的融化，小学物理），可在此之后宇宙的温度却是不断降低的，所以我们如今的宇宙空间维数只能“冻结”在3维。</p>\n<p><img src=\"https://picx.zhimg.com/v2-3c95906d8cb7ecd8eb2cc4de569638e0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1212\" data-rawheight=\"685\" data-watermark=\"original\" data-original-src=\"v2-3c95906d8cb7ecd8eb2cc4de569638e0\" data-watermark-src=\"v2-161589d9e41bcb5fa3abd7bd6b2a0f0f\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"bAXNfM-z\">确定了崩坏3的超空间、虚数空间与实数空间的基本物理模型和性质以后，我们终于可以进入正题：<b>崩坏能到底是什么？“虚数内能”</b>，这个答案在过去显得云里雾里，但厘清了空间性质以后，我们总算能对此做出一个定性的回答：虚数内能是<b>虚数空间的内能</b>，一种<b>亥姆霍兹自由能</b>，可以被<b>亥姆霍兹方程</b><img src=\"https://www.zhihu.com/equation?tex=%28%5Cnabla%5E%7B2%7D%2B%5Ckappa%5E%7B2%7D%29A%28%5Ctextbf%7Bx%7D%29%3D0\" alt=\"(\\nabla^{2}+\\kappa^{2})A(\\textbf{x})=0\" eeimg=\"1\">所描述。</p>\n<p><img src=\"https://picx.zhimg.com/v2-dca90484a29eed7b567d58246313fe4c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-dca90484a29eed7b567d58246313fe4c\" data-watermark-src=\"v2-27b050d8872642e2226c7d728fdcd261\" data-private-watermark-src=\"v2-81fc08e05f7f94b5c413c35e39fb495d\"></p>\n<p data-pid=\"y0knDtJa\">为什么说虚数内能是一种亥姆霍兹自由能呢？在视觉小说<b>《幽兰黛尔》</b>中，薛定谔说道：“<b>负熵与虚数内能——也就是崩坏能——相伴相生</b>。”两者可以相互转化（借助<b>月光王座</b>或者<b>理之律者的权能</b>），这意味着负熵的描述方程在特定的公式下同样可以描述虚数内能（崩坏能），也就是<b>存在对偶关系</b>，正如麦克斯韦方程组可以统一描述电与磁一样——或许我们可以把这个还没推出来的方程称作<b>虚数负熵统一场论</b>，简称<b>崩坏能方程</b>（什么？你以为我会去推吗？这起码得数学物理的PhD才能做的课题你让我一个民科上？少做梦了，亥姆霍兹方程凑合一下差不多得了）。在物理学家<b>薛定谔</b>（Schrödinger）对<b>《生命是什么》</b><sup data-text=\"Schrodinger E . What is Life? The Physical Aspect of the Living Cell.[J]. american naturalist, 1967, 25 suppl 1(785):25-41.\" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"5\">[5]</sup>一书做出的解释中（相近的描述也出现在崩坏3薛定谔的口中），<b>“负熵”实际上就是热力学自由能</b>，相对于<b>作为混沌表征的正熵</b>，<b>作为自由能的负熵是生命从环境摄取可做功能量的重要来源</b>。一般地，在正则系综（Canonicalensemble，NVT）描述的封闭系统中，考虑配分函数（Partition function）的离散系统形式公式，我们给出<b>熵 </b><img src=\"https://www.zhihu.com/equation?tex=S\" alt=\"S\" eeimg=\"1\"><b> 的一种表示</b>：</p>\n<p data-pid=\"EDiXyH5w\"><img src=\"https://www.zhihu.com/equation?tex=%5Cbegin%7Balign%7D+++++%5Cbegin%7Baligned%7D++++S+%26%3Dk_B%5Csum_%7Bs%7DP_s+%5Cln+P_s%5C%5C++++%26%3Dk_B%28%5Cln+Q%2B%5Cbeta+%5Clangle+E+%5Crangle%29%5C%5C%5Cquad++%26%3Dk_B%28%5Cln+Q-%5Cfrac%7B%5Cpartial+%5Cln+Q%7D%7B%5Cpartial+%5Cbeta%7D%29%5C%5C+++++%26%3D%5Cfrac+%7B%5Cpartial%7D%7B%5Cpartial+T%7D%28K_BT%5Cln+Q%29%5C%5C+++++%26%3D-%5Cfrac+%7B%5Cpartial+A%7D%7B%5Cpartial+T%7D+++++++%5Cend%7Baligned%7D+%5Cend%7Balign%7D\" alt=\"\\begin{align}     \\begin{aligned}    S &amp;=k_B\\sum_{s}P_s \\ln P_s\\\\    &amp;=k_B(\\ln Q+\\beta \\langle E \\rangle)\\\\\\quad  &amp;=k_B(\\ln Q-\\frac{\\partial \\ln Q}{\\partial \\beta})\\\\     &amp;=\\frac {\\partial}{\\partial T}(K_BT\\ln Q)\\\\     &amp;=-\\frac {\\partial A}{\\partial T}       \\end{aligned} \\end{align}\" eeimg=\"1\"></p>\n<p data-pid=\"xu6-SzSP\">该式中的A就是亥姆霍兹自由能，可以定义<img src=\"https://www.zhihu.com/equation?tex=A%3DU-TS\" alt=\"A=U-TS\" eeimg=\"1\">，其中 <img src=\"https://www.zhihu.com/equation?tex=U%3D%5Clangle+E+%5Crangle\" alt=\"U=\\langle E \\rangle\" eeimg=\"1\"> 是总能量的热力学值，<img src=\"https://www.zhihu.com/equation?tex=-S\" alt=\"-S\" eeimg=\"1\"><b>就是负熵</b>。在这一计算中我们采用热力学积分（Thermodynamic Integration）方法，<b>假定系统在无限长时间内的能量均值等价于其系综平均值</b><sup data-text=\"Mey A ,  Allen B ,  Macdonald H , et al. Best Practices for Alchemical Free Energy Calculations[J].  2020.\" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"6\">[6]</sup>。需要注意的是，为了简化理解，在此我们<b>假定米哈游宇宙满足封闭系统的正则系综条件</b>，但实际计算中我们可能需要由微正则系综（Micro-canonicalensemble，NVE）导出的其它系综统计理论来描述这一系统。总之综上所述，我们得到：<b>崩坏能等价于虚数内能</b>、<b>虚数内能等价于负熵</b>、<b>负熵等价于热力学自由能</b>、<b>热力学自由能可以取亥姆霍兹方程表达</b>（正则系综的特征函数是亥姆霍兹自由能），于是我们推出<b>崩坏能可以被亥姆霍兹方程描述</b>，Q.E.D.</p>\n<p data-pid=\"SrCm7aeH\">崩坏3的爱因斯坦提到<b>虚数内能与实数内能可以用高维复函数进行统一表达</b>，这也是本文选取亥姆霍兹这一偏微分方程作为描述其空间中自由能的波动方程（wave equation）的原因之一。省略计算过程，不考虑实际应用的情形下（都说了我是不会去算的！），<b>亥姆霍兹方程的基本解</b>是<img src=\"https://www.zhihu.com/equation?tex=%5CPhi%5Cleft%28+x%2Cy+%5Cright%29%3A%3D%5Cfrac%7B1%7D%7B4%5Cpi%7D%5Cfrac%7Be%5E%7Bik%5Cleft%7C+x-y+%5Cright%7C%7D%7D%7B%5Cleft%7C+x-y+%5Cright%7C%7D%5Cquad+%2C%5Cquad+x%5Cne+y\" alt=\"\\Phi\\left( x,y \\right):=\\frac{1}{4\\pi}\\frac{e^{ik\\left| x-y \\right|}}{\\left| x-y \\right|}\\quad ,\\quad x\\ne y\" eeimg=\"1\"><sup data-text=\"Rainer K . Inverse acoustic and electromagnetic scattering theory[J]. Gunther Uhlmann, 2004, 93(3):págs.  67-110.\" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"7\">[7]</sup>，正是一个非常典型的复函数。接下来就是最后一个追问，<b>这个复函数的物理意义是什么？这个解对应怎样的崩坏能模型？</b>一般来说，<b>量子场论惯用格林（Green）函数来处理其中的偏微分方程</b>，从而得到所谓的<b>“两点关联函数”</b>或者叫<b>“费曼（Feynman）传播子”</b>（拉氏量中没添加相互作用项前的自由理论特殊情形），用以<b>描述粒子状态</b>（主要是从一点到另一点的过程），更普遍地，我们可以研究多点关联函数，或者引入质量谱函数对粒子的质量、寿命等信息进行更深入的分析。对于亥姆霍兹方程 <img src=\"https://www.zhihu.com/equation?tex=%28%5Cnabla%5E%7B2%7D%2B%5Ckappa%5E%7B2%7D%29A%28%5Ctextbf%7Bx%7D%29%3D0\" alt=\"(\\nabla^{2}+\\kappa^{2})A(\\textbf{x})=0\" eeimg=\"1\"> ，其格林函数 <img src=\"https://www.zhihu.com/equation?tex=G\" alt=\"G\" eeimg=\"1\"> 满足<img src=\"https://www.zhihu.com/equation?tex=%28%5Cnabla%5E2%2B%5Comega%5E2%29G%28r%29%3D%5Cdelta%28r%29\" alt=\"(\\nabla^2+\\omega^2)G(r)=\\delta(r)\" eeimg=\"1\">，考虑无界边界条件<img src=\"https://www.zhihu.com/equation?tex=G%7C_%7Br%5Cto%5Cinfty%7D%3D0\" alt=\"G|_{r\\to\\infty}=0\" eeimg=\"1\">下，通过简单的傅里叶（Fourier）变换就能求得其一种格林函数解<img src=\"https://www.zhihu.com/equation?tex=G%28r%29%3D-%5Cfrac%7B%5Ccos+%5Comega+r%7D%7B4%5Cpi+r%7D\" alt=\"G(r)=-\\frac{\\cos \\omega r}{4\\pi r}\" eeimg=\"1\">。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-e016c69a2529faa10ffe07dc3e6622a9_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"709\" data-rawheight=\"400\" data-watermark=\"original\" data-original-src=\"v2-e016c69a2529faa10ffe07dc3e6622a9\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"f0vLkHoo\">这里本来应该继续分析其数学性质，不过限于笔者的小学生水平和协力的计算数学硕士没法建模这个客观问题，这里只对亥姆霍兹方程的时间协变性作一个大致定性的简单傅里叶理解。一般地，亥姆霍兹方程的基本解是一个复函数，通过对其两点关联函数做傅里叶变换就可以得到分别来自坐标空间与动量空间的信息。考虑到我并不需要真正去算出崩坏能的作用量数据（实际上也算不了，已有的参数只有所谓的能级，还大概率不是理工人写的），只需要理解<b>这个函数的结果为什么可以“在微观尺度上预测崩坏能的波动”</b>即可，这里给出一个猜想性质的物理解释：如图所示，<b>基于著名的欧拉（Euler）公式</b><img src=\"https://www.zhihu.com/equation?tex=%5C%5B%7B%7B%5Ctext%7Be%7D%7D%5E%7B%5Ctext%7Bi%7D%5Ctheta+%7D%7D%3D%5Ccos+%5Ctheta+%2B%5Ctext%7Bi%7D%5Csin+%5Ctheta+%5C%5D\" alt=\"\\[{{\\text{e}}^{\\text{i}\\theta }}=\\cos \\theta +\\text{i}\\sin \\theta \\]\" eeimg=\"1\">，傅里叶变换作为<b>频域（左）</b>与<b>时域（右）</b>的变换在<b>复数域</b>中实际上给出了一种<b>“虚数空间”</b>向<b>“实数空间”</b>变换的方法，时域作为三角函数在物理世界刻画的是<b>与时间相关的量</b>，比如声音、热量的波动，又比如<b>崩坏能</b>——简单来说，<b>实数空间中崩坏能的时域波动体现了虚数空间里虚数内能的复频域波动，两者可以借助傅里叶变换被亥姆霍兹方程统一表达</b>，此即为米哈游设定“虚数内能就是崩坏能”的物理意义。</p>\n<h3>负熵：超空间<img src=\"https://www.zhihu.com/equation?tex=p\" alt=\"p\" eeimg=\"1\">-膜世界体与费曼树的生物猜想</h3>\n<p data-pid=\"9SUlzkYC\">在确定了<b>崩坏能的亥姆霍兹表述方法和基本傅里叶诠释</b>后，我们终于可以开始讨论这一设定对于<b>整个崩坏宇宙（Honkai Universe）世界观</b>的意义了。按照惯例，我们还是先对崩坏宇宙的<b>“世界”</b>展开讨论。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-587b9cc7ad4a6d3f6722ac00edff4203_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"520\" data-rawheight=\"397\" data-watermark=\"original\" data-original-src=\"v2-587b9cc7ad4a6d3f6722ac00edff4203\" data-watermark-src=\"v2-6364f9b98bfb74b72e4ba80076b39def\" data-private-watermark-src=\"v2-383e11e36a189495ce5303cac81ff766\"></p>\n<p data-pid=\"VEkp0kOw\">亥姆霍兹方程的两点关联函数可以帮助我们<b>计算和预测崩坏能的传播过程</b>，这或许是我们管两点关联函数叫费曼传播子的原因。当我们对两点关联函数<img src=\"https://www.zhihu.com/equation?tex=%5C%5B%5Cleft%5Clangle++%5COmega++%5Cright%7C%5C%21%5Cmathsf%7BT%7D%5C%21%5Cleft%5B+%5Cphi+%28x%29%5Cphi+%28y%29+%5Cright%5D%5C%21%5Cleft%7C+%5COmega++%5Cright%5Crangle+%5C%5D\" alt=\"\\[\\left\\langle  \\Omega  \\right|\\!\\mathsf{T}\\!\\left[ \\phi (x)\\phi (y) \\right]\\!\\left| \\Omega  \\right\\rangle \\]\" eeimg=\"1\">的相互作用项<img src=\"https://www.zhihu.com/equation?tex=%5C%5B-%7B%5Clambda+%7B%7B%5Cphi+%7D%5E%7B4%7D%7D%7D%2F%7B4%21%7D%5C%5D\" alt=\"\\[-{\\lambda {{\\phi }^{4}}}/{4!}\\]\" eeimg=\"1\">作微扰理论的级数展开，就可以利用自由理论来逐阶近似求解<img src=\"https://www.zhihu.com/equation?tex=%5C%5B%7B%7B%5Cphi+%7D%5E%7B4%7D%7D%5C%5D\" alt=\"\\[{{\\phi }^{4}}\\]\" eeimg=\"1\">理论的运动方程了。此时<b>两点关联函数的微扰展开式就是对一堆费曼传播子求和</b>，这堆<b>费曼传播子又可以画成费曼图</b>，也就是<b>通过对这堆费曼图求和就可以得到我们想要的结果</b>。在这个求和的过程中，有个常用的定量计算方法叫<b>树图阶</b>，我们可以对响应函数计算画出树图（如图所示）。我们会发现这个树图非常眼熟——崩坏3世界里有什么树？对，<b>虚数之树</b>。</p>\n<p><img src=\"https://pica.zhimg.com/v2-3f26fc21a5ce3604e0902c32eabacf3b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-3f26fc21a5ce3604e0902c32eabacf3b\" data-watermark-src=\"v2-7a9b470053caee1986abb1249c4458f8\" data-private-watermark-src=\"v2-78d3eea9a71f79f4027acfc6645e1978\"></p>\n<p data-pid=\"o2tLd_cr\">同样的主干与枝杈结构，可以说一个是极简线条一个是极致色彩。问题来了，这是一个巧合吗？<b>树的枝杈怎么表示概率？又怎么表示位于虚数之树枝丫上的平行世界？</b>这里需要引入三个概念，<b>费曼路径积分</b>、<b>世界线形式</b>和<b>多世界解释</b>。费曼路径积分我们其实已经接触过了，上文只是正则量子化的表述，两者描述的事实是一致的。我们发现高阶的圈图（费曼图）非常难算，于是物理学家们往往倾向于省略它们（这个过程被称为<b>量子修正</b>——如果你有严谨强迫症的话会非常脑溢血，但真要去算的话你会发现更加脑溢血，我愿称之为强迫症与懒癌的战争），反正只是近似嘛，结果别太离谱凑合用就行。因为<b>越高阶的图越难算的同时对结果的贡献也越小</b>，所以在求和过程中就更方便省略，这个思想其实就是费曼路径积分。在费曼路径积分的基本诠释中，我们<b>把每一张圈图或者说树的每一个分叉视为可能发生的一种过程</b>，对这些概率求和的结果就是我们熟知的<b>波函数</b><sup data-text=\"Library W P . Feynman QED lectures in New Zealand[J]. \" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"8\">[8]</sup>。至于世界线形式，你可能还记得我在上文提到了“崩坏3宇宙有可能位于M-理论超空间中的一类D-膜世界体上”，当时我没有解释世界体是什么，其实你结合M-理论的诠释想想也就能明白：<b>0-膜的点状粒子随时间演化在时空中扫出一个1维的线</b>；<b>1-膜的弦随时间演化在时空中扫出一个2维的面</b>……简单的小学数学，把空间维换成时间维，就能非常自然地导出<b>世界线、世界面和世界体</b>的概念。于是在世界线表示中，我们用对函数<img src=\"https://www.zhihu.com/equation?tex=z%5E%5Cmu%28%5Ctau%29\" alt=\"z^\\mu(\\tau)\" eeimg=\"1\">的路径积分替代费曼图，它所定义的<b>嵌入时空的一条线就被称为世界线</b>——这个方法虽然脱胎于M-理论，但后来已经能由量子化框架中更平凡的方式推出，从而成为<b>更普遍的求和方法</b>。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-7836856d388a20e88ce97bd508b783f9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"630\" data-rawheight=\"443\" data-watermark=\"original\" data-original-src=\"v2-7836856d388a20e88ce97bd508b783f9\" data-watermark-src=\"v2-d4af359238d628ad395278ea4028590c\" data-private-watermark-src=\"v2-84a117d4ba63e24ed85c9e1eb8e4262f\"></p>\n<p data-pid=\"ss00pZQk\">有了费曼路径积分和世界线形式，我们只差最后一步就能把它们统一起来，这个非凡的方法就叫做“多世界解释”。作为解释，这个理论像哲学多过像物理，实际上也的确是科学技术哲学更喜欢说——当然文学也喜欢，<b>平行世界（或称多宇宙、多世界）</b>如今已经成为科幻小说的宇宙学标配，崩坏3也正是采用了这一理论。多世界解释的基本观点是：<b>每个平行世界都与波函数的“塌缩”分支相联系</b><sup data-text=\"Mark Buchanan. See me here, see me there. Nature. Vol. 448. 5 July. 2007. p.16.\" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"9\">[9]</sup>。<b>每当世界面临一种量子选择时，它就分裂成两个不同的世界</b>——也就是说，费曼路径积分中的<b>每一张费曼图、树的每一个分叉，都在事实上是一个世界体</b>，就像德义奇（Deutsch）所说的“我们的宇宙仅仅是更大的多重宇宙的一小部分，我们宇宙中的一切——包括你、我、每一个原子以及每一个星系，在其他宇宙中都有着对应体。”于是，一切可能发生的事都在多枝状的实在的某一个枝上发生着。在<b>本体论</b>的意义上，形成了<b>树一样的、分叉的世界</b>的结构——多世界——如图所示，<b>这实际上就是崩坏3虚数之树的存在形式</b>。在M-理论中，<b>这些宇宙可以相互碰撞</b>，也正对应着<b>量子之海里的世界泡可以嫁接回虚数之树上</b>的设定。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-b4d8a556ef7acd6f69163ae25d601667_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1360\" data-rawheight=\"1760\" data-watermark=\"original\" data-original-src=\"v2-b4d8a556ef7acd6f69163ae25d601667\" data-watermark-src=\"v2-172ed06dfa8d735635eb91d28217935e\" data-private-watermark-src=\"v2-eafffe45207ab05136daf94c75661393\"></p>\n<p data-pid=\"nC4j6DtH\">于是我们终于再进一步地得到了整个崩坏3世界观更高维度的诠释——<b>虚数之树在M-理论超空间中的位置</b>。说到这里你可能已经忘了本节一开始想要论述什么了……啊，没错，是崩坏能对崩坏宇宙的意义。众所周知，<b>“崩坏是虚数之树的筛选机制，是对文明的考验”</b>。在路径积分的解释里，虚数之树之所以长成这样是因为<b>可能性越大的枝丫越“粗壮”</b>，<b>可能性越小的枝丫则越“纤细”</b>。如图所示，对于一个物理过程来说，牛顿经典路径就是可能性最大的路径，也是演化最自然的路径——事实上，对于自然演化而言，一个持续变化的有限系统，<b>其演化路径必然趋向于提供一条更容易通过的通路</b><sup data-text=\"Awad M M . The physics of life: The evolution of everything | The Physics of Life: The Evolution of Everything, Adrian Bejan, St. Martin's Press (2016), 272 pages, ISBN: 978-1250078827. - ScienceDirect[J]. Energy, 114.\" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"10\">[10]</sup>。根据热力学第二定律（俗称的<b>熵增定律</b>），<b>这条最自然的演化路径实际上就是趋向于熵最大的最快路径</b>（这被称为<b>最大熵产生原理</b>，Maximum Entropy Production Principle，即MEP）<sup data-text=\"Ziegler H . Chemical reactions and the principle of maximal rate of entropy production[J]. Zeitschrift Für Angewandte Mathematik Und Physik Zamp, 1983, 34(6):832-844.\" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"11\">[11]</sup>。有趣的是，<b>这条通路的形成过程本身却是熵减的，局部的低熵体</b>（根据崩坏3爱因斯坦的定义，<b>这种秩序体就是负熵</b>）<b>反而导致全局的熵增速更大了</b>。这意味着，<b>局部的负熵竟然是系统熵增演化的自然结果</b>，而<b>熵增原理又指导着一切热力学现象的发展</b>——包括<b>宇宙的宏观演化</b>或者<b>生物群落的进化</b>。在崩坏3中，这分别对应着<b>虚数之树的生长</b>与<b>人类文明的发展</b>。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-69558c7203cd0b94db488b160270d18f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-69558c7203cd0b94db488b160270d18f\" data-watermark-src=\"v2-634cf8457115ebc9716f60e64ce5320c\" data-private-watermark-src=\"v2-2af624e6719f0f4d1190b2d9afa36d94\"></p>\n<p data-pid=\"MD27tbQb\">在此基础上，我们可以给出这样一种猜想：<b>虚数之树作为崩坏宇宙的“世界”和人类文明作为崩坏宇宙的“生物”，两者被同一种规则所主导，我们称这个原理为热力学第二定律的熵增表述，而他们以这个原理产生的现象将其命名为“崩坏”</b>。于是虚数之树的“崩坏”就是一种让它长成这样的“筛选机制”，对应着叫做虚数内能的“崩坏能”；人类文明的“崩坏”就是一种令我们如此发展的“筛选机制”，对应着虚数内能映射过来形成的各种怪物——<b>两者最终形成的秩序体被统称为“负熵”，分别对应着通过崩坏考验的平行世界</b>（在M-理论中可以称为世界体）<b>和生物文明</b>。如图所示，“负熵”根据崩坏3达尔文的定义，正是<b>“文明成果”</b>和<b>“智慧生命”</b>的直观象征。<b>这些通过筛选的“负熵”并非对抗了熵增原理，反而恰顺应了崩坏宇宙的规律，是最大熵产生原理的自然结果。</b>现在你该意识到了，<b>崩坏宇宙是熵增原理主导的，崩坏能就“是”负熵，崩坏就“是”文明本身</b>。为什么崩坏是筛选而不是毁灭？为什么崩坏能赋予人更强大的力量？为什么崩坏最高的使徒“律者”就是人类自己？答案是成也熵增败也熵增，<b>最大熵产生原理摧毁了大部分的秩序，却产生了更小也更集中的负熵</b>，这就是崩坏3爱因斯坦那句话描述的“信息<b>高度混沌化的普通环境</b>”与“信息<b>高度秩序化的负熵环境</b>”这两者间存在的<b>“信息不对称”与崩坏能存在强烈伴生关系</b>的原因。综上所述，崩坏能的设定无关其它，恰恰就是来自人类自身：文明在虚数之树上的发展形成负熵，负熵伴生作为虚数内能（现在你该明白这词为什么叫虚数内能了，“虚数之树内”的“能量”）的崩坏能，崩坏能导致的熵增又催生更“负”的负熵——<b>这个过程就是虚数之树世界线的筛选，而人类称其为“崩坏”</b>。</p>\n<hr>\n<h2>结论</h2>\n<p data-pid=\"k3OuTBiQ\">我们利用M-理论的维数预言、紧致化规则、AdS/CFT对偶和统计理论的系综、热力学积分、亥姆霍兹方程与量子场论的费曼路径积分、两点关联函数、世界线形式以及科学技术哲学的多世界解释等理论工具，对<b>崩坏宇宙、崩坏能、崩坏三者的物理模型</b>做出了比较基础的构造和分析。</p>\n<p data-pid=\"BkrbXHaM\">正如上文所述，我们从分析结果中得到了一些<b>还算有趣的猜想</b>，并且根据这些猜想作出了简单的演绎。这其中涉及宏观演化到微观统计的系综规则、偏微分方程的解析解性质、两点关联函数的微扰级数展开以及高维崩坏能方程的具体推演等复杂问题，在试图解决它们的过程中也遇到了许多困难，所幸我们至少取得了<b>阶段性成果</b>，以下是其中<b>值得一提的结论</b>：</p>\n<ul>\n<li data-pid=\"1EZvmg3E\">崩坏宇宙的11维超空间可以被<b>M-理论</b>描述，以量子之海为主的实数空间是被米哈游定义为发散次元的4维常规时空（伪黎曼流形），以虚数之树为主的虚数空间是被米哈游定义为坍缩次元的7维蜷缩时空（紧流形），<b>存在一种实数空间/虚数空间对偶使得两者可以相互投影</b>。</li>\n<li data-pid=\"I2B35vnM\">\n<b>崩坏能等价于虚数内能，虚数内能等价于负熵，负熵等价于热力学自由能，热力学自由能</b>在正则系综假设下<b>等价于亥姆霍兹自由能</b>，即<b>存在一种崩坏能-虚数内能-负熵统一场论使得其可以被高维亥姆霍兹方程统一表达</b>。在这种统一表达下，通过简单的傅里叶变换，<b>实数空间中崩坏能的时域波动就体现了虚数空间里虚数内能的复频域波动</b>，即实数空间/虚数空间对偶或者说崩坏能/虚数内能对偶。</li>\n<li data-pid=\"e29PpbOb\">虚数之树与量子之海中的<b>平行世界和世界泡</b>是M-理论描述的<b>世界体</b>，基于<b>多世界解释的哲学世界观</b>，<b>每一个量子事件的演化分支根据其概率形成相应大小的虚数之树枝丫</b>。</li>\n<li data-pid=\"RqS4g106\">崩坏宇宙的世界演化遵循<b>热力学第二定律</b>，其<b>熵增表述</b>和<b>最大熵产生原理</b>是虚数之树和其上文明的<b>演化规则</b>，形成的<b>多世界体和文明成果被称为“负熵”</b>，该原理以其导致的负熵现象被视为<b>筛选机制</b>、以其导致的混沌环境（<b>去秩序化</b>）被命名为<b>“崩坏”</b>。</li>\n</ul>\n<p data-pid=\"JFNwhmS_\">这些假说解释了米哈游设定中留下的许多问题，诸如<b>虚数空间的崩坏能为什么不会溢出、虚数空间是如何将其中的事物投影到实数空间的、崩坏能与虚数内能与负熵的相互转化原理、量子之海的世界泡为何可以嫁接回虚数之树上</b>……其中最重要的大概就是<b>“崩坏”本身的来源、表现形式和发展趋势</b>，即经典“为什么”“是什么”“怎么样”的问题。本文对这些问题给出了初步的解答，但更多疑惑依然悬而未决——<b>崩坏能真的无所不能吗？</b>好吧或许<b>的确如此，因为崩坏能的本质就是文明自身</b>（负熵）<b>，崩坏能的上限恰恰只是人类心智的巅峰罢了</b>。</p>\n<p data-pid=\"c8xwUNd_\">由于游戏研究的局限性，更深入的研究实际上有赖于对上述那些<b>以数学问题为主的疑难</b>的进一步分析。可碍于人脉有限无法找到太多相关方向的PhD，几位相关方向的硕博也因为时间安排问题无法提供更为深入的帮助，要解决我们所遇到的问题变得十分棘手，希望这项研究能够促使崩坏与崩坏能领域的学者们展开更深入的探索。</p>\n<p data-pid=\"W_RPwbXV\">最后，有关崩坏宇宙的诠释问题，<b>本文的简单哲学理论显然不能完全覆盖米哈游世界观</b>，笔者将在另一项<b>游戏哲学、游戏宗教与文化人类学领域</b>的交叉研究中开展<b>有关“崩坏神学”的诺斯替主义研究专题</b>，讨论在本文中<b>未曾提及的“以太”“崩坏意识”“星神”</b>等人文问题。</p>\n<hr>\n<h2>致谢</h2>\n<p data-pid=\"zQYMiVhw\">感谢某不愿透露姓名的凝聚态物理博士和某不愿透露姓名的地球物理与冰川动力博士提供的协力。</p>\n<p data-pid=\"R0Lqvquu\">感谢崩学家<a href=\"http://link.zhihu.com/?target=https%3A//space.bilibili.com/372784089\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Kiraboshi绮罗星</a>和<a href=\"http://link.zhihu.com/?target=https%3A//space.bilibili.com/3095471\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">shinano信浓</a>提供的帮助。</p>\n<p data-pid=\"eoqCG6Md\">感谢你们不厌其烦地回答我这些不务正业的问题。</p>\n<hr>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/yin-fa-san-qian-xue-man-tou?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">银发三千雪满头</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/544823829/answer/2588428479?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">7 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/505703852?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">游戏《崩坏3》中有哪个片段让你百玩不厌?</a><br><a href=\"http://www.zhihu.com/question/419156757?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价游戏《崩坏3》主线第十九章剧情？</a><br>\n","link":"http://www.zhihu.com/question/544823829/answer/2588428479?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"在 AI 绘画的世界里，怎样才算一名合格的「甲方」？","date":"2022-09-15 09:30:23","description":"最近看到一则新闻，在美国科罗拉多州博览会的艺术比赛中，参赛者JasonAllen用AI绘画工具生成的作品《空间歌剧院（ThéâtreD'opéraSpatial）》获得了第一名。虽然两名评审在评奖前并 ...<a href=\"https://sspai.com/post/75629\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75629"},{"title":"城市收藏夹 | 北京精酿啤酒不完全赏味指南","date":"2022-09-15 08:31:09","description":"一个城市的魅力不全是它的历史、文化或自然风光，也有不少惊喜往往来自那些只有当地人才知晓的隐蔽深巷。而「城市收藏夹」是我们征集来自世界各地Matrix社区作者共同维护的一个长期话题，我们会邀请大家分享自 ...<a href=\"https://sspai.com/post/68914\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/68914"},{"title":"如何评价 Steam 游戏《鸡从天降》？","date":"2022-09-15 07:54:12","description":"\n<p data-pid=\"b8zqgEdp\">大家好！我是《鸡从天降》的制作人Nightwalker。我的游戏即将在9月22日在Steam上接受玩家们的考验啦！回头想想，一路走来真是个魔幻的过程，也不知道怎么就做到了这一步。</p>\n<p data-pid=\"089YtBtn\">我第一次接触游戏，是在小学时期。我接触的第一款游戏是《铁甲风暴》。在那之后，我经常和朋友分享我的游戏经历。不过其中有不少都是我编造的。直到初中，我特别喜欢在课间时间，在纸上绘画火柴人大战的场面。我也尝试用纸和笔制作一些规则粗糙的小游戏。在高中时期，我萌生了学习游戏制作技术的想法，然后在高考报志愿时选择了有游戏专业的院校。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-aa26383a8f72c7f4cbbcb4abc3cd7f37_720w.png?source=b1748391?rss\" data-caption=\"（自制桌游）\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"714\" data-watermark=\"watermark\" data-original-src=\"v2-aa26383a8f72c7f4cbbcb4abc3cd7f37\" data-watermark-src=\"v2-4192817fb638fb9b2ce1c83f67cd0d44\" data-private-watermark-src=\"v2-a26d9b17a5d363e47c6fa8a556149bb5\"></p>\n<p data-pid=\"hwiMcwBw\">大学期间，我尝试制作了一些桌面游戏。从构思设计，到亲手制作素材，再到找同学来玩，整个过程非常有趣。不过，我已经习惯了之前按部就班的、被动的学习方式，没有适应大学的学习节奏，以至于临近毕业时，我发现自己学到的东西完全不够。于是，在最后一年，我利用制作毕业设计的机会，开始自学虚幻4，试图去完成我一直以来想做的事情：制作一款属于我自己的游戏。虽然那段时间很充实，但是最后只能勉强拿出一个半成品。这成了我心中的一个遗憾。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6b1cb01305aaaf578dfddd2ae54b0285_720w.png?source=b1748391?rss\" data-caption=\"毕设作品：契约骑士\" data-size=\"normal\" data-rawwidth=\"1267\" data-rawheight=\"692\" data-watermark=\"watermark\" data-original-src=\"v2-6b1cb01305aaaf578dfddd2ae54b0285\" data-watermark-src=\"v2-4eecb62ea9c35a0751fcaae1b23df9e4\" data-private-watermark-src=\"v2-8b7ae01706822eecef7776278949fc53\"></p>\n<p data-pid=\"xqmKMlLT\">毕业之后，我和大家一样经历了一段迷茫的时期。随后，我还是决定了继续开发游戏，趁我还年轻，至少先去尝试一次。我自学了GMS2，并用它制作了一个飞行射击类的小游戏《猎鹰出击》。但是这个游戏并没有达到我的预期，只能算是一次练习。我想看看，如果我拼尽全力，能做到什么地步？于是，在2019年6月，我立项了一个横版射击游戏。这次我也是下定决心去学习真正的编程语言，而不是可视化编程工具。这款游戏就是《鸡从天降》。</p>\n<p><img src=\"https://picx.zhimg.com/v2-a7ff69d7824c55193bbaf232535fdee9_720w.png?source=b1748391?rss\" data-caption=\"猎鹰出击\" data-size=\"normal\" data-rawwidth=\"1267\" data-rawheight=\"713\" data-watermark=\"watermark\" data-original-src=\"v2-a7ff69d7824c55193bbaf232535fdee9\" data-watermark-src=\"v2-1f506c5f59c5a746a532ddc1f3c8bc8d\" data-private-watermark-src=\"v2-9fc712253cd52d1a19c9d1e0ef56fe9a\"></p>\n<p data-pid=\"fFkKEU3h\">《鸡从天降》的开发时间远远超出了我的预期。我犯了一个新手开发者都容易犯的错误，那就是项目规模的失控。在开发的初期，我并没有做完备的开发计划，因为我是一边学一边开发，我无法预见到之后会遇到什么样的困难，只能走一步看一步。一个人开发，会面临很多压力。头一年的时候，我还信心十足、充满干劲，而现在，大多时候我都感到身心俱疲。三年的时间，就像是又上了一次大学。随着我学习的深入，我发现有太多的事情我不懂，有太多的东西需要学习，我差得还很远。正应了那句老话，学到的越多，越意识到自己的无知。可以说，我现在才刚刚入门。</p>\n<p><img src=\"https://pica.zhimg.com/v2-2773c0ea7a9d7f19cf72314a6fb4501e_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1267\" data-rawheight=\"713\" data-watermark=\"watermark\" data-original-src=\"v2-2773c0ea7a9d7f19cf72314a6fb4501e\" data-watermark-src=\"v2-674c9edcebecf3482a8e85711e27d389\" data-private-watermark-src=\"v2-1459ba8f4a1cbbaa08fef20aee30088b\"></p>\n<p data-pid=\"DE8KqtiK\">总的来说，《鸡从天降》是我的又一款“练习”作品。他充满了不成熟和不完善。当我真正开始做游戏设计的时候，我才发现自己对游戏设计一窍不通。我只是尝试把我自己觉得有趣的东西塞到游戏里，然后尽量使其看起来不违和。</p>\n<p data-pid=\"8Hv63JPi\">现在，他就要被拿出来跟广大玩家见面了，希望大家可以从中获得乐趣！里面我也埋了不少彩蛋，还是挺有趣的，如果大家有兴趣可以加入我的QQ群：1031540349，我会一直在线跟大家聊游戏的。</p>\n<p data-pid=\"IcxLxKuy\">最后，感谢大家的支持啦！</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/liu-yu-xin-74-60?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">夜幕行者X</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/552636369/answer/2666979556?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">4 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/330876575?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">一个国外单机游戏关于鸡的，同一只合起来变另一个大的游戏叫什么？</a><br><a href=\"http://www.zhihu.com/question/548535769?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么有人花648买几个烧鸡角色也不愿意在steam上买十多款优质单机？</a><br>\n","link":"http://www.zhihu.com/question/552636369/answer/2666979556?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"以太坊8年挖矿时代结束：V神、中国矿业，与英伟达","date":"2022-09-15 07:48:53","description":"\n<blockquote data-pid=\"YJIWIi9a\">原文作者：Jack(<a href=\"https://link.zhihu.com/?target=https%3A//twitter.com/jack_xiong137\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">0x137</a>)，BlockBeats</blockquote>\n<h3><br></h3>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"UdZ9E4XK\">「我们显卡已经全卖了，没有恐慌。」在 BlockBeats 与多位矿工的对话中，这个观点代表了大部分以太坊矿工。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"PQ_tcDvd\">相比于去年 6 月比特币挖矿政策的突然限制、全中国比特币矿机不得不等待关机止损的被动选择，以太坊的矿工们心态明显要好得多，他们有接近一年的时间来消化即将不能挖矿这件事。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"GWe-tM1d\">加密世界最传统的挖矿，就是靠机器的算力去执行极度复杂的计算，比特币是挖矿鼻祖，以太坊也是爷爷级别。很多人听说过比特币在中国颇具规模的挖矿产业，矿场、矿机、山谷流水中机器 24 小时的轰鸣声，而以太坊也不差，比如，曾经的星火矿池是以太坊在全球最大的矿池。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"ThF6Y77m\">不过这些都不再了，曾经最高能占到全球 75% 算力的中国比特币算力在去年 6 月的政策下完全消失，以太坊也随着自身机制的完全转换抛弃了算力挖矿。理论上，随着以太坊共识机制的转型，两条全球最大的网络挖矿，在国内彻底消失。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"EGTX-Tfm\">以太坊的挖矿 8 年结束，也是中国地理上矿业的结束，人们在这片领域里，崇尚算力，对抗熵增，创造了能单季度利润 11 亿美元的超级独角兽，也能让英伟达这样的显卡巨头不得不重新规划自己的定价策略。我们想用这些文字，记录一段所有 Web3 人应该知道的历史。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>史前</h3>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"BCPjfdXS\">2010 年 5 月的一个晚上，一个饥饿的程序员用 1 万枚比特币换了两份价值 30 美元的比萨饼，比特币有了第一个计价——0.003 美元。这个看不见摸不着的协议自此有了真实的价值，随之而来的，是一轮充斥着造富神话的牛市，和加密矿业的兴起。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"A7soYtdV\">早期的比特币没有价值，参与网络的人很少，挖矿只需要一个电脑 CPU。哈尔·芬尼是当时最早的一批矿工，他在一两个星期内，用自己的电脑挖到了几千枚比特币，后来因为 CPU 过烫，电脑风扇噪音很烦才把挖矿软件关了。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"OWSJcVJX\">但 0.003 美元的这笔计价交易改变了一切。看到比特币挖矿有利可图，越来越多的人参与到网络中来，很快，各路极客们便开始编写自己的 GPU 显卡挖掘程序、组建有针对性的挖矿机器，也就是我们现在熟知的矿机。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"JiCRWX86\">很快，这股科技热潮就传到了国内的极客论坛上，引起了一小撮人的热烈讨论。大概也就是在这个时候，北京大学金融系学生吴忌寒建立了国内最早的比特币论坛巴比特，开始在论坛上谈论如何挖矿。在北航攻读集成电路设计的张楠赓则因制造了 FPGA 矿机而声名鹊起，被网友称作「南瓜张」。另外还有来自桂林的软件工程师西瓜李，研发出了红极一时的「西瓜矿机」。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"TBAiyr-3\">就在 GPU 大行其道时，美国一家叫做蝴蝶实验室（Butterfly Labs）的小公司开始对外宣称，自己要研发一种专门针对比特币挖矿的机器——ASIC。这种机器舍弃了其他所有计算机功能，专门针对比特币 SHA-256 算法，速率远远超过 GPU 矿机。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-a8f33e984dcccaa2bbe8a2c1da032f32_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2500\" data-rawheight=\"1667\" class=\"origin_image zh-lightbox-thumb\" width=\"2500\" data-original=\"https://pic3.zhimg.com/v2-a8f33e984dcccaa2bbe8a2c1da032f32_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<blockquote data-pid=\"4ATWjm01\">蝴蝶矿机，图片源自网络</blockquote>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"dlo6t56R\">ASIC 矿机的概念传到国内后，很快就有人行动了起来。除了之前提到的「南瓜张」张南庚，还有另一个矿圈传奇人物，烤猫蒋信予。烤猫 15 岁进入中国科技大学，后赴耶鲁攻读计算机博士。他在第一次听说比特币时就被它的理念给吸引，书还没读完就跑回国来做了矿工，成了继张南庚后国内第二个研制出 ASIC 矿机的人。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"d_dBrKEh\">而此时，在大洋彼岸，我们的主角 Vitalik 出现了。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"TMhRcg5Q\">在海外的各大比特币论坛中，Vitalik 的身影频繁出现，并开始写作和分享关于比特币的科普文章。因为没钱买比特币，他与一个博主达成了协议，每篇文章按 5 比特币的价格付稿费（当时比特币只有 0.8 美元）。尽管彼时的 Vitalik 同样对比特币充满兴趣，但他却没有参与到比特币挖矿的造富潮流中去，对他来说，比特币的去中心化故事更加令自己着迷。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"5qQbR_9q\">自幼天赋异禀，Vitalik 很早就进了学校的「天才少年班」，但因为语速过快，别人很难与他交流，他从小就在社交方面显得比较「笨拙」。在他 10 岁时，Vitalik 的父亲送了他一份重要的礼物——一台 IBM 电脑。自此他便打开了一个新的世界，当别的小孩还在外头玩耍时，他却沉迷于编写电脑小游戏。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"sqBO4ayu\">Vitalik 13 岁时，《魔兽世界》横空出世，和很多人一样，他成了一个网瘾少年，没日没夜地打游戏，后来还因为暴雪削弱了自己辛苦练成的满级术士，多次发邮件给暴雪工程师。在自己的多次请求被回绝后，Vitalik 很是伤心，后来他在自己的博客里写道：「那是我第一次在睡觉时哭醒」。也就是因为暴雪这次改版，让 Vitalik 意识到了中心化带来的霸权，「开发商对游戏可以说改就改，玩家却只能接受或者放弃」。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-7b79e5b932fb3b394774e19235b74c0e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"1058\" class=\"origin_image zh-lightbox-thumb\" width=\"1600\" data-original=\"https://pic3.zhimg.com/v2-7b79e5b932fb3b394774e19235b74c0e_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<blockquote data-pid=\"nWRqfXKZ\">小时候的 Vitalik 玩弄 IBM，图片源自 Vitalik 博客</blockquote>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"aiYzgH5r\">2011 年，Vitalik 的父亲在公司偶然听说了比特币，回家后立马兴奋地向自己的儿子介绍了这个新奇的东西。不久后他的父亲便卖掉了自己的软件公司，创办了一家区块链孵化器。在父亲的影响下，Vitalik 也行动了起来，同年 9 月，17 岁的 Vitalik 创办了如今知名的比特币杂志《Bitcoin Magazine》，自己做撰稿和编辑，把杂志做的越来越大，直到 15 年被 BTC Media 收购。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-b31bf7bb5fe226892cab3acba78e76ef_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3084\" data-rawheight=\"2198\" class=\"origin_image zh-lightbox-thumb\" width=\"3084\" data-original=\"https://pic4.zhimg.com/v2-b31bf7bb5fe226892cab3acba78e76ef_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<blockquote data-pid=\"wyli2hcv\">比特币杂志期刊，图片源自网络</blockquote>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"tKkYXtmW\">但虽说自己的杂志已小有名气，此时的 Vitalik 还没有进入公众的视野。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>诞生：中国矿业和以太坊</h3>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>矿业圣地</h3>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"X3myY45Z\">目光回到国内。2012 年 8 月，烤猫在深圳成立公司，并在外网上进行了 IPO，以每股 0.1 枚比特币的价格发行了 16 万股，代码为 ASICMINER。之后，他拿着众筹来的资金在深圳开了矿场，用自己的矿机挖比特币，传言 3 个月赚了 2 亿元。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-fb2b28e46f0bed6326d2ddfd62d9f408_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1077\" data-rawheight=\"1291\" class=\"origin_image zh-lightbox-thumb\" width=\"1077\" data-original=\"https://pic1.zhimg.com/v2-fb2b28e46f0bed6326d2ddfd62d9f408_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<blockquote data-pid=\"VyWc1VnH\">烤猫（左侧）为数不多的公开照片，图片源自网络</blockquote>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"S9_hRt4q\">在烤猫的 ASIC 样机公布 17 天后，张楠赓也组建了自己的阿瓦隆团队，完成首款矿机 Avalon 1 的交付。就在烤猫、张南庚迅速发展的同时，另一个竞争者也跑步进场。2013 年上半年，吴忌寒成立比特大陆，短短 13 月内就推出了 3 款算力芯片，与烤猫和张南庚形成了三足鼎立之势。入冬后，比特大陆的蚂蚁矿机 S1 更是横扫大批竞争对手，让自己的矿机代理商们赚了一大笔钱。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"9kpHbA5g\">烤猫和张南庚这边同样一机难求、生意兴隆，比特币 ASIC 矿机时代呼啸而来。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"UG7cFm2-\">巨大的财富效应，吸引无数创业者入局，生产出各式各样的比特币矿机，菊花矿机、小强矿机、银鱼矿机数不胜数。厂商们百舸争流，矿机迭代越来越快，以至出现早期预定期货矿机，到手后就过时的疯狂景象。到后来厂商们发现，自己的矿机还在生产线上，对手的客户就已经拿到了更好性能的矿机。而像比特大陆这样入局早的公司，已经开始以 P 为单位部署更大规模的算力了，从这时开始，比特币超过 70% 算力就牢牢地扎根在了中国。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"UFxUlWwb\">另一边，在极客矿工的带领下，中国的比特币市场涌入了一大批淘金者。在「中国大妈」的推动下，比特币的价格疯涨，在突破 4000 元大关后，几天内就逼近 7000 元，而在年初，比特币还只有不到 80 元。短短数月，就有约 100 亿元的资本被投入市场，中国成为世界上最热衷挖矿和交易比特币的市场。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"u2p2TiAe\">13 年，比特币创造了一个又一个财富神话，李笑来就是最典型的一个。这位早年的新东方英语教师，在 2011 年购买了 10 万枚比特币，如今成了中国「比特币首富」，不仅创立了比特基金，还成立了云币网。老猫也是另一个例子，10 年老猫在一次跟老板出差谈商务的路上，在报刊亭的报纸上看到了比特币的相关报道，改变了自己的人生轨迹。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>「99% 的国内比特币圈的人都错过了这次机会」</h3>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"kJs4XdSm\">这是老猫在后来的文章里回忆以太坊早期投资机会时写下的话。比特币发展的早期，中国资圈对机会的把握，奠定了国人在区块链世界不可撼动的地位，甚至可以说有能力左右这个行业未来的发展。但就是在这样的条件下，大部分圈内精英们还是错过了下一个加密黄金大潮流早期机会。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"1H1wfo9H\">2013 年，比特币在美国同样十分火热，Vitalik 的比特币杂志也在加州举办了展览会，这次展会让 Vitalik 体验到的，不仅仅是线上社区的活跃，还有线下人们对比特币、区块链的浓厚兴趣。还在读大学的 Vitalik 决定退学，去世界其他地方看看比特币社区和加密行业的发展。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"TzGVHGWk\">在以色列旅游的途中，Vitalik 遇到了两家数字加密公司，他们正尝试开发一套基于比特币的智能合约，用来发行自己的代币，并运行金融合约。Vitalik 一下子就来了兴趣，作为比特币 2.0 的开发者之一，他立马像正在研究比特币扩展性的 Mastercoin 社区提出了一个新的设想：为比特币开发一个智能合约平台，让用户可以方便快捷的编写脚本，基于比特币创建自己的应用程序。但因为当时比特币所有的改进技术都围绕着支付和安全属性展开，Vitalik 的这一提议很快就被否决了。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-5a6293b8757a3d260d9691531099de3b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1275\" data-rawheight=\"546\" class=\"origin_image zh-lightbox-thumb\" width=\"1275\" data-original=\"https://pic4.zhimg.com/v2-5a6293b8757a3d260d9691531099de3b_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<blockquote data-pid=\"HWngD60e\">Vitalik 的 Ultimate Scripting 提案，图片源自 Vitalik 博客</blockquote>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"bJUOefxZ\">被回绝的 Vitalik 很快就决定另起炉灶，同年 12 月，他开始分享自己撰写的一份白皮书，在里面详细阐释了比特币系统的不足，以及关于自己新项目背后的想法：一个图灵完备的、可编程的通用区块链，以智能合约为基础，使之成为去中心化应用的终极平台。在白皮书中，Vitalik 给自己的项目取了个名字，叫 Ethereum。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"8cKPjYA0\">「Ether 是以太，eum 这个词根是工厂的意思。」巨蟹对 BlockBeats 回忆道，「以太坊这个中文名字，是我最后确定的。」当年巨蟹和咕噜两位前辈合力翻译了以太坊白皮书，让中文互联网上第一次认识到了这条智能合约网络的愿景，最终巨蟹将 Ethereum 翻译确定为「以太坊」，代表着这条平台型公链的历史定位。以太坊这个翻译我们现在看起来无与伦比，但当年也有不满的声音。「要不是你翻译的这个名字，这个项目我就投了。」当时有投资人对巨蟹这么说。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"TPvPhDLa\">刚开始，Vitalik 只把这份白皮书发送给了自己最亲密的几位朋友，他们在读完后觉得很有意思，就有发给了其他社区成员。就这样一传十，十传百，Vitalik 关于以太坊的想法很快就在比特币社区里炸开了锅，不少人为这个前卫的想法兴奋不已，亲自上门找 Vitalik 交流讨论，这其中最活跃的，就是后来 Polkadot 的创始人 Gavin Wood。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"vNWoE5p5\">Gavin Wood 博士有着极强的 C++编程技能，也是第一批接触并支持 Vitalik 的人，他也成为了以太坊的联合创始人和 CTO。后来，Vitalik 在自己的博客中写道：「当时的以太坊协议完全是我自己的创作。然而，从这里开始，新的参与者开始加入。到目前为止，协议方面最突出的是 Gavin Wood，他在 2013 年 12 月通过 <a href=\"https://link.zhihu.com/?target=http%3A//about.me\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">about.me</span><span class=\"invisible\"></span></a> 消息联系了我......… 将以太坊视为构建可编程平台的微妙变化也归功于 Gavin，这起始于术语的细微变化，随着对『Web3』体系的日益重视，这种影响变得更加强烈，这种体系将 Ethereum 看作是一套去中心化技术的组成部分。」</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-c7dc2f0445759d7bf2ce0f608e469c27_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"794\" data-rawheight=\"708\" class=\"origin_image zh-lightbox-thumb\" width=\"794\" data-original=\"https://pic4.zhimg.com/v2-c7dc2f0445759d7bf2ce0f608e469c27_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<blockquote data-pid=\"b_GP55bp\">Gavin Wood 发给 Vitalik 的邮件，图片源自 Vitalik 博客</blockquote>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"QqpAPSWQ\">正好，由于对比特币 2.0 的发展做出了卓越贡献，Vitalik 获得了 Paypal 创始人、Facebook 早期投资人 Peter Thiel 的 10 万美元蒂尔奖学金。拿到钱的 Vitalik 一分钟也没有停歇，开始全职和 Gavin Wood 一起展开以太坊的开发工作。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"eHfvvDy2\">14 年 2 月，Vitalik 在比特币迈阿密大会上首次公开以太坊项目，同年 4 月，Gavin Wood 发表了以太坊黄皮书，阐述了 EVM 技术说明，成为以太坊的技术圣经。按照黄皮书中的具体说明，以太坊兼容 C++、Go、Python、Java 等 7 种编程语言，使以太坊在开发和编程上变得更加优化。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"tcuZ5jng\">而在以太坊的共识机制问题上，Vitalik 也有着很新奇的想法。他在以太坊白皮书中写道：</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"nirvUWCe\">「比特币挖矿算法（Proof of Work）容易被两种形式的中心化攻击。第一种，挖矿生态系统被专门设计的因而在比特币挖矿这一特殊任务上效率提高上千倍的 ASICs 和电脑芯片控制。这意味着比特币挖矿不再是高度去中心化的和追求平等主义的，而是需要巨额资本的有效参与。第二种，大部分比特币矿工事实上不再在本地完成区块验证；而是依赖中心化的矿池提供区块头。这个问题可以说很严重：在本文写作时，最大的两个矿池间接地控制了大约全网 50% 的算力，虽然当一个矿池或联合体尝试 51% 攻击时矿工可以转换到其它矿池这一事实减轻了问题的严重性」。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"ZVfpwp_w\">不难看出，Vitalik 写下此番话，正是因为看到了比特币挖矿，尤其是中国比特币矿业的「极端内卷」现象。在他看来，PoS 权益证明（Proof of Stake）对以太坊来说会是一个更好的选择。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"c0MySP2w\">实际上，PoS 共识机制早在 2011 年就在 BitcoinTalk 论坛上被提出，且一直是最受欢迎的 PoW 替代方案。因此在最早的以太坊白皮书中，Vitalik 就希望采用 PoS 作为以太坊的共识机制。但在与 Gavin Wood 等开发成员讨论时，以太坊团队也意识到，当下阶段的 PoS 技术尚未成熟，大家对 PoS 还没有很好的认同，不能保证以太坊的安全性。同时整个区块链行业还处于早期，没有那么多的资金参与，因此比较下来，PoW 目前仍然是保证以太坊茁壮成长的最优选。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-8b570ffee12c2a9829fc18ee25e623b4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"768\" class=\"origin_image zh-lightbox-thumb\" width=\"1024\" data-original=\"https://pic1.zhimg.com/v2-8b570ffee12c2a9829fc18ee25e623b4_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<blockquote data-pid=\"C0OtenCx\">Vitalik、Andreas M. Antonopoulos 以及 Gavin Wood 在开发以太坊，图片源自 Vitalik 博客</blockquote>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"T9kA3iYd\">几经权衡后，团队还是采用了 PoW。不过 Vitalik 并没有放弃对 PoS 的追求，他始终认为，PoW 只会使整个网络变得越来越贵、效率越来越低，因此在确定采用 PoW 作为共识机制后，Vitalik 和他的团队立刻开始着手制定以太坊未来转向 PoS 的计划。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"_p1R1UbW\">最终，该计划被分为了四个极端：<b>Frontier(新边疆)、Homestead(家园)、Metropolis(殖民大都会)、Serenity(宁静)</b>。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"khY74jPB\">Frontier 的主要目的是为引入保障网络安全的矿工，它采用了比特币社区熟悉的 PoW 模型，包含一个挖以太坊的接口和一些上传和执行合约的简单方式。Homestead 则主要是让以太坊网络安全、平稳地运行，比如调整挖矿激励、提供拥有图形界面的钱包等。Metropolis 会提供面向广大用户的、功能相对完整的用户界面，团队还预计在此次阶段发布一个 dApp 商店和几个精心设计的项目，以展示网络的能力。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"0YQGjSrO\">而 Serenity 阶段则会实现以太坊 PoW 向 PoS 的最终转换。在 15 年发布的以太坊发展四阶段介绍文章里，以太坊开发者 Vinay Gupta 的口吻充满了期待和希望，当时的以太坊团队里，没人想到以太坊的 PoS 之路将要走上足足八年，一路上还伴随着各种风霜。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>走向边疆：中国矿业初遇幼年以太坊</h3>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"TmEGnQr-\">按照既定的发展路线，Vitalik 开始了以太坊的宣传发展工作。启动和保障以太坊网络的第一步，就是吸引开发资金和矿工，而 Vitalik 想到的第一个地方，就是中国。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>以太坊出师不利碰壁</h3>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"7ZL7hvGe\">「我第一次来中国是 2014 年 5 月。那时候，我只看到了矿工和交易平台。他们已经很强，Huobi 和 OKcoin 已经有 70 多人，但是除了这几个公司以外没有很多有趣的东西」。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"XTLujJKu\">这是 Vitalik 对 14 年中国加密产业最深刻的影响，为了给以太坊的预售做宣传，Vitalik 来到了全球最大的加密市场。第一站就首先就拜访了 Huobi 的杜均，向他介绍以太坊的目标和理念，希望得到杜均的资助，却被当作「骗子」扫地出门。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"eJ9D0qfN\">后来在上海的区块链社区活动上，Vitalik 又以「第二代数字加密货币的机会」的主题，给坐在场下的达鸿飞、初夏虎、徐义吉等大佬做了一个多小时的演讲。结果大佬们一半听得昏昏欲睡，另一半忙着操盘，对眼前 19 岁的青年「小 V」给出了大体相同的结论：这小屁孩是骗子，就是来圈钱的。在拍合照时，Vitalik 不仅被挤到了最后排，脸还被遮了一半。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-c244a5aab36c7dae95f6fd3ce6bd3ceb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3110\" data-rawheight=\"2074\" class=\"origin_image zh-lightbox-thumb\" width=\"3110\" data-original=\"https://pic4.zhimg.com/v2-c244a5aab36c7dae95f6fd3ce6bd3ceb_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<blockquote data-pid=\"_KHZYixX\">活动与会者合照，Vitalik 在右后的角落里，图片源自网络</blockquote>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"fDTrM-Z1\">Vitalik 碰到这样的冷遇并不意外，14 年的中国加密市场正经历着急剧变化，没人有空搭理这个不知从哪里冒出来的青年。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"mRXVfbeF\">这一年年初，好比特币创始人吴刚和比特大陆的吴忌寒打了一个 10 枚比特币的对赌：年底比特币算力能不能突破 1000P？吴忌寒认为不能，吴刚认为可以。当时，全球比特币算力刚刚突破 P 级，要想破千并不现实。但经过一整年的价格飞涨，圈内的所有人都信心爆棚，资金人才纷纷跑步进场，矿机生意持续升温，似乎没有任何事情能阻拦比特币的脚步。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"miBuvP2f\">5 月，宝二爷郭宏才组织的比特币矿机大会在深圳召开，张楠赓、李林、徐明星、谢坚等圈内大佬悉数到场，大会气氛非常热闹，整个市场一片生机勃勃的景象。此时的中国加密市场，主流声音是比特币挖矿和交易，对初来乍到的以太坊完全没有认知，很多人甚至怀疑以太坊是一个杭州人搞的项目，Vitalik 则是他们雇来的演员。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-94985f1c27a2d8c6ecd476f530ed7612_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"522\" data-rawheight=\"265\" class=\"origin_image zh-lightbox-thumb\" width=\"522\" data-original=\"https://pic3.zhimg.com/v2-94985f1c27a2d8c6ecd476f530ed7612_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<blockquote data-pid=\"UnYQcY1D\">14 年比特币矿机大会，宝二爷组的「汉子局」，图片源自网络</blockquote>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"EXDQcSRB\">14 年 7 月，在中国四处碰壁的 Vitalik 将团队迁到了后来被称为「加密硅谷」的瑞士楚格，并在这里创建了以太坊基金会，专门负责以太坊的开发和管理。因为没有钱来运营这个项目，团队甚至还在大门上贴纸条，写着「欢迎大家赞助一杯咖啡」。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"KqH621iu\">为了获取开发资金，团队很快进行了以太坊 IC0 预售，1 枚比特币可以兑换 2000 枚以太坊。整个过程维持了 42 天，售出以太坊总量超 6,000 万枚，共募集 31,531 个比特币，按当时的价格约折合 1843 万美元，超出了所有人的意料。尽管销售所得资金很快就被用于偿还日益增加的法律债务，以及给开发者们发放薪酬，但这次募资仍在国内造成了不小的轰动，大家这才开始问：以太坊究竟是什么来头？也才有了刚才老猫「99% 的国内比特币圈的人都错过了这次机会」的惋惜。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"oPydASjm\">与此同时，加密市场正在发生着微妙的转变。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>消极的市场</h3>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"qMBNLeA_\">2013 年底，央行发布《关于防范比特币风险和郁金香泡沫影响的通知》，整个市场的风向开始发生转变。在经历疯狂暴涨后，加密产业迎来了首个寒冬洗礼，一场长达 3 年的熊市，把比特币从 8000 元的天价拉回了 900 元。因价格暴跌，许多人信仰崩塌，曾经如潮水般涌入的人群也开始迅速退场，在一片哀嚎声中，中国比特币市场开始经历天翻地覆的变化。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"iXeGOIwy\">随着币价下跌，矿工购买矿机的需求急剧下降，迅速萎缩的市场让矿机厂商们难以为继，银鱼矿机、莱特币矿机纷纷消失，原本利润丰厚的矿机生意，忽然间变成了血流成河、尸横遍野的屠杀场。一度风光无限的小强矿机，也因持续亏损在 14 年下半年关停了矿场，按创始人谢坚的说法，「年初投入的 600 万，现在只剩下 200 万」。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"lYe1GgLJ\">交易平台这边也不好看，为了在熊市留住投资者，各家纷纷开始寻找现货交易以外的潜在机会。13 年下半年，团购网站人人折的李林创立了 Huobi，徐明星则离开了豆丁网 CTO 的职位，创立了 OKex 的前身 OKCoin。第二年，旅游卫视主持人何一和彭博期货研究员赵长鹏（CZ）加盟 OKCoin，组成了闻名一时的「币圈铁三角」。后面的事大家应该都知道了。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-e5dea9061d8b1a2d38f7ab45be89ec3f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1399\" data-rawheight=\"856\" class=\"origin_image zh-lightbox-thumb\" width=\"1399\" data-original=\"https://pic4.zhimg.com/v2-e5dea9061d8b1a2d38f7ab45be89ec3f_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<blockquote data-pid=\"zqWFhf_W\">OKex 创始人徐明星和两位Binance创始人何一、CZ，图片源自网络</blockquote>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"oZgjzs3R\">当时，为了留住用户，2014 年顺利完成融资的 OKCoin 和 Huobi 网接连宣布推出比特币期货服务、点对点借贷等金融杠杆工具，以期实现新的增长。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"tzWuRa9C\">这些新玩法很快就奏了效。在此之前，比特币市场没有杠杆交易，价格走势的主导权也主要掌握在矿机厂商手里。新的金融杠杆工具出现后，立马就吸引了大批投机资金重新入场寻求套利机会，比特币的价格也逐渐脱离厂商的控制，开始由市场定价。这也直接威胁了矿机厂商的生存空间。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"nzu25ZKf\">到了下半年，比特币的价格还在一路下滑，突破新低，矿机间的竞争更是进入了白热化阶段。在生存空间缩紧、矿机售卖陷入僵局时，比特大陆和烤猫纷纷做起了云算力生意。9 月初，比特大陆率先宣布推出云算力服务平台「算力巢」，仅 30 天内用户注册量就突破了 1 万人。而小强矿机的谢坚则与烤猫达成合作，一起推云算力项目 AMHash。但平台不久后就爆出算力造假门，随后烤猫人间蒸发，投资人血本无归，AMHash 也成了「传销骗局」。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"RsYyZUy4\">最终，吴忌寒赢下了这个 10 枚比特币的对赌，只是此时他的心情与年初相比，早已是天上地下。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>以太坊创世区块被挖出</h3>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"BLANdLEw\">以太坊这边，开发仍然在持续。14 年底，第一次以太坊开发者大会 Devcon-0 在柏林举办，这次大会汇集了来自世界各地的以太坊开发者，大家讨论了各种以太坊技术的主题以及一些能使以太坊更加可靠、安全的计划。次年 5 月，以太坊的最后一个测试网络 Olympic 上线，为了更好地完成网络测试，团队开展了「Vgrants」计划，凡是参与测试网络的人都会获得以太坊奖励。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"5XeR6QMy\">经过近两个月的严格测试，<b>在 2015 年 7 月 30 日，以太坊第一阶段版本 Frontier 发布，第一个以太坊区块被开采，「无限机器」正式开始运转。</b></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"KTld8NzI\">初级版本的以太坊网络并不安全，V 开始各地游走演说，邀请以太坊爱好者贡献代码，邀请矿工们加入以太坊网络，增加网络安全的同时赚取以太币。在 V 神的努力下，以太坊社区开始变得活跃起来。早期的以太坊非常容易挖到，一些网吧的老板用闲置的设备挖以太坊，其中有人因此积累了几万枚 ETH。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-c5418e9e741a7e7123588ef9f46b7ffd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"416\" class=\"origin_image zh-lightbox-thumb\" width=\"700\" data-original=\"https://pic2.zhimg.com/v2-c5418e9e741a7e7123588ef9f46b7ffd_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<blockquote data-pid=\"gV48H6-P\">Vitalik 与申屠青春等早期中国开发者吃饭，图片源自网络</blockquote>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"sjRAX-CS\">尽管现在来看，Frontier 顶多算是一个公测版本，但它在引入矿工方面的表现大大超出了人们的期望。因为激励力度大，全球各地矿工开始进入以太坊网络挖矿，这其中就包括不少国内的比特币矿工，他们提高了以太坊网络的算力，也提升了网络抗击攻击的能力。Frontier 的发布，是以太坊开发史上的第一个里程碑事件。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"4Lc-MFCB\">但受到比特币市场的牵连，以太坊的价格在很长一段时间里同样非常低迷，一些投资者迟迟见不到回报，甚至对以太坊产生了质疑。当时，万维链创始人吕旭军反着主流共识，认为以太坊是区块链技术的未来，还把手里的比特币都投给了以太坊，后来他和人说：「我很多朋友都是比特币的忠实拥趸，他们都笑话我，我那个时候都不敢说自己投了以太坊。」</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"bTjF-i2H\">价格低迷，被影响的不止是投资者，还有以太坊开发团队本身。眼看基金会就快没钱了，Vitalik 再次来到中国试试自己的运气。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"SF90RfPi\">此时国内，无论是矿圈还是币圈皆是自顾不暇、哀嚎遍野，Vitalik 在中国的融资还是遇到了极大的困难。但一次偶然，让 Vitalik 遇到了万向区块链实验室 CEO、分布式资本合伙人肖风，作为最早一批接纳区块链技术的投资者，肖风立即购买了当时价值 50 万美元的以太坊。Vitalik 在后来的一次采访中说到：「当时万向的 50 万美元，成了以太坊的生命线」。肖风送来的及时雨，让 Vitalik 有了足够的资金来支付开发人员的费用，并继续发展以太坊的平台。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"j45zBnph\">除了 50 万美元的助资，肖风还凭借自己在投资和政治领域的巨大影响力，给 Vitalik 和以太坊带来了更广的投资和社区人脉，并帮助他们与中国监管机构沟通。在他的推动下，分布式资本合伙人沈波请来了巨蟹和咕噜翻译以太坊白皮书。而比特币小强矿机创始人谢坚也在万向影响下，于杭州成立了中国最大、最早的以太坊社区 Ethfan，并为早期的以太坊贡献了大量的算力。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-6a02169f46a17e402efdb0772fee1ea2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1440\" data-original=\"https://pic3.zhimg.com/v2-6a02169f46a17e402efdb0772fee1ea2_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<blockquote data-pid=\"cVJw79Bv\">2019 年 10 月，Dragonfly 主办加密峰会，Dragonfly 创始人冯波、美团 CEO 王兴、Vitalik 以及万向肖风，图片源自网络</blockquote>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"6g-kVl5Y\">2015 年 11 月 9 日—11 月 13 日，以太坊举行的第一届 DEVCON-1 开发者大会在伦敦举行，有一百多个演讲者，吸引了全世界三百多名开发者参加。这次会议让以太坊真正受益的是，软银、IBM 和微软等大公司出席了会议。是区块链技术成为主流的时刻，以太坊代表区块链前沿技术。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>稳固家园，开荒拓土：社区分裂、IC0 浪潮、英伟达入场</h3>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"ILkm3LHE\">2015 年下半年，国内一些交易平台开始上线以太坊，其中李笑来的云币上的最早。当时云币的负责人老猫打电话给李笑来，劝他多买入点以太坊，李笑来的答复却是不买。在他眼里，以太坊过于复杂，而复杂的系统意味着它不够安全，因此觉得以太坊不符合自己的投资逻辑。当时的以太坊，总市值尚不足 7000 万美元，但在短短 3 个月过后，它的市值就达到 11 亿美元。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>以太坊过山车</h3>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"UmrQ9NE2\">进入 2016 年后，以太坊逐渐迎来了自己的春天。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"r6nEb7mB\">16 年 3 月 14 日圆周率节当天，以太坊成功进入了第二个阶段 Homestead。与 Frontier 相比，Homestead 没有明显的技术性里程碑，而是在网络运行的稳定性、安全性和可用性上做出了改进，Homestead 版本的发布也意味着以太坊真正成为了一个安全、可靠的网络。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"8Bycpmnr\">同时在此阶段，以太坊开始提供拥有图形界面的钱包，易用性得到极大改善，以太坊不再是开发者的专属，普通人也可以方便地体验和使用以太坊。另外，为了防止未来矿工联合抵制以太坊从 PoW 转向 PoS 升级，团队在挖矿难度设计中引入了往后多次被人们提及的难度炸弹（Difficulty Bomb）。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"Zrb1KVL5\">在生态初步稳健后，Vitalik 开始追寻自己早在白皮书中就希望实现的去中心化组织（DAO）梦想。5 月，历史上第一个 DAO 组织——The DAO 启动了公开募资，在为期 28 天的众筹中募集破纪录的 1.5 亿美元，使以太坊再次成为圈内媒体的焦点。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"J1aMcBFg\">或许是树大招风，刚刚稳固了新家园的以太坊马上迎来了当头一棒。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"3ci8udOU\">6 月 16 日，The DAO 遭到攻击，黑客利用合约代码漏洞，让系统重复拨款，盗取了 370 万多个以太坊，金额约 6000 万美元。消息传出，以太坊价格应声下跌，直接导致市值蒸发了 5 亿美元。多亏合约尚未允许用户提取自己以太坊，为团队赢得了制定应对措施的时间。经过简单的讨论，团队给出了两种方案：关闭 The DAO，包括黑客在内的所有人承担此次损失，或者通过分叉回滚区块，补偿 DAO 的投资人。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"KPE5uAaX\">作为以太坊的领头人物，Vitalik 旗帜鲜明的倾向了后一种方案，但也引发了社区激烈的争吵，以太坊社区出现了严重的分裂。反对分叉的人坚持区块链不容更改的的原则，认为分叉会杀死以太坊，因为只要这次分叉通过了，那么以后随时都有可能出现新的分叉。而支持硬分叉的人则认为，黑客的行为给很多人造成了伤害，让他们得逞，这在道义上是说不过去的。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"xwmQVzxk\">Vitalik 最终决定让大家自由选择，坚持区块链不容更改的人们留下来维护和管理原来的以太坊，认同自己的人则接受分叉并修改当前以太坊的安全漏洞。几天后，硬分叉方案公布，超过 85% 的矿工算力支持硬分叉。7 月 20 日，硬分叉成功，以太坊网络和社区被一分为二，有了现在的 Ethereum（ETH）和 Ethereum Classic（ETC）。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"j6esobBi\">后来的事实证明，分叉并没有杀死以太坊，完成分叉后以太坊社区重整旗鼓，很快就回到了正轨。但质疑分叉的人们也没有错，这次分叉的确在以太坊的发展之路上买下了另一枚定时炸弹。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"DTGVZaIJ\">16 年 9 月 19 日，重新振作的以太坊在上海举办了第三次开发者大会 DEVCON-2。此次大会由微软直接赞助，主要讨论了 3 月份网络的一些升级和更新，包括可以让开发者在以太坊上自由创建 dApp 的智能合约，以及后来影响深远的新代币标准——ERC20。ERC20 的到来，为区块链团队发币融资提供了极大地便利，而它所蕴含的巨大潜力，远远超出了这次与会开发者们的预期。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-d81994642b9d222e034ab610164d580d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"638\" data-rawheight=\"383\" class=\"origin_image zh-lightbox-thumb\" width=\"638\" data-original=\"https://pic2.zhimg.com/v2-d81994642b9d222e034ab610164d580d_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<blockquote data-pid=\"NblCKYGH\">DEVCON-2 宣传海报，图片源自网络</blockquote>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>IC0 之王，成了英伟达的创收功臣</h3>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"5VvbRYBB\">2017 年 5 月 19 日，以太坊价格首次突破 100 美元大关，新一轮加密牛市一触即发。在这轮牛市中，最令人影响深刻的，就是 IC0 的盛行。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"DAhKspdV\">IC0（Initial Coin Offering）与股票市场的 IPO（Initial Price Offering）相对应，是早年区块链项目融资的主要方式。在 ERC-20 标准的助力下，以太坊上的 IC0 呈现出雨后春笋之势，为加密市场带来了大量的场外资金。在 16 年，以太坊上的 IC0 项目只有数十个，总融资金额不过几万多美元，到了 17 年后，不管是 IC0 的数量还是融资金额都翻了个十几倍。数以百计的区块链项目都借助以太坊的平台来进行融资，在市值排名前 100 的加密项目中，94% 都是建立在以太坊之上的。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"r71wcF5u\">狂潮中，以太坊的价格一涨再涨，5 月底，以太坊上线 Huobi 等国内一线交易平台，价格势如破竹般节节攀升，到了年底，市场上 IC0 融资总额超过了 60 亿美元，随之而来的各种乱象一发不可收拾。不仅区块链项目发币，就连传统传统互联网以及各种上市公司也要发，发币不仅成了机构融资的渠道，还成了传销骗子的圈钱机器。牛市期间，在媒体刊发一篇介绍 IC0 项目的软文价格达到了 5 万甚至是 10 万，包装 IC0、运营社区、代理投资成了投机者们的财富密码。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"1Et86DkG\">尽管如此，IC0 依旧让很多人对智能合约有了更深入的认知，以太坊的用户也有了爆发式的增长，地址数量从年初的 100 万增长至年底的 1800 万。Vitalik 也从「小 V」晋升成了「V 神」，常常受邀参加国内的各类会议、圆桌以及 AMA。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-3f2e6562511fae812379349b8de131a2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1344\" data-rawheight=\"897\" class=\"origin_image zh-lightbox-thumb\" width=\"1344\" data-original=\"https://pic3.zhimg.com/v2-3f2e6562511fae812379349b8de131a2_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<blockquote data-pid=\"WG1IOf_Y\">Vitalik 在中文社区的活动上发表演讲，图片源自网络</blockquote>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"zS-PJCMq\">同时，以太坊在国内的忠实群体也在不断壮大。除了 Ethfans，ECN、以太坊最大矿池之一 Sparkpool，以及当时国内流行的 imToken 钱包都在持续地为以太坊作出贡献。他们当中有矿工、有交易员，还有早期的「DeFi 传教士」，他们会定期翻译 Vitalik 的文章并在中文社区传播，举办研究以太坊最新主题的线下聚会，甚至帮 Vitalik 解决在微信上的技术问题。又一次，中国社区挑起了以太坊生态发展的大梁，为它提供了安全的算力和充裕的资金。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"MdQZAHlc\">而大洋彼岸，对区块链的关注和热情同样高涨，比特币、以太坊、IC0 成了财经媒体每日必报的焦点，生怕自己错过新的内容和潮流。不过在离加密赛场不远的硅谷，媒体的聚光灯却忽视一个看似与区块链毫不沾边的重要人物，他也在这轮牛市里尝到了以太坊起飞的甜头。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"F8OaIEPq\">从 2016 到 2018 年，英伟达的市值从 140 亿美元增长到了 1750 亿美元，这个硅谷巨头的价值在两年时间里翻了十倍之多，惊掉了所有投资者的下巴。仅 2017 一年，英伟达的营业收入就达到了 97.14 亿美元，环比增长 40.58%。作为 CEO，黄仁勋对公司的表现十分满意，为此还在自己左臂上搞了一个新的纹身。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"YOkmm2Jh\">乍一看上边的数据，你可能并不会把它与 17 年的以太坊甚至是加密市场扯上关系，但其实仔细观察后，我们就能发现二者之间异常紧密的联系。不夸张地说，17 年的加密牛市，为英伟达带来了相当丰厚可观的回报。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-67ed5163ad6857908930fd91f29af0c0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"603\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-67ed5163ad6857908930fd91f29af0c0_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<blockquote data-pid=\"zCeM4dUZ\">18 年英伟达 CEO 黄仁勋在显卡发布会上展示自己新的「英伟达纹身」，图片源自网络</blockquote>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"0hw9jIo6\">在这里我们需要先搞明白，以太坊挖矿和比特币挖矿的不同。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"ELE5PgeG\">比特币采用的是 SHA-256 加密算法，在挖矿的时候，比拼的是算力。因此为了提高算力，普通的 CPU 和 GPU 并不能满足矿工的竞争需求，专业化程度更高的 ASIC 矿机很快就统治了矿机市场。Vitalik 在看到比特币挖矿的这种恶性竞争后，认为以太坊的 PoW 机制应该允许普通用户通过自己的台式或笔记本电脑就可以进行一定量的挖矿活动，以去除了对中心化矿池的需要。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"LKLBeLYQ\">因此以太坊采用的是 Ethash 加密算法，在挖矿的过程中，需要读取内存并存储 DAG 文件。由于计算机每次读取内存的带宽都是有限的，而现有的设备又很难在这个技术上有突破，所以无论矿工怎么提高算力，挖矿效率都不会得到显著提升，这也就让以太坊的 PoW 机制有了「抗 ASIC 性」。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"GTW8cp4B\">加密算法的不同，使得比特币和以太坊在挖矿设备和算力规模上都存在着很大的差异。比特币的 ASIC 矿机基本被几家厂商垄断，矿工只能从市场上购买，而虽说以太坊的显卡矿机也有专门的厂商生产，但大部分仍然是矿工根据自己的需求进行 DIY，从市场上购买配件然后组装。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"nAxRGV8W\">也就是说，这个<b>全球最大的去中心化开发网络，给黄仁勋的显卡销售创造了一个无比巨大的市场。</b></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"y72NDMkx\">作为显卡生产的绝对龙头，英伟达是不会错过这块又大又甜的蛋糕的。2017 年，见以太坊交易和挖矿日渐活跃，英伟达是立马针对以太坊挖矿，推出了取消输出接口的 GTX 1060 6GB 显卡，首批供货就是 30 万块，后来甚至停掉了正常带输出显卡的市场供给。年底又有针对性的优化了显卡的性能，推出了 P106、P104 等一系列算力更强、价格更低的专业「矿卡」，这个系列的显卡连 IO 输出接口都没有，用户甚至没法用它来打游戏。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"VP1mPira\">为了抢占挖矿市场的芯片供给，英伟达甚至不惜与自己的头号死敌 AMD 展开密切合作，加速「挖矿产品」的研发与生产。然而，与生产线上的风骚操作相反，英伟达在财务和公关上却极力摆开与以太坊的距离。2017 年 97 亿美元的巨额营收中，55 亿来自游戏营销，占比超 50%。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"R2AE-r2E\">但事实上，游戏玩家所贡献的收入占比在 16 年就已经开始势微。在 Steam 2022 年 8 月最新一期硬件报告中显示，这张诞生于 2016 年的显卡 GTX 1060 依旧是平台使用人数最多的显卡，占平台总用户的 6.6%。换句话说，在自己的财报中，英伟达把矿工购买显卡带来的收入，大手一挥统统进了游戏营销中去。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-1ac1f20bb8693e9d908ef583ca786bd9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1870\" data-rawheight=\"636\" class=\"origin_image zh-lightbox-thumb\" width=\"1870\" data-original=\"https://pic2.zhimg.com/v2-1ac1f20bb8693e9d908ef583ca786bd9_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<blockquote data-pid=\"A5Ua_4Wr\">Steam 2022 年 6 月硬件和软件调查，图片源自 Steam</blockquote>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"8E3_HwGx\">但聪明的人还是揭穿了黄仁勋的小把戏。17 至 18 年财报公布后不久，Susquehanna 就以虚拟货币相关收入占营收超 10% 为由，下调了英伟达的股价预期。2022 年 5 月，SEC 更是发表声明，称英伟达就加密挖矿对公司游戏业务显卡销售影响上的信息披露不充分，起诉后与英伟达和解。当然，这些都是后话了。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"b724DnKZ\">直到 2018 年，英伟达 CFO 才公开披露了自己依靠销售「矿卡」赚钱的事实，而黄仁勋则是在言语中，透露出了自己对挖矿行业的「兴趣」：「英伟达实际上对用户购买 GPU 的用途有所把控...... 我们必须留意它（用户买显卡来挖矿）的存在，并保证充足的库存来应对」。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"aNFfiGoN\">但好景不长，英伟达入场不久后，加密市场就迎来了又一场寒冬。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"N6oUlrt7\">2018 年 1 月 14 日，加密货币市值到达峰值，以太坊价格达到 1,418 美元，日交易量近百亿美元，市值从 17 年初的 11 亿美元增长至 1350 亿美元。但在随后不久的一个清晨，整个市场开始骤然下跌，并从此一蹶不振。到 18 年 4 月，以太坊的价格已经跌落 400 美元。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"_46Afr9e\">又一次，矿工们纷纷抛售显卡、跑步离场，市面上的显卡供过于求，导致库存积压，价格远低于正常售价。此时，专为矿工打造的 P104 显卡已经无人购买，英伟达不得不把芯片转向消费者市场，产品线和下一代产品的定价体系受到了严重冲击。公司第四季度财报的收入更是瀑布式跳水，股价更是不堪入目，一度跌至 160 美元。英伟达首次尝到了加密寒冬的苦头。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>PoW 问题初显，网络升级屡次延迟</h3>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"54LjH_uO\">和仍然有收入的英伟达相比，以太坊的情况显得更加惨烈。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"E6s0ykwA\">熊市下，以太坊的价格最低跌到了 80 美元，在市值排名上甚至一度低于了 XRP，市场上充斥着质疑的声音。在 2017 年牛市期间，以太坊上出现了一款曾经引爆市场的 dApp 游戏 CryptoKitties，尽管只有一些简单的操作，但这款游戏却挤爆了以太坊网络，使得其他应用基本无法使用，Gas 费用也变得异常离谱。此后，针对以太坊扩容的讨论一下多了起来，但团队计划的君士坦丁堡升级却一再延迟。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"eGwkaZkr\">君士坦丁堡升级是以太坊进入第三阶段 Metropolis 的关键一步。为了让以太坊成功进入 Metropolis 阶段，团队设计了两步走的方案，通过拜占庭和君士坦丁堡两次硬分叉实现。第一步的拜占庭计划在 2017 年 10 月 16 日成功完成分叉，它主要调整了区块难度评估公式、减少了挖矿奖励，并将引爆「难度炸弹」的事件推迟了 1 年。而第二部君士坦丁堡分叉本该于 18 年初完成，但却由于市场等多种因素一直未能实施。面对这种情况，Vitalik 也被人指责为是不专心搞开发的以太坊「推销者」。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"-umbk-Sd\">2018 年 9 月，比特币核心开发者 Jeremy Rubin 在 TechCrunch 上发表了名为《ETH 的崩溃无法避免》的文章，称以太坊无法大量承载去中心化应用，即便以太坊网络存活下来也没有任何价值。此番言立刻论造成以太坊价格进一步下挫，许多以太坊上的项目甚至开始向 EOS、波场等公链生态转移。在价格影响下，以太坊的全网算力也开始收缩，下跌近 20％。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"zqEzIEcI\">Jeremy 的这篇文章，也给以太坊社区敲响了警钟。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"o17wf1ay\">在回应 Jeremy 的 Reddit 博客中，Vitalik 承认了以太坊的问题所在，他写道：「如果以太坊不改变，Jeremy Rubin 的言论就可能成真」。紧接着，12 月 Vitalik 又在推特上呼吁，未来采用 PoS 分片技术的区块链「效率将提高数千倍」。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-33d00d5b879c82242d26570b98a1b826_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"547\" data-rawheight=\"310\" class=\"origin_image zh-lightbox-thumb\" width=\"547\" data-original=\"https://pic3.zhimg.com/v2-33d00d5b879c82242d26570b98a1b826_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<blockquote data-pid=\"Hv1PKPCY\">Vitalik 回复 Jeremy 的 Reddit 博客，图片源自网络</blockquote>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"r4N3ZNkC\">最终，在 2018 年底的核心开发者会议上，以太坊开发团队成员就分叉的激活时间达成了一致。君士坦丁堡硬分叉在几经推迟之后，于 2019 年 2 月 28 日，在区块高度达到 7,280,000 时被成功触发。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"WTFZ3JLc\">君士坦丁堡升级启动了以太坊的「冰河时代」，在以太坊网络创建区块的难度开始不停地提升，直至减慢到完全停止。同时团队再次减少了挖矿的区块奖励，并将「难度炸弹」向后推迟了 500 万个区块。这次升级的重中之重在于区块奖励的减少。随着挖矿收益的减少，矿机厂商和矿工们的机会成本增加，团队希望矿工在以太坊上挖矿的性价比会逐渐低于其他币种，以此迫使以太坊的矿工转而去挖 ETC 等 PoW 公链。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"AHD5jSEa\">君士坦丁堡升级成功后，团队不再停歇，接连制定了进入 Serenity，即我们今天以太坊 2.0 的方案，还是和此前一样，将分「伊斯坦布尔」（该步骤同样被囊括在 Metropolis 三阶段中）和「以太坊 1.X」两步走。伊斯坦布尔硬分叉于 2019 年 12 月 8 日成功完成，这次升级的关键词是成本和速度，降低了 Gas 成本，并将 TPS 上限提升至 3000。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"tm1W-nlB\">伊斯坦布尔的升级成功，意味着 Metropolis「大都会第三阶段」顺利实施，以太坊向 2.0 的转变迈出了重要一步。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>宁静前的躁动：王者归来，接下来是什么？</h3>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"rh5OI04K\">以太坊进入 2020 年后的故事我们就非常熟悉了。DeFi Summer 的到来掀起了加密市场又一轮强劲的牛市，数月内以太坊上的 DeFi 总锁仓量就达到了 305 亿美金，出现了借贷、DEX、保险、理财等各种协议和应用。随着 NBA Top Shot、BAYC 等 NFT 的爆火，以太坊的交易体量不断膨胀。紧跟着是 Layer 2、DAO 等多个赛道的轮番增长。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"2TgMAch0\">以太坊自己也迎来了新的拓展机会。2020 年 11 月 4 日，以太坊 2.0 存款合约正式部署，随后 Lido 等一众以太坊 2.0 流动性质押协议，为以太坊 PoS 网络吸引了大量质押资产。2021 年 8 月，以太坊伦敦升级完成，包括 EIP-1559 等 5 个协议，进一步优化和改进了以太坊网络的参与体验和机制，再次削弱了矿工的收益，为以太坊迈进 2.0 做好了准备。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"wxP1rUDP\">然而有意思的是，越在「靠近宁静」之际，社区躁动的声音却越大。毫无疑问，躁动仍然是从显卡挖矿市场开始。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>再次出师的英伟达</h3>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"T4GKqPjS\">伴随新一轮牛市的开启，以太坊也迎来了第二次矿潮，英伟达再次出动，顶着全球缺芯潮和玩家需求的压力，为显卡矿工们开发了 CMP 系列矿卡。为了获得最高挖矿效率，CMP 直接舍弃了图形处理功能。后来迫于压力，才宣布新推出的 GeForce RTX 30 系列显卡会限制挖矿性能，使得显卡价格再度高涨。更有意思的是，尽管新推出的 Lite Hash Rate 显卡限制了挖矿性能，英伟达却在 2021 年 3 月份放出了一款开发者驱动程序，不到一年时间，各个版本的 LHR 显卡都被不同程度地破解。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-d1960b6307192ba165985699ee07ff91_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2048\" data-rawheight=\"1152\" class=\"origin_image zh-lightbox-thumb\" width=\"2048\" data-original=\"https://pic2.zhimg.com/v2-d1960b6307192ba165985699ee07ff91_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<blockquote data-pid=\"pR9P03sm\">黄仁勋展示 RTX 30 系显卡，图片源自网络</blockquote>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"o5JbI3G8\">此时的以太坊价格已经逼近 3000 美元，PoS 合并在上涨的价格面前不再被看作是潜在的威胁。黄仁勋成了加密货币的全力倡导者，公开对外表示自己对市场热潮和区块链价值的长期看好。矿工们也买账，显卡一抢而空，据知情人透露，一些大的矿场甚至是直接向英伟达提货，都不走一二级市场。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"UJ1Pb1Tu\">一时间，显卡价格上涨成了央视、自媒体反复报道的内容。据机构报告，2021 年，依靠向矿工出售显卡，英伟达大约创造了 30 亿美元的收入。同年，英伟达的市值突破了 5000 亿美元，次年 2 月的财年财报里，公司的全年收入更是创下了 269 亿美元的纪录，同比增长 61%，实现连续 7 个季度的营收上涨。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"hfk2pzA3\">但到了五月，形势发生了急剧的变化。5 月 19 日，加密市场再度跳水，市场开始转熊。本月，英伟达发布了最新财年的第一季度财报，利润却环比下降 46%，8 月发布的第二季度财报中，挖矿芯片 CMP 相关业务营收更是同比下降 66%。2022 年的英伟达，又一次收到了加密市场的「连累」。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"CtoZ8nQ1\">很快，大量二手显卡流入市场，直接与新品形成竞争，去库存成了让英伟达颇为头疼的一件事。为此英伟达鲜有地调低了 RTX30 系显卡的官方价格。最让英伟达措手不及的，是那些直接供给矿场的货，被商户改造成了独立显卡，流回到了市场上冲击现有显卡的库存销售。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"hpuECmok\">本次显卡抛售的主要原因，除了价格的下跌外，就是即将到来的以太坊 2.0，它意味着曾经庞大的显卡挖矿市场将不复存在。据估计，在以太坊转向 PoS 后，会有超过三分之一的消费显卡市场彻底消失。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"vmS-gN_d\">而随着占以太坊全网算力 33% 的 Ethermine 矿池宣布将结束以太坊 PoW 挖矿矿池业务，GPU 显卡挖矿的黄金时代也宣告结束。以太坊矿工们开始各自寻找出路，有躺平观望的，有的折价卖掉了手上所有的显卡，还有的凭借挖矿获得的收益开始转型做 Web3 应用的。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>未来 8 年</h3>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"tsgQ1cJL\">PoS 转换对以太坊网络的重要性，不言而喻，但这就是以太坊的最终形态了么？当然不是。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"8irUCCWG\">以太坊还有一系列问题没有解决，比如 PoS 的抗审查性，这是区块链根基，现在开始被质疑；比如性能，Rollups 能让以太坊的性能提升到什么水平；比如有了 Rollups 还是否需要分片技术等等，这些都是问题。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"QWiiIbG0\">以太坊在 2014 年的白皮书里就写了要转型 PoS，谁想到一等就是 8 年，而上面那些问题，需要每一个生态成员一点一点摸索，去期待下一个 8 年。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"BDePMP86\">以太坊 PoW 已成为历史，Vitalik、以太坊开发团队以及矿工们八年来的功过是非。我们用文字记录下来，and then move on。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<blockquote data-pid=\"kf05Eusb\">参考文献：<br>《<a href=\"https://link.zhihu.com/?target=https%3A//vitalik.ca/general/2017/09/14/prehistory.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">A Prehistory of the Ethereum Protocol</a>》<br>《<a href=\"https://link.zhihu.com/?target=https%3A//blog.ethereum.org/2015/03/03/ethereum-launch-process\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">The Ethereum Launch Process</a>》<br>《<a href=\"https://link.zhihu.com/?target=https%3A//decrypt.co/59882/why-vitalik-buterin-is-known-as-the-v-god-in-china\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Why Vitalik Buterin is Known as the 'V God' in China</a>》<br>《<a href=\"https://link.zhihu.com/?target=https%3A//finance.sina.com.cn/blockchain/roll/2019-01-04/doc-ihqhqcis2824544.shtml\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">以太坊五年</a>》<br>《<a href=\"https://link.zhihu.com/?target=https%3A//www.99hufu.com/bizhong/165186.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">比特币矿机在中国的全部发展历程一览</a>》</blockquote>\n<p data-pid=\"L9LfqpXI\">《<a href=\"https://link.zhihu.com/?target=https%3A//www.pingwest.com/a/269336\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">英伟达挖矿史：「把这一代最优秀的工程师聚在一起，然后研究挖比特币」</a>》</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/qu-kuai-lu-dong-blockbeats?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">律动BlockBeats</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/564697171?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"我相信这是它一开始就想到达的地方——文石 Tab8 上手体验","date":"2022-09-15 06:30:06","description":"感谢文石，我期待着文石将更好的芯片和算法用在更大尺寸的设备上，让 Tab8 的体验可以蔓延到所有尺寸。<a href=\"https://sspai.com/post/75710\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75710"},{"title":"握好手柄，看住钱包：任天堂、索尼 9 月发布会资讯汇总","date":"2022-09-15 03:30:00","description":"从《旷野之息》续作到《人中之龙》系列三连发，汇总近期任天堂、索尼发布会中那些「高光时刻」。<a href=\"https://sspai.com/post/75727\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75727"},{"title":"派早报：GoPro 推出 GoPro Hero 11 系列运动相机、大疆发布 Osmo Action 3 运动相机等","date":"2022-09-15 00:52:22","description":"Google 艺术与文化「观妙悦色」小程序上线，Unicode 15.0 标准发布等。<a href=\"https://sspai.com/post/75728\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75728"},{"title":"Apple 秋季发布会线上回顾：一起聊聊新品和新系统体验","date":"2022-09-14 09:22:31","description":"一起谈谈对 Apple 新品发布会的感受。<a href=\"https://sspai.com/post/75681\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75681"},{"title":"Android 设备省电与流畅的「临界点」：uperf 如何让你的电量都花在刀刃上","date":"2022-09-14 08:00:00","description":"为自己的 Android 设备芯片量身定制一套更加符合自己使用习惯和实际需求的「游戏规则」。<a href=\"https://sspai.com/post/75695\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75695"},{"title":"用 Tasker 实现一键分享保存哔哩哔哩视频封面","date":"2022-09-14 07:34:04","description":"本文介绍了如何使用 Android 平台的自动化工具 Tasker 一键保存哔哩哔哩视频封面图，并简单解析了原理配置以及拓展玩法。<p>[......]</p>\n<a href=\"https://sspai.com/prime/story/tasker-bilibili-cover-image\" target=\"_blank\">查看全文</a><p>本文为会员文章，出自<a href=\"https://sspai.com/prime/precog/single\" target=\"_blank\">《单篇文章》</a>，订阅后可阅读全文。</p>\n","link":"https://sspai.com/prime/story/tasker-bilibili-cover-image"},{"title":"读懂《百年孤独》才算真正开始了人生，孤独是生命的本色","date":"2022-09-14 07:15:52","description":"\n<p data-pid=\"Mxp-taqP\">孤独也许是与众不同，也许是与世格格不入，也许只是不知所措。</p>\n<p data-pid=\"CK6GC-W1\">在马尔克斯看来，生命注定是一场孤独的旅程，这也是《百年孤独》里展现出来的布恩迪亚家族七代人的命运，这个注定经受百年孤独的家族不会有第二次机会在大地上出现。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-c5d5d6e5455a87a3b6abe9a8ea41a700_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"874\" data-rawheight=\"588\" class=\"origin_image zh-lightbox-thumb\" width=\"874\" data-original=\"https://pic1.zhimg.com/v2-c5d5d6e5455a87a3b6abe9a8ea41a700_r.jpg\"></figure><p data-pid=\"KTnPuptR\">孤独并不意味着痛苦，执着的信念必定是孤独的，这也许才是生命的本色。</p>\n<p data-pid=\"xWprTrWk\">布恩迪亚家族的第一代发现了马孔多这个世外桃源，从此马孔多从与世隔绝变成了繁华的小镇，在百年的时间里经历了文明开化、战争、繁荣、工业化，最终白蚁啃掉了镇子上最后一根柱子，整个小镇毁于风沙之中，重归于荒芜。</p>\n<p data-pid=\"LLoQd3bg\">有人读不懂百年孤独，认为应该先去了解拉丁美洲史等等，其实我认为它就是一个故事，一个跨越百年历程的故事，世界上每个地方都在发生。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-6dd8c14f4a8bf2fbdfd9625fce73caa1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"658\" data-rawheight=\"336\" class=\"origin_image zh-lightbox-thumb\" width=\"658\" data-original=\"https://pic2.zhimg.com/v2-6dd8c14f4a8bf2fbdfd9625fce73caa1_r.jpg\"></figure><p data-pid=\"fRiAM3so\">马尔克斯将个人与历史危机联系在一起，你在书中看不到任何直接讲述拉丁美洲史的内容，但是他们却活生生的出现在你的面前。</p>\n<p data-pid=\"xsuoR_kM\">马尔克斯用了一种魔幻的手法来写，这不是布莱恩家族的悲剧，其实是所有人的悲剧，甚至大多数人连名字都留不下。</p>\n<p data-pid=\"zjiCR14M\">马尔克斯凭借《百年孤独》拿下了1982年的诺贝尔文学奖。</p>\n<p data-pid=\"MG4cKIJb\">有人说马尔克斯是诺贝尔文学奖“唯一没有争议的获奖者”，诺贝尔奖未必能给马尔克斯添加多少光彩，但是他的获奖却会使该奖的声誉有所恢复。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-16754db561f8154697df9fcf8fc186d4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"785\" data-rawheight=\"589\" class=\"origin_image zh-lightbox-thumb\" width=\"785\" data-original=\"https://pic1.zhimg.com/v2-16754db561f8154697df9fcf8fc186d4_r.jpg\"></figure><p data-pid=\"3oPGD-o6\">历史不断地在重复，布恩迪亚家族就像一头孤独的鲸鱼，最后一鲸落万物生，物理学上叫做能量守恒，哲学上叫做因果循环，这也许就是命运。</p>\n<p data-pid=\"AsCwuqXo\">我想马尔克斯写下这部百年的孤独史诗应该是平和的，他不想给孤独一个褒义或者贬义，他只是想说：看，这就是命运。</p>\n<p data-pid=\"pwYHT_xi\">就像人生，我们生下来一无所有，所有的事物对我们来说都是新事物，我们逐渐认知万物，开始长大，到获得财富、名誉，结婚生子，爱恨离别，但是当死亡来临的时候，我们什么都带不走，带走的只是孤独。</p>\n<p data-pid=\"UzZggj6t\">这也是为什么马尔克斯一直强调《百年孤独》是现实主义的，虽然用了魔幻的写法，其实也真正如此，因为这就是生命的真相。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-1cf9ad13cab70332d73480505161f277_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"607\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-1cf9ad13cab70332d73480505161f277_r.jpg\"></figure><p data-pid=\"EJAET92m\">马尔克斯的《百年孤独》简直就是孤独的展厅，每个人都能在里面找到自己的孤独的标本：</p>\n<p data-pid=\"xgqlePSM\">1、霍.恩.布恩迪亚的孤独是思想超前的孤独，最后只能沉浸在自己的世界里；</p>\n<p data-pid=\"0L0igW6a\">2、乌苏娜的孤独是倔强的孤独，自己瞎了却凭着自己的坚强让任何人发现不了她瞎了；</p>\n<p data-pid=\"me2UXObh\">3、蕾贝卡的孤独是精神空虚的孤独，一旦精神焦虑就会吃土，而这正是她内心空虚的掩饰；</p>\n<p data-pid=\"x-24k2tB\">4、阿玛兰塔的孤独是困于爱情的孤独，她跟姐姐爱上了同一个人，挣扎于爱情的渴望与失恋的痛苦；</p>\n<p data-pid=\"Op4J2Lxs\">5、奥雷连诺上校是目空一切的孤独，他盛极一时，最后却发现功成名就并没有任何意义。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-a3a720c1a450e2073dd831a1cad6981e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"476\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic3.zhimg.com/v2-a3a720c1a450e2073dd831a1cad6981e_r.jpg\"></figure><p data-pid=\"yreciY3t\">每个人都走在孤独的路上，读《百年孤独》的时候，让人非常容易受到感染，只能说马尔克斯的文字能让人痴迷，世上万物你都可以拥有，但只有自己的的经历，自己内心的感受才真正属于自己。</p>\n<p data-pid=\"pKCQkIx9\">正如我们现在，科技的发达带来物质的极大丰富，但是却已经迷失了自我，精神力量的缺乏，只会让我们陷入更深的孤独中。</p>\n<p data-pid=\"sK6uKYld\">事实上，每个人读《百年孤独》的感受是不一样的，因为每个人的经历，每个人的活法都是不同的，你最终能拥有的，只是一个孤独和平和的自己。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-e6a1e0678ac6459dbc5c0df429ee0cc6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"790\" data-rawheight=\"476\" class=\"origin_image zh-lightbox-thumb\" width=\"790\" data-original=\"https://pic3.zhimg.com/v2-e6a1e0678ac6459dbc5c0df429ee0cc6_r.jpg\"></figure><p data-pid=\"P-SrOXeP\">莫言评价《百年孤独》：“看到它，我就像被雷电击中一样，原来小说还可以这样写！”</p>\n<p data-pid=\"JNgjZTW9\">《百年孤独》从1967出版到现在，已经过去半个多世纪了，还是有很多人都十分喜欢这部作品，它被翻译成40多种语言，销量已经超过5000万册。</p>\n<p data-pid=\"hZ36MEAn\">马尔克斯是一个了不起的作家，除了《百年孤独》，还有《霍乱时期的爱情》也非常不错，一段跨越了半个世纪的爱情，让你看的惊心动魄，却能发现真正的爱情。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-e8f4cbcbd126a581a1133e05944ac3ab_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"580\" data-rawheight=\"580\" class=\"origin_image zh-lightbox-thumb\" width=\"580\" data-original=\"https://pic4.zhimg.com/v2-e8f4cbcbd126a581a1133e05944ac3ab_r.jpg\"></figure><p data-pid=\"7LIQec1-\">不管你在工作和生活中感到迷茫还是想探寻人生的意义，这两本书都能带给你积极的意义，让你重新发现世界的美好，人生也许就是一个孤独的旅程，当你真正了解自己，就会更加坦然，找到生命的意义。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/suizou?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">莫比乌斯星球</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/557117784?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何看待国产动画《一念永恒》第二季？","date":"2022-09-14 06:36:19","description":"\n<p data-pid=\"XelY9Qfw\">从2022年7月20日到现在，《一念永恒》动画第二季已经陪伴大家近两个月的时间了。</p>\n<p data-pid=\"MEFN_Yln\">在这一季的制作上，我们投入了更多的精力，更多时间，去对原著进行拆解和研读。我们希望能将耳根老师在原著中描绘的修仙世界和各个角色更内在的特点，以及每个角色赋予他们的意义，用更适合动画的表达手法展现出来。</p>\n<p data-pid=\"pAotqZlt\">在血溪宗中峰血子试炼前几关中，白小纯因为受到无尽血界意志的眷顾，顺利通过第一关；第二关中，白小纯和对手为抢夺钥匙进行了激烈交锋，最后在“天选之人”的好运气和硬实力的加持下，吸收了全部7把钥匙，直接成就了十鬼天妖身。</p>\n<p data-pid=\"ab0wGgWA\">原著中血子试炼作为白小纯血溪宗生活虽然只有寥寥十几章，读小说的时候可能也是一阅而过的剧情。但作为动画改编来说，每一次对抗，每一句台词都是白小纯血溪宗成长线里不可或缺的经历，而角色的塑造，最重要的就是他的经历和情感塑造，把观众脑海中文字化的白小纯真情实感呈现出来，让角色更鲜活立体，活的更真实。同样也是为了白小纯日后离开血溪宗，面对两宗存亡危机时的情感做前期铺垫，正因为这些患难与共，针锋相对，生死相伴的经历，再次面对血溪宗时白小纯的纠结，无助，挣扎才会更有带入感。让观众的心跟着他所想。所看，所听。当白小纯说出：“这些年的每个点滴，都在我心，你们，对我白小纯同样重要，因为你们，我才会成为灵溪的白小纯，血溪的夜葬，逆河宗的少祖， 才又拥有了家人，有了家。”</p>\n<p data-pid=\"GxGpBS6n\">在接下来的血子试炼终战中，血子之位也将在白小纯与杜凌菲二人中产生，虽然当下两人还并未互认身份，但毕竟是年少时有过情感羁绊的“白月光”，其实他们已经在对方身上看到了曾经的身影。同样背负着家族或同门的期望，在这样的竞争局面下重逢相认，面对使命与感情，二人做出的选择必将对未来轨迹产生影响。</p>\n<p data-pid=\"J4vIfVyM\">对于血子试炼这一部分，我们在改编上进行了更为详细的表达，也是希望能让大家更加清晰地感受到，白小纯未来在两宗大战中做出重要抉择时的动机与心情，也让这一战更加有意义。</p>\n<p data-pid=\"rm3pe2rF\">而对白小纯个人来说，不同于第一季对其修为增长的着重描写，这一季更多表现的是白小纯即使身处不同环境，却依然坚守心中信念的人物理念。从无间篇到现在，白小纯一直使用夜葬的身份卧底血溪宗，而随着其在宗门内地位的提高，想要利用他、攻击他的人越来越多。在这种环境下，为了自保和能获得自己想要得到的东西，白小纯早已学会了隐匿自己的真实性格，所以在动画中，对他的刻画更多是以心理活动为主。</p>\n<p data-pid=\"O9_Tf0iz\">对于大家普遍期待的双宗大战，我们也在紧张的筹备中。不管是对原著剧情的打磨，还是打斗场面的细节刻画 ，我们都希望能用更好的方式进行动画化的呈现，不辜负粉丝的期待。第二季主要涉及到三场大战，在不同的阶段对于白小纯具有不同的意义，除了展示他能力的成长与心性的变化外，更重要的就是与大家情感的升华。而后续随着战争的推进，大家将会逐渐看到更广阔的的世界观，白小纯天赋异禀背后的因由，灵血两宗隐藏的秘密，杜凌菲真实的身份......都将一一浮出水面。</p>\n<p data-pid=\"jeU1ePhK\">除此之外，《一念永恒》轻松搞笑的属性在之后的动画中也会展现得更加明显。身处血溪宗的白小纯，展现了自己的控场能力和布局谋划的情商，因此能够自如地周游于各种环境和人际之间。而回到灵溪宗后的白小纯，在从小一起长大的同门之间，他喜欢耍滑头的属性将会有更多的展露，白小纯会卸下伪装，露出自己最真实的状态，恢复到轻松的一面。剧情中诙谐幽默的部分也会在这些内容上有更直观的体现。但随着伙伴的长大以及出现不可避免的宗门生死存亡问题的时候，白小纯又会该面对，他又将做出何种选择，希望大家能在之后片子里找到自己想要的答案。</p>\n<p data-pid=\"Fen3r0tE\">《一念永恒》对于很多原著粉和动画粉来说，都是极具期待性的，对于我们来说也是如此。作为动画导演，期待观众和粉丝们能够喜欢这部作品，也希望大家能够从中看到我们的用心和真诚。感谢大家对《一念永恒》的陪伴与支持，也希望在白小纯追求永恒的路上，大家能一直陪伴左右。</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/suxiaoguang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">苏晓光</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/553370270/answer/2673226010?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/544364217?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价国产动画《一念永恒》第二季？</a><br><a href=\"http://www.zhihu.com/question/551885709?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">动画《一念永恒》的口碑怎么样？</a><br>\n","link":"http://www.zhihu.com/question/553370270/answer/2673226010?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"《Minecraft》mod模组盘点/科普/打分（第四期，轻松愉快的）","date":"2022-09-14 06:03:27","description":"\n<blockquote data-pid=\"96T5jy9L\">有些朋友提到了格雷科技，确实，格雷科技几乎是Minecraft mod社区最有话题性的模组，不过笔者只完整玩过格雷4，半途而废过格雷5，因此后面打算弄一个格雷6的整合包来体验（受虐）一下，到时候再弄一期。<br>这一期我们聊一聊一些小型的模组。</blockquote>\n<h3>更多箱子/金属储物桶（Iron Chests/Metal Barrels）</h3>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-757974eb2ef901a8eaa15fcb760a2b59_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"900\" data-rawheight=\"232\" class=\"origin_image zh-lightbox-thumb\" width=\"900\" data-original=\"https://pic2.zhimg.com/v2-757974eb2ef901a8eaa15fcb760a2b59_r.jpg\"></figure><p data-pid=\"P2M-IBjp\">一脉相承的两个模组，不过好像并不是出自一个作者。金属储物桶是跟随minecraft本体1.14版本<b>加入木桶</b>后社区开发者根据更多箱子（也有直译成铁箱子的）模组而写的，在用法上和更多箱子是一样的。</p>\n<p data-pid=\"yYFivpDV\">笔者是在研究机械动力时才开始接触高版本，因此第一次看到木桶和金属桶的时候，下意识地以为是以前很多模组里面存储单方块的<b>储物桶</b>，也算是思维定式了。</p>\n<p data-pid=\"lYpxmjQE\">更多箱子模组在1.12以及之前的主流版本中几乎是必装模组，因为不管是科技包还是魔法包亦或是冒险农业包，<b>主流的后期存储方式</b>大致有三种：</p>\n<p data-pid=\"M30zHlQi\">1.高容量箱子。</p>\n<p data-pid=\"K4v6DyOa\">2.由存储单方块的储物桶/储物抽屉打造的墙体</p>\n<p data-pid=\"8bZg64Zp\">3.应用能源提供的存储。</p>\n<p data-pid=\"XKF8WwId\">而三者的用途是不一样的，储物桶存储大量的原材料比如圆石、铁块、红石等，高容量箱子存储杂物或者作为农场、树场等的最终产物箱，而应用能源能够将前者接入其网络，本身的存储单元也是一种单方块存储方案。</p>\n<p data-pid=\"9pgw6IUA\">因此不论是更多箱子模组还是金属储物桶模组，它们在整合包中都有非常重要的作用：</p>\n<ul>\n<li data-pid=\"CVnunaKo\">过渡平滑，前中后期都适用，前期就用原版的箱子或者木桶，前中期升级铁的，中期升级金的和钻石的，后期摆上一大堆钻石的和储物抽屉这类模组配合。</li>\n<li data-pid=\"U9-W4oGk\">整理杂乱无章的物品，比如平时不用的工具、武器，用剩的建筑材料、工业材料（经典的铜线锡线）、树苗、mod教程书、盔甲、蜜蜂等等，就需要更多箱子这类模组大容量的特点。</li>\n<li data-pid=\"4hEMYg5T\">独立的生产线中的存储手段，比如自动树场、自动农场、刷怪塔的成品箱，工业流水线的中置缓存等适合用更多箱子这类兼容性好的存储模式。</li>\n</ul>\n<p data-pid=\"qHfYtiSG\">如果不是抖M，基本必装的模组。高版本可以选择金属储物桶。</p>\n<p data-pid=\"bgG-e7kL\"><b>整体打分：90</b></p>\n<p data-pid=\"PJlDyl7L\">实用程度：⭐⭐⭐⭐⭐</p>\n<p data-pid=\"MZs4lFtf\">美观程度：⭐⭐⭐</p>\n<p data-pid=\"Ytv5QzGM\">作者构思：⭐⭐</p>\n<p data-pid=\"8hzZSycB\">拓展能力：⭐⭐⭐</p>\n<p data-pid=\"uAn_aP15\">易用程度：⭐⭐⭐⭐⭐</p>\n<hr>\n<h3>竹--Bamboo</h3>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-eaec4ab7b2ec1cc641ba936d1da02256_b.jpg\" data-size=\"normal\" data-rawwidth=\"650\" data-rawheight=\"383\" class=\"origin_image zh-lightbox-thumb\" width=\"650\" data-original=\"https://pic3.zhimg.com/v2-eaec4ab7b2ec1cc641ba936d1da02256_r.jpg\"><figcaption>图片来源MC百科</figcaption></figure><p data-pid=\"1NN6wemU\">竹mod经常被和和风mod混淆，因为竹mod是一款和风味道非常浓，一体感做的很强的模组。</p>\n<p data-pid=\"J0fpl36Y\">虽然竹mod支持到了1.14版本（改名为饭Meshi），其实它是一个非常古老的mod。在1.6 1.7的版本时代，竹mod几乎是必装的模组，之后很多设定被其他模组借鉴，竹mod也慢慢变成了一个很普通的装饰类模组了。</p>\n<p data-pid=\"1x2nq1vA\">其实细数的话，竹mod被吸收借鉴的设定非常多：</p>\n<p data-pid=\"3lwjFb-8\">1.被Minecraft官方吸收的竹子。</p>\n<p data-pid=\"tnT6qfOu\">2.被各大环境类模组吸收的樱花树。</p>\n<p data-pid=\"tCGjETry\">3.萤火虫</p>\n<p data-pid=\"QHhDBKOH\">4.水车、风车</p>\n<p data-pid=\"ZIkTzO0_\">5.榻榻米</p>\n<p data-pid=\"VQg1PT28\">6.篝火</p>\n<p data-pid=\"X4y0NbKf\">7.灯笼类的照明方块</p>\n<p data-pid=\"_cCyxvNU\">等等。</p>\n<p data-pid=\"RHmeLJDG\">为什么我说就算是科技类模组，也会安装竹mod呢，因为竹mod的设计思路是分散模组物品于不同的功能上，而非在某个功能上塞满物品。</p>\n<p data-pid=\"ZXLtNo2Q\">这样的设计造成的效果就是：虽然竹mod一眼看上去物品不算多（200个左右），可玩起来会发现体量非常大，在流程的方方面面都能够涉及到：</p>\n<p data-pid=\"7xLNDBrA\">1.<b>竹林提供的装饰与燃料</b>，在生存实况时，优先就是要种一片竹林，竹子的自动扩散（<i>话说现实中一片竹林也是同一株竹子的根部长出来的这个冷知识我也是通过竹mod了解的</i>），比种树场要舒服很多。竹子作为燃料，非常适合工业整合包的前期过渡，当然后期做自动种植厂也未尝不可。</p>\n<p data-pid=\"WrwyhTm8\">2.<b>樱花树</b>提供的复杂木质装饰方块，建筑党的福音，在旧版本没有那么多种木头方块的时候，樱花木鹤立鸡群。</p>\n<p data-pid=\"VGNp08LR\">3.<b>作物和食物系统</b>，自己添加的作物不多，只有西红柿、豆子、海苔、水稻这些。但自定义的食物很多，基本都是原版结合mod的物品，比如很出名的竹子+肉组成的肉串，雪、糖做的各式刨冰，竹子+面团组成的各式丸子，还有用<b>鸡肉、鸡蛋、大米做的亲子盖饭</b>，过了这么多年我还能记得。</p>\n<p data-pid=\"PWf6LLuA\">4.<b>武器系统</b>，竹子做的标枪和武士刀，造价很便宜，性能也相应的一般，前期用用或者当玩具之类的装饰。</p>\n<p data-pid=\"e4_9LMSo\">5.<b>日式的小装饰</b>，比如围炉、青行灯、门帘、风铃（这个真的意境无敌）、日式横移的木门、招财猫等等。竹mod这些小物品玩起来的时候会感觉每一个都很好看。</p>\n<p data-pid=\"JkS_prL7\">6.<b>特色功能方块</b>，如早期的背包系统--包裹、可吹掉树叶的扇子（这个配合工业2是爱不释手的）、衣柜、被褥（加速时间流逝)、模仿方块还有既浪漫又实用的温泉系统。</p>\n<p data-pid=\"18o46hUf\">作为早期农业类模组，竹mod的成功得益于作者强大的设计能力和丰富的生活经验，对于日本文化中有刻板印象的部分和无刻板印象的部分都做的很好，前者吸引玩家，后者让玩家在深入游玩时产生“原来是这样”的感觉。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-a84c6ae802fdf5318f6d1d1b5d75fc6a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"337\" data-rawheight=\"450\" class=\"content_image\" width=\"337\"></figure><p data-pid=\"4elLonMY\">比如竹mod中有很多种门，有一种叫眺雪拉门，大致就是门的下半部分是玻璃，作为中国人其实不太好理解，看雪窗户不就能看吗。后来在雪原地区做了一个日式房子，地板用了模组里非常好看的榻榻米，放上了被褥，在睡觉的时候躺下正好能完整地从眺雪拉门的玻璃里看到外面的飘雪，实在浪漫。</p>\n<p data-pid=\"QkyjM-fY\"><b>整体打分：90</b></p>\n<p data-pid=\"BCVDB6r4\">农业乐趣：⭐⭐⭐</p>\n<p data-pid=\"ngxQ_zyV\">美观程度：⭐⭐⭐⭐⭐</p>\n<p data-pid=\"3fgEHoCW\">艺术风格：⭐⭐⭐⭐</p>\n<p data-pid=\"Wz5ZcwGU\">性能强大：⭐⭐</p>\n<p data-pid=\"VJcSfgc_\">设计能力：⭐⭐⭐</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<hr>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>枫树--MapleTree</h3>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-2fe22f49ad78705c184c41297f5f5094_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"900\" data-rawheight=\"506\" class=\"origin_image zh-lightbox-thumb\" width=\"900\" data-original=\"https://pic1.zhimg.com/v2-2fe22f49ad78705c184c41297f5f5094_r.jpg\"></figure><p data-pid=\"ArHfgKBd\">不太清楚竹mod和枫树mod两个元老级模组谁更早，但二者的设计思路是非常相似的，相比于竹mod更加偏向日式的装饰风格，枫树mod更多侧重在农业和烹饪上。所以笔者将竹划分为装饰类mod，将枫树划分为农业类mod。</p>\n<p data-pid=\"CPZihKIs\">在农业上，枫树有许多有特色有创业的点子，玩起来可玩性不错。</p>\n<p data-pid=\"mOdWDe-4\">1.作物上有多种种植方式，包括原版小麦式、作物架、水下种植、只采集最上级的向日葵、非常好看的葡萄藤架、树上落下的柿子等。</p>\n<p data-pid=\"bcwwxnxL\">2.特色的烹调系统，添加了篝火和煮锅，因此不需要单独的燃料，后来篝火也被原版吸收了。煮锅内放置不同的液体是能做出不同的菜肴的，比如油类对应煎炸，水对应煮汤等，这套系统后来被很多农业模组所学习。</p>\n<p data-pid=\"97F-wUJm\">3.力驱动的转轴系统，笔者不太清楚枫树的转轴和旋转工艺的关系，到底是谁启发了谁。但这套系统就算和最新的机械动力模组也有一定的相似理念。石磨需要旋转的轴驱动，而生物可以驱动旋转曲柄，包括猪羊牛这些，就像驴拉磨一样，当然了，人也可以驱动。</p>\n<p data-pid=\"s55OgdCo\">4.核心作物枫树，有多种颜色，树下还会生成对应颜色的落叶层，十分好看。而对枫树糖浆的采集过程则显得比其他模组的采集更加具象化，工业2的橡胶像撕下一块补丁，数值提取器像是不停地吸取树干。而枫树中的糖浆提取则是在孔洞上放置一个水龙头，水龙头会缓缓一滴一滴地将糖浆滴到下面的锅里，锅下面提供的篝火热源将糖浆提炼成成品。过程很缓慢，但是和慢节奏的农业模组气质很符合。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-f61bc1178243c8a11acbf4aa9872eab1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1915\" data-rawheight=\"993\" class=\"origin_image zh-lightbox-thumb\" width=\"1915\" data-original=\"https://pic2.zhimg.com/v2-f61bc1178243c8a11acbf4aa9872eab1_r.jpg\"></figure><p data-pid=\"nr86We7M\">总结：相比风格统一自成一体的竹mod，枫树在一体化上要逊色很多，但在农业可玩性上要优秀不少，安装枫树模组的农业整合包是有很强的可玩性的，针对不同作物的自动化是很烧脑的部分。</p>\n<p data-pid=\"Iz3UryeT\"><b>整体打分：88</b></p>\n<p data-pid=\"kHlUrxA-\">农业乐趣：⭐⭐⭐⭐⭐</p>\n<p data-pid=\"7Py70qLZ\">美观程度：⭐⭐⭐</p>\n<p data-pid=\"dO4H3fdt\">艺术风格：⭐⭐⭐</p>\n<p data-pid=\"suALUq6s\">性能强大：⭐⭐</p>\n<p data-pid=\"tN2sVybU\">设计能力：⭐⭐⭐</p>\n<hr>\n<h3>收藏馆--BiblioCraft</h3>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-d518f28d17fc6264754689d7ec7e3b20_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"919\" data-rawheight=\"577\" class=\"origin_image zh-lightbox-thumb\" width=\"919\" data-original=\"https://pic1.zhimg.com/v2-d518f28d17fc6264754689d7ec7e3b20_r.jpg\"></figure><p data-pid=\"XLkZP1fn\">家具类模组是minecraft中一直存在但不温不火的分支，而其江山半壁要属于两个模组，<b>MrCrayfish 的家具和收藏馆BiblioCraft</b>。</p>\n<p data-pid=\"Rd4VeErx\">前者可能有些朋友不清楚是啥，但如果我说冰箱、马桶、电视、水龙头，大家应该就想起来了，这是一款拟真现代生活的家具模组。而与之相反地，BiblioCraft则是与Minecraft风格接近的古朴家具，且大多偏向实用而非追求装饰，因此笔者更加喜欢biblioCraft。</p>\n<p data-pid=\"RFeSEdzx\">由于模组特性，笔者盘点一下模组中知名的几套物品：</p>\n<p data-pid=\"kVmnOe1n\">1.<b>书架</b>：上下两排各能放8本书的书架，根据缩放位置是否有书，显示的模型会变。手持书可以放进指针对应位置，<b>空手可以拿下来书，shift右击书可以直接阅读</b>。这点在低版本作用不大，但在1.7.10之后的版本非常非常有用，因为<b>现在的生态几乎大型mod都是自带教程书的</b>。而书本本身不支持堆叠，放在箱子里十分麻烦。从匠魂的五六本大部头书，到沉浸工程，到不离手的神秘时代魔法书等等，bibliocraft的书架是兼顾实用性和美观度的优秀设计。类似的还有书桌。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-8475cec7ccdeb7b60024ea6fd418f7d6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"881\" data-rawheight=\"610\" class=\"origin_image zh-lightbox-thumb\" width=\"881\" data-original=\"https://pic3.zhimg.com/v2-8475cec7ccdeb7b60024ea6fd418f7d6_r.jpg\"></figure><p data-pid=\"ozXU-QO6\">2.展示架、工具架、药水架、唱片架等。虽然没有像书架那样完美解决了一大痛点（也可能是mod发展的巧合），但这些展示架确实是非常适合装饰的物品，也和书架一样，可以直接放置、拿下来，不完全依赖GUI。工具架用来放匠魂的工具和各类模组的扳手等很实用。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-ae206d7b228ac898e030e10de0a0aecd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"854\" data-rawheight=\"480\" class=\"origin_image zh-lightbox-thumb\" width=\"854\" data-original=\"https://pic2.zhimg.com/v2-ae206d7b228ac898e030e10de0a0aecd_r.jpg\"></figure><p data-pid=\"zipC2R5I\">3.桌子和餐盘，抛开桌子本身的装饰属性，其自带一个物品栏，可以展示其中物品，比如蛋糕、牛排等，而餐盘可以放置多个物品，是餐厅装饰很好看的选择。</p>\n<p data-pid=\"KM__UpW6\">4.地图系统，在voxelMap和JourneyMap流行后，原版的地图、指南针以及bibliocraft的地图系统就显得很鸡肋了。但实际上这套系统还是做得比较有意思的，基于原版的地图系统，玩家可以将其放在bibliocraft提供的地图册中自动切换，还可以将已经探索的地图放在墙上拼接起来，很有意思。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-33fd4c65e500980a41cd339ff1c576c0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"854\" data-rawheight=\"480\" class=\"origin_image zh-lightbox-thumb\" width=\"854\" data-original=\"https://pic1.zhimg.com/v2-33fd4c65e500980a41cd339ff1c576c0_r.jpg\"></figure><p data-pid=\"iAF1bUQ_\">5.拓印机、板材机、制画机、打字机等。功能方块，用来复制附魔书、复制花、写书等。</p>\n<p data-pid=\"ak56uOG-\">6.衣架和剑座，一个用来放衣服，一个用来放武器，和前面一样可以直接交互放置使用，衣架已经被原版吸收。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-037626ea08bb95f4c170865dea2dc2f0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"767\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb\" width=\"767\" data-original=\"https://pic1.zhimg.com/v2-037626ea08bb95f4c170865dea2dc2f0_r.jpg\"></figure><p data-pid=\"BrJRcNCX\">7.标签与精致木牌。很实用的两个小物品，前者是一个小木板，可以贴在物品上并标记几个物品，一般被玩家用在箱子上，可以更方便看出来箱子内的物品存储类型。而精致木牌是对原版木牌的改良，清晰可认了许多，排版上类似一个小型编辑器，调节字体大小、颜色，修改排版，还可以放置物品协助展示。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-8b7ac343d3c1139c7590fb85f9031b1a_b.jpg\" data-size=\"normal\" data-rawwidth=\"725\" data-rawheight=\"513\" class=\"origin_image zh-lightbox-thumb\" width=\"725\" data-original=\"https://pic3.zhimg.com/v2-8b7ac343d3c1139c7590fb85f9031b1a_r.jpg\"><figcaption>图片来源mcbbs</figcaption></figure><p data-pid=\"9RPAmXwf\">总结：bibliocraft是一款非常实用的装饰类模组，适合农业、冒险、科技、魔法等一系列整合包，如果你苦于一堆药水、工具的箱子存储，那你要安装bibliocraft；如果你为生存小屋的厨房、客厅、卧室的装饰而苦恼，你也可以考虑bibliocraft；<b>如果你安装了匠魂科技，你一定要安装bibliocraft</b>。</p>\n<p data-pid=\"dUyR3xpr\"><b>整体打分：93</b></p>\n<p data-pid=\"m5ivo_fW\">实用程度：⭐⭐⭐⭐</p>\n<p data-pid=\"ynfO-dWJ\">美观程度：⭐⭐⭐⭐⭐</p>\n<p data-pid=\"QjBeGWQS\">作者构思：⭐⭐⭐</p>\n<p data-pid=\"zQZD4BUz\">拓展能力：⭐⭐⭐</p>\n<p data-pid=\"2yMMgm5V\">易用程度：⭐⭐⭐⭐<br></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/chen-yong-yu-78?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">唱小曲的辣椒儿</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/555029475?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"从软硬协同到「不思进取」的资本：iPhone 14 Pro 对「高端产品」的启示","date":"2022-09-14 02:31:19","description":"Matrix首页推荐Matrix是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选Matrix最优质的文章，展示来自用户的最真实的体验和观点。文章代表作者个人观点 ...<a href=\"https://sspai.com/post/75630\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75630"},{"title":"獭可派 | 你应该拥有一个更先进的充电头","date":"2022-09-14 02:06:38","description":"少数派PRIME订阅会员特惠价：¥209，下单时自动减免。少数派PRIME订阅会员特惠价：¥369，下单时自动减免。少数派PRIME订阅会员特惠价：¥139，下单时自动减免。少数派PRIME订阅会员特 ...<a href=\"https://sspai.com/post/75453\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75453"},{"title":"如何评价密室逃脱游戏《\t山村贞子》？你的游玩体验如何？","date":"2022-09-13 08:20:48","description":"\n<p data-pid=\"9dI8FaHs\">《山村贞子》是一个以同名电影为恐怖密室主题，原创方为北京夜幕，时至今日已通过授权的方式落地到很多城市（上海、西安等城市均有落地）。</p>\n<p data-pid=\"qmGLmc-Y\">作为本人为数不多也是我首次挑战的恐怖主题，这个密室作品可以说给我留下了极为深刻的印象，其中的个别“单线”任务非常有意思，而部分大型机关的运用也是非常亮眼。</p>\n<p data-pid=\"b435pcds\">更多细节，如有需要可参考这篇测评：《山村贞子- 老品牌的革新之路》（2019年9月发布于EGA密室产业平台）——</p>\n<hr>\n<p data-pid=\"33HvA3Yb\">录像带、古井、诅咒、七天……</p>\n<p data-pid=\"IlwjPb34\">《午夜凶铃》系列影片的诞生，塑造了“贞子”白衣黑发的经典形象。</p>\n<p data-pid=\"YbdZJehL\">深夜索命”的桥段，则让“电视机”这件再日常不过的事物，成功晋级为观影者的“心理阴影”。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-fb714b2936553d751f3b71ae34ae1191_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"510\" data-rawheight=\"274\" data-watermark=\"watermark\" data-original-src=\"v2-fb714b2936553d751f3b71ae34ae1191\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"8iMOuPVS\">或许因其太过经典，多数人记住了她苍白的手臂与怪异的身姿，反而忽略了“贞子”悲惨的过往，甚至连她的姓氏也一并忘却。</p>\n<p data-pid=\"0wxkRZpn\">直到今年，一家老密室品牌的新作品，重新唤醒了这份记忆。</p>\n<p data-pid=\"ml-u9h5T\">而它，就是《山村贞子》。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-a24ff882374fdb4fb66f5f887595f2eb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"900\" data-rawheight=\"530\" data-watermark=\"watermark\" data-original-src=\"v2-a24ff882374fdb4fb66f5f887595f2eb\" data-watermark-src=\"v2-50e14e16aa8ec41111ce4600f0227dc1\" data-private-watermark-src=\"v2-8e044e8da00acc581b7a296a0883b6f9\"></p>\n<p data-pid=\"9LDUAGBY\">诱发恐惧</p>\n<p data-pid=\"UK_-psOB\">从《午夜凶铃》第一部公映至今，已足足过去了二十多年。倘若现在回看这部影片，难免会产生“这也能吓人？”的疑问。</p>\n<p data-pid=\"_tvRCJ_S\">然而对于当时的人来说，贞子之所以让人害怕，除开画面的直观刺激，各种诱发恐惧的暗示与手段同样功不可没。</p>\n<p><img src=\"https://pica.zhimg.com/v2-4227d05c212c056dfb760b09be675286_720w.jpg?source=b1748391?rss\" data-caption=\"午夜凶铃中摄制粗糙的录影带 | 豆瓣剧照\" data-size=\"normal\" data-rawwidth=\"900\" data-rawheight=\"486\" data-watermark=\"watermark\" data-original-src=\"v2-4227d05c212c056dfb760b09be675286\" data-watermark-src=\"v2-0289316cede0ebfb56a4f7d4fd9ba2d0\" data-private-watermark-src=\"v2-67162d1cff1d3f954e314812dde636fa\"></p>\n<p data-pid=\"gTfIZlJ5\">这点，《山村贞子》同理。甚至会采用很多极具迷惑性的“欺骗”来诱发玩家的恐惧。</p>\n<p data-pid=\"tLkyIS-g\">比如——由于事先知道是恐怖主题，进场时玩家难免会有些紧张。</p>\n<p data-pid=\"r-r4T3Bq\">为此，设计者安排了一个十分欢乐的开头，等精神放松的差不多了，再补上猝不及防的一击。</p>\n<p><img src=\"https://pica.zhimg.com/v2-d0d42758be07481a81ba5df2911e12a5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"391\" data-watermark=\"watermark\" data-original-src=\"v2-d0d42758be07481a81ba5df2911e12a5\" data-watermark-src=\"v2-af9fd4df6af1cba449c0eb5cb4fb0490\" data-private-watermark-src=\"v2-3ce14f558ab59e6e147fa762b82b351f\"></p>\n<p data-pid=\"HKyZUu3u\">再比如——正当你为逃避“灾厄”，聚精会神的进行游戏时，“命运”却从天而降。</p>\n<p data-pid=\"j1-QQhVk\">当玩家只能被迫接受安排的那一刻，瞬间产生的震惊与无力，远非三言两语便能描述。</p>\n<p data-pid=\"npnqH46M\">沉浸还是机械？都要</p>\n<p data-pid=\"jUWaJLIe\">作为北京密室的老品牌之一，《山村贞子》问世之前，夜幕的作品多偏传统，题材也鲜少与“恐怖”搭边。</p>\n<p data-pid=\"A9zPIhr5\">之所以有如此方针，主要也是考虑到了北京市场的受众，担心玩家不爱“吃辣椒”。</p>\n<p data-pid=\"vdE3G-wc\">直到夜幕紫竹桥店的主题《荒村》上线，并为人接受后，创作团队才算有了底气。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f759cba0f074cd1c71aff4f6f9a6fd86_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"900\" data-rawheight=\"500\" data-watermark=\"watermark\" data-original-src=\"v2-f759cba0f074cd1c71aff4f6f9a6fd86\" data-watermark-src=\"v2-fa76c6074db85652dcc8bafc41f7587a\" data-private-watermark-src=\"v2-5bd2b74371a132ca6baae15384efc035\"></p>\n<p data-pid=\"CNptF2Nw\">另一方面，为了“赶时髦”，这次夜幕的创作团队选择用偏“沉浸”的方式，来呈现《山村贞子》。</p>\n<p data-pid=\"5-Ewxtuc\">“北京的密室市场，现在有一个问题。即大多数沉浸式密室缺大型机械，而机械密室又缺表演。”</p>\n<p data-pid=\"HUux-sTE\">“不过某些时候，很多想要达成的效果，用机械很难做到，用人则容易的多。”</p>\n<p><img src=\"https://pic3.zhimg.com/v2-9ff89fb8b5c3393af8580aef62587662_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"527\" data-watermark=\"watermark\" data-original-src=\"v2-9ff89fb8b5c3393af8580aef62587662\" data-watermark-src=\"v2-e4a0a8a0a53ad7c3f94364df8bb4df69\" data-private-watermark-src=\"v2-51d7f76b4a0f658439af25beb5b3d672\"></p>\n<p data-pid=\"_M6mSGHa\">当被问及新作品为何会选择“沉浸式”时，夜幕负责主题设计的高先生这样回答了我们。</p>\n<p data-pid=\"u-3AmMCR\">“为了弥补市场的空缺，我们希望‘贞子’即能有沉浸式的表演，又能享受到机械带来的震撼，因此我们在游戏中设置了很多‘人’与‘机械’的搭配。”</p>\n<p data-pid=\"bCuiAvMF\">同时，他还表示尽管“恐怖”是《山村贞子》一个重要标签，但“吓人”绝非设计初衷。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-265d1d9f07488dea47510562c5c6b640_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"543\" data-watermark=\"watermark\" data-original-src=\"v2-265d1d9f07488dea47510562c5c6b640\" data-watermark-src=\"v2-441c9b77381f34bc322902a42a500050\" data-private-watermark-src=\"v2-10cee83ec4ef261ff24ec0e6c0aeb83a\"></p>\n<p data-pid=\"vY8xE3ax\">“最开始想做的偏剧情一点，也有跟东升（主创设计师之一）讨论过这方面的问题。后来发现如果过于偏重剧情，玩法就弱了，于是对整体结构进行了调整。”</p>\n<p data-pid=\"UYNB0OIX\">“不过本来我们原定推出的下一个主题是《琅琊榜》，但‘贞子’上线后，玩家普遍希望我们继续做恐怖主题，这也算一种变相的认可吧。”</p>\n<p><img src=\"https://pica.zhimg.com/v2-c0a64ad21a2c36b86b0dd058b634d4ec_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"watermark\" data-original-src=\"v2-c0a64ad21a2c36b86b0dd058b634d4ec\" data-watermark-src=\"v2-3a73a3072951f8d1d657ad6e39a28733\" data-private-watermark-src=\"v2-be6f5f22193769cfe09d00874a58ecbd\"></p>\n<p data-pid=\"9q6zY-QI\">追赶潮流，也要保证质量</p>\n<p data-pid=\"QnKGTx4m\">尽管笑称这次设计沉浸式是为了跟上“大众的节奏”，不过即便如此，夜幕仍未放弃对质量的追求。</p>\n<p data-pid=\"fJi7w4lp\">以这次的《山村贞子》为例，从设计到上线，足足花了7个多月。同时即便主题已正式上线，目前仍在根据玩家的反馈进行调整优化。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-5c93e634b17dd59a93a595a34f6dfc44_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"watermark\" data-original-src=\"v2-5c93e634b17dd59a93a595a34f6dfc44\" data-watermark-src=\"v2-9db51ef34b5a20214279e740ef1e7eb9\" data-private-watermark-src=\"v2-556192b1ec3cf89b487604b3adab47dd\"></p>\n<p data-pid=\"hreSQ9dc\">据高先生自述，从14年入驻五道口至今，将近6年的时间，夜幕仅推出了6个作品，并且每个主题皆倾注了大量的精力与财力，为的就是能给玩家不断创造出更好的体验。</p>\n<p data-pid=\"F4uE6NeY\">“夜幕一直没走纯商业路线，这样做的好处在于能获得一些口碑，不过也因此失去了‘做生意’的本质：投资少，回报快。</p>\n<p><img src=\"https://pica.zhimg.com/v2-9696a2b25fa2cebf3819879a44e72479_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"watermark\" data-original-src=\"v2-9696a2b25fa2cebf3819879a44e72479\" data-watermark-src=\"v2-16cedf24b3a8191e82c813a5a7f7c0aa\" data-private-watermark-src=\"v2-a208e55aab5265990e7053f227479fc4\"></p>\n<p data-pid=\"DmmP9UrM\">另一方面，即便历经多次调整与测试，在高先生眼中，《山村贞子》仍未达到他的预期。</p>\n<p data-pid=\"fmTrSK5P\">“这次有些遗憾，毕竟是第一次做沉浸，经验不足导致心中的理想效果没达到。其实很多地方，我们还可以做得更好。”</p>\n<p data-pid=\"ukfWblvs\">不争，但自豪</p>\n<p data-pid=\"rzupU-bh\">拒绝一味追求利润的理念，让夜幕显得有些“与世无争”，而凭借优秀的主题质量，不仅让夜幕在当地的玩家群体中积攒了人气，同时也吸引了现在的合伙人——王女士。</p>\n<p><img src=\"https://picx.zhimg.com/v2-300f103e723c8ccf65d0f8cabf4c0257_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"938\" data-watermark=\"watermark\" data-original-src=\"v2-300f103e723c8ccf65d0f8cabf4c0257\" data-watermark-src=\"v2-45471a1bab5c01b9a00765a4cb43f981\" data-private-watermark-src=\"v2-0779b49bcc07a944002e434743d18219\"></p>\n<p data-pid=\"UmUFDp0j\">“我第一次玩过夜幕五道口店的主题后，就想着‘这么厉害的主题，要是宣传跟上一定能火啊’，但那时高老板的所有心思都在研发主题上。”</p>\n<p data-pid=\"BxGWG8mq\">“他设计的主题有个‘主旨’，即每个主题都能有一个机关给玩家留下深刻的印象，同时五道口这种‘古风解谜’的密室类型，至今都很吸引我。”</p>\n<p data-pid=\"ISrF8tyr\">“所以后来就有了我负责宣传推广，高老板负责研发的合作。”</p>\n<p><img src=\"https://pic1.zhimg.com/v2-ef17160e289c613ac4815181f4880cc2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"580\" data-rawheight=\"386\" data-watermark=\"watermark\" data-original-src=\"v2-ef17160e289c613ac4815181f4880cc2\" data-watermark-src=\"v2-3f6103e3e7de8e0422a3dbd2fcaa522e\" data-private-watermark-src=\"v2-72c55c3caf30297381a0d5364e94e73e\"></p>\n<p data-pid=\"X9-hgXoA\">同时，王女士还告诉我们，随着实景密室的发展日新月异，很多事情都在经历着“从无到有”的过程，经典的主题越来越多，玩家的喜好也在无形中推动着行业前行。</p>\n<p data-pid=\"5y2BUkGz\">这些都令她倍感骄傲。</p>\n<p data-pid=\"Fg65ct_Q\">“身处这个行业，虽然能尽的力不多，但我们想用心做好每一件事，呈现出更好的作品。”</p>\n<p data-pid=\"eidMpFZ6\">“我们希望通过这样的方式，让更多人喜欢密室，了解密室。而这不仅是我们的初心，也会是未来不变的努力方向。”</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/question/527674041/answer/2459820150?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\">知乎用户（登录查看详情）</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>延伸阅读：<br><a href=\"http://www.zhihu.com/question/527954887?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价密室逃脱游戏《七月》？你的游玩体验如何？</a><br><a href=\"http://www.zhihu.com/question/456391067?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">想找一个密室逃脱游戏?</a><br>\n","link":"http://www.zhihu.com/question/527674041/answer/2459820150?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"经济学博士怎么能有多篇working paper呢？","date":"2022-09-13 06:37:41","description":"\n<p data-pid=\"oYgw4Y5R\">数了一下</p>\n<p data-pid=\"LUXjkv3p\">我18年有第一篇文章 ，今年上市，到现在online available的一共10篇 (5 published+5 wp)，现在有3个work in progress (包括jmp，年底有2篇应该能放出来)，谷歌引用刚过100（都是靠ieee的文章）</p>\n<p data-pid=\"_77ISW-A\">===========</p>\n<p data-pid=\"QkKy7ndu\">第一经验就是要靠大腿（躺</p>\n<p data-pid=\"85972Lhz\">第二经验就是朋友们别做理论了————我从4月开始只收过拒信，哇</p>\n<p data-pid=\"WDlQzANE\">=========开玩笑===========</p>\n<p data-pid=\"01S0pZQA\">谈谈做纯理论的经验（纯理论的意思就是，你问我有啥用/现实意义 我就画饼你“加深我们对xx的理解，长期来看会有用”）  </p>\n<p data-pid=\"yM15VGqL\"><b><i>以下数字标签对应提问里的问题顺序</i></b></p>\n<p data-pid=\"02I4AMbs\">1-1） 做理论，尤其是axiomatic approach的，idea真的不难————你看你期望效用理论改个独立性就能那么多改法那么多文章，就知道idea多容易想了。你就当打解密游戏，屏幕上所有东西挨个点一遍，总会出来的嘛</p>\n<p data-pid=\"88piSRCw\">1-2）然后，做理论，门槛也不高————你想想你都沦落到经济学了，还能有什么技术难度，用再难的工具也就是用工具，就好像玩电脑不用你会造芯片一样</p>\n<p data-pid=\"oDmhfEWJ\">1-3）然后找合作者也不难，我现在合作过5波人（所以你看，还是要会抱腿），感想就是还是有很多人对理论/证明手法有需求，但是自己没精力(懒得想)，所以只要进了圈子，总会认识人的（当然怎么pua别人不让人拖延症是另一回事了）</p>\n<p><br></p>\n<p data-pid=\"lGmW-kek\">最难的还是怎么把文章卖出去————为什么关注这个模型，为什么提出这个假设，怎么合理排序文章架构，怎么把证明写干净etc</p>\n<p data-pid=\"uIi9tL8N\">3） 所以导师/senior的指导也该专注于此，你把成果带给人家看(我的场合，main thm + proof sketch)，然后大家坐下来商量怎么package它，预期的audience是什么样的人，用什么样的storyline，应该怎么emphasize你的结论，怎么defense （但是不overdefense）你新提出的notion，去哪些地方present (+谁掏钱)，怎么投稿 (publication strategy)</p>\n<p data-pid=\"AvPvUgAV\">这些东西主要靠经验 再天才也急不来 (哪怕你真有一个划时代的结论，它就一定能发好吗, e.g., <a href=\"https://zhuanlan.zhihu.com/p/29824049\" class=\"internal\">谢耳朵：漫画 | 那些年被拒稿过的诺奖研究...</a>)  不要想着一力降十会，出货是纯科研，发表就关于社交了</p>\n<p><br></p>\n<p data-pid=\"xYRKZnBC\">4） 然后就是不要有压力，我最有挑战性的一个证明(一个快30p的lemma，完全就是抡大锤砸锁，找不到简化方法，没有任何intuition，更别说econ sense了)就是洗澡时候想出来的，智慧女神不爱你的时候，你舔也没用，该吃吃该喝喝————所以还是要有钱，如果月薪有一狗，博士也是可以快乐的 （哇一下哭出来）</p>\n<p><br></p>\n<p><br></p>\n<p data-pid=\"-crwBhn4\">2） 因为是做axiomatic的iff thm，所以试错全都是靠证明————证不出来就加条件，证出来了就在简化过程中去掉不必要的条件</p>\n<p><br></p>\n<p><br></p>\n<p data-pid=\"e-osYEbH\">题外话：今年上市，有老板们看到了赏口饭吃啊 （哇哇哇的哭都哭不出来了）</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/question/536795472/answer/2669780758?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\">知乎用户（登录查看详情）</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/536795472/answer/2669780758?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">12 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/448207147?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">经济学博士阶段改如何学习，目标是在顶刊发文？</a><br><a href=\"http://www.zhihu.com/question/490932244?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">经济学类的硕士，硕士期间发paper对找工作的作用大吗？是否是把时间用在考证上更合适？</a><br>\n","link":"http://www.zhihu.com/question/536795472/answer/2669780758?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"经济学博士怎么能有多篇working paper呢？","date":"2022-09-13 06:36:50","description":"\n<p data-pid=\"0NDE0YiP\">1， 这个很正常。大多数欧美经济学博士的毕业要求就是要有three chapters，可以不发表。所以，但凡一个正常的博士毕业，找工作，都会在简历上放这3篇working paper(不讨论能否发表，质量如何)。博士毕业找工作，可写的不多，所以大家肯定都是能往上写就往上写。至于你说到的coauthor很多，因为北美博士是thesis comittee，成员可能有3，4个导师，一个chair。所以有多篇不同coauthor的论文是正常的。北美经济学博士大概需要6年毕业，前两年上课。不论你搜集数据做证明，跑代码需要多长时间，理论上一年多一篇论文是该有的进度，而且前期稍慢，后期会更快一些。英国三到四年，也基本是一年多一篇。英国这边是导师制，和国内很像，你的导师会和你meeting regularly，确保everything is on the track. 所以你毕业时，手上有个3，4篇working paper很正常。多的当然也有，但质量如何不做评价。 研究idea从何而来，有的时候是导师直接到时给大致的方向，有的时候是自己通过看论文，想出来的。 </p>\n<p data-pid=\"L1pqbwcG\">2 我是英国博士。博一就开始做研究。英国的制度是每半年检查。刚开始来的时候也不知道该做什么，就逮着导师的论文以及相关的论文疯狂的看，看了大概3个多月，才有一个初步的想法，找导师讨论。导师觉得可以，然后就开始做。大多数人第一篇论文的idea是最难的。研究刚起步，对相关领域文献不熟悉都是原因。一个idea最后能不能做出来，做的结果如何，都是没有人可以保证的。很多时候都是做着做着发现有各种各样的问题。大多数问题并不是简单的可以解决或者无法解决。而是有很多可以解决问题的办法，只是有的解决办法更好，有的更像是妥协而已。顶尖期刊的论文，大多数是对研究中出现的各种问题都能够比较好，或者巧妙的处理。对于博士而言，遇到问题实在解决不了，可以先妥协着解决一下，等以后自己的能力更强一点，回过头来在看能不能解决。写论文是一个非常长期的过程。要revise很多遍。</p>\n<p data-pid=\"vMyIdJQW\">3， 导师的指导取决于导师个人。但是个人经验就是，读博士就是自己成为一个独立researcher的过程。不要期待你遇到的问题导师都可以给你解决。更多的时候，导师是在你卡住的时候，给你一些解决问题可能尝试的思路，行不行，你要自己去试。或者在你写论文的过程中，不停的问你问题，有点像审稿人，提升你论文的质量。如果非要说一篇论文的工作分配，基本上90%都是你自己在操刀。但是这并不代表导师不重要。事实上，导师的工作很多时候起画龙点睛的作用。</p>\n<p data-pid=\"wHxlhFge\">4 个人经验，一定要多读论文。做研究没有捷径，想idea也没有捷径，就是多读论文。每天都要读，保持良好的阅读习惯。见得多了，你就知道怎么写论文了，怎么想idea了，自己写的论文大概能发表在什么级别的期刊上。</p>\n<p data-pid=\"g_ZkzkYq\">论文发表可遇不可求。但是有一点非常重要，就是要保持和导师的积极沟通。导师supervise你基本上纯做公益。大家都很忙的。所以，你必须足够努力，有效沟通，才能让导师愿意花更多的时间在你的research上。大多数导师要teaching，有family，自己有coauthor，带好几个博士，这么多工作同时进行。不要过多期待导师天天对你一对一进行指导，或者用心帮你思考你的问题该怎么解决。他们没有那么多时间，也没有那么多精力。所以，你必须足够努力，否则，导师也慢慢不会花时间你身上了。</p>\n<p data-pid=\"fA1kCyjU\">个人经验，希望对你有些帮助。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/chi-square-59?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">正念</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/536795472/answer/2640402550?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">12 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/448207147?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">经济学博士阶段改如何学习，目标是在顶刊发文？</a><br><a href=\"http://www.zhihu.com/question/490932244?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">经济学类的硕士，硕士期间发paper对找工作的作用大吗？是否是把时间用在考证上更合适？</a><br>\n","link":"http://www.zhihu.com/question/536795472/answer/2640402550?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"React 为什么重新渲染","date":"2022-09-06 08:29:00","description":"\n<p>更新（重新渲染）是 React 的重要特性 —— 当用户与应用交互的时候，React 需要重新渲染、更新 UI，以响应用户的输入。但是，React 为什么会重新渲染呢？如果不知道 React 为什么会重新渲染，我们如何才能避免额外的重新渲染呢？</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/186432/20/28325/37613/631725bbEf2ff226e/66b99021df66578b.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/react-re-renders-101/\">https://blog.skk.moe/post/react-re-renders-101/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/react-re-renders-101/"},{"title":"为什么你不应该在 React 中直接使用 useEffect 从 API 获取数据","date":"2022-08-19 08:53:00","description":"\n<p>React 是一个由 Facebook 开源的、可以在任意平台上构建 UI 的 JavaScript 库。在 React 中，一个常见的 Pattern 是使用 <code>useEffect</code> 搭配 <code>useState</code> 发送请求、将状态从 API（React 外部）同步到 React 内部、用于渲染 UI，这篇文章恰恰在向你介绍为什么你不应该直接这么做。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/180676/37/27394/27265/62ff57f2E600b3725/cff75c5fca39bbcc.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/\">https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/"},{"title":"NPM 自动更新版本号","date":"2022-08-04 05:00:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>ChenYFan 大佬的文章：<a href=\"https://blog.cyfan.top/p/d3c51290.html\">SpeedUp!使用黑科技为你的网站提速</a> 有提到过将 Hexo 博客的全部静态文件上传至 NPM 达到加速效果。</p>\n<p>但是 NPM 版本号不能重复，而且为了精准命中缓存和防止边缘 <code>@latest</code> 缓存过长，就必须指定版本号。</p>\n<p>本人在 <a href=\"https://blog.yfun.top/posts/2876015612/\">我的图床解决方案</a> 一文中使用的方法是 <code>npm version patch</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804133426.png\"></p>\n<p>但这个方法也有一些弊端，比如 <code>patch</code> 只会更新 <code>z</code> 位数的版本号，而且并不会上传至仓库，很可能会出现版本号冲突导致上传失败。这就是为什么最后还需要重新推送 Git 提交。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E8%AF%95%E8%AF%95%E7%9C%8B\" class=\"headerlink\" title=\"试试看\"></a>试试看</h2>\n<p>NPM 版本号遵循 <code>semver</code> 规范，格式为 <code>major.minor.patch</code>。</p>\n<p>为了在获取最新版本号的时候不发生混乱，我选择先获取最新的版本号。</p>\n<blockquote><p>记得把 <code>cky-blog-static</code> 改成自己的项目名。</p></blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>获取到最新版本号后，就可以对版本号进行分析。</p>\n<p>以 <code>1.4.7-b541af2ea284a39da0bbf63b88fdb65c</code> 为例，先按 <code>major.minor.patch</code> 分离。当然，也需要考虑版本号后还有 <code>build metadata</code> 的情况。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\"><span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br></pre></td></tr></table></figure><p><del>为了版本号好看些</del>，可以通过判断实现满十进一。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位小于 9，直接 +1</span></span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">} <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位大于等于 9，y 位小于 9，y+1, z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">} <span class=\"keyword\">else</span> {</span><br><span class=\"line\"><span class=\"comment\">// z 大于等于 9，y 大于等于 9，x+1,y=0,z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>最后，重新拼接版本号。如果担心服务器缓存版本号导致冲突，还可以加上一些随机字符串。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br></pre></td></tr></table></figure><p>将最新的版本号信息重新写入 <code>package.json</code> 文件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">packageJson.version = newVersion;</span><br><span class=\"line\"><span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p><del>直接 CV 代码！</del></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 更新 package.json 版本号</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fetch = <span class=\"built_in\">require</span>(<span class=\"string\">\"node-fetch\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> md5 = <span class=\"built_in\">require</span>(<span class=\"string\">\"js-md5\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> update = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">    verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(newVersion);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">    packageJson.version = newVersion;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">    fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Complete!!\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">update();</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%90%8E\" class=\"headerlink\" title=\"最后\"></a>最后</h2>\n<p>如果是 Hexo 文件部署，就可以直接把文件直接丢在项目根目录，Action 集成部署加上：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">node update.js</span><br></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804135818.png\"></p>\n<p><del>Blog 半年没更新，除除草 --(....</del></p>\n","link":"https://blog.yfun.top/posts/2022/auto-update-npm-version/"},{"title":"我有特别的 DNS 配置和使用技巧","date":"2022-07-28 15:31:00","description":"\n<p>众所周知，DNS 的作用与电话簿类似，将人类可读的域名映射到机器可读 IP 地址、使人更方便地访问互联网。DNS 是非常重要的互联网基础设施，对于改善上网冲浪的体验中的重要程度不容小觑。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/96381/31/31172/23930/62e2ab5bE554d388b/37027f4a03351b9e.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/i-have-my-unique-dns-setup/\">https://blog.skk.moe/post/i-have-my-unique-dns-setup/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/i-have-my-unique-dns-setup/"},{"title":"优化博客的累计布局偏移（CLS）问题","date":"2022-06-07 17:24:00","description":"\n<p>距离上一篇文章发布已有四个月了，是时候写几篇文章给博客除草了。上一次我介绍了我如何迁移、重构了我的博客的架构，这次我想来谈谈我在重构中优化和打磨访客体验时解决的一个问题。我的博客优化之旅 图片 lazyload 的学问和在 Hexo 上的最佳实践 我的博客有多快？ 天下武功，唯快不破 —— 我是这样优化博客的 ...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/206311/26/14625/38940/629f7f81Eb11312de/b1e67f07b1cc9bc7.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/fix-blog-cls/\">https://blog.skk.moe/post/fix-blog-cls/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/fix-blog-cls/"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\r\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\r\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\r\n    return new Date(date.toLocaleString('en-US', { timeZone }))\r\n}\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\r\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\r\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\r\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: '2-digit',\r\n        hour12: false,\r\n        timeZone\r\n    })\r\n    return {\r\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\r\n        convert (date) {\r\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\r\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\r\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\r\n        }\r\n    }\r\n}\r\n\r\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\r\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\r\n    return converter.convert(new Date(secDate), tzName) - secDate\r\n}\r\n\r\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\r\ncmn-Hans-SG = 中文普通话-简体-新加坡\r\ncmn-Hant-TW = 中文普通话-繁体-台湾\r\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\r\ncmn = 中文普通话\r\n\r\nzh-Hans = 中文-简体\r\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\r\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\r\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\r\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\r\n}\r\n\r\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long'\r\n}\r\nconst now = new Date()\r\n\r\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\r\n\r\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\r\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\r\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\r\n\r\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\r\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\r\n\r\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\r\n\r\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\r\n\r\nzhCNFormatter.format(now) // 2021年10月13日星期三\r\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\r\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\r\n\r\njaFormatter.format(now) // 2021年10月13日水曜日\r\njaAltFormatter.format(now) // 令和3年10月13日水曜日\r\n\r\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\r\n// {locale: 'zh-CN', calendar: 'gregory', …}\r\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\r\n     // 基于一个固定日期计算，这里选择 1970.1.1\r\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\r\n    const base = new Date(1970, 0, 1).getTime()\r\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\r\n    return Array.from({ length: 7 }, (_, day) =&gt; (\r\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\r\n    ))\r\n}\r\n\r\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\r\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\r\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    second: 'numeric',\r\n}).formatToParts(new Date())\r\n// [\r\n//     { type: 'year', value: '2021' },\r\n//     { type: 'literal', value: '年' },\r\n//     { type: 'month', value: '10' },\r\n//     { type: 'literal', value: '月' },\r\n//     { type: 'day', value: '13' },\r\n//     { type: 'literal', value: '日' },\r\n//     { type: 'weekday', value: '星期三' },\r\n//     { type: 'literal', value: ' ' },\r\n//     { type: 'dayPeriod', value: '上午' },\r\n//     { type: 'hour', value: '1' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'minute', value: '00' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'second', value: '00' }\r\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\r\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\r\n}\r\n\r\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\r\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\r\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\r\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\r\n  timeZone: 'America/Los_Angeles',\r\n  year: 1995,\r\n  month: 12,\r\n  day: 7,\r\n  hour: 3,\r\n  minute: 24,\r\n  second: 30,\r\n  millisecond: 0,\r\n  microsecond: 3,\r\n  nanosecond: 500,\r\n  calendar: 'iso8601'\r\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"\n<p>WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将其表述为 \"An API for accessing Public Key Credentials\"，即“一个用于访问公钥凭证的 API”。WebAuthn 很强大，强大到被认为是 Web 身份认证的未来（当然，也很复杂）。你有想过通过指纹或者面部识别来登录网站吗？WebAuthn 就能在保证安全和隐私的情况下让这样的想法成为现实。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\" alt=\"通过 WebAuthn 调起 Windows Hello 登录网站\" width=\"1912\" height=\"966\" class=\"aligncenter size-full wp-image-2215\"></a>\n<p>你可以在<a href=\"https://webauthn.io/\" rel=\"noopener\">这个网站</a>自行体验 WebAuthn。或者，如果你有一个使用 WordPress 的站点，可以尝试一下 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WP-WebAuthn</a> 这款插件，它可以为你的站点启用 WebAuthn 登录。这是我为了写这篇文章而练手开发的插件，本文中的部分示例代码也来自这款插件。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"wp-webauthn\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/wp-webauthn\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>WebAuthn Level 1 标准已在 2019 年 3 月成为 W3C 推荐标准，而 Level 2 标准目前也已进入编辑草案阶段，但互联网上有关它的中文资料却仍然很少，国内也鲜有网站支持这一新标准。于是，在抱着各种英文资料和标准啃了几天以后，我折腾出了这篇文章。</p>\n<p>在这篇文章里，我将会从最基本的概念开始，逐渐深入 WebAuthn，直到解码公钥等深层细节。这可能是你能找到的有关 WebAuthn 最详细最基础的中文文章，也很可能是最长的。在开始之前，<strong>我强烈建议你打开菜单中的文章目录浏览一遍，以对这篇文章涉及的内容有所了解。</strong>如果你只是想了解如何简单地在你的项目中添加对 WebAuthn 的支持，那么“<a href=\"https://flyhigher.top/#webauthn-overview\">浅谈 WebAuthn</a>”部分就是你要找的；如果你想了解更多关于 WebAuthn 的底层细节，那么你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分。</p>\n<p>由于在本文写作时 WebAuthn Level 2 规范尚未定稿，<strong>这篇文章我们将只专注于 Level 1 规范。</strong></p>\n<p>这篇文章最后更新于 2020.9 ，在你读到这篇文章时，部分事实可能已经发生改变，请注意判断。</p>\n<p><strong>更新日志：</strong></p>\n<ul>\n<li>2021.1.16 添加 Chrome 开发工具信息</li>\n<li>2020.9.17 更新 iOS/iPad OS 兼容性信息</li>\n<li>2020.5.20 添加部分无用户名认证的平台兼容性内容</li>\n<li>2020.5.15 添加部分 <code>extensions</code> 相关内容与链接；添加全局凭证 ID 唯一内容；添加凭证 ID 查找相关内容；添加“从 U2F 认证迁移”一节</li>\n<li>2020.4.13 更新与修正 <code>userVerification</code> 相关内容；添加部分 Firefox 相关内容</li>\n<li>2020.3.23 文章发布</li>\n</ul>\n<p>那么让我们开始吧。<span></span></p>\n<h1>浅谈 WebAuthn</h1>\n<p>在这个部分里，我们将会从基础概念开始，了解有关 WebAuthn 和密码学的一些基础知识，并最终使用第三方库实现基础的 WebAuthn 认证。如果你已经对这些内容有所了解了，可以跳到“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”继续阅读。</p>\n<h2>为什么使用 WebAuthn</h2>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\" alt=\"钓鱼邮件\" width=\"709\" height=\"693\" class=\"aligncenter size-full wp-image-2162\"></a>\n<p>相信你一定收到过类似的邮件吧？只要你点进那个最显眼的链接，你就会进入一个设置好的圈套——钓鱼网站。如果你一时糊涂在这类网站上填写了你的账号和密码，bingo，你的账号就不再是你的账号了。</p>\n<p>不过，就算你警惕心再强，也无法避免密码泄露事件。Twitter, Facebook 等都爆出过明文密码泄露事件，证明再大的公司或组织也无法避免密码泄露问题。雪上加霜的是，很大一部分用户都非常喜欢使用重复密码，这就导致一次密码泄露会牵连很多网站，用户的账户安全性完全无法得到保证。</p>\n<p>那么，有什么办法解决这些问题吗？<strong>彻底解决的方法只有一个，那就是抛弃密码。</strong>可是没有密码还怎么验证用户身份呢？这就是 WebAuthn 的用武之地了。</p>\n<p><del>没有密码的好时代，来临力！</del></p>\n<h2>什么是 WebAuthn</h2>\n<p>那么到底什么是 WebAuthn 呢？如开头所说，WebAuthn 是“一个用于访问公钥凭证的 API”，网站可以通过这个 API 进行一些高安全性的身份验证。WebAuthn 一个最常见的应用就是用于网站登录时的 2FA（双重因素验证）甚至是无密码登录。通过网页调用 WebAuthn，在不同平台下，<strong>我们可以实现通过 USB Key、指纹、面部甚至虹膜扫描来认证身份，同时确保安全和隐私。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\" alt=\"WebAuthn 可使用的各种身份认证方式\" width=\"1294\" height=\"566\" class=\"aligncenter size-full wp-image-2213\"></a>\n<p>WebAuthn 标准是 FIDO2 标准的一部分，而 FIDO2 则是由 FIDO 联盟和 W3C 共同推出的 U2F（现称作 FIDO1）的后继标准，旨在增强网络认证的安全性。</p>\n<blockquote><p>你可能了解过 U2F，那么 U2F 和 FIDO2 的区别在哪里呢？从名字上可以看出，U2F，即“通用第二因素协议”，是专注于作为密码后的第二道屏障的，而 FIDO2 增加了单因素认证功能，这意味着使用 FIDO2 可以完全替代密码，真正实现无密码登录。</p></blockquote>\n<p>FIDO2 标准主要包括四个部分，其一是用于网站和访客设备交互的 WebAuthn，而 Client to Authenticator Protocol 2（CTAP2，客户端-认证器协议）作为 WebAuthn 的补充，则是用于访客的设备和认证器交互的协议。标准的其他两个部分则是 U2F 和 UAF 规范。在这篇文章中，我们只关心 WebAuthn，不会涉及 CTAP, U2F 和 UAF 的相关知识。如果你对这段话中的一些概念不了解，不要紧张，接下来我们就来谈谈 WebAuthn 中一些常用的术语和概念。</p>\n<blockquote><p>WebAuthn 只能在安全上下文中使用，也就是说，页面需要使用 HTTPS 协议或是处于 <code>localhost</code> 中。</p></blockquote>\n<h2>常用术语和概念</h2>\n<p>WebAuthn 中有许多不常碰到的术语，不过我只会在这里介绍一些常用的术语和概念——如果你只是希望做出一个简单的实现，那么了解这一段中的一些概念就足够了。同时，由于我实在没能找到一部分术语的通用翻译，有一些术语我按着自己的理解尽可能地翻译了，有任何问题请告诉我。</p>\n<p>在一个完整的 WebAuthn 认证流程中，通常有这么几个角色：</p>\n<ul>\n<li>Relying Party 依赖方 (RP) ：指服务提供方，即网站</li>\n<li>User 用户：正准备登录的你</li>\n<li>Authenticator 认证器：通常指 USB Key 或是设备内置的指纹扫描器、虹膜扫描器、面部识别装置等，正是它们在使用流程中代替了密码甚至是用户名</li>\n<li>User Agent 用户代理：通常指浏览器或系统，负责与认证器交互</li>\n</ul>\n<p>认证过程通常分为两种：</p>\n<ul>\n<li>Registration Ceremony 注册仪式：用户向账户上添加认证器</li>\n<li>Authentication Ceremony 验证仪式：用户通过已注册的认证器验证身份</li>\n</ul>\n<p>同时，认证过程中还会产生这些内容：</p>\n<ul>\n<li>Challenge 挑战：通常是一串随机字符串</li>\n<li>Public Key Credential 公钥凭证：由认证器产生的凭证，在技术上代替了密码</li>\n<li>Attestation 证明：注册时认证器产生的验证数据</li>\n<li>Assertion 断言：验证时认证器产生的验证数据</li>\n</ul>\n<blockquote><p><strong>请注意区分证明 (Attestation) 和断言 (Assertion)</strong>，特别是在这两个单词有些相似的情况下。在 WebAuthn 中，它们是不同过程中的类似概念，但并不相同。</p></blockquote>\n<p>如果你对于这些内容不是很理解，没有关系，我们会在“<a href=\"https://flyhigher.top/#how-to-webauthn\">使用流程</a>”一节中将这些概念放到实际情况中解释，你只要先区分这些概念即可。</p>\n<h2>安全性的基础</h2>\n<p>WebAuthn 为什么安全？和 HTTPS 一样，WebAuthn 使用非对称加密的思路来保证安全性，但侧重点又有所不同。要理解 WebAuthn 的认证流程，我们必须对非对称加密有所了解。如果你对非对称加密比较熟悉了，就直接跳到下一段吧。</p>\n<p>WebAuthn 的核心在于“认证”，即保证产生了凭证的认证器是用户的认证器，而不是第三方在伪造凭证。但为什么要使用非对称加密呢？我们可以先来看看对称加密。</p>\n<p>让我们假设小明和小红相互写信，见不到对方。这天小红突然想，给自己写信的人是不是真的小明呢？于是小红要求对方向小红证明自己是小明。怎么证明呢？他们商量出来这么一套方案：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明和小红商量一个统一的密码和密钥</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明用提前和小红商量好的密码和密钥加密文本后发回给小红</li>\n<li>小红使用相同的密码和密钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和密钥</li>\n</ol>\n<blockquote><p>在密码学中，我们通常把“加密算法”称为密码 (code)，和通常登录时用的密码 (password) 并非同一个概念。</p></blockquote>\n<p>在这种情况下，<strong>只要密钥不泄露</strong>，即拥有正确密钥的只有小明和小红，那么小红就能确定对方一定是小明。但这样的问题也很明显，如果小明和小红不能见面，那么他们就必须先以明文交换密码——<strong>在这个过程中一旦有人窃取到了密码，这个认证就无效了。</strong></p>\n<p>这时我们就需要使用<strong>非对称加密</strong>来拯救破碎的信任了。非对称加密的基础是一对密钥，也就是公钥和私钥，它们是互相关联但（几乎）无法互相推导的。在非对称加密的过程中，选择相同的密码后，使用私钥加密明文得到的密文只能由对应的公钥解密，无法使用私钥解密，同时这个过程反过来也是成立的。</p>\n<blockquote><p>本文的核心并不是非对称加密算法，因此不会详述非对称加密在数学上的证明，若有兴趣可以自行了解。</p></blockquote>\n<p>这就完美解决密钥泄露的问题了。让我们回过头来看之前的例子。现在小明和小红决定使用非对称加密来证明身份，过程如下：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明提前生成一对公私钥，将公钥发送给小红，私钥自己保管，同时商量好统一的密码</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明使用商量好的密码和自己的私钥加密文本，发送给小红</li>\n<li>小红使用相同的密码和小明的公钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和私钥</li>\n</ol>\n<p>在这种情况下，<strong>只要私钥不泄露</strong>，那么小红解密得到的文本和之前发送的一致，那么就可以证明收到的密文一定是由小明加密后发送过来的。而在整个过程中，私钥都没有离开过小明，更没有经过传输，也就几乎没有泄露的可能了。这时，小红终于可以确定对面和她通信的人的确是小明了。</p>\n<p>题外话：HTTPS 虽然也应用了非对称加密，但 HTTPS 更侧重于“加密”而非“认证”，因此思路上会有些许差异。要了解关于 HTTPS 和非对称加密的更多信息，你可以阅读我之前写的这篇文章：</p>\n<p></p>\n<div class=\"mdx-post-cot\" data-mdxposturl=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdx-post-wait-out-c2\"><div class=\"mdx-post-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<span></span>\n<h2>使用流程</h2>\n<p>了解了非对称加密，我们就可以来看看 WebAuthn 的认证流程了。</p>\n<p>和普通的密码一样，<strong>使用 WebAuthn 分为两个部分，注册和验证。</strong>注册仪式会在依赖方中将认证器的一些信息和用户建立关联；而验证仪式则是验证这些信息以登确保是用户本人在登录。根据上一节的思路，我们可以知道，注册仪式就是认证器生成一对公私钥，然后将公钥交给依赖方；而验证仪式是依赖方发送给认证器一段文本，要求认证器用自己的私钥加密后发回以验证。</p>\n<p>在实际情况中，WebAuthn 是基于<strong>挑战-应答模型</strong>工作的。要更好地理解，我们直接来看具体流程。先来看看注册的流程。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\" alt=\"WebAuthn 注册流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2224\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的注册请求</li>\n<li>依赖方向浏览器发送挑战、依赖方信息和用户信息</li>\n<li>浏览器向认证器发送挑战、依赖方信息、用户信息和客户端信息以请求创建公钥凭证</li>\n<li>认证器请求用户动作，随后创建一对公私钥，并使用私钥签名挑战（即证明），和公钥一起交给浏览器</li>\n<li>浏览器将签名后的挑战和公钥发送给依赖方</li>\n<li>依赖方用公钥验证挑战是否与发送的一致，如果成功则将公钥与用户绑定，注册完成</li>\n</ol>\n<p>我也做了一个交互式的 Demo，你可以对照流程来更好地理解。</p>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\">开始注册</button> <span></span></p>\n<div></div>\n<blockquote><p>注意，这个 Demo 和下方的 Demo 都只是一个本地模拟的简单示例，没有任何数据会被上传，当然也不会对数据进行验证。</p></blockquote>\n<p>而之后的验证流程如下：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\" alt=\"WebAuthn 验证流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2226\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的验证请求</li>\n<li>依赖方向浏览器发送挑战</li>\n<li>浏览器向认证器发送挑战、依赖方信息和客户端信息以请求获取公钥凭证</li>\n<li>认证器请求用户动作，随后通过依赖方信息找到对应私钥，并使用私钥签名挑战（即断言），交给浏览器</li>\n<li>浏览器将签名后的挑战发送给依赖方</li>\n<li>依赖方用之前存储的公钥验证挑战是否与发送的一致，一致则验证成功</li>\n</ol>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\" disabled>开始验证</button> <span>在上方注册后才能验证</span></p>\n<div></div>\n<p>可以看到，WebAuthn 不仅在理论上是安全的，同时<strong>在整个过程中并没有隐私数据被传输</strong>——用户信息实际上只包含用户名和用户 ID。因此我们完全可以说 WebAuthn 是安全且私密的。</p>\n<blockquote><p>为了避免用户在不同依赖方之间被追踪，认证器通常会为每个依赖方和用户的组合都创建一对公私钥。不过，由于认证器的存储空间有限，认证器通常不会存储每一个私钥，而是会通过各类信息和烧录在认证器内的主密钥“算”出对应的私钥以实现无限对公私钥。具体算法根据不同厂商会有所不同。对于 Yubikey，你可以在<a href=\"https://developers.yubico.com/U2F/Protocol_details/Key_generation.html\">这里</a>了解更多。</p></blockquote>\n<blockquote><p>如果依赖方需要，用户同意后，发送给依赖方的公钥凭证中可以包含用于辨认认证器型号的信息，不过这对隐私的影响微乎其微。</p></blockquote>\n<h2>浏览器接口</h2>\n<p>要使用 WebAuthn，我们必须要依靠浏览器作为媒介和验证器进行交互，而这就需要浏览器对于 WebAuthn 的支持了。绝大多数新版本的现代浏览器都为 WebAuthn 提供了统一的接口，而在这一段中我们会了解如何使用相关的接口。但是在开始之前，我们可以先来看看浏览器的支持程度（2020.9）。</p>\n<div class=\"mdui-table-fluid\"><table class=\"mdui-table\">\n<thead><tr>\n<th>浏览器</th>\n<th>支持情况</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>桌面端 Chrome</td>\n<td>67+</td>\n</tr>\n<tr>\n<td>移动端 Chrome</td>\n<td>67+<sup>[1]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Firefox</td>\n<td>60+</td>\n</tr>\n<tr>\n<td>移动端 Firefox</td>\n<td>不支持<sup>[2]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Edge</td>\n<td>18+</td>\n</tr>\n<tr>\n<td>移动端 Edge</td>\n<td>不支持<sup>[3]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Safari</td>\n<td>13+</td>\n</tr>\n<tr>\n<td>移动端 Safari</td>\n<td>13.3+<sup>[4]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Opera</td>\n<td>54+</td>\n</tr>\n<tr>\n<td>移动端 Opera</td>\n<td>不支持</td>\n</tr>\n</tbody>\n</table></div>\n<p><sup>[1]</sup> 受平台限制，Chrome 在 iOS 平台上不支持 WebAuthn，在 Android 平台上支持大部分 WebAuthn 功能，但仍不支持部分特性（如 <code>userVerification</code>）。<br><sup>[2]</sup> 移动端 Firefox 80 以下的版本支持 WebAuthn 但似乎会忽略 <code>authenticatorAttachment</code> 等一部分参数，同时移动端 Firefox Beta 80 以下的版本支持 WebAuthn 但无法成功调用。自 80 版本起移动端 Firefox 暂时取消了对 WebAuthn 的支持（可能是 Bug）。<br><sup>[3]</sup> 移动端 Edge 似乎支持 WebAuthn 但无法成功调用。<br><sup>[4]</sup> Safari iOS/iPad OS 13 仅支持外部认证器，无法调用 Touch ID 或 Face ID；自 iOS/iPad OS 14 起 Safari 已支持全功能 WebAuthn，可以调用 Touch ID/Face ID</p>\n<p>当然，一众国产浏览器，包括 Samsung Browser 和 Yandex Browser，目前都不支持 WebAuthn。此外，由于 WebAuthn 涉及外部验证器和 TPM 可信平台模块等，用户的操作系统也会对 WebAuthn 的可用性造成影响。以下是一些需要注意的信息：</p>\n<ul>\n<li>Windows 10 1903 以下版本仅 Edge 能提供完整支持，其他浏览器只能使用 USB Key 等外部认证器；1903+ 中所有浏览器都可以通过 Windows Hello 带来完整的 WebAuthn 支持</li>\n<li>Android 需要安装并开启 Google 服务</li>\n<li>iOS/iPad OS 13.3 以下的版本不支持 WebAuthn，iOS/iPad OS 14 以下的版本支持有限（参考上文），iOS/iPad OS 14 开始 Safari 已支持全功能 WebAuthn（功能完整度甚至超过了 Android）</li>\n</ul>\n<p>可以看出，WebAuthn 的发展之路仍然很漫长，但好在桌面端对它的支持已经比较完善了，在一些情况下我们完全有理由使用它。</p>\n<hr>\n<p>来看看浏览器提供了怎么样的接口吧。要使用 WebAuthn，我们可以使用 <code>navigator.credentials.create()</code> 请求认证器生成公钥凭证和 <code>navigator.credentials.get()</code> 请求获取公钥凭证。</p>\n<blockquote><p>你或许已经对 Credential Management API 有所了解了。通过这些 API，我们还可以实现一些有趣的特性，不过这值得另开一篇文章来讲了。</p></blockquote>\n<p>对于一个基础的实现，<code>navigator.credentials.create()</code> 需要传入的参数如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        challenge,\r\n        rp: {\r\n            id,\r\n            name\r\n        },\r\n        user: {\r\n            id,\r\n            name,\r\n            displayName\r\n        },\r\n        pubKeyCredParams: [\r\n            {\r\n                type: \"public-key\",\r\n                alg\r\n            }\r\n        ],\r\n        authenticatorSelection: {\r\n            authenticatorAttachment,\r\n            userVerification\r\n        },\r\n        excludeCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>在 <code>navigator.credentials.create()</code> 方法中，我们必须传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值。这指明了我们需要创建公钥凭证，而非普通的密码凭证。然后，在 <code>publicKey</code> 对象中设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rp: Object</code>：依赖方信息，其中有一项为必须：\n<ul>\n<li>\n<code>rp.id: String</code>：（可选）依赖方 ID，必须为当前域名或为当前域名的子集的域名（不是子域名）。如域名为 <code>test.123.example.com</code>，则依赖方 ID 可以是 <code>test.123.example.com</code>, <code>123.example.com</code> 或 <code>example.com</code>。不指定则默认使用当前域名</li>\n<li>\n<code>rp.name: String</code>：依赖方名称，用于方便用户辨认</li>\n</ul>\n</li>\n<li>\n<code>user: Object</code>：用户信息，其中有三项为必须：\n<ul>\n<li>\n<code>user.id: Uint8Array</code>：转换为 <code>Uint8Array</code> 的字符串。<strong>出于安全考量，这应尽可能不与任何用户信息相关联，如不要包含用户名、用户邮箱等</strong>\n</li>\n<li>\n<code>user.name: String</code>：登录用户名</li>\n<li>\n<code>user.dispalyName: String</code>：用于显示的用户名称，显示与否的具体行为取决于浏览器</li>\n</ul>\n</li>\n<li>\n<code>pubKeyCredParams: Array</code>：一个算法列表，指明依赖方接受哪些签名算法。列表的每一项都是一个对象，拥有两个属性：\n<ul>\n<li>\n<code>pubKeyCredParams[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>pubKeyCredParams[].alg: Number</code>：一个负整数，用于标明算法。具体算法对应的数字可以在 <a href=\"https://www.iana.org/assignments/cose/cose.xhtml#algorithms\">COSE</a> 找到</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection: Object</code>：（可选）用于过滤正确的认证器，这里介绍常用的一个参数：\n<ul>\n<li>\n<code>authenticatorSelection.authenticatorAttachment: String</code>：（可选）指定要求的认证器类型。如果没有满足要求的认证器，认证可能会失败。该参数可以为 <code>null</code>（表示接受所有类型的认证器）或是以下两个值之一：\n<ul>\n<li>\n<code>platform</code>：表示仅接受平台内置的、无法移除的认证器，如手机的指纹识别设备</li>\n<li>\n<code>cross-platform</code>：表示仅接受外部认证器，如 USB Key</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection.userVerification: String</code>：（可选）指定认证器是否需要验证“用户为本人 (User Verified, UV)”，否则只须“用户在场 (User Present, UP)”。具体验证过程取决于认证器（不同认证器的认证方法不同，也有认证器不支持用户验证），而对验证结果的处理情况则取决于依赖方。该参数可以为以下三个值之一：\n<ul>\n<li>\n<code>required</code>：依赖方要求用户验证</li>\n<li>\n<code>preferred</code>：（默认）依赖方希望有用户验证，但也接受用户在场的结果</li>\n<li>\n<code>discouraged</code>：依赖方不关心用户验证。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>excludeCredentials: Array</code>：（可选）用于标识要排除的凭证，可以避免同一个用户多次注册同一个认证器。如果用户试图注册相同的认证器，用户代理会抛出 <code>InvalidStateError</code> 错误。数组中的每一项都是一个公钥凭证对象，包含以下属性：\n<ul>\n<li>\n<code>excludeCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>excludeCredentials[].id: Uint8Array</code>：要排除的凭证 ID</li>\n<li>\n<code>excludeCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，超时后将强制终止 <code>create()</code> 并抛出错误。若不设置，将使用用户代理的默认值；若太大或太小，则使用最接近的用户代理默认值范围中的值。推荐值为 5000-120000</li>\n</ul>\n<blockquote><p>对于 <code>pubKeyCredParams</code>，通常我们只需添加 ES256 (alg: -7) 算法即可兼容大部分外部认证器，此外，再添加 RS256 (alg: -257) 算法即可兼容大部分平台内置认证器（如 Windows Hello）。当然，前端添加算法之后，后端也需要相应的算法支持。</p></blockquote>\n<blockquote><p>对于 <code>userVerification</code>，由于默认值 \"preferred\" 并不能很好地被所有设备支持，因此无论在 <code>create()</code> 中还是 <code>get()</code> 中不指定该参数都会在 Chrome 中触发一条警告。具体请参阅<a href=\"https://chromium.googlesource.com/chromium/src/+/master/content/browser/webauth/uv_preferred.md\">这个页面</a>。</p></blockquote>\n<p>调用 <code>create()</code> 之后，我们就可以拿到一个 <code>Promise</code>，并可以在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>create()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAttestationResponse {\r\n        attestationObject: ArrayBuffer(390) {},\r\n        clientDataJSON: ArrayBuffer(121) {}\r\n    },\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\",\r\n    type: \"public-key\"\r\n}</pre>\n<p>其中有：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：<code>AuthenticatorAttestationResponse</code> 对象，是 <code>PublicKeyCredential</code> 的主要部分，包含以下两个内容：\n<ul>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n<li>\n<code>response.attestationObject: ArrayBuffer</code>：CBOR 编码的认证器数据，包含凭证公钥、凭证 ID、签名（如果有）、签名计数等信息</li>\n</ul>\n</li>\n</ul>\n<p>然后将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串，我们就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证与注册了。具体怎么操作，我们会在下文详细讨论。当然，别忘了 <code>catch()</code> 注册过程中抛出的任何错误。</p>\n<blockquote><p>你可能会认为在所有情况下，注册时认证器都会对挑战进行签名。实际上在大部分情况下（同时也是默认情况），<strong>注册时认证器并不会对挑战进行签名</strong>，<code>attestationObject</code> 并不会包含签名后的挑战。只有依赖方明确要求证明且用户同意（部分浏览器要求）后认证器才会对挑战进行签名（具体实现据情况会有所不同）。对此，<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion#Attestation\">MDN 解释道</a>“大部分情况下，用户注册公钥时我们会使用「初次使用时信任模型」(TOFU) ，此时验证公钥是没有必要的。”要了解更多关于证明的内容，请参阅“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>而对于 <code>navigator.credentials.get()</code>，我们可以传入如下的参数：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.get({\r\n    publicKey: {\r\n        challenge,\r\n        rpId,\r\n        userVerification,\r\n        allowCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>和 <code>create()</code> 一样，对于 <code>get()</code> 我们需要传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值，指明我们需要获取的是公钥凭证而非普通的密码凭证。在 <code>publicKey</code> 对象中我们可以设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rpID: String</code>：（可选）依赖方 ID，需要和注册认证器时的一致。规则和上述的 <code>rp.id</code> 一致，不指定默认使用当前域名</li>\n<li>\n<code>userVerification: String</code>：和上文一样，只是需要注意它这次不在 <code>authenticatorSelection</code> 中了</li>\n<li>\n<code>allowCredentials: Array</code>：（可选）用于标识允许的凭证 ID，使用户代理找到正确的认证器。只有符合这个列表中凭证 ID 的凭证才能被成功返回。数组中的每一项都是对象，包含以下属性：\n<ul>\n<li>\n<code>allowCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>allowCredentials[].id: Uint8Array</code>：允许的凭证 ID</li>\n<li>\n<code>allowCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，和上面的一样，推荐值为 5000-120000</li>\n</ul>\n<p>嗯，要传入的参数少多了。之后，和 <code>create()</code> 一样，调用 <code>get()</code> 之后，我们就可以拿到一个 <code>Promise</code> 并在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>get()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAssertionResponse {\r\n        authenticatorData: ArrayBuffer(37) {},\r\n        signature: ArrayBuffer(256) {},\r\n        userHandle: ArrayBuffer(64) {},\r\n        clientDataJSON: ArrayBuffer(118) {}\r\n    }\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\"\r\n    type: \"public-key\"\r\n}</pre>\n<p>这里的东西就比 <code>create()</code> 时拿到的要多了。看看我们拿到了什么吧：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：对于验证流程，认证会返回 <code>AuthenticatorAssertionResponse</code> 而不是 <code>AuthenticatorAttestationResponse</code> 对象，这个对象包含以下 4 个属性：\n<ul>\n<li>\n<code>response.authenticatorData: ArrayBuffer</code>：认证器信息，包含认证状态、签名计数等</li>\n<li>\n<code>response.signature: ArrayBuffer</code>：被认证器签名的 <code>authenticatorData</code> + <code>clientDataHash</code>（<code>clientDataJSON</code> 的 SHA-256 hash）</li>\n<li>\n<code>response.userHandle: ArrayBuffer</code>：<code>create()</code> 创建凭证时的用户 ID <code>user.id</code>。许多 U2F 设备不支持这一特性，这一项将会是 <code>null</code>\n</li>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n</ul>\n</li>\n</ul>\n<p>同样地，我们将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串后就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证了。至于具体怎么做，别急，马上就来讲一讲。</p>\n<h2>简单实现</h2>\n<p>了这么多，我们终于可以实现一个简单的 WebAuthn 认证页面了。由于在实际操作中 WebAuthn 相关的数据解码和密码计算比较复杂，在服务器端我们可以使用第三方库来帮我们做这些脏活累活，我们只需专注于具体流程就可以了。</p>\n<p>要寻找可用的第三方库，你可以在 <a href=\"https://webauthn.io/\">webauthn.io</a> 上找到适用于各种语言的第三方库——除了 PHP（笑）。不过好在你可以在 GitHub 上找到几个不错的 PHP WebAuthn 库，比如 <a href=\"https://github.com/web-auth/webauthn-framework\">web-auth/webauthn-framework</a>。</p>\n<p>在我们的这个例子中，我们关心的主要是前端逻辑；而后端我们可以使用各类几乎已经做到开箱即用的第三方库，这样我们可以专注于流程而不必关心细节。当然如果你想了解后端的解码细节，可以阅读“<a href=\"https://flyhigher.top/#webauthn-decode\">手动解个码</a>”一节。</p>\n<hr>\n<p>让我们先从注册开始吧。现在，用户点击了注册认证器的按钮，一个请求被发送给服务器（也就是依赖方）。在最简单的情况中，依赖方需要将三个内容发送给浏览器：<strong>挑战、用户信息和用户已注册的凭证 ID 列表（即 <code>excludeCredentials</code>）</strong>。当然依赖方也可以自由选择发送更多信息，只要最终前端能构建合法的参数即可。</p>\n<p>挑战最终会被转换为 <code>Uint8Array</code>，即一组 0-255 的整数。如果使用 PHP，在后端我们可以这样生成 Base64 编码的挑战：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"php\">$challenge = \"\";\r\nfor($i = 0; $i \n<p>对于用户信息，我们需要登录名、显示名称和 ID 三项内容。我们可以从数据库中取出用户信息，也可以新建一份。需要注意的是，<strong>出于安全和隐私的考量，ID 不应该包含用户的任何信息，比如用户邮箱等。</strong>推荐的做法是和挑战一样，生成一个随机字符串/一组随机数，并将其于用户关联起来以供之后使用。</p>\n<p>发送已注册的凭证 ID 列表是为了防止用户重复注册同一个认证器。正确设置该列表后，如果用户试图注册同一个认证器，浏览器会中止流程并抛出 <code>InvalidStateError</code>。</p>\n<p>最后，别忘了将挑战等一些后续可能会用到的信息临时存储起来。Session 就是一个很好的选择。</p>\n<p>将所有信息发送到浏览器之后，我们应该可以构建出新建凭证所需的参数了。由于有多个参数需要以 <code>Uint8Array</code> 的形式传入，我们可以准备一个简单的工具函数帮我们将 Base64 的字符串转为 <code>Uint8Array</code>。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function str2ab(str){\r\n    return Uint8Array.from(window.atob(str), c=&gt;c.charCodeAt(0));\r\n}</pre>\n<p>除了 <code>challenge</code>, <code>rp</code>, <code>user</code> 和 <code>excludeCredentials</code> 几部分需要你根据具体情况设置外，上文提到的其他参数一般可以这么设置：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">publicKey: {\r\n    challenge, // 自行设置\r\n    rp, // 自行设置\r\n    user, // 自行设置\r\n    pubKeyCredParams: [\r\n        {\r\n            type: \"public-key\",\r\n            alg: -7 // ES256\r\n        },\r\n        {\r\n            type: \"public-key\",\r\n            alg: -257 // RS256\r\n        }\r\n    ],\r\n    authenticatorSelection: {\r\n        userVerification: \"discouraged\",\r\n        authenticatorAttachment: null // 除非用户指定，大部分情况下无需指定\r\n    },\r\n    excludeCredentials, // 自行设置\r\n    timeout: 60000\r\n}</pre>\n<p>然后就是传入 <code>navigator.credentials.create()</code>，拿到 <code>PublicKeyCredential</code>。如果一切顺利，接下来我们就需要考虑如何将返回的内容传回依赖方了。由于我们拿到的很多都是 <code>ArrayBuffer</code>，我们需要将其进行编码。再准备一个工具函数吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function array2b64String(a) {\r\n    return window.btoa(String.fromCharCode(...a));\r\n}</pre>\n<p>然后适当处理，我们就可以得到一个方便传输的 JSON 字符串了：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({publicKey}).then((credentialInfo) =&gt; {\r\n    const publicKeyCredential = {\r\n        id: credentialInfo.id,\r\n        type: credentialInfo.type,\r\n        rawId: array2b64String(new Uint8Array(credentialInfo.rawId)),\r\n        response: {\r\n            clientDataJSON: array2b64String(new Uint8Array(credentialInfo.response.clientDataJSON)),\r\n            attestationObject: array2b64String(new Uint8Array(credentialInfo.response.attestationObject))\r\n        }\r\n    };\r\n    return publicKeyCredential;\r\n}).then(JSON.stringify).then((authenticatorResponseJSON) =&gt; {\r\n    // 可以发送了\r\n}).catch((error) =&gt; {\r\n    console.warn(error); // 捕获错误\r\n})</pre>\n<p>依赖方收到数据以后，还需要做三件事：验证挑战、存储凭证 ID 和存储公钥。如果数据解码顺利，且收到的挑战和之前发送的一致，就可以认为注册成功，将凭证 ID 及公钥与用户关联起来。这一步有很多第三方库可以帮我们做，对于基础实现我们就不深入探究了。</p>\n<blockquote><p>由于不同厂商的认证器的实现方式不同，<strong>我们并不能保证凭证 ID 一定是全局唯一的</strong>，也就是说，凭证 ID 有可能碰撞——即使这些凭证实际上是不同的。依赖方在实现凭证 ID 的存储及查找时，需要注意和用户 ID 结合进行存储或查找，或是直接在注册认证器时在服务器端对比阻止相同的凭证 ID。</p></blockquote>\n<hr><p>接下来就可以进行验证了。某天，用户点击了验证按钮准备登录，于是浏览器发送了验证请求到依赖方，同时附上要登录的用户名。接下来依赖方至少需要发送两项内容给浏览器：<strong>挑战和用户已绑定的凭证 ID 列表（即 <code>allowCredentials</code>）。</strong></p>\n<p>之后前端的处理流程就和注册时基本一致了。只是需要注意验证流程中获取到的 <code>PublicKeyCredential</code> 的结构和注册时的稍有不同。</p>\n<p>当浏览器将数据传回后，依赖方需要做的事情就比之前要麻烦一些了。依赖方需要验证挑战，并用之前存储的公钥验证签名和签名计数。同样地，这一步有很多第三方库可以帮我们做。最后，如果验证全部通过，我们就可以允许用户登录了。</p>\n<p>到目前为止，我们已经实现了一个简单的 WebAuthn 验证服务。不过这只是一个最基础的实现，对于很多高安全要求的身份认证这是远远不够的。因此，我们需要摆脱对第三方库的依赖，深入了解 WebAuthn。你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分，不过对于基础的 WebAuthn 实现，我们的旅程就到这里了。</p>\n<h2>拓展阅读</h2>\n<p>如果你的目标只是快速了解如何开发 WebAuthn，那么你阅读到这里就可以了。同时，上一节例子中的部分代码来自于我为了这篇文章开发的 WordPress 插件 WP-WebAuthn，这个插件可以为你的 WordPress 启用 WebAuthn 无密码登录（并非二步验证），你可以查阅插件的 <a href=\"https://github.com/yrccondor/wp-webauthn\">GitHub 存储库</a>了解更多，也可以自己安装试一试。</p>\n<p>如果你正在使用 Chrome 开发，Chrome 87+ 版本添加了一个 WebAuthn 开发者面板，可以帮助你在没有任何实体验证器的情况下开发 WebAuthn 功能。你可以在 Google 的<a href=\"https://developers.google.com/web/tools/chrome-devtools/webauthn\">这篇文章</a>中了解更多。不够，如果你正在使用 Firefox，很遗憾目前我还没有找到对应的开发工具或是浏览器扩展可用。</p>\n<p>如果你希望了解更多关于非对称加密的数学证明，可以查阅阮一峰老师的<a href=\"http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html\">这篇文章</a>。</p>\n<p>如果你希望了解更多关于 Credential Management API 的信息，可以查阅<a href=\"https://medium.com/dev-channel/sign-in-on-the-web-credential-management-api-and-best-practices-d21aed14b6fe\">这篇文章</a>（英文）。</p>\n<p>如果你希望了解更多 WebAuthn 的细节，可以继续往下阅读。<span></span></p>\n<h1>深入了解 WebAuthn</h1>\n<p>如上文所说，如果摆脱对第三方库的依赖，或是要实现更安全的 WebAuthn，我们必须深入了解 WebAuthn。在这一部分中，我们会详细讨论上文没有提到的一些概念和参数，并了解 WebAuthn 中各类数据的结构以实现解码与验证。先来看一看一些进阶的选项吧。</p>\n<h2>进阶选项</h2>\n<p>没错，上文提到的传入 <code>navigator.credentials.create()</code> 和 <code>navigator.credentials.get()</code> 方法的参数其实只是所有参数的一部分。对于 <code>create()</code>，我们还可以配置这些可选内容（上文提及的已省略）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        rp: {\r\n            icon\r\n        },\r\n        user: {\r\n            icon\r\n        },\r\n        attestation,\r\n        authenticatorSelection: {\r\n            requireResidentKey\r\n        },\r\n        extensions\r\n    }\r\n})</pre>\n</pre>\n<ul>\n<li>\n<code>rp.icon: String</code> 和 <code>user.icon</code>：是的，你可以为依赖方和用户设置图标，可以使用 HTTPS URL 或 Base64，一般长度不能超过 128 字节，不过大部分浏览器不会显示图标，或是有非常小的图片体积限制，所以一般没有使用这一属性的必要</li>\n<li>\n<code>attestation: String</code>：表明依赖方是否需要证明。可选三个值：\n<ul>\n<li>\n<code>none</code>：（默认）不需要证明。如上文所述，依赖方不关心证明，因此认证器不会签名。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n<li>\n<code>indirect</code>：依赖方需要证明，但证明方式可由认证器选择。在支持匿名证明的认证器上，认证器会通过匿名证明的方式签名挑战，并向依赖方提供签名方式等信息</li>\n<li>\n<code>direct</code>：依赖方要求直接证明。此时认证器会使用烧录在认证器中的公钥进行签名，同时向依赖方提供签名方式等信息以供依赖方验证认证器是否可信。更多信息可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节</li>\n</ul>\n</li>\n<li>在 <code>authenticatorSelection</code> 中，我们还可以设置两个可选属性：\n<ul>\n<li>\n<code>authenticatorSelection.requireResidentKey: Boolean</code>：是否要求将私钥钥永久存储于认证器中。默认值为 <code>false</code>。对于 iOS/iPad OS 13，必须设置为 <code>false</code>，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n<li>\n<code>extensions: Object</code>：WebAuthn 扩展，可以提供规范之外的配置和响应。由于实际情况中很少会使用这一特性，我们不会在这篇文章中讨论它</li>\n\n<blockquote><p>将 <code>requireResidentKey</code> 设置为 <code>true</code> 可以实现无用户名的登录，即认证器同时替代了用户名和密码。需要注意的是，尽管大部分认证器可以实现无限对公私钥，<strong>但能永久存储的私钥数量是有限的</strong>（对于 Yubikey，这通常是 25），因此只应在真正需要的时候启用此特性。我们会在“<a href=\"https://flyhigher.top/#login-without-username\">无用户名登录</a>”一节中详细讨论原因。</p></blockquote>\n<blockquote><p><strong>如果你没有高安全需求（如银行交易等），请不要向认证器索取证明</strong>，即将 <code>attestation</code> 设置为 \"none\"。对于普通身份认证来说，要求证明不必要的，且会有浏览器提示打扰到用户。</p></blockquote>\n<blockquote><p>Android 暂时无法实施用户验证，进而会导致依赖方验证失败。你可以在<a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=997538\">这里</a>追踪这个特性的实现情况。</p></blockquote>\n<blockquote>\n<p>对于 <code>extensions</code>，由于目前浏览器支持和应用范围有限，我们不会在这篇文章中涉及，不过你可以看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    uvm: true, // 要求认证器返回用户进行验证的方法\r\n    txAuthSimple: \"Please proceed\" // 在认证器上显示与交易有关的简短消息\r\n}</pre>\n<p>你可以在<a href=\"https://www.w3.org/2019/01/webauthn-extensions.html\">这个页面</a>了解更多关于 <code>extensions</code> 的信息。</p>\n</blockquote>\n<p>对于 <code>get()</code>，我们其实只有一个可选内容没讲了，即 <code>extensions</code>。和上文一样，我们不会在这篇文章中讨论它。</p>\n<p>就这些了！<span></span></p>\n<h2>手动解个码</h2>\n<p>是时候看看如何手动解码了。我们将会在这一节中讨论认证器返回的数据的结构以及如何正确地解码它们。</p>\n<p>首先我们来看看如何处理注册过程中认证器发回的数据。假设所有 <code>ArrayBuffer</code> 类型的值都被正确地以 Base64 编码，且后端已经将 JSON 的字符串解析为字典。先来复习一下，我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"ZRBkDBCEtq...9XY8atOcbg\",\r\n    type: \"public-key\",\r\n    rawId: \"ZRBkDBCEtq...9XY8atOcbg==\",\r\n    response: {\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...i5jcmVhdGUifQ==\",\r\n        attestationObject: \"o2NmbXRkbm9uZWd...xNHuAMzz2LxZA==\"\r\n    }\r\n}</pre>\n<p>这里的 <code>id</code> 就是凭证的 ID，如果验证正确，我们最终要将它存储起来并于用户关联。同时可以看到 Base64 编码后的 <code>rawId</code> 其实和 <code>id</code> 是一致的（不过 <code>id</code> 是 Base64URL 编码的）。而 <code>type</code> 则一定是 \"public-key\"。</p>\n<p>不过，我们主要关心的还是 <code>respose</code> 中的两项内容。首先是 <code>clientDataJSON</code>。它的处理比较简单，看名字就知道，它应该是一个 JSON 字符串。</p>\n<blockquote><p>小技巧：如果你看到一个 Base64 编码的字符串以 \"ey\" 开头，那么它大概率是一个 Base64 编码的 JSON。</p></blockquote>\n<p>将<code>clientDataJSON</code> Base64 解码再 JSON 解码之后我们就能得到一个字典：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"NI4i1vsNmP2KHcmyFnBCKRVQPfHgg34SsYZUOPZY2lM\",\r\n    extra_keys_may_be_added_here: \"do not compare clientDataJSON against a template. See https://goo.gl/yabPex\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>结构一目了然。在这里，我们需要验证三项内容：</p>\n<ul>\n<li>\n<code>challenge</code> 和之前发送的一致</li>\n<li>\n<code>origin</code> 为创建凭证的页面的源（协议+主机名+端口号，并非 URL）</li>\n<li>\n<code>type</code> 为 \"webauthn.create\"</li>\n</ul>\n<p>同时可以注意到有一个奇怪的 <code>extra_keys_may_be_added_here</code>。这其实是 Google 在 Chrome 中搞的一点小把戏，有一定概率会出现，提醒我们需要将 JSON 解析后再验证键值以防额外插入的键值影响验证。具体信息你可以访问那个 URL 看一看。</p>\n<p>对于 Firefox，我们会多得到两项 <code>clientExtensions</code> 和 <code>hashAlgorithm</code> ，分别指明了客户端扩展数据和签名算法。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"3-4\">{\r\n    challenge: \"dg6ost6ujhAA0g6WqLe-SOOH-tbhvjW9Sp90aPKlLJI\",\r\n    clientExtensions: {},\r\n    hashAlgorithm: \"SHA-256\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>由于本文不考虑扩展数据，因此我们可以不考虑 <code>clientExtensions</code>。同时由于目前规范中指定的签名算法只有 SHA-256 一种，因此现阶段我们也可以简单地忽略 <code>hashAlgorithm</code>。</p>\n<p><code>clientDataJSON</code> 很简单地就处理完了。接下来我们要来看看 <code>attestationObject</code>。先来看看 <code>attestationObject</code> 的结构图示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\" alt=\"attestationObject 的结构\" width=\"1056\" height=\"532\" class=\"aligncenter size-full wp-image-2245\"></a>\n<p><code>attestationObject</code> 是 CBOR 编码后再被 Base64 编码的，因此我们需要额外对其进行 CBOR 解码。</p>\n<blockquote><p>CBOR (Concise Binary Object Representation, 简明二进制对象表示) 是一种多应用于物联网领域的编码方式，你可以将它看作体积更小、更方便物联网传输的二进制 JSON。大部分语言都可以找到对应的 CBOR 解码库。</p></blockquote>\n<p>我们当然不会手解 CBOR，直接来看看解开之后的样子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"none\",\r\n    attStmt: {},\r\n    authData: [211, 217, 43, 24, 199, ..., 97, 238, 166, 67, 107]\r\n}</pre>\n<p>这些键值的含义如下：</p>\n<ul>\n<li>\n<code>fmt</code>：标明证明的格式。WebAuthn 预定义了几种格式，分别为：\n<ul>\n<li>\n<code>none</code>：没有证明</li>\n<li>\n<code>packed</code>：为 WebAuthn 优化的证明格式</li>\n<li>\n<code>android-safetynet</code>：Android 使用的格式</li>\n<li>\n<code>android-key</code>：又是 Android 使用的格式</li>\n<li>\n<code>fido-u2f</code>：FIDO U2F 认证器使用的格式</li>\n<li>\n<code>tpm</code>：TPM 可信平台模块使用的格式</li>\n</ul>\n</li>\n<li>\n<code>attStmt</code>：证明对象，具体格式根据 <code>fmt</code> 的不同会有所不同</li>\n<li>\n<code>authData</code>：包含公钥、签名计数等来自认证器的数据</li>\n</ul>\n<p>诶，例子里的 <code>attStmt</code> 怎么是空的？还记得之前说的吗？大部分情况下，<strong>如果依赖方不要求证明，那么认证器不会签名挑战</strong>，于是 <code>fmt</code> 会变为 \"none\"，<code>attstmt</code> 会为空。如果不是高安全要求，我们可以只对这一种情况做支持。</p>\n<blockquote><p>注意，部分情况下 Firefox 会在不要求证明（即 <code>attestation</code> 为 \"none\"）时会返回 <code>fmt</code> 为 \"packed\" 的证明。<strong>这是符合规范的。</strong>此时认证器会进行自证明，你可以视情况进行处理。具体可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>对于非 \"none\" 的 <code>fmt</code> 我们稍后再谈，现在我们先来看看 <code>authData</code>。来复习一下 <code>authData</code> 的结构：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\" alt=\"authData 的结构\" width=\"1056\" height=\"384\" class=\"aligncenter size-full wp-image-2240\"></a>\n<p>对于它的解码比较简单粗暴，我们要做的就是根据图示将它切开，然后适当地转换类型。其中各部分的含义如下：</p>\n<ul>\n<li>\n<code>rpIdHash</code>：如其名，SHA-256 的 <code>rpId</code>，长度 32 字节</li>\n<li>\n<code>flags</code>：标识认证状态，长度 1 字节。其中 8 位分别为：\n<ul>\n<li>\n<code>ED</code>：是否有扩展数据</li>\n<li>\n<code>AT</code>：是否包含 <code>attestedCredentialData</code>。通常注册认证器时会包含 <code>attestedCredentialData</code>，而验证时不包含</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>\n<code>UV</code>：用户是否已验证</li>\n<li>保留位</li>\n<li>\n<code>UP</code>：用户是否在场</li>\n</ul>\n</li>\n<li>\n<code>signCount</code>：签名计数，长度 4 字节</li>\n<li>\n<code>attestedCredentialData</code>：包含公钥等凭据数据，变长。其结构如下：\n<ul>\n<li>\n<code>aaguid</code>：认证器的 AAGUID (Authenticator Attestation GUID)，对于同一型号的认证器，它们的 AAGUID 是相同的</li>\n<li>\n<code>credentialIdLength</code>：标识 <code>credentialId</code> 的长度，长度 2 字节</li>\n<li>\n<code>credentialId</code>：凭证 ID，和 <code>rawId</code> 一致，长度由 <code>credentialIdLength</code> 定义</li>\n<li>\n<code>credentialPublicKey</code>：CBOR 编码的 COSE 格式的凭证公钥，变长</li>\n</ul>\n</li>\n<li>\n<code>extensions</code>：扩展数据，变长，本文不讨论</li>\n</ul>\n<blockquote><p>出于隐私考虑，如果不要求证明，认证器会以 0 填充 AAGUID。</p></blockquote>\n<p>如果你的后端在使用 Node.js，这里有个工具函数可以帮你完成这一步（不考虑 <code>extensions</code>）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function parseAuthData(buffer){\r\n    let rpIdHash = buffer.slice(0, 32);\r\n    buffer = buffer.slice(32);\r\n  \r\n    let flagsBuf = buffer.slice(0, 1);\r\n    buffer = buffer.slice(1);\r\n\r\n    let flagsInt = flagsBuf[0];\r\n    let flags = {\r\n        up: !!(flagsInt &amp; 0x01),\r\n        uv: !!(flagsInt &amp; 0x04),\r\n        at: !!(flagsInt &amp; 0x40),\r\n        ed: !!(flagsInt &amp; 0x80),\r\n        flagsInt\r\n    }\r\n\r\n    let counterBuf = buffer.slice(0, 4);\r\n    buffer = buffer.slice(4);\r\n  \r\n    let counter = counterBuf.readUInt32BE(0);\r\n\r\n    let aaguid = undefined;\r\n    let credID = undefined;\r\n    let COSEPublicKey = undefined;\r\n\r\n    if(flags.at) {\r\n        aaguid = buffer.slice(0, 16);\r\n        buffer = buffer.slice(16);\r\n\r\n        let credIDLenBuf = buffer.slice(0, 2);\r\n        buffer = buffer.slice(2);\r\n\r\n        let credIDLen = credIDLenBuf.readUInt16BE(0);\r\n        credID = buffer.slice(0, credIDLen);\r\n\r\n        buffer = buffer.slice(credIDLen);\r\n        COSEPublicKey = buffer;\r\n    }\r\n\r\n    return {rpIdHash, flagsBuf, flags, counter, counterBuf, aaguid, credID, COSEPublicKey}\r\n}</pre>\n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>解开后，依赖方至少需要做四件事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>存储签名计数</li>\n<li>存储公钥</li>\n</ol>\n<blockquote><p>签名计数不一定从 0 开始。</p></blockquote>\n<p>对于公钥，也就是 <code>credentialPublicKey</code>，我们需要多一次 CBOR 解码，然后就可以得到类似这样的公钥：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    kty: \"EC\",\r\n    alg: \"ECDSA_w_SHA256\",\r\n    crv: \"P-256\",\r\n    x: \"ZGQALNfqo0L7HFYQHFHCS/X5db49z0ePnuQEs3w3X8w=\",\r\n    y: \"6qYxhnjYuez/Q8N6vX7nIIGfxFWdZ25NzQfZYuYOalA=\"\r\n}</pre>\n<p>然后可以选择适当的方法将其存储起来，之后的步骤本文就不再赘述了。现在，将目光拉回来，让我们看看包含证明的 <code>attestationObject</code> 是怎么样的。我们来看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"packed\",\r\n    attStmt: {\r\n        alg: -7,\r\n        sig: [48, 70, 2, 33, 0, ..., 132, 78, 46, 100, 21],\r\n        x5c: [\r\n            [48, 130, 2, 189, 48, 130, 1, 165, 160, 3, ..., 177, 48, 125, 191, 145, 24, 225, 169, 41, 248]\r\n        ]\r\n    },\r\n    authData: [211, 217, 43, 24, 199, ..., 158, 54, 87, 126, 54]\r\n}</pre>\n<p>这里有一个使用 \"packed\" 格式的证明。此时，<code>attStmt</code> 中包含三个值：</p>\n<ul>\n<li>\n<code>alg</code>：签名算法</li>\n<li>\n<code>sig</code>：签名值</li>\n<li>\n<code>x5c</code>：X.509 编码的证书链</li>\n</ul>\n<p>我们不会在这一节中详述对签名的验证。要了解更多信息，你可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。现在，让我们来看看如何处理验证过程中认证器发回的数据。我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"hmqdxPLit9...BWeVxZqdvU\",\r\n    type: \"public-key\",\r\n    rawId: \"hmqdxPLit9V...BWeVxZqdvU=\",\r\n    response: {\r\n        authenticatorData: \"09krGMcWTf...UFAAAABA==\",\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...XRobi5nZXQifQ==\",\r\n        signature: \"UsXZV3pvT3np8btj6V0g...WBkaqyt88DrD40qh+A==\",\r\n        userHandle: \"MmYxNWYzZjQyZjM...Tg2ZDY4NzhlNw==\"\r\n    }\r\n}</pre>\n<p><code>id</code>, <code>rawId</code> 和 <code>type</code> 和之前一样，这里就不再赘述了。让我们来看看 <code>response</code>。首先是 <code>clientDataJSON</code>，和之前的解法一样，要验证的内容也一样，只是 <code>type</code> 从 \"webauthn.create\" 变成了 \"webauthn.get\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"bnkd2CmrEuvKnAFXs2QlC3SKlg4XFvGtP4HJL1yEWyU\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.get\"\r\n}</pre>\n<p>然后是 <code>userHandle</code>。前面讲过，这是认证器在创建凭证时的用户 ID。如果用户在使用 U2F 认证器，很可能这一项为空，所以大部分情况下我们不关心这一项。</p>\n<p>接着来看 <code>authenticatorData</code>。这其实就是之前的 <code>attestedCredentialData</code>，只是这次不包含公钥。以相同的方式切开数据，我们应该可以得到 <code>rpIdHash</code>, <code>flags</code>和 <code>signCount</code> 三项。此时，依赖方至少需要做这三样事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>验证签名计数大于之前存储的计数，并更新存储的计数</li>\n</ol>\n<blockquote><p>如果签名计数比之前的小，那么这个认证器很可能是伪造的，应该中止验证并返回验证失败。同时，签名计数不一定每次按 1 递增，通常只要计数比此前的大就认为计数检查通过。</p></blockquote>\n<p>最后，我们来看 <code>signature</code>，也就是签名。不过这个签名不是简单的对挑战的签名，具体算法如图所示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\" alt=\"签名过程\" width=\"1034\" height=\"587\" class=\"aligncenter size-full wp-image-2231\"></a>\n<p>计算签名时，认证器会将 <code>authenticatorData</code> 与 <code>clientDataHash</code>（也就是 <code>clientDataJSON</code> 的 SHA-256 Hash）拼接起来，并使用对应的私钥签名。依赖方应该使用对应的公钥将其解密，并验证内容是否是 <code>authenticatorData</code> 与 <code>clientDataHash</code> 的拼接。这部分的计算不在本文的讨论范围内。</p>\n<p>最后，如果全部验证通过，返回验证成功。<span></span></p>\n<h2>验证认证器</h2>\n<p>WebAuthn 已经很安全了，但有的时候我们还要让它更安全一点。比如，如果用户在使用伪造的或是自制的认证器，认证器的安全性就得不到保证。此时，依赖方就需要验证认证器是否是可信的认证器。</p>\n<blockquote><p>这一过程仅发生在注册认证器时。此时，如果认证器验证通过，就可以存储公钥，后续步骤和之前描述的一致。</p></blockquote>\n<blockquote><p>再次说明，如果不是对安全性有极高的要求，向认证器索取证明以验证认证器是否可信是没有必要的。此外，验证认证器需要依赖方自行维护可信认证器列表，大大增加了维护的复杂性。</p></blockquote>\n<p>在调用 <code>navigator.credentials.create()</code> 时，我们可以将 <code>attestation</code> 设置为非 \"none\" 来向认证器索取证明。除无证明外，WebAuthn 定义了四种证明方式：</p>\n<ul>\n<li>Basic Attestation (Basic) ：基础的证明方式，认证器会使用认证器私钥签名</li>\n<li>Self Attestation (Self) ：自证明，认证器会使用凭证私钥签名</li>\n<li>Attestation CA (AttCA) ：认证器会使用多个证明私钥之一签名</li>\n<li>Elliptic Curve based Direct Anonymous Attestation (ECDAA) ：通过 <a href=\"https://en.wikipedia.org/wiki/Direct_Anonymous_Attestation\">DAA</a> 实现的匿名证明</li>\n</ul>\n<blockquote><p>和验证过程一样，这里签名的目标是 <code>authenticatorData</code> 和 <code>clientDataHash</code> 的连接。</p></blockquote>\n<p>还记得 <code>create()</code> 时 <code>attestation</code> 可选的三个值吗？这个值会决定认证器最终使用哪种方式进行证明。复习一下：</p>\n<ul>\n<li>\n<code>none</code>：大部分情况下认证器会选择不进行证明，部分认证器会进行自证明。此时 AAGUID 会被 0 填充</li>\n<li>\n<code>indirect</code>：认证器会试图通过替换 AAGUID 和选择合适的证明方式来进行匿名证明，具体方式由认证器选择</li>\n<li>\n<code>direct</code>：认证器会提供最直接的证明信息</li>\n</ul>\n<p>注意，大部分情况下，当认证器需要向依赖方证明自己可信时需要提供认证器公钥，<strong>这会触发浏览器提示，只有用户同意后认证器才会进行证明，否则认证器将不提供证明。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\" alt=\"浏览器提示\" width=\"446\" height=\"283\" class=\"aligncenter size-full wp-image-2217\"></a>\n<blockquote><p>为什么浏览器会说“安全密钥的品牌和型号”？事实上，为了避免用户通过认证器证书被跨依赖方追踪，FIDO 要求使用相同认证器证书的认证器的数量不能少于 100,000。于是大部分认证器厂商会选择<strong>让同一型号的认证器共用同一份证书。</strong>因此，浏览器的会询问用户是否同意“查看安全密钥的品牌和型号”。</p></blockquote>\n<blockquote><p>Android Safety Net 不会向用户询问是否同意，而是会静默进行证明。</p></blockquote>\n<p>当证明不为空时，依赖方收到数据后根据 <code>attestationObject.fmt</code> 的不同，需要选择不同的验证方式来验证认证器的可信情况。出于篇幅原因，这里我们不会讨论每一种 <code>fmt</code> 的验证方式，更多信息你可以查阅 <a href=\"https://www.w3.org/TR/webauthn/#defined-attestation-formats\">W3C 文档</a>。</p>\n<p>当 <code>fmt</code> 为 <code>packed</code> 时，<code>attestationObject.attStmt</code> 可能会有三种格式：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// 自证明\r\n{\r\n    alg, // 算法\r\n    sig // 签名\r\n}\r\n// 基础或证明 CA 证明\r\n{\r\n    alg,\r\n    sig,\r\n    x5c // X.509 证书链\r\n}\r\n// 椭圆曲线证明\r\n{\r\n    alg,\r\n    sig,\r\n    ecdaaKeyId // ECDAA-Issuer 公钥标识符\r\n}</pre>\n<p>此时，依赖方需要检查证书符合预期格式并检查证书是否在可信链上。首先，如果证明中既没有 <code>ecdaaKeyId</code> 也没有 <code>x5c</code>，就说明这个证明使用的是自证明，只需使用认证器提供的公钥验证即可；如果有 <code>x5c</code>，那么就需要验证 <code>x5c</code> 中的证书是否在可信链上。将 <code>x5c</code> 中的每个证书以 Base64 编码，按 64 个字符切开，并在头尾加上 <code>-----BEGIN CERTIFICATE-----</code> 和 <code>-----END CERTIFICATE-----</code>就能得到一个证书字符串了。之后，依赖方需要验证证书是否可信。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function base64ToPem(b64cert){\r\n    let pemcert = '';\r\n    for(let i = 0; i \n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>至于 <code>ecdaaKeyId</code>，由于目前应用较少，处理方法可能需要你另寻资料了。检查证书的具体步骤已经超出了本文的范围，具体可以查阅<a href=\"https://medium.com/@herrjemand/verifying-fido2-packed-attestation-a067a9b2facd\">这篇文章</a>（英文）。</p>\n<blockquote><p>你可以在 <a href=\"https://fidoalliance.org/metadata/\">FIDO Metadata Service</a> 找到各大厂商认证器的可信证书链。</p></blockquote>\n<p>当在 Android 上调起 WebAuthn 时，大部分情况下 <code>fmt</code> 将会为 <code>safety-net</code>。此时 <code>attestationObject.attStmt</code> 的结构会是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    ver: \"200616037\",\r\n    response: {\r\n        type: \"Buffer\",\r\n        data: [101, 121, 74, 104, 98, ..., 115, 104, 104, 82, 65]\r\n    }\r\n}</pre>\n<p>此时，<code>clientDataJSON</code> 中还会出现 <code>androidPackageName</code> 键，值是调起 WebAuthn 验证的应用的包名，如 Chrome 就是 \"com.android.chrome\"。</p>\n<p>在这个证明中，<code>data</code> 其实是一个 JWT 字符串，我们可以将它编码为字符串并将其按照 JWT 进行解码（别忘了验证 JWT 签名）。最终我们会得到一个类似这样的 Payload：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    nonce: \"0QAurN4F9wik6GEkblDJhGuf4kuaqZn5zaaxlvD1hlA=\",\r\n    timestampMs: 1584950686460,\r\n    apkPackageName: \"com.google.android.gms\",\r\n    apkDigestSha256: \"2BQHno+bmWWwdLUYylS8HLt5ESJzci3nt2uui71ojyE=\",\r\n    ctsProfileMatch: true,\r\n    apkCertificateDigestSha256: [\r\n        \"8P1sW0EPicslw7UzRsiXL64w+O50Ed+RBICtay2g24M=\"\r\n    ],\r\n    basicIntegrity: true,\r\n    evaluationType: \"BASIC\"\r\n}</pre>\n<p>其中包含了有关设备状态的一些信息。比如说，如果 <code>ctsProfileMatch</code> 为 <code>false</code>，那么该设备很有可能被 root 了。对于高安全要求的场景，我们可以视情况进行验证。</p>\n<p>同时我们可以在 JWT Header 中验证证明的有效性。我们应该能取得这样的 Header：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    alg: \"RS256\",\r\n    x5c: [\r\n        \"MIIFkzCCBHugAwIBAgIR...uvlyjOwAzXuMu7M+PWRc\",\r\n        \"MIIESjCCAzKgAwIBAgIN...UK4v4ZUN80atnZz1yg==\"\r\n    ]\r\n}</pre>\n<p>这里的结构就和上方的 <code>x5c</code> 验证类似了。具体步骤可以参考<a href=\"https://medium.com/@herrjemand/verifying-fido2-safetynet-attestation-bd261ce1978d\">这篇文章</a>（英文）。</p>\n<p>其他所有格式的验证方式也都可以在<a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">这篇文章</a>（英文）中找到。<span></span></p>\n<h2>无用户名登录</h2>\n<p>认证器已经代替了密码，可是这还不够！在进行第一因素认证（即使用 WebAuthn 登录）时，我们还是需要输入用户名，然后才能进行身份认证。懒惰是第一生产力，我们能不能不输入用户名就进行身份认证呢？实际上，大部分认证器都允许我们无用户名登录。<strong>而这一特性的核心就是 Resident Key 客户端密钥驻留。</strong></p>\n<p>你可以思考一下，为什么普通的 WebAuthn 为什么不能实现无用户名登录？事实上，大部分认证器为了实现无限对公私钥，会将私钥通过 Key Warp 等技术加密后包含在凭证 ID 中发送给依赖方，这样认证器本身就不用存储任何信息。不过，这就导致需要身份认证时，依赖方必须通过用户名找到对应的凭证 ID，将其发送给认证器以供其算出私钥。</p>\n<blockquote><p>Yubikey 实现了一个基于 HMAC 的算法，认证器可以在私钥不离开认证器的前提下（常规的 Key Warp 算法中实际上私钥离开了认证器）通过一些输入和凭证 ID 重新计算私钥，你可以阅读<a href=\"https://www.yubico.com/blog/yubicos-u2f-key-wrapping/\">这篇文章</a>了解更多。</p></blockquote>\n<blockquote><p>客户端通过凭证 ID 查找对应认证器的算法根据系统的不同是不同的。通常凭证 ID 中会包含认证器信息，因此系统可以通过凭证 ID 找到对应的认证器。</p></blockquote>\n<p>要避免输入用户名，我们可以要求认证器将私钥在自己的内存中也存储一份。这样，依赖方无需提供凭证 ID，认证器就可以通过依赖方 ID 找到所需的私钥并签名公钥。以下是具体流程：</p>\n<p>注册时：</p>\n<ol>\n<li>依赖方请求新建凭证，同时要求启用客户端密钥</li>\n<li>认证器生成一对公私钥，并将私钥存储在永久内存中且与依赖方 ID 及用户 ID 绑定，随后将公钥发送给依赖方以供存储</li>\n<li>依赖方将用户 ID 即公钥与用户绑定</li>\n</ol><p>验证时：</p>\n<ol>\n<li>依赖方请求验证，但不必提供除依赖方 ID 以外的更多信息</li>\n<li>用户选择认证器</li>\n<li>认证器根据依赖方 ID 找到对应私钥</li>\n<li>如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录</li>\n<li>确定私钥后，认证器签名挑战并将其返回，同时返回用户 ID</li>\n<li>依赖方通过用户 ID 找到对应用户并用对应公钥检查签名，正确则允许对应用户登录</li>\n</ol><blockquote><p>可以看到，这个特性同时要求认证器存储用户 ID，即上面提到过的 <code>userHandle</code>。依赖方需要根据此信息找到对应用户，因此不支持 <code>userHandle</code> 的 U2F 认证器无法进行无用户名登录。</p></blockquote>\n<blockquote><p>如之前所说，<strong>认证器能永久存储的私钥数量是有限的</strong>，因此只应在真正需要无用户名登录的时候启用此特性。</p></blockquote>\n<blockquote><p>目前暂时没有办法检测认证器是否支持客户端密钥驻留，因此在无用户名验证失败时应 fallback 至常规的 WebAuthn 验证，即向用户询问用户名。</p></blockquote>\n<p>现在让我们来看看如何实现这一特性吧。首先，调用 <code>navigator.credentials.create()</code> 时我们需要注意两个参数：<code>requireResidentKey</code> 必须为 <code>true</code>，<code>userVerification</code> 必须为 \"required\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"5-6\">navigator.credentials.create({\r\n    publicKey: {\r\n        ...\r\n        authenticatorSelection: {\r\n            requireResidentKey: true,\r\n            userVerification: \"required\"\r\n            ...\r\n        },\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Windows Hello <strong>似乎</strong>会存储所有已注册的凭据，因此无论是否指定 <code>requireResidentKey</code>，你都可以通过 Windows Hello 进行无用户名登录。</p></blockquote>\n<p>随后，浏览器会询问用户是否允许认证器存储私钥。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\" alt=\"浏览器提示\" width=\"445\" height=\"285\" class=\"aligncenter size-full wp-image-2208\"></a>\n<p>如果用户同意，认证器会存储私钥，并和普通的 WebAuthn 一样返回信息。不过，依赖方收到数据之后，只需将公钥、用户 ID 与用户关联起来，而不必再将凭证 ID 与用户关联起来。至此注册完成。</p>\n<p>之后，在用户请求登录时，无需再向依赖方提供用户名。同时在传入 <code>navigator.credentials.get()</code> 的参数中也有两个需要注意：<code>userVerification</code> 必须为 \"required\"，同时 <code>allowCredentials</code> 必须为空。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"4-5\">navigator.credentials.get({\r\n    publicKey: {\r\n        ...\r\n        userVerification: \"required\",\r\n        allowCredentials: [],\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Android 暂不支持无用户名验证，空的 <code>allowCredentials</code> 会导致浏览器返回 <code>NotSupportedError</code> 错误。</p></blockquote>\n<p>此时，认证器会根据依赖方 ID 找到对应的私钥。如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录。用户选择后，认证器就会使用对应的私钥签名挑战并将其返回。此时，<code>userHandle</code> 一定不为空。</p>\n<p>依赖方收到数据后，需要将 <code>userHandle</code> 作为用户 ID 找到对应的用户，并使用对应的公钥验证签名。如果验证成功，则认为对应的用户身份认证成功，依赖方可以允许其登录。至此验证结束。</p>\n<blockquote><p>有的时候你可能会需要清除认证器中的密钥。绝大多数认证器都提供了对应的软件以供清除存储的密钥，但大部分情况下这会重置整个认证器，这意味着相关认证器此前的所有凭证均会失效。因此建议不要将日常使用的认证器作为开发测试用的认证器。</p></blockquote>\n<h2>从 U2F 认证迁移</h2>\n<p>如果你的服务此前提供了 U2F 第二因素认证，你可能会希望在将依赖方从 U2F 升级到 WebAuthn 时用户此前注册的 U2F 认证器仍然可用而无需重新注册。由于 WebAuthn 向后兼容 U2F 设备，用户是可以继续使用原有的 U2F 认证器的。不过，由于 WebAuthn 的依赖方 ID 与 U2F 的 <code>appid</code> 并不一定相同，你需要将原有的 U2F <code>appid</code> 随 WebAuthn 流程一起传递给认证器，认证器才能使用正确的私钥进行响应。</p>\n<p>要实现这一点，我们只需要在注册及认证仪式中使用 WebAuthn 的 <code>appid</code> 扩展。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    appid: \"https://example.com\" //U2F appid\r\n}</pre>\n<p>此时认证器便可以得到正确的私钥，之后的流程与正常情况一致；依赖方除了正常的 WebAuthn 流程外，不需要再做任何其它操作。</p>\n<h2>拓展阅读</h2>\n<p>我们的 WebAuthn 之旅到这里就真的结束了。不过，你仍然可以自行探究，了解更多。<strong>本文只是一个粗浅的使用指南</strong>，而被称为“Web 身份认证的未来”的 WebAuthn 的深层还要很多细节值得我们挖掘学习，不过本文不会再继续讨论了。</p>\n<p>如果你想了解更多关于 WebAuthn 的信息，最好的方法是直接阅读 <a href=\"https://www.w3.org/TR/webauthn\">W3C 规范</a>。此外，Yubico 也提供了不错的 <a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn 文档</a>。</p>\n<p>要了解更多认证器存储凭证的信息，你可以阅读<a href=\"https://duo.com/labs/tech-notes/how-security-keys-store-credentials\">这篇文章</a>（英文）。</p>\n<p>如果你想了解更多 Android Safety Net 是怎样运作的，可以观看<a href=\"https://youtu.be/8lv_9mydrjg\">这个视频</a>，并通过 <a href=\"https://developer.android.com/training/safetynet/attestation\">Google 的文档</a>了解 Android Safety Net 的更多信息。</p>\n<p>如果你想方便地调试 WebAuthn，<a href=\"https://webauthn.me/\">webauthn.me</a> 提供了一个非常直观方便的<a href=\"https://webauthn.me/debugger\">调试器</a>。</p>\n<h1>参考资料</h1>\n<p><a href=\"https://www.w3.org/TR/webauthn\">WebAuthn Level 1 规范 - W3C</a><br><a href=\"https://github.com/w3c/webauthn\">WebAuthn Level 2 草案 - W3C</a><br><a href=\"https://blog.techbridge.cc/2019/08/17/webauthn-intro/\">一起来了解Web Authentication - TechBridge 技术共笔部落格</a><br><a href=\"https://medium.com/@herrjemand/introduction-to-webauthn-api-5fd1fb46c285\">Introduction to WebAuthn API - Medium</a><br><a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">WebAuthn/FIDO2: Verifying responses - Medium</a><br><a href=\"https://obeta.me/posts/2019-03-01/WebAuthn%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8\">WebAuthn介绍与使用 - obeta</a><br><a href=\"https://webauthn.io/\">webauthn.io</a><br><a href=\"https://webauthn.guide/\">webauthn.guide</a><br><a href=\"https://webauthn.me/\">webauthn.me</a><br><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion\">Attestation and Assertion - MDN</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Authentication_API\">Web Authentication API - MDN</a>（顺便翻译了一半）<br><a href=\"https://fidoalliance.org/fido-technotes-the-truth-about-attestation/\">FIDO TechNotes: The Truth about Attestation - FIDO Alliance</a><br><a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn Developer Guide - Yubico</a><br><a href=\"https://en.wikipedia.org/wiki/WebAuthn\">WebAuthn - Wikipedia</a><br><a href=\"https://techcommunity.microsoft.com/t5/identity-standards-blog/all-about-fido2-ctap2-and-webauthn/ba-p/288910\">All about FIDO2, CTAP2 and WebAuthn - Microsoft Tech Community</a><br><a href=\"https://webauthn-doc.spomky-labs.com/\">Webauthn Framework</a><br><a href=\"https://zhuanlan.zhihu.com/p/25279015\">如何开发支持 FIDO U2F 登录的网站 - 知乎专栏</a><br></p></pre>\n","link":"https://flyhigher.top/develop/2160.html"},{"title":"NLP 找门：用朴素贝叶斯进行文本分类","date":"2020-01-29 11:39:58","description":"\n<blockquote>\n<p>有一天，神收到了一封垃圾邮件，于是世界上就有了朴素贝叶斯算法。</p>\n<footer>——我瞎编的</footer>\n</blockquote>\n<p>为什么这篇文章的标题是 NLP 找门呢？因为如果你看完了这篇文章，你就可以<strong>准备入门</strong>自然语言处理 (<strong>N</strong>atural <strong>L</strong>anguage <strong>P</strong>rocessing) 了。我会把这篇文章当作一篇彻彻底底的 NLP 入门文章来写，尽量避免“专业高端”词汇和“全是奇怪符号”的式子，这样<strong>只要你有高中数学基础</strong>，就能毫无压力地看完这篇文章，学会使用朴素贝叶斯分类算法分类文本。</p>\n<p>让我们开始吧。</p>\n<h1>所以，啥是朴素贝叶斯？</h1>\n<p>简单来说，朴素贝叶斯 (Naïve Bayes) <strong>是一个简单但高效的分类算法</strong>，在进行不复杂的文本分类时高效且拥有不低的准确度，判断垃圾邮件就是用朴素贝叶斯进行文本分类的一个经典例子。当然朴素贝叶斯分类不仅能用在 NLP 中，在许多分类问题中朴素贝叶斯也有非常好的效果，但我们今天只关注它在 NLP 中的应用。</p>\n<p>要了解朴素贝叶斯，我们要先来了解一下贝叶斯定理。</p>\n<blockquote>\n<p>每增加一个数学公式都会使读者减半。</p>\n<footer>——霍金</footer>\n</blockquote>\n<p>那么，就让我们先来看看贝叶斯定理的公式吧（笑</p>\n<p>$$P(A|B) = \\frac{P(AB)}{P(B)} = \\frac{P(B|A)P(A)}{P(B)}$$</p>\n<p>其实还是很简单的，运用高中的条件概率知识就能理解。本质上，贝叶斯定理给出了一种方法，使得我们可以在 \\(P(A|B)\\) 和 \\(P(B|A)\\) 之间互相转换，因为通常情况下它们是不一样的。</p>\n<p>要更好地理解，请考虑这样一个例子：</p>\n<blockquote><p>假设有一个学校图书馆，图书管理员正为找不到某本书而发愁。已知老师有 70% 的意愿借走这本书，而是学生的意愿是 30%，这个学校的师生比例是 1:10，那么借走这本书的人是老师的概率有多大？</p></blockquote>\n<p>设学校总人数为 \\(T\\)，我们可以很容易地写出这样的一个式子：</p>\n<p>$$\\begin{align} P &amp; = \\frac{T\\cdot\\frac{1}{11}\\cdot 70\\%}{T\\cdot\\frac{1}{11}\\cdot 70\\%+T\\cdot\\frac{10}{11}\\cdot 30\\%} \\\\ &amp; = \\frac{70\\%}{70\\%+10\\times30\\%} \\\\ &amp; = \\frac{7}{37} \\end{align}$$</p>\n<p>这就是贝叶斯定理了！等等，你可能会挠挠头，这哪里是贝叶斯了？别急，如果我们把最上面的式子换个字母的话...</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>在这里，\\(H\\) 指 Hypothesis，即假设，而 \\(E\\) 指 Evidence，即证据。这样，这个式子就很好理解了，在我们上面的例子里，借走书是证据，那么 \\(P(E)\\) 就是某个人选择借走这本书的概率；这个人是老师是假设，那么这个人是老师的概率是 \\(P(H)\\)。<strong>注意这里的概率指在学校中抽一个人是老师的概率，并不是“在借走书的前提下”这个人是老师的概率</strong>，而“在借走书的前提下”这个人是老师的概率应该是 \\(P(H|E)\\)，也正是我们要求的概率。同样地，而“这个人是老师”的前提下借走书的概率就是 \\(P(E|H)\\) 了。</p>\n<p>那么再来看看上面我们凭小学知识就列出的计算式，如果把里面的具体数据换成概率来表示的话，这个式子就会变成...</p>\n<p>$$P(H|E) = \\frac{T\\cdot P(E|H)P(H)}{T\\cdot P(E|H)P(H) + T\\cdot P(E|\\neg H)P(\\neg H)}$$</p>\n<p>好吧，这里解释一下，\\(\\neg\\) 符号表示“非”，所以 \\(P(E|\\neg H)\\) 表示在“这个人不是老师”的前提下借走书的概率。而 \\(T\\cdot P(E|H)P(H)\\) + \\(T\\cdot P(E|\\neg H)P(\\neg H)\\)，即“可能借走书的老师的数量 + 可能借走书的学生的数量”，就是“可能借走书的人的数量”了，也就是 \\(T\\cdot P(E)\\)。上下消去 \\(T\\)，我们就能得到上面的式子了。</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>这就是贝叶斯了定理。如果你还是不太清楚，可以去看看 3Blue1Brown 的<a href=\"https://www.bilibili.com/video/av84799361\">这个视频</a>，图形化的讲解会清晰很多。</p>\n<p>这里我要提一下这个式子里各部分的专有名称了（“专业高端”词汇警告），你可以不记住，直接看后面。</p>\n<ul>\n<li>\\(P(H|E)\\) 叫做 \\(H\\) 的<strong>后验概率</strong>，反之亦然</li>\n<li>\\(P(H)\\) 叫做 \\(H\\) 的<strong>先验概率</strong>，反之亦然</li>\n<li>特别地，我们把 \\(P(E|H)\\) 称作<strong>“似然值”</strong>，即 likelihood</li>\n</ul>\n<p>那什么是朴素贝叶斯呢？按上面所说的，朴素贝叶斯是一种分类算法。简单来说，朴素贝叶斯将一个对象的各个特征考虑为互相独立，然后根据这些特征的概率的乘积来判断对象所属的分类。基本原理如下：</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)} \\propto P(E|H)P(H) = P(H)\\prod_{i}P(W_i|H)$$</p>\n<p>在这里，\\(W_i\\) 指某一对象的第 \\(i\\) 个特征，对于文本分类来说，这就是一段文本中的某个单词。</p>\n<p>朴素贝叶斯之所以“朴素”，是因为它要求<strong>各个特征间是独立的</strong>，在文本分类中也就是各个单词之间互不干扰。虽然思路简单的代价是适用范围变窄，不过由于这样的简化在很多情况下已经足够了，因此实际上朴素贝叶斯的应用范围非常广。<del>你看朴素贝叶斯 <strong>N</strong>aïve <strong>B</strong>ayes 的缩写都是 NB 了，能不厉害吗（逃</del></p>\n<h1>那么，咋分类啊</h1>\n<p>看来你这下完全听懂了呢（笑），是时候看看如何在 NLP 中应用朴素贝叶斯了。和上面一样，我们用一个具体的例子来说明。我们的目标是让电脑学会分类美国共和党和民主党的演讲稿，由于两个党派的演讲风格不同，所以这样的分类在理论上是可行的。</p>\n<div class=\"wp-block-file\">\n<a href=\"https://acdn.flyhigher.top/nlp/material.zip\" download>material.zip</a><a href=\"https://acdn.flyhigher.top/nlp/material.zip\" class=\"wp-block-file__button\" download>下载</a>\n</div>\n<p>上面我们要用到的数据集，你可以下载下来一起动手玩一玩。先说一下数据集的数据结构吧，压缩包里有两个文件，<code>train.txt</code> 将会被当作训练数据集，而 <code>test.txt</code> 则会作为训练结束后的验证数据集。两个文本文件里数据的结构是类似的，就像这样：</p>\n<pre class=\"EnlighterJSRAW\">BLUE WELL I AM SO HONORED AND PERSONALLY UNKNOWNWORD TO BE HERE...\r\nRED THANK YOU . THIS IS QUITE AN INSTITUTION . IT'S GOOD TO BE...</pre>\n<p>每行都是一篇演讲稿，每行的第一个单词指明了这篇演讲稿所属的党派，<code>RED</code> 指共和党，而 <code>BLUE</code> 指民主党。所有单词和符号都已经被转为大写并由空格分隔方便处理。<code>train.txt</code> 有共和党演讲稿和民主党演讲稿各 23 篇，<code>test.txt</code> 有 6 篇共和党演讲稿，12 篇民主党演讲稿。</p>\n<p>明白了？那我们就开始吧。</p>\n<h2>捋捋思路</h2>\n<p>首先，我们需要考虑如何在文本分类中应用朴素贝叶斯。很简单，按朴素贝叶斯的思路，<strong>计算每个词在某一分类下的出现概率，然后将某篇文章的所有词的概率相乘，再乘以该分类的先验概率，就可以得到某篇文章在某一分类下的概率。</strong></p>\n<p>$$P(Class|Article) = P(Class)\\prod_{i}P(Word_i|Class)$$</p>\n<p>各个分类概率都计算完成后，概率最高的那个分类就是这篇文章可能所属的分类。这个思路的核心就是用词决定了文本风格，文本的不同类别用词会有差异，只要能量化这些差异就可以分类文本。在我们的例子中，我们可以从 <code>train.txt</code> 中统计各个词汇的出现情况，然后用 <code>test.txt</code> 中的数据按上面的算法验证我们算法的准确性。</p>\n<p>这个思路很简单也很清晰，但还有一些问题需要解决。<strong>第一，有的时候，我们的测试数据集中可能会出现一个在训练数据集中没有出现过的词语。这个时候，朴素贝叶斯的计算结果会是 0。</strong>如果我们把 0 乘进式子中，那就别想得到正常的结果了。所以，我们还需要对计算某一单词在某一分类中的式子稍加改进。使用拉普拉斯平滑，就可以避免出现概率为 0 的情况。别被名字吓到，拉普拉斯平滑是一种非常简单的平滑方法：在分子上 +1，在分母上加整个取值范围，这样就可以给整个分式加上非常微小的偏移，避免出现 0。</p>\n<p>$$\\begin{align} P(Word_i|Class) &amp; = \\frac{Word_iCountInClass}{AllWordCountInClass} \\\\ &amp; \\approx \\frac{Word_iCountInClass + 1}{AllWordCountInClass + UniqueWordCount} \\end{align}$$</p>\n<p><strong>第二，对于长文本，大部分词语在某一分类中的出现概率是远小于 1 的，加上长文本词汇量大，往往概率相乘的结果会非常小。</strong>受限于计算机处理浮点数的原理，精确处理这么小的数字是很麻烦的。幸好，运用一些简单的数学知识就可以将其转化为更精确的表达，<strong>那就是取对数。</strong></p>\n<p>首先，将概率计算结果取对数并不影响我们的计算结果。因为取对数是一个单调递增的操作，而我们计算概率只是为了排序选择概率最高的分类，因此取对数是不影响我们排序的。而把多项式取对数，等于把多项式的每一项取对数后相加。所以我们有：</p>\n<p>$$\\lg{\\Big(P(Class)\\prod_{i}P(Word_i|Class)\\Big)} = \\lg{P(Class)} + \\sum_i\\lg{P(Word_i|Class)}$$</p>\n<p>大部分情况下，在每一次取对数的时候，要取对数的数字的大小，即 \\(P(Word_i|Class)\\) 尚还在计算机能处理的范围内，<strong>因此我们可以放心地使用取对数的方法</strong>，避免计算机精度不够影响结果。</p>\n<p><strong>第三就是在某些情况下，可能会有部分词语干扰计算结果</strong>，如 and, is 这类的被大量使用的中性词。如果希望得到更好的结果，我们可以维护一个停用词表，在计算时排除停用词即可。或者，我们可以在计算完每个单词的出现数量后，排除数量最多的前 \\(N\\) 个单词，避免这些单词过多地影响计算。</p>\n<h2>写点代码</h2>\n<p>现在我们终于可以开始实战，写点代码了。我会用简单的 Python 来表达思路。好了，理一理思绪，第一步我们要做的，是统计训练数据集中的用词情况。具体来说，根据上面的思考，我们需要统计的有：</p>\n<ul>\n<li>每个单词在各分类中出现的数量</li>\n<li>各分类中的不重复词数量</li>\n</ul>\n<p>用 Python 简单表示如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\"># 读入数据过程略...\r\ndata_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ndata_blue = []\r\ndata_red = []\r\nword_count_blue = {}\r\nword_count_red = {}\r\n\r\nfor line_data in data_raw:\r\n    word_list = line_data.split(\" \") # 分隔单词\r\n    if word_list[0] == \"BLUE\":\r\n        for i in range(1,len(word_list)):\r\n            if not is_excluded(word_list[i]): # 判断是否为停用词\r\n                data_blue.append(word_list[i])\r\n                # 统计单词出现次数\r\n                word_count_blue.setdefault(word_list[i], 0)\r\n                word_count_blue[word_list[i]] += 1\r\n    elif word_list[0] == \"RED\":\r\n        # Class = red 时同理...\r\n\r\n#统计非重复词\r\nunique_words_blue = list(set(data_blue))\r\nunique_words_red = list(set(data_red))</pre>\n<p>训练过程到这里就结束了，计算机已经知道了各政党演讲的用词习惯。很简单吧？接下来我们就要使用测试数据集来测试准确度了。<strong>这里开始就涉及到朴素贝叶斯的计算了</strong>，可能会稍微复杂一点点。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">import math\r\n#读入测试数据过程略...\r\ntest_data_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ntest_data = []\r\n\r\nfor line_data in test_data_raw:\r\n    if line_data[0] == \"BLUE\":\r\n        content_data = line_data.split(\" \").pop(0)\r\n        test_data.append({\"class\": \"blue\", \"content\": content_data})\r\n    elif line_data[0] == 'RED':\r\n        # ...\r\n\r\nfor line_data in test_data:\r\n    posibility_blue = 0\r\n    for word in line_data[\"content\"]:\r\n        # 计算各单词概率，取对数后相加，使用了拉普拉斯平滑\r\n        if word in word_count_blue:\r\n            posibility_blue += math.log((word_count_blue[word]+1)/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n        else:\r\n            posibility_blue += math.log(1/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n    # 最后加上该分类概率的对数\r\n    posibility_blue += math.log(len(data_blue)/(len(data_blue)+len(data_red)))\r\n\r\n    # 计算 Red 同理...</pre>\n<p>计算完成后，我们就得到每篇演讲稿在各分类下的概率了。之后，简单的比较就能得出推断的分类：如果 \\(P(Red|Article)\\) 大于 \\(P(Blue|Article)\\)，那么这篇演讲稿就更可能是共和党的演讲稿，反之则是民主党的演讲稿。</p>\n<p>很好理解吧？那么这么简单的思路，准确性怎么样呢？对于我们的例子，这是我设置了个别停用词后的结果：</p>\n<pre class=\"EnlighterJSRAW\">+-----+-------+--------------+--------------+-------+-------+\r\n|   ID|  Class|        P(Red)|       P(Blue)|  Guess| Status|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|    1|   Blue|  -23204.68377|  -22998.67066|   Blue|      √|\r\n|    2|   Blue|  -16438.44625|  -16137.48257|   Blue|      √|\r\n|    3|   Blue|  -33468.81214|  -32567.61801|   Blue|      √|\r\n|    4|   Blue|    -8606.2193|   -8601.50426|   Blue|      √|\r\n|    5|   Blue|  -12430.97436|  -11935.70662|   Blue|      √|\r\n|    6|   Blue|  -44033.02883|  -43877.55367|   Blue|      √|\r\n|    7|   Blue|   -16947.2851|  -16758.57542|   Blue|      √|\r\n|    8|   Blue|  -26957.26997|  -26889.62444|   Blue|      √|\r\n|    9|   Blue|  -27503.73985|  -27249.21828|   Blue|      √|\r\n|   10|   Blue|   -20528.4457|   -19991.1248|   Blue|      √|\r\n|   11|   Blue|  -20337.96493|  -19860.12831|   Blue|      √|\r\n|   12|   Blue|  -28409.28489|  -28118.98017|   Blue|      √|\r\n|   13|    Red|  -13756.01015|  -14488.11751|    Red|      √|\r\n|   14|    Red|  -17221.22732|  -17710.15936|    Red|      √|\r\n|   15|    Red|  -17397.45136|  -17899.98659|    Red|      √|\r\n|   16|    Red|  -10724.69095|  -11092.77837|    Red|      √|\r\n|   17|    Red|  -10402.40027|  -10859.48681|    Red|      √|\r\n|   18|    Red|   -9371.53792|    -9669.6769|    Red|      √|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|                                      Total: 18/18, 100.0% |\r\n+-----------------------------------------------------------+</pre>\n<p><strong>100% 的准确率哦！</strong>事实上，对于我们的这个例子，就算不设置停用词，我们仍能达到 100% 的分类准确率。朴素贝叶斯分类的确很 NB 呢。</p>\n<h1>更进一步</h1>\n<p>我们的探索到这里就结束了，但如果你有兴趣，完全可以继续探索下去。我们的例子是一个非常简化的例子，在实际情况中，还有很多问题需要解决。比如，对于中文及类似语言，不存在拉丁语系的天然分词结构，而朴素贝叶斯的文本分类是基于单词的，那么<strong>中文的分词就会是个问题；</strong>再比如，对于朴素贝叶斯分类来说，<strong>词语之间的顺序是不影响分类结果的</strong>，但这就会导致“今天心情很好，但昨天不好”和“昨天心情很好，但今天不好”在朴素贝叶斯看来是一样的，要想获得更好的结果，我们必须<strong>考虑词语的顺序。</strong></p>\n<p>这些问题，今天我们就不再深究了，但你可以自己探索。比如，引入思路同样很简洁的马尔科夫链，我们就可以让计算机学会考虑词语间的顺序，不过那就会是另一个话题了。</p>\n","link":"https://flyhigher.top/develop/1989.html"},{"title":"MDx 中增强页面可访问性的细节","date":"2020-01-25 16:45:04","description":"\n<blockquote><p>这篇文章本来是打算发在 <a href=\"https://mdxblog.flyhigher.top/\">MDx Blog</a> 的，不过写到后来发现这篇文章相对来说还是有价值的，于是就将这篇文章转移到了无垠，MDx Blog 则不再发表这篇文章。</p></blockquote>\n<p>从 MDx 开发之初，增强页面的可访问性就被列为了一个重要目标。从 HTML 语义化，到 ARIA 地标，再到 <code>prefers-reduced-motion</code>，随着浏览器对于增强页面可访问性的支持功能越来越多，MDx 也在不断地更新，让更多的人都能毫无困难地浏览、查看由 MDx 渲染的网页。本文会详细说明一些 MDx 中增强页面可访问性的细节，<strong>如果你希望增强自己开发的网页的可访问性，本文可能会对你有所帮助。</strong></p>\n<h1>基础性增强</h1>\n<p>增强可访问性，最重要也是最基础的一点就是 HTML 语义化。通过使用 HTML 5 语义化标签和 ARIA Role 标签，我们可以很方便地<strong>将整个网页在语义上分为几部分，而这将有效地改善屏幕阅读器对网页的分析质量，使视力障碍用户更好地浏览网页。</strong></p>\n<h2>HTML 语义化</h2>\n<p><strong>HTML 语义化属于增强页面可访问性的基础中的基础。</strong>通过使用语义化的 HTML 标签，我们可以方便地为网页中的各部分标记功能而不影响页面样式。随着符合 HTML 5 的现代化网页成为主流，语义化标签已被很大一部分网站所支持，我也不过多赘述了。就举几个常用的“地标性”标签吧：</p>\n<ul>\n<li>\n<code>header</code> 标签标记页眉，默认样式同 <code>div</code>，不要把它和 <code>head</code> 搞混了</li>\n<li>\n<code>main</code> 标签标记页面的主要内容，默认样式同 <code>div</code>\n</li>\n<li>\n<code>article</code> 标签标记文章（在 HTML 5 中它指任何独立或可复用的文本），默认样式同 <code>div</code>\n</li>\n<li>\n<code>footer</code> 标签标记页脚，默认样式同 <code>div</code>\n</li>\n<li>\n<code>nav</code> 标签标记页面导航栏区域，默认样式同 <code>div</code>\n</li>\n<li>\n<code>aside</code> 标签标记侧栏，默认样式同 <code>div</code>\n</li>\n<li>\n<code>section</code> 标签标记“一组内容”，你可以把它看作是划定网页中一块区域的通用标签，默认样式同 <code>div</code>\n</li>\n</ul>\n<p>只要用这些标签替代 <code>div</code> 而不是无脑使用 <code>div</code> 就能提高页面的可访问性。MDx 使用了这些标签来增强页面的可访问性。</p>\n<h2>下一步，ARIA</h2>\n<p>有的时候，出于一些原因，我们没法使用语义化的 HTML 标签，或者没有合适的语义化标签来标记内容，这时候<strong>我们就需要使用 ARIA (Accessible Rich Internet Applications，可访问的富互联网应用)。</strong>ARIA 的基础用法很简单，只要在相应元素上加上 <code>role</code> 属性指定该元素的功能即可。下面是一个简单的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;div role=\"navigation\"&gt;\r\n  &lt;ul&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page A&lt;/a&gt;&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page B&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page C&lt;/a&gt;&lt;/li&gt;\r\n  &lt;/ul&gt;\r\n&lt;/div&gt;</pre>\n<p>通过 <code>role=\"navigation\"</code>，我们把一个 <code>div</code> 标记为了导航栏区域。实际上，对屏幕阅读器来说，这和 <code>nav</code> 标签在语义上是一致的。上一节中的例子都可以分别用以下 ARIA Role 表示：</p>\n<ul>\n<li><code>role=\"heading\"</code></li>\n<li><code>role=\"main\"</code></li>\n<li><code>role=\"article\"</code></li>\n<li><code>role=\"contentinfo\"</code></li>\n<li><code>role=\"navigation\"</code></li>\n<li><code>role=\"complementary\"</code></li>\n<li><code>role=\"region\"</code></li>\n</ul>\n<p>除此以外，MDx 还使用了 <code>role=\"banner\"</code> 和 <code>role=\"search\"</code> 来分别标记页面中的顶部栏和搜索表单。另外，<strong>有的时候 <code>role</code> 属性还需配合 <code>aria-*</code> 属性一同使用</strong>，具体规则比较复杂，我就不在这里赘述了，具体可参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles\">WAI-ARIA Roles - MDN</a>。</p>\n<h1>媒体查询来帮忙</h1>\n<p>CSS 的媒体查询其实是一个非常强大的特性，<strong>妥善利用其中的一些特性，我们可以在网页外观上大大增强网页的可访问性。</strong>除了已经烂大街的“对浏览器窗口大小”响应的媒体查询，我会介绍 3 个很少有网站充分利用的媒体查询。</p>\n<h2>print</h2>\n<p><code>print</code> 媒体查询其实已经“历史悠久”了，<strong>只要使用 <code>@media print {...}</code> 就可以创建只在打印页面时生效的样式。</strong>通过这种方式，我们可以让页面在打印时应用一套为打印优化的样式，增强页面在物理纸张上的可访问性。</p>\n<blockquote><p>维基百科是对打印样式做了单独适配的著名例子。</p></blockquote>\n<p><strong>由于在打印的情况下，页面已经离开了“可交互”的范围，还有分页这种在屏幕中无需考虑的问题，要让页面在物理纸张上仍能被轻松地阅读，我们需要做一些特殊的适配。</strong>直接来看一个例子吧。以下是 MDx 针对打印情况进行的一些特殊优化，样式的具体理由已经写在了注释中。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media print {\r\n    /*隐藏不必要的元素*/\r\n    header, .mdx-ad-after-article, .mdx-ad-in-article, .mdx-post-money, .page-footer-nav, .mdx-same-posts, .spanout button, .mdui-drawer, .mdui-overlay, .mdui-menu, .mdx-share-img-dialog, .mdx-share-wechat-dialog {\r\n        display: none!important;\r\n    }\r\n\r\n    /*使用下划线标记链接*/\r\n    article a {\r\n        text-decoration: underline!important;\r\n    }\r\n    /*由于纸张不可交互，在链接后显示链接到的 URL*/\r\n    article a::after {\r\n        content: \"(\" attr(href) \")\";\r\n    }\r\n\r\n    /*强制白底黑字*/\r\n    html &gt; body {\r\n        background-color: white!important;\r\n    }\r\n    article p {\r\n        color: rgba(0,0,0,.8)!important;\r\n    }\r\n\r\n    /*对于纸张上的长文章，衬线字体拥有更好的可读性。以下字体列表来自 fonts.css*/\r\n    article {\r\n        font: 13pt Georgia, \"Nimbus Roman No9 L\", \"Songti SC\", \"Noto Serif CJK SC\", \"Source Han Serif SC\", \"Source Han Serif CN\", STSong, \"AR PL New Sung\", \"AR PL SungtiL GB\", NSimSun, SimSun, \"TW\\-Sung\", \"WenQuanYi Bitmap Song\", \"AR PL UMing CN\", \"AR PL UMing HK\", \"AR PL UMing TW\", \"AR PL UMing TW MBE\", PMingLiU, MingLiU, serif!important;\r\n    }\r\n\r\n    /*除部分元素外，禁止在元素内部分页*/\r\n    * {\r\n        page-break-inside: avoid;\r\n    }\r\n    article p, article a, #comments, article {\r\n        page-break-inside: auto;\r\n    }\r\n}</pre>\n<p>MDx 自 1.9.3 版本起已经包含了对文章页的打印样式优化。可以很容易地看出，优化后的样式在物理纸张上将更容易阅读。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\" alt=\"\" width=\"1345\" height=\"1602\" class=\"aligncenter size-full wp-image-1959\"></a>\n<h2>prefers-color-scheme</h2>\n<p><code>prefers-color-scheme</code> 是最近才被浏览器广泛支持的一个媒体查询，但它的功能却很强大：<strong>响应系统级黑暗模式。</strong>这样，我们可以在开启黑暗模式的系统中让网页具有更好的可读性。不过由于这个媒体查询直到最近才被广泛支持，因此大部分网站对此并没有进行适配。</p>\n<blockquote><p>一些适配这一特性的网站：少数派、微信公众平台（文章页）等。</p></blockquote>\n<p>通过像这样的媒体查询，我们可以在系统启用黑暗模式时让页面实时响应：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    body {\r\n        background-color: #212121;\r\n        color: rgba(255, 255, 255, .7);\r\n    }\r\n}</pre>\n<p><code>prefers-color-scheme</code> 一共有 3 个可能值：<code>no-preference</code>, <code>light</code> 和 <code>dark</code>。你也可以不像上面的例子那样默认使用亮色样式并在黑暗模式下启用黑暗样式，而可以反过来将黑暗样式作为默认，用亮色样式覆盖。在不支持的浏览器上将会显示默认样式（即媒体查询不会生效）。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<h2>prefers-reduced-motion</h2>\n<p>看名字就猜得出，<code>prefers-reduced-motion</code> 是和 <code>prefers-color-scheme</code> 师出同门的媒体查询。因此，和 <code>prefers-color-scheme</code> 一样，它也是在最近才获得了浏览器的广泛支持。它的作用也很强大：<strong>响应系统的“减弱动态效果”模式。</strong>这对某些不喜欢甚至无法接受动画的用户可能很有帮助。要知道，对有些用户来说这甚至是医疗上的必要。使用如下的媒体查询，我们可以在系统启用减弱动态效果模式时让页面实时响应，减弱动画：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-reduced-motion: reduce) {\r\n    /*只是一个示例，实际情况中可以保留一些淡入淡出效果*/\r\n    * {\r\n        transition: all 0s!important;\r\n        transform: none!important;\r\n    }\r\n}</pre>\n<p><code>prefers-reduced-motion</code> 只有 2 个可能值：<code>no-preference</code> 和 <code>reduce</code>，在不支持的浏览器上该媒体查询不会生效。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\" alt=\"\" width=\"792\" height=\"515\" class=\"aligncenter size-full wp-image-1962\"></a>\n<h1>黑暗模式适配</h1>\n<p>黑暗模式可不是简单地切换到黑底白字这么简单。<strong>单纯地使用黑底白字会导致页面元素之间对比度过高，文字刺眼，反而降低了页面的可访问性。</strong>我在下面总结了几条应用在了 MDx 中的黑暗模式优化规则和 Google 推荐的优化规则：</p>\n<p><strong>一是避免黑底白字。</strong>黑底白字看起来真的很难受，事实上，深灰和浅灰是黑暗模式最好的配色。比较下方例子里的两段文本，毫无疑问深灰色背景和浅灰色文字搭配的样式的可读性要比黑底白字高很多。（p.s. 有时候这条规则在白底黑字时也适用）</p>\n<p><strong>二是更改部分元素的亮度和对比度以增强可读性。</strong>你可能已经注意到了，下面优化的例子里标题文字的颜色改变了。很明显，未优化的黑暗模式中标题可读性不如优化的版本。在实际中，我们通常可以通过 CSS 滤镜来实现这一更改。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    h1 {\r\n        /*反相颜色后再将色相旋转 180 度，使亮度反相*/\r\n        filter: invert(1) hue-rotate(180deg);\r\n    }\r\n}</pre>\n<p><strong>三是避免让图片过亮。</strong>未经处理的图片通常会导致过高的对比度，降低可读性。在 MDx 中，我选择降低图片的亮度来避免图片刺眼，而 Google 的建议则是使图片灰度，不过这会影响图片的整体观感。无论是哪一种方案，都可以使用 CSS 滤镜来轻松实现。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    img { \r\n        /*MDx 方案*/\r\n        filter: brightness(.8);\r\n        /*Google 方案*/\r\n        filter: grayscale(.5);\r\n    }\r\n}</pre>\n<div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是未优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是经过优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n</div>\n<h1>其他细节</h1>\n<p>还有一些细节，虽然简单，但不可或缺。我把一部分没有在上文提到的 MDx 中的细节列在了这里。</p>\n<p><strong>一是允许页面缩放。</strong>在开发响应式页面时，很多网站会在页面头部添加这样一个 <code>meta</code>：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"&gt;</pre>\n<p>这样的 <code>meta</code> 设定了页面的宽度，却也固定了页面的缩放比例，用户难以手动放大网页。<strong>这样的设置对一部分视力障碍用户非常不友好</strong>，以至于苹果决定在自家的浏览器上忽略禁止缩放的 <code>meta</code>。按照 Google 的推荐，如果你在 MDx 设置中启用了“允许页面缩放”，那么 MDx 会输出这样的 <code>meta</code> 标签，允许页面进行五倍以内的缩放：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=5\"&gt;</pre>\n<p><strong>尽管很多时候放大页面会导致页面结构被破坏，但这大大增强了页面的可访问性，利大于弊。</strong>因此，在 MDx 中，“允许页面缩放”是默认启用的。</p>\n<p><strong>二是在跨设备阅读时同步阅读记录。</strong>这属于 MDx 的“元老级”功能之一。注意到页面右上角的那个“在其他设备上继续阅读”的按钮了吗？如果你滚动页面后重新点击它，你会发现二维码发生变化了。通过在二维码中记录阅读进度，用户在扫描二维码切换设备阅读时，MDx 在新设备上会自动滚动到和原设备上一致的位置——好吧，目前基于百分比的算法在某些情况下可能不太准，但我已经设计了一个更复杂但更精确的阅读进度记录算法，之后就会更新到 MDx 中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\" alt=\"\" width=\"1000\" height=\"574\" class=\"aligncenter size-full wp-image-1976\"></a>\n<p><strong>三是避免 Web 字体阻塞渲染。</strong>如果你在页面中使用了 Web 字体，在字体加载完成之前，浏览器可能不会渲染任何文本，这就导致用户可能需要等待一段时间才能开始浏览网页。Google 推荐使用 <code>font-display: swap;</code> 来向浏览器指定网页的 Web 字体渲染策略。这一规则会提供一个比较短的等待周期，如果在这段时间内 Web 字体没有完成加载，那么浏览器会以 fallback 字体渲染文本。任意时刻一旦 Web 字体完成渲染，浏览器就会使用 Web 字体重新渲染文本。这在大多数情况下都能满足可访问性的需求。</p>\n<p><strong>四是确保 html 元素具有合适的 <code>lang</code> 属性。</strong>这一属性声明了页面的主要语言，浏览器可以据此调整渲染策略，或者触发自动翻译；屏幕阅读器也能更好地阅读网页。</p>\n<p><strong>五是确保页面主要内容在丢失/禁用了 Javascript 甚至 CSS 的情况下仍然可用。</strong>作为一个以内容为主的网站，MDx 在禁用了 Javascript 的情况下页面主要内容仍然可用。这不只是为了 SEO，更是为了保证页面的可访问性。的确，目前的情况下，如果开启了 Lazyload，MDx 在禁用 Javascript 的情况下图片的确无法显示，但我会在后续版本中尽可能的优化这一问题。</p>\n<h1>附录：媒体查询开发技巧</h1>\n<p>有的时候，光有 CSS 响应媒体查询还不够，我们可能需要在 Javascript 中实时响应媒体查询。用如下代码就可以很简单地响应媒体查询：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let mql = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\r\nmql.addListener(handleMediaChange);\r\n\r\n//在添加监听后先调用一次，获得当前查询结果\r\nhandleMediaChange(mql);\r\n\r\nfunction handleMediaChange(mql){\r\n    if(mql.matches){\r\n        //查询匹配\r\n    }else{\r\n        //查询不匹配\r\n    }\r\n}</pre>\n<p>在开发上述媒体查询的过程中，我们需要频繁地切换系统的相应模式或者调出打印窗口。<strong>实际上，Chrome 提供了更简单的调试方法：</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1946\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\" alt=\"\" width=\"723\" height=\"681\"></a>\n<p>只要在这里更改模式，相关媒体查询就能实时生效。这不会影响其他标签页，在关闭开发者工具之后也会自动恢复系统设置。</p>\n","link":"https://flyhigher.top/develop/1912.html"},{"title":"MDx Blog 现已随 MDx 1.9.5 发布","date":"2020-01-22 17:54:11","description":"<p>随着 MDx 发布 1.9.5 更新，<a href=\"https://mdxblog.flyhigher.top/\" rel=\"noopener noreferrer\" target=\"_blank\">MDx Blog</a> 现已建立。我将会在 MDx Blog 中分享一些开发故事并发布 MDx 更新日志。</p>","link":"https://flyhigher.top/diary/1905.html"},{"title":"GitHub 2019 统计无垠版","date":"2020-01-12 13:02:00","description":"\n<h1>缘起</h1>\n<p>2019 年底，我突发奇想想要自己统计一番 GitHub 上存储库的一些信息。尽管 GitHub 有自己的<a href=\"https://octoverse.github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">年度统计</a>，我还是想试着自己爬取一下，说不定能挖出什么有意思的信息，何况这是我第一次有机会处理比较大量的数据，也算是一种学习的过程吧。于是花了一下午写了个简单的爬虫（时间都花在增加 Rate Limit 上了...），然后扔在了两台服务器上开始跑（GitHub  API 真是好文明）。</p>\n<p>从 2019.11.21 3 时到 2020.1.12 24 时的 52 天 21 小时内，我的爬虫一共爬取了<strong>与 2,024,705 个用户有关<sup>*</sup>的 14,651,923 个公共存储库的基础信息</strong>，平均每秒爬取 3.2 个存储库。据 GitHub 的官方数据计算，我爬取了大约 15% 的存储库信息，但由于封禁库和私有库的数量未知，我暂时无法确定我爬取的存储库占公共库的比例。同时由于存储库数量较多，基本可以认为爬取到的样本在时间尺度上已经足够随机，可以通过统计得出一般结论。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\" alt=\"\" width=\"700\" height=\"606\" class=\"aligncenter size-full wp-image-1892\"></a>\n<p>爬到自己了，合影.jpg</p>\n<p>那么下面就来看看统计出来的一些结果吧。爬虫的技术细节和数据集下载放在文末。</p>\n<p>* 指这些用户拥有至少一个库</p>\n<h1>统计信息</h1>\n<p><strong>以下统计结果均基于已放于文末的数据集。</strong>由于爬虫爬取的时间跨度长，加上我并没有完整爬取 GitHub 所有存储库，因此我<strong>不能保证以下统计结果符合真实情况</strong>，各位可以下载数据集或自行爬取进行验证。</p>\n<h2>一些数据</h2>\n<div>\n<div>\n<div>\n<span>3,120,930</span><br>总爬取用户数</div>\n<div>\n<span>44.7%</span><br>的存储库创建<br>自 Fork</div>\n<div>\n<span>6.59%</span><br>的账户被删除或<br>封禁<sup>1</sup>\n</div>\n<div>\n<span>23,913</span><br>单用户拥有最大<br>库数量<sup>2</sup>\n</div>\n</div>\n</div>\n<p><sup>1</sup> 基于用户 ID 规律合理推断<br><sup>2</sup> 统计范围仅限于当前数据集</p>\n<p>比较出乎我意料的是创建自 Fork 的存储库的占比。我预估这样的存储库占比不会太低，但没有想到能接近一半。此外单用户拥有最大库数量也大大超出了我的预期，<a href=\"https://github.com/pombredanne\" rel=\"noopener noreferrer\" target=\"_blank\">pombredanne</a> 这个用户名下拥有将近 24k 的存储库，不过绝大多数都是 Fork 来的，在情理之中。此外<strong>这个数据集中</strong>拥有最多存储库的账户其实是一个组织 <a href=\"https://github.com/gitpan\" rel=\"noopener noreferrer\" target=\"_blank\">gitpan</a>，这个组织拥有 36,377 个存储库。</p>\n<h2>语言</h2>\n<p><canvas></canvas><br>\n首先必须要说明的是，在这个榜单中我<strong>排除了 HTML 和 CSS</strong>，因为在严格意义上它们不属于“编程语言”。如果把它们计算进来的话，分别有 640,368 个和 361,425 个存储库的主要语言分别是 HTML 和 CSS，这样在这份榜单中它们可以排到第 6 和 第 10 名。JavaScript 毫无疑问获得第一，第二名 Python 的热度则和 JavaScript 相差将近一半。<strong>此外还有 2,448,486 个存储库未能识别出语言，占比 16.7%。</strong>在上面的榜单之外，与机器学习和数据科学相关的语言还有 Jupyter Notebook 排名第 13，R 排名 20，Julia 排名 43。</p>\n<p>说实话这份排名和 GitHub 官方的排名<strong>差别很大</strong>，除了前三名，后面的基本都不太一样。我的排名统计结果完全基于 GitHub 对于存储库的主要语言识别，加上我的存储库数据不完整，和官方的数据不同是很正常的，可以做一个参考，但大概率还是官方排名更加准确。</p>\n<h2>许可证</h2>\n<p><canvas></canvas></p>\n<p>自 GitHub 推出许可证功能以来，拥有许可证的存储库比例升升降降，却始终没有超过一半。<strong>选择一个合适的许可证对项目的良好发展真的很有帮助</strong>，要了解如何选择合适的许可证，请参阅<a href=\"https://www.runoob.com/w3cnote/open-source-license.html\" rel=\"noopener noreferrer\" target=\"_blank\">这篇文章</a>。</p>\n<p><canvas></canvas></p>\n<p>对于拥有许可证的存储库，MIT<del> 麻省理工许可证 </del>总是占比最大的；第二则是 Apache-2.0 许可证。此外，WTFPL 许可证也挤入了前 15 名。</p>\n<h2>星标</h2>\n<p><canvas></canvas><br>\nStar 数量毫无疑问是一个存储库受欢迎程度的体现，而 Star 数高的项目基本上大家都了解过。<strong>截至爬取结束时间</strong>，GitHub 中 Star 数最多的库是 <a href=\"https://github.com/freeCodeCamp/freeCodeCamp\" rel=\"noopener noreferrer\" target=\"_blank\">freeCodeCamp</a> <del>非常完美的驼峰命名法</del>，其次则是著名项目 <a href=\"https://github.com/996icu/996.ICU\" rel=\"noopener noreferrer\" target=\"_blank\">996.ICU</a>。<a href=\"https://github.com/vuejs/vue\" rel=\"noopener noreferrer\" target=\"_blank\">Vue</a> 现在的 Star 数已经稳压 <a href=\"https://github.com/facebook/react\" rel=\"noopener noreferrer\" target=\"_blank\">React</a> 一头，Vue YES! 此外 <a href=\"https://github.com/sindresorhus/awesome\" rel=\"noopener noreferrer\" target=\"_blank\">awesome</a> 也挤进第七名。<br><canvas></canvas><br>\n由于 Star 需要时间积累，新项目的 Star 数量很可能是比不过老项目的，这就会导致有实力的新项目无法出现在榜单中。因此我还统计了日均 Star 数，试图通过日均 Star 数来反映项目受欢迎的程度。<strong>由于正热门的项目会比老牌热门项目有优势，这一项的统计范围是 2020-01-01 之前的所有存储库。</strong>996.ICU 和 freeCodeCamp 再次出现在前 10 名，而最近的热门项目 <a href=\"https://github.com/wenyan-lang/wenyan\" rel=\"noopener noreferrer\" target=\"_blank\">wenyan</a> 则飙升至第 2 名。此外还有 <a href=\"https://github.com/menzi11/BullshitGenerator\" rel=\"noopener noreferrer\" target=\"_blank\">BullshitGenerator</a>，即最近热门的“狗屁不通文章生成器”和 <a href=\"https://github.com/evil-huawei/evil-huawei\" rel=\"noopener noreferrer\" target=\"_blank\">evil-huawei</a> 分列第 3 和第 5 名。<br><canvas></canvas><br>\n说实话这个曲线<strong>比我预估的陡多了。</strong>你可能已经注意到了，这个图表的横轴不是均匀缩放的，实际上曲线要比看起来陡很多。同时受爬取方式的影响，GitHub 中 Star 数较少的存储库数量远比我爬取到的多。也就是说，<strong>实际情况下曲线远比这个图表上的陡。</strong>拿点 Star 不容易啊。</p>\n<h2>名称</h2>\n<p><canvas></canvas><br>\n终于知道了原来存储库的名称是有长度限制的...尽管最长有 100 位，<strong>大部分人还是喜欢 8 位长的存储库名。</strong>此外 1 位长的名称也比我预估的要多一些。举几个存储库名称长度为 100 的例子吧。</p>\n<ul>\n<li>testing-something-elsetesting-something-elsetesting-something-elsetesting-something-elsetesting-some</li>\n<li>acts_as_validated_config_so_app_will_not_run_in_random_situation_and_qa_gays_will_not_cry_to_you_whe</li>\n<li>............................................________-....................................-.---......</li>\n<li>----------------------------------------------------------------------------------------------------</li>\n<li>nyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyan</li>\n</ul>\n<p>...创造力有够丰富的。</p>\n<p><canvas></canvas></p>\n<p>最近 GitHub 上有一种奇怪的风气，那就是建立 Awesome 合集<del>骗 Star</del>。看起来 Awesome 存储库满地都是，甚至还出现了关于 Awesome 的 Awesome 合集这种迷惑行为。于是我统计了一下，<del>还好，</del>占比<del>才</del> 0.5% 不到<del>，Awesomer 们任重而道远呐</del>。</p>\n<p><canvas></canvas></p>\n<p>尽管要在 github.io 上托管网站，存储库不一定要以 .github.io 结尾，但我还是统计了一下。拥有这类存储库的用户比我预想的要少一些，看来还有很多人没有完全发挥 GitHub 的完整实力啊<del>（比如我 Doge）</del>。同时<strong>这类存储库在所有存储库中占比 1.12%</strong>，看起来不多<del>，不过至少比 Awesome 多</del>。<br><canvas></canvas><br>\n看得出来 GitHub 对于用户名长度的限制是 1-40 位。用户名最短的 27 位占据了 <code>A-Z</code> 外加 <code>-</code> 的所有可能，而用户名最长的则是一个组织 <a href=\"https://github.com/UOIT-RESEARCH-database-information-group\" rel=\"noopener noreferrer\" target=\"_blank\">UOIT-RESEARCH-database-information-group</a>。不知道是巧合还是某种规律，<strong>最受欢迎的用户名长度和存储库名称长度一样，都是 8</strong>，有点意思。</p>\n<h2>创建时间</h2>\n<p><canvas></canvas><br>\n由于我并没有完整爬取所有存储库，我只能以相对值来统计每月新增存储库数量的变化趋势。<strong>在这个图表中，我将 2017-09 的数据设为了 100%。</strong>你一定一眼就能注意到 2017 年 6,7,8 月的“一柱擎天”。<del datetime=\"2020-02-05T09:18:30+00:00\">我第一次看到这个数据的时候的确愣了一下，不过就着这条新闻看就能明白为什么了：<strong>2017 年 6 月微软收购 GitHub。</strong></del></p>\n<blockquote><p>重新确认了一下，微软收购 GitHub 比这个高峰晚了一年，目前我对这个高峰没有什么很好的解释，如果你有什么思路的话欢迎评论。</p></blockquote>\n<p><strong>需要注意的是这张图表中我排除了 Fork 存储库</strong>，因为 Fork 存储库在 API 中的创建时间是原始存储库的时间，会影响整体趋势。此外，GitHub 中还有一个创建于 2007 年 10 月 29 日的存储库，那就是 <code>id: 1</code> 的...</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"mojombo\" data-mdxgithubp=\"grit\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/mojombo/grit\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>而它的创建者正是 GitHub 的创始人之一 Tom Preston-Werner。</p>\n<h1>一些有趣的结果</h1>\n<p>当初打算自己爬的目的之一就是想看看能不能挖出什么有意思的信息，结果真的有一些不挖不知道的信息。</p>\n<h2>奇怪的存储库</h2>\n<p>在爬取到的所有存储库中，<strong>有 3 个存储库是“无主”的</strong>，即它们的 owner 属性为空。这三个存储库的基本信息如下。</p>\n<div class=\"mdui-table-fluid mdui-table-hoverable\"><table class=\"mdui-table\">\n<thead><tr>\n<th>ID</th>\n<th>名称</th>\n<th>Forked</th>\n<th>Star</th>\n<th>语言</th>\n<th>许可证</th>\n<th>创建于</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>72385291</td>\n<td>vscode-redprl</td>\n<td>否</td>\n<td>10</td>\n<td>TypeScript</td>\n<td>apache-2.0</td>\n<td>2016-10-31 08:50:01</td>\n</tr>\n<tr>\n<td>181218346</td>\n<td>electron-sys</td>\n<td>否</td>\n<td>10</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-14 03:20:56</td>\n</tr>\n<tr>\n<td>181391880</td>\n<td>node-sys</td>\n<td>否</td>\n<td>6</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-15 09:33:08</td>\n</tr>\n</tbody>\n</table></div>\n<p><strong>更奇怪的是这三个存储库“无主”的情况还不一样。</strong>第一个存储库可以通过 <code>/repositories</code> 这个 GitHub API 找到， <a href=\"https://api.github.com/repositories?since=72385290\" target=\"_blank\" rel=\"noopener noreferrer\">这个链接</a>中的第一个存储库就是它；而其余两个存储库甚至无法在 <code>/repositories</code> API 中找到。不过就算能在 API 中找到第一个存储库，它的 <code>html_url</code>，即 <code>https://github.com//vscode-redprl</code> 仍然是不可访问的。这可能是 GitHub 早期的一个 Bug 导致的，不过我仍然对爬虫是如何找到这三个存储库的以及这些 Stars 是哪里来的感到好奇。</p>\n<h2>奇怪的用户名</h2>\n<p>在爬虫爬了一段时间以后，API 中突然开始出现大量的以 fdp 开头的 18 位乱码作为用户名的用户。这些用户拥有的存储库和 starred 的存储库都为 0，而他们的 <code>html_url</code> 为 404。以下是几个例子。</p>\n<ul>\n<li>fdpEpolGCEdQX4ZlRJ</li>\n<li>fdp8XaVrdtmDZnO5pR</li>\n<li>fdp8XRAGnwAOkTr2Ya</li>\n</ul>\n<p>由于我的爬虫并没有超过 Rate Limit，所以我排除了这是污染数据的可能。我怀疑这可能是某种 Bot 账户，于是一边更新爬虫过滤掉了这些用户，一边给 GitHub 支持发邮件问了具体情况。过了两天 GitHub 回复我说这些是<strong>被自动判为可疑进而被封禁的用户</strong>（原话是 they have been flagged by our automated measures for detecting suspicious behavior）。<del>想到我正在疯狂爬取 GitHub，突然害怕.webp</del></p>\n<p>行吧。</p>\n<h1>技术细节</h1>\n<p>爬虫使用 Python3 编写，数据库使用 MySQL。爬虫共使用了 4 个 API Token，在两台服务器上分布式爬取。爬取思路为：</p>\n<ol>\n<li>通过 <code>/users</code> API 遍历用户，每个请求最多获取 30 个用户信息</li>\n<li>循环 30 个用户，分别获取 <code>/users/&lt;user_name&gt;/starred</code> 和 <code>/users/&lt;user_name&gt;/repos</code> API 中的存储库信息，每个请求最多获取 100 个存储库信息，超过 100 个的分页获取</li>\n<li>提取存储库信息，插入数据库。对于已存在的存储库，更新数据</li>\n<li>获取下 30 个用户信息</li>\n</ol>\n<p>由于爬取过程中我多次调整了爬虫逻辑，爬虫爬取到的用户 ID 区间并非连续的，具体区间为1-839586, 14800001-14885493 及 28965251-31161101。</p>\n<h1>免责声明</h1>\n<p>本站会尽可能地提供准确信息，但本站不对此文章中信息的准确性和即时性及带来的任何影响负责。</p>\n<p>本站不代表 GitHub 官方，本文仅供学习之用，请不要将本文内容直接用于任何商业项目中。</p>\n<h1>数据集下载</h1>\n<p>导出的 SQL 文件大约为 1.38GB，全部放在了 GitHub 上（在危险的边缘试探.webp</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"github-analysis-2019\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/github-analysis-2019\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>此外我也提供了 MEGA 下载，链接<a href=\"https://mega.nz/#F!juxm3A6T!7Vwpzi82W1OFrqTLu1A1pQ\">在这里</a>。</p>\n","link":"https://flyhigher.top/develop/1564.html"},{"title":"Milkice 跨年红包解谜 Writeup 及无垠跨年红包解谜答案","date":"2020-01-02 04:29:19","description":"\n<blockquote><p><del>又到了水文章的时间呢</del></p></blockquote>\n<p>先说明一下，这篇文章原本不是在计划中的，而原来说好的「在路上的两篇」文章<del>绝对不会咕</del>。我自己的红包答案本来打算直接塞在年度总结里的，结果发现稍微有些长，再加上我还花了一些时间解了<a href=\"https://milkice.me/\">奶冰</a>的红包解谜游戏，就打算把两个解谜过程放在一起单独写一篇文章。<del>真是个水文章的好理由</del>（被打死</p>\n<h1>奶<del> 子 </del>冰的红包</h1>\n<p>奶冰的红包题目比我的难多了，所以让我们先从难的开始吧。首先看一下<a href=\"https://milkice.me/2019/12/31/2019-summary/\">题目</a>：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1524\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\" alt=\"\" width=\"746\" height=\"410\"></a>\n<p>入口是 <code>happy.2020.milkice.me</code>，扔到浏览器里面表示找不到 IP，那么大概率就是 DNS 的 TXT 记录了，查一下得到 <code>nb2hi4dthixs63ljnrvwsy3ffzwwkl3tivrvezluomxxg5dsmvqw2ltqmnqxa3th</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1525\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\" alt=\"\" width=\"896\" height=\"278\"></a>\n<p>第一眼没看出来是什么编码，直觉是 BaseXX 系列的编码，加上提示“不只有 Base64”，可以推断出是 Base32，转大写解码得到 <code>https://milkice.me/sEcRets/stream.pcapng</code>。是个 URL，下载得到一个 Wireshark 文件，打开一看是和某 USB 设备的通讯抓包。<del>不会做，不做了。</del></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1526\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\" alt=\"\" width=\"1500\" height=\"813\"></a>\n<p>奶冰提示我“Google 上搜得到”，结合第二条提示搜索“wacom pcapng”找到了<a href=\"https://blogs.tunelko.com/2017/02/05/bitsctf-tom-and-jerry-50-points/\">这篇文章</a>（<del>这™就是答案啊</del>）。看起来是一样的套路，即通过解析数据得到数位板上画的内容，于是按文章的思路筛选出数位板发给主机的数据，导出，然后再用 tshark 导出文本数据。本来我想直接用文章中的 POC 的，结果折腾半天因为源的蜜汁原因库没装上，于是按文章中给出的数据结构自己写了段代码，分别导出 X、Y 轴数据扔进 Excel 画散点图。（<del>别问我为什么用 Excel，因为我手边没有更好的工具了</del>）</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1528\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\" alt=\"\" width=\"1280\" height=\"530\"></a>\n<p><span>翻车现场之一</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1539\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\" alt=\"\" width=\"1000\" height=\"286\"></a>\n<p><span>懵逼奶冰.webp</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1533\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\" alt=\"\" width=\"1500\" height=\"462\"></a>\n<p>看得出有手写文字，不过是上下颠倒的，翻转图片得 <code>https://milkice.me/2020/uso.zip</code>。是个 zip，下载打开一看，有密码。<del>不会解，不做了。</del> 第一反应是暴力解密码，但是暴力跑了 15 分钟还是没有跑出来。暴力太不优雅了，肯定不是正确思路，但奶冰什么都不肯说了。不过在这时我终于发现第一个红包口令码就藏在压缩包的注释中，Get。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1544\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\" alt=\"\" width=\"806\" height=\"593\"></a>\n<p>然而题还没解完，回去看提示，看到提供了 osu 谱面下载，于是打算不管怎么样先下载来看看。然而 osu 谱面下载要登录，只好又花了几分钟找到第三方站点，成功下载。这时候可以注意到 uso.zip 里有个同名文件（432314 Mike Greene - Bill Nye the Science Guy Theme Song (Chinese Intro).osz），可以联想到是明文攻击。好吧，上 ARCHPR，十秒解出。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1530\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\" alt=\"\" width=\"462\" height=\"643\"></a>\n<p><span>现场还原.jpg</span></p>\n<p>.osz 文件并不是明文，猜测是压缩包（和 .pptx 一个思路嘛），于是改后缀 .zip 顺利打开。然后红包口令码就藏在奶冰的 .osu 文件中了，由提示可知是明文，打开即可得到。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1542\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\" alt=\"\" width=\"457\" height=\"255\"></a>\n<h1>我的红包</h1>\n<p>相比起来<a href=\"https://flyhigher.top/diary/1464.html\">我的题目</a>就简单很多了嘛...三天时间一共发出了 25 个红包，包括一位重复领取的🌚，比前几年还是多了一些的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\" alt=\"\" width=\"500\" height=\"306\" class=\"aligncenter size-full wp-image-1554\"></a>\n<p><span>这位同学以后请不要多次领取🌚</span></p>\n<p>那么来看看答案吧。</p>\n<h2>第一阶段</h2>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>首先观察字符串，可以发现 <code>.</code> <code>/</code> <code>_</code> 等一些 ASCII 字符原样留在了字符串中，而其他字符被由 <code>=</code> 和十六进制构成的某种编码所替代。如果你正好有所了解，你应该能认出这是 Quoted-printable 编码，这是一种常用于邮件中的编码，可以用<a href=\"https://mothereff.in/quoted-printable\">这个页面</a>解码。如果你不了解，你也应该可以发现这种编码和 URL 编码非常相似。如果你把 <code>=</code> 替换为 <code>%</code>，那么你就可以用各种方法顺利地把它按 URL 编码来进行解码，最后可以得到 <code>αхtоn.іm/соdе_оf_2020_⒈mρз</code>。这个字符串里大部分字符都不是 ASCII 字符，只是长得像而已。根据第一个提示“全是 ASCII 字符”，按样子把字符串用 ASCII 字符抄一遍，可以得到最终 URL 为 <code>axton.im/code_of_2020_1.mp3</code>。</p>\n<h2>第二阶段</h2>\n<p>下载音频，可以听出音频是经过某种处理的白噪音。白噪音的特点是各频段的功率都均匀分布，在白噪音上做文章，很容易就可以联想到线索藏在频谱中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1534\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\" alt=\"\" width=\"1200\" height=\"719\"></a>\n<p>频谱被处理成了 24x3 的网格，结合第二条提示“24x3，横向读取”可以推断出是将频谱当作二进制读取，得到 <code>01111001 01110010 01100011 00101110 01101101 01100101 00101111 00110010 00110000</code>，转为 ASCII 字符可得 <code>yrc.me/20</code>。</p>\n<h2>第三阶段</h2>\n<p>打开上一步得到的页面，提示要求输入十位数密码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1536\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\" alt=\"\" width=\"663\" height=\"460\"></a>\n<p>如果你在上一步注意到了这个音频文件奇怪的属性，你可以反应过来这里的密码就是 <code>2000202020</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1537\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\" alt=\"\" width=\"421\" height=\"651\"></a>\n<p>如果你没有注意到，查看页面代码可以看到一条注释 <code>&lt;!-- Tips: the attribute of the audio --&gt;</code> 将你引导向音频文件的属性。输入密码，解锁即可进入下一步。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1535\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\" alt=\"\" width=\"397\" height=\"223\"></a>\n<h2>第四阶段</h2>\n<p>可以看到是一张图片，内容为“<del>.JPG</del>”和“.ZIP”。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter size-large wp-image-1532\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n<p>和去年一样的套路，下载图片，将后缀名改为 .zip 然后打开，可以看到 README.txt。</p>\n<h2>最后一步</h2>\n<p>查看 README.txt 的内容，可以了解到需要去 🤔.axton.cc 获取红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1538\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\" alt=\"\" width=\"1131\" height=\"278\"></a>\n<p>扔到浏览器里会出现奶冰同款找不到 IP，于是可以联想到 TXT 记录。唯一的问题是 🤔 这个 Emoji 需要如何处理。域名使用 Punycode 将 Unicode 字符转换为 ASCII 字符，特点是以 <code>xn--</code> 开头。如果你把上面这个域名扔进浏览器，你会发现它变成了 <code>xn--wp9h.axton.cc</code>。然后查询 TXT 记录，即可得到红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1527\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\" alt=\"\" width=\"804\" height=\"557\"></a>\n","link":"https://flyhigher.top/develop/1519.html"},{"title":"无垠 2019 年度总结","date":"2019-12-29 12:25:52","description":"\n<p>又是时间飞快的一年...写 2018 总结的情景似乎还在眼前，转眼居然已经到 2019 年末了。</p>\n<p>2019 年，发生了太多事情，包括真的转折了人生的高考，这也导致我博客更新的不多（难以置信居然才更了两篇...），不过两篇技术性文章已经在路上了，可以期待一下。</p>\n<p>2019 年我也学了不少东西（单指技术方面），比如终于认真学了 Vue（但是还要练手）。书买了一大堆，看完的倒是没几本orz</p>\n<p>呼，好吧，是时候回顾一下充满坎坷的这一年了。2019 年还剩下最后两天，希望 2020 年，我能做得更好。</p>\n<h1>一些数据</h1>\n<p>照惯例先来看看一些数据吧。今年是统计系统完整统计了的第二年，终于可以和去年的数据比较一下了。以下数据的统计范围是 2019年1月1日0时至 2019年12月29日20时。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 26,901 (<span>+4%</span>)，年 PV 76,583 (<span>+3%</span>)，日均 UV 73.7，平均停留时间 5分13秒 (<span>-13.8%</span>)，平均跳出率 53% (<span>+20.5%</span>)。一年有效文章数 2 (<span>-50%</span>)，新增评论 439 条。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\" alt=\"\" width=\"1000\" height=\"1143\" class=\"aligncenter size-full wp-image-1511\"></a>\n<p>有趣的是今年文章数腰斩，访问数反而小有提升。<del>如果我哪天不更新了，访问数是不是可以无限大呢？</del></p>\n<p>今年博客最大的改动就是把整体风格切换到了 Material Design 2（当然这是 <a href=\"https://flyhigher.top/develop/788.html\">MDx</a> 中的可选功能，给自己打个广告2333），此外还有比较失败的 WebP 改造计划，因为和缓存冲突已经回滚了。<a href=\"https://flyhigher.top/develop/1245.html\">ABS 系统</a>进展不大，主要是真的没有太多时间，还是要再学习一个。</p>\n<h2>个人主页</h2>\n<p>虽然个人主页的 TODO List 列了老长，但今年完全没有更新，也没有推广，从今年 8 月底开始还莫名被某墙认证了，直到 11 月底才恢复，于是今年总访问量比去年少了很多，</p>\n<p>有多少呢？这么少：总 UV 2,141 (<span>-65.9%</span>)，总 PV 2,744 (<span>-66.6%</span>)，日均 UV 6 (<span>-65.9%</span>)，平均停留时间 62秒 (<span>+19.2%</span>)。主要来源是知乎和 V2EX，还有一些甚至是从微信来的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\" alt=\"\" width=\"1000\" height=\"1103\" class=\"aligncenter size-full wp-image-1512\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 8 次，新增 171 commits，2 种语言的翻译，Star 数增加了 175，现有 408。感谢所有人的支持，尤其是 <a href=\"https://github.com/Sn0bzy\" rel=\"noopener noreferrer\" target=\"_blank\">Hasan CAN</a>, <a href=\"https://github.com/yechs\" rel=\"noopener noreferrer\" target=\"_blank\">Ye Shu</a>, <a href=\"https://github.com/StarryLeo\" rel=\"noopener noreferrer\" target=\"_blank\">StarryLeo</a>, <a href=\"https://github.com/DCTewi\" rel=\"noopener noreferrer\" target=\"_blank\">冻葱Tewi</a>, <a href=\"https://github.com/syfxlin\" rel=\"noopener noreferrer\" target=\"_blank\">Otstar Lin</a> 等为 MDx 做出了不小贡献的你们。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：<a href=\"https://flyhigher.top/photograph/1309.html\">上手</a> DJI OSMO Pocket</li>\n<li>四月：最后一次参加浙江省普通高中学业水平考试</li>\n<li>五月：MDx 喜提 300 Stars</li>\n<li>六月：高考 <del>炸了，差亿点点上浙大</del>\n</li>\n<li>六月：入手了 Oneplus 7 Pro</li>\n<li>六月：和同学一起去成都重庆旅行</li>\n<li>六月：第一次近距离感受到地震</li>\n<li>六月：<a href=\"https://flyhigher.top/diary/1411.html\">入手</a>了一台雷蛇灵刃 15，目前是主力机</li>\n<li>七月：参与组织 THE Hack 2019 活动</li>\n<li>七月：面基了 <a href=\"https://itroy.cc/\" rel=\"noopener noreferrer\" target=\"_blank\">Tory</a>, Bie Shi 和 <a href=\"https://oxz.me/\" rel=\"noopener noreferrer\" target=\"_blank\">FHYunCai</a>\n</li>\n<li>八月：一个人去厦门武汉转了一圈，拍了自己的第一个 Vlog</li>\n<li>八月：入手了一个 Kindle Paperwhite 4，没有泡面可以压，于是用来看英文小说了</li>\n<li>八月：加入 TEDxNingbo 志愿者团队</li>\n<li>八月：和 Ralph 面基</li>\n<li>八月：入手了一个 Yubikey</li>\n<li>九月：人生第一次参加雅思考试 <del>7分，蛮开心的</del>\n</li>\n<li>十月：入手了一个 Samsung Galaxy Watch Active 2 <del>觉得不值</del>\n</li>\n<li>十一月：MDx 达到 400 Stars</li>\n<li>十一月：为 TEDxNingbo 设计开发的 H5 上线</li>\n<li>十一月：入手了第一台胶片相机，试图入坑胶片摄影</li>\n<li>十一月：参加 TEDxNingbo 2019 大会</li>\n<li>十二月：<del>我 Cytus II 入门了</del>\n</li>\n</ul>\n<h1>跨年红包</h1>\n<p>这算「传统习俗」了。和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2020年1月2日。</p>\n<p>今年的解谜旅程，从下面这个字符串开始。</p>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>由于今年的题目比以前稍微难了一些，所以今年的红包金额还是比较大的，而且不限量，尽你所能试一试吧。</p>\n<p>一点你可能用得上的提示：URL 里全是 ASCII 字符 / 24x3，横向读取。</p>\n<p><a href=\"https://flyhigher.top/develop/1519.html\">答案</a>已公布。</p>\n<h1>跨年海报</h1>\n<p>这算是另一个「传统习俗」（笑）。因为我有做跨年海报的习惯，所以以下就是今年份的海报啦。</p>\n<p>用了 C4D+PS，还有我的一整个下午。</p>\n<p>提前祝各位新年快乐！</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter wp-image-1467 size-large\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n","link":"https://flyhigher.top/diary/1464.html"}]