[{"title":"从选购到使用，让 3D 打印机打开新世界的大门","date":"2022-09-10 07:30:00","description":"3D 打印机虽然看上去没什么用，但当你获得了可以加工各种形状零件能力的时候，你的想法可能就不太一样了。<a href=\"https://sspai.com/post/75665\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75665"},{"title":"大厂出品不等于又大又慢，这 6 个小应用值得一试","date":"2022-09-10 03:00:00","description":"不过大厂也并非所有产品都如此不堪，总有一些优质应用，因为顶着「大厂」的帽子让用户望而却步。<a href=\"https://sspai.com/post/75275\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75275"},{"title":"本周看什么 | 最近值得一看的 6 部作品","date":"2022-09-09 10:11:51","description":"☕️TL;DR近期佳作推荐：[美剧]红粉联盟、[电影]十三条命、[日剧]量产型璃子-模型女子的人生组装记-、[动画]瑞克和莫蒂第六季、[韩剧]小小姐们、[电影]恋之光几则精彩预告：《机动战士高达水星的 ...<a href=\"https://sspai.com/post/75654\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75654"},{"title":"App+1 | 人人可用、不取分文，Android 平台习惯养成应用首选：Loop","date":"2022-09-09 08:13:34","description":"没有精巧的界面，也没有让人拍手称奇的动画设计，但它却是一款堪称典范的工具类开源应用。<a href=\"https://sspai.com/post/75650\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75650"},{"title":"今晚下单新品前，先来看看外媒真机上手体验","date":"2022-09-09 06:46:38","description":"本文对部分外媒的新产品上手体验视频进行了汇总，希望能帮你对新设备更多一点了解，更好地作出购买决定。<a href=\"https://sspai.com/post/75651\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75651"},{"title":"毕业留港找工作，这些建议请笑纳","date":"2022-09-09 03:28:18","description":"Matrix首页推荐Matrix是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选Matrix最优质的文章，展示来自用户的最真实的体验和观点。文章代表作者个人观点 ...<a href=\"https://sspai.com/post/75323\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75323"},{"title":"派早报：Tim Cook 透露 Apple 暂无计划支持 RCS 等","date":"2022-09-09 00:49:18","description":"影石 Insta360 X3 发布，Bose QuietComfort Earbuds II 耳机发布等。<a href=\"https://sspai.com/post/75644\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75644"},{"title":"新玩意 119｜少数派的编辑们最近买了啥？","date":"2022-09-08 09:20:10","description":"关于栏目很多读者都会好奇少数派的编辑们到底平时都「买了啥」。我们希望通过「编辑部的新玩意」介绍编辑部成员们最近在用的新奇产品，让他们自己来谈谈这些新玩意的使用体验究竟如何。内容声明：《新玩意》栏目如含 ...<a href=\"https://sspai.com/post/75633\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75633"},{"title":"生活不止眼前的苟且，还有眼下的厕纸：关于卫生纸你应该知道的","date":"2022-09-08 06:33:36","description":"前言前段时间跟长辈聊天，我向他们问了一个我好奇已久的问题——他们小时候擦屁股用的是什么？他们的答案各不相同，令我有些意外，他们都没法用到如今我们习以为常的卫生纸，而是因地制宜，选择了不同的材料。我的舅 ...<a href=\"https://sspai.com/post/75552\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75552"},{"title":"派早报：Apple 召开秋季新品发布会、哈苏推出新款相机等","date":"2022-09-07 22:09:16","description":"vivo 推出 Y75s 5G 版手机、微软推出 Xbox Elite 2 Core 手柄、索尼发布 PS5 固件更新等。<a href=\"https://sspai.com/post/75625\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75625"},{"title":"两份相同汽油，一份给燃油车用，另一份先发电再给电动汽车充电，假设两辆汽车总质量相当，哪种车跑得更远？","date":"2022-09-07 04:05:47","description":"\n<p data-pid=\"4qyPAS8J\">先烧油驱动发电再驱动汽车，其实也就是串联式混合动力，或者说是增程式电动汽车。乍一看，这有一种脱了裤子放屁的感觉。</p>\n<p data-pid=\"yugLWoOP\">我们知道，每一步能量转换环节都会折损不少可用能量，那从「燃油→机械能」 的一步转换到 「燃油→机械能→电能→机械能」的三步转换，能量转换路径多了2倍（考虑电池甚至更多），肯定效率更低、肯定跑得更近啊！</p>\n<p><img src=\"https://picx.zhimg.com/v2-b05b8bdcae2e29920a0060316e17601e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"798\" data-rawheight=\"186\" data-watermark=\"original\" data-original-src=\"v2-b05b8bdcae2e29920a0060316e17601e\" data-watermark-src=\"v2-38c6cf3acf25557035e58c7c73a3e03b\" data-private-watermark-src=\"v2-769f7e3ec7549182703f12b7b777cd92\"></p>\n<p data-pid=\"V2N5ZEwJ\"><b>实际上，事情没有这么简单！主要原因是发动机的脾气太暴了，状态最好的时候效率高达43%，状态不好的时候可能只有15%。</b>状态差的时候，产出只有三分之一，这暗示着潜力很大。</p>\n<p data-pid=\"fYGuQduq\">不幸的是，咱们开车的主要工况正好处于发动机状态不好的区域：<b>低速、低扭、走走停停</b>。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-286a49629ed85599c67fd2a281c900db_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"809\" data-rawheight=\"700\" data-watermark=\"original\" data-original-src=\"v2-286a49629ed85599c67fd2a281c900db\" data-watermark-src=\"v2-29bb5e5c072ed10920c2a9f422ee8023\" data-private-watermark-src=\"v2-9e200bfbda4dedfca3545e19c8b3b2a4\"></p>\n<p data-pid=\"gktDr9hM\">其实，上面这张图已经很简化了。如果你说，不想看到发动机、转速、转矩这种专业术语，那我画一个更简化的：</p>\n<p data-pid=\"qUcTK3Ox\">横坐标是工作状态，纵坐标是工作产出。在燃油车中，发动机状态最好可以实现43kJ的工作产出，状态最差只能产出15kJ。上文已述，不幸的是燃油车的发动机经常工作在比较差的状态。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-fdf99fd9693baaaf5518bff975ac6abd_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1520\" data-rawheight=\"1145\" data-watermark=\"original\" data-original-src=\"v2-fdf99fd9693baaaf5518bff975ac6abd\" data-watermark-src=\"v2-5cc594b0b673c67ac97b590cdf699dda\" data-private-watermark-src=\"v2-627bd4d767248a922dc967839d451d4b\"></p>\n<p data-pid=\"qe-B9vZc\">由于增加了多道能量转换环节，增程式的整体产出曲线会下降，如下图蓝线所示。可以看到，蓝线上的点，处处低于黑线，这就会给人一种脱了裤子放屁的错觉。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-7fb610661db3f42d2b9e9f2484be3bd7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1580\" data-rawheight=\"1158\" data-watermark=\"original\" data-original-src=\"v2-7fb610661db3f42d2b9e9f2484be3bd7\" data-watermark-src=\"v2-ef551f377e73fdf0f4a898ccc6ba275a\" data-private-watermark-src=\"v2-8c6ace286006da2c99cd8a479c575093\"></p>\n<p data-pid=\"F2knSE27\">然而，增程式可以实现发动机的转速解耦、转矩解耦，也就是转速与车速无关、转矩与油门深度无关，从而可以设定一直工作在比较好的状态。如此一来，原本15kJ的产出由于能量转换降低到12kJ，又由于工作状态变好提升为37kJ。</p>\n<p><img src=\"https://pica.zhimg.com/v2-1fed950208fd865d6d36069738f35818_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1461\" data-rawheight=\"1124\" data-watermark=\"original\" data-original-src=\"v2-1fed950208fd865d6d36069738f35818\" data-watermark-src=\"v2-328d260610760fd925d70d5f3ab9fc50\" data-private-watermark-src=\"v2-ab7a9f79da925db7b9c2f8e2b53fca06\"></p>\n<p data-pid=\"adeV-1rF\"><b>37kJ &gt; 15kJ，赚了啊！ 如此一来，增程式虽然能量转换环节多了，但最终产出却提高了，因而可以跑得更远。</b>这就像老板把办公室弄宽敞一点、娱乐空间更大一点，员工心情变好了、单位面积的产出可能反而会提升一样。</p>\n<p data-pid=\"pLbYoK21\"><b>当然，这是增程式发挥作用的理想情况。实际工程中，工作状态带来的提升，能否cover掉能量转换造成的损失，还不好说。</b>大体上来说，在综合工况中是可以cover掉的，因为：</p>\n<ul>\n<li data-pid=\"rZqngEac\">综合工况中的高速路况比较少，燃油车的发动机工作状态很差，增程式的优化潜力比较大。</li>\n<li data-pid=\"q9nuoKad\">增加了电机、电池后，自然就可以回收制动能量，这相当于额外的收益。详见：</li>\n</ul>\n<a href=\"https://www.zhihu.com/question/268221677/answer/2464268607\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-1336d6ea6a6d3a931a256c7134c2d5fe_l.jpg?source=b1748391\" data-image-width=\"845\" data-image-height=\"737\" class=\"internal\">为什么电动车再生制动时大部分能量都消耗了，仅仅回收了一小部分能量？</a><p data-pid=\"hcF-cNxq\">此时，敏锐的你可能意识到了，上述推理中漏掉了一环： <b>虽然发动机转速转矩解耦了，但驱动电机的转速转矩还是与车速、油门相关啊。难道电机不怕工作状态差吗？</b></p>\n<p data-pid=\"CkjY585I\"><b>还真不怕，因为电机是一个好脾气。</b>我们随便拿出一个2004年的古老电机，就发现最高效率94%，低的地方也有86%，二者相除得到差距也就是8-9%。相比之下，发动机的最大效率却是最小效率的3倍（差别200%）。相比之下，电机比发动机更加情绪稳定！</p>\n<p><img src=\"https://pic1.zhimg.com/v2-ac3a04485806812deb3036749859d800_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"798\" data-rawheight=\"432\" data-watermark=\"original\" data-original-src=\"v2-ac3a04485806812deb3036749859d800\" data-watermark-src=\"v2-c531dde244469c0ef990f93db6836403\" data-private-watermark-src=\"v2-235fe6148513481eccb7366e774f31ee\" data-tags=\"politic\"></p>\n<p data-pid=\"szjWpxb0\">如果你想更进一步，把高速工况这个弱点也解决掉的话，那就成了串并联混动系统了。代表作正是如日中天的比亚迪DM-i：</p>\n<a href=\"https://www.zhihu.com/question/432584257/answer/1619236358\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-6fe426789451890ff0c21a0410ff5e7d_qhd.jpg?source=b1748391\" data-image-width=\"1096\" data-image-height=\"704\" class=\"internal\">如何评价比亚迪秦PLUS搭载的DM-i混动技术，为何被称之为「超级混动」？</a><p data-pid=\"fhJjxv9Q\">以及各自主品牌也纷纷上马差异化的串并联混动：</p>\n<a href=\"https://www.zhihu.com/question/531029649/answer/2554718172\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-a57523ee27a6e71612325a4c08cc9fc3_qhd.jpg?source=b1748391\" data-image-width=\"1832\" data-image-height=\"1118\" class=\"internal\">比亚迪推出了 DM-i、吉利推出了雷神、长城有了柠檬 DHT，国产混动技术究竟是什么水平？</a><p data-pid=\"GI6RT-zz\">当然，从技术角度来看，增程式也有水平高低之分。具体技术分析就不在这篇小白科普文中展开了。有兴趣的可以看：</p>\n<a href=\"https://www.zhihu.com/question/513921808/answer/2470797136\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-ca458c28097ceefb0ddd1cbe2abee945_qhd.jpg?source=b1748391\" data-image-width=\"1216\" data-image-height=\"692\" class=\"internal\">增程式电车有什么致命缺点吗？</a><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhangkangkang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">张抗抗</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/549701825/answer/2658183113?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">220 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/386369330?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">燃油车加油，电动汽车充的是电，为什么买油车客户不关注油箱的大小，而购电动汽车的客户会关注电池的续航呢？</a><br><a href=\"http://www.zhihu.com/question/300950415?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">中国  何时可以造出不用油的车 ？何时让车只充一次电永远都不要充电？</a><br>\n","link":"http://www.zhihu.com/question/549701825/answer/2658183113?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何突破关键技术，降低燃料电池的成本？","date":"2022-09-07 04:01:13","description":"\n<blockquote data-pid=\"nZ3oYKjk\">燃料电池汽车的产业化是氢能应用的突破口，我们要坚持自主创新，突破卡脖子技术，实现关键材料与部件的批量生产，大幅度降低燃料电池车、加氢站建设和氢源的成本，尽快实现燃料电池汽车的产业化。</blockquote>\n<p data-pid=\"_7rvbasb\">燃料电池的发电原理是电化学，因此它的转化效率比较高，可以达到60%左右，燃料电池主要是由电解质膜、电催化剂、扩散层和双极板等关键材料构成。燃料电池的工作方式是内燃机的，它要构成一个系统，燃料电池是发电的场所。</p>\n<p><img src=\"https://pica.zhimg.com/v2-41d06444ccbc9d61f4a1eb4c76f8dc6f_720w.png?source=b1748391?rss\" data-rawwidth=\"371\" data-rawheight=\"350\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-41d06444ccbc9d61f4a1eb4c76f8dc6f\" data-watermark-src=\"v2-3a28a760b111be1a57f2992c942ad81d\" data-private-watermark-src=\"v2-3530313b13c350cbf62df1e54e5c5d5a\"></p>\n<p data-pid=\"QZfMNhfd\">这个系统是由燃料电池电堆、燃料供给系统、氧化剂供给系统、水液管理系统、电控系统来构成，因此燃料电池是比较安全的。如果燃料电池堆发生故障，只要把氢源切断，不会产生燃烧和爆炸。另外，燃料电池比能量非常高，可以达到每公斤0.5~1千瓦每小时，因此它特别适合于重载车和长途车。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-2f4ad149b9e6d8075e6914490c009219_720w.png?source=b1748391?rss\" data-rawwidth=\"1133\" data-rawheight=\"663\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-2f4ad149b9e6d8075e6914490c009219\" data-watermark-src=\"v2-745853d0096c0bf41fe8bb28b366053e\" data-private-watermark-src=\"v2-3ed01f9dac102776953c97f840afcac4\"></p>\n<p data-pid=\"_G2MQ669\">把燃料电池发动机装到车上，我们用氢瓶来代替油箱，用燃料电池发动机来代替内燃机，得到的好处就是没有尾排，尾排仅仅是水。</p>\n<p data-pid=\"l-kKRANN\">燃料电池车的构型，燃料电池是由燃料电池发动机来推动的，那么燃料电池通过大电流、低电压的发电设备，通过DC/DC来增压，和二次电池进行混合推动电机，电机来推动燃料电池车。燃料电池车特别适合长途重载车。燃料电池的优点一是能量比较高，另外电堆和氢罐是分开的，因此比较安全。第三个燃料电池续驶里程，加氢时间驾驶的舒适型均可与燃油车媲美。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-5dea1a2b3bf456cf1688e511f8010d1a_720w.jpeg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"514\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-5dea1a2b3bf456cf1688e511f8010d1a\" data-watermark-src=\"v2-9186e276d2c65534b73433f20c019fe3\" data-private-watermark-src=\"v2-fb73eea6391713dd6bf33fc62cf5b687\"></p>\n<p data-pid=\"2oE_eiiX\">但是燃料电池要想产业化，必须攻克：一是目前燃料电池发动机贵导致一辆燃料电池车的售价是燃油车的两倍到三倍、锂离子电池车的1.5到2倍。二是加氢站建设费用比较高，达到每个加氢站1200万元到1500万元，在加氢站加氢的费用比较高，达到60-80元，只有降到30元以下才能和燃油车竞争，因此要实现无补贴的燃料电池商业化，必须大幅度降低燃料电池发动机的成本和氢气成本，同时降低加氢站的建设费用。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-3976058707631e2086322f5337a99b4c_720w.jpeg?source=b1748391?rss\" data-rawwidth=\"641\" data-rawheight=\"428\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-3976058707631e2086322f5337a99b4c\" data-watermark-src=\"v2-eba4beeb8797021682ca1881687a1e8d\" data-private-watermark-src=\"v2-c08ca1e8434b762529bac8fb9e1b7d98\"></p>\n<p data-pid=\"oxt3EdyS\">国家为了解决卡脖子技术问题和实现燃料电池车的产业化，提出了燃料电池车示范城市群的意见。现在这个已经通过了初步评审，很快就会宣布。</p>\n<p data-pid=\"_G-xBOU0\">那么要想降低燃料电池电堆的成本，我们必须提高电堆的比重率。二是实现关键材料，电催化剂、质子交换膜、双极板、膜电极三合一和电堆批量生产。三是依据工况和电堆适宜的运行条件制定控制策略，确保电池系统的可靠性与耐久性。</p>\n<p><img src=\"https://picx.zhimg.com/v2-d1104d0c78b0a4e7bf4b1c380823eb74_720w.jpeg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"1024\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-d1104d0c78b0a4e7bf4b1c380823eb74\" data-watermark-src=\"v2-0841216234dbc44446cc01af1435712d\" data-private-watermark-src=\"v2-4775f89e14e676443f3f70655bd2fd7e\"></p>\n<p data-pid=\"3wS5qrKt\">这是燃料电池的PEMFC典型极化曲线，它由三部分反映出，一个是欧姆极化，一个是扩散极化，还有一个最大的化学极化。我们一定要降低这三个极化，才能够大幅度提高燃料电池堆的比功率。</p>\n<p data-pid=\"FxzJoDi-\">另外燃料电池车所用的电堆是用铂来做催化剂的，现在国内达到了每千瓦0.3克铂，国际上达到了每千瓦0.2克铂左右，我们要降到0.1克铂以下才能实现燃料电池商业化。</p>\n<p><img src=\"https://picx.zhimg.com/v2-1fb2b64f84b57b745649bc2f7d00c71e_720w.png?source=b1748391?rss\" data-rawwidth=\"465\" data-rawheight=\"340\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-1fb2b64f84b57b745649bc2f7d00c71e\" data-watermark-src=\"v2-d0a06edbf43cdfd8c278a8bbd399e685\" data-private-watermark-src=\"v2-e58f67c325448fa7af1578140c49866a\"></p>\n<p data-pid=\"aAPm7p3N\">燃料电池的成本如果实现批量生产，它的成本会大幅度下降，所以现在在五部委城市群示范计划领导下，我们先要解决卡脖子技术问题，解决批量生产问题，来大幅度降低燃料电池成本，使它能够接近锂电池电动车成本，这样燃料电池车在重载和长途运输车就可以实现产业化。</p>\n<p data-pid=\"rU7rmnHY\">我们解决了卡脖子技术，实现了批量生产，我们还要创新驱动来解决燃料电池的技术发展，实现燃料电池乘用车的商业化。</p>\n<p data-pid=\"g1-BGPOb\">第一我们要简化电池系统和电堆结构，降低燃料电池发动成本和延长电堆寿命。比如采用薄膜、氢空逆流，可以去除增湿器。阳极水管理、消除局部反极，延长电堆寿命。我们可以消除扩散层，来降低电堆成本。</p>\n<p><img src=\"https://pica.zhimg.com/v2-2f5661093ffaab877a642c7fb33e8b2b_720w.jpeg?source=b1748391?rss\" data-rawwidth=\"641\" data-rawheight=\"402\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-2f5661093ffaab877a642c7fb33e8b2b\" data-watermark-src=\"v2-7a5f256d597e974944c7754201f66bc1\" data-private-watermark-src=\"v2-d1a3defdb154a0a8833a2bdb0a249c5e\"></p>\n<p data-pid=\"y1LHzuGQ\">另外我们要研发高温膜和抗毒的电催化剂，降低氢气成本。研发高温膜，使燃料电池在近200度工作，即抗一氧化碳的毒化作用，又有利于燃料电池派热河消除二向流提高电堆一致性，进而提高工作电流密度和电堆比功率，利用有序化电极应用，大幅度降低铂用量。</p>\n<p data-pid=\"aLaCN3u6\">我们要研发抗毒的阳极电催化剂，让燃料电池能吃粗氢，降低燃料电池的成本，实现乘用车和商用车的商业化。</p>\n<p data-pid=\"l6OICwBm\">氢源现在有三种来源，一个化石燃料制氢，一个工业副产氢，还有一个电解水制备绿氢。氯碱副产氢最好净化，只要脱除氯就可以了，合成氨工业的释放气必须脱除微量的氨，丙烷脱氢丙烯必须脱除烃类。</p>\n<p><img src=\"https://picx.zhimg.com/v2-0a3afc857456619abb26e3980b381ac2_720w.jpeg?source=b1748391?rss\" data-rawwidth=\"750\" data-rawheight=\"1000\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-0a3afc857456619abb26e3980b381ac2\" data-watermark-src=\"v2-42c18085ba17743abc221b2f280e7d5d\" data-private-watermark-src=\"v2-8cf72b25c43280249bd632bf2eef82fd\"></p>\n<p data-pid=\"84YVzMnt\">发展精准对燃料电池有毒杂质的净化方法，制订标准、规定检测方法和设备，达到精准的副产氢的净化来降低氢的成本。</p>\n<p data-pid=\"XUgdz8dL\">长距离输送也是氢比较大的问题，氢的长距离输送有三种方案可选，一个是制氢送到天然气管网，跟天然气一起送到用户。再一个可再生能源电解水制氢，将氢绿化，用车送到各个能源。第三个就是可再生能源电解制氢根收集二氧化碳进行合成甲醇。</p>\n<p data-pid=\"rA0qx7Au\">氢安全，最后一个问题，人们已经习惯于汽油作燃料，对于氢气还缺乏了解，要利用氢气易于检测，扩散速度快，在可能有氢泄漏的地方加上氢气传感器，当氢浓度高于千分之五时，联动风机自动启动，确保氢安全。所以我们主张就是要做廉价的、可靠的氢气传感器，同时不管是室内和室外，在氢气可能泄漏的地方都加上氢气传感器和联动风机。这样来确保室内和室外，特别是加氢站和制氢场所的氢安全。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-c1f77b42311fd58622d02b47e91f5409_720w.jpeg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-c1f77b42311fd58622d02b47e91f5409\" data-watermark-src=\"v2-21bf4f96da763a902d6b5158f8a046b7\" data-private-watermark-src=\"v2-3d380905413b89d2d8726cbe0ff31fc2\"></p>\n<p data-pid=\"pIZi7rLc\">氢是向上跑的，所以汽油车都烧没有了，氢气车还是完整的。另外挪威加氢站爆炸，爆炸以后加氢站形状还存在。要是俄罗斯汽油加氢站爆炸以后，基本上看不到了。所以利用氢扩散速度比较快这一点和容易检测这一点，我们确保氢安全。现在全世界有三万到四万辆燃料电池车在运行，没有一辆燃料电池车发生燃烧和爆炸。</p>\n<p data-pid=\"nPEV2b0n\">最后我们讲一下结语，实现燃料电池关键材料和部件的产业化并批量生产，同时提高电堆的比功率就可以大幅度降低燃料电池发动机的成本，进而降低燃料电池车的成本。</p>\n<p><img src=\"https://pica.zhimg.com/v2-311e989b8d8ecf465aabc23a4e01fd5e_720w.png?source=b1748391?rss\" data-rawwidth=\"459\" data-rawheight=\"354\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-311e989b8d8ecf465aabc23a4e01fd5e\" data-watermark-src=\"v2-6384013118a5044404befc35d9effa1e\" data-private-watermark-src=\"v2-162fc5b76219adb44818700591021150\"></p>\n<p data-pid=\"XmX_KUKA\">靠技术创新，简化电堆结构和电池系统，采用超低铂有序化电极化大幅度降低铂用量，将燃料电池车的成本降到锂离子电动车水平，并实现乘用车商业化。大力发展可再生能源电解水制备绿氢，采用天然气或纯氢管网输送氢气，加氢站加的氢可降至每公斤30元以下，车的运行费用就可以和燃油车竞争了。实现氢气压缩机，高压储氢瓶和加氢机等国产化和批量生产，建油、氢、电合建站，就可以大幅度降低加氢站的建设费用，待加氢站达到一定密度，再示范商业化乘用车。</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/mai-zi-5-79-37?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">小易说氢能</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/549921373/answer/2657431822?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">6 个回答，查看全部。</a><br>\n","link":"http://www.zhihu.com/question/549921373/answer/2657431822?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"能不能研究核动力汽车，5年以上不更换电池那种？","date":"2022-09-07 04:00:52","description":"\n<p data-pid=\"q-vxllWs\">历史上，美国曼哈顿计划于1942年启动，仅仅三年的研究后，在1945年7月16日成功进行了第一次<a href=\"https://www.zhihu.com/search?q=%E6%A0%B8%E7%88%86%E7%82%B8&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2182832157%7D\" class=\"internal\">核爆炸</a>实测。</p>\n<p><img src=\"https://picx.zhimg.com/v2-ad863ae169ad371e22df89e7d1994d57_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"565\" data-rawheight=\"682\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"R79qmZMF\">在原子弹爆炸后的第六年，1950年的第一次“问号会议”中，美国陆军就提出了TV1核动力坦克计划。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-781f7ef7be1ce58b796252afa18df267_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"221\" data-watermark=\"watermark\" data-original-src=\"v2-781f7ef7be1ce58b796252afa18df267\" data-watermark-src=\"v2-edc5b022dd893673d962aedb6c5dcd73\" data-private-watermark-src=\"v2-1fab41e0c9b74596259422a85fc2fcca\"></p>\n<p data-pid=\"KDwt7ZHs\">核动力坦克的设计目标和<a href=\"https://www.zhihu.com/search?q=%E6%96%B0%E8%83%BD%E6%BA%90&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2182832157%7D\" class=\"internal\">新能源</a>汽车的目标一样，为了长续航而不用进行燃料补给。使得核动力坦克能在后勤孱弱的地区，也能发起钢铁洪流的杀伤性。</p>\n<p data-pid=\"8Sng_6nc\">当时对核动力辐射并无多少敬畏的军方甚至在坦克上增添了咖啡机这样高能耗设备，来提高士兵的舒适度，因为核动力可以解决一切的能源问题。</p>\n<p data-pid=\"IOgt0ILF\">该型号的坦克也有常规能源版，TV1的兼容版——TV8坦克一开始使用克莱斯勒V8发动机提供动力。如果装配了微型核反应堆，则能解决续航的问题，可以连续开上万公里而不用添加燃料。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-cbd69e5913b14d99a92727fa3d48a825_720w.jpg?source=b1748391?rss\" data-caption=\"TV8核动力坦克\" data-size=\"normal\" data-rawwidth=\"594\" data-rawheight=\"321\" data-watermark=\"watermark\" data-original-src=\"v2-cbd69e5913b14d99a92727fa3d48a825\" data-watermark-src=\"v2-0328aeb54d7927900402ad48ab125861\" data-private-watermark-src=\"v2-e9f725bc0ac82a6f4344a25128137795\"></p>\n<p data-pid=\"qJo4pTJs\">但是，坦克不能像战舰、潜艇一样用厚厚的保护层隔绝辐射，坦克内的<a href=\"https://www.zhihu.com/search?q=%E6%A0%B8%E5%8F%8D%E5%BA%94%E5%A0%86&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2182832157%7D\" class=\"internal\">核反应堆</a>时刻辐射内部成员，且用来降温的水源也成问题。强烈的辐射下，即便不考虑乘员的生命健康，也得采取每两小时更换乘员组，但这样反而大大增加了后勤压力。此外，坦克若被击毁，难免出现大范围的<a href=\"https://www.zhihu.com/search?q=%E6%A0%B8%E6%B3%84%E6%BC%8F&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2182832157%7D\" class=\"internal\">核泄漏</a>，对周边的士兵、环境都是一种伤害。</p>\n<p data-pid=\"RIJj_zXX\">在多重因素叠加下，最终让该项目被否决。</p>\n<p data-pid=\"tPj7kkpC\"><b>除了核动力坦克，实际历史上也出现过核动力汽车。早在1957年，福特就推出来概念车Nucleon.</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-ded82a5b73e178a21d3bf0d61804c461_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"451\" data-rawheight=\"282\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Z1IJKpUV\">这款车也用水来冷却<a href=\"https://www.zhihu.com/search?q=%E5%8F%8D%E5%BA%94%E5%A0%86&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2182832157%7D\" class=\"internal\">反应堆</a>，并用热蒸汽驱动车辆，甚至还提出了在加铀站补充燃料的构想。看到这里，是不是很熟悉，就和现在的加氢站一样……</p>\n<p data-pid=\"j4-MoCzo\">不过，在当时的核春天时代，人们以为找到了真正的无害能源，从上到下都没考虑到核辐射的严重性。</p>\n<p data-pid=\"DchCkKEd\">1950年，甚至出现了<b>「吉尔伯特U-238原子能实验室」</b>这种玩具，里面含有真正的强辐射的铀矿石。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-57d0ce152311a30306bc005aedfbb3e6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"741\" data-rawheight=\"512\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"npvd2mdJ\">儿童们可以玩铅210与钋210组成的α粒子、钌106制成的β颗粒和锌65制成的<a href=\"https://www.zhihu.com/search?q=%CE%B3%E5%B0%84%E7%BA%BF&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2182832157%7D\" class=\"internal\">γ射线</a>，而它们都被简单地无防护地装在了透明的玻璃罩内。当时的儿童在家里，就能观察真正的<a href=\"https://www.zhihu.com/search?q=%E6%A0%B8%E8%A3%82%E5%8F%98&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2182832157%7D\" class=\"internal\">核裂变</a>。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-08549db36d758927d76bb7daca2d9c63_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"963\" data-rawheight=\"876\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"bITLjS1X\">而两千年后，凯迪拉克和奥迪也推出来核动力的概念车型。</p>\n<p data-pid=\"Rekhb7SG\">奥迪Mesarthim F-Tron Quattro是核动力超跑，虽用核能驱动，却是新能源车。因为车辆使用核能转换的电能驱动。堪称续航最长的新能源车，一克燃料就可以不停地跑两年。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-2822fd4859405c4c3024741313826d55_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"263\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"OFqxOoQE\">最重要的是，奥迪号称还完成了反应堆的运行，让其成功的产生了能源！</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f8c2445f9201205a726060a892d6e24d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"264\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"bYgsZ7Rm\">而凯迪拉克WTF则是在2009年给凯迪拉克的一份百年庆生礼物。采用钍燃料，英文全称World Thorium Fuel，首字母缩写即为WTF。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-96b21f191aec55ec6df0caca23a1cb7c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"225\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"VK6hrQue\">这款WTF加一次燃料，续航里程就可达<b>161万公里</b>，的确有点<b>WTF</b>的意思。要知道，许多燃油车恐怕到报废都跑不到这么长的里程。然而，奥迪的核动力汽车虽能提供动力，却遇到了和TV8坦克一样的问题，不能隔绝对成员的核辐射，也不能解决水源的问题。</p>\n<p data-pid=\"AyoPNTvb\">所以，这两款车，终归在图纸上谈了下，或者也造出了概念车的结构，和进行了核反应堆的小型化设计，但最后还是没有变成可以上路的车。</p>\n<p data-pid=\"FXgYSFOq\">实际上面的核动力汽车，个人觉得更多的是噱头，只是语不惊人死不休的为了宣发而已，因为传统的利用核动力的设备不可能做得这么小。</p>\n<h3><i>常见的利用核动力方式：反应堆内部装有可控链式核反应的核燃料，核反应产生的热能作为电站的热源，蒸发水后带动汽轮机，汽轮机带动发电机，发电机产生电能。</i></h3>\n<p data-pid=\"oPAnXvq7\">原理非常简单，原子由原子核与<a href=\"https://www.zhihu.com/search?q=%E6%A0%B8%E5%A4%96%E7%94%B5%E5%AD%90&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2182832157%7D\" class=\"internal\">核外电子</a>组成，原子核由质子与中子组成。</p>\n<p><img src=\"https://picx.zhimg.com/v2-29baae461ec73189e108fb2aebce2f85_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"vlj1dOWW\">当铀235的原子核受到外来的中子轰击时，一个原子核会吸收一个中子，并分裂成两个质量较小的原子核，同时放出2—3个中子。这裂变产生的中子又会去轰击周围的铀235原子核，引起新的裂变。如此持续进行，就是裂变的链式反应，链式反应会产生大量热能。用循环水（或其他物质）带走热量才能避免反应堆因过热烧毁。导出的热量可以使水变成水蒸气，推动汽轮机发电。</p>\n<p data-pid=\"loLn4q-3\">所以这就需要<b>足够的水</b>来循环，所以核电站基本都建立在水资源获取方便的河边、海边。</p>\n<p data-pid=\"HpDjHcyO\">因为高速中子会四散分开，为了增加和减少中子轰击原子核的概率，就需要有控制设置来控制其反应过程和调节反应速度。一般都是硼、碳化硼、镉、银铟镉做成的控制棒（能吸收中子），用来控制反应堆的中子数量，这就是核反应堆的<b>控制设施</b>。插入控制棒，就能吸收四射的中子，完全插入，就能终止其裂变反应。</p>\n<p><img src=\"https://picx.zhimg.com/v2-27c82e156b4935032ae1c93b3964bde9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"724\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"3xwXKHm0\">而铀及其裂变产物都有强放射性，会对环境和生物造成巨大伤害，因此要有可靠的<b>防护措施</b>；比如密封的燃料包裹壳体，要耐高压高温腐蚀和密闭的回路系统。防护措施不仅要防御辐射不外泄，还要有发生异常的<b>防护安全冗余设施，比如</b><a href=\"https://www.zhihu.com/search?q=%E7%A1%BC%E6%B0%B4&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2182832157%7D\" class=\"internal\">硼水</a>的紧急停堆系统，高压注水系统，消氢系统。在反应堆外围还要设置安全壳体，以免反应堆泄露，会直接暴露在外界环境中造成污染。（切尔诺贝利事故就是为了节省成本，外围没有设置安全壳体，导致<a href=\"https://www.zhihu.com/search?q=%E6%94%BE%E5%B0%84%E6%80%A7%E6%B1%A1%E6%9F%93%E7%89%A9&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2182832157%7D\" class=\"internal\">放射性污染物</a>直接进入了环境中，造成了数百公里的污染。）</p>\n<p data-pid=\"Alf4tXmy\">所以，我们知道一个核动力转电力的系统需要：</p>\n<p data-pid=\"XXIejTlm\"><b><i>核燃料、冷却系统、水循环系统、控制设施、防护设施，安全冗余设施，蒸汽循环系统，汽轮机，发电机这些部件。</i></b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-4125eca78fc0db0ae3e7e752fc0131c4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"fG3VzEJv\">如果要安全使用核燃料作为动力，以上这些设施都是必要的，这就意味着整个<a href=\"https://www.zhihu.com/search?q=%E6%A0%B8%E5%8A%A8%E5%8A%9B%E7%B3%BB%E7%BB%9F&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2182832157%7D\" class=\"internal\">核动力系统</a>的小型化，实际非常困难。</p>\n<p data-pid=\"0_s3zmrb\">以核潜艇举例，这是目前实用的最小核动力载体了，其搭载的核动力仓所需的水资源可以方便从海里提取，但体积依旧不小。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-227de9577709d5075ff6292b98c586b8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"641\" data-rawheight=\"345\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"tPQAEyky\">比如中国2013年退役的“长征一号”核潜艇，后改为了中国核潜艇展馆，在青岛海军博物馆正式对外公开展出，其<a href=\"https://www.zhihu.com/search?q=%E6%A0%B8%E5%8F%8D%E5%BA%94&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2182832157%7D\" class=\"internal\">核反应</a>仓就足足有一个大巴车的大小。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-c22425a39b13f150b05dbee7f799cef5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"489\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"V1CSLjVM\">当然，如果你只想制造一个<b>核弹，</b>那就只需要核原料，一个壳体和中子激发装置，其他的啥都不需要，不需要冷却，不需要水，不需要控制、安全设备，这就可以做得很小。一个装笔记本电脑的大背包就可以背起来，大街小巷随你走。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-2cbb989bf7e43a95270f40d367d00c86_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"456\" data-watermark=\"watermark\" data-original-src=\"v2-2cbb989bf7e43a95270f40d367d00c86\" data-watermark-src=\"v2-0d6973e9ee2c3af9a01e11ca2d7eaa23\" data-private-watermark-src=\"v2-be420414718cdf43f1410c4d5cc23e61\"></p>\n<p data-pid=\"9Rwf0d73\">所以，核裂变即便后期真能够小型化，也不能用于汽车这种普通人使用的小型载体上。防护措施昂贵不说，且因为一旦泄露，核裂变产生的<a href=\"https://www.zhihu.com/search?q=%E5%BC%BA%E8%BE%90%E5%B0%84&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2198932348%7D\" class=\"internal\">强辐射</a>就会对周边的人和环境造成灭顶之灾。</p>\n<p data-pid=\"dY0Y-Ffj\"><b>现在能实际用在小型载具上的核相关的动力系统，就是搭载在太空出行的载具上。</b></p>\n<p data-pid=\"_CJ8KeBB\">利用的原理是核原料的自然衰变产生的热量，利用热电效应来进行发电。</p>\n<p data-pid=\"WJEQV4Hu\"><b><a href=\"https://www.zhihu.com/search?q=%E7%83%AD%E7%94%B5%E6%95%88%E5%BA%94&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2198932348%7D\" class=\"internal\">热电效应</a>：当受热物体中的电子(空穴),因随着温度梯度由高温区往低温区移动时,所产生电流或电荷堆积的一种现象</b>。</p>\n<p data-pid=\"C5jV98Be\">利用核原料自然衰变产生的热量，把金属的一端加热，金属两端产生了一个温差，就会产生电流效应。</p>\n<p data-pid=\"cnV6bG56\">这种方式最早应用在了太空领域，1961年美国发射的第一颗人造卫星“探险者一号”就采用了此类核电池，给卫星供电并能在严寒区域提供热量（无法接受太阳光的区域）。</p>\n<p><img src=\"https://pica.zhimg.com/v2-ef9cd9d0e908665daf7d38cb3a29e700_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"866\" data-rawheight=\"480\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\" data-tags=\"porn\"></p>\n<p data-pid=\"x5SJZT3b\">此后的阿波罗登月飞船，上面也装有小型的核电池，设计寿命虽然为一年，但实际使用都远超了设计时间。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-e87130c454b406871cb5f320ce40475e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"550\" data-rawheight=\"405\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"KrdOFnZz\">这类电池普遍的功率不高，只有数十瓦到上百瓦的级别，如2021年2月登陆火星的NASA的毅力号火星车。长度约3米，重量1043公斤，就如同一辆微型轿车的大小，它就搭载了一块核电池。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-7c9281e2aa2642ff169af0b9b79e14ca_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"546\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"7P3vF5xl\">其尾部就是装的45kg重的核电池，额定输出功率达到100瓦，设计的使用寿命长达14年。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-b338bc2d349bbb5fcf51e65c0141a74a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"596\" data-rawheight=\"420\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Uk10nTs_\">这类电池结构简单，且辐射量极低，因为不产生<a href=\"https://www.zhihu.com/search?q=%E4%BC%BD%E9%A9%AC%E5%B0%84%E7%BA%BF&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2198932348%7D\" class=\"internal\">伽马射线</a>（伽马射线可穿透数十厘米混凝土），所以外壳可以做到很薄，整体结构也能做到很小，即便外壳破损，只要第一时间做简单防护，就可以阻止污染。</p>\n<p data-pid=\"puLdly0h\"><b>但是其热利用率只有6%-10%左右，大部分热量需要导出到外部，所以现在基本的使用领域都是太空，严寒地区和海洋区域。</b></p>\n<p data-pid=\"jcO54gHi\">但即便不考虑降温和污染的环节，这种自发电的核动力电池也不是汽车能玩得起的，因为这块45公斤的小电池的造价高达7000万美元，而这样一块小电池还远远无法驱动一辆在地球重力下的小轿车……怎么也得搭载个十块二十块的…………</p>\n<p data-pid=\"HhxZipxx\">就问下，谁买得起这核动力汽车……</p>\n<p><br></p>\n<p><br></p>\n<p data-pid=\"hg84PHfZ\">欢迎关注，看一些有趣且专业的汽车/科技内容。 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/877ee20b5db9a39d41a839fbe83bfae5\" data-hash=\"877ee20b5db9a39d41a839fbe83bfae5\" data-hovercard=\"p$b$877ee20b5db9a39d41a839fbe83bfae5\">@Will.liu</a> </p>\n<p data-pid=\"vx-XN1L6\">（图片来源网络，侵删！）</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/549668847/answer/2656456599?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">320 个回答，查看全部。</a><br>\n","link":"http://www.zhihu.com/question/549668847/answer/2656456599?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"公共交通更符合低碳出行的理念但是却无法满足个性化需求，有没有融合两者的解决方案？","date":"2022-09-07 03:59:16","description":"\n<p data-pid=\"zPC2PGNL\">真的有这样的方法，在满足个性化需求的同时，又能符合公共交通的低碳出行。</p>\n<p data-pid=\"MKuNwJHF\">那就是<b>公路列车。</b></p>\n<p data-pid=\"sGB_IyFO\">这是利用低感知设备进行智能驾驶的一种方案。</p>\n<p data-pid=\"DHPJ3dcr\">早在2009年，欧盟就启动了一个名为SARTRE的项目，开发和测试在高速公路上的车辆自动驾驶的技术，这种技术也被称为<b>队列技术。</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-d79afb76b071bdb4ed3cde7426e9711d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"827\" data-rawheight=\"425\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"mp1VJucC\">就是这种鸭妈妈带着一群小鸭的既视感。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-14182d5a1c7ebb10a4d91bf5bb84bcf9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"583\" data-rawheight=\"396\" data-watermark=\"watermark\" data-original-src=\"v2-14182d5a1c7ebb10a4d91bf5bb84bcf9\" data-watermark-src=\"v2-da5111b6cf8a3b01640220b64159fb88\" data-private-watermark-src=\"v2-23a8a1798308c8d6fe9af2cbf3737238\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-23741983a74fb295b65c8443f32673bc_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"366\" data-watermark=\"watermark\" data-original-src=\"v2-23741983a74fb295b65c8443f32673bc\" data-watermark-src=\"v2-256a8ccf4db67c6e40d3f6a50cf4b5d8\" data-private-watermark-src=\"v2-ca9aeb69831c6da7ff33d4d5840ca4a3\"></p>\n<p data-pid=\"KmJdXHnJ\"><b>这样做就可以有效降低碳排放，而且后面的跟车绝对都是个性化需求。</b></p>\n<p data-pid=\"-xa-bE9x\">为什么能有效降低碳排放，因为前面是一辆大车，负责破风，后面跟车的风阻就会大为减少，而汽车进行中高速行驶，实际发动机做功相当部分都用在了对抗风阻上面了。</p>\n<p data-pid=\"aFruvcY1\">这个破风的原理，实际在很多场合都在运用，比如自然界的大雁迁徙，跨越数千公里。强壮的头雁会领头，给后续的大雁减少空气阻力。头雁疲惫了，另一头强壮的大雁就会补上破风的领头位置。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-96ca5074826946289a3999f7133f8e9b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"504\" data-rawheight=\"329\" data-watermark=\"watermark\" data-original-src=\"v2-96ca5074826946289a3999f7133f8e9b\" data-watermark-src=\"v2-1fdca90a70812dc143b3da62fe1b90c1\" data-private-watermark-src=\"v2-d1830fc0f814a03b1b534330d051ebcf\"></p>\n<p data-pid=\"xBV3nNL2\">比如很多体育赛事，赛跑，自行车竞速，就有专门的“破风手”给有实力的队友护航，在前方开路，牺牲自己保护队友，减少队友的风阻，从而节省队友的体力。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-cecf226d6006491eb2638daf2fa4bbc4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"298\" data-watermark=\"watermark\" data-original-src=\"v2-cecf226d6006491eb2638daf2fa4bbc4\" data-watermark-src=\"v2-98f1f74902540ebf0358a521317af592\" data-private-watermark-src=\"v2-823fc4ac24d774a0c18813043326f037\"></p>\n<p data-pid=\"X9iHzTrM\">说回到交通方面，具体的风阻系数公式：</p>\n<p data-pid=\"O8IaXEIQ\"><b>风阻系数=正面风阻力× 2÷(空气密度x车头正面投影面积x车速平方)</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-1fef05119d9c80869f8903b669bd89b8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"536\" data-rawheight=\"310\" data-watermark=\"watermark\" data-original-src=\"v2-1fef05119d9c80869f8903b669bd89b8\" data-watermark-src=\"v2-3d9c30d87c7982f45fb83e5c2d4ad60c\" data-private-watermark-src=\"v2-8c50078a5d36690fb63fdd3893ff8e46\"></p>\n<p data-pid=\"N05UpfKK\">对于电动车来说，在其他的条件相同情况下，单靠风阻系数降低0.01，可将纯电动车续航里程提升5~8km左右。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d4aa6ba0004abfb5d348931528ad469e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"360\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"BbIGHy-i\">燃油车也是一样，速度越快风阻越大，发动机就要耗费更多的动力来对抗风阻，相应碳排放就越高。同样在发动机热效率高的区间，140公里/小时的匀速行驶会比80公里/小时的匀速行驶更耗油，这就是因为风阻的原因。</p>\n<p data-pid=\"GIVPGy3C\">根据上述实验的数据，公路列车的队列里面，卡车后面跟随小汽车的二氧化碳的排放量减少了20%以上。</p>\n<p data-pid=\"B5S8CbEc\">这里说个题外话，实际这种<b>公路列车</b>对纯电车的续航提升更为明显，因为纯电车在中高速的续航大幅下降就是因为风阻。</p>\n<p data-pid=\"YFmsy7_G\">这里又要说个题外话，因为很多朋友会问，为啥我燃油车跑高速，风阻大了反而耗油少呢，而在市区开三四十公里/小时的时候，风阻小得多反而耗油多，这不科学啊。</p>\n<p data-pid=\"hcTmaQm4\">这个和驱动电机和燃油发动机的输出效率有关。</p>\n<p data-pid=\"z3bSngQR\">下图是大众ID.3和特斯拉model 3的一张对比图，低速80%到中高速97%的效率，驱动电机一直保持在较高的输出效率区间。到了高速区间，电机转速高了后，特斯拉电机的效率对比大众电机开始下降。</p>\n<p><img src=\"https://pica.zhimg.com/v2-89b63acb3fce51df31830aa9c1797e65_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1277\" data-rawheight=\"494\" data-watermark=\"watermark\" data-original-src=\"v2-89b63acb3fce51df31830aa9c1797e65\" data-watermark-src=\"v2-9595432324c0b964fd147320d4e72c7e\" data-private-watermark-src=\"v2-c07b7fbd15e34b3704a6b39841be6eeb\"></p>\n<p data-pid=\"IS8rAgV-\">而发动机则不一样，在市区行驶的低速区间，堵车，怠速经常发生的路况下，可能输出效率只有10%到20%。风阻小带来的一点省油还不如亏的。而到了高速，搭配合适的挡位，发动机输出效率达到35%-40%，提高了两倍还多，除开对抗大风阻的损耗，自然还是要比市区的拥堵低速要省油得多。但是随着速度的提升，即便发动机的热效率一直保持在40%左右的巅峰值，比如100公里/小时提升到130公里/小时，提升到150公里/小时还是会越来越耗油。</p>\n<p data-pid=\"7kgOP8AO\">说回到公路列车。</p>\n<p data-pid=\"5qPuvXD_\">按照火车头领航的模式，每个公路列车的第一辆车由一位熟悉路线的有经验的驾驶员驾驶，可以是<a href=\"https://www.zhihu.com/search?q=%E5%85%AC%E5%85%B1%E6%B1%BD%E8%BD%A6&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2219920613%7D\" class=\"internal\">公共汽车</a>，大客车等，然后领头的车后面跟随6-8辆有共同路线的其他车辆。除了第一辆车需要司机全程驾驶外，其他车辆使用跟随功能，利用网络连在一起，每辆车的间距可以只有十米甚至更近。（通过摄像头、各种雷达等L2级别的感知设备来调整自己的位置，确定方向、速度，并把相关信息无线发给队列网络。）</p>\n<p><img src=\"https://pic3.zhimg.com/v2-11110d163f77e8841f467c453e3e834e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"835\" data-rawheight=\"447\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"4nIZMDnk\">欧盟委员会指定的研究团队进行了实际场景的多个测试。</p>\n<p data-pid=\"RmjJ-rwp\">比如跟随车辆从5辆到20辆不等，比如跟随车队由面包车组成，轿车组成，大客车组成，混合车队组成。天气环境也有着正常天气和恶劣天气。所有测试的结果均为良好，验证了“公路列车”的可行性。</p>\n<p data-pid=\"X0sRMSNQ\">这样实际也达到了一种高度自动驾驶的目的，所有允许跟随的车辆都能做其他的事情，比如电话，吃饭，看书，喝茶，工作等。等司机需要离开这个队伍，前面没有公共路径的话，导航会提醒你自己操纵车辆，准备离开这个车队。到了下一个有共同路途的车队，发出申请，系统接受后，就会接管你的车辆，并入到这个车队中来。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-df7e02453e715beaa7262523eb8d1296_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"833\" data-rawheight=\"422\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"qJrdNhLL\">这种方式的好处众多。</p>\n<p data-pid=\"TPqUlnje\">后续的每辆车不仅可以自动驾驶，还非常省油，因为前方大车破开了风阻，使得后车风阻较小，预计产生20%以上的节能效果。</p>\n<p data-pid=\"D8XR_8eN\">有效提高了道路安全，减弱了80%的事故的人为因素。减少了交通拥堵，提高了高速公路的利用率。</p>\n<p data-pid=\"J_IvkgSs\">整套方案的成本极低，只需要能够感知前方车辆的动态相对距离即可，不需要额外的高精度传感器。</p>\n<p><img src=\"https://picx.zhimg.com/v2-20e108649f8b3dbdbe2605f9b1b2da75_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1014\" data-rawheight=\"465\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\" data-tags=\"porn\"></p>\n<p data-pid=\"hSMBUpdX\">这个项目后来因为种种原因，比如风险过大，因为整个队列都依托在头车的性能和司机的高超驾驶技术上。一旦头车有问题，或者路况/环境出现复杂变化，则整列团队都会有巨大的风险，以当时的智能驾驶技术，无法进行有效的风险规避，这个项目最终没有继续下去。</p>\n<p data-pid=\"Up90Otgp\">但是在不远的未来，我想着也不失为一个自动驾驶方案：L3/L4级别的自动驾驶汽车带动后续众多L2级别汽车。在某些限定路段，比如用地理围栏限定范围的路况，比如高速道路内行驶，配合<b>V2X技术（<i>V2N，V2I，V2P，V2V</i>）。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-00039c6b6d579e660eda9dd64eaace90_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"553\" data-rawheight=\"311\" data-watermark=\"watermark\" data-original-src=\"v2-00039c6b6d579e660eda9dd64eaace90\" data-watermark-src=\"v2-ac3dbd22f7bbaa91a778140d02010fdc\" data-private-watermark-src=\"v2-a77fd26dfdee11c11d450217e2a0ae88\"></p>\n<p data-pid=\"0Nhyxkaa\">我觉得这种公路列车是一种低成本且安全的自动驾驶实施方案，也能完美符合题目的要求：<b>符合低碳出行的公共交通理念，又能满足个性化需求。</b></p>\n<p><br></p>\n<p><br></p>\n<p data-pid=\"-m2Pn9_J\">（图片来源网络，侵删！）</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/549647084/answer/2653644962?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">13 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/551497926?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">公共交通会成为低碳出行的完美解决方式吗？</a><br><a href=\"http://www.zhihu.com/question/493317856?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">新出行时代，我们该如何看待低碳生活？</a><br>\n","link":"http://www.zhihu.com/question/549647084/answer/2653644962?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"电动汽车能减少污染但为什么人们却普遍不愿接受？","date":"2022-09-07 03:57:58","description":"\n<p data-pid=\"Q9ZK_G06\">实际还是有很多人觉得电动车是有问题的，而不仅仅说价格贵，续航能力低，或者不安全，而是从根本上来否定电动车。</p>\n<p data-pid=\"gLJubwxQ\">比如<b>汽油作为动力才是节能的。</b></p>\n<p data-pid=\"UjlkcrxX\">燃油车的发动机效率虽然低，但是前期得到燃料的效率高。而纯电车的电反而要经过众多工序才能得到，虽然电机能量转化率高，但整体反而更浪费。所以有些人是真的认为电动车的路线反而是不节能。</p>\n<p data-pid=\"8RV8CA4N\">这里先说几个名词，WTT/TTW/WTW。</p>\n<p data-pid=\"wAZrgmWE\"><b>WTT:Well To Tank</b></p>\n<p data-pid=\"n5inLxta\">能源从产地开采出来，经过生产转成汽车所需，输送到加油站或充电站，最后加注到油箱或者充入汽车蓄电池的过程。</p>\n<p data-pid=\"-CLdnS5r\"><b>TTW:Tank To Wheel</b></p>\n<p data-pid=\"5d95rGIj\">油箱/蓄电池里的能量经过内燃机/电机的转化成<a href=\"https://www.zhihu.com/search?q=%E6%9C%BA%E6%A2%B0%E8%83%BD&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2478877161%7D\" class=\"internal\">机械能</a>，驱动汽车的过程。</p>\n<p data-pid=\"0UTYQnkC\"><b>WTW:Well To Wheel</b></p>\n<p data-pid=\"wUKulKy0\">能源从产地开采出来，经过加工生成汽车所需，输送到加油站/充电站，最后输入到油箱/蓄电池，转化成机械能驱动汽车的整个过程。</p>\n<p data-pid=\"IH_CqWik\">某权威机构研究的数据，汽油发动机乘用汽车的WTT效率是85%，TTW效率是17.9%，则<b>汽油发动机乘用汽车WTW为两者相乘，效率为15.2%。</b></p>\n<p data-pid=\"NKcP8oBM\">纯电动汽车的WTT效率是42%，TTW效率为67%，得到<b>纯电动乘用车的WTW效率为28.1%。</b></p>\n<p data-pid=\"5qewxwT_\">所以，从两条能源获取链来说，毫无疑问<b>电动汽车的WTW要高效得多</b>。而且这还是电动汽车相关产业链发展的初级阶段，随着进入中级阶段（电动汽车渗透率超过50%，多项电动技术改良、攻克、批量化成本下降，这如同燃油类汽车的发展），相信未来的电动汽车的能量转换效率会再上一个新台阶，会远远超过燃油车的指标。</p>\n<hr>\n<p data-pid=\"dCSQZuAa\">再说另一个观点，就是<b>电动汽车并不能减少排放，反而会加重污染。</b></p>\n<p data-pid=\"oZXTJh9u\">别的国家是减少排放的，比如世界上纯电车普及率最高的挪威，所有的电力来源都是清洁来源，如水力发电等。而我国电的主要来源都是火电，所以电动汽车生产越多，需要的火电就越多，反而不环保。</p>\n<p data-pid=\"Ssmr2ygk\">他们的论点是火力发电是有污染排放的，而我国火力发电是发电主力，比如2019年的火力发电占72%。</p>\n<p><img src=\"https://picx.zhimg.com/v2-8832ec07e8c9cf8e2f09964707e54134_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"315\" data-rawheight=\"194\" data-watermark=\"watermark\" data-original-src=\"v2-8832ec07e8c9cf8e2f09964707e54134\" data-watermark-src=\"v2-00c4c31ffbb3cee5bc32a33c4b74a618\" data-private-watermark-src=\"v2-b84f6fe4de535f942ac9e3680676a3b4\"></p>\n<p><br></p>\n<p data-pid=\"MV9_NjCe\">再看下2021年的。火力发电依旧占据71.13%。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-d95f0af8b2ad25d75c859f53819c68d6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"505\" data-rawheight=\"296\" data-watermark=\"watermark\" data-original-src=\"v2-d95f0af8b2ad25d75c859f53819c68d6\" data-watermark-src=\"v2-67b5f594cf45f02e5a040c0cb778b418\" data-private-watermark-src=\"v2-c1bd481c9506639ae23dcf5e65620688\"></p>\n<p data-pid=\"p6imKyZ3\">先说一个常识，实际目前国内的火电的污染并不严重。并不是像大家脑海里面一样的黑烟滚滚，遮天蔽日。</p>\n<p><img src=\"https://pica.zhimg.com/v2-b45827e0ec18ca847b195515a4fae7c9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"887\" data-rawheight=\"717\" data-watermark=\"watermark\" data-original-src=\"v2-b45827e0ec18ca847b195515a4fae7c9\" data-watermark-src=\"v2-2333739a5b55bf904b6ea86e2ff30611\" data-private-watermark-src=\"v2-957463a00da7f206f2a05e05eb3a78dc\"></p>\n<p data-pid=\"6WWdPrxC\">如果火电厂按照国家强制要求上除尘设备、脱硫、脱氮设备，废水处理设备，并按照国家要求运行，实际对环境污染很小。</p>\n<p><img src=\"https://pica.zhimg.com/v2-e853ff92f760d9dad9ea864e7d5f9b12_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"742\" data-rawheight=\"499\" data-watermark=\"watermark\" data-original-src=\"v2-e853ff92f760d9dad9ea864e7d5f9b12\" data-watermark-src=\"v2-ad5b3072bac8b1dcd1368858336283bd\" data-private-watermark-src=\"v2-ca6836cc77aa5801d6550bc267b181a1\"></p>\n<p data-pid=\"HS3I2M5E\">下图为某火电厂的实测排放。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-4113514a273a0d35c576a12b010ba51e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"791\" data-rawheight=\"287\" data-watermark=\"watermark\" data-original-src=\"v2-4113514a273a0d35c576a12b010ba51e\" data-watermark-src=\"v2-4f9dcebe38855a7fbf87b1e2aa2d2df7\" data-private-watermark-src=\"v2-e4830984f24e5d22dc7f9a622b66c8b5\"></p>\n<p data-pid=\"8D7f2jLC\">而且，国家的法律也并未规定火电厂，热电厂必须要远离居民区。我之前工作的工业园（内有大片居民区）旁边就紧挨着一个大型热电厂，供全市一半的冬日取暖和部分电量。</p>\n<p data-pid=\"K1-89ihQ\">但无论怎么改善，火力发电的碳排放是肯定要超过清洁能源，如水、风、阳光、核能的。</p>\n<p data-pid=\"mM8GrzNz\">这里就要再说一个名词：<b>全生命周期碳排放</b></p>\n<blockquote data-pid=\"Lo6-YeXV\">产品在其整个生命周期内的碳排放。产品全生命周期指产品从需求分析、设计、制造、销售、使用、维修、报废到回收再生的整个时间。</blockquote>\n<p data-pid=\"dySWbzm_\">实际我们评判一辆汽车的污染排放如何，更应该要看它的全生命周期碳排放。</p>\n<p data-pid=\"KDUZG1hv\">2021年，日本电力中央研究所CRIEPI，统计了90%/45%/0%的火力发电背景下，在10万公里行驶里程后，统计传统燃油车，油电混动，插电混动，纯电动汽车的碳排放的对比。</p>\n<p><img src=\"https://picx.zhimg.com/v2-39ff4631202e7661f07b0e2f348d6c5f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"433\" data-watermark=\"watermark\" data-original-src=\"v2-39ff4631202e7661f07b0e2f348d6c5f\" data-watermark-src=\"v2-057b2e04eacf0a1dc74a20f7d2288859\" data-private-watermark-src=\"v2-952999a72af7e7784547b5c526adc468\"></p>\n<p data-pid=\"WxGKHqfX\">我们看上面的表，无论是火力发电比例在哪个档次，高还是低，纯电车的制造相关的碳排放都是最高的。因为纯电汽车的电池，实际生产制造的碳排放的确比较高，比燃油汽车要高许多。但由于生产环节是集中处理排放的，所以这个类似火力发电一样，对环境污染较小。</p>\n<p data-pid=\"iqkIdTmT\">实际随着火力发电比例的降低，无论是燃油车、混动、插电混动、纯电车来说，碳排放都是下降的。</p>\n<p><img src=\"https://pica.zhimg.com/v2-3a6c4b243759bd498d3707cb19afd502_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"637\" data-rawheight=\"341\" data-watermark=\"watermark\" data-original-src=\"v2-3a6c4b243759bd498d3707cb19afd502\" data-watermark-src=\"v2-5a09f70bd20e72c89b18280a4c64ab12\" data-private-watermark-src=\"v2-dc30f8dc5ab467c5f2384845757a8b9d\"></p>\n<p data-pid=\"Qfwa0-an\">火力发电比例越高，纯电车的电力制造的碳排放也就越高，这个也没有说错。</p>\n<p data-pid=\"rl2F4-Mp\">但看驾驶，纯电车的碳排放是零，而燃油车，HEV,PHEV的碳排放依次降低。（图片再复制一次，免得不好和描述对比。）</p>\n<p><img src=\"https://pic1.zhimg.com/v2-39ff4631202e7661f07b0e2f348d6c5f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"433\" data-watermark=\"watermark\" data-original-src=\"v2-39ff4631202e7661f07b0e2f348d6c5f\" data-watermark-src=\"v2-057b2e04eacf0a1dc74a20f7d2288859\" data-private-watermark-src=\"v2-952999a72af7e7784547b5c526adc468\"></p>\n<p data-pid=\"2vaOaMmX\">合计起来，即便是90%的高比例火力发电，传统燃油车的34.8吨碳排放也要高于纯电车的22.6吨的排放，两者差距12.2吨。</p>\n<p data-pid=\"apPHlTTu\">45%的中等比例火力发电，传统燃油车的33吨碳排放和纯电车的16.2吨的差距为16.8吨。</p>\n<p data-pid=\"uuUxF_nX\">而到了0%的比例火力发电，传统燃油车的31.2吨总碳排放则比纯电车的9.6吨高出了21.6吨。</p>\n<p data-pid=\"0VpKO5ym\">所以，即便是纯电车因为电池的原因，造成了制造环节的碳排放大于传统燃油汽车，但是整体的环节的碳排放来看，<b>即便是国内72%的火力发电背景下，生产更多的油电混动，纯电动车，还是能有效降低碳排放的。</b>而随着后续的清洁能源比例的增加，火力发电的比例下降，整体碳排放也会持续下降。</p>\n<blockquote data-pid=\"CdGJ0Had\">全球能源互联网发展合作组织对外发布了中国碳达峰、碳中和系列研究报告。<br><br>《中国2030年能源电力发展规划研究及2060年展望》预测：2025年，我国电源总装机达到29.5亿千瓦，其中清洁能源装机17亿千瓦，占比57.5%，清洁能源发电量3.9万亿千瓦时、占比41.9%。煤电达到峰值11亿千瓦，风光装机分别达到5.4亿、5.6亿千瓦。<br><br>2025-2030年新增电力需求全部由清洁能源满足。2030年，我国电源总装机38亿千瓦，其中清洁能源装机25.7亿千瓦，占比67.5%，清洁能源发电量5.8万亿千瓦时，占比52.5%。煤电装机10.5亿千瓦，风、光装机分别为8亿、10.25亿千瓦。</blockquote>\n<p><br></p>\n<p data-pid=\"2_3OuUjz\">（图片来源网络，侵删！）</p>\n<p data-pid=\"tGtZqRS2\">参考资料：</p>\n<p data-pid=\"pT1WIpq3\">1、<a href=\"http://link.zhihu.com/?target=https%3A//baijiahao.baidu.com/s%3Fid%3D1740210003959248111%26wfr%3Dspider%26for%3Dpc\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">baijiahao.baidu.com/s?</span><span class=\"invisible\">id=1740210003959248111&amp;wfr=spider&amp;for=pc</span><span class=\"ellipsis\"></span></a></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/549823162/answer/2652612047?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">50 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/451803051?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">电动汽车真的能减少对环境的污染吗？</a><br><a href=\"http://www.zhihu.com/question/422365593?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么电动汽车能降低污染呢？</a><br>\n","link":"http://www.zhihu.com/question/549823162/answer/2652612047?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"终于找全了！木桐1945-2019所有酒标都在这了！","date":"2022-09-07 02:54:52","description":"\n<p data-pid=\"ZOxUtS44\">本文照片和文案大部分来自木桐酒庄官方网站：<a href=\"https://link.zhihu.com/?target=https%3A//www.chateau-mouton-rothschild.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">https://www.chateau-mouton-rothschild.com</a>，作者会对其中几个关键年份做出更多解释。</p>\n<h2><b>1924让•卡吕（JEAN CARLU）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-275072f9189799207c8d80fdfba6eee8_b.jpg\" data-size=\"normal\" data-rawwidth=\"464\" data-rawheight=\"614\" class=\"origin_image zh-lightbox-thumb\" width=\"464\" data-original=\"https://pic1.zhimg.com/v2-275072f9189799207c8d80fdfba6eee8_r.jpg\"><figcaption>1924让•卡吕（JEAN CARLU）</figcaption></figure><p data-pid=\"khWvOyIl\">让·卡吕，1900年生于一个建筑师家庭：其兄雅克曾主持修建了巴黎的夏约宫。在美术学校短暂学习后，让·卡吕从17岁起就投身于招贴画设计工作。</p>\n<p data-pid=\"mt2ZlJL1\"> 他才华横溢，在1918年就被评为年度最佳招贴画设计师，评委会主席正是著名的招贴画设计大师卡佩罗。同年，让·卡吕在一次交通事故中失去右臂，他被迫进行了长期的休息调整与康复训练，但从未想过因此放弃自己的职业生涯。在他此后的作品中，经常出现“手”的图案，正是对这场悲剧的回忆。</p>\n<p data-pid=\"FBgrGifC\">在他的招贴画作品中，人物侧影、面具和手，这些图案总是近乎强迫性地重复出现，在当时显得很新奇。其作品主要表达三大主题。第一是政治主题，他自1930年起就关注和平运动（《裁军》，1932）及反纳粹斗争（《住手希特勒》，1940），后者绘制于美国，他1940至1953年间在美国生活。第二个主题是，通过招贴画来表现当代的主流艺术潮流：立体主义，诸如罗思柴尔德木桐堡1924年份酒标；超现实主义，诸如招贴画《赖克霍德化学公司》，他深受布勒东及唐吉的影响。第三个主题，是一系列令人印象深刻的技术创新和发明，诸如：合成摄影（电影《亚特兰蒂斯》的招贴画，1932），三维设计（《白色大屋》，1933），电灯泡用于招贴画（《发光图》，1937）。</p>\n<p data-pid=\"-VJgqguJ\">让·卡吕对商业艺术贡献巨大。通过简练的线条与强烈的色彩，在消费者心目中确立品牌形象：让·卡吕是最早认识到这一点的广告招贴画设计师之一。这些优势使得其招贴画作品充满力量，兼具艺术性。</p>\n<p data-pid=\"AZUz4uon\">注：酒标上的这句CE VIN A ETE MIS EN BOUTEILLE AU CHATEAU，意思是该酒在酒庄装瓶，这是木桐第一年将这句话写在酒标上，也是整个波尔多第一次出现这句话，一直沿用至今。在此之前，波尔多几乎所有酒庄都是销售桶装酒给酒商，再由酒商自己装瓶，但仍然以原酒庄的名义售卖。这也解释了为什么同时期同款酒有不同酒标的原因。</p>\n<h2><b>1945菲利普•朱利昂（PHILIPPE JULLIAN）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-445ef332d44ff8a093abeaf9798b0b46_b.jpg\" data-size=\"normal\" data-rawwidth=\"1192\" data-rawheight=\"1579\" class=\"origin_image zh-lightbox-thumb\" width=\"1192\" data-original=\"https://pic3.zhimg.com/v2-445ef332d44ff8a093abeaf9798b0b46_r.jpg\"><figcaption>1945菲利普•朱利昂（PHILIPPE JULLIAN）</figcaption></figure><p data-pid=\"Ke9O0AJJ\">1945年，为纪念同盟国的胜利，菲利普·德·罗思柴尔德男爵萌发一个想法，要采用一件艺术作品作为罗思柴尔德木桐堡的酒标：此时此刻，这件作品要表现出对重归和平与美好生活的庆祝之情。</p>\n<p data-pid=\"iZmU4Aor\">他将此事委托给了一位尚不知名的青年艺术家：菲利普·朱利昂（1921-1977）。除绘画天赋外，朱利昂后来还成为了一名成功的剧作家。他向男爵提交了好几幅图案，男爵最终选定了这幅代表胜利的作品《V》，五年来，邱吉尔一直用这一象征召集鼓舞着自由力量。</p>\n<p data-pid=\"FWYMUcyy\"><b>注：从这一年开始，木桐酒庄将当年的装瓶数量写在酒标上。当年生产了24瓶Jeroboam（容量是4.5L，其中一瓶在1997年伦敦<span class=\"nolink\">克里斯蒂拍卖行</span>售出，售价11.4614万美元），1475瓶Magnum（容量1.5L），74422瓶750ml及375ml，2000瓶酒庄珍藏RC。</b></p>\n<p data-pid=\"vMseHIsk\"><b>二战期间，菲莉嫔·德·罗思柴尔德在法国度过了她的童年。其间，她父亲菲利普·德·罗思柴尔德男爵（1902-1988）追随戴高乐将军，而母亲则被关进了德国拉文斯布吕克女子集中营，并于1945年在集中营内香消玉殒。菲莉嫔却奇迹般地活了下来。</b></p>\n<h2><b>1946让•雨果（JEAN HUGO）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-db77701b00a219d4d879db1747745f4b_b.jpg\" data-size=\"normal\" data-rawwidth=\"1186\" data-rawheight=\"1570\" class=\"origin_image zh-lightbox-thumb\" width=\"1186\" data-original=\"https://pic4.zhimg.com/v2-db77701b00a219d4d879db1747745f4b_r.jpg\"><figcaption>1946让•雨果（JEAN HUGO）</figcaption></figure><p data-pid=\"HEJC-e4w\">让·雨果（1894-1985），是著名作家维克多·雨果的重孙。他早年迷恋于舞台设计，1921年为让·科克托的戏剧《埃菲尔铁塔的新娘们》做舞台设计而一举成名，遂为莱奥尼德·马西纳芭蕾舞团担任设计，三十年代，为法兰西喜剧院担任设计。他还绘制油画及水彩画，赢得了细密画大师的声誉。在两次大战间的那段时期，他还设计过节庆面具及奇装异服。自四十年代起，他迁居法国南方，直到去世。曾撰写回忆录《趁我未忘》。</p>\n<p data-pid=\"87YNhPnY\">在为罗思柴尔德木桐堡设计的酒标中，让·雨果画了一只衔着橄榄枝的鸽子，取自诺亚方舟故事，象征着恢复和平后的第一年。</p>\n<h2><b>1947让•科克托（JEAN COCTEAU）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-3fffb1a6cd937518784524e56532d60d_b.jpg\" data-size=\"normal\" data-rawwidth=\"1192\" data-rawheight=\"1530\" class=\"origin_image zh-lightbox-thumb\" width=\"1192\" data-original=\"https://pic2.zhimg.com/v2-3fffb1a6cd937518784524e56532d60d_r.jpg\"><figcaption>1947让•科克托（JEAN COCTEAU）</figcaption></figure><p data-pid=\"xWA4L2mE\">让·科克托（1889-1963），是小说家、戏剧家、电影制片人、油画家及素描画家，但他首先是一位诗人。对形式美的追求，对古代神话的重新表现，使他属于法国古典主义传统派；但他同时也热衷于标新立异，甚至挑战习俗，可被看作超现实主义一派。正如佳吉列夫所求：“让，给我个惊讶！”在数不胜数的画作里，他近乎强迫性地不断重复着一个主题：一个目光深邃的青年侧影。这正是他为1947年份木桐酒所绘制的酒标。</p>\n<p data-pid=\"Hks2HRIT\">令人遗憾的是，原作已遗失，此处展出的作品为让·马雷所摹绘，他是一位著名演员和备受推崇的画家，应菲莉嫔女男爵之请，他同意摹绘好友让·科克托的这幅作品。</p>\n<h2><b>1948马丽•洛朗桑（MARIE LAURENCIN）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-5f0b34482f3132b4e30ff66c7a09bb8b_b.jpg\" data-size=\"normal\" data-rawwidth=\"1171\" data-rawheight=\"1591\" class=\"origin_image zh-lightbox-thumb\" width=\"1171\" data-original=\"https://pic4.zhimg.com/v2-5f0b34482f3132b4e30ff66c7a09bb8b_r.jpg\"><figcaption>1948马丽•洛朗桑（MARIE LAURENCIN）</figcaption></figure><p data-pid=\"kun-xnkC\">马丽·洛朗桑（1885-1956），在其绘画生涯早期，受立体主义及毕加索黑人时期风格的影响，参加了当时的前卫派运动，她当时与诗人阿波利奈尔及其朋友们关系密切（1909）。随后，受“纳比斯”画派的启发，其画风转向注重装饰。虽然难以将她归于任何一派，但她独具创意，偏好表现青春面孔，在色彩天赋里融入了淡雅色调和可爱的稚气。</p>\n<p data-pid=\"YxjCjc12\">在1948年份罗思柴尔德木桐堡的酒标里，她描绘了一对年轻的酒神女祭司，脸上带着略显稚气的庄重，这在她的作品里经常出现。</p>\n<h2><b>1949安德烈•迪尼蒙（ANDRÉ DIGIMONT）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-10021e9bad29b4b84fbf4d8f675f0c13_b.jpg\" data-size=\"normal\" data-rawwidth=\"1193\" data-rawheight=\"1582\" class=\"origin_image zh-lightbox-thumb\" width=\"1193\" data-original=\"https://pic4.zhimg.com/v2-10021e9bad29b4b84fbf4d8f675f0c13_r.jpg\"><figcaption>1949安德烈•迪尼蒙（ANDRÉ DIGIMONT）</figcaption></figure><p data-pid=\"c-0VPuBS\">巴黎画家安德烈·迪尼蒙（1891-1965），其画作经常参加“秋季沙龙展”。他与弗朗西斯·卡尔科交情匪浅，借此与当代文坛保持着密切联系。他是一位才华横溢的插图画家和水彩画家，曾为许多名著绘制插图，从《佩罗故事集》到《飘》。他的绘画，偏爱表现普通人的消遣作乐、舞会和咖啡馆、妓院酒吧、姑娘和坏小子。忠实于这一创意，他在1949年份罗思柴尔德木桐堡的酒标里，表现了乡村小酒馆的场景。1949年份是二十世纪的最佳年份之一。</p>\n<h2><b>1950乔治•阿努尔夫（GEORGES ARNULF）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-5aef65a1c25bef13968e7f582045cd3b_b.jpg\" data-size=\"normal\" data-rawwidth=\"1201\" data-rawheight=\"1579\" class=\"origin_image zh-lightbox-thumb\" width=\"1201\" data-original=\"https://pic4.zhimg.com/v2-5aef65a1c25bef13968e7f582045cd3b_r.jpg\"><figcaption>1950乔治•阿努尔夫（GEORGES ARNULF）</figcaption></figure><p data-pid=\"3LG8B72l\">乔治•阿努尔夫（1921-1996），生于摩纳哥。1950年，其版画作品获罗马大奖。同年，他为罗思柴尔德木桐堡绘制酒标。被前哥伦布艺术所吸引，1957年至1966年间，阿努尔夫定居哥伦比亚。在那里，他为教堂制作了很多彩绘玻璃和壁画。此后，他回到法国，教授绘画并继续创作，其作品内容丰富且跌宕起伏，喜欢将人物与植物、矿物与动物结合在一起表现。</p>\n<p data-pid=\"YO-qfH9N\">他为罗思柴尔德木桐堡绘制的1950年份酒标，风格朴素，属于其早期风格：线条精练，透视严谨，采用刻版艺术，完美地呈现了木桐堡的象征——公羊。</p>\n<h2><b>1951马赛尔•韦尔特斯(MARCEL VERTÈS)</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-5ec925683d71b29ab701b72efcd8c3b6_b.jpg\" data-size=\"normal\" data-rawwidth=\"1204\" data-rawheight=\"1564\" class=\"origin_image zh-lightbox-thumb\" width=\"1204\" data-original=\"https://pic3.zhimg.com/v2-5ec925683d71b29ab701b72efcd8c3b6_r.jpg\"><figcaption>1951马赛尔•韦尔特斯(MARCEL VERTÈS)</figcaption></figure><p data-pid=\"b7SVHk3Z\">马赛尔·韦尔特斯（1896-1961）生于匈牙利。他早期在维也纳从事招贴画设计工作。从1925年起，他定居巴黎，致力于石印术。画册《舞》（1926）充分展示了其观察家才华，表现出他对两次大战间这段疯狂年代的洞察，并引起多家出版社关注。这些出版社邀请他为诸多名著设计插图，其中包括：柯莱特的《吾爱》和《流浪者》、皮埃尔·路玉的《保索尔国王历险记》、保尔·莫兰的《风流欧洲》、德·拉·塞尔纳的《马戏场》。</p>\n<p data-pid=\"reCDaow0\">在罗思柴尔德木桐堡1951年份酒标里，他将自己喜爱的室内家庭生活画置于田园风光之中，幸福之情，溢于言表。</p>\n<h2><b>1952莱昂诺尔•菲尼（LÉONOR FINI）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-78221413076ae064f967c2577290fded_b.jpg\" data-size=\"normal\" data-rawwidth=\"1189\" data-rawheight=\"1567\" class=\"origin_image zh-lightbox-thumb\" width=\"1189\" data-original=\"https://pic2.zhimg.com/v2-78221413076ae064f967c2577290fded_r.jpg\"><figcaption>1952莱昂诺尔•菲尼（LÉONOR FINI）</figcaption></figure><p data-pid=\"9yCqH7Hj\">意大利裔画家莱昂诺尔·菲尼，1908年生于意大利。她早期主要受前拉斐尔派及比尔兹利的影响。后来，她加入了超现实主义运动，这使得其作品里总是反复出现某些主题：神秘的色情、雌雄同体的人物、梦境风光。后来，其艺术终于找到了新方向：她为剧院和歌剧院做了大量的舞台设计。她是巴黎社交生活的明星，这赋予了她喜好荒诞、奇特和欢庆的审美情趣。</p>\n<p data-pid=\"Bg_LuJVE\">在罗思柴尔德木桐堡1952年份的酒标中，莱昂诺尔·菲尼绘制了一只年轻的“雌羊”，如同出自小学生作业本，却展示了其过人才华：透过优雅而精致的线条勾勒，把人们从日常现实带入梦境。</p>\n<h2><b>1953百年纪念</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-0918db95477004d2454d02bbc2b60d0e_b.jpg\" data-size=\"normal\" data-rawwidth=\"1198\" data-rawheight=\"1772\" class=\"origin_image zh-lightbox-thumb\" width=\"1198\" data-original=\"https://pic3.zhimg.com/v2-0918db95477004d2454d02bbc2b60d0e_r.jpg\"><figcaption>1953百年纪念</figcaption></figure><p data-pid=\"UlTY3uHa\">1853年5月11日，来自罗思柴尔德家族英国分支的纳塔涅·德·罗思柴尔德男爵（1812-1870）签署了一项购地契约，以1125000金法郎的价格，买下了布朗–木桐堡酒庄，它位于波亚克地区，葡萄园面积75公顷。随后，他将酒庄更名为罗思柴尔德木桐堡。</p>\n<p data-pid=\"VnV1eQwC\">为了纪念购庄一百周年，菲利普·德·罗思柴尔德男爵决定，将1953年份酒标用来纪念曾祖父。</p>\n<p data-pid=\"LOHhRLb8\">该年份的酒标很特别，它没有选用当代画家的作品，而是直接采用了纳塔涅男爵当年的一幅椭圆形肖像。</p>\n<p data-pid=\"Qsrd1EDc\"><b>注：酒标中间的文案是以菲利普·德·罗思柴尔德男爵的第一人称表述，酒标上的JAMES是她爷爷，HENRI是她父亲</b>。</p>\n<h2><b>1954让•卡尔祖（JEAN CARZOU）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-ce07d630907e6c530a2bc2792c6a970d_b.jpg\" data-size=\"normal\" data-rawwidth=\"1183\" data-rawheight=\"1657\" class=\"origin_image zh-lightbox-thumb\" width=\"1183\" data-original=\"https://pic2.zhimg.com/v2-ce07d630907e6c530a2bc2792c6a970d_r.jpg\"><figcaption>1954让•卡尔祖（JEAN CARZOU）</figcaption></figure><p data-pid=\"8yAnSOhD\">亚美尼亚裔的让·卡尔祖，生于1907年，早年学习建筑。其画作，直到1945年后才真正得到社会认可。此后，他在芭蕾舞台布景方面赢得巨大声誉：1953年为小罗兰的《狼》、1970年为巴黎剧院的《拉·培里肖尔》设计舞台布景。其艺术风格基于严格的几何图形与缠绕线条间的反差对比，他主要通过错综复杂的线条来勾画表现人与物，塑造个性化的诗意世界，赋予客观现实以一种幻想成分。</p>\n<p data-pid=\"nRZhlzsU\">他为木桐堡1954年份酒标选用的作品《命运之轮》，隐喻是：大自然的恩赐是无限的，即使在罗思柴尔德木桐堡，也不可预知……</p>\n<p data-pid=\"2gcPwu5p\"><b>注：该年份酒庄装瓶的字样位置从木桐logo上方移到了酒标底部，年份数字也改为后来经典的logo双侧排列方式。</b></p>\n<h2><b>1955乔治•勃拉克（GEORGES BRAQUE）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-7b5b9c95bb900172295768addcf936f4_b.jpg\" data-size=\"normal\" data-rawwidth=\"1194\" data-rawheight=\"1617\" class=\"origin_image zh-lightbox-thumb\" width=\"1194\" data-original=\"https://pic1.zhimg.com/v2-7b5b9c95bb900172295768addcf936f4_r.jpg\"><figcaption>1955乔治•勃拉克（GEORGES BRAQUE）</figcaption></figure><p data-pid=\"Gno8FhrR\">乔治·勃拉克（1882-1963），是第一位为罗思柴尔德木桐堡绘制酒标的享有国际声望的大画家。他与毕加索一样，同为立体派的主要创始人之一。该画派摒弃透视规则，把同一物体的不同视角并列展现，掀起了一场绘画革命。1913年，拼贴纸的发明，使勃拉克摈弃了黯沉的色调，转而运用明亮的色彩。一战后，其作品风格转向形象艺术：裸体、浴女、风景、静物，都有着丰满的曲线和强烈和谐的色彩。除绘画外，他在雕塑、彩绘玻璃及珠宝设计方面也都非常著名。</p>\n<p data-pid=\"8UBm4u1V\">他为罗思柴尔德木桐堡1955年份酒标绘制的作品，线条简练，尺寸大小与酒标规格分毫不爽，以一位伟大艺术家的简约手法庆祝了这一美好年景。</p>\n<h2><b>1956巴维尔•切利乔夫（PAVEL TCHELITCHEW）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-f248cce474e95bc81b91f30c8a5c0cf7_b.jpg\" data-size=\"normal\" data-rawwidth=\"1212\" data-rawheight=\"1665\" class=\"origin_image zh-lightbox-thumb\" width=\"1212\" data-original=\"https://pic4.zhimg.com/v2-f248cce474e95bc81b91f30c8a5c0cf7_r.jpg\"><figcaption>1956巴维尔•切利乔夫（PAVEL TCHELITCHEW）</figcaption></figure><p data-pid=\"ALzHbGE3\">切利乔夫（1898-1957），生于莫斯科，早年就读于著名的基辅美术学院（1918），多次旅行后，1923年定居巴黎。1926年，他与自己早期参加的抽象艺术决裂，投身新浪漫主义，两年后，他为佳吉列夫的芭蕾舞《颂》设计了布景及服装。同期，他还与超现实主义画派关系密切。二战初期，他移居纽约，并在那里遇到了唐吉、厄恩斯特及布勒东，以达利的方式进行创作，融精致的线条和奇幻的视角于一体。</p>\n<p data-pid=\"F12BOsNz\">他为罗思柴尔德木桐堡绘制的1956年份酒标《酒渍》，回归公羊的传统主题，表现了人力严谨控制下的大自然之茂盛。</p>\n<h2><b>1957安德烈•马松（ANDRE MASSON）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-663c332f3840d5ba77a5f9224a4f5a6e_b.jpg\" data-size=\"normal\" data-rawwidth=\"1195\" data-rawheight=\"1660\" class=\"origin_image zh-lightbox-thumb\" width=\"1195\" data-original=\"https://pic3.zhimg.com/v2-663c332f3840d5ba77a5f9224a4f5a6e_r.jpg\"><figcaption>1957安德烈•马松（ANDRE MASSON）</figcaption></figure><p data-pid=\"Pjhz5aLP\">安德烈·马松（1896-1987），曾短期加入立体派，后投身超现实主义画派，并深受其影响。尽管他曾在1929年宣称对超现实主义“持异议”，但超现实主义风格一直贯穿其全部作品。西班牙内战，使得其作品中的自然暴力转向了悲剧的表现主义。1941年至1944年，他移民美国，成为“行动绘画”的重要发起人之一。1947年，他回到法国，在普罗旺斯居住，继续其绘画创作。他曾在巴黎为多场戏剧做过布景，如《哈姆雷特》和《金头》等，1966年，他为奥迪翁剧院的天花板做画。</p>\n<p data-pid=\"GPyP3poj\">在罗思柴尔德木桐堡1957年份酒标中，马松创作了一首幸福醉饮的赞美诗：画面中，那位昏醉者的身体与葡萄藤缠绕在一起。</p>\n<h2><b>1958萨尔瓦多•达利（SALVADOR DALÍ）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-5af446186beaf479973ff854947475b3_b.jpg\" data-size=\"normal\" data-rawwidth=\"1168\" data-rawheight=\"1590\" class=\"origin_image zh-lightbox-thumb\" width=\"1168\" data-original=\"https://pic4.zhimg.com/v2-5af446186beaf479973ff854947475b3_r.jpg\"><figcaption>1958萨尔瓦多•达利（SALVADOR DALÍ）</figcaption></figure><p data-pid=\"HW-7mvF0\">萨尔瓦多·达利（1904-1989），无论是生活举止还是绘画，都堪称超现实主义大师。他既是我们这个时代的传奇人物，也是一位艺术造诣无与伦比的大画家。他出生于卡塔罗尼亚。在发现了德·基利科的“形而上学绘画”后，他在1928年加入超现实主义运动，并成为该运动最为抛头露面的人物之一，直到1931年被超现实主义扫地出门。达利的作品，无论是幽默抑或恐怖，色情抑或神秘，模仿学院派抑或异想天开，都打破一切界限。令人感到自相矛盾的是，超现实主义竟然把这位天才画家（正如达利自诩）视为自己最好的导师。</p>\n<p data-pid=\"8bC48ZWp\">同样自相矛盾的是：在罗思柴尔德木桐堡1958年份酒标上，那只可爱的羊，被达利赋予了儿童画的魅力。</p>\n<p data-pid=\"AgBnN2vc\"><b>注：在这一年，菲莉嫔·德·罗思柴尔德以优异成绩毕业于巴黎国立高等戏剧艺术学院，并受聘于法兰西戏剧院。</b></p>\n<h2><b>1959理查德•利波尔德（RICHARD LIPPOLD）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-134124bd99fc0d8dc816732d8075c92b_b.jpg\" data-size=\"normal\" data-rawwidth=\"1188\" data-rawheight=\"1826\" class=\"origin_image zh-lightbox-thumb\" width=\"1188\" data-original=\"https://pic4.zhimg.com/v2-134124bd99fc0d8dc816732d8075c92b_r.jpg\"><figcaption>1959理查德•利波尔德（RICHARD LIPPOLD）</figcaption></figure><p data-pid=\"GCHH1Bt2\">德裔美国雕塑家理查德·利波尔德，1915年出生，最初从事工业绘图。1942年，他因创立线性雕塑的表现形式而蜚声美国：他用黄铜、镍或铜导线交织成网，从多个极点散发伸展，组成扩展的几何图形。其作品展示，遍及美国各大博物馆及高端场所（如林肯中心和旧金山大教堂）。</p>\n<p data-pid=\"7znism59\">在罗思柴尔德木桐堡1959年份酒标中，他将葡萄酒的颜色及葡萄树的排列翻译成了他自己的抽象语言。</p>\n<p data-pid=\"w6SPEuRi\"><b>注：从这一年开始，酒庄装瓶和双年份设计一直延续下去。</b></p>\n<h2><b>1960雅克•维永（JACQUES VILLON）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-9e844211f466b8771cdc634dec270825_b.jpg\" data-size=\"normal\" data-rawwidth=\"1254\" data-rawheight=\"1735\" class=\"origin_image zh-lightbox-thumb\" width=\"1254\" data-original=\"https://pic2.zhimg.com/v2-9e844211f466b8771cdc634dec270825_r.jpg\"><figcaption>1960雅克•维永（JACQUES VILLON）</figcaption></figure><p data-pid=\"pwNZJ_sG\">雅克·维永（1875-1963），真实姓名叫加斯顿·杜尚–维永，他与雕塑家杜尚·维永及画家马赛尔·杜尚是兄弟。1911年前后，他位于巴黎郊区的皮托画室成为立体派画家们思考和创作的中心。1913年，他参加了纽约的“军械展览”，该展览将现代艺术的最新潮流展示给了美国公众。在这段时期，维永的绘画，将立体派的建筑式严谨与对光线色彩的创新探索结合在一起。后来，他回归传统绘画形式，如肖像画和风景画。</p>\n<p data-pid=\"T6FIfTkm\">无论作为画家，还是探索者，维永始终精益求精地追求色彩，他在罗思柴尔德木桐堡1960年份酒标中，把鸟的运动与葡萄藤的几何图形结合在一起。</p>\n<p data-pid=\"0pdUinaN\">注：画中的一行字：ils sont dans les vignes, les oiseaux...这些鸟在葡萄里。</p>\n<h2><b>1961乔治•马蒂厄（GEORGES MATHIEU）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-d10d32c4bfffa98fc6ace2be513243dc_b.jpg\" data-size=\"normal\" data-rawwidth=\"1189\" data-rawheight=\"1726\" class=\"origin_image zh-lightbox-thumb\" width=\"1189\" data-original=\"https://pic1.zhimg.com/v2-d10d32c4bfffa98fc6ace2be513243dc_r.jpg\"><figcaption>1961乔治•马蒂厄（GEORGES MATHIEU）</figcaption></figure><p data-pid=\"i96Uu1lj\">乔治·马蒂厄曾得到马尔罗的盛赞：“西方终于有了一位书法家”。他生于1921年，1947年起，定居巴黎。他自诩为“抒情抽象艺术”的创始人，发明了一套符号系统，一种奇幻的文字，试图无意识地表达出本我的暴力。他曾说：“绘画应该是一种行动”。其绘画行为，从此成为了一场与画布的贴身肉搏，马蒂厄有时把它表现得像一场演出，在观众面前，他创作的作品色彩强烈，笔法翻飞奇特；必要的暴露癖是其绘画美学中不可或缺的一部分。此外，他还尝试过其他艺术表现形式：招贴画、家具及珠宝。</p>\n<p data-pid=\"YLmGhq0D\">他为罗思柴尔德木桐堡绘制的1961年份酒标：爆炸般的活力四射，正是典型的马蒂厄风格。</p>\n<h2><b>1962玛塔（MATTA）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-d0acca068fdf9a42617873114260c56e_b.jpg\" data-size=\"normal\" data-rawwidth=\"1186\" data-rawheight=\"1726\" class=\"origin_image zh-lightbox-thumb\" width=\"1186\" data-original=\"https://pic3.zhimg.com/v2-d0acca068fdf9a42617873114260c56e_r.jpg\"><figcaption>1962玛塔（MATTA）</figcaption></figure><p data-pid=\"ig5eiba8\">罗伯托·玛塔·埃乔伦，简称马塔，生于1912年，智利裔。他曾经作为建筑师与勒·科布基埃一起工作。1935年，他加入超现实主义画派。二战期间，他在美国居住，受到唐吉和杜尚的影响。1948年，他回到巴黎，为联合国教科文大厦绘制大型壁画。他摈弃了梦境内省主题，转而揭露我们时代的暴力和机器化，致力于表现一个充斥着半机器人、半木偶人的令人忧虑的世界。</p>\n<p data-pid=\"EEBMIHfZ\">在罗思柴尔德木桐堡1962年份酒标中，他笔下的葡萄枝蔓，虽遭受折磨与痛苦，仍令人对美好的果实充满期待。画家自选的旁注：“其丝滑温柔，诱惑着最桀骜不驯者……”</p>\n<p data-pid=\"Ko8p4YnL\"><b>注：木桐葡萄酒艺术博物馆落成，由当时的法国文化部长安德列·马尔罗剪彩，建立博物馆的创意来自菲利普男爵及其第二任妻子包丽娜男爵夫人（Baronne Pauline）。</b></p>\n<h2><b>1963伯纳德•迪富尔（BERNARD DUFOUR）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-ca7d7b4ac5f0ffc175f321c439d8bac4_b.jpg\" data-size=\"normal\" data-rawwidth=\"656\" data-rawheight=\"960\" class=\"origin_image zh-lightbox-thumb\" width=\"656\" data-original=\"https://pic1.zhimg.com/v2-ca7d7b4ac5f0ffc175f321c439d8bac4_r.jpg\"><figcaption>1963伯纳德•迪富尔（BERNARD DUFOUR）</figcaption></figure><p data-pid=\"ceOpgSEe\">伯纳德·迪富尔，生于1922年，毕业于农艺师专业，自1945年起，投身于绘画。他的早期作品倾向于表现抽象风景。1960年前后，他转向于比较形象化的绘画：自画像、带有强烈悲剧感的男性头部、女性裸体。这些形象，在其透过梦境或记忆反映现实的艺术手法上（不清晰的线条、镜中游戏、嵌在梦境里的现实），凭添了一丝情色成分。</p>\n<p data-pid=\"jpZBAQwV\">他为罗思柴尔德木桐堡绘制的1963年份酒标，同样表现出这种情欲之欢：葡萄串与横躺的人体面面相对，旁白是选自马拉美《农牧神之午后》的诗句：“就这样，我吸吮着葡萄的光亮……”</p>\n<h2><b>1964亨利•摩尔（HENRY MOORE）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-54220d9809556153a112535b573e76d6_b.jpg\" data-size=\"normal\" data-rawwidth=\"1189\" data-rawheight=\"1741\" class=\"origin_image zh-lightbox-thumb\" width=\"1189\" data-original=\"https://pic3.zhimg.com/v2-54220d9809556153a112535b573e76d6_r.jpg\"><figcaption>1964亨利•摩尔（HENRY MOORE）</figcaption></figure><p data-pid=\"7Z2kImpS\">英国雕塑家亨利·摩尔（1898-1984），是约克郡一位矿工的儿子，曾就读于伦敦“皇家艺术学院”。从三十年代起，他定期参加超现实主义画派活动，还从雕塑家布兰库希及前哥伦布艺术那里汲取灵感。在这两种思潮的交互影响下，他创立了一种表现人体的新形式，力图表现其伟大的原始功能（生殖力，王权等）。他善于在厚重的形体上，挖出透明空洞或虚空部分，从而使这些硕大的雕塑体变得栩栩如生。凭借其作品，他跻身当代一流雕塑家行列。</p>\n<p data-pid=\"7xYfxM2F\">在他为罗思柴尔德木桐堡绘制的1964年份酒标中，合手捧出的三只圣杯，令人想起古代典礼的庄严肃穆。</p>\n<h2><b>1965多萝西•坦宁（DOROTHEA TANNING）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-bbd9d247cbee3ff274d8594e94cb2101_b.jpg\" data-size=\"normal\" data-rawwidth=\"1198\" data-rawheight=\"1726\" class=\"origin_image zh-lightbox-thumb\" width=\"1198\" data-original=\"https://pic2.zhimg.com/v2-bbd9d247cbee3ff274d8594e94cb2101_r.jpg\"><figcaption>1965多萝西•坦宁（DOROTHEA TANNING）</figcaption></figure><p data-pid=\"2MKq12LJ\">美国艺术家多萝西·坦宁，生于1912年。1936年，她在纽约“现代艺术博物馆”的大展上，发现了超现实主义。不久，她遇到了麦克斯·厄恩斯特，他俩于1946年结婚。在婚后的家里，无论在美国还是法国，这对名人夫妇总是引来一圈朋友和崇拜者。她忠实于超现实主义表现形式，添加了自己的许多奇思异想：奇形怪状的花朵、衣衫褴褛的妖精小姑娘。她的才华在其他领域也有所展露：舞台布景、芭蕾布景、腐蚀版画及刻版。</p>\n<p data-pid=\"r_vBz9HQ\">她为罗思柴尔德木桐堡1965年份酒标绘制的“母羊羔的萨拉班德舞”，一如既往地忠实于自己的想象：充满动感的幻梦。</p>\n<h2><b>1966皮埃尔•阿列钦斯基（PIERRE ALECHINSKY）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-1580d4d199817b308474924e28554308_b.jpg\" data-size=\"normal\" data-rawwidth=\"1186\" data-rawheight=\"1741\" class=\"origin_image zh-lightbox-thumb\" width=\"1186\" data-original=\"https://pic1.zhimg.com/v2-1580d4d199817b308474924e28554308_r.jpg\"><figcaption>1966皮埃尔•阿列钦斯基（PIERRE ALECHINSKY）</figcaption></figure><p data-pid=\"CuuRPdde\">油画家、素描画家及诗人皮埃尔·阿列钦斯基，生于1927年，原籍比利时。1948年，他与诗人克里斯蒂安·多特利蒙和其他艺术家一起，共同创立了“眼镜蛇画派”，试图用巴罗克表现主义超越抽象与具象之争。</p>\n<p data-pid=\"l7D-ntMk\">同时，阿列钦斯基的作品还是一种延续，是保罗·克利及超现实主义的延续，他本人从超现实主义中汲取了神秘意识和绘画的自动主义。他的作品，通过丰富的书法线条，表现出一个不断变形的怪物世界。</p>\n<p data-pid=\"9ntUzLHI\">在罗思柴尔德木桐堡1966年份酒标中，他画的“嗜酒公羊”，充满了力量与幽默，像从酒瓶中跳出来一样。</p>\n<h2><b>1967塞萨尔（CESAR）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-3f8b57c2ffbce68e42af405989a86da5_b.jpg\" data-size=\"normal\" data-rawwidth=\"1204\" data-rawheight=\"1753\" class=\"origin_image zh-lightbox-thumb\" width=\"1204\" data-original=\"https://pic2.zhimg.com/v2-3f8b57c2ffbce68e42af405989a86da5_r.jpg\"><figcaption>1967塞萨尔（CESAR）</figcaption></figure><p data-pid=\"QfHvCUE_\">塞萨尔·巴尔达西尼，简称“塞萨尔”，生于1921年，原籍马赛，1943年定居巴黎。他当时说过：“卡拉拉大理石太贵，而废铁遍地都是”，这恰好说明了他对金属废料的偏爱。他是新时代的炼金术士，知道如何把金属废料转化为艺术作品。1960年，他推出了著名的汽车《浓缩》系列作品，随后是其他物品系列。1966年，他将兴趣转向可锻造材料，借助塑料铸模及其著名的聚氨酯“膨胀”作品，使之成为我们现代特色的标识。</p>\n<p data-pid=\"RRmQzZ6n\">在罗思柴尔德木桐堡1967年份酒标中，他绘制了回形针、大头针、螺母，把我们这个时代的诸多人工制品幽默地汇聚在一起。</p>\n<h2><b>1968博纳（BONA）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-9d014fadd3ff6bb6f77f4ff0978b0aa1_b.jpg\" data-size=\"normal\" data-rawwidth=\"1167\" data-rawheight=\"1737\" class=\"origin_image zh-lightbox-thumb\" width=\"1167\" data-original=\"https://pic2.zhimg.com/v2-9d014fadd3ff6bb6f77f4ff0978b0aa1_r.jpg\"><figcaption>1968博纳（BONA）</figcaption></figure><p data-pid=\"vwLnQNTp\">意大利裔画家博纳·蒂贝特里，1926年生于罗马。1950年，她与安德烈·皮耶尔·德·曼迪亚古斯结婚，后者把她带入了超现实主义和巴黎前卫知识分子的圈子，就此，她的才华在其充满奇幻灵感的作品中得以充分展现：巨人模样的曼德拉草根、奇形怪状的贝壳…她忠实于超现实主义，尝试实践“移印画法”。自1958年起，在墨西哥，她的艺术风格向抽象演化，转而使用新材料，如水泥、灰泥、碎石。在立体派所创立的“拼贴画”中，她焕发出巨大的创造力。 </p>\n<p data-pid=\"QalhMZPg\">她为罗思柴尔德木桐堡1968年份酒标绘制的“母羊”，与莱昂诺尔·菲尼的1952年份作品相比，显得想象力异常丰富。</p>\n<h2><b>1969胡安•米罗(JUAN MIRÓ)</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-28be9a5c973f0df8c60544de27d6be11_b.jpg\" data-size=\"normal\" data-rawwidth=\"1189\" data-rawheight=\"1741\" class=\"origin_image zh-lightbox-thumb\" width=\"1189\" data-original=\"https://pic2.zhimg.com/v2-28be9a5c973f0df8c60544de27d6be11_r.jpg\"><figcaption>1969胡安•米罗(JUAN MIRÓ)</figcaption></figure><p data-pid=\"WO6gECU2\">胡安·米罗（1893-1984），原籍加泰罗尼亚，在1919年来到巴黎，随后，他由安德烈·马松介绍，加入超现实主义团体，并受到了安德烈·布勒东的热情欢迎。1924年左右，他创建了自己的世界：色彩强烈，由象征物、蛇、惊恐的无足幼虫所构成，充满着儿童画的天真与幻想。米罗的全部作品都基于这种暧昧不清：这些围绕着母体圆圈打转的幼虫，意味着恋母情结的幻想错位，抑或只是面对灰暗世界的快乐繁衍？</p>\n<p data-pid=\"0ZwyVRu7\">他为罗思柴尔德木桐堡绘制的1969年份酒标，画面主体是一粒巨大的血红色葡萄，在画面左下方，他不无幽默地标注：“向色彩致敬”。蓝与黄，正是罗思柴尔德家族的颜色。</p>\n<h2><b>1970马克•夏加尔（MARC CHAGALL）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-86715fcb6df8ff39ebc96e98c4611329_b.jpg\" data-size=\"normal\" data-rawwidth=\"1175\" data-rawheight=\"1723\" class=\"origin_image zh-lightbox-thumb\" width=\"1175\" data-original=\"https://pic2.zhimg.com/v2-86715fcb6df8ff39ebc96e98c4611329_r.jpg\"><figcaption>1970马克•夏加尔（MARC CHAGALL）</figcaption></figure><p data-pid=\"BITgNnMU\">画家、版画家和雕塑家马克·夏加尔（1887-1985），生于俄国的正统犹太家庭。他早期到过巴黎，后回到俄国，又重回巴黎生活，直至二战；二战期间，他在美国居住，战后又回到法国。他的绘画，融合了犹太传统与俄国文化，展现出一个空中飘浮的世界，既真实具象，又充满象征性。他的画作，透过孩提时代的眼睛，表现人类生活的重大时期，保留着几分天真无邪、生动的色彩、对家畜的喜爱。</p>\n<p data-pid=\"bHCeJcNb\">在罗思柴尔德木桐堡1970年份的酒标中，夏加尔带给我们的，与其说是葡萄酒，不如说葡萄树的鲜活果实：它正被斑鸫鸟偷食，被母亲喂给孩子。</p>\n<p data-pid=\"fyf-Y-XU\">注：概念收购<u><span class=\"nolink\">米隆修士堡</span></u>（Château Clerc Milon），俗称双立人。</p>\n<h2><b>1971瓦西里•康定斯基（VASSILI KANDINSKY）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-fa96afb01b1e16ed6ec35fbc467d9b63_b.jpg\" data-size=\"normal\" data-rawwidth=\"1198\" data-rawheight=\"1735\" class=\"origin_image zh-lightbox-thumb\" width=\"1198\" data-original=\"https://pic4.zhimg.com/v2-fa96afb01b1e16ed6ec35fbc467d9b63_r.jpg\"><figcaption>1971瓦西里•康定斯基（VASSILI KANDINSKY）</figcaption></figure><p data-pid=\"RBnMHT6j\">俄裔画家瓦西里·康定斯基（1866-1944），曾先后加入德国和法国国籍。他在抽象主义艺术的兴起及繁荣过程中担当过主要角色。他早期的作品，尚未摆脱同时代的印象主义及野兽派绘画模式，但他的理论思考一直在发展，直到在1908年提出了一个根本性的问题：“当我确知物象会损害绘画本质时，一个可怕的深渊在我脚下裂开：该用什么来取代物象呢？”1910年，在慕尼黑，他绘制了艺术史上的第一幅抽象主义水彩画作品。</p>\n<p data-pid=\"uI4zPSmq\">用作罗思柴尔德木桐堡1971年份酒标的，是他1939年的一幅作品，当时，他正处于自己艺术生涯的“建筑学”时期。原作现存于巴黎篷皮杜文化中心。</p>\n<h2><b>1972谢尔盖•波利雅科夫（SERGE POLIAKOFF）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-88b6ac11f0d2965874c2241c56e392b6_b.jpg\" data-size=\"normal\" data-rawwidth=\"1184\" data-rawheight=\"1716\" class=\"origin_image zh-lightbox-thumb\" width=\"1184\" data-original=\"https://pic3.zhimg.com/v2-88b6ac11f0d2965874c2241c56e392b6_r.jpg\"><figcaption>1972谢尔盖•波利雅科夫（SERGE POLIAKOFF）</figcaption></figure><p data-pid=\"Kbof5f1G\">谢尔盖·波利雅科夫（1900-1969），出生于莫斯科。俄国革命迫使他在1919年离开祖国。在土耳其和欧洲不同城市短暂生活后，他于1923年定居巴黎，并在那里结识了康定斯基，随后结识了罗伯特及索尼娅·德洛奈，并继续着自己对色彩的探索。他因而被引向非具象艺术，并从1945年起，建立了基于并列色彩的个性化艺术风格。在其作品中，非对称多边形的色块被严谨组合在一起，近乎建筑图纸般严谨，在他笔下，不仅有色彩强烈的对比，也有相近色调的和谐搭配，诸如橙色与红色，绿色与蓝色。然而，这种形式严谨的绘画语言，一经他手，便焕发出勃勃生气，产生了惊人效果。</p>\n<p data-pid=\"TTPjlmcj\">平衡、色泽、结实有力：他为罗思柴尔德木桐堡绘制的1972年份酒标，表现出这款佳酿的全部优秀品质。</p>\n<p data-pid=\"6gyPgwFP\"><b>注：该年份装瓶容量73cl。1973,1974也为73cl。</b></p>\n<h2><b>1973帕博罗•毕加索（PABLO PICASSO）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-d24ee7d6dc2144c2f8b53cf297a22fee_b.jpg\" data-size=\"normal\" data-rawwidth=\"1222\" data-rawheight=\"1863\" class=\"origin_image zh-lightbox-thumb\" width=\"1222\" data-original=\"https://pic3.zhimg.com/v2-d24ee7d6dc2144c2f8b53cf297a22fee_r.jpg\"><figcaption>1973帕博罗•毕加索（PABLO PICASSO）</figcaption></figure><p data-pid=\"RwCRgFw0\">对毕加索的当代艺术，我们必须采取一种完全直接的、真诚的、自发的、单纯的…….方式加以评判。在任何时候，我们都不该将他置于所谓“伟大人物”的可恶基座之上，因为他首先是一个充满活力和变化的艺术家，他不会受缚于伟大人物雕像上那些死气沉沉的线条。</p>\n<p data-pid=\"HzoecQpW\">关于毕加索的宣传，有许多明显错误，其中最大的谬误，就是把他与超现实主义画派混同起来。事实上，在他的大多数绘画中，主题几乎总是实实在在的，而非模糊不清的梦幻世界，也从来无法变成象征隐喻，换言之，他的作品，毫无任何超现实主义之处。人的肢体、人的物品，出现在人的氛围里，这正是我们在毕加索这里最终发现的东西。米歇尔·莱里斯，《文件2》，1930</p>\n<p data-pid=\"T9Llu8eL\">没有孤独，将一事无成。我为自己创造了无庸置疑的孤独。现在，要让自己孤独，实在太难了，因为我们有了手表。你见过圣徒先哲戴手表吗？我四下察看，从来没见过，连被钟表匠尊为祖师爷的圣徒都没有。毕加索在特里亚德的谈话，1932</p>\n<p data-pid=\"T8N-vRGu\"><b>注：这幅画作由毕加索于1959年12月22日创作，原作收藏在木桐博物馆中。毕加索于1973年去世，木桐将这一作品做为当年的艺术酒标，来同时纪念木桐历史上最不寻常的1973年份。在这一年木桐由二级庄荣升为一级庄，酒标上这句话：PREMIER JE SUIS, SECOND JE FUS, MOUTON NE CHANGE，曾经第二，现在第一，木桐从未改变。1973年，根据时任法国农业部长希拉克先生所签署的命令，木桐堡终于正式成为一级酒庄。</b></p>\n<h2><b>1974罗伯特•马瑟韦尔（ROBERT MONTHERWELL）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-1702891b1ec9d84b81202a2fffe9cf8e_b.jpg\" data-size=\"normal\" data-rawwidth=\"1206\" data-rawheight=\"1799\" class=\"origin_image zh-lightbox-thumb\" width=\"1206\" data-original=\"https://pic3.zhimg.com/v2-1702891b1ec9d84b81202a2fffe9cf8e_r.jpg\"><figcaption>1974罗伯特•马瑟韦尔（ROBERT MONTHERWELL）</figcaption></figure><p data-pid=\"WuBasvpG\">美国画家罗伯特·马瑟韦尔（1915-1991），早先学习哲学，后来才成为画家。四十年代，经过短暂的超现实主义阶段，他转向了抽象表现主义，并与罗思科及杰克森·波洛克一起展出作品。绘画的同时，他还进行理论探索，1948年，这位“哲学家画家”，出版了一部论述麦克斯·厄恩斯特的专著；1952年以前，他还一直担任《现代艺术文献》编辑部主任，该刊将达达主义的绘画、草图及手稿汇集在一起。他本人的绘画风格此时已完全成熟，反复运用大块的、黑色的、令人不安的表现形式，介于抽象主义与书法之间。</p>\n<p data-pid=\"ZEsbosLX\">马瑟韦尔为罗思柴尔德木桐堡绘制的1974年份酒标，是他的一幅完美杰作，展现了他作为纽约画派代表人物之一的非凡创造力。</p>\n<h2><b>1975安迪•沃霍尔（ANDY WARHOL）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-2b7c400bb0f1d0f51dc41b7be349574e_b.jpg\" data-size=\"normal\" data-rawwidth=\"1218\" data-rawheight=\"1807\" class=\"origin_image zh-lightbox-thumb\" width=\"1218\" data-original=\"https://pic3.zhimg.com/v2-2b7c400bb0f1d0f51dc41b7be349574e_r.jpg\"><figcaption>1975安迪•沃霍尔（ANDY WARHOL）</figcaption></figure><p data-pid=\"tawg8Bzb\">安迪·沃霍尔（1930-1987），生于美国费城。他起初从事广告画创作，后成为“波普艺术“的代表人物之一，他把波普艺术定义为“化平庸为神奇的艺术”。1962年，他展出了著名的可乐瓶系列作品，采用丝网印刷复制。随后，他又将此形式扩展到“金宝”汤罐及“亨氏”番茄酱系列。他进而将这一处理方法用于“明星系列”：玛丽莲·梦露、丽兹·泰勒、杰基·肯尼迪。沃霍尔试图通过攻击社会尊崇的神话，来对消费社会进行讽刺和颠覆：制成品在画布上的表现，只有空虚；杂志封面上表情呆滞的名人面孔，让自己也变成了消费品。画家本人亦不避自毁：沃霍尔本人染着头发、化着浓妆，也成了一件作品；他还把自己的画室戏称为“工厂”，里面住着一群与美国诚实劳动者截然对立的社会边缘人。</p>\n<p data-pid=\"XsfV18B2\">在罗思柴尔德木桐堡1975年份酒标中，沃霍尔按自己的习惯，选用了主人公的几幅经典照片，将菲利普男爵亦庄亦谐的不同神态并列呈现出来。</p>\n<h2><b>1976皮埃尔•苏拉热（PIERRE SOULAGES）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-a9fba51311fdd5d0d0ea9405f97ceda7_b.jpg\" data-size=\"normal\" data-rawwidth=\"1191\" data-rawheight=\"1790\" class=\"origin_image zh-lightbox-thumb\" width=\"1191\" data-original=\"https://pic4.zhimg.com/v2-a9fba51311fdd5d0d0ea9405f97ceda7_r.jpg\"><figcaption>1976皮埃尔•苏拉热（PIERRE SOULAGES）</figcaption></figure><p data-pid=\"Td28TWgj\">法国画家皮埃尔·苏拉热，1919年生于罗德茨。1937年左右，他发现了塞萨娜和毕加索的作品。</p>\n<p data-pid=\"MJapMMUk\">从1946年起，其艺术风格彻底转向了抽象主义。他以一种充满力量与严谨的新绘画语言一下子就被公众所认知：他充满激情地用耙子、刮刀、毛刷作工具进行绘画，把诸多暗色长流交织在画面上。</p>\n<p data-pid=\"gvFuBI9K\">他的作品几乎总是单色的：黑色，有时也使用棕色或钴蓝色，就像他绘制木桐堡1976年份酒标所用的钴蓝色。</p>\n<p data-pid=\"FpfH26Xu\">此外，在这幅单彩酒标上，苏拉热还将罗思柴尔德木桐堡的开头字母嵌入其中，引以自娱。</p>\n<h2><b>1977献给伊莉莎白王太后</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-d1dc27b98988dd3a133ce6709cea8d01_b.jpg\" data-size=\"normal\" data-rawwidth=\"1216\" data-rawheight=\"1804\" class=\"origin_image zh-lightbox-thumb\" width=\"1216\" data-original=\"https://pic2.zhimg.com/v2-d1dc27b98988dd3a133ce6709cea8d01_r.jpg\"><figcaption>1977献给伊莉莎白王太后</figcaption></figure><p data-pid=\"SRLOztG9\">1977年4月，应菲利普男爵之邀，伊丽莎白二世之母伊莉莎白王太后陛下借正式到访波尔多之际，在木桐堡小住了三天。</p>\n<p data-pid=\"-4Z22cwF\">为纪念此次到访并向其致意，经陛下本人首肯，菲利普男爵将木桐堡1977年份酒标题献给了王太后陛下。</p>\n<p data-pid=\"R48l6IQr\"><b>注：从该年份，菲利普男爵开始标注自己上任以来收获的第几个年份。1977是其第55个年份。</b></p>\n<h2><b>1978让–保罗•利奥佩尔（JEAN PAUL RIOPELLE）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-7cb396f493a14313e6711db4ae4fbf5a_b.jpg\" data-size=\"normal\" data-rawwidth=\"1197\" data-rawheight=\"1803\" class=\"origin_image zh-lightbox-thumb\" width=\"1197\" data-original=\"https://pic3.zhimg.com/v2-7cb396f493a14313e6711db4ae4fbf5a_r.jpg\"><figcaption>1978让–保罗•利奥佩尔（JEAN PAUL RIOPELLE）</figcaption></figure><p data-pid=\"QUqXF1YZ\">加拿大画家让–保罗·利奥佩尔，1923年出生于蒙特利尔。他很早就与画家博尔都亚结识，并共同创立了“自动主义”画派，向当时统治加拿大画坛的学院派发起挑战。作为这场战斗的见证，他在1948年发表了宣言“全球拒绝”。利奥佩尔先后在巴黎、纽约及加拿大三地生活，其作品属于抒情抽象主义：他从大自然生命力中汲取灵感，其作品色块厚重、色调鲜明，借助刮刀及调色刀的使用，更加表现出一种原始暴力，一种用严谨的几何图形所表达的暴力。</p>\n<p data-pid=\"vmvxObvq\">利奥佩尔为罗思柴尔德木桐堡1978年份酒标准备了两幅作品：由于难以取舍，故两幅作品被分别用在半数酒标上。</p>\n<p data-pid=\"Xvfy1Ulg\"><b>两款酒标如下图：</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-29e39a8bf917ac063d95c97538af9be9_b.jpg\" data-size=\"normal\" data-rawwidth=\"474\" data-rawheight=\"713\" class=\"origin_image zh-lightbox-thumb\" width=\"474\" data-original=\"https://pic2.zhimg.com/v2-29e39a8bf917ac063d95c97538af9be9_r.jpg\"><figcaption>1978年的两款酒标</figcaption></figure><h2><b>1979堂本尚郎</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-feb5e59fa652c60bf63e2e521eac80a9_b.jpg\" data-size=\"normal\" data-rawwidth=\"1185\" data-rawheight=\"1782\" class=\"origin_image zh-lightbox-thumb\" width=\"1185\" data-original=\"https://pic2.zhimg.com/v2-feb5e59fa652c60bf63e2e521eac80a9_r.jpg\"><figcaption>1979堂本尚郎</figcaption></figure><p data-pid=\"j0ruz11-\">堂本尚郎，1928年生于京都的一个艺术家家庭。他起初学习日本传统绘画，于1952年赴欧洲旅行，由此接触西方艺术，并与自己早期的传统训练彻底决裂，坚决地投身于抽象主义。他先从“非形象”美学理论中汲取灵感，继之以《持续的解决》：将对比强烈的色带叠加在一起。最后阶段，其《连锁反应之可能性》，将链条图案与圆形相结合，置于流动而有节奏的运动中，并辅以鲜亮而辐射状的色彩。</p>\n<p data-pid=\"hktLXHmA\">他为罗思柴尔德木桐堡绘制的1979年份酒标，是其第三时期的杰作。这是第一次由日本画家绘制酒标。</p>\n<p data-pid=\"NfCV11z2\"><b>注：从该年份起，签名改为Baron Philippe。当年，菲利普男他与位于加州纳帕溪谷的美国著名酒商罗伯特·蒙大维（Robert Mondavi）建立合作关系，创建了加州法国红酒的头牌“<u><span class=\"nolink\">作品一号</span></u>”（Opus One）。</b></p>\n<h2><b>1980汉斯•哈同（HANS HARTUNG）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-aaddba0eaf706ff9f04702e11cf312f9_b.jpg\" data-size=\"normal\" data-rawwidth=\"1192\" data-rawheight=\"1725\" class=\"origin_image zh-lightbox-thumb\" width=\"1192\" data-original=\"https://pic2.zhimg.com/v2-aaddba0eaf706ff9f04702e11cf312f9_r.jpg\"><figcaption>1980汉斯•哈同（HANS HARTUNG）</figcaption></figure><p data-pid=\"d6xoSbuR\">汉斯·哈同（1904-1989）是抒情抽象主义的先驱者之一。他早年在德国就读哲学与艺术史专业，为躲避纳粹政权，他决定迁居巴黎。1939年，他参加法国外籍军团，受重伤并失去了一条腿。战后，他获得了法国国籍。“吾之所爱，就是在画布上有所作为”，他拒绝几何形式的抽象主义，代之以绘画行为的无意识自发性绘画：在惯常的单色背景上，长长的黑色线条在画布上抓过，既表现了收获与自由，又有着书法语言的严谨。</p>\n<p data-pid=\"NIyLVWQ6\">他为罗思柴尔德木桐堡绘制的1980年份酒标，在方寸之间，集中表现出其全部作品的的共同特征：深度及爆炸力。</p>\n<h2><b>1981阿尔芒（ARMAN）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-1fcd20fea140114a99aba9050ca8090b_b.jpg\" data-size=\"normal\" data-rawwidth=\"1190\" data-rawheight=\"1731\" class=\"origin_image zh-lightbox-thumb\" width=\"1190\" data-original=\"https://pic4.zhimg.com/v2-1fcd20fea140114a99aba9050ca8090b_r.jpg\"><figcaption>1981阿尔芒（ARMAN）</figcaption></figure><p data-pid=\"H0kvLdYM\">画家及雕塑家阿尔芒·费尔南迪斯，简称阿尔芒，1928年生于尼斯。1960年，他与伊夫·克莱恩和皮埃尔·雷斯塔尼共同创建了“新现实主义”团体。他们反对抽象美学，把日常物品放在重要地位。</p>\n<p data-pid=\"Q0Qx5Bmv\">通过堆积、嵌入有机玻璃立体造型或毁掉的方法，阿尔芒将这些物品加以变形，从而打造出一个创意强烈的世界。其著名的系列作品《气愤》，将他所用的物品逐一爆露：乐器的众多零件散落在画布上或空间中。</p>\n<p data-pid=\"8uWyRV6G\">他为罗思柴尔德木桐堡绘制的1981年份酒标，色彩艳丽，主题“爆裂的小提琴”为其近期作品所常见。</p>\n<h2><b>1982约翰•休斯顿（JOHN HUSTON）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-8ec2c638ed0bc38413a391a6ba747066_b.jpg\" data-size=\"normal\" data-rawwidth=\"1189\" data-rawheight=\"1680\" class=\"origin_image zh-lightbox-thumb\" width=\"1189\" data-original=\"https://pic3.zhimg.com/v2-8ec2c638ed0bc38413a391a6ba747066_r.jpg\"><figcaption>1982约翰•休斯顿（JOHN HUSTON）</figcaption></figure><p data-pid=\"xjwLpvXY\">演员及著名导演约翰·休斯顿（1906-1987），是一位拳击手、艺术爱好者、作家、养马师、猎手。此外，从年轻时起，他就是一位天才的画家。他那句献辞“谨此庆贺我的挚友菲利普男爵在木桐堡的第六十次采收”，见证了他与男爵的友谊，也表明他如此眷恋着这方使他着迷的土地。</p>\n<p data-pid=\"amCiGXUf\">他为罗思柴尔德木桐堡1982年酒标绘制的水彩画，是其最后的作品之一。作品采用具象的表达方式，表现了木桐堡的象征“公羊”，色彩深沉而热烈，体态轻盈优美，透着一丝放纵，与它那两位永远的伙伴太阳和葡萄一起，沉浸在酒神的欢乐中。</p>\n<h2><b>1983索尔•斯坦伯格（SAUL STEINBERG）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-36175763b6e39656158f018d4e1cf731_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1182\" data-rawheight=\"1662\" class=\"origin_image zh-lightbox-thumb\" width=\"1182\" data-original=\"https://pic2.zhimg.com/v2-36175763b6e39656158f018d4e1cf731_r.jpg\"></figure><p data-pid=\"Q2EeEjLt\">索尔·斯坦伯格，是罗马尼亚裔的美国画家及漫画家。他出生于1914年。1941年，他定居纽约，从那时起，他与《纽约客》周刊合作，不久后，成为其最著名的作者之一。他对自己的主要创作特点有着清晰的认识，他在一次精辟的概述中写道：“整个艺术史都对我有影响：埃及的壁画、厕所的涂鸦、原始艺术、疯子、画家修拉、儿童画、壁毯、保罗·克利。”七十年代，斯坦伯格选择了揭示人类孤独的主题：空旷的海滩上，人只是地平线上的一个点，淡色天空中，太阳上盖着逼真的印章。</p>\n<p data-pid=\"TVnBpaL4\">他为罗思柴尔德木桐堡绘制的1983年份酒标，表现的正是这种对世界的新视角。</p>\n<h2><b>1984YAACOV AGAM</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-b6458f7ada9040aaf05a6ce87f4ff904_b.jpg\" data-size=\"normal\" data-rawwidth=\"1191\" data-rawheight=\"1671\" class=\"origin_image zh-lightbox-thumb\" width=\"1191\" data-original=\"https://pic1.zhimg.com/v2-b6458f7ada9040aaf05a6ce87f4ff904_r.jpg\"><figcaption>1984YAACOV AGAM</figcaption></figure><p data-pid=\"-6p6kZSd\">亚科夫·阿加姆1928年出生于以色列，1951年定居巴黎，父亲是一名犹太教教士。1958年，他与索托、保罗-伯里和丁格力一起发起后来被称为“运动艺术”的流派。《塔木德》当中有云：“生活是一道掠过的影子，所以人世的任何一切都无法以静止不动的图像捕捉。”阿加姆深受启发，由此以木头或金属创造出形状可变、色彩绚丽的作品，通过操作或者视角的变化能够具有诸多变化。</p>\n<p data-pid=\"gKXW8Aj4\">因此，阿加姆为1984年份的木桐创作的酒标只能体现他艺术风格的一小部分，但是美酒的反光与饮者的欢愉却为这个静止的三角形带来其所缺少的活泼动感。</p>\n<h2><b>1985保尔•徳尔沃（PAUL DELVAUX）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-062fb3bd7fb8f10ca8644580e5ba93f0_b.jpg\" data-size=\"normal\" data-rawwidth=\"1194\" data-rawheight=\"1677\" class=\"origin_image zh-lightbox-thumb\" width=\"1194\" data-original=\"https://pic1.zhimg.com/v2-062fb3bd7fb8f10ca8644580e5ba93f0_r.jpg\"><figcaption>1985保尔•徳尔沃（PAUL DELVAUX）</figcaption></figure><p data-pid=\"csQjyAj3\">保尔·徳尔沃（1897-1994），出生于比利时，早期受到佛拉芒表现主义的影响，后来成为超现实主义的代表人物之一。事实上，这位充满创意的现代绘画大师，可能更属于“魔幻现实主义”。他向我们展示了一系列神秘而纠缠的景象：呆板而情色的裸女，肌肤苍白无血色，目光冷漠；背景如梦，在月光下，草木茂盛，都市景观被精细描绘得近乎照片。</p>\n<p data-pid=\"auiPMGVs\">他为罗思柴尔德木桐堡绘制的1985年份酒标：两个纯洁的小姑娘，彼此分离，却因一串葡萄而重逢，她们凝视着、触摸着这串葡萄，即将品尝……</p>\n<h2><b>1986伯纳德•塞茹尔内（BERNARD SÉJOURNÉ）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-6033fedfb7cd0758b51fa7183c1dd127_b.jpg\" data-size=\"normal\" data-rawwidth=\"1188\" data-rawheight=\"1674\" class=\"origin_image zh-lightbox-thumb\" width=\"1188\" data-original=\"https://pic4.zhimg.com/v2-6033fedfb7cd0758b51fa7183c1dd127_r.jpg\"><figcaption>1986伯纳德•塞茹尔内（BERNARD SÉJOURNÉ）</figcaption></figure><p data-pid=\"VgDAY9q3\">伯纳德·塞茹尔内（1947-1994），出生于海地的一个种植园主家庭。他先后在牙买加和美国接受了良好的技术与艺术训练，但他始终保持着与家乡岛国的紧密联系。塞茹尔内的画作，神秘而精细，拒绝采用其他海地画家的天真朴实风格，似乎抓住了上古文化的灵魂：有着优美长颈、半闭眼睛的妇女，贝壳及热带花卉，淡雅的色调和波动起伏的形式透着一种迷人的温情……</p>\n<p data-pid=\"Sq5K3nUX\">他为罗思柴尔德木桐堡1986年份酒标绘制的作品，是最能展现其才华的杰作之一：三面具的组合，从黑暗的夜色里浮现出来，长着黑人面孔的白种人。</p>\n<h2><b>1987汉斯•艾尔尼（HANS ERNI）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-008c26180f546613a1d698ac55a311a5_b.jpg\" data-size=\"normal\" data-rawwidth=\"1179\" data-rawheight=\"1658\" class=\"origin_image zh-lightbox-thumb\" width=\"1179\" data-original=\"https://pic2.zhimg.com/v2-008c26180f546613a1d698ac55a311a5_r.jpg\"><figcaption>1987汉斯•艾尔尼（HANS ERNI）</figcaption></figure><p data-pid=\"nRo91fl4\">瑞士画家汉斯·艾尔尼（1909-2015），生于卢塞恩。他早期从事抽象主义绘画，后受到人道主义的影响而摈弃抽象主义，并在二战后投身左派政治。艾尔尼的作品，经常利用古代或现代神话里的人物表达某种寓意，在其象征现实主义的画作里，有着丰腴有力的形体和近乎几何图形的精确线条。</p>\n<p data-pid=\"TCPwUWYW\">罗思柴尔德木桐堡1987年份酒标，展示了他作为肖像画家的天赋。艾尔尼将其绘画对象变成了一种象征，成功地表现了菲利普·德·罗思柴尔德男爵的精力充沛与活力四射，并借此向男爵表达最为崇高的敬意。</p>\n<p data-pid=\"spRYfoal\"><b>注：酒标中间部分是菲莉嫔写给父亲的信。</b></p>\n<p data-pid=\"Dv2E0ptV\"><b>A mon pere, le Baron Philippe de Rothschild, renovateur de Mouton, je dedie ce millesime de sa 65eme et derniere vendange. </b></p>\n<p data-pid=\"PwDhH-1t\"><b>致我的父亲，菲利普罗斯柴尔德男爵，木桐的创新者，纪念他的第65个也是最后一个收获年份。</b></p>\n<p data-pid=\"KrelcRd0\"><b>从该年份起，签名改为Philippine de Rothschild，酒标不再标识当年产量。</b></p>\n<h2><b>1988基斯•哈林（KEITH HARING）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-0daab7b1f9c5fe495d01bfa6b7b20bee_b.jpg\" data-size=\"normal\" data-rawwidth=\"1203\" data-rawheight=\"1672\" class=\"origin_image zh-lightbox-thumb\" width=\"1203\" data-original=\"https://pic3.zhimg.com/v2-0daab7b1f9c5fe495d01bfa6b7b20bee_r.jpg\"><figcaption>1988基斯•哈林（KEITH HARING）</figcaption></figure><p data-pid=\"i97Yguf1\">美国画家及雕塑家基斯·哈林（1958-1990），出生于宾夕法尼亚。八十年代，他成为纽约“东村”最著名的创作者之一。然而，他逃避画廊的精英主义，而让自己的作品参与到城市景观中，譬如地铁里的涂鸦、时代广场上的巨幅画作。时代广场的那幅《光芒四射的孩子》，后来成为他的标志：坚实的轮廓上，打着印记，环绕着四射的光芒，在连环画里代表惊奇或赞叹。哈林谦虚地把自己称为“二十世纪的形象制作者”。此外，他还是一位充满悲情与幽默的当代诗人。</p>\n<p data-pid=\"RqIdQ3kM\">他为罗思柴尔德木桐堡绘制的1988年份酒标，主题是跳舞的公羊，但他恶作剧般地加以变形处理，或许是在讽刺影射罗思柴尔德木桐堡的正式纹章。</p>\n<p data-pid=\"SVxckcyX\"><b>注：菲莉嫔·德·罗思柴尔德女男爵的父亲，菲利普·德·罗思柴尔德男爵，于该年去世，享年86岁。</b></p>\n<h2><b>1989格奥尔格•巴塞利茨（GEORG BASELITZ）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-5e57d7d372f3ac42d08891d242014b70_b.jpg\" data-size=\"normal\" data-rawwidth=\"1206\" data-rawheight=\"1746\" class=\"origin_image zh-lightbox-thumb\" width=\"1206\" data-original=\"https://pic1.zhimg.com/v2-5e57d7d372f3ac42d08891d242014b70_r.jpg\"><figcaption>1989格奥尔格•巴塞利茨（GEORG BASELITZ）</figcaption></figure><p data-pid=\"XeG1sEqI\">德国画家巴塞利茨，1938年出生于萨克森州的巴塞利茨，他原名叫汉斯·格奥尔格·克恩，后用故乡名当作自己的笔名。直到二十岁离开东德后，他才开始接触到当代艺术。他的绘画，无视传统，追求自由；某些主题充满挑衅力：残断的脚、变形的Y茎、绝望的面具；他将强烈的颠覆感与一种精神探讨相结合，让人想起安东尼·阿尔托和波德莱尔。</p>\n<p data-pid=\"qE8y_yWg\">1969年，他绘制出了其首幅“上下颠倒”作品。此后，其作品一直忠实于这一奇特风格，画家从中感受到一种与表现对象间的“新距离”。因此，他虽没有切断与具象艺术的联系，但却给公众带来了一场真正的的视觉革命。</p>\n<p data-pid=\"uLukw_bj\">他为罗思柴尔德木桐堡1989年份酒标绘制的“倒羊”，把木桐堡的传统标志与那一年的历史事件结合了起来：柏林墙的倒塌。画家还在酒标上写道：“那边如今在我们这边。”</p>\n<p data-pid=\"9xkVe6AD\"><b>注：从这一年份开始，Baron Philippe改为Baronne Philippine。也是在该年木桐将于1933年收购的Chateau Mouton d’Armailhac改名为Château d’Armailhac阿尔梅亚堡，俗称单立人。</b></p>\n<h2><b>1990弗朗西斯•培根（FRANCIS BACON）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-11b415c8d87476dc4f9fb6454ccc347a_b.jpg\" data-size=\"normal\" data-rawwidth=\"1192\" data-rawheight=\"1728\" class=\"origin_image zh-lightbox-thumb\" width=\"1192\" data-original=\"https://pic3.zhimg.com/v2-11b415c8d87476dc4f9fb6454ccc347a_r.jpg\"><figcaption>1990弗朗西斯•培根（FRANCIS BACON）</figcaption></figure><p data-pid=\"PDNmwohi\">英国画家弗朗西斯·培根（1909-1992），出生于都柏林，是一位驯马师的儿子，父亲不太支持儿子的绘画兴趣和工作。18岁时，培根离开家，并在巴黎的展览上接触到了了毕加索的作品。</p>\n<p data-pid=\"l7J5_DW7\">他最初从事家具制图和舞台布景工作，在1929年前后才开始推出自己的第一批画作。这一时期里，令人难忘的是其第一幅“耶稣受难像”作品（1933）。</p>\n<p data-pid=\"vi3FjKUw\">但是，直到1945年，这位自学成材的画家，凭借着那幅《耶稣受难像脚下对肖像的三次研究》，才找到了自己的风格。1953年，这幅作品被泰特美术馆购买收藏。</p>\n<p data-pid=\"yzhcTqHc\">在随后的年代里，又有许多其他西方著名人物进入他的笔下，尤其是委拉斯凯兹画的《教皇英诺森十世肖像》、《战舰波将金号》里的叫喊妇人、古希腊悲剧人物《奥雷斯特》，他把这些人物肖像进行彻底变形，使之融入自己的个人世界。</p>\n<p data-pid=\"oYjQu9-F\">1958年，他成为马布罗画廊的签约画家，并一直忠实于它。1962年，泰特美术馆为他举办了第一次大型的作品回顾展。随后，他又举办了多次重要展览，包括1971年在巴黎大王宫举办的展览，这段时间，培根创作了一系列令人排斥又着迷的代表作品：自画像、朋友肖像、人体研究。这些画作经常采用三连画形式。</p>\n<p data-pid=\"gerbHCrz\">1985年，泰特美术馆为他举办了著名的作品回顾展。直到此时，培根才被一致公认为本世纪最伟大的画家之一，但他依然拒绝官方荣誉和资产阶级化。</p>\n<p data-pid=\"Zk_4EZXi\">培根的画作难以归类于任何流派，在他笔下，裸体、肌肉、男性特征，都处于可笑的孤独中，承受着出生与死亡时的痛苦扭曲，令人感受到一种未知的不可思议的不适。他曾说：“我从来不会画笑容。”</p>\n<p data-pid=\"Z9Mjs-Rz\">在色彩鲜亮、平涂而成的背景上，满是肌肉的酮体，被毫无透视感的几何线条所束缚，像在一面哈哈镜中伸展和收缩着。封闭的空间，象征着古典悲剧与当代生活的痛苦……</p>\n<p data-pid=\"BOdeTDh6\">培根喜欢酒，甚至可能是嗜酒，他为罗思柴尔德木桐堡创作的1990年份酒标，表现了围绕酒杯的闪电般的古怪舞蹈。</p>\n<h2><b>1991节子</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-ed7c06ea1fc70b3d2f17c8c936126c88_b.jpg\" data-size=\"normal\" data-rawwidth=\"1203\" data-rawheight=\"1732\" class=\"origin_image zh-lightbox-thumb\" width=\"1203\" data-original=\"https://pic1.zhimg.com/v2-ed7c06ea1fc70b3d2f17c8c936126c88_r.jpg\"><figcaption>1991节子</figcaption></figure><p data-pid=\"ZuvNliaL\">节子，1942年出生于日本的一个武士世家。她接受的是西方式教育，但最早学习的是日本传统艺术：音乐、诗歌、歌舞伎。</p>\n<p data-pid=\"NPjgIn3z\">1962年，她在东京与巴尔蒂斯相遇，不久后，她前往罗马追随巴尔蒂斯。作为《土耳其卧室》等一系列杰出画作的作者，巴尔蒂斯当时正在梅第奇别墅担任法兰西学院罗马分院的院长。节子成为了他的妻子，跟着他，接待了许多当代最著名的艺术家，包括作家、画家和电影艺术家……在罗马附近，他们买下了中世纪的卡罗山古堡，在这里，节子让童年的日本家具与古堡的古老石块和谐并处。</p>\n<p data-pid=\"q0l1Lpou\">1977年起，这对夫妇开始在瑞士生活，他们住在罗西尼大木屋里，这也是一处神奇的居所，节子的才华得以充分体现。木屋的女主人就此完完全全成为一名画家。</p>\n<p data-pid=\"Lp1yY8m1\">她的第一个观众是她的女儿哈鲁米，她为女儿画了很多故事画，里面有光芒闪烁的木偶，无论是家畜还是神话里的公主，节子都把他们刻画得栩栩如生。她还为巴尔蒂斯做了许多彩布拼接的靠垫，布面上的猫长着古怪的人眼。</p>\n<p data-pid=\"R5XLNsX_\">节子的画作，主要是“静物画”。不过，她画中的静物似乎都生机勃勃、充满动感，就像《孩子与魔法》里面的茶壶。节子把这些物品一笔一划地重新构造，打磨，施色，成为创造它们的艺术家，将日本传统艺术赋予给了这些日常物品。</p>\n<p data-pid=\"B8I-_387\">她那热切的目光、纯净的线条、画面的细部，没有阴影而且几乎缺乏透视，凡此种种都令人想起一个平静安详的天地，一处超越时空的世外桃源。</p>\n<p data-pid=\"X2bd5mgh\">在罗思柴尔德木桐堡1991年份酒标中，节子以她自己的方式讲述了葡萄酒的永恒历史：一串葡萄开花，结果，然后像收获时节的麦穗那样，把果实交给采收者；然后，久候的结局终于到来了，醒酒器被盛满，尽享饮酒之乐。</p>\n<p data-pid=\"YdSG-oWX\"><b>注：在1991年份，木桐堡正式推出“<u><span class=\"nolink\">银翼</span></u>”（Aile d’Argent）葡萄酒。这是一款高质量的干白葡萄酒，产自木桐堡葡萄园内的一个7公顷地块。自八十年代初起，木桐堡就在这里栽种了白葡萄品种（53%赛美蓉、35%苏维翁、1%密斯卡岱）。</b></p>\n<h2><b>1992佩尔•柯克比（PER KIRKEBY）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-74a11828091f97d4f17ac0ead6bd15ac_b.jpg\" data-size=\"normal\" data-rawwidth=\"1201\" data-rawheight=\"1747\" class=\"origin_image zh-lightbox-thumb\" width=\"1201\" data-original=\"https://pic1.zhimg.com/v2-74a11828091f97d4f17ac0ead6bd15ac_r.jpg\"><figcaption>1992佩尔•柯克比（PER KIRKEBY）</figcaption></figure><p data-pid=\"-LILtdJ0\">佩尔·柯克比，1938年生于哥本哈根。他起初学习自然史专业，后从事北极大陆地质学研究，曾多次前往格陵兰岛和北极地区。直到1962年，他才真正接触绘画，参加了实验艺术画派，该画派刚刚在哥本哈根成立，旨在对抗在丹麦占统治地位的“风景画”学院派。1965年，他在哥本哈根举办了首次个人作品展。从那时起，在其一生中，他在多种艺术领域中都展露了才华：诗歌、小说、艺术随笔、电影、电视、戏剧。然而，只有在绘画中，他才能得到暂时的宣泄。此外，他还对了解远方世界有着强烈的兴趣：纽约（1966）、中美洲及玛雅遗址、苏联（1971）、海地（1982）、澳大利亚（1985）、波利尼西亚和新西兰（1988）、摩洛哥（1989）。</p>\n<p data-pid=\"UCFnclbf\">作为画家和雕塑家，自1974年结识科隆著名的画廊主人维尔纳后，他的艺术生涯发生了决定性的变化。</p>\n<p data-pid=\"q6ydlFS4\">在八十年代，柯克比成为国际知名的艺术家，其作品的创意得到公认，他在世界多个都市举办了个展：慕尼黑、柏林、阿姆斯特丹、伦敦、巴黎、纽约、布鲁塞尔…</p>\n<p data-pid=\"MUtZg9J-\">他的巨大声望，使他在1978年被卡尔斯鲁厄大学聘为教授。在1988年被法兰克福大学聘为教授。</p>\n<p data-pid=\"Ee8_iVP9\">柯克比是一位强烈而忧虑的色彩主义者，他认为色彩可以创造形式和对比，色彩可以带来构图的主体，并产生抒情效果，使自我的深度与要表现的世界达到和谐统一。</p>\n<p data-pid=\"4qcj0rT0\">他对绘画要求极高，没有梦境或随意的逃避，表现出的大自然画面凝重而野蛮，就像被大地电流划过一样，强烈表达出一种不可简化的存在。</p>\n<p data-pid=\"xDzD5cv7\">柯克比为罗思柴尔德木桐堡1992年份酒标绘制了一只硕大的酒杯，深红色的酒液溢出杯沿。酒杯周围，四射的阳光与葡萄田的波浪起伏交织在一起，线条与色彩相得益彰。</p>\n<h2><b>1993巴尔蒂斯（BALTHUS）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-86b3ab50360edb65c30cc777e0c3f5e7_b.jpg\" data-size=\"normal\" data-rawwidth=\"1186\" data-rawheight=\"1741\" class=\"origin_image zh-lightbox-thumb\" width=\"1186\" data-original=\"https://pic4.zhimg.com/v2-86b3ab50360edb65c30cc777e0c3f5e7_r.jpg\"><figcaption>1993巴尔蒂斯（BALTHUS）</figcaption></figure><p data-pid=\"RsFQA2hO\">“巴尔蒂斯”是巴尔塔扎·柯洛索夫斯基·德·罗拉伯爵的笔名。他1908年出生于巴黎的一个波兰裔高知家庭。早在13岁时，他就引起了奥地利诗人雷纳·玛利亚·里尔克的注意，并且一生都享受着那个时代顶尖作家或艺术家的友情及尊重，诸如：热夫、安托南·阿尔托、勒内·夏尔、贾科梅蒂、巴塔叶、费利尼、加缪，大家都感受到了这位伟大艺术家的敬业精神、睿智和人格魅力。</p>\n<p data-pid=\"5kOmuh6H\">他在画家生涯中，足迹遍及多地：他17岁就到过意大利，1961至1976年间，他作为法兰西学院罗马分院的院长，长居于罗马美第奇别墅；1954年至1961年间，他居住在法国中央高地莫尔旺；最后是阿尔卑斯山，满足了他追求孤独与伟大的想法。如今，他与夫人——画家节子一起住在瑞士。</p>\n<p data-pid=\"W255QTYM\">巴尔图斯的作品，无论是肖像、自然风景或城市景观，还是内景，其尺寸及主题、对构图的把握及严谨，都非常经典，回响着意大利文艺复兴之初、库尔贝及塞尚的遗韵。但是，这一传统被人与物的秘密情感，被魔法、色彩和情色加以扭曲变形：这一魔法，在永恒的瞬间，将剪影固定在画布上；这种温柔，有着淡淡的色彩，令人着迷；这种情欲，有着女性肉体的柔媚。正如诗人魏尔伦所云，“集模糊与清晰于一身”。</p>\n<p data-pid=\"rNn9N-0D\">他为罗思柴尔德木桐堡绘制的1993年份酒标，选取了其作品中的常见图案：目光迷离的青春少女，任性而脆弱……一种既清澈又曲折的艺术魔力，将我们引向遥远的欲望与梦想。</p>\n<p data-pid=\"HVcWJnv9\"><b>注：由于美国人反对裸女酒标，故当年出口的到美国的酒标上半部分为空白，如下图。另外，菲莉嫔女男爵于当年创建副牌酒：<u><span class=\"nolink\">罗思柴尔德木桐小木桐</span></u>（le Petit Mouton de Mouton Rothschild）</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-2c272070680b0baa5c8aa69656f79d1d_b.jpg\" data-size=\"normal\" data-rawwidth=\"474\" data-rawheight=\"711\" class=\"origin_image zh-lightbox-thumb\" width=\"474\" data-original=\"https://pic2.zhimg.com/v2-2c272070680b0baa5c8aa69656f79d1d_r.jpg\"><figcaption>1993年份美国版</figcaption></figure><h2><b>1994卡雷尔•阿佩尔(KAREL APPEL)</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-55bb5dfe996dc0cabe1708c9ffef86c8_b.jpg\" data-size=\"normal\" data-rawwidth=\"1198\" data-rawheight=\"1747\" class=\"origin_image zh-lightbox-thumb\" width=\"1198\" data-original=\"https://pic1.zhimg.com/v2-55bb5dfe996dc0cabe1708c9ffef86c8_r.jpg\"><figcaption>1994卡雷尔•阿佩尔(KAREL APPEL)</figcaption></figure><p data-pid=\"MQRu_nLt\">荷兰画家卡雷尔·阿佩尔，1921年生于阿姆斯特丹，1940至1943年就读于皇家美术学院。1946年，在家乡城市举办了首次个展。</p>\n<p data-pid=\"Ga1QRfIg\">他当时的灵感来自毕加索、马蒂斯、杜布菲等人。然而，其艺术生涯的真正起点却是“眼镜蛇画派”。</p>\n<p data-pid=\"a4jCY7qC\">1948年，他与科尔内耶、阿列钦斯基和阿斯盖尔·约恩这些画家共同创建了“眼镜蛇画派”。他为此雕塑的《眼镜蛇鸟》，成为了这一运动的标志，表达了冲破后立体派传统的新巴罗克表现主义。</p>\n<p data-pid=\"xUGMjntZ\">在五十及六十年代，卡雷尔·阿佩尔以其才华横溢的作品，获得一系列重要订单及大奖，就此赢得了巨大的国际声誉：为阿姆斯特丹市博物馆和巴黎的联合国教科文组织总部大楼绘制壁画，荣获威尼斯双年展大奖、古根海姆大奖。</p>\n<p data-pid=\"LdWNdw-X\">他先住在阿姆斯特丹，1950年迁居巴黎，最后定居纽约，直到现在。在这三大城市，他漫步其中，感受到乱哄哄的拥挤和随处丢弃的废料，正如波德莱尔所写：“震耳欲聋的街道正向我吼叫”。对这一吼叫，阿佩尔决定采用自己的方式把它变成“街头艺术”。他使用不同的材料：扭曲的木板，破旧的铁器、陶瓷、杂乱无章的拼贴、颜色奔放的油彩或丙烯颜料。他把自己的作品称作“野蛮表现主义”，独具创意，愉悦地刺激着人们的眼球和思想，传递着创作激情。</p>\n<p data-pid=\"P62caPiO\">其近期作品，以裸体和风景为主，转向更为宁静而从容的风格，但依旧不失其充满创意的活力。</p>\n<p data-pid=\"WjdqUKTJ\">卡雷尔·阿佩尔是为罗思柴尔德木桐堡绘制酒标的第一位荷兰画家。在1994年份酒标中，他构想出一对酒徒围着图腾酒瓶狂舞，仿佛要将关在瓶里的酒魂解放出来。</p>\n<h2><b>1995安东尼•塔比埃斯（ANTONI TÀPIES）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-d4317f5343b2fbc6db50024b85ef93b6_b.jpg\" data-size=\"normal\" data-rawwidth=\"1210\" data-rawheight=\"1729\" class=\"origin_image zh-lightbox-thumb\" width=\"1210\" data-original=\"https://pic3.zhimg.com/v2-d4317f5343b2fbc6db50024b85ef93b6_r.jpg\"><figcaption>1995安东尼•塔比埃斯（ANTONI TÀPIES）</figcaption></figure><p data-pid=\"aC49Id1L\">加泰罗尼亚画家和雕塑家安东尼·塔比埃斯，1923年生于巴塞罗纳的一个知识分子家庭，他的生活及创作都一直植根于自己的家乡城市。</p>\n<p data-pid=\"OGq9w3Kj\">他在巴塞罗纳完成了法律及绘画学业，并于1948年创办了艺术评论杂志《立方七》。他还在这里结识了米罗，并受其影响，短暂加入了超现实主义画派。但更为重要的是，他发现了东方哲学，在巴黎居住期间，他与杜布菲和福特里耶共同创建了“非定型艺术”…</p>\n<p data-pid=\"JbNrIcpx\">1950年，他在巴塞罗纳举办了首次个展，此后不久，他的作品被介绍到世界各地，赢得了国际声望。他获得了一系列大奖：1958年和1993年的威尼斯双年展大奖、1993年度毕加索奖章、1985年法国政府颁发的国家绘画奖。1983年，他的家乡巴塞罗纳市委托他制作纪念雕塑“向毕加索致敬”，同时将一栋房子赠送给他，用于设立安东尼·塔比埃斯基金会，1990年，该基金会正式成立。安东尼·塔比埃斯被公认为我们时代最伟大的艺术家之一，其作品被世界各大博物馆广为收藏。</p>\n<p data-pid=\"OMCRtrzt\">塔比埃斯的绘画作品，融东西方于一体，表达了人与材料间的激烈对话，在这里，人与物处于对抗冲突状态。在其笔下，色彩通常是灰暗的，混以各种材料（沙土、织物、石头、石膏、铁丝、绳索），画面背景起伏不平，就像是被某种原始语言的神圣字符劈砍、切削过的“墙壁”。塔比埃斯的艺术，无法归类于任一流派，表现出一种难以控制的混乱景象，强烈表达了我们这个时代的焦虑和赌注。他自己将其作品定义为“战场”，伤者无数，无穷无尽。</p>\n<p data-pid=\"TE5nujMB\">一个鼻子、两颗心、一张嘴、一只眼睛：塔比埃斯为木桐堡1995年份酒标绘制了一幅颜色鲜红的作品，并加以旁白，幽默地表现了这款伟大葡萄酒带给我们的感官盛宴。</p>\n<h2><b>1996古干</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-8d26cab97e601969ef4a579bc9bb71d6_b.jpg\" data-size=\"normal\" data-rawwidth=\"1194\" data-rawheight=\"1740\" class=\"origin_image zh-lightbox-thumb\" width=\"1194\" data-original=\"https://pic3.zhimg.com/v2-8d26cab97e601969ef4a579bc9bb71d6_r.jpg\"><figcaption>1996古干</figcaption></figure><p data-pid=\"afUbd-Dl\">中国书画家古干，1942年生于湖南长沙。六十年代初，进京学习美术专业，中途因病辍学，但在首都谋得了一份差事。文革中，他被剥夺工作，下厂作印刷工人达十年之久。1967年，在毛泽东去世及“四人帮”垮台后，他才终于重归艺术。当时，他以极大的热忱探索着在中国尚不为人知的康定斯基、克利及米罗等。</p>\n<p data-pid=\"CN2XQA7T\">1985年，他成为在北京举办的“现代书法展”的发起人之一，此后不久，他于1987和1989年两次造访德国，被西方所认知。1993年，他在科隆举办了其作品的重要展览。他如今居住在北京，是中国现代书画协会主席。他的作品在中国及西方许多博物馆都有展出，其中包括大英博物馆和科隆的远东艺术馆等。 </p>\n<p data-pid=\"wKV9SXov\">源自象形文字的中国书法，从公元前两千年以来，一直保持不变。它集文字与艺术于一体，字义的形式有着恒定的美学要求。古干在保持传统的同时，作出了深刻的革新：他将色彩赋予书法，摆脱了平衡与传统的限制，在画面上增添了具有装饰价值的印章。</p>\n<p data-pid=\"b53RKUrE\">现在，古干不仅被视为一位大师，还是其艺术的主要理论家（他于1990年出版了《现代书法三步》）。他的作品表明：书法可以是连接其祖国文化与西方抽象艺术的一座桥梁。</p>\n<p data-pid=\"aosM4imz\">古干为罗思柴尔德木桐堡1996年份酒标绘制了一副由五个汉字构成的画面，其色彩不同，笔画各异，但都是“心”字。他将这有力而精巧的构图称作《心连心》，意指宇宙和谐中的真诚作为。</p>\n<h2><b>1997妮姬•德•圣•法勒（NIKI DE SAINT PHALLE）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-f01673f098beb0d8006bbbeec3d0255e_b.jpg\" data-size=\"normal\" data-rawwidth=\"1173\" data-rawheight=\"1729\" class=\"origin_image zh-lightbox-thumb\" width=\"1173\" data-original=\"https://pic3.zhimg.com/v2-f01673f098beb0d8006bbbeec3d0255e_r.jpg\"><figcaption>1997妮姬•德•圣•法勒（NIKI DE SAINT PHALLE）</figcaption></figure><p data-pid=\"kTKIUnfp\">妮姬·德·圣·法勒（1930-2002），生于法国塞纳–诺伊市，长于父母居住的纽约。年轻时，她作为模特为美国几家著名杂志工作，并开始学习音乐。</p>\n<p data-pid=\"ueEt-Ltc\">1952年，她与丈夫马修斯（也是她两个孩子的父亲）一起移居巴黎，并开始绘画。在一次巴塞罗纳旅行中，她发现了高迪的建筑，高迪对她的艺术产生了持久的影响。</p>\n<p data-pid=\"rNN5gJX9\">1956年，她在瑞士圣加尔举办了首次画展。1960年，她与雕塑家让·坦吉利相遇，直到他1991年去世，她们始终保持着密切的感情与工作关系。在随后的年代里，她凭着具有挑逗意味的作品，赢得了最初的声誉，诸如《惊人的绘画》：石膏泡沫上，充满着她用卡宾枪射出的生动色彩。同期，她参加“新现实主义”画派，该画派主要包括伊夫·克莱恩、阿尔芒、克利斯托和坦吉利。</p>\n<p data-pid=\"66lL1-kF\">1965至1970年间，她在纽约、巴黎、斯德哥尔摩、蒙特利尔等地创作并展出了其第一批《娜娜们》。这些丰腴多彩的女性形体，以其丰满，反抗着苗条纤细的女性时尚，成为她作为雕塑家强力创新的标志。后来，作为其未来作品的模本，这些丰满的“娜娜们”产生了一批令人发狂的创新造型，它们通常形体硕大，色彩强烈，譬如：米莉森林的巨人像、耶路撒冷的假人像、托斯卡纳的塔罗花园。1982年，她与坦吉利一起创作了巴黎蓬皮杜中心附近的著名的《斯特拉文斯基喷泉》。两年后，她在蓬皮杜中心举办了作品回顾展。这位世界著名的艺术家，现居住在美国圣地亚哥，曾与建筑师博塔一起为千禧年制作了纪念性的《诺亚方舟》。</p>\n<p data-pid=\"wTCdEVkk\">妮姬·德·圣·法勒为木桐堡构思的酒标，寓意为餐桌上的狂欢作乐：太阳照在盘子上，阳光穿过贪吃的嘴和伸出的手；那条出自圣经的“妮姬之物”——诱惑者蛇，斜穿过画面；但这条邪恶的蛇，更喜欢美酒，它献给夏娃的不是传说中的苹果，而是一瓶葡萄酒——无疑是1997年份的罗思柴尔德木桐酒。</p>\n<p data-pid=\"tpFda8O7\"><b>注：在智利，菲莉嫔女男爵与智利著名的“干露酒厂”合作，成功的推出了另一款伟大的红酒：活灵魂（<u><span class=\"nolink\">Almaviva</span></u>），其酒窖全部由贵重木材打造而成。</b></p>\n<h2><b>1998鲁菲诺•塔马约（RUFINO TAMAYO）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-aada183c36e8ef4fe118e3ab7435830d_b.jpg\" data-size=\"normal\" data-rawwidth=\"1179\" data-rawheight=\"1674\" class=\"origin_image zh-lightbox-thumb\" width=\"1179\" data-original=\"https://pic2.zhimg.com/v2-aada183c36e8ef4fe118e3ab7435830d_r.jpg\"><figcaption>1998鲁菲诺•塔马约（RUFINO TAMAYO）</figcaption></figure><p data-pid=\"Olf6PP1Q\">鲁菲诺·塔马约（1899-1991），出生于瓦哈卡（墨西哥）一个印第安人后裔的家庭。他是20世纪最著名的艺术家之一。年轻时，他不顾家庭反对，前往墨西哥城，进入美术学院学习，并惊喜地发现了前哥伦布艺术的神秘感与多样性，这一影响后来贯穿于其全部作品。1926年，他不赞同“壁画派”同行们的革命主张，离开了墨西哥，前往纽约。十年后，他定居纽约并在这里生活了很长时间。</p>\n<p data-pid=\"hsU_RwBb\">从那时起，他的艺术生涯就往来于墨西哥与美国（他先后在达顿学院与布鲁克林博物馆授课），并规律性地在两国举办了多次个展。1950年，他参加威尼斯双年展，1959年，参加卡塞尔文献展，1952年和1974年，他在巴黎现代艺术馆举办了两次画展，他还为巴黎的教科文总部大厦绘制了壁画，这一切都为他赢得了巨大的国际声誉。从六十年代到八十年代，塔马约获得了一系列大奖和殊荣，成为了我们时代最重要的画家之一。</p>\n<p data-pid=\"kksfok8k\">此外，他还热心艺术公益事业。1974年，他将一批前哥伦比亚艺术作品捐献给家乡瓦哈卡市。他还向墨西哥人民捐赠了一批优秀的当代艺术品，其中包括他自己的大量作品：鲁菲诺·塔马约国际博物馆得以于1981年在墨西哥市设立。塔马约的作品色彩丰富，从淡雅的色调直至夺目的艳红，融合了近乎幼稚的简单与咄咄逼人的表现主义。此外，其作品还有着塔马约自身所特有的充沛能量，如帕兹所云，像“充满力量的星座”。他笔下的画面充满焦虑，甚至形如梦境，表现出了画家的无意识及不朽的古老传统。</p>\n<p data-pid=\"wTs18FyW\">1990年，塔马约同意为罗思柴尔德木桐堡绘制酒标，但天不假年，未能如愿。他的后人希望能在今日完成大师的遗愿，把这幅“干杯”画交给我们，作为1998年份酒标。画面上，主人公正在敬酒干杯：这一平常的世俗礼仪被塔马约加以变形，在红色太阳下，有着强烈的寓意，象征着我们难以抗拒的原始欲望。</p>\n<h2><b>1999雷蒙•萨维耶（RAYMOND SAVIGNAC）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-3bee4a7bed7b1e1a389461d3e2029083_b.jpg\" data-size=\"normal\" data-rawwidth=\"945\" data-rawheight=\"1329\" class=\"origin_image zh-lightbox-thumb\" width=\"945\" data-original=\"https://pic4.zhimg.com/v2-3bee4a7bed7b1e1a389461d3e2029083_r.jpg\"><figcaption>1999雷蒙•萨维耶（RAYMOND SAVIGNAC）</figcaption></figure><p data-pid=\"7bp6lfsm\">雷蒙•萨维耶（1907-2002），生于巴黎，其父母来自阿维隆省，经营着一家咖啡餐馆。雷蒙•萨维耶很早就展现出了漫画天赋。</p>\n<p data-pid=\"lZ-hiNY1\">1933年，第一个决定性的相遇：他结识了著名招贴画家卡桑特，并在其提携下，作为其助手加入了版画联合会。 </p>\n<p data-pid=\"t_HEIZoT\">1943年，他进入广告公司（Consortium Général de Publicité）工作，从事绘画创作。公司的后台老板是欧莱雅公司的创始人舒勒先生。四年后，他离开广告总公司，与同行维尔蒙一起创作；1949年，两人共同在“美术之家”举办展览。在展览上，舒勒先生发现了这位前雇员的作品“蒙萨万奶牛”，立刻将之印刷出版，并大获成功：萨维耶一夜成名。1951年，他获得招贴画大奖，这是他获得一系列殊荣的开始。此后，他为众多法国及国际大公司绘制招贴画，从比克（BIC）到法航，从邓禄普(DUNLOP)到百事可乐……</p>\n<p data-pid=\"pSxBHnAi\">他还善于对广告进行幽默的讽刺，并慷慨地将自己的才华用于环保与人道主义事业。从1982年起，他开始在诺曼底生活。</p>\n<p data-pid=\"jxhZ7nMn\">萨维耶宣称“展示越少，含义越多”。其作品线条简练，色彩鲜活而富于对比，背景优雅，狡黠的目光总能一下子直达要点。但同时，他的图案又会带来即兴的笑料与鲜明的口号。萨维耶的艺术，融形象与诗意于一体，显得永远年轻。</p>\n<p data-pid=\"UrhVcBTf\">自招贴画家让·卡吕1924年为木桐堡绘制第一幅艺术酒标后，70多年过去了，另一位招贴画大师萨维耶为木桐堡绘制1999年份酒标，这象征着对源头的回归。在他笔下，木桐堡的图腾“公羊”尥着蹶子，眨眼示意，邀请我们共享美酒之乐，并欢快地踢开上一个千年。</p>\n<h2><b>2000奥斯伯格小公羊</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-e5310790159c42c3a9eff06a997b20ba_b.jpg\" data-size=\"normal\" data-rawwidth=\"1508\" data-rawheight=\"2088\" class=\"origin_image zh-lightbox-thumb\" width=\"1508\" data-original=\"https://pic3.zhimg.com/v2-e5310790159c42c3a9eff06a997b20ba_r.jpg\"><figcaption>2000奥斯伯格小公羊</figcaption></figure><p data-pid=\"Z0eU4Ort\">自1945年以来，罗思柴尔德木桐堡每年都会邀请一位著名画家专门为木桐堡绘制年份酒标。长此以往，木桐堡的酒标收藏汇聚了我们时代众多绘画大师的作品。</p>\n<p data-pid=\"aEbi1qnw\">2000年份是个特例，菲莉嫔女男爵没有邀请任何画家。酒瓶本身成为了收藏对象，酒瓶装饰选自木桐堡葡萄酒与艺术博物馆里的一个珍宝酒杯：奥斯伯格小公羊。这是一尊刻金酒杯，由德国金银匠舒耐尔制作于1590年前后。</p>\n<p data-pid=\"nh3v2l05\">为了完整再现原作的细腻与光彩，BSN公司经过4个多月的研究，发明了一种珐琅彩新技术。他们使用精密工具，进行了需要极高精细度的工作。他们对镀金层和珐琅彩采用了特别复杂的烧制方法，获得了一种闪闪发光的材质，具有无与伦比的吸光能力。</p>\n<p data-pid=\"jH1GJyIC\">黑色瓶帽下面的一圈金环，采用公羊颈圈上的图案，呼应着公羊身上的螺旋纹。家族纹章、酒堡名、年份及庄主签名，全部采用细金丝网印刷。至于酒瓶，采用高质量的重玻璃，瓶型在肩部有轻微改动，圆锥感更为突出。为了保真，酒瓶上还刻着罗思柴尔德木桐堡的名字。</p>\n<h2><b>2001罗伯特•威尔森（ROBERT WILSON）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-0959c548fa0f23faeacf532315ecf20f_b.jpg\" data-size=\"normal\" data-rawwidth=\"2173\" data-rawheight=\"3173\" class=\"origin_image zh-lightbox-thumb\" width=\"2173\" data-original=\"https://pic4.zhimg.com/v2-0959c548fa0f23faeacf532315ecf20f_r.jpg\"><figcaption>2001罗伯特•威尔森（ROBERT WILSON）</figcaption></figure><p data-pid=\"8AncCsms\">罗伯特·威尔森，1941年出生于瓦克（德克萨斯州）。他早年就读于德州大学和布鲁克林的普威特艺术学院，毕业后热衷雕塑与建筑学。六十年代，他在美国从事戏剧活动，主要在大学圈和彼得·霍夫曼剧团表演戏剧。</p>\n<p data-pid=\"x_FB1uhJ\">1970年的某天晚上，在法国参加南希大学生艺术节时，他的才华在剧作《聋人一瞥》中得以爆发。这出戏围绕一个聋哑孩子展开，有着令人惊叹的美感，使威尔森在欧洲一夜成名。此后，他又创作了一系列著名作品：《致维多利亚女王的信》（1974）、《海边的爱因斯坦》（1976，音乐与格拉斯合作）、《死亡、毁灭与底特律》（1979），还有其1983年创作的史诗性作品《S内战》。自八十年代起，他转而关注著名歌剧作品，他在米兰大剧院导演了《莎乐美》，在纽约大都会剧院导演了《罗恩格林》，在巴黎歌剧院导演了《蝴蝶夫人》，在汉堡剧院导演了《帕西法尔》，都展示了他本人对作品的全新诠释。与此同时，其创作天赋还表现在其它领域：绘画、家具、家居设计，当然还有戏剧，特别是1995年演出的《哈姆雷特》，他在剧中有大段独白，令人难忘。他还在纽约附近创建了“水磨坊艺术中心”，使这里成为他主持下的真正的实验剧场，吸引着大学生和戏剧工作者们的到来。作为一名无与伦比的视觉艺术诗人，也鉴于他对当代戏剧的巨大影响，他在世界各地获得了无数大奖和殊荣。</p>\n<p data-pid=\"Q70uOyYK\">确实存在着威尔森风格，这是对于光影、色彩和形体动作的完美掌控，将神圣的画面感与澎湃的激情融合在一起。他在剧中带给我们独特的视角，戏剧节奏缓慢而迷人，将观众带入一个精心设计的梦幻般的奇特世界。无论是表演自己的作品还是他人的作品，威尔森始终都是独一无二的。</p>\n<p data-pid=\"zUltyq_u\">在罗思柴尔德木桐堡2001年份酒标中，威尔森将他的好友菲莉嫔女男爵搬上舞台，配以色彩绚丽的交响乐：葡萄藤蔓的绿色和太阳的金色，与葡萄酒的色彩组合在一起，从浅红直到深紫。</p>\n<h2><b>2002伊利亚•卡巴可夫（ILYA KABAKOV）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-9ba5a54cc99f6679228c301e8ffd4062_b.jpg\" data-size=\"normal\" data-rawwidth=\"1540\" data-rawheight=\"2274\" class=\"origin_image zh-lightbox-thumb\" width=\"1540\" data-original=\"https://pic3.zhimg.com/v2-9ba5a54cc99f6679228c301e8ffd4062_r.jpg\"><figcaption>2002伊利亚•卡巴可夫（ILYA KABAKOV）</figcaption></figure><p data-pid=\"X90dtC1o\">伊利亚·卡巴可夫，出生于1933年，是俄国当代艺术大师。他既是著名的素描画家，又是著名的油画家和家居设计家。在木桐堡2002年份酒标中，卡巴可夫借助透视的惊人效果，表现出其高超的图像控制力，以及他对多维空间的偏好。他选取的这幅作品名为《OKHO》,在俄文里是“窗户”的意思。在酒瓶之“窗”背后，艺术家向我们展现了另一个世界：它由成千上万的翅膀勾勒而成，旋转不停，带着我们飞向梦想与快乐，寓意着一款伟大葡萄酒的无穷魔力！</p>\n<h2><b>2003-150周年纪念</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-b6a19c74f6351ac5fe2ea3be300fd52f_b.jpg\" data-size=\"normal\" data-rawwidth=\"1065\" data-rawheight=\"1802\" class=\"origin_image zh-lightbox-thumb\" width=\"1065\" data-original=\"https://pic4.zhimg.com/v2-b6a19c74f6351ac5fe2ea3be300fd52f_r.jpg\"><figcaption>2003-150周年纪念</figcaption></figure><p data-pid=\"37Kquxj9\">2003年份有着特殊地位，因为它标志着罗思柴尔德家族入主木桐堡150周年，并历经五代，传承至今。</p>\n<p data-pid=\"73tHrKMa\">菲莉嫔女男爵因此决定，破例将2003年份酒标全部献给其先祖纳塔涅·德·罗思柴尔德男爵 (1812 – 1870)。他来自罗思柴尔德家族英国分支，在1853年5月11日买下了木桐堡。</p>\n<p data-pid=\"zktCyIE3\">在酒标上，纳塔涅男爵的肖像采用当年的印版方式加以表现，购庄契约的部分文字被制作成酒标背景。这一契约一直珍藏在木桐堡的档案中，它见证了罗思柴尔德家族与波尔多名庄间这段跨越历史长河的爱情。</p>\n<h2><b>2004威尔士亲王查尔斯王子</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-a4f4e2feb460caa21de9d4051eeb3440_b.jpg\" data-size=\"normal\" data-rawwidth=\"2319\" data-rawheight=\"3321\" class=\"origin_image zh-lightbox-thumb\" width=\"2319\" data-original=\"https://pic1.zhimg.com/v2-a4f4e2feb460caa21de9d4051eeb3440_r.jpg\"><figcaption>2004威尔士亲王查尔斯王子</figcaption></figure><p data-pid=\"rm8pMvJN\">2004年是一个值得纪念的特殊年份，这一年是英法两国之间于1904年订立的友好协议的百年纪念。正是因为爱德华七世对这份协议的不懈努力，让两个国家在1914-1918年战争期间结成了坚固的同盟，并且让两个强劲的对手转变了角色，成为了并肩作战的朋友。</p>\n<p data-pid=\"BLKslvf8\">许多活动都在2004年展开，以纪念这个英法关系中的重要一步，而两国元首的正式访问则将此次庆祝推向了高潮。借此之际，菲莉嫔•德•罗思柴尔德女男爵向爱德华七世的直系后裔、充满才华的画家——威尔士亲王查尔斯王子殿下发出了邀请。王子同意用他的一幅水彩画来作为罗思柴尔德木桐堡2004年份葡萄酒的酒标，该幅作品正是他在感受了我们祖国的风景后创作的，另外，他还在画作上亲笔手写了一句话：“为了纪念协议的百年诞辰——查尔斯，2004”。</p>\n<p data-pid=\"j-BerXqX\">湛蓝的天空映衬出了绿叶，画家笔下扎根深广、长势挺拔的松树成为了葡萄树的代表，也是阳光和土壤共同孕育的硕果。</p>\n<h2><b>2005吉塞普•佩诺内（GIUSEPPE PENONE）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-68a5a65062cd3c7ab1fd0d88b5504bf6_b.jpg\" data-size=\"normal\" data-rawwidth=\"2328\" data-rawheight=\"3303\" class=\"origin_image zh-lightbox-thumb\" width=\"2328\" data-original=\"https://pic3.zhimg.com/v2-68a5a65062cd3c7ab1fd0d88b5504bf6_r.jpg\"><figcaption>2005吉塞普•佩诺内（GIUSEPPE PENONE）</figcaption></figure><p data-pid=\"JgqT7wwM\">意大利伟大雕塑家吉塞普·佩诺内，1947年生于加雷西奥（皮埃蒙特）。他是我们时代最具创意的艺术家之一。他早年就读于都灵美术学院，从一开始就被公认为“贫穷艺术”的代表人物。他从农民父亲那里继承了对植物世界（树木、叶子、荆棘、土壤和根茎）的特别关注，关注其形态、材质和色彩。</p>\n<p data-pid=\"ryh4WT-0\">面对自然，佩诺内只愿做一个简单的“显示者”：他采用筑模、打磨、烙印等技术手段，摒弃通常的艺术表现规则，使作品能最大限度地贴近表现对象。</p>\n<p data-pid=\"vYOzT_U7\">当然，艺术家还必须将自己的意愿加诸自然，因为自然之物通常都是稀松而脆弱的，既是艺术家的搭档，也是其敌人。因此，在他现在的雕塑中，除了人体因素的回归，他还越来越多地使用青铜、大理石、石块、及其他能让作品长久保存的材质。</p>\n<p data-pid=\"DuvgCkwN\">佩诺内的作品不断创新，在世界各大博物馆广受欢迎。2004年，巴黎蓬皮杜文化中心为其举办了回顾展。</p>\n<p data-pid=\"XeVEh1vH\">在他为罗思柴尔德木桐堡绘制的2005年份酒标中，他选择了表现酒农的“绿手”、葡萄叶的活泼伸展、以及饮酒人张开的手指……即将攥住盛满木桐酒的酒杯！</p>\n<h2><b>2006吕西安•弗洛伊德（LUCIAN FREUD）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-1f529c0002ee7aad3bb4a719a6f93b5f_b.jpg\" data-size=\"normal\" data-rawwidth=\"2331\" data-rawheight=\"3276\" class=\"origin_image zh-lightbox-thumb\" width=\"2331\" data-original=\"https://pic4.zhimg.com/v2-1f529c0002ee7aad3bb4a719a6f93b5f_r.jpg\"><figcaption>2006吕西安•弗洛伊德（LUCIAN FREUD）</figcaption></figure><p data-pid=\"TG3NopsC\">吕西安•弗洛伊德（1922-2011）是英国著名油画家及肖像画家。他生于柏林，是精神分析学说创始人弗洛伊德的孙子。1933年，为逃避纳粹统治，父亲带他来到伦敦。1939年，他加入英国国籍。他在中学时期就已崭露才华，先在中央工艺美术学校学习绘画，后进入伦敦圣公会艺术学院继续学习。当时，他被超现实主义所吸引。首次获奖来得很快：1951年，他荣获英国艺术节组委会大奖。1987至1988年，其作品在华盛顿、巴黎、伦敦和柏林巡回展出，这使他跻身当代表现派现实主义大师行列。1995年，圣保罗密格基金会为他及其画家朋友培根举办的画展，充分展示了其煽动性的能量及其对人体的独特视角：在他笔下，人体都被打上了时代的烙印，承受着世界的暴力。2001年，他为伊丽莎白女王绘制了一幅令人震惊的肖像，在画中，他摒弃了名人肖像画所惯常的表现法则。2008年，他的一幅作品被拍出天价，成为在世艺术家作品的最高价。</p>\n<p data-pid=\"9ZqZn4sZ\">吕西安·弗洛伊德首先是一位胴体画家，其画作泛着珠光，有着大理石般的纹理，质感强壮而纯净。在他笔下，无论是裸体还是面孔，都充满表现力，既栩栩如生，又有着近乎僵尸般的呆滞。</p>\n<p data-pid=\"LQuyo25g\">在罗思柴尔德木桐堡2006年份酒标中，吕西安·弗洛伊德远离曾给他带来巨大荣耀的焦虑痛苦风格，而选取了一幅带有异域风情的欢快作品：葡萄树变成了盛开的棕榈树，而一脸馋相的斑马则代表着木桐堡的酒迷们。</p>\n<p data-pid=\"HF1yBxwx\"><b>注：当年9月28日，在佳士得拍卖行贝弗利山拍卖会上，一组12瓶1945年份木桐酒被拍出290 000美元，而另一组6瓶同年份大瓶装（1500毫升）木桐酒也拍出了345 000美元的天价。</b></p>\n<h2><b>2007伯纳•维内（BERNAR VENET）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-2aaeb54e2679bd71a04505323b19e120_b.jpg\" data-size=\"normal\" data-rawwidth=\"1143\" data-rawheight=\"1684\" class=\"origin_image zh-lightbox-thumb\" width=\"1143\" data-original=\"https://pic1.zhimg.com/v2-2aaeb54e2679bd71a04505323b19e120_r.jpg\"><figcaption>2007伯纳•维内（BERNAR VENET）</figcaption></figure><p data-pid=\"uQtKFY5s\">伯纳·维内是法国雕塑家和图案设计师。他1941生于上普罗旺斯的一个小村庄。17岁时，早熟的艺术才华使他前往尼斯学习绘画。1963年起，他以柏油绘画及纸板雕刻而被公众认知。六十年代，作为观念艺术的代表人物，维内发现了自己未来作品的真正模式：用数学化的曲线图在画布上表现出轴线、曲线和方程式。然而，1971至1975年间，他中断了全部艺术活动，长期休养，致力于思考与教学。</p>\n<p data-pid=\"p5_iENZ9\">1976年，他重新起航。他往来于纽约与普罗旺斯之间，在普罗旺斯庄园里修建了非比寻常的个人博物馆。维内找到了一种新材料，来演绎其作品的各种可能性，这就是“粗钢条”，他将之加工成直线、曲线、斜线、折断或“不定之形”：这些随机的盘卷使他闻名世界。其作品被众多博物馆广为收藏，并置身于美德日法的高端场所，在巴黎，他的一幅作品被用来装饰拉德芳斯商业区。2009年，他在布鲁塞尔举办了展览《混乱无序》，还参加了威尼斯双年展，这些都标志着他的艺术生涯翻开了新篇章。</p>\n<p data-pid=\"kEEOwlgT\">受酒桶弧度的启发，他为木桐堡绘制的2007年份酒标，表现了一组圆弧，象征着扎根大地的酒杯，如葡萄枝蔓般向上敞开着，承接着上天赐予的美酒。</p>\n<h2><b>2008徐累</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-514575a9fbf801d195d86a6c5b731ea7_b.jpg\" data-size=\"normal\" data-rawwidth=\"2313\" data-rawheight=\"3317\" class=\"origin_image zh-lightbox-thumb\" width=\"2313\" data-original=\"https://pic4.zhimg.com/v2-514575a9fbf801d195d86a6c5b731ea7_r.jpg\"><figcaption>2008徐累</figcaption></figure><p data-pid=\"4m8ZUj7H\">中国画家徐累，1963年生于江苏南通。他毕业于南京艺术学院中国画专业，即使在八十年代参与前卫艺术期间，他也一直忠实秉承中国画的绘画技巧，。徐累的诗意现实主义风格，精细雅致兼具力量，完美地融合了宇宙空间与内心感受、形象与符号，反映出创作者的双重艺术追求，即：继承中国宋明时期传统风格及工笔画的细腻手法，并将其融入超现实主义或意念艺术等现代艺术潮流。</p>\n<p data-pid=\"mXIYFOHu\">徐累先生是世界知名画家，在中国、欧洲和美国都举办过画展。他现居北京，任教于中国艺术研究院，并在中国首都最重要的当代艺术博物馆之一“今日美术馆”担任艺术总监。</p>\n<p data-pid=\"A26lu3xl\">徐累先生为罗思柴尔德木桐堡创作的2008年份酒标，沿用了作为酒庄标志的“公羊”主题。徐累笔下的公羊，站立在通灵剔透的假山石顶端，象征着一款伟大的酒，在“葡萄星球”的两个半球之间，连接着双方的人民与文化。</p>\n<h2><b>2009安尼施•卡普尔（ANISH KAPOOR）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-2824074bc5bb1a1d569df31d21d4ce8b_b.jpg\" data-size=\"normal\" data-rawwidth=\"2270\" data-rawheight=\"3397\" class=\"origin_image zh-lightbox-thumb\" width=\"2270\" data-original=\"https://pic4.zhimg.com/v2-2824074bc5bb1a1d569df31d21d4ce8b_r.jpg\"><figcaption>2009安尼施•卡普尔（ANISH KAPOOR）</figcaption></figure><p data-pid=\"so9guPfS\">安尼施·卡普尔是印度裔英国雕塑家、画家及造型艺术家。他1954年生于孟买，1972年定居英国，并就读于霍恩比艺术学校及切尔西艺术学院。八十年代初，其第一批雕塑作品面世，以其简练的造型及浓郁的色彩，立即被公众所认知。卡普尔一下子就找到了自己的艺术构思：让观众进入一种“诗意的存在”，使之对世界和自我都产生全新的视角。此后，他的一系列作品问世：巨大的凹凸镜表现外在现实，在大块石材上挖出的神秘洞隙，聚苯乙烯的巨大雕塑表现出我们的梦境，有时可进入其中并发现奇异的微光……如此多的尝试，内在而深刻，随机而偶然，令人难忘，创作者本人却对此不置一语，只愿做个简单的表现者。</p>\n<p data-pid=\"QkUk_qWV\">作为当代艺术最著名的代表人物，卡普尔屡获殊荣，诸如1991年获得的透纳奖。其作品出现在世界各大美术馆及高端公众场所，诸如纽约洛克菲勒中心。</p>\n<p data-pid=\"qlHHvY0B\">2011年，其作品“怪物利维坦”在巴黎大皇宫展出，吸引了成千上万的观众。他还受托为即将召开的伦敦奥运会制作象征雕塑。 </p>\n<p data-pid=\"VtLj3txn\">他为罗思柴尔德木桐堡2009年份酒标绘制的这幅水粉画，既庄严朴素，又绚丽如火，表现出大自然植物旺盛的生命力，是物质与光强烈碰撞的结晶。</p>\n<h2><b>2010杰夫·昆斯（JEFF KOONS）</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-533c03d047b509c0c7dcf17e4b5cc2fa_b.jpg\" data-size=\"normal\" data-rawwidth=\"2315\" data-rawheight=\"3419\" class=\"origin_image zh-lightbox-thumb\" width=\"2315\" data-original=\"https://pic3.zhimg.com/v2-533c03d047b509c0c7dcf17e4b5cc2fa_r.jpg\"><figcaption>2010杰夫·昆斯（JEFF KOONS）</figcaption></figure><p data-pid=\"o2R9IFek\">菲莉嫔女男爵将2010年份的酒标绘制委托给了美国雕塑艺术家杰夫·昆斯。他1955年生于约克（宾夕法尼亚），是当代艺术的标志性人物。</p>\n<p data-pid=\"j9VzErv-\">昆斯属于波普艺术及Kitsch艺术流派，他善于在人们熟悉的物品上施以颜色，用变化多端的技术手段加以变形和再创作。他曾一度是全球在世艺术家中作品价格最高的人，2008年，其部分作品曾在凡尔赛宫展出，引爆激情。</p>\n<p data-pid=\"VYn4aCMj\">在这里，昆斯对古典名作重新演绎：庞培风格的古壁画“维纳斯的诞生”，被昆斯用银色线条幻化为“船上的维纳斯”，这艘船，如同盛放美酒的高脚杯，在明媚的阳光下，将美酒载向远方……这正是罗思柴尔德木桐堡2010年份酒标。</p>\n<h2>\n<b>2011</b>盖•德•胡蒙（Guy de Rougemont）</h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-9e839b54b82dffcf43d11cf983d3dfca_b.jpg\" data-size=\"normal\" data-rawwidth=\"2336\" data-rawheight=\"3407\" class=\"origin_image zh-lightbox-thumb\" width=\"2336\" data-original=\"https://pic3.zhimg.com/v2-9e839b54b82dffcf43d11cf983d3dfca_r.jpg\"><figcaption>2011盖•德•胡蒙（Guy de Rougemont）</figcaption></figure><p data-pid=\"Y64gr5iy\">菲莉嫔•德•罗思柴尔德女男爵将2011年份酒标的创作任务交至法国著名画家和雕塑家盖•德•胡蒙（Guy de Rougemont）手中。后者生于1935年，是法兰西艺术院成员。胡蒙钟爱鲜亮温暖的色调，他先是以规则的几何图形为标志，后来转向使用“蛇形线条”，蜿蜒波浪的纹路或加重或和缓了光与影的对比。</p>\n<p data-pid=\"2tvC8_JO\">罗思柴尔德木桐堡2011年份的酒标设计就以这第二种方式为基调：从亮金色到深红色，从葡萄树在骄阳下的明快，到酒窖中的昏暗，胡蒙用色彩向我们揭示了一款绝世佳酿的诞生过程。</p>\n<h2>\n<b>2012</b>米格尔•巴塞洛（<b>MIQUEL BARCELÓ）</b>\n</h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-a8d2a262c87ec366f141a9d4ba03e0d2_b.jpg\" data-size=\"normal\" data-rawwidth=\"2343\" data-rawheight=\"3409\" class=\"origin_image zh-lightbox-thumb\" width=\"2343\" data-original=\"https://pic3.zhimg.com/v2-a8d2a262c87ec366f141a9d4ba03e0d2_r.jpg\"><figcaption>2012米格尔•巴塞洛MIQUEL BARCELÓ</figcaption></figure><p data-pid=\"Wfcf3C2_\">2012年份的酒标由菲莉嫔·德·罗思柴尔德女男爵亲手选定，后者已于2014年8月22日与世长辞。该酒标由加泰罗尼亚画家和雕塑家米格尔•巴塞洛创绘。巴塞洛生于1957年，他创造的世界是现实和梦幻的融合，色彩浓郁，他用的混合技术和材质都为具有代表意义的事物赋予一种引人注目的立体感。</p>\n<p data-pid=\"vXJRsH7s\">他为2012年份木桐堡创作的宏伟画作重现了酒堡自古的象征。两只面对面且左右对称的公羊不禁让人联想起一款名酒的平衡与和谐，这虽然是大自然的馈赠，但仍需人们辛勤作业才能战胜这一挑战，将馈赠展露无遗。</p>\n<p data-pid=\"_D6XdK-I\"><b>注：木桐全新的酿造车间落成，设计师为舞台置景师理查·贝都西和波尔多建筑设计师贝尔纳·马杰尔。</b></p>\n<h2>\n<b>2013</b>李禹焕<b>LEE UFAN</b>\n</h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-3ca9e44becfbf04ef006b3aed6d00736_b.jpg\" data-size=\"normal\" data-rawwidth=\"464\" data-rawheight=\"675\" class=\"origin_image zh-lightbox-thumb\" width=\"464\" data-original=\"https://pic3.zhimg.com/v2-3ca9e44becfbf04ef006b3aed6d00736_r.jpg\"><figcaption>2013李禹焕LEE UFAN</figcaption></figure><p data-pid=\"ZpeQ0j3O\">2013年份酒标的创作任务被委托给了生于1936年的韩国画家、造型艺术家和哲学家李禹焕。他对天然材料和简单形状醉心不已，通过一种富含强度、和谐与约束感的艺术魔力，激发出一种着迷于冥思的效果。在他为木桐创制的作品中，画上的紫色从最初的朦胧混沌，逐渐绽放为坚定丰满，就如一款名酒在酒罐密室中的耐心升华。</p>\n<h2>\n<b>2014大卫·霍克尼</b> <b>(DAVID HOCKNEY)</b>\n</h2>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-2c9da28787367e37183ba2d2c0e2b1c6_b.jpg\" data-size=\"normal\" data-rawwidth=\"464\" data-rawheight=\"671\" class=\"origin_image zh-lightbox-thumb\" width=\"464\" data-original=\"https://pic3.zhimg.com/v2-2c9da28787367e37183ba2d2c0e2b1c6_r.jpg\"><figcaption>2014大卫·霍克尼 (DAVID HOCKNEY)</figcaption></figure><p data-pid=\"Do6uFpCw\">2014年份酒标的创作任务被委托给英国画家大卫·霍克尼。他生于1937年，出身波普艺术，对无论是丙烯颜料还是IPad这些最现代的技术都能信手拈来，同时，他也推崇传统形象派，在肖像画方面的成就尤为突出，用明亮、对比的色彩展示人或物。 </p>\n<p data-pid=\"vSrp0uCG\">大卫·霍克尼是菲莉嫔•德•罗思柴尔德女男爵（于2014年逝世）的私人好友，借此作品，向她表达出心中的敬意。一对璀璨的酒杯，讲述着一段周而复始的故事，从对一款名酒的希冀到名酒的绽放——这就是木桐的故事，她执掌多年的木桐的故事。</p>\n<p data-pid=\"e109nrYy\"><b>注：菲莉嫔于当年辞世，由她的三个孩子<span class=\"nolink\">Camille Sereys de Rothschild</span>,<span class=\"nolink\">Philippe Sereys de Rothschild</span>and<span class=\"nolink\">Julien de Beaumarchais de Rothschild</span>来共同继承木桐酒庄。</b></p>\n<h2>\n<b>2015格哈德·里希特</b> <b>(GERHARD RICHTER)</b>\n</h2>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-1275b16c3a1d36a0a39b3754c7c765cd_b.jpg\" data-size=\"normal\" data-rawwidth=\"464\" data-rawheight=\"681\" class=\"origin_image zh-lightbox-thumb\" width=\"464\" data-original=\"https://pic2.zhimg.com/v2-1275b16c3a1d36a0a39b3754c7c765cd_r.jpg\"><figcaption>2015格哈德·里希特 (GERHARD RICHTER)</figcaption></figure><p data-pid=\"d-CyJUat\">2015年份的酒标略有所变化，成为新一代接班人——卡米尔·赛雷斯·德·罗思柴尔德、菲利普·赛雷斯·德·罗思柴尔德及朱利安·德·博马舍·德·罗思柴尔德，继2014年菲莉嫔·德·罗思柴尔德女男爵逝世后开始执掌酒庄的标志。菲利普·赛雷斯·德·罗思柴尔德代表家族的三位庄主，在酒标上签下了自己的名字。</p>\n<p data-pid=\"qlhyjO7W\">2015年份酒标的创作任务被委托给德国人格哈德·里希特。他生于1932年，是绘画形式与技巧的鬼才发明家。他闻名全球，以体现出绘画和摄影之间、形象艺术和抽象之间的辩证关系为基础进行创作。</p>\n<p data-pid=\"ua9EOrTK\">他为木桐献上的作品是一种被他命名为Flux（流动）过程的成果，偶然与匠心兼具。艺术家将正在运动中的色彩固定于照片上，在完美的瞬间捕捉到一种变化与搭配：这与葡萄酒的调配有着异曲同工之妙，一种和谐的调配同样会赋予美酒以平衡、完满以及鲜活的特性。</p>\n<h2>\n<b>2016威廉·肯特里奇</b> <b>(WILLIAM KENTRIDGE)</b>\n</h2>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-f20db009acec86d1fd4e9b7c2c22e793_b.jpg\" data-size=\"normal\" data-rawwidth=\"464\" data-rawheight=\"675\" class=\"origin_image zh-lightbox-thumb\" width=\"464\" data-original=\"https://pic4.zhimg.com/v2-f20db009acec86d1fd4e9b7c2c22e793_r.jpg\"><figcaption>2016威廉·肯特里奇 (WILLIAM KENTRIDGE)</figcaption></figure><p data-pid=\"uncDQTkq\">木桐堡的庄主，菲利普·赛雷斯·德·罗思柴尔德、卡米尔·赛雷斯•德•罗思柴尔德和朱利安·德·博马舍·德·罗思柴尔德将2016年份酒标的创作任务委托给画家、雕塑家、影像艺术家和导演威廉·肯特里奇。肯特里奇，1955年出生于南非约翰内斯堡，这是木桐堡第一次邀请一位来自非洲大陆的国际知名艺术家为其酒标进行创作。作为各大博物馆的常客，也是各类著名奖项的得主，他提倡一种并不摒弃幽默与诗歌的“政治艺术”。</p>\n<p data-pid=\"cqSoq77E\">在他为木桐堡创作的作品——《酒神的喝彩》中，一排愉悦的剪影取材于提香、马蒂斯等多位大师画作中正在把酒言欢之人。确实，一款名酒首先代表的是一种欢乐，但同时，这款名酒也代表一种文化传承，推崇尊重与节制……就如2016年份的罗思柴尔德木桐堡！</p>\n<h2>\n<b>2017安妮特·梅萨热</b> <b>(ANNETTE MESSAGER)</b>\n</h2>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-7fe5c17e829deac6e72eeb85ad237249_b.jpg\" data-size=\"normal\" data-rawwidth=\"464\" data-rawheight=\"671\" class=\"origin_image zh-lightbox-thumb\" width=\"464\" data-original=\"https://pic2.zhimg.com/v2-7fe5c17e829deac6e72eeb85ad237249_r.jpg\"><figcaption>2017安妮特·梅萨热 (ANNETTE MESSAGER)</figcaption></figure><p data-pid=\"IhZSU_bz\">罗思柴尔德木桐堡的庄主，菲利普·赛雷斯·德·罗思柴尔德、卡米尔·赛雷斯·德·罗思柴尔德 和朱 利安·德·博马舍·德·罗思柴尔德将2017年份酒标的创作任务委托给了法国艺术家安妮特·梅萨热。她生于1943年，因其在图形和造型艺术领域展露出的天赋而享誉全球。她善于捕捉日常生活中的事物、形状和文字，并加以运用，从而营造出一个诗意的世界，时而欢愉，时而焦躁，此外，她的作品之中还渗透着对女权主义的推崇。</p>\n<p data-pid=\"bpLmVp17\">在安妮特·梅萨热为木桐堡创作的作品“哈利路亚”之中，她以现实和象征的双重手法，将经常在圣经中同框出现的又受其所赞誉的两种元素——牛奶与葡萄酒，结合在一起。</p>\n<h2>\n<b>2018徐冰</b> <b>(XU BING)</b>\n</h2>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-742aa8964a0f4d9c283771871c0b14dc_b.jpg\" data-size=\"normal\" data-rawwidth=\"464\" data-rawheight=\"685\" class=\"origin_image zh-lightbox-thumb\" width=\"464\" data-original=\"https://pic1.zhimg.com/v2-742aa8964a0f4d9c283771871c0b14dc_r.jpg\"><figcaption>2018徐冰 (XU BING)</figcaption></figure><p data-pid=\"sd4Aon5C\">罗思柴尔德木桐堡的庄主，菲利普·赛雷斯·德·罗思柴尔德、卡米尔·赛雷斯·德·罗思柴尔德和朱利安·德·博马舍·德·罗思柴尔德将2018年份酒标的创作任务委托给了中国艺术家、作家——徐冰（出生于1955年）。</p>\n<p data-pid=\"nP0jEalQ\">艺术家在为2018年份创作的酒标作品中，将外在表现之玄妙幻象运用得炉火纯青，借“英文方块字书法”加以阐述，看起来酷似传统汉字，但其实是由拉丁文字母构成。徐冰以此展现出他在语言方面的创造力，以他发明的一种独特文字为载体，将外文单词纳入中国传统表意文字的规则之中。</p>\n<p data-pid=\"G94bmWnI\">2018年份酒标上的两个方块字读作“Mouton Rothschild”，这一酒标也因此成为多样文化之间和谐包容的一个代表。</p>\n<h2>\n<b>2019奥拉维尔·埃利亚松</b> <b>(OLAFUR ELIASSON)</b>\n</h2>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-4998befc331332406ca8ed8654f5fe51_b.jpg\" data-size=\"normal\" data-rawwidth=\"464\" data-rawheight=\"709\" class=\"origin_image zh-lightbox-thumb\" width=\"464\" data-original=\"https://pic2.zhimg.com/v2-4998befc331332406ca8ed8654f5fe51_r.jpg\"><figcaption>2019奥拉维尔·埃利亚松 (OLAFUR ELIASSON)</figcaption></figure><p data-pid=\"NAWgKAvG\">木桐的太阳虹膜</p>\n<p data-pid=\"dFiA4VBd\">奥拉维尔·埃利亚松为罗思柴尔德木桐堡创作的酒标，即为该地的一副抽象肖像画。</p>\n<p data-pid=\"gReaNdza\">酒标被分为上下两个部分：上半部分的金色横条代表着白日，而下半部分的深蓝色横条则代表着黑夜。瓶中之酒可透过中央的圆孔探视外界。围绕着这一与外界相连的窗口，一系列的椭圆线条形成一个圆环，描绘出太阳相对于地球的路径，这亦是太阳相对于波亚克，即罗思柴尔德木桐堡所在之地的路径。圆环中，处于分割线上侧的弧线以金色为底，位于最下侧的圆弧代表着全年白昼最短的一天，最上侧的则代表全年白昼最长的一天。在酒标的下半部分，以深色为底的白色线条，即太阳的轨迹落至地平线以下，脱离了葡萄园的视线。</p>\n<p data-pid=\"Yg9HnGyM\">在太阳轨迹线图的上半部分，狭长的8字图形以规则的间隔纵切圆弧。这些图形被称为“日行迹”，代表着在一整年内于同一地点观察到的太阳的路径。日行迹曾被用于天文学，还与日晷一同使用，让所报时间更为精准。地球围绕太阳公转，以及地球沿着自转轴自转，即为太阳位置发生变化的原因。因此，日行迹的形状显示出了地球的运动轨迹及时间的流逝。多年以来，太阳轨迹线图、天文现象和导航仪器为这位艺术家的许多作品激发了灵感。2009年，奥拉维尔·埃利亚松曾每日在同一时刻拍摄天空，用了一整年的时间捕捉到了一条日行迹。</p>\n<p data-pid=\"0cK1PKUn\">据奥拉维尔·埃利亚松，“木桐的太阳虹膜”就是在罗思柴尔德木桐堡的一整年中，所有日升和日落的图像。无论是白日还是夜晚，每一个参与到葡萄树生长周期的时刻均在图中有所体现。从某种程度上讲，这一图像就是太阳在葡萄园中的签到记录，它向我们阐述着年份的自然条件，以及葡萄酒与其出生地之间的亲密联系。品鉴一款葡萄酒，就是与一地的环境、土壤及其气候、四季和光线建立联系。而透过酒标中央的瞳孔映射出的葡萄酒，则饱含金色的太阳、土地与天空；既刻有当地的局部特征，又承载着天空的印记。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/weipingwang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">择喜一瓶</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/561336682?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"React 为什么重新渲染","date":"2022-09-06 08:29:00","description":"\n<p>更新（重新渲染）是 React 的重要特性 —— 当用户与应用交互的时候，React 需要重新渲染、更新 UI，以响应用户的输入。但是，React 为什么会重新渲染呢？如果不知道 React 为什么会重新渲染，我们如何才能避免额外的重新渲染呢？</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/186432/20/28325/37613/631725bbEf2ff226e/66b99021df66578b.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/react-re-renders-101/\">https://blog.skk.moe/post/react-re-renders-101/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/react-re-renders-101/"},{"title":"除了鲍威尔讲话，全球央行年会还揭露了什么？","date":"2022-09-06 06:00:50","description":"\n<p data-pid=\"fkROKsFY\">【一句话介绍】 本期原创聊一些宏观方法论的东西，重在解读杰克逊霍尔央行年会上鲍威尔发言以外的亮点内容。其中，IMF和BIS都倾向于认为，暂时性停止的概率较小，即三低（低通胀+低增长+低利率）的好日子恐怕一去不复返了。</p>\n<p data-pid=\"oH8A-66T\">鲍威尔在杰克逊霍尔央行年会（Jackson Hole）上短短八分钟的发言“惊悚”了市场，股市继续调整（下图）。</p>\n<p data-pid=\"YzpA3f43\">图：标普500走势</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-68842c4e5a081fdf96e176b682077dae_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"738\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb\" width=\"738\" data-original=\"https://pic3.zhimg.com/v2-68842c4e5a081fdf96e176b682077dae_r.jpg\"></figure><p data-pid=\"3OAh5inC\">市场其他分析已对其发言进行了各种花式分析和解读，总的来说，鲍威尔的演讲和我们之前公开的文章相差不大（前文：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/Ca3tdZBh1Tvi53_g9CUdWA\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">市场反弹之后，还有哪些难关挡在前？</a>），即联储将坚持加息抑制通胀、加息的幅度看数据说话，这否定了市场会前关于2023年会很快降息的预期（见下图，政策利率预期上升、美10年利率上升）。</p>\n<p data-pid=\"afC4oKxF\">图：对2023年5月3日的联储加息预期概率</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-58a632d4157520a0dc0344a38b5bea44_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"863\" data-rawheight=\"490\" class=\"origin_image zh-lightbox-thumb\" width=\"863\" data-original=\"https://pic1.zhimg.com/v2-58a632d4157520a0dc0344a38b5bea44_r.jpg\"></figure><p data-pid=\"xkAP0PPm\">图：美国10年期利率</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-6bedf8882b947cc53d48615c75066f9c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"738\" data-rawheight=\"566\" class=\"origin_image zh-lightbox-thumb\" width=\"738\" data-original=\"https://pic1.zhimg.com/v2-6bedf8882b947cc53d48615c75066f9c_r.jpg\"></figure><p data-pid=\"6KRBgBTE\">图：联储官员今天的讲话，也对上周会议的宗旨进一步确认</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-03da8544ab3fb7ced8a6fcbfe0862ff0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1117\" data-rawheight=\"615\" class=\"origin_image zh-lightbox-thumb\" width=\"1117\" data-original=\"https://pic1.zhimg.com/v2-03da8544ab3fb7ced8a6fcbfe0862ff0_r.jpg\"></figure><p data-pid=\"Se_h-fT9\">欧元在八月也成功跌破欧美汇率平价（下图），继续印证我们之前文章的提法。</p>\n<p data-pid=\"Pau4jSRA\">图：欧元兑美元汇率</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-69d35bab8a4b94ac69467379e2432911_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"738\" data-rawheight=\"566\" class=\"origin_image zh-lightbox-thumb\" width=\"738\" data-original=\"https://pic2.zhimg.com/v2-69d35bab8a4b94ac69467379e2432911_r.jpg\"></figure><p data-pid=\"AXRfxFrT\">为避免自我重复，本期我们就换换口味，聊一些宏观方法论的东西。重在解读杰克逊霍尔央行年会上（Jackson Hole）鲍威尔发言以外的亮点内容：</p>\n<p data-pid=\"YuqPBsuV\"><i>一，IMF和BIS：结构性因素和总供给变迁将使通胀持久化；</i></p>\n<p data-pid=\"6ZMmNSPY\"><i>二，讨论美国财政-货币-通胀三者之间相互钳制的工作论文。</i></p>\n<p data-pid=\"ELRoEfwg\">每年的杰克森霍尔会议作为一个立足当下，并着重着眼未来的会议，对<b>议题和文献的选择</b>绝非来者不拒，不可能什么阿猫阿狗的第三方声音都放进来；而是<b>有目的的选择，借信得过的他人之口，来表达或者试探一些自己尚未定论的想法。</b></p>\n<p data-pid=\"PK3ibC85\">每年的会议，都会放出一些对中长期市场走势和交易策略构建极有意义的论述和参考文献，比如2020年那臭名昭著的平均通胀目标制的节奏，就是在杰克森霍尔会议（Jackson Hole）带起来的，并深刻影响了今年年初之前的美国货币政策和市场交易主题。</p>\n<p data-pid=\"CPnx1tnV\">而今年2022的会议主题，则是，“重新评估经济和政策的制约因素”（英文为：Reassessing Constraints on the Economy and Policy），很显然，在战争、疫情和国际地缘政治和力量对比深刻变化的时期（我国称为：百年未有之大变革），欧美发达国家央行已经认识到了发达资本主义世界的经济发展和宏观政策、特别是货币政策，已经是“<b>老革命遇上新问题</b>”。</p>\n<p data-pid=\"6vu6DE1Y\">图：欧美过去30年那三低（低通胀+低增长+低利率）的好日子恐怕一去不复返了</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-efc925842caf46bc17b96c1ad8ad016e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"839\" data-rawheight=\"480\" class=\"origin_image zh-lightbox-thumb\" width=\"839\" data-original=\"https://pic3.zhimg.com/v2-efc925842caf46bc17b96c1ad8ad016e_r.jpg\"></figure><p data-pid=\"yuwhHQCy\">这个会议主题，隐含着过去二三十年通胀可控、经济增长可期和货币政策好搞的简单模式或已结束；等待欧美发达国家的，将是通胀通缩不停交替、经济增长难言乐观和宏观政策走钢丝的高难度<b>杂技</b>。</p>\n<p data-pid=\"Pk0fDZc9\">图：通缩通胀、经济增长、宏观政策间的平衡，犹如在三个鸡蛋上跳舞，踩碎哪个都不行。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-b62ca25a224742b21162777f82782ac7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1658\" data-rawheight=\"999\" class=\"origin_image zh-lightbox-thumb\" width=\"1658\" data-original=\"https://pic4.zhimg.com/v2-b62ca25a224742b21162777f82782ac7_r.jpg\"></figure><p data-pid=\"YYxixax2\">会上大体讨论了：就业最大化、潜在产出水平、财政制约和货币制约。</p>\n<p data-pid=\"fba8RHBP\">就核心问题而言，会议重点关注covid之前的宏观趋势（低通胀+低增长+低利率）是暂时性停止、还是永久性消失这个问题。</p>\n<p data-pid=\"98dXvlbx\">对这个核心问题，作为最重要的两家和“钱”打交道的国际多边机构，IMF和BIS（国际清算银行，是全球最早的多边金融机构和总清算银行）都倾向于认为，暂时性停止的概率较小，即<b>三低（低通胀+低增长+低利率）的好日子恐怕一去不复返了。</b></p>\n<p data-pid=\"QTDYAb79\">也许这期内容会稍显枯燥，但金融市场最肥美的利润，本质上也多来自宏观大势的周期力量。就像前几期的内容那样，若能认真读进去，应该会很有收获。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h2><b>结构性因素支持高通胀</b></h2>\n<p data-pid=\"Bwl_rO4L\">IMF在杰克逊霍尔央行年会（Jackson Hole）的发言标题是：《战争与疫情如何塑造未来的货币政策》，BIS的题目是：《顺流逆流：总供给和宏观稳定的故事》。相比之下，IMF的发言更具框架性，而BIS更加关注总供给的动态变迁。</p>\n<p data-pid=\"B4Vh1IdX\">IMF表示，<b>任何现有的主流模型都已无法解释之前和当下时段的通胀飙升</b>，而且当前的欧美主要发达国家已经出现了居民部门的<b>短期通胀预期的“脱锚”现象</b>。随着战争的持续进行、极端气候的不断演绎、劳动力供给失衡的长期化，全球宏观大势已出现范式偏移。</p>\n<p data-pid=\"Bsib2j4T\">图：主流的传统模型已无法解释当前的通胀动因</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-03327b7ae41fb2f14858e5c17903e407_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1143\" data-rawheight=\"594\" class=\"origin_image zh-lightbox-thumb\" width=\"1143\" data-original=\"https://pic4.zhimg.com/v2-03327b7ae41fb2f14858e5c17903e407_r.jpg\"></figure><p data-pid=\"wpnjxtQe\">图：美国和英国一年期家庭部门的通胀预期剧烈变动、并有脱锚风险</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-a0fdcb49d08f746e179f2fac95af886a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"655\" data-rawheight=\"528\" class=\"origin_image zh-lightbox-thumb\" width=\"655\" data-original=\"https://pic3.zhimg.com/v2-a0fdcb49d08f746e179f2fac95af886a_r.jpg\"></figure><p data-pid=\"XiSSuPGV\">而BIS更是直言不讳的指出，即使Covid和战争造成的供应中断恢复，供给端对通胀的影响仍然很大。这是因为全球经济正处于历史性变化的风口浪尖（即“百年未有之大变局”），诸多抑<b>制通胀的总供给顺风，似乎正在变成逆风。</b></p>\n<p data-pid=\"tUtDVEsC\">如果是这样，近期通胀的回升可能要比<b>杰克逊霍尔央行年会</b>（Jackson Hole）<b>前市场以为的要更加持久。</b></p>\n<p data-pid=\"11UmZIux\"><b>顺风转逆风的三个趋势：地缘政治、逆全球化和人口变迁。</b></p>\n<p data-pid=\"wPfhm1r4\">甚至在俄乌冲突之前，地缘环境就已越来越紧张，国际间的合作原则也是越发不善。这股逆流，一定程度反映了先前全球化的不可持续：<b>国家内部和国家之间的利益分配失衡</b>，以及本地治理与全球机制间的冲突。</p>\n<p data-pid=\"-JLasQ6R\">愈发的不平等或不平衡，引发了民粹主义。而全球价值链的由此重置，或将伴随<b>异常高昂的成本代价。</b></p>\n<p data-pid=\"nJJq7qJ_\">BIS还指出，不光是这些顺风正在转成逆风，新的宏观逆风也在出现。</p>\n<p data-pid=\"Q1g18osU\">特别是，在<b>气候变化</b>的威胁下（人类命运共同体），有形的手正在迫使资源进行前所未有的<b>政策性重新分配</b>。这或许会加剧战争引发的粮食危机和能源瓶颈。而越来越多的极端天气和相互关联的全球粮食生态，增加了供应中断的风险和更高、更波动的价格，更不用说持续上升的人力成本了。</p>\n<p data-pid=\"RhQ4miIA\">此外，先前为摆脱化石燃料的预期（如，碳达峰）也阻碍了对传统能源的投资，使得在清洁能源足够满足需求之前，全球的能源供给存在一段<b>窘迫的真空期</b>，这大大推高了通货膨胀。</p>\n<p data-pid=\"Nf6DI7fq\">图：连新能源的旗手马斯克(Elon Musk)也开始对传统化石能源和人口问题发声。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-66b544795760be3a97aedbd8168d723a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"987\" data-rawheight=\"698\" class=\"origin_image zh-lightbox-thumb\" width=\"987\" data-original=\"https://pic3.zhimg.com/v2-66b544795760be3a97aedbd8168d723a_r.jpg\"></figure><p data-pid=\"SI8lDllB\">BIS和IMF给出的“药方”包括：</p>\n<p data-pid=\"TbVOI5MV\"><b>货币方面</b>，吸取70~80年代的经验教训，中央银行们<b>必须坚决行动以避免通胀预期继续脱锚</b>（就像鲍威尔自己在会上说的那样、而应邀发言的国际权威机构的“第三方声音”在某种意义上也是在为他的“逆市”发言来背书）；</p>\n<p data-pid=\"qKAzUfp7\">对于各国的已很有限的<b>财政资源</b>，则应投入到长期的结构性改革中去（下图显示，欧美的结构性经济改革一直处于长期停滞状态，目前的宏观乱局也是长期改革停滞带来的总代价）。</p>\n<p data-pid=\"beCCCWjO\">图：欧美发达国家的结构性改革长期停滞</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-15f51b81f2cce85aa0cda0b5f53a271a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"813\" data-rawheight=\"453\" class=\"origin_image zh-lightbox-thumb\" width=\"813\" data-original=\"https://pic3.zhimg.com/v2-15f51b81f2cce85aa0cda0b5f53a271a_r.jpg\"></figure><p data-pid=\"W9EAHRh6\">但是三思认为，BIS和IMF给出的财政建议，只是<b>想得很美</b>，而在欧美发达国家的实际中，几乎无法落地，<b>更何况，</b>这些建议与这些机构自己的通胀分析就是<b>天然自相矛盾的</b>。</p>\n<p data-pid=\"NzDNi1eL\">特别是在财政方面：IMF提到<b>人口结构变迁将会增加财政的医疗保障</b>和养老开支，让本已窘迫的有限财政更加窘迫（先不说老龄化压力了，这些国家的负债本已就不低）；</p>\n<p data-pid=\"5CFkxmH7\">而BIS提出的用有限财政去<b>给长期滞后的结构性改革补课</b>，则属于<b>“大病用小药”</b>。举个例子，美国一些政客提出要<b>重构全球产业链</b>，靠个每年<b>几十亿几百亿的财政法案根本于事无补</b>，只够造势吆喝；</p>\n<p data-pid=\"k8rmgq7N\">再者说，既<b>然两大国际机构同时承认了欧美民粹主义的抬头，那么民粹主义又怎能推动理性财政呢？</b>千古难题吧。</p>\n<p data-pid=\"94glYZXc\">自然而然，我们就想到一个问题：欧美发达国家当前这种<b>财政和货币政策同时受到高通胀制约且目标还不相容</b>的困局，究竟如何是好？或者从根本上说，这个问题是否有现实解答？</p>\n<p data-pid=\"v0ikCvTc\">对此，我们就给大家介绍今年杰克森霍尔会议上的一篇工作论文：《财政的通胀约束》。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h2><b>恶化的财政信誉将推高通胀</b></h2>\n<p data-pid=\"QOXABAsA\"><b>在享受了20年的低通胀之后，欧美发达国家的通胀会消退还是持续？</b></p>\n<p data-pid=\"pv60V4_A\">杰克逊霍尔央行年会（Jackson Hole）上的这篇工作论文认为，这<b>取决于财政当局在稳住大规模财政失衡方面的可信度。尽管货币政策对抗通胀有一定的作用，但已经不是决定性的。</b></p>\n<p data-pid=\"32U5vnVq\">当财政当局被认为无法扭转现有的<b>财政失衡时，市场会押注当局将允许通胀上升</b>以确保国债的可持续性（类似常申凯的金圆券和宋代蔡京的币制改革）。</p>\n<p data-pid=\"_igY5eJU\">若严重的财政失衡再叠加财政信誉减弱，将导致通胀趋势偏离央行的长期通胀目标。</p>\n<p data-pid=\"1Np_GZKO\">只有当公共债务能通过可信的财政计划成功稳住时，货币当局才能掌控通胀（就像80年代的美伶宗将通胀给压下去，可不是靠美联储沃克尔的一己之力）。</p>\n<p data-pid=\"WdDJRJsK\"><b>宽松的财政政策与旨在稳定低通胀的货币框架之间存在不相容性。</b></p>\n<p data-pid=\"GugSZB-H\">当<b>通胀由财政主导时</b>（财政刺激诱发通胀，同时通胀也使债务稀释），<b>若再叠加上货币紧缩</b>，很可能<b>就将通胀变为滞胀</b>。这类财政滞胀，源于巨额债务下的财政信誉逐渐恶化，以及市场认识到货币当局立的牌坊不足以抵消财政当局的预期行为。</p>\n<p data-pid=\"JtJSwn-6\">图（基于脉冲响应模拟，理解吃力的读者可跳过）：若降低政策组合中的财政主导权重，滞胀将得到控制。要控制财政引发的通胀问题，需让市场相信财政政策是与预期通胀水平相适应的。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-5f0d1592a1c79d61a2af61cd4a3b2e5a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1016\" data-rawheight=\"381\" class=\"origin_image zh-lightbox-thumb\" width=\"1016\" data-original=\"https://pic3.zhimg.com/v2-5f0d1592a1c79d61a2af61cd4a3b2e5a_r.jpg\"></figure><p data-pid=\"2noWJAby\">通过构建“财政主导的政策”和“货币主导的政策”模型和数据模拟，这篇工作论文发现：成本推动的通胀冲击对经济和通胀只有暂时的影响。Covid大流行之后，美国回归财政政策主导的可能性增加，<b>虽然财政主导+货币配合有助于复苏，但也导致通胀急剧上升。单靠货币紧缩，并不能遏制通胀上升。</b></p>\n<p data-pid=\"HCUdHn_S\">这类持续高通胀的风险，本质上源于天量的公共债务和失信的财政纪律。美联储在80年代初战胜大通胀的手段放在今天可能无效。战胜大流行后的大通胀，需要改造旨在为无限制政府债务融资的财政框架，以及民选当局已近刚性的公共支出增加。</p>\n<p data-pid=\"xHagERUE\">结合杰克逊霍尔央行年会（Jackson Hole）上的这篇工作论文，我们<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/st3XpOCDf21xcbyvfTnfVQ\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">前文提到美国中期选举因素</a>就很重要了，因为美国通胀能否降落，根本上取决于两党的财政政策是否可持续、以及公众对财政-货币政策的平衡预期。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h2><b>未来关注什么？</b></h2>\n<p data-pid=\"_WwLxatA\">上述提及的这些杰克逊霍尔央行年会（Jackson Hole）上的亮点，虽然距当下的市场可能没那么贴近，但可以通过这些信息<b>一窥世界上最关键的金融机构都在想什么</b>、什么是他们当下最关心的国际宏观问题。</p>\n<p data-pid=\"cZL0bofc\">我们一直相信，短期的交易反应能力和策略正确与否，有很大一块是取决于对中长期宏观因素的深入理解和把握，长和短、多和空，在哲学上来讲可能就是对立统一的。</p>\n<p data-pid=\"9grWou4r\">比如，1998年后的股票价格/债券收益率正相关性已经受到今年大通胀的考验，那么我们现在能否就下结论说债券不再是抵御股市疲软的对冲工具了呢？明年或者下个季度能否还做股债配对交易，怎么做？</p>\n<p data-pid=\"XON_kVI5\">图：1998年后的股票价格/债券收益率正相关性在今年受到了大通胀的考验</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-764493954c124b991bc228ef6635563a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1090\" data-rawheight=\"462\" class=\"origin_image zh-lightbox-thumb\" width=\"1090\" data-original=\"https://pic3.zhimg.com/v2-764493954c124b991bc228ef6635563a_r.jpg\"></figure><p data-pid=\"cctiSKk3\">只有当深入研究了诸如本文为大家总结的这些本源解释、或是央行家们阐述中长期宏观变动的工作论文，才可能给上述问题一个稳健的答案。比如说，参考本文第一部分IMF和BIS文章中关于长期结构性因素的论述，也可以参考本文第二部分讨论美国财政-通胀-货币三者关系的工作论文。</p>\n<p data-pid=\"sbgjOdKy\">中长期的结构性变迁，往往意味着基于历史时间序列的惯性预测可能不太有意义；而政策间的相互抵消以及宏观变量的互为制约，又意味着对短期走势随便拍脑袋是危险的；但综合本次杰克逊霍尔央行年会的各项议程，我们还是倾向于认为：<b>美债利率可能没那么容易就掉下去。</b></p>\n<p data-pid=\"Vwt5VEBZ\">落实到交易实践，今年市场上迄今最为灵验的美林美银资金流报告就指出，秋季交易还是得行就市，一切以美10债利率走势为转移：如果债券收益率在接下来的 4~8 周构成“双顶”（即美债10年期利率未能超过 3.48%），秋季的交易主题将变成收益率峰值和利差峰值（下图），股市企稳。反之亦然。</p>\n<p data-pid=\"eFSsfyZW\">图：欧美投资级债券的CDS走势</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-fa607b3bd90e3535df8c1f401092f2c4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"552\" data-rawheight=\"415\" class=\"origin_image zh-lightbox-thumb\" width=\"552\" data-original=\"https://pic1.zhimg.com/v2-fa607b3bd90e3535df8c1f401092f2c4_r.jpg\"></figure><p data-pid=\"SP2we0Tu\">而如果利率继续攀升，那些缺乏真实业绩支撑的热门科技股、或者以科技成长股为主的纳斯达克指数可适当平仓，毕竟，它们从某种意义上说就是个<b>利率的简单衍生品</b>； </p>\n<p data-pid=\"a0JQiTSc\">图：美国热门科技股（以Meta为例），与30年美债利率高度负相关</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-621449ddb815902b0e20cd373818e54c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"548\" data-rawheight=\"410\" class=\"origin_image zh-lightbox-thumb\" width=\"548\" data-original=\"https://pic1.zhimg.com/v2-621449ddb815902b0e20cd373818e54c_r.jpg\"></figure><p data-pid=\"T_RF5I-R\">但如果金融条件收紧的太快，传导至实体经济一并恶化，那么升高的失业率或将让散户当前“逢低买入”策略结束。</p>\n<p data-pid=\"d7CD6CLz\">图：美国另一些大型科技股（例如 AAPL），则与就业情况高度正相关</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-42e8eb8493c90e7b235931e5c46f8fff_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"439\" data-rawheight=\"329\" class=\"origin_image zh-lightbox-thumb\" width=\"439\" data-original=\"https://pic4.zhimg.com/v2-42e8eb8493c90e7b235931e5c46f8fff_r.jpg\"></figure><p data-pid=\"LM_g0_5T\">最近正值特殊时期，一些话题不太方便直接聊。秋天结束之前，我们主要还是多给大家分享、解读一些有助于长期交易的专业文献，希望能带来更多启发。</p>\n<p data-pid=\"zFwqSjm-\">这些文章虽然看起来只讨论了欧美市场，但涉及到的分析，或许也能应用到其他地方（比如说日本？韩国？…？）。</p>\n<p data-pid=\"aYazcgqP\">最后，给大家分享一个段子：</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-6bc35ae5ec1d6c84b758216a4706cfa9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"766\" data-rawheight=\"420\" class=\"origin_image zh-lightbox-thumb\" width=\"766\" data-original=\"https://pic2.zhimg.com/v2-6bc35ae5ec1d6c84b758216a4706cfa9_r.jpg\"></figure><p data-pid=\"h58H0mBo\">对于宏观研究者，上面这个段子或许能让大家会心一笑。</p>\n<p data-pid=\"qpTwhLeo\">其中还是蛮有道理的，就像调侃美联储的那句：“什么叫全球”，的确也反应了某些以美国为中心的金融体系研究，不一定能照搬到其他体系。</p>\n<p data-pid=\"HM5DMaWv\">但无论如何，对未来的宏观市场来说，BIS俱乐部里的央行圈子或已不再是故事主角，未来更应关心的，是掌舵人的脸色。</p>\n<p data-pid=\"ip0bTGXm\"><b>-DDDD-</b></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/lonodn?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">金丝雀码头工</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/561595557?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价推理游戏类型「海龟汤」？","date":"2022-09-06 05:39:02","description":"\n<p data-pid=\"8X67FA_y\">我写了一个有关海龟汤的别的回答，发现还有很多值得聊的东西可以展开，就在这个问题下面写一些散点。</p>\n<a href=\"https://www.zhihu.com/question/481172877/answer/2630198672\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-c469d33916559dc62e8554717f64de1a_qhd.jpg?source=b1748391\" data-image-width=\"1291\" data-image-height=\"735\" class=\"internal\">如何评价手机游戏《你已经猜到结局了吗》？</a><hr>\n<p><img src=\"https://pic3.zhimg.com/v2-82dfb8cd4f4a223146d62d13aaf741f0_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"783\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-82dfb8cd4f4a223146d62d13aaf741f0\" data-watermark-src=\"v2-b511c837c1ddc27c4c7faea48735b20a\" data-private-watermark-src=\"v2-cd5ed5e6ec1782ed36f05b804c88c9a6\"></p>\n<h2>1.海龟汤的故事逻辑性的成立动机不是最重要的，在猜测的过程中不断靠近故事真相才是最重要的。</h2>\n<p data-pid=\"EeFiZDxa\">有很多故事，它的汤底甚至可以形成新的汤面。比如有一个叫做黑猫的海龟汤，汤面是“当我被警察抓住，走出门看到一只黑猫的时候，我才意识到我杀错了人”。而汤底则是“黑猫的报恩和我与邻居的矛盾产生的信息差”。</p>\n<p data-pid=\"eM24FSep\">可是在这个故事里，我不断的喂这只黑猫，我喂他的动机是什么没有说，我和邻居的过节是什么也不重要。</p>\n<p data-pid=\"ZjMwJCtS\">那么它就可以变成一个全新的故事，让新的出题人去补充细节。</p>\n<p data-pid=\"8KXDRTh0\">同样的，我们仔细看海龟汤的汤面，很多时候汤面的信息的提供是相当残缺的，不像大量的其他的推理作品，他会尽可能的把线索摆在故事的最开始，然后让读者通过前面的细节推导，最后能够得到与这个作者相同的智力对决的乐趣。</p>\n<p data-pid=\"kJiYKb6G\">那些残缺的信息，他们从根本上来说是需要向出题人去不断询问才能获得的。也就是说，如果将海龟汤游戏当做是推理游戏的话，那必然是不合格的推理游戏——如果我们认为推理游戏只包括本格推理的话。</p>\n<p data-pid=\"VCJj-9nP\">但是显然推理作品它经过了很多变化，社会派推理也算一种，不一定真的要去构筑一个细节丰富满满的作品，或者说一个简短的叙事结构，而是想从这个故事的讲述背后获得一些类似于精神分析方面的认知。</p>\n<p data-pid=\"IqzMMNHm\">如果说本格推理营造的是密室、完美犯罪、不在场证据，那么海龟汤所要推理的部分就不是这些，他们更多想问的是这件事为什么会发生？</p>\n<p data-pid=\"ujeldzRA\">当然有的时候也会是以一种陌生化的表达来讲述一个看似日常的故事。</p>\n<p data-pid=\"Uif1QK51\">也就是说海龟汤它其实更接近于诗歌表达，以一种含混的又能够解释的朦胧感去完成对于这件事的表述。</p>\n<p data-pid=\"eQmkwOR8\">同样的一个汤面，不一定只对应一个汤底。出题人可以设计出完全不同的故事，但他们呈现的是同一个结果。当然，反之亦然。</p>\n<p data-pid=\"BQjOVmQ6\">《你已经猜到结局了吗？》游戏里就曾经用过好几个相似但不同的微妙的童话故事，或者是耳熟能详的传说来进行重新解释。</p>\n<hr>\n<p><img src=\"https://pic2.zhimg.com/v2-db0e33976322f2c7dbae52355b3fe8ad_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"858\" data-rawheight=\"460\" data-watermark=\"original\" data-original-src=\"v2-db0e33976322f2c7dbae52355b3fe8ad\" data-watermark-src=\"v2-2463b99d07b39436aa70f7b34c9fa20c\" data-private-watermark-src=\"v2-33107f9f06174bf7836abba8dd868648\"></p>\n<h2>2.在出题人回答问题的时候，有两种非常态的回答方式，分别是“是也不是”和“与此无关”。</h2>\n<p data-pid=\"SvJF-8II\">其实任何一个来自于海龟汤的靠近真相的询问，都可以用是也不是的方式去回答。</p>\n<p data-pid=\"AsrtEXXH\">从什么时候开始会出现是也不是的回答呢？我觉得很有可能是来自欧美地区起源的黑故事集。目前我们所知道的海龟汤有两个起源，一个起源于日本，另外一个起源于欧美。在过去的传闻中，有很多说海龟汤是FBI用来验证是不是变态杀人犯、心理异常人的一些案件，再加上黑故事集的源头是欧美国家，我们就会发现这种对于是也不是的回答，其实就是一种欧美新怪谈文学的思路。</p>\n<p data-pid=\"w0G-mhNA\">那就是对于神秘力量会更加倾向于屈从他，而不是解释他：比如说收容措施文学、规则类怪谈以及克苏鲁。在这些文学作品中，他外在的氛围环境是天然形成的，人们只需要去感受他，感受着其中的怪谈之处，而不需要去反复追问，这个怪谈是怎么产生的，这就叫做屈从他。</p>\n<p data-pid=\"09bijwv-\">是也不是，在一定程度上加重了游戏玩家的理解难度，将整个故事又推向一个扑朔迷离的氛围之中，那就形成了一股神秘的迷雾。</p>\n<p data-pid=\"n0Cg1I2C\">比如那个经典的以海龟汤为情节的故事。</p>\n<p data-pid=\"oKfiei1g\">“他曾经喝过海龟汤吗？”出题人当然可以给出“是也不是”的回答，虽然客观上他没有喝过海龟汤，但是在主观上他认为他喝过。当他给出这个回答的时候，在喝海龟汤这件事情上，就陷入了迷雾之中。</p>\n<p data-pid=\"-pI8rRbO\">而我们谈到“与此无关”则是它的反面。在讨论是也不是的时候，一旦出现这样的回答，那么这个点就和这个故事有着相当密切的关系。而与此无关，则意味着这个故事的部分细节是毫不重要的，那我们就要回到汤底的设置上了。</p>\n<p data-pid=\"R5lBcBJw\">如果说汤底和汤面的交替过程里出现了与此无关的信息，那么是否可以说明这两段文字之间的落差有空隙？如果一个设计较为严谨的海龟汤玩家受到汤面的强烈影响，会很难问出与此无关的讯息，或者说不重要的信息——当然这就又要求汤底变成了一个拥有人物小传的故事，它变成了一个只是像海明威所说的那种冰山一角的方式的一种呈现。</p>\n<p data-pid=\"LXvqwisq\">在这个意义上，海龟汤就非常符合冰山理论的写作要求。</p>\n<p data-pid=\"BykXfOh5\">当然也正如一个报名的提问者，可以用一种万能金句式的提问方式来解决问题。比如老番茄在玩猜猜猜游戏的时候，就提出了一个非常精妙的问题“他是一个自然人吗？”这个问题只要提出来，就可以在很大程度上切割掉很多内容“多人共用账号，官方机构账号，单人账号”，同时带有数量和自然人的表述，很难给出“是又不是”的回答。</p>\n<p data-pid=\"GN48HFZG\">那么在海龟汤里有没有这样能够直切重点的问题呢？答案是“是”。</p>\n<p data-pid=\"5Cg-KA1k\">请问汤底有汤面没有提到过的隐藏人物吗？</p>\n<p data-pid=\"-ZuAL3oL\">你记不能回答与此无关，又不能回答是也不是，所构筑的叙述性诡计与不可靠叙述，在这个问题上就非常直接的被揭开了。</p>\n<p data-pid=\"J-ldrKAR\">回到那个海龟汤的故事，当你提出这样的问题之后，出题人只能够老老实实的回答“是”。然后你就可以继续追问：隐藏人物是他的三代血亲吗？如果不是，那是通行意义上的好朋友吗？</p>\n<hr>\n<p><img src=\"https://pic1.zhimg.com/v2-5a7b53e4e8caf90e33e33b606394f7e5_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"284\" data-rawheight=\"177\" data-watermark=\"original\" data-original-src=\"v2-5a7b53e4e8caf90e33e33b606394f7e5\" data-watermark-src=\"v2-daaf164e57c634545fdc8957fa81f802\" data-private-watermark-src=\"v2-5dd7bd22bcb66d245d517979a2cbf94c\"></p>\n<h2>3.海龟汤的最初版本带有某种强烈的异质性。</h2>\n<p data-pid=\"1lKobtBM\">海龟汤的最初传说有好几种，比如来自于日本的二ch论坛，强调的是脑洞大开与奇妙物语；来自FBI检察反社会人格的心理判断；那些充满着神秘谜团的黑暗故事。</p>\n<p data-pid=\"mtrG5q4Z\">不管是哪一种，他都强调从内容到形式全方位的陌生化与异质性。</p>\n<p data-pid=\"KknBK8Nh\">首先，故事的内容本身就是带有一种神智异常的状态，里面有很多让正常人逻辑难以理解的匪夷所思的故事。比如那个妹妹参加葬礼回去之后就把姐姐杀了的故事，谜底是她又想看到这个帅哥，我们会觉得一个正常人是都不出这种事的。</p>\n<p data-pid=\"BvVCmjyB\">可是谁来规定正常与异常呢？这种异常的人的精神状态其实和上个世纪六七十年代的存在主义文学和荒诞主义文学中的主人公们都是高度相似的。帕斯卡就曾经说过，人类必然会疯癫到这种地步，不疯癫也只是另一种形式的疯癫。同样的托斯托耶夫斯基自己也在日记中写到人们不能用禁闭自己的邻人来确认自己的神智健全。</p>\n<p data-pid=\"DRbChYBe\">福柯有一个研究的主题叫做疯癫与文明，在他的视角下，我们看到这些海龟汤里的神智失常的人，反而具备了一种可能，那就是再被重新阐释的过程。</p>\n<p data-pid=\"ZkAD0fuS\">这个话题即便放到现在来看也具有深刻的时代性。我们所生活的社会，个体的情绪折磨或精神内耗，它的直接来源其实是精神性的疾病，可是精神镜的疾病真的只是个人原因吗？如果有可能是一种机制性的或社会性的状况呢？</p>\n<p data-pid=\"QHdQq8LN\">精神病学家政治科学学家乔尔克维尔就提出“资本主义中的神经衰弱最令人震惊的一项特征在于它是无处不在的”。我马克思主义谈到资本主义会给人带来异化，很明显这就是一种机制，影响到个人精神状态异常的绵延不绝的后遗症。</p>\n<p data-pid=\"ZyG79oVo\">在很多海龟汤故事中，那些犯下匪夷所思案件的个人，他们都有一种对自我欲望的重构和渴求。他看起来好像只是这个人的神智有问题，但是如果我们再进一步的去追问他，就会发现在这背后的一种称作病态世界（詹姆斯希尔曼）的综合症是存在的。</p>\n<p data-pid=\"ovjDbSUR\">然后，故事的问答形式也带有强烈的陌生感。在我的另一个回答中谈过，从汤面上来看他一定要构筑出一个不可靠叙事，但是当游戏玩家追问出题人的时候，出题人必须给出可靠的回答。</p>\n<p data-pid=\"O5YkA7fA\">这就好比海猫鸣泣之时中的红字和蓝字，魔女采用红字不断否决人类提出的可能性，它在本质上就是一步一步将自己推向死亡的过程。在这个意义上说猜数字、猜人名（神灯猜人）都只是对单个的字节进行判断和猜测，那是一种逻辑游戏，而不是一种叙事上的陌生感。</p>\n<p data-pid=\"KEKjHniG\">所以，尽管在形式上海龟汤与猜数字、猜人名是相似的，但是这种相似带来的给人的体验性却是大相径庭的。一个人心中所念的数字或人名，它所具备的场域感是薄弱的，但是出题人所构筑的故事，在一定程度上相当于某种心理测试房树人的叙事性投射。</p>\n<p data-pid=\"UyOQV1nb\">第三，我们可以从玩家的猜测过程中判断他的思维方式，这种判断，他的有效性可能还高于无领导小组讨论。因为我们会自诩自己是正常人，那么正常人的思维将要如何去贴近一个匪夷所思的海龟汤故事呢？</p>\n<p data-pid=\"7M4R3Tcu\">你是相信自己的理性判断，还是相信你的直觉？于是那些被理性的规训成为有秩序的文明化的表达，他潜藏在下面的集体无意识又被重新挖出来了。当然，如果一个具体的叙事的海龟汤，或许还能够与这种思维方式，也就是准确的剖析过程的思路相抗衡。那么抽象的海龟汤，带有更加模糊的诗化的海龟汤就应运而生了。</p>\n<p data-pid=\"QYz6cdzp\">作为一个诗人（我的诗歌在知网上还查得到），我会对海龟汤这种语言表达方式产生出莫名的吸引感，因为抽象的海龟汤，它就是一首诗。当游戏的玩家不断的追问这个抽象概念背后的意义的时候，就是在将这首诗进行不断的注释和解读。</p>\n<hr>\n<p data-pid=\"J-uMVS1N\">不过我们很多人只是会短暂的沉浸在海龟汤有趣的故事中，当海龟汤的故事结束之后，谁又会想要去将其当作一面镜子，挖掘出自己内心深处那些都不为人所知的思绪呢？</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/dandoliya?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">乌合之子</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/487824820/answer/2633736057?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">53 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/464383411?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">海龟汤：凶手是怎么布置这个密室的?</a><br><a href=\"http://www.zhihu.com/question/61650245?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">暗房海龟汤？</a><br>\n","link":"http://www.zhihu.com/question/487824820/answer/2633736057?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"密室逃脱是如何保持重复可玩性的?","date":"2022-09-05 13:51:16","description":"\n<p data-pid=\"FVB-PvYM\">简单来讲，早期大型密室的复购靠的是超高的难度来强行限制玩家单次通关的可能性，你必须来个两到三次才能体验到完整的内容，因为实在太难。</p>\n<p data-pid=\"sMvFvAG3\">现在的大型密室就友好很多了，复购可以靠多结局的设计，玩家对不同角色、不同阵营的选择，最适合复刷的是多npc的沉浸式演绎剧场，有认识的老板跟我说有复刷过一百来次就为了跟不同的npc聊天的（有钱）玩家。</p>\n<p data-pid=\"3GWbyp5M\">之前做过比较详细的科普视频，有兴趣的朋友戳开视频看一下详细回答思路。</p>\n<a href=\"https://www.zhihu.com/zvideo/1550231440972787712\">密室复购率是怎么回事</a>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/pu-wu-66?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">蒲熠星</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/23898381/answer/2661192984?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">9 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/319264919?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">密室逃脱真的好玩吗？</a><br><a href=\"http://www.zhihu.com/question/427295175?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">可不可以讲一下玩密室逃脱的经历啊？</a><br>\n","link":"http://www.zhihu.com/question/23898381/answer/2661192984?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"超长篇哆啦A梦漫画哪一部水平最高？","date":"2022-09-05 10:40:50","description":"\n<p data-pid=\"SolqULT_\">如果把《哆啦A梦大长篇》比作闪耀的群星，那《大雄与铁人兵团》一定是其中最璀璨的一颗。这部仿佛浑然天成的作品，凝聚了藤子·F·不二雄精巧的构思、磅礴的展开以及发人深省的思想。从宏观来说，这是一部展现宇宙战争的史诗，讲述了来自外星的机器人王国企图征服地球最终失败的经历；而从微观来看，这是一段关于成长与救赎的故事，描绘了机器人莉露露在与五人组的接触中对人类从蔑视到尊重的转变历程。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5b01983183d56e6504aba703b95afb49_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"717\" data-rawheight=\"657\" data-watermark=\"original\" data-original-src=\"v2-5b01983183d56e6504aba703b95afb49\" data-watermark-src=\"v2-bf645da598b2d88aee2f79e91e955981\" data-private-watermark-src=\"v2-f249255f4aec8615a36e1f3770d535b7\"></p>\n<p data-pid=\"0PBAMUAv\">我一直认为，解读莉露露这个角色，就是解读《铁人兵团》这部作品。而在解读莉露露时，我必须提出一条被许多人忽视，却贯穿整部作品的重要线索——<b>莉露露手指的光线</b>。这束光线一共出现了四次，也标志着莉露露人物形象的四个阶段。</p>\n<hr>\n<p data-pid=\"jf4lYI6i\">光线第一次出现，是在莉露露出场的时候。在北极萧瑟的寒风之中，从茫茫的冰原远处缓缓走来一位衣着单薄的少女。她面无表情地举着一样装置，即使是面对凶残的北极熊也只是面不改色地灵巧躲过，从手指中发出光线将它击晕。<b>冷酷、强大而神秘——这是莉露露给读者留下的第一印象。</b>这个时候的莉露露，完全以麦加托比亚间谍的身份行动。她的眼中只有祖国交给她的任务，一直只是为了建设军事基地而勤恳工作。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-715dd9e458f74f705a2e86393f2afbb0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"733\" data-rawheight=\"655\" data-watermark=\"original\" data-original-src=\"v2-715dd9e458f74f705a2e86393f2afbb0\" data-watermark-src=\"v2-caf51be4e8add7f176636d1177d4b62b\" data-private-watermark-src=\"v2-95e84afd986ae8e00da552e7975372fa\" data-tags=\"porn\"></p>\n<hr>\n<p data-pid=\"c2M4vpah\">来到大雄所在的小镇后，莉露露的衣着已与普通女孩无异。她开始在人类生活的地方活动，也开始接触人类与之对话。有意思的是，在面对胖虎和小夫的时候，她面无表情，一言不发就扭头离开；而在与大雄交谈的时候，她却时常面露微笑，最后还说了声“谢谢”。更令人惊讶的是，当大雄和哆啦A梦发现她的真实身份时，她并没有慌张、也没有恼怒，而是表示自己非常“<b>喜欢</b>”大雄，正想要他来协助自己。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-03fbbe008d0f13afac0895911831bc32_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"731\" data-rawheight=\"572\" data-watermark=\"original\" data-original-src=\"v2-03fbbe008d0f13afac0895911831bc32\" data-watermark-src=\"v2-c5baf756c3e974c667481014784c791b\" data-private-watermark-src=\"v2-eea9e1b02a7e809f0bd8cd7916f92465\"></p>\n<p data-pid=\"HWXToW9S\">莉露露为什么对大雄如此特别？简单对比胖虎小夫和大雄对待莉露露的态度，答案显而易见。小夫炫耀自己的机器人未果后恼羞成怒，气急败坏；而大雄从一开始就对她亲切有加，笑容以待。然而这就足以让她“喜欢”大雄吗？其实不然。且让我们记住一件事：莉露露并不是人类。虽然外型被设计得和人类几乎一模一样，但<b>她并不能完全理解人类的想法，尤其是关于人类的情感联结</b>。这一点从她对“外国人”、“朋友”、“妈妈”等词语表示不解可以得以印证。既然如此，那她又怎会明白“喜欢”这个词深层的含义呢？</p>\n<p><img src=\"https://picx.zhimg.com/v2-599022a43e979f619fca3c9020034105_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"399\" data-rawheight=\"271\" data-watermark=\"original\" data-original-src=\"v2-599022a43e979f619fca3c9020034105\" data-watermark-src=\"v2-8b57b9e9cf954b6884e9ed51045429b7\" data-private-watermark-src=\"v2-7143c8b22267dd3f5b4116033f0050d5\"></p>\n<p data-pid=\"RctRyPfD\">或许，<b>莉露露只是因为大雄对她亲切而误把他当成了自己的伙伴罢了</b>。她不会理解，大雄身为地球人决不会容许奴役计划的实行；她也不会理解，大雄对她温柔只是因为他对任何人都很温柔。在她的眼中，敌人就应该像胖虎和小夫一样，没有对她温柔的理由，而大雄安慰了她、帮助了她，便一定不是她的敌人，或许还可以在入侵地球的宏伟蓝图中助她一臂之力。</p>\n<p data-pid=\"6AeDM660\">在这错误的认知中，莉露露急切地想要抓住大雄，用手指发射出第二道光线。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-054d5231da4e291ec29596e5bf43759d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"732\" data-rawheight=\"706\" data-watermark=\"original\" data-original-src=\"v2-054d5231da4e291ec29596e5bf43759d\" data-watermark-src=\"v2-787c7b3b1784389550f8583705eb2fe2\" data-private-watermark-src=\"v2-f3d6845157dc70a42baa5f8656383d11\"></p>\n<hr>\n<p data-pid=\"_NxpCSaw\">这道光线并没有瞄准大雄的身体，而是打落了他和哆啦A梦的竹蜻蜓。可为时已晚，两人还是得以逃离镜中世界，而莉露露企图用蛮力将连接处撕开大口却引发次元震，入口被完全封闭，她自己也身受重伤被埋在了废墟之中。后来，静香误打误撞地发现了她，一个崭新阶段的序幕就此拉开。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-d5f005ae6d693d84612d23152c0ff22b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"733\" data-rawheight=\"275\" data-watermark=\"original\" data-original-src=\"v2-d5f005ae6d693d84612d23152c0ff22b\" data-watermark-src=\"v2-ef0e55d69b14468b4f87d765a9cb7046\" data-private-watermark-src=\"v2-364b4e33d8dd70ef0e8ce7a7e42769b0\"></p>\n<p data-pid=\"2Xa9daeU\">此前莉露露与人类的交流仅限于任务所需，内容浅尝辄止。然而在和静香的相处中，两人<b>思想与价值观的碰撞</b>在略显紧张的气氛中缓缓展现在读者的眼前。</p>\n<p data-pid=\"HO546Ke6\">初遇之时，莉露露便做出了惊人而恐怖的举动：被静香发现机器人的身份后，她用手掐住了静香的脖子，恐怕真的动了杀心。毕竟如果奴役人类是理所应当，那残杀他们又有何不可呢？然而静香并没有因此而害怕她、讨厌她。她不想用恶意去揣测这位身负“重伤”的“女孩”，宁愿相信是故障才让她伤害人类，甚至将她接到家中治疗。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-e961eb3f08d66ff485a97eae75d6ca31_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"730\" data-rawheight=\"588\" data-watermark=\"original\" data-original-src=\"v2-e961eb3f08d66ff485a97eae75d6ca31\" data-watermark-src=\"v2-961e6ae451c004d6620b39d97a3f4d23\" data-private-watermark-src=\"v2-fa4c68262d961094f572a1e45a1108a7\" data-tags=\"porn\"></p>\n<p data-pid=\"UMzlM5s7\">对于莉露露而言，这种行为简直不可理喻。在她利益至上的视角里，帮助自己这个敌人对静香没有任何好处。她没有想到的是，静香并没有站在敌人的立场上去思考问题，而是仅仅把她当作需要救助的伤员，当作与人类平等的存在。<b>她也并不需要任何利益作为理由，所做的一切完全出自最本真的善意。</b></p>\n<p data-pid=\"hIO2hkp3\">困惑的莉露露向静香表明了麦加托比亚侵略地球的目的：一向实行奴隶制的麦加托比亚，在“机器人平等”的新思想指引下终于解放了饱受压迫的奴隶机器人。可是，解放奴隶所空出的劳动力该如何填补？机器人们想起了那个代代相传的神话：麦加托比亚历史的开端，正是神明抛弃了自私自利、相互残杀的人类，创造了这个由机器人主导的社会。<b>既然人类是被神所抛弃的种族，那将他们奴役作为劳动力造福机器人又有何不可呢？</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-e2ec847ac1822c808646436dbac4532c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"730\" data-rawheight=\"268\" data-watermark=\"original\" data-original-src=\"v2-e2ec847ac1822c808646436dbac4532c\" data-watermark-src=\"v2-20b1b0825f8a68a94338c5c6325b9fb5\" data-private-watermark-src=\"v2-0f3845be66219413a6c3abbc572f68f9\"></p>\n<p data-pid=\"jUC_7H-v\">静香静静地听着她讲述机器人社会的故事，“社会阶级”、“奴隶制”、“废奴运动”……这些熟悉的词语在她的耳边回响，把她的思绪带到了并不遥远的过去。于是，她淡淡地说了一句：</p>\n<blockquote data-pid=\"3Z7pRX1b\"> 简直像在重演人类的历史一样。</blockquote>\n<p data-pid=\"f1H_14nd\">她说得没错。早在12世纪英格兰就曾宣布过奴隶制非法，本土的农奴逐渐消失。<b>然而在大英帝国的急速扩张中，奴隶贸易却成为了英国人的一项“财富密码”。</b>漂洋过海的黑奴为英国各个殖民地提供了大量廉价劳动力，其种植的甘蔗、烟草、棉花等经济作物让帝国赚的盆满钵满。截止1807年，约有350万名黑奴由英国的船只跨越大西洋运往世界各地接受惨无人道的虐待，而英国王室对此不但不明令禁止，反而与贩奴者同流合污，为奴隶贸易的开展提供了大量便利。即使到了18世纪，启蒙运动中人人平等的思想已然广泛传播的时代，仍有休谟这样的另类说出了“黑人们自然比白人低下”这样傲慢的言语。这又与“宇宙是为机器人存在的”这样的想法何其类似呢？</p>\n<p><img src=\"https://pic1.zhimg.com/v2-7479074dcf279dffa54f96dab071f408_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"482\" data-watermark=\"original\" data-original-src=\"v2-7479074dcf279dffa54f96dab071f408\" data-watermark-src=\"v2-cdedbfb9c74c87b98617537003dfc221\" data-private-watermark-src=\"v2-ebe9e424cdc6e39dd6d8356d1d4b51c0\"></p>\n<p data-pid=\"2WOxXer6\">况且，在奴隶贸易停止之后，剥削就真的消失了吗？还是说，这种剥削又被偷偷转移到其他群体了呢？想必大家都知道答案。英国工业革命开始后，<b>工人阶级开始走上历史舞台，随之而来的还有靠压榨其剩余价值为生的资产阶级</b>。那时有的棉纺纱工厂的孩子们，要在6岁起就从早上5点到晚上9点学做工，换来的只是刚刚能够果腹的食物、闷热恶劣的工作环境以及肮脏简陋的贫民窟住所。这样的待遇，相比奴隶而言又有何区别呢？</p>\n<p data-pid=\"YTqq8oK5\">但就是这样一句简单的陈述，却直接跨越了莉露露心中的红线。支撑着她一路走来的，正是为麦加托比亚创造“天国般的社会”的理想。而这一理想的基石，正是“机器人是宇宙的主宰，而人类是被抛弃的垃圾”这样的信念。也难怪莉露露会把那番话语当作对机器人的侮辱：<b>承认静香的话语，就是在否认自己存在的意义。</b></p>\n<p data-pid=\"wmLRKwUY\">被激怒的莉露露抬起尚未痊愈的手臂，带着对人类的轻蔑与憎恶发射出第三道光线。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-80b65320e2e5fe94927e4ead25b9fb55_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"734\" data-rawheight=\"626\" data-watermark=\"original\" data-original-src=\"v2-80b65320e2e5fe94927e4ead25b9fb55\" data-watermark-src=\"v2-fc943ff925da7304e43536e77b02e3de\" data-private-watermark-src=\"v2-51590bd4785771bd936836fd4321bfa3\" data-tags=\"porn\"></p>\n<hr>\n<p data-pid=\"rzfhfW9s\">静香应声倒地，所幸莉露露还没有完全恢复，看似猛烈的光线只对她造成一点擦伤，莉露露自己却再次陷入昏迷。当莉露露再次醒来的时候，静香仍然带着笑脸照顾着她。她所不知道的是，这个坚强的女孩在昨晚也曾一时间产生了放弃的念头，但或许是宁静的夜空安抚了她受伤的心，静香最终还是回到了莉露露的身边。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-0468a390c72f88d7a3b34742feae487b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"333\" data-rawheight=\"269\" data-watermark=\"original\" data-original-src=\"v2-0468a390c72f88d7a3b34742feae487b\" data-watermark-src=\"v2-640783acfafb9917ed4c0492cc51efbd\" data-private-watermark-src=\"v2-47e3b7a415cff2846519046dbe3924e5\"></p>\n<p data-pid=\"6QQXITt-\">莉露露愈发困惑了，这个女孩明明一直在被自己伤害，明明知道铁人兵团的恐怖之处，为什么还要对自己如此温柔？难道她也是站在麦加托比亚这一边的吗？不！昨晚她一直痛斥着把人类当作奴隶的荒谬，显然并不接受麦加托比亚的统治。<b>如此明显的矛盾让她开始质疑自己对人类的看法</b>，并再次向静香抛出了那个问题：“为什么要救助敌人？”</p>\n<p data-pid=\"1gT-e2tN\">这一次静香没有回避这个问题，微笑着告诉她：</p>\n<blockquote data-pid=\"g0zEw8a9\">\n<b>人类就是会做出不合情理的事。</b><br>\n</blockquote>\n<p><img src=\"https://pic3.zhimg.com/v2-a4f65bb774986aa06a6b04cb0a9e0fe3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"272\" data-watermark=\"original\" data-original-src=\"v2-a4f65bb774986aa06a6b04cb0a9e0fe3\" data-watermark-src=\"v2-98af268f217881a2b00000abd7d671f9\" data-private-watermark-src=\"v2-9b2ca3d6af6daf4570886e289423dabe\"></p>\n<p data-pid=\"aQ4bWXM7\">莉露露是否理解了这句话，我们不得而知。不过至少她明白了，<b>人类有自己的思想，自己的信念，自己的情感</b>，支撑着他们费劲心思做一些毫无利益可言的怪事。他们不是没有智慧的野兽，不是她想象中那样低浅的生物。难道是自己错了吗？是自己一直以来坚信的、在麦加托比亚被当作理所当然的思想错了吗？是希望机器人建立天国的神明错了吗？……</p>\n<p data-pid=\"GVoE-l9f\">两种想法在她的脑内激烈的碰撞，她还不愿相信，整个铁人兵团就是个错误；她还需要验证，人类是否真的能在巨大的利益面前选择虚无缥缈的所谓的“善良”。于是，她悄悄吐出静香喂给她的安眠药，溜出了房间。她要用自己的双眼见证，大军压境之时，人类究竟会作出怎样的抉择。</p>\n<p><img src=\"https://pica.zhimg.com/v2-a2a034651ac2077467c57bc407db1238_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"267\" data-watermark=\"original\" data-original-src=\"v2-a2a034651ac2077467c57bc407db1238\" data-watermark-src=\"v2-0fabf09985acf284f1206c533f71d593\" data-private-watermark-src=\"v2-d49eca9834e3d616e2de47ac259c3fc5\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"hgftKVYn\">当大雄找到逃走的莉露露时，她正坐在因遭受炮火而破败不堪的地下通道的台阶上若有所思。为什么是这里，难道铁人兵团犯下的暴行她都看到了吗？若是如此，她目睹着高楼大厦刹那间变为断壁残垣时又作何感想呢？她是否还坚信，这场战争是正义的呢？我们不得而知。但很显然，在被大雄找到之前，她有充足的时间回到铁人兵团执行自己的职责，但她没有这么做，她的内心仍然在挣扎，而这种挣扎也体现在这一格的分镜上——<b>阳光与阴影将画面分割成了明暗两色，大雄站在光明的一侧，而莉露露恰巧坐在两者的交汇处，低头面对着黑暗。</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-416b1c1a224c72e38f4f163905c350d1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"732\" data-rawheight=\"539\" data-watermark=\"original\" data-original-src=\"v2-416b1c1a224c72e38f4f163905c350d1\" data-watermark-src=\"v2-14c0b631e9898c304727149f0bbacb26\" data-private-watermark-src=\"v2-62bf7d1ecebb4cd2a39cca9a4c6bd8cb\"></p>\n<p data-pid=\"uQFM13kH\">看到了大雄的莉露露久违地露出了笑容，她终于能从胡思乱想之中解脱了。她直截了当地告诉大雄自己要向铁人兵团报告他们的计划，看到大雄举起休克枪的那一刻，她明白，机会终于来了。</p>\n<p data-pid=\"LO1KAsF5\">她退回了黑暗。<b>只要大雄一扣动扳机，就说明静香“善良”到怜悯敌人的行为要么只是千万人类中的一个特例，要么就是做个样子，是为了麻痹自己而撒下的弥天大谎。</b>到了危急时刻，他们终究还是会暴露自己的本性，为了自己的利益、为了人类的利益作出最正确、也最冷血的选择。那样的话，自己就可以放下顾虑，继续坚守一直以来的信念，跟随铁人兵团创造更美好的机器人世界。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-0ba2fd0af7cb9c0812ce5ea67f6f14e9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"463\" data-rawheight=\"319\" data-watermark=\"original\" data-original-src=\"v2-0ba2fd0af7cb9c0812ce5ea67f6f14e9\" data-watermark-src=\"v2-a57eb9d3705af7f108e05641ff3c8438\" data-private-watermark-src=\"v2-6dacb6c92a4719e09984898ada317212\"></p>\n<p data-pid=\"e23_cBxP\">然而，眼前的这个男孩却浑身颤抖，无力地举着枪，丝毫没有要开枪的意思。急不可耐的莉露露向他喊道：“开枪吧！只有这样你才能阻止我！”</p>\n<p data-pid=\"pYcRiYRw\">而此时她的内心也在呐喊道：“<b>开枪吧！只有这样我才能从迷惘中解脱！</b>”</p>\n<p data-pid=\"MEITLTmw\">“开枪吧！”</p>\n<p data-pid=\"dcP1UzOJ\">“开枪吧！！！”</p>\n<p data-pid=\"Pa6ew__I\">“你这个窝囊废！”</p>\n<p data-pid=\"_l-mLfIm\">面对迟迟没有扣动扳机的大雄，莉露露终于艰难地作出了决断，带着觉悟发射出最后一道光线。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-a073bcbde1c432d2ca6c6230e77ae26e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"733\" data-rawheight=\"196\" data-watermark=\"original\" data-original-src=\"v2-a073bcbde1c432d2ca6c6230e77ae26e\" data-watermark-src=\"v2-b6038b645b905c0ae4ca00b1c76a5c20\" data-private-watermark-src=\"v2-829af4638966c601a8c90e50b0293322\"></p>\n<p data-pid=\"pNA8a7Dl\"><b>然后，她走向了光明。</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-a676af36796abc0e359148949f84b965_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"731\" data-rawheight=\"358\" data-watermark=\"original\" data-original-src=\"v2-a676af36796abc0e359148949f84b965\" data-watermark-src=\"v2-27792f2b81ad537c5a3b6507be23ebf9\" data-private-watermark-src=\"v2-7f13fe18598d23cf0dbc7fe7f3ab0153\" data-tags=\"politic porn\"></p>\n<hr>\n<p data-pid=\"_iON7dhe\">当铁人兵团司令质问起五人组的动向时，莉露露没有回答，而是以一句振聋发聩的话语回应了他：</p>\n<blockquote data-pid=\"a6NY4Hyp\"> 我们应该创造的，不是属于机器人的天国，而是属于宇宙所有生物的天国。</blockquote>\n<p data-pid=\"xjyZunhQ\">她终于理解了，麦加托比亚所谓的“平等”只是在转嫁矛盾，铁人兵团的计划并不能带来真正的平等，只能让更多人加入剥削者的行列罢了。机器人认为人类是垃圾，只是内心里的那股优越感在作祟，什么神话什么历史，都是在为自己的傲慢找借口。他们从来没有真正接触过人类，从来没有在意过人类内心的想法，<b>甚至从来没有意识到，或者不愿去意识到人类也有自己的内心。</b>而莉露露不一样，她在与大雄与静香两人的交流中逐渐了解了人类。明知没有希望，她也仍然要在司令面前据理力争，为地球的和平贡献一份渺小但不可忽视的力量。</p>\n<p><img src=\"https://pica.zhimg.com/v2-dc2ad13cdc3e47007ddc1ac4f9a2c381_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"731\" data-rawheight=\"412\" data-watermark=\"original\" data-original-src=\"v2-dc2ad13cdc3e47007ddc1ac4f9a2c381\" data-watermark-src=\"v2-4e81e83810d384fec2d792e8bfe98e35\" data-private-watermark-src=\"v2-9f9c032e2b2a28eaf985a961bcb7333f\"></p>\n<p data-pid=\"T8aD3ey2\">经过四道光束后，莉露露逐渐由冷酷的间谍转变为愿意倾听他人声音的朋友，人物形象已经臻于圆满。不过，要想完成对她的刻画还差最后一块拼图：她仍然在迷茫，自己身为麦加托比亚人无法背叛祖国，可她又不愿参与这从一开始就荒谬无比的战争。那么，她该何去何从呢？</p>\n<p data-pid=\"8DipFLbF\">帮助莉露露解答这一疑问的角色，是此前并不起眼的米克罗斯。纵观他在作品中的表现，几乎都是在用滑稽的行为来缓解严肃的战争气氛。然而正是这样一个谐星，却在最后关头起到了不可或缺的作用。当莉露露对自己的信仰产生动摇之时，米克罗斯没有给她纠结的机会，他单纯的大脑意外迅速地得出了一个精准的结论——<b>神，就是应该被质疑的。</b>这个被哆啦A梦赋予生命，一直追随着人类步伐的机器人知道，所谓的神不过是被漫长的时间雕刻而成的精美塑像，其背后只是再普通不过的人格。他不像莉露露那样带着名为“信仰”的包袱在理想与现实的夹缝中寻求生存空间，而是直面理想与现实的差距，大声控诉造成这个不合理世界的“罪魁祸首”。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-fae9ac2ca399d019fa1eb8c726734723_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"994\" data-rawheight=\"367\" data-watermark=\"original\" data-original-src=\"v2-fae9ac2ca399d019fa1eb8c726734723\" data-watermark-src=\"v2-f93492348aa2999cb7abf29b69d50599\" data-private-watermark-src=\"v2-f7d2b7e59d41b43ea4c6685021abf5a0\"></p>\n<p data-pid=\"M1RuaE4U\">米克罗斯的控诉启发了静香，或许也震撼了莉露露。为了改变历史、拯救地球，一行人踏上了三万年前麦加托比亚的土地，那里有一位对人类失去希望的博士正在开发能够创造出天国一般社会的机器人。借博士之口，藤子·F·不二雄精准地指出了铁人兵团形成的根本原因——竞争本能。竞争推动了社会的进步，没有竞争就没有我们现在的生活。然而，<b>竞争中“比他人优秀”的想法一旦变质为“比他人优越”，每个人就只会考虑自己的利益，为此甚至会伤害他人、剥削他人。</b>无论是奴隶主阶级还是资产阶级，大抵都是如此。甚至可以说，所谓的“阶级”，不正是既得利益者为巩固自己的地位而分化出的概念吗？</p>\n<p><img src=\"https://pic4.zhimg.com/v2-1a1c667bd3d774ad26e2d65df3b94d60_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"731\" data-rawheight=\"538\" data-watermark=\"original\" data-original-src=\"v2-1a1c667bd3d774ad26e2d65df3b94d60\" data-watermark-src=\"v2-412ebf94980d8e3ea3c0b64ed44f050e\" data-private-watermark-src=\"v2-a03fe4c19d984ad46a707f8dc0e687e0\"></p>\n<p data-pid=\"EQU4UGjm\">这并不是说我们不需要竞争，但在竞争之外，或许还有一样东西是人类社会发展的必需品——<b>为他人着想的心</b>。正是这颗宝贵的心，让静香一次次被伤害后仍然温柔地照顾莉露露，让大雄在最后的危急关头仍然没有扣动扳机，让看似冷血的莉露露能不顾自己的命运在司令面前挺身而出。正是这颗宝贵的心，让奴隶贸易从这个世界上消失，让共产主义的旋风一度席卷全球，让世界没有变成弱肉强食的野蛮丛林。</p>\n<p data-pid=\"KtyVJ9Pw\">正因如此，博士希望为两位机器人改造出为他人着想的心，从根本上杜绝铁人兵团的出现。可是，作为铁人兵团成员的莉露露，恐怕也会随之被抹除存在的痕迹。但此时，莉露露或许会震惊，或许会恐惧，但决不会再迷惘，她已经找到了自己新的存在意义。当她坐上操作台的那一刻，<b>她彻底摆脱了个人利益的束缚，摆脱了身份与种族的捆绑，一切的一切，只为一个让宇宙上的生命都能安心生活的“天国”。</b>她终于解放了自己的内心，成为了一个“人”应有的样子。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-95d575a6483c8bc1e4558b7f77cfe630_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"734\" data-rawheight=\"323\" data-watermark=\"original\" data-original-src=\"v2-95d575a6483c8bc1e4558b7f77cfe630\" data-watermark-src=\"v2-63162064b22a97d7596a639810d184c7\" data-private-watermark-src=\"v2-6de6c9cc5e950c1ccfd34b6bb14bde71\"></p>\n<p data-pid=\"GO0CzvJ-\">当莉露露渐渐如烟雾般消散之时，她面带微笑地对静香说道：“下次转生的话，我想成为天使般的机器人”。</p>\n<p data-pid=\"_6qf3wx5\"><b>可是莉露露，你已经是“天使般的机器人”了。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-aee3ba9e2fb77fb8db13819e477b5529_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"730\" data-rawheight=\"579\" data-watermark=\"original\" data-original-src=\"v2-aee3ba9e2fb77fb8db13819e477b5529\" data-watermark-src=\"v2-3bff44f2f203c00d23091b160668b66e\" data-private-watermark-src=\"v2-81085f3ce83d3b52448ff4615dffeeb0\"></p>\n<p data-pid=\"JUjosPqR\">在静香和莉露露令人动容的故事之外，男孩子们与山大克罗斯同铁人兵团的斗智斗勇也是本作的一大看点。不过，男孩子们的战斗最终以失败告终，尽管他们在这个过程中展现出了面对强敌永不屈服的坚韧意志，但似乎从一开始就沦为了静香和莉露露的陪衬。</p>\n<p data-pid=\"04k5ktlx\">显而易见的一点是，在小夫的提议下，哆啦A梦强行改造了山大克罗斯的头脑，用一种违背其意愿且极为粗暴的方式使它成为了我方的伙伴。这种做法实在与静香对待莉露露的态度大相径庭，也让不少读者开始质疑，这部作品传达的价值观是否自相矛盾。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4ffc0046ba415092974531eaf7b1f36c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"731\" data-rawheight=\"271\" data-watermark=\"original\" data-original-src=\"v2-4ffc0046ba415092974531eaf7b1f36c\" data-watermark-src=\"v2-6961e6f9cecaf9838e2f25260a2bb4dc\" data-private-watermark-src=\"v2-2369d31eef592bf9ef46c50513887c68\"></p>\n<p data-pid=\"-YA_gON1\">但或许，这就是藤子·F·不二雄的巧妙构思。从这里开始，<b>五人组就被隐性地分成了两组路线</b>：男孩子们完全将铁人兵团视为敌人，用武力与之抗争；而静香则没有在意莉露露的立场，用真诚的态度和本真的爱感化了她。诚然，男孩子们做的并不是无用功。他们的奋勇抗争为静香的计划提供了充足的时间，守住了地球的最后一道防线。但最后从根本上解决问题的终究还是静香——这是爱的胜利，是人心的胜利，<b>相互的理解最终战胜了冲突与对抗</b>，而这也正是藤子老师想要突出的主题。</p>\n<hr>\n<p data-pid=\"5JlotHW0\">故事的最后，大雄独自坐在空荡荡的教室里发呆，麦加托比亚与莉露露的现状仍然牵动着他的心。这时，一位粉红色头发的少女悄悄从窗前飘过，当两人四目相对之时，少女的脸上浮现出天使般的微笑。</p>\n<p><img src=\"https://pica.zhimg.com/v2-7e5833ee0a3a8ba64232e72469b5255c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"732\" data-rawheight=\"472\" data-watermark=\"original\" data-original-src=\"v2-7e5833ee0a3a8ba64232e72469b5255c\" data-watermark-src=\"v2-aaf793c6dc79693321bf5320122ded39\" data-private-watermark-src=\"v2-e2ee1b2f6d46fd33eb3ec49e4fec31d3\"></p>\n<p data-pid=\"ZJLKpuAS\">或许，麦加托比亚真的成为了天国般的社会；或许，莉露露真的转生来到地球观光旅游了。我们如此相信着，因为我们希望，<b>温柔对待他人的人，也能被这个世界温柔相待。</b></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/shi_mmer?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Shimmer</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/37527964/answer/2658274638?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">42 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/499022907?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">漫画《哆啦A梦》中哪段你觉得最高能？</a><br><a href=\"http://www.zhihu.com/question/541417867?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">漫画《哆啦A梦》中有哪些你觉得很扯淡的剧情？</a><br>\n","link":"http://www.zhihu.com/question/37527964/answer/2658274638?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"为什么你不应该在 React 中直接使用 useEffect 从 API 获取数据","date":"2022-08-19 08:53:00","description":"\n<p>React 是一个由 Facebook 开源的、可以在任意平台上构建 UI 的 JavaScript 库。在 React 中，一个常见的 Pattern 是使用 <code>useEffect</code> 搭配 <code>useState</code> 发送请求、将状态从 API（React 外部）同步到 React 内部、用于渲染 UI，这篇文章恰恰在向你介绍为什么你不应该直接这么做。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/180676/37/27394/27265/62ff57f2E600b3725/cff75c5fca39bbcc.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/\">https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/"},{"title":"NPM 自动更新版本号","date":"2022-08-04 05:00:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>ChenYFan 大佬的文章：<a href=\"https://blog.cyfan.top/p/d3c51290.html\">SpeedUp!使用黑科技为你的网站提速</a> 有提到过将 Hexo 博客的全部静态文件上传至 NPM 达到加速效果。</p>\n<p>但是 NPM 版本号不能重复，而且为了精准命中缓存和防止边缘 <code>@latest</code> 缓存过长，就必须指定版本号。</p>\n<p>本人在 <a href=\"https://blog.yfun.top/posts/2876015612/\">我的图床解决方案</a> 一文中使用的方法是 <code>npm version patch</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804133426.png\"></p>\n<p>但这个方法也有一些弊端，比如 <code>patch</code> 只会更新 <code>z</code> 位数的版本号，而且并不会上传至仓库，很可能会出现版本号冲突导致上传失败。这就是为什么最后还需要重新推送 Git 提交。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E8%AF%95%E8%AF%95%E7%9C%8B\" class=\"headerlink\" title=\"试试看\"></a>试试看</h2>\n<p>NPM 版本号遵循 <code>semver</code> 规范，格式为 <code>major.minor.patch</code>。</p>\n<p>为了在获取最新版本号的时候不发生混乱，我选择先获取最新的版本号。</p>\n<blockquote><p>记得把 <code>cky-blog-static</code> 改成自己的项目名。</p></blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>获取到最新版本号后，就可以对版本号进行分析。</p>\n<p>以 <code>1.4.7-b541af2ea284a39da0bbf63b88fdb65c</code> 为例，先按 <code>major.minor.patch</code> 分离。当然，也需要考虑版本号后还有 <code>build metadata</code> 的情况。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\"><span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br></pre></td></tr></table></figure><p><del>为了版本号好看些</del>，可以通过判断实现满十进一。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位小于 9，直接 +1</span></span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">} <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位大于等于 9，y 位小于 9，y+1, z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">} <span class=\"keyword\">else</span> {</span><br><span class=\"line\"><span class=\"comment\">// z 大于等于 9，y 大于等于 9，x+1,y=0,z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>最后，重新拼接版本号。如果担心服务器缓存版本号导致冲突，还可以加上一些随机字符串。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br></pre></td></tr></table></figure><p>将最新的版本号信息重新写入 <code>package.json</code> 文件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">packageJson.version = newVersion;</span><br><span class=\"line\"><span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p><del>直接 CV 代码！</del></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 更新 package.json 版本号</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fetch = <span class=\"built_in\">require</span>(<span class=\"string\">\"node-fetch\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> md5 = <span class=\"built_in\">require</span>(<span class=\"string\">\"js-md5\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> update = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">    verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(newVersion);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">    packageJson.version = newVersion;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">    fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Complete!!\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">update();</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%90%8E\" class=\"headerlink\" title=\"最后\"></a>最后</h2>\n<p>如果是 Hexo 文件部署，就可以直接把文件直接丢在项目根目录，Action 集成部署加上：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">node update.js</span><br></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804135818.png\"></p>\n<p><del>Blog 半年没更新，除除草 --(....</del></p>\n","link":"https://blog.yfun.top/posts/2022/auto-update-npm-version/"},{"title":"我有特别的 DNS 配置和使用技巧","date":"2022-07-28 15:31:00","description":"\n<p>众所周知，DNS 的作用与电话簿类似，将人类可读的域名映射到机器可读 IP 地址、使人更方便地访问互联网。DNS 是非常重要的互联网基础设施，对于改善上网冲浪的体验中的重要程度不容小觑。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/96381/31/31172/23930/62e2ab5bE554d388b/37027f4a03351b9e.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/i-have-my-unique-dns-setup/\">https://blog.skk.moe/post/i-have-my-unique-dns-setup/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/i-have-my-unique-dns-setup/"},{"title":"优化博客的累计布局偏移（CLS）问题","date":"2022-06-07 17:24:00","description":"\n<p>距离上一篇文章发布已有四个月了，是时候写几篇文章给博客除草了。上一次我介绍了我如何迁移、重构了我的博客的架构，这次我想来谈谈我在重构中优化和打磨访客体验时解决的一个问题。我的博客优化之旅 图片 lazyload 的学问和在 Hexo 上的最佳实践 我的博客有多快？ 天下武功，唯快不破 —— 我是这样优化博客的 ...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/206311/26/14625/38940/629f7f81Eb11312de/b1e67f07b1cc9bc7.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/fix-blog-cls/\">https://blog.skk.moe/post/fix-blog-cls/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/fix-blog-cls/"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\r\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\r\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\r\n    return new Date(date.toLocaleString('en-US', { timeZone }))\r\n}\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\r\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\r\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\r\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: '2-digit',\r\n        hour12: false,\r\n        timeZone\r\n    })\r\n    return {\r\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\r\n        convert (date) {\r\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\r\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\r\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\r\n        }\r\n    }\r\n}\r\n\r\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\r\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\r\n    return converter.convert(new Date(secDate), tzName) - secDate\r\n}\r\n\r\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\r\ncmn-Hans-SG = 中文普通话-简体-新加坡\r\ncmn-Hant-TW = 中文普通话-繁体-台湾\r\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\r\ncmn = 中文普通话\r\n\r\nzh-Hans = 中文-简体\r\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\r\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\r\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\r\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\r\n}\r\n\r\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long'\r\n}\r\nconst now = new Date()\r\n\r\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\r\n\r\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\r\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\r\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\r\n\r\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\r\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\r\n\r\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\r\n\r\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\r\n\r\nzhCNFormatter.format(now) // 2021年10月13日星期三\r\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\r\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\r\n\r\njaFormatter.format(now) // 2021年10月13日水曜日\r\njaAltFormatter.format(now) // 令和3年10月13日水曜日\r\n\r\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\r\n// {locale: 'zh-CN', calendar: 'gregory', …}\r\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\r\n     // 基于一个固定日期计算，这里选择 1970.1.1\r\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\r\n    const base = new Date(1970, 0, 1).getTime()\r\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\r\n    return Array.from({ length: 7 }, (_, day) =&gt; (\r\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\r\n    ))\r\n}\r\n\r\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\r\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\r\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    second: 'numeric',\r\n}).formatToParts(new Date())\r\n// [\r\n//     { type: 'year', value: '2021' },\r\n//     { type: 'literal', value: '年' },\r\n//     { type: 'month', value: '10' },\r\n//     { type: 'literal', value: '月' },\r\n//     { type: 'day', value: '13' },\r\n//     { type: 'literal', value: '日' },\r\n//     { type: 'weekday', value: '星期三' },\r\n//     { type: 'literal', value: ' ' },\r\n//     { type: 'dayPeriod', value: '上午' },\r\n//     { type: 'hour', value: '1' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'minute', value: '00' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'second', value: '00' }\r\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\r\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\r\n}\r\n\r\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\r\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\r\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\r\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\r\n  timeZone: 'America/Los_Angeles',\r\n  year: 1995,\r\n  month: 12,\r\n  day: 7,\r\n  hour: 3,\r\n  minute: 24,\r\n  second: 30,\r\n  millisecond: 0,\r\n  microsecond: 3,\r\n  nanosecond: 500,\r\n  calendar: 'iso8601'\r\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"\n<p>WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将其表述为 \"An API for accessing Public Key Credentials\"，即“一个用于访问公钥凭证的 API”。WebAuthn 很强大，强大到被认为是 Web 身份认证的未来（当然，也很复杂）。你有想过通过指纹或者面部识别来登录网站吗？WebAuthn 就能在保证安全和隐私的情况下让这样的想法成为现实。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\" alt=\"通过 WebAuthn 调起 Windows Hello 登录网站\" width=\"1912\" height=\"966\" class=\"aligncenter size-full wp-image-2215\"></a>\n<p>你可以在<a href=\"https://webauthn.io/\" rel=\"noopener\">这个网站</a>自行体验 WebAuthn。或者，如果你有一个使用 WordPress 的站点，可以尝试一下 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WP-WebAuthn</a> 这款插件，它可以为你的站点启用 WebAuthn 登录。这是我为了写这篇文章而练手开发的插件，本文中的部分示例代码也来自这款插件。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"wp-webauthn\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/wp-webauthn\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>WebAuthn Level 1 标准已在 2019 年 3 月成为 W3C 推荐标准，而 Level 2 标准目前也已进入编辑草案阶段，但互联网上有关它的中文资料却仍然很少，国内也鲜有网站支持这一新标准。于是，在抱着各种英文资料和标准啃了几天以后，我折腾出了这篇文章。</p>\n<p>在这篇文章里，我将会从最基本的概念开始，逐渐深入 WebAuthn，直到解码公钥等深层细节。这可能是你能找到的有关 WebAuthn 最详细最基础的中文文章，也很可能是最长的。在开始之前，<strong>我强烈建议你打开菜单中的文章目录浏览一遍，以对这篇文章涉及的内容有所了解。</strong>如果你只是想了解如何简单地在你的项目中添加对 WebAuthn 的支持，那么“<a href=\"https://flyhigher.top/#webauthn-overview\">浅谈 WebAuthn</a>”部分就是你要找的；如果你想了解更多关于 WebAuthn 的底层细节，那么你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分。</p>\n<p>由于在本文写作时 WebAuthn Level 2 规范尚未定稿，<strong>这篇文章我们将只专注于 Level 1 规范。</strong></p>\n<p>这篇文章最后更新于 2020.9 ，在你读到这篇文章时，部分事实可能已经发生改变，请注意判断。</p>\n<p><strong>更新日志：</strong></p>\n<ul>\n<li>2021.1.16 添加 Chrome 开发工具信息</li>\n<li>2020.9.17 更新 iOS/iPad OS 兼容性信息</li>\n<li>2020.5.20 添加部分无用户名认证的平台兼容性内容</li>\n<li>2020.5.15 添加部分 <code>extensions</code> 相关内容与链接；添加全局凭证 ID 唯一内容；添加凭证 ID 查找相关内容；添加“从 U2F 认证迁移”一节</li>\n<li>2020.4.13 更新与修正 <code>userVerification</code> 相关内容；添加部分 Firefox 相关内容</li>\n<li>2020.3.23 文章发布</li>\n</ul>\n<p>那么让我们开始吧。<span></span></p>\n<h1>浅谈 WebAuthn</h1>\n<p>在这个部分里，我们将会从基础概念开始，了解有关 WebAuthn 和密码学的一些基础知识，并最终使用第三方库实现基础的 WebAuthn 认证。如果你已经对这些内容有所了解了，可以跳到“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”继续阅读。</p>\n<h2>为什么使用 WebAuthn</h2>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\" alt=\"钓鱼邮件\" width=\"709\" height=\"693\" class=\"aligncenter size-full wp-image-2162\"></a>\n<p>相信你一定收到过类似的邮件吧？只要你点进那个最显眼的链接，你就会进入一个设置好的圈套——钓鱼网站。如果你一时糊涂在这类网站上填写了你的账号和密码，bingo，你的账号就不再是你的账号了。</p>\n<p>不过，就算你警惕心再强，也无法避免密码泄露事件。Twitter, Facebook 等都爆出过明文密码泄露事件，证明再大的公司或组织也无法避免密码泄露问题。雪上加霜的是，很大一部分用户都非常喜欢使用重复密码，这就导致一次密码泄露会牵连很多网站，用户的账户安全性完全无法得到保证。</p>\n<p>那么，有什么办法解决这些问题吗？<strong>彻底解决的方法只有一个，那就是抛弃密码。</strong>可是没有密码还怎么验证用户身份呢？这就是 WebAuthn 的用武之地了。</p>\n<p><del>没有密码的好时代，来临力！</del></p>\n<h2>什么是 WebAuthn</h2>\n<p>那么到底什么是 WebAuthn 呢？如开头所说，WebAuthn 是“一个用于访问公钥凭证的 API”，网站可以通过这个 API 进行一些高安全性的身份验证。WebAuthn 一个最常见的应用就是用于网站登录时的 2FA（双重因素验证）甚至是无密码登录。通过网页调用 WebAuthn，在不同平台下，<strong>我们可以实现通过 USB Key、指纹、面部甚至虹膜扫描来认证身份，同时确保安全和隐私。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\" alt=\"WebAuthn 可使用的各种身份认证方式\" width=\"1294\" height=\"566\" class=\"aligncenter size-full wp-image-2213\"></a>\n<p>WebAuthn 标准是 FIDO2 标准的一部分，而 FIDO2 则是由 FIDO 联盟和 W3C 共同推出的 U2F（现称作 FIDO1）的后继标准，旨在增强网络认证的安全性。</p>\n<blockquote><p>你可能了解过 U2F，那么 U2F 和 FIDO2 的区别在哪里呢？从名字上可以看出，U2F，即“通用第二因素协议”，是专注于作为密码后的第二道屏障的，而 FIDO2 增加了单因素认证功能，这意味着使用 FIDO2 可以完全替代密码，真正实现无密码登录。</p></blockquote>\n<p>FIDO2 标准主要包括四个部分，其一是用于网站和访客设备交互的 WebAuthn，而 Client to Authenticator Protocol 2（CTAP2，客户端-认证器协议）作为 WebAuthn 的补充，则是用于访客的设备和认证器交互的协议。标准的其他两个部分则是 U2F 和 UAF 规范。在这篇文章中，我们只关心 WebAuthn，不会涉及 CTAP, U2F 和 UAF 的相关知识。如果你对这段话中的一些概念不了解，不要紧张，接下来我们就来谈谈 WebAuthn 中一些常用的术语和概念。</p>\n<blockquote><p>WebAuthn 只能在安全上下文中使用，也就是说，页面需要使用 HTTPS 协议或是处于 <code>localhost</code> 中。</p></blockquote>\n<h2>常用术语和概念</h2>\n<p>WebAuthn 中有许多不常碰到的术语，不过我只会在这里介绍一些常用的术语和概念——如果你只是希望做出一个简单的实现，那么了解这一段中的一些概念就足够了。同时，由于我实在没能找到一部分术语的通用翻译，有一些术语我按着自己的理解尽可能地翻译了，有任何问题请告诉我。</p>\n<p>在一个完整的 WebAuthn 认证流程中，通常有这么几个角色：</p>\n<ul>\n<li>Relying Party 依赖方 (RP) ：指服务提供方，即网站</li>\n<li>User 用户：正准备登录的你</li>\n<li>Authenticator 认证器：通常指 USB Key 或是设备内置的指纹扫描器、虹膜扫描器、面部识别装置等，正是它们在使用流程中代替了密码甚至是用户名</li>\n<li>User Agent 用户代理：通常指浏览器或系统，负责与认证器交互</li>\n</ul>\n<p>认证过程通常分为两种：</p>\n<ul>\n<li>Registration Ceremony 注册仪式：用户向账户上添加认证器</li>\n<li>Authentication Ceremony 验证仪式：用户通过已注册的认证器验证身份</li>\n</ul>\n<p>同时，认证过程中还会产生这些内容：</p>\n<ul>\n<li>Challenge 挑战：通常是一串随机字符串</li>\n<li>Public Key Credential 公钥凭证：由认证器产生的凭证，在技术上代替了密码</li>\n<li>Attestation 证明：注册时认证器产生的验证数据</li>\n<li>Assertion 断言：验证时认证器产生的验证数据</li>\n</ul>\n<blockquote><p><strong>请注意区分证明 (Attestation) 和断言 (Assertion)</strong>，特别是在这两个单词有些相似的情况下。在 WebAuthn 中，它们是不同过程中的类似概念，但并不相同。</p></blockquote>\n<p>如果你对于这些内容不是很理解，没有关系，我们会在“<a href=\"https://flyhigher.top/#how-to-webauthn\">使用流程</a>”一节中将这些概念放到实际情况中解释，你只要先区分这些概念即可。</p>\n<h2>安全性的基础</h2>\n<p>WebAuthn 为什么安全？和 HTTPS 一样，WebAuthn 使用非对称加密的思路来保证安全性，但侧重点又有所不同。要理解 WebAuthn 的认证流程，我们必须对非对称加密有所了解。如果你对非对称加密比较熟悉了，就直接跳到下一段吧。</p>\n<p>WebAuthn 的核心在于“认证”，即保证产生了凭证的认证器是用户的认证器，而不是第三方在伪造凭证。但为什么要使用非对称加密呢？我们可以先来看看对称加密。</p>\n<p>让我们假设小明和小红相互写信，见不到对方。这天小红突然想，给自己写信的人是不是真的小明呢？于是小红要求对方向小红证明自己是小明。怎么证明呢？他们商量出来这么一套方案：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明和小红商量一个统一的密码和密钥</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明用提前和小红商量好的密码和密钥加密文本后发回给小红</li>\n<li>小红使用相同的密码和密钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和密钥</li>\n</ol>\n<blockquote><p>在密码学中，我们通常把“加密算法”称为密码 (code)，和通常登录时用的密码 (password) 并非同一个概念。</p></blockquote>\n<p>在这种情况下，<strong>只要密钥不泄露</strong>，即拥有正确密钥的只有小明和小红，那么小红就能确定对方一定是小明。但这样的问题也很明显，如果小明和小红不能见面，那么他们就必须先以明文交换密码——<strong>在这个过程中一旦有人窃取到了密码，这个认证就无效了。</strong></p>\n<p>这时我们就需要使用<strong>非对称加密</strong>来拯救破碎的信任了。非对称加密的基础是一对密钥，也就是公钥和私钥，它们是互相关联但（几乎）无法互相推导的。在非对称加密的过程中，选择相同的密码后，使用私钥加密明文得到的密文只能由对应的公钥解密，无法使用私钥解密，同时这个过程反过来也是成立的。</p>\n<blockquote><p>本文的核心并不是非对称加密算法，因此不会详述非对称加密在数学上的证明，若有兴趣可以自行了解。</p></blockquote>\n<p>这就完美解决密钥泄露的问题了。让我们回过头来看之前的例子。现在小明和小红决定使用非对称加密来证明身份，过程如下：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明提前生成一对公私钥，将公钥发送给小红，私钥自己保管，同时商量好统一的密码</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明使用商量好的密码和自己的私钥加密文本，发送给小红</li>\n<li>小红使用相同的密码和小明的公钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和私钥</li>\n</ol>\n<p>在这种情况下，<strong>只要私钥不泄露</strong>，那么小红解密得到的文本和之前发送的一致，那么就可以证明收到的密文一定是由小明加密后发送过来的。而在整个过程中，私钥都没有离开过小明，更没有经过传输，也就几乎没有泄露的可能了。这时，小红终于可以确定对面和她通信的人的确是小明了。</p>\n<p>题外话：HTTPS 虽然也应用了非对称加密，但 HTTPS 更侧重于“加密”而非“认证”，因此思路上会有些许差异。要了解关于 HTTPS 和非对称加密的更多信息，你可以阅读我之前写的这篇文章：</p>\n<p></p>\n<div class=\"mdx-post-cot\" data-mdxposturl=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdx-post-wait-out-c2\"><div class=\"mdx-post-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<span></span>\n<h2>使用流程</h2>\n<p>了解了非对称加密，我们就可以来看看 WebAuthn 的认证流程了。</p>\n<p>和普通的密码一样，<strong>使用 WebAuthn 分为两个部分，注册和验证。</strong>注册仪式会在依赖方中将认证器的一些信息和用户建立关联；而验证仪式则是验证这些信息以登确保是用户本人在登录。根据上一节的思路，我们可以知道，注册仪式就是认证器生成一对公私钥，然后将公钥交给依赖方；而验证仪式是依赖方发送给认证器一段文本，要求认证器用自己的私钥加密后发回以验证。</p>\n<p>在实际情况中，WebAuthn 是基于<strong>挑战-应答模型</strong>工作的。要更好地理解，我们直接来看具体流程。先来看看注册的流程。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\" alt=\"WebAuthn 注册流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2224\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的注册请求</li>\n<li>依赖方向浏览器发送挑战、依赖方信息和用户信息</li>\n<li>浏览器向认证器发送挑战、依赖方信息、用户信息和客户端信息以请求创建公钥凭证</li>\n<li>认证器请求用户动作，随后创建一对公私钥，并使用私钥签名挑战（即证明），和公钥一起交给浏览器</li>\n<li>浏览器将签名后的挑战和公钥发送给依赖方</li>\n<li>依赖方用公钥验证挑战是否与发送的一致，如果成功则将公钥与用户绑定，注册完成</li>\n</ol>\n<p>我也做了一个交互式的 Demo，你可以对照流程来更好地理解。</p>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\">开始注册</button> <span></span></p>\n<div></div>\n<blockquote><p>注意，这个 Demo 和下方的 Demo 都只是一个本地模拟的简单示例，没有任何数据会被上传，当然也不会对数据进行验证。</p></blockquote>\n<p>而之后的验证流程如下：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\" alt=\"WebAuthn 验证流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2226\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的验证请求</li>\n<li>依赖方向浏览器发送挑战</li>\n<li>浏览器向认证器发送挑战、依赖方信息和客户端信息以请求获取公钥凭证</li>\n<li>认证器请求用户动作，随后通过依赖方信息找到对应私钥，并使用私钥签名挑战（即断言），交给浏览器</li>\n<li>浏览器将签名后的挑战发送给依赖方</li>\n<li>依赖方用之前存储的公钥验证挑战是否与发送的一致，一致则验证成功</li>\n</ol>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\" disabled>开始验证</button> <span>在上方注册后才能验证</span></p>\n<div></div>\n<p>可以看到，WebAuthn 不仅在理论上是安全的，同时<strong>在整个过程中并没有隐私数据被传输</strong>——用户信息实际上只包含用户名和用户 ID。因此我们完全可以说 WebAuthn 是安全且私密的。</p>\n<blockquote><p>为了避免用户在不同依赖方之间被追踪，认证器通常会为每个依赖方和用户的组合都创建一对公私钥。不过，由于认证器的存储空间有限，认证器通常不会存储每一个私钥，而是会通过各类信息和烧录在认证器内的主密钥“算”出对应的私钥以实现无限对公私钥。具体算法根据不同厂商会有所不同。对于 Yubikey，你可以在<a href=\"https://developers.yubico.com/U2F/Protocol_details/Key_generation.html\">这里</a>了解更多。</p></blockquote>\n<blockquote><p>如果依赖方需要，用户同意后，发送给依赖方的公钥凭证中可以包含用于辨认认证器型号的信息，不过这对隐私的影响微乎其微。</p></blockquote>\n<h2>浏览器接口</h2>\n<p>要使用 WebAuthn，我们必须要依靠浏览器作为媒介和验证器进行交互，而这就需要浏览器对于 WebAuthn 的支持了。绝大多数新版本的现代浏览器都为 WebAuthn 提供了统一的接口，而在这一段中我们会了解如何使用相关的接口。但是在开始之前，我们可以先来看看浏览器的支持程度（2020.9）。</p>\n<div class=\"mdui-table-fluid\"><table class=\"mdui-table\">\n<thead><tr>\n<th>浏览器</th>\n<th>支持情况</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>桌面端 Chrome</td>\n<td>67+</td>\n</tr>\n<tr>\n<td>移动端 Chrome</td>\n<td>67+<sup>[1]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Firefox</td>\n<td>60+</td>\n</tr>\n<tr>\n<td>移动端 Firefox</td>\n<td>不支持<sup>[2]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Edge</td>\n<td>18+</td>\n</tr>\n<tr>\n<td>移动端 Edge</td>\n<td>不支持<sup>[3]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Safari</td>\n<td>13+</td>\n</tr>\n<tr>\n<td>移动端 Safari</td>\n<td>13.3+<sup>[4]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Opera</td>\n<td>54+</td>\n</tr>\n<tr>\n<td>移动端 Opera</td>\n<td>不支持</td>\n</tr>\n</tbody>\n</table></div>\n<p><sup>[1]</sup> 受平台限制，Chrome 在 iOS 平台上不支持 WebAuthn，在 Android 平台上支持大部分 WebAuthn 功能，但仍不支持部分特性（如 <code>userVerification</code>）。<br><sup>[2]</sup> 移动端 Firefox 80 以下的版本支持 WebAuthn 但似乎会忽略 <code>authenticatorAttachment</code> 等一部分参数，同时移动端 Firefox Beta 80 以下的版本支持 WebAuthn 但无法成功调用。自 80 版本起移动端 Firefox 暂时取消了对 WebAuthn 的支持（可能是 Bug）。<br><sup>[3]</sup> 移动端 Edge 似乎支持 WebAuthn 但无法成功调用。<br><sup>[4]</sup> Safari iOS/iPad OS 13 仅支持外部认证器，无法调用 Touch ID 或 Face ID；自 iOS/iPad OS 14 起 Safari 已支持全功能 WebAuthn，可以调用 Touch ID/Face ID</p>\n<p>当然，一众国产浏览器，包括 Samsung Browser 和 Yandex Browser，目前都不支持 WebAuthn。此外，由于 WebAuthn 涉及外部验证器和 TPM 可信平台模块等，用户的操作系统也会对 WebAuthn 的可用性造成影响。以下是一些需要注意的信息：</p>\n<ul>\n<li>Windows 10 1903 以下版本仅 Edge 能提供完整支持，其他浏览器只能使用 USB Key 等外部认证器；1903+ 中所有浏览器都可以通过 Windows Hello 带来完整的 WebAuthn 支持</li>\n<li>Android 需要安装并开启 Google 服务</li>\n<li>iOS/iPad OS 13.3 以下的版本不支持 WebAuthn，iOS/iPad OS 14 以下的版本支持有限（参考上文），iOS/iPad OS 14 开始 Safari 已支持全功能 WebAuthn（功能完整度甚至超过了 Android）</li>\n</ul>\n<p>可以看出，WebAuthn 的发展之路仍然很漫长，但好在桌面端对它的支持已经比较完善了，在一些情况下我们完全有理由使用它。</p>\n<hr>\n<p>来看看浏览器提供了怎么样的接口吧。要使用 WebAuthn，我们可以使用 <code>navigator.credentials.create()</code> 请求认证器生成公钥凭证和 <code>navigator.credentials.get()</code> 请求获取公钥凭证。</p>\n<blockquote><p>你或许已经对 Credential Management API 有所了解了。通过这些 API，我们还可以实现一些有趣的特性，不过这值得另开一篇文章来讲了。</p></blockquote>\n<p>对于一个基础的实现，<code>navigator.credentials.create()</code> 需要传入的参数如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        challenge,\r\n        rp: {\r\n            id,\r\n            name\r\n        },\r\n        user: {\r\n            id,\r\n            name,\r\n            displayName\r\n        },\r\n        pubKeyCredParams: [\r\n            {\r\n                type: \"public-key\",\r\n                alg\r\n            }\r\n        ],\r\n        authenticatorSelection: {\r\n            authenticatorAttachment,\r\n            userVerification\r\n        },\r\n        excludeCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>在 <code>navigator.credentials.create()</code> 方法中，我们必须传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值。这指明了我们需要创建公钥凭证，而非普通的密码凭证。然后，在 <code>publicKey</code> 对象中设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rp: Object</code>：依赖方信息，其中有一项为必须：\n<ul>\n<li>\n<code>rp.id: String</code>：（可选）依赖方 ID，必须为当前域名或为当前域名的子集的域名（不是子域名）。如域名为 <code>test.123.example.com</code>，则依赖方 ID 可以是 <code>test.123.example.com</code>, <code>123.example.com</code> 或 <code>example.com</code>。不指定则默认使用当前域名</li>\n<li>\n<code>rp.name: String</code>：依赖方名称，用于方便用户辨认</li>\n</ul>\n</li>\n<li>\n<code>user: Object</code>：用户信息，其中有三项为必须：\n<ul>\n<li>\n<code>user.id: Uint8Array</code>：转换为 <code>Uint8Array</code> 的字符串。<strong>出于安全考量，这应尽可能不与任何用户信息相关联，如不要包含用户名、用户邮箱等</strong>\n</li>\n<li>\n<code>user.name: String</code>：登录用户名</li>\n<li>\n<code>user.dispalyName: String</code>：用于显示的用户名称，显示与否的具体行为取决于浏览器</li>\n</ul>\n</li>\n<li>\n<code>pubKeyCredParams: Array</code>：一个算法列表，指明依赖方接受哪些签名算法。列表的每一项都是一个对象，拥有两个属性：\n<ul>\n<li>\n<code>pubKeyCredParams[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>pubKeyCredParams[].alg: Number</code>：一个负整数，用于标明算法。具体算法对应的数字可以在 <a href=\"https://www.iana.org/assignments/cose/cose.xhtml#algorithms\">COSE</a> 找到</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection: Object</code>：（可选）用于过滤正确的认证器，这里介绍常用的一个参数：\n<ul>\n<li>\n<code>authenticatorSelection.authenticatorAttachment: String</code>：（可选）指定要求的认证器类型。如果没有满足要求的认证器，认证可能会失败。该参数可以为 <code>null</code>（表示接受所有类型的认证器）或是以下两个值之一：\n<ul>\n<li>\n<code>platform</code>：表示仅接受平台内置的、无法移除的认证器，如手机的指纹识别设备</li>\n<li>\n<code>cross-platform</code>：表示仅接受外部认证器，如 USB Key</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection.userVerification: String</code>：（可选）指定认证器是否需要验证“用户为本人 (User Verified, UV)”，否则只须“用户在场 (User Present, UP)”。具体验证过程取决于认证器（不同认证器的认证方法不同，也有认证器不支持用户验证），而对验证结果的处理情况则取决于依赖方。该参数可以为以下三个值之一：\n<ul>\n<li>\n<code>required</code>：依赖方要求用户验证</li>\n<li>\n<code>preferred</code>：（默认）依赖方希望有用户验证，但也接受用户在场的结果</li>\n<li>\n<code>discouraged</code>：依赖方不关心用户验证。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>excludeCredentials: Array</code>：（可选）用于标识要排除的凭证，可以避免同一个用户多次注册同一个认证器。如果用户试图注册相同的认证器，用户代理会抛出 <code>InvalidStateError</code> 错误。数组中的每一项都是一个公钥凭证对象，包含以下属性：\n<ul>\n<li>\n<code>excludeCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>excludeCredentials[].id: Uint8Array</code>：要排除的凭证 ID</li>\n<li>\n<code>excludeCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，超时后将强制终止 <code>create()</code> 并抛出错误。若不设置，将使用用户代理的默认值；若太大或太小，则使用最接近的用户代理默认值范围中的值。推荐值为 5000-120000</li>\n</ul>\n<blockquote><p>对于 <code>pubKeyCredParams</code>，通常我们只需添加 ES256 (alg: -7) 算法即可兼容大部分外部认证器，此外，再添加 RS256 (alg: -257) 算法即可兼容大部分平台内置认证器（如 Windows Hello）。当然，前端添加算法之后，后端也需要相应的算法支持。</p></blockquote>\n<blockquote><p>对于 <code>userVerification</code>，由于默认值 \"preferred\" 并不能很好地被所有设备支持，因此无论在 <code>create()</code> 中还是 <code>get()</code> 中不指定该参数都会在 Chrome 中触发一条警告。具体请参阅<a href=\"https://chromium.googlesource.com/chromium/src/+/master/content/browser/webauth/uv_preferred.md\">这个页面</a>。</p></blockquote>\n<p>调用 <code>create()</code> 之后，我们就可以拿到一个 <code>Promise</code>，并可以在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>create()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAttestationResponse {\r\n        attestationObject: ArrayBuffer(390) {},\r\n        clientDataJSON: ArrayBuffer(121) {}\r\n    },\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\",\r\n    type: \"public-key\"\r\n}</pre>\n<p>其中有：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：<code>AuthenticatorAttestationResponse</code> 对象，是 <code>PublicKeyCredential</code> 的主要部分，包含以下两个内容：\n<ul>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n<li>\n<code>response.attestationObject: ArrayBuffer</code>：CBOR 编码的认证器数据，包含凭证公钥、凭证 ID、签名（如果有）、签名计数等信息</li>\n</ul>\n</li>\n</ul>\n<p>然后将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串，我们就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证与注册了。具体怎么操作，我们会在下文详细讨论。当然，别忘了 <code>catch()</code> 注册过程中抛出的任何错误。</p>\n<blockquote><p>你可能会认为在所有情况下，注册时认证器都会对挑战进行签名。实际上在大部分情况下（同时也是默认情况），<strong>注册时认证器并不会对挑战进行签名</strong>，<code>attestationObject</code> 并不会包含签名后的挑战。只有依赖方明确要求证明且用户同意（部分浏览器要求）后认证器才会对挑战进行签名（具体实现据情况会有所不同）。对此，<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion#Attestation\">MDN 解释道</a>“大部分情况下，用户注册公钥时我们会使用「初次使用时信任模型」(TOFU) ，此时验证公钥是没有必要的。”要了解更多关于证明的内容，请参阅“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>而对于 <code>navigator.credentials.get()</code>，我们可以传入如下的参数：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.get({\r\n    publicKey: {\r\n        challenge,\r\n        rpId,\r\n        userVerification,\r\n        allowCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>和 <code>create()</code> 一样，对于 <code>get()</code> 我们需要传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值，指明我们需要获取的是公钥凭证而非普通的密码凭证。在 <code>publicKey</code> 对象中我们可以设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rpID: String</code>：（可选）依赖方 ID，需要和注册认证器时的一致。规则和上述的 <code>rp.id</code> 一致，不指定默认使用当前域名</li>\n<li>\n<code>userVerification: String</code>：和上文一样，只是需要注意它这次不在 <code>authenticatorSelection</code> 中了</li>\n<li>\n<code>allowCredentials: Array</code>：（可选）用于标识允许的凭证 ID，使用户代理找到正确的认证器。只有符合这个列表中凭证 ID 的凭证才能被成功返回。数组中的每一项都是对象，包含以下属性：\n<ul>\n<li>\n<code>allowCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>allowCredentials[].id: Uint8Array</code>：允许的凭证 ID</li>\n<li>\n<code>allowCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，和上面的一样，推荐值为 5000-120000</li>\n</ul>\n<p>嗯，要传入的参数少多了。之后，和 <code>create()</code> 一样，调用 <code>get()</code> 之后，我们就可以拿到一个 <code>Promise</code> 并在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>get()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAssertionResponse {\r\n        authenticatorData: ArrayBuffer(37) {},\r\n        signature: ArrayBuffer(256) {},\r\n        userHandle: ArrayBuffer(64) {},\r\n        clientDataJSON: ArrayBuffer(118) {}\r\n    }\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\"\r\n    type: \"public-key\"\r\n}</pre>\n<p>这里的东西就比 <code>create()</code> 时拿到的要多了。看看我们拿到了什么吧：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：对于验证流程，认证会返回 <code>AuthenticatorAssertionResponse</code> 而不是 <code>AuthenticatorAttestationResponse</code> 对象，这个对象包含以下 4 个属性：\n<ul>\n<li>\n<code>response.authenticatorData: ArrayBuffer</code>：认证器信息，包含认证状态、签名计数等</li>\n<li>\n<code>response.signature: ArrayBuffer</code>：被认证器签名的 <code>authenticatorData</code> + <code>clientDataHash</code>（<code>clientDataJSON</code> 的 SHA-256 hash）</li>\n<li>\n<code>response.userHandle: ArrayBuffer</code>：<code>create()</code> 创建凭证时的用户 ID <code>user.id</code>。许多 U2F 设备不支持这一特性，这一项将会是 <code>null</code>\n</li>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n</ul>\n</li>\n</ul>\n<p>同样地，我们将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串后就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证了。至于具体怎么做，别急，马上就来讲一讲。</p>\n<h2>简单实现</h2>\n<p>了这么多，我们终于可以实现一个简单的 WebAuthn 认证页面了。由于在实际操作中 WebAuthn 相关的数据解码和密码计算比较复杂，在服务器端我们可以使用第三方库来帮我们做这些脏活累活，我们只需专注于具体流程就可以了。</p>\n<p>要寻找可用的第三方库，你可以在 <a href=\"https://webauthn.io/\">webauthn.io</a> 上找到适用于各种语言的第三方库——除了 PHP（笑）。不过好在你可以在 GitHub 上找到几个不错的 PHP WebAuthn 库，比如 <a href=\"https://github.com/web-auth/webauthn-framework\">web-auth/webauthn-framework</a>。</p>\n<p>在我们的这个例子中，我们关心的主要是前端逻辑；而后端我们可以使用各类几乎已经做到开箱即用的第三方库，这样我们可以专注于流程而不必关心细节。当然如果你想了解后端的解码细节，可以阅读“<a href=\"https://flyhigher.top/#webauthn-decode\">手动解个码</a>”一节。</p>\n<hr>\n<p>让我们先从注册开始吧。现在，用户点击了注册认证器的按钮，一个请求被发送给服务器（也就是依赖方）。在最简单的情况中，依赖方需要将三个内容发送给浏览器：<strong>挑战、用户信息和用户已注册的凭证 ID 列表（即 <code>excludeCredentials</code>）</strong>。当然依赖方也可以自由选择发送更多信息，只要最终前端能构建合法的参数即可。</p>\n<p>挑战最终会被转换为 <code>Uint8Array</code>，即一组 0-255 的整数。如果使用 PHP，在后端我们可以这样生成 Base64 编码的挑战：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"php\">$challenge = \"\";\r\nfor($i = 0; $i \n<p>对于用户信息，我们需要登录名、显示名称和 ID 三项内容。我们可以从数据库中取出用户信息，也可以新建一份。需要注意的是，<strong>出于安全和隐私的考量，ID 不应该包含用户的任何信息，比如用户邮箱等。</strong>推荐的做法是和挑战一样，生成一个随机字符串/一组随机数，并将其于用户关联起来以供之后使用。</p>\n<p>发送已注册的凭证 ID 列表是为了防止用户重复注册同一个认证器。正确设置该列表后，如果用户试图注册同一个认证器，浏览器会中止流程并抛出 <code>InvalidStateError</code>。</p>\n<p>最后，别忘了将挑战等一些后续可能会用到的信息临时存储起来。Session 就是一个很好的选择。</p>\n<p>将所有信息发送到浏览器之后，我们应该可以构建出新建凭证所需的参数了。由于有多个参数需要以 <code>Uint8Array</code> 的形式传入，我们可以准备一个简单的工具函数帮我们将 Base64 的字符串转为 <code>Uint8Array</code>。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function str2ab(str){\r\n    return Uint8Array.from(window.atob(str), c=&gt;c.charCodeAt(0));\r\n}</pre>\n<p>除了 <code>challenge</code>, <code>rp</code>, <code>user</code> 和 <code>excludeCredentials</code> 几部分需要你根据具体情况设置外，上文提到的其他参数一般可以这么设置：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">publicKey: {\r\n    challenge, // 自行设置\r\n    rp, // 自行设置\r\n    user, // 自行设置\r\n    pubKeyCredParams: [\r\n        {\r\n            type: \"public-key\",\r\n            alg: -7 // ES256\r\n        },\r\n        {\r\n            type: \"public-key\",\r\n            alg: -257 // RS256\r\n        }\r\n    ],\r\n    authenticatorSelection: {\r\n        userVerification: \"discouraged\",\r\n        authenticatorAttachment: null // 除非用户指定，大部分情况下无需指定\r\n    },\r\n    excludeCredentials, // 自行设置\r\n    timeout: 60000\r\n}</pre>\n<p>然后就是传入 <code>navigator.credentials.create()</code>，拿到 <code>PublicKeyCredential</code>。如果一切顺利，接下来我们就需要考虑如何将返回的内容传回依赖方了。由于我们拿到的很多都是 <code>ArrayBuffer</code>，我们需要将其进行编码。再准备一个工具函数吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function array2b64String(a) {\r\n    return window.btoa(String.fromCharCode(...a));\r\n}</pre>\n<p>然后适当处理，我们就可以得到一个方便传输的 JSON 字符串了：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({publicKey}).then((credentialInfo) =&gt; {\r\n    const publicKeyCredential = {\r\n        id: credentialInfo.id,\r\n        type: credentialInfo.type,\r\n        rawId: array2b64String(new Uint8Array(credentialInfo.rawId)),\r\n        response: {\r\n            clientDataJSON: array2b64String(new Uint8Array(credentialInfo.response.clientDataJSON)),\r\n            attestationObject: array2b64String(new Uint8Array(credentialInfo.response.attestationObject))\r\n        }\r\n    };\r\n    return publicKeyCredential;\r\n}).then(JSON.stringify).then((authenticatorResponseJSON) =&gt; {\r\n    // 可以发送了\r\n}).catch((error) =&gt; {\r\n    console.warn(error); // 捕获错误\r\n})</pre>\n<p>依赖方收到数据以后，还需要做三件事：验证挑战、存储凭证 ID 和存储公钥。如果数据解码顺利，且收到的挑战和之前发送的一致，就可以认为注册成功，将凭证 ID 及公钥与用户关联起来。这一步有很多第三方库可以帮我们做，对于基础实现我们就不深入探究了。</p>\n<blockquote><p>由于不同厂商的认证器的实现方式不同，<strong>我们并不能保证凭证 ID 一定是全局唯一的</strong>，也就是说，凭证 ID 有可能碰撞——即使这些凭证实际上是不同的。依赖方在实现凭证 ID 的存储及查找时，需要注意和用户 ID 结合进行存储或查找，或是直接在注册认证器时在服务器端对比阻止相同的凭证 ID。</p></blockquote>\n<hr><p>接下来就可以进行验证了。某天，用户点击了验证按钮准备登录，于是浏览器发送了验证请求到依赖方，同时附上要登录的用户名。接下来依赖方至少需要发送两项内容给浏览器：<strong>挑战和用户已绑定的凭证 ID 列表（即 <code>allowCredentials</code>）。</strong></p>\n<p>之后前端的处理流程就和注册时基本一致了。只是需要注意验证流程中获取到的 <code>PublicKeyCredential</code> 的结构和注册时的稍有不同。</p>\n<p>当浏览器将数据传回后，依赖方需要做的事情就比之前要麻烦一些了。依赖方需要验证挑战，并用之前存储的公钥验证签名和签名计数。同样地，这一步有很多第三方库可以帮我们做。最后，如果验证全部通过，我们就可以允许用户登录了。</p>\n<p>到目前为止，我们已经实现了一个简单的 WebAuthn 验证服务。不过这只是一个最基础的实现，对于很多高安全要求的身份认证这是远远不够的。因此，我们需要摆脱对第三方库的依赖，深入了解 WebAuthn。你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分，不过对于基础的 WebAuthn 实现，我们的旅程就到这里了。</p>\n<h2>拓展阅读</h2>\n<p>如果你的目标只是快速了解如何开发 WebAuthn，那么你阅读到这里就可以了。同时，上一节例子中的部分代码来自于我为了这篇文章开发的 WordPress 插件 WP-WebAuthn，这个插件可以为你的 WordPress 启用 WebAuthn 无密码登录（并非二步验证），你可以查阅插件的 <a href=\"https://github.com/yrccondor/wp-webauthn\">GitHub 存储库</a>了解更多，也可以自己安装试一试。</p>\n<p>如果你正在使用 Chrome 开发，Chrome 87+ 版本添加了一个 WebAuthn 开发者面板，可以帮助你在没有任何实体验证器的情况下开发 WebAuthn 功能。你可以在 Google 的<a href=\"https://developers.google.com/web/tools/chrome-devtools/webauthn\">这篇文章</a>中了解更多。不够，如果你正在使用 Firefox，很遗憾目前我还没有找到对应的开发工具或是浏览器扩展可用。</p>\n<p>如果你希望了解更多关于非对称加密的数学证明，可以查阅阮一峰老师的<a href=\"http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html\">这篇文章</a>。</p>\n<p>如果你希望了解更多关于 Credential Management API 的信息，可以查阅<a href=\"https://medium.com/dev-channel/sign-in-on-the-web-credential-management-api-and-best-practices-d21aed14b6fe\">这篇文章</a>（英文）。</p>\n<p>如果你希望了解更多 WebAuthn 的细节，可以继续往下阅读。<span></span></p>\n<h1>深入了解 WebAuthn</h1>\n<p>如上文所说，如果摆脱对第三方库的依赖，或是要实现更安全的 WebAuthn，我们必须深入了解 WebAuthn。在这一部分中，我们会详细讨论上文没有提到的一些概念和参数，并了解 WebAuthn 中各类数据的结构以实现解码与验证。先来看一看一些进阶的选项吧。</p>\n<h2>进阶选项</h2>\n<p>没错，上文提到的传入 <code>navigator.credentials.create()</code> 和 <code>navigator.credentials.get()</code> 方法的参数其实只是所有参数的一部分。对于 <code>create()</code>，我们还可以配置这些可选内容（上文提及的已省略）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        rp: {\r\n            icon\r\n        },\r\n        user: {\r\n            icon\r\n        },\r\n        attestation,\r\n        authenticatorSelection: {\r\n            requireResidentKey\r\n        },\r\n        extensions\r\n    }\r\n})</pre>\n</pre>\n<ul>\n<li>\n<code>rp.icon: String</code> 和 <code>user.icon</code>：是的，你可以为依赖方和用户设置图标，可以使用 HTTPS URL 或 Base64，一般长度不能超过 128 字节，不过大部分浏览器不会显示图标，或是有非常小的图片体积限制，所以一般没有使用这一属性的必要</li>\n<li>\n<code>attestation: String</code>：表明依赖方是否需要证明。可选三个值：\n<ul>\n<li>\n<code>none</code>：（默认）不需要证明。如上文所述，依赖方不关心证明，因此认证器不会签名。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n<li>\n<code>indirect</code>：依赖方需要证明，但证明方式可由认证器选择。在支持匿名证明的认证器上，认证器会通过匿名证明的方式签名挑战，并向依赖方提供签名方式等信息</li>\n<li>\n<code>direct</code>：依赖方要求直接证明。此时认证器会使用烧录在认证器中的公钥进行签名，同时向依赖方提供签名方式等信息以供依赖方验证认证器是否可信。更多信息可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节</li>\n</ul>\n</li>\n<li>在 <code>authenticatorSelection</code> 中，我们还可以设置两个可选属性：\n<ul>\n<li>\n<code>authenticatorSelection.requireResidentKey: Boolean</code>：是否要求将私钥钥永久存储于认证器中。默认值为 <code>false</code>。对于 iOS/iPad OS 13，必须设置为 <code>false</code>，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n<li>\n<code>extensions: Object</code>：WebAuthn 扩展，可以提供规范之外的配置和响应。由于实际情况中很少会使用这一特性，我们不会在这篇文章中讨论它</li>\n\n<blockquote><p>将 <code>requireResidentKey</code> 设置为 <code>true</code> 可以实现无用户名的登录，即认证器同时替代了用户名和密码。需要注意的是，尽管大部分认证器可以实现无限对公私钥，<strong>但能永久存储的私钥数量是有限的</strong>（对于 Yubikey，这通常是 25），因此只应在真正需要的时候启用此特性。我们会在“<a href=\"https://flyhigher.top/#login-without-username\">无用户名登录</a>”一节中详细讨论原因。</p></blockquote>\n<blockquote><p><strong>如果你没有高安全需求（如银行交易等），请不要向认证器索取证明</strong>，即将 <code>attestation</code> 设置为 \"none\"。对于普通身份认证来说，要求证明不必要的，且会有浏览器提示打扰到用户。</p></blockquote>\n<blockquote><p>Android 暂时无法实施用户验证，进而会导致依赖方验证失败。你可以在<a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=997538\">这里</a>追踪这个特性的实现情况。</p></blockquote>\n<blockquote>\n<p>对于 <code>extensions</code>，由于目前浏览器支持和应用范围有限，我们不会在这篇文章中涉及，不过你可以看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    uvm: true, // 要求认证器返回用户进行验证的方法\r\n    txAuthSimple: \"Please proceed\" // 在认证器上显示与交易有关的简短消息\r\n}</pre>\n<p>你可以在<a href=\"https://www.w3.org/2019/01/webauthn-extensions.html\">这个页面</a>了解更多关于 <code>extensions</code> 的信息。</p>\n</blockquote>\n<p>对于 <code>get()</code>，我们其实只有一个可选内容没讲了，即 <code>extensions</code>。和上文一样，我们不会在这篇文章中讨论它。</p>\n<p>就这些了！<span></span></p>\n<h2>手动解个码</h2>\n<p>是时候看看如何手动解码了。我们将会在这一节中讨论认证器返回的数据的结构以及如何正确地解码它们。</p>\n<p>首先我们来看看如何处理注册过程中认证器发回的数据。假设所有 <code>ArrayBuffer</code> 类型的值都被正确地以 Base64 编码，且后端已经将 JSON 的字符串解析为字典。先来复习一下，我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"ZRBkDBCEtq...9XY8atOcbg\",\r\n    type: \"public-key\",\r\n    rawId: \"ZRBkDBCEtq...9XY8atOcbg==\",\r\n    response: {\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...i5jcmVhdGUifQ==\",\r\n        attestationObject: \"o2NmbXRkbm9uZWd...xNHuAMzz2LxZA==\"\r\n    }\r\n}</pre>\n<p>这里的 <code>id</code> 就是凭证的 ID，如果验证正确，我们最终要将它存储起来并于用户关联。同时可以看到 Base64 编码后的 <code>rawId</code> 其实和 <code>id</code> 是一致的（不过 <code>id</code> 是 Base64URL 编码的）。而 <code>type</code> 则一定是 \"public-key\"。</p>\n<p>不过，我们主要关心的还是 <code>respose</code> 中的两项内容。首先是 <code>clientDataJSON</code>。它的处理比较简单，看名字就知道，它应该是一个 JSON 字符串。</p>\n<blockquote><p>小技巧：如果你看到一个 Base64 编码的字符串以 \"ey\" 开头，那么它大概率是一个 Base64 编码的 JSON。</p></blockquote>\n<p>将<code>clientDataJSON</code> Base64 解码再 JSON 解码之后我们就能得到一个字典：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"NI4i1vsNmP2KHcmyFnBCKRVQPfHgg34SsYZUOPZY2lM\",\r\n    extra_keys_may_be_added_here: \"do not compare clientDataJSON against a template. See https://goo.gl/yabPex\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>结构一目了然。在这里，我们需要验证三项内容：</p>\n<ul>\n<li>\n<code>challenge</code> 和之前发送的一致</li>\n<li>\n<code>origin</code> 为创建凭证的页面的源（协议+主机名+端口号，并非 URL）</li>\n<li>\n<code>type</code> 为 \"webauthn.create\"</li>\n</ul>\n<p>同时可以注意到有一个奇怪的 <code>extra_keys_may_be_added_here</code>。这其实是 Google 在 Chrome 中搞的一点小把戏，有一定概率会出现，提醒我们需要将 JSON 解析后再验证键值以防额外插入的键值影响验证。具体信息你可以访问那个 URL 看一看。</p>\n<p>对于 Firefox，我们会多得到两项 <code>clientExtensions</code> 和 <code>hashAlgorithm</code> ，分别指明了客户端扩展数据和签名算法。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"3-4\">{\r\n    challenge: \"dg6ost6ujhAA0g6WqLe-SOOH-tbhvjW9Sp90aPKlLJI\",\r\n    clientExtensions: {},\r\n    hashAlgorithm: \"SHA-256\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>由于本文不考虑扩展数据，因此我们可以不考虑 <code>clientExtensions</code>。同时由于目前规范中指定的签名算法只有 SHA-256 一种，因此现阶段我们也可以简单地忽略 <code>hashAlgorithm</code>。</p>\n<p><code>clientDataJSON</code> 很简单地就处理完了。接下来我们要来看看 <code>attestationObject</code>。先来看看 <code>attestationObject</code> 的结构图示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\" alt=\"attestationObject 的结构\" width=\"1056\" height=\"532\" class=\"aligncenter size-full wp-image-2245\"></a>\n<p><code>attestationObject</code> 是 CBOR 编码后再被 Base64 编码的，因此我们需要额外对其进行 CBOR 解码。</p>\n<blockquote><p>CBOR (Concise Binary Object Representation, 简明二进制对象表示) 是一种多应用于物联网领域的编码方式，你可以将它看作体积更小、更方便物联网传输的二进制 JSON。大部分语言都可以找到对应的 CBOR 解码库。</p></blockquote>\n<p>我们当然不会手解 CBOR，直接来看看解开之后的样子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"none\",\r\n    attStmt: {},\r\n    authData: [211, 217, 43, 24, 199, ..., 97, 238, 166, 67, 107]\r\n}</pre>\n<p>这些键值的含义如下：</p>\n<ul>\n<li>\n<code>fmt</code>：标明证明的格式。WebAuthn 预定义了几种格式，分别为：\n<ul>\n<li>\n<code>none</code>：没有证明</li>\n<li>\n<code>packed</code>：为 WebAuthn 优化的证明格式</li>\n<li>\n<code>android-safetynet</code>：Android 使用的格式</li>\n<li>\n<code>android-key</code>：又是 Android 使用的格式</li>\n<li>\n<code>fido-u2f</code>：FIDO U2F 认证器使用的格式</li>\n<li>\n<code>tpm</code>：TPM 可信平台模块使用的格式</li>\n</ul>\n</li>\n<li>\n<code>attStmt</code>：证明对象，具体格式根据 <code>fmt</code> 的不同会有所不同</li>\n<li>\n<code>authData</code>：包含公钥、签名计数等来自认证器的数据</li>\n</ul>\n<p>诶，例子里的 <code>attStmt</code> 怎么是空的？还记得之前说的吗？大部分情况下，<strong>如果依赖方不要求证明，那么认证器不会签名挑战</strong>，于是 <code>fmt</code> 会变为 \"none\"，<code>attstmt</code> 会为空。如果不是高安全要求，我们可以只对这一种情况做支持。</p>\n<blockquote><p>注意，部分情况下 Firefox 会在不要求证明（即 <code>attestation</code> 为 \"none\"）时会返回 <code>fmt</code> 为 \"packed\" 的证明。<strong>这是符合规范的。</strong>此时认证器会进行自证明，你可以视情况进行处理。具体可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>对于非 \"none\" 的 <code>fmt</code> 我们稍后再谈，现在我们先来看看 <code>authData</code>。来复习一下 <code>authData</code> 的结构：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\" alt=\"authData 的结构\" width=\"1056\" height=\"384\" class=\"aligncenter size-full wp-image-2240\"></a>\n<p>对于它的解码比较简单粗暴，我们要做的就是根据图示将它切开，然后适当地转换类型。其中各部分的含义如下：</p>\n<ul>\n<li>\n<code>rpIdHash</code>：如其名，SHA-256 的 <code>rpId</code>，长度 32 字节</li>\n<li>\n<code>flags</code>：标识认证状态，长度 1 字节。其中 8 位分别为：\n<ul>\n<li>\n<code>ED</code>：是否有扩展数据</li>\n<li>\n<code>AT</code>：是否包含 <code>attestedCredentialData</code>。通常注册认证器时会包含 <code>attestedCredentialData</code>，而验证时不包含</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>\n<code>UV</code>：用户是否已验证</li>\n<li>保留位</li>\n<li>\n<code>UP</code>：用户是否在场</li>\n</ul>\n</li>\n<li>\n<code>signCount</code>：签名计数，长度 4 字节</li>\n<li>\n<code>attestedCredentialData</code>：包含公钥等凭据数据，变长。其结构如下：\n<ul>\n<li>\n<code>aaguid</code>：认证器的 AAGUID (Authenticator Attestation GUID)，对于同一型号的认证器，它们的 AAGUID 是相同的</li>\n<li>\n<code>credentialIdLength</code>：标识 <code>credentialId</code> 的长度，长度 2 字节</li>\n<li>\n<code>credentialId</code>：凭证 ID，和 <code>rawId</code> 一致，长度由 <code>credentialIdLength</code> 定义</li>\n<li>\n<code>credentialPublicKey</code>：CBOR 编码的 COSE 格式的凭证公钥，变长</li>\n</ul>\n</li>\n<li>\n<code>extensions</code>：扩展数据，变长，本文不讨论</li>\n</ul>\n<blockquote><p>出于隐私考虑，如果不要求证明，认证器会以 0 填充 AAGUID。</p></blockquote>\n<p>如果你的后端在使用 Node.js，这里有个工具函数可以帮你完成这一步（不考虑 <code>extensions</code>）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function parseAuthData(buffer){\r\n    let rpIdHash = buffer.slice(0, 32);\r\n    buffer = buffer.slice(32);\r\n  \r\n    let flagsBuf = buffer.slice(0, 1);\r\n    buffer = buffer.slice(1);\r\n\r\n    let flagsInt = flagsBuf[0];\r\n    let flags = {\r\n        up: !!(flagsInt &amp; 0x01),\r\n        uv: !!(flagsInt &amp; 0x04),\r\n        at: !!(flagsInt &amp; 0x40),\r\n        ed: !!(flagsInt &amp; 0x80),\r\n        flagsInt\r\n    }\r\n\r\n    let counterBuf = buffer.slice(0, 4);\r\n    buffer = buffer.slice(4);\r\n  \r\n    let counter = counterBuf.readUInt32BE(0);\r\n\r\n    let aaguid = undefined;\r\n    let credID = undefined;\r\n    let COSEPublicKey = undefined;\r\n\r\n    if(flags.at) {\r\n        aaguid = buffer.slice(0, 16);\r\n        buffer = buffer.slice(16);\r\n\r\n        let credIDLenBuf = buffer.slice(0, 2);\r\n        buffer = buffer.slice(2);\r\n\r\n        let credIDLen = credIDLenBuf.readUInt16BE(0);\r\n        credID = buffer.slice(0, credIDLen);\r\n\r\n        buffer = buffer.slice(credIDLen);\r\n        COSEPublicKey = buffer;\r\n    }\r\n\r\n    return {rpIdHash, flagsBuf, flags, counter, counterBuf, aaguid, credID, COSEPublicKey}\r\n}</pre>\n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>解开后，依赖方至少需要做四件事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>存储签名计数</li>\n<li>存储公钥</li>\n</ol>\n<blockquote><p>签名计数不一定从 0 开始。</p></blockquote>\n<p>对于公钥，也就是 <code>credentialPublicKey</code>，我们需要多一次 CBOR 解码，然后就可以得到类似这样的公钥：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    kty: \"EC\",\r\n    alg: \"ECDSA_w_SHA256\",\r\n    crv: \"P-256\",\r\n    x: \"ZGQALNfqo0L7HFYQHFHCS/X5db49z0ePnuQEs3w3X8w=\",\r\n    y: \"6qYxhnjYuez/Q8N6vX7nIIGfxFWdZ25NzQfZYuYOalA=\"\r\n}</pre>\n<p>然后可以选择适当的方法将其存储起来，之后的步骤本文就不再赘述了。现在，将目光拉回来，让我们看看包含证明的 <code>attestationObject</code> 是怎么样的。我们来看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"packed\",\r\n    attStmt: {\r\n        alg: -7,\r\n        sig: [48, 70, 2, 33, 0, ..., 132, 78, 46, 100, 21],\r\n        x5c: [\r\n            [48, 130, 2, 189, 48, 130, 1, 165, 160, 3, ..., 177, 48, 125, 191, 145, 24, 225, 169, 41, 248]\r\n        ]\r\n    },\r\n    authData: [211, 217, 43, 24, 199, ..., 158, 54, 87, 126, 54]\r\n}</pre>\n<p>这里有一个使用 \"packed\" 格式的证明。此时，<code>attStmt</code> 中包含三个值：</p>\n<ul>\n<li>\n<code>alg</code>：签名算法</li>\n<li>\n<code>sig</code>：签名值</li>\n<li>\n<code>x5c</code>：X.509 编码的证书链</li>\n</ul>\n<p>我们不会在这一节中详述对签名的验证。要了解更多信息，你可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。现在，让我们来看看如何处理验证过程中认证器发回的数据。我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"hmqdxPLit9...BWeVxZqdvU\",\r\n    type: \"public-key\",\r\n    rawId: \"hmqdxPLit9V...BWeVxZqdvU=\",\r\n    response: {\r\n        authenticatorData: \"09krGMcWTf...UFAAAABA==\",\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...XRobi5nZXQifQ==\",\r\n        signature: \"UsXZV3pvT3np8btj6V0g...WBkaqyt88DrD40qh+A==\",\r\n        userHandle: \"MmYxNWYzZjQyZjM...Tg2ZDY4NzhlNw==\"\r\n    }\r\n}</pre>\n<p><code>id</code>, <code>rawId</code> 和 <code>type</code> 和之前一样，这里就不再赘述了。让我们来看看 <code>response</code>。首先是 <code>clientDataJSON</code>，和之前的解法一样，要验证的内容也一样，只是 <code>type</code> 从 \"webauthn.create\" 变成了 \"webauthn.get\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"bnkd2CmrEuvKnAFXs2QlC3SKlg4XFvGtP4HJL1yEWyU\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.get\"\r\n}</pre>\n<p>然后是 <code>userHandle</code>。前面讲过，这是认证器在创建凭证时的用户 ID。如果用户在使用 U2F 认证器，很可能这一项为空，所以大部分情况下我们不关心这一项。</p>\n<p>接着来看 <code>authenticatorData</code>。这其实就是之前的 <code>attestedCredentialData</code>，只是这次不包含公钥。以相同的方式切开数据，我们应该可以得到 <code>rpIdHash</code>, <code>flags</code>和 <code>signCount</code> 三项。此时，依赖方至少需要做这三样事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>验证签名计数大于之前存储的计数，并更新存储的计数</li>\n</ol>\n<blockquote><p>如果签名计数比之前的小，那么这个认证器很可能是伪造的，应该中止验证并返回验证失败。同时，签名计数不一定每次按 1 递增，通常只要计数比此前的大就认为计数检查通过。</p></blockquote>\n<p>最后，我们来看 <code>signature</code>，也就是签名。不过这个签名不是简单的对挑战的签名，具体算法如图所示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\" alt=\"签名过程\" width=\"1034\" height=\"587\" class=\"aligncenter size-full wp-image-2231\"></a>\n<p>计算签名时，认证器会将 <code>authenticatorData</code> 与 <code>clientDataHash</code>（也就是 <code>clientDataJSON</code> 的 SHA-256 Hash）拼接起来，并使用对应的私钥签名。依赖方应该使用对应的公钥将其解密，并验证内容是否是 <code>authenticatorData</code> 与 <code>clientDataHash</code> 的拼接。这部分的计算不在本文的讨论范围内。</p>\n<p>最后，如果全部验证通过，返回验证成功。<span></span></p>\n<h2>验证认证器</h2>\n<p>WebAuthn 已经很安全了，但有的时候我们还要让它更安全一点。比如，如果用户在使用伪造的或是自制的认证器，认证器的安全性就得不到保证。此时，依赖方就需要验证认证器是否是可信的认证器。</p>\n<blockquote><p>这一过程仅发生在注册认证器时。此时，如果认证器验证通过，就可以存储公钥，后续步骤和之前描述的一致。</p></blockquote>\n<blockquote><p>再次说明，如果不是对安全性有极高的要求，向认证器索取证明以验证认证器是否可信是没有必要的。此外，验证认证器需要依赖方自行维护可信认证器列表，大大增加了维护的复杂性。</p></blockquote>\n<p>在调用 <code>navigator.credentials.create()</code> 时，我们可以将 <code>attestation</code> 设置为非 \"none\" 来向认证器索取证明。除无证明外，WebAuthn 定义了四种证明方式：</p>\n<ul>\n<li>Basic Attestation (Basic) ：基础的证明方式，认证器会使用认证器私钥签名</li>\n<li>Self Attestation (Self) ：自证明，认证器会使用凭证私钥签名</li>\n<li>Attestation CA (AttCA) ：认证器会使用多个证明私钥之一签名</li>\n<li>Elliptic Curve based Direct Anonymous Attestation (ECDAA) ：通过 <a href=\"https://en.wikipedia.org/wiki/Direct_Anonymous_Attestation\">DAA</a> 实现的匿名证明</li>\n</ul>\n<blockquote><p>和验证过程一样，这里签名的目标是 <code>authenticatorData</code> 和 <code>clientDataHash</code> 的连接。</p></blockquote>\n<p>还记得 <code>create()</code> 时 <code>attestation</code> 可选的三个值吗？这个值会决定认证器最终使用哪种方式进行证明。复习一下：</p>\n<ul>\n<li>\n<code>none</code>：大部分情况下认证器会选择不进行证明，部分认证器会进行自证明。此时 AAGUID 会被 0 填充</li>\n<li>\n<code>indirect</code>：认证器会试图通过替换 AAGUID 和选择合适的证明方式来进行匿名证明，具体方式由认证器选择</li>\n<li>\n<code>direct</code>：认证器会提供最直接的证明信息</li>\n</ul>\n<p>注意，大部分情况下，当认证器需要向依赖方证明自己可信时需要提供认证器公钥，<strong>这会触发浏览器提示，只有用户同意后认证器才会进行证明，否则认证器将不提供证明。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\" alt=\"浏览器提示\" width=\"446\" height=\"283\" class=\"aligncenter size-full wp-image-2217\"></a>\n<blockquote><p>为什么浏览器会说“安全密钥的品牌和型号”？事实上，为了避免用户通过认证器证书被跨依赖方追踪，FIDO 要求使用相同认证器证书的认证器的数量不能少于 100,000。于是大部分认证器厂商会选择<strong>让同一型号的认证器共用同一份证书。</strong>因此，浏览器的会询问用户是否同意“查看安全密钥的品牌和型号”。</p></blockquote>\n<blockquote><p>Android Safety Net 不会向用户询问是否同意，而是会静默进行证明。</p></blockquote>\n<p>当证明不为空时，依赖方收到数据后根据 <code>attestationObject.fmt</code> 的不同，需要选择不同的验证方式来验证认证器的可信情况。出于篇幅原因，这里我们不会讨论每一种 <code>fmt</code> 的验证方式，更多信息你可以查阅 <a href=\"https://www.w3.org/TR/webauthn/#defined-attestation-formats\">W3C 文档</a>。</p>\n<p>当 <code>fmt</code> 为 <code>packed</code> 时，<code>attestationObject.attStmt</code> 可能会有三种格式：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// 自证明\r\n{\r\n    alg, // 算法\r\n    sig // 签名\r\n}\r\n// 基础或证明 CA 证明\r\n{\r\n    alg,\r\n    sig,\r\n    x5c // X.509 证书链\r\n}\r\n// 椭圆曲线证明\r\n{\r\n    alg,\r\n    sig,\r\n    ecdaaKeyId // ECDAA-Issuer 公钥标识符\r\n}</pre>\n<p>此时，依赖方需要检查证书符合预期格式并检查证书是否在可信链上。首先，如果证明中既没有 <code>ecdaaKeyId</code> 也没有 <code>x5c</code>，就说明这个证明使用的是自证明，只需使用认证器提供的公钥验证即可；如果有 <code>x5c</code>，那么就需要验证 <code>x5c</code> 中的证书是否在可信链上。将 <code>x5c</code> 中的每个证书以 Base64 编码，按 64 个字符切开，并在头尾加上 <code>-----BEGIN CERTIFICATE-----</code> 和 <code>-----END CERTIFICATE-----</code>就能得到一个证书字符串了。之后，依赖方需要验证证书是否可信。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function base64ToPem(b64cert){\r\n    let pemcert = '';\r\n    for(let i = 0; i \n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>至于 <code>ecdaaKeyId</code>，由于目前应用较少，处理方法可能需要你另寻资料了。检查证书的具体步骤已经超出了本文的范围，具体可以查阅<a href=\"https://medium.com/@herrjemand/verifying-fido2-packed-attestation-a067a9b2facd\">这篇文章</a>（英文）。</p>\n<blockquote><p>你可以在 <a href=\"https://fidoalliance.org/metadata/\">FIDO Metadata Service</a> 找到各大厂商认证器的可信证书链。</p></blockquote>\n<p>当在 Android 上调起 WebAuthn 时，大部分情况下 <code>fmt</code> 将会为 <code>safety-net</code>。此时 <code>attestationObject.attStmt</code> 的结构会是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    ver: \"200616037\",\r\n    response: {\r\n        type: \"Buffer\",\r\n        data: [101, 121, 74, 104, 98, ..., 115, 104, 104, 82, 65]\r\n    }\r\n}</pre>\n<p>此时，<code>clientDataJSON</code> 中还会出现 <code>androidPackageName</code> 键，值是调起 WebAuthn 验证的应用的包名，如 Chrome 就是 \"com.android.chrome\"。</p>\n<p>在这个证明中，<code>data</code> 其实是一个 JWT 字符串，我们可以将它编码为字符串并将其按照 JWT 进行解码（别忘了验证 JWT 签名）。最终我们会得到一个类似这样的 Payload：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    nonce: \"0QAurN4F9wik6GEkblDJhGuf4kuaqZn5zaaxlvD1hlA=\",\r\n    timestampMs: 1584950686460,\r\n    apkPackageName: \"com.google.android.gms\",\r\n    apkDigestSha256: \"2BQHno+bmWWwdLUYylS8HLt5ESJzci3nt2uui71ojyE=\",\r\n    ctsProfileMatch: true,\r\n    apkCertificateDigestSha256: [\r\n        \"8P1sW0EPicslw7UzRsiXL64w+O50Ed+RBICtay2g24M=\"\r\n    ],\r\n    basicIntegrity: true,\r\n    evaluationType: \"BASIC\"\r\n}</pre>\n<p>其中包含了有关设备状态的一些信息。比如说，如果 <code>ctsProfileMatch</code> 为 <code>false</code>，那么该设备很有可能被 root 了。对于高安全要求的场景，我们可以视情况进行验证。</p>\n<p>同时我们可以在 JWT Header 中验证证明的有效性。我们应该能取得这样的 Header：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    alg: \"RS256\",\r\n    x5c: [\r\n        \"MIIFkzCCBHugAwIBAgIR...uvlyjOwAzXuMu7M+PWRc\",\r\n        \"MIIESjCCAzKgAwIBAgIN...UK4v4ZUN80atnZz1yg==\"\r\n    ]\r\n}</pre>\n<p>这里的结构就和上方的 <code>x5c</code> 验证类似了。具体步骤可以参考<a href=\"https://medium.com/@herrjemand/verifying-fido2-safetynet-attestation-bd261ce1978d\">这篇文章</a>（英文）。</p>\n<p>其他所有格式的验证方式也都可以在<a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">这篇文章</a>（英文）中找到。<span></span></p>\n<h2>无用户名登录</h2>\n<p>认证器已经代替了密码，可是这还不够！在进行第一因素认证（即使用 WebAuthn 登录）时，我们还是需要输入用户名，然后才能进行身份认证。懒惰是第一生产力，我们能不能不输入用户名就进行身份认证呢？实际上，大部分认证器都允许我们无用户名登录。<strong>而这一特性的核心就是 Resident Key 客户端密钥驻留。</strong></p>\n<p>你可以思考一下，为什么普通的 WebAuthn 为什么不能实现无用户名登录？事实上，大部分认证器为了实现无限对公私钥，会将私钥通过 Key Warp 等技术加密后包含在凭证 ID 中发送给依赖方，这样认证器本身就不用存储任何信息。不过，这就导致需要身份认证时，依赖方必须通过用户名找到对应的凭证 ID，将其发送给认证器以供其算出私钥。</p>\n<blockquote><p>Yubikey 实现了一个基于 HMAC 的算法，认证器可以在私钥不离开认证器的前提下（常规的 Key Warp 算法中实际上私钥离开了认证器）通过一些输入和凭证 ID 重新计算私钥，你可以阅读<a href=\"https://www.yubico.com/blog/yubicos-u2f-key-wrapping/\">这篇文章</a>了解更多。</p></blockquote>\n<blockquote><p>客户端通过凭证 ID 查找对应认证器的算法根据系统的不同是不同的。通常凭证 ID 中会包含认证器信息，因此系统可以通过凭证 ID 找到对应的认证器。</p></blockquote>\n<p>要避免输入用户名，我们可以要求认证器将私钥在自己的内存中也存储一份。这样，依赖方无需提供凭证 ID，认证器就可以通过依赖方 ID 找到所需的私钥并签名公钥。以下是具体流程：</p>\n<p>注册时：</p>\n<ol>\n<li>依赖方请求新建凭证，同时要求启用客户端密钥</li>\n<li>认证器生成一对公私钥，并将私钥存储在永久内存中且与依赖方 ID 及用户 ID 绑定，随后将公钥发送给依赖方以供存储</li>\n<li>依赖方将用户 ID 即公钥与用户绑定</li>\n</ol><p>验证时：</p>\n<ol>\n<li>依赖方请求验证，但不必提供除依赖方 ID 以外的更多信息</li>\n<li>用户选择认证器</li>\n<li>认证器根据依赖方 ID 找到对应私钥</li>\n<li>如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录</li>\n<li>确定私钥后，认证器签名挑战并将其返回，同时返回用户 ID</li>\n<li>依赖方通过用户 ID 找到对应用户并用对应公钥检查签名，正确则允许对应用户登录</li>\n</ol><blockquote><p>可以看到，这个特性同时要求认证器存储用户 ID，即上面提到过的 <code>userHandle</code>。依赖方需要根据此信息找到对应用户，因此不支持 <code>userHandle</code> 的 U2F 认证器无法进行无用户名登录。</p></blockquote>\n<blockquote><p>如之前所说，<strong>认证器能永久存储的私钥数量是有限的</strong>，因此只应在真正需要无用户名登录的时候启用此特性。</p></blockquote>\n<blockquote><p>目前暂时没有办法检测认证器是否支持客户端密钥驻留，因此在无用户名验证失败时应 fallback 至常规的 WebAuthn 验证，即向用户询问用户名。</p></blockquote>\n<p>现在让我们来看看如何实现这一特性吧。首先，调用 <code>navigator.credentials.create()</code> 时我们需要注意两个参数：<code>requireResidentKey</code> 必须为 <code>true</code>，<code>userVerification</code> 必须为 \"required\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"5-6\">navigator.credentials.create({\r\n    publicKey: {\r\n        ...\r\n        authenticatorSelection: {\r\n            requireResidentKey: true,\r\n            userVerification: \"required\"\r\n            ...\r\n        },\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Windows Hello <strong>似乎</strong>会存储所有已注册的凭据，因此无论是否指定 <code>requireResidentKey</code>，你都可以通过 Windows Hello 进行无用户名登录。</p></blockquote>\n<p>随后，浏览器会询问用户是否允许认证器存储私钥。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\" alt=\"浏览器提示\" width=\"445\" height=\"285\" class=\"aligncenter size-full wp-image-2208\"></a>\n<p>如果用户同意，认证器会存储私钥，并和普通的 WebAuthn 一样返回信息。不过，依赖方收到数据之后，只需将公钥、用户 ID 与用户关联起来，而不必再将凭证 ID 与用户关联起来。至此注册完成。</p>\n<p>之后，在用户请求登录时，无需再向依赖方提供用户名。同时在传入 <code>navigator.credentials.get()</code> 的参数中也有两个需要注意：<code>userVerification</code> 必须为 \"required\"，同时 <code>allowCredentials</code> 必须为空。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"4-5\">navigator.credentials.get({\r\n    publicKey: {\r\n        ...\r\n        userVerification: \"required\",\r\n        allowCredentials: [],\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Android 暂不支持无用户名验证，空的 <code>allowCredentials</code> 会导致浏览器返回 <code>NotSupportedError</code> 错误。</p></blockquote>\n<p>此时，认证器会根据依赖方 ID 找到对应的私钥。如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录。用户选择后，认证器就会使用对应的私钥签名挑战并将其返回。此时，<code>userHandle</code> 一定不为空。</p>\n<p>依赖方收到数据后，需要将 <code>userHandle</code> 作为用户 ID 找到对应的用户，并使用对应的公钥验证签名。如果验证成功，则认为对应的用户身份认证成功，依赖方可以允许其登录。至此验证结束。</p>\n<blockquote><p>有的时候你可能会需要清除认证器中的密钥。绝大多数认证器都提供了对应的软件以供清除存储的密钥，但大部分情况下这会重置整个认证器，这意味着相关认证器此前的所有凭证均会失效。因此建议不要将日常使用的认证器作为开发测试用的认证器。</p></blockquote>\n<h2>从 U2F 认证迁移</h2>\n<p>如果你的服务此前提供了 U2F 第二因素认证，你可能会希望在将依赖方从 U2F 升级到 WebAuthn 时用户此前注册的 U2F 认证器仍然可用而无需重新注册。由于 WebAuthn 向后兼容 U2F 设备，用户是可以继续使用原有的 U2F 认证器的。不过，由于 WebAuthn 的依赖方 ID 与 U2F 的 <code>appid</code> 并不一定相同，你需要将原有的 U2F <code>appid</code> 随 WebAuthn 流程一起传递给认证器，认证器才能使用正确的私钥进行响应。</p>\n<p>要实现这一点，我们只需要在注册及认证仪式中使用 WebAuthn 的 <code>appid</code> 扩展。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    appid: \"https://example.com\" //U2F appid\r\n}</pre>\n<p>此时认证器便可以得到正确的私钥，之后的流程与正常情况一致；依赖方除了正常的 WebAuthn 流程外，不需要再做任何其它操作。</p>\n<h2>拓展阅读</h2>\n<p>我们的 WebAuthn 之旅到这里就真的结束了。不过，你仍然可以自行探究，了解更多。<strong>本文只是一个粗浅的使用指南</strong>，而被称为“Web 身份认证的未来”的 WebAuthn 的深层还要很多细节值得我们挖掘学习，不过本文不会再继续讨论了。</p>\n<p>如果你想了解更多关于 WebAuthn 的信息，最好的方法是直接阅读 <a href=\"https://www.w3.org/TR/webauthn\">W3C 规范</a>。此外，Yubico 也提供了不错的 <a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn 文档</a>。</p>\n<p>要了解更多认证器存储凭证的信息，你可以阅读<a href=\"https://duo.com/labs/tech-notes/how-security-keys-store-credentials\">这篇文章</a>（英文）。</p>\n<p>如果你想了解更多 Android Safety Net 是怎样运作的，可以观看<a href=\"https://youtu.be/8lv_9mydrjg\">这个视频</a>，并通过 <a href=\"https://developer.android.com/training/safetynet/attestation\">Google 的文档</a>了解 Android Safety Net 的更多信息。</p>\n<p>如果你想方便地调试 WebAuthn，<a href=\"https://webauthn.me/\">webauthn.me</a> 提供了一个非常直观方便的<a href=\"https://webauthn.me/debugger\">调试器</a>。</p>\n<h1>参考资料</h1>\n<p><a href=\"https://www.w3.org/TR/webauthn\">WebAuthn Level 1 规范 - W3C</a><br><a href=\"https://github.com/w3c/webauthn\">WebAuthn Level 2 草案 - W3C</a><br><a href=\"https://blog.techbridge.cc/2019/08/17/webauthn-intro/\">一起来了解Web Authentication - TechBridge 技术共笔部落格</a><br><a href=\"https://medium.com/@herrjemand/introduction-to-webauthn-api-5fd1fb46c285\">Introduction to WebAuthn API - Medium</a><br><a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">WebAuthn/FIDO2: Verifying responses - Medium</a><br><a href=\"https://obeta.me/posts/2019-03-01/WebAuthn%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8\">WebAuthn介绍与使用 - obeta</a><br><a href=\"https://webauthn.io/\">webauthn.io</a><br><a href=\"https://webauthn.guide/\">webauthn.guide</a><br><a href=\"https://webauthn.me/\">webauthn.me</a><br><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion\">Attestation and Assertion - MDN</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Authentication_API\">Web Authentication API - MDN</a>（顺便翻译了一半）<br><a href=\"https://fidoalliance.org/fido-technotes-the-truth-about-attestation/\">FIDO TechNotes: The Truth about Attestation - FIDO Alliance</a><br><a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn Developer Guide - Yubico</a><br><a href=\"https://en.wikipedia.org/wiki/WebAuthn\">WebAuthn - Wikipedia</a><br><a href=\"https://techcommunity.microsoft.com/t5/identity-standards-blog/all-about-fido2-ctap2-and-webauthn/ba-p/288910\">All about FIDO2, CTAP2 and WebAuthn - Microsoft Tech Community</a><br><a href=\"https://webauthn-doc.spomky-labs.com/\">Webauthn Framework</a><br><a href=\"https://zhuanlan.zhihu.com/p/25279015\">如何开发支持 FIDO U2F 登录的网站 - 知乎专栏</a><br></p></pre>\n","link":"https://flyhigher.top/develop/2160.html"},{"title":"NLP 找门：用朴素贝叶斯进行文本分类","date":"2020-01-29 11:39:58","description":"\n<blockquote>\n<p>有一天，神收到了一封垃圾邮件，于是世界上就有了朴素贝叶斯算法。</p>\n<footer>——我瞎编的</footer>\n</blockquote>\n<p>为什么这篇文章的标题是 NLP 找门呢？因为如果你看完了这篇文章，你就可以<strong>准备入门</strong>自然语言处理 (<strong>N</strong>atural <strong>L</strong>anguage <strong>P</strong>rocessing) 了。我会把这篇文章当作一篇彻彻底底的 NLP 入门文章来写，尽量避免“专业高端”词汇和“全是奇怪符号”的式子，这样<strong>只要你有高中数学基础</strong>，就能毫无压力地看完这篇文章，学会使用朴素贝叶斯分类算法分类文本。</p>\n<p>让我们开始吧。</p>\n<h1>所以，啥是朴素贝叶斯？</h1>\n<p>简单来说，朴素贝叶斯 (Naïve Bayes) <strong>是一个简单但高效的分类算法</strong>，在进行不复杂的文本分类时高效且拥有不低的准确度，判断垃圾邮件就是用朴素贝叶斯进行文本分类的一个经典例子。当然朴素贝叶斯分类不仅能用在 NLP 中，在许多分类问题中朴素贝叶斯也有非常好的效果，但我们今天只关注它在 NLP 中的应用。</p>\n<p>要了解朴素贝叶斯，我们要先来了解一下贝叶斯定理。</p>\n<blockquote>\n<p>每增加一个数学公式都会使读者减半。</p>\n<footer>——霍金</footer>\n</blockquote>\n<p>那么，就让我们先来看看贝叶斯定理的公式吧（笑</p>\n<p>$$P(A|B) = \\frac{P(AB)}{P(B)} = \\frac{P(B|A)P(A)}{P(B)}$$</p>\n<p>其实还是很简单的，运用高中的条件概率知识就能理解。本质上，贝叶斯定理给出了一种方法，使得我们可以在 \\(P(A|B)\\) 和 \\(P(B|A)\\) 之间互相转换，因为通常情况下它们是不一样的。</p>\n<p>要更好地理解，请考虑这样一个例子：</p>\n<blockquote><p>假设有一个学校图书馆，图书管理员正为找不到某本书而发愁。已知老师有 70% 的意愿借走这本书，而是学生的意愿是 30%，这个学校的师生比例是 1:10，那么借走这本书的人是老师的概率有多大？</p></blockquote>\n<p>设学校总人数为 \\(T\\)，我们可以很容易地写出这样的一个式子：</p>\n<p>$$\\begin{align} P &amp; = \\frac{T\\cdot\\frac{1}{11}\\cdot 70\\%}{T\\cdot\\frac{1}{11}\\cdot 70\\%+T\\cdot\\frac{10}{11}\\cdot 30\\%} \\\\ &amp; = \\frac{70\\%}{70\\%+10\\times30\\%} \\\\ &amp; = \\frac{7}{37} \\end{align}$$</p>\n<p>这就是贝叶斯定理了！等等，你可能会挠挠头，这哪里是贝叶斯了？别急，如果我们把最上面的式子换个字母的话...</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>在这里，\\(H\\) 指 Hypothesis，即假设，而 \\(E\\) 指 Evidence，即证据。这样，这个式子就很好理解了，在我们上面的例子里，借走书是证据，那么 \\(P(E)\\) 就是某个人选择借走这本书的概率；这个人是老师是假设，那么这个人是老师的概率是 \\(P(H)\\)。<strong>注意这里的概率指在学校中抽一个人是老师的概率，并不是“在借走书的前提下”这个人是老师的概率</strong>，而“在借走书的前提下”这个人是老师的概率应该是 \\(P(H|E)\\)，也正是我们要求的概率。同样地，而“这个人是老师”的前提下借走书的概率就是 \\(P(E|H)\\) 了。</p>\n<p>那么再来看看上面我们凭小学知识就列出的计算式，如果把里面的具体数据换成概率来表示的话，这个式子就会变成...</p>\n<p>$$P(H|E) = \\frac{T\\cdot P(E|H)P(H)}{T\\cdot P(E|H)P(H) + T\\cdot P(E|\\neg H)P(\\neg H)}$$</p>\n<p>好吧，这里解释一下，\\(\\neg\\) 符号表示“非”，所以 \\(P(E|\\neg H)\\) 表示在“这个人不是老师”的前提下借走书的概率。而 \\(T\\cdot P(E|H)P(H)\\) + \\(T\\cdot P(E|\\neg H)P(\\neg H)\\)，即“可能借走书的老师的数量 + 可能借走书的学生的数量”，就是“可能借走书的人的数量”了，也就是 \\(T\\cdot P(E)\\)。上下消去 \\(T\\)，我们就能得到上面的式子了。</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>这就是贝叶斯了定理。如果你还是不太清楚，可以去看看 3Blue1Brown 的<a href=\"https://www.bilibili.com/video/av84799361\">这个视频</a>，图形化的讲解会清晰很多。</p>\n<p>这里我要提一下这个式子里各部分的专有名称了（“专业高端”词汇警告），你可以不记住，直接看后面。</p>\n<ul>\n<li>\\(P(H|E)\\) 叫做 \\(H\\) 的<strong>后验概率</strong>，反之亦然</li>\n<li>\\(P(H)\\) 叫做 \\(H\\) 的<strong>先验概率</strong>，反之亦然</li>\n<li>特别地，我们把 \\(P(E|H)\\) 称作<strong>“似然值”</strong>，即 likelihood</li>\n</ul>\n<p>那什么是朴素贝叶斯呢？按上面所说的，朴素贝叶斯是一种分类算法。简单来说，朴素贝叶斯将一个对象的各个特征考虑为互相独立，然后根据这些特征的概率的乘积来判断对象所属的分类。基本原理如下：</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)} \\propto P(E|H)P(H) = P(H)\\prod_{i}P(W_i|H)$$</p>\n<p>在这里，\\(W_i\\) 指某一对象的第 \\(i\\) 个特征，对于文本分类来说，这就是一段文本中的某个单词。</p>\n<p>朴素贝叶斯之所以“朴素”，是因为它要求<strong>各个特征间是独立的</strong>，在文本分类中也就是各个单词之间互不干扰。虽然思路简单的代价是适用范围变窄，不过由于这样的简化在很多情况下已经足够了，因此实际上朴素贝叶斯的应用范围非常广。<del>你看朴素贝叶斯 <strong>N</strong>aïve <strong>B</strong>ayes 的缩写都是 NB 了，能不厉害吗（逃</del></p>\n<h1>那么，咋分类啊</h1>\n<p>看来你这下完全听懂了呢（笑），是时候看看如何在 NLP 中应用朴素贝叶斯了。和上面一样，我们用一个具体的例子来说明。我们的目标是让电脑学会分类美国共和党和民主党的演讲稿，由于两个党派的演讲风格不同，所以这样的分类在理论上是可行的。</p>\n<div class=\"wp-block-file\">\n<a href=\"https://acdn.flyhigher.top/nlp/material.zip\" download>material.zip</a><a href=\"https://acdn.flyhigher.top/nlp/material.zip\" class=\"wp-block-file__button\" download>下载</a>\n</div>\n<p>上面我们要用到的数据集，你可以下载下来一起动手玩一玩。先说一下数据集的数据结构吧，压缩包里有两个文件，<code>train.txt</code> 将会被当作训练数据集，而 <code>test.txt</code> 则会作为训练结束后的验证数据集。两个文本文件里数据的结构是类似的，就像这样：</p>\n<pre class=\"EnlighterJSRAW\">BLUE WELL I AM SO HONORED AND PERSONALLY UNKNOWNWORD TO BE HERE...\r\nRED THANK YOU . THIS IS QUITE AN INSTITUTION . IT'S GOOD TO BE...</pre>\n<p>每行都是一篇演讲稿，每行的第一个单词指明了这篇演讲稿所属的党派，<code>RED</code> 指共和党，而 <code>BLUE</code> 指民主党。所有单词和符号都已经被转为大写并由空格分隔方便处理。<code>train.txt</code> 有共和党演讲稿和民主党演讲稿各 23 篇，<code>test.txt</code> 有 6 篇共和党演讲稿，12 篇民主党演讲稿。</p>\n<p>明白了？那我们就开始吧。</p>\n<h2>捋捋思路</h2>\n<p>首先，我们需要考虑如何在文本分类中应用朴素贝叶斯。很简单，按朴素贝叶斯的思路，<strong>计算每个词在某一分类下的出现概率，然后将某篇文章的所有词的概率相乘，再乘以该分类的先验概率，就可以得到某篇文章在某一分类下的概率。</strong></p>\n<p>$$P(Class|Article) = P(Class)\\prod_{i}P(Word_i|Class)$$</p>\n<p>各个分类概率都计算完成后，概率最高的那个分类就是这篇文章可能所属的分类。这个思路的核心就是用词决定了文本风格，文本的不同类别用词会有差异，只要能量化这些差异就可以分类文本。在我们的例子中，我们可以从 <code>train.txt</code> 中统计各个词汇的出现情况，然后用 <code>test.txt</code> 中的数据按上面的算法验证我们算法的准确性。</p>\n<p>这个思路很简单也很清晰，但还有一些问题需要解决。<strong>第一，有的时候，我们的测试数据集中可能会出现一个在训练数据集中没有出现过的词语。这个时候，朴素贝叶斯的计算结果会是 0。</strong>如果我们把 0 乘进式子中，那就别想得到正常的结果了。所以，我们还需要对计算某一单词在某一分类中的式子稍加改进。使用拉普拉斯平滑，就可以避免出现概率为 0 的情况。别被名字吓到，拉普拉斯平滑是一种非常简单的平滑方法：在分子上 +1，在分母上加整个取值范围，这样就可以给整个分式加上非常微小的偏移，避免出现 0。</p>\n<p>$$\\begin{align} P(Word_i|Class) &amp; = \\frac{Word_iCountInClass}{AllWordCountInClass} \\\\ &amp; \\approx \\frac{Word_iCountInClass + 1}{AllWordCountInClass + UniqueWordCount} \\end{align}$$</p>\n<p><strong>第二，对于长文本，大部分词语在某一分类中的出现概率是远小于 1 的，加上长文本词汇量大，往往概率相乘的结果会非常小。</strong>受限于计算机处理浮点数的原理，精确处理这么小的数字是很麻烦的。幸好，运用一些简单的数学知识就可以将其转化为更精确的表达，<strong>那就是取对数。</strong></p>\n<p>首先，将概率计算结果取对数并不影响我们的计算结果。因为取对数是一个单调递增的操作，而我们计算概率只是为了排序选择概率最高的分类，因此取对数是不影响我们排序的。而把多项式取对数，等于把多项式的每一项取对数后相加。所以我们有：</p>\n<p>$$\\lg{\\Big(P(Class)\\prod_{i}P(Word_i|Class)\\Big)} = \\lg{P(Class)} + \\sum_i\\lg{P(Word_i|Class)}$$</p>\n<p>大部分情况下，在每一次取对数的时候，要取对数的数字的大小，即 \\(P(Word_i|Class)\\) 尚还在计算机能处理的范围内，<strong>因此我们可以放心地使用取对数的方法</strong>，避免计算机精度不够影响结果。</p>\n<p><strong>第三就是在某些情况下，可能会有部分词语干扰计算结果</strong>，如 and, is 这类的被大量使用的中性词。如果希望得到更好的结果，我们可以维护一个停用词表，在计算时排除停用词即可。或者，我们可以在计算完每个单词的出现数量后，排除数量最多的前 \\(N\\) 个单词，避免这些单词过多地影响计算。</p>\n<h2>写点代码</h2>\n<p>现在我们终于可以开始实战，写点代码了。我会用简单的 Python 来表达思路。好了，理一理思绪，第一步我们要做的，是统计训练数据集中的用词情况。具体来说，根据上面的思考，我们需要统计的有：</p>\n<ul>\n<li>每个单词在各分类中出现的数量</li>\n<li>各分类中的不重复词数量</li>\n</ul>\n<p>用 Python 简单表示如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\"># 读入数据过程略...\r\ndata_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ndata_blue = []\r\ndata_red = []\r\nword_count_blue = {}\r\nword_count_red = {}\r\n\r\nfor line_data in data_raw:\r\n    word_list = line_data.split(\" \") # 分隔单词\r\n    if word_list[0] == \"BLUE\":\r\n        for i in range(1,len(word_list)):\r\n            if not is_excluded(word_list[i]): # 判断是否为停用词\r\n                data_blue.append(word_list[i])\r\n                # 统计单词出现次数\r\n                word_count_blue.setdefault(word_list[i], 0)\r\n                word_count_blue[word_list[i]] += 1\r\n    elif word_list[0] == \"RED\":\r\n        # Class = red 时同理...\r\n\r\n#统计非重复词\r\nunique_words_blue = list(set(data_blue))\r\nunique_words_red = list(set(data_red))</pre>\n<p>训练过程到这里就结束了，计算机已经知道了各政党演讲的用词习惯。很简单吧？接下来我们就要使用测试数据集来测试准确度了。<strong>这里开始就涉及到朴素贝叶斯的计算了</strong>，可能会稍微复杂一点点。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">import math\r\n#读入测试数据过程略...\r\ntest_data_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ntest_data = []\r\n\r\nfor line_data in test_data_raw:\r\n    if line_data[0] == \"BLUE\":\r\n        content_data = line_data.split(\" \").pop(0)\r\n        test_data.append({\"class\": \"blue\", \"content\": content_data})\r\n    elif line_data[0] == 'RED':\r\n        # ...\r\n\r\nfor line_data in test_data:\r\n    posibility_blue = 0\r\n    for word in line_data[\"content\"]:\r\n        # 计算各单词概率，取对数后相加，使用了拉普拉斯平滑\r\n        if word in word_count_blue:\r\n            posibility_blue += math.log((word_count_blue[word]+1)/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n        else:\r\n            posibility_blue += math.log(1/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n    # 最后加上该分类概率的对数\r\n    posibility_blue += math.log(len(data_blue)/(len(data_blue)+len(data_red)))\r\n\r\n    # 计算 Red 同理...</pre>\n<p>计算完成后，我们就得到每篇演讲稿在各分类下的概率了。之后，简单的比较就能得出推断的分类：如果 \\(P(Red|Article)\\) 大于 \\(P(Blue|Article)\\)，那么这篇演讲稿就更可能是共和党的演讲稿，反之则是民主党的演讲稿。</p>\n<p>很好理解吧？那么这么简单的思路，准确性怎么样呢？对于我们的例子，这是我设置了个别停用词后的结果：</p>\n<pre class=\"EnlighterJSRAW\">+-----+-------+--------------+--------------+-------+-------+\r\n|   ID|  Class|        P(Red)|       P(Blue)|  Guess| Status|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|    1|   Blue|  -23204.68377|  -22998.67066|   Blue|      √|\r\n|    2|   Blue|  -16438.44625|  -16137.48257|   Blue|      √|\r\n|    3|   Blue|  -33468.81214|  -32567.61801|   Blue|      √|\r\n|    4|   Blue|    -8606.2193|   -8601.50426|   Blue|      √|\r\n|    5|   Blue|  -12430.97436|  -11935.70662|   Blue|      √|\r\n|    6|   Blue|  -44033.02883|  -43877.55367|   Blue|      √|\r\n|    7|   Blue|   -16947.2851|  -16758.57542|   Blue|      √|\r\n|    8|   Blue|  -26957.26997|  -26889.62444|   Blue|      √|\r\n|    9|   Blue|  -27503.73985|  -27249.21828|   Blue|      √|\r\n|   10|   Blue|   -20528.4457|   -19991.1248|   Blue|      √|\r\n|   11|   Blue|  -20337.96493|  -19860.12831|   Blue|      √|\r\n|   12|   Blue|  -28409.28489|  -28118.98017|   Blue|      √|\r\n|   13|    Red|  -13756.01015|  -14488.11751|    Red|      √|\r\n|   14|    Red|  -17221.22732|  -17710.15936|    Red|      √|\r\n|   15|    Red|  -17397.45136|  -17899.98659|    Red|      √|\r\n|   16|    Red|  -10724.69095|  -11092.77837|    Red|      √|\r\n|   17|    Red|  -10402.40027|  -10859.48681|    Red|      √|\r\n|   18|    Red|   -9371.53792|    -9669.6769|    Red|      √|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|                                      Total: 18/18, 100.0% |\r\n+-----------------------------------------------------------+</pre>\n<p><strong>100% 的准确率哦！</strong>事实上，对于我们的这个例子，就算不设置停用词，我们仍能达到 100% 的分类准确率。朴素贝叶斯分类的确很 NB 呢。</p>\n<h1>更进一步</h1>\n<p>我们的探索到这里就结束了，但如果你有兴趣，完全可以继续探索下去。我们的例子是一个非常简化的例子，在实际情况中，还有很多问题需要解决。比如，对于中文及类似语言，不存在拉丁语系的天然分词结构，而朴素贝叶斯的文本分类是基于单词的，那么<strong>中文的分词就会是个问题；</strong>再比如，对于朴素贝叶斯分类来说，<strong>词语之间的顺序是不影响分类结果的</strong>，但这就会导致“今天心情很好，但昨天不好”和“昨天心情很好，但今天不好”在朴素贝叶斯看来是一样的，要想获得更好的结果，我们必须<strong>考虑词语的顺序。</strong></p>\n<p>这些问题，今天我们就不再深究了，但你可以自己探索。比如，引入思路同样很简洁的马尔科夫链，我们就可以让计算机学会考虑词语间的顺序，不过那就会是另一个话题了。</p>\n","link":"https://flyhigher.top/develop/1989.html"},{"title":"MDx 中增强页面可访问性的细节","date":"2020-01-25 16:45:04","description":"\n<blockquote><p>这篇文章本来是打算发在 <a href=\"https://mdxblog.flyhigher.top/\">MDx Blog</a> 的，不过写到后来发现这篇文章相对来说还是有价值的，于是就将这篇文章转移到了无垠，MDx Blog 则不再发表这篇文章。</p></blockquote>\n<p>从 MDx 开发之初，增强页面的可访问性就被列为了一个重要目标。从 HTML 语义化，到 ARIA 地标，再到 <code>prefers-reduced-motion</code>，随着浏览器对于增强页面可访问性的支持功能越来越多，MDx 也在不断地更新，让更多的人都能毫无困难地浏览、查看由 MDx 渲染的网页。本文会详细说明一些 MDx 中增强页面可访问性的细节，<strong>如果你希望增强自己开发的网页的可访问性，本文可能会对你有所帮助。</strong></p>\n<h1>基础性增强</h1>\n<p>增强可访问性，最重要也是最基础的一点就是 HTML 语义化。通过使用 HTML 5 语义化标签和 ARIA Role 标签，我们可以很方便地<strong>将整个网页在语义上分为几部分，而这将有效地改善屏幕阅读器对网页的分析质量，使视力障碍用户更好地浏览网页。</strong></p>\n<h2>HTML 语义化</h2>\n<p><strong>HTML 语义化属于增强页面可访问性的基础中的基础。</strong>通过使用语义化的 HTML 标签，我们可以方便地为网页中的各部分标记功能而不影响页面样式。随着符合 HTML 5 的现代化网页成为主流，语义化标签已被很大一部分网站所支持，我也不过多赘述了。就举几个常用的“地标性”标签吧：</p>\n<ul>\n<li>\n<code>header</code> 标签标记页眉，默认样式同 <code>div</code>，不要把它和 <code>head</code> 搞混了</li>\n<li>\n<code>main</code> 标签标记页面的主要内容，默认样式同 <code>div</code>\n</li>\n<li>\n<code>article</code> 标签标记文章（在 HTML 5 中它指任何独立或可复用的文本），默认样式同 <code>div</code>\n</li>\n<li>\n<code>footer</code> 标签标记页脚，默认样式同 <code>div</code>\n</li>\n<li>\n<code>nav</code> 标签标记页面导航栏区域，默认样式同 <code>div</code>\n</li>\n<li>\n<code>aside</code> 标签标记侧栏，默认样式同 <code>div</code>\n</li>\n<li>\n<code>section</code> 标签标记“一组内容”，你可以把它看作是划定网页中一块区域的通用标签，默认样式同 <code>div</code>\n</li>\n</ul>\n<p>只要用这些标签替代 <code>div</code> 而不是无脑使用 <code>div</code> 就能提高页面的可访问性。MDx 使用了这些标签来增强页面的可访问性。</p>\n<h2>下一步，ARIA</h2>\n<p>有的时候，出于一些原因，我们没法使用语义化的 HTML 标签，或者没有合适的语义化标签来标记内容，这时候<strong>我们就需要使用 ARIA (Accessible Rich Internet Applications，可访问的富互联网应用)。</strong>ARIA 的基础用法很简单，只要在相应元素上加上 <code>role</code> 属性指定该元素的功能即可。下面是一个简单的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;div role=\"navigation\"&gt;\r\n  &lt;ul&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page A&lt;/a&gt;&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page B&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page C&lt;/a&gt;&lt;/li&gt;\r\n  &lt;/ul&gt;\r\n&lt;/div&gt;</pre>\n<p>通过 <code>role=\"navigation\"</code>，我们把一个 <code>div</code> 标记为了导航栏区域。实际上，对屏幕阅读器来说，这和 <code>nav</code> 标签在语义上是一致的。上一节中的例子都可以分别用以下 ARIA Role 表示：</p>\n<ul>\n<li><code>role=\"heading\"</code></li>\n<li><code>role=\"main\"</code></li>\n<li><code>role=\"article\"</code></li>\n<li><code>role=\"contentinfo\"</code></li>\n<li><code>role=\"navigation\"</code></li>\n<li><code>role=\"complementary\"</code></li>\n<li><code>role=\"region\"</code></li>\n</ul>\n<p>除此以外，MDx 还使用了 <code>role=\"banner\"</code> 和 <code>role=\"search\"</code> 来分别标记页面中的顶部栏和搜索表单。另外，<strong>有的时候 <code>role</code> 属性还需配合 <code>aria-*</code> 属性一同使用</strong>，具体规则比较复杂，我就不在这里赘述了，具体可参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles\">WAI-ARIA Roles - MDN</a>。</p>\n<h1>媒体查询来帮忙</h1>\n<p>CSS 的媒体查询其实是一个非常强大的特性，<strong>妥善利用其中的一些特性，我们可以在网页外观上大大增强网页的可访问性。</strong>除了已经烂大街的“对浏览器窗口大小”响应的媒体查询，我会介绍 3 个很少有网站充分利用的媒体查询。</p>\n<h2>print</h2>\n<p><code>print</code> 媒体查询其实已经“历史悠久”了，<strong>只要使用 <code>@media print {...}</code> 就可以创建只在打印页面时生效的样式。</strong>通过这种方式，我们可以让页面在打印时应用一套为打印优化的样式，增强页面在物理纸张上的可访问性。</p>\n<blockquote><p>维基百科是对打印样式做了单独适配的著名例子。</p></blockquote>\n<p><strong>由于在打印的情况下，页面已经离开了“可交互”的范围，还有分页这种在屏幕中无需考虑的问题，要让页面在物理纸张上仍能被轻松地阅读，我们需要做一些特殊的适配。</strong>直接来看一个例子吧。以下是 MDx 针对打印情况进行的一些特殊优化，样式的具体理由已经写在了注释中。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media print {\r\n    /*隐藏不必要的元素*/\r\n    header, .mdx-ad-after-article, .mdx-ad-in-article, .mdx-post-money, .page-footer-nav, .mdx-same-posts, .spanout button, .mdui-drawer, .mdui-overlay, .mdui-menu, .mdx-share-img-dialog, .mdx-share-wechat-dialog {\r\n        display: none!important;\r\n    }\r\n\r\n    /*使用下划线标记链接*/\r\n    article a {\r\n        text-decoration: underline!important;\r\n    }\r\n    /*由于纸张不可交互，在链接后显示链接到的 URL*/\r\n    article a::after {\r\n        content: \"(\" attr(href) \")\";\r\n    }\r\n\r\n    /*强制白底黑字*/\r\n    html &gt; body {\r\n        background-color: white!important;\r\n    }\r\n    article p {\r\n        color: rgba(0,0,0,.8)!important;\r\n    }\r\n\r\n    /*对于纸张上的长文章，衬线字体拥有更好的可读性。以下字体列表来自 fonts.css*/\r\n    article {\r\n        font: 13pt Georgia, \"Nimbus Roman No9 L\", \"Songti SC\", \"Noto Serif CJK SC\", \"Source Han Serif SC\", \"Source Han Serif CN\", STSong, \"AR PL New Sung\", \"AR PL SungtiL GB\", NSimSun, SimSun, \"TW\\-Sung\", \"WenQuanYi Bitmap Song\", \"AR PL UMing CN\", \"AR PL UMing HK\", \"AR PL UMing TW\", \"AR PL UMing TW MBE\", PMingLiU, MingLiU, serif!important;\r\n    }\r\n\r\n    /*除部分元素外，禁止在元素内部分页*/\r\n    * {\r\n        page-break-inside: avoid;\r\n    }\r\n    article p, article a, #comments, article {\r\n        page-break-inside: auto;\r\n    }\r\n}</pre>\n<p>MDx 自 1.9.3 版本起已经包含了对文章页的打印样式优化。可以很容易地看出，优化后的样式在物理纸张上将更容易阅读。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\" alt=\"\" width=\"1345\" height=\"1602\" class=\"aligncenter size-full wp-image-1959\"></a>\n<h2>prefers-color-scheme</h2>\n<p><code>prefers-color-scheme</code> 是最近才被浏览器广泛支持的一个媒体查询，但它的功能却很强大：<strong>响应系统级黑暗模式。</strong>这样，我们可以在开启黑暗模式的系统中让网页具有更好的可读性。不过由于这个媒体查询直到最近才被广泛支持，因此大部分网站对此并没有进行适配。</p>\n<blockquote><p>一些适配这一特性的网站：少数派、微信公众平台（文章页）等。</p></blockquote>\n<p>通过像这样的媒体查询，我们可以在系统启用黑暗模式时让页面实时响应：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    body {\r\n        background-color: #212121;\r\n        color: rgba(255, 255, 255, .7);\r\n    }\r\n}</pre>\n<p><code>prefers-color-scheme</code> 一共有 3 个可能值：<code>no-preference</code>, <code>light</code> 和 <code>dark</code>。你也可以不像上面的例子那样默认使用亮色样式并在黑暗模式下启用黑暗样式，而可以反过来将黑暗样式作为默认，用亮色样式覆盖。在不支持的浏览器上将会显示默认样式（即媒体查询不会生效）。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<h2>prefers-reduced-motion</h2>\n<p>看名字就猜得出，<code>prefers-reduced-motion</code> 是和 <code>prefers-color-scheme</code> 师出同门的媒体查询。因此，和 <code>prefers-color-scheme</code> 一样，它也是在最近才获得了浏览器的广泛支持。它的作用也很强大：<strong>响应系统的“减弱动态效果”模式。</strong>这对某些不喜欢甚至无法接受动画的用户可能很有帮助。要知道，对有些用户来说这甚至是医疗上的必要。使用如下的媒体查询，我们可以在系统启用减弱动态效果模式时让页面实时响应，减弱动画：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-reduced-motion: reduce) {\r\n    /*只是一个示例，实际情况中可以保留一些淡入淡出效果*/\r\n    * {\r\n        transition: all 0s!important;\r\n        transform: none!important;\r\n    }\r\n}</pre>\n<p><code>prefers-reduced-motion</code> 只有 2 个可能值：<code>no-preference</code> 和 <code>reduce</code>，在不支持的浏览器上该媒体查询不会生效。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\" alt=\"\" width=\"792\" height=\"515\" class=\"aligncenter size-full wp-image-1962\"></a>\n<h1>黑暗模式适配</h1>\n<p>黑暗模式可不是简单地切换到黑底白字这么简单。<strong>单纯地使用黑底白字会导致页面元素之间对比度过高，文字刺眼，反而降低了页面的可访问性。</strong>我在下面总结了几条应用在了 MDx 中的黑暗模式优化规则和 Google 推荐的优化规则：</p>\n<p><strong>一是避免黑底白字。</strong>黑底白字看起来真的很难受，事实上，深灰和浅灰是黑暗模式最好的配色。比较下方例子里的两段文本，毫无疑问深灰色背景和浅灰色文字搭配的样式的可读性要比黑底白字高很多。（p.s. 有时候这条规则在白底黑字时也适用）</p>\n<p><strong>二是更改部分元素的亮度和对比度以增强可读性。</strong>你可能已经注意到了，下面优化的例子里标题文字的颜色改变了。很明显，未优化的黑暗模式中标题可读性不如优化的版本。在实际中，我们通常可以通过 CSS 滤镜来实现这一更改。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    h1 {\r\n        /*反相颜色后再将色相旋转 180 度，使亮度反相*/\r\n        filter: invert(1) hue-rotate(180deg);\r\n    }\r\n}</pre>\n<p><strong>三是避免让图片过亮。</strong>未经处理的图片通常会导致过高的对比度，降低可读性。在 MDx 中，我选择降低图片的亮度来避免图片刺眼，而 Google 的建议则是使图片灰度，不过这会影响图片的整体观感。无论是哪一种方案，都可以使用 CSS 滤镜来轻松实现。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    img { \r\n        /*MDx 方案*/\r\n        filter: brightness(.8);\r\n        /*Google 方案*/\r\n        filter: grayscale(.5);\r\n    }\r\n}</pre>\n<div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是未优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是经过优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n</div>\n<h1>其他细节</h1>\n<p>还有一些细节，虽然简单，但不可或缺。我把一部分没有在上文提到的 MDx 中的细节列在了这里。</p>\n<p><strong>一是允许页面缩放。</strong>在开发响应式页面时，很多网站会在页面头部添加这样一个 <code>meta</code>：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"&gt;</pre>\n<p>这样的 <code>meta</code> 设定了页面的宽度，却也固定了页面的缩放比例，用户难以手动放大网页。<strong>这样的设置对一部分视力障碍用户非常不友好</strong>，以至于苹果决定在自家的浏览器上忽略禁止缩放的 <code>meta</code>。按照 Google 的推荐，如果你在 MDx 设置中启用了“允许页面缩放”，那么 MDx 会输出这样的 <code>meta</code> 标签，允许页面进行五倍以内的缩放：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=5\"&gt;</pre>\n<p><strong>尽管很多时候放大页面会导致页面结构被破坏，但这大大增强了页面的可访问性，利大于弊。</strong>因此，在 MDx 中，“允许页面缩放”是默认启用的。</p>\n<p><strong>二是在跨设备阅读时同步阅读记录。</strong>这属于 MDx 的“元老级”功能之一。注意到页面右上角的那个“在其他设备上继续阅读”的按钮了吗？如果你滚动页面后重新点击它，你会发现二维码发生变化了。通过在二维码中记录阅读进度，用户在扫描二维码切换设备阅读时，MDx 在新设备上会自动滚动到和原设备上一致的位置——好吧，目前基于百分比的算法在某些情况下可能不太准，但我已经设计了一个更复杂但更精确的阅读进度记录算法，之后就会更新到 MDx 中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\" alt=\"\" width=\"1000\" height=\"574\" class=\"aligncenter size-full wp-image-1976\"></a>\n<p><strong>三是避免 Web 字体阻塞渲染。</strong>如果你在页面中使用了 Web 字体，在字体加载完成之前，浏览器可能不会渲染任何文本，这就导致用户可能需要等待一段时间才能开始浏览网页。Google 推荐使用 <code>font-display: swap;</code> 来向浏览器指定网页的 Web 字体渲染策略。这一规则会提供一个比较短的等待周期，如果在这段时间内 Web 字体没有完成加载，那么浏览器会以 fallback 字体渲染文本。任意时刻一旦 Web 字体完成渲染，浏览器就会使用 Web 字体重新渲染文本。这在大多数情况下都能满足可访问性的需求。</p>\n<p><strong>四是确保 html 元素具有合适的 <code>lang</code> 属性。</strong>这一属性声明了页面的主要语言，浏览器可以据此调整渲染策略，或者触发自动翻译；屏幕阅读器也能更好地阅读网页。</p>\n<p><strong>五是确保页面主要内容在丢失/禁用了 Javascript 甚至 CSS 的情况下仍然可用。</strong>作为一个以内容为主的网站，MDx 在禁用了 Javascript 的情况下页面主要内容仍然可用。这不只是为了 SEO，更是为了保证页面的可访问性。的确，目前的情况下，如果开启了 Lazyload，MDx 在禁用 Javascript 的情况下图片的确无法显示，但我会在后续版本中尽可能的优化这一问题。</p>\n<h1>附录：媒体查询开发技巧</h1>\n<p>有的时候，光有 CSS 响应媒体查询还不够，我们可能需要在 Javascript 中实时响应媒体查询。用如下代码就可以很简单地响应媒体查询：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let mql = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\r\nmql.addListener(handleMediaChange);\r\n\r\n//在添加监听后先调用一次，获得当前查询结果\r\nhandleMediaChange(mql);\r\n\r\nfunction handleMediaChange(mql){\r\n    if(mql.matches){\r\n        //查询匹配\r\n    }else{\r\n        //查询不匹配\r\n    }\r\n}</pre>\n<p>在开发上述媒体查询的过程中，我们需要频繁地切换系统的相应模式或者调出打印窗口。<strong>实际上，Chrome 提供了更简单的调试方法：</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1946\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\" alt=\"\" width=\"723\" height=\"681\"></a>\n<p>只要在这里更改模式，相关媒体查询就能实时生效。这不会影响其他标签页，在关闭开发者工具之后也会自动恢复系统设置。</p>\n","link":"https://flyhigher.top/develop/1912.html"},{"title":"MDx Blog 现已随 MDx 1.9.5 发布","date":"2020-01-22 17:54:11","description":"<p>随着 MDx 发布 1.9.5 更新，<a href=\"https://mdxblog.flyhigher.top/\" rel=\"noopener noreferrer\" target=\"_blank\">MDx Blog</a> 现已建立。我将会在 MDx Blog 中分享一些开发故事并发布 MDx 更新日志。</p>","link":"https://flyhigher.top/diary/1905.html"},{"title":"GitHub 2019 统计无垠版","date":"2020-01-12 13:02:00","description":"\n<h1>缘起</h1>\n<p>2019 年底，我突发奇想想要自己统计一番 GitHub 上存储库的一些信息。尽管 GitHub 有自己的<a href=\"https://octoverse.github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">年度统计</a>，我还是想试着自己爬取一下，说不定能挖出什么有意思的信息，何况这是我第一次有机会处理比较大量的数据，也算是一种学习的过程吧。于是花了一下午写了个简单的爬虫（时间都花在增加 Rate Limit 上了...），然后扔在了两台服务器上开始跑（GitHub  API 真是好文明）。</p>\n<p>从 2019.11.21 3 时到 2020.1.12 24 时的 52 天 21 小时内，我的爬虫一共爬取了<strong>与 2,024,705 个用户有关<sup>*</sup>的 14,651,923 个公共存储库的基础信息</strong>，平均每秒爬取 3.2 个存储库。据 GitHub 的官方数据计算，我爬取了大约 15% 的存储库信息，但由于封禁库和私有库的数量未知，我暂时无法确定我爬取的存储库占公共库的比例。同时由于存储库数量较多，基本可以认为爬取到的样本在时间尺度上已经足够随机，可以通过统计得出一般结论。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\" alt=\"\" width=\"700\" height=\"606\" class=\"aligncenter size-full wp-image-1892\"></a>\n<p>爬到自己了，合影.jpg</p>\n<p>那么下面就来看看统计出来的一些结果吧。爬虫的技术细节和数据集下载放在文末。</p>\n<p>* 指这些用户拥有至少一个库</p>\n<h1>统计信息</h1>\n<p><strong>以下统计结果均基于已放于文末的数据集。</strong>由于爬虫爬取的时间跨度长，加上我并没有完整爬取 GitHub 所有存储库，因此我<strong>不能保证以下统计结果符合真实情况</strong>，各位可以下载数据集或自行爬取进行验证。</p>\n<h2>一些数据</h2>\n<div>\n<div>\n<div>\n<span>3,120,930</span><br>总爬取用户数</div>\n<div>\n<span>44.7%</span><br>的存储库创建<br>自 Fork</div>\n<div>\n<span>6.59%</span><br>的账户被删除或<br>封禁<sup>1</sup>\n</div>\n<div>\n<span>23,913</span><br>单用户拥有最大<br>库数量<sup>2</sup>\n</div>\n</div>\n</div>\n<p><sup>1</sup> 基于用户 ID 规律合理推断<br><sup>2</sup> 统计范围仅限于当前数据集</p>\n<p>比较出乎我意料的是创建自 Fork 的存储库的占比。我预估这样的存储库占比不会太低，但没有想到能接近一半。此外单用户拥有最大库数量也大大超出了我的预期，<a href=\"https://github.com/pombredanne\" rel=\"noopener noreferrer\" target=\"_blank\">pombredanne</a> 这个用户名下拥有将近 24k 的存储库，不过绝大多数都是 Fork 来的，在情理之中。此外<strong>这个数据集中</strong>拥有最多存储库的账户其实是一个组织 <a href=\"https://github.com/gitpan\" rel=\"noopener noreferrer\" target=\"_blank\">gitpan</a>，这个组织拥有 36,377 个存储库。</p>\n<h2>语言</h2>\n<p><canvas></canvas><br>\n首先必须要说明的是，在这个榜单中我<strong>排除了 HTML 和 CSS</strong>，因为在严格意义上它们不属于“编程语言”。如果把它们计算进来的话，分别有 640,368 个和 361,425 个存储库的主要语言分别是 HTML 和 CSS，这样在这份榜单中它们可以排到第 6 和 第 10 名。JavaScript 毫无疑问获得第一，第二名 Python 的热度则和 JavaScript 相差将近一半。<strong>此外还有 2,448,486 个存储库未能识别出语言，占比 16.7%。</strong>在上面的榜单之外，与机器学习和数据科学相关的语言还有 Jupyter Notebook 排名第 13，R 排名 20，Julia 排名 43。</p>\n<p>说实话这份排名和 GitHub 官方的排名<strong>差别很大</strong>，除了前三名，后面的基本都不太一样。我的排名统计结果完全基于 GitHub 对于存储库的主要语言识别，加上我的存储库数据不完整，和官方的数据不同是很正常的，可以做一个参考，但大概率还是官方排名更加准确。</p>\n<h2>许可证</h2>\n<p><canvas></canvas></p>\n<p>自 GitHub 推出许可证功能以来，拥有许可证的存储库比例升升降降，却始终没有超过一半。<strong>选择一个合适的许可证对项目的良好发展真的很有帮助</strong>，要了解如何选择合适的许可证，请参阅<a href=\"https://www.runoob.com/w3cnote/open-source-license.html\" rel=\"noopener noreferrer\" target=\"_blank\">这篇文章</a>。</p>\n<p><canvas></canvas></p>\n<p>对于拥有许可证的存储库，MIT<del> 麻省理工许可证 </del>总是占比最大的；第二则是 Apache-2.0 许可证。此外，WTFPL 许可证也挤入了前 15 名。</p>\n<h2>星标</h2>\n<p><canvas></canvas><br>\nStar 数量毫无疑问是一个存储库受欢迎程度的体现，而 Star 数高的项目基本上大家都了解过。<strong>截至爬取结束时间</strong>，GitHub 中 Star 数最多的库是 <a href=\"https://github.com/freeCodeCamp/freeCodeCamp\" rel=\"noopener noreferrer\" target=\"_blank\">freeCodeCamp</a> <del>非常完美的驼峰命名法</del>，其次则是著名项目 <a href=\"https://github.com/996icu/996.ICU\" rel=\"noopener noreferrer\" target=\"_blank\">996.ICU</a>。<a href=\"https://github.com/vuejs/vue\" rel=\"noopener noreferrer\" target=\"_blank\">Vue</a> 现在的 Star 数已经稳压 <a href=\"https://github.com/facebook/react\" rel=\"noopener noreferrer\" target=\"_blank\">React</a> 一头，Vue YES! 此外 <a href=\"https://github.com/sindresorhus/awesome\" rel=\"noopener noreferrer\" target=\"_blank\">awesome</a> 也挤进第七名。<br><canvas></canvas><br>\n由于 Star 需要时间积累，新项目的 Star 数量很可能是比不过老项目的，这就会导致有实力的新项目无法出现在榜单中。因此我还统计了日均 Star 数，试图通过日均 Star 数来反映项目受欢迎的程度。<strong>由于正热门的项目会比老牌热门项目有优势，这一项的统计范围是 2020-01-01 之前的所有存储库。</strong>996.ICU 和 freeCodeCamp 再次出现在前 10 名，而最近的热门项目 <a href=\"https://github.com/wenyan-lang/wenyan\" rel=\"noopener noreferrer\" target=\"_blank\">wenyan</a> 则飙升至第 2 名。此外还有 <a href=\"https://github.com/menzi11/BullshitGenerator\" rel=\"noopener noreferrer\" target=\"_blank\">BullshitGenerator</a>，即最近热门的“狗屁不通文章生成器”和 <a href=\"https://github.com/evil-huawei/evil-huawei\" rel=\"noopener noreferrer\" target=\"_blank\">evil-huawei</a> 分列第 3 和第 5 名。<br><canvas></canvas><br>\n说实话这个曲线<strong>比我预估的陡多了。</strong>你可能已经注意到了，这个图表的横轴不是均匀缩放的，实际上曲线要比看起来陡很多。同时受爬取方式的影响，GitHub 中 Star 数较少的存储库数量远比我爬取到的多。也就是说，<strong>实际情况下曲线远比这个图表上的陡。</strong>拿点 Star 不容易啊。</p>\n<h2>名称</h2>\n<p><canvas></canvas><br>\n终于知道了原来存储库的名称是有长度限制的...尽管最长有 100 位，<strong>大部分人还是喜欢 8 位长的存储库名。</strong>此外 1 位长的名称也比我预估的要多一些。举几个存储库名称长度为 100 的例子吧。</p>\n<ul>\n<li>testing-something-elsetesting-something-elsetesting-something-elsetesting-something-elsetesting-some</li>\n<li>acts_as_validated_config_so_app_will_not_run_in_random_situation_and_qa_gays_will_not_cry_to_you_whe</li>\n<li>............................................________-....................................-.---......</li>\n<li>----------------------------------------------------------------------------------------------------</li>\n<li>nyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyan</li>\n</ul>\n<p>...创造力有够丰富的。</p>\n<p><canvas></canvas></p>\n<p>最近 GitHub 上有一种奇怪的风气，那就是建立 Awesome 合集<del>骗 Star</del>。看起来 Awesome 存储库满地都是，甚至还出现了关于 Awesome 的 Awesome 合集这种迷惑行为。于是我统计了一下，<del>还好，</del>占比<del>才</del> 0.5% 不到<del>，Awesomer 们任重而道远呐</del>。</p>\n<p><canvas></canvas></p>\n<p>尽管要在 github.io 上托管网站，存储库不一定要以 .github.io 结尾，但我还是统计了一下。拥有这类存储库的用户比我预想的要少一些，看来还有很多人没有完全发挥 GitHub 的完整实力啊<del>（比如我 Doge）</del>。同时<strong>这类存储库在所有存储库中占比 1.12%</strong>，看起来不多<del>，不过至少比 Awesome 多</del>。<br><canvas></canvas><br>\n看得出来 GitHub 对于用户名长度的限制是 1-40 位。用户名最短的 27 位占据了 <code>A-Z</code> 外加 <code>-</code> 的所有可能，而用户名最长的则是一个组织 <a href=\"https://github.com/UOIT-RESEARCH-database-information-group\" rel=\"noopener noreferrer\" target=\"_blank\">UOIT-RESEARCH-database-information-group</a>。不知道是巧合还是某种规律，<strong>最受欢迎的用户名长度和存储库名称长度一样，都是 8</strong>，有点意思。</p>\n<h2>创建时间</h2>\n<p><canvas></canvas><br>\n由于我并没有完整爬取所有存储库，我只能以相对值来统计每月新增存储库数量的变化趋势。<strong>在这个图表中，我将 2017-09 的数据设为了 100%。</strong>你一定一眼就能注意到 2017 年 6,7,8 月的“一柱擎天”。<del datetime=\"2020-02-05T09:18:30+00:00\">我第一次看到这个数据的时候的确愣了一下，不过就着这条新闻看就能明白为什么了：<strong>2017 年 6 月微软收购 GitHub。</strong></del></p>\n<blockquote><p>重新确认了一下，微软收购 GitHub 比这个高峰晚了一年，目前我对这个高峰没有什么很好的解释，如果你有什么思路的话欢迎评论。</p></blockquote>\n<p><strong>需要注意的是这张图表中我排除了 Fork 存储库</strong>，因为 Fork 存储库在 API 中的创建时间是原始存储库的时间，会影响整体趋势。此外，GitHub 中还有一个创建于 2007 年 10 月 29 日的存储库，那就是 <code>id: 1</code> 的...</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"mojombo\" data-mdxgithubp=\"grit\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/mojombo/grit\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>而它的创建者正是 GitHub 的创始人之一 Tom Preston-Werner。</p>\n<h1>一些有趣的结果</h1>\n<p>当初打算自己爬的目的之一就是想看看能不能挖出什么有意思的信息，结果真的有一些不挖不知道的信息。</p>\n<h2>奇怪的存储库</h2>\n<p>在爬取到的所有存储库中，<strong>有 3 个存储库是“无主”的</strong>，即它们的 owner 属性为空。这三个存储库的基本信息如下。</p>\n<div class=\"mdui-table-fluid mdui-table-hoverable\"><table class=\"mdui-table\">\n<thead><tr>\n<th>ID</th>\n<th>名称</th>\n<th>Forked</th>\n<th>Star</th>\n<th>语言</th>\n<th>许可证</th>\n<th>创建于</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>72385291</td>\n<td>vscode-redprl</td>\n<td>否</td>\n<td>10</td>\n<td>TypeScript</td>\n<td>apache-2.0</td>\n<td>2016-10-31 08:50:01</td>\n</tr>\n<tr>\n<td>181218346</td>\n<td>electron-sys</td>\n<td>否</td>\n<td>10</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-14 03:20:56</td>\n</tr>\n<tr>\n<td>181391880</td>\n<td>node-sys</td>\n<td>否</td>\n<td>6</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-15 09:33:08</td>\n</tr>\n</tbody>\n</table></div>\n<p><strong>更奇怪的是这三个存储库“无主”的情况还不一样。</strong>第一个存储库可以通过 <code>/repositories</code> 这个 GitHub API 找到， <a href=\"https://api.github.com/repositories?since=72385290\" target=\"_blank\" rel=\"noopener noreferrer\">这个链接</a>中的第一个存储库就是它；而其余两个存储库甚至无法在 <code>/repositories</code> API 中找到。不过就算能在 API 中找到第一个存储库，它的 <code>html_url</code>，即 <code>https://github.com//vscode-redprl</code> 仍然是不可访问的。这可能是 GitHub 早期的一个 Bug 导致的，不过我仍然对爬虫是如何找到这三个存储库的以及这些 Stars 是哪里来的感到好奇。</p>\n<h2>奇怪的用户名</h2>\n<p>在爬虫爬了一段时间以后，API 中突然开始出现大量的以 fdp 开头的 18 位乱码作为用户名的用户。这些用户拥有的存储库和 starred 的存储库都为 0，而他们的 <code>html_url</code> 为 404。以下是几个例子。</p>\n<ul>\n<li>fdpEpolGCEdQX4ZlRJ</li>\n<li>fdp8XaVrdtmDZnO5pR</li>\n<li>fdp8XRAGnwAOkTr2Ya</li>\n</ul>\n<p>由于我的爬虫并没有超过 Rate Limit，所以我排除了这是污染数据的可能。我怀疑这可能是某种 Bot 账户，于是一边更新爬虫过滤掉了这些用户，一边给 GitHub 支持发邮件问了具体情况。过了两天 GitHub 回复我说这些是<strong>被自动判为可疑进而被封禁的用户</strong>（原话是 they have been flagged by our automated measures for detecting suspicious behavior）。<del>想到我正在疯狂爬取 GitHub，突然害怕.webp</del></p>\n<p>行吧。</p>\n<h1>技术细节</h1>\n<p>爬虫使用 Python3 编写，数据库使用 MySQL。爬虫共使用了 4 个 API Token，在两台服务器上分布式爬取。爬取思路为：</p>\n<ol>\n<li>通过 <code>/users</code> API 遍历用户，每个请求最多获取 30 个用户信息</li>\n<li>循环 30 个用户，分别获取 <code>/users/&lt;user_name&gt;/starred</code> 和 <code>/users/&lt;user_name&gt;/repos</code> API 中的存储库信息，每个请求最多获取 100 个存储库信息，超过 100 个的分页获取</li>\n<li>提取存储库信息，插入数据库。对于已存在的存储库，更新数据</li>\n<li>获取下 30 个用户信息</li>\n</ol>\n<p>由于爬取过程中我多次调整了爬虫逻辑，爬虫爬取到的用户 ID 区间并非连续的，具体区间为1-839586, 14800001-14885493 及 28965251-31161101。</p>\n<h1>免责声明</h1>\n<p>本站会尽可能地提供准确信息，但本站不对此文章中信息的准确性和即时性及带来的任何影响负责。</p>\n<p>本站不代表 GitHub 官方，本文仅供学习之用，请不要将本文内容直接用于任何商业项目中。</p>\n<h1>数据集下载</h1>\n<p>导出的 SQL 文件大约为 1.38GB，全部放在了 GitHub 上（在危险的边缘试探.webp</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"github-analysis-2019\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/github-analysis-2019\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>此外我也提供了 MEGA 下载，链接<a href=\"https://mega.nz/#F!juxm3A6T!7Vwpzi82W1OFrqTLu1A1pQ\">在这里</a>。</p>\n","link":"https://flyhigher.top/develop/1564.html"},{"title":"Milkice 跨年红包解谜 Writeup 及无垠跨年红包解谜答案","date":"2020-01-02 04:29:19","description":"\n<blockquote><p><del>又到了水文章的时间呢</del></p></blockquote>\n<p>先说明一下，这篇文章原本不是在计划中的，而原来说好的「在路上的两篇」文章<del>绝对不会咕</del>。我自己的红包答案本来打算直接塞在年度总结里的，结果发现稍微有些长，再加上我还花了一些时间解了<a href=\"https://milkice.me/\">奶冰</a>的红包解谜游戏，就打算把两个解谜过程放在一起单独写一篇文章。<del>真是个水文章的好理由</del>（被打死</p>\n<h1>奶<del> 子 </del>冰的红包</h1>\n<p>奶冰的红包题目比我的难多了，所以让我们先从难的开始吧。首先看一下<a href=\"https://milkice.me/2019/12/31/2019-summary/\">题目</a>：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1524\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\" alt=\"\" width=\"746\" height=\"410\"></a>\n<p>入口是 <code>happy.2020.milkice.me</code>，扔到浏览器里面表示找不到 IP，那么大概率就是 DNS 的 TXT 记录了，查一下得到 <code>nb2hi4dthixs63ljnrvwsy3ffzwwkl3tivrvezluomxxg5dsmvqw2ltqmnqxa3th</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1525\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\" alt=\"\" width=\"896\" height=\"278\"></a>\n<p>第一眼没看出来是什么编码，直觉是 BaseXX 系列的编码，加上提示“不只有 Base64”，可以推断出是 Base32，转大写解码得到 <code>https://milkice.me/sEcRets/stream.pcapng</code>。是个 URL，下载得到一个 Wireshark 文件，打开一看是和某 USB 设备的通讯抓包。<del>不会做，不做了。</del></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1526\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\" alt=\"\" width=\"1500\" height=\"813\"></a>\n<p>奶冰提示我“Google 上搜得到”，结合第二条提示搜索“wacom pcapng”找到了<a href=\"https://blogs.tunelko.com/2017/02/05/bitsctf-tom-and-jerry-50-points/\">这篇文章</a>（<del>这™就是答案啊</del>）。看起来是一样的套路，即通过解析数据得到数位板上画的内容，于是按文章的思路筛选出数位板发给主机的数据，导出，然后再用 tshark 导出文本数据。本来我想直接用文章中的 POC 的，结果折腾半天因为源的蜜汁原因库没装上，于是按文章中给出的数据结构自己写了段代码，分别导出 X、Y 轴数据扔进 Excel 画散点图。（<del>别问我为什么用 Excel，因为我手边没有更好的工具了</del>）</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1528\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\" alt=\"\" width=\"1280\" height=\"530\"></a>\n<p><span>翻车现场之一</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1539\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\" alt=\"\" width=\"1000\" height=\"286\"></a>\n<p><span>懵逼奶冰.webp</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1533\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\" alt=\"\" width=\"1500\" height=\"462\"></a>\n<p>看得出有手写文字，不过是上下颠倒的，翻转图片得 <code>https://milkice.me/2020/uso.zip</code>。是个 zip，下载打开一看，有密码。<del>不会解，不做了。</del> 第一反应是暴力解密码，但是暴力跑了 15 分钟还是没有跑出来。暴力太不优雅了，肯定不是正确思路，但奶冰什么都不肯说了。不过在这时我终于发现第一个红包口令码就藏在压缩包的注释中，Get。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1544\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\" alt=\"\" width=\"806\" height=\"593\"></a>\n<p>然而题还没解完，回去看提示，看到提供了 osu 谱面下载，于是打算不管怎么样先下载来看看。然而 osu 谱面下载要登录，只好又花了几分钟找到第三方站点，成功下载。这时候可以注意到 uso.zip 里有个同名文件（432314 Mike Greene - Bill Nye the Science Guy Theme Song (Chinese Intro).osz），可以联想到是明文攻击。好吧，上 ARCHPR，十秒解出。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1530\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\" alt=\"\" width=\"462\" height=\"643\"></a>\n<p><span>现场还原.jpg</span></p>\n<p>.osz 文件并不是明文，猜测是压缩包（和 .pptx 一个思路嘛），于是改后缀 .zip 顺利打开。然后红包口令码就藏在奶冰的 .osu 文件中了，由提示可知是明文，打开即可得到。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1542\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\" alt=\"\" width=\"457\" height=\"255\"></a>\n<h1>我的红包</h1>\n<p>相比起来<a href=\"https://flyhigher.top/diary/1464.html\">我的题目</a>就简单很多了嘛...三天时间一共发出了 25 个红包，包括一位重复领取的🌚，比前几年还是多了一些的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\" alt=\"\" width=\"500\" height=\"306\" class=\"aligncenter size-full wp-image-1554\"></a>\n<p><span>这位同学以后请不要多次领取🌚</span></p>\n<p>那么来看看答案吧。</p>\n<h2>第一阶段</h2>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>首先观察字符串，可以发现 <code>.</code> <code>/</code> <code>_</code> 等一些 ASCII 字符原样留在了字符串中，而其他字符被由 <code>=</code> 和十六进制构成的某种编码所替代。如果你正好有所了解，你应该能认出这是 Quoted-printable 编码，这是一种常用于邮件中的编码，可以用<a href=\"https://mothereff.in/quoted-printable\">这个页面</a>解码。如果你不了解，你也应该可以发现这种编码和 URL 编码非常相似。如果你把 <code>=</code> 替换为 <code>%</code>，那么你就可以用各种方法顺利地把它按 URL 编码来进行解码，最后可以得到 <code>αхtоn.іm/соdе_оf_2020_⒈mρз</code>。这个字符串里大部分字符都不是 ASCII 字符，只是长得像而已。根据第一个提示“全是 ASCII 字符”，按样子把字符串用 ASCII 字符抄一遍，可以得到最终 URL 为 <code>axton.im/code_of_2020_1.mp3</code>。</p>\n<h2>第二阶段</h2>\n<p>下载音频，可以听出音频是经过某种处理的白噪音。白噪音的特点是各频段的功率都均匀分布，在白噪音上做文章，很容易就可以联想到线索藏在频谱中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1534\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\" alt=\"\" width=\"1200\" height=\"719\"></a>\n<p>频谱被处理成了 24x3 的网格，结合第二条提示“24x3，横向读取”可以推断出是将频谱当作二进制读取，得到 <code>01111001 01110010 01100011 00101110 01101101 01100101 00101111 00110010 00110000</code>，转为 ASCII 字符可得 <code>yrc.me/20</code>。</p>\n<h2>第三阶段</h2>\n<p>打开上一步得到的页面，提示要求输入十位数密码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1536\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\" alt=\"\" width=\"663\" height=\"460\"></a>\n<p>如果你在上一步注意到了这个音频文件奇怪的属性，你可以反应过来这里的密码就是 <code>2000202020</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1537\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\" alt=\"\" width=\"421\" height=\"651\"></a>\n<p>如果你没有注意到，查看页面代码可以看到一条注释 <code>&lt;!-- Tips: the attribute of the audio --&gt;</code> 将你引导向音频文件的属性。输入密码，解锁即可进入下一步。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1535\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\" alt=\"\" width=\"397\" height=\"223\"></a>\n<h2>第四阶段</h2>\n<p>可以看到是一张图片，内容为“<del>.JPG</del>”和“.ZIP”。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter size-large wp-image-1532\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n<p>和去年一样的套路，下载图片，将后缀名改为 .zip 然后打开，可以看到 README.txt。</p>\n<h2>最后一步</h2>\n<p>查看 README.txt 的内容，可以了解到需要去 🤔.axton.cc 获取红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1538\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\" alt=\"\" width=\"1131\" height=\"278\"></a>\n<p>扔到浏览器里会出现奶冰同款找不到 IP，于是可以联想到 TXT 记录。唯一的问题是 🤔 这个 Emoji 需要如何处理。域名使用 Punycode 将 Unicode 字符转换为 ASCII 字符，特点是以 <code>xn--</code> 开头。如果你把上面这个域名扔进浏览器，你会发现它变成了 <code>xn--wp9h.axton.cc</code>。然后查询 TXT 记录，即可得到红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1527\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\" alt=\"\" width=\"804\" height=\"557\"></a>\n","link":"https://flyhigher.top/develop/1519.html"},{"title":"无垠 2019 年度总结","date":"2019-12-29 12:25:52","description":"\n<p>又是时间飞快的一年...写 2018 总结的情景似乎还在眼前，转眼居然已经到 2019 年末了。</p>\n<p>2019 年，发生了太多事情，包括真的转折了人生的高考，这也导致我博客更新的不多（难以置信居然才更了两篇...），不过两篇技术性文章已经在路上了，可以期待一下。</p>\n<p>2019 年我也学了不少东西（单指技术方面），比如终于认真学了 Vue（但是还要练手）。书买了一大堆，看完的倒是没几本orz</p>\n<p>呼，好吧，是时候回顾一下充满坎坷的这一年了。2019 年还剩下最后两天，希望 2020 年，我能做得更好。</p>\n<h1>一些数据</h1>\n<p>照惯例先来看看一些数据吧。今年是统计系统完整统计了的第二年，终于可以和去年的数据比较一下了。以下数据的统计范围是 2019年1月1日0时至 2019年12月29日20时。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 26,901 (<span>+4%</span>)，年 PV 76,583 (<span>+3%</span>)，日均 UV 73.7，平均停留时间 5分13秒 (<span>-13.8%</span>)，平均跳出率 53% (<span>+20.5%</span>)。一年有效文章数 2 (<span>-50%</span>)，新增评论 439 条。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\" alt=\"\" width=\"1000\" height=\"1143\" class=\"aligncenter size-full wp-image-1511\"></a>\n<p>有趣的是今年文章数腰斩，访问数反而小有提升。<del>如果我哪天不更新了，访问数是不是可以无限大呢？</del></p>\n<p>今年博客最大的改动就是把整体风格切换到了 Material Design 2（当然这是 <a href=\"https://flyhigher.top/develop/788.html\">MDx</a> 中的可选功能，给自己打个广告2333），此外还有比较失败的 WebP 改造计划，因为和缓存冲突已经回滚了。<a href=\"https://flyhigher.top/develop/1245.html\">ABS 系统</a>进展不大，主要是真的没有太多时间，还是要再学习一个。</p>\n<h2>个人主页</h2>\n<p>虽然个人主页的 TODO List 列了老长，但今年完全没有更新，也没有推广，从今年 8 月底开始还莫名被某墙认证了，直到 11 月底才恢复，于是今年总访问量比去年少了很多，</p>\n<p>有多少呢？这么少：总 UV 2,141 (<span>-65.9%</span>)，总 PV 2,744 (<span>-66.6%</span>)，日均 UV 6 (<span>-65.9%</span>)，平均停留时间 62秒 (<span>+19.2%</span>)。主要来源是知乎和 V2EX，还有一些甚至是从微信来的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\" alt=\"\" width=\"1000\" height=\"1103\" class=\"aligncenter size-full wp-image-1512\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 8 次，新增 171 commits，2 种语言的翻译，Star 数增加了 175，现有 408。感谢所有人的支持，尤其是 <a href=\"https://github.com/Sn0bzy\" rel=\"noopener noreferrer\" target=\"_blank\">Hasan CAN</a>, <a href=\"https://github.com/yechs\" rel=\"noopener noreferrer\" target=\"_blank\">Ye Shu</a>, <a href=\"https://github.com/StarryLeo\" rel=\"noopener noreferrer\" target=\"_blank\">StarryLeo</a>, <a href=\"https://github.com/DCTewi\" rel=\"noopener noreferrer\" target=\"_blank\">冻葱Tewi</a>, <a href=\"https://github.com/syfxlin\" rel=\"noopener noreferrer\" target=\"_blank\">Otstar Lin</a> 等为 MDx 做出了不小贡献的你们。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：<a href=\"https://flyhigher.top/photograph/1309.html\">上手</a> DJI OSMO Pocket</li>\n<li>四月：最后一次参加浙江省普通高中学业水平考试</li>\n<li>五月：MDx 喜提 300 Stars</li>\n<li>六月：高考 <del>炸了，差亿点点上浙大</del>\n</li>\n<li>六月：入手了 Oneplus 7 Pro</li>\n<li>六月：和同学一起去成都重庆旅行</li>\n<li>六月：第一次近距离感受到地震</li>\n<li>六月：<a href=\"https://flyhigher.top/diary/1411.html\">入手</a>了一台雷蛇灵刃 15，目前是主力机</li>\n<li>七月：参与组织 THE Hack 2019 活动</li>\n<li>七月：面基了 <a href=\"https://itroy.cc/\" rel=\"noopener noreferrer\" target=\"_blank\">Tory</a>, Bie Shi 和 <a href=\"https://oxz.me/\" rel=\"noopener noreferrer\" target=\"_blank\">FHYunCai</a>\n</li>\n<li>八月：一个人去厦门武汉转了一圈，拍了自己的第一个 Vlog</li>\n<li>八月：入手了一个 Kindle Paperwhite 4，没有泡面可以压，于是用来看英文小说了</li>\n<li>八月：加入 TEDxNingbo 志愿者团队</li>\n<li>八月：和 Ralph 面基</li>\n<li>八月：入手了一个 Yubikey</li>\n<li>九月：人生第一次参加雅思考试 <del>7分，蛮开心的</del>\n</li>\n<li>十月：入手了一个 Samsung Galaxy Watch Active 2 <del>觉得不值</del>\n</li>\n<li>十一月：MDx 达到 400 Stars</li>\n<li>十一月：为 TEDxNingbo 设计开发的 H5 上线</li>\n<li>十一月：入手了第一台胶片相机，试图入坑胶片摄影</li>\n<li>十一月：参加 TEDxNingbo 2019 大会</li>\n<li>十二月：<del>我 Cytus II 入门了</del>\n</li>\n</ul>\n<h1>跨年红包</h1>\n<p>这算「传统习俗」了。和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2020年1月2日。</p>\n<p>今年的解谜旅程，从下面这个字符串开始。</p>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>由于今年的题目比以前稍微难了一些，所以今年的红包金额还是比较大的，而且不限量，尽你所能试一试吧。</p>\n<p>一点你可能用得上的提示：URL 里全是 ASCII 字符 / 24x3，横向读取。</p>\n<p><a href=\"https://flyhigher.top/develop/1519.html\">答案</a>已公布。</p>\n<h1>跨年海报</h1>\n<p>这算是另一个「传统习俗」（笑）。因为我有做跨年海报的习惯，所以以下就是今年份的海报啦。</p>\n<p>用了 C4D+PS，还有我的一整个下午。</p>\n<p>提前祝各位新年快乐！</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter wp-image-1467 size-large\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n","link":"https://flyhigher.top/diary/1464.html"}]