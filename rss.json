[{"title":"当谈论可持续时，我们在谈什么？","date":"2022-12-03 07:00:00","description":"可持续话题从来都不是非黑即白的。希望我们都能拥有更好的生活，更好的环境，更好的未来。<a href=\"https://sspai.com/post/77063\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77063"},{"title":"App+1 | Fluent Search：也许微软就是想做这样的一个启动器","date":"2022-12-03 03:00:00","description":"在我看来，Fluent Search才是微软「本就应该」做出的产品。<a href=\"https://sspai.com/post/77087\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77087"},{"title":"派周报 | 「逃离推特」与去中心化之辩","date":"2022-12-02 14:31:23","description":"本期周报汇总 11 月 28 日至 12 月 1 日间发布的会员内容，以便会员查阅。<p>[......]</p>\n<a href=\"https://sspai.com/prime/story/pi-weekly-20\" target=\"_blank\">查看全文</a><p>本文为会员文章，出自<a href=\"https://sspai.com/prime/precog/single\" target=\"_blank\">《单篇文章》</a>，订阅后可阅读全文。</p>\n","link":"https://sspai.com/prime/story/pi-weekly-20"},{"title":"本周看什么 | 最近值得一看的一大捆作品","date":"2022-12-02 09:49:31","description":"☕️TL;DR近期佳作推荐：[电影]海贼王：红发歌姬、[英剧]流人第二季、[美剧]犯罪心理第十六季、[电影]塔尔、[韩剧]弱小英雄、[美剧]弗莱斯曼有麻烦了、[国产]风吹半夏、[动画]JOJO的奇妙冒 ...<a href=\"https://sspai.com/post/77080\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77080"},{"title":"来自卡塔尔世界杯的馄饨皮，是吉祥物中的少数派","date":"2022-12-02 08:34:09","description":"p&gt;你好，欢迎来到新一期的持续更新。\n<h2>💬 评论</h2>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2022/11/29/article/61664a9f26508896cf860d5814078bae\"><figcaption>图片截取自官方宣传片 The Official Mascot of the FIFA World Cup Qatar 2022™</figcaption></figure><p>馄饨皮、饺子皮、小精灵…… 这至少是中文互联网对于 2022 卡塔尔世界杯吉祥物印象。虽然这样说有些戏谑，但至少说明这个吉祥物给大家留下了非常深刻印象。不过只从吉祥物身上看 2022 届卡塔尔世界杯的视觉形象设计或许有些以偏概全了，毕竟除了吉祥物之外，还有 Logo、门票、字体、配色、电视中的视觉组成一个完整的视觉形象。那么本期的持续更新，和大家分享一下 2022 卡塔尔世界杯在吉祥物、字体和 Logo 设计上的巧思和批判。对了，在阅读之前推荐大家去<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.qatar2022.qa/en/mascot#skip-intro\">世界杯官网上</a>看一下吉祥物和 Logo 的设计。</p>\n<h3><strong>馄饨皮：世界杯吉祥物中的少数派，手法独到且有差异性</strong></h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2022/11/29/article/23d9be67f4859bd6ef250cf871b77c5a\"><figcaption>开幕式上的「馄饨皮」 <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.thejakartapost.com/paper/2022/11/21/world-cup-starts-with-stakes-high-for-host.html\">图片来源</a></figcaption></figure><p>在微博上看到大家叫它「馄饨皮」之前我并没有真正观察过卡塔尔世界杯的任何设计。实际上，我第一次看到 La'eeb 的时候并不觉得他像馄饨皮，而是更像可爱的幽灵，因为无论是 Emoji、任天堂、万圣节等等活动中，大家都会把白色、无腿、大眼睛这些元素用在幽灵身上。这让我想到，大家认为 La'eeb 像馄饨皮的原因其实是文化差异：我们的生活环境中很少有人带这样的头饰，更没有见过未佩戴在头上的样子，比如我就以为这块布并不是正方形的，而开幕式上 La'eeb 出场的样子是白白净净方方正正，生活中拥有这样特征的就是馄饨皮和饺子皮了。</p>\n<p>让我们摆正姿态再认识一下它：La'eeb，拉伊卜，样貌极具辨识度和话题性。它不仅是一个很可爱且吸睛的吉祥物，也是在世界杯中差异性做的最好的吉祥物之一，并且它是组成本次世界杯视觉设计「民族性」的重要一环。让我们先看看他的由来。</p>\n<p>[......]</p>\n<a href=\"https://sspai.com/post/77042\" target=\"_blank\">查看全文</a><p>本文为付费栏目文章，出自<a href=\"https://sspai.com/series/269\" target=\"_blank\">《100 小时后请叫我设计师》</a>，订阅后可阅读全文。</p>\n","link":"https://sspai.com/post/77042"},{"title":"App+1 | 入门 Android 自动化，它比 Tasker 更好上手：MacroDroid","date":"2022-12-02 06:30:00","description":"如果你也被 Tasker 糟糕的交互和体验吓退过，MacroDroid 会是一个门槛更低的好选择。<a href=\"https://sspai.com/post/77077\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77077"},{"title":"连克德国、西班牙以小组头名晋级，如何评价日本队在卡塔尔世界杯小组赛上的表现？","date":"2022-12-02 04:31:19","description":"\n<p data-pid=\"EYnxKTVs\">感谢邀稿 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/e506c22dc58a46f95dcd436a77c45a01\" data-hash=\"e506c22dc58a46f95dcd436a77c45a01\" data-hovercard=\"p$b$e506c22dc58a46f95dcd436a77c45a01\">@网易体育</a> </p>\n<p data-pid=\"C4e7xu4g\">两个2-1，日本队在世界杯死亡之组先后击败了德国和西班牙。虽然中间输给了哥斯达黎加，但他们那套上半场装死、下半场爆发的战术还是给全世界留下了极其深刻的印象。而在挨完打准备反击的时候，森保一厚积薄发的王牌往往是这三个人：堂安律、三笘薫和浅野拓磨。</p>\n<p data-pid=\"J2EJuQeM\">很多之前对日本球员并不了解的人，看完这次小组赛之后估计也会记住这些名字。如果再去搜一搜他们的新闻，会发现堂安律还在入选世界杯大名单之后喊出了这样的口号：“我的目标是世界杯夺冠。”</p>\n<p data-pid=\"H-eY2ado\">当时的舆论都在笑，说这是谁给你的勇气，梁静茹吗？但到了今天，人们发现这个目标虽然遥不可及，但背后可能真有着一些东西，能够成为他们说出这句话的勇气。</p>\n<p><img src=\"https://picx.zhimg.com/v2-65b1ad5cdf85031503fb49ed51dc5b78_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"696\" data-watermark=\"original\" data-original-src=\"v2-65b1ad5cdf85031503fb49ed51dc5b78\" data-watermark-src=\"v2-e50a5d8acdb08f5769d7097b9b14cff9\" data-private-watermark-src=\"v2-2f3e475433235096a5b034e47e15f473\"></p>\n<p data-pid=\"Yuy5qEKN\"><b>【豪言壮语的堂安律】</b></p>\n<p data-pid=\"p2BUNOq9\">堂安律在1998年出生于兵库县，几乎从小就是周围人眼里的足球天才。</p>\n<p data-pid=\"cbmSdYwC\">上小学的时候，他就已经加入了职业俱乐部的少年队。小升初时，他接到了来自大阪樱花、神户胜利船、名古屋鲸八等一堆青训营的橄榄枝，最终选择了离家最近的大阪钢巴。初中时，他和队友们一起实现了日本足球史上第一个全国U15三冠王，因为能左能右的进攻能力被报纸杂志写作“下一个家长昭博”。</p>\n<p><img src=\"https://pica.zhimg.com/v2-a59ff35593c9993234bac1f1ea8534d9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"589\" data-rawheight=\"784\" data-watermark=\"original\" data-original-src=\"v2-a59ff35593c9993234bac1f1ea8534d9\" data-watermark-src=\"v2-1858ebcff9a6317cedb263097cdf990e\" data-private-watermark-src=\"v2-b6e7e54e589d96655c0292849d280de2\"></p>\n<p data-pid=\"TktOFhMe\">17岁，堂安律跳级升入大阪钢巴一线队，还在与FC首尔的比赛里成为亚冠史上最年轻的出场球员。一周之后，再次领取了J联赛的同款纪录。</p>\n<p data-pid=\"ghupVkCI\">第二年，大阪钢巴设立U23开始征战日丙联赛，堂安律顺利成为主力核心。同时他还代表日本U19拿到亚青赛冠军，自己喜提赛事MVP和2016年度亚足联最佳年轻球员。</p>\n<p data-pid=\"33QPrwIw\">这样傲人的成绩单，基本上是留不在日本足坛的。2017年5月，堂安律刚在世青赛里4场打入3球，下个月就被荷甲格罗宁根直接签走。</p>\n<p data-pid=\"L-6loW7U\">发布会上，他说出了这样的话：“我早就想去欧洲踢球了，这种想法越来越强烈。在欧洲，我保证自己会像疯了一样去踢球。”</p>\n<p><img src=\"https://picx.zhimg.com/v2-3768f0fee5b1a7560288604142ae5920_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"770\" data-rawheight=\"433\" data-watermark=\"original\" data-original-src=\"v2-3768f0fee5b1a7560288604142ae5920\" data-watermark-src=\"v2-60f739611ec2cfd27af0cfe2c00d5d0c\" data-private-watermark-src=\"v2-9e4cf890e89184f4fff1a8fd23734016\"></p>\n<p data-pid=\"Y5PL_vnz\">他也做到了。</p>\n<p data-pid=\"KKn0Oo0e\">故事的开端就和很多旅欧的亚洲球员一样，比赛里还不怎么适应难以进球，训练里队友们也不怎么喜欢给他传球。在他当时的租借合同里，还有“一年达不到固定上场次数就中断”的条款。心急的堂安律找到教练，直接开门见山：“为什么不给我机会？”对方也直接回答：“一个不进球的前锋想要什么机会。”</p>\n<p data-pid=\"3WThO-B7\">不甘心的他为了证明自己开始主动加练，每天至少一个小时练体能练对抗，一个个询问愿意帮忙的队友再练传球配合和射门。两个月之后，他打进了在荷兰杯和荷甲的首球，开始坐稳主力。赛季打完一年到期，格罗宁根不仅毫不犹豫立刻买断，还送上了象征核心的7号球衣。</p>\n<p data-pid=\"RDtQXIwU\">接下来的几年，堂安律从格罗宁根转会埃因霍温，又前往德甲，先后加盟了比勒菲尔德和弗赖堡。期间他还出于出场时间和职业规划的考虑，拒绝了来自曼城和莫斯科中央陆军的报价，虽然那是他收到薪水最高的两份合同。</p>\n<p><img src=\"https://picx.zhimg.com/v2-87926844c643ec0ecab84f3d412e1cd9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1620\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-87926844c643ec0ecab84f3d412e1cd9\" data-watermark-src=\"v2-c528732b1ed3f5b5b8100e05f103da72\" data-private-watermark-src=\"v2-75a727788bb73e0fd33981600ec1d662\"></p>\n<p data-pid=\"BfyRcQ3h\">2018年世界杯之前，有记者曾经采访过堂安律，问他谁是同龄人里的目标。堂安律是这么回答的：“姆巴佩，因为他是我们这个年纪里的最强者。我每天都在努力训练，就是为了能有一天超越他。”</p>\n<p data-pid=\"bUT8bzpg\">虽然那届世界杯上，日本主教练西野朗还是更加喜欢用老将没有选择他。但堂安律还是在年底的科帕奖评选里，和姆巴佩、阿诺德、罗德里戈一起入围了10人候选名单。</p>\n<p><img src=\"https://picx.zhimg.com/v2-b3b1cb71bd3be3659e501d4c872aae11_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"533\" data-watermark=\"original\" data-original-src=\"v2-b3b1cb71bd3be3659e501d4c872aae11\" data-watermark-src=\"v2-b1b3192931b5cbbfa996733b94683f78\" data-private-watermark-src=\"v2-dafbbd132b2c78948f689ae09b5caf22\"></p>\n<p data-pid=\"XlijwuWP\">到了2022年世界杯，森保一肯定不会再放弃这样的球员。堂安律也在入选后说了开头的那段话。</p>\n<p data-pid=\"rbsDwctp\"><b>“我的目标是夺冠，对，世界杯夺冠。我当然知道这不太现实，但在这个舞台就是要敢于做梦。小时候我们说要参加世界杯，都会被周围人当成傻瓜嘲笑。但就是这么一群傻瓜怀揣着梦想，我们才走到这个舞台。都已经来到世界杯了，不做梦怎么行？”</b> </p>\n<p data-pid=\"jYLUillG\">中二吗？但一路被称作天才走来的堂安律，就是这么年轻气盛。首战德国，他替补出场打入扳平进球。今天对阵西班牙，又是他替补出场扳平了比分，还策划了第二个进球。</p>\n<p data-pid=\"-oSiqMAk\">堂安律的那些豪言壮语，也许还是不太可能做到，但他绝不只是说说而已。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-cdd0eab8ce36464f8cf7361d00ffa738_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"682\" data-watermark=\"original\" data-original-src=\"v2-cdd0eab8ce36464f8cf7361d00ffa738\" data-watermark-src=\"v2-d75f289a9f0eb6089481a6c3e0e40fc4\" data-private-watermark-src=\"v2-83045536e23f0e5af7a612b23eda73c4\"></p>\n<p data-pid=\"MyhD9cJJ\"><b>【文武双修的三球王】</b></p>\n<p data-pid=\"NQrCSQQz\">接到堂安律横传，直到最后一秒都不愿意放弃，赌上VAR那一丝可能性把球勾回来的，是被球迷称为“三球王”的三笘薫。</p>\n<p data-pid=\"3_oWxZMq\">另一个被日本足坛称为天才的球员，但与堂安律走过了不同的道路。</p>\n<p data-pid=\"nhQzs-5q\">三笘薫从幼儿园就开始踢球，小学三年级开始加入川崎前锋青训营，五年级和六年级连续两年打进小学生全国大赛决赛圈。</p>\n<p data-pid=\"m8RS8Vtp\">但他在高中毕业后没有选择直接走入职业，而是考进了名校筑波大学的体育学专业。一边以特别指定球员的身份继续为川崎前锋踢球，一边学习运动营养学等专业课，从那时就开始规划自己的饮食，来增加原本很差的对抗能力。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-847cd0b20917aaee351cad19def99299_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"592\" data-watermark=\"original\" data-original-src=\"v2-847cd0b20917aaee351cad19def99299\" data-watermark-src=\"v2-1faa982bb5e8501f94a1d90cd0e58ae2\" data-private-watermark-src=\"v2-3fea6596658299dc8fbef511d89883d5\"></p>\n<p data-pid=\"BpwSZ0Xp\">大学期间，他两次入选日本代表队，连续在世界大学生运动会足球比赛里拿下金牌。</p>\n<p data-pid=\"IpU3koM9\">毕业前，有日本媒体报道他头戴GoPro在训练场不断收集带球突破数据，并且和协助者比较，写了篇关于《为什么我的突破能过人》的毕业论文。得出的结论包括：“我不是单纯靠速度，而是有意识带动对手重心变化”、“接球前就时刻观察对手站位空档，接球后也不能只知道低头盘带”等等。</p>\n<p data-pid=\"KMGlyHnd\">三笘薫在社交媒体上笑着辟谣说我怎么写这种标题的论文，但后来人们才知道，他辟谣的只是标题，论文还真的是研究1对1里进攻球员要怎么处理。</p>\n<p><img src=\"https://picx.zhimg.com/v2-dac50ffd6a155cdfecc0ca439863d70e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"690\" data-rawheight=\"780\" data-watermark=\"original\" data-original-src=\"v2-dac50ffd6a155cdfecc0ca439863d70e\" data-watermark-src=\"v2-762c2803df45e6a1ea6b92c972c753c4\" data-private-watermark-src=\"v2-2c145c0747acd5c20b7aacb8bc96124c\"></p>\n<p data-pid=\"YnbsMkf3\">大学毕业后，三笘薫成为川崎前锋核心球员，第一个职业赛季就在J联赛打出了超级球星级表现。第二年300万欧元被英超布莱顿买下，然后租借到比利时，很快在比甲上演帽子戏法。</p>\n<p data-pid=\"e3oUUFgU\">日本国内称呼他“三笘无双”，早就有了把他选进国家队的呼声。然而森保一在国奥队就是不给他首发，国家队就是不招他，直到去年底12强赛才入选。</p>\n<p data-pid=\"cugiJ0NF\">刚入选，就是替补出场送助攻，帮助伊东纯也打进对阿曼全场唯一进球。赛后他说：<b>“无论什么时候，无论什么情况，我都在思考比赛。上半场比赛时，我就为出场做了很多准备，脑海中总是设想出场后应该怎么踢。”</b></p>\n<p data-pid=\"vg3AXFiT\">打澳大利亚还是替补出场，这次更是连进两球，尤其第二球充分展现了自己靠技术和节奏变化如何过人的特点。</p>\n<p><img src=\"https://picx.zhimg.com/v2-16e5ec4d3e9f973634d1fab8dd063a15_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"416\" data-rawheight=\"212\" data-watermark=\"original\" data-original-src=\"v2-16e5ec4d3e9f973634d1fab8dd063a15\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"mI7Bf8Ja\">这个赛季，三笘薫租借到期回到了布莱顿。适应期还是从替补打起，不过到了11月已经开始渐入佳境。</p>\n<p data-pid=\"6zHSz6cS\">4-1击败切尔西的比赛，他第一次在英超首发，开场5分钟就送出助攻。下一轮面对狼队继续首发，打入英超处子球并且以85%的得票率当选本场最佳。四天之后的联赛杯，又在阿森纳身上收获了英格兰杯赛的处子球。</p>\n<p data-pid=\"Rxj6PCOC\">到了世界杯，三笘薫在森保一的装死流里继续承担着替补出场，改变比赛节奏的作用，打的还是边翼卫。面对德国，他出场之后策动了左路攻势，帮助堂安律打进了扳平一球。赛后他效力的布莱顿发来贺电：“这是国王昨天的自拍。”</p>\n<p><img src=\"https://pic1.zhimg.com/v2-cca1150c968f4f172b98f2674154c5fc_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"663\" data-rawheight=\"852\" data-watermark=\"original\" data-original-src=\"v2-cca1150c968f4f172b98f2674154c5fc\" data-watermark-src=\"v2-40e7d4377d98954198b1f8211476f9e3\" data-private-watermark-src=\"v2-009550e7a26315da1d79ab3a9a6afd64\"></p>\n<p data-pid=\"wjcVPA12\">打西班牙是熟悉的剧情和不同的路线，这次他把堂安律的横传勾到了中路，助攻田中碧空门得手。这些表现不禁让人想起开赛之前，一位儿时邻居发来的祝福视频。</p>\n<p data-pid=\"-19vPzZX\">“三笘薰选手，祝贺你参加世界杯，我是以前住在你家隔壁的大叔。想不到小时候等妈妈回家时，在我家客厅沙发玩游戏的那个少年，会成为日本国家队的球员，踏上了卡塔尔的赛场。叔叔真的非常高兴，全家都会为你加油。希望你能从左边路带球突破，一定要争取从德国、哥斯达黎加和西班牙身上取得进球。总之，希望你们在世界杯上不要留下遗憾。”</p>\n<p data-pid=\"ZvGsESsp\">那个大叔，是《孤独的美食家》主演松重丰。三笘薫虽然没能在小组赛取得进球，但这一路肯定没有留下遗憾。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-7beca675ec4de31e5fd0a48240ca33d9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"540\" data-rawheight=\"960\" data-watermark=\"original\" data-original-src=\"v2-7beca675ec4de31e5fd0a48240ca33d9\" data-watermark-src=\"v2-e016f418951ffa6825549c1b818f2e65\" data-private-watermark-src=\"v2-accb24e6f2d1b00d625ad400f73f9e41\"></p>\n<p data-pid=\"ubu6I7NU\"><b>【绝地反击的浅野拓磨】</b></p>\n<p data-pid=\"3ZIFlhjg\">和堂安律、三笘薫相比，浅野拓磨的成长经历并不相同，留洋之路更是坎坷许多。</p>\n<p data-pid=\"CPvqt_Yt\">他的父亲是一名卡车司机，母亲是全职主妇，家里有7个孩子。从小学到中学，他都在校园足球的环境里成长。升入高中的时候，还曾经因为家庭经济条件限制打算放弃足球之路。是当时一家足球名校的顾问来到家里劝说，才让浅野拓磨下定决心继续踢球。</p>\n<p data-pid=\"-US990vf\">高中时期，他带队连续三年打进全国选手权大赛，一次6场进7球杀入决赛、虽然屈居亚军但带走了金靴，还有一次成功入选了赛事的最佳阵容。</p>\n<p><img src=\"https://picx.zhimg.com/v2-8ff6ded56029099356e28df46740f3ae_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"840\" data-watermark=\"original\" data-original-src=\"v2-8ff6ded56029099356e28df46740f3ae\" data-watermark-src=\"v2-6a3b37183a3bbc55aabeb74947c258b9\" data-private-watermark-src=\"v2-67e3a6c2b3114498e73452344598d7df\"></p>\n<p data-pid=\"B50GKlYT\">凭借这样的表现，浅野拓磨高三那年得到了多家J联赛俱乐部的邀请，最终选择了刚刚夺冠的广岛三箭。</p>\n<p data-pid=\"CiKATIlS\">经过了一段时间的蛰伏和替补，21岁的他拿到了J联赛年度最佳新秀，还在亚青赛和奥运会充分展现了速度与对抗的优点。2016年7月，浅野拓磨以400万欧冠身价加盟阿森纳，然后为了申请劳工证租借去了德乙球队斯图加特。</p>\n<p data-pid=\"lWEhYW8y\">这是他与阿森纳故事的开始，但也是结束。</p>\n<p data-pid=\"flZUpFPm\">无论是踢德乙还是德甲，或者换地方去了汉诺威，他的进球效率都不高。外租三年之后，他以100万欧元转会贝尔格莱德游击，身价缩水了75%。</p>\n<p><img src=\"https://picx.zhimg.com/v2-a8b8af64f896afe56c849d6f8b64cfcb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"906\" data-rawheight=\"513\" data-watermark=\"original\" data-original-src=\"v2-a8b8af64f896afe56c849d6f8b64cfcb\" data-watermark-src=\"v2-6831abbfccf1819328a164db15649c7b\" data-private-watermark-src=\"v2-487d908c60f2d87ca26aa3b9476b59bd\"></p>\n<p data-pid=\"fJzVAPtC\">当时，很多媒体都用了这样的标题：《21岁加盟阿森纳，三年后告别主流联赛》。去年因为球队欠薪，他解约去了德甲波鸿，但人们还是觉得浅野拓磨已经踢不出什么大名堂。</p>\n<p data-pid=\"LdGb9n8y\">包括入选国家队参加世界杯，日本国内也都认为这和当年效力森保一的广岛有着很大的关系。巴西裔国脚田中斗莉王就在直播里说过：“日本队这三名前锋一个都不行，浅野就只会闭着眼向前冲。”</p>\n<p data-pid=\"UtLe3LTt\">与德国的那场比赛，浅野拓磨替补出场果然一直在向前冲，尽管在高抬腿的吕迪格面前显得是那么无能为力。但他冲完一次又一次，最后真的冲出机会打进了逆转的进球。今天面对西班牙，同样替补出场的他没能进球，但几次冲进禁区的抢点还是让对方吓得够呛。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1d9bfb82de08210b33357468b3b14322_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"577\" data-watermark=\"original\" data-original-src=\"v2-1d9bfb82de08210b33357468b3b14322\" data-watermark-src=\"v2-2bd1e87fd11e6a0c62b741bfd8cabd3e\" data-private-watermark-src=\"v2-2c4b15ef4506f304c258c5f31f7d0026\"></p>\n<p data-pid=\"i45EZd5S\">四年前，他打过世预赛却被西野朗放弃，很多人以为他会从此错过世界杯。</p>\n<p data-pid=\"UaOdTHaM\">四年后，他在开赛的两个月之前韧带断裂，选择保守治疗才被森保一带到了卡塔尔。</p>\n<p data-pid=\"BpxiTGrH\">田中斗莉王已经在直播里发表了“全面谢罪”，向浅野拓磨道歉。有人说这换到咱们国内，近似于赵鹏打服了范志毅。</p>\n<p data-pid=\"9Bs3LTfb\"><b>【从悲到喜的森保一】</b></p>\n<p data-pid=\"MGR72mrD\">1993年，美国世界杯亚洲区预选赛最后一轮，日本队对阵伊拉克。根据赛前的形势，日本队只要在卡塔尔多哈的中立球场拿下胜利，就可以获得在第二年参加世界杯的资格。如若成功，那将是日本队历史上第一次进军世界杯。</p>\n<p data-pid=\"5hVwZ992\">然而，包括森保一在内的日本队球员奋战90分钟，最终只收获了一场2-2的平局。多年之后回忆起那场比赛，森保一已经记不得比赛内容，只记得回酒店的路上一直在哭：“心碎了，绝望了。无论发生了什么，都没有比那更糟糕的了。”</p>\n<p data-pid=\"AJgUI7wI\">后来的日本足球界，将这场失败统一称为“多哈悲剧”。</p>\n<p><img src=\"https://picx.zhimg.com/v2-4558af4bfa6814cb3ed39eb744247b06_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"375\" data-watermark=\"original\" data-original-src=\"v2-4558af4bfa6814cb3ed39eb744247b06\" data-watermark-src=\"v2-8d4b2435175c0150c6a8de9b1fae4ae2\" data-private-watermark-src=\"v2-e3a6eb0d107ef930d28115226113236f\"></p>\n<p data-pid=\"pw6qiZmJ\">在那场悲剧之后，足协主席川渊三郎推出《日本足球百年计划》，在职业联赛、青训、国家队等方面进行改革和长远布局。作为核心的青训改革大致可以分为四个方面：培养联赛文化、培训中心体系、培养大量教练、以儿童为核心普及足球运动。</p>\n<p data-pid=\"S1rhqA1g\">培养联赛文化，是让不同出路的小球员都能踢上高质量比赛，比如面向职业俱乐部青训的高元宫杯，以及面向中小学生的选手权大会，包括大学生联赛等等。</p>\n<p data-pid=\"gLsJuB1m\">培训中心体系，是让中小学老师、社区业余球队教练、国家级教练培养中心、J联赛和国家队都能参与共建，分享球员、战术和经营信息。</p>\n<p data-pid=\"qlVuZgnQ\">培养大量教练，不止是追求更多的注册数量，拿到证的也需要定期参加继续学习培训班，攒够学分才能更新。</p>\n<p data-pid=\"lnJpomwU\">以儿童为核心普及足球运动，是通过各种节日庆典、老师培训和职业俱乐部开放日等活动，让孩子们产生自发性的兴趣。</p>\n<p><img src=\"https://picx.zhimg.com/v2-73d36f42a1a2001d7021f7f7409d5f99_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"400\" data-watermark=\"original\" data-original-src=\"v2-73d36f42a1a2001d7021f7f7409d5f99\" data-watermark-src=\"v2-d17728b2cb8be4bd3a548ebe7eb54df4\" data-private-watermark-src=\"v2-5a0c8ee76662b4569b15bfb6ccfe2ff6\"></p>\n<p data-pid=\"AhTMz7GY\">以上种种，你可以从今天的日本球员身上看见真实的效果。</p>\n<p data-pid=\"ybQonNsf\">堂安律来自职业青训、三笘薫一边读大学一边踢比赛、浅野拓磨则是校园足球培养……他们的人生轨迹各不相同，但日本的青训培养彼此交叉甚至与整个社会形成网络，最终在顶端汇集成一支旅欧大军。</p>\n<p data-pid=\"EJEJdDWN\">三十年前，身穿17号球衣的森保一在多哈只能哭泣。三十年后，他带着这支比当年的自己和队友强得多的球队，在世界杯上击败德国和西班牙拿到小组第一。</p>\n<p data-pid=\"NE_Az03v\">也许森保一这种装死流战术，面对克罗地亚装着装着就真的死了，能挺过去后面也还有强大的巴西。也许对于现在的这支日本队来说，堂安律“想要世界杯夺冠”的目标仍然是遥不可及的梦想。</p>\n<p data-pid=\"dQZG-dFc\">但能来到这里，拥有做梦的权利，本身就已经是一件幸福的事情。</p>\n<p><img src=\"https://picx.zhimg.com/v2-f0c85349a7234bb9704ee93025f2f5ac_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1437\" data-rawheight=\"855\" data-watermark=\"original\" data-original-src=\"v2-f0c85349a7234bb9704ee93025f2f5ac\" data-watermark-src=\"v2-541a4f37cfb128819c6bfaf86d57eec3\" data-private-watermark-src=\"v2-8caee6e67419f5a11eb17b82f0c503a2\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/roland-zhou?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">羽则</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/570109114/answer/2783838578?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">329 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/570131168?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">12 月 2 日日本队小组第一晋级卡塔尔世界杯 16 强，本场比赛该球队都有哪些精彩表现？</a><br><a href=\"http://www.zhihu.com/question/524061867?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">日本等 4 队顺利入围，目前共有 19 支球队确定晋级卡塔尔世界杯，你对这些球队的表现都有哪些期待？</a><br>\n","link":"http://www.zhihu.com/question/570109114/answer/2783838578?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"一日一技｜巧用开源软件 Mackup 在不同设备间同步各类软件设置","date":"2022-12-02 03:29:39","description":"本文抛砖引玉，使用开源软件 mackup 对设备中无法进行云同步的软件进行配置的备份与还原。<a href=\"https://sspai.com/post/77012\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77012"},{"title":"派早报：Google 公布 2022 年 Play Store 最佳榜单、贝尔金推出 AirPods 清洁套装","date":"2022-12-02 00:58:55","description":"Apple 允许将数字车钥匙功能共享给 Pixel 用户、密码管理工具 LastPass 再次出现数据泄漏事件等<a href=\"https://sspai.com/post/77075\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77075"},{"title":"新玩意 129｜少数派的编辑们最近买了啥？","date":"2022-12-01 09:35:14","description":"关于栏目很多读者都会好奇少数派的编辑们到底平时都「买了啥」。我们希望通过「编辑部的新玩意」介绍编辑部成员们最近在用的新奇产品，让他们自己来谈谈这些新玩意的使用体验究竟如何。内容声明：《新玩意》栏目如含 ...<a href=\"https://sspai.com/post/77068\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77068"},{"title":"求推荐几个比较好的钢琴音源？","date":"2022-12-01 08:40:38","description":"\n<blockquote data-pid=\"BYoiEaYQ\">天赋和伟大之间，隔着8446个昼夜。<br><br>推荐阅读：从2022年9月24到10月22，写了快一个月，花了大量的时间和精力，终于更新完这篇钢琴音源的文章。纵观全网，我很幸运自己使用了这个时代最好的钢琴音源，就现状来看，国外有很多关于钢琴音源的详细推荐，但在国内，目前我暂时还没有发现类似的文章，于是，我决定写下这个指南，我希望它能被更多正在赶往这一主题的人看到，全文仅代表个人主观喜好，因为个人能力原因，定有纰漏，不当之处，请实践检验之。<br><br>——思来想去，留开篇引题</blockquote>\n<a href=\"https://zhuanlan.zhihu.com/p/568417242\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://picx.zhimg.com/v2-7fd09674aa36a528fe0c6b3ab688f584_qhd.jpg?source=b1748391\" data-image-width=\"791\" data-image-height=\"511\" class=\"internal\">小海cosea：如何选择？10款经典钢琴软音源推荐</a><p data-pid=\"CzFT2DEG\"><b>Synthogy Ivory II象牙钢琴最好。</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-979f171d2dd1cbd13763d124d0420369_720w.jpg?source=b1748391?rss\" data-caption=\"Synthogy Ivory II\" data-size=\"normal\" data-rawwidth=\"1726\" data-rawheight=\"1057\" data-watermark=\"watermark\" data-original-src=\"v2-979f171d2dd1cbd13763d124d0420369\" data-watermark-src=\"v2-0bacd2ca01014c7cf3cd13a5b2177741\" data-private-watermark-src=\"v2-4da89d1957875269175911eeeb29fc4e\"></p>\n<p data-pid=\"RHWibSEM\"><b>推荐其中三套：Grand Pianos、Italian Grand、American Concert D</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-e5f6fefffeed790f84e95e19bcc91b1c_720w.jpg?source=b1748391?rss\" data-caption=\"Synthogy Ivory\" data-size=\"normal\" data-rawwidth=\"3440\" data-rawheight=\"1416\" data-watermark=\"watermark\" data-original-src=\"v2-e5f6fefffeed790f84e95e19bcc91b1c\" data-watermark-src=\"v2-b5366726317bf19420ca5f71f0b5e362\" data-private-watermark-src=\"v2-bdcb42439757bc1501f12dc6d504844b\"></p>\n<p data-pid=\"PSeSZJMG\">不过一定得VST官方独立软件版，Ivory II代更新后有了更多的新功能，并且重磅推出了两款全新三角钢琴，但目前我只用过一代Synthogy Ivory，Synthogy Ivory II除了Grand Pianos和Italian Grand，还有American concert以及Studio Grands部分(这两架钢琴在一代Synthogy Ivory I时还没有，所以才导致1.64版本中，只有Grand Pianos和Italian Grand，至于立式部分，不是很喜欢就不多提了)，Synthogy Ivory II一共是五类，都需要单独购买。</p>\n<blockquote data-pid=\"VcdxBkmw\">补充：Synthogy Ivory II这家公司真的很专一，不像vsl，什么都卖，感觉vsl这家公司更像Native Instruments的Kontakt和Komplete Kontrol或者Cubase的黑龙路线，什么都有，是一个完整的生态链，而Synthogy Ivory II只卖原声钢琴音源，可以说非常专一了。<br><br>注：为继续下文做铺垫，目前来说，从听感来看，原声钢琴&gt;VST音源&gt;电钢&gt;建模钢琴音源&gt;远好于电子琴；简单的举个例子，4万人民币的Nord Grand舞台电钢甚至还没有399美元（2800人民币左右）的Keyscape好听，这就很离谱，至于雅马哈旗舰电钢Yamaha CLP-785，3万元人民币，也是无法和最顶级的VST音源(比如Synthogy Ivory II、Vienna Synchron Pianos：BÖSENDORFER IMPERIAL、Production Grand 2、Keyscape、noire等等)相提并论的，还有大名鼎鼎的Roland罗兰LX708(三万元)，也是同理，可是，最贵的钢琴音源也不过540欧元一台，虽然两者有各自的应用场景，但对已经放弃昂贵的原声钢琴的我来说，本文只谈音色，直接建议VST音源，如果需要舞台表演，灵活性最好的肯定是Nord Grand，而不是立式或者三角的电钢，当然，VST音源需要你懂电脑，很多人说这很麻烦，说什么需要电脑，还有声卡，还有音箱，还有midi键盘，还要学安装宿主，我说实话，这个年头即使你不做编曲，这些东西不也是最基本的东西吗，对很多人来说，这根本就不能算成本，唯一成本就两个，一个是音源，一个是midi键盘，这两加一起，我拿Synthogy Ivory II Grand Pianos+NI KOMPLETE KONTROL S88，也不过才1万人民币，而且就算你再买2万的电脑，那个电脑是不是你还能用来学习工作，它是有东西在的啊，你买电钢会送你2万的台式电脑来学习工作吗，不能，所以我就极其讨厌那些说电钢开箱就用，不用开机的，大人，时代变了，电脑开机+宿主打开就1分钟，一分钟啊喂，如果你的热爱就这，那赶紧撤吧，而且64G内存你根本不需要关机，一直开1年你怕个啥，还有电钢很重，它不能放桌面，还有说midi键盘手感不好的，那就直接Studiologic SL88 Grand实木象牙midi键盘，或者KAWAI VPC1全配置midi键盘，都只用1万元，这两手感都非常棒，用来练琴没问题，抛开所有前面的论述，就事论事，我认为电钢和midi键盘都不可或缺，前面这样讲只是平衡网上大力宣扬电钢的气势，让midi键盘回归它合理的位置，我自己是建议midi键盘和电钢各买一个的，另外，电钢也支持midi功能，它不仅手感好，而且它本身也是一个midi键盘，但是它不适合编曲，只适合录钢琴轨，所以还是需要midi键盘，重要的是midi键盘很小很轻很方便，最重要的是midi键盘可以直接放桌面上，放个人桌面的意义就是：你随时坐下来无论工作还是学习还是休闲娱乐都可以触碰得到，你会情不自禁的使用它，这，太重要了。</blockquote>\n<p><img src=\"https://pica.zhimg.com/v2-ec53fbca69f66807973ac82ba291d205_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3024\" data-rawheight=\"4032\" data-watermark=\"watermark\" data-original-src=\"v2-ec53fbca69f66807973ac82ba291d205\" data-watermark-src=\"v2-43d9baac590112154740d9962eae6b6f\" data-private-watermark-src=\"v2-87331bd4633ee5ff5c7e1916feff0da4\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-c4d007783731695b1f5b25f50950bb76_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3024\" data-rawheight=\"4032\" data-watermark=\"watermark\" data-original-src=\"v2-c4d007783731695b1f5b25f50950bb76\" data-watermark-src=\"v2-4bb20ca0c2f67a10539eafe8421b1e66\" data-private-watermark-src=\"v2-0d29fff681b323ec1ff1edbd26a41a63\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-0003a7d1315ad833aad7b3b263d80934_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3024\" data-rawheight=\"4032\" data-watermark=\"watermark\" data-original-src=\"v2-0003a7d1315ad833aad7b3b263d80934\" data-watermark-src=\"v2-33c50a717225db618abadbd0074a81ca\" data-private-watermark-src=\"v2-0ff47708a2b9c56513083c5c6d33bcc4\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-bd7fdcb0bf53194fe99213f70a68aebe_720w.jpg?source=b1748391?rss\" data-caption=\"官网只有钢琴音源，无其他产品\" data-size=\"normal\" data-rawwidth=\"1660\" data-rawheight=\"1111\" data-watermark=\"watermark\" data-original-src=\"v2-bd7fdcb0bf53194fe99213f70a68aebe\" data-watermark-src=\"v2-9e6d8fdd6c587c25131a7c675445620e\" data-private-watermark-src=\"v2-71618fdbe416b51924a688633c617193\"></p>\n<p data-pid=\"LYJwrWjX\">其中，我认为<b>Grand Pianos、Italian Grand、American Concert D</b>这三个都值得购买，尤其是前两者，因为Grand Pianos<b>(最值得购买)</b>包括<b>Bösendorfer 290、Steinway &amp; Sons D-274、Yamaha C7三大三角钢琴，</b>而Italian Grand更是录制了Fazioli的声音，Fazioli的音源太少了，这是我知道唯一没有瑕疵的法奇奥里的音源，真的是必不可少的存在。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1d3053e8ebff088e43657430d986eaf9_720w.jpg?source=b1748391?rss\" data-caption=\"Synthogy Ivory II\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"242\" data-watermark=\"watermark\" data-original-src=\"v2-1d3053e8ebff088e43657430d986eaf9\" data-watermark-src=\"v2-c003e98c38b4097845e220c5ddc17c30\" data-private-watermark-src=\"v2-022383bda8e496e70f9cc0634ac5e202\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-3728aed6c1c1525deebfb7e0db6d1bb2_720w.jpg?source=b1748391?rss\" data-caption=\"Synthogy Ivory II价格一览\" data-size=\"normal\" data-rawwidth=\"795\" data-rawheight=\"1717\" data-watermark=\"watermark\" data-original-src=\"v2-3728aed6c1c1525deebfb7e0db6d1bb2\" data-watermark-src=\"v2-54ceef2cbd98a2e6408c9bb105d0a4eb\" data-private-watermark-src=\"v2-5e676a898e7638fdef37cc9e97ed9498\"></p>\n<p data-pid=\"mwuDfg3G\">目前只用过<b>Grand Pianos</b>，三架三角钢琴都超级喜欢，里面Yamaha C7、German Steinway &amp; Sons D-274和Bösendorfer 290我认为都是无敌的存在，Yamaha C7最有特点，清冷、透亮，极具穿透力(但它的采样录制绝对是有一定问题的，个人并不是很喜欢，是三者里面最差的)，目前我用得最少，但就这种风格来说，我想用的时候可能会选Synthogy Ivory：Yamaha C7；仅仅从客观角度来说，<b>German Steinway &amp; Sons D-274=Bösendorfer 290&gt;远好于Yamaha C7，</b>从个人偏好来说，个人更喜欢Bösendorfer 290，会更华丽好听，更有特点，但是German Steinway &amp; Sons D-274相比来说，会更耐听，不会腻，两者都是我的最爱，只是平时更多使用Bösendorfer 290，久了，腻了后更多会使用German Steinway &amp; Sons D-274，相对来说，German Steinway &amp; Sons D-274最为均衡，这两个音源我使用频率是8:2左右，而Yamaha C7是我在选择同类风格中的选项之一，我想这三者的关系我已经说清楚了，下面继续。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-85ab9a1e3a6eb395b8e92e67894d78e9_720w.jpg?source=b1748391?rss\" data-caption=\"Bösendorfer 290\" data-size=\"normal\" data-rawwidth=\"798\" data-rawheight=\"530\" data-watermark=\"watermark\" data-original-src=\"v2-85ab9a1e3a6eb395b8e92e67894d78e9\" data-watermark-src=\"v2-c730fac794590b662dac609dfef2ddb1\" data-private-watermark-src=\"v2-f7675b38cb10eeaae0a09d608ab0fef7\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-1e7d05e4ecfdc644131f1b7786c1d22c_720w.jpg?source=b1748391?rss\" data-caption=\"Steinway &amp; Sons D-274\" data-size=\"normal\" data-rawwidth=\"799\" data-rawheight=\"531\" data-watermark=\"watermark\" data-original-src=\"v2-1e7d05e4ecfdc644131f1b7786c1d22c\" data-watermark-src=\"v2-98c1a78b2a54797f3390ba38ed3a5e12\" data-private-watermark-src=\"v2-bdec86095b2fd9f6b7b942ed8b1eb70c\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-2468ebfb614595132e605aa02e089a8c_720w.jpg?source=b1748391?rss\" data-caption=\"Yamaha C7\" data-size=\"normal\" data-rawwidth=\"801\" data-rawheight=\"529\" data-watermark=\"watermark\" data-original-src=\"v2-2468ebfb614595132e605aa02e089a8c\" data-watermark-src=\"v2-0bcb64fdcd4d16dfaa9dcbac1abf3659\" data-private-watermark-src=\"v2-3c39fb3666582ee75ec552755e819a2f\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-befac0f2c324c9ee17dad472aa0141aa_720w.jpg?source=b1748391?rss\" data-caption=\"Italian 10英寸三角大钢琴\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"532\" data-watermark=\"watermark\" data-original-src=\"v2-befac0f2c324c9ee17dad472aa0141aa\" data-watermark-src=\"v2-7fc3eaf7ccd1b2e0bf47df2d3c200944\" data-private-watermark-src=\"v2-30a9e0aef3c99f4011f5788d978f63ae\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-9cfb043f809fdecb85fb5f952a1fad47_720w.jpg?source=b1748391?rss\" data-caption=\"Synthogy Ivory II\" data-size=\"normal\" data-rawwidth=\"1175\" data-rawheight=\"770\" data-watermark=\"watermark\" data-original-src=\"v2-9cfb043f809fdecb85fb5f952a1fad47\" data-watermark-src=\"v2-1f1570fad0e2e30d4b44301c4d7f33be\" data-private-watermark-src=\"v2-3300829915199b987c120cad5465abe0\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-e09f4bd1e84ca142810480d02b1d5b86_720w.jpg?source=b1748391?rss\" data-caption=\"Synthogy Ivory II\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"762\" data-watermark=\"watermark\" data-original-src=\"v2-e09f4bd1e84ca142810480d02b1d5b86\" data-watermark-src=\"v2-07ca8957a79e24ed8e438d8a12905358\" data-private-watermark-src=\"v2-5f90f11d9dcea42ed3ebb71d509aadbf\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-711bea3001a4625e4116a1c8a6586b68_720w.jpg?source=b1748391?rss\" data-caption=\"Synthogy Ivory II\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-711bea3001a4625e4116a1c8a6586b68\" data-watermark-src=\"v2-735ea8f36c43064cdaac9897644ec179\" data-private-watermark-src=\"v2-fe4cc1ae39386c4d26b9e4b12db32817\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-168208473fb3f7453db362903cd0a140_720w.jpg?source=b1748391?rss\" data-caption=\"Synthogy Ivory力度曲线调节\" data-size=\"normal\" data-rawwidth=\"791\" data-rawheight=\"511\" data-watermark=\"watermark\" data-original-src=\"v2-168208473fb3f7453db362903cd0a140\" data-watermark-src=\"v2-4f2f319bd52e8c86cdc9a0a2f89c21a5\" data-private-watermark-src=\"v2-a5690294c01261812eee9a2ee4a404c2\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-fd975554deffadef788cd2344a6d9079_720w.jpg?source=b1748391?rss\" data-caption=\"Synthogy Ivory效果EQ混响调节\" data-size=\"normal\" data-rawwidth=\"791\" data-rawheight=\"511\" data-watermark=\"watermark\" data-original-src=\"v2-fd975554deffadef788cd2344a6d9079\" data-watermark-src=\"v2-df67d031f96f98bf46613dcd04069e80\" data-private-watermark-src=\"v2-3c64b8bbb7a7b2e38fbb8768ac31592b\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-8fea68a232fb31c55498532f9d1ea79a_720w.jpg?source=b1748391?rss\" data-caption=\"Synthogy Ivory 1.64 音色浏览界面\" data-size=\"normal\" data-rawwidth=\"844\" data-rawheight=\"699\" data-watermark=\"watermark\" data-original-src=\"v2-8fea68a232fb31c55498532f9d1ea79a\" data-watermark-src=\"v2-ecf772946661553a02af18ae707af26e\" data-private-watermark-src=\"v2-43122b38d56d7b9cd95b232cab6eb927\"></p>\n<p data-pid=\"rErp8jAk\">Ivory 2康泰克版是别人diy的，因为二次采样可以说很难听，和官方vst独立版完全不是一个东西，最开始有人说它两不同，我还不信，后来都安装使用并对比后才幡然醒悟，还是太年轻！</p>\n<p><img src=\"https://picx.zhimg.com/v2-df6c7b108c7aac138680927299889f45_720w.jpg?source=b1748391?rss\" data-caption=\"Synthogy Ivory II by JR Samples未压缩版\" data-size=\"normal\" data-rawwidth=\"1159\" data-rawheight=\"734\" data-watermark=\"watermark\" data-original-src=\"v2-df6c7b108c7aac138680927299889f45\" data-watermark-src=\"v2-c7f3d1ccabb5e130e8bfe58e315ca3ea\" data-private-watermark-src=\"v2-ad91a543124260569688f06f9762362c\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-c5b1d11b0ea2c951aee271cac4ab7327_720w.jpg?source=b1748391?rss\" data-caption=\"Synthogy Ivory II by JR Samples\" data-size=\"normal\" data-rawwidth=\"1184\" data-rawheight=\"733\" data-watermark=\"watermark\" data-original-src=\"v2-c5b1d11b0ea2c951aee271cac4ab7327\" data-watermark-src=\"v2-1cdfba2af11db07d2b0dd806900a8e59\" data-private-watermark-src=\"v2-48365754f0288b7ab9b236c8608af3db\"></p>\n<p data-pid=\"Hy0E5NtA\"><b>Noire在灵感启迪上天下无敌。(能以Kontakt版做到快接近象牙的地位，它确实是Kontakt中的天之骄子，独步武林)</b></p>\n<blockquote data-pid=\"h7-eRKy1\">别看只有一句话介绍，实际上，除了Synthogy Ivory外，我最喜欢的就是Noire，只要弹Noire，我就会很放松，很愉快。怎么来形容，爱你一万年不多，多你一万年不爱，就是那种幸福和愉悦。</blockquote>\n<p><img src=\"https://pic1.zhimg.com/v2-263fe6918d237670e76351d7609fb44d_720w.jpg?source=b1748391?rss\" data-caption=\"NOIRE Pure yamaha cfx\" data-size=\"normal\" data-rawwidth=\"1491\" data-rawheight=\"983\" data-watermark=\"watermark\" data-original-src=\"v2-263fe6918d237670e76351d7609fb44d\" data-watermark-src=\"v2-fe63aece1f8d3f1d9b72b26f4717e88d\" data-private-watermark-src=\"v2-4b41566c05bd2d7b02e1ed8cef5070e0\"></p>\n<p data-pid=\"54k2VdIN\">还有就是Garritan Abbey Road Studios CFX Concert Grand，这款很古老，122g的钢琴音源，昨晚刚试，软绵绵的(不是指音色软绵绵的，是弹奏的感觉是软绵绵的，手感软绵绵的，体验真的独一无二，手指从来没这么舒服)，yamaha cfx采样有太多了，和Noire相比，它更加清冷，单薄，Noire相对来说更加暖而饱满(只是相对来说，cfx系列本身是不温暖的），总之，Garritan Abbey Road Studios CFX Concert Grand这套音源独有一番风味，很有意思，应该会一直用下去。</p>\n<p data-pid=\"HWSFqRuu\">售价：199$</p>\n<p data-pid=\"LqffkhwZ\">小更新：半个月后，国庆回来，试了下，唯有它比之前的地位有所提高，相反，Hans Zimmer Piano地位有所下降，这款音色真是很耐听，犹如江水，绵绵不绝，爱了。</p>\n<p><img src=\"https://pica.zhimg.com/v2-38ca848069844260fcb3767778292d01_720w.jpg?source=b1748391?rss\" data-caption=\"CFX Concert Grand\" data-size=\"normal\" data-rawwidth=\"1124\" data-rawheight=\"639\" data-watermark=\"watermark\" data-original-src=\"v2-38ca848069844260fcb3767778292d01\" data-watermark-src=\"v2-be7d2b52ce6120c52060805b565cb76d\" data-private-watermark-src=\"v2-d31e993ad69606e88d090a244f5f7117\"></p>\n<p data-pid=\"A4Oc8Gsb\">Best Service出品的galaxy steinway非常饱满，音色暖而有力，相对Synthogy Ivory来说不那么艳丽和明亮，但确实是非常好的钢琴音源。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d79fc8f0bd6d18ff522896755959dfa6_720w.jpg?source=b1748391?rss\" data-caption=\"Steinway 5.1 Surround\" data-size=\"normal\" data-rawwidth=\"1014\" data-rawheight=\"709\" data-watermark=\"watermark\" data-original-src=\"v2-d79fc8f0bd6d18ff522896755959dfa6\" data-watermark-src=\"v2-0322f9a831e3d7e58923299855a2c207\" data-private-watermark-src=\"v2-27433687aee2a960ef51ace7b45f23d0\"></p>\n<p data-pid=\"6qIc4g62\">不得不说Keyscape，一开始是非常喜欢的，是顶级的钢琴音源了，是那种无论如何都会一直待在电脑的存在。经过很长一段时间发现，实际上，它是有它的优势，比如方便快捷，但和Synthogy Ivory这些音源相差太大，以后虽然一直会留着它，但爱意已经不再多么强烈(刚装上那时候，以为会成为我的最爱，终究是错付了)。</p>\n<p><img src=\"https://picx.zhimg.com/v2-c89fa6acd10a4ab5852d8bfaedd8f5ca_720w.jpg?source=b1748391?rss\" data-caption=\"话说：Keyscape的价格是真的不便宜\" data-size=\"normal\" data-rawwidth=\"955\" data-rawheight=\"808\" data-watermark=\"watermark\" data-original-src=\"v2-c89fa6acd10a4ab5852d8bfaedd8f5ca\" data-watermark-src=\"v2-8dac3bf513a6869b121e2585ec6e92ac\" data-private-watermark-src=\"v2-b486d8dbecc101f81b4bf173bf437291\"></p>\n<p data-pid=\"aGxYBXye\">Keyscape和Ivory？用过Synthogy Ivory后，打开电脑，停留最多的就一定会是象牙这令人爱不释手的娃儿。。。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f4ec0822804a3c4272ce4de6b31d8377_720w.jpg?source=b1748391?rss\" data-caption=\"Keyscape yamaha c7\" data-size=\"normal\" data-rawwidth=\"1176\" data-rawheight=\"739\" data-watermark=\"watermark\" data-original-src=\"v2-f4ec0822804a3c4272ce4de6b31d8377\" data-watermark-src=\"v2-d86ec64a76b4cb0feafa0f5a8d5abea5\" data-private-watermark-src=\"v2-b7836a28195bba2c17623d5207b438d2\"></p>\n<p data-pid=\"WVY67ieC\">简单来说，Keyscape音色明亮而温暖，温暖动人，又不失yamaha c7的清冷，可能是唯一一款同时兼顾明亮和浑厚的钢琴音源了，是那种一听就会爱上的音色，很容易让人沉醉，甚至沉迷，在阳光明媚的清晨，一缕阳光洒过玻璃窗，划过脸颊，微微的反射在宿主的屏幕上，你双手触去，一阵阵美妙的音符穿过阳台，穿进心窝；在凌晨12点过，寂静无声的夜晚，清晰地听得到键盘的声响，你小心翼翼的按下，耳朵里起了一朵莲花，她温润如玉，她柔情似水，这时，你会明白，Keyscape的意义。。。但是它响应太慢(2万顶级电脑+64g内存+4T固态)，其实也不算慢，只是相对本文上面推荐的音源，慢了，仅仅慢了那么一丢丢，但就这一丢丢，很致命，最难受的是，手速太快后，多个音会糊在一起，这绝对是不可容忍的。虽然它音色非常好听，界面非常专业，也非常漂亮，用起来还简单，还预制了数百种音色(没细数)，但是它的缺点非常致命，使得它只能应对一些（相对来说）比较舒缓、缓慢的节奏，换一种更真实的说法，Keyscape除了极快的手速的外，都能轻松应对，虽然无法应对极快的弹奏，但我还是会说，它是一款非常优秀的钢琴音源(建议每个人都装一个)，我也将一直保留它应有的还不错的地位，当然，再也不可能是最爱了。</p>\n<p><img src=\"https://picx.zhimg.com/v2-c59ce3b48a8175af2ce76af04830017a_720w.jpg?source=b1748391?rss\" data-caption=\"个人工作学习主机最终配置\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-c59ce3b48a8175af2ce76af04830017a\" data-watermark-src=\"v2-39517d6bc586c66dfc54080cb0c04a32\" data-private-watermark-src=\"v2-33422ad7cde7c82efc2710caf164b1fb\"></p>\n<p data-pid=\"U42J_Es5\">Keyscape几百种音色，其中LA Custom  C7 ballad、LA Custom  C7 Bright、LA Custom  C7 Cinematic最好，LA Custom  C7 ballad最适合弹奏，LA Custom  C7 Bright最为明亮，风格迥异，独具一格，LA Custom  C7 Cinematic则是除了Imperfect Samples Fazioli Ebony Concert Grand外，最好听的音色，它们三一同奠定了Keyscape作为顶级音源的基础。</p>\n<p><img src=\"https://picx.zhimg.com/v2-091b549c5dac4c9c956b3cf1cb2aaefa_720w.jpg?source=b1748391?rss\" data-caption=\"Keyscape三大音色\" data-size=\"normal\" data-rawwidth=\"1176\" data-rawheight=\"739\" data-watermark=\"watermark\" data-original-src=\"v2-091b549c5dac4c9c956b3cf1cb2aaefa\" data-watermark-src=\"v2-39fd93ed8afa547d160d634bb8dc15fa\" data-private-watermark-src=\"v2-68a4127ca8b59f27412e6887951c18bb\"></p>\n<p data-pid=\"N-PN2dzJ\">Imperfect Samples Fazioli Ebony Concert Grand Complete，这款钢琴音源我在使用中(这套音源网上非常难找到，我也怀疑自己这套有问题，有很小一部分加载没有声音或者出错)，目前也许是自己不会用，和一般的Kontakt不大一样，总之，觉得很难听就是了，后续持续学习再更新这部分的使用心得体会。</p>\n<p data-pid=\"XhBkSlh3\">好了，更新来了，这次我错了，我来认错了。。。_20220925_Version</p>\n<p data-pid=\"jQNHqdsw\">因为Fazioli Ebony Concert Grand它值得，它太值得了，我算是搞懂了，Fazioli的音色非常好听，但是因为录音采样的原因，这个音源属于很大瑕疵，需要从弹奏上去避开它的录音采样问题，因为如果你直接一手指高速落下，它触底后会发出非常多的噪音，姑且叫底噪吧，还伴随有非常难听的‘孔孔孔’的声音，很明显的撞击木板的声音，这个非常难听的，但是，一旦知道原因了，只要你轻轻地去弹，不要触底，就会避开90%这种难听的声音，这个时候，我可以说，它是目前我听过最华丽、最动听的，一个词形容：温润如玉，也只有这个词，才配得上它的动听，动听到比Keyscape的音色更好听的程度，一点不夸张。我不会拿它弹轻柔以外的任何音乐，但是在轻柔这一块，它有着其他所有音源不可替代的美得窒息的音色。终究来说，它只是一个残次瑕疵品(也许是我安装的和官方的不同，我希望是这样，我一定会再追踪它的根源，希望如此，但愿如此)，它不是一个完成度很高的作品，最多发挥了30%法奇奥里的奇妙，所以，它只属于个人，仅仅用于愉悦自己，但无论如何，它值得一席之地，留给自己，也只留给自己。(这部分说的是：Fazioli Grand P1部分)</p>\n<p><img src=\"https://picx.zhimg.com/v2-bff41825dfcbd39f44d6a3534d6f1d17_720w.jpg?source=b1748391?rss\" data-caption=\"Fazioli Grand P1 14\" data-size=\"normal\" data-rawwidth=\"1229\" data-rawheight=\"771\" data-watermark=\"watermark\" data-original-src=\"v2-bff41825dfcbd39f44d6a3534d6f1d17\" data-watermark-src=\"v2-40f40bbcc747cfca10da4a26344d5c20\" data-private-watermark-src=\"v2-c37117b953b666e1ef0c5a8354c54b05\"></p>\n<p data-pid=\"e6gLm1Y3\">Imperfect Samples Fazioli Ebony Concert Grand Complete还有p2和p3部分，p2部分非常好，没有上述问题，p3可能需要一段时间来爱上，是很有特点的音色，你能想象在圆润中还有金属质感吗？我在p3里面听到了这种金属的质感，那是p1/p2都没有的金属质感，但是，我要说但是，这是贬义的，因为p3的采样录音瑕疵导致的，这个金属质感来自触底后的琴弦的嘶嘶声，属于完全毁掉了，不然它应该是很好听的音色。p2没有p1音色好听，但特点不同，它更加透亮，不是明亮，是透亮，更突出高频，在所有我用过的钢琴音源里，只有它，才能让我想起一个成语“晶莹剔透”，它完全就是这个成语的代名词，虽然p2没有p1那些毛病了，但是有一个相通的，就是fazioil的触底后的丝丝声，嘶嘶嘶。。。像是琴弦的嘶嘶嘶声，总之是有影响的，但已经非常好听了，个人更喜欢p1部分，但是p2也非常好听，而且少了‘孔孔孔’的声音，两者音色好听程度都远超其他所有音源，虽有瑕疵，但都不可替代。但因为p1实在是太瑕疵了，因此p2是我目前用的最多的圆润、透亮的音色。此时此刻，下着雨，雨滴滴答滴答，听着窗外，听着手指触发出的晶莹剔透的声音，我顿时热泪盈眶，情不自已。。。用它即兴了人生第一首Fazioli的钢琴曲。。。感谢Fazioli Ebony Concert Grand。。。感谢！</p>\n<blockquote data-pid=\"i5Ermrw1\">注意*我问了下淘宝代理商，说是这款音源是采样自Synthogy Ivory II Italian Grand的Fazioli的声音，也就是盗版，虽然还不确定真实性，但我觉得还真有可能，不然为什么有那么致命的瑕疵和缺陷。关于这个问题，还得日后留意。</blockquote>\n<p><img src=\"https://pic1.zhimg.com/v2-25b922a63cb2fbbe2dfe9cacb75fdf7a_720w.jpg?source=b1748391?rss\" data-caption=\"Fazioli Grand P2 12\" data-size=\"normal\" data-rawwidth=\"1229\" data-rawheight=\"771\" data-watermark=\"watermark\" data-original-src=\"v2-25b922a63cb2fbbe2dfe9cacb75fdf7a\" data-watermark-src=\"v2-f1417c86b7e43991c4f10695c9987a01\" data-private-watermark-src=\"v2-b1bfa88669a43dd694bb7f7cc77f897c\"></p>\n<p data-pid=\"zuPAzOlI\">Fazioli，来听一听200万的法奇奥里的原声吧：</p>\n<a href=\"http://link.zhihu.com/?target=https%3A//www.bilibili.com/video/BV1DY41187pD\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">200万的法奇奥里的原声</a><p data-pid=\"AmMGOEK8\">Embertone Walker 1955 Concert D，终于到它了。下载了一晚上，安装出现了三次问题，卖家说是原来那个标准库和官网的对不上，从官网获取信息改了标准库文件，才入库成功。</p>\n<p><img src=\"https://pica.zhimg.com/v2-f0bca9af8ef8b8c3a473c1eecb23b26a_720w.jpg?source=b1748391?rss\" data-caption=\"第一次安装出问题，显示demo未激活\" data-size=\"normal\" data-rawwidth=\"1198\" data-rawheight=\"812\" data-watermark=\"watermark\" data-original-src=\"v2-f0bca9af8ef8b8c3a473c1eecb23b26a\" data-watermark-src=\"v2-e3202940edc1491d392565fde0876c51\" data-private-watermark-src=\"v2-69b8cf9c96388578bcbe98955ccf47c2\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"SzhgDvDX\">现在测试完了，189G的音源，我下载加安装整一天，现在也算值得了。Kontakt中它是加载最慢的一个，2G每秒的固态需要10s，是那种需要等待的音源，这在其他音源是不存在的，几乎秒加载，不过这不是多大的问题，进入正题，声音和Imperfect Samples Fazioli Ebony Concert Grand没法比，好在除了响应慢，只适合比较舒缓节奏的音乐外，没有Fazioli Ebony Concert Grand的瑕疵，它的界面非常有吸引力，也非常符合它的定位，那就是“温暖”，它就像胆机一样温暖。很适合夜深人静时，一个人安静的弹琴，很有包裹感，同时低频和高频层次很弱，分离不开，但确实很浑厚，很能引起共鸣，是一款不错的音源。它的定位很尴尬，一边是快要掉出我使用钢琴音源的标准，一边又有别的音源都没有的“温暖”感，就是那种缺点非常明显，但有那么一个不可替代的优点，于是，它也将一直留在我的Kontakt中。关于他，我想，这就是最好的答案。</p>\n<p><img src=\"https://picx.zhimg.com/v2-5402f5c151f532188cba65e5c437d7af_720w.jpg?source=b1748391?rss\" data-caption=\"终于，入库成功了\" data-size=\"normal\" data-rawwidth=\"1190\" data-rawheight=\"904\" data-watermark=\"watermark\" data-original-src=\"v2-5402f5c151f532188cba65e5c437d7af\" data-watermark-src=\"v2-aaa8d3b1135153ad6cd297936d848256\" data-private-watermark-src=\"v2-db94e358cfc36ab18b036c233720e11e\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"v0nZz95I\">最后，我想说，经过一番斗争，挣扎了很久，还是无法欺骗自己的耳朵，永远断绝了删除The Grandeur的邪恶想法，因为它很特别，从最开始的一般般的第一印象，到最后认可它确实就是很厉害，这很不容易，恭喜，它可以永远存在于我的Kontakt中。</p>\n<p><img src=\"https://picx.zhimg.com/v2-4cb07858559cb301bf86f37e1fd3fcc8_720w.jpg?source=b1748391?rss\" data-caption=\"The Grandeur\" data-size=\"normal\" data-rawwidth=\"1150\" data-rawheight=\"973\" data-watermark=\"watermark\" data-original-src=\"v2-4cb07858559cb301bf86f37e1fd3fcc8\" data-watermark-src=\"v2-1b840e91eb6910ee57e53a3abf7bb0e2\" data-private-watermark-src=\"v2-a02256c911476360b754c7226bb7692c\"></p>\n<p data-pid=\"pDR931-V\">更新：终于，我下载安装好了大名鼎鼎的Spitfire Hans Zimmer Piano，容量：196G。。。还在测试中，有时间了更新。。。_20220926_Version 先去干活了，清晨7点。</p>\n<p data-pid=\"2cNRGs4z\">价格：399$</p>\n<p data-pid=\"oOALnW9a\">测试完了，目前可以确定的是，它可以跻身我并列第二的钢琴音源了，和Noire享有几乎(音色不好听，整体不如Noire)同样的地位，它清冷，像一根针一样扎进耳朵，一点也不圆润的声音，冰冷得像一具死尸，但这都不是缺点，而只是它的特点，它真的在这个定位上，做到了几乎完美，响应是所有我用的最快的，给我一种很强的信心。当然，它音色像清水，所以并不好听，但高音触底后散开又别有一番风味，也是它音色上唯一值得说道的了，但它真的做得太好了，适合配乐使用，质量绝对顶级，也正是因为它没有lvory好听，所以，我将它排在了和Noire一样的地位，总之，它是一把杀手锏，是那种我很少会用到，但心里知道有那么一款音源，就更有底气和信心，告诉自己：无惧艰难！</p>\n<p data-pid=\"MVdYcLlk\">到这里，我想测试的音源都测试完了，以Spitfire Hans Zimmer Piano收尾，实在是三生有幸，再会了朋友们！</p>\n<p data-pid=\"Zg4iu5-P\"><b>总结：如果让我只能留下一个音源，那一定是Synthogy Ivory，如果两个，我会选Imperfect Samples Fazioli Ebony Concert Grand，如果三个，那就是</b>Noire<b>！</b></p>\n<p data-pid=\"tweOJf8j\">完！</p>\n<p><img src=\"https://picx.zhimg.com/v2-9e8f3daa7f7cf57a4a20c2f68b037099_720w.jpg?source=b1748391?rss\" data-caption=\"Spitfire Hans Zimmer Piano：Steinway Model D\" data-size=\"normal\" data-rawwidth=\"3424\" data-rawheight=\"1370\" data-watermark=\"watermark\" data-original-src=\"v2-9e8f3daa7f7cf57a4a20c2f68b037099\" data-watermark-src=\"v2-528c32d4f2b1a0d855ec10ca7b3095a0\" data-private-watermark-src=\"v2-bc5cd85be2cc8c331f517dedbb7e41bb\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-4d8fe33f748c6a32fe5ac83b9874b23d_720w.jpg?source=b1748391?rss\" data-caption=\"Hans Zimmer Piano - Full and Bright\" data-size=\"normal\" data-rawwidth=\"1014\" data-rawheight=\"709\" data-watermark=\"watermark\" data-original-src=\"v2-4d8fe33f748c6a32fe5ac83b9874b23d\" data-watermark-src=\"v2-cb809c601cdb660577ed3662f4b66cd5\" data-private-watermark-src=\"v2-41eebe4816876186ee74fbd132d173fc\"></p>\n<h2><b>后记</b></h2>\n<p data-pid=\"miIbxbUy\">实际上，我一直无法试<b>Synchron Pianos Bundle</b>，它目前包括七架非凡的钢琴，涵盖了钢琴的不同风格，价格很nice。希望有朝一日，我能用上。</p>\n<p><img src=\"https://picx.zhimg.com/v2-144abd8c12e46bf8d0f690f9e0bd2948_720w.jpg?source=b1748391?rss\" data-caption=\"Synchron Pianos Bundle\" data-size=\"normal\" data-rawwidth=\"1130\" data-rawheight=\"1048\" data-watermark=\"watermark\" data-original-src=\"v2-144abd8c12e46bf8d0f690f9e0bd2948\" data-watermark-src=\"v2-f1c8f84dec4c7b696c438f14eaef8724\" data-private-watermark-src=\"v2-f5dd304ad2aa8c1d1eb8aa8515c6a9de\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-c45c22f5f8b077b6e7b8615278580391_720w.jpg?source=b1748391?rss\" data-caption=\"€欧元-人民币汇率\" data-size=\"normal\" data-rawwidth=\"962\" data-rawheight=\"767\" data-watermark=\"watermark\" data-original-src=\"v2-c45c22f5f8b077b6e7b8615278580391\" data-watermark-src=\"v2-388f5d99c62bb2a27b053926209afd8c\" data-private-watermark-src=\"v2-5166d9e7f8176c74773a627df6c0306f\"></p>\n<p data-pid=\"CDSNluzd\">来了来了，更新来了。。。</p>\n<p data-pid=\"V1MndCjt\">才知道vsl是有30天试用周期的，我的天，简直绝了，正在安装中，这次会测试较长时间，绝对是最重要的更新，唯一可能超过Synthogy Ivory的存在，非常期待。。。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-99f24eee96c66f99adf73ae06da3e219_720w.jpg?source=b1748391?rss\" data-caption=\"SYNCHRON BÖSENDORFER IMPERIAL\" data-size=\"normal\" data-rawwidth=\"1282\" data-rawheight=\"752\" data-watermark=\"watermark\" data-original-src=\"v2-99f24eee96c66f99adf73ae06da3e219\" data-watermark-src=\"v2-bb8734acd9531a838fb755ebd911136b\" data-private-watermark-src=\"v2-6fc5abb21405d6048cd339eecaa913f5\"></p>\n<p data-pid=\"3oJolzKu\">终于，下载了一晚上。。。下载好了安装包</p>\n<p><img src=\"https://picx.zhimg.com/v2-f821a895bfe5741a6e8280cd3904e6fd_720w.jpg?source=b1748391?rss\" data-caption=\"BÖSENDORFER IMPERIAL\" data-size=\"normal\" data-rawwidth=\"1282\" data-rawheight=\"752\" data-watermark=\"watermark\" data-original-src=\"v2-f821a895bfe5741a6e8280cd3904e6fd\" data-watermark-src=\"v2-e0fbfe16be15a28166569c0d0087a088\" data-private-watermark-src=\"v2-0f07a910172718ef664f2e606576eb3d\"></p>\n<p data-pid=\"it8tyjQ4\">花了一夜的功夫，在清晨艰难学习下，网上啥资料都找不到，艰难完成了Vienna Synchron Pianos：BÖSENDORFER IMPERIAL的安装，梦想再进一步，vsl开启成功。。。</p>\n<p data-pid=\"o4JlE6JK\">花了好几天时间，每天回家试2个小时，作为全篇收官之作，总结如下：</p>\n<p data-pid=\"HaRSkUdU\">它采样自Bösendorfer 290 Imperial，音源虽然有295g(全套7个是1.3T，很离谱是不是)，但是，下载非常快，而且音源加载速度是秒加载，而不像某些音源，音源不大，加载还慢。从听感来说，一开始并不会觉得多好听，但弹久了再谈Synthogy Ivory就会发现，它不一样的地方是共鸣，犹如真实钢琴演奏现场的共鸣，这是其他音源没有的，就是听感很好，好听，另外，响应速度比Synthogy Ivory稍快那么一丢丢，差别不大，手感上很像Garritan Abbey Road Studios CFX Concert Grand，比较偏软，而且非常吃cpu和内存，比其他音源占用更高。从音色来说，我个人更偏爱Synthogy Ivory，它两都好听，但特点全然不同，无法比较，但不同的是，Vienna Synchron Pianos可以说不耐听，那么大的共鸣和氛围，也意味着特点太过突出，而且还有一种莫名其妙的塑料感，像是加了后期合成进去的混响，别说其他的，只弹下一个键，就会觉得它不像真钢，总之，这个音源容易听烦，另外，它多个音无法像Synthogy Ivory分离得那么干净纯粹，有些时候会感觉很混乱，或者说，听了Vienna Synchron Pianos：BÖSENDORFER IMPERIAL后，才发现Synthogy Ivory才是那个最为还原Bösendorfer 290的音源，是最接近原声真钢的音源。</p>\n<p><img src=\"https://picx.zhimg.com/v2-3e9288e3e14d2999d516243d97a08c49_720w.jpg?source=b1748391?rss\" data-caption=\"Vienna Synchron Pianos：BÖSENDORFER IMPERIAL\" data-size=\"normal\" data-rawwidth=\"930\" data-rawheight=\"693\" data-watermark=\"watermark\" data-original-src=\"v2-3e9288e3e14d2999d516243d97a08c49\" data-watermark-src=\"v2-4dd1b27fc9232407b09297539a43eca7\" data-private-watermark-src=\"v2-75c214116da38750089c9d70449d779f\"></p>\n<p data-pid=\"3if9lqV9\">纠错：才发现Synchron Pianos系列使用比其他音源都要复杂，因为它提供的mix可调选项，实在是功能过于强大，需要自己来调试，才能得到自己想要的声音。</p>\n<p><img src=\"https://picx.zhimg.com/v2-7554b7d1acc76ab39a76888c2eaf472c_720w.jpg?source=b1748391?rss\" data-caption=\"Synchron Pianos的Mix调节\" data-size=\"normal\" data-rawwidth=\"916\" data-rawheight=\"706\" data-watermark=\"watermark\" data-original-src=\"v2-7554b7d1acc76ab39a76888c2eaf472c\" data-watermark-src=\"v2-15ecddceb04ddef9b07c1dc58305f56f\" data-private-watermark-src=\"v2-f8b26e5773c5f3d0cca1d14cf8f70547\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-28805aaf9873ab9e15c2ac328d636941_720w.jpg?source=b1748391?rss\" data-caption=\"Synchron Pianos的编辑选项\" data-size=\"normal\" data-rawwidth=\"916\" data-rawheight=\"706\" data-watermark=\"watermark\" data-original-src=\"v2-28805aaf9873ab9e15c2ac328d636941\" data-watermark-src=\"v2-9962082bbaa5cd4b6362c06fad3a51ee\" data-private-watermark-src=\"v2-58e892173f42b458f2aa3990a3ea1627\"></p>\n<p data-pid=\"bonKZVN2\">它的用户自定义界面做得相当好，从服务层面来说，Vienna Synchron这家公司真是没的说，当之无愧的天下第一，无敌手，官网做得最好，音源提供免费试用30天，动辄1.3T的音源宽带直接可以给你加满，一天就能下载完毕，加载速度快，软件体验非常好，软件功能非常齐全，自定义也是最多最复杂的，你能想到的软件都给你做好了，堪比音源界的微信。。。(可能这就是它比Synthogy Ivory II贵3倍的原因吧)</p>\n<p><img src=\"https://picx.zhimg.com/v2-a7ca83ef0af18ac4006ea4465a1c2b72_720w.jpg?source=b1748391?rss\" data-caption=\"Synchron Pianos界面功能\" data-size=\"normal\" data-rawwidth=\"916\" data-rawheight=\"706\" data-watermark=\"watermark\" data-original-src=\"v2-a7ca83ef0af18ac4006ea4465a1c2b72\" data-watermark-src=\"v2-97f8f7c2699e73082a9a6d6dbeb63f1a\" data-private-watermark-src=\"v2-5eae873a3c8ddddfdcbeff9f11dca5e9\"></p>\n<p data-pid=\"rkmE04TI\">另外一个贵的原因就是，它可玩性太高了，我用了一周多才开始后知后觉来尝试调节，就一个界面，至少有10*10种调整，100种调整的变化数就是100!阶乘种，这简直就是有无穷的变化，难以想象，它一个钢琴音源把一个音色做得这么复杂，它这个做法就和在Cubase里一样，完全不是原声钢琴的玩法，而是录制midi后，加了很多效果器、eq、过滤器、延迟、动态范围、混响等等的行为，这和Synthogy Ivory II这种完全不同，Synthogy Ivory II虽然也有很多可调参数，但是相较而言，是非常非常简单的，而且直接使用默认预制就已经超级专业好听，不用你动什么就已经接近最好的状态，最多也就是加点力度曲线，加点非常简单的效果、混响，就非常简单高效，而Vienna Synchron不一样，真的需要慢慢来调试，说简单点，这难道不就是在干Cubase的活吗？DAW宿主软件最擅长做的事情，为什么还要自己重新开发一遍呢？对于这一点，有些人可能觉得是优点，但我不以为意，其中利弊，我就无法再费时间多说了。</p>\n<p><img src=\"https://picx.zhimg.com/v2-7d66cd76ebd3dc79e386e87d38e0aafd_720w.jpg?source=b1748391?rss\" data-caption=\"Synchron Pianos可调变化数≈100!阶乘\" data-size=\"normal\" data-rawwidth=\"916\" data-rawheight=\"706\" data-watermark=\"watermark\" data-original-src=\"v2-7d66cd76ebd3dc79e386e87d38e0aafd\" data-watermark-src=\"v2-36263fe612ed86696dda9cf6278a60d5\" data-private-watermark-src=\"v2-a8bbb4fbd481c9cb5a7624d0d6b459dd\"></p>\n<p data-pid=\"Ig3eHU9s\">注意：需要通过ilok的云端激活，才能正式开始Synchron Pianos的试用。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-2ae67dac883c27cfe90bd288407e0d30_720w.jpg?source=b1748391?rss\" data-caption=\"ilok密钥管理器\" data-size=\"normal\" data-rawwidth=\"1249\" data-rawheight=\"810\" data-watermark=\"watermark\" data-original-src=\"v2-2ae67dac883c27cfe90bd288407e0d30\" data-watermark-src=\"v2-4646a58ce84c9e2ae4516ee307db40a7\" data-private-watermark-src=\"v2-21f1f4b9dc3a8ee327e405419b1f1ef7\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-1f50fc60323482e6eba0a517d2344326_720w.jpg?source=b1748391?rss\" data-caption=\"Vienna Synchron Pianos：BÖSENDORFER IMPERIAL\" data-size=\"normal\" data-rawwidth=\"3440\" data-rawheight=\"1416\" data-watermark=\"watermark\" data-original-src=\"v2-1f50fc60323482e6eba0a517d2344326\" data-watermark-src=\"v2-7d783e8e4ee0f38e5785b5855baae2a8\" data-private-watermark-src=\"v2-7bd2fc301784e2859e6ad1c0f48583f7\"></p>\n<p data-pid=\"iGE42GaN\">更新，正在下载<b>Vienna Synchron Pianos：Yamaha CFX和Steinway &amp; Sons D-274，后面应该还会试试Bösendorfer 280VC、BLÜTHNER 1895</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-ec89d243b44fa10fea46599f56363084_720w.jpg?source=b1748391?rss\" data-caption=\"Vienna Synchron Pianos：Steinway &amp; Sons D-274\" data-size=\"normal\" data-rawwidth=\"1282\" data-rawheight=\"872\" data-watermark=\"watermark\" data-original-src=\"v2-ec89d243b44fa10fea46599f56363084\" data-watermark-src=\"v2-66049483d52d0b1a2cdd3a0878abc740\" data-private-watermark-src=\"v2-8292ee9827f7ff956dbe393e670fa3be\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-7d587591f51bdae2928a33f6486ee293_720w.jpg?source=b1748391?rss\" data-caption=\"Vienna Synchron Pianos：Yamaha CFX\" data-size=\"normal\" data-rawwidth=\"1282\" data-rawheight=\"872\" data-watermark=\"watermark\" data-original-src=\"v2-7d587591f51bdae2928a33f6486ee293\" data-watermark-src=\"v2-5b14ab170ffffb01601621ced086233d\" data-private-watermark-src=\"v2-abc19324f8aef753b886996169fe761f\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-9ab20b39b7c5410200e4252e4b3a8692_720w.jpg?source=b1748391?rss\" data-caption=\"BÖSENDORFER 280VC\" data-size=\"normal\" data-rawwidth=\"1282\" data-rawheight=\"752\" data-watermark=\"watermark\" data-original-src=\"v2-9ab20b39b7c5410200e4252e4b3a8692\" data-watermark-src=\"v2-91982e064f776c49d68fb41c51d8ce83\" data-private-watermark-src=\"v2-24283ea9832ebebfe87b270d41b7f41d\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-57ea5fec4391054d97954f8af025c812_720w.jpg?source=b1748391?rss\" data-caption=\"BLÜTHNER 1895\" data-size=\"normal\" data-rawwidth=\"1282\" data-rawheight=\"752\" data-watermark=\"watermark\" data-original-src=\"v2-57ea5fec4391054d97954f8af025c812\" data-watermark-src=\"v2-148293b5311414282f5e683ca3c96438\" data-private-watermark-src=\"v2-cc78a43cfa1d2588583c61618764aab4\"></p>\n<p data-pid=\"bISNwe9C\">经过一夜下载，完成。。。接下来几天是测试，更新时间_20221018_Version</p>\n<p data-pid=\"f6UrWxVk\"><b>结论：我更喜欢Synthogy Ivory II，</b>里面最差的是Vienna Synchron Pianos：Steinway &amp; Sons D-274，简直没法听，姑且就算是我不会调好了吧，总之，我真的是不想浪费这个时间精力去折腾这个了，有Synthogy Ivory II的Steinway &amp; Sons D-274我已心满意足；再来说其他四个，Vienna Synchron Pianos：Yamaha CFX一言难尽，总之和Noire没法比，和Garritan Abbey Road Studios CFX Concert Grand手感如此之像，但是和Garritan Abbey Road Studios CFX Concert Grand相差也有十万八千里，这三都是Yamaha CFX采样，结果就这三中最贵的玩意(490欧)最差，我是也不想浪费这个时间去调了，你vsl要是真厉害，有本事给我默认的就非常好听，否则，我不相信你！就这么简单，凭什么你卖总价2万的东西，默认还这么难听；</p>\n<p><img src=\"https://picx.zhimg.com/v2-dc07caf3697c3f31d6abcdd0ab516666_720w.jpg?source=b1748391?rss\" data-caption=\"Vienna Synchron Pianos价格表与硬盘容量\" data-size=\"normal\" data-rawwidth=\"1048\" data-rawheight=\"3357\" data-watermark=\"watermark\" data-original-src=\"v2-dc07caf3697c3f31d6abcdd0ab516666\" data-watermark-src=\"v2-36736076203663a890e6559d8010283c\" data-private-watermark-src=\"v2-3b8b2b55e8c0763a427212e39fb73bb6\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-96a526a277dfbe58a3de10d3c5215bd4_720w.jpg?source=b1748391?rss\" data-caption=\"1欧元€=7.09，实时汇率_20221021_Version\" data-size=\"normal\" data-rawwidth=\"689\" data-rawheight=\"688\" data-watermark=\"watermark\" data-original-src=\"v2-96a526a277dfbe58a3de10d3c5215bd4\" data-watermark-src=\"v2-c32b56cc297a82880293af9fa562ba02\" data-private-watermark-src=\"v2-e2e6d817c9d11f302e6e18d78ecd8268\"></p>\n<p data-pid=\"-9P51tfu\">再就是BLÜTHNER 1895，这个属于复古风格，是真的很不错，音色是颗粒饱满，响应是Synchron Pianos里面最慢的，但其实相比其他音源已经非常快了，这个速度对弹奏不会有任何影响，总体来说，符合它的复古风格，这个音源是真的好听，和Keyscape有异曲同工之妙，又比Keyscape响应快；BÖSENDORFER 280VC就一般般，反正我不喜欢，高音部分我只能用很不堪来形容，弃；最后，作为收尾，我想说<b>Synchron Pianos里面我唯一推荐的就是：Vienna Synchron Pianos：BÖSENDORFER IMPERIAL，</b>微调Mix后，可以得到很不错的音色，本身也是因为它默认加了太多混响，但耐不住<b>Bösendorfer 290</b>的音色太好，总之，我最后给Vienna Synchron Pianos：BÖSENDORFER IMPERIAL的推荐是<b>仅次于Synthogy Ivory II，在</b>Noire<b>前面，1.5的位置，很多方面是超越Synthogy Ivory II的存在，强烈建议购买，当之无愧的顶级音源。</b></p>\n<p data-pid=\"p8YqctEQ\">这就是我测试的结果，无论别人怎么想，这就是我个人最真实的感受，完。</p>\n<p><img src=\"https://picx.zhimg.com/v2-fa0b65cbe052035d04228b1eee314c74_720w.jpg?source=b1748391?rss\" data-caption=\"Vienna Synchron Pianos：Yamaha CFX\" data-size=\"normal\" data-rawwidth=\"916\" data-rawheight=\"706\" data-watermark=\"watermark\" data-original-src=\"v2-fa0b65cbe052035d04228b1eee314c74\" data-watermark-src=\"v2-6f1554c1fe741a3ad1780ec154a600a4\" data-private-watermark-src=\"v2-cc9a3a15f4ad57c28af0958c162a9cd9\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-ae92f4478109a5fd5192c12944fb27c6_720w.jpg?source=b1748391?rss\" data-caption=\"Vienna Synchron Pianos：Steinway &amp; Sons D-274\" data-size=\"normal\" data-rawwidth=\"916\" data-rawheight=\"706\" data-watermark=\"watermark\" data-original-src=\"v2-ae92f4478109a5fd5192c12944fb27c6\" data-watermark-src=\"v2-c5192125f761fc801148b97fe6c52bdc\" data-private-watermark-src=\"v2-c4ee8fd657580459c4a5f1fc6f82c9fd\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-201c7756b575cf1d2f5d241ec73d4478_720w.jpg?source=b1748391?rss\" data-caption=\"vsl五大三角钢琴\" data-size=\"normal\" data-rawwidth=\"930\" data-rawheight=\"693\" data-watermark=\"watermark\" data-original-src=\"v2-201c7756b575cf1d2f5d241ec73d4478\" data-watermark-src=\"v2-b8945a16ef5322ec07352fcf8fa008ad\" data-private-watermark-src=\"v2-6dab32cf52c6870e82abd55206840f6e\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-52abe4868ec2442f1cfa7e9b4fec0675_720w.jpg?source=b1748391?rss\" data-caption=\"Vienna Synchron Pianos：Bösendorfer 280VC\" data-size=\"normal\" data-rawwidth=\"916\" data-rawheight=\"706\" data-watermark=\"watermark\" data-original-src=\"v2-52abe4868ec2442f1cfa7e9b4fec0675\" data-watermark-src=\"v2-7ca393a1158ca9f81a04a14d0bcd8acf\" data-private-watermark-src=\"v2-784eec76766c4c9aaefa407e2f751292\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-e3ce513241cae6de52e43db295908c18_720w.jpg?source=b1748391?rss\" data-caption=\"Vienna Synchron Pianos：BLÜTHNER 1895\" data-size=\"normal\" data-rawwidth=\"916\" data-rawheight=\"706\" data-watermark=\"watermark\" data-original-src=\"v2-e3ce513241cae6de52e43db295908c18\" data-watermark-src=\"v2-4150bcab372a80ba642adda6195d0b75\" data-private-watermark-src=\"v2-476f9c57df0c8ea12b5e663045eac602\"></p>\n<p data-pid=\"FFwRusH8\"><b>重大更新：</b>应该是Vienna Synchron Pianos的bug，在试用期间，上面写的问题在试用到20天后，突然有一天，就没有了，估计是加密密钥ilok引起的那些很难听的声音，今天再试，那些问题又奇迹的消失了，没任何问题，其中，<b>Vienna Synchron Pianos：Yamaha CFX</b>和Garritan Abbey Road Studios CFX Concert Grand的地位相当，差不多算2.1的位置(noire是2.0，但根据我长期使用，<b>我认为Vienna Synchron Pianos：Yamaha CFX是超过noire的，起码也是1.8的位置，</b>包括Keyscape，我文中这几个反复提到的音源，都不是说它怎么怎么了，只是综合的评定，实际上，它们都在各自的风格上独一无二，都在各自风格上无敌，比如Keyscape和Production Grand 2都是那种音色美得无敌的存在，只讲美，那肯定是超过Synthogy Ivory II的，给的都是大致的综合位置，只是参考，实际上反复提到的这些音源我是一定推荐给各位使用的，不用真是暴殄天物了)，<b>Vienna Synchron Pianos：Bösendorfer 290 Imperial最佳，1.5的位置，强烈建议购买，BLÜTHNER 1895则完全不推荐了，Steinway &amp; Sons D-274和Bösendorfer 280vc处于同一水平，仅次于noire，大概是3.0的位置，不是很建议购买，属于那种谁买可以买，自己不会买那种，它两都很好，但280vc还是更好那么一丢丢。</b>能得出目前这个结论，真算是曲折离奇，我将所有的过程都记录了下来，希望对看到的人有所启迪。</p>\n<p data-pid=\"NoOSso2m\">在试用前20天，实际上我只能在Vienna Synchron Pianos独立软件里测试，因为一旦加载到Cubase 12 Pro就会有嘶嘶声，根本无法使用，可是大概到了20天后，这个问题就突然消失了，特此记录，更新时间_20221112_Version</p>\n<p data-pid=\"NCh6k7Tv\">注：如果不想自定义设置，推荐使用player这个预制，很省心，听感是预制里最好的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-46b8a718e869bbb3b31503a69c084c18_720w.jpg?source=b1748391?rss\" data-caption=\"Vienna Synchron Pianos：Yamaha CFX\" data-size=\"normal\" data-rawwidth=\"916\" data-rawheight=\"706\" data-watermark=\"watermark\" data-original-src=\"v2-46b8a718e869bbb3b31503a69c084c18\" data-watermark-src=\"v2-dbea04edc7d217137230dd0c902ee31e\" data-private-watermark-src=\"v2-c0fb0fd379352ef8af9c91f3688e2b72\"></p>\n<p data-pid=\"8D9Fy-B-\">话说，一年多以前。。。我买了人生第一个midi键盘，Native Instruments Komplete Kontrol A61，装上Cubase，开始了全新的篇章。。。</p>\n<p data-pid=\"CE0nYwZ4\">一切的开始，从yamaha s90es piano开始，那时候，我还不知道有个东西，叫se简化版，还有一个东西，叫完整版，离谱的是，还有一个halion 6......</p>\n<p><img src=\"https://picx.zhimg.com/v2-c1821084386dc883159b91a28f44794b_720w.jpg?source=b1748391?rss\" data-caption=\"yamaha s90es piano\" data-size=\"normal\" data-rawwidth=\"899\" data-rawheight=\"771\" data-watermark=\"watermark\" data-original-src=\"v2-c1821084386dc883159b91a28f44794b\" data-watermark-src=\"v2-b64aa54e2123e4a8929c560d5b78136c\" data-private-watermark-src=\"v2-9bb2904aa0917df0fe8012d1e17187e1\"></p>\n<p data-pid=\"syKDMavG\">虽然如今已经不再用halion sonic se的钢琴音源，但还是必须纪念曾经伴随我开始的玩伴。另外，经过测试，黑龙6最好的两款钢琴音色分别是下图红色圈圈里的键盘。</p>\n<p><img src=\"https://picx.zhimg.com/v2-b2eaa423757a7e08a0d1487c425ddaa1_720w.jpg?source=b1748391?rss\" data-caption=\"halion 6，宿主：Cubase 12 Pro\" data-size=\"normal\" data-rawwidth=\"1261\" data-rawheight=\"844\" data-watermark=\"watermark\" data-original-src=\"v2-b2eaa423757a7e08a0d1487c425ddaa1\" data-watermark-src=\"v2-3819a79dcd9aa9938c575b7344806f83\" data-private-watermark-src=\"v2-92f3784c7ddb97fd1411ec7ee79283ac\"></p>\n<p data-pid=\"VWmO6ydW\">再说Mac这边，Logic Pro这边也有一款音色非常好听的原声钢琴音源，斯坦威大钢琴，音色和Keyscape可以说不相上下，推荐使用Mac系统的试试这款Logic Pro自带的钢琴音源。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f0e201d23f6059cd80520d781a5e8ed1_720w.jpg?source=b1748391?rss\" data-caption=\"Logic Pro\" data-size=\"normal\" data-rawwidth=\"3440\" data-rawheight=\"1440\" data-watermark=\"watermark\" data-original-src=\"v2-f0e201d23f6059cd80520d781a5e8ed1\" data-watermark-src=\"v2-b0759e1099d957a39fd4c586b34a3cd7\" data-private-watermark-src=\"v2-37803eed0ba1fe2d8b18277eb8b02f9a\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-d1ac9367aaaa733b42d25d86df3a5984_720w.jpg?source=b1748391?rss\" data-caption=\"Logic Pro 10.7.5\" data-size=\"normal\" data-rawwidth=\"590\" data-rawheight=\"597\" data-watermark=\"watermark\" data-original-src=\"v2-d1ac9367aaaa733b42d25d86df3a5984\" data-watermark-src=\"v2-58ec338d5b3058c723609c46b37e17e0\" data-private-watermark-src=\"v2-5dcbaef19076ff5b4d77de36e422d96f\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-62bd7b98966e81d9b9fcaf438f87496d_720w.jpg?source=b1748391?rss\" data-caption=\"Logic Pro 斯坦威大钢琴\" data-size=\"normal\" data-rawwidth=\"987\" data-rawheight=\"916\" data-watermark=\"watermark\" data-original-src=\"v2-62bd7b98966e81d9b9fcaf438f87496d\" data-watermark-src=\"v2-9f59699c7e4b3e97083180d25d081aca\" data-private-watermark-src=\"v2-cf21a25893d08ec5c40baaac8c9c509a\"></p>\n<p data-pid=\"DjzCNYkI\">索引：</p>\n<p data-pid=\"6BcwNHFD\">注*玩midi一定要用固态硬盘，不然像Spitfire Hans Zimmer Piano这种196G的音源，真的会崩溃，加载巨慢，永远不要让这玩意耗光你的时光。再三声明，m.2固态，m.2固态，m.2固态！</p>\n<p><img src=\"https://picx.zhimg.com/v2-99bda071c76c999f4de2bb48da47fcea_720w.jpg?source=b1748391?rss\" data-caption=\"196G\" data-size=\"normal\" data-rawwidth=\"421\" data-rawheight=\"615\" data-watermark=\"watermark\" data-original-src=\"v2-99bda071c76c999f4de2bb48da47fcea\" data-watermark-src=\"v2-fad0b1d6f23c7cee65a7c193ed285f5a\" data-private-watermark-src=\"v2-d063a56f06673f52304625ab18eeb23b\"></p>\n<p data-pid=\"5Nl4l8Ei\">本文除推荐之外，就是我认为很难听或者我不喜欢的钢琴音源，被我淘汰的钢琴音源有如下：</p>\n<p data-pid=\"KhzZ_zTa\">1、Modartt Pianoteq PRO v6.7.0 物理建模钢琴，听上去真的非常难听，我都不想浪费口舌。</p>\n<p><img src=\"https://picx.zhimg.com/v2-c1f61ad68ea4c131e50048f1a67cfadd_720w.jpg?source=b1748391?rss\" data-caption=\"Modartt Pianoteq PRO\" data-size=\"normal\" data-rawwidth=\"702\" data-rawheight=\"801\" data-watermark=\"watermark\" data-original-src=\"v2-c1f61ad68ea4c131e50048f1a67cfadd\" data-watermark-src=\"v2-01b6ddd9f46ee4b3e9c52a2eea4d8667\" data-private-watermark-src=\"v2-f3fbdbfc6808fa762c5ebf02b5eb971c\"></p>\n<p data-pid=\"-Wh40L0o\">2、Alicias Keys，真的很烂啊，那么多人推荐，不相信的可以自己试试。</p>\n<p><img src=\"https://picx.zhimg.com/v2-907ef57b50f191617929d0692e214d6e_720w.jpg?source=b1748391?rss\" data-caption=\"Alicias Keys\" data-size=\"normal\" data-rawwidth=\"1198\" data-rawheight=\"812\" data-watermark=\"watermark\" data-original-src=\"v2-907ef57b50f191617929d0692e214d6e\" data-watermark-src=\"v2-cdbaff700b742bca9deb2a0a0912c703\" data-private-watermark-src=\"v2-1bcb1affe3bc40aa76aa89c30198c398\"></p>\n<p data-pid=\"UXxDY5vM\">3、Imperfect Samples White Baby Grand，白宝贝，Imperfect Samples家的东西，除了Fazioli Ebony Concert Grand之外(她自己也是瑕疵品)，真的不敢恭维。</p>\n<p><img src=\"https://pica.zhimg.com/v2-39d7a6c906f9cdbbf6ba932393b4f039_720w.jpg?source=b1748391?rss\" data-caption=\"White Baby Grand\" data-size=\"normal\" data-rawwidth=\"1198\" data-rawheight=\"812\" data-watermark=\"watermark\" data-original-src=\"v2-39d7a6c906f9cdbbf6ba932393b4f039\" data-watermark-src=\"v2-12d2c8bb854bb48676a1fba836f46bd6\" data-private-watermark-src=\"v2-48cc7094bf28766321375afb9e34b150\"></p>\n<p data-pid=\"_Cz7p_9U\">4、Native Instruments出品的the gentleman，音色还是很明亮动人的，但响应太慢，前后音糊成一片，异常不跟手，属于那种直接可以删的程度。当然，这有可能是因为我买Native Instruments Komplete Kontrol A61免费配送的，不知道是不是大家说的那款，这部分需要我后面重新安装测试后更新。。。留坑。</p>\n<p data-pid=\"mSOn9Z2x\">回来了，这次确定，它就是很烂，懒得多花一分钟时间来说它的烂，劝君赶紧远离得了。</p>\n<p><img src=\"https://picx.zhimg.com/v2-222fe8aa7ed877b50d73be27fe4bbf54_720w.jpg?source=b1748391?rss\" data-caption=\"the gentleman\" data-size=\"normal\" data-rawwidth=\"1182\" data-rawheight=\"963\" data-watermark=\"watermark\" data-original-src=\"v2-222fe8aa7ed877b50d73be27fe4bbf54\" data-watermark-src=\"v2-6d7e8e4c52b5800cf36a16db53098295\" data-private-watermark-src=\"v2-b6ee463fa09dd49612223e8a0dcefaa4\"></p>\n<p data-pid=\"CkWou-ea\">5、Impact Soundworks Pearl Concert Grand，有16bit和24bit两种，已经测试过了，只能说可堪一用，绝对算好的了，之所以放弃，是经过严格的对比后的结论，也就是说，它是很不错的，但还没达到我留下来的标准，仅此而已。</p>\n<p data-pid=\"R6K4WY_T\">要说替代性，她没有Embertone Walker 1955 Concert D好听，风格类型又很相似，冷一些，所以留下Embertone Walker 1955 Concert D，稍微有那么一点点不讨巧。</p>\n<p data-pid=\"nri5DUea\">严格来说，它是那种怎么看都好的音色，但经不起细看，细看就太多漏洞，就像那种豆腐渣工程一样，乍一看还不错，但是就稍微深度用一下，就全是缺点，连The Grandeur都不如，用起来感觉还不错，一开始还挺难判断，但是经过一番对比，才发现原来是满满的塑料感，很散，或者说又散又乱又浑，这东西不细分析还不容易发现，太塑料了，删了。(依然要说，它可堪一用，只是经不住推敲，已经算是非常好的音色了)</p>\n<p><img src=\"https://picx.zhimg.com/v2-19a3e9ab6c1dc3bdc1e1277b47bd08b0_720w.jpg?source=b1748391?rss\" data-caption=\"PEARL Concert Grand\" data-size=\"normal\" data-rawwidth=\"1202\" data-rawheight=\"921\" data-watermark=\"watermark\" data-original-src=\"v2-19a3e9ab6c1dc3bdc1e1277b47bd08b0\" data-watermark-src=\"v2-8304cb1fecb3d23cd2bc4f082f3fd3ea\" data-private-watermark-src=\"v2-80848d1b115e1c69df6376eee878db3b\"></p>\n<h2><b>后续更新篇：</b></h2>\n<p data-pid=\"aFIAtQfv\">我没试过，但根据网友的使用体验和评论，它们可能是最好的钢琴音源之一，但是暂时还没有测试的钢琴音源列表：EZKeys、XLN Addictive Keys，E-instruments Session Keys，这三评价都不算高；另外，还有和Kontakt同类型的一个采样器UVI Falcon，它下面有一个被很多网友推荐过的VI Labs Ravenscroft 275，评价中规中矩；第三种，评价很高的几个原声钢琴音源，目前我知道的是EastWest Pianos(容量262G)，Production Grand 2(容量437.5GB！)，也许会花点时间来听一下，特别是EastWest Pianos，很感兴趣，它旗下共有四台原声三角钢琴，包括Bechstein D-280, Steinway D, Bösendorfer 290, and Yamaha C7，由于我一直还未使用过贝希斯坦的钢琴音源，对此常感遗憾，更神奇的是，EastWest Pianos还有自己单独的采样器，而且只能用自己的EastWest Play 6采样器弹奏，对此我就更感兴趣了，估计哪天心情好会试试这些音源，随缘了。</p>\n<p><img src=\"https://picx.zhimg.com/v2-5b7133e3e95f908cc1cbfcf3db95a602_720w.jpg?source=b1748391?rss\" data-caption=\"EastWest Pianos，四套总价仅159$\" data-size=\"normal\" data-rawwidth=\"1109\" data-rawheight=\"1290\" data-watermark=\"watermark\" data-original-src=\"v2-5b7133e3e95f908cc1cbfcf3db95a602\" data-watermark-src=\"v2-1e0d0259fb3b8a32b30ca8251209287f\" data-private-watermark-src=\"v2-daaff03661546f9b703de2f5551b3caf\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-67cc641c029a141fd3e315b8ccb32d18_720w.jpg?source=b1748391?rss\" data-caption=\"VI Labs Ravenscroft 275\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"480\" data-watermark=\"watermark\" data-original-src=\"v2-67cc641c029a141fd3e315b8ccb32d18\" data-watermark-src=\"v2-b8d4e080157010ce8ad253892edb65b9\" data-private-watermark-src=\"v2-222ce33e5122e227530ea31f2ef02021\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-e6455f967514e561be0522a36a7638cc_720w.jpg?source=b1748391?rss\" data-caption=\"VI Labs Ravenscroft 275\" data-size=\"normal\" data-rawwidth=\"1146\" data-rawheight=\"1139\" data-watermark=\"watermark\" data-original-src=\"v2-e6455f967514e561be0522a36a7638cc\" data-watermark-src=\"v2-7c3063518c6545a36bdbd450bb7af6f6\" data-private-watermark-src=\"v2-26db0a0382fa90084af89076ae7b9bb8\"></p>\n<p data-pid=\"rbptHFFV\">更新，已下载安<b>装Production Grand 2</b>，192G，第一印象不错，界面非常nice，之后空了测试。</p>\n<p data-pid=\"kAGoXBBe\">Production Grand 2完整版无损压缩前的容量达到惊人的437.5GB！共包含Production Grand Platinum 24 bit 96k, Production Grand Gold 24 bit 44.1k以及Production Grand LE 16 bit 44.1k三个版本，包含八个麦克风视角，<b>在多伦多的 Phase One Studios 进行采样，采样自Yamaha C7三角钢琴，超过120,000个样本。</b></p>\n<p data-pid=\"XYxALMbs\">更新测试结果，约等于noire的地位，2.0的位置，太过惊喜，喜出望外，从没有任何期待，到很想测试，到听到它的声音，就被迷死，所有的感受都在一瞬间，不可方物，美到不可方物，不可思议的接近Keyscape的听感(仔细对比后发现，依然没有Keyscape好听)。。。回头想，怎么会有这么好听的音源，我在考虑放弃Imperfect Samples Fazioli Ebony Concert Grand Complete了，毕竟它是瑕疵品，虽然还是最好听的，但瑕疵毕竟是瑕疵，再深度使用后来判断它进一步的地位。留坑。_20221030_Version</p>\n<p data-pid=\"CabvaDe_\">注：Production Grand 2会受到Kontakt的影响，因为没有自己独立的软件，在Kontakt软件中和通过Cubase 12 Pro加载Kontakt响应有所不同，有一些差距，可以理解成受到自己没有独立软件的桎梏，最好的状态是在Kontakt中直接使用，而不是通过宿主，这是使用了一段时间发现的一个小问题，对我来说有小影响，不大。</p>\n<p><img src=\"https://picx.zhimg.com/v2-a61c48327bb22fd237f9616a4c920b25_720w.jpg?source=b1748391?rss\" data-caption=\"Production Grand 2价格表\" data-size=\"normal\" data-rawwidth=\"1126\" data-rawheight=\"815\" data-watermark=\"watermark\" data-original-src=\"v2-a61c48327bb22fd237f9616a4c920b25\" data-watermark-src=\"v2-f2f83b0dc9e986d8a8dcb95355557682\" data-private-watermark-src=\"v2-c97b8575a69d8b95d6a6e95edb06eb97\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-0bdb52bd8fe33d2b732f3b0a91dfd985_720w.jpg?source=b1748391?rss\" data-caption=\"Production Grand 2\" data-size=\"normal\" data-rawwidth=\"1215\" data-rawheight=\"1007\" data-watermark=\"watermark\" data-original-src=\"v2-0bdb52bd8fe33d2b732f3b0a91dfd985\" data-watermark-src=\"v2-e397301b82313401fbff0c69ace51623\" data-private-watermark-src=\"v2-61750dfa29c0efd3e602ed54ea54f2b8\"></p>\n<p data-pid=\"JASfdoUQ\">很开心，更新了最新Kontakt7，太爽了这个分类的功能，简直爽爆。</p>\n<p><img src=\"https://pica.zhimg.com/v2-ccb53f54b86fc5aef93017565d059720_720w.jpg?source=b1748391?rss\" data-caption=\"Kontakt 7\" data-size=\"normal\" data-rawwidth=\"1047\" data-rawheight=\"814\" data-watermark=\"watermark\" data-original-src=\"v2-ccb53f54b86fc5aef93017565d059720\" data-watermark-src=\"v2-5c183ebad7608d3b8bdd6b91a02d90c3\" data-private-watermark-src=\"v2-035f90a559c0b1a16cbd7fbd3bd07a8c\"></p>\n<p data-pid=\"_0I9l_Ra\">EastWest Pianos，262G，终于，下载安装完成，EastWest Play 6采样器，开启新世界。</p>\n<p data-pid=\"pjYwbnw_\">接下来会用一段时间测试，更新_20221101_Version</p>\n<p data-pid=\"RNmxGk3E\">测试结果：别有一番风味，推荐使用，但不推荐购买，虽然很便宜，但是它实际上和Synthogy Ivory II相差太远，和Vienna Synchron Pianos也没法比，只能说它确实有很独特的味道，<b>特别是Steinway &amp; Sons D-274，非常好听，差不多和Keyscape一个水平线，但和Synthogy Ivory II的Steinway &amp; Sons D-274比，简直是云泥之别</b>(和Synthogy Ivory II比，真是为难它了，实际上，它相当不错，只是Synthogy Ivory II太过优秀，Keyscape实际上是非常高的评价，无限接近顶级音源的存在)，这个系列都有个特点，就是触键较深，要下底深一丢丢才能完全感知到它的存在，再说Bechstein D-280，它的音色很不一样，但并不推荐，严重到甚至声相都有问题，左右声道严重不平衡，还有它的Bösendorfer 290，可以说是我听过最单调乏味的Bösendorfer，很沉闷，很无聊，不推荐，说了它这么多不好的地方，回过头来，<b>它的Yamaha C7又是最独特的，在我这里直接可以给它noire的位置，</b>真的很绝，总之，<b>这个系列推荐Yamaha C7和Steinway &amp; Sons D-274，在平淡乏味的生活里，它们两，或许能带给你不一样的色彩。_20221112_Version</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-4c7508685ebf3549beab84cabd8be64d_720w.jpg?source=b1748391?rss\" data-caption=\"EastWest Play 6采样器\" data-size=\"normal\" data-rawwidth=\"902\" data-rawheight=\"769\" data-watermark=\"watermark\" data-original-src=\"v2-4c7508685ebf3549beab84cabd8be64d\" data-watermark-src=\"v2-acaec6117683d7ce921a90de8a6934b6\" data-private-watermark-src=\"v2-f10311230bab5c51a735da15807f1680\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-9ebc378fdb61a80745144be24a3e4432_720w.jpg?source=b1748391?rss\" data-caption=\"EastWest Play 6+EastWest Pianos，262G\" data-size=\"normal\" data-rawwidth=\"902\" data-rawheight=\"769\" data-watermark=\"watermark\" data-original-src=\"v2-9ebc378fdb61a80745144be24a3e4432\" data-watermark-src=\"v2-a3c6777817df31aae8089b069fccc243\" data-private-watermark-src=\"v2-177bdff3b517272dccba7ec6a1366ca6\"></p>\n<blockquote data-pid=\"PKB-Ww8X\">文末，再次感谢Virtual Studio Technology虚拟键盘技术，让我能用上过去难以想象的昂贵价格的钢琴，从历史长河来看，这是不可思议的，感谢，生在计算机的时代，感谢Cubase Pro，感谢Native Instruments，感谢Kontakt，感谢Synthogy Ivory II，感谢所有为此做出努力和贡献的音乐人；得之不易，方知珍惜，就让我们沿着音乐的道路，继续那多彩的步伐吧，再会。</blockquote>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/hoctoboy?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">小海cosea</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/27103966/answer/2687889300?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">15 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/277516184?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">著名的纯音乐制作人都用什么钢琴音源？</a><br><a href=\"http://www.zhihu.com/question/36215356?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">业界如何使用钢琴音源？</a><br>\n","link":"http://www.zhihu.com/question/27103966/answer/2687889300?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"在相纸定格瞬间美好：拍立得选购指南","date":"2022-12-01 08:00:00","description":"数码和胶片并不是相悖的选项，可以大声说出「我全都要」。<a href=\"https://sspai.com/post/77064\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77064"},{"title":"股市为何又跌了？现在适合买房吗？理财到底怎么做？这场直播给出了答案","date":"2022-11-29 12:51:44","description":"\n<p data-pid=\"aPMjc76m\"><b>【大河财立方记者 裴熔熔】</b>为什么降准了，股市还是跌了？房地产市场又迎来了诸多利好，现在适合买房子吗？当下要做投资理财，到底什么样的渠道更为合适？面对近期股债基市场的巨大波动、房地产市场的持续低迷，如何让自己的钱袋子保值增值，成了众多人关心的问题。</p>\n<p data-pid=\"xnhhj-q_\">11月28日晚间，知乎《知聊八点半》圆桌直播准时开播。中国民生银行首席经济学家兼研究院院长温彬，立方大家谈专栏作者、前海开源基金首席经济学家杨德龙，知乎财经领域答主、资深股民羊迪，知乎金融领域答主、CFA复旦大学经济学硕士研选基汇就上述问题，进行了分析探讨。</p>\n<p data-pid=\"9PS9m6Bd\">大河财立方记者带你去探索答案。</p>\n<h3><b>央行降准释放了什么样的信号？</b></h3>\n<p data-pid=\"8SnDlWsr\">11月25日，央行重磅宣布，决定于2022年12月5日降低金融机构存款准备金率0.25个百分点。本次下调后，金融机构加权平均存款准备金率约为7.8%。此次降准为全面降准，除已执行5%存款准备金率的部分法人金融机构外，对其他金融机构普遍下调存款准备金率0.25个百分点，共计释放长期资金约5000亿元。</p>\n<p data-pid=\"_fxIt9bV\">“此次降准释放资金可以缓解当前市场紧张局面，保持流动性充裕，同时也释放出一个信号：央行要采取措施稳定股市、债市、楼市和汇率。”杨德龙表示，近期这四大市场均出现一些波动，特别是债市大跌，让市场捏了一把汗，甚至大家认为不会亏钱的一些银行理财、债券基金也都出现了亏损，造成了债券基金的大量赎回，进一步带来了债券抛售，所以债市企稳需要一些政策信号。</p>\n<p data-pid=\"EXZ4rbW0\">“这次降准应该说不是一个结束，而是一个宽松的开始，后面可能还会继续采取一些宽松的措施。有一个观点我非常赞同，我们不能大水漫灌，但是要中水漫灌，适当地创造一些流动性来化解当前股债双杀的问题，化解楼市的风险，同时在汇率方面适当地保持稳定，所以这次降准我觉得它的信号意义大于实际的意义。”杨德龙说。</p>\n<h3><b>为什么降准了，股市还是跌了？</b></h3>\n<p data-pid=\"GskFLX4X\">上周五央行宣布降准消息之后，市场对本周一的股市表现高度关注。但超出不少人预期，本周一的股市仍旧是下跌态势。原因是何？</p>\n<p data-pid=\"b5e8K4rL\">“这是因为影响股市的因素不止一个，降准相当于是一个利好，但同时这个周末又有部分城市出现封控，多地疫情反复，大家预期中的放开并没有实现。股市下跌，主要是对放开预期落空的反映，而不是降准。”杨德龙表示，对于股市来说，降准绝对是利好，无论是增加资金量，还是释放出积极的信号，都有利于市场反弹。股市下跌，更多是受到一些利空因素的影响，同时亚太股市普遍下跌，也造成了周一国内股市的下跌。</p>\n<p data-pid=\"V58kwpSf\">“降准并不是万能的，但是它释放出来的信号，我们要解读清楚，这样对于后续央行的操作，会有一定的预见性。如果股市债市还是很差，楼市出了16条实施措施之后，还是扶不起来，后续还会出‘第三支箭’，降一次准不行，还会再降一次。这是宽松周期的开始，而不是结束。这点大家要辩证地看这个问题。”杨德龙说。</p>\n<h3><b>未来还有可能降准降息吗？</b></h3>\n<p data-pid=\"ZO97JKNR\">“降准空间仍然是有的。央行在降准公告里特别提到，这次降准不含已执行5%存款准备金率的金融机构。目前，我国存款准备金率制度执行‘三档两优’框架，将金融机构存款准备金率分为大、中、小三类，并赋予不同的存款准备金率要求。在这次降准之前，大型银行执行的是11.25%。本次降准以后，金融机构加权平均存款准备金率约为7.8%。”温彬表示。</p>\n<p data-pid=\"Cxq3tSue\">他认为，如果5%是央行现阶段默认存款准备金率下限，那么从平均7.8%降到平均5%，还有2.8%的空间，大约可以释放3万亿元的基础货币。至于什么时候降、降的幅度是多少，要看明年经济形势。</p>\n<p data-pid=\"aywpp5sz\">对于降息，温彬表示，自2019年8月贷款市场报价利率（LPR）改革以后，LPR利率由央行政策利率和报价行的点差构成，并已初步形成了从政策利率到贷款利率的有效传导机制，央行下调政策利率（MLF利率），LPR利率也会相应下调。同时，即便政策利率不动，如果报价行的点差收窄，也可以引导贷款利率下降，而银行报价点差能否下调主要取决于银行的负债成本。</p>\n<p data-pid=\"tqFqKL4V\">“短期内政策利率和LPR利率下调的可能较小。从政策利率看，美联储等发达经济体央行还在收紧货币政策，对我们的货币政策有一定掣肘；同时随着疫情防控措施的优化以及房地产融资政策的放松等有助于巩固经济回稳向上的态势。此外，今年三季度货币政策报告提到，短期内结构性通胀压力可能加大，要密切关注，警惕未来通胀反弹压力。所以我们判断政策利率短期内将保持稳定。”温彬表示，此次降准0.25个百分点，大约使银行体系节约50亿～60亿元的资金成本，还不足以驱动银行在12月报价时压降点差。从中长期来看，要继续完善存款利率市场化调整机制，释放LPR改革潜力，降低实体经济综合融资成本。</p>\n<p data-pid=\"zkrDghmI\">羊迪表示：“目前的房贷利率已经是我从业以来非常低的一个水平。如果继续下降，我们或许能一起见证历史。此次降准并非降息，影响不了房贷利率。至于未来房贷利率是否还会继续下行，我认为有一定可能性，但是空间应该不会特别大。”</p>\n<h3><b>现在适合投资买房吗？</b></h3>\n<p data-pid=\"bKoVqhsU\">“从投资的角度来讲，现在买房产一定要坚持价值投资，要买核心区的好房子。房子未来价格是否能上涨，其实就是看所在区域的GDP能不能上涨，有没有长期的增长潜力，买房人的收入是否足以支撑。如今来看，市中心的房子、核心区域的房子，还是很坚挺的，一旦疫情过去经济回升，这些区域房价还会涨，长期来看，好房子跑赢通胀是没问题的。但是非核心区域的房产，有可能就会出现价格的大跌，因为这些地方是没有刚需的。”杨德龙说。</p>\n<p data-pid=\"nNppbtO3\">他表示，房住不炒定位，大家一定要牢记，这是未来投资房产的最大原则。同时值得提醒的是，对于未来房产的预期回报率一定要降低，因为房价上涨的空间已经不大。作为保值工具和刚需，暂时性住房没有问题，但是梦想像以前一样有暴富的机会，基本没有可能。</p>\n<p data-pid=\"TTJlZMr3\">温彬也表示，刚需和改善型住房市场仍有较大空间，但是在一线城市，首付比例过高等影响了有关需求的释放，也导致房地产市场交易活跃度下降。下一步，可以对新市民的刚需和有房者的改善型需求加大支持力度，比如降低首付比例、认房认贷政策调整等，促进房地产市场的平稳运行。这对明年经济继续保持恢复向上的态势也会起到积极的作用。</p>\n<h3><b>当下怎么投资理财最合适？</b></h3>\n<p data-pid=\"6-lBs8fU\">“现在理财已经不能用过去的方式，全部投资房地产或者全部买固定高收益的理财，这种产品已经不复存在，应该摒弃过去固定收益的思维，学会做资产配置。”研选基汇表示。</p>\n<p data-pid=\"tEvPc4v4\">“长期以来，我国金融体系以银行间接融资为主，大力发展资本市场是当前及今后金融结构优化的方向，有巨大发展潜力。对个人投资者而言，应根据自身的收入状况、风险承受能力等选择适合自身的投资方式，做好资产配置和组合，坚持长期主义，实现财富的保值和增值。”温彬说。</p>\n<p data-pid=\"2Tc18ba7\">杨德龙也表示，选择股票和基金去投资是正确的方向，但有两点需要注意。“一是要控制比例，不要把所有的资金都投到股票和基金上，毕竟这是有风险的，有可能亏钱，要留足够的安全边际、足够多的资金够生活用；二是要选好股票、好基金，要作价投资，不能乱买一气。”</p>\n<p data-pid=\"z0Rm0JXc\">据了解，《知聊八点半》是知乎打造的知名栏目，主要围绕公众关注的热点事件和话题，以“多人连麦圆桌直播”的形式，产出有获得感的知识和洞察，帮助用户更好地理解这个世界的变化。</p>\n<p data-pid=\"ADxiS-wS\">责编:王时丹 | 审核:李震 | 总监:万军伟</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/da-he-cai-li-fang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">大河财立方</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/587837390?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"美国与伊朗在世界杯同组引发热议    两队 24 年后再相遇，本次比赛伊朗战胜美国希望有多大？","date":"2022-11-29 09:23:39","description":"\n<p data-pid=\"ayM4qrW6\">原文首发自公众号：后厂村体工队，欢迎关注</p>\n<a href=\"http://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/1z0bn8VIrQEdOCqQ9cODFQ\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-e4aa1658f14b44c52db46d2031e09670_qhd.jpg?source=b1748391\" data-image-width=\"701\" data-image-height=\"297\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">那一晚，伊朗赢了美国，足球赢了世界</a><p data-pid=\"M2W4Pwz7\">******</p>\n<p data-pid=\"Kn5eNVIr\">1997年12月4日，在1998年法国世界杯抽签仪式上，当负责抽取C池球队的法国球星马里乌斯-特雷索尔出场时，台下响起了巨大的欢呼声和掌声。此时很少有人注意到，负责主持抽签仪式的时任国际足联主席布拉特的面色正在逐渐改变。</p>\n<p><img src=\"https://pica.zhimg.com/v2-1725c13831e504027ebc912d398fc2a8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"449\" data-watermark=\"original\" data-original-src=\"v2-1725c13831e504027ebc912d398fc2a8\" data-watermark-src=\"v2-7a0b74c0b64ed8800d41099d9d1f52a5\" data-private-watermark-src=\"v2-962735e8ae9448db9e1f48c217c42435\"></p>\n<p data-pid=\"RH1uwleh\">根据当届比赛的抽签规则，32支球队被按照所在足联被分在四个池子中，抽签顺序为A池（东道主和7个种子队）、D池（非洲和中北美球队）、B池（欧洲球队）和C池（亚洲和南美洲球队）。</p>\n<p data-pid=\"Wy0Pxv9K\">日本队最先被分到H组，此时布拉特表面上还能笑得出来，心里却盼着<a href=\"http://link.zhihu.com/?target=https%3A//sports.163.com/keywords/4/0/4f0a6717/1.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">伊朗</a>队赶紧被抽出来。但随着沙特阿拉伯队和韩国队先后被抽出，分到了E组和C组，布拉特发现他们一直以来担心的事情即将成为现实。</p>\n<p data-pid=\"m76zAIHW\">伊朗队被抽出来的时候，能去的只有F组，同组对手有德国队、南斯拉夫队和<a href=\"http://link.zhihu.com/?target=https%3A//sports.163.com/keywords/7/8/7f8e56fd/1.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">美国</a>队。特雷索尔抽完之后，台下鸦雀无声，场面与他刚出场的时候形成了鲜明的对比。</p>\n<p><img src=\"https://picx.zhimg.com/v2-02426199d1c5ada0e4c81ff6a05d7ecc_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"454\" data-watermark=\"original\" data-original-src=\"v2-02426199d1c5ada0e4c81ff6a05d7ecc\" data-watermark-src=\"v2-72b20f80dccbc635ea24401f0f76649f\" data-private-watermark-src=\"v2-fe2a1dd2afe7ebac65e1bafec6c0d240\"></p>\n<p data-pid=\"yCQ82Hpe\">抽签现场还把32支球队的当家球星请到了现场，每抽出一支球队，就有一名球星进入现场落座。美国队被抽出来时，美国球员维纳尔达还能和旁边的德国门将科普克谈笑风生，但在伊朗队将成为他们在小组赛中的对手后，维纳尔达脸上露出了复杂的表情。</p>\n<p><img src=\"https://pica.zhimg.com/v2-7987118e1859ac115f17abc556ed61d0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"451\" data-watermark=\"original\" data-original-src=\"v2-7987118e1859ac115f17abc556ed61d0\" data-watermark-src=\"v2-0c371abaa0c2fd2c679a27dee77bd6a2\" data-private-watermark-src=\"v2-36badfbe249d3d72e505a11a909adbe3\"></p>\n<p><br></p>\n<h2>世纪对决</h2>\n<p><br></p>\n<p data-pid=\"Sq_2-Bj3\">抽签结果揭晓后第二天，“美国队将与伊朗队在世界杯上对决”几乎成了全球的焦点，美国媒体对“美伊之战”的关注度甚至超过了世界杯本身。</p>\n<p data-pid=\"NdqSBOk2\">在被问到如何看待这场比赛时，美国<a href=\"http://link.zhihu.com/?target=https%3A//sports.163.com/keywords/8/b/8db3534f/1.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">足协</a>主席、曾担任洛杉矶快船队总裁的艾伦·罗森博格回答道：“我想这场比赛一定会载入史册，足以成为‘万赛之母（the mother of all games）’。”</p>\n<p><img src=\"https://picx.zhimg.com/v2-bd6cecf35c84e37c27dee3c7883014fc_720w.jpg?source=b1748391?rss\" data-caption=\"罗森博格（左）\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"360\" data-watermark=\"original\" data-original-src=\"v2-bd6cecf35c84e37c27dee3c7883014fc\" data-watermark-src=\"v2-4df0c1a41bb5c46cbadcb3fddc9213e7\" data-private-watermark-src=\"v2-4a917f94fbc51d451726d366ed3be622\"></p>\n<p data-pid=\"akd0_BV2\">与此同时，万里之外的德黑兰也因这一抽签结果陷入了短暂的动荡之中，伊朗报纸称这场比赛为”世纪对决“。世界杯分组出炉一周后，伊朗足协收到了来自全国各地的几万封信，里面的内容大致相同：与美国队的比赛，绝对不可以输。</p>\n<p data-pid=\"aoxpRZWQ\">自从1979年伊朗伊斯兰革命之后，伊朗与美国便成了不共戴天的死敌。两伊战争中，美国在战争初期向伊拉克援助了大量的武器，并禁止向伊朗空军提供备用零件。战争进行到后期，美国不仅为了保护自己的石油运输而对伊作战，还曾击落过伊朗的民航客机，造成290人死亡。</p>\n<p data-pid=\"0Lci2RP1\">两伊战争造成了伊朗近50万人伤亡，但相比伊拉克，伊朗百姓更多地把这笔账算在了美国头上。伊朗后卫哈克普尔回忆道：“世界杯之前，我们在国内进行训练时，人们会把训练场围得水泄不通。观看我们训练的并非全是球迷，也有很多是在战争中失去儿子的母亲，失去丈夫的妻子。他们流着眼泪，唱着歌。如果你见过这种场面，你就会明白，你绝不能辜负他们。但是从你这样想开始，你的身上也背负了巨大压力。”</p>\n<p data-pid=\"LLVG8VhF\">球迷的这种情感让每一名伊朗球员都备受鼓励，但对于主教练贾拉勒·塔莱比而言，却是不能承受之重。</p>\n<p><img src=\"https://picx.zhimg.com/v2-3a856165e351aefbb9984079e10bba5a_720w.jpg?source=b1748391?rss\" data-caption=\"塔莱比\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"369\" data-watermark=\"original\" data-original-src=\"v2-3a856165e351aefbb9984079e10bba5a\" data-watermark-src=\"v2-3901e9fb44370ede4bb1d00f868daf53\" data-private-watermark-src=\"v2-010f3524dac8d0c2d1eef29fe6ba3527\"></p>\n<p data-pid=\"fpTaA5X3\">球员时代的塔莱比就是伊朗国脚，退役之后他还曾在切尔西学习<a href=\"http://link.zhihu.com/?target=https%3A//sports.163.com/keywords/8/b/8db37403/1.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">足球</a>教练课程。伊斯兰革命爆发后，塔莱比带着家人逃到了阿联酋，并在1983年移居美国。塔莱比始终保留着伊朗人的身份没有加入美国国籍。他为妻子在美国开了一家素食餐厅，他的孩子们也在美国接受了教育，自己则为了养家糊口来到了离伊朗很近的阿联酋，执教一支当地球队。</p>\n<p data-pid=\"qlk4udNn\">1997年，为了冲击法国世界杯，伊朗足协聘请塔莱比担任伊朗国家队技术总监。不过在法国世界杯开赛前一个月，伊朗足协就解雇了原来的主教练，把塔莱比扶正。外界普遍猜测，伊朗足协之所以这样做，是认为塔莱比对美国队更了解，似乎在伊朗人看来，除了美国以外，其他的对手都不重要。</p>\n<p data-pid=\"xHMdNFCe\">塔莱比说：“全世界的伊朗人，都在关注这一场比赛的结果。我在想，我们肯定要赢下这样一场比赛，但是我应不应该仇恨美国队的球员呢？美国与伊朗断绝了关系，并经济制裁了伊朗20年，让这个国家陷入艰难的境地。我们的球员都是在制裁与战争中长大的。比如阿齐兹，他小的时候踢得不是足球，而是包着石块的布包；马达维基亚在15岁时感染了布鲁氏病菌，因为美国的制裁，他没有可以用的药，差点瘫痪。”</p>\n<p data-pid=\"l4OXyFmz\">“当这一代人在战火中瑟瑟发抖时，他们绝对不会想过自己能有一天能踢世界杯。但我呢？我的孩子在美国接受了教育，因为在伊朗他们无书可念。我当然不喜欢战争和制裁，但美国也给了我们家落脚之处。我认为，不要把复仇的情绪带到体育赛场上，因为那是政治上的悲剧，而不是体育上的。就我对美国人的认识，他们不会把在体育领域遭受的失利看作是一种报复，如果他们那么想，我们带着仇恨的情绪赢下了比赛，又有什么用呢？”</p>\n<p><br></p>\n<h2>危机四伏</h2>\n<p><br></p>\n<p data-pid=\"lR9cYeIa\">伊朗这边枕戈待旦，美国这边也没有丝毫马虎。美国中情局早早地就行动起来，世界杯开始的前半年，中情局给法国政府陆陆续续发去了几千份档案，要求美国政府不得向这些人颁发签证或是销售世界杯门票，理由是这些人涉嫌与伊朗政府有合作，或是敌视美国，有可能在法国做出对美国队不利的行为。</p>\n<p data-pid=\"lzuoe3om\">足球被如此浓厚的政治色彩所笼罩，这是国际足联不愿意看到的。为了让世界杯回归纯粹，国际足联也行动了起来。在世界杯开始前，国际足联宣布，将6月21日定为当年的公平竞赛日，这一天“刚好”是伊朗队与美国队比赛的当天。</p>\n<p><br></p>\n<p><img src=\"https://picx.zhimg.com/v2-92e6d008404bc1a3d74c6f1c476a1643_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"461\" data-watermark=\"original\" data-original-src=\"v2-92e6d008404bc1a3d74c6f1c476a1643\" data-watermark-src=\"v2-ab19edf90a2047c046d0645bb8830e50\" data-private-watermark-src=\"v2-088d2883c4edb97b271e9aa84cfe877a\"></p>\n<p><br></p>\n<p data-pid=\"ZvVS9jNq\">国际足联媒体官员迈赫达德·<a href=\"http://link.zhihu.com/?target=https%3A//news.163.com/news/search%3Fkeyword%3D%25E9%25A9%25AC%25E8%258B%258F%25E8%25BF%25AA\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">马苏迪</a>被布拉特任命为伊朗队与美国队的协调员，美伊之战的大小事务也由他全权负责。马苏迪出生于伊朗，在伊斯兰革命后和全家人移居加拿大，他对伊朗和美国的底线都知根知底，由他来处理实在是再合适不过了。</p>\n<p data-pid=\"Gel0vBvS\">早在抽签当天，熟知抽签规则的马苏迪，在看到德国、美国和南斯拉夫被抽出来后，突然脱口而出：“天啊，这样来看伊朗很有可能和美国一个小组，那样的话这场比赛绝对是世纪之战。”在抽签结果揭晓后，马苏迪兴奋地喊道：“天啊，这就是我想要的比赛！”</p>\n<p data-pid=\"Qvbp0zKd\">马苏迪向美国足协和伊朗足协传达了国际足联的精神：“国际足联呼吁其成员协会，从人道主义和社会责任出发，尊重公平竞赛的理念和重要性，让比赛回归足球本身。”马苏迪告诉美伊双方，国际足联愿意在双方尊重这一精神的基础上，力所能及地满足两国在世界杯期间的要求。</p>\n<p data-pid=\"plTKAlfd\">伊朗足协和美国足协都对此表示认同，并提出了各自的要求：伊朗不希望在比赛中看到任何反对伊朗政府的行为出现，而美国政府则要求国际足联与法国政府一道，保证美国队的安全。马苏迪答应了双方的要求。</p>\n<p><img src=\"https://picx.zhimg.com/v2-c6a40c3beb699bc65c3dea66e35db227_720w.jpg?source=b1748391?rss\" data-caption=\"多年后马苏迪谈到这件事依然心潮澎湃\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"372\" data-watermark=\"original\" data-original-src=\"v2-c6a40c3beb699bc65c3dea66e35db227\" data-watermark-src=\"v2-2ea6f34211fa6507a8cf2e2f3a46eec1\" data-private-watermark-src=\"v2-a996e45954699d7f56647f29d513f7fd\"></p>\n<p data-pid=\"WIwemSfK\">不过，正所谓树欲静而风不止。美国队主教练斯蒂夫·桑普森在抽签结果揭晓后就被罗森博格要求“注意言论，不要发表政治相关言论”，但桑普森对这一要求十分不满：“国际足联和美国足协都不希望我灌输暴力言论，让比赛变得政治化，但在我看来那是历史。伊朗政府曾把我们的公民扣为人质（指1979年伊朗人质危机）。我们的球员还年轻，没有经历过这些，他们不懂这场比赛对两个国家意味着什么。”一些美国媒体也指责国际足联和美国足协的这一要求是在破坏美国的言论自由。</p>\n<p data-pid=\"JgTdUi3R\">美国媒体则报道称伊朗在世界杯期间进行敌对行为，因为自从抵达法国之后，美国队就多次收到恐怖袭击警告。美国媒体怀疑这些恐怖组织都受到了伊朗的指使，并在国际社会上向伊朗施加压力。面对美国媒体的指控，伊朗的反应极其激烈，不仅要求他们拿出证据来，还反过来指责美国在世界杯期间挑衅伊朗。</p>\n<p data-pid=\"2mRxaY1m\">伊朗之所以如此愤怒，是因为世界杯期间敌视伊朗政府的各个团体根本没闲着。伊斯兰革命之后，许多敌视伊朗政府的人都移居海外，并形成了若干个反对伊朗的组织。在法国世界杯开赛前夕，有的组织在法国的电视节目中攻击伊朗政府，有的则跑到伊朗队驻地外面拉条幅示威。</p>\n<p data-pid=\"dMWA9E6Y\">在这些组织当中，最不能被伊朗政府容忍的是“伊朗人民圣战组织（下文称MKO）”，该组织自从两伊战争之后便长期接受萨达姆的资助，被伊朗和美国列为恐怖组织。法国世界杯开赛前，MKO组织多人上街派发攻击伊朗政府的传单，并计划让成员穿着印有该组织头目玛利亚姆·拉贾维照片的T恤进场看球。</p>\n<p data-pid=\"f5StJrEL\">与此同时，MKO还购买了7000张伊朗与美国比赛的门票，让MKO成员入场看球，并计划在球场内展示反伊朗政府的标语和图片，要知道承办美伊之战的里昂热尔兰球场的总容量才42000人。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-e0e8da4bb9170c07eda7e3f398bb7130_720w.jpg?source=b1748391?rss\" data-caption=\"MKO以及与其有关联组织在世界各地一直有活动\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"395\" data-watermark=\"original\" data-original-src=\"v2-e0e8da4bb9170c07eda7e3f398bb7130\" data-watermark-src=\"v2-2ec0b7a8e41b01738fa15c655f8a0ed9\" data-private-watermark-src=\"v2-b3b46a9c457629242bd52135e23c444a\"></p>\n<p data-pid=\"tS--GYBb\">MKO如此活跃，不仅让国际足联感到恐慌，也让伊朗政府质疑起了国际足联的承诺和组织能力。马苏迪后来回忆道：“在那场比赛之前，我不止一次被伊朗足协主席法拉哈尼质询，‘国际足联是否真心想要一场与政治无关的比赛？你们是否真的有魄力和手段，履行自己的诺言，满足我们的要求？’我回答：‘我们能做到。作为一名伊朗人，我也一定会履行我的承诺。’”</p>\n<p><br></p>\n<h2>承诺来之不易</h2>\n<p><br></p>\n<p data-pid=\"gsishz8X\">马苏迪通过外交渠道得到了法国政府进一步的支持。“伊朗人民圣战组织”的真面目被法国媒体报道后，很快受到了法国国民的厌恶；法国警方向美国队和伊朗队的驻地加派了警力，两支队伍的安保压力也大大地减轻；美国政府也在调查后作出澄清，称对美国队恐怖袭击的警告是由本拉登的基地组织发布的，还了伊朗的清白。</p>\n<p data-pid=\"Is7qB9Bq\">随着6月21日的临近，问题在马苏迪的努力下被陆续解决。然而就在比赛前一天的赛前准备会上，法拉哈尼告诉了马苏迪一个坏消息：“伊朗球员收到了指示，不能主动走向美国球员握手。这不是由伊朗足协下达的指示，而是最高领袖哈梅内伊下达的。”</p>\n<p><br></p>\n<p><img src=\"https://picx.zhimg.com/v2-13746895c90aab1f76f57fff607bf39c_720w.jpg?source=b1748391?rss\" data-caption=\"哈梅内伊\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"991\" data-watermark=\"original\" data-original-src=\"v2-13746895c90aab1f76f57fff607bf39c\" data-watermark-src=\"v2-d07d1068f8c57838d9d2ba4d744a2eb0\" data-private-watermark-src=\"v2-084f9a8587c1061447dbc5e6936ffc67\"></p>\n<p data-pid=\"VnnBEv1t\">根据国际足联规定，在国际比赛中，客队球员需要主动走向主队球员进行赛前握手。而根据赛程安排，美伊之战中，美国是主队，伊朗是客队。马苏迪说这是规则，无法变通。</p>\n<p data-pid=\"kdTuHnp9\">但法拉哈尼的解释让马苏迪明白了哈梅内伊的想法：无数伊朗人也在聚焦这这场比赛，伊朗人并不全都懂足球，但他们将国家的荣誉和尊严视作生命。如果他们在电视上看到伊朗球员主动走向美国球员，很可能会将这一行为曲解成‘伊朗向美国做出让步了’，那将是伊朗人无法接受的，哈梅内伊和伊朗政府也将最先遭受到国内的舆论压力。</p>\n<p data-pid=\"rECWj5jR\">赛前准备会立即变成了国际足联、伊朗足协和美国足协的三方会谈。美国足协的代表是官员汤姆·金，在了解到伊朗的顾虑之后，汤姆·金在获得了罗森博格的批准后表示，美国可以做出让步，让美国队的球员主动走向伊朗队的球员。但此时，一些与会的国际足联官员却不肯让步，他们坚持规则就是规则，就算美国同意了也不行，会议陷入了僵局。</p>\n<p data-pid=\"_XmLqxea\">就在这时，当值的瑞士主裁判梅尔开口了:“既然如此，就谁也别走向对方了。明天是国际足联公平竞赛日，为什么不让两支球队走向对方，走到一起，我们拍一张照片呢？”</p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-0db55bd760220e4ffeba7963290c22c7_720w.jpg?source=b1748391?rss\" data-caption=\"当值主裁梅尔，非常有个性的一位裁判\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"440\" data-watermark=\"original\" data-original-src=\"v2-0db55bd760220e4ffeba7963290c22c7\" data-watermark-src=\"v2-4a8a6eb8bcac54d2136e30543038e616\" data-private-watermark-src=\"v2-77a43e5daa9a60bf2d5b2aba32370734\"></p>\n<p data-pid=\"UBolhXX7\">梅尔的提议立刻得到了所有人的同意。由于6月21日还有另外2场比赛，马苏迪立即给负责另外两场比赛的同事打电话，让另外四支球队在赛前也进行相同的仪式。一名同事对马苏迪说到：”想法很好，我们肯定会做到。但是还有一个问题，要让阿根廷队与牙买加队握手很容易，让德国队与南斯拉夫队握手也不难。但是万一伊朗人不肯和美国人握手呢？“</p>\n<p data-pid=\"Et9ntijO\">马苏迪说：”我向你保证，他们会去握手的。“</p>\n<p data-pid=\"Pt-YMDY4\">********</p>\n<p data-pid=\"NJH9SkMM\">如果你喜欢我们的文章，欢迎关注微信公众号：后厂村体工队</p>\n<p data-pid=\"bTTG8ZRV\">********</p>\n<p data-pid=\"rEihCwLX\">赛前发布会上，两队球员最大程度避免谈到政治话题。美国队中场球员塔布·拉莫斯在赛前发布会上说：“虽然我们很重视与伊朗队的比赛，但我认为伊朗球员比我们更看重这一场比赛，对他们而言，这场比赛有着更深的意义。”</p>\n<p data-pid=\"HQWvIhb_\">而在伊朗进行赛前发布会时，有想搞事情的美国记者问伊朗球员：“美国球员说他们没人说过要为克林顿比赛之类的话，那你们为哪个人而战呢？”马达维基亚回答：“我们不为某一个人而战，而是为了所有伊朗人民。”</p>\n<p><img src=\"https://picx.zhimg.com/v2-1a45dbbfbc9fe80812491f687b7c288a_720w.jpg?source=b1748391?rss\" data-caption=\"马达维基亚\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"500\" data-watermark=\"original\" data-original-src=\"v2-1a45dbbfbc9fe80812491f687b7c288a\" data-watermark-src=\"v2-8d0e54e97735736a9d1e35dffed5bc7f\" data-private-watermark-src=\"v2-834d26b61ef09adcd620e9c08d21de69\"></p>\n<p data-pid=\"_Zkyftdt\">比赛的当天，热尔兰球场外人山人海，法国警方则如临大敌。除了原本的安保人员之外，他们又增派了150名警察，布置在球场内和看台上的各个角落。比赛开始前，马苏迪就已经给警方补过课，对波斯语一窍不通的法国警察，愣是记住了所有的反伊朗政府标语、图案和人像，每一名球迷携带的旗帜、标语都要通过仔细检查。当天热尔兰球场的安保级别也是有史以来最高的，直升机在天上盘旋，特种部队也被部署在球场周围，警犬顶着高温巡逻了7、8个小时，在比赛开始前就已经精疲力尽。</p>\n<p data-pid=\"hljh-7fo\">不过MKO在发现了法国警方的行动后，立即改变了策略。他们就像电影《逃离德黑兰》中那样，将标语裁剪成若干个布条，由组织成员分别带进场内。他们还把印有拉贾维头像的T恤贴身携带，以躲避法国警方的搜查。</p>\n<p data-pid=\"QJ2gQCcK\">马苏迪在开始前收到了法国警方的报告，称大概有3000人将政治标语和T恤带进了场。此时比赛马上就要开始了，马苏迪立即联系了信号制作方和各个摄影机位，告诉他们避开所有政治标语和印有头像的T恤。</p>\n<p><br></p>\n<p><img src=\"https://pica.zhimg.com/v2-6b28b0b2dc249d227ace8c32ec099d0c_720w.jpg?source=b1748391?rss\" data-caption=\"现场警察可忙坏了\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"430\" data-watermark=\"original\" data-original-src=\"v2-6b28b0b2dc249d227ace8c32ec099d0c\" data-watermark-src=\"v2-51de8c692f4e47cda5112962d24bdaa7\" data-private-watermark-src=\"v2-101924b37e1e2d5bb514c406f13bbfbd\"></p>\n<p data-pid=\"RFUtr9aS\">马苏迪忙得焦头烂额的同时，塔莱比正在给伊朗球员们做最后的动员，他对球员们说：“你们已经知道了，这个球场内有仇视我们国家的标语，也会有人给你们喝倒彩。但我希望你们记住，此时此刻你们是在代表你们的国家在比赛，你们在捍卫所有伊朗人的尊严和荣誉。忘记一切，只需要记住伊朗和足球，这就是你们来到这里的根本原因。”</p>\n<p data-pid=\"mOLYm1G6\">当所有球员站在通道内的时候，马苏迪惊喜地发现每一位伊朗球员的手中都拿着一束象征着和平的白玫瑰。法拉哈尼对马苏迪说：“我们会把这束花送给美国队的球员们。”马苏迪笑着问道：“这也是最高领袖的指示吗？”法拉哈尼说：“不，这是全体伊朗人民的心愿，我们有义务在这个舞台上，向世界展示伊朗美好的一面。”</p>\n<p data-pid=\"FVIqLETr\">美伊之战吸引了无数摄影师，看台上的球迷也拿出相机准备记录这场有史以来最具有意义的比赛。闪烁的闪光灯让热尔兰球场亮如白昼。在演奏完两国国歌之后，两队球员迎面走向对方，伊朗球员将手中的白玫瑰一一献给了美国队的球员，球场内顿时爆发了雷鸣般的掌声和欢呼声。在梅尔的引导下，两队球员站在了一起，留下了这张足球史上最伟大的一张合影。</p>\n<p><br></p>\n<p><img src=\"https://picx.zhimg.com/v2-f9427f6115890a37508e1e13ae709f28_720w.jpg?source=b1748391?rss\" data-caption=\"那张合影\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"415\" data-watermark=\"original\" data-original-src=\"v2-f9427f6115890a37508e1e13ae709f28\" data-watermark-src=\"v2-71c4fc3161ac7d8b4e3169c8e8d6493a\" data-private-watermark-src=\"v2-e2d3d9c43d65a3ba35784bd1f8f38ac2\"></p>\n<p data-pid=\"PKHBaWAF\">梅尔在合影时感动地留下了热泪，他说：“这是我一生中最难忘的时刻。我21年的执法比赛生涯，因这一场比赛，因这一刻而变得有意义。”</p>\n<p><br></p>\n<h2>感动世界的90分钟</h2>\n<p><br></p>\n<p data-pid=\"9wcMhDW4\">无论后来的人们对两队在赛前握手送花的环节怎样津津乐道，90分钟的比赛才是重头戏，那场比赛也确实改变了许多球员的命运。</p>\n<p data-pid=\"qyPTQd0j\">美伊之战的前一轮，美国输给了德国，伊朗输给了南斯拉夫，这场比赛对两队而言都不容有失。桑普森在赛前就要求美国队员们主动进攻，这让伊朗队在前30分钟打的很被动。不过这都在塔莱比的计划之中，他在赛前对球员们说：“美国人无论做什么，都带着百分之百的自信，哪怕是在他们不擅长的足球领域。当他们过分自信的时候，我们的机会就会出现。”</p>\n<p data-pid=\"xvbsRH9V\">虽然美国队的射门两次击中横梁和立柱，但伊朗队并没有退缩，两队拼抢的动作也逐渐变大。梅尔被迫在第7分钟就出示了黄牌。梅尔后来回忆：“那场比赛我的执法压力之大，不仅前所未有，在此后也在没有过。我拼命的想掌控局面，如果不对球员们的动作做出限制，他们很有可能会发生冲突，那我们在赛前的努力就白费了。”</p>\n<p><br></p>\n<p><img src=\"https://picx.zhimg.com/v2-0f300f5200cf72d3d301b3916d5525c6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"352\" data-watermark=\"original\" data-original-src=\"v2-0f300f5200cf72d3d301b3916d5525c6\" data-watermark-src=\"v2-3b20ffbe78a2926ca24f9e78345ec344\" data-private-watermark-src=\"v2-b990e59b409349f85d3d0ec1813356f3\"></p>\n<p data-pid=\"tC1Q-zat\">比赛还是出了意外。第20分钟，伊朗队前锋阿齐兹获得了单刀球机会，出击的门将凯勒将他扑倒在地，但梅尔没有吹判点球。事后梅尔承认这是一个误判：“当时我的视线受到了阻挡，没看到完整的过程。阿齐兹很生气，我认为如果我要是判点球，那也得把凯勒罚下，比赛的平衡就被打破了。但我不得不承认，这是我的错误，那是一个红牌加点球的判罚。”</p>\n<p data-pid=\"1B988Ml1\">但看台上的伊朗球迷不这样想，他们认为裁判偏向美国队，所说的公平竞赛不过是谎言，一时间嘘声四起。而看到机会的MKO成员立即拉起了横幅和政治标语，并喊起了政治口号。由于看台上大家都是混着坐的，一时间看台上的许多地方都发生了混乱和小规模的冲突。</p>\n<p data-pid=\"XKYpHbI-\">但此时马苏迪的安排起到了关键作用，所有的摄像机位都把镜头对准了球场内而不是看台上，摄影师也把心思放在了比赛上，只有少数用于官方记录的摄像机把看台上的画面拍了下来。</p>\n<p data-pid=\"fWpDmcMc\">MKO成员还想冲入球场，制造更大的混乱，但看到看台下面150名训练有素、眼神凶狠的特警时，他们犹豫了，双方形成了对峙的局面。</p>\n<p data-pid=\"AgN6bRel\">就在此时，伊朗队率先取得了领先，前锋埃斯蒂利头球破门。进球后的他泪流满面，狂奔到场边。伊朗球迷的愤怒烟消云散，这是他们第一次在世界杯上取得领先。原本闹事的MKO成员突然安静下来，他们也是伊朗人，只是政治立场不同，此时的他们突然变得不知所措。</p>\n<p><img src=\"https://picx.zhimg.com/v2-346eccc0f34e2facacbdc3a91503b69b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"515\" data-watermark=\"original\" data-original-src=\"v2-346eccc0f34e2facacbdc3a91503b69b\" data-watermark-src=\"v2-3595c42263b227b9d422b95f774c5ec6\" data-private-watermark-src=\"v2-e1ed36e47686cd1d4a00e9e81c58ad15\"></p>\n<p data-pid=\"6EtgPwQh\">全场比赛临近结束的时候，马达维基亚再入一球，彻底杀死了比赛。看台上的伊朗人陷入了疯狂，而原本闹事的MKO成员加入到狂欢的队伍中来。他们淘汰了美国队，赢下了这场事关国家荣誉的比赛。</p>\n<p data-pid=\"2Ri87lak\">伊朗国内沸腾了，德黑兰彻夜无眠，有的开着车在街上摁着喇叭，有的在街头载歌载舞，女球迷摘下了头巾，相拥庆祝，宗教警察并没有制止她们，而是笑着看她们庆祝。虽然后来伊朗还是止步小组赛，但战胜美国队带来的喜悦，让伊朗人足足庆祝了一个月。</p>\n<p data-pid=\"lNTYxgI1\">进球功臣埃斯蒂利成为了伊朗的民族英雄，下到5岁的孩子，上到95岁的老人，没有人不知道他的名字。</p>\n<p><img src=\"https://picx.zhimg.com/v2-07326e591f7d6e3fdb6fbd57266a2b5e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"505\" data-watermark=\"original\" data-original-src=\"v2-07326e591f7d6e3fdb6fbd57266a2b5e\" data-watermark-src=\"v2-e5a512f1ae28b63e857b3018fe897a0f\" data-private-watermark-src=\"v2-626a4fc0a85f4ec142f609445c0d096d\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-160de20997c7e2ee72737576f880811f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"366\" data-watermark=\"original\" data-original-src=\"v2-160de20997c7e2ee72737576f880811f\" data-watermark-src=\"v2-e5f800a2ed7e974a636b6e2bfb61345f\" data-private-watermark-src=\"v2-94b5ef95ccf545db80e885f40181699a\"></p>\n<p data-pid=\"f6JWLwju\">梅尔在比赛后找到塔莱比，承认自己出现了误判。塔莱比宽慰梅尔，说谁都会犯错，抛开那个误判，他是一个非常优秀的裁判。这不是塔莱比的客套话，即便回到伊朗之后，他也多次为梅尔开脱。</p>\n<p data-pid=\"jawgdS4a\">美国队输掉了比赛，但球员们并没有为此感到沮丧。美国后卫阿古斯说：“虽然输球，但是我想我们两队在90分钟内所取得的成就，比政治家们20年的努力还要多。我很高兴看到这一点。”</p>\n<p><br></p>\n<h2>给和平一个机会</h2>\n<p><br></p>\n<p data-pid=\"tozcZQvg\">实际上，不仅国际足联和两国足协在努力促成这场比赛，社会各界和各国政府为了这场比赛能够顺利进行，也做出了巨大的努力。</p>\n<p data-pid=\"wYxOF1tq\">受美国的影响，法国政府此前一向对伊朗态度强硬，但在抵达法国后，伊朗球迷却发觉自己并没有因伊朗与西方糟糕的关系而收到冷落。美伊之战开始前夜，许多美国球迷主动向伊朗球迷示好，他们的照片也登上了多国媒体的头条。</p>\n<p><br></p>\n<p><img src=\"https://picx.zhimg.com/v2-9564a36e993952d523c4b539da0b0a26_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"617\" data-rawheight=\"365\" data-watermark=\"original\" data-original-src=\"v2-9564a36e993952d523c4b539da0b0a26\" data-watermark-src=\"v2-34b01cd9958bad657afb8a5c5737083e\" data-private-watermark-src=\"v2-44cdc59d93c83e368362de9c39f21e72\"></p>\n<p data-pid=\"bZFbOO5m\">美伊之战结束后，美国时任总统克林顿发表了讲话，他说：“我期待与伊朗队的比赛，是打破我们之间隔阂的开始。感谢伊朗总统促成了我们之间的交流，让我们了解到彼此丰富的文明。”</p>\n<p data-pid=\"DoA6dUbp\">当时担任伊朗总统的是穆罕默德·哈塔米。哈塔米是一位开明的政治家，他治下的伊朗也被看做是伊斯兰革命后最开放的时代。哈塔米曾在联合国大会上公开批驳西方学者提出的“文明对抗论”，提出了“文明对话论”，倡议不同的文明通过对话来增进了解、解决问题获得了国际社会的一致支持，2001年也按照他的建议，成为了不同文明间的对话年。</p>\n<p data-pid=\"faAmKfSR\">法国世界杯期间，哈塔米的另一番话获得了国际足联的高度赞扬：“政治上的噩梦，绝对不能成为足球上的噩梦。”因此，虽然美伊之战被看做是最纯粹的足球比赛，但也在多年后被英国《442》杂志称为世界杯历史上最具政治色彩的比赛。</p>\n<p data-pid=\"VHkzXv-y\">美伊之战让美国和伊朗看到了与对方和解的希望。2000年1月16日，应美国足协邀请，伊朗队访问美国，两队在帕萨迪纳进行了一场友谊赛。比赛在友善的氛围下进行，两队最终战成1比1平。当时已经成为美国足协高级总监的汤姆·金说：“因为乒乓球，我们与中国结下了友谊，并促成了良好的外交关系。我们希望通过足球，能够让类似的事情再度发生。”法拉哈尼则发出邀请，希望美国队也能回访，双方约定，下一场比赛就在德黑兰进行。</p>\n<p data-pid=\"DgpmhUJi\">美伊之战让美国与伊朗进入了短暂的蜜月期。2001年美国发生“9.11恐怖袭击事件”，哈塔米总统和最高领袖哈梅内伊都措辞严厉的谴责了恐怖袭击和袭击者。</p>\n<p data-pid=\"RhvEihIN\">然而伊朗队终究没有等到美国队的回访。</p>\n<p><img src=\"https://picx.zhimg.com/v2-632c5e9a92a73679002b17ebec6d4618_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"757\" data-watermark=\"original\" data-original-src=\"v2-632c5e9a92a73679002b17ebec6d4618\" data-watermark-src=\"v2-24c255c94290f0d5246c1f1fe348d323\" data-private-watermark-src=\"v2-aec9b32db2ede051953e752bd9467f16\"></p>\n<p data-pid=\"UnKSsUA9\">2002年1月29日，新上任的美国总统布什在国情咨文中将伊朗列为邪恶轴心国家，指责伊朗支持恐怖主义。将伊朗重新拉回到对抗的轨道。近些年来，美国加深了对伊朗的制裁、暗杀了伊朗将军苏莱曼尼，并退出了伊核协定，双方的和解再次变得遥遥无期。</p>\n<p data-pid=\"s0rUUj4F\">1998年的夏天，很多人以为看到了和平的黎明，却不曾想见到的只是和平女神的短暂一瞥。24年过去，每当后人回首那段往事，都会为前人庞大的格局和对和平共同的期盼而感慨万分。</p>\n<p data-pid=\"SQIl6a9a\">倘若多年后，和平真的成为一种奢望的话，不知道人们会不会想起，在法国里昂的热尔兰球场，和平之神曾给过愚蠢的人类一次宝贵的机会。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wang-yi-ti-yu?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">网易体育</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/525565463/answer/2779696234?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">9 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/567471328?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">美国  和伊朗  会因世界杯打起来吗？</a><br><a href=\"http://www.zhihu.com/question/569707357?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价2022年11月30日世界杯伊朗队vs美国伊朗队的表现？</a><br>\n","link":"http://www.zhihu.com/question/525565463/answer/2779696234?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价密室逃脱游戏的同质化现象？","date":"2022-11-27 13:05:29","description":"\n<h2><b>浅谈创新对改善密室“同质化”的重要性</b></h2>\n<p data-pid=\"N-b3kEXZ\">好的产业必然要抓准市场潮流，顺应发展趋势，迎合用户需求，并在此基础上实现规模增长。</p>\n<p data-pid=\"HxXRn0af\">大部分玩家或许也并不会想着“要在一场密室中学到什么”，可能跟朋友一起享受下“黑追电”中的刺激与释放，便足以缓解平日的疲累。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-8d909c87fb232ed6cc741a5fcfc33d7a_720w.jpg?source=b1748391?rss\" data-caption=\"文 | ICE\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"636\" data-watermark=\"watermark\" data-original-src=\"v2-8d909c87fb232ed6cc741a5fcfc33d7a\" data-watermark-src=\"v2-14bcf00311057c09f27f01dbf88647d9\" data-private-watermark-src=\"v2-595be258b88681ca8b0b493a1e22fc7d\"></p>\n<p data-pid=\"6gOzOxDG\">但随着接触到的密室主题越来越多，玩家难免会开始产生一些困惑——诸如“今天玩的这个本（主题）怎么这么像前几天玩的那个”，又或者当他人问起自己对某某主题的评价时，想了半天竟也说不出个“所以然”等等。</p>\n<p data-pid=\"JndTsSu2\">而这，恰好体现了当下的密室逃脱市场在内容方面日益严重的<b>“同质化”现象</b>。</p>\n<p><img src=\"https://picx.zhimg.com/v2-547e2f580300dc4df2f645b4a6b9ca5b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"578\" data-watermark=\"watermark\" data-original-src=\"v2-547e2f580300dc4df2f645b4a6b9ca5b\" data-watermark-src=\"v2-81598eacca36fa5928f992d8585b13bf\" data-private-watermark-src=\"v2-ab089dfdff05f7589ca781cbc0511935\"></p>\n<p data-pid=\"RuRFOAwb\">依笔者看来，密室作品要想摆脱“同质化”的窘境，<b>就一定要有它自己的“价值理念”与“创新点”</b>；“实景娱乐”也不应局限于作为大众无聊时消遣的“备选项”，更应像诗歌、电影一样趋近于文化承载与传播的“载体”，并逐渐成长为一种“独树一帜的艺术形态”。</p>\n<p data-pid=\"doBjtuiK\">所以本文也将从<b>“各类别主题的创新方向”、“‘创新点’应如何挖掘”以及“娱乐之外，密室还可以承载什么”这三点出发</b>，对当下密室逃脱的内容“同质化”现象发表一些个人浅见。</p>\n<p><img src=\"https://picx.zhimg.com/v2-690eba42a84e913b38743806275c4bd6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"566\" data-watermark=\"watermark\" data-original-src=\"v2-690eba42a84e913b38743806275c4bd6\" data-watermark-src=\"v2-268ce386388359d95d7ac89f188f926e\" data-private-watermark-src=\"v2-3421f7e5b21198fb33c33281276f9554\"></p>\n<hr>\n<h3>各类别主题的创新方向</h3>\n<p data-pid=\"DqLYU7Mx\">“密室逃脱”从最初由机关锁、奥数题、脑筋急转弯所攒揉而成的“无机整体”发展至今，基本已形成<b>“剧情机械解谜”、“恐怖演绎追逐”与“沉浸或RPG互动剧场”</b>三分天下的局面。</p>\n<p data-pid=\"P2bc07Ps\">但“创业有风险，创新无成败”，行业能有如今的繁荣定然离不开无数从业者的勇敢尝试，<b>在此也请先容许我向这些先驱者们致以最高的敬意</b>。</p>\n<p><img src=\"https://picx.zhimg.com/v2-705094caecb5fe6bfe5f48f773335270_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"960\" data-rawheight=\"512\" data-watermark=\"watermark\" data-original-src=\"v2-705094caecb5fe6bfe5f48f773335270\" data-watermark-src=\"v2-8a56b5086004d277314ccc3b4a70f7a3\" data-private-watermark-src=\"v2-4c8e3ae78f1d67b8f82f874de3cd7cf9\"></p>\n<p data-pid=\"zIu-3rHO\">言归正传，<b>考虑到不同类别的主题内容“同质化”程度各异，创新方向自然不尽相同</b>。对于“剧情机械解谜”类主题，优秀且具有深度的剧情和新颖的解谜机关便是其独一无二的“防伪标签”，放眼全国也是佳作频出。</p>\n<p data-pid=\"KDzICDV4\">比如<b>H次元的《彼岸》</b>就是以创新且连贯的机械解谜将复杂的剧情串联一体，不仅让玩家“解得开心”，故事也能“玩得明白”，更难得的是还唤起了<b>“人们对抑郁症儿童的关心以及对现代教育的反思”</b>。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6ad3aa1c37dc31ff1474eb222a23d8a7_720w.jpg?source=b1748391?rss\" data-caption=\"《彼岸》游戏剧照 | H次元\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"608\" data-watermark=\"watermark\" data-original-src=\"v2-6ad3aa1c37dc31ff1474eb222a23d8a7\" data-watermark-src=\"v2-214f51141794cca7b25a977a87fdef5d\" data-private-watermark-src=\"v2-da4be1eda104897f98a497ea724224ee\"></p>\n<p data-pid=\"j55V0SWr\">而提及<b>“恐怖演绎追逐”</b>，该类主题则堪称<b>“内容同质化的重灾区”</b>。题材上山村女鬼、校园怖事、医院惊魂……老套的剧情基本换汤不换药，甚至有时就连演绎内容与追逐时机都容易被有经验的玩家“预判”。</p>\n<p data-pid=\"v3l_NZ1Z\">不过若说“套路”最泛滥的，<b>当属“玩家单线任务”的设计</b>。来去路上的女鬼、保安、疯子等各种“非正常角色”带着假电棒、假电锯追逐的场面数不胜数，<b>有人对此乐此不疲，亦有人深感索然无趣</b>。</p>\n<p><img src=\"https://pica.zhimg.com/v2-64f2e0bfc3ca143ef41777cd166114ec_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"625\" data-watermark=\"watermark\" data-original-src=\"v2-64f2e0bfc3ca143ef41777cd166114ec\" data-watermark-src=\"v2-094c83684a956dd07a076801f9dc0356\" data-private-watermark-src=\"v2-88c73b48f283881b04eb37b3acfee18e\"></p>\n<p data-pid=\"H5sNrzen\">或许正因此类密室占据了市场总额的“大多数”，不乏有逐利者照着自以为的“通用模板”粗制滥造，可<b>UMEPLAY</b>的成功却突然让人意识到<b>这类主题并非登不上大雅之堂</b>。</p>\n<p data-pid=\"ExB-CXc2\">凭借充足饱满的“叙事性互动演绎”与爆裂震撼又贯穿始终的“光电杂技表演”，“逃脱艺术”的slogan名副其实。尽管这种创新同样引来了“模仿者”，但门槛无疑提高了不少。</p>\n<p><img src=\"https://pica.zhimg.com/v2-0a4545bbaeaee6fab34d73f8e8f19b3c_720w.jpg?source=b1748391?rss\" data-caption=\"《INSANE》游戏剧照 | UMEPLAY\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"608\" data-watermark=\"watermark\" data-original-src=\"v2-0a4545bbaeaee6fab34d73f8e8f19b3c\" data-watermark-src=\"v2-9513f81ef74c15ff597c1041c44e07e1\" data-private-watermark-src=\"v2-27e668b95cc49ec13c8a6b2159f07b67\"></p>\n<p data-pid=\"0gfNk6gf\">可惜最近部分主题虽打出了“爆闪”、“强声光电特效”做宣传噱头，<b>主题本身却缺乏了实在的剧情与设计感做支撑</b>，而参差不齐的硬件质量，更是让玩家增强体验是假，反倒增加“度数”是真。</p>\n<p data-pid=\"vdVf0MC1\">在这方面<b>“沉浸或RPG互动剧场”类主题</b>同理，比起像素级照搬的“拿来主义”，发掘属于自己的闪光点才是正道，对此我想用体验过的<b>911地下城《寂静之地》</b>进行举例。</p>\n<p><img src=\"https://picx.zhimg.com/v2-1c922f0fe4051f3c55f8001e71d5dd8c_720w.jpg?source=b1748391?rss\" data-caption=\"《寂静之地》游戏剧照 | 911地下城·沉浸式剧场\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"632\" data-watermark=\"watermark\" data-original-src=\"v2-1c922f0fe4051f3c55f8001e71d5dd8c\" data-watermark-src=\"v2-f214d84ac3f413c058c51e41f19bb82a\" data-private-watermark-src=\"v2-d4b8c02e8258db9bb04e693e9a6f4c57\"></p>\n<p data-pid=\"UeIoPO-j\">相比部分以NPC交互、做任务赚钱为玩法核心的沉浸式剧场，《寂静之地》的创新之处主要有<b>如下两点</b>——</p>\n<p data-pid=\"n374ovL0\">1.<b>游戏引入“怪物”的设定，并在场地内增设危险场景与安全点</b>，让往返其中的玩家需想办法躲开怪物完成任务。私以为这个设计或许也可适用于《安卡拉之心》类的主题，试想下将怪物出没的秘境或藏宝地与原本的西方魔幻背景结合，是不是又能衍生出一些有趣的玩法？</p>\n<p><img src=\"https://pic1.zhimg.com/v2-883a69de47bd456c83a252fd2297cd5f_720w.jpg?source=b1748391?rss\" data-caption=\"《寂静之地》游戏剧照 | 911地下城·沉浸式剧场\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"628\" data-watermark=\"watermark\" data-original-src=\"v2-883a69de47bd456c83a252fd2297cd5f\" data-watermark-src=\"v2-b17df90b572111c6c5a65b8e1f4468ec\" data-private-watermark-src=\"v2-3f5ba41b94d37ac629efc592720d11a1\"></p>\n<p data-pid=\"Nva_j2TN\">2.<b>《寂静之地》引入了绑在手臂上的电子设备，记录了玩家的生命值、状态、物品栏、任务等信息</b>。虽然这个设计并不是由该主题首创，但高度成熟地将大量游戏变量集成于一体，免去了各种复杂的道具翻找与查阅，想必也能增加机关设计上的更多可能。</p>\n<hr>\n<h3>“创新点”应如何挖掘</h3>\n<p data-pid=\"6ZXCNQmG\">“怎样的'创新点'才能让一个主题脱颖而出”，是很多设计师甚至玩家都会去思考的问题。常言道<b>“他山之石，可以攻玉”</b>，对于这点我认为其实可以在不抄袭的前提下从他人的优秀创作中汲取一些灵感。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-ddb7770e166ae44c79909addbf52763b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"722\" data-watermark=\"watermark\" data-original-src=\"v2-ddb7770e166ae44c79909addbf52763b\" data-watermark-src=\"v2-e394ceb239fd7546b0fccc4ceb1e3593\" data-private-watermark-src=\"v2-f943ec7f1dbd578a03834462683ed95e\"></p>\n<p data-pid=\"j5DXJdLt\">例如<b>机械师的《魔法精灵事件簿》</b>虽然剧情比较简单，却聪明地添加了“武器合成系统”，让玩家通过寻找散落在场景中的“元素碎片”并根据“魔法书”中记录的“合成公式”去制造各种武器用于对抗最终的大boss，机制设定上的创新点也为游戏增添了不少乐趣。</p>\n<p><img src=\"https://picx.zhimg.com/v2-bcffd71ff1b68aff2a62328d0fef1699_720w.jpg?source=b1748391?rss\" data-caption=\"《魔法精灵事件薄》中的武器道具 | 机械师\" data-size=\"normal\" data-rawwidth=\"900\" data-rawheight=\"361\" data-watermark=\"watermark\" data-original-src=\"v2-bcffd71ff1b68aff2a62328d0fef1699\" data-watermark-src=\"v2-941861fde8e267e617326e003a1fe40b\" data-private-watermark-src=\"v2-4f37ce98ccc5a87fc211a68575f83481\"></p>\n<p data-pid=\"KNBogFps\"><b>遗迹之城《血字的研究》</b>则在玩法上做出了创新，让玩家通过跟NPC勾心斗角来搜罗证据，且一路顺藤摸瓜到最后才真相大白，主题本身的高自由度和强互动性也获得了广大玩家的一致欢迎。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-27f0d0bd2f359f1ea838aed85651b177_720w.jpg?source=b1748391?rss\" data-caption=\"《血字的研究》游戏剧照 | 遗迹之城\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"631\" data-watermark=\"watermark\" data-original-src=\"v2-27f0d0bd2f359f1ea838aed85651b177\" data-watermark-src=\"v2-147340b85f0ec7d440284058bc3f4f91\" data-private-watermark-src=\"v2-7d7f6117b0f0fcf3a361e9051a4949b5\"></p>\n<p data-pid=\"fKNLHrAB\">除此之外，还有<b>H次元的《彼岸》</b>“通过选择不同的记忆方块组合进入不同倾向的意识空间”的巧妙设计、<b>GAMEBOT《奀仔》</b>中玩家“记忆穿越”与“代入角色”的奇妙设计、<b>暴风岛《绝逗野马镇》</b>中“时间暂停”的神奇设定、<b>SPR怪物赏金所《飞头蛮》</b>中“狩猎怪物”的有趣设定、<b>X先生《弥生》</b>中巧妙的剧情构思与超越常识的场景切换等等……而上述这些花样百出的“创新点”在令玩家眼前一亮的同时，也启发着整个行业。</p>\n<p><img src=\"https://picx.zhimg.com/v2-3c12a35ddb8da6a41b70a6a25e454a05_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"900\" data-rawheight=\"506\" data-watermark=\"watermark\" data-original-src=\"v2-3c12a35ddb8da6a41b70a6a25e454a05\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"y_tmbKDm\">另一方面，笔者认为<b>“对现有密室的不满足”</b>同样会激发对密室创新的一些“空想”。</p>\n<p data-pid=\"2Z4cTYr3\">比如就我看来仅凭进场前的一两段文字介绍和只言片语的剧情广播其实是很难让玩家理解并代入主题；所以个人也曾设想过利用编程设计与主题配套的游戏、建模还原故事的先导场景、其次再用漫画描绘架空世界观设计与发生在这个世界中的相关故事<b>以达成更好的代入效果</b>。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-a8e276b131cf5153e089e37b317634d7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"602\" data-watermark=\"watermark\" data-original-src=\"v2-a8e276b131cf5153e089e37b317634d7\" data-watermark-src=\"v2-44ae34e05ecc768cdcc2715bc6146bb0\" data-private-watermark-src=\"v2-c4b0be2fceedd52b061e706bf9c066c9\"></p>\n<p data-pid=\"B74rHNyb\">当然密室创新和搞科研很像，<b>产生想法后还需落地来验证</b>是否切实可行、存在哪些问题、有哪些改进手段、可以为后人积累哪些经验等等。</p>\n<p data-pid=\"RMgUMiOP\">但这样的迭代循环绝非朝夕之间便能完成，只有用无数从失败中积累出的经验所形成的“可控形式”，才能让玩家发自内心地感叹“密室还可以这样玩”！</p>\n<p data-pid=\"hTzPTfz7\">与此同时，个人还认为<b>一个好的密室设计师在生活中也应是个心思细腻的“观察者”和情感丰富的“体验师”</b>，不会放过任何一个触动心弦的细节。</p>\n<p><img src=\"https://picx.zhimg.com/v2-ca356f34e27418b0a1dd621562575dae_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"613\" data-watermark=\"watermark\" data-original-src=\"v2-ca356f34e27418b0a1dd621562575dae\" data-watermark-src=\"v2-0f6f13a54507149d59834c7396e49a14\" data-private-watermark-src=\"v2-e156b613a8b14ca83e64f2b22d16d61c\"></p>\n<p data-pid=\"Ah_WJIHm\">无论电影中出现的奇妙设定和平日里与朋友亲人交往中的感动瞬间，还是歌曲中穿越时空的旋律、文学作品里让人热泪盈眶的描写甚至是课本上的物理概念、化学式……以上种种其实都有机会成为密室主题“创新的源点”，市面上也的确有如此诞生的主题。</p>\n<p data-pid=\"yIjVj_Bx\">比如<b>BOOK11的《直播》</b>就是以一部感人的电影为源点进行的创作，他们的另一个主题<b>《魔女》</b>则是在一款游戏中获取的灵感，两个主题都制作得很精致，也均收获了大批粉丝。</p>\n<p><img src=\"https://picx.zhimg.com/v2-11eda6661bcba099d4f50e441d5e376a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"900\" data-rawheight=\"506\" data-watermark=\"watermark\" data-original-src=\"v2-11eda6661bcba099d4f50e441d5e376a\" data-watermark-src=\"v2-585edaaaca0277d30a87404367e477c5\" data-private-watermark-src=\"v2-851e08b9964fbefb79a8c9b7aba6ca36\"></p>\n<hr>\n<h3>娱乐之外，密室还可以承载什么？</h3>\n<p data-pid=\"WdUFecXY\">最后，我们来谈谈一个好的密室主题除了做到“让玩家玩得开心并缓解生活压力”外，<b>还可以承载什么内容，发挥什么作用</b>；这里也针对前文提及的密室主题类型举三个例子——</p>\n<p data-pid=\"OGAjuhfI\"><b>X先生的《弥生》</b>仅靠谜题加剧情的形式就向玩家传递了“幸福无法通过索取得到，而在于‘给与’本身”的价值理念。</p>\n<p><img src=\"https://pica.zhimg.com/v2-4fdd6dc32e766c70452d345ef67ea6cb_720w.png?source=b1748391?rss\" data-caption=\"《弥生》游戏剧照 | X先生\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"607\" data-watermark=\"watermark\" data-original-src=\"v2-4fdd6dc32e766c70452d345ef67ea6cb\" data-watermark-src=\"v2-685ff121e0500290642d04c1e9dcb172\" data-private-watermark-src=\"v2-e5e19632c269552e6497da4026f25ccf\"></p>\n<p data-pid=\"0i1HHy_z\">家喻户晓的校园恐怖密室主题<b>瞳的《瞳灵人》</b>则在被广大玩家称为“反坦克导弹”之余也通过NPC精湛的演绎让玩家切身体会到了“校园霸凌”的危害。</p>\n<p><img src=\"https://picx.zhimg.com/v2-99bab8c2f72c589bc0341e7c22e42b77_720w.png?source=b1748391?rss\" data-caption=\"《瞳灵人》游戏剧照 | 瞳\" data-size=\"normal\" data-rawwidth=\"900\" data-rawheight=\"507\" data-watermark=\"watermark\" data-original-src=\"v2-99bab8c2f72c589bc0341e7c22e42b77\" data-watermark-src=\"v2-244bad706cdfaf48693a2a4a609a3351\" data-private-watermark-src=\"v2-f4f9daf5696037047c857c71692e792a\"></p>\n<p data-pid=\"RR_1dlgg\">与前二者不同，<b>UMEPLAY的《ENOLA》</b>本身并未选择去向玩家灌输某个道理，而是通过叙事与情景剧的方式引起玩家对“孤独”本身的思考。</p>\n<p><img src=\"https://picx.zhimg.com/v2-0f0aa42cedc3ad9e979624859e02cbd3_720w.png?source=b1748391?rss\" data-caption=\"《ENLOA》游戏剧照 | UMEPLAY\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"608\" data-watermark=\"watermark\" data-original-src=\"v2-0f0aa42cedc3ad9e979624859e02cbd3\" data-watermark-src=\"v2-68ac85cf4bff55feb1321358662bad54\" data-private-watermark-src=\"v2-bb1a21ecb5ce32f3f4dce1913c62e5bf\"></p>\n<p data-pid=\"hVCCR5Zk\">综上所述，密室作品若想<b>在娱乐之外传递独特的价值观内核</b>，除了做到内容上的充实，本身可尝试包括但不限于以下几点元素——</p>\n<blockquote data-pid=\"bn7v1pCn\">1. 对时下热点论题、经典社会现象作出评议、批判或讽刺，并引导一个合适的价值取向。<br>2. 对某个哲学论点、某种科学思想具有深化与思考性质的探究。<br>3. 对某种情感或精神的歌颂，能够让玩家对表达的内容得以共情，进而获得某种触动。</blockquote>\n<p data-pid=\"UbfLmD6x\">此外文中提及的<b>主题举例虽仅是笔者基于自身玩过密室所进行的“抛砖引玉”</b>，但我始终相信只有这样，才能<b>让密室超越“单纯娱乐”的定位</b>，并在一定程度上承担市场教育和价值输出的社会责任。</p>\n<p><img src=\"https://picx.zhimg.com/v2-ed5fce12be9b379c224785b84346d5c9_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"719\" data-watermark=\"watermark\" data-original-src=\"v2-ed5fce12be9b379c224785b84346d5c9\" data-watermark-src=\"v2-967846bb90124e44df50361c5b47d9af\" data-private-watermark-src=\"v2-2c01d1abe9f6018f5c2c5b30d39a3133\"></p>\n<p data-pid=\"U901tn16\">当各个流派的设计者“百家争鸣”，不同类别主题“百花齐放”，又何需再愁实景娱乐陷于“同质化”的桎梏而驻足不前呢？</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/gan-yu-yue?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Mr.AGain</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://www.zhihu.com/question/567243397/answer/2771726725?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"国漫力作《大理寺日志 2》11 月 26 日开播连更三集，如何评价第 1-3 集？","date":"2022-11-27 02:29:36","description":"\n<p data-pid=\"8G1jtmj0\">大家好，我是《大理寺日志》的导演槐佳佳，感谢各位关注大理寺日志和好传动画。今天大理寺日志第二季已经登录腾讯视频，VIP首周可观看3集。上午十点的时候，感觉回到了两年半之前，我也是这样跟全体同事们守在公司屏幕前看着大家的反应和评论的，有紧张有焦虑，但更多的是期待和交卷后的喜悦与释然。先把感谢各位观众的话写在前面，感谢各位观众的等待和不离不弃，让我们有机会有动力来制作大理寺日志第二季。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-50c0502364d9c2b1b89acf1f01cc1eda_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"831\" data-rawheight=\"438\" data-watermark=\"watermark\" data-original-src=\"v2-50c0502364d9c2b1b89acf1f01cc1eda\" data-watermark-src=\"v2-564199a1cdd9295cdbec6312fc62f9e7\" data-private-watermark-src=\"v2-f2c178859c9cdb020db7382d3c072534\"></p>\n<p data-pid=\"UOakbFUv\">其实有很多看过第一季的观众会觉得大理寺是一部轻松欢快的动画。随着正片的发布，我想说大理寺它并不全是欢乐的，如果说第一季的剧情是给观众们加深以白猫少卿为主的大理寺众人的印象，那么第二季的剧情就可以说是给观众们上一记猛药。</p>\n<p><img src=\"https://picx.zhimg.com/v2-fbdc7a6b70d6431a0131d26d8837182e_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1119\" data-rawheight=\"635\" data-watermark=\"watermark\" data-original-src=\"v2-fbdc7a6b70d6431a0131d26d8837182e\" data-watermark-src=\"v2-6be70b95ef3c48b56fe2d26b698ca769\" data-private-watermark-src=\"v2-50924aa09e4fdb1674061e490cf88ba9\"></p>\n<p data-pid=\"aekLar6t\">唐朝公务员们之间的纷争是剪不断理还乱的。在制作过程中整个制作组讨论的一个核心本质就只有【如何通过画面准确的表达情感】。把少卿追逐的正义和朝堂之上的权谋纠葛传达出来，也要把将军浴血的肃杀和歌舞升平的盛世描绘出来，让我尤其意外的是在我们op发布的时候，就已经有观众朋友发布了自己对于op的解析，我们看完都惊呼666，内心充满了震撼与感动。谢谢你们，谢谢你们懂我们，观众与制作能够产生共鸣是一件十分浪漫且幸福的事情。</p>\n<p><img src=\"https://picx.zhimg.com/v2-119368291e36838c0294cf8d73d49b2c_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"443\" data-watermark=\"watermark\" data-original-src=\"v2-119368291e36838c0294cf8d73d49b2c\" data-watermark-src=\"v2-902f59ea3d11fbdecaaeec41fdeda74e\" data-private-watermark-src=\"v2-ea0ca0bd8c4376ba8112b91dfb4a31bf\"></p>\n<p data-pid=\"v97RWajy\">制作上对于第二季的考量除了情感表达，也考虑到了故事铺垫，如何把漫画的叙事转化成动画，对于我们来说是一个不小的挑战。由于两季的平台不一样，我们只能是尽最大努力去调和内容，既让看过第一季的观众们眼前一亮，又让没看过第一季的观众饱含期待。</p>\n<p><img src=\"https://pica.zhimg.com/v2-cc7c8eee468156adbadc4996672e21c6_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"449\" data-watermark=\"watermark\" data-original-src=\"v2-cc7c8eee468156adbadc4996672e21c6\" data-watermark-src=\"v2-f0d70b5eb2999ddc4048660d2ce2c720\" data-private-watermark-src=\"v2-3ac45313a529cb89010c223de9989a6d\"></p>\n<p data-pid=\"B7njxAYj\">第二季开篇的卷轴是我们给出的一个折中答案吧，浅述了第一季究竟讲述了怎样的故事，也整理了剧中各位人物的关系网，最后以拉开卷轴的画面表达传递出：一场大戏即将展开，大家请准备好吧。</p>\n<p><img src=\"https://picx.zhimg.com/v2-6071213fbe4429fbe5f3acd914d0f161_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1721\" data-rawheight=\"960\" data-watermark=\"watermark\" data-original-src=\"v2-6071213fbe4429fbe5f3acd914d0f161\" data-watermark-src=\"v2-6dbb6c8b23f5c8bacc042e639f03d588\" data-private-watermark-src=\"v2-e79a19e3a833644ae7def6a6c8209eb4\"></p>\n<p data-pid=\"ZNeOjDFI\">前三集主要是讲述了皇船夜宴上少卿重伤昏迷生死未卜，丘将军对傩戏戏子拔剑相向。大理寺众人在府衙为少卿办了一场哭笑不得的白事只为隐瞒少卿假死，而苏醒后的少卿准备彻查丘将军，通过调查人证和物证后，准备去博州城一探究竟。</p>\n<p><img src=\"https://picx.zhimg.com/v2-2a9b3d24786bf19327ecb7a695bbf8cb_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"449\" data-watermark=\"watermark\" data-original-src=\"v2-2a9b3d24786bf19327ecb7a695bbf8cb\" data-watermark-src=\"v2-1bf3aa05b5e1533e7a67aea8d806121d\" data-private-watermark-src=\"v2-ed5361f112a0f0f72a1c5fde3577faff\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-8d40e4c98d1b754f682101eca99d532b_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1717\" data-rawheight=\"960\" data-watermark=\"watermark\" data-original-src=\"v2-8d40e4c98d1b754f682101eca99d532b\" data-watermark-src=\"v2-eaaf0d760a55d0a25511d542428100b4\" data-private-watermark-src=\"v2-d46e99e0d73ebfdeaa595c15cf2651c9\"></p>\n<p data-pid=\"y2gNUQ_k\">在这三集里有大家想看到的女装少卿，冷酷的丘将军，跋山涉水的饼拾二人组，当然也加入了很多伏笔，情节是环环相扣的，所有在现在埋下的伏笔，都会在接下来的某一集爆发，希望大家耐心品尝这第二季的内容。</p>\n<p><img src=\"https://picx.zhimg.com/v2-f5e32d0b9515909a04b8312064d2e255_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1712\" data-rawheight=\"959\" data-watermark=\"watermark\" data-original-src=\"v2-f5e32d0b9515909a04b8312064d2e255\" data-watermark-src=\"v2-19feb5ba0b60efbffa9e5f74d1529e81\" data-private-watermark-src=\"v2-695409076a5bec7e78029de41b3423eb\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-f3b3ec3e5b31924f3bf7bf138b2cc014_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1716\" data-rawheight=\"960\" data-watermark=\"watermark\" data-original-src=\"v2-f3b3ec3e5b31924f3bf7bf138b2cc014\" data-watermark-src=\"v2-209eea015c456aeebd9e7fa5228443dc\" data-private-watermark-src=\"v2-979809af20c7b031a94c24f91972a6cb\"></p>\n<p data-pid=\"b9n7Mcv2\">波诡云谲的神都，一场大戏缓缓拉开帷幕。弄权争斗掩真相，洒然正义耀朝堂。今天好传动画历时两年半交上了答卷，各位阅卷老师们，接下来，笔交给各位了。</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/hadj-46?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">槐佳佳</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/567977080/answer/2776236318?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">56 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/406829735?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">国漫《大理寺日志》卖腐了吗？</a><br><a href=\"http://www.zhihu.com/question/391025014?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">最近出的大理寺日志高达9分以上，这个评分标准是“动漫”还是“国漫”？</a><br>\n","link":"http://www.zhihu.com/question/567977080/answer/2776236318?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"世界杯小组赛第二轮伊朗 2-0 击败威尔士，至此亚洲球队已取得 3 场胜利，如何评价他们的表现？","date":"2022-11-26 11:50:12","description":"\n<p data-pid=\"Osd4v1E2\">世界杯第二轮的首个夜晚，我心中滋味稍稍有些复杂。下午真是太开心了，我的老朋友奎罗斯带领的伊朗队终于打出了应有的水准，完胜了威尔士队，是的，这当然是完胜。</p>\n<p data-pid=\"6d4_0M3o\">可惜，随后的新版亚洲冠军与非洲冠军的对决，东道主卡塔尔队并没有完全放开手脚，在与塞内加尔这支世界杯常客的较量中，卡塔尔的两个反击点没有得到足够多的支持，后卫球员也显得慌乱，从申办到准备，卡塔尔豪掷千金，几乎搞定了一切，唯独足球场上，总有一些事情是金钱解决不了的。这支首次进军世界杯的球队，只剩下一场球可踢了，之前他们买到了在欧洲世预赛、美洲杯和中北美及加勒比地区金杯赛的练兵资格，在那些比赛里，原本他们证明了自己并非没有竞争力。</p>\n<p data-pid=\"R15L2F9I\">我近些年担任卡塔尔足协的顾问，深知这支球队是如何成长的，它一直走在正确的路上，取得过许多让人欣慰的进步，世界杯首秀的大失水准就格外让人遗憾。我呢，毕竟只是个顾问，许多事情上爱莫能助。</p>\n<p data-pid=\"uIxDAQgD\">遗憾归遗憾，这就是世界杯，它承载了多少荣耀也就相应承载了多少压力，初登世界杯赛程哪有不交学费的？</p>\n<p data-pid=\"ouL7YXLD\">威尔士在欧洲不算弱队，可惜对世界杯很生疏了，缺席有60多年了，在与伊朗队的比赛中，他们就成了更缺少底气的那一个。伊朗队这一次可不是“爆冷”击败欧洲球队，这些波斯人在各方面都略占优势，2比0真实体现了双方的差距。</p>\n<p data-pid=\"CdJh7tTe\">除了卡塔尔，四支代表亚洲出战世界杯最多的球队，伊朗、韩国、沙特、日本都有着让世界震惊的表现。经常听到的一种忧虑的声音是，亚洲足球与世界高水准足球的差距似乎在拉大。现在，还有人敢轻视亚洲吗？这四支亚洲传统强队以各自的方式持续进步，这种经验和自信的累积太重要了，他们终于可以在世界杯上让任何奇迹发生。</p>\n<p><img src=\"https://pica.zhimg.com/v2-3846ac50529c32de763ccf34ad7628fa_720w.jpg?source=b1748391?rss\" data-rawwidth=\"925\" data-rawheight=\"1163\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-3846ac50529c32de763ccf34ad7628fa\" data-watermark-src=\"v2-89616de1f4112e3afb4e6cdb0e7abb3a\" data-private-watermark-src=\"v2-4d80b8d3cb3490a59aa0adc95b541584\"></p>\n<p data-pid=\"BpJ3CIiR\">（在多哈，我和卡洛斯开玩笑说，你的巴西小兄弟该重视亚洲了）</p>\n<p><br></p>\n<p data-pid=\"cOg4-Ef0\">对于中国足球来说，打进一次世界杯正赛是远远不够的，更不能指望第一次参赛就一鸣惊人，那样的奢望上帝也帮不上忙。</p>\n<p data-pid=\"jnNZ91Al\">虽然中国足球缺席了本届世界杯，但是，冲击下一届的工作，难道不该在年初失利的一刻就开始吗？我知道，如今的中国国家男足事实上是“不存在“的，主帅的帅位也是空缺的，就好像下届世预赛远在天边，看着真是让人着急。</p>\n<p data-pid=\"SB_2BUNP\">你们知道伊朗队何以踢出那么犀利的足球吗？当然是因为他们选对了人。奎罗斯年龄小我几岁，率队参加世界杯正赛的记录也比我略少（他是四次，我是无人企及的五次），但他确实在很多方面与我很像，我们也非常投缘。</p>\n<p data-pid=\"wAb1gfk7\">奎罗斯也是一位非常神奇的教练，带领不同风格的国家队都取得了成功。我尤其要提醒你们的是，奎罗斯对伊朗足球的了解，就如同我对中国足球的了解。他带了伊朗队八年，在此之前已经打了100场比赛。正因为这些宝贵的经验，他的伊朗队最大限度地发挥了自己的潜能。</p>\n<p><br></p>\n<p><img src=\"https://picx.zhimg.com/v2-4784109001f1bdd4774b80b97fe37504_720w.jpg?source=b1748391?rss\" data-rawwidth=\"400\" data-rawheight=\"297\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-4784109001f1bdd4774b80b97fe37504\" data-watermark-src=\"v2-d966be4bad2058a3d4e25cdc734ecd7d\" data-private-watermark-src=\"v2-d2d9d3584557894e35075725a9b6f463\"></p>\n<p data-pid=\"kEUAbwIR\">（我执教中国国家队期间，奎罗斯率队到访昆明）</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/25-19-91-50-72?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">米卢</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/568827364/answer/2775763832?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">53 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/570106397?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2022 世界杯第二轮小组赛伊朗 2-0 绝杀威尔士，本场比赛有哪些精彩瞬间？</a><br><a href=\"http://www.zhihu.com/question/568833849?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">11 月 25 日世界杯小组赛，威尔士 vs 伊朗，你对本场比赛有何期待？</a><br>\n","link":"http://www.zhihu.com/question/568827364/answer/2775763832?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"18 岁西班牙小将加维成队史最年轻世界杯进球者，未来潜力如何？如何看待世界杯上 00 后掀起青春风暴？","date":"2022-11-25 14:25:00","description":"\n<p></p>\n<a href=\"http://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/2a7WmwIXgy7Flt4FAraCGQ\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://picx.zhimg.com/v2-6ccc9ff51d6b009d57c0728590edc939_qhd.jpg?source=b1748391\" data-image-width=\"1280\" data-image-height=\"545\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">不会系鞋带的18岁小鲜肉，世界杯首秀就成MVP</a><p data-pid=\"1c4kXIWv\">新老交替的西班牙队，在2022年卡塔尔世界杯首场的表现令人惊喜。7-0的比分之外，高质量的传控体系和几位天才少年令人耳目一新。</p>\n<p data-pid=\"ZeNC-ZUz\">一场比赛或许无法说明全部，但这些新生力量的涌现，有理由让人相信，江山代有才人出，全新的斗牛士们，即将重返豪强行列。</p>\n<p data-pid=\"_u1UC6w-\">这其中，9号加维尤其引人瞩目，司职核心中场的他，当选了全场比赛的最佳球员。他为西班牙打进第五个进球，让年仅18岁110天的自己成为了贝利之后，在世界杯球场上进球最年轻的球员。</p>\n<p data-pid=\"ioV7Dv8O\">而在最近5届世界杯上，只有2名18岁的球员完成了进球：2006年的梅西，2022年的加维。</p>\n<p data-pid=\"OrhJ_K0G\"><b>撰文/里多</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-392a16c7f8bc90318d9a76a8d0266cc8_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"553\" data-rawheight=\"369\" data-watermark=\"original\" data-original-src=\"v2-392a16c7f8bc90318d9a76a8d0266cc8\" data-watermark-src=\"v2-014029bdfc54452db3927a3339c27933\" data-private-watermark-src=\"v2-8b4f1bd03681329600273f09e43a6814\"></p>\n<p data-pid=\"Lh7PvNcG\">这是加维的世界杯首秀，但其实已经是他跟随国家队出战的第二个年头——14个月之前，他就被西班牙主帅恩里克选入国家队，而在那时，17岁的加维在成年职业比赛中的出场时间，只有374分钟。</p>\n<p data-pid=\"Hz4Vyna8\">2021年10月，17岁零62天的他首次为国家队亮相，打破了尘封已久的西班牙国家队最年轻出场纪录，而这项纪录的上一个保持者安赫尔-苏维耶塔，首秀是在1936年。</p>\n<p data-pid=\"O-8mWkEQ\">人们总是乐于寻章摘句，找出传承的迹象。同样出自巴萨青训，同样担任核心中场，加维对比的不只有梅西，他也和比他大了一岁的佩德里，被视为西班牙和巴萨阵容中，下一个哈维和伊涅斯塔。</p>\n<p data-pid=\"4kmcwlNo\">2004年8月5日出生的加维，在2020年9月就签下第一份职业合同，而在两年后，他就达成了世界杯出场、首发和进球的三项成就。绿茵场上从来不缺少天选之子，但在巴塞罗那和西班牙国家队一鸣惊人，那只能说明他真的是万里挑一的不世英才。</p>\n<p data-pid=\"RJUhArmV\">加维的原名叫做巴勃罗-马丁-帕兹-加维拉，因为儿时的球队里还有一名队友也叫巴勃罗，教练就一直喊他的昵称加维。这本来是一个很寻常的西班牙男孩绰号，但随着他的崛起，这个名字从此专属于他一个人。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-e1803ac46718e87196d675bac38da001_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"364\" data-watermark=\"original\" data-original-src=\"v2-e1803ac46718e87196d675bac38da001\" data-watermark-src=\"v2-5a78899765b83b6068eca315f23f2c8e\" data-private-watermark-src=\"v2-e9961112f5343ca38f81c5a0108b2400\"></p>\n<p data-pid=\"wPJEYwmf\">围绕着加维的成长故事，有一件事情永远绕不开。虽然已经是世界闻名的青年球星，加维却根本不会系鞋带。所以人们经常会看到，队友们蹲下给加维系鞋带的场景。</p>\n<p data-pid=\"eydKDnqI\">关于这一趣事，坊间流传着两种说法。一种是说，加维总是在比赛前非常紧张，根本没法系紧鞋带；而另一种则是说，加维从小就习惯松开鞋带踢球，他不会系鞋带，也从来没被绊倒过，所以对他来说这也从来不是问题。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-eae784077a5fafc2bdf9406489d77571_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"433\" data-rawheight=\"571\" data-watermark=\"original\" data-original-src=\"v2-eae784077a5fafc2bdf9406489d77571\" data-watermark-src=\"v2-da50f46e1a0eee52766248535112ad36\" data-private-watermark-src=\"v2-7f21ebe11292c0a80716970246c9c8ff\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"ITAUQciN\">总之，当加维在场上奔跑的时候，他的鞋带经常会散开，有时候是左脚，有时候是右脚，队友们会经常发现他的鞋带开了，然后加维就会一脸难为情，让队友帮他系鞋带。</p>\n<p data-pid=\"sZnDoaF5\">当然，这个小插曲只是增添了茶余饭后的笑料，反而也让更多的球迷注意到了这个英俊爽朗的小伙子。由于加维还没到成年队的年龄，所以他的球衣号码不在正式名单的1-25号之内，如今的他身穿30号球衣。也许是冥冥之中的巧合，同样在巴塞罗那成长成名的梅西，第一件巴萨的球衣，也是30号。</p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-8b8de52436f9d90231a82dbb245c6849_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"553\" data-rawheight=\"685\" data-watermark=\"original\" data-original-src=\"v2-8b8de52436f9d90231a82dbb245c6849\" data-watermark-src=\"v2-7431825a0af72aa722e4af674485d164\" data-private-watermark-src=\"v2-9b6dec3334986579e3be9dcdbf682290\"></p>\n<p><br></p>\n<p data-pid=\"d53_ijog\">不过加维的成长轨迹和技术风格与梅西并不相同，他从小就专注于担任核心中场，小小年纪就拥有超人一等的大局观，所以也常常被拿来和哈维对比。2010年，只有6岁的加维还在懵懵懂懂地坐在电视机前看他的前辈们捧起大力神杯，而在12年之后，他已经挑起大梁了。</p>\n<p data-pid=\"4bRVYznP\">加维说，他的足球偶像是伊涅斯塔和伊斯科，因此也常常会突然后排插上，来一脚冷射。对哥斯达黎加的这记进球便是他的招牌杰作：外脚背发力，皮球直奔死角而去。生涯至今，加维已经代表西班牙队出场过14次，打进3球了。</p>\n<p data-pid=\"Ixi_biVl\">还记得在他首次亮相的时候，许多人提出质疑，毕竟当时才17岁的加维还在长身体，看起来非常瘦弱，但一向不愿意使用年轻人的恩里克却力排众议，让加维首发，他在新闻发布会上特别解释了这一点。</p>\n<p data-pid=\"3QJLg6Xf\">“我很清楚的是，如果你觉得一个孩子不够好，你不能让他暴露在大众之下，因为会摧毁他的信心，”恩里克说，“但是加维不一样，看到他的表现，我毫不犹豫地坚信他会成为俱乐部和国家队的重要成员。对，确实有点早了，但我选择让他首发，因为我看到他在训练场上的表现，他足以胜任首发。年龄从来都不重要，重要的是你的态度，以及你能否适应教练的要求，加维必须可以，这我说的。”</p>\n<p data-pid=\"BIN-RUKK\">“他在大场面下踢球的感觉就像在学校操场上，或者是他家后院里。拥有这样特质的球员，真是很不好找。”</p>\n<p><img src=\"https://pic1.zhimg.com/v2-dac8a9f7467e4ba98da0685f5d02afdc_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"553\" data-rawheight=\"369\" data-watermark=\"original\" data-original-src=\"v2-dac8a9f7467e4ba98da0685f5d02afdc\" data-watermark-src=\"v2-5c68fd06330ce5865bb65ed9b1e90a21\" data-private-watermark-src=\"v2-c0edb5a2281ceb16f95ab7afaa4eccd6\"></p>\n<p data-pid=\"O0ENUeWz\">恩里克是对的，在少年加维的人生信条中，成为一名出色的足球巨星从来都不是目标，他的目标是成为一名能带领球队赢球的足球运动员。有一件事更加动人：巴萨0-2输给马竞的赛后，记者告诉了加维他首次入选国家队的消息，但加维当时的回答很让人出乎意料，“不谈这个，我们今天输球了，我很生气。”</p>\n<p data-pid=\"hqvLEIxd\">在巴萨，加维也只是在这个赛季才开始成为主要轮换，但他已经引起了全世界的关注——全球最权威的数据网站德转上，加维的最新身价达到了9000万欧元。而巴萨也对他寄予厚望，两个月前，他和巴萨续约到2026年，违约金被标到了10亿欧元。</p>\n<p data-pid=\"Hbp54axm\">不过，俊朗的面容之下，是一个战斗的灵魂。加维的球风并不像他的长相一样漂亮，但他却拥有现代足球核心中场的一切特点，在这个年龄就有了强烈的领袖气质。他更习惯于用手术刀一样的即兴传球来控制场面，而他也被很多对手视为最难防守的球员。</p>\n<p data-pid=\"EMs0gJog\">还有另一点，让队友们尤其喜欢。</p>\n<p data-pid=\"MxgfLZEx\">在防守端的加维稳健，狠准。还有一些不经常显现的狡猾和阴损。在球场上扮演绅士从来都不是什么好词儿，而在需要的时候做出阴狠凶猛的动作，才是顶级中场应有的技能。</p>\n<p><img src=\"https://pica.zhimg.com/v2-c22926ccd487a995df68800e41dbe908_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"553\" data-rawheight=\"369\" data-watermark=\"original\" data-original-src=\"v2-c22926ccd487a995df68800e41dbe908\" data-watermark-src=\"v2-1580b9350b1d211e058b355b87fb7a40\" data-private-watermark-src=\"v2-44ea4931a2093a293d83db836336eeb5\"></p>\n<p data-pid=\"bUBc24K5\">对于18岁的加维来说，他在球场上遇到的很多对手，都已经跟他的爸爸年龄差不多了，身材也要高大威猛很多。不过，争强好胜的加维丝毫不会退缩，他经常在比赛里和对手争论，故意制造对抗，扰乱对手的心态。当加维效力巴萨仅仅半个赛季的时候，YouTube上就已经有球迷制作了时长4分钟的视频，内容全是加维在球场上的暴脾气瞬间。</p>\n<p data-pid=\"1fFCFDWD\">在今年的国家德比上，加维的表现就让很多皇马球迷把他记在了小本本上：他撞翻维尼修斯、铲倒琼阿梅尼、出现在球场的每一寸的空间之上，惹得本泽马也没忍住甩了他一巴掌。</p>\n<p><img src=\"https://picx.zhimg.com/v2-38d43efb89ce128fc473b74ef2e1f3b0_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"449\" data-rawheight=\"269\" data-watermark=\"original\" data-original-src=\"v2-38d43efb89ce128fc473b74ef2e1f3b0\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-edf7f63dc0f360dfb0412e37c6a4426a_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"449\" data-rawheight=\"269\" data-watermark=\"original\" data-original-src=\"v2-edf7f63dc0f360dfb0412e37c6a4426a\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-42031f0b8038d62c90e88f4890f217ae_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"420\" data-rawheight=\"233\" data-watermark=\"original\" data-original-src=\"v2-42031f0b8038d62c90e88f4890f217ae\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"ZpBe_26W\">但没有多少人真的会苛责一个18岁的年轻人，尤其是一个注定会成为巴萨队长的王牌球星。今年10月，加维收获了最重要的肯定，他力压卡马文加、贝林厄姆以及穆夏拉，赢得了2022年的金童奖，同时也将科帕奖揽入怀中，而这两个奖项的上一任得主，正是他现在和未来的中场搭档，佩德里。</p>\n<p data-pid=\"_rJVj5QC\">在世界杯首战中，加维的数据单是：1球1助攻，91次触球，传球成功率90.4%，7次赢下对抗。你很难将这样的表现和他的年龄联想到一起。</p>\n<p data-pid=\"bg1iunEB\">佩德里也创下了纪录，这是他为西班牙出战的第7场国际大赛，成为了国际大赛出场最多的U19球员，而此时的佩德里，19岁零363天，意味着纪录将会定格在这里。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-10ccde1c68064df94711a68096fc82ea_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"553\" data-rawheight=\"369\" data-watermark=\"original\" data-original-src=\"v2-10ccde1c68064df94711a68096fc82ea\" data-watermark-src=\"v2-a5c83e191c6a066347c8c73658e4e425\" data-private-watermark-src=\"v2-9c95a3af4650436a218a6767ac08abfd\"></p>\n<p data-pid=\"Tnp-siBH\">接下来，如果西班牙能够延续这样的表现，或许仅仅1个月后，这项纪录就也属于加维了。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wang-yi-ti-yu?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">网易体育</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/568469114/answer/2774796352?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">46 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/524593159?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">队长莫拉塔称「西班牙至少有 60 到 70 名球员处于高水平，可以参加世界杯」，如何解读这一言论？</a><br><a href=\"http://www.zhihu.com/question/504255573?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">比利时队能在未来的两届世界杯中问鼎冠军吗？</a><br>\n","link":"http://www.zhihu.com/question/568469114/answer/2774796352?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"卡塔尔世界杯多场比赛上演「毫米级越位」，阿根廷对沙特越位数多达7次，裁判技术进步如何影响足球运动发展？","date":"2022-11-24 12:07:22","description":"\n<p data-pid=\"Qxv_s72t\">最近密集吐槽VAR，看了很多评论后，我想有必要对VAR技术造成的影响做一个系统性的整理，并且给出一些建设性意见，而不是单纯吐槽。</p>\n<p data-pid=\"suiA9i7_\">第一篇梳理了VAR引入的初衷和目前达到的效果。</p>\n<p data-pid=\"ESiy_lhU\"><a href=\"https://zhuanlan.zhihu.com/p/586312811\" class=\"internal\">豪语：关于VAR的系统讨论（1）引入VAR的初衷和效果</a></p>\n<p data-pid=\"ZIenTsfL\">第二篇探讨了引入VAR的代价和VAR带来的一些问题。</p>\n<p data-pid=\"Z_qOGmtW\"><a href=\"https://zhuanlan.zhihu.com/p/586330043\" class=\"internal\">豪语：关于VAR的系统讨论（2）VAR的代价和问题</a></p>\n<p data-pid=\"_pFJxNG9\">第三篇提几个对现有VAR方案改进的可能方向</p>\n<p data-pid=\"z2k2dz_e\"><a href=\"https://zhuanlan.zhihu.com/p/586336587\" class=\"internal\">豪语：关于VAR的系统讨论（3）VAR如何改进？</a></p>\n<p data-pid=\"t_rl-yy4\">以下为三篇全文汇总</p>\n<h2>官方关于VAR介入的情况汇总（摘要）</h2>\n<p data-pid=\"gOG-FYSi\"><b>1.进球是否有效</b></p>\n<ul>\n<li data-pid=\"f7ZFQSme\">进球前的犯规（手球、犯规、<span class=\"nolink\">越位</span>等）或出界</li>\n<li data-pid=\"3VaHj7Af\">点球过程中的犯规（守门员和其他球员的位置等）</li>\n</ul>\n<p data-pid=\"kyWN1Pbw\"><b>2.点球判罚</b></p>\n<ul>\n<li data-pid=\"2XgLN8Ib\">\n<a href=\"http://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%25E7%25BD%259A%25E7%2582%25B9%25E7%2590%2583\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">点球</a>前的犯规（手球、犯规、越位等）或出界</li>\n<li data-pid=\"acH47qS-\">犯规地点（禁区内外）</li>\n<li data-pid=\"maIafJm2\">点球错判或漏判</li>\n</ul>\n<p data-pid=\"44wFCtej\"><b>3.直接红牌（两黄一红不算）</b></p>\n<ul>\n<li data-pid=\"u9j2ICpt\">破坏明显进球机会的犯规</li>\n<li data-pid=\"6ad3fhIm\">严重犯规</li>\n<li data-pid=\"XFXkVR8b\">暴力行为或侮辱行为</li>\n</ul>\n<p data-pid=\"Ip7GW-tL\"><b>4.确认身份（红黄牌）</b></p>\n<p data-pid=\"UMOfvDrb\">基于以上情形，并结合目前实际应用情形，可以将VAR引入的初衷和效果总结成以下三个方面：</p>\n<h2>VAR引入的初衷和效果</h2>\n<p data-pid=\"dCy-QwJg\"><b>1.纠错</b></p>\n<p data-pid=\"CRApM8ES\">录像和回放技术在体育各个项目中都存在，被用于辅助裁判是很自然而朴素的逻辑，根本出发点就是再给裁判一次复核、纠错的机会，裁判也是人，是人就会犯错，每个裁判都有想要重新回看一下刚才发生了什么的时刻，每个球员和球迷也都有想要给裁判重现一下刚才罪案现场的冲动。</p>\n<p data-pid=\"dYUWp99w\">这就是VAR引入的最主要最根本的初衷。</p>\n<p data-pid=\"E_GKjm7s\">曾经不少人把“错误和误判也是足球的一部分”作为反对再给裁判一次改正机会的理由，我认为那只是因为之前的技术不具备给裁判提供这样的机会，当技术具备且成熟的时候，这个理由肯定是站不住脚的，当然对于当前技术是否成熟，我们可以打一个问号。</p>\n<p data-pid=\"ZJ2rZNXd\">纠错的效果也很显著，英超引入 VAR后，判罚准确率从82%上升到 94%。2018年世界杯更是达到了99.3%。英超19/20赛季共发起了2400多次VAR，纠正了109次裁判的初始判罚，平均每3.5场比赛就纠正一次。</p>\n<p><img src=\"https://picx.zhimg.com/v2-365fb5d89ceac6e2219c9a4806b90a28_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"426\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"4UHxNQEX\"><b>2.依据和证据</b></p>\n<p data-pid=\"IPb6MpI2\">许多判罚需要确定的是位置的细节，比如越位、禁区线附近的犯规、底线和边线上的救球、铲球动作中脚部的细节、手球时的手臂部细节，等等。这些都无法在远距离和短时间内有准确的分辨，因此裁判需要录像回放来找到准确的判罚依据。</p>\n<p data-pid=\"99Aw3Zq1\">另外，裁判的角色就是处于竞争两端中间的平衡支点，自然而然会有无法让双方心服口服的时候，回放和录像能够为裁判的决定提供证据，让双方闭嘴。</p>\n<p data-pid=\"kCbUCcDs\">最典型的就是对越位的证据显示，从画线到动画重现，目的就是更清晰、更直观的让球员和教练，特别是媒体和球迷闭嘴。</p>\n<p><img src=\"https://picx.zhimg.com/v2-97a51bcbcd57c5467433f9141499a552_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4031\" data-rawheight=\"2264\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"i4eeFbGQ\"><b>3.消除隐秘的角落</b></p>\n<p data-pid=\"P3ar0mfl\">足球历史上有不少经典的罪恶名场面，吐口水和无球挑衅等等。VAR的引入让球员和教练都明白：你在场上的一举一动都在严密监视下。</p>\n<p data-pid=\"KFNafmJr\">一个数据是俄罗斯世界杯是自 1986 年以来最干净的世界杯，总共只出了四张红牌，这被解读为和球员在VAR监视下比较收敛有关。</p>\n<p><img src=\"https://picx.zhimg.com/v2-4373357a0d774cbf80bbe40ad7df560a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"321\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"L5j7ZhlX\">虽然技术经过了长时间的验证，采用规则也加了很多限制，但是结果却很不尽如人意，VAR并没有减少争议，相反好像争议更多了，而且除了裁判本身，好像媒体和球迷很少有人认为当前的现状是可以接受的。</p>\n<p><img src=\"https://picx.zhimg.com/v2-88d14e98b3eba9d9267b2f0e5d2407eb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"366\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h2>主要的问题包括：</h2>\n<p data-pid=\"tNeu4Pb3\"><b>1.错误仍然不可避免</b></p>\n<p data-pid=\"4iKuaswI\">按道理VAR是有充足的时间和充足的证据来做出判罚，但事实是VAR只是呈现了发生了什么，至于如何判罚仍然存在许多模糊空间和争议地带，甚至还时不常发生一些显著的错误、失误。原本没有什么东西是完美的，90%+的准确率已经很好了，但是在引发了更多其它问题的基础上，这点准确率的提升让利弊权衡变得复杂：如果VAR无法完美解决错误，那我们为什么要承受使用它的那么多代价？</p>\n<p><img src=\"https://picx.zhimg.com/v2-1b62cee1d0f10d48ec29bcf89dc0126e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1200\" data-rawheight=\"630\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"hSbpS8nw\"><b>2.凝固的时间，煎熬的等待</b></p>\n<p data-pid=\"r5HD4GG4\">英超统计数据显示，VAR造成的平均延迟现在约为 50 秒，对越位的判罚延迟平均为70秒。卡塔尔世界采用了升级的半自动越位技术，据说可以将越位判罚延迟缩短到25秒。</p>\n<p data-pid=\"9wJ0nIko\">延迟的问题不在于绝对时间的长短，毕竟新的伤停补时策略已经可以充分把这些时间补回来。其根本问题在于对时间的感知，对比赛进程的打断，“仿佛按下了暂停键”，特别是按键的时刻往往是在激情的庆祝之后……</p>\n<p><img src=\"https://pic1.zhimg.com/v2-9b3b3203b30478824912366bd4158363_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"394\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"xBvRxDjR\"><b>3.尴尬的激情，精神折磨</b></p>\n<p data-pid=\"GwkGFHxU\">VAR对进球的审核严重破坏了进球带来的激情，有些球员必须克制庆祝，以避免进球被取消而引发的尴尬。</p>\n<p data-pid=\"bIg6d6lW\">VAR 对现场球迷的折磨是最严重的，电视观众可以观看录像，可以跟随导播镜头观看裁判、球员、教练的各种表情和反应，但如果你在现场，你就像在迪厅突然遭遇停电一样，你不知道发生什么，你旁边的人也不知道，你们刚刚正一起嗨，现在正一起猜。</p>\n<p data-pid=\"TRCZmfGT\">VAR 的影响仍将在很大程度上是负面的。通过剥夺进球庆祝和高风险场上戏剧的原始情感和自发性，VAR 可以说是剥夺了足球的伟大之处。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b729dd5038df6d24af5d53a2fa947b7d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"409\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"eNtgSJEq\"><b>4.越位线上的教条主义</b></p>\n<p data-pid=\"ccXQ4xxb\">VAR是机器，机器按照规则执行，因此不可避免走向教条主义。大多明显的越位不需要VAR介入，而需要VAR介入的越位，最终的结果却常常是一个肩膀、一只耳朵，甚至一根汗毛。</p>\n<p data-pid=\"ArkqCmIW\">于是这就变成了一个笑话，越位规则显然不是为了去追求这个量级的差别，这只是在书面规则意义上的正确判罚，却在足球的话语里、人道层面造成了严重错误。</p>\n<p data-pid=\"sWAUex0g\">裁判、球员、球迷，所有人都被VAR困在了越位规则里。许多人会说那你之一的其实不是VAR，而是规则，没错，但我质疑规则的原因是VAR把规则推到了这个极限，如果没有VAR，这个规则的bug是在裁判的灵活掌握中隐匿掉的。</p>\n<p data-pid=\"yF1QqHPB\">当我们的注意力都聚焦在“如何在球场上画出一条正确的切线”时，这就变成了个笑话。</p>\n<p><img src=\"https://pica.zhimg.com/v2-84439ca2d4e6bd7ef10754d4fec0083c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1200\" data-rawheight=\"675\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"H4iYWiPH\"><b>5.关于角球混战和手球的笑话</b></p>\n<p data-pid=\"NnWM6VUn\">故意手球通常很明显，我们不需要VAR，而VAR出现的时候，手球变得不像是一种犯规，而更像是一种惩罚——对不走运的附加惩罚。</p>\n<p data-pid=\"vUnYUEkr\">没人想用手碰球，很多手球也并不会对当时的攻防产生多大影响，更别说达到“阻止一个进球”的效果，但当禁区里挤满了人，并且互相之间纠缠在一起的时候，每个后卫都可能倒霉。</p>\n<p data-pid=\"pxLYG7Za\">后卫现在防守得把很大一部分注意力放在自己的手上，而不是对方的脚上，如果没人解释的清楚什么是自然张开，那你最好的额办法就是时刻把手背在身后。</p>\n<p data-pid=\"aMS-Iy7G\">同样，这个问题是规则的问题，VAR只是有能力精确的找到手球的瞬间。但是，问题之所以成为问题，正是由于VAR把手球规则推向了一个极限。于是我们不得不一次又一次完善这条规则，来找到一个平衡点。</p>\n<p><img src=\"https://picx.zhimg.com/v2-70106783dad1b7d0a284664b101fdc22_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2400\" data-rawheight=\"1256\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h3>总之，是否引入VAR是关于一个平衡的选择，即你愿意牺牲多少代价来换取百分之几的正确率提升。</h3>\n<h3>改进的可能方案</h3>\n<p data-pid=\"QjWiKLI2\"><b>1.有限挑战模式</b></p>\n<p data-pid=\"7WaBJ-kY\">FIFA给VAR的介入定了进球、点球、红牌等几个场景，在这些场景下，VAR裁判就会强行介入。但事实上，大多数进球没有必要去check，很多时候VAR判罚的点球、取消的进球让进攻双方都很莫名奇妙。而很多时候某一方强烈要求裁判让VAR介入，却招来一张黄牌。</p>\n<p data-pid=\"G5Y1tfW7\">裁判主动介入的出发逻辑是绝对客观的公平，而也许我们去追求“让双方都满意”这个主观的相对公平更合适。网球等其它运动的挑战规则正是这样，当你认为判罚错误的时候你可以申请VAR介入，但是这样的申请次数是有限的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-cf623b92385c0f3a7158f43ed1639724_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2480\" data-rawheight=\"1600\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"M2LHair_\"><b>这种挑战模式的好处有6个方面：</b></p>\n<p data-pid=\"woB_UHZU\">1.VAR介入的次数会被限制在一个可接受的上限值内，比如每场比赛每队各3次机会，那么假设每次的处理时间是一分钟，那最多也不过延时6分钟，更关键的是，这个时间是事先大家可以预期的，而且是球队自己发起的，那即便时间再长，球员、教练和球迷都不会感觉是被裁判打断，而是主动参与的一个局面。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-95912a22d8258379f017f714ef2e82de_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"594\" data-rawheight=\"395\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"3Sx4LHgK\">2.会让双方都更满意，因为这是授予你的权力，你可以自己去衡量你的判断是否可靠，是否使用这个权力，你可能更倾向于把挑战权力留到最关键的问题和时刻上。如果你放弃挑战，那也是你自己的决定，你不会对自己的决定不满，即便事后证明你的决定错误，那也只能怨自己。于是挑战行为会更多的作为教练组战术的一部分，而不是双方对裁判的讨伐。</p>\n<p><img src=\"https://picx.zhimg.com/v2-b37b46deff686228ed975f10f5af2551_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1516\" data-rawheight=\"1024\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"BMlC-r6-\">3.会减少各类犯规后球员对裁判的施压，长期以来由于没有球员和教练的合法反馈机制，但又不能彻底剥夺球员和教练的表达权力，这个尺度一直是由裁判员主观拿捏，有时候裁判自觉理亏或判罚略重，即便很多球员围上来争辩也不再做追加处罚；而有时候只是单个球员飙一句脏话或做个不满的手势，裁判就加送黄牌一张。有了挑战模式后，一方面对裁判来说，有意见请挑战，不挑战却上来纠缠的可以很明确给警告；另一方面对球员和教练来说，如果不选择挑战，那么心中恶气也有所消解，这是个误判，是我主动选择不咎。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-19cdcc3e8dda5997a11d4448b8478c8c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"809\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"9GQFB3WL\">5.避免莫名其妙的点球、红牌等极刑。VAR经常会制造一些莫名其妙、无中生有的点球，攻防双方都没觉得有任何犯规，VAR裁判自作多情，一个点球从天而降，不仅严重改变了比赛形势，让攻方感觉天上掉下个馅儿饼，让守方觉得不可理喻比窦娥还冤。有了挑战模式，对于双方都默认OK的情况，裁判大可以放松一下，不用把自己当作代表公平的神灵，本质上这是把犯规当作“民事纠纷”而不是“刑事案件”。</p>\n<p><img src=\"https://picx.zhimg.com/v2-14d00fb65711cb4458af2db1b5f71dc4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1908\" data-rawheight=\"1146\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"QPLZrwCT\">6.不必限定应用的范畴。红牌、点球和进球前的审查自然很关键，但是某些黄牌、任意球、角球、甚至在终场前的一次界外球也可能在球队看来非常关键，如果挑战权力还没有用尽的话，球队大可以把它用在对对方中后卫的一次黄牌申诉上，或终场前的一次禁区前任意球上。</p>\n<p><img src=\"https://picx.zhimg.com/v2-0391f6acc0a3d38bf71584771e70215d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"680\" data-rawheight=\"460\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"D7tB1KpP\"><b>2.裁判音频和视频画面的现场公开</b></p>\n<p data-pid=\"g32yYYGJ\">主裁判和VAR裁判的对话是保密的，偶尔公开分享片段，这种处理可以理解，有利有弊，弊端就是会加剧球迷、球员、教练对裁判的信任，事实上大多数情况下，裁判之间讨论的过程反而可以让其他人代入到裁判视角，站在中立角度去思考如何判罚，进而体会到问题的复杂性。</p>\n<p data-pid=\"aghNfhnH\">事实上，NFL、NBA都已经实时将沟通音频和视频公开很长时间了，可以有丰富的参考经验来评估是否适合足球，并解决目前存在的一些问题，据我的个人感受，即便你从沟通内容中听不出个所以然，但至少你不是在傻等，偶尔你还能体会到这个问题的复杂性和分歧，最终大多数人会习惯将这个沟通过程作为比赛的一部分，毕竟NFL和NBA的暂停时间要长的多得多。</p>\n<p><img src=\"https://picx.zhimg.com/v2-65e33b5cd48368c9d8f3257aa8f1b03b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"615\" data-rawheight=\"409\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"3Xfw4j_B\"><b>3.去掉静止画面和越位线</b></p>\n<p data-pid=\"Vg6IppLT\">对VAR越位判罚的改进方法，有人提出给越位线设置一个误差范围，这显然行不通，不管范围扩展到多大，范围的边界仍然是一个绝对精确的数值，因此并不能从“精度”陷阱里逃出来。</p>\n<p data-pid=\"UpuQYRWK\"><b>我设想了两处改进：</b></p>\n<p data-pid=\"ji7TzrXa\">一是将现在的静止画面去掉，只保留动态录像，而且不得慢速播放，录像回看仅仅提供反复回看的功能，回看的内容和现场裁判、球员、球迷肉眼看到的感受一样。</p>\n<p data-pid=\"MqdXAR25\">二是去掉越位画线，裁判和VAR裁判组只凭借肉眼去判断，如果肉眼无法分辨，那么按照裁判组对于传球前后的局势理解，和对进攻鼓励的原则等等去做出判罚。</p>\n<p data-pid=\"9QUMAQCk\">两处改进的理念是一致的，就是彻底消灭精度陷阱，让越位回到攻防球员在那一刹那所能够掌握的信息维度上，如果此时此刻裁判反复回看都无法判断是否越位，那么彼时彼刻的攻防球员也不可能判断，那么合理的判罚就是不越位。</p>\n<p><img src=\"https://picx.zhimg.com/v2-c812f38d5958101971e14f72e9258b9a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"624\" data-rawheight=\"351\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"RCWy2p09\"><b>4.限定判罚时间</b></p>\n<p data-pid=\"h37RjEOS\">出于避免掉入“精度”陷阱的考虑，建议VAR限定判罚时间，可以以倒计时方式进行，理论上裁判只需要多看几次录像即可了解发生了什么，如果裁判在一分钟或两分钟内都无法做出判罚，那说明犯规本身就不清晰、不明显或难以界定，那么就应该默认坚持原判不做修改，或设定一个进攻有利原则或其它原则给出通用判罚。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d4e0d459411fb2c0b5e1d2810a615bcd_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2048\" data-rawheight=\"1365\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/question/568216667/answer/2772809995?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\">知乎用户（登录查看详情）</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/568216667/answer/2772809995?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">623 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/570046367?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">卡塔尔世界杯多场比赛上演「毫米级越位」，裁判技术进步如何影响足球运动发展？</a><br><a href=\"http://www.zhihu.com/question/568379077?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">卡塔尔世界杯多场比赛上演毫米级越位，裁判技术进步如何影响足球发展？</a><br>\n","link":"http://www.zhihu.com/question/568216667/answer/2772809995?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"关于VAR的系统讨论（3）VAR如何改进？","date":"2022-11-24 12:05:11","description":"\n<p data-pid=\"Qxv_s72t\">最近密集吐槽VAR，看了很多评论后，我想有必要对VAR技术造成的影响做一个系统性的整理，并且给出一些建设性意见，而不是单纯吐槽。</p>\n<p data-pid=\"suiA9i7_\">第一篇梳理了VAR引入的初衷和目前达到的效果。</p>\n<p data-pid=\"ESiy_lhU\"><a href=\"https://zhuanlan.zhihu.com/p/586312811\" class=\"internal\">豪语：关于VAR的系统讨论（1）引入VAR的初衷和效果</a></p>\n<p data-pid=\"ZIenTsfL\">第二篇探讨了引入VAR的代价和VAR带来的一些问题。</p>\n<p data-pid=\"Z_qOGmtW\"><a href=\"https://zhuanlan.zhihu.com/p/586330043\" class=\"internal\">豪语：关于VAR的系统讨论（2）VAR的代价和问题</a></p>\n<p data-pid=\"_pFJxNG9\">本篇提几个对现有VAR方案改进的可能方向：</p>\n<h3>改进的可能方案</h3>\n<p data-pid=\"QjWiKLI2\"><b>1.有限挑战模式</b></p>\n<p data-pid=\"7WaBJ-kY\">FIFA给VAR的介入定了进球、点球、红牌等几个场景，在这些场景下，VAR裁判就会强行介入。但事实上，大多数进球没有必要去check，很多时候VAR判罚的点球、取消的进球让进攻双方都很莫名奇妙。而很多时候某一方强烈要求裁判让VAR介入，却招来一张黄牌。</p>\n<p data-pid=\"G5Y1tfW7\">裁判主动介入的出发逻辑是绝对客观的公平，而也许我们去追求“让双方都满意”这个主观的相对公平更合适。网球等其它运动的挑战规则正是这样，当你认为判罚错误的时候你可以申请VAR介入，但是这样的申请次数是有限的。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-cf623b92385c0f3a7158f43ed1639724_b.jpg\" data-size=\"normal\" data-rawwidth=\"2480\" data-rawheight=\"1600\" class=\"origin_image zh-lightbox-thumb\" width=\"2480\" data-original=\"https://pic1.zhimg.com/v2-cf623b92385c0f3a7158f43ed1639724_r.jpg\"><figcaption>NFL的红旗挑战</figcaption></figure><p data-pid=\"M2LHair_\"><b>这种挑战模式的好处有6个方面：</b></p>\n<p data-pid=\"woB_UHZU\">1.VAR介入的次数会被限制在一个可接受的上限值内，比如每场比赛每队各3次机会，那么假设每次的处理时间是一分钟，那最多也不过延时6分钟，更关键的是，这个时间是事先大家可以预期的，而且是球队自己发起的，那即便时间再长，球员、教练和球迷都不会感觉是被裁判打断，而是主动参与的一个局面。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-95912a22d8258379f017f714ef2e82de_b.jpg\" data-size=\"normal\" data-rawwidth=\"594\" data-rawheight=\"395\" class=\"origin_image zh-lightbox-thumb\" width=\"594\" data-original=\"https://pic3.zhimg.com/v2-95912a22d8258379f017f714ef2e82de_r.jpg\"><figcaption>网球的挑战限制次数</figcaption></figure><p data-pid=\"3Sx4LHgK\">2.会让双方都更满意，因为这是授予你的权力，你可以自己去衡量你的判断是否可靠，是否使用这个权力，你可能更倾向于把挑战权力留到最关键的问题和时刻上。如果你放弃挑战，那也是你自己的决定，你不会对自己的决定不满，即便事后证明你的决定错误，那也只能怨自己。于是挑战行为会更多的作为教练组战术的一部分，而不是双方对裁判的讨伐。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-b37b46deff686228ed975f10f5af2551_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1516\" data-rawheight=\"1024\" class=\"origin_image zh-lightbox-thumb\" width=\"1516\" data-original=\"https://pic2.zhimg.com/v2-b37b46deff686228ed975f10f5af2551_r.jpg\"></figure><p data-pid=\"BMlC-r6-\">3.会减少各类犯规后球员对裁判的施压，长期以来由于没有球员和教练的合法反馈机制，但又不能彻底剥夺球员和教练的表达权力，这个尺度一直是由裁判员主观拿捏，有时候裁判自觉理亏或判罚略重，即便很多球员围上来争辩也不再做追加处罚；而有时候只是单个球员飙一句脏话或做个不满的手势，裁判就加送黄牌一张。有了挑战模式后，一方面对裁判来说，有意见请挑战，不挑战却上来纠缠的可以很明确给警告；另一方面对球员和教练来说，如果不选择挑战，那么心中恶气也有所消解，这是个误判，是我主动选择不咎。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-19cdcc3e8dda5997a11d4448b8478c8c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"809\" class=\"origin_image zh-lightbox-thumb\" width=\"1440\" data-original=\"https://pic1.zhimg.com/v2-19cdcc3e8dda5997a11d4448b8478c8c_r.jpg\"></figure><p data-pid=\"9GQFB3WL\">5.避免莫名其妙的点球、红牌等极刑。VAR经常会制造一些莫名其妙、无中生有的点球，攻防双方都没觉得有任何犯规，VAR裁判自作多情，一个点球从天而降，不仅严重改变了比赛形势，让攻方感觉天上掉下个馅儿饼，让守方觉得不可理喻比窦娥还冤。有了挑战模式，对于双方都默认OK的情况，裁判大可以放松一下，不用把自己当作代表公平的神灵，本质上这是把犯规当作“民事纠纷”而不是“刑事案件”。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-14d00fb65711cb4458af2db1b5f71dc4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1908\" data-rawheight=\"1146\" class=\"origin_image zh-lightbox-thumb\" width=\"1908\" data-original=\"https://pic1.zhimg.com/v2-14d00fb65711cb4458af2db1b5f71dc4_r.jpg\"></figure><p data-pid=\"QPLZrwCT\">6.不必限定应用的范畴。红牌、点球和进球前的审查自然很关键，但是某些黄牌、任意球、角球、甚至在终场前的一次界外球也可能在球队看来非常关键，如果挑战权力还没有用尽的话，球队大可以把它用在对对方中后卫的一次黄牌申诉上，或终场前的一次禁区前任意球上。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-0391f6acc0a3d38bf71584771e70215d_b.jpg\" data-size=\"normal\" data-rawwidth=\"680\" data-rawheight=\"460\" class=\"origin_image zh-lightbox-thumb\" width=\"680\" data-original=\"https://pic2.zhimg.com/v2-0391f6acc0a3d38bf71584771e70215d_r.jpg\"><figcaption>俄罗斯世界杯上因跳水饱受争议的内马尔，如果对手有两次挑战权力，或许可以两张黄牌将其罚下？</figcaption></figure><p data-pid=\"D7tB1KpP\"><b>2.裁判音频和视频画面的现场公开</b></p>\n<p data-pid=\"g32yYYGJ\">主裁判和VAR裁判的对话是保密的，偶尔公开分享片段，这种处理可以理解，有利有弊，弊端就是会加剧球迷、球员、教练对裁判的信任，事实上大多数情况下，裁判之间讨论的过程反而可以让其他人代入到裁判视角，站在中立角度去思考如何判罚，进而体会到问题的复杂性。</p>\n<p data-pid=\"aghNfhnH\">事实上，NFL、NBA都已经实时将沟通音频和视频公开很长时间了，可以有丰富的参考经验来评估是否适合足球，并解决目前存在的一些问题，据我的个人感受，即便你从沟通内容中听不出个所以然，但至少你不是在傻等，偶尔你还能体会到这个问题的复杂性和分歧，最终大多数人会习惯将这个沟通过程作为比赛的一部分，毕竟NFL和NBA的暂停时间要长的多得多。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-65e33b5cd48368c9d8f3257aa8f1b03b_b.jpg\" data-size=\"normal\" data-rawwidth=\"615\" data-rawheight=\"409\" class=\"origin_image zh-lightbox-thumb\" width=\"615\" data-original=\"https://pic4.zhimg.com/v2-65e33b5cd48368c9d8f3257aa8f1b03b_r.jpg\"><figcaption>你们在密谋啥？</figcaption></figure><p data-pid=\"3Xfw4j_B\"><b>3.去掉静止画面和越位线</b></p>\n<p data-pid=\"Vg6IppLT\">对VAR越位判罚的改进方法，有人提出给越位线设置一个误差范围，这显然行不通，不管范围扩展到多大，范围的边界仍然是一个绝对精确的数值，因此并不能从“精度”陷阱里逃出来。</p>\n<p data-pid=\"UpuQYRWK\"><b>我设想了两处改进：</b></p>\n<p data-pid=\"ji7TzrXa\">一是将现在的静止画面去掉，只保留动态录像，而且不得慢速播放，录像回看仅仅提供反复回看的功能，回看的内容和现场裁判、球员、球迷肉眼看到的感受一样。</p>\n<p data-pid=\"MqdXAR25\">二是去掉越位画线，裁判和VAR裁判组只凭借肉眼去判断，如果肉眼无法分辨，那么按照裁判组对于传球前后的局势理解，和对进攻鼓励的原则等等去做出判罚。</p>\n<p data-pid=\"9QUMAQCk\">两处改进的理念是一致的，就是彻底消灭精度陷阱，让越位回到攻防球员在那一刹那所能够掌握的信息维度上，如果此时此刻裁判反复回看都无法判断是否越位，那么彼时彼刻的攻防球员也不可能判断，那么合理的判罚就是不越位。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-c812f38d5958101971e14f72e9258b9a_b.jpg\" data-size=\"normal\" data-rawwidth=\"624\" data-rawheight=\"351\" class=\"origin_image zh-lightbox-thumb\" width=\"624\" data-original=\"https://pic3.zhimg.com/v2-c812f38d5958101971e14f72e9258b9a_r.jpg\"><figcaption>VAR在分辨细微尺度的方向上越走越远，其实完全走错了方向</figcaption></figure><p data-pid=\"RCWy2p09\"><b>4.限定判罚时间</b></p>\n<p data-pid=\"h37RjEOS\">出于避免掉入“精度”陷阱的考虑，建议VAR限定判罚时间，可以以倒计时方式进行，理论上裁判只需要多看几次录像即可了解发生了什么，如果裁判在一分钟或两分钟内都无法做出判罚，那说明犯规本身就不清晰、不明显或难以界定，那么就应该默认坚持原判不做修改，或设定一个进攻有利原则或其它原则给出通用判罚。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-d4e0d459411fb2c0b5e1d2810a615bcd_b.jpg\" data-size=\"normal\" data-rawwidth=\"2048\" data-rawheight=\"1365\" class=\"origin_image zh-lightbox-thumb\" width=\"2048\" data-original=\"https://pic2.zhimg.com/v2-d4e0d459411fb2c0b5e1d2810a615bcd_r.jpg\"><figcaption>等等，再等等，快好了</figcaption></figure><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://zhuanlan.zhihu.com/p/586336587?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\">知乎用户（登录查看详情）</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/586336587?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"让阅读无缝衔接 —— JS 获取用户阅读进度","date":"2022-11-11 16:40:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>很多博客中最常见的问题就是：文章很长，但是读者很忙。下次阅读的时候，可能要花一些时间才能恢复到先前的阅读位置。</p>\n<p>如果可以设备间，识别二维码或是一个链接就可以让阅读无缝衔接，直接跳转到相应位置，那么阅读体验就会变得更加优秀。</p>\n<p>那么，开始吧！</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%9E%E8%B7%B5\" class=\"headerlink\" title=\"实践\"></a>实践</h2>\n<p>要知道阅读位置，那么就要知道当前页面的坐标。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getScrollPosition = <span class=\"function\">(<span class=\"params\">el = <span class=\"built_in\">window</span></span>) =&gt;</span> ({</span><br><span class=\"line\">    x: el.pageXOffset !== <span class=\"literal\">undefined</span> ? el.pageXOffset : el.scrollLeft,</span><br><span class=\"line\">    y: el.pageYOffset !== <span class=\"literal\">undefined</span> ? el.pageYOffset : el.scrollTop</span><br><span class=\"line\">});</span><br><span class=\"line\"><span class=\"comment\">// getScollPosition().x =&gt; 页面横坐标; getScrollPosition().y =&gt; 页面纵坐标;</span></span><br></pre></td></tr></table></figure><p>大部分情况下，我们只用关注纵坐标。横坐标大概率为 <code>0</code>。</p>\n<p>我们还需要一个页面滚动的事件，用于记录当前坐标，并储存在临时存储中。</p>\n<p>至于为什么是 <code>sessionStorage</code> 而不是 <code>localStorage</code>，则是因为 <code>localStorage</code> 除手动清除外，不会自动过期。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 此处的 750 是「页面元素的最大宽度」</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> wx = <span class=\"built_in\">window</span>.innerWidth &gt;= <span class=\"number\">750</span> ? <span class=\"number\">750</span> : <span class=\"built_in\">window</span>.innerWidth;</span><br><span class=\"line\"><span class=\"keyword\">var</span> wy = <span class=\"built_in\">window</span>.innerHeight;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">windowScroll</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 反复修改 确保页面尺寸不改变</span></span><br><span class=\"line\">    wx = <span class=\"built_in\">window</span>.innerWidth &gt;= <span class=\"number\">750</span> ? <span class=\"number\">750</span> : <span class=\"built_in\">window</span>.innerWidth;</span><br><span class=\"line\">    wy = <span class=\"built_in\">window</span>.innerHeight;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> y = <span class=\"built_in\">Math</span>.round(getScrollPosition().y);</span><br><span class=\"line\">    <span class=\"comment\">// 组合字符串，同时记录页面坐标，页面宽度和高度</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> p = <span class=\"string\">`<span class=\"subst\">${y}</span>:<span class=\"subst\">${wx}</span>:<span class=\"subst\">${wy}</span>`</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 写入到 sessionStorage 中</span></span><br><span class=\"line\">    sessionStorage.setItem(<span class=\"string\">\"read_y\"</span>, p);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"built_in\">window</span>.onscroll = windowScroll;</span><br></pre></td></tr></table></figure><p>你可能发现了，此处的变量 <code>p</code>，并不仅仅是「页面纵坐标」，而是「页面高度」与「纵坐标」的组合字符串。</p>\n<p>事实上，如果单纯是纵坐标判断位置，那么在不同高度，不同宽度的设备上，就会出现错位的情况。而同时记录三个信息，就可以还原真实坐标。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// URL 中是否包含传递的坐标信息</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (location.hash.split(<span class=\"string\">\"#read=\"</span>).length &gt; <span class=\"number\">1</span>) {</span><br><span class=\"line\">    <span class=\"comment\">// 分离字符串</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> read_y = location.hash.split(<span class=\"string\">\"#read=\"</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\">    read_y = read_y.split(<span class=\"string\">\":\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 组合乘积，顺滑移动至坐标</span></span><br><span class=\"line\">    <span class=\"built_in\">window</span>.scrollTo({<span class=\"attr\">top</span>: <span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Number</span>(read_y[<span class=\"number\">0</span>]) * <span class=\"built_in\">Number</span>(read_y[<span class=\"number\">1</span>] * <span class=\"built_in\">Number</span>(read_y[<span class=\"number\">2</span>] / wx / wy))), <span class=\"attr\">behavior</span>: <span class=\"string\">\"smooth\"</span>});</span><br><span class=\"line\">} <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    <span class=\"comment\">// 从 sessionStorage 中获取</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> read_y = sessionStorage.getItem(<span class=\"string\">\"read_y\"</span>) || <span class=\"string\">\"0:0:0\"</span>;</span><br><span class=\"line\">    read_y = read_y.split(<span class=\"string\">\":\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.scrollTo({<span class=\"attr\">top</span>: <span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Number</span>(read_y[<span class=\"number\">0</span>]) * <span class=\"built_in\">Number</span>(read_y[<span class=\"number\">1</span>] * <span class=\"built_in\">Number</span>(read_y[<span class=\"number\">2</span>] / wx / wy))), <span class=\"attr\">behavior</span>: <span class=\"string\">\"smooth\"</span>});</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>到现在，我们已经完成了 URL 的解析和基本生成。</p>\n<p>那么，URL 即为:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">`<span class=\"subst\">${location.protocol}</span>//<span class=\"subst\">${location.hostname}</span><span class=\"subst\">${location.port ? <span class=\"string\">\":\"</span>+location.port:location.port}</span><span class=\"subst\">${location.pathname}</span>#read=<span class=\"subst\">${sessionStorage.getItem(<span class=\"string\">\"read_y\"</span>)}</span>`</span>;</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%90%8E\" class=\"headerlink\" title=\"最后\"></a>最后</h2>\n<p>搭配生成二维码等插件效果更佳。</p>\n<blockquote><p>Miracle 主题将在下个版本中更新该功能。</p></blockquote>\n","link":"https://blog.yfun.top/posts/2022/js-get-users-reading-progress/"},{"title":"React 为什么重新渲染","date":"2022-09-06 08:29:00","description":"\n<p>更新（重新渲染）是 React 的重要特性 —— 当用户与应用交互的时候，React 需要重新渲染、更新 UI，以响应用户的输入。但是，React 为什么会重新渲染呢？如果不知道 React 为什么会重新渲染，我们如何才能避免额外的重新渲染呢？</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/186432/20/28325/37613/631725bbEf2ff226e/66b99021df66578b.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/react-re-renders-101/\">https://blog.skk.moe/post/react-re-renders-101/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/react-re-renders-101/"},{"title":"为什么你不应该在 React 中直接使用 useEffect 从 API 获取数据","date":"2022-08-19 08:53:00","description":"\n<p>React 是一个由 Facebook 开源的、可以在任意平台上构建 UI 的 JavaScript 库。在 React 中，一个常见的 Pattern 是使用 <code>useEffect</code> 搭配 <code>useState</code> 发送请求、将状态从 API（React 外部）同步到 React 内部、用于渲染 UI，这篇文章恰恰在向你介绍为什么你不应该直接这么做。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/180676/37/27394/27265/62ff57f2E600b3725/cff75c5fca39bbcc.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/\">https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/"},{"title":"NPM 自动更新版本号","date":"2022-08-04 05:00:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>ChenYFan 大佬的文章：<a href=\"https://blog.cyfan.top/p/d3c51290.html\">SpeedUp!使用黑科技为你的网站提速</a> 有提到过将 Hexo 博客的全部静态文件上传至 NPM 达到加速效果。</p>\n<p>但是 NPM 版本号不能重复，而且为了精准命中缓存和防止边缘 <code>@latest</code> 缓存过长，就必须指定版本号。</p>\n<p>本人在 <a href=\"https://blog.yfun.top/posts/2876015612/\">我的图床解决方案</a> 一文中使用的方法是 <code>npm version patch</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804133426.png\"></p>\n<p>但这个方法也有一些弊端，比如 <code>patch</code> 只会更新 <code>z</code> 位数的版本号，而且并不会上传至仓库，很可能会出现版本号冲突导致上传失败。这就是为什么最后还需要重新推送 Git 提交。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E8%AF%95%E8%AF%95%E7%9C%8B\" class=\"headerlink\" title=\"试试看\"></a>试试看</h2>\n<p>NPM 版本号遵循 <code>semver</code> 规范，格式为 <code>major.minor.patch</code>。</p>\n<p>为了在获取最新版本号的时候不发生混乱，我选择先获取最新的版本号。</p>\n<blockquote><p>记得把 <code>cky-blog-static</code> 改成自己的项目名。</p></blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>获取到最新版本号后，就可以对版本号进行分析。</p>\n<p>以 <code>1.4.7-b541af2ea284a39da0bbf63b88fdb65c</code> 为例，先按 <code>major.minor.patch</code> 分离。当然，也需要考虑版本号后还有 <code>build metadata</code> 的情况。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\"><span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br></pre></td></tr></table></figure><p><del>为了版本号好看些</del>，可以通过判断实现满十进一。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位小于 9，直接 +1</span></span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">} <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位大于等于 9，y 位小于 9，y+1, z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">} <span class=\"keyword\">else</span> {</span><br><span class=\"line\"><span class=\"comment\">// z 大于等于 9，y 大于等于 9，x+1,y=0,z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>最后，重新拼接版本号。如果担心服务器缓存版本号导致冲突，还可以加上一些随机字符串。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br></pre></td></tr></table></figure><p>将最新的版本号信息重新写入 <code>package.json</code> 文件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">packageJson.version = newVersion;</span><br><span class=\"line\"><span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p><del>直接 CV 代码！</del></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 更新 package.json 版本号</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fetch = <span class=\"built_in\">require</span>(<span class=\"string\">\"node-fetch\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> md5 = <span class=\"built_in\">require</span>(<span class=\"string\">\"js-md5\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> update = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">    verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(newVersion);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">    packageJson.version = newVersion;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">    fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Complete!!\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">update();</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%90%8E\" class=\"headerlink\" title=\"最后\"></a>最后</h2>\n<p>如果是 Hexo 文件部署，就可以直接把文件直接丢在项目根目录，Action 集成部署加上：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">node update.js</span><br></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804135818.png\"></p>\n<p><del>Blog 半年没更新，除除草 --(....</del></p>\n","link":"https://blog.yfun.top/posts/2022/auto-update-npm-version/"},{"title":"我有特别的 DNS 配置和使用技巧","date":"2022-07-28 15:31:00","description":"\n<p>众所周知，DNS 的作用与电话簿类似，将人类可读的域名映射到机器可读 IP 地址、使人更方便地访问互联网。DNS 是非常重要的互联网基础设施，对于改善上网冲浪的体验中的重要程度不容小觑。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/96381/31/31172/23930/62e2ab5bE554d388b/37027f4a03351b9e.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/i-have-my-unique-dns-setup/\">https://blog.skk.moe/post/i-have-my-unique-dns-setup/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/i-have-my-unique-dns-setup/"},{"title":"优化博客的累计布局偏移（CLS）问题","date":"2022-06-07 17:24:00","description":"\n<p>距离上一篇文章发布已有四个月了，是时候写几篇文章给博客除草了。上一次我介绍了我如何迁移、重构了我的博客的架构，这次我想来谈谈我在重构中优化和打磨访客体验时解决的一个问题。我的博客优化之旅 图片 lazyload 的学问和在 Hexo 上的最佳实践 我的博客有多快？ 天下武功，唯快不破 —— 我是这样优化博客的 ...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/206311/26/14625/38940/629f7f81Eb11312de/b1e67f07b1cc9bc7.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/fix-blog-cls/\">https://blog.skk.moe/post/fix-blog-cls/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/fix-blog-cls/"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\r\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\r\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\r\n    return new Date(date.toLocaleString('en-US', { timeZone }))\r\n}\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\r\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\r\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\r\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: '2-digit',\r\n        hour12: false,\r\n        timeZone\r\n    })\r\n    return {\r\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\r\n        convert (date) {\r\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\r\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\r\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\r\n        }\r\n    }\r\n}\r\n\r\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\r\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\r\n    return converter.convert(new Date(secDate), tzName) - secDate\r\n}\r\n\r\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\r\ncmn-Hans-SG = 中文普通话-简体-新加坡\r\ncmn-Hant-TW = 中文普通话-繁体-台湾\r\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\r\ncmn = 中文普通话\r\n\r\nzh-Hans = 中文-简体\r\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\r\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\r\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\r\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\r\n}\r\n\r\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long'\r\n}\r\nconst now = new Date()\r\n\r\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\r\n\r\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\r\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\r\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\r\n\r\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\r\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\r\n\r\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\r\n\r\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\r\n\r\nzhCNFormatter.format(now) // 2021年10月13日星期三\r\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\r\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\r\n\r\njaFormatter.format(now) // 2021年10月13日水曜日\r\njaAltFormatter.format(now) // 令和3年10月13日水曜日\r\n\r\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\r\n// {locale: 'zh-CN', calendar: 'gregory', …}\r\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\r\n     // 基于一个固定日期计算，这里选择 1970.1.1\r\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\r\n    const base = new Date(1970, 0, 1).getTime()\r\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\r\n    return Array.from({ length: 7 }, (_, day) =&gt; (\r\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\r\n    ))\r\n}\r\n\r\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\r\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\r\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    second: 'numeric',\r\n}).formatToParts(new Date())\r\n// [\r\n//     { type: 'year', value: '2021' },\r\n//     { type: 'literal', value: '年' },\r\n//     { type: 'month', value: '10' },\r\n//     { type: 'literal', value: '月' },\r\n//     { type: 'day', value: '13' },\r\n//     { type: 'literal', value: '日' },\r\n//     { type: 'weekday', value: '星期三' },\r\n//     { type: 'literal', value: ' ' },\r\n//     { type: 'dayPeriod', value: '上午' },\r\n//     { type: 'hour', value: '1' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'minute', value: '00' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'second', value: '00' }\r\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\r\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\r\n}\r\n\r\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\r\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\r\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\r\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\r\n  timeZone: 'America/Los_Angeles',\r\n  year: 1995,\r\n  month: 12,\r\n  day: 7,\r\n  hour: 3,\r\n  minute: 24,\r\n  second: 30,\r\n  millisecond: 0,\r\n  microsecond: 3,\r\n  nanosecond: 500,\r\n  calendar: 'iso8601'\r\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"\n<p>WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将其表述为 \"An API for accessing Public Key Credentials\"，即“一个用于访问公钥凭证的 API”。WebAuthn 很强大，强大到被认为是 Web 身份认证的未来（当然，也很复杂）。你有想过通过指纹或者面部识别来登录网站吗？WebAuthn 就能在保证安全和隐私的情况下让这样的想法成为现实。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\" alt=\"通过 WebAuthn 调起 Windows Hello 登录网站\" width=\"1912\" height=\"966\" class=\"aligncenter size-full wp-image-2215\"></a>\n<p>你可以在<a href=\"https://webauthn.io/\" rel=\"noopener\">这个网站</a>自行体验 WebAuthn。或者，如果你有一个使用 WordPress 的站点，可以尝试一下 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WP-WebAuthn</a> 这款插件，它可以为你的站点启用 WebAuthn 登录。这是我为了写这篇文章而练手开发的插件，本文中的部分示例代码也来自这款插件。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"wp-webauthn\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/wp-webauthn\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>WebAuthn Level 1 标准已在 2019 年 3 月成为 W3C 推荐标准，而 Level 2 标准目前也已进入编辑草案阶段，但互联网上有关它的中文资料却仍然很少，国内也鲜有网站支持这一新标准。于是，在抱着各种英文资料和标准啃了几天以后，我折腾出了这篇文章。</p>\n<p>在这篇文章里，我将会从最基本的概念开始，逐渐深入 WebAuthn，直到解码公钥等深层细节。这可能是你能找到的有关 WebAuthn 最详细最基础的中文文章，也很可能是最长的。在开始之前，<strong>我强烈建议你打开菜单中的文章目录浏览一遍，以对这篇文章涉及的内容有所了解。</strong>如果你只是想了解如何简单地在你的项目中添加对 WebAuthn 的支持，那么“<a href=\"https://flyhigher.top/#webauthn-overview\">浅谈 WebAuthn</a>”部分就是你要找的；如果你想了解更多关于 WebAuthn 的底层细节，那么你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分。</p>\n<p>由于在本文写作时 WebAuthn Level 2 规范尚未定稿，<strong>这篇文章我们将只专注于 Level 1 规范。</strong></p>\n<p>这篇文章最后更新于 2020.9 ，在你读到这篇文章时，部分事实可能已经发生改变，请注意判断。</p>\n<p><strong>更新日志：</strong></p>\n<ul>\n<li>2021.1.16 添加 Chrome 开发工具信息</li>\n<li>2020.9.17 更新 iOS/iPad OS 兼容性信息</li>\n<li>2020.5.20 添加部分无用户名认证的平台兼容性内容</li>\n<li>2020.5.15 添加部分 <code>extensions</code> 相关内容与链接；添加全局凭证 ID 唯一内容；添加凭证 ID 查找相关内容；添加“从 U2F 认证迁移”一节</li>\n<li>2020.4.13 更新与修正 <code>userVerification</code> 相关内容；添加部分 Firefox 相关内容</li>\n<li>2020.3.23 文章发布</li>\n</ul>\n<p>那么让我们开始吧。<span></span></p>\n<h1>浅谈 WebAuthn</h1>\n<p>在这个部分里，我们将会从基础概念开始，了解有关 WebAuthn 和密码学的一些基础知识，并最终使用第三方库实现基础的 WebAuthn 认证。如果你已经对这些内容有所了解了，可以跳到“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”继续阅读。</p>\n<h2>为什么使用 WebAuthn</h2>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\" alt=\"钓鱼邮件\" width=\"709\" height=\"693\" class=\"aligncenter size-full wp-image-2162\"></a>\n<p>相信你一定收到过类似的邮件吧？只要你点进那个最显眼的链接，你就会进入一个设置好的圈套——钓鱼网站。如果你一时糊涂在这类网站上填写了你的账号和密码，bingo，你的账号就不再是你的账号了。</p>\n<p>不过，就算你警惕心再强，也无法避免密码泄露事件。Twitter, Facebook 等都爆出过明文密码泄露事件，证明再大的公司或组织也无法避免密码泄露问题。雪上加霜的是，很大一部分用户都非常喜欢使用重复密码，这就导致一次密码泄露会牵连很多网站，用户的账户安全性完全无法得到保证。</p>\n<p>那么，有什么办法解决这些问题吗？<strong>彻底解决的方法只有一个，那就是抛弃密码。</strong>可是没有密码还怎么验证用户身份呢？这就是 WebAuthn 的用武之地了。</p>\n<p><del>没有密码的好时代，来临力！</del></p>\n<h2>什么是 WebAuthn</h2>\n<p>那么到底什么是 WebAuthn 呢？如开头所说，WebAuthn 是“一个用于访问公钥凭证的 API”，网站可以通过这个 API 进行一些高安全性的身份验证。WebAuthn 一个最常见的应用就是用于网站登录时的 2FA（双重因素验证）甚至是无密码登录。通过网页调用 WebAuthn，在不同平台下，<strong>我们可以实现通过 USB Key、指纹、面部甚至虹膜扫描来认证身份，同时确保安全和隐私。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\" alt=\"WebAuthn 可使用的各种身份认证方式\" width=\"1294\" height=\"566\" class=\"aligncenter size-full wp-image-2213\"></a>\n<p>WebAuthn 标准是 FIDO2 标准的一部分，而 FIDO2 则是由 FIDO 联盟和 W3C 共同推出的 U2F（现称作 FIDO1）的后继标准，旨在增强网络认证的安全性。</p>\n<blockquote><p>你可能了解过 U2F，那么 U2F 和 FIDO2 的区别在哪里呢？从名字上可以看出，U2F，即“通用第二因素协议”，是专注于作为密码后的第二道屏障的，而 FIDO2 增加了单因素认证功能，这意味着使用 FIDO2 可以完全替代密码，真正实现无密码登录。</p></blockquote>\n<p>FIDO2 标准主要包括四个部分，其一是用于网站和访客设备交互的 WebAuthn，而 Client to Authenticator Protocol 2（CTAP2，客户端-认证器协议）作为 WebAuthn 的补充，则是用于访客的设备和认证器交互的协议。标准的其他两个部分则是 U2F 和 UAF 规范。在这篇文章中，我们只关心 WebAuthn，不会涉及 CTAP, U2F 和 UAF 的相关知识。如果你对这段话中的一些概念不了解，不要紧张，接下来我们就来谈谈 WebAuthn 中一些常用的术语和概念。</p>\n<blockquote><p>WebAuthn 只能在安全上下文中使用，也就是说，页面需要使用 HTTPS 协议或是处于 <code>localhost</code> 中。</p></blockquote>\n<h2>常用术语和概念</h2>\n<p>WebAuthn 中有许多不常碰到的术语，不过我只会在这里介绍一些常用的术语和概念——如果你只是希望做出一个简单的实现，那么了解这一段中的一些概念就足够了。同时，由于我实在没能找到一部分术语的通用翻译，有一些术语我按着自己的理解尽可能地翻译了，有任何问题请告诉我。</p>\n<p>在一个完整的 WebAuthn 认证流程中，通常有这么几个角色：</p>\n<ul>\n<li>Relying Party 依赖方 (RP) ：指服务提供方，即网站</li>\n<li>User 用户：正准备登录的你</li>\n<li>Authenticator 认证器：通常指 USB Key 或是设备内置的指纹扫描器、虹膜扫描器、面部识别装置等，正是它们在使用流程中代替了密码甚至是用户名</li>\n<li>User Agent 用户代理：通常指浏览器或系统，负责与认证器交互</li>\n</ul>\n<p>认证过程通常分为两种：</p>\n<ul>\n<li>Registration Ceremony 注册仪式：用户向账户上添加认证器</li>\n<li>Authentication Ceremony 验证仪式：用户通过已注册的认证器验证身份</li>\n</ul>\n<p>同时，认证过程中还会产生这些内容：</p>\n<ul>\n<li>Challenge 挑战：通常是一串随机字符串</li>\n<li>Public Key Credential 公钥凭证：由认证器产生的凭证，在技术上代替了密码</li>\n<li>Attestation 证明：注册时认证器产生的验证数据</li>\n<li>Assertion 断言：验证时认证器产生的验证数据</li>\n</ul>\n<blockquote><p><strong>请注意区分证明 (Attestation) 和断言 (Assertion)</strong>，特别是在这两个单词有些相似的情况下。在 WebAuthn 中，它们是不同过程中的类似概念，但并不相同。</p></blockquote>\n<p>如果你对于这些内容不是很理解，没有关系，我们会在“<a href=\"https://flyhigher.top/#how-to-webauthn\">使用流程</a>”一节中将这些概念放到实际情况中解释，你只要先区分这些概念即可。</p>\n<h2>安全性的基础</h2>\n<p>WebAuthn 为什么安全？和 HTTPS 一样，WebAuthn 使用非对称加密的思路来保证安全性，但侧重点又有所不同。要理解 WebAuthn 的认证流程，我们必须对非对称加密有所了解。如果你对非对称加密比较熟悉了，就直接跳到下一段吧。</p>\n<p>WebAuthn 的核心在于“认证”，即保证产生了凭证的认证器是用户的认证器，而不是第三方在伪造凭证。但为什么要使用非对称加密呢？我们可以先来看看对称加密。</p>\n<p>让我们假设小明和小红相互写信，见不到对方。这天小红突然想，给自己写信的人是不是真的小明呢？于是小红要求对方向小红证明自己是小明。怎么证明呢？他们商量出来这么一套方案：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明和小红商量一个统一的密码和密钥</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明用提前和小红商量好的密码和密钥加密文本后发回给小红</li>\n<li>小红使用相同的密码和密钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和密钥</li>\n</ol>\n<blockquote><p>在密码学中，我们通常把“加密算法”称为密码 (code)，和通常登录时用的密码 (password) 并非同一个概念。</p></blockquote>\n<p>在这种情况下，<strong>只要密钥不泄露</strong>，即拥有正确密钥的只有小明和小红，那么小红就能确定对方一定是小明。但这样的问题也很明显，如果小明和小红不能见面，那么他们就必须先以明文交换密码——<strong>在这个过程中一旦有人窃取到了密码，这个认证就无效了。</strong></p>\n<p>这时我们就需要使用<strong>非对称加密</strong>来拯救破碎的信任了。非对称加密的基础是一对密钥，也就是公钥和私钥，它们是互相关联但（几乎）无法互相推导的。在非对称加密的过程中，选择相同的密码后，使用私钥加密明文得到的密文只能由对应的公钥解密，无法使用私钥解密，同时这个过程反过来也是成立的。</p>\n<blockquote><p>本文的核心并不是非对称加密算法，因此不会详述非对称加密在数学上的证明，若有兴趣可以自行了解。</p></blockquote>\n<p>这就完美解决密钥泄露的问题了。让我们回过头来看之前的例子。现在小明和小红决定使用非对称加密来证明身份，过程如下：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明提前生成一对公私钥，将公钥发送给小红，私钥自己保管，同时商量好统一的密码</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明使用商量好的密码和自己的私钥加密文本，发送给小红</li>\n<li>小红使用相同的密码和小明的公钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和私钥</li>\n</ol>\n<p>在这种情况下，<strong>只要私钥不泄露</strong>，那么小红解密得到的文本和之前发送的一致，那么就可以证明收到的密文一定是由小明加密后发送过来的。而在整个过程中，私钥都没有离开过小明，更没有经过传输，也就几乎没有泄露的可能了。这时，小红终于可以确定对面和她通信的人的确是小明了。</p>\n<p>题外话：HTTPS 虽然也应用了非对称加密，但 HTTPS 更侧重于“加密”而非“认证”，因此思路上会有些许差异。要了解关于 HTTPS 和非对称加密的更多信息，你可以阅读我之前写的这篇文章：</p>\n<p></p>\n<div class=\"mdx-post-cot\" data-mdxposturl=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdx-post-wait-out-c2\"><div class=\"mdx-post-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<span></span>\n<h2>使用流程</h2>\n<p>了解了非对称加密，我们就可以来看看 WebAuthn 的认证流程了。</p>\n<p>和普通的密码一样，<strong>使用 WebAuthn 分为两个部分，注册和验证。</strong>注册仪式会在依赖方中将认证器的一些信息和用户建立关联；而验证仪式则是验证这些信息以登确保是用户本人在登录。根据上一节的思路，我们可以知道，注册仪式就是认证器生成一对公私钥，然后将公钥交给依赖方；而验证仪式是依赖方发送给认证器一段文本，要求认证器用自己的私钥加密后发回以验证。</p>\n<p>在实际情况中，WebAuthn 是基于<strong>挑战-应答模型</strong>工作的。要更好地理解，我们直接来看具体流程。先来看看注册的流程。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\" alt=\"WebAuthn 注册流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2224\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的注册请求</li>\n<li>依赖方向浏览器发送挑战、依赖方信息和用户信息</li>\n<li>浏览器向认证器发送挑战、依赖方信息、用户信息和客户端信息以请求创建公钥凭证</li>\n<li>认证器请求用户动作，随后创建一对公私钥，并使用私钥签名挑战（即证明），和公钥一起交给浏览器</li>\n<li>浏览器将签名后的挑战和公钥发送给依赖方</li>\n<li>依赖方用公钥验证挑战是否与发送的一致，如果成功则将公钥与用户绑定，注册完成</li>\n</ol>\n<p>我也做了一个交互式的 Demo，你可以对照流程来更好地理解。</p>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\">开始注册</button> <span></span></p>\n<div></div>\n<blockquote><p>注意，这个 Demo 和下方的 Demo 都只是一个本地模拟的简单示例，没有任何数据会被上传，当然也不会对数据进行验证。</p></blockquote>\n<p>而之后的验证流程如下：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\" alt=\"WebAuthn 验证流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2226\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的验证请求</li>\n<li>依赖方向浏览器发送挑战</li>\n<li>浏览器向认证器发送挑战、依赖方信息和客户端信息以请求获取公钥凭证</li>\n<li>认证器请求用户动作，随后通过依赖方信息找到对应私钥，并使用私钥签名挑战（即断言），交给浏览器</li>\n<li>浏览器将签名后的挑战发送给依赖方</li>\n<li>依赖方用之前存储的公钥验证挑战是否与发送的一致，一致则验证成功</li>\n</ol>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\" disabled>开始验证</button> <span>在上方注册后才能验证</span></p>\n<div></div>\n<p>可以看到，WebAuthn 不仅在理论上是安全的，同时<strong>在整个过程中并没有隐私数据被传输</strong>——用户信息实际上只包含用户名和用户 ID。因此我们完全可以说 WebAuthn 是安全且私密的。</p>\n<blockquote><p>为了避免用户在不同依赖方之间被追踪，认证器通常会为每个依赖方和用户的组合都创建一对公私钥。不过，由于认证器的存储空间有限，认证器通常不会存储每一个私钥，而是会通过各类信息和烧录在认证器内的主密钥“算”出对应的私钥以实现无限对公私钥。具体算法根据不同厂商会有所不同。对于 Yubikey，你可以在<a href=\"https://developers.yubico.com/U2F/Protocol_details/Key_generation.html\">这里</a>了解更多。</p></blockquote>\n<blockquote><p>如果依赖方需要，用户同意后，发送给依赖方的公钥凭证中可以包含用于辨认认证器型号的信息，不过这对隐私的影响微乎其微。</p></blockquote>\n<h2>浏览器接口</h2>\n<p>要使用 WebAuthn，我们必须要依靠浏览器作为媒介和验证器进行交互，而这就需要浏览器对于 WebAuthn 的支持了。绝大多数新版本的现代浏览器都为 WebAuthn 提供了统一的接口，而在这一段中我们会了解如何使用相关的接口。但是在开始之前，我们可以先来看看浏览器的支持程度（2020.9）。</p>\n<div class=\"mdui-table-fluid\"><table class=\"mdui-table\">\n<thead><tr>\n<th>浏览器</th>\n<th>支持情况</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>桌面端 Chrome</td>\n<td>67+</td>\n</tr>\n<tr>\n<td>移动端 Chrome</td>\n<td>67+<sup>[1]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Firefox</td>\n<td>60+</td>\n</tr>\n<tr>\n<td>移动端 Firefox</td>\n<td>不支持<sup>[2]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Edge</td>\n<td>18+</td>\n</tr>\n<tr>\n<td>移动端 Edge</td>\n<td>不支持<sup>[3]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Safari</td>\n<td>13+</td>\n</tr>\n<tr>\n<td>移动端 Safari</td>\n<td>13.3+<sup>[4]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Opera</td>\n<td>54+</td>\n</tr>\n<tr>\n<td>移动端 Opera</td>\n<td>不支持</td>\n</tr>\n</tbody>\n</table></div>\n<p><sup>[1]</sup> 受平台限制，Chrome 在 iOS 平台上不支持 WebAuthn，在 Android 平台上支持大部分 WebAuthn 功能，但仍不支持部分特性（如 <code>userVerification</code>）。<br><sup>[2]</sup> 移动端 Firefox 80 以下的版本支持 WebAuthn 但似乎会忽略 <code>authenticatorAttachment</code> 等一部分参数，同时移动端 Firefox Beta 80 以下的版本支持 WebAuthn 但无法成功调用。自 80 版本起移动端 Firefox 暂时取消了对 WebAuthn 的支持（可能是 Bug）。<br><sup>[3]</sup> 移动端 Edge 似乎支持 WebAuthn 但无法成功调用。<br><sup>[4]</sup> Safari iOS/iPad OS 13 仅支持外部认证器，无法调用 Touch ID 或 Face ID；自 iOS/iPad OS 14 起 Safari 已支持全功能 WebAuthn，可以调用 Touch ID/Face ID</p>\n<p>当然，一众国产浏览器，包括 Samsung Browser 和 Yandex Browser，目前都不支持 WebAuthn。此外，由于 WebAuthn 涉及外部验证器和 TPM 可信平台模块等，用户的操作系统也会对 WebAuthn 的可用性造成影响。以下是一些需要注意的信息：</p>\n<ul>\n<li>Windows 10 1903 以下版本仅 Edge 能提供完整支持，其他浏览器只能使用 USB Key 等外部认证器；1903+ 中所有浏览器都可以通过 Windows Hello 带来完整的 WebAuthn 支持</li>\n<li>Android 需要安装并开启 Google 服务</li>\n<li>iOS/iPad OS 13.3 以下的版本不支持 WebAuthn，iOS/iPad OS 14 以下的版本支持有限（参考上文），iOS/iPad OS 14 开始 Safari 已支持全功能 WebAuthn（功能完整度甚至超过了 Android）</li>\n</ul>\n<p>可以看出，WebAuthn 的发展之路仍然很漫长，但好在桌面端对它的支持已经比较完善了，在一些情况下我们完全有理由使用它。</p>\n<hr>\n<p>来看看浏览器提供了怎么样的接口吧。要使用 WebAuthn，我们可以使用 <code>navigator.credentials.create()</code> 请求认证器生成公钥凭证和 <code>navigator.credentials.get()</code> 请求获取公钥凭证。</p>\n<blockquote><p>你或许已经对 Credential Management API 有所了解了。通过这些 API，我们还可以实现一些有趣的特性，不过这值得另开一篇文章来讲了。</p></blockquote>\n<p>对于一个基础的实现，<code>navigator.credentials.create()</code> 需要传入的参数如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        challenge,\r\n        rp: {\r\n            id,\r\n            name\r\n        },\r\n        user: {\r\n            id,\r\n            name,\r\n            displayName\r\n        },\r\n        pubKeyCredParams: [\r\n            {\r\n                type: \"public-key\",\r\n                alg\r\n            }\r\n        ],\r\n        authenticatorSelection: {\r\n            authenticatorAttachment,\r\n            userVerification\r\n        },\r\n        excludeCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>在 <code>navigator.credentials.create()</code> 方法中，我们必须传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值。这指明了我们需要创建公钥凭证，而非普通的密码凭证。然后，在 <code>publicKey</code> 对象中设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rp: Object</code>：依赖方信息，其中有一项为必须：\n<ul>\n<li>\n<code>rp.id: String</code>：（可选）依赖方 ID，必须为当前域名或为当前域名的子集的域名（不是子域名）。如域名为 <code>test.123.example.com</code>，则依赖方 ID 可以是 <code>test.123.example.com</code>, <code>123.example.com</code> 或 <code>example.com</code>。不指定则默认使用当前域名</li>\n<li>\n<code>rp.name: String</code>：依赖方名称，用于方便用户辨认</li>\n</ul>\n</li>\n<li>\n<code>user: Object</code>：用户信息，其中有三项为必须：\n<ul>\n<li>\n<code>user.id: Uint8Array</code>：转换为 <code>Uint8Array</code> 的字符串。<strong>出于安全考量，这应尽可能不与任何用户信息相关联，如不要包含用户名、用户邮箱等</strong>\n</li>\n<li>\n<code>user.name: String</code>：登录用户名</li>\n<li>\n<code>user.dispalyName: String</code>：用于显示的用户名称，显示与否的具体行为取决于浏览器</li>\n</ul>\n</li>\n<li>\n<code>pubKeyCredParams: Array</code>：一个算法列表，指明依赖方接受哪些签名算法。列表的每一项都是一个对象，拥有两个属性：\n<ul>\n<li>\n<code>pubKeyCredParams[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>pubKeyCredParams[].alg: Number</code>：一个负整数，用于标明算法。具体算法对应的数字可以在 <a href=\"https://www.iana.org/assignments/cose/cose.xhtml#algorithms\">COSE</a> 找到</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection: Object</code>：（可选）用于过滤正确的认证器，这里介绍常用的一个参数：\n<ul>\n<li>\n<code>authenticatorSelection.authenticatorAttachment: String</code>：（可选）指定要求的认证器类型。如果没有满足要求的认证器，认证可能会失败。该参数可以为 <code>null</code>（表示接受所有类型的认证器）或是以下两个值之一：\n<ul>\n<li>\n<code>platform</code>：表示仅接受平台内置的、无法移除的认证器，如手机的指纹识别设备</li>\n<li>\n<code>cross-platform</code>：表示仅接受外部认证器，如 USB Key</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection.userVerification: String</code>：（可选）指定认证器是否需要验证“用户为本人 (User Verified, UV)”，否则只须“用户在场 (User Present, UP)”。具体验证过程取决于认证器（不同认证器的认证方法不同，也有认证器不支持用户验证），而对验证结果的处理情况则取决于依赖方。该参数可以为以下三个值之一：\n<ul>\n<li>\n<code>required</code>：依赖方要求用户验证</li>\n<li>\n<code>preferred</code>：（默认）依赖方希望有用户验证，但也接受用户在场的结果</li>\n<li>\n<code>discouraged</code>：依赖方不关心用户验证。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>excludeCredentials: Array</code>：（可选）用于标识要排除的凭证，可以避免同一个用户多次注册同一个认证器。如果用户试图注册相同的认证器，用户代理会抛出 <code>InvalidStateError</code> 错误。数组中的每一项都是一个公钥凭证对象，包含以下属性：\n<ul>\n<li>\n<code>excludeCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>excludeCredentials[].id: Uint8Array</code>：要排除的凭证 ID</li>\n<li>\n<code>excludeCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，超时后将强制终止 <code>create()</code> 并抛出错误。若不设置，将使用用户代理的默认值；若太大或太小，则使用最接近的用户代理默认值范围中的值。推荐值为 5000-120000</li>\n</ul>\n<blockquote><p>对于 <code>pubKeyCredParams</code>，通常我们只需添加 ES256 (alg: -7) 算法即可兼容大部分外部认证器，此外，再添加 RS256 (alg: -257) 算法即可兼容大部分平台内置认证器（如 Windows Hello）。当然，前端添加算法之后，后端也需要相应的算法支持。</p></blockquote>\n<blockquote><p>对于 <code>userVerification</code>，由于默认值 \"preferred\" 并不能很好地被所有设备支持，因此无论在 <code>create()</code> 中还是 <code>get()</code> 中不指定该参数都会在 Chrome 中触发一条警告。具体请参阅<a href=\"https://chromium.googlesource.com/chromium/src/+/master/content/browser/webauth/uv_preferred.md\">这个页面</a>。</p></blockquote>\n<p>调用 <code>create()</code> 之后，我们就可以拿到一个 <code>Promise</code>，并可以在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>create()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAttestationResponse {\r\n        attestationObject: ArrayBuffer(390) {},\r\n        clientDataJSON: ArrayBuffer(121) {}\r\n    },\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\",\r\n    type: \"public-key\"\r\n}</pre>\n<p>其中有：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：<code>AuthenticatorAttestationResponse</code> 对象，是 <code>PublicKeyCredential</code> 的主要部分，包含以下两个内容：\n<ul>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n<li>\n<code>response.attestationObject: ArrayBuffer</code>：CBOR 编码的认证器数据，包含凭证公钥、凭证 ID、签名（如果有）、签名计数等信息</li>\n</ul>\n</li>\n</ul>\n<p>然后将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串，我们就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证与注册了。具体怎么操作，我们会在下文详细讨论。当然，别忘了 <code>catch()</code> 注册过程中抛出的任何错误。</p>\n<blockquote><p>你可能会认为在所有情况下，注册时认证器都会对挑战进行签名。实际上在大部分情况下（同时也是默认情况），<strong>注册时认证器并不会对挑战进行签名</strong>，<code>attestationObject</code> 并不会包含签名后的挑战。只有依赖方明确要求证明且用户同意（部分浏览器要求）后认证器才会对挑战进行签名（具体实现据情况会有所不同）。对此，<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion#Attestation\">MDN 解释道</a>“大部分情况下，用户注册公钥时我们会使用「初次使用时信任模型」(TOFU) ，此时验证公钥是没有必要的。”要了解更多关于证明的内容，请参阅“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>而对于 <code>navigator.credentials.get()</code>，我们可以传入如下的参数：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.get({\r\n    publicKey: {\r\n        challenge,\r\n        rpId,\r\n        userVerification,\r\n        allowCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>和 <code>create()</code> 一样，对于 <code>get()</code> 我们需要传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值，指明我们需要获取的是公钥凭证而非普通的密码凭证。在 <code>publicKey</code> 对象中我们可以设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rpID: String</code>：（可选）依赖方 ID，需要和注册认证器时的一致。规则和上述的 <code>rp.id</code> 一致，不指定默认使用当前域名</li>\n<li>\n<code>userVerification: String</code>：和上文一样，只是需要注意它这次不在 <code>authenticatorSelection</code> 中了</li>\n<li>\n<code>allowCredentials: Array</code>：（可选）用于标识允许的凭证 ID，使用户代理找到正确的认证器。只有符合这个列表中凭证 ID 的凭证才能被成功返回。数组中的每一项都是对象，包含以下属性：\n<ul>\n<li>\n<code>allowCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>allowCredentials[].id: Uint8Array</code>：允许的凭证 ID</li>\n<li>\n<code>allowCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，和上面的一样，推荐值为 5000-120000</li>\n</ul>\n<p>嗯，要传入的参数少多了。之后，和 <code>create()</code> 一样，调用 <code>get()</code> 之后，我们就可以拿到一个 <code>Promise</code> 并在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>get()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAssertionResponse {\r\n        authenticatorData: ArrayBuffer(37) {},\r\n        signature: ArrayBuffer(256) {},\r\n        userHandle: ArrayBuffer(64) {},\r\n        clientDataJSON: ArrayBuffer(118) {}\r\n    }\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\"\r\n    type: \"public-key\"\r\n}</pre>\n<p>这里的东西就比 <code>create()</code> 时拿到的要多了。看看我们拿到了什么吧：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：对于验证流程，认证会返回 <code>AuthenticatorAssertionResponse</code> 而不是 <code>AuthenticatorAttestationResponse</code> 对象，这个对象包含以下 4 个属性：\n<ul>\n<li>\n<code>response.authenticatorData: ArrayBuffer</code>：认证器信息，包含认证状态、签名计数等</li>\n<li>\n<code>response.signature: ArrayBuffer</code>：被认证器签名的 <code>authenticatorData</code> + <code>clientDataHash</code>（<code>clientDataJSON</code> 的 SHA-256 hash）</li>\n<li>\n<code>response.userHandle: ArrayBuffer</code>：<code>create()</code> 创建凭证时的用户 ID <code>user.id</code>。许多 U2F 设备不支持这一特性，这一项将会是 <code>null</code>\n</li>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n</ul>\n</li>\n</ul>\n<p>同样地，我们将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串后就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证了。至于具体怎么做，别急，马上就来讲一讲。</p>\n<h2>简单实现</h2>\n<p>了这么多，我们终于可以实现一个简单的 WebAuthn 认证页面了。由于在实际操作中 WebAuthn 相关的数据解码和密码计算比较复杂，在服务器端我们可以使用第三方库来帮我们做这些脏活累活，我们只需专注于具体流程就可以了。</p>\n<p>要寻找可用的第三方库，你可以在 <a href=\"https://webauthn.io/\">webauthn.io</a> 上找到适用于各种语言的第三方库——除了 PHP（笑）。不过好在你可以在 GitHub 上找到几个不错的 PHP WebAuthn 库，比如 <a href=\"https://github.com/web-auth/webauthn-framework\">web-auth/webauthn-framework</a>。</p>\n<p>在我们的这个例子中，我们关心的主要是前端逻辑；而后端我们可以使用各类几乎已经做到开箱即用的第三方库，这样我们可以专注于流程而不必关心细节。当然如果你想了解后端的解码细节，可以阅读“<a href=\"https://flyhigher.top/#webauthn-decode\">手动解个码</a>”一节。</p>\n<hr>\n<p>让我们先从注册开始吧。现在，用户点击了注册认证器的按钮，一个请求被发送给服务器（也就是依赖方）。在最简单的情况中，依赖方需要将三个内容发送给浏览器：<strong>挑战、用户信息和用户已注册的凭证 ID 列表（即 <code>excludeCredentials</code>）</strong>。当然依赖方也可以自由选择发送更多信息，只要最终前端能构建合法的参数即可。</p>\n<p>挑战最终会被转换为 <code>Uint8Array</code>，即一组 0-255 的整数。如果使用 PHP，在后端我们可以这样生成 Base64 编码的挑战：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"php\">$challenge = \"\";\r\nfor($i = 0; $i \n<p>对于用户信息，我们需要登录名、显示名称和 ID 三项内容。我们可以从数据库中取出用户信息，也可以新建一份。需要注意的是，<strong>出于安全和隐私的考量，ID 不应该包含用户的任何信息，比如用户邮箱等。</strong>推荐的做法是和挑战一样，生成一个随机字符串/一组随机数，并将其于用户关联起来以供之后使用。</p>\n<p>发送已注册的凭证 ID 列表是为了防止用户重复注册同一个认证器。正确设置该列表后，如果用户试图注册同一个认证器，浏览器会中止流程并抛出 <code>InvalidStateError</code>。</p>\n<p>最后，别忘了将挑战等一些后续可能会用到的信息临时存储起来。Session 就是一个很好的选择。</p>\n<p>将所有信息发送到浏览器之后，我们应该可以构建出新建凭证所需的参数了。由于有多个参数需要以 <code>Uint8Array</code> 的形式传入，我们可以准备一个简单的工具函数帮我们将 Base64 的字符串转为 <code>Uint8Array</code>。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function str2ab(str){\r\n    return Uint8Array.from(window.atob(str), c=&gt;c.charCodeAt(0));\r\n}</pre>\n<p>除了 <code>challenge</code>, <code>rp</code>, <code>user</code> 和 <code>excludeCredentials</code> 几部分需要你根据具体情况设置外，上文提到的其他参数一般可以这么设置：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">publicKey: {\r\n    challenge, // 自行设置\r\n    rp, // 自行设置\r\n    user, // 自行设置\r\n    pubKeyCredParams: [\r\n        {\r\n            type: \"public-key\",\r\n            alg: -7 // ES256\r\n        },\r\n        {\r\n            type: \"public-key\",\r\n            alg: -257 // RS256\r\n        }\r\n    ],\r\n    authenticatorSelection: {\r\n        userVerification: \"discouraged\",\r\n        authenticatorAttachment: null // 除非用户指定，大部分情况下无需指定\r\n    },\r\n    excludeCredentials, // 自行设置\r\n    timeout: 60000\r\n}</pre>\n<p>然后就是传入 <code>navigator.credentials.create()</code>，拿到 <code>PublicKeyCredential</code>。如果一切顺利，接下来我们就需要考虑如何将返回的内容传回依赖方了。由于我们拿到的很多都是 <code>ArrayBuffer</code>，我们需要将其进行编码。再准备一个工具函数吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function array2b64String(a) {\r\n    return window.btoa(String.fromCharCode(...a));\r\n}</pre>\n<p>然后适当处理，我们就可以得到一个方便传输的 JSON 字符串了：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({publicKey}).then((credentialInfo) =&gt; {\r\n    const publicKeyCredential = {\r\n        id: credentialInfo.id,\r\n        type: credentialInfo.type,\r\n        rawId: array2b64String(new Uint8Array(credentialInfo.rawId)),\r\n        response: {\r\n            clientDataJSON: array2b64String(new Uint8Array(credentialInfo.response.clientDataJSON)),\r\n            attestationObject: array2b64String(new Uint8Array(credentialInfo.response.attestationObject))\r\n        }\r\n    };\r\n    return publicKeyCredential;\r\n}).then(JSON.stringify).then((authenticatorResponseJSON) =&gt; {\r\n    // 可以发送了\r\n}).catch((error) =&gt; {\r\n    console.warn(error); // 捕获错误\r\n})</pre>\n<p>依赖方收到数据以后，还需要做三件事：验证挑战、存储凭证 ID 和存储公钥。如果数据解码顺利，且收到的挑战和之前发送的一致，就可以认为注册成功，将凭证 ID 及公钥与用户关联起来。这一步有很多第三方库可以帮我们做，对于基础实现我们就不深入探究了。</p>\n<blockquote><p>由于不同厂商的认证器的实现方式不同，<strong>我们并不能保证凭证 ID 一定是全局唯一的</strong>，也就是说，凭证 ID 有可能碰撞——即使这些凭证实际上是不同的。依赖方在实现凭证 ID 的存储及查找时，需要注意和用户 ID 结合进行存储或查找，或是直接在注册认证器时在服务器端对比阻止相同的凭证 ID。</p></blockquote>\n<hr><p>接下来就可以进行验证了。某天，用户点击了验证按钮准备登录，于是浏览器发送了验证请求到依赖方，同时附上要登录的用户名。接下来依赖方至少需要发送两项内容给浏览器：<strong>挑战和用户已绑定的凭证 ID 列表（即 <code>allowCredentials</code>）。</strong></p>\n<p>之后前端的处理流程就和注册时基本一致了。只是需要注意验证流程中获取到的 <code>PublicKeyCredential</code> 的结构和注册时的稍有不同。</p>\n<p>当浏览器将数据传回后，依赖方需要做的事情就比之前要麻烦一些了。依赖方需要验证挑战，并用之前存储的公钥验证签名和签名计数。同样地，这一步有很多第三方库可以帮我们做。最后，如果验证全部通过，我们就可以允许用户登录了。</p>\n<p>到目前为止，我们已经实现了一个简单的 WebAuthn 验证服务。不过这只是一个最基础的实现，对于很多高安全要求的身份认证这是远远不够的。因此，我们需要摆脱对第三方库的依赖，深入了解 WebAuthn。你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分，不过对于基础的 WebAuthn 实现，我们的旅程就到这里了。</p>\n<h2>拓展阅读</h2>\n<p>如果你的目标只是快速了解如何开发 WebAuthn，那么你阅读到这里就可以了。同时，上一节例子中的部分代码来自于我为了这篇文章开发的 WordPress 插件 WP-WebAuthn，这个插件可以为你的 WordPress 启用 WebAuthn 无密码登录（并非二步验证），你可以查阅插件的 <a href=\"https://github.com/yrccondor/wp-webauthn\">GitHub 存储库</a>了解更多，也可以自己安装试一试。</p>\n<p>如果你正在使用 Chrome 开发，Chrome 87+ 版本添加了一个 WebAuthn 开发者面板，可以帮助你在没有任何实体验证器的情况下开发 WebAuthn 功能。你可以在 Google 的<a href=\"https://developers.google.com/web/tools/chrome-devtools/webauthn\">这篇文章</a>中了解更多。不够，如果你正在使用 Firefox，很遗憾目前我还没有找到对应的开发工具或是浏览器扩展可用。</p>\n<p>如果你希望了解更多关于非对称加密的数学证明，可以查阅阮一峰老师的<a href=\"http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html\">这篇文章</a>。</p>\n<p>如果你希望了解更多关于 Credential Management API 的信息，可以查阅<a href=\"https://medium.com/dev-channel/sign-in-on-the-web-credential-management-api-and-best-practices-d21aed14b6fe\">这篇文章</a>（英文）。</p>\n<p>如果你希望了解更多 WebAuthn 的细节，可以继续往下阅读。<span></span></p>\n<h1>深入了解 WebAuthn</h1>\n<p>如上文所说，如果摆脱对第三方库的依赖，或是要实现更安全的 WebAuthn，我们必须深入了解 WebAuthn。在这一部分中，我们会详细讨论上文没有提到的一些概念和参数，并了解 WebAuthn 中各类数据的结构以实现解码与验证。先来看一看一些进阶的选项吧。</p>\n<h2>进阶选项</h2>\n<p>没错，上文提到的传入 <code>navigator.credentials.create()</code> 和 <code>navigator.credentials.get()</code> 方法的参数其实只是所有参数的一部分。对于 <code>create()</code>，我们还可以配置这些可选内容（上文提及的已省略）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        rp: {\r\n            icon\r\n        },\r\n        user: {\r\n            icon\r\n        },\r\n        attestation,\r\n        authenticatorSelection: {\r\n            requireResidentKey\r\n        },\r\n        extensions\r\n    }\r\n})</pre>\n</pre>\n<ul>\n<li>\n<code>rp.icon: String</code> 和 <code>user.icon</code>：是的，你可以为依赖方和用户设置图标，可以使用 HTTPS URL 或 Base64，一般长度不能超过 128 字节，不过大部分浏览器不会显示图标，或是有非常小的图片体积限制，所以一般没有使用这一属性的必要</li>\n<li>\n<code>attestation: String</code>：表明依赖方是否需要证明。可选三个值：\n<ul>\n<li>\n<code>none</code>：（默认）不需要证明。如上文所述，依赖方不关心证明，因此认证器不会签名。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n<li>\n<code>indirect</code>：依赖方需要证明，但证明方式可由认证器选择。在支持匿名证明的认证器上，认证器会通过匿名证明的方式签名挑战，并向依赖方提供签名方式等信息</li>\n<li>\n<code>direct</code>：依赖方要求直接证明。此时认证器会使用烧录在认证器中的公钥进行签名，同时向依赖方提供签名方式等信息以供依赖方验证认证器是否可信。更多信息可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节</li>\n</ul>\n</li>\n<li>在 <code>authenticatorSelection</code> 中，我们还可以设置两个可选属性：\n<ul>\n<li>\n<code>authenticatorSelection.requireResidentKey: Boolean</code>：是否要求将私钥钥永久存储于认证器中。默认值为 <code>false</code>。对于 iOS/iPad OS 13，必须设置为 <code>false</code>，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n<li>\n<code>extensions: Object</code>：WebAuthn 扩展，可以提供规范之外的配置和响应。由于实际情况中很少会使用这一特性，我们不会在这篇文章中讨论它</li>\n\n<blockquote><p>将 <code>requireResidentKey</code> 设置为 <code>true</code> 可以实现无用户名的登录，即认证器同时替代了用户名和密码。需要注意的是，尽管大部分认证器可以实现无限对公私钥，<strong>但能永久存储的私钥数量是有限的</strong>（对于 Yubikey，这通常是 25），因此只应在真正需要的时候启用此特性。我们会在“<a href=\"https://flyhigher.top/#login-without-username\">无用户名登录</a>”一节中详细讨论原因。</p></blockquote>\n<blockquote><p><strong>如果你没有高安全需求（如银行交易等），请不要向认证器索取证明</strong>，即将 <code>attestation</code> 设置为 \"none\"。对于普通身份认证来说，要求证明不必要的，且会有浏览器提示打扰到用户。</p></blockquote>\n<blockquote><p>Android 暂时无法实施用户验证，进而会导致依赖方验证失败。你可以在<a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=997538\">这里</a>追踪这个特性的实现情况。</p></blockquote>\n<blockquote>\n<p>对于 <code>extensions</code>，由于目前浏览器支持和应用范围有限，我们不会在这篇文章中涉及，不过你可以看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    uvm: true, // 要求认证器返回用户进行验证的方法\r\n    txAuthSimple: \"Please proceed\" // 在认证器上显示与交易有关的简短消息\r\n}</pre>\n<p>你可以在<a href=\"https://www.w3.org/2019/01/webauthn-extensions.html\">这个页面</a>了解更多关于 <code>extensions</code> 的信息。</p>\n</blockquote>\n<p>对于 <code>get()</code>，我们其实只有一个可选内容没讲了，即 <code>extensions</code>。和上文一样，我们不会在这篇文章中讨论它。</p>\n<p>就这些了！<span></span></p>\n<h2>手动解个码</h2>\n<p>是时候看看如何手动解码了。我们将会在这一节中讨论认证器返回的数据的结构以及如何正确地解码它们。</p>\n<p>首先我们来看看如何处理注册过程中认证器发回的数据。假设所有 <code>ArrayBuffer</code> 类型的值都被正确地以 Base64 编码，且后端已经将 JSON 的字符串解析为字典。先来复习一下，我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"ZRBkDBCEtq...9XY8atOcbg\",\r\n    type: \"public-key\",\r\n    rawId: \"ZRBkDBCEtq...9XY8atOcbg==\",\r\n    response: {\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...i5jcmVhdGUifQ==\",\r\n        attestationObject: \"o2NmbXRkbm9uZWd...xNHuAMzz2LxZA==\"\r\n    }\r\n}</pre>\n<p>这里的 <code>id</code> 就是凭证的 ID，如果验证正确，我们最终要将它存储起来并于用户关联。同时可以看到 Base64 编码后的 <code>rawId</code> 其实和 <code>id</code> 是一致的（不过 <code>id</code> 是 Base64URL 编码的）。而 <code>type</code> 则一定是 \"public-key\"。</p>\n<p>不过，我们主要关心的还是 <code>respose</code> 中的两项内容。首先是 <code>clientDataJSON</code>。它的处理比较简单，看名字就知道，它应该是一个 JSON 字符串。</p>\n<blockquote><p>小技巧：如果你看到一个 Base64 编码的字符串以 \"ey\" 开头，那么它大概率是一个 Base64 编码的 JSON。</p></blockquote>\n<p>将<code>clientDataJSON</code> Base64 解码再 JSON 解码之后我们就能得到一个字典：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"NI4i1vsNmP2KHcmyFnBCKRVQPfHgg34SsYZUOPZY2lM\",\r\n    extra_keys_may_be_added_here: \"do not compare clientDataJSON against a template. See https://goo.gl/yabPex\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>结构一目了然。在这里，我们需要验证三项内容：</p>\n<ul>\n<li>\n<code>challenge</code> 和之前发送的一致</li>\n<li>\n<code>origin</code> 为创建凭证的页面的源（协议+主机名+端口号，并非 URL）</li>\n<li>\n<code>type</code> 为 \"webauthn.create\"</li>\n</ul>\n<p>同时可以注意到有一个奇怪的 <code>extra_keys_may_be_added_here</code>。这其实是 Google 在 Chrome 中搞的一点小把戏，有一定概率会出现，提醒我们需要将 JSON 解析后再验证键值以防额外插入的键值影响验证。具体信息你可以访问那个 URL 看一看。</p>\n<p>对于 Firefox，我们会多得到两项 <code>clientExtensions</code> 和 <code>hashAlgorithm</code> ，分别指明了客户端扩展数据和签名算法。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"3-4\">{\r\n    challenge: \"dg6ost6ujhAA0g6WqLe-SOOH-tbhvjW9Sp90aPKlLJI\",\r\n    clientExtensions: {},\r\n    hashAlgorithm: \"SHA-256\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>由于本文不考虑扩展数据，因此我们可以不考虑 <code>clientExtensions</code>。同时由于目前规范中指定的签名算法只有 SHA-256 一种，因此现阶段我们也可以简单地忽略 <code>hashAlgorithm</code>。</p>\n<p><code>clientDataJSON</code> 很简单地就处理完了。接下来我们要来看看 <code>attestationObject</code>。先来看看 <code>attestationObject</code> 的结构图示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\" alt=\"attestationObject 的结构\" width=\"1056\" height=\"532\" class=\"aligncenter size-full wp-image-2245\"></a>\n<p><code>attestationObject</code> 是 CBOR 编码后再被 Base64 编码的，因此我们需要额外对其进行 CBOR 解码。</p>\n<blockquote><p>CBOR (Concise Binary Object Representation, 简明二进制对象表示) 是一种多应用于物联网领域的编码方式，你可以将它看作体积更小、更方便物联网传输的二进制 JSON。大部分语言都可以找到对应的 CBOR 解码库。</p></blockquote>\n<p>我们当然不会手解 CBOR，直接来看看解开之后的样子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"none\",\r\n    attStmt: {},\r\n    authData: [211, 217, 43, 24, 199, ..., 97, 238, 166, 67, 107]\r\n}</pre>\n<p>这些键值的含义如下：</p>\n<ul>\n<li>\n<code>fmt</code>：标明证明的格式。WebAuthn 预定义了几种格式，分别为：\n<ul>\n<li>\n<code>none</code>：没有证明</li>\n<li>\n<code>packed</code>：为 WebAuthn 优化的证明格式</li>\n<li>\n<code>android-safetynet</code>：Android 使用的格式</li>\n<li>\n<code>android-key</code>：又是 Android 使用的格式</li>\n<li>\n<code>fido-u2f</code>：FIDO U2F 认证器使用的格式</li>\n<li>\n<code>tpm</code>：TPM 可信平台模块使用的格式</li>\n</ul>\n</li>\n<li>\n<code>attStmt</code>：证明对象，具体格式根据 <code>fmt</code> 的不同会有所不同</li>\n<li>\n<code>authData</code>：包含公钥、签名计数等来自认证器的数据</li>\n</ul>\n<p>诶，例子里的 <code>attStmt</code> 怎么是空的？还记得之前说的吗？大部分情况下，<strong>如果依赖方不要求证明，那么认证器不会签名挑战</strong>，于是 <code>fmt</code> 会变为 \"none\"，<code>attstmt</code> 会为空。如果不是高安全要求，我们可以只对这一种情况做支持。</p>\n<blockquote><p>注意，部分情况下 Firefox 会在不要求证明（即 <code>attestation</code> 为 \"none\"）时会返回 <code>fmt</code> 为 \"packed\" 的证明。<strong>这是符合规范的。</strong>此时认证器会进行自证明，你可以视情况进行处理。具体可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>对于非 \"none\" 的 <code>fmt</code> 我们稍后再谈，现在我们先来看看 <code>authData</code>。来复习一下 <code>authData</code> 的结构：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\" alt=\"authData 的结构\" width=\"1056\" height=\"384\" class=\"aligncenter size-full wp-image-2240\"></a>\n<p>对于它的解码比较简单粗暴，我们要做的就是根据图示将它切开，然后适当地转换类型。其中各部分的含义如下：</p>\n<ul>\n<li>\n<code>rpIdHash</code>：如其名，SHA-256 的 <code>rpId</code>，长度 32 字节</li>\n<li>\n<code>flags</code>：标识认证状态，长度 1 字节。其中 8 位分别为：\n<ul>\n<li>\n<code>ED</code>：是否有扩展数据</li>\n<li>\n<code>AT</code>：是否包含 <code>attestedCredentialData</code>。通常注册认证器时会包含 <code>attestedCredentialData</code>，而验证时不包含</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>\n<code>UV</code>：用户是否已验证</li>\n<li>保留位</li>\n<li>\n<code>UP</code>：用户是否在场</li>\n</ul>\n</li>\n<li>\n<code>signCount</code>：签名计数，长度 4 字节</li>\n<li>\n<code>attestedCredentialData</code>：包含公钥等凭据数据，变长。其结构如下：\n<ul>\n<li>\n<code>aaguid</code>：认证器的 AAGUID (Authenticator Attestation GUID)，对于同一型号的认证器，它们的 AAGUID 是相同的</li>\n<li>\n<code>credentialIdLength</code>：标识 <code>credentialId</code> 的长度，长度 2 字节</li>\n<li>\n<code>credentialId</code>：凭证 ID，和 <code>rawId</code> 一致，长度由 <code>credentialIdLength</code> 定义</li>\n<li>\n<code>credentialPublicKey</code>：CBOR 编码的 COSE 格式的凭证公钥，变长</li>\n</ul>\n</li>\n<li>\n<code>extensions</code>：扩展数据，变长，本文不讨论</li>\n</ul>\n<blockquote><p>出于隐私考虑，如果不要求证明，认证器会以 0 填充 AAGUID。</p></blockquote>\n<p>如果你的后端在使用 Node.js，这里有个工具函数可以帮你完成这一步（不考虑 <code>extensions</code>）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function parseAuthData(buffer){\r\n    let rpIdHash = buffer.slice(0, 32);\r\n    buffer = buffer.slice(32);\r\n  \r\n    let flagsBuf = buffer.slice(0, 1);\r\n    buffer = buffer.slice(1);\r\n\r\n    let flagsInt = flagsBuf[0];\r\n    let flags = {\r\n        up: !!(flagsInt &amp; 0x01),\r\n        uv: !!(flagsInt &amp; 0x04),\r\n        at: !!(flagsInt &amp; 0x40),\r\n        ed: !!(flagsInt &amp; 0x80),\r\n        flagsInt\r\n    }\r\n\r\n    let counterBuf = buffer.slice(0, 4);\r\n    buffer = buffer.slice(4);\r\n  \r\n    let counter = counterBuf.readUInt32BE(0);\r\n\r\n    let aaguid = undefined;\r\n    let credID = undefined;\r\n    let COSEPublicKey = undefined;\r\n\r\n    if(flags.at) {\r\n        aaguid = buffer.slice(0, 16);\r\n        buffer = buffer.slice(16);\r\n\r\n        let credIDLenBuf = buffer.slice(0, 2);\r\n        buffer = buffer.slice(2);\r\n\r\n        let credIDLen = credIDLenBuf.readUInt16BE(0);\r\n        credID = buffer.slice(0, credIDLen);\r\n\r\n        buffer = buffer.slice(credIDLen);\r\n        COSEPublicKey = buffer;\r\n    }\r\n\r\n    return {rpIdHash, flagsBuf, flags, counter, counterBuf, aaguid, credID, COSEPublicKey}\r\n}</pre>\n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>解开后，依赖方至少需要做四件事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>存储签名计数</li>\n<li>存储公钥</li>\n</ol>\n<blockquote><p>签名计数不一定从 0 开始。</p></blockquote>\n<p>对于公钥，也就是 <code>credentialPublicKey</code>，我们需要多一次 CBOR 解码，然后就可以得到类似这样的公钥：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    kty: \"EC\",\r\n    alg: \"ECDSA_w_SHA256\",\r\n    crv: \"P-256\",\r\n    x: \"ZGQALNfqo0L7HFYQHFHCS/X5db49z0ePnuQEs3w3X8w=\",\r\n    y: \"6qYxhnjYuez/Q8N6vX7nIIGfxFWdZ25NzQfZYuYOalA=\"\r\n}</pre>\n<p>然后可以选择适当的方法将其存储起来，之后的步骤本文就不再赘述了。现在，将目光拉回来，让我们看看包含证明的 <code>attestationObject</code> 是怎么样的。我们来看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"packed\",\r\n    attStmt: {\r\n        alg: -7,\r\n        sig: [48, 70, 2, 33, 0, ..., 132, 78, 46, 100, 21],\r\n        x5c: [\r\n            [48, 130, 2, 189, 48, 130, 1, 165, 160, 3, ..., 177, 48, 125, 191, 145, 24, 225, 169, 41, 248]\r\n        ]\r\n    },\r\n    authData: [211, 217, 43, 24, 199, ..., 158, 54, 87, 126, 54]\r\n}</pre>\n<p>这里有一个使用 \"packed\" 格式的证明。此时，<code>attStmt</code> 中包含三个值：</p>\n<ul>\n<li>\n<code>alg</code>：签名算法</li>\n<li>\n<code>sig</code>：签名值</li>\n<li>\n<code>x5c</code>：X.509 编码的证书链</li>\n</ul>\n<p>我们不会在这一节中详述对签名的验证。要了解更多信息，你可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。现在，让我们来看看如何处理验证过程中认证器发回的数据。我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"hmqdxPLit9...BWeVxZqdvU\",\r\n    type: \"public-key\",\r\n    rawId: \"hmqdxPLit9V...BWeVxZqdvU=\",\r\n    response: {\r\n        authenticatorData: \"09krGMcWTf...UFAAAABA==\",\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...XRobi5nZXQifQ==\",\r\n        signature: \"UsXZV3pvT3np8btj6V0g...WBkaqyt88DrD40qh+A==\",\r\n        userHandle: \"MmYxNWYzZjQyZjM...Tg2ZDY4NzhlNw==\"\r\n    }\r\n}</pre>\n<p><code>id</code>, <code>rawId</code> 和 <code>type</code> 和之前一样，这里就不再赘述了。让我们来看看 <code>response</code>。首先是 <code>clientDataJSON</code>，和之前的解法一样，要验证的内容也一样，只是 <code>type</code> 从 \"webauthn.create\" 变成了 \"webauthn.get\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"bnkd2CmrEuvKnAFXs2QlC3SKlg4XFvGtP4HJL1yEWyU\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.get\"\r\n}</pre>\n<p>然后是 <code>userHandle</code>。前面讲过，这是认证器在创建凭证时的用户 ID。如果用户在使用 U2F 认证器，很可能这一项为空，所以大部分情况下我们不关心这一项。</p>\n<p>接着来看 <code>authenticatorData</code>。这其实就是之前的 <code>attestedCredentialData</code>，只是这次不包含公钥。以相同的方式切开数据，我们应该可以得到 <code>rpIdHash</code>, <code>flags</code>和 <code>signCount</code> 三项。此时，依赖方至少需要做这三样事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>验证签名计数大于之前存储的计数，并更新存储的计数</li>\n</ol>\n<blockquote><p>如果签名计数比之前的小，那么这个认证器很可能是伪造的，应该中止验证并返回验证失败。同时，签名计数不一定每次按 1 递增，通常只要计数比此前的大就认为计数检查通过。</p></blockquote>\n<p>最后，我们来看 <code>signature</code>，也就是签名。不过这个签名不是简单的对挑战的签名，具体算法如图所示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\" alt=\"签名过程\" width=\"1034\" height=\"587\" class=\"aligncenter size-full wp-image-2231\"></a>\n<p>计算签名时，认证器会将 <code>authenticatorData</code> 与 <code>clientDataHash</code>（也就是 <code>clientDataJSON</code> 的 SHA-256 Hash）拼接起来，并使用对应的私钥签名。依赖方应该使用对应的公钥将其解密，并验证内容是否是 <code>authenticatorData</code> 与 <code>clientDataHash</code> 的拼接。这部分的计算不在本文的讨论范围内。</p>\n<p>最后，如果全部验证通过，返回验证成功。<span></span></p>\n<h2>验证认证器</h2>\n<p>WebAuthn 已经很安全了，但有的时候我们还要让它更安全一点。比如，如果用户在使用伪造的或是自制的认证器，认证器的安全性就得不到保证。此时，依赖方就需要验证认证器是否是可信的认证器。</p>\n<blockquote><p>这一过程仅发生在注册认证器时。此时，如果认证器验证通过，就可以存储公钥，后续步骤和之前描述的一致。</p></blockquote>\n<blockquote><p>再次说明，如果不是对安全性有极高的要求，向认证器索取证明以验证认证器是否可信是没有必要的。此外，验证认证器需要依赖方自行维护可信认证器列表，大大增加了维护的复杂性。</p></blockquote>\n<p>在调用 <code>navigator.credentials.create()</code> 时，我们可以将 <code>attestation</code> 设置为非 \"none\" 来向认证器索取证明。除无证明外，WebAuthn 定义了四种证明方式：</p>\n<ul>\n<li>Basic Attestation (Basic) ：基础的证明方式，认证器会使用认证器私钥签名</li>\n<li>Self Attestation (Self) ：自证明，认证器会使用凭证私钥签名</li>\n<li>Attestation CA (AttCA) ：认证器会使用多个证明私钥之一签名</li>\n<li>Elliptic Curve based Direct Anonymous Attestation (ECDAA) ：通过 <a href=\"https://en.wikipedia.org/wiki/Direct_Anonymous_Attestation\">DAA</a> 实现的匿名证明</li>\n</ul>\n<blockquote><p>和验证过程一样，这里签名的目标是 <code>authenticatorData</code> 和 <code>clientDataHash</code> 的连接。</p></blockquote>\n<p>还记得 <code>create()</code> 时 <code>attestation</code> 可选的三个值吗？这个值会决定认证器最终使用哪种方式进行证明。复习一下：</p>\n<ul>\n<li>\n<code>none</code>：大部分情况下认证器会选择不进行证明，部分认证器会进行自证明。此时 AAGUID 会被 0 填充</li>\n<li>\n<code>indirect</code>：认证器会试图通过替换 AAGUID 和选择合适的证明方式来进行匿名证明，具体方式由认证器选择</li>\n<li>\n<code>direct</code>：认证器会提供最直接的证明信息</li>\n</ul>\n<p>注意，大部分情况下，当认证器需要向依赖方证明自己可信时需要提供认证器公钥，<strong>这会触发浏览器提示，只有用户同意后认证器才会进行证明，否则认证器将不提供证明。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\" alt=\"浏览器提示\" width=\"446\" height=\"283\" class=\"aligncenter size-full wp-image-2217\"></a>\n<blockquote><p>为什么浏览器会说“安全密钥的品牌和型号”？事实上，为了避免用户通过认证器证书被跨依赖方追踪，FIDO 要求使用相同认证器证书的认证器的数量不能少于 100,000。于是大部分认证器厂商会选择<strong>让同一型号的认证器共用同一份证书。</strong>因此，浏览器的会询问用户是否同意“查看安全密钥的品牌和型号”。</p></blockquote>\n<blockquote><p>Android Safety Net 不会向用户询问是否同意，而是会静默进行证明。</p></blockquote>\n<p>当证明不为空时，依赖方收到数据后根据 <code>attestationObject.fmt</code> 的不同，需要选择不同的验证方式来验证认证器的可信情况。出于篇幅原因，这里我们不会讨论每一种 <code>fmt</code> 的验证方式，更多信息你可以查阅 <a href=\"https://www.w3.org/TR/webauthn/#defined-attestation-formats\">W3C 文档</a>。</p>\n<p>当 <code>fmt</code> 为 <code>packed</code> 时，<code>attestationObject.attStmt</code> 可能会有三种格式：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// 自证明\r\n{\r\n    alg, // 算法\r\n    sig // 签名\r\n}\r\n// 基础或证明 CA 证明\r\n{\r\n    alg,\r\n    sig,\r\n    x5c // X.509 证书链\r\n}\r\n// 椭圆曲线证明\r\n{\r\n    alg,\r\n    sig,\r\n    ecdaaKeyId // ECDAA-Issuer 公钥标识符\r\n}</pre>\n<p>此时，依赖方需要检查证书符合预期格式并检查证书是否在可信链上。首先，如果证明中既没有 <code>ecdaaKeyId</code> 也没有 <code>x5c</code>，就说明这个证明使用的是自证明，只需使用认证器提供的公钥验证即可；如果有 <code>x5c</code>，那么就需要验证 <code>x5c</code> 中的证书是否在可信链上。将 <code>x5c</code> 中的每个证书以 Base64 编码，按 64 个字符切开，并在头尾加上 <code>-----BEGIN CERTIFICATE-----</code> 和 <code>-----END CERTIFICATE-----</code>就能得到一个证书字符串了。之后，依赖方需要验证证书是否可信。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function base64ToPem(b64cert){\r\n    let pemcert = '';\r\n    for(let i = 0; i \n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>至于 <code>ecdaaKeyId</code>，由于目前应用较少，处理方法可能需要你另寻资料了。检查证书的具体步骤已经超出了本文的范围，具体可以查阅<a href=\"https://medium.com/@herrjemand/verifying-fido2-packed-attestation-a067a9b2facd\">这篇文章</a>（英文）。</p>\n<blockquote><p>你可以在 <a href=\"https://fidoalliance.org/metadata/\">FIDO Metadata Service</a> 找到各大厂商认证器的可信证书链。</p></blockquote>\n<p>当在 Android 上调起 WebAuthn 时，大部分情况下 <code>fmt</code> 将会为 <code>safety-net</code>。此时 <code>attestationObject.attStmt</code> 的结构会是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    ver: \"200616037\",\r\n    response: {\r\n        type: \"Buffer\",\r\n        data: [101, 121, 74, 104, 98, ..., 115, 104, 104, 82, 65]\r\n    }\r\n}</pre>\n<p>此时，<code>clientDataJSON</code> 中还会出现 <code>androidPackageName</code> 键，值是调起 WebAuthn 验证的应用的包名，如 Chrome 就是 \"com.android.chrome\"。</p>\n<p>在这个证明中，<code>data</code> 其实是一个 JWT 字符串，我们可以将它编码为字符串并将其按照 JWT 进行解码（别忘了验证 JWT 签名）。最终我们会得到一个类似这样的 Payload：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    nonce: \"0QAurN4F9wik6GEkblDJhGuf4kuaqZn5zaaxlvD1hlA=\",\r\n    timestampMs: 1584950686460,\r\n    apkPackageName: \"com.google.android.gms\",\r\n    apkDigestSha256: \"2BQHno+bmWWwdLUYylS8HLt5ESJzci3nt2uui71ojyE=\",\r\n    ctsProfileMatch: true,\r\n    apkCertificateDigestSha256: [\r\n        \"8P1sW0EPicslw7UzRsiXL64w+O50Ed+RBICtay2g24M=\"\r\n    ],\r\n    basicIntegrity: true,\r\n    evaluationType: \"BASIC\"\r\n}</pre>\n<p>其中包含了有关设备状态的一些信息。比如说，如果 <code>ctsProfileMatch</code> 为 <code>false</code>，那么该设备很有可能被 root 了。对于高安全要求的场景，我们可以视情况进行验证。</p>\n<p>同时我们可以在 JWT Header 中验证证明的有效性。我们应该能取得这样的 Header：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    alg: \"RS256\",\r\n    x5c: [\r\n        \"MIIFkzCCBHugAwIBAgIR...uvlyjOwAzXuMu7M+PWRc\",\r\n        \"MIIESjCCAzKgAwIBAgIN...UK4v4ZUN80atnZz1yg==\"\r\n    ]\r\n}</pre>\n<p>这里的结构就和上方的 <code>x5c</code> 验证类似了。具体步骤可以参考<a href=\"https://medium.com/@herrjemand/verifying-fido2-safetynet-attestation-bd261ce1978d\">这篇文章</a>（英文）。</p>\n<p>其他所有格式的验证方式也都可以在<a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">这篇文章</a>（英文）中找到。<span></span></p>\n<h2>无用户名登录</h2>\n<p>认证器已经代替了密码，可是这还不够！在进行第一因素认证（即使用 WebAuthn 登录）时，我们还是需要输入用户名，然后才能进行身份认证。懒惰是第一生产力，我们能不能不输入用户名就进行身份认证呢？实际上，大部分认证器都允许我们无用户名登录。<strong>而这一特性的核心就是 Resident Key 客户端密钥驻留。</strong></p>\n<p>你可以思考一下，为什么普通的 WebAuthn 为什么不能实现无用户名登录？事实上，大部分认证器为了实现无限对公私钥，会将私钥通过 Key Warp 等技术加密后包含在凭证 ID 中发送给依赖方，这样认证器本身就不用存储任何信息。不过，这就导致需要身份认证时，依赖方必须通过用户名找到对应的凭证 ID，将其发送给认证器以供其算出私钥。</p>\n<blockquote><p>Yubikey 实现了一个基于 HMAC 的算法，认证器可以在私钥不离开认证器的前提下（常规的 Key Warp 算法中实际上私钥离开了认证器）通过一些输入和凭证 ID 重新计算私钥，你可以阅读<a href=\"https://www.yubico.com/blog/yubicos-u2f-key-wrapping/\">这篇文章</a>了解更多。</p></blockquote>\n<blockquote><p>客户端通过凭证 ID 查找对应认证器的算法根据系统的不同是不同的。通常凭证 ID 中会包含认证器信息，因此系统可以通过凭证 ID 找到对应的认证器。</p></blockquote>\n<p>要避免输入用户名，我们可以要求认证器将私钥在自己的内存中也存储一份。这样，依赖方无需提供凭证 ID，认证器就可以通过依赖方 ID 找到所需的私钥并签名公钥。以下是具体流程：</p>\n<p>注册时：</p>\n<ol>\n<li>依赖方请求新建凭证，同时要求启用客户端密钥</li>\n<li>认证器生成一对公私钥，并将私钥存储在永久内存中且与依赖方 ID 及用户 ID 绑定，随后将公钥发送给依赖方以供存储</li>\n<li>依赖方将用户 ID 即公钥与用户绑定</li>\n</ol><p>验证时：</p>\n<ol>\n<li>依赖方请求验证，但不必提供除依赖方 ID 以外的更多信息</li>\n<li>用户选择认证器</li>\n<li>认证器根据依赖方 ID 找到对应私钥</li>\n<li>如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录</li>\n<li>确定私钥后，认证器签名挑战并将其返回，同时返回用户 ID</li>\n<li>依赖方通过用户 ID 找到对应用户并用对应公钥检查签名，正确则允许对应用户登录</li>\n</ol><blockquote><p>可以看到，这个特性同时要求认证器存储用户 ID，即上面提到过的 <code>userHandle</code>。依赖方需要根据此信息找到对应用户，因此不支持 <code>userHandle</code> 的 U2F 认证器无法进行无用户名登录。</p></blockquote>\n<blockquote><p>如之前所说，<strong>认证器能永久存储的私钥数量是有限的</strong>，因此只应在真正需要无用户名登录的时候启用此特性。</p></blockquote>\n<blockquote><p>目前暂时没有办法检测认证器是否支持客户端密钥驻留，因此在无用户名验证失败时应 fallback 至常规的 WebAuthn 验证，即向用户询问用户名。</p></blockquote>\n<p>现在让我们来看看如何实现这一特性吧。首先，调用 <code>navigator.credentials.create()</code> 时我们需要注意两个参数：<code>requireResidentKey</code> 必须为 <code>true</code>，<code>userVerification</code> 必须为 \"required\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"5-6\">navigator.credentials.create({\r\n    publicKey: {\r\n        ...\r\n        authenticatorSelection: {\r\n            requireResidentKey: true,\r\n            userVerification: \"required\"\r\n            ...\r\n        },\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Windows Hello <strong>似乎</strong>会存储所有已注册的凭据，因此无论是否指定 <code>requireResidentKey</code>，你都可以通过 Windows Hello 进行无用户名登录。</p></blockquote>\n<p>随后，浏览器会询问用户是否允许认证器存储私钥。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\" alt=\"浏览器提示\" width=\"445\" height=\"285\" class=\"aligncenter size-full wp-image-2208\"></a>\n<p>如果用户同意，认证器会存储私钥，并和普通的 WebAuthn 一样返回信息。不过，依赖方收到数据之后，只需将公钥、用户 ID 与用户关联起来，而不必再将凭证 ID 与用户关联起来。至此注册完成。</p>\n<p>之后，在用户请求登录时，无需再向依赖方提供用户名。同时在传入 <code>navigator.credentials.get()</code> 的参数中也有两个需要注意：<code>userVerification</code> 必须为 \"required\"，同时 <code>allowCredentials</code> 必须为空。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"4-5\">navigator.credentials.get({\r\n    publicKey: {\r\n        ...\r\n        userVerification: \"required\",\r\n        allowCredentials: [],\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Android 暂不支持无用户名验证，空的 <code>allowCredentials</code> 会导致浏览器返回 <code>NotSupportedError</code> 错误。</p></blockquote>\n<p>此时，认证器会根据依赖方 ID 找到对应的私钥。如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录。用户选择后，认证器就会使用对应的私钥签名挑战并将其返回。此时，<code>userHandle</code> 一定不为空。</p>\n<p>依赖方收到数据后，需要将 <code>userHandle</code> 作为用户 ID 找到对应的用户，并使用对应的公钥验证签名。如果验证成功，则认为对应的用户身份认证成功，依赖方可以允许其登录。至此验证结束。</p>\n<blockquote><p>有的时候你可能会需要清除认证器中的密钥。绝大多数认证器都提供了对应的软件以供清除存储的密钥，但大部分情况下这会重置整个认证器，这意味着相关认证器此前的所有凭证均会失效。因此建议不要将日常使用的认证器作为开发测试用的认证器。</p></blockquote>\n<h2>从 U2F 认证迁移</h2>\n<p>如果你的服务此前提供了 U2F 第二因素认证，你可能会希望在将依赖方从 U2F 升级到 WebAuthn 时用户此前注册的 U2F 认证器仍然可用而无需重新注册。由于 WebAuthn 向后兼容 U2F 设备，用户是可以继续使用原有的 U2F 认证器的。不过，由于 WebAuthn 的依赖方 ID 与 U2F 的 <code>appid</code> 并不一定相同，你需要将原有的 U2F <code>appid</code> 随 WebAuthn 流程一起传递给认证器，认证器才能使用正确的私钥进行响应。</p>\n<p>要实现这一点，我们只需要在注册及认证仪式中使用 WebAuthn 的 <code>appid</code> 扩展。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    appid: \"https://example.com\" //U2F appid\r\n}</pre>\n<p>此时认证器便可以得到正确的私钥，之后的流程与正常情况一致；依赖方除了正常的 WebAuthn 流程外，不需要再做任何其它操作。</p>\n<h2>拓展阅读</h2>\n<p>我们的 WebAuthn 之旅到这里就真的结束了。不过，你仍然可以自行探究，了解更多。<strong>本文只是一个粗浅的使用指南</strong>，而被称为“Web 身份认证的未来”的 WebAuthn 的深层还要很多细节值得我们挖掘学习，不过本文不会再继续讨论了。</p>\n<p>如果你想了解更多关于 WebAuthn 的信息，最好的方法是直接阅读 <a href=\"https://www.w3.org/TR/webauthn\">W3C 规范</a>。此外，Yubico 也提供了不错的 <a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn 文档</a>。</p>\n<p>要了解更多认证器存储凭证的信息，你可以阅读<a href=\"https://duo.com/labs/tech-notes/how-security-keys-store-credentials\">这篇文章</a>（英文）。</p>\n<p>如果你想了解更多 Android Safety Net 是怎样运作的，可以观看<a href=\"https://youtu.be/8lv_9mydrjg\">这个视频</a>，并通过 <a href=\"https://developer.android.com/training/safetynet/attestation\">Google 的文档</a>了解 Android Safety Net 的更多信息。</p>\n<p>如果你想方便地调试 WebAuthn，<a href=\"https://webauthn.me/\">webauthn.me</a> 提供了一个非常直观方便的<a href=\"https://webauthn.me/debugger\">调试器</a>。</p>\n<h1>参考资料</h1>\n<p><a href=\"https://www.w3.org/TR/webauthn\">WebAuthn Level 1 规范 - W3C</a><br><a href=\"https://github.com/w3c/webauthn\">WebAuthn Level 2 草案 - W3C</a><br><a href=\"https://blog.techbridge.cc/2019/08/17/webauthn-intro/\">一起来了解Web Authentication - TechBridge 技术共笔部落格</a><br><a href=\"https://medium.com/@herrjemand/introduction-to-webauthn-api-5fd1fb46c285\">Introduction to WebAuthn API - Medium</a><br><a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">WebAuthn/FIDO2: Verifying responses - Medium</a><br><a href=\"https://obeta.me/posts/2019-03-01/WebAuthn%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8\">WebAuthn介绍与使用 - obeta</a><br><a href=\"https://webauthn.io/\">webauthn.io</a><br><a href=\"https://webauthn.guide/\">webauthn.guide</a><br><a href=\"https://webauthn.me/\">webauthn.me</a><br><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion\">Attestation and Assertion - MDN</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Authentication_API\">Web Authentication API - MDN</a>（顺便翻译了一半）<br><a href=\"https://fidoalliance.org/fido-technotes-the-truth-about-attestation/\">FIDO TechNotes: The Truth about Attestation - FIDO Alliance</a><br><a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn Developer Guide - Yubico</a><br><a href=\"https://en.wikipedia.org/wiki/WebAuthn\">WebAuthn - Wikipedia</a><br><a href=\"https://techcommunity.microsoft.com/t5/identity-standards-blog/all-about-fido2-ctap2-and-webauthn/ba-p/288910\">All about FIDO2, CTAP2 and WebAuthn - Microsoft Tech Community</a><br><a href=\"https://webauthn-doc.spomky-labs.com/\">Webauthn Framework</a><br><a href=\"https://zhuanlan.zhihu.com/p/25279015\">如何开发支持 FIDO U2F 登录的网站 - 知乎专栏</a><br></p></pre>\n","link":"https://flyhigher.top/develop/2160.html"},{"title":"NLP 找门：用朴素贝叶斯进行文本分类","date":"2020-01-29 11:39:58","description":"\n<blockquote>\n<p>有一天，神收到了一封垃圾邮件，于是世界上就有了朴素贝叶斯算法。</p>\n<footer>——我瞎编的</footer>\n</blockquote>\n<p>为什么这篇文章的标题是 NLP 找门呢？因为如果你看完了这篇文章，你就可以<strong>准备入门</strong>自然语言处理 (<strong>N</strong>atural <strong>L</strong>anguage <strong>P</strong>rocessing) 了。我会把这篇文章当作一篇彻彻底底的 NLP 入门文章来写，尽量避免“专业高端”词汇和“全是奇怪符号”的式子，这样<strong>只要你有高中数学基础</strong>，就能毫无压力地看完这篇文章，学会使用朴素贝叶斯分类算法分类文本。</p>\n<p>让我们开始吧。</p>\n<h1>所以，啥是朴素贝叶斯？</h1>\n<p>简单来说，朴素贝叶斯 (Naïve Bayes) <strong>是一个简单但高效的分类算法</strong>，在进行不复杂的文本分类时高效且拥有不低的准确度，判断垃圾邮件就是用朴素贝叶斯进行文本分类的一个经典例子。当然朴素贝叶斯分类不仅能用在 NLP 中，在许多分类问题中朴素贝叶斯也有非常好的效果，但我们今天只关注它在 NLP 中的应用。</p>\n<p>要了解朴素贝叶斯，我们要先来了解一下贝叶斯定理。</p>\n<blockquote>\n<p>每增加一个数学公式都会使读者减半。</p>\n<footer>——霍金</footer>\n</blockquote>\n<p>那么，就让我们先来看看贝叶斯定理的公式吧（笑</p>\n<p>$$P(A|B) = \\frac{P(AB)}{P(B)} = \\frac{P(B|A)P(A)}{P(B)}$$</p>\n<p>其实还是很简单的，运用高中的条件概率知识就能理解。本质上，贝叶斯定理给出了一种方法，使得我们可以在 \\(P(A|B)\\) 和 \\(P(B|A)\\) 之间互相转换，因为通常情况下它们是不一样的。</p>\n<p>要更好地理解，请考虑这样一个例子：</p>\n<blockquote><p>假设有一个学校图书馆，图书管理员正为找不到某本书而发愁。已知老师有 70% 的意愿借走这本书，而是学生的意愿是 30%，这个学校的师生比例是 1:10，那么借走这本书的人是老师的概率有多大？</p></blockquote>\n<p>设学校总人数为 \\(T\\)，我们可以很容易地写出这样的一个式子：</p>\n<p>$$\\begin{align} P &amp; = \\frac{T\\cdot\\frac{1}{11}\\cdot 70\\%}{T\\cdot\\frac{1}{11}\\cdot 70\\%+T\\cdot\\frac{10}{11}\\cdot 30\\%} \\\\ &amp; = \\frac{70\\%}{70\\%+10\\times30\\%} \\\\ &amp; = \\frac{7}{37} \\end{align}$$</p>\n<p>这就是贝叶斯定理了！等等，你可能会挠挠头，这哪里是贝叶斯了？别急，如果我们把最上面的式子换个字母的话...</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>在这里，\\(H\\) 指 Hypothesis，即假设，而 \\(E\\) 指 Evidence，即证据。这样，这个式子就很好理解了，在我们上面的例子里，借走书是证据，那么 \\(P(E)\\) 就是某个人选择借走这本书的概率；这个人是老师是假设，那么这个人是老师的概率是 \\(P(H)\\)。<strong>注意这里的概率指在学校中抽一个人是老师的概率，并不是“在借走书的前提下”这个人是老师的概率</strong>，而“在借走书的前提下”这个人是老师的概率应该是 \\(P(H|E)\\)，也正是我们要求的概率。同样地，而“这个人是老师”的前提下借走书的概率就是 \\(P(E|H)\\) 了。</p>\n<p>那么再来看看上面我们凭小学知识就列出的计算式，如果把里面的具体数据换成概率来表示的话，这个式子就会变成...</p>\n<p>$$P(H|E) = \\frac{T\\cdot P(E|H)P(H)}{T\\cdot P(E|H)P(H) + T\\cdot P(E|\\neg H)P(\\neg H)}$$</p>\n<p>好吧，这里解释一下，\\(\\neg\\) 符号表示“非”，所以 \\(P(E|\\neg H)\\) 表示在“这个人不是老师”的前提下借走书的概率。而 \\(T\\cdot P(E|H)P(H)\\) + \\(T\\cdot P(E|\\neg H)P(\\neg H)\\)，即“可能借走书的老师的数量 + 可能借走书的学生的数量”，就是“可能借走书的人的数量”了，也就是 \\(T\\cdot P(E)\\)。上下消去 \\(T\\)，我们就能得到上面的式子了。</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>这就是贝叶斯了定理。如果你还是不太清楚，可以去看看 3Blue1Brown 的<a href=\"https://www.bilibili.com/video/av84799361\">这个视频</a>，图形化的讲解会清晰很多。</p>\n<p>这里我要提一下这个式子里各部分的专有名称了（“专业高端”词汇警告），你可以不记住，直接看后面。</p>\n<ul>\n<li>\\(P(H|E)\\) 叫做 \\(H\\) 的<strong>后验概率</strong>，反之亦然</li>\n<li>\\(P(H)\\) 叫做 \\(H\\) 的<strong>先验概率</strong>，反之亦然</li>\n<li>特别地，我们把 \\(P(E|H)\\) 称作<strong>“似然值”</strong>，即 likelihood</li>\n</ul>\n<p>那什么是朴素贝叶斯呢？按上面所说的，朴素贝叶斯是一种分类算法。简单来说，朴素贝叶斯将一个对象的各个特征考虑为互相独立，然后根据这些特征的概率的乘积来判断对象所属的分类。基本原理如下：</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)} \\propto P(E|H)P(H) = P(H)\\prod_{i}P(W_i|H)$$</p>\n<p>在这里，\\(W_i\\) 指某一对象的第 \\(i\\) 个特征，对于文本分类来说，这就是一段文本中的某个单词。</p>\n<p>朴素贝叶斯之所以“朴素”，是因为它要求<strong>各个特征间是独立的</strong>，在文本分类中也就是各个单词之间互不干扰。虽然思路简单的代价是适用范围变窄，不过由于这样的简化在很多情况下已经足够了，因此实际上朴素贝叶斯的应用范围非常广。<del>你看朴素贝叶斯 <strong>N</strong>aïve <strong>B</strong>ayes 的缩写都是 NB 了，能不厉害吗（逃</del></p>\n<h1>那么，咋分类啊</h1>\n<p>看来你这下完全听懂了呢（笑），是时候看看如何在 NLP 中应用朴素贝叶斯了。和上面一样，我们用一个具体的例子来说明。我们的目标是让电脑学会分类美国共和党和民主党的演讲稿，由于两个党派的演讲风格不同，所以这样的分类在理论上是可行的。</p>\n<div class=\"wp-block-file\">\n<a href=\"https://acdn.flyhigher.top/nlp/material.zip\" download>material.zip</a><a href=\"https://acdn.flyhigher.top/nlp/material.zip\" class=\"wp-block-file__button\" download>下载</a>\n</div>\n<p>上面我们要用到的数据集，你可以下载下来一起动手玩一玩。先说一下数据集的数据结构吧，压缩包里有两个文件，<code>train.txt</code> 将会被当作训练数据集，而 <code>test.txt</code> 则会作为训练结束后的验证数据集。两个文本文件里数据的结构是类似的，就像这样：</p>\n<pre class=\"EnlighterJSRAW\">BLUE WELL I AM SO HONORED AND PERSONALLY UNKNOWNWORD TO BE HERE...\r\nRED THANK YOU . THIS IS QUITE AN INSTITUTION . IT'S GOOD TO BE...</pre>\n<p>每行都是一篇演讲稿，每行的第一个单词指明了这篇演讲稿所属的党派，<code>RED</code> 指共和党，而 <code>BLUE</code> 指民主党。所有单词和符号都已经被转为大写并由空格分隔方便处理。<code>train.txt</code> 有共和党演讲稿和民主党演讲稿各 23 篇，<code>test.txt</code> 有 6 篇共和党演讲稿，12 篇民主党演讲稿。</p>\n<p>明白了？那我们就开始吧。</p>\n<h2>捋捋思路</h2>\n<p>首先，我们需要考虑如何在文本分类中应用朴素贝叶斯。很简单，按朴素贝叶斯的思路，<strong>计算每个词在某一分类下的出现概率，然后将某篇文章的所有词的概率相乘，再乘以该分类的先验概率，就可以得到某篇文章在某一分类下的概率。</strong></p>\n<p>$$P(Class|Article) = P(Class)\\prod_{i}P(Word_i|Class)$$</p>\n<p>各个分类概率都计算完成后，概率最高的那个分类就是这篇文章可能所属的分类。这个思路的核心就是用词决定了文本风格，文本的不同类别用词会有差异，只要能量化这些差异就可以分类文本。在我们的例子中，我们可以从 <code>train.txt</code> 中统计各个词汇的出现情况，然后用 <code>test.txt</code> 中的数据按上面的算法验证我们算法的准确性。</p>\n<p>这个思路很简单也很清晰，但还有一些问题需要解决。<strong>第一，有的时候，我们的测试数据集中可能会出现一个在训练数据集中没有出现过的词语。这个时候，朴素贝叶斯的计算结果会是 0。</strong>如果我们把 0 乘进式子中，那就别想得到正常的结果了。所以，我们还需要对计算某一单词在某一分类中的式子稍加改进。使用拉普拉斯平滑，就可以避免出现概率为 0 的情况。别被名字吓到，拉普拉斯平滑是一种非常简单的平滑方法：在分子上 +1，在分母上加整个取值范围，这样就可以给整个分式加上非常微小的偏移，避免出现 0。</p>\n<p>$$\\begin{align} P(Word_i|Class) &amp; = \\frac{Word_iCountInClass}{AllWordCountInClass} \\\\ &amp; \\approx \\frac{Word_iCountInClass + 1}{AllWordCountInClass + UniqueWordCount} \\end{align}$$</p>\n<p><strong>第二，对于长文本，大部分词语在某一分类中的出现概率是远小于 1 的，加上长文本词汇量大，往往概率相乘的结果会非常小。</strong>受限于计算机处理浮点数的原理，精确处理这么小的数字是很麻烦的。幸好，运用一些简单的数学知识就可以将其转化为更精确的表达，<strong>那就是取对数。</strong></p>\n<p>首先，将概率计算结果取对数并不影响我们的计算结果。因为取对数是一个单调递增的操作，而我们计算概率只是为了排序选择概率最高的分类，因此取对数是不影响我们排序的。而把多项式取对数，等于把多项式的每一项取对数后相加。所以我们有：</p>\n<p>$$\\lg{\\Big(P(Class)\\prod_{i}P(Word_i|Class)\\Big)} = \\lg{P(Class)} + \\sum_i\\lg{P(Word_i|Class)}$$</p>\n<p>大部分情况下，在每一次取对数的时候，要取对数的数字的大小，即 \\(P(Word_i|Class)\\) 尚还在计算机能处理的范围内，<strong>因此我们可以放心地使用取对数的方法</strong>，避免计算机精度不够影响结果。</p>\n<p><strong>第三就是在某些情况下，可能会有部分词语干扰计算结果</strong>，如 and, is 这类的被大量使用的中性词。如果希望得到更好的结果，我们可以维护一个停用词表，在计算时排除停用词即可。或者，我们可以在计算完每个单词的出现数量后，排除数量最多的前 \\(N\\) 个单词，避免这些单词过多地影响计算。</p>\n<h2>写点代码</h2>\n<p>现在我们终于可以开始实战，写点代码了。我会用简单的 Python 来表达思路。好了，理一理思绪，第一步我们要做的，是统计训练数据集中的用词情况。具体来说，根据上面的思考，我们需要统计的有：</p>\n<ul>\n<li>每个单词在各分类中出现的数量</li>\n<li>各分类中的不重复词数量</li>\n</ul>\n<p>用 Python 简单表示如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\"># 读入数据过程略...\r\ndata_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ndata_blue = []\r\ndata_red = []\r\nword_count_blue = {}\r\nword_count_red = {}\r\n\r\nfor line_data in data_raw:\r\n    word_list = line_data.split(\" \") # 分隔单词\r\n    if word_list[0] == \"BLUE\":\r\n        for i in range(1,len(word_list)):\r\n            if not is_excluded(word_list[i]): # 判断是否为停用词\r\n                data_blue.append(word_list[i])\r\n                # 统计单词出现次数\r\n                word_count_blue.setdefault(word_list[i], 0)\r\n                word_count_blue[word_list[i]] += 1\r\n    elif word_list[0] == \"RED\":\r\n        # Class = red 时同理...\r\n\r\n#统计非重复词\r\nunique_words_blue = list(set(data_blue))\r\nunique_words_red = list(set(data_red))</pre>\n<p>训练过程到这里就结束了，计算机已经知道了各政党演讲的用词习惯。很简单吧？接下来我们就要使用测试数据集来测试准确度了。<strong>这里开始就涉及到朴素贝叶斯的计算了</strong>，可能会稍微复杂一点点。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">import math\r\n#读入测试数据过程略...\r\ntest_data_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ntest_data = []\r\n\r\nfor line_data in test_data_raw:\r\n    if line_data[0] == \"BLUE\":\r\n        content_data = line_data.split(\" \").pop(0)\r\n        test_data.append({\"class\": \"blue\", \"content\": content_data})\r\n    elif line_data[0] == 'RED':\r\n        # ...\r\n\r\nfor line_data in test_data:\r\n    posibility_blue = 0\r\n    for word in line_data[\"content\"]:\r\n        # 计算各单词概率，取对数后相加，使用了拉普拉斯平滑\r\n        if word in word_count_blue:\r\n            posibility_blue += math.log((word_count_blue[word]+1)/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n        else:\r\n            posibility_blue += math.log(1/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n    # 最后加上该分类概率的对数\r\n    posibility_blue += math.log(len(data_blue)/(len(data_blue)+len(data_red)))\r\n\r\n    # 计算 Red 同理...</pre>\n<p>计算完成后，我们就得到每篇演讲稿在各分类下的概率了。之后，简单的比较就能得出推断的分类：如果 \\(P(Red|Article)\\) 大于 \\(P(Blue|Article)\\)，那么这篇演讲稿就更可能是共和党的演讲稿，反之则是民主党的演讲稿。</p>\n<p>很好理解吧？那么这么简单的思路，准确性怎么样呢？对于我们的例子，这是我设置了个别停用词后的结果：</p>\n<pre class=\"EnlighterJSRAW\">+-----+-------+--------------+--------------+-------+-------+\r\n|   ID|  Class|        P(Red)|       P(Blue)|  Guess| Status|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|    1|   Blue|  -23204.68377|  -22998.67066|   Blue|      √|\r\n|    2|   Blue|  -16438.44625|  -16137.48257|   Blue|      √|\r\n|    3|   Blue|  -33468.81214|  -32567.61801|   Blue|      √|\r\n|    4|   Blue|    -8606.2193|   -8601.50426|   Blue|      √|\r\n|    5|   Blue|  -12430.97436|  -11935.70662|   Blue|      √|\r\n|    6|   Blue|  -44033.02883|  -43877.55367|   Blue|      √|\r\n|    7|   Blue|   -16947.2851|  -16758.57542|   Blue|      √|\r\n|    8|   Blue|  -26957.26997|  -26889.62444|   Blue|      √|\r\n|    9|   Blue|  -27503.73985|  -27249.21828|   Blue|      √|\r\n|   10|   Blue|   -20528.4457|   -19991.1248|   Blue|      √|\r\n|   11|   Blue|  -20337.96493|  -19860.12831|   Blue|      √|\r\n|   12|   Blue|  -28409.28489|  -28118.98017|   Blue|      √|\r\n|   13|    Red|  -13756.01015|  -14488.11751|    Red|      √|\r\n|   14|    Red|  -17221.22732|  -17710.15936|    Red|      √|\r\n|   15|    Red|  -17397.45136|  -17899.98659|    Red|      √|\r\n|   16|    Red|  -10724.69095|  -11092.77837|    Red|      √|\r\n|   17|    Red|  -10402.40027|  -10859.48681|    Red|      √|\r\n|   18|    Red|   -9371.53792|    -9669.6769|    Red|      √|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|                                      Total: 18/18, 100.0% |\r\n+-----------------------------------------------------------+</pre>\n<p><strong>100% 的准确率哦！</strong>事实上，对于我们的这个例子，就算不设置停用词，我们仍能达到 100% 的分类准确率。朴素贝叶斯分类的确很 NB 呢。</p>\n<h1>更进一步</h1>\n<p>我们的探索到这里就结束了，但如果你有兴趣，完全可以继续探索下去。我们的例子是一个非常简化的例子，在实际情况中，还有很多问题需要解决。比如，对于中文及类似语言，不存在拉丁语系的天然分词结构，而朴素贝叶斯的文本分类是基于单词的，那么<strong>中文的分词就会是个问题；</strong>再比如，对于朴素贝叶斯分类来说，<strong>词语之间的顺序是不影响分类结果的</strong>，但这就会导致“今天心情很好，但昨天不好”和“昨天心情很好，但今天不好”在朴素贝叶斯看来是一样的，要想获得更好的结果，我们必须<strong>考虑词语的顺序。</strong></p>\n<p>这些问题，今天我们就不再深究了，但你可以自己探索。比如，引入思路同样很简洁的马尔科夫链，我们就可以让计算机学会考虑词语间的顺序，不过那就会是另一个话题了。</p>\n","link":"https://flyhigher.top/develop/1989.html"},{"title":"MDx 中增强页面可访问性的细节","date":"2020-01-25 16:45:04","description":"\n<blockquote><p>这篇文章本来是打算发在 <a href=\"https://mdxblog.flyhigher.top/\">MDx Blog</a> 的，不过写到后来发现这篇文章相对来说还是有价值的，于是就将这篇文章转移到了无垠，MDx Blog 则不再发表这篇文章。</p></blockquote>\n<p>从 MDx 开发之初，增强页面的可访问性就被列为了一个重要目标。从 HTML 语义化，到 ARIA 地标，再到 <code>prefers-reduced-motion</code>，随着浏览器对于增强页面可访问性的支持功能越来越多，MDx 也在不断地更新，让更多的人都能毫无困难地浏览、查看由 MDx 渲染的网页。本文会详细说明一些 MDx 中增强页面可访问性的细节，<strong>如果你希望增强自己开发的网页的可访问性，本文可能会对你有所帮助。</strong></p>\n<h1>基础性增强</h1>\n<p>增强可访问性，最重要也是最基础的一点就是 HTML 语义化。通过使用 HTML 5 语义化标签和 ARIA Role 标签，我们可以很方便地<strong>将整个网页在语义上分为几部分，而这将有效地改善屏幕阅读器对网页的分析质量，使视力障碍用户更好地浏览网页。</strong></p>\n<h2>HTML 语义化</h2>\n<p><strong>HTML 语义化属于增强页面可访问性的基础中的基础。</strong>通过使用语义化的 HTML 标签，我们可以方便地为网页中的各部分标记功能而不影响页面样式。随着符合 HTML 5 的现代化网页成为主流，语义化标签已被很大一部分网站所支持，我也不过多赘述了。就举几个常用的“地标性”标签吧：</p>\n<ul>\n<li>\n<code>header</code> 标签标记页眉，默认样式同 <code>div</code>，不要把它和 <code>head</code> 搞混了</li>\n<li>\n<code>main</code> 标签标记页面的主要内容，默认样式同 <code>div</code>\n</li>\n<li>\n<code>article</code> 标签标记文章（在 HTML 5 中它指任何独立或可复用的文本），默认样式同 <code>div</code>\n</li>\n<li>\n<code>footer</code> 标签标记页脚，默认样式同 <code>div</code>\n</li>\n<li>\n<code>nav</code> 标签标记页面导航栏区域，默认样式同 <code>div</code>\n</li>\n<li>\n<code>aside</code> 标签标记侧栏，默认样式同 <code>div</code>\n</li>\n<li>\n<code>section</code> 标签标记“一组内容”，你可以把它看作是划定网页中一块区域的通用标签，默认样式同 <code>div</code>\n</li>\n</ul>\n<p>只要用这些标签替代 <code>div</code> 而不是无脑使用 <code>div</code> 就能提高页面的可访问性。MDx 使用了这些标签来增强页面的可访问性。</p>\n<h2>下一步，ARIA</h2>\n<p>有的时候，出于一些原因，我们没法使用语义化的 HTML 标签，或者没有合适的语义化标签来标记内容，这时候<strong>我们就需要使用 ARIA (Accessible Rich Internet Applications，可访问的富互联网应用)。</strong>ARIA 的基础用法很简单，只要在相应元素上加上 <code>role</code> 属性指定该元素的功能即可。下面是一个简单的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;div role=\"navigation\"&gt;\r\n  &lt;ul&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page A&lt;/a&gt;&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page B&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page C&lt;/a&gt;&lt;/li&gt;\r\n  &lt;/ul&gt;\r\n&lt;/div&gt;</pre>\n<p>通过 <code>role=\"navigation\"</code>，我们把一个 <code>div</code> 标记为了导航栏区域。实际上，对屏幕阅读器来说，这和 <code>nav</code> 标签在语义上是一致的。上一节中的例子都可以分别用以下 ARIA Role 表示：</p>\n<ul>\n<li><code>role=\"heading\"</code></li>\n<li><code>role=\"main\"</code></li>\n<li><code>role=\"article\"</code></li>\n<li><code>role=\"contentinfo\"</code></li>\n<li><code>role=\"navigation\"</code></li>\n<li><code>role=\"complementary\"</code></li>\n<li><code>role=\"region\"</code></li>\n</ul>\n<p>除此以外，MDx 还使用了 <code>role=\"banner\"</code> 和 <code>role=\"search\"</code> 来分别标记页面中的顶部栏和搜索表单。另外，<strong>有的时候 <code>role</code> 属性还需配合 <code>aria-*</code> 属性一同使用</strong>，具体规则比较复杂，我就不在这里赘述了，具体可参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles\">WAI-ARIA Roles - MDN</a>。</p>\n<h1>媒体查询来帮忙</h1>\n<p>CSS 的媒体查询其实是一个非常强大的特性，<strong>妥善利用其中的一些特性，我们可以在网页外观上大大增强网页的可访问性。</strong>除了已经烂大街的“对浏览器窗口大小”响应的媒体查询，我会介绍 3 个很少有网站充分利用的媒体查询。</p>\n<h2>print</h2>\n<p><code>print</code> 媒体查询其实已经“历史悠久”了，<strong>只要使用 <code>@media print {...}</code> 就可以创建只在打印页面时生效的样式。</strong>通过这种方式，我们可以让页面在打印时应用一套为打印优化的样式，增强页面在物理纸张上的可访问性。</p>\n<blockquote><p>维基百科是对打印样式做了单独适配的著名例子。</p></blockquote>\n<p><strong>由于在打印的情况下，页面已经离开了“可交互”的范围，还有分页这种在屏幕中无需考虑的问题，要让页面在物理纸张上仍能被轻松地阅读，我们需要做一些特殊的适配。</strong>直接来看一个例子吧。以下是 MDx 针对打印情况进行的一些特殊优化，样式的具体理由已经写在了注释中。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media print {\r\n    /*隐藏不必要的元素*/\r\n    header, .mdx-ad-after-article, .mdx-ad-in-article, .mdx-post-money, .page-footer-nav, .mdx-same-posts, .spanout button, .mdui-drawer, .mdui-overlay, .mdui-menu, .mdx-share-img-dialog, .mdx-share-wechat-dialog {\r\n        display: none!important;\r\n    }\r\n\r\n    /*使用下划线标记链接*/\r\n    article a {\r\n        text-decoration: underline!important;\r\n    }\r\n    /*由于纸张不可交互，在链接后显示链接到的 URL*/\r\n    article a::after {\r\n        content: \"(\" attr(href) \")\";\r\n    }\r\n\r\n    /*强制白底黑字*/\r\n    html &gt; body {\r\n        background-color: white!important;\r\n    }\r\n    article p {\r\n        color: rgba(0,0,0,.8)!important;\r\n    }\r\n\r\n    /*对于纸张上的长文章，衬线字体拥有更好的可读性。以下字体列表来自 fonts.css*/\r\n    article {\r\n        font: 13pt Georgia, \"Nimbus Roman No9 L\", \"Songti SC\", \"Noto Serif CJK SC\", \"Source Han Serif SC\", \"Source Han Serif CN\", STSong, \"AR PL New Sung\", \"AR PL SungtiL GB\", NSimSun, SimSun, \"TW\\-Sung\", \"WenQuanYi Bitmap Song\", \"AR PL UMing CN\", \"AR PL UMing HK\", \"AR PL UMing TW\", \"AR PL UMing TW MBE\", PMingLiU, MingLiU, serif!important;\r\n    }\r\n\r\n    /*除部分元素外，禁止在元素内部分页*/\r\n    * {\r\n        page-break-inside: avoid;\r\n    }\r\n    article p, article a, #comments, article {\r\n        page-break-inside: auto;\r\n    }\r\n}</pre>\n<p>MDx 自 1.9.3 版本起已经包含了对文章页的打印样式优化。可以很容易地看出，优化后的样式在物理纸张上将更容易阅读。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\" alt=\"\" width=\"1345\" height=\"1602\" class=\"aligncenter size-full wp-image-1959\"></a>\n<h2>prefers-color-scheme</h2>\n<p><code>prefers-color-scheme</code> 是最近才被浏览器广泛支持的一个媒体查询，但它的功能却很强大：<strong>响应系统级黑暗模式。</strong>这样，我们可以在开启黑暗模式的系统中让网页具有更好的可读性。不过由于这个媒体查询直到最近才被广泛支持，因此大部分网站对此并没有进行适配。</p>\n<blockquote><p>一些适配这一特性的网站：少数派、微信公众平台（文章页）等。</p></blockquote>\n<p>通过像这样的媒体查询，我们可以在系统启用黑暗模式时让页面实时响应：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    body {\r\n        background-color: #212121;\r\n        color: rgba(255, 255, 255, .7);\r\n    }\r\n}</pre>\n<p><code>prefers-color-scheme</code> 一共有 3 个可能值：<code>no-preference</code>, <code>light</code> 和 <code>dark</code>。你也可以不像上面的例子那样默认使用亮色样式并在黑暗模式下启用黑暗样式，而可以反过来将黑暗样式作为默认，用亮色样式覆盖。在不支持的浏览器上将会显示默认样式（即媒体查询不会生效）。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<h2>prefers-reduced-motion</h2>\n<p>看名字就猜得出，<code>prefers-reduced-motion</code> 是和 <code>prefers-color-scheme</code> 师出同门的媒体查询。因此，和 <code>prefers-color-scheme</code> 一样，它也是在最近才获得了浏览器的广泛支持。它的作用也很强大：<strong>响应系统的“减弱动态效果”模式。</strong>这对某些不喜欢甚至无法接受动画的用户可能很有帮助。要知道，对有些用户来说这甚至是医疗上的必要。使用如下的媒体查询，我们可以在系统启用减弱动态效果模式时让页面实时响应，减弱动画：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-reduced-motion: reduce) {\r\n    /*只是一个示例，实际情况中可以保留一些淡入淡出效果*/\r\n    * {\r\n        transition: all 0s!important;\r\n        transform: none!important;\r\n    }\r\n}</pre>\n<p><code>prefers-reduced-motion</code> 只有 2 个可能值：<code>no-preference</code> 和 <code>reduce</code>，在不支持的浏览器上该媒体查询不会生效。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\" alt=\"\" width=\"792\" height=\"515\" class=\"aligncenter size-full wp-image-1962\"></a>\n<h1>黑暗模式适配</h1>\n<p>黑暗模式可不是简单地切换到黑底白字这么简单。<strong>单纯地使用黑底白字会导致页面元素之间对比度过高，文字刺眼，反而降低了页面的可访问性。</strong>我在下面总结了几条应用在了 MDx 中的黑暗模式优化规则和 Google 推荐的优化规则：</p>\n<p><strong>一是避免黑底白字。</strong>黑底白字看起来真的很难受，事实上，深灰和浅灰是黑暗模式最好的配色。比较下方例子里的两段文本，毫无疑问深灰色背景和浅灰色文字搭配的样式的可读性要比黑底白字高很多。（p.s. 有时候这条规则在白底黑字时也适用）</p>\n<p><strong>二是更改部分元素的亮度和对比度以增强可读性。</strong>你可能已经注意到了，下面优化的例子里标题文字的颜色改变了。很明显，未优化的黑暗模式中标题可读性不如优化的版本。在实际中，我们通常可以通过 CSS 滤镜来实现这一更改。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    h1 {\r\n        /*反相颜色后再将色相旋转 180 度，使亮度反相*/\r\n        filter: invert(1) hue-rotate(180deg);\r\n    }\r\n}</pre>\n<p><strong>三是避免让图片过亮。</strong>未经处理的图片通常会导致过高的对比度，降低可读性。在 MDx 中，我选择降低图片的亮度来避免图片刺眼，而 Google 的建议则是使图片灰度，不过这会影响图片的整体观感。无论是哪一种方案，都可以使用 CSS 滤镜来轻松实现。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    img { \r\n        /*MDx 方案*/\r\n        filter: brightness(.8);\r\n        /*Google 方案*/\r\n        filter: grayscale(.5);\r\n    }\r\n}</pre>\n<div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是未优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是经过优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n</div>\n<h1>其他细节</h1>\n<p>还有一些细节，虽然简单，但不可或缺。我把一部分没有在上文提到的 MDx 中的细节列在了这里。</p>\n<p><strong>一是允许页面缩放。</strong>在开发响应式页面时，很多网站会在页面头部添加这样一个 <code>meta</code>：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"&gt;</pre>\n<p>这样的 <code>meta</code> 设定了页面的宽度，却也固定了页面的缩放比例，用户难以手动放大网页。<strong>这样的设置对一部分视力障碍用户非常不友好</strong>，以至于苹果决定在自家的浏览器上忽略禁止缩放的 <code>meta</code>。按照 Google 的推荐，如果你在 MDx 设置中启用了“允许页面缩放”，那么 MDx 会输出这样的 <code>meta</code> 标签，允许页面进行五倍以内的缩放：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=5\"&gt;</pre>\n<p><strong>尽管很多时候放大页面会导致页面结构被破坏，但这大大增强了页面的可访问性，利大于弊。</strong>因此，在 MDx 中，“允许页面缩放”是默认启用的。</p>\n<p><strong>二是在跨设备阅读时同步阅读记录。</strong>这属于 MDx 的“元老级”功能之一。注意到页面右上角的那个“在其他设备上继续阅读”的按钮了吗？如果你滚动页面后重新点击它，你会发现二维码发生变化了。通过在二维码中记录阅读进度，用户在扫描二维码切换设备阅读时，MDx 在新设备上会自动滚动到和原设备上一致的位置——好吧，目前基于百分比的算法在某些情况下可能不太准，但我已经设计了一个更复杂但更精确的阅读进度记录算法，之后就会更新到 MDx 中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\" alt=\"\" width=\"1000\" height=\"574\" class=\"aligncenter size-full wp-image-1976\"></a>\n<p><strong>三是避免 Web 字体阻塞渲染。</strong>如果你在页面中使用了 Web 字体，在字体加载完成之前，浏览器可能不会渲染任何文本，这就导致用户可能需要等待一段时间才能开始浏览网页。Google 推荐使用 <code>font-display: swap;</code> 来向浏览器指定网页的 Web 字体渲染策略。这一规则会提供一个比较短的等待周期，如果在这段时间内 Web 字体没有完成加载，那么浏览器会以 fallback 字体渲染文本。任意时刻一旦 Web 字体完成渲染，浏览器就会使用 Web 字体重新渲染文本。这在大多数情况下都能满足可访问性的需求。</p>\n<p><strong>四是确保 html 元素具有合适的 <code>lang</code> 属性。</strong>这一属性声明了页面的主要语言，浏览器可以据此调整渲染策略，或者触发自动翻译；屏幕阅读器也能更好地阅读网页。</p>\n<p><strong>五是确保页面主要内容在丢失/禁用了 Javascript 甚至 CSS 的情况下仍然可用。</strong>作为一个以内容为主的网站，MDx 在禁用了 Javascript 的情况下页面主要内容仍然可用。这不只是为了 SEO，更是为了保证页面的可访问性。的确，目前的情况下，如果开启了 Lazyload，MDx 在禁用 Javascript 的情况下图片的确无法显示，但我会在后续版本中尽可能的优化这一问题。</p>\n<h1>附录：媒体查询开发技巧</h1>\n<p>有的时候，光有 CSS 响应媒体查询还不够，我们可能需要在 Javascript 中实时响应媒体查询。用如下代码就可以很简单地响应媒体查询：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let mql = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\r\nmql.addListener(handleMediaChange);\r\n\r\n//在添加监听后先调用一次，获得当前查询结果\r\nhandleMediaChange(mql);\r\n\r\nfunction handleMediaChange(mql){\r\n    if(mql.matches){\r\n        //查询匹配\r\n    }else{\r\n        //查询不匹配\r\n    }\r\n}</pre>\n<p>在开发上述媒体查询的过程中，我们需要频繁地切换系统的相应模式或者调出打印窗口。<strong>实际上，Chrome 提供了更简单的调试方法：</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1946\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\" alt=\"\" width=\"723\" height=\"681\"></a>\n<p>只要在这里更改模式，相关媒体查询就能实时生效。这不会影响其他标签页，在关闭开发者工具之后也会自动恢复系统设置。</p>\n","link":"https://flyhigher.top/develop/1912.html"},{"title":"MDx Blog 现已随 MDx 1.9.5 发布","date":"2020-01-22 17:54:11","description":"<p>随着 MDx 发布 1.9.5 更新，<a href=\"https://mdxblog.flyhigher.top/\" rel=\"noopener noreferrer\" target=\"_blank\">MDx Blog</a> 现已建立。我将会在 MDx Blog 中分享一些开发故事并发布 MDx 更新日志。</p>","link":"https://flyhigher.top/diary/1905.html"},{"title":"GitHub 2019 统计无垠版","date":"2020-01-12 13:02:00","description":"\n<h1>缘起</h1>\n<p>2019 年底，我突发奇想想要自己统计一番 GitHub 上存储库的一些信息。尽管 GitHub 有自己的<a href=\"https://octoverse.github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">年度统计</a>，我还是想试着自己爬取一下，说不定能挖出什么有意思的信息，何况这是我第一次有机会处理比较大量的数据，也算是一种学习的过程吧。于是花了一下午写了个简单的爬虫（时间都花在增加 Rate Limit 上了...），然后扔在了两台服务器上开始跑（GitHub  API 真是好文明）。</p>\n<p>从 2019.11.21 3 时到 2020.1.12 24 时的 52 天 21 小时内，我的爬虫一共爬取了<strong>与 2,024,705 个用户有关<sup>*</sup>的 14,651,923 个公共存储库的基础信息</strong>，平均每秒爬取 3.2 个存储库。据 GitHub 的官方数据计算，我爬取了大约 15% 的存储库信息，但由于封禁库和私有库的数量未知，我暂时无法确定我爬取的存储库占公共库的比例。同时由于存储库数量较多，基本可以认为爬取到的样本在时间尺度上已经足够随机，可以通过统计得出一般结论。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\" alt=\"\" width=\"700\" height=\"606\" class=\"aligncenter size-full wp-image-1892\"></a>\n<p>爬到自己了，合影.jpg</p>\n<p>那么下面就来看看统计出来的一些结果吧。爬虫的技术细节和数据集下载放在文末。</p>\n<p>* 指这些用户拥有至少一个库</p>\n<h1>统计信息</h1>\n<p><strong>以下统计结果均基于已放于文末的数据集。</strong>由于爬虫爬取的时间跨度长，加上我并没有完整爬取 GitHub 所有存储库，因此我<strong>不能保证以下统计结果符合真实情况</strong>，各位可以下载数据集或自行爬取进行验证。</p>\n<h2>一些数据</h2>\n<div>\n<div>\n<div>\n<span>3,120,930</span><br>总爬取用户数</div>\n<div>\n<span>44.7%</span><br>的存储库创建<br>自 Fork</div>\n<div>\n<span>6.59%</span><br>的账户被删除或<br>封禁<sup>1</sup>\n</div>\n<div>\n<span>23,913</span><br>单用户拥有最大<br>库数量<sup>2</sup>\n</div>\n</div>\n</div>\n<p><sup>1</sup> 基于用户 ID 规律合理推断<br><sup>2</sup> 统计范围仅限于当前数据集</p>\n<p>比较出乎我意料的是创建自 Fork 的存储库的占比。我预估这样的存储库占比不会太低，但没有想到能接近一半。此外单用户拥有最大库数量也大大超出了我的预期，<a href=\"https://github.com/pombredanne\" rel=\"noopener noreferrer\" target=\"_blank\">pombredanne</a> 这个用户名下拥有将近 24k 的存储库，不过绝大多数都是 Fork 来的，在情理之中。此外<strong>这个数据集中</strong>拥有最多存储库的账户其实是一个组织 <a href=\"https://github.com/gitpan\" rel=\"noopener noreferrer\" target=\"_blank\">gitpan</a>，这个组织拥有 36,377 个存储库。</p>\n<h2>语言</h2>\n<p><canvas></canvas><br>\n首先必须要说明的是，在这个榜单中我<strong>排除了 HTML 和 CSS</strong>，因为在严格意义上它们不属于“编程语言”。如果把它们计算进来的话，分别有 640,368 个和 361,425 个存储库的主要语言分别是 HTML 和 CSS，这样在这份榜单中它们可以排到第 6 和 第 10 名。JavaScript 毫无疑问获得第一，第二名 Python 的热度则和 JavaScript 相差将近一半。<strong>此外还有 2,448,486 个存储库未能识别出语言，占比 16.7%。</strong>在上面的榜单之外，与机器学习和数据科学相关的语言还有 Jupyter Notebook 排名第 13，R 排名 20，Julia 排名 43。</p>\n<p>说实话这份排名和 GitHub 官方的排名<strong>差别很大</strong>，除了前三名，后面的基本都不太一样。我的排名统计结果完全基于 GitHub 对于存储库的主要语言识别，加上我的存储库数据不完整，和官方的数据不同是很正常的，可以做一个参考，但大概率还是官方排名更加准确。</p>\n<h2>许可证</h2>\n<p><canvas></canvas></p>\n<p>自 GitHub 推出许可证功能以来，拥有许可证的存储库比例升升降降，却始终没有超过一半。<strong>选择一个合适的许可证对项目的良好发展真的很有帮助</strong>，要了解如何选择合适的许可证，请参阅<a href=\"https://www.runoob.com/w3cnote/open-source-license.html\" rel=\"noopener noreferrer\" target=\"_blank\">这篇文章</a>。</p>\n<p><canvas></canvas></p>\n<p>对于拥有许可证的存储库，MIT<del> 麻省理工许可证 </del>总是占比最大的；第二则是 Apache-2.0 许可证。此外，WTFPL 许可证也挤入了前 15 名。</p>\n<h2>星标</h2>\n<p><canvas></canvas><br>\nStar 数量毫无疑问是一个存储库受欢迎程度的体现，而 Star 数高的项目基本上大家都了解过。<strong>截至爬取结束时间</strong>，GitHub 中 Star 数最多的库是 <a href=\"https://github.com/freeCodeCamp/freeCodeCamp\" rel=\"noopener noreferrer\" target=\"_blank\">freeCodeCamp</a> <del>非常完美的驼峰命名法</del>，其次则是著名项目 <a href=\"https://github.com/996icu/996.ICU\" rel=\"noopener noreferrer\" target=\"_blank\">996.ICU</a>。<a href=\"https://github.com/vuejs/vue\" rel=\"noopener noreferrer\" target=\"_blank\">Vue</a> 现在的 Star 数已经稳压 <a href=\"https://github.com/facebook/react\" rel=\"noopener noreferrer\" target=\"_blank\">React</a> 一头，Vue YES! 此外 <a href=\"https://github.com/sindresorhus/awesome\" rel=\"noopener noreferrer\" target=\"_blank\">awesome</a> 也挤进第七名。<br><canvas></canvas><br>\n由于 Star 需要时间积累，新项目的 Star 数量很可能是比不过老项目的，这就会导致有实力的新项目无法出现在榜单中。因此我还统计了日均 Star 数，试图通过日均 Star 数来反映项目受欢迎的程度。<strong>由于正热门的项目会比老牌热门项目有优势，这一项的统计范围是 2020-01-01 之前的所有存储库。</strong>996.ICU 和 freeCodeCamp 再次出现在前 10 名，而最近的热门项目 <a href=\"https://github.com/wenyan-lang/wenyan\" rel=\"noopener noreferrer\" target=\"_blank\">wenyan</a> 则飙升至第 2 名。此外还有 <a href=\"https://github.com/menzi11/BullshitGenerator\" rel=\"noopener noreferrer\" target=\"_blank\">BullshitGenerator</a>，即最近热门的“狗屁不通文章生成器”和 <a href=\"https://github.com/evil-huawei/evil-huawei\" rel=\"noopener noreferrer\" target=\"_blank\">evil-huawei</a> 分列第 3 和第 5 名。<br><canvas></canvas><br>\n说实话这个曲线<strong>比我预估的陡多了。</strong>你可能已经注意到了，这个图表的横轴不是均匀缩放的，实际上曲线要比看起来陡很多。同时受爬取方式的影响，GitHub 中 Star 数较少的存储库数量远比我爬取到的多。也就是说，<strong>实际情况下曲线远比这个图表上的陡。</strong>拿点 Star 不容易啊。</p>\n<h2>名称</h2>\n<p><canvas></canvas><br>\n终于知道了原来存储库的名称是有长度限制的...尽管最长有 100 位，<strong>大部分人还是喜欢 8 位长的存储库名。</strong>此外 1 位长的名称也比我预估的要多一些。举几个存储库名称长度为 100 的例子吧。</p>\n<ul>\n<li>testing-something-elsetesting-something-elsetesting-something-elsetesting-something-elsetesting-some</li>\n<li>acts_as_validated_config_so_app_will_not_run_in_random_situation_and_qa_gays_will_not_cry_to_you_whe</li>\n<li>............................................________-....................................-.---......</li>\n<li>----------------------------------------------------------------------------------------------------</li>\n<li>nyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyan</li>\n</ul>\n<p>...创造力有够丰富的。</p>\n<p><canvas></canvas></p>\n<p>最近 GitHub 上有一种奇怪的风气，那就是建立 Awesome 合集<del>骗 Star</del>。看起来 Awesome 存储库满地都是，甚至还出现了关于 Awesome 的 Awesome 合集这种迷惑行为。于是我统计了一下，<del>还好，</del>占比<del>才</del> 0.5% 不到<del>，Awesomer 们任重而道远呐</del>。</p>\n<p><canvas></canvas></p>\n<p>尽管要在 github.io 上托管网站，存储库不一定要以 .github.io 结尾，但我还是统计了一下。拥有这类存储库的用户比我预想的要少一些，看来还有很多人没有完全发挥 GitHub 的完整实力啊<del>（比如我 Doge）</del>。同时<strong>这类存储库在所有存储库中占比 1.12%</strong>，看起来不多<del>，不过至少比 Awesome 多</del>。<br><canvas></canvas><br>\n看得出来 GitHub 对于用户名长度的限制是 1-40 位。用户名最短的 27 位占据了 <code>A-Z</code> 外加 <code>-</code> 的所有可能，而用户名最长的则是一个组织 <a href=\"https://github.com/UOIT-RESEARCH-database-information-group\" rel=\"noopener noreferrer\" target=\"_blank\">UOIT-RESEARCH-database-information-group</a>。不知道是巧合还是某种规律，<strong>最受欢迎的用户名长度和存储库名称长度一样，都是 8</strong>，有点意思。</p>\n<h2>创建时间</h2>\n<p><canvas></canvas><br>\n由于我并没有完整爬取所有存储库，我只能以相对值来统计每月新增存储库数量的变化趋势。<strong>在这个图表中，我将 2017-09 的数据设为了 100%。</strong>你一定一眼就能注意到 2017 年 6,7,8 月的“一柱擎天”。<del datetime=\"2020-02-05T09:18:30+00:00\">我第一次看到这个数据的时候的确愣了一下，不过就着这条新闻看就能明白为什么了：<strong>2017 年 6 月微软收购 GitHub。</strong></del></p>\n<blockquote><p>重新确认了一下，微软收购 GitHub 比这个高峰晚了一年，目前我对这个高峰没有什么很好的解释，如果你有什么思路的话欢迎评论。</p></blockquote>\n<p><strong>需要注意的是这张图表中我排除了 Fork 存储库</strong>，因为 Fork 存储库在 API 中的创建时间是原始存储库的时间，会影响整体趋势。此外，GitHub 中还有一个创建于 2007 年 10 月 29 日的存储库，那就是 <code>id: 1</code> 的...</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"mojombo\" data-mdxgithubp=\"grit\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/mojombo/grit\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>而它的创建者正是 GitHub 的创始人之一 Tom Preston-Werner。</p>\n<h1>一些有趣的结果</h1>\n<p>当初打算自己爬的目的之一就是想看看能不能挖出什么有意思的信息，结果真的有一些不挖不知道的信息。</p>\n<h2>奇怪的存储库</h2>\n<p>在爬取到的所有存储库中，<strong>有 3 个存储库是“无主”的</strong>，即它们的 owner 属性为空。这三个存储库的基本信息如下。</p>\n<div class=\"mdui-table-fluid mdui-table-hoverable\"><table class=\"mdui-table\">\n<thead><tr>\n<th>ID</th>\n<th>名称</th>\n<th>Forked</th>\n<th>Star</th>\n<th>语言</th>\n<th>许可证</th>\n<th>创建于</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>72385291</td>\n<td>vscode-redprl</td>\n<td>否</td>\n<td>10</td>\n<td>TypeScript</td>\n<td>apache-2.0</td>\n<td>2016-10-31 08:50:01</td>\n</tr>\n<tr>\n<td>181218346</td>\n<td>electron-sys</td>\n<td>否</td>\n<td>10</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-14 03:20:56</td>\n</tr>\n<tr>\n<td>181391880</td>\n<td>node-sys</td>\n<td>否</td>\n<td>6</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-15 09:33:08</td>\n</tr>\n</tbody>\n</table></div>\n<p><strong>更奇怪的是这三个存储库“无主”的情况还不一样。</strong>第一个存储库可以通过 <code>/repositories</code> 这个 GitHub API 找到， <a href=\"https://api.github.com/repositories?since=72385290\" target=\"_blank\" rel=\"noopener noreferrer\">这个链接</a>中的第一个存储库就是它；而其余两个存储库甚至无法在 <code>/repositories</code> API 中找到。不过就算能在 API 中找到第一个存储库，它的 <code>html_url</code>，即 <code>https://github.com//vscode-redprl</code> 仍然是不可访问的。这可能是 GitHub 早期的一个 Bug 导致的，不过我仍然对爬虫是如何找到这三个存储库的以及这些 Stars 是哪里来的感到好奇。</p>\n<h2>奇怪的用户名</h2>\n<p>在爬虫爬了一段时间以后，API 中突然开始出现大量的以 fdp 开头的 18 位乱码作为用户名的用户。这些用户拥有的存储库和 starred 的存储库都为 0，而他们的 <code>html_url</code> 为 404。以下是几个例子。</p>\n<ul>\n<li>fdpEpolGCEdQX4ZlRJ</li>\n<li>fdp8XaVrdtmDZnO5pR</li>\n<li>fdp8XRAGnwAOkTr2Ya</li>\n</ul>\n<p>由于我的爬虫并没有超过 Rate Limit，所以我排除了这是污染数据的可能。我怀疑这可能是某种 Bot 账户，于是一边更新爬虫过滤掉了这些用户，一边给 GitHub 支持发邮件问了具体情况。过了两天 GitHub 回复我说这些是<strong>被自动判为可疑进而被封禁的用户</strong>（原话是 they have been flagged by our automated measures for detecting suspicious behavior）。<del>想到我正在疯狂爬取 GitHub，突然害怕.webp</del></p>\n<p>行吧。</p>\n<h1>技术细节</h1>\n<p>爬虫使用 Python3 编写，数据库使用 MySQL。爬虫共使用了 4 个 API Token，在两台服务器上分布式爬取。爬取思路为：</p>\n<ol>\n<li>通过 <code>/users</code> API 遍历用户，每个请求最多获取 30 个用户信息</li>\n<li>循环 30 个用户，分别获取 <code>/users/&lt;user_name&gt;/starred</code> 和 <code>/users/&lt;user_name&gt;/repos</code> API 中的存储库信息，每个请求最多获取 100 个存储库信息，超过 100 个的分页获取</li>\n<li>提取存储库信息，插入数据库。对于已存在的存储库，更新数据</li>\n<li>获取下 30 个用户信息</li>\n</ol>\n<p>由于爬取过程中我多次调整了爬虫逻辑，爬虫爬取到的用户 ID 区间并非连续的，具体区间为1-839586, 14800001-14885493 及 28965251-31161101。</p>\n<h1>免责声明</h1>\n<p>本站会尽可能地提供准确信息，但本站不对此文章中信息的准确性和即时性及带来的任何影响负责。</p>\n<p>本站不代表 GitHub 官方，本文仅供学习之用，请不要将本文内容直接用于任何商业项目中。</p>\n<h1>数据集下载</h1>\n<p>导出的 SQL 文件大约为 1.38GB，全部放在了 GitHub 上（在危险的边缘试探.webp</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"github-analysis-2019\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/github-analysis-2019\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>此外我也提供了 MEGA 下载，链接<a href=\"https://mega.nz/#F!juxm3A6T!7Vwpzi82W1OFrqTLu1A1pQ\">在这里</a>。</p>\n","link":"https://flyhigher.top/develop/1564.html"},{"title":"Milkice 跨年红包解谜 Writeup 及无垠跨年红包解谜答案","date":"2020-01-02 04:29:19","description":"\n<blockquote><p><del>又到了水文章的时间呢</del></p></blockquote>\n<p>先说明一下，这篇文章原本不是在计划中的，而原来说好的「在路上的两篇」文章<del>绝对不会咕</del>。我自己的红包答案本来打算直接塞在年度总结里的，结果发现稍微有些长，再加上我还花了一些时间解了<a href=\"https://milkice.me/\">奶冰</a>的红包解谜游戏，就打算把两个解谜过程放在一起单独写一篇文章。<del>真是个水文章的好理由</del>（被打死</p>\n<h1>奶<del> 子 </del>冰的红包</h1>\n<p>奶冰的红包题目比我的难多了，所以让我们先从难的开始吧。首先看一下<a href=\"https://milkice.me/2019/12/31/2019-summary/\">题目</a>：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1524\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\" alt=\"\" width=\"746\" height=\"410\"></a>\n<p>入口是 <code>happy.2020.milkice.me</code>，扔到浏览器里面表示找不到 IP，那么大概率就是 DNS 的 TXT 记录了，查一下得到 <code>nb2hi4dthixs63ljnrvwsy3ffzwwkl3tivrvezluomxxg5dsmvqw2ltqmnqxa3th</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1525\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\" alt=\"\" width=\"896\" height=\"278\"></a>\n<p>第一眼没看出来是什么编码，直觉是 BaseXX 系列的编码，加上提示“不只有 Base64”，可以推断出是 Base32，转大写解码得到 <code>https://milkice.me/sEcRets/stream.pcapng</code>。是个 URL，下载得到一个 Wireshark 文件，打开一看是和某 USB 设备的通讯抓包。<del>不会做，不做了。</del></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1526\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\" alt=\"\" width=\"1500\" height=\"813\"></a>\n<p>奶冰提示我“Google 上搜得到”，结合第二条提示搜索“wacom pcapng”找到了<a href=\"https://blogs.tunelko.com/2017/02/05/bitsctf-tom-and-jerry-50-points/\">这篇文章</a>（<del>这™就是答案啊</del>）。看起来是一样的套路，即通过解析数据得到数位板上画的内容，于是按文章的思路筛选出数位板发给主机的数据，导出，然后再用 tshark 导出文本数据。本来我想直接用文章中的 POC 的，结果折腾半天因为源的蜜汁原因库没装上，于是按文章中给出的数据结构自己写了段代码，分别导出 X、Y 轴数据扔进 Excel 画散点图。（<del>别问我为什么用 Excel，因为我手边没有更好的工具了</del>）</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1528\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\" alt=\"\" width=\"1280\" height=\"530\"></a>\n<p><span>翻车现场之一</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1539\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\" alt=\"\" width=\"1000\" height=\"286\"></a>\n<p><span>懵逼奶冰.webp</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1533\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\" alt=\"\" width=\"1500\" height=\"462\"></a>\n<p>看得出有手写文字，不过是上下颠倒的，翻转图片得 <code>https://milkice.me/2020/uso.zip</code>。是个 zip，下载打开一看，有密码。<del>不会解，不做了。</del> 第一反应是暴力解密码，但是暴力跑了 15 分钟还是没有跑出来。暴力太不优雅了，肯定不是正确思路，但奶冰什么都不肯说了。不过在这时我终于发现第一个红包口令码就藏在压缩包的注释中，Get。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1544\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\" alt=\"\" width=\"806\" height=\"593\"></a>\n<p>然而题还没解完，回去看提示，看到提供了 osu 谱面下载，于是打算不管怎么样先下载来看看。然而 osu 谱面下载要登录，只好又花了几分钟找到第三方站点，成功下载。这时候可以注意到 uso.zip 里有个同名文件（432314 Mike Greene - Bill Nye the Science Guy Theme Song (Chinese Intro).osz），可以联想到是明文攻击。好吧，上 ARCHPR，十秒解出。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1530\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\" alt=\"\" width=\"462\" height=\"643\"></a>\n<p><span>现场还原.jpg</span></p>\n<p>.osz 文件并不是明文，猜测是压缩包（和 .pptx 一个思路嘛），于是改后缀 .zip 顺利打开。然后红包口令码就藏在奶冰的 .osu 文件中了，由提示可知是明文，打开即可得到。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1542\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\" alt=\"\" width=\"457\" height=\"255\"></a>\n<h1>我的红包</h1>\n<p>相比起来<a href=\"https://flyhigher.top/diary/1464.html\">我的题目</a>就简单很多了嘛...三天时间一共发出了 25 个红包，包括一位重复领取的🌚，比前几年还是多了一些的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\" alt=\"\" width=\"500\" height=\"306\" class=\"aligncenter size-full wp-image-1554\"></a>\n<p><span>这位同学以后请不要多次领取🌚</span></p>\n<p>那么来看看答案吧。</p>\n<h2>第一阶段</h2>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>首先观察字符串，可以发现 <code>.</code> <code>/</code> <code>_</code> 等一些 ASCII 字符原样留在了字符串中，而其他字符被由 <code>=</code> 和十六进制构成的某种编码所替代。如果你正好有所了解，你应该能认出这是 Quoted-printable 编码，这是一种常用于邮件中的编码，可以用<a href=\"https://mothereff.in/quoted-printable\">这个页面</a>解码。如果你不了解，你也应该可以发现这种编码和 URL 编码非常相似。如果你把 <code>=</code> 替换为 <code>%</code>，那么你就可以用各种方法顺利地把它按 URL 编码来进行解码，最后可以得到 <code>αхtоn.іm/соdе_оf_2020_⒈mρз</code>。这个字符串里大部分字符都不是 ASCII 字符，只是长得像而已。根据第一个提示“全是 ASCII 字符”，按样子把字符串用 ASCII 字符抄一遍，可以得到最终 URL 为 <code>axton.im/code_of_2020_1.mp3</code>。</p>\n<h2>第二阶段</h2>\n<p>下载音频，可以听出音频是经过某种处理的白噪音。白噪音的特点是各频段的功率都均匀分布，在白噪音上做文章，很容易就可以联想到线索藏在频谱中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1534\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\" alt=\"\" width=\"1200\" height=\"719\"></a>\n<p>频谱被处理成了 24x3 的网格，结合第二条提示“24x3，横向读取”可以推断出是将频谱当作二进制读取，得到 <code>01111001 01110010 01100011 00101110 01101101 01100101 00101111 00110010 00110000</code>，转为 ASCII 字符可得 <code>yrc.me/20</code>。</p>\n<h2>第三阶段</h2>\n<p>打开上一步得到的页面，提示要求输入十位数密码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1536\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\" alt=\"\" width=\"663\" height=\"460\"></a>\n<p>如果你在上一步注意到了这个音频文件奇怪的属性，你可以反应过来这里的密码就是 <code>2000202020</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1537\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\" alt=\"\" width=\"421\" height=\"651\"></a>\n<p>如果你没有注意到，查看页面代码可以看到一条注释 <code>&lt;!-- Tips: the attribute of the audio --&gt;</code> 将你引导向音频文件的属性。输入密码，解锁即可进入下一步。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1535\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\" alt=\"\" width=\"397\" height=\"223\"></a>\n<h2>第四阶段</h2>\n<p>可以看到是一张图片，内容为“<del>.JPG</del>”和“.ZIP”。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter size-large wp-image-1532\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n<p>和去年一样的套路，下载图片，将后缀名改为 .zip 然后打开，可以看到 README.txt。</p>\n<h2>最后一步</h2>\n<p>查看 README.txt 的内容，可以了解到需要去 🤔.axton.cc 获取红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1538\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\" alt=\"\" width=\"1131\" height=\"278\"></a>\n<p>扔到浏览器里会出现奶冰同款找不到 IP，于是可以联想到 TXT 记录。唯一的问题是 🤔 这个 Emoji 需要如何处理。域名使用 Punycode 将 Unicode 字符转换为 ASCII 字符，特点是以 <code>xn--</code> 开头。如果你把上面这个域名扔进浏览器，你会发现它变成了 <code>xn--wp9h.axton.cc</code>。然后查询 TXT 记录，即可得到红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1527\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\" alt=\"\" width=\"804\" height=\"557\"></a>\n","link":"https://flyhigher.top/develop/1519.html"},{"title":"无垠 2019 年度总结","date":"2019-12-29 12:25:52","description":"\n<p>又是时间飞快的一年...写 2018 总结的情景似乎还在眼前，转眼居然已经到 2019 年末了。</p>\n<p>2019 年，发生了太多事情，包括真的转折了人生的高考，这也导致我博客更新的不多（难以置信居然才更了两篇...），不过两篇技术性文章已经在路上了，可以期待一下。</p>\n<p>2019 年我也学了不少东西（单指技术方面），比如终于认真学了 Vue（但是还要练手）。书买了一大堆，看完的倒是没几本orz</p>\n<p>呼，好吧，是时候回顾一下充满坎坷的这一年了。2019 年还剩下最后两天，希望 2020 年，我能做得更好。</p>\n<h1>一些数据</h1>\n<p>照惯例先来看看一些数据吧。今年是统计系统完整统计了的第二年，终于可以和去年的数据比较一下了。以下数据的统计范围是 2019年1月1日0时至 2019年12月29日20时。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 26,901 (<span>+4%</span>)，年 PV 76,583 (<span>+3%</span>)，日均 UV 73.7，平均停留时间 5分13秒 (<span>-13.8%</span>)，平均跳出率 53% (<span>+20.5%</span>)。一年有效文章数 2 (<span>-50%</span>)，新增评论 439 条。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\" alt=\"\" width=\"1000\" height=\"1143\" class=\"aligncenter size-full wp-image-1511\"></a>\n<p>有趣的是今年文章数腰斩，访问数反而小有提升。<del>如果我哪天不更新了，访问数是不是可以无限大呢？</del></p>\n<p>今年博客最大的改动就是把整体风格切换到了 Material Design 2（当然这是 <a href=\"https://flyhigher.top/develop/788.html\">MDx</a> 中的可选功能，给自己打个广告2333），此外还有比较失败的 WebP 改造计划，因为和缓存冲突已经回滚了。<a href=\"https://flyhigher.top/develop/1245.html\">ABS 系统</a>进展不大，主要是真的没有太多时间，还是要再学习一个。</p>\n<h2>个人主页</h2>\n<p>虽然个人主页的 TODO List 列了老长，但今年完全没有更新，也没有推广，从今年 8 月底开始还莫名被某墙认证了，直到 11 月底才恢复，于是今年总访问量比去年少了很多，</p>\n<p>有多少呢？这么少：总 UV 2,141 (<span>-65.9%</span>)，总 PV 2,744 (<span>-66.6%</span>)，日均 UV 6 (<span>-65.9%</span>)，平均停留时间 62秒 (<span>+19.2%</span>)。主要来源是知乎和 V2EX，还有一些甚至是从微信来的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\" alt=\"\" width=\"1000\" height=\"1103\" class=\"aligncenter size-full wp-image-1512\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 8 次，新增 171 commits，2 种语言的翻译，Star 数增加了 175，现有 408。感谢所有人的支持，尤其是 <a href=\"https://github.com/Sn0bzy\" rel=\"noopener noreferrer\" target=\"_blank\">Hasan CAN</a>, <a href=\"https://github.com/yechs\" rel=\"noopener noreferrer\" target=\"_blank\">Ye Shu</a>, <a href=\"https://github.com/StarryLeo\" rel=\"noopener noreferrer\" target=\"_blank\">StarryLeo</a>, <a href=\"https://github.com/DCTewi\" rel=\"noopener noreferrer\" target=\"_blank\">冻葱Tewi</a>, <a href=\"https://github.com/syfxlin\" rel=\"noopener noreferrer\" target=\"_blank\">Otstar Lin</a> 等为 MDx 做出了不小贡献的你们。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：<a href=\"https://flyhigher.top/photograph/1309.html\">上手</a> DJI OSMO Pocket</li>\n<li>四月：最后一次参加浙江省普通高中学业水平考试</li>\n<li>五月：MDx 喜提 300 Stars</li>\n<li>六月：高考 <del>炸了，差亿点点上浙大</del>\n</li>\n<li>六月：入手了 Oneplus 7 Pro</li>\n<li>六月：和同学一起去成都重庆旅行</li>\n<li>六月：第一次近距离感受到地震</li>\n<li>六月：<a href=\"https://flyhigher.top/diary/1411.html\">入手</a>了一台雷蛇灵刃 15，目前是主力机</li>\n<li>七月：参与组织 THE Hack 2019 活动</li>\n<li>七月：面基了 <a href=\"https://itroy.cc/\" rel=\"noopener noreferrer\" target=\"_blank\">Tory</a>, Bie Shi 和 <a href=\"https://oxz.me/\" rel=\"noopener noreferrer\" target=\"_blank\">FHYunCai</a>\n</li>\n<li>八月：一个人去厦门武汉转了一圈，拍了自己的第一个 Vlog</li>\n<li>八月：入手了一个 Kindle Paperwhite 4，没有泡面可以压，于是用来看英文小说了</li>\n<li>八月：加入 TEDxNingbo 志愿者团队</li>\n<li>八月：和 Ralph 面基</li>\n<li>八月：入手了一个 Yubikey</li>\n<li>九月：人生第一次参加雅思考试 <del>7分，蛮开心的</del>\n</li>\n<li>十月：入手了一个 Samsung Galaxy Watch Active 2 <del>觉得不值</del>\n</li>\n<li>十一月：MDx 达到 400 Stars</li>\n<li>十一月：为 TEDxNingbo 设计开发的 H5 上线</li>\n<li>十一月：入手了第一台胶片相机，试图入坑胶片摄影</li>\n<li>十一月：参加 TEDxNingbo 2019 大会</li>\n<li>十二月：<del>我 Cytus II 入门了</del>\n</li>\n</ul>\n<h1>跨年红包</h1>\n<p>这算「传统习俗」了。和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2020年1月2日。</p>\n<p>今年的解谜旅程，从下面这个字符串开始。</p>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>由于今年的题目比以前稍微难了一些，所以今年的红包金额还是比较大的，而且不限量，尽你所能试一试吧。</p>\n<p>一点你可能用得上的提示：URL 里全是 ASCII 字符 / 24x3，横向读取。</p>\n<p><a href=\"https://flyhigher.top/develop/1519.html\">答案</a>已公布。</p>\n<h1>跨年海报</h1>\n<p>这算是另一个「传统习俗」（笑）。因为我有做跨年海报的习惯，所以以下就是今年份的海报啦。</p>\n<p>用了 C4D+PS，还有我的一整个下午。</p>\n<p>提前祝各位新年快乐！</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter wp-image-1467 size-large\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n","link":"https://flyhigher.top/diary/1464.html"}]