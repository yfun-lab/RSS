[{"title":"开学季 | 少数派正版软件商城专属特惠活动，助你新学期有新气象","date":"2022-09-06 10:50:23","description":"正值开学季，少数派软件商城为大家又特约了多款口碑、质量都非常优秀的相关应用的优惠活动，希望能够帮大家提升学习、工作的效率。<a href=\"https://sspai.com/post/75561\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75561"},{"title":"React 为什么重新渲染","date":"2022-09-06 08:29:00","description":"\n<p>更新（重新渲染）是 React 的重要特性 —— 当用户与应用交互的时候，React 需要重新渲染、更新 UI，以响应用户的输入。但是，React 为什么会重新渲染呢？如果不知道 React 为什么会重新渲染，我们如何才能避免额外的重新渲染呢？</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/186432/20/28325/37613/631725bbEf2ff226e/66b99021df66578b.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/react-re-renders-101/\">https://blog.skk.moe/post/react-re-renders-101/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/react-re-renders-101/"},{"title":"App+1 | 为笔记本 CPU 减负，让 Windows 11 的续航加分：能源之星 X","date":"2022-09-06 07:00:00","description":"让 Windows 11 的任务管理器飘满文明的「小绿叶」。<a href=\"https://sspai.com/post/75565\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75565"},{"title":"除了鲍威尔讲话，全球央行年会还揭露了什么？","date":"2022-09-06 06:00:50","description":"\n<p data-pid=\"fkROKsFY\">【一句话介绍】 本期原创聊一些宏观方法论的东西，重在解读杰克逊霍尔央行年会上鲍威尔发言以外的亮点内容。其中，IMF和BIS都倾向于认为，暂时性停止的概率较小，即三低（低通胀+低增长+低利率）的好日子恐怕一去不复返了。</p>\n<p data-pid=\"oH8A-66T\">鲍威尔在杰克逊霍尔央行年会（Jackson Hole）上短短八分钟的发言“惊悚”了市场，股市继续调整（下图）。</p>\n<p data-pid=\"YzpA3f43\">图：标普500走势</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-68842c4e5a081fdf96e176b682077dae_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"738\" data-rawheight=\"552\" class=\"origin_image zh-lightbox-thumb\" width=\"738\" data-original=\"https://pic3.zhimg.com/v2-68842c4e5a081fdf96e176b682077dae_r.jpg\"></figure><p data-pid=\"3OAh5inC\">市场其他分析已对其发言进行了各种花式分析和解读，总的来说，鲍威尔的演讲和我们之前公开的文章相差不大（前文：<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/Ca3tdZBh1Tvi53_g9CUdWA\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">市场反弹之后，还有哪些难关挡在前？</a>），即联储将坚持加息抑制通胀、加息的幅度看数据说话，这否定了市场会前关于2023年会很快降息的预期（见下图，政策利率预期上升、美10年利率上升）。</p>\n<p data-pid=\"afC4oKxF\">图：对2023年5月3日的联储加息预期概率</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-58a632d4157520a0dc0344a38b5bea44_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"863\" data-rawheight=\"490\" class=\"origin_image zh-lightbox-thumb\" width=\"863\" data-original=\"https://pic1.zhimg.com/v2-58a632d4157520a0dc0344a38b5bea44_r.jpg\"></figure><p data-pid=\"xkAP0PPm\">图：美国10年期利率</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-6bedf8882b947cc53d48615c75066f9c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"738\" data-rawheight=\"566\" class=\"origin_image zh-lightbox-thumb\" width=\"738\" data-original=\"https://pic1.zhimg.com/v2-6bedf8882b947cc53d48615c75066f9c_r.jpg\"></figure><p data-pid=\"6KRBgBTE\">图：联储官员今天的讲话，也对上周会议的宗旨进一步确认</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-03da8544ab3fb7ced8a6fcbfe0862ff0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1117\" data-rawheight=\"615\" class=\"origin_image zh-lightbox-thumb\" width=\"1117\" data-original=\"https://pic1.zhimg.com/v2-03da8544ab3fb7ced8a6fcbfe0862ff0_r.jpg\"></figure><p data-pid=\"Se_h-fT9\">欧元在八月也成功跌破欧美汇率平价（下图），继续印证我们之前文章的提法。</p>\n<p data-pid=\"Pau4jSRA\">图：欧元兑美元汇率</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-69d35bab8a4b94ac69467379e2432911_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"738\" data-rawheight=\"566\" class=\"origin_image zh-lightbox-thumb\" width=\"738\" data-original=\"https://pic2.zhimg.com/v2-69d35bab8a4b94ac69467379e2432911_r.jpg\"></figure><p data-pid=\"AXRfxFrT\">为避免自我重复，本期我们就换换口味，聊一些宏观方法论的东西。重在解读杰克逊霍尔央行年会上（Jackson Hole）鲍威尔发言以外的亮点内容：</p>\n<p data-pid=\"YuqPBsuV\"><i>一，IMF和BIS：结构性因素和总供给变迁将使通胀持久化；</i></p>\n<p data-pid=\"6ZMmNSPY\"><i>二，讨论美国财政-货币-通胀三者之间相互钳制的工作论文。</i></p>\n<p data-pid=\"ELRoEfwg\">每年的杰克森霍尔会议作为一个立足当下，并着重着眼未来的会议，对<b>议题和文献的选择</b>绝非来者不拒，不可能什么阿猫阿狗的第三方声音都放进来；而是<b>有目的的选择，借信得过的他人之口，来表达或者试探一些自己尚未定论的想法。</b></p>\n<p data-pid=\"PK3ibC85\">每年的会议，都会放出一些对中长期市场走势和交易策略构建极有意义的论述和参考文献，比如2020年那臭名昭著的平均通胀目标制的节奏，就是在杰克森霍尔会议（Jackson Hole）带起来的，并深刻影响了今年年初之前的美国货币政策和市场交易主题。</p>\n<p data-pid=\"CPnx1tnV\">而今年2022的会议主题，则是，“重新评估经济和政策的制约因素”（英文为：Reassessing Constraints on the Economy and Policy），很显然，在战争、疫情和国际地缘政治和力量对比深刻变化的时期（我国称为：百年未有之大变革），欧美发达国家央行已经认识到了发达资本主义世界的经济发展和宏观政策、特别是货币政策，已经是“<b>老革命遇上新问题</b>”。</p>\n<p data-pid=\"6vu6DE1Y\">图：欧美过去30年那三低（低通胀+低增长+低利率）的好日子恐怕一去不复返了</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-efc925842caf46bc17b96c1ad8ad016e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"839\" data-rawheight=\"480\" class=\"origin_image zh-lightbox-thumb\" width=\"839\" data-original=\"https://pic3.zhimg.com/v2-efc925842caf46bc17b96c1ad8ad016e_r.jpg\"></figure><p data-pid=\"yuwhHQCy\">这个会议主题，隐含着过去二三十年通胀可控、经济增长可期和货币政策好搞的简单模式或已结束；等待欧美发达国家的，将是通胀通缩不停交替、经济增长难言乐观和宏观政策走钢丝的高难度<b>杂技</b>。</p>\n<p data-pid=\"Pk0fDZc9\">图：通缩通胀、经济增长、宏观政策间的平衡，犹如在三个鸡蛋上跳舞，踩碎哪个都不行。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-b62ca25a224742b21162777f82782ac7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1658\" data-rawheight=\"999\" class=\"origin_image zh-lightbox-thumb\" width=\"1658\" data-original=\"https://pic4.zhimg.com/v2-b62ca25a224742b21162777f82782ac7_r.jpg\"></figure><p data-pid=\"YYxixax2\">会上大体讨论了：就业最大化、潜在产出水平、财政制约和货币制约。</p>\n<p data-pid=\"fba8RHBP\">就核心问题而言，会议重点关注covid之前的宏观趋势（低通胀+低增长+低利率）是暂时性停止、还是永久性消失这个问题。</p>\n<p data-pid=\"98dXvlbx\">对这个核心问题，作为最重要的两家和“钱”打交道的国际多边机构，IMF和BIS（国际清算银行，是全球最早的多边金融机构和总清算银行）都倾向于认为，暂时性停止的概率较小，即<b>三低（低通胀+低增长+低利率）的好日子恐怕一去不复返了。</b></p>\n<p data-pid=\"QTDYAb79\">也许这期内容会稍显枯燥，但金融市场最肥美的利润，本质上也多来自宏观大势的周期力量。就像前几期的内容那样，若能认真读进去，应该会很有收获。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h2><b>结构性因素支持高通胀</b></h2>\n<p data-pid=\"Bwl_rO4L\">IMF在杰克逊霍尔央行年会（Jackson Hole）的发言标题是：《战争与疫情如何塑造未来的货币政策》，BIS的题目是：《顺流逆流：总供给和宏观稳定的故事》。相比之下，IMF的发言更具框架性，而BIS更加关注总供给的动态变迁。</p>\n<p data-pid=\"B4Vh1IdX\">IMF表示，<b>任何现有的主流模型都已无法解释之前和当下时段的通胀飙升</b>，而且当前的欧美主要发达国家已经出现了居民部门的<b>短期通胀预期的“脱锚”现象</b>。随着战争的持续进行、极端气候的不断演绎、劳动力供给失衡的长期化，全球宏观大势已出现范式偏移。</p>\n<p data-pid=\"Bsib2j4T\">图：主流的传统模型已无法解释当前的通胀动因</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-03327b7ae41fb2f14858e5c17903e407_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1143\" data-rawheight=\"594\" class=\"origin_image zh-lightbox-thumb\" width=\"1143\" data-original=\"https://pic4.zhimg.com/v2-03327b7ae41fb2f14858e5c17903e407_r.jpg\"></figure><p data-pid=\"wpnjxtQe\">图：美国和英国一年期家庭部门的通胀预期剧烈变动、并有脱锚风险</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-a0fdcb49d08f746e179f2fac95af886a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"655\" data-rawheight=\"528\" class=\"origin_image zh-lightbox-thumb\" width=\"655\" data-original=\"https://pic3.zhimg.com/v2-a0fdcb49d08f746e179f2fac95af886a_r.jpg\"></figure><p data-pid=\"XiSSuPGV\">而BIS更是直言不讳的指出，即使Covid和战争造成的供应中断恢复，供给端对通胀的影响仍然很大。这是因为全球经济正处于历史性变化的风口浪尖（即“百年未有之大变局”），诸多抑<b>制通胀的总供给顺风，似乎正在变成逆风。</b></p>\n<p data-pid=\"tUtDVEsC\">如果是这样，近期通胀的回升可能要比<b>杰克逊霍尔央行年会</b>（Jackson Hole）<b>前市场以为的要更加持久。</b></p>\n<p data-pid=\"11UmZIux\"><b>顺风转逆风的三个趋势：地缘政治、逆全球化和人口变迁。</b></p>\n<p data-pid=\"wPfhm1r4\">甚至在俄乌冲突之前，地缘环境就已越来越紧张，国际间的合作原则也是越发不善。这股逆流，一定程度反映了先前全球化的不可持续：<b>国家内部和国家之间的利益分配失衡</b>，以及本地治理与全球机制间的冲突。</p>\n<p data-pid=\"-JLasQ6R\">愈发的不平等或不平衡，引发了民粹主义。而全球价值链的由此重置，或将伴随<b>异常高昂的成本代价。</b></p>\n<p data-pid=\"nJJq7qJ_\">BIS还指出，不光是这些顺风正在转成逆风，新的宏观逆风也在出现。</p>\n<p data-pid=\"Q1g18osU\">特别是，在<b>气候变化</b>的威胁下（人类命运共同体），有形的手正在迫使资源进行前所未有的<b>政策性重新分配</b>。这或许会加剧战争引发的粮食危机和能源瓶颈。而越来越多的极端天气和相互关联的全球粮食生态，增加了供应中断的风险和更高、更波动的价格，更不用说持续上升的人力成本了。</p>\n<p data-pid=\"RhQ4miIA\">此外，先前为摆脱化石燃料的预期（如，碳达峰）也阻碍了对传统能源的投资，使得在清洁能源足够满足需求之前，全球的能源供给存在一段<b>窘迫的真空期</b>，这大大推高了通货膨胀。</p>\n<p data-pid=\"Nf6DI7fq\">图：连新能源的旗手马斯克(Elon Musk)也开始对传统化石能源和人口问题发声。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-66b544795760be3a97aedbd8168d723a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"987\" data-rawheight=\"698\" class=\"origin_image zh-lightbox-thumb\" width=\"987\" data-original=\"https://pic3.zhimg.com/v2-66b544795760be3a97aedbd8168d723a_r.jpg\"></figure><p data-pid=\"SI8lDllB\">BIS和IMF给出的“药方”包括：</p>\n<p data-pid=\"TbVOI5MV\"><b>货币方面</b>，吸取70~80年代的经验教训，中央银行们<b>必须坚决行动以避免通胀预期继续脱锚</b>（就像鲍威尔自己在会上说的那样、而应邀发言的国际权威机构的“第三方声音”在某种意义上也是在为他的“逆市”发言来背书）；</p>\n<p data-pid=\"qKAzUfp7\">对于各国的已很有限的<b>财政资源</b>，则应投入到长期的结构性改革中去（下图显示，欧美的结构性经济改革一直处于长期停滞状态，目前的宏观乱局也是长期改革停滞带来的总代价）。</p>\n<p data-pid=\"beCCCWjO\">图：欧美发达国家的结构性改革长期停滞</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-15f51b81f2cce85aa0cda0b5f53a271a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"813\" data-rawheight=\"453\" class=\"origin_image zh-lightbox-thumb\" width=\"813\" data-original=\"https://pic3.zhimg.com/v2-15f51b81f2cce85aa0cda0b5f53a271a_r.jpg\"></figure><p data-pid=\"W9EAHRh6\">但是三思认为，BIS和IMF给出的财政建议，只是<b>想得很美</b>，而在欧美发达国家的实际中，几乎无法落地，<b>更何况，</b>这些建议与这些机构自己的通胀分析就是<b>天然自相矛盾的</b>。</p>\n<p data-pid=\"NzDNi1eL\">特别是在财政方面：IMF提到<b>人口结构变迁将会增加财政的医疗保障</b>和养老开支，让本已窘迫的有限财政更加窘迫（先不说老龄化压力了，这些国家的负债本已就不低）；</p>\n<p data-pid=\"5CFkxmH7\">而BIS提出的用有限财政去<b>给长期滞后的结构性改革补课</b>，则属于<b>“大病用小药”</b>。举个例子，美国一些政客提出要<b>重构全球产业链</b>，靠个每年<b>几十亿几百亿的财政法案根本于事无补</b>，只够造势吆喝；</p>\n<p data-pid=\"k8rmgq7N\">再者说，既<b>然两大国际机构同时承认了欧美民粹主义的抬头，那么民粹主义又怎能推动理性财政呢？</b>千古难题吧。</p>\n<p data-pid=\"94glYZXc\">自然而然，我们就想到一个问题：欧美发达国家当前这种<b>财政和货币政策同时受到高通胀制约且目标还不相容</b>的困局，究竟如何是好？或者从根本上说，这个问题是否有现实解答？</p>\n<p data-pid=\"v0ikCvTc\">对此，我们就给大家介绍今年杰克森霍尔会议上的一篇工作论文：《财政的通胀约束》。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h2><b>恶化的财政信誉将推高通胀</b></h2>\n<p data-pid=\"QOXABAsA\"><b>在享受了20年的低通胀之后，欧美发达国家的通胀会消退还是持续？</b></p>\n<p data-pid=\"pv60V4_A\">杰克逊霍尔央行年会（Jackson Hole）上的这篇工作论文认为，这<b>取决于财政当局在稳住大规模财政失衡方面的可信度。尽管货币政策对抗通胀有一定的作用，但已经不是决定性的。</b></p>\n<p data-pid=\"32U5vnVq\">当财政当局被认为无法扭转现有的<b>财政失衡时，市场会押注当局将允许通胀上升</b>以确保国债的可持续性（类似常申凯的金圆券和宋代蔡京的币制改革）。</p>\n<p data-pid=\"_igY5eJU\">若严重的财政失衡再叠加财政信誉减弱，将导致通胀趋势偏离央行的长期通胀目标。</p>\n<p data-pid=\"1Np_GZKO\">只有当公共债务能通过可信的财政计划成功稳住时，货币当局才能掌控通胀（就像80年代的美伶宗将通胀给压下去，可不是靠美联储沃克尔的一己之力）。</p>\n<p data-pid=\"WdDJRJsK\"><b>宽松的财政政策与旨在稳定低通胀的货币框架之间存在不相容性。</b></p>\n<p data-pid=\"GugSZB-H\">当<b>通胀由财政主导时</b>（财政刺激诱发通胀，同时通胀也使债务稀释），<b>若再叠加上货币紧缩</b>，很可能<b>就将通胀变为滞胀</b>。这类财政滞胀，源于巨额债务下的财政信誉逐渐恶化，以及市场认识到货币当局立的牌坊不足以抵消财政当局的预期行为。</p>\n<p data-pid=\"JtJSwn-6\">图（基于脉冲响应模拟，理解吃力的读者可跳过）：若降低政策组合中的财政主导权重，滞胀将得到控制。要控制财政引发的通胀问题，需让市场相信财政政策是与预期通胀水平相适应的。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-5f0d1592a1c79d61a2af61cd4a3b2e5a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1016\" data-rawheight=\"381\" class=\"origin_image zh-lightbox-thumb\" width=\"1016\" data-original=\"https://pic3.zhimg.com/v2-5f0d1592a1c79d61a2af61cd4a3b2e5a_r.jpg\"></figure><p data-pid=\"2noWJAby\">通过构建“财政主导的政策”和“货币主导的政策”模型和数据模拟，这篇工作论文发现：成本推动的通胀冲击对经济和通胀只有暂时的影响。Covid大流行之后，美国回归财政政策主导的可能性增加，<b>虽然财政主导+货币配合有助于复苏，但也导致通胀急剧上升。单靠货币紧缩，并不能遏制通胀上升。</b></p>\n<p data-pid=\"HCUdHn_S\">这类持续高通胀的风险，本质上源于天量的公共债务和失信的财政纪律。美联储在80年代初战胜大通胀的手段放在今天可能无效。战胜大流行后的大通胀，需要改造旨在为无限制政府债务融资的财政框架，以及民选当局已近刚性的公共支出增加。</p>\n<p data-pid=\"xHagERUE\">结合杰克逊霍尔央行年会（Jackson Hole）上的这篇工作论文，我们<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/st3XpOCDf21xcbyvfTnfVQ\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">前文提到美国中期选举因素</a>就很重要了，因为美国通胀能否降落，根本上取决于两党的财政政策是否可持续、以及公众对财政-货币政策的平衡预期。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h2><b>未来关注什么？</b></h2>\n<p data-pid=\"_WwLxatA\">上述提及的这些杰克逊霍尔央行年会（Jackson Hole）上的亮点，虽然距当下的市场可能没那么贴近，但可以通过这些信息<b>一窥世界上最关键的金融机构都在想什么</b>、什么是他们当下最关心的国际宏观问题。</p>\n<p data-pid=\"cZL0bofc\">我们一直相信，短期的交易反应能力和策略正确与否，有很大一块是取决于对中长期宏观因素的深入理解和把握，长和短、多和空，在哲学上来讲可能就是对立统一的。</p>\n<p data-pid=\"9grWou4r\">比如，1998年后的股票价格/债券收益率正相关性已经受到今年大通胀的考验，那么我们现在能否就下结论说债券不再是抵御股市疲软的对冲工具了呢？明年或者下个季度能否还做股债配对交易，怎么做？</p>\n<p data-pid=\"XON_kVI5\">图：1998年后的股票价格/债券收益率正相关性在今年受到了大通胀的考验</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-764493954c124b991bc228ef6635563a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1090\" data-rawheight=\"462\" class=\"origin_image zh-lightbox-thumb\" width=\"1090\" data-original=\"https://pic3.zhimg.com/v2-764493954c124b991bc228ef6635563a_r.jpg\"></figure><p data-pid=\"cctiSKk3\">只有当深入研究了诸如本文为大家总结的这些本源解释、或是央行家们阐述中长期宏观变动的工作论文，才可能给上述问题一个稳健的答案。比如说，参考本文第一部分IMF和BIS文章中关于长期结构性因素的论述，也可以参考本文第二部分讨论美国财政-通胀-货币三者关系的工作论文。</p>\n<p data-pid=\"sbgjOdKy\">中长期的结构性变迁，往往意味着基于历史时间序列的惯性预测可能不太有意义；而政策间的相互抵消以及宏观变量的互为制约，又意味着对短期走势随便拍脑袋是危险的；但综合本次杰克逊霍尔央行年会的各项议程，我们还是倾向于认为：<b>美债利率可能没那么容易就掉下去。</b></p>\n<p data-pid=\"Vwt5VEBZ\">落实到交易实践，今年市场上迄今最为灵验的美林美银资金流报告就指出，秋季交易还是得行就市，一切以美10债利率走势为转移：如果债券收益率在接下来的 4~8 周构成“双顶”（即美债10年期利率未能超过 3.48%），秋季的交易主题将变成收益率峰值和利差峰值（下图），股市企稳。反之亦然。</p>\n<p data-pid=\"eFSsfyZW\">图：欧美投资级债券的CDS走势</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-fa607b3bd90e3535df8c1f401092f2c4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"552\" data-rawheight=\"415\" class=\"origin_image zh-lightbox-thumb\" width=\"552\" data-original=\"https://pic1.zhimg.com/v2-fa607b3bd90e3535df8c1f401092f2c4_r.jpg\"></figure><p data-pid=\"SP2we0Tu\">而如果利率继续攀升，那些缺乏真实业绩支撑的热门科技股、或者以科技成长股为主的纳斯达克指数可适当平仓，毕竟，它们从某种意义上说就是个<b>利率的简单衍生品</b>； </p>\n<p data-pid=\"a0JQiTSc\">图：美国热门科技股（以Meta为例），与30年美债利率高度负相关</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-621449ddb815902b0e20cd373818e54c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"548\" data-rawheight=\"410\" class=\"origin_image zh-lightbox-thumb\" width=\"548\" data-original=\"https://pic1.zhimg.com/v2-621449ddb815902b0e20cd373818e54c_r.jpg\"></figure><p data-pid=\"T_RF5I-R\">但如果金融条件收紧的太快，传导至实体经济一并恶化，那么升高的失业率或将让散户当前“逢低买入”策略结束。</p>\n<p data-pid=\"d7CD6CLz\">图：美国另一些大型科技股（例如 AAPL），则与就业情况高度正相关</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-42e8eb8493c90e7b235931e5c46f8fff_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"439\" data-rawheight=\"329\" class=\"origin_image zh-lightbox-thumb\" width=\"439\" data-original=\"https://pic4.zhimg.com/v2-42e8eb8493c90e7b235931e5c46f8fff_r.jpg\"></figure><p data-pid=\"LM_g0_5T\">最近正值特殊时期，一些话题不太方便直接聊。秋天结束之前，我们主要还是多给大家分享、解读一些有助于长期交易的专业文献，希望能带来更多启发。</p>\n<p data-pid=\"zFwqSjm-\">这些文章虽然看起来只讨论了欧美市场，但涉及到的分析，或许也能应用到其他地方（比如说日本？韩国？…？）。</p>\n<p data-pid=\"aYazcgqP\">最后，给大家分享一个段子：</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-6bc35ae5ec1d6c84b758216a4706cfa9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"766\" data-rawheight=\"420\" class=\"origin_image zh-lightbox-thumb\" width=\"766\" data-original=\"https://pic2.zhimg.com/v2-6bc35ae5ec1d6c84b758216a4706cfa9_r.jpg\"></figure><p data-pid=\"h58H0mBo\">对于宏观研究者，上面这个段子或许能让大家会心一笑。</p>\n<p data-pid=\"qpTwhLeo\">其中还是蛮有道理的，就像调侃美联储的那句：“什么叫全球”，的确也反应了某些以美国为中心的金融体系研究，不一定能照搬到其他体系。</p>\n<p data-pid=\"HM5DMaWv\">但无论如何，对未来的宏观市场来说，BIS俱乐部里的央行圈子或已不再是故事主角，未来更应关心的，是掌舵人的脸色。</p>\n<p data-pid=\"ip0bTGXm\"><b>-DDDD-</b></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/lonodn?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">金丝雀码头工</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/561595557?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价推理游戏类型「海龟汤」？","date":"2022-09-06 05:39:02","description":"\n<p data-pid=\"8X67FA_y\">我写了一个有关海龟汤的别的回答，发现还有很多值得聊的东西可以展开，就在这个问题下面写一些散点。</p>\n<a href=\"https://www.zhihu.com/question/481172877/answer/2630198672\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://picx.zhimg.com/v2-c469d33916559dc62e8554717f64de1a_qhd.jpg?source=b1748391\" data-image-width=\"1291\" data-image-height=\"735\" class=\"internal\">如何评价手机游戏《你已经猜到结局了吗》？</a><hr>\n<p><img src=\"https://pica.zhimg.com/v2-82dfb8cd4f4a223146d62d13aaf741f0_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"783\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-82dfb8cd4f4a223146d62d13aaf741f0\" data-watermark-src=\"v2-b511c837c1ddc27c4c7faea48735b20a\" data-private-watermark-src=\"v2-cd5ed5e6ec1782ed36f05b804c88c9a6\"></p>\n<h2>1.海龟汤的故事逻辑性的成立动机不是最重要的，在猜测的过程中不断靠近故事真相才是最重要的。</h2>\n<p data-pid=\"EeFiZDxa\">有很多故事，它的汤底甚至可以形成新的汤面。比如有一个叫做黑猫的海龟汤，汤面是“当我被警察抓住，走出门看到一只黑猫的时候，我才意识到我杀错了人”。而汤底则是“黑猫的报恩和我与邻居的矛盾产生的信息差”。</p>\n<p data-pid=\"eM24FSep\">可是在这个故事里，我不断的喂这只黑猫，我喂他的动机是什么没有说，我和邻居的过节是什么也不重要。</p>\n<p data-pid=\"ZjMwJCtS\">那么它就可以变成一个全新的故事，让新的出题人去补充细节。</p>\n<p data-pid=\"8KXDRTh0\">同样的，我们仔细看海龟汤的汤面，很多时候汤面的信息的提供是相当残缺的，不像大量的其他的推理作品，他会尽可能的把线索摆在故事的最开始，然后让读者通过前面的细节推导，最后能够得到与这个作者相同的智力对决的乐趣。</p>\n<p data-pid=\"kJiYKb6G\">那些残缺的信息，他们从根本上来说是需要向出题人去不断询问才能获得的。也就是说，如果将海龟汤游戏当做是推理游戏的话，那必然是不合格的推理游戏——如果我们认为推理游戏只包括本格推理的话。</p>\n<p data-pid=\"VCJj-9nP\">但是显然推理作品它经过了很多变化，社会派推理也算一种，不一定真的要去构筑一个细节丰富满满的作品，或者说一个简短的叙事结构，而是想从这个故事的讲述背后获得一些类似于精神分析方面的认知。</p>\n<p data-pid=\"IqzMMNHm\">如果说本格推理营造的是密室、完美犯罪、不在场证据，那么海龟汤所要推理的部分就不是这些，他们更多想问的是这件事为什么会发生？</p>\n<p data-pid=\"ujeldzRA\">当然有的时候也会是以一种陌生化的表达来讲述一个看似日常的故事。</p>\n<p data-pid=\"Uif1QK51\">也就是说海龟汤它其实更接近于诗歌表达，以一种含混的又能够解释的朦胧感去完成对于这件事的表述。</p>\n<p data-pid=\"eQmkwOR8\">同样的一个汤面，不一定只对应一个汤底。出题人可以设计出完全不同的故事，但他们呈现的是同一个结果。当然，反之亦然。</p>\n<p data-pid=\"BQjOVmQ6\">《你已经猜到结局了吗？》游戏里就曾经用过好几个相似但不同的微妙的童话故事，或者是耳熟能详的传说来进行重新解释。</p>\n<hr>\n<p><img src=\"https://picx.zhimg.com/v2-db0e33976322f2c7dbae52355b3fe8ad_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"858\" data-rawheight=\"460\" data-watermark=\"original\" data-original-src=\"v2-db0e33976322f2c7dbae52355b3fe8ad\" data-watermark-src=\"v2-2463b99d07b39436aa70f7b34c9fa20c\" data-private-watermark-src=\"v2-33107f9f06174bf7836abba8dd868648\"></p>\n<h2>2.在出题人回答问题的时候，有两种非常态的回答方式，分别是“是也不是”和“与此无关”。</h2>\n<p data-pid=\"SvJF-8II\">其实任何一个来自于海龟汤的靠近真相的询问，都可以用是也不是的方式去回答。</p>\n<p data-pid=\"AsrtEXXH\">从什么时候开始会出现是也不是的回答呢？我觉得很有可能是来自欧美地区起源的黑故事集。目前我们所知道的海龟汤有两个起源，一个起源于日本，另外一个起源于欧美。在过去的传闻中，有很多说海龟汤是FBI用来验证是不是变态杀人犯、心理异常人的一些案件，再加上黑故事集的源头是欧美国家，我们就会发现这种对于是也不是的回答，其实就是一种欧美新怪谈文学的思路。</p>\n<p data-pid=\"w0G-mhNA\">那就是对于神秘力量会更加倾向于屈从他，而不是解释他：比如说收容措施文学、规则类怪谈以及克苏鲁。在这些文学作品中，他外在的氛围环境是天然形成的，人们只需要去感受他，感受着其中的怪谈之处，而不需要去反复追问，这个怪谈是怎么产生的，这就叫做屈从他。</p>\n<p data-pid=\"09bijwv-\">是也不是，在一定程度上加重了游戏玩家的理解难度，将整个故事又推向一个扑朔迷离的氛围之中，那就形成了一股神秘的迷雾。</p>\n<p data-pid=\"n0Cg1I2C\">比如那个经典的以海龟汤为情节的故事。</p>\n<p data-pid=\"oKfiei1g\">“他曾经喝过海龟汤吗？”出题人当然可以给出“是也不是”的回答，虽然客观上他没有喝过海龟汤，但是在主观上他认为他喝过。当他给出这个回答的时候，在喝海龟汤这件事情上，就陷入了迷雾之中。</p>\n<p data-pid=\"-pI8rRbO\">而我们谈到“与此无关”则是它的反面。在讨论是也不是的时候，一旦出现这样的回答，那么这个点就和这个故事有着相当密切的关系。而与此无关，则意味着这个故事的部分细节是毫不重要的，那我们就要回到汤底的设置上了。</p>\n<p data-pid=\"R5lBcBJw\">如果说汤底和汤面的交替过程里出现了与此无关的信息，那么是否可以说明这两段文字之间的落差有空隙？如果一个设计较为严谨的海龟汤玩家受到汤面的强烈影响，会很难问出与此无关的讯息，或者说不重要的信息——当然这就又要求汤底变成了一个拥有人物小传的故事，它变成了一个只是像海明威所说的那种冰山一角的方式的一种呈现。</p>\n<p data-pid=\"LXvqwisq\">在这个意义上，海龟汤就非常符合冰山理论的写作要求。</p>\n<p data-pid=\"BykXfOh5\">当然也正如一个报名的提问者，可以用一种万能金句式的提问方式来解决问题。比如老番茄在玩猜猜猜游戏的时候，就提出了一个非常精妙的问题“他是一个自然人吗？”这个问题只要提出来，就可以在很大程度上切割掉很多内容“多人共用账号，官方机构账号，单人账号”，同时带有数量和自然人的表述，很难给出“是又不是”的回答。</p>\n<p data-pid=\"GN48HFZG\">那么在海龟汤里有没有这样能够直切重点的问题呢？答案是“是”。</p>\n<p data-pid=\"5Cg-KA1k\">请问汤底有汤面没有提到过的隐藏人物吗？</p>\n<p data-pid=\"-ZuAL3oL\">你记不能回答与此无关，又不能回答是也不是，所构筑的叙述性诡计与不可靠叙述，在这个问题上就非常直接的被揭开了。</p>\n<p data-pid=\"J-ldrKAR\">回到那个海龟汤的故事，当你提出这样的问题之后，出题人只能够老老实实的回答“是”。然后你就可以继续追问：隐藏人物是他的三代血亲吗？如果不是，那是通行意义上的好朋友吗？</p>\n<hr>\n<p><img src=\"https://pic2.zhimg.com/v2-5a7b53e4e8caf90e33e33b606394f7e5_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"284\" data-rawheight=\"177\" data-watermark=\"original\" data-original-src=\"v2-5a7b53e4e8caf90e33e33b606394f7e5\" data-watermark-src=\"v2-daaf164e57c634545fdc8957fa81f802\" data-private-watermark-src=\"v2-5dd7bd22bcb66d245d517979a2cbf94c\"></p>\n<h2>3.海龟汤的最初版本带有某种强烈的异质性。</h2>\n<p data-pid=\"1lKobtBM\">海龟汤的最初传说有好几种，比如来自于日本的二ch论坛，强调的是脑洞大开与奇妙物语；来自FBI检察反社会人格的心理判断；那些充满着神秘谜团的黑暗故事。</p>\n<p data-pid=\"mtrG5q4Z\">不管是哪一种，他都强调从内容到形式全方位的陌生化与异质性。</p>\n<p data-pid=\"KknBK8Nh\">首先，故事的内容本身就是带有一种神智异常的状态，里面有很多让正常人逻辑难以理解的匪夷所思的故事。比如那个妹妹参加葬礼回去之后就把姐姐杀了的故事，谜底是她又想看到这个帅哥，我们会觉得一个正常人是都不出这种事的。</p>\n<p data-pid=\"BvVCmjyB\">可是谁来规定正常与异常呢？这种异常的人的精神状态其实和上个世纪六七十年代的存在主义文学和荒诞主义文学中的主人公们都是高度相似的。帕斯卡就曾经说过，人类必然会疯癫到这种地步，不疯癫也只是另一种形式的疯癫。同样的托斯托耶夫斯基自己也在日记中写到人们不能用禁闭自己的邻人来确认自己的神智健全。</p>\n<p data-pid=\"DRbChYBe\">福柯有一个研究的主题叫做疯癫与文明，在他的视角下，我们看到这些海龟汤里的神智失常的人，反而具备了一种可能，那就是再被重新阐释的过程。</p>\n<p data-pid=\"ZkAD0fuS\">这个话题即便放到现在来看也具有深刻的时代性。我们所生活的社会，个体的情绪折磨或精神内耗，它的直接来源其实是精神性的疾病，可是精神镜的疾病真的只是个人原因吗？如果有可能是一种机制性的或社会性的状况呢？</p>\n<p data-pid=\"QHdQq8LN\">精神病学家政治科学学家乔尔克维尔就提出“资本主义中的神经衰弱最令人震惊的一项特征在于它是无处不在的”。我马克思主义谈到资本主义会给人带来异化，很明显这就是一种机制，影响到个人精神状态异常的绵延不绝的后遗症。</p>\n<p data-pid=\"ZyG79oVo\">在很多海龟汤故事中，那些犯下匪夷所思案件的个人，他们都有一种对自我欲望的重构和渴求。他看起来好像只是这个人的神智有问题，但是如果我们再进一步的去追问他，就会发现在这背后的一种称作病态世界（詹姆斯希尔曼）的综合症是存在的。</p>\n<p data-pid=\"ovjDbSUR\">然后，故事的问答形式也带有强烈的陌生感。在我的另一个回答中谈过，从汤面上来看他一定要构筑出一个不可靠叙事，但是当游戏玩家追问出题人的时候，出题人必须给出可靠的回答。</p>\n<p data-pid=\"O5YkA7fA\">这就好比海猫鸣泣之时中的红字和蓝字，魔女采用红字不断否决人类提出的可能性，它在本质上就是一步一步将自己推向死亡的过程。在这个意义上说猜数字、猜人名（神灯猜人）都只是对单个的字节进行判断和猜测，那是一种逻辑游戏，而不是一种叙事上的陌生感。</p>\n<p data-pid=\"KEKjHniG\">所以，尽管在形式上海龟汤与猜数字、猜人名是相似的，但是这种相似带来的给人的体验性却是大相径庭的。一个人心中所念的数字或人名，它所具备的场域感是薄弱的，但是出题人所构筑的故事，在一定程度上相当于某种心理测试房树人的叙事性投射。</p>\n<p data-pid=\"UyOQV1nb\">第三，我们可以从玩家的猜测过程中判断他的思维方式，这种判断，他的有效性可能还高于无领导小组讨论。因为我们会自诩自己是正常人，那么正常人的思维将要如何去贴近一个匪夷所思的海龟汤故事呢？</p>\n<p data-pid=\"7M4R3Tcu\">你是相信自己的理性判断，还是相信你的直觉？于是那些被理性的规训成为有秩序的文明化的表达，他潜藏在下面的集体无意识又被重新挖出来了。当然，如果一个具体的叙事的海龟汤，或许还能够与这种思维方式，也就是准确的剖析过程的思路相抗衡。那么抽象的海龟汤，带有更加模糊的诗化的海龟汤就应运而生了。</p>\n<p data-pid=\"QYz6cdzp\">作为一个诗人（我的诗歌在知网上还查得到），我会对海龟汤这种语言表达方式产生出莫名的吸引感，因为抽象的海龟汤，它就是一首诗。当游戏的玩家不断的追问这个抽象概念背后的意义的时候，就是在将这首诗进行不断的注释和解读。</p>\n<hr>\n<p data-pid=\"J-uMVS1N\">不过我们很多人只是会短暂的沉浸在海龟汤有趣的故事中，当海龟汤的故事结束之后，谁又会想要去将其当作一面镜子，挖掘出自己内心深处那些都不为人所知的思绪呢？</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/dandoliya?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">乌合之子</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/487824820/answer/2633736057?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">52 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/464383411?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">海龟汤：凶手是怎么布置这个密室的?</a><br><a href=\"http://www.zhihu.com/question/61650245?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">暗房海龟汤？</a><br>\n","link":"http://www.zhihu.com/question/487824820/answer/2633736057?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"集成百家所长的 Matter，也是智能家居的未来（系列文章之一）","date":"2022-09-06 02:58:54","description":"在这组新的连载文章中，我们将会与大家一起探究 matter 这个协议的前世今生以及其核心的技术优势，希望帮助大家更好地认识这个协议、更有针对性地选购智能家居产品。<p>[......]</p>\n<a href=\"https://sspai.com/prime/story/matter-explained-01\" target=\"_blank\">查看全文</a><p>本文为会员文章，出自<a href=\"https://sspai.com/prime/precog/single\" target=\"_blank\">《单篇文章》</a>，订阅后可阅读全文。</p>\n","link":"https://sspai.com/prime/story/matter-explained-01"},{"title":"派早报：LG 推出新款 XBOOM 360 / Go 蓝牙音箱、NIO Air AR Glasses 正式发布等","date":"2022-09-06 00:52:49","description":"小米米家户外电源 1000 Pro 开启预售，中国卫通 SatZone 服务平台已开通试运行等<a href=\"https://sspai.com/post/75558\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75558"},{"title":"密室逃脱是如何保持重复可玩性的?","date":"2022-09-05 13:51:16","description":"\n<p data-pid=\"FVB-PvYM\">简单来讲，早期大型密室的复购靠的是超高的难度来强行限制玩家单次通关的可能性，你必须来个两到三次才能体验到完整的内容，因为实在太难。</p>\n<p data-pid=\"sMvFvAG3\">现在的大型密室就友好很多了，复购可以靠多结局的设计，玩家对不同角色、不同阵营的选择，最适合复刷的是多npc的沉浸式演绎剧场，有认识的老板跟我说有复刷过一百来次就为了跟不同的npc聊天的（有钱）玩家。</p>\n<p data-pid=\"3GWbyp5M\">之前做过比较详细的科普视频，有兴趣的朋友戳开视频看一下详细回答思路。</p>\n<a href=\"https://www.zhihu.com/zvideo/1550231440972787712\">密室复购率是怎么回事</a>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/pu-wu-66?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">蒲熠星</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/23898381/answer/2661192984?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">9 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/319264919?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">密室逃脱真的好玩吗？</a><br><a href=\"http://www.zhihu.com/question/427295175?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">可不可以讲一下玩密室逃脱的经历啊？</a><br>\n","link":"http://www.zhihu.com/question/23898381/answer/2661192984?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"超长篇哆啦A梦漫画哪一部水平最高？","date":"2022-09-05 10:40:50","description":"\n<p data-pid=\"SolqULT_\">如果把《哆啦A梦大长篇》比作闪耀的群星，那《大雄与铁人兵团》一定是其中最璀璨的一颗。这部仿佛浑然天成的作品，凝聚了藤子·F·不二雄精巧的构思、磅礴的展开以及发人深省的思想。从宏观来说，这是一部展现宇宙战争的史诗，讲述了来自外星的机器人王国企图征服地球最终失败的经历；而从微观来看，这是一段关于成长与救赎的故事，描绘了机器人莉露露在与五人组的接触中对人类从蔑视到尊重的转变历程。</p>\n<p><img src=\"https://pica.zhimg.com/v2-5b01983183d56e6504aba703b95afb49_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"717\" data-rawheight=\"657\" data-watermark=\"original\" data-original-src=\"v2-5b01983183d56e6504aba703b95afb49\" data-watermark-src=\"v2-bf645da598b2d88aee2f79e91e955981\" data-private-watermark-src=\"v2-f249255f4aec8615a36e1f3770d535b7\"></p>\n<p data-pid=\"0PBAMUAv\">我一直认为，解读莉露露这个角色，就是解读《铁人兵团》这部作品。而在解读莉露露时，我必须提出一条被许多人忽视，却贯穿整部作品的重要线索——<b>莉露露手指的光线</b>。这束光线一共出现了四次，也标志着莉露露人物形象的四个阶段。</p>\n<hr>\n<p data-pid=\"jf4lYI6i\">光线第一次出现，是在莉露露出场的时候。在北极萧瑟的寒风之中，从茫茫的冰原远处缓缓走来一位衣着单薄的少女。她面无表情地举着一样装置，即使是面对凶残的北极熊也只是面不改色地灵巧躲过，从手指中发出光线将它击晕。<b>冷酷、强大而神秘——这是莉露露给读者留下的第一印象。</b>这个时候的莉露露，完全以麦加托比亚间谍的身份行动。她的眼中只有祖国交给她的任务，一直只是为了建设军事基地而勤恳工作。</p>\n<p><img src=\"https://picx.zhimg.com/v2-715dd9e458f74f705a2e86393f2afbb0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"733\" data-rawheight=\"655\" data-watermark=\"original\" data-original-src=\"v2-715dd9e458f74f705a2e86393f2afbb0\" data-watermark-src=\"v2-caf51be4e8add7f176636d1177d4b62b\" data-private-watermark-src=\"v2-95e84afd986ae8e00da552e7975372fa\" data-tags=\"porn\"></p>\n<hr>\n<p data-pid=\"c2M4vpah\">来到大雄所在的小镇后，莉露露的衣着已与普通女孩无异。她开始在人类生活的地方活动，也开始接触人类与之对话。有意思的是，在面对胖虎和小夫的时候，她面无表情，一言不发就扭头离开；而在与大雄交谈的时候，她却时常面露微笑，最后还说了声“谢谢”。更令人惊讶的是，当大雄和哆啦A梦发现她的真实身份时，她并没有慌张、也没有恼怒，而是表示自己非常“<b>喜欢</b>”大雄，正想要他来协助自己。</p>\n<p><img src=\"https://pica.zhimg.com/v2-03fbbe008d0f13afac0895911831bc32_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"731\" data-rawheight=\"572\" data-watermark=\"original\" data-original-src=\"v2-03fbbe008d0f13afac0895911831bc32\" data-watermark-src=\"v2-c5baf756c3e974c667481014784c791b\" data-private-watermark-src=\"v2-eea9e1b02a7e809f0bd8cd7916f92465\"></p>\n<p data-pid=\"HWXToW9S\">莉露露为什么对大雄如此特别？简单对比胖虎小夫和大雄对待莉露露的态度，答案显而易见。小夫炫耀自己的机器人未果后恼羞成怒，气急败坏；而大雄从一开始就对她亲切有加，笑容以待。然而这就足以让她“喜欢”大雄吗？其实不然。且让我们记住一件事：莉露露并不是人类。虽然外型被设计得和人类几乎一模一样，但<b>她并不能完全理解人类的想法，尤其是关于人类的情感联结</b>。这一点从她对“外国人”、“朋友”、“妈妈”等词语表示不解可以得以印证。既然如此，那她又怎会明白“喜欢”这个词深层的含义呢？</p>\n<p><img src=\"https://pic3.zhimg.com/v2-599022a43e979f619fca3c9020034105_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"399\" data-rawheight=\"271\" data-watermark=\"original\" data-original-src=\"v2-599022a43e979f619fca3c9020034105\" data-watermark-src=\"v2-8b57b9e9cf954b6884e9ed51045429b7\" data-private-watermark-src=\"v2-7143c8b22267dd3f5b4116033f0050d5\"></p>\n<p data-pid=\"RctRyPfD\">或许，<b>莉露露只是因为大雄对她亲切而误把他当成了自己的伙伴罢了</b>。她不会理解，大雄身为地球人决不会容许奴役计划的实行；她也不会理解，大雄对她温柔只是因为他对任何人都很温柔。在她的眼中，敌人就应该像胖虎和小夫一样，没有对她温柔的理由，而大雄安慰了她、帮助了她，便一定不是她的敌人，或许还可以在入侵地球的宏伟蓝图中助她一臂之力。</p>\n<p data-pid=\"6AeDM660\">在这错误的认知中，莉露露急切地想要抓住大雄，用手指发射出第二道光线。</p>\n<p><img src=\"https://pica.zhimg.com/v2-054d5231da4e291ec29596e5bf43759d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"732\" data-rawheight=\"706\" data-watermark=\"original\" data-original-src=\"v2-054d5231da4e291ec29596e5bf43759d\" data-watermark-src=\"v2-787c7b3b1784389550f8583705eb2fe2\" data-private-watermark-src=\"v2-f3d6845157dc70a42baa5f8656383d11\"></p>\n<hr>\n<p data-pid=\"_NxpCSaw\">这道光线并没有瞄准大雄的身体，而是打落了他和哆啦A梦的竹蜻蜓。可为时已晚，两人还是得以逃离镜中世界，而莉露露企图用蛮力将连接处撕开大口却引发次元震，入口被完全封闭，她自己也身受重伤被埋在了废墟之中。后来，静香误打误撞地发现了她，一个崭新阶段的序幕就此拉开。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d5f005ae6d693d84612d23152c0ff22b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"733\" data-rawheight=\"275\" data-watermark=\"original\" data-original-src=\"v2-d5f005ae6d693d84612d23152c0ff22b\" data-watermark-src=\"v2-ef0e55d69b14468b4f87d765a9cb7046\" data-private-watermark-src=\"v2-364b4e33d8dd70ef0e8ce7a7e42769b0\"></p>\n<p data-pid=\"2Xa9daeU\">此前莉露露与人类的交流仅限于任务所需，内容浅尝辄止。然而在和静香的相处中，两人<b>思想与价值观的碰撞</b>在略显紧张的气氛中缓缓展现在读者的眼前。</p>\n<p data-pid=\"HO546Ke6\">初遇之时，莉露露便做出了惊人而恐怖的举动：被静香发现机器人的身份后，她用手掐住了静香的脖子，恐怕真的动了杀心。毕竟如果奴役人类是理所应当，那残杀他们又有何不可呢？然而静香并没有因此而害怕她、讨厌她。她不想用恶意去揣测这位身负“重伤”的“女孩”，宁愿相信是故障才让她伤害人类，甚至将她接到家中治疗。</p>\n<p><img src=\"https://picx.zhimg.com/v2-e961eb3f08d66ff485a97eae75d6ca31_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"730\" data-rawheight=\"588\" data-watermark=\"original\" data-original-src=\"v2-e961eb3f08d66ff485a97eae75d6ca31\" data-watermark-src=\"v2-961e6ae451c004d6620b39d97a3f4d23\" data-private-watermark-src=\"v2-fa4c68262d961094f572a1e45a1108a7\" data-tags=\"porn\"></p>\n<p data-pid=\"UMzlM5s7\">对于莉露露而言，这种行为简直不可理喻。在她利益至上的视角里，帮助自己这个敌人对静香没有任何好处。她没有想到的是，静香并没有站在敌人的立场上去思考问题，而是仅仅把她当作需要救助的伤员，当作与人类平等的存在。<b>她也并不需要任何利益作为理由，所做的一切完全出自最本真的善意。</b></p>\n<p data-pid=\"hIO2hkp3\">困惑的莉露露向静香表明了麦加托比亚侵略地球的目的：一向实行奴隶制的麦加托比亚，在“机器人平等”的新思想指引下终于解放了饱受压迫的奴隶机器人。可是，解放奴隶所空出的劳动力该如何填补？机器人们想起了那个代代相传的神话：麦加托比亚历史的开端，正是神明抛弃了自私自利、相互残杀的人类，创造了这个由机器人主导的社会。<b>既然人类是被神所抛弃的种族，那将他们奴役作为劳动力造福机器人又有何不可呢？</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-e2ec847ac1822c808646436dbac4532c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"730\" data-rawheight=\"268\" data-watermark=\"original\" data-original-src=\"v2-e2ec847ac1822c808646436dbac4532c\" data-watermark-src=\"v2-20b1b0825f8a68a94338c5c6325b9fb5\" data-private-watermark-src=\"v2-0f3845be66219413a6c3abbc572f68f9\"></p>\n<p data-pid=\"jUC_7H-v\">静香静静地听着她讲述机器人社会的故事，“社会阶级”、“奴隶制”、“废奴运动”……这些熟悉的词语在她的耳边回响，把她的思绪带到了并不遥远的过去。于是，她淡淡地说了一句：</p>\n<blockquote data-pid=\"3Z7pRX1b\"> 简直像在重演人类的历史一样。</blockquote>\n<p data-pid=\"f1H_14nd\">她说得没错。早在12世纪英格兰就曾宣布过奴隶制非法，本土的农奴逐渐消失。<b>然而在大英帝国的急速扩张中，奴隶贸易却成为了英国人的一项“财富密码”。</b>漂洋过海的黑奴为英国各个殖民地提供了大量廉价劳动力，其种植的甘蔗、烟草、棉花等经济作物让帝国赚的盆满钵满。截止1807年，约有350万名黑奴由英国的船只跨越大西洋运往世界各地接受惨无人道的虐待，而英国王室对此不但不明令禁止，反而与贩奴者同流合污，为奴隶贸易的开展提供了大量便利。即使到了18世纪，启蒙运动中人人平等的思想已然广泛传播的时代，仍有休谟这样的另类说出了“黑人们自然比白人低下”这样傲慢的言语。这又与“宇宙是为机器人存在的”这样的想法何其类似呢？</p>\n<p><img src=\"https://pic1.zhimg.com/v2-7479074dcf279dffa54f96dab071f408_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"482\" data-watermark=\"original\" data-original-src=\"v2-7479074dcf279dffa54f96dab071f408\" data-watermark-src=\"v2-cdedbfb9c74c87b98617537003dfc221\" data-private-watermark-src=\"v2-ebe9e424cdc6e39dd6d8356d1d4b51c0\"></p>\n<p data-pid=\"2WOxXer6\">况且，在奴隶贸易停止之后，剥削就真的消失了吗？还是说，这种剥削又被偷偷转移到其他群体了呢？想必大家都知道答案。英国工业革命开始后，<b>工人阶级开始走上历史舞台，随之而来的还有靠压榨其剩余价值为生的资产阶级</b>。那时有的棉纺纱工厂的孩子们，要在6岁起就从早上5点到晚上9点学做工，换来的只是刚刚能够果腹的食物、闷热恶劣的工作环境以及肮脏简陋的贫民窟住所。这样的待遇，相比奴隶而言又有何区别呢？</p>\n<p data-pid=\"YTqq8oK5\">但就是这样一句简单的陈述，却直接跨越了莉露露心中的红线。支撑着她一路走来的，正是为麦加托比亚创造“天国般的社会”的理想。而这一理想的基石，正是“机器人是宇宙的主宰，而人类是被抛弃的垃圾”这样的信念。也难怪莉露露会把那番话语当作对机器人的侮辱：<b>承认静香的话语，就是在否认自己存在的意义。</b></p>\n<p data-pid=\"wmLRKwUY\">被激怒的莉露露抬起尚未痊愈的手臂，带着对人类的轻蔑与憎恶发射出第三道光线。</p>\n<p><img src=\"https://picx.zhimg.com/v2-80b65320e2e5fe94927e4ead25b9fb55_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"734\" data-rawheight=\"626\" data-watermark=\"original\" data-original-src=\"v2-80b65320e2e5fe94927e4ead25b9fb55\" data-watermark-src=\"v2-fc943ff925da7304e43536e77b02e3de\" data-private-watermark-src=\"v2-51590bd4785771bd936836fd4321bfa3\" data-tags=\"porn\"></p>\n<hr>\n<p data-pid=\"rzfhfW9s\">静香应声倒地，所幸莉露露还没有完全恢复，看似猛烈的光线只对她造成一点擦伤，莉露露自己却再次陷入昏迷。当莉露露再次醒来的时候，静香仍然带着笑脸照顾着她。她所不知道的是，这个坚强的女孩在昨晚也曾一时间产生了放弃的念头，但或许是宁静的夜空安抚了她受伤的心，静香最终还是回到了莉露露的身边。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-0468a390c72f88d7a3b34742feae487b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"333\" data-rawheight=\"269\" data-watermark=\"original\" data-original-src=\"v2-0468a390c72f88d7a3b34742feae487b\" data-watermark-src=\"v2-640783acfafb9917ed4c0492cc51efbd\" data-private-watermark-src=\"v2-47e3b7a415cff2846519046dbe3924e5\"></p>\n<p data-pid=\"6QQXITt-\">莉露露愈发困惑了，这个女孩明明一直在被自己伤害，明明知道铁人兵团的恐怖之处，为什么还要对自己如此温柔？难道她也是站在麦加托比亚这一边的吗？不！昨晚她一直痛斥着把人类当作奴隶的荒谬，显然并不接受麦加托比亚的统治。<b>如此明显的矛盾让她开始质疑自己对人类的看法</b>，并再次向静香抛出了那个问题：“为什么要救助敌人？”</p>\n<p data-pid=\"1gT-e2tN\">这一次静香没有回避这个问题，微笑着告诉她：</p>\n<blockquote data-pid=\"g0zEw8a9\">\n<b>人类就是会做出不合情理的事。</b><br>\n</blockquote>\n<p><img src=\"https://picx.zhimg.com/v2-a4f65bb774986aa06a6b04cb0a9e0fe3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"272\" data-watermark=\"original\" data-original-src=\"v2-a4f65bb774986aa06a6b04cb0a9e0fe3\" data-watermark-src=\"v2-98af268f217881a2b00000abd7d671f9\" data-private-watermark-src=\"v2-9b2ca3d6af6daf4570886e289423dabe\"></p>\n<p data-pid=\"aQ4bWXM7\">莉露露是否理解了这句话，我们不得而知。不过至少她明白了，<b>人类有自己的思想，自己的信念，自己的情感</b>，支撑着他们费劲心思做一些毫无利益可言的怪事。他们不是没有智慧的野兽，不是她想象中那样低浅的生物。难道是自己错了吗？是自己一直以来坚信的、在麦加托比亚被当作理所当然的思想错了吗？是希望机器人建立天国的神明错了吗？……</p>\n<p data-pid=\"GVoE-l9f\">两种想法在她的脑内激烈的碰撞，她还不愿相信，整个铁人兵团就是个错误；她还需要验证，人类是否真的能在巨大的利益面前选择虚无缥缈的所谓的“善良”。于是，她悄悄吐出静香喂给她的安眠药，溜出了房间。她要用自己的双眼见证，大军压境之时，人类究竟会作出怎样的抉择。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-a2a034651ac2077467c57bc407db1238_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"267\" data-watermark=\"original\" data-original-src=\"v2-a2a034651ac2077467c57bc407db1238\" data-watermark-src=\"v2-0fabf09985acf284f1206c533f71d593\" data-private-watermark-src=\"v2-d49eca9834e3d616e2de47ac259c3fc5\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"hgftKVYn\">当大雄找到逃走的莉露露时，她正坐在因遭受炮火而破败不堪的地下通道的台阶上若有所思。为什么是这里，难道铁人兵团犯下的暴行她都看到了吗？若是如此，她目睹着高楼大厦刹那间变为断壁残垣时又作何感想呢？她是否还坚信，这场战争是正义的呢？我们不得而知。但很显然，在被大雄找到之前，她有充足的时间回到铁人兵团执行自己的职责，但她没有这么做，她的内心仍然在挣扎，而这种挣扎也体现在这一格的分镜上——<b>阳光与阴影将画面分割成了明暗两色，大雄站在光明的一侧，而莉露露恰巧坐在两者的交汇处，低头面对着黑暗。</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-416b1c1a224c72e38f4f163905c350d1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"732\" data-rawheight=\"539\" data-watermark=\"original\" data-original-src=\"v2-416b1c1a224c72e38f4f163905c350d1\" data-watermark-src=\"v2-14c0b631e9898c304727149f0bbacb26\" data-private-watermark-src=\"v2-62bf7d1ecebb4cd2a39cca9a4c6bd8cb\"></p>\n<p data-pid=\"uQFM13kH\">看到了大雄的莉露露久违地露出了笑容，她终于能从胡思乱想之中解脱了。她直截了当地告诉大雄自己要向铁人兵团报告他们的计划，看到大雄举起休克枪的那一刻，她明白，机会终于来了。</p>\n<p data-pid=\"LO1KAsF5\">她退回了黑暗。<b>只要大雄一扣动扳机，就说明静香“善良”到怜悯敌人的行为要么只是千万人类中的一个特例，要么就是做个样子，是为了麻痹自己而撒下的弥天大谎。</b>到了危急时刻，他们终究还是会暴露自己的本性，为了自己的利益、为了人类的利益作出最正确、也最冷血的选择。那样的话，自己就可以放下顾虑，继续坚守一直以来的信念，跟随铁人兵团创造更美好的机器人世界。</p>\n<p><img src=\"https://pica.zhimg.com/v2-0ba2fd0af7cb9c0812ce5ea67f6f14e9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"463\" data-rawheight=\"319\" data-watermark=\"original\" data-original-src=\"v2-0ba2fd0af7cb9c0812ce5ea67f6f14e9\" data-watermark-src=\"v2-a57eb9d3705af7f108e05641ff3c8438\" data-private-watermark-src=\"v2-6dacb6c92a4719e09984898ada317212\"></p>\n<p data-pid=\"e23_cBxP\">然而，眼前的这个男孩却浑身颤抖，无力地举着枪，丝毫没有要开枪的意思。急不可耐的莉露露向他喊道：“开枪吧！只有这样你才能阻止我！”</p>\n<p data-pid=\"pYcRiYRw\">而此时她的内心也在呐喊道：“<b>开枪吧！只有这样我才能从迷惘中解脱！</b>”</p>\n<p data-pid=\"MEITLTmw\">“开枪吧！”</p>\n<p data-pid=\"dcP1UzOJ\">“开枪吧！！！”</p>\n<p data-pid=\"Pa6ew__I\">“你这个窝囊废！”</p>\n<p data-pid=\"_l-mLfIm\">面对迟迟没有扣动扳机的大雄，莉露露终于艰难地作出了决断，带着觉悟发射出最后一道光线。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-a073bcbde1c432d2ca6c6230e77ae26e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"733\" data-rawheight=\"196\" data-watermark=\"original\" data-original-src=\"v2-a073bcbde1c432d2ca6c6230e77ae26e\" data-watermark-src=\"v2-b6038b645b905c0ae4ca00b1c76a5c20\" data-private-watermark-src=\"v2-829af4638966c601a8c90e50b0293322\"></p>\n<p data-pid=\"pNA8a7Dl\"><b>然后，她走向了光明。</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-a676af36796abc0e359148949f84b965_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"731\" data-rawheight=\"358\" data-watermark=\"original\" data-original-src=\"v2-a676af36796abc0e359148949f84b965\" data-watermark-src=\"v2-27792f2b81ad537c5a3b6507be23ebf9\" data-private-watermark-src=\"v2-7f13fe18598d23cf0dbc7fe7f3ab0153\" data-tags=\"politic porn\"></p>\n<hr>\n<p data-pid=\"_iON7dhe\">当铁人兵团司令质问起五人组的动向时，莉露露没有回答，而是以一句振聋发聩的话语回应了他：</p>\n<blockquote data-pid=\"a6NY4Hyp\"> 我们应该创造的，不是属于机器人的天国，而是属于宇宙所有生物的天国。</blockquote>\n<p data-pid=\"xjyZunhQ\">她终于理解了，麦加托比亚所谓的“平等”只是在转嫁矛盾，铁人兵团的计划并不能带来真正的平等，只能让更多人加入剥削者的行列罢了。机器人认为人类是垃圾，只是内心里的那股优越感在作祟，什么神话什么历史，都是在为自己的傲慢找借口。他们从来没有真正接触过人类，从来没有在意过人类内心的想法，<b>甚至从来没有意识到，或者不愿去意识到人类也有自己的内心。</b>而莉露露不一样，她在与大雄与静香两人的交流中逐渐了解了人类。明知没有希望，她也仍然要在司令面前据理力争，为地球的和平贡献一份渺小但不可忽视的力量。</p>\n<p><img src=\"https://pica.zhimg.com/v2-dc2ad13cdc3e47007ddc1ac4f9a2c381_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"731\" data-rawheight=\"412\" data-watermark=\"original\" data-original-src=\"v2-dc2ad13cdc3e47007ddc1ac4f9a2c381\" data-watermark-src=\"v2-4e81e83810d384fec2d792e8bfe98e35\" data-private-watermark-src=\"v2-9f9c032e2b2a28eaf985a961bcb7333f\"></p>\n<p data-pid=\"T8aD3ey2\">经过四道光束后，莉露露逐渐由冷酷的间谍转变为愿意倾听他人声音的朋友，人物形象已经臻于圆满。不过，要想完成对她的刻画还差最后一块拼图：她仍然在迷茫，自己身为麦加托比亚人无法背叛祖国，可她又不愿参与这从一开始就荒谬无比的战争。那么，她该何去何从呢？</p>\n<p data-pid=\"8DipFLbF\">帮助莉露露解答这一疑问的角色，是此前并不起眼的米克罗斯。纵观他在作品中的表现，几乎都是在用滑稽的行为来缓解严肃的战争气氛。然而正是这样一个谐星，却在最后关头起到了不可或缺的作用。当莉露露对自己的信仰产生动摇之时，米克罗斯没有给她纠结的机会，他单纯的大脑意外迅速地得出了一个精准的结论——<b>神，就是应该被质疑的。</b>这个被哆啦A梦赋予生命，一直追随着人类步伐的机器人知道，所谓的神不过是被漫长的时间雕刻而成的精美塑像，其背后只是再普通不过的人格。他不像莉露露那样带着名为“信仰”的包袱在理想与现实的夹缝中寻求生存空间，而是直面理想与现实的差距，大声控诉造成这个不合理世界的“罪魁祸首”。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-fae9ac2ca399d019fa1eb8c726734723_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"994\" data-rawheight=\"367\" data-watermark=\"original\" data-original-src=\"v2-fae9ac2ca399d019fa1eb8c726734723\" data-watermark-src=\"v2-f93492348aa2999cb7abf29b69d50599\" data-private-watermark-src=\"v2-f7d2b7e59d41b43ea4c6685021abf5a0\"></p>\n<p data-pid=\"M1RuaE4U\">米克罗斯的控诉启发了静香，或许也震撼了莉露露。为了改变历史、拯救地球，一行人踏上了三万年前麦加托比亚的土地，那里有一位对人类失去希望的博士正在开发能够创造出天国一般社会的机器人。借博士之口，藤子·F·不二雄精准地指出了铁人兵团形成的根本原因——竞争本能。竞争推动了社会的进步，没有竞争就没有我们现在的生活。然而，<b>竞争中“比他人优秀”的想法一旦变质为“比他人优越”，每个人就只会考虑自己的利益，为此甚至会伤害他人、剥削他人。</b>无论是奴隶主阶级还是资产阶级，大抵都是如此。甚至可以说，所谓的“阶级”，不正是既得利益者为巩固自己的地位而分化出的概念吗？</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1a1c667bd3d774ad26e2d65df3b94d60_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"731\" data-rawheight=\"538\" data-watermark=\"original\" data-original-src=\"v2-1a1c667bd3d774ad26e2d65df3b94d60\" data-watermark-src=\"v2-412ebf94980d8e3ea3c0b64ed44f050e\" data-private-watermark-src=\"v2-a03fe4c19d984ad46a707f8dc0e687e0\"></p>\n<p data-pid=\"EQU4UGjm\">这并不是说我们不需要竞争，但在竞争之外，或许还有一样东西是人类社会发展的必需品——<b>为他人着想的心</b>。正是这颗宝贵的心，让静香一次次被伤害后仍然温柔地照顾莉露露，让大雄在最后的危急关头仍然没有扣动扳机，让看似冷血的莉露露能不顾自己的命运在司令面前挺身而出。正是这颗宝贵的心，让奴隶贸易从这个世界上消失，让共产主义的旋风一度席卷全球，让世界没有变成弱肉强食的野蛮丛林。</p>\n<p data-pid=\"KtyVJ9Pw\">正因如此，博士希望为两位机器人改造出为他人着想的心，从根本上杜绝铁人兵团的出现。可是，作为铁人兵团成员的莉露露，恐怕也会随之被抹除存在的痕迹。但此时，莉露露或许会震惊，或许会恐惧，但决不会再迷惘，她已经找到了自己新的存在意义。当她坐上操作台的那一刻，<b>她彻底摆脱了个人利益的束缚，摆脱了身份与种族的捆绑，一切的一切，只为一个让宇宙上的生命都能安心生活的“天国”。</b>她终于解放了自己的内心，成为了一个“人”应有的样子。</p>\n<p><img src=\"https://pica.zhimg.com/v2-95d575a6483c8bc1e4558b7f77cfe630_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"734\" data-rawheight=\"323\" data-watermark=\"original\" data-original-src=\"v2-95d575a6483c8bc1e4558b7f77cfe630\" data-watermark-src=\"v2-63162064b22a97d7596a639810d184c7\" data-private-watermark-src=\"v2-6de6c9cc5e950c1ccfd34b6bb14bde71\"></p>\n<p data-pid=\"GO0CzvJ-\">当莉露露渐渐如烟雾般消散之时，她面带微笑地对静香说道：“下次转生的话，我想成为天使般的机器人”。</p>\n<p data-pid=\"_6qf3wx5\"><b>可是莉露露，你已经是“天使般的机器人”了。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-aee3ba9e2fb77fb8db13819e477b5529_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"730\" data-rawheight=\"579\" data-watermark=\"original\" data-original-src=\"v2-aee3ba9e2fb77fb8db13819e477b5529\" data-watermark-src=\"v2-3bff44f2f203c00d23091b160668b66e\" data-private-watermark-src=\"v2-81085f3ce83d3b52448ff4615dffeeb0\"></p>\n<p data-pid=\"JUjosPqR\">在静香和莉露露令人动容的故事之外，男孩子们与山大克罗斯同铁人兵团的斗智斗勇也是本作的一大看点。不过，男孩子们的战斗最终以失败告终，尽管他们在这个过程中展现出了面对强敌永不屈服的坚韧意志，但似乎从一开始就沦为了静香和莉露露的陪衬。</p>\n<p data-pid=\"04k5ktlx\">显而易见的一点是，在小夫的提议下，哆啦A梦强行改造了山大克罗斯的头脑，用一种违背其意愿且极为粗暴的方式使它成为了我方的伙伴。这种做法实在与静香对待莉露露的态度大相径庭，也让不少读者开始质疑，这部作品传达的价值观是否自相矛盾。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-4ffc0046ba415092974531eaf7b1f36c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"731\" data-rawheight=\"271\" data-watermark=\"original\" data-original-src=\"v2-4ffc0046ba415092974531eaf7b1f36c\" data-watermark-src=\"v2-6961e6f9cecaf9838e2f25260a2bb4dc\" data-private-watermark-src=\"v2-2369d31eef592bf9ef46c50513887c68\"></p>\n<p data-pid=\"-YA_gON1\">但或许，这就是藤子·F·不二雄的巧妙构思。从这里开始，<b>五人组就被隐性地分成了两组路线</b>：男孩子们完全将铁人兵团视为敌人，用武力与之抗争；而静香则没有在意莉露露的立场，用真诚的态度和本真的爱感化了她。诚然，男孩子们做的并不是无用功。他们的奋勇抗争为静香的计划提供了充足的时间，守住了地球的最后一道防线。但最后从根本上解决问题的终究还是静香——这是爱的胜利，是人心的胜利，<b>相互的理解最终战胜了冲突与对抗</b>，而这也正是藤子老师想要突出的主题。</p>\n<hr>\n<p data-pid=\"5JlotHW0\">故事的最后，大雄独自坐在空荡荡的教室里发呆，麦加托比亚与莉露露的现状仍然牵动着他的心。这时，一位粉红色头发的少女悄悄从窗前飘过，当两人四目相对之时，少女的脸上浮现出天使般的微笑。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-7e5833ee0a3a8ba64232e72469b5255c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"732\" data-rawheight=\"472\" data-watermark=\"original\" data-original-src=\"v2-7e5833ee0a3a8ba64232e72469b5255c\" data-watermark-src=\"v2-aaf793c6dc79693321bf5320122ded39\" data-private-watermark-src=\"v2-e2ee1b2f6d46fd33eb3ec49e4fec31d3\"></p>\n<p data-pid=\"ZJLKpuAS\">或许，麦加托比亚真的成为了天国般的社会；或许，莉露露真的转生来到地球观光旅游了。我们如此相信着，因为我们希望，<b>温柔对待他人的人，也能被这个世界温柔相待。</b></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/shi_mmer?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Shimmer</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/37527964/answer/2658274638?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">43 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/499022907?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">漫画《哆啦A梦》中哪段你觉得最高能？</a><br><a href=\"http://www.zhihu.com/question/541417867?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">漫画《哆啦A梦》中有哪些你觉得很扯淡的剧情？</a><br>\n","link":"http://www.zhihu.com/question/37527964/answer/2658274638?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派评 | 近期值得关注的 App","date":"2022-09-05 10:22:45","description":"你可以通过文章目录快速跳转到你感兴趣的内容。如果发现了其它感兴趣的 App 或者关注的话题，也欢迎在评论区和我们进行讨论。<a href=\"https://sspai.com/post/75553\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75553"},{"title":"把 AI 作画引擎搬进家用电脑：Stable Diffusion 配置与使用指南","date":"2022-09-05 08:04:14","description":"Stable Diffusion 还不能作为生产力工具，但它让设计变得简单，也让更多普通人打开了 AI 绘画的可能性。<a href=\"https://sspai.com/post/75544\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75544"},{"title":"一日一技 | 如何给自制电子书添加脚注","date":"2022-09-05 06:30:00","description":"因为有在 Kindle 里看网络小说的习惯，但是通过脚本下载的文档通常都是将其放在章节末尾，阅读时需要反复查阅，配合上墨水屏缓慢的反应速度，阅读体验实在称不上好。于是就萌生了「把注释加进正文」的想法。既然 Kindle 商店里的正规出版物都有这样的功能，那用电子书编辑器是不是也能做到？<a href=\"https://sspai.com/post/75170\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75170"},{"title":"俄乌战争还在打，查了下俄罗斯能源出口对欧洲和中国的依赖程度","date":"2022-09-05 05:52:05","description":"\n<p data-pid=\"1_DN4Hqo\">这两天查了下俄罗斯的能源出口依赖度。</p>\n<p data-pid=\"J2byHujd\">我们都知道俄罗斯目前是一个高度依赖能源出口获取外汇收入的国家，而且也不只是近些年，在几十年前的苏联时代就是这样，八十年代美国的里根政府就是通过说服盟友沙特压低国际市场油价从而大大的打击了苏联的出口，加速了苏联的经济崩溃。</p>\n<p data-pid=\"AJ0fb4VP\">这里要说下沙特这个国家当年在打击苏联的过程中发挥了重要的作用，主要是两个地方，</p>\n<p data-pid=\"5Qx9Je3h\">其一是增加产能压低油价重创了苏联的出口收入，</p>\n<p data-pid=\"c-JgjH4R\">其二是沙特出钱，从埃及购买苏式武器，从美国购买美式武器，然后通过巴基斯坦运入到阿富汗境内，支持阿富汗游击队和苏军作战，大大的增加了苏军的伤亡，也把苏联拖入了战争的泥淖。</p>\n<p data-pid=\"4043tuj4\">总之我觉得我国是吸取了其他国家历史上的经验教训的，现在总体上和中东国家保持着不错的关系。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"mUyTcnyj\">俄罗斯现在和乌克兰打仗，油气为中心的资源出口成为了支撑俄罗斯经济的支柱，这就让我想了解俄罗斯的能源出口对中国市场的依赖程度，我们假设万一欧洲真的实现了减少对俄罗斯天然气的依赖，那么俄罗斯该怎么办。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"ZW_WDu4P\">查了下数据，在天然气方面，</p>\n<p data-pid=\"rQzuHjM6\">2021年俄罗斯出口天然气中只有6.32%卖到了中国，而中国2021年进口天然气中只有9.9%来自俄罗斯，因此很显然中俄天然气贸易是有很大潜力可以挖掘的。</p>\n<p data-pid=\"K2hSMNCN\">中国对进口俄罗斯天然气是很积极的，原因如下：</p>\n<p data-pid=\"YvvhqOmj\">1：天然气作为清洁能源，符合我国长期碳中和的目标，我国的天然气消耗量在迅速增长。</p>\n<p data-pid=\"kiEh3Mh3\">2：我国天然气不能自给，目前四分之一的天然气进口来自澳大利亚，再加上从美国的进口就占了三分之一，而目前的政治局势下，提升进口多元化是中国的诉求。</p>\n<p data-pid=\"NHiYqDPW\">3：中国从俄罗斯进口天然气主要通过东北地区，可以刺激在东北的管道基建投资，同时由于都是从东北地区入境，可以增加东北地区海关的进口税收，另外目前东北三省70%的煤炭和50%的天然气需要从区域外调入，俄气的使用不仅可满足东北地区天然气的消费，而且可帮助减少煤炭的消耗。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-65c2f37af7a1a86eaa919ec3c6ee4eb0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"865\" data-rawheight=\"533\" class=\"origin_image zh-lightbox-thumb\" width=\"865\" data-original=\"https://pic1.zhimg.com/v2-65c2f37af7a1a86eaa919ec3c6ee4eb0_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"OJ_L3BYo\">而对于俄罗斯来说，如上图所示，2021年其天然气的最大出口目的地是德国，占比为19.19%，出口土耳其占比10.72%，出口意大利占比10.38%，出口白俄罗斯占比7.9%，出口法国占比7%，出口中国占比6.32%，出口波兰占比4.18%。</p>\n<p data-pid=\"HISDuzfd\">显然俄罗斯的出口目的地总体来说是“不太安全”的，<b>不算白俄罗斯和土耳其的话，出口到欧洲发达国家占比高达63.21%</b>，这些国家总体而言不仅对俄罗斯抱有戒心，而且事实上处于美国的领导之下，在美国的势力范围内。</p>\n<p data-pid=\"4U_iAOem\">因此我国抓住这个机会，扩建已经开通的中俄天然气管道，扩大输送产能，是可以更好的保证我国的能源安全的，因为一旦砸钱投资建了天然气管道，那显然从经济上考虑是不能随便断供的，不然投资回报时间就会更长，而且在已有的管线上工作的员工收入和工作机会也会受到损害。</p>\n<p data-pid=\"T0OGxWAH\">就如同俄罗斯和欧洲在天然气供应上是互相依赖的关系一样，我国和俄罗斯的天然气管道一旦建好并且送气，那么也是互相依赖的关系。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"5GFtd0NM\">2019年12月中俄“西伯利亚力量”天然气管道开通，初期每年为中国供应50亿立方米天然气，到2023年全部完工时每年供应量增加到380亿立方米。</p>\n<p data-pid=\"y6qIvQMV\">2022年2月，中俄又签署天然气协议，决定计划再通过“西伯利亚力量”管道每年向中国供应100亿立方米天然气，将把每年天然气供应量提高到480亿立方米。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-df26cbc6fd4d59a7acacb5b71c15d8f9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"781\" data-rawheight=\"814\" class=\"origin_image zh-lightbox-thumb\" width=\"781\" data-original=\"https://pic2.zhimg.com/v2-df26cbc6fd4d59a7acacb5b71c15d8f9_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"ZWBkfdRf\">中俄筹建的西伯利亚2号管道，将会通过蒙古，预计2024年开工，年最大输气量预计为500亿立方米。</p>\n<p data-pid=\"rqxUDsh6\">未来这两条管道都开通之后，给中国的每年输气量将达到980亿立方米，这是非常高的数字，根据数据统计机构Statista的数据显示，2021年著名的“北溪1号”天然气输送量达到了592亿立方米，比该管道设计的年输送量还高出42亿立方米。据国际能源署（IEA）统计，2021年欧盟从俄罗斯进口天然气的总量为1550亿立方米。也就是说，“北溪1号”当年的输送量占欧盟进口俄天然气的近40%。</p>\n<p data-pid=\"z6lTXLYf\">实际上中国除了管道天然气之外，也通过铁路从俄罗斯进口LNG天然气。</p>\n<p data-pid=\"_mshq2Zm\">因此在天然气这部分，中国从俄罗斯的进口在未来预计会迅速增长。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"WgeefOUa\">而除了天然气之外，我也查询了俄罗斯出口石油和煤炭到中国的占比，有点出乎意料的是占比已经非常高了。2021年俄罗斯出口的石油中竟然有29.62%是出口到中国的，这个比例真的比我想的还要高一些，而与此同时，欧洲国家仍然是俄罗斯的最大的石油出口地，荷兰占比13.45%，德国10.29%，欧洲OECD发达国家占比合计为48.95%。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-88f885387433b606e719ed2ba9174964_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"865\" data-rawheight=\"543\" class=\"origin_image zh-lightbox-thumb\" width=\"865\" data-original=\"https://pic1.zhimg.com/v2-88f885387433b606e719ed2ba9174964_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"zXn2M0E_\">这里面石油管道是我国进口俄罗斯石油的主力，下图是中俄石油管道一期，中国境内的漠河到大庆年输油1500万吨，</p>\n<p data-pid=\"VPoJ544B\">2018年漠河到大庆的管道建成了二期，又增加了1500万吨产能，使得年输送石油产能达到了3000万吨。</p>\n<p data-pid=\"jCjAMfjH\">根据央广网的报道，2011年1月1日投产运营以来，截至2021年1月1日，哈尔滨海关所属漠河海关监管服务进境原油近2亿吨。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-880982a34fcb50e770c6f69b72d75039_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1366\" data-rawheight=\"866\" class=\"origin_image zh-lightbox-thumb\" width=\"1366\" data-original=\"https://pic2.zhimg.com/v2-880982a34fcb50e770c6f69b72d75039_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"TiJnHiqU\">下图是中俄石油管道二期建设的现场图。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-92e8b2cd8afc7cbf7ba3dc2962a6750b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1368\" data-rawheight=\"724\" class=\"origin_image zh-lightbox-thumb\" width=\"1368\" data-original=\"https://pic4.zhimg.com/v2-92e8b2cd8afc7cbf7ba3dc2962a6750b_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"rih2odhs\">中俄石油管道建成之前是有很多波折的，</p>\n<p data-pid=\"6ORS3GcJ\">我们可以看到这条线之前并不是这个走向，以前的设计是安大线（安加尔斯克到大庆），当然最后没有用这个，原因之一是可以远离贝加尔湖保护环境，当时日本跳出来和中国争夺这条石油管道，结果是2021年俄罗斯出口到日本的石油占比非常少，甚至不如出口到韩国的比例3.36%。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-905f938579a85e86af32605f000e9f68_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"865\" data-rawheight=\"298\" class=\"origin_image zh-lightbox-thumb\" width=\"865\" data-original=\"https://pic1.zhimg.com/v2-905f938579a85e86af32605f000e9f68_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"qk58TpjS\">最后是煤炭，2021年俄罗斯出口的煤炭中23.98%是到中国的，相对于油气，俄罗斯的煤炭出口要均衡的多，出口到日本和韩国的煤炭占比也有17.49%，合计到中日韩的煤炭超过40%，而出口到欧洲发达国家的煤炭占比为32.28%。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-7f4d63503f2123b982c9fedafd07a7d9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"713\" data-rawheight=\"430\" class=\"origin_image zh-lightbox-thumb\" width=\"713\" data-original=\"https://pic2.zhimg.com/v2-7f4d63503f2123b982c9fedafd07a7d9_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"1ONeEYFZ\">因此相比之下俄罗斯的煤炭出口要均衡不少。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"OWwSPYTW\">最后简单的总结下，</p>\n<p data-pid=\"Ph66h63r\">1：对于俄罗斯来说，石油，天然气，煤炭的第一大市场都是欧洲国家，其实俄罗斯重视欧洲不仅仅是因为文化，种族等原因，经济原因无疑也是核心因素之一。</p>\n<p data-pid=\"iq-ps46v\">但即使这样，在煤炭和石油领域中国已经成为俄罗斯的第二大买家（仅次于欧洲发达国家），而在天然气领域中国从俄罗斯的进口也在迅速增长，预计很快会超过白俄罗斯和土耳其，也会是仅次于欧洲发达国家的第二大买家。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"Z0Q7QIVQ\">2：俄乌战争无疑是一个关键的因素，欧洲国家如果执意的在油气进口方面去俄罗斯化，我们这里先不讨论能不能取得完全的成功，但是总体进口俄罗斯油气趋向下降是可能的。</p>\n<p data-pid=\"wYSDh66L\">我觉得我们在分析问题的时候还是要用数字的方法，而不能说“欧洲离不开俄罗斯天然气”，或者“俄罗斯天然气离不开欧洲市场”这样模糊的描述。</p>\n<p data-pid=\"iReeXADh\">比如你今年进口100美元的俄罗斯产品，但是出于抵制的原因，明年只进口了80美元的俄罗斯产品，其实这也是去俄罗斯化，并不是一定要下降到零才叫去俄化。</p>\n<p data-pid=\"yPcmtSXI\">就跟我们说去美化其实不是说就完全不买美国任何东西了，而是要去除对美国核心技术的依赖避免被卡脖子，那些先进的高水平的美国货该买的还是要买，怎么利益最大化怎么来。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"G0e78JzF\">战争持续下去，那么欧洲和俄罗斯会继续走在脱钩的道路上，相应的对中国来说则是扩大和俄罗斯合作的机会。</p>\n<p data-pid=\"aBrew0Gb\">这里要说一下，从俄罗斯进口的天然气价格其实很便宜，因为是以管道天然气为主，管道天然气比从海上用船只进口LNG液化天然气价格便宜一半，要不然欧洲人用俄罗斯的管道天然气这么多年爱不释手呢。</p>\n<p data-pid=\"6sVbZYaL\">2021年全年中国天然气累计进口量达到了12136万吨，共计558.1亿美元，均价460美元一吨。</p>\n<p data-pid=\"g92A_zbA\">其中LNG液化天然气7893万吨，占比为65%，进口金额441.79亿美元，占比79%，均价560美元一吨。</p>\n<p data-pid=\"EiOw1uhf\">这样算管道天然气的价格只有大约274美元一吨。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"bln_l6Vy\">2022年1-6月中国天然气累计进口量达到5357万吨，进口金额316.67亿美元，均价591美元。</p>\n<p data-pid=\"SOE54YK3\">2022年1-6月中国液化天然气累计进口量达到3126万吨，占比58.4%，金额239.39亿美元，占比75.6%，均价766美元一吨。</p>\n<p data-pid=\"Y8ZjM1Q7\">这样算下来管道天然气价格为346美元一吨。</p>\n<p data-pid=\"zdqQOc7e\">目前澳大利亚是我国第一大天然进口来源国，而且全部是LNG液化天然气，价格是比来自俄罗斯的管道天然气贵的。</p>\n<p data-pid=\"WOnDnZgl\">我们也看到，今年的天然气进口价格明显是涨了不少，因此俄乌战争打下来，我国进口天然气也多花了不少钱，当然作为进口大户的欧洲就更不用说了，我在欧洲的朋友就说他们电费都涨了。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"x_vvb5Dq\">3：对于俄罗斯来说，未来如果煤炭，石油，天然气的第一大客户都变成了中国而不是欧洲，这在心理上是很大的冲击，毕竟俄罗斯几百年都是欧洲中心主义，但是总是不被欧洲接纳，被视为边缘寒冷地区的野蛮人，不被视为自己人，然后最大的经济依赖逐渐变成中国了。</p>\n<p data-pid=\"7kpfGODj\">从目前的情况看，由于欧洲在制裁俄罗斯搞去俄化，短期内中国，以及正在发展中的印度占俄罗斯出口油气比例上升是一个较为确定的趋势。</p>\n<p data-pid=\"f6U6qF93\">当然如果欧洲在能源依赖去俄罗斯化上步伐比较慢，又或者未来欧美出于遏制真正的强大对手中国的目的，对俄罗斯抛出橄榄枝，那么这个过程会出现一些波折，这个就看俄罗斯的战略定力了。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"-aCXl0Z4\">总之在我看来，西方人内心深处根深蒂固的种族主义，是永远不可能把俄罗斯人，中国人为中心的东亚人视为真正的自己人的，一定是拉拢其中一个打击另外一个。</p>\n<p data-pid=\"p8MyXxiR\">从这个角度讲，我们现在加大和俄罗斯在能源领域的合作，</p>\n<p data-pid=\"ls-B_8Em\">一则可以加大两国利益的捆绑，</p>\n<p data-pid=\"nZMGtLyN\">二则是在俄罗斯目前高度依赖油气的情况下给予其经济支撑，使其在西方联合经济制裁下得以继续维持生存，</p>\n<p data-pid=\"o4Kl7zxN\">这样可以降低俄罗斯未来在西方抛出的联合反华橄榄枝下动摇的概率，避免在我国迈向民族复兴的道路上节外生枝。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/ningnanshan?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">宁南山</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/560809315?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"为什么《三国志11》在我国被奉为神作？","date":"2022-09-05 03:53:10","description":"\n<p data-pid=\"AvZo82nM\">销量不佳是一个问题，在我国地位高又是另一个问题，这两者之间并没有太大关联。如果只是问为何在我国地位高，原因其实还挺简单的，那就是311在我国具备了天时地利人和，并且自身素质也不错，自然而然地成为了一代经典。</p>\n<h2>天时</h2>\n<p data-pid=\"IkuAYqkI\">07年到09年是一个比较特殊的时期，许多电脑游戏系列在中国玩家心目中最经典的一代就是在这几年或者稍前出的，例如06年的真三国无双4，07年的仙剑4和空之轨迹，08年的战国无双2和无双大蛇。其原因是FC时代之后由于缺乏代理商外加政策限制，国内并没有一款普及率很高的游戏机，10年之后主机游戏市场又被智能机降维打击，因而PC就是这期间中国玩家最普及的游戏机。</p>\n<p data-pid=\"Naj1nHKy\">根据国家统计局所提供的数据显示，我国的互联网服务商在04年的时候只有每百万人0.2个，09年的时候就把这个数字提升到了1.2。宽带用户在00年的时候只有两万多，05年就有三千七百多万，其提升不可谓不迅猛，但因为基数太低，此时的宽带仍然称不上普及，而等到09年的时候中国的宽带用户达到一亿多，基本覆盖了三四线城市，互联网用户也从06年的占总国民十分之一变成09年的超过四分之一。</p>\n<p><img src=\"https://pica.zhimg.com/v2-73524874e40f0d956a506b98da46fcaa_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1065\" data-rawheight=\"428\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-73524874e40f0d956a506b98da46fcaa\" data-watermark-src=\"v2-016cf90139048476961fe335ae901ab5\" data-private-watermark-src=\"v2-c670589f5ed9ff66eb55696603cafbc6\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-193f2ac745ea2c8501620bb1d4b2d5fc_720w.jpg?source=b1748391?rss\" data-rawwidth=\"954\" data-rawheight=\"330\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-193f2ac745ea2c8501620bb1d4b2d5fc\" data-watermark-src=\"v2-d8e6fe3fbb44ae73f904f24411e9684c\" data-private-watermark-src=\"v2-0fe0f9f5031ed3e9aa5bcb6e8ce4d895\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-35dad8484ea838b2112fc8e1b6105fd1_720w.jpg?source=b1748391?rss\" data-rawwidth=\"844\" data-rawheight=\"420\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-35dad8484ea838b2112fc8e1b6105fd1\" data-watermark-src=\"v2-e0596def52b19808161096cc287367bf\" data-private-watermark-src=\"v2-4deb62c3e0c78f5e5e4b1b0deb914f0b\"></p>\n<p data-pid=\"jfaGD_d1\">这是最多新人PC玩家入坑的时期，他们所接触的首部作品自然就会在中国互联网上拥有特殊的地位。</p>\n<p data-pid=\"Y9haCkGC\">三国志11原版发售于06年3月，威力加强版则是06年9月，这令该游戏吃到的另一个好处是多数中国玩家一开始所接触到的就是完成形态的威力加强版，而在日本饱受批评的原版11代在中国并没有多少人玩过。实际上11代之前的作品都吃到了这个好处，后面几部三国志大都是原版口碑低下，最终版本褒贬不一，而9、10、11这三代则几乎没有人评价原版，因而口碑也要高得多。</p>\n<p data-pid=\"5v3KTkqU\">同时，11代的另一个优势是由于该作在日本销量不好且口碑差劲，导致系列处于岌岌可危的形势，随时都可能消失。结果正统续作直到12年才做出来，中间创造了长达六年的真空期，这六年间玩家除了11代就只能找更早的作品来玩。同时，12代的糟糕表现又让对续作期待已久的玩家们再度寒心，变相抬高了11代的地位。以同社的信野系列为例，发售时间和311差不多的信野革新的续作天道在09年推出，并且质量也还算凑合，很大程度上分走了革新的人气。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-c1b1c94356393a54e6df666056ed78b1_720w.jpg?source=b1748391?rss\" data-rawwidth=\"117\" data-rawheight=\"285\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-c1b1c94356393a54e6df666056ed78b1\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h2>地利</h2>\n<p data-pid=\"XcqOFhgu\">除在发售时间和续作方面占尽优势外，三国志11在题材上的优势也很大。在光荣玩家内部，早几个月发售的信野革新在游戏素质方面的评价明显要胜过311，但日本战国的题材就决定了这款游戏的受众面远不及311。同时，由于经常做中国历史的缘故，光荣公司对中国玩家的重视要远远大于其他外国厂商，早在上世纪90年代就开始推出各种官方汉化游戏，这种重视在311身上达到了极致。</p>\n<p data-pid=\"hriXZEUg\">从93年开始，光荣公司先后在国内设立了三个分公司（北京、天津、台湾），其游戏的汉化品质一项都是很高的，甚至经常会带有汉语语音。放到现在大家可能不觉得什么，在当时几乎独此一家，同一时期的GTA：SA甚至连汉化版都找不到，需要玩家自己去猜对话。更为夸张的是，初版311甚至是没有日语语音的，只能听中配，这一点在当时还引起了许多日本玩家的不满。</p>\n<p data-pid=\"QUBURgFP\">此外，游戏中独特的水墨画风以及用中国传统乐器所演奏的背景音乐都能让玩家产生一种亲切感，仿佛这是一款中国人自己制作的三国游戏（三个中国分公司确实都参与了制作）。相信不少玩家后来玩到312时，面对廉价的UI和武将们的满口日语都会产生强烈落差感。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-67cfe6d8e36f8bf83f16bae264934541_720w.jpg?source=b1748391?rss\" data-rawwidth=\"227\" data-rawheight=\"96\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-67cfe6d8e36f8bf83f16bae264934541\" data-watermark-src=\"v2-bf014bc45cbdd6cfcb0df17a5c6de276\" data-private-watermark-src=\"v2-c92738fac46c0984936f5e0509ec4f75\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-0511ea4f6a25e6a5d2a2c2f5f3c497f5_720w.jpg?source=b1748391?rss\" data-rawwidth=\"243\" data-rawheight=\"225\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-0511ea4f6a25e6a5d2a2c2f5f3c497f5\" data-watermark-src=\"v2-48a8de1ba36b4af5325dab5028757ffb\" data-private-watermark-src=\"v2-59526c89aedb1e03a3abcf1e4a432636\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-6193fca8a8dbaa7a4f850b25ece126e5_720w.jpg?source=b1748391?rss\" data-rawwidth=\"465\" data-rawheight=\"94\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-6193fca8a8dbaa7a4f850b25ece126e5\" data-watermark-src=\"v2-98a3b95b7ad39c31b19a29f9bff16114\" data-private-watermark-src=\"v2-c12838d07341abcb22e22cbf94a53d6f\"></p>\n<p data-pid=\"uS3yRxZV\">而三国题材明明关注度如此之高，当时却没有能够与之匹敌的同类竞争对手。霸王大陆和英杰传系列断档多年，三国战纪、傲世三国还有赵云传早已没什么人气，幻想三国志和三国基本没有关系，类型最为接近的三国群英传7素质差强人意还改成了仙魔大战（就这样居然人气还凑合），剩下的更是不值一提，唯一的劲敌是同门出身的真三国无双。也就是在这个热门题材当中，三国志系列基本在吃独食。</p>\n<h2>人和</h2>\n<p data-pid=\"HTFhmm2M\">311确实是系列里最适合拿来推广的一部，如果一点基础都没有，那我很推荐先玩这部。首先这款游戏的卖相非常好，制作组在这一代里清理了所有7代的旧头像，更换后的头像精度达到了12代替换半身像之前的最高水平，足以把10代甩出一个身位。同时这一代首次使用了3D模型，其中不少甚至是直接从无双系列搬过来的（例如周泰），因而这一代的单挑和舌战虽然在系统设计上不如10代，但在演出效果上可以疯狂吊打10代以及之前的任何一部作品。</p>\n<p><img src=\"https://picx.zhimg.com/v2-bb4bd344e0b1d031cb48146b956f25f2_720w.jpg?source=b1748391?rss\" data-rawwidth=\"548\" data-rawheight=\"225\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-bb4bd344e0b1d031cb48146b956f25f2\" data-watermark-src=\"v2-27f49119812f4a6a6aefb6a6bb0ead05\" data-private-watermark-src=\"v2-aa9d1398253dbff2318f775baced7f1b\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-6d754712f5a9e1d848c324fba45444dd_720w.jpg?source=b1748391?rss\" data-rawwidth=\"548\" data-rawheight=\"223\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-6d754712f5a9e1d848c324fba45444dd\" data-watermark-src=\"v2-d4402111a47d79f87c231822f1ffa7c0\" data-private-watermark-src=\"v2-f179ea5331c25427ac710cf2848f4d00\"></p>\n<p data-pid=\"6ODbIeyN\">11代的教学模式也是系列中的典范，不但设计细致，面面俱到，在难度方面也循序渐进，甚至连充当示范的刘备等角色也在性格台词上设计得生动有趣，其剧情表演不禁让玩家捧腹。最后的应用关卡成都攻略战难度适中，虽然我方占尽优势，但因为时间限制，对新手而言又有一定挑战，而且只要能通过这关，基本就不会在正式游戏开始后感到手忙脚乱不知道该做什么了，这是之后历代教学模式所欠缺的。此外，这一代的教学模式还附赠32个古代武将，可谓奖励丰厚，因而多数人都不会将其直接跳过。</p>\n<p data-pid=\"OWWe6vkI\">光荣游戏里能在教学方面给我留下如此深刻印象的除了311就只有信野天道。相比之下，其他几代要么在教学内容上设计得太过简略（例如信野创造教你加减乘除，然后让你去解微积分），要么把教学提示直接嵌套在游戏内部，让玩家自己去摸索，还有313这种一开始还是教学，打着打着就变成挑战关卡的设计，完全不为玩家做考虑，直接当作老手来操练了。</p>\n<p data-pid=\"o3FRr9Q-\">玩法上311也很容易上手，这是光荣最后一次做纯战旗游戏，虽然这种玩法已经远远落后于时代，但好处也是显而易见的。相对于RTS，战棋游戏不考验玩家的反应能力，不用频繁按暂停，可以静下来好好思考自己的每一步甚至是直接存读档，这就降低了入门门槛。同时战棋类游戏易于理解，效果直观，虽然对抗性低，但是策略性强，而且光荣当时已经做了十几年战旗，系统也相对成熟，311的战斗玩起来很有乐趣。</p>\n<p data-pid=\"ghhzp84U\">内政系统虽然设计得比较无聊，但也同样好上手。每座城的设施最多22个，最少10个，而且位置固定，相比起信野革新里动辄八九个城下町，几十个设施，位置还要自选的设定，虽然变化性少了不很多个数量级，但学起来简单方便。</p>\n<p data-pid=\"XJEKE1Gu\">同时311的这套机制发散性很强，非常适合拿来修改，战旗模式带来的抽象化战斗和各技能强弱的极端化差异反而使得它套上任何朝代的名字都不违和，外加各城市之间相对平衡的设计，因此311成了mod爱好者的天堂。而作为后继者的12和13代，原本在国内评价就不高，半身像的立绘制作也相对困难，游戏机制换皮不如11代方便，一不小心还可能收到光荣的律师函，因而即使是十多年后的现在，网上最火的依然是11代的mod。</p>\n<p data-pid=\"VI_zLPer\">实际上挖坑不填，公司不肯投钱把游戏做完是三国志系列目前面临的最大困境，这一点我专门写过相关答案。</p>\n<a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://www.zhihu.com/question/369305656/answer/1825063111\" data-image=\"https://picx.zhimg.com/v2-541caec7ec9f5a253d643a24ceb7baed_qhd.jpg?source=b1748391\" data-image-width=\"1024\" data-image-height=\"768\" class=\"internal\">光荣的三国志系列，为什么每代都要放弃前作的优点呢？</a><p data-pid=\"WLLsrjVI\">然而11代在玩家们自主用爱发电的情况下，居然完成了这一官方没能完成的壮举，有像血色衣冠、韩版311这种持续数年甚至是建立团队来进行开发的mod，其不光是改换了游戏的势力及武将，对于原版的游戏机制也进行了大幅改良。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b41b5cf5f6b05b2bd4a8d5fb65b24742_720w.jpg?source=b1748391?rss\" data-rawwidth=\"676\" data-rawheight=\"539\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-b41b5cf5f6b05b2bd4a8d5fb65b24742\" data-watermark-src=\"v2-8b86a27a32ed7b0949d4db9776f60e29\" data-private-watermark-src=\"v2-6bbfc5cbeae9e1f078f9a24edc79bbf9\"></p>\n<p data-pid=\"hJIashd5\">这出现了一种奇怪的现象就是许多三国志11的粉丝其实很少甚至是没玩过三国志11的本体，而是将三国志11的mod与三国志11混在一起来称赞。</p>\n<p data-pid=\"01SY5xol\">总的来说，11代占的优势实在太多：<b>传播节点赶上互联网用户的高速发展期，以完成形态出现，智能机尚未普及，缺乏后续力作，是为天时；题材热门，公司扎根中国，文化底蕴深厚，市场上找不到竞争对手，是为地利；作品卖相好，适合新人上手，民间mod生命力极强，是为人和。</b></p>\n<p data-pid=\"MI7idE5F\">纵观整个系列，找不出第二部像11代这样拥有各种有利条件的作品，加上11代本身素质也还不错，因而最后被奉为神作的是三国志11而不是其他作品。</p>\n<p data-pid=\"QK5wHrV7\">有关11代为何在日本会受到冷遇，可以看这个回答：</p>\n<a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://www.zhihu.com/answer/1834016959\" data-image=\"https://picx.zhimg.com/v2-43fe7d18ed7b109a17812c162731c24b_720w.jpg?source=b1748391\" data-image-width=\"870\" data-image-height=\"654\" class=\"internal\">如何评价游戏《三国志11》？</a><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhang-ting-61-50?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">FFF团长</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/65299573/answer/1832322292?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">197 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/38857195?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">想看《三国志》，哪个版本的会比较好？</a><br><a href=\"http://www.zhihu.com/question/394776444?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">买《三国志》求推荐，哪个版本最好?</a><br>\n","link":"http://www.zhihu.com/question/65299573/answer/1832322292?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"拿什么装你的一机 N 镜？谈谈我的摄影包折腾经历和推荐","date":"2022-09-05 03:48:33","description":"希望大家能一次就找到自己心仪的器材，摄影背包也一样。<a href=\"https://sspai.com/post/75524\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75524"},{"title":"从转系生到终身教授：十二年图形学物理模拟的自我回顾","date":"2022-09-05 02:50:41","description":"\n<p data-pid=\"R8qSBSrt\">最近评上tenure，有人来祝贺：”Now you can freely decline review requests!”。我想了想，似乎对心态上的改变确实如此而已。又想到也许可以写个什么纪念一下。那这19岁到31岁，有什么拿来回味的没有？好像有很多，但不整理一下的话，又不知从何说起。那还是直接写一点吧。从物理本科，到CS PhD，CS教职，又在数学tenure，这看似曲折的十二年竟是在做同样的研究，一年都没有浪费。一路走来，有很多东西值得缅怀和总结，也许能帮助思考未来。顺便把这一路干过的牛逼的事，和遇到过的牛逼的人都写下来，看着应该很舒爽。</p>\n<ul>\n<li data-pid=\"HMgcTgq5\">第〇章：我的三叉戟</li>\n<li data-pid=\"-wxEN7so\">第一章：缘起</li>\n<li data-pid=\"g8YiiZ9B\">第二章：一炮炸出来两个坑</li>\n<li data-pid=\"Uvv--n47\">第三章：雪与海的浪漫</li>\n<li data-pid=\"-cHlIhBZ\">第四章：摩擦摩擦，在光滑的路上，摩擦</li>\n<li data-pid=\"QO7bfwAB\">第五章：少年英雄胡渊鸣</li>\n<li data-pid=\"4OKGMN1S\">第六章：与timestep结缘</li>\n<li data-pid=\"XsEPFhqt\">第七章：摩擦碰撞的第三次战役，IPC魔童降世</li>\n<li data-pid=\"k3RfLq3N\">第八章：下一个“Timestep”</li>\n</ul>\n<h2>第〇章：我的三叉戟</h2>\n<p data-pid=\"PXz9rBKX\">十二年来摸爬滚打地给计算机图形学做了些物理模拟相关的科研。拿的出手的代表方向有三：物质点法（Material Point Method: MPM），仿射粒子元胞法（Affine Particle In Cell: APIC），和增量势能接触法（Incremental Potential Contact: IPC）。每个方法的人和事下面的章节再去回忆，这一章，先笼统概括一下。</p>\n<p data-pid=\"wPAoYrzG\">第一个方向：MPM。说到物质点法，按照惯例，或许得提一下自己多多少少参与了的冰雪奇缘。2012年发掘MPM后我去做了些别的事情，组里其他同学拿MPM验证了雪；我在早期没有去参与最初的SIGGRAPH工作。迪士尼工作室的代码很臃肿，远远不止99行，而且迪士尼的律师可不是吃素的，向来有荒岛求生画米奇一说。既然不能描绘太多代码的事情，那就只放好看的剧照：</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-342167145b3ccae5874347c6f9f06ac0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1252\" data-rawheight=\"335\" class=\"origin_image zh-lightbox-thumb\" width=\"1252\" data-original=\"https://pic1.zhimg.com/v2-342167145b3ccae5874347c6f9f06ac0_r.jpg\"></figure><p data-pid=\"nANp74c3\">MPM擅长做雪在短期内成为了一个刻板印象。于是我决定花一些功夫来重塑一下MPM的形象。从技术层面上来说，MPM只是一个基本的Galerkin空间架构，物理过程数值模拟的真正技术点在于时间和空间的离散算法、本构模型的设计、性能的加速、以及巧妙求解偏微分方程数值解的不同手段。MPM是一块高品质的画布，这些技术点的创新才是真正的笔法（stroke）。但是技术点是里子，MPM是面子。于是从面子上看到的，便是我与一干志趣相投之士用MPM去平A物理的世界的各种固体和流体：巧克力，果冻，面包，牙膏，冰淇淋，泡沫，泥土，岩浆，牛排，东坡肉，橘子，西瓜，肌肉，骨骼，内脏，布料，毛衣，头发，雪山，沙海，冰川，河流，无人机，炸药，等等。这里有固体，有牛顿流体，有非牛顿流体，有粒状体，有固液混合体，还有人体。大到山川河流，小到雨露甘霖，MPM从一个铁头功，逐渐被扩写成了一本七十二绝技。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-2e57476b54898ea998146bc57ee9ae81_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1714\" data-rawheight=\"984\" class=\"origin_image zh-lightbox-thumb\" width=\"1714\" data-original=\"https://pic2.zhimg.com/v2-2e57476b54898ea998146bc57ee9ae81_r.jpg\"></figure><p data-pid=\"8Wm7AwWc\">后来跟人合开了公司，写了一个实用的MPM特效解算器。最近Autodesk买下并放进了Maya，相信未来的几年，更多的电影里会看到MPM的应用场景。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-588c6272591360dec8abd70fbf6b0407_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1072\" data-rawheight=\"298\" class=\"origin_image zh-lightbox-thumb\" width=\"1072\" data-original=\"https://pic4.zhimg.com/v2-588c6272591360dec8abd70fbf6b0407_r.jpg\"></figure><p data-pid=\"aD1aby8Q\">第二个方向：仿射粒子元胞法（APIC）。这是我2015年得意的文章，是2014年的圣诞节独自一人在迪士尼的大帽子studio里加班完工的。迪士尼所在的Burbank是大洛杉矶地区一个荒漠城市，我却在荒漠和大海结了缘。于是那一年，APIC给海洋奇缘里的水提升了许多丰富的细节。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-a3f2f084e9f44bf02a1f980f9886d97e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1220\" data-rawheight=\"294\" class=\"origin_image zh-lightbox-thumb\" width=\"1220\" data-original=\"https://pic3.zhimg.com/v2-a3f2f084e9f44bf02a1f980f9886d97e_r.jpg\"></figure><p data-pid=\"NbXb8lfn\">时间快进到2017年，有一位气血翻腾的胡姓少年来访问我，一起把APIC和MPM系列工作推到了高潮：Moving Least Squares MPM（MLS-MPM）。那之中与后来 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/458c690a3722fd38ffd3d3dcadcf8b13\" data-hash=\"458c690a3722fd38ffd3d3dcadcf8b13\" data-hovercard=\"p$b$458c690a3722fd38ffd3d3dcadcf8b13\">@太极图形</a> 的渊源和MPM在可微分模拟领域的拓展，已有<a href=\"https://zhuanlan.zhihu.com/p/97700605\" class=\"internal\">好文</a>记录。</p>\n<p data-pid=\"57DUE7H5\">第三个方向：IPC。2020年12月31日，宾夕法尼亚大学计算机图形学中心，23点59分，手里的咖啡还烫。有一块补天的石头，它吸满了天地灵气日月精华，突然炸裂开了。增量势能接触法IPC横空出世。王婆卖瓜自卖自夸：我窃以为，IPC改良了固体模拟，启动了“工业革命”，把连续固体的仿真科学（不只在图形学）带入了“蒸汽机时代”。2022年，它的衍生故事还在不断上演：</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-24b435c893fd91277ad50d5680921f74_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1135\" data-rawheight=\"816\" class=\"origin_image zh-lightbox-thumb\" width=\"1135\" data-original=\"https://pic1.zhimg.com/v2-24b435c893fd91277ad50d5680921f74_r.jpg\"></figure><h2>第一章：缘起</h2>\n<p data-pid=\"bJJGyp74\">2010年，我遇到了改变了我一生的三个人。第一个人是我的妻子；这十二年，我们相恋五年，结婚七年，她挽着我踩下了每一个有深有浅的脚印。十二年来做过的每一个回头来看无比正确的决定，大到职业道路，小到咬文嚼字，我的许多影响深远的选择背后都有她默默的付出不休不眠的时间陪我去抽丝剥茧和理性分析。我在中科大少年班选的专业是等离子体物理，2010年在UCLA入学后想转到计算机，如果没有她绝对理性地安抚我的急躁和帮我规划合理的步骤，我可能连第一学期都没读完就自暴自弃、不知所向。她还会陪我走很远很远。</p>\n<p data-pid=\"g4Aa4QZN\">2010年改变我命运的另两个人，就是我读PhD的联合导师Demetri Terzopoulos和Joseph Teran。他们的成就是我一生奋斗的目标。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-238deba8138b9fbe7ee76b86850a06e6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1111\" data-rawheight=\"370\" class=\"origin_image zh-lightbox-thumb\" width=\"1111\" data-original=\"https://pic3.zhimg.com/v2-238deba8138b9fbe7ee76b86850a06e6_r.jpg\"></figure><p data-pid=\"gugvxGNa\">我在UCLA CS系的导师Demetri是英国皇家学会的院士（并列于牛顿、本杰明富兰克林、霍金等人），奥斯卡技术奖得主，他是1980年代计算机图形学里第一个做物理仿真的人，可谓元宇宙物理引擎之父。他同时也是计算机视觉泰斗，发明了snake算法。他其实还跟Hinton一起在二十多年前就发表了世界上第一篇用神经网络做物理仿真的图形学文章，似乎常常被人漏cite。我在数学系的共同导师是Joseph，他是陶哲轩的同事（我现在也是了），level set发明人Stan Osher的徒孙和同事，曾被discover评为40岁以下最聪明的20个大脑之一(<a href=\"https://link.zhihu.com/?target=https%3A//www.discovermagazine.com/the-sciences/20-best-brains-under-40\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">20 Best Brains Under 40</a>)，他是图形学里最有名的做有限元固体仿真的人。</p>\n<p data-pid=\"8cjAsf4J\">2010年秋天，我跟一个朋友一起联系了Demetri，以及Joseph和朱松纯老师。朱老师给出了很理性的不赞成我转系的答复。（后来朱老师对我改观，跟Osher一起加入了我的博士委员会，再后来通过挚友，如今北大智能学院的朱毅鑫教授，形成密切的学术合作关系，这是后话。）Demetri和Joseph冒着很大的实验室财务浪费的风险，看着我一段蹩脚的弹簧模拟代码（MATLAB写的），但是考虑到我以前发表过相对论相关的论文应该脑子不笨，给了我一个机会。我赶紧红牛下肚，花了几个通宵强行通读了一本教材，并复现出了一篇有限元肌肉仿真的siggraph文章。诸如此行为，是impress图形学教授最简洁有效的手段。从此一发不可收拾。</p>\n<p data-pid=\"NQJ2XQ80\">写代码和图形学，我入门都很迟。 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/19787805e0d1f80fe5501ec60be84d6a\" data-hash=\"19787805e0d1f80fe5501ec60be84d6a\" data-hovercard=\"p$b$19787805e0d1f80fe5501ec60be84d6a\">@胡渊鸣</a> 初中就写刚体引擎小游戏了，我博一还在自学C++模板。跟许多有理想的图形学或游戏爱好者一样，从头搭建一个自己的引擎是一个抑制不住的冲动。2012年初，补完所有计算机和应用数学课程的我结合自己的物理背景，摸索出了一个长期目标：用物理仿真去重建这个世界。Demetri也鼓励我：你比谁都适合去close the gap between virtual reality and physical reality， 把虚拟世界跟物理世界给打通。那时候没有元宇宙这个说法，但是我的两个导师都是digital double虚拟人体的深度发烧友，这对我的科研兴趣的影响不可谓不大。回到物理引擎这个构想上，心动不如行动，这世界五颜六色千变万化，那这引擎就叫魔方大，哦不，百变怪吧！于是 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/cffjiang/ditto\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ditto</a> 诞生了：</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-5df3bb876e273873cf2b6618fa97ca31_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1714\" data-rawheight=\"712\" class=\"origin_image zh-lightbox-thumb\" width=\"1714\" data-original=\"https://pic2.zhimg.com/v2-5df3bb876e273873cf2b6618fa97ca31_r.jpg\"></figure><p data-pid=\"B7Nd-WL8\">ditto里包含了几个固体仿真和碰撞处理的练手项目，特别是隐式有限元的3D布料仿真。当时有<a href=\"https://link.zhihu.com/?target=https%3A//taichi.graphics/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">taichi</a>语言的话，应该写出来能当一次<a href=\"https://link.zhihu.com/?target=https%3A//games-cn.org/games201/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GAMES201</a>大作业拿个A+。可惜Ditto维持了半年后，我投入一篇siggraph文章的具体工作中，便没有再更新了。后来2018年<a href=\"https://link.zhihu.com/?target=https%3A//www.z-emotion.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">z-emotion</a>/ZelusFX公司的CEO突然联系我，说他2012年跟我要的ditto代码帮助他弄出来一个布料设计软件的公司，现在有很多用户。我开心了很久。</p>\n<h2>第二章：一炮炸出来两个坑</h2>\n<p data-pid=\"oFV-5iWw\">我博士期间花了两年时间合作的第一个项目，是物体破碎。网上有人说，计算机图形学是程序员的三大浪漫之一（另两个是操作系统和编译原理），但那时的我还没有看到浪漫，只看到了狂拽炫酷，只想在siggraph上播最帅的demo，做最靓的仔。</p>\n<p data-pid=\"9PM9S8f2\">那时我学完了计算固体力学。跟许多做仿真的初学者一样，一切都是从模拟果冻开始，毕竟果冻是最典型的弹性体，并且往往很软，不会给ODE（常微分方程）的时间步离散格式带来过分stiff从而要么dt小，要么系统难解的这个数值问题。于是在弹塑性固体里面，我找到一个想要模拟的案例：子弹射穿果冻。那时乃至今日看来，都没有多少比这更炫酷的实拍视频：</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-b83b888f52f42c9b975df6a453bb2516_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"374\" data-rawheight=\"187\" data-thumbnail=\"https://pic3.zhimg.com/v2-b83b888f52f42c9b975df6a453bb2516_b.jpg\" class=\"content_image\" width=\"374\"></figure><p data-pid=\"MlJL0mfx\">现在教职期间，我常告诉自己的学生，想做什么科研，在大致调研相关工作并确定学术品位和潜在影响力之后，可以直接开始撸代码，不要太担心techinical contribution不够。因为你开始做之后，很快就会遇到你之前多半没预料到的问题，解决它们将成为你文章的最主要contribution。我们用有限元去写果冻破碎，不到半个月，就碰到了两个重大的难题：（1）如何自然破裂，即不能在裂面看到三角形丑陋的样子，和（2）如何稳健地处理复杂碎片之间的摩擦碰撞。</p>\n<p data-pid=\"YdwRAAKQ\">拓扑变化哪家强，levelset敢称王。要实现自然破裂，结合有限元和level set方法是一个非常巧妙的思路。Level set有非常强的灵活性，可以从各种自然的角度去分裂四面体，而且可以完全避免重新划分网格（remesh）。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-3506d865fdc6a208e3168b5daba8df9b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1321\" data-rawheight=\"410\" class=\"origin_image zh-lightbox-thumb\" width=\"1321\" data-original=\"https://pic4.zhimg.com/v2-3506d865fdc6a208e3168b5daba8df9b_r.jpg\"></figure><p data-pid=\"T0iOnaEn\">Levelset方法的发明人Stan Osher在UCLA，给了我们一些宝贵的建议，很快，破裂的问题便迎刃而解了。</p>\n<p data-pid=\"nMINNFxp\">这篇文章，我更主要负责的是做摩擦碰撞。建模破裂之后，这顺其次成为最头疼的事情。levelset的marching tetrahedra切割法带来了无数形状“恶心”的果冻碎片：在裂面上，有的三角形瘦如一道闪电，有的扁如一张大饼。计算几何上，这些奇特的三角形被称作是“ill conditioning”，想要用普通几何方法去搞定它们的碰撞，不说碰撞算法本身的case难以穷举，光是浮点数精度带来的千变万化的误判就足以让人望洋兴叹。我花一年时间试了很多算法，皆以宣告失败。</p>\n<p data-pid=\"z_W5LEFt\">最值得讲的一个算法，是一个非常大胆的idea。我把解算完的固体投射到一个规则的网格上，然后让网格假装看到的是不可压流体，求解一个泊松方程，把速度场变成无散的，再插值回到固体上。这竟给出了非常漂亮的不穿透解！但是缺点在于，物体的运动被变的太像流体一般轻盈灵动了，缺少了那份固体特有的执拗。我便去问我的导师Joseph，有没有类似于这个解流体方法的解固体的方法，我想拿来在碰撞上试一试。他回忆良久，说出了我一个我随后持续专注十年的名称：MPM。</p>\n<p data-pid=\"noJINPyj\">MPM是1995年在美国的国家实验室发明的。它是一个混合拉格朗日粒子和欧拉网格的固体解算方法。往前追溯到1960年代的Particle-In-Cell（PIC法，最初用于求解等离子体物理的麦克斯韦方程）和1980年代的Fluid-Implicit-Particle-Method (FLIP法，用于流体结算， <a class=\"member_mention\" href=\"https://www.zhihu.com/people/9d0cd62f9071c2b003b2ef7b017fb7f5\" data-hash=\"9d0cd62f9071c2b003b2ef7b017fb7f5\" data-hovercard=\"p$b$9d0cd62f9071c2b003b2ef7b017fb7f5\">@张心欣</a> 的导师Robert Bridson，我的师叔，于2005年引入图形学）。它像流体一样，自动防止了材料间的穿透，又可以漂亮地求解固体的方程。把MPM拿过来做碰撞处理，在当时的我看来，再合适不过了：</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-fe72dd6fa5e1f54be680d8b67493d879_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1298\" data-rawheight=\"365\" class=\"origin_image zh-lightbox-thumb\" width=\"1298\" data-original=\"https://pic2.zhimg.com/v2-fe72dd6fa5e1f54be680d8b67493d879_r.jpg\"></figure><p data-pid=\"0fsLBwgV\">终于，我交了一份目前回头看来远远不够完美的答卷：</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-2dd4973846c53400f1b9d8e3494bebc5_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"450\" data-thumbnail=\"https://pic2.zhimg.com/v2-2dd4973846c53400f1b9d8e3494bebc5_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic2.zhimg.com/v2-2dd4973846c53400f1b9d8e3494bebc5_r.jpg\"></figure><p data-pid=\"Iy4NNjsl\">这颗子弹大的有点夸张，更像一枚炮弹。它被评为了SCA 2013的Best Paper Award。它也炸开来两个MPM带来的学术大坑：拓扑变化的多材料，和自动处理的摩擦碰撞。我和MPM被凑到了一起，从暧昧到沉迷。</p>\n<p data-pid=\"pB3flz32\">彩蛋：文章里还首次用刑了一只犰狳，引起了许多论文读者的不适。但后来这个场景，竟多次被别的研究者作为benchmark来follow，那可不怪我咯。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-589ffa9b1f957f308280f820659b6cd2_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"450\" data-thumbnail=\"https://pic3.zhimg.com/v2-589ffa9b1f957f308280f820659b6cd2_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic3.zhimg.com/v2-589ffa9b1f957f308280f820659b6cd2_r.jpg\"></figure><h2>第三章：雪与海的浪漫</h2>\n<p data-pid=\"-ITbKn0c\">学习MPM的那几个月，同组的俄国师兄Alexey也加入到粉丝小分队中来，并主导了广为流传的“MPM snow”的那篇文章。一时间，我们组和迪士尼的联姻传为佳话。有我在内的好几个学生去迪士尼实习和参与写作Production软件代码。在冰雪奇缘的庆功宴上，我第一次尝到技术产业化的喜悦。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-990de8e73c88e6fe3cd11891158ca9af_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"433\" data-rawheight=\"606\" class=\"origin_image zh-lightbox-thumb\" width=\"433\" data-original=\"https://pic4.zhimg.com/v2-990de8e73c88e6fe3cd11891158ca9af_r.jpg\"></figure><p data-pid=\"-blVHMn4\">冰雪奇缘之后，迪士尼做了一个Big Hero 6超能陆战队。在那里，MPM被用在模拟一些奇怪的材料上，这是个未怎么宣传过的信息。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-aaeebfd99143f0bca8db5525c2c87c7e_b.gif\" data-size=\"normal\" data-rawwidth=\"375\" data-rawheight=\"398\" data-thumbnail=\"https://pic3.zhimg.com/v2-aaeebfd99143f0bca8db5525c2c87c7e_b.jpg\" class=\"content_image\" width=\"375\"><figcaption>Disney&amp;#39;s Big Hero 6</figcaption></figure><p data-pid=\"0qnp2mb8\">时间随之转移到2014年。我打算博士毕业了，想做一些在MPM和PIC里面更数学更基础的东西，又同时希望能在现有的FLIP流体和MPM固体上做出有应用价值的变革。那么回顾一下，用FLIP做流体，和用MPM做固体，流程中的数学上有什么不合理的hack呢？内行人一定会指出：是FLIP-PIC blending ratio。FLIP和PIC其实可以指代混合粒子网格法中，网格向粒子插值的那个步骤。PIC直接做速度场的插值，但是会引入巨大的数值粘性，FLIP插值速度增量，但是会引入巨大的不稳定性。于是图形学的流体泰斗Robert Bridson教授在2005年就提出，把FLIP的结果乘以0.97，再把PIC的结果乘以0.03，然后把它们加起来。这个数字是一个用户可调的参数，但可调而不可控！不同的场景下，不同数字会给出非常不同的结果。它是艺术家的噩梦，是强迫症的地狱。于是我决定干一票大的，把这个东西除掉，因为我有一个信念：需要设置heuristic参数的仿真算法绝不可能是一个好算法的最终形态。</p>\n<p data-pid=\"ikJW2ZLj\">再结合对于角动量守恒方程的理论分析，跳过一些技术细节，Affine Particle In Cell （APIC）被误打误撞推导了出来。FLIP流体和MPM固体进入了一个新的篇章，艺术家们可以更轻松的得到它们需要的仿真结果粘稠度，无论是山川大河，还是岩浆滚滚。它们在我心中，是可以媲美冰雪的浪漫。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-7ea0a7e40e6e0a559b67da86423f1326_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1291\" data-rawheight=\"432\" class=\"origin_image zh-lightbox-thumb\" width=\"1291\" data-original=\"https://pic3.zhimg.com/v2-7ea0a7e40e6e0a559b67da86423f1326_r.jpg\"></figure><p data-pid=\"jjORgQzk\">迪士尼非常高兴，迫不及待地把APIC用进了海洋奇缘：</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-218278e9a5807afb79c40e9fe5da4e02_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1337\" data-rawheight=\"398\" class=\"origin_image zh-lightbox-thumb\" width=\"1337\" data-original=\"https://pic3.zhimg.com/v2-218278e9a5807afb79c40e9fe5da4e02_r.jpg\"></figure><p data-pid=\"TG8xcioL\">2015年夏天，我毕业和结婚。婚礼在洛杉矶南边的玻璃大教堂，有山有海有树林。那年暑假的SIGGRAPH，我认识了很多很多志同道合的朋友。印象最深的是在流体的session上，我看到一位风流倜傥的银发少年。他跑来问我，“今年的好文章众多，能长久流传的是哪几个？”我随便应付了几句。他说道：“今年的文章，有两篇最diao，一篇是我的<a href=\"https://link.zhihu.com/?target=https%3A//zhxx1987.github.io/IVOCK.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">IVOCK</a>，另一篇是你的APIC。”我吃了一惊，连忙互换姓名。原来这位霸气的少年，叫 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/9d0cd62f9071c2b003b2ef7b017fb7f5\" data-hash=\"9d0cd62f9071c2b003b2ef7b017fb7f5\" data-hovercard=\"p$b$9d0cd62f9071c2b003b2ef7b017fb7f5\">@张心欣</a> ，他现在带领“泽森科工”在为中国特效打天下。那时纯粹的我们，在对方双眸反光里，都看到了一个勇者，持各自打造的巨剑，浴血挑战着一头叫做数值耗散的恶龙。自那天起，我们也开始了迄今长达七年的并肩合作。</p>\n<p data-pid=\"0ds1TlVX\">毕业之后，我继续深耕MPM固体和流体。学术界的人其实蛮喜欢立flag。我就一直尽量坚持去贯彻一个基本原则：即使我的仿真文章是投在图形学会议和期刊上，我也绝不为了视觉效果去做任何不符合物理和数学原理的hack；我需要每个算法都普适到整个计算物理学。这个原则给后来教授期间的我带来了很多的好处：包括了（1）自然科学研究基金的青睐，（2) 在Nature子刊发表的MPM自然灾害预测技术（雪崩，山体滑坡，泥石流，冰川碎裂，海啸），</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-067442acd35d6f42fd18f0c0ff9f8d1b_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"338\" data-thumbnail=\"https://pic4.zhimg.com/v2-067442acd35d6f42fd18f0c0ff9f8d1b_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic4.zhimg.com/v2-067442acd35d6f42fd18f0c0ff9f8d1b_r.jpg\"></figure><p data-pid=\"7u_PP1au\">以及（3）医院十分喜爱的虚拟创伤和手术的仿真平台：</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-f874a6199ada6cbfc4f02f4a6379e0f0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1072\" data-rawheight=\"528\" class=\"origin_image zh-lightbox-thumb\" width=\"1072\" data-original=\"https://pic1.zhimg.com/v2-f874a6199ada6cbfc4f02f4a6379e0f0_r.jpg\"></figure><p data-pid=\"F_fgGdd9\">它们也许没有雪与海一样浪漫，但却更加真实和直接地影响到了这个世界，甚至帮忙拯救生命。这些工作也给图形学里做物理仿真的同行在自然科学和医学领域赢得了更多的尊重，纠正这些别的领域的人关于图形学就是不断引入他们做的东西的误解。毕竟很多图形学论文喜欢把这个叫作contribution：“We introduce the XXX method to computer graphics.” 我想做的，是要物理学和数学的人发论文说同样的这句话，但是把“to”改成“from”。最近遇到的一位做经典力学的同事发出感叹：“好一波反向输出！”</p>\n<p data-pid=\"H2lxcFH9\">既然想到固体仿真在医学上的应用，一缕额外的回忆又涌上心头。2016年，我特别想把虚拟人体给产业化，也探索了很多不同的方向。其中比较有意思的，便是与lab师弟，也是好哥们的如今体素科技CEO丁晓伟讨论的整形手术预测。当时我跑了个隆胸动力学预测的demo（包含了对胸部软组织、皮肤、和硅胶假体全方位的模拟），也在洛杉矶聊了一些整形医生，但感觉市场需求度不够大，所以没有继续下去。也不知道元宇宙跨领域越来越火热的今天，这个方向现在怎么样了。</p>\n<p data-pid=\"PzI2jStU\">【这里本有个视频，但不能放】</p>\n<h2>第四章：摩擦摩擦，在光滑的路上，摩擦</h2>\n<p data-pid=\"GIXCKH86\">前面说到，2012年我便用MPM的思路去尝试处理了破碎仿真里的物体碰撞。但是那个算法只能对付不同碎片之间的碰撞，对自碰撞self collision无可奈何。MPM作为一个用粒子来描述物体的离散格式，毕竟天然最适合如冰雪沙土般像粒子一样的物体。</p>\n<p data-pid=\"9z6mHyaG\">布料和毛发则是每一个做固体仿真的人都想攻克的东西。科学研究应当尽量以人为本，而布料和毛发跟人的关系真的太大了。处理摩擦碰撞的算法很多，它们做的好的地方都一样优秀，做的不好的地方却五花八门。于是2017年，我重新回到摩擦碰撞这个战场。跟MPM处在105度热恋中的我，选择了一个所有人都没有想过的思路：用MPM塑性去挑战这个课题。</p>\n<p data-pid=\"SdoOYtLo\">那时我已经学会了Druker-Prager塑性屈服面，并成功用它做出了MPM沙子。沙子的本构模型有两个要素：第一，它支持分开，不支持挤压；第二，它往边上滑的时候，切向力和法向力要满足库伦摩擦定律。仔细回味一番，这两个特性，明明不只是沙子所特有的啊！布料、毛发、橡皮、刚体等等，哪个常见固体的碰撞不是要遵循这两个定律呢？</p>\n<p data-pid=\"davdSEGJ\">于是我决定抛弃传统的基于点和三角形，边和边几何相交特性的摩擦碰撞理念（ditto里实现过的那一套），而是采用MPM“连续介质力学”的观点。管他是布料还是毛发，都是一些连续的空间占用而已。在这个观点下，它们跟沙子唯一的区别便是，沙子是三维的“体”，而它们分别是三维空间中二维和一维的曲面。想到这一点，一切便豁然开朗：如果Drucker-Prager塑性可以让三维的MPM沙子满足摩擦碰撞的性质，那么我只需要推导出二维和一维子空间上所对应的类似的塑性，便可以让MPM布料和毛发满足同样自动摩擦碰撞的性质！</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-4185c9d6d8c27fd1f0a108533b9df7b3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1314\" data-rawheight=\"744\" class=\"origin_image zh-lightbox-thumb\" width=\"1314\" data-original=\"https://pic4.zhimg.com/v2-4185c9d6d8c27fd1f0a108533b9df7b3_r.jpg\"></figure><p data-pid=\"DWlT7MpD\">以布料为例，通过对形变梯度的QR分解，我们可以设计一个精巧的弹性能量和塑性屈服面来“管理”布料在法向上摩擦碰撞力所需要满足的应力条件。直观上来讲，在曲面方向，布料仿佛一束束被交织的沙砾，沿着布料的切向望去，满布上都写着两个字“库伦\"。</p>\n<p data-pid=\"-6UkK1sQ\">意识到了这一点，处理一维二维曲面的摩擦碰撞便与处理三维沙子的摩擦碰撞别无二致。只需要将这新的本构模型写入曲面上的顶点，MPM便全自动地默默处理了剩下的一切。从布料到毛发，从地毯到毛衣，一切传统的碰撞检测和碰撞处理都被抛弃，一把粒子，一架网格，便能生成一段美妙的动画。这种颠覆式的建模方式，如今我回头看，仍觉得是走出了魔鬼的步伐，是自己学术生涯最满意的MPM论文。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-bf080d15c4cee438e3b2245cc12d6889_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1598\" data-rawheight=\"962\" class=\"origin_image zh-lightbox-thumb\" width=\"1598\" data-original=\"https://pic2.zhimg.com/v2-bf080d15c4cee438e3b2245cc12d6889_r.jpg\"></figure><p data-pid=\"QlMb0E8F\">那一年去siggraph 2017宣讲物质点法，抒发的情感只能用已故的李兆基老师的经典台词来形容，“比我的初恋更加诗情画意。”</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-5aa6a916aedaebea105666495399faef_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"251\" data-rawheight=\"171\" data-thumbnail=\"https://pic4.zhimg.com/v2-5aa6a916aedaebea105666495399faef_b.jpg\" class=\"content_image\" width=\"251\"></figure><p data-pid=\"ar4_bMQT\">这篇文章的2D版还在太极语言中被实现了出来（<a href=\"https://zhuanlan.zhihu.com/p/414356129\" class=\"internal\">橘子猫：Taichi实现2D Anisotropic Elastoplasticity Cloth</a>），代码十分简洁，妙不可言。</p>\n<p data-pid=\"KxNsmjcV\">后来第二年的SIGGRAPH2018，哥伦比亚大学杀出来一员猛将 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/ecf74d1b95762c56eebfe55935655e26\" data-hash=\"ecf74d1b95762c56eebfe55935655e26\" data-hovercard=\"p$b$ecf74d1b95762c56eebfe55935655e26\">@Raymond Fei</a>，把这套步法跟APIC结合起来，做了一份令人叹为观止的布料与水相互作用的工作（<a href=\"https://link.zhihu.com/?target=https%3A//github.com/nepluno/libwetcloth\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">libwetcloth</a>），一百分的赏心悦目。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-e936274713756ef62e6c7d2f8ab60f15_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1999\" data-rawheight=\"375\" class=\"origin_image zh-lightbox-thumb\" width=\"1999\" data-original=\"https://pic2.zhimg.com/v2-e936274713756ef62e6c7d2f8ab60f15_r.jpg\"></figure><p data-pid=\"bB2-2tu1\">参会SIGGRAPH 2017，我还有一个额外的目的：招纳自己的第一个学生。开会时，我在宾夕法尼亚大学的助理教授生涯刚开始不久，孤苦伶仃。一场场灯红酒绿的派对，一间间熙攘喧嚣的酒吧，我在会场外面的夜搜寻着那个可以一起谈笑风生个几年的小伙伴。高级的猎人都会伪装成猎物。在一个昏暗的角落，我看到一个熟悉的身影在月下独酌，对我目送秋波。那不是一年前张心欣在烤肉店介绍给我的 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/9f3ee58deeb19551bd92d9591e4503d7\" data-hash=\"9f3ee58deeb19551bd92d9591e4503d7\" data-hovercard=\"p$b$9f3ee58deeb19551bd92d9591e4503d7\">@李旻辰</a> 吗？我记得他！UBC的一个精壮帅小伙儿，跟张心欣做过一篇流体的文章。我点了两杯火辣的苹果马提尼，摇摇晃晃地走了过去。“还记得我吗？”“记得记得，来，搞一杯！”那一杯，给下一个不醉不归的五年学术夜宴，拉开了序幕。</p>\n<h2>第五章：少年英雄胡渊鸣</h2>\n<p data-pid=\"tHzUyEZo\">2017年的夏季注定要遇到更多不平凡的人。话分两头，在酒吧初遇李旻辰之前的那一年早些时候，图形学领域广泛流传着这么一个都市传说。有一位策马扬鞭的少年武士，他没有发表过一篇SIGGRAPH论文，但他实现了一百篇；他没有开源过一套代码，但他有一百万行张弓待发；他接手的图形学仿真实现，可以在一夜之间效率提高十倍；他三天没有睡觉，便重现了四年来的所有MPM论文，并且提出了一百种改进的方法。他究竟是神仙的化身？还是地狱的使者？一时间流言四起，有人甚至说他要建立新的计算机图形学秩序。还在默默想着MPM问题的我更是夜不能寐。这小子，是何方神圣？</p>\n<p data-pid=\"zkojv9uk\">他果不出所料地杀上门来了。如想象般翩若惊鸿的 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/19787805e0d1f80fe5501ec60be84d6a\" data-hash=\"19787805e0d1f80fe5501ec60be84d6a\" data-hovercard=\"p$b$19787805e0d1f80fe5501ec60be84d6a\">@胡渊鸣</a> ，带着一位比他更加神秘且腼腆的小伙伴，从清华杀到了我UPenn实验室的门口。“我们来跟你一起做MPM。”他的话简短有力。“好，开始吧。”那时的我们，不会寒暄客套，只需要看到一个共同的研究目标便一切尽在不言中。那时他带来的小帮手，叫方火奥，我去google，哦，方燠 yù。现实绝非一帆风顺，我们高速迭代经历了一些失败的科研项目，才最后有了MLS-MPM的发明和后续，简洁而又精彩。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-c98735f7192a2005e1f7f4b121126f32_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1412\" data-rawheight=\"362\" class=\"origin_image zh-lightbox-thumb\" width=\"1412\" data-original=\"https://pic3.zhimg.com/v2-c98735f7192a2005e1f7f4b121126f32_r.jpg\"></figure><p data-pid=\"ChXQyX58\">那时，我有一套自己的C++库，远超当年的ditto。我的库叫做“jixie”（机械)。胡渊鸣带来了他的库，叫做“taichi”（太极）。那时太极还是一个C++库。两个库各有千秋，碰撞出许多热烈的火花。胡渊鸣对我助理教授生涯的研究重心，尤其在对榨干计算机性能的追求上，起到了很大的启发性作用。</p>\n<p data-pid=\"9csAkYFd\">英雄相惜，终须一别，胡渊鸣要远赴MIT去做别的项目，我在披萨店饯别。“MPM的发展将缓慢下来！”我怅然若失。他笑了笑，告诉我，仍有一个人跟我去打MPM多物理仿真的江山。我目光一瞥，才猛然惊醒，这段时间在刀光剑影里一起谈笑风生的，还有另一位比他更年轻的英雄少年！言辞不多的他，在科研的战场上，虽不像胡渊鸣一样耀眼的艳丽，却散发出一股更加刚猛的炽热。</p>\n<p data-pid=\"fzoi2z_T\">方燠成为了我第二个学生。如果旻辰是一杯浓厚的酒，底蕴日渐成熟，方燠就是一把嗜血的刀，愈加锋利凶残。他在随后的5年里，把旧论文的实现和新想法的尝试这两件事的速度都做到了像居合斩一般，一刀断骨刀刀落命。</p>\n<p data-pid=\"OEycTUBo\">在那段日子里，在方燠、旻辰、和一干猛将的拼搏下，我们一直推进高性能的MPM多物理仿真，直到亿万粒子级别的仿真也变得轻松写意。我们通过跟超算中心的合作，把MPM发展到了能进行Exascale computing的超算机上，每秒算10的18次方个浮点运算。这样看来，对于高分辨率的追求，我们是认真的。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-5b93ca9c5c95c1edc083dbadb9ddc4e4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1194\" data-rawheight=\"474\" class=\"origin_image zh-lightbox-thumb\" width=\"1194\" data-original=\"https://pic1.zhimg.com/v2-5b93ca9c5c95c1edc083dbadb9ddc4e4_r.jpg\"></figure><p data-pid=\"TrpJDCTN\">后来，我的实验室汇集了更大一批意气风发的孩子们，屈子吟 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/94c60141d359d88b9e2f99ef5e453b74\" data-hash=\"94c60141d359d88b9e2f99ef5e453b74\" data-hovercard=\"p$b$94c60141d359d88b9e2f99ef5e453b74\">@ziyin</a> (<a href=\"https://zhuanlan.zhihu.com/p/72916159\" class=\"internal\">ziyin：北京电影学院发了一篇满是数学公式的计算机顶会论文，并开源了其代码</a>) ，仇宇星， <a class=\"member_mention\" href=\"https://www.zhihu.com/people/6df88704875b9adbef7231ac365bba95\" data-hash=\"6df88704875b9adbef7231ac365bba95\" data-hovercard=\"p$b$6df88704875b9adbef7231ac365bba95\">@王鑫磊</a> ，李轩，陈宇诺， <a class=\"member_mention\" href=\"https://www.zhihu.com/people/7808e2f478cbb347bfb86ac1c44e43c4\" data-hash=\"7808e2f478cbb347bfb86ac1c44e43c4\" data-hovercard=\"p$b$7808e2f478cbb347bfb86ac1c44e43c4\">@曹亚帝</a> ，等等，他们围绕着方燠主导架构的c++仿真引擎ziran（自然），在物理模拟的海洋里尽情嬉戏。他们飘逸的学术舞曲还在不断被谱写，有他们在身边，我感觉自己永远抓住了青春，每天都是学术上的“掰饼聚会”：</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-9b5c05793c7d6c8aadeabb657e6a2fd2_b.gif\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"338\" data-thumbnail=\"https://pic3.zhimg.com/v2-9b5c05793c7d6c8aadeabb657e6a2fd2_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic3.zhimg.com/v2-9b5c05793c7d6c8aadeabb657e6a2fd2_r.jpg\"><figcaption>To break bread is to affirm trust, confidence, and comfort with an individual or group of people.</figcaption></figure><p data-pid=\"12lO3_hC\">在帮助人类打通虚拟世界和现实世界的历史使命上，我们致力于仿真这一个点，用硬核的根基散发千万的枝叶。下面的这些都是我的实验室这些年研究过的方向。这些成果中也充满了极其珍贵的如北京大学朱松纯教授、陈宝权教授、以及浙江大学唐敏教授等前辈传授的经验和给予的帮助。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-bc93bb48ea9dbb6215589277b6ce4a5e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1141\" data-rawheight=\"636\" class=\"origin_image zh-lightbox-thumb\" width=\"1141\" data-original=\"https://pic3.zhimg.com/v2-bc93bb48ea9dbb6215589277b6ce4a5e_r.jpg\"></figure><h2>第六章：与timestep结缘</h2>\n<p data-pid=\"DW97ZLr-\"><i>步者乃一身之根基，运动之枢纽也。——《太极拳十大要论》</i></p>\n<p data-pid=\"efRyUvdZ\">在元宇宙的“基础架构”之中，如果建模是内功，渲染是招式，那么物理仿真就是步法或身法。步法与时间和运动紧密绑定在一起，在时间上做微分和积分，从过去预测未来，用未来指引过去。（指引过去，靠的是可微分模拟。）不管是逍遥派的凌波微步，泰森的蝴蝶步法，还是奥拉朱旺的梦幻脚步，它们都反映了一个道理：有一套成熟的步法是一位集大成者立于不败之地的一个可靠的保证。</p>\n<p data-pid=\"6B75lf_4\">在动力学物理仿真中，大家最常说的一个词，就是timestep：时间步长，Delta t。正向物理仿真的过程，本质上往往就是微分方程在时间轴上积分的过程，这个过程，又被称为timestepping method；我愿译其为“时间步法”。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-21a783f60cff407c35bdc251db65f846_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1682\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb\" width=\"1682\" data-original=\"https://pic3.zhimg.com/v2-21a783f60cff407c35bdc251db65f846_r.jpg\"></figure><p data-pid=\"Qsvw8jmC\">现实中的时间是连续的，但仿真中的时间是离散的。对于一段24 FPS的动画来说，每秒钟的理想情况，是让仿真算法从一个过去的时刻往前走24步，每步走1/24秒，生成24个几何形态。除非希望对现实的逼近追求更加极致的准确性，一个通用图形学算法最好具备只需要走24步的能力。如果往前预测1秒需要走48步，或者240步、2400步，那就往往是成倍的效率降低。</p>\n<p data-pid=\"Adx1V-EZ\">可惜的是，直到2015年左右，甚至今日，仍然有无数的图形学仿真算法需要走子步（substeps）。更令人痛苦的是，即使走了子步，它们中的绝大多数仍然不能保证数值的稳定性，俗称“爆了”:</p>\n<figure data-size=\"small\"><img src=\"https://pic2.zhimg.com/v2-1685221c5f74f89f7f38a70ec9ec977d_b.jpg\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"798\" data-rawheight=\"608\" class=\"origin_image zh-lightbox-thumb\" width=\"798\" data-original=\"https://pic2.zhimg.com/v2-1685221c5f74f89f7f38a70ec9ec977d_r.jpg\"></figure><p data-pid=\"Nk7DsyTT\">放错图了。爆了的仿真其实长这样：</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-d15a2e0fd42348fdc8e34ead5a5e741d_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"338\" data-thumbnail=\"https://pic2.zhimg.com/v2-d15a2e0fd42348fdc8e34ead5a5e741d_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic2.zhimg.com/v2-d15a2e0fd42348fdc8e34ead5a5e741d_r.jpg\"></figure><p data-pid=\"YxJgm6tY\">仿真爆了就意味着得调节参数把程序重跑。我2011年在工业光魔ILM实习，我那时的实习导师告诉我，ILM里在帮复仇者联盟的绿巨人设计肌肉仿真算法，浩克一发力，程序就爆炸，重跑停不下来，delta t 小的不能再小了，机房空调费都要烧个上百万。</p>\n<p data-pid=\"706T5Tzb\">为了能够迈出1/24秒或更大的步子，我开始致力于研究基于优化的时间步法。非线性非凸数值优化是一个非常厉害的领域，如今整个神经网络和深度学习都靠它。这个宇宙最基本的物理规律：热力学第二定律（熵增原理）本身也定义了一个优化问题。因此，越来越多的应用数学家开始用优化和变分法的思路去重新思考动力学偏微分方程的数值解。</p>\n<p data-pid=\"STvqkpvR\">弹性体模拟的方程便是一个可以重新定义为寻求最小值的优化问题！在此框架之下，时间步长可以迈的任意大，不会扯到蛋。</p>\n<p data-pid=\"fzSaziTN\">此间工作很多，图形学里早期工作比较有代表性的，包括刘天添 2014年的巧妙投影动力学“Projective Dynamics: Fusing Constraint Projections for Fast Simulation” 及其2017年的拟牛顿法“Quasi-Newton Methods for Real-time Simulation of Hyperelastic Materials”（<a href=\"https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/BV1hM4y1L7VY%3Fp%3D5\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">2019年（第八届）中国科学技术大学《计算机图形学前沿》暑期课程_哔哩哔哩_bilibili</a>）（<a href=\"https://zhuanlan.zhihu.com/p/480006669\" class=\"internal\">冰点蓝：计算机图形学前沿(2019) Towards Real-time Simulation of Deformable Objects</a>），和我2015年参与的比较中规中矩的牛顿法“Optimization Integrator for Large Time Steps”。我的实验室后来则在下面四个地方分点发力：</p>\n<p data-pid=\"daii9Y1b\">李旻辰在2019年把拟牛顿法跟domain decomposition结合了起来，打败了一系列竞争对手，得到了一个非常高速度的有限元弹性体解决方案Decomposed Optimization Time Integrator “DOT”（点点有限元法）：</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-fb42e74a49e0bb8b9258268a65b09533_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"146\" data-thumbnail=\"https://pic4.zhimg.com/v2-fb42e74a49e0bb8b9258268a65b09533_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic4.zhimg.com/v2-fb42e74a49e0bb8b9258268a65b09533_r.jpg\"></figure><p data-pid=\"r8XX935p\">王鑫磊则另辟蹊径，考虑多尺度网格multigrid，让MPM也走到了超大的时间步长上面，发明Hierarchical Optimization Time Integrator “HOT”（热辣物质点法），可以高效处理超级“硬”的弹塑性体，帮助工程力学设计的仿真：</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-b44554f58993714d73304b31dfef5dbc_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"338\" data-thumbnail=\"https://pic1.zhimg.com/v2-b44554f58993714d73304b31dfef5dbc_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-b44554f58993714d73304b31dfef5dbc_r.jpg\"></figure><p data-pid=\"5Ct8oerl\">方燠则跳出牛顿和拟牛顿的思路，以“快”为目的，把MPM的加速结合上了交替方向乘子法（Alternating Direction Method of Multipliers，ADMM）上。这个方法被称为“Silly Rubber”（愚人橡皮法），可以快速模拟各种MPM适合的材料，比如奶油：</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-80a608d09f2004696198a8ab723a20c9_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"295\" data-rawheight=\"215\" data-thumbnail=\"https://pic2.zhimg.com/v2-80a608d09f2004696198a8ab723a20c9_b.jpg\" class=\"content_image\" width=\"295\"></figure><p data-pid=\"0du2tZm0\">我们最为得意的，也是最新搞出来的，便是李轩、李旻辰和我一起用几支烂笔头推导出来的SIGGRAPH 2022论文Energetically Consistent Inelasticity （ECI）。这个工作在数值计算理论上，我认为有很可观的意义：它首次让塑性力可以迈着同样大的步伐，被真正隐式求解了！也就是说之前的方法，包括上面提到的，都不准，都对塑性力做了一个强相关于 delta t 的其实很不准确的近似。那算的准有什么好处呢？当然是去跟现实对照了。跟现实连定性的视觉效果都对不上的虚拟物体，步法不够稳健，不能叫数字孪生，永远都只是游戏（没错， 这里说的的正是PhysX/PBD）。我们的坚持，是第一性原理，是我们希望一直尽力朝着真正的数字孪生方向前行的一些固执的原则。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-d1144078722cb6dd6e5b0741ff085949_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"925\" data-rawheight=\"522\" class=\"origin_image zh-lightbox-thumb\" width=\"925\" data-original=\"https://pic2.zhimg.com/v2-d1144078722cb6dd6e5b0741ff085949_r.jpg\"></figure><h2>第七章：摩擦碰撞的第三次战役，IPC魔童降世</h2>\n<p data-pid=\"lNghaYil\">开始的那些年，从最初level set fracture中的一炮双响，到MPM布料，我一直在跟“摩擦碰撞”这个难题对干。每一场仗都打的很漂亮，但都还是存在很多Limitation。以2017年的MPM布料为例，作为它的缔造者，我比任何人都能更清晰的看到它光芒下令我不堪面对的缺憾。作为一个MPM方法，它在隐式积分条件下性能非常差。它对粒子和网格的依赖给几何体强加了许多苛刻的要求：比如两者的分辨率需要尽量吻合。同时，它又像一台看似美好的特斯拉自动驾驶汽车，一不小心甩给你一个不大也不小的错误（数值粘性和偶尔的数值穿透），让你在使用时总是心怀忌惮。比如正如下图所示，MPM布料做毛衣虽然厉害，但是仔细看去，还是出现了许多穿透：</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-56bda1fc22da162eee017ba6abcb58c2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"350\" class=\"origin_image zh-lightbox-thumb\" width=\"500\" data-original=\"https://pic3.zhimg.com/v2-56bda1fc22da162eee017ba6abcb58c2_r.jpg\"></figure><p data-pid=\"7o_2CEDH\">穿透会非常严重的影响仿真的精度和可信度。它不只是模型视觉上的错误，随之而来的弹性力和摩擦力也会因穿透而变得离谱和虚幻。因此，长久以来，至少在布料这一个小方向上，我并没有能够把MPM从特效和游戏的应用中打出去。换而言之，因我坚信元宇宙和游戏的最重要区别是对“准”的把握上（这也是我不认为NVIDIA的omniverse拿着一个基于不物理方法推导出来的PhysX引擎可以做成真正元宇宙物理引擎的根本原因），MPM在布料这个方向上要走的路还很长，还需要后来者的努力。</p>\n<p data-pid=\"JYHXxG7q\">时钟拨到2020年前夕，没有征兆又似蛰伏许久的一件事情发生了。之前我把旻辰比作美酒，他便真的是这样一个学生，在陈酿的千锤百炼中一不小心就饱满丰厚，醇香持久。没几年，他便从一个学生潇潇洒洒地蜕变为一个成熟的合作伙伴。那晚，我郑重的告诉旻辰，“你刚完成的这个叫做IPC的项目，把一个困扰了计算机图形学和工程力学无数研究者几十年的一个领域给终结掉了，完美本无法触及，但IPC是我入行以来见过的，最接近完美的仿真技术。”在这一年后，旻辰以IPC斩获SIGGRAPH年度最佳博士论文奖，毫无悬念。</p>\n<p data-pid=\"d5Cjb9uR\">IPC的全称是Incremental Potential Contact，中文作增量势能接触，很拗口，还是就叫IPC吧。它的算法冗长而又毫不晦涩，刚猛而又不失优雅。在数值优化的框架下，IPC把所有基于mesh的物理仿真中“不许穿透”这个令学术界和产业界都为之痴迷的难题，从仿真问题的数学形态上就直接通过一个灵巧的定义给彻底毙掉了，其后的算法自然是如出入无人之境。“从此穿模是路人。”</p>\n<p data-pid=\"_AZll81k\">技术上，IPC提出了一个崭新而又巧妙的关于“碰撞”的数学描述方法：所谓碰撞，便是在动力学过程的最小作用量原理下，要求任何非邻接几何表面之间的欧氏距离在连续的时间轴上恒大于零。它正是又一个timestepping的时间步法！如此一来，我们得到了一个可以用数学完美描述的约束优化问题。再配以些许精巧而不诡野的算法设计，最终的IPC技术在数学、算法和实现上都令人信服。毫不夸张的说，IPC是数值仿真自发明以来，唯一的把精确碰撞和摩擦这两个要求完美解决掉的办法。它唯一的缺点是计算效率不够快；被我们后来攻克，按下不表。</p>\n<p data-pid=\"UeVRyIWC\">IPC及其2021年后续工作赋能了无数之前计算机仿真界根本做不了的事情，以绝对的稳定性、精确性、和数值收敛性涵盖了三维柔性体（“百万四面体的毛球”和“是绳子就坚持一百秒”）：</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-94725c8351a4706751802f4a46d32802_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"338\" data-thumbnail=\"https://pic3.zhimg.com/v2-94725c8351a4706751802f4a46d32802_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic3.zhimg.com/v2-94725c8351a4706751802f4a46d32802_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-7a13d7efe307c485f174d10e15bb00fb_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"588\" data-rawheight=\"250\" data-thumbnail=\"https://pic4.zhimg.com/v2-7a13d7efe307c485f174d10e15bb00fb_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"588\" data-original=\"https://pic4.zhimg.com/v2-7a13d7efe307c485f174d10e15bb00fb_r.jpg\"></figure><p data-pid=\"9YiNj5C7\">二维布料（轻松处理打结，和*任意多层*布料上身，这里只展示了四层，毕竟我们的建模制版技能点加的比较少）：</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-3b58ab0a3a80fbc6de7d64880aec1e43_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"596\" data-rawheight=\"266\" data-thumbnail=\"https://pic4.zhimg.com/v2-3b58ab0a3a80fbc6de7d64880aec1e43_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"596\" data-original=\"https://pic4.zhimg.com/v2-3b58ab0a3a80fbc6de7d64880aec1e43_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-a20d86c7750fe7a9c0441d715a8f7182_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"597\" data-rawheight=\"482\" data-thumbnail=\"https://pic3.zhimg.com/v2-a20d86c7750fe7a9c0441d715a8f7182_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"597\" data-original=\"https://pic3.zhimg.com/v2-a20d86c7750fe7a9c0441d715a8f7182_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-b5dd7a1f1c90d0d6855caf3c23773f88_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"621\" data-thumbnail=\"https://pic1.zhimg.com/v2-b5dd7a1f1c90d0d6855caf3c23773f88_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-b5dd7a1f1c90d0d6855caf3c23773f88_r.jpg\"></figure><p data-pid=\"0wqCAAck\">二维薄壳（跟真实的一叠扑克牌的厚度完全吻合，没有任何别的方法可以做到）（这是不是可以拿去开元宇宙赌场？）：</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-300f122cefe92adc51e530dae0a3bca5_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"293\" data-thumbnail=\"https://pic2.zhimg.com/v2-300f122cefe92adc51e530dae0a3bca5_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic2.zhimg.com/v2-300f122cefe92adc51e530dae0a3bca5_r.jpg\"></figure><p data-pid=\"-L8HswDe\">以及首次有“不穿透保证”与“精准摩擦力”两个性质的的一维细杆（面条、毛发）：</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-cf9f75609788e0d96c9713396d30be4e_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"597\" data-rawheight=\"300\" data-thumbnail=\"https://pic3.zhimg.com/v2-cf9f75609788e0d96c9713396d30be4e_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"597\" data-original=\"https://pic3.zhimg.com/v2-cf9f75609788e0d96c9713396d30be4e_r.jpg\"></figure><p data-pid=\"knnpEC50\">旻辰向来沉稳低调，他宣传IPC的文章（<a href=\"https://zhuanlan.zhihu.com/p/154542103\" class=\"internal\">李旻辰：IPC: SIGGRAPH 2020开源有限元碰撞独家处理方案</a>）也跟他的人一样靠谱实在。2020年1月，我在IPC的第一篇论文里，写下过这么一段总结（中文意译略有改写）：</p>\n<p data-pid=\"bAeQ6tav\"><i>“IPC技术适用于所有基于网格的固体模拟。无论是自碰撞、外碰撞、甚至是来自于低维曲面的碰撞，IPC都是一个绝顶灵活、有效、和无条件保证成功的解决方案。IPC对图形学和工程力学基于或不基于有限元的全部应用都提供了有史以来第一个几何不穿透，体积不反转的可证明的直接保证。从此以后，跑固体仿真只需要输入真实世界可以测量的物理参数和几何参数，而再不需要去调节所谓的数值参数。在此之上，IPC承诺必定能够对任意复杂的状态给出求解，并且这个解就是这个世界上现存所有算法能给出的，最接近真实世界摩擦碰撞结果的解。”</i></p>\n<p data-pid=\"l_w2nrtw\">几年过去了，这个总结被图形学、机械工程、以及机器人领域的同行不断的引述和验证。作为一个学者，我从未如此夸过一个工作，毕竟有吹牛皮之嫌。但是IPC不一样，我不担心，因为这个牛皮是钢铁铸成，永远也吹不破。</p>\n<p data-pid=\"r0bBUWCo\">IPC这么完美，还有什么可以改善的呢？正如上文所说，它的计算效率存在一定的问题。在我们一筹莫展之计，一位老友突然与我们取得了联系。此人名作阴阳（ <a class=\"member_mention\" href=\"https://www.zhihu.com/people/da965a10cfcc7dd65a171f9c00e860f7\" data-hash=\"da965a10cfcc7dd65a171f9c00e860f7\" data-hovercard=\"p$b$da965a10cfcc7dd65a171f9c00e860f7\">@Yin Yang</a> ），继胡渊鸣之后成为第二个让我瞧见八卦图头像便能开怀之人。克莱姆森大学的杨垠教授（现在迁去了犹他大学）姗姗来迟，他是降维仿真和GPU加速仿真的代表人物。我们一拍即合，开始建立深厚的革命友谊。自那天起，杨垠、旻辰和我开始了围绕IPC技术的一系列深度合作项目。在我们的思维火花碰撞之下，浩如烟海的脑洞和研发项目扑面而来。以2022年为例，我们便让IPC生态系统在刚体仿真和实时仿真两个方向取得了不亚于原始IPC的崭新成果。</p>\n<p data-pid=\"hwTZQgwi\">第一个成果，是我们在刚体仿真上取得的重大成就。刚体与柔性体自古以来便被分开处理，求解它们的方法不能说是关系不大，只能说是几乎毫无关系。在IPC的加持下，我们提出了崭新的“Affine Body Dynamics (ABD)” 仿射体动力学，在淘汰传统刚体模拟的路上直接飙到终点，让刚体重新回归成它们在真实世界中的样子：即使最硬的物体，也会微小的形变，硬度是振金还是木头，该是多少就是多少，不需要被假设成绝对刚体。在ABD技术的加持下，我们在拥有所有IPC优点的同时，达到了媲美现有刚体引擎的速度和全方位碾压的精度。高速而又精准的机械体仿真首次成为可能。</p>\n<p data-pid=\"BY2bZq4t\">真实碰撞驱动的齿轮：</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-2080e26a6d69dbad5f06b5d66ef99e24_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"384\" data-rawheight=\"338\" data-thumbnail=\"https://pic1.zhimg.com/v2-2080e26a6d69dbad5f06b5d66ef99e24_b.jpg\" class=\"content_image\" width=\"384\"></figure><p data-pid=\"4Kl8gyqo\">及其受力分析：</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-44fd9d26ff6cd404792922d10f5ee0a2_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"325\" data-rawheight=\"281\" data-thumbnail=\"https://pic3.zhimg.com/v2-44fd9d26ff6cd404792922d10f5ee0a2_b.jpg\" class=\"content_image\" width=\"325\"></figure><p data-pid=\"c7YJnNPL\">带传动结构的小车（含简易气缸）：</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-5b1e7466743d1578aff01dc433c677a0_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"253\" data-thumbnail=\"https://pic1.zhimg.com/v2-5b1e7466743d1578aff01dc433c677a0_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-5b1e7466743d1578aff01dc433c677a0_r.jpg\"></figure><p data-pid=\"T_lAuXCO\">及其传动引擎的简易气缸运动的可视化（活塞运动带动旋转）</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-721fdb098bee9e025773f7b61760daa7_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"490\" data-rawheight=\"252\" data-thumbnail=\"https://pic4.zhimg.com/v2-721fdb098bee9e025773f7b61760daa7_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"490\" data-original=\"https://pic4.zhimg.com/v2-721fdb098bee9e025773f7b61760daa7_r.jpg\"></figure><p data-pid=\"N4M-VcUs\">铁链弹性波的传播：</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-598060008be937f707d68d99442328c8_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"281\" data-thumbnail=\"https://pic1.zhimg.com/v2-598060008be937f707d68d99442328c8_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-598060008be937f707d68d99442328c8_r.jpg\"></figure><p data-pid=\"WLvfM0Cx\">比较传统的场景当然也不在话下：</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-64c07abf89df12b15e1299a7231c24a8_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"338\" data-thumbnail=\"https://pic1.zhimg.com/v2-64c07abf89df12b15e1299a7231c24a8_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic1.zhimg.com/v2-64c07abf89df12b15e1299a7231c24a8_r.jpg\"></figure><p data-pid=\"jayw-xPF\">值得一提的是，ABD在机器人抓取的任务上，已经被机器人领域的学界和工业界同行验证，其成功率和对接触力/摩擦力的准确性上，已经远远超过了PBD、Bullet、Mujoco等一众现有刚体引擎；强化学习在我们的solver上，轻松训练出了真正可以转化到物理世界的控制算法，误差之小，模拟过程之惬意，非机器人业内人士不可言喻：</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-915bee497ed47f7202184fa4451cf2c4_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"640\" data-thumbnail=\"https://pic1.zhimg.com/v2-915bee497ed47f7202184fa4451cf2c4_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic1.zhimg.com/v2-915bee497ed47f7202184fa4451cf2c4_r.jpg\"></figure><p data-pid=\"eWM2QxXa\">英伟达Omniverse也宣传了很多工业机器人的场景，它的技术仍然基于PhysX（PBD），那套简单易学但毫无真实物理原则的手段。剩下的一切，还何须多言呢？也许在有些人心中，元宇宙只需要以假乱真，”看上去差不多就行了。”那么，就等时间给出“自然”选择的答案。</p>\n<p data-pid=\"IcDPSdpR\">我从方法论上表述我自己的观点。我认为，像PBD一类的技术，以快为出发点，在当年的低下算力和就是面向游戏的两个前提下，无可厚非。但是由于对数学和物理原理的修改与简化，使其在元宇宙的未来想要从快到准，路途难如蜀道。与它们截然不同的是，IPC直接先把“准”这一步做到了几乎完美，那么在这个前提下，再做快有多难呢？在算数、算法、算力的三重加持下，IPC加速之路顺畅无阻。举例而言，我们2022年的第二个成果，便轻松地实现了多层布料的实时交互仿真，并且，没有牺牲任何IPC在碰撞上所承诺的美好保证：</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-b93eb28a2a9dd2aaa57980cd234c7650_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"299\" data-rawheight=\"224\" data-thumbnail=\"https://pic1.zhimg.com/v2-b93eb28a2a9dd2aaa57980cd234c7650_b.jpg\" class=\"content_image\" width=\"299\"></figure><h2>第八章：下一个“Timestep”</h2>\n<p data-pid=\"6aFBYGe1\">十二年，我从C++都不会写的等离子体物理专业的学生，到拿到CS PhD，去常青藤做CS教授，再到UCLA应用数学拿tenure，回想一下，这其中竟没有一年被浪费，纯粹跟着喜爱的研究走，顺其自然。记得网上常有人讨论@计算机图形学的交叉学科本质。我想我本人应该就是一个不错的活标本吧。十二年的职业道路上，我也是无比幸运（毕竟射手座），遇到了太多牛逼的师长、同学、挚友、和学生，每个人都让我学到了很多。</p>\n<p data-pid=\"pss9jTAH\">那下一个十二年，我应该主要做些什么呢？思考了许久，不为立志，但求有一个计划。我想， “closing the gap between virtual reality and physical reality”，这个目标绝没有变，围绕物理仿真这一指引运动规律的轴心的原则也依旧在我心上打着思想钢印。在此之外，我与携有同样想法的三个人（ <a class=\"member_mention\" href=\"https://www.zhihu.com/people/9f3ee58deeb19551bd92d9591e4503d7\" data-hash=\"9f3ee58deeb19551bd92d9591e4503d7\" data-hovercard=\"p$b$9f3ee58deeb19551bd92d9591e4503d7\">@李旻辰</a> ，方燠，杨垠 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/da965a10cfcc7dd65a171f9c00e860f7\" data-hash=\"da965a10cfcc7dd65a171f9c00e860f7\" data-hovercard=\"p$b$da965a10cfcc7dd65a171f9c00e860f7\">@Yin Yang</a> ）一起成立了Timestep，致力于稳健、精准、高效、普适的物理仿真“步法”及它们在不同产业中的应用，并在国内以及世界多地积极打造和布局一个可持续发展的体系。万水千山不停步，希望在下一个十二年，我们跟更多同道中人一起，通过有趣和有用的技术和想法把虚拟世界和现实世界真正打通。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/fu-fan-29-23?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">蒋陈凡夫</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/560415998?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"孩子秋季进补怎么吃，猪肉鲜虾蛋饺，营养均衡又补钙，健康吃出来","date":"2022-09-05 02:12:00","description":"\n<p></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-c2c5a94dd9b7e5b42a79da86c1dcc285_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"200\" data-thumbnail=\"https://pic2.zhimg.com/v2-c2c5a94dd9b7e5b42a79da86c1dcc285_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"660\" data-original=\"https://pic2.zhimg.com/v2-c2c5a94dd9b7e5b42a79da86c1dcc285_r.jpg\"></figure><p data-pid=\"p3Jt4ymd\">秋高气爽，人的胃口都变得好起来了，最近明显感觉到食欲大开了，小宝宝也一样。</p>\n<p data-pid=\"WdYygWAL\">小宝宝添加辅食后对钙的需求量变大，除了日常的奶以外，鸡蛋也是必不可少的。一周岁以上的宝宝其实就可以适当添加成人类的饮食，不过需要做成宝宝好入口的样子。笋笋之前给我们家宝宝做了黄金蛋饺，营养健康，小巧可爱，真是宝宝吃了开心妈妈看了舒心呀。</p>\n<p data-pid=\"eVm9vs0w\">那就一起来做蛋饺吧！</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-64fa7a3760daa9ebc92c1069fbb64e5b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"811\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-64fa7a3760daa9ebc92c1069fbb64e5b_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-fd4dc3422ff550945d0d0684e522caca_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"113\" data-thumbnail=\"https://pic3.zhimg.com/v2-fd4dc3422ff550945d0d0684e522caca_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"600\" data-original=\"https://pic3.zhimg.com/v2-fd4dc3422ff550945d0d0684e522caca_r.jpg\"></figure><h2><b>食材</b></h2>\n<p data-pid=\"j4TfaEMy\">鸡蛋、猪肉末、虾肉</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-9beb24f48cf1607352f4688aa72da186_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"811\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-9beb24f48cf1607352f4688aa72da186_r.jpg\"></figure><h2><b>步骤</b></h2>\n<p data-pid=\"d8AQb_c8\">猪肉和虾肉剁成肉馅，大一些的宝宝吃可以再添加些蔬菜，营养更均衡。一周岁以上的宝宝适量加盐，一周岁以下宝宝不用加调味品。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-788be3c7075513698003bca7a82b4a9d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"811\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-788be3c7075513698003bca7a82b4a9d_r.jpg\"></figure><p data-pid=\"bhcZ4hdq\">鸡蛋打散，蛋清过敏宝宝只用蛋黄即可。鸡蛋的柔嫩性更强，想要蛋皮蛋皮更有韧劲不容易破，可以加一个鸭蛋液增加蛋皮的黏度。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-9c31ec070c68d84e5040ce1c862fe902_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"811\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-9c31ec070c68d84e5040ce1c862fe902_r.jpg\"></figure><p data-pid=\"0t458koA\">锅烧热，刷一点点油，不用太多，保证不沾就行，也可以选择直接在蛋液里加少许油也不会粘锅。找个小勺子盛蛋液，倒进锅里，旋转成圆形，尽量均匀，薄厚根据喜好就行。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-137ef909eb866fdb21ab630e8a017aac_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"815\" data-rawheight=\"614\" data-thumbnail=\"https://pic1.zhimg.com/v2-137ef909eb866fdb21ab630e8a017aac_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"815\" data-original=\"https://pic1.zhimg.com/v2-137ef909eb866fdb21ab630e8a017aac_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-38ed66ef2055a796d01a71c14331dfde_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"811\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-38ed66ef2055a796d01a71c14331dfde_r.jpg\"></figure><p data-pid=\"RBWaKMDz\">蛋液差不多凝固还没干透的时候就可以放入馅，馅料不用放在中间，可以稍稍侧一点。因为给小宝宝吃所以不要做太大个，小一点好入口，年龄大一些的宝宝吃就可以做的大一些。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-41c0f363b18b3e3f33176bc2172cee64_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"811\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-41c0f363b18b3e3f33176bc2172cee64_r.jpg\"></figure><p data-pid=\"bvG8-ILx\">小心地用筷子将蛋皮折叠，差不多完全盖住肉馅就行，不用纠结是不是完全重叠。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-de020edd7733deeddebb0e0da9461ab7_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"815\" data-rawheight=\"614\" data-thumbnail=\"https://pic4.zhimg.com/v2-de020edd7733deeddebb0e0da9461ab7_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"815\" data-original=\"https://pic4.zhimg.com/v2-de020edd7733deeddebb0e0da9461ab7_r.jpg\"></figure><p data-pid=\"rp6y3lgt\">用筷子压一压定个型。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-d7103cad0a28bca788a6a407b711670e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-d7103cad0a28bca788a6a407b711670e_r.jpg\"></figure><p data-pid=\"aQZOyAqy\">然后用筷子夹住两边，筷子先不要拿走，夹一会，定型了夹出来就好了。</p>\n<p data-pid=\"FW_p5qai\">如果不好操作，可以如图这样拿另一双筷子辅助，做多了就熟练了。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-c1b99c27a7b7878f7972cff7d45e6b30_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"815\" data-rawheight=\"614\" data-thumbnail=\"https://pic1.zhimg.com/v2-c1b99c27a7b7878f7972cff7d45e6b30_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"815\" data-original=\"https://pic1.zhimg.com/v2-c1b99c27a7b7878f7972cff7d45e6b30_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-fd67a1ab717a8f3bb511614b938ecd92_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"815\" data-rawheight=\"614\" data-thumbnail=\"https://pic3.zhimg.com/v2-fd67a1ab717a8f3bb511614b938ecd92_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"815\" data-original=\"https://pic3.zhimg.com/v2-fd67a1ab717a8f3bb511614b938ecd92_r.jpg\"></figure><p data-pid=\"VgJW6pDD\">定型一会就好了。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-221906c50491e1c16f8abe2e077e0f5c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"811\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-221906c50491e1c16f8abe2e077e0f5c_r.jpg\"></figure><p data-pid=\"IsDSQpOW\">金鱼蛋饺完成。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-704a868b9395f3ca4640532ef4bae735_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-704a868b9395f3ca4640532ef4bae735_r.jpg\"></figure><p data-pid=\"Xnnrabrd\">做好的蛋饺只是半成品，需要再加工才能吃，现吃的话可以上锅蒸5分钟将其做熟，也可以放入汤里或煎或炸。如果要保存起来可以直接放入冰箱，也可以蒸熟再冰冻保存，冰冻可以放一个月。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-d0fdf7bb769bc759b8e1a6c1c4cde6e0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"811\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-d0fdf7bb769bc759b8e1a6c1c4cde6e0_r.jpg\"></figure><p data-pid=\"y8ra9Y9t\">做好的蛋饺蛋皮金黄，个头饱满，小金鱼的造型特别可爱，小朋友看了一定喜欢，适合10月龄以上对食材不过敏的宝宝，对鸡蛋白过敏的宝宝只用蛋黄就好，不管拿来做汤或煎着吃都很讨巧哦。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-5399c4791bc36c5f0ef514b13d74087b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"811\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-5399c4791bc36c5f0ef514b13d74087b_r.jpg\"></figure><p data-pid=\"zUca9EKe\"><b>图文：</b>呵呵笋</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-7608da836b3446321469393fe445daaa_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"27\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic3.zhimg.com/v2-7608da836b3446321469393fe445daaa_r.jpg\"></figure><p data-pid=\"ekvqqJ38\">喜欢笋笋的菜，记得给笋笋点赞或留言哦。</p>\n<p data-pid=\"6UpOCKJq\">点击关注，笋笋在这里期待你的故事。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-b712c756a6f1d0b3c10cd8dbec81abb4_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"660\" data-thumbnail=\"https://pic1.zhimg.com/v2-b712c756a6f1d0b3c10cd8dbec81abb4_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"660\" data-original=\"https://pic1.zhimg.com/v2-b712c756a6f1d0b3c10cd8dbec81abb4_r.jpg\"></figure><p data-pid=\"oqkuFHIQ\">简单又幸福</p>\n<p data-pid=\"hXDris1O\">一个吃货的小世界</p>\n<p data-pid=\"VJ2mfUyQ\">温暖你的心</p>\n<p data-pid=\"-VI0JHfA\">感动你的胃</p>\n<p data-pid=\"hgqup9XV\">(＾－＾)V</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/happylovel?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">呵呵笋的小煮艺</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/560994995?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：Cloudflare 封锁 Kiwifarms；拼多多在美低调上线 Temu 等","date":"2022-09-05 00:42:50","description":"你可能错过的新鲜事Cloudflare封锁Kiwifarms9月4日，大型网络服务提供商Cloudflare在愈发高涨的公众压力下，宣布将停止为受争议的美国论坛Kiwifarms提供DDoS防御服务。 ...<a href=\"https://sspai.com/post/75526\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75526"},{"title":"如何评价西幻背景文字 ADV 游戏《赠予神家与谎言》？","date":"2022-09-04 09:34:34","description":"\n<p data-pid=\"rtjAyq7o\">~关于我想描写时代变迁的断片，结果却变成女主和反派基佬一起对男主说骚话的故事~</p>\n<p data-pid=\"K8toV2Z-\">各位好，我是《赠予神家与谎言》的制作人季森。本游戏是我个人（外加大量美术素材外包）历时一年制作。</p>\n<p data-pid=\"DSKX1zrG\">在8月26日，本作正式在steam上进行发售，于是打算和大家分享一下关于制作本作的一些心路历程。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5fafec7d365f310b8596e98864c1faaf_720w.png?source=b1748391?rss\" data-caption=\"主视觉图欺诈\" data-size=\"normal\" data-rawwidth=\"3456\" data-rawheight=\"1944\" data-watermark=\"watermark\" data-original-src=\"v2-5fafec7d365f310b8596e98864c1faaf\" data-watermark-src=\"v2-0138fca56c74ed879a00323b88aa4c62\" data-private-watermark-src=\"v2-135bab06539511324508077630e2d563\"></p>\n<p data-pid=\"QACGWBsb\"><b><i>“欢迎来到塔林，这里是法师之都。请记住，你所处的是100米以上的高空，而你手边的石墙后可能正有一位伟大的法师正在进行改变世界的实验。请小心强风和爆炸，以及你可能遇到的一切魔法‘小事故’。如果需要，请在开始你的旅途前至3号窗口购买人身保险。”</i></b></p>\n<p data-pid=\"frGci5wQ\">这段话是我为这作的主舞台塔林这座城市旅行导览设计的开篇。作为一个西方奇幻爱好者，拥有一部自己撰写的西方奇幻作品一直是我的梦想。作为剑与魔法世界的老祖宗，DND以及他的变种西方奇幻背景在现在这个时代依然有着为数众多的拥趸，于是寻找我没见过的DND式剑与魔法的风景便成了我制作本作的初衷。</p>\n<p data-pid=\"q-5iYgs0\">按照大众对传统DND式作品的印象，第一时间浮现出的一般都会是中世纪欧洲的风景。那么如果把时代往后推呢？不用推进太多，战锤40K式的太空科幻还太遥远，只要稍稍把历史快进，快进到那个煤烟与齿轮开始展现力量的工业革命时代初期，在地球的这个时代如果映照到DND的世界会变成怎样的风景，按照这个思路，我开始构造这个世界。</p>\n<p><img src=\"https://pica.zhimg.com/v2-2280b85e6eaf75cb4302ffd72a745f9b_720w.png?source=b1748391?rss\" data-caption=\"塔林全景\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-2280b85e6eaf75cb4302ffd72a745f9b\" data-watermark-src=\"v2-9f286685e401cb537889880695ad9569\" data-private-watermark-src=\"v2-38e24a11cc5b40b7cc85b92dfdcef95f\"></p>\n<p data-pid=\"FZt532uL\">为了强迫DND世界的这群法师们重新思考自己的存在方式，着迷于流水线生产，我采取了颇为强硬的方式——让神离开这个世界，顺便带走了法师赖以施法的魔网。这也是我最早的标题《离神之日》的用意（当然这标题槽点太多，在写下来的时候便确定只能是个暂定标题）。</p>\n<p data-pid=\"tz9S0Z-W\">法师们花了50年的时间，以一群年轻天才法师的毕生来重新破解了众神为魔网留下的封印——正如17世纪后期蒸汽机的发明——魔法被重新带回了这个世界。而在这50年的变乱中，法师们早就已经失去了自己的立身之所。重新依照旧时代的方式建立自己的势力过于缓慢而不确定，于是这群法师们团结起来，开始以商人的角度思考问题。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f92ad81df2cb84048c9b6b5cc0aa0264_720w.png?source=b1748391?rss\" data-caption=\"塔林上层区——也就是富人区\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-f92ad81df2cb84048c9b6b5cc0aa0264\" data-watermark-src=\"v2-29402d876c968364fcae2c31ddc1bc76\" data-private-watermark-src=\"v2-248296db0afd1f0b4a037b19d6bd077b\"></p>\n<p data-pid=\"xSWTeYgq\">这便是这故事的开端。</p>\n<p data-pid=\"D-Gqodac\">然而，这个故事的标题还是从《离神之日》变成了现在的《赠予神的家与谎言》。正如标题变化所表达的，这个故事从时代的变迁聚焦到了一个家。我在全文第一句话也表示了，喜欢看大世界观，目标《冰与火之歌》、《魔戒》的观众可能会失望，但既然你已经被骗进来，那就看到最后吧。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-9077b1fe17f2cfe14cbbffabe5266cbf_720w.png?source=b1748391?rss\" data-caption=\"女主集体照\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-9077b1fe17f2cfe14cbbffabe5266cbf\" data-watermark-src=\"v2-c1842a08f14ca1815d9256b4bb4aed30\" data-private-watermark-src=\"v2-2077c7bd870e99a68ac69efd8a29feb5\"></p>\n<p data-pid=\"qUEChDTr\">作为本作的四大女主，这群女人个个身怀绝技，把我们的男主玩得团团转。</p>\n<p data-pid=\"5wCmjZz4\">左起第一位，一身黑的这位柯希尼娅，一看便不是善茬。作为男主的第一任女儿，其闷骚在闷了八年之后，直接在游戏正篇开场就对男主处于捆绑之刑玩起病娇play，差一点就把本作拉入了R18的深渊，让男主的身体记住了自己是个不定时炸弹的恐怖卑女。</p>\n<p data-pid=\"aizkbGF9\">第二位，看起来就像某知名手游角色2P色的提莫，然而比起那位更能领会猫猫叫春的她，在全篇持续对所有遇到的人进行身体与语言上的性骚扰攻击，可谓消音自走炮。耗尽了作者30年的黄段子功力，我勉强跟上了她的思路，希望她不会嫌弃我的品味。</p>\n<p data-pid=\"sWgIDcyj\">第三位，经典款小修女布兰卡，作为四人中看起来最乖宝宝的一人，却深谙捧杀之法，无时无刻不在迸发出崇拜的小星星射向男主莫里。同时作为开局只能当个外人的她时刻垂涎着真女主的宝座，找到机会就把自己和男主关进密室里。</p>\n<p data-pid=\"KamybB30\">第四位，男主莫里的青梅竹马特妮拉，作为四人中的最年长者（而且是直接十位数不一样那种年长），在当社畜养着整个家的同时，战战兢兢地过着不要被其他三位女主打成“明明是我先来“败犬的恐怖生活中。</p>\n<p data-pid=\"Pk2Pwutq\">以上，就是作者基于彻底OOC再创作之后满怀恶意的女主介绍，与本作实际角色无关。之后作者预定会被她们关进小黑屋里进行调整，请不要担心。</p>\n<p data-pid=\"Pz_z7Gip\">至于她们实际上是什么样子，请亲自前往本作的世界用自己的眼睛确定。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-935b42d9faf8cf2c742c7b723c9be6d6_720w.png?source=b1748391?rss\" data-caption=\"反派西索证件照\" data-size=\"normal\" data-rawwidth=\"4710\" data-rawheight=\"3170\" data-watermark=\"watermark\" data-original-src=\"v2-935b42d9faf8cf2c742c7b723c9be6d6\" data-watermark-src=\"v2-0b0666d8d2db5b44c64a9fa7438c57db\" data-private-watermark-src=\"v2-0887bde0495b69542421c01b164bc2cf\"></p>\n<p data-pid=\"41LauMAs\">外加一名明明是反派boss却和其他女主拥有差不多台词字数，PUA、权力骚扰、无限加班，无所不用其极，并以主角这些下属加班的模样为乐，除了工资给得真的很多的上司西索。在这个反派角色上，我倾注了不少鲜血，也是直到剧本完成之后才意识到自己多少受了《电锯人》的影响。这个角色有一点像玛奇玛——但更傲慢、更不介意表现出自己的恶意。他比起玛奇玛更愿意使用自己的全知全能来向人群施以恐惧，当然这也是因为在这个世界中，并没有一个能与他对等的“电锯人”值得他去崇拜。</p>\n<p data-pid=\"d_U2dke0\">感谢闲踏梧桐等人的配音为角色赋予了生命，将所有角色都以远超我想象演绎了出来。也感谢为本作提供了精美作画的画师们，可以说本作的价值主要就在这两方面了（卑微）。</p>\n<p data-pid=\"EV5sAPOj\">作为制作人，本作是在我临近30岁生日的时候突发奇想，决定”I wanna build something that's gonna outlive me”而制作的作品。如果能有更多人喜欢这部作品，以及作品中在塔林生活的人们，那就是对我最大的鼓励了。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/kimori193929?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">kimori193929</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/550194627/answer/2658222056?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">4 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/546871158?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">ADV 游戏《赠予神家与谎言》有什么惊艳到你的配角？</a><br><a href=\"http://www.zhihu.com/question/481206961?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">请问有关于和恶魔契约的小说吗？</a><br>\n","link":"http://www.zhihu.com/question/550194627/answer/2658222056?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"2022 年夏天密室逃脱行业怎么样了？","date":"2022-09-04 09:26:59","description":"\n<p data-pid=\"j47z4zLp\"><b>一位投资人+密室深度玩家对密室行业的深度自白</b></p>\n<p data-pid=\"Gnu3w9bx\">去年，就有人在某平台私信我，说打算开一家密室，有没有投资意向...</p>\n<p data-pid=\"I44OvLxM\">......</p>\n<p data-pid=\"FQvjHt4y\">嗯...如果这是爱好那无可厚非，但这是商业，只论对错，只看盈亏。当然格局比较大的，可以看的更远些。</p>\n<p data-pid=\"zxXJxMln\">不过我相信大多数人，自己不是韭菜就是把我当韭菜。密室（沉浸式剧场），是一个相对很小的品类，圈子也很小，在北京圈层文化也比较严重。而且投入也不是很高，何必以个人的身份，找圈外人士要投资；如果是以品牌的角度，我兴许还有点兴趣。</p>\n<p data-pid=\"zUr9cM-A\">当然，我至今还没有任何意向，除了我不是圈内人，更重要的原因是，从投资角度看，密室行业的商业模式可以说是非常差了，类似于投资框架中的影视传媒行业。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-e601fddef91cd143cabd88b231b6d337_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-e601fddef91cd143cabd88b231b6d337\" data-watermark-src=\"v2-c5b9f67f2effba5c94226dd5c260291c\" data-private-watermark-src=\"v2-237757dcf2cd32dc4fe4150f2eb0f566\"></p>\n<p data-pid=\"LmJna_1W\">记得之前一个圈内大佬跟我说，不是密室的商业模式差，而是还找到合适的产品逻辑...</p>\n<p data-pid=\"vA145CFM\">未来这个产品衍生出新的生态不算，就目前已经形成阶段性的成熟产品来看，绝不是产品逻辑的问题，而是产品自身商业模式的欠缺。</p>\n<p data-pid=\"xU65fAV6\">说个极端点的，什么是优秀的商业模式。</p>\n<p data-pid=\"49P8q657\">像白酒、调味品、高端医疗这种，竞争对手少、需求量稳定增长、品牌粘性高..导致拥有自主定价权的，才是优秀的商业模式。竞争对手少意旨“竞争格局优秀”，恰恰是一行业发展至成熟期后所展现出的优秀特质。</p>\n<p data-pid=\"WmdTiUfT\">竞争格局优秀的企业，往往因为对手稀缺，导致自身尤其是TOC类企业容易成为驰名品牌，这样他就成为了特定人群的刚需，从而产品的复购率、定价权、甚至到客户的叛逃成本都牢牢地掌握在商家手里。</p>\n<p data-pid=\"J4l_IN40\">你可能不知道，你家很多调味品都源自一家叫海天味业的企业，你可能更不知道人家产品年年涨价，几块钱的调味品短短几年年涨价50%你可能无感，但对企业来说利润直接翻倍。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-adf48e541c542d234414c717897985e4_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-adf48e541c542d234414c717897985e4\" data-watermark-src=\"v2-7f18fdb26d3c3e4e9bd4ca6622137477\" data-private-watermark-src=\"v2-ba3e3eb479b60674933c73cdac9bb3b6\"></p>\n<p data-pid=\"D4YzYO0W\">有人会问，调味品这种客单价很低产品，即便每年调价大多数人也无感，密室三五百的客单价怎么能随意提价？</p>\n<p data-pid=\"8p3VOCb8\">这...难道不就是行业的差距吗？茅台听说过吗，上调过几十次价格，依旧供不应求。</p>\n<p data-pid=\"2vI73yeZ\">这就是竞争格局和品牌塑造，带来产品用途出现不断衍生的优势。而白酒的成本又极低（粮食+水），每年还控制产量，造成供不应求的局面，从而不断提高产品价格，以至于经销商疯狂屯货，甚至先打钱给酒厂以确保自己未来能拿到货。</p>\n<p data-pid=\"rH8BHHhx\">在很多“圈子”里，茅台就是硬通货，具有等价货币功能。说个你不知道的事，打老虎时期，很多苍蝇老虎开始向马桶里倒茅台，北京的某个苍蝇，天天下班后回家倒，整整四个月都没倒完，被抄家后清算时，茅台更是毫无悬念的直接换算成等价货币了。</p>\n<p data-pid=\"ipHEOtni\">所以，茅台这种东西，一定程度上不存在需求问题，只存在供应的把控，毕竟能划算成现金等价物，所以屯现金的时候，当然是越多越好。</p>\n<p data-pid=\"7lKB9vIX\">此外，几乎所有行业的库存都是随着时间而贬值的，唯独高端白酒库存还能增值（酒越放越值钱），除了一些特定行业，这几乎前所未见。</p>\n<p><img src=\"https://picx.zhimg.com/v2-68a372adc2ff8f65e248acc81e6ba17c_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-68a372adc2ff8f65e248acc81e6ba17c\" data-watermark-src=\"v2-626a1412bd9636ae484df3e2dee32cd1\" data-private-watermark-src=\"v2-4645f68013e1b7ed7ffb36a40bd4a773\"></p>\n<p data-pid=\"VXseXPG8\">但是好玩的密室也就那几家啊，竞争格局不也是非常好吗？</p>\n<p data-pid=\"nqX9iJep\">顶级主题的竞争格局确实好一些，你从很多平台的开场率就能看到，所以这又引出了，产品体验的性质和受众基数。</p>\n<p data-pid=\"2w_cwhrK\">产品体验过程的可拆分性越强，其的价值就越可以进行适当延长，而密室是不一样的，体验是完全无法拆分，这种线下模式甚至无法和宋城演绎、迪士尼相提并论。</p>\n<p data-pid=\"_zLYsqfU\">互联网产品体验的可拆分性就很强，甚至几乎是0成本且可无限拆分的，软件app就是如此，当年微软对中国盗版windows系统的猖獗不采取任何措施，如今再来看，到底是谁赢了呢？</p>\n<p data-pid=\"NTj0EsiI\">上面这个东西换种角度看，也类似巴菲特所说的网络效应。</p>\n<p><img src=\"https://pica.zhimg.com/v2-b98ca352c69b80450bb18d6454c8b92f_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-b98ca352c69b80450bb18d6454c8b92f\" data-watermark-src=\"v2-d0a56fc047376a08a4ee7ec653b540e1\" data-private-watermark-src=\"v2-6cbd7c29e2ebe84c66724783c0f32adb\"></p>\n<p data-pid=\"RzizjY96\">我们再说第二点，用户基数。</p>\n<p data-pid=\"w93gKAvn\">在投资框架里，密室的商业模式类似于于影视传媒行业，大头利润来自于爆款，爆款产品的复制难度又高，怕砸招牌就开始授权加盟是一个比较不错的策略。</p>\n<p data-pid=\"okm7D8kl\">而密室行业比影视传媒行业，还有一个更大的劣势，那就是用户基数的严重受限，2019年全国影院观影人次达到了17.3亿，平均每天500万人次，这种规模决定了以迪士尼为首的一些影视企业，做出了打通线上+线下+破圈的产品。</p>\n<p data-pid=\"HHOFTtXS\">反观密室，因为产品商业的逻辑，导致单场玩家上限极低，全国密室全年的人次，还赶不上前几年《某狼2》午夜场的观影人次...</p>\n<p data-pid=\"cKVTTW0n\">此外这种产品的复制程度也不太存在规模经济，更是远高于很多行业的右键“复制+粘贴”模式。</p>\n<p data-pid=\"I5SusKzr\">所以根据以上几点，我们知道密室这个产品注定是难以破圈的，更不会像某位大佬说的，出现打通线上线下的破圈产品，线下体验是核心，但基数限制了其效能。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-77e7850a9fc84ee48e887303fed9993c_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1702\" data-rawheight=\"1276\" data-watermark=\"watermark\" data-original-src=\"v2-77e7850a9fc84ee48e887303fed9993c\" data-watermark-src=\"v2-8554f623b7ba27a012e217a444134302\" data-private-watermark-src=\"v2-2dbb5d17520d646ae8972bea55e44328\"></p>\n<p data-pid=\"0jyfmQeT\">产品上线后，你的受众才决定了你产品的逻辑，而不是你的产品逻辑改变了受众，很多产品用户基数大了之后，产品的设计是跟着用户在走的。而密室从1.0到4.0的受众就从来没变过，产品逻辑也是只在原有基础上进行补充，还不存在颠覆。</p>\n<p data-pid=\"VpAp0sPd\">优秀的商业模式能罗列出一大堆：品牌强大、对手稀缺、行业门槛高、复购率高、复制难度低、成本优势、自主定价权、用户基数大、叛逃成本高、占上游提前拿下游钱、库存增值...</p>\n<p data-pid=\"Ht4M7XO_\">上面这一堆指标中，某家企业只要有其中两项优势，那资本就会闭着眼往里扔钱，甚至会求着你拿钱。</p>\n<p data-pid=\"ZHduoDPx\">有人会说密室行业市场增速非常快，这个你要具体问题具体分析，比如每年玩家人次增速50%，但密室门店增速200%，那你得出的结论是行业增长非常快还是企业的平均利润被大幅稀释？造成这种情况的原因是不是行业门槛太低了？</p>\n<p data-pid=\"4YgAaDjU\">在医疗行业里有一种说法“金牙银眼铜骨头”，对应的分别是牙科、眼科和骨科产品，按照上面的指标进行对照，相信你不难得发现为什么牙是金，眼是银，骨是铜。（当然，因为国家层面的干预，集采政策导致很多医药医疗赛道的逻辑破了）</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c1aaf44e07370b344dce08149be18b23_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1706\" data-rawheight=\"1280\" data-watermark=\"watermark\" data-original-src=\"v2-c1aaf44e07370b344dce08149be18b23\" data-watermark-src=\"v2-b0d94c0932da979259bf904f05cb6fb2\" data-private-watermark-src=\"v2-ec058eaad0b1e1d2b795623dd391f0a3\"></p>\n<p data-pid=\"IvLLaaD3\">一个行业赚不赚钱，说个比较模糊的通用指标，直接看主力从业人员薪资。这就不透露了，招聘广告上打个六七折就差不多了。</p>\n<p data-pid=\"a6ARqTW-\">所以密室这个行业的上限是很容易看到的（客单价*场次*平均人数），流水上一般也不会有什么惊喜，如果有那八成是惊吓，所以早鸟票是一个相对无奈的手段。而重要的是日常运营，及成本的控制。</p>\n<p data-pid=\"_vfME_Cs\">那这么来，密室行业的投资价值好像一无是处了？</p>\n<p data-pid=\"FBmtdJ-J\">当然不是，首先头部密室是赚钱的，尤其前两年店面增速没那么快，玩家却不断涌入的时候，无脑黑追电都会有大把盈余。</p>\n<p data-pid=\"_7B0RE_9\">但从另一个角度看，真正的好项目也不是留给普通人的啊，财富流动的底层逻辑本质上是信息的不对称，一切能勾引你欲望的东西，远不止看到的那么简单。</p>\n<p><img src=\"https://picx.zhimg.com/v2-0fc45ed3f446a70ee2db05d906e32b2d_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-0fc45ed3f446a70ee2db05d906e32b2d\" data-watermark-src=\"v2-0030731ba9997f5878f260dce19b6af7\" data-private-watermark-src=\"v2-beecbec41cc8bd9a137ce02ff4c1564a\"></p>\n<p data-pid=\"n_iG-EJV\">总结一下：</p>\n<p data-pid=\"sa7Vo8SC\">1、由于自身的商业模式，密室行业有三个矛盾点：盈利天花板较低、创新成本过高、复制难度较大；</p>\n<p data-pid=\"N8uY7-OF\">2、密室行业属于创意密集型产业，商家无法通过快速复制门店来实现急速扩张。这也意味着，每一次扩张都将带来高昂的人力、物力以及创新成本，这也导致密室行业边际成本过高、门店扩张速度受到严重限制；</p>\n<p data-pid=\"0tAyoTbz\">3、所以密室行业也相对缺少资本的助力，如今发展迅猛更多是爱好者的自发性行为，以及行业本身规模较小所以增速容易上来；</p>\n<p data-pid=\"PNiFNM6k\">4、密室行业仍是新兴行业，整体还处于野蛮生长阶段，和过去的KTV、网吧、游戏厅这些较早兴起的线下娱乐场所一样，也终将经历从0到1、1到10、10到2的阶段；</p>\n<p data-pid=\"d9RvAoqI\">5、密室这个行业在终局来临之前绝不会消亡，因为他力图营造的，无与伦比的沉浸式体验，终归是一部分人无法脱离的“温柔乡”（特定人群的刚需），也是那个某种程度上，比较接近终局（脑机接口）的梦。</p>\n<p data-pid=\"0GgM2Qu4\">愿君入梦，与梦同行。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-a4b83a789e8e780d97a24d9a70b53a80_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1702\" data-rawheight=\"1276\" data-watermark=\"watermark\" data-original-src=\"v2-a4b83a789e8e780d97a24d9a70b53a80\" data-watermark-src=\"v2-3fdece47d726f2e55bb0cf4d7357d856\" data-private-watermark-src=\"v2-0c3738680be5253f3d12ef94e895022e\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wang-hao-20-66-77?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">本号无效</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/551029831/answer/2658581905?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">7 个回答，查看全部。</a><br>\n","link":"http://www.zhihu.com/question/551029831/answer/2658581905?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"App+1 | 此处插入评价：微信输入法测试版上手体验","date":"2022-09-04 07:47:58","description":"它基本功能完备，联网后更是微信的好伙伴——但你最好还是断网体验。<a href=\"https://sspai.com/post/75527\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75527"},{"title":"为什么你不应该在 React 中直接使用 useEffect 从 API 获取数据","date":"2022-08-19 08:53:00","description":"\n<p>React 是一个由 Facebook 开源的、可以在任意平台上构建 UI 的 JavaScript 库。在 React 中，一个常见的 Pattern 是使用 <code>useEffect</code> 搭配 <code>useState</code> 发送请求、将状态从 API（React 外部）同步到 React 内部、用于渲染 UI，这篇文章恰恰在向你介绍为什么你不应该直接这么做。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/180676/37/27394/27265/62ff57f2E600b3725/cff75c5fca39bbcc.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/\">https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/"},{"title":"NPM 自动更新版本号","date":"2022-08-04 05:00:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>ChenYFan 大佬的文章：<a href=\"https://blog.cyfan.top/p/d3c51290.html\">SpeedUp!使用黑科技为你的网站提速</a> 有提到过将 Hexo 博客的全部静态文件上传至 NPM 达到加速效果。</p>\n<p>但是 NPM 版本号不能重复，而且为了精准命中缓存和防止边缘 <code>@latest</code> 缓存过长，就必须指定版本号。</p>\n<p>本人在 <a href=\"https://blog.yfun.top/posts/2876015612/\">我的图床解决方案</a> 一文中使用的方法是 <code>npm version patch</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804133426.png\"></p>\n<p>但这个方法也有一些弊端，比如 <code>patch</code> 只会更新 <code>z</code> 位数的版本号，而且并不会上传至仓库，很可能会出现版本号冲突导致上传失败。这就是为什么最后还需要重新推送 Git 提交。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E8%AF%95%E8%AF%95%E7%9C%8B\" class=\"headerlink\" title=\"试试看\"></a>试试看</h2>\n<p>NPM 版本号遵循 <code>semver</code> 规范，格式为 <code>major.minor.patch</code>。</p>\n<p>为了在获取最新版本号的时候不发生混乱，我选择先获取最新的版本号。</p>\n<blockquote><p>记得把 <code>cky-blog-static</code> 改成自己的项目名。</p></blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>获取到最新版本号后，就可以对版本号进行分析。</p>\n<p>以 <code>1.4.7-b541af2ea284a39da0bbf63b88fdb65c</code> 为例，先按 <code>major.minor.patch</code> 分离。当然，也需要考虑版本号后还有 <code>build metadata</code> 的情况。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\"><span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br></pre></td></tr></table></figure><p><del>为了版本号好看些</del>，可以通过判断实现满十进一。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位小于 9，直接 +1</span></span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">} <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位大于等于 9，y 位小于 9，y+1, z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">} <span class=\"keyword\">else</span> {</span><br><span class=\"line\"><span class=\"comment\">// z 大于等于 9，y 大于等于 9，x+1,y=0,z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>最后，重新拼接版本号。如果担心服务器缓存版本号导致冲突，还可以加上一些随机字符串。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br></pre></td></tr></table></figure><p>将最新的版本号信息重新写入 <code>package.json</code> 文件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">packageJson.version = newVersion;</span><br><span class=\"line\"><span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p><del>直接 CV 代码！</del></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 更新 package.json 版本号</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fetch = <span class=\"built_in\">require</span>(<span class=\"string\">\"node-fetch\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> md5 = <span class=\"built_in\">require</span>(<span class=\"string\">\"js-md5\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> update = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">    verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(newVersion);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">    packageJson.version = newVersion;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">    fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Complete!!\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">update();</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%90%8E\" class=\"headerlink\" title=\"最后\"></a>最后</h2>\n<p>如果是 Hexo 文件部署，就可以直接把文件直接丢在项目根目录，Action 集成部署加上：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">node update.js</span><br></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804135818.png\"></p>\n<p><del>Blog 半年没更新，除除草 --(....</del></p>\n","link":"https://blog.yfun.top/posts/2022/auto-update-npm-version/"},{"title":"我有特别的 DNS 配置和使用技巧","date":"2022-07-28 15:31:00","description":"\n<p>众所周知，DNS 的作用与电话簿类似，将人类可读的域名映射到机器可读 IP 地址、使人更方便地访问互联网。DNS 是非常重要的互联网基础设施，对于改善上网冲浪的体验中的重要程度不容小觑。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/96381/31/31172/23930/62e2ab5bE554d388b/37027f4a03351b9e.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/i-have-my-unique-dns-setup/\">https://blog.skk.moe/post/i-have-my-unique-dns-setup/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/i-have-my-unique-dns-setup/"},{"title":"优化博客的累计布局偏移（CLS）问题","date":"2022-06-07 17:24:00","description":"\n<p>距离上一篇文章发布已有四个月了，是时候写几篇文章给博客除草了。上一次我介绍了我如何迁移、重构了我的博客的架构，这次我想来谈谈我在重构中优化和打磨访客体验时解决的一个问题。我的博客优化之旅 图片 lazyload 的学问和在 Hexo 上的最佳实践 我的博客有多快？ 天下武功，唯快不破 —— 我是这样优化博客的 ...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/206311/26/14625/38940/629f7f81Eb11312de/b1e67f07b1cc9bc7.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/fix-blog-cls/\">https://blog.skk.moe/post/fix-blog-cls/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/fix-blog-cls/"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\n    return new Date(date.toLocaleString('en-US', { timeZone }))\n}\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        timeZone\n    })\n    return {\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\n        convert (date) {\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\n        }\n    }\n}\n\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\n    return converter.convert(new Date(secDate), tzName) - secDate\n}\n\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\ncmn-Hans-SG = 中文普通话-简体-新加坡\ncmn-Hant-TW = 中文普通话-繁体-台湾\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\ncmn = 中文普通话\n\nzh-Hans = 中文-简体\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\n}\n\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long'\n}\nconst now = new Date()\n\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\n\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\n\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\n\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\n\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\n\nzhCNFormatter.format(now) // 2021年10月13日星期三\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\n\njaFormatter.format(now) // 2021年10月13日水曜日\njaAltFormatter.format(now) // 令和3年10月13日水曜日\n\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\n// {locale: 'zh-CN', calendar: 'gregory', …}\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\n     // 基于一个固定日期计算，这里选择 1970.1.1\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\n    const base = new Date(1970, 0, 1).getTime()\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\n    return Array.from({ length: 7 }, (_, day) =&gt; (\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\n    ))\n}\n\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n}).formatToParts(new Date())\n// [\n//     { type: 'year', value: '2021' },\n//     { type: 'literal', value: '年' },\n//     { type: 'month', value: '10' },\n//     { type: 'literal', value: '月' },\n//     { type: 'day', value: '13' },\n//     { type: 'literal', value: '日' },\n//     { type: 'weekday', value: '星期三' },\n//     { type: 'literal', value: ' ' },\n//     { type: 'dayPeriod', value: '上午' },\n//     { type: 'hour', value: '1' },\n//     { type: 'literal', value: ':' },\n//     { type: 'minute', value: '00' },\n//     { type: 'literal', value: ':' },\n//     { type: 'second', value: '00' }\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\n}\n\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\n  timeZone: 'America/Los_Angeles',\n  year: 1995,\n  month: 12,\n  day: 7,\n  hour: 3,\n  minute: 24,\n  second: 30,\n  millisecond: 0,\n  microsecond: 3,\n  nanosecond: 500,\n  calendar: 'iso8601'\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将 […]","link":"https://flyhigher.top/develop/2160.html"}]