[{"title":"App +1 | 给你的播客加上章节——Podcast Chapter 使用体验","date":"2022-08-14 03:00:00","description":"无论从功能的完整度上还是实际体验来说，《Podcast Chapters》都是播客章节工具里的佼佼者。<a href=\"https://sspai.com/post/75079\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75079"},{"title":"你的日子有几种过法？聊聊日历应用中的阳历与阴历","date":"2022-08-13 07:00:00","description":"「农历」和「阴历」有什么不同你知道吗？中元节聊历法，带你做个「阴阳师」。<a href=\"https://sspai.com/post/75137\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75137"},{"title":"App+1｜DailyBean 日记说：你的所有小事，都值得铭记","date":"2022-08-13 05:02:37","description":"好友有抑郁症，已经七八年了。她病情时好时坏，情绪经常处于低落状态，医生建议她写日记来记录心情的变化，尤其是记录一些值得开心的小事，对病情都有帮助。但手写不易保存，纯文本又比较枯燥，我就寻思着帮她找一个 ...<a href=\"https://sspai.com/post/75093\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75093"},{"title":"中国人寿、中国石化、中国石油等多家企业宣布将从纽交所退市，这释放了哪些信号？这对中概股的未来有何影响？","date":"2022-08-12 12:07:47","description":"\n<p data-pid=\"In_SjffL\">就事论事而言，没有什么特别信号，还是中概股审计监管问题的余波。</p>\n<p data-pid=\"xjeFpWjf\">简单来说，我觉得跨境监管会逐步走向调和，<b>涉及国计民生的央企国企难免会逐步退出美股，其他类型的企业将在建立妥善安排的前提下维持美股上市地位</b>。</p>\n<p data-pid=\"AbP0C2Hp\">详细说来，大概是这样的：</p>\n<h2>缘起何故</h2>\n<p data-pid=\"zCa8lJyh\">看中国人寿2022年5月6日发布的公告《中国人寿关于更新《外国公司问责法案》项下相关情况的公告》，情况已经说得很清楚了，即：</p>\n<p data-pid=\"0o1SyERI\"><i>“SEC认为本公司使用了一家目前无法由美国公众公司会计监督委员会（PCAOB）检查的注册会计师事务所对截至2021年12月31日会计年度的财务报表出具审计意见。”</i></p>\n<p data-pid=\"OLK03g7u\">和</p>\n<p data-pid=\"uk83bQDo\"><i>“如果一家公司连续三年被SEC认定为问责法案项下的委员会认定发行人，SEC应禁止该公司的股票或美国存托股票在美国的全国性证券交易所或场外交易市场交易。”</i></p>\n<p><img src=\"https://pic2.zhimg.com/v2-f413951d604c2e8155611c4c67ea519b_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"599\" data-watermark=\"watermark\" data-original-src=\"v2-f413951d604c2e8155611c4c67ea519b\" data-watermark-src=\"v2-e4266faa1eca9bb88ad54cbf38238249\" data-private-watermark-src=\"v2-6382ccbe9b1d6db06055f79c2f8df2c8\"></p>\n<h2>历史渊源</h2>\n<p data-pid=\"3rrt68Ew\">PCAOB的核心原则包括：1、具有实施符合委员会职责规定的检查和调查的能力；2、具有选择审计工作和潜在违规行为接受检查的能力；3、可以接触委员会认为相关的审计人员、审计工作底稿（workpapers）以及其他有关信息或文件。</p>\n<p data-pid=\"jWYGJAer\">但中国向来对此有所保留，认为应通过监管合作渠道来交换，并符合安全保密的相关规定。</p>\n<p data-pid=\"rRW4AZQN\">【1】2009年10月，中国证监会发布的 <a href=\"http://link.zhihu.com/?target=http%3A//www.csrc.gov.cn/csrc/c101932/c1044479/content.shtml\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【第29号公告】《关于加强在境外发行证券与上市相关保密和档案管理工作的规定》_中国证券监督管理委员会</a> </p>\n<p data-pid=\"2CxvE3m4\">第六条规定：</p>\n<p data-pid=\"cDqiN34y\"><i>“在境外发行证券与上市过程中，提供相关证券服务的证券公司、证券服务机构在境内形成的工作底稿等档案<b>应当存放在境内</b>。”</i></p>\n<p data-pid=\"89Uh8y-9\">第八条规定：</p>\n<p data-pid=\"pSpZoBFS\"><i>“现场检查应以我国监管机构为主进行，或者依赖我国监管机构的检查结果。”</i></p>\n<p data-pid=\"oOMB1Ffl\"><i>“进行非现场检查的，涉及国家秘密的事项，有关境外上市公司、证券公司和证券服务机构应当依法报有审批权限的主管部门批准，并报同级保密行政管理部门备案；涉及档案管理的事项，有关境外上市公司、证券公司和证券服务机构应当依法报国家档案局批准。”</i></p>\n<p data-pid=\"UCbZQJwI\">【2】2015年5月，财政部发布的 <a href=\"http://link.zhihu.com/?target=http%3A//www.gov.cn/gongbao/content/2015/content_2916962.htm\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">财政部关于印发《会计师事务所从事中国内地企业境外上市审计业务暂行规定》的通知_2015年第24号国务院公报_中国政府网</a> </p>\n<p data-pid=\"LMaPBbzG\">第五条规定：</p>\n<p data-pid=\"Nsf_RuKo\"><i>“中国内地企业依法委托境外会计师事务所审计的，该受托境外会计师事务所<b>应当与中国内地会计师事务所开展业务合作</b>。双方应当签订业务合作书面协议，自主协商约定业务分工以及双方的权利和义务，其中<b>在境内形成的审计工作底稿应由中国内地会计师事务所存放在境内</b>。”</i></p>\n<p data-pid=\"bx9seriQ\">【3】2020年3月，<a href=\"http://link.zhihu.com/?target=https%3A//www.sac.net.cn/flgz/flfg/202201/t20220113_148242.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">中华人民共和国证券法（2019修订）</a></p>\n<p data-pid=\"HhkSvUGI\">第一百七十七条规定：</p>\n<p data-pid=\"9wi1KELs\"><i>“<b>境外证券监督管理机构不得在中华人民共和国境内直接进行调查取证等活动</b>。未经国务院证券监督管理机构和国务院有关主管部门同意，<b>任何单位和个人不得擅自向境外提供与证券业务活动有关的文件和资料</b>。”</i></p>\n<p><br></p>\n<p data-pid=\"M78dE7qa\">此等矛盾一度通过2013年签订的执法合作谅解备忘录得到缓和，建立了PCAOB可通过中国监管机构申请获取审计底稿的跨境监管协作机制。但中美贸易冲突后，美方跨境监管对于审计底稿的需求从“请求协助”升级为“随时查阅”，打破了脆弱的平衡。</p>\n<p data-pid=\"HU-e1-ow\">如果《加速外国公司问责法案》(Accelerating Holding Foreign Companies Accountable Act)最终出台，将使企业被动退市的时间从原来的3年缩短为2年。</p>\n<h2>展望未来</h2>\n<p data-pid=\"xObTbfWw\">2022年4月2日，<a href=\"http://link.zhihu.com/?target=http%3A//www.csrc.gov.cn/csrc/c101981/c2274589/content.shtml\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">关于就《关于加强境内企业境外发行证券和上市相关保密和档案管理工作的规定》公开征求意见的通知_中国证券监督管理委员会</a> 发布。</p>\n<p data-pid=\"qdsH2XA4\">修订说明中明确指出原规定不适应跨境监管合作的要求，因此作出如下修改：</p>\n<p><img src=\"https://pic4.zhimg.com/v2-91c8759ec14f16e7105ce04cd5cce42e_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"849\" data-rawheight=\"496\" data-watermark=\"watermark\" data-original-src=\"v2-91c8759ec14f16e7105ce04cd5cce42e\" data-watermark-src=\"v2-bba241b17f0356f24147c853d08425f4\" data-private-watermark-src=\"v2-3e31a4260faec19041e2b051a4c6855b\"></p>\n<p data-pid=\"mlP74gqe\">这并非中国简单的退让，我们也在更早前做出了部署：</p>\n<p data-pid=\"DaspbKbb\">1、2021年10月29日和11月14日，网信办针对涉及数据安全、数据出境、危害国家安全的境内企业赴境外上市行为，专门出台了《数据出境安全评估办法（征求意见稿）》和《网络数据安全管理条例（征求意见稿）》。</p>\n<p data-pid=\"3eSKPRw2\">2、2021年12月24日，证监会公布《国务院关于境内企业境外发行证券和上市的管理规定（草案征求意见稿）》以及配套规则《境内企业境外发行证券和上市备案管理办法（征求意见稿）》。</p>\n<p data-pid=\"6oZ8bOHC\">3、2021年12月27日，发改委、商务部发布了《外商投资准入特别管理措施（负面清单）（2021年版）》和《自由贸易试验区外商投资准入特别管理措施（负面清单）（2021年版）》，就境内企业到境外发行股份并上市交易作出相关规定。</p>\n<p><br></p>\n<p data-pid=\"7Zb4Uvt4\">可喜的是，能够看到一些企业已经作出了有益的探索。比如我曾经两次尽调过的Tims中国，即将以SPAC方式登录美股。在保护数据安全上，成立一家仅用于储存和使用用户数据的中国公司NewCo，Tims中国上市公司不持有NewCo的股权但通过长期服务协议获取所需的用户信息，从而避免日后在审计监管中涉及数据出境相关的种种潜在问题。</p>\n<p><img src=\"https://pica.zhimg.com/v2-9f355228ccf8de1ab7606b18295218c4_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"839\" data-rawheight=\"191\" data-watermark=\"watermark\" data-original-src=\"v2-9f355228ccf8de1ab7606b18295218c4\" data-watermark-src=\"v2-caa691f7b1ada7bacc5a41800211d2ff\" data-private-watermark-src=\"v2-49215946f26bbc85e332a949d14a29f8\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/question/548118878/answer/2623411591?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\">知乎用户（登录查看详情）</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/548118878/answer/2623411591?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">484 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/548131122?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">中国人寿、中国石油等4家央企拟从纽交所退市，为什么？</a><br><a href=\"http://www.zhihu.com/question/548120305?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">中国石油、中国石化、中国铝业等申请从纽交所退市，如何解读？透露了哪些信息？</a><br>\n","link":"http://www.zhihu.com/question/548118878/answer/2623411591?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"中央气象台发布历史首个高温红色预警，多地气温可达 40-42℃，为何会出现这一情况？会带来哪些影响？","date":"2022-08-12 11:03:18","description":"\n<p data-pid=\"vel0CmTR\">历史首次。</p>\n<blockquote data-pid=\"-Av6EWOO\">中央气象台8月12日18时升级发布高温红色预警：预计8月13日白天，陕西中南部、四川东部、重庆、河南、湖北、山东南部、安徽、江苏、上海、浙江、福建、江西、湖南、贵州北部和东部以及新疆南疆盆地东部、内蒙古西部等地有35~39℃高温天气，其中，陕西东南部、四川东部、重庆、湖北西部和东南部、湖南北部、江西北部、安徽中部和东南部、江苏南部、上海、浙江中北部等地的部分地区可达40-42℃，局地可超过42℃。</blockquote>\n<p><img src=\"https://picx.zhimg.com/v2-a281acd8b8771694ad54a9ce833eade8_720w.jpg?source=b1748391?rss\" data-rawwidth=\"2803\" data-rawheight=\"2372\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-a281acd8b8771694ad54a9ce833eade8\" data-watermark-src=\"v2-9a0adcb4811af1b48f20abc5d26b9da4\" data-private-watermark-src=\"v2-d52bfee65fd08a82c77e516746d9dc85\"></p>\n<hr>\n<p data-pid=\"E2OYFMDQ\">红色预警为什么这么难发出来呢？因为高温红色预警发布的一个必要条件是，过去 48 小时有四个省（直辖市、特别行政区）大范围已经出现 40 度或以上的极端高温，并且预计极端高温将会持续。实际上，之前令人热的叫苦连天的 2013、2017，或是今年六月华北的极端热浪，都无法触及这个标准。</p>\n<p data-pid=\"qU8Q17eJ\">而这一轮高温热浪的原因是什么呢？它将会持续多久呢？</p>\n<hr>\n<h2>高温的缘起——副热带高压</h2>\n<p data-pid=\"3Gwh7XuW\">副热带高压是本轮高温过程的罪魁祸首。在副热带高压的控制之下，盛行下沉气流，气流在下沉过程中不断增温，同时下沉气流也降低了云量，使得太阳辐射更多地来到地面进行加热。下图中红色圈连线的部分，也就是我们常说的“588线”，就是副热带高压的掌控范围</p>\n<p><img src=\"https://pic2.zhimg.com/v2-db81b38dacccaa99ff11d2d338600ed2_720w.jpg?source=b1748391?rss\" data-rawwidth=\"863\" data-rawheight=\"638\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-db81b38dacccaa99ff11d2d338600ed2\" data-watermark-src=\"v2-b9448ea70a30ae5fd9d5f7aee28c1b91\" data-private-watermark-src=\"v2-1687a7cdd8f78b6537f73b6b4ac595c5\"></p>\n<p data-pid=\"o_448t47\">但是，每年都有副热带高压控制长江中下游的时候，为什么不是每年都这么热呢？这自然是和副热带高压的强度和掌控时间有关，副热带高压强、掌控一块区域的时间长，那么那块地区自然会显著偏热了。而为什么今年副高又强、又喜欢赖在长江流域呢？这就得追寻更深远的地方了。</p>\n<h2>拉尼娜——副高偏强的一大原因</h2>\n<p data-pid=\"v1UpPaR_\">拉尼娜现象大家都并不陌生，指的是赤道东太平洋附近海温显著偏低，而赤道西太平洋附近海温显著偏高的现象。拉尼娜发生次年的夏季，低纬度的哈德来环流的上升支将增强，对应的下沉支，也就对应着副热带高压也将会增强。而去年冬季的拉尼娜过程甚至有延续至今的态势，Nino 3.4 区的海温距平依然在 -0.6 左右，这也将一定程度上对副热带高压的强度和位置有影响。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-ea50624cdccec1f0950b1d2c28dcaaea_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1024\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-ea50624cdccec1f0950b1d2c28dcaaea\" data-watermark-src=\"v2-8efb0bbf9c81d46b06a82ef366b5edea\" data-private-watermark-src=\"v2-225a10dcb5e8d02fff0ae20dd3133619\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-f9da17a04418ae23c4e9aa2cab31e0dc_720w.jpg?source=b1748391?rss\" data-rawwidth=\"768\" data-rawheight=\"384\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-f9da17a04418ae23c4e9aa2cab31e0dc\" data-watermark-src=\"v2-019e3928d14906a270410b08a9891cef\" data-private-watermark-src=\"v2-0cce64f710a7037934548c681fb97132\"></p>\n<h2>南亚高压——副高偏强的又一大原因</h2>\n<p data-pid=\"Ix1zxyT2\">今年从三月开始，青藏高原和伊朗高原就热起来了。在这 21-22 冬季积攒的明显偏多的积雪在连续数月的偏热之下转成偏少。而青藏-伊朗的偏热，会促使在对流层上层的高压——南亚高压的显著偏强。南亚高压作为巨大的暖性高压，其偏强带动大量的气流在其外侧出现补偿下沉，而这些气流的补偿下沉的位置，恰好是长江中下游。南亚高压的偏北偏强，也就对应着副热带高压的偏北偏强。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-aefe314b9121aaadd6a95c28c90c33c4_720w.jpg?source=b1748391?rss\" data-rawwidth=\"930\" data-rawheight=\"594\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-aefe314b9121aaadd6a95c28c90c33c4\" data-watermark-src=\"v2-b552a28155f4473d6f287733ce099184\" data-private-watermark-src=\"v2-e4f3f5638574fc6af7bb8e7269f9d818\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-ee4e9c61cfa0a080e0c69f4c1b80e640_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1024\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-ee4e9c61cfa0a080e0c69f4c1b80e640\" data-watermark-src=\"v2-cdc8a8d25d160fe290a5865f6d743066\" data-private-watermark-src=\"v2-f452acf05f12867291009efb617c427f\"></p>\n<p data-pid=\"dBcu7F65\">从图中可以看出，今年夏季至今，南亚高压的势力总体是偏北偏强的，南亚高压主体北侧的位势高度偏高 40-50gpm，在南亚高压东北侧的西北风之下，气流从高空不断地下沉。</p>\n<p data-pid=\"R6zZsodz\">然而，一般而言往年副热带高压偏强，其都将进一步地北抬，将闷热的体感洒向华北东北。然而，今年却与往年有所不同。</p>\n<h2>长波形式——副热带高压为何不进一步北抬</h2>\n<p><img src=\"https://pic4.zhimg.com/v2-ade39f248c85002bb54211edbdf79889_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1024\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-ade39f248c85002bb54211edbdf79889\" data-watermark-src=\"v2-d3c629b6af32587f5810f77c28e2ebcb\" data-private-watermark-src=\"v2-a87fbf8e124b775de98f3062d1e93b96\"></p>\n<p data-pid=\"J_tJiKav\">从图中可以看出，亚欧大路上有着显著的乌山脊-贝湖槽-鄂霍次克海脊的形式，贝加尔湖一带的低槽，槽位一路延伸到东北，其在每天的天气图中体现的是频繁活跃的东北冷涡。东北冷涡的活跃，带动着小股冷空气的南下，一定程度上打击了副高的北抬。此外，乌拉尔山的大脊在脊前由于上下游效应，在中亚一带出现深槽，该深槽槽前有着弱脊位，为副高的进一步西伸和大陆高压的增强提供了有利的条件。</p>\n<p data-pid=\"uaHWw5s5\">对标往年，例如 2018 年，当年也是南亚高压偏强，且有拉尼娜效应造成的副热带高压偏北，但是当年的槽位在新疆一带，冷空气不会对副高的北抬加强造成什么影响。进而，副热带高压甚至控制了东北，为东北的朋友带来了闷热天气。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5c4601468cdf21288af3aded72d08f39_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1024\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-5c4601468cdf21288af3aded72d08f39\" data-watermark-src=\"v2-5ea1b68ef210ff79896976e3be33fec6\" data-private-watermark-src=\"v2-5cb8c10aa15ad579690c5c9595769970\"></p>\n<h2>解暑何时来？</h2>\n<p data-pid=\"Jc7jNHJf\">要给目前火热的长江中下游解暑，有两个可能性：冷空气很强，把副高杀穿；台风将副热带高压打击撤退带来风雨。然而，这两个可能性没有一个是会在近期兑现的。</p>\n<h3>孱弱的冷空气</h3>\n<p data-pid=\"Ng8W1Ffj\">尽管东北冷涡活跃，但是这也只是限制了副热带高压往东北北抬的趋势。现在还只是八月中旬，东北冷涡甩下来的冷空气只能说孱弱。它们只能与暖湿气流在黄淮一带相撞，形成山东等地的对流雨。冷空气要彻底击退副高，还不是最近能够做到的事情。它们能做的或许只是将最后一些南下变性的北风输送给江浙沪一带，将最高气温从 40 度降低个两三度，或者是给午后增添一点对流，在狂风暴雨中迎来一些降温。但这都不足以击溃硬气的副高。</p>\n<h3>清一色的东风——台风的噩梦</h3>\n<p><img src=\"https://pica.zhimg.com/v2-92597d4df9d670f77020584cab34a2dc_720w.gif?source=b1748391?rss\" data-rawwidth=\"805\" data-rawheight=\"917\" data-size=\"normal\" data-caption=\"蓝色：东风偏强\" data-watermark=\"watermark\" data-original-src=\"v2-92597d4df9d670f77020584cab34a2dc\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"vHNHlSkm\">台风的产生势必要一些辐合条件。但是正如前文所说，拉尼娜在这个夏季苟延残喘甚至出现了反锁相的特征，这也使得低纬度的东风停不下来。没有西风与东风碰撞辐合，这使得即使有一些东风系统（例如东风波），也无法获得充足的辐合进一步加强为一个热带气旋。这也就使得台风活动显著的偏弱，在近期不必指望台风前来解暑了。</p>\n<p data-pid=\"DNTzdxSD\">此外，副热带高压也牢牢地掌控了低纬度洋面，这也会抑制台风的生成。</p>\n<p data-pid=\"v0dPDzmS\">换而言之，高温或许会稍微减弱一点，但是在近期它不会离开长江中下游的诸多省市了。</p>\n<h2>气温 40，体感可远不止 40</h2>\n<p data-pid=\"b5I2feHq\">众所周知每年夏季最大的争议点在于气象局预报最高气温 40，但是实际来看远远不止。这是有以下两个因素造就的：</p>\n<ul>\n<li data-pid=\"XG1Ll1xY\">太阳辐射对你皮肤的加热</li>\n<li data-pid=\"zJDRpy7n\">较高的湿度抑制了排汗</li>\n<li data-pid=\"mGlFAvQv\">气象观测站的环境</li>\n</ul>\n<p data-pid=\"9RlsDv7p\">第一条和第二条好理解。第三条也其实是众所周知的，气象观测站是设置在草坪上，架起一台 1.5 米高的通风百叶箱，在其中安装了温度传感器，这是为了确保数据能用来进行气象分析。也就是说，气象观测站的 40 度气温，其实是对应着你外出逛公园，在公园的树荫里的气温。极强的太阳辐射，和皮肤的排汗一定程度上被抑制，会显著增高你的体感温度。此外，柏油路面的吸热能力是远高于草坪的，因此在路面上走会感觉更烫。</p>\n<p data-pid=\"cfdHBukf\">因此，尽管预报的最高温度可能是 40 度，但是体感上可能会到相当绝的一种程度，因此需要做好防暑降温工作。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/GFCTS_554077074?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">chenzhe</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/548129543/answer/2623448259?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">510 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/548316181?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">8 月 14 日中央气象台继续发布高温红色预警，居民出行应做好哪些防护？</a><br><a href=\"http://www.zhihu.com/question/546961664?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">中央气象台继续发布高温黄色预警，对此应做好哪些降温措施？</a><br>\n","link":"http://www.zhihu.com/question/548129543/answer/2623448259?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派周报 | 本周会员内容提要；跑题：扎网恢恢","date":"2022-08-12 09:46:45","description":"Facebook「小动作」的曝光显示了应用内浏览器的乱象，但在现状之下，真正能靠得住的，可能只有用户自己的判断力和「好习惯」。<p>[......]</p>\n<a href=\"https://sspai.com/prime/story/pi-weekly-004\" target=\"_blank\">查看全文</a><p>本文为会员文章，出自<a href=\"https://sspai.com/prime/precog/single\" target=\"_blank\">《单篇文章》</a>，订阅后可阅读全文。</p>\n","link":"https://sspai.com/prime/story/pi-weekly-004"},{"title":"本周看什么 | 最近值得一看的 8 部作品","date":"2022-08-12 09:28:05","description":"年度最受期待韩影来啦——朴赞郁、汤唯《分手的决心》<a href=\"https://sspai.com/post/75122\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75122"},{"title":"双叉臂悬架和麦弗逊悬架在驾驶感受上有哪些的差异？","date":"2022-08-12 08:16:33","description":"\n<p data-pid=\"zqRkXT00\">这个问题我琢磨了很久，甚至很多年，得出来的结论是<b>，</b></p>\n<p data-pid=\"bjAzb_1u\"><b>悬架导向元件的差异有，但是远不如两台车其他不同导致的差异大。。。</b></p>\n<hr>\n<p data-pid=\"tN-mhoKl\">先需要拆分一下，<b>双叉臂的前驱车和麦弗逊的前驱车的差异。这里主要对比：S60和508L</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-507bd08fd85f28bf220da88414641ca5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1190\" data-rawheight=\"801\" data-watermark=\"original\" data-original-src=\"v2-507bd08fd85f28bf220da88414641ca5\" data-watermark-src=\"v2-890b9e0ef8fa76280f905443bf416dba\" data-private-watermark-src=\"v2-5f889ab6b7cae94b0780c9e12ae8c5f0\"></p>\n<p data-pid=\"aNdtN2ew\">这两台车我都在山路计划中飞驰过，山路计划最多把车推到抓地力极限的9成水平，很少突破抓地力上限。同时需要注意的是，508L离地间隙比S60要高，同时轮距和轮胎宽度也要窄一些。所以表象是高速弯支撑要差，但是实际分析下去还有些其他原因，<b>所以以下分析只能说感受，但是不能把感受差异等同于叉臂和麦的原因导致！</b></p>\n<p data-pid=\"fuF3Ax1h\">S60明显在高速弯的侧向支撑感，注意用词，支撑感！开S60你会主观感受转弯的外侧前轮角度更垂直地面些，维持油门到车辆能保持轨迹的上限抓地力水平，你再推油门试探给它加载的时候，它好像还能多顶一会儿，然后再开始偏移轨迹，而此刻它进入一种侧倾不太愿意增加的程度。</p>\n<p data-pid=\"wD--A3Yt\">而508L在高速弯的支撑感会弱于S60，同时开油把车子推到一种刚好能维持车辆轨迹上限的抓地力水平的时候，你主观感受508L的轮子没有那么垂直，会感觉它似乎有些歪了，然后继续推油门给它加载，车子会开始出现推头维持不住转向的感觉，而车子的侧倾在此刻似乎还有继续增加的趋势。</p>\n<p data-pid=\"T72-FNI_\">这大概就是稳的感觉，虽然轮胎抓地力都差不多用光了，但是车身给人的主观感受上讲，S60更稳定些。两车在抗点头的工况差别并没有你想的那么大，大概是因为轿车本身重心低，对于麦弗逊压力并不大。</p>\n<hr>\n<p data-pid=\"Q4HtBoW0\">再讲一下，<b>麦弗逊和双叉臂的两台四驱新能源的差异，这里对比ONE和FREE</b></p>\n<p data-pid=\"vgHnZpep\">两台车除了中高速弯的支撑感的差异，定圆实验。更明显的体现在抗点头能力的差异。ONE最差的一点就是抗点头能力很差，跟他差不多水平估计就是BYD 宋plus dmi，如果你把座板调平靠背调垂直，你一脚重刹车，你会感觉，你整个人都要顺着座板滑到方向盘下面去。而FREE你会觉得整个车都是一起沉下去的，不是座板前面单独沉下去。当然这也是主观感受。</p>\n<p data-pid=\"cMWYosr0\">当然两台车的底盘差异还有非常多，所以再次重申：<b>分析只能说感受，但是不能把感受差异等同于叉臂和麦的原因导致！</b></p>\n<hr>\n<p data-pid=\"tse2z-hi\">第三再谈一下，<b>麦弗逊后驱车和双叉臂后驱车的差异，这里对比3系和XE，</b></p>\n<p data-pid=\"F8ODmNAr\">为啥要把前驱车后驱车单独分类，这里涉及到一个问题，就是麦弗逊当前驱车前悬架的时候设计自由度没有当后驱车前悬架自由度那么高，而当后驱车前悬架的时候，没有传动轴的限制，因为前驱车的麦弗逊的避震器滑住下面是需要留出空间腾给传动轴，这点在后驱911 718上很明显。还有一点，就是纵置机舱对于悬架摆臂尺寸容忍度更大，特别那根斜臂可以安装的点一般朝前（机舱的布局的问题，FF前轴那边横向空间十分紧张，FF驱动麦斜臂朝后，可以看S60 A4L 508L）</p>\n<p><img src=\"https://pica.zhimg.com/v2-a5f765621993ac2ec703c268b846fbce_720w.jpg?source=b1748391?rss\" data-caption=\"G20 F30 R83C\" data-size=\"normal\" data-rawwidth=\"1093\" data-rawheight=\"834\" data-watermark=\"original\" data-original-src=\"v2-a5f765621993ac2ec703c268b846fbce\" data-watermark-src=\"v2-e508f1e7fc1564bc6ad4b7547c6c0aa9\" data-private-watermark-src=\"v2-aea705a2e8a0a7c6791f7f12e019017d\"></p>\n<p data-pid=\"UvvcG8pW\">但是3系和XE的差异很大么？高速弯的车身的支撑感还是有那么一丢丢差异，跟上面508 S60描述的感受差不多，但是主观感受上并没有S60和508L明显。XE和3抗点头的差异，我觉得也不明显。</p>\n<hr>\n<p data-pid=\"URVd_8VH\"><b>还有第四类，低价位用麦高价位用双叉臂，比如福特的探险者和林肯飞行家</b></p>\n<p data-pid=\"rYBMNtr8\">探险者和飞行家的差异，<b>说句实在话，我真的没感受到太大差异，可能我修行不够。这两台车是具有非常好的代表性的，因为它们车身几乎一样的，从配置单上看就是悬架导向结构不同（单纯看配置单）。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-51a37d5a380348ff0dcba5b0744a822d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"717\" data-rawheight=\"458\" data-watermark=\"original\" data-original-src=\"v2-51a37d5a380348ff0dcba5b0744a822d\" data-watermark-src=\"v2-1e81fa419bc03912b2b8f0b7a8c89cb6\" data-private-watermark-src=\"v2-be1de8ed31f33ebfa6bb503cef68142a\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-bdcc96733ff5633131ef4c44108dd2bb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"719\" data-rawheight=\"630\" data-watermark=\"original\" data-original-src=\"v2-bdcc96733ff5633131ef4c44108dd2bb\" data-watermark-src=\"v2-c5cad2822d12728eb8edb3abadd73584\" data-private-watermark-src=\"v2-b84dd8c4c8d4688400fc0994663c9265\"></p>\n<p data-pid=\"QtuV_JhC\">这两台车，我并不是在同一个场地开的，但是就我自己的感受上来说，我其实很难通过感受来区分它们谁是双叉臂谁是麦，<b>这个例子是最接近控制变化量法的案例</b>。</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wangxiaopeng-?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">王晓鹏PPGarage</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/322431971/answer/2620858671?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">25 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/543410432?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么越来越多的车用双叉臂悬架？</a><br><a href=\"http://www.zhihu.com/question/545072674?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么汽车前轮一般都用麦弗逊悬架？</a><br>\n","link":"http://www.zhihu.com/question/322431971/answer/2620858671?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"新能源汽车把电池和底盘做到一起从安全角度考虑好吗？","date":"2022-08-12 08:14:59","description":"\n<p data-pid=\"xEC4BoXi\">现有的乘用车动力电池组，如果要保障续航，又大又重的动力电池组就只有放在底盘这条路可走。</p>\n<p><img src=\"https://pica.zhimg.com/v2-ccd5bc1490787c45c9f0234f62997e6b_720w.jpg?source=b1748391?rss\" data-rawwidth=\"640\" data-rawheight=\"297\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-ccd5bc1490787c45c9f0234f62997e6b\" data-watermark-src=\"v2-7fe40a488518761afba075273834fec4\" data-private-watermark-src=\"v2-c7ad24d55b5ef0ec52b68b9e9d5a6ced\"></p>\n<p data-pid=\"fjWQd526\">小鹏P7后驱长续航版本的动力电池组重量约为476kg，占整备质量约四分之一；国产Model 3长续航版本的动力电池组重量约为478公斤，占整备质量约27%；国产Model 3 标准续航的动力电池组重量约为359公斤，占整备质量约22%。</p>\n<p data-pid=\"CyDyddwI\">质量占比这么大，且体积不小的整块电池，能放哪里？</p>\n<p><img src=\"https://pic1.zhimg.com/v2-35e53a85601d2d1005852fe7544acb7d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"506\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-35e53a85601d2d1005852fe7544acb7d\" data-watermark-src=\"v2-cc58b1e57da00a16109a313e51d64a1d\" data-private-watermark-src=\"v2-487b70583e8b08142e61827c10c9341d\"></p>\n<p data-pid=\"vSHZ9qIs\">放车头、车尾，头重脚轻或者头轻脚重，汽车的重心偏移中心，对汽车的操控无疑是灾难性的，且车头、车尾都是碰撞的高危险区。</p>\n<p data-pid=\"oPJm2J0U\">另外，乘用车的车顶，太重的行李都不敢丢车顶。把一块四五百公斤的硕大电池放车顶，过弯的时候车辆的重心太高，车辆都会侧翻给你看。除非是底盘足够重的公交车，本身车就重，加之速度受限，如果电池不重，倒是可以把电池放在车顶，方便充电。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ba6c86d1ed3e1530c71dedfc7c8c697e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"720\" data-rawheight=\"405\" data-size=\"normal\" data-caption=\"上海 公交车 超级电容电池设置在了车顶\" data-watermark=\"watermark\" data-original-src=\"v2-ba6c86d1ed3e1530c71dedfc7c8c697e\" data-watermark-src=\"v2-e3efc9c9b194491dc3e47564f177a32f\" data-private-watermark-src=\"v2-f277bf47e5c5399f5f4ace3e9d7092a1\"></p>\n<h3><b>更利于车身的平衡，增加车辆的稳定性。</b></h3>\n<p data-pid=\"EPGG_nVd\">现在的纯电动汽车基本都是前后轴配重比50:50，动力电池布局在底盘重心点的位置，这样带来的好处就是车辆的重心下移，行驶中的稳定性、平衡性良好。由于纯电动汽车的自重都比较高，加速都比较猛，毫无疑问对于这类动力强劲的车型，有着良好稳定/平衡的底盘是必要的。</p>\n<p><img src=\"https://picx.zhimg.com/v2-deb6153d9c3f7ec179b48eb710fbb921_720w.jpg?source=b1748391?rss\" data-rawwidth=\"550\" data-rawheight=\"272\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-deb6153d9c3f7ec179b48eb710fbb921\" data-watermark-src=\"v2-4b09bf5e327c02307923ac17b476867f\" data-private-watermark-src=\"v2-ba31e6a753c68e31f8f1e21ed7b9e8e1\"></p>\n<h3><b>更利于动力电池的碰撞后的安全。</b></h3>\n<p data-pid=\"qVBLKi96\">虽然本身动力电池组在设计之初就会做好<b>接触式受力的防护，会做挤压、跌落、碰撞和底部冲击</b>等实验。</p>\n<p data-pid=\"dxHKfptM\">下面图片是某车企实验室的一些动力电池实测场景。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-7be5515ab3a701bfd82ee4f58587406a_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1150\" data-rawheight=\"778\" data-size=\"normal\" data-caption=\"\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"4MPEVyei\">从2米高坠落后，电池包保持结构完整，静置50分钟之后，电池没有电解液泄露，全程未起火和爆炸。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-476991c82ee51c7251b4cec568701d86_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1042\" data-rawheight=\"627\" data-size=\"normal\" data-caption=\"\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"WCkEgHRy\">充满电的电池包在300kN（约30吨外界压力）的挤压下，测试稳定性，而国际标准的测试要求为100kN。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-d113c0c32bb54b630fa42e6c97a4a963_720w.jpg?source=b1748391?rss\" data-rawwidth=\"442\" data-rawheight=\"259\" data-size=\"normal\" data-caption=\"\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"6b2FCNK0\">从屏幕上可以看到，挤压数据从100kN提升到了300kN，电池包的外围开始发生了轻微形变。在300kN的压力保持了10分钟后，电池包未起火和爆炸，这也侧面说明设计的高强度框架结构和高比例强度钢起了作用。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-b6db04dd950bc8e71ed746d1e2bec8d6_720w.jpg?source=b1748391?rss\" data-rawwidth=\"353\" data-rawheight=\"197\" data-size=\"normal\" data-caption=\"\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"RNzZ54eJ\">但是即便动力电池组做好了接触式的受力防护，但如果碰撞的烈度和频次超过一定限度，肯定是会对动力电池有所伤害的。而把动力电池放在底盘，能避免最常见的车头碰撞和后车追尾的事故，有效减少动力电池组受到剧烈碰撞的几率。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-586cf27d2caf129c9eaeac878f1ed92c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"717\" data-rawheight=\"487\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-586cf27d2caf129c9eaeac878f1ed92c\" data-watermark-src=\"v2-fa247fbdcf0143624500bb88be176708\" data-private-watermark-src=\"v2-d6febeb32518a5b723fbdf7ed9a54df2\"></p>\n<h3><b>更利于在原有车身架构上对电池组进行散热。</b></h3>\n<p data-pid=\"zv972C6a\">之前在回答里面说过电池包的热管理，我们通常在汽车动力电池上面使用的，一般有<b>自然冷却、风冷、液冷、制冷剂冷却</b>等四种降温方式。</p>\n<a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://www.zhihu.com/question/505242375/answer/2454625334\" data-image=\"https://pic2.zhimg.com/v2-f3006036429a278d846b6feb96f4c95a_qhd.jpg?source=b1748391\" data-image-width=\"1024\" data-image-height=\"768\" class=\"internal\">能不能通俗易懂地说说电池包热管理到底是什么，它的意义是什么？</a><p data-pid=\"pWYK_i05\">其中的自然冷却是纯靠外界赋能，不需要纯电车额外付出能源，即便是现在搭载了液冷、制冷剂冷却等主动冷却技术的纯电汽车，也会想尽办法引入自然冷却，因为本身动力电池的容量就不大，能够多白嫖些大自然的能量就能少些电池的耗能，从而增加续航。</p>\n<p data-pid=\"z7-VknsI\">这也是为啥电动车虽然不需要氧气来生成动力（传统燃油发动机需要空气和汽油混合燃烧），但是还留有前脸空气格栅的原因。</p>\n<p data-pid=\"hgj7P6Rt\">虽然很多纯电车的前脸看上去都好像是全包裹，但如果仔细看，都会留一排进气口。</p>\n<p><img src=\"https://picx.zhimg.com/v2-0f5cc12dee11f20071196f851c5d1699_720w.jpg?source=b1748391?rss\" data-rawwidth=\"720\" data-rawheight=\"540\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-0f5cc12dee11f20071196f851c5d1699\" data-watermark-src=\"v2-898b39fac005cc60990a01ec6ccb51de\" data-private-watermark-src=\"v2-305688c092f826ed8488e548d0880980\"></p>\n<p data-pid=\"Q8e8VEKu\">车辆高速行驶时，风从车头下方的进气口进入，经过电池组，电机、空调冷却水箱的外围，从而带走热量。毕竟绝大多数情况，外界的温度都会比电池的温度要高，所以大自然的馈赠是不要白不要。而在底盘上方的进气口，和底盘上方的电池组处于一个水平面，这样的结构是利于动力电池组散热的。</p>\n<p><img src=\"https://pica.zhimg.com/v2-66a6d3b58bbf65849c59ede3e6bc966e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"659\" data-rawheight=\"348\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-66a6d3b58bbf65849c59ede3e6bc966e\" data-watermark-src=\"v2-6fbe2edadde99334329c718774273bac\" data-private-watermark-src=\"v2-a69139231537866fa1b1558700b13804\"></p>\n<p data-pid=\"owKyDgDM\">至于电池包放在底盘位置，有利于汽车原有的平台改造（油改电）或者车企创立新的平台时候方便沿用原有的设计减少工作量，这些也是电池包放在底盘位置的原因了。</p>\n<p data-pid=\"cL45O3ap\">至于动力电池组和底盘一个水平线，甚至直接裸露在外界环境中，比如特斯拉model 3 的电池包的下壳体位于底盘最低处，也就是特斯拉在恶劣路面行驶时，电池包的外围甚至可能直接和坑洼地面剐蹭/石子击打，从而造成电池受损造成安全事故。</p>\n<p data-pid=\"LsPI94Nq\">但这样的开放式电池包毕竟还是少数，大多数的纯电车即便把动力电池放在底盘上或者和底盘融为一体，对地的底部防护还是会做的，<b>如抬高电池包使之不在底盘最低位置，在电池包下壳体外增加防护外壳，增加底盘防护梁，添加底部装甲等。</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-709f33873621b452b35d8c11dbe9cd6f_720w.jpg?source=b1748391?rss\" data-rawwidth=\"609\" data-rawheight=\"349\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-709f33873621b452b35d8c11dbe9cd6f\" data-watermark-src=\"v2-eae741dab40d1b15cc289ec3feb11d85\" data-private-watermark-src=\"v2-15ad14fd06932f29889f34bb1a3d3e46\"></p>\n<p data-pid=\"wfKY_TSy\">因为之前的纯电汽车碰撞还是大多沿用燃油汽车的，如多角度正面、侧面碰撞等测试，忽略了纯电车的底盘和燃油车有较大的不同。但现在国家相关机构对于纯电车的底部碰撞也是逐渐重视了起来。</p>\n<blockquote data-pid=\"WhHO0xI8\"><b>2021年底，中国汽车工程学会发布了行业标准T/CSAE 244-2021《纯电动乘用车底部抗碰撞能力要求及试验方法》，这是全球首个衡量纯电动乘用车底部防护性能的标准，最高认证级别为A级。中国汽研作为标准起草单位，成为目前国内唯一具有『纯电动乘用车底部碰撞防护』等级认证资质的权威机构。</b></blockquote>\n<p data-pid=\"qaW8ELWf\">相信在未来，电池和底盘这个搭档的安全性会得到更大的保障，让我们消费者放心。</p>\n<p data-pid=\"foyKsEy-\">（图片来源网络，侵删！）</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/543412362/answer/2611461849?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">16 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/546505222?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">新型电动车电池在零度也可保持最佳性能，这意味着什么？</a><br><a href=\"http://www.zhihu.com/question/428410731?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">新能源汽车对动力电池有那些要求？</a><br>\n","link":"http://www.zhihu.com/question/543412362/answer/2611461849?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"文科博士生的数字文具盒：这一年里我真正在用的那些 App","date":"2022-08-12 07:59:16","description":"Matrix首页推荐Matrix是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选Matrix最优质的文章，展示来自用户的最真实的体验和观点。文章代表作者个人观点 ...<a href=\"https://sspai.com/post/75111\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75111"},{"title":"如何评价古风动作音乐手游《曲中剑》？","date":"2022-08-12 07:32:50","description":"\n<p data-pid=\"ln1HPI0R\">大家好，我是《曲中剑》团队的策划阿杰。</p>\n<p data-pid=\"8IPXW1OF\">游戏开始测试一周了，也收到了非常多的反馈，也感谢喜爱我们游戏的玩家，也感谢为我们游戏提出宝贵建议的玩家，游戏开发的过程是漫漫长夜，你们的支持让我们看到曙光，有动力继续完善。</p>\n<h2><b>「古曲」和「改编」</b></h2>\n<p data-pid=\"CNpLS1c5\">《曲中剑》是一款<b>以传统古曲为主题的水墨武侠音游</b>，我们需要将《梅花三弄》、《十面埋伏》这些「古典曲目」改编为「节奏游戏的曲目」，所以如何平衡好<b>「古曲」</b>和<b>「改编」</b>就成为了重中之重。在这里我给大家分享一些我们设计过程中的思路。</p>\n<p data-pid=\"zXPS0eLD\">我们音乐改编的设计目标是<b>「保留原曲核心音乐特征和意境的基础上，增加节奏和律动」</b>。</p>\n<p data-pid=\"zUDYiej9\">比如我们最先制作的曲目<b>《梅花三弄》</b>，它是一首古琴曲，最大的特点就在于<b>「三弄」</b>，指的是在不同的徽位上用泛音三次弹奏主旋律。</p>\n<p data-pid=\"Vm8PnCl1\">我们改编后的曲目同样也保留了这一特点，在开头的曲笛段落，在船上的古筝段落和结尾的古琴泛音段落，分别以三种风格演绎了相同的主题旋律。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-995b61a516d6865c40703401c6364276_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-995b61a516d6865c40703401c6364276\" data-watermark-src=\"v2-80df10915eecb560f6d45a11cbd729a3\" data-private-watermark-src=\"v2-303a110d581d194d99a037a8304601b6\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-641dd330b836ad91fd8687bbc0a1925c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-641dd330b836ad91fd8687bbc0a1925c\" data-watermark-src=\"v2-4d99e3ade2015fafbcedaddf60c70c2e\" data-private-watermark-src=\"v2-1411e867e19b3067a3c3bac79864345a\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-310a620d0739809d954e5c286323d280_720w.jpg?source=b1748391?rss\" data-caption=\"这三段中都演奏了《梅花三弄》原曲主旋律\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-310a620d0739809d954e5c286323d280\" data-watermark-src=\"v2-3e1120a6cee5dfa73f492dd0b9f56c43\" data-private-watermark-src=\"v2-da5a98baf02263de4b438f46191dc037\"></p>\n<p data-pid=\"WwM_EA6h\"><br></p>\n<a href=\"https://www.zhihu.com/video/1541406125055852544\">《梅花三弄》关卡全流程</a><p data-pid=\"I1JFqwAp\"><br>又例如<b>《胡笳十八拍》</b>，我们沿用了乐府诗《胡笳十八拍》的原词，从第一、二、十三和十八拍中提取了<b>最能表达原词情感的部分</b>，并加入了<b>马头琴</b>等体现异域风情的元素，表现蔡文姬漂泊塞外时的居住环境。</p>\n<p data-pid=\"t0D-tPmB\">下面附上我们改编的歌词。</p>\n<blockquote data-pid=\"mq-Q-Ac0\">胡笳十八拍<br>我生之初尚无为，<br>我生之后汉祚衰。<br>天不仁兮降乱离，<br>地不仁兮，<br>使我逢此时。<br>不谓残生得旋归，<br>抚抱胡儿泪沾衣。<br>云山万重归路遐，<br>疾风万里扬尘沙，<br>尘沙。<br>不谓残生得旋归，<br>抚抱胡儿泪沾衣。<br>一步一远足难移，<br>魂销影绝恩爱遗。<br>天与地，望西东，<br>律尽曲终思无穷。</blockquote>\n<p data-pid=\"twVNRCD1\">《胡笳十八拍》这一关中，主角并不是在打斗，而是与蔡文姬<b>共舞一曲</b>，来领略曲中真情。所以我们想让boss有更加丰富多变的舞蹈动作和不同的节奏型，但是制作中我们发现，如果boss的动作节奏多变，玩家很难预判到接下来自己应该如何操作，所以我们设计了<b>水面倒影玩法</b>，并让倒影提前预演boss接下来的动作，而玩家需要记住节奏，并在恰当的时机进行模仿。</p>\n<p data-pid=\"Teu4a5eU\">这样的模仿的玩法也衍生出了「沙尘暴」的机制，乐曲途中，上半部分的画面将会被沙尘遮挡，玩家无法看清boss动作，甚至无法看清「音波提示」，只能依靠<b>倒影的声音</b>来进行判断。</p>\n<p><img src=\"https://pica.zhimg.com/v2-0ffe657cdce2d0c7e276e81f44d807b5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-0ffe657cdce2d0c7e276e81f44d807b5\" data-watermark-src=\"v2-6ddbd5e5b63e5651320864bc28fd0c1b\" data-private-watermark-src=\"v2-6abab14e5dd321d2cab93a34038d06b1\"></p>\n<p data-pid=\"qkoE6Qh5\">很多玩家测试后觉得这段玩法很有趣，但我最喜欢的其实是和原词的融合上。</p>\n<p data-pid=\"E844xw_t\">乐曲进行到中段，沙尘暴的桥段开始之前，歌词刚好唱到《胡笳十八拍》第二拍中的「疾风千里扬尘沙」，我们希望这一段也给大家传达蔡文姬孤身在塞外大漠中，面对漫天黄沙与思乡苦楚的情境。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-c5d9c1305c28850e02df0a48fef41011_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-c5d9c1305c28850e02df0a48fef41011\" data-watermark-src=\"v2-297406f1764ab210f2a645232ecf355d\" data-private-watermark-src=\"v2-5ca21bbb66a75fd11b8811446d326a41\"></p>\n<a href=\"https://www.zhihu.com/video/1541406278642876416\">《胡笳十八拍》关卡全流程</a><p data-pid=\"rc9A8gcr\">在玩家问卷中我们发现大家最喜爱的，还是基于经典琵琶名曲改编的<b>《十面埋伏》关卡</b>。</p>\n<p data-pid=\"kjJUG7rT\">《十面埋伏》原曲描绘的是<b>垓下之战</b>的场景，我们改编时，也保留了核心的<b>琵琶演奏与战场元素</b>。玩过的小伙伴想必对这段越来越快的弓箭下落有印象。</p>\n<p data-pid=\"5PQvFBLc\">这里沿用了原曲开头标志性的琵琶扫弦段落，并且速度也和原曲一样，是开始慢且有力，后续越来越快，渲染战场的紧张、肃杀气氛。</p>\n<p data-pid=\"RDUHMdCO\">由于最后速度真的非常快，没办法用boss的攻击来展现（boss攻击没办法那么频繁），所以用了弓箭手小兵来表达，（用了两个，因为一个人射箭也没办法射那么快）。</p>\n<p><img src=\"https://pica.zhimg.com/v2-a33f7c4779e4279b05902e0d312c0d19_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-a33f7c4779e4279b05902e0d312c0d19\" data-watermark-src=\"v2-4595c2a7d1234227fe55a76872dcc523\" data-private-watermark-src=\"v2-088839c885fff89b48ce47652cb55ca7\"></p>\n<p data-pid=\"MFLUFS4j\">我最喜欢的是这段，琵琶、大鼓相互配合，最后唢呐一出，<b>直接把我送走了</b>（﻿误）﻿。</p>\n<p data-pid=\"7031j4Iq\">关卡上我们也让项羽的连续攻击、步步紧逼，﻿配合乐曲节奏，让玩家体验激烈的战斗氛围。</p>\n<p><img src=\"https://pica.zhimg.com/v2-64b23cc2f1db682952390e77f6dea88c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-64b23cc2f1db682952390e77f6dea88c\" data-watermark-src=\"v2-d447cb279bf8d5839a8362e2aced9ed2\" data-private-watermark-src=\"v2-200c3aa14c979b66327fc60f1c3c4c72\"></p>\n<a href=\"https://www.zhihu.com/video/1541411341084000256\">《十面埋伏》关卡全流程</a><p data-pid=\"Wltutd8F\">音乐方面的制作挑战很大，但是成品受到了很多玩家的喜爱，我们也非常欣慰。</p>\n<p data-pid=\"wKFIXT9r\">在这里感谢 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/86599773408131df9a60881b2302a93e\" data-hash=\"86599773408131df9a60881b2302a93e\" data-hovercard=\"p$b$86599773408131df9a60881b2302a93e\">@腾讯天美工作室群</a> 给我们的支持。特别要感谢天美Audio Lab的音频同事，为我们设计和制作了包括UI、战斗和关卡演出相关的大量精美的音效和音乐，古风的竹简、书卷、大鼓等各类音效给游戏加了一层质感。</p>\n<h2><b>「历史典故」与「游戏自身世界观」</b></h2>\n<p data-pid=\"Dg3b8lt6\">说完了「古曲」和「改编」的平衡，再来说说<b>「历史典故」与「游戏自身世界观」的平衡</b>。</p>\n<p data-pid=\"dsBMituf\">我们在关卡外，还希望通过漫画来为玩家讲述古曲背后的人物与故事，让玩家了解古曲的创作背景，更好地体会其中的情感和意境。</p>\n<p data-pid=\"8yAH8FQc\">比如《梅花三弄》讲述桓伊与王徽之的一面之缘，《酒狂》讲述阮籍在当权者压迫之下的醉酒佯狂。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-14db50740e0e55a88ce1477cff9490ff_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-14db50740e0e55a88ce1477cff9490ff\" data-watermark-src=\"v2-456363ea09fb2039def1983681631b96\" data-private-watermark-src=\"v2-347c39fd141e3486b01352d3a730e70c\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-8f94d6dd2fc505b068cdecb631644818_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-8f94d6dd2fc505b068cdecb631644818\" data-watermark-src=\"v2-2339b491d7c6a776cb9cb453e1ee853c\" data-private-watermark-src=\"v2-2dd3bd58a580516b144cc4eedccca48f\"></p>\n<a href=\"https://www.zhihu.com/video/1541408403800363008\">《酒狂》关卡全流程</a><p data-pid=\"IuyGZX4a\">但是如果只是每关一个历史典故，而游戏自身没有将其串联的骨架的话，玩家的体验会显得有些割裂。所以我们从制作之初就在一直思考、迭代世界观设定，真的尝试了很多很多版，也有很多次推倒重来。</p>\n<p data-pid=\"UnS0jWu2\">这里真的挑战很大，在我们的设想中，<b>理想的世界观架构，应该是既要串联这些不同朝代，不同风格的历史故事，又要与主角的心路历程关联，通过这些故事表达主角的心境和成长，最后传达一些符合游戏主题的价值观给玩家</b>。</p>\n<p data-pid=\"nsS5dd0-\">我们最早在开普勒minigame期间的Demo版本，是个较为简单的武侠世界观，主角有通过声音，识破敌人招数的能力。</p>\n<p data-pid=\"NfY0qN5s\">正式开启制作后，为了让世界观与古曲结合更紧密，我们想了很多方案，比如：主角是琴剑双修的剑客，为了修炼技艺找历史上的音乐高手切磋，或者是主角是天上下凡采集灵感的曲仙等等……但这些我们最后都觉得不够合理，或者没有很好的传达出一个明确主旨。</p>\n<p data-pid=\"rUtP7xLA\">团队成员对游戏世界观进行反复迭代、﻿推翻，最终确定了现在的方案：<b>主角现实中是一位仕途失意的琴师，只能通过音乐来逃避苦闷，一次弹奏中，他误入曲中幻境，并获得了锈迹斑斑的曲中剑，一位神秘人告诉他，只有与境中前辈切磋，才能磨砺宝剑，开刃破境。</b>他在与历史上的豪侠名士相识相遇的过程中，﻿渐渐明白音乐真正的意义，﻿也明确了自己的道路。﻿</p>\n<p data-pid=\"AityQqwj\"><b>这里我们设计了一些隐喻：主角过琴（剑）奏出音乐（战斗），与古人对话，来打磨锈剑（让内心强大）来突破曲境（内心困境）。</b></p>\n<p data-pid=\"z8aOOldW\">就像我们普通人现实中，会<b>通过精神世界的追求来疗愈现实生活的烦恼</b>一样，《曲中剑》的主角原型朱权在历史中，也是通过对音乐与艺术的追求，让他忘却了世俗功名、王权斗争的失意，获得了内心的平静。</p>\n<p data-pid=\"hnM08VS1\">我们希望这个游戏，能让玩家在浮躁的现代生活之外，能感受到传统音乐文化带来的另一番天地。</p>\n<h2><b>「古琴模拟器」</b></h2>\n<p data-pid=\"m4zPfvTd\">最后，我们还想和大家分享一下我们制作<b>「古琴模拟器」</b>的心路历程。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-bd211c9b59db174d56a33242a4661f75_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-bd211c9b59db174d56a33242a4661f75\" data-watermark-src=\"v2-5b61a7d912e39b3ceec7bf0f06f888a7\" data-private-watermark-src=\"v2-3f2867374ad09eee9160324fb7dfdfe2\"></p>\n<p data-pid=\"QPcuHmii\">游戏制作途中发现古琴在我们的游戏里占了很大分量，《梅花三弄》《酒狂》《胡笳十八拍》都是古琴曲，然后朱权也是古琴谱《神奇秘谱》的编纂者。然后我们就对古琴起了兴趣，在网上寻找一番后发现，很多其他传统乐器比如古筝，都有一些比较好用的电子版本，就是可以在手机上模拟弹奏的版本，但古琴却没有找到，所以就<b>萌发了做一个古琴模拟器的想法</b>。</p>\n<p data-pid=\"mn2xLE5M\">不过团队里也没有成员会弹古琴，所以我们为了切身学习一下，找了一位<b>古琴文化非遗传承人老师给我们指点</b>，团队成员也体验了古琴的弹奏方法。然后我们也放了一把古琴在项目组里，后面也给制作古琴模拟器提供了很大的参考。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-6e296f0f2863bd30b7b4ea9cf721e8d9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"592\" data-watermark=\"watermark\" data-original-src=\"v2-6e296f0f2863bd30b7b4ea9cf721e8d9\" data-watermark-src=\"v2-fd576e79a548adb7150b6b30d860b52e\" data-private-watermark-src=\"v2-a712e59bd5dbf1de631e990ff8feadd6\"></p>\n<p data-pid=\"ZMWKn-6D\">古琴模拟器主要分为散音、按音、滑音和泛音几种操作，我们也是自己摸索、设计出了一套可以互相兼容的操作方式，并且每种音色的演奏方式，也尽量<b>模拟真实古琴的弹奏方式</b>，给玩家尽可能还原的体验。</p>\n<p data-pid=\"kBBTYPoS\">和古琴老师的学习中也了解了<b>「减字谱」</b>的概念，「减字谱」是古琴特有的一种传统记谱方法，《神奇秘谱》就是以减字谱记录的，它是用汉字的偏旁部首和数字来组成一个个「减字」，每个「减字」代表一种指法。我们在古琴模拟器中也制作了一段教学，不仅有基础的按音、散音、泛音的操作教学，也有减字谱的介绍和识谱方法。</p>\n<p><img src=\"https://pica.zhimg.com/v2-44f36915a9103e9761e969824bdc91b2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-44f36915a9103e9761e969824bdc91b2\" data-watermark-src=\"v2-1a4cf7e2be7b45cfa282a7e404bb0250\" data-private-watermark-src=\"v2-a4fa25df41aaafad64d726ed350450ef\"></p>\n<p data-pid=\"Kx9oHeoD\">制作古琴模拟器时，我们想强调的关键词是<b>「乐趣」和「敬畏」</b>。</p>\n<p data-pid=\"LmUTuPAb\">以前我会觉得用游戏做文化传承，可能会对游戏性的发挥上有一些限制，换句话说可能会不太好玩，然后如果不太好玩的话，来玩的人就可能没玩多久就放弃了，那也谈不上能传承文化了。</p>\n<p data-pid=\"_cTS-P8J\">但自己尝试了以后，觉得虽然挑战很大，但其实还是<b>有机会兼顾「文化传达」和「乐趣」</b>的，因为传统文化在古代可能也是流行文化，并且在历史长河中能够流传至今的文化，一定有他受欢迎、受喜爱的点，<b>只是说我们用游戏的形式来表达的时候，要比较讨巧地利用好文化本身的特点，和游戏作为载体的特点，让那个受喜爱的地方能被玩家操作到，体验到</b>。</p>\n<p data-pid=\"mv0oglfh\">说的可能有点抽象，比如古琴这样一个传统音乐文化上的重要部分，如果只是文字介绍古琴的历史、结构，再给玩家听几段古琴曲，可能并不能抓住玩家的注意力，给他足够的触动。</p>\n<p data-pid=\"lKCS-NS5\">但是<b>「学习弹奏古琴」</b>这个概念可能就能利用到<b>游戏的交互性</b>，能引起玩家的兴趣，并且真实的古琴弹奏也是相当有乐趣的，它的弹法和音色多种多样，有一定的操作感，并且就算是新手随便弹也不会难听，甚至说随心所欲的弹，反而有种属于古琴的韵味。</p>\n<p data-pid=\"TWs4LN5Q\">如果我们利用好真实古琴弹奏的乐趣性，并在游戏里也较好地表现出来，那么可能就可以让玩家在<b>「玩」的途中快乐地学习到传统文化的知识</b>。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f01d90c4e8822bfe0c6e5d6bfa22d321_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-f01d90c4e8822bfe0c6e5d6bfa22d321\" data-watermark-src=\"v2-57575e5d92a023afad1ea58bb71b3876\" data-private-watermark-src=\"v2-096d0081b6ac12ab9e8171409a3c21f1\"></p>\n<p data-pid=\"Bga9fBIq\">我觉得还有另外一个感悟就是<b>「敬畏」</b>。</p>\n<p data-pid=\"3NXhRWL6\">对待传统文化这样一件有相当广受众的概念，在游戏这样一个载体中使用，是一定要谨慎、怀有敬畏的。</p>\n<p data-pid=\"KThv8Dk3\"><b>因为你使用的这个文化元素，可能对一些人来说是非常重要的，在他们生活和精神世界中有相当分量的事物。</b></p>\n<p data-pid=\"BuJLsASd\">我们做古琴的时候专门去上过古琴课，也查了很多资料，然后内测开始后发现，还是有挺多会弹古琴的玩家会被吸引来玩，也有弹得相当好，B站上发演奏视频的大佬，如果这部分玩家慕名而来，结果我们没有做的用心、严谨的话，我觉得他们还是会相当失望的。</p>\n<p data-pid=\"iKFc_wTt\">对于古琴的大佬是这样，对于不了解古琴的玩家其实也是类似。如果有很多细节上出了纰漏的话，他们可能也会不信任你对这个文化的介绍，或者说他们感受到了你没有特别认真地对待，那他们也会以无所谓、心不在焉的心态来玩，这样也就达不到传承文化的目的了。</p>\n<p data-pid=\"2DMTNNnt\"><b>也许就是「乐趣」与「敬畏」打动了玩家，让一些以前不太了解传统音乐的玩家对古琴真正产生了兴趣。</b></p>\n<p data-pid=\"S0Lep_Vy\">玩家群里有用古琴模拟器弹奏《沧海一声笑》的玩家，我们在B站上也看到了用我们「简单模式」的古琴弹奏自己喜欢乐曲的玩家，这些都让我们非常感动。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-502c2ff75f042fa293f12f931b79aad2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1562\" data-rawheight=\"1025\" data-watermark=\"watermark\" data-original-src=\"v2-502c2ff75f042fa293f12f931b79aad2\" data-watermark-src=\"v2-24b512a2b20cb2fd7377e671de54fe2e\" data-private-watermark-src=\"v2-eb968aa61ee893d082032de729b9ec7a\"></p>\n<p data-pid=\"pOH4_GJg\">最后的最后，用游戏里的台词结尾吧，游戏中的主角，和走在漫漫游戏开发道路上的我们一样，都是「唯其磨砺，始得剑成」，虽然开发的道路上经历了很多挑战，但我们会继续上下求索，不断追求，希望能找到内心真正的热爱、意义和价值。</p>\n<p data-pid=\"ls-yVCw1\">「曲中本无剑，世事散如烟，余生无所求，唯此琴上弦」。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/112233-10-32?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">阿杰</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/546658248/answer/2620804905?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">3 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/515176004?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价中国风动作游戏《师父SIFU》?</a><br><a href=\"http://www.zhihu.com/question/536161530?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">三国单机手游?</a><br>\n","link":"http://www.zhihu.com/question/546658248/answer/2620804905?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价古风动作音乐手游《曲中剑》？","date":"2022-08-12 07:32:36","description":"\n<p data-pid=\"OhzCBgSL\">大家好，我是<b>《曲中剑》的角色设计崽崽</b>，很高兴在这里代表<b>美术团队</b>和大家讲讲《曲中剑》的美术设计。</p>\n<h2><b>整体风格</b></h2>\n<p data-pid=\"USYJqegN\">《曲中剑》项目脱胎于腾讯开普勒minigame比赛的demo，现在的测试版本<b>将传统文化中的古乐、水墨、武侠等多种美学杂糅</b>，在美术包装、故事题材、技术实现等方面都有了较大的突破，这离不开美术团队每位同学付出的心血。</p>\n<p data-pid=\"k0AMvyC0\">我主要负责角色设计，过场漫画，角色二维刀光特效以及立绘，@Semid 主要负责场景设计，项目整体美术风格包装，流程管线监督以及三维角色模型制作，@任务点的NPC 主要负责游戏世界观架构和考据，漫画文案编写，古琴模拟器的优化以及界面设计。</p>\n<p data-pid=\"iTRaxgv6\"><b>下面我们美术团队将对《曲中剑》美术风格的构建进行阐述。</b></p>\n<p data-pid=\"1_0Zl4Yw\">在项目前期，我们明确了《曲中剑》的两个核心特色：<b>音游拼刀玩法和中国古乐题材</b>。因此游戏包装从一开始便敲定为国风水墨，但不同质感的水墨画风也会带给人不同的感受。</p>\n<p data-pid=\"kc1bMNt0\">因此，我们尝试了三版方案：淡彩风、复古怀旧风、黑白水墨风三种，分别传达出：清冷、怀旧、肃杀三种不同的包装感受。</p>\n<p data-pid=\"w42NgJB5\">最后，结合玩家CE的反馈，我们决定<b>将这种清冷的淡彩水墨风作为游戏的视觉特色</b>，既能体现中国古乐的静谧感受，又能体现出武侠拼刀玩法的冷峻感。</p>\n<p data-pid=\"cLLvlNHn\"><b>我们在关卡切片阶段，主要对《梅花三弄》古曲开展美术风格尝试。</b>在这一阶段，组里的美术同学并未进行具体的岗位分工，每个同学都对游戏角色形象和氛围进行自由发挥设计，这种平等自由的头脑风暴，让我们对多种美术风格都进行了探索，进行了<b>二十多版的美术风格尝试</b>。</p>\n<p data-pid=\"tQ5OJPxW\">最后，我们选择了<b>前景兼具工笔细腻，背景较为写意概括的场景风格</b>，而角色动画都由三渲二制作完成。</p>\n<p data-pid=\"GPSvOOo6\">下面为头脑风暴中的部分作品节选。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-5de54ad14da35d0837307ccb09eee60d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1421\" data-rawheight=\"2591\" data-watermark=\"watermark\" data-original-src=\"v2-5de54ad14da35d0837307ccb09eee60d\" data-watermark-src=\"v2-fbf6cc0addb1ceb66896422ea1d28b54\" data-private-watermark-src=\"v2-6d6fe7ebce675704d21d5a0b0ca1b628\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-5dca1f7fc3faa3467084118cc14bb2a0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"280\" data-rawheight=\"795\" data-watermark=\"watermark\" data-original-src=\"v2-5dca1f7fc3faa3467084118cc14bb2a0\" data-watermark-src=\"v2-542cb84e1121eb8471653f5ac69ec151\" data-private-watermark-src=\"v2-423b8b4e54ff9793421c92648be7f066\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-a445c72b2f0ebabb49f01971853bf0e8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"419\" data-watermark=\"watermark\" data-original-src=\"v2-a445c72b2f0ebabb49f01971853bf0e8\" data-watermark-src=\"v2-dac8e3a0e489b29515149ce51add165c\" data-private-watermark-src=\"v2-d2b169bc45572efe73e95fb73eb8a2be\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-5657b15b19ab3cefceb9ea0c19a46acc_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"531\" data-rawheight=\"860\" data-watermark=\"watermark\" data-original-src=\"v2-5657b15b19ab3cefceb9ea0c19a46acc\" data-watermark-src=\"v2-5bce23dd993606aafcd8c5159f6f705e\" data-private-watermark-src=\"v2-dc83b340043457bef789227d518bc60e\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-7448840d399e7e4f274c4816b6b4771e_720w.jpg?source=b1748391?rss\" data-caption=\"图1.1：早期场景风格方案测试\" data-size=\"normal\" data-rawwidth=\"636\" data-rawheight=\"650\" data-watermark=\"watermark\" data-original-src=\"v2-7448840d399e7e4f274c4816b6b4771e\" data-watermark-src=\"v2-4b7cdc5535176b91626f16df85e2d06e\" data-private-watermark-src=\"v2-9643da0000bf2e9ef7950d55dfdfd62b\"></p>\n<p data-pid=\"yy6dSPaC\">《曲中剑》非常注重游戏过程中的<b>氛围烘托和演出效果</b>。因此在确立美术风格后，我们对《梅花三弄》的关卡流程，采用动画分镜的方式进行初步设计，这帮助我们游戏的演出效果和素材量都有了一定程度的把控。</p>\n<p data-pid=\"79DFAo8L\">下图为，最初分镜和游戏最终呈现的对照图。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-d7ce9014e0426a977ad937e68d689b05_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2480\" data-rawheight=\"3507\" data-watermark=\"watermark\" data-original-src=\"v2-d7ce9014e0426a977ad937e68d689b05\" data-watermark-src=\"v2-ccc1e7094c0a546acadca93a6a52a366\" data-private-watermark-src=\"v2-74e50b4b2dc6dce9dfe346978dc06917\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-618feeeb45ccf24b401d76012775b197_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1257\" data-rawheight=\"704\" data-watermark=\"watermark\" data-original-src=\"v2-618feeeb45ccf24b401d76012775b197\" data-watermark-src=\"v2-aa33e56a4fa6b219ca13ff959748b9e2\" data-private-watermark-src=\"v2-d4f66ba97704108729206fb891fa6f40\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-3cb1f15ac372088fd35b4051466acfa2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2480\" data-rawheight=\"3507\" data-watermark=\"watermark\" data-original-src=\"v2-3cb1f15ac372088fd35b4051466acfa2\" data-watermark-src=\"v2-0cd3d27274788918b69ef844516bdd16\" data-private-watermark-src=\"v2-9b98e87edfd3570d6a580d90ecbc3f4f\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-1b5c78ecd4a9a5987439f358c7a87618_720w.jpg?source=b1748391?rss\" data-caption=\"图1.2：为游戏切片测试做得分镜预演及局内对照图\" data-size=\"normal\" data-rawwidth=\"1266\" data-rawheight=\"702\" data-watermark=\"watermark\" data-original-src=\"v2-1b5c78ecd4a9a5987439f358c7a87618\" data-watermark-src=\"v2-3f46cb75c2352487c6a1326927d8ce55\" data-private-watermark-src=\"v2-f389a44d64257c97df41a4f628407f57\"></p>\n<p data-pid=\"256feUQZ\">在完成《梅花三弄》的游戏关卡切片后，我们确立了游戏的<b>美术风格、制作规范、技术实现</b>等等，为后续的游戏美术的堆量树立了标杆。</p>\n<p data-pid=\"mQDjoN4W\">尽管《曲中剑》是游戏时长一小时的小品，但为了让游戏整体看上去浑然一体，并与其他国风游戏产生明显的辨识度和记忆点，我们美术团队进行了<b>多次的推翻和尝试</b>。</p>\n<p data-pid=\"thbbGVsF\">这个过程中，十分感谢 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/86599773408131df9a60881b2302a93e\" data-hash=\"86599773408131df9a60881b2302a93e\" data-hovercard=\"p$b$86599773408131df9a60881b2302a93e\">@腾讯天美工作室群</a> 为我们提供的支持，还要感谢<b>腾讯内部帮我们测试的众多玩家小伙伴</b>，没有你们的引导，我们也很难走到今天这一步。</p>\n<h2><b>UI</b></h2>\n<p data-pid=\"-X1w8hnK\">主菜单页面，采用了拟物的桌面设计，该情景是主角琴室的桌面。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-103da40436322a84c29c80933b25c2be_720w.jpg?source=b1748391?rss\" data-caption=\"图1.3：游戏主界面\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"720\" data-watermark=\"watermark\" data-original-src=\"v2-103da40436322a84c29c80933b25c2be\" data-watermark-src=\"v2-f4c9092860c7e6395f9d447356e1c05c\" data-private-watermark-src=\"v2-0b762792f28b5a33e89f0d482ad68710\"></p>\n<p data-pid=\"_L-2Du0o\">桌上的剑最初为一柄锈剑，随着关卡的完成，锈剑将被打磨成一把崭新的剑。桌上的古琴起初并不会出现，而是会随着游戏进程的完成解锁，玩家这时才会从曲境回到现实，意识到自己的琴师身份。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-c567efb726dec8bc1ad1ed2681ab926f_720w.jpg?source=b1748391?rss\" data-caption=\"图1.4.1：设计参考，锈剑参考明代公卿剑\" data-size=\"normal\" data-rawwidth=\"1541\" data-rawheight=\"757\" data-watermark=\"watermark\" data-original-src=\"v2-c567efb726dec8bc1ad1ed2681ab926f\" data-watermark-src=\"v2-0a0b5d7c078d072e2c98cbc5809255cb\" data-private-watermark-src=\"v2-3669cbbabfee7e2805c06bc4566e0887\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-7949ccc913ceac4ad0b3408f7287c2d5_720w.jpg?source=b1748391?rss\" data-caption=\"图1.4.2：设计参考，古琴参考明代飞瀑连珠琴\" data-size=\"small\" data-rawwidth=\"858\" data-rawheight=\"1519\" data-watermark=\"watermark\" data-original-src=\"v2-7949ccc913ceac4ad0b3408f7287c2d5\" data-watermark-src=\"v2-c22407034231ab979c1397e6bdef0c70\" data-private-watermark-src=\"v2-5ed50a96ca8ba505e1d9d12fdfe063ba\"></p>\n<p data-pid=\"C5SjrdBh\">在UI的具体样式设计上，我们主要参考了《明实录》、《神奇秘谱》等古籍。以古籍中的阑线、鱼尾、题签以及书页上的印章、朱砂批注作为框架元素，进行设计重构。</p>\n<p><img src=\"https://picx.zhimg.com/v2-1512568c76866c9d804ff2e8b60e02a2_720w.jpg?source=b1748391?rss\" data-caption=\"图1.5.1：UI设计视觉元素来源\" data-size=\"normal\" data-rawwidth=\"1914\" data-rawheight=\"1445\" data-watermark=\"watermark\" data-original-src=\"v2-1512568c76866c9d804ff2e8b60e02a2\" data-watermark-src=\"v2-2a6d993785aa9b8ecc5cb99260db960d\" data-private-watermark-src=\"v2-706cb45f0af3601a766eb95fad609ff8\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-b321e8bb868da5a35af793b12c0f78ae_720w.jpg?source=b1748391?rss\" data-caption=\"图1.5.2：UI设计视觉元素来源\" data-size=\"small\" data-rawwidth=\"1350\" data-rawheight=\"1918\" data-watermark=\"watermark\" data-original-src=\"v2-b321e8bb868da5a35af793b12c0f78ae\" data-watermark-src=\"v2-b4f342301be9eac297ad2642f7d573dc\" data-private-watermark-src=\"v2-459ae6cc63287b2c9d590ecab6d47f7d\"></p>\n<h2><b>角色设计流程</b></h2>\n<p data-pid=\"r7758IZe\">我们团队在考虑角色设计的时候，会非常注重<b>合理性和故事性</b>。</p>\n<p data-pid=\"E3jgjDB7\">我们会根据选曲中的关键人物，进行BOSS关系网的辐射，搜集跟这个角色相关的典故，并整理成表格进行筛选，提炼出这个角色适合用来表现的一些视觉元素。</p>\n<p data-pid=\"RcR4YLsx\">在角色设计的过程中，我们参考了BOSS的相关古画进行再设计，但是部分设计并不是很适合表现游戏内的打斗效果，所以会<b>为一个角色分成两套设计，一个是专门针对游戏局内表现的，一个是专门针对局外立绘和漫画表现的设计</b>。</p>\n<p><img src=\"https://picx.zhimg.com/v2-27726370f6c08cfed57adfe0f4e8b601_720w.jpg?source=b1748391?rss\" data-caption=\"图1.6：古画参考\" data-size=\"normal\" data-rawwidth=\"871\" data-rawheight=\"384\" data-watermark=\"watermark\" data-original-src=\"v2-27726370f6c08cfed57adfe0f4e8b601\" data-watermark-src=\"v2-6efd2d7b2f2a6b8581aca7cbdf68a233\" data-private-watermark-src=\"v2-d523faf505a6508db0012de540ceead6\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-2b2d7b7da923b7e5570620b0c05242cf_720w.jpg?source=b1748391?rss\" data-caption=\"图1.7：阮籍初版设计\" data-size=\"normal\" data-rawwidth=\"3844\" data-rawheight=\"1019\" data-watermark=\"watermark\" data-original-src=\"v2-2b2d7b7da923b7e5570620b0c05242cf\" data-watermark-src=\"v2-8f3663d83a7b50931846f30b2092a055\" data-private-watermark-src=\"v2-7127f8763f6968e70898155b3815d887\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-d2e1d7ac76ddbcefc08432042978f743_720w.jpg?source=b1748391?rss\" data-caption=\"       图1.8：阮籍的局外设计\" data-size=\"normal\" data-rawwidth=\"4858\" data-rawheight=\"1775\" data-watermark=\"watermark\" data-original-src=\"v2-d2e1d7ac76ddbcefc08432042978f743\" data-watermark-src=\"v2-81ce13a5a705f003f7077748efbc13d3\" data-private-watermark-src=\"v2-343fca70fe583c99b900b5cc1b4c1821\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-69cd5bf242b5e2e50591b03655e337b8_720w.jpg?source=b1748391?rss\" data-caption=\"图1.9：阮籍的局外立绘\" data-size=\"normal\" data-rawwidth=\"2400\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-69cd5bf242b5e2e50591b03655e337b8\" data-watermark-src=\"v2-274714afede45f61edad302dc00adf9e\" data-private-watermark-src=\"v2-c68f7bb5e2270094cd2c0c1bbe3a707e\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-23eda792de47aa084dee0f0f06fafa8a_720w.jpg?source=b1748391?rss\" data-caption=\"图2.1:针对局内表现测试角色动作，根据动作美感，重新调整角色设计\" data-size=\"normal\" data-rawwidth=\"983\" data-rawheight=\"386\" data-watermark=\"watermark\" data-original-src=\"v2-23eda792de47aa084dee0f0f06fafa8a\" data-watermark-src=\"v2-3df53c1c6c6f5ef7cd29509c246bd865\" data-private-watermark-src=\"v2-e610c371f7c3833bbfceb93ab320b34b\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-613b1b846e209708996629293a9740c7_720w.jpg?source=b1748391?rss\" data-caption=\" 图2.2：阮籍的局内设计\" data-size=\"normal\" data-rawwidth=\"4232\" data-rawheight=\"1509\" data-watermark=\"watermark\" data-original-src=\"v2-613b1b846e209708996629293a9740c7\" data-watermark-src=\"v2-ced5da4fa65cca20d89f2837b66d007f\" data-private-watermark-src=\"v2-da6e63e96a34ab9d60ef439d4b408645\"></p>\n<p data-pid=\"tGDM_5H9\"> 最终，我们以这套思路确定了其他所有的角色设计。<br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-6f50fdadb2b682348113803bc1a463e9_720w.jpg?source=b1748391?rss\" data-caption=\"图2.3：项羽动作设计\" data-size=\"normal\" data-rawwidth=\"4500\" data-rawheight=\"2917\" data-watermark=\"watermark\" data-original-src=\"v2-6f50fdadb2b682348113803bc1a463e9\" data-watermark-src=\"v2-3bfb2f8f090aadae22f78a10e4faa970\" data-private-watermark-src=\"v2-65109ed50ab7c1bb5323c979a161b575\"></p>\n<p data-pid=\"LMhAmUCf\">最初我们在设计项羽这个角色的时候，发现绝大多数影视作品，包括项羽的个人资料里都提到，他平时最常用得武器是<b>楚戟</b>。</p>\n<p data-pid=\"yw8Vrwp0\">我们最开始也尝试了这个方向，但是考虑到《十面埋伏》这首曲目本身的音乐节奏非常快，而楚戟这类的超长武器前摇动作会很大，可能<b>无法支持高频率攻击</b>，而且如果BOSS要对主角进行攻击的话，他在手持武器的位置需要不停地变动来配合战斗美感，然而这对3D动作实现就会比较困难。</p>\n<p data-pid=\"HIBPMP9Z\">最终，我们选择了<b>霸王刀</b>作为项羽的主要武器。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1ad75c49fe55ef94dafa7485542ce581_720w.jpg?source=b1748391?rss\" data-caption=\"图2.4：《十面埋伏》中所有角色的武器迭代\" data-size=\"normal\" data-rawwidth=\"5299\" data-rawheight=\"2514\" data-watermark=\"watermark\" data-original-src=\"v2-1ad75c49fe55ef94dafa7485542ce581\" data-watermark-src=\"v2-e9c2d1edb2041444758ca8de16afc50e\" data-private-watermark-src=\"v2-77df36446ad22eb7be8bd8f8d10247da\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-7a5076628ef0ff6b5cf2c2d662ec9d2e_720w.jpg?source=b1748391?rss\" data-caption=\"图2.5：项羽角色设计\" data-size=\"normal\" data-rawwidth=\"2520\" data-rawheight=\"2287\" data-watermark=\"watermark\" data-original-src=\"v2-7a5076628ef0ff6b5cf2c2d662ec9d2e\" data-watermark-src=\"v2-2d27e31ec3cb7ecee3e6bf23e04b23b8\" data-private-watermark-src=\"v2-dd220781648add4852dec57a2fcf8601\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-a4de32b8170133c59dfa5a4fdae97157_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1416\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-a4de32b8170133c59dfa5a4fdae97157\" data-watermark-src=\"v2-07b57e22ba14fc89dc32c66f3d632712\" data-private-watermark-src=\"v2-3d59e5c914d2f4666a308391af1ddb6c\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-7684bf8527f35bdcb547c6e46b6f5d24_720w.jpg?source=b1748391?rss\" data-caption=\"图2.6：小兵设计与参考\" data-size=\"normal\" data-rawwidth=\"615\" data-rawheight=\"271\" data-watermark=\"watermark\" data-original-src=\"v2-7684bf8527f35bdcb547c6e46b6f5d24\" data-watermark-src=\"v2-7fa1739a1dda773a10c96c6ce0ccd115\" data-private-watermark-src=\"v2-5717322dbf26e9e55f633157acbec5c0\" data-tags=\"porn\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-4e7fb9b0969eaa19aa84bfed2cb420a3_720w.jpg?source=b1748391?rss\" data-caption=\"图2.7：项羽最终设计\" data-size=\"normal\" data-rawwidth=\"995\" data-rawheight=\"501\" data-watermark=\"watermark\" data-original-src=\"v2-4e7fb9b0969eaa19aa84bfed2cb420a3\" data-watermark-src=\"v2-d555d6b718ae1c751b10e98f972fa11b\" data-private-watermark-src=\"v2-b13ccb874914df616a55732134051f3d\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-64cf3dba3606d32bc483189fd7e874cd_720w.jpg?source=b1748391?rss\" data-caption=\"图2.8：桓伊角色设计\" data-size=\"normal\" data-rawwidth=\"1001\" data-rawheight=\"527\" data-watermark=\"watermark\" data-original-src=\"v2-64cf3dba3606d32bc483189fd7e874cd\" data-watermark-src=\"v2-b77b8eacfb4ce2fdc667fd3dcfcffb0c\" data-private-watermark-src=\"v2-a7a0a8c0f258d0295bb543ef28982a2a\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-ec4b52eceadd20a0d7cba5478ba554f6_720w.jpg?source=b1748391?rss\" data-caption=\"图2.9：桓伊最终设计\" data-size=\"normal\" data-rawwidth=\"1238\" data-rawheight=\"629\" data-watermark=\"watermark\" data-original-src=\"v2-ec4b52eceadd20a0d7cba5478ba554f6\" data-watermark-src=\"v2-0807a3744121ee0890d2147df635e317\" data-private-watermark-src=\"v2-2494cb347deb01e4b9acc3881a1b44fd\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-8e37deec063ff54696098c307fc86ced_720w.jpg?source=b1748391?rss\" data-caption=\"图3.1：蔡文姬角色设计\" data-size=\"normal\" data-rawwidth=\"1871\" data-rawheight=\"1178\" data-watermark=\"watermark\" data-original-src=\"v2-8e37deec063ff54696098c307fc86ced\" data-watermark-src=\"v2-f021e13be83c061a010ef12989000606\" data-private-watermark-src=\"v2-79db6f21be529d0c301409cdd1cff8ee\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-616652e6dbe1a789c8c5bedd5034a1ac_720w.jpg?source=b1748391?rss\" data-caption=\"图3.2：蔡文姬最终设计\" data-size=\"normal\" data-rawwidth=\"1239\" data-rawheight=\"628\" data-watermark=\"watermark\" data-original-src=\"v2-616652e6dbe1a789c8c5bedd5034a1ac\" data-watermark-src=\"v2-a86bd2ec73683fa5c1bbc7c01a6711cf\" data-private-watermark-src=\"v2-66c967acc3c28fd0781ba25e36c1ee78\"></p>\n<p data-pid=\"p-ax7C7r\">蔡文姬在历史上是一个<b>精通音律的才女</b>，角色跟刀剑的关联性并不大，所以我们在考虑要怎么去设计她跟主角切磋时所用的武器时，也进行了很多的讨论。</p>\n<p data-pid=\"CEVea4gm\">最终，为了塑造一个相对柔美的女性战斗方式，让战斗表现能介于舞蹈和战斗之间，且武器能够跟刀剑产生碰撞声，我们参考了电影《十面埋伏》中章子怡的水袖舞，小龙女的金玲索以及京剧中的水袖，设计了目前这种<b>飘带和铃铛结合</b>的武器。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-dd903ff3ba8249d1be518f42a0c913b0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"775\" data-rawheight=\"475\" data-watermark=\"watermark\" data-original-src=\"v2-dd903ff3ba8249d1be518f42a0c913b0\" data-watermark-src=\"v2-8180a1748ddd8fb5dccf4c3f7f7c1729\" data-private-watermark-src=\"v2-2a9edafb4ad05d710e5d263f12e0be9c\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-c06d5e18fb8f3d7050928e017bc86be8_720w.jpg?source=b1748391?rss\" data-caption=\"图3.3：局内战斗画面\" data-size=\"normal\" data-rawwidth=\"693\" data-rawheight=\"402\" data-watermark=\"watermark\" data-original-src=\"v2-c06d5e18fb8f3d7050928e017bc86be8\" data-watermark-src=\"v2-de96c83a85dbb3b642fd1c5015a7ed17\" data-private-watermark-src=\"v2-2a726c39edfed7fd3b4177cce5101098\"></p>\n<h2><b>漫画设计流程</b></h2>\n<p data-pid=\"__roR3qK\">漫画部分的开发是美术流程中<b>综合性最强</b>的部分。因为要涉及到局内和漫画风格气质的统一问题，要补充主要角色的关系网内的相关考据，同时，漫画故事关系到整体游戏世界观的搭建。</p>\n<p data-pid=\"slgAXR8G\">因此，在漫画的开发过程中，是<b>三个美术通力配合完成</b>的。</p>\n<p data-pid=\"pl6OpF7w\">最开始，文案需要跟场景美术沟通确定整体的<b>场景氛围以及主要视觉元素</b>，然后分镜负责把文案中的表述用画面表达出来，并<b>做成各种版本小稿</b>，继而协商出最适合表现故事感受的画面，进行<b>漫画绘制</b>。</p>\n<p data-pid=\"SFUJwQ-Z\">同时，考虑到部分玩家想快速进入战斗，并不是很喜欢看长段的故事，我们对文案进行了精简，争取每个过场漫画的<b>总表现时长不超过八句话</b>，同时也尽可能去交代这首曲子背后的故事。<br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-b50b5e22a5901d50b5a8f8ea0c289346_720w.jpg?source=b1748391?rss\" data-caption=\"图3.4：《十面埋伏》过场漫画\" data-size=\"normal\" data-rawwidth=\"960\" data-rawheight=\"432\" data-watermark=\"watermark\" data-original-src=\"v2-b50b5e22a5901d50b5a8f8ea0c289346\" data-watermark-src=\"v2-ee8ee90c5e152aafbd230b63d4cab6bc\" data-private-watermark-src=\"v2-eaa0c963baadf238773c58d6210eac17\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-b5b8554db22f9902a221b41d22e24ee1_720w.jpg?source=b1748391?rss\" data-caption=\"图3.5：《胡笳十八拍》漫画小稿\" data-size=\"normal\" data-rawwidth=\"357\" data-rawheight=\"668\" data-watermark=\"watermark\" data-original-src=\"v2-b5b8554db22f9902a221b41d22e24ee1\" data-watermark-src=\"v2-128e4d05683f7226cbf12ecb49e2bb0d\" data-private-watermark-src=\"v2-38f69701dcc19febd245089f6b25c11b\" data-tags=\"porn\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-62acc648cfbb3498db96e0f0fb0ba1e7_720w.jpg?source=b1748391?rss\" data-caption=\" 图3.6：《胡笳十八拍》过场漫画\" data-size=\"normal\" data-rawwidth=\"960\" data-rawheight=\"432\" data-watermark=\"watermark\" data-original-src=\"v2-62acc648cfbb3498db96e0f0fb0ba1e7\" data-watermark-src=\"v2-39550136c813369e0d600e3344dd8506\" data-private-watermark-src=\"v2-df8eb6c7eea4181f742c54a5641000eb\"></p>\n<h2><b>游戏场景</b></h2>\n<h2><b>曲境</b></h2>\n<p data-pid=\"O7OouG9y\">此关卡是主角出入曲境（玩家初次战斗）时的所见所闻。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-abadfc3cfe1621f3846ecd24b934bedf_720w.jpg?source=b1748391?rss\" data-caption=\"图3.7：山间悬空的长条文字，改编自琴谱《神奇秘谱》。\" data-size=\"normal\" data-rawwidth=\"2088\" data-rawheight=\"1554\" data-watermark=\"watermark\" data-original-src=\"v2-abadfc3cfe1621f3846ecd24b934bedf\" data-watermark-src=\"v2-eb8e583cd67e2a1163a52757b53f4a0a\" data-private-watermark-src=\"v2-4dae9a92dd13f8339c22fda9b11b7e7c\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-e3d8c6d2c2a0bfe3c172b01ee4fd1f47_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1337\" data-rawheight=\"814\" data-watermark=\"watermark\" data-original-src=\"v2-e3d8c6d2c2a0bfe3c172b01ee4fd1f47\" data-watermark-src=\"v2-6044e5fdc86025d31a0ecdc5b34056b0\" data-private-watermark-src=\"v2-667270a3e7e50be1e787e47e55e6513a\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-8df6f51255a1e6a1c69131a7980ba68f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2359\" data-rawheight=\"874\" data-watermark=\"watermark\" data-original-src=\"v2-8df6f51255a1e6a1c69131a7980ba68f\" data-watermark-src=\"v2-a5e013e743886251f9c7d953ca1f009c\" data-private-watermark-src=\"v2-ad020d1fe7a5f3f144d69a2f2556c6ca\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-6ac72b0e8534c35c0c9d02cc8a1b398e_720w.jpg?source=b1748391?rss\" data-caption=\"图3.8：开局场景山势多参考 平远法的山水画 如董源的《夏景山口待渡图》\" data-size=\"normal\" data-rawwidth=\"1854\" data-rawheight=\"743\" data-watermark=\"watermark\" data-original-src=\"v2-6ac72b0e8534c35c0c9d02cc8a1b398e\" data-watermark-src=\"v2-51af794ffba791184018ac0cbd7f2f0f\" data-private-watermark-src=\"v2-3aa935ef7c899a067f83224e7e5a2beb\"></p>\n<h2><b>酒狂场景</b></h2>\n<p data-pid=\"Dt2FmlCo\">此关卡是主角与阮籍切磋琴曲《酒狂》时的场景。竹林之景，便是<b>阮籍心中之景</b>。</p>\n<p data-pid=\"5IiY5TYD\">主角初见阮籍之时，音乐明朗，竹林幽静，仿佛世外桃源，暗示竹林七贤之一——阮籍避世后的心绪，表面上逍遥闲适，实则郁郁不得。环境参考傅抱石所绘的《竹林七贤图》。<br></p>\n<p><img src=\"https://pica.zhimg.com/v2-4f7ad173bf73948374958be0fb8a87e2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3003\" data-rawheight=\"719\" data-watermark=\"watermark\" data-original-src=\"v2-4f7ad173bf73948374958be0fb8a87e2\" data-watermark-src=\"v2-0d8d96afd5b14a366fad9c28d3e57143\" data-private-watermark-src=\"v2-46a5a2e8a163cbaa92045df2d9261b39\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-4f7ad173bf73948374958be0fb8a87e2_720w.jpg?source=b1748391?rss\" data-caption=\"图3.9：局内《酒狂》竹林场景\" data-size=\"normal\" data-rawwidth=\"3003\" data-rawheight=\"719\" data-watermark=\"watermark\" data-original-src=\"v2-4f7ad173bf73948374958be0fb8a87e2\" data-watermark-src=\"v2-0d8d96afd5b14a366fad9c28d3e57143\" data-private-watermark-src=\"v2-46a5a2e8a163cbaa92045df2d9261b39\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-0920c3a8a6655c0e0f2bfc588b9a4e00_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"640\" data-rawheight=\"1761\" data-watermark=\"watermark\" data-original-src=\"v2-0920c3a8a6655c0e0f2bfc588b9a4e00\" data-watermark-src=\"v2-568e14385e6a3506f999eedaecab1e69\" data-private-watermark-src=\"v2-7e269975448f059a73eec99ba73e485f\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-6ebe1936bacfc6e3c75a046048dbadc9_720w.jpg?source=b1748391?rss\" data-caption=\"图4.1：《酒狂》场景参考傅抱石的《竹林七贤图》\" data-size=\"normal\" data-rawwidth=\"638\" data-rawheight=\"484\" data-watermark=\"watermark\" data-original-src=\"v2-6ebe1936bacfc6e3c75a046048dbadc9\" data-watermark-src=\"v2-6da38f58501451bdae599f6efaf3d8cf\" data-private-watermark-src=\"v2-a2d04fe8bc045b4393794b00c3e8bde5\"></p>\n<p data-pid=\"Bdx-KUc8\">随着战斗的进行，音乐情绪逐渐哀婉，竹林也从晴朗的白天变成下雨的夜晚，这种压抑的氛围正暗示着阮籍<b>心中暗藏的苦闷</b>。</p>\n<p><img src=\"https://pica.zhimg.com/v2-398af768057d4b588bf5b7763407de92_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"754\" data-rawheight=\"408\" data-watermark=\"watermark\" data-original-src=\"v2-398af768057d4b588bf5b7763407de92\" data-watermark-src=\"v2-3b2f67c7b63d4ad2450997c558e4bd54\" data-private-watermark-src=\"v2-4e71fb93ec70c80c5bd085bd0636945d\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-d306e9256cbb54b65a7cc2a233feda57_720w.jpg?source=b1748391?rss\" data-caption=\"图4.2：局内《酒狂》竹林场景\" data-size=\"normal\" data-rawwidth=\"758\" data-rawheight=\"411\" data-watermark=\"watermark\" data-original-src=\"v2-d306e9256cbb54b65a7cc2a233feda57\" data-watermark-src=\"v2-eb2944653dc612d1f925291bb9a3a42d\" data-private-watermark-src=\"v2-63bf0e7a5ff33c124a560cfe1658113c\"></p>\n<p data-pid=\"RdHSsre3\">一曲将止，旋律也逐渐舒缓，主角和阮籍跳出了繁杂的竹林，站在竹海之上切磋。象征通过音乐的切磋，主角和阮籍互为知己，<b>心境也逐渐开朗</b>。此段致敬李安的《卧虎藏龙》电影中，竹海顶端打戏的片段。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-95a78dde6503d39486b0c0e7c0902a4c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1302\" data-rawheight=\"724\" data-watermark=\"watermark\" data-original-src=\"v2-95a78dde6503d39486b0c0e7c0902a4c\" data-watermark-src=\"v2-8e50457f68e0cd4c91c89f3414e89db2\" data-private-watermark-src=\"v2-7a05cc393845433cc21b54c43995378a\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-c5fc5949ed3863a7d05c0bc2dc94760c_720w.jpg?source=b1748391?rss\" data-caption=\"图4.3：《酒狂》结算场景参考《卧虎藏龙》竹海顶端打斗\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"220\" data-watermark=\"watermark\" data-original-src=\"v2-c5fc5949ed3863a7d05c0bc2dc94760c\" data-watermark-src=\"v2-508c7779ec72516277097188e3fa72d2\" data-private-watermark-src=\"v2-4e604a4f52c81e1cd98419020dee1aff\"></p>\n<p data-pid=\"c67m8ipm\">篇幅限制，场景这块就只介绍曲境和酒狂场景，其余场景欢迎大家到实际游戏去体验~</p>\n<p data-pid=\"1GYVcoC6\">希望我们的回答让大家对于《曲中剑》的美术设计思路更加了解了一些。我们将继续努力，致力于为各位玩家带来最好的水墨武侠体验~</p>\n<p data-pid=\"0YDyjfy-\"><b>最后，诚邀大家一起来打铁！</b></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/chen-yi-fei-91-64?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">崽崽</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/546658248/answer/2621068462?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">3 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/515176004?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价中国风动作游戏《师父SIFU》?</a><br><a href=\"http://www.zhihu.com/question/536161530?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">三国单机手游?</a><br>\n","link":"http://www.zhihu.com/question/546658248/answer/2621068462?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"《名侦探柯南》哪几集的毛利大叔是独立破案的？","date":"2022-08-12 06:50:29","description":"\n<p data-pid=\"iIhW25Ns\">可以参考下面我整理的这个表格~</p>\n<p data-pid=\"6hNSXp6w\">本表格收录了毛利小五郎在TV中的高光时刻，并用不同星等进行了区分</p>\n<p data-pid=\"2VftIXjG\">注：各星等说明</p>\n<p data-pid=\"8iYKwGGs\">☆☆☆☆☆指完全依靠自己能力或依靠少量提示独立破解的案件</p>\n<p data-pid=\"AXgNMLSP\">☆☆☆☆指依靠他人大量提示或和他人合作一起破解的案件</p>\n<p data-pid=\"yQTlM7hB\">☆☆☆指未能完全破解案件，但破解了大部分的真相或为破案作出了重大贡献</p>\n<p data-pid=\"3QjHQ1or\">☆☆指未能完全破解案件，但做出了一小部分正确推理的，或者推理虽然错误却很符合逻辑，或其推理起到了一定提示作用的</p>\n<p data-pid=\"uT5Ys9l2\">☆指在案件中只起到协助搜查或帮助推理的作用，或有其他方面（与案件无关）重要表现的</p>\n<table data-draft-node=\"block\" data-draft-type=\"table\" data-size=\"normal\" data-row-style=\"normal\"><tbody>\n<tr>\n<th>原版集数</th>\n<th>拆分版集数</th>\n<th>剧集名</th>\n<th>类型</th>\n</tr>\n<tr>\n<td>2</td>\n<td>2</td>\n<td>董事长千金绑架事件</td>\n<td>☆☆☆</td>\n</tr>\n<tr>\n<td>8</td>\n<td>8</td>\n<td>美术馆杀人事件</td>\n<td>☆☆☆☆</td>\n</tr>\n<tr>\n<td>22-23</td>\n<td>23-24</td>\n<td>豪华客轮连续杀人事件</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>26</td>\n<td>27</td>\n<td>爱犬约翰杀人事件</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>27-28</td>\n<td>28-29</td>\n<td>小五郎同学会杀人事件</td>\n<td>☆☆☆☆☆</td>\n</tr>\n<tr>\n<td>29</td>\n<td>30</td>\n<td>电脑杀人事件</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>31</td>\n<td>32</td>\n<td>电视台杀人事件</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>36</td>\n<td>37</td>\n<td>周一晚上7：30杀人事件</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>38</td>\n<td>39</td>\n<td>红鬼村火祭杀人事件</td>\n<td>☆☆☆</td>\n</tr>\n<tr>\n<td>39-40</td>\n<td>40-41</td>\n<td>企业家千金杀人事件</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>45</td>\n<td>46</td>\n<td>敷面膜杀人事件</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>51</td>\n<td>52</td>\n<td>高尔夫练习场杀人事件</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>53</td>\n<td>55</td>\n<td>神秘凶器杀人事件</td>\n<td>☆☆☆☆☆</td>\n</tr>\n<tr>\n<td>65</td>\n<td>67</td>\n<td>螃蟹和鲸鱼绑架事件</td>\n<td>☆☆☆</td>\n</tr>\n<tr>\n<td>88-89</td>\n<td>91-92</td>\n<td>德休拉别墅杀人事件</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>92-93</td>\n<td>95-96</td>\n<td>恐怖登山杀人事件</td>\n<td>☆☆☆</td>\n</tr>\n<tr>\n<td>95</td>\n<td>98</td>\n<td>小五郎约会杀人事件</td>\n<td>☆☆☆</td>\n</tr>\n<tr>\n<td>96</td>\n<td>99-100</td>\n<td>走投无路的名侦探 连续两大杀人事件（第一案）</td>\n<td>☆☆☆☆</td>\n</tr>\n<tr>\n<td>100-101</td>\n<td>106-107</td>\n<td>初恋情人回忆事件</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>104-105</td>\n<td>110-111</td>\n<td>盗贼集团别墅事件</td>\n<td>☆☆☆☆</td>\n</tr>\n<tr>\n<td>114-115</td>\n<td>120-121</td>\n<td>有氧潜水杀人事件</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>116-117</td>\n<td>122-123</td>\n<td>推理小说作家失踪事件</td>\n<td>☆☆☆</td>\n</tr>\n<tr>\n<td>144-145</td>\n<td>154-155</td>\n<td>上野出发北斗星3号</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>149</td>\n<td>159</td>\n<td>游乐园高空弹跳事件</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>150-151</td>\n<td>160-161</td>\n<td>汽车爆炸事件的真相</td>\n<td>☆☆☆☆☆</td>\n</tr>\n<tr>\n<td>155</td>\n<td>165</td>\n<td>水中钥匙密室事件</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>174</td>\n<td>185-188</td>\n<td>二十年的杀意 新佛尼号连续杀人事件</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>180-181</td>\n<td>194-195</td>\n<td>红色杀机梦幻曲</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>184</td>\n<td>198-199</td>\n<td>诅咒假面的冷笑</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>199-200</td>\n<td>214-215</td>\n<td>嫌疑犯毛利小五郎</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>203-204</td>\n<td>218-219</td>\n<td>黑天使之翼</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>215-216</td>\n<td>231-232</td>\n<td>复仇海滩</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>236-237</td>\n<td>255-256</td>\n<td>南纪白滨神秘之旅</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>243-244</td>\n<td>262-263</td>\n<td>毛利小五郎的冒充者</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>251</td>\n<td>270</td>\n<td>OK牧场的悲剧</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>255-256</td>\n<td>274-275</td>\n<td>松江玉造连句十四次比赛</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>260</td>\n<td>279</td>\n<td>摇晃的餐厅</td>\n<td>☆☆☆</td>\n</tr>\n<tr>\n<td>264-265</td>\n<td>286-287</td>\n<td>法庭的对决妃VS小五郎</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>266-268</td>\n<td>288-290</td>\n<td>情人节的真相</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>282-283</td>\n<td>304-305</td>\n<td>水流石庭的玄机</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>294-295</td>\n<td>316-317</td>\n<td>爱与决心的粉碎</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>297-298</td>\n<td>319-320</td>\n<td>法庭的对决2妃VS九条</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>299-300</td>\n<td>321-322</td>\n<td>友情与杀意的关门海峡</td>\n<td>☆☆☆</td>\n</tr>\n<tr>\n<td>305-306</td>\n<td>330-331</td>\n<td>看不见的嫌疑犯</td>\n<td>☆☆☆☆☆</td>\n</tr>\n<tr>\n<td>315</td>\n<td>340</td>\n<td>阳光普照的地方</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>325-327</td>\n<td>350-352</td>\n<td>火焰中的赤兔马</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>331-332</td>\n<td>356-357</td>\n<td>疑惑的咖喱饭</td>\n<td>☆☆☆☆</td>\n</tr>\n<tr>\n<td>337</td>\n<td>362</td>\n<td>坠落事件的隐情</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>345</td>\n<td>371-375</td>\n<td>与黑衣组织直面对决：满月之夜的双重迷案</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>350-351</td>\n<td>380-381</td>\n<td>被遗忘的手机</td>\n<td>☆☆☆</td>\n</tr>\n<tr>\n<td>371-372</td>\n<td>402-403</td>\n<td>沉默的航线</td>\n<td>☆☆☆☆☆</td>\n</tr>\n<tr>\n<td>379-380</td>\n<td>410-411</td>\n<td>神秘温泉雪夜振袖事件</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>383</td>\n<td>414-417</td>\n<td>甲子园的奇迹！绝不能输给看不见的恶魔</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>384</td>\n<td>418</td>\n<td>目标是毛利小五郎</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>388-389</td>\n<td>422-423</td>\n<td>醉倒在萨摩的小五郎</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>393</td>\n<td>427</td>\n<td>似乎是绑架的事件</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>398-399</td>\n<td>432-433</td>\n<td>奇妙一家的委托</td>\n<td>☆☆☆☆</td>\n</tr>\n<tr>\n<td>409-410</td>\n<td>443-444</td>\n<td>同时进行的舞台和绑架</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>413</td>\n<td>447</td>\n<td>完全一半犯罪之谜</td>\n<td>☆☆☆</td>\n</tr>\n<tr>\n<td>419-420</td>\n<td>453-454</td>\n<td>八岐大蛇之剑</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>425</td>\n<td>459-463</td>\n<td>黑色冲击！组织魔爪伸来的瞬间</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>431-432</td>\n<td>469-470</td>\n<td>本厅刑事恋物语7</td>\n<td>☆☆☆</td>\n</tr>\n<tr>\n<td>434</td>\n<td>472</td>\n<td>名犬cool的功劳</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>438</td>\n<td>476</td>\n<td>鱼邮件的追踪</td>\n<td>☆☆☆☆</td>\n</tr>\n<tr>\n<td>439</td>\n<td>477</td>\n<td>然后谁都无须存在了</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>441</td>\n<td>479</td>\n<td>临终的啊</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>445</td>\n<td>483</td>\n<td>俄罗斯蓝猫的秘密</td>\n<td>☆☆☆☆</td>\n</tr>\n<tr>\n<td>462-463</td>\n<td>502-503</td>\n<td>黑衣组织的影子 年幼的目击者&amp;奇妙的照明</td>\n<td>☆☆☆☆</td>\n</tr>\n<tr>\n<td>464-465</td>\n<td>504-505</td>\n<td>黑衣组织的影子 谜样的高额报酬&amp;珍珠流星</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>471</td>\n<td>511</td>\n<td>失控的租赁汽车</td>\n<td>☆☆☆</td>\n</tr>\n<tr>\n<td>487</td>\n<td>530-531</td>\n<td>本厅刑事恋爱物语8 左手的无名指</td>\n<td>☆☆☆☆</td>\n</tr>\n<tr>\n<td>489</td>\n<td>534-535</td>\n<td>法庭的对决Ⅲ目击者是检察官</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>521-522</td>\n<td>570-573</td>\n<td>杀人犯工藤新一、新一的真实身份和兰的眼泪</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>523</td>\n<td>574</td>\n<td>真正想问的事情</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>526</td>\n<td>577</td>\n<td>真凶送来的礼物</td>\n<td>☆☆☆</td>\n</tr>\n<tr>\n<td>528-529</td>\n<td>579-580</td>\n<td>以柔克谜</td>\n<td>☆☆☆☆☆</td>\n</tr>\n<tr>\n<td>540-541</td>\n<td>591-592</td>\n<td>毛利小五郎侦探停业之日</td>\n<td>☆☆☆☆☆</td>\n</tr>\n<tr>\n<td>545-546</td>\n<td>596-597</td>\n<td>雾中尖叫的魔女</td>\n<td>☆☆☆</td>\n</tr>\n<tr>\n<td>547-548</td>\n<td>598-599</td>\n<td>与犯人共度的两天</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>553</td>\n<td>604</td>\n<td>THE·问讯室</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>554-555</td>\n<td>605-606</td>\n<td>鹳的探索之旅</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>558-561</td>\n<td>609-612</td>\n<td>死亡之馆 赤壁</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>589-590</td>\n<td>640-641</td>\n<td>最糟糕的生日</td>\n<td>☆☆☆☆</td>\n</tr>\n<tr>\n<td>592-593</td>\n<td>643-644</td>\n<td>猴子与熊手的捕物帖</td>\n<td>☆☆☆☆</td>\n</tr>\n<tr>\n<td>596</td>\n<td>647</td>\n<td>坠落的不在场证明</td>\n<td>☆☆☆</td>\n</tr>\n<tr>\n<td>600-601</td>\n<td>651-652</td>\n<td>梦中遇见河童</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>603-605</td>\n<td>654-656</td>\n<td>降灵会双重密室事件</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>606-607</td>\n<td>657-658</td>\n<td>法庭的对决4陪审员是小林澄子</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>611-613</td>\n<td>662-664</td>\n<td>犬伏城炎之魔犬</td>\n<td>☆☆☆</td>\n</tr>\n<tr>\n<td>616-621</td>\n<td>667-672</td>\n<td>福尔摩斯的默示录</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>671-674</td>\n<td>723-726</td>\n<td>侦探们的夜想曲</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>692-693</td>\n<td>744-745</td>\n<td>隅田河观夜樱路线</td>\n<td>☆☆☆</td>\n</tr>\n<tr>\n<td>705-706</td>\n<td>757-758</td>\n<td>密室中的柯南、解谜的波本</td>\n<td>☆☆☆☆</td>\n</tr>\n<tr>\n<td>707</td>\n<td>759</td>\n<td>被陷害的名侦探</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>718</td>\n<td>770</td>\n<td>恶魔的回路</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>736</td>\n<td>789</td>\n<td>毛利小五郎像的秘密</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>751-752</td>\n<td>804-805</td>\n<td>招财三毛猫事件</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>761-762</td>\n<td>814-815</td>\n<td>加贺百万石神秘之旅</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>775-776</td>\n<td>828-829</td>\n<td>被操控的名侦探</td>\n<td>☆☆☆☆</td>\n</tr>\n<tr>\n<td>789</td>\n<td>842</td>\n<td>女王大人的天气预报</td>\n<td>☆☆☆</td>\n</tr>\n<tr>\n<td>794</td>\n<td>847</td>\n<td>保镖毛利小五郎</td>\n<td>☆☆☆☆☆</td>\n</tr>\n<tr>\n<td>796</td>\n<td>849</td>\n<td>鸳鸯夫妻的策略</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>801-802</td>\n<td>854-855</td>\n<td>鸟取沙丘神秘之旅</td>\n<td>☆☆☆</td>\n</tr>\n<tr>\n<td>808-809</td>\n<td>863-864</td>\n<td>镰鼬旅馆</td>\n<td>☆</td>\n</tr>\n<tr>\n<td>817</td>\n<td>872</td>\n<td>消失的未婚妻</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>818-819</td>\n<td>873-874</td>\n<td>小五郎 愤怒的大追踪</td>\n<td>☆☆☆☆☆</td>\n</tr>\n<tr>\n<td>820</td>\n<td>875</td>\n<td>候车室里的7人</td>\n<td>☆☆☆☆</td>\n</tr>\n<tr>\n<td>821</td>\n<td>876</td>\n<td>隐藏在昙柄寺的秘密</td>\n<td>☆☆</td>\n</tr>\n<tr>\n<td>833</td>\n<td>888</td>\n<td>名侦探也有弱点</td>\n<td>☆☆☆☆☆</td>\n</tr>\n<tr>\n<td>875</td>\n<td>930</td>\n<td>预知未来的奇妙佛像</td>\n<td></td>\n</tr>\n<tr>\n<td>901-902</td>\n<td>956-957</td>\n<td>妃律师的求救信号</td>\n<td>☆☆☆</td>\n</tr>\n<tr>\n<td>952-954</td>\n<td>1009-1011</td>\n<td>迷宫鸡尾酒</td>\n<td></td>\n</tr>\n<tr>\n<td>956-957</td>\n<td>1013-1014</td>\n<td>在水上巴士解谜</td>\n<td></td>\n</tr>\n<tr>\n<td>962-964</td>\n<td>1022-1025</td>\n<td>毛利小五郎的盛大演讲会</td>\n<td></td>\n</tr>\n<tr>\n<td>979</td>\n<td>1036</td>\n<td>被人摆布的侦探</td>\n<td>☆☆☆</td>\n</tr>\n<tr>\n<td>987</td>\n<td>1044</td>\n<td>公司解散聚会</td>\n<td>☆☆</td>\n</tr>\n</tbody></table>\n<p></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/qlya-49?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">qlya2010</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/19925797/answer/2294778514?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">9 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/526075521?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《名侦探柯南》中的小问题以下题目是为什么呢？</a><br><a href=\"http://www.zhihu.com/question/531115584?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《名侦探柯南》中的人物的破案实力排行榜目前是怎样的？</a><br>\n","link":"http://www.zhihu.com/question/19925797/answer/2294778514?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价《崩坏 3》爱莉希雅动画短片「因你而在的故事」？","date":"2022-08-12 06:37:55","description":"\n<p data-pid=\"_ZvdFFDz\">“因你而在的故事”……是啊，爱莉希雅的故事，往世乐土的故事，正是一个因为我们才存在的故事。因为我们铭记，原本的虚幻才有了切实的凭依和记忆，“就像爱莉希雅说的，往世乐土对于后世的人们就只是一个故事而已，可在虚幻的故事中，我们也能寻获真实的感情、创造真切的记忆”（语出烧鸡老师）<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\" data-text=\"银发三千雪满头. 致爱莉希雅 : 你所爱的人，也从来都爱你[EB/OL]. (2022.08.01). [2022.08.12]. https://www.zhihu.com/question/545930945/answer/2601218121.\" data-url=\"\">[1]</sup><sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"2\" data-text=\"崩坏3第一偶像爱酱. 「致以无瑕之人」——爱莉希雅「真我·人之律者」角色预告[EB/OL]. (2022.07.29). [2022.08.12]. https://www.bilibili.com/video/BV1DS4y1t7rs.\" data-url=\"\">[2]</sup>。也正是因为虚幻与真实的边界在此模糊，我们才得以见证爱莉希雅种下的人性之华，在每个有所感触的人心中生根发芽<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"3\" data-text=\"兹维坦·托多罗夫. 奇幻文学导论[M]. 四川大学出版社, 2015.\" data-url=\"\">[3]</sup>。</p>\n<p><img src=\"https://pica.zhimg.com/v2-342325b98756d2500f8470f5657e9210_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-342325b98756d2500f8470f5657e9210\" data-watermark-src=\"v2-a6e1523256b0f33530bf2af3db8971de\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"RIxm4fnq\">不久前，《致以无瑕之人》的预告PV就如此触动了我，让我写下了一段不知是考据还是故事的神必文学。</p>\n<a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://www.zhihu.com/question/545930945/answer/2601218121\" data-image=\"https://pic3.zhimg.com/v2-e954fde1c0624eb1aa6b7c632c997667_qhd.jpg?source=b1748391\" data-image-width=\"1146\" data-image-height=\"717\" class=\"internal\">如何评价《崩坏3》7月29日开放的新主线《致爱莉希雅》？</a><p data-pid=\"__RVvPkj\">现在，《因你而在的故事》又再度令我有所感怀。很多人调侃，爱莉这样既是一切之前最初的律者，又是终焉之外最后的律者，想必是米哈游作为老EVA厨又双叒叕在致敬EVA（新世纪福音战士），又是渚薰又是人类之使徒的。这样的说法的确有迹可循，在31章《致爱莉希雅》中，无论是《人之律者》篇章的“她便是这样降生于世，行于大地，与人类一同长大，与世界一起发芽”，还是《少女初成》篇章的“起初，世界是一片混沌”（创 1:1-2 “起初……地是空虚混沌” , NIV）“那光是好的”（创 1:4 “神看光是好的” , NIV），这些用语字里行间都是满满的犹太-基督信仰气息，有些地方甚至直接化用了圣经和合本的文字。这样的基督风格很有可能就是与EVA一脉相承的，于是很多人猜想，爱莉希雅以自身之献祭换取人类命运的解放，是否正如同耶稣基督当初的十字架受难一般？</p>\n<hr>\n<h2>一个浮游星海间女孩的神学：基督教与亚里士多德</h2>\n<p data-pid=\"odYpR4De\">这样的想法不无道理。耶稣救赎神话的基本结构在历代神学家的梳理下有这样一些要点：人类走出伊甸园，原本完美而无瑕之人就此沾染上罪恶，这些罪恶遍布大地，为了保全公义，让上帝不得不将人类与魔鬼一同送去末世审判的世界末日——本来应该是这样的；但神爱人，因为这样一种大爱，上帝亲自道成肉身地下凡，成为一个真正的人，试图拯救人类，于是耶稣基督出现了，行于这片大地无尽的苦难与罪恶之中，最终担负起全人类的罪恶在十字架上受难，再战胜了死亡而回归，来给人类的罪恶以救赎——“你们是上帝用重价买来的”（林前 6:20 , CCB），这重价就是他自己的血，“要知道，你们从传统的、没有意义的生活中被救赎出来，不是靠金银等会朽坏的东西，而是靠无瑕无疵的代罪羔羊——基督的宝血”（彼前 1:18-19 , CCB）<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"4\" data-text=\"奥古斯丁. 论原罪与恩典[M]. 商务印书馆, 2012.\" data-url=\"\">[4]</sup><sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"5\" data-text=\"托马斯・阿奎那, 段德智. 神学大全:论人[M]. 商务印书馆, 2013.\" data-url=\"\">[5]</sup><sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"6\" data-text=\"库里亚诺, I.P.). 西方二元灵知论[M]. 上海人民出版社, 2009.\" data-url=\"\">[6]</sup>。这样一来，既成全了公义，也成全了爱。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-2a978faaa25270a0a937d44dec07359b_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-2a978faaa25270a0a937d44dec07359b\" data-watermark-src=\"v2-3b1233c1b9057a15272c7ce67e160d44\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"MWFwArsP\">这样的故事结构与爱莉希雅的故事显然有着相似之处：全人类罪恶的命运终末，正是同为十三英桀的苏口中的“世间种种，只是一出被安排好的剧目”“世界的顽疾”；最终的救赎，这种悲剧宿命“被划定的未来”的终结，也正是“神的女儿”爱莉希雅的离去，回到她“诞生的「地方」”。</p>\n<p><img src=\"https://pica.zhimg.com/v2-6ce9a16d1594686aa7008024d36fbfcc_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-6ce9a16d1594686aa7008024d36fbfcc\" data-watermark-src=\"v2-b36f43d2e5ab4c6fdb04476761336edb\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"4T_YeQ_L\">乍一看非常正确：耶稣与爱莉都是承受着全世界的误解却依然在拯救全世界；耶稣最后的晚餐有十三个人，英桀也正好是十三个；耶稣死后大量教堂建立，爱莉离去之后梅也在月球上建立了巨大的神殿——但是，有着一点根本性的不同，让我觉得爱莉的原型绝不止于此，那就是他们的身份之差。耶稣既是完完全全的神，也是完完全全的人<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"6\" data-text=\"库里亚诺, I.P.). 西方二元灵知论[M]. 上海人民出版社, 2009.\" data-url=\"\">[6]</sup>；爱莉却一直都是“神的女儿”，仅仅是“像人一样”。律者，就算是人类的律者，人性的律者，也终究是律者，就像西琳一口一个人类一样，律者哪怕外表再像人，也和人类完全不是一个物种，也恰似动画短片印象曲《TruE》的歌词“如是始源，如是终焉”（the way it starts and the way it ends），对应着圣经旧约和新约中上帝共有的一段自语“耶和华说：我是首先的，我是末后的”（赛 44:6 , CCB）“我是开始，我是终结”（启 21:6 , CCB）——这样的形容在神学里有特殊的意义，只能指自有永有的神。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-e4dbcdfe15a4566b62ef7664773f2d0b_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-e4dbcdfe15a4566b62ef7664773f2d0b\" data-watermark-src=\"v2-48f4b671be2be5bd353ac1b6a879f701\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"H_aZxinZ\">这一点差距，决定了爱莉希雅并不完全像三位一体论的耶稣，而是更像更早期历史上亚里士多德的“神”<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"7\" data-text=\"Aristotle. Nicomachean Ethics[M]. McMaster University Archive for the History of Economic Thought, 1962.\" data-url=\"\">[7]</sup>。之前许多人诟病我啥都喜欢往诺斯替上套，不管他们是否真的理解我这个视角在表达什么，总之这次是用不上了，可以来点他们喜欢的——没那么多具体的东西、更加形而上学且抽象的古典哲学思维。亚里士多德的神并不像基督教那样具体，而是更接近古希腊的“自然”概念，是古典哲学对“第一因”或者说“至善”的追问<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"8\" data-text=\"周瑾. 多元文化视野中的身体. 浙江大学, 2003.\" data-url=\"\">[8]</sup>——大概是这么一个逻辑，这个世界上许许多多的事物都是不完美的，那么必定有一个与之相对的“最完美”概念存在；正因为有了这个至高的“最完美”，才有了世上的不完美。这种“无瑕”就是亚里士多德的神，在他的道德心理学中，神就拥有这样一种完美无瑕的美德和品性——也就是爱莉希雅口中的“人性之华”。</p>\n<p><img src=\"https://pica.zhimg.com/v2-264d17c3d20ea67b6aa872f06c932097_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-264d17c3d20ea67b6aa872f06c932097\" data-watermark-src=\"v2-7f818548d92763b2397123c9ff2dbe3d\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"2-AIZU_q\">爱莉希雅的离去，是因为她是“人之律者”，是因为她拥有人的品性，是“人性”的律者、“人类”的律者……那件事只有人才可以做到，只要是“人类”就一定能做到——那就是为律者唤回人性，让此后所有的律者都是“人之律者”。这是神的牺牲，更是人的牺牲，在这一层意义上，神仅仅是无瑕之人<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"9\" data-text=\"芮夫廖世德. 荣格与炼金术 : Jung and the alchemical imagination[M]. 湖南人民出版社, 2012.\" data-url=\"\">[9]</sup>，所以爱莉以自己的无瑕、自己的人性，回归了“神”的怀抱，为崩坏种下了人性的种子。</p>\n<p><img src=\"https://pica.zhimg.com/v2-e325d48ed677cd7e087decb75887ef24_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-e325d48ed677cd7e087decb75887ef24\" data-watermark-src=\"v2-426854663024b9c94e3c5e0a3b3263c3\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"0_FIfPt8\">于是这一世代的律者，从一开始就拥有了属于“人”的一面。第一律者瓦尔特的人性，更是几乎完全由活生生的人们产生的。来到往世乐土的雷之律者芽衣，也是以爱寻回了自己的人性。更进一步地，我认为爱莉希雅可能不仅仅赋予了现文明的崩坏使徒“律者”以人性，甚至赋予了“崩坏”本身以人性。前文明逐火之蛾的科学家梅曾提出崩坏可能具有意识，也就是“崩坏神”存在的假说，但爱莉否决了这一点，作为“神的女儿”，亲口否认了“神的意志”的存在，认为那仅仅是一片混沌、一个静候新生的茧。</p>\n<p><img src=\"https://pica.zhimg.com/v2-5f4ec99bec1d49d7df99e8fdcdff8c6d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-5f4ec99bec1d49d7df99e8fdcdff8c6d\" data-watermark-src=\"v2-a2add2e207a9bca05d5491d157bec7ac\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Rn3D3Oy1\">那么是谁让本来一片混沌的崩坏变成如今这样会教唆律者、古神低语甚至给奥托提示的人性化“崩坏意志”呢？或许也正是爱莉希雅。她回到了她的来处，那大概正是“神”的“茧”之所在，于是她将人性赋予这个静候新生的茧，让“崩坏”本身得以“羽化”——毕竟要在那儿影响律者，也只能从源头影响了。</p>\n<hr>\n<h2>一个为文明播种女孩的科学：虚数奇点与克尔黑洞</h2>\n<p data-pid=\"Q8aFXi4m\">那么，这样的改变具体是怎么发生的？前文明的律者和当代的律者究竟有什么区别？我还没完全想通，不过至少可以看到这样一个显著的现象：两者的律者核心具有本质性的差异——前文明的是0维的奇点，是“死的”；现文明的是1维的奇环，是“活的”。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-5e90c6a89eafb8b404b196f8332e8a42_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-5e90c6a89eafb8b404b196f8332e8a42\" data-watermark-src=\"v2-ccfe7027889528070fdf64817f24ec37\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"85bMgrgP\">我很想用最简单的语言把这一点带过去，但考虑到我两三句话概括完也没几个人看得懂，这里还是稍微展开一下好了。首先在主线26章《悲剧的诞生》中，爱因斯坦博士提出了解释前文明和现文明律者核心差异的N+1维虚数奇点假说：考虑到律者核心中的“虚数奇点”指代“可以引发一切超自然现象的不可能构造”，只需要简单改变其维度表示即可解释前文明律者核心的高度稳定性问题和现文明律者核心的不稳定问题。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-e782f7098be70ffcb9664ce3610ee35b_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-e782f7098be70ffcb9664ce3610ee35b\" data-watermark-src=\"v2-52425750c3bff0e817103f2229a23ee1\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"he6cZbS0\">我在这里假定诸位已经有了广义相对论基础。如果没有，那我一句话概括一下需要用到的内容：物质告诉时空如何弯曲，时空告诉物质如何运动。举个非常不恰当但还算形象的例子，大尺度时空上的引力作用可以想象成一张蹦床，质量越大的物质在蹦床上压出的凹陷越深，所以周围的物体受到该物质的“吸引力”就越大。简单延伸一下，很容易就能想到奇点为什么被称为“超自然现象”和“不可能构造”，因为爱因斯坦方程的这一类解中存在时空曲率发散（趋近于无穷大）的点，在蹦床上对应着一个洞——这被认为是“奇异”的，不可能的。事实上，这一类解在早期并不被认可存在对应的天体，直到我们真正观察到了“黑洞”存在的证据以后。内部存在奇点的天体被称为黑洞，从这个角度思考，律者核心也能算是一种特殊的黑洞。当我们考虑带电磁场的黑洞，也就是RN（Reissner-Nordstrom）度规<img src=\"https://www.zhihu.com/equation?tex=%5Ctext%7Bd%7Ds%5E2%3D-%5Cleft%28+1-%5Cfrac%7BR_s%7D%7Br%7D%2B%5Cfrac%7BQ%5E2%7D%7Br%5E2%7D+%5Cright%29%5Ctext%7Bd%7Dt%5E2%2B%5Cleft%28+1-%5Cfrac%7BR_s%7D%7Br%7D%2B%5Cfrac%7BQ%5E2%7D%7Br%5E2%7D+%5Cright%29%5E%7B-1%7D%5Ctext%7Bd%7Dr%5E2%2Br%5E2%5Ctext%7Bd%7D%5COmega%5E2\" alt=\"\\text{d}s^2=-\\left( 1-\\frac{R_s}{r}+\\frac{Q^2}{r^2} \\right)\\text{d}t^2+\\left( 1-\\frac{R_s}{r}+\\frac{Q^2}{r^2} \\right)^{-1}\\text{d}r^2+r^2\\text{d}\\Omega^2\" eeimg=\"1\">，此时考察函数<img src=\"https://www.zhihu.com/equation?tex=f%3D+r%5E2-R_sr%2BQ%5E2%3Dr%5E2-2Mr%2BQ%5E2\" alt=\"f= r^2-R_sr+Q^2=r^2-2Mr+Q^2\" eeimg=\"1\">的零点，发现物理上不可能出现<img src=\"https://www.zhihu.com/equation?tex=M%5E2%3CQ%5E2\" alt=\"M^2&lt;Q^2\" eeimg=\"1\">的情形——这意味着函数不存在零点，除了<img src=\"https://www.zhihu.com/equation?tex=r%3D0\" alt=\"r=0\" eeimg=\"1\">以外该时空没有别的奇点，即奇点外没有视界包裹，而由于奇点附近的时空性质与通常时空迥异，两者不被允许直接接触。这被称为宇宙监督原理，即正常时空中不能存在裸奇点——这也是律者核心如此构型的一个基本要求，虚数奇点是被包裹在律者核心之内的。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-09f84deb478b80ed2ff958dea222b66e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-09f84deb478b80ed2ff958dea222b66e\" data-watermark-src=\"v2-cab687fdf12eb132fd1b1ac0d1ceb601\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"ug0DgbQ_\">在此基础上，只需要稍加思考，我们很容易就能得出律者核心的供能原理。这里需要澄清的一个谬误是：按照逆熵的测量结果，现文明理之律者的奇环半径在普朗克尺度的20个量级左右——这实际上属于量子黑洞的范畴，这种情形下黑洞本身的吸积效应非常非常地小而无害，以至于在人体内完全可以当成一个正常的原子核去看待<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"10\" data-text=\"Giddings S B ,  Mangano M M . Astrophysical implications of hypothetical stable TeV-scale black holes[J]. Physical Review D, 2008, 78(3):298-317.\" data-url=\"\">[10]</sup>。同时，在这种尺度上，霍金辐射效应会变得非常明显，黑洞——也就是律者核心得以快速地辐射能量。不过关于此的具体模型还未有公论，一般认为与AdS/CFT对偶的全息宇宙理论关系密切，因为这能顺带解释信息丢失的问题<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"11\" data-text=\"Strominger A ,  Zhiboedov A . Gravitational Memory, BMS Supertranslations and Soft Theorems[J].  2014.\" data-url=\"\">[11]</sup>。AdS/CFT对偶是M-理论与共形不变的量子场论间存在的一种等价关系，描述了M-理论中一系列重叠的<img src=\"https://www.zhihu.com/equation?tex=p\" alt=\"p\" eeimg=\"1\">-膜可以形成像黑洞那样存在视界的时空几何、这一几何在视界边界又可以近似成一个反德西特空间（Anti-de Sitter space，即AdS）和球面的乘积、这一乘积还对偶于一个共形不变的量子场论（共形场论，Conformal Field Theory，即CFT；一种标量不变的量子场论，意味着共形平坦，即引力不参与相互作用）。如果你还记得我在对崩坏宇宙虚数之树/量子之海的时空结构研究中提出的假说，那你应该对此感到熟悉。</p>\n<a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://www.zhihu.com/question/544823829/answer/2588428479\" data-image=\"https://pic2.zhimg.com/v2-83b5062e57afa1e4f5f43ab0e2cea4f8_qhd.jpg?source=b1748391\" data-image-width=\"1210\" data-image-height=\"681\" class=\"internal\">《崩坏三》中的崩坏能是什么样的设定？</a><p data-pid=\"2bdV4kmU\">这里直接引用结论，即虚数空间/实数空间的对偶基本类同量子场论方法的AdS/CFT对偶<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"12\" data-text=\"银发三千雪满头. 文献综述：崩坏能的量子物理诠释[EB/OL]. (2022.08.02). [2022.08.12].  https://www.zhihu.com/question/544823829/answer/2588428479.\" data-url=\"\">[12]</sup>。AdS/CFT对偶的一个例子是5维反德西特空间与边界4维时空的映射。这是全息宇宙论的一个论据，可以用于论证我们身处的时空可能是更高维度的一个投影——这一高维AdS空间对低维CFT空间的投影，恰好对应崩坏3中高维虚数空间对低维实数空间的投影。对于律者核心的虚数奇点来说，我们可以将其理解为从虚数空间向实数空间输出能量的一种爱因斯坦-罗森桥（Einstein-Rosen Bridge，俗称虫洞）。一般的观点认为经典黑洞的虫洞是不可穿越的，但考虑到量子黑洞的相关模型仍有争议，这里姑且认为米哈游选取了可穿越的虫洞模型。</p>\n<p><img src=\"https://pica.zhimg.com/v2-0e21e8675fb625b4c28609dc95b29cae_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-0e21e8675fb625b4c28609dc95b29cae\" data-watermark-src=\"v2-51b7b8d6dfcaf3a4c8ad0bfaa1f2db73\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"4RMdD5SY\">最后，为什么前文明的奇点是“死的”，现文明的奇环就是“活的”呢？有了上述的铺垫，理解这个问题就变得非常简单了：环状奇点一般是由克尔（Kerr）黑洞的旋转形成的，即考虑角动量对时空的影响。事实上，KN（Kerr-Newman）黑洞是允许闭合类时曲线的，这足以破坏时空的因果性，奥托惦记它不是没有原因。这种奇环长期以来都被认为是不稳定的，今年的一项新研究成果有望证明低速下克尔黑洞的稳定性<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"13\" data-text=\"Elena Giorgi, Sergiu Klainerman, Jeremie Szeftel . Wave equations estimates and the nonlinear stability of slowly rotating Kerr black holes[J]. 2022.\" data-url=\"\">[13]</sup>，但即便如此其高速状态下的稳定性、复杂性和可穿越性都足以使得以这类“虚数奇环”结构的律者核心变得更容易遭受影响，自然也就显得更活跃；相比之下，最经典的史瓦西（Schwarzschild）黑洞的奇点那可不要太稳定，自然也就是死寂的、难以被影响的了。</p>\n<hr>\n<h2>致谢</h2>\n<p data-pid=\"diwW8y5G\">感谢纽约大学宗教研究系硕士 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/b85709d329dce299ea6fbf7f9bd1e66b\" data-hash=\"b85709d329dce299ea6fbf7f9bd1e66b\" data-hovercard=\"p$b$b85709d329dce299ea6fbf7f9bd1e66b\">@AdolShadow</a> 对本文宗教相关内容的协助讨论。</p>\n<p data-pid=\"HiueDNXq\">感谢崩学家 <a href=\"http://link.zhihu.com/?target=https%3A//space.bilibili.com/3095471\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">@shinano信浓</a> <a href=\"http://link.zhihu.com/?target=https%3A//space.bilibili.com/372784089\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">@Kiraboshi绮罗星</a> 对本文崩坏3相关内容的协助讨论。</p>\n<hr>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/yin-fa-san-qian-xue-man-tou?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">银发三千雪满头</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/548077716/answer/2622805847?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">132 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/548134935?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价《崩坏 3》爱莉希雅动画短片「因你而在的故事」在bilibili上的流量数据？</a><br><a href=\"http://www.zhihu.com/question/548135791?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价《崩坏 3》爱莉希雅动画短片「因你而在的故事」在bilibili上的流量数据？</a><br>\n","link":"http://www.zhihu.com/question/548077716/answer/2622805847?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"一日一技 | Windows 蓝牙 / Wi-Fi 开关消失应如何排障","date":"2022-08-12 06:30:00","description":"我蓝牙怎么没了啊，淦。<a href=\"https://sspai.com/post/75118\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75118"},{"title":"以徕卡相机而闻名的徕卡，到底是一家什么样的厂商","date":"2022-08-12 03:31:19","description":"本文希望借着这个机会，从一个摄影爱好者的角度为大家简单介绍一下徕卡这个品牌，并尝试回答一个老生常谈的问题：徕卡究竟是什么，徕卡代表了什么。<a href=\"https://sspai.com/post/74124\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74124"},{"title":"暑假想去贵州游玩一周，该怎样制定旅行攻略？","date":"2022-08-12 02:16:02","description":"\n<h2>3天2晚 走进雷山</h2>\n<p data-pid=\"x3DdclJo\">提起雷山，不是贵州的人可能会觉得陌生，但如果说著名的千户苗寨就在雷山，那你是否有些许概念了？</p>\n<p data-pid=\"sMO6Xnxu\">雷山县位于黔东南苗族侗族自治州西南部，是典型的‘九山半水半分田’的山区县，自然生态环境良好。苗族占雷山县总人口的84.2%，苗寨、苗语、苗族服饰、苗族文化内涵及生活方式等苗族文化保存十分完好，被称为中国苗文化地。雷山县共有350多座苗寨，68个国家传统村落，22个少数民族特色村寨，15项国家级非物质文化遗产名录，是全国获得国家级非物质文化遗产名录最多、国家传统村落密度最大的县。</p>\n<p><img src=\"https://picx.zhimg.com/v2-c1f089f3fe7c59d3f03c8283119a1ca1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"watermark\" data-original-src=\"v2-c1f089f3fe7c59d3f03c8283119a1ca1\" data-watermark-src=\"v2-8999b739f74cac2bb0e55d8734941a01\" data-private-watermark-src=\"v2-5d4d3df6f60aa2a04c0c2e5d24fae06f\"></p>\n<p data-pid=\"mCg7MfSM\">如果你已经来到贵州，不妨抽出一个周末，用3天2晚的时间，租辆车开进雷山，访苗乡苗族、品苗风苗韵，走入苗寨的日常，沉浸在“中国苗文化中心”的风土人情中。</p>\n<h3>\n<br><b>周五晚上</b>\n</h3>\n<p data-pid=\"AEfJuizu\">从黔东南州州府凯里市出发，进入沪昆高速、转凯雷高速，再驶入X886县道，大约1小时的车程，一道山梁过后，进入一片藏在山中的山谷，便到达龙塘村，这里距离雷山县城13公里。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-17b1ac7fb29db50e585e97e9d8468201_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1350\" data-watermark=\"watermark\" data-original-src=\"v2-17b1ac7fb29db50e585e97e9d8468201\" data-watermark-src=\"v2-6d7ad6905847075a93824f6b006d89d0\" data-private-watermark-src=\"v2-c156638d608c5027be9a0d6bb6ca7354\"></p>\n<p data-pid=\"mJz83pG7\">下榻由知名设计师孟凡浩设计的山间民宿-龙塘山房，以高山云海梯田为灵感，在陡峭山梁上设计了拥有无敌景观的8栋吊脚楼，房间的中式设计风格，静谧典雅，推开窗便将整个龙塘村尽收眼底。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-ec1dc8fd66de2b0a280c38648e5a57a7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"watermark\" data-original-src=\"v2-ec1dc8fd66de2b0a280c38648e5a57a7\" data-watermark-src=\"v2-42fae64c27aed91432bb5aeee1a98008\" data-private-watermark-src=\"v2-7fbbb54664beb90936e7b73a9438a00c\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-10020e43f9a0466215b22f7ea168edbb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"729\" data-watermark=\"watermark\" data-original-src=\"v2-10020e43f9a0466215b22f7ea168edbb\" data-watermark-src=\"v2-4268e4511bc0fd5f4fd9c05eed98b242\" data-private-watermark-src=\"v2-da22856672a2a8f51cf4031d134cfbce\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-3ff2c87e2de71e4647079b4226c212e0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"729\" data-watermark=\"watermark\" data-original-src=\"v2-3ff2c87e2de71e4647079b4226c212e0\" data-watermark-src=\"v2-989701b8e4d1c9a0b55a13d568d9250b\" data-private-watermark-src=\"v2-e702a18faf108c376e1789972f9363b3\"></p>\n<p data-pid=\"TrXxlMwY\">下到餐厅吃上一锅自制的酸汤鱼，喝上一口村民酿的米酒，家常便饭，不需要太繁复，可口便好。夜的笼罩下的龙塘村，不远处是村中民居里透出的点点暖色灯光，耳畔传来蛙声一片，仰头上望是满天繁星，山谷间传来淡淡炊烟的味道，让人顿感放松。逃离城市喧嚣，从龙塘夜色开始。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-09c99e4f436ee8d0d24e7412dbd458fd_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1350\" data-watermark=\"watermark\" data-original-src=\"v2-09c99e4f436ee8d0d24e7412dbd458fd\" data-watermark-src=\"v2-db9ee73737549f680553ff5be1d31506\" data-private-watermark-src=\"v2-3e45e7805e379087854a2caeda74d08b\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-21f92824537c8384b5684a7596a60345_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1350\" data-watermark=\"watermark\" data-original-src=\"v2-21f92824537c8384b5684a7596a60345\" data-watermark-src=\"v2-7d16fe6dcb82d42f777acb369dc92b42\" data-private-watermark-src=\"v2-c37c20ac0076bb0be6ab7fc6bc20c932\"></p>\n<h3><b>周六上午</b></h3>\n<p data-pid=\"FIvTo_oD\">清晨起来拉开窗帘，看见从田间腾起的雾气与空中薄薄云雾相汇，缭绕着群山与梯田，扑面而来湿润清新的空气，使人充满活力。山房提供一餐简单的早饭，再泡上一壶龙塘红茶，开启悠然安逸的田园生活。</p>\n<p><img src=\"https://picx.zhimg.com/v2-5aaf271e82498d56a90a3ee5ea08454f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1600\" data-watermark=\"watermark\" data-original-src=\"v2-5aaf271e82498d56a90a3ee5ea08454f\" data-watermark-src=\"v2-a8d533de5ba4a0310974c444e542e413\" data-private-watermark-src=\"v2-f7107dfb695c84afeb1abd55ef346a4f\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-ee3ea63a4063361ae4eba0ee144b49e6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1350\" data-watermark=\"watermark\" data-original-src=\"v2-ee3ea63a4063361ae4eba0ee144b49e6\" data-watermark-src=\"v2-65384e4568da26d69b0804154fa97050\" data-private-watermark-src=\"v2-7b5ab4d64c123793257bb3ef419f49ec\"></p>\n<p data-pid=\"EAq7i8xM\">在龙塘村，生活节奏自然而然的慢下来，虽然村子不大，但村内保留着完好的苗族建筑和民俗风情，作为国家公布的第二批中国传统村落，可以体验的活动有很多。比如去手工坊跟着村民学习刺绣、蓝染和扎染；或者是换上苗族服饰，试着盘个苗族姑娘的头发。但我最推荐的，是换装下水裤戴上手套，拿上一个大竹筐和小篓，下到梯田里去抓稻田鱼。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1dcd0bfb662e61f73b276da2f4cff5ff_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"watermark\" data-original-src=\"v2-1dcd0bfb662e61f73b276da2f4cff5ff\" data-watermark-src=\"v2-a3ffca21980f6cd9fd782bca64dbcfa1\" data-private-watermark-src=\"v2-c0ae77e25f3265f0916f9917adc9c2a5\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-b86535bbed4475c309868520feeb2b1f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"watermark\" data-original-src=\"v2-b86535bbed4475c309868520feeb2b1f\" data-watermark-src=\"v2-3cd2fa718cc752e43d5e30e25a03e457\" data-private-watermark-src=\"v2-3121c7bfa68e1eeff649b0f04c201cdc\"></p>\n<p data-pid=\"MBngUKS_\">很多时候可以感觉到鱼从腿边和脚上游过，但这时候下筐为时已晚，它已经快速游走了，只能去慢慢摸索找寻规律，通过水上的纹路，判断鱼游动的轨迹，举起竹筐迅速扣下，然后开始沿着筐边摸是否有鱼，动作像极了打太极的“律动”，整个过程绝对不能着急。摸到鱼再把它抓起来，也并不省力，它们会挣扎，窜动，很有可能在你手中滑走，必须用双手牢牢握住它，放进篓里。在龙塘村，值得花上大半天时间来切身体验“浑水摸鱼”的不容易！其实稻田鱼并没有很大，最长的也就一拃长，我们捞了20条，全部拿去给了山房的后厨，于是我们的午餐就是一大锅酸汤稻田鱼，吃的很满足。 </p>\n<p><img src=\"https://pic1.zhimg.com/v2-d6ca64d3e7b9b97875e61f7d3ae370a9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1350\" data-watermark=\"watermark\" data-original-src=\"v2-d6ca64d3e7b9b97875e61f7d3ae370a9\" data-watermark-src=\"v2-59268c18f1da028cfba09d7a04973406\" data-private-watermark-src=\"v2-bcebc63f8afc3254a5eb39fa4a2898b3\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-0e533586a941eaa52edf79b21f1f549b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1350\" data-watermark=\"watermark\" data-original-src=\"v2-0e533586a941eaa52edf79b21f1f549b\" data-watermark-src=\"v2-8786413a359a1ef8def5099c39c57c62\" data-private-watermark-src=\"v2-7500acb9f04e679fb156a87c521c4966\"></p>\n<p><br></p>\n<h3><b>周六下午</b></h3>\n<p data-pid=\"TZ2PSEvi\">从龙塘村出发，沿着X886公路行驶约16公里，半小时的车程，便可到达由十余个依山而建的自然村寨连片组成的西江千户苗寨。这里重峦叠嶂，梯田依山顺势直连云天，白水河穿寨而过。提到西江千户苗寨相信很多人都不陌生，很多旅游攻略和博主都发过这里的照片，但却很少人提及这里其实是雷山县的一个苗寨，也是中国最大的苗族聚居村寨。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-8d9f2953299867fa513410e3b2b7d15f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1350\" data-watermark=\"watermark\" data-original-src=\"v2-8d9f2953299867fa513410e3b2b7d15f\" data-watermark-src=\"v2-48a2633504520d7759f22eaf8cf26619\" data-private-watermark-src=\"v2-c4f3238ea2363d127645045cbd42b0b6\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-a304341cbdff45f13834d64258e77d4c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"watermark\" data-original-src=\"v2-a304341cbdff45f13834d64258e77d4c\" data-watermark-src=\"v2-f03b709bc61fbc37a72343899a35bd09\" data-private-watermark-src=\"v2-e8ac5d4e5dac9df52f33c1ee50ea809c\"></p>\n<p data-pid=\"W5p6xdvA\">千户苗寨的商业发展已经颇为成熟，但仔细逛遍这里的角角落落，我看到人们在一片草地围观斗鸡、梯田间农民大叔拉着水牛犁地、穿着苗族便衣的妇女挽着裤腿下到水里插秧苗、坐在长廊里纳鞋垫的阿姨、在巷子里里玩沙包的孩子们、街头市集上拿着原始吊秤卖瓜果蔬菜的大妈们…那些本地的生活气息，并没有被千篇一律的景区的商业气息而湮没，只是你要有善于发现的眼睛。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-977ba89d18f621db5981629f898b1346_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"watermark\" data-original-src=\"v2-977ba89d18f621db5981629f898b1346\" data-watermark-src=\"v2-d9b18bb051c413cb7a5d8720d299c5a2\" data-private-watermark-src=\"v2-5466f58627f783ace15f4f83b364f5bb\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-f5d97e19833748b76a1288390605c7ba_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"watermark\" data-original-src=\"v2-f5d97e19833748b76a1288390605c7ba\" data-watermark-src=\"v2-92a635c4564bd4df6c4115c371816b05\" data-private-watermark-src=\"v2-8a96ae2209398c1a2f6923856c029dcb\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-6aeda93fc72ca405b1325485be05c106_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"watermark\" data-original-src=\"v2-6aeda93fc72ca405b1325485be05c106\" data-watermark-src=\"v2-98f5f80ce084e40d39f697483c2fc85c\" data-private-watermark-src=\"v2-432b12aba0b8d8758a51605a7551a8d5\"></p>\n<p><br></p>\n<h3><b>周六晚上</b></h3>\n<p data-pid=\"HzTpgYXv\">找一家坐落在山上吊脚楼的餐厅，靠窗而坐，似乎打卡西江千户苗寨的标准方式。最具看点的是这里的建筑风格，苗寨民居依山傍水，由山脚延伸至山脊顺势，依坡筑屋，寨群体高低错、玲珑有致层叠而上，放眼望去与自然的结合相得益彰。坐在窗前，俯瞰将整个苗寨尽收眼底，是一幅壮观的景象。当夜幕降临，一个个吊脚楼里陆续点亮灯光，千户苗寨就变成了千窗之城，星星点点，当你看着别家灯火时，殊不知此刻你也是他人眼中的灯火，想来也是浪漫。在千户苗寨，愿有一盏灯因你而亮。</p>\n<p><img src=\"https://pica.zhimg.com/v2-abb65ca79ab972fda204b0b23f2e336e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1350\" data-watermark=\"watermark\" data-original-src=\"v2-abb65ca79ab972fda204b0b23f2e336e\" data-watermark-src=\"v2-ca8ebddb3d9b82520579ca77d7b94ccf\" data-private-watermark-src=\"v2-e894fd8e244c5aa58fb58d17e9476def\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-4ae37152511f93208cc818fbe919acc4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1349\" data-watermark=\"watermark\" data-original-src=\"v2-4ae37152511f93208cc818fbe919acc4\" data-watermark-src=\"v2-35de5e5c62c7d0b0307ba1c346d7e49f\" data-private-watermark-src=\"v2-2d9d6d76bbf3cffee77dd35617718ff2\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-8afe86a695397ed72f90972f81aec671_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"watermark\" data-original-src=\"v2-8afe86a695397ed72f90972f81aec671\" data-watermark-src=\"v2-8aeaa0fd7ac1091a6cc33175b1936e0f\" data-private-watermark-src=\"v2-2af70e6db78c4aba96c8c9c6db856b24\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-10ad3eba504092f304765071af872c66_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1350\" data-watermark=\"watermark\" data-original-src=\"v2-10ad3eba504092f304765071af872c66\" data-watermark-src=\"v2-36461d12e254ea9e6f60d7fc1e086b97\" data-private-watermark-src=\"v2-1faf9c73ac090d0974ee5ba46c5a8003\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-3b2eda6b7d6cbda31fcbb4888b14e24c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1350\" data-watermark=\"watermark\" data-original-src=\"v2-3b2eda6b7d6cbda31fcbb4888b14e24c\" data-watermark-src=\"v2-953e3175b2cfab45d2fdf0d34e8baa04\" data-private-watermark-src=\"v2-46ce0e9396196534561f825c19d3c68a\"></p>\n<p><br></p>\n<h3><b>周日上午</b></h3>\n<p data-pid=\"Ka6JYXk_\">站在龙塘村村口，我被眼前不远处正在搭盖的吊脚楼而吸引，作为苗族传统建筑形式，其建造方式已延续数千年。吊脚楼除了屋顶盖瓦以外，上上下下全部用杉木建造。支撑起整栋建筑的屋柱用大杉木凿眼，柱与柱之间用大小不一的杉木斜穿直套卯榫嵌合，不用一钉一铆也十分坚固。房子四周还有吊楼，楼檐翘角上翻如展翼欲飞。房子四壁用杉木板开槽密镶，讲究的里里外外都涂上桐油又干净又亮堂。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-3eb8860593855b5ea930f4df40a99097_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"575\" data-rawheight=\"798\" data-watermark=\"watermark\" data-original-src=\"v2-3eb8860593855b5ea930f4df40a99097\" data-watermark-src=\"v2-eea0d19885abf5ad07160340d7e09cf6\" data-private-watermark-src=\"v2-1218cddecfada582778b0dba2af81477\"></p>\n<p data-pid=\"8egm1n8w\">村民说，上梁的时候是最热闹的，按传统会有一系列的活动，翻梁木赞梁木、赞糍粑抛糍粑、烧香奠酒、敬祭天地神灵等等，会邀请亲朋好友从四面八方赶回来共同参加，是除了过苗年外村子里最忙碌的日子。还真希望有朝一日，可以亲自看一场上梁仪式。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-dc0fef0cc7596aa9dcfcca1930eb5b45_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"watermark\" data-original-src=\"v2-dc0fef0cc7596aa9dcfcca1930eb5b45\" data-watermark-src=\"v2-148757bea7b3c3913f947c80b2d63c4c\" data-private-watermark-src=\"v2-8e0e4f5cfcecf21f523596086dcfb571\"></p>\n<h3><b>周日下午</b></h3>\n<p data-pid=\"0sdznB7m\">退房告别龙塘村，沿着G243行驶40分钟，到达20公里外的朗德上寨，2008年奥运圣火曾走过这个民风淳朴的苗寨。寨内吊脚楼都不加修缮，保留着最初的样貌，最大限度的保持山体的生态系统的完整性，以达到建筑与自然走势的有机融合，鳞次栉比很有风情。 </p>\n<p><img src=\"https://pic3.zhimg.com/v2-58de83eaa1514b80ce91794c604253c3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1600\" data-watermark=\"watermark\" data-original-src=\"v2-58de83eaa1514b80ce91794c604253c3\" data-watermark-src=\"v2-08dea0a2390056a8b9d2dc97bafcf5c1\" data-private-watermark-src=\"v2-e6e35a6a28e069f4bf978abc7ab920c0\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-851a70f266bc3897bc1b4c9bff39cf56_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"watermark\" data-original-src=\"v2-851a70f266bc3897bc1b4c9bff39cf56\" data-watermark-src=\"v2-03802462fbeb1f628efa123eaa2c6512\" data-private-watermark-src=\"v2-4f033967e456b49e30448e3ca88e6610\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-14ab9b76b83f6ca0337dbe97f59caa28_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"watermark\" data-original-src=\"v2-14ab9b76b83f6ca0337dbe97f59caa28\" data-watermark-src=\"v2-3755ba3899bf62b5dc98e1f5e429b33a\" data-private-watermark-src=\"v2-fc501ed39ddbadec184ca03cd5623612\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"I4S8XZ-4\">所有居民都生活在吊脚楼内，生活气息浓厚，家家门不闭户，热情的寨民在跟你聊上几句后就开始张罗你到家里坐坐。这里每天都有传统的苗族歌舞表演，全寨男女老少着苗装出演，芦笙舞，板凳舞，铜鼓舞蹈，小朋友的舞蹈，芦笙绕梁，连绵不绝。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f80234e4c7da22276b4af9c5d29a35c5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"watermark\" data-original-src=\"v2-f80234e4c7da22276b4af9c5d29a35c5\" data-watermark-src=\"v2-5c1a61f6dd265c085377688ff8a775ad\" data-private-watermark-src=\"v2-dc292e12c7d34a70e22f7ca477837028\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-c9e72129504a8003dafefba931da5435_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"watermark\" data-original-src=\"v2-c9e72129504a8003dafefba931da5435\" data-watermark-src=\"v2-da8d0a99042d5f0cbfe6035176d49608\" data-private-watermark-src=\"v2-3eb94032b338db771f62e656ffbcc773\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-40a35667a9610b6b8f9cb0f63325b013_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"watermark\" data-original-src=\"v2-40a35667a9610b6b8f9cb0f63325b013\" data-watermark-src=\"v2-e869d44ec2717f195665731cda9b56a1\" data-private-watermark-src=\"v2-f215fa9e35e57daebc98eda1d9638a9e\"></p>\n<p data-pid=\"mOcs5AUw\">尽管每个苗寨都有歌舞，但却讲述着完全不同的故事。而在商业化还不太严重的朗德上寨，他们演绎的苗歌苗舞没有唱跳‘剧本’，真实展现着他们的心路历程和生动丰富的生活。聊天后才知道，苗寨人参加表演可以在村里积分，换取福利，这也是一种对当地居民的扶持吧。</p>\n<p><img src=\"https://pica.zhimg.com/v2-686523b8dedc9a5fed91e99d5a7d135a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"watermark\" data-original-src=\"v2-686523b8dedc9a5fed91e99d5a7d135a\" data-watermark-src=\"v2-8b4cc3fd032befd8ec8ab2c1f20b50f7\" data-private-watermark-src=\"v2-b07bc78043c79fff081156b6e154e267\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-0e33a3bb002ed33aa8e61b87e5327c36_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"watermark\" data-original-src=\"v2-0e33a3bb002ed33aa8e61b87e5327c36\" data-watermark-src=\"v2-7335add150a370542421197b7785c1e6\" data-private-watermark-src=\"v2-2bbbe06d75bf1b5a4552b0d23ae5897a\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-2f0c4f25ac5bdd5cd12f3fcc715a4e14_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"watermark\" data-original-src=\"v2-2f0c4f25ac5bdd5cd12f3fcc715a4e14\" data-watermark-src=\"v2-c3b3869fc1d04b56b75e156438905397\" data-private-watermark-src=\"v2-05a47e14fa02ca88c403b0cbe6bc6b46\"></p>\n<p data-pid=\"ogNIyUul\">离开朗德上寨已是临近傍晚，趁着天还亮我们驾车前往贵阳。当车驶离雷山县，身边的景色从群山、梯田，变换成楼房、广告牌，我那还沉浸在隐身于世的心情，随着车载电台可以捕捉到信号开始播放新闻交通信息，而重返现实。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-27e96d7fb0763d9b696fb8392613f002_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"729\" data-watermark=\"watermark\" data-original-src=\"v2-27e96d7fb0763d9b696fb8392613f002\" data-watermark-src=\"v2-1558033e308085e94ae6764758e53f41\" data-private-watermark-src=\"v2-80b7a2e547e1ab76393bb516f141a129\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-3b77ce0e7ccafc8fa3299a88e29d806e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"watermark\" data-original-src=\"v2-3b77ce0e7ccafc8fa3299a88e29d806e\" data-watermark-src=\"v2-090a66331ec07a6270e3ee932164dc83\" data-private-watermark-src=\"v2-6839f17ea3e06ddc572e5332110aef73\"></p>\n<p data-pid=\"KnMBeDxm\">❗❗❗提示：预订龙塘山房，可免费提供凯里火车站接送、西江千户苗寨接送、朗德上寨接送服务，需提前预约安排时间。</p>\n<p><br></p>\n<h2>关于我</h2>\n<p data-pid=\"YCf6fvXm\">马蜂窝，知乎，或全网搜索<b>@游旻Skaey</b></p>\n<p data-pid=\"YC-WWDdj\">那个有着大红唇的姑娘，一定是我没错了！</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/skaeytravelstudio?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">游旻Skaey</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/542471096/answer/2611265071?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">13 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/540234264?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">暑假想去张家界旅游五日，该怎样制定旅行攻略？</a><br><a href=\"http://www.zhihu.com/question/541404157?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">暑假想去台中旅游一周，该怎样制定旅行攻略？</a><br>\n","link":"http://www.zhihu.com/question/542471096/answer/2611265071?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：小米新品发布会、微软宣布开源超 1500 款 3D Emoji 等","date":"2022-08-12 01:00:03","description":"联想新品发布会，摩托罗拉发布 moto razr 2022 等<a href=\"https://sspai.com/post/75115\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75115"},{"title":"奥迪Q4 e-tron全网首拆，以电制电，探索极限状态下的车辆安全 | 拆车实验室","date":"2022-08-11 15:26:28","description":"\n<p data-pid=\"djVtCGt8\"> 奥迪Q4 e-tron全网首拆，以电制电，探索极限状态下的车辆安全 | 拆车实验室</p>\n<a class=\"video-box\" href=\"https://link.zhihu.com/?target=https%3A//www.zhihu.com/video/1541864735813632000\" target=\"_blank\" data-video-id=\"\" data-video-playable=\"true\" data-name=\"\" data-poster=\"https://pic3.zhimg.com/v2-51b3e144a9521aed4e88414ad6a4a5f0.png\" data-lens-id=\"1541864735813632000\"><img class=\"thumbnail\" src=\"https://pic3.zhimg.com/v2-51b3e144a9521aed4e88414ad6a4a5f0.png\"><span class=\"content\"><span class=\"title\"><span class=\"z-ico-extern-gray\"></span><span class=\"z-ico-extern-blue\"></span></span><span class=\"url\"><span class=\"z-ico-video\"></span>https://www.zhihu.com/video/1541864735813632000</span></span></a><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhi-qing-67-1?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">拆车实验室</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/552697517?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"新玩意 116｜少数派的作者们最近买了啥？","date":"2022-08-11 09:11:13","description":"关于栏目为了满足读者们对于《新玩意》栏目加更的需求，机器人特地邀请了Matrix作者们也来聊聊自己近期购买的新奇产品。喜欢本栏目的话，欢迎充电或评论文章来表达自己的喜爱，你的每一次真心夸赞或建议，都是 ...<a href=\"https://sspai.com/post/75102\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75102"},{"title":"NPM 自动更新版本号","date":"2022-08-04 05:00:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>ChenYFan 大佬的文章：<a href=\"https://blog.cyfan.top/p/d3c51290.html\">SpeedUp!使用黑科技为你的网站提速</a> 有提到过将 Hexo 博客的全部静态文件上传至 NPM 达到加速效果。</p>\n<p>但是 NPM 版本号不能重复，而且为了精准命中缓存和防止边缘 <code>@latest</code> 缓存过长，就必须指定版本号。</p>\n<p>本人在 <a href=\"https://blog.yfun.top/posts/2876015612/\">我的图床解决方案</a> 一文中使用的方法是 <code>npm version patch</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804133426.png\"></p>\n<p>但这个方法也有一些弊端，比如 <code>patch</code> 只会更新 <code>z</code> 位数的版本号，而且并不会上传至仓库，很可能会出现版本号冲突导致上传失败。这就是为什么最后还需要重新推送 Git 提交。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E8%AF%95%E8%AF%95%E7%9C%8B\" class=\"headerlink\" title=\"试试看\"></a>试试看</h2>\n<p>NPM 版本号遵循 <code>semver</code> 规范，格式为 <code>major.minor.patch</code>。</p>\n<p>为了在获取最新版本号的时候不发生混乱，我选择先获取最新的版本号。</p>\n<blockquote><p>记得把 <code>cky-blog-static</code> 改成自己的项目名。</p></blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>获取到最新版本号后，就可以对版本号进行分析。</p>\n<p>以 <code>1.4.7-b541af2ea284a39da0bbf63b88fdb65c</code> 为例，先按 <code>major.minor.patch</code> 分离。当然，也需要考虑版本号后还有 <code>build metadata</code> 的情况。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\"><span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br></pre></td></tr></table></figure><p><del>为了版本号好看些</del>，可以通过判断实现满十进一。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位小于 9，直接 +1</span></span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">} <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位大于等于 9，y 位小于 9，y+1, z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">} <span class=\"keyword\">else</span> {</span><br><span class=\"line\"><span class=\"comment\">// z 大于等于 9，y 大于等于 9，x+1,y=0,z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>最后，重新拼接版本号。如果担心服务器缓存版本号导致冲突，还可以加上一些随机字符串。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br></pre></td></tr></table></figure><p>将最新的版本号信息重新写入 <code>package.json</code> 文件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">packageJson.version = newVersion;</span><br><span class=\"line\"><span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p><del>直接 CV 代码！</del></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 更新 package.json 版本号</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fetch = <span class=\"built_in\">require</span>(<span class=\"string\">\"node-fetch\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> md5 = <span class=\"built_in\">require</span>(<span class=\"string\">\"js-md5\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> update = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">    verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(newVersion);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">    packageJson.version = newVersion;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">    fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Complete!!\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">update();</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%90%8E\" class=\"headerlink\" title=\"最后\"></a>最后</h2>\n<p>如果是 Hexo 文件部署，就可以直接把文件直接丢在项目根目录，Action 集成部署加上：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">node update.js</span><br></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804135818.png\"></p>\n<p><del>Blog 半年没更新，除除草 --(....</del></p>\n","link":"https://blog.yfun.top/posts/2022/auto-update-npm-version/"},{"title":"我有特别的 DNS 配置和使用技巧","date":"2022-07-28 15:31:00","description":"\n<p>众所周知，DNS 的作用与电话簿类似，将人类可读的域名映射到机器可读 IP 地址、使人更方便地访问互联网。DNS 是非常重要的互联网基础设施，对于改善上网冲浪的体验中的重要程度不容小觑。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/96381/31/31172/23930/62e2ab5bE554d388b/37027f4a03351b9e.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/i-have-my-unique-dns-setup/\">https://blog.skk.moe/post/i-have-my-unique-dns-setup/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/i-have-my-unique-dns-setup/"},{"title":"优化博客的累计布局偏移（CLS）问题","date":"2022-06-07 17:24:00","description":"\n<p>距离上一篇文章发布已有四个月了，是时候写几篇文章给博客除草了。上一次我介绍了我如何迁移、重构了我的博客的架构，这次我想来谈谈我在重构中优化和打磨访客体验时解决的一个问题。我的博客优化之旅 图片 lazyload 的学问和在 Hexo 上的最佳实践 我的博客有多快？ 天下武功，唯快不破 —— 我是这样优化博客的 ...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/206311/26/14625/38940/629f7f81Eb11312de/b1e67f07b1cc9bc7.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/fix-blog-cls/\">https://blog.skk.moe/post/fix-blog-cls/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/fix-blog-cls/"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\r\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\r\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\r\n    return new Date(date.toLocaleString('en-US', { timeZone }))\r\n}\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\r\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\r\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\r\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: '2-digit',\r\n        hour12: false,\r\n        timeZone\r\n    })\r\n    return {\r\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\r\n        convert (date) {\r\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\r\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\r\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\r\n        }\r\n    }\r\n}\r\n\r\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\r\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\r\n    return converter.convert(new Date(secDate), tzName) - secDate\r\n}\r\n\r\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\r\ncmn-Hans-SG = 中文普通话-简体-新加坡\r\ncmn-Hant-TW = 中文普通话-繁体-台湾\r\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\r\ncmn = 中文普通话\r\n\r\nzh-Hans = 中文-简体\r\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\r\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\r\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\r\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\r\n}\r\n\r\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long'\r\n}\r\nconst now = new Date()\r\n\r\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\r\n\r\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\r\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\r\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\r\n\r\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\r\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\r\n\r\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\r\n\r\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\r\n\r\nzhCNFormatter.format(now) // 2021年10月13日星期三\r\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\r\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\r\n\r\njaFormatter.format(now) // 2021年10月13日水曜日\r\njaAltFormatter.format(now) // 令和3年10月13日水曜日\r\n\r\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\r\n// {locale: 'zh-CN', calendar: 'gregory', …}\r\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\r\n     // 基于一个固定日期计算，这里选择 1970.1.1\r\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\r\n    const base = new Date(1970, 0, 1).getTime()\r\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\r\n    return Array.from({ length: 7 }, (_, day) =&gt; (\r\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\r\n    ))\r\n}\r\n\r\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\r\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\r\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    second: 'numeric',\r\n}).formatToParts(new Date())\r\n// [\r\n//     { type: 'year', value: '2021' },\r\n//     { type: 'literal', value: '年' },\r\n//     { type: 'month', value: '10' },\r\n//     { type: 'literal', value: '月' },\r\n//     { type: 'day', value: '13' },\r\n//     { type: 'literal', value: '日' },\r\n//     { type: 'weekday', value: '星期三' },\r\n//     { type: 'literal', value: ' ' },\r\n//     { type: 'dayPeriod', value: '上午' },\r\n//     { type: 'hour', value: '1' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'minute', value: '00' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'second', value: '00' }\r\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\r\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\r\n}\r\n\r\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\r\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\r\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\r\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\r\n  timeZone: 'America/Los_Angeles',\r\n  year: 1995,\r\n  month: 12,\r\n  day: 7,\r\n  hour: 3,\r\n  minute: 24,\r\n  second: 30,\r\n  millisecond: 0,\r\n  microsecond: 3,\r\n  nanosecond: 500,\r\n  calendar: 'iso8601'\r\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<p>2020 年 11 月 11 日，苹果在本年度最后一次 Apple Events 上发布了全新的 ARM 芯片 M1、以及三款搭载了 M1 的 Mac：MacBook Air、MacBook Pro 13‘ 和 Mac Mini。在 WWDC 2020 库克宣布 Apple Silicon 后，这次 Apple Events 再一次掀起了热潮，不少 KOL 都把 M1 奉若神明，不少人也不以为然。本文通过 8 个问题来简单聊聊 M1 和 ARM Mac。M1 芯片的性能如何？本文写就时，搭载 M1 的 Mac 尚未开始发货，我们能看到的只有 GeekBench 上流出的跑分。所以，让我们先从跑分开始看起？...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"\n<p>WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将其表述为 \"An API for accessing Public Key Credentials\"，即“一个用于访问公钥凭证的 API”。WebAuthn 很强大，强大到被认为是 Web 身份认证的未来（当然，也很复杂）。你有想过通过指纹或者面部识别来登录网站吗？WebAuthn 就能在保证安全和隐私的情况下让这样的想法成为现实。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\" alt=\"通过 WebAuthn 调起 Windows Hello 登录网站\" width=\"1912\" height=\"966\" class=\"aligncenter size-full wp-image-2215\"></a>\n<p>你可以在<a href=\"https://webauthn.io/\" rel=\"noopener\">这个网站</a>自行体验 WebAuthn。或者，如果你有一个使用 WordPress 的站点，可以尝试一下 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WP-WebAuthn</a> 这款插件，它可以为你的站点启用 WebAuthn 登录。这是我为了写这篇文章而练手开发的插件，本文中的部分示例代码也来自这款插件。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"wp-webauthn\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/wp-webauthn\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>WebAuthn Level 1 标准已在 2019 年 3 月成为 W3C 推荐标准，而 Level 2 标准目前也已进入编辑草案阶段，但互联网上有关它的中文资料却仍然很少，国内也鲜有网站支持这一新标准。于是，在抱着各种英文资料和标准啃了几天以后，我折腾出了这篇文章。</p>\n<p>在这篇文章里，我将会从最基本的概念开始，逐渐深入 WebAuthn，直到解码公钥等深层细节。这可能是你能找到的有关 WebAuthn 最详细最基础的中文文章，也很可能是最长的。在开始之前，<strong>我强烈建议你打开菜单中的文章目录浏览一遍，以对这篇文章涉及的内容有所了解。</strong>如果你只是想了解如何简单地在你的项目中添加对 WebAuthn 的支持，那么“<a href=\"https://flyhigher.top/#webauthn-overview\">浅谈 WebAuthn</a>”部分就是你要找的；如果你想了解更多关于 WebAuthn 的底层细节，那么你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分。</p>\n<p>由于在本文写作时 WebAuthn Level 2 规范尚未定稿，<strong>这篇文章我们将只专注于 Level 1 规范。</strong></p>\n<p>这篇文章最后更新于 2020.9 ，在你读到这篇文章时，部分事实可能已经发生改变，请注意判断。</p>\n<p><strong>更新日志：</strong></p>\n<ul>\n<li>2021.1.16 添加 Chrome 开发工具信息</li>\n<li>2020.9.17 更新 iOS/iPad OS 兼容性信息</li>\n<li>2020.5.20 添加部分无用户名认证的平台兼容性内容</li>\n<li>2020.5.15 添加部分 <code>extensions</code> 相关内容与链接；添加全局凭证 ID 唯一内容；添加凭证 ID 查找相关内容；添加“从 U2F 认证迁移”一节</li>\n<li>2020.4.13 更新与修正 <code>userVerification</code> 相关内容；添加部分 Firefox 相关内容</li>\n<li>2020.3.23 文章发布</li>\n</ul>\n<p>那么让我们开始吧。<span></span></p>\n<h1>浅谈 WebAuthn</h1>\n<p>在这个部分里，我们将会从基础概念开始，了解有关 WebAuthn 和密码学的一些基础知识，并最终使用第三方库实现基础的 WebAuthn 认证。如果你已经对这些内容有所了解了，可以跳到“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”继续阅读。</p>\n<h2>为什么使用 WebAuthn</h2>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\" alt=\"钓鱼邮件\" width=\"709\" height=\"693\" class=\"aligncenter size-full wp-image-2162\"></a>\n<p>相信你一定收到过类似的邮件吧？只要你点进那个最显眼的链接，你就会进入一个设置好的圈套——钓鱼网站。如果你一时糊涂在这类网站上填写了你的账号和密码，bingo，你的账号就不再是你的账号了。</p>\n<p>不过，就算你警惕心再强，也无法避免密码泄露事件。Twitter, Facebook 等都爆出过明文密码泄露事件，证明再大的公司或组织也无法避免密码泄露问题。雪上加霜的是，很大一部分用户都非常喜欢使用重复密码，这就导致一次密码泄露会牵连很多网站，用户的账户安全性完全无法得到保证。</p>\n<p>那么，有什么办法解决这些问题吗？<strong>彻底解决的方法只有一个，那就是抛弃密码。</strong>可是没有密码还怎么验证用户身份呢？这就是 WebAuthn 的用武之地了。</p>\n<p><del>没有密码的好时代，来临力！</del></p>\n<h2>什么是 WebAuthn</h2>\n<p>那么到底什么是 WebAuthn 呢？如开头所说，WebAuthn 是“一个用于访问公钥凭证的 API”，网站可以通过这个 API 进行一些高安全性的身份验证。WebAuthn 一个最常见的应用就是用于网站登录时的 2FA（双重因素验证）甚至是无密码登录。通过网页调用 WebAuthn，在不同平台下，<strong>我们可以实现通过 USB Key、指纹、面部甚至虹膜扫描来认证身份，同时确保安全和隐私。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\" alt=\"WebAuthn 可使用的各种身份认证方式\" width=\"1294\" height=\"566\" class=\"aligncenter size-full wp-image-2213\"></a>\n<p>WebAuthn 标准是 FIDO2 标准的一部分，而 FIDO2 则是由 FIDO 联盟和 W3C 共同推出的 U2F（现称作 FIDO1）的后继标准，旨在增强网络认证的安全性。</p>\n<blockquote><p>你可能了解过 U2F，那么 U2F 和 FIDO2 的区别在哪里呢？从名字上可以看出，U2F，即“通用第二因素协议”，是专注于作为密码后的第二道屏障的，而 FIDO2 增加了单因素认证功能，这意味着使用 FIDO2 可以完全替代密码，真正实现无密码登录。</p></blockquote>\n<p>FIDO2 标准主要包括四个部分，其一是用于网站和访客设备交互的 WebAuthn，而 Client to Authenticator Protocol 2（CTAP2，客户端-认证器协议）作为 WebAuthn 的补充，则是用于访客的设备和认证器交互的协议。标准的其他两个部分则是 U2F 和 UAF 规范。在这篇文章中，我们只关心 WebAuthn，不会涉及 CTAP, U2F 和 UAF 的相关知识。如果你对这段话中的一些概念不了解，不要紧张，接下来我们就来谈谈 WebAuthn 中一些常用的术语和概念。</p>\n<blockquote><p>WebAuthn 只能在安全上下文中使用，也就是说，页面需要使用 HTTPS 协议或是处于 <code>localhost</code> 中。</p></blockquote>\n<h2>常用术语和概念</h2>\n<p>WebAuthn 中有许多不常碰到的术语，不过我只会在这里介绍一些常用的术语和概念——如果你只是希望做出一个简单的实现，那么了解这一段中的一些概念就足够了。同时，由于我实在没能找到一部分术语的通用翻译，有一些术语我按着自己的理解尽可能地翻译了，有任何问题请告诉我。</p>\n<p>在一个完整的 WebAuthn 认证流程中，通常有这么几个角色：</p>\n<ul>\n<li>Relying Party 依赖方 (RP) ：指服务提供方，即网站</li>\n<li>User 用户：正准备登录的你</li>\n<li>Authenticator 认证器：通常指 USB Key 或是设备内置的指纹扫描器、虹膜扫描器、面部识别装置等，正是它们在使用流程中代替了密码甚至是用户名</li>\n<li>User Agent 用户代理：通常指浏览器或系统，负责与认证器交互</li>\n</ul>\n<p>认证过程通常分为两种：</p>\n<ul>\n<li>Registration Ceremony 注册仪式：用户向账户上添加认证器</li>\n<li>Authentication Ceremony 验证仪式：用户通过已注册的认证器验证身份</li>\n</ul>\n<p>同时，认证过程中还会产生这些内容：</p>\n<ul>\n<li>Challenge 挑战：通常是一串随机字符串</li>\n<li>Public Key Credential 公钥凭证：由认证器产生的凭证，在技术上代替了密码</li>\n<li>Attestation 证明：注册时认证器产生的验证数据</li>\n<li>Assertion 断言：验证时认证器产生的验证数据</li>\n</ul>\n<blockquote><p><strong>请注意区分证明 (Attestation) 和断言 (Assertion)</strong>，特别是在这两个单词有些相似的情况下。在 WebAuthn 中，它们是不同过程中的类似概念，但并不相同。</p></blockquote>\n<p>如果你对于这些内容不是很理解，没有关系，我们会在“<a href=\"https://flyhigher.top/#how-to-webauthn\">使用流程</a>”一节中将这些概念放到实际情况中解释，你只要先区分这些概念即可。</p>\n<h2>安全性的基础</h2>\n<p>WebAuthn 为什么安全？和 HTTPS 一样，WebAuthn 使用非对称加密的思路来保证安全性，但侧重点又有所不同。要理解 WebAuthn 的认证流程，我们必须对非对称加密有所了解。如果你对非对称加密比较熟悉了，就直接跳到下一段吧。</p>\n<p>WebAuthn 的核心在于“认证”，即保证产生了凭证的认证器是用户的认证器，而不是第三方在伪造凭证。但为什么要使用非对称加密呢？我们可以先来看看对称加密。</p>\n<p>让我们假设小明和小红相互写信，见不到对方。这天小红突然想，给自己写信的人是不是真的小明呢？于是小红要求对方向小红证明自己是小明。怎么证明呢？他们商量出来这么一套方案：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明和小红商量一个统一的密码和密钥</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明用提前和小红商量好的密码和密钥加密文本后发回给小红</li>\n<li>小红使用相同的密码和密钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和密钥</li>\n</ol>\n<blockquote><p>在密码学中，我们通常把“加密算法”称为密码 (code)，和通常登录时用的密码 (password) 并非同一个概念。</p></blockquote>\n<p>在这种情况下，<strong>只要密钥不泄露</strong>，即拥有正确密钥的只有小明和小红，那么小红就能确定对方一定是小明。但这样的问题也很明显，如果小明和小红不能见面，那么他们就必须先以明文交换密码——<strong>在这个过程中一旦有人窃取到了密码，这个认证就无效了。</strong></p>\n<p>这时我们就需要使用<strong>非对称加密</strong>来拯救破碎的信任了。非对称加密的基础是一对密钥，也就是公钥和私钥，它们是互相关联但（几乎）无法互相推导的。在非对称加密的过程中，选择相同的密码后，使用私钥加密明文得到的密文只能由对应的公钥解密，无法使用私钥解密，同时这个过程反过来也是成立的。</p>\n<blockquote><p>本文的核心并不是非对称加密算法，因此不会详述非对称加密在数学上的证明，若有兴趣可以自行了解。</p></blockquote>\n<p>这就完美解决密钥泄露的问题了。让我们回过头来看之前的例子。现在小明和小红决定使用非对称加密来证明身份，过程如下：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明提前生成一对公私钥，将公钥发送给小红，私钥自己保管，同时商量好统一的密码</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明使用商量好的密码和自己的私钥加密文本，发送给小红</li>\n<li>小红使用相同的密码和小明的公钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和私钥</li>\n</ol>\n<p>在这种情况下，<strong>只要私钥不泄露</strong>，那么小红解密得到的文本和之前发送的一致，那么就可以证明收到的密文一定是由小明加密后发送过来的。而在整个过程中，私钥都没有离开过小明，更没有经过传输，也就几乎没有泄露的可能了。这时，小红终于可以确定对面和她通信的人的确是小明了。</p>\n<p>题外话：HTTPS 虽然也应用了非对称加密，但 HTTPS 更侧重于“加密”而非“认证”，因此思路上会有些许差异。要了解关于 HTTPS 和非对称加密的更多信息，你可以阅读我之前写的这篇文章：</p>\n<p></p>\n<div class=\"mdx-post-cot\" data-mdxposturl=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdx-post-wait-out-c2\"><div class=\"mdx-post-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<span></span>\n<h2>使用流程</h2>\n<p>了解了非对称加密，我们就可以来看看 WebAuthn 的认证流程了。</p>\n<p>和普通的密码一样，<strong>使用 WebAuthn 分为两个部分，注册和验证。</strong>注册仪式会在依赖方中将认证器的一些信息和用户建立关联；而验证仪式则是验证这些信息以登确保是用户本人在登录。根据上一节的思路，我们可以知道，注册仪式就是认证器生成一对公私钥，然后将公钥交给依赖方；而验证仪式是依赖方发送给认证器一段文本，要求认证器用自己的私钥加密后发回以验证。</p>\n<p>在实际情况中，WebAuthn 是基于<strong>挑战-应答模型</strong>工作的。要更好地理解，我们直接来看具体流程。先来看看注册的流程。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\" alt=\"WebAuthn 注册流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2224\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的注册请求</li>\n<li>依赖方向浏览器发送挑战、依赖方信息和用户信息</li>\n<li>浏览器向认证器发送挑战、依赖方信息、用户信息和客户端信息以请求创建公钥凭证</li>\n<li>认证器请求用户动作，随后创建一对公私钥，并使用私钥签名挑战（即证明），和公钥一起交给浏览器</li>\n<li>浏览器将签名后的挑战和公钥发送给依赖方</li>\n<li>依赖方用公钥验证挑战是否与发送的一致，如果成功则将公钥与用户绑定，注册完成</li>\n</ol>\n<p>我也做了一个交互式的 Demo，你可以对照流程来更好地理解。</p>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\">开始注册</button> <span></span></p>\n<div></div>\n<blockquote><p>注意，这个 Demo 和下方的 Demo 都只是一个本地模拟的简单示例，没有任何数据会被上传，当然也不会对数据进行验证。</p></blockquote>\n<p>而之后的验证流程如下：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\" alt=\"WebAuthn 验证流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2226\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的验证请求</li>\n<li>依赖方向浏览器发送挑战</li>\n<li>浏览器向认证器发送挑战、依赖方信息和客户端信息以请求获取公钥凭证</li>\n<li>认证器请求用户动作，随后通过依赖方信息找到对应私钥，并使用私钥签名挑战（即断言），交给浏览器</li>\n<li>浏览器将签名后的挑战发送给依赖方</li>\n<li>依赖方用之前存储的公钥验证挑战是否与发送的一致，一致则验证成功</li>\n</ol>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\" disabled>开始验证</button> <span>在上方注册后才能验证</span></p>\n<div></div>\n<p>可以看到，WebAuthn 不仅在理论上是安全的，同时<strong>在整个过程中并没有隐私数据被传输</strong>——用户信息实际上只包含用户名和用户 ID。因此我们完全可以说 WebAuthn 是安全且私密的。</p>\n<blockquote><p>为了避免用户在不同依赖方之间被追踪，认证器通常会为每个依赖方和用户的组合都创建一对公私钥。不过，由于认证器的存储空间有限，认证器通常不会存储每一个私钥，而是会通过各类信息和烧录在认证器内的主密钥“算”出对应的私钥以实现无限对公私钥。具体算法根据不同厂商会有所不同。对于 Yubikey，你可以在<a href=\"https://developers.yubico.com/U2F/Protocol_details/Key_generation.html\">这里</a>了解更多。</p></blockquote>\n<blockquote><p>如果依赖方需要，用户同意后，发送给依赖方的公钥凭证中可以包含用于辨认认证器型号的信息，不过这对隐私的影响微乎其微。</p></blockquote>\n<h2>浏览器接口</h2>\n<p>要使用 WebAuthn，我们必须要依靠浏览器作为媒介和验证器进行交互，而这就需要浏览器对于 WebAuthn 的支持了。绝大多数新版本的现代浏览器都为 WebAuthn 提供了统一的接口，而在这一段中我们会了解如何使用相关的接口。但是在开始之前，我们可以先来看看浏览器的支持程度（2020.9）。</p>\n<div class=\"mdui-table-fluid\"><table class=\"mdui-table\">\n<thead><tr>\n<th>浏览器</th>\n<th>支持情况</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>桌面端 Chrome</td>\n<td>67+</td>\n</tr>\n<tr>\n<td>移动端 Chrome</td>\n<td>67+<sup>[1]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Firefox</td>\n<td>60+</td>\n</tr>\n<tr>\n<td>移动端 Firefox</td>\n<td>不支持<sup>[2]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Edge</td>\n<td>18+</td>\n</tr>\n<tr>\n<td>移动端 Edge</td>\n<td>不支持<sup>[3]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Safari</td>\n<td>13+</td>\n</tr>\n<tr>\n<td>移动端 Safari</td>\n<td>13.3+<sup>[4]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Opera</td>\n<td>54+</td>\n</tr>\n<tr>\n<td>移动端 Opera</td>\n<td>不支持</td>\n</tr>\n</tbody>\n</table></div>\n<p><sup>[1]</sup> 受平台限制，Chrome 在 iOS 平台上不支持 WebAuthn，在 Android 平台上支持大部分 WebAuthn 功能，但仍不支持部分特性（如 <code>userVerification</code>）。<br><sup>[2]</sup> 移动端 Firefox 80 以下的版本支持 WebAuthn 但似乎会忽略 <code>authenticatorAttachment</code> 等一部分参数，同时移动端 Firefox Beta 80 以下的版本支持 WebAuthn 但无法成功调用。自 80 版本起移动端 Firefox 暂时取消了对 WebAuthn 的支持（可能是 Bug）。<br><sup>[3]</sup> 移动端 Edge 似乎支持 WebAuthn 但无法成功调用。<br><sup>[4]</sup> Safari iOS/iPad OS 13 仅支持外部认证器，无法调用 Touch ID 或 Face ID；自 iOS/iPad OS 14 起 Safari 已支持全功能 WebAuthn，可以调用 Touch ID/Face ID</p>\n<p>当然，一众国产浏览器，包括 Samsung Browser 和 Yandex Browser，目前都不支持 WebAuthn。此外，由于 WebAuthn 涉及外部验证器和 TPM 可信平台模块等，用户的操作系统也会对 WebAuthn 的可用性造成影响。以下是一些需要注意的信息：</p>\n<ul>\n<li>Windows 10 1903 以下版本仅 Edge 能提供完整支持，其他浏览器只能使用 USB Key 等外部认证器；1903+ 中所有浏览器都可以通过 Windows Hello 带来完整的 WebAuthn 支持</li>\n<li>Android 需要安装并开启 Google 服务</li>\n<li>iOS/iPad OS 13.3 以下的版本不支持 WebAuthn，iOS/iPad OS 14 以下的版本支持有限（参考上文），iOS/iPad OS 14 开始 Safari 已支持全功能 WebAuthn（功能完整度甚至超过了 Android）</li>\n</ul>\n<p>可以看出，WebAuthn 的发展之路仍然很漫长，但好在桌面端对它的支持已经比较完善了，在一些情况下我们完全有理由使用它。</p>\n<hr>\n<p>来看看浏览器提供了怎么样的接口吧。要使用 WebAuthn，我们可以使用 <code>navigator.credentials.create()</code> 请求认证器生成公钥凭证和 <code>navigator.credentials.get()</code> 请求获取公钥凭证。</p>\n<blockquote><p>你或许已经对 Credential Management API 有所了解了。通过这些 API，我们还可以实现一些有趣的特性，不过这值得另开一篇文章来讲了。</p></blockquote>\n<p>对于一个基础的实现，<code>navigator.credentials.create()</code> 需要传入的参数如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        challenge,\r\n        rp: {\r\n            id,\r\n            name\r\n        },\r\n        user: {\r\n            id,\r\n            name,\r\n            displayName\r\n        },\r\n        pubKeyCredParams: [\r\n            {\r\n                type: \"public-key\",\r\n                alg\r\n            }\r\n        ],\r\n        authenticatorSelection: {\r\n            authenticatorAttachment,\r\n            userVerification\r\n        },\r\n        excludeCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>在 <code>navigator.credentials.create()</code> 方法中，我们必须传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值。这指明了我们需要创建公钥凭证，而非普通的密码凭证。然后，在 <code>publicKey</code> 对象中设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rp: Object</code>：依赖方信息，其中有一项为必须：\n<ul>\n<li>\n<code>rp.id: String</code>：（可选）依赖方 ID，必须为当前域名或为当前域名的子集的域名（不是子域名）。如域名为 <code>test.123.example.com</code>，则依赖方 ID 可以是 <code>test.123.example.com</code>, <code>123.example.com</code> 或 <code>example.com</code>。不指定则默认使用当前域名</li>\n<li>\n<code>rp.name: String</code>：依赖方名称，用于方便用户辨认</li>\n</ul>\n</li>\n<li>\n<code>user: Object</code>：用户信息，其中有三项为必须：\n<ul>\n<li>\n<code>user.id: Uint8Array</code>：转换为 <code>Uint8Array</code> 的字符串。<strong>出于安全考量，这应尽可能不与任何用户信息相关联，如不要包含用户名、用户邮箱等</strong>\n</li>\n<li>\n<code>user.name: String</code>：登录用户名</li>\n<li>\n<code>user.dispalyName: String</code>：用于显示的用户名称，显示与否的具体行为取决于浏览器</li>\n</ul>\n</li>\n<li>\n<code>pubKeyCredParams: Array</code>：一个算法列表，指明依赖方接受哪些签名算法。列表的每一项都是一个对象，拥有两个属性：\n<ul>\n<li>\n<code>pubKeyCredParams[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>pubKeyCredParams[].alg: Number</code>：一个负整数，用于标明算法。具体算法对应的数字可以在 <a href=\"https://www.iana.org/assignments/cose/cose.xhtml#algorithms\">COSE</a> 找到</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection: Object</code>：（可选）用于过滤正确的认证器，这里介绍常用的一个参数：\n<ul>\n<li>\n<code>authenticatorSelection.authenticatorAttachment: String</code>：（可选）指定要求的认证器类型。如果没有满足要求的认证器，认证可能会失败。该参数可以为 <code>null</code>（表示接受所有类型的认证器）或是以下两个值之一：\n<ul>\n<li>\n<code>platform</code>：表示仅接受平台内置的、无法移除的认证器，如手机的指纹识别设备</li>\n<li>\n<code>cross-platform</code>：表示仅接受外部认证器，如 USB Key</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection.userVerification: String</code>：（可选）指定认证器是否需要验证“用户为本人 (User Verified, UV)”，否则只须“用户在场 (User Present, UP)”。具体验证过程取决于认证器（不同认证器的认证方法不同，也有认证器不支持用户验证），而对验证结果的处理情况则取决于依赖方。该参数可以为以下三个值之一：\n<ul>\n<li>\n<code>required</code>：依赖方要求用户验证</li>\n<li>\n<code>preferred</code>：（默认）依赖方希望有用户验证，但也接受用户在场的结果</li>\n<li>\n<code>discouraged</code>：依赖方不关心用户验证。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>excludeCredentials: Array</code>：（可选）用于标识要排除的凭证，可以避免同一个用户多次注册同一个认证器。如果用户试图注册相同的认证器，用户代理会抛出 <code>InvalidStateError</code> 错误。数组中的每一项都是一个公钥凭证对象，包含以下属性：\n<ul>\n<li>\n<code>excludeCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>excludeCredentials[].id: Uint8Array</code>：要排除的凭证 ID</li>\n<li>\n<code>excludeCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，超时后将强制终止 <code>create()</code> 并抛出错误。若不设置，将使用用户代理的默认值；若太大或太小，则使用最接近的用户代理默认值范围中的值。推荐值为 5000-120000</li>\n</ul>\n<blockquote><p>对于 <code>pubKeyCredParams</code>，通常我们只需添加 ES256 (alg: -7) 算法即可兼容大部分外部认证器，此外，再添加 RS256 (alg: -257) 算法即可兼容大部分平台内置认证器（如 Windows Hello）。当然，前端添加算法之后，后端也需要相应的算法支持。</p></blockquote>\n<blockquote><p>对于 <code>userVerification</code>，由于默认值 \"preferred\" 并不能很好地被所有设备支持，因此无论在 <code>create()</code> 中还是 <code>get()</code> 中不指定该参数都会在 Chrome 中触发一条警告。具体请参阅<a href=\"https://chromium.googlesource.com/chromium/src/+/master/content/browser/webauth/uv_preferred.md\">这个页面</a>。</p></blockquote>\n<p>调用 <code>create()</code> 之后，我们就可以拿到一个 <code>Promise</code>，并可以在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>create()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAttestationResponse {\r\n        attestationObject: ArrayBuffer(390) {},\r\n        clientDataJSON: ArrayBuffer(121) {}\r\n    },\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\",\r\n    type: \"public-key\"\r\n}</pre>\n<p>其中有：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：<code>AuthenticatorAttestationResponse</code> 对象，是 <code>PublicKeyCredential</code> 的主要部分，包含以下两个内容：\n<ul>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n<li>\n<code>response.attestationObject: ArrayBuffer</code>：CBOR 编码的认证器数据，包含凭证公钥、凭证 ID、签名（如果有）、签名计数等信息</li>\n</ul>\n</li>\n</ul>\n<p>然后将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串，我们就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证与注册了。具体怎么操作，我们会在下文详细讨论。当然，别忘了 <code>catch()</code> 注册过程中抛出的任何错误。</p>\n<blockquote><p>你可能会认为在所有情况下，注册时认证器都会对挑战进行签名。实际上在大部分情况下（同时也是默认情况），<strong>注册时认证器并不会对挑战进行签名</strong>，<code>attestationObject</code> 并不会包含签名后的挑战。只有依赖方明确要求证明且用户同意（部分浏览器要求）后认证器才会对挑战进行签名（具体实现据情况会有所不同）。对此，<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion#Attestation\">MDN 解释道</a>“大部分情况下，用户注册公钥时我们会使用「初次使用时信任模型」(TOFU) ，此时验证公钥是没有必要的。”要了解更多关于证明的内容，请参阅“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>而对于 <code>navigator.credentials.get()</code>，我们可以传入如下的参数：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.get({\r\n    publicKey: {\r\n        challenge,\r\n        rpId,\r\n        userVerification,\r\n        allowCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>和 <code>create()</code> 一样，对于 <code>get()</code> 我们需要传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值，指明我们需要获取的是公钥凭证而非普通的密码凭证。在 <code>publicKey</code> 对象中我们可以设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rpID: String</code>：（可选）依赖方 ID，需要和注册认证器时的一致。规则和上述的 <code>rp.id</code> 一致，不指定默认使用当前域名</li>\n<li>\n<code>userVerification: String</code>：和上文一样，只是需要注意它这次不在 <code>authenticatorSelection</code> 中了</li>\n<li>\n<code>allowCredentials: Array</code>：（可选）用于标识允许的凭证 ID，使用户代理找到正确的认证器。只有符合这个列表中凭证 ID 的凭证才能被成功返回。数组中的每一项都是对象，包含以下属性：\n<ul>\n<li>\n<code>allowCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>allowCredentials[].id: Uint8Array</code>：允许的凭证 ID</li>\n<li>\n<code>allowCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，和上面的一样，推荐值为 5000-120000</li>\n</ul>\n<p>嗯，要传入的参数少多了。之后，和 <code>create()</code> 一样，调用 <code>get()</code> 之后，我们就可以拿到一个 <code>Promise</code> 并在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>get()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAssertionResponse {\r\n        authenticatorData: ArrayBuffer(37) {},\r\n        signature: ArrayBuffer(256) {},\r\n        userHandle: ArrayBuffer(64) {},\r\n        clientDataJSON: ArrayBuffer(118) {}\r\n    }\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\"\r\n    type: \"public-key\"\r\n}</pre>\n<p>这里的东西就比 <code>create()</code> 时拿到的要多了。看看我们拿到了什么吧：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：对于验证流程，认证会返回 <code>AuthenticatorAssertionResponse</code> 而不是 <code>AuthenticatorAttestationResponse</code> 对象，这个对象包含以下 4 个属性：\n<ul>\n<li>\n<code>response.authenticatorData: ArrayBuffer</code>：认证器信息，包含认证状态、签名计数等</li>\n<li>\n<code>response.signature: ArrayBuffer</code>：被认证器签名的 <code>authenticatorData</code> + <code>clientDataHash</code>（<code>clientDataJSON</code> 的 SHA-256 hash）</li>\n<li>\n<code>response.userHandle: ArrayBuffer</code>：<code>create()</code> 创建凭证时的用户 ID <code>user.id</code>。许多 U2F 设备不支持这一特性，这一项将会是 <code>null</code>\n</li>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n</ul>\n</li>\n</ul>\n<p>同样地，我们将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串后就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证了。至于具体怎么做，别急，马上就来讲一讲。</p>\n<h2>简单实现</h2>\n<p>了这么多，我们终于可以实现一个简单的 WebAuthn 认证页面了。由于在实际操作中 WebAuthn 相关的数据解码和密码计算比较复杂，在服务器端我们可以使用第三方库来帮我们做这些脏活累活，我们只需专注于具体流程就可以了。</p>\n<p>要寻找可用的第三方库，你可以在 <a href=\"https://webauthn.io/\">webauthn.io</a> 上找到适用于各种语言的第三方库——除了 PHP（笑）。不过好在你可以在 GitHub 上找到几个不错的 PHP WebAuthn 库，比如 <a href=\"https://github.com/web-auth/webauthn-framework\">web-auth/webauthn-framework</a>。</p>\n<p>在我们的这个例子中，我们关心的主要是前端逻辑；而后端我们可以使用各类几乎已经做到开箱即用的第三方库，这样我们可以专注于流程而不必关心细节。当然如果你想了解后端的解码细节，可以阅读“<a href=\"https://flyhigher.top/#webauthn-decode\">手动解个码</a>”一节。</p>\n<hr>\n<p>让我们先从注册开始吧。现在，用户点击了注册认证器的按钮，一个请求被发送给服务器（也就是依赖方）。在最简单的情况中，依赖方需要将三个内容发送给浏览器：<strong>挑战、用户信息和用户已注册的凭证 ID 列表（即 <code>excludeCredentials</code>）</strong>。当然依赖方也可以自由选择发送更多信息，只要最终前端能构建合法的参数即可。</p>\n<p>挑战最终会被转换为 <code>Uint8Array</code>，即一组 0-255 的整数。如果使用 PHP，在后端我们可以这样生成 Base64 编码的挑战：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"php\">$challenge = \"\";\r\nfor($i = 0; $i \n<p>对于用户信息，我们需要登录名、显示名称和 ID 三项内容。我们可以从数据库中取出用户信息，也可以新建一份。需要注意的是，<strong>出于安全和隐私的考量，ID 不应该包含用户的任何信息，比如用户邮箱等。</strong>推荐的做法是和挑战一样，生成一个随机字符串/一组随机数，并将其于用户关联起来以供之后使用。</p>\n<p>发送已注册的凭证 ID 列表是为了防止用户重复注册同一个认证器。正确设置该列表后，如果用户试图注册同一个认证器，浏览器会中止流程并抛出 <code>InvalidStateError</code>。</p>\n<p>最后，别忘了将挑战等一些后续可能会用到的信息临时存储起来。Session 就是一个很好的选择。</p>\n<p>将所有信息发送到浏览器之后，我们应该可以构建出新建凭证所需的参数了。由于有多个参数需要以 <code>Uint8Array</code> 的形式传入，我们可以准备一个简单的工具函数帮我们将 Base64 的字符串转为 <code>Uint8Array</code>。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function str2ab(str){\r\n    return Uint8Array.from(window.atob(str), c=&gt;c.charCodeAt(0));\r\n}</pre>\n<p>除了 <code>challenge</code>, <code>rp</code>, <code>user</code> 和 <code>excludeCredentials</code> 几部分需要你根据具体情况设置外，上文提到的其他参数一般可以这么设置：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">publicKey: {\r\n    challenge, // 自行设置\r\n    rp, // 自行设置\r\n    user, // 自行设置\r\n    pubKeyCredParams: [\r\n        {\r\n            type: \"public-key\",\r\n            alg: -7 // ES256\r\n        },\r\n        {\r\n            type: \"public-key\",\r\n            alg: -257 // RS256\r\n        }\r\n    ],\r\n    authenticatorSelection: {\r\n        userVerification: \"discouraged\",\r\n        authenticatorAttachment: null // 除非用户指定，大部分情况下无需指定\r\n    },\r\n    excludeCredentials, // 自行设置\r\n    timeout: 60000\r\n}</pre>\n<p>然后就是传入 <code>navigator.credentials.create()</code>，拿到 <code>PublicKeyCredential</code>。如果一切顺利，接下来我们就需要考虑如何将返回的内容传回依赖方了。由于我们拿到的很多都是 <code>ArrayBuffer</code>，我们需要将其进行编码。再准备一个工具函数吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function array2b64String(a) {\r\n    return window.btoa(String.fromCharCode(...a));\r\n}</pre>\n<p>然后适当处理，我们就可以得到一个方便传输的 JSON 字符串了：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({publicKey}).then((credentialInfo) =&gt; {\r\n    const publicKeyCredential = {\r\n        id: credentialInfo.id,\r\n        type: credentialInfo.type,\r\n        rawId: array2b64String(new Uint8Array(credentialInfo.rawId)),\r\n        response: {\r\n            clientDataJSON: array2b64String(new Uint8Array(credentialInfo.response.clientDataJSON)),\r\n            attestationObject: array2b64String(new Uint8Array(credentialInfo.response.attestationObject))\r\n        }\r\n    };\r\n    return publicKeyCredential;\r\n}).then(JSON.stringify).then((authenticatorResponseJSON) =&gt; {\r\n    // 可以发送了\r\n}).catch((error) =&gt; {\r\n    console.warn(error); // 捕获错误\r\n})</pre>\n<p>依赖方收到数据以后，还需要做三件事：验证挑战、存储凭证 ID 和存储公钥。如果数据解码顺利，且收到的挑战和之前发送的一致，就可以认为注册成功，将凭证 ID 及公钥与用户关联起来。这一步有很多第三方库可以帮我们做，对于基础实现我们就不深入探究了。</p>\n<blockquote><p>由于不同厂商的认证器的实现方式不同，<strong>我们并不能保证凭证 ID 一定是全局唯一的</strong>，也就是说，凭证 ID 有可能碰撞——即使这些凭证实际上是不同的。依赖方在实现凭证 ID 的存储及查找时，需要注意和用户 ID 结合进行存储或查找，或是直接在注册认证器时在服务器端对比阻止相同的凭证 ID。</p></blockquote>\n<hr><p>接下来就可以进行验证了。某天，用户点击了验证按钮准备登录，于是浏览器发送了验证请求到依赖方，同时附上要登录的用户名。接下来依赖方至少需要发送两项内容给浏览器：<strong>挑战和用户已绑定的凭证 ID 列表（即 <code>allowCredentials</code>）。</strong></p>\n<p>之后前端的处理流程就和注册时基本一致了。只是需要注意验证流程中获取到的 <code>PublicKeyCredential</code> 的结构和注册时的稍有不同。</p>\n<p>当浏览器将数据传回后，依赖方需要做的事情就比之前要麻烦一些了。依赖方需要验证挑战，并用之前存储的公钥验证签名和签名计数。同样地，这一步有很多第三方库可以帮我们做。最后，如果验证全部通过，我们就可以允许用户登录了。</p>\n<p>到目前为止，我们已经实现了一个简单的 WebAuthn 验证服务。不过这只是一个最基础的实现，对于很多高安全要求的身份认证这是远远不够的。因此，我们需要摆脱对第三方库的依赖，深入了解 WebAuthn。你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分，不过对于基础的 WebAuthn 实现，我们的旅程就到这里了。</p>\n<h2>拓展阅读</h2>\n<p>如果你的目标只是快速了解如何开发 WebAuthn，那么你阅读到这里就可以了。同时，上一节例子中的部分代码来自于我为了这篇文章开发的 WordPress 插件 WP-WebAuthn，这个插件可以为你的 WordPress 启用 WebAuthn 无密码登录（并非二步验证），你可以查阅插件的 <a href=\"https://github.com/yrccondor/wp-webauthn\">GitHub 存储库</a>了解更多，也可以自己安装试一试。</p>\n<p>如果你正在使用 Chrome 开发，Chrome 87+ 版本添加了一个 WebAuthn 开发者面板，可以帮助你在没有任何实体验证器的情况下开发 WebAuthn 功能。你可以在 Google 的<a href=\"https://developers.google.com/web/tools/chrome-devtools/webauthn\">这篇文章</a>中了解更多。不够，如果你正在使用 Firefox，很遗憾目前我还没有找到对应的开发工具或是浏览器扩展可用。</p>\n<p>如果你希望了解更多关于非对称加密的数学证明，可以查阅阮一峰老师的<a href=\"http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html\">这篇文章</a>。</p>\n<p>如果你希望了解更多关于 Credential Management API 的信息，可以查阅<a href=\"https://medium.com/dev-channel/sign-in-on-the-web-credential-management-api-and-best-practices-d21aed14b6fe\">这篇文章</a>（英文）。</p>\n<p>如果你希望了解更多 WebAuthn 的细节，可以继续往下阅读。<span></span></p>\n<h1>深入了解 WebAuthn</h1>\n<p>如上文所说，如果摆脱对第三方库的依赖，或是要实现更安全的 WebAuthn，我们必须深入了解 WebAuthn。在这一部分中，我们会详细讨论上文没有提到的一些概念和参数，并了解 WebAuthn 中各类数据的结构以实现解码与验证。先来看一看一些进阶的选项吧。</p>\n<h2>进阶选项</h2>\n<p>没错，上文提到的传入 <code>navigator.credentials.create()</code> 和 <code>navigator.credentials.get()</code> 方法的参数其实只是所有参数的一部分。对于 <code>create()</code>，我们还可以配置这些可选内容（上文提及的已省略）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        rp: {\r\n            icon\r\n        },\r\n        user: {\r\n            icon\r\n        },\r\n        attestation,\r\n        authenticatorSelection: {\r\n            requireResidentKey\r\n        },\r\n        extensions\r\n    }\r\n})</pre>\n</pre>\n<ul>\n<li>\n<code>rp.icon: String</code> 和 <code>user.icon</code>：是的，你可以为依赖方和用户设置图标，可以使用 HTTPS URL 或 Base64，一般长度不能超过 128 字节，不过大部分浏览器不会显示图标，或是有非常小的图片体积限制，所以一般没有使用这一属性的必要</li>\n<li>\n<code>attestation: String</code>：表明依赖方是否需要证明。可选三个值：\n<ul>\n<li>\n<code>none</code>：（默认）不需要证明。如上文所述，依赖方不关心证明，因此认证器不会签名。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n<li>\n<code>indirect</code>：依赖方需要证明，但证明方式可由认证器选择。在支持匿名证明的认证器上，认证器会通过匿名证明的方式签名挑战，并向依赖方提供签名方式等信息</li>\n<li>\n<code>direct</code>：依赖方要求直接证明。此时认证器会使用烧录在认证器中的公钥进行签名，同时向依赖方提供签名方式等信息以供依赖方验证认证器是否可信。更多信息可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节</li>\n</ul>\n</li>\n<li>在 <code>authenticatorSelection</code> 中，我们还可以设置两个可选属性：\n<ul>\n<li>\n<code>authenticatorSelection.requireResidentKey: Boolean</code>：是否要求将私钥钥永久存储于认证器中。默认值为 <code>false</code>。对于 iOS/iPad OS 13，必须设置为 <code>false</code>，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n<li>\n<code>extensions: Object</code>：WebAuthn 扩展，可以提供规范之外的配置和响应。由于实际情况中很少会使用这一特性，我们不会在这篇文章中讨论它</li>\n\n<blockquote><p>将 <code>requireResidentKey</code> 设置为 <code>true</code> 可以实现无用户名的登录，即认证器同时替代了用户名和密码。需要注意的是，尽管大部分认证器可以实现无限对公私钥，<strong>但能永久存储的私钥数量是有限的</strong>（对于 Yubikey，这通常是 25），因此只应在真正需要的时候启用此特性。我们会在“<a href=\"https://flyhigher.top/#login-without-username\">无用户名登录</a>”一节中详细讨论原因。</p></blockquote>\n<blockquote><p><strong>如果你没有高安全需求（如银行交易等），请不要向认证器索取证明</strong>，即将 <code>attestation</code> 设置为 \"none\"。对于普通身份认证来说，要求证明不必要的，且会有浏览器提示打扰到用户。</p></blockquote>\n<blockquote><p>Android 暂时无法实施用户验证，进而会导致依赖方验证失败。你可以在<a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=997538\">这里</a>追踪这个特性的实现情况。</p></blockquote>\n<blockquote>\n<p>对于 <code>extensions</code>，由于目前浏览器支持和应用范围有限，我们不会在这篇文章中涉及，不过你可以看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    uvm: true, // 要求认证器返回用户进行验证的方法\r\n    txAuthSimple: \"Please proceed\" // 在认证器上显示与交易有关的简短消息\r\n}</pre>\n<p>你可以在<a href=\"https://www.w3.org/2019/01/webauthn-extensions.html\">这个页面</a>了解更多关于 <code>extensions</code> 的信息。</p>\n</blockquote>\n<p>对于 <code>get()</code>，我们其实只有一个可选内容没讲了，即 <code>extensions</code>。和上文一样，我们不会在这篇文章中讨论它。</p>\n<p>就这些了！<span></span></p>\n<h2>手动解个码</h2>\n<p>是时候看看如何手动解码了。我们将会在这一节中讨论认证器返回的数据的结构以及如何正确地解码它们。</p>\n<p>首先我们来看看如何处理注册过程中认证器发回的数据。假设所有 <code>ArrayBuffer</code> 类型的值都被正确地以 Base64 编码，且后端已经将 JSON 的字符串解析为字典。先来复习一下，我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"ZRBkDBCEtq...9XY8atOcbg\",\r\n    type: \"public-key\",\r\n    rawId: \"ZRBkDBCEtq...9XY8atOcbg==\",\r\n    response: {\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...i5jcmVhdGUifQ==\",\r\n        attestationObject: \"o2NmbXRkbm9uZWd...xNHuAMzz2LxZA==\"\r\n    }\r\n}</pre>\n<p>这里的 <code>id</code> 就是凭证的 ID，如果验证正确，我们最终要将它存储起来并于用户关联。同时可以看到 Base64 编码后的 <code>rawId</code> 其实和 <code>id</code> 是一致的（不过 <code>id</code> 是 Base64URL 编码的）。而 <code>type</code> 则一定是 \"public-key\"。</p>\n<p>不过，我们主要关心的还是 <code>respose</code> 中的两项内容。首先是 <code>clientDataJSON</code>。它的处理比较简单，看名字就知道，它应该是一个 JSON 字符串。</p>\n<blockquote><p>小技巧：如果你看到一个 Base64 编码的字符串以 \"ey\" 开头，那么它大概率是一个 Base64 编码的 JSON。</p></blockquote>\n<p>将<code>clientDataJSON</code> Base64 解码再 JSON 解码之后我们就能得到一个字典：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"NI4i1vsNmP2KHcmyFnBCKRVQPfHgg34SsYZUOPZY2lM\",\r\n    extra_keys_may_be_added_here: \"do not compare clientDataJSON against a template. See https://goo.gl/yabPex\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>结构一目了然。在这里，我们需要验证三项内容：</p>\n<ul>\n<li>\n<code>challenge</code> 和之前发送的一致</li>\n<li>\n<code>origin</code> 为创建凭证的页面的源（协议+主机名+端口号，并非 URL）</li>\n<li>\n<code>type</code> 为 \"webauthn.create\"</li>\n</ul>\n<p>同时可以注意到有一个奇怪的 <code>extra_keys_may_be_added_here</code>。这其实是 Google 在 Chrome 中搞的一点小把戏，有一定概率会出现，提醒我们需要将 JSON 解析后再验证键值以防额外插入的键值影响验证。具体信息你可以访问那个 URL 看一看。</p>\n<p>对于 Firefox，我们会多得到两项 <code>clientExtensions</code> 和 <code>hashAlgorithm</code> ，分别指明了客户端扩展数据和签名算法。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"3-4\">{\r\n    challenge: \"dg6ost6ujhAA0g6WqLe-SOOH-tbhvjW9Sp90aPKlLJI\",\r\n    clientExtensions: {},\r\n    hashAlgorithm: \"SHA-256\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>由于本文不考虑扩展数据，因此我们可以不考虑 <code>clientExtensions</code>。同时由于目前规范中指定的签名算法只有 SHA-256 一种，因此现阶段我们也可以简单地忽略 <code>hashAlgorithm</code>。</p>\n<p><code>clientDataJSON</code> 很简单地就处理完了。接下来我们要来看看 <code>attestationObject</code>。先来看看 <code>attestationObject</code> 的结构图示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\" alt=\"attestationObject 的结构\" width=\"1056\" height=\"532\" class=\"aligncenter size-full wp-image-2245\"></a>\n<p><code>attestationObject</code> 是 CBOR 编码后再被 Base64 编码的，因此我们需要额外对其进行 CBOR 解码。</p>\n<blockquote><p>CBOR (Concise Binary Object Representation, 简明二进制对象表示) 是一种多应用于物联网领域的编码方式，你可以将它看作体积更小、更方便物联网传输的二进制 JSON。大部分语言都可以找到对应的 CBOR 解码库。</p></blockquote>\n<p>我们当然不会手解 CBOR，直接来看看解开之后的样子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"none\",\r\n    attStmt: {},\r\n    authData: [211, 217, 43, 24, 199, ..., 97, 238, 166, 67, 107]\r\n}</pre>\n<p>这些键值的含义如下：</p>\n<ul>\n<li>\n<code>fmt</code>：标明证明的格式。WebAuthn 预定义了几种格式，分别为：\n<ul>\n<li>\n<code>none</code>：没有证明</li>\n<li>\n<code>packed</code>：为 WebAuthn 优化的证明格式</li>\n<li>\n<code>android-safetynet</code>：Android 使用的格式</li>\n<li>\n<code>android-key</code>：又是 Android 使用的格式</li>\n<li>\n<code>fido-u2f</code>：FIDO U2F 认证器使用的格式</li>\n<li>\n<code>tpm</code>：TPM 可信平台模块使用的格式</li>\n</ul>\n</li>\n<li>\n<code>attStmt</code>：证明对象，具体格式根据 <code>fmt</code> 的不同会有所不同</li>\n<li>\n<code>authData</code>：包含公钥、签名计数等来自认证器的数据</li>\n</ul>\n<p>诶，例子里的 <code>attStmt</code> 怎么是空的？还记得之前说的吗？大部分情况下，<strong>如果依赖方不要求证明，那么认证器不会签名挑战</strong>，于是 <code>fmt</code> 会变为 \"none\"，<code>attstmt</code> 会为空。如果不是高安全要求，我们可以只对这一种情况做支持。</p>\n<blockquote><p>注意，部分情况下 Firefox 会在不要求证明（即 <code>attestation</code> 为 \"none\"）时会返回 <code>fmt</code> 为 \"packed\" 的证明。<strong>这是符合规范的。</strong>此时认证器会进行自证明，你可以视情况进行处理。具体可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>对于非 \"none\" 的 <code>fmt</code> 我们稍后再谈，现在我们先来看看 <code>authData</code>。来复习一下 <code>authData</code> 的结构：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\" alt=\"authData 的结构\" width=\"1056\" height=\"384\" class=\"aligncenter size-full wp-image-2240\"></a>\n<p>对于它的解码比较简单粗暴，我们要做的就是根据图示将它切开，然后适当地转换类型。其中各部分的含义如下：</p>\n<ul>\n<li>\n<code>rpIdHash</code>：如其名，SHA-256 的 <code>rpId</code>，长度 32 字节</li>\n<li>\n<code>flags</code>：标识认证状态，长度 1 字节。其中 8 位分别为：\n<ul>\n<li>\n<code>ED</code>：是否有扩展数据</li>\n<li>\n<code>AT</code>：是否包含 <code>attestedCredentialData</code>。通常注册认证器时会包含 <code>attestedCredentialData</code>，而验证时不包含</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>\n<code>UV</code>：用户是否已验证</li>\n<li>保留位</li>\n<li>\n<code>UP</code>：用户是否在场</li>\n</ul>\n</li>\n<li>\n<code>signCount</code>：签名计数，长度 4 字节</li>\n<li>\n<code>attestedCredentialData</code>：包含公钥等凭据数据，变长。其结构如下：\n<ul>\n<li>\n<code>aaguid</code>：认证器的 AAGUID (Authenticator Attestation GUID)，对于同一型号的认证器，它们的 AAGUID 是相同的</li>\n<li>\n<code>credentialIdLength</code>：标识 <code>credentialId</code> 的长度，长度 2 字节</li>\n<li>\n<code>credentialId</code>：凭证 ID，和 <code>rawId</code> 一致，长度由 <code>credentialIdLength</code> 定义</li>\n<li>\n<code>credentialPublicKey</code>：CBOR 编码的 COSE 格式的凭证公钥，变长</li>\n</ul>\n</li>\n<li>\n<code>extensions</code>：扩展数据，变长，本文不讨论</li>\n</ul>\n<blockquote><p>出于隐私考虑，如果不要求证明，认证器会以 0 填充 AAGUID。</p></blockquote>\n<p>如果你的后端在使用 Node.js，这里有个工具函数可以帮你完成这一步（不考虑 <code>extensions</code>）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function parseAuthData(buffer){\r\n    let rpIdHash = buffer.slice(0, 32);\r\n    buffer = buffer.slice(32);\r\n  \r\n    let flagsBuf = buffer.slice(0, 1);\r\n    buffer = buffer.slice(1);\r\n\r\n    let flagsInt = flagsBuf[0];\r\n    let flags = {\r\n        up: !!(flagsInt &amp; 0x01),\r\n        uv: !!(flagsInt &amp; 0x04),\r\n        at: !!(flagsInt &amp; 0x40),\r\n        ed: !!(flagsInt &amp; 0x80),\r\n        flagsInt\r\n    }\r\n\r\n    let counterBuf = buffer.slice(0, 4);\r\n    buffer = buffer.slice(4);\r\n  \r\n    let counter = counterBuf.readUInt32BE(0);\r\n\r\n    let aaguid = undefined;\r\n    let credID = undefined;\r\n    let COSEPublicKey = undefined;\r\n\r\n    if(flags.at) {\r\n        aaguid = buffer.slice(0, 16);\r\n        buffer = buffer.slice(16);\r\n\r\n        let credIDLenBuf = buffer.slice(0, 2);\r\n        buffer = buffer.slice(2);\r\n\r\n        let credIDLen = credIDLenBuf.readUInt16BE(0);\r\n        credID = buffer.slice(0, credIDLen);\r\n\r\n        buffer = buffer.slice(credIDLen);\r\n        COSEPublicKey = buffer;\r\n    }\r\n\r\n    return {rpIdHash, flagsBuf, flags, counter, counterBuf, aaguid, credID, COSEPublicKey}\r\n}</pre>\n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>解开后，依赖方至少需要做四件事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>存储签名计数</li>\n<li>存储公钥</li>\n</ol>\n<blockquote><p>签名计数不一定从 0 开始。</p></blockquote>\n<p>对于公钥，也就是 <code>credentialPublicKey</code>，我们需要多一次 CBOR 解码，然后就可以得到类似这样的公钥：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    kty: \"EC\",\r\n    alg: \"ECDSA_w_SHA256\",\r\n    crv: \"P-256\",\r\n    x: \"ZGQALNfqo0L7HFYQHFHCS/X5db49z0ePnuQEs3w3X8w=\",\r\n    y: \"6qYxhnjYuez/Q8N6vX7nIIGfxFWdZ25NzQfZYuYOalA=\"\r\n}</pre>\n<p>然后可以选择适当的方法将其存储起来，之后的步骤本文就不再赘述了。现在，将目光拉回来，让我们看看包含证明的 <code>attestationObject</code> 是怎么样的。我们来看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"packed\",\r\n    attStmt: {\r\n        alg: -7,\r\n        sig: [48, 70, 2, 33, 0, ..., 132, 78, 46, 100, 21],\r\n        x5c: [\r\n            [48, 130, 2, 189, 48, 130, 1, 165, 160, 3, ..., 177, 48, 125, 191, 145, 24, 225, 169, 41, 248]\r\n        ]\r\n    },\r\n    authData: [211, 217, 43, 24, 199, ..., 158, 54, 87, 126, 54]\r\n}</pre>\n<p>这里有一个使用 \"packed\" 格式的证明。此时，<code>attStmt</code> 中包含三个值：</p>\n<ul>\n<li>\n<code>alg</code>：签名算法</li>\n<li>\n<code>sig</code>：签名值</li>\n<li>\n<code>x5c</code>：X.509 编码的证书链</li>\n</ul>\n<p>我们不会在这一节中详述对签名的验证。要了解更多信息，你可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。现在，让我们来看看如何处理验证过程中认证器发回的数据。我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"hmqdxPLit9...BWeVxZqdvU\",\r\n    type: \"public-key\",\r\n    rawId: \"hmqdxPLit9V...BWeVxZqdvU=\",\r\n    response: {\r\n        authenticatorData: \"09krGMcWTf...UFAAAABA==\",\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...XRobi5nZXQifQ==\",\r\n        signature: \"UsXZV3pvT3np8btj6V0g...WBkaqyt88DrD40qh+A==\",\r\n        userHandle: \"MmYxNWYzZjQyZjM...Tg2ZDY4NzhlNw==\"\r\n    }\r\n}</pre>\n<p><code>id</code>, <code>rawId</code> 和 <code>type</code> 和之前一样，这里就不再赘述了。让我们来看看 <code>response</code>。首先是 <code>clientDataJSON</code>，和之前的解法一样，要验证的内容也一样，只是 <code>type</code> 从 \"webauthn.create\" 变成了 \"webauthn.get\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"bnkd2CmrEuvKnAFXs2QlC3SKlg4XFvGtP4HJL1yEWyU\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.get\"\r\n}</pre>\n<p>然后是 <code>userHandle</code>。前面讲过，这是认证器在创建凭证时的用户 ID。如果用户在使用 U2F 认证器，很可能这一项为空，所以大部分情况下我们不关心这一项。</p>\n<p>接着来看 <code>authenticatorData</code>。这其实就是之前的 <code>attestedCredentialData</code>，只是这次不包含公钥。以相同的方式切开数据，我们应该可以得到 <code>rpIdHash</code>, <code>flags</code>和 <code>signCount</code> 三项。此时，依赖方至少需要做这三样事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>验证签名计数大于之前存储的计数，并更新存储的计数</li>\n</ol>\n<blockquote><p>如果签名计数比之前的小，那么这个认证器很可能是伪造的，应该中止验证并返回验证失败。同时，签名计数不一定每次按 1 递增，通常只要计数比此前的大就认为计数检查通过。</p></blockquote>\n<p>最后，我们来看 <code>signature</code>，也就是签名。不过这个签名不是简单的对挑战的签名，具体算法如图所示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\" alt=\"签名过程\" width=\"1034\" height=\"587\" class=\"aligncenter size-full wp-image-2231\"></a>\n<p>计算签名时，认证器会将 <code>authenticatorData</code> 与 <code>clientDataHash</code>（也就是 <code>clientDataJSON</code> 的 SHA-256 Hash）拼接起来，并使用对应的私钥签名。依赖方应该使用对应的公钥将其解密，并验证内容是否是 <code>authenticatorData</code> 与 <code>clientDataHash</code> 的拼接。这部分的计算不在本文的讨论范围内。</p>\n<p>最后，如果全部验证通过，返回验证成功。<span></span></p>\n<h2>验证认证器</h2>\n<p>WebAuthn 已经很安全了，但有的时候我们还要让它更安全一点。比如，如果用户在使用伪造的或是自制的认证器，认证器的安全性就得不到保证。此时，依赖方就需要验证认证器是否是可信的认证器。</p>\n<blockquote><p>这一过程仅发生在注册认证器时。此时，如果认证器验证通过，就可以存储公钥，后续步骤和之前描述的一致。</p></blockquote>\n<blockquote><p>再次说明，如果不是对安全性有极高的要求，向认证器索取证明以验证认证器是否可信是没有必要的。此外，验证认证器需要依赖方自行维护可信认证器列表，大大增加了维护的复杂性。</p></blockquote>\n<p>在调用 <code>navigator.credentials.create()</code> 时，我们可以将 <code>attestation</code> 设置为非 \"none\" 来向认证器索取证明。除无证明外，WebAuthn 定义了四种证明方式：</p>\n<ul>\n<li>Basic Attestation (Basic) ：基础的证明方式，认证器会使用认证器私钥签名</li>\n<li>Self Attestation (Self) ：自证明，认证器会使用凭证私钥签名</li>\n<li>Attestation CA (AttCA) ：认证器会使用多个证明私钥之一签名</li>\n<li>Elliptic Curve based Direct Anonymous Attestation (ECDAA) ：通过 <a href=\"https://en.wikipedia.org/wiki/Direct_Anonymous_Attestation\">DAA</a> 实现的匿名证明</li>\n</ul>\n<blockquote><p>和验证过程一样，这里签名的目标是 <code>authenticatorData</code> 和 <code>clientDataHash</code> 的连接。</p></blockquote>\n<p>还记得 <code>create()</code> 时 <code>attestation</code> 可选的三个值吗？这个值会决定认证器最终使用哪种方式进行证明。复习一下：</p>\n<ul>\n<li>\n<code>none</code>：大部分情况下认证器会选择不进行证明，部分认证器会进行自证明。此时 AAGUID 会被 0 填充</li>\n<li>\n<code>indirect</code>：认证器会试图通过替换 AAGUID 和选择合适的证明方式来进行匿名证明，具体方式由认证器选择</li>\n<li>\n<code>direct</code>：认证器会提供最直接的证明信息</li>\n</ul>\n<p>注意，大部分情况下，当认证器需要向依赖方证明自己可信时需要提供认证器公钥，<strong>这会触发浏览器提示，只有用户同意后认证器才会进行证明，否则认证器将不提供证明。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\" alt=\"浏览器提示\" width=\"446\" height=\"283\" class=\"aligncenter size-full wp-image-2217\"></a>\n<blockquote><p>为什么浏览器会说“安全密钥的品牌和型号”？事实上，为了避免用户通过认证器证书被跨依赖方追踪，FIDO 要求使用相同认证器证书的认证器的数量不能少于 100,000。于是大部分认证器厂商会选择<strong>让同一型号的认证器共用同一份证书。</strong>因此，浏览器的会询问用户是否同意“查看安全密钥的品牌和型号”。</p></blockquote>\n<blockquote><p>Android Safety Net 不会向用户询问是否同意，而是会静默进行证明。</p></blockquote>\n<p>当证明不为空时，依赖方收到数据后根据 <code>attestationObject.fmt</code> 的不同，需要选择不同的验证方式来验证认证器的可信情况。出于篇幅原因，这里我们不会讨论每一种 <code>fmt</code> 的验证方式，更多信息你可以查阅 <a href=\"https://www.w3.org/TR/webauthn/#defined-attestation-formats\">W3C 文档</a>。</p>\n<p>当 <code>fmt</code> 为 <code>packed</code> 时，<code>attestationObject.attStmt</code> 可能会有三种格式：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// 自证明\r\n{\r\n    alg, // 算法\r\n    sig // 签名\r\n}\r\n// 基础或证明 CA 证明\r\n{\r\n    alg,\r\n    sig,\r\n    x5c // X.509 证书链\r\n}\r\n// 椭圆曲线证明\r\n{\r\n    alg,\r\n    sig,\r\n    ecdaaKeyId // ECDAA-Issuer 公钥标识符\r\n}</pre>\n<p>此时，依赖方需要检查证书符合预期格式并检查证书是否在可信链上。首先，如果证明中既没有 <code>ecdaaKeyId</code> 也没有 <code>x5c</code>，就说明这个证明使用的是自证明，只需使用认证器提供的公钥验证即可；如果有 <code>x5c</code>，那么就需要验证 <code>x5c</code> 中的证书是否在可信链上。将 <code>x5c</code> 中的每个证书以 Base64 编码，按 64 个字符切开，并在头尾加上 <code>-----BEGIN CERTIFICATE-----</code> 和 <code>-----END CERTIFICATE-----</code>就能得到一个证书字符串了。之后，依赖方需要验证证书是否可信。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function base64ToPem(b64cert){\r\n    let pemcert = '';\r\n    for(let i = 0; i \n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>至于 <code>ecdaaKeyId</code>，由于目前应用较少，处理方法可能需要你另寻资料了。检查证书的具体步骤已经超出了本文的范围，具体可以查阅<a href=\"https://medium.com/@herrjemand/verifying-fido2-packed-attestation-a067a9b2facd\">这篇文章</a>（英文）。</p>\n<blockquote><p>你可以在 <a href=\"https://fidoalliance.org/metadata/\">FIDO Metadata Service</a> 找到各大厂商认证器的可信证书链。</p></blockquote>\n<p>当在 Android 上调起 WebAuthn 时，大部分情况下 <code>fmt</code> 将会为 <code>safety-net</code>。此时 <code>attestationObject.attStmt</code> 的结构会是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    ver: \"200616037\",\r\n    response: {\r\n        type: \"Buffer\",\r\n        data: [101, 121, 74, 104, 98, ..., 115, 104, 104, 82, 65]\r\n    }\r\n}</pre>\n<p>此时，<code>clientDataJSON</code> 中还会出现 <code>androidPackageName</code> 键，值是调起 WebAuthn 验证的应用的包名，如 Chrome 就是 \"com.android.chrome\"。</p>\n<p>在这个证明中，<code>data</code> 其实是一个 JWT 字符串，我们可以将它编码为字符串并将其按照 JWT 进行解码（别忘了验证 JWT 签名）。最终我们会得到一个类似这样的 Payload：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    nonce: \"0QAurN4F9wik6GEkblDJhGuf4kuaqZn5zaaxlvD1hlA=\",\r\n    timestampMs: 1584950686460,\r\n    apkPackageName: \"com.google.android.gms\",\r\n    apkDigestSha256: \"2BQHno+bmWWwdLUYylS8HLt5ESJzci3nt2uui71ojyE=\",\r\n    ctsProfileMatch: true,\r\n    apkCertificateDigestSha256: [\r\n        \"8P1sW0EPicslw7UzRsiXL64w+O50Ed+RBICtay2g24M=\"\r\n    ],\r\n    basicIntegrity: true,\r\n    evaluationType: \"BASIC\"\r\n}</pre>\n<p>其中包含了有关设备状态的一些信息。比如说，如果 <code>ctsProfileMatch</code> 为 <code>false</code>，那么该设备很有可能被 root 了。对于高安全要求的场景，我们可以视情况进行验证。</p>\n<p>同时我们可以在 JWT Header 中验证证明的有效性。我们应该能取得这样的 Header：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    alg: \"RS256\",\r\n    x5c: [\r\n        \"MIIFkzCCBHugAwIBAgIR...uvlyjOwAzXuMu7M+PWRc\",\r\n        \"MIIESjCCAzKgAwIBAgIN...UK4v4ZUN80atnZz1yg==\"\r\n    ]\r\n}</pre>\n<p>这里的结构就和上方的 <code>x5c</code> 验证类似了。具体步骤可以参考<a href=\"https://medium.com/@herrjemand/verifying-fido2-safetynet-attestation-bd261ce1978d\">这篇文章</a>（英文）。</p>\n<p>其他所有格式的验证方式也都可以在<a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">这篇文章</a>（英文）中找到。<span></span></p>\n<h2>无用户名登录</h2>\n<p>认证器已经代替了密码，可是这还不够！在进行第一因素认证（即使用 WebAuthn 登录）时，我们还是需要输入用户名，然后才能进行身份认证。懒惰是第一生产力，我们能不能不输入用户名就进行身份认证呢？实际上，大部分认证器都允许我们无用户名登录。<strong>而这一特性的核心就是 Resident Key 客户端密钥驻留。</strong></p>\n<p>你可以思考一下，为什么普通的 WebAuthn 为什么不能实现无用户名登录？事实上，大部分认证器为了实现无限对公私钥，会将私钥通过 Key Warp 等技术加密后包含在凭证 ID 中发送给依赖方，这样认证器本身就不用存储任何信息。不过，这就导致需要身份认证时，依赖方必须通过用户名找到对应的凭证 ID，将其发送给认证器以供其算出私钥。</p>\n<blockquote><p>Yubikey 实现了一个基于 HMAC 的算法，认证器可以在私钥不离开认证器的前提下（常规的 Key Warp 算法中实际上私钥离开了认证器）通过一些输入和凭证 ID 重新计算私钥，你可以阅读<a href=\"https://www.yubico.com/blog/yubicos-u2f-key-wrapping/\">这篇文章</a>了解更多。</p></blockquote>\n<blockquote><p>客户端通过凭证 ID 查找对应认证器的算法根据系统的不同是不同的。通常凭证 ID 中会包含认证器信息，因此系统可以通过凭证 ID 找到对应的认证器。</p></blockquote>\n<p>要避免输入用户名，我们可以要求认证器将私钥在自己的内存中也存储一份。这样，依赖方无需提供凭证 ID，认证器就可以通过依赖方 ID 找到所需的私钥并签名公钥。以下是具体流程：</p>\n<p>注册时：</p>\n<ol>\n<li>依赖方请求新建凭证，同时要求启用客户端密钥</li>\n<li>认证器生成一对公私钥，并将私钥存储在永久内存中且与依赖方 ID 及用户 ID 绑定，随后将公钥发送给依赖方以供存储</li>\n<li>依赖方将用户 ID 即公钥与用户绑定</li>\n</ol><p>验证时：</p>\n<ol>\n<li>依赖方请求验证，但不必提供除依赖方 ID 以外的更多信息</li>\n<li>用户选择认证器</li>\n<li>认证器根据依赖方 ID 找到对应私钥</li>\n<li>如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录</li>\n<li>确定私钥后，认证器签名挑战并将其返回，同时返回用户 ID</li>\n<li>依赖方通过用户 ID 找到对应用户并用对应公钥检查签名，正确则允许对应用户登录</li>\n</ol><blockquote><p>可以看到，这个特性同时要求认证器存储用户 ID，即上面提到过的 <code>userHandle</code>。依赖方需要根据此信息找到对应用户，因此不支持 <code>userHandle</code> 的 U2F 认证器无法进行无用户名登录。</p></blockquote>\n<blockquote><p>如之前所说，<strong>认证器能永久存储的私钥数量是有限的</strong>，因此只应在真正需要无用户名登录的时候启用此特性。</p></blockquote>\n<blockquote><p>目前暂时没有办法检测认证器是否支持客户端密钥驻留，因此在无用户名验证失败时应 fallback 至常规的 WebAuthn 验证，即向用户询问用户名。</p></blockquote>\n<p>现在让我们来看看如何实现这一特性吧。首先，调用 <code>navigator.credentials.create()</code> 时我们需要注意两个参数：<code>requireResidentKey</code> 必须为 <code>true</code>，<code>userVerification</code> 必须为 \"required\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"5-6\">navigator.credentials.create({\r\n    publicKey: {\r\n        ...\r\n        authenticatorSelection: {\r\n            requireResidentKey: true,\r\n            userVerification: \"required\"\r\n            ...\r\n        },\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Windows Hello <strong>似乎</strong>会存储所有已注册的凭据，因此无论是否指定 <code>requireResidentKey</code>，你都可以通过 Windows Hello 进行无用户名登录。</p></blockquote>\n<p>随后，浏览器会询问用户是否允许认证器存储私钥。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\" alt=\"浏览器提示\" width=\"445\" height=\"285\" class=\"aligncenter size-full wp-image-2208\"></a>\n<p>如果用户同意，认证器会存储私钥，并和普通的 WebAuthn 一样返回信息。不过，依赖方收到数据之后，只需将公钥、用户 ID 与用户关联起来，而不必再将凭证 ID 与用户关联起来。至此注册完成。</p>\n<p>之后，在用户请求登录时，无需再向依赖方提供用户名。同时在传入 <code>navigator.credentials.get()</code> 的参数中也有两个需要注意：<code>userVerification</code> 必须为 \"required\"，同时 <code>allowCredentials</code> 必须为空。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"4-5\">navigator.credentials.get({\r\n    publicKey: {\r\n        ...\r\n        userVerification: \"required\",\r\n        allowCredentials: [],\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Android 暂不支持无用户名验证，空的 <code>allowCredentials</code> 会导致浏览器返回 <code>NotSupportedError</code> 错误。</p></blockquote>\n<p>此时，认证器会根据依赖方 ID 找到对应的私钥。如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录。用户选择后，认证器就会使用对应的私钥签名挑战并将其返回。此时，<code>userHandle</code> 一定不为空。</p>\n<p>依赖方收到数据后，需要将 <code>userHandle</code> 作为用户 ID 找到对应的用户，并使用对应的公钥验证签名。如果验证成功，则认为对应的用户身份认证成功，依赖方可以允许其登录。至此验证结束。</p>\n<blockquote><p>有的时候你可能会需要清除认证器中的密钥。绝大多数认证器都提供了对应的软件以供清除存储的密钥，但大部分情况下这会重置整个认证器，这意味着相关认证器此前的所有凭证均会失效。因此建议不要将日常使用的认证器作为开发测试用的认证器。</p></blockquote>\n<h2>从 U2F 认证迁移</h2>\n<p>如果你的服务此前提供了 U2F 第二因素认证，你可能会希望在将依赖方从 U2F 升级到 WebAuthn 时用户此前注册的 U2F 认证器仍然可用而无需重新注册。由于 WebAuthn 向后兼容 U2F 设备，用户是可以继续使用原有的 U2F 认证器的。不过，由于 WebAuthn 的依赖方 ID 与 U2F 的 <code>appid</code> 并不一定相同，你需要将原有的 U2F <code>appid</code> 随 WebAuthn 流程一起传递给认证器，认证器才能使用正确的私钥进行响应。</p>\n<p>要实现这一点，我们只需要在注册及认证仪式中使用 WebAuthn 的 <code>appid</code> 扩展。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    appid: \"https://example.com\" //U2F appid\r\n}</pre>\n<p>此时认证器便可以得到正确的私钥，之后的流程与正常情况一致；依赖方除了正常的 WebAuthn 流程外，不需要再做任何其它操作。</p>\n<h2>拓展阅读</h2>\n<p>我们的 WebAuthn 之旅到这里就真的结束了。不过，你仍然可以自行探究，了解更多。<strong>本文只是一个粗浅的使用指南</strong>，而被称为“Web 身份认证的未来”的 WebAuthn 的深层还要很多细节值得我们挖掘学习，不过本文不会再继续讨论了。</p>\n<p>如果你想了解更多关于 WebAuthn 的信息，最好的方法是直接阅读 <a href=\"https://www.w3.org/TR/webauthn\">W3C 规范</a>。此外，Yubico 也提供了不错的 <a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn 文档</a>。</p>\n<p>要了解更多认证器存储凭证的信息，你可以阅读<a href=\"https://duo.com/labs/tech-notes/how-security-keys-store-credentials\">这篇文章</a>（英文）。</p>\n<p>如果你想了解更多 Android Safety Net 是怎样运作的，可以观看<a href=\"https://youtu.be/8lv_9mydrjg\">这个视频</a>，并通过 <a href=\"https://developer.android.com/training/safetynet/attestation\">Google 的文档</a>了解 Android Safety Net 的更多信息。</p>\n<p>如果你想方便地调试 WebAuthn，<a href=\"https://webauthn.me/\">webauthn.me</a> 提供了一个非常直观方便的<a href=\"https://webauthn.me/debugger\">调试器</a>。</p>\n<h1>参考资料</h1>\n<p><a href=\"https://www.w3.org/TR/webauthn\">WebAuthn Level 1 规范 - W3C</a><br><a href=\"https://github.com/w3c/webauthn\">WebAuthn Level 2 草案 - W3C</a><br><a href=\"https://blog.techbridge.cc/2019/08/17/webauthn-intro/\">一起来了解Web Authentication - TechBridge 技术共笔部落格</a><br><a href=\"https://medium.com/@herrjemand/introduction-to-webauthn-api-5fd1fb46c285\">Introduction to WebAuthn API - Medium</a><br><a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">WebAuthn/FIDO2: Verifying responses - Medium</a><br><a href=\"https://obeta.me/posts/2019-03-01/WebAuthn%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8\">WebAuthn介绍与使用 - obeta</a><br><a href=\"https://webauthn.io/\">webauthn.io</a><br><a href=\"https://webauthn.guide/\">webauthn.guide</a><br><a href=\"https://webauthn.me/\">webauthn.me</a><br><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion\">Attestation and Assertion - MDN</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Authentication_API\">Web Authentication API - MDN</a>（顺便翻译了一半）<br><a href=\"https://fidoalliance.org/fido-technotes-the-truth-about-attestation/\">FIDO TechNotes: The Truth about Attestation - FIDO Alliance</a><br><a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn Developer Guide - Yubico</a><br><a href=\"https://en.wikipedia.org/wiki/WebAuthn\">WebAuthn - Wikipedia</a><br><a href=\"https://techcommunity.microsoft.com/t5/identity-standards-blog/all-about-fido2-ctap2-and-webauthn/ba-p/288910\">All about FIDO2, CTAP2 and WebAuthn - Microsoft Tech Community</a><br><a href=\"https://webauthn-doc.spomky-labs.com/\">Webauthn Framework</a><br><a href=\"https://zhuanlan.zhihu.com/p/25279015\">如何开发支持 FIDO U2F 登录的网站 - 知乎专栏</a><br></p></pre>\n","link":"https://flyhigher.top/develop/2160.html"},{"title":"NLP 找门：用朴素贝叶斯进行文本分类","date":"2020-01-29 11:39:58","description":"\n<blockquote>\n<p>有一天，神收到了一封垃圾邮件，于是世界上就有了朴素贝叶斯算法。</p>\n<footer>——我瞎编的</footer>\n</blockquote>\n<p>为什么这篇文章的标题是 NLP 找门呢？因为如果你看完了这篇文章，你就可以<strong>准备入门</strong>自然语言处理 (<strong>N</strong>atural <strong>L</strong>anguage <strong>P</strong>rocessing) 了。我会把这篇文章当作一篇彻彻底底的 NLP 入门文章来写，尽量避免“专业高端”词汇和“全是奇怪符号”的式子，这样<strong>只要你有高中数学基础</strong>，就能毫无压力地看完这篇文章，学会使用朴素贝叶斯分类算法分类文本。</p>\n<p>让我们开始吧。</p>\n<h1>所以，啥是朴素贝叶斯？</h1>\n<p>简单来说，朴素贝叶斯 (Naïve Bayes) <strong>是一个简单但高效的分类算法</strong>，在进行不复杂的文本分类时高效且拥有不低的准确度，判断垃圾邮件就是用朴素贝叶斯进行文本分类的一个经典例子。当然朴素贝叶斯分类不仅能用在 NLP 中，在许多分类问题中朴素贝叶斯也有非常好的效果，但我们今天只关注它在 NLP 中的应用。</p>\n<p>要了解朴素贝叶斯，我们要先来了解一下贝叶斯定理。</p>\n<blockquote>\n<p>每增加一个数学公式都会使读者减半。</p>\n<footer>——霍金</footer>\n</blockquote>\n<p>那么，就让我们先来看看贝叶斯定理的公式吧（笑</p>\n<p>$$P(A|B) = \\frac{P(AB)}{P(B)} = \\frac{P(B|A)P(A)}{P(B)}$$</p>\n<p>其实还是很简单的，运用高中的条件概率知识就能理解。本质上，贝叶斯定理给出了一种方法，使得我们可以在 \\(P(A|B)\\) 和 \\(P(B|A)\\) 之间互相转换，因为通常情况下它们是不一样的。</p>\n<p>要更好地理解，请考虑这样一个例子：</p>\n<blockquote><p>假设有一个学校图书馆，图书管理员正为找不到某本书而发愁。已知老师有 70% 的意愿借走这本书，而是学生的意愿是 30%，这个学校的师生比例是 1:10，那么借走这本书的人是老师的概率有多大？</p></blockquote>\n<p>设学校总人数为 \\(T\\)，我们可以很容易地写出这样的一个式子：</p>\n<p>$$\\begin{align} P &amp; = \\frac{T\\cdot\\frac{1}{11}\\cdot 70\\%}{T\\cdot\\frac{1}{11}\\cdot 70\\%+T\\cdot\\frac{10}{11}\\cdot 30\\%} \\\\ &amp; = \\frac{70\\%}{70\\%+10\\times30\\%} \\\\ &amp; = \\frac{7}{37} \\end{align}$$</p>\n<p>这就是贝叶斯定理了！等等，你可能会挠挠头，这哪里是贝叶斯了？别急，如果我们把最上面的式子换个字母的话...</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>在这里，\\(H\\) 指 Hypothesis，即假设，而 \\(E\\) 指 Evidence，即证据。这样，这个式子就很好理解了，在我们上面的例子里，借走书是证据，那么 \\(P(E)\\) 就是某个人选择借走这本书的概率；这个人是老师是假设，那么这个人是老师的概率是 \\(P(H)\\)。<strong>注意这里的概率指在学校中抽一个人是老师的概率，并不是“在借走书的前提下”这个人是老师的概率</strong>，而“在借走书的前提下”这个人是老师的概率应该是 \\(P(H|E)\\)，也正是我们要求的概率。同样地，而“这个人是老师”的前提下借走书的概率就是 \\(P(E|H)\\) 了。</p>\n<p>那么再来看看上面我们凭小学知识就列出的计算式，如果把里面的具体数据换成概率来表示的话，这个式子就会变成...</p>\n<p>$$P(H|E) = \\frac{T\\cdot P(E|H)P(H)}{T\\cdot P(E|H)P(H) + T\\cdot P(E|\\neg H)P(\\neg H)}$$</p>\n<p>好吧，这里解释一下，\\(\\neg\\) 符号表示“非”，所以 \\(P(E|\\neg H)\\) 表示在“这个人不是老师”的前提下借走书的概率。而 \\(T\\cdot P(E|H)P(H)\\) + \\(T\\cdot P(E|\\neg H)P(\\neg H)\\)，即“可能借走书的老师的数量 + 可能借走书的学生的数量”，就是“可能借走书的人的数量”了，也就是 \\(T\\cdot P(E)\\)。上下消去 \\(T\\)，我们就能得到上面的式子了。</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>这就是贝叶斯了定理。如果你还是不太清楚，可以去看看 3Blue1Brown 的<a href=\"https://www.bilibili.com/video/av84799361\">这个视频</a>，图形化的讲解会清晰很多。</p>\n<p>这里我要提一下这个式子里各部分的专有名称了（“专业高端”词汇警告），你可以不记住，直接看后面。</p>\n<ul>\n<li>\\(P(H|E)\\) 叫做 \\(H\\) 的<strong>后验概率</strong>，反之亦然</li>\n<li>\\(P(H)\\) 叫做 \\(H\\) 的<strong>先验概率</strong>，反之亦然</li>\n<li>特别地，我们把 \\(P(E|H)\\) 称作<strong>“似然值”</strong>，即 likelihood</li>\n</ul>\n<p>那什么是朴素贝叶斯呢？按上面所说的，朴素贝叶斯是一种分类算法。简单来说，朴素贝叶斯将一个对象的各个特征考虑为互相独立，然后根据这些特征的概率的乘积来判断对象所属的分类。基本原理如下：</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)} \\propto P(E|H)P(H) = P(H)\\prod_{i}P(W_i|H)$$</p>\n<p>在这里，\\(W_i\\) 指某一对象的第 \\(i\\) 个特征，对于文本分类来说，这就是一段文本中的某个单词。</p>\n<p>朴素贝叶斯之所以“朴素”，是因为它要求<strong>各个特征间是独立的</strong>，在文本分类中也就是各个单词之间互不干扰。虽然思路简单的代价是适用范围变窄，不过由于这样的简化在很多情况下已经足够了，因此实际上朴素贝叶斯的应用范围非常广。<del>你看朴素贝叶斯 <strong>N</strong>aïve <strong>B</strong>ayes 的缩写都是 NB 了，能不厉害吗（逃</del></p>\n<h1>那么，咋分类啊</h1>\n<p>看来你这下完全听懂了呢（笑），是时候看看如何在 NLP 中应用朴素贝叶斯了。和上面一样，我们用一个具体的例子来说明。我们的目标是让电脑学会分类美国共和党和民主党的演讲稿，由于两个党派的演讲风格不同，所以这样的分类在理论上是可行的。</p>\n<div class=\"wp-block-file\">\n<a href=\"https://acdn.flyhigher.top/nlp/material.zip\" download>material.zip</a><a href=\"https://acdn.flyhigher.top/nlp/material.zip\" class=\"wp-block-file__button\" download>下载</a>\n</div>\n<p>上面我们要用到的数据集，你可以下载下来一起动手玩一玩。先说一下数据集的数据结构吧，压缩包里有两个文件，<code>train.txt</code> 将会被当作训练数据集，而 <code>test.txt</code> 则会作为训练结束后的验证数据集。两个文本文件里数据的结构是类似的，就像这样：</p>\n<pre class=\"EnlighterJSRAW\">BLUE WELL I AM SO HONORED AND PERSONALLY UNKNOWNWORD TO BE HERE...\r\nRED THANK YOU . THIS IS QUITE AN INSTITUTION . IT'S GOOD TO BE...</pre>\n<p>每行都是一篇演讲稿，每行的第一个单词指明了这篇演讲稿所属的党派，<code>RED</code> 指共和党，而 <code>BLUE</code> 指民主党。所有单词和符号都已经被转为大写并由空格分隔方便处理。<code>train.txt</code> 有共和党演讲稿和民主党演讲稿各 23 篇，<code>test.txt</code> 有 6 篇共和党演讲稿，12 篇民主党演讲稿。</p>\n<p>明白了？那我们就开始吧。</p>\n<h2>捋捋思路</h2>\n<p>首先，我们需要考虑如何在文本分类中应用朴素贝叶斯。很简单，按朴素贝叶斯的思路，<strong>计算每个词在某一分类下的出现概率，然后将某篇文章的所有词的概率相乘，再乘以该分类的先验概率，就可以得到某篇文章在某一分类下的概率。</strong></p>\n<p>$$P(Class|Article) = P(Class)\\prod_{i}P(Word_i|Class)$$</p>\n<p>各个分类概率都计算完成后，概率最高的那个分类就是这篇文章可能所属的分类。这个思路的核心就是用词决定了文本风格，文本的不同类别用词会有差异，只要能量化这些差异就可以分类文本。在我们的例子中，我们可以从 <code>train.txt</code> 中统计各个词汇的出现情况，然后用 <code>test.txt</code> 中的数据按上面的算法验证我们算法的准确性。</p>\n<p>这个思路很简单也很清晰，但还有一些问题需要解决。<strong>第一，有的时候，我们的测试数据集中可能会出现一个在训练数据集中没有出现过的词语。这个时候，朴素贝叶斯的计算结果会是 0。</strong>如果我们把 0 乘进式子中，那就别想得到正常的结果了。所以，我们还需要对计算某一单词在某一分类中的式子稍加改进。使用拉普拉斯平滑，就可以避免出现概率为 0 的情况。别被名字吓到，拉普拉斯平滑是一种非常简单的平滑方法：在分子上 +1，在分母上加整个取值范围，这样就可以给整个分式加上非常微小的偏移，避免出现 0。</p>\n<p>$$\\begin{align} P(Word_i|Class) &amp; = \\frac{Word_iCountInClass}{AllWordCountInClass} \\\\ &amp; \\approx \\frac{Word_iCountInClass + 1}{AllWordCountInClass + UniqueWordCount} \\end{align}$$</p>\n<p><strong>第二，对于长文本，大部分词语在某一分类中的出现概率是远小于 1 的，加上长文本词汇量大，往往概率相乘的结果会非常小。</strong>受限于计算机处理浮点数的原理，精确处理这么小的数字是很麻烦的。幸好，运用一些简单的数学知识就可以将其转化为更精确的表达，<strong>那就是取对数。</strong></p>\n<p>首先，将概率计算结果取对数并不影响我们的计算结果。因为取对数是一个单调递增的操作，而我们计算概率只是为了排序选择概率最高的分类，因此取对数是不影响我们排序的。而把多项式取对数，等于把多项式的每一项取对数后相加。所以我们有：</p>\n<p>$$\\lg{\\Big(P(Class)\\prod_{i}P(Word_i|Class)\\Big)} = \\lg{P(Class)} + \\sum_i\\lg{P(Word_i|Class)}$$</p>\n<p>大部分情况下，在每一次取对数的时候，要取对数的数字的大小，即 \\(P(Word_i|Class)\\) 尚还在计算机能处理的范围内，<strong>因此我们可以放心地使用取对数的方法</strong>，避免计算机精度不够影响结果。</p>\n<p><strong>第三就是在某些情况下，可能会有部分词语干扰计算结果</strong>，如 and, is 这类的被大量使用的中性词。如果希望得到更好的结果，我们可以维护一个停用词表，在计算时排除停用词即可。或者，我们可以在计算完每个单词的出现数量后，排除数量最多的前 \\(N\\) 个单词，避免这些单词过多地影响计算。</p>\n<h2>写点代码</h2>\n<p>现在我们终于可以开始实战，写点代码了。我会用简单的 Python 来表达思路。好了，理一理思绪，第一步我们要做的，是统计训练数据集中的用词情况。具体来说，根据上面的思考，我们需要统计的有：</p>\n<ul>\n<li>每个单词在各分类中出现的数量</li>\n<li>各分类中的不重复词数量</li>\n</ul>\n<p>用 Python 简单表示如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\"># 读入数据过程略...\r\ndata_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ndata_blue = []\r\ndata_red = []\r\nword_count_blue = {}\r\nword_count_red = {}\r\n\r\nfor line_data in data_raw:\r\n    word_list = line_data.split(\" \") # 分隔单词\r\n    if word_list[0] == \"BLUE\":\r\n        for i in range(1,len(word_list)):\r\n            if not is_excluded(word_list[i]): # 判断是否为停用词\r\n                data_blue.append(word_list[i])\r\n                # 统计单词出现次数\r\n                word_count_blue.setdefault(word_list[i], 0)\r\n                word_count_blue[word_list[i]] += 1\r\n    elif word_list[0] == \"RED\":\r\n        # Class = red 时同理...\r\n\r\n#统计非重复词\r\nunique_words_blue = list(set(data_blue))\r\nunique_words_red = list(set(data_red))</pre>\n<p>训练过程到这里就结束了，计算机已经知道了各政党演讲的用词习惯。很简单吧？接下来我们就要使用测试数据集来测试准确度了。<strong>这里开始就涉及到朴素贝叶斯的计算了</strong>，可能会稍微复杂一点点。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">import math\r\n#读入测试数据过程略...\r\ntest_data_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ntest_data = []\r\n\r\nfor line_data in test_data_raw:\r\n    if line_data[0] == \"BLUE\":\r\n        content_data = line_data.split(\" \").pop(0)\r\n        test_data.append({\"class\": \"blue\", \"content\": content_data})\r\n    elif line_data[0] == 'RED':\r\n        # ...\r\n\r\nfor line_data in test_data:\r\n    posibility_blue = 0\r\n    for word in line_data[\"content\"]:\r\n        # 计算各单词概率，取对数后相加，使用了拉普拉斯平滑\r\n        if word in word_count_blue:\r\n            posibility_blue += math.log((word_count_blue[word]+1)/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n        else:\r\n            posibility_blue += math.log(1/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n    # 最后加上该分类概率的对数\r\n    posibility_blue += math.log(len(data_blue)/(len(data_blue)+len(data_red)))\r\n\r\n    # 计算 Red 同理...</pre>\n<p>计算完成后，我们就得到每篇演讲稿在各分类下的概率了。之后，简单的比较就能得出推断的分类：如果 \\(P(Red|Article)\\) 大于 \\(P(Blue|Article)\\)，那么这篇演讲稿就更可能是共和党的演讲稿，反之则是民主党的演讲稿。</p>\n<p>很好理解吧？那么这么简单的思路，准确性怎么样呢？对于我们的例子，这是我设置了个别停用词后的结果：</p>\n<pre class=\"EnlighterJSRAW\">+-----+-------+--------------+--------------+-------+-------+\r\n|   ID|  Class|        P(Red)|       P(Blue)|  Guess| Status|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|    1|   Blue|  -23204.68377|  -22998.67066|   Blue|      √|\r\n|    2|   Blue|  -16438.44625|  -16137.48257|   Blue|      √|\r\n|    3|   Blue|  -33468.81214|  -32567.61801|   Blue|      √|\r\n|    4|   Blue|    -8606.2193|   -8601.50426|   Blue|      √|\r\n|    5|   Blue|  -12430.97436|  -11935.70662|   Blue|      √|\r\n|    6|   Blue|  -44033.02883|  -43877.55367|   Blue|      √|\r\n|    7|   Blue|   -16947.2851|  -16758.57542|   Blue|      √|\r\n|    8|   Blue|  -26957.26997|  -26889.62444|   Blue|      √|\r\n|    9|   Blue|  -27503.73985|  -27249.21828|   Blue|      √|\r\n|   10|   Blue|   -20528.4457|   -19991.1248|   Blue|      √|\r\n|   11|   Blue|  -20337.96493|  -19860.12831|   Blue|      √|\r\n|   12|   Blue|  -28409.28489|  -28118.98017|   Blue|      √|\r\n|   13|    Red|  -13756.01015|  -14488.11751|    Red|      √|\r\n|   14|    Red|  -17221.22732|  -17710.15936|    Red|      √|\r\n|   15|    Red|  -17397.45136|  -17899.98659|    Red|      √|\r\n|   16|    Red|  -10724.69095|  -11092.77837|    Red|      √|\r\n|   17|    Red|  -10402.40027|  -10859.48681|    Red|      √|\r\n|   18|    Red|   -9371.53792|    -9669.6769|    Red|      √|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|                                      Total: 18/18, 100.0% |\r\n+-----------------------------------------------------------+</pre>\n<p><strong>100% 的准确率哦！</strong>事实上，对于我们的这个例子，就算不设置停用词，我们仍能达到 100% 的分类准确率。朴素贝叶斯分类的确很 NB 呢。</p>\n<h1>更进一步</h1>\n<p>我们的探索到这里就结束了，但如果你有兴趣，完全可以继续探索下去。我们的例子是一个非常简化的例子，在实际情况中，还有很多问题需要解决。比如，对于中文及类似语言，不存在拉丁语系的天然分词结构，而朴素贝叶斯的文本分类是基于单词的，那么<strong>中文的分词就会是个问题；</strong>再比如，对于朴素贝叶斯分类来说，<strong>词语之间的顺序是不影响分类结果的</strong>，但这就会导致“今天心情很好，但昨天不好”和“昨天心情很好，但今天不好”在朴素贝叶斯看来是一样的，要想获得更好的结果，我们必须<strong>考虑词语的顺序。</strong></p>\n<p>这些问题，今天我们就不再深究了，但你可以自己探索。比如，引入思路同样很简洁的马尔科夫链，我们就可以让计算机学会考虑词语间的顺序，不过那就会是另一个话题了。</p>\n","link":"https://flyhigher.top/develop/1989.html"},{"title":"MDx 中增强页面可访问性的细节","date":"2020-01-25 16:45:04","description":"\n<blockquote><p>这篇文章本来是打算发在 <a href=\"https://mdxblog.flyhigher.top/\">MDx Blog</a> 的，不过写到后来发现这篇文章相对来说还是有价值的，于是就将这篇文章转移到了无垠，MDx Blog 则不再发表这篇文章。</p></blockquote>\n<p>从 MDx 开发之初，增强页面的可访问性就被列为了一个重要目标。从 HTML 语义化，到 ARIA 地标，再到 <code>prefers-reduced-motion</code>，随着浏览器对于增强页面可访问性的支持功能越来越多，MDx 也在不断地更新，让更多的人都能毫无困难地浏览、查看由 MDx 渲染的网页。本文会详细说明一些 MDx 中增强页面可访问性的细节，<strong>如果你希望增强自己开发的网页的可访问性，本文可能会对你有所帮助。</strong></p>\n<h1>基础性增强</h1>\n<p>增强可访问性，最重要也是最基础的一点就是 HTML 语义化。通过使用 HTML 5 语义化标签和 ARIA Role 标签，我们可以很方便地<strong>将整个网页在语义上分为几部分，而这将有效地改善屏幕阅读器对网页的分析质量，使视力障碍用户更好地浏览网页。</strong></p>\n<h2>HTML 语义化</h2>\n<p><strong>HTML 语义化属于增强页面可访问性的基础中的基础。</strong>通过使用语义化的 HTML 标签，我们可以方便地为网页中的各部分标记功能而不影响页面样式。随着符合 HTML 5 的现代化网页成为主流，语义化标签已被很大一部分网站所支持，我也不过多赘述了。就举几个常用的“地标性”标签吧：</p>\n<ul>\n<li>\n<code>header</code> 标签标记页眉，默认样式同 <code>div</code>，不要把它和 <code>head</code> 搞混了</li>\n<li>\n<code>main</code> 标签标记页面的主要内容，默认样式同 <code>div</code>\n</li>\n<li>\n<code>article</code> 标签标记文章（在 HTML 5 中它指任何独立或可复用的文本），默认样式同 <code>div</code>\n</li>\n<li>\n<code>footer</code> 标签标记页脚，默认样式同 <code>div</code>\n</li>\n<li>\n<code>nav</code> 标签标记页面导航栏区域，默认样式同 <code>div</code>\n</li>\n<li>\n<code>aside</code> 标签标记侧栏，默认样式同 <code>div</code>\n</li>\n<li>\n<code>section</code> 标签标记“一组内容”，你可以把它看作是划定网页中一块区域的通用标签，默认样式同 <code>div</code>\n</li>\n</ul>\n<p>只要用这些标签替代 <code>div</code> 而不是无脑使用 <code>div</code> 就能提高页面的可访问性。MDx 使用了这些标签来增强页面的可访问性。</p>\n<h2>下一步，ARIA</h2>\n<p>有的时候，出于一些原因，我们没法使用语义化的 HTML 标签，或者没有合适的语义化标签来标记内容，这时候<strong>我们就需要使用 ARIA (Accessible Rich Internet Applications，可访问的富互联网应用)。</strong>ARIA 的基础用法很简单，只要在相应元素上加上 <code>role</code> 属性指定该元素的功能即可。下面是一个简单的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;div role=\"navigation\"&gt;\r\n  &lt;ul&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page A&lt;/a&gt;&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page B&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page C&lt;/a&gt;&lt;/li&gt;\r\n  &lt;/ul&gt;\r\n&lt;/div&gt;</pre>\n<p>通过 <code>role=\"navigation\"</code>，我们把一个 <code>div</code> 标记为了导航栏区域。实际上，对屏幕阅读器来说，这和 <code>nav</code> 标签在语义上是一致的。上一节中的例子都可以分别用以下 ARIA Role 表示：</p>\n<ul>\n<li><code>role=\"heading\"</code></li>\n<li><code>role=\"main\"</code></li>\n<li><code>role=\"article\"</code></li>\n<li><code>role=\"contentinfo\"</code></li>\n<li><code>role=\"navigation\"</code></li>\n<li><code>role=\"complementary\"</code></li>\n<li><code>role=\"region\"</code></li>\n</ul>\n<p>除此以外，MDx 还使用了 <code>role=\"banner\"</code> 和 <code>role=\"search\"</code> 来分别标记页面中的顶部栏和搜索表单。另外，<strong>有的时候 <code>role</code> 属性还需配合 <code>aria-*</code> 属性一同使用</strong>，具体规则比较复杂，我就不在这里赘述了，具体可参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles\">WAI-ARIA Roles - MDN</a>。</p>\n<h1>媒体查询来帮忙</h1>\n<p>CSS 的媒体查询其实是一个非常强大的特性，<strong>妥善利用其中的一些特性，我们可以在网页外观上大大增强网页的可访问性。</strong>除了已经烂大街的“对浏览器窗口大小”响应的媒体查询，我会介绍 3 个很少有网站充分利用的媒体查询。</p>\n<h2>print</h2>\n<p><code>print</code> 媒体查询其实已经“历史悠久”了，<strong>只要使用 <code>@media print {...}</code> 就可以创建只在打印页面时生效的样式。</strong>通过这种方式，我们可以让页面在打印时应用一套为打印优化的样式，增强页面在物理纸张上的可访问性。</p>\n<blockquote><p>维基百科是对打印样式做了单独适配的著名例子。</p></blockquote>\n<p><strong>由于在打印的情况下，页面已经离开了“可交互”的范围，还有分页这种在屏幕中无需考虑的问题，要让页面在物理纸张上仍能被轻松地阅读，我们需要做一些特殊的适配。</strong>直接来看一个例子吧。以下是 MDx 针对打印情况进行的一些特殊优化，样式的具体理由已经写在了注释中。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media print {\r\n    /*隐藏不必要的元素*/\r\n    header, .mdx-ad-after-article, .mdx-ad-in-article, .mdx-post-money, .page-footer-nav, .mdx-same-posts, .spanout button, .mdui-drawer, .mdui-overlay, .mdui-menu, .mdx-share-img-dialog, .mdx-share-wechat-dialog {\r\n        display: none!important;\r\n    }\r\n\r\n    /*使用下划线标记链接*/\r\n    article a {\r\n        text-decoration: underline!important;\r\n    }\r\n    /*由于纸张不可交互，在链接后显示链接到的 URL*/\r\n    article a::after {\r\n        content: \"(\" attr(href) \")\";\r\n    }\r\n\r\n    /*强制白底黑字*/\r\n    html &gt; body {\r\n        background-color: white!important;\r\n    }\r\n    article p {\r\n        color: rgba(0,0,0,.8)!important;\r\n    }\r\n\r\n    /*对于纸张上的长文章，衬线字体拥有更好的可读性。以下字体列表来自 fonts.css*/\r\n    article {\r\n        font: 13pt Georgia, \"Nimbus Roman No9 L\", \"Songti SC\", \"Noto Serif CJK SC\", \"Source Han Serif SC\", \"Source Han Serif CN\", STSong, \"AR PL New Sung\", \"AR PL SungtiL GB\", NSimSun, SimSun, \"TW\\-Sung\", \"WenQuanYi Bitmap Song\", \"AR PL UMing CN\", \"AR PL UMing HK\", \"AR PL UMing TW\", \"AR PL UMing TW MBE\", PMingLiU, MingLiU, serif!important;\r\n    }\r\n\r\n    /*除部分元素外，禁止在元素内部分页*/\r\n    * {\r\n        page-break-inside: avoid;\r\n    }\r\n    article p, article a, #comments, article {\r\n        page-break-inside: auto;\r\n    }\r\n}</pre>\n<p>MDx 自 1.9.3 版本起已经包含了对文章页的打印样式优化。可以很容易地看出，优化后的样式在物理纸张上将更容易阅读。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\" alt=\"\" width=\"1345\" height=\"1602\" class=\"aligncenter size-full wp-image-1959\"></a>\n<h2>prefers-color-scheme</h2>\n<p><code>prefers-color-scheme</code> 是最近才被浏览器广泛支持的一个媒体查询，但它的功能却很强大：<strong>响应系统级黑暗模式。</strong>这样，我们可以在开启黑暗模式的系统中让网页具有更好的可读性。不过由于这个媒体查询直到最近才被广泛支持，因此大部分网站对此并没有进行适配。</p>\n<blockquote><p>一些适配这一特性的网站：少数派、微信公众平台（文章页）等。</p></blockquote>\n<p>通过像这样的媒体查询，我们可以在系统启用黑暗模式时让页面实时响应：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    body {\r\n        background-color: #212121;\r\n        color: rgba(255, 255, 255, .7);\r\n    }\r\n}</pre>\n<p><code>prefers-color-scheme</code> 一共有 3 个可能值：<code>no-preference</code>, <code>light</code> 和 <code>dark</code>。你也可以不像上面的例子那样默认使用亮色样式并在黑暗模式下启用黑暗样式，而可以反过来将黑暗样式作为默认，用亮色样式覆盖。在不支持的浏览器上将会显示默认样式（即媒体查询不会生效）。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<h2>prefers-reduced-motion</h2>\n<p>看名字就猜得出，<code>prefers-reduced-motion</code> 是和 <code>prefers-color-scheme</code> 师出同门的媒体查询。因此，和 <code>prefers-color-scheme</code> 一样，它也是在最近才获得了浏览器的广泛支持。它的作用也很强大：<strong>响应系统的“减弱动态效果”模式。</strong>这对某些不喜欢甚至无法接受动画的用户可能很有帮助。要知道，对有些用户来说这甚至是医疗上的必要。使用如下的媒体查询，我们可以在系统启用减弱动态效果模式时让页面实时响应，减弱动画：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-reduced-motion: reduce) {\r\n    /*只是一个示例，实际情况中可以保留一些淡入淡出效果*/\r\n    * {\r\n        transition: all 0s!important;\r\n        transform: none!important;\r\n    }\r\n}</pre>\n<p><code>prefers-reduced-motion</code> 只有 2 个可能值：<code>no-preference</code> 和 <code>reduce</code>，在不支持的浏览器上该媒体查询不会生效。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\" alt=\"\" width=\"792\" height=\"515\" class=\"aligncenter size-full wp-image-1962\"></a>\n<h1>黑暗模式适配</h1>\n<p>黑暗模式可不是简单地切换到黑底白字这么简单。<strong>单纯地使用黑底白字会导致页面元素之间对比度过高，文字刺眼，反而降低了页面的可访问性。</strong>我在下面总结了几条应用在了 MDx 中的黑暗模式优化规则和 Google 推荐的优化规则：</p>\n<p><strong>一是避免黑底白字。</strong>黑底白字看起来真的很难受，事实上，深灰和浅灰是黑暗模式最好的配色。比较下方例子里的两段文本，毫无疑问深灰色背景和浅灰色文字搭配的样式的可读性要比黑底白字高很多。（p.s. 有时候这条规则在白底黑字时也适用）</p>\n<p><strong>二是更改部分元素的亮度和对比度以增强可读性。</strong>你可能已经注意到了，下面优化的例子里标题文字的颜色改变了。很明显，未优化的黑暗模式中标题可读性不如优化的版本。在实际中，我们通常可以通过 CSS 滤镜来实现这一更改。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    h1 {\r\n        /*反相颜色后再将色相旋转 180 度，使亮度反相*/\r\n        filter: invert(1) hue-rotate(180deg);\r\n    }\r\n}</pre>\n<p><strong>三是避免让图片过亮。</strong>未经处理的图片通常会导致过高的对比度，降低可读性。在 MDx 中，我选择降低图片的亮度来避免图片刺眼，而 Google 的建议则是使图片灰度，不过这会影响图片的整体观感。无论是哪一种方案，都可以使用 CSS 滤镜来轻松实现。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    img { \r\n        /*MDx 方案*/\r\n        filter: brightness(.8);\r\n        /*Google 方案*/\r\n        filter: grayscale(.5);\r\n    }\r\n}</pre>\n<div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是未优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是经过优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n</div>\n<h1>其他细节</h1>\n<p>还有一些细节，虽然简单，但不可或缺。我把一部分没有在上文提到的 MDx 中的细节列在了这里。</p>\n<p><strong>一是允许页面缩放。</strong>在开发响应式页面时，很多网站会在页面头部添加这样一个 <code>meta</code>：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"&gt;</pre>\n<p>这样的 <code>meta</code> 设定了页面的宽度，却也固定了页面的缩放比例，用户难以手动放大网页。<strong>这样的设置对一部分视力障碍用户非常不友好</strong>，以至于苹果决定在自家的浏览器上忽略禁止缩放的 <code>meta</code>。按照 Google 的推荐，如果你在 MDx 设置中启用了“允许页面缩放”，那么 MDx 会输出这样的 <code>meta</code> 标签，允许页面进行五倍以内的缩放：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=5\"&gt;</pre>\n<p><strong>尽管很多时候放大页面会导致页面结构被破坏，但这大大增强了页面的可访问性，利大于弊。</strong>因此，在 MDx 中，“允许页面缩放”是默认启用的。</p>\n<p><strong>二是在跨设备阅读时同步阅读记录。</strong>这属于 MDx 的“元老级”功能之一。注意到页面右上角的那个“在其他设备上继续阅读”的按钮了吗？如果你滚动页面后重新点击它，你会发现二维码发生变化了。通过在二维码中记录阅读进度，用户在扫描二维码切换设备阅读时，MDx 在新设备上会自动滚动到和原设备上一致的位置——好吧，目前基于百分比的算法在某些情况下可能不太准，但我已经设计了一个更复杂但更精确的阅读进度记录算法，之后就会更新到 MDx 中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\" alt=\"\" width=\"1000\" height=\"574\" class=\"aligncenter size-full wp-image-1976\"></a>\n<p><strong>三是避免 Web 字体阻塞渲染。</strong>如果你在页面中使用了 Web 字体，在字体加载完成之前，浏览器可能不会渲染任何文本，这就导致用户可能需要等待一段时间才能开始浏览网页。Google 推荐使用 <code>font-display: swap;</code> 来向浏览器指定网页的 Web 字体渲染策略。这一规则会提供一个比较短的等待周期，如果在这段时间内 Web 字体没有完成加载，那么浏览器会以 fallback 字体渲染文本。任意时刻一旦 Web 字体完成渲染，浏览器就会使用 Web 字体重新渲染文本。这在大多数情况下都能满足可访问性的需求。</p>\n<p><strong>四是确保 html 元素具有合适的 <code>lang</code> 属性。</strong>这一属性声明了页面的主要语言，浏览器可以据此调整渲染策略，或者触发自动翻译；屏幕阅读器也能更好地阅读网页。</p>\n<p><strong>五是确保页面主要内容在丢失/禁用了 Javascript 甚至 CSS 的情况下仍然可用。</strong>作为一个以内容为主的网站，MDx 在禁用了 Javascript 的情况下页面主要内容仍然可用。这不只是为了 SEO，更是为了保证页面的可访问性。的确，目前的情况下，如果开启了 Lazyload，MDx 在禁用 Javascript 的情况下图片的确无法显示，但我会在后续版本中尽可能的优化这一问题。</p>\n<h1>附录：媒体查询开发技巧</h1>\n<p>有的时候，光有 CSS 响应媒体查询还不够，我们可能需要在 Javascript 中实时响应媒体查询。用如下代码就可以很简单地响应媒体查询：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let mql = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\r\nmql.addListener(handleMediaChange);\r\n\r\n//在添加监听后先调用一次，获得当前查询结果\r\nhandleMediaChange(mql);\r\n\r\nfunction handleMediaChange(mql){\r\n    if(mql.matches){\r\n        //查询匹配\r\n    }else{\r\n        //查询不匹配\r\n    }\r\n}</pre>\n<p>在开发上述媒体查询的过程中，我们需要频繁地切换系统的相应模式或者调出打印窗口。<strong>实际上，Chrome 提供了更简单的调试方法：</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1946\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\" alt=\"\" width=\"723\" height=\"681\"></a>\n<p>只要在这里更改模式，相关媒体查询就能实时生效。这不会影响其他标签页，在关闭开发者工具之后也会自动恢复系统设置。</p>\n","link":"https://flyhigher.top/develop/1912.html"},{"title":"MDx Blog 现已随 MDx 1.9.5 发布","date":"2020-01-22 17:54:11","description":"<p>随着 MDx 发布 1.9.5 更新，<a href=\"https://mdxblog.flyhigher.top/\" rel=\"noopener noreferrer\" target=\"_blank\">MDx Blog</a> 现已建立。我将会在 MDx Blog 中分享一些开发故事并发布 MDx 更新日志。</p>","link":"https://flyhigher.top/diary/1905.html"},{"title":"GitHub 2019 统计无垠版","date":"2020-01-12 13:02:00","description":"\n<h1>缘起</h1>\n<p>2019 年底，我突发奇想想要自己统计一番 GitHub 上存储库的一些信息。尽管 GitHub 有自己的<a href=\"https://octoverse.github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">年度统计</a>，我还是想试着自己爬取一下，说不定能挖出什么有意思的信息，何况这是我第一次有机会处理比较大量的数据，也算是一种学习的过程吧。于是花了一下午写了个简单的爬虫（时间都花在增加 Rate Limit 上了...），然后扔在了两台服务器上开始跑（GitHub  API 真是好文明）。</p>\n<p>从 2019.11.21 3 时到 2020.1.12 24 时的 52 天 21 小时内，我的爬虫一共爬取了<strong>与 2,024,705 个用户有关<sup>*</sup>的 14,651,923 个公共存储库的基础信息</strong>，平均每秒爬取 3.2 个存储库。据 GitHub 的官方数据计算，我爬取了大约 15% 的存储库信息，但由于封禁库和私有库的数量未知，我暂时无法确定我爬取的存储库占公共库的比例。同时由于存储库数量较多，基本可以认为爬取到的样本在时间尺度上已经足够随机，可以通过统计得出一般结论。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\" alt=\"\" width=\"700\" height=\"606\" class=\"aligncenter size-full wp-image-1892\"></a>\n<p>爬到自己了，合影.jpg</p>\n<p>那么下面就来看看统计出来的一些结果吧。爬虫的技术细节和数据集下载放在文末。</p>\n<p>* 指这些用户拥有至少一个库</p>\n<h1>统计信息</h1>\n<p><strong>以下统计结果均基于已放于文末的数据集。</strong>由于爬虫爬取的时间跨度长，加上我并没有完整爬取 GitHub 所有存储库，因此我<strong>不能保证以下统计结果符合真实情况</strong>，各位可以下载数据集或自行爬取进行验证。</p>\n<h2>一些数据</h2>\n<div>\n<div>\n<div>\n<span>3,120,930</span><br>总爬取用户数</div>\n<div>\n<span>44.7%</span><br>的存储库创建<br>自 Fork</div>\n<div>\n<span>6.59%</span><br>的账户被删除或<br>封禁<sup>1</sup>\n</div>\n<div>\n<span>23,913</span><br>单用户拥有最大<br>库数量<sup>2</sup>\n</div>\n</div>\n</div>\n<p><sup>1</sup> 基于用户 ID 规律合理推断<br><sup>2</sup> 统计范围仅限于当前数据集</p>\n<p>比较出乎我意料的是创建自 Fork 的存储库的占比。我预估这样的存储库占比不会太低，但没有想到能接近一半。此外单用户拥有最大库数量也大大超出了我的预期，<a href=\"https://github.com/pombredanne\" rel=\"noopener noreferrer\" target=\"_blank\">pombredanne</a> 这个用户名下拥有将近 24k 的存储库，不过绝大多数都是 Fork 来的，在情理之中。此外<strong>这个数据集中</strong>拥有最多存储库的账户其实是一个组织 <a href=\"https://github.com/gitpan\" rel=\"noopener noreferrer\" target=\"_blank\">gitpan</a>，这个组织拥有 36,377 个存储库。</p>\n<h2>语言</h2>\n<p><canvas></canvas><br>\n首先必须要说明的是，在这个榜单中我<strong>排除了 HTML 和 CSS</strong>，因为在严格意义上它们不属于“编程语言”。如果把它们计算进来的话，分别有 640,368 个和 361,425 个存储库的主要语言分别是 HTML 和 CSS，这样在这份榜单中它们可以排到第 6 和 第 10 名。JavaScript 毫无疑问获得第一，第二名 Python 的热度则和 JavaScript 相差将近一半。<strong>此外还有 2,448,486 个存储库未能识别出语言，占比 16.7%。</strong>在上面的榜单之外，与机器学习和数据科学相关的语言还有 Jupyter Notebook 排名第 13，R 排名 20，Julia 排名 43。</p>\n<p>说实话这份排名和 GitHub 官方的排名<strong>差别很大</strong>，除了前三名，后面的基本都不太一样。我的排名统计结果完全基于 GitHub 对于存储库的主要语言识别，加上我的存储库数据不完整，和官方的数据不同是很正常的，可以做一个参考，但大概率还是官方排名更加准确。</p>\n<h2>许可证</h2>\n<p><canvas></canvas></p>\n<p>自 GitHub 推出许可证功能以来，拥有许可证的存储库比例升升降降，却始终没有超过一半。<strong>选择一个合适的许可证对项目的良好发展真的很有帮助</strong>，要了解如何选择合适的许可证，请参阅<a href=\"https://www.runoob.com/w3cnote/open-source-license.html\" rel=\"noopener noreferrer\" target=\"_blank\">这篇文章</a>。</p>\n<p><canvas></canvas></p>\n<p>对于拥有许可证的存储库，MIT<del> 麻省理工许可证 </del>总是占比最大的；第二则是 Apache-2.0 许可证。此外，WTFPL 许可证也挤入了前 15 名。</p>\n<h2>星标</h2>\n<p><canvas></canvas><br>\nStar 数量毫无疑问是一个存储库受欢迎程度的体现，而 Star 数高的项目基本上大家都了解过。<strong>截至爬取结束时间</strong>，GitHub 中 Star 数最多的库是 <a href=\"https://github.com/freeCodeCamp/freeCodeCamp\" rel=\"noopener noreferrer\" target=\"_blank\">freeCodeCamp</a> <del>非常完美的驼峰命名法</del>，其次则是著名项目 <a href=\"https://github.com/996icu/996.ICU\" rel=\"noopener noreferrer\" target=\"_blank\">996.ICU</a>。<a href=\"https://github.com/vuejs/vue\" rel=\"noopener noreferrer\" target=\"_blank\">Vue</a> 现在的 Star 数已经稳压 <a href=\"https://github.com/facebook/react\" rel=\"noopener noreferrer\" target=\"_blank\">React</a> 一头，Vue YES! 此外 <a href=\"https://github.com/sindresorhus/awesome\" rel=\"noopener noreferrer\" target=\"_blank\">awesome</a> 也挤进第七名。<br><canvas></canvas><br>\n由于 Star 需要时间积累，新项目的 Star 数量很可能是比不过老项目的，这就会导致有实力的新项目无法出现在榜单中。因此我还统计了日均 Star 数，试图通过日均 Star 数来反映项目受欢迎的程度。<strong>由于正热门的项目会比老牌热门项目有优势，这一项的统计范围是 2020-01-01 之前的所有存储库。</strong>996.ICU 和 freeCodeCamp 再次出现在前 10 名，而最近的热门项目 <a href=\"https://github.com/wenyan-lang/wenyan\" rel=\"noopener noreferrer\" target=\"_blank\">wenyan</a> 则飙升至第 2 名。此外还有 <a href=\"https://github.com/menzi11/BullshitGenerator\" rel=\"noopener noreferrer\" target=\"_blank\">BullshitGenerator</a>，即最近热门的“狗屁不通文章生成器”和 <a href=\"https://github.com/evil-huawei/evil-huawei\" rel=\"noopener noreferrer\" target=\"_blank\">evil-huawei</a> 分列第 3 和第 5 名。<br><canvas></canvas><br>\n说实话这个曲线<strong>比我预估的陡多了。</strong>你可能已经注意到了，这个图表的横轴不是均匀缩放的，实际上曲线要比看起来陡很多。同时受爬取方式的影响，GitHub 中 Star 数较少的存储库数量远比我爬取到的多。也就是说，<strong>实际情况下曲线远比这个图表上的陡。</strong>拿点 Star 不容易啊。</p>\n<h2>名称</h2>\n<p><canvas></canvas><br>\n终于知道了原来存储库的名称是有长度限制的...尽管最长有 100 位，<strong>大部分人还是喜欢 8 位长的存储库名。</strong>此外 1 位长的名称也比我预估的要多一些。举几个存储库名称长度为 100 的例子吧。</p>\n<ul>\n<li>testing-something-elsetesting-something-elsetesting-something-elsetesting-something-elsetesting-some</li>\n<li>acts_as_validated_config_so_app_will_not_run_in_random_situation_and_qa_gays_will_not_cry_to_you_whe</li>\n<li>............................................________-....................................-.---......</li>\n<li>----------------------------------------------------------------------------------------------------</li>\n<li>nyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyan</li>\n</ul>\n<p>...创造力有够丰富的。</p>\n<p><canvas></canvas></p>\n<p>最近 GitHub 上有一种奇怪的风气，那就是建立 Awesome 合集<del>骗 Star</del>。看起来 Awesome 存储库满地都是，甚至还出现了关于 Awesome 的 Awesome 合集这种迷惑行为。于是我统计了一下，<del>还好，</del>占比<del>才</del> 0.5% 不到<del>，Awesomer 们任重而道远呐</del>。</p>\n<p><canvas></canvas></p>\n<p>尽管要在 github.io 上托管网站，存储库不一定要以 .github.io 结尾，但我还是统计了一下。拥有这类存储库的用户比我预想的要少一些，看来还有很多人没有完全发挥 GitHub 的完整实力啊<del>（比如我 Doge）</del>。同时<strong>这类存储库在所有存储库中占比 1.12%</strong>，看起来不多<del>，不过至少比 Awesome 多</del>。<br><canvas></canvas><br>\n看得出来 GitHub 对于用户名长度的限制是 1-40 位。用户名最短的 27 位占据了 <code>A-Z</code> 外加 <code>-</code> 的所有可能，而用户名最长的则是一个组织 <a href=\"https://github.com/UOIT-RESEARCH-database-information-group\" rel=\"noopener noreferrer\" target=\"_blank\">UOIT-RESEARCH-database-information-group</a>。不知道是巧合还是某种规律，<strong>最受欢迎的用户名长度和存储库名称长度一样，都是 8</strong>，有点意思。</p>\n<h2>创建时间</h2>\n<p><canvas></canvas><br>\n由于我并没有完整爬取所有存储库，我只能以相对值来统计每月新增存储库数量的变化趋势。<strong>在这个图表中，我将 2017-09 的数据设为了 100%。</strong>你一定一眼就能注意到 2017 年 6,7,8 月的“一柱擎天”。<del datetime=\"2020-02-05T09:18:30+00:00\">我第一次看到这个数据的时候的确愣了一下，不过就着这条新闻看就能明白为什么了：<strong>2017 年 6 月微软收购 GitHub。</strong></del></p>\n<blockquote><p>重新确认了一下，微软收购 GitHub 比这个高峰晚了一年，目前我对这个高峰没有什么很好的解释，如果你有什么思路的话欢迎评论。</p></blockquote>\n<p><strong>需要注意的是这张图表中我排除了 Fork 存储库</strong>，因为 Fork 存储库在 API 中的创建时间是原始存储库的时间，会影响整体趋势。此外，GitHub 中还有一个创建于 2007 年 10 月 29 日的存储库，那就是 <code>id: 1</code> 的...</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"mojombo\" data-mdxgithubp=\"grit\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/mojombo/grit\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>而它的创建者正是 GitHub 的创始人之一 Tom Preston-Werner。</p>\n<h1>一些有趣的结果</h1>\n<p>当初打算自己爬的目的之一就是想看看能不能挖出什么有意思的信息，结果真的有一些不挖不知道的信息。</p>\n<h2>奇怪的存储库</h2>\n<p>在爬取到的所有存储库中，<strong>有 3 个存储库是“无主”的</strong>，即它们的 owner 属性为空。这三个存储库的基本信息如下。</p>\n<div class=\"mdui-table-fluid mdui-table-hoverable\"><table class=\"mdui-table\">\n<thead><tr>\n<th>ID</th>\n<th>名称</th>\n<th>Forked</th>\n<th>Star</th>\n<th>语言</th>\n<th>许可证</th>\n<th>创建于</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>72385291</td>\n<td>vscode-redprl</td>\n<td>否</td>\n<td>10</td>\n<td>TypeScript</td>\n<td>apache-2.0</td>\n<td>2016-10-31 08:50:01</td>\n</tr>\n<tr>\n<td>181218346</td>\n<td>electron-sys</td>\n<td>否</td>\n<td>10</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-14 03:20:56</td>\n</tr>\n<tr>\n<td>181391880</td>\n<td>node-sys</td>\n<td>否</td>\n<td>6</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-15 09:33:08</td>\n</tr>\n</tbody>\n</table></div>\n<p><strong>更奇怪的是这三个存储库“无主”的情况还不一样。</strong>第一个存储库可以通过 <code>/repositories</code> 这个 GitHub API 找到， <a href=\"https://api.github.com/repositories?since=72385290\" target=\"_blank\" rel=\"noopener noreferrer\">这个链接</a>中的第一个存储库就是它；而其余两个存储库甚至无法在 <code>/repositories</code> API 中找到。不过就算能在 API 中找到第一个存储库，它的 <code>html_url</code>，即 <code>https://github.com//vscode-redprl</code> 仍然是不可访问的。这可能是 GitHub 早期的一个 Bug 导致的，不过我仍然对爬虫是如何找到这三个存储库的以及这些 Stars 是哪里来的感到好奇。</p>\n<h2>奇怪的用户名</h2>\n<p>在爬虫爬了一段时间以后，API 中突然开始出现大量的以 fdp 开头的 18 位乱码作为用户名的用户。这些用户拥有的存储库和 starred 的存储库都为 0，而他们的 <code>html_url</code> 为 404。以下是几个例子。</p>\n<ul>\n<li>fdpEpolGCEdQX4ZlRJ</li>\n<li>fdp8XaVrdtmDZnO5pR</li>\n<li>fdp8XRAGnwAOkTr2Ya</li>\n</ul>\n<p>由于我的爬虫并没有超过 Rate Limit，所以我排除了这是污染数据的可能。我怀疑这可能是某种 Bot 账户，于是一边更新爬虫过滤掉了这些用户，一边给 GitHub 支持发邮件问了具体情况。过了两天 GitHub 回复我说这些是<strong>被自动判为可疑进而被封禁的用户</strong>（原话是 they have been flagged by our automated measures for detecting suspicious behavior）。<del>想到我正在疯狂爬取 GitHub，突然害怕.webp</del></p>\n<p>行吧。</p>\n<h1>技术细节</h1>\n<p>爬虫使用 Python3 编写，数据库使用 MySQL。爬虫共使用了 4 个 API Token，在两台服务器上分布式爬取。爬取思路为：</p>\n<ol>\n<li>通过 <code>/users</code> API 遍历用户，每个请求最多获取 30 个用户信息</li>\n<li>循环 30 个用户，分别获取 <code>/users/&lt;user_name&gt;/starred</code> 和 <code>/users/&lt;user_name&gt;/repos</code> API 中的存储库信息，每个请求最多获取 100 个存储库信息，超过 100 个的分页获取</li>\n<li>提取存储库信息，插入数据库。对于已存在的存储库，更新数据</li>\n<li>获取下 30 个用户信息</li>\n</ol>\n<p>由于爬取过程中我多次调整了爬虫逻辑，爬虫爬取到的用户 ID 区间并非连续的，具体区间为1-839586, 14800001-14885493 及 28965251-31161101。</p>\n<h1>免责声明</h1>\n<p>本站会尽可能地提供准确信息，但本站不对此文章中信息的准确性和即时性及带来的任何影响负责。</p>\n<p>本站不代表 GitHub 官方，本文仅供学习之用，请不要将本文内容直接用于任何商业项目中。</p>\n<h1>数据集下载</h1>\n<p>导出的 SQL 文件大约为 1.38GB，全部放在了 GitHub 上（在危险的边缘试探.webp</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"github-analysis-2019\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/github-analysis-2019\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>此外我也提供了 MEGA 下载，链接<a href=\"https://mega.nz/#F!juxm3A6T!7Vwpzi82W1OFrqTLu1A1pQ\">在这里</a>。</p>\n","link":"https://flyhigher.top/develop/1564.html"},{"title":"Milkice 跨年红包解谜 Writeup 及无垠跨年红包解谜答案","date":"2020-01-02 04:29:19","description":"\n<blockquote><p><del>又到了水文章的时间呢</del></p></blockquote>\n<p>先说明一下，这篇文章原本不是在计划中的，而原来说好的「在路上的两篇」文章<del>绝对不会咕</del>。我自己的红包答案本来打算直接塞在年度总结里的，结果发现稍微有些长，再加上我还花了一些时间解了<a href=\"https://milkice.me/\">奶冰</a>的红包解谜游戏，就打算把两个解谜过程放在一起单独写一篇文章。<del>真是个水文章的好理由</del>（被打死</p>\n<h1>奶<del> 子 </del>冰的红包</h1>\n<p>奶冰的红包题目比我的难多了，所以让我们先从难的开始吧。首先看一下<a href=\"https://milkice.me/2019/12/31/2019-summary/\">题目</a>：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1524\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\" alt=\"\" width=\"746\" height=\"410\"></a>\n<p>入口是 <code>happy.2020.milkice.me</code>，扔到浏览器里面表示找不到 IP，那么大概率就是 DNS 的 TXT 记录了，查一下得到 <code>nb2hi4dthixs63ljnrvwsy3ffzwwkl3tivrvezluomxxg5dsmvqw2ltqmnqxa3th</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1525\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\" alt=\"\" width=\"896\" height=\"278\"></a>\n<p>第一眼没看出来是什么编码，直觉是 BaseXX 系列的编码，加上提示“不只有 Base64”，可以推断出是 Base32，转大写解码得到 <code>https://milkice.me/sEcRets/stream.pcapng</code>。是个 URL，下载得到一个 Wireshark 文件，打开一看是和某 USB 设备的通讯抓包。<del>不会做，不做了。</del></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1526\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\" alt=\"\" width=\"1500\" height=\"813\"></a>\n<p>奶冰提示我“Google 上搜得到”，结合第二条提示搜索“wacom pcapng”找到了<a href=\"https://blogs.tunelko.com/2017/02/05/bitsctf-tom-and-jerry-50-points/\">这篇文章</a>（<del>这™就是答案啊</del>）。看起来是一样的套路，即通过解析数据得到数位板上画的内容，于是按文章的思路筛选出数位板发给主机的数据，导出，然后再用 tshark 导出文本数据。本来我想直接用文章中的 POC 的，结果折腾半天因为源的蜜汁原因库没装上，于是按文章中给出的数据结构自己写了段代码，分别导出 X、Y 轴数据扔进 Excel 画散点图。（<del>别问我为什么用 Excel，因为我手边没有更好的工具了</del>）</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1528\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\" alt=\"\" width=\"1280\" height=\"530\"></a>\n<p><span>翻车现场之一</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1539\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\" alt=\"\" width=\"1000\" height=\"286\"></a>\n<p><span>懵逼奶冰.webp</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1533\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\" alt=\"\" width=\"1500\" height=\"462\"></a>\n<p>看得出有手写文字，不过是上下颠倒的，翻转图片得 <code>https://milkice.me/2020/uso.zip</code>。是个 zip，下载打开一看，有密码。<del>不会解，不做了。</del> 第一反应是暴力解密码，但是暴力跑了 15 分钟还是没有跑出来。暴力太不优雅了，肯定不是正确思路，但奶冰什么都不肯说了。不过在这时我终于发现第一个红包口令码就藏在压缩包的注释中，Get。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1544\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\" alt=\"\" width=\"806\" height=\"593\"></a>\n<p>然而题还没解完，回去看提示，看到提供了 osu 谱面下载，于是打算不管怎么样先下载来看看。然而 osu 谱面下载要登录，只好又花了几分钟找到第三方站点，成功下载。这时候可以注意到 uso.zip 里有个同名文件（432314 Mike Greene - Bill Nye the Science Guy Theme Song (Chinese Intro).osz），可以联想到是明文攻击。好吧，上 ARCHPR，十秒解出。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1530\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\" alt=\"\" width=\"462\" height=\"643\"></a>\n<p><span>现场还原.jpg</span></p>\n<p>.osz 文件并不是明文，猜测是压缩包（和 .pptx 一个思路嘛），于是改后缀 .zip 顺利打开。然后红包口令码就藏在奶冰的 .osu 文件中了，由提示可知是明文，打开即可得到。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1542\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\" alt=\"\" width=\"457\" height=\"255\"></a>\n<h1>我的红包</h1>\n<p>相比起来<a href=\"https://flyhigher.top/diary/1464.html\">我的题目</a>就简单很多了嘛...三天时间一共发出了 25 个红包，包括一位重复领取的🌚，比前几年还是多了一些的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\" alt=\"\" width=\"500\" height=\"306\" class=\"aligncenter size-full wp-image-1554\"></a>\n<p><span>这位同学以后请不要多次领取🌚</span></p>\n<p>那么来看看答案吧。</p>\n<h2>第一阶段</h2>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>首先观察字符串，可以发现 <code>.</code> <code>/</code> <code>_</code> 等一些 ASCII 字符原样留在了字符串中，而其他字符被由 <code>=</code> 和十六进制构成的某种编码所替代。如果你正好有所了解，你应该能认出这是 Quoted-printable 编码，这是一种常用于邮件中的编码，可以用<a href=\"https://mothereff.in/quoted-printable\">这个页面</a>解码。如果你不了解，你也应该可以发现这种编码和 URL 编码非常相似。如果你把 <code>=</code> 替换为 <code>%</code>，那么你就可以用各种方法顺利地把它按 URL 编码来进行解码，最后可以得到 <code>αхtоn.іm/соdе_оf_2020_⒈mρз</code>。这个字符串里大部分字符都不是 ASCII 字符，只是长得像而已。根据第一个提示“全是 ASCII 字符”，按样子把字符串用 ASCII 字符抄一遍，可以得到最终 URL 为 <code>axton.im/code_of_2020_1.mp3</code>。</p>\n<h2>第二阶段</h2>\n<p>下载音频，可以听出音频是经过某种处理的白噪音。白噪音的特点是各频段的功率都均匀分布，在白噪音上做文章，很容易就可以联想到线索藏在频谱中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1534\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\" alt=\"\" width=\"1200\" height=\"719\"></a>\n<p>频谱被处理成了 24x3 的网格，结合第二条提示“24x3，横向读取”可以推断出是将频谱当作二进制读取，得到 <code>01111001 01110010 01100011 00101110 01101101 01100101 00101111 00110010 00110000</code>，转为 ASCII 字符可得 <code>yrc.me/20</code>。</p>\n<h2>第三阶段</h2>\n<p>打开上一步得到的页面，提示要求输入十位数密码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1536\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\" alt=\"\" width=\"663\" height=\"460\"></a>\n<p>如果你在上一步注意到了这个音频文件奇怪的属性，你可以反应过来这里的密码就是 <code>2000202020</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1537\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\" alt=\"\" width=\"421\" height=\"651\"></a>\n<p>如果你没有注意到，查看页面代码可以看到一条注释 <code>&lt;!-- Tips: the attribute of the audio --&gt;</code> 将你引导向音频文件的属性。输入密码，解锁即可进入下一步。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1535\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\" alt=\"\" width=\"397\" height=\"223\"></a>\n<h2>第四阶段</h2>\n<p>可以看到是一张图片，内容为“<del>.JPG</del>”和“.ZIP”。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter size-large wp-image-1532\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n<p>和去年一样的套路，下载图片，将后缀名改为 .zip 然后打开，可以看到 README.txt。</p>\n<h2>最后一步</h2>\n<p>查看 README.txt 的内容，可以了解到需要去 🤔.axton.cc 获取红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1538\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\" alt=\"\" width=\"1131\" height=\"278\"></a>\n<p>扔到浏览器里会出现奶冰同款找不到 IP，于是可以联想到 TXT 记录。唯一的问题是 🤔 这个 Emoji 需要如何处理。域名使用 Punycode 将 Unicode 字符转换为 ASCII 字符，特点是以 <code>xn--</code> 开头。如果你把上面这个域名扔进浏览器，你会发现它变成了 <code>xn--wp9h.axton.cc</code>。然后查询 TXT 记录，即可得到红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1527\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\" alt=\"\" width=\"804\" height=\"557\"></a>\n","link":"https://flyhigher.top/develop/1519.html"},{"title":"无垠 2019 年度总结","date":"2019-12-29 12:25:52","description":"\n<p>又是时间飞快的一年...写 2018 总结的情景似乎还在眼前，转眼居然已经到 2019 年末了。</p>\n<p>2019 年，发生了太多事情，包括真的转折了人生的高考，这也导致我博客更新的不多（难以置信居然才更了两篇...），不过两篇技术性文章已经在路上了，可以期待一下。</p>\n<p>2019 年我也学了不少东西（单指技术方面），比如终于认真学了 Vue（但是还要练手）。书买了一大堆，看完的倒是没几本orz</p>\n<p>呼，好吧，是时候回顾一下充满坎坷的这一年了。2019 年还剩下最后两天，希望 2020 年，我能做得更好。</p>\n<h1>一些数据</h1>\n<p>照惯例先来看看一些数据吧。今年是统计系统完整统计了的第二年，终于可以和去年的数据比较一下了。以下数据的统计范围是 2019年1月1日0时至 2019年12月29日20时。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 26,901 (<span>+4%</span>)，年 PV 76,583 (<span>+3%</span>)，日均 UV 73.7，平均停留时间 5分13秒 (<span>-13.8%</span>)，平均跳出率 53% (<span>+20.5%</span>)。一年有效文章数 2 (<span>-50%</span>)，新增评论 439 条。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\" alt=\"\" width=\"1000\" height=\"1143\" class=\"aligncenter size-full wp-image-1511\"></a>\n<p>有趣的是今年文章数腰斩，访问数反而小有提升。<del>如果我哪天不更新了，访问数是不是可以无限大呢？</del></p>\n<p>今年博客最大的改动就是把整体风格切换到了 Material Design 2（当然这是 <a href=\"https://flyhigher.top/develop/788.html\">MDx</a> 中的可选功能，给自己打个广告2333），此外还有比较失败的 WebP 改造计划，因为和缓存冲突已经回滚了。<a href=\"https://flyhigher.top/develop/1245.html\">ABS 系统</a>进展不大，主要是真的没有太多时间，还是要再学习一个。</p>\n<h2>个人主页</h2>\n<p>虽然个人主页的 TODO List 列了老长，但今年完全没有更新，也没有推广，从今年 8 月底开始还莫名被某墙认证了，直到 11 月底才恢复，于是今年总访问量比去年少了很多，</p>\n<p>有多少呢？这么少：总 UV 2,141 (<span>-65.9%</span>)，总 PV 2,744 (<span>-66.6%</span>)，日均 UV 6 (<span>-65.9%</span>)，平均停留时间 62秒 (<span>+19.2%</span>)。主要来源是知乎和 V2EX，还有一些甚至是从微信来的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\" alt=\"\" width=\"1000\" height=\"1103\" class=\"aligncenter size-full wp-image-1512\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 8 次，新增 171 commits，2 种语言的翻译，Star 数增加了 175，现有 408。感谢所有人的支持，尤其是 <a href=\"https://github.com/Sn0bzy\" rel=\"noopener noreferrer\" target=\"_blank\">Hasan CAN</a>, <a href=\"https://github.com/yechs\" rel=\"noopener noreferrer\" target=\"_blank\">Ye Shu</a>, <a href=\"https://github.com/StarryLeo\" rel=\"noopener noreferrer\" target=\"_blank\">StarryLeo</a>, <a href=\"https://github.com/DCTewi\" rel=\"noopener noreferrer\" target=\"_blank\">冻葱Tewi</a>, <a href=\"https://github.com/syfxlin\" rel=\"noopener noreferrer\" target=\"_blank\">Otstar Lin</a> 等为 MDx 做出了不小贡献的你们。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：<a href=\"https://flyhigher.top/photograph/1309.html\">上手</a> DJI OSMO Pocket</li>\n<li>四月：最后一次参加浙江省普通高中学业水平考试</li>\n<li>五月：MDx 喜提 300 Stars</li>\n<li>六月：高考 <del>炸了，差亿点点上浙大</del>\n</li>\n<li>六月：入手了 Oneplus 7 Pro</li>\n<li>六月：和同学一起去成都重庆旅行</li>\n<li>六月：第一次近距离感受到地震</li>\n<li>六月：<a href=\"https://flyhigher.top/diary/1411.html\">入手</a>了一台雷蛇灵刃 15，目前是主力机</li>\n<li>七月：参与组织 THE Hack 2019 活动</li>\n<li>七月：面基了 <a href=\"https://itroy.cc/\" rel=\"noopener noreferrer\" target=\"_blank\">Tory</a>, Bie Shi 和 <a href=\"https://oxz.me/\" rel=\"noopener noreferrer\" target=\"_blank\">FHYunCai</a>\n</li>\n<li>八月：一个人去厦门武汉转了一圈，拍了自己的第一个 Vlog</li>\n<li>八月：入手了一个 Kindle Paperwhite 4，没有泡面可以压，于是用来看英文小说了</li>\n<li>八月：加入 TEDxNingbo 志愿者团队</li>\n<li>八月：和 Ralph 面基</li>\n<li>八月：入手了一个 Yubikey</li>\n<li>九月：人生第一次参加雅思考试 <del>7分，蛮开心的</del>\n</li>\n<li>十月：入手了一个 Samsung Galaxy Watch Active 2 <del>觉得不值</del>\n</li>\n<li>十一月：MDx 达到 400 Stars</li>\n<li>十一月：为 TEDxNingbo 设计开发的 H5 上线</li>\n<li>十一月：入手了第一台胶片相机，试图入坑胶片摄影</li>\n<li>十一月：参加 TEDxNingbo 2019 大会</li>\n<li>十二月：<del>我 Cytus II 入门了</del>\n</li>\n</ul>\n<h1>跨年红包</h1>\n<p>这算「传统习俗」了。和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2020年1月2日。</p>\n<p>今年的解谜旅程，从下面这个字符串开始。</p>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>由于今年的题目比以前稍微难了一些，所以今年的红包金额还是比较大的，而且不限量，尽你所能试一试吧。</p>\n<p>一点你可能用得上的提示：URL 里全是 ASCII 字符 / 24x3，横向读取。</p>\n<p><a href=\"https://flyhigher.top/develop/1519.html\">答案</a>已公布。</p>\n<h1>跨年海报</h1>\n<p>这算是另一个「传统习俗」（笑）。因为我有做跨年海报的习惯，所以以下就是今年份的海报啦。</p>\n<p>用了 C4D+PS，还有我的一整个下午。</p>\n<p>提前祝各位新年快乐！</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter wp-image-1467 size-large\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n","link":"https://flyhigher.top/diary/1464.html"}]