[{"title":"年货节，迪卡侬最值得买的运动服是哪件？","date":"2022-12-21 03:28:36","description":"\n<p data-pid=\"Kq8cCEmc\"><b>迪卡侬是那种闭眼买你都会感觉物超所值</b>，而且总能发现很多贴心的惊喜设计的运动品牌。</p>\n<p data-pid=\"_gIlQ1he\">作为一名运动博主，也是迪卡侬的忠实用户，小到迪卡侬的运动手套，大到运动外套，以及跑步压缩裤等真的买了迪卡侬太多运动装备，这篇回答不仅会分享迪卡侬家的运动服，也会分享很多值得买的其它运动装备。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-2c39de43d97e64b391dac4f5db8ea643_720w.jpg?source=b1748391?rss\" data-caption=\"迪卡侬外套以及压缩裤\" data-size=\"normal\" data-rawwidth=\"2100\" data-rawheight=\"2800\" data-watermark=\"watermark\" data-original-src=\"v2-2c39de43d97e64b391dac4f5db8ea643\" data-watermark-src=\"v2-653284c47bfa5422e4df56f2cbf0c184\" data-private-watermark-src=\"v2-6ee952e02292daf5ce0fc0ffa4f9d434\"></p>\n<p data-pid=\"AWvsx3_V\">一双运动手套十来块钱，一件紧身速干衣也才几十块钱，使用起来可能没有安德玛速干效果那么好，也没有耐克的颜值高，<b>但是绝对不存在不好用的现象，买回家之后也从不用担心被坑。</b></p>\n<p data-pid=\"MNWlssL8\">如果你去过迪卡侬的实体店的话，甚至不买东西你都可以在迪卡侬的店里逛上一天。</p>\n<p data-pid=\"TLt-3LAp\"><b>滑雪，骑行，足球，篮球，徒步，露营，跑步等区域应有尽有。</b></p>\n<p data-pid=\"84xrfyHO\"><b>而且官方网店也都是按运动品类分类。</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-b9ac9c8b29bcb5398883e8b1348ba0a5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1353\" data-rawheight=\"772\" data-watermark=\"watermark\" data-original-src=\"v2-b9ac9c8b29bcb5398883e8b1348ba0a5\" data-watermark-src=\"v2-86dcc3447e59561c37649d12e18044b5\" data-private-watermark-src=\"v2-0dce54e3a03b6e4233839408d0391d7a\"></p>\n<p data-pid=\"bqZ144Cg\">像自己作为一名跑步爱好者，最爱逛的就是跑步区域，因此本篇分享的也是迪卡侬家的跑步装备。</p>\n<p data-pid=\"xRRJ53q4\">特别是最近就能用到的秋冬季跑步装备，绝大部分都是自己用过的，好用实惠。</p>\n<p data-pid=\"rcp5ymlQ\">最喜欢它家的一点是：它家产品往往有很多贴心实用的设计。</p>\n<p data-pid=\"Bl3q4sbq\"><b>新手如果不知道怎么买装备的话，建议闭眼入迪卡侬；</b></p>\n<p data-pid=\"hG2zvzWl\"><b>老手如果追求性价比的话，迪卡侬也是闭眼入的选择；</b></p>\n<p data-pid=\"1AtuIXiw\">下面分享10件从头到脚的跑步装备，不仅仅只有运动服，从头顶的跑步帽，魔术头巾，到脚上的跑步袜，应有尽有。</p>\n<p data-pid=\"IrUk8Xjp\"><b>而且全套跑步装备加一起才不到500块，真是非常划算了：</b></p>\n<h3><b>1.跑步手套</b></h3>\n<p data-pid=\"cbkTAGp1\">建议0度左右一定要戴手套，有过跑步经验的都了解，跑步虽然是一项全身运动，但是手是越跑越冷的，手心虽然热，手背却很冰。即使戴着手套，我每次跑完手背都是凉的，戴手套会让手更舒服些 。</p>\n<p data-pid=\"-q4du4Di\">迪卡侬的跑步手套才十几块钱，而且还可以触屏，当时一下子就买了两双。</p>\n<p data-pid=\"ly0uFMzg\"><b>零度以上戴不加绒的防风手套；</b></p>\n<p data-pid=\"ugHui9Up\"><b>零度以下戴加绒手套；</b></p>\n<a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\" data-mcn-id=\"1588559115378200576\"></a><p data-pid=\"rHj20C60\"><b>正在戴的迪卡侬手套，十多块的手套还有可以按触屏手机的指套设计，当时真是惊喜了。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-0a7ebb84ff791dff859169213dee70a7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3024\" data-rawheight=\"4032\" data-watermark=\"watermark\" data-original-src=\"v2-0a7ebb84ff791dff859169213dee70a7\" data-watermark-src=\"v2-207b23b03b6978c709fd3d2aa8320c2e\" data-private-watermark-src=\"v2-5854f90859753d064c8b5ed7fb452c1d\"></p>\n<h3>2.1 秋季跑步外套（可遮住手背）</h3>\n<p data-pid=\"75WAfoRL\">这件跑步外套应该是买过迪卡侬的最香的跑步外套了，有两处设计的特别精巧：</p>\n<p data-pid=\"DcxpVZlz\">1.袖口比普通外套袖口要长，可以当做手套使用；</p>\n<p data-pid=\"OTeDYrml\">2.在手腕处有一处缺口，专门用于运动手表露出，可以看手表的配速以及心率等数据；</p>\n<p><img src=\"https://pic1.zhimg.com/v2-12dacb5bc10a7114638325b7ea0930ee_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3024\" data-rawheight=\"4032\" data-watermark=\"watermark\" data-original-src=\"v2-12dacb5bc10a7114638325b7ea0930ee\" data-watermark-src=\"v2-d0d1b76318ccfb6ae9d12e3e6f56e862\" data-private-watermark-src=\"v2-27e6d2855818e27d9aab91b525ec157e\"></p>\n<p data-pid=\"6Naz9PrC\"><b>太爱袖口这个细节了，保暖的同时还可以看手表：</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-ed474356627bf5e49f9123cd6f59aae9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4032\" data-rawheight=\"3024\" data-watermark=\"watermark\" data-original-src=\"v2-ed474356627bf5e49f9123cd6f59aae9\" data-watermark-src=\"v2-f134427922f4ea76abe30535c5c78aea\" data-private-watermark-src=\"v2-7252faee1bcbed191f9998788686f21d\"></p>\n<p data-pid=\"DTU0zHSE\">这也是自己在秋季跑步最喜欢穿的一件外套，太香了</p>\n<a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\" data-mcn-id=\"1588564124610576384\"></a><h3><b>2.2 冬季运动外套（摇粒绒保暖）-零度左右</b></h3>\n<p data-pid=\"B1dG_8LA\">这款冬季的摇粒绒跑步外套也很香，我现在穿的是老款的，现在出了新款的，其中最香的一个升级就是袖口做成了下图所示的防寒袖口，跑步过程中袖口不会缩上去。而且腋下也是可以透气的</p>\n<p data-pid=\"i2ZXv4ho\"><b>正在穿的老款摇粒绒外套</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-af0280a85e8dce5c1b4cdebc6063fb8b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2100\" data-rawheight=\"2800\" data-watermark=\"watermark\" data-original-src=\"v2-af0280a85e8dce5c1b4cdebc6063fb8b\" data-watermark-src=\"v2-6ca6d5e6c2449bb632f6c585a00723f6\" data-private-watermark-src=\"v2-1e79e03ef1634fc3078465e8d0d73a7b\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-82149949c44304d671481de7b07f0c91_720w.jpg?source=b1748391?rss\" data-caption=\"新款的防风袖口\" data-size=\"normal\" data-rawwidth=\"1087\" data-rawheight=\"682\" data-watermark=\"watermark\" data-original-src=\"v2-82149949c44304d671481de7b07f0c91\" data-watermark-src=\"v2-a0f513dba207bea6ec458d20a22c2368\" data-private-watermark-src=\"v2-625676eaa415be897805c8f15d460692\"></p>\n<a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\" data-mcn-id=\"1588576840519491584\"></a><h3>3.冬季运动马甲（核心区保温）</h3>\n<p data-pid=\"vBlagG93\">如果温度再低的话，其实运动马甲也是一个非常不错的选择，而且还非常的百搭。</p>\n<p data-pid=\"7PksHjdX\">比如零度左右可以和上面的秋季外套搭配着穿；</p>\n<p data-pid=\"UngHLqW0\">如果都零下10度了，甚至可以和冬季摇粒绒跑步外套搭配着穿；</p>\n<p data-pid=\"SM8O1XKU\"><b>马甲也是我常穿的冬季运动装备</b></p>\n<a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\" data-mcn-id=\"1588594848378105857\"></a><p data-pid=\"vdn5Z4xJ\">运动马甲</p>\n<p><img src=\"https://pica.zhimg.com/v2-b779cf4131378adc6aeec35e40794474_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2100\" data-rawheight=\"2800\" data-watermark=\"watermark\" data-original-src=\"v2-b779cf4131378adc6aeec35e40794474\" data-watermark-src=\"v2-4ba9911946bc148711646e506c5b94bb\" data-private-watermark-src=\"v2-f020074eccc28b7e236d837808e878ee\"></p>\n<h3><b>4.1紧身速干衣</b></h3>\n<p data-pid=\"L7afHzhk\">迪卡侬的速干紧身衣性价比也很高，还非常的修身，可以直接贴身穿，下面这款是正常厚度的紧身速干长袖。</p>\n<p data-pid=\"3K0wWZ-1\"><b>5度以上可以搭配着上面那件秋季跑步外套穿；</b></p>\n<p data-pid=\"Bqb-4v8M\"><b>零度左右的话，外面可以搭配上面那件摇粒绒运动保暖外套；</b></p>\n<a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\" data-mcn-id=\"1588577184213516288\"></a><h3><b>4.2 速干保暖内衣</b></h3>\n<p data-pid=\"WoCMkRr_\">如果温度再低一些都零下的，那么下面这件速干保暖内衣会更加保暖，滑雪都可以穿，跑步更没有问题了</p>\n<a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\" data-mcn-id=\"1588578404500299778\"></a><h3>5.户外跑步紧身裤</h3>\n<p data-pid=\"pkVQ7vdc\">秋天跑步穿紧身长裤是长见的方式。裤子紧紧的包裹着腿部感觉上会更舒服一些。</p>\n<p data-pid=\"gKtafTRL\">下面一款迪卡侬的紧身裤，有正常款和加绒款。</p>\n<p data-pid=\"AcEFOddy\">建议冬天都冷到零度左右的地方直接入手加绒款，对于冬天温度相对较高的南方，正常款就可以了。</p>\n<p data-pid=\"7jHXbk_u\"><b>只穿紧身裤觉得尴尬的话，外面可以套一条夏天穿的运动短裤即可。</b></p>\n<a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\" data-mcn-id=\"1588579404430708739\"></a><p><img src=\"https://pic1.zhimg.com/v2-da8e2ae6b51ecca740390684aaf44b49_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3024\" data-rawheight=\"4032\" data-watermark=\"watermark\" data-original-src=\"v2-da8e2ae6b51ecca740390684aaf44b49\" data-watermark-src=\"v2-f0a29c30f6032f8ae99f935aeb68316e\" data-private-watermark-src=\"v2-7f582c8b79988539663083858a999592\"></p>\n<h3>6.跑步帽及魔术头巾</h3>\n<p data-pid=\"6Kv_9SX0\">我在上海，冬天也不太冷，所以很少戴跑步帽以及魔术头巾。即使戴也是跑了一会后因为散发大量的热，后面会把跑步帽和魔术头巾拿在手里。</p>\n<p data-pid=\"u0iMV63B\"><b>对于零度以上的温度，其实只用穿一件带帽子的跑步外套即可，前面戴着帽子，身体热起来后把帽子放下即可；</b></p>\n<p data-pid=\"wSo102Z4\"><b>如果温度的确很低，可以试试魔术头巾，因为魔术头巾，不仅可以覆盖到头部，而且还可以保暖脖子，后面头部散热只用戴脖子周围既可以</b></p>\n<a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\" data-mcn-id=\"1588581100519198720\"></a><a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\" data-mcn-id=\"1588581344245948416\"></a><p data-pid=\"8QeQ3Swk\"><b>自己戴的魔术头巾，可同时作为帽子和围脖</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-078b7a66fcae33713ae33ed79e15430c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3024\" data-rawheight=\"4032\" data-watermark=\"watermark\" data-original-src=\"v2-078b7a66fcae33713ae33ed79e15430c\" data-watermark-src=\"v2-37deebbcd0824d813a2d3593d657051b\" data-private-watermark-src=\"v2-fbfa802951e5cc25ff2b8ca1319a3eac\"></p>\n<h3>7.跑步腰包</h3>\n<p data-pid=\"H8E-0aF1\">跑步腰包也几乎算是必须品了，下面这款迪卡侬的隐形跑步腰包，非常修身小巧，而且也是设计比较精致，还有专门放钥匙的挂钩，防止钥匙丢。</p>\n<p data-pid=\"M9PIzTrE\"><b>同时还有一条可以调节的弹性绳，可以随意调节松紧</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-1fc7e002bc314cbf5447c5885e1fe545_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1186\" data-rawheight=\"822\" data-watermark=\"watermark\" data-original-src=\"v2-1fc7e002bc314cbf5447c5885e1fe545\" data-watermark-src=\"v2-162a2626dc25d5443f693428daae3202\" data-private-watermark-src=\"v2-4aa1f424437bcf0b36f4829a3db3c1ae\"></p>\n<a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\" data-mcn-id=\"1588591315507445760\"></a><h3>8.专业跑步袜</h3>\n<p data-pid=\"AIAGL51A\">下面这双是迪卡侬性价比比较高的跑步袜。</p>\n<p data-pid=\"E2dYxKsf\">关于为什么跑步要穿跑步袜，这里再强调一下：</p>\n<p data-pid=\"DT0MJkXs\"><b>普通棉袜排汗性能差，脚汗不容易排出去；</b></p>\n<p data-pid=\"jAp_zHIO\"><b>专业跑步袜在后跟和前脚掌处都会做额外的加厚防滑耐磨处理；</b></p>\n<p data-pid=\"h6lohnP7\">专业跑步袜可以很大程度上降低磨脚的风险，所以强烈建议跑步的小伙伴们买一双专业跑步袜，价格不贵，而且平时也可以穿</p>\n<a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\" data-mcn-id=\"1588591958599172096\"></a><p data-pid=\"ksKUzkdQ\">迪卡侬还有好多好多运动装备，而且价格都不贵，可以说是真的做到了物美价廉。</p>\n<p data-pid=\"fY0oF3R9\">不管是新手还是老手，都能找到适合的装备，值得买的东西实在太多了。你穿过的印象最深的迪卡侬家的装备是哪一件？欢迎留在评论区。</p>\n<p data-pid=\"4KwpFF5C\">以上 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/97df7cdff4aba088348f297560c591a2\" data-hash=\"97df7cdff4aba088348f297560c591a2\" data-hovercard=\"p$b$97df7cdff4aba088348f297560c591a2\">@Seeker</a> </p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/tan-suo-19?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Seeker</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/572349992/answer/2810011643?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/266317927?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如果迪卡侬能满足我大部分运动装的需求，那什么品牌能满足我大部分的休闲装需求呢？</a><br><a href=\"http://www.zhihu.com/question/314005284?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">去健身房一定要穿运动迪卡侬服饰吗?</a><br>\n","link":"http://www.zhihu.com/question/572349992/answer/2810011643?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价詹姆斯·卡梅隆导演的新片《阿凡达：水之道》？","date":"2022-12-21 03:16:15","description":"\n<p data-pid=\"HggaawWC\">Thanks for the invitation of Zhihu.<br><br>To facilitate more Zhihu netizens to read, I specially invited the Zhihu team to translate my answers into Chinese, and the following answers will be presented in both Chinese and English.<br><br>I think \"Avatar: The Way of Water\" is an adventure first and foremost it's very emotional, it's more emotional than the first film. I think it focuses more on character and relationship dynamics than the first film did, but it definitely delivers on the spectacle and my love of oceans. It’s a family story and an emotional story, a love letter to family and how family makes you stronger. It is not a film that beats you over the head with its message, but it asks you to feel for the ocean and then maybe a few people can translate that into action, containing a strong environmental message. <br><br>Compared to the first film, Jake and Neytiri fall in love in the first movie, so obviously the first one is about a love story. The natural progression of Jake and Neytiri was for them to start a family, raising children in a time of war and great turmoil. You can still find joy while teaching them (the children) skills to stay alive, questions human greed in mining or extraction projects.<br><br>The second film talks about the exploitation of the ocean. \"Avatar: The Way of Water\" centers on Jake Sully and Neytiri, now parents to five children, who try to protect their family from a new threat to Pandora. They seek refuge with the oceanic Menkalinan clan and learn the way of water to survive. <br><br>The oceans are very important to me. I’ve been passionate about the ocean before I ever met the ocean.  I learn to scuba dive in rural Canada, and I love to what it means to us symbolically. Subconsciously we all know that the ocean is like our mother.  At least by making a film, I can give something back from the standpoint of conservation and preservation of the ocean. \"Avatar 2\" combines two great loves of my life: the movie telling stories with pictures, and the ocean. Everything just happened naturally. <br><br>I am also very proud that we have captured the facial performance of non-human characters. These characters are similar to us, but not human beings. This effect is not achieved through makeup, but a character generated by CG. We hope that the effect of the character is 100% real, and at the same time, the emotion expressed by the actor is 100% conveyed.<br><br>People say - my work is often the most expensive and most ambitious production to date. And if the current filmmaking technology doesn’t match my vision, we have to create our own technology. When we made \"Avatar\" it was a quantum leap forward in performance capture photography. And now with \"Avatar 2\", I and our team have done it once again. This is \"how we shot it\", we try our 110% off what we can do. In this series, we’ve covered movies like \"Titanic\",\"Top Gun：Maverick\", and have done everything, everywhere, all at once.<br><br>We’ll be using Studio Binder shot list feature fully populate our shot spaces. I had been dreaming of \"Avatar\" for decades. I wrote the original treatment before making \"Titanic\", but the technology at the time could not match my vision. I was on a quest for the Holy Grail. The Holy Grail was to be able to reproduce full human emotion in a CG character. So, I waited, and over the next few years, I over saw the development of the tech and processes required. <br><br>In 2007, we finally cracked the code. For my sci-fi epic, three different camera systems were used for three different shooting scenarios. CG Performance Capture. Live action. And a hybridof the two. The fist was a virtual system used for motion capture scenes. Basicmotion capture technology works like this. Actors wear suits with makers thatreflect infrared light back to stationary cameras. While HD reference cameras provided animators with detailed coverage to complete the physical performance, a reported 120 stationary cameras captured the actor's positions and movements.<br><br>Once the performance capture was complete, the crew packed up and headed to New Zealand to shoot all the live-action footage with the Fusion 3D Camera. The Fusion camera rig had two Sony F950s cameras to shoot native 3D. This meant that one camera shot left eye footage and the other shot footage for the righteye. This creates a more natural 3D affect that matches our own vision.<br><br>\"Avatar\" saw a leap forward in technology and filmmaking. And 13 years later, I and my team did it again for the sequels. Following the first film, the sequels would be shot in 3D. But what about shooting 3D underwater? The camera options were three times larger and difficult to operate. The beauty of it, if you can solvethe water, then you will never worry about it anymore. You can do everything and have freedom with it.<br><br>The key to do was - to shoot really underwater and really at the surface of thewater, so people were swimming properly.you know, and they were taking their own way to get out of the water properly or diving properly and it just looks like real because the motion was real. Because these kids have to learn how to be underwater, they don't know how to be underwater, they were raised in theforest, their fear factor probably helped. Although everybody was very well trained and we used a very safe and systematic way to allow them to dive, they were all scuba trained. But we didn't use scuba, so they got used to being underwater for long periods of time and we went to Hawaii, and we got everybody on scuba we're also doing free diving training at the same time.<br><br>The more you expand you disbelieve, the more you will enjoy the fantasy. We are all join hands and skip off to Pandora together.<br><br><br>感谢知乎的邀请。<br><br>为了方便更多的知乎网友阅读，我特别邀请知乎团队将我的回答翻译成中文，以下回答将以中英文对照的形式呈现。<br><br>我认为《阿凡达:水之道》首先是一次历险，它饱含情感，甚于前作。我认为它比第一部电影更注重人物性格和关系的变化，并透过奇观传递了我对海洋的热爱。这是一则关于家庭的感人故事，一封写给家人的情书，展示了家庭如何让一个人变得更强大。这不是一部向你大脑中灌输信息的电影，而是需要你感受海洋，或许可将感动转化为行动，传递了强烈的海洋环保信息。<br><br>相比之下，电影的前作中，杰克和奈蒂莉坠入爱河，很明显是关于爱情的故事。杰克与奈蒂莉的关系逐渐发展，在充满战争与动荡的时期组建家庭，抚养孩子。教他们（孩子们）生存技能的过程充满乐趣，同时可揭示人类在资源开采项目中的贪婪无度。<br><br>第二部电影则讨论了海洋开发的问题。《阿凡达:水之道》主要讲述了杰克·萨利和奈蒂莉——身为五个孩子的父母，他们试图保护家庭，应对潘多拉星球面临的新威胁。 他们向海洋Menkalinan部落寻求庇护，并学习水中生存之道。<br><br>海洋对我来说意义非凡。甚至在我与海洋未曾谋面之前，就已对海洋充满热爱。我在加拿大偏远的地方学习了水肺潜水，我喜爱它蕴含的象征意义。潜意识里，我们都认为海洋如同母亲。至少通过拍这部电影，我可以从海洋环境保护的角度作出回馈。《阿凡达2》融合了我毕生两大挚爱：以画面叙事的电影和海洋。于是一切就这样自然发生了。<br><br>令我自豪的是，我们捕捉到了非人类角色的面部表情。这些角色与我们相似，但不是人类。这种效果不是通过化妆实现，而是通过CG生成的角色展示。我们希望角色的效果百分百真实，同时演员表达的情感也得到百分百传达。<br><br>人们常说，我的作品往往是迄今为止最昂贵、最富野心的大制作。如果当下电影制作技术达不到我设想的效果，我们就必须自己创造技术。当我们拍第一部《阿凡达》时，它带来性能捕捉摄影的一次巨大技术飞跃。现在通过《阿凡达2》，我和团队又一次做到了创造技术。这就是我们拍摄它的方法，我们的团队永远付出110%的努力。我们将《泰坦尼克号》《壮志凌云：独行侠》等电影融入这一系列，并且天马行空，一气呵成。<br><br>我们将使用Studio Binder 的快照列表功能完全填充我们的镜头空间。几十年来，我一直梦想着拍出《阿凡达》。在制作《泰坦尼克号》之前，我写了最初的故事大纲，但当时的技术无法实现我想象的画面。我在寻找圣杯（追寻梦想）。这圣杯就是通过CG角色中再现完整的人类情感。所以，在接下来的几年里我一直等待，时刻关注并观察着所需技术的发展。<br><br>2007年，我们终于破解了密码。在这部科幻史诗中，CG动作捕获、真人表演以及两者的混合体，这三种不同的摄影系统被用于三种不同的拍摄场景。FIST是一个用于动作捕捉场景的虚拟系统。动作捕捉技术基本工作原理是这样的：演员们穿着一种特殊服装，其能将红外光反射回固定摄像机。与此同时，高清参考摄像机为动画师提供了完整动作表演的详细覆盖范围，120个固定摄像机用来捕捉演员的位置和动作。<br><br>表演部分拍摄完成后，工作人员收拾行装前往新西兰，用Fusion 3D摄像机拍摄所有的真人镜头。Fusion Camera Rig包含两台索尼F950s相机，用于拍摄原生3D。这意味着一台摄像机拍摄左眼镜头，另一台摄像机拍摄右眼镜头。这最终创造出与我们双眼视觉效果更自然匹配的3D画面。<br><br>《阿凡达》见证了电影制作技术的飞跃。13年后，我和我的团队又在续作中再次实现飞跃。延续前作，续作以3D形式拍摄。但若是在水下拍摄3D呢？摄像机选项是普通摄像机的三倍之多，难以操作。但它的美妙之处在于，如果你能解决水的问题，那么你就再也不必担心其它了。你可以拍摄与水相关的任何事情，并且随心所欲。<br><br>该片的重点是要在海底和海水表面上拍摄，以展现人们自由自在地在海中畅游。也就是说，他们要以自己的方式自如地跃出水面或潜入水中且非常逼真，因为这确实来自真实的动作。因为这些（杰克和奈蒂莉的）孩子必须学习如何在水下生存，他们成长于潘多拉森林，不会潜水，对水恐惧因素正好被表现得恰如其分。我们让每个演员都接受良好的水上训练，并使用了非常安全和系统的方式让他们学习潜水。他们都受过水肺潜水训练。但在拍摄时我们没有使用水肺，而是使他们习惯了在水下自然地待很长一段时间。我们去到夏威夷，并让每个演员在水肺潜水同时也进行了自由潜水训练。<br><br>抛掉越多心中的怀疑，就越能畅游幻想世界。就让我们携起手来，一起跃入潘多拉星球吧。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/18-87-35-57?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">James Cameron</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/572556184/answer/2809911169?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">218 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/572593928?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">电影《阿凡达：水之道》的预告有哪些亮点？</a><br><a href=\"http://www.zhihu.com/question/572305135?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《 阿凡达：水之道 》的媒体评分现已出炉，如何评价这部影片？</a><br>\n","link":"http://www.zhihu.com/question/572556184/answer/2809911169?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"微信做了个「小而美」的输入法：微信键盘正式版上手体验","date":"2022-12-21 03:00:00","description":"这也许是微信最接近「小而美」的一次。<a href=\"https://sspai.com/post/77393\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77393"},{"title":"派早报：一加服务将与 OPPO 服务融合、GitHub 与微信达成合作等","date":"2022-12-21 00:52:43","description":"Epic 因儿童隐私和诱导消费遭 5.2 亿美元罚款，蔚来就数据泄露事件致歉等。<a href=\"https://sspai.com/post/77392\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77392"},{"title":"一派·PowerUp 直播精华回放 : 用 MoneyWiz 管好口袋里的「一个亿」","date":"2022-12-20 09:30:10","description":"本视频是《一派·PowerUp 05 | 用 MoneyWiz 完成个人记账》活动的专享剪辑版。<p>[......]</p>\n<a href=\"https://sspai.com/post/74726\" target=\"_blank\">查看全文</a><p>本文为付费栏目文章，出自<a href=\"https://sspai.com/series/274\" target=\"_blank\">《59 分钟就上手 MoneyWiz 2022》</a>，订阅后可阅读全文。</p>\n","link":"https://sspai.com/post/74726"},{"title":"无密码、更安全的未来，你该如何登录？通行密钥上手体验","date":"2022-12-20 07:45:29","description":"本文将从通行密钥是什么出发，一起来看看通行密钥的生态如何以及我们可以怎么设置通行密钥。<a href=\"https://sspai.com/post/77376\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77376"},{"title":"App+1｜为 macOS 换图标，一共分几步？","date":"2022-12-20 03:31:04","description":"自从用上了BigSur，我的强迫症就一天都没好过。Apple将macOS的所有图标都变成了圆角图标，可惜几年过去了，还是有好多软件没有遵循这一设计规则。有强迫症的我，自然不能让启动台中出现不和谐的元素 ...<a href=\"https://sspai.com/post/77350\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77350"},{"title":"派早报：努比亚 Z50 发布，iPhone 在滑雪时可能触发车祸报警等","date":"2022-12-20 01:12:01","description":"微信键盘 1.0 问世，Apple 更新近期 AirTag 固件更新细节等。<a href=\"https://sspai.com/post/77368\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77368"},{"title":"派评 | 近期值得关注的 App","date":"2022-12-19 09:45:52","description":"你可以通过文章目录快速跳转到你感兴趣的内容。如果发现了其它感兴趣的 App 或者关注的话题，也欢迎在评论区和我们进行讨论。<a href=\"https://sspai.com/post/77362\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77362"},{"title":"参加在线视频面试时，面试官都在关注些什么?","date":"2022-12-19 08:25:19","description":"这是一篇面试官从看到的失败中总结出的文章，让专业人士聊聊该如何应对视频面试。<a href=\"https://sspai.com/post/77357\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77357"},{"title":"咨询师可以治愈自己的恋人吗？","date":"2022-12-19 08:14:56","description":"\n<p data-pid=\"8PEVSdkc\">即便是在咨询里，我们平时说的“治愈”也不单是咨询师的事情，其实来访者本身愿意改变的动力更重要，要不要治愈，怎么治愈很多都是来访者自己决定的——虽然来访者更多是直觉上知道自己需要什么，但意识里不一定知道，而咨询师的作用是为改变创造条件，把那些直觉知道的东西转化为可以交流、整合的东西。</p>\n<p data-pid=\"gPsDytwM\">也就是说，咨询不会把消除创伤和痛苦当成目标，更不会把人的创伤反应当成“变态”，而是在创伤和痛苦之上建构新的东西，让人能理解创伤的意义。并不是咨询师在解决问题，而是人们在这个过程中更理解自己了，也更知道怎么和自己相处了。所以咨询师也不会把咨询中的“治愈”当成自己的功劳，而是因为有些人本来就是那个样子，有那种可能性和倾向的。</p>\n<p><img src=\"https://picx.zhimg.com/v2-64c1b6a186a032d52432ef7ad5285ad8_720w.jpeg?source=b1748391?rss\" data-rawwidth=\"933\" data-rawheight=\"829\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-64c1b6a186a032d52432ef7ad5285ad8\" data-watermark-src=\"v2-3d60f1bf919fac171f1ffd03cce4f909\" data-private-watermark-src=\"v2-1ee162c0a8151a85f2689c9aab8513d0\"></p>\n<p data-pid=\"9-fm-rE1\">生活里没有咨询的环境，咨询师在恋爱里也会有很多自己的需求在里面——虽然咨询里对来访者的理解也会受自己主观性的影响，但由于咨询的框架在那里，更容易看到两个人之间的互相影响，而恋爱里，咨询师的判断往往非常不客观，虽然总体上可能更在意关系经营和质量，但没办法带入咨询师的身份，更多是用自己的直觉在和人交流。</p>\n<p data-pid=\"kjzEFsmX\">如果用咨询师的身份代入生活，想着自己可以普度众生，实际上那更多是在满足自己自恋的需求。我见过不少人喜欢在日常生活里分析别人，但很多人只是把自己的需要藏在专业面具之后，让身边的人觉得更难交流和信任——让我想起《扪心问诊》里，男主角Paul面对妻子坦白出轨，只是对着她吼“你每天和别人鬼混回来，面对孩子有什么感觉！？我问你有什么感觉！？”却全然不顾妻子其实以前和现在都想和他解决问题，是他一直在回避。</p>\n<p data-pid=\"-toOx3px\">虽然在咨询里能看到那些在生活中拥有良好人际支持系统的人是相对容易好起来的，因为这类人会相对更容易恢复自己的安全感，也能有更多机会看清周围发生了什么，理想情况下咨询师可能在一些事情上会更愿意了解别人，更少的偏见，更重视交流……但恋人愿意如何面对自己的创伤这件事是不可预期的，也不是和谁都有机会面对那些问题，另外，咨询师也不是感情方面都能顺利，因为各种原因单身、和伴侣情感问题难以解决/耗着不解决、分手/离婚的都有，<a href=\"https://www.zhihu.com/answer/1826722694\" class=\"internal\">会让我想起这个问题，有哪些既是心理学家也是渣男，谁知道这里他们彼此有多少疗愈作用呢？</a><a href=\"http://link.zhihu.com/?target=https%3A//baijiahao.baidu.com/s%3Fid%3D1747999630137048211%26wfr%3Dspider%26for%3Dpc%26searchword%3D%25E8%258B%25B1%25E5%259B%25BD%25E5%25BF%2583%25E7%2590%2586%25E4%25B8%2593%25E5%25AE%25B6%2520%25E4%25B9%258C%25E5%2585%258B%25E5%2585%25B0%25E9%259A%25BE%25E6%25B0%2591\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">英国心理专家让乌克兰难民洗碗带孩子，却被指控为奴隶主</a>。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/xu-ruo-hang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">徐若航</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/558896071/answer/2804118917?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">57 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/415348215?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">情感咨询师让我这么做真的有效嘛？</a><br><a href=\"http://www.zhihu.com/question/335966467?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">关于情感咨询，我是不是还继续待下去？</a><br>\n","link":"http://www.zhihu.com/question/558896071/answer/2804118917?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"健康人也应该了解的血糖管理（下）：实时血糖监测设备使用体验","date":"2022-12-19 03:30:00","description":"上篇文章我和大家聊了目前市售家用血糖监测设备的种类和各自特点，以及我个人会选择的方案，刚好对象不久前确诊了早期糖尿病，我将以他的实际佩戴过程和体验，包括数据读取、处理与大家作一个全面的分享。佩戴与安装 ...<a href=\"https://sspai.com/post/77348\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77348"},{"title":"2022 年卡塔尔世界杯决赛阿根廷点球大战击败法国夺冠，如何评价本场比赛？","date":"2022-12-18 19:18:05","description":"\n<p data-pid=\"h8NS8LPg\">终于，梅西在决赛里梅开二度，拿到了世界杯冠军。</p>\n<p data-pid=\"OTutMYZq\">并且，是以绝对核心的身份，无论是场上表现，还是数据结果。</p>\n<p data-pid=\"IFbxMHDv\">在本场之前，梅西已经收获了许许多多和世界杯有关的个人记录。但。这些记录虽然列得很长很长，但在他真正拿到大力神杯之前，总还是，少了真正的价值和意义。</p>\n<p data-pid=\"7Te8Ku8u\">如今以这样的方式夺冠，那所有的这些记录，伴随着这个冠军，让梅西在世界杯历史上拥有了完全属于自己的那一片天地：</p>\n<p data-pid=\"-iy5V7Tx\">最多的26次出场以及最高的17场胜利；累积进球加助攻21记，同样史上最多；以及，唯一一位两次获得世界杯金球奖的球员（应该不会有意外）。</p>\n<p data-pid=\"EM87RXbn\">其他还有一串大大小小的记录，不多提了。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-544735309e242e00958437c341d5d681_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1200\" data-rawheight=\"800\" data-watermark=\"watermark\" data-original-src=\"v2-544735309e242e00958437c341d5d681\" data-watermark-src=\"v2-c1f9ed0a53aa22b8832130b495436a2b\" data-private-watermark-src=\"v2-0b82b909d725a2a87974a19bd0c2c267\"></p>\n<p data-pid=\"rMfoeV1-\">-</p>\n<p data-pid=\"XSEqSnZy\">而梅西的职业生涯，至此也终于是没有了任何遗憾。</p>\n<p data-pid=\"R4VNtoeV\">可能谁都没有想到，梅西在自己职业生涯的暮年，在所有人都以为他的国家队荣誉无法再上一层楼的时候，接连拿下了美洲杯和世界杯。</p>\n<p data-pid=\"IR2dzM0H\">想想当初梅西心灰意冷宣布退出国家队，到如今拿下两大洲际比赛冠军，实在是恍如隔世。而对梅西的球迷而言，这也实在是，最完满的结局。</p>\n<p data-pid=\"-q7dAjQe\">贝利，马拉多纳，以及今天夺冠后的梅西，一起成为了足球史上第一梯队的三位球员。争议当然永远会有，但作为球迷而言，能够见证梅西创造的这一切，已经是巨大的幸运。</p>\n<p data-pid=\"_dlaTURU\">尤其是，他还和队友，以及对手们，一起完成了可能是世界杯历史上，最精彩的决赛。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-c9a912bb45175be53b3a34215ec2e530_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"810\" data-watermark=\"watermark\" data-original-src=\"v2-c9a912bb45175be53b3a34215ec2e530\" data-watermark-src=\"v2-37549e0e30709c98ebc6dea71a361c18\" data-private-watermark-src=\"v2-8fca7b92449b37b3f8d744be010c9b63\"></p>\n<p data-pid=\"CagyKdJ8\">-</p>\n<p data-pid=\"UrCgEc7b\">今天这场球，前七十分钟可以说是标志性的「德尚式败局」。</p>\n<p data-pid=\"O8aQwKH4\">他永远不主动根据对手优化和调整赛前战术，永远是指望着稳守之后靠着球星解决问题。今天法国队开赛之后高位稍高强度逼抢了一段时间，已经算是他做出的最大改变了。</p>\n<p data-pid=\"3nOTcKYf\">而斯卡洛尼，赛前明显是做足了功课。</p>\n<p data-pid=\"s9cXtuP0\">既然你喜欢苟着然后靠姆巴佩解决问题，那我的思路，就是不让姆巴佩碰球。</p>\n<p data-pid=\"os6fVunn\">赛前我曾经想的是，斯卡洛尼会更多切断中场给姆巴佩的传球线路。结果斯卡洛尼拿出了一个更有意思的战术：我直接不在自己的右路进攻了。把迪玛利亚放到左路，然后球队的进攻全都倾斜到那一侧。</p>\n<p data-pid=\"EROZqOZH\">甚至上半场有几个回合，你会发现阿根廷执行这个战术有点太过于严格。有几次禁区前持球推进的时候，右路其实空间拉开得更好，但阿根廷依然向左路推进。</p>\n<p data-pid=\"PgxtM79c\">而阿根廷进攻重心放到左路，除了不给姆巴佩反击空间外，还有几点优势：</p>\n<p data-pid=\"L5koUkbe\">当梅西回撤组织时，他对于给左路上球非常顺脚，因此策动起来很顺利；</p>\n<p data-pid=\"HLbkPieq\">法国的右路防守，虽说登贝莱还是会回来帮忙，但经验实在是不够；</p>\n<p data-pid=\"mxpOM_9a\">于是在这一套安排下，我们看到了迪玛利亚弥补了2014年的遗憾，继续成为阿根廷的决赛福将。而当迪玛利亚体力充沛时，即便年岁已高，但依然给法国队的防守球员们一个挨一个地上了课。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-03496fbddd5020eb40e860c9ca7e34d4_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"576\" data-rawheight=\"613\" data-watermark=\"watermark\" data-original-src=\"v2-03496fbddd5020eb40e860c9ca7e34d4\" data-watermark-src=\"v2-e766d772933215a3fde460e5b30bd499\" data-private-watermark-src=\"v2-167716dc7f2cb9ebad42ed0c4ad77d60\"></p>\n<p data-pid=\"LhWQ10I8\">-</p>\n<p data-pid=\"WNC19hoO\">今天德尚战术的另一个巨大失败，就是对梅西的看防。没有了梅西天敌坎特坐镇中场，照理也依然还是要对梅西做很多针对性的布置。可以选择不让他接球，可以选择不让他出球。但德尚今天，啥也没做。</p>\n<p data-pid=\"CFhO2R6I\">结果梅西，今天前后左右跑位十分自如，完全不受限制，把阿根廷的进攻衔接得无比顺畅。当然，今天梅西确实也拿出了最后一丝的能量和拼劲。甚至多次参与到了正常的拼抢和绞杀。</p>\n<p data-pid=\"RMp3xuTv\">他是真的想赢，</p>\n<p data-pid=\"aJMIG-Pz\">-</p>\n<p data-pid=\"TWLdfe0i\">而开局战术完败的德尚，用三次换人展现了自己的战术思路：</p>\n<p data-pid=\"lkH5Ys3H\">那就是放弃自己一直踢的战术，用身体和体能猛冲个子矮小且体能本身就不占优势的阿根廷队。说实话这个换人思路确实，还是很清奇的。并且，这个思路，是想要在常规时间解决战斗的。</p>\n<p data-pid=\"JVPWdn_J\">毕竟拿下了包括格里兹曼在内的核心，之后踢点球肯定吃亏。</p>\n<p data-pid=\"ZKvJYms1\">而今天开局战术无比精彩的斯卡洛尼，在换人的时候，显得非常犹豫。</p>\n<p data-pid=\"0d89oidK\">毕竟，上一次领先两球之后做了换人的调整，结果却很一般。所以今天，即便看着德保罗已经完全没有体力，斯卡洛尼却也依然按兵不动。</p>\n<p data-pid=\"MhHyDHvc\">结果遭到了惩罚。</p>\n<p data-pid=\"bZvs6O1j\">而阿根廷体力跟不上最大的负面效应，就是三线之间的空间变得很大。对于年轻有体力的法国球员们而言，这是他们最喜欢的局面，大开大阖，往返冲击。</p>\n<p data-pid=\"brjJUBR9\">于是几分钟内，姆巴佩梅开二度。德尚乱拳打死老师傅的战术开始奏效。年轻人们一旦打疯，拉也拉不回来。而阿根廷被扳平之后，场上也完全失去了统一的节奏，没有明确到底是攻还是防。</p>\n<p data-pid=\"gZWBTrqb\">于是最后几分钟，风声鹤唳。勉强撑到加时。</p>\n<p><img src=\"https://picx.zhimg.com/v2-4cb22ed1b418b830b7e8bf1e198418be_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1040\" data-rawheight=\"572\" data-watermark=\"watermark\" data-original-src=\"v2-4cb22ed1b418b830b7e8bf1e198418be\" data-watermark-src=\"v2-f4be209c617c93df317074d652adf315\" data-private-watermark-src=\"v2-accca1a2457f92050b8b4443b2260a7b\"></p>\n<p><br></p>\n<p data-pid=\"1mMYWAzZ\">-</p>\n<p data-pid=\"d22lPzj7\">进入加时之后，法国的青年军们，反而在需要主动控制和进攻的时候，没有了指挥官，不知道如何起势。反而阿根廷依然组织起了不错的几次反击。</p>\n<p data-pid=\"M46KciqR\">只不过最后的几分钟，实在是，太过惊险。两边都有机会绝杀。不得不说，这是最精彩的世界杯。</p>\n<p data-pid=\"wx67ZD5E\">而到了点球大战，正如之前所说，法国队这些没经历过这些场面的年轻人，面对圣马丁这样的门将，确实太难了。</p>\n<p data-pid=\"mVAsiLtv\">-</p>\n<p data-pid=\"LMOnLYCK\">阿根廷，终于再次拿到世界冠军。</p>\n<p data-pid=\"cFbOllf5\">大赛之前，阿根廷全队表示一定要尽全力帮助梅西夺冠，而且这一次我们确实在场上场下都看到了这样的阿根廷队。没有场外新闻，没有任何幺蛾子，专心在每一场比赛。</p>\n<p data-pid=\"Otr1LS3r\">看着阿尔瓦雷斯和德保罗们，每场付出巨大的跑动，把梅西那些不能跑的范围全都覆盖掉，真的有一种，难得的所谓「传承感」。</p>\n<p data-pid=\"BrzzPugd\">恭喜阿根廷！今夜不为阿根廷哭泣！</p>\n<p><img src=\"https://picx.zhimg.com/v2-70946984ae1fec6b0df80d07301f59af_720w.webp?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"465\" data-rawheight=\"322\" data-watermark=\"watermark\" data-original-src=\"v2-70946984ae1fec6b0df80d07301f59af\" data-watermark-src=\"v2-f4ff3e76f51d5b9b831dd0613ae7e769\" data-private-watermark-src=\"v2-e313617e1c606464fc223f00bbc4c015\"></p>\n<p></p>\n<p></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/rickidai?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Ricki</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/573009091/answer/2807022735?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">5281 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/573114138?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2022 年卡塔尔世界杯决赛阿根廷 7-5 法国，本场比赛有哪些精彩进球？</a><br><a href=\"http://www.zhihu.com/question/573090157?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2022 年卡塔尔世界杯决赛阿根廷 7-5 击败法国夺冠，本场比赛有多精彩？</a><br>\n","link":"http://www.zhihu.com/question/573009091/answer/2807022735?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价动画《大理寺日志》第二季第六集？","date":"2022-12-18 11:41:04","description":"\n<p data-pid=\"SPAP7rym\">大家好我是大理寺日志的导演槐佳佳，跟高兴能在知乎跟大家分享制作过程中的心路历程。</p>\n<p data-pid=\"T5RjuPgN\">大理寺日志已经更新到第六集了，剧情也是直接上高速了。前五集也并非是所谓的“水时长”，而是要把第二季出场的人物还有主要故事进行细分以及铺垫。我们在讲故事的时候也采用了插叙以及倒叙的手法从多个角度多个维度去丰富和扩展人物性格以及故事脉络。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-ffe4c27340ba1a025c89e09e1f1f36de_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"828\" data-rawheight=\"578\" data-watermark=\"watermark\" data-original-src=\"v2-ffe4c27340ba1a025c89e09e1f1f36de\" data-watermark-src=\"v2-78c8a4a8ee5fed078a64f24fd5fd92d7\" data-private-watermark-src=\"v2-082f0b7cfd92aa841bca526e63ac7288\"></p>\n<p data-pid=\"a4zcR0Bi\">为何说第六集开始整个剧情就上了高速呢，在这一集中，少卿和陈拾从博州赶回洛阳，发现徐大人出事后，主仆二人分头行动，陈拾回到胡肆向阿里巴巴和卢大人了解了怪盗一枝花在宅邸刺杀徐大人的经过。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6c33c32a6f514012f6cf090d9232b28f_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"828\" data-rawheight=\"578\" data-watermark=\"watermark\" data-original-src=\"v2-6c33c32a6f514012f6cf090d9232b28f\" data-watermark-src=\"v2-52356f005ddca576a55e0ba40d4b16b4\" data-private-watermark-src=\"v2-b0c76334ef59ca0fa4171e12c81e0da9\"></p>\n<p data-pid=\"NoFgXg3Z\">而少卿则是去往皇宫要向武明空告发丘神纪，但武皇不仅不以为意还要治少卿夜闯皇宫的罪，与此同时来俊辰携博州案证人青莲来武皇殿内并呈上证词，武皇遂打发少卿退下。</p>\n<p><img src=\"https://picx.zhimg.com/v2-c93fc6b2726969964dc997149d993187_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"828\" data-rawheight=\"578\" data-watermark=\"watermark\" data-original-src=\"v2-c93fc6b2726969964dc997149d993187\" data-watermark-src=\"v2-a136cbbe82e7bd52a1afcd6ba51d3d1d\" data-private-watermark-src=\"v2-01af0616b2df49ea13ffbc45b872d833\"></p>\n<p data-pid=\"qclnVyTJ\">少卿和陈拾分头行动的过程当中，被送进金吾卫大营的徐大人和刚刚沐浴完的丘神纪展开了正面的碰撞，徐有才发现弹劾丘神纪的奏疏有一半非他所写，一定是有人故意挑唆他与丘神纪相残，再二人正欲详谈之时，丘神纪接到了要他入宫的圣旨。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-67e996ba8ba97c9b8c47f750c5e8f57f_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"828\" data-rawheight=\"578\" data-watermark=\"watermark\" data-original-src=\"v2-67e996ba8ba97c9b8c47f750c5e8f57f\" data-watermark-src=\"v2-2c003edbb0139dbbfc01c0f293491c6b\" data-private-watermark-src=\"v2-93a94a80d3889ea33f61ea3bdb1c3657\"></p>\n<p data-pid=\"7M0iVNMM\">在同一时间内并线进行了三件事情，桩桩件件都指向丘神纪也都指向背后的阴谋。这种叙事是想让观众体验到紧张感，皇宫内武皇以及来俊辰的眼神透露着什么，丘神纪半夜接到入宫圣旨，等待他的将会是什么，这些都是我们在制作第六集的时候想设计进去让观众们在剧中可以一起感受的。</p>\n<p><img src=\"https://picx.zhimg.com/v2-97719ed82522714035e485d4382d589b_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"828\" data-rawheight=\"578\" data-watermark=\"watermark\" data-original-src=\"v2-97719ed82522714035e485d4382d589b\" data-watermark-src=\"v2-1b436649335707f9f7e5109440d246c9\" data-private-watermark-src=\"v2-3db417be04a11974f8f14d2fc0210f94\"></p>\n<p data-pid=\"6y9JHk00\">现大理寺日志第二季已经播放到第六集，希望大家可以喜欢并且多向我们制作提出宝贵意见，我们第七集再见。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/hadj-46?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">槐佳佳</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/572875732/answer/2805287695?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/571607535?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价动画《大理寺日志》第二季第五集？</a><br><a href=\"http://www.zhihu.com/question/400918231?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价动画《大理寺日志》的剧情？</a><br>\n","link":"http://www.zhihu.com/question/572875732/answer/2805287695?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"尝试了七种形码输入法后，我想聊聊在 2022 年用五笔这件事","date":"2022-12-18 07:00:00","description":"形码输入法没有死，但确实活得不太好。<a href=\"https://sspai.com/post/77340\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77340"},{"title":"如果不考虑买车的面子属性，是不是一直打车才更明智？","date":"2022-12-16 10:19:44","description":"\n<p data-pid=\"TUQdSf5S\">大家已经聊得很多了，我说几个提的比较少的点。</p>\n<h2>一、用车里程的需求弹性</h2>\n<p data-pid=\"yOpSHlPH\">一直打车比买车更划算这个议题中，有一个关键因素是每年用车里程。打车党可能会这么来算，每周打车5次、每次20公里，这算是比较强的打车需求了吧？算下来，每年用车里程也有5000公里左右。</p>\n<p data-pid=\"24bBJXfB\"><b>基于5000公里这个数据，就可能算出来打车更划算的结论</b>。</p>\n<p data-pid=\"W61zif08\"><b>实际上，用车里程是有需求弹性的。需求弹性的概念很简单，就是价格/成本降低，需求就会提高</b>。不考虑购车、保险、维保的固定成本，每次出行打车成本是高于私家车的（特别是考虑了车内环境、打车等待时间）等成本之后。</p>\n<p><img src=\"https://picx.zhimg.com/v2-81259a4ad2e3ab0de3469b98e8f7a9a5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-81259a4ad2e3ab0de3469b98e8f7a9a5\" data-watermark-src=\"v2-13818ef5426965f9f387e1c3cb55d22d\" data-private-watermark-src=\"v2-c9dd694228639794e978ad4c3288b444\"></p>\n<p data-pid=\"9sttrTCl\"><b>实际上，打车还会有一些隐性成本，比如说考虑到接送的不确定性，一般要预留冗余时间，做不到说走就走的水平。</b>当然，不同人的时间成本不一样，这个要自己来评估。</p>\n<p data-pid=\"J57-vem6\">正常情况下，每年打车里程5000公里以上的人，买车之后每年用车里程怎么也要10000公里朝上了。按10000公里来算，只算经济帐的话，计算结果可能都不一样。</p>\n<p data-pid=\"zqAsY-xP\"><b>实际上，类似的误判也会发生在燃油车与电动车的购车抉择话题上。</b></p>\n<p data-pid=\"rviq1d6G\">比如说，一个人开燃油车，每年行驶里程1.5万公里。那他可能就会算：<b>燃油车每公里6毛，电动车每公里1毛，这样一年省下来7500元，5年省37500元</b>。</p>\n<p data-pid=\"TrFqqkjK\">实际上，基本的经济学原理告诉我们，一种商品的价格降低之后，需求量会增加，二者比值就叫<a href=\"https://www.zhihu.com/search?q=%E9%9C%80%E6%B1%82%E5%BC%B9%E6%80%A7&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2420447605%7D\" class=\"internal\">需求弹性</a>。也就是说，他换成电动车之后，一年可能就要开2.5万公里了。<b>那么问题来了，他换了电车之后每年能省多少钱？</b></p>\n<ul>\n<li data-pid=\"J14q8sQ8\">\n<b>算法1：</b> 开1.5万公里省了7500元，多开1万公里多花1000元，所以省了6500元。</li>\n<li data-pid=\"R4d19DOp\">\n<b>算法2</b>： 每公里省0.5元，所以2.5万公里省12500元。</li>\n</ul>\n<p data-pid=\"0y3DfxyU\"><b>6500元 vs 12500元，你觉得哪个算法对？</b> 仔细算哦，因为一年差了6000，五年就是3万元，这会直接影响你的购买决策：买油车还是买电车。</p>\n<p data-pid=\"n0cOQeb6\"><b>两种算法都不对，正确答案应该在6500与12500之间</b>。</p>\n<p data-pid=\"xlrlucYA\">为了理解这一点，咱们举一个极端的例子。2.5万公里由两部分组成：</p>\n<ul>\n<li data-pid=\"WH-eBvpm\">\n<b>上下班通勤</b>：每年1.5万公里。由于公司停车场免费，你乐意开车去。</li>\n<li data-pid=\"TD8a0gsv\">\n<b>出差去机场</b>：家住滴水湖，每年1万公里。地铁公交短途打车40元；油车油费180元，太不划算，不开；电车电费36元，划算！</li>\n</ul>\n<p data-pid=\"kRGDFJv8\">当然，算法没那么简单，开电车虽然只比地铁公交省了4元，<b>但由多享受了“免去地铁排队、不坐公交人挤人”的好处，这个主观体验上的收益在你心目大于0元但小于140元（180-40）</b>。具体是多少，就决定了最终省下来的钱，在6500元与12500元之间的哪个点上。</p>\n<p data-pid=\"Fp-5Qf7U\"><b>在这个极端的例子中可以看到，如果你以过往开燃油车的里程来计算，就会少算那些「由于油价高而带来的沉默里程」，最终造成误判</b>。</p>\n<p data-pid=\"WJKLSg7z\">你可能会说：<b>这个例子也太极端了吧！我就是打工一族，除了上下班通勤，并没有出差去机场的需求</b>！</p>\n<p data-pid=\"iN7gr6q2\">那你有没有想过：<b>你有被压抑的周末郊游需求吗？</b></p>\n<p data-pid=\"fiW56DFK\"><b>有本来想找50公里外的老朋友唠嗑，但这位老朋友在你心里只值80元，最终没去的需求吗？</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-413f3a8c4eeebfb11eefd3314abf941f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"608\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"SVk8xhv7\"><b>根据我的观察，换了电车的车主，年里程都会增长30%-150%左右。需求弹性不同，增加的幅度不同</b>。</p>\n<p data-pid=\"cvGyrxek\">你可能还会说：我不一样，我在某互联网大厂打工，就因为买电动车贷了款，导致不得不周末加班挣钱还贷，没时间出去玩。每年里程不仅没增加，还下降了呢！！！<b>如此一来，需求弹性为负</b>！</p>\n<p><img src=\"https://picx.zhimg.com/v2-58b069e7f7c19f89e6cc57333db3bd60_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1400\" data-rawheight=\"989\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"XHW_7B4o\">额，这种情况虽然少，但也是存在的 。自己的需求弹性，自己最清楚 —— <b>我只是提醒一下：在估算自己每年行驶里程的时候，记得考虑需求弹性。</b></p>\n<h2><b>二、经济帐之外，更有价值的是什么？</b></h2>\n<p data-pid=\"bk2SmOJz\">从每年打车里程5000公里上升到买车后10000公里，从油车10000公里上升到电车的20000公里。<b>里程的增长，除了经济帐之外，会不会更有价值的东西呢</b>？</p>\n<p data-pid=\"EDa1c1d6\">这其实做不出很具体的分析，只能给出一些哲学上的思考。<b>《黑天鹅》一书的作者塔勒布在《反脆弱 —— 从不确定性中获益》一书中提到：杠铃策略是对抗不确定性的重要手段，实施这一手段就要增加自己的“可选择性”</b>。</p>\n<p data-pid=\"6RsNGqC-\"><b>什么叫可选择性？ </b>比如说你买了一个很贵的房子，每个月要背几万元的房贷，导致你不敢换工作、不敢和领导顶嘴，那你的可选择性就很低。假如你是北京土著，辞职了也可以回去继承五套2环房子，那你的可选择性就很强。</p>\n<p data-pid=\"v5NRlHeW\"><b>如果没有五套2环房子，但你从不被消费主义洗脑，随便赚点钱就可以活得很开心，那可选择性也会很强。</b></p>\n<p data-pid=\"DjhZCQjr\">塔勒布认为，人类在决策时倾向于低估可选择性的收益，所以在做一些模棱两可的决策时，去选增强自己可选择性的决策，会让自己最终受益。</p>\n<p data-pid=\"K0pahbCh\">出行里程增加，意味着每次面临“是否出门一趟”的选择时，可选择性增加了。从长期来看，这是一种优势策略。</p>\n<p data-pid=\"WRTERj1U\">翻译成人话就有点像当年买房还是买车的话题一样：<b> 买房是把自己固定了下来，买车是增加了很多人生机会</b>。不同的历史时期，这话有时候对有时候错，但大体上是这么个意思吧！</p>\n<h2>三、除了出行，车还有什么价值？</h2>\n<p data-pid=\"5kY5EcHy\">将打车与买车划上等号，仿佛出行就是车子的唯一价值。</p>\n<p data-pid=\"i6GqTSKo\">这几年有些车企都在说车子是“第三空间”，是房子的延伸。这话说得虽然有点早，但确实是有这个趋势的。也就是说，车子的作用不仅是把你从A送到B点，它还有其它价值。</p>\n<p data-pid=\"MKW1mqjE\">像我，有时候就需要音乐来调剂情绪，车上的音响更好，那我有时候没事也出去开一圈，达到类似冥想的效果，这就是实实在在的收益。</p>\n<p data-pid=\"iJfI1kcr\"><b>音响不止是欣赏音乐，也是休息和冥想的方式</b>。高级音响对交响曲和人声的表现，能够引起强烈的情感共鸣，这种共鸣不会帮助我们写下几篇乐评，但可以让我们更充分地休息与冥想，以更饱满的精力迎接未来的工作 。我今年刚换的新车，音响的人声部分调校得很一般，难以引起情感共鸣；少了一种冥想方式，这让我很苦恼。</p>\n<p data-pid=\"TSW_dlQE\">有人喜欢开车，喜欢人车合一的感觉，其实与车上听音乐也是一样的，那也是一种享受。<b>有人说，既然喜欢听音乐，为啥不在家里搞音响呢？ 关于这个问题，很好回答，有两点</b>：</p>\n<ul>\n<li data-pid=\"dz0KVv_D\">\n<b>车上听音乐的机会，比家里更多</b>： 听音乐也是一件专注的事情，随耳一听与入神地听，感受是完全不一样的。在家里腾出一两个小时听音乐是完全不现实的，但在车上开车或乘坐时听音乐的场景，就非常多见。</li>\n<li data-pid=\"v7Pw_lp6\">\n<b>车载音响更容易达到更高水平</b>：真的要高端音响的话，不仅是发声的艺术，也是空间的艺术。如果在房间里玩高端音响，不仅要花几十万买音箱，还要准备一个上百平的空间，然后坐在一个固定的位置欣赏，这谁能玩得起？汽车就很好，白车身框架是固定的，座椅位置也是固定的，同样的成本投入，就可以调校出更好的效果。</li>\n</ul>\n<h2>总结</h2>\n<p data-pid=\"4dRTGWbR\">所以，一直打车是不是更明智呢？ 也许是那种“大聪明”似的明智。别人在第五层，他在第二层笑别人。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhangkangkang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">张抗抗</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/572265370/answer/2804122204?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">537 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/561082735?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">明明买车没有打车划算，为什么还有那么多人买车？</a><br><a href=\"http://www.zhihu.com/question/30685191?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">是买车划算还是打车一辈子划算?</a><br>\n","link":"http://www.zhihu.com/question/572265370/answer/2804122204?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价央视直播世界杯使用的开源字体「得意黑」？","date":"2022-12-16 09:33:16","description":"\n<p data-pid=\"jjL83ah8\">我是得意黑的作者oooooohmygosh，谢谢知乎运营邀请我来回答这个问题。很抱歉拖了这么久才写这篇文章，因为我想再观察看看人们对于「得意黑」的各种不同声音，等到热度差不多退去之后，做一个总结。</p>\n<p data-pid=\"T3PgpxAH\">在此之前，一定要再次介绍一下得意黑创作团队的全部成员：</p>\n<ul>\n<li data-pid=\"256ECV2K\">设计：oooooohmygosh（陈相因）、陈渚、佳宁、史贺达、李健</li>\n<li data-pid=\"U-Z5q0Dh\">中文设计顾问：陶帝</li>\n<li data-pid=\"L38rdsHE\">字体工程：曾祥东</li>\n<li data-pid=\"r5aoFMu9\">鸣谢：土井辽太、刘育黎、美和园字社</li>\n</ul>\n<p data-pid=\"Pen1v1wi\">我很想客观评价这款字体，但这款字体是我的亲儿子，无论如何都会显得不够客观。<b>所以我觉得只有一个办法能稍微客观那么一点点，那就是做「批评」。</b>我会假设我自己是其他的字体设计师，或者是一个字体爱好者，可能会从什么角度来批评得意黑呢？然后再逐个解答，你将会在这看到我最真实的表达。</p>\n<hr>\n<h2>一、在重要环节走了捷径</h2>\n<p data-pid=\"ntU-jieN\">一款字体，从灵感的萌生，到正式开始设计，到生产，再到宣发，是一个很漫长的过程。宣发效果如何，直接决定了字体的受关注程度。</p>\n<p data-pid=\"okbYS0q7\"><b>得意黑很显然在宣发这一环节上走了捷径，这对其他字体来说是不公平的。</b></p>\n<p data-pid=\"EJUIl4od\">得意黑会给人一种感觉，它仿佛就是为了宣发这最后一击而创作的，虽然我的初心并非如此。但它能够快速得到扩散传播，产生大量的应用案例，确实离不开我B站UP主的身份。这种带有免费赠予性质的内容，注定了会在自媒体平台获得保底的流量数据。</p>\n<p data-pid=\"oGYZ5syJ\">这种感觉就好像，别人都需要把东西生产出来，拿到市场上卖力地吆喝。但得意黑，是在开发之前就已经有人打算要这批货了，然后我再去进行生产。当然这也只是开了一扇窗，得意黑借着这个机会能够顺利扩散，不仅仅因为免费，也依赖于这款美术字的造型确实在一定程度上足够百搭、好用。</p>\n<p data-pid=\"pi_DGu-j\"><b>我唯一死要面子的，就是在制作这个字体的宣发视频时，不用最有流量的套路脚本。</b></p>\n<p data-pid=\"J4qw8tjO\">其实做了这么久的UP主，我真的很清楚该怎么做这个视频才能更有流量。随便提一个方案，这个宣发视频完全可以走约瑟夫·坎贝尔《英雄之旅》中所说的「启程、启蒙、考验、归来」这种模版化的英雄故事结构。讲述在制作字体中遇到的困难，想办法克服，再遇到困难，再次克服。几分钟之内用故事牢牢抓住观众的眼球，流量至少可以翻上一倍。但熟悉我的朋友是知道的，我一直很纠结自己的身份，我一直都希望别人称我为设计师，而非UP主。所以，我只是和往常一样，流水账一样地介绍了这款字体。</p>\n<p data-pid=\"WLoQluml\">在视频标题「我用400天，做了一款让所有人免费商用的开源字体」里面，我还是加了「400天、免费商用」这两个必要的看起来非常自媒体的关键词，否则因为我个人死要面子而导致流量太差的话，我也没法交给我自己以及整个创作团队一份满意的答卷。还有好几个UP主朋友给我提建议，视频标题里面可以直接把「字体」二字去掉，换成省略号，变成「我用400天，做了一款让所有人免费用的……」，留给观众遐想空间，拉满好奇心。如果写上字体反而会大大减少出圈流量，因为字体的受众群体太小了。<b>但这已经低于我的底线了，肯定不会这样去做的。</b></p>\n<hr>\n<h2>二、未严格遵循中国大陆规范汉字写法</h2>\n<p data-pid=\"E0Gwq_BQ\">还是要再次强调，<b>得意黑是美术字，是美术字，是美术字。</b></p>\n<p data-pid=\"vgKNiTi8\">虽然在GitHub主页已经写得很清楚了，得意黑部分笔画和结构采用了美术字风格的形态处理方式，并未严格遵循中国大陆规范汉字写法，敬请注意。但用户们似乎还是会把它用到非常不合适的地方，比如替换成手机系统字体。</p>\n<p data-pid=\"rybkHcPm\">任何字体都存在被滥用的风险，但得意黑通过自媒体平台发布之后被快速地大面积使用，会让滥用的情况看起来更加突出。也有人说得意黑是简中版本的Comic Sans，这实在是太抬举了，得意黑怎么可能会得到嵌入到操作系统里面这种待遇呢，爆火只是一时的，不必担心。</p>\n<p data-pid=\"Sm4LHtIi\">所以我的呼吁是，用户们在选用字体的时候，可以认真思考下，究竟什么时候应该优先选用汉字规范写法的字体，又在什么时候可以选用美术字。这种事情看似基础，但还需要时间向人们科普。帮助人们提升设计意识才能从根本上为「美术字滥用」这个问题带来改变，剑指得意黑并不会改变什么。</p>\n<hr>\n<h2>三、得意黑的品质还不够高</h2>\n<p data-pid=\"IeKI5E2_\">得意黑是创作难度很高的一款美术字。因为它包含了三个主要特征：「窄、斜、弯钩」。且不说三个特征被同时囊括，就算是只有其中一个特征的字体，想要做好也是极难的。字体设计并不是把一个字改到顺眼就行了，而是要考虑所有字的一致性。把字体做窄，就要更多考虑内部空间的处理。把字体做斜，也不是直接给个角度的参数就行，而是要根据倾斜之后的效果进行细节的微调处理。巨大的弯钩会直接影响整个字的结构，不采用规范写法并不会让字好做，相反会让字更难做，因为你会发现想找到能参考的字体都很难，甚至是没有。这些特征，因为细小的偏差都会让各个不同的字放在一起看起来歪歪扭扭、乱七八糟。</p>\n<p data-pid=\"yLkip91A\"><b>更何况是把这三种特征同时揉到一款字体里面。</b>当然，我从一开始就知道这是一个挑战，也知道这不会是一个完美之作，但无论如何我们还是这样执行下去了。</p>\n<p data-pid=\"Gt94XDhn\">得意黑的设计流程是这样的，我们会先用少量字进行创意、风格的设计。然后再多做一些字调整笔画等细节，确定生产的规范。然后先花时间大批量地把所有字都一口气做出来，这个阶段做出来的字会有很多视觉问题，甚至会有些字存在BUG。我们会优先处理BUG字，然后针对刚才所说的三个特征带来的视觉问题逐字优化调整。逐字优化的速度很难用大概的数字来表达，因为有的字很难改，一整天也定不下来方案。而有时候又会很顺利，一天能一口气改完几十个字。当前版本的得意黑，还有些字并没有改完，之后才会更新。这就是我说得意黑品质还不够高的原因之一。</p>\n<p data-pid=\"nyXmsJS2\">得意黑是基于GB2312的6763个汉字来做的，在这个基础上多做了四个字分别是「啰、喰、瞭、𬌗」。但这显然还是远远不够的，很多常用字现在仍然没有，比如「喆」这个在人名中很常见的字，就暂时没法用得意黑打出来。这也是我说得意黑品质还不够高的原因之一。</p>\n<p data-pid=\"GIC9tiSS\">得意黑字体中包含了假名，但是在第一版中，「は」与「ば」弄反了，像这种疏忽有可能还隐藏于别的地方，只是暂时还没发现。这同样是我说得意黑品质还不够高的原因之一。</p>\n<p data-pid=\"TMG5b2Iz\"><b>但无论如何，我们还是把这款字「从零开始」给手搓出来了。</b></p>\n<p data-pid=\"tSmmRC0L\">这并不是一款在现有开源字体基础上做简单修改的字体，也不是一款滤镜后处理效果极强的字体。而是真的从无到有，设计间架结构，考虑视觉处理，调整优化到可以发布程度的崭新的字体。</p>\n<p data-pid=\"kCBTeWus\">这种庞大的工程，有瑕疵实属难免，我个人认为得意黑是瑕不掩瑜的。</p>\n<hr>\n<h2>四、被免费抢了风头的开源字体</h2>\n<p data-pid=\"M6fJNVe9\">得意黑基于 SIL Open Font License v1.1 协议开源。根据此协议，得意黑可以免费商用。</p>\n<p data-pid=\"ie2JnH9u\"><b>很显然，相比开源，人们更关注「免费商用」。</b></p>\n<p data-pid=\"5ZiRFtLb\">如今人们似乎只要看到一款字体是「免费商用」的，就会拍手叫好，但我的内心是复杂的。「免费商用」和「开源」是完全不同的两个概念，免费只是得意黑遵从OFL开源协议所带来的附加结果，并不是最初的目的。当人们看到一款喜欢的字体，总是会先问上一句「这个字体能免费商用吗？」说得严重一点，这会直接打击字体设计师的积极性，也会影响到字体行业的良性发展。</p>\n<p data-pid=\"jU9dq0gB\">其实大家可以简单算一笔账，一个字体设计师的月薪是多少钱呢？制作一套字体需要多少设计师呢？又要这些设计师制作多少个月呢？简单的乘法，就会让你知道一套字体的开发成本是多少。</p>\n<p data-pid=\"RIDk8Idt\">如果人们不愿意付费，那这个成本就一定会有人来承担。如果没有人来承担，发展就会停滞。所以我更愿意宣传得意黑是一款开源字体，而不是一款免费字体。一套字体的开发要付出那么多成本，为什么必须免费商用才会收获赞美呢？如果我强推得意黑的免费属性，其实是在扰乱字体设计的市场，这不是我希望看到的。</p>\n<p data-pid=\"nUx77Yhk\">但话说回来，如果得意黑是一款收费字体，那它注定很好卖。我为什么想要把它开源呢？</p>\n<p data-pid=\"qpB6wgtG\">这里不得不提到2014年「思源黑体」的发布，它让开源字体这个概念走进了大众视野。开源是互联网精神的体现，是一种依靠大众贡献和成果裂变的开发方式。</p>\n<p data-pid=\"7o5FNeZj\">我们想要把得意黑做成开源的，是因为现如今美术字风格的开源字体十分少见，更别谈基于美术字风格字体的改作和再创作了。我们希望做一些不一样的事情，提供一个新的起点，为开源社区和字体社区的建设添砖加瓦。也希望得意黑能够大获成功，借此抛砖引玉，让更多开源的美术字诞生。</p>\n<p data-pid=\"FTrBtyOF\">截止我写这篇文章的时候，得意黑在GitHub上面已经有8.8k的Star了，过万也只不过是时间问题。我们都不禁感叹，原来Star可以涨得这么快啊。</p>\n<p data-pid=\"WcKCAQZ6\"><b>希望更多人注意到，得意黑的开源是有很大意义的，它的价值不只是免费而已。</b></p>\n<p data-pid=\"MwabSAb3\">也希望有一天，我不需要在视频标题上加上免费二字，而是仅仅说到开源，便能获得流量吧。</p>\n<hr>\n<h2>五、闭嘴</h2>\n<p data-pid=\"hYG_oaEG\">我叫陈相因，我一直在学习，如何让oooooohmygosh在适当的时候闭嘴。</p>\n<p data-pid=\"inEJnWmP\">如这个知乎问题所提到的，得意黑算赶上了一个特别好的机会，它被央视世界杯直播选用了。这也确实让我收到了更多的采访、合作邀约。因为大家似乎都希望赶上世界杯的热点，找到更多沾边的选题，但是最终我只接受了三个邀约。</p>\n<p data-pid=\"gAbYCPHW\">其一是参与了一个自媒体的直播，还有一个是B站的公众号采访。这两个都是我很好的朋友介绍的，所以不好推辞。还有我会在12月底到The Type字谈字畅播客聊得意黑，Eric也是我们很好的朋友，并且我也期待到这种专业对口的地方好好聊一聊设计考量。</p>\n<p data-pid=\"8VcvtivQ\">除此之外的其他几十个邀约我都推掉了，其中不乏大量推荐资源位很好的机会。原因很简单，我认为得意黑在做完了宣发视频之后，就应该结束了。如我文章开头所说的，这个字体的宣发走了捷径，但他真的只是一款字体而已。再继续没完没了铺天盖地出现在网络上，就有些烦人了。这除了对我个人有曝光的帮助以外，不会有什么其他用处。所以不如不做，就让得意黑停留在这个口碑最好的时刻吧。</p>\n<p data-pid=\"AZAHM3lQ\">我在年初拿到了B站的百大UP主，这算是对我在自媒体领域的一种认可。所以在整个2022年，我基本都没有认真地做视频，因为我想要找到自己身为一名平面设计师的价值所在。我同时在进行的开源项目还有好几个，将来会把它们展示给大家。</p>\n<p data-pid=\"EAuSU3Km\">不过现在我的想法也有所改变，在2023年，我想要再把各个视频平台都捡起来，按时更新，多做点科普、教程以及设计评论的内容，我相信这种对设计行业的布道工作，还是非常有必要存在的。</p>\n<p data-pid=\"tX0f9H_T\"><b>我是平面设计师oooooohmygosh，下次就让我们在得意黑之外，再次相见吧。</b></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/oooooohmygosh?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">oooooohmygosh</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/567954403/answer/2804088945?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">14 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/43513614?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">欧冠联赛官方使用的是哪种字体？</a><br><a href=\"http://www.zhihu.com/question/392296077?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">lol如何使用非常规字体?</a><br>\n","link":"http://www.zhihu.com/question/567954403/answer/2804088945?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"有奖活动丨我的书适区 · 分享无处不在的精神角落","date":"2022-12-16 09:28:53","description":"\n<p data-pid=\"eldNFZCO\">你的书架上都有哪些好书？最近一次陪你入眠的书又是哪一本？最能让你快速进入阅读状态的场景又是哪一个？面对阅读这件事，不同的阅读者，总会给出不一样的答案。你的一个不经意间的答案分享，却有可能成为另一个人爱上阅读的原点。即日起至 2023 年 01 月 13 日，参与<a href=\"https://www.zhihu.com/xen/market/ecom-page/1585721102449217537\" class=\"internal\">#我的书适区#活</a>动，分享你的私人阅读体验和经验，获官方流量扶持，有机会获得图书盲盒及新年礼盒～</p>\n<p data-pid=\"wbJnb-XL\">点击下方链接查看活动详情 ↓</p>\n<a href=\"https://www.zhihu.com/xen/market/ecom-page/1585721102449217537\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-4230d4751037e99502978275ee0f5cba_l.jpg\" data-image-width=\"750\" data-image-height=\"685\" class=\"internal\">我的书适区 ｜ 分享无处不在的精神角落</a><h3>活动一：圆桌活动</h3>\n<ul>\n<li data-pid=\"ZGRxMH58\">活动规则：活动期间在圆桌下发布 500 字以上优质原创回答，即视为成功参与！</li>\n<li data-pid=\"g7YKMS8m\">\n<b>活动奖励：</b> <b><a href=\"https://www.zhihu.com/people/0eebc9b425a88e87408729eec9f09be4\" class=\"internal\">@知乎人文</a></b> <b>将综合内容质量及赞同互动数，抽 10 位知友分别送出图书盲盒一套（每套 5 本，具体作品随机）</b>\n</li>\n<li data-pid=\"pCcg7gaq\"><b>选题参考：</b></li>\n<ul>\n<li data-pid=\"mcypKdgm\"><a href=\"https://www.zhihu.com/question/570994013\" class=\"internal\">在什么场景下你最能看得进去书？你的书适区是什么？</a></li>\n<li data-pid=\"3xFaSxWV\"><a href=\"https://www.zhihu.com/question/570994215\" class=\"internal\">你的书架长什么样？你会放哪些书在书架？为什么？</a></li>\n<li data-pid=\"3X5s_Ark\"><a href=\"https://www.zhihu.com/question/570994264\" class=\"internal\">你最近一次睡前看的书是什么？有什么枕边书可以推荐？</a></li>\n<li data-pid=\"_s3U7Dn1\"><a href=\"https://www.zhihu.com/question/30011413\" class=\"internal\">如何在地铁上优雅地看书？</a></li>\n<li data-pid=\"W_u-3lvl\"><a href=\"https://www.zhihu.com/question/570994377\" class=\"internal\">你所在的城市有什么独立书店可以推荐？</a></li>\n</ul>\n</ul>\n<p data-pid=\"wGkwDJh9\">更多选题点击 ↓</p>\n<a href=\"https://www.zhihu.com/roundtable/readingtour\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-d7792f37dc99416b7ef35075d580807d_l.jpg\" data-image-width=\"400\" data-image-height=\"400\" class=\"internal\">我的书适区｜分享无处不在的精神角落</a><h3>活动二：想法活动</h3>\n<ul>\n<li data-pid=\"_3gAuIQi\">活动规则：活动期间，带活动话题发布 3 图 140 字（含）以上原创想法，即视为成功参与！</li>\n<li data-pid=\"HXVPFOxU\">\n<b>活动奖励：<a href=\"https://www.zhihu.com/people/0eebc9b425a88e87408729eec9f09be4\" class=\"internal\">@知乎人文</a></b> <b>将综合内容质量及赞同互动数，抽 10 位知友分别送出知乎新年礼盒一份！</b>\n</li>\n<li data-pid=\"PTNO5qiH\"><b>活动话题：</b></li>\n<ul>\n<li data-pid=\"vyIXGQIO\">\n<a href=\"https://www.zhihu.com/topic/26745219/hot\" class=\"internal\">#我的书适区#</a>：分享最能让你进入阅读状态的场景！<a href=\"https://link.zhihu.com/?target=http%3A//zhi.hu/ErcO2\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">点我发布</a>\n</li>\n<li data-pid=\"bU6Ynqu_\">\n<a href=\"https://www.zhihu.com/topic/26745198\" class=\"internal\">#晒晒我的书架#</a>：分享你独一无二的书架 <a href=\"https://link.zhihu.com/?target=http%3A//zhi.hu/ErcNm\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">点我发布</a>\n</li>\n<li data-pid=\"3DnklsmA\">\n<a href=\"https://www.zhihu.com/topic/26745201\" class=\"internal\">#晒晒我的枕边书#</a>：有哪本书曾陪你入眠？ <a href=\"https://link.zhihu.com/?target=http%3A//zhi.hu/ErcNr\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">点我发布</a>\n</li>\n<li data-pid=\"wh2yoHUq\">\n<a href=\"https://www.zhihu.com/topic/25350141\" class=\"internal\">#带着这本书上班#</a>：在上班的时候都看过哪些书？分享一下 <a href=\"https://link.zhihu.com/?target=http%3A//zhi.hu/ErcNy\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">点我发布</a>\n</li>\n<li data-pid=\"T_paoi-P\">\n<a href=\"https://www.zhihu.com/topic/26745209\" class=\"internal\">#地铁上的人在读什么#</a>：在地铁上曾观察到的阅读者，他们都在读什么？<a href=\"https://link.zhihu.com/?target=http%3A//zhi.hu/ErcOI\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">点我发布</a>\n</li>\n<li data-pid=\"nOFmWulH\">\n<a href=\"https://www.zhihu.com/topic/26745212\" class=\"internal\">#无处不在的阅读者#：</a>你拍过哪些阅读的场景？拍过哪些阅读者？ <a href=\"https://link.zhihu.com/?target=http%3A//zhi.hu/ErcSA\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">点我发布</a>\n</li>\n<li data-pid=\"zRyt6v64\">\n<a href=\"https://www.zhihu.com/topic/26745213/hot\" class=\"internal\">#新书拆封#</a>：分享每一次新书拆封的快乐与期待！<a href=\"https://link.zhihu.com/?target=http%3A//zhi.hu/ErcOS\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">点我发布</a>\n</li>\n</ul>\n</ul>\n<hr>\n<p data-pid=\"IcVqK64f\"><br><b>活动小 Tips</b></p>\n<blockquote data-pid=\"rka7CYEy\">\n<b>Tip 1：什么样的内容算优质？</b><br>① 优质回答：回答字数在 500 字以上，内容原创，文字流畅，逻辑清晰，分析全面；<br>② 优质想法：想法字数在 140 字以上，并带有 3 张图（或以上），内容原创，契合话题，言之有物。<br><b>Tip 2：如果圆桌收录的问题在活动前就回答过了怎么办？更新之前的回答算活动期间的创作吗？</b><br>活动期间只统计新发布的回答，圆桌收录了丰富的问题，期待你的更多创作~<br><b>Tip 3：哪些行为会被视为无效参与？</b><br>①非原创内容或违反<a href=\"https://zhuanlan.zhihu.com/p/506696688\" class=\"internal\">《知乎社区管理规定》</a>的内容；<br>②账号在活动期间存在违反<a href=\"https://zhuanlan.zhihu.com/p/506696688\" class=\"internal\">《知乎社区管理规定》</a>的行为；<br>③通过非法途径、不正当手段（包括但不限于无意义刷字数、刷鼓掌、刷赞、作弊等）获得活动资格的用户，知乎有权取消其资格及奖励。</blockquote>\n<p data-pid=\"QeqU-F1v\">除了圆桌和想法活动之外，12 月 15 日、12 月 22 日和  12 月 29 日，还将有圆桌直播为大家奉上，记得关注知乎人文的想法公告哦～</p>\n<p data-pid=\"DS9M6Ucv\">期待看到各位的精彩创作！</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhi-hu-ren-wen?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">知乎人文</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/591598507?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"站在 2022 年，你认为增程技术的未来市场前景如何？","date":"2022-12-16 04:54:29","description":"\n<p data-pid=\"zQWx0jaG\">现在很多语境下大家刻意把插电式混动和增程分开来。</p>\n<p data-pid=\"-7tGSvai\">从技术派的角度来讲，认为插混比增程更“高级”，因为认为其使用的混动变速箱技术更为复杂，模式更为多样，特别是在高速工况方面，存在发动机直连模式避免了电流进出电池的损耗，让插电混动，尤其是多档位插电混动在动力性，尤其是高速馈电动力性方面的优势非常明显。例如前段时间长城技术高管的一些观点。</p>\n<p data-pid=\"Xbh9XokB\">而从用户体验派的角度来说，又有人认为增程式更高级，并人为将增程式与电动汽车归于一类，甚至不惜通过贬低燃油车抬高纯电动车，来顺势抬高增程式的地位。最典型的例子就是某个大嘴。</p>\n<p data-pid=\"HAiMRPSa\">与此同时还有两个怪家伙。</p>\n<p data-pid=\"cYimJEzj\">第一个怪家伙是吉利，吉利的HiP是一款插电式混合动力，但可能是市场部认为蹭增程式的热度更好，于是强行把自己的默认抬头改成了增程式。但是事实上吉利的混动就是它新的三档DHT（混动变速箱）。只不过是有增程模式，其实不过是电机功率做大，然后通过模式限制在部分条件下的高速的时候也不机械直连，从而和增程差不多。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-492d9c0f50b1d417cbd2bfdc7dcf1b4b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"817\" data-rawheight=\"427\" data-watermark=\"watermark\" data-original-src=\"v2-492d9c0f50b1d417cbd2bfdc7dcf1b4b\" data-watermark-src=\"v2-f7808c3c83b6bc07b0871b0b2966019b\" data-private-watermark-src=\"v2-7b0f86cab24cb1e19a9915e9c6216f86\"></p>\n<p data-pid=\"PC1A86Ys\">第二个怪家伙是比亚迪的单档混动DHT支持的DMI系列。比亚迪也是一直默默地说自己就是普通插混。但是经过测试之后我们发现，在80kph以下的几乎所有工况，比亚迪都是在以增程模式在运行。高速阶段增程进的比例也比较多。</p>\n<p data-pid=\"AbOYO5SA\">但是事实上增程与插混从定义上来讲仅仅只是是否存在发动机到车轮机械直连模式这么一个区别，至于其他的区别主要是由车企的电机性能配置和策略来决定的。甚至PHEV不同企业之间的结构差异都可能超过了所谓插混和增程本身的差异。</p>\n<p data-pid=\"cFAUMSrD\"><b>在国家的汽车技术趋势规划中，以节能与新能源技术路线图2.0为代表，都是将增程列为插混的一个子类来一同规划。叫插电式（含增程），我后面管这个叫做广义插混。</b></p>\n<p data-pid=\"iQPHmlU_\">所以增程未来的前景，首先是广义的插电式混动站在2022年底这个当下未来的发展趋势前景。</p>\n<h2>其结论是毋庸置疑的：整个广义的插电式混动2022年的政策地位都有了一个明显的提升机遇期，正在影响到国家对2025年行业甚至更长远未来的整体布局规划。</h2>\n<hr>\n<p data-pid=\"cqOv23O7\"><b>我国在节能与新能源汽车技术路线图2.0中，严重低估了增程式在内的插电混动技术未来的发展机会，盲目追求纯电为主的发展目标，过高估计了三电技术的迭代速度的同时，低估了中国汽车行业在动力型插电式混合动力（含增程）模式的发展机遇。</b></p>\n<p data-pid=\"DHuR5oYR\">在2020年，由工信部牵头，中国汽车工程学会牵头编制的《节能与新能源汽车技术路线图2.0》，内容中明确指出：</p>\n<p data-pid=\"1XA4nbAP\">中国新能源汽车的渗透率，2025/2030/2035的预期比例分别为：20%，40%左右和50%以上。但是同时强调，BEV（纯电动汽车）的在新能源汽车中的占比，2025/2030/2035分别为90%以上，93%以上和95%以上。</p>\n<h2>换言之，从工信部委托的中国汽车工程学会的规划角度，认为我国PHEV(含增程）在2025/2030/2035的渗透率最高只能达到2%，2.8%和2.5%！</h2>\n<p data-pid=\"Q_-dSNo8\">所以你可以想象，工信部的规划是强烈的纯电导向的政策驱动。与此同时，工信部希望在没有任何补贴的情况下，燃油车自动的向HEV混动完成节能切换。</p>\n<h2>其实这个背后最核心的一点，就是从双积分政策讨论、混动技术规划到插混/增程的规划，协助制定产业政策的官方政策智库不认可中国的节能发动机技术的发展和动力性PHEV变速箱的开发已经自己找到了中国特色的发展机遇。甚至相关组织为了将来更好的和欧洲和美国加州等地方的环保政策接轨，继续不分领域和应用场景的推进纯电导向的产业政策。</h2>\n<p data-pid=\"k_aBXBAR\">例如目前还在草案阶段的2024-2025 新双积分法规草案，2025年纯电动的实际销量只要做到企业销量的20%甚至以下就可以达标，但是如果做插混，就必须做到38%以上才能达标。</p>\n<hr>\n<h2>2021年底到2022年，随着纯电补贴力度的下滑和政府财政受限，中国市场的客户用脚投票，把中国的广义插混的市场做大了，甚至可以说已经达到了官方不得不正视的角度。</h2>\n<p data-pid=\"lZDllcyx\">以比亚迪DMI为代表的高性价比插混就不用说了。目前采用的是插混价格比合资品牌的同级别燃油SUV还要便宜1-2万，靠售价、混动动力性和使用经济性来弥补品牌和整车其他品质方面和合资品牌的差距。特别是依靠比亚迪产业链的价格优势得到了当前经济环境下很多年轻用户的支持。中国的广义插混也在比亚迪DMI的支撑下首次实现了增长比例远超过纯电的发展现象。</p>\n<p data-pid=\"fspsXMfu\">此外，随着纯电动汽车遇到的安全、元素危机、使用环境问题以及主干电网脱碳等无法解决的问题，通过增程来兼容纯电平台，并可以使用稀缺元素更少的化学体系和整车带电量更少却又能实现更大续航里程的增程方案事实上是中国这个大国非常有前途的一种技术。</p>\n<p data-pid=\"8HR7FUBt\">而且增程方面在机械方面确实是“更加简单”，从机械优化转向了软件策略优化，也更加需要车路协同能耗算法来进行规划，反过来说算法的自由度和节能机会会更大。从硬件的角度来说，技术门槛也更低，不需要再花10-15年重新去打磨一款新的混动变速箱。</p>\n<p data-pid=\"VjXcUEk4\"><b>更加重要的是：无论是基于碳中性燃料的高热效率发动机还是基于燃料电池的方案，都可以直接集成到增程平台之中（燃料电池车本质上就是增程式的车子，只不过把发动机换成了电堆）。我认为包括国家的一些官方智囊咨询机构在内的组织将增程方案视作是一种短期过度方案是一种短视和非常傲慢的做法。</b></p>\n<h2>虽然现在代表增程的个别网红负责人脑子和嘴确实有问题，但是技术和市场是无罪的啊！</h2>\n<hr>\n<p data-pid=\"kudQMAn7\">最后，如我在另一个回答中提到的：</p>\n<p data-pid=\"T57fufq-\"><b>“下一波经济危机的趋势是所有车企将会面临的巨大浪潮，而且它将永久性的改变未来5-10年的市场格局。在我看来，技术梦想时期，或者浮华的技术泡沫黄金时代已经到了崩溃终结的边缘。现实主义和低欲望时代消费文化的浪潮的浪尖已经出现在海天相接之初。我们所熟悉的时代即将终结。对2023-2024年的所有问题的看法，都必须要站在这个角度上，重新审视。”</b></p>\n<p data-pid=\"qkF-H8Cp\"><a href=\"https://www.zhihu.com/question/436315339/answer/2792046412\" class=\"internal\">蔚来、理想、小鹏三家新势力造车公司，哪家最有可能先倒下？</a></p>\n<p data-pid=\"Um2p7mxM\"><b>面对更加不确定和经济预期低迷的未来，动力多元化和更加实际的广义动力型插混的发展前景其实是更加广阔的。特别是在中国的市场环境下，未来广义插电式混动通过200km以上的大电池方案，可以实现兼容能量型EV电池的方案（传统PHEV电池由于需要支持大倍率放电，所以是功率型电池，或叫功率能量兼容型电池，成本高于EV的电池），可以实现更低的成本。所以这样的组合未来一方面可以抢夺EV的市场，另一方面还可以抢夺原本国家留给HEV的市场。</b>（工信部规划逐步发展，最终在2035实现HEV 100%取代纯燃油车，但是目前这个发展已经严重滞后了。主要原因就是双积分政策的畸形奖励机制，再多写下去这篇文章就没了）</p>\n<hr>\n<h2>今年年底，负责路线图2.0的官方智库以及中汽研还有工信部的相关人员在解读路线图2.0的发展与九大技术领域进展更新的时候，已经不再将BEV占新能源汽车占比的规划写在书面报告中了。这就是一个好的趋势，尽管我们还有很多很多政策需要继续拨乱反正，还有更多的架需要去吵，还有很多官方的朋友们和校友们要因为争吵而断绝关系，但是没办法，这些民众们不知道，但是在直接影响我国动力系统技术路线趋势的争吵包括但不限于：</h2>\n<ol>\n<li data-pid=\"2irn1VJb\">\n<b>行业迫切呼吁取消CLTC，不要使用CLTC来考核包括纯电在内的所有动力形式的能耗和排放。</b>全部改为WLTC。CLTC的能耗考核严重虚标，强烈倾向纯电能耗严重低估，导致国家碳排放政策计算无效。此外RDE和国七排放可能按照CLTC考核的大棒之下，国内车企在浪费大量的资金双倍投入研究中国特殊的考试规范，无法低成本借鉴国外WLTC的开发经验。<b>目前国内所有车企，都明确而强烈的建议工信部和环保部门，坚定明确的反对CLTC，特别是将CLTC作为排放考核工况。这就是典型的劳民伤财，而且在人为的提高包括混动和增程式在内的下一代基于发动机的动力系统的开发难度和开发成本！</b>\n</li>\n<li data-pid=\"WGACGoXH\">\n<b>行业研究如何更好的定义和实施RDE工况，并希望相关部门给出一个明确、简洁的国七排放规划和细则</b>；</li>\n<li data-pid=\"-Tl2h7Tn\">\n<b>2023年后应当全面取消双积分，全部改为考核车辆实际的碳排放积分，将基于WLTC的电耗和电池制造碳排放纳入考核范围，实现不区分动力形式，公平考核碳排放积分</b>；</li>\n</ol>\n<h2><b>后续我们如果能够吵赢上面几个大架中的1-2个，那么增程的市场机会前景还是非常值得期待的。</b></h2>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/JackyQ?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">JackyQ</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/569728284/answer/2793524950?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">61 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/523543709?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">大疆公司在 5G 技术方面的应用如何？</a><br><a href=\"http://www.zhihu.com/question/546185630?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">5G 技术的融合对自动驾驶技术发展有何意义？</a><br>\n","link":"http://www.zhihu.com/question/569728284/answer/2793524950?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"2023 年整个汽车行业预计会发生哪些变化？","date":"2022-12-16 04:42:12","description":"\n<p data-pid=\"6bCntq3b\">在汽车电动化的整体环境下，大家最容易忽略的就是传统车企。许多网友认为传统车企是以内燃机技术为立足根基，市场电动化水平足够高以后，传统车企肯定要慢慢退出汽车市场的舞台中心。还有一些网友认为，电动车代表着更好的驾驶感受和更好的经济性，所以电动车取代传统汽油车的速度会越来越快。但事实并非如此：</p>\n<p data-pid=\"O-iBROTw\">第一，传统车企不仅以内燃机为核心技术，传统车企手中有大量的资本和技术，其中包括混动技术、电机技术和底盘技术等等，这些是市场仍然需要的技术；</p>\n<p data-pid=\"mqx91zZU\">第二，电动车的经济性未必比内燃机汽车更高、驾驶体验更好；</p>\n<p data-pid=\"XWjcr4iW\">第三，电动车目前还有很多问题有待解决。</p>\n<p data-pid=\"nUUKgOq3\">综合刚才我提到的传统车企的优势、电车发展需要克服的问题来看，2023年汽车市场的竞争将会是多元化、多维度的，除了电动车和燃油车之争，还会有大量车企用混动方案来参与竞争；除了车企和车企竞争，车企内部的不同汽车部门可能也会有竞争；在产品层面，即便是品类最老的燃油车，可能也会和电车一样推出新技术，带给消费者新惊喜。</p>\n<p data-pid=\"qby4zHmF\">再考虑到近期部分车企的动作，可以预料到2023年的汽车市场将会有以下几个方面的关注点：</p>\n<p data-pid=\"ocqv6gL1\"><b>第一，2023年内燃机面对电动化绝不坐以待毙，有多种参与竞争的方式</b></p>\n<p data-pid=\"UxJYYq-t\"><b>（1）2023年燃油车将持续释放内燃机的“牙膏”，不断提升加速性能和经济性</b></p>\n<p data-pid=\"BZoIG54p\">尽管许多人认为内燃机的热效率提升已经接近某种程度上的上限，但实际上燃油车的发动机还有很多工作可以做，并且许多传统汽车企业一直以来都在用一些并非最先进的发动机来应付市场，在电动化的趋势下，汽油车也没必要将技术藏着掖着了，许多厂商发动机换代明显更积极了，特别是在小排量发动机方面。</p>\n<p data-pid=\"lu07jDjv\">大众方面，一汽大众宝来起步搭载1.2T+DSG干式双离合来替代原先1.5L+6AT这套老旧的方案。尽管老方案以成熟稳定为名，但是新方案在加速性能、经济性上有更好的综合表现，可以将EA211 1.2T看做是1.4T的缩缸版；速腾也将1.4T发动机换装为了1.5T发动机。</p>\n<p><img src=\"https://picx.zhimg.com/v2-31e1ad71c61c75f050d3cf71f6ee3250_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"800\" data-watermark=\"original\" data-original-src=\"v2-31e1ad71c61c75f050d3cf71f6ee3250\" data-watermark-src=\"v2-7ae52c4acf259be910e1095a490b801d\" data-private-watermark-src=\"v2-458b0d74f030cf81e664aff80d47bf9a\"></p>\n<p data-pid=\"EyI15qau\">通用方面，别克昂扬采用了1.5T发动机+钢链式CVT的组合，尽管为八代Ecotec中的低功率版本，百公里加速均破8s，落地价在15万以内。要知道目前这个价位的电动车并没有什么加速性能可言，例如根据懂车帝实测，比亚迪海豚纯电百公里加速10.9秒，很难说它有什么驾驶体验上的优势。</p>\n<p><img src=\"https://picx.zhimg.com/v2-253c5e78810fe9610271bcd1de22bb1f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"830\" data-rawheight=\"1246\" data-watermark=\"original\" data-original-src=\"v2-253c5e78810fe9610271bcd1de22bb1f\" data-watermark-src=\"v2-cada8d0dd051a5a2c35af72e87f5babd\" data-private-watermark-src=\"v2-a171e28324e9db24043d8b58eb5db7c4\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-10d16a9d4aeca2ee317b6c14dc0d0d9d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"525\" data-watermark=\"original\" data-original-src=\"v2-10d16a9d4aeca2ee317b6c14dc0d0d9d\" data-watermark-src=\"v2-af704d875911decc9d06be3fb26ed35b\" data-private-watermark-src=\"v2-36908538c2a9d6202eb6283ffc5381bb\"></p>\n<p data-pid=\"qEJkREgC\">并且凯迪拉克CT4也增加了1.5T小排量涡轮增压方案，仍然是一台纵置发动机平台+后驱的汽油车，豪华属性和可玩性还是具备的，势必会影响到一部分消费者的选择。</p>\n<p data-pid=\"9JJnWePQ\">国产品牌艾瑞泽8采用1.6T发动机+7速双离合变速箱，这个价位的国产汽油车在加速性能上并不会被同价位电车甩多远，而且维修保养费用也很便宜，在这个价位里面汽油车通过更新发动机、变速箱方案，目前还是在电车面前有很强的竞争力。</p>\n<p data-pid=\"GPqEIluI\">所以2023年应该能看到的是汽油车的价格在不升高甚至下降的情况下，燃油车发动机换代可能会更多，加装辅助驾驶等高配车型优惠也会更多，把牙膏挤一挤，燃油车还有更多竞争力可以释放出来。</p>\n<p data-pid=\"cH1VTu_1\"><b>（2）2023年传统车企将加快混动技术建设，插电式混动和增程式均为主流方案</b></p>\n<p data-pid=\"AggOjsqV\">打开任何汽车销量排行榜都能看到轩逸的身影，被诸多司机吐槽的“马路大妈”实际上已经做到了三世同堂销售了。经典轩逸、新轩逸和轩逸e-Power同时都有在售，轩逸e-Power采用的是纯粹的串联式“发动机-电池-电机”的增程式方案，只不过其采用的是快充快放的电池方案，并不支持插电供电，在使用上和理想汽车早期的增程式方案略有区别，但采用这种方法，轩逸也算赶上了新能源的市场。</p>\n<p data-pid=\"QMJhAzks\">目前卡罗拉双擎、雷凌双擎、理想增程式汽车、问界汽车都是采用了增程式方案，目前来说增程式技术还有一定发展的空间，所以2023年应该还会看到增程类车型出现，且主要为传统汽车企业或者汽车集团制造。</p>\n<p data-pid=\"9s0T7XUA\">而插电式混动则似乎更有可能成为长久发展的方向，可能没有任何燃油车企业不想拿出成熟的插电式混动汽车。<b>特别是在新能源市场中，PHEV占比22.8%以上，而且有一定的增长迹象。</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-ab44fe02e444d0c442b44102d1ed24d5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"941\" data-watermark=\"original\" data-original-src=\"v2-ab44fe02e444d0c442b44102d1ed24d5\" data-watermark-src=\"v2-d04320ed2359f32cf804c8695a6aea97\" data-private-watermark-src=\"v2-790ebd523892fb8560f36aacc3aea7ac\"></p>\n<p data-pid=\"iASWesuZ\">2022年比亚迪预计拿下了过百万的汽车销量，其中有一半以上都是插电式混动（PHEV）车型，除了比亚迪，国内非常有潜力的车企就是吉利和长城，不论是吉利的雷神混动还是长城的DHT混动技术，在原理和水平上都接近了比亚迪的DM技术，目前以量产车来说，吉利混动技术的缺点是比起比亚迪混动在馈电情况下油耗稍高，但经济性和加速性能都在普通燃油车之上，所以2023年国产品牌特别是吉利、长城继续推出的混动车型，应该会在市场上有竞争力。</p>\n<p><img src=\"https://picx.zhimg.com/v2-695d5a631c841b038cf06e2bf9f6531b_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"394\" data-watermark=\"original\" data-original-src=\"v2-695d5a631c841b038cf06e2bf9f6531b\" data-watermark-src=\"v2-67e8f1f5378c3bd1db94cc230796d8e6\" data-private-watermark-src=\"v2-8872de9bca1c12c5c0436ca5801b0760\"></p>\n<p data-pid=\"x5Ea8bNX\">除此以外，国外品牌例如大众早就有采用PHEV技术，今年大众ID系列上市，明年大众也未必不会推广一波自家的PHEV车型，特别是B级车型中迈腾PHEV、帕萨特PHEV都是很有看头的，目前商务B型车还很缺少新能源汽车来填场子。商务汽车大多以汽油车为主，电动B、C级车大多造型偏向于运动时尚，因此大众PHEV还是有市场继续发展的空间的。</p>\n<p data-pid=\"92ljkeL9\"><b>第二，“纯电平台”才是真电车，它也不是新势力独享，2023年可能会有更多传统车企加入纯电平台，但也会有传统车企被抛下</b></p>\n<p data-pid=\"39Qs2XNQ\">前不久某短视频平台上，某消费者购买奔驰EQC被销售嘲笑事件就引起了热议。最近宝马i3大降价也一样引起热议。原因很简单，奔驰EQC和宝马i3都是基于原先的GLC、3系油车平台进行改造而来，不仅电池只能挂在底盘下、而且电机舱布线相对杂乱、需要增加副车架保证安全等，续航短、底盘侧面强度未单独加强、操纵性相对平台原产品较差，都是“油改电”平台的共同问题。</p>\n<p><img src=\"https://picx.zhimg.com/v2-41966bccdb24d644a38b3875055dc590_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"852\" data-rawheight=\"479\" data-watermark=\"original\" data-original-src=\"v2-41966bccdb24d644a38b3875055dc590\" data-watermark-src=\"v2-cd149e6ff9c035b45cf39b462211d67b\" data-private-watermark-src=\"v2-c608b1459af1aa2b94a9e06343d2fde9\"></p>\n<p data-pid=\"nA7T637r\">但是不是传统汽车都在做油改电产品呢？并不是。纯电平台的最大意义就是安全性、操作性和经济性具备优势。例如目前都在广泛追求的CTC电池底盘一体化技术，是将电池嵌入底盘中，拥有更好的电池空间与容量、拥有更好的电池防护性，以及更好的底盘滤震以及驾控指向性。所以纯电平台指的是车身、底盘的技术，这些对精通于底盘调教的传统车企来说是有优势的。</p>\n<p data-pid=\"yjfoblt7\">例如大众推出的ID系列，采用了模块化电力驱动架构——MEB，以及全面步入纯电平台，不论是ID3、ID4还是ID6，都拥有非常不错的车身稳定性和驾控感受。</p>\n<p><img src=\"https://picx.zhimg.com/v2-2460fd7b4bd5d7623b66fd9f6fda0047_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"356\" data-watermark=\"original\" data-original-src=\"v2-2460fd7b4bd5d7623b66fd9f6fda0047\" data-watermark-src=\"v2-6ee4bec809e6dc9126fde742e087eb97\" data-private-watermark-src=\"v2-5c0ac52e575a52db843baada1f53766b\"></p>\n<p data-pid=\"7evZIDzJ\">国内吉利下品牌极氪产品极氪001也是一款非常不错的纯电平台车，拥有双A型摆臂系统（结构），四球节多拉杆系统（结构）作为底盘支撑，不论是电池安全性、续航还是驾控体验都不错。</p>\n<p data-pid=\"jf0kOBk9\">包括一直都在发展混动技术的比亚迪，今年也推出了纯电平台车型比亚迪海豹和海豚。传统车企已经告诉大家，传统车企一样能造好纯电车型。</p>\n<p data-pid=\"Lc143XnT\">但是，目前来说，真正能将纯电平台甚至是CTC技术做好的车企并不多，许多车企目前纯电车型都没有太多上市产品，部分车企甚至采用贴牌代工方式出品纯电车型，这些传统车企未必能在2023年就赶上纯电平台的市场节奏，有被抛弃的危险。</p>\n<p data-pid=\"Lyo-xQ0G\"><b>第三，2023年，大多数纯电车型的制造企业都会去想两个问题：安全性、豪华性；而特斯拉或许反其道而行，走向更加简约化的风格、触及更低价的市场。</b></p>\n<p data-pid=\"cvcBA3sI\">相比于大众对电动车的诉求是：更长的续航，更便宜的价格，实际情况可能是更注重安全性的电车、更贵的电车会充斥市场。相比于自动驾驶、电池材料技术这些高精尖的技术，在可见的2023年里，电动车应该需要一段市场来利用传统造车技术来优化自身的产品质量。</p>\n<p data-pid=\"ND8bdIJV\"><b>（1） 安全性提升</b></p>\n<p data-pid=\"acb0ovr7\">不论是电动车碰撞着火、电车自燃都是电动车消费群体很关心的问题。目前关于电车安全性的讨论也上到了一个非常高的高度，在大部分人都认为自动驾驶短期不能替代人类的前提下，大家自然将目光放在了电池这个新要素身上。除了CTC技术中对底盘和B柱等进行加强，电源管理技术和阻燃技术也都是目前提升电车安全性的重点。</p>\n<p><img src=\"https://picx.zhimg.com/v2-c7511043f7a60555ab87e3a5a08a363c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"329\" data-watermark=\"original\" data-original-src=\"v2-c7511043f7a60555ab87e3a5a08a363c\" data-watermark-src=\"v2-6dc1532cba4b76ab308ce017cd5e8e85\" data-private-watermark-src=\"v2-b598ce12240309e5093d85b86941272a\"></p>\n<p data-pid=\"SoAJ8bW9\">广汽埃安的弹匣电池、比亚迪刀片电池，都是提升电池安全性的重点，未来一些其他汽车品牌也有可能会使用比亚迪的刀片电池。</p>\n<p><img src=\"https://picx.zhimg.com/v2-65d1c2b804f8b3432aba45b29de8da2a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"291\" data-watermark=\"original\" data-original-src=\"v2-65d1c2b804f8b3432aba45b29de8da2a\" data-watermark-src=\"v2-1046ae759fe1bc8f532d92b60fc3770a\" data-private-watermark-src=\"v2-d3bc52e41964e30793f85849a35275df\"></p>\n<p data-pid=\"_jf3Mk3Y\"><b>（2）抢占豪华市场</b></p>\n<p data-pid=\"1MePXFYR\">而豪华性更不用说，虽然主打服务和豪华的电车品牌蔚来宣称自己每卖一台车就要亏13万，但是从实际的市场反馈来看，豪华也未必不能是电车的一种属性。</p>\n<p data-pid=\"1bTBQq8y\">甚至可见的奔驰、宝马这些传统豪华品牌，也都在着急忙慌地想挤入纯电豪华车的世界里。极氪001和极氪009更是凭借着出色的产品力和商务定位，慢慢占领电动豪华的市场。所以不论是“油改电”还是纯电平台，所有车企都不想在比赛初期就丢掉豪华市场的蛋糕。</p>\n<p><img src=\"https://picx.zhimg.com/v2-d197840b7734f15b651977ade6169baa_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"687\" data-rawheight=\"693\" data-watermark=\"original\" data-original-src=\"v2-d197840b7734f15b651977ade6169baa\" data-watermark-src=\"v2-b4ebafd871aa51210c5e8d405c3815fa\" data-private-watermark-src=\"v2-5726ccf745e746dbf5c0abbd7bf948d2\"></p>\n<p data-pid=\"qAyUdxIR\">而豪华车最经不起的就是反复贬值。经典的豪华车案例就是丰田阿尔法、丰田塞纳，靠着稳定的价格和保值率成为豪华车中名气非常大的产品。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-a7ad8c54cb6a089723b7e7d3f139bdf9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"759\" data-rawheight=\"399\" data-watermark=\"original\" data-original-src=\"v2-a7ad8c54cb6a089723b7e7d3f139bdf9\" data-watermark-src=\"v2-80801f1523c6caeb7065d5290097acb7\" data-private-watermark-src=\"v2-aa68bac384c98106e3fe298cf8ef8b20\"></p>\n<p data-pid=\"sOsXSoBR\">之所以能在2023年开启电车豪华车的竞争，也是因为电车技术趋于稳定进步的时期，电车技术并不会出现特别快速的更迭，给电车上装上更好的空气悬架、灯条、内饰以及更强的车身，并不会因为电池衰减或者电机加速性能被淘汰了让一台数十万的产品成为落伍产品。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-3c5d6c54eaf48a67f17300ea0785bd0a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1128\" data-rawheight=\"675\" data-watermark=\"original\" data-original-src=\"v2-3c5d6c54eaf48a67f17300ea0785bd0a\" data-watermark-src=\"v2-cd681bcfcfcb43a4fe793a6efe0e0928\" data-private-watermark-src=\"v2-0ebff66badd64812037f6b310e0c028f\"></p>\n<p data-pid=\"Rzsfefu1\">所以在目前的市场里，抢占豪华市场就是一种主流节奏，特别是目前整体售价偏低的比亚迪、吉利、长城这些国内传统汽车品牌，一定会在2023年持续冲击三十万以上的汽车市场。</p>\n<p data-pid=\"kZpn4fCe\"><b>（3）特斯拉或将推出代号Model Q的入门电车车型</b></p>\n<p data-pid=\"jv4_TYQh\">作为电车行业的大佬之一，特斯拉汽车的利润率是很高的，其第三季度净利润为32.9亿美元，已经超过了销量远高于自身的传统汽车大佬丰田。所以特斯拉不仅汽车有降价空间，也有能力去入门市场推出更容易走量的入门车型了。</p>\n<p><img src=\"https://pica.zhimg.com/v2-4a494d5971d367c727d546689fc11db9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"744\" data-watermark=\"original\" data-original-src=\"v2-4a494d5971d367c727d546689fc11db9\" data-watermark-src=\"v2-18462ac7959ee2fa308d457eabd6f441\" data-private-watermark-src=\"v2-6dc3df901a8c8d308c9b2d2ce87146a3\"></p>\n<p data-pid=\"N8Fd1Dr_\">有传言2023年特斯拉将推出价格15万左右的入门电动车Model Q，实际的产品力应该对标大众ID3，具备纯电平台，标称续航350Km以上，具备10s内百公里加速是显然能具备的素质，最重要的是，具备特斯拉的AP辅助驾驶，所以应该会有较强的产品竞争力。如果Model Q相应推出长续航版本或者是稍高性能版本，将续航提升到450Km左右或者是将加速提升到7s内，将会在20万以内的电车市场上掀起一定的波澜。</p>\n<p><img src=\"https://picx.zhimg.com/v2-0cb2a1257c3a84d8f37f4db97e3bb3e7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"358\" data-watermark=\"original\" data-original-src=\"v2-0cb2a1257c3a84d8f37f4db97e3bb3e7\" data-watermark-src=\"v2-6c42d8b358b53e96d83aea3586481919\" data-private-watermark-src=\"v2-28541714f9463410f1a285da4c04e152\"></p>\n<p data-pid=\"5itRyCnF\"><b>总的来说，2023年的汽车市场里，汽车企业想多抛头露面，只能“卷”起来了。燃油车要把最新的发动机技术拿出来，混动技术仍然是成为燃油车转型的重要方向。电动车需要向纯电平台或者CTC技术看齐，头部厂商在追击30万以上纯电豪华车领域的同时，也要谨防特斯拉或对入门级市场的席卷。</b></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/kong-jiong-53?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">不爱发言的孔老师</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/568629776/answer/2780454989?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">97 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/569772962?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2023年的汽车行业发展趋势如何？</a><br><a href=\"http://www.zhihu.com/question/571336065?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2023年整个汽车行业可能会有哪些改变？</a><br>\n","link":"http://www.zhihu.com/question/568629776/answer/2780454989?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"什么年代还在用传统 Pjax? —— 自定义 Pjax 提升页面加载速度","date":"2022-12-15 04:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>Hexo 属于静态博客，很多同学给自己的博客加上 Pjax 是为了音乐播放器等功能不中断。</p>\n<p>之前我也想过对博客和主题加入 Pjax 支持，但经过一番分析后觉得，这不仅引入了一个巨大的 <code>jquery.pjax.js</code>，反而优化效果不明显。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8E%9F%E7%90%86\" class=\"headerlink\" title=\"原理\"></a>原理</h2>\n<p>其实，Pjax 的原理并不复杂。或许说，README 一开始就告诉你了：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">pjax = pushState + ajax</span><br></pre></td></tr></table></figure><p>其中 <code>ajax</code> 用于页面的新内容，<code>pushState</code> 改变浏览器状态。</p>\n<p>很简单吧。</p>\n<p>事实上，<code>pjax</code> 并不应该应用于整个页面当中。而应该只是局部更改。</p>\n<p>这样，Blog 当中的导航栏、样式文件等就不需要重复下载与预览。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%88%86%E6%9E%90\" class=\"headerlink\" title=\"分析\"></a>分析</h2>\n<p>以我使用 Miracle 为主题的博客为例，进入首页，按 <code>F12</code> 查看页面 Elements.</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.18/rawimg/2022-12-15_12-32-37.png\"></p>\n<p>可以发现，页面主要更改的也就是 <code>#page-main</code> 部分，只需要实现动态刷新这部分的内容就可以了。</p>\n<p>那怎么实现呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%B0%8F%E5%8C%96%E7%9A%84%E6%95%B0%E6%8D%AE%E6%8E%A5%E5%8F%A3\" class=\"headerlink\" title=\"最小化的数据接口\"></a>最小化的数据接口</h2>\n<p>现在生成的页面当中，有 <code>&lt;head&gt;</code> 部分声明大量样式与元信息，<code>&lt;body&gt;</code> 之下重复的页脚、导航栏，还有每个页面下方都有的一些 <code>&lt;script&gt;</code>。</p>\n<p>很明显，我们不需要这些。我们只要 <code>#page-main</code> 中的主要内容。</p>\n<p>最重要的是，Hexo 是静态博客，这一点只能在生成文件时进行。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%BD%BD%E5%85%A5-HTML\" class=\"headerlink\" title=\"载入 HTML\"></a>载入 HTML</h3>\n<p>我是用 Cheerio 模块帮我完成这一工作。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> cheerio = <span class=\"built_in\">require</span>(<span class=\"string\">'cheerio'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">\"path\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> filePath = path.resolve(<span class=\"string\">'public/'</span>);</span><br></pre></td></tr></table></figure><p>定义一个 <code>parse function</code>，打开文件并解析相关信息，顺便把不是 HTML 的文件排除掉。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> parse = <span class=\"function\">(<span class=\"params\">filename, fullpath</span>) =&gt;</span> {</span><br><span class=\"line\">    <span class=\"comment\">// 不是 .html 我不要</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!filename.endsWith(<span class=\"string\">\".html\"</span>)) {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>然后通过 Cheerio 解析 HTML:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">{...</span><br><span class=\"line\">  <span class=\"comment\">// 组合新文件名</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> filepath = fullpath+<span class=\"string\">\".page.json\"</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 读取文件内容</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> pageContent = fs.readFileSync(fullpath).toString();</span><br><span class=\"line\">  <span class=\"comment\">// 解析页面内容</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> $pg = cheerio.load(pageContent);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> rtData = {};</span><br><span class=\"line\">...}</span><br></pre></td></tr></table></figure><p>然后获取页面的标题和 <code>#page-main</code> 下的 HTML.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">{...</span><br><span class=\"line\"><span class=\"comment\">// 页面标题</span></span><br><span class=\"line\">    rtData.title = $pg(<span class=\"string\">\"title\"</span>).text();</span><br><span class=\"line\">    <span class=\"comment\">// OR $pg(\"#page-main\").html()</span></span><br><span class=\"line\">    <span class=\"comment\">// 我这么写是因为主题 #page-main 下还有 script 无法执行</span></span><br><span class=\"line\">    rtData.page = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">    &lt;div class=\"mg-top\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        <span class=\"subst\">${$pg(<span class=\"string\">\".mg-top\"</span>).html() || <span class=\"string\">\"\"</span>}</span></span></span><br><span class=\"line\"><span class=\"string\">    &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;footer class=\"text-center\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        <span class=\"subst\">${$pg(<span class=\"string\">\"footer\"</span>).html() || <span class=\"string\">\"\"</span>}</span></span></span><br><span class=\"line\"><span class=\"string\">    &lt;/footer&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;div class=\"p-btn\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        <span class=\"subst\">${$pg(<span class=\"string\">\".p-btn\"</span>).html() || <span class=\"string\">\"\"</span>}</span></span></span><br><span class=\"line\"><span class=\"string\">    &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">    `</span>;</span><br><span class=\"line\">    rtData.path = filename;</span><br><span class=\"line\">...}</span><br></pre></td></tr></table></figure><p>页面中还有一些 <code>script</code>，比如阅读进度、懒加载等。所以需要一个 <code>extraJS</code> 放置额外的 Script.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">{...</span><br><span class=\"line\">    rtData.extraJS = []</span><br><span class=\"line\">    <span class=\"comment\">// 只解析 #page-main 下的 script</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> $pageMain = cheerio.load($pg(<span class=\"string\">\"#page-main\"</span>).html());</span><br><span class=\"line\">    $pageMain(<span class=\"string\">'script'</span>).map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">i, el</span>) </span>{</span><br><span class=\"line\">        <span class=\"comment\">// 尝试往 extraJS 中 push 相关代码</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> {rtData.extraJS.push($pageMain(<span class=\"built_in\">this</span>)[<span class=\"number\">0</span>].children[<span class=\"number\">0</span>].data);} <span class=\"keyword\">catch</span>(e) {}</span><br><span class=\"line\">        $pageMain(<span class=\"built_in\">this</span>).remove();</span><br><span class=\"line\">    });</span><br><span class=\"line\">...}</span><br></pre></td></tr></table></figure><p>最后，将 JSON 写入文件中。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">{...</span><br><span class=\"line\">    fs.writeFileSync(filepath, <span class=\"built_in\">JSON</span>.stringify(rtData));</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E4%BB%B6%E9%80%92%E5%BD%92\" class=\"headerlink\" title=\"文件递归\"></a>文件递归</h3>\n<p>我们还需要一个函数递归 <code>public</code> 目录下的所有文件，这个不用多说。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fileDisplay</span>(<span class=\"params\">filePath</span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 根据文件路径读取文件，返回文件列表</span></span><br><span class=\"line\">    fs.readdir(filePath, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, files</span>) </span>{</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.warn(err, <span class=\"string\">\"读取文件夹错误！\"</span>)</span><br><span class=\"line\">        } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">            <span class=\"comment\">// 遍历读取到的文件列表</span></span><br><span class=\"line\">            files.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">filename</span>) </span>{</span><br><span class=\"line\">                <span class=\"comment\">// 获取当前文件的绝对路径</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> filedir = path.join(filePath, filename);</span><br><span class=\"line\">                <span class=\"keyword\">var</span> fullname = filedir.split(<span class=\"string\">\"public\"</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\">                fs.stat(filedir, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">eror, stats</span>) </span>{</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (eror) {</span><br><span class=\"line\">                        <span class=\"built_in\">console</span>.warn(<span class=\"string\">'获取文件 Stats 失败!'</span>);</span><br><span class=\"line\">                    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> isFile = stats.isFile(); <span class=\"comment\">// 是文件</span></span><br><span class=\"line\">                        <span class=\"keyword\">var</span> isDir = stats.isDirectory(); <span class=\"comment\">// 是文件夹</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (isFile) {</span><br><span class=\"line\">                            parse(fullname, filedir);</span><br><span class=\"line\">                        }</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (isDir) {</span><br><span class=\"line\">                            fileDisplay(filedir); <span class=\"comment\">// 递归，如果是文件夹，就继续遍历该文件夹下面的文件</span></span><br><span class=\"line\">                        }</span><br><span class=\"line\">                    }</span><br><span class=\"line\">                });</span><br><span class=\"line\">            });</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br><span class=\"line\">}</span><br><span class=\"line\">fileDisplay(filePath);</span><br></pre></td></tr></table></figure><p>最后运行这个 Node.js 文件，就可以看到 <code>public/</code> 目录下多出很多 <code>***.page.json</code> 文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84\" class=\"headerlink\" title=\"基本结构\"></a>基本结构</h3>\n<p>这些文件内容也很简单，基本如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">    <span class=\"comment\">// 页面的标题</span></span><br><span class=\"line\">    <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"Hello World\"</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 内容</span></span><br><span class=\"line\">    <span class=\"attr\">\"page\"</span>: <span class=\"string\">\"...\"</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 路径</span></span><br><span class=\"line\">    <span class=\"attr\">\"path\"</span>: <span class=\"string\">\"/foo/bar\"</span>,</span><br><span class=\"line\">    <span class=\"comment\">// JS</span></span><br><span class=\"line\">    <span class=\"attr\">\"extraJS\"</span>: ['alert(<span class=\"string\">\"Hello World\"</span>);']</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E7%AB%AF-pjax-js\" class=\"headerlink\" title=\"前端 pjax.js\"></a>前端 <code>pjax.js</code>\n</h2>\n<p>新建一个 <code>pjax.js</code>。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%9B%BF%E6%8D%A2%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"替换链接\"></a>替换链接</h3>\n<p>我们需要先将页面当中所有本站链接转为 Pjax 的 Jump 函数。</p>\n<p>判断条件是：有链接，不带 hash，且为本站链接</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 转换页面中的链接为 Pjax 链接</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> $pjax_convertAllLinks = <span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\"><span class=\"comment\">// 所有的 a 标签</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> linkElements = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">of</span> linkElements) {</span><br><span class=\"line\">        <span class=\"comment\">// 有链接，不带 hash，且为本站链接</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i.href &amp;&amp; !i.href.includes(<span class=\"string\">\"/#\"</span>) &amp;&amp; (i.href.startsWith(<span class=\"string\">\"/\"</span>) || i.href.match(<span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"built_in\">window</span>.location.hostname)))) {</span><br><span class=\"line\">            <span class=\"keyword\">let</span> thisLink = <span class=\"keyword\">new</span> URL(i.href).pathname+<span class=\"keyword\">new</span> URL(i.href).hash;</span><br><span class=\"line\">            i.href = <span class=\"string\">`javascript:$pjax_jump('<span class=\"subst\">${thisLink}</span>');`</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>另外，要转化页面链接为全路径。</p>\n<p>这里参考了下 ChenYFan 的 Service Worker 函数，需要根据实际情况做出调整。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 转换路径为全路径</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> $pjax_fullpath = <span class=\"function\">(<span class=\"params\">path</span>) =&gt;</span> {</span><br><span class=\"line\">    path = path.split(<span class=\"string\">'?'</span>)[<span class=\"number\">0</span>].split(<span class=\"string\">'#'</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (path.match(<span class=\"regexp\">/\\/$/</span>)) {</span><br><span class=\"line\">        path += <span class=\"string\">'index.html'</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!path.match(<span class=\"regexp\">/\\.[a-zA-Z]+$/</span>)) {</span><br><span class=\"line\">        path += <span class=\"string\">'/index.html'</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> path;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// $pjax_fullpath('/') =&gt; /index.html</span></span><br></pre></td></tr></table></figure><h3>\n<a href=\"https://blog.yfun.top/#%E8%B7%B3%E8%BD%AC\" class=\"headerlink\" title=\"跳转\"></a>跳转</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 跳转页面</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> $pjax_jump = <span class=\"keyword\">async</span> (path) =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">try</span> {</span><br><span class=\"line\">        <span class=\"comment\">// 是 # 就别跳转了</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (path.startsWith(<span class=\"string\">\"#\"</span>)) {</span><br><span class=\"line\">            <span class=\"built_in\">window</span>.hash = path;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"comment\">// 加载动画</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> loading = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'div'</span>);</span><br><span class=\"line\">        loading.innerHTML = <span class=\"string\">`&lt;div style=\"position: fixed;top:0;left:0;z-index:99999;display: block;width: 100%;height: 4px;overflow: hidden;background-color: rgba(63,81,181,.2);border-radius: 2px;\"&gt;&lt;div class=\"progress-indeterminate\" style=\"background-color: #3f51b5;\"&gt;&lt;/div&gt;&lt;style&gt;#page-main{transition:0.2s;}.progress-indeterminate::before{position:absolute;top:0;bottom:0;left:0;background-color:inherit;-webkit-animation:mdui-progress-indeterminate 2s linear infinite;animation:mdui-progress-indeterminate 2s linear infinite;content:' ';will-change:left,width;}.progress-indeterminate::after{position:absolute;top:0;bottom:0;left:0;background-color:inherit;-webkit-animation:mdui-progress-indeterminate-short 2s linear infinite;animation:mdui-progress-indeterminate-short 2s linear infinite;content:' ';will-change:left,width;}@keyframes mdui-progress-indeterminate{0%{left:0;width:0;}50%{left:30%;width:70%;}75%{left:100%;width:0;}}@keyframes mdui-progress-indeterminate-short{0%{left:0;width:0;}50%{left:0;width:0;}75%{left:0;width:25%;}100%{left:100%;width:0;}}&lt;/style&gt;&lt;/div&gt;`</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 在 body 后加入 &lt;div&gt;</span></span><br><span class=\"line\">        <span class=\"built_in\">document</span>.body.appendChild(loading);</span><br><span class=\"line\">        <span class=\"comment\">// 如果页面中没有 page.css 或 search.css，为防止样式错乱，需要在加载过程中隐藏页面内容</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"page_css\"</span>) || !<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"search_css\"</span>)) <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"page-main\"</span>).style.opacity = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 获取页面数据</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> pageData;</span><br><span class=\"line\">        <span class=\"comment\">// 看看 SessionStorage 里有没有缓存</span></span><br><span class=\"line\">        <span class=\"comment\">// 依赖后文的 prefetch</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sessionStorage.getItem(<span class=\"string\">`<span class=\"subst\">${location.protocol}</span>//<span class=\"subst\">${location.hostname}</span><span class=\"subst\">${location.port ? <span class=\"string\">\":\"</span>+location.port:location.port}</span><span class=\"subst\">${$pjax_fullpath(path)}</span>`</span>)) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">\"FROM SESSIONSTORAGE\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">try</span> {</span><br><span class=\"line\">                pageData = <span class=\"built_in\">JSON</span>.parse(sessionStorage.getItem(<span class=\"string\">`<span class=\"subst\">${location.protocol}</span>//<span class=\"subst\">${location.hostname}</span><span class=\"subst\">${location.port ? <span class=\"string\">\":\"</span>+location.port:location.port}</span><span class=\"subst\">${$pjax_fullpath(path)}</span>`</span>));</span><br><span class=\"line\">            } <span class=\"keyword\">catch</span>(e) {</span><br><span class=\"line\">                <span class=\"comment\">// 还是出错就从服务器获取</span></span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">\"FROM SERVER\"</span>);</span><br><span class=\"line\">                pageData = <span class=\"keyword\">await</span> fetch($pjax_fullpath(path) + <span class=\"string\">\".page.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json());</span><br><span class=\"line\">                <span class=\"comment\">// 写到 SessionStorage 中</span></span><br><span class=\"line\">                sessionStorage.setItem(<span class=\"string\">`<span class=\"subst\">${location.protocol}</span>//<span class=\"subst\">${location.hostname}</span><span class=\"subst\">${location.port ? <span class=\"string\">\":\"</span>+location.port:location.port}</span><span class=\"subst\">${$pjax_fullpath(path)}</span>`</span>, <span class=\"built_in\">JSON</span>.stringify(pageData));</span><br><span class=\"line\">            }</span><br><span class=\"line\">        } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">\"FROM SERVER\"</span>);</span><br><span class=\"line\">            <span class=\"comment\">// fetch JSON</span></span><br><span class=\"line\">            pageData = <span class=\"keyword\">await</span> fetch($pjax_fullpath(path) + <span class=\"string\">\".page.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json());</span><br><span class=\"line\">            sessionStorage.setItem(<span class=\"string\">`<span class=\"subst\">${location.protocol}</span>//<span class=\"subst\">${location.hostname}</span><span class=\"subst\">${location.port ? <span class=\"string\">\":\"</span>+location.port:location.port}</span><span class=\"subst\">${$pjax_fullpath(path)}</span>`</span>, <span class=\"built_in\">JSON</span>.stringify(pageData));</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"comment\">// 补齐页面 CSS</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"search_css\"</span>)) {</span><br><span class=\"line\">            fetch(<span class=\"string\">\"/css/search.css\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.text()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">                <span class=\"keyword\">let</span> ele = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"style\"</span>);</span><br><span class=\"line\">                ele.innerHTML = res;</span><br><span class=\"line\">                ele.id = <span class=\"string\">\"search_css\"</span>;</span><br><span class=\"line\">                <span class=\"built_in\">document</span>.body.appendChild(ele);</span><br><span class=\"line\">            });</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"page_css\"</span>)) {</span><br><span class=\"line\">            fetch(<span class=\"string\">\"/css/page.css\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.text()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">                <span class=\"keyword\">let</span> ele = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"style\"</span>);</span><br><span class=\"line\">                ele.innerHTML = res;</span><br><span class=\"line\">                ele.id = <span class=\"string\">\"page_css\"</span>;</span><br><span class=\"line\">                <span class=\"built_in\">document</span>.body.appendChild(ele);</span><br><span class=\"line\">            });</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!pageData) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 组合 state</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> state = { <span class=\"attr\">title</span>: <span class=\"string\">''</span>, <span class=\"attr\">url</span>: <span class=\"built_in\">window</span>.location.href.split(<span class=\"string\">\"?\"</span>)[<span class=\"number\">0</span>] };</span><br><span class=\"line\">        <span class=\"comment\">// 利用 history.pushState() 修改地址栏而不跳转</span></span><br><span class=\"line\">        history.pushState(state, <span class=\"string\">''</span>, path);</span><br><span class=\"line\">        <span class=\"comment\">// 修改页面标题</span></span><br><span class=\"line\">        <span class=\"built_in\">document</span>.title = pageData.title;</span><br><span class=\"line\">        <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">            <span class=\"comment\">// 滚动到页面顶部</span></span><br><span class=\"line\">            <span class=\"built_in\">window</span>.scrollTo({<span class=\"attr\">top</span>: <span class=\"number\">0</span>, <span class=\"attr\">behavior</span>: <span class=\"string\">\"smooth\"</span>});</span><br><span class=\"line\">            <span class=\"comment\">// 写入 HTML</span></span><br><span class=\"line\">            <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"page-main\"</span>).innerHTML = pageData.page;</span><br><span class=\"line\">            <span class=\"built_in\">window</span>.onscroll = <span class=\"literal\">null</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> pageData.extraJS) {</span><br><span class=\"line\">                <span class=\"keyword\">try</span> {</span><br><span class=\"line\">                    <span class=\"comment\">// eval() 执行 JS</span></span><br><span class=\"line\">                    <span class=\"built_in\">eval</span>(pageData.extraJS[i]);</span><br><span class=\"line\">                } <span class=\"keyword\">catch</span>(e) {}</span><br><span class=\"line\">            }</span><br><span class=\"line\">            <span class=\"keyword\">try</span>{$pjax_prefetch();}<span class=\"keyword\">catch</span>(e){}</span><br><span class=\"line\">            <span class=\"comment\">// 再次转换所有链接</span></span><br><span class=\"line\">            $pjax_convertAllLinks();</span><br><span class=\"line\">        }, <span class=\"number\">200</span>);</span><br><span class=\"line\">        <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">            <span class=\"comment\">// 重新显示页面</span></span><br><span class=\"line\">            <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"page-main\"</span>).style.opacity = <span class=\"number\">1</span>;</span><br><span class=\"line\">            loading.remove();</span><br><span class=\"line\">        }, <span class=\"number\">1000</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">catch</span>(e) {</span><br><span class=\"line\">        <span class=\"comment\">// 有报错 直接跳转</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.warn(e);</span><br><span class=\"line\">        <span class=\"built_in\">window</span>.location.href = path;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>如果使用 <code>window.location.href</code> 修改，那么页面就会刷新。<br>为了实现无刷新跳转，必须要使用 <code>pushState()</code> 更改。</p>\n<p>执行 JavaScript 方面使用 <code>eval()</code> 函数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 组合 state</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> state = { <span class=\"attr\">title</span>: <span class=\"string\">''</span>, <span class=\"attr\">url</span>: <span class=\"built_in\">window</span>.location.href.split(<span class=\"string\">\"?\"</span>)[<span class=\"number\">0</span>] };</span><br><span class=\"line\"><span class=\"comment\">// 利用 history.pushState() 修改地址栏而不跳转</span></span><br><span class=\"line\">history.pushState(state, <span class=\"string\">''</span>, path);</span><br><span class=\"line\"><span class=\"comment\">// 修改页面标题</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.title = pageData.title;</span><br><span class=\"line\"><span class=\"comment\">// 滚动到页面顶部</span></span><br><span class=\"line\"><span class=\"built_in\">window</span>.scrollTo({<span class=\"attr\">top</span>: <span class=\"number\">0</span>, <span class=\"attr\">behavior</span>: <span class=\"string\">\"smooth\"</span>});</span><br><span class=\"line\"><span class=\"comment\">// 写入 HTML</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"page-main\"</span>).innerHTML = pageData.page;</span><br><span class=\"line\"><span class=\"built_in\">window</span>.onscroll = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> pageData.extraJS) {</span><br><span class=\"line\">  <span class=\"keyword\">try</span> {</span><br><span class=\"line\">    <span class=\"comment\">// eval() 执行 JS</span></span><br><span class=\"line\">    <span class=\"built_in\">eval</span>(pageData.extraJS[i]);</span><br><span class=\"line\">  } <span class=\"keyword\">catch</span>(e) {}</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h3>\n<a href=\"https://blog.yfun.top/#Prefetch-amp-Refetch\" class=\"headerlink\" title=\"Prefetch &amp; Refetch\"></a>Prefetch &amp; Refetch</h3>\n<p>此处借鉴乐特关于 Prefetch Page 的源码，当用户打开节流模式或为低速网络时就不要 Prefetch.</p>\n<p>Prefetch 可以提前缓存部分数据。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> $pjax_prefetch = <span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">    <span class=\"comment\">// 节流和低速网络不要 Prefetch</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> nav = navigator;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> { saveData, effectiveType } = nav.connection || nav.mozConnection || nav.webkitConnection || {};</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (saveData || <span class=\"regexp\">/2g/</span>.test(effectiveType)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">// 此处是 Blog 的一些常见链接</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> posts_list = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\".index-header a\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> posts_list) {</span><br><span class=\"line\">        <span class=\"comment\">// 全路径</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> thisLink = $pjax_fullpath(posts_list[i].href);</span><br><span class=\"line\">        <span class=\"comment\">// Session Storage 没有才 Fetch</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!sessionStorage.getItem(thisLink)) {</span><br><span class=\"line\">            fetch(thisLink + <span class=\"string\">\".page.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.text()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">                sessionStorage.setItem(thisLink,res);</span><br><span class=\"line\">            });</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>Refetch 用于刷新已有的缓存（虽然 <code>SessionStorage</code> 关闭页面就没了）</p>\n<p>其原理也很简单，<code>SessionStorage</code> 中所有的 Pjax 缓存重新获取就完事了。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> $pjax_refetch = <span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sst = sessionStorage;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> sst) {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i.startsWith(<span class=\"string\">\"http://\"</span>) || i.startsWith(<span class=\"string\">\"https://\"</span>)) {</span><br><span class=\"line\">            fetch(i + <span class=\"string\">\".page.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.text()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">                sessionStorage.setItem(i, res);</span><br><span class=\"line\">            });</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%80%E4%BA%9B%E4%BC%98%E5%8C%96\" class=\"headerlink\" title=\"一些优化\"></a>一些优化</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#Prefetch-CSS-%E6%96%87%E4%BB%B6\" class=\"headerlink\" title=\"Prefetch CSS 文件\"></a>Prefetch CSS 文件</h4>\n<p>既然 CSS 文件需要补齐，那么打开页面 5s 后自动 Prefetch 可以提升速度。</p>\n<blockquote><p>5s 后再获取是为了防止阻塞页面。</p></blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">    <span class=\"comment\">// Prefetch CSS 文件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"search_css\"</span>)) {</span><br><span class=\"line\">        fetch(<span class=\"string\">\"/css/search.css\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.text()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ele = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"style\"</span>)</span><br><span class=\"line\">            ele.innerHTML = res;</span><br><span class=\"line\">            ele.id = <span class=\"string\">\"search_css\"</span>;</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.body.appendChild(ele);</span><br><span class=\"line\">        });</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"page_css\"</span>)) {</span><br><span class=\"line\">        fetch(<span class=\"string\">\"/css/page.css\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.text()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ele = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"style\"</span>)</span><br><span class=\"line\">            ele.innerHTML = res;</span><br><span class=\"line\">            ele.id = <span class=\"string\">\"page_css\"</span>;</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.body.appendChild(ele);</span><br><span class=\"line\">        });</span><br><span class=\"line\">    }    </span><br><span class=\"line\">}, <span class=\"number\">5000</span>);</span><br></pre></td></tr></table></figure><h4>\n<a href=\"https://blog.yfun.top/#%E5%85%B3%E4%BA%8E-Robots\" class=\"headerlink\" title=\"关于 Robots\"></a>关于 Robots</h4>\n<p>当你运行 <code>$pjax_convertAllLinks();</code> 后，你肯定会发现所有的链接都变成了 <code>javascript:$pjax_jump('/xxx');</code>。这对机器人来说很不友好。</p>\n<p>所以，我们需要排除这些机器人。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> runningOnBrowser = <span class=\"keyword\">typeof</span> <span class=\"built_in\">window</span> !== <span class=\"string\">\"undefined\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> isBot = runningOnBrowser &amp;&amp; !(<span class=\"string\">\"onscroll\"</span> <span class=\"keyword\">in</span> <span class=\"built_in\">window</span>) || <span class=\"keyword\">typeof</span> navigator !== <span class=\"string\">\"undefined\"</span> &amp;&amp; <span class=\"regexp\">/(gle|ing|ro|msn)bot|crawl|spider|yand|duckgo/i</span>.test(navigator.userAgent);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (runningOnBrowser &amp;&amp; !isBot) {</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">try</span>{$pjax_prefetch();}<span class=\"keyword\">catch</span>(e){}</span><br><span class=\"line\">        $pjax_convertAllLinks();</span><br><span class=\"line\">    }, <span class=\"number\">100</span>);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%90%8E\" class=\"headerlink\" title=\"最后\"></a>最后</h2>\n<p>在启用 Pjax 后，YFun's Blog 传输大小理论上最高缩小 3/4，性能速度均有提升。</p>\n<p>如果你也在使用 Pjax，不妨试试看。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E8%BF%98%E6%9C%89%E4%B8%80%E4%BA%9B%E9%94%99%E8%AF%AF\" class=\"headerlink\" title=\"还有一些错误\"></a>还有一些错误</h2>\n<p>如果你定义了 <code>onload</code> 等事件，页面没有刷新即代表没有变化，你需要在 <code>$pjax_jump()</code> 中简单清除一下这些信息。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%B9%BF%E5%91%8A%E6%97%B6%E9%97%B4\" class=\"headerlink\" title=\"广告时间\"></a>广告时间</h2>\n<p>我的博客即将同步至腾讯云开发者社区，邀请大家一同入驻：<a href=\"https://cloud.tencent.com/developer/support-plan?invite_code=16qkaef2qdvzm\">https://cloud.tencent.com/developer/support-plan?invite_code=16qkaef2qdvzm</a></p>\n","link":"https://blog.yfun.top/posts/2022/pjax/"},{"title":"抛弃静态博客的缺点，用 ESHexoN 在线编辑！","date":"2022-12-04 16:00:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%80%E4%B9%88%E6%98%AF-ESHexoN\" class=\"headerlink\" title=\"什么是 ESHexoN?\"></a>什么是 ESHexoN?</h2>\n<blockquote><p>ESHexoN 是一款简洁、强大的 Hexo 在线编辑器。</p></blockquote>\n<p>其灵感来自于 <a href=\"https://github.com/HexoPlusPlus/HexoPlusPlus\">HexoPlusPlus/HexoPlusPlus</a> (基于 Cloudflare Workers 的无服务器 Hexo 后端)</p>\n<p>但是，遗憾的是 HPP 突然停止维护，只留下一个 <a href=\"https://github.com/Wexagonal/Wexagonal\">Wexagonal</a>。</p>\n<blockquote><p>However, 这更新速度也太慢了啊喂~</p></blockquote>\n<p><a href=\"https://github.com/Qexo/Qexo\">Qexo</a> 也是一个很不错的项目，但是它基于 Python + MongoDB，不属于我擅长的技术栈，有点劝退。</p>\n<p>于是，ESHexoN 诞生了。它致力于使用 JavaScript Edge Function 构建 Hexo「后端」，实现普通静态博客所不具备的功能，解决大部分静态博客的痛点。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-ESHexoN\" class=\"headerlink\" title=\"如何使用 ESHexoN?\"></a>如何使用 ESHexoN?</h2>\n<blockquote><p>ESHexoN 的使用说明可以参见文档 --&gt; <a href=\"https://eshexon-docs.netlify.app/\">文档链接</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#ESHexoN-%E4%BB%A3%E7%A0%81-amp-%E5%8E%9F%E7%90%86\" class=\"headerlink\" title=\"ESHexoN 代码 &amp; 原理\"></a>ESHexoN 代码 &amp; 原理</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"代码目录\"></a>代码目录</h3>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205115647.png\"></p>\n<p><code>dist</code> 目录存放构建的文件，<code>src</code> 目录为源码，<code>tools</code> 是一些工具，<code>index.js</code> 则为入口文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%90%8E%E7%AB%AF%E7%9A%84%E4%B8%BB%E8%A6%81%E6%96%87%E4%BB%B6\" class=\"headerlink\" title=\"后端的主要文件\"></a>后端的主要文件</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#src-res-js\" class=\"headerlink\" title=\"src/res.js\"></a><code>src/res.js</code>\n</h4>\n<p><code>res.js</code> 主要负责 HTTP 响应输出，统一输出格式。</p>\n<p>故 ESHexoN API 主要返回格式为:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"statusCode\"</span>: <span class=\"string\">\"...\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"statusInfo\"</span>: <span class=\"string\">\"...\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p><a href=\"https://github.com/ESHexoN/ESHexoN/blob/master/src/res.js\">[Source Code]</a></p>\n<h4>\n<a href=\"https://blog.yfun.top/#src-check-token-js\" class=\"headerlink\" title=\"src/check_token.js\"></a><code>src/check_token.js</code>\n</h4>\n<p><code>check_token.js</code> 主要负责 API 请求的鉴权，所有的鉴权 API 都需要携带 <code>token</code> 发送。</p>\n<p>生成代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> token = md5(userdata[<span class=\"number\">0</span>].username + userdata[<span class=\"number\">0</span>].password + <span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"built_in\">Date</span>.now()).getFullYear()}</span><span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"built_in\">Date</span>.now()).getMonth()+<span class=\"number\">1</span>}</span>`</span>);</span><br></pre></td></tr></table></figure><p>故 ESHexoN Token 格式为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">md5(USERNAME+PASSWORD+YEAR+MONTH);</span><br></pre></td></tr></table></figure><p>过期时间为一个月。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#src-env-js\" class=\"headerlink\" title=\"src/env.js\"></a><code>src/env.js</code>\n</h4>\n<p>ESHexoN 除了依靠 <a href=\"https://github.com/yfun-lab/gh-worker-kv\">yfun-lab/gh-worker-kv</a> 存储主要数据库文件外，还使用环境变量存储基本的 Token、仓库等。</p>\n<p>ESHexoN 自设计之初就预备支持 Cloudflare Workers, Deno 等平台。</p>\n<p>事实上，这两个平台获取环境变量的方式根本不一样。为了在一个代码下同时支持两个平台，<code>env.js</code> 简单的写了个判断。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205120944.png\"></p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%98%AF%E4%B8%8D%E6%98%AF%E7%9B%AE%E5%BD%95%EF%BC%9F%E6%96%87%E4%BB%B6%E9%81%8D%E5%8E%86\" class=\"headerlink\" title=\"是不是目录？文件遍历\"></a>是不是目录？文件遍历</h4>\n<p>GitHub API 会返回当前目录下的文件和文件夹，但有人的 <code>source/_posts</code> 目录下还有文件夹。根据观察发现，文件夹的 <code>type</code> 为 <code>dir</code>，而普通文件为 <code>file</code>，那么只需要一个简单的判断，就可以返回单个目录下所有文件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205121416.png\"></p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E5%86%99%E6%96%87%E4%BB%B6\" class=\"headerlink\" title=\"写文件\"></a>写文件</h4>\n<p>在写文件之前，我们需要先获取该文件的 <code>sha</code> 值。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205121728.png\"></p>\n<blockquote><p>这是因为 GitHub 规定修改文件必须在 <code>body</code> 中携带源文件 <code>sha</code>.</p></blockquote>\n<p>同时，文件还必须接受 Base64 编码。这个问题很好解决，ESHexoN 的仓库依赖中已经包含。当然，我更倾向于在前端编码文本，在后端直接 PUT。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E9%82%A3%E5%89%8D%E7%AB%AF%E5%91%A2%EF%BC%9F\" class=\"headerlink\" title=\"那前端呢？\"></a>那前端呢？</h3>\n<p>以上是后端的主要代码。因为 ESHexoN 是前后端分离项目，并且开放跨域，所以我们构建了一个官方前端。只需要输入你的用户名、密码和后端地址就可以开始使用。</p>\n<p>前端的代码也是开源的，基于 Vue + Vuetify 构建，<a href=\"https://github.com/ESHexoN/eshexon-frontend\">在 GitHub 上查看它</a></p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E4%B8%80%E4%BA%9B%E5%B0%8F%E7%BB%86%E8%8A%82\" class=\"headerlink\" title=\"一些小细节\"></a>一些小细节</h4>\n<p>早在 HexoPlusPlus <code>dev</code> 阶段的时候，ChenYFan 就在群内讨论如何解决 Markdown 编辑器的问题。在当时，EditorMD 的兼容性很差。于是，HPP 上采取的解决方案是：<code>textarea</code> + <code>marked.js</code>。</p>\n<p>然后，HPP 编辑器就是这样的：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205122539.png\"></p>\n<p>这并不是一个很好的主意。</p>\n<p>于是在 ESHexoN 上，我们为 Hexo 特性定制了一款简单的编辑器。</p>\n<p>首先，它是由 <a href=\"https://yfun.top/lab/markdown/\">https://yfun.top/lab/markdown/</a> 修改而来的，在部分特性上与其类似。</p>\n<p>但是受限于页面尺寸和小屏幕优化，ESHexoN 的编辑器在大屏上是这样显示的：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205122828.png\"></p>\n<p>双栏布局，实时预览。</p>\n<p>为了保证在小屏幕的体验，在小屏幕上将自动收起预览，改为全屏模式。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205122955.png\"></p>\n<p>如果需要预览，可以点击「预览」按键。</p>\n<p>同时 ESHexoN 的编辑器有自动保存功能，即使写到一半刷新页面或是浏览器崩溃也不用怕，页面内容已经存储到 <code>localStorage</code> 内了。（我也不知道会不会撑炸</p>\n<p>一些基本的搜索功能都得以保留（与 HPP 是十分甚至九分的类似</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205123316.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205123356.png\"></p>\n<p>不仅仅局限于文章，配置文件、代码都可以修改：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205123427.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%9C%A8%E6%9C%AA%E6%9D%A5\" class=\"headerlink\" title=\"在未来\"></a>在未来</h2>\n<p>目前 ESHexoN 还处于 Beta 阶段，部分功能还没有开发完成。</p>\n<p>关于说说、评论等也都在等待开发（最近可能不会有）</p>\n<p>如果在使用中出现了任何的问题，欢迎提 Issue 反馈。</p>\n","link":"https://blog.yfun.top/posts/2022/eshexon/"},{"title":"让阅读无缝衔接 —— JS 获取用户阅读进度","date":"2022-11-11 16:40:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>很多博客中最常见的问题就是：文章很长，但是读者很忙。下次阅读的时候，可能要花一些时间才能恢复到先前的阅读位置。</p>\n<p>如果可以设备间，识别二维码或是一个链接就可以让阅读无缝衔接，直接跳转到相应位置，那么阅读体验就会变得更加优秀。</p>\n<p>那么，开始吧！</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%9E%E8%B7%B5\" class=\"headerlink\" title=\"实践\"></a>实践</h2>\n<p>要知道阅读位置，那么就要知道当前页面的坐标。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getScrollPosition = <span class=\"function\">(<span class=\"params\">el = <span class=\"built_in\">window</span></span>) =&gt;</span> ({</span><br><span class=\"line\">    x: el.pageXOffset !== <span class=\"literal\">undefined</span> ? el.pageXOffset : el.scrollLeft,</span><br><span class=\"line\">    y: el.pageYOffset !== <span class=\"literal\">undefined</span> ? el.pageYOffset : el.scrollTop</span><br><span class=\"line\">});</span><br><span class=\"line\"><span class=\"comment\">// getScollPosition().x =&gt; 页面横坐标; getScrollPosition().y =&gt; 页面纵坐标;</span></span><br></pre></td></tr></table></figure><p>大部分情况下，我们只用关注纵坐标。横坐标大概率为 <code>0</code>。</p>\n<p>我们还需要一个页面滚动的事件，用于记录当前坐标，并储存在临时存储中。</p>\n<p>至于为什么是 <code>sessionStorage</code> 而不是 <code>localStorage</code>，则是因为 <code>localStorage</code> 除手动清除外，不会自动过期。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 此处的 750 是「页面元素的最大宽度」</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> wx = <span class=\"built_in\">window</span>.innerWidth &gt;= <span class=\"number\">750</span> ? <span class=\"number\">750</span> : <span class=\"built_in\">window</span>.innerWidth;</span><br><span class=\"line\"><span class=\"keyword\">var</span> wy = <span class=\"built_in\">window</span>.innerHeight;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">windowScroll</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 反复修改 确保页面尺寸不改变</span></span><br><span class=\"line\">    wx = <span class=\"built_in\">window</span>.innerWidth &gt;= <span class=\"number\">750</span> ? <span class=\"number\">750</span> : <span class=\"built_in\">window</span>.innerWidth;</span><br><span class=\"line\">    wy = <span class=\"built_in\">window</span>.innerHeight;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> y = <span class=\"built_in\">Math</span>.round(getScrollPosition().y);</span><br><span class=\"line\">    <span class=\"comment\">// 组合字符串，同时记录页面坐标，页面宽度和高度</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> p = <span class=\"string\">`<span class=\"subst\">${y}</span>:<span class=\"subst\">${wx}</span>:<span class=\"subst\">${wy}</span>`</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 写入到 sessionStorage 中</span></span><br><span class=\"line\">    sessionStorage.setItem(<span class=\"string\">\"read_y\"</span>, p);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"built_in\">window</span>.onscroll = windowScroll;</span><br></pre></td></tr></table></figure><p>你可能发现了，此处的变量 <code>p</code>，并不仅仅是「页面纵坐标」，而是「页面高度」与「纵坐标」的组合字符串。</p>\n<p>事实上，如果单纯是纵坐标判断位置，那么在不同高度，不同宽度的设备上，就会出现错位的情况。而同时记录三个信息，就可以还原真实坐标。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// URL 中是否包含传递的坐标信息</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (location.hash.split(<span class=\"string\">\"#read=\"</span>).length &gt; <span class=\"number\">1</span>) {</span><br><span class=\"line\">    <span class=\"comment\">// 分离字符串</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> read_y = location.hash.split(<span class=\"string\">\"#read=\"</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\">    read_y = read_y.split(<span class=\"string\">\":\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 组合乘积，顺滑移动至坐标</span></span><br><span class=\"line\">    <span class=\"built_in\">window</span>.scrollTo({<span class=\"attr\">top</span>: <span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Number</span>(read_y[<span class=\"number\">0</span>]) * <span class=\"built_in\">Number</span>(read_y[<span class=\"number\">1</span>] * <span class=\"built_in\">Number</span>(read_y[<span class=\"number\">2</span>] / wx / wy))), <span class=\"attr\">behavior</span>: <span class=\"string\">\"smooth\"</span>});</span><br><span class=\"line\">} <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    <span class=\"comment\">// 从 sessionStorage 中获取</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> read_y = sessionStorage.getItem(<span class=\"string\">\"read_y\"</span>) || <span class=\"string\">\"0:0:0\"</span>;</span><br><span class=\"line\">    read_y = read_y.split(<span class=\"string\">\":\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.scrollTo({<span class=\"attr\">top</span>: <span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Number</span>(read_y[<span class=\"number\">0</span>]) * <span class=\"built_in\">Number</span>(read_y[<span class=\"number\">1</span>] * <span class=\"built_in\">Number</span>(read_y[<span class=\"number\">2</span>] / wx / wy))), <span class=\"attr\">behavior</span>: <span class=\"string\">\"smooth\"</span>});</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>到现在，我们已经完成了 URL 的解析和基本生成。</p>\n<p>那么，URL 即为:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">`<span class=\"subst\">${location.protocol}</span>//<span class=\"subst\">${location.hostname}</span><span class=\"subst\">${location.port ? <span class=\"string\">\":\"</span>+location.port:location.port}</span><span class=\"subst\">${location.pathname}</span>#read=<span class=\"subst\">${sessionStorage.getItem(<span class=\"string\">\"read_y\"</span>)}</span>`</span>;</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%90%8E\" class=\"headerlink\" title=\"最后\"></a>最后</h2>\n<p>搭配生成二维码等插件效果更佳。</p>\n<blockquote><p>Miracle 主题将在下个版本中更新该功能。</p></blockquote>\n","link":"https://blog.yfun.top/posts/2022/js-get-users-reading-progress/"},{"title":"React 为什么重新渲染","date":"2022-09-06 08:29:00","description":"\n<p>更新（重新渲染）是 React 的重要特性 —— 当用户与应用交互的时候，React 需要重新渲染、更新 UI，以响应用户的输入。但是，React 为什么会重新渲染呢？如果不知道 React 为什么会重新渲染，我们如何才能避免额外的重新渲染呢？</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/186432/20/28325/37613/631725bbEf2ff226e/66b99021df66578b.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/react-re-renders-101/\">https://blog.skk.moe/post/react-re-renders-101/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/react-re-renders-101/"},{"title":"为什么你不应该在 React 中直接使用 useEffect 从 API 获取数据","date":"2022-08-19 08:53:00","description":"\n<p>React 是一个由 Facebook 开源的、可以在任意平台上构建 UI 的 JavaScript 库。在 React 中，一个常见的 Pattern 是使用 <code>useEffect</code> 搭配 <code>useState</code> 发送请求、将状态从 API（React 外部）同步到 React 内部、用于渲染 UI，这篇文章恰恰在向你介绍为什么你不应该直接这么做。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/180676/37/27394/27265/62ff57f2E600b3725/cff75c5fca39bbcc.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/\">https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/"},{"title":"NPM 自动更新版本号","date":"2022-08-04 05:00:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>ChenYFan 大佬的文章：<a href=\"https://blog.cyfan.top/p/d3c51290.html\">SpeedUp!使用黑科技为你的网站提速</a> 有提到过将 Hexo 博客的全部静态文件上传至 NPM 达到加速效果。</p>\n<p>但是 NPM 版本号不能重复，而且为了精准命中缓存和防止边缘 <code>@latest</code> 缓存过长，就必须指定版本号。</p>\n<p>本人在 <a href=\"https://blog.yfun.top/posts/2876015612/\">我的图床解决方案</a> 一文中使用的方法是 <code>npm version patch</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804133426.png\"></p>\n<p>但这个方法也有一些弊端，比如 <code>patch</code> 只会更新 <code>z</code> 位数的版本号，而且并不会上传至仓库，很可能会出现版本号冲突导致上传失败。这就是为什么最后还需要重新推送 Git 提交。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E8%AF%95%E8%AF%95%E7%9C%8B\" class=\"headerlink\" title=\"试试看\"></a>试试看</h2>\n<p>NPM 版本号遵循 <code>semver</code> 规范，格式为 <code>major.minor.patch</code>。</p>\n<p>为了在获取最新版本号的时候不发生混乱，我选择先获取最新的版本号。</p>\n<blockquote><p>记得把 <code>cky-blog-static</code> 改成自己的项目名。</p></blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>获取到最新版本号后，就可以对版本号进行分析。</p>\n<p>以 <code>1.4.7-b541af2ea284a39da0bbf63b88fdb65c</code> 为例，先按 <code>major.minor.patch</code> 分离。当然，也需要考虑版本号后还有 <code>build metadata</code> 的情况。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\"><span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br></pre></td></tr></table></figure><p><del>为了版本号好看些</del>，可以通过判断实现满十进一。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位小于 9，直接 +1</span></span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">} <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位大于等于 9，y 位小于 9，y+1, z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">} <span class=\"keyword\">else</span> {</span><br><span class=\"line\"><span class=\"comment\">// z 大于等于 9，y 大于等于 9，x+1,y=0,z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>最后，重新拼接版本号。如果担心服务器缓存版本号导致冲突，还可以加上一些随机字符串。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br></pre></td></tr></table></figure><p>将最新的版本号信息重新写入 <code>package.json</code> 文件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">packageJson.version = newVersion;</span><br><span class=\"line\"><span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p><del>直接 CV 代码！</del></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 更新 package.json 版本号</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fetch = <span class=\"built_in\">require</span>(<span class=\"string\">\"node-fetch\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> md5 = <span class=\"built_in\">require</span>(<span class=\"string\">\"js-md5\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> update = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">    verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(newVersion);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">    packageJson.version = newVersion;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">    fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Complete!!\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">update();</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%90%8E\" class=\"headerlink\" title=\"最后\"></a>最后</h2>\n<p>如果是 Hexo 文件部署，就可以直接把文件直接丢在项目根目录，Action 集成部署加上：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">node update.js</span><br></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804135818.png\"></p>\n<p><del>Blog 半年没更新，除除草 --(....</del></p>\n","link":"https://blog.yfun.top/posts/2022/auto-update-npm-version/"},{"title":"我有特别的 DNS 配置和使用技巧","date":"2022-07-28 15:31:00","description":"\n<p>众所周知，DNS 的作用与电话簿类似，将人类可读的域名映射到机器可读 IP 地址、使人更方便地访问互联网。DNS 是非常重要的互联网基础设施，对于改善上网冲浪的体验中的重要程度不容小觑。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/96381/31/31172/23930/62e2ab5bE554d388b/37027f4a03351b9e.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/i-have-my-unique-dns-setup/\">https://blog.skk.moe/post/i-have-my-unique-dns-setup/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/i-have-my-unique-dns-setup/"},{"title":"优化博客的累计布局偏移（CLS）问题","date":"2022-06-07 17:24:00","description":"\n<p>距离上一篇文章发布已有四个月了，是时候写几篇文章给博客除草了。上一次我介绍了我如何迁移、重构了我的博客的架构，这次我想来谈谈我在重构中优化和打磨访客体验时解决的一个问题。我的博客优化之旅 图片 lazyload 的学问和在 Hexo 上的最佳实践 我的博客有多快？ 天下武功，唯快不破 —— 我是这样优化博客的 ...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/206311/26/14625/38940/629f7f81Eb11312de/b1e67f07b1cc9bc7.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/fix-blog-cls/\">https://blog.skk.moe/post/fix-blog-cls/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/fix-blog-cls/"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\n    return new Date(date.toLocaleString('en-US', { timeZone }))\n}\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        timeZone\n    })\n    return {\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\n        convert (date) {\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\n        }\n    }\n}\n\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\n    return converter.convert(new Date(secDate), tzName) - secDate\n}\n\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\ncmn-Hans-SG = 中文普通话-简体-新加坡\ncmn-Hant-TW = 中文普通话-繁体-台湾\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\ncmn = 中文普通话\n\nzh-Hans = 中文-简体\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\n}\n\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long'\n}\nconst now = new Date()\n\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\n\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\n\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\n\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\n\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\n\nzhCNFormatter.format(now) // 2021年10月13日星期三\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\n\njaFormatter.format(now) // 2021年10月13日水曜日\njaAltFormatter.format(now) // 令和3年10月13日水曜日\n\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\n// {locale: 'zh-CN', calendar: 'gregory', …}\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\n     // 基于一个固定日期计算，这里选择 1970.1.1\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\n    const base = new Date(1970, 0, 1).getTime()\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\n    return Array.from({ length: 7 }, (_, day) =&gt; (\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\n    ))\n}\n\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n}).formatToParts(new Date())\n// [\n//     { type: 'year', value: '2021' },\n//     { type: 'literal', value: '年' },\n//     { type: 'month', value: '10' },\n//     { type: 'literal', value: '月' },\n//     { type: 'day', value: '13' },\n//     { type: 'literal', value: '日' },\n//     { type: 'weekday', value: '星期三' },\n//     { type: 'literal', value: ' ' },\n//     { type: 'dayPeriod', value: '上午' },\n//     { type: 'hour', value: '1' },\n//     { type: 'literal', value: ':' },\n//     { type: 'minute', value: '00' },\n//     { type: 'literal', value: ':' },\n//     { type: 'second', value: '00' }\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\n}\n\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\n  timeZone: 'America/Los_Angeles',\n  year: 1995,\n  month: 12,\n  day: 7,\n  hour: 3,\n  minute: 24,\n  second: 30,\n  millisecond: 0,\n  microsecond: 3,\n  nanosecond: 500,\n  calendar: 'iso8601'\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将 […]","link":"https://flyhigher.top/develop/2160.html"}]