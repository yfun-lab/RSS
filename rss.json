[{"title":"微软出品、Windows 用户必备的瑞士军刀：PowerToys 可以怎么用","date":"2022-08-03 09:30:00","description":"在最新的 v0.61.0 版本中，PowerToys 已经内置了 12 种不同的系统工具。不少此前在 Windows 上需要借助第三方工具才能实现的功能，通过 PowerToys 的集成变得更加便捷。<a href=\"https://sspai.com/post/74979\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74979"},{"title":"让手机变身电脑配件，这些 App 帮你应对突发意外","date":"2022-08-03 08:05:56","description":"再也不用为网课考试多买两个摄像头了。<a href=\"https://sspai.com/post/74978\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74978"},{"title":"还原经典的细节与质感，将复古音乐播放器装进口袋：OneMusic | App+1","date":"2022-08-03 06:30:00","description":"OneMusic 希望为你还原历史中的经典播放器，让你在享受音乐的同时，拥有不同的视觉体验，体会多款历史经典音乐播放器的效果，带你重温过去的时光和自己。<a href=\"https://sspai.com/post/74850\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74850"},{"title":"身体乳入门攻略：除了品牌和价格，你还需要考虑什么？","date":"2022-08-03 03:31:00","description":"冬天为了对抗干燥气候带来的皮肤干燥，很多人都会选择身体乳。之前在百元幸中推荐了自己近期爱用的身体乳，就想能不能试着写一篇身体乳推荐，但是我一个人的经验和观点难免偏颇，于是我采访了5位有一定经验的朋友， ...<a href=\"https://sspai.com/post/74973\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74973"},{"title":"如何评价国产动画《毛头的深夜理发店》？","date":"2022-08-03 03:28:08","description":"\n<p data-pid=\"Zhxxb-dP\">大家好，我是《毛头的深夜理发店》的主创，也是故事里的理发店老板，我叫毛头。</p>\n<p><img src=\"https://pica.zhimg.com/v2-eab1ab50fc8056048dce01a2af204605_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1670\" data-rawheight=\"2420\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-eab1ab50fc8056048dce01a2af204605\" data-watermark-src=\"v2-a12710c6e6951aadeecc30498cf62b35\" data-private-watermark-src=\"v2-fca2b92a07807b20f98ca4115d31d3ab\"></p>\n<p data-pid=\"fjspqRDG\">一年前，我做了一个动画账号，叫「天才职业故事」，很多朋友知晓《毛头的深夜理发店》这部动画剧集，也是通过「天才职业故事」追更来的。</p>\n<p><img src=\"https://pica.zhimg.com/v2-73fcd2a0030e5b2d1e9ae2afd2cff2da_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1612\" data-rawheight=\"1070\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-73fcd2a0030e5b2d1e9ae2afd2cff2da\" data-watermark-src=\"v2-7ef63845b14ee91d4cee398d33810e0f\" data-private-watermark-src=\"v2-bc29193f94a1aef6ccfa2bb52a7b0856\"></p>\n<p data-pid=\"q35vw8zu\">「天才职业故事」有一个slogan，叫“看见1000个不为人知的职业故事”，这句话是我们开始做这件事情时定下来的小目标，那就是先做够1000个动画故事。<br><br>但实际上，在我们做到第43个的时候，就被迫先暂停下来了。<br>原因是，做动画可太tm烧钱了。<br><br>《毛头的深夜理发店》这个节目上线后，我看到了挺多评论，有说我们的动画制作不流畅，有说像ppt，虽然听着不太好听，但说得也确实没毛病。<br>因为现在的我们既做不到逐帧动画，也算不上什么大制作，但就这种程度的动画，已经是在我们有限的经费范围内，尽全力做到最好了。<br><br>说回来，应该有挺多熟悉我们的人都知道，我们用动画记录的所有故事，都是真实故事改编。<br>那为什么会选择用动画的方式记录这些真实故事呢？<br><br>不瞒大家说，当初做这个决定的时候，真是挺大胆的。<br>为啥，因为我们根本没有人会做动画，也没有人做过动画。<br><br>最开始我们这伙人就是一群写故事的人，满世界找作者，挖掘故事，记录故事，这事儿一干就是四五年。你在知乎上应该看到过一些专栏，像《真实解剖手记》、《真实寻凶手记》，都是我们挖掘并编辑的，陈拙和我是老搭档了。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-2785a8fde999842ccb7f7434e09e5f93_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1280\" data-rawheight=\"2769\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-2785a8fde999842ccb7f7434e09e5f93\" data-watermark-src=\"v2-e54f9049d6d7a424b6aa9df83830fa3e\" data-private-watermark-src=\"v2-1a3d0b5877fa879012cc9080887cafcf\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-59cd649ddad0087bedc60a4b4373bc3f_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1280\" data-rawheight=\"2769\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-59cd649ddad0087bedc60a4b4373bc3f\" data-watermark-src=\"v2-91860128639701296683e3188f96b17f\" data-private-watermark-src=\"v2-c5329912eaf1a137fc286b40d445b738\"></p>\n<p data-pid=\"_kh6c1hQ\"><br>这些年我们已经在「天才捕手计划」这个账号里，发布了600多个万字以上的文字故事，有的故事已经以文字的形式出版成书；有的故事被录制成播客，以声音的方式被大家听到；有的故事正在筹备拍成电影，未来会在大荧幕上跟大家见面。</p>\n<p><img src=\"https://picx.zhimg.com/v2-cba03ccb4a803236c860635ba09fb132_720w.jpg?source=b1748391?rss\" data-rawwidth=\"688\" data-rawheight=\"691\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-cba03ccb4a803236c860635ba09fb132\" data-watermark-src=\"v2-d1330c1364b67654eab22289109a48d2\" data-private-watermark-src=\"v2-6965268ff1c87345a7e94531778d2362\"></p>\n<p data-pid=\"nBMRxaqQ\"><br>我们一直在探索用更多的方式让更多的人看到这些真实的稀缺的好看的故事，动画，也是其中一种。<br>有了这个想法之后，这局儿就算攒起来了。差不多就是去年的这个时间，我拉上了两个只会画漫画的人，开始琢磨怎么把这个玩意儿给它动起来。</p>\n<p><img src=\"https://pica.zhimg.com/v2-b1d366600f07133ebde9ccf3577ff3fb_720w.jpg?source=b1748391?rss\" data-rawwidth=\"663\" data-rawheight=\"813\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-b1d366600f07133ebde9ccf3577ff3fb\" data-watermark-src=\"v2-e8d8c8e18e47be0d62b72b1f5ecd6f48\" data-private-watermark-src=\"v2-1e5169fd7f6406086d1b8ca741491a92\"></p>\n<p data-pid=\"kbpoZhz1\"><br>这一干就是一年，这一年一口气做了43个动画，太爽了，太刺激了，然后钱就要花完了，哈哈哈。<br><br>虽然听起来挺好笑，但当时整个团队确实面临着一个巨大困境，就是，我们可能要原地解散了。<br>在距离完成1000个故事的小目标还剩下957个的时候，嗝屁了。<br>没钱嘛，我少吃两顿倒没关系，但创作团队的年轻人们，大家都要吃饭的。<br><br>挺难受的，一年多了，从不会做到会了一点点，从两三个人到十几个人，熬了那么多夜，取得了一些还算不错的成绩，挺难的。<br>还没来得及做得更好，就要停下来了。<br><br>那会儿我琢磨了好几天，没怎么睡觉，最后跟小伙伴们讲：咱们先暂停下来吧，把1000个故事的小目标先放一放，我们还有一辈子的时间去把它做完。<br>但现在，咱们花光剩下的经费，先去干票大的。<br><br>于是，就有了《毛头的深夜理发店》。<br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-eab1ab50fc8056048dce01a2af204605_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1670\" data-rawheight=\"2420\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-eab1ab50fc8056048dce01a2af204605\" data-watermark-src=\"v2-a12710c6e6951aadeecc30498cf62b35\" data-private-watermark-src=\"v2-fca2b92a07807b20f98ca4115d31d3ab\"></p>\n<p data-pid=\"N3BRVsLD\">这一次，我们希望尽全力做得更好一点，所以从「天才职业故事」到《毛头的深夜理发店》的这一过程中，我们做了三个小升级。<br><br><br>一、画风<br>最开始做「天才职业故事」，我们几乎是一集一个画风，因为不咋会做，所以不知道我们可以做成什么样子。从自己摸索自己学，到慢慢寻找专业的伙伴加入，换了很多种不同的画风做尝试，想一直画，直到画出我们觉得最满意的一种风格。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-ecdd99a7aa34e13e105e0192f0458115_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1315\" data-rawheight=\"777\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-ecdd99a7aa34e13e105e0192f0458115\" data-watermark-src=\"v2-6d92802e81c9190966ff2b40fcdaa8e1\" data-private-watermark-src=\"v2-ae3edec346305e6574aad2b90cf2f30f\"></p>\n<p data-pid=\"uOXfOWHd\"><br>而《毛头的深夜理发店》，我们进行了一次统一的画风升级，为了让大家观看动画故事时更有代入感，我们在画面光影、氛围和人物形象表情的刻画上下了特别大的功夫。</p>\n<p><img src=\"https://pica.zhimg.com/v2-f9c7948d93caa95c8616b46042f3ca38_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1136\" data-rawheight=\"815\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-f9c7948d93caa95c8616b46042f3ca38\" data-watermark-src=\"v2-36bf7aeadfa95f4118dd75d4bd95c885\" data-private-watermark-src=\"v2-6416ae142b0aa318e4fa58919bae6dfc\"></p>\n<p data-pid=\"NIKt-E74\"><br>二、更新<br>做「天才职业故事」的时候，我们听到最多的一句话是“你们怎么总在阴间时间更新啊”。</p>\n<p data-pid=\"cTOKribE\">为什么总在阴间时间更新，是因为我们人数不多，比较笨拙，尤其是我们后期的伙伴，对细节的重视程度令人发指，一根头发丝儿的运动规律都不放过，经常赶在最后一刻改完，检查，然后发布前一看时间，又到深夜了。因为太想第一时间让大家看到，所以不论多晚，我都会点下发送键。</p>\n<p data-pid=\"WduzjvZu\">但这次《毛头的深夜理发店》，我们不仅做到了每周五上午十点准时更新，还做到了一口气更新两集。这个挑战也挺难的，但起码这次我们做到了，跟观众准时完成每一次的约定。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-33a2c759df6f14b84a00c5a3aabd5cc7_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1280\" data-rawheight=\"960\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-33a2c759df6f14b84a00c5a3aabd5cc7\" data-watermark-src=\"v2-78cd2b247742d8f635d8eb9e9969e2af\" data-private-watermark-src=\"v2-46ac5e0e3c7df9277324524b1eccf35a\"></p>\n<p data-pid=\"gkxTgxTn\">（这是小伙伴在地铁里偷拍到有路人正在看我们的动画，老开心了）<br><br><br>三、故事<br>做「天才职业故事」的时候，是每期一个不同的职业故事。<br>而《毛头的深夜理发店》，我们挑选了之前观众最爱看的几个系列，在200多个故事中挑选出了12个足够精彩的故事完成动画的改编。</p>\n<p><img src=\"https://picx.zhimg.com/v2-6f2982734cedbcdd0d1385cf9ff1dd5f_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1341\" data-rawheight=\"971\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-6f2982734cedbcdd0d1385cf9ff1dd5f\" data-watermark-src=\"v2-bc481d5b8aec8a6e1068dfe8659bb095\" data-private-watermark-src=\"v2-fffdaff2c6e4643d8861230733d61c61\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-a22c4c314c4399f33fa211e26b87fcd6_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1274\" data-rawheight=\"875\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-a22c4c314c4399f33fa211e26b87fcd6\" data-watermark-src=\"v2-29932d6b9a323689f55587762becc737\" data-private-watermark-src=\"v2-038eca47c3ef70ebc17b60387c40e3c7\"></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-749e78f71e93dff7596a1f6b574ee386_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1334\" data-rawheight=\"846\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-749e78f71e93dff7596a1f6b574ee386\" data-watermark-src=\"v2-892c4fd087b85914b2572689ffab049d\" data-private-watermark-src=\"v2-2d6d35992d4386c82d732749fc6d749d\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-377c044d21d86c0499e68f95ecef11b4_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1337\" data-rawheight=\"942\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-377c044d21d86c0499e68f95ecef11b4\" data-watermark-src=\"v2-4a084db3a13a486b5eb246b62d6a0c27\" data-private-watermark-src=\"v2-010a7ea6234cf9226f6b30f1a4ce05d9\"></p>\n<p data-pid=\"Br00aIi8\">在这次全新升级的《毛头的深夜理发店》这部剧集里涵盖了“重案刑警”、“热血法医”、“风骚律师”、“大检察官”、“正义民警”等这些罪案亲历者。 第1集：19岁毁容少女小华找到律师刘焱，委托他帮助自己76岁的奶奶离婚。</p>\n<p><img src=\"https://pica.zhimg.com/v2-bf5523dbcf62ffb5fade840fbdf08ea2_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1366\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-bf5523dbcf62ffb5fade840fbdf08ea2\" data-watermark-src=\"v2-b2243eee91d19d5903002815e0df9d6d\" data-private-watermark-src=\"v2-a7c59ac4a4c9bcf44919823e7d2ceb23\"></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-ac4ba9c67d4faf512cfcb2c01e36f6e8_720w.jpg?source=b1748391?rss\" data-rawwidth=\"393\" data-rawheight=\"762\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-ac4ba9c67d4faf512cfcb2c01e36f6e8\" data-watermark-src=\"v2-c19317104ce104ad101f2b79f7eb8625\" data-private-watermark-src=\"v2-9230e0751d6acb9e9b13112bdadb86e3\"></p>\n<p data-pid=\"OUNHcAiV\"><br>第2集：养狗的警察和女儿联手破了一起案子。案子就发生在女儿的学校，那年女儿高三，还剩俩月高考，学校的校花却突然死亡。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-a0314aae82d184e93c9d63d082624e44_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1366\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-a0314aae82d184e93c9d63d082624e44\" data-watermark-src=\"v2-ef547cf774167d8f619a57b307163895\" data-private-watermark-src=\"v2-4b06786d702a41f410ae35d92cf19536\"></p>\n<p data-pid=\"wnXZBM_y\"><br>有多少父母因为把孩子的一举一动当成了自己的面子、政绩，在这种窒息的掌控下长大的孩子害怕犯错，也就没有知错能改的能力。而知错能改，是个双向的过程，改正的人需要勇气，而接纳改正的人需要更多的准备。朋友之间是这样，情侣之间是这样，父母和儿女之间更是这样。<br><br><br>第3集：“名声很坏”的女人为了自证清白，喝下剧毒农药百草枯，围观的人权当个笑话看，唯独被戴绿帽的丈夫站出来力挺妻子。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-4e93cbe82ca97fda27789765ec1656b3_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1366\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-4e93cbe82ca97fda27789765ec1656b3\" data-watermark-src=\"v2-b793dacc82e59f02655ea952b3b44a8e\" data-private-watermark-src=\"v2-0df817716a75f4d92eecb8aed91882ad\"></p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-a4dc7dbc41536b193980258d24538711_720w.jpg?source=b1748391?rss\" data-rawwidth=\"850\" data-rawheight=\"765\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-a4dc7dbc41536b193980258d24538711\" data-watermark-src=\"v2-8b4271ed7fb101871afc528621cfcfa5\" data-private-watermark-src=\"v2-2b80c91eb7f98c58cb89f6e01675bd60\"></p>\n<p data-pid=\"2ujYBlOL\"><br>第4集：年轻另类的女老师深得学生喜爱，她只带了两届学生，就在回家的路上被人杀害。而接手这起案子的，正是被她改变了一生的学生。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-90242d2e586fa9f65465c99f8f41eb5d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1366\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-90242d2e586fa9f65465c99f8f41eb5d\" data-watermark-src=\"v2-1c9fecc0c2f416aca46c75fb9df4e9fd\" data-private-watermark-src=\"v2-6e5f7596737bbaba92039fb6a1df2a60\"></p>\n<p data-pid=\"Wcf3BBrw\"><br>如果有机会，我很想告诉那个当年落榜的男孩，你没有输，也没有掉队，高考不是终点，和整个人生相比它只是小小的一站，可以停靠，但休息好了要试着再跑起来。因为往后的每一步，才真正构成了你的人生。<br></p>\n<p data-pid=\"8SThDZuf\"><br>第5集：许小婧在下班路上被性侵了，报警后，却遭受了来自舆论、甚至家人的继续伤害。而帮她走出来的人，竟是那个一直撒娇的丈夫。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-2e80fea8cc144fb34d47e3391d4789dd_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1366\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-2e80fea8cc144fb34d47e3391d4789dd\" data-watermark-src=\"v2-18c16f22318b1ece1cab1bf95ebc589c\" data-private-watermark-src=\"v2-691ff7b278d29dd6cb4c7f8e71bad02f\"></p>\n<p data-pid=\"d-75Iuak\"><br>第6集：2020年秋天，蒋述警局接到金三角传来的消息，要求他们带走一位中国男子。当地流传只要杀死此人，拍下视频，就能拿到一笔巨额佣金。</p>\n<p><img src=\"https://pica.zhimg.com/v2-ea86b5d36a845c4bb8df4cc1a3624f7c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1366\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-ea86b5d36a845c4bb8df4cc1a3624f7c\" data-watermark-src=\"v2-739411c55cfa6864aa68c3b6add7ae9d\" data-private-watermark-src=\"v2-9cd99ead4900560a2c1d884a32d354a5\"></p>\n<p data-pid=\"RmnAaPSE\"><br>现实当中挺多人也是这样过了一辈子，在困境和错误中挣扎又放弃，发现还在原地，最后心就死了。但如果选了对的路，那就尽量别停步。有时命运的戏谑就在于，你一直犹豫不决，等到终于下定决心，已经到了谢幕的时间了。<br><br><br>第7集：13岁的婷婷找侠女做法律援助，她被妈妈的男朋友强奸了，但没有人能帮她，甚至妈妈还帮她清洗了床单被褥等证据。刘任侠是否能帮婷婷讨回公道？</p>\n<p><img src=\"https://pica.zhimg.com/v2-8ce2e42dbd3e6d8edf42b2a59ea119e7_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1366\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-8ce2e42dbd3e6d8edf42b2a59ea119e7\" data-watermark-src=\"v2-44825da9d3aa37b4239506ef80b675cb\" data-private-watermark-src=\"v2-ce1bfd0e318aa7c074f4b936961886f8\"></p>\n<p data-pid=\"vi430p6B\"><br>这个案子中最可悲的是，婷婷身边唯一的家人妈妈，却彻头彻尾成了共犯。她为了满足自己的情感需要甘愿牺牲婷婷，甚至以母爱之名勒索婷婷。我不知道离开后的婷婷，还是否能重新建立对这个世界的信任，只希望这世上的父母，再也不要把孩子当作筹码和牺牲品。<br><br><br>第8集：大学教授被毒杀在家中，痕迹检验师刘神隐走进这个家，搜寻所有隐秘线索。刘神隐始终感觉现场出现过一个陌生人，而解密的关键，藏在一个新买的iPhone里。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4d37ac31b36921320012ba9b47cf967c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1366\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-4d37ac31b36921320012ba9b47cf967c\" data-watermark-src=\"v2-586d70f32cf614eaad1d30505a954343\" data-private-watermark-src=\"v2-8d4099ce75144eee7781cb195c5ef92f\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"UOl6UhVw\"><br>第9集：刘任侠的小学同学程菲带来了一个沉重的委托，她希望刘任侠做她妈妈的律师。因为她的妈妈杀死了她的爸爸。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-4993505f7e39349e94a75b4b260bcde5_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1366\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-4993505f7e39349e94a75b4b260bcde5\" data-watermark-src=\"v2-e08cbb8b286e8f2fe3a5a8e8da2b4674\" data-private-watermark-src=\"v2-1d7bb6862f5e379c8bf3595148e0862a\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"kELKsK6M\"><br>在这个案子里，没有绝对的坏人，每一个人的行为动机都合乎逻辑，然而，事情仍然无可挽回地缓缓滑向溃败，在母亲以爱之名犯下重罪后，这场悲剧终于有了结果——没有赢家，没有幸存者。<br><br><br>第10集：一个长相漂亮的女孩，用一套“剧本”同时跟上百个男人谈恋爱。只是，当她走下诈骗流水线，想开始新生活的时候，却发现自己成了别人的“猎物”。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-63e4673aa0b39a59b6fc46b02d2d1fda_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1366\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-63e4673aa0b39a59b6fc46b02d2d1fda\" data-watermark-src=\"v2-b3d972f67bfa6d47f244dc8a6a7ac5a0\" data-private-watermark-src=\"v2-d16fec1aaa8ec0759d0d3f6bf3232b38\" data-tags=\"porn\"></p>\n<p data-pid=\"Rtznm4bi\"><br>第11集：村里发现了一具无脚女尸，调查后，却是失踪四年的冀灵。刘神隐和警方一开始怀疑凶手是冀灵性格木讷的老公，但最后却发现，凶手是一个看起来最不可能的人！</p>\n<p><img src=\"https://pic2.zhimg.com/v2-647ea93d2f876105a5614e2e5a0227f7_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1366\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-647ea93d2f876105a5614e2e5a0227f7\" data-watermark-src=\"v2-d504d81df065df5066f71e78a9b0e47f\" data-private-watermark-src=\"v2-418e5df4a26aca1fa0b206b164ff34cf\"></p>\n<p data-pid=\"KfHVs-56\"><br>第12集：同一个地点，同一种手法，同一样工具，整个警队被一起“连环案”的线索耍得团团转。破案难度直线上升，出动了上百名警察之后，依旧一无所获。直到法医廖小刀找到了那颗梨，才发现凶手就在身边。</p>\n<p><img src=\"https://picx.zhimg.com/v2-c444ef5dc0c15e225e4d840036fd4179_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1366\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-c444ef5dc0c15e225e4d840036fd4179\" data-watermark-src=\"v2-73d97ab9470cc76b8538e432e57244b3\" data-private-watermark-src=\"v2-abdcf370366e26a69976cd93beafe286\"></p>\n<p data-pid=\"dShlWZmD\"><br>这些凶手缺少常识，没有一技之长，这个社会还没教会他们，吃饭的正确“姿势”。于是他们选择了最粗暴的几种方式——偷，抢，骗，甚至杀人。他们只是无知地认为，既然别人可以，那么我也可以。可只要有我们在，他们就不可以。<br><br><br>十二个真实故事<br>十二种残酷真相<br>暴力、嫉妒、怨恨、羞辱、欲望、恐惧、贪婪<br>都在《毛头的深夜理发店》这部剧集里了。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-55648419dc6e47d079558e94ee4973b1_720w.jpg?source=b1748391?rss\" data-rawwidth=\"722\" data-rawheight=\"847\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-55648419dc6e47d079558e94ee4973b1\" data-watermark-src=\"v2-d16dcf7d47715b3c10de297f02f9f98b\" data-private-watermark-src=\"v2-6b1b94fe2d245cc40c738b4e98250e16\"></p>\n<p data-pid=\"WkC0NJG1\">它一定不是一部最好看的动漫，也依然称不上是一部大制作的作品，但请仅仅把它当成一个还非常年轻的创作团队完成的一次小挑战来观看。<br>毕竟，这个小团队一定还会创作出更好看一点的动画作品。<br>毕竟，我们还有957个故事没讲完。</p>\n<p><br></p>\n<p><img src=\"https://picx.zhimg.com/v2-6638afb829abc2db5c6491bf1d0e71a3_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-6638afb829abc2db5c6491bf1d0e71a3\" data-watermark-src=\"v2-1e043593278662f338c4120337af011d\" data-private-watermark-src=\"v2-cdf8cf859be2303a704d790dcba2c254\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/tian-cai-zhi-ye-gu-shi?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">天才职业故事</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/546532267/answer/2606579839?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">27 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/517583348?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价《装甲骑兵》这部动漫的剧情？</a><br><a href=\"http://www.zhihu.com/question/517003697?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《电锯人》动画看完后的感觉是怎样的？</a><br>\n","link":"http://www.zhihu.com/question/546532267/answer/2606579839?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：影石发布 Link 4K 网络摄像头、Apple 更新「过时产品」名单等","date":"2022-08-03 00:37:54","description":"罗技 G 与腾讯游戏宣布合作，富士通推出 Lifebook WU-X/G2 等。<a href=\"https://sspai.com/post/74969\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74969"},{"title":"如何评价知音漫客漫画《零班编年史》，为什么现在都很难找得到了？","date":"2022-08-02 09:38:52","description":"\n<p data-pid=\"d6pJxq-p\"><b>《零班编年史》可能是知音漫客中最符合我笑点的四格漫画了。其玩梗以及吐槽功力实属罕见。</b></p>\n<p data-pid=\"PugathNd\">《零班编年史》于《知音漫客》2011年的Vol.196萌刊开始连载，于2015年6月18日在《知音漫客》第367期正式完结。一共43话。</p>\n<p data-pid=\"6hmaBdQF\">作者是<b>唐尼</b><sup data-text=\"主要负责编绘 滴水是负责和杂志社联系 \" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\">[1]</sup><b>，</b>关于作者，我有且只有看过他的这部《零班编年史》，通常意义上来说，一部有趣的四格漫画，是可以无限期连载下去的，而《零班编年史》在当时最大的对手就是《浪漫传说》，人气方面一直徘徊在10-15名之间，因此最终不得不被腰斩。</p>\n<p data-pid=\"L77XoZRD\">在完结之时，他在贴吧如此说道</p>\n<p data-pid=\"Mh0lMc50\"><b>大意是，他画漫画是为了玩，他更愿意去服务那10%真正喜欢动漫的读者，而不是随波逐流去画小说改，后续会在同人圈以及网络独立漫画发展。</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-19b0dfbcd58dce7c723168bc75447e77_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"580\" data-rawheight=\"223\" data-watermark=\"watermark\" data-original-src=\"v2-19b0dfbcd58dce7c723168bc75447e77\" data-watermark-src=\"v2-688c2aac32b23eba3366ead54d08b316\" data-private-watermark-src=\"v2-51c0c3ca8665d1f8576f09191b2222e0\"></p>\n<p data-pid=\"HTw8_qNO\">因此作者不再靠画漫画为生，而是凭借兴趣继续画漫画，不过偶尔也会出来恰饭哈哈哈，如果大家喜欢《零班》并且希望作者继续更新的，可以去支持一下</p>\n<p><img src=\"https://pic2.zhimg.com/v2-c3c41a8446a819ebc5ea38684acc276b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"690\" data-rawheight=\"429\" data-watermark=\"watermark\" data-original-src=\"v2-c3c41a8446a819ebc5ea38684acc276b\" data-watermark-src=\"v2-f38668ce137b327cb1601e087021ffe4\" data-private-watermark-src=\"v2-9d4cbe0a8d56e08232434fa20261c051\"></p>\n<p data-pid=\"EB-7uWU8\">但是作者在漫客上连载完结以后，为了给一直以来支持《零班》的读者一个答案，转到微博上继续画画，但是由于版权问题，因此不能出现《零班》字样，改为DLC，感兴趣的可以去微博支持一下作者。</p>\n<p data-pid=\"Wb_bgkcH\"><i>微博名称：<b>红色有角三联星</b></i><sup data-text=\"\" data-url=\"https://weibo.com/u/1976847617\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"2\">[2]</sup></p>\n<p><img src=\"https://pic1.zhimg.com/v2-5ed5fd6862e6865de1468febcb9a1007_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\"></p>\n<p data-pid=\"DRmPxhOE\">由于转到微博上，因此没有足够的经费支持上色，因此第一话画面如下</p>\n<p><img src=\"https://pica.zhimg.com/v2-f31555c71a9463a5f0a00a4ea581a168_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\"></p>\n<p data-pid=\"xeloR1bs\">不过作者了却了大部分读者的心愿，那就是<b>纸箱君的真面目！</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-ef7dc21e709cf04508cdc46140ecfcd8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1253\" data-rawheight=\"1772\" data-watermark=\"watermark\" data-original-src=\"v2-ef7dc21e709cf04508cdc46140ecfcd8\" data-watermark-src=\"v2-af66928ff553d65d2a4d2d19e2da2784\" data-private-watermark-src=\"v2-b1924820828b8b9daa42260641d02a71\"></p>\n<p><br></p>\n<p data-pid=\"fpdcoGes\">回到这个问题，为啥如今看不到《零班编年史》的漫画了呢？</p>\n<p data-pid=\"m06QLepm\"> 因为在《零班》完结后，人气越来越低，因此《零班》由于版权<sup data-text=\"漫客大部分作品如此\" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"3\">[3]</sup>逐渐开始在各个漫画平台开始下架</p>\n<p data-pid=\"j3aKTKp0\">直到2020年，《零班》最后的平台漫客栈也下架了零班，《零班》从此开始走向绝版 </p>\n<p data-pid=\"SUWGO9j-\">加之以当时《零班》的人气，不足以出单行本，所以也就没有单行本的网上资源了。</p>\n<p data-pid=\"Qbvdd9YJ\">目前能看到这漫画的，也就是一些经常跳出小广告的盗版漫画网站，以及向我这样喜欢收集漫画资源的老粉自己在网盘保存的资源<sup data-text=\"有需要可私信我，免费分享\" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"4\">[4]</sup></p>\n<hr>\n<p data-pid=\"Geyg54Nl\">既然聊到这了，就顺便重温一下《零班编年史》这部生不逢时的作品</p>\n<p data-pid=\"mEhB3GN5\">这部四格搞笑漫画的最大的几个特点就是，吐槽、neta、</p>\n<p data-pid=\"4FernbiZ\">随便举几个neta例子，那时neta做的最好的还是银他妈呢，《零班》多多少少有点放不开，大家可以自己看看这几张图究竟隐藏了多少彩蛋（不看注释的话）</p>\n<p><img src=\"https://pica.zhimg.com/v2-1ee5d786dd789f0694b2aafb8faf24e4_720w.jpg?source=b1748391?rss\" data-caption=\"龙珠太阳拳\" data-size=\"normal\" data-rawwidth=\"546\" data-rawheight=\"348\" data-watermark=\"watermark\" data-original-src=\"v2-1ee5d786dd789f0694b2aafb8faf24e4\" data-watermark-src=\"v2-032264468ea07118399b0fef6ee3bbc4\" data-private-watermark-src=\"v2-12d4eb15fc6aecb3fdfb6b5b0a3af3e5\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-094efde86d359471fec2b9ee3171b9c2_720w.jpg?source=b1748391?rss\" data-caption=\"北斗神拳\" data-size=\"normal\" data-rawwidth=\"542\" data-rawheight=\"338\" data-watermark=\"watermark\" data-original-src=\"v2-094efde86d359471fec2b9ee3171b9c2\" data-watermark-src=\"v2-bae83109b3da867096f96f5c3d97a6ac\" data-private-watermark-src=\"v2-14db8c5824dd2f9dc09647164a86dff8\" data-tags=\"porn\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-d97477b0c8a13232fa57530266617121_720w.jpg?source=b1748391?rss\" data-caption=\"辛德普\" data-size=\"normal\" data-rawwidth=\"531\" data-rawheight=\"338\" data-watermark=\"watermark\" data-original-src=\"v2-d97477b0c8a13232fa57530266617121\" data-watermark-src=\"v2-0fb8013a160ead323b3e01ceaccf24b7\" data-private-watermark-src=\"v2-f1314b34682386876e82a5ac0b992a97\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-c5e128b44365c194509353104fe8c987_720w.jpg?source=b1748391?rss\" data-caption=\"皮卡丘\" data-size=\"normal\" data-rawwidth=\"562\" data-rawheight=\"338\" data-watermark=\"watermark\" data-original-src=\"v2-c5e128b44365c194509353104fe8c987\" data-watermark-src=\"v2-1d66d799eb1e22e3ebc81450f2a16814\" data-private-watermark-src=\"v2-544de2b1b08519409a61f908c21a932b\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-b5a1ccadf901dac2471c2e0f0c83af71_720w.jpg?source=b1748391?rss\" data-caption=\"拯救地球学院的五斗\" data-size=\"normal\" data-rawwidth=\"567\" data-rawheight=\"359\" data-watermark=\"watermark\" data-original-src=\"v2-b5a1ccadf901dac2471c2e0f0c83af71\" data-watermark-src=\"v2-b4f81dd0776714dfc354f88973ca2657\" data-private-watermark-src=\"v2-d3655f2db8409b9c6f459fd64a987010\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-60b35a1f0e3508a2b1f4e9cf610f4242_720w.jpg?source=b1748391?rss\" data-caption=\"比克\" data-size=\"normal\" data-rawwidth=\"540\" data-rawheight=\"338\" data-watermark=\"watermark\" data-original-src=\"v2-60b35a1f0e3508a2b1f4e9cf610f4242\" data-watermark-src=\"v2-6cc21e7c17dca2b8d168a6666913589c\" data-private-watermark-src=\"v2-569404a3f09a3867d162dec1716e91e3\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-d8e04c92b3b2c9d8fda212ada466cab3_720w.jpg?source=b1748391?rss\" data-caption=\"植物大战僵尸\" data-size=\"normal\" data-rawwidth=\"552\" data-rawheight=\"344\" data-watermark=\"watermark\" data-original-src=\"v2-d8e04c92b3b2c9d8fda212ada466cab3\" data-watermark-src=\"v2-027041690a9e87f2625d31a1048b8fd9\" data-private-watermark-src=\"v2-90f96279582cb90ba1988a7835ad9f06\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-052b03df1741a45e02fda6240b578a63_720w.jpg?source=b1748391?rss\" data-caption=\"鸣人和黑猫\" data-size=\"normal\" data-rawwidth=\"365\" data-rawheight=\"224\" data-watermark=\"watermark\" data-original-src=\"v2-052b03df1741a45e02fda6240b578a63\" data-watermark-src=\"v2-d2c5b427fba1d09da96021c966544828\" data-private-watermark-src=\"v2-f860bc016c99b4c20b637caf369df5aa\" data-tags=\"politic\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-105c0db137221a20cf088edd4789b47d_720w.jpg?source=b1748391?rss\" data-caption=\"高达\" data-size=\"normal\" data-rawwidth=\"427\" data-rawheight=\"245\" data-watermark=\"watermark\" data-original-src=\"v2-105c0db137221a20cf088edd4789b47d\" data-watermark-src=\"v2-734f93a6c5a6b817337dcef1bffd490b\" data-private-watermark-src=\"v2-2d28291ba7945ebced282dee6ab6a0c1\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-c319a40dff98da6c0fd71c68301770f6_720w.jpg?source=b1748391?rss\" data-caption=\"圣斗士和更木剑八\" data-size=\"normal\" data-rawwidth=\"241\" data-rawheight=\"555\" data-watermark=\"watermark\" data-original-src=\"v2-c319a40dff98da6c0fd71c68301770f6\" data-watermark-src=\"v2-fb2115935ffab977db0afda88ccd6044\" data-private-watermark-src=\"v2-492c76f97a95e0f399ed2c929ab61548\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-68abe4be55efb47be31034936dc398b7_720w.jpg?source=b1748391?rss\" data-caption=\"鸣人的九尾\" data-size=\"normal\" data-rawwidth=\"546\" data-rawheight=\"424\" data-watermark=\"watermark\" data-original-src=\"v2-68abe4be55efb47be31034936dc398b7\" data-watermark-src=\"v2-6c531a37bbaa62d38c73645e85cf49c2\" data-private-watermark-src=\"v2-4cdd466a8d11ee7127176856242faac0\" data-tags=\"porn\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-f517430ce4878fee1196ced3d927ad62_720w.jpg?source=b1748391?rss\" data-caption=\"龙珠战斗服\" data-size=\"normal\" data-rawwidth=\"330\" data-rawheight=\"595\" data-watermark=\"watermark\" data-original-src=\"v2-f517430ce4878fee1196ced3d927ad62\" data-watermark-src=\"v2-a44c99eb8053aef96558daf7c239a55b\" data-private-watermark-src=\"v2-e72b97657485aa9f8e60d25eb82f2f3b\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-a811b8417f1788d01bbc76966d4d7cba_720w.jpg?source=b1748391?rss\" data-caption=\"saber\" data-size=\"normal\" data-rawwidth=\"453\" data-rawheight=\"460\" data-watermark=\"watermark\" data-original-src=\"v2-a811b8417f1788d01bbc76966d4d7cba\" data-watermark-src=\"v2-2e584be6c4d487baef1a5d306a860c03\" data-private-watermark-src=\"v2-28fde3b95fc153e2df9f404300099fa0\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-53e3a8709a9cc0c23d5206f1f7c1e701_720w.jpg?source=b1748391?rss\" data-caption=\"SD经典名言\" data-size=\"normal\" data-rawwidth=\"427\" data-rawheight=\"243\" data-watermark=\"watermark\" data-original-src=\"v2-53e3a8709a9cc0c23d5206f1f7c1e701\" data-watermark-src=\"v2-874d1285a2709a999f23fe783839e839\" data-private-watermark-src=\"v2-8dd2cf5c80b5c979afc8281e6c33eeca\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-911bbcb1b32c48f77b67dd49c46bd20b_720w.jpg?source=b1748391?rss\" data-caption=\"黑子和樱木\" data-size=\"normal\" data-rawwidth=\"423\" data-rawheight=\"463\" data-watermark=\"watermark\" data-original-src=\"v2-911bbcb1b32c48f77b67dd49c46bd20b\" data-watermark-src=\"v2-bdab2724df432d576fe5bd77ee02899e\" data-private-watermark-src=\"v2-89a552965d6ff797e9730dae7eb410fc\" data-tags=\"porn\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-005461c7611dc102df00bb239b058c9e_720w.jpg?source=b1748391?rss\" data-caption=\"柯南黑衣人\" data-size=\"normal\" data-rawwidth=\"401\" data-rawheight=\"314\" data-watermark=\"watermark\" data-original-src=\"v2-005461c7611dc102df00bb239b058c9e\" data-watermark-src=\"v2-26a051f99c3d2888a60c6d4f916a8d08\" data-private-watermark-src=\"v2-0d75f62c8f4ecd51d20e227be1b65d5a\"></p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-7d507d82ddfb8e2e15f7a1937ce39faf_720w.jpg?source=b1748391?rss\" data-caption=\"赛亚人\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"893\" data-watermark=\"watermark\" data-original-src=\"v2-7d507d82ddfb8e2e15f7a1937ce39faf\" data-watermark-src=\"v2-0ca424907033f8aa950e0b36edf041c4\" data-private-watermark-src=\"v2-7e3fdfebdf8f5f54195443b7a1f0ef7e\"></p>\n<p><br></p>\n<p><img src=\"https://pica.zhimg.com/v2-d550c88c0366ec9631c4c1aac53fb2a9_720w.jpg?source=b1748391?rss\" data-caption=\"蜡笔小新\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"929\" data-watermark=\"watermark\" data-original-src=\"v2-d550c88c0366ec9631c4c1aac53fb2a9\" data-watermark-src=\"v2-f79795d2eca2fa231a0c3f1b7097290e\" data-private-watermark-src=\"v2-5585816f3b05b0b89bf7f891396cbf1a\"></p>\n<p><br></p>\n<p><img src=\"https://picx.zhimg.com/v2-38bba5b429c7aa2255142280bc103886_720w.jpg?source=b1748391?rss\" data-caption=\"奥特曼和小怪兽\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1797\" data-watermark=\"watermark\" data-original-src=\"v2-38bba5b429c7aa2255142280bc103886\" data-watermark-src=\"v2-d59febebcfc8dad7b3cadc17dec8de17\" data-private-watermark-src=\"v2-a31c657dd35ea6d726800448476d1144\"></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-38a919743aba6f71b57e3eb4e1483e01_720w.jpg?source=b1748391?rss\" data-caption=\"哆啦A梦\" data-size=\"normal\" data-rawwidth=\"1299\" data-rawheight=\"1735\" data-watermark=\"watermark\" data-original-src=\"v2-38a919743aba6f71b57e3eb4e1483e01\" data-watermark-src=\"v2-e8773cf7248e31d5bb21b7a6df446a9d\" data-private-watermark-src=\"v2-910b7e5cc734e286341d438f229625c1\"></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-15c59be960ff09db785c22872e2fb7cf_720w.jpg?source=b1748391?rss\" data-caption=\"柯南\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"873\" data-watermark=\"watermark\" data-original-src=\"v2-15c59be960ff09db785c22872e2fb7cf\" data-watermark-src=\"v2-da6408e8f4020c57dd54744000253e8a\" data-private-watermark-src=\"v2-f3e4cfeb2269ef43a3c5e7cb6c9c2954\"></p>\n<p><br></p>\n<p><img src=\"https://pica.zhimg.com/v2-f5b46aa3f1f10125c05bf1cef75cf1ea_720w.jpg?source=b1748391?rss\" data-caption=\"蜘蛛侠\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"2164\" data-watermark=\"watermark\" data-original-src=\"v2-f5b46aa3f1f10125c05bf1cef75cf1ea\" data-watermark-src=\"v2-1a77b7ab9e8bccd38b4ece794e4a2467\" data-private-watermark-src=\"v2-e4d9967805bd3bdca183b7189d8b3d61\" data-tags=\"politic\"></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-0d402fe5cd337fac524d588fc6ab68cd_720w.jpg?source=b1748391?rss\" data-caption=\"初号机暴走\" data-size=\"normal\" data-rawwidth=\"1420\" data-rawheight=\"1691\" data-watermark=\"watermark\" data-original-src=\"v2-0d402fe5cd337fac524d588fc6ab68cd\" data-watermark-src=\"v2-a00a7d14f7b502e25b3aa7518747f0c7\" data-private-watermark-src=\"v2-b382b695eb932f6e71bd0428ecaa0ac0\"></p>\n<p data-pid=\"keqSbTiK\">除了让资深漫迷喜闻乐见的neta外，本作的吐槽也是非常给力，顺便举两个例子</p>\n<p data-pid=\"b2NnZ7Y6\">在差生眼中，70分也是高分，而且是天才级别</p>\n<p><img src=\"https://pic3.zhimg.com/v2-12fc20f58e18e11567cee836cfc9a72a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1307\" data-rawheight=\"1693\" data-watermark=\"watermark\" data-original-src=\"v2-12fc20f58e18e11567cee836cfc9a72a\" data-watermark-src=\"v2-150186366b454cc926019f9d19d4abd4\" data-private-watermark-src=\"v2-6c743c60c6fac2e053bd2031a4d5e55c\"></p>\n<p data-pid=\"5k_49lko\">比赛结束后，安慰自己</p>\n<p><img src=\"https://pic3.zhimg.com/v2-bdefa4eb8fa60041419919e2e8526390_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"2257\" data-watermark=\"watermark\" data-original-src=\"v2-bdefa4eb8fa60041419919e2e8526390\" data-watermark-src=\"v2-f191de56253bfb49cd9e8d7574ce4881\" data-private-watermark-src=\"v2-adacd8dcc7eb8a99a2612dd690605532\"></p>\n<p data-pid=\"9oAhXhnC\">戴上眼镜变了一个人</p>\n<p><img src=\"https://pic1.zhimg.com/v2-cd4c7b7782b883582eccab3526a7f58f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"2556\" data-watermark=\"watermark\" data-original-src=\"v2-cd4c7b7782b883582eccab3526a7f58f\" data-watermark-src=\"v2-5da4e9922ce1ae75516c97dc818d1c64\" data-private-watermark-src=\"v2-82aad29d2358b693dae163f5155fc0ba\" data-tags=\"porn\"></p>\n<p data-pid=\"_plnbsoo\">纸箱下面还是纸箱</p>\n<p><img src=\"https://picx.zhimg.com/v2-b803432ca13b60e09d14cbb84ebe3a0d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1716\" data-watermark=\"watermark\" data-original-src=\"v2-b803432ca13b60e09d14cbb84ebe3a0d\" data-watermark-src=\"v2-8dd05fd5f2646c9df4fa3eb2a9736ba3\" data-private-watermark-src=\"v2-81e76575eccbe1f167cec0b3b1649bcd\"></p>\n<p data-pid=\"u1IeuO4H\">纸箱的真面目就是还有一个纸箱</p>\n<p><img src=\"https://pica.zhimg.com/v2-f2c78a620393d7c70eaac68672b881e8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"2257\" data-watermark=\"watermark\" data-original-src=\"v2-f2c78a620393d7c70eaac68672b881e8\" data-watermark-src=\"v2-e771c5d5e62616530256102e682240d4\" data-private-watermark-src=\"v2-1192ade85fa7c0a74278f02c6ce88bfb\"></p>\n<p data-pid=\"Bw7GpIfd\">利用纸箱的俯视图来作弊</p>\n<p><img src=\"https://picx.zhimg.com/v2-87118c68d147a2bf2415d73e9d890077_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1332\" data-rawheight=\"1593\" data-watermark=\"watermark\" data-original-src=\"v2-87118c68d147a2bf2415d73e9d890077\" data-watermark-src=\"v2-9df81825b890d67671e3cadca9a1a5c8\" data-private-watermark-src=\"v2-76dd1d0cb77e27692b0c214193d99dc9\"></p>\n<p data-pid=\"TtPILj9C\">在纸箱上写字＝纹身</p>\n<p><img src=\"https://pica.zhimg.com/v2-2c30af576f85065d963b85b9b3d9edac_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"2269\" data-watermark=\"watermark\" data-original-src=\"v2-2c30af576f85065d963b85b9b3d9edac\" data-watermark-src=\"v2-0c64f97a78ca3629a15095f7325a5efa\" data-private-watermark-src=\"v2-a41220b207fa7261a47a4159c6e31d0c\"></p>\n<p data-pid=\"m07YDQps\">而作为故事的主线，简单概括一下就是</p>\n<p data-pid=\"h04x7W7K\"><b><i>在一群全是女性的学院之中，有一个特殊的“零班”，这个班级是由五名性格各异的男性组成，分别是纸箱君、霍金、东少、安键和我们的主角秋时雨，在这所女子学院发生的日常校园故事。</i></b></p>\n<p data-pid=\"uVnx7Rtn\">按理来说，这种日常漫应该是没有尽头的，只要读者愿意看，作者应该就能无限画下去，然而结果是，这部作品后期由于人气不佳，导致在43话直接腰斩。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-3850928f39a99c2a225bc6f9ba198740_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"2841\" data-watermark=\"watermark\" data-original-src=\"v2-3850928f39a99c2a225bc6f9ba198740\" data-watermark-src=\"v2-ec72373116010cc0f23a8f131291c72c\" data-private-watermark-src=\"v2-4e6fc5543489315c758394f91262c25d\"></p>\n<p data-pid=\"EFIdUbRK\">在知音漫客上连载的最后一话43话中，纸箱君终于脱下纸箱露出真面目，而且也大放豪言，要开创零班的新纪元…无数的读者也都在期待着，然而，又有多少人还记得这个约定呢？</p>\n<p data-pid=\"9ItyK3OZ\">中国漫画中又有多少作品因为同样的原因留下一大堆坑未填的呢？</p>\n<p data-pid=\"k_hdJ31i\">《零班编年史》不会是第一个，也不会是最后一个，但是作者已经尽了自己最大的努力，给了读者很多后续的答案…但是仍在执着追求答案的读者，又还剩多少呢？</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/bin-di-47-74?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">彬帝</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/278025029/answer/2605507630?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">5 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/543232578?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">找一个知音漫客上连载过的漫画！想了两年了！?</a><br><a href=\"http://www.zhihu.com/question/536588519?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">想找《知音漫客》的一部短篇？只有一回。。。？</a><br>\n","link":"http://www.zhihu.com/question/278025029/answer/2605507630?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"距离新 iPhone 不到两个月，为什么我买了一台 iPhone 13 mini","date":"2022-08-02 09:30:00","description":"Matrix首页推荐Matrix是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选Matrix最优质的文章，展示来自用户的最真实的体验和观点。文章代表作者个人观点 ...<a href=\"https://sspai.com/post/74960\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74960"},{"title":"如何评价 Steam 游戏《晴末置雨》？","date":"2022-08-02 08:28:02","description":"\n<p data-pid=\"xwKWfmRg\">    大家好，我是置雨制作组的咸鱼，《晴末置雨》的主催。《晴末置雨》是一部由置雨制作组开发的百合向文字冒险游戏，也是我参与制作的第一款游戏，目前已上架steam。非常荣幸能在知乎上写下这篇制作人亲自答，我也就趁此机会跟大家聊聊制作《晴末置雨》的故事。</p>\n<p><img src=\"https://picx.zhimg.com/v2-c326e68a0b5a71eb315566cc00099d34_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"554\" data-rawheight=\"420\" data-watermark=\"watermark\" data-original-src=\"v2-c326e68a0b5a71eb315566cc00099d34\" data-watermark-src=\"v2-023ad28573b1d47225b7576c26e358d6\" data-private-watermark-src=\"v2-6f38d0c708ab546017e4c622aa830af7\"></p>\n<p><br></p>\n<p data-pid=\"iip6WJX0\">商店链接：<a href=\"http://link.zhihu.com/?target=https%3A//store.steampowered.com/app/1833040/_/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">store.steampowered.com/</span><span class=\"invisible\">app/1833040/_/</span><span class=\"ellipsis\"></span></a></p>\n<h2><b>引子：</b></h2>\n<p data-pid=\"IxOvpCL_\">    19年的时候我第一次萌生了做独立游戏的想法，不过那时候还不知道到底应该做什么类型的游戏。后来有一天，在一个游戏交流群里，大家聊起自己的工作和学业，有人提议一起做一部同人游戏出来，那时的我由于什么都不会所以也就没有参与讨论，不过这给了我一个新的想法：“不如做个AVG出来怎么样？”。</p>\n<p data-pid=\"xsbHePaX\">    之后，我了解了AVG的制作人员构成和技术相关的知识，也想过一些题材。不过因为要应付自招，手上没什么资金而且也不认识画师、编剧等等在AVG开发中比较重要的制作人员，就暂时搁置了。</p>\n<p><br></p>\n<p data-pid=\"H2OB2QcX\">    时间来到2021年，应付完自招的我有了充分的个人时间和精力，我想起了之前提到的那部同人游戏，发布几个月以来，游戏在原作粉丝群体中收获了几乎清一色的好评，有点感兴趣就想下载下来玩一玩。于是在列表中找到了那部游戏的主催——白酪丝，获得了游戏的官网地址并且在下载之后好好玩了玩。说到这大家也许都知道了，那部同人游戏正是《线转_MisrepresentLove》。我在玩了线转以后非常喜欢白酪丝的剧本，在聊天的时候说起打算做AVG的事，而白酪丝正好也有意向做原创游戏，我就顺势说起了我的计划，想让白酪丝来担任剧本。白酪丝同意之后，我也开始着手企划的撰写和资金的筹备。</p>\n<p data-pid=\"2jkN2-pc\">    说起资金，虽然前几年就有在刻意攒钱，但作为游戏开发的资金肯定是远远不够的，制作之初这是个非常令人头疼的问题，我也想到了暂时的解决办法：出去打工。那时的我在肯德基做了几个月配餐，暂时赚到了一点钱作为开发资金后就离职了，可惜当时没考虑到开发游戏需要那么多预算，早知道就再打几个月工了。</p>\n<h2><b>制作：</b></h2>\n<p data-pid=\"LM9Hds40\">    离职之后我开始写企划书，最初的企划是一部骨科百合，但是因为没有严谨考虑过那篇企划的可完成性，就被我自己打回了。在构思新企划的时候想到目前绝大多数百合作品都是着重描写两人相识相恋的过程，而相恋之后可能会出现的种种问题则基本不会去讨论，我觉得这或许是个很新颖的题材，就写下了这篇企划，白酪丝看了也非常感兴趣，就定下来了，也就是大家现在玩到的《晴末置雨》的雏形。白酪丝很快就写出了剧本大纲，经过几轮修改之后很快写出了正式的剧本，之后更是负责了制作组几乎所有文字内容，包括宣传文案、成就包装以及乐曲命名。我也根据正式剧本定下了需要的美术和音乐素材。</p>\n<p><br></p>\n<p data-pid=\"QUcterLw\">    立绘与CG也是AVG中非常重要的一部分，所以我当时把大部分预算都放在了美术资源上。白酪丝在一次漫展中认识了叽菇，也就是后来《晴末置雨》的立绘与CG画师，不过最初我们只找叽菇谈论了CG的绘制，立绘则是由我在网上联系到的画师星星布丁负责，也就是大家在我们制作组第一次宣传中看到的初版立绘：</p>\n<p><img src=\"https://picx.zhimg.com/v2-9b1f26178d89bb0e47bcb97cc3bf031a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"457\" data-rawheight=\"314\" data-watermark=\"watermark\" data-original-src=\"v2-9b1f26178d89bb0e47bcb97cc3bf031a\" data-watermark-src=\"v2-f03ae37e2cd5f442e525b334f85bfb9f\" data-private-watermark-src=\"v2-ac77aa819f5ff4fe0065e542c01a55b7\"></p>\n<p><br></p>\n<p data-pid=\"BClpEl_g\">    星星布丁大大是非常厉害的画师，但由于当时资金实在非常有限，所以画出的风格更偏向于轻松的校园喜剧，与略显酸涩的现实主义故事背道而驰。但当时的我们只把这部作品当做了小圈子里的自嗨产物，竟然真的将这一版立绘实装到了游戏之中。</p>\n<p data-pid=\"w3WboDrI\">    因为一些日G的影响，再加上有《线转》中尝试的经验，白酪丝根据剧本找到了Kebol，约了几张Q版CG，也就是游戏里大家看到的那几张，生动的Q版表情为主角们的日常增添了不少活力，最终的效果也是大家有目共睹的。</p>\n<p data-pid=\"M0MJ-NMS\">    这次的背景则是用的ResDIY的免费背景素材，由纸质根据剧本需要稍作修改之后才放进了游戏，这也是大家觉得背景很眼熟的原因。</p>\n<p><br></p>\n<p data-pid=\"rHG-vigg\">    搞定了美术，我想起配音的事情，之前《线转》的配音灵缡心一人两役配完了两位主角，专业程度令人十分佩服，我就请白酪丝联系了一下，看看能否让她为《晴末置雨》的其中一位主角配音，没想到这次心姐还拉上了她的朋友新月冰冰和紫苏九月，一同完成了这次《晴末置雨》三人的配音。</p>\n<p data-pid=\"c6kTqL98\">    听觉方面有了全中文语音，BGM自然也不可或缺。音乐部分一开始是想找我以前学电吉他时的老师制作，老师平时会自己写一些曲子，不过在了解价格之后果断放弃了。后来我也想过使用网络上的免费素材，便在网上四处翻找，却始终没有找到令人中意的。不得已只能请教当时认识的几个主催，他们则为我推荐了黑耀老师，搭上线后，我们在黑耀老师的素材库中找到了几首比较适合的曲子作为《晴末置雨》的BGM。</p>\n<p data-pid=\"Qgr34xw3\">    在文字、声音、美术都已完备的情况下，晴末置雨的制作也接近尾声，当时的我们计划在22年的年初发售游戏，将这块未经打磨的粗糙石块，投进不会回应它的大海之中……</p>\n<p data-pid=\"6mto4BzW\">    然而大家是否觉得这和最终看到的游戏成品不太一样呢？这就要说起去年年底临近原定发售日期之际，我们和龍之咲合作的事情了。</p>\n<p data-pid=\"Cvp49GBq\">    21年下半年，HD老师组织了一次聚餐，由于原定在11月的CP取消，所以聚餐也就改到了12月，在餐桌上HD老师和其他几位大大聊完后，提起了我们的作品，看完后他问了我几个问题：</p>\n<p data-pid=\"HUTVy1kc\"><b>    “为什么立绘和CG的风格差别这么大？”</b></p>\n<p data-pid=\"_IHDpQ_K\">    我很无奈地解释道是因为资金问题。</p>\n<p data-pid=\"OEk1yddn\"><b>    “既然CG的风格更适合作品主题，为什么不让同一个画师负责？你作为一个玩家的身份来考虑一下，你在steam上会花钱买你现在的作品吗？”</b></p>\n<p data-pid=\"s3n-W6KT\">    我被这些尖锐的问题戳中，甚至心里还暗自想要狡辩，一来我们的资金并不宽裕，想要堆量和推精度都举步维艰；二来我们一开始就将自己放在了“只要能做出来就算成功”的定位下，做到现在的程度，至少满足了这个要求，然而HD老师却否定了我们的项目制作。</p>\n<p data-pid=\"RvRJEq7M\">    但之后，HD老师又说：</p>\n<p data-pid=\"pHnYRchf\"><b>    “别和自己妥协。”</b></p>\n<p data-pid=\"NtcKfMCj\">    我这才回想起来，所谓的低成本不过是为自己的低品质搬来的挡箭牌，而我们真正想做的也绝不是现在这样的半成品，归根结底，我们并没有遵循自己的意愿去做自己理想中的作品。</p>\n<p data-pid=\"mHvM3JYd\">    在接受了对方的逻辑推导后，我们还聊了替换立绘的预算，以及今后的合作模式。</p>\n<p data-pid=\"J7Ak0ZRz\">    “如果没有回本的话，钱就不用还了。”HD老师提出了这个无法反驳的提案，在感受到期待和信任，最重要的是明白自己最开始制作游戏的目的后，我们立即取消了原定的发售计划，着手进行游戏品质的提高。</p>\n<p data-pid=\"yN4t65_2\">     最能取得立竿见影效果的，是美术方面：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-910d1f8c65a210ca5baa3d4aadbbc04a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"553\" data-rawheight=\"427\" data-watermark=\"watermark\" data-original-src=\"v2-910d1f8c65a210ca5baa3d4aadbbc04a\" data-watermark-src=\"v2-39f4f296b88b204d0071b2260ea6a8a6\" data-private-watermark-src=\"v2-860140deeecf027729268507b73f3247\"></p>\n<p><br></p>\n<p data-pid=\"TPKEPqxo\">    我们让原本只负责CG的叽菇接手了立绘的迭代，保证CG与立绘的画风统一，也让游戏风格与角色特性更加鲜明，在新一版的立绘下，羽墨的干练，芷晴的可爱，还有婉茗的温柔，都获得了更加突出的表现。</p>\n<p data-pid=\"wQjd3r1z\">    另一方面，在打磨过程中我们发现游戏的BGM实在是少，重复度太高，就找黑耀老师额外制作了三首曲子，三首共用一个主旋律，根据情绪的变化衍生出截然不同的听觉感受，分别是主题曲《焉知晴雨》、羽墨角色曲《薄雾弥时》和芷晴角色曲《雾散云开》。</p>\n<p><img src=\"https://pica.zhimg.com/v2-5fd9456caec79aa8aa32ff57f3aec06a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"242\" data-watermark=\"watermark\" data-original-src=\"v2-5fd9456caec79aa8aa32ff57f3aec06a\" data-watermark-src=\"v2-c9bd041be4105317bb11b6467059fa0f\" data-private-watermark-src=\"v2-368f5ce460f6d9c1d40a32852b11dba0\"></p>\n<p><br></p>\n<p data-pid=\"-0br8VuU\">    只可惜剧本完成已久，配音也早已在切分后实装，若要扩写和改动，牵扯到的方面实在太多。我们不得已放弃了对剧情结构的变更，但还是对描述性的文字逐句进行了优化。</p>\n<p data-pid=\"6oiO8rGi\">    经过了数月的打磨，《晴末置雨》才算正式完成，最终上线了。</p>\n<p data-pid=\"XXdCMsSi\">    自上线以来，不只是Steam上的评论，B站，贴吧、微博上，只要有对《晴末置雨》的评论和意见，我们都在持续记录着，借用编剧白酪丝很喜欢玩的一句漫画梗：必可活用于下一次。</p>\n<h2><b>致谢：</b></h2>\n<p data-pid=\"2f6hWbuB\">    十分感谢这一路上参与制作、提供过帮助、帮忙宣传与测评的各位，大家辛苦了。同时，非常感谢游玩过《晴末置雨》的各位玩家的支持。</p>\n<p data-pid=\"_g0rpFSO\">    这次的游戏制作也让我学到了资金的重要、美术风格统一的必要性等各种知识。《晴末置雨》确实存在着诸多问题，这些问题都将化作食量，促使我们将来尽最大努力去做出大家认可的作品。下一部新坑已经在积极准备，游戏时长和CG立绘数量方面都会有显著的提高，希望下一次见面时，我们彼此都已经变得更好。</p>\n<p data-pid=\"RKOYg8Cm\">    感谢大家读到这里，那么，我们下部作品再见。</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/akizuki-1?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">saltedfish</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/545882212/answer/2605390530?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">3 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/505728234?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">游戏《葬花暗黑桃花源》 Steam 好评如潮，对于剧情，你有哪些看法？</a><br><a href=\"http://www.zhihu.com/question/545492823?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《日落黄昏时》上线 Steam，你对该款游戏有何评价？</a><br>\n","link":"http://www.zhihu.com/question/545882212/answer/2605390530?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"App+1 | OCR 录入、金字塔减糖，HiWater 想成为你的喝水管家","date":"2022-08-02 07:55:50","description":"「记录」这件事就是非常有威力，它会把注意力之外的小细节收集起来，给予一种确实发生但又意料之外的生活视角。比如如果不是记账，我不知道原来每个月会支出那么多零零碎碎的「拿铁因子」；如果不是HiWater， ...<a href=\"https://sspai.com/post/74956\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74956"},{"title":"在小宇宙收听播客 200 小时后，我体会到了播客的魅力","date":"2022-08-02 06:10:50","description":"从听众的角度一直作为消费者去收听内容有一种乐趣；而投入自己的时间站在生产者的角度去创作播客，也许能体会到更不一样的感受，看待播客的视角也会有新的发现。<a href=\"https://sspai.com/post/74915\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74915"},{"title":"如何评价中国漫画家章磊以及他的国产漫画作品《蝴蝶少年》？","date":"2022-08-02 05:07:01","description":"\n<h2>蝴蝶少年的前世今生</h2>\n<p data-pid=\"CskbrrBC\">这部曾经在<b>知音漫客</b>上连载的《<b>蝴蝶少年》</b>！停载之后，后面《<b>新蝴蝶少年》</b>在<b>少年top</b>杂志上面连载，剧情也做了改动，并且出了四本<b>单行本</b>。之后少年top停刊了又在兄弟刊<b>少年p</b>上连载黑白版的新蝴蝶少年(剧情是一样的)</p>\n<p data-pid=\"khgxvotd\">然后在2020年也就是《蝴蝶少年》系列诞生10周年，也是漫客版《蝴蝶少年》诞生12周年纪念，章磊老师决定于2020年6月1日在<b>微博推出《新蝴蝶少年》第二季</b>原稿赏析，一共18话<sup data-text=\"第一话\" data-url=\"https://m.weibo.cn/status/4511082205461672?sudaref=www.zhihu.com\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\">[1]</sup>，全网免费连载，至今未完结，本人也微博向老师求证过，短时间之内不会再更新了。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-0a97dff513c2bab45cc1dc51a41c2e59_720w.jpg?source=b1748391?rss\" data-caption=\"章磊老师重心投入漫画教学中\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"879\" data-watermark=\"watermark\" data-original-src=\"v2-0a97dff513c2bab45cc1dc51a41c2e59\" data-watermark-src=\"v2-f70ebeda1d232753ebf2bac128728df0\" data-private-watermark-src=\"v2-604d91c650240507ca6e378bb8e9617e\"></p>\n<p data-pid=\"t62ThRPA\">关于新蝴蝶少年和旧版之间的区别<sup data-text=\"【章磊老师做客TOP，讲述新《蝴蝶少年》背后的故事_少年TOP官博_新浪博客】\" data-url=\"http://blog.sina.cn/dpool/blog/s/blog_71d4b4780102dx5z.html\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"2\">[2]</sup>，章磊老师在接受少年TOP采访时就已经阐述过了</p>\n<p data-pid=\"Wofzufkc\">用章磊老师的原话就是</p>\n<p data-pid=\"L2uSeJgb\">新版《蝴蝶少年》<b>从<i>内容上做了大规模的改进</i></b>，我们不希望读者在看新《蝴蝶少年》的时候会觉得自己只是在看旧的作品。因此当大家惊讶发现一些地方和旧版有出入的时候~希望大家能了解，旧版只是这个故事体系中的一小部分，新版所展现的将更为全面。</p>\n<p data-pid=\"VeVC0tDU\">新版第一话，页数为40页整，故事以页数各半的形式，分别交代了<b>【前世】与【今生】</b>两个剧情分支，这是旧版第一话所没有的。</p>\n<hr>\n<h2>知音漫客的《蝴蝶少年》</h2>\n<p data-pid=\"uC-nxOdd\">漫客版本的《蝴蝶少年》，从2008年连载开始，共计21话。<b>非常有意思的是，作品在21话时获得顺位第一，人气正盛，但是最终由于作者生病，不得不停刊。</b></p>\n<p data-pid=\"SKdsYfv8\">连载初期，《蝴蝶》的作品排名仅第五名，不好不坏，但离读者的期待远不够。</p>\n<p data-pid=\"LL8SQWVe\">《蝴蝶》一直稳居第五！就像一只只小章鱼，死死抓着礁石，不被大浪冲走！</p>\n<p data-pid=\"VsMvBi5c\">无数的热心读者对作者的期待与支持，如同巨手，将这只小小的蝴蝶，一直稳固在了第五的排名位置上！</p>\n<p data-pid=\"OFdBzgvs\">之后的几个月里，随着故事的发展，新角色的不断加入，排名再次发生了变化。</p>\n<p data-pid=\"yeJmAgZA\">在连载一周年之际，从第三名，开始向第二名进军了！</p>\n<p data-pid=\"qRtYQ1Fp\">作者一直很担心，以男孩子为主角的漫画，是否能在少女向的杂志上得到大家认可。</p>\n<p data-pid=\"QNzq8uFA\">也很担心，少年漫画的题材，在中国的土地上，是否能生根发芽……</p>\n<p data-pid=\"4UoO9SWz\">事实证明</p>\n<p data-pid=\"2wrwF4Hw\"><b>可以！</b></p>\n<p data-pid=\"fiiqPsa0\">从全国各地获得的信息表明，《蝴蝶少年》的读者军团正日益壮大，除了13-19岁的读者外，编辑部还惊喜的发现，20-30岁的大读者，也在关注着这部作品！</p>\n<p data-pid=\"WUrUQn64\">下面，让我来稍微分析一下《蝴蝶少年》中不算秘密的秘密！</p>\n<p data-pid=\"38KLynsh\"><b>一.强力牌悬念</b></p>\n<p data-pid=\"AXj-2hAN\">可谓是《蝴蝶》一月一刊，能持续让大家还记忆犹新的王牌。</p>\n<p data-pid=\"tAig2rfT\">在连载初期，作者就很苦恼，如何让读者能在一个月后还记得收看他们的故事呢？</p>\n<p data-pid=\"GMy-TKkp\">敖幼祥老师曾经说过这样一句话：漫画最经典的地方，就是最后的<b>“未完待续”</b>！</p>\n<p data-pid=\"0G5YRcMa\">这句话深深影响了《蝴蝶》，于是尝试着制造出了以“泳赛事件” “女校失踪事件”等超强力的悬念感，为了能在一个月后，读者还记得有这样一只小蝴蝶，等着你回来O(∩_∩)O</p>\n<p data-pid=\"TCEmgFq1\"><b>二.鲜艳，但不刺眼的色彩</b></p>\n<p data-pid=\"v3Q5NoDV\">考虑到读者大人的眼睛持续观看整本杂志，那些花花绿绿的色块一定会让您的眼睛疲倦的！</p>\n<p data-pid=\"e05Odk-n\">所以《蝴蝶》采用的是比较接近的颜色来绘制，例如开始尝试将背景尽量统一在一种颜色中，并且使用蓝色，紫色等不刺眼的颜色，以保证大家在阅读时能轻松观看，看完《蝴蝶》，还有足够的“视觉能源”去欣赏下一部作品！</p>\n<p data-pid=\"jgfmWNsB\"><b>三.黑白漫画感</b></p>\n<p data-pid=\"MFefWE-4\">虽然《蝴蝶》是彩色漫画，但为了让画面能更加具有真实感和变现力，所以蝴蝶的初期线稿，我们都一律画成黑白漫画的感觉。但《蝴蝶》初期并不是这么制作的。</p>\n<p data-pid=\"OmWLdT_-\">这一点，还得感谢《魔人》给带来的提示与启迪，章老师还特别感谢过李建老师</p>\n<p data-pid=\"6FEjZyJl\"><b>四.用放大镜才能看到的细节</b></p>\n<p data-pid=\"FSEpePG5\">细节的保留一直是章老师作品的特点，也算一种嗜好吧！</p>\n<p data-pid=\"DNCtDU7i\">例如莫奈的每一缕秀发，即使是只出现一个小小的头像，也会放大到最大去绘制……</p>\n<p data-pid=\"f0CU3cON\">连作者自己都感觉自己是不是BT过头了呢。</p>\n<p data-pid=\"2rV-C4Zk\"><b>五.对白尽量简单易懂，生活化，中国化</b></p>\n<p data-pid=\"hv0xV4X9\">有一句对白是否还有印象？</p>\n<p data-pid=\"lSZSJq9j\">“我倒羡慕你，生个儿子，我那两个全是丫头！”</p>\n<p data-pid=\"Ucc1j1vl\">是的，这是第十话突然蹦出的“老连长”的台词。</p>\n<p data-pid=\"kcmyjVEM\">虽然是不经意的一句对白，但是，好像只有中国漫画里才有可能出现这样的对白吧！（部分地方还是重男轻女的）</p>\n<p data-pid=\"sV9TxUFk\">《蝴蝶》中尽量去避免使用英文，网络用语，例如“草泥马”，“雷”等现代网络用语，我们都尽量去避免，争取年纪稍大点的读者也能看得懂！</p>\n<p data-pid=\"jgTUaq54\">但《蝴蝶》并不排斥一些时尚，且通俗的用语，如“华丽丽”“乱入”等词语，即使是不上网的人，也能很容易理解其中的含义！而小读者也会对这些词语感觉很亲切吧！</p>\n<p data-pid=\"Kyj9-Syb\">口语化，则是指故事中的角色说话方式很生活，例如歌雅就是因为一句“贱人”而走进大家心中，此外，餐馆老板在说话中，带些略显粗鲁的词语，是否也让大家感觉，这个老板一定就生活在周围的某处呢？</p>\n<p data-pid=\"a-lnEcjB\">章老师在一周年访谈时就表示</p>\n<blockquote data-pid=\"rNpyxRal\">如何将《蝴蝶》做到最好，一直是我们追求的目标，为此，我们想了很多很多……<br>场景是不是少了，场景够复杂吗？<br>分镜头大家能看懂吗？<br>对白字数会不会过多，节奏感如何？<br>如果印成单行本，每一次翻页读者会产生怎样的视觉冲击？<br>悬念是否设置过多了？在什么时候需要为大家解开谜题？<br>多少话放在一起是比较完整的一话，让购买单行本的读者能尽量浏览一个独立的故事？                </blockquote>\n<p data-pid=\"TAMAnypl\">因此，最后知音漫客版的《蝴蝶少年》能取得成功是必然的。</p>\n<p data-pid=\"Sc810B9B\">最后，让我带大家稍微回顾一下漫客版的《蝴蝶少年》剧情，也方便和另外的版本进行对比</p>\n<p data-pid=\"5GvJ8mMR\">漫客般的《蝴蝶少年》人物造型会显得稚嫩一点，毕竟受众在那，但是整个故事却是<b>几个版本中最吸引人也最具有灵气的。人物的弧度也是最令人印象深刻的。</b></p>\n<p data-pid=\"fL9pa77T\">首先是我们的主角，<b>时宇</b>，一个拥有类似于黑洞能力的热血笨蛋（少年漫经典标配）</p>\n<p><img src=\"https://pic3.zhimg.com/v2-e16a509c9b2f9485b8ce61088d1329f7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1112\" data-watermark=\"watermark\" data-original-src=\"v2-e16a509c9b2f9485b8ce61088d1329f7\" data-watermark-src=\"v2-c05f54905564d996815c2eaf7924c351\" data-private-watermark-src=\"v2-61af6f2eba262150eae91fda82c44fec\"></p>\n<p data-pid=\"DqtpXBsf\">人气爆棚的男二，擅长变魔术的花花公子<b>休达</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-69a26e8bacc31892a7ed660ad7078e3a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1380\" data-watermark=\"watermark\" data-original-src=\"v2-69a26e8bacc31892a7ed660ad7078e3a\" data-watermark-src=\"v2-2e1ed6bf31434d73ed2973187365d437\" data-private-watermark-src=\"v2-9c884117ef23372bc4af09be28fa759f\"></p>\n<p data-pid=\"crC3XCue\">第一部中颜值巅峰，失忆的冰山帅哥<b>冰树</b></p>\n<p data-pid=\"2aGUee34\">在漫客版中，冰树与莫奈姐姐的感情线还没有得到结局，非常可惜，但是这个角色在《新蝴蝶少年》几乎没有出场机会</p>\n<p><img src=\"https://pica.zhimg.com/v2-94c7af1d841139a76922ab4e66bc270c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1194\" data-watermark=\"watermark\" data-original-src=\"v2-94c7af1d841139a76922ab4e66bc270c\" data-watermark-src=\"v2-f9eada50c702baca95eee16cee612a93\" data-private-watermark-src=\"v2-ddbf62e4c797048d8803bc9340de641b\"></p>\n<p data-pid=\"WfoKQMPm\">毒舌黑长直歌雅以及非常抢戏的跟班绿发小妹亚楠（两人在第二季有很多戏份）</p>\n<p><img src=\"https://pic2.zhimg.com/v2-ad67e919dce5dd87db3b1efaced99722_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1380\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-ad67e919dce5dd87db3b1efaced99722\" data-watermark-src=\"v2-17e976efc6246412713ed678e2cd7e65\" data-private-watermark-src=\"v2-d7b5deaace6f184345e1396c4ad02299\" data-tags=\"porn\"></p>\n<p data-pid=\"ntvdGSUM\">以及当时所有男生梦寐以求的女主莫奈</p>\n<p><img src=\"https://pica.zhimg.com/v2-f90cb8097c6d3b6de7e1bec47757d072_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1165\" data-watermark=\"watermark\" data-original-src=\"v2-f90cb8097c6d3b6de7e1bec47757d072\" data-watermark-src=\"v2-0a82e79e62b78859f39e8b5f510297f6\" data-private-watermark-src=\"v2-dc3217ea82e009493c5766e021273124\"></p>\n<p data-pid=\"Q4d8YInK\">两人的相遇源于一次英雄救美，因为莫奈要代表她所在学校争取荣耀，但是小脚却意外受伤，就在千钧一发之际，时宇出手相抱</p>\n<p><img src=\"https://pic4.zhimg.com/v2-f6cfae490c47d92fba0a9efd5423f145_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1412\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-f6cfae490c47d92fba0a9efd5423f145\" data-watermark-src=\"v2-1509f9b8c27a0bbd8bc3e0e46e9eaf74\" data-private-watermark-src=\"v2-14070fd769aeb3d295c86b58b9075571\" data-tags=\"porn\"></p>\n<p data-pid=\"I1jpDFRl\">于是乎，两人便有了初次正式介绍，他们的爱恨纠葛，也从此刻开启。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-8d796c171c4dac2e5223bcbedf447951_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1399\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-8d796c171c4dac2e5223bcbedf447951\" data-watermark-src=\"v2-3cc1b05f44b504289787ee0fe4d908b7\" data-private-watermark-src=\"v2-cd029ce6c50ec97c683e9a0bb7e96bad\" data-tags=\"porn\"></p>\n<p data-pid=\"T-FNrZ2S\">前期故事中，还有一位智慧型的角色--郑哲，他的出场总是给人一种神秘的感觉，办事也是所有人当中最稳妥最靠谱的。具体的角色分析在本回答中《人物篇》会具体分析</p>\n<p><img src=\"https://pic1.zhimg.com/v2-8d28fd4ecd8a0d5722017bf1d784e99d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1394\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-8d28fd4ecd8a0d5722017bf1d784e99d\" data-watermark-src=\"v2-f75ee9cc80141463cdc674eacf42c3d9\" data-private-watermark-src=\"v2-167f6b489fd06afa0e70f2d1f38b9aed\" data-tags=\"porn\"></p>\n<p data-pid=\"-Nzm7hgB\">而在这位全知全能的郑哲面前，最珍惜的是他和时宇同学之间的伙伴之情。</p>\n<p><img src=\"https://pica.zhimg.com/v2-37ca29626af2e8479e15b2c9dc323d45_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"2601\" data-watermark=\"watermark\" data-original-src=\"v2-37ca29626af2e8479e15b2c9dc323d45\" data-watermark-src=\"v2-10509829ee12871f9eae760688f1edb0\" data-private-watermark-src=\"v2-6561c1ead13b48e78a85fbaac2cfe217\"></p>\n<p data-pid=\"sXBLI-87\">在整篇故事当中，黑化版的时宇（其实是前世）是前期最炫酷的角色，包括其能力</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4556bda6ad813fb4c9b2c0468482d73f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1395\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-4556bda6ad813fb4c9b2c0468482d73f\" data-watermark-src=\"v2-4172318f97cd330e055cccbf64058e8d\" data-private-watermark-src=\"v2-b66722b7dcfd985e28b495b01c6f7826\"></p>\n<p data-pid=\"PTIGkVsT\">而时不时出现的回忆，也在逐步地揭开时宇前世的纱布，不得不说，这一部分章磊老师的节奏把握地是相当不错</p>\n<p><img src=\"https://pica.zhimg.com/v2-707e5d51ec4f8fbfaa29108d4fd33edc_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1393\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-707e5d51ec4f8fbfaa29108d4fd33edc\" data-watermark-src=\"v2-48e68ce77ef9d7b40b77f1234d080e04\" data-private-watermark-src=\"v2-d4d45357881d228b4adc8811e5b5656a\"></p>\n<p data-pid=\"bfd--c8o\">而串联起整个故事的核心线--<b>寻找回失踪的莫奈的姐姐</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-4296001b862fd6c3c314fa5fdfafb1a8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1402\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-4296001b862fd6c3c314fa5fdfafb1a8\" data-watermark-src=\"v2-41e10a5dd15279a0cc8f462c78cb30e6\" data-private-watermark-src=\"v2-01b4274daa9db8c4f8281724fe3803c9\" data-tags=\"porn\"></p>\n<p data-pid=\"TSQDa9rj\">而在这个过程中，还涉及到了冰树和莫奈姐姐的爱情故事。</p>\n<p data-pid=\"B5wVKLoH\">这一段故事虽然简短，但是有始有终，还成功塑造了冰树痴情的人设。</p>\n<p><img src=\"https://pica.zhimg.com/v2-f92343118eaef247c28d1c2da94b9ee2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1380\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-f92343118eaef247c28d1c2da94b9ee2\" data-watermark-src=\"v2-0ba42ab877fb0ff731944dabeac61ff5\" data-private-watermark-src=\"v2-b85dc89de737b3702afeea7ff08c9d93\" data-tags=\"porn\"></p>\n<p data-pid=\"qiw9bJnI\">但是最终的结果确实不尽如人意。这一段我认为在当时的漫画环境来说是非常大胆的。</p>\n<p data-pid=\"ttYoE9Iq\">因为一个悲伤结局的故事会令读者更有共鸣感。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-220a034fe0f211abe17b475d072d1c5b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1387\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-220a034fe0f211abe17b475d072d1c5b\" data-watermark-src=\"v2-b054de23ebcf39b24a1d29c0175f5aab\" data-private-watermark-src=\"v2-8be9dc368a3510a22234212ba7f651a8\"></p>\n<p data-pid=\"Gng5DcVR\">也正是这种相当前卫的故事走向，令蝴蝶少年的人气急速上升</p>\n<p data-pid=\"TUlnzD9p\">也就在故事正式进入高潮之时，我们的时宇回到了三年前的世界，正准备和我们读者揭开当年女校学生失踪的秘密之时</p>\n<p><img src=\"https://pic2.zhimg.com/v2-cc8b02062f6105b656236628286e467e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1382\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-cc8b02062f6105b656236628286e467e\" data-watermark-src=\"v2-a5327bc2109a6dace984602428e9f6ce\" data-private-watermark-src=\"v2-0e564dddbe74da8adb5a33b4dac98c1f\" data-tags=\"porn\"></p>\n<p data-pid=\"ePVvEVnY\">时宇发现了自己竟然能在三年前和三年后的莫奈进行对话</p>\n<p><img src=\"https://pic2.zhimg.com/v2-21ce16df61cde7720eaf1d7f66a1257b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1416\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-21ce16df61cde7720eaf1d7f66a1257b\" data-watermark-src=\"v2-d86739ba38aafc16f6dab9d787a54482\" data-private-watermark-src=\"v2-6f34265dcce362b0d19c714c53a4fcfd\"></p>\n<p data-pid=\"3LVz2eXX\">而在莫奈面前出现的传送门，究竟是不是真的能将她传送回三年前时宇的身边？</p>\n<p data-pid=\"7ci4PRV8\">莫奈和时宇之间的误会究竟会怎么解开？</p>\n<p data-pid=\"DedrMN3R\"><b>这一切的谜题，伴随着作者因病休刊最后变成停刊而永远地没有下文。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-bd29c10df9c11bdfd66f1fa3b5b9a68b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1315\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-bd29c10df9c11bdfd66f1fa3b5b9a68b\" data-watermark-src=\"v2-1732dc77fb819e9d270098f05c53d35d\" data-private-watermark-src=\"v2-b51151acd2053c365047c449d83c8250\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<hr>\n<h2>少年top的《新蝴蝶少年》</h2>\n<p data-pid=\"oWiVDuwx\">在少年TOP杂志上连载的《新蝴蝶少年》一共有28回，有4本单行本<sup data-text=\"全网唯一正版资源在多看阅读APP\" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"3\">[3]</sup>（出到24回）</p>\n<p data-pid=\"O9FETOlx\">虽然人物还是那些人物，但是故事的主题和方向却完全不一样</p>\n<p data-pid=\"t-8cQEeN\"><b>《新蝴蝶少年》的故事更加成熟，也更加偏向传统热血，但是趣味性没有漫客版那么足</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-8eb6d6b05845174655f6c353cc9d8009_720w.jpg?source=b1748391?rss\" data-caption=\"两个版本对比\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"1584\" data-watermark=\"watermark\" data-original-src=\"v2-8eb6d6b05845174655f6c353cc9d8009\" data-watermark-src=\"v2-c6a4e4005b3e0b715d94287dbca2da30\" data-private-watermark-src=\"v2-df3886ce861ac1f3bb17604b6618d787\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-8cea523efa15a893250fe5cc6d0d3347_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1926\" data-watermark=\"watermark\" data-original-src=\"v2-8cea523efa15a893250fe5cc6d0d3347\" data-watermark-src=\"v2-b38e1413cd5611101dbf6f10738dfeff\" data-private-watermark-src=\"v2-1e80ca75c30de61c394d9ceac97cab17\"></p>\n<p data-pid=\"o6LiJAkg\">《新蝴蝶少年》的故事可以简单地分为前17回和后11回</p>\n<p data-pid=\"uhDHq8b4\">前17回主要讲述的<b>现代版本</b>的蝴蝶少年故事，休达来到龙津市，和我们的主角时宇展开了猎人和猎物之间有爱的“躲猫猫”游戏，期间也有许多新角色出现，例如莫奈的好友，半仙，赤鲨严雄，周婵等角色……也有老版本里就曾出现过的角色，例如歌雅，亚楠等…… </p>\n<p data-pid=\"cBjusUj8\">蝴蝶少年比较有意思的，就是<b>前世故事和今生故事相互交错进行</b>，在过去的版本中，作者只是做了一点尝试，虽然有交代前世部分，但是极少。 </p>\n<p data-pid=\"1uJ1AjRr\">而在新蝴蝶中，这种插叙的手法，会更加淋漓尽致的体现出来！ </p>\n<p data-pid=\"ZCqMzH9a\">从18话开始，<b>新蝴蝶将“完全”进入主角时宇的梦境</b>，回顾前世所发生的一些趣事，当然具体内容还是请大家观看杂志或单行本吧！ </p>\n<p><img src=\"https://pica.zhimg.com/v2-b6bbaf9c46588395952b8d03a13441be_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1868\" data-watermark=\"watermark\" data-original-src=\"v2-b6bbaf9c46588395952b8d03a13441be\" data-watermark-src=\"v2-7fec4514bf1d2d3cb138dae7ce87ef53\" data-private-watermark-src=\"v2-fc141c4993dfee6f4d29ceb81ad5b677\"></p>\n<p data-pid=\"ruN6K8Y6\">值得一提的是，在前世故事中，安排了一个和前18话完全颠倒的角色出场顺序，接下来按角色出场顺序，给出一份前世今生性命对照目录，就当是一次小小的剧透吧！</p>\n<p data-pid=\"PGz7-kE6\">今生---- 前世</p>\n<p data-pid=\"2CrjCaRQ\"><b>时宇——千户鬼惑</b></p>\n<p data-pid=\"fm-7eXZK\"><b>歌雅——妖女海川稚子</b></p>\n<p data-pid=\"m_pSxeRu\"><b>休达——冒险者佩洛</b></p>\n<p data-pid=\"cCCOkBia\">其中还有更多前世部分的新角色等场，就不一一介绍了！ </p>\n<p data-pid=\"20-fgj9d\">不过新角色还有的，例如死神、太阳、月亮、倒吊者这些从没出现过的角色</p>\n<p data-pid=\"Z9_FIolQ\">在后面的故事中，更多前面大家已经熟悉的角色前世故事陆续登场，就连小木偶米莎也有前世哦</p>\n<p><img src=\"https://pic4.zhimg.com/v2-d4aea516ec0a437cf007430af5faa7e6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"2321\" data-watermark=\"watermark\" data-original-src=\"v2-d4aea516ec0a437cf007430af5faa7e6\" data-watermark-src=\"v2-77fdd423dd5c58e32ddcb35e10f853f5\" data-private-watermark-src=\"v2-f4844f2526b66e8eadb6dba3107e23b2\" data-tags=\"porn\"></p>\n<p data-pid=\"aHFDSnbx\">《新蝴蝶少年》的开端是位于古代的千户（时宇前世）使用乾坤之门打败倭寇的故事</p>\n<p data-pid=\"fNaUG6xg\">而这段倒叙剧情的后续甚至要等到18话以后才能看到，真是一个耐得住寂寞的伏笔</p>\n<p><img src=\"https://pic4.zhimg.com/v2-5431b66ddf428d3c53371dff62ce16bd_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1971\" data-watermark=\"watermark\" data-original-src=\"v2-5431b66ddf428d3c53371dff62ce16bd\" data-watermark-src=\"v2-7c5d63b7a58d59f85ea3e4c48ca80c9f\" data-private-watermark-src=\"v2-4f12047ffd1ee7b05fe86ba227541f11\"></p>\n<p data-pid=\"bLfyR1xc\">而现代版本的时宇和漫客版几乎没有大不同，同样莽撞，单纯热血笨蛋、继续送外卖</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5f9e76a06080c3ecbb952611c5bbe470_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1953\" data-watermark=\"watermark\" data-original-src=\"v2-5f9e76a06080c3ecbb952611c5bbe470\" data-watermark-src=\"v2-4b84db30c419538653cfed8a8ed98237\" data-private-watermark-src=\"v2-dbfd8e0612905e705be40cbea78e0086\" data-tags=\"porn\"></p>\n<p data-pid=\"la_IBTD5\">而我们的女主莫奈则在作者画功进步下，更加漂亮动人了。但是这个版本的时宇和莫奈的故事又发生了一点点改变。</p>\n<p><img src=\"https://pica.zhimg.com/v2-8b73e119e498f41b1b1e3cd63adb9d4b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1983\" data-watermark=\"watermark\" data-original-src=\"v2-8b73e119e498f41b1b1e3cd63adb9d4b\" data-watermark-src=\"v2-85b79a51147e0de08020f04f5215d8f5\" data-private-watermark-src=\"v2-5127cd430c45f399c5d37815481b294e\" data-tags=\"porn\"></p>\n<p data-pid=\"3xhrFGKW\">而时宇的死党郑哲和蚊子依旧不变，只是戏份貌似没有前作那么多了。</p>\n<p><img src=\"https://pica.zhimg.com/v2-10966828a42dcbe23233d525988d29d2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1967\" data-watermark=\"watermark\" data-original-src=\"v2-10966828a42dcbe23233d525988d29d2\" data-watermark-src=\"v2-f4bd5f7d0f75b49c1e984a89262211c9\" data-private-watermark-src=\"v2-0929aae80593824d1c1786cfc92c797f\" data-tags=\"porn\"></p>\n<p data-pid=\"aVVCbklI\">而我们的魔术师休达则变得更加沉稳老练</p>\n<p><img src=\"https://pica.zhimg.com/v2-51f583eceb786f2846e0b453d364469d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1159\" data-watermark=\"watermark\" data-original-src=\"v2-51f583eceb786f2846e0b453d364469d\" data-watermark-src=\"v2-35c75bd15cfe5a63445d497a8faef581\" data-private-watermark-src=\"v2-2f32f9b49de4bc6fc1897b95e0b572e5\" data-tags=\"porn\"></p>\n<p data-pid=\"ORsQ-wHz\">他的目标依旧是--干掉时宇</p>\n<p><img src=\"https://pic1.zhimg.com/v2-2e5b44082d15e3408012657bb7207f38_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1436\" data-watermark=\"watermark\" data-original-src=\"v2-2e5b44082d15e3408012657bb7207f38\" data-watermark-src=\"v2-b6a343d3cea3d3dba6e2349a54d7cbb7\" data-private-watermark-src=\"v2-0eb301cfe322062a056cd09b8c2c2661\"></p>\n<p data-pid=\"sjxtk1uQ\">而在这个版本的莫奈，依旧是女校学生，依旧是泳装模特</p>\n<p><img src=\"https://pic3.zhimg.com/v2-18a0d969cdebbdce6de38d580e0d22d5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"2348\" data-watermark=\"watermark\" data-original-src=\"v2-18a0d969cdebbdce6de38d580e0d22d5\" data-watermark-src=\"v2-30a911d796a95091003ba95729823a51\" data-private-watermark-src=\"v2-c34bbc8381c19f434dbdc9c8636ef7ad\" data-tags=\"porn\"></p>\n<p data-pid=\"OupG9mhT\">但是，这里的时宇和莫奈，其实在小时候就已经认识，这是两个版本最大不同点</p>\n<p><img src=\"https://pic4.zhimg.com/v2-9e6ff1aa8bbcdf3fa9fcdaa076e98e8b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"2541\" data-watermark=\"watermark\" data-original-src=\"v2-9e6ff1aa8bbcdf3fa9fcdaa076e98e8b\" data-watermark-src=\"v2-73645db4bc68bc3d556db3355f5d3d4a\" data-private-watermark-src=\"v2-41cd8a0f315f7db700ffae75ba4a0780\" data-tags=\"porn\"></p>\n<p data-pid=\"enLjx8FP\">并且《新蝴蝶少年》中，莫奈有着更多的戏份，主要是被休达的能力之Jocker所控制</p>\n<p><img src=\"https://pica.zhimg.com/v2-378cfb671a6dc985b8697696103df0d0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"2816\" data-watermark=\"watermark\" data-original-src=\"v2-378cfb671a6dc985b8697696103df0d0\" data-watermark-src=\"v2-e828f58d95ea00be67b5b8f4215ccbe0\" data-private-watermark-src=\"v2-7eaa6fd872dbf1ef6cfa75d1b8bb2c2a\"></p>\n<p data-pid=\"e_hVoImC\">休达与时宇的孽缘，从前世一直斗到今生。</p>\n<p data-pid=\"A9WXmixx\">这种时空交错的快感，作为读者来讲，值得细细品味。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d4e23af839df97f8e4e80e44da0c382f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1988\" data-watermark=\"watermark\" data-original-src=\"v2-d4e23af839df97f8e4e80e44da0c382f\" data-watermark-src=\"v2-441872bd32580f686ecb3f0fd783d688\" data-private-watermark-src=\"v2-285b86aa39c1adce9a12a549f6eead88\"></p>\n<p data-pid=\"0qB5q0-q\">而能力不足的时宇，没能完全救下莫奈的灵魂，这时被操控的莫奈流下来感动的泪水</p>\n<p><img src=\"https://picx.zhimg.com/v2-f56a7aceaea5cf79e59697781d89a0c9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"2816\" data-watermark=\"watermark\" data-original-src=\"v2-f56a7aceaea5cf79e59697781d89a0c9\" data-watermark-src=\"v2-9d88a2e4f24ee1f2fb95951f915393e4\" data-private-watermark-src=\"v2-1fbfde0905e2535addcd185e253a38c5\" data-tags=\"politic porn\"></p>\n<p data-pid=\"OU26uHrp\">也正是因为如此，时宇决定再次使用自己的异次元之门</p>\n<p data-pid=\"IReRDKfL\">即便要从万米高空坠下，即便要粉身碎骨，即便失去自己所有力量</p>\n<p data-pid=\"6YJlw1hZ\">也要拯救莫奈，守护自己所爱之人</p>\n<p><img src=\"https://pic1.zhimg.com/v2-affc9a16d76fbfc5efc1902a039b09c0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"2816\" data-watermark=\"watermark\" data-original-src=\"v2-affc9a16d76fbfc5efc1902a039b09c0\" data-watermark-src=\"v2-f943ca0a88e1e8a4d46faed9ae52aec2\" data-private-watermark-src=\"v2-13860f1a84b8b0a476c936f784383b64\" data-tags=\"porn\"></p>\n<p data-pid=\"bkyK2Lh6\">在时宇整个手臂粉碎以后，他的身体自然也“死去”了</p>\n<p data-pid=\"QgzwX4QR\">但是也正是在这里引出了<b>“灵魂”和“咒魂”</b>的概念</p>\n<p data-pid=\"TCfFwkcM\">真正意义上丰富了整部作品的战斗系统</p>\n<p><img src=\"https://pica.zhimg.com/v2-c95bb9a567b473634a4a190ea08aa233_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"2248\" data-watermark=\"watermark\" data-original-src=\"v2-c95bb9a567b473634a4a190ea08aa233\" data-watermark-src=\"v2-74dda131616f6e100a772496a2c7345f\" data-private-watermark-src=\"v2-e78aa543f75cb41f1d0f1dbd931dd3ea\" data-tags=\"porn\"></p>\n<p data-pid=\"h62l2wDA\">而漫客版中的人气女配也随之出场，因为接下来，就是她的主场了。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-166da10fae2bf778d94c88b4d853eb4b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1976\" data-watermark=\"watermark\" data-original-src=\"v2-166da10fae2bf778d94c88b4d853eb4b\" data-watermark-src=\"v2-9d257eb1d9384cdff1f7c65808f5e8e7\" data-private-watermark-src=\"v2-8affcbbf6617b42e6ede6bac7467d9bb\"></p>\n<p data-pid=\"aDKvqOVa\">所以直到17话，都在讲述现在的故事，相信也是大部分漫友曾经有追过连载的剧情</p>\n<p data-pid=\"61wSrhuQ\">但是从18话开始，就进入回忆篇，回忆篇内容不多，但是确确实实填了很多坑，也丰富了许多角色的人物形象</p>\n<p><img src=\"https://pic1.zhimg.com/v2-cb2f6314391d5139660f1eb792e9a363_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"967\" data-watermark=\"watermark\" data-original-src=\"v2-cb2f6314391d5139660f1eb792e9a363\" data-watermark-src=\"v2-a803c0f03f501f2350ade10dcd34c547\" data-private-watermark-src=\"v2-a5dff2fb8937663e1451c56888462a04\"></p>\n<p data-pid=\"NqF9YVIA\">在单行本内容的最后，时宇化身灵魂，经历了前世千户所经历过的一切，也逐渐知晓自己的使命</p>\n<p><img src=\"https://pic1.zhimg.com/v2-348d5069e3986b6d649d9a53c5c8e7ac_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"2373\" data-watermark=\"watermark\" data-original-src=\"v2-348d5069e3986b6d649d9a53c5c8e7ac\" data-watermark-src=\"v2-4d2ec923371935c77f15537d7a488dbb\" data-private-watermark-src=\"v2-da599aefcc213112701a64d374cf617d\"></p>\n<p data-pid=\"ep6CBnOA\">因为4本单行本的故事只进行到24话，然后蝴蝶少年后续的故事就需要在连载杂志上继续观看，我费尽九牛二虎之力终于在贴吧找到了22-28集，大家可以自行观看<sup data-text=\"22-28\" data-url=\"https://tieba.baidu.com/p/6999156704?share=9105&amp;fr=sharewise&amp;see_lz=0&amp;share_from=post&amp;sfc=copy&amp;client_type=2&amp;client_version=12.22.1.0&amp;st=1648796912&amp;is_video=false&amp;unique=F56EF5E6FD376EC386914210C02F7632&amp;red_tag=1121372888\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"4\">[4]</sup></p>\n<p data-pid=\"9lISraHa\">大概的剧情也就是时宇回到过去看到了小时候的自己，也明白了自己身为蝴蝶少年的使命，并且再次回到现代，休达放弃了杀时宇，时宇终于拯救了莫奈</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b678766d059554c06a4ff9235e352a41_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"960\" data-rawheight=\"1280\" data-watermark=\"watermark\" data-original-src=\"v2-b678766d059554c06a4ff9235e352a41\" data-watermark-src=\"v2-f113f62c0b39ce50cf67d4528f36d339\" data-private-watermark-src=\"v2-ebd3d12a89278f5c9fcf34d2fea3b492\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-339ff82e137fc8d7919d890af61197b7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"580\" data-rawheight=\"773\" data-watermark=\"watermark\" data-original-src=\"v2-339ff82e137fc8d7919d890af61197b7\" data-watermark-src=\"v2-7168ab067b8501f00752404078c16534\" data-private-watermark-src=\"v2-f39a368260ad56413f4f05f21d98eb4b\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-570c06cb46fd8f034fb3d1acc9b74fd7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"580\" data-rawheight=\"773\" data-watermark=\"watermark\" data-original-src=\"v2-570c06cb46fd8f034fb3d1acc9b74fd7\" data-watermark-src=\"v2-81566a79342f7924971f0bf68cb89795\" data-private-watermark-src=\"v2-0eaaa528dc51f031efdc947ff79c3567\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-1f4b1f4b670539049bb038cfdedfb20f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"580\" data-rawheight=\"773\" data-watermark=\"watermark\" data-original-src=\"v2-1f4b1f4b670539049bb038cfdedfb20f\" data-watermark-src=\"v2-4a346cc06cc6a5e5fdec66e5c8b435d8\" data-private-watermark-src=\"v2-627650c6aae0efca804e9e1d3213927e\"></p>\n<p><br></p>\n<hr>\n<h2>微博重生的《新蝴蝶少年》后续故事</h2>\n<p data-pid=\"8I27lFhz\">在2020年也就是《蝴蝶少年》系列诞生10周年，也是漫客版《蝴蝶少年》诞生12周年纪念</p>\n<p data-pid=\"TAJVeoYr\">章磊老师决定于2020年6月1日在微博推出《新蝴蝶少年》第二季，全文在老师的微博“<b>章磊漫画</b><sup data-text=\"章磊漫画微博\" data-url=\"https://weibo.com/ttarticle/p/show?id=2309404553361751146615\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"5\">[5]</sup>”</p>\n<p data-pid=\"PUjjD55E\">可以免费观看，剧情衔接《新蝴蝶少年》的28话</p>\n<p data-pid=\"UknwUF8g\">第二季的剧情前半段更加偏向日常化 ，后半段则更侧重于战斗以及情感刻画</p>\n<p data-pid=\"08xH-KUz\">所以就有了“血琥珀”这一个关键道具</p>\n<p><img src=\"https://pic4.zhimg.com/v2-9351b729643a870972a8f99e0511d85c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1571\" data-watermark=\"watermark\" data-original-src=\"v2-9351b729643a870972a8f99e0511d85c\" data-watermark-src=\"v2-8871724522de73c5a0048ce87ccbfc32\" data-private-watermark-src=\"v2-0755e6447fad98f157400f5fa2f093e0\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"b_igFt5e\">随着时代的变化，我们也可以发现作者心态的变化</p>\n<p data-pid=\"AH3BuozU\">所以我们甚至能在漫画正篇中看到“纯爱境界”这类型的画面</p>\n<p><img src=\"https://pic1.zhimg.com/v2-8577cfd3ae962478eea119be26f63144_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1668\" data-watermark=\"watermark\" data-original-src=\"v2-8577cfd3ae962478eea119be26f63144\" data-watermark-src=\"v2-6d2f1c37e68c33caf9e551ebcf82c31c\" data-private-watermark-src=\"v2-8a0519b57d4f5445b323cbaffe4278fc\"></p>\n<p data-pid=\"amMIqdAm\">而前期的主线则是主角团众人一起到南极山拍摄广告，我们可以看到许多新老角色</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c3d177a35ecea5ea2475d23f90377f02_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"568\" data-rawheight=\"878\" data-watermark=\"watermark\" data-original-src=\"v2-c3d177a35ecea5ea2475d23f90377f02\" data-watermark-src=\"v2-dd14d218493fac4a761f7a7744ea13ec\" data-private-watermark-src=\"v2-8eed11863e04b4c7e37d886c8e6c2c70\"></p>\n<p data-pid=\"mchqdPI3\">并且时宇还开发出了新的能力--<b><i>时之隐匿</i></b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-a3b849a8a395f7aa08342f8a932986de_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"878\" data-watermark=\"watermark\" data-original-src=\"v2-a3b849a8a395f7aa08342f8a932986de\" data-watermark-src=\"v2-f05a7c0c4a510e4eb4c7df4723051772\" data-private-watermark-src=\"v2-7b941f6c78768cda44ecdca6319d89b2\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-bb34daae2ad821ae2f2f1e44e87b0c1f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"568\" data-rawheight=\"878\" data-watermark=\"watermark\" data-original-src=\"v2-bb34daae2ad821ae2f2f1e44e87b0c1f\" data-watermark-src=\"v2-88f17e10e1df4070d01b65404b0695b6\" data-private-watermark-src=\"v2-1be97be5115bc31afc9eb3449a950014\"></p>\n<p data-pid=\"2b8pCYSh\">而在故事方面，由一直陪伴时宇的糖儿揭开她的身世，这一段不论是时宇还是读者都会潸然泪下</p>\n<p><img src=\"https://pica.zhimg.com/v2-e51bfacab3d8cec7010275a7f3904478_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"399\" data-rawheight=\"622\" data-watermark=\"watermark\" data-original-src=\"v2-e51bfacab3d8cec7010275a7f3904478\" data-watermark-src=\"v2-69f64954fcb36c9337617622ea369912\" data-private-watermark-src=\"v2-59da7f1e5a8a8b32878e065d6717c072\" data-tags=\"porn\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-9a953491afa8176c3464426b18da7bab_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"567\" data-rawheight=\"878\" data-watermark=\"watermark\" data-original-src=\"v2-9a953491afa8176c3464426b18da7bab\" data-watermark-src=\"v2-4f37c4ab87193cdc17a1b3fb00ef5d92\" data-private-watermark-src=\"v2-5e874a590b238a061c390de32106992d\"></p>\n<p data-pid=\"H520QpId\">最后借由糖儿之口，将千户千年以前的辉煌战绩也顺势刻画出来，算是填坑了。</p>\n<p><img src=\"https://pica.zhimg.com/v2-6716752ff900910c5acd3f621474c5b9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"569\" data-rawheight=\"878\" data-watermark=\"watermark\" data-original-src=\"v2-6716752ff900910c5acd3f621474c5b9\" data-watermark-src=\"v2-acb7cd066734dd0988165a7f9ced380b\" data-private-watermark-src=\"v2-436d1df30423e3056ba369d14608ed24\"></p>\n<p data-pid=\"SVADBZMN\">而在第二季最后的片段中，休达与时宇之间被敌人采用离间计假冒对方，让两人带着误会结束这个故事，这个结尾留有悬念的手法章老师真是屡试不爽。</p>\n<p><img src=\"https://pica.zhimg.com/v2-0215ab5bd235095b7592f8707e8c3f98_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"566\" data-rawheight=\"879\" data-watermark=\"watermark\" data-original-src=\"v2-0215ab5bd235095b7592f8707e8c3f98\" data-watermark-src=\"v2-e075b65adbc949bb0bd041b08687dc24\" data-private-watermark-src=\"v2-49ca9287706f69ba106f59446ae3e03a\" data-tags=\"porn\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-f2786e70460b3b7b7c91a51887e51d37_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"879\" data-watermark=\"watermark\" data-original-src=\"v2-f2786e70460b3b7b7c91a51887e51d37\" data-watermark-src=\"v2-45d54027cb22add5fc6f68d9452b6b2d\" data-private-watermark-src=\"v2-1df5473f315ccd2b4c795b048186edca\" data-tags=\"porn\"></p>\n<hr>\n<h2>《人物篇》</h2>\n<h3>我们的主角--时宇</h3>\n<p data-pid=\"HCk3--w3\">《蝴蝶少年》最初连载于<b>《知音漫客</b>》2008年11月的萌刊创刊号上。</p>\n<p data-pid=\"G9Sc0PTv\">大家可能不知道的是，《蝴蝶少年》这部作品，并非是一次投稿就被杂志社选中的作品。在那之前，还有另外三部作品在审稿中被淘汰。如今看来，这三部作品可以算是《蝴蝶少年》被流产的兄长，而《蝴蝶》这个“弟弟”，他是幸运的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6c0f8d36ce27c3c397d31fd72104089e_720w.jpg?source=b1748391?rss\" data-caption=\"《召唤的天空》在三部被淘汰作品中完成度最高的\" data-size=\"normal\" data-rawwidth=\"794\" data-rawheight=\"624\" data-watermark=\"watermark\" data-original-src=\"v2-6c0f8d36ce27c3c397d31fd72104089e\" data-watermark-src=\"v2-38b7d597f7fc3e4f34c1d2c803b888bf\" data-private-watermark-src=\"v2-bee583d30ec6de519c03d6d0390333af\"></p>\n<p data-pid=\"YfA5_0F7\">《召唤的天空》在三部被淘汰作品中完成度最高的</p>\n<p data-pid=\"3rJT8HeE\">之所以惨遭淘汰的原因，则在于当年的《漫客》杂志社认为这些作品的读者定位太低，希望能够创作读者年轻层更高的作品。</p>\n<p data-pid=\"OuzpOOV8\">而当时的《漫客》上作品，代表作有《神精榜》《酷头与哈妹》等，这些作品的定位，让我陷入了迷惑与不解。</p>\n<p data-pid=\"GzJWoZV7\">难道《漫客》需要的，是纯正的少年漫画？</p>\n<p data-pid=\"dZfMAIFx\">然而对于这点，由于国漫自身也是经历了许多挫折后起步，究竟要做出怎样的作品，才能获得读者的认可，在当时的漫画界也没一个绝对的定论。</p>\n<p data-pid=\"WhHqZN1F\">于是……这一思考，就是两年，从2005年到了2008年初。</p>\n<p data-pid=\"Fd2BdUI7\">2008年5月，在我们祖国发生了一件令全世界为之悲痛的灾难——汶川大地震。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-a4c815f01f5dbe7944606df25023f78c_720w.jpg?source=b1748391?rss\" data-caption=\"2008年5月12日，汶川地区爆发史无前例的大地震，死伤惨重\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"360\" data-watermark=\"watermark\" data-original-src=\"v2-a4c815f01f5dbe7944606df25023f78c\" data-watermark-src=\"v2-3404e57f474460af223a27f94abe6114\" data-private-watermark-src=\"v2-131018068d84928c0fbd5e2e8d117080\"></p>\n<p data-pid=\"7tDg79nd\">2008年5月12日，汶川地区爆发史无前例的大地震，死伤惨重</p>\n<p data-pid=\"VHdy4xI2\">而在这场灾难中，令人印象最为深刻的是：许多孩子在这场灾难中遇难。</p>\n<p data-pid=\"r59KYgUa\">至今回想，依旧令人感到悲痛惋惜。</p>\n<p data-pid=\"YbXF0-ki\">在电视机前看着新闻的我，心想：一个人，如果连16岁花季都无法体会，是一件多么令人遗憾的事……</p>\n<p data-pid=\"ccEwVQJC\">经过数个日夜的辗转反侧，便找到了曾经对接过的《漫客》编辑，希望以此想法，作为新的作品的灵感源泉，以此缅怀那些在灾难中遇难的孩子们。</p>\n<p data-pid=\"Al26ew2F\">经过几番探讨，终于确认下了这部作品的主基调：少年如同蝴蝶，人生美丽却短暂，在这仅剩一年的时间中，每个少年都会如何面对？</p>\n<p data-pid=\"64-zCEOj\">不过即便如此，这依旧无法称之为“故事”，充其量这个创意也只是如同在狂风中微微颤抖的火苗，如果不继续构架，随时都可能熄灭。</p>\n<p data-pid=\"Uy0EZzW-\">在故事题材选择上，则优先选择的是“超能力+校园”这种自己比较擅长的类型。</p>\n<p data-pid=\"3SjtESh-\">有了这样一些模糊的方向后，在与编辑结束探讨的那个夜晚，我开始通过构思人设，希望找到一点关于这部作品的突破口：一旦主角被确定，接下来的工作就会变得更加简单些……</p>\n<p data-pid=\"ts_fsrBB\">第二天，天色微亮的时候，这样的一个角色出现在了我的面前。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-3933acf55dbe9a286022e287bd098f21_720w.jpg?source=b1748391?rss\" data-caption=\"主角最早版本：时宇\" data-size=\"normal\" data-rawwidth=\"302\" data-rawheight=\"658\" data-watermark=\"watermark\" data-original-src=\"v2-3933acf55dbe9a286022e287bd098f21\" data-watermark-src=\"v2-95c0e3fd9a9b682acf7992ba984b2088\" data-private-watermark-src=\"v2-19364e330ff4cb0188b3747094580213\"></p>\n<p data-pid=\"WHlepxUP\">​当这份人设提交给责编的时候，责编只回复了一个字：丑！</p>\n<p data-pid=\"HBfHrsiM\">这令我备受打击，因为我原本的初衷，就是想设计一个不那么英俊，但给人感觉坏坏酷酷的角色。</p>\n<p data-pid=\"AiBcrayr\">经过一番思考无果后，便决定去《漫客》的官方论坛了解一下，希望能从读者的互动中，寻求到更多答案。</p>\n<p data-pid=\"K_ImFZ00\">于是在经过几天的调研后，我又制作了一个新的版本，唯一不变的是——金色的眼眸。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-76ef61a2041db44281b6a255a107c260_720w.jpg?source=b1748391?rss\" data-caption=\"这一版本，时宇开始有了刘海，并且五官开始变得更加秀气\" data-size=\"normal\" data-rawwidth=\"419\" data-rawheight=\"513\" data-watermark=\"watermark\" data-original-src=\"v2-76ef61a2041db44281b6a255a107c260\" data-watermark-src=\"v2-7d19a436e57f7382c07808c5be82cc47\" data-private-watermark-src=\"v2-42771531c54907e81f2367c8d512daf6\"></p>\n<p data-pid=\"iJEDQpW_\">这一版本，时宇开始有了刘海，并且五官开始变得更加秀气</p>\n<p data-pid=\"iFMuyttC\">再次找到责编，得到回复：“嗯，看起来比之前帅多了！”</p>\n<p data-pid=\"Ozfz4TmC\">这是一个好的开始，但我依旧无法与这个新的角色产生共鸣。</p>\n<p data-pid=\"ntTp6mWp\">对我来说，“他”此刻只是一张纸上的图像，而并非一个活生生的“人”。</p>\n<p data-pid=\"MtrkIuc3\">从观察责编和读者的反应中，也隐约察觉，“美型”这一概念，似乎在中国漫画读者的心目中，占据非常高的地位。</p>\n<p data-pid=\"lVPcW14a\">随后为了和这个角色产生更多的共鸣，我开始反复练习绘制这个角色，并在绘画的过程中不断的构思这个角色的性格，喜好，以及是如何生活在这个世界上。</p>\n<p data-pid=\"BEMjDqNV\">终于在某一天，这个角色活了过来！</p>\n<p><img src=\"https://picx.zhimg.com/v2-7f1c6ac3b32dc17648ed9b7b15493eac_720w.jpg?source=b1748391?rss\" data-caption=\"最终确定版的男主角——时宇\" data-size=\"normal\" data-rawwidth=\"650\" data-rawheight=\"823\" data-watermark=\"watermark\" data-original-src=\"v2-7f1c6ac3b32dc17648ed9b7b15493eac\" data-watermark-src=\"v2-4bc19bf723e56f774caee130555b8fc5\" data-private-watermark-src=\"v2-6d2503c85fae00dd20dcec22e847d9ff\" data-tags=\"politic porn\"></p>\n<p data-pid=\"OZTr4pwZ\"><b>最终确定版的男主角——时宇</b></p>\n<p data-pid=\"bqghDzig\">从上图的角色简介中，我们不难看出，“金眸少年”这个设定被一直沿用并凸显，究其根源就在于——《漫客》是一本彩色漫画杂志。</p>\n<p data-pid=\"Q_8iNaxk\">如果主角的眼睛是黑色或则棕色，一定会和其他作品的主角“撞衫”，同时这样一来，也会让这个角色看起来显得非常普通，并不像是拥有超能力的家伙。</p>\n<p data-pid=\"oBn40h6R\">同时，“外卖小子”的设定也在日后被读者所喜欢，而事实，这个身份的确认，是在一次从送外卖人员的手中接过盒饭的那一刻，突然出现在脑海里的。</p>\n<p data-pid=\"hvQAkF4L\">想想吧，如果主角是个送外卖的身份，那么他就拥有了许多到处跑的机会，或许也会因此而产生各种故事呢！</p>\n<p data-pid=\"NWDvcjag\">这就如同美国DC的漫画《超人》，漫威的《蜘蛛侠》，角色都是记者一样，充分的利用职业为角色制造了许多与危险交锋的机会。</p>\n<p data-pid=\"D8DOO1JL\">既然主角时宇是个外卖小子，那么需要创造一个怎样的环境，能够让他拥有这样的条件呢？</p>\n<p data-pid=\"QSVB1NNC\">于是一个新的角色，伴随着时宇一起诞生了！</p>\n<p><br></p>\n<p><img src=\"https://pica.zhimg.com/v2-a1953ace2e182479205eaa3d05b4b894_720w.jpg?source=b1748391?rss\" data-caption=\"梦幻美食馆的老板，时宇的养父\" data-size=\"normal\" data-rawwidth=\"425\" data-rawheight=\"457\" data-watermark=\"watermark\" data-original-src=\"v2-a1953ace2e182479205eaa3d05b4b894\" data-watermark-src=\"v2-efbaa4c5432894b0571f00584b7808de\" data-private-watermark-src=\"v2-80b5450d7a495bc8d8094da3962ed1f9\"></p>\n<p data-pid=\"Tzlr8JwT\">梦幻美食馆的老板，时宇的养父</p>\n<p data-pid=\"qWHhnRs-\">“老板”这个角色的出现，为《蝴蝶少年》的创作，可以说增“色”不少。</p>\n<p data-pid=\"OUf02665\">由于原本就考虑设定为是个：吝啬刻薄，但心肠不坏，又非常好色的中年大叔，因此这个角色在设定的初期，我就希望他能给我们的主角制造更多棘手的麻烦。</p>\n<p data-pid=\"1H1cjEd9\">于是才有了后来的《乱入——海星女校》中时宇被一群女生围攻的桥段，论根本原因，正是这位老板的“乌龙礼物事件”所赐。</p>\n<p><img src=\"https://pica.zhimg.com/v2-987f06abec5429aaea9504f64945034c_720w.jpg?source=b1748391?rss\" data-caption=\"第七话的逆转，让读者人气达到空前\" data-size=\"normal\" data-rawwidth=\"498\" data-rawheight=\"793\" data-watermark=\"watermark\" data-original-src=\"v2-987f06abec5429aaea9504f64945034c\" data-watermark-src=\"v2-ff95ad7157666c76d85866ac3ae7e72f\" data-private-watermark-src=\"v2-660f20493c0ecb2d4ddb430e0e2c9f52\" data-tags=\"porn\"></p>\n<p data-pid=\"hO4JMIxf\">第七话的逆转，让读者人气达到空前</p>\n<p data-pid=\"FO7Z1zjq\">也正是有了这样一位有趣的配角，《蝴蝶》后来的故事才变得妙趣横生。</p>\n<p data-pid=\"ToP7oTg_\">甚至在后来的“馒头饭”增刊中，这位老板与时宇的故事，也专门用了一定篇幅来进行交代，相信不少读者朋友依旧还能记得。</p>\n<p><img src=\"https://pica.zhimg.com/v2-bd1a5e358f9251054e3021d88627c659_720w.jpg?source=b1748391?rss\" data-caption=\"赠刊中官方恶搞版《蝴蝶结少年》中的有趣片段\" data-size=\"normal\" data-rawwidth=\"524\" data-rawheight=\"781\" data-watermark=\"watermark\" data-original-src=\"v2-bd1a5e358f9251054e3021d88627c659\" data-watermark-src=\"v2-4377f024e96ba76b103ecb808584f2c3\" data-private-watermark-src=\"v2-49ed9455c51f72c93f2f3477bb2afe3a\" data-tags=\"politic\"></p>\n<p data-pid=\"kjVK9dD_\">赠刊中官方恶搞版《蝴蝶结少年》中的有趣片段</p>\n<p data-pid=\"MbPfD76t\">​既然有了家人，那么作为15岁的主角，肯定也会有同学吧……</p>\n<p data-pid=\"tIWYQcwu\">身为善良，对异性没有太多经验的主角，应该给他怎样的一个同学作为配角呢？</p>\n<p data-pid=\"3IJGFR0y\">翻阅了许多漫画资料，并回忆了自己的高中生活后，我决定将自己亲身经历并接触的几位高中同学的特点，融汇到同一个角色身上。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1b1488666f58b8b75e260615f5310743_720w.jpg?source=b1748391?rss\" data-caption=\"虽然长得不帅，却非常好色的蚊子同学\" data-size=\"normal\" data-rawwidth=\"385\" data-rawheight=\"509\" data-watermark=\"watermark\" data-original-src=\"v2-1b1488666f58b8b75e260615f5310743\" data-watermark-src=\"v2-f9f4b0233a582468ee9b6698fd1193c3\" data-private-watermark-src=\"v2-c62196e8b0f7259edd214242689f27fd\"></p>\n<p data-pid=\"4c1u9K7U\">虽然长得不帅，却非常好色的蚊子同学</p>\n<p data-pid=\"Au1spkzM\">​相信有过校园回忆的人，生命中总会遇到一位这样的小伙伴：</p>\n<p data-pid=\"dUFivGVD\">1.好色：经常给你科普一些“生理卫生”方面的小知识。</p>\n<p data-pid=\"Ej4zcFs5\">2.自恋：虽然长得不咋地，但是觉得自己帅的一塌糊涂。</p>\n<p data-pid=\"xEmjVmMI\">3.事精：总会没事找事，出了事有了麻烦就找你帮忙解围。</p>\n<p data-pid=\"FPeJQ4N0\">蚊子这个角色，虽然是位配角，关于他正面登场的戏份实际并不多，不过……他为主角时宇带来的超级大麻烦，可一点都不少。</p>\n<p><img src=\"https://picx.zhimg.com/v2-94000d8043797331819197f9a4883c5c_720w.jpg?source=b1748391?rss\" data-caption=\"在第二话中就登场的蚊子\" data-size=\"normal\" data-rawwidth=\"708\" data-rawheight=\"618\" data-watermark=\"watermark\" data-original-src=\"v2-94000d8043797331819197f9a4883c5c\" data-watermark-src=\"v2-c69245455128b7ce6170b06d2affdfef\" data-private-watermark-src=\"v2-269b5c03116eead7362f1fb545c36702\"></p>\n<p data-pid=\"S09_Z7ch\">在第二话中就登场的蚊子</p>\n<p><img src=\"https://pic1.zhimg.com/v2-892f169394777b09d352a22c7260e5ee_720w.jpg?source=b1748391?rss\" data-caption=\"在与主角的互动中，作为标志性特征的鼻子被无情蹂躏\" data-size=\"normal\" data-rawwidth=\"433\" data-rawheight=\"482\" data-watermark=\"watermark\" data-original-src=\"v2-892f169394777b09d352a22c7260e5ee\" data-watermark-src=\"v2-9ef68501bf15cf22f67542be6cda82d8\" data-private-watermark-src=\"v2-77da7c04d35aeaaf367aa11e12d3ca51\" data-tags=\"politic porn\"></p>\n<p data-pid=\"1VJgbB2R\">在与主角的互动中，作为标志性特征的鼻子被无情蹂躏</p>\n<p><img src=\"https://pic3.zhimg.com/v2-cd6aca2da19b51c83daa96e7c82a3301_720w.jpg?source=b1748391?rss\" data-caption=\"蚊子同学的这些神演技，让当年的读者捧腹大笑\" data-size=\"normal\" data-rawwidth=\"622\" data-rawheight=\"255\" data-watermark=\"watermark\" data-original-src=\"v2-cd6aca2da19b51c83daa96e7c82a3301\" data-watermark-src=\"v2-edb59c7a0a05fd7458d37ecc24559d4b\" data-private-watermark-src=\"v2-d37a3e1e590c6c510de85fcee13f0393\"></p>\n<p data-pid=\"8rlAh8z-\">蚊子同学的这些神演技，让当年的读者捧腹大笑</p>\n<p data-pid=\"lMCkTFSI\">至此，《蝴蝶少年》的男主角——时宇，以及他所生活的坏境便被确定了下来。</p>\n<hr>\n<h3>金发魔术师--休达</h3>\n<p data-pid=\"wCM-oudN\">一旦提起《蝴蝶少年》，休达这个角色就必然会被想起。究其原因，这个角色太过于醒目，与主角时宇的关系如影随形。</p>\n<p><img src=\"https://pica.zhimg.com/v2-6f32e17f78aac91ffc1cf1e9a782d2ea_720w.jpg?source=b1748391?rss\" data-caption=\"人格魅力满值的休达\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"679\" data-watermark=\"watermark\" data-original-src=\"v2-6f32e17f78aac91ffc1cf1e9a782d2ea\" data-watermark-src=\"v2-758c77d60ed750561820382b5146e882\" data-private-watermark-src=\"v2-40ed305b254fcf9f6f3c61dc99d01400\" data-tags=\"porn\"></p>\n<p data-pid=\"1yb1DBpW\">“魔术师”休达，拥有操控着扑克幻化能力的诅咒者，这个角色可以说是《蝴蝶少年》这部作品中，初期最急于杀死同伴获取生命的角色了。</p>\n<p data-pid=\"C3gbEfDW\">也正因如此，休达从《蝴蝶》第一话就出现，并几乎参与了所有故事线的推进，可见其在推动剧情的地位何其重要。</p>\n<p data-pid=\"kC4wJcCl\">然而，这一角色是如何诞生的，灵感又来源于何处，这点则鲜为人知。</p>\n<p data-pid=\"bNAagLpz\">今天，我们就来了解一下这一人气角色诞生的全过程吧！</p>\n<p data-pid=\"dTHbm3kE\">《蝴蝶少年》是一部纯正的少年热血漫画作品，主角时宇被设定的那一刻，就注定收到广大男性读者的喜欢。</p>\n<p data-pid=\"z1eksO-f\">但在漫客的读者群中，至少有三分之二的读者是女性。虽然有编辑猜测男女读者比例为5：5，但我通过论坛的实地考察，依旧坚持女性读者大于男性读者的比例。</p>\n<p data-pid=\"M20dng0b\">既然女性读者那么多，如果没有一位角色能够收到女性读者的接受，那么《蝴蝶少年》这部作品刊载于漫客杂志上，一定会水土不服。</p>\n<p data-pid=\"bQXthvlA\">因此，创造一位能被女性读者喜欢的角色，就变得非常重要。</p>\n<p data-pid=\"MIE2H8JY\">首先需要明确的一点是，《蝴蝶》是少年漫画，那么我所想要的这一角色，不应该是“出场就被众女生围住尖叫好帅”的少女漫画套路的大帅哥型角色。</p>\n<p><img src=\"https://picx.zhimg.com/v2-6b3443d61ee832fc2c2b042bec224ca9_720w.jpg?source=b1748391?rss\" data-caption=\"第一版的休达可爱居多，但似乎少了点什么\" data-size=\"normal\" data-rawwidth=\"671\" data-rawheight=\"970\" data-watermark=\"watermark\" data-original-src=\"v2-6b3443d61ee832fc2c2b042bec224ca9\" data-watermark-src=\"v2-9b1418f9e69633066979ab478c6bea1f\" data-private-watermark-src=\"v2-de7ce1d2aa6fa6b5930031853fe70e4e\" data-tags=\"porn\"></p>\n<p data-pid=\"IQDuILPA\">第一版的休达可爱居多，但似乎少了点什么</p>\n<p data-pid=\"q9CcLIOj\">我最喜欢的配角，詹姆斯.卡梅隆导演的《魔鬼终结者》系列第二部中的液体机器人（由罗伯特·帕特里克饰演），令人印象深刻。</p>\n<p><img src=\"https://pica.zhimg.com/v2-63ca6b3b086e96db5e90af9bcd9cf28c_720w.jpg?source=b1748391?rss\" data-caption=\"如同天使般的魔鬼，液体机器人这个角色是个典型的矛盾型角色\" data-size=\"normal\" data-rawwidth=\"749\" data-rawheight=\"542\" data-watermark=\"watermark\" data-original-src=\"v2-63ca6b3b086e96db5e90af9bcd9cf28c\" data-watermark-src=\"v2-e08156b6635954d049993d7f1122d480\" data-private-watermark-src=\"v2-fa22233f0a95eeba8bf17d681ce2b6b4\"></p>\n<p data-pid=\"AguZGhe8\">既然休达一开始就要追杀主角时宇来获取寿命，那么“杀手”这个属性，与《终结者2》中的反派有着相似之处。</p>\n<p data-pid=\"xiC11tWr\">经过一番思考后，最终决定把“可爱”与“冷酷”这两种极为矛盾对立的属性，组合到一起。</p>\n<p data-pid=\"ywAGRg9v\">直到这个时候，休达这个充满了“极端化”的角色，终于被确认了下来。</p>\n<p data-pid=\"rCK5_R6o\">从后来的漫画中，我们也可以看到这个角色性格，与他的能力一样充满了“善变”。</p>\n<p data-pid=\"WM3YRp1N\"><b>属性1：冷酷</b></p>\n<p data-pid=\"O_tCcaj_\">当主角熟睡的时候，休达无时无刻不在想着怎么杀死时宇。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-a85de37bcd5a71908b064363359a3655_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"621\" data-rawheight=\"662\" data-watermark=\"watermark\" data-original-src=\"v2-a85de37bcd5a71908b064363359a3655\" data-watermark-src=\"v2-479b0a8619d30355349ad14bdfd3a0f5\" data-private-watermark-src=\"v2-de6c9ff11c9fa3e229e3d70a21bf43a0\" data-tags=\"porn\"></p>\n<p data-pid=\"2XmL3s6e\"><b>属性2：可爱</b></p>\n<p data-pid=\"lvzs7yJX\">休达的出现“可爱”属性的时候，可以大致分为两种，第一种是装出来的。</p>\n<p data-pid=\"1Xj_RWc2\">例如他和主角在一起的时候，为了降低主角对他的提防，因此总会表现出人畜无害的样子。</p>\n<p><img src=\"https://picx.zhimg.com/v2-c08e4dadd67a764a3115aaa849ec56d4_720w.jpg?source=b1748391?rss\" data-caption=\"休达在故事里经常也参与喜剧演出\" data-size=\"normal\" data-rawwidth=\"618\" data-rawheight=\"508\" data-watermark=\"watermark\" data-original-src=\"v2-c08e4dadd67a764a3115aaa849ec56d4\" data-watermark-src=\"v2-dec7019f72d68cbc4f0ee09a48ea0917\" data-private-watermark-src=\"v2-02ed532e2d367f1b2a986c62961469a5\"></p>\n<p data-pid=\"-Rq-TP8u\">休达在故事里经常也参与喜剧演出</p>\n<p><img src=\"https://pic1.zhimg.com/v2-9a2ad39a651573c7903aab4f180d6c79_720w.jpg?source=b1748391?rss\" data-caption=\"时不时也会以Q版形象出现\" data-size=\"normal\" data-rawwidth=\"377\" data-rawheight=\"236\" data-watermark=\"watermark\" data-original-src=\"v2-9a2ad39a651573c7903aab4f180d6c79\" data-watermark-src=\"v2-77e3af573c4a1aa3c441cd7142992e7b\" data-private-watermark-src=\"v2-fbebdc0ee60683aa930f71b48b9b1c22\"></p>\n<p data-pid=\"OpzLA5XA\">时不时也会以Q版形象出现</p>\n<p data-pid=\"Y1ckH7kU\">而另一方面，休达“可爱”最真实的一面，往往只有和自己的小木偶“米莎”在一起时，才会显露出来。</p>\n<p><img src=\"https://pica.zhimg.com/v2-b1cb05a7485d8606c526945293942b88_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"621\" data-rawheight=\"207\" data-watermark=\"watermark\" data-original-src=\"v2-b1cb05a7485d8606c526945293942b88\" data-watermark-src=\"v2-51ebbdeb5e9b192e8dddf8322d6c9d36\" data-private-watermark-src=\"v2-8242c85b562b5ba432c918038be27b97\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-abe7577ddfbe86ad98fc3f32ceeba90e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"621\" data-rawheight=\"145\" data-watermark=\"watermark\" data-original-src=\"v2-abe7577ddfbe86ad98fc3f32ceeba90e\" data-watermark-src=\"v2-a0456da109615cf08e18f128c85e91bf\" data-private-watermark-src=\"v2-55e41e384597cd4a0f3d0a5b39d40942\"></p>\n<p data-pid=\"Kh9YJknc\">在《蝴蝶少年》连载的过程中，休达和米莎曾有过一幕，令许多读者有过猜想。</p>\n<p><img src=\"https://picx.zhimg.com/v2-eae68f49b981b20e7ffce4392175441a_720w.jpg?source=b1748391?rss\" data-caption=\"出自《蝴蝶少年》第18话\" data-size=\"normal\" data-rawwidth=\"621\" data-rawheight=\"987\" data-watermark=\"watermark\" data-original-src=\"v2-eae68f49b981b20e7ffce4392175441a\" data-watermark-src=\"v2-1a82ba6eed23c40ed28847d474c9605f\" data-private-watermark-src=\"v2-f6bd1d58f123c467a35db6044303402c\"></p>\n<p data-pid=\"AUYUpzT4\">昏暗的空间中，童年的休达蓬头垢面，这时墙壁上的洞里递送过来一颗鲜红多汁的苹果。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-e58526ddc64c811f41d15fdce2491c3a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"435\" data-rawheight=\"356\" data-watermark=\"watermark\" data-original-src=\"v2-e58526ddc64c811f41d15fdce2491c3a\" data-watermark-src=\"v2-88511ac2e1cc6766ab68fc7dd49d13fa\" data-private-watermark-src=\"v2-801c11c8296f48069e5fdf7c4e5da186\"></p>\n<p data-pid=\"BzY9EA3M\">当镜头拉近，我们惊讶的发现，米莎的手并不是所熟悉木偶，而是骨肉之躯。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d737b560d485548af32946e555faa684_720w.jpg?source=b1748391?rss\" data-caption=\"米莎血肉模糊的手\" data-size=\"normal\" data-rawwidth=\"198\" data-rawheight=\"345\" data-watermark=\"watermark\" data-original-src=\"v2-d737b560d485548af32946e555faa684\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"eINhlOC7\">看到这里，许多读者都跑来找我要剧透：米莎难道过去不是木偶吗，怎么过去会是人呢？！</p>\n<p data-pid=\"2dV6M4SR\">事实上，米莎原本就是人类，身份为休达家的小女仆，实际年龄和休达只差一岁。</p>\n<p data-pid=\"wQ5BR-_A\">只是后来为了帮助休达，而牺牲了自己的生命，最终灵魂被转入一个木偶的躯体内，才出现了我们后来所看到的小木偶米莎。</p>\n<p><img src=\"https://picx.zhimg.com/v2-4bd1d4f12ed9336df24ea67d224ad4d0_720w.jpg?source=b1748391?rss\" data-caption=\"沉睡的米莎\" data-size=\"normal\" data-rawwidth=\"624\" data-rawheight=\"391\" data-watermark=\"watermark\" data-original-src=\"v2-4bd1d4f12ed9336df24ea67d224ad4d0\" data-watermark-src=\"v2-da67f6b0283fb5c11c6ab693f7b79ed2\" data-private-watermark-src=\"v2-55b7515d3c58266d2474609ea687255f\"></p>\n<p data-pid=\"2GL9Bx9s\">之所以在《蝴蝶》连载到第18话的时候，交代出休达与米莎的过去经历，其实就是要把“灵魂可以被存放进木偶里，并继续活下来”这一设定交代出来。</p>\n<p data-pid=\"kteva5-q\">而18话左右的剧情，刚好是在交代“莫奈的姐姐莫默失踪并变成了鬼魂”，而在故事里恰好出现了一个冰树送给莫默的小奶牛玩偶……</p>\n<p data-pid=\"JaR0cWLL\">说到这里，相信聪明的读者已经大致能猜到“休达与米莎”这段童年故事，为什么会出现在这段剧情里了吧！</p>\n<p data-pid=\"MvgB9zN4\">值得一提的是，休达之所以成为诅咒少年中，最急迫想要活下去的角色，也是因为自己的灵魂是与米莎的灵魂“绑定”在一起的，因此如果休达死亡，那么米莎的生命也将彻底终结。正因为如此，休达为了让米莎能继续活着，才不遗余力的想尽一切办法要剥夺其他诅咒少年的寿命。</p>\n<p data-pid=\"uBVQsRnL\">不过在实际连载中，这些剧情并未来得及交代，就结束了……</p>\n<p data-pid=\"lNE43_PJ\">最后，在“休达篇”即将完结之际，也回答各位读者朋友一个长达十年的疑惑——漫客版《蝴蝶少年》究竟是不是被腰斩的？</p>\n<p data-pid=\"FT_Ip_Ws\">《蝴蝶少年》在连载到15话左右的时候，拿下了2009年度漫客作品排名的第一名。</p>\n<p data-pid=\"Fc_-FNk4\">走所周知，杂志作品只有排名末端，才有被腰斩的可能性，作为当时第一的人气作品《蝴蝶少年》，显然是不可能被腰斩的。</p>\n<p data-pid=\"iAedbyf7\">不仅如此，当时的《蝴蝶少年》已经决定于2010年推出两本单行本，是杂志重点包装的作品之一。</p>\n<p data-pid=\"oPsAAHMG\">作品之所以连载到21话戛然而止，如同传闻一样，的确是我身体出现异样，不得不选择停刊。</p>\n<p data-pid=\"xRMSI_Kj\">当时的漫客主编和责编非常重视这件事，不远万里来到我的病床前探望，并约定好半年后如果身体康复，《蝴蝶少年》继续复刊。</p>\n<p data-pid=\"F8Fv9IBQ\">然而……半年后我的身体依旧未能恢复到能够连载的状态，为了不影响杂志的后续计划，《蝴蝶少年》只能彻底告别了她最心爱的读者，成为国漫界一部高人气但最终未能完结的遗憾之作。</p>\n<p data-pid=\"p_zb5edK\">当然，网络传闻关于作者出了车祸，或者已经病故的消息，大家看后笑笑便是。</p>\n<hr>\n<h3>我们的女主角--莫奈</h3>\n<p data-pid=\"lBhI2hZt\">莫奈，这位与法国印象派画家同名的《蝴蝶少年》女主角，如今回想起她的诞生过程，依旧非常有趣。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-99d63f88e7d40e9ae428999b18788e73_720w.jpg?source=b1748391?rss\" data-caption=\"莫奈最早期的形象,色彩在后来经过多番调整\" data-size=\"normal\" data-rawwidth=\"580\" data-rawheight=\"786\" data-watermark=\"watermark\" data-original-src=\"v2-99d63f88e7d40e9ae428999b18788e73\" data-watermark-src=\"v2-217cab26a01044087146966713b1b849\" data-private-watermark-src=\"v2-821005e5d9fdeeda545e36b952a1843a\"></p>\n<p data-pid=\"FgdsMl9y\">莫奈最早期的形象,色彩在后来经过多番调整</p>\n<p data-pid=\"atDwlJ1n\">​青色的发色是莫奈最典型的特征，然后实际最早设定的版本中，莫奈的发色并非如此。</p>\n<p data-pid=\"Tkv5wkKy\">因为2008年，国内动漫还处于比较保守的时代，有关部门提出的要求中，就明确规定我们动漫角色的发色不能是五颜六色，不能倡导青少年染发，除了外国人可以是金色或红色头发外，亚洲人一律必须是黑色或棕色头发。</p>\n<p data-pid=\"a3th-Qjf\">因为这个要求的影响，所以早期莫奈的发色，实际是——黑色！</p>\n<p><img src=\"https://pica.zhimg.com/v2-da2ca074eb99e4e545362cce449a10ba_720w.jpg?source=b1748391?rss\" data-caption=\"真正意义的第一代莫奈形象中，发色是黑发。\" data-size=\"normal\" data-rawwidth=\"284\" data-rawheight=\"285\" data-watermark=\"watermark\" data-original-src=\"v2-da2ca074eb99e4e545362cce449a10ba\" data-watermark-src=\"v2-7f1fca181ccfa89b09c856938b2aa03c\" data-private-watermark-src=\"v2-be437f4a25df5ad9c7c406c216656164\"></p>\n<p data-pid=\"dj2schaK\">真正意义的第一代莫奈形象中，发色是黑发。</p>\n<p data-pid=\"_DwSeRo4\">​不仅如此，后来大家所熟悉的“莫奈”这个名字，也并非一开始就确定了的。</p>\n<p data-pid=\"CugtCflE\">时代久远，连身为作者的我，也已经想不起最初的名字，总之不是“莫奈”。</p>\n<p data-pid=\"G00sNPzB\">当时正值《知音漫客》的“萌”刊创刊，编辑部异常忙碌，导致《蝴蝶少年》的女主角的人物设定并未能在第一时间审查。</p>\n<p data-pid=\"ECuyCdLx\">某天下午，我的责编突然和我联系，并要求提交男主时宇和女主莫奈的角色设定图，并告诉我要用这两张设定图做宣传。</p>\n<p data-pid=\"nBizpomh\">就这样，一场小“闹剧”上演……</p>\n<p data-pid=\"1x5jRG0d\">编辑拿到女主的设定后，觉得女主发色和男主发色“怎么都是黑色啊?”,太不像女主啦！而且名字也太普通！</p>\n<p data-pid=\"yBazNtXT\">而当时杂志的美工人员又急着等待角色设定图排版制作宣传图，这一突发事件顿时让我傻了眼。</p>\n<p data-pid=\"rqTMflfT\">女主和男主发色太过接近是个硬伤，特别是在彩色漫画中，如果两人凑在一起，的确是黑乎乎的一大片，效果肯定会非常糟糕！</p>\n<p data-pid=\"4ns7Y9C2\">于是顶着催稿的压力，硬生生的向编辑提出“请给我十分钟时间调整”这样的要求。</p>\n<p data-pid=\"IKMmacqO\">就在这十分钟里，我几乎把脑细胞消耗殆尽：发色还好办，调来调去，最终定下青色；可角色的名字问题，怎么可能在十分钟内就想出来嘛！</p>\n<p data-pid=\"4XDRcbXZ\">“如果女主角顶着一个土气的名字，读者会接受吗？会喜欢吗？”答案必然是否定的。</p>\n<p data-pid=\"tK1j4Mxc\">这个问题在那短短的几分钟里如同幽魂一样纠缠着我，让我不得不逼着自己在一瞬间爆发出事后连自己都不可思议的潜力。</p>\n<p data-pid=\"1pElFEkS\">电光火石间，依稀记得小学看《忍者神龟》时，里头四个忍者龟的名字，分别是用四位世界级艺术家的名字命名。</p>\n<p data-pid=\"IprqRYes\">女主角的名字能不能也用这个方法来命名呢？可是世界级艺术家全是男的！</p>\n<p data-pid=\"Ci5KXXm_\">就在我身处绝望，不停的在百度中搜索，疯狂催促的编辑都恨不得从电脑屏幕里爬出来向我索稿的时候，突然一张图片撞进我的眼帘。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-ec0ab0a0a8cc8c0f8b315ae7221ad102_720w.jpg?source=b1748391?rss\" data-caption=\"法国大师莫奈的作品——睡莲\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"437\" data-watermark=\"watermark\" data-original-src=\"v2-ec0ab0a0a8cc8c0f8b315ae7221ad102\" data-watermark-src=\"v2-48cce7a2c18bd5d4577930af0b08a6cb\" data-private-watermark-src=\"v2-6f73e30afc86f1f5b97fa1b0ada309e3\"></p>\n<p data-pid=\"9HWBoVF5\">法国大师莫奈的作品——睡莲</p>\n<p data-pid=\"LgNxYfI-\">熟悉艺术史的我一眼就认出，这是法国印象派大师——莫奈的作品，而睡莲真是他的代表作之一，而莲花也给人一种纯洁的神圣感。</p>\n<p data-pid=\"SvksQwPx\">“莫奈……莫奈”口里轻声念了这个名字数遍，愈发觉得这名字和眼前的女主形象非常般配。</p>\n<p data-pid=\"tHE8FBnO\">“还没想好吗，要出人命啦！”编辑最后的QQ留言。</p>\n<p data-pid=\"BoJ8vg1W\">我才犹犹豫豫的把稿子发了过去。</p>\n<p data-pid=\"k0Uv7mF-\">编辑看完改后的女主，给我的反馈是：比之前看起来好多了，名字也是！</p>\n<p data-pid=\"moEjYf5h\">我这才松口气，摊在了椅背上。</p>\n<p data-pid=\"_PwmZjhc\">如今想想，女主设定居然是所有角色中最“草率”决定的，真是哭笑不得。</p>\n<p data-pid=\"To70YNlL\">莫奈这角色，是我创作的所有作品中最喜欢的女主角，因为所有女性的优点，全部汇聚到了这个女孩身上。</p>\n<p><img src=\"https://picx.zhimg.com/v2-7936796b79b4677f894e5f5476044d3f_720w.gif?source=b1748391?rss\" data-caption=\"为读者制作的莫奈专属动态表情\" data-size=\"normal\" data-rawwidth=\"90\" data-rawheight=\"103\" data-watermark=\"watermark\" data-original-src=\"v2-7936796b79b4677f894e5f5476044d3f\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"h1c0EOZ-\">在最初设定莫奈发型的时候，一直都觉得太过于普通，和其他动漫作品中的形象无法拉开本质上的区别。</p>\n<p data-pid=\"rXHZSQ-B\">记忆中，中学时代的女生，有一个特点令人印象深刻：夏天的时候，有些女生会在手腕上系着一条丝帕，用来擦去脸颊的汗水。</p>\n<p data-pid=\"omWbIANh\">于是便决定将“丝帕”这个概念，引入设定中。经过几次尝试均以失败告终：把丝帕绑在头顶嘛，就是普通的蝴蝶结，扎成马尾辫又缺乏女神的气质。</p>\n<p data-pid=\"FOCx-MPW\">于是我赌气的把女主的头上画满了各种各样的丝帕，然后进行排除法：一个个的删除，当删到脸颊两边的时候，突然眼前一亮，越看越可爱。</p>\n<p data-pid=\"9MrBloG-\">最终，用丝帕来绑头发的设定，决定了！</p>\n<p><img src=\"https://pic3.zhimg.com/v2-523cdaef84d5b301970d413ace4214a3_720w.jpg?source=b1748391?rss\" data-caption=\"根据服装风格变化，绑着头发的丝帕也会跟着改变。\" data-size=\"normal\" data-rawwidth=\"348\" data-rawheight=\"428\" data-watermark=\"watermark\" data-original-src=\"v2-523cdaef84d5b301970d413ace4214a3\" data-watermark-src=\"v2-35bd5bf9cd7ae5e6fa3fd100b6d0995c\" data-private-watermark-src=\"v2-8192904dbe6b1112f23046a2f162a8d2\"></p>\n<p data-pid=\"g2SxXK_W\">根据服装风格变化，绑着头发的丝帕也会跟着改变。</p>\n<p data-pid=\"f8NwPzfD\">也正因为这个设定，在恶搞版《蝴蝶结少年》的四格中，才有了这样的灵感。</p>\n<p><img src=\"https://pica.zhimg.com/v2-71323446bef2c20116d732ec54b3a4b3_720w.jpg?source=b1748391?rss\" data-caption=\"莫奈借走了时宇的蝴蝶结，失去蝴蝶结就会死的时宇挂了\" data-size=\"normal\" data-rawwidth=\"322\" data-rawheight=\"888\" data-watermark=\"watermark\" data-original-src=\"v2-71323446bef2c20116d732ec54b3a4b3\" data-watermark-src=\"v2-33ee90c99035ac843393497f5f43b396\" data-private-watermark-src=\"v2-c237d62e42c1a7d3473b1b91937954c1\"></p>\n<p data-pid=\"T_w1NInx\">莫奈借走了时宇的蝴蝶结，失去蝴蝶结就会死的时宇挂了</p>\n<p data-pid=\"Mx5KC4vg\">​在漫画连载中，莫奈所就读的海星女校，也来源于生活。</p>\n<p data-pid=\"83XBIOLg\">大学时代，学校附近有两所女校，因为是“女”校，自然成了男生们话题的一部分。</p>\n<p data-pid=\"8BUeMkZl\">因为机缘巧合，后来与两所女校的学生认识，并有幸走访过其中一家。</p>\n<p data-pid=\"eLm8lrw6\">于是在创作《蝴蝶少年》的时候，便几乎还原的把当时走访的所见所闻，以及所感，全都搬进了漫画故事里。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-8923b87d694441f26b41437fbfc48c38_720w.jpg?source=b1748391?rss\" data-caption=\"几乎接近真实的女校设定\" data-size=\"normal\" data-rawwidth=\"483\" data-rawheight=\"974\" data-watermark=\"watermark\" data-original-src=\"v2-8923b87d694441f26b41437fbfc48c38\" data-watermark-src=\"v2-cca565d9cb496564bc94882c9a842d7f\" data-private-watermark-src=\"v2-da44bd2f701962a5f37216937954e1ed\"></p>\n<p data-pid=\"jgLjaf0B\">​不仅仅是学校的环境地图，就连女校宿舍楼下的“风景”，也如实的再现。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-087a1c370b5e0be35ec8b91bac927c94_720w.jpg?source=b1748391?rss\" data-caption=\"相信视力极佳的读者，早已发现了许多亮点\" data-size=\"normal\" data-rawwidth=\"622\" data-rawheight=\"336\" data-watermark=\"watermark\" data-original-src=\"v2-087a1c370b5e0be35ec8b91bac927c94\" data-watermark-src=\"v2-c2937173f7325b082303b6a0c6f4c6ef\" data-private-watermark-src=\"v2-c4396f2a47a0fcad1462883b2294a0b8\"></p>\n<p data-pid=\"ZFo3T2J7\">相信视力极佳的读者，早已发现了许多亮点</p>\n<p data-pid=\"_R8BB-Lb\">而漫画中，海星女校的“乌鸦帮”的设定，也来源于现实中女校学生之间的“派系”斗争。</p>\n<p data-pid=\"Xi6gSqgo\">“艺术来源于生活”，这句话如今想来，还真是如此呀~^_^</p>\n<hr>\n<h3>人气女二--歌雅</h3>\n<p data-pid=\"UUfbxxvN\">歌雅，原本出自筹备的一部长篇作品《铁血梦》中“黑暗女神”的名字。</p>\n<p data-pid=\"GPBbA9_3\">在《铁血梦》的世界观体系中，黑暗女神歌雅与光明女神席塔，本就是死对头。</p>\n<p data-pid=\"xTXucFuV\">因为这个名字个人非常喜欢，所以后来的许多短篇作品中，也曾使用过。</p>\n<p data-pid=\"VSgXlG4z\">直到《蝴蝶少年》连载时，这个名字依旧被保留了下来，运用在了海星女校“乌鸦帮”的大姐头身上。</p>\n<p><img src=\"https://picx.zhimg.com/v2-e27ceddf8a66bf3c6da0f836fac87d76_720w.jpg?source=b1748391?rss\" data-caption=\"《蝴蝶少年》第九话，曾用歌雅的形象作为扉页，这也是唯一的一次，歌雅出现的扉页上。\" data-size=\"normal\" data-rawwidth=\"499\" data-rawheight=\"795\" data-watermark=\"watermark\" data-original-src=\"v2-e27ceddf8a66bf3c6da0f836fac87d76\" data-watermark-src=\"v2-5093544f08752c85c4235314f62ba44a\" data-private-watermark-src=\"v2-76e46263f66f9f1a19e6de178d5a7a48\" data-tags=\"porn\"></p>\n<p data-pid=\"bmuzJeGC\">《蝴蝶少年》第九话，曾用歌雅的形象作为扉页，这也是唯一的一次，歌雅出现的扉页上。</p>\n<p data-pid=\"oxOUVFgW\">​歌雅在《蝴蝶少年》的整个故事架构初期，充其量只能算是一位配角，原本设定的目的，就是在女校泳赛的桥段中，给女主莫奈制造夺冠的困难，增加挑战性。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-574015414fa2602d92264d7a8ab04f41_720w.jpg?source=b1748391?rss\" data-caption=\"女校泳赛的最大看点之一，就是莫奈与歌雅的对决。\" data-size=\"normal\" data-rawwidth=\"621\" data-rawheight=\"252\" data-watermark=\"watermark\" data-original-src=\"v2-574015414fa2602d92264d7a8ab04f41\" data-watermark-src=\"v2-3a20d4ff738959bec5cac10f8763abfb\" data-private-watermark-src=\"v2-467aa48c6e9ff444011cdea8a96152c1\" data-tags=\"porn\"></p>\n<p data-pid=\"cIwqmfz3\">女校泳赛的最大看点之一，就是莫奈与歌雅的对决。</p>\n<p data-pid=\"guD1W-07\">在最初的计划中，歌雅和她率领的“乌鸦帮”，只是在故事前五话出现，至于未来会不会再登场，并没有太多考虑。</p>\n<p data-pid=\"vcRtXD4f\">值得一提的是，在创作漫画连载时，我的态度是，一旦出场的角色人气不高，不被读者所接受，那么就说明这个角色在塑造上是失败的。因此很快就会离开读者的视野，被“打入冷宫”。</p>\n<p data-pid=\"HpkG02oA\">就像我的另一部作品《高陵先生》，连载中意识到女主小美对于剧情的推进开始变得困难，就立刻让她退出。</p>\n<p data-pid=\"z_IXZgZL\">这是对读者的一种负责态度，也是让漫画连载故事永葆活力的一种技巧。</p>\n<p data-pid=\"BqRUjZOf\">但歌雅这个角色后续的表现，显然逃过了一劫，而究其原因，就在于《知音漫客》举办了一场“萌战”比赛。</p>\n<p data-pid=\"OaSJYlvx\">所谓“萌战”，就是选出杂志连载作品中“最佳男主角” “最佳女主角”以及“最佳配角”，有点类似奥斯卡颁奖的感觉。</p>\n<p data-pid=\"RSbi98uB\">而就在“最佳女配角”的投票中，歌雅的票数着实让身为作者的我，大吃一惊。</p>\n<p data-pid=\"HWhEJ-dj\">歌雅斩获了“最佳”，而且票数和第二名还拉开了很大距离。</p>\n<p data-pid=\"cqKf4zqD\">甚至有读者还在论坛中喊话：如果歌雅能列为女主角，一定投票让她干趴莫奈！</p>\n<p data-pid=\"uKs4aBNo\">甚至还有许多男性读者给我写信，要求追加歌雅的登场露面次数，否则就给我寄刀片，爆我家水管！</p>\n<p data-pid=\"7gpnuUsu\">一个女配角，却在人气上紧逼女主角，这一点完全超出了我对歌雅的认知。</p>\n<p data-pid=\"rZ_x0OF1\">为了人身安全考量（当然这是个玩笑），在接下来的剧情上，做出了大幅的调整修改，为了引出更多歌雅与莫奈的故事，追加了“乱入——海星女校”的情节。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-8c33f480e14c1043016001f7b71c3213_720w.jpg?source=b1748391?rss\" data-caption=\"在剧情中，加入了更多歌雅的“香艳”镜头\" data-size=\"normal\" data-rawwidth=\"621\" data-rawheight=\"391\" data-watermark=\"watermark\" data-original-src=\"v2-8c33f480e14c1043016001f7b71c3213\" data-watermark-src=\"v2-ecf0f2500ad5cbde236879a4ae1b7274\" data-private-watermark-src=\"v2-b2953afbbc667ad1b349e010658ed994\"></p>\n<p data-pid=\"6AW4hPRQ\">在剧情中，加入了更多歌雅的“香艳”镜头</p>\n<p data-pid=\"zugdJleD\">说到歌雅，就不得不提起另外一个“神助攻”：亚楠。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-fea1fac02db552a5186e4b51a053edae_720w.jpg?source=b1748391?rss\" data-caption=\"歌雅的跟班：亚楠，配角中的战斗机。\" data-size=\"normal\" data-rawwidth=\"629\" data-rawheight=\"463\" data-watermark=\"watermark\" data-original-src=\"v2-fea1fac02db552a5186e4b51a053edae\" data-watermark-src=\"v2-ef9583e3ec5cbfb3f0c9fab1fe5d6324\" data-private-watermark-src=\"v2-468a2abeb785c6080335ed9c35a2f5b6\" data-tags=\"porn\"></p>\n<p data-pid=\"hDiUpuJb\">歌雅的跟班：亚楠，配角中的战斗机。</p>\n<p data-pid=\"ATkU42h1\">​亚楠虽然是《蝴蝶少年》中的超级配角，但在“女校篇”的一幕中，一战成名。</p>\n<p data-pid=\"ievDd77G\">原因则因为，就是她的一记飞棍，竟把男主时宇的前世记忆给砸了出来，导致男主黑化，险些带领全体女生领了便当。</p>\n<p><img src=\"https://pica.zhimg.com/v2-617f307657e4ece962ee746c0293e4f6_720w.jpg?source=b1748391?rss\" data-caption=\"如果不是莫奈及时赶到，不知就这样领了便当的亚楠作何感想。\" data-size=\"normal\" data-rawwidth=\"622\" data-rawheight=\"827\" data-watermark=\"watermark\" data-original-src=\"v2-617f307657e4ece962ee746c0293e4f6\" data-watermark-src=\"v2-e11a39d0b2b21d323fd3b6bf28fb600a\" data-private-watermark-src=\"v2-73b3606a94303e984033e9adf0f941c1\" data-tags=\"porn\"></p>\n<p data-pid=\"YyFO6Ssg\">如果不是莫奈及时赶到，不知就这样领了便当的亚楠作何感想。</p>\n<p data-pid=\"cD3fympQ\">​虽然在角色人气上，亚楠这个小跟班完全无法和自己的“大姐头”歌雅相比，但是对于歌雅的人气提升，功不可没。</p>\n<hr>\n<h3>人气智力角色--郑哲</h3>\n<p><img src=\"https://pic3.zhimg.com/v2-9ee31d112a8512996cb123cb9ec01fce_720w.jpg?source=b1748391?rss\" data-caption=\"郑哲\" data-size=\"normal\" data-rawwidth=\"407\" data-rawheight=\"367\" data-watermark=\"watermark\" data-original-src=\"v2-9ee31d112a8512996cb123cb9ec01fce\" data-watermark-src=\"v2-d2954da0eac00dc81f3d8218804c1379\" data-private-watermark-src=\"v2-f87d40aab4c196d6cd7c195d670adc9c\"></p>\n<p data-pid=\"Dm3ubquo\">有一次朋友的婚宴上，一位20出头的眼镜少年和我同桌。</p>\n<p data-pid=\"BbRiHXtI\">这人话不多，从头到尾只低头吃菜。于是我想，或许这位学生朋友也和我一样，是个不喜欢嘈杂场所的人吧？</p>\n<p data-pid=\"1LPTTFVl\">于是我凑了过去，与他攀谈起来，而这个眼镜少年的名字，就叫——郑哲。</p>\n<p data-pid=\"VbmSyFLe\">看过并熟悉《蝴蝶少年》故事的读者，一定不会忘记：漫画中的郑哲有一句口头禅“我要考清华”，这句话无疑对当年还是学生党的读者来说，是一个饶有趣味的角色特色。</p>\n<p data-pid=\"T9-uIG76\">但不知道的是，这个口头禅，同样也是现实婚宴上的那个郑哲最细化挂在嘴边的一句话。</p>\n<p data-pid=\"VDFlpN8l\">而这句“我要考清华”，则被我原封不动的放入了《蝴蝶少年》的漫画中。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-0cdb1b4290641865b258671890cdb4ec_720w.jpg?source=b1748391?rss\" data-caption=\"被许多读者调侃的“我要考清华”一梗，就出在此处。\" data-size=\"normal\" data-rawwidth=\"699\" data-rawheight=\"405\" data-watermark=\"watermark\" data-original-src=\"v2-0cdb1b4290641865b258671890cdb4ec\" data-watermark-src=\"v2-6be7db25c57b333fda0af0dec32278aa\" data-private-watermark-src=\"v2-e11c71f1a65e453031b5ea4a2df90c2c\"></p>\n<p data-pid=\"vKEk1z_i\">被许多读者调侃的“我要考清华”一梗，就出在此处。</p>\n<p data-pid=\"48X0ke0H\">如果说《蝴蝶少年》中最神秘的角色，我想无疑是郑哲。</p>\n<p data-pid=\"Pi9MLilB\">他总是会在令人意想不到的地方出现，又会无声无息的消失，但他的每次出现，似乎有暗示着什么，总能带来一系列惊天爆料。</p>\n<p data-pid=\"GN7oPnqI\">虽然直到连载戛然而止时，也没来得及交代郑哲的具体能力，但依旧有部分读者在与我交谈的过程中猜测，<b>郑哲的能力是：预知未来。</b></p>\n<p data-pid=\"Zs04wqbJ\">但标准答案是，<b>不仅能预知未来，还能观测过去，堪称全知全能！</b></p>\n<p data-pid=\"27fTIAIu\">在创作初期做角色设定时，对于“全知”型的郑哲，一开始有担心过这种能力会不会随着剧情的推进，逐渐变成一种BUG，最终导致剧情的崩塌。</p>\n<p data-pid=\"nGgxC97Y\">因此，在创作的环节中，就必须要给这个“能力”加入一些限制。</p>\n<p data-pid=\"qRu4gOre\">所以在《蝴蝶少年》开篇的前五话，就加入了对这个能力进行限制的剧情。</p>\n<p data-pid=\"9oRqAMeq\">多年后，《复仇者联盟》的影片在国内上映，当我看到奇异博士为了找到打败灭霸而不断的寻找方法时，着实令我有些意外：因为这正是《蝴蝶少年》中所设定的郑哲使命。</p>\n<p data-pid=\"7I9gzK-J\">一个知晓过去未来的人，必然早已厌倦了前世的杀戮，也必然在浩瀚的时间长河中寻找到了解开诅咒的方法。</p>\n<p data-pid=\"BJi6nNGV\">但因为某个可能导致自身毁灭的原因，他不能直接了当的去告诉他人，而必须通过一系列如同“蝴蝶效应”的方法，让整个事件的发展按照能够“解开诅咒”的轨迹来运行。</p>\n<p data-pid=\"5cvshbHr\">于是就有了《蝴蝶少年》故事中所有的故事。</p>\n<p data-pid=\"lot5HQFH\">时宇和莫奈的相识，是郑哲安排的。</p>\n<p data-pid=\"-OjWEEwL\">休达前往医院遇到莫默的鬼魂，也是郑哲诱导的。</p>\n<p data-pid=\"laWE4u3D\">而时宇和莫奈的矛盾激化，也是因为郑哲在关键时刻用“引导之藤”牵绊了时宇的腿。</p>\n<p data-pid=\"nfmN8KTI\">最后又以米莎为诱饵，把休达吸引到了医院。</p>\n<p data-pid=\"DYDpDERM\">正因为如此，郑哲在整个故事线中，就如同一位编剧一般，推进并改变着整个命运的发展。</p>\n<p data-pid=\"UEQYqScR\">某种意义来说，郑哲在故事的世界观中，已然是个“神”。</p>\n<p data-pid=\"NwKBSvZk\">因为郑哲在《蝴蝶少年》中太过于低调，所以整个故事里，仅在短短几话中偶尔登场，但每当我在漫展签售会上遇到《蝴蝶》的粉丝时，大家总会围着我，想要聊聊关于郑哲更多的秘密，以及为什么会想出这样一个有趣且神秘的角色。</p>\n<p data-pid=\"4iDJEq38\">其实之所以会想到设定郑哲这样一位角色，原因在于：主角时宇并不是一个“拥有明确目标”的主角。</p>\n<p data-pid=\"XlbYr2Oi\">我们都知道，漫画作品中，主角必须要有一个明确的目标，例如“成为海贼王”，或“我要成为第四代火影”之类的梦想，可是时宇的身上，我怎么也无法强行在故事一开始就给他追加一个“我要打破诅咒”这样的信念。</p>\n<p data-pid=\"YuzZTsQ6\">试想，一个每天上学放学，放学后还要去送外卖的少年，突然得知自己背负诅咒，就一下子萌生要解开诅咒的想法？甚至知道了解开的方法？这显然不真实，也不符合这个角色。</p>\n<p data-pid=\"PQ7cZNQw\">正是这样，才在故事里安插了时宇的班长——郑哲，一步步引导时宇找到解开诅咒的方法，并最终牺牲自己来唤醒时宇对抗诅咒的决心。</p>\n<p data-pid=\"mz8SOzis\">换句话说，郑哲的诞生，一切都是为了时宇吧！</p>\n<hr>\n<p data-pid=\"5m9ldmFL\">最后说两句，作为一部曾经的大人气作品，由于自己身体原因或者杂志原因而停刊太监烂尾的作者不在少数，而像蝴蝶少年这样，即便过了十年依旧愿意给读者一个后续故事发展的作者，真心不多</p>\n<p data-pid=\"ucvQroU6\">虽然至今依旧没有一个完美的结局，但是章磊老师在花更多的时间去培养新生代的漫画家，把自己更多的经验传授给未来的中国漫画家们，这是用另一种方式在为中国的漫画事业做贡献，我觉得意义更加重大。</p>\n<p data-pid=\"93NclWLn\"><b>希望章磊老师越来越好。</b></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/bin-di-47-74?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">彬帝</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>延伸阅读：<br><a href=\"http://www.zhihu.com/question/543186678?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">寻找一个旧时代的国产漫画作品?</a><br><a href=\"http://www.zhihu.com/question/515529852?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价中国独立漫画作者出的漫画合集《远东漫画》？</a><br>\n","link":"http://www.zhihu.com/question/518189820/answer/2604749536?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"国产动画《诛仙》开播，有哪些看点？","date":"2022-08-02 04:14:34","description":"\n<p></p>\n<p data-pid=\"iHR8T4SL\">动画上线之后，一口气追完了更新，久违的体验了一把追番的快乐。</p>\n<p data-pid=\"-0CZ2Ouo\">当初落笔时刻，未曾想过有一天能够看到二次元呈现下的张小凡。</p>\n<p data-pid=\"AgU9b8uJ\">看着小凡喊出那句不服，看着他孤身拜入大竹峰。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-e31da494e21a1059fd6a297ddbdbf62e_720w.jpeg?source=b1748391?rss\" data-rawwidth=\"1036\" data-rawheight=\"582\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-e31da494e21a1059fd6a297ddbdbf62e\" data-watermark-src=\"v2-381de76029fed292daf8c49c6b2e3c2c\" data-private-watermark-src=\"v2-b2c0a9f0b19113457d8b8fc6b0f17455\"></p>\n<p><br></p>\n<p data-pid=\"laTUQi3r\">看着他信誓重诺怀揣噬血珠，看着他砍下那黑节竹，转瞬成长。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-287de95ec109639407e9e09a5718d420_720w.jpeg?source=b1748391?rss\" data-rawwidth=\"1036\" data-rawheight=\"582\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-287de95ec109639407e9e09a5718d420\" data-watermark-src=\"v2-aa9d6c589e6565c5d6573fa3a7fa80fd\" data-private-watermark-src=\"v2-d7be219b605ad8d131a24db2e78e5e4b\"></p>\n<p data-pid=\"J1bOplk3\">好似时光直接掠过了眼前。</p>\n<p data-pid=\"1rXnwAyG\">草庙村那一夜直接改变了这个叫张小凡的命运，身处其中时，诛仙的每一个角色的未来展开对于他们而言都是未知的。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-fb2234bad21f6e3ad73fc0edab71af58_720w.jpeg?source=b1748391?rss\" data-rawwidth=\"1036\" data-rawheight=\"582\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-fb2234bad21f6e3ad73fc0edab71af58\" data-watermark-src=\"v2-66af33a0024efa15ad8fbf412c4fb8cf\" data-private-watermark-src=\"v2-d5371266323efd4c79bf5786c4b2748e\"></p>\n<p data-pid=\"6jTEcdZ7\">就如普智不会料到张小凡留下了噬血珠，更不会料到小凡因此获得摄魂。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b056d5cc2d8cbad17c8d55ebdaf1fa8e_720w.jpeg?source=b1748391?rss\" data-rawwidth=\"1036\" data-rawheight=\"582\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-b056d5cc2d8cbad17c8d55ebdaf1fa8e\" data-watermark-src=\"v2-ab3a0c2e3493c9e48735447066ab84fe\" data-private-watermark-src=\"v2-f31c43cf8a6354c6d4e8e9a7c9329f38\"></p>\n<p><br></p>\n<p data-pid=\"zLBm7KQ2\">而张小凡也定不会料到自己有朝一日，会从诛仙剑阵下生还，并叛出青云。</p>\n<p data-pid=\"6G7C4ibR\">而同样被草庙村改变的还有我。</p>\n<p data-pid=\"RInoG4PV\">就如同草庙村之于张小凡，小凡之于诛仙，这些脱胎于自己笔下文字的鲜活生命，将独自走向属于他们的时空，走向热血依在的每位观众心里。</p>\n<p data-pid=\"elIv4OQM\">诛仙之于我，是我面对莫大未知的锚点。</p>\n<p data-pid=\"J1NgmxSP\">跳出原著作者身份，一个作品能够全线改编，是行业对于这个IP的充分肯定。</p>\n<p data-pid=\"JXFvqAZq\">对于我个人而言，一代人有一代人的青春回忆，能够横跨二十年时光陪伴大家成长是《诛仙》的荣幸，同样也是我个人的荣幸。</p>\n<p data-pid=\"A7YA-MF9\">还望大家能够多多支持《诛仙》动画！</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/xiao-ding-52-70?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">萧鼎</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/546526862/answer/2604929575?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">121 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/544097064?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">国产动画《诛仙》定档，你有哪些期待？</a><br><a href=\"http://www.zhihu.com/question/544443160?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《诛仙》动画定档，对此你有何期待？</a><br>\n","link":"http://www.zhihu.com/question/546526862/answer/2604929575?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"国家新闻出版署发布 8 月国产网络游戏审批信息，共 69 款游戏获批。还有哪些信息值得关注？","date":"2022-08-02 03:20:03","description":"\n<p data-pid=\"KGfDHD4m\">《谍：惊蛰》，我们的。</p>\n<p data-pid=\"6Xp1ZfuH\">整整三年，百味杂陈，一言难尽。</p>\n<p data-pid=\"x7lxq0jr\">比起8月审批列表上许多榜上有名的产品，惊蛰从题材到审批过程都不是很“太平”。民国，谍战，两个关键字达成了“重点审批”成就，至此开启困难模式——巨大的文字量、高昂的审核和自查成本。</p>\n<p data-pid=\"tmdNDNke\">因此，我至今怀念每一个埋头修改所有的“杀”和“死”的日子。我、策划、文案、运营，每个礼拜四一起钻进1940年代的上海，逐段逐句抠字眼，帮助主角陈山，这个上海街头的小混混，戒掉了烟和酒，成为新时代的文明青年。</p>\n<p data-pid=\"V7jaa6DT\">而不远的未来，游戏上线后，我想也鲜有人会知道，曾有这么一支玩家注定无法看见的小队伍，在上海滩经历了一场不逊于陈山所经历的血雨腥风。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-fe7da05f7c72dbc63cce282e5be61e00_720w.jpg?source=b1748391?rss\" data-caption=\"谍：惊蛰\" data-size=\"normal\" data-rawwidth=\"1240\" data-rawheight=\"1000\" data-watermark=\"watermark\" data-original-src=\"v2-fe7da05f7c72dbc63cce282e5be61e00\" data-watermark-src=\"v2-bd94b51e3b1f1f306a49c93af8d2411d\" data-private-watermark-src=\"v2-5c5588e2bfc41fc148dc84e44022dc7f\"></p>\n<p data-pid=\"uyibjCtC\">说说惊蛰的事吧。</p>\n<p data-pid=\"QDg5xXy4\">时间线拉回到2018年，我机缘巧合结识了《麻雀》的编剧海飞老师。</p>\n<p data-pid=\"GOjC84Lr\"><b>那一年5月</b>，我们在北京见了一面，他为了给我讲述故事创作技巧，起笔在餐巾纸上画了一张“教学示意”。至此，开启了我跟随他学习故事创作的漫长旅途。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-7092ba828e9026f1e27637cdfcad5bc8_720w.jpg?source=b1748391?rss\" data-caption=\"“教学示意图”\" data-size=\"normal\" data-rawwidth=\"1386\" data-rawheight=\"780\" data-watermark=\"watermark\" data-original-src=\"v2-7092ba828e9026f1e27637cdfcad5bc8\" data-watermark-src=\"v2-bb5e7623cb8d0fe94c14be3b8047e9a3\" data-private-watermark-src=\"v2-55c9789a42293d5f0bda6346f6392291\"></p>\n<p data-pid=\"-rjESw_e\"><b>2019年</b>，我厚着脸皮向他签下小说《惊蛰》的游戏改编权，我认为这会是一场“纯文学”与“独立游戏”的碰撞。这对当时一个仅有5员的小团队而言，足够令人雀跃。</p>\n<p data-pid=\"3NoT5Psy\"><b>2020年</b>，《谍：惊蛰》有幸获得腾讯GWB手游赛区银奖。改版号包，等版号。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-8016b3444e08915acc57a0a61758305d_720w.jpg?source=b1748391?rss\" data-caption=\"2020GWB\" data-size=\"normal\" data-rawwidth=\"1170\" data-rawheight=\"621\" data-watermark=\"watermark\" data-original-src=\"v2-8016b3444e08915acc57a0a61758305d\" data-watermark-src=\"v2-bba5fd2fb2e19bca60b5d457bc89a3f5\" data-private-watermark-src=\"v2-ff2cb0b10b0ef386628be66da2feb731\"></p>\n<p data-pid=\"zxB7-gnE\"><b>2021年</b>，腾讯极光计划新游曝光，《谍：惊蛰》在列。业内媒体也给了相关报导。</p>\n<a href=\"http://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/1OGN9kAoosdTzmzATguvLA\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-bfdac42694a43c033c4562e62369186a_qhd.jpg?source=b1748391\" data-image-width=\"927\" data-image-height=\"395\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">极光计划5款新游发布，聚焦手游细分品类新方向</a><a href=\"http://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/_ZtCSSNU_jPmig2UyK4kaQ\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-524faa04e2e5f4208090374faa878b0c_qhd.jpg?source=b1748391\" data-image-width=\"1080\" data-image-height=\"463\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《谍：惊蛰》制作人：一部小说改编的谍战独立游戏，一次将爱好融入游戏创作的思考</a><a href=\"http://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/4i3NFqwCZxgPRRrZ7SNsIA\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-3cfcba268e3b30c2c790d1aceaa8b823_qhd.jpg?source=b1748391\" data-image-width=\"1237\" data-image-height=\"527\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">一年时间过去了，那些赛事中脱颖而出的游戏究竟近况如何？</a><p data-pid=\"AGB2aenV\">改版号包，等版号。</p>\n<p data-pid=\"aFHbRCLr\"><b>2022年</b>，改版号包，等版号。</p>\n<p data-pid=\"XIgiMbRP\">一直到昨天。</p>\n<hr>\n<p data-pid=\"cHaOzffK\">讲起来好像还蛮平淡的，不过又是一个“开发一年半，版号等三年”的故事。</p>\n<p data-pid=\"bqrwLXga\">但在《惊蛰》之外，版号对我们的影响远不止于此。</p>\n<p data-pid=\"kgt2Z9Hh\">2018我们开发了“某物语”，代理给某司。19年双12，iOS首发，拿过几次苹果推荐。两个月后苹果宣布响应版号政策，我们不得已下架至今，版号进程杳无音信。去年，被发行商告知其运营团队调整，要求终止合同，并拒绝支付iOS的上线费用，从而引发了一场剪不断理还乱的纷争。今年，其商务部门（据说）全员调动，致使游戏在长达半年的时间里，陷入到了无法上线也无法拿回的僵局。</p>\n<p><img src=\"https://pica.zhimg.com/v2-f927f5d05a2ead9b11469b3b614f291f_720w.jpg?source=b1748391?rss\" data-caption=\"今年4月的沟通\" data-size=\"normal\" data-rawwidth=\"986\" data-rawheight=\"1411\" data-watermark=\"watermark\" data-original-src=\"v2-f927f5d05a2ead9b11469b3b614f291f\" data-watermark-src=\"v2-327cd36291efc5c3371e76ade94a44a1\" data-private-watermark-src=\"v2-e3470a955f693d67940334658829cf9a\"></p>\n<p data-pid=\"k036txqp\">2019年，出于对故事的热情而动工的“AVG工厂”系列，因为审批难度，不得已暂告一段落，停滞不前。</p>\n<p data-pid=\"D9J9Wbiz\">2020年，惊蛰，惊蛰，惊蛰。</p>\n<p data-pid=\"mETlTqqn\">2021年初，开启《三秋食肆》版号办理的漫长征程，至今仍在等待。</p>\n<p><img src=\"https://pica.zhimg.com/v2-f7d99b04e6e6074c607bd5921ac913e8_720w.jpg?source=b1748391?rss\" data-caption=\"三秋食肆\" data-size=\"normal\" data-rawwidth=\"1230\" data-rawheight=\"1196\" data-watermark=\"watermark\" data-original-src=\"v2-f7d99b04e6e6074c607bd5921ac913e8\" data-watermark-src=\"v2-dd05cbdc7b545115296919565cb7c5d3\" data-private-watermark-src=\"v2-538ba4ba6a9c45e2bdbbb0386aeb092f\"></p>\n<p data-pid=\"NoF_Cmj3\">2022年，“AVG工厂”同样等待了两年版号的《匿名爱人》，不得已，iOS上线新马地区。没有用户，没能回血。</p>\n<p data-pid=\"BsXfqw0G\">上周，为了能如期给大家发工资绞尽脑汁。</p>\n<hr>\n<p data-pid=\"fLBK9_LF\">再讲一件挺好玩的事儿。</p>\n<p data-pid=\"gGlzbsJI\">早些年手游版号政策刚出台，代理满天飞，隔三差五有人找我问，有无版号软著代办需求，动辄宣称加急包过。</p>\n<p data-pid=\"eCbW_SFI\">前两年，版号审批的进程总是走走停停的，那阵子版号贩子很是猖獗，老打电话联系我问这个版号出不出，某某版号买不买。</p>\n<p data-pid=\"v0OfWJ_1\">当然现在更猖獗，都是直接问，公司卖不卖，或者某某版号连同公司打包待售，老板有没有意向。</p>\n<hr>\n<p data-pid=\"GkoW6oup\">不说废话啦，最后还是想感谢一些人吧，在没有版号的日子里给了我光。</p>\n<p data-pid=\"kM1M1W3V\">一个是海飞老师，良师益友，一直在帮我，并且无比包容着我的拖稿“恶习”。对此，我怀着深深的惭愧和感激。以至于后来团队里多了几位文案策划，每每遇到进度拖延的时候，我都认为是我“作恶多端的反噬”，或者“因果报应”。</p>\n<p data-pid=\"LQyMdpwU\">一个是高老师，投资人，不计回报地支持，最苦逼的时候和他在山里一蹲蹲一天，管我一天伙食费，拿理想做柴，烧毁所有的emo。</p>\n<p data-pid=\"zpcvDqLJ\">一个是搭档，从始至终，坚定不移。一起经历太多事啦，尽在不言中吧。</p>\n<p data-pid=\"XwSROPaB\">当然，还有工作室的大家，每一个人。</p>\n<p data-pid=\"ZpUezsIm\">发不出工资的时候，项目组依然稳定运作着。有天我想就此事跟一位实习的小伙伴解释一下，她听完只对我说，加油。</p>\n<p data-pid=\"9VFUWYCQ\">另一个晚上，不约而同的好几个人留言告诉我他们有信心，我说我也是。</p>\n<p data-pid=\"yQogYril\">甚至，平时老哭穷的主美不知道怎么想的，拿了两万块钱（她前两年买了房，一个月房贷要还1W5，上个月没发工资）。我没要，我都不知道拿了这个钱，她后面要怎么办。</p>\n<p data-pid=\"MbF1J8_j\">说到底，我们不算是特别出彩的一个团队，资质平庸，能力有限，但还是遵循着一些很质朴的逻辑在这个行业耕作，比如，做游戏，就是要给人玩的。</p>\n<hr>\n<p data-pid=\"HFHpYUtl\">好在，事情正在好转，就在刚刚过去的短短半个多月里。</p>\n<p data-pid=\"8Wh_tFsx\">7月12日，《匿名爱人》破天荒地下版号了。</p>\n<p><img src=\"https://picx.zhimg.com/v2-7b1577cc75ee284ea47307f291be8b97_720w.jpg?source=b1748391?rss\" data-caption=\"匿名爱人\" data-size=\"normal\" data-rawwidth=\"1252\" data-rawheight=\"1016\" data-watermark=\"watermark\" data-original-src=\"v2-7b1577cc75ee284ea47307f291be8b97\" data-watermark-src=\"v2-fa1821973de8a20e660c81385c8e35bb\" data-private-watermark-src=\"v2-f2a590f70a1b3e2f5a5dacfe88f5daf0\"></p>\n<p data-pid=\"XKnSORLs\">7月27日，《三秋食肆》获得腾讯GWB独立游戏大奖赛最佳叙事提名。</p>\n<p data-pid=\"EccwlZlS\">同一天，“某物语”的纠葛终于和平解决，那一刻，我可以爱所有人。</p>\n<p><img src=\"https://pica.zhimg.com/v2-8ad3fc6718bce53d574af9059129677a_720w.jpg?source=b1748391?rss\" data-caption=\"“某物语”的圆满收场\" data-size=\"normal\" data-rawwidth=\"1009\" data-rawheight=\"1939\" data-watermark=\"watermark\" data-original-src=\"v2-8ad3fc6718bce53d574af9059129677a\" data-watermark-src=\"v2-e80067169075045173dc97300c4ae591\" data-private-watermark-src=\"v2-d349d849da8d93a217e22c2604d0f3ea\"></p>\n<p data-pid=\"qfhIw_eb\">8月1日，如大家知道的那样，《谍：惊蛰》传来好消息。</p>\n<p data-pid=\"WhmNjY0O\">我把惊蛰的消息分享给海飞老师，海飞老师说，会好起来的。</p>\n<p data-pid=\"GWsf3lHU\">我说对，但也接受所有的不好，做好我们该做的，让所有的事流向它们该去的位置。</p>\n<p data-pid=\"YgTVwbci\">他说，很对。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/tang-xiaozha?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">糖小渣</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/546439183/answer/2604844123?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">83 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/537055601?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">国家新闻出版署发布 6 月国产网络游戏审批信息，具体有哪些游戏获批？</a><br><a href=\"http://www.zhihu.com/question/537055503?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">国家新闻出版署发布 6 月国产网络游戏审批信息，其中都有哪些信息值得关注？</a><br>\n","link":"http://www.zhihu.com/question/546439183/answer/2604844123?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"哪些人改变了汽车发展的历史？","date":"2022-08-02 02:49:58","description":"\n<p data-pid=\"vxOUfYDG\">说到改变汽车发展的人，有一位虽然对整个产业链产生了近百年的影响，但其实并不为众人所熟知。从马车到汽车，他不仅创立了当时最大的汽车集团联合了众多品牌，他的创新和远见还引领了汽车行业100多年的发展，很多理念拿到今天依然不过时。这位不那么被人熟知的创业家和企业家，就是通用汽车集团的创始人威廉（比利）杜兰特。</p>\n<p data-pid=\"iRvXfp-M\">他不仅加快了当时简单的小作坊式汽车生产的工业化，同时他个人对汽车行业的执着、超前的理解以及远见和雄心也是近百年来少见的。</p>\n<p><img src=\"https://pica.zhimg.com/v2-4e64173dfa58ceb016862209c1445fb1_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1150\" data-rawheight=\"644\" data-watermark=\"original\" data-original-src=\"v2-4e64173dfa58ceb016862209c1445fb1\" data-watermark-src=\"v2-955e1d3f03bacb6744c8cae18913741a\" data-private-watermark-src=\"v2-3d44e94bbb00b19f29704d6d148b60ed\"></p>\n<h2><b>基于对汽车行业的超前理解而坚持己见</b></h2>\n<p data-pid=\"hMq-i89J\">历史虽然不会重演，但总是惊人的相似。在1900年前后的杜兰特时代，燃油车替代马车就和10年前电动车替代燃油车一样不为大众所广泛接受。相对比马车，燃油车既不舒适也不清洁，使用起来也不方便。比如当时的燃油车都要手摇启动，对女性尤其不友好。</p>\n<p data-pid=\"fXDxi9po\">作为马车行业的领先创业者最初杜兰特并不看好燃油车，但是很快他就洞察到燃油车的发展潜力和替代马车的苗头。1904年，他以进入别克汽车的管理层重整别克汽车为契机，开始了整个行业的整合之路。</p>\n<p><img src=\"https://picx.zhimg.com/v2-540d604cbfac16518e616b9b4adc7e19_720w.png?source=b1748391?rss\" data-caption=\"杜兰特乘坐别克Model F\" data-size=\"normal\" data-rawwidth=\"1103\" data-rawheight=\"719\" data-watermark=\"original\" data-original-src=\"v2-540d604cbfac16518e616b9b4adc7e19\" data-watermark-src=\"v2-fb850bef66fbe2b236c1560622479a6a\" data-private-watermark-src=\"v2-e8d9c072b07142b20e67472ff303bed3\"></p>\n<p data-pid=\"YKvtq1er\">在杜兰特创立通用汽车之前全美有几百家汽车公司，都是小作坊式的生产模式，研发和生产效率低且成本高，这和2010年前后的电动车行业乱象丛生非常相似。杜兰特决心通过品牌收购整合的方式快速建立一个汽车集团。起初这个理念因为收购条件和经营理念等等难以达成共识曾经遭遇多个品牌的谈判失败，包括当时的福特汽车也曾经是收购谈判桌上的一员。但杜兰特并没有就此放弃，一次又一次在各地谈判一一击破，杜兰特先在1908年整合了奥兹莫比尔为代表的13家汽车公司和10家汽车零部件供应商，之后又先后收购了凯迪拉克、奥克兰汽车和之后的雪佛兰。建立通用汽车之后，杜兰特一方面实现了不同品牌之间技术、设计和生产的部分共享，由此提高了效率；另一方面通过不同品牌的差异化特点进行差异化营销和设计，占领不同的细分市场。比如卡迪拉克当时主打的就是高端市场，在1910年凯迪拉克成为第一个具备全封闭乘员舱的品牌。两年之后的1912年，在杜兰特的带领之下凯迪拉克发布了Model Thirty，成为第一个使用电子启动机和点火装置的车型，让发动机的启动过程变得非常简单和优雅，对于女性用户来说尤其友好。<sup data-text=\"1\" data-url=\"https://www.plazacadillac.com/History-of-Cadillac\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\">[1]</sup></p>\n<p><img src=\"https://pic1.zhimg.com/v2-eeda469f8c4f559034a1c6fd46cf7685_720w.png?source=b1748391?rss\" data-caption=\"凯迪拉克Model 30\" data-size=\"normal\" data-rawwidth=\"1172\" data-rawheight=\"782\" data-watermark=\"original\" data-original-src=\"v2-eeda469f8c4f559034a1c6fd46cf7685\" data-watermark-src=\"v2-09bbf17c54cb15d95501aa88e8728316\" data-private-watermark-src=\"v2-b15470b6ef2b0fd8fcce69e094850feb\"></p>\n<p data-pid=\"3oUJHszL\"><br> 杜兰特在最初收购的马车公司就坚持关键零部件自产，到了汽车时代更是坚持了同样的理念，所要达成的是打通全产业链的雄心。<span class=\"nolink\">他不仅在</span>1908年就成立了AC Spark Plug Company来生产各种和发动机运行相关的关键零部件， 还在1918年收购了United Motors，后者是各种机械零部件的供应商。当时不少汽车集团还只是纯粹意义上的“组装厂”。<sup data-text=\"2\" data-url=\"https://mycompanies.fandom.com/wiki/AC_Spark_Plug_Company，https://youtu.be/TJm6maXePL\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"2\">[2]</sup></p>\n<p data-pid=\"xnR9l2w3\">直到今日通用集团依旧坚持关键技术的自研和制造，包括之前核心的发动机和变速箱以及现在的辅助自动驾驶系统和新能源驱动系统。</p>\n<p data-pid=\"Or-JO_HR\">通过品牌和联合和差异化战略在不同细分市场竞争，通用汽车快速形成了形成了巨大的效率和市场优势，杜兰特在产业决策上从来没有迟疑过。</p>\n<p><br></p>\n<h2><b>不屈不挠终生创业</b></h2>\n<p data-pid=\"noXgFy_9\">杜兰特并不仅仅创立了通用汽车，他的整个职业生涯都贯穿着洞察不同行业先机的远见和成为行业霸主的雄心。</p>\n<p data-pid=\"g9o7RzS2\">杜兰特在1886年乘坐朋友的马车出行，就看到马车普及的商机，创立了自己的弗林特马车公司。他凭借自己出色的销售经验和才华，马车公司的业务突飞猛进。当时他的马车公司可以同时生产Eclipse、Standard、Victoria、Moline和Diamond等众多品牌。看到了行业发展的潜力，杜兰特也在快速整合并购以求扩大规模打通产业链。南到亚特兰大，北到多伦多，杜兰特不断收购其它马车生产商。经过15年，他将最初投入的2000美元变成了200万美元，他的马车业务也走向了世界，成为当时美国最大的马车制造商。<sup data-text=\"3\" data-url=\"https://www.zhihu.com/question/537851747/answer/2538302117\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"3\">[3]</sup></p>\n<p><img src=\"https://pic1.zhimg.com/v2-e160859e5e95e15e35a1e47fa7c9cd8c_720w.png?source=b1748391?rss\" data-caption=\"杜兰特马车公司产品\" data-size=\"normal\" data-rawwidth=\"1171\" data-rawheight=\"668\" data-watermark=\"original\" data-original-src=\"v2-e160859e5e95e15e35a1e47fa7c9cd8c\" data-watermark-src=\"v2-e275f74608cd29fe613d5d5c48f07609\" data-private-watermark-src=\"v2-babb403ddc61a2b4cdb549980d904cc5\"></p>\n<p data-pid=\"GboMUWxo\">在开始汽车行业的创业之后，杜兰特可以说完美复制了马车行业的成功。借助参与别克公司管理的契机，同时应用之前运营马车公司的资源和销售技巧，杜兰特通过整合品牌很快打造了当时全球最大的汽车集团：通用汽车。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-5995df844e6456da9e6c24fa8c506b6d_720w.png?source=b1748391?rss\" data-caption=\"杜兰特打造的通用汽车\" data-size=\"normal\" data-rawwidth=\"1071\" data-rawheight=\"725\" data-watermark=\"original\" data-original-src=\"v2-5995df844e6456da9e6c24fa8c506b6d\" data-watermark-src=\"v2-a8adba9def8d582678213e1f3763bfde\" data-private-watermark-src=\"v2-4f0895e378562dd4a18d88718c3a6489\" data-tags=\"porn\"></p>\n<p data-pid=\"Ejz9AsEH\">杜兰特在通用创业历程并不是一帆风顺的。到了1911年，通用汽车公司由于扩张太快，加之下属各企业是各自独立的经营单位，整个集团开始出现亏损。一些投资者认为杜兰特的大肆收购行为过于鲁莽，并将他赶下台。但是杜兰特并没有因此放弃进一步发展通用汽车的雄心。</p>\n<p data-pid=\"usIOWFoV\">他从朋友那里筹集资金和技术，通过与路易斯·雪佛兰（赛车手，也是自学成才的汽车工程师）的合作，他开始了第三次创业。1911年11月3日，两人携手创立雪佛兰汽车，相继推出了Classic Six，Royal Mail Roadster等车型。1915年，杜兰特向福特汽车发起挑战。他洞察到了市场需求，结合旗下汽车的优点推出了雪佛兰490，直接对标福特T型车。通过对市场的精准判断和高超的销售技巧，雪佛兰的销量在一年时间里从年销1万多台飙升到了7万多台，实现了质的飞跃。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-80e7bf3088689fe768c231f96e6cd300_720w.png?source=b1748391?rss\" data-caption=\"雪佛兰490车型\" data-size=\"normal\" data-rawwidth=\"1197\" data-rawheight=\"640\" data-watermark=\"original\" data-original-src=\"v2-80e7bf3088689fe768c231f96e6cd300\" data-watermark-src=\"v2-eaf85c90a2aa5157a2e0ec684bfec676\" data-private-watermark-src=\"v2-19f43fbabbf670b05c36db9ba723fe4e\"></p>\n<p data-pid=\"Aio0xesn\">雪佛兰品牌的成功并没有让杜兰特放弃重回通用汽车的目标。他通过使用大量雪佛兰股票换取通用汽车股票的方式拥有了这两家公司的控股权，并将雪佛兰被收入通用名下，开启了通用汽车的全新时代。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-2d2678d83d46c3fdda7839bf6ba2c6c6_720w.png?source=b1748391?rss\" data-caption=\"赛车手路易斯·雪佛兰与杜兰特\" data-size=\"normal\" data-rawwidth=\"1144\" data-rawheight=\"627\" data-watermark=\"original\" data-original-src=\"v2-2d2678d83d46c3fdda7839bf6ba2c6c6\" data-watermark-src=\"v2-26869802510689312f8abe12905e4014\" data-private-watermark-src=\"v2-a4b4928d416a793b1955a879822c3cad\"></p>\n<p><br></p>\n<p data-pid=\"7PLMnoFp\">虽然杜兰特创立了通用汽车，但是因为掌管通用的时间前后加起来只有6-7年的时间，所以并不像其他行业领袖被广为人知。但无论是他创立的通用汽车的勇气和果敢，还是他超前的汽车行业经营理念都至今影响着行业的发展。直到今年，我们依旧将平台化、品牌差异化、自主化和供应链整合作为潮流挂在嘴边，这些理念其实在100多年前就被杜兰特提出，并且作为通用汽车的文化被推广延续了100年，跨越了整个燃油车时代进入电动化时代。而杜兰特本人在通用创造的，不仅仅是商业上的成功，也通过三次重要的创业经历展现了他独有的人格魅力：一旦抓住商机就会坚持己见锲而不舍，以及面对任何失败不屈不挠，打破传统终生创业的精神。<br><br><br></p>\n<p><br><br></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/one-kebab?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">一个kebab</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/543080732/answer/2603213673?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">118 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/515200393?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">哪些人改变了历史？哪些人是历史的选择？</a><br><a href=\"http://www.zhihu.com/question/542166303?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">汽车行业经历了哪些历史变革？</a><br>\n","link":"http://www.zhihu.com/question/543080732/answer/2603213673?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"哪些人改变了汽车发展的历史？","date":"2022-08-02 02:49:46","description":"\n<p data-pid=\"dAIZWQTB\">百年汽车历史经历了多次行业变革，彻底改变了人类社会面貌。如此广阔宏伟的汽车史，要问哪些人产生过重大影响，那真是太多了，一下子不知道从谁讲起。</p>\n<p data-pid=\"WMaea4lt\">有一个技巧，可以帮我们快速锁定那些改变行业进程的人 —— <b>观察全球汽车制造商前十名，找到那些以创始人命名的公司，例如</b>：</p>\n<ul>\n<li data-pid=\"T1rw78j3\">\n<b>丰田汽车：</b>丰田喜一郎(1894-1952)</li>\n<li data-pid=\"BdaUaf3u\">\n<b>福特汽车：</b>亨利·福特(1863-1947)</li>\n<li data-pid=\"-EgfNLvr\">\n<b>本田汽车：</b>本田宗一郎(1906-1991)</li>\n<li data-pid=\"KyRRKP2O\">\n<b>梅赛德斯奔驰戴姆勒集团：</b>卡尔·本茨(1844-1929)、戈特利·布戴姆勒(1834-1900)</li>\n<li data-pid=\"QgZj6DTB\">\n<b>标致雪铁龙：</b>阿尔芒·标致(1849-1915)、安德烈·雪铁龙(1878-1935)</li>\n</ul>\n<p><img src=\"https://pic1.zhimg.com/v2-0e5f0667f7729b63c29ea2d9391895a7_720w.jpg?source=b1748391?rss\" data-caption=\"以创始人名字命名企业：丰田喜一郎、亨利·福特、本田宗一郎、卡尔·本茨、阿尔芒·标致\" data-size=\"normal\" data-rawwidth=\"811\" data-rawheight=\"620\" data-watermark=\"original\" data-original-src=\"v2-0e5f0667f7729b63c29ea2d9391895a7\" data-watermark-src=\"v2-d3b013ec219a4bcfcdf24f32622ee36c\" data-private-watermark-src=\"v2-99529120f2ef629f0bd7cf1de70126cd\"></p>\n<p data-pid=\"7UbGEprQ\">这些人，哪一个不是响当当的人物？就算不是汽车爱好者，你应该对他们的大名也有所耳闻吧？我就不浪费笔墨，重复他们的传奇事迹了。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-c169ca2a7b97abb28746175116b369b1_720w.jpg?source=b1748391?rss\" data-caption=\"大众旗下品牌的创始人埃托里·布加迪、费迪南德.保时捷、W.O.宾利\" data-size=\"normal\" data-rawwidth=\"770\" data-rawheight=\"304\" data-watermark=\"original\" data-original-src=\"v2-c169ca2a7b97abb28746175116b369b1\" data-watermark-src=\"v2-a5fdb425bec6de802493543faff4a899\" data-private-watermark-src=\"v2-70cd952c19939b27f4e37d1bdd0857fd\"></p>\n<p data-pid=\"j_ep_yvC\">这些汽车巨头中，通用汽车(General Motors Company)的命名显得与众不同 —— <b>既没有「通用」牌汽车，也很少有人知道它的创始人是谁</b>。</p>\n<p data-pid=\"VOdmWBoi\">今天我们就来讲讲通用汽车创始人的故事 —— 威廉（比利）杜兰特（William “Billy” Durant）.</p>\n<p><img src=\"https://pica.zhimg.com/v2-adbb8c26c343366ec3f22544c27b1727_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"361\" data-rawheight=\"445\" data-watermark=\"original\" data-original-src=\"v2-adbb8c26c343366ec3f22544c27b1727\" data-watermark-src=\"v2-d5fd3168111e4d79a9a059796a4107f3\" data-private-watermark-src=\"v2-59e55a03578547ed33e377abb808a933\"></p>\n<p data-pid=\"Xng0SAo0\">杜兰特出生于1861年，外公是木材行业巨头，也是密歇根州的州长，地位很高也不差钱。这位出身显赫的少年，偏偏长得也很帅。按咱们世俗的想法，这位公子哥将远离困难挫折，享尽荣华富贵、拥有令人艳羡的人生。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-bb9e7fc9823130e28922f5686effef04_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"334\" data-rawheight=\"423\" data-watermark=\"original\" data-original-src=\"v2-bb9e7fc9823130e28922f5686effef04\" data-watermark-src=\"v2-08db979f4b6abf9f86f6f09c750b9e86\" data-private-watermark-src=\"v2-94ba2bbd0f174d8ff35370f914ba503b\"></p>\n<p data-pid=\"xwUVLjyj\">不过天生爱折腾的杜兰特17岁便离开学校，从卖木材到卖药品、雪茄、保险，积累了最初的财富，于1886年贷款2000美元创立马车制造公司。凭借过人的商业洞察与经营能力，杜兰特成为美国最大的马车生产商，年销售额超过200万美元。</p>\n<p data-pid=\"GMCNd41f\"><b>至此，杜兰特一帆风顺。</b></p>\n<p data-pid=\"vvu329U6\">无论从哪个角度来看，此时他已拥有完美的人生。1904年，他却做出了一个让亲朋好友难以理解的举动 —— 从马车行业，跨界进入汽车行业！</p>\n<p data-pid=\"r0Dc7kwK\">要知道，那时候内燃机汽车技术落后、性能低劣，怎么看都不像是一个靠谱的行业。<b>人们站在1904年对内燃机汽车行业的预期，与站在2004年对电动汽车行业的预期是一致的：小孩儿唱歌 —— 没谱</b>！</p>\n<p data-pid=\"9jzv3svj\">1904年，杜兰特用造马车赚来的钱，以增资到50万美元的方式收购负债累累的别克汽车。这让人想起2004年的马斯克，他用卖掉Paypal赚到的钱，以投资630万美元的方式成为特斯拉董事长。</p>\n<p data-pid=\"g6gbcSyh\"><b>共同点：大家都觉得这俩傻子的钱肯定打水漂了！ </b></p>\n<p><img src=\"https://picx.zhimg.com/v2-4981990e301edbe3c188ca02a502d6d9_720w.jpg?source=b1748391?rss\" data-caption=\"左：20世纪初进入汽车行业的杜兰特 图片来源[2] 右：21世纪初进入电动汽车行业的马斯克\" data-size=\"normal\" data-rawwidth=\"865\" data-rawheight=\"337\" data-watermark=\"original\" data-original-src=\"v2-4981990e301edbe3c188ca02a502d6d9\" data-watermark-src=\"v2-6124474c769c91f2f832ddb4d4ff39d2\" data-private-watermark-src=\"v2-268bfe58fe4bb5dbe77b3c81debdeea6\"></p>\n<p data-pid=\"FHqIXamM\">这还不是全部，后来两人都冒着一贫如洗的风险，将全部身家投到公司中。<b>杜兰特与马斯克，两人的冒险冲动如此相像，他们没想过自己会一无所有吗</b>？</p>\n<p data-pid=\"PuNxSOFE\">我们无从知晓。<b>但是，他们这类人身上有一种无畏精神，即使面对巨大风险也坚信自己的判断，一往无前地向着目标前行</b><sup data-text=\"贪婪的多巴胺. 丹尼尔·利伯曼. 2021.9\" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\">[1]</sup><b>。</b>从杜兰特第一次乘坐别克汽车开始，他便相信在未来的某一天，汽车会替代马车，成为主流交通工具，所以即使自己的马车事业会受到冲击，冒着会失去一切的风险，他也义无反顾地投身汽车领域。</p>\n<p data-pid=\"9MQcVOQR\">即使面对濒临破产的危机时，他们也会凭着自己的一腔热血，从负面情绪中脱离出来。马斯克曾在最无助的时候说：「我永远不会放弃，除非我被困住或死去」。杜兰特也说过类似的话：<b>「忘掉错误，忘掉失败，忘掉一切，除了现在要做的，然后去做吧」</b><sup data-text=\"\" data-url=\"https://zhuanlan.zhihu.com/p/32461191\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"2\">[2]</sup>。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4379f33c91b96ecd3a713883c9a4b601_720w.jpg?source=b1748391?rss\" data-caption=\"左：杜兰特 右：马斯克\" data-size=\"normal\" data-rawwidth=\"628\" data-rawheight=\"375\" data-watermark=\"original\" data-original-src=\"v2-4379f33c91b96ecd3a713883c9a4b601\" data-watermark-src=\"v2-7e7b0df76841f9538b637792b28e828e\" data-private-watermark-src=\"v2-709ed30e2722d47ba0f0f00437693453\" data-tags=\"politic\"></p>\n<p data-pid=\"G6sDz1j7\">正是这份决绝，让杜兰特与马斯克敢于冒着巨大风险，投入到新的事业中！</p>\n<p data-pid=\"tibFabdd\">接手别克汽车后，杜兰特马不停蹄地前往纽约车展，施展销售天赋带回1108辆的订单<sup data-text=\"\" data-url=\"https://zhuanlan.zhihu.com/p/34179206\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"3\">[3]</sup>，是这家公司历史总销量的30倍。</p>\n<p data-pid=\"zktIMYw3\">一下拿了这么多订单，万一生产不出来怎么办？作为一把手的杜兰特是不是有点莽撞？ <b>不，他是想玩一把大的！其实历史上很多企业家也有类似的决策</b></p>\n<p data-pid=\"5xUSta4w\">例如，本田宗一郎1971年在技术人员毫不知情的情况下，高调发布了名为CVCC的发动机技术以大幅降低排放水平<sup data-text=\"大竞赛：未来汽车的全球争霸赛. [美]Levi、Tillemann利维.泰尔曼. 2018.1\" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"4\">[4]</sup>。回到办公室面对满脸疑惑的技术人员，他说：「如果我不先发布出去，你们永远都完成不了这个技术」。</p>\n<p data-pid=\"wxtV_Fm5\">大家并没有将本田宗一郎评价为莽撞，反而赞扬这种「战斗精神」。乔布斯也经常提出看似不可能的要求，带领苹果不断创造奇迹，人们称之为「现实扭曲力场」。</p>\n<p><img src=\"https://pica.zhimg.com/v2-98f42b1158ab8efc1764d991996c9ab4_720w.jpg?source=b1748391?rss\" data-caption=\"左：本田宗一郎 中：乔布斯 右：杜兰特\" data-size=\"normal\" data-rawwidth=\"865\" data-rawheight=\"277\" data-watermark=\"original\" data-original-src=\"v2-98f42b1158ab8efc1764d991996c9ab4\" data-watermark-src=\"v2-ba625b5283dc197114c57a84a783c4bf\" data-private-watermark-src=\"v2-0d025ff062d0bf43f8609f0f726c9d85\"></p>\n<p data-pid=\"4qUPXBrT\"><b>这种冒险进取精神，贯穿了杜兰特的一生</b>：</p>\n<ul>\n<li data-pid=\"SH3kpj0N\">\n<b>1908年</b>：成立通用汽车公司，在创立的前两年买下凯迪拉克和十几家其它公司，并入通用汽车。。</li>\n<li data-pid=\"Bv_aDh-a\">\n<b>1908-1911年</b>：通用汽车在持续扩张过程中出现严重资金缺口，迫使杜兰特向银行家进行巨额借贷。投资者开出的条件极为苛刻，认为是杜兰特的冒险行为导致了亏损，将他第一次赶出通用汽车</li>\n<li data-pid=\"1FaQUG3V\">\n<b>1911-1916年</b>：凭借个人声望，他很快筹得资金，与路易·雪佛兰携手创立了雪佛兰汽车公司并大获成功，杜兰特以换股的方式于1916年重新执掌通用汽车。</li>\n<li data-pid=\"9B8ZjXX4\">\n<b>1916-1920年</b>：持续扩张收购费雪车身公司（Fisher Body）和北极电器（Frigidaire），于1920年再次离开通用。</li>\n<li data-pid=\"_1T7sltx\">1929年股市崩盘损失近10亿美元个人财富，1936年破产。<b>尽管如此，近80岁高龄的杜兰特开设了北弗林特娱乐（North Flint Recreation）保龄球馆和马蹄铁酒吧（Horseshoe Bar），将创业精神贯穿一生</b>。</li>\n</ul>\n<p data-pid=\"DzScuduR\"><b>你可能会质疑，所谓的无畏精神、所谓的果敢与坚毅，最终给杜兰特带来了什么呢？</b>他曾看过世间繁华，但却历尽沧桑，在穷困潦倒中离世；他亲手缔造了伟大的通用汽车公司，但公司却在他的继任者手里日益壮大，走向辉煌。</p>\n<p data-pid=\"eFDsB83k\"><b>从结果来看，杜兰特的精神真的值得歌颂吗</b>？</p>\n<p data-pid=\"15KFA4kZ\">我认为这种以成败论英雄的角度是不公平的。试想，当年马斯克的SpaceX发射火箭多失败一次就会破产，这也会影响到特斯拉Model 3的量产，多米诺骨牌效应甚至会引发大崩盘。<b>如果最终结局是失败，难道马斯克就是热爱冒险的莽撞之徒，而不是无畏向前的英雄了吗</b>？</p>\n<p data-pid=\"KkaoMN5e\">著名学者纳西姆·尼古拉斯·塔勒布在&lt;反脆弱：从不确定性中获益&gt;一书中曾评价<sup data-text=\"反脆弱：从不确定性中获益. 纳西姆·尼古拉斯·塔勒布.\" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"5\">[5]</sup>：<b>「创业通常是果敢与坚毅支撑下的冒险行为，创业企业通常是脆弱的、充满风险的，但却通过创新使全社会远离脆弱」</b>。</p>\n<p data-pid=\"Z40M0rTU\">杜兰特执掌通用汽车期间，大量收购了其他汽车公司。<b>他并不是为了规模而收购，而是基于非凡的商业洞察天赋，观察到购买力与用车需求呈现多元化，才通过收购来实现不同的车型与定价与产业链垂直整合，以产品矩阵来更好地满足消费者的需求</b>。</p>\n<p data-pid=\"PT1re52P\">乍一听你可能觉得有点奇怪，这种多元化思路有什么稀奇的，现在每一家车企不都是这么干的吗？ 是的，放在今天不奇怪，但要放在100年前的美国，在福特T型车一招鲜吃遍天下的时代，这种思想可以说是石破天惊了<sup data-text=\"\" data-url=\"https://zhuanlan.zhihu.com/p/467494134\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"6\">[6]</sup>！</p>\n<p><img src=\"https://picx.zhimg.com/v2-2dd6d7129a003e85c6d0f8e780d2640d_720w.jpg?source=b1748391?rss\" data-caption=\"左：通用的多元化车型 图片来源[6] 右：福特的单一车型 \" data-size=\"normal\" data-rawwidth=\"671\" data-rawheight=\"324\" data-watermark=\"original\" data-original-src=\"v2-2dd6d7129a003e85c6d0f8e780d2640d\" data-watermark-src=\"v2-29cb2f35e2ae495e8e22634ee946db58\" data-private-watermark-src=\"v2-3f4582a12557a802636bf3ca26d8910a\" data-tags=\"politic\"></p>\n<p data-pid=\"5fC_MbVx\">杜兰特在任期间帮助通用汽车收购了别克、凯迪拉克、雪佛兰等多个极有价值的品牌，搭好了「多元化、差异化」车型矩阵的架子，被后来者斯隆发扬光大。</p>\n<p data-pid=\"wpYZFXHx\">多亏了杜兰特的产品哲学，我们在汽车市场上看到的才不是千篇一律的单一车型，而是有数十个品牌、数百个车型任意挑选的多姿多彩的市场。<b>贯穿杜兰特一生的果敢与坚毅，没有给他的家族留下万贯家财，但却给整个汽车行业留下了宝贵的思想遗产！</b></p>\n<p data-pid=\"E9JjxH9J\">无论是发现新大陆的哥伦布，开创智能手机时代的乔布斯，还是创立通用汽车的杜兰特，他们身上都充满了无畏精神。<b>无畏精神并不一定能为冒险者带来持续的成功，但一定可以促进全人类的持续进步。</b></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhangkangkang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">张抗抗</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/543080732/answer/2603213362?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">118 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/515200393?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">哪些人改变了历史？哪些人是历史的选择？</a><br><a href=\"http://www.zhihu.com/question/542166303?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">汽车行业经历了哪些历史变革？</a><br>\n","link":"http://www.zhihu.com/question/543080732/answer/2603213362?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：微信上线视频号「个人专栏」、小米发布米家眼镜相机等","date":"2022-08-02 00:49:42","description":"微软宣布在《我的世界》中重现古城堡，百度快照功能疑似下线等。<a href=\"https://sspai.com/post/74953\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74953"},{"title":"派评 | 近期值得关注的 App","date":"2022-08-01 09:41:49","description":"你可以通过文章目录快速跳转到你感兴趣的内容。如果发现了其它感兴趣的 App 或者关注的话题，也欢迎在评论区和我们进行讨论。<a href=\"https://sspai.com/post/74943\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74943"},{"title":"如何评价 7 月新番动画《彻夜之歌》第三集？","date":"2022-08-01 05:36:22","description":"\n<p data-pid=\"yTC1cDG3\">前三集都是熬夜看的，很符合作品主题（笑</p>\n<p data-pid=\"bTtWA3gp\">第二集的时候还有很多朋友觉得剧情太水，没意思，看完第三集又好了起来，<b>果然还是要有一点修罗场呢</b>。</p>\n<p data-pid=\"1Zkx_tyS\">借这个机会补充一下 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/b6f90d9c52b4b45bd1c2a534f0f8ef8a\" data-hash=\"b6f90d9c52b4b45bd1c2a534f0f8ef8a\" data-hovercard=\"p$b$b6f90d9c52b4b45bd1c2a534f0f8ef8a\">@Anier</a> 回答提到的SHAFT演出风格的话题。</p>\n<a href=\"https://www.zhihu.com/question/541813400/answer/2568407221\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-636af3b1629437ce9de8f5d273b18ad6_qhd.jpg?source=b1748391\" data-image-width=\"2560\" data-image-height=\"1440\" class=\"internal\">如何评价 7 月新番动画《彻夜之歌》第一集？</a><h2>动作只留头尾，剪掉中间状态</h2>\n<p><img src=\"https://picx.zhimg.com/v2-e80c62ea0e731d113ef4320ba9f35886_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1272\" data-rawheight=\"356\" data-watermark=\"original\" data-original-src=\"v2-e80c62ea0e731d113ef4320ba9f35886\" data-watermark-src=\"v2-18d7b1eee3eb89d2f72424bdf78b14ea\" data-private-watermark-src=\"v2-8111c8f3502424d64379744bcb4334e4\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-31390da217f4da8444a088b590a8802d_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1272\" data-rawheight=\"356\" data-watermark=\"original\" data-original-src=\"v2-31390da217f4da8444a088b590a8802d\" data-watermark-src=\"v2-2cf015b6d06693c147893bdb96924961\" data-private-watermark-src=\"v2-9fd2d6b28b94d1287061a90b7dfd4b83\"></p>\n<p data-pid=\"62N_CdBl\">第一集开头的两个例子，都是连续镜头。女主从天台跳下，上一个镜头是迈出一只脚，下一个镜头整个人已经飞出去了，下面这里男主出门也是，上一个镜头刚打开门迈脚，下一个镜头已经出门回头关门了。</p>\n<p data-pid=\"TwD1VUQo\">两处都剪掉了主要的中间运动，这可不是乱剪的，很明显前一个镜头已经给足了信息量，已经通过场景和肢体特写提示你角色要做什么了（比较巧合两处的第一个镜头都是脚的特写），所以下一个镜头直接给角色完成这个动作的状态，过渡是很自然的。</p>\n<p data-pid=\"-RyndOFv\">和我之前写过的本季另一部新番《异世界舅舅》的演出正好形成了有趣的对照。</p>\n<a href=\"https://www.zhihu.com/question/543079040/answer/2582720150\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-620e17c3318ac02ac56811833c13678e_qhd.jpg?source=b1748391\" data-image-width=\"1482\" data-image-height=\"832\" class=\"internal\">如何评价 7 月新番动画《异世界叔叔》第二集？</a><p data-pid=\"o9K8_iXp\">异世界舅舅是在动作完成后去延长静止的状态，在静止中品味余韵和气氛，而《彻夜之歌》是剪掉动作，让镜头连接非常紧凑，节奏感很强，和作品这种pop的氛围融合也非常恰当。两种演出风格截然相反，但都利用了观众的预期和暗示这种底层逻辑，原理上是相通的，可以说是同一颗视觉原理的种子开出不同的花朵。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-c7971673b12cb1cd9ef071721f83a3e2_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1272\" data-rawheight=\"236\" data-watermark=\"original\" data-original-src=\"v2-c7971673b12cb1cd9ef071721f83a3e2\" data-watermark-src=\"v2-30d30431ba06ed6cc29874dbcacd14d9\" data-private-watermark-src=\"v2-468c95a13710e40fb5ddfd89b248b014\"></p>\n<p data-pid=\"kd73IWp_\">再举一个第一话的例子，男主回忆里拒绝女二表白，第一个镜头是两人在教室里面对面的静止的大全景俯拍，第二个镜头接女主跑出画面，动作上第二个镜头开始时女主已经转身一半了，而且和上一个镜头的静止不同，速度很快，这里也是用到了剪掉中间动作的手法。同时前后连接的两个镜头在构图、角度、焦距、光源、前后景的配置等等元素上都明显不同，表现出非常紧凑的拼接感。</p>\n<p data-pid=\"WBiM4m_2\">这就是一种SHAFT演出家常用的镜头连接方法。オトナアニメ的特集《SHAFT超全集！！》（2010年出版）里就进行过分析，材料是用的当年最火的《化物语》：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-daef02a0e940f4d05815d9b190ec2717_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2268\" data-rawheight=\"3024\" data-watermark=\"original\" data-original-src=\"v2-daef02a0e940f4d05815d9b190ec2717\" data-watermark-src=\"v2-077de38de55b95a347c24e9ee8d5d7d2\" data-private-watermark-src=\"v2-0e816a254fcf2e1bf420669744c4d046\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-a6539818e35d016fb280c1cb7132ef18_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3024\" data-rawheight=\"4032\" data-watermark=\"original\" data-original-src=\"v2-a6539818e35d016fb280c1cb7132ef18\" data-watermark-src=\"v2-6073810ef924af2870e92343ddd4df00\" data-private-watermark-src=\"v2-d5de9f6c73bcaa460853eb1641480248\"></p>\n<p data-pid=\"ZvcX2YIo\">该书对SHAFT式剪辑的概括：</p>\n<blockquote data-pid=\"iltWvxgh\">动作的省略<br>不让演技连上<br>同一场景也让画改变<br>降低颜色的彩度（《彻夜之歌》是反过来调高彩度）</blockquote>\n<p data-pid=\"GvvhERLH\">以及对这种演出效果的评论：</p>\n<blockquote data-pid=\"n1jm6J2b\">仔细注意的话就会发现，几乎没有一个动作跨越两个镜头。每一个镜头都具有高度的独立性和充实度。<br>从个性强烈的镜头之间的碰撞中诞生的违和感，以之为武器的演出充满挑战性。</blockquote>\n<p data-pid=\"cWCE8J_x\">可以看出，在本季诸多SHAFT相关的作品之中，板村智幸最显眼地继承了这种特色的演出，也难怪会看到“SHAFT在SHAFT模仿大赛中获得第二名”的玩笑了。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/sflsnzyn?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">SFLSNZYN</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>延伸阅读：<br><a href=\"http://www.zhihu.com/question/543079083?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价 7 月新番动画《彻夜之歌》第二集？</a><br><a href=\"http://www.zhihu.com/question/541813400?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价 7 月新番动画《彻夜之歌》第一集？</a><br>\n","link":"http://www.zhihu.com/question/544528995/answer/2596058476?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"《画书大王》(简称画王)中都有哪些经典的国漫作品，包括港台的？","date":"2022-08-01 05:31:27","description":"\n<h3>引言</h3>\n<p data-pid=\"BAxaz1rM\">这是一个好问题，关于画书大王<sup data-text=\"\" data-url=\"https://book.douban.com/review/9724362/\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\">[1]</sup>，可说的太多，我会在另一个回答详细地写，本回答主要是关于画书大王上那些国漫作品的盘点向。</p>\n<p data-pid=\"6ZDKeMqX\">从最开始的创刊号上只有5部中国漫画，到24期“创刊一周年纪念” 号，中国原创作品已占60%</p>\n<p><img src=\"https://pic4.zhimg.com/v2-88a9089ed44053feafdb76095c92e8d4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"649\" data-watermark=\"watermark\" data-original-src=\"v2-88a9089ed44053feafdb76095c92e8d4\" data-watermark-src=\"v2-8e8d909c07ba9f87a9209e3e534915b7\" data-private-watermark-src=\"v2-85d7237816879c4b056e5afd074a3842\"></p>\n<p data-pid=\"27bXv57f\">因为问题问的是《画书大王》中的国漫作品，因此《画王》中的日漫作品诸如《静斗士·翔》、《城市猎人》、《七龙珠》等这里就不再一一赘述，还有许多优秀的外国作品，诸如美国的《花生漫画》、新加坡的《我的暑假》等，这里也不再多提。</p>\n<p data-pid=\"qbF86zfP\"><i>感兴趣的朋友可以到阿卡俱乐部</i><sup data-text=\"\" data-url=\"http://www.aka.today/\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"2\">[2]</sup><i>直接欣赏所有作品。</i></p>\n<p data-pid=\"C_4OBwE1\">首先，画书大王一共24期，一共出现原创中国漫画<b>34部</b>作品，短篇<b>20篇</b>、中篇连载<b>9部</b>。长篇连载5部，另外还有画王征稿一共58篇超短篇。</p>\n<p data-pid=\"jEUYxbqI\">经过我反复阅读，总结图如下</p>\n<p data-pid=\"RSX28L2o\">中长短篇连载作品盘点</p>\n<p><img src=\"https://pica.zhimg.com/v2-9f9de6ff63eedc968e1dab42320a7cc4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2233\" data-rawheight=\"1948\" data-watermark=\"watermark\" data-original-src=\"v2-9f9de6ff63eedc968e1dab42320a7cc4\" data-watermark-src=\"v2-685dee3a200b4ff39797d86970a7b4ca\" data-private-watermark-src=\"v2-0bb8dfdc944248f0ff055fa44d727209\"></p>\n<p data-pid=\"w9bO-2T2\">94画王超短篇征稿选登</p>\n<p><img src=\"https://pic3.zhimg.com/v2-d8fa1ffb6d9243c16185800ac1dab485_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2233\" data-rawheight=\"3052\" data-watermark=\"watermark\" data-original-src=\"v2-d8fa1ffb6d9243c16185800ac1dab485\" data-watermark-src=\"v2-fe2a3b2243b98f9717c9a52435afcdce\" data-private-watermark-src=\"v2-046aab8b87bf1b4aebfa4d8f3aaddce5\"></p>\n<p data-pid=\"0kdTwUBJ\">我们按照作品最初连载时间来一一回顾一下这些优秀的中国漫画</p>\n<hr>\n<h3>王庸生/谭晓春  《蟠桃会》</h3>\n<p><img src=\"https://pic4.zhimg.com/v2-34372cbe2156bddc8f322d9318ebbe86_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"477\" data-rawheight=\"637\" data-watermark=\"watermark\" data-original-src=\"v2-34372cbe2156bddc8f322d9318ebbe86\" data-watermark-src=\"v2-8e048d9e48ac37370a4ff0887b743c9b\" data-private-watermark-src=\"v2-76bb5c4b4b7474b70f31e433819c800e\"></p>\n<p data-pid=\"1z0hJKE4\"> ■《蟠桃会》王庸声编剧、谭晓春等绘画<br>作为一位由传统连环画转入新漫画探索的漫画家,谭晓春在创作中“既要认真学习外国画法的长处,又要不断克服过去长期作画形成的习惯”,做到这点实属不易。<br>在这个由“连环画”到“新漫画”的探索时期，借用西游记的国民度来继续创作后续故事和如今的“蹭西游IP”其实有很大程度类似，但在当时由于是开创者，因此也属于摸着石头过河，事实证明，这种做法是相当可取</p>\n<p><img src=\"https://pica.zhimg.com/v2-368385dd7d1c18ffeec9bd06fb9929b5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3008\" data-rawheight=\"4416\" data-watermark=\"watermark\" data-original-src=\"v2-368385dd7d1c18ffeec9bd06fb9929b5\" data-watermark-src=\"v2-6e0a62d280c54dc44071ec7162681495\" data-private-watermark-src=\"v2-abe0767c2b36889c5f83773b7791e4a9\"></p>\n<p data-pid=\"ff0tiAVD\">而整个故事跳脱于西游记后传，以二郎神和牛魔王的儿子为主角，带我们领略了更多的上古时期神明的风采（诸如炎帝，祝融等）</p>\n<p><img src=\"https://pic2.zhimg.com/v2-2028e565e7b647296126165c4bbe2b17_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2912\" data-rawheight=\"3920\" data-watermark=\"watermark\" data-original-src=\"v2-2028e565e7b647296126165c4bbe2b17\" data-watermark-src=\"v2-e052c9ee128a26b279749593ce37861e\" data-private-watermark-src=\"v2-cab61422c7784ac7bb587839fa1f460c\"></p>\n<hr>\n<h3>陈军《天剑》</h3>\n<p><img src=\"https://picx.zhimg.com/v2-5404bd0b2a81065c5cff87a726e899bf_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2208\" data-rawheight=\"2944\" data-watermark=\"watermark\" data-original-src=\"v2-5404bd0b2a81065c5cff87a726e899bf\" data-watermark-src=\"v2-9a3ee1793e84fe70351418db62689e23\" data-private-watermark-src=\"v2-7b9c2409bd5feb3396c1ab190bb93b99\"></p>\n<p data-pid=\"QoFTa2hd\">  ■陈军大师的这部长篇奇幻冒险故事作品，分为人间篇、地狱篇、天堂篇、梦幻篇</p>\n<p data-pid=\"pJ-eaDYs\">然而可惜的是画王上只刊登了10集，也是唯一的10集，光是这短短10集就看的出来整部这部作品的独特的构思，超前的想象力，甚至能看到现在所谓玄幻的概念，要知道那才1993年。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-debd5c55215c78f1644b2bc71f5a1fa0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2368\" data-rawheight=\"3184\" data-watermark=\"watermark\" data-original-src=\"v2-debd5c55215c78f1644b2bc71f5a1fa0\" data-watermark-src=\"v2-e083b6e7a29fd286988e880b6964cafb\" data-private-watermark-src=\"v2-2acccf0eb80f8bc9292bc91fe2542581\"></p>\n<p data-pid=\"4W2XXb0S\">真正令人震惊的是后来才知道《天剑》居然只是人间篇的一个章节的名称，也就是说整个作品都还没有正式的命名，那么可想而知这部作品的整个故事架构有多宏大。</p>\n<p data-pid=\"y0Wt-2aM\">用今天的眼光来看这部作品会稍显稚嫩，但是在当时可谓是为无数少年少女开启了科幻漫画的启蒙！</p>\n<p data-pid=\"C1wVEohA\">而陈军老师也在09年不幸因病去世，给读者留下永远的遗憾</p>\n<p><img src=\"https://pic4.zhimg.com/v2-a86a78c17c61ab8e415dc01b6d78f8ec_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2768\" data-rawheight=\"3056\" data-watermark=\"watermark\" data-original-src=\"v2-a86a78c17c61ab8e415dc01b6d78f8ec\" data-watermark-src=\"v2-7996fe316f1cd1621c3b3e843433b0e4\" data-private-watermark-src=\"v2-2308fdcd676975bf30126f9b28f44082\" data-tags=\"porn\"></p>\n<hr>\n<h3>王培堃《中国古代谋略家》</h3>\n<p><img src=\"https://pic2.zhimg.com/v2-de46d928d4e750fb6d514ba23a58559e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3008\" data-rawheight=\"4256\" data-watermark=\"watermark\" data-original-src=\"v2-de46d928d4e750fb6d514ba23a58559e\" data-watermark-src=\"v2-b1a1037cdb331bda943ffd3d48376755\" data-private-watermark-src=\"v2-6db54ed58806087b78fe1fbaf7233359\"></p>\n<p data-pid=\"DgrZ6Onh\">在画王初期，没有太多的国内原创作品，而王老先生的《中国古代谋略大师系列》就起到了一个至关重要的作用</p>\n<p><img src=\"https://pic3.zhimg.com/v2-00bd293cda820709d35d7bb63e18a435_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2784\" data-rawheight=\"3888\" data-watermark=\"watermark\" data-original-src=\"v2-00bd293cda820709d35d7bb63e18a435\" data-watermark-src=\"v2-20631a0e6dbf47bf1be4e217a0ddc677\" data-private-watermark-src=\"v2-62fddc6ef4f0b25aac6ad7bd881c9277\"></p>\n<p data-pid=\"zWp83LuC\">从第9期开始连载《姜子牙》到22期《伍子胥》结束，王老先生在画王上连载这个系列一共15期，除了上面提到的两位大师，还有我们熟知的管仲，晏婴，和不太熟知的田穰苴</p>\n<p><img src=\"https://pica.zhimg.com/v2-75c262686dc0d0b38de3736c5a0a789f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2944\" data-rawheight=\"4048\" data-watermark=\"watermark\" data-original-src=\"v2-75c262686dc0d0b38de3736c5a0a789f\" data-watermark-src=\"v2-908db498c7b38746105443a3ea4f1030\" data-private-watermark-src=\"v2-e96d3c1af496304a79f23aa3e362be82\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-656a2fa9318dab83182150dc8aa4b10d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2960\" data-rawheight=\"4160\" data-watermark=\"watermark\" data-original-src=\"v2-656a2fa9318dab83182150dc8aa4b10d\" data-watermark-src=\"v2-7b67afbeba83b7d55505dbadbb85bb9d\" data-private-watermark-src=\"v2-6e1bf468cdbc25a30fe53e04e1bc6e99\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-87961c7adfd8bbec621b4f69678af277_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2704\" data-rawheight=\"3952\" data-watermark=\"watermark\" data-original-src=\"v2-87961c7adfd8bbec621b4f69678af277\" data-watermark-src=\"v2-9122b486136c226bc09814ba21820634\" data-private-watermark-src=\"v2-69c161907de89dc6c0af0d1340dacd46\"></p>\n<p data-pid=\"r5K3DFu_\">王老先生的系列作品，在让我们了解这几位谋略大师的丰功伟绩之外，还带领读者了解那个时期，那个时代的风土人情，像极了一位用自己经历教授我们知识的历史老师</p>\n<p><img src=\"https://pic2.zhimg.com/v2-b4c078ed7a7b273fcd638612efe59b40_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4064\" data-rawheight=\"2800\" data-watermark=\"watermark\" data-original-src=\"v2-b4c078ed7a7b273fcd638612efe59b40\" data-watermark-src=\"v2-fa9d5e970145d90f4bf05d6d24e0f280\" data-private-watermark-src=\"v2-a74c0af2725a8d8be01a341d5721b20c\"></p>\n<p data-pid=\"RqQm08vl\">而老先生在24期连载的作品《金梭 银梭》由于杂志停刊，只有上篇没有下篇，实属可惜</p>\n<hr>\n<h3>陈吟、徐赐林《大鹏出世》</h3>\n<p data-pid=\"3LWQdrJQ\"> ■这部《大鹏出世》选自《精忠报国》，主要讲述的是岳飞为报效国家所经历的种种磨难，以及他如何化险为夷成为大英雄的故事。</p>\n<p><img src=\"https://pica.zhimg.com/v2-12231d7d3a24db9eb9e0aa5f2321a0eb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-12231d7d3a24db9eb9e0aa5f2321a0eb\" data-watermark-src=\"v2-0fc43bf4f8ace295d401b0cea86c18a5\" data-private-watermark-src=\"v2-354bbdce16984a6174b9b6d75339c8f0\"></p>\n<p data-pid=\"fZgNiNMK\">该作品是一部香港式画法的连环画，是《画书大王》中其中一部由连环画向新型漫画探索的作品之一。</p>\n<p><img src=\"https://pica.zhimg.com/v2-1e64a06ae4041d83b15cea19bed7b738_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-1e64a06ae4041d83b15cea19bed7b738\" data-watermark-src=\"v2-db6d5695de9d1894841fed94feb06b8a\" data-private-watermark-src=\"v2-35a25fdd5a9b0eb8df6e0cee5f99f7bc\"></p>\n<p data-pid=\"pHxFqAgf\">我们可以看到大鹏和建筑的画面，是那么地栩栩如生，彰显了作者的绘画功底</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f3e81f3fe37a0c11f382141fe4350915_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-f3e81f3fe37a0c11f382141fe4350915\" data-watermark-src=\"v2-aa2fb1dd4fbc47f11ef7d22556307b19\" data-private-watermark-src=\"v2-ffce0b04964a7d8f640e3c15ec62f6f3\" data-tags=\"porn\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-c98f1775001c95914a45553f8b2a2cd7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-c98f1775001c95914a45553f8b2a2cd7\" data-watermark-src=\"v2-2abb7c008a6546d8de52d989297c1ed9\" data-private-watermark-src=\"v2-879da412d084a1f89f9343611ca0c478\" data-tags=\"porn\"></p>\n<p data-pid=\"g4qneOIQ\">而故事中岳飞的形象阳光而正气，非常符合国人心中大英雄的形象，分镜也能看出还有部分连环画的影子，对话框也采用最基础的长方框，不过这在当时来说，已经是非常大的进步</p>\n<p><img src=\"https://pic1.zhimg.com/v2-bdc9ec9767e0b2d51dffec6aae8c9836_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-bdc9ec9767e0b2d51dffec6aae8c9836\" data-watermark-src=\"v2-f70c94aec633a07c589de26bf001dd02\" data-private-watermark-src=\"v2-6429f7fe5cd28c0f6be841deb2599678\"></p>\n<p data-pid=\"_vBJzAgV\">由于作品是半月刊，加之历史改编类漫画工程繁冗，因此作品在连载6话以后（第8期），完成了一小节的剧情推进以后就没了下文。</p>\n<p><img src=\"https://picx.zhimg.com/v2-defcc651cff186b8ee29042b1ed9a11a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-defcc651cff186b8ee29042b1ed9a11a\" data-watermark-src=\"v2-5d9d50997022507ebac871954746e4f3\" data-private-watermark-src=\"v2-5da5364157f871b11c7073430732d6e0\" data-tags=\"porn\"></p>\n<hr>\n<h3>田恒玉《故事新画》</h3>\n<p data-pid=\"UhFLXjvY\">田恒玉老师擅长用现代语言和新的漫画手法继续创作古代故事，同时也搞些“戏说”之类的娱乐性小品。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-4312d88334f9383b05b84c82275c40ad_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-4312d88334f9383b05b84c82275c40ad\" data-watermark-src=\"v2-d2c0f2dfdf39d7830998352265bc4853\" data-private-watermark-src=\"v2-09336b4d5428564a0d10c5be5ef2e9df\" data-tags=\"porn\"></p>\n<p data-pid=\"HED6Xnrs\">田老师的故事新画系列也是画书大王中连载期数最多的作品，高达12期！每一个故事都蕴含着一个小道理，真正做到了寓教于乐。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-69982f6c0baabbb529a8b8695c785152_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-69982f6c0baabbb529a8b8695c785152\" data-watermark-src=\"v2-ffcd2fe0dc9c0ab194fc4122d8a7bbf4\" data-private-watermark-src=\"v2-45c89665edb7a6bd914929c472d64adb\" data-tags=\"porn\"></p>\n<p data-pid=\"Nol4mxoB\">田恒玉的圆很注意人物造型,，其是面部表情，夸张而不失真，把人的七情六欲，精巧呆傻，描绘得淋满尽致，使漫画的表现功能得以充分发挥，他说“连环漫画的关键是趣味，有趣味就勾人腮帮子，吸引读者非看不可，这种趣味不应是硬抠人家的胳肢窝,应当是自然的，现实的，夸张适度的，顺理成章的，合乎逻辑的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-e31782e75e85c9fef2e4bed36b7df74b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-e31782e75e85c9fef2e4bed36b7df74b\" data-watermark-src=\"v2-4b6887fad53f49413d4c18de25c052f1\" data-private-watermark-src=\"v2-4c2273293895722eb4ae6301bc3cd46e\" data-tags=\"porn\"></p>\n<p data-pid=\"8VzfDfYP\">在谈到创作体验时，他说:“漫画作者应具有幽默细胞，研究人们笑的“神经”和“穴位”，骨子里缺乏幽默感，成天一本正经,面冷似冰的人不宜搞漫画,”他从四格漫画开始,逐渐发展到中篇故事，不论什么，都是严谨地遵循自己的创作原则。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-51b6bfb8042e8898eec747e882d7bcbf_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-51b6bfb8042e8898eec747e882d7bcbf\" data-watermark-src=\"v2-a41072797fbd6d2a5035febcdb2acd97\" data-private-watermark-src=\"v2-1eb119c80482a78d5e910db46c32ff7f\"></p>\n<hr>\n<h3>陈翔《小山日记》</h3>\n<p><img src=\"https://pic1.zhimg.com/v2-5f2c706af81dbb6dcf762da8cbc3f39d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1047\" data-rawheight=\"748\" data-watermark=\"watermark\" data-original-src=\"v2-5f2c706af81dbb6dcf762da8cbc3f39d\" data-watermark-src=\"v2-2b29e1a9f037e2b08d16d02e3f0ac8c5\" data-private-watermark-src=\"v2-db440a847f9c2ce56dcdcdcda0b8e643\" data-tags=\"porn\"></p>\n<p data-pid=\"oMfaWrBR\">《小山日记》可谓陈翔前期代表作之一，虽然带有明显的模仿鸟山明的痕迹，但也有自己的创新，人物造型夸张又不失可爱，故事幽默风趣，想象力天马行空。</p>\n<p data-pid=\"X4THNz-x\">更重要的是，《小山日记》已经看不到连环画风格的影子，在当时的原创漫画作品里可谓鹤立鸡群。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-4c814f6cbbd956c57a564d00f1abb2cb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-4c814f6cbbd956c57a564d00f1abb2cb\" data-watermark-src=\"v2-08218488756300283ee79a9cdbb02280\" data-private-watermark-src=\"v2-d0c0796f4eac6221c099b6b238f94895\"></p>\n<p data-pid=\"afEXZZjz\">所以才短短连载几期，《小山日记》便已成为画王的头牌作品。从第10期开始连载，到24期结束，除了23期因故没有如期连载，《小山日记》总共在画王上连载了14话。</p>\n<p data-pid=\"Sr--jOSx\">很多读者都在给编辑部的信中表示：“<b>没想到我国的作者也能创作出这么好的漫画！</b>”</p>\n<p><img src=\"https://pic3.zhimg.com/v2-1309783f72ae0dc62a0bd9a3df07fa4c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-1309783f72ae0dc62a0bd9a3df07fa4c\" data-watermark-src=\"v2-41de8ce1e7dc18ea1aeddce3a8046b82\" data-private-watermark-src=\"v2-a3d18d1d6745c98165dca8b655dc445e\" data-tags=\"porn\"></p>\n<p data-pid=\"pyr-kZiS\">随着《画王》的停刊，陈翔的《小山日记》转战《卡通王》和《超速风暴》，不过由于杂志本身问题，导致《小山日记》也不了了之，如今如果还想重温这部作品，估计只能收集仅有的3本单行本了。</p>\n<p><br></p>\n<hr>\n<h3><b>颜开《雪椰》</b></h3>\n<p data-pid=\"Ye7Sxsri\">《雪椰》，1996年出版、被视作“中国第一本漫画单行本”，现在已加入“珍藏级别”。</p>\n<blockquote data-pid=\"CWZ3hWdb\">漫画讲述高中生男主在忽然收到一个包裹，包裹里竟是一名来自未来世界的女孩雪椰。原来，自然环境在2398年因核污染而濒临崩坏。为了保护最后的家园，雪椰受嘱托回到过去、寻找帮助。<br>万万没想到，时空机出现故障，雪椰被带到一个陌生的时空。男主了解情况后，决定保护雪椰，并展开一段对抗恶势力的冒险故事。</blockquote>\n<p><img src=\"https://pic4.zhimg.com/v2-7fb9c32b9a9ed53a1d2da3d21d774db3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-7fb9c32b9a9ed53a1d2da3d21d774db3\" data-watermark-src=\"v2-ac47b5aff0be5fe02ad5bd7e2b8166de\" data-private-watermark-src=\"v2-67f1e4f261fc6a060568fe27066d6d68\" data-tags=\"porn\"></p>\n<p data-pid=\"cLFv0jE_\">《雪椰》的大主题虽是打斗与冒险，但情感描绘得很细腻，钢铁与柔情的篇幅各占一半，令它同时斩获男性、女性读者的心，同时与传统少年漫画区分开来，形成独属颜开的风格。</p>\n<p data-pid=\"chG01GQ1\">《雪椰》火到什么程度？截至2000年，共推出8册单行本、总销量高达50万册；漫画虽在2000年停载，但直到2005年都一直端坐在国漫销量冠军的宝座上。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-08d0a23309fec8b0fd985187c6abf83f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-08d0a23309fec8b0fd985187c6abf83f\" data-watermark-src=\"v2-61a9b237e653e1e66462367b517dcce4\" data-private-watermark-src=\"v2-e66247b422865d4dc260f2b6c5a6bdf8\" data-tags=\"porn\"></p>\n<p data-pid=\"jBCLPARv\">与陈翔一样，颜开老师最初的风格有明显的模仿北条司的画风，但是在后期逐渐探索出自己的故事走向，形成自己的独特风格。</p>\n<p data-pid=\"mDc6e8R6\">94年《画王》连载了8话停刊之后，《雪椰》开始了辗转的换刊连载生涯。先是《三优新漫画》，再是《科普画王》，《科幻世界画刊》……有时候，是没连载几期，杂志就又停刊了，至今依旧是中国读者心中的痛。</p>\n<p><img src=\"https://picx.zhimg.com/v2-3e8d4890720243dfce434ba001262cc5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-3e8d4890720243dfce434ba001262cc5\" data-watermark-src=\"v2-a2f4a00d569ac6d4a82532cb3d01d3d2\" data-private-watermark-src=\"v2-34ab8cabed61f3ac81b9c4322853f904\" data-tags=\"porn\"></p>\n<p data-pid=\"70vMf8RS\">关于《雪椰》这部作品， <a class=\"member_mention\" href=\"http://www.zhihu.com/people/048cda711323e81c55c72cdc39d2a2b5\" data-hash=\"048cda711323e81c55c72cdc39d2a2b5\" data-hovercard=\"p$b$048cda711323e81c55c72cdc39d2a2b5\">@颜开大叔</a> 已经在知乎上亲自答过了，感兴趣的朋友可以看看</p>\n<a href=\"https://www.zhihu.com/question/320068340/answer/1255136684\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\"><span class=\"invisible\">https://www.</span><span class=\"visible\">zhihu.com/question/3200</span><span class=\"invisible\">68340/answer/1255136684</span><span class=\"ellipsis\"></span></a><hr>\n<h3>\n<b>长虹《剑气长江》</b> </h3>\n<p><img src=\"https://picx.zhimg.com/v2-a23fa779d146866ef61a7c76d4f2fa25_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"480\" data-watermark=\"watermark\" data-original-src=\"v2-a23fa779d146866ef61a7c76d4f2fa25\" data-watermark-src=\"v2-550af9863d1f18cb68d766bb9c21c5c0\" data-private-watermark-src=\"v2-c662e08c7d011a9d99d615e81912ea15\"></p>\n<p data-pid=\"hhBxKs5l\"> 这应该是国内漫画史上第一部正宗武侠小说改编的新型漫画作品，出自温瑞安的同名小说。笔法简练豪放，绘制娴熟自然，分镜处理和氛围渲染非常到位，整部作品就如名称一般一看就有种令人荡气回肠的豪侠气势。  </p>\n<p><img src=\"https://picx.zhimg.com/v2-1da9107ff93b125055e973991ac551e2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"853\" data-watermark=\"watermark\" data-original-src=\"v2-1da9107ff93b125055e973991ac551e2\" data-watermark-src=\"v2-d9245c8c628c7fb4e8ec80aa0e711887\" data-private-watermark-src=\"v2-f02c541dcba5fa84da26bec66561d9fb\"></p>\n<p data-pid=\"5DKkrq5P\"> 遗憾的是本作只刊登了4期就完结了（17-20期），或许有小说版权的原因。也或者说是当时市场上还未能接受这种形式的改编，不过也为今后同类作品开了个好头。</p>\n<p><img src=\"https://pica.zhimg.com/v2-61a6bb41d960343b8cbeb3ee81401cc8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"480\" data-watermark=\"watermark\" data-original-src=\"v2-61a6bb41d960343b8cbeb3ee81401cc8\" data-watermark-src=\"v2-909a76dbb086966710bb49d587fbf481\" data-private-watermark-src=\"v2-f485e501146cfee4907e8f35e60bdaa7\" data-tags=\"porn\"></p>\n<hr>\n<h3><b>胡倩蓉《辛德蕾拉》</b></h3>\n<p data-pid=\"uNuEavPN\"><b>胡倩蓉的《新年的礼物》是94画王超短篇第一篇刊登的作品（15期）</b></p>\n<p data-pid=\"1e9ogHKf\">在4个月后的第19期，刊登了其处女作《辛德蕾拉》</p>\n<p data-pid=\"ufKvp2Y6\">《辛德蕾拉》是一个只有3话的短篇，但是我们可以窥见胡倩蓉在当时高二的年龄展示出的潜能</p>\n<p data-pid=\"_KwyBkel\">简洁的线条，略微稚嫩的分镜，追求美型的人设，那双追求美妙爱情的女主的眼睛，仿佛胡倩蓉追求漫画真谛的渴望双眼</p>\n<p data-pid=\"QtwQO07X\">故事非常玛丽苏，非常典型的少女漫走向，但在当时取得了非常好的反响，也因此坚定了胡倩蓉日后继续创作的心。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-6bb2a706288241e4e079d9951d5ce557_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1373\" data-rawheight=\"1860\" data-watermark=\"watermark\" data-original-src=\"v2-6bb2a706288241e4e079d9951d5ce557\" data-watermark-src=\"v2-36181a0281a65a0d881f5bbdfb1f4093\" data-private-watermark-src=\"v2-2dbdebaefc28d7c203dbc5763b98e631\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-80887e7a46940dd8b58a9843f759a959_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-80887e7a46940dd8b58a9843f759a959\" data-watermark-src=\"v2-6fba8abe1f73aa10873b38636c7dd752\" data-private-watermark-src=\"v2-0464d827d40fd3e8f48f30745201f7dd\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-fa62ef1f95a6d228c393fd1bcc0a296b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-fa62ef1f95a6d228c393fd1bcc0a296b\" data-watermark-src=\"v2-120646920b5334d3905571a55f69e6cc\" data-private-watermark-src=\"v2-a68ed523f396c8cc13b68f03722af449\"></p>\n<p><br></p>\n<hr>\n<h3><b>郑旭升《我们的鸦片战争》</b></h3>\n<p data-pid=\"ab5f0Ooe\">1994年，郑旭升在国内第一本漫画杂志《画王》评选漫画形象代言活动中取得冠军，同年在《画王》上连载自己的第一部长篇漫画作品《我们的鸦片战争》。</p>\n<p data-pid=\"16SdWKbE\">他的作品《师生情》以及寓教寓乐的《我们的鸦片战争》，让许多的读者认识了他。</p>\n<p data-pid=\"nE1Gd932\">在后来金虹出版的《漫画原子弹》里，他又相继以《男生宿舍古怪事》《无名星域风暴》等作品奠定了半写实的画风。也为后来的《繁华如梦》《幽灵列车》等作品的成功打下了基础。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-e837ace512c1774edc47ba1a1af52d61_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-e837ace512c1774edc47ba1a1af52d61\" data-watermark-src=\"v2-41bd685433ab3c24fbd6f20023a3367b\" data-private-watermark-src=\"v2-c9292ef4529dd87a597265c1843aeee9\"></p>\n<p data-pid=\"_qOICga4\">《我们的鸦片战争》的创作背景是当时的禁烟潮流，当时的香烟被人们称为新的鸦片</p>\n<p data-pid=\"4V4O79xD\">故事以一家老小都爱抽烟的烟民作为开端，通过一系列生活小故事告诫读者抽烟的危害，还科普了非常多有关禁烟的知识点，奈何由于画王的停刊，这部作品只连载了短短的三期，随后不断辗转《新漫画》《漫画原子弹》等杂志，但是依旧没有完整地连载结束。随着禁烟的浪潮过去，这部作品也失去社会意义，因此郑旭升也没有继续连载下去了。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-12585ec1edbd9352d304ecca2d889097_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-12585ec1edbd9352d304ecca2d889097\" data-watermark-src=\"v2-2dbd95b2db9b46381726fe64963a515b\" data-private-watermark-src=\"v2-82ddc6e96bade3a2c29726385b4d58cf\"></p>\n<h3>\n<br><b>阿恒《少林正宗》</b>\n</h3>\n<p><img src=\"https://pic1.zhimg.com/v2-76e97bf299c968924fc60222e0320159_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2048\" data-rawheight=\"1536\" data-watermark=\"watermark\" data-original-src=\"v2-76e97bf299c968924fc60222e0320159\" data-watermark-src=\"v2-8d1b9de09ae3f11119c3b30cf0f911aa\" data-private-watermark-src=\"v2-f61ffa79410e78a55a55c84f05526d0d\" data-tags=\"porn\"></p>\n<p data-pid=\"b67naUxP\">初看《少林传奇》以为是日后那种港漫风格的作品，没想到竟然是少林文化的未来机甲科幻风故事，很是新奇。并且已经具备日后港漫那种线条感以及夸张的战斗动作的风格。</p>\n<p data-pid=\"qyZkTrLC\">同样可惜的是，本作只在《画书大王》连载了2期，《画书大王》停刊后接着在《科幻世界画刊》上连载，而后在《漫画原子弹》上续载，最后集结成单行本出版。</p>\n<p data-pid=\"1FVEY1BK\">而阿恒和洪虹后来转移到深圳重新注册成立金虹公司，推出《漫画原子弹》，以及将港漫发扬光大的故事，都是后话了。</p>\n<p><img src=\"https://pica.zhimg.com/v2-88cf56955a52ba54e4e251e01e83486f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"853\" data-watermark=\"watermark\" data-original-src=\"v2-88cf56955a52ba54e4e251e01e83486f\" data-watermark-src=\"v2-28c362fa9f31eb6f1fcfee413b4a0f75\" data-private-watermark-src=\"v2-7ac1c8f15ada74f72b57cbecf0540029\"></p>\n<p><br></p>\n<hr>\n<p><br></p>\n<h2>94画王超短篇征稿选登</h2>\n<p data-pid=\"IqWfJWeF\">《画书大王》在第10期之时做出一个意义深远的决定——举办“<b>94画王杯超短篇有奖征稿活动</b>”。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d4f77b67ccb6d6f1cfa597c7f4b983d5_720w.jpg?source=b1748391?rss\" data-caption=\"激发无数人创作热情的“画王超短篇大赛”\" data-size=\"normal\" data-rawwidth=\"533\" data-rawheight=\"864\" data-watermark=\"watermark\" data-original-src=\"v2-d4f77b67ccb6d6f1cfa597c7f4b983d5\" data-watermark-src=\"v2-f470dca4e681098f8e2b65488a7687a3\" data-private-watermark-src=\"v2-695005bc8ae56d3cc2909e77c479aeac\"></p>\n<p data-pid=\"4ZQsnPbz\">所谓超短篇，是指只有四页纸的漫画作品。由于页数很少，对作画者的要求不高，即使没画过漫画的人也可以一试身手。</p>\n<p data-pid=\"yncfhLEe\">征稿启事一出，国内漫画爱好者们的热情便被完全激发出来了，雪片般的来稿从全国各地飞往《画书大王》的编辑部。</p>\n<p data-pid=\"SyCkbJPl\">所以从第15期《画书大王》开始，首批来稿与读者见面，我们从下图中可以看到许多如今依旧响当当的名号，<b>胡倩荣、郑旭升、赵佳、蒋翎（自由鸟）</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-d8fa1ffb6d9243c16185800ac1dab485_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2233\" data-rawheight=\"3052\" data-watermark=\"watermark\" data-original-src=\"v2-d8fa1ffb6d9243c16185800ac1dab485\" data-watermark-src=\"v2-fe2a3b2243b98f9717c9a52435afcdce\" data-private-watermark-src=\"v2-046aab8b87bf1b4aebfa4d8f3aaddce5\"></p>\n<p data-pid=\"eoSkXkK2\">从第15期到21期，一共刊登了58部作品，年龄段从最小的12岁到青年不等，其中初高中生的投稿比例占据60%</p>\n<p><img src=\"https://picx.zhimg.com/v2-a483b9d74156ab88fd97a082a77387d3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-a483b9d74156ab88fd97a082a77387d3\" data-watermark-src=\"v2-996a93a7e3c8a6c74ae6db74964de5ef\" data-private-watermark-src=\"v2-187e15a91a9840e3d78918c524d78930\"></p>\n<p data-pid=\"fe8BkQYs\">这些短篇作品中质量参差不齐，但是类型确实是百花齐放，其中以年仅12岁的“鬼女”赵佳的《画王讨论会》独树一帜</p>\n<p data-pid=\"mV004s4S\">作品以辩论会的形式来讨论画漫画的特技问题，有趣的是在辩论双方阐述自己观点的同时，还将这种漫画达到的效果展示出来，真正做到了寓教于乐。</p>\n<p data-pid=\"5Clq0IZB\">非常难能可贵的是，辩论双方的人物都是在画王中连载作品的人物形象，年仅12岁的赵佳就应经能模仿中日画风达到以假乱真的境界，难怪日后能创作出《黑血》这种经典作品。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4bd2c857cf21c0bc6443f24b0ef22b73_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-4bd2c857cf21c0bc6443f24b0ef22b73\" data-watermark-src=\"v2-48fb609531d25d6c514c45a8b625e50f\" data-private-watermark-src=\"v2-9d42b6326f65ac2aa8e3a16a9d0969a5\" data-tags=\"porn\"></p>\n<p data-pid=\"g-yvzjmr\">读者评价：画王讨论会非常新颖有趣！重点！12岁少女！！</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5d8a532c89a67f28c08e9a8a3f6a1938_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-5d8a532c89a67f28c08e9a8a3f6a1938\" data-watermark-src=\"v2-14e1626d78c41cda8db3c3209f4076d7\" data-private-watermark-src=\"v2-f5eb44c332d2a267605eb525980eb3d6\"></p>\n<p data-pid=\"EJDI1eD4\">郑旭升</p>\n<p data-pid=\"VqvnVKOX\">三剑客之一的郑旭升的处女作，讲述一个名字叫皮蛋的少年，连续被留了五年的一年级，原因竟然是班主任女老师长得特别想自己去世的妈妈，然后这位老师最后嫁给了男主的爸爸</p>\n<p data-pid=\"A2hhtF8C\">真不愧是郑旭升的脑洞哈哈哈，看似荒谬的背后蕴含着一丝合理，表达了当时社会环境下对再婚家庭的一种看法。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-7f1b81858e9228481c81ca713d202aad_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-7f1b81858e9228481c81ca713d202aad\" data-watermark-src=\"v2-b4c3652e2bdfc169e05f70bd081d756b\" data-private-watermark-src=\"v2-8d18155e4de41a87277780fc63acd613\"></p>\n<p data-pid=\"PVCOLgH1\">除了这些以外，还有各种风格的短篇，让每位当时热爱漫画的新人崭露头角</p>\n<p data-pid=\"KoxGvgmU\">有武侠风格的《风云录》、日常搞笑风格的《金钱梦的破灭》</p>\n<p><img src=\"https://pic4.zhimg.com/v2-8e5ccd45593b3cfa93ba8ef8d5e8e3d0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1498\" data-rawheight=\"1085\" data-watermark=\"watermark\" data-original-src=\"v2-8e5ccd45593b3cfa93ba8ef8d5e8e3d0\" data-watermark-src=\"v2-8abc9bc2e2aafce5d060f29598192b00\" data-private-watermark-src=\"v2-ddc82163e888421c75f5cd3c27c3e364\" data-tags=\"porn\"></p>\n<p data-pid=\"9TQLIRzN\">还有着最代表当时从连环画转向新型漫画风格的，具有儿童故事情节的《夺回鸟蛋》</p>\n<p><img src=\"https://pic1.zhimg.com/v2-06a772cdcff35d11233cd0641d2dcd1e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-06a772cdcff35d11233cd0641d2dcd1e\" data-watermark-src=\"v2-903adc7e364c4c463310e8525ea7d18a\" data-private-watermark-src=\"v2-15171babe92cc9314b99a1d30e2220b7\"></p>\n<p data-pid=\"h823nllG\">还有充满甜甜爱情，漫画中绝对不可或缺的少女漫</p>\n<p><img src=\"https://pic1.zhimg.com/v2-9c098044ddc3e3b960b7ff84a45aeb66_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-9c098044ddc3e3b960b7ff84a45aeb66\" data-watermark-src=\"v2-ed0989d6e266a5bd2c04f28dd7d2c6f9\" data-private-watermark-src=\"v2-577e86bf08d45a5642eee43b8da22bdd\" data-tags=\"porn\"></p>\n<p data-pid=\"fxysCehk\">当然还有最多读者喜爱的冒险漫画风格、科幻风格以及模仿借鉴日漫的作品</p>\n<p><img src=\"https://pic4.zhimg.com/v2-e89d71125143ac6d7f6b2e5d089856f6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1497\" data-rawheight=\"973\" data-watermark=\"watermark\" data-original-src=\"v2-e89d71125143ac6d7f6b2e5d089856f6\" data-watermark-src=\"v2-bd4a063071e488f72771479f73cd0db2\" data-private-watermark-src=\"v2-d44f8df6acac24a51b7e38fc06040121\"></p>\n<p data-pid=\"FL74sAfT\">大部分作品都能做到完整表达一个故事，也存在着诸如分镜混乱，线条饱满，网点滥用等一系列问题，但是这群年轻人让我们看到了，也让当时的中国漫画界看到了中国漫画未来的希望。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-956f1c1fe40f67be5a7fa983a0aa0e1b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1497\" data-rawheight=\"979\" data-watermark=\"watermark\" data-original-src=\"v2-956f1c1fe40f67be5a7fa983a0aa0e1b\" data-watermark-src=\"v2-2c1643eab4bc06fd1057f12cbaebd125\" data-private-watermark-src=\"v2-843a41be25e26f7d93b10c122c323b73\" data-tags=\"porn\"></p>\n<p data-pid=\"2KzgNR_W\">最后，让我们再次记住这群曾为了中国漫画做出贡献的年轻人们。</p>\n<p><img src=\"https://pica.zhimg.com/v2-e533bdf9d336300f632484e71c413b33_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"984\" data-watermark=\"watermark\" data-original-src=\"v2-e533bdf9d336300f632484e71c413b33\" data-watermark-src=\"v2-e1491513a0fbe732d28d09b6eccb3703\" data-private-watermark-src=\"v2-c917431835d27fac401130fb522484fc\"></p>\n<p data-pid=\"fB181bYg\">关于画书大王，能说的非常多，我看知乎上介绍的都已经很全面了，最后我借这个回答，稍微补充几点自己总结的，供大家参考，为啥画书大王会被如今这么多漫画家、甚至漫画爱好者推崇！</p>\n<p><br></p>\n<p data-pid=\"95PFkBWa\">画王之所以是那么多人心中的漫画启蒙<sup data-text=\"\" data-url=\"https://user.guancha.cn/main/content?id=20267&amp;page=0\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"3\">[3]</sup>。结合资深国漫博主jjf2011的文章<sup data-text=\"\" data-url=\"https://user.guancha.cn/main/content?id=20267&amp;page=0\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"4\">[4]</sup>以及个人见解，综合认为有以下几点原因：</p>\n<p data-pid=\"AfaEgV-s\"><b>1.第一期试刊的最后一页刊登了“画王形象”有奖征集的告示与评选揭晓</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-d8bf160c3823fbeeef18128ec8f8c2c1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1054\" data-rawheight=\"1899\" data-watermark=\"watermark\" data-original-src=\"v2-d8bf160c3823fbeeef18128ec8f8c2c1\" data-watermark-src=\"v2-9b0c00c5fd1c5c8fd934eac3f6dd9c48\" data-private-watermark-src=\"v2-efe029eff2a907c2a2449169e25f09c7\"></p>\n<p data-pid=\"cQ40bV1i\">在《画书大王》的第一期试刊的最后一页刊登了“画王形象”有奖征集的告示，引发全国漫画爱好者的创作与投稿</p>\n<p data-pid=\"JLT9TmHg\">“画王形象”的评选结果也于22期揭晓，由郑旭升设计的角色最终获得了票选冠军，从而成为了杂志的形象代言人。</p>\n<p data-pid=\"WnjIINFW\">另外从本期开始分别在杂志的封面和封底开始连载法国漫画家唐.劳伦斯的全彩漫画《英雄风暴》的节选。另外“画王形象”也于第23期开始正式登陆杂志封面！</p>\n<p><br></p>\n<p data-pid=\"Xv4W0hYl\"><b>2.除了日漫和国漫外刊登了一些亚洲和欧美漫画家的作品。</b></p>\n<p data-pid=\"0LCtJ7pQ\"><b>包括不仅限于</b></p>\n<p data-pid=\"_NhMoHZK\">新加坡的阿米巴的《我的暑假》</p>\n<p data-pid=\"Ba7csioF\">美国的舒尔茨的《花生漫画》</p>\n<p data-pid=\"-MUZG4ra\">法国的唐·劳伦斯的《英雄暴风》</p>\n<p data-pid=\"bwMP0Yuy\">西班牙的维·塞格里斯《白甲卫士》</p>\n<p data-pid=\"Vx2_AaXE\">在那个以日本漫画为主流的时代，这也给了国人一次很好解其他风格漫画的机会，大大开阔了读者的眼界。可能是读者年龄层次的不同，当年《画书大王》的开放性和包容性绝对是如今大部分的主流漫画杂志难以企及的。</p>\n<p><br></p>\n<p data-pid=\"987uyMJz\"><b>3.在《画书大王》第八期的最末端刊登了“1994年画王超级短篇有奖征稿”启事</b></p>\n<p data-pid=\"pe_K7D7B\">这是中国漫画史上第一次的正规批量征稿！可以说这是对于整个中国漫画发展影响极其深远的事件之一。中国漫画从此有了一个可以真正展示自身才华的舞台，这个消息犹如深水炸弹般迅速的在广大画谜中间炸开，一石激起千层浪大批狂热的漫画爱好者们从而拿起了画笔，由纯粹的漫画读者转为了漫画参与者。</p>\n<p data-pid=\"R9MY38y8\"><b>4.超短篇征稿入选作品纷纷刊登！</b></p>\n<p data-pid=\"1hyOBSgq\">此时杂志单期的发行量已经突破了50万大关，就在此时“94年超短篇”有奖征稿活动的入选作品也从第15期开始陆续刊登！并在广大画谜中引发不小的轰动，以此为契机编辑部也决定成立自己的专业漫画工作室！并开始物色工作室成员。在这些超短篇大赛入围作品中有很多我们大家日后非常的熟悉名字，其中包括了：赵佳、林敏、蒋翎、胡倩蓉、柴美华以及潘广维等多位漫画界的明日之星</p>\n<p data-pid=\"tbgH8Rc5\">“1994年画王超短篇”选登活动正式结束，从杂志的第15期-第21期共计刊登入选作品58篇，这也是中国漫画史上第一次大规模选用和刊登新人作品的活动，这种模式直接被后来“5155时期”的各家漫画杂志广泛的效仿和应用。</p>\n<p><br></p>\n<p data-pid=\"y66OjcBP\"><b>5.“三剑客漫画工作室”正式成立！</b></p>\n<p data-pid=\"VEAjNysb\">在杂志第17期推出之前，位于北京的《画书大王》漫画工作室正式成立了，首批入驻的三位青年漫画作者分别是：陈翔、郑旭升和颜开！他们共同为工作室起了一个响亮的名字“三剑客漫画工作室”！中国历史上第一个职业漫画工作室就此成立，这是对于整个中国漫画发展影响极其深远的事件之一！漫画工作室的出现不仅整合了资源还极大的提高了效率，尝到甜头的编辑部开始着手准备第二个工作室的创建，当时准备邀请：胡蓉、姚非拉、柴美华以及聂峻等一批优秀的漫画工作者加入，但由于杂志的突然停刊这个计划最终流产......</p>\n<p><br></p>\n<p data-pid=\"M3ujJKwk\"><b>6.画王刊登鸟山明的《漫画研究所》及《漫画学校》</b></p>\n<p data-pid=\"PT40tdo4\">从画王第一期开始，就刊登了日本漫画大师鸟山明用漫画形式讲解如何创作漫画的作品</p>\n<p data-pid=\"48hogCIi\">鸟山明大师用通俗易懂的表达告诉国内读者，究竟怎样才能成为漫画家，这也是画王被称为国内第一批漫画家启蒙的原因之一</p>\n<p><img src=\"https://pica.zhimg.com/v2-a74195d88417b334b6a7a3bb346c2beb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-a74195d88417b334b6a7a3bb346c2beb\" data-watermark-src=\"v2-541c53eeabdcb064f455e4a044757ec4\" data-private-watermark-src=\"v2-aa782e8beb9ac06ae6e85887e27382fa\"></p>\n<p data-pid=\"SkmV4UPn\">漫画研究所总共连载十三期，从如何创作人物到用什么铅笔，什么墨水，到怎么画分镜，绘图远近法最后还教你怎么投稿等等，为国内有意向的读者打开一扇大门！</p>\n<p><img src=\"https://pica.zhimg.com/v2-6f25c8f428e813685c03f93e7d57c6d4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-6f25c8f428e813685c03f93e7d57c6d4\" data-watermark-src=\"v2-c2b9ebfda7a4be7a00af504b53dc6561\" data-private-watermark-src=\"v2-12ce549ed9c869ab3d3399b714521fb3\"></p>\n<p data-pid=\"yPm2YaZk\">而在漫画研究所完结以后，刊登了更高阶的同样出自鸟山明之手的《漫画学校》</p>\n<p><img src=\"https://pica.zhimg.com/v2-f131eeabeb8759715d0f7b09e6c7a8ad_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2048\" data-rawheight=\"1536\" data-watermark=\"watermark\" data-original-src=\"v2-f131eeabeb8759715d0f7b09e6c7a8ad\" data-watermark-src=\"v2-cc9279b222d11e124e832fcd09af0766\" data-private-watermark-src=\"v2-392b722676ba5c5b96ec9739202ea313\"></p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-8c4278e60a60dade3067c13fc2d04ff3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-8c4278e60a60dade3067c13fc2d04ff3\" data-watermark-src=\"v2-488e878f51be2aacfda7c3d60cc43084\" data-private-watermark-src=\"v2-859f333d1663a8acded223770d27ce71\"></p>\n<p data-pid=\"O9PbbeVa\"><b>7.画王信箱与画友论坛开设</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-4375f24e1dd6480ee9a5b4d0e33af6a2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-4375f24e1dd6480ee9a5b4d0e33af6a2\" data-watermark-src=\"v2-de255ae9db8cc8accad585f6d5f41ce6\" data-private-watermark-src=\"v2-a8efdf69b0be7ed1d22ab82fad50e4bb\"></p>\n<p data-pid=\"H-4pmR89\">作为画王杂志直接与读者对话的栏目，我们可以了解到当时非常多的一些社会现象，比如当时的漫画还是连环画，家长们普遍不接受漫画的观念等等</p>\n<p><img src=\"https://pic4.zhimg.com/v2-b9db054c482ac9ae1522db483522c33f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-b9db054c482ac9ae1522db483522c33f\" data-watermark-src=\"v2-284c061b21c9450a492f784b0c2e4511\" data-private-watermark-src=\"v2-a5a7e9de50cdf6ecf8dcfc8ea55742f2\"></p>\n<p data-pid=\"SjTzOBou\">同时，也是让许多读者发出自己声音的一个栏目，让我们看到当时有那么多读者用自己的行动，自己的声音告诉中国的漫画家，加油！</p>\n<p><img src=\"https://pic1.zhimg.com/v2-02612b7318f6a1b019bb0190a9769a57_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-02612b7318f6a1b019bb0190a9769a57\" data-watermark-src=\"v2-41fd40e5bacc4754f6ce2e337c49cad9\" data-private-watermark-src=\"v2-27eb047ab6e36e7c79009093dadc0892\"></p>\n<p data-pid=\"oxTHUdVH\"><b>8.优秀中外漫画家以及世界漫画史介绍</b></p>\n<p data-pid=\"J-dwH8py\">画王从试看刊之初，就已经开设『人物介绍』一栏，在让国内读者欣赏名家之作的同时，向大家阐述那些创作出这些优秀作品的漫画家们，其中包括</p>\n<p data-pid=\"m7g0FibW\">台湾郑问，车田正美，鸟山明，高桥阳一</p>\n<p><img src=\"https://pic1.zhimg.com/v2-612c7d3b1f01e0d4342e5cf156f4a929_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2048\" data-rawheight=\"1536\" data-watermark=\"watermark\" data-original-src=\"v2-612c7d3b1f01e0d4342e5cf156f4a929\" data-watermark-src=\"v2-56410b97b902595393ef8cc3705ce571\" data-private-watermark-src=\"v2-3ad26a30c606da933d90f0eb7e898e5d\"></p>\n<p data-pid=\"5SOoQHNM\">黄玉郎，手冢治虫，藤子不二雄，高桥留美子，马荣成</p>\n<p><img src=\"https://pic1.zhimg.com/v2-e84a67a1805e4b73a3e75df9ec282364_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-e84a67a1805e4b73a3e75df9ec282364\" data-watermark-src=\"v2-f4cf2bd7d6510bc94e6cd70d8015e2d7\" data-private-watermark-src=\"v2-de27256aca219ca6ee420e7ce40a1c23\"></p>\n<p data-pid=\"X-GDv7eB\">谭晓春，北条司，成田美名子，安达充，田恒玉，叶精作，石田章太郎，王培堃，原哲夫，荒木飞吕彦</p>\n<p><img src=\"https://pic3.zhimg.com/v2-cb81cad6d4d812948a0285f1497580aa_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-cb81cad6d4d812948a0285f1497580aa\" data-watermark-src=\"v2-59e9f4d83f698e078acfbd8f27e52e71\" data-private-watermark-src=\"v2-df4b579abf482258bb6449d8002db369\"></p>\n<p data-pid=\"Qzxw1B9P\">以及比较冷门的细川知荣子，安彦良和柴门文，池田理代子，松本零士。</p>\n<p data-pid=\"yzr7u-Sn\">再介绍作者的同时，杂志也在告诉中国读者世界漫画的发展，因此有了『世界漫画史话』的出现</p>\n<p data-pid=\"MyNjbFlp\">向读者展示了美国漫画，英国漫画的发展与演变，为中国读者了解世界漫画提供了一个很好的窗口。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-e1c8c54ef96893f1a42dd90eaee06dee_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-watermark=\"watermark\" data-original-src=\"v2-e1c8c54ef96893f1a42dd90eaee06dee\" data-watermark-src=\"v2-918ad1ec27e895046bb972dfafd14afd\" data-private-watermark-src=\"v2-1ee2b9114a7a5618792b6274efcba56a\"></p>\n<hr>\n<p><br></p>\n<p data-pid=\"Hqinbr6Y\">在<i>jjf2011</i>看来，《画书大王》的出现不仅填补国内没有专业漫画杂志的空白，它还书写了中国漫画史上的好多个第一！虽然它最终没能够结出果实，但它却开出了最为绚丽的花朵，同时也为整个中国原创漫画打开了一扇大门！正因为有了《画书大王》当年不惜余力的对中国原创漫画全方位的探索，日后才会有了国内漫画杂志“百花齐放”的场景出现。</p>\n<p data-pid=\"v3Dq0J_O\"><b>《画书大王》作为中国漫画发展史上一个无法逾越的里程碑，它永远屹立于一代读者的心中！</b></p>\n<p data-pid=\"uVYiQcif\"><br> 以上</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/bin-di-47-74?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">彬帝</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/286775795/answer/2603044530?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">1 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/515952442?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">有没有像《大王饶命》的国漫或者日漫?</a><br><a href=\"http://www.zhihu.com/question/522588938?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">你喜欢《喜羊羊与灰太狼》系列动画电影的原因是什么？</a><br>\n","link":"http://www.zhihu.com/question/286775795/answer/2603044530?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"我有特别的 DNS 配置和使用技巧","date":"2022-07-28 15:31:00","description":"\n<p>众所周知，DNS 的作用与电话簿类似，将人类可读的域名映射到机器可读 IP 地址、使人更方便地访问互联网。DNS 是非常重要的互联网基础设施，对于改善上网冲浪的体验中的重要程度不容小觑。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/96381/31/31172/23930/62e2ab5bE554d388b/37027f4a03351b9e.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/i-have-my-unique-dns-setup/\">https://blog.skk.moe/post/i-have-my-unique-dns-setup/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/i-have-my-unique-dns-setup/"},{"title":"优化博客的累计布局偏移（CLS）问题","date":"2022-06-07 17:24:00","description":"\n<p>距离上一篇文章发布已有四个月了，是时候写几篇文章给博客除草了。上一次我介绍了我如何迁移、重构了我的博客的架构，这次我想来谈谈我在重构中优化和打磨访客体验时解决的一个问题。我的博客优化之旅 图片 lazyload 的学问和在 Hexo 上的最佳实践 我的博客有多快？ 天下武功，唯快不破 —— 我是这样优化博客的 ...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/206311/26/14625/38940/629f7f81Eb11312de/b1e67f07b1cc9bc7.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/fix-blog-cls/\">https://blog.skk.moe/post/fix-blog-cls/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/fix-blog-cls/"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。编写......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\r\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\r\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\r\n    return new Date(date.toLocaleString('en-US', { timeZone }))\r\n}\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\r\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\r\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\r\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: '2-digit',\r\n        hour12: false,\r\n        timeZone\r\n    })\r\n    return {\r\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\r\n        convert (date) {\r\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\r\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\r\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\r\n        }\r\n    }\r\n}\r\n\r\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\r\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\r\n    return converter.convert(new Date(secDate), tzName) - secDate\r\n}\r\n\r\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\r\ncmn-Hans-SG = 中文普通话-简体-新加坡\r\ncmn-Hant-TW = 中文普通话-繁体-台湾\r\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\r\ncmn = 中文普通话\r\n\r\nzh-Hans = 中文-简体\r\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\r\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\r\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\r\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\r\n}\r\n\r\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long'\r\n}\r\nconst now = new Date()\r\n\r\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\r\n\r\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\r\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\r\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\r\n\r\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\r\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\r\n\r\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\r\n\r\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\r\n\r\nzhCNFormatter.format(now) // 2021年10月13日星期三\r\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\r\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\r\n\r\njaFormatter.format(now) // 2021年10月13日水曜日\r\njaAltFormatter.format(now) // 令和3年10月13日水曜日\r\n\r\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\r\n// {locale: 'zh-CN', calendar: 'gregory', …}\r\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\r\n     // 基于一个固定日期计算，这里选择 1970.1.1\r\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\r\n    const base = new Date(1970, 0, 1).getTime()\r\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\r\n    return Array.from({ length: 7 }, (_, day) =&gt; (\r\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\r\n    ))\r\n}\r\n\r\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\r\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\r\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    second: 'numeric',\r\n}).formatToParts(new Date())\r\n// [\r\n//     { type: 'year', value: '2021' },\r\n//     { type: 'literal', value: '年' },\r\n//     { type: 'month', value: '10' },\r\n//     { type: 'literal', value: '月' },\r\n//     { type: 'day', value: '13' },\r\n//     { type: 'literal', value: '日' },\r\n//     { type: 'weekday', value: '星期三' },\r\n//     { type: 'literal', value: ' ' },\r\n//     { type: 'dayPeriod', value: '上午' },\r\n//     { type: 'hour', value: '1' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'minute', value: '00' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'second', value: '00' }\r\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\r\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\r\n}\r\n\r\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\r\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\r\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\r\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\r\n  timeZone: 'America/Los_Angeles',\r\n  year: 1995,\r\n  month: 12,\r\n  day: 7,\r\n  hour: 3,\r\n  minute: 24,\r\n  second: 30,\r\n  millisecond: 0,\r\n  microsecond: 3,\r\n  nanosecond: 500,\r\n  calendar: 'iso8601'\r\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<p>2020 年 11 月 11 日，苹果在本年度最后一次 Apple Events 上发布了全新的 ARM 芯片 M1、以及三款搭载了 M1 的 Mac：MacBook Air、MacBook Pro 13‘ 和 Mac Mini。在 WWDC 2020 库克宣布 Apple Silicon 后，这次 Apple Events 再一次掀起了热潮，不少 KOL 都把 M1 奉若神明，不少人也不以为然。本文通过 8 个问题来简单聊聊 M1 和 ARM Mac。M1 芯片的性能如何？本文写就时，搭载 M1 的 Mac 尚未开始发货，我们能看到的只有 GeekBench 上流出的跑分。所以，让我们先从跑分开始看起？...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"\n<p>WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将其表述为 \"An API for accessing Public Key Credentials\"，即“一个用于访问公钥凭证的 API”。WebAuthn 很强大，强大到被认为是 Web 身份认证的未来（当然，也很复杂）。你有想过通过指纹或者面部识别来登录网站吗？WebAuthn 就能在保证安全和隐私的情况下让这样的想法成为现实。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\" alt=\"通过 WebAuthn 调起 Windows Hello 登录网站\" width=\"1912\" height=\"966\" class=\"aligncenter size-full wp-image-2215\"></a>\n<p>你可以在<a href=\"https://webauthn.io/\" rel=\"noopener\">这个网站</a>自行体验 WebAuthn。或者，如果你有一个使用 WordPress 的站点，可以尝试一下 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WP-WebAuthn</a> 这款插件，它可以为你的站点启用 WebAuthn 登录。这是我为了写这篇文章而练手开发的插件，本文中的部分示例代码也来自这款插件。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"wp-webauthn\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/wp-webauthn\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>WebAuthn Level 1 标准已在 2019 年 3 月成为 W3C 推荐标准，而 Level 2 标准目前也已进入编辑草案阶段，但互联网上有关它的中文资料却仍然很少，国内也鲜有网站支持这一新标准。于是，在抱着各种英文资料和标准啃了几天以后，我折腾出了这篇文章。</p>\n<p>在这篇文章里，我将会从最基本的概念开始，逐渐深入 WebAuthn，直到解码公钥等深层细节。这可能是你能找到的有关 WebAuthn 最详细最基础的中文文章，也很可能是最长的。在开始之前，<strong>我强烈建议你打开菜单中的文章目录浏览一遍，以对这篇文章涉及的内容有所了解。</strong>如果你只是想了解如何简单地在你的项目中添加对 WebAuthn 的支持，那么“<a href=\"https://flyhigher.top/#webauthn-overview\">浅谈 WebAuthn</a>”部分就是你要找的；如果你想了解更多关于 WebAuthn 的底层细节，那么你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分。</p>\n<p>由于在本文写作时 WebAuthn Level 2 规范尚未定稿，<strong>这篇文章我们将只专注于 Level 1 规范。</strong></p>\n<p>这篇文章最后更新于 2020.9 ，在你读到这篇文章时，部分事实可能已经发生改变，请注意判断。</p>\n<p><strong>更新日志：</strong></p>\n<ul>\n<li>2021.1.16 添加 Chrome 开发工具信息</li>\n<li>2020.9.17 更新 iOS/iPad OS 兼容性信息</li>\n<li>2020.5.20 添加部分无用户名认证的平台兼容性内容</li>\n<li>2020.5.15 添加部分 <code>extensions</code> 相关内容与链接；添加全局凭证 ID 唯一内容；添加凭证 ID 查找相关内容；添加“从 U2F 认证迁移”一节</li>\n<li>2020.4.13 更新与修正 <code>userVerification</code> 相关内容；添加部分 Firefox 相关内容</li>\n<li>2020.3.23 文章发布</li>\n</ul>\n<p>那么让我们开始吧。<span></span></p>\n<h1>浅谈 WebAuthn</h1>\n<p>在这个部分里，我们将会从基础概念开始，了解有关 WebAuthn 和密码学的一些基础知识，并最终使用第三方库实现基础的 WebAuthn 认证。如果你已经对这些内容有所了解了，可以跳到“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”继续阅读。</p>\n<h2>为什么使用 WebAuthn</h2>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\" alt=\"钓鱼邮件\" width=\"709\" height=\"693\" class=\"aligncenter size-full wp-image-2162\"></a>\n<p>相信你一定收到过类似的邮件吧？只要你点进那个最显眼的链接，你就会进入一个设置好的圈套——钓鱼网站。如果你一时糊涂在这类网站上填写了你的账号和密码，bingo，你的账号就不再是你的账号了。</p>\n<p>不过，就算你警惕心再强，也无法避免密码泄露事件。Twitter, Facebook 等都爆出过明文密码泄露事件，证明再大的公司或组织也无法避免密码泄露问题。雪上加霜的是，很大一部分用户都非常喜欢使用重复密码，这就导致一次密码泄露会牵连很多网站，用户的账户安全性完全无法得到保证。</p>\n<p>那么，有什么办法解决这些问题吗？<strong>彻底解决的方法只有一个，那就是抛弃密码。</strong>可是没有密码还怎么验证用户身份呢？这就是 WebAuthn 的用武之地了。</p>\n<p><del>没有密码的好时代，来临力！</del></p>\n<h2>什么是 WebAuthn</h2>\n<p>那么到底什么是 WebAuthn 呢？如开头所说，WebAuthn 是“一个用于访问公钥凭证的 API”，网站可以通过这个 API 进行一些高安全性的身份验证。WebAuthn 一个最常见的应用就是用于网站登录时的 2FA（双重因素验证）甚至是无密码登录。通过网页调用 WebAuthn，在不同平台下，<strong>我们可以实现通过 USB Key、指纹、面部甚至虹膜扫描来认证身份，同时确保安全和隐私。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\" alt=\"WebAuthn 可使用的各种身份认证方式\" width=\"1294\" height=\"566\" class=\"aligncenter size-full wp-image-2213\"></a>\n<p>WebAuthn 标准是 FIDO2 标准的一部分，而 FIDO2 则是由 FIDO 联盟和 W3C 共同推出的 U2F（现称作 FIDO1）的后继标准，旨在增强网络认证的安全性。</p>\n<blockquote><p>你可能了解过 U2F，那么 U2F 和 FIDO2 的区别在哪里呢？从名字上可以看出，U2F，即“通用第二因素协议”，是专注于作为密码后的第二道屏障的，而 FIDO2 增加了单因素认证功能，这意味着使用 FIDO2 可以完全替代密码，真正实现无密码登录。</p></blockquote>\n<p>FIDO2 标准主要包括四个部分，其一是用于网站和访客设备交互的 WebAuthn，而 Client to Authenticator Protocol 2（CTAP2，客户端-认证器协议）作为 WebAuthn 的补充，则是用于访客的设备和认证器交互的协议。标准的其他两个部分则是 U2F 和 UAF 规范。在这篇文章中，我们只关心 WebAuthn，不会涉及 CTAP, U2F 和 UAF 的相关知识。如果你对这段话中的一些概念不了解，不要紧张，接下来我们就来谈谈 WebAuthn 中一些常用的术语和概念。</p>\n<blockquote><p>WebAuthn 只能在安全上下文中使用，也就是说，页面需要使用 HTTPS 协议或是处于 <code>localhost</code> 中。</p></blockquote>\n<h2>常用术语和概念</h2>\n<p>WebAuthn 中有许多不常碰到的术语，不过我只会在这里介绍一些常用的术语和概念——如果你只是希望做出一个简单的实现，那么了解这一段中的一些概念就足够了。同时，由于我实在没能找到一部分术语的通用翻译，有一些术语我按着自己的理解尽可能地翻译了，有任何问题请告诉我。</p>\n<p>在一个完整的 WebAuthn 认证流程中，通常有这么几个角色：</p>\n<ul>\n<li>Relying Party 依赖方 (RP) ：指服务提供方，即网站</li>\n<li>User 用户：正准备登录的你</li>\n<li>Authenticator 认证器：通常指 USB Key 或是设备内置的指纹扫描器、虹膜扫描器、面部识别装置等，正是它们在使用流程中代替了密码甚至是用户名</li>\n<li>User Agent 用户代理：通常指浏览器或系统，负责与认证器交互</li>\n</ul>\n<p>认证过程通常分为两种：</p>\n<ul>\n<li>Registration Ceremony 注册仪式：用户向账户上添加认证器</li>\n<li>Authentication Ceremony 验证仪式：用户通过已注册的认证器验证身份</li>\n</ul>\n<p>同时，认证过程中还会产生这些内容：</p>\n<ul>\n<li>Challenge 挑战：通常是一串随机字符串</li>\n<li>Public Key Credential 公钥凭证：由认证器产生的凭证，在技术上代替了密码</li>\n<li>Attestation 证明：注册时认证器产生的验证数据</li>\n<li>Assertion 断言：验证时认证器产生的验证数据</li>\n</ul>\n<blockquote><p><strong>请注意区分证明 (Attestation) 和断言 (Assertion)</strong>，特别是在这两个单词有些相似的情况下。在 WebAuthn 中，它们是不同过程中的类似概念，但并不相同。</p></blockquote>\n<p>如果你对于这些内容不是很理解，没有关系，我们会在“<a href=\"https://flyhigher.top/#how-to-webauthn\">使用流程</a>”一节中将这些概念放到实际情况中解释，你只要先区分这些概念即可。</p>\n<h2>安全性的基础</h2>\n<p>WebAuthn 为什么安全？和 HTTPS 一样，WebAuthn 使用非对称加密的思路来保证安全性，但侧重点又有所不同。要理解 WebAuthn 的认证流程，我们必须对非对称加密有所了解。如果你对非对称加密比较熟悉了，就直接跳到下一段吧。</p>\n<p>WebAuthn 的核心在于“认证”，即保证产生了凭证的认证器是用户的认证器，而不是第三方在伪造凭证。但为什么要使用非对称加密呢？我们可以先来看看对称加密。</p>\n<p>让我们假设小明和小红相互写信，见不到对方。这天小红突然想，给自己写信的人是不是真的小明呢？于是小红要求对方向小红证明自己是小明。怎么证明呢？他们商量出来这么一套方案：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明和小红商量一个统一的密码和密钥</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明用提前和小红商量好的密码和密钥加密文本后发回给小红</li>\n<li>小红使用相同的密码和密钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和密钥</li>\n</ol>\n<blockquote><p>在密码学中，我们通常把“加密算法”称为密码 (code)，和通常登录时用的密码 (password) 并非同一个概念。</p></blockquote>\n<p>在这种情况下，<strong>只要密钥不泄露</strong>，即拥有正确密钥的只有小明和小红，那么小红就能确定对方一定是小明。但这样的问题也很明显，如果小明和小红不能见面，那么他们就必须先以明文交换密码——<strong>在这个过程中一旦有人窃取到了密码，这个认证就无效了。</strong></p>\n<p>这时我们就需要使用<strong>非对称加密</strong>来拯救破碎的信任了。非对称加密的基础是一对密钥，也就是公钥和私钥，它们是互相关联但（几乎）无法互相推导的。在非对称加密的过程中，选择相同的密码后，使用私钥加密明文得到的密文只能由对应的公钥解密，无法使用私钥解密，同时这个过程反过来也是成立的。</p>\n<blockquote><p>本文的核心并不是非对称加密算法，因此不会详述非对称加密在数学上的证明，若有兴趣可以自行了解。</p></blockquote>\n<p>这就完美解决密钥泄露的问题了。让我们回过头来看之前的例子。现在小明和小红决定使用非对称加密来证明身份，过程如下：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明提前生成一对公私钥，将公钥发送给小红，私钥自己保管，同时商量好统一的密码</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明使用商量好的密码和自己的私钥加密文本，发送给小红</li>\n<li>小红使用相同的密码和小明的公钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和私钥</li>\n</ol>\n<p>在这种情况下，<strong>只要私钥不泄露</strong>，那么小红解密得到的文本和之前发送的一致，那么就可以证明收到的密文一定是由小明加密后发送过来的。而在整个过程中，私钥都没有离开过小明，更没有经过传输，也就几乎没有泄露的可能了。这时，小红终于可以确定对面和她通信的人的确是小明了。</p>\n<p>题外话：HTTPS 虽然也应用了非对称加密，但 HTTPS 更侧重于“加密”而非“认证”，因此思路上会有些许差异。要了解关于 HTTPS 和非对称加密的更多信息，你可以阅读我之前写的这篇文章：</p>\n<p></p>\n<div class=\"mdx-post-cot\" data-mdxposturl=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdx-post-wait-out-c2\"><div class=\"mdx-post-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<span></span>\n<h2>使用流程</h2>\n<p>了解了非对称加密，我们就可以来看看 WebAuthn 的认证流程了。</p>\n<p>和普通的密码一样，<strong>使用 WebAuthn 分为两个部分，注册和验证。</strong>注册仪式会在依赖方中将认证器的一些信息和用户建立关联；而验证仪式则是验证这些信息以登确保是用户本人在登录。根据上一节的思路，我们可以知道，注册仪式就是认证器生成一对公私钥，然后将公钥交给依赖方；而验证仪式是依赖方发送给认证器一段文本，要求认证器用自己的私钥加密后发回以验证。</p>\n<p>在实际情况中，WebAuthn 是基于<strong>挑战-应答模型</strong>工作的。要更好地理解，我们直接来看具体流程。先来看看注册的流程。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\" alt=\"WebAuthn 注册流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2224\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的注册请求</li>\n<li>依赖方向浏览器发送挑战、依赖方信息和用户信息</li>\n<li>浏览器向认证器发送挑战、依赖方信息、用户信息和客户端信息以请求创建公钥凭证</li>\n<li>认证器请求用户动作，随后创建一对公私钥，并使用私钥签名挑战（即证明），和公钥一起交给浏览器</li>\n<li>浏览器将签名后的挑战和公钥发送给依赖方</li>\n<li>依赖方用公钥验证挑战是否与发送的一致，如果成功则将公钥与用户绑定，注册完成</li>\n</ol>\n<p>我也做了一个交互式的 Demo，你可以对照流程来更好地理解。</p>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\">开始注册</button> <span></span></p>\n<div></div>\n<blockquote><p>注意，这个 Demo 和下方的 Demo 都只是一个本地模拟的简单示例，没有任何数据会被上传，当然也不会对数据进行验证。</p></blockquote>\n<p>而之后的验证流程如下：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\" alt=\"WebAuthn 验证流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2226\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的验证请求</li>\n<li>依赖方向浏览器发送挑战</li>\n<li>浏览器向认证器发送挑战、依赖方信息和客户端信息以请求获取公钥凭证</li>\n<li>认证器请求用户动作，随后通过依赖方信息找到对应私钥，并使用私钥签名挑战（即断言），交给浏览器</li>\n<li>浏览器将签名后的挑战发送给依赖方</li>\n<li>依赖方用之前存储的公钥验证挑战是否与发送的一致，一致则验证成功</li>\n</ol>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\" disabled>开始验证</button> <span>在上方注册后才能验证</span></p>\n<div></div>\n<p>可以看到，WebAuthn 不仅在理论上是安全的，同时<strong>在整个过程中并没有隐私数据被传输</strong>——用户信息实际上只包含用户名和用户 ID。因此我们完全可以说 WebAuthn 是安全且私密的。</p>\n<blockquote><p>为了避免用户在不同依赖方之间被追踪，认证器通常会为每个依赖方和用户的组合都创建一对公私钥。不过，由于认证器的存储空间有限，认证器通常不会存储每一个私钥，而是会通过各类信息和烧录在认证器内的主密钥“算”出对应的私钥以实现无限对公私钥。具体算法根据不同厂商会有所不同。对于 Yubikey，你可以在<a href=\"https://developers.yubico.com/U2F/Protocol_details/Key_generation.html\">这里</a>了解更多。</p></blockquote>\n<blockquote><p>如果依赖方需要，用户同意后，发送给依赖方的公钥凭证中可以包含用于辨认认证器型号的信息，不过这对隐私的影响微乎其微。</p></blockquote>\n<h2>浏览器接口</h2>\n<p>要使用 WebAuthn，我们必须要依靠浏览器作为媒介和验证器进行交互，而这就需要浏览器对于 WebAuthn 的支持了。绝大多数新版本的现代浏览器都为 WebAuthn 提供了统一的接口，而在这一段中我们会了解如何使用相关的接口。但是在开始之前，我们可以先来看看浏览器的支持程度（2020.9）。</p>\n<div class=\"mdui-table-fluid\"><table class=\"mdui-table\">\n<thead><tr>\n<th>浏览器</th>\n<th>支持情况</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>桌面端 Chrome</td>\n<td>67+</td>\n</tr>\n<tr>\n<td>移动端 Chrome</td>\n<td>67+<sup>[1]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Firefox</td>\n<td>60+</td>\n</tr>\n<tr>\n<td>移动端 Firefox</td>\n<td>不支持<sup>[2]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Edge</td>\n<td>18+</td>\n</tr>\n<tr>\n<td>移动端 Edge</td>\n<td>不支持<sup>[3]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Safari</td>\n<td>13+</td>\n</tr>\n<tr>\n<td>移动端 Safari</td>\n<td>13.3+<sup>[4]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Opera</td>\n<td>54+</td>\n</tr>\n<tr>\n<td>移动端 Opera</td>\n<td>不支持</td>\n</tr>\n</tbody>\n</table></div>\n<p><sup>[1]</sup> 受平台限制，Chrome 在 iOS 平台上不支持 WebAuthn，在 Android 平台上支持大部分 WebAuthn 功能，但仍不支持部分特性（如 <code>userVerification</code>）。<br><sup>[2]</sup> 移动端 Firefox 80 以下的版本支持 WebAuthn 但似乎会忽略 <code>authenticatorAttachment</code> 等一部分参数，同时移动端 Firefox Beta 80 以下的版本支持 WebAuthn 但无法成功调用。自 80 版本起移动端 Firefox 暂时取消了对 WebAuthn 的支持（可能是 Bug）。<br><sup>[3]</sup> 移动端 Edge 似乎支持 WebAuthn 但无法成功调用。<br><sup>[4]</sup> Safari iOS/iPad OS 13 仅支持外部认证器，无法调用 Touch ID 或 Face ID；自 iOS/iPad OS 14 起 Safari 已支持全功能 WebAuthn，可以调用 Touch ID/Face ID</p>\n<p>当然，一众国产浏览器，包括 Samsung Browser 和 Yandex Browser，目前都不支持 WebAuthn。此外，由于 WebAuthn 涉及外部验证器和 TPM 可信平台模块等，用户的操作系统也会对 WebAuthn 的可用性造成影响。以下是一些需要注意的信息：</p>\n<ul>\n<li>Windows 10 1903 以下版本仅 Edge 能提供完整支持，其他浏览器只能使用 USB Key 等外部认证器；1903+ 中所有浏览器都可以通过 Windows Hello 带来完整的 WebAuthn 支持</li>\n<li>Android 需要安装并开启 Google 服务</li>\n<li>iOS/iPad OS 13.3 以下的版本不支持 WebAuthn，iOS/iPad OS 14 以下的版本支持有限（参考上文），iOS/iPad OS 14 开始 Safari 已支持全功能 WebAuthn（功能完整度甚至超过了 Android）</li>\n</ul>\n<p>可以看出，WebAuthn 的发展之路仍然很漫长，但好在桌面端对它的支持已经比较完善了，在一些情况下我们完全有理由使用它。</p>\n<hr>\n<p>来看看浏览器提供了怎么样的接口吧。要使用 WebAuthn，我们可以使用 <code>navigator.credentials.create()</code> 请求认证器生成公钥凭证和 <code>navigator.credentials.get()</code> 请求获取公钥凭证。</p>\n<blockquote><p>你或许已经对 Credential Management API 有所了解了。通过这些 API，我们还可以实现一些有趣的特性，不过这值得另开一篇文章来讲了。</p></blockquote>\n<p>对于一个基础的实现，<code>navigator.credentials.create()</code> 需要传入的参数如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        challenge,\r\n        rp: {\r\n            id,\r\n            name\r\n        },\r\n        user: {\r\n            id,\r\n            name,\r\n            displayName\r\n        },\r\n        pubKeyCredParams: [\r\n            {\r\n                type: \"public-key\",\r\n                alg\r\n            }\r\n        ],\r\n        authenticatorSelection: {\r\n            authenticatorAttachment,\r\n            userVerification\r\n        },\r\n        excludeCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>在 <code>navigator.credentials.create()</code> 方法中，我们必须传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值。这指明了我们需要创建公钥凭证，而非普通的密码凭证。然后，在 <code>publicKey</code> 对象中设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rp: Object</code>：依赖方信息，其中有一项为必须：\n<ul>\n<li>\n<code>rp.id: String</code>：（可选）依赖方 ID，必须为当前域名或为当前域名的子集的域名（不是子域名）。如域名为 <code>test.123.example.com</code>，则依赖方 ID 可以是 <code>test.123.example.com</code>, <code>123.example.com</code> 或 <code>example.com</code>。不指定则默认使用当前域名</li>\n<li>\n<code>rp.name: String</code>：依赖方名称，用于方便用户辨认</li>\n</ul>\n</li>\n<li>\n<code>user: Object</code>：用户信息，其中有三项为必须：\n<ul>\n<li>\n<code>user.id: Uint8Array</code>：转换为 <code>Uint8Array</code> 的字符串。<strong>出于安全考量，这应尽可能不与任何用户信息相关联，如不要包含用户名、用户邮箱等</strong>\n</li>\n<li>\n<code>user.name: String</code>：登录用户名</li>\n<li>\n<code>user.dispalyName: String</code>：用于显示的用户名称，显示与否的具体行为取决于浏览器</li>\n</ul>\n</li>\n<li>\n<code>pubKeyCredParams: Array</code>：一个算法列表，指明依赖方接受哪些签名算法。列表的每一项都是一个对象，拥有两个属性：\n<ul>\n<li>\n<code>pubKeyCredParams[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>pubKeyCredParams[].alg: Number</code>：一个负整数，用于标明算法。具体算法对应的数字可以在 <a href=\"https://www.iana.org/assignments/cose/cose.xhtml#algorithms\">COSE</a> 找到</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection: Object</code>：（可选）用于过滤正确的认证器，这里介绍常用的一个参数：\n<ul>\n<li>\n<code>authenticatorSelection.authenticatorAttachment: String</code>：（可选）指定要求的认证器类型。如果没有满足要求的认证器，认证可能会失败。该参数可以为 <code>null</code>（表示接受所有类型的认证器）或是以下两个值之一：\n<ul>\n<li>\n<code>platform</code>：表示仅接受平台内置的、无法移除的认证器，如手机的指纹识别设备</li>\n<li>\n<code>cross-platform</code>：表示仅接受外部认证器，如 USB Key</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection.userVerification: String</code>：（可选）指定认证器是否需要验证“用户为本人 (User Verified, UV)”，否则只须“用户在场 (User Present, UP)”。具体验证过程取决于认证器（不同认证器的认证方法不同，也有认证器不支持用户验证），而对验证结果的处理情况则取决于依赖方。该参数可以为以下三个值之一：\n<ul>\n<li>\n<code>required</code>：依赖方要求用户验证</li>\n<li>\n<code>preferred</code>：（默认）依赖方希望有用户验证，但也接受用户在场的结果</li>\n<li>\n<code>discouraged</code>：依赖方不关心用户验证。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>excludeCredentials: Array</code>：（可选）用于标识要排除的凭证，可以避免同一个用户多次注册同一个认证器。如果用户试图注册相同的认证器，用户代理会抛出 <code>InvalidStateError</code> 错误。数组中的每一项都是一个公钥凭证对象，包含以下属性：\n<ul>\n<li>\n<code>excludeCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>excludeCredentials[].id: Uint8Array</code>：要排除的凭证 ID</li>\n<li>\n<code>excludeCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，超时后将强制终止 <code>create()</code> 并抛出错误。若不设置，将使用用户代理的默认值；若太大或太小，则使用最接近的用户代理默认值范围中的值。推荐值为 5000-120000</li>\n</ul>\n<blockquote><p>对于 <code>pubKeyCredParams</code>，通常我们只需添加 ES256 (alg: -7) 算法即可兼容大部分外部认证器，此外，再添加 RS256 (alg: -257) 算法即可兼容大部分平台内置认证器（如 Windows Hello）。当然，前端添加算法之后，后端也需要相应的算法支持。</p></blockquote>\n<blockquote><p>对于 <code>userVerification</code>，由于默认值 \"preferred\" 并不能很好地被所有设备支持，因此无论在 <code>create()</code> 中还是 <code>get()</code> 中不指定该参数都会在 Chrome 中触发一条警告。具体请参阅<a href=\"https://chromium.googlesource.com/chromium/src/+/master/content/browser/webauth/uv_preferred.md\">这个页面</a>。</p></blockquote>\n<p>调用 <code>create()</code> 之后，我们就可以拿到一个 <code>Promise</code>，并可以在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>create()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAttestationResponse {\r\n        attestationObject: ArrayBuffer(390) {},\r\n        clientDataJSON: ArrayBuffer(121) {}\r\n    },\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\",\r\n    type: \"public-key\"\r\n}</pre>\n<p>其中有：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：<code>AuthenticatorAttestationResponse</code> 对象，是 <code>PublicKeyCredential</code> 的主要部分，包含以下两个内容：\n<ul>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n<li>\n<code>response.attestationObject: ArrayBuffer</code>：CBOR 编码的认证器数据，包含凭证公钥、凭证 ID、签名（如果有）、签名计数等信息</li>\n</ul>\n</li>\n</ul>\n<p>然后将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串，我们就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证与注册了。具体怎么操作，我们会在下文详细讨论。当然，别忘了 <code>catch()</code> 注册过程中抛出的任何错误。</p>\n<blockquote><p>你可能会认为在所有情况下，注册时认证器都会对挑战进行签名。实际上在大部分情况下（同时也是默认情况），<strong>注册时认证器并不会对挑战进行签名</strong>，<code>attestationObject</code> 并不会包含签名后的挑战。只有依赖方明确要求证明且用户同意（部分浏览器要求）后认证器才会对挑战进行签名（具体实现据情况会有所不同）。对此，<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion#Attestation\">MDN 解释道</a>“大部分情况下，用户注册公钥时我们会使用「初次使用时信任模型」(TOFU) ，此时验证公钥是没有必要的。”要了解更多关于证明的内容，请参阅“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>而对于 <code>navigator.credentials.get()</code>，我们可以传入如下的参数：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.get({\r\n    publicKey: {\r\n        challenge,\r\n        rpId,\r\n        userVerification,\r\n        allowCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>和 <code>create()</code> 一样，对于 <code>get()</code> 我们需要传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值，指明我们需要获取的是公钥凭证而非普通的密码凭证。在 <code>publicKey</code> 对象中我们可以设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rpID: String</code>：（可选）依赖方 ID，需要和注册认证器时的一致。规则和上述的 <code>rp.id</code> 一致，不指定默认使用当前域名</li>\n<li>\n<code>userVerification: String</code>：和上文一样，只是需要注意它这次不在 <code>authenticatorSelection</code> 中了</li>\n<li>\n<code>allowCredentials: Array</code>：（可选）用于标识允许的凭证 ID，使用户代理找到正确的认证器。只有符合这个列表中凭证 ID 的凭证才能被成功返回。数组中的每一项都是对象，包含以下属性：\n<ul>\n<li>\n<code>allowCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>allowCredentials[].id: Uint8Array</code>：允许的凭证 ID</li>\n<li>\n<code>allowCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，和上面的一样，推荐值为 5000-120000</li>\n</ul>\n<p>嗯，要传入的参数少多了。之后，和 <code>create()</code> 一样，调用 <code>get()</code> 之后，我们就可以拿到一个 <code>Promise</code> 并在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>get()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAssertionResponse {\r\n        authenticatorData: ArrayBuffer(37) {},\r\n        signature: ArrayBuffer(256) {},\r\n        userHandle: ArrayBuffer(64) {},\r\n        clientDataJSON: ArrayBuffer(118) {}\r\n    }\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\"\r\n    type: \"public-key\"\r\n}</pre>\n<p>这里的东西就比 <code>create()</code> 时拿到的要多了。看看我们拿到了什么吧：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：对于验证流程，认证会返回 <code>AuthenticatorAssertionResponse</code> 而不是 <code>AuthenticatorAttestationResponse</code> 对象，这个对象包含以下 4 个属性：\n<ul>\n<li>\n<code>response.authenticatorData: ArrayBuffer</code>：认证器信息，包含认证状态、签名计数等</li>\n<li>\n<code>response.signature: ArrayBuffer</code>：被认证器签名的 <code>authenticatorData</code> + <code>clientDataHash</code>（<code>clientDataJSON</code> 的 SHA-256 hash）</li>\n<li>\n<code>response.userHandle: ArrayBuffer</code>：<code>create()</code> 创建凭证时的用户 ID <code>user.id</code>。许多 U2F 设备不支持这一特性，这一项将会是 <code>null</code>\n</li>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n</ul>\n</li>\n</ul>\n<p>同样地，我们将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串后就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证了。至于具体怎么做，别急，马上就来讲一讲。</p>\n<h2>简单实现</h2>\n<p>了这么多，我们终于可以实现一个简单的 WebAuthn 认证页面了。由于在实际操作中 WebAuthn 相关的数据解码和密码计算比较复杂，在服务器端我们可以使用第三方库来帮我们做这些脏活累活，我们只需专注于具体流程就可以了。</p>\n<p>要寻找可用的第三方库，你可以在 <a href=\"https://webauthn.io/\">webauthn.io</a> 上找到适用于各种语言的第三方库——除了 PHP（笑）。不过好在你可以在 GitHub 上找到几个不错的 PHP WebAuthn 库，比如 <a href=\"https://github.com/web-auth/webauthn-framework\">web-auth/webauthn-framework</a>。</p>\n<p>在我们的这个例子中，我们关心的主要是前端逻辑；而后端我们可以使用各类几乎已经做到开箱即用的第三方库，这样我们可以专注于流程而不必关心细节。当然如果你想了解后端的解码细节，可以阅读“<a href=\"https://flyhigher.top/#webauthn-decode\">手动解个码</a>”一节。</p>\n<hr>\n<p>让我们先从注册开始吧。现在，用户点击了注册认证器的按钮，一个请求被发送给服务器（也就是依赖方）。在最简单的情况中，依赖方需要将三个内容发送给浏览器：<strong>挑战、用户信息和用户已注册的凭证 ID 列表（即 <code>excludeCredentials</code>）</strong>。当然依赖方也可以自由选择发送更多信息，只要最终前端能构建合法的参数即可。</p>\n<p>挑战最终会被转换为 <code>Uint8Array</code>，即一组 0-255 的整数。如果使用 PHP，在后端我们可以这样生成 Base64 编码的挑战：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"php\">$challenge = \"\";\r\nfor($i = 0; $i \n<p>对于用户信息，我们需要登录名、显示名称和 ID 三项内容。我们可以从数据库中取出用户信息，也可以新建一份。需要注意的是，<strong>出于安全和隐私的考量，ID 不应该包含用户的任何信息，比如用户邮箱等。</strong>推荐的做法是和挑战一样，生成一个随机字符串/一组随机数，并将其于用户关联起来以供之后使用。</p>\n<p>发送已注册的凭证 ID 列表是为了防止用户重复注册同一个认证器。正确设置该列表后，如果用户试图注册同一个认证器，浏览器会中止流程并抛出 <code>InvalidStateError</code>。</p>\n<p>最后，别忘了将挑战等一些后续可能会用到的信息临时存储起来。Session 就是一个很好的选择。</p>\n<p>将所有信息发送到浏览器之后，我们应该可以构建出新建凭证所需的参数了。由于有多个参数需要以 <code>Uint8Array</code> 的形式传入，我们可以准备一个简单的工具函数帮我们将 Base64 的字符串转为 <code>Uint8Array</code>。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function str2ab(str){\r\n    return Uint8Array.from(window.atob(str), c=&gt;c.charCodeAt(0));\r\n}</pre>\n<p>除了 <code>challenge</code>, <code>rp</code>, <code>user</code> 和 <code>excludeCredentials</code> 几部分需要你根据具体情况设置外，上文提到的其他参数一般可以这么设置：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">publicKey: {\r\n    challenge, // 自行设置\r\n    rp, // 自行设置\r\n    user, // 自行设置\r\n    pubKeyCredParams: [\r\n        {\r\n            type: \"public-key\",\r\n            alg: -7 // ES256\r\n        },\r\n        {\r\n            type: \"public-key\",\r\n            alg: -257 // RS256\r\n        }\r\n    ],\r\n    authenticatorSelection: {\r\n        userVerification: \"discouraged\",\r\n        authenticatorAttachment: null // 除非用户指定，大部分情况下无需指定\r\n    },\r\n    excludeCredentials, // 自行设置\r\n    timeout: 60000\r\n}</pre>\n<p>然后就是传入 <code>navigator.credentials.create()</code>，拿到 <code>PublicKeyCredential</code>。如果一切顺利，接下来我们就需要考虑如何将返回的内容传回依赖方了。由于我们拿到的很多都是 <code>ArrayBuffer</code>，我们需要将其进行编码。再准备一个工具函数吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function array2b64String(a) {\r\n    return window.btoa(String.fromCharCode(...a));\r\n}</pre>\n<p>然后适当处理，我们就可以得到一个方便传输的 JSON 字符串了：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({publicKey}).then((credentialInfo) =&gt; {\r\n    const publicKeyCredential = {\r\n        id: credentialInfo.id,\r\n        type: credentialInfo.type,\r\n        rawId: array2b64String(new Uint8Array(credentialInfo.rawId)),\r\n        response: {\r\n            clientDataJSON: array2b64String(new Uint8Array(credentialInfo.response.clientDataJSON)),\r\n            attestationObject: array2b64String(new Uint8Array(credentialInfo.response.attestationObject))\r\n        }\r\n    };\r\n    return publicKeyCredential;\r\n}).then(JSON.stringify).then((authenticatorResponseJSON) =&gt; {\r\n    // 可以发送了\r\n}).catch((error) =&gt; {\r\n    console.warn(error); // 捕获错误\r\n})</pre>\n<p>依赖方收到数据以后，还需要做三件事：验证挑战、存储凭证 ID 和存储公钥。如果数据解码顺利，且收到的挑战和之前发送的一致，就可以认为注册成功，将凭证 ID 及公钥与用户关联起来。这一步有很多第三方库可以帮我们做，对于基础实现我们就不深入探究了。</p>\n<blockquote><p>由于不同厂商的认证器的实现方式不同，<strong>我们并不能保证凭证 ID 一定是全局唯一的</strong>，也就是说，凭证 ID 有可能碰撞——即使这些凭证实际上是不同的。依赖方在实现凭证 ID 的存储及查找时，需要注意和用户 ID 结合进行存储或查找，或是直接在注册认证器时在服务器端对比阻止相同的凭证 ID。</p></blockquote>\n<hr><p>接下来就可以进行验证了。某天，用户点击了验证按钮准备登录，于是浏览器发送了验证请求到依赖方，同时附上要登录的用户名。接下来依赖方至少需要发送两项内容给浏览器：<strong>挑战和用户已绑定的凭证 ID 列表（即 <code>allowCredentials</code>）。</strong></p>\n<p>之后前端的处理流程就和注册时基本一致了。只是需要注意验证流程中获取到的 <code>PublicKeyCredential</code> 的结构和注册时的稍有不同。</p>\n<p>当浏览器将数据传回后，依赖方需要做的事情就比之前要麻烦一些了。依赖方需要验证挑战，并用之前存储的公钥验证签名和签名计数。同样地，这一步有很多第三方库可以帮我们做。最后，如果验证全部通过，我们就可以允许用户登录了。</p>\n<p>到目前为止，我们已经实现了一个简单的 WebAuthn 验证服务。不过这只是一个最基础的实现，对于很多高安全要求的身份认证这是远远不够的。因此，我们需要摆脱对第三方库的依赖，深入了解 WebAuthn。你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分，不过对于基础的 WebAuthn 实现，我们的旅程就到这里了。</p>\n<h2>拓展阅读</h2>\n<p>如果你的目标只是快速了解如何开发 WebAuthn，那么你阅读到这里就可以了。同时，上一节例子中的部分代码来自于我为了这篇文章开发的 WordPress 插件 WP-WebAuthn，这个插件可以为你的 WordPress 启用 WebAuthn 无密码登录（并非二步验证），你可以查阅插件的 <a href=\"https://github.com/yrccondor/wp-webauthn\">GitHub 存储库</a>了解更多，也可以自己安装试一试。</p>\n<p>如果你正在使用 Chrome 开发，Chrome 87+ 版本添加了一个 WebAuthn 开发者面板，可以帮助你在没有任何实体验证器的情况下开发 WebAuthn 功能。你可以在 Google 的<a href=\"https://developers.google.com/web/tools/chrome-devtools/webauthn\">这篇文章</a>中了解更多。不够，如果你正在使用 Firefox，很遗憾目前我还没有找到对应的开发工具或是浏览器扩展可用。</p>\n<p>如果你希望了解更多关于非对称加密的数学证明，可以查阅阮一峰老师的<a href=\"http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html\">这篇文章</a>。</p>\n<p>如果你希望了解更多关于 Credential Management API 的信息，可以查阅<a href=\"https://medium.com/dev-channel/sign-in-on-the-web-credential-management-api-and-best-practices-d21aed14b6fe\">这篇文章</a>（英文）。</p>\n<p>如果你希望了解更多 WebAuthn 的细节，可以继续往下阅读。<span></span></p>\n<h1>深入了解 WebAuthn</h1>\n<p>如上文所说，如果摆脱对第三方库的依赖，或是要实现更安全的 WebAuthn，我们必须深入了解 WebAuthn。在这一部分中，我们会详细讨论上文没有提到的一些概念和参数，并了解 WebAuthn 中各类数据的结构以实现解码与验证。先来看一看一些进阶的选项吧。</p>\n<h2>进阶选项</h2>\n<p>没错，上文提到的传入 <code>navigator.credentials.create()</code> 和 <code>navigator.credentials.get()</code> 方法的参数其实只是所有参数的一部分。对于 <code>create()</code>，我们还可以配置这些可选内容（上文提及的已省略）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        rp: {\r\n            icon\r\n        },\r\n        user: {\r\n            icon\r\n        },\r\n        attestation,\r\n        authenticatorSelection: {\r\n            requireResidentKey\r\n        },\r\n        extensions\r\n    }\r\n})</pre>\n</pre>\n<ul>\n<li>\n<code>rp.icon: String</code> 和 <code>user.icon</code>：是的，你可以为依赖方和用户设置图标，可以使用 HTTPS URL 或 Base64，一般长度不能超过 128 字节，不过大部分浏览器不会显示图标，或是有非常小的图片体积限制，所以一般没有使用这一属性的必要</li>\n<li>\n<code>attestation: String</code>：表明依赖方是否需要证明。可选三个值：\n<ul>\n<li>\n<code>none</code>：（默认）不需要证明。如上文所述，依赖方不关心证明，因此认证器不会签名。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n<li>\n<code>indirect</code>：依赖方需要证明，但证明方式可由认证器选择。在支持匿名证明的认证器上，认证器会通过匿名证明的方式签名挑战，并向依赖方提供签名方式等信息</li>\n<li>\n<code>direct</code>：依赖方要求直接证明。此时认证器会使用烧录在认证器中的公钥进行签名，同时向依赖方提供签名方式等信息以供依赖方验证认证器是否可信。更多信息可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节</li>\n</ul>\n</li>\n<li>在 <code>authenticatorSelection</code> 中，我们还可以设置两个可选属性：\n<ul>\n<li>\n<code>authenticatorSelection.requireResidentKey: Boolean</code>：是否要求将私钥钥永久存储于认证器中。默认值为 <code>false</code>。对于 iOS/iPad OS 13，必须设置为 <code>false</code>，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n<li>\n<code>extensions: Object</code>：WebAuthn 扩展，可以提供规范之外的配置和响应。由于实际情况中很少会使用这一特性，我们不会在这篇文章中讨论它</li>\n\n<blockquote><p>将 <code>requireResidentKey</code> 设置为 <code>true</code> 可以实现无用户名的登录，即认证器同时替代了用户名和密码。需要注意的是，尽管大部分认证器可以实现无限对公私钥，<strong>但能永久存储的私钥数量是有限的</strong>（对于 Yubikey，这通常是 25），因此只应在真正需要的时候启用此特性。我们会在“<a href=\"https://flyhigher.top/#login-without-username\">无用户名登录</a>”一节中详细讨论原因。</p></blockquote>\n<blockquote><p><strong>如果你没有高安全需求（如银行交易等），请不要向认证器索取证明</strong>，即将 <code>attestation</code> 设置为 \"none\"。对于普通身份认证来说，要求证明不必要的，且会有浏览器提示打扰到用户。</p></blockquote>\n<blockquote><p>Android 暂时无法实施用户验证，进而会导致依赖方验证失败。你可以在<a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=997538\">这里</a>追踪这个特性的实现情况。</p></blockquote>\n<blockquote>\n<p>对于 <code>extensions</code>，由于目前浏览器支持和应用范围有限，我们不会在这篇文章中涉及，不过你可以看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    uvm: true, // 要求认证器返回用户进行验证的方法\r\n    txAuthSimple: \"Please proceed\" // 在认证器上显示与交易有关的简短消息\r\n}</pre>\n<p>你可以在<a href=\"https://www.w3.org/2019/01/webauthn-extensions.html\">这个页面</a>了解更多关于 <code>extensions</code> 的信息。</p>\n</blockquote>\n<p>对于 <code>get()</code>，我们其实只有一个可选内容没讲了，即 <code>extensions</code>。和上文一样，我们不会在这篇文章中讨论它。</p>\n<p>就这些了！<span></span></p>\n<h2>手动解个码</h2>\n<p>是时候看看如何手动解码了。我们将会在这一节中讨论认证器返回的数据的结构以及如何正确地解码它们。</p>\n<p>首先我们来看看如何处理注册过程中认证器发回的数据。假设所有 <code>ArrayBuffer</code> 类型的值都被正确地以 Base64 编码，且后端已经将 JSON 的字符串解析为字典。先来复习一下，我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"ZRBkDBCEtq...9XY8atOcbg\",\r\n    type: \"public-key\",\r\n    rawId: \"ZRBkDBCEtq...9XY8atOcbg==\",\r\n    response: {\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...i5jcmVhdGUifQ==\",\r\n        attestationObject: \"o2NmbXRkbm9uZWd...xNHuAMzz2LxZA==\"\r\n    }\r\n}</pre>\n<p>这里的 <code>id</code> 就是凭证的 ID，如果验证正确，我们最终要将它存储起来并于用户关联。同时可以看到 Base64 编码后的 <code>rawId</code> 其实和 <code>id</code> 是一致的（不过 <code>id</code> 是 Base64URL 编码的）。而 <code>type</code> 则一定是 \"public-key\"。</p>\n<p>不过，我们主要关心的还是 <code>respose</code> 中的两项内容。首先是 <code>clientDataJSON</code>。它的处理比较简单，看名字就知道，它应该是一个 JSON 字符串。</p>\n<blockquote><p>小技巧：如果你看到一个 Base64 编码的字符串以 \"ey\" 开头，那么它大概率是一个 Base64 编码的 JSON。</p></blockquote>\n<p>将<code>clientDataJSON</code> Base64 解码再 JSON 解码之后我们就能得到一个字典：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"NI4i1vsNmP2KHcmyFnBCKRVQPfHgg34SsYZUOPZY2lM\",\r\n    extra_keys_may_be_added_here: \"do not compare clientDataJSON against a template. See https://goo.gl/yabPex\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>结构一目了然。在这里，我们需要验证三项内容：</p>\n<ul>\n<li>\n<code>challenge</code> 和之前发送的一致</li>\n<li>\n<code>origin</code> 为创建凭证的页面的源（协议+主机名+端口号，并非 URL）</li>\n<li>\n<code>type</code> 为 \"webauthn.create\"</li>\n</ul>\n<p>同时可以注意到有一个奇怪的 <code>extra_keys_may_be_added_here</code>。这其实是 Google 在 Chrome 中搞的一点小把戏，有一定概率会出现，提醒我们需要将 JSON 解析后再验证键值以防额外插入的键值影响验证。具体信息你可以访问那个 URL 看一看。</p>\n<p>对于 Firefox，我们会多得到两项 <code>clientExtensions</code> 和 <code>hashAlgorithm</code> ，分别指明了客户端扩展数据和签名算法。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"3-4\">{\r\n    challenge: \"dg6ost6ujhAA0g6WqLe-SOOH-tbhvjW9Sp90aPKlLJI\",\r\n    clientExtensions: {},\r\n    hashAlgorithm: \"SHA-256\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>由于本文不考虑扩展数据，因此我们可以不考虑 <code>clientExtensions</code>。同时由于目前规范中指定的签名算法只有 SHA-256 一种，因此现阶段我们也可以简单地忽略 <code>hashAlgorithm</code>。</p>\n<p><code>clientDataJSON</code> 很简单地就处理完了。接下来我们要来看看 <code>attestationObject</code>。先来看看 <code>attestationObject</code> 的结构图示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\" alt=\"attestationObject 的结构\" width=\"1056\" height=\"532\" class=\"aligncenter size-full wp-image-2245\"></a>\n<p><code>attestationObject</code> 是 CBOR 编码后再被 Base64 编码的，因此我们需要额外对其进行 CBOR 解码。</p>\n<blockquote><p>CBOR (Concise Binary Object Representation, 简明二进制对象表示) 是一种多应用于物联网领域的编码方式，你可以将它看作体积更小、更方便物联网传输的二进制 JSON。大部分语言都可以找到对应的 CBOR 解码库。</p></blockquote>\n<p>我们当然不会手解 CBOR，直接来看看解开之后的样子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"none\",\r\n    attStmt: {},\r\n    authData: [211, 217, 43, 24, 199, ..., 97, 238, 166, 67, 107]\r\n}</pre>\n<p>这些键值的含义如下：</p>\n<ul>\n<li>\n<code>fmt</code>：标明证明的格式。WebAuthn 预定义了几种格式，分别为：\n<ul>\n<li>\n<code>none</code>：没有证明</li>\n<li>\n<code>packed</code>：为 WebAuthn 优化的证明格式</li>\n<li>\n<code>android-safetynet</code>：Android 使用的格式</li>\n<li>\n<code>android-key</code>：又是 Android 使用的格式</li>\n<li>\n<code>fido-u2f</code>：FIDO U2F 认证器使用的格式</li>\n<li>\n<code>tpm</code>：TPM 可信平台模块使用的格式</li>\n</ul>\n</li>\n<li>\n<code>attStmt</code>：证明对象，具体格式根据 <code>fmt</code> 的不同会有所不同</li>\n<li>\n<code>authData</code>：包含公钥、签名计数等来自认证器的数据</li>\n</ul>\n<p>诶，例子里的 <code>attStmt</code> 怎么是空的？还记得之前说的吗？大部分情况下，<strong>如果依赖方不要求证明，那么认证器不会签名挑战</strong>，于是 <code>fmt</code> 会变为 \"none\"，<code>attstmt</code> 会为空。如果不是高安全要求，我们可以只对这一种情况做支持。</p>\n<blockquote><p>注意，部分情况下 Firefox 会在不要求证明（即 <code>attestation</code> 为 \"none\"）时会返回 <code>fmt</code> 为 \"packed\" 的证明。<strong>这是符合规范的。</strong>此时认证器会进行自证明，你可以视情况进行处理。具体可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>对于非 \"none\" 的 <code>fmt</code> 我们稍后再谈，现在我们先来看看 <code>authData</code>。来复习一下 <code>authData</code> 的结构：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\" alt=\"authData 的结构\" width=\"1056\" height=\"384\" class=\"aligncenter size-full wp-image-2240\"></a>\n<p>对于它的解码比较简单粗暴，我们要做的就是根据图示将它切开，然后适当地转换类型。其中各部分的含义如下：</p>\n<ul>\n<li>\n<code>rpIdHash</code>：如其名，SHA-256 的 <code>rpId</code>，长度 32 字节</li>\n<li>\n<code>flags</code>：标识认证状态，长度 1 字节。其中 8 位分别为：\n<ul>\n<li>\n<code>ED</code>：是否有扩展数据</li>\n<li>\n<code>AT</code>：是否包含 <code>attestedCredentialData</code>。通常注册认证器时会包含 <code>attestedCredentialData</code>，而验证时不包含</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>\n<code>UV</code>：用户是否已验证</li>\n<li>保留位</li>\n<li>\n<code>UP</code>：用户是否在场</li>\n</ul>\n</li>\n<li>\n<code>signCount</code>：签名计数，长度 4 字节</li>\n<li>\n<code>attestedCredentialData</code>：包含公钥等凭据数据，变长。其结构如下：\n<ul>\n<li>\n<code>aaguid</code>：认证器的 AAGUID (Authenticator Attestation GUID)，对于同一型号的认证器，它们的 AAGUID 是相同的</li>\n<li>\n<code>credentialIdLength</code>：标识 <code>credentialId</code> 的长度，长度 2 字节</li>\n<li>\n<code>credentialId</code>：凭证 ID，和 <code>rawId</code> 一致，长度由 <code>credentialIdLength</code> 定义</li>\n<li>\n<code>credentialPublicKey</code>：CBOR 编码的 COSE 格式的凭证公钥，变长</li>\n</ul>\n</li>\n<li>\n<code>extensions</code>：扩展数据，变长，本文不讨论</li>\n</ul>\n<blockquote><p>出于隐私考虑，如果不要求证明，认证器会以 0 填充 AAGUID。</p></blockquote>\n<p>如果你的后端在使用 Node.js，这里有个工具函数可以帮你完成这一步（不考虑 <code>extensions</code>）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function parseAuthData(buffer){\r\n    let rpIdHash = buffer.slice(0, 32);\r\n    buffer = buffer.slice(32);\r\n  \r\n    let flagsBuf = buffer.slice(0, 1);\r\n    buffer = buffer.slice(1);\r\n\r\n    let flagsInt = flagsBuf[0];\r\n    let flags = {\r\n        up: !!(flagsInt &amp; 0x01),\r\n        uv: !!(flagsInt &amp; 0x04),\r\n        at: !!(flagsInt &amp; 0x40),\r\n        ed: !!(flagsInt &amp; 0x80),\r\n        flagsInt\r\n    }\r\n\r\n    let counterBuf = buffer.slice(0, 4);\r\n    buffer = buffer.slice(4);\r\n  \r\n    let counter = counterBuf.readUInt32BE(0);\r\n\r\n    let aaguid = undefined;\r\n    let credID = undefined;\r\n    let COSEPublicKey = undefined;\r\n\r\n    if(flags.at) {\r\n        aaguid = buffer.slice(0, 16);\r\n        buffer = buffer.slice(16);\r\n\r\n        let credIDLenBuf = buffer.slice(0, 2);\r\n        buffer = buffer.slice(2);\r\n\r\n        let credIDLen = credIDLenBuf.readUInt16BE(0);\r\n        credID = buffer.slice(0, credIDLen);\r\n\r\n        buffer = buffer.slice(credIDLen);\r\n        COSEPublicKey = buffer;\r\n    }\r\n\r\n    return {rpIdHash, flagsBuf, flags, counter, counterBuf, aaguid, credID, COSEPublicKey}\r\n}</pre>\n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>解开后，依赖方至少需要做四件事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>存储签名计数</li>\n<li>存储公钥</li>\n</ol>\n<blockquote><p>签名计数不一定从 0 开始。</p></blockquote>\n<p>对于公钥，也就是 <code>credentialPublicKey</code>，我们需要多一次 CBOR 解码，然后就可以得到类似这样的公钥：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    kty: \"EC\",\r\n    alg: \"ECDSA_w_SHA256\",\r\n    crv: \"P-256\",\r\n    x: \"ZGQALNfqo0L7HFYQHFHCS/X5db49z0ePnuQEs3w3X8w=\",\r\n    y: \"6qYxhnjYuez/Q8N6vX7nIIGfxFWdZ25NzQfZYuYOalA=\"\r\n}</pre>\n<p>然后可以选择适当的方法将其存储起来，之后的步骤本文就不再赘述了。现在，将目光拉回来，让我们看看包含证明的 <code>attestationObject</code> 是怎么样的。我们来看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"packed\",\r\n    attStmt: {\r\n        alg: -7,\r\n        sig: [48, 70, 2, 33, 0, ..., 132, 78, 46, 100, 21],\r\n        x5c: [\r\n            [48, 130, 2, 189, 48, 130, 1, 165, 160, 3, ..., 177, 48, 125, 191, 145, 24, 225, 169, 41, 248]\r\n        ]\r\n    },\r\n    authData: [211, 217, 43, 24, 199, ..., 158, 54, 87, 126, 54]\r\n}</pre>\n<p>这里有一个使用 \"packed\" 格式的证明。此时，<code>attStmt</code> 中包含三个值：</p>\n<ul>\n<li>\n<code>alg</code>：签名算法</li>\n<li>\n<code>sig</code>：签名值</li>\n<li>\n<code>x5c</code>：X.509 编码的证书链</li>\n</ul>\n<p>我们不会在这一节中详述对签名的验证。要了解更多信息，你可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。现在，让我们来看看如何处理验证过程中认证器发回的数据。我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"hmqdxPLit9...BWeVxZqdvU\",\r\n    type: \"public-key\",\r\n    rawId: \"hmqdxPLit9V...BWeVxZqdvU=\",\r\n    response: {\r\n        authenticatorData: \"09krGMcWTf...UFAAAABA==\",\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...XRobi5nZXQifQ==\",\r\n        signature: \"UsXZV3pvT3np8btj6V0g...WBkaqyt88DrD40qh+A==\",\r\n        userHandle: \"MmYxNWYzZjQyZjM...Tg2ZDY4NzhlNw==\"\r\n    }\r\n}</pre>\n<p><code>id</code>, <code>rawId</code> 和 <code>type</code> 和之前一样，这里就不再赘述了。让我们来看看 <code>response</code>。首先是 <code>clientDataJSON</code>，和之前的解法一样，要验证的内容也一样，只是 <code>type</code> 从 \"webauthn.create\" 变成了 \"webauthn.get\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"bnkd2CmrEuvKnAFXs2QlC3SKlg4XFvGtP4HJL1yEWyU\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.get\"\r\n}</pre>\n<p>然后是 <code>userHandle</code>。前面讲过，这是认证器在创建凭证时的用户 ID。如果用户在使用 U2F 认证器，很可能这一项为空，所以大部分情况下我们不关心这一项。</p>\n<p>接着来看 <code>authenticatorData</code>。这其实就是之前的 <code>attestedCredentialData</code>，只是这次不包含公钥。以相同的方式切开数据，我们应该可以得到 <code>rpIdHash</code>, <code>flags</code>和 <code>signCount</code> 三项。此时，依赖方至少需要做这三样事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>验证签名计数大于之前存储的计数，并更新存储的计数</li>\n</ol>\n<blockquote><p>如果签名计数比之前的小，那么这个认证器很可能是伪造的，应该中止验证并返回验证失败。同时，签名计数不一定每次按 1 递增，通常只要计数比此前的大就认为计数检查通过。</p></blockquote>\n<p>最后，我们来看 <code>signature</code>，也就是签名。不过这个签名不是简单的对挑战的签名，具体算法如图所示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\" alt=\"签名过程\" width=\"1034\" height=\"587\" class=\"aligncenter size-full wp-image-2231\"></a>\n<p>计算签名时，认证器会将 <code>authenticatorData</code> 与 <code>clientDataHash</code>（也就是 <code>clientDataJSON</code> 的 SHA-256 Hash）拼接起来，并使用对应的私钥签名。依赖方应该使用对应的公钥将其解密，并验证内容是否是 <code>authenticatorData</code> 与 <code>clientDataHash</code> 的拼接。这部分的计算不在本文的讨论范围内。</p>\n<p>最后，如果全部验证通过，返回验证成功。<span></span></p>\n<h2>验证认证器</h2>\n<p>WebAuthn 已经很安全了，但有的时候我们还要让它更安全一点。比如，如果用户在使用伪造的或是自制的认证器，认证器的安全性就得不到保证。此时，依赖方就需要验证认证器是否是可信的认证器。</p>\n<blockquote><p>这一过程仅发生在注册认证器时。此时，如果认证器验证通过，就可以存储公钥，后续步骤和之前描述的一致。</p></blockquote>\n<blockquote><p>再次说明，如果不是对安全性有极高的要求，向认证器索取证明以验证认证器是否可信是没有必要的。此外，验证认证器需要依赖方自行维护可信认证器列表，大大增加了维护的复杂性。</p></blockquote>\n<p>在调用 <code>navigator.credentials.create()</code> 时，我们可以将 <code>attestation</code> 设置为非 \"none\" 来向认证器索取证明。除无证明外，WebAuthn 定义了四种证明方式：</p>\n<ul>\n<li>Basic Attestation (Basic) ：基础的证明方式，认证器会使用认证器私钥签名</li>\n<li>Self Attestation (Self) ：自证明，认证器会使用凭证私钥签名</li>\n<li>Attestation CA (AttCA) ：认证器会使用多个证明私钥之一签名</li>\n<li>Elliptic Curve based Direct Anonymous Attestation (ECDAA) ：通过 <a href=\"https://en.wikipedia.org/wiki/Direct_Anonymous_Attestation\">DAA</a> 实现的匿名证明</li>\n</ul>\n<blockquote><p>和验证过程一样，这里签名的目标是 <code>authenticatorData</code> 和 <code>clientDataHash</code> 的连接。</p></blockquote>\n<p>还记得 <code>create()</code> 时 <code>attestation</code> 可选的三个值吗？这个值会决定认证器最终使用哪种方式进行证明。复习一下：</p>\n<ul>\n<li>\n<code>none</code>：大部分情况下认证器会选择不进行证明，部分认证器会进行自证明。此时 AAGUID 会被 0 填充</li>\n<li>\n<code>indirect</code>：认证器会试图通过替换 AAGUID 和选择合适的证明方式来进行匿名证明，具体方式由认证器选择</li>\n<li>\n<code>direct</code>：认证器会提供最直接的证明信息</li>\n</ul>\n<p>注意，大部分情况下，当认证器需要向依赖方证明自己可信时需要提供认证器公钥，<strong>这会触发浏览器提示，只有用户同意后认证器才会进行证明，否则认证器将不提供证明。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\" alt=\"浏览器提示\" width=\"446\" height=\"283\" class=\"aligncenter size-full wp-image-2217\"></a>\n<blockquote><p>为什么浏览器会说“安全密钥的品牌和型号”？事实上，为了避免用户通过认证器证书被跨依赖方追踪，FIDO 要求使用相同认证器证书的认证器的数量不能少于 100,000。于是大部分认证器厂商会选择<strong>让同一型号的认证器共用同一份证书。</strong>因此，浏览器的会询问用户是否同意“查看安全密钥的品牌和型号”。</p></blockquote>\n<blockquote><p>Android Safety Net 不会向用户询问是否同意，而是会静默进行证明。</p></blockquote>\n<p>当证明不为空时，依赖方收到数据后根据 <code>attestationObject.fmt</code> 的不同，需要选择不同的验证方式来验证认证器的可信情况。出于篇幅原因，这里我们不会讨论每一种 <code>fmt</code> 的验证方式，更多信息你可以查阅 <a href=\"https://www.w3.org/TR/webauthn/#defined-attestation-formats\">W3C 文档</a>。</p>\n<p>当 <code>fmt</code> 为 <code>packed</code> 时，<code>attestationObject.attStmt</code> 可能会有三种格式：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// 自证明\r\n{\r\n    alg, // 算法\r\n    sig // 签名\r\n}\r\n// 基础或证明 CA 证明\r\n{\r\n    alg,\r\n    sig,\r\n    x5c // X.509 证书链\r\n}\r\n// 椭圆曲线证明\r\n{\r\n    alg,\r\n    sig,\r\n    ecdaaKeyId // ECDAA-Issuer 公钥标识符\r\n}</pre>\n<p>此时，依赖方需要检查证书符合预期格式并检查证书是否在可信链上。首先，如果证明中既没有 <code>ecdaaKeyId</code> 也没有 <code>x5c</code>，就说明这个证明使用的是自证明，只需使用认证器提供的公钥验证即可；如果有 <code>x5c</code>，那么就需要验证 <code>x5c</code> 中的证书是否在可信链上。将 <code>x5c</code> 中的每个证书以 Base64 编码，按 64 个字符切开，并在头尾加上 <code>-----BEGIN CERTIFICATE-----</code> 和 <code>-----END CERTIFICATE-----</code>就能得到一个证书字符串了。之后，依赖方需要验证证书是否可信。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function base64ToPem(b64cert){\r\n    let pemcert = '';\r\n    for(let i = 0; i \n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>至于 <code>ecdaaKeyId</code>，由于目前应用较少，处理方法可能需要你另寻资料了。检查证书的具体步骤已经超出了本文的范围，具体可以查阅<a href=\"https://medium.com/@herrjemand/verifying-fido2-packed-attestation-a067a9b2facd\">这篇文章</a>（英文）。</p>\n<blockquote><p>你可以在 <a href=\"https://fidoalliance.org/metadata/\">FIDO Metadata Service</a> 找到各大厂商认证器的可信证书链。</p></blockquote>\n<p>当在 Android 上调起 WebAuthn 时，大部分情况下 <code>fmt</code> 将会为 <code>safety-net</code>。此时 <code>attestationObject.attStmt</code> 的结构会是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    ver: \"200616037\",\r\n    response: {\r\n        type: \"Buffer\",\r\n        data: [101, 121, 74, 104, 98, ..., 115, 104, 104, 82, 65]\r\n    }\r\n}</pre>\n<p>此时，<code>clientDataJSON</code> 中还会出现 <code>androidPackageName</code> 键，值是调起 WebAuthn 验证的应用的包名，如 Chrome 就是 \"com.android.chrome\"。</p>\n<p>在这个证明中，<code>data</code> 其实是一个 JWT 字符串，我们可以将它编码为字符串并将其按照 JWT 进行解码（别忘了验证 JWT 签名）。最终我们会得到一个类似这样的 Payload：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    nonce: \"0QAurN4F9wik6GEkblDJhGuf4kuaqZn5zaaxlvD1hlA=\",\r\n    timestampMs: 1584950686460,\r\n    apkPackageName: \"com.google.android.gms\",\r\n    apkDigestSha256: \"2BQHno+bmWWwdLUYylS8HLt5ESJzci3nt2uui71ojyE=\",\r\n    ctsProfileMatch: true,\r\n    apkCertificateDigestSha256: [\r\n        \"8P1sW0EPicslw7UzRsiXL64w+O50Ed+RBICtay2g24M=\"\r\n    ],\r\n    basicIntegrity: true,\r\n    evaluationType: \"BASIC\"\r\n}</pre>\n<p>其中包含了有关设备状态的一些信息。比如说，如果 <code>ctsProfileMatch</code> 为 <code>false</code>，那么该设备很有可能被 root 了。对于高安全要求的场景，我们可以视情况进行验证。</p>\n<p>同时我们可以在 JWT Header 中验证证明的有效性。我们应该能取得这样的 Header：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    alg: \"RS256\",\r\n    x5c: [\r\n        \"MIIFkzCCBHugAwIBAgIR...uvlyjOwAzXuMu7M+PWRc\",\r\n        \"MIIESjCCAzKgAwIBAgIN...UK4v4ZUN80atnZz1yg==\"\r\n    ]\r\n}</pre>\n<p>这里的结构就和上方的 <code>x5c</code> 验证类似了。具体步骤可以参考<a href=\"https://medium.com/@herrjemand/verifying-fido2-safetynet-attestation-bd261ce1978d\">这篇文章</a>（英文）。</p>\n<p>其他所有格式的验证方式也都可以在<a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">这篇文章</a>（英文）中找到。<span></span></p>\n<h2>无用户名登录</h2>\n<p>认证器已经代替了密码，可是这还不够！在进行第一因素认证（即使用 WebAuthn 登录）时，我们还是需要输入用户名，然后才能进行身份认证。懒惰是第一生产力，我们能不能不输入用户名就进行身份认证呢？实际上，大部分认证器都允许我们无用户名登录。<strong>而这一特性的核心就是 Resident Key 客户端密钥驻留。</strong></p>\n<p>你可以思考一下，为什么普通的 WebAuthn 为什么不能实现无用户名登录？事实上，大部分认证器为了实现无限对公私钥，会将私钥通过 Key Warp 等技术加密后包含在凭证 ID 中发送给依赖方，这样认证器本身就不用存储任何信息。不过，这就导致需要身份认证时，依赖方必须通过用户名找到对应的凭证 ID，将其发送给认证器以供其算出私钥。</p>\n<blockquote><p>Yubikey 实现了一个基于 HMAC 的算法，认证器可以在私钥不离开认证器的前提下（常规的 Key Warp 算法中实际上私钥离开了认证器）通过一些输入和凭证 ID 重新计算私钥，你可以阅读<a href=\"https://www.yubico.com/blog/yubicos-u2f-key-wrapping/\">这篇文章</a>了解更多。</p></blockquote>\n<blockquote><p>客户端通过凭证 ID 查找对应认证器的算法根据系统的不同是不同的。通常凭证 ID 中会包含认证器信息，因此系统可以通过凭证 ID 找到对应的认证器。</p></blockquote>\n<p>要避免输入用户名，我们可以要求认证器将私钥在自己的内存中也存储一份。这样，依赖方无需提供凭证 ID，认证器就可以通过依赖方 ID 找到所需的私钥并签名公钥。以下是具体流程：</p>\n<p>注册时：</p>\n<ol>\n<li>依赖方请求新建凭证，同时要求启用客户端密钥</li>\n<li>认证器生成一对公私钥，并将私钥存储在永久内存中且与依赖方 ID 及用户 ID 绑定，随后将公钥发送给依赖方以供存储</li>\n<li>依赖方将用户 ID 即公钥与用户绑定</li>\n</ol><p>验证时：</p>\n<ol>\n<li>依赖方请求验证，但不必提供除依赖方 ID 以外的更多信息</li>\n<li>用户选择认证器</li>\n<li>认证器根据依赖方 ID 找到对应私钥</li>\n<li>如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录</li>\n<li>确定私钥后，认证器签名挑战并将其返回，同时返回用户 ID</li>\n<li>依赖方通过用户 ID 找到对应用户并用对应公钥检查签名，正确则允许对应用户登录</li>\n</ol><blockquote><p>可以看到，这个特性同时要求认证器存储用户 ID，即上面提到过的 <code>userHandle</code>。依赖方需要根据此信息找到对应用户，因此不支持 <code>userHandle</code> 的 U2F 认证器无法进行无用户名登录。</p></blockquote>\n<blockquote><p>如之前所说，<strong>认证器能永久存储的私钥数量是有限的</strong>，因此只应在真正需要无用户名登录的时候启用此特性。</p></blockquote>\n<blockquote><p>目前暂时没有办法检测认证器是否支持客户端密钥驻留，因此在无用户名验证失败时应 fallback 至常规的 WebAuthn 验证，即向用户询问用户名。</p></blockquote>\n<p>现在让我们来看看如何实现这一特性吧。首先，调用 <code>navigator.credentials.create()</code> 时我们需要注意两个参数：<code>requireResidentKey</code> 必须为 <code>true</code>，<code>userVerification</code> 必须为 \"required\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"5-6\">navigator.credentials.create({\r\n    publicKey: {\r\n        ...\r\n        authenticatorSelection: {\r\n            requireResidentKey: true,\r\n            userVerification: \"required\"\r\n            ...\r\n        },\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Windows Hello <strong>似乎</strong>会存储所有已注册的凭据，因此无论是否指定 <code>requireResidentKey</code>，你都可以通过 Windows Hello 进行无用户名登录。</p></blockquote>\n<p>随后，浏览器会询问用户是否允许认证器存储私钥。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\" alt=\"浏览器提示\" width=\"445\" height=\"285\" class=\"aligncenter size-full wp-image-2208\"></a>\n<p>如果用户同意，认证器会存储私钥，并和普通的 WebAuthn 一样返回信息。不过，依赖方收到数据之后，只需将公钥、用户 ID 与用户关联起来，而不必再将凭证 ID 与用户关联起来。至此注册完成。</p>\n<p>之后，在用户请求登录时，无需再向依赖方提供用户名。同时在传入 <code>navigator.credentials.get()</code> 的参数中也有两个需要注意：<code>userVerification</code> 必须为 \"required\"，同时 <code>allowCredentials</code> 必须为空。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"4-5\">navigator.credentials.get({\r\n    publicKey: {\r\n        ...\r\n        userVerification: \"required\",\r\n        allowCredentials: [],\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Android 暂不支持无用户名验证，空的 <code>allowCredentials</code> 会导致浏览器返回 <code>NotSupportedError</code> 错误。</p></blockquote>\n<p>此时，认证器会根据依赖方 ID 找到对应的私钥。如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录。用户选择后，认证器就会使用对应的私钥签名挑战并将其返回。此时，<code>userHandle</code> 一定不为空。</p>\n<p>依赖方收到数据后，需要将 <code>userHandle</code> 作为用户 ID 找到对应的用户，并使用对应的公钥验证签名。如果验证成功，则认为对应的用户身份认证成功，依赖方可以允许其登录。至此验证结束。</p>\n<blockquote><p>有的时候你可能会需要清除认证器中的密钥。绝大多数认证器都提供了对应的软件以供清除存储的密钥，但大部分情况下这会重置整个认证器，这意味着相关认证器此前的所有凭证均会失效。因此建议不要将日常使用的认证器作为开发测试用的认证器。</p></blockquote>\n<h2>从 U2F 认证迁移</h2>\n<p>如果你的服务此前提供了 U2F 第二因素认证，你可能会希望在将依赖方从 U2F 升级到 WebAuthn 时用户此前注册的 U2F 认证器仍然可用而无需重新注册。由于 WebAuthn 向后兼容 U2F 设备，用户是可以继续使用原有的 U2F 认证器的。不过，由于 WebAuthn 的依赖方 ID 与 U2F 的 <code>appid</code> 并不一定相同，你需要将原有的 U2F <code>appid</code> 随 WebAuthn 流程一起传递给认证器，认证器才能使用正确的私钥进行响应。</p>\n<p>要实现这一点，我们只需要在注册及认证仪式中使用 WebAuthn 的 <code>appid</code> 扩展。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    appid: \"https://example.com\" //U2F appid\r\n}</pre>\n<p>此时认证器便可以得到正确的私钥，之后的流程与正常情况一致；依赖方除了正常的 WebAuthn 流程外，不需要再做任何其它操作。</p>\n<h2>拓展阅读</h2>\n<p>我们的 WebAuthn 之旅到这里就真的结束了。不过，你仍然可以自行探究，了解更多。<strong>本文只是一个粗浅的使用指南</strong>，而被称为“Web 身份认证的未来”的 WebAuthn 的深层还要很多细节值得我们挖掘学习，不过本文不会再继续讨论了。</p>\n<p>如果你想了解更多关于 WebAuthn 的信息，最好的方法是直接阅读 <a href=\"https://www.w3.org/TR/webauthn\">W3C 规范</a>。此外，Yubico 也提供了不错的 <a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn 文档</a>。</p>\n<p>要了解更多认证器存储凭证的信息，你可以阅读<a href=\"https://duo.com/labs/tech-notes/how-security-keys-store-credentials\">这篇文章</a>（英文）。</p>\n<p>如果你想了解更多 Android Safety Net 是怎样运作的，可以观看<a href=\"https://youtu.be/8lv_9mydrjg\">这个视频</a>，并通过 <a href=\"https://developer.android.com/training/safetynet/attestation\">Google 的文档</a>了解 Android Safety Net 的更多信息。</p>\n<p>如果你想方便地调试 WebAuthn，<a href=\"https://webauthn.me/\">webauthn.me</a> 提供了一个非常直观方便的<a href=\"https://webauthn.me/debugger\">调试器</a>。</p>\n<h1>参考资料</h1>\n<p><a href=\"https://www.w3.org/TR/webauthn\">WebAuthn Level 1 规范 - W3C</a><br><a href=\"https://github.com/w3c/webauthn\">WebAuthn Level 2 草案 - W3C</a><br><a href=\"https://blog.techbridge.cc/2019/08/17/webauthn-intro/\">一起来了解Web Authentication - TechBridge 技术共笔部落格</a><br><a href=\"https://medium.com/@herrjemand/introduction-to-webauthn-api-5fd1fb46c285\">Introduction to WebAuthn API - Medium</a><br><a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">WebAuthn/FIDO2: Verifying responses - Medium</a><br><a href=\"https://obeta.me/posts/2019-03-01/WebAuthn%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8\">WebAuthn介绍与使用 - obeta</a><br><a href=\"https://webauthn.io/\">webauthn.io</a><br><a href=\"https://webauthn.guide/\">webauthn.guide</a><br><a href=\"https://webauthn.me/\">webauthn.me</a><br><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion\">Attestation and Assertion - MDN</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Authentication_API\">Web Authentication API - MDN</a>（顺便翻译了一半）<br><a href=\"https://fidoalliance.org/fido-technotes-the-truth-about-attestation/\">FIDO TechNotes: The Truth about Attestation - FIDO Alliance</a><br><a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn Developer Guide - Yubico</a><br><a href=\"https://en.wikipedia.org/wiki/WebAuthn\">WebAuthn - Wikipedia</a><br><a href=\"https://techcommunity.microsoft.com/t5/identity-standards-blog/all-about-fido2-ctap2-and-webauthn/ba-p/288910\">All about FIDO2, CTAP2 and WebAuthn - Microsoft Tech Community</a><br><a href=\"https://webauthn-doc.spomky-labs.com/\">Webauthn Framework</a><br><a href=\"https://zhuanlan.zhihu.com/p/25279015\">如何开发支持 FIDO U2F 登录的网站 - 知乎专栏</a><br></p></pre>\n","link":"https://flyhigher.top/develop/2160.html"},{"title":"NLP 找门：用朴素贝叶斯进行文本分类","date":"2020-01-29 11:39:58","description":"\n<blockquote>\n<p>有一天，神收到了一封垃圾邮件，于是世界上就有了朴素贝叶斯算法。</p>\n<footer>——我瞎编的</footer>\n</blockquote>\n<p>为什么这篇文章的标题是 NLP 找门呢？因为如果你看完了这篇文章，你就可以<strong>准备入门</strong>自然语言处理 (<strong>N</strong>atural <strong>L</strong>anguage <strong>P</strong>rocessing) 了。我会把这篇文章当作一篇彻彻底底的 NLP 入门文章来写，尽量避免“专业高端”词汇和“全是奇怪符号”的式子，这样<strong>只要你有高中数学基础</strong>，就能毫无压力地看完这篇文章，学会使用朴素贝叶斯分类算法分类文本。</p>\n<p>让我们开始吧。</p>\n<h1>所以，啥是朴素贝叶斯？</h1>\n<p>简单来说，朴素贝叶斯 (Naïve Bayes) <strong>是一个简单但高效的分类算法</strong>，在进行不复杂的文本分类时高效且拥有不低的准确度，判断垃圾邮件就是用朴素贝叶斯进行文本分类的一个经典例子。当然朴素贝叶斯分类不仅能用在 NLP 中，在许多分类问题中朴素贝叶斯也有非常好的效果，但我们今天只关注它在 NLP 中的应用。</p>\n<p>要了解朴素贝叶斯，我们要先来了解一下贝叶斯定理。</p>\n<blockquote>\n<p>每增加一个数学公式都会使读者减半。</p>\n<footer>——霍金</footer>\n</blockquote>\n<p>那么，就让我们先来看看贝叶斯定理的公式吧（笑</p>\n<p>$$P(A|B) = \\frac{P(AB)}{P(B)} = \\frac{P(B|A)P(A)}{P(B)}$$</p>\n<p>其实还是很简单的，运用高中的条件概率知识就能理解。本质上，贝叶斯定理给出了一种方法，使得我们可以在 \\(P(A|B)\\) 和 \\(P(B|A)\\) 之间互相转换，因为通常情况下它们是不一样的。</p>\n<p>要更好地理解，请考虑这样一个例子：</p>\n<blockquote><p>假设有一个学校图书馆，图书管理员正为找不到某本书而发愁。已知老师有 70% 的意愿借走这本书，而是学生的意愿是 30%，这个学校的师生比例是 1:10，那么借走这本书的人是老师的概率有多大？</p></blockquote>\n<p>设学校总人数为 \\(T\\)，我们可以很容易地写出这样的一个式子：</p>\n<p>$$\\begin{align} P &amp; = \\frac{T\\cdot\\frac{1}{11}\\cdot 70\\%}{T\\cdot\\frac{1}{11}\\cdot 70\\%+T\\cdot\\frac{10}{11}\\cdot 30\\%} \\\\ &amp; = \\frac{70\\%}{70\\%+10\\times30\\%} \\\\ &amp; = \\frac{7}{37} \\end{align}$$</p>\n<p>这就是贝叶斯定理了！等等，你可能会挠挠头，这哪里是贝叶斯了？别急，如果我们把最上面的式子换个字母的话...</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>在这里，\\(H\\) 指 Hypothesis，即假设，而 \\(E\\) 指 Evidence，即证据。这样，这个式子就很好理解了，在我们上面的例子里，借走书是证据，那么 \\(P(E)\\) 就是某个人选择借走这本书的概率；这个人是老师是假设，那么这个人是老师的概率是 \\(P(H)\\)。<strong>注意这里的概率指在学校中抽一个人是老师的概率，并不是“在借走书的前提下”这个人是老师的概率</strong>，而“在借走书的前提下”这个人是老师的概率应该是 \\(P(H|E)\\)，也正是我们要求的概率。同样地，而“这个人是老师”的前提下借走书的概率就是 \\(P(E|H)\\) 了。</p>\n<p>那么再来看看上面我们凭小学知识就列出的计算式，如果把里面的具体数据换成概率来表示的话，这个式子就会变成...</p>\n<p>$$P(H|E) = \\frac{T\\cdot P(E|H)P(H)}{T\\cdot P(E|H)P(H) + T\\cdot P(E|\\neg H)P(\\neg H)}$$</p>\n<p>好吧，这里解释一下，\\(\\neg\\) 符号表示“非”，所以 \\(P(E|\\neg H)\\) 表示在“这个人不是老师”的前提下借走书的概率。而 \\(T\\cdot P(E|H)P(H)\\) + \\(T\\cdot P(E|\\neg H)P(\\neg H)\\)，即“可能借走书的老师的数量 + 可能借走书的学生的数量”，就是“可能借走书的人的数量”了，也就是 \\(T\\cdot P(E)\\)。上下消去 \\(T\\)，我们就能得到上面的式子了。</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>这就是贝叶斯了定理。如果你还是不太清楚，可以去看看 3Blue1Brown 的<a href=\"https://www.bilibili.com/video/av84799361\">这个视频</a>，图形化的讲解会清晰很多。</p>\n<p>这里我要提一下这个式子里各部分的专有名称了（“专业高端”词汇警告），你可以不记住，直接看后面。</p>\n<ul>\n<li>\\(P(H|E)\\) 叫做 \\(H\\) 的<strong>后验概率</strong>，反之亦然</li>\n<li>\\(P(H)\\) 叫做 \\(H\\) 的<strong>先验概率</strong>，反之亦然</li>\n<li>特别地，我们把 \\(P(E|H)\\) 称作<strong>“似然值”</strong>，即 likelihood</li>\n</ul>\n<p>那什么是朴素贝叶斯呢？按上面所说的，朴素贝叶斯是一种分类算法。简单来说，朴素贝叶斯将一个对象的各个特征考虑为互相独立，然后根据这些特征的概率的乘积来判断对象所属的分类。基本原理如下：</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)} \\propto P(E|H)P(H) = P(H)\\prod_{i}P(W_i|H)$$</p>\n<p>在这里，\\(W_i\\) 指某一对象的第 \\(i\\) 个特征，对于文本分类来说，这就是一段文本中的某个单词。</p>\n<p>朴素贝叶斯之所以“朴素”，是因为它要求<strong>各个特征间是独立的</strong>，在文本分类中也就是各个单词之间互不干扰。虽然思路简单的代价是适用范围变窄，不过由于这样的简化在很多情况下已经足够了，因此实际上朴素贝叶斯的应用范围非常广。<del>你看朴素贝叶斯 <strong>N</strong>aïve <strong>B</strong>ayes 的缩写都是 NB 了，能不厉害吗（逃</del></p>\n<h1>那么，咋分类啊</h1>\n<p>看来你这下完全听懂了呢（笑），是时候看看如何在 NLP 中应用朴素贝叶斯了。和上面一样，我们用一个具体的例子来说明。我们的目标是让电脑学会分类美国共和党和民主党的演讲稿，由于两个党派的演讲风格不同，所以这样的分类在理论上是可行的。</p>\n<div class=\"wp-block-file\">\n<a href=\"https://acdn.flyhigher.top/nlp/material.zip\" download>material.zip</a><a href=\"https://acdn.flyhigher.top/nlp/material.zip\" class=\"wp-block-file__button\" download>下载</a>\n</div>\n<p>上面我们要用到的数据集，你可以下载下来一起动手玩一玩。先说一下数据集的数据结构吧，压缩包里有两个文件，<code>train.txt</code> 将会被当作训练数据集，而 <code>test.txt</code> 则会作为训练结束后的验证数据集。两个文本文件里数据的结构是类似的，就像这样：</p>\n<pre class=\"EnlighterJSRAW\">BLUE WELL I AM SO HONORED AND PERSONALLY UNKNOWNWORD TO BE HERE...\r\nRED THANK YOU . THIS IS QUITE AN INSTITUTION . IT'S GOOD TO BE...</pre>\n<p>每行都是一篇演讲稿，每行的第一个单词指明了这篇演讲稿所属的党派，<code>RED</code> 指共和党，而 <code>BLUE</code> 指民主党。所有单词和符号都已经被转为大写并由空格分隔方便处理。<code>train.txt</code> 有共和党演讲稿和民主党演讲稿各 23 篇，<code>test.txt</code> 有 6 篇共和党演讲稿，12 篇民主党演讲稿。</p>\n<p>明白了？那我们就开始吧。</p>\n<h2>捋捋思路</h2>\n<p>首先，我们需要考虑如何在文本分类中应用朴素贝叶斯。很简单，按朴素贝叶斯的思路，<strong>计算每个词在某一分类下的出现概率，然后将某篇文章的所有词的概率相乘，再乘以该分类的先验概率，就可以得到某篇文章在某一分类下的概率。</strong></p>\n<p>$$P(Class|Article) = P(Class)\\prod_{i}P(Word_i|Class)$$</p>\n<p>各个分类概率都计算完成后，概率最高的那个分类就是这篇文章可能所属的分类。这个思路的核心就是用词决定了文本风格，文本的不同类别用词会有差异，只要能量化这些差异就可以分类文本。在我们的例子中，我们可以从 <code>train.txt</code> 中统计各个词汇的出现情况，然后用 <code>test.txt</code> 中的数据按上面的算法验证我们算法的准确性。</p>\n<p>这个思路很简单也很清晰，但还有一些问题需要解决。<strong>第一，有的时候，我们的测试数据集中可能会出现一个在训练数据集中没有出现过的词语。这个时候，朴素贝叶斯的计算结果会是 0。</strong>如果我们把 0 乘进式子中，那就别想得到正常的结果了。所以，我们还需要对计算某一单词在某一分类中的式子稍加改进。使用拉普拉斯平滑，就可以避免出现概率为 0 的情况。别被名字吓到，拉普拉斯平滑是一种非常简单的平滑方法：在分子上 +1，在分母上加整个取值范围，这样就可以给整个分式加上非常微小的偏移，避免出现 0。</p>\n<p>$$\\begin{align} P(Word_i|Class) &amp; = \\frac{Word_iCountInClass}{AllWordCountInClass} \\\\ &amp; \\approx \\frac{Word_iCountInClass + 1}{AllWordCountInClass + UniqueWordCount} \\end{align}$$</p>\n<p><strong>第二，对于长文本，大部分词语在某一分类中的出现概率是远小于 1 的，加上长文本词汇量大，往往概率相乘的结果会非常小。</strong>受限于计算机处理浮点数的原理，精确处理这么小的数字是很麻烦的。幸好，运用一些简单的数学知识就可以将其转化为更精确的表达，<strong>那就是取对数。</strong></p>\n<p>首先，将概率计算结果取对数并不影响我们的计算结果。因为取对数是一个单调递增的操作，而我们计算概率只是为了排序选择概率最高的分类，因此取对数是不影响我们排序的。而把多项式取对数，等于把多项式的每一项取对数后相加。所以我们有：</p>\n<p>$$\\lg{\\Big(P(Class)\\prod_{i}P(Word_i|Class)\\Big)} = \\lg{P(Class)} + \\sum_i\\lg{P(Word_i|Class)}$$</p>\n<p>大部分情况下，在每一次取对数的时候，要取对数的数字的大小，即 \\(P(Word_i|Class)\\) 尚还在计算机能处理的范围内，<strong>因此我们可以放心地使用取对数的方法</strong>，避免计算机精度不够影响结果。</p>\n<p><strong>第三就是在某些情况下，可能会有部分词语干扰计算结果</strong>，如 and, is 这类的被大量使用的中性词。如果希望得到更好的结果，我们可以维护一个停用词表，在计算时排除停用词即可。或者，我们可以在计算完每个单词的出现数量后，排除数量最多的前 \\(N\\) 个单词，避免这些单词过多地影响计算。</p>\n<h2>写点代码</h2>\n<p>现在我们终于可以开始实战，写点代码了。我会用简单的 Python 来表达思路。好了，理一理思绪，第一步我们要做的，是统计训练数据集中的用词情况。具体来说，根据上面的思考，我们需要统计的有：</p>\n<ul>\n<li>每个单词在各分类中出现的数量</li>\n<li>各分类中的不重复词数量</li>\n</ul>\n<p>用 Python 简单表示如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\"># 读入数据过程略...\r\ndata_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ndata_blue = []\r\ndata_red = []\r\nword_count_blue = {}\r\nword_count_red = {}\r\n\r\nfor line_data in data_raw:\r\n    word_list = line_data.split(\" \") # 分隔单词\r\n    if word_list[0] == \"BLUE\":\r\n        for i in range(1,len(word_list)):\r\n            if not is_excluded(word_list[i]): # 判断是否为停用词\r\n                data_blue.append(word_list[i])\r\n                # 统计单词出现次数\r\n                word_count_blue.setdefault(word_list[i], 0)\r\n                word_count_blue[word_list[i]] += 1\r\n    elif word_list[0] == \"RED\":\r\n        # Class = red 时同理...\r\n\r\n#统计非重复词\r\nunique_words_blue = list(set(data_blue))\r\nunique_words_red = list(set(data_red))</pre>\n<p>训练过程到这里就结束了，计算机已经知道了各政党演讲的用词习惯。很简单吧？接下来我们就要使用测试数据集来测试准确度了。<strong>这里开始就涉及到朴素贝叶斯的计算了</strong>，可能会稍微复杂一点点。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">import math\r\n#读入测试数据过程略...\r\ntest_data_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ntest_data = []\r\n\r\nfor line_data in test_data_raw:\r\n    if line_data[0] == \"BLUE\":\r\n        content_data = line_data.split(\" \").pop(0)\r\n        test_data.append({\"class\": \"blue\", \"content\": content_data})\r\n    elif line_data[0] == 'RED':\r\n        # ...\r\n\r\nfor line_data in test_data:\r\n    posibility_blue = 0\r\n    for word in line_data[\"content\"]:\r\n        # 计算各单词概率，取对数后相加，使用了拉普拉斯平滑\r\n        if word in word_count_blue:\r\n            posibility_blue += math.log((word_count_blue[word]+1)/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n        else:\r\n            posibility_blue += math.log(1/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n    # 最后加上该分类概率的对数\r\n    posibility_blue += math.log(len(data_blue)/(len(data_blue)+len(data_red)))\r\n\r\n    # 计算 Red 同理...</pre>\n<p>计算完成后，我们就得到每篇演讲稿在各分类下的概率了。之后，简单的比较就能得出推断的分类：如果 \\(P(Red|Article)\\) 大于 \\(P(Blue|Article)\\)，那么这篇演讲稿就更可能是共和党的演讲稿，反之则是民主党的演讲稿。</p>\n<p>很好理解吧？那么这么简单的思路，准确性怎么样呢？对于我们的例子，这是我设置了个别停用词后的结果：</p>\n<pre class=\"EnlighterJSRAW\">+-----+-------+--------------+--------------+-------+-------+\r\n|   ID|  Class|        P(Red)|       P(Blue)|  Guess| Status|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|    1|   Blue|  -23204.68377|  -22998.67066|   Blue|      √|\r\n|    2|   Blue|  -16438.44625|  -16137.48257|   Blue|      √|\r\n|    3|   Blue|  -33468.81214|  -32567.61801|   Blue|      √|\r\n|    4|   Blue|    -8606.2193|   -8601.50426|   Blue|      √|\r\n|    5|   Blue|  -12430.97436|  -11935.70662|   Blue|      √|\r\n|    6|   Blue|  -44033.02883|  -43877.55367|   Blue|      √|\r\n|    7|   Blue|   -16947.2851|  -16758.57542|   Blue|      √|\r\n|    8|   Blue|  -26957.26997|  -26889.62444|   Blue|      √|\r\n|    9|   Blue|  -27503.73985|  -27249.21828|   Blue|      √|\r\n|   10|   Blue|   -20528.4457|   -19991.1248|   Blue|      √|\r\n|   11|   Blue|  -20337.96493|  -19860.12831|   Blue|      √|\r\n|   12|   Blue|  -28409.28489|  -28118.98017|   Blue|      √|\r\n|   13|    Red|  -13756.01015|  -14488.11751|    Red|      √|\r\n|   14|    Red|  -17221.22732|  -17710.15936|    Red|      √|\r\n|   15|    Red|  -17397.45136|  -17899.98659|    Red|      √|\r\n|   16|    Red|  -10724.69095|  -11092.77837|    Red|      √|\r\n|   17|    Red|  -10402.40027|  -10859.48681|    Red|      √|\r\n|   18|    Red|   -9371.53792|    -9669.6769|    Red|      √|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|                                      Total: 18/18, 100.0% |\r\n+-----------------------------------------------------------+</pre>\n<p><strong>100% 的准确率哦！</strong>事实上，对于我们的这个例子，就算不设置停用词，我们仍能达到 100% 的分类准确率。朴素贝叶斯分类的确很 NB 呢。</p>\n<h1>更进一步</h1>\n<p>我们的探索到这里就结束了，但如果你有兴趣，完全可以继续探索下去。我们的例子是一个非常简化的例子，在实际情况中，还有很多问题需要解决。比如，对于中文及类似语言，不存在拉丁语系的天然分词结构，而朴素贝叶斯的文本分类是基于单词的，那么<strong>中文的分词就会是个问题；</strong>再比如，对于朴素贝叶斯分类来说，<strong>词语之间的顺序是不影响分类结果的</strong>，但这就会导致“今天心情很好，但昨天不好”和“昨天心情很好，但今天不好”在朴素贝叶斯看来是一样的，要想获得更好的结果，我们必须<strong>考虑词语的顺序。</strong></p>\n<p>这些问题，今天我们就不再深究了，但你可以自己探索。比如，引入思路同样很简洁的马尔科夫链，我们就可以让计算机学会考虑词语间的顺序，不过那就会是另一个话题了。</p>\n","link":"https://flyhigher.top/develop/1989.html"},{"title":"MDx 中增强页面可访问性的细节","date":"2020-01-25 16:45:04","description":"\n<blockquote><p>这篇文章本来是打算发在 <a href=\"https://mdxblog.flyhigher.top/\">MDx Blog</a> 的，不过写到后来发现这篇文章相对来说还是有价值的，于是就将这篇文章转移到了无垠，MDx Blog 则不再发表这篇文章。</p></blockquote>\n<p>从 MDx 开发之初，增强页面的可访问性就被列为了一个重要目标。从 HTML 语义化，到 ARIA 地标，再到 <code>prefers-reduced-motion</code>，随着浏览器对于增强页面可访问性的支持功能越来越多，MDx 也在不断地更新，让更多的人都能毫无困难地浏览、查看由 MDx 渲染的网页。本文会详细说明一些 MDx 中增强页面可访问性的细节，<strong>如果你希望增强自己开发的网页的可访问性，本文可能会对你有所帮助。</strong></p>\n<h1>基础性增强</h1>\n<p>增强可访问性，最重要也是最基础的一点就是 HTML 语义化。通过使用 HTML 5 语义化标签和 ARIA Role 标签，我们可以很方便地<strong>将整个网页在语义上分为几部分，而这将有效地改善屏幕阅读器对网页的分析质量，使视力障碍用户更好地浏览网页。</strong></p>\n<h2>HTML 语义化</h2>\n<p><strong>HTML 语义化属于增强页面可访问性的基础中的基础。</strong>通过使用语义化的 HTML 标签，我们可以方便地为网页中的各部分标记功能而不影响页面样式。随着符合 HTML 5 的现代化网页成为主流，语义化标签已被很大一部分网站所支持，我也不过多赘述了。就举几个常用的“地标性”标签吧：</p>\n<ul>\n<li>\n<code>header</code> 标签标记页眉，默认样式同 <code>div</code>，不要把它和 <code>head</code> 搞混了</li>\n<li>\n<code>main</code> 标签标记页面的主要内容，默认样式同 <code>div</code>\n</li>\n<li>\n<code>article</code> 标签标记文章（在 HTML 5 中它指任何独立或可复用的文本），默认样式同 <code>div</code>\n</li>\n<li>\n<code>footer</code> 标签标记页脚，默认样式同 <code>div</code>\n</li>\n<li>\n<code>nav</code> 标签标记页面导航栏区域，默认样式同 <code>div</code>\n</li>\n<li>\n<code>aside</code> 标签标记侧栏，默认样式同 <code>div</code>\n</li>\n<li>\n<code>section</code> 标签标记“一组内容”，你可以把它看作是划定网页中一块区域的通用标签，默认样式同 <code>div</code>\n</li>\n</ul>\n<p>只要用这些标签替代 <code>div</code> 而不是无脑使用 <code>div</code> 就能提高页面的可访问性。MDx 使用了这些标签来增强页面的可访问性。</p>\n<h2>下一步，ARIA</h2>\n<p>有的时候，出于一些原因，我们没法使用语义化的 HTML 标签，或者没有合适的语义化标签来标记内容，这时候<strong>我们就需要使用 ARIA (Accessible Rich Internet Applications，可访问的富互联网应用)。</strong>ARIA 的基础用法很简单，只要在相应元素上加上 <code>role</code> 属性指定该元素的功能即可。下面是一个简单的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;div role=\"navigation\"&gt;\r\n  &lt;ul&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page A&lt;/a&gt;&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page B&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page C&lt;/a&gt;&lt;/li&gt;\r\n  &lt;/ul&gt;\r\n&lt;/div&gt;</pre>\n<p>通过 <code>role=\"navigation\"</code>，我们把一个 <code>div</code> 标记为了导航栏区域。实际上，对屏幕阅读器来说，这和 <code>nav</code> 标签在语义上是一致的。上一节中的例子都可以分别用以下 ARIA Role 表示：</p>\n<ul>\n<li><code>role=\"heading\"</code></li>\n<li><code>role=\"main\"</code></li>\n<li><code>role=\"article\"</code></li>\n<li><code>role=\"contentinfo\"</code></li>\n<li><code>role=\"navigation\"</code></li>\n<li><code>role=\"complementary\"</code></li>\n<li><code>role=\"region\"</code></li>\n</ul>\n<p>除此以外，MDx 还使用了 <code>role=\"banner\"</code> 和 <code>role=\"search\"</code> 来分别标记页面中的顶部栏和搜索表单。另外，<strong>有的时候 <code>role</code> 属性还需配合 <code>aria-*</code> 属性一同使用</strong>，具体规则比较复杂，我就不在这里赘述了，具体可参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles\">WAI-ARIA Roles - MDN</a>。</p>\n<h1>媒体查询来帮忙</h1>\n<p>CSS 的媒体查询其实是一个非常强大的特性，<strong>妥善利用其中的一些特性，我们可以在网页外观上大大增强网页的可访问性。</strong>除了已经烂大街的“对浏览器窗口大小”响应的媒体查询，我会介绍 3 个很少有网站充分利用的媒体查询。</p>\n<h2>print</h2>\n<p><code>print</code> 媒体查询其实已经“历史悠久”了，<strong>只要使用 <code>@media print {...}</code> 就可以创建只在打印页面时生效的样式。</strong>通过这种方式，我们可以让页面在打印时应用一套为打印优化的样式，增强页面在物理纸张上的可访问性。</p>\n<blockquote><p>维基百科是对打印样式做了单独适配的著名例子。</p></blockquote>\n<p><strong>由于在打印的情况下，页面已经离开了“可交互”的范围，还有分页这种在屏幕中无需考虑的问题，要让页面在物理纸张上仍能被轻松地阅读，我们需要做一些特殊的适配。</strong>直接来看一个例子吧。以下是 MDx 针对打印情况进行的一些特殊优化，样式的具体理由已经写在了注释中。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media print {\r\n    /*隐藏不必要的元素*/\r\n    header, .mdx-ad-after-article, .mdx-ad-in-article, .mdx-post-money, .page-footer-nav, .mdx-same-posts, .spanout button, .mdui-drawer, .mdui-overlay, .mdui-menu, .mdx-share-img-dialog, .mdx-share-wechat-dialog {\r\n        display: none!important;\r\n    }\r\n\r\n    /*使用下划线标记链接*/\r\n    article a {\r\n        text-decoration: underline!important;\r\n    }\r\n    /*由于纸张不可交互，在链接后显示链接到的 URL*/\r\n    article a::after {\r\n        content: \"(\" attr(href) \")\";\r\n    }\r\n\r\n    /*强制白底黑字*/\r\n    html &gt; body {\r\n        background-color: white!important;\r\n    }\r\n    article p {\r\n        color: rgba(0,0,0,.8)!important;\r\n    }\r\n\r\n    /*对于纸张上的长文章，衬线字体拥有更好的可读性。以下字体列表来自 fonts.css*/\r\n    article {\r\n        font: 13pt Georgia, \"Nimbus Roman No9 L\", \"Songti SC\", \"Noto Serif CJK SC\", \"Source Han Serif SC\", \"Source Han Serif CN\", STSong, \"AR PL New Sung\", \"AR PL SungtiL GB\", NSimSun, SimSun, \"TW\\-Sung\", \"WenQuanYi Bitmap Song\", \"AR PL UMing CN\", \"AR PL UMing HK\", \"AR PL UMing TW\", \"AR PL UMing TW MBE\", PMingLiU, MingLiU, serif!important;\r\n    }\r\n\r\n    /*除部分元素外，禁止在元素内部分页*/\r\n    * {\r\n        page-break-inside: avoid;\r\n    }\r\n    article p, article a, #comments, article {\r\n        page-break-inside: auto;\r\n    }\r\n}</pre>\n<p>MDx 自 1.9.3 版本起已经包含了对文章页的打印样式优化。可以很容易地看出，优化后的样式在物理纸张上将更容易阅读。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\" alt=\"\" width=\"1345\" height=\"1602\" class=\"aligncenter size-full wp-image-1959\"></a>\n<h2>prefers-color-scheme</h2>\n<p><code>prefers-color-scheme</code> 是最近才被浏览器广泛支持的一个媒体查询，但它的功能却很强大：<strong>响应系统级黑暗模式。</strong>这样，我们可以在开启黑暗模式的系统中让网页具有更好的可读性。不过由于这个媒体查询直到最近才被广泛支持，因此大部分网站对此并没有进行适配。</p>\n<blockquote><p>一些适配这一特性的网站：少数派、微信公众平台（文章页）等。</p></blockquote>\n<p>通过像这样的媒体查询，我们可以在系统启用黑暗模式时让页面实时响应：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    body {\r\n        background-color: #212121;\r\n        color: rgba(255, 255, 255, .7);\r\n    }\r\n}</pre>\n<p><code>prefers-color-scheme</code> 一共有 3 个可能值：<code>no-preference</code>, <code>light</code> 和 <code>dark</code>。你也可以不像上面的例子那样默认使用亮色样式并在黑暗模式下启用黑暗样式，而可以反过来将黑暗样式作为默认，用亮色样式覆盖。在不支持的浏览器上将会显示默认样式（即媒体查询不会生效）。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<h2>prefers-reduced-motion</h2>\n<p>看名字就猜得出，<code>prefers-reduced-motion</code> 是和 <code>prefers-color-scheme</code> 师出同门的媒体查询。因此，和 <code>prefers-color-scheme</code> 一样，它也是在最近才获得了浏览器的广泛支持。它的作用也很强大：<strong>响应系统的“减弱动态效果”模式。</strong>这对某些不喜欢甚至无法接受动画的用户可能很有帮助。要知道，对有些用户来说这甚至是医疗上的必要。使用如下的媒体查询，我们可以在系统启用减弱动态效果模式时让页面实时响应，减弱动画：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-reduced-motion: reduce) {\r\n    /*只是一个示例，实际情况中可以保留一些淡入淡出效果*/\r\n    * {\r\n        transition: all 0s!important;\r\n        transform: none!important;\r\n    }\r\n}</pre>\n<p><code>prefers-reduced-motion</code> 只有 2 个可能值：<code>no-preference</code> 和 <code>reduce</code>，在不支持的浏览器上该媒体查询不会生效。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\" alt=\"\" width=\"792\" height=\"515\" class=\"aligncenter size-full wp-image-1962\"></a>\n<h1>黑暗模式适配</h1>\n<p>黑暗模式可不是简单地切换到黑底白字这么简单。<strong>单纯地使用黑底白字会导致页面元素之间对比度过高，文字刺眼，反而降低了页面的可访问性。</strong>我在下面总结了几条应用在了 MDx 中的黑暗模式优化规则和 Google 推荐的优化规则：</p>\n<p><strong>一是避免黑底白字。</strong>黑底白字看起来真的很难受，事实上，深灰和浅灰是黑暗模式最好的配色。比较下方例子里的两段文本，毫无疑问深灰色背景和浅灰色文字搭配的样式的可读性要比黑底白字高很多。（p.s. 有时候这条规则在白底黑字时也适用）</p>\n<p><strong>二是更改部分元素的亮度和对比度以增强可读性。</strong>你可能已经注意到了，下面优化的例子里标题文字的颜色改变了。很明显，未优化的黑暗模式中标题可读性不如优化的版本。在实际中，我们通常可以通过 CSS 滤镜来实现这一更改。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    h1 {\r\n        /*反相颜色后再将色相旋转 180 度，使亮度反相*/\r\n        filter: invert(1) hue-rotate(180deg);\r\n    }\r\n}</pre>\n<p><strong>三是避免让图片过亮。</strong>未经处理的图片通常会导致过高的对比度，降低可读性。在 MDx 中，我选择降低图片的亮度来避免图片刺眼，而 Google 的建议则是使图片灰度，不过这会影响图片的整体观感。无论是哪一种方案，都可以使用 CSS 滤镜来轻松实现。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    img { \r\n        /*MDx 方案*/\r\n        filter: brightness(.8);\r\n        /*Google 方案*/\r\n        filter: grayscale(.5);\r\n    }\r\n}</pre>\n<div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是未优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是经过优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n</div>\n<h1>其他细节</h1>\n<p>还有一些细节，虽然简单，但不可或缺。我把一部分没有在上文提到的 MDx 中的细节列在了这里。</p>\n<p><strong>一是允许页面缩放。</strong>在开发响应式页面时，很多网站会在页面头部添加这样一个 <code>meta</code>：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"&gt;</pre>\n<p>这样的 <code>meta</code> 设定了页面的宽度，却也固定了页面的缩放比例，用户难以手动放大网页。<strong>这样的设置对一部分视力障碍用户非常不友好</strong>，以至于苹果决定在自家的浏览器上忽略禁止缩放的 <code>meta</code>。按照 Google 的推荐，如果你在 MDx 设置中启用了“允许页面缩放”，那么 MDx 会输出这样的 <code>meta</code> 标签，允许页面进行五倍以内的缩放：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=5\"&gt;</pre>\n<p><strong>尽管很多时候放大页面会导致页面结构被破坏，但这大大增强了页面的可访问性，利大于弊。</strong>因此，在 MDx 中，“允许页面缩放”是默认启用的。</p>\n<p><strong>二是在跨设备阅读时同步阅读记录。</strong>这属于 MDx 的“元老级”功能之一。注意到页面右上角的那个“在其他设备上继续阅读”的按钮了吗？如果你滚动页面后重新点击它，你会发现二维码发生变化了。通过在二维码中记录阅读进度，用户在扫描二维码切换设备阅读时，MDx 在新设备上会自动滚动到和原设备上一致的位置——好吧，目前基于百分比的算法在某些情况下可能不太准，但我已经设计了一个更复杂但更精确的阅读进度记录算法，之后就会更新到 MDx 中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\" alt=\"\" width=\"1000\" height=\"574\" class=\"aligncenter size-full wp-image-1976\"></a>\n<p><strong>三是避免 Web 字体阻塞渲染。</strong>如果你在页面中使用了 Web 字体，在字体加载完成之前，浏览器可能不会渲染任何文本，这就导致用户可能需要等待一段时间才能开始浏览网页。Google 推荐使用 <code>font-display: swap;</code> 来向浏览器指定网页的 Web 字体渲染策略。这一规则会提供一个比较短的等待周期，如果在这段时间内 Web 字体没有完成加载，那么浏览器会以 fallback 字体渲染文本。任意时刻一旦 Web 字体完成渲染，浏览器就会使用 Web 字体重新渲染文本。这在大多数情况下都能满足可访问性的需求。</p>\n<p><strong>四是确保 html 元素具有合适的 <code>lang</code> 属性。</strong>这一属性声明了页面的主要语言，浏览器可以据此调整渲染策略，或者触发自动翻译；屏幕阅读器也能更好地阅读网页。</p>\n<p><strong>五是确保页面主要内容在丢失/禁用了 Javascript 甚至 CSS 的情况下仍然可用。</strong>作为一个以内容为主的网站，MDx 在禁用了 Javascript 的情况下页面主要内容仍然可用。这不只是为了 SEO，更是为了保证页面的可访问性。的确，目前的情况下，如果开启了 Lazyload，MDx 在禁用 Javascript 的情况下图片的确无法显示，但我会在后续版本中尽可能的优化这一问题。</p>\n<h1>附录：媒体查询开发技巧</h1>\n<p>有的时候，光有 CSS 响应媒体查询还不够，我们可能需要在 Javascript 中实时响应媒体查询。用如下代码就可以很简单地响应媒体查询：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let mql = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\r\nmql.addListener(handleMediaChange);\r\n\r\n//在添加监听后先调用一次，获得当前查询结果\r\nhandleMediaChange(mql);\r\n\r\nfunction handleMediaChange(mql){\r\n    if(mql.matches){\r\n        //查询匹配\r\n    }else{\r\n        //查询不匹配\r\n    }\r\n}</pre>\n<p>在开发上述媒体查询的过程中，我们需要频繁地切换系统的相应模式或者调出打印窗口。<strong>实际上，Chrome 提供了更简单的调试方法：</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1946\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\" alt=\"\" width=\"723\" height=\"681\"></a>\n<p>只要在这里更改模式，相关媒体查询就能实时生效。这不会影响其他标签页，在关闭开发者工具之后也会自动恢复系统设置。</p>\n","link":"https://flyhigher.top/develop/1912.html"},{"title":"MDx Blog 现已随 MDx 1.9.5 发布","date":"2020-01-22 17:54:11","description":"<p>随着 MDx 发布 1.9.5 更新，<a href=\"https://mdxblog.flyhigher.top/\" rel=\"noopener noreferrer\" target=\"_blank\">MDx Blog</a> 现已建立。我将会在 MDx Blog 中分享一些开发故事并发布 MDx 更新日志。</p>","link":"https://flyhigher.top/diary/1905.html"},{"title":"GitHub 2019 统计无垠版","date":"2020-01-12 13:02:00","description":"\n<h1>缘起</h1>\n<p>2019 年底，我突发奇想想要自己统计一番 GitHub 上存储库的一些信息。尽管 GitHub 有自己的<a href=\"https://octoverse.github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">年度统计</a>，我还是想试着自己爬取一下，说不定能挖出什么有意思的信息，何况这是我第一次有机会处理比较大量的数据，也算是一种学习的过程吧。于是花了一下午写了个简单的爬虫（时间都花在增加 Rate Limit 上了...），然后扔在了两台服务器上开始跑（GitHub  API 真是好文明）。</p>\n<p>从 2019.11.21 3 时到 2020.1.12 24 时的 52 天 21 小时内，我的爬虫一共爬取了<strong>与 2,024,705 个用户有关<sup>*</sup>的 14,651,923 个公共存储库的基础信息</strong>，平均每秒爬取 3.2 个存储库。据 GitHub 的官方数据计算，我爬取了大约 15% 的存储库信息，但由于封禁库和私有库的数量未知，我暂时无法确定我爬取的存储库占公共库的比例。同时由于存储库数量较多，基本可以认为爬取到的样本在时间尺度上已经足够随机，可以通过统计得出一般结论。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\" alt=\"\" width=\"700\" height=\"606\" class=\"aligncenter size-full wp-image-1892\"></a>\n<p>爬到自己了，合影.jpg</p>\n<p>那么下面就来看看统计出来的一些结果吧。爬虫的技术细节和数据集下载放在文末。</p>\n<p>* 指这些用户拥有至少一个库</p>\n<h1>统计信息</h1>\n<p><strong>以下统计结果均基于已放于文末的数据集。</strong>由于爬虫爬取的时间跨度长，加上我并没有完整爬取 GitHub 所有存储库，因此我<strong>不能保证以下统计结果符合真实情况</strong>，各位可以下载数据集或自行爬取进行验证。</p>\n<h2>一些数据</h2>\n<div>\n<div>\n<div>\n<span>3,120,930</span><br>总爬取用户数</div>\n<div>\n<span>44.7%</span><br>的存储库创建<br>自 Fork</div>\n<div>\n<span>6.59%</span><br>的账户被删除或<br>封禁<sup>1</sup>\n</div>\n<div>\n<span>23,913</span><br>单用户拥有最大<br>库数量<sup>2</sup>\n</div>\n</div>\n</div>\n<p><sup>1</sup> 基于用户 ID 规律合理推断<br><sup>2</sup> 统计范围仅限于当前数据集</p>\n<p>比较出乎我意料的是创建自 Fork 的存储库的占比。我预估这样的存储库占比不会太低，但没有想到能接近一半。此外单用户拥有最大库数量也大大超出了我的预期，<a href=\"https://github.com/pombredanne\" rel=\"noopener noreferrer\" target=\"_blank\">pombredanne</a> 这个用户名下拥有将近 24k 的存储库，不过绝大多数都是 Fork 来的，在情理之中。此外<strong>这个数据集中</strong>拥有最多存储库的账户其实是一个组织 <a href=\"https://github.com/gitpan\" rel=\"noopener noreferrer\" target=\"_blank\">gitpan</a>，这个组织拥有 36,377 个存储库。</p>\n<h2>语言</h2>\n<p><canvas></canvas><br>\n首先必须要说明的是，在这个榜单中我<strong>排除了 HTML 和 CSS</strong>，因为在严格意义上它们不属于“编程语言”。如果把它们计算进来的话，分别有 640,368 个和 361,425 个存储库的主要语言分别是 HTML 和 CSS，这样在这份榜单中它们可以排到第 6 和 第 10 名。JavaScript 毫无疑问获得第一，第二名 Python 的热度则和 JavaScript 相差将近一半。<strong>此外还有 2,448,486 个存储库未能识别出语言，占比 16.7%。</strong>在上面的榜单之外，与机器学习和数据科学相关的语言还有 Jupyter Notebook 排名第 13，R 排名 20，Julia 排名 43。</p>\n<p>说实话这份排名和 GitHub 官方的排名<strong>差别很大</strong>，除了前三名，后面的基本都不太一样。我的排名统计结果完全基于 GitHub 对于存储库的主要语言识别，加上我的存储库数据不完整，和官方的数据不同是很正常的，可以做一个参考，但大概率还是官方排名更加准确。</p>\n<h2>许可证</h2>\n<p><canvas></canvas></p>\n<p>自 GitHub 推出许可证功能以来，拥有许可证的存储库比例升升降降，却始终没有超过一半。<strong>选择一个合适的许可证对项目的良好发展真的很有帮助</strong>，要了解如何选择合适的许可证，请参阅<a href=\"https://www.runoob.com/w3cnote/open-source-license.html\" rel=\"noopener noreferrer\" target=\"_blank\">这篇文章</a>。</p>\n<p><canvas></canvas></p>\n<p>对于拥有许可证的存储库，MIT<del> 麻省理工许可证 </del>总是占比最大的；第二则是 Apache-2.0 许可证。此外，WTFPL 许可证也挤入了前 15 名。</p>\n<h2>星标</h2>\n<p><canvas></canvas><br>\nStar 数量毫无疑问是一个存储库受欢迎程度的体现，而 Star 数高的项目基本上大家都了解过。<strong>截至爬取结束时间</strong>，GitHub 中 Star 数最多的库是 <a href=\"https://github.com/freeCodeCamp/freeCodeCamp\" rel=\"noopener noreferrer\" target=\"_blank\">freeCodeCamp</a> <del>非常完美的驼峰命名法</del>，其次则是著名项目 <a href=\"https://github.com/996icu/996.ICU\" rel=\"noopener noreferrer\" target=\"_blank\">996.ICU</a>。<a href=\"https://github.com/vuejs/vue\" rel=\"noopener noreferrer\" target=\"_blank\">Vue</a> 现在的 Star 数已经稳压 <a href=\"https://github.com/facebook/react\" rel=\"noopener noreferrer\" target=\"_blank\">React</a> 一头，Vue YES! 此外 <a href=\"https://github.com/sindresorhus/awesome\" rel=\"noopener noreferrer\" target=\"_blank\">awesome</a> 也挤进第七名。<br><canvas></canvas><br>\n由于 Star 需要时间积累，新项目的 Star 数量很可能是比不过老项目的，这就会导致有实力的新项目无法出现在榜单中。因此我还统计了日均 Star 数，试图通过日均 Star 数来反映项目受欢迎的程度。<strong>由于正热门的项目会比老牌热门项目有优势，这一项的统计范围是 2020-01-01 之前的所有存储库。</strong>996.ICU 和 freeCodeCamp 再次出现在前 10 名，而最近的热门项目 <a href=\"https://github.com/wenyan-lang/wenyan\" rel=\"noopener noreferrer\" target=\"_blank\">wenyan</a> 则飙升至第 2 名。此外还有 <a href=\"https://github.com/menzi11/BullshitGenerator\" rel=\"noopener noreferrer\" target=\"_blank\">BullshitGenerator</a>，即最近热门的“狗屁不通文章生成器”和 <a href=\"https://github.com/evil-huawei/evil-huawei\" rel=\"noopener noreferrer\" target=\"_blank\">evil-huawei</a> 分列第 3 和第 5 名。<br><canvas></canvas><br>\n说实话这个曲线<strong>比我预估的陡多了。</strong>你可能已经注意到了，这个图表的横轴不是均匀缩放的，实际上曲线要比看起来陡很多。同时受爬取方式的影响，GitHub 中 Star 数较少的存储库数量远比我爬取到的多。也就是说，<strong>实际情况下曲线远比这个图表上的陡。</strong>拿点 Star 不容易啊。</p>\n<h2>名称</h2>\n<p><canvas></canvas><br>\n终于知道了原来存储库的名称是有长度限制的...尽管最长有 100 位，<strong>大部分人还是喜欢 8 位长的存储库名。</strong>此外 1 位长的名称也比我预估的要多一些。举几个存储库名称长度为 100 的例子吧。</p>\n<ul>\n<li>testing-something-elsetesting-something-elsetesting-something-elsetesting-something-elsetesting-some</li>\n<li>acts_as_validated_config_so_app_will_not_run_in_random_situation_and_qa_gays_will_not_cry_to_you_whe</li>\n<li>............................................________-....................................-.---......</li>\n<li>----------------------------------------------------------------------------------------------------</li>\n<li>nyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyan</li>\n</ul>\n<p>...创造力有够丰富的。</p>\n<p><canvas></canvas></p>\n<p>最近 GitHub 上有一种奇怪的风气，那就是建立 Awesome 合集<del>骗 Star</del>。看起来 Awesome 存储库满地都是，甚至还出现了关于 Awesome 的 Awesome 合集这种迷惑行为。于是我统计了一下，<del>还好，</del>占比<del>才</del> 0.5% 不到<del>，Awesomer 们任重而道远呐</del>。</p>\n<p><canvas></canvas></p>\n<p>尽管要在 github.io 上托管网站，存储库不一定要以 .github.io 结尾，但我还是统计了一下。拥有这类存储库的用户比我预想的要少一些，看来还有很多人没有完全发挥 GitHub 的完整实力啊<del>（比如我 Doge）</del>。同时<strong>这类存储库在所有存储库中占比 1.12%</strong>，看起来不多<del>，不过至少比 Awesome 多</del>。<br><canvas></canvas><br>\n看得出来 GitHub 对于用户名长度的限制是 1-40 位。用户名最短的 27 位占据了 <code>A-Z</code> 外加 <code>-</code> 的所有可能，而用户名最长的则是一个组织 <a href=\"https://github.com/UOIT-RESEARCH-database-information-group\" rel=\"noopener noreferrer\" target=\"_blank\">UOIT-RESEARCH-database-information-group</a>。不知道是巧合还是某种规律，<strong>最受欢迎的用户名长度和存储库名称长度一样，都是 8</strong>，有点意思。</p>\n<h2>创建时间</h2>\n<p><canvas></canvas><br>\n由于我并没有完整爬取所有存储库，我只能以相对值来统计每月新增存储库数量的变化趋势。<strong>在这个图表中，我将 2017-09 的数据设为了 100%。</strong>你一定一眼就能注意到 2017 年 6,7,8 月的“一柱擎天”。<del datetime=\"2020-02-05T09:18:30+00:00\">我第一次看到这个数据的时候的确愣了一下，不过就着这条新闻看就能明白为什么了：<strong>2017 年 6 月微软收购 GitHub。</strong></del></p>\n<blockquote><p>重新确认了一下，微软收购 GitHub 比这个高峰晚了一年，目前我对这个高峰没有什么很好的解释，如果你有什么思路的话欢迎评论。</p></blockquote>\n<p><strong>需要注意的是这张图表中我排除了 Fork 存储库</strong>，因为 Fork 存储库在 API 中的创建时间是原始存储库的时间，会影响整体趋势。此外，GitHub 中还有一个创建于 2007 年 10 月 29 日的存储库，那就是 <code>id: 1</code> 的...</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"mojombo\" data-mdxgithubp=\"grit\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/mojombo/grit\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>而它的创建者正是 GitHub 的创始人之一 Tom Preston-Werner。</p>\n<h1>一些有趣的结果</h1>\n<p>当初打算自己爬的目的之一就是想看看能不能挖出什么有意思的信息，结果真的有一些不挖不知道的信息。</p>\n<h2>奇怪的存储库</h2>\n<p>在爬取到的所有存储库中，<strong>有 3 个存储库是“无主”的</strong>，即它们的 owner 属性为空。这三个存储库的基本信息如下。</p>\n<div class=\"mdui-table-fluid mdui-table-hoverable\"><table class=\"mdui-table\">\n<thead><tr>\n<th>ID</th>\n<th>名称</th>\n<th>Forked</th>\n<th>Star</th>\n<th>语言</th>\n<th>许可证</th>\n<th>创建于</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>72385291</td>\n<td>vscode-redprl</td>\n<td>否</td>\n<td>10</td>\n<td>TypeScript</td>\n<td>apache-2.0</td>\n<td>2016-10-31 08:50:01</td>\n</tr>\n<tr>\n<td>181218346</td>\n<td>electron-sys</td>\n<td>否</td>\n<td>10</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-14 03:20:56</td>\n</tr>\n<tr>\n<td>181391880</td>\n<td>node-sys</td>\n<td>否</td>\n<td>6</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-15 09:33:08</td>\n</tr>\n</tbody>\n</table></div>\n<p><strong>更奇怪的是这三个存储库“无主”的情况还不一样。</strong>第一个存储库可以通过 <code>/repositories</code> 这个 GitHub API 找到， <a href=\"https://api.github.com/repositories?since=72385290\" target=\"_blank\" rel=\"noopener noreferrer\">这个链接</a>中的第一个存储库就是它；而其余两个存储库甚至无法在 <code>/repositories</code> API 中找到。不过就算能在 API 中找到第一个存储库，它的 <code>html_url</code>，即 <code>https://github.com//vscode-redprl</code> 仍然是不可访问的。这可能是 GitHub 早期的一个 Bug 导致的，不过我仍然对爬虫是如何找到这三个存储库的以及这些 Stars 是哪里来的感到好奇。</p>\n<h2>奇怪的用户名</h2>\n<p>在爬虫爬了一段时间以后，API 中突然开始出现大量的以 fdp 开头的 18 位乱码作为用户名的用户。这些用户拥有的存储库和 starred 的存储库都为 0，而他们的 <code>html_url</code> 为 404。以下是几个例子。</p>\n<ul>\n<li>fdpEpolGCEdQX4ZlRJ</li>\n<li>fdp8XaVrdtmDZnO5pR</li>\n<li>fdp8XRAGnwAOkTr2Ya</li>\n</ul>\n<p>由于我的爬虫并没有超过 Rate Limit，所以我排除了这是污染数据的可能。我怀疑这可能是某种 Bot 账户，于是一边更新爬虫过滤掉了这些用户，一边给 GitHub 支持发邮件问了具体情况。过了两天 GitHub 回复我说这些是<strong>被自动判为可疑进而被封禁的用户</strong>（原话是 they have been flagged by our automated measures for detecting suspicious behavior）。<del>想到我正在疯狂爬取 GitHub，突然害怕.webp</del></p>\n<p>行吧。</p>\n<h1>技术细节</h1>\n<p>爬虫使用 Python3 编写，数据库使用 MySQL。爬虫共使用了 4 个 API Token，在两台服务器上分布式爬取。爬取思路为：</p>\n<ol>\n<li>通过 <code>/users</code> API 遍历用户，每个请求最多获取 30 个用户信息</li>\n<li>循环 30 个用户，分别获取 <code>/users/&lt;user_name&gt;/starred</code> 和 <code>/users/&lt;user_name&gt;/repos</code> API 中的存储库信息，每个请求最多获取 100 个存储库信息，超过 100 个的分页获取</li>\n<li>提取存储库信息，插入数据库。对于已存在的存储库，更新数据</li>\n<li>获取下 30 个用户信息</li>\n</ol>\n<p>由于爬取过程中我多次调整了爬虫逻辑，爬虫爬取到的用户 ID 区间并非连续的，具体区间为1-839586, 14800001-14885493 及 28965251-31161101。</p>\n<h1>免责声明</h1>\n<p>本站会尽可能地提供准确信息，但本站不对此文章中信息的准确性和即时性及带来的任何影响负责。</p>\n<p>本站不代表 GitHub 官方，本文仅供学习之用，请不要将本文内容直接用于任何商业项目中。</p>\n<h1>数据集下载</h1>\n<p>导出的 SQL 文件大约为 1.38GB，全部放在了 GitHub 上（在危险的边缘试探.webp</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"github-analysis-2019\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/github-analysis-2019\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>此外我也提供了 MEGA 下载，链接<a href=\"https://mega.nz/#F!juxm3A6T!7Vwpzi82W1OFrqTLu1A1pQ\">在这里</a>。</p>\n","link":"https://flyhigher.top/develop/1564.html"},{"title":"Milkice 跨年红包解谜 Writeup 及无垠跨年红包解谜答案","date":"2020-01-02 04:29:19","description":"\n<blockquote><p><del>又到了水文章的时间呢</del></p></blockquote>\n<p>先说明一下，这篇文章原本不是在计划中的，而原来说好的「在路上的两篇」文章<del>绝对不会咕</del>。我自己的红包答案本来打算直接塞在年度总结里的，结果发现稍微有些长，再加上我还花了一些时间解了<a href=\"https://milkice.me/\">奶冰</a>的红包解谜游戏，就打算把两个解谜过程放在一起单独写一篇文章。<del>真是个水文章的好理由</del>（被打死</p>\n<h1>奶<del> 子 </del>冰的红包</h1>\n<p>奶冰的红包题目比我的难多了，所以让我们先从难的开始吧。首先看一下<a href=\"https://milkice.me/2019/12/31/2019-summary/\">题目</a>：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1524\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\" alt=\"\" width=\"746\" height=\"410\"></a>\n<p>入口是 <code>happy.2020.milkice.me</code>，扔到浏览器里面表示找不到 IP，那么大概率就是 DNS 的 TXT 记录了，查一下得到 <code>nb2hi4dthixs63ljnrvwsy3ffzwwkl3tivrvezluomxxg5dsmvqw2ltqmnqxa3th</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1525\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\" alt=\"\" width=\"896\" height=\"278\"></a>\n<p>第一眼没看出来是什么编码，直觉是 BaseXX 系列的编码，加上提示“不只有 Base64”，可以推断出是 Base32，转大写解码得到 <code>https://milkice.me/sEcRets/stream.pcapng</code>。是个 URL，下载得到一个 Wireshark 文件，打开一看是和某 USB 设备的通讯抓包。<del>不会做，不做了。</del></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1526\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\" alt=\"\" width=\"1500\" height=\"813\"></a>\n<p>奶冰提示我“Google 上搜得到”，结合第二条提示搜索“wacom pcapng”找到了<a href=\"https://blogs.tunelko.com/2017/02/05/bitsctf-tom-and-jerry-50-points/\">这篇文章</a>（<del>这™就是答案啊</del>）。看起来是一样的套路，即通过解析数据得到数位板上画的内容，于是按文章的思路筛选出数位板发给主机的数据，导出，然后再用 tshark 导出文本数据。本来我想直接用文章中的 POC 的，结果折腾半天因为源的蜜汁原因库没装上，于是按文章中给出的数据结构自己写了段代码，分别导出 X、Y 轴数据扔进 Excel 画散点图。（<del>别问我为什么用 Excel，因为我手边没有更好的工具了</del>）</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1528\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\" alt=\"\" width=\"1280\" height=\"530\"></a>\n<p><span>翻车现场之一</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1539\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\" alt=\"\" width=\"1000\" height=\"286\"></a>\n<p><span>懵逼奶冰.webp</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1533\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\" alt=\"\" width=\"1500\" height=\"462\"></a>\n<p>看得出有手写文字，不过是上下颠倒的，翻转图片得 <code>https://milkice.me/2020/uso.zip</code>。是个 zip，下载打开一看，有密码。<del>不会解，不做了。</del> 第一反应是暴力解密码，但是暴力跑了 15 分钟还是没有跑出来。暴力太不优雅了，肯定不是正确思路，但奶冰什么都不肯说了。不过在这时我终于发现第一个红包口令码就藏在压缩包的注释中，Get。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1544\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\" alt=\"\" width=\"806\" height=\"593\"></a>\n<p>然而题还没解完，回去看提示，看到提供了 osu 谱面下载，于是打算不管怎么样先下载来看看。然而 osu 谱面下载要登录，只好又花了几分钟找到第三方站点，成功下载。这时候可以注意到 uso.zip 里有个同名文件（432314 Mike Greene - Bill Nye the Science Guy Theme Song (Chinese Intro).osz），可以联想到是明文攻击。好吧，上 ARCHPR，十秒解出。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1530\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\" alt=\"\" width=\"462\" height=\"643\"></a>\n<p><span>现场还原.jpg</span></p>\n<p>.osz 文件并不是明文，猜测是压缩包（和 .pptx 一个思路嘛），于是改后缀 .zip 顺利打开。然后红包口令码就藏在奶冰的 .osu 文件中了，由提示可知是明文，打开即可得到。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1542\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\" alt=\"\" width=\"457\" height=\"255\"></a>\n<h1>我的红包</h1>\n<p>相比起来<a href=\"https://flyhigher.top/diary/1464.html\">我的题目</a>就简单很多了嘛...三天时间一共发出了 25 个红包，包括一位重复领取的🌚，比前几年还是多了一些的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\" alt=\"\" width=\"500\" height=\"306\" class=\"aligncenter size-full wp-image-1554\"></a>\n<p><span>这位同学以后请不要多次领取🌚</span></p>\n<p>那么来看看答案吧。</p>\n<h2>第一阶段</h2>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>首先观察字符串，可以发现 <code>.</code> <code>/</code> <code>_</code> 等一些 ASCII 字符原样留在了字符串中，而其他字符被由 <code>=</code> 和十六进制构成的某种编码所替代。如果你正好有所了解，你应该能认出这是 Quoted-printable 编码，这是一种常用于邮件中的编码，可以用<a href=\"https://mothereff.in/quoted-printable\">这个页面</a>解码。如果你不了解，你也应该可以发现这种编码和 URL 编码非常相似。如果你把 <code>=</code> 替换为 <code>%</code>，那么你就可以用各种方法顺利地把它按 URL 编码来进行解码，最后可以得到 <code>αхtоn.іm/соdе_оf_2020_⒈mρз</code>。这个字符串里大部分字符都不是 ASCII 字符，只是长得像而已。根据第一个提示“全是 ASCII 字符”，按样子把字符串用 ASCII 字符抄一遍，可以得到最终 URL 为 <code>axton.im/code_of_2020_1.mp3</code>。</p>\n<h2>第二阶段</h2>\n<p>下载音频，可以听出音频是经过某种处理的白噪音。白噪音的特点是各频段的功率都均匀分布，在白噪音上做文章，很容易就可以联想到线索藏在频谱中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1534\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\" alt=\"\" width=\"1200\" height=\"719\"></a>\n<p>频谱被处理成了 24x3 的网格，结合第二条提示“24x3，横向读取”可以推断出是将频谱当作二进制读取，得到 <code>01111001 01110010 01100011 00101110 01101101 01100101 00101111 00110010 00110000</code>，转为 ASCII 字符可得 <code>yrc.me/20</code>。</p>\n<h2>第三阶段</h2>\n<p>打开上一步得到的页面，提示要求输入十位数密码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1536\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\" alt=\"\" width=\"663\" height=\"460\"></a>\n<p>如果你在上一步注意到了这个音频文件奇怪的属性，你可以反应过来这里的密码就是 <code>2000202020</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1537\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\" alt=\"\" width=\"421\" height=\"651\"></a>\n<p>如果你没有注意到，查看页面代码可以看到一条注释 <code>&lt;!-- Tips: the attribute of the audio --&gt;</code> 将你引导向音频文件的属性。输入密码，解锁即可进入下一步。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1535\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\" alt=\"\" width=\"397\" height=\"223\"></a>\n<h2>第四阶段</h2>\n<p>可以看到是一张图片，内容为“<del>.JPG</del>”和“.ZIP”。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter size-large wp-image-1532\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n<p>和去年一样的套路，下载图片，将后缀名改为 .zip 然后打开，可以看到 README.txt。</p>\n<h2>最后一步</h2>\n<p>查看 README.txt 的内容，可以了解到需要去 🤔.axton.cc 获取红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1538\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\" alt=\"\" width=\"1131\" height=\"278\"></a>\n<p>扔到浏览器里会出现奶冰同款找不到 IP，于是可以联想到 TXT 记录。唯一的问题是 🤔 这个 Emoji 需要如何处理。域名使用 Punycode 将 Unicode 字符转换为 ASCII 字符，特点是以 <code>xn--</code> 开头。如果你把上面这个域名扔进浏览器，你会发现它变成了 <code>xn--wp9h.axton.cc</code>。然后查询 TXT 记录，即可得到红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1527\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\" alt=\"\" width=\"804\" height=\"557\"></a>\n","link":"https://flyhigher.top/develop/1519.html"},{"title":"无垠 2019 年度总结","date":"2019-12-29 12:25:52","description":"\n<p>又是时间飞快的一年...写 2018 总结的情景似乎还在眼前，转眼居然已经到 2019 年末了。</p>\n<p>2019 年，发生了太多事情，包括真的转折了人生的高考，这也导致我博客更新的不多（难以置信居然才更了两篇...），不过两篇技术性文章已经在路上了，可以期待一下。</p>\n<p>2019 年我也学了不少东西（单指技术方面），比如终于认真学了 Vue（但是还要练手）。书买了一大堆，看完的倒是没几本orz</p>\n<p>呼，好吧，是时候回顾一下充满坎坷的这一年了。2019 年还剩下最后两天，希望 2020 年，我能做得更好。</p>\n<h1>一些数据</h1>\n<p>照惯例先来看看一些数据吧。今年是统计系统完整统计了的第二年，终于可以和去年的数据比较一下了。以下数据的统计范围是 2019年1月1日0时至 2019年12月29日20时。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 26,901 (<span>+4%</span>)，年 PV 76,583 (<span>+3%</span>)，日均 UV 73.7，平均停留时间 5分13秒 (<span>-13.8%</span>)，平均跳出率 53% (<span>+20.5%</span>)。一年有效文章数 2 (<span>-50%</span>)，新增评论 439 条。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\" alt=\"\" width=\"1000\" height=\"1143\" class=\"aligncenter size-full wp-image-1511\"></a>\n<p>有趣的是今年文章数腰斩，访问数反而小有提升。<del>如果我哪天不更新了，访问数是不是可以无限大呢？</del></p>\n<p>今年博客最大的改动就是把整体风格切换到了 Material Design 2（当然这是 <a href=\"https://flyhigher.top/develop/788.html\">MDx</a> 中的可选功能，给自己打个广告2333），此外还有比较失败的 WebP 改造计划，因为和缓存冲突已经回滚了。<a href=\"https://flyhigher.top/develop/1245.html\">ABS 系统</a>进展不大，主要是真的没有太多时间，还是要再学习一个。</p>\n<h2>个人主页</h2>\n<p>虽然个人主页的 TODO List 列了老长，但今年完全没有更新，也没有推广，从今年 8 月底开始还莫名被某墙认证了，直到 11 月底才恢复，于是今年总访问量比去年少了很多，</p>\n<p>有多少呢？这么少：总 UV 2,141 (<span>-65.9%</span>)，总 PV 2,744 (<span>-66.6%</span>)，日均 UV 6 (<span>-65.9%</span>)，平均停留时间 62秒 (<span>+19.2%</span>)。主要来源是知乎和 V2EX，还有一些甚至是从微信来的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\" alt=\"\" width=\"1000\" height=\"1103\" class=\"aligncenter size-full wp-image-1512\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 8 次，新增 171 commits，2 种语言的翻译，Star 数增加了 175，现有 408。感谢所有人的支持，尤其是 <a href=\"https://github.com/Sn0bzy\" rel=\"noopener noreferrer\" target=\"_blank\">Hasan CAN</a>, <a href=\"https://github.com/yechs\" rel=\"noopener noreferrer\" target=\"_blank\">Ye Shu</a>, <a href=\"https://github.com/StarryLeo\" rel=\"noopener noreferrer\" target=\"_blank\">StarryLeo</a>, <a href=\"https://github.com/DCTewi\" rel=\"noopener noreferrer\" target=\"_blank\">冻葱Tewi</a>, <a href=\"https://github.com/syfxlin\" rel=\"noopener noreferrer\" target=\"_blank\">Otstar Lin</a> 等为 MDx 做出了不小贡献的你们。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：<a href=\"https://flyhigher.top/photograph/1309.html\">上手</a> DJI OSMO Pocket</li>\n<li>四月：最后一次参加浙江省普通高中学业水平考试</li>\n<li>五月：MDx 喜提 300 Stars</li>\n<li>六月：高考 <del>炸了，差亿点点上浙大</del>\n</li>\n<li>六月：入手了 Oneplus 7 Pro</li>\n<li>六月：和同学一起去成都重庆旅行</li>\n<li>六月：第一次近距离感受到地震</li>\n<li>六月：<a href=\"https://flyhigher.top/diary/1411.html\">入手</a>了一台雷蛇灵刃 15，目前是主力机</li>\n<li>七月：参与组织 THE Hack 2019 活动</li>\n<li>七月：面基了 <a href=\"https://itroy.cc/\" rel=\"noopener noreferrer\" target=\"_blank\">Tory</a>, Bie Shi 和 <a href=\"https://oxz.me/\" rel=\"noopener noreferrer\" target=\"_blank\">FHYunCai</a>\n</li>\n<li>八月：一个人去厦门武汉转了一圈，拍了自己的第一个 Vlog</li>\n<li>八月：入手了一个 Kindle Paperwhite 4，没有泡面可以压，于是用来看英文小说了</li>\n<li>八月：加入 TEDxNingbo 志愿者团队</li>\n<li>八月：和 Ralph 面基</li>\n<li>八月：入手了一个 Yubikey</li>\n<li>九月：人生第一次参加雅思考试 <del>7分，蛮开心的</del>\n</li>\n<li>十月：入手了一个 Samsung Galaxy Watch Active 2 <del>觉得不值</del>\n</li>\n<li>十一月：MDx 达到 400 Stars</li>\n<li>十一月：为 TEDxNingbo 设计开发的 H5 上线</li>\n<li>十一月：入手了第一台胶片相机，试图入坑胶片摄影</li>\n<li>十一月：参加 TEDxNingbo 2019 大会</li>\n<li>十二月：<del>我 Cytus II 入门了</del>\n</li>\n</ul>\n<h1>跨年红包</h1>\n<p>这算「传统习俗」了。和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2020年1月2日。</p>\n<p>今年的解谜旅程，从下面这个字符串开始。</p>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>由于今年的题目比以前稍微难了一些，所以今年的红包金额还是比较大的，而且不限量，尽你所能试一试吧。</p>\n<p>一点你可能用得上的提示：URL 里全是 ASCII 字符 / 24x3，横向读取。</p>\n<p><a href=\"https://flyhigher.top/develop/1519.html\">答案</a>已公布。</p>\n<h1>跨年海报</h1>\n<p>这算是另一个「传统习俗」（笑）。因为我有做跨年海报的习惯，所以以下就是今年份的海报啦。</p>\n<p>用了 C4D+PS，还有我的一整个下午。</p>\n<p>提前祝各位新年快乐！</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter wp-image-1467 size-large\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n","link":"https://flyhigher.top/diary/1464.html"}]