[{"title":"从 macOS 迁移到 Windows，我用这 6 个软件度过「阵痛期」","date":"2022-07-18 06:30:00","description":"在拿到 Windows 的兴奋劲儿过去以后，一些烦恼随之而来……<a href=\"https://sspai.com/post/74329\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74329"},{"title":"如果汽车油箱里加入75%的酒精会怎样？","date":"2022-07-18 05:33:25","description":"\n<p data-pid=\"eHF2LONz\">75% 酒精成分是含乙醇75%，25%的水，一般用来当医用酒精，是疫情期间的家庭常备医药用品。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-0ac8fa579dad0678ccaff92bf00566d0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"435\" data-rawheight=\"410\" data-watermark=\"watermark\" data-original-src=\"v2-0ac8fa579dad0678ccaff92bf00566d0\" data-watermark-src=\"v2-c9641863a9a8a2c633d0ca9257baf620\" data-private-watermark-src=\"v2-fe8ac6aa3bbb3780998eba3bb66226b0\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"rBAwDFCu\">因为酒精在60%的浓度以上就可以点燃了，所以如果光看酒精燃烧，化学能转热能，还真的能往发动机里面加点。反正汽油也是烧，酒精也是烧，都是燃烧膨胀做功，凭啥汽油做得，酒精就做不得。酒精好歹还环保呢，烧起来没味道，就是弄火锅都没啥问题。</p>\n<p><img src=\"https://pica.zhimg.com/v2-6dbd493314f965e15be2224461358dfe_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"800\" data-watermark=\"watermark\" data-original-src=\"v2-6dbd493314f965e15be2224461358dfe\" data-watermark-src=\"v2-04f94cd8387e057d99d594260e0d56dd\" data-private-watermark-src=\"v2-184f47870863aaa2d12ade4bb66f60c7\"></p>\n<p data-pid=\"nD0889Ff\">而且国家也推出了加酒精的燃料，乙醇汽油啥的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-31df6fcb961b29fcb1ef771358ce224d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"354\" data-watermark=\"watermark\" data-original-src=\"v2-31df6fcb961b29fcb1ef771358ce224d\" data-watermark-src=\"v2-dc84478d0d56a51ba632ea149bd8e6b1\" data-private-watermark-src=\"v2-bd1675dfa00befbf6556bb5e25895c94\"></p>\n<p data-pid=\"ZnYYsz9H\">像上图，E10就代表着含10%的乙醇，但是<b>E10还代表着含90%的汽油，两者基本都是不含水的</b>…………</p>\n<p data-pid=\"pMY9Stff\">那为啥用乙醇汽油，因为乙醇燃烧能减排啊，原来100%的汽油燃烧，生成了100%的氮氧、碳氢污染物。而含了10%的燃料，就能立竿见影减少10%的污染。</p>\n<p data-pid=\"TrwkVyKT\">虽然乙醇的热值26.75MJ/KG，汽油的46MJ/KG，乙醇的热值约为汽油的60%。但是发动机的热效率本来综合就只30%左右，所以用了10%的乙醇，对于发动机的输出动力影响大概就弱了1%~2%左右。</p>\n<p data-pid=\"dBfStuNF\">但那也是加乙醇（不含水）+汽油（含水小于0.8%），因为发动机本身就是怕水的。</p>\n<p data-pid=\"xn-WHdLP\">甚至乙醇汽油的使用期也比纯汽油要短上许多，因为<b>醇类这种<a href=\"https://www.zhihu.com/search?q=%E6%9C%89%E6%9C%BA%E6%BA%B6%E5%89%82&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2547100112%7D\" class=\"internal\">有机溶剂</a>，吸水性好</b>，意味着醇类汽油必须要抓紧用，因为放着不用，吸收水分，燃料里面水分过多，则会对燃油发动机造成伤害。一般我们现在加醇类汽油，如15%浓度醇类的汽油，用的普通发动机，一般都要在30天内用完。如果当地湿度大，则要在两周到三周内用完。</p>\n<p data-pid=\"C3W6LePy\">如果一丁点水，发动机持续高温（发动机正常运作，零部件温度都保持在90摄氏度左右，燃烧室温度则是上千摄氏度），是可以蒸发细微水气的，不至于对发动机产生太大影响。</p>\n<p data-pid=\"_6ecODvK\">如果水多了，如果是燃料里面有25%的水，这就是普通燃油发动机无法承受之重了。如果水再多点，发动机基本就是要废了。</p>\n<p data-pid=\"E4QSN1n0\">一个是水会造成可燃混合气不能充分燃烧，汽车的动力就会变得绵软无力，响应变慢，积碳增加。水多到一定程度，甚至点火花塞打火都打不着，发动机熄火无法启动的情况。</p>\n<blockquote data-pid=\"aJc8Pmxh\">之前陕西汉中的多位车主在当地的一座加油站加油后，没开出多远，车辆就出现故障，抛锚在路边。从油箱抽出的汽油明显分层，并且有沉淀的浑浊物，车主们立即报警。5月21日，陕西省能源质量监督检验所出具的检验报告显示，涉事加油站的汽油样品水分占到油品的88%。目前，涉事加油站因涉嫌销售伪劣产品罪已被当地警方立案侦查，加油站相关人员被控制。</blockquote>\n<p><img src=\"https://pica.zhimg.com/v2-8e9832fc7c15b9869ab4cc4c899990bd_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"841\" data-watermark=\"watermark\" data-original-src=\"v2-8e9832fc7c15b9869ab4cc4c899990bd\" data-watermark-src=\"v2-1607ed558ee9aa919c7ae2d8143a072c\" data-private-watermark-src=\"v2-7c14f3373166deda3a4c1f18035c5271\"></p>\n<p data-pid=\"9vCSitan\">另一个水分过多则是会污染机油，让机油出现乳化现象，稀释机油的粘度，让机油的润滑、降温、清洁功效大幅下降，最后伤害发动机。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-c893fc63dea79eb90a4478f533049e88_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-c893fc63dea79eb90a4478f533049e88\" data-watermark-src=\"v2-6f918edb3792446e1f66252e2d4efa1d\" data-private-watermark-src=\"v2-f31560c66d11783ce8c69200f52d6ac0\"></p>\n<p data-pid=\"z29m5Qo_\">其实酒精这类醇类和汽油混合，作为燃料的，国内也有很多研究和商业化了，具体可以见我下面这篇回答。</p>\n<a href=\"https://www.zhihu.com/question/539092380/answer/2547100112\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-c7f10b3e8a243715ed5d2bd0305bd2b0_qhd.jpg?source=b1748391\" data-image-width=\"1200\" data-image-height=\"800\" class=\"internal\">醇电混动专用发动机的工作原理是什么？未来醇电混动会取代燃油混动吗？</a><p data-pid=\"jlkKWZST\">另外，<b>这种含水量高的燃料，真的不能用在汽车发动机上吗？</b></p>\n<p data-pid=\"q_DCQX3t\">答案还真的是能用，燃烧大量掺水作为节能技术，早在上个世纪就做过大量研究甚至商业化，但不能直接这样加水。</p>\n<p data-pid=\"ckXjuSls\"><b>1981年7月召开的国际燃烧协会第一届年会上，燃油乳化掺水燃烧被列为了三大燃烧节能措施之一。</b></p>\n<p data-pid=\"qjOE9kTq\">当然，这种燃油掺水，并非是往燃油里简单加水，而是加入<b><a href=\"https://www.zhihu.com/search?q=%E4%B9%B3%E5%8C%96%E5%89%82&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2554197201%7D\" class=\"internal\">乳化剂</a>，催化剂等添加剂，通过机械、<a href=\"https://www.zhihu.com/search?q=%E8%B6%85%E5%A3%B0%E6%B3%A2&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2554197201%7D\" class=\"internal\">超声波</a>等方式使得油水混合，生成乳化液体燃油。</b></p>\n<p data-pid=\"AVqu7gYT\">1999年，法国埃尔夫石油公司研制出了稳定的混合乳化燃料油（水和汽油/柴油进行混合，水的比例约为10%-20%），<b>Aquazole乳化燃料油</b>。通过在柴油机上实验，NOX的<a href=\"https://www.zhihu.com/search?q=%E6%8E%92%E6%94%BE%E9%87%8F&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2554197201%7D\" class=\"internal\">排放量</a>减少了30%，炭烟减少50%，且发动机的整体结构不需要进行大的改动。而美国的<a href=\"https://www.zhihu.com/search?q=%E5%8D%A1%E7%89%B9%E5%BD%BC%E5%8B%92%E5%85%AC%E5%8F%B8&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2554197201%7D\" class=\"internal\">卡特彼勒公司</a>（世界最大的柴油机生产厂家之一）研制的<b>“<a href=\"https://www.zhihu.com/search?q=A%E2%80%9455&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2554197201%7D\" class=\"internal\">A—55</a>”</b>，<b>在汽油中掺水30%以上</b>，节油率在12%至16%之间。</p>\n<p data-pid=\"Otn90cdn\">国内也在上个世纪末开始了相关的研究和推广，HF燃油乳化技术在2004年被列入“国家级火炬计划项目”，2005年被列入“国家火炬计划重点项目”，在武钢、<a href=\"https://www.zhihu.com/search?q=%E4%B8%8A%E9%92%A2&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2554197201%7D\" class=\"internal\">上钢</a>等大型企业进行实测。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-167761881f14d43797898cb775306e0c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"325\" data-rawheight=\"297\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<blockquote data-pid=\"ChDotvCr\">HF燃油<a href=\"https://www.zhihu.com/search?q=%E4%B9%B3%E5%8C%96%E6%8A%80%E6%9C%AF&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2554197201%7D\" class=\"internal\">乳化技术</a>是指在<b>70%至80%的重油、柴油中掺入20%至30%的药液软水</b>，加入一定比例的乳化、强力催化、助燃等节能添加剂，经过科学调合和工艺反应后，形成一种性能相同于普通重油、柴油的新型燃料油，可正常、稳定地在工业上应用、社会上民用，燃烧产物无污染、无腐蚀、无毒。</blockquote>\n<p data-pid=\"4I4063iU\">简单说下燃油掺水乳化的原理。</p>\n<p data-pid=\"5rQm394R\">这个也是二十世纪初，前苏联B.M.伊万诺夫科学家发现的<a href=\"https://www.zhihu.com/search?q=%E4%B9%B3%E5%8C%96%E7%89%A9&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2554197201%7D\" class=\"internal\">乳化物</a>的<b>物理现象微爆</b>：</p>\n<p data-pid=\"6-SpRUWJ\">油包水型分子基团，油是连续相，水是分散相，在喷油器的作用下，水以微小颗粒分散在油内（乳化油雾，<b>一次雾化</b>）。由于水沸点（100℃）低于燃油沸点（130℃以上），在气缸温度急剧升高时，水微粒先沸腾气化，产生气化膨胀，体积在万分之一秒内增大1500倍，使得水外包裹的油膜发生了爆炸性分散（微爆），油雾变成更加细小的微粒<b>（二次雾化）</b>。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-879cd91a310b4e4170ef557a0fce18ec_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"657\" data-rawheight=\"443\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"EbBnVDjw\">二次雾化后的微小油滴更容易燃烧，其燃烧表面比纯燃油增加了104倍左右，且因为微爆现象产生的冲击波，能使得<b>燃油蒸汽更加均匀分布在燃烧室内，加快了燃烧速度，减少了后燃现象，避免了燃烧区间局部高温的热解和裂化</b>，使得燃油更充分燃烧，减少了有害物的排放，提高了燃油经济性。此外，水珠气化的降温作用和水汽作为惰性气体的稀释作用，能<b>有效抗爆，提高充气效率</b>。</p>\n<p data-pid=\"4N4TYdNN\">因为水和油是不互溶的，所以要形成稳定的燃油掺水乳化液体，并保障油包水型粒径的大小、均匀度和稳定性，需要有专门的乳化方法。</p>\n<p data-pid=\"3gucBMyW\">上个世纪，国家推出的66号汽油掺水13%-15%，70号汽油掺水10%，乳化剂1%（后70号汽油在1997年被90号汽油取代）。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-62e2d50b62c9af1390c123a7669ddcb6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"420\" data-rawheight=\"259\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"gBrzCKcp\">所以，燃料里面加水也是可行的，只是别直接往燃料里面加上百分之几十的水，不做任何处理就往发动机里面灌，那么发动机也是会吃不消的。</p>\n<p><br></p>\n<p data-pid=\"7GLgf-hu\">（图片来源网络，侵删！）</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/389013760/answer/2575828137?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">73 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/539978483?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么现在新能源汽车的研究方向是电池，而不是利用清洁能源制造汽油?</a><br><a href=\"http://www.zhihu.com/question/538730432?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">美国科学家计划用乙醇和水制造高压氢气解决燃料难题，你怎么看待此举？</a><br>\n","link":"http://www.zhihu.com/question/389013760/answer/2575828137?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"从技术开发层面来说，一款发动机的研发一般要经历几个阶段？","date":"2022-07-18 05:26:57","description":"\n<h2>一、发动机研发体系概述</h2>\n<p data-pid=\"6-wO9BSp\">国内发动机研发体系流程基本上是如下几个来源：</p>\n<p data-pid=\"yb6nxXgU\">1、泛亚系（通用系）：主要原因是第一个合资建立的技术研发中心，还是为国内培养了不少发动机方面的工程师，包括联电等公司，这些人员的流动，带动了泛亚发动机研发体系在其他OEM的传播和应用。</p>\n<p data-pid=\"xQYpIjxR\">2、收购外资品牌：上汽（合并了南汽）收购了罗浮，同时消化吸收了罗浮整车以及动力总成的开发体系流程，吉利收购了沃尔沃，最近几年控制力越来越强后，也逐渐将沃尔沃的发动机技术和研发体系引入。</p>\n<p data-pid=\"wlfa_IiK\">3、咨询公司：比如与奥地利的AVL咨询公司、德国FEV公司等合作，帮助设计以及后续开发。现在新能源市场上最炙手可热的某品牌43%热效率的混动专用发动机就是在AVL咨询公司的帮助下开发的。</p>\n<p data-pid=\"yITqCmrT\">尚未见过无师自通的，或者能完全没有国外研发体系影响而自己开发的。</p>\n<h2>二、发动机研发阶段</h2>\n<p data-pid=\"cMV6cFf3\">尽管大家最初的研发体系来源不同，但毕竟百年工业，没有太多新鲜事，研发流程基本上都是疏通同归。全新开发的发动机从大的阶段讲，基本上分为如下五个阶段：</p>\n<p data-pid=\"AnTO2EZM\">1、预研阶段；2、概念设计；3、开发；4、验证；5、量产。</p>\n<p><img src=\"https://pica.zhimg.com/v2-283f35c58f4c8376022eab122e916f9e_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1074\" data-rawheight=\"483\" data-watermark=\"watermark\" data-original-src=\"v2-283f35c58f4c8376022eab122e916f9e\" data-watermark-src=\"v2-6600bf950b55b0b0ea80345b9c42799e\" data-private-watermark-src=\"v2-8e09812e785a26bb58cd1f7f8a54b7b4\"></p>\n<p data-pid=\"kS49g4GY\">对于大改型项目（燃烧系统变更，比如压缩比、喷油器等）以及小改型项目（比如更改小惯量增压器等）逻辑同全新开发，只不过他们相对来说已有base机型，无论是设计还是验证、标定工作相对来说都会少一些，所以周期会短一些。通常全新开发要56个月，而大改型可能需要36个月，而小改型项目或者应用项目一般仅需要24个月，甚至更少。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-2e0c0331192f8647fab67e9c5abcdfa7_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"814\" data-rawheight=\"565\" data-watermark=\"watermark\" data-original-src=\"v2-2e0c0331192f8647fab67e9c5abcdfa7\" data-watermark-src=\"v2-92f05d2fd3e9d110e72af7ebadc190d1\" data-private-watermark-src=\"v2-f0892b998b5ef99cd4783ac42c087ca1\"></p>\n<h3>1、预研阶段（PG10-PG8）</h3>\n<p data-pid=\"Md1uIVZ-\">这个阶段其实在OEM中是相当长的一段时间，尽管越早期参与的研发人员不是很多，但这是一个全新平台发动机开发打地基的阶段，所以前期调研、对标、技术方案、性能指标的确定、发动机尺寸（需要匹配整车架构）、总布置方案（总布置不仅仅是零件拼凑在一起，最重要的是提前考虑到产线装配、整车接口匹配等）、燃烧系统试验（单缸机以及多缸机）、整车规划适配等方面都需要耗费巨大的精力和时间去弄。同时一般会做一台Mule机进行试验验证，这个阶段的发动机因为都是快速样件，造价极其昂贵，通常要一百万左右一台。</p>\n<p><img src=\"https://picx.zhimg.com/v2-da4d9587a39aa9afa60a024d95a16558_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1057\" data-rawheight=\"477\" data-watermark=\"watermark\" data-original-src=\"v2-da4d9587a39aa9afa60a024d95a16558\" data-watermark-src=\"v2-e35f8dc3e9bf08fcad1ae6cb65c08650\" data-private-watermark-src=\"v2-8f262a3ed513665872cbc29623754b6b\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-9655dd2073297e4161e17f99446a3b84_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1042\" data-rawheight=\"470\" data-watermark=\"watermark\" data-original-src=\"v2-9655dd2073297e4161e17f99446a3b84\" data-watermark-src=\"v2-3abfab92ecd52cb727835957bd595f86\" data-private-watermark-src=\"v2-e3807cd70d177de2a53c2215a36aed7e\"></p>\n<h3>2、概念设计（PG8-PG7）</h3>\n<p data-pid=\"Cb1X_CrZ\">如果能从预研走到概念设计，尤其是PG8开阀（公司层面批准项目立项，开始正式研发），只要没有大的变故，通常发动机是要开发下去到量产。所以尽管对于设计来说，PG8阀点不是一个决定性的，但从项目角度来讲，PG8阀点通常具有标志性的意义。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-3671f299c857e7906a6da8b84d83bb5e_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1036\" data-rawheight=\"472\" data-watermark=\"watermark\" data-original-src=\"v2-3671f299c857e7906a6da8b84d83bb5e\" data-watermark-src=\"v2-d76d6ffa35103de485b7d007e6966053\" data-private-watermark-src=\"v2-8a10adbd5d56d2f5e5c07ea290cb4ffe\"></p>\n<p data-pid=\"czRHZFS0\">而在概念设计阶段，最重要的是PG7阀点，在此阀点之前，需要通过DL2阶段的设计验证，其中包括最基础也是最最重要的性能、功能、基础标定工作。</p>\n<p data-pid=\"kYmbr5cW\">性能内容包括：外特性、最大扭矩、最大功率、万有特性、特征油耗点、最低油耗点、miniMAP、怠速、排放等。</p>\n<p data-pid=\"HxGD3EI2\">功能验证主要包括：呼吸系统（也叫曲轴箱通风系统）验证、冷却系统验证、润滑系统验证这三大核心系统验证，即要确保发动机运行中的气、水、油各司其职的完成好自己的工作。还包括进排气系统的相关性功能验证、金属温度场的验证、NVH的验证等。</p>\n<p data-pid=\"sNZJpc-A\">标定工作主要包括的是稳态数据的标定，核心目的是支持早期开发工作。</p>\n<p data-pid=\"vsBQOlEV\">同时因为概念设计锁定了性能，所以关系到性能的核心零部件基本需要锁定供应商，即定点。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-3d45fc2e252d087e2d0751f3ad69533f_720w.png?source=b1748391?rss\" data-caption=\"正式立项后阀点即阀点评审核心点\" data-size=\"normal\" data-rawwidth=\"819\" data-rawheight=\"533\" data-watermark=\"watermark\" data-original-src=\"v2-3d45fc2e252d087e2d0751f3ad69533f\" data-watermark-src=\"v2-17f0b8154fbd7ac17ffb56838f6bd1b6\" data-private-watermark-src=\"v2-16f1180308ee8d6158ff05ef3e120576\"></p>\n<h3>3、开发阶段(PG7-PG5)</h3>\n<p data-pid=\"w8oQOHF3\">当概念设计评审通过，即性能目标完全锁定，此时燃烧系统基本不再做调整，而事关燃烧系统的几大核心零部件，燃油系统、缸体、缸盖、曲轴、活塞、凸轮轴的设计也基本锁定。</p>\n<p data-pid=\"azmj6Yap\">此阶段最重要的就是两个工作：1、40%标定；2、大量且全面的系统性验证；而核心目标是1、自制件设计锁定（PG6），支持机加工产线以及装配线的采购；2、其他未定点零件需要在本阶段基本完成验证和定点（PG5）。</p>\n<p><img src=\"https://picx.zhimg.com/v2-1c4b41fc8fc3375db1fcdd4589fcb764_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1035\" data-rawheight=\"479\" data-watermark=\"watermark\" data-original-src=\"v2-1c4b41fc8fc3375db1fcdd4589fcb764\" data-watermark-src=\"v2-7ad4c51e65f9a37a20bfe6f8504c3283\" data-private-watermark-src=\"v2-7ac33e54353c5ee635bde96aa684ca08\"></p>\n<p data-pid=\"ZJciS7EQ\">40%标定工作主要包括的是基础map数据，通常包含充气模型、爆震模型、增压模型、喷油压力、点火角等等标定内容，既能支持台架试验，还能支持骡子车。</p>\n<p data-pid=\"XlScExKX\">大量且全面的系统性验证，即包含概念设计阶段的所有功能性验证，且包含大量的耐久、冷仓、NVH等验证。</p>\n<p><img src=\"https://pica.zhimg.com/v2-09fbf065a394e98f10c26e28410c43d1_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1037\" data-rawheight=\"475\" data-watermark=\"watermark\" data-original-src=\"v2-09fbf065a394e98f10c26e28410c43d1\" data-watermark-src=\"v2-4b9c30c9568df066a01a6d7989c81509\" data-private-watermark-src=\"v2-80a86a3430b2962f2f45dac6d8c4d180\"></p>\n<h3>4、验证（PG5-PG3）</h3>\n<p data-pid=\"TWTB4AQw\">本阶段顾名思义，就是验证，如果没有工程经验的人会很奇怪，为什么前面的阶段有验证，设计都锁定了，供应商也都定点了，怎么还有验证。</p>\n<p data-pid=\"axwJKejP\">其实我刚进企业的时候，也有这个疑问，但做过制造业，尤其是重资产投资的就逐渐理解了。每一项投资都是巨大的，不仅是自己的固投，还有供应商的固投，你如果说一开始就是开硬模，拉着供应商也把产线投下去了，如果在早期设计阶段有问题了，要改设计，这一套东西就都废了，这么大的沉没成本谁来承担？所以在制造业巨大的沉没成本面前，逐渐有了一套行之有效的办法，就是从快速样件到软模件再到硬模件（OTS件）逐步验证，层层递进，企业不会因为早期设计变更、验证不通过后更改设计或者工艺等问题而损失巨大的固投。待无论是设计、工艺、装配等都锁定后，再开硬模，再将产线投下去，才是比较稳妥的开发路径。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-cca1f0f0a9c7c0f2f67e0890b51a446a_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1044\" data-rawheight=\"488\" data-watermark=\"watermark\" data-original-src=\"v2-cca1f0f0a9c7c0f2f67e0890b51a446a\" data-watermark-src=\"v2-fa613850d6f92c32f35509a4c9dd5625\" data-private-watermark-src=\"v2-5bf38a5528e489177d4fbffe283837d3\"></p>\n<p data-pid=\"z52qgObB\">所以这个”验证“阶段就是用来验证OTS样件的，这个时候，样件的状态是硬模件、供应商的生产线件、甚至工厂的自制件，当这个阶段完成以后，意味成开发完成，工程部门的任务已完成，后续就是制造和质保介入牵头。</p>\n<p data-pid=\"0HqFC4h6\">为了方便大家理解，如下罗列了样件阶段和状态，以及目的：</p>\n<p><img src=\"https://pica.zhimg.com/v2-d42b870552875dcbda99f20490df3d26_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1039\" data-rawheight=\"467\" data-watermark=\"watermark\" data-original-src=\"v2-d42b870552875dcbda99f20490df3d26\" data-watermark-src=\"v2-fdafecce77e0cbdeca8d7d483f5161b8\" data-private-watermark-src=\"v2-fec9341dc9a589e5fe90e4288aba0ea7\"></p>\n<h3>5、试生产</h3>\n<p data-pid=\"bc8rlZ4x\">进入到本阶段，研发的任务已基本结束，开始自制件的大批量试生产、开始装配产线的调试和拉产能。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-cf3ce0ff83f9bdb3d773cd41c3075289_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1051\" data-rawheight=\"485\" data-watermark=\"watermark\" data-original-src=\"v2-cf3ce0ff83f9bdb3d773cd41c3075289\" data-watermark-src=\"v2-5775159fc5be0c3b6c3d2bb22132b9a0\" data-private-watermark-src=\"v2-6f4b196867c3cfecdc5d91a2ffbaf49e\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-eae1a707a53267f9f2b423ae0ee71cbf_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1042\" data-rawheight=\"481\" data-watermark=\"watermark\" data-original-src=\"v2-eae1a707a53267f9f2b423ae0ee71cbf\" data-watermark-src=\"v2-cd28916f0673b0bd54fec50fa7d2d928\" data-private-watermark-src=\"v2-688f0bdc4f8f5a793868fb132704eea7\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-899c94c2f27e1a6040abeca352cf2b36_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1041\" data-rawheight=\"482\" data-watermark=\"watermark\" data-original-src=\"v2-899c94c2f27e1a6040abeca352cf2b36\" data-watermark-src=\"v2-674866a79a932821512462d06ec49a86\" data-private-watermark-src=\"v2-a0ee9c19ad4f10a7e099068f7c825424\"></p>\n<p data-pid=\"D1INzIJN\">SOP：start of production，开始量产。</p>\n<h2>三、发动机开发流程与整车开发流程的关系</h2>\n<p data-pid=\"lNTFKfvx\">发动机开发流程虽然独立于整车发开流程，但是又和整车开发流程中的阶段有所对应，整车是G10-G1，因为发动机开发周期不仅长，而且因其是动力源和最重要的运动件，所以开发会早于整车。</p>\n<p><img src=\"https://pica.zhimg.com/v2-deccf6070372f2453032f2e37d3f243f_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"666\" data-rawheight=\"650\" data-watermark=\"watermark\" data-original-src=\"v2-deccf6070372f2453032f2e37d3f243f\" data-watermark-src=\"v2-0438e98d7ba64a63c7b39b94f9444e7d\" data-private-watermark-src=\"v2-0f86c87b4ea5e17363e3a1cd55776aa3\"></p>\n<p data-pid=\"UIzOKei3\">因篇幅关系，本文就不详细叙述发动机开发阶段和整车开发阶段的对应关系和逻辑了。</p>\n<h2>四、总结</h2>\n<p data-pid=\"GON8ecLS\">从本文也可以看出，发动机开发其实是相当复杂的，开发流程基本等同于整车开发，且周期长、投资重，这也就是为什么传统车企/燃油车时代，三大件，尤其是发动机，是车企的护城河。</p>\n<p data-pid=\"GFWfOAjn\">有一点可惜的是我们不少自主品牌车企已经消化吸收并建立起了自己的一套研发体系，也已经积累了足够的kown-how和有经验的研发人员，但新能源的快速发展，直接把他们拍在了沙滩上。</p>\n<p data-pid=\"ptCPHFe7\">以上。</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/lao-xing-65?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">老行</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/538008768/answer/2573083387?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">8 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/542584787?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">交付和研发?</a><br><a href=\"http://www.zhihu.com/question/532479093?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">目前国产操作系统的研发能力怎么样？</a><br>\n","link":"http://www.zhihu.com/question/538008768/answer/2573083387?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"国产发动机制造中有哪些被卡脖子的环节？","date":"2022-07-18 05:25:55","description":"\n<p data-pid=\"yTxgvt6d\">卡脖子，意思就是被国外企业明显存在独占的领域和产品。</p>\n<p data-pid=\"ZpDv3USS\">简单的来说3个极端，基础的材料、系统性应用和工业软件。而独立的硬件零部件的，中国纯本土的企业已经可以做的很好了。合资企业会把中国工厂作为全球的标杆工厂来进行制造的比比皆是。很多中国本土品牌主机厂标版自己几微米工厂的名号也很多。2010s那个本土企业靠买韩国三手生产线的日子一去不复返了。</p>\n<p data-pid=\"RQphenR0\">我们来举几个例子：</p>\n<h2>基础材料：</h2>\n<p data-pid=\"jk-crZdH\">在进行一些涂层工艺，特别是物理气相沉积PVD相关的工艺的时候，需要一些超纯净的金属材料，这些材料全部都需要从欧洲进口。 </p>\n<p data-pid=\"6MGxFzsO\">发动机的气门弹簧，从拉丝到制造弹簧来说，已经早已实现国产化。但是气门弹簧所使用的钢材，从中国的合资车企到最重视性价比的自主企业，没有一家中国车企敢用国产材料。原因就是气门弹簧的特性需要超纯净的钢材，钢材的不良组织的控制是正常弹簧钢的1%以下，甚至是千分之一以下。中国的钢厂从上个世纪80年代开始攻关发动机气门弹簧钢，四十多年过去了，做样品的不少，成功一个都没有。这个方面目前我和我的一些同事在和南京钢铁在做开发项目，提供对标和开发认证的确认，还有做第三方的材料分析对比与发动机的仿真支持，帮助中国钢厂达到这个，目前我们已经孤独的做了4年多了，算是我们对中国钢铁工业做的一点贡献。</p>\n<p data-pid=\"hGCkJDMb\">做这个的目的不仅仅是做气门弹簧，而是因为弹簧钢是特钢技术的明珠，而发动机气门弹簧钢是明珠中的明珠。这就意味这一家钢厂掌握了超高强度、超纯净、超稳定冶炼特种钢材，而且是能够批量保证稳定性的能力。这是有战略意义的工作。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d8eae3dcef321664a0c574e0adcc0705_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"474\" data-rawheight=\"362\" data-watermark=\"watermark\" data-original-src=\"v2-d8eae3dcef321664a0c574e0adcc0705\" data-watermark-src=\"v2-e2ee5fcebd1e1cbc7faed390087d63ee\" data-private-watermark-src=\"v2-82609e338c44693a42ea6d2c265219ce\"></p>\n<p data-pid=\"PNKlpQqH\">粉末冶金中使用的铁粉以及粉末冶金锻造技术。</p>\n<p data-pid=\"FsmuxID9\">粉末冶金是一种非常常见的技术，很多高科技机械类企业在做，同时也有很多小作坊在做。传统的工艺本身比较简单，压制成型后烧结就好了。这里的关键在于铁粉。越是技术要求高的零件，就越需要海外进口的粉，主要来自GKN等美国的工厂。高端粉末之所以依赖进口，本身就在于其制造方法的复杂。</p>\n<p data-pid=\"DB8ftC0b\">大概的技术模式是融化的高纯净度铁水从一个炉子很高的地方浇落下来，整个炉子都是真空后有部分惰性气体的，然后在受控的条件下用惰性气体把这些铁水吹起来，然后铁水就被吹的破碎后成为规则圆润的的小颗粒冷却。</p>\n<p data-pid=\"19rLoyZU\">国内的粉末绝大部分采用的是物理粉碎法或化学法，在高质量性能要求的领域远不及国外的大规模雾化法的质量好。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-6cea0c5a8876be4ccbac2f1dbf41dba3_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"474\" data-rawheight=\"296\" data-watermark=\"watermark\" data-original-src=\"v2-6cea0c5a8876be4ccbac2f1dbf41dba3\" data-watermark-src=\"v2-9a3e6969c6db272916a7937c191c0ac3\" data-private-watermark-src=\"v2-b89aab97255d25a3534cde102bc6bd79\"></p>\n<p data-pid=\"-Ru5MOAZ\">粉末冶金锻造则是一种更加特殊的技术，传统的粉末冶金烧结就好了，粉末冶金锻造是在烧结的粉末冶金基础上进行进一步锻打。模具和后续的烧结有很多特殊工艺。</p>\n<p data-pid=\"LYP7DsWi\">但是粉末冶金锻造技术核心不仅是工艺，而且是基于这些工艺的材料开发。目前最好的发动机用锻钢材料的抗拉强度大概在1150MPa，美国最好的粉末冶金锻造新材料可以实现1950MPa抗拉强度。而且还能做到硬度不是太高，而且可以实现硬度不是太高。控制硬度有利于大规模加工时候对刀具的保护。这种材料目前在美国已经在军事和高端汽车零部件方面应用，可能会对中国禁运。目前给国内能用的可以做到1250MPa抗拉强度。学材料的人，懂的都懂。第一次看到1950MPa材料的时候，我一度以为他们写错了。直到我真的看到了这些材料。</p>\n<p data-pid=\"wAu59jnF\">之所以短期内在材料开发方面无力，是因为这些企业对材料的基础投入很多，而且具有超长时间的持续投入。例如某很多材料，国内基本上就做个常温机械性能就完了。某美国粉末冶金材料企业把数百种不同的材料以及不同配方的粉末冶金材料从低温到高温的机械性能都做了。然后每年都会新作十几种材料。</p>\n<p data-pid=\"AAVLKgtO\">非金属材料的绝对垄断：</p>\n<p data-pid=\"jc1qRTGj\">越是高端领域的塑料颗粒配方，越是绝对的国外公司垄断。国内一些所谓的塑料配方公司很多也就是塑料配方的搬运工；</p>\n<p data-pid=\"SpuwKP30\">国六排放大家都知道有一个东西叫GPF，目前国内已经有个别企业在做这个东西，也是很了不起的一件事情。但是里面的GPF载体（涂敷之前）的公司基本只有一家，这家企业女孩子很了解，叫做康宁。由于我国在排放法规方面以国六大幅提前为典型进度太快，进排气及后处理是被海外材料和关键结构设计垄断的重灾区。而且应该长期无解。</p>\n<p><img src=\"https://picx.zhimg.com/v2-e55644f9a22bfa34645449f4f206ab0d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"980\" data-rawheight=\"653\" data-watermark=\"watermark\" data-original-src=\"v2-e55644f9a22bfa34645449f4f206ab0d\" data-watermark-src=\"v2-822f4b6a70e7aa1ec7e50e811c2a9ec4\" data-private-watermark-src=\"v2-58ee873124422b5aba7efe51e9dd1855\"></p>\n<p data-pid=\"U-K6oRER\">机油添加剂的垄断：</p>\n<p data-pid=\"uei90iXJ\">机油大家都知道，很多人也在用中石油、中石化等国产企业集团提供的机油品牌，用的也不错。但是机油主要分为两个部分，1是基础油，2是添加剂。主要的利润在添加剂部分。基础油目前国内很多，但是机油添加剂研发主要是国外企业，例如出光、亚富顿、路博润、润英联、嘉士多等等。</p>\n<h2>系统性应用</h2>\n<p data-pid=\"h2wAcQDL\">这里主要指的是电控和燃油喷射系统。在柴油机这块国内的替代做的比较好，主要还是在很长一段发展时间里，我国的柴油技术的法规进度大概比欧洲慢5-6年左右，国内有比较长的时间开展国产化开发工作。另一方面也是因为我国并没有走欧洲车用高速柴油机的路子，在商用车领域的柴油机的控制策略的复杂程度和相关零部件的加工精度要求还是弱了一些的。</p>\n<p data-pid=\"u4BcQUc7\">其实现在已经有不少企业可以做喷油器，线束以及一些电控传感器和配件，包括在市场上作为售后件也能直接匹配。但是由于电控系统的主要开发企业还是那么几家：联电（博世）、德尔福、日本电装等，他们一般只会用自己的配套零件来做系统。</p>\n<p data-pid=\"SLWBCewq\">国内不是没有做过国产的电控系统。比如说陕西后来被比亚迪收购的秦川福莱尔汽车就曾经自己做过自己开发的电喷系统，我的研究生导师还负责过其中的核心部分的开发。后来一部分系统还移植到了中国一款有名的查打一体无人机的发动机控制系统里面（我的研究生同学现在还在秦岭山里与埃及等国之间穿梭之中）……</p>\n<p data-pid=\"sQn385T2\">再比如吉利汽车在甘肃等省参与国家试点的甲醇汽车，也因为甲醇汽车的配套太少，联电拒绝了开发任务，所以吉利汽车开发了一家国产的电控喷射系统服务商，然后一路支持到现在据说数据还不错。</p>\n<p data-pid=\"ii98vYdt\">但是就传统燃油领域来说，还是传统这几家供应商最为强大。而且由于近些年来电气化零部件和智能化控制的要求越来越多，而控制系统和标定策略的开发开始转向虚拟开发模式，这种距离未来其实会越来越大。而且目前国内对燃油车发展政策未来的不确定性，严重影响了对这类技术的投入。所以国内未来基本上不会再出现新的追赶的企业了。但是如果燃油车因为替代燃料又维持下来了，后续的追赶落差会越来越大，因为国内车企每每开发一台发动机，对方就积累海量的一波数据和模型，随着现在机器学习和虚拟迭代开发的发展，对于这些模型数据的提炼和自动学习迭代有了更好的方法，所以这种迭代经验会越来越多。</p>\n<h2>工业软件</h2>\n<p data-pid=\"Jlf7GpZ6\">这个恐怕是最弱的了吧。别说什么三维造型、计算软件、标定软件、NVH测试软件、结构仿真、流体仿真、燃烧仿真、振动与噪声仿真、温度场仿真等等这些独立的设计与仿真软件，未来的发展路径是更加深入的设计模型化以及将CAD和CAE结合在一起。你可以理解为未来当你要设计一个东西，可以直接修改几个参数，模型就会自动开始构建和考虑最小壁厚和最小倒角等工艺限制要求，然后会自动校核空间干涉限制，做出避让。设计完成后做仿真，会自动根据仿真的结果，哪里安全系数很高，就会自动减肉，哪里安全系数不足，就会根据敏感度寻找最合理的部分加肉。</p>\n<p data-pid=\"smDIwiyJ\">未来的工业设计会越来越简单，但是背后是大量的算法模型，而且很多仿真相关的算法模型是通过监控大量实际运行的零件的高精度实时测量数值，与模型仿真结果对照，然后修正模型，最终让模型具备真实系统的响应特征。这就是所谓真正意义上的数字孪生。</p>\n<p data-pid=\"BZP-VfBC\">现在很多国家，尤其是美国，正在各个领域在尝试构建“绝对优势模型”，甚至包括我们传统觉得纯粹是人力劳动的机械设计领域。这几年，我渐渐开始注意到很多我合作的美国供应商以及美国的研究机构，给我发的设计原型，结构越来越美。所谓美，指的是模型的线条越来越顺畅，光滑，而且越来越多的出现很顺滑的曲面。已经到了一个优雅和美的境地。</p>\n<p data-pid=\"rUnlUw-X\">这个是让我很恐慌的，有些时候甚至有丁仪看到水滴时候的感觉。因为真正做过结构设计的人会知道，当你的设计要满足很多工艺要求、装夹定位以及接口要求的时候，顺畅的曲线和曲面是很难出现的，特别是有些是要先设计，然后计算，然后要在特定的位置加肉或者减肉，然后才能满足要求，就算你最后加上默认的倒圆过渡，模型中必然是存在多段曲线和曲面的衔接。</p>\n<p data-pid=\"WLAh05UC\">我形象一点的描述就是，正常人画一个东西，正常就是要先画出基本结构，然后慢慢丰富调整，最后调整到一个合适的设计。</p>\n<p><img src=\"https://pica.zhimg.com/v2-662334640a483be2f2fc991860da0100_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3209\" data-rawheight=\"3217\" data-watermark=\"watermark\" data-original-src=\"v2-662334640a483be2f2fc991860da0100\" data-watermark-src=\"v2-696893b739d58b010a78f6a04774a0d7\" data-private-watermark-src=\"v2-e91ae44d69f9b3a9a320eb65277d1353\" data-tags=\"porn\"></p>\n<p data-pid=\"vQk5LZzm\">而我现在经常会看到，感觉就是一挥而就的设计。感觉一个画家下第一笔的时候，就已经知道了整幅蒙娜丽莎样子。或者说一个画家从画第一根头发开始，就直接下笔了，因为他这时候都已经知道从头上剩下的头发位置到脚上的鞋带画在哪里了。</p>\n<p><img src=\"https://pica.zhimg.com/v2-f0f3230486dd82b2f084329e027d589e_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3402\" data-rawheight=\"1984\" data-watermark=\"watermark\" data-original-src=\"v2-f0f3230486dd82b2f084329e027d589e\" data-watermark-src=\"v2-f1ebc0cdf5731e46cc771bf13c173577\" data-private-watermark-src=\"v2-9e34c9a749909ab48988491cff8ddf26\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-2402780aab3a1af84aa8338a24a6b37d_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"5120\" data-rawheight=\"2880\" data-watermark=\"watermark\" data-original-src=\"v2-2402780aab3a1af84aa8338a24a6b37d\" data-watermark-src=\"v2-d3de864d9c72b3f8ac48a1e0d9f10e20\" data-private-watermark-src=\"v2-45d836d2f7251288e1252078fd09d821\"></p>\n<p data-pid=\"vicl2hs0\">其实工业界喊工业4.0狼来了喊了很多年了，很多人觉得就是一个噱头，我一度也认为是如此，但是过去四年越来越不觉得是这样，而且我自己也在领导做这方面基础模型的工作。这些不是仅出现在设计这一端，未来这样的模型可以直接放到智能加工中心中，加工中心根据比对毛坯模型和机加工成品模型的区别，自动分配多道工具的加工量和装夹与加工分步细节，然后自动编制分工序图和加工参数。</p>\n<p data-pid=\"e0jdHjVs\">再到未来你会发现，你必须要买某家的软件才能减少设计差错，你必须订购某个软件库才能让你的工程师完成设计，你必须购买某家的成套加工中心，才能实现在你找不到制造专家的情况下，靠极低的薪水招募到的临时工就可以完成复杂工序的零件制造工作。</p>\n<h2>基础材料科学和基于模型开发的设计革命，才是我们最该担心卡脖子的东西。</h2>\n<hr>\n<p data-pid=\"ve0cTM3F\">很多人其实会觉得既然内燃机这么麻烦，干脆绕过不做了不就好了吗。但是其实你会发现，其实发动机有这么大的保有量以及这么大的制造成本的容忍度，恰恰是支持先进材料和先进制造应用的基础平台。因为在现代工业下，你必须要有足够的制造量，才能支持你对材料、工艺、设计、软件系统的开发。</p>\n<p data-pid=\"SPbUIlsC\">汽车发动机其实相当于在每辆车的前舱设置了一个离线式发电站。在每辆车上能够实现从最低品质的无序燃烧热能，提炼出有序和高品质的机械能，而且效率还不错，而且费用还可以支持普及大多数人都可以接受。这简直就是工业奇迹。支撑这个奇迹的本身就是大量的材料、工艺、结构与设计能力百年来的迭代突破。你以为你绕过了这个坑，但事实上且不说你根本绕不开来，我更想要说的是它背后本质的基础科学将会在另一条赛道上默默的等你撞上来。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/JackyQ?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">JackyQ</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/538554296/answer/2571491783?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">29 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/510840881?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">有没有人面试过研发工艺员啊？</a><br><a href=\"http://www.zhihu.com/question/524044534?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">请问中山纬创资通的EE工程师的工作怎么样，应届生可以学到东西吗？</a><br>\n","link":"http://www.zhihu.com/question/538554296/answer/2571491783?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"发动机多个活塞同时工作，是如何保证发动机的平衡的？","date":"2022-07-18 05:22:51","description":"\n<p data-pid=\"PQtJdx2t\">这个我知道！</p>\n<p data-pid=\"fzIsh5fD\">所谓发动机的平衡，包括以下方面的平衡：</p>\n<p data-pid=\"N8RN5bQm\">1、做功输出的平衡性，要求对n缸的4冲程发动机，必须保证每旋转720/n度就有一个缸做功。例如，5缸发动机每旋转144度就有一个缸做功。</p>\n<p data-pid=\"wl3-qWWe\">2、活塞重量的横向平衡性，也就是保证曲轴两边的活塞位置始终对称。以直4为例，1号和4号的位置总是同步，2号和3号的位置总是同步，这就是左右对称。活塞重量左右不对称的发动机会呈钟摆式震动，如直3、直5、v6、v10。</p>\n<p data-pid=\"L0e8-VdU\">3、活塞重量的纵向平衡性，就是几个活塞的重量运动相互抵消。还是以直4为例，1号和4号运行到上止点的时候，2号和3号运行到下止点，这样它们的重心运动就抵消了。纵向不平衡的主要也是直3、直5、v6、v10。</p>\n<p data-pid=\"DREfd6LL\">4、活塞重量的二阶平衡性。这是直4无法解决的典型缺陷，刚才我们说了，1号和4号运行到上止点的时候，2号和3号运行到下止点，因此四个活塞的整体重心在行程的中点。但是当曲轴旋转90度，也就是四个活塞位置重叠的时候，它们并不在行程的中点，而是在行程中点偏下的位置，也就是说四个活塞的整体重心比行程的中点下移了。因此在发动机的运行过程中，活塞的整体重心仍在反复震动。二阶不平衡最严重的典型代表是直4以及两个直4拼成的v8，但水平对置4是平衡的，直6、v12也是平衡的。</p>\n<p data-pid=\"WZWncuK4\">5、活塞动能的平衡性。曲轴的旋转速度是恒定的，但活塞的往复线性运动速度并不是匀速的，而是在上下止点附近最小，行程中部最大，因此每个活塞储存的动能也是变化的。动能平衡的发动机要求一些活塞在上止点和下止点时，另一些活塞在行程中部，这样所有活塞的动能总和才是固定的。3、6、8、12缸都是动能平衡的、而直4和水平对置4都是不平衡的。</p>\n<p data-pid=\"3qYlam6N\">总而言之，直6和水平对置6是所有方面都平衡需要的最少缸数，但直6太长了，水平对置6的加工精度太难了。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wei-suo-de-min-gong?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">猥琐的民工</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/538800499/answer/2567565980?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">3 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/538299788?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">气门弹簧的作用是什么？它的异常对发动机有什么影响？</a><br><a href=\"http://www.zhihu.com/question/535702828?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">活塞环在压缩发动机中的作用是什么？它是如何工作的？</a><br>\n","link":"http://www.zhihu.com/question/538800499/answer/2567565980?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"增程式汽车、插电混动汽车、油电混动汽车三者技术壁垒哪个更高？未来前景哪个更好？","date":"2022-07-18 05:21:12","description":"\n<p data-pid=\"eFt5Hm81\">弄了一个分类图，让大家能更好理解这几种电动车是啥样的。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-0734544836cbfbd58671d25384ffcdd9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"916\" data-rawheight=\"523\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Hx46uYGm\">增程式电动汽车、插电混动汽车、油电混动汽车，如果单纯文字描述来说，虽然叫法不同，但实际在某个方面也可以说都是同一种车型。</p>\n<p><img src=\"https://pica.zhimg.com/v2-6a30bc13b105df9d8ea4c90eff803b76_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"914\" data-rawheight=\"507\" data-watermark=\"watermark\" data-original-src=\"v2-6a30bc13b105df9d8ea4c90eff803b76\" data-watermark-src=\"v2-fe241e9822a0f94e4f2bc471b4f2c7bc\" data-private-watermark-src=\"v2-421381b488132c34b3c5adc2d26edbfc\"></p>\n<p data-pid=\"252MEAXC\">以理想ONE说，单汉语说它是插电混动，增程式，油电混动，都是对的。</p>\n<p data-pid=\"JKVEbg2n\">如果从英文缩写来解释，目前<b>国内乘用车能上新能源车牌照的只有BEV（纯电动）和PHEV（插电混动）两种车型</b>，其他的HEV（混合电动）或者REEV（增程式电动）,只要不是插电的，都不能上新能源牌照。</p>\n<p data-pid=\"7d4uNVCZ\">增程式电动汽车如果按照混合动力的原理来说，采用的是混合动力汽车的<b>串联行驶</b>，就是多了个<b>增程器</b>（<b>发动机+发电机+发电机控制器）。</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-1e65f4962c30584d9e7855154eb75fc0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"677\" data-rawheight=\"482\" data-watermark=\"watermark\" data-original-src=\"v2-1e65f4962c30584d9e7855154eb75fc0\" data-watermark-src=\"v2-051b5e774c55f8803cd460bc7b8e44a4\" data-private-watermark-src=\"v2-f9efa8e5f837625b20f8ce863ec5a4e0\"></p>\n<p data-pid=\"Y0gue21a\">上图可以看到，<b>增程式发动机是和发电机物理连接，是不和驱动系统物理相连的</b>。是通过发电装置，将燃油的化学能转为电能（三相交流电），然后由变换器转为<a href=\"https://www.zhihu.com/search?q=%E7%9B%B4%E6%B5%81%E7%94%B5&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2193878268%7D\" class=\"internal\">直流电</a>，通过驱动电机进行牵引力驱动控制。</p>\n<p data-pid=\"hyPLWYl7\">增程汽车的行驶都是由驱动电机带动的。驱动电机可以由动力电池提供能量（外来充电桩直接充电），也可以是内部增程器发电（发动机汽油燃烧，化学能发电）提供能量，同时也可以由<a href=\"https://www.zhihu.com/search?q=%E5%A2%9E%E7%A8%8B%E5%99%A8&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2477544188%7D\" class=\"internal\">增程器</a>给动力电池充电。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-ce32c0a4d6f2b42313560fe6d20de937_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"564\" data-rawheight=\"281\" data-watermark=\"watermark\" data-original-src=\"v2-ce32c0a4d6f2b42313560fe6d20de937\" data-watermark-src=\"v2-ee384862cd80dd4d4cef34965a44feb8\" data-private-watermark-src=\"v2-91eff0e9d006f9a2c8237ee3f68be263\"></p>\n<p data-pid=\"d7zxEKgF\"><b>增程模式的内在规则</b></p>\n<p data-pid=\"R2UgSwap\">在电池电量达到预设的电量最低值时，增程器系统启动，发动机运行最佳的状态，使电动机发电。一部分电量用于驱动车辆行驶，一部分电量为动力电池充电。</p>\n<p data-pid=\"lrm8FW60\">增程模式发动机有三种工作模式，根据控制策略的不同，可以选择发<b>动机恒功率模式</b>，<b>发动机功率跟随模式，发动机混合模式（恒功率+功率跟随）。</b></p>\n<p><br></p>\n<p data-pid=\"TSguJ46x\"><b>HEV中，本田i-MMD系统和丰田的THS系统是绕不开的两大系统。</b></p>\n<p data-pid=\"qum1VYGe\"><b>简单介绍下本田的i-MMD系统，油电混合。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-1f39cc49e6787e7ea5d71fe5a38e9948_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1220\" data-rawheight=\"691\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"TusCLBvo\"><b>发电机与驱动电机是同轴安装的，通过空心轴将动力分别与发动机或输出轴耦合。</b></p>\n<p data-pid=\"p2-mwSnZ\">其中发电机和发动机，驱动电机和输出轴都是刚性连接的不可分离状态。而驱动电机与发动机之间是通过一个多片离合控制联通和断开。这样无论是发动机与发电机之间，还是电机与发动机之间，输出轴都会为<b>转矩耦合</b>模式。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-8b954c64dfb89e02a5ddb56520b5ea4c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"386\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"_SlvuLL3\">这样加速时，发动机和电机的扭矩叠加，就能进行双扭矩的加速。同时断开电机和发动机的连接，就可以变化成纯电驾驶模式。</p>\n<p data-pid=\"2DdBvgFM\"><b>丰田的THS混动系统，油电混合。</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-02582fc4822a4e444c899b609fec17ed_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"558\" data-rawheight=\"345\" data-watermark=\"watermark\" data-original-src=\"v2-02582fc4822a4e444c899b609fec17ed\" data-watermark-src=\"v2-70aef260b4d5b27211aa2ca588febc6d\" data-private-watermark-src=\"v2-44b94c36685acb5c0afa5d857f3d3984\"></p>\n<p data-pid=\"eawDGlBz\">MG1/MG2/发动机输出轴连接到一套行星齿轮结构的太阳轮、齿圈、行星架上，利用齿轮机械结构来进行动力的分配和组合。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-bf4ae380de04a781e9e7d6044f37eef9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"563\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"QRoHuZMI\">其中的发动机与发电机MG1就是<b><i>转速耦合</i></b>方式，主要用于发电。这样发电的好处就是发动机和MG1的转速不用保持比例关系，发动机可以任意转速（可以长期保持高效率区间），一部分动力发电，一部分动力驱动车辆。而MG2电机与外齿轮为转矩耦合方式，用于驱动汽车，在减速制动过程中也能发电使用。</p>\n<p data-pid=\"trHhrxey\">再来说下混动相关专利和国内市场。</p>\n<p data-pid=\"7QpXDnDh\">截止到2022年，日本三驾马车的专利数量占据了油电混动的专利前三。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-e463f304fbb8204a9cf18bf16e14bbb3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"205\" data-watermark=\"watermark\" data-original-src=\"v2-e463f304fbb8204a9cf18bf16e14bbb3\" data-watermark-src=\"v2-92d4125ef46718505491cc0aba07b066\" data-private-watermark-src=\"v2-a7751b649f6c9d295d52b3beb510d08f\"></p>\n<p data-pid=\"n8VqTNOW\">通过全球专利数据库可以看到，全球混合动力技术申请人排名最前面是丰田、本田和日产三家。</p>\n<p data-pid=\"lgCj5W-N\">和专利数不完全一样的是，目前国内混动市场是三大块：</p>\n<p data-pid=\"MZZTgH1E\">以丰田 THS、本田i-MMD和日产e-power代表的日系主导双电机油电混动（非插电）方案。</p>\n<p data-pid=\"waqK9upg\">以48V轻混技术的P0电机和P2单电机结构为主的德系PHEV混动以及双电机方案。</p>\n<p data-pid=\"RWWKhy8j\">国内自主品牌推出的众多混动的方案，如比亚迪的DM-i,长城的DHT，吉利的雷神。</p>\n<p data-pid=\"zK9UZtYm\">看下<b>国内2021年HEV的各品牌销量占比，丰田、本田、日产占据了国内大半江山。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-50ce7b280880217d1a301eec8e52ee4a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"544\" data-rawheight=\"345\" data-watermark=\"watermark\" data-original-src=\"v2-50ce7b280880217d1a301eec8e52ee4a\" data-watermark-src=\"v2-c59ac2ee58b9e71528cd43c2ea2dc352\" data-private-watermark-src=\"v2-91708c06d06425dc455c9c638e05f3ae\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-551236d6322e180e3a57ee4acb658737_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"430\" data-rawheight=\"350\" data-watermark=\"watermark\" data-original-src=\"v2-551236d6322e180e3a57ee4acb658737\" data-watermark-src=\"v2-68b43679cc8292c52eaafe1d67f0909f\" data-private-watermark-src=\"v2-f08a15958501606d3b1de76fa19c7902\"></p>\n<p data-pid=\"GtsRSAwb\">再看下2021年9月的PHEV销量结构。国产比亚迪+理想占据了销量的大头，因为有些国产品牌在2021年底和2021年初才推出PHEV车型，所以预计2022年的国产PHEV将会抢占更多的市场。</p>\n<p><img src=\"https://pica.zhimg.com/v2-d98479efbb42fe687e2b745612012ab5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"575\" data-rawheight=\"326\" data-watermark=\"watermark\" data-original-src=\"v2-d98479efbb42fe687e2b745612012ab5\" data-watermark-src=\"v2-615a12b44deed6d1aca2e13ef1a2b090\" data-private-watermark-src=\"v2-0f77c5ef89bb7a69c6998b04ceafb3f2\"></p>\n<p data-pid=\"oNI7scWm\">综合来说国内品牌前景的话，因为油电混动（HEV）的市场（专利）很明显被日本的三座大山占据了，国内的品牌现在也基本都是绕道走PHEV和BEV的路线。</p>\n<p data-pid=\"z0PxvY9w\">但是随着BEV的发展来说，PHEV我认为前景也不明朗。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-af3db9eb1ee5bdd5a352e7c79e3c361d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"467\" data-watermark=\"watermark\" data-original-src=\"v2-af3db9eb1ee5bdd5a352e7c79e3c361d\" data-watermark-src=\"v2-8eab6005b6572f914efb24c9f3046916\" data-private-watermark-src=\"v2-d90cf99ec35d4a842bc7b03bc03e5df9\"></p>\n<p data-pid=\"Hb0PQdce\">2021年新能源车上半年的销量，80%均是纯电动车型（BEV）给出的。1-6月销量前15的车型中，只有两款车型是PHEV车型。</p>\n<p data-pid=\"99P2nis-\">而明年开始，已经有城市开始取消了PHEV的优惠政策。</p>\n<p><img src=\"https://pica.zhimg.com/v2-ebe3e47b404ba8856482bf072d60a8c9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1002\" data-rawheight=\"122\" data-watermark=\"watermark\" data-original-src=\"v2-ebe3e47b404ba8856482bf072d60a8c9\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<blockquote data-pid=\"B1lbRZl5\">上海市政府出台了该市新能源汽车（NEV）牌照发放的最新政策。自2021年3月1日至2022年12月31日，通过上海市交通委组织的月度拍牌程序获得车牌的消费者，在购买插电式混合动力汽车（PHEV）时将不再有资格获得免费的新能源汽车牌照。<br>根据新政，购买纯电动汽车（BEV）的消费者仍可以获得一块免费专用牌照，前提是消费者个人名下在本市没有注册登记的纯电动汽车。自2023年1月1日起，该市将不再为插电式混合动力车发放免费牌照。此外，增程电动汽车（REEV）也包括在插电式混合动力汽车内。</blockquote>\n<p data-pid=\"7pg_3_EC\">增程式插电汽车（PHEV），“<b>比燃油车省钱，比纯电车跑得长！”</b>的优势，在纯电车的长续航推出下，这句话也会慢慢变得不再正确。至于非插电的混动（HEV），个人觉得在国内更是没有未来，纯燃油车被纯电车抢占份额后，紧接着就是HEV的份额会被挤掉了。所以，知道为什么丰田、本田、日产这两年那么急切地开始转战BEV了吧。</p>\n<p data-pid=\"qjtWFJIV\">看未来，还是得看纯电动。如果没有什么大的意外，按照目前的发展趋势，燃油发动机关联的动力体系预计在10年后，就会真正成为市场上的小众了。</p>\n<p><br></p>\n<p data-pid=\"Balwjq4L\">（图片来源网络，侵删！）</p>\n<p><br></p>\n<p data-pid=\"M7jwdae9\">参考资料：</p>\n<p data-pid=\"TgYhMN8n\">1、<a href=\"http://link.zhihu.com/?target=https%3A//baijiahao.baidu.com/s%3Fid%3D1734402437381933117%26wfr%3Dspider%26for%3Dpc\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">baijiahao.baidu.com/s?</span><span class=\"invisible\">id=1734402437381933117&amp;wfr=spider&amp;for=pc</span><span class=\"ellipsis\"></span></a></p>\n<p data-pid=\"ql5dOW0H\">2、<a href=\"http://link.zhihu.com/?target=https%3A//baijiahao.baidu.com/s%3Fid%3D1718022932922857498%26wfr%3Dspider%26for%3Dpc\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">baijiahao.baidu.com/s?</span><span class=\"invisible\">id=1718022932922857498&amp;wfr=spider&amp;for=pc</span><span class=\"ellipsis\"></span></a></p>\n<p data-pid=\"NfbZ3NX4\">3、<a href=\"http://link.zhihu.com/?target=https%3A//www.163.com/dy/article/G4AFK21N0517NFK2.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">2023年起，上海停止为插电式混合动力汽车发放免费新能源汽车牌照</a></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/526762703/answer/2557803850?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">28 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/532257735?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">增程式新能源车型做保养都有什么项目？</a><br><a href=\"http://www.zhihu.com/question/533087760?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">是汽油汽车更好、还是油电混动汽车更好、抑或是纯电动汽车更好？</a><br>\n","link":"http://www.zhihu.com/question/526762703/answer/2557803850?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"《原神》大陆是真有小城市那么大还是被缩放了?","date":"2022-07-18 04:27:47","description":"\n<p data-pid=\"Xl-Xz2Of\">我们可以来具体算一下。首先需要知道一个比例尺，比如地图的一个像素等于多少米。</p>\n<p><img src=\"https://pica.zhimg.com/v2-a2a26924b95f80a011b28f4c70aceb8b_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1043\" data-rawheight=\"722\" data-watermark=\"watermark\" data-original-src=\"v2-a2a26924b95f80a011b28f4c70aceb8b\" data-watermark-src=\"v2-dbcb6a2242fa81b68d5e1a7ca36338af\" data-private-watermark-src=\"v2-d37bac06b21c41773e3dae1cb7182fdb\"></p>\n<p data-pid=\"v1bM2Ql4\">这里我领了一个任务，看到距离是1713米。在地图上的像素距离是 <img src=\"https://www.zhihu.com/equation?tex=%5Csqrt%7B725%5E2%2B732%5E2%7D%3D1030\" alt=\"\\sqrt{725^2+732^2}=1030\" eeimg=\"1\"> 像素。换句话说，这里的比例尺是1.66米/像素。</p>\n<p data-pid=\"Mh2a-nxT\">有了这个数据，其实问题就简单了很多。我先把璃月城区用颜色涂起来，看看面积有多少：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-09299ea67a6985ad67faa375c79957e5_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"410\" data-rawheight=\"348\" data-watermark=\"watermark\" data-original-src=\"v2-09299ea67a6985ad67faa375c79957e5\" data-watermark-src=\"v2-da12264e033337b403935c99821e0e90\" data-private-watermark-src=\"v2-7aa3abb07641a2e6a26afe4e4e5ed9ac\"></p>\n<p data-pid=\"2zuENbl4\">拿Mathematica算一下：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-dd2c3f0a302cec23c90871d355a71c4b_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"747\" data-rawheight=\"306\" data-watermark=\"watermark\" data-original-src=\"v2-dd2c3f0a302cec23c90871d355a71c4b\" data-watermark-src=\"v2-29d555b73ed9e1e0ebfcacf0da735dd3\" data-private-watermark-src=\"v2-706d64468a028f96eedd4b3de2897834\"></p>\n<p data-pid=\"55W9KVZi\">125275平方米，也就是0.12平方公里。对，只有0.12平方公里。如果做个简化，把城市视为「真空中的圆形区域」，那这个区域的半径就只有200米。</p>\n<p data-pid=\"a5kIUxK9\">所以，如果真的把璃月港对应到真实的世界，大概也就是一个小商业区的大小。</p>\n<p data-pid=\"sY4-CX1J\">这里有一个很矛盾的地方：从感知上，我们会觉得璃月港里的东西非常丰富，似乎什么都有；但是，从数据上看，它的大小却只相当于半径200米的区域。这个矛盾是从哪里来的呢？</p>\n<p data-pid=\"9LINnc5f\">很简单，就是在于简化：真实世界中，有很多很占空间却又很「无聊」的东西——比如饭店里重复的包厢、重复的桌椅。这些东西占据了绝大多数的空间，而在游戏中都被简化了。只要有一个做做样子就行了。</p>\n<p data-pid=\"quOCE7h_\">当然，题主问的是「《原神》大陆」，为了防杠，我也来算一下已经开放区域的大小（没有包括岛屿和内陆水域，所以也没有包括稻妻）：</p>\n<p><img src=\"https://pic4.zhimg.com/v2-8c557135e24c605569a041df568425d7_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"722\" data-rawheight=\"722\" data-watermark=\"watermark\" data-original-src=\"v2-8c557135e24c605569a041df568425d7\" data-watermark-src=\"v2-56237a89cfc503a81de3b67882cbc9ab\" data-private-watermark-src=\"v2-065fee408bbe56c8b1801245a03d237b\" data-tags=\"porn\"></p>\n<p data-pid=\"52A50kJ1\">拿Mathematica算一下：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-e42feb0e9bc9ad4e25c89bd62d7be487_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"760\" data-rawheight=\"459\" data-watermark=\"watermark\" data-original-src=\"v2-e42feb0e9bc9ad4e25c89bd62d7be487\" data-watermark-src=\"v2-b780248aaf77b04233f773608be02158\" data-private-watermark-src=\"v2-5ef9aa9fc3a0919836bfce344772dc29\"></p>\n<p data-pid=\"bldHjm5m\">占地面积9.4平方公里。</p>\n<p data-pid=\"ZB-hkLVG\">这是个什么概念呢？找了一些国土面积和9.4平方公里最接近的国家：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f16e7e9d2881bef4248d1b62740c5889_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"641\" data-rawheight=\"224\" data-watermark=\"watermark\" data-original-src=\"v2-f16e7e9d2881bef4248d1b62740c5889\" data-watermark-src=\"v2-2057a84206a0d44a7959d3d8c60220e9\" data-private-watermark-src=\"v2-ce3c1ebb41447c0b5e90cf1734736bd1\"></p>\n<p data-pid=\"a_LPAbXO\">第一个是个群岛国家，不好比较，就看第二个：直布罗陀，6.5平方公里。璃月+蒙德比直布罗陀大不了多少……</p>\n<p><img src=\"https://pic1.zhimg.com/v2-9bae33fcf7606288f2a27c191ac0b5d1_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"558\" data-rawheight=\"482\" data-watermark=\"watermark\" data-original-src=\"v2-9bae33fcf7606288f2a27c191ac0b5d1\" data-watermark-src=\"v2-19b052090a56bf908ab8167bcfe51ceb\" data-private-watermark-src=\"v2-a74d630b839206dd8802f9b7876205cb\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-3a1a86c7e633ef77b680f848c649e37b_720w.png?source=b1748391?rss\" data-caption=\"直布罗陀的一座山。这个尺寸，是不是有种「龙脊雪山」的感觉？\" data-size=\"normal\" data-rawwidth=\"1062\" data-rawheight=\"703\" data-watermark=\"watermark\" data-original-src=\"v2-3a1a86c7e633ef77b680f848c649e37b\" data-watermark-src=\"v2-4bbdde1457311ae73fdf513917ea878c\" data-private-watermark-src=\"v2-605b6bb6844fda73bf01d2789f1b0e59\"></p>\n<hr>\n<p data-pid=\"vQjx4E4M\">总结来说，城市确实被缩小了。但如果作为一个国家，这个面积还是说得过去的。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/question/543286662/answer/2578308292?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\">知乎用户（登录查看详情）</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/543286662/answer/2578308292?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">12 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/514445235?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《原神》玩家女生多吗？</a><br><a href=\"http://www.zhihu.com/question/511763493?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《原神》这款游戏是什么时候发展到现在这个样子的？</a><br>\n","link":"http://www.zhihu.com/question/543286662/answer/2578308292?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"用乐高，重现心目中那些「最伟大的作品」（下）","date":"2022-07-18 03:20:51","description":"适逢周杰伦新专辑上线，更新上次没拍完的乐高翻拍。<a href=\"https://sspai.com/post/74309\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74309"},{"title":"派早报：英特尔以成本上涨为由计划涨价，FCC 提议提高宽带标准等","date":"2022-07-18 00:53:00","description":"你可能错过的新鲜事英特尔以成本上涨为由计划涨价据《日经新闻》援引直接知情行业高管说法，英特尔以成本上升为由，计划在今年晚些时候提高大多数处理器和WiFi芯片等其他芯片产品的价格。该消息后经英特尔回复得 ...<a href=\"https://sspai.com/post/74312\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74312"},{"title":"笔记本电脑太烫了？收下这份指南，你也可以清理它内部的灰尘","date":"2022-07-17 09:00:00","description":"清理笔记本电脑内部其实并不难，掌握好这些步骤，你的笔记本电脑也有第二春。<a href=\"https://sspai.com/post/74307\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74307"},{"title":"本月玩什么 | 异度神剑 3、数码宝贝 绝境求生、时空勇士","date":"2022-07-17 07:00:00","description":"无聊了？本月这些新作值得一试。<a href=\"https://sspai.com/post/74287\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74287"},{"title":"把握浏览器的「门面」：少数派作者们都在用什么启动页？","date":"2022-07-16 07:30:00","description":"作为「网上冲浪」的第一站，浏览器启动页向来是许多人热衷于展现个性的地方。每个人对浏览器启动页的需求都不尽相同，有人偏爱实用、有人则更注重「颜值」。因此，我们邀请了6位少数派作者来分享一下他们自己在用什 ...<a href=\"https://sspai.com/post/74276\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74276"},{"title":"真正的新生力量：从金曲奖最佳新人入围者看乐坛新风向","date":"2022-07-16 03:00:00","description":"金曲奖向来是华语乐坛中分量最重、甚至是唯一真正有广泛影响力的音乐奖项。进入分众时代后，金曲奖可能选不出曾经红极华语世界的歌王歌后，作为审美在线的奖项，他们在发掘新人这件事上焕发了新的生机，许多来自小公司甚至独立发片的艺人依靠优质的作品收获了金曲奖的青睐，一朝提名天下知。这篇文章，我就借着疫情之后的第 31 至 33 届金曲奖最佳新人奖入围名单，聊聊我眼里这几年的风向变化。<a href=\"https://sspai.com/post/74289\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74289"},{"title":"《喜羊羊与灰太狼之奇妙大营救》开播，有哪些值得关注的点？","date":"2022-07-15 13:25:01","description":"\n<p data-pid=\"BRVALA4G\">       今天，大家期待的《羊村守护者》系列回归了！这次羊狼们将到来全新的国度——妙狗国，展开一场妙趣横生又惊险刺激的冒险之旅。虽然一路上困难重重，险象环生，但羊羊们历经千辛万苦终于重新集结，并且还收获了新的力量。然而这看似利好局面的背后却隐藏着更大的阴谋。羊狼们将如何在逆境中突破自己，再次拯救家园？7月15日起，《喜羊羊与灰太狼之奇妙大营救》在金鹰卡通频道全国首播，优酷、芒果TV、腾讯视频、爱奇艺四大网络平台同日更新，期待和你一起追剧，挖彩蛋！</p>\n<p><img src=\"https://pic1.zhimg.com/v2-0ac5e79a9df03543e7afc87aa030e62b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1920\" data-watermark=\"watermark\" data-original-src=\"v2-0ac5e79a9df03543e7afc87aa030e62b\" data-watermark-src=\"v2-61a9ba209a47d8a0907d30d3505be91a\" data-private-watermark-src=\"v2-f6de27d45bf3ad0c66112d0dfcf9b00e\"></p>\n<p data-pid=\"YqTdtlGZ\">       这次《喜羊羊与灰太狼之奇妙大营救》的故事是承接《异国大营救》的故事，记得在当时在《异国大营救》播出后，我们收到了好多粉丝的反馈说很喜欢羊羊们猫化的形象，觉得他们的反差的性格特点特别萌，调皮霸气喜猫猫，酷飒的美猫猫，爱干净沸猫猫（我不听）、懒懒的暖猫猫和搞笑担当慢猫猫。</p>\n<p data-pid=\"NThUvhzT\">这次故事中我们再次让羊羊们猫化，除了保留了角色原有的猫化性格，同时也出现了更多的情感起伏，性格情绪的碰撞给小羊们的冒险之旅增添了不少麻烦，但同时也带来了更多笑料，希望大家能从感受到情感共鸣，在笑泪中感受成长。还有什么爆笑故事，大家亲自在妙狗国的冒险中体会吧！</p>\n<p><img src=\"https://pica.zhimg.com/v2-9079266192edfd0769d1feeae20fd7f9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-9079266192edfd0769d1feeae20fd7f9\" data-watermark-src=\"v2-3168d483c6e6a5ab468c94ad3404241b\" data-private-watermark-src=\"v2-a9778d9389b6af14a757535e8c887b04\"></p>\n<p data-pid=\"SoTkQe1P\">     大家所期待的懒羊羊猫化形态也将首次登场，憨态可掬，十分可爱！，懒羊羊猫化会是什么样的性格呢？期待大家分享自己心中的懒猫猫形象。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-51b495a88a72ca3c6f22afb77a24af4b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-51b495a88a72ca3c6f22afb77a24af4b\" data-watermark-src=\"v2-8395ddd76da8bcb5ac112c2e1b69524f\" data-private-watermark-src=\"v2-9caa62215d894fe5c9598f7c2b74deae\"></p>\n<p data-pid=\"39FpL-Lw\">另一方面，我也收到很多留言说“希望狼王灰太狼能变强”，自从《羊村守护者》羊狼正式成为好朋友，灰太狼收起了“抓羊”的心，羊狼联手闯关走过了许多冒险。在这次冒险中，灰太狼有着非常重要的任务，他将潜入狗国内部，从底层做起，上演了一出励志“升职记”，同时在暗地里还要收集情报 “曲线救猫”！对随时暴露身份的威胁，还有狗国士兵，将军的重重压力，还能坚守本心，拯救大家吗？让我们拭目以待！</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d4c2626b6218ce1e77e96e3820ad0d1e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-d4c2626b6218ce1e77e96e3820ad0d1e\" data-watermark-src=\"v2-19c0a66bb44b653dda8197e53897e528\" data-private-watermark-src=\"v2-dd1fb53497faae59bed1ab39d16edd34\"></p>\n<p data-pid=\"cm3KNNs3\">感谢大家对《羊村守护者》系列的喜爱和支持！《羊村守护者》希望传递出来的是决不放弃，勇敢向前的不屈意志；是直面自己，克服缺点的励志精神；也是羊狼和平相处，携手共进的真挚友情。在《奇妙大营救》中，跟随守护者游历异国，在热血中见证成长。7月15日起17:30，锁定金鹰卡通频道全国首播，同日在优酷、芒果TV、腾讯视频、爱奇艺四大网络平台播出。   </p>\n<p><img src=\"https://pic2.zhimg.com/v2-533131df68c8ead08c75f99776d1a33c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1980\" data-rawheight=\"1114\" data-watermark=\"watermark\" data-original-src=\"v2-533131df68c8ead08c75f99776d1a33c\" data-watermark-src=\"v2-eac2f134faa0cd9e2aaaa76d5b791847\" data-private-watermark-src=\"v2-0cdb22390bbed8051c2ed374611bc6e6\"></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/huang-wei-ming-leohuang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">黄伟明</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/543486924/answer/2576409939?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">9 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/543844983?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价《喜羊羊与灰太狼之奇妙大营救》之富豪镇篇？</a><br><a href=\"http://www.zhihu.com/question/517749959?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《喜羊羊与灰太狼之筐出未来》发布的守护梦想版特别视频有什么亮点？</a><br>\n","link":"http://www.zhihu.com/question/543486924/answer/2576409939?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"本周看什么丨最近值得一看的 8 部作品","date":"2022-07-15 10:08:46","description":"☕️TL;DR近期佳作推荐：[动画]外星也难民第三季、[美剧]黑鸟、[电影]旋涡、[动画]异世界舅舅、[美剧]生化危机、[动画]彻夜之歌、[电影]仙后座、[电影]刀剑神域-进击篇-无星之夜的咏叹调几则 ...<a href=\"https://sspai.com/post/74288\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74288"},{"title":"第一次独居？我们为你准备了一份「租房攻略合订本」","date":"2022-07-15 07:59:43","description":"身外之物的丰盈或缺失并不足以削弱一个人的热爱，只要认真生活，租来的房子也会有家的归属感。<a href=\"https://sspai.com/post/74285\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74285"},{"title":"App+1 | 能与腾讯会议联动的腾讯日历 2.0，真的足够好用了吗？","date":"2022-07-15 06:31:30","description":"考虑到不少人（比如我）没有体验过腾讯日历 1.x，这篇文章中我们将腾讯日历 2.0 作为一个全新的产品，介绍它的主要亮点，与 Calendly 作简单对比，最后分享一点我的个人看法。<a href=\"https://sspai.com/post/74256\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74256"},{"title":"你热爱旅行吗？旅行对你来说意味着什么？","date":"2022-07-15 06:16:54","description":"\n<p data-pid=\"YOCJejKO\"><b>先说结论，旅行让我富有底气去创造我的人生。</b></p>\n<p data-pid=\"wyQsPJul\">旅行 12年，去过 48 个国家，350 座城市，自驾 40 国。<b>旅行改变了我，它让我的认知不再局限，它让我看待世界的角度更加多元，它让我的生活富有创意有趣，它让我的人生拥有了更多的可能性。旅行已经融入我的生活，成为我的一部分。</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-b8f65f7017ba3616819ed9b986d17fba_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"638\" data-rawheight=\"511\" data-watermark=\"watermark\" data-original-src=\"v2-b8f65f7017ba3616819ed9b986d17fba\" data-watermark-src=\"v2-3920cb80af43a323bda4bb88147b925f\" data-private-watermark-src=\"v2-058b4fb88d93b37736ef99638af8ddbe\"></p>\n<h2><b>我与旅行</b></h2>\n<p data-pid=\"vbXJ6tOj\"><i>美国作家亨利·米勒 Henry Miller 说：“One’s destination is never a place, but a new way of seeing things” ，一个旅行目的地永远不是某个地方，而是一种看待事物的新方式。</i></p>\n<p data-pid=\"7UJoVb3C\">其实，我也不是天生的旅行者。在我旅行的这 十几年中，前 4 年，我都在旅游。报旅游团，或和朋友一起照着别人的攻略玩，没有什么明确的目的，只为了到那些风景名胜打个卡，在旅途中到此一游。后来随着我的经验日益丰富，我开始尝试独自旅行，从 3、5 天的短途，到十几天的远途旅行，再到如今去某个目的地生活个一段时间。<b>我试着去感受自然，感知文化，感悟人生，把一切都视为人生的一种经历，一种体验，在旅途中自我修行。</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-7e085722de7ec61908087d90f53da2be_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"watermark\" data-original-src=\"v2-7e085722de7ec61908087d90f53da2be\" data-watermark-src=\"v2-6fda5aac8c68891e60005f5ce97a92a3\" data-private-watermark-src=\"v2-8a47386e184050885f4842c10083cc2e\"></p>\n<p data-pid=\"uDXcs34-\">这几年，我开始不满足于旅行书，别人攻略上的那些玩法，而是给自己旅行制定很多新鲜的主题，去发掘更有意思或对我有意义的地方，努力的去 be a local。比如我会疯狂的去打卡博物馆美术馆，去看那些世界名画。去我喜欢作家生活的地方走走，因为我很好奇到底是什么样的环境，什么样的文化，能够孕育出这些富有创作力的人。又独自一人在意大利旅行了一段时间，去学如何揉面团做 pizza，如何配比奶油和糖做 gelato，去学习意大利人丰富的手语表达。甚至是我三次前往巴尔干地区，只因为我想了解宗教冲突与文化融合。而我的旅途，也从坐飞机火车，到搭轮船长途巴士，再到自己考了驾照开始自驾旅行，<b>我尝试通过不同的出行方式来拓展旅行的自由度、维度和深度。</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-01e4b7f5521bfd6237b9a1fd7744ea30_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1350\" data-watermark=\"watermark\" data-original-src=\"v2-01e4b7f5521bfd6237b9a1fd7744ea30\" data-watermark-src=\"v2-31727ad2aa642855ae08a4be6f9915eb\" data-private-watermark-src=\"v2-7f52031b82675c204e4c4389aaa9c30c\"></p>\n<p data-pid=\"UfRYKODG\">在过去十几年里一次次的旅行中，我明显的感觉到了自己的变化。<b>当我已经可以收放自如的制定旅行计划、得心应手的规划线路，我的对信息归纳总结能力，及逻辑性整体把握力，得到了提高。当我在旅途中迷路时，翻地图查阅网上信息甚至是去问人，这个时候我的搜索能力和与人交谈能力，得到了提高。当我在旅途中做了很多计划外的事情，于是慢慢的就变得不再害怕‘未知’和冷静的解决‘突发事件’，我的随机应变的能力，也在提高。</b></p>\n<p data-pid=\"nqScxiOd\">靠一场旅行就改变人生，我认为是不现实的。旅行中大部分的“所见所闻”多半不会立马起到效用，但它能给人带来成长，这是个很慢的过程，却终会在某一时刻起到作用。也许是工作中突然闪现的想法，或者是解决问题的方式，提高效率的办法，更或者是沟通能力。</p>\n<p><br></p>\n<h2>我的旅行与工作</h2>\n<p data-pid=\"p6Qfs6Om\"><i>You can either travel or read, but either your body or soul must be on the way. “要么读书，要么旅行，身体和灵魂总有一个在路上”，《罗马假日 Roman Holiday》。</i></p>\n<p data-pid=\"syZXV2U6\">很多人问我，我一直在旅行，我是靠什么来生存和支持我的旅行的。相比起那些给与我旅游达人、KOL这些title，<b>其实，我真正的身份是一名广告公关人</b>。2014 年我毕业，正值中国新媒体迅速崛起。我去了广告公司，接触到了社交媒体，从做原创编辑，品牌策划，到媒介购买，公关咨询，我主要服务的都是文旅类客户，包括酒店、航司、旅游局。我的日常工作是和品牌甲方爸爸们沟通，和媒体老师们沟通，和上面政策机构沟通，策划线上线下活动，写各种 ppt，新闻稿，新媒体软文，对接 KOL等等等等。<b>工作带给我的，是我就对文旅类客户有了直接的接触，深层次的了解品牌需求，市场需求、以及洞悉旅游行业变化。</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-1829c6d04ed09705b6cf7308de337154_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-1829c6d04ed09705b6cf7308de337154\" data-watermark-src=\"v2-8511994d9c65b3c94e4b405df4f8dff7\" data-private-watermark-src=\"v2-aaca0cbfba745cf0fe7363f6ce551e0b\"></p>\n<p data-pid=\"eZtCf2Hn\">而下班后的我是一个自媒体人。其实起初我也就是做着玩玩，更新我的旅行故事在微博微信上。后来我无意间写了几个爆款，就是所谓的 10w+，得到了很多人的共鸣，和鼓励，让我知道，原来我写的文字是有力量的，我有了粉丝，于是就更坚定我经营自己的社交媒体平台。这几年，只要新出现一个平台，我就去开设账号，通过更新我的内容去了解平台属性、定位以及用户喜好，同时我也切身感知到市场推广形式的变化，新兴的营销方式，了解那些爆款背后的运作。</p>\n<p data-pid=\"HOpDD8Qd\">所以，在旅游这个大行业里，从 BtoB 到 BtoC，从 online 到 offline，从图文到视频，从大神网红自媒体，我都有所接触，也有了一套自己的工作模式和逻辑。而且，在打理我自己自媒体平台时所了解的，也成为了我在社交媒体领域的经验和洞察，并最直接的运用到我的工作中，这也使得我总能很快的捕捉到行业的变化，提出很多新的思路，产生富有创造力的 idea，也有了我客户对我能力的认可我，让我做实了一个广告人的身份。</p>\n<p data-pid=\"vvrNrIXB\">而我始终都在我擅长的领域和行业与时俱进着。如今我负责的项目是每年在澳门举办的，《十四五旅游业发展规划》中提及的Global Tourism Economic Forum 世界旅游经济论坛。这几年的工作中，对接了很多旅游业内人士及相关企业，我们都相信旅行是世界各地许多人赖以生活和生计的根本组成部分，旅游业终会复苏，尤其是看到疫情后国内的旅游业的显著恢复及消费潜能的释放，也看好未来。</p>\n<p data-pid=\"boWWcjGJ\">因为旅行与工作的关系，我也受邀作为嘉宾出席包括TEDx的很多演讲，分享我的故事和见解，也让我得以用我自己的方式，让更多人了解这个行业，鼓励更多人走出去。我一直说，我不想做全才，我想做专才。社交媒体+旅游行业，是我想要钻研的领域。我不想做一个单纯的旅游达人，我更想成为一个专注旅游行业的专业广告人，在我擅长的领域和行业与时俱进着。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-8b2d821d31bad2626277dd4362923b8e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"812\" data-watermark=\"watermark\" data-original-src=\"v2-8b2d821d31bad2626277dd4362923b8e\" data-watermark-src=\"v2-ac2d1d14b94f450fce921a8b253505af\" data-private-watermark-src=\"v2-7fb013b609a5bd9316642718e2e8c8d3\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-0a53c9de51be7a6365b93a92e8b21260_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1198\" data-rawheight=\"898\" data-watermark=\"watermark\" data-original-src=\"v2-0a53c9de51be7a6365b93a92e8b21260\" data-watermark-src=\"v2-fb27cbab1c6a037f69d4e0aa029039d2\" data-private-watermark-src=\"v2-62e7f5651061dadbc5be2770fb66858f\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-e23f39aee59b4d842cc84e22eb0eddcd_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-e23f39aee59b4d842cc84e22eb0eddcd\" data-watermark-src=\"v2-d5956bdc0bc2b213b3dfa72764ff824d\" data-private-watermark-src=\"v2-e05aa911f04164ec7525a6ad2f81f400\"></p>\n<p data-pid=\"6I_zlnvd\"><b>通过旅行，可以让我接受新兴事物，适应不同的环境，打破固化思维的界限，建立多维度思考和分析能力，继而为工作和生活，带来新的想法，这也是我创造力的来源。只能说，我从事的广告行业与我热爱的旅行，是相互的相辅相成的。旅行改变了我，旅行也成就了我，它给了我职业方向，更给了我独一无二的竞争力。</b></p>\n<p><br></p>\n<h2><b>我的旅行与生活</b></h2>\n<p data-pid=\"n0gylQQW\"><i>古罗马时期的思想家圣奥古斯丁 Saint Augustine 说：“The world is a book and those who do nottravel read only a page” ，世界就是一本书，那些不旅行的人只能读一页。</i></p>\n<p data-pid=\"rZqY0MG6\">其实在 10 年前，可能是个更早，我对我人生的设想是 23 岁大学毕业，26 岁有个不错的稳定职场，27、8 岁结婚，30 岁生孩子，过按部就班的人生。可现实呢，<b>当旅行成为我生活的一部分，这个爱好彻底改变了我的人生轨迹。</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-d0649b28f69ce3ce9bfb91cafa0e0f57_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"watermark\" data-original-src=\"v2-d0649b28f69ce3ce9bfb91cafa0e0f57\" data-watermark-src=\"v2-ec57d864f33cc1011cab80f87e51a103\" data-private-watermark-src=\"v2-9c45b5544cef7dfa92cccb2fe88b9e91\"></p>\n<p data-pid=\"TgCIK85C\">在旅途中，我遇见了太多的人，看了太多不一样的人生：有完成 Gap Year 旅行的背包客姐妹；开着改装房车环游世界的情侣；走遍欧洲的美国硅谷码农，一边旅行一边敲代码；45 岁从法国巴黎出发骑行去土耳其的大叔；拿着退休金在罗马尼亚开青旅的加拿大老太太；沿着英国海岸线一路走一路给慈善机构筹钱的退伍军人和他的狗；在挪威私人山谷中经营农场的同性恋人；还有很多很多，这些人一直在我脑海中挥之不去，这些人的人生和生活方式让我无比向往。</p>\n<p data-pid=\"JbXPoSkj\"><b>有很多时候我都在觉得，走的越多，看的越多，我却越觉得自己无知和渺小，却又更加对世界跃跃欲试。我也想创造属于自己的人生啊。</b></p>\n<p data-pid=\"b2nMSyJM\">于是，我并没有按照原先的设想生活，在 23 岁时我申请了研究生，26 岁的我已经辞职又入职。27 岁的我经常带着行李箱去上班，搭红眼航班启程新的目的地，又拖着行李箱搭最早的航班返回公司直奔工位。28岁的我一边在职场厮杀，一边又疯狂的去旅行，练就了不用倒时差的技能，把那些我想去的地方变成去过的地方。29 岁呢，我选择裸辞做一个自由职业者，疯狂的起飞降落 32 次，去了 23 个国家，带着电脑在全世界工作。如今31岁的我，选择重返职场，在疫情后时代，希望能对旅游复苏献出自己力所能及的力量。同时，我也蓄势待发着，等着奔赴下一场畅快淋漓的旅行。我找到了属于自己的生活节奏和快乐。</p>\n<p><img src=\"https://pica.zhimg.com/v2-4ac8e8277449d03992d9a61f1f95717d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1072\" data-rawheight=\"1009\" data-watermark=\"watermark\" data-original-src=\"v2-4ac8e8277449d03992d9a61f1f95717d\" data-watermark-src=\"v2-3057b192a03782bd9e5d04b1c220197b\" data-private-watermark-src=\"v2-62c2db6b071a2075766860d9c6a163a8\"></p>\n<p data-pid=\"Rf0MVJ-D\">我们总会用外界的很多‘既定标准’去比较，谁比谁挣的多，谁买了房换了车，谁嫁的好娶的妙... 习惯用这些‘别人的完美人生’来衡量自己，但又何尝不是一种束缚呢... 可认真审视自我时，我总会问自己：别人的人生我向往吗，说实话有羡慕的，但真的适合我吗？</p>\n<p data-pid=\"wQvkWLJ7\">我开始承认我不完美，也意识到我不会完美，但这就是我，真实的我。<b>与其选择坐在那里自怨自艾感叹时运不济，不如走出去看看外面的世界，遵从自己的内心，当眼界越开阔，就会越清楚自己的位置，更加接纳自己，知道自己想要什么，适合什么。当我开始可以真正悦纳自己时，我才是拥有真正的自由，过属于我的人生。</b></p>\n<p data-pid=\"tniA9-cG\">Curiosity is the truth and the way of creative living.</p>\n<p data-pid=\"TkaGe_AH\">Make something, do something, do anything.</p>\n<p data-pid=\"pq2t2faC\">Dream, think, and create.</p>\n<p data-pid=\"7AJju4q_\">To travel is to live. 旅行即生活。</p>\n<p data-pid=\"yfIDDAKS\"><b>旅行让我富有底气去创造我的人生。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-85dbe5dd75b55b307292fe9736af2fe8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-85dbe5dd75b55b307292fe9736af2fe8\" data-watermark-src=\"v2-2935d0652fa6485882cf9f2b8f2a080f\" data-private-watermark-src=\"v2-d9d18da30f2228ee757973293540da24\"></p>\n<p><br></p>\n<h2>关于我</h2>\n<p data-pid=\"xCAhlP2C\">以「一人一车一行李箱」的方式，去过48个国家400+城市的红唇姑娘</p>\n<p data-pid=\"ksk6lqbM\">公众号 SkaeyMin</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/skaeytravelstudio?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">游旻Skaey</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/461860087/answer/2573922543?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">117 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/531476686?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">你喜欢什么样的旅行?</a><br><a href=\"http://www.zhihu.com/question/542558295?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">什么时候你想来一场说走就走的旅行？</a><br>\n","link":"http://www.zhihu.com/question/461860087/answer/2573922543?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价国产动画《紫川》第 32 集的制作表现？","date":"2022-07-14 05:26:13","description":"\n<p data-pid=\"ztKzKBWN\">      谢邀，以下言论涉嫌剧透，请捂眼观看。</p>\n<p data-pid=\"AYudQ5sH\">       我觉得本集的核心表达是“情义”。   </p>\n<p data-pid=\"qqJqBBXV\">       首先是兄弟情义，斯特林不想辜负手下们的信任，决定和他们共进退，却劝紫川秀找机会独自离开帕伊。</p>\n<p data-pid=\"Ua2uTjlb\">       而紫川秀笑看生死，胡搅蛮缠“赖”着和斯特林同生死。帝林得知两兄弟深陷重围，破口大骂两人是笨蛋，然后镇定地做了一个不理智的决定--飞蛾扑火，做第三个笨蛋。</p>\n<p data-pid=\"fQdIz3fV\">       相信很多观众曾经都被帝林的这句“我是第三个笨蛋”触动过，所谓真正的兄弟，从来都不是嘴上说说。</p>\n<p data-pid=\"VpGHdeLB\">        其次是家族情义，魔族大军压城，城内士兵内讧，哥应星的枉死让中央军对雷洪叛军杜克等人怀恨在心，和维护杜克等人的秀字营大打出手，后来在主将的劝解下，双方和解。我想，促使他们和解的更深层次的原因，是他们都是人类，都是紫川家族，这些“叛徒”不远万里，不顾生死，为救同族而来，这些已经足够说明一切。</p>\n<p data-pid=\"JAQ5U90w\">      最后是同胞情义，魔族学习帝林的冷血策略，遣派人类俘虏作为先锋，对于重感情的人族来说，这是一个很难抉择的事情，他们没有办法射杀自己的同胞，但是如果不射杀同胞，他们会慢慢将护城河填平，城内的军队就会被蚕食掉，如果射杀，那谁又能背负“杀害同胞”这样的罪责？ 魔族的残暴让部分人类俘虏意识到，哪怕替魔族趟平了道路，害死自己的同胞，最后也难逃一死，于是他们奋起反抗，但蜉蝣撼树般的局面，以及更多涌向帕伊的俘虏们，最终让斯特林眼含热泪，下令放箭，作为主将的他主动背负起枷锁，给了自己同胞一个仇恨的宣泄口，也撕破了战争的僵局。所有的眼泪嘶吼，不舍不愿都只因为他们是人类，是自己的同胞。</p>\n<p data-pid=\"SrCdRmKV\">      本集其实只是怕伊保卫战的一个起点，后续几周将持续高能攻城，各位观众老爷，敬请期待。 </p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wu-ming-19-61-10?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">无名</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/542864354/answer/2570655130?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">31 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/512153694?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价国产动画《紫川》的制作呈现？</a><br><a href=\"http://www.zhihu.com/question/510345665?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价国产动画《紫川》首创隐藏互动剧集？</a><br>\n","link":"http://www.zhihu.com/question/542864354/answer/2570655130?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价国产动画《紫川》第 32 集的制作表现？","date":"2022-07-14 05:26:06","description":"\n<p data-pid=\"JnSbYgQO\">谢邀。</p>\n<p data-pid=\"GoIr3MPZ\">本市闹疫情，今晚有空躲在家里把积攒下来的紫川动画给看了一遍，赶到了最新的帕依围城进度。</p>\n<p data-pid=\"oH9NLFr1\">不知道其他网文作者看到自己书的被改编是什么感觉，但对我来说，最大的感觉是怪异感，还有深深的怀疑：这样激动又热血的内容，真是我写出来的么？世上莫非还有另一头叫老猪的家伙？</p>\n<p data-pid=\"RULkbOeo\">真的，随着年纪的增长，人最不能面对的，是镜子里鬓角忽然冒出的雪白，还有过去的自己。</p>\n<p data-pid=\"Hk6fQFtv\">《紫川》写于2001年4月，开始写书的时候，猪还是一名大四下学期准备拿毕业证即将走向社会的大学生。看着动画，我看到了一面镜子，镜子里是二十年前的自己，那时的我，兜里穷得叮当响，去网吧只敢充五毛钱的时间，胸中却怀着无限的壮志和豪气。那时候的我，相信人性本善，相信明天会更美好，相信努力奋斗就能换来成功。</p>\n<p data-pid=\"EGfOUDYm\">二十年前的2001年，那是个多么美好的年纪，多么充满希望的年代啊！我的同学，我的朋友，我深恋过的女孩子，你们都还好吧？那些校园里的往事，依然历历在目，梦魂牵绕。</p>\n<p data-pid=\"ECYWCYjY\">二十年过去了，很多事变了，很多人也变了，但我依然坚信，世间有着真挚的兄弟情谊，和至死不渝的真正爱情。经历了二十年的风风雨雨，面对一生的挚友们，我依然能问心无愧地说出“我是第三个笨蛋”。</p>\n<p data-pid=\"bpQD4Xg4\">回望这些年，这是最让我欣慰的事了。</p>\n<p data-pid=\"8Ac_s-po\">感谢腾讯视频动漫，也感谢制作团队，这部动画就凝固了我青春时的幻想和憧憬，让我再次看到了年青时候的自己，重温了当年的心境。</p>\n<p data-pid=\"s0-p7LXk\">看到自己当年的书，回想起当年大学时的往事，感触良多，心绪杂乱，有点语无伦次了，大伙儿见谅。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/lao-zhu-xian-sheng-43?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">老猪先生</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/542864354/answer/2573249309?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">31 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/512153694?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价国产动画《紫川》的制作呈现？</a><br><a href=\"http://www.zhihu.com/question/510345665?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价国产动画《紫川》首创隐藏互动剧集？</a><br>\n","link":"http://www.zhihu.com/question/542864354/answer/2573249309?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"优化博客的累计布局偏移（CLS）问题","date":"2022-06-07 17:24:00","description":"\n<p>距离上一篇文章发布已有四个月了，是时候写几篇文章给博客除草了。上一次我介绍了我如何迁移、重构了我的博客的架构，这次我想来谈谈我在重构中优化和打磨访客体验时解决的一个问题。我的博客优化之旅 图片 lazyload 的学问和在 Hexo 上的最佳实践 我的博客有多快？ 天下武功，唯快不破 —— 我是这样优化博客的 再快一点，再快一点 ......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/206311/26/14625/38940/629f7f81Eb11312de/b1e67f07b1cc9bc7.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/fix-blog-cls/\">https://blog.skk.moe/post/fix-blog-cls/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/fix-blog-cls/"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012 年的、由 Node.j......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\n    return new Date(date.toLocaleString('en-US', { timeZone }))\n}\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        timeZone\n    })\n    return {\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\n        convert (date) {\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\n        }\n    }\n}\n\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\n    return converter.convert(new Date(secDate), tzName) - secDate\n}\n\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\ncmn-Hans-SG = 中文普通话-简体-新加坡\ncmn-Hant-TW = 中文普通话-繁体-台湾\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\ncmn = 中文普通话\n\nzh-Hans = 中文-简体\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\n}\n\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long'\n}\nconst now = new Date()\n\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\n\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\n\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\n\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\n\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\n\nzhCNFormatter.format(now) // 2021年10月13日星期三\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\n\njaFormatter.format(now) // 2021年10月13日水曜日\njaAltFormatter.format(now) // 令和3年10月13日水曜日\n\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\n// {locale: 'zh-CN', calendar: 'gregory', …}\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\n     // 基于一个固定日期计算，这里选择 1970.1.1\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\n    const base = new Date(1970, 0, 1).getTime()\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\n    return Array.from({ length: 7 }, (_, day) =&gt; (\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\n    ))\n}\n\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n}).formatToParts(new Date())\n// [\n//     { type: 'year', value: '2021' },\n//     { type: 'literal', value: '年' },\n//     { type: 'month', value: '10' },\n//     { type: 'literal', value: '月' },\n//     { type: 'day', value: '13' },\n//     { type: 'literal', value: '日' },\n//     { type: 'weekday', value: '星期三' },\n//     { type: 'literal', value: ' ' },\n//     { type: 'dayPeriod', value: '上午' },\n//     { type: 'hour', value: '1' },\n//     { type: 'literal', value: ':' },\n//     { type: 'minute', value: '00' },\n//     { type: 'literal', value: ':' },\n//     { type: 'second', value: '00' }\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\n}\n\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\n  timeZone: 'America/Los_Angeles',\n  year: 1995,\n  month: 12,\n  day: 7,\n  hour: 3,\n  minute: 24,\n  second: 30,\n  millisecond: 0,\n  microsecond: 3,\n  nanosecond: 500,\n  calendar: 'iso8601'\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<p>2020 年 11 月 11 日，苹果在本年度最后一次 Apple Events 上发布了全新的 ARM 芯片 M1、以及三款搭载了 M1 的 Mac：MacBook Air、MacBook Pro 13‘ 和 Mac Mini。在 WWDC 2020 库克宣布 Apple Silicon 后，这次 Apple Events 再一次掀起了热潮，不少 KOL 都把 M1 奉若神明，不少人也不以为然。本文通过 8 个问题来简单聊聊 M1 和 ARM Mac。M1 芯片的性能如何？本文写就时，搭载 M1 的 Mac 尚未开始发货，我们能看到的只有 GeekBench 上流出的跑分。所以，让我们先从跑分开始看起？...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote>\n<p>周六不放假休息，还在这加班搞 CTF？</p>\n</blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/86535/11/24318/75037/622032a8E4f94d4ae/89703ccc122cf4e0.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将 […]","link":"https://flyhigher.top/develop/2160.html"}]