[{"title":"不读可以先收藏 11：本月值得一读的 5 篇好文","date":"2022-05-17 09:31:37","description":"本期不读可以先收藏，我们一起来聊聊好奇心、Notion 的产品策略、MagSafe 外接电池的原理、Calibre 书籍库管理方法论以及如何给海淘电子产品挑一根「合格」电源线。<a href=\"https://sspai.com/post/73281\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73281"},{"title":"普通的你我，都有值得以创作分享的价值","date":"2022-05-17 08:00:00","description":"你不需要证明自己现在有多厉害，只需要证明自己能够越来越厉害就行。<a href=\"https://sspai.com/post/73265\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73265"},{"title":"年度设计大会 Config 2022 落幕，Figma 的这些新特性值得你关注","date":"2022-05-17 06:40:27","description":"Config 是由著名在线设计工具 Figma 举办的全球设计大会，旨在于两天时间中，在线上将全球设计社区内的人们聚集起来，向他们宣布 Figma 产品的新功能以及提供一个公共空间请业界设计师及设计爱好者们发起一些有趣的对谈与分享。<a href=\"https://sspai.com/post/73275\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73275"},{"title":"央行表示 2022 年 4 月社会融资规模增量为 9102 亿元，这数据说明了什么？","date":"2022-05-17 05:10:11","description":"\n<p data-pid=\"HYHKUYCF\">从一个银行基层员工的角度谈社融大幅下降</p>\n<p data-pid=\"DR2aYmJv\">我是一个银行基层员工，在银行工作7年多，做过三年个人贷款业务，去年离开了个贷业务条线到了管理岗。上周五我看到社融数据非常差劲，想大胆谈谈我的看法，都是肺腑之言，如有不妥请平台删除，网警不要抓我，监管不要查我。</p>\n<p data-pid=\"AXcqL74V\">先介绍一下我三年做贷款业务得经历。</p>\n<p data-pid=\"Ke2_PcKa\">2018年中央开始要求银行做普惠金融业务，这个政策确实解决了小微企业融资难融资贵的问题。当时经济虽然收到贸易战的影响但是整体可控，而且最初的小微企业贷款利率一般在6%左右，大部分贷款有抵押物，所以虽然该业务的风险相对较大，但是规模如果做起来银行还是有的赚，于是银行开始重点布局此业务。我也是在2018年底被调到个人信贷部主要做个人经营性房屋抵押贷款，此贷款属于普惠贷款的一种。2019年下半年，监管机构加大了对银行普惠金融业务的考核，而且要求银行降低普惠贷款的利率。由于监管的要求几乎所有的银行都开始大规模开展普惠业务，真实经营的优质企业就这么多，为了抢业务，银行间开始了恶性竞争，利率一降再降，到2019年年底已经降到5%左右。到了2020年，收到疫情影响，经济增长乏力，大批小企业主和个体工商户破产。银行的普惠不良贷款率快速上升，但是监管给银行下的普惠任务继续增加，而且由于国家要求银行进一步降低小微企业融资成本和银行间的恶性竞争，普惠贷款的利率已经降到基准利率，连1年期以上贷款利率都已经到了4左右，普惠金融业务已然成为政治任务。当时我就有了很大的困惑，1.银行为什么要赔本做这个业务？2.现在有几个企业真正能符合银行定的审批要求？3.客户的抵押物是否能永远保值？4.我之前做的客户如果因为疫情逾期行里会不会问责我？在种种困惑下我不再敢放款。我们行审批部门应该也和我有一样的困惑，审批政策中对经营主体真实经营和经营状况的审查更加严格。政策的严格导致普惠贷款业务放款量大幅下降，客户经理完不成任务收入降低，领导完不成任务要被上级和监管问责。于是所有人开始倒逼审批部门放宽审批政策，在重重压力下审批最终低下了头，除了原则性的底线政策，其他方面都做了一定程度的放宽，有些放宽留给了客户可钻的空子。我越来越觉得为难，1.银行给每一个客户经理下的任务特别多。2.符合基本审批条件的客户越来越少，基本条件是:真实经营，经营稳定，行业不容易受疫情影响，有正常的抵押物。3.如果要完成领导布置的放款量的任务，肯定要钻审批的漏洞，帮着客户把款贷下来，但是这样风险太大，贷款出现问题银行肯定要问责我。如果完不成任务收入实在太低，领导也会督导和批评我。和我一样为难的是几十万银行的基层员工，最终全国大部分银行客户经理选择了把款贷给了部分优质的小企业主和贷款用途为买房的客户。2020年和2021年制造业增长乏力而一线城市房价快速上涨，监管机构意识到资金没有进到制造业和小微企业中，于是开始了对银行普惠贷款资金用途的大检查，几十家银行被罚款，相应的肯定有很多员工被处分。由于我很谨慎，业务量不大，没有不良贷款也没有被处分，不过收入自然也不高，刚好在2021年8月份有一个好的机会，我就果断选择离开原岗位。到了管理岗位后，接触的企业多了，了解的信息多了，更加觉得普惠金融业务乃至制造业贷款难度太大。具体分析如下； 银行是商业机构，所有业务都是以盈利为目的，目前的普惠和制造业贷款利率低，风险大，银行做普惠和制造业业务赔的钱绝对不是小数目。以我在的这家银行为例，每年全总行要放1000亿普惠贷款，不良贷款我预计在10%左右，利率上平均每笔贷款要亏30个bp，所以每年预计在普惠业务上要亏10个亿以上。不过商业银行大部分是国有企业，应该要承担社会责任，前几十年也赚了很多钱，国家有难，国有银行理应回报社会，亏一点也不会伤筋动骨。但是如果形成了问题贷款，被问责的是几十万银行的基层员工。每家银行都有严格的贷款审批制度和问题贷款问责制度。严格的贷款审批制度是银行能够正常经营的基础，银行不可能把资金贷给经营有问题的企业。但是监管机构给每家银行下的普惠和制造业的任务特别多，在目前的经济形势和疫情影响下符合银行审批政策的企业很少，要想完成任务，必定会出现钻空子，放款政策，审批睁一只眼闭一只眼的现象。这些贷款很大可能会出现问题，这时银行的问责制度就会来抽鞭子。大部分银行要求贷款不能首贷逾期，或者一年内不能逾期，但是疫情严重，每天都有地方因为发现病例封城，只要封1个月就会有很多企业主资金链紧张甚至破产。所以经营再怎么好的企业也实在无法保证能在一年内不受疫情影响正常经营。只要没有经济问题，银行高层领导干部大多不会因为制造业或者普惠业务出了问题贷款被严重问责，而基层员工会受到扣绩效，停业务，不能提拔和跳槽等一系列影响。这样的话，就会导致银行抢着给头部制造业或者极少数优质小微企业贷款，而其他绝大部分企业贷不到款，而这些贷款资金往往没有真正用于经营。另外，监管现在严查贷款资金用途，如果有流入房市、股市等违规行为，经办客户经理也要被问责。但是客户经理无法完全保证客户的资金用途正常。首先，银行已经采用受托支付的方式放款，其次银行间的系统不相通，客户如果和受托支付方串通好，把资金转移到其他银行的账户再流入违规房市股市我们无法通过系统查询到。</p>\n<p data-pid=\"dZcVyR-a\">综上，我总结普惠金融业务和制造业贷款难度大的原因： 一、普惠和制造业贷款的不良会影响银行的财务报表，对上市银行影响很大 二、银行原有的且相对合理的审批政策不支持大规模放款给小微企业和制造业。 三、银行基层员工开展该业务面临的风险很大。</p>\n<p data-pid=\"ArzVr2PT\">所以，虽然国务院三令五申银行要支持制造业和小微企业，央行也利用各种手段多次放水，但是到头来发现很大一部分钱还是流向了房地产。而今年上半年因为受到疫情影响，银行更是不敢放款，社融大幅下降。</p>\n<p data-pid=\"2yiSDRsg\">我认为要想解决目前的困境是有办法的。</p>\n<p data-pid=\"XoVCEWgj\">第一种、由国家成立制造业和小微企业政策性银行，每家商业银行和央行每年上交一定比例的利润给该银行，专门用于制造业和小微企业贷款业务。放款贷款审批政策，比如只要求真实经营，贷款金额和经营支出的平均数挂钩等。设计合适的贷款产品，比如贷款期限5年以上，贷款利率基准以下，还款方式灵活等。设计全面的资金用途监管系统，保证资金用于经营。</p>\n<p data-pid=\"DQ32_kNT\">第二种、国家鼓励国有商业银行开展制造业和小微企业贷款业务，按每年不良贷款额和利差亏损给与银行一定比例的补贴，补贴的形式可以为减少上交利润，退税等。要求银行适当放宽审批政策和问题贷款问责制度。设计全面的资金用途监管系统供所有银行使用。</p>\n<p data-pid=\"w0qWR5HU\">我只是银行的基层员工，我的想法肯定是不全面的，但这是我作为国家政策最直接的执行者的真实感受。今年长三角受到了疫情的严重影响，必定会有大批企业资金紧张，如果再不给他们贷款的话，下一步就是破产潮的到来。政府要想办法让市场资金有源泉，水能流，水敢流，能解渴。要不然国家经济还得依靠房地产，全民又开始炒房，好不容易走上正路的经济又要走回头路。</p>\n<p data-pid=\"vzFjVLAv\">·················~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>\n<p data-pid=\"NCa-3C25\">第一次在知乎发言，没想到会有这么多关注，真是受宠若惊。我说过我只是银行基层员工，我的观点肯定有不足的地方，请大家包涵，欢迎讨论。另外，我也看到有很多刚发出来就被删除的评论，想必有很多是喷我的，我很恐慌，希望大家文明发言，理性发言，如果有让大家不爽的地方，我给大家跪拜。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/44-27-43-51?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">树树爱花花</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/532654339/answer/2486648045?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">477 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/531865178?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">央行公布一季度地区社会融资规模增量数据，其中有哪些信息值得关注？</a><br><a href=\"http://www.zhihu.com/question/532788338?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">4 月金融数据出炉，央行透露下一步货币政策发力点，其中有哪些细节值得关注？</a><br>\n","link":"http://www.zhihu.com/question/532654339/answer/2486648045?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"不求完美无瑕，但求方便有序：我的数字内容整理术","date":"2022-05-17 03:31:38","description":"本文不讨论生活上的整理，只讨论「内容」的整理，即项目内容、想法、文件等抽象物体的整理。\n整理这类物体的目的在于，绝大多数人如今都是「数字人」，积累了成千上万的照片和截屏、各种各样的文件、散落在各个 app 收藏夹里的「收藏再看」等等。但这些东西里有巨大的可能性——可能是曾经我们忘记的梦想、可能是一些有趣的回忆、可能是某个重要但一直没开始学习的技能。\n我们学习原则也好工具也好，最终的目的在于降低自己生活里的 chaos，能够保持井井有条、随时轻松上阵的状态。<a href=\"https://sspai.com/post/72937\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72937"},{"title":"派早报：IE 浏览器将正式退役、荣耀推出新款 MagicBook 等","date":"2022-05-17 00:20:07","description":"明基发布 PD3420Q 带鱼屏显示器、索尼公布 PlayStation Plus 服务的游戏阵容等。<a href=\"https://sspai.com/post/73267\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73267"},{"title":"周冠宇 23 年有希望继续续约吗?","date":"2022-05-16 10:43:46","description":"\n<p data-pid=\"DcY8eR01\">A：有希望（完）</p>\n<p data-pid=\"rJdUOWRb\">Q：为什么有希望？</p>\n<p data-pid=\"xdFXcOIX\">A：每一个在围场里的正式F1车手都有续约的希望。</p>\n<p data-pid=\"GvhQvYVw\">Q：有多大希望？</p>\n<p data-pid=\"MOFxVJ8j\">A：99%希望和1%希望，其实都不是我们这些网友所能够揣测的，可能续约这件事已经有定论了也未可知，只是我们不知道而已。</p>\n<p data-pid=\"TonfWzTF\">F1车手的合同签订，本身是极其复杂的，不仅受车手本身能力和表现的影响，还有诸如给车队带来的财务收益、车手的国籍、围场资源、甚至国际政治经济环境等各方面因素影响。所以要预测一位F1车手的未来合同情况是十分困难的，尤其是像周冠宇这种类型，实力不算出众，但也不至于十分拉胯，以付费车手进入围场、还是一位中国车手，属于可进可退的状况，情况就变得更难以预测了。</p>\n<p data-pid=\"hnzKG7se\">而且目前周冠宇的征程才刚完成5场比赛，很多赛道都还是第一次开，所以还很难完全看出周冠宇在F1中的实力。</p>\n<p data-pid=\"GxStIBTy\">以下就仅从目前的信息做一些基础分析，可能是一些正确的废话，等到后面随着赛程的进行，有时间再持续更新。</p>\n<h2>1、从自身表现来看：稳得不像一个新人</h2>\n<p data-pid=\"A6_wjvnz\">4场完赛、1场因赛车问题退赛，最佳起步位置12，最佳完赛位置10，拿到1个积分，比赛中的表现相对成熟稳重，赛道上超车赶紧利索，不像去年的马泽平一样拉胯、也不像角田一样暴躁，菜鸟赛季表现得像一个老手，这方面感觉很中国车手的味道，礼让谦和。</p>\n<p><img src=\"https://pica.zhimg.com/v2-c93e79e054e38ad0521e6689d553a680_720w.jpg?source=b1748391?rss\" data-rawwidth=\"2000\" data-rawheight=\"1333\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-c93e79e054e38ad0521e6689d553a680\" data-watermark-src=\"v2-a1439844e774dff2248bd0c3c89775c8\" data-private-watermark-src=\"v2-31a0c332b0ebdcf86d41307f70e8efaf\"></p>\n<h2>2、对标队友博塔斯：完败，但不丢人</h2>\n<p data-pid=\"EoV8Vznl\">首先定义一下博塔斯，虽然之前在奔驰，博塔斯一直被喷菜，但是博塔斯真的菜吗？显然不是的，博塔斯虽然不是顶级车手，但是在中游车手里还是很强的。所以周冠宇跟不上博塔斯是很正常的，新人第一年就打败老人队友，只有像勒克莱尔这样的顶级车手才可以做到，老周跟博塔斯的差距主要体现在单圈上，正赛节奏上的差距到不是很大。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-db6a351701bbfc5af8aef73efde9206d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"528\" data-rawheight=\"267\" data-size=\"normal\" data-caption=\"单圈差距\" data-watermark=\"original\" data-original-src=\"v2-db6a351701bbfc5af8aef73efde9206d\" data-watermark-src=\"v2-488bcc5b65c82059af822144b0546231\" data-private-watermark-src=\"v2-7a524b62b5cd9682b635b434554f04c5\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-e4b5584b4fead801b2bea6090826e5e5_720w.jpg?source=b1748391?rss\" data-rawwidth=\"561\" data-rawheight=\"615\" data-size=\"normal\" data-caption=\"长距离差距\" data-watermark=\"original\" data-original-src=\"v2-e4b5584b4fead801b2bea6090826e5e5\" data-watermark-src=\"v2-287e87065ee612de94d9e119a169e13c\" data-private-watermark-src=\"v2-60652443a0b9b114b48b879720ee8d55\"></p>\n<h2>3、对标米克，完胜</h2>\n<p data-pid=\"f42z_sEa\">无论是在成绩单的结果上，还是在赛道上的过程中，都全方位赢过米克，尤其是今年哈斯的车相比于阿罗的车丝毫不落下风，甚至还更占优势的情况下。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-9b8c265ded33d9c9d39d64cc2d28a22e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1024\" data-rawheight=\"574\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-9b8c265ded33d9c9d39d64cc2d28a22e\" data-watermark-src=\"v2-9d0c9b1b2e17f51dad09551efe9de6f5\" data-private-watermark-src=\"v2-c6f6154b0e89c8c889a13d2983e50ea1\"></p>\n<h2>4、对标角田，仍有差距</h2>\n<p data-pid=\"Q3el9Lqm\">角田同样以F2季军的身份进入F1，去年的表现虽然也不及加斯利，但是菜鸟赛季全年拿下32个积分还是很亮眼的，虽然去年赛季结束，随着本田的退出，他的席位也一度风雨飘摇。但是今年到目前为止积分还排在加斯利前面，拿下10分，且小牛今年的车是明显不如阿罗的车的。角田比周冠宇早进入F1一年，但是他却是比周冠宇小1岁，头顶F1首位00后的光环。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b844a44e913975fbeca07cb163aab365_720w.jpg?source=b1748391?rss\" data-rawwidth=\"600\" data-rawheight=\"750\" data-size=\"normal\" data-caption=\"5月11日刚刚过完22岁生日\" data-watermark=\"original\" data-original-src=\"v2-b844a44e913975fbeca07cb163aab365\" data-watermark-src=\"v2-607b441f1858ddac18e17b75f97bfde0\" data-private-watermark-src=\"v2-efa4f9517d13d31973a07b19a5d7a2bd\"></p>\n<h2>5、近些年两位可供参考的前辈</h2>\n<p data-pid=\"wjnYE1-F\"><b>Marcus Ericsson，瑞典车手</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-d0c3eb8822bc2138d75a2fcbade5f81a_720w.jpg?source=b1748391?rss\" data-rawwidth=\"620\" data-rawheight=\"413\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-d0c3eb8822bc2138d75a2fcbade5f81a\" data-watermark-src=\"v2-419c64ab2940022747d778dfce891264\" data-private-watermark-src=\"v2-435572d7bd4d15097f8a935a0092cc78\"></p>\n<p data-pid=\"6vXGjK-J\">以F2四年级老生第六的成绩进入F1，15年加入索伯车队，澳大利亚首秀拿下P8，获得4个积分，也成为2015赛季最好完赛成绩，全年5次取得积分，全年9分进账。第二年2016年继续在索伯车队，全年0分进账，2017年继续全年0分进账，2018年再拿9分，并于2019年转投indycar赛事，没想到出道即巅峰，处子秀拿下F1职业生涯最好完赛成绩。</p>\n<p data-pid=\"4rvpv5IR\"><b>Antonio Giovinazzi，意大利户口，模拟器之王</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-c65a377bcd1df3aa691b3d184d7dc530_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1024\" data-rawheight=\"683\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-c65a377bcd1df3aa691b3d184d7dc530\" data-watermark-src=\"v2-7cfc085af5e895b954dff7ab498c03e4\" data-private-watermark-src=\"v2-50d44b043971245e184564b9ccbcd4f4\"></p>\n<p data-pid=\"mPZ978-j\">以F2亚军成绩进入F1（冠军是加斯利），2017年参加了澳大利亚站和中国站两站赛事（替补出场），0分入账，2018年勒克莱尔进入F1，加入索伯车队，Antonio Giovinazzi退出一线，担任法拉利试车手，2019年勒克莱尔升入法拉利，Antonio Giovinazzi回到索伯车队搭档kimi，全年拿下14分（队友kimi拿下43分）高光时刻是巴西站的P5，拿下10分，2020年全年4次拿下积分，总计4分，最好成绩是揭幕战的澳大利亚站，拿下P9，21赛季全年2次拿分，总计拿下3分。</p>\n<p><br></p>\n<p data-pid=\"xkqZq3yK\">从目前来看，老周能不能凭实力超过两位阿罗的前辈（毕竟今年阿罗的车比前两年要强），乃至弟弟角田，我们只能在接下来的比赛中见分晓了。</p>\n<p data-pid=\"Q1nCvnVy\">老周有个好消息是，这两年的F2不太有前几年诸如勒克莱尔、加斯利、诺里斯、拉塞尔这种天才少年的出现，目前对于F1名额的威胁主要是去年的冠军皮亚斯特里，以及今年的冠军有力争夺者，也是阿罗的亲儿子索伯青训队的普谢尔（Théo Pourchaire）。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6a54729ddb8bd08527611b4044f84e8d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1000\" data-rawheight=\"563\" data-size=\"normal\" data-caption=\"普谢尔（Théo Pourchaire）\" data-watermark=\"original\" data-original-src=\"v2-6a54729ddb8bd08527611b4044f84e8d\" data-watermark-src=\"v2-b2495855b63d2f2b926e9efb44af09f6\" data-private-watermark-src=\"v2-32bd2faa0b4a3f2fe473c7602393fb9e\"></p>\n<p data-pid=\"vfk50kk_\">另外就是拉导再这么撞下去，车队嫌弃其老爸投的钱都不够修车了，围场内有传言说威廉姆斯有兴趣给Alpine替补车手皮亚斯特里提供一个2023赛季的席位，但尚不知晓是替代阿尔本还是拉提菲。</p>\n<p data-pid=\"E05vIaGN\">无论如何，老周需要拿出强有力的表现来证明自己，不然即使通过继续付费拿到了明年的席位，面临的也未必是一段美好的F1旅途了。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/question/527084204/answer/2482776911?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\">知乎用户（登录查看详情）</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/527084204/answer/2482776911?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">24 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/504241598?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">洛国富的伤势怎么样了？</a><br><a href=\"http://www.zhihu.com/question/517883802?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">冬奥会结束了，什么行业受益了？</a><br>\n","link":"http://www.zhihu.com/question/527084204/answer/2482776911?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派评 | 近期值得关注的 App","date":"2022-05-16 09:57:46","description":"你可以通过文章目录快速跳转到你感兴趣的内容。如果发现了其它感兴趣的 App 或者关注的话题，也欢迎在评论区和我们进行讨论。<a href=\"https://sspai.com/post/73257\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73257"},{"title":"对 iPod 说再见，我想带你走进无数人的「青春记忆」","date":"2022-05-16 08:00:00","description":"iPod 带给我们和音乐与青春有关的过去，会被永远留存在记忆之中。<a href=\"https://sspai.com/post/73225\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73225"},{"title":"一份 520 送礼清单，向 TA 表达你的心意","date":"2022-05-16 07:04:07","description":"一年一度的「520」即将到来，不管你想对你另一半表达什么心意，我们又为你筛选了一系列或有趣或实用的商品。<a href=\"https://sspai.com/post/73215\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73215"},{"title":"网络迷踪初探：凭什么只用一张照片，就能知道你在哪里？","date":"2022-05-16 06:30:04","description":"「网络迷踪」是开源调查最具影响力的一种形式，因为它看上去极具戏剧性：一张图片就能准确定位。但这种戏剧性源于人们低估了一张图片所能包含的信息量，以及互联网开源信息的规模和广度。<a href=\"https://sspai.com/post/73193\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73193"},{"title":"车企所谓的「终身质保、免费保养」全是坑？是否有猫腻？","date":"2022-05-16 05:23:02","description":"\n<p data-pid=\"rSgj_fp1\">不敢说全是坑，里面还是有干货的，但大多数都是「误导性宣传」。</p>\n<p data-pid=\"ZBOn1OTw\">怎么形容呢？和方便面包装差不多的程度，里面是真的有面条，但和看起来的差距有点大。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-cceddb0bfda0c14ad75f8b580a61e7b1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"376\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h2>先说比较新鲜的「终身免费保养」</h2>\n<p data-pid=\"h5WJbtBN\">按照字面意思，人家大几十万的雷克萨斯才包含4年/10万公里免费保养，现在一堆车厂都来「终身免费保养」，那是不是服务比雷克萨斯还强好多倍？厂家就是想你这么理解，而实际上呢？</p>\n<h3>大都是不那么值钱的「基础保养」</h3>\n<p data-pid=\"yX_7AdUz\">「终身免费保养」字面意思是「终身的保养都免费」，当然厂家也希望你这样理解，而实际上却是「贵的项目不免费」，只包含「基础保养」，就是<b>只换 机油+机油滤芯 的「小保养」</b>。</p>\n<p data-pid=\"5YK8NPdi\">人家雷克萨斯免费保养期限虽然只有4年/10万公里，但包含的项目更实在，随车手册上要求的定期保养项目一律免费，而且免工时费。除了不包免费换轮胎，别的都包。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f13e8c70ff1eb2880489ef2ee83a3c48_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"997\" data-rawheight=\"576\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"TxVFfO2H\">机油机滤不是天上掉下来的，「小保养」一次也值小几百块，这好像车主赚了？反正车主没吃亏，<b>如果你本来就习惯去4S保养，这免费小保养的确是实惠</b>。但如果你原计划到外面的保养店保养，那这免费小保养会绑定你其他的保养维修项目都必须在4S店消费。众所周知，4S店的保养费用相较其他渠道偏高（但也更有保障一些）。</p>\n<p data-pid=\"fSF_ZNnt\">如果是纯电车跟你说终身免费基础保养，就约等于忽悠，纯电车不需要定期更换机油和机油滤，所谓的「基础保养」只是不消耗物料的全车检查而已。</p>\n<p><img src=\"https://pica.zhimg.com/v2-f693e4e1c08b37f728c8db77adaef43d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"1173\" data-rawheight=\"1269\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"epCLnreT\">以20万元级别的大众途观L为例<sup data-text=\"\" data-url=\"https://www.autohome.com.cn/use/202111/1225879.html\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\">[1]</sup>，<b> 6万公里保养总费用9077元，其中小保养合计3825元，而还需要花5252元做其他保养。</b>除了可见小保养是小头，其他保养项目还有动不动上千元的维修、养护项目才是大头。没有免费的午餐，商家送的小头，正是为了拴住消费者的大头。</p>\n<h3>常规和非常规限制条款</h3>\n<p data-pid=\"bOIJalB1\">限首任车主，限非营运车，限每年免费保养里程和次数，这些都属于常规的合理限制条款，这里不多说。</p>\n<p data-pid=\"VzlV5Wqx\"><b>有些「免费保养」要求必须在4S店买车险</b>，实际上是左手倒右手，用免费小保养抵消了车险的打折金额，这些都必须在买车交钱签合同之前问清楚。</p>\n<h3>注意区分是「4S店」送的，还是「厂家」送的</h3>\n<p data-pid=\"yuMuGSpD\">车厂全面推出「终身免费保养」的情况还比较少见，目前厂家只在新车上市和某些促销节点将「免费保养」当作优惠来送。</p>\n<p data-pid=\"lNeoX1lr\">反倒是4S店推出「终身免费保养」更为常见。4S店普遍采用代理制度，不会做亏本的买卖，导致长期优惠措施后期执行不到位，采用非原厂机油耗材也是常见现象，还存在4S店换老板不认账、4S店倒闭跑路的情况，加上能开4S店的本地老板往往都有一定能耐和背景，死猪不怕开水烫，维权较为困难——厂家送保养更多是出于花钱做宣传促销，要是出了问题上网曝光一下还是很有用的，所以厂家送「终身免费保养」的会更靠谱。</p>\n<p data-pid=\"XvB5jxaG\">新闻曝光的「免费保养」相关纠纷，绝大多数都是4S店送出的。</p>\n<p data-pid=\"V3VBnx05\">▼ 「免费保养」活动中途暂停，店家指出有「最终解释权」<sup data-text=\"\" data-url=\"https://baijiahao.baidu.com/s?id=1671913497165921793&amp;wfr=spider&amp;for=pc\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"2\">[2]</sup></p>\n<p><img src=\"https://pic3.zhimg.com/v2-a19e7bb9913fbb815d59d528af47db8b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1174\" data-rawheight=\"764\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"TmI2gXCX\">▼ 「免费保养」捆绑保险纠纷<sup data-text=\"\" data-url=\"http://cq.cqnews.net/html/2016-11/04/content_39304101.htm\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"3\">[3]</sup></p>\n<p><img src=\"https://pic2.zhimg.com/v2-af8b6402d0853e0b32d9e08edd547046_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1299\" data-rawheight=\"684\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h3>免费保养不免费</h3>\n<p data-pid=\"B9lpOywx\">尤其是4S店促销送的「免费保养」，很多是保养物料免费，工时费照样要交，有些更黑的对免费保养的客户区别看待，收取更高的工时费，最后算下来车主没得到多少优惠，所以送的保养是否包含工时费也需要问清楚。</p>\n<p data-pid=\"kwP1ht6M\">▼ 「免费保养」活动中途增加工时费纠纷<sup data-text=\"\" data-url=\"https://www.sohu.com/a/438772643_99995202\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"4\">[4]</sup></p>\n<p><img src=\"https://pica.zhimg.com/v2-e88aca18f0f941b963ceb6db7660ea6d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1295\" data-rawheight=\"760\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h2>再谈谈比较常见的「终身质保」</h2>\n<p data-pid=\"NN_NjEke\">「终身质保」在电车市场比较常见，说是终身质保，也并非全车质保，大都是「三电终身质保」，「三电」指的是动力电池、电机系统以及电控系统，其实都是不容易坏的大件， 而且大都仅限首任车主。</p>\n<blockquote data-pid=\"gMPNyOMu\">根据国家工信部规定，从2016年起乘用车生产企业对电池、电机等<b>核心部件必需提供8年或者12万公里质保</b>(先到达为准)。</blockquote>\n<p data-pid=\"pAc1Okza\">也就是说现在能买到的电车，<b>三电系统本来就有8年/12万公里的强制质保</b>，只有超出8年/12万公里之外，才能享受到「三电终身质保」带来的好处。而另一方面一大堆限制条款依然存在，例如<b>仅限首任车主，仅限非营运车，有些还对行驶里程熟有额外限制</b>，甚至还有不准把电量用到20%以下的奇怪规定。</p>\n<p data-pid=\"S6y3cbWX\">列个常见的限制条款：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-a0fb166168a953cf5311f373f4b3260b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1220\" data-rawheight=\"519\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"MzgWKiZO\">连没有注册APP，连续12个月行驶里程超3万公里，不到品牌服务中心维修，都会丧失终身保修。</p>\n<p data-pid=\"nS2tayPv\">再来个比较离谱的，要求不准把电量用到20%以下，否则丧失终身质保，这里就不点名是哪家了。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5528309946313d6020b5d6f13e2c51dd_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"624\" data-rawheight=\"107\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"rTrDibwf\">经过众多限制条件后，能真正享受「三电终身质保」的人实属凤毛麟角。</p>\n<p data-pid=\"aDi27OD1\">如果你真的全部遵守了，坚持开了12年不卖，也没有超出规定里程，发现电池衰减到只有70%电量，是不是可以享受保修呢？</p>\n<p data-pid=\"ZV4D3CsS\">答案是现在还不知道，多家品牌的条款里都有这么一句：<b>“电池容量正常衰减，不属于终身保修范围。”到底怎样才算正常衰减？车厂们都没有说明白。</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-f2cfe98fb7b699a497d08ddf98d46702_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"934\" data-rawheight=\"480\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"eHvsAjos\">国家标准是8年12万公里后也能保证电池容量大于80%，那么12年后也是按80%电量的标准才是正常衰减，还是70%电量的标准？这里面有很大的灰色地带。</p>\n<p data-pid=\"BVH3mgdn\">但由于前期的纯电车的确存在使用几年后电量大幅度暴跌的情况，现在的新型电车已经大幅度改善，但依然有让多消费者担忧电池寿命问题，众多电车品牌推出「三电终身质保」主要是为了增加购买信心。</p>\n<p data-pid=\"nq4Egmcc\">最后顺带提一嘴，国内比较早推「终身质保」和「终身免费保养」的宝沃已经倒闭了，卖出去的车成了没爹妈的孤儿，连正常的保修和维修都成问题，这样的品牌，终身承诺又有啥意义呢？</p>\n<p><img src=\"https://pic1.zhimg.com/v2-2d9b8dd366539495220b0c0d7f67d83b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1403\" data-rawheight=\"803\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"aP0kC5iE\">参考资料：</p>\n<p data-pid=\"doyZJ4bN\"><a href=\"http://link.zhihu.com/?target=https%3A//baijiahao.baidu.com/s%3Fid%3D1702044111144041765%26wfr%3Dspider%26for%3Dpc\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">baijiahao.baidu.com/s?</span><span class=\"invisible\">id=1702044111144041765&amp;wfr=spider&amp;for=pc</span><span class=\"ellipsis\"></span></a></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/gaoyongqiang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">汽车奇谈高小强</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/531597174/answer/2487467684?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">8 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/483802963?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">新能源汽车安全问题频发，岚图FREE的安全品质和工艺怎么样？</a><br><a href=\"http://www.zhihu.com/question/523240319?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">国产新能源车首任车主三电系统终身质保是否要求全程4S店保养？</a><br>\n","link":"http://www.zhihu.com/question/531597174/answer/2487467684?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"我的滴答清单使用心得：给任务分类是门技术活","date":"2022-05-16 03:30:30","description":"我是一名手帐爱好者和效率 app 测评爱好者，买过各种各样的本子，试过各种各样的 app，总在试图探索完美的效率体系但其实并没干多少实事，最后痛定思痛决定 all in one，用同步方便的 app 来规划生活。\n\n选择滴答清单的原因：多平台同步、功能全面、更新快、反馈及时。在综合比较了各种 app 之后，我觉得它是最适合我的。\n\n本文对滴答清单的描述以 Mac 版为主手机版为辅，其他版本的用法是一样的，是否开会员并不影响核心用法（但作者开了会员）。<a href=\"https://sspai.com/post/72899\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72899"},{"title":"汽车空调异味怎么处理效果好？","date":"2022-05-16 02:42:37","description":"\n<p data-pid=\"fq4HpdpD\">谢邀，废话不多说，就讲一点实用的内容。首先总结一下空调系统的相关清洗项目，大家可以对号入座，选择符合自己情况的清洗项目。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-2777560c101004376ace83cc430b8afb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1106\" data-rawheight=\"865\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"TLLATkh4\">空调系统清洁总览表</p>\n<h3>空调异味如何处理？</h3>\n<p><img src=\"https://pica.zhimg.com/v2-42e70dfa64cf44a98f012aec3fb8e95f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"444\" data-rawheight=\"250\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"w-y6bOr5\">1. 「空调滤」异味：情况比较少，不过不排除这样的可能，比如你的「空调滤」真的long, long ago的故事了；</p>\n<p data-pid=\"buTyycWv\">2. 「空调管路」异味：尤其是经常开外循环、小风量的车主，可通过「外循环」加大风量的方法将灰尘吹出来，但要打开全部车门，并最好选择空旷、阳光好的环境操作。比较严重的可以选择「空调内外循环清洗」；</p>\n<p data-pid=\"GkVmYXdP\">3. 「蒸发箱」异味：「制冷剂」经过蒸发箱，与外界空气形成热交换，以达到制冷效果，在这个过程中，少量的水分和灰尘附着在「蒸发箱」上，带有灰尘的水分不能及时蒸发，久而久之，就会霉变，产生异味。而这种异味是很难清除的，通过「免拆蒸发箱清洗」可以解决这个问题；</p>\n<p data-pid=\"TXMyBIkF\">4. 车内空气异味：主要检查车内有无发霉的烟头、发霉的食物等。通过「内饰清洗」和「臭氧消毒」可以解决大部分问题；</p>\n<p data-pid=\"Uas6qj2r\">5. 车外空气异味：比如说在室外环境比较恶劣的情况下打开了「外循环」，那就相当于你把室外的尾气或雾霾通过汽车空调『放』入了车内，应该避免此操作，空调不该『背这个锅』。</p>\n<h3>如何避免空调异味？</h3>\n<p><img src=\"https://pic3.zhimg.com/v2-4eeea684ec55d4c2ee02849c95ffc661_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"444\" data-rawheight=\"250\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Lc2dvaHr\">1. 夏季别关了空调就走：每次在使用空调之后，不要着急熄火，最好让自然风运行3~5分钟，使空调管路的温度回升，消除与外界的温差，从而保持「空调系统」相对干燥；</p>\n<p data-pid=\"DN0rFS30\">2. 保持「空调系统」干燥：在雨水较多的潮湿季节过后，找一个风和日丽，阳光普照的日子开车出游一次，如果是梅雨季节和夏季后，就打开自然风吹一下整个「空调系统」；而秋雨之后的季节，开暖风吹干，目的就是防止「空调系统」发霉；</p>\n<p data-pid=\"Q8vk8jLg\">3. 别让外部污染进入：当车外环境非常恶劣时，最好不要打开「外循环」；</p>\n<p data-pid=\"VeXVyRKb\">4. 减少车内异味源头：比如食物残渣、烟头、脚垫污垢等，如果一开车门就有味道，那推荐还是开窗换气，特别不要只开「内循环」，容易晕；</p>\n<p data-pid=\"jser5slj\">5. 注意香水的使用：最好不要使用酸性香水（比如柠檬味），酸性香水散发后容易在「蒸发箱」处产生霉变，可以选择使用中性的、味道较淡的香水，或者就别用香水了。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wang-zhen-qi-34?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">王元祺</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/531670401/answer/2476749136?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">7 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/21489975?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">汽车空调异味很严重，怎么处理？</a><br><a href=\"http://www.zhihu.com/question/529686228?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何解决汽车空调管路对空调系统冷媒噪音的影响？</a><br>\n","link":"http://www.zhihu.com/question/531670401/answer/2476749136?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"节气门清洗的作用是什么？需要多久做一次？","date":"2022-05-16 02:39:49","description":"\n<h3>节气门是什么？</h3>\n<p data-pid=\"xKpQV7pp\">节气门控制的是进入发动机的空气量大小。也就是和所谓的油门踏板相关联的一个阀门，油门踩越深，节气门开度就越大。</p>\n<h3>为什么节气门会脏？</h3>\n<p data-pid=\"j8D8mLY-\">我们来看图，下面是一个自然吸气发动机的进气系统简图，空气从左侧进入，经过空滤，再经过流量传感器，到达节气门，随后进入发动机。按常理来说，被空气滤清器过滤过的空气，不应该是脏的呀？</p>\n<p><img src=\"https://pic3.zhimg.com/v2-030f3ae396ac328b1d8a7ca249f30305_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"255\" data-watermark=\"watermark\" data-original-src=\"v2-030f3ae396ac328b1d8a7ca249f30305\" data-watermark-src=\"v2-651a11b76ceaf1247585cc6787aa9bde\" data-private-watermark-src=\"v2-934a9af1a150a31c72167196a949dfcf\"></p>\n<p data-pid=\"SqhzvaNU\">其实不然，空滤可以想象成一个筛网，把大于滤网间隙的杂质阻挡住，但其实空气中漂浮的诸如N95，汽车空滤是没有办法阻挡的。当然，这部分杂质也不会对发动机造成影响，筛得太细只会造成进气阻力过大，就好比每天戴着N95口罩一样，除非在疫情爆发期间，日常生活中医用外科口罩就能起到足够的效果了。所以，进气管道中的空气是带着一点点杂质的。</p>\n<p data-pid=\"u5OFvCYz\">除了空气中的杂质外，还有来自发动机的机油蒸汽。图中红色的线就是曲轴箱通风管，它会把发动机内部的蹿气收集起来，混合着机油蒸汽及水汽，一起回到进气管路中，再次进入发动机燃烧并排出，是一种环保设备。但也带来的副作用，那就是将更多杂质带入到了进气管路中。更要命的是，高温的机油蒸汽在碰到相对低温的节气门后，会更容易附着在表面形成积碳，造成节气门脏污。</p>\n<p data-pid=\"FxbaxLiq\">哦对了，还有涡轮车，涡轮也不是完全密封的，油封往往会渗漏一点点机油。因此经过涡轮加压后的空气中也会含有机油蒸汽，且会随着车辆里程的增长，含油量逐步攀升。</p>\n<h3>为什么进气管道不用洗，就只要洗节气门呢？</h3>\n<p data-pid=\"DXePbg4W\">其实，整个管道内壁都均匀附着了各种脏东西。但是节气门在很多时候并不是全开的，比如不踩油门的时候节气门就只有微微一条缝。所有空气都要从这条缝挤过去。因此这个位置的脏污程度就会是最严重的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4f23d08f9adaa4309e8700b48d9fc721_720w.png?source=b1748391?rss\" data-caption=\"怠速时节气门的状态\" data-size=\"normal\" data-rawwidth=\"550\" data-rawheight=\"319\" data-watermark=\"watermark\" data-original-src=\"v2-4f23d08f9adaa4309e8700b48d9fc721\" data-watermark-src=\"v2-2697b76f7f57f2a5fb54aac385538168\" data-private-watermark-src=\"v2-7afe83ea58bbc60d9747378bcb99304c\"></p>\n<p data-pid=\"h3KYnerx\">除了节气门的这条缝特别容易脏，这条缝的粗细还尤为关键。因为这条缝的大小直接决定了怠速的高低。随着污垢的堆积，这条缝会被堵塞，发动机憋到喘不过气被迫打开节气门呼吸一口，转速升高以后重新关闭，进入某种死循环，这就是怠速不稳的来源。</p>\n<h3>要不要洗节气门？</h3>\n<p data-pid=\"EuZRnGzh\">原则上，每隔两三万公里洗一下是最好的，对于大部分车型而言，节气门的位置都是触手可及的，花个十分钟就能完成拆装。但是如果特别难拆或者汽修厂要价特别离谱的话，不洗其实也没事。</p>\n<p data-pid=\"btyed2nM\">如今的新车都支持节气门自适应了，会根据节气门积碳的情况，主动调整怠速时的阀门位置，因此即便有轻度的积碳，也不会发生怠速抖动的情况。甚至洗了节气门之后还会出现怠速过高，需要重新学习的过程。</p>\n<h3>怎么洗节气门？</h3>\n<p data-pid=\"Ons8ohYS\">拆下节气门，用化油器清洗剂直接对着缝隙喷喷就搞定了。动手能力强的自己在家就能搞定，真的很简单。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-e630749a1b872667466ef5658fcafa7f_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"958\" data-rawheight=\"774\" data-watermark=\"watermark\" data-original-src=\"v2-e630749a1b872667466ef5658fcafa7f\" data-watermark-src=\"v2-8335cf239832368b72ae37f859e798d9\" data-private-watermark-src=\"v2-ad0c566b8a3fae51749acc0c1d8ac6be\"></p>\n<h3>如何延缓节气门变脏？</h3>\n<p data-pid=\"-CFK9Q_m\">追根溯源，去除进气管路里的杂质，就能尽可能让节气门保持干净。优质的空滤可以阻挡更多灰尘进入进气，而机油透气壶则能减少曲轴箱通风系统中机油蒸汽的含量。当然，如果不在乎环保的话，直接把废气排到机舱里就能彻底杜绝机油蒸汽进入进气系统了。</p>\n<a href=\"https://zhuanlan.zhihu.com/p/28517679\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-037f1e0bb0fe956e4341c4b0cd4adb92_qhd.jpg?source=b1748391\" data-image-width=\"640\" data-image-height=\"410\" class=\"internal\">康贱猫：【贱猫车库3】福克斯RS加装机油透气壶</a><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/kang-yining?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">康贱猫</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/531500237/answer/2481228491?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">16 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/532346596?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">空气滤芯与燃烧不充分有多大关系？</a><br><a href=\"http://www.zhihu.com/question/505557550?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">汽油机为什么非要压缩冲程？</a><br>\n","link":"http://www.zhihu.com/question/531500237/answer/2481228491?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"新能源汽车与传统汽车保养的区别有哪些？","date":"2022-05-16 02:19:32","description":"\n<p data-pid=\"jboZvkXj\">燃油车的保养就是那几样，具体见下表。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-240dd5684b41a693e0dfd7c56f2735b7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1013\" data-rawheight=\"959\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"OH8YAW1E\">平常的保养就是换机油，加汽油发动机清洁剂，看下三滤有没有需要更换的。看下雨刮器、灯光、轮胎、刹车片，底盘。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5931330ffeb3b3355b2b218b8b26126a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"852\" data-rawheight=\"912\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"TtfoAaD0\">大一点的保养就是看下要不要换三滤，要不要换刹车片，要不要洗一下节气门，四轮做个动平衡或者驱动轮胎磨损严重了，来个四轮换位。</p>\n<p data-pid=\"dE3huZGu\">再大一些的大保养就是加上要不要换变速箱油，制动液，火花塞之类的。</p>\n<p data-pid=\"kdhcLmT9\">上述的两张表是4S店的保养明细（周期）表，但实际上我个人觉得，如果车辆如果用好一些的全合成机油，没激烈驾驶，一直在好路上跑，车辆没啥异常的话，保养时长按照表的日期/公里数乘以2倍来一次保养没啥问题。</p>\n<p data-pid=\"NNvbqEiI\">新能源车的保养相对于简单些。在国内，新能源车专指的是<b>插电式混动和纯电动</b>两种。（氢能源就不说了，国内基本就没民用版本的汽车。）</p>\n<p data-pid=\"ECYsOpu4\">先说纯电汽车的保养，除了正常的灯光、轮胎，制动、雨刮、底盘检查之外，还包括检查动力电池、高压配电系统、充电系统、驱动系统、冷却系统、电气系统等几块。</p>\n<p data-pid=\"56BU49ji\"><b>动力电池：</b>动力电池的外观，电池壳体是否完整，紧固螺栓是否松动，高低压插接器是否正常，线束是否有破损，是否有漏液。动力电池容量测试、绝缘检查是否正常。BMS系统看下电池历史数据是否正常。</p>\n<p data-pid=\"RFsU5qsF\"><b>高压配电系统：</b>高压配电箱外壳是否完好，连接线束是否牢固，有无裂纹，绝缘性能是否正常。包括空调压缩机回路检查、充电机输出回路检查，加热器回路检查，电机控制器回路检查，直流充电回路检查等。</p>\n<p data-pid=\"IW9nbnOF\"><b>充电系统：</b>车载充电器外观，连接线束，紧固螺栓，充电器冷却风扇、冷却管路，绝缘性能，工作状态。快充口的绝缘维护和检查。</p>\n<p data-pid=\"tcdTuFHp\"><b>驱动系统：</b>驱动电机的外观是否有油渍、漏液。是否有外壳损坏、磕碰。高压插接器和各类传感器插接件是否紧固。电机壳体绝缘性是否完好。减速器是否有外部变形、漏油，防尘密封套密封情况。</p>\n<p data-pid=\"tcFyBklg\"><b>冷却系统：</b>膨胀水箱冷却液面的液位是否正常。如果低于下限值，必须加注冷却液。检查冷却系统管路、接口处有无泄露情况。电动水泵的线束是否老化、破损。检查散热器翅片是否变形，有异物堆积。</p>\n<p data-pid=\"rmW2KJSb\">纯电动汽车因为没有燃油系统，所以保养费用相对同价位的燃油汽车要低许多，保养的周期比燃油车偏长，基本小保养都是一万公里，半年起的。</p>\n<p data-pid=\"N34cCANF\">插电混动汽车因为加了燃油系统，但因为燃油系统基本是在良好工况下工作，所以燃油系统的保养周期比燃油车也要长。之前去试驾某国内混动车型，说一万公里保养燃油系统就行，如果实在没时间，1.5万公里保养一次也行。</p>\n<p><br></p>\n<p><br></p>\n<p data-pid=\"0PHaWQRz\">参考：</p>\n<p data-pid=\"4PYiV_P7\">1、‘’新能源汽车构造原理”机械工业出版社</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/531486982/answer/2485547941?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">27 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/525400763?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">从哪一刻你开始相信：新能源车是真的环保？</a><br><a href=\"http://www.zhihu.com/question/508005630?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">怎么看待新能源车取代传统燃油车的时限？</a><br>\n","link":"http://www.zhihu.com/question/531486982/answer/2485547941?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"新能源汽车与传统汽车保养的区别有哪些？","date":"2022-05-16 02:19:22","description":"\n<p data-pid=\"gdtGnBaq\">本篇回答只讨论纯电与燃油车的保养区别，混动车型与燃油车基本一样。</p>\n<p data-pid=\"IripADzv\"><b>纯电车型与燃油车型区别最大的不是保养周期，而是保养费用！</b></p>\n<p data-pid=\"RzzHB8Mn\">为什么现在越来越多的营运车辆都选择纯电车型，就是因为后期用车成本低，电比油便宜，保养费用也比燃油车便宜。</p>\n<p data-pid=\"QXTiyeT2\"><b>很多人认为纯电车型不要保养，这是误区。</b></p>\n<p data-pid=\"8b7RVDHJ\"><b>我对比了一些品牌厂家规定的保养周期，发现纯电车型的保养周期普遍要比燃油车长一倍，</b>但很少有燃油车主会按照这个里程保养（五千公里/半年），用全合成1万公里/1年保养一次的居多，所以在实际的使用过程中，周期相差不大。</p>\n<p data-pid=\"TeXiwuwg\">纯电车</p>\n<p data-pid=\"h9gYBadJ\">小鹏首保6个月/5千公里，定期保养1年/1万公里</p>\n<p data-pid=\"4kfHK90o\">比亚迪纯电首保3个月/5千公里，定期保养1年/2万公里</p>\n<p data-pid=\"KVjV-8i-\">特斯拉两年一次定期检查</p>\n<p data-pid=\"NyXK6sNA\">燃油车</p>\n<p data-pid=\"38r4i_d7\">别克首保5千公里/6个月，定期保养5千公里/6个月</p>\n<p data-pid=\"NasVDepz\">上汽大众首保5千公里/6个月，定期保养5千公里/6个月</p>\n<p data-pid=\"_LT9j4f1\">日产首保1个月/1千公里，定期保养5千公里/6个月</p>\n<h3><b>在价格上，单次常规保养，燃油车比纯电车型贵的多，拿同价位的海豚与polo、飞度做对比</b></h3>\n<p data-pid=\"hVRMkSzn\">海豚常规保养只需进行车辆的检查，主要是检查三电系统、电池冷却液、底盘安全件等，费用160元。</p>\n<p data-pid=\"7g7mN4Gj\">polo、飞度除了检查之外，还要更换机油、机滤，费用费用在366～685不等。（地区不同价格存在差异）</p>\n<p><img src=\"https://pic1.zhimg.com/v2-da09f1725aa9948f2d1f9c6f2b718d64_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"571\" data-rawheight=\"272\" data-watermark=\"watermark\" data-original-src=\"v2-da09f1725aa9948f2d1f9c6f2b718d64\" data-watermark-src=\"v2-123e660a6b9dd797357e8b282576e75b\" data-private-watermark-src=\"v2-fc5166515bf84c920edb9668219bdb1a\"></p>\n<p data-pid=\"Yw4BxWBp\">海豚到4万公里总共算下来只需1000元左右，以下是更换的项目。</p>\n<p data-pid=\"3zxr1GG-\">制动液169元（2年或4万公里）、变速器齿轮油269元（首次更换2年或4万公里、后续2年4.8万公里更换）、电池冷却液300多元（首次2年或4万公里、后续2年或10万公里）以及2次常规检查320元。</p>\n<p data-pid=\"yD-P2LH4\">polo单算常规保养，不算更换的易损件，费用在2000元。</p>\n<p data-pid=\"UW6fSbuH\">飞度单算常规保养，不算更换的易损件，费用在2088元。</p>\n<p data-pid=\"alBeXk_P\">如果算上易损件，价格在3～4千元不等，与海豚的保养价格相差了3～4倍。</p>\n<p data-pid=\"SvdCJBYo\"><b>纯电车型没有发动机因此少了很多保养项目，节省了很多钱</b></p>\n<p data-pid=\"iK6oKmxd\">新能源车的三大件是电机、电控、电池，燃油车三大件是发动机、变速器、底盘。在结构上燃油车要比电动车复杂并且机械部分占比很大，这就导致了燃油车的保养比新能源麻烦的多。</p>\n<p><img src=\"https://pica.zhimg.com/v2-e0e8d49a9767d7e25ee181cf260b1fff_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"972\" data-rawheight=\"739\" data-watermark=\"watermark\" data-original-src=\"v2-e0e8d49a9767d7e25ee181cf260b1fff\" data-watermark-src=\"v2-936a26df6d82ab97b7857243e9d9251f\" data-private-watermark-src=\"v2-9b4f36ec7f1d34879bdcfd11bb075cbc\"></p>\n<p data-pid=\"ua2tCyHW\">发动机的存在，也限定了燃油车、混动车的保养周期，每次保养最少都要更换机油、机滤，纯电车型没有发动机，也就少了很多保养项目，并且每次定期保养都以检查为主，保养周期也要比燃油车以及混动车型长一些。</p>\n<a data-draft-node=\"block\" data-draft-type=\"ad-link-card\" data-ad-id=\"fee_ed738f18b8becbc84659cc10797a3fbf\"></a><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhang-xiao-5-34-17?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">张立晨</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/531486982/answer/2484801509?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">27 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/525400763?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">从哪一刻你开始相信：新能源车是真的环保？</a><br><a href=\"http://www.zhihu.com/question/508005630?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">怎么看待新能源车取代传统燃油车的时限？</a><br>\n","link":"http://www.zhihu.com/question/531486982/answer/2484801509?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"有必要按照行车电脑提示的里程做保养吗？","date":"2022-05-16 02:16:50","description":"\n<h2>关键还是看每台车的使用场景和强度，属于比较苛刻条件的车，要提前保养，7500km甚至5000km一次保养。</h2>\n<h2>汽车使用场景较为苛刻的定义：</h2>\n<ol>\n<li data-pid=\"NONwWyGx\">经常在拥堵的市区行驶，长时间低速，怠速运行，或者频繁的停车起步（如：行车电脑显示平均车速经常低于20kph）</li>\n<li data-pid=\"oKdTNW2Y\">频繁再冷机情况下（停车超过一个小时后），进行短途行驶（单次行驶低于10km）</li>\n<li data-pid=\"x4wS8Mr5\">用于出租车，教练车，租赁等营运性质的 活动，或者用于竞技，表演娱乐，军事行动等特殊用途</li>\n<li data-pid=\"etDQoixN\">长期处于30摄氏度高温地区行驶</li>\n<li data-pid=\"2b5oxFmu\">长时间处于-15摄氏度低温地区行驶</li>\n<li data-pid=\"Jr47UAAR\"><b>长期在空气质量差或者灰尘多的地方行驶</b></li>\n<li data-pid=\"sCGZ4bjO\">长期在丘陵山地等复杂地形行驶</li>\n<li data-pid=\"hYEFQyR6\"><b>使用非原厂认证和建议的润滑油或者燃油</b></li>\n<li data-pid=\"hDygKm_r\"><b>长期处于重载满载工况行驶</b></li>\n</ol>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wangxiaopeng-?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">王晓鹏PPGarage</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/531487647/answer/2474113682?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">16 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/527301741?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">关于汽车保养的问题。?</a><br><a href=\"http://www.zhihu.com/question/516302680?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">请知友帮忙看看哪些汽车保养项目是多余的？</a><br>\n","link":"http://www.zhihu.com/question/531487647/answer/2474113682?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"新能源汽车应该怎么保养？","date":"2022-05-16 02:10:57","description":"\n<p data-pid=\"UDfIvR--\"><b>保养最烦的是什么？</b></p>\n<p data-pid=\"rgHUWlaw\"><b>费用贵，周期还短</b>，用全合成油明明可以1万公里保养一次，4s店非要5千公里。</p>\n<p data-pid=\"lokEvs0L\">纯电车型恰恰在这两点上占有优势，没有发动机，保养比燃油车省事多了，最主要的是要交智商税的保养项目基本都做不了，比如发动机清洗类的项目，这里就能省一大笔钱。</p>\n<p data-pid=\"nywaXSeY\">混动的保养频率与燃油车一样，半年~一年或5千公里~1万公里（因为有发动机，要更换机油），纯电动就简单很多，少了发动机就省了非常多的保养项目，都是以检查为主，检查的部分基本上是底盘以及三电。</p>\n<p data-pid=\"ptWfiE3y\"><b>以海豚为例，聊聊新能源车的保养</b></p>\n<p data-pid=\"57Fo3jY-\">首保3个月/5千公里，定期保养是1年/2万公里，费用160元。底盘上检查轮胎、车轮轴承、制动液等，以安全件为主。三电部分检查电机防冻液、高压线束及接头、充电器接口、静电过滤网等。</p>\n<p data-pid=\"Yw4BxWBp\">整个保养手册上，需要更换的项目都是油液，具体如下：</p>\n<p data-pid=\"B1W1fHT6\">驱动电机防冻液（4年或10万公里）、制动液（2年或4万公里）、变速器齿轮油（首次更换2年或4万公里、后续2年4.8万公里更换）、电池冷却液（首次2年或4万公里、后续2年或10万公里）。</p>\n<p data-pid=\"cAwdS58-\"><b>手册上没有写的并不代表不要换，而是要根据实际的用车情况来判断，以底盘件为主。</b></p>\n<p data-pid=\"jkPljeC_\">比如刹车片、轮胎、下摆臂等等，不过也不用太过担心，每次常规保养就需要检查这些部件，有问题师傅会提出来，并要求更换。</p>\n<p><br></p>\n<p data-pid=\"ec_Rfq6b\">综上所述，纯电动车保养最省心，周期比混动、燃油都要长，并且价格便宜，能被忽悠的保养项目少，而燃油车和混动车型基本一样。</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhang-xiao-5-34-17?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">张立晨</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/531486624/answer/2485045798?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">23 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/529722537?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">新能源车主们大家平时都用什么软件充电呢？</a><br><a href=\"http://www.zhihu.com/question/505119869?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2022年了新能源汽车可以上了吗，根据我情况?</a><br>\n","link":"http://www.zhihu.com/question/531486624/answer/2485045798?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"米哈游新作《绝区零》首曝 PV 中透露了哪些讯息？","date":"2022-05-15 08:29:54","description":"\n<h2>导言</h2>\n<p data-pid=\"7Ig7BrUj\">本来我是不打算蹭绝区零这一波热度的啊，想着玩玩星穹铁道就差不多了。</p>\n<p data-pid=\"KGAAuvka\">不过芙兰达半夜告诉我的一个发现，让我直接失眠。</p>\n<p data-pid=\"xA_1Nevg\">考据了一夜，我大受震撼——</p>\n<p data-pid=\"p7lM5-wG\">（胡言乱语）米哈游，你下得一盘大棋啊！</p>\n<p data-pid=\"enPn-sDV\">本文将为您讲解我发现的《绝区零》《崩坏：星穹铁道》《崩坏3》《原神》</p>\n<p data-pid=\"sKQkB39R\">设定间可能有所联系的部分，</p>\n<p data-pid=\"UbBbdnY2\">至于到底是彩蛋还是确有关联，就交给诸位去联想了~</p>\n<hr>\n<h2>一、绝区零：白祇重工与Belobog</h2>\n<p><img src=\"https://pic1.zhimg.com/v2-88059c235b0506357fb34f35998201b4_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"691\" data-rawheight=\"292\" data-watermark=\"original\" data-original-src=\"v2-88059c235b0506357fb34f35998201b4\" data-watermark-src=\"v2-096c3ec7967acc9561b9f6220d97c1ed\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"V83NVr2t\">那个让我通宵考据的发现，就是绝区零PV中白祇重工的翻译Belobog。</p>\n<p data-pid=\"8eHTinL5\">本来芙兰达只发现了前六个字母，正在沉思这是什么语言，</p>\n<p data-pid=\"URF3HhSb\">绮罗星一语点醒梦中人：</p>\n<p data-pid=\"Wur3-vnH\">这不就是星穹铁道的始发地贝洛伯格（Belobog）吗？</p>\n<p><img src=\"https://pic3.zhimg.com/v2-1c22f76192b97f57fa8bbc105230916a_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"692\" data-rawheight=\"389\" data-watermark=\"original\" data-original-src=\"v2-1c22f76192b97f57fa8bbc105230916a\" data-watermark-src=\"v2-77389ba06ea18f5e331b2359938e0fa1\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"7HYnbeTB\"> 嚯，一查英文，还真是！</p>\n<p data-pid=\"u6gtQbbg\">星穹铁道官方在《旅情见闻丨场景篇「贝洛伯格」》中透露道：</p>\n<p data-pid=\"bA5Mv58a\">贝洛伯格是灾难后“仅存的人类城市”。</p>\n<p data-pid=\"MI5mB_6g\">绝区零的公告里也写着：</p>\n<p data-pid=\"-z3fp9yN\">“旧文明覆灭，秩序被埋葬。</p>\n<p data-pid=\"pQxXJk7P\">所幸，还存在着一座有能力应对‘空洞’灾害的都市：新艾利都。”</p>\n<p data-pid=\"Vu6sLNzh\">哦？都是末世的最后一座城市？</p>\n<p data-pid=\"jRZxOY5t\">那啥，你们的世界又毁灭了吗？欸，巧了，我们也是。</p>\n<p data-pid=\"_Ymgg2dV\">这算不算缘分，我说不好。</p>\n<p data-pid=\"oglaVJQf\">更巧的是，那篇文章还描述了这座城市下层区的情况：</p>\n<p data-pid=\"8zYdJJ3H\">“名为「裂界」的裂隙也蔓延生长，蚕食了地底的现实”。</p>\n<p data-pid=\"cmYWTZ-O\">嗯？这说法怎么这么耳熟？</p>\n<p data-pid=\"DnyPxn7h\">再一看绝区零对于他们世界主要灾害“空洞”的说法：</p>\n<p data-pid=\"39_aN35S\">“那里面空间紊乱，怪物肆虐，异变横生”。</p>\n<p data-pid=\"-II1R23D\">空洞、裂隙……蚕食现实、空间紊乱……我不好说啊，我不好说啊xdm。</p>\n<p data-pid=\"sde8E7-O\">这……不，什么树海宇宙，我不相信，我不相信，都是巧合啊，信我都是巧合啊。</p>\n<hr>\n<h2>二、星穹铁道：贝洛伯格与雅利洛</h2>\n<p><img src=\"https://pic1.zhimg.com/v2-96d15fab94a4c4359ec4e8d67f8453ab_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"692\" data-rawheight=\"292\" data-watermark=\"original\" data-original-src=\"v2-96d15fab94a4c4359ec4e8d67f8453ab\" data-watermark-src=\"v2-f2dbf59d7790d0ad00c8685bc9d7dde3\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"KbaB4llP\">这词肯定还有别的意思！</p>\n<p data-pid=\"gRN66Y7J\">对，联系“白祇重工”这个说法，</p>\n<p data-pid=\"_4vMfnwp\">“白祇”，大白话就是“白神”（the White God）嘛。</p>\n<p data-pid=\"-DdZ9idp\">俄罗斯那边，斯拉夫语的词根“白”*bělъ (\"white\") +“神” *bogъ (\"god\")</p>\n<p data-pid=\"GRpnPLfk\">就是“白神”（Bělobogъ/Bělъ Bogъ, Belobog/Belbog/Bielbog）的意思了。</p>\n<p data-pid=\"tDq8DlUh\">怎么样，很简单吧？</p>\n<p data-pid=\"IueaCaEO\">史料记载啊，这个词实际上是生造的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6b4171f4dde624112c96917b5b031c17_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"352\" data-rawheight=\"661\" data-watermark=\"original\" data-original-src=\"v2-6b4171f4dde624112c96917b5b031c17\" data-watermark-src=\"v2-593b801ebb08c04a75c7777da6f7dc33\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-cb88c03beb27da8fb7077fe0f1e5d6aa_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"328\" data-rawheight=\"498\" data-watermark=\"original\" data-original-src=\"v2-cb88c03beb27da8fb7077fe0f1e5d6aa\" data-watermark-src=\"v2-09c2c84979a12f1cd8b2ac2d49b241ec\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"hvqTc3SI\"> 维基上的资料参考了俄罗斯科学院出版的一本辞典，</p>\n<p data-pid=\"mHjE-5eL\">简单概括一下就是：</p>\n<p data-pid=\"Gdq-P1iD\">根据《斯拉夫年表》（Chronicle of the Slavs）的记载，</p>\n<p data-pid=\"atS8THKa\">过去的斯拉夫人在祭祀仪式中会围绕一个圆盘转圈，</p>\n<p data-pid=\"QDL0AmE2\">同时他们会念叨一些祝词之类的东西，</p>\n<p data-pid=\"gM9kyiLp\">这些词都会以他们观念中相互斗争的两个神，“善神”和“恶神”为名义。</p>\n<p data-pid=\"wUfwFUrK\">这个恶神叫切尔诺伯格（Chernebog），</p>\n<p data-pid=\"gJbWYNg9\">由斯拉夫语的“黑色”和“神”组成（参考上面的词根拆分），</p>\n<p data-pid=\"zPQ6lZHs\">所以有人就据此发明了一个相反的“白神”，用来称呼那个与切尔诺伯格对立的善神，</p>\n<p data-pid=\"L7tsejNx\">就叫“贝洛伯格”。</p>\n<p data-pid=\"2ykfeAT8\">嗯……切尔诺伯格，这不是隔壁某某方舟的吗？</p>\n<p data-pid=\"_4wGBFit\">别误会，我说的是基督教神话的诺亚方舟（确信）。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b574d2c929941cb6d026ddda3e549542_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"692\" data-rawheight=\"1063\" data-watermark=\"original\" data-original-src=\"v2-b574d2c929941cb6d026ddda3e549542\" data-watermark-src=\"v2-e051e910acad058e3e8e98d98110e0a7\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"CEzcTedb\">好了不开玩笑，根据铁道官方的说法，贝洛伯格这座城市坐落于“雅利洛-Ⅵ”星球上。</p>\n<p data-pid=\"PqxCU-D5\">《「银河智库 | 雅利洛-Ⅵ」》里面管这个雅利洛（Jarilo）叫“春日战神”，</p>\n<p data-pid=\"ioBrZ7GI\">实际上呢就是一个斯拉夫轮回神（可以简单理解成他每年都死去活来一次）的名字，</p>\n<p data-pid=\"Ui7JqmHG\">词源*yeh₁r-就是原始印欧语的春天，</p>\n<p data-pid=\"IsInlZmO\">被当成代表春季的神也不意外。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-2b46ffb3026793938d445e8c559213f9_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"250\" data-rawheight=\"250\" data-watermark=\"original\" data-original-src=\"v2-2b46ffb3026793938d445e8c559213f9\" data-watermark-src=\"v2-0e2b9df741f624031feb03e7a3ced139\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"yepH0XsG\">白祇重工的logo是拼音首字母BQ的交叉符号，可能参考了斯拉夫符号的科莱达（Koliada），</p>\n<p data-pid=\"GPShO9bX\">代表冬季的过去与新春的到来，其词源是“圆、循环”（cycle）和“车轮”（wheel），</p>\n<p data-pid=\"1MfJDpHb\">大抵对应着我上面说的白神贝洛伯格与黑神切尔诺伯格的那个仪式圆盘。</p>\n<p data-pid=\"8hwEGu5D\">在神话里，雅利洛是斯拉夫至高神之一雷神佩伦（Perun）的儿子。</p>\n<p data-pid=\"1MHO8Jpo\">星穹铁道的雅利洛英译选用的是塞尔维亚语（Serbo-Croatian），</p>\n<p data-pid=\"pTCVqd1n\">而塞尔维亚的贝洛伯格被学者视为善神佩伦的化身。</p>\n<p data-pid=\"K5P7O08T\">也就是说，雅利洛是贝洛伯格的儿子？</p>\n<p data-pid=\"U_Qhy7Gi\">但贝洛伯格这座城市却坐落在雅利洛星球上……</p>\n<p data-pid=\"piINJCUK\">好怪啊xdm。</p>\n<p data-pid=\"V_ZpPXz7\">神话认为，雅利洛的妻子莫拉娜（Morana）在丈夫死去后会化身死亡与寒冬的女神，</p>\n<p data-pid=\"htkyJOHb\">为世界带来寒潮后死去。</p>\n<p data-pid=\"oZR5dd_L\">于是一年从雅利洛代表的春天开始，到她妻子代表的冬天结束，</p>\n<p data-pid=\"Vr199oPa\">最后他们都会在第二年复活。</p>\n<p><img src=\"https://pica.zhimg.com/v2-54a1a208eeccd46c59058c37c2ea62b7_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"692\" data-rawheight=\"389\" data-watermark=\"original\" data-original-src=\"v2-54a1a208eeccd46c59058c37c2ea62b7\" data-watermark-src=\"v2-da9460f2404e8e67b090546f2d7dc2a7\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"-JnZ8ue1\">这对应着星穹铁道“雅利洛-Ⅵ”星球遭遇的灭世寒潮，</p>\n<p data-pid=\"07R1WCNo\">米哈游在这方面的考据还是相当用心的。</p>\n<p data-pid=\"5jBsnFtd\">更让我觉得用心良苦的是，雅利洛这个神实际上仅在一份史料中出现过，</p>\n<p data-pid=\"DP97nUV9\">那是一位知名的德国神父、主教——</p>\n<p data-pid=\"NXzqVmrD\">他生于十字军东征和赎罪卷发行的年代——</p>\n<p data-pid=\"u3oThkcB\">他将启示（Apocalypse）的光辉遍洒欧洲——</p>\n<p data-pid=\"kt725Z3R\">没错，我说的就是奥托（Otto）。</p>\n<p data-pid=\"hM4ROM3B\">雅利洛的神话仅见于奥托主教的传记。</p>\n<p data-pid=\"O3yzai1H\">谢谢你，星穹铁道，因为有你，我终于确定了奥托对应历史上的哪位奥托。</p>\n<hr>\n<h2>三、崩坏3rd：奥托与亚空</h2>\n<p data-pid=\"w_Y2TO4g\">那奥托跟星穹铁道和绝区零又有啥关系呢？</p>\n<p data-pid=\"TuNui8la\">嗯，以下是一点点个人猜想，强调一下是猜（xia）想（bai）。</p>\n<p data-pid=\"I0p_wcvU\">奥托的K系列卡莲（Kallen）复活试验制造了如今的空之律者K423，</p>\n<p data-pid=\"0pfEhK9Z\">她的一个众所周知的技能是亚空之矛，</p>\n<p data-pid=\"jmTcVw5S\">也就是崩坏三经典PV《最后一课》里的那堆从圆形空洞里钻出来的玩意。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-b1bcc0aa2c2674cdff8807a6d9ba5105_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"692\" data-rawheight=\"389\" data-watermark=\"original\" data-original-src=\"v2-b1bcc0aa2c2674cdff8807a6d9ba5105\" data-watermark-src=\"v2-2694d9d4c23e579d78b2c795c935df31\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-ab47d6f5339ed9aaf94c4078f95da4a4_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"691\" data-rawheight=\"389\" data-watermark=\"original\" data-original-src=\"v2-ab47d6f5339ed9aaf94c4078f95da4a4\" data-watermark-src=\"v2-36bc70ed7f944e907350a82eff59b866\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"X1eLhbgW\"> ……等等，黑色空洞？</p>\n<p data-pid=\"2z6ZFnKG\">绝区零在推特（twitter）上是不是管这灾难玩意叫亚空（the sub-Hollow）来着？</p>\n<p data-pid=\"vDfAN3C3\">这玩意里边冒出来的怪物是不是和奥托在《阿波卡利斯如是说》那儿虚数之树面前打的差不多来着？</p>\n<p><img src=\"https://pic3.zhimg.com/v2-6bcb6268ef3f073d4c0df673d4973d71_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"692\" data-rawheight=\"389\" data-watermark=\"original\" data-original-src=\"v2-6bcb6268ef3f073d4c0df673d4973d71\" data-watermark-src=\"v2-801c1b0fdeb0df5d7bb3ce252d718fb6\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-0da299a4dbf955ce6780f90543cf90a3_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"692\" data-rawheight=\"292\" data-watermark=\"original\" data-original-src=\"v2-0da299a4dbf955ce6780f90543cf90a3\" data-watermark-src=\"v2-5508237e767e87dbfb1c0abc2b6d7575\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"UWiHHD85\">这熟悉的黑绿配色……</p>\n<p data-pid=\"HCVfzE1G\">女王的亚空之矛是亚空间（Sub-Space）……</p>\n<p data-pid=\"OSspPCq-\">不好说，这波我不好说啊。</p>\n<p data-pid=\"41WpEGjw\">啊，更神必的是原神实际上也有这个亚空（Aeons），</p>\n<p data-pid=\"tZjYxPrB\">那是尘世七执政（Archons）的别称（Aeons）另译，</p>\n<p data-pid=\"BR26eZwM\">意思是与“高天”相对的“低空”，大概就是天空岛以下的七国（对应Heavens），</p>\n<p data-pid=\"Q5O_Mn6i\">可以同时指代七神或者七国。</p>\n<p><img src=\"https://pica.zhimg.com/v2-29a73651bfb41d30e7639d13d3dab13e_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"692\" data-rawheight=\"661\" data-watermark=\"original\" data-original-src=\"v2-29a73651bfb41d30e7639d13d3dab13e\" data-watermark-src=\"v2-9de93f2dfd8e35ad3c0397e850337bdd\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"SCkoafeH\">如果这个词指代神的话……它又是星穹铁道设定里“星神”（Aeons）的翻译。</p>\n<p data-pid=\"lyzz5YoG\">当初我看到说星神是概念拟人，心想崩坏你怎么又抄袭原神了，</p>\n<p data-pid=\"lok0NxqV\">你以为你套一个诺斯替神话的皮大家就认不出来了？（此条五毛记得删括号）</p>\n<p data-pid=\"gTqE1ngb\">结果万万没想到它直接给翻译成了Aeons，生怕玩家不知道是吧。</p>\n<hr>\n<h2>四、原神：Aeons与伊斯塔露</h2>\n<p data-pid=\"r8vk7Pp5\">虽然星穹铁道提到的“旅途”、“旅途的尽头”总是让我幻视原神，</p>\n<p data-pid=\"km6EFBTs\">但这么直白反而给我整不会了。</p>\n<p data-pid=\"rxCVMIRZ\">执政跟星神是同一个词，我怎么会做这样的梦？</p>\n<p><img src=\"https://pic1.zhimg.com/v2-78155c505cadacdcb587fa27a39ae9b2_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"692\" data-rawheight=\"291\" data-watermark=\"original\" data-original-src=\"v2-78155c505cadacdcb587fa27a39ae9b2\" data-watermark-src=\"v2-beadb7faf269c525bdc088f76c0a0c8e\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"tiPZbhZm\">绝区零开场还是个铁道（Railway）站……</p>\n<p data-pid=\"B2sXP1QQ\">列车上写着跟星穹铁道的称呼一样的“开拓者”……</p>\n<p data-pid=\"91Sd8jg5\">而且我还梦到一个执政跑到绝区零去了，真是太可怕了。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-7e9a7b996a0dd2f4de5b1ad71de6e032_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"691\" data-rawheight=\"319\" data-watermark=\"original\" data-original-src=\"v2-7e9a7b996a0dd2f4de5b1ad71de6e032\" data-watermark-src=\"v2-eaa85182b4721b1474ca148ea3b97d23\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"4_TCHoAa\">什么？不，不是七神，是原初法涅斯四个影子之一的伊斯塔露（Istaroth）。</p>\n<p data-pid=\"ZiiRvqR1\">这位时间执政的早期神话原型伊南娜（Inanna）是乌鲁克（Uruk）的守护神，</p>\n<p data-pid=\"fnxW78ox\">曾经前往苏美尔神话里水神、智慧神恩基（Enki）的城市艾利都（Eridu）夺取了文明智识（me，或许可以翻译成道、密，参考伊南娜的一个称号“万道之女王”the Queen of All Given Mes）。</p>\n<p data-pid=\"DOuz5kns\">艾利都，这词是不是也很熟悉？</p>\n<p><img src=\"https://pic1.zhimg.com/v2-0ca0ebd25056a8b7bd950ffeb0ba1d4a_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"692\" data-rawheight=\"321\" data-watermark=\"original\" data-original-src=\"v2-0ca0ebd25056a8b7bd950ffeb0ba1d4a\" data-watermark-src=\"v2-28339d4785a8d9c04fc4b0a811f1c2b7\" data-private-watermark-src=\"\" data-tags=\"porn\"></p>\n<p data-pid=\"Wm_McKKG\">对，绝区零里人类仅存的城市，就叫新艾利都（New Eridu）。</p>\n<p data-pid=\"H1ENAbA2\">这可不是什么好地方。</p>\n<p data-pid=\"SFffTDuF\">恩基在艾利都的神庙叫阿普苏（E-abzu），意思是原始的海洋，或者说深渊。</p>\n<p data-pid=\"JmJzdizK\">……嗯，伊斯塔露从深渊夺取了某种力量让她守护的文明兴盛……？</p>\n<p data-pid=\"27v-D_BN\">嘶，细思恐极啊xdm。</p>\n<p data-pid=\"Dcmi3sI0\">话又说回来，这玩意在苏美尔（Sumerian）和阿卡德（Akkadian）神话中实际上指冥界（Underworld）。</p>\n<p data-pid=\"sjzp4gyl\">有趣的是，冥界也是雅利洛和他妻子轮回的去处，</p>\n<p data-pid=\"QuabBVWa\">而Underworld这词在星穹铁道是贝洛伯格城地底“下层区”的翻译……</p>\n<p data-pid=\"deUe8cwI\">啊，真是可怕呢。</p>\n<p data-pid=\"3yyEQw-8\">恩基本来是苏美尔神话版诺亚方舟建立的引导者，希望保护人类免受洪水灾难，</p>\n<p data-pid=\"6ZxCs3hu\">他在艾利都的权柄却被伊南娜去骗去偷袭，最后还认了这个大亏，实惨。</p>\n<p data-pid=\"ZCDgx8f5\">想想绝区零预告中对新艾利都念叨的“欺骗”、“真相”……</p>\n<p data-pid=\"Hy_xmT_h\">他们该不会把自己的守护神和提瓦特（Teyvat，希伯来语“方舟”的拉丁转系拼写）背刺了吧？</p>\n<hr>\n<h2>结语：树海宇宙</h2>\n<p data-pid=\"LfKKVvdx\">好吧，虽说进行了一波狂想，</p>\n<p data-pid=\"fgBxBmd_\">但绝区零和星穹铁道的贝洛伯格到底有没有关系，</p>\n<p data-pid=\"zw9o5iiC\">崩三、星穹、原神和绝区零的亚空究竟有什么关系，</p>\n<p data-pid=\"jhylCCzY\">绝区零的新艾利都跟原神的伊斯塔露又有没有关系，</p>\n<p data-pid=\"aiEhMjXN\">还都不好说。</p>\n<p data-pid=\"oaq6BcHH\">崩坏宇宙的以太锚点、绝区零的以太资源和原神的地脉，看起来可以跟虚数之树扯上关系，</p>\n<p data-pid=\"OOtHzeJQ\">但米哈游会不会、啥时候会把这些统合到树海宇宙（指源自崩坏三世界观的“虚数之树”+“量子之海”多平行世界时空结构）的体系中，实在是个未知数。</p>\n<p data-pid=\"NIjxmKbu\">本文也仅仅是开一个脑洞，大家切莫当真。</p>\n<p data-pid=\"ieTfFWjE\">你们要是对此有什么想法呢也都可以在评论区讨论，反正我概不负责。</p>\n<p data-pid=\"2casyYmd\">这里是银发，泛二次元考据爱好者，关注我收听更多胡扯~</p>\n<hr>\n<h2>致谢</h2>\n<ol>\n<li data-pid=\"vC_LKetM\"><a href=\"http://link.zhihu.com/?target=https%3A//space.bilibili.com/7146841\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">低配芙兰达</a></li>\n<li data-pid=\"rKfsS9DW\"><a href=\"http://link.zhihu.com/?target=https%3A//space.bilibili.com/372784089\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Kiraboshi绮罗星</a></li>\n<li data-pid=\"bGwczZ8P\"><a href=\"http://link.zhihu.com/?target=https%3A//space.bilibili.com/404929361\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">AKL联合特勤局</a></li>\n<li data-pid=\"7ucxBboG\"><a href=\"http://link.zhihu.com/?target=https%3A//bbs.nga.cn/nuke.php%3Ffunc%3Ducp%26uid%3D61404353\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Agilulfo1900</a></li>\n<li data-pid=\"6fWrMRDL\"><a href=\"http://link.zhihu.com/?target=https%3A//space.bilibili.com/536795\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">今天枯萎卡手了没</a></li>\n</ol>\n<hr>\n<h2>参考</h2>\n<p data-pid=\"tpZ3VEg7\">[1] Н. И. Толстой // Славянские древности: Этнолингвистический словарь : в 5 т. / под общ. ред. Н. И. Толстого; Институт славяноведения РАН. — М. : Межд. отношения, 1995. — Т. 1: А (Август) — Г (Гусь). — С. 151. — ISBN 5-7133-0704-2.</p>\n<p data-pid=\"q5SRINxs\">[2] Johnson, Kenneth (1998). Slavic Sorcery : shamanic journey of initiation. St. Paul, MN: Llewellyn Publications. p. 89. ISBN 1-56718-374-3. OCLC 37725456.</p>\n<p data-pid=\"F4sVefb0\">[3] Leeming, David.From Olympus to Camelot: The World of European Mythology. New York, NY: Oxford University Press. 2003. p. 129.</p>\n<p data-pid=\"lLO5S4lS\">[4] Kulišić, Špiro; Petrović, Petar Ž.; Pantelić, Nikola (1970). Serbian mythological dictionary. Belgrade: Nolit. pp. 28–29.</p>\n<p data-pid=\"JJFVr3Ic\">[5] 贾利尔・杜斯特哈赫选. 阿维斯塔:琐罗亚斯德教圣书[M]. 商务印书馆, 2010.</p>\n<p data-pid=\"fEf6N-rx\">[6] Symbolikon. Koliada[EB/OL]. (2020.04.18). [2022.05.14]. <u><a href=\"http://link.zhihu.com/?target=https%3A//symbolikon.com/downloads/koliada-slavic/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">symbolikon.com/download</span><span class=\"invisible\">s/koliada-slavic/</span><span class=\"ellipsis\"></span></a></u>.</p>\n<p data-pid=\"IYAGnbYG\">[7] Löffler, Klemens. \"St. Otto.\" The Catholic Encyclopedia. Vol. 11. New York: Robert Appleton Company, 1911. 28 Mar. 2013.</p>\n<p data-pid=\"iQIa-yHF\">[8] Cross, F. L., ed. The Oxford Dictionary of the Christian Church. New York: Oxford University Press. 2005, article plenary indulgence.</p>\n<p data-pid=\"hTsptkWu\">[9] 詹姆斯・R.路易斯, 伊芙琳・奥利弗. 天使大全[M]. 重庆出版社, 2010.</p>\n<p data-pid=\"FHg3c7E8\">[10] 张新樟. 《古代诺斯替主义经典文集》[J]. 世界宗教研究, 2018, No.170(02):47.</p>\n<p data-pid=\"cGcqMfqZ\">[11] 约纳斯, 张新樟. 诺斯替宗教:异乡神的信息与基督教的开端[M]. 上海三联书店, 2006.</p>\n<p data-pid=\"IZ9IvyK3\">[12] 约安·P.库里亚诺. 西方二元灵知论:历史与神话[M]. 上海人民出版社, 2009.</p>\n<p data-pid=\"dqHMw6nj\">[13] 荣格. 红书[M]. 中央编译出版社, 2013.</p>\n<p data-pid=\"9DOVPKGW\">[14] Inanna: Lady of Love and War, Queen of Heaven and Earth, Morning and Evening Star\", consulted 25 August 2007.</p>\n<p data-pid=\"fTaPEUNZ\">[15] Wolkstein, Diane; Kramer, Samuel Noah (1983). Inanna: Queen of Heaven and Earth: Her Stories and Hymns from Sumer. Harper &amp; Row. ISBN 978-0-06-090854-6.</p>\n<p data-pid=\"2w-haQTC\">[16] Echlin, Kim (2015). Inanna: A New English Version. Penguin. p. 55. ISBN 978-0-14-319458-3.</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/yin-fa-san-qian-xue-man-tou?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">银发三千雪满头</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/532616869/answer/2485448500?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">354 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/532613231?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价米哈游新作《绝区零》首曝 PV ？</a><br><a href=\"http://www.zhihu.com/question/532621263?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">米哈游动作新游《绝区零》PV 首曝，你对该游戏有哪些期待？</a><br>\n","link":"http://www.zhihu.com/question/532616869/answer/2485448500?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012 年的、由 Node.j......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\n    return new Date(date.toLocaleString('en-US', { timeZone }))\n}\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        timeZone\n    })\n    return {\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\n        convert (date) {\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\n        }\n    }\n}\n\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\n    return converter.convert(new Date(secDate), tzName) - secDate\n}\n\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\ncmn-Hans-SG = 中文普通话-简体-新加坡\ncmn-Hant-TW = 中文普通话-繁体-台湾\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\ncmn = 中文普通话\n\nzh-Hans = 中文-简体\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\n}\n\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long'\n}\nconst now = new Date()\n\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\n\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\n\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\n\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\n\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\n\nzhCNFormatter.format(now) // 2021年10月13日星期三\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\n\njaFormatter.format(now) // 2021年10月13日水曜日\njaAltFormatter.format(now) // 令和3年10月13日水曜日\n\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\n// {locale: 'zh-CN', calendar: 'gregory', …}\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\n     // 基于一个固定日期计算，这里选择 1970.1.1\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\n    const base = new Date(1970, 0, 1).getTime()\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\n    return Array.from({ length: 7 }, (_, day) =&gt; (\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\n    ))\n}\n\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n}).formatToParts(new Date())\n// [\n//     { type: 'year', value: '2021' },\n//     { type: 'literal', value: '年' },\n//     { type: 'month', value: '10' },\n//     { type: 'literal', value: '月' },\n//     { type: 'day', value: '13' },\n//     { type: 'literal', value: '日' },\n//     { type: 'weekday', value: '星期三' },\n//     { type: 'literal', value: ' ' },\n//     { type: 'dayPeriod', value: '上午' },\n//     { type: 'hour', value: '1' },\n//     { type: 'literal', value: ':' },\n//     { type: 'minute', value: '00' },\n//     { type: 'literal', value: ':' },\n//     { type: 'second', value: '00' }\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\n}\n\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\n  timeZone: 'America/Los_Angeles',\n  year: 1995,\n  month: 12,\n  day: 7,\n  hour: 3,\n  minute: 24,\n  second: 30,\n  millisecond: 0,\n  microsecond: 3,\n  nanosecond: 500,\n  calendar: 'iso8601'\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<p>2020 年 11 月 11 日，苹果在本年度最后一次 Apple Events 上发布了全新的 ARM 芯片 M1、以及三款搭载了 M1 的 Mac：MacBook Air、MacBook Pro 13‘ 和 Mac Mini。在 WWDC 2020 库克宣布 Apple Silicon 后，这次 Apple Events 再一次掀起了热潮，不少 KOL 都把 M1 奉若神明，不少人也不以为然。本文通过 8 个问题来简单聊聊 M1 和 ARM Mac。M1 芯片的性能如何？本文写就时，搭载 M1 的 Mac 尚未开始发货，我们能看到的只有 GeekBench 上流出的跑分。所以，让我们先从跑分开始看起？...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote>\n<p>周六不放假休息，还在这加班搞 CTF？</p>\n</blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/86535/11/24318/75037/622032a8E4f94d4ae/89703ccc122cf4e0.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"从 Google Analytics 的统计代码说起 —— 谈谈 script 标签的 async 和 defer 属性","date":"2020-10-13 09:25:00","description":"\n<p>之前我在「天下武功，唯快不破 —— 我是这样优化博客的」一文中提到「对于大部分浏览器来说，确保 JS 异步加载和执行的做法其实是在操作 DOM 动态插入 &lt;script async&gt;」，但是并没有给出详细原因。这一次我以 Google Analytics 的统计代码为引子，详细讲讲 &lt;script&gt; 的 async 和 defer 属性、以及它们背后的故事。拆开 Google Analytic 的统计代码现在 Google 推出了 Google Tag Manager，通过......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/80291/2/16552/19311/622032b3Eb300c2aa/66748fc8124a01c5.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/script-async-defer/\">https://blog.skk.moe/post/script-async-defer/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/script-async-defer/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将 […]","link":"https://flyhigher.top/develop/2160.html"}]