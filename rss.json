[{"title":"派周报 | 强推 USB Type-C 会阻碍创新吗？","date":"2022-10-14 12:38:14","description":"欧盟将强制手机使用 USB Type-C 端口的消息成为了科技界的头条，但质疑的观点也不在少数，反对意见主要集中在对于强制标准是否会阻碍创新的担忧。本文从信息角度补充一些在报道中被忽略的细节，以便读者形成自己的判断。<p>[......]</p>\n<a href=\"https://sspai.com/prime/story/pi-weekly-013\" target=\"_blank\">查看全文</a><p>本文为会员文章，出自<a href=\"https://sspai.com/prime/precog/single\" target=\"_blank\">《单篇文章》</a>，订阅后可阅读全文。</p>\n","link":"https://sspai.com/prime/story/pi-weekly-013"},{"title":"本周看什么 | 最近值得一看的 8 部作品","date":"2022-10-14 09:51:09","description":"☕️TL;DR近期佳作推荐：[动画]链锯人、[日剧]静雪、[电影]沼泽深处的女孩、[动画]BLEACH死神千年血战篇、[美剧]小谢尔顿第六季、[韩剧]真正胜负、[动画]福星小子、[日剧]第一企鹅！几则 ...<a href=\"https://sspai.com/post/76185\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/76185"},{"title":"新功能感知不强、旧体验原地踏步：BOSE QuietComfort 消噪耳塞 II 体验报告","date":"2022-10-14 07:59:35","description":"无论何时都能让你从聒噪之中抽身出来，是为 quiet；帮你在音乐世界中寻求内心的平静与慰藉，是为 comfort。<a href=\"https://sspai.com/post/76164\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/76164"},{"title":"如何看待特斯拉即将取消超声波雷达，采用纯视觉方案？","date":"2022-10-14 07:10:22","description":"\n<p data-pid=\"rzdZfqKP\">两个核心观点：</p>\n<p data-pid=\"WejgNLx7\"><b>1. 特斯拉不是是目前唯一在坚持纯视觉方案的企业，纯视觉方案是被技术领域高度认可的未来技术趋势之一；</b></p>\n<p data-pid=\"HWZQLcNk\"><b>2. 特斯拉坚持纯视觉方案符合马斯克推崇的“第一性原则“，其核心是轻硬件，重算法；</b></p>\n<hr>\n<p data-pid=\"kvZFXver\">纯视觉方案是目前全球自动驾驶领域一个非常热门的研究方向，另一个非常成熟的参赛选手就是mobileye。Mobileye在2020年的CES上就已经展示了基于纯视觉的城市无干预自动驾驶。</p>\n<p data-pid=\"hK9VYuLt\">2021年北美和英国的华人汽车工程协会搞了一个自动驾驶方面的技术论坛，我也在里面听听。与会的在国内和美欧工作的自动驾驶研究人员的观点还是比较一致的，那就是从技术逻辑的角度来说纯视觉更可能是“正确的选择“，而激光雷达方案更多的是现有的技术能够拼凑出可用系统的现实选择。</p>\n<p data-pid=\"YDkog1SQ\">其实这有点像“三体”中章北海所在的时代面临的选择，到底是使用成熟的化学工质推进方案还是看起来连技术基础都有很多突破空间的无工质推进方案。</p>\n<p data-pid=\"iw0sL6rb\">那么，为什么会有这样的观点呢？</p>\n<p data-pid=\"EwyTsVtB\">因为这个观点的核心并不在于复杂的两者技术的解读，而在于这些技术背后的理论基础，那就是：</p>\n<p data-pid=\"z2xazRA-\"><b>视觉方案是轻单车硬件，重软件算法、云计算和大数据协作来实现识别的方案；</b></p>\n<p data-pid=\"ltGi1QOq\"><b>激光雷达方案则相反，重单车硬件系统，是靠硬件扫描出的海量高精度数据来实现识别的方案。</b></p>\n<p data-pid=\"wZSbhDnh\">这就是两者最大的区别，也是为什么特斯拉在一片反对声中必须坚持纯视觉方案的根本原因。我相信这也是马斯克所推崇的第一性原则相关：</p>\n<p data-pid=\"cVK6bDfi\"><b>“我在想存在一种好的思维框架。那是物理学的东西，你知道，有点儿像第一原理推理（first principles reasoning）。总体来讲，我认为存在将事情缩减至其根本实质……你必须能够把那些问题“煮沸”才能从里面找出那些最基本的东西。  - 马斯克“</b></p>\n<p data-pid=\"W__OsMBK\">马斯克使用这种方法实现了SpaceX火箭的成本降低到只有传统火箭公司十分之一甚至百分之一的费用。而自动驾驶领域坚持纯视觉在我看来也是如此。</p>\n<hr>\n<p data-pid=\"evvIwUjB\">新一代的智能自动驾驶如果未来需要普及，那么前提必然是低成本。因为在高端高价产品中应用然后逐渐降价，这是改良性创新技术的策略。而真正能够实现颠覆和技术壁垒的破坏性创新，其本质核心必然是低成本。</p>\n<p data-pid=\"s7J_meBx\">使用激光雷达和最大限度使用摄像头（甚至会减少传统雷达的维度）的本身逻辑是一致的，那就是传统的传感器的识别能力无法应对完整的自动驾驶。他们尝试解决的问题都是一个：识别。更直接的来说，就是要进行自动驾驶的策略响应，前提首先是要把真实的路况引入到数字世界之中。</p>\n<p data-pid=\"WVY2i3Sg\">传统雷达的识别过程本身就是一个依赖大量标定过程的概率论问题解析。一个最简单的例子是，一个人的雷达反射大小和一个可口可乐易拉罐是一样的。而且对高度方向上的解析极差，几乎可以认为是没有，也无法识别人的肢体尺寸位置。摄像头只是作为辅助识别。也就是说雷达告诉你前面有个东西，摄像头去识别这个东西可能是什么，然后确定车辆是否要做反应或者如何做反应。位置、距离等信息都来自于雷达，但是雷达的识别很差，可视化里面就是一些大小的点线，然后需要人工标定去识别这些可能是什么。摄像头当然也需要大量的人工标定。现在4D雷达对的这种情况有很大的改善，但是点的精细度还远远不够。</p>\n<p data-pid=\"qYgryupi\">激光雷达带来的识别能力是颠覆性的，以它超高精度的扫描能力将真实世界快速精确的复刻到数字世界里面，识别的难度也大大降低了，因为反射面基本就是物体真实的反射面。这听起来很完美，但是激光雷达高精度扫描的结果就是大量的数据，因为你首先要事无巨细的在数字世界真实重建显示，然后处理速度还要足够快以方便后续的识别与策略运用计算。那么最后其结果就是代价高昂的激光雷达+超级强大的处理芯片及匹配系统+本地化的策略运用。这套系统相对来说更加依赖本车的自身单车算力。所以使用这样系统的车辆必然需要巨额的硬件投入。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-a497095486f3c3f12b82cb5e47575b86_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1143\" data-rawheight=\"646\" data-watermark=\"watermark\" data-original-src=\"v2-a497095486f3c3f12b82cb5e47575b86\" data-watermark-src=\"v2-84b6825829937c36514904c3a398233f\" data-private-watermark-src=\"v2-06ea6ef4ebcdb409ba2456c9a7bd2ae2\"></p>\n<p data-pid=\"_PvZFI7i\">有人认为视觉方案就是和现在一样，只是强化了一下摄像头的作用。但是这里面有３点本质上的不同：</p>\n<p data-pid=\"GI7ofRYW\">1－算法上贯彻的以视觉为主。</p>\n<p data-pid=\"wik_6kV-\">2－更加强大的摄像系统（但是成本依然远低于激光雷达方案）</p>\n<p data-pid=\"woGgusqM\">3－这才是最重要的一点：机器学习和云计算。简单的摄像头背后的云端算法才是核心。</p>\n<p data-pid=\"vmLrLasS\">前两者听起来比较好理解，而且大家直接看Mobileye的测试视频就能惊叹与视觉方案目前能够做到的精度和效果。但是云计算是这些企业在宣传中会隐藏的，但是这才是他们的杀手锏。</p>\n<p data-pid=\"1grwNu45\">在Mobileye的２０２０年CES的基于视觉无人驾驶视频中，测试效果就已经非常惊艳的，而且是从市区到高速公路再到市区的复杂路况纯视觉无干预。但是里面有一个拐弯，Mobileye的技术人员再后来介绍，事实上如果在那条道路上也有一辆搭载了Mobileye视觉无论驾驶系统车辆的存在，那么在当前道路上根本看不到十字路口右侧道路来车的测试车就会提前预知看不到的道路上的车辆情况。而且这个技术已经应用了。</p>\n<p data-pid=\"coE9KPaA\">这才是视觉方案真正可怕的地方，它的价值在云端，而不是单车算力。</p>\n<p data-pid=\"FfDGQ7mP\">Mobileye开发出来的算法，可以将视觉方案看到的情况的识别结果，纳入到一个函数之中，然后将这个函数实时的分享到云端，然后通过云端交互对同样区域的车辆提供充足的信息。也就是说，在这个路段跑过的车辆越多，当前和你一起在跑的车越多，你就可以提前甚至实时获取这个路段的所有最新信息。</p>\n<p data-pid=\"KQHvLznH\">单车摄像头的识别当然比不上激光雷达，但是视觉方案配合识别大幅压缩后的数据，通过机器学习和云计算辅助单车的识别效果，才是视觉方案认为在未来能够PK激光雷达方案的全部实力。</p>\n<hr>\n<p data-pid=\"FMMaZHVT\">我们简化一下描述：</p>\n<h2>激光雷达方案强单车硬件和算力，而视觉方案的单车硬件投入低，核心策略基于云端，这样就可以实现车辆的硬件购买成本低，而自动驾驶功能可以通过订阅等灵活方式购买，因为主要的消耗是在云端。破坏性创新，前提必然是便宜。</h2>\n<p data-pid=\"-N28CvUs\">激光雷达当然也可以通过云计算来提升，但是大部分是策略优化，依赖度不高，一方面的原因是处理激光雷达数据的投入已经很大了。</p>\n<p data-pid=\"vdJMcNgG\">这就是为什么马斯克会贬低激光雷达方案，并坚持纯视觉方案。</p>\n<p data-pid=\"eVH1cf_z\">所以在２０２１年中美日欧华人汽车工程协会全球联线座谈的无人驾驶专场，所有专家一致认为，无人驾驶的未来是视觉的。</p>\n<hr>\n<p data-pid=\"uaMe_cCC\"><b>但是，（转折来了），激光雷达方案依然有其生存空间，而且在中国，激光雷达更是可能在可预见的未来成为唯一可行的方案。</b></p>\n<p data-pid=\"g_7tUjyP\">WHY?</p>\n<p data-pid=\"2huidBzF\">因为基于视觉的方案的真正屠龙技是云端互联和大量的数据交互建模，而这种包含实际道路和真实人流视觉识别结果的数据通过企业的内部算法上传到私有企业管理的云端进行运算、存储、识别和分发，或许在美国和欧洲国家可以，但是在中国是万万不可能完全自由放开的。Mobileye以及所有视觉方案算法企业提出的所谓“函数”的目的，其本身也就是希望淡化系统需要将道路及其实时交通工具和人流信息上传的敏感度，将其弱化为“数学函数”。但是，这种话术或许在２０２０年之前还行得通，随着特斯拉地图信息问题、滴滴美国上市事件以及近期的俄罗斯－乌克兰冲突的大背景下，这种全国性质的方案基本上不可能通过监管部门的审查，而且还有一个数据出境监管的问题。</p>\n<p data-pid=\"gpgR5ZBx\">Mobileye目前也在尝试通过和很多中国本土主机厂合作来绕过这个限制，第一波交流的时候对于算法和服务器的策略很强势，所以基本上全崩了。然后现在和个别本土企业已经在做项目了，据说开放度还可以，但是毕竟是国外系统，未来会发生什么？谁也不知道。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/JackyQ?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">JackyQ</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/558212074/answer/2708994833?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">220 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/558728218?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">特斯拉官宣移除超声波雷达，对此你怎么看？</a><br><a href=\"http://www.zhihu.com/question/546553392?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">怎么看待特斯拉否定激光雷达，死磕摄像头？</a><br>\n","link":"http://www.zhihu.com/question/558212074/answer/2708994833?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价新能源汽车的换电模式？以及如何看待其未来的发展前景？","date":"2022-10-14 07:07:36","description":"\n<p data-pid=\"PYGLDVgo\">       作为一名整车研发工程师，其实我在相当长一段时间内对于新能源汽车的换电模式是非常不理解，也非常不看好的。现在我能更客观的来看待新能源汽车换电模式，下面向大家分享一下我的理解。</p>\n<p data-pid=\"qRS4KyJ5\"> 目录：</p>\n<ol>\n<li data-pid=\"gWo9vdYo\">汽车的基本要求分析</li>\n<li data-pid=\"7qWPeNCv\">用户的生活习惯分析</li>\n<li data-pid=\"TAyEYKKc\">换电的应用场景分析</li>\n</ol>\n<h3><b>一、汽车的基本要求是什么？</b></h3>\n<p data-pid=\"Z3pqC6RF\">       为了能更好的说明这个问题，我先和大家一起把视角拉到圆点问题——“汽车是什么？”。这其实是一个简单到几乎被所有人忽略掉的一个问题，对于整车研发工程师来说更是如此。</p>\n<p data-pid=\"9NmxpYkU\">      那汽车到底是什么呢？我想大家心里都应该有了答案：“汽车是为了解决把人或物从A点运送到B点的这个需求的工具”。简单一点就是“<b>汽车是一种移动出行工具</b>”。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f0ef6e3b57091d5e877b4e73ffc0e49e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"943\" data-rawheight=\"505\" data-watermark=\"watermark\" data-original-src=\"v2-f0ef6e3b57091d5e877b4e73ffc0e49e\" data-watermark-src=\"v2-a5e5115ad9eb232caa8d94946de834fa\" data-private-watermark-src=\"v2-44dffa9839fe5c3d5c7236f923693c61\"></p>\n<p data-pid=\"aZx5jPPq\">       如果汽车是一种移动出行工具，最基本的要求是什么呢？既然汽车是一种替代人的一种移动出行工具，那应该具备的基本素质，我理解为：<b>跑的快--&gt;跑的远--&gt;装的下--&gt;拉的动--&gt;... ...</b> ,不过在这几条之前还有一个更重要的要求：<b><i>买的起</i></b>。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-79abb33e1d182eb587e49eee5c5b0073_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1050\" data-rawheight=\"247\" data-watermark=\"watermark\" data-original-src=\"v2-79abb33e1d182eb587e49eee5c5b0073\" data-watermark-src=\"v2-84e808b6e177651218f942ce64a895bd\" data-private-watermark-src=\"v2-f965cd6a77f9c34f30bb1ebf0bb2cee0\"></p>\n<p data-pid=\"WD3p14Q4\">       相对于燃油车来说，因驱动能源形式的变化，让汽车特性（尤其是——<i><b>买的起&amp;跑的远</b></i>）也发生了变化，但是汽车作为移动出行的本质并没有变化。所以，只有解决了这些问题才能更好的满足用户的基本需求。</p>\n<p data-pid=\"ZckTjoYh\">      以60kWh磷酸铁锂电池+200kW RWD电机为基础，对比2.0T+6AT变速箱（55L油箱）的汽车（其他系统一样）：</p>\n<p data-pid=\"BrQkJt9k\">      成本对比分析：纯电动汽车成本至少高于燃油车约<b><i>2.5万</i></b>；</p>\n<table data-draft-node=\"block\" data-draft-type=\"table\" data-size=\"normal\" data-row-style=\"normal\"><tbody>\n<tr>\n<th></th>\n<th>BEV</th>\n<th>ICE</th>\n</tr>\n<tr>\n<td>动力系统成本预估</td>\n<td>5万</td>\n<td>2.5万</td>\n</tr>\n<tr>\n<td>其他系统预估</td>\n<td>5万</td>\n<td>5万</td>\n</tr>\n</tbody></table>\n<p data-pid=\"ru_cV-Uz\">续航里程对比分析，燃油车满油的<b><i>680公里</i></b>续航远高于纯电的<b><i>500公里</i></b>。</p>\n<table data-draft-node=\"block\" data-draft-type=\"table\" data-size=\"normal\" data-row-style=\"normal\"><tbody>\n<tr>\n<th></th>\n<th>BEV</th>\n<th>ICE</th>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>分析基础</td>\n<td>按照12kWh/百公里电耗，60kWh全部为可用；</td>\n<td>55L油全部可用，油耗为8L/百公里</td>\n</tr>\n</tbody></table>\n<p data-pid=\"BpkteA9S\">    从上面的分析我们可以看到除了成本以为，更让用户担心的还是续航里程不足的问题，而且上面的分析基础中百公里电耗在12kWh绝对是行业顶尖水平。那如何才能解决用户的“里程焦虑”呢？答案肯定是更好的补能体验。</p>\n<p data-pid=\"53CJU_5T\"><b>那怎么样才能为用户提供更好的补能体验呢？</b></p>\n<h3>二、用户的行为习惯分析</h3>\n<p data-pid=\"32g47AuY\">       我觉得最好的补能体验应该是不让补能成为用户的思想负担的一种类似于吃饭睡觉一样的最自然的补能方式。如何才能做到这一步，我们还是要来看看用户的日常行为习惯。</p>\n<a href=\"https://www.zhihu.com/question/268391745/answer/2628534576\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-28ac1eaa3db4b9ca7d1a44ac26ebdc1a_qhd.jpg?source=b1748391\" data-image-width=\"1940\" data-image-height=\"1125\" class=\"internal\">在纯电动车电能补充方式上，换电模式和充电模式哪种更合理？</a><p data-pid=\"CwmFtTYb\">        我们尝试回想一下驾车出行一般不会突破：日常通勤、短途出行、长途出行三类。其中一般情况下一天24小时中日常通勤和短途出行开车的时间会在4个小时以内，而有差不多20个小时的时间车子是停在停车场上，场景比较少的长途出行可能会出现一天行车时间超过10个小时甚至更多。另外，日常通勤和短途出行一般情况下是以家为圆点到公司、商场、公园、景点等目的地的这样一个过程。</p>\n<p data-pid=\"OvTQzUyU\"><b>1、 针对日常通勤以及短途出行的场景：</b>由于每天大多数时间车子是停在停车场上且时间较久，如果家和目的地的停车区域有非常方便的补能方式就算是7kW的交流慢充的体验也比加油要更好（停车≈补能，免去加油站的过程）。</p>\n<p data-pid=\"e8ovZ6Ls\"><b>2、针对高速长途出行的场景：</b>由于时间对于用户来说更加重要，这种情况下最好的补能体验就是快。</p>\n<p data-pid=\"4Rln1wtB\"><b> 3、另外，特殊场景</b>：由于我们没办法做到生活一直都是非常规律，所以偶尔会发生家充和目的地充（慢充）无法覆盖到的场景（可能有10%亦或是20%的概率），这种时候也需要快速应急补能来解决。</p>\n<h3>三、换电应用场景分析 </h3>\n<p data-pid=\"V_p4etw1\">        其实针对用户补能需求，有的公司（如特斯拉、小鹏等）开发大功率超充+交流慢充技术来解决用户快速补能体验，有的公司（蔚来等）开发大功率快充+换电+小直流慢充技术来解决用户补能问题，有的公司（如理想、塞力斯）开发增程技术+交流慢充技术来解决用户的补能问题。</p>\n<p data-pid=\"5zC2PW6-\">        根据用户开车行为习惯分析，慢充基本能够覆盖90%的补能需求。针对特殊场景和长途出行的补能场景，由于对补能速度要求是没有上限的，<b>所以5分钟换电的补能方式要比大功率快充更容易满足用户的心理需求。</b></p>\n<p data-pid=\"mSC5TqMs\">        但是由于各个地方的基建条件不同以及大功率超充和换电技术对国家电网都有一定的影响，如何为用户提供更好的补能体验也需要结合地方的基建情况因地制宜的制订策略以尽可能满足用户的补能需求。</p>\n<p data-pid=\"gSBzEWwo\"><b>写在最后</b></p>\n<p data-pid=\"qxWhJODa\">虽然续航和补能是眼下好像是电动车发展的一个瓶颈，但是实际上补能基础设施一旦能够及时的跟上用户的补能需求，会加速用户对于纯电动汽车的接收度。而且补能基础设施一点完善，纯电动汽车对于one charge 续航的要求也会降低，还能促进电动车成本的降低，毕竟每天能够在家楼下充电的体验还是远好于去加油站加油的，不仅仅是价格上方便性更加重要。</p>\n<p data-pid=\"3jT06Po5\">      另外，一般纯电动汽车的成本做到足够有竞争力，增程汽车的竞争力就会大大削弱，毕竟一周充一次电就能满足日常通勤需求和每天都充电比体验还是好太多了。那些还在开发增程汽车的的老板们，纯电车型排上日程了没。</p>\n<p></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/jeff-89-20?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">杰夫戈</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/411769140/answer/2702210121?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">114 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/558347357?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">新能源汽车若实行“换电为主，充电为辅”的方式，如何实施将更能普及？</a><br><a href=\"http://www.zhihu.com/question/525506347?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">你对新能源车换电模式有何了解？其应用规模如何？</a><br>\n","link":"http://www.zhihu.com/question/411769140/answer/2702210121?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"为什么毫米波雷达无法识别静态物体？","date":"2022-10-14 07:07:18","description":"\n<p data-pid=\"EPd_AoBD\">一般来说，现在智能驾驶主要的中高速检测障碍物的手段就是<b>毫米波雷达+摄像头</b>的方案。</p>\n<p data-pid=\"-gxNSqiC\"><b>毫米波雷达的工作原理就是通过发射无线电信号（毫米波段，30-300GHZ）</b>，再将反射的零散信号收回，来探测感知周围物体，通过算法（阈值去掉噪声值留下信号能量峰值）得到反射点的信息，再得到汽车和其他物体之间的相对距离、相对速度、角度、运动方向等。</p>\n<p><img src=\"https://pica.zhimg.com/v2-8f82d8d1d3d9e149ad07806c382470b9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"712\" data-rawheight=\"382\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Vc8M3qyU\">由于毫米波雷达的穿透性较好，可以轻松穿透塑料，所以常安装在汽车的前保险杠处，塑料板的里面。</p>\n<p data-pid=\"D2T7eh16\"><b>毫米波的最大优点就是无视天气，穿透雾气、烟尘的能力强，受到环境因素影响较小，可以保障在日常情况下的使用。</b></p>\n<p data-pid=\"uCxcI8uG\">毫米波雷达早期为24GHZ，探测距离短，精度低，探测距离大概50米到100米，精度大概是40-70CM的分辨率。而最近两年推出的77GHZ的探测距离远，能达到200米以上，精度相对较高，大概是4-10CM分辨率。但因为成本较高，还是主要用在高端车型上，如果要达到更好的辅助驾驶级别，一般至少一个<a href=\"https://www.zhihu.com/search?q=77GHZ%E6%AF%AB%E7%B1%B3%E6%B3%A2%E9%9B%B7%E8%BE%BE&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2235733975%7D\" class=\"internal\">77GHZ毫米波雷达</a>（车头）搭配多个24GHZ毫米波雷达（车侧）来使用。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-5a62029f99053f37c63a6678a0d0fc7a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"662\" data-rawheight=\"289\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"bEtlt_aI\">毫米波雷达虽然成本较激光雷达低，工艺也成熟，元器件也小，但是它也有着<b>致命的缺点，那就是分辨率低，无法清晰辨别较小的物体，且对金属极为敏感。（一个不规则小块金属可能识别成一个大表面积的大块金属。）</b></p>\n<p data-pid=\"iga45nSj\">假设10CM一个反射点，即便是77GHZ的毫米波雷达动态扫描到车前方的人体侧面，很有可能也就得到十几个点到二十几个点，如果行人对于毫米波雷达还是侧面的运动体态，那可能接受过来的信号就十来个点，关键这些点旁边还有干扰物，比如行人从一棵树旁边经过，行人拖着个大箱子，要从这一堆稀疏的点上分析出这是个人还是个其他什么玩意，要是人的肉眼，肯定是看不出来的。</p>\n<p data-pid=\"UXTgyZVX\">如果要更清楚辨别较小物体，雷达的探测阈值需要设低，但毫米波雷达又对金属敏感度太高，调低阈值噪点增多，这样的结果就是会有越来越多“鬼影”的出现，会出现众多的虚报物体。你可以理解为一个超级近视的人取下了眼镜，想要分辨一个远处的闪闪发光的小物体，他越努力看，就越会看到四周到处都是晃动的影子和物体，而且这些看上去的物体很有可能比实际体积要大上许多倍。那么哪怕前面啥障碍物都没有，他都不一定敢往前走。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-e9b1834d87bdf402a4e7781ce832a75c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"667\" data-rawheight=\"588\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"awPw0Vte\">所以毫米波雷达分辨大型物体（前方车辆），抗天气干扰能力一流，但你指望这个精度几厘米级到几十厘米的雷达能够准确分清楚高速行驶车辆的前面是个啥玩意，肯定是不行的。因为它的一惊一乍，一路上动不动给你虚报，那么车都不用开了，就不停急刹着玩就好了。</p>\n<p data-pid=\"EARb8flY\">为了保障毫米波雷达的正常使用，<b>毫米波雷达就会对静态物体进行“杂波滤除”</b>（因为在马路上行驶，静态物体太多了，金属物也多，如交通标识，龙门架都会造成干扰）。如果不设定无视这些检测到的静态“干扰物”，那么在路上，车辆就会变得寸步难行，不停地报警和刹车将会变成常态。</p>\n<p data-pid=\"9Bta3ZWv\">鉴于毫米波雷达的特性，现在<b>AEB里面，越来越多的企业把毫米波雷达的权重给调低了</b>，要判断前方有没有障碍物，是个什么障碍物，还是得高清摄像头点头才行。</p>\n<p data-pid=\"61BVI1r-\"><b>汽车摄像头是最接近人类视觉的车辆感知外界的手段了。</b></p>\n<p data-pid=\"r402zFQ4\">车载摄像头一般都拥有较广的垂直视场角，较高的分辨率，还能提供颜色和图形的信息。这就可以达到驾驶辅助中的行人、自行车、机动车等的识别。也可以分辨出路标，如路上的地面标线，路侧的限速标识。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-09150238229cd1e4e2bd63f9747ee89c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"548\" data-rawheight=\"376\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"O9T7KjPN\">如果采用的车载立体摄像头（如双目摄像头），还能计算出汽车和其他物体的相对距离，相对角度。（所以说<a href=\"https://www.zhihu.com/search?q=%E9%A9%AC%E6%96%AF%E5%85%8B&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2235733975%7D\" class=\"internal\">马斯克</a>说可以自动驾驶不用毫米波雷达，可以全部用摄像头来代替。）</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ea0df3941cade6a2446844d6cbb89d49_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"209\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"qZJk1FBd\">但如果要<a href=\"https://www.zhihu.com/search?q=%E7%9B%B2%E7%82%B9%E6%A3%80%E6%B5%8B&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2235733975%7D\" class=\"internal\">盲点检测</a>，全景泊车、泊车辅助，就需要在车身上布置多个摄像头，达到车周的覆盖空间无死角。</p>\n<p data-pid=\"CNkRIFFd\"><b>车载摄像头一般都是由CMOS镜头，芯片，内存，外壳组成。</b>原理就是将拍摄到的图像转为<a href=\"https://www.zhihu.com/search?q=%E4%BA%8C%E7%BB%B4%E6%95%B0%E6%8D%AE&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2235733975%7D\" class=\"internal\">二维数据</a>，进行图像匹配识别，分辨出拍到的物体是行人、汽车、自行车、电动车、交通标识等。</p>\n<p data-pid=\"Hr75542g\">现在的摄像头排布，基本上都会采用前视，侧视，后视，内视的排布，包括广角镜头，长焦镜头，数量从5个到10个不等。</p>\n<p data-pid=\"fDRMBtb2\"><b>车载摄像头的优点就是分辨率高，采集信息丰富，最符合人类视觉的<a href=\"https://www.zhihu.com/search?q=%E8%AF%AD%E4%B9%89%E4%BF%A1%E6%81%AF&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2235733975%7D\" class=\"internal\">语义信息</a>，成本也低。</b></p>\n<p data-pid=\"FnBujJQ_\">但<b>缺点也很明显，因为是靠光的反射来进行拍摄，就会受光照影响较大</b>，黑夜里基本无法使用。且受环境天气影响较大，雨雪、大雾，灰尘、昆虫等都会影响到摄像头，导致它无法全天候全地形工作。另一个缺点，就是只能采集平面信息，无法采集深度信息，三维立体感不强，且拍照边缘容易有失真现象，即便后期进行算法修正，也有可能造成图形的误判。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-a90280573aa3f894a598495dcd945de8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"535\" data-rawheight=\"469\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"NjbfnPHx\">所以，毫米波雷达的分辨率低，车载摄像头又受到光照影响和无法构建3D图形，当高清摄像头认为前方静态事故中的变形车辆不属于车辆，而毫米波雷达又过滤掉静态金属物体。最后导致开启了智能驾驶的车完全不顾前方的事故车，速度完全不减地撞上去，也真的纯属正常。</p>\n<p><img src=\"https://pica.zhimg.com/v2-75859518546fb05d63e8631a562082aa_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"655\" data-rawheight=\"438\" data-watermark=\"watermark\" data-original-src=\"v2-75859518546fb05d63e8631a562082aa\" data-watermark-src=\"v2-8dcc9be0da972b78a85f626ec9eb1ddf\" data-private-watermark-src=\"v2-b27f45839b22b420a10ab2593eb5e298\"></p>\n<p data-pid=\"KInzpN3f\">所以，这就引申出来了另一个感知设备，一个分辨率高，不受光照影响且能构造清晰3D图形的探测器，那就是现在比较热门的激光雷达。</p>\n<p data-pid=\"eFRf0I-h\">激光雷达鉴于篇幅，就后面再聊了。</p>\n<p data-pid=\"2YqJ0x1W\">（图片来源网络，侵删！）</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/308426613/answer/2702035684?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">54 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/350399729?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">毫米波雷达怎么区分人和运动的物体，怎样过滤杂波？</a><br><a href=\"http://www.zhihu.com/question/418565651?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">毫米波雷达对于静止目标的检测效果很不好吗？</a><br>\n","link":"http://www.zhihu.com/question/308426613/answer/2702035684?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何加快汽车与互联网、通信、大数据、人工智能、可再生能源等技术的跨界融合？需要解决哪些阻碍？","date":"2022-10-14 07:07:00","description":"\n<p data-pid=\"OfJLETD2\">这个题目涉及到的内容太广袤了，随便哪一个下面都是一个繁杂的，需要大量资金和科研的重要领域，其中包括的难点不知凡几。</p>\n<p data-pid=\"q6WNkKyB\">抛砖引玉，浅聊下智能汽车和大数据/网络之间的一些关联吧。</p>\n<p data-pid=\"5VgiBkeT\">一架可以坐500-600人的双层<b>A380空中客车</b>以自动飞行模式从伦敦飞往纽约，全程只需要<b>2.5MB的数据</b>要处理。而一辆<b>L4级别</b>的自动驾驶车辆，仅处理每天的日常任务，可能就需要处理<b>45TB的数据，</b>是空客380的不知道多少倍。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-ee9755296d022d0b43f83880fae3ee05_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1100\" data-rawheight=\"558\" data-watermark=\"watermark\" data-original-src=\"v2-ee9755296d022d0b43f83880fae3ee05\" data-watermark-src=\"v2-6bdf072e53fd9d0f6ddeca5cca4cf639\" data-private-watermark-src=\"v2-62915adc0466db89d7b98ffb37c2cfbc\"></p>\n<p data-pid=\"QmeB4Xxl\">人在驾驶车辆，一般做出决策是需要先<b>感知</b>，再<b>思考</b>，再<b>决定行动</b>的一个过程。</p>\n<p data-pid=\"w6pxWmG0\">而自动驾驶也是一样，一辆车通过多个摄像头（含红外线），毫米波雷达，激光雷达，超声波传感器，<a href=\"https://www.zhihu.com/search?q=%E5%A3%B0%E9%9F%B3%E4%BC%A0%E6%84%9F%E5%99%A8&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2230352110%7D\" class=\"internal\">声音传感器</a>，GPS接受数据，进行<a href=\"https://www.zhihu.com/search?q=%E6%84%9F%E7%9F%A5%E6%8A%80%E6%9C%AF&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2230352110%7D\" class=\"internal\">感知技术</a>的处理，全方位的传感器融合探测周围的环境，同时通过V2X（车辆对周围交通系统进行通讯）、<a href=\"https://www.zhihu.com/search?q=%E9%AB%98%E7%B2%BE%E5%9C%B0%E5%9B%BE&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2230352110%7D\" class=\"internal\">高精地图</a>了解到更广阔的外界环境，再感知之后进行一系列的思考，进行路径规划，交通标志、信号灯识别，紧急车辆识别等，最后决定行动，如等待，加速，转弯，避障，避撞，穿越众多移动物体等。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-5e5b0f8f630b6d6a99ecbd45b6fecfa6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1200\" data-rawheight=\"800\" data-watermark=\"watermark\" data-original-src=\"v2-5e5b0f8f630b6d6a99ecbd45b6fecfa6\" data-watermark-src=\"v2-f08c0b2a04d996069059a79ca125d0de\" data-private-watermark-src=\"v2-2a3f4af5c2cbec713c4e2c5683528a7b\"></p>\n<p data-pid=\"ImkNI9hk\">这整个过程中，从各个<b>感知</b>设备中接受的图像、视频、点云，整个数据量可谓是海量，即便经过感知技术的算法进行处理后，剩余的数据量依旧是巨大无比，而<b>思考并学习</b>所需要的计算量也是可想而知。</p>\n<p data-pid=\"BMMLOevc\"><b>如果存储和计算数据全部由车辆本身承担，就意味着必须要有巨大的成本投入。</b></p>\n<p data-pid=\"_PSdvA9N\"><b>比如<a href=\"https://www.zhihu.com/search?q=%E6%84%9F%E7%9F%A5%E6%95%B0%E6%8D%AE&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2230352110%7D\" class=\"internal\">感知数据</a>的存储</b>，即便是10TB级别的小型存储器也撑不了多久，总不能前一个小时的数据就被后面的感知数据给覆盖了，永远只顾当下吧。而现在驾驶车辆的<a href=\"https://www.zhihu.com/search?q=%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%B3%BB%E7%BB%9F&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2230352110%7D\" class=\"internal\">人工智能系统</a>能够记住，并学习以前的经验，是需要这些丰富的数据留存下来的。只有在大量数据的培育下，才能让人工智能进行深度学习，有效提高AI智能驾驶的能力。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-d8d27905182cfaf42185141c8456092f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1237\" data-rawheight=\"780\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"JUqiMFjX\"><b>比如感知数据的处理</b>，思考到做出判断，必须以毫秒来算。因为按照高速120公里/小时的速度，就是33米每秒。则10MS的时间，车辆移动距离就是33CM。如果单凭<a href=\"https://www.zhihu.com/search?q=%E8%BD%A6%E8%BD%BD%E5%A4%84%E7%90%86%E5%99%A8&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2230352110%7D\" class=\"internal\">车载处理器</a>，毫秒级快速的反馈，从接受数据，到思考，再到做出决策操控车辆，必须要求该处理器的处理大数据的能力非常优异才行。</p>\n<p data-pid=\"LeJkF3UT\">我们现在用的人工智能的学习，基本是采用的自下而上的方法，使用<b>深度神经网络（DNN）或<a href=\"https://www.zhihu.com/search?q=%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2230352110%7D\" class=\"internal\">卷积神经网络</a>（CNN）</b>进行深度学习。（深度学习：一类机器学习算法，使用多层从原始输入中逐步提取更高层次的特征。）</p>\n<p data-pid=\"rRUwjccY\">神经网络是一种模拟大脑认知的机理，解决各种机器学习的应用任务，从海量的数据中进行深度学习，需要的<b>算力十分惊人</b>。所以这一技术一直到2006年之后GPU性能飞速提升，才有条件被推广和应用。</p>\n<p data-pid=\"9tFcch-f\"><b>比如芯片的升级迭代</b>，汽车的使用寿命长达数十年，而车载的处理芯片是不可能伴随车辆终身的，必须要定期更换速度更快，更稳定的芯片，才能保障车辆的自动驾驶功能完好。</p>\n<p data-pid=\"skEVaQJs\">除了涉及到人和外界交互的智能驾驶外，还有人和汽车交互的智能座舱，一样是会产生海量数据和需要高算力的存在。</p>\n<p data-pid=\"X28BJOdM\"><b>综合来看</b>，如果高存储和计算力惊人的芯片都装配在车辆上，且要按期更换更好的芯片（因为车辆的使用寿命一般都是10-15年），那么给车辆的成本压力是非常巨大的。而且对于车辆来说，装载一个数百瓦乃至上千瓦功率的“<b>小超算”</b>或者占据大体积的<b>“大硬盘”</b>，也会给车辆带来续航减低、空间减小的实际问题，更不要说一边思考做出决策，一边还要深度学习，需要的算力和存储就对汽车更苛刻了。</p>\n<p data-pid=\"iCwtuldA\">所以，基本智能汽车未来的路都是走的车云互联，只有高速的网络互联才能保障大数据、高算力充分发挥作用，并有力支撑起未来智能汽车的安全和高效。</p>\n<p data-pid=\"dsXx_HIc\">说到网络互联，就不得不说5G的出现和发展，其高带宽、低延时、强可靠性真正使得大数据处理和云计算能应用在汽车的自动驾驶上面来。</p>\n<p data-pid=\"usa6Fx_l\">而这方面，我国是有着极大优势的，目前国内5G的建设速度和覆盖率是全球第一位。我国现在是全球4G覆盖道路交通最全的国家，基本达到了100%，而英国 4G覆盖率，在A级、B级公路上的覆盖率也才54%，而这在欧美国家中，还算比例高的。</p>\n<p data-pid=\"xGp3cYvJ\"><b>为什么5G可以使用<a href=\"https://www.zhihu.com/search?q=%E4%BA%91%E7%AB%AF%E6%8A%80%E6%9C%AF&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2230352110%7D\" class=\"internal\">云端技术</a>达到车辆自动驾驶。</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-b1a2eabde48ece53ee0ad12f01bc8f98_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"427\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"DorJRSha\"><b>一个是高速</b>，可以达到1000MB/S，一个小时传递的数据可以达到3.5TB。甚至在必要的时候，可以提升到这个数字的<a href=\"https://www.zhihu.com/search?q=%E5%8D%81%E5%80%8D%E4%BC%A0%E8%BE%93%E9%80%9F%E5%BA%A6&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2230352110%7D\" class=\"internal\">十倍传输速度</a>（理论值）。</p>\n<p data-pid=\"_FQKD_Qu\"><b>一个是低延迟</b>，3G/4G的延迟是数十毫秒来计算的，4G延时是40ms-100ms，而120公里/小时的车速，100毫秒的都足够一辆高速上行驶的汽车开出三米多了。而5G则远远低于4G延时，甚至可以达到0.1毫秒延迟的级别。（低延迟也是远程手术得以开展的重要原因。）</p>\n<p data-pid=\"bX8Sb8_g\">上述两个特性，可以使得车辆的感知数据无缝链接到云端，并由云端的强大处理器来进行保存和运算（学习），并以超低延迟把思考而来的决策传递到车端，使得云端操控汽车进行自动驾驶成为了可能。</p>\n<p data-pid=\"vuH5ovJ1\">此外，<b>5G还拥有更多的频谱和更高的频率</b>，在30GHZ和300GHZ之间的频带，意味着5G网络可以同时处理许多高需求的应用，同时容纳更多的设备（车辆）。</p>\n<p data-pid=\"HnOmaBkM\">所以，利用大数据的云端传输和后台计算，再发送给行驶中的汽车，在5G进行覆盖后，是完全可行的一条道路，可以有效解决自动驾驶的硬件成本过高的问题。</p>\n<p data-pid=\"o15VGm_D\">目前，汽车的智能化发展越来越快，云计算也被纳入了智能驾驶的体系中，基本每家车企都会和云计算企业进行合作。</p>\n<p data-pid=\"y9xBkBX0\">比如通用、大众、丰田、本田、捷豹路虎和<a href=\"https://www.zhihu.com/search?q=%E5%BE%AE%E8%BD%AF%E4%BA%91&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2230352110%7D\" class=\"internal\">微软云</a>进行合作；国内的上汽乘用车和一汽，还有小鹏是和阿里云合作；广汽、长安、长城、蔚来和腾讯云合作，比亚迪、<a href=\"https://www.zhihu.com/search?q=%E5%A8%81%E9%A9%AC&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2230352110%7D\" class=\"internal\">威马</a>和百度云合作。东风本田、广汽三菱、江淮和<a href=\"https://www.zhihu.com/search?q=%E5%8D%8E%E4%B8%BA%E4%BA%91&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2230352110%7D\" class=\"internal\">华为云</a>合作。</p>\n<p data-pid=\"XqpzkgWc\"><b>国内的自动驾驶云平台，也基本是四分天下，“BATH”,百度云、阿里云、腾讯云、华为云。</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-de93b627f8c1c0c1bf239d44ea61ee0e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1071\" data-rawheight=\"495\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"QZSV8oZN\">以后自动驾驶的未来，随着网络的发展，5G的逐渐成熟，2030年的<b>6G</b>进入，<b>搭建的地面无线+卫星全连接覆盖网络，让世界每一处都能在高速信号的覆盖下</b>，彻底让车端只用来感知，不需要繁杂的软件运算和搭载昂贵的硬件，云计算成为主流，在降低智能驾驶车辆成本的同时，大幅提高智能驾驶的安全性和智能座舱的功能性。</p>\n<p data-pid=\"jgVARgXB\">（图片来源网络，侵删！）</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/435131276/answer/2699531032?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">8 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/490442974?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">技术跨界融合时代，人工智能、物联网、云计算等跨界技术企业如何与汽车企业技术融合，共建新型产业生态圈？</a><br><a href=\"http://www.zhihu.com/question/28868232?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">目前全球范围内，属于“汽车+互联网”这种交叉产业的研究方向和相关产品都是什么？</a><br>\n","link":"http://www.zhihu.com/question/435131276/answer/2699531032?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"车联网功能给我们的用车生活带来了哪些便利？","date":"2022-10-14 07:06:51","description":"\n<p data-pid=\"j6W_hUF1\">最近一个热火如荼的概念就是“互联网+”。不知道什么时候汽车突然就和互联网绑在了一起。车联网的概念也逐渐引起了行业的注意。各个互联网公司纷纷开始和车企进行合作，争抢汽车这个互联网的入口。说到车联网功能给生活带来的便利，我们得从车辆网的前世今生聊起，再谈谈它给车主带来哪些实用的用车便利条件或者场景。</p>\n<p data-pid=\"ttNX7nRH\"><b><i>车联网的历史-无线电时代</i></b></p>\n<p data-pid=\"Wai0ilAf\">你知道实际上目前很多车型的导航系统都配备了TMC功能，从而实时接收交通路况吗？TMC可以算作最早的车联网功能。 </p>\n<p><img src=\"https://pic1.zhimg.com/v2-cde7a4070a0d9fd3afdc610e037e5dd7_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"903\" data-rawheight=\"603\" data-watermark=\"watermark\" data-original-src=\"v2-cde7a4070a0d9fd3afdc610e037e5dd7\" data-watermark-src=\"v2-0da9316166a2c68f2eb7eb3bf95e0cfe\" data-private-watermark-src=\"v2-4ab86d764e8ba2b20e79bf3784614cd0\"></p>\n<p data-pid=\"JMgk0OBQ\">↑TMC实时交通信息</p>\n<p data-pid=\"Pvydk5yy\">TMC的全称是实时交通信息（Traffic Message Channel）。最早在欧洲出现并得到推广。是一种GPS导航的辅助功能。TMC的数字信号由FM无线调频系统（也就是我们日常使用的收音机频道），通过集成在导航系统中的车载无线接收终端接收并解码。从而实时的得到区域内的交通情况，帮助驾驶者选择最合理的行驶路径。 </p>\n<p><img src=\"https://pic1.zhimg.com/v2-5c5eee2383b85936ff3df34020029d83_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"464\" data-watermark=\"watermark\" data-original-src=\"v2-5c5eee2383b85936ff3df34020029d83\" data-watermark-src=\"v2-40f7f0781fa2db9f32a6a66a4ff5e09e\" data-private-watermark-src=\"v2-dd7d1e634bedfe3e992b12e957995f85\"></p>\n<p data-pid=\"G4bFj4Y4\">↑大众车型仪表盘的TMC字样</p>\n<p data-pid=\"Em4ilvPN\">那么先让我们看看哪些车型配备了TMC功能的导航系统。如果你平常开的车是大众集团的，而且导航系统为经典的RNS315系列。那么你可以留意一下你的仪表盘是否能够看到TMC字样。如果能找到那么恭喜你，你的导航系统支持TMC实时交通信息接收功能。</p>\n<p data-pid=\"gva86elq\"><b><i>汽车互联技术V2X时代</i></b> </p>\n<p><img src=\"https://pic1.zhimg.com/v2-019a19264ea47fb444898327fcf74dc2_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"850\" data-rawheight=\"423\" data-watermark=\"watermark\" data-original-src=\"v2-019a19264ea47fb444898327fcf74dc2\" data-watermark-src=\"v2-4aea63bd967eab3ee5d5670effd63e72\" data-private-watermark-src=\"v2-fe3c3820f0219a9d037bd718fdb0ea51\"></p>\n<p data-pid=\"HdEc3Fkp\">↑汽车互联技术V2X</p>\n<p data-pid=\"Qf34JM9i\">随着自动驾驶技术的机器人技术和人工智能技术快速发展，车辆可以通过各种传感器比如激光雷达感知周围环境并且通过强大的计算能力做出决策。但它需要非常重要的一环，那就是通过汽车互联技术V2X与外界环境进行交互。</p>\n<p data-pid=\"8EoNQaBE\"><b><i>汽车互联V2X具体指什么</i></b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-19f046e4136967a9ae41a74b6f7f648b_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"668\" data-rawheight=\"373\" data-watermark=\"watermark\" data-original-src=\"v2-19f046e4136967a9ae41a74b6f7f648b\" data-watermark-src=\"v2-71a38db51949b3a7ca7e634eb64db49c\" data-private-watermark-src=\"v2-5456bfe2b2aa2e100f7b102e32d7fd43\"></p>\n<p data-pid=\"g7zcBGwD\">↑汽车互联V2X的含义</p>\n<p data-pid=\"Dyb-XTMm\">其实按照行业标准对V2X有明确的定义。它具体由V2I、V2V、V2P和V2N组成。</p>\n<p data-pid=\"pnufGA9x\">V2I与路面设施的通讯。比如车辆与红绿灯或者十字路口标识牌见的交互。</p>\n<p data-pid=\"pJBzQYFk\">V2V车辆与车辆间的通讯。比如十字路口交汇车辆或者前后车辆间的交互。</p>\n<p data-pid=\"0SbkEpAI\">V2P车辆与行人间的通讯。比如与过马路的行人或者周围的骑车人的交互。</p>\n<p data-pid=\"Bbn5YC6s\">V2N车辆与云端服务器通讯。比如导航路径规划或者高精度地图的交互。</p>\n<p data-pid=\"ZmsSDd0v\"><b><i>汽车互联除了5G还有其他技术吗</i></b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-e065b98e2af1860aa83c8204f06ec0dd_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"453\" data-watermark=\"watermark\" data-original-src=\"v2-e065b98e2af1860aa83c8204f06ec0dd\" data-watermark-src=\"v2-a6e5d61baf793e02944ca841c6978156\" data-private-watermark-src=\"v2-85a12c53cfbcf5c5b35f2e1583264d57\"></p>\n<p data-pid=\"TJD-Tj68\">↑DSRC Dedicated Short-Range Communications IEEE802.11p (5.9GHz)</p>\n<p data-pid=\"5XEbLY6F\">2015年之前一直存在着DSRC专用近距通讯技术IEEE802.11p与4G LTE的技术之争。DSRC一直以200m内点对点通讯1秒的通讯实时性，优于4G LTE 6~7秒的通讯延迟。由于DSRC基于WIFI技术相对成熟且不依赖基站信号，因此早期的汽车互联V2X方案中近距离通讯主流由DSRC实现。而远距离通讯由4G LTE实现。但是5G通讯技术的出现打破了这一局面，其中基于5G的C-V2X成为了至关重要的一环。</p>\n<p data-pid=\"pu1Xz2PA\"><b><i>什么是5G C-V2X技术</i></b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-3bd06f779a7d41e83ba48ecbcf1a061f_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"848\" data-rawheight=\"517\" data-watermark=\"watermark\" data-original-src=\"v2-3bd06f779a7d41e83ba48ecbcf1a061f\" data-watermark-src=\"v2-d1286da32106c5089dba4a797c0354d1\" data-private-watermark-src=\"v2-5c48492da3402cf741860e7946b75937\"></p>\n<p data-pid=\"lpLIepQd\">↑华为 5G C-V2X 技术方案</p>\n<p data-pid=\"7C70poRp\">5G通讯技术有着通讯速度快延时低的特点。而基于5G通讯技术推出的C-V2X标准包括了依托基站的远距离通讯Uu协议和近距离点对点通讯的PC5协议。很好地解决了汽车互联中远距离通讯和近距离通讯的需求，将其合二为一。它具有不依托基站进行安全低延时通讯的能力，也可托基站进行远距离大数据量传输。它既能够基于车车通讯进行同步，又能够在GPS信号弱时基于基站辅助定位。</p>\n<p data-pid=\"N5ogH3py\"><b><i>5G 技术在车路协同中的典型应用</i></b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-0c4dcf355d0cf8078a3d47066a6ec033_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"338\" data-watermark=\"watermark\" data-original-src=\"v2-0c4dcf355d0cf8078a3d47066a6ec033\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Hn0bGAZC\">↑5G信号指引红绿灯通行速度</p>\n<p data-pid=\"vETSqcgU\">通过5G通讯技术，车辆可以与路面设施进行V2I通讯。比如车辆与红绿灯或者十字路口标识牌间的交互。通过5G信号接受途径路段一系列红绿灯设施的指令，指引红绿灯通行速度。从而使绿灯车流更顺畅，合理控制行驶速度优化能耗。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-21c7e748a41d0a7cb57eea288100ffb6_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"480\" data-rawheight=\"270\" data-watermark=\"watermark\" data-original-src=\"v2-21c7e748a41d0a7cb57eea288100ffb6\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"I1pZYV7G\">↑5G信号指引车辆让行</p>\n<p data-pid=\"zzQCYpD5\">通过5G通讯技术，车辆可以与车辆间进行V2V通讯。比如十字路口交汇车辆或者前后车辆间的交互。通过5G信号接受交汇车辆的车速和位置信息。通过低延迟的车车通讯，从而合理让行降低事故概率。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-53aabef3988d06f4ebb368a40d653e4f_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"405\" data-watermark=\"watermark\" data-original-src=\"v2-53aabef3988d06f4ebb368a40d653e4f\" data-watermark-src=\"v2-8a13e060a93cc695dc12c251bfe8d54c\" data-private-watermark-src=\"v2-f401773528f89047353bd4b78a4de0b5\"></p>\n<p data-pid=\"nElXKAPc\">↑5G信号指引车辆道路规划</p>\n<p data-pid=\"DocCUXqv\">通过5G通讯技术，车辆可以与云端服务器进行V2N通讯。比如导航路径规划或者高精度地图的交互。通过5G信号接受前方事故路况信息。从而合理规划行驶路线，避开拥堵。自动驾驶技术越来越依重高精度地图。而高精度地图正成为汽车互联中大数据量交互用的一种典型应用。另外依托自动驾驶或驾驶辅助摄像头传感器将各个路段的车道线和指示信号灯或路牌图像信息通过移动网络上传到云进行统一计算。这样具备这种技术的自动驾驶汽车就可以基于云数据快速学习多变复杂的道路，最终实现良好的自动驾驶体验。</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/labixiaoxing?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">辣笔小星</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/555877608/answer/2698840274?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">18 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/413687740?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">你家的车用上“车联网”了吗？跟你期待的车联网还差多远？</a><br><a href=\"http://www.zhihu.com/question/268120887?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">你家的车用上“车联网”了吗？你期待的“车联网”是什么样的？</a><br>\n","link":"http://www.zhihu.com/question/555877608/answer/2698840274?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"自动驾驶／智能驾驶已经成为了时下最热门的话题之一，那么实现这个技术的决定性因素有哪些呢？","date":"2022-10-14 07:06:37","description":"\n<p data-pid=\"QNt_Zbdp\">自动驾驶的三个核心模块：<b>感知———思考———行动</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-9e51448d6ef477fc94ab425fc9f2ad03_720w.webp?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"836\" data-rawheight=\"611\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h3><b>感知：</b></h3>\n<p data-pid=\"PprAfilU\">利用各类传感器，如摄像头、雷达、超声波来感知和认识周围的环境。通常需要360°的全环境视图和<a href=\"https://www.zhihu.com/search?q=%E9%AB%98%E7%B2%BE%E5%9C%B0%E5%9B%BE&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2219920613%7D\" class=\"internal\">高精地图</a>配合GPS等来进行精准的定位，并能够检测驾驶员能否有能力控制车辆。</p>\n<h3><b>思考:</b></h3>\n<p data-pid=\"V_90XRwR\">通过车辆计算机的软件和智能算法执行，处理和解释感知得到的数据。整个过程必须要在非常短的时间内完成，因为如果<a href=\"https://www.zhihu.com/search?q=%E6%97%B6%E9%80%9F120%E5%85%AC%E9%87%8C%2F%E5%B0%8F%E6%97%B6&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2219920613%7D\" class=\"internal\">时速120公里/小时</a>，一秒的时间就足够车辆窜三十几米远了。所以，得要求车辆电脑在毫秒级别就要思考完毕，并得出可靠的预测，规划下一步合适的驾驶策略。</p>\n<h3><b>行动：</b></h3>\n<p data-pid=\"dTNcIRi2\">考虑到周围环境的所有感知数据和定位，能独立、快速、安全、精确地使用动力系统、<a href=\"https://www.zhihu.com/search?q=%E8%BD%AC%E5%90%91%E7%B3%BB%E7%BB%9F&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2219920613%7D\" class=\"internal\">转向系统</a>和制动系统来移动车辆，使得思考的驾驶策略付诸实践。</p>\n<p data-pid=\"qqFYxACV\">就说下感知里面的<b>高精地图</b>吧，因为无论是我试驾小鹏还是理想，智能驾驶（自动变道等）都离不开高精地图的覆盖。</p>\n<p data-pid=\"R9wtlQBR\">汽车能够自动驾驶，不仅仅在于现在看到了什么，更重要的是要能提前知道什么。</p>\n<p data-pid=\"4khbfVy_\"><b>高精地图会存储交通场景中的各种交通要素，包括传统地图的道路网数据，车道网络数据、车道线和交通标志等数据。</b></p>\n<p data-pid=\"-MTYYDCL\">和传统人类使用的普通地图导航不同，对于自动驾驶软件来说，先天缺乏视觉识别和逻辑分析的能力，但借助高精地图能够扩展车辆的静态环境感知能力和全局视野（车载传感器之外的道路设施）。</p>\n<p data-pid=\"Tz8r2b0N\">高分辨率的3D地图是车辆导航和安全的基本要素，现在的<b>高精地图精确到了分米，而未来的高精地图必须要达到厘米级别，这样有助于车辆精准定位，避让碰撞、检测障碍物，引导车辆的下一步驾驶动作。</b></p>\n<p data-pid=\"262XuW9r\">举个例子，通过复杂红绿灯的时候，车辆利用计算机视觉进行红绿灯检测时，在图形中搜索，思考，反馈到决策上面。但是如果是下述图片那种红绿灯，车载电脑是不能知道所在确定位置的红绿灯是在哪个方位的，是需要算法去判断的，而且很容易判断错误。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-88a29dcbb04928685afae7ad481b03d0_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"400\" data-watermark=\"watermark\" data-original-src=\"v2-88a29dcbb04928685afae7ad481b03d0\" data-watermark-src=\"v2-ad7326d166d4a7d75f2b72217d7f08d9\" data-private-watermark-src=\"v2-0aa691c06eba3daa0dc4fa5b201ed83c\"></p>\n<p data-pid=\"tv7hY7OZ\">但是如果有了高精度地图信息，车载电脑可以通过高精度的立体定位（用GNSS/IMU/Lidar来确定自身精确位置，对应红绿灯的精准位置坐标）和高精度地图进行对比。对比之后能很快确定自己所处的道路需要看哪个红绿灯，这样就可以避免出错，还能大幅降低算法的复杂度，减少计算负荷。</p>\n<p data-pid=\"JLAF5E6k\">另外，高精地图也会告诉车辆该处有红绿灯，这样即便有大车遮挡，树木遮挡红绿灯，车载电脑也不会忽略红绿灯，而是会反复确定红绿灯的位置和状态，从而提高驾驶的安全性。</p>\n<p data-pid=\"qXTwf1uU\">除了交通标识的精准定位，高精地图还能告诉车辆前方的坡度，弯度，地面是否有破损、凸起，护栏的位置、马路牙子的高度等。这种固定的路况信息，能极大提高自动驾驶对路况的辨别速度和能力。要知道，有些特殊的固定路况，比如地面有个大的凹坑，还有积水遮挡，光靠车辆本身的感知设备，如激光雷达、毫米波雷达，摄像头是极难在瞬间感知准确并绕开的。</p>\n<p data-pid=\"m9JlhEVv\">所以<b>高精地图不仅可以用作定位，关键它大幅减少了车辆软件识别环境所需的工作量</b>，通过将实际环境与地图中的环境相比较（高精地图只提供固定的道路细节，如交通标志、信号灯、防护栏，周边树木，道路边缘类型），车载电脑就可以将更多的注意力（算力）集中在那些地图里面没有的物体，比如移动的人、车、动物等，能极大提高软件识别周围环境的能力。</p>\n<p data-pid=\"tn0CzGI8\">高精地图在自动驾驶中的应用如下：</p>\n<ul>\n<li data-pid=\"5It-yxdq\">\n<b>地图精确计算匹配，</b>商业GNSS精度仅有5米，利用高精地图、传感器协作，可以让车辆定位精确到厘米级别。</li>\n<li data-pid=\"Mwm37dQl\">\n<b>实时路径规划导航，</b>高精地图在云计算的辅助下，可以给出软件能够理解的抽象信息地图，帮助自动驾驶确定路径规划。</li>\n<li data-pid=\"zUVFK3xf\">\n<b>辅助<a href=\"https://www.zhihu.com/search?q=%E7%8E%AF%E5%A2%83%E6%84%9F%E7%9F%A5&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2266635607%7D\" class=\"internal\">环境感知</a>，</b>对传感器无法探测的部分进行补充，如恶劣天气影响下，依旧可以知道前方道路的具体状况。在某种程度上，高精地图也可以当做传感器，一切和高精地图不一致的物体均有可能是车辆、行人、障碍物等。</li>\n<li data-pid=\"NkAN37XN\">\n<b>驾驶决策辅助，</b>高精地图会覆盖道路细节，包括限速、限高等交通标识，包括防护栏、下水道口等基础设施。这些对车辆的行驶，如提前变道，障碍物避让，车辆提前减速都有着辅助作用。</li>\n<li data-pid=\"1qVCEhdL\">\n<b>智能控制辅助，</b>有效帮助自动驾驶进行精准预判，提前选择合适驾驶策略，能大幅减少计算压力和控制系统的成本。</li>\n</ul>\n<p data-pid=\"gvqAlB_b\">现在国际上采集自动驾驶高精地图数据的方式通常有两种。</p>\n<p data-pid=\"9DN1E4k0\"><b>一种就是通过配置专业感知设备的专用车辆。</b>用专业的传感器，如高清摄像头、激光雷达、导航定位系统进行道路测绘。收集位置、原始图像，激光点云和其他数据，然后在数据中心进行传输、存储和处理。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d9f8743cfad6edbab943a14dce3e3971_720w.webp?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"426\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"VjRMwbnZ\"><b>一种就是通过高分辨率的卫星地图+普通消费级摄像头。</b></p>\n<p data-pid=\"HEKHlF23\">丰田研究院高级开发公司（TRIAD），丰田自动驾驶软件开发公司Maxar技术，IT服务提供商NTT数据集团，三家公司正在使用高分辨率卫星图像进行<a href=\"https://www.zhihu.com/search?q=%E6%97%A0%E4%BA%BA%E9%A9%BE%E9%A9%B6&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2266635607%7D\" class=\"internal\">无人驾驶</a>高分辨率地图的概念验证。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-c51b4a8ff7cad43a2cfecc8a738345bb_720w.webp?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"136\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"KgbFYqLU\">基于云地理空间大数据平台（GBDX），Maxar把光学卫星图像库中的图像输入到NTT数据集团的专业算法中，人工智能将去掉图像中的干扰物（汽车、人），提取图像中的道路标记，生成详细道路网所需要的信息。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-5fe8321e93a40d7474f1d666a1c2d0e9_720w.webp?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"585\" data-rawheight=\"297\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"vdSxnqo7\">该方法成功运用在了东京和多个城市的区域内，提供了相对精度为25厘米-40厘米的高精地图。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-f969b60b89d7734b33f281c4a3603b3d_720w.webp?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"582\" data-rawheight=\"297\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"2-kge55C\">这种运用卫星绘制高精地图的的方式，成功运用在了丰田的测试车上。</p>\n<p data-pid=\"pX9LNmev\">TRIAD和HERE,TomTom,Carmera均有合作，来实施基于卫星地图、摄像头、定位的高精地图功能，使得自动驾驶汽车可以使用快速更新的高精地图。</p>\n<p data-pid=\"xaEAsmtU\">未来随着航空的快速发展，近地卫星的频繁上天，通过这种卫星拍摄精度到厘米级别的高清图片，利用软件算法来生成自动驾驶的高精地图，将会越来越成为一种实用化的趋势。</p>\n<p data-pid=\"zsOU1JDM\">因为第一种方法需要专业车辆配置专业感知设备，即便道路上的交通标识有了变化，比如换了红绿灯的位置，行道线有所更改，第一种采集方式是无法及时更新高精度地图的。</p>\n<p data-pid=\"HuLikUIo\">无论是国内还是国外的智能驾驶发展，高精地图基本都是绕不开的一个领域，而国家对于高精地图的绘制监管也是非常的严格。这里也说下，因为某些众所周知的特殊原因，滴滴出行在2021年没能获得国家的审批通过，无法进行对国内道路进行高精采集、测绘以及绘制高精地图，这也基本宣告了滴滴出行自动驾驶的版块出现了重大缺失，基本无缘自动驾驶企业的前列。要知道滴滴早在2016年就创建了自动驾驶的研发团队，和多家车企进行深度合作，一度官宣要做国内自动驾驶领域的第一，国际智能交通的引导者……</p>\n<p data-pid=\"t3jw_9pt\">国内的新势力理想和小鹏基本在2021年开始了布局高精地图。理想汽车直接和高德地图合作，使用其高精地图导航。小鹏汽车花2.5亿收购了智途科技（高精地图），获得了甲级地图测绘资质，开发自己的NGP。蔚来汽车则晚一步，在2022年2月，蔚来汽车和腾讯在高精地图合作，研发自动驾驶/智能驾驶。</p>\n<p><br></p>\n<p><br></p>\n<p data-pid=\"-fpoEoQm\">（图片来源网络，侵删！）</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/47741800/answer/2698756795?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">48 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/546355493?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么说自动驾驶的未来市场十分广阔？</a><br><a href=\"http://www.zhihu.com/question/546064885?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何正确看待自动驾驶的产业链？</a><br>\n","link":"http://www.zhihu.com/question/47741800/answer/2698756795?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"日本无线充电技术已进行测试，该技术有望解除电动汽车里程问题吗？","date":"2022-10-14 07:06:29","description":"\n<p data-pid=\"4PxHSc2P\">这就是移动式补能啊。</p>\n<p data-pid=\"_odW3luN\">比如空中加油。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-fdfd1311b5b677d32b6627adbdcb60c5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3000\" data-rawheight=\"1983\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"VlsTqRdZ\">飞机没油了，不要紧，也不用停，一架载满油的飞机跟着需要补油的飞机一起飞。两架飞机保持同步飞行，中间用加油管进行链接。一架<a href=\"https://www.zhihu.com/search?q=%E8%BD%BB%E5%9E%8B%E6%88%98%E6%96%97%E6%9C%BA&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2477053279%7D\" class=\"internal\">轻型战斗机</a>整个加油过程只需要三到五分钟，<a href=\"https://www.zhihu.com/search?q=%E9%87%8D%E5%9E%8B%E6%88%98%E6%96%97%E6%9C%BA&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2477053279%7D\" class=\"internal\">重型战斗机</a>也只需要加十到十五分钟。</p>\n<p data-pid=\"ySS0K5ij\">那么这种方式可以用在电车补能上吗？</p>\n<p data-pid=\"2LeyVK-j\">还真的有类似的充电方式，那就是充电车来进行补电。</p>\n<p data-pid=\"rcGUETHx\">比如你的车没电了抛锚了，可以叫充电车开过来给你补电，而不用推车到最近的充电桩。</p>\n<p data-pid=\"YrDrDUQb\">这个服务比较知名的就是蔚来在2019年1月31日推出的对外移动加电服务。服务费用为380元，充电车支持所有国标接口的<a href=\"https://www.zhihu.com/search?q=%E6%96%B0%E8%83%BD%E6%BA%90&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2477053279%7D\" class=\"internal\">新能源</a>汽车。也就是说你不是蔚来的，也可以呼叫蔚来的充电车服务。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-834482e84bb43eca8af00031c1c15880_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"596\" data-rawheight=\"336\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"C3Hecyo0\">不过，这种充电不是真正的移动充电了，两辆车均是停在路边进行充电。</p>\n<p data-pid=\"CjDn5bqz\">如果真的要像飞机加油机那样同步充电，等到了L3级别的自动驾驶（法规许可）后，采用不变形的硬管，在某些路段，倒是真的有可能实现这种一边充电，两车一边一起同步行驶的状态。</p>\n<p data-pid=\"VbAibAz2\">但这种充电方式，在目前电动车的续航里程偏短的背景下，着实有点画蛇添足了。如果以后10分钟充电跑800公里，客户又特别赶时间的话，L3级别已经普及了，倒是可以真的用跟随充电方案。</p>\n<p data-pid=\"UzJCkUqS\">现阶段，地下埋线圈来进行移动充电还是主流的新能源汽车的移动充电方案。</p>\n<p data-pid=\"2XD00Ofd\">我之前看过类似的专利：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-37d63610fd81042fc0e618652cb5aac8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"652\" data-rawheight=\"392\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"KrftHyVb\">利用电磁谐振原理来按轨道铺设线圈，给地铁供电。</p>\n<h3><i>电磁谐振：利用接受天线固有频率和发射场电磁频率相一致时，两者引发的电磁共振，产生强电磁耦合，利用辐射磁场实现电能的高效传输。</i></h3>\n<p data-pid=\"e4Kibb-z\">比方说，运输交流电的频率为50HZ（一秒内50次周期变化），我们利用调制器把传输端的频率设定为X HZ，然后在接收端（车辆上）也设定为X HZ，那么在一定的范围内，两者磁场发生共振，就会实现能量的传输过程。</p>\n<p data-pid=\"_i7g0ZqC\">其优点是传输距离远大于电磁感应，可以进行大于10cm的电磁感应的能量传输，即便在3-4m的传输距离上，传输功率依旧可以达到数千瓦。</p>\n<p><img src=\"https://pica.zhimg.com/v2-a803f24f9ec27b6a6f92cb3771dba481_720w.jpg?source=b1748391?rss\" data-caption=\"2008年，英特尔在美国IDF上展示无线共振能量链接（WREL）技术\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"333\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"xkD6B2vF\">其优点在于输出端和接收端的距离可以比较远，也就意味着如果是用在公路上，输出端可以埋在比较深的地方，不会轻易被大车碾压遭到破坏，抗压能力较强。另外可以适用于快速行驶的载体充电，比如应用于高速铁路列车的充电。</p>\n<p data-pid=\"r3Itvv96\">基本上，现阶段的电磁谐振轨道无线充电的方式就是下面这种结构。</p>\n<p data-pid=\"ZO6DoIAc\">按照电磁共振的原理，我们可以设置导轨模式的动态供电模式。利用道路下方铺设的发射导轨给路上驾驶的电动汽车进行充电。（根据外界因素，实时调节发射功率因数的频率跟踪控制技术，利用这套电磁共振的动态无现能量传输技术，应用于动态充电的场景。）</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c182c7b78422ea6ca7b84dfc753455c7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"440\" data-rawheight=\"174\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-a56144d68a06455a41c6a49490600fc8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"919\" data-rawheight=\"666\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"g1JxWQU1\">导轨模式可以分为单级导轨模式和多级导轨模式（单层多级导轨，双层多级导轨）。</p>\n<p><img src=\"https://pica.zhimg.com/v2-a86dfaa60809236cdee02968c6e89922_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"729\" data-rawheight=\"410\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"T4fR-eNU\">实际这种无线充电，很多国家已经开始了上路实验。</p>\n<p data-pid=\"gaL1hFWO\">韩国的无线充电公交车。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-dfa1af6d2ede5ff9e38d30403eea3a96_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"410\" data-watermark=\"watermark\" data-original-src=\"v2-dfa1af6d2ede5ff9e38d30403eea3a96\" data-watermark-src=\"v2-d9c04023b09ecd0d3463586c56fc617c\" data-private-watermark-src=\"v2-09574de3cdfa73b211fc794bca1c5fad\"></p>\n<blockquote data-pid=\"ZxU-I0C4\">2010年代初，韩国研究人员开发了无线电动汽车系统，使汽车能够从行驶的道路上获取动力。2013年8月，Yoon Uoo-yeol教授带领的高等科学技术研究院团队推出了全球首个OLEV无线充电BUS，吸引了BBC、CNN和华尔街日报等媒体的全球关注。</blockquote>\n<p data-pid=\"4wKVMURU\">在意大利，Stellantis打造“Arena del Futuro”项目，要铺设一条无线充电的高速公路。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-2572d8bdaf20e23876bdddfdef59da73_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"960\" data-rawheight=\"759\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Ot_d0WyV\">测试道路长1050米，现阶段已经在实车道路测试。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-505642312c6a644a155bd96328b255d4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"400\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"13tderXO\">无线充电除了能给电池充电之外，如果能够解决大功率无线充电的问题，还可以有效减少蓄电池的容量，甚至车身上不需要蓄电池。无线充电可以直接给驱动电机供电，驱动电机驱使车辆行驶。</p>\n<p data-pid=\"_1X8_P9H\">如果有那么一天，动力电池只需要小小的一块或者干脆不要，新能源汽车大幅度减重，驾驶所需能量更少，整车制作更低碳不说，无论是后期保养还是购买车辆的价格也会更加亲民，甚至车辆寿命也能得到大幅提升了。</p>\n<p data-pid=\"KVYa1LtD\">（图片来源网络，侵删！）</p>\n<p><br></p>\n<p><br></p>\n<p data-pid=\"U4RwgrTg\">参考资料：</p>\n<p data-pid=\"bM8L_83U\">1、<a href=\"http://link.zhihu.com/?target=https%3A//new.qq.com/rain/a/20211123A0421600\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">new.qq.com/rain/a/20211</span><span class=\"invisible\">123A0421600</span><span class=\"ellipsis\"></span></a></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/555812724/answer/2693100335?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">21 个回答，查看全部。</a><br>\n","link":"http://www.zhihu.com/question/555812724/answer/2693100335?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"基础入门到高效进阶，我的 macOS 术与器","date":"2022-10-14 06:41:47","description":"希望本文可以帮你找到自己最钟意、最趁手的技巧和软件。<a href=\"https://sspai.com/post/75805\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/75805"},{"title":"《少数派创作手册》现已上线，欢迎与我们继续共创","date":"2022-10-14 03:14:37","description":"作者是少数派最宝贵的财富。为了服务作者，少数派一路上做出了不少努力。这既包括在功能上提供简洁实用的编辑器、个人主页和统计信息，也包括从制度上建立有竞争力的奖励机制、尽量发挥文章价值的选编流程。但如果说 ...<a href=\"https://sspai.com/post/76154\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/76154"},{"title":"派早报：荣耀 X40 GT 5G 发布、Netflix 推出带有广告的基础订阅等级","date":"2022-10-14 01:00:43","description":"Google 将 Passkey 带至 Android 和 Chrome，Firefox Relay 功能将为用户提供虚拟号码等<a href=\"https://sspai.com/post/76173\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/76173"},{"title":"iPhone 14 Pro Max 的主摄提升到 4800 万像素后，日常拍照还需要单反吗？","date":"2022-10-13 10:25:24","description":"\n<p data-pid=\"rQaI1o0w\">从 iPhone X 开始，每年我都会为新的 iPhone 写一篇操作指南，一晃已经到了 iPhone 14 系列。在过去的几年里，智能机的影像理念无论是大方向还是品牌的个性化都在发生着翻天覆地的变化，iPhone 自然也是如此。不过 iPhone 更为难得的是一种在变化和不变中的把控。</p>\n<p data-pid=\"Mjgpwo9l\">是的，不变。</p>\n<p data-pid=\"Ahr2ql8z\">在我看来，「不变」比「变化」更能考验一款产品对于影像技术发展的思考与判断。不过，这个问题我想留在最后再讨论。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d16cf3be46cbe36e1a536728a92cb50f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-d16cf3be46cbe36e1a536728a92cb50f\" data-watermark-src=\"v2-599270165670f454c80abf71ae81a433\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-ffb758831584d445e9b17736e884f0bb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"original\" data-original-src=\"v2-ffb758831584d445e9b17736e884f0bb\" data-watermark-src=\"v2-344b8242c193fd59fc9c0969c2febee2\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-46976d291fa649c64832c3b420305beb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-46976d291fa649c64832c3b420305beb\" data-watermark-src=\"v2-393d23c6d4884548af676a7077beedd0\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-a0f0a4bfeb7c5f7e22ea6e856743e06a_720w.jpg?source=b1748391?rss\" data-caption=\"使用 iPhone 14 Pro 系列拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-a0f0a4bfeb7c5f7e22ea6e856743e06a\" data-watermark-src=\"v2-d4beea9e4bc17d71e65d2ef331e08ff6\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"kmW25xjy\">相比评测，这篇操作指南我会更多分享我使用 iPhone 14 系列的创作经验。过去的一段时间里，我们使用 iPhone 14 系列拍摄了大量不同主题、不同风格的作品，其间也围绕今年的重要更新——4800 万像素——做了大量探索和尝试。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-caff06c55b3144af9d2c39fc3d7cb72a_720w.jpg?source=b1748391?rss\" data-caption=\"使用 iPhone 14 Pro Max 拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-caff06c55b3144af9d2c39fc3d7cb72a\" data-watermark-src=\"v2-569642a84188695726f794d7780703a2\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"0nO6frEf\">许多惊喜，当然也有一点问题。我们就先从 4800 万像素带来的第一个改变，50mm 开始。</p>\n<p data-pid=\"3Fs5thRy\"><b>（注：受平台上传图片大小限制，文章照片均经过压缩。）</b></p>\n<h2>延续的系统，新增的焦距</h2>\n<p data-pid=\"WXCQVjsC\">一个重要的逻辑是，当我们谈论手机摄影时，本质上应该把手机作为「相机」在讨论。换言之，无论是相机还是手机，当我们在拍摄时，指导我们的再也不是所谓的参数，而是摄影理念本身。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6fd515a5d8c05b99106f4a62b140dffa_720w.jpg?source=b1748391?rss\" data-caption=\"iPhone 14 Pro 系列 1× 镜头拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-6fd515a5d8c05b99106f4a62b140dffa\" data-watermark-src=\"v2-7c746244af48deb5cbc1e92718043290\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-7fdcb1c4d309ee1ae8be0fe2fea2bafa_720w.jpg?source=b1748391?rss\" data-caption=\"iPhone 14 Pro 系列 3× 镜头拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"original\" data-original-src=\"v2-7fdcb1c4d309ee1ae8be0fe2fea2bafa\" data-watermark-src=\"v2-50b368c7194cf03f5d3f6cd36e00914e\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"XVwxdzWD\">对于焦距的认知就是一个最好的例子。本质上任何的相机都是由机身和镜头两部分组成，其中镜头直接影响着你的取景范围。而取景范围意味着「拍摄题材的选择」。从 iPhone 11 Pro 系列升级为三颗镜头，之后 iPhone 的整个影像理念开始强调「系统性」。整个相机的理念重点是三颗镜头之间的协作。</p>\n<p data-pid=\"8uDoq8k_\">但如果我们切换为「相机」的认知，目前的 iPhone 就可以理解为一套「定焦镜头组」。在 iPhone 13 Pro 系列上，这套定焦镜头组的焦距分别是 13mm、28mm、77mm。其中 13mm 更适合大风光以及夸张的人像，28mm 更适合日常记录以及街拍人文，77mm更适合人像肖像和压缩感的建筑等。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-bcc8d96aa164078d696c1aa65f8e6246_720w.jpg?source=b1748391?rss\" data-caption=\"iPhone 14 Pro 3× 镜头拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-bcc8d96aa164078d696c1aa65f8e6246\" data-watermark-src=\"v2-739372c9855a78c4d0b379cde440c2c5\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"svm_yWFE\">但却少了最为普及的 50mm 焦距。很多人购买相机定焦镜头时，第一颗镜头都会选择 50mm，我们看过的太多经典照片都是出自 50mm 镜头。而 50mm 焦距的缺失，会给我们的拍摄带来诸多不便。现在 iPhone 14 Pro 系列通过高像素裁切，让 50mm 重新回到整个焦距体系，所以虽然 iPhone 14 Pro 只有三个摄像头，但你的「定焦镜头组」又多了一个。</p>\n<p><img src=\"https://pica.zhimg.com/v2-ebec82d3daf288f6f8a6692d340509d0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"original\" data-original-src=\"v2-ebec82d3daf288f6f8a6692d340509d0\" data-watermark-src=\"v2-4e814dd905f69c69907ff5a85e7d66c3\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-06411a128b76be3d210e2fcd76948c1a_720w.jpg?source=b1748391?rss\" data-caption=\"iPhone 14 Pro 2× 镜头拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"original\" data-original-src=\"v2-06411a128b76be3d210e2fcd76948c1a\" data-watermark-src=\"v2-a97e3b14dca416e9da1a96580f687772\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Yr9HoyF8\">从我的使用经验来看，2× 等效 48 mm 的焦距虽是裁切，但完全不需要担心画质，可以放心使用。在以下场景中，我建议使用 2× 镜头拍摄：</p>\n<p data-pid=\"rFTtlkLD\"><b>1. 人像</b></p>\n<p data-pid=\"jUor6ygh\">对于标准人像，没有比 50mm 焦距区间更好的选择。尤其是今年的 iPhone 14 系列的 1× 从等效 26mm 变为现在的 24mm，不要小看 2mm 的差别，画面因此变「广」许多。这也让拍摄人物肖像有了更高的难度，所以当你想要明确的拍摄一张人像时，使用 2× 镜头拍摄无论是拍摄体验还是结果都会相对惬意。</p>\n<p data-pid=\"F6NxeeXv\"><b>2. 静物</b></p>\n<p data-pid=\"v1zwsseR\">静物最直接的代表就是美食，而 2× 可以让美食的观感更为端正，尤其是在拍摄特写时，1× 会让餐具变形，3× 又过于贴近很难拍摄到全景。而 2× 可以获得最好的均衡。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-9c3c40841c29cfe3c85d93416813f3df_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"original\" data-original-src=\"v2-9c3c40841c29cfe3c85d93416813f3df\" data-watermark-src=\"v2-02b7821bebfd37a5b39425a7d0765b09\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-14b065519584c2601efd1032c3cc03b8_720w.jpg?source=b1748391?rss\" data-caption=\"iPhone 14 Pro 2× 镜头拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"original\" data-original-src=\"v2-14b065519584c2601efd1032c3cc03b8\" data-watermark-src=\"v2-9feac8add6683c1770c660f4faa738f4\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-abad598c71d08b810378e4a4ddfefbfe_720w.jpg?source=b1748391?rss\" data-caption=\"iPhone 14 Pro 1× 镜头拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-abad598c71d08b810378e4a4ddfefbfe\" data-watermark-src=\"v2-a643c32198a544030ae9bb1ee58b0af5\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"oKzq9U51\">特别提示，如果想获得最好画质，直接点击取景框上的镜头切换按钮（0.5×、1×、2×、3×）来拍摄，可以获得对应的最高画质。不过，上述焦距选择思路只是从「获得最好画质」的角度出发。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-e3715fbe4aae3af09a026ae2350b6a71_720w.jpg?source=b1748391?rss\" data-caption=\"使用 iPhone 14 Pro 3× 镜头拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"original\" data-original-src=\"v2-e3715fbe4aae3af09a026ae2350b6a71\" data-watermark-src=\"v2-7a1034328d9105dc0062e4dbcdc36381\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Mkxus1jS\">但是最近有一件事对我本身的触动很大，这就是「易梦玲风格」。</p>\n<p data-pid=\"t5LJApcG\">我偶然看到一篇易梦玲自己对于氛围感影像的拍摄技巧的分享，她非常直接地提出她更喜欢使用 1.4× 或者 3.5× 这样的非整数倍数。原因也非常直接，数字裁切带来的模糊画质有一种独特的「胶片颗粒氛围」。</p>\n<p data-pid=\"e9tri3Gp\">这也促使我思考自己长时间以来的摄影理念或者是摄影经验的分享。我意识到，影像技巧是建立在影像诉求的基础上。所以你会发现在这篇文章里，我不再强调「你一定要这样做」，而是展现一种操作逻辑，你可以从自己的诉求出发使用「逻辑」。比如，摄影风格。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-05e033bb42357ef453a1f9f50d8d376a_720w.jpg?source=b1748391?rss\" data-caption=\"使用摄影风格暖色调\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"original\" data-original-src=\"v2-05e033bb42357ef453a1f9f50d8d376a\" data-watermark-src=\"v2-5d07d62406fdd23cf1770dfd6d18353d\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"4mY_jPvl\">摄影风格是 iPhone 近几年推出的重要功能。它允许你在拍摄前调整色温和色调。如果从纯粹的技术角度出发，色温是有「准确」一说，意味着色彩还原准确。不过从创作角度来说，色温也可以是一种创作手段。比如在自拍时使用摄影风格调整色温偏冷，就可以获得一张「冷白皮」自拍。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1266d10a8142a1552c87254f125a3bc9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"original\" data-original-src=\"v2-1266d10a8142a1552c87254f125a3bc9\" data-watermark-src=\"v2-c063c2c6838c581f99d474257980a3ae\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-3d4ab4de441ee2440d393b4782d154c5_720w.jpg?source=b1748391?rss\" data-caption=\"两种不同摄影风格，肤质颜色对比\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"original\" data-original-src=\"v2-3d4ab4de441ee2440d393b4782d154c5\" data-watermark-src=\"v2-8d441faa05b8de9c9fcd54109f797a57\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"63mlehzW\">摄影风格是这几年来我最喜欢的 iPhone 软件更新之一。因为你可以按照自己的喜欢调整对比度以及画面的冷暖情况。我建议你可以多试试，找到自己的一个属于自己的风格，甚至很多时候拍摄后都不需要后期调整。这也是我前面所提到的「不变」，无论是摄影风格还是人像光效系统，你都能在新的 iPhone 上继续使用，而且往往它们都会变得更好。其实对于很多模式可以有一些逆向的使用思路，比如某种意义上 iPhone 的原相机也是可以美颜的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-111f50d482ebe7e408ec66ce623b90f5_720w.jpg?source=b1748391?rss\" data-caption=\"使用 iPhone 14 Pro 人像模式拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"original\" data-original-src=\"v2-111f50d482ebe7e408ec66ce623b90f5\" data-watermark-src=\"v2-69cf0cdb79fa63a79d6237903e242030\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"PveNf8r3\">我们都知道 iPhone 的人像模式中有「摄影室灯光」效果，会提亮并柔化人的面部。利用这一点，我们可以主动选择人像模式，打开摄影室灯光，调整光圈数值到最大(比如 ƒ/16)，这样背景就不再虚化，但是面部依然有很好的肤色表现。</p>\n<p data-pid=\"ewP47UTt\">这样，我们就可以获得一张背景清晰、自带美颜效果的自拍。而且人像模式中提供了丰富的焦距选择，你可以选择 1×、2× 甚至是 3×，拍摄人像非常便利。我自己最常用的还是 2×，无论室内还是室外，无论是环境人像还是肖像都能获得很好的平衡。</p>\n<p><img src=\"https://pica.zhimg.com/v2-88f0cb79bcd0dbca8846cea5f9a8d1e0_720w.jpg?source=b1748391?rss\" data-caption=\"使用 iPhone 14 Pro 人像模式拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"original\" data-original-src=\"v2-88f0cb79bcd0dbca8846cea5f9a8d1e0\" data-watermark-src=\"v2-e902ee35358b663f03c60d35a8446197\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"5o2Y8obV\">既然说到人像模式，iPhone 14 Pro 系列的人像模式本身也有提升，从我们的拍摄结果来看，人像模式现在对于「焦平面」的理解更加透彻。说的直白一点，就是它对于画面前景的虚化更加自然、真实。需要在此说明的是，人像虚化的抠图并不是在平面上进行，iPhone 判断是的不同物体之间的空间距离。正确的虚化是指距离 iPhone 焦点同距离的平面是清晰的，如果物体并不是在一个焦平面，那么就应该是虚化。</p>\n<p data-pid=\"GjHNCKGi\">比如下面的画面中，前景中的花卉就是典型的例子。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-bb0ef634b234365711c400724210a7d9_720w.jpg?source=b1748391?rss\" data-caption=\"使用 iPhone 14 人像拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"original\" data-original-src=\"v2-bb0ef634b234365711c400724210a7d9\" data-watermark-src=\"v2-6905a3959eafd8fd59fa6ab9e6885bd3\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"yHTPIO3M\">总的来说，今年的 iPhone 影像系统由于 50mm 的回归，让整个系统更加丰满，而对一些过往功能的升级或者再造，保持了拍摄体验的统一，你大可放心的延续你的拍摄习惯。</p>\n<h2>4800 万好，ProRAW 更好</h2>\n<p data-pid=\"7BeKfUvc\">在开始 4800 万像素之前，我认为你更先需要了解 RAW 格式以及苹果带来的延伸 ProRAW。其实 RAW 格式的概念今天对于任何一个摄影师，哪怕是刚刚入门的摄影爱好者都不陌生，它是今天数字摄影的重要基石，它甚至有一个中文名字就是「数字底片」。而 ProRAW 是苹果在 RAW 格式基础上的进阶。为了能够让你用好 ProRAW ，我决定在这里多花一点时间。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-92c4c746bdf4685176e75dca8004508f_720w.jpg?source=b1748391?rss\" data-caption=\"iPhone 14 Pro ProRAW 拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-92c4c746bdf4685176e75dca8004508f\" data-watermark-src=\"v2-43a4e0fa27340061aabe11e0d8c3ccae\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"3algHzN8\">今天的数字摄影一个重要的变化就是用「光学传感器」来代替「化学胶片」。说出来有趣，其实这么多年过去了，从 1839 年到现在，相机的基本结构原理没有发生根本改变。你都可以总结为：镜头、不透光的暗箱以及记录光线的载体。记录光线的载体一直在发生着不同程度上的演化，而近代从胶片变为光学传感器可以说是整个摄影发明以来最大的一次变革。</p>\n<p data-pid=\"bsk-q8aZ\">光学传感器的本质逻辑是，把直接的光信号转换为数字信号，然后再把这些数字信号翻译成图像。而所谓的 RAW 格式照片，就是所有光信号转换为数字信号的「信息记录总和」。而我们在显示器上看到的所有照片，都是对「信息记录总和」的「转换翻译结果」，比如 JPG 格式。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1f9a8985006490444b65c7007209105b_720w.jpg?source=b1748391?rss\" data-caption=\"iPhone 14 Pro ProRAW 拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-1f9a8985006490444b65c7007209105b\" data-watermark-src=\"v2-5d3c39fe02e438ca4946702cb1abf6ad\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"BonvNFfH\">既然是转换翻译就意味着「损耗」或者是「信息的过滤和压缩」，因为 RAW 格式对于 JPG 格式的一个重要优势在于，它包含着最多的信息，因此就有着最大的后期空间。这也解释了一个很有意思的现象，这就是为什么同样的一个场景，不同手机不同相机拍摄的照片结果略有不同。</p>\n<p data-pid=\"CzeV8cVS\">因为把数字底片翻译为照片的这个过程中，有着「翻译风格」，同样的一个红色，可能会被翻译为亮红色也可以翻译为橙红色。既然 RAW 格式有如此大的优势，为什么我们不直接使用 RAW 格式，还要使用 JPG 格式。因为 RAW 格式有两个注定无法普及的「缺点」。</p>\n<p data-pid=\"uSLf0O95\"><b>1. 占据空间大</b></p>\n<p data-pid=\"DXrFSSyU\">所有的信息，自然意味着更多的数据记录，iPhone 14 Pro 系列的 4800 万像素的 RAW 格式照片甚至是接近 100M（大多数情况在 70M 左右） ，是普通照片的 20 倍有余。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-a6441fbbd9312c20db6c59618568a510_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"498\" data-watermark=\"original\" data-original-src=\"v2-a6441fbbd9312c20db6c59618568a510\" data-watermark-src=\"v2-338e69e1ac5e8ac46b49217558f993fe\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"0TPBPnsb\"><b>2. RAW 格式必须「翻译」才能够使用</b></p>\n<p data-pid=\"5EvhdLIY\">占存储是小事，但是 RAW 格式的使用门槛就是实打实的。正如前面所说，它还有另一个名字叫做「数字底片」，而「底片」就意味着你必须后期调整并输出其它格式比如 JPG、PNG 等常见格式才能使用。这里你可能会说，我用 iPhone 拍摄的 RAW 格式照片不是可以直接分享社交网络。这其实是一种错觉，因为在你分享时 iPhone 实际上已经帮你「翻译」过了。而且其实如果不翻译，你甚至是无法查看 RAW 格式，因此你在相册里看到的 RAW 格式照片都是翻译的结果。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-7f6a353db7f432278684c7cbaa9b4cd1_720w.jpg?source=b1748391?rss\" data-caption=\"iPhone 14 Pro ProRAW 拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-7f6a353db7f432278684c7cbaa9b4cd1\" data-watermark-src=\"v2-790e387cbeb46869aaa237d148734082\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"5TVbfxNc\">所以当你把 RAW 格式真正的导入到一些可以解读 RAW 格式的软件中时，你会发现照片的观感完全和你在 iPhone 上的预览不一致。不仅仅是 iPhone，所有相机的逻辑也是如此。相机拍摄时，即使选择 RAW 格式拍摄，你在相机上查看拍摄结果时都是翻译好的 JPG 。</p>\n<p data-pid=\"rIWxoMVS\">不过，我自己并不喜欢 Apple 的「翻译结果」，我认为 Apple 的这套翻译风格极大的降低了人们对于 ProRAW 的热情，很多照片我们在相册里看着一般，但是进入专业的后期软件，完全是两个概念。所以我建议 Apple 最好能够重新考虑对于 ProRAW 格式的照片呈现方式。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-65d16a992620f422bb7a5f962249fd48_720w.jpg?source=b1748391?rss\" data-caption=\"iPhone 14 Pro ProRAW 拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"original\" data-original-src=\"v2-65d16a992620f422bb7a5f962249fd48\" data-watermark-src=\"v2-7f16aaff7111c574c3e7e4d2bec9b6df\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"1udlOMlR\">你会发现这里也隐藏了另一个门槛：RAW 格式的使用需要配合专业的软件。比如 Photoshop、Lightroom、Capture One 等，只有这些软件可以充分发挥 RAW 格式的潜能。比如我自己更喜欢使用 Capture One，当我第一次把 ProRAW 导入之后，简直是发现了新世界。整个画面层次细腻，色彩饱满，锐利程度适当。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-2e891ffe7239c121df3aa77f82afd83b_720w.png?source=b1748391?rss\" data-caption=\"ProRAW 使用 Capture One 调整界面\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"608\" data-watermark=\"original\" data-original-src=\"v2-2e891ffe7239c121df3aa77f82afd83b\" data-watermark-src=\"v2-58e7743b1bbb9aa01d4a2efaffa1d3ad\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"oA-yDxxE\">可这些软件一方面都只能在 iPad 或者是 Mac 上可以发挥全力，一方面价格很昂贵，比如我使用 Capture One，买断价格数千块。如果你是摄影爱好者或者是专业的摄影师，这些软件可能早就购买，但是对于更多的普通消费者甚至都不知道如何购买。所以，我总结了目前一些不同梯队的可以调整和输出 RAW 格式的软件。</p>\n<p data-pid=\"P4BM9cON\"><b>1. 免费</b></p>\n<p data-pid=\"dbMJiDAt\">苹果自带的相册。苹果自带的相册是可以直接编辑 ProRAW 格式，任意调整以后，在任意分享平台分享，甚至是隔空投送都可以直接分享 JPG 的图片。但是从我的使用经验来看，自带的编辑器无法完全释放出 ProRAW 的实力，导致很多人觉得 ProRAW 不好用。不过至少是一个可以快速分享的方式。目前，也已经有了 ProRAW 一键转换为 JPG 的快捷指令，可以让我们直接获得一张 4800 万像素的 JPG。坦率地说，这样做失去了 ProRAW 的后期空间，但是保留了分辨率，也是一种选择。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-7ccf982b9f8e13d22e38691e567bd18e_720w.jpg?source=b1748391?rss\" data-caption=\"iPhone 14 Pro ProRAW 拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"original\" data-original-src=\"v2-7ccf982b9f8e13d22e38691e567bd18e\" data-watermark-src=\"v2-6c7bdf759f0c7dd93fc47875fcc38b65\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"swYZlCTO\"><b>2. 性价比高</b></p>\n<p data-pid=\"C6cpudgz\">泼辣修图是我认为最具性价比的 ProRAW 调整和输出的软件。目前软件订阅制，无论是从价格还是从工具的丰富程度上都非常好用。考虑到它本身还具有一定的全平台特性，无论是 iPhone、iPad 还是 Mac 都可以使用，某种意义上来说也是门槛最低的专业修图软件。而且在完成调整后的输出时，泼辣修图允许你针对不同用途自定义输出分辨率。</p>\n<p data-pid=\"C6943P6l\">VSCO 也是支持 ProRAW 格式。但是 VSCO 本质上还是胶片模拟软件，它本身对于 ProRAW 的调整能力并不高，缺乏优秀的局部调整能力。不过它可以让你快速的获取不同胶片风格的高分辨率照片。</p>\n<p data-pid=\"9fwdmFrV\"><b>3. 专业进阶</b></p>\n<p data-pid=\"5C0gEkhL\">Lightroom 是最为常见的 RAW 的转档软件，几乎是绝大多数摄影师的选择。这款软件核心还是在电脑端，也就是 Mac 或者是 PC 电脑，手机上移动端也不错。如果你在苹果的 App Store 里直接下载，目前软件是订阅制，每个月的价格为 35 元人民币，不能说便宜。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-01f0ebc58cea73fc0973064fc3d09670_720w.jpg?source=b1748391?rss\" data-caption=\"使用 Capture One 转档 ProRAW\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-01f0ebc58cea73fc0973064fc3d09670\" data-watermark-src=\"v2-171d5fe2a183d3286e02f996795492e6\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"HUQz64Jj\">不过如果你本身就是 Adobe 的会员计划，比如摄影师计划，那么移动端就是免费。我自己本身就属于这一类，所以正好也给其它购买正版的摄影师提个醒，都可以免费解锁移动端。</p>\n<p data-pid=\"pumfgews\">Capture One 也是有移动端的，但是只有在 iPad 上有，而且费用也高达 33 元每个月，不过功能也有阉割，所以除非是 Capture One 核心用户，否则不建议。</p>\n<p data-pid=\"ks4LpmIM\">综上，最好的建议自然是把所有的 ProRAW 照片格式直接转移到电脑上，再使用电脑上的 Lightroom 或者是 Capture One 操作。你将会获得最好的画质调教。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-9530a96c298457f57059494eb6c7c80c_720w.jpg?source=b1748391?rss\" data-caption=\"使用 Capture One 转档 ProRAW\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-9530a96c298457f57059494eb6c7c80c\" data-watermark-src=\"v2-c82657b3f1232f86e6f4f8158278c2bd\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Um8ZeNDc\">在你了解了 RAW 以及苹果的 ProRAW 以后，我们现在可以来说一说 4800 万像素。其实高像素一直都是摄影环境中一直被讨论的话题，你可能或多或少的关于像素的一些「结论」。但是任何结论都是需要限定条件。比如很长一段时间里，人们认为像素越高画质就越好，而苹果用了将近 7 年的 1200 万像素在整个手机摄影领域里独领风骚之后，人们知道了像素和画质并不划等号。</p>\n<p data-pid=\"-i48JJIN\">但今天，Apple 跨了一大步，直接推出了 4800 万高像素。</p>\n<p data-pid=\"trZNpSK6\">在 iPhone 14 Pro 系列上，系统默认依然是通过像素四合一的形式输出 1200 万像素照片。想要 4800 万像素，我们需要经过两个设置。</p>\n<p data-pid=\"0PBUe5BS\">1. 在「设置 - 相机 - 格式」中，开启 ProRAW，同时在 ProRAW 分辨率中选择 48MP。目前 iPhone 14 Pro 系列只在 4800 万像素中支持 ProRAW 格式。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ecf66b3398dc1a783c6fb51894861919_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"619\" data-watermark=\"original\" data-original-src=\"v2-ecf66b3398dc1a783c6fb51894861919\" data-watermark-src=\"v2-ce1e26854cc6cdd6f3460a25029d627d\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"XLBaUT80\">2. 进入相机拍摄界面，在拍摄界面右上角的 RAW 图标点击打开。此时你在按下任意快门，拍摄的就是 4800 万像素的 ProRAW。</p>\n<p data-pid=\"E9qasQ-H\">我们可以看到，苹果对于 4800 万像素的高像素还是「藏得很深」。因此这足以说明，4800 万的像素并不是一个「日常」使用的选择。</p>\n<p data-pid=\"jqsG0uvz\">所以我在这里给出一些建议的使用场景，以供参考：</p>\n<p data-pid=\"I201BByj\"><b>1. 风光和细节密度高的选题</b></p>\n<p data-pid=\"JgoWTHW7\">高像素基本上是风光摄影师的最爱，因为风光摄影对于细节的捕捉要求最高。当然只要是任何细节密度高的画面，都很适合高像素。</p>\n<p data-pid=\"UbAHVLjc\"><b>2. 具有后期意义的场景</b></p>\n<p data-pid=\"atGzcaPi\">如果你的这张图，被自己视为「作品」来看待，尤其是对于后期十分看重，那么 4800 万像素的 ProRAW 将会给你带来极大的后期空间。而从我有限的手机摄影经验来看，这是你在智能机领域获得的最大的后期空间。你可以利用局部工具，重新调整光影层次，也可以使用色彩工具，彻底改造某种色彩风格。只要你热衷于后期「魔法」，这是最好的选择。</p>\n<p data-pid=\"WHazsNkP\">不建议使用高像素：</p>\n<p data-pid=\"0ppeebcz\"><b>1. 记录信息为主的拍摄</b></p>\n<p data-pid=\"pHfU_f0L\">如果你是随手拍，建议完全关掉 ProRAW，因为一张照片 70M 左右的空间，1T 的 iPhone 都打怵。</p>\n<p data-pid=\"4bTRXMpW\"><b>2.动态连拍主题</b></p>\n<p data-pid=\"miEDpwyq\">一些高速移动， 或者是拍摄着高速移动的场景，都不适合 4800 万高像素，因为抖动是高像素「天敌」。会让你的照片「模糊」的更厉害。高像素的拍摄需要一定的计算时间，所以快门之间有间隔，也不适合高速拍摄。因此，就算你是在 4800 万的模式下，进入连拍模式也是无法拍摄，会回归到正常的照片。从创作的角度来说，高像素最为直接的应用就是：「二次裁切」。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-cabced954a79a5451766282a90b5219b_720w.jpg?source=b1748391?rss\" data-caption=\"iPhone 14 Pro ProRAW 拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"original\" data-original-src=\"v2-cabced954a79a5451766282a90b5219b\" data-watermark-src=\"v2-cb25ddbe73955ae024d5ed8e8de820ab\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"a-H7p-TL\">决定性瞬间一直都是摄影的理论基石，这一前提是建立在每一次按下快门我们的取景都已经固定。但是高像素意味着我们在拍摄一个画面以后，再一次任意切割画面，同时保持着画面有着足够的分辨率保持视觉上的清晰。</p>\n<p data-pid=\"MR1FeP7U\">4800 万意味着你把画面进行八等分，再发到社交网络上依然都能保持画面的清晰度。大胆的二次构图甚至是可以对许多作品进行二次创作，一方面它可以让你尽情简化画面，保持画面的简洁。另一方面可以让你尽情的重新思考画面的故事结构，甚至是可以通过二次裁切获得完全不同的叙事结果。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-d8c96828c7e1cab7d0d963ac65acbf9e_720w.png?source=b1748391?rss\" data-caption=\"4800 万照片的不同裁切方式\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"453\" data-watermark=\"original\" data-original-src=\"v2-d8c96828c7e1cab7d0d963ac65acbf9e\" data-watermark-src=\"v2-546393092ec4124f13c89c280caa2fdf\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"sLsG_5vH\">另一个应用场景就是大尺幅输出。这是一个非常值得探讨的话题，很长一段时间里我都没有在手机摄影中讨论「输出」。而随着社交网络的数字化图片普及，今天已经很少有机会去获得一张真正的实体照片。</p>\n<p data-pid=\"RnvvtpKQ\">但我真的建议把照片打印出来。不要过于相信数字的东西，尤其是那些宝贵的回忆，当它们落在纸上是截然不同的温度。我很喜欢用拍立得分享照片，因为真实的物体媒介，会给予不同的体验。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4e4ae26b707e56b6d4e814942fdb9958_720w.png?source=b1748391?rss\" data-caption=\"输出 4800 万像素照片\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"571\" data-watermark=\"original\" data-original-src=\"v2-4e4ae26b707e56b6d4e814942fdb9958\" data-watermark-src=\"v2-f97cfd671543da8c8e9a0f6e501af71d\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"gWUznEwt\">尤其是，如果你对于手机摄影抱着严肃认真的态度，希望从中去感受摄影本身的奥义，那么就一定把自己的作品用相纸输出出来。在屏幕上和在纸上是两种完全不同的照片。而此时高像素就给予你最大的输出空间，从我们的实际测试来看，4800 万像素的输出尺幅超乎想象，我们甚至是尝试输出 1 米以上的大小都可以做到观感细腻。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-2db1f19ec6ebedcd64631a4a93bde658_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"554\" data-watermark=\"original\" data-original-src=\"v2-2db1f19ec6ebedcd64631a4a93bde658\" data-watermark-src=\"v2-290691b90860ea8f08a0064db431e843\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"708Qt534\">一个误区是，并不一定要自己有照片打印机才可以输出。目前电商平台上有很多的打印甚至是装裱服务可以选择，你可以自己选择纸张和装裱形式。</p>\n<p data-pid=\"IrdxaG87\">想要获得高品质的输出，肯定还需要高品质的画质。其实高像素在拍摄时也有着一定的需求。比如这里有一个重要的前提：「保持足够的进光量」。高像素非常「吃光」，只要保证一定的进光量，高像素才能够发挥出高解析力。这不是 iPhone 的问题，任何主打高像素的机型都有着类似的需求。</p>\n<p data-pid=\"tQI_QHwm\">如果你对 iPhone 的过度锐化感到反感，那么 ProRAW 是一个非常直接的解决方式。考虑到你希望通过 ProRAW 来解决锐化问题，可以将 ProRAW 的分辨率设置为 1200 万像素，这样就能极大的节省你的空间。Deep Fusion 的过度锐化的确是目前 iPhone 影像一个失衡点，不仅仅是你，包括我在内对于目前 iPhone 影像系统的 Deep Fusion 都颇有微词。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-40be6d1294a36422e66851f986f3cc68_720w.jpg?source=b1748391?rss\" data-caption=\"iPhone 14 Pro ProRAW 拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"original\" data-original-src=\"v2-40be6d1294a36422e66851f986f3cc68\" data-watermark-src=\"v2-4e9a75155d2b4c33e27d560ae924e1de\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"m7oVgrwX\">读到这里你可能会发现，其实对于 4800 万像素只是一个「台前」，ProRAW 才是「幕后」。专业的摄影师们对于 4800 万的赞叹不已，是建立在 ProRAW 的基础上。虽然之前的 iPhone 已经推出 ProRAW，但是 1200 万的像素的确捉襟见肘，但 4800 万的量变足够引起质变，去试试 4800 万像素的 ProRAW，绝对刷新你对于手机画质的新认知。</p>\n<h2>一些很重要的细节</h2>\n<p data-pid=\"zZxC2abz\">谈到 iPhone 14 Pro 系列，基本上都是在谈论 4800 万像素，但是除此之外有着诸多的升级小细节，我认为甚至是比 4800 万对真实的拍摄帮助更大。</p>\n<h3>电影效果模式</h3>\n<p data-pid=\"YEy4qVeM\">电影效果模式现在已经可以使用 4K 30FPS 模式，当然也包含 4K 24FPS。在经过一年的检验以后，电影效果模式已经完全达到可用的状态。这一次升级更高分辨率也在意料之中。</p>\n<p data-pid=\"_ohNVIdo\">对于电影效果模式的使用技巧，没有过多的变化。依然需要强调的是，想要美妙的虚化效果，一定要画面中包含明显的主体和背景。考虑到大多数情况下，iPhone 是一台很好的 Vlog 设备，所以在复杂环境中用来简化画面是一个很好的方式。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ef1959c309ec0772e81d6fcbc014aa6f_720w.png?source=b1748391?rss\" data-caption=\"iPhone 14 Pro 电影效果模式截图\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"573\" data-watermark=\"original\" data-original-src=\"v2-ef1959c309ec0772e81d6fcbc014aa6f\" data-watermark-src=\"v2-d79fb0644558bbefbfd3cad256d020c0\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"p-9YMGkD\">我自己更喜欢使用 3× 镜头的电影效果模式，而不是 1× 镜头。因为 3× 等效 77mm 镜头的长焦特性，本身就会呈现出柔美的虚化，所以相比于 1× 镜头 3× 镜头的虚化会更加自然。可惜的是，虽然 iPhone 在焦距中增加了 50mm ，但是在电影效果模式中还不支持，3× 镜头虽然虚化好看，但在室内拍摄时还是有一定的限制。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-164dd26ed56f812154e59b0691a08e57_720w.png?source=b1748391?rss\" data-caption=\"iPhone 14 Pro 电影效果模式截图\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"572\" data-watermark=\"original\" data-original-src=\"v2-164dd26ed56f812154e59b0691a08e57\" data-watermark-src=\"v2-2a4d396c0409e65b3967009fd38a9160\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"3BDTntSu\">不过你需要知道的是，电影效果模式是存在「后悔药」一说。整体的虚化和人像模式一样，我们是完全可以在相册中重新更改模拟光圈的大小，也就是虚化程度。</p>\n<h3>闪光灯</h3>\n<p data-pid=\"DP8kQu_h\">终于有人来管一管手机闪光灯，不过这事的确一直也只有 iPhone 在管。我强烈建议你可以试一试 iPhone 14 Pro 系列的闪光灯。它现在甚至是有一些卡片机上的机顶闪的味道。很多智能机闪光灯应该改名叫做「手电筒」，但是 iPhone 上的闪光灯可用度极高，在一些弱光环境或者是「逆光环境」下，拍摄人像使用闪光灯可以极大的柔和肤质，也让整个画面更有层次。</p>\n<p><img src=\"https://pica.zhimg.com/v2-f344b4b60d7babadb3c31425e15ce596_720w.jpg?source=b1748391?rss\" data-caption=\"iPhone 14 Pro 闪光灯拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-f344b4b60d7babadb3c31425e15ce596\" data-watermark-src=\"v2-78e8ae990ae41fe31f25b18165b08104\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"XPVKgNQj\">iPhone 14 Pro 系列的闪光灯一个重要的改进就是「闪光变焦」，这其实是很多专业闪光灯上的常见功能。它会智能的跟随你的画面大小来判断闪光范围。比如如果是 3× 镜头拍摄，那么闪光范围更窄但是距离更远，可以更好的集中在你的面部。</p>\n<h3>运动模式</h3>\n<p data-pid=\"4rHmTM6s\">运动模式并不是新鲜的功能，早在几年前许多智能机就已经提出了类似的「超级防抖」功能。从测试效果来看，iPhone 14 系列的运动模式效果极好，画面整体更加顺滑，而且视频的状态稳定，很少出现掉帧的情况。</p>\n<p data-pid=\"_IdaYEew\">在使用时，建议使用超广角镜头拍摄。</p>\n<p data-pid=\"VYX1SD9q\">因为一旦打开运动模式，素材的分辨率就会直接下降到 2.8K，本质上是因为运动模式显然是一种「画面裁切再对齐」的防抖方式。其实这种方式在 iPhone 的基本视频功能中也使用，但是考虑到画面的取景范围，算法没有运动模式激进。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-3b41536b91f2b67fc01bbf0dc71e0c9c_720w.jpg?source=b1748391?rss\" data-caption=\"运动模式图标\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"498\" data-watermark=\"original\" data-original-src=\"v2-3b41536b91f2b67fc01bbf0dc71e0c9c\" data-watermark-src=\"v2-769d5309cd3d49f7d94a72a59d43b47d\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"meFtsfcG\">裁切就意味着画面被放大，1× 镜头开启防抖后可能会导致取景画面不够广，考虑到运动模式更多的是大范围移动，因此使用超广角镜头会获得更好的效果。运动模式需要一定的光线，光线稍弱就会提示你「需要更多光线」。此时整个画面的防抖效果下降明显。不过你可以在相机的设置中，打开「运动模式弱光」，会有一定程度的优化。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-cc4362f273e1bd2ee07706ae33f23914_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1342\" data-watermark=\"original\" data-original-src=\"v2-cc4362f273e1bd2ee07706ae33f23914\" data-watermark-src=\"v2-146a30383798e2d385496ddd68c5108f\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"KK5Lz2XM\">对了，你在设置中的「运动模式弱光」上还会发现另一个选项，「增强稳定性」。它可以在你不开启运动防抖模式时提升画面稳定性，显然这应该是另一种程度的数字裁切防抖。如果你经常手持拍摄视频，或者是经常在不稳定的环境中拍摄视频时建议打开。但是如果你固定机位，我建议关掉这个开关。总的来说，我认为 iPhone 在非运动模式下的防抖已经足够好，如果不是极限的颠簸，比如都是沙石或者是真的狂奔，我认为都不需要打开。</p>\n<h3>批量编辑</h3>\n<p data-pid=\"aiw0qFQw\">现在你终于可以批量修图了。iPhone 相册的修图功能非常完善，使用逻辑也非常清晰。所以我现在的大多数照片都不再进第三方的修图软件，而是直接使用自带的编辑器。但是长久以来，我一直都在抱怨一个功能，这就是多张照片的色调统一。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-bba060caf8ff95dda07f977f47f7b6d2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"2341\" data-watermark=\"original\" data-original-src=\"v2-bba060caf8ff95dda07f977f47f7b6d2\" data-watermark-src=\"v2-c8f88ffe98e759a1b6340539fd2baa63\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"ZM-Vp9uI\">无论是从社交网络 9 图的需求出发，还是从创造性拍摄理念出发，对于一组照片的风格统一都是核心技巧之一。但是在以前你想要 9 张图都要保持色调统一，需要一张一张不断重复操作。现在你可以在 iOS 相册中编辑之后选择「拷贝编辑点」，然后可以批量选择照片之后「粘贴编辑点」，这样就可以让 9 张照片全部保持统一的调整风格。当然，因为每一张照片的曝光情况略有不同，调整以后还可以快速微调单张照片。</p>\n<p data-pid=\"GyrBHmUN\">现在 iOS 相册的管理功能也加强了，在相册中有一个「重复项目」，可以帮你精简相册中多余的照片，很好用。</p>\n<h2>一台相机的气质</h2>\n<p data-pid=\"--7A-H_Q\">手机已经成为使用频率最高的相机，这是无需辩驳的事实。所以许多人用手机拍照时，已然是抱着使用相机的方式在使用。而经过智能机行业的激烈竞争，今天的手机早已经在满足日常画质的基础上，朝着非常强烈个性化的方向演变。</p>\n<p data-pid=\"jh_bOcIg\">这种变化的确会给予创造者新鲜感，但也意味着某种意义上的危险。</p>\n<p><img src=\"https://pica.zhimg.com/v2-20dd9533e4969b714f7cba87d905b811_720w.jpg?source=b1748391?rss\" data-caption=\"使用 iPhone 14 系列拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-20dd9533e4969b714f7cba87d905b811\" data-watermark-src=\"v2-59961a2bfe391688428af499cab913ef\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"AqbXJcKL\">创作不仅需要刺激，更需要稳定的环境，不同代机型如果在功能和理念上有着南辕北辙的变化，就意味着创作者无法充分信任手上的拍摄器材。但是 iPhone 的整个相机系统，在保持延续性上依然是教科书级别。我的桌子上放着一台 iPhone 4，我每次打开它的相机，依然能看到很多沿用至今的功能设计。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-5f7abb094948e859160ad54365550421_720w.jpg?source=b1748391?rss\" data-caption=\"使用 iPhone 14 系列拍摄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"original\" data-original-src=\"v2-5f7abb094948e859160ad54365550421\" data-watermark-src=\"v2-d34700e75d1a06b20147b6d91a88570a\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"VefEN9er\">其实在高像素的应用场景中，还有一个场景我没有提，这就是极具纪念价值的照片，比如家庭合影。我家里有很多我小时候和家人合照，遗憾的是受限于当时的拍摄和冲印技术，照片中很多人物都只是一个模糊的图像。其实我们永远不知道一张照片随着时间变化会有怎样的价值变化，而如果恰巧它真的会成为美好回忆的一部分，那么它的像素再怎么高都不过分。</p>\n<p data-pid=\"nB-FDMrd\">以上就是我对于 iPhone 14 系列影像系统的理解，希望能够对你有所帮助。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/bigface-62?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Derrick Zhang</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/543159792/answer/2713995240?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">321 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/525699262?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">iPhone 14 Pro 影像全面升级或将采用 4800 万像素镜头，对此你有哪些期待？</a><br><a href=\"http://www.zhihu.com/question/525507506?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">iPhone 14 Pro 影像全面升级或将采用 4800 万像素镜头，你有些期待？</a><br>\n","link":"http://www.zhihu.com/question/543159792/answer/2713995240?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"新玩意 123｜少数派的编辑们最近买了啥？","date":"2022-10-13 09:23:45","description":"关于栏目很多读者都会好奇少数派的编辑们到底平时都「买了啥」。我们希望通过「编辑部的新玩意」介绍编辑部成员们最近在用的新奇产品，让他们自己来谈谈这些新玩意的使用体验究竟如何。内容声明：《新玩意》栏目如含 ...<a href=\"https://sspai.com/post/76169\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/76169"},{"title":"一度成为「网红爆款」的 CCD 相机，它拍照真的更好看吗？","date":"2022-10-13 08:00:00","description":"在怀念那个时代过去的同时，就让它们随着时间慢慢被遗忘在时间的长河里吧。<a href=\"https://sspai.com/post/76138\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/76138"},{"title":"舔舔的文明6大图书馆~（文明6攻略帖子整理）","date":"2022-10-13 07:42:51","description":"\n<ul>\n<li data-pid=\"cOWyAV1w\"><b>6.29经历第一次修订</b></li>\n<li data-pid=\"tR_S1QeO\"><b>7.25经历第二次修订</b></li>\n<li data-pid=\"yVqLYQad\"><b>8.22经历第三次修订</b></li>\n<li data-pid=\"gDOKe5uf\"><b>9.13经历第三次修订</b></li>\n</ul>\n<h2>前言:</h2>\n<p data-pid=\"xBDo51Df\"><b>本图书馆总共35w字1600图[cube_滑稽]</b></p>\n<blockquote data-pid=\"L--F8Lb7\">当您看到没有字幕，没有逻辑，动撵半小时以上的攻略视频，会不会头大呢！<br>那就看看这里吧！</blockquote>\n<p data-pid=\"QMKPJ9KU\">一般来说我的文章都…巨长（平均8000字），一篇更比四篇长。</p>\n<p data-pid=\"57cVp8dv\">但您放心，我好多文章都是<b>全网用文字介绍的最全最凝炼最易懂的。</b>‌</p>\n<p data-pid=\"_y_4PBWF\">质量没问题，放心观看！</p>\n<blockquote data-pid=\"A47_ufiw\">‌我不否认好多人视频做得好，但不系统且真的很…长。<br><br>这边我推荐一下一个b的up<b>“你好图图sdx”</b><br>他做攻略的速度比我肝的多！<br>图文都有，做的容易懂<br>（每次看他ppt像上课真的想笑[cube_感动]哈哈）</blockquote>\n<h2>目录：</h2>\n<p data-pid=\"-HjhN_VB\"><b>文明6安利/购买</b>‌</p>\n<ul>\n<li data-pid=\"x0YXzm6a\">安利<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D86856464\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=86856464</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"-dca27pT\">购买<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D87802896\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=87802896</span><span class=\"ellipsis\"></span></a>\n</li>\n</ul>\n<p data-pid=\"gPJHp8HK\"><b>文明6白金版以下要素攻略</b></p>\n<ul>\n<li data-pid=\"IhHD7cWE\">菜单使用/城市选址<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D78485434\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=78485434</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"DMahU6Mw\">胜利<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D86459922\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=86459922</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"dhGQX5b5\">数据意义/城市管理<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D80032702\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=80032702</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"MKtBWcn0\">城邦<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D80255464\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=80255464</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"FS_iMfoF\">外交<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D80357476\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=80357476</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"sa_LWyhC\">套路<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D80621677\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=80621677</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"9_W7l-5c\">区域<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D81014331\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=81014331</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"A3t6AH63\">总督<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D86513941\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=86513941</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"R-wNUzPm\">尤里卡/鼓舞</li>\n</ul>\n<p data-pid=\"zP9qlfx1\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D86513941\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=86513941</span><span class=\"ellipsis\"></span></a></p>\n<p data-pid=\"WjZLorI2\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D90165082\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=90165082</span><span class=\"ellipsis\"></span></a></p>\n<ul>\n<li data-pid=\"QCpMAFNo\">宜居度<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D82239231\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=82239231</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"VsuqKJhv\">宣战借口<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D88320579\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=88320579</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"Y7hJmZH6\">奇观修建</li>\n</ul>\n<p data-pid=\"IIStB3rE\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D77905300\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=77905300</span><span class=\"ellipsis\"></span></a></p>\n<p data-pid=\"c3CANJWE\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D78120422\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=78120422</span><span class=\"ellipsis\"></span></a></p>\n<p data-pid=\"UZq-2FsT\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D78372075\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=78372075</span><span class=\"ellipsis\"></span></a></p>\n<ul>\n<li data-pid=\"3_ZSa9RA\">时代分<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D89519303\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=89519303</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"HLTIq-g-\">树树<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D89012477\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=89012477</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"0QXCTLYF\">山<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D89878080\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=89878080</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"yY61gUhZ\">海</li>\n</ul>\n<p data-pid=\"GZE3yRry\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D90045999\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=90045999</span><span class=\"ellipsis\"></span></a></p>\n<p data-pid=\"QqwV_cjJ\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D90496130\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=90496130</span><span class=\"ellipsis\"></span></a></p>\n<ul>\n<li data-pid=\"d6Gp0pNs\">沙漠<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D89795102\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=89795102</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"hjGkSnd7\">冻土<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D89963667\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=89963667</span><span class=\"ellipsis\"></span></a>\n</li>\n</ul>\n<p data-pid=\"M7LauuS3\"><b>新纪元要素攻略</b></p>\n<ul>\n<li data-pid=\"Z60-M5jD\">‌英雄<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D82599856\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=82599856</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"lZGjZ752\">公司<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D82795012\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=82795012</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"zKNMYI4I\">结社<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D86598366\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=86598366</span><span class=\"ellipsis\"></span></a>\n</li>\n</ul>\n<p data-pid=\"OROmILTI\"><b>单文明攻略</b></p>\n<ul>\n<li data-pid=\"OcbrpLXf\">‌葡萄牙<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D80511463\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=80511463</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"-6A1kKht\">匈牙利<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D87711227\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=87711227</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"2c4mJR9A\">秦始皇<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D90294911\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=90294911</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"FaLE4gA3\">巴比伦<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D75567461\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=75567461</span><span class=\"ellipsis\"></span></a>\n</li>\n</ul>\n<p data-pid=\"z2zj_QNP\"><b>和而不同攻略</b></p>\n<ul>\n<li data-pid=\"nZ3_0QxN\">‌安利<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D78500046\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=78500046</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"k_CHbhg3\">各文明分析（种田）<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D81612273\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=81612273</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"Kz_A_yEM\">各文明分析（战狂）<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D81688931\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=81688931</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"SYbwrHA0\">各文明分析（种战）<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D81788127\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=81788127</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"HyZA8e6R\">秦始皇情境攻略<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D87273007\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=87273007</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"io5EJC4k\">所有奇观分西</li>\n</ul>\n<p data-pid=\"FOeNE_7i\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D87955188\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=87955188</span><span class=\"ellipsis\"></span></a></p>\n<p data-pid=\"6lQMnpUy\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D88171425\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=88171425</span><span class=\"ellipsis\"></span></a></p>\n<p data-pid=\"wUWYqIdl\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D88250628\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=88250628</span><span class=\"ellipsis\"></span></a></p>\n<p data-pid=\"JFeCpFXc\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D88250867\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=88250867</span><span class=\"ellipsis\"></span></a></p>\n<p data-pid=\"6WhvI15p\"><b>bgm安利</b></p>\n<ul>\n<li data-pid=\"3xbe8Jlj\">‌中.美.希腊.波斯<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D76019490\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=76019490</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"HxCTCtVA\">朝鲜.匈牙利.高棉.努比亚.印加<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D76864154\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=76864154</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"Lj428TzT\">英.葡萄牙.西班牙.大哥伦比亚.法国<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D77815662\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=77815662</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"TJHebQfL\">蒙古，祖鲁，毛利，克里，格鲁吉亚<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D78779879\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=78779879</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"lR5Tx17J\">罗马，俄罗斯，德国，高卢，迦太基，拜占庭，奥斯曼<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D81530085\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=81530085</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"qmH4Y7eq\">巴比伦，埃及，波斯，蒙特祖玛，苏美尔，斯基泰<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D87624521\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=87624521</span><span class=\"ellipsis\"></span></a>\n</li>\n</ul>\n<p data-pid=\"SZSRnEe7\">‌<b>其他：</b><br></p>\n<p data-pid=\"8O4H4EAX\"><b>………</b>‌</p>\n<h2>文明6安利/购买</h2>\n<p data-pid=\"7jwM99Mm\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D86856464\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">一朝落子九天外，数载还乡烂柯人～一篇从心的文明6安利</a></p>\n<blockquote data-pid=\"D_6Uk7es\">为什么推荐你玩文明6 <br>因为他文明6…好玩[cube_哇]</blockquote>\n<p data-pid=\"XxmnKUk5\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D87802896\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">文明6买啥版本捏？带您先看看内容，您自己决定</a></p>\n<blockquote data-pid=\"k01rPVwB\">这一点是为了回答社区问题：<br>买啥版本好？</blockquote>\n<h2>文明6新手攻略</h2>\n<p data-pid=\"XJoZoIBm\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D78485434\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">一篇可以边玩边看的文明六新手攻略～（界面使用与城市选址篇）</a></p>\n<blockquote data-pid=\"pnuvECke\">这篇文章为您介绍了两个方面<br><b>怎么使用主界面？</b><br><b>怎么选址建立城市？</b>\n</blockquote>\n<p data-pid=\"iFCJFTa7\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D86459922\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">文明6胜利方式大概说明</a></p>\n<blockquote data-pid=\"HtfU5rAQ\">这篇文章介绍了胜利方式：<br>我们要成为地球联合国？（外交胜利）<br>还是成为人类帝国（科技胜利）<br>还是...</blockquote>\n<p data-pid=\"DuAsPHSS\"><b><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D80032702\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">傻瓜版帝王培养书～边玩边看的文明6新手攻略</a></b></p>\n<blockquote data-pid=\"hvJ91-7o\">这篇文章为您介绍了‌<br><b>各种产出的大致作用</b><br><b>怎么具体看城市产出的来源</b><br><b>（以后会加一定的东西）</b><br>知其然知其所以然，了解产出作用和来源能让您对游戏更理解！</blockquote>\n<p data-pid=\"TjEMttWM\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D80255464\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">一篇生动且全面的文明6，新手向与进阶向攻略（3）</a><br></p>\n<blockquote data-pid=\"kuOCeERV\">这篇文章为您介绍了<br><b>各种关于城邦的机制</b><br><b>怎么获取更多的使者控制城邦</b><br>城邦是每个文明都要面对的<br>理解，利用它让您走向胜利吧</blockquote>\n<p data-pid=\"DtxFpFua\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D80357476\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">一篇有趣的文明6新手攻略（4）~了解领袖们的奇怪想法</a></p>\n<blockquote data-pid=\"5UxvBy0z\">这篇文章为您介绍了<br><b>外交好感度系统</b><br><b>（以后会加很多东西）</b><br>额，其实这个文章吐槽偏多。<br>文明6外交系统做的并不好，了解它意义也不大。<br>但你可以稍微利用它趋利避害<br>（明白早期谁危险，怎么处好关系）</blockquote>\n<p data-pid=\"bEiWLkEK\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D80621677\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">文明6新手攻略（51逃课篇)~咱今天就得站着把游戏玩爽了</a></p>\n<blockquote data-pid=\"BPig6xaU\">这篇文章为您介绍了<br><b>怎么用固定套路，轻松获取胜利</b><br><b>（会再加一些套路）</b><br>如果您没耐心看攻略<br>那就看这个！<br>当你玩完一把感受到乐趣后，估摸着才会主动了解游戏机制吧！</blockquote>\n<p data-pid=\"W8XZaqJD\">‌<a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D81014331\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">文明最详细攻略（6）～做只谋局千年的大手（区域.上篇）</a></p>\n<blockquote data-pid=\"Q6cHqGgF\">这篇文章为您介绍了<br><b>每个区域的来源</b><br><b>每个区域与内部建筑的作用</b><br><b>每个区域需要的大概数量</b><br>区域是文明不可绕过的东西，<br>了解它，对种田的您帮助很大[cube_酷]</blockquote>\n<p data-pid=\"rnoGCMpm\">一眼定阵，发展无瓶颈！（7）～文明6攻略</p>\n<p data-pid=\"zexMZN1f\">（区域.下篇）</p>\n<blockquote data-pid=\"5Qg-pByo\">这篇我挖坑了，正在施工！会给您讲<br><b>区域规划的意义</b><br><b>怎么最大化区域加成</b><br><b>区域加成强势文明分析</b>\n</blockquote>\n<p data-pid=\"mhpSpjjE\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D86513941\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">知人善任，乃帝王之道~文明6全网最全总督分析</a></p>\n<blockquote data-pid=\"Jc-9dsJO\">会给您讲：<br>总督点怎么获得？<br>总督机制<br>不同宗度的各自分析</blockquote>\n<p data-pid=\"LH0rlPR6\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D83019254\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">学好尤里卡，玩啥文明都不怕！～文明6最全尤里卡攻略</a></p>\n<p data-pid=\"MP2Z0Nku\">(没写完，会有下篇！）</p>\n<p data-pid=\"CNr5vlwT\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D90165082\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=90165082</span><span class=\"ellipsis\"></span></a></p>\n<blockquote data-pid=\"PemLu3rf\">这篇文章很独特很原创！归类了尤里卡/鼓舞<br>你可以认为是秦始皇的科文发展攻略！<br>也可以认为是所有文明想顺滑的科技文化一同发展，必走的流程！</blockquote>\n<p data-pid=\"8pOtCAmA\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D82239231\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">文明6攻略（7）～全网最全宜居度讲解，还文明以娱乐</a></p>\n<blockquote data-pid=\"dc3y-jGP\">文明6宜居度什么意思？怎么获得？怎么消耗？<br>战争怎么影响宜居度？</blockquote>\n<p data-pid=\"AfEbERUs\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D89519303\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=89519303</span><span class=\"ellipsis\"></span></a></p>\n<blockquote data-pid=\"gl1HU_8A\">时代分！学会控制~<br>黑暗和黄金各有利弊</blockquote>\n<p data-pid=\"XN0OAwfq\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D89103770\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">拒绝做奇观被抢的羔羊！全网最全文明6修奇观指南</a></p>\n<blockquote data-pid=\"5gJBOwcz\">怎么快速修奇观？<br>看这里！</blockquote>\n<p data-pid=\"Vbj5BoLd\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D89012477\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=89012477</span><span class=\"ellipsis\"></span></a></p>\n<blockquote data-pid=\"IojIXY8v\">树，一个很常见的元素，但又至关重要<br>学会处理它，你就是老司机！</blockquote>\n<p data-pid=\"QFe6bqjh\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D88320579\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">宣战借口？厌战度？～本文带您在文明6看个究竟</a></p>\n<blockquote data-pid=\"paEQyizr\">有感而发结合时事写的文章哈哈哈<br>虽说实际玩起来这一点并不重要，但看看也不错</blockquote>\n<p data-pid=\"QYT-jaZH\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D89795102\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=89795102</span><span class=\"ellipsis\"></span></a></p>\n<blockquote data-pid=\"ym1mhabg\">沙漠，马里</blockquote>\n<p data-pid=\"lkb32rYL\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D89878080\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=89878080</span><span class=\"ellipsis\"></span></a></p>\n<blockquote data-pid=\"sJPz-p6b\"><b>山，印加</b></blockquote>\n<p data-pid=\"VRBbiRKM\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D89963667\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=89963667</span><span class=\"ellipsis\"></span></a></p>\n<blockquote data-pid=\"0lPrD_hf\"><b>冻土，俄罗斯＋加拿大</b></blockquote>\n<p data-pid=\"sooYQFcE\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D90045999\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=90045999</span><span class=\"ellipsis\"></span></a></p>\n<p data-pid=\"92uiIkqg\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D90496130\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=90496130</span><span class=\"ellipsis\"></span></a></p>\n<blockquote data-pid=\"AbfyjU1M\">海的超全介绍！<br>特性，改良，海军，文明...</blockquote>\n<p data-pid=\"y7elI_H-\"><b>新纪元季票要素分析</b></p>\n<blockquote data-pid=\"epZTPhrC\">新纪元机票挺贵，所以单独列一下</blockquote>\n<p data-pid=\"lqcypX1C\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D82599856\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">置传说于宏大叙事之下~全网最全文明6英雄介绍！</a></p>\n<blockquote data-pid=\"VYrdbi5-\">文明6有英雄了？<br>是的，不光有，还很强大！花木兰孙悟空等您哦！</blockquote>\n<p data-pid=\"awObarel\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D82795012\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">让文明带点资本主义~文明6“行业，垄断，与公司”介绍大全！</a></p>\n<blockquote data-pid=\"QZ1xg1yp\">文明6可以开公司？<br>是的，小小的有趣！里面还说了和而不同开公司的改动!</blockquote>\n<p data-pid=\"g4hGlkaf\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D86598366\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">克鲁苏、吸血鬼、炼金师、财阀？～文明6秘密结社解析！</a></p>\n<blockquote data-pid=\"eNdBl2DE\">结社好玩捏，打开准没错！</blockquote>\n<h2>文明6单文明攻略</h2>\n<p data-pid=\"CDmBV-4B\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D80511463\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">（全网独家1.5w字）财源滚滚来～文明6葡萄牙最详细介绍攻略</a></p>\n<blockquote data-pid=\"RZ2KHmv-\">葡萄牙是一个赚钱很爽的文明<br>这篇攻略手把手教你怎么赚钱，怎么花钱！<br>并在这个过程中，加深你对钱，商路的理解！</blockquote>\n<p data-pid=\"c863J_Jj\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D87711227\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">我的文明6研究生论文~2w字文明6匈牙利最全攻略！</a><br></p>\n<blockquote data-pid=\"RjWGzprf\">一个不知道为啥没上推荐的攻略，各位可以充电点赞支持一下<br>匈牙利是城邦之王<br>这篇攻略手把手教你怎么控制城邦，<br>怎么在用雇佣兵强力征服的同时，做到后方种田舒畅！<br>在这个过程中，加深你对城邦机制，和征服的理解！</blockquote>\n<p data-pid=\"MK4yIs4M\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D75567461\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">文明六最高上限～巴比伦攻略</a></p>\n<blockquote data-pid=\"uszJAvSR\">这篇文章以后会重新写一篇很详细的！<br>当初文笔理解稚嫩，排版也不行，感觉不太好<br>巴比伦是科技之王<br>这篇攻略教你怎么解锁尤里卡，解锁鼓舞<br>并在这个过程中进行征服！<br>在这个过程中，加深你对尤里卡/鼓舞机制的了解！</blockquote>\n<p data-pid=\"NkUCXPad\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D77905300\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">全网最详细～文明六秦始皇攻略（引言，与远古古典奇观的选择）</a></p>\n<p data-pid=\"muVCXRL5\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D78120422\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">全网最全～秦始皇攻略（中世纪奇观推荐，与其相应的机制说明）</a></p>\n<p data-pid=\"OmfxpKJp\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D78372075\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">全网最全~文明六秦始皇攻略（文艺至信息时代奇观推荐，与详细说明）</a></p>\n<blockquote data-pid=\"88g14Xxh\">这三篇以后打算改名为<br>：<b>站在秦始皇视角的文明6全奇观分析</b><br>通过对奇观科技，地块，作用的说明<br>让您能跟明白自己<br><b>修什么奇观？怎么解锁科技/市政修奇观？怎么留地块修奇观？</b>\n</blockquote>\n<p data-pid=\"mxsSA0GU\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D90294911\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=90294911</span><span class=\"ellipsis\"></span></a></p>\n<blockquote data-pid=\"y9nKFYWX\">是的，这是我准备填的坑,半年补完了<br>我会结合上面所有文明的特点，<br>怎么赚钱？怎么解锁尤里卡？怎么控制城邦<br>以后写的秦始皇怎么选择城邦？<br>来汇聚成这一篇秦始皇攻略！敬请期待</blockquote>\n<p data-pid=\"7A6LDBB7\">金山银山，不如绿水青山！文明6罗斯福种树攻略</p>\n<blockquote data-pid=\"OmLL_RsZ\">这也是我新挖的坑<br><br>魅力值是文明6很鸡肋的数值，了解他意义不大<br>我会专门给独特的罗斯福写一个攻略<br>大家在玩的时候能加深对魅力系统的理解</blockquote>\n<p data-pid=\"uqnrZqpf\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D90266694\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">api.xiaoheihe.cn/v3/bbs</span><span class=\"invisible\">/app/api/web/share?link_id=90266694</span><span class=\"ellipsis\"></span></a></p>\n<blockquote data-pid=\"LJkFctRF\">只有故事，抱歉啦！</blockquote>\n<h2>文明6和而不同mod攻略</h2>\n<p data-pid=\"aQmSGmhv\">和而不同是个很棒的mod，所以我写了很多攻略</p>\n<p data-pid=\"8TrL9uT1\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D78500046\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">文明7出了？～哦，原来这是：“和而不同”介绍与安利</a></p>\n<blockquote data-pid=\"N3vOK3FK\">介绍贴</blockquote>\n<p data-pid=\"1d6MeQvu\">下面三个领袖介绍贴基本把能说的说完了，还有排行榜</p>\n<p data-pid=\"O-iAiFtW\"><b>就算您没有这个mod也可以看着加深理解</b></p>\n<p data-pid=\"LXLcWS2d\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D81612273\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">对文明6和而不同mod变动的分析（纯种田篇）</a></p>\n<blockquote data-pid=\"CyIuqoYJ\">老秦，俄，高棉，朝鲜，葡萄牙，巴西，美国，毛利，苏格兰，刚果，印加，玛雅，马里</blockquote>\n<p data-pid=\"JWXDi1Jc\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D81688931\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">对文明6和而不同mod的分析（纯战狂篇）</a></p>\n<blockquote data-pid=\"soOiRUiU\">祖鲁，斯基泰，蒙古，拜占庭，奥斯曼，大哥伦比亚，努比亚，波斯，马其顿</blockquote>\n<p data-pid=\"i-upECOL\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D81788127\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">对文明6各个领袖的分析排名（和而不同）</a></p>\n<blockquote data-pid=\"xdaKjSHB\">苏美尔，高卢，戈尔戈，巴比伦，挪威，阿兹特克，罗马，匈牙利，德国，马普切，澳大利亚，格鲁吉亚，西班牙，英国（维多利亚），忽必烈</blockquote>\n<p data-pid=\"S5z53uRi\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D87273007\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">文明6秦始皇攻略（和而不同）（早期实战篇）</a></p>\n<blockquote data-pid=\"b4BeElUt\">这篇文章有参考价值，但却忽略了很重要的东西！<br>发教，之后会写一个比较好的。</blockquote>\n<p data-pid=\"h788dKKA\">还有4个和而不同全奇观介绍帖，</p>\n<p data-pid=\"jqDhXyR8\">无论你是原版玩家，还是没玩过的都可以看！</p>\n<p data-pid=\"6edhipS4\">加深游戏理解，或者感受文明6的魅力！</p>\n<p data-pid=\"qh2xOhTn\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D87955188\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">不推陈，还出新！～文明6和而不同奇观介绍（远古古典）</a></p>\n<p data-pid=\"GjtHrmNR\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D88171425\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">不辞旧，还迎新！文明6和而不同奇观分析（中世纪）</a></p>\n<p data-pid=\"r6zW39TT\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D88250628\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">没玩文明也能看！文明6和而不同奇观介绍（文艺复兴）</a></p>\n<p data-pid=\"lcWN31pY\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D88250867\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">没玩文明也能看！文明6和而不同奇观介绍（工业至原子能）</a></p>\n<h2>文明6bgm介绍与安利</h2>\n<blockquote data-pid=\"MbVKQzmG\">文明6的bgm很多很好听，还有故事！这里有分析<br>部分不足和欠缺我以后会试着完善</blockquote>\n<p data-pid=\"cPOsJhgT\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D76019490\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">因为一首歌爱上一个文明～文明六bgm介绍（恢宏盛大篇）</a></p>\n<blockquote data-pid=\"thDl25kM\">中.美.希腊.波斯</blockquote>\n<p data-pid=\"Lyb-bcDb\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D76864154\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">听点年味十足的游戏歌曲吧！～文明六bgm介绍（动感民谣篇）</a><br></p>\n<blockquote data-pid=\"9My9jzNY\">朝鲜.匈牙利.高棉.努比亚.印加</blockquote>\n<p data-pid=\"iJIIBdaD\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D77815662\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">天下没有不散的筵席～文明六bgm介绍（喧嚣落幕篇）</a></p>\n<blockquote data-pid=\"J0rw2gzs\">英.葡萄牙.西班牙.大哥伦比亚</blockquote>\n<p data-pid=\"HLo6hLZv\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D78779879\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">于呼号里继往开来～文明6bgm介绍篇（野性咆哮）</a></p>\n<blockquote data-pid=\"9FRsXn9T\">有蒙古，祖鲁，毛利，克里，格鲁吉亚</blockquote>\n<p data-pid=\"ieZvOBSl\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D81530085\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">选出您心目中的罗马正统~文明6bgm介绍（精罗狂喜篇）</a></p>\n<blockquote data-pid=\"W79JY-5Z\">罗罗们！</blockquote>\n<p data-pid=\"1ttC12Hy\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D87624521\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">歌在西元前！～文明6bgm介绍（消逝光芒篇）</a></p>\n<blockquote data-pid=\"mVSsB2Al\">那些消逝的光芒~<br>巴比伦，埃及，蒙特祖玛，苏美尔，斯基泰</blockquote>\n<h2>文明6的一些趣事和想法</h2>\n<p data-pid=\"3X8sKmq2\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D87778448\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">做个舔舔听故事的动态</a></p>\n<p data-pid=\"7wReZFzy\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D88210826\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">是兄弟，就一起网吧包间联机文明</a></p>\n<p data-pid=\"YKcDPyzE\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D88362348\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">这位哥聊俺黑盒当作者，聊后好奇做游戏要多少投资</a></p>\n<p data-pid=\"Yqy0nzUe\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D88399313\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">文明6玩家一个人七夕节在大唐不夜城，这张图治好了它的精神内耗</a></p>\n<p data-pid=\"ogr1IWMX\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D88595494\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">做个舔舔听故事的动态</a></p>\n<p data-pid=\"W3lkuVaF\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D74742747\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">浅谈未来政体方向～文明六未来政体解读与畅想</a></p>\n<blockquote data-pid=\"j5SqSw8t\">我以后会对此好好写一个文章</blockquote>\n<p data-pid=\"SHZNtp1d\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D80957280\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">那个，因为文明6关注我的老哥，您看一下</a></p>\n<p data-pid=\"5lAiw6tk\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D82093989\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">妹妹，你也不想被高科技蛮子围城吧</a></p>\n<p data-pid=\"GC7t2Twb\"><b>嗯，还有我对文明6的其他小小的贡献...</b></p>\n<p data-pid=\"etg_I5Qe\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D82228909\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">做个舔舔听故事的动态</a></p>\n<p data-pid=\"zA40mrNC\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D82296669\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">哈哈，我总算让文明6变排面了</a></p>\n<p data-pid=\"Fdko46rp\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D82300996\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">如何用文明6里的民族自信，给长辈安利文明6</a></p>\n<blockquote data-pid=\"6RWM0STg\">哪怕我们所处环境不同，但我们都是臭打游戏的<br>而且我真心喜欢这个当年抑郁的时候玩的游戏...<br>所以我还是想为它做点什么的！<br>（如果文明成必修别骂我就行哈哈）</blockquote>\n<h2>其他</h2>\n<p data-pid=\"olZ1Gn2g\">您有兴趣也可以看我其他帖子，<b>质量您放心</b></p>\n<p data-pid=\"_-eUY5zo\"><b>有说apex的，有说守望先锋的，还有其他游戏（红警3）</b></p>\n<p data-pid=\"A5n8jZ_e\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D77244763\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">pubg入坑apex～谈谈apex相比pubg的进步之处</a></p>\n<p data-pid=\"Dqq4GLHV\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D78391108\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">入坑《守望先锋 归来》前，不妨来重温原作里我们习以为常的优秀与感动</a></p>\n<p data-pid=\"A3piFk3U\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D82297137\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">apex的盾王！~纽卡斯尔玩法攻略</a></p>\n<p data-pid=\"pf7C3CJv\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D86364891\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">当ow英雄们太过无聊，纷纷开始参与apex时</a></p>\n<p data-pid=\"nGmBXQTn\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D89191357\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">apex英雄14赛季：枪械全方位超全评级</a></p>\n<p data-pid=\"xoQI22iZ\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D88276193\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">抓内鬼，打鬼子，自由男神立砍国！红警3苏军战役讲了什么？</a></p>\n<p data-pid=\"kaFQwxMl\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D88245665\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">一篇极其正经却又奇怪的：fps实力提升文！</a></p>\n<p data-pid=\"H-71Vfd_\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D87014227\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">流量密码，派派前传，fps宝藏，恋爱养成～是泰坦陨落！</a></p>\n<p data-pid=\"sqwy4rrS\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D86546841\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">趁着夏促来入坑红警3吧！感受红2的传承，与匠意的革新</a></p>\n<p data-pid=\"50rU6p71\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D75984120\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">杂谈：与红警2比，为什么红警3不火</a></p>\n<blockquote data-pid=\"U51TSDOd\">我守望最高算百强自由人，没想到吧这两种极端的游戏咱都玩的可以[cube_酷]</blockquote>\n<p data-pid=\"8S3zTF3S\"><b>有说氛围的，有说价值观的，有分享旅游的</b></p>\n<p data-pid=\"SbkgGh2K\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D88043094\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">盒流量密码～勇敢的心！</a></p>\n<p data-pid=\"eYg-aeZw\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D79959358\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">聊聊这个800w换来的盒子吧</a></p>\n<p data-pid=\"u7p8DEHL\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D81239133\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">黑盒氛围杂谈（3）～女性冲浪指南，与环境分析建议</a></p>\n<p data-pid=\"vxSI-DbL\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D81239090\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">黑盒氛围杂谈～鄙视链play，会让你更帅吗</a></p>\n<p data-pid=\"7eaiBw1o\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D82824903\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">快来烂怂西安，奖励自己亿次美食吧！</a></p>\n<p data-pid=\"I-UNei9y\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D82964120\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">给您讲讲：这烂怂西安，周围有啥好转滴！</a></p>\n<p data-pid=\"6RKmsfhy\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D83243295\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">华山旅行小tip</a></p>\n<p data-pid=\"H-NOuHo_\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D88022501\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">突然翻到去年和一个东北女生的延吉旅游日记哈哈，希望对你有用</a></p>\n<p data-pid=\"az-aE56o\"><b>有介绍形形色色的人的，有分享趣事的</b></p>\n<blockquote data-pid=\"IzwlXiOA\"><a href=\"https://link.zhihu.com/?target=https%3A//api.xiaoheihe.cn/v3/bbs/app/api/web/share%3Flink_id%3D89255174\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">我的奇葩自传/有趣的人合集</a></blockquote>\n<p data-pid=\"aXcKnDa0\"><b>全部在这里，我就是个奇葩[cube_笑cry]</b></p>\n<p data-pid=\"SjITT78P\">收藏此贴，方便您只看文明6</p>\n<p data-pid=\"R9zpW8WP\">希望这里的每个文章，都能触发玩文明6的您的尤里卡！</p>\n<p data-pid=\"fAmVNFbJ\">以后赚钱了，哪怕没啥能更新的，也会给大家roll文明[cube_滑稽]</p>\n<h2>谢谢观看！</h2>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zuo-ge-tian-gou-ting-gu-shi?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">做个舔舔听故事</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/563873566?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"一日一技 | 怎样将 iPhone 备份保存到 Mac 的外部存储设备","date":"2022-10-13 06:22:25","description":"Matrix首页推荐Matrix是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选Matrix最优质的文章，展示来自用户的最真实的体验和观点。文章代表作者个人观点 ...<a href=\"https://sspai.com/post/76016\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/76016"},{"title":"獭可派 | 远离职业病，我们换一种方式办公","date":"2022-10-13 02:27:00","description":"Prime订阅会员请由通知中心系统消息处领取专属优惠券。Prime订阅会员请由通知中心系统消息处领取专属优惠券。Prime订阅会员请由通知中心系统消息处领取专属优惠券。Prime订阅会员请由通知中心系 ...<a href=\"https://sspai.com/post/76155\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/76155"},{"title":"iPhone 14 Pro Max两周体验，除了灵动岛，还有哪些惊喜？","date":"2022-10-12 12:03:09","description":"\n<p data-pid=\"w7XJeXNC\">“你这是iPhone 14？”在老家玩iPhone 14 Pro Max时，旁边的侄女看着我手上的手机问了我。她是一位上六年级的小学生，虽然不太清楚我手上的iPhone具体是哪个型号，但是却依旧一眼就看出我手中的是最新款的iPhone手机，可能这也是部分人入手iPhone 14 Pro系列的原因之一。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-1589a396eccf519491db94781458069f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"593\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic4.zhimg.com/v2-1589a396eccf519491db94781458069f_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"OMN5xpGZ\">而iPhone 14 Pro/Pro Max辨识度之高，无非就是因为与众不同的屏幕“灵动岛”，这也是近几年iPhone手机外观最大的改变之一。在iPhone 14系列发布会当天，iPhone 14 Pro系列的“灵动岛”便引发了争议，有人对于这个灵动岛的设计大为赞赏，但也有人认为是“脱裤子放屁一般优雅”。</p>\n<h2><b>灵动岛</b></h2>\n<p data-pid=\"2pXIOPPF\">在使用iPhone 14 Pro Max两周之后，对于这个“灵动岛”我也有了更进一步的认识，当然这其中有好有坏。我想说的是，至少在现阶段，没有更好的手机全面屏方案情况下，“灵动岛”确实是一个值得称赞的功能，它将原本是缺点的挖孔屏，通过软件的方式赋予了它新的有趣且有用的交互体验。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-b180079000c9795a30b16e4faba594a8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"593\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic1.zhimg.com/v2-b180079000c9795a30b16e4faba594a8_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"HawKTXHM\">那“灵动岛”可以做什么呢？</p>\n<p data-pid=\"8rnYJJBZ\">在乘坐高铁、汽车、地铁、公交时，打开网易云音乐听歌，退出音乐软件时，正在播放的音乐就会在“灵动岛”弹窗显示，长按弹出弹窗，可以快速切换歌曲，点击可以进入音乐播放界面。我喜欢这个功能设定，以往在聊天时切歌还需要退出聊天界面，进入音乐软件才可以，而现在可以直接点击“灵动岛”就可以切歌，非常方便。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-f73d548c4f46d8d9e8ec6ca1097c69f0_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"504\" data-thumbnail=\"https://pic1.zhimg.com/v2-f73d548c4f46d8d9e8ec6ca1097c69f0_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic1.zhimg.com/v2-f73d548c4f46d8d9e8ec6ca1097c69f0_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"T0-tpmRM\">“灵动岛”还可以显示地图导航的信息，在使用苹果自带的地图软件导航时，退出地图软件后，灵动岛可以直接显示导航行进的方向，比如向左、向右等。不过需要注意的是，类如高德地图的第三方导航软件，灵动岛的弹窗只能显示正在导航的图标，无法显示出带有方向的导航图标。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-c606d66fc96b53dc99e073b901398947_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"504\" data-thumbnail=\"https://pic4.zhimg.com/v2-c606d66fc96b53dc99e073b901398947_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic4.zhimg.com/v2-c606d66fc96b53dc99e073b901398947_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"rxdJUPOi\">如果同时后台运行两个软件，比如网易云音乐+地图导航，此时“灵动岛”的弹窗就会一分为二，变成“两个岛”，点击对应图标的岛就会进入对应的应用界面。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-36485897b6a36abda2b55ee8fe63faeb_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"504\" data-thumbnail=\"https://pic4.zhimg.com/v2-36485897b6a36abda2b55ee8fe63faeb_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic4.zhimg.com/v2-36485897b6a36abda2b55ee8fe63faeb_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"0mJmboUx\">“灵动岛”除了显示以上弹窗以外，在给手机充电、人脸解锁、连接AirPods时，都会有弹窗显示。不过支持第三方应用弹窗的并不多，好在现在苹果已经开放了“灵动岛”的API，只能期待后续第三方软件尽快适配吧。</p>\n<p data-pid=\"XYlXZDhg\">在播放音乐或者打电话时，“灵动岛”的弹窗会有一个音频律动的显示，声音越大，律动的幅度也就越大，动画细节设计比较细腻。另外当前置摄像头、麦克风工作时，“灵动岛”区域会显示出绿色、黄色的提示灯，由此也可判断出摄像头以及麦克风是否在工作，保护隐私。</p>\n<p data-pid=\"l5jYkKJQ\">需要注意的是，当“灵动岛”处于工作状态时，截图会将“灵动岛”弹窗一起保存下来，虽然看起来不太好看，不过你也可以用这种方式告诉别人你换了新的iPhone手机。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-55fc4997ecb33d93335e81417f54c01e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"593\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic3.zhimg.com/v2-55fc4997ecb33d93335e81417f54c01e_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"lfYvnMHt\">仔细观看屏幕“灵动岛”，其实会发现它就是1个“！”感叹号形状的挖孔，只不过为了美观，将感叹号之间的区域采用涂黑处理，由于“硬件的黑”与“软件的黑”存在不同，在户外的时候会有明显的色差，可以感觉到“感叹号”的挖孔区域黑色更深，不过室内挖孔区域的色差没有那么明显。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-a862bb655adeaffbbb4f3e1700bae4fa_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"593\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic3.zhimg.com/v2-a862bb655adeaffbbb4f3e1700bae4fa_r.jpg\"></figure><h2>\n<b>熄屏显示</b><br>\n</h2>\n<p data-pid=\"KYXtGuXF\">除了灵动岛以外，iPhone 14 Pro Max的“熄屏显示”也是带来了新的体验，虽然这个功能在安卓手机中早已存在，但是在iPhone手机中还是首次，而且与安卓手机的熄屏显示还有些不同。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-1bdfd88eb6f5d310cfd68efe30043672_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"504\" data-thumbnail=\"https://pic3.zhimg.com/v2-1bdfd88eb6f5d310cfd68efe30043672_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic3.zhimg.com/v2-1bdfd88eb6f5d310cfd68efe30043672_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-b6e25ecdbd4e2a2f894da741c8696db4_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"504\" data-thumbnail=\"https://pic1.zhimg.com/v2-b6e25ecdbd4e2a2f894da741c8696db4_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic1.zhimg.com/v2-b6e25ecdbd4e2a2f894da741c8696db4_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"fWmSdnu7\">iPhone 14 Pro Max默认“熄屏显示”就是将锁屏的界面变暗了一些，看起来就像没有熄屏一样，所以一开始我会再去按下电源键，结果就把屏幕点亮了，后来也就习惯了。不过我会搭配锁屏界面的小组件一起使用，比如添加股市、天气等小组件，在不点亮屏幕的情况下，就可以直接看到天气、股市等情况。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-82268bbaf17a6da85fe694cfc5d8031a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"593\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic3.zhimg.com/v2-82268bbaf17a6da85fe694cfc5d8031a_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"qZoOVCFx\">除此之外，部分第三方软件在iPhone 14 Pro Max的“熄屏显示”中也会有“神奇的反应”，比如网易云音乐在锁屏界面播放时，会生成带有封面的播放界面，背景颜色会随着封面不同而变化，很有艺术感觉，手机熄屏时锁屏界面会变暗，但是播放的封面效果依旧显示。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-59ed3a60503d6aadef7096a79b08c8d1_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"504\" data-thumbnail=\"https://pic2.zhimg.com/v2-59ed3a60503d6aadef7096a79b08c8d1_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic2.zhimg.com/v2-59ed3a60503d6aadef7096a79b08c8d1_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"00wL_hwW\">而在使用iPhone 14 Pro Max自带的地图导航时，将手机锁屏，导航的地图信息会在锁屏界面上继续显示，在锁屏情况下依然可以正常导航。将手机熄屏，锁屏界面的地图画面会消失，只保留上下的方向、距离等导航信息。当我拿起手机时，手机会自动亮屏并显示地图导航画面，这种导航方式很方便。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-57cc43b5e135cef219937cdbda600b53_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"504\" data-thumbnail=\"https://pic4.zhimg.com/v2-57cc43b5e135cef219937cdbda600b53_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic4.zhimg.com/v2-57cc43b5e135cef219937cdbda600b53_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"GnmhF-fK\">当然，熄屏显示自然也伴随着更高的耗电量，对于手机续航时长会有一些影响。不过iPhone 14 Pro Max的续航能力确实够顶，轻度使用甚至可以达到24小时，在我使用的这两周内，iPhone 14 Pro Max的续航表现我非常满意，即便是出远门，做高铁、汽车，抵达目的地时手机电量依然很充足，根本不需要携带充电宝。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-172a300f79ea1f51dc793ac5d3dfcf37_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"593\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic4.zhimg.com/v2-172a300f79ea1f51dc793ac5d3dfcf37_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"Zvg32SZN\">如果不喜欢iPhone 14 Pro Max的熄屏显示，也可以在手机设置-显示与亮度中将“始终显示”关闭即可。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-48f09c41e1c1fa1ad946d6674b489729_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"971\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic2.zhimg.com/v2-48f09c41e1c1fa1ad946d6674b489729_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<h2><b>4800万像素主摄</b></h2>\n<p data-pid=\"0qn7GhnD\">4800万像素也是iPhone 14 Pro Max重磅的升级之一，万年的1200万像素终于被抛弃了，相比上一代传感器尺寸增大65%。不过需要注意的是，iPhone 14 Pro Max只有主摄是4800万像素，其它两个摄像头依旧为1200万像素，但是有所升级。相比上一代，iPhone 14 Pro Max的后摄模组看起来更大，更凸起，暗示着其提升的影像实力。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-5b574c8c5d23cfcef66f25eb8811f6b5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"593\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic2.zhimg.com/v2-5b574c8c5d23cfcef66f25eb8811f6b5_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"99anT9ws\">iPhone 14 Pro Max虽然配备了4800万像素的主摄，但是默认拍摄依旧是1200万像素的成像，不过照片是由4800万像素四合一而来，另外主摄变成了24mm焦段，拍摄视角会更广一些，画质一如既往的偏向真实风格。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-86e182495e80bc9b28d0af65b06ae15b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"668\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic4.zhimg.com/v2-86e182495e80bc9b28d0af65b06ae15b_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-1227c05968a4a9608bfee7258ea2d729_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"667\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic2.zhimg.com/v2-1227c05968a4a9608bfee7258ea2d729_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-df4c5959d003479d8b782f952a537657_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"667\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic4.zhimg.com/v2-df4c5959d003479d8b782f952a537657_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"hWXxM_-o\">如果想要拍摄4800万像素，需要进入手机设置-相机，在格式一项中打开Apple ProRAW选项，将ProRAW分辨率选择为48MP，也就是说，只有在RAW格式才可以拍摄4800万像素照片。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-2e3424b54abf9f6deb5c9ac53672381e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"971\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic3.zhimg.com/v2-2e3424b54abf9f6deb5c9ac53672381e_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"FI9Xo2u1\">RAW格式的照片一般是用来方便摄影师后期处理，如果不会后期处理，也没有关系，iPhone 14 Pro Max直出的RAW照片也可以使用，可以直接发朋友圈或者裁切处理，图片的色彩与默认1200万像素拍摄模式下大致相同，也不需要手动调节色彩，这也降低了大家使用RAW照片的门槛。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-08605d0b65028df593fc78fd9cd7a643_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"668\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic4.zhimg.com/v2-08605d0b65028df593fc78fd9cd7a643_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"VlrNjWpq\">上图：iPhone 14 Pro Max RAW照片直出</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-f544f6942657788e1d1aecdba60cb1c9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"668\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic2.zhimg.com/v2-f544f6942657788e1d1aecdba60cb1c9_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"XMSg9dug\">上图：iPhone 14 Pro Max RAW照片裁切</p>\n<p data-pid=\"vXkyzY5X\">不过需要注意的是，在拍摄4800万像素RAW格式照片时，拍摄时间会变长，大约需要3s左右。而且所拍摄的RAW照片的数据超大，一张照片都在50MB以上，会占用更多的手机存储空间。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-9bc28a2679262c3ba27dc7cd9ff0cb92_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"928\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic3.zhimg.com/v2-9bc28a2679262c3ba27dc7cd9ff0cb92_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"oKc1LIKi\">对比iPhone 14 Pro Max的1200万像素以及4800万像素RAW格式的照片，放大之后可以明显感觉到4800万像素的更为清晰。不过对比iPhone 13 Pro，iPhone 14 Pro Max的1200万像素清晰度虽有提升，但并不明显。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-75606919932ad9e71059a76bf0f84c58_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"668\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic1.zhimg.com/v2-75606919932ad9e71059a76bf0f84c58_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-77ee0c5113664055cda0355926b8a038_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"601\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic1.zhimg.com/v2-77ee0c5113664055cda0355926b8a038_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"BKu9Sl5E\">上图：iPhone 14 Pro Max 4800万像素裁切样张</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-50ce0981059c3d99cb0c2a9a88aff9fa_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"601\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic3.zhimg.com/v2-50ce0981059c3d99cb0c2a9a88aff9fa_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"8swx-Jtk\">上图：iPhone 14 Pro Max 1200万像素裁切样张</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-a21ccd77b4fa86d924c29a47f81f5849_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"601\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic2.zhimg.com/v2-a21ccd77b4fa86d924c29a47f81f5849_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"JOB3uZMY\">上图：iPhone 13 Pro Max 1200万像素裁切样张</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-57e1e0361d3bb3175bab5868d9cd8b98_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"668\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic1.zhimg.com/v2-57e1e0361d3bb3175bab5868d9cd8b98_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-99f0138672055174b9ecf9c69d09f6da_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"601\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic3.zhimg.com/v2-99f0138672055174b9ecf9c69d09f6da_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"3GobDM7H\">上图：iPhone 14 Pro Max 4800万像素裁切样张</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-ba9fb855696f6a66e17e9eb079e0cbe7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"601\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic4.zhimg.com/v2-ba9fb855696f6a66e17e9eb079e0cbe7_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"9nfEieNn\">上图：iPhone 14 Pro Max 1200万像素裁切样张</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-d6b35a0039cf69587699b478b2b2f62b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"601\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic4.zhimg.com/v2-d6b35a0039cf69587699b478b2b2f62b_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"TMD2clfC\">上图：iPhone 13 Pro Max 1200万像素裁切样张</p>\n<p data-pid=\"qCKtPNBG\">4800万像素的高像素的加入，让iPhone 14 Pro Max增加了一个2倍的变焦倍数拍摄，等效为48mm焦段，接近50mm焦段更靠近人眼看到的远处画面，用来拍人、拍风景或者街拍都是很好的选择。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-9b8e2e348aa17faf35b628121bbc6c11_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"668\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic2.zhimg.com/v2-9b8e2e348aa17faf35b628121bbc6c11_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-e766c7eaf2eed2e741b3678a2133f65d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"668\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic2.zhimg.com/v2-e766c7eaf2eed2e741b3678a2133f65d_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"zs-rWcsQ\">至于3倍光学变焦1200万像素长焦镜头，焦段为77mm，同样也提供了一个远摄的拍摄视角，但是画质细节一般，长焦也一直都不是iPhone的强项。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-6a103062b27b38b05d2c9d88dabb2fa6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"668\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic3.zhimg.com/v2-6a103062b27b38b05d2c9d88dabb2fa6_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-c5b0c6cbc3d88118c8447cf558f100ee_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"667\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic3.zhimg.com/v2-c5b0c6cbc3d88118c8447cf558f100ee_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-1effa4f5e5120f111b69b2b0f614a846_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"667\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic3.zhimg.com/v2-1effa4f5e5120f111b69b2b0f614a846_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"ExWM93dZ\">iPhone 14 Pro Max在拍摄视频方面主要有两个提升，一是运动模式的防抖，二是电影效果模式加入了4K HDR 24fps的视频拍摄规格。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-d1e63ab71af25a2669c14089c7ffc2d2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"593\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic3.zhimg.com/v2-d1e63ab71af25a2669c14089c7ffc2d2_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"2SB0NqmU\">需要注意的是，在使用运动模式拍摄视频时，iPhone 14 Pro Max手机拍摄时相机预览界面是抖动的，但是视频的防抖效果很赞，画面看起来很稳，另外运动模式拍摄画质进行了裁切，原本的4K画质会变成2.8K（最高）。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-11d0fa5ecd1c29650e25fcefa24d92dd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"593\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic2.zhimg.com/v2-11d0fa5ecd1c29650e25fcefa24d92dd_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-1222fb62bee349899dc64eff7b101391_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"504\" data-thumbnail=\"https://pic2.zhimg.com/v2-1222fb62bee349899dc64eff7b101391_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic2.zhimg.com/v2-1222fb62bee349899dc64eff7b101391_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"FpZxRA30\">图：单手持iPhone 14 Pro Max跑动拍摄</p>\n<p data-pid=\"AUvGDm_O\">对于喜欢手机拍摄短视频的使用者来说，iPhone 14 Pro Max电影模式可以拍摄4K视频算是个惊喜提升，通过电影模式的拍摄效果，手动或自动切换与锁定拍摄人物/主体，用「焦点转换」的方式对准拍摄焦点，借助4K画质可以进行更多的后期处理空间。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-5c9fa23887237fb7b35dcb2f2f4fd692_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"416\" data-thumbnail=\"https://pic3.zhimg.com/v2-5c9fa23887237fb7b35dcb2f2f4fd692_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic3.zhimg.com/v2-5c9fa23887237fb7b35dcb2f2f4fd692_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<h2><b>A16仿生芯片</b></h2>\n<p data-pid=\"4uM22uZE\">iPhone 14 Pro Max搭载的是采用台积电4nm制程工艺的A16芯片，但是从实际体验以及理论性能测试来看，A16芯片相比A15芯片的提升并不大，甚至可以将A16芯片看作是A15芯片的超频版，更多的提升在于功耗的优化，工艺由台积电5nm升级为台积电4nm制程，CPU大核频率由3.2GHz提升至3.46GHz。</p>\n<p data-pid=\"5SjtcSSd\">在GeekBench 5软件测试中，iPhone 14 Pro Max的CPU单核成绩为1871分，多核成绩为5395分。而A15芯片的CPU单核成绩为1734分，多核成绩为4818分，单核性能提升8%左右，多核性能提升12%左右，性能提升不大。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-d928617b3ea0950956feff5195a255ad_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"593\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic2.zhimg.com/v2-d928617b3ea0950956feff5195a255ad_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"LA15XPs0\">iPhone 14 Pro Max在3D Mark的20轮Wild Life Extreme Stress Test压力测试中，最佳循环分数为3359分，最低循环分数为1887分，稳定性只有56.2%。在Wild Life Stress Test的压力测试中，最佳循环分数为9845分，最低循环分数为6257分，稳定性63.6%，表现一般，可能是因为手机温度过高限制了手机性能。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-8b45ae56838781b5ea43c51f94310922_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"971\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic3.zhimg.com/v2-8b45ae56838781b5ea43c51f94310922_r.jpg\"></figure><p data-pid=\"AF9BRTjE\">从理论性能来看，iPhone 14 Pro Max的性能相比上一代A15提升不大，但是即便如此，A16芯片依旧是最强的手机芯片。在《原神》游戏中，虽然iPhone 14 Pro Max已经支持120帧模式，但是即便开启了120帧，游戏中依旧会以60帧运行。将游戏画质调节为极高，帧率设置为60帧，前期还可以维持在60帧运行，但是游戏时间过长，游戏帧率就会下降，同时屏幕亮度也会变暗。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-7030de092099f5e8c1477e6061e4fc97_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"593\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic4.zhimg.com/v2-7030de092099f5e8c1477e6061e4fc97_r.jpg\"></figure><h2>\n<b>总结</b><br>\n</h2>\n<p data-pid=\"HdOjaeVb\">虽然iPhone 14 Pro Max带来的惊喜可能不太多，但是依托于4800万像素影像系统、更好的屏幕表现、强大的A16仿生芯片等方面的提升，它依旧是许多人今年心目中的那个机皇。醒目的“灵动岛”，让别人一眼就能看出来这是新iPhone，满足了“虚荣感”，化腐朽为神奇的灵动岛软件交互，在屏幕无法避开挖孔的情况下，这种手机的交互体验值得称赞，不过“灵动岛”现在支持的软件并不多，期待后续第三方软件的适配。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-584cbadb533b991ea2494afb12d94b39_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"593\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic2.zhimg.com/v2-584cbadb533b991ea2494afb12d94b39_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"u4NN0_OK\">我喜欢iPhone 14 Pro Max手机熄屏显示的锁屏界面风格，网易云以及地图导航的熄屏显示，很有艺术美感与实用性，也期待更多应用能在熄屏上带来新鲜的交互。4800万像素的主摄所拍摄的RAW照片，清晰度提升明显，不过对于普通人来说可能感知不强。至于A16芯片的性能属于小幅提升，但依然是市面上最顶的那款手机处理器。另外iPhone 14 Pro Max依然存在着一些老生长谈的问题，比如手机温度过高时屏幕会自动降亮度，拍摄灯光有鬼影等问题。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-1170163063fe42640308b37284ccba2d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"593\" class=\"origin_image zh-lightbox-thumb\" width=\"890\" data-original=\"https://pic2.zhimg.com/v2-1170163063fe42640308b37284ccba2d_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"YDyVMAP0\">除此之外，iPhone 14 Pro Max还加入了车祸检测功能，当发生车祸时，iPhone 14 Pro Max会自动识别并发出警告，如果手机没人操作，手机便会自动拨打急救电话，虽然这是一个大家都不希望用到的功能，但是却给我们的安全留了一份保障。花费大精力去做一个可能永远不会被使用的功能，可能这就是苹果的人文关怀一直被人啧啧称赞的原因所在。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/itheatre-dian-ke-ji?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">热点科技</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/572846308?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"React 为什么重新渲染","date":"2022-09-06 08:29:00","description":"\n<p>更新（重新渲染）是 React 的重要特性 —— 当用户与应用交互的时候，React 需要重新渲染、更新 UI，以响应用户的输入。但是，React 为什么会重新渲染呢？如果不知道 React 为什么会重新渲染，我们如何才能避免额外的重新渲染呢？</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/186432/20/28325/37613/631725bbEf2ff226e/66b99021df66578b.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/react-re-renders-101/\">https://blog.skk.moe/post/react-re-renders-101/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/react-re-renders-101/"},{"title":"为什么你不应该在 React 中直接使用 useEffect 从 API 获取数据","date":"2022-08-19 08:53:00","description":"\n<p>React 是一个由 Facebook 开源的、可以在任意平台上构建 UI 的 JavaScript 库。在 React 中，一个常见的 Pattern 是使用 <code>useEffect</code> 搭配 <code>useState</code> 发送请求、将状态从 API（React 外部）同步到 React 内部、用于渲染 UI，这篇文章恰恰在向你介绍为什么你不应该直接这么做。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/180676/37/27394/27265/62ff57f2E600b3725/cff75c5fca39bbcc.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/\">https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/"},{"title":"NPM 自动更新版本号","date":"2022-08-04 05:00:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>ChenYFan 大佬的文章：<a href=\"https://blog.cyfan.top/p/d3c51290.html\">SpeedUp!使用黑科技为你的网站提速</a> 有提到过将 Hexo 博客的全部静态文件上传至 NPM 达到加速效果。</p>\n<p>但是 NPM 版本号不能重复，而且为了精准命中缓存和防止边缘 <code>@latest</code> 缓存过长，就必须指定版本号。</p>\n<p>本人在 <a href=\"https://blog.yfun.top/posts/2876015612/\">我的图床解决方案</a> 一文中使用的方法是 <code>npm version patch</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804133426.png\"></p>\n<p>但这个方法也有一些弊端，比如 <code>patch</code> 只会更新 <code>z</code> 位数的版本号，而且并不会上传至仓库，很可能会出现版本号冲突导致上传失败。这就是为什么最后还需要重新推送 Git 提交。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E8%AF%95%E8%AF%95%E7%9C%8B\" class=\"headerlink\" title=\"试试看\"></a>试试看</h2>\n<p>NPM 版本号遵循 <code>semver</code> 规范，格式为 <code>major.minor.patch</code>。</p>\n<p>为了在获取最新版本号的时候不发生混乱，我选择先获取最新的版本号。</p>\n<blockquote><p>记得把 <code>cky-blog-static</code> 改成自己的项目名。</p></blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>获取到最新版本号后，就可以对版本号进行分析。</p>\n<p>以 <code>1.4.7-b541af2ea284a39da0bbf63b88fdb65c</code> 为例，先按 <code>major.minor.patch</code> 分离。当然，也需要考虑版本号后还有 <code>build metadata</code> 的情况。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\"><span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br></pre></td></tr></table></figure><p><del>为了版本号好看些</del>，可以通过判断实现满十进一。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位小于 9，直接 +1</span></span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">} <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位大于等于 9，y 位小于 9，y+1, z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">} <span class=\"keyword\">else</span> {</span><br><span class=\"line\"><span class=\"comment\">// z 大于等于 9，y 大于等于 9，x+1,y=0,z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>最后，重新拼接版本号。如果担心服务器缓存版本号导致冲突，还可以加上一些随机字符串。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br></pre></td></tr></table></figure><p>将最新的版本号信息重新写入 <code>package.json</code> 文件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">packageJson.version = newVersion;</span><br><span class=\"line\"><span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p><del>直接 CV 代码！</del></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 更新 package.json 版本号</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fetch = <span class=\"built_in\">require</span>(<span class=\"string\">\"node-fetch\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> md5 = <span class=\"built_in\">require</span>(<span class=\"string\">\"js-md5\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> update = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">    verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(newVersion);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">    packageJson.version = newVersion;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">    fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Complete!!\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">update();</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%90%8E\" class=\"headerlink\" title=\"最后\"></a>最后</h2>\n<p>如果是 Hexo 文件部署，就可以直接把文件直接丢在项目根目录，Action 集成部署加上：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">node update.js</span><br></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804135818.png\"></p>\n<p><del>Blog 半年没更新，除除草 --(....</del></p>\n","link":"https://blog.yfun.top/posts/2022/auto-update-npm-version/"},{"title":"我有特别的 DNS 配置和使用技巧","date":"2022-07-28 15:31:00","description":"\n<p>众所周知，DNS 的作用与电话簿类似，将人类可读的域名映射到机器可读 IP 地址、使人更方便地访问互联网。DNS 是非常重要的互联网基础设施，对于改善上网冲浪的体验中的重要程度不容小觑。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/96381/31/31172/23930/62e2ab5bE554d388b/37027f4a03351b9e.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/i-have-my-unique-dns-setup/\">https://blog.skk.moe/post/i-have-my-unique-dns-setup/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/i-have-my-unique-dns-setup/"},{"title":"优化博客的累计布局偏移（CLS）问题","date":"2022-06-07 17:24:00","description":"\n<p>距离上一篇文章发布已有四个月了，是时候写几篇文章给博客除草了。上一次我介绍了我如何迁移、重构了我的博客的架构，这次我想来谈谈我在重构中优化和打磨访客体验时解决的一个问题。我的博客优化之旅 图片 lazyload 的学问和在 Hexo 上的最佳实践 我的博客有多快？ 天下武功，唯快不破 —— 我是这样优化博客的 ...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/206311/26/14625/38940/629f7f81Eb11312de/b1e67f07b1cc9bc7.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/fix-blog-cls/\">https://blog.skk.moe/post/fix-blog-cls/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/fix-blog-cls/"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\r\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\r\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\r\n    return new Date(date.toLocaleString('en-US', { timeZone }))\r\n}\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\r\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\r\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\r\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: '2-digit',\r\n        hour12: false,\r\n        timeZone\r\n    })\r\n    return {\r\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\r\n        convert (date) {\r\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\r\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\r\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\r\n        }\r\n    }\r\n}\r\n\r\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\r\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\r\n    return converter.convert(new Date(secDate), tzName) - secDate\r\n}\r\n\r\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\r\ncmn-Hans-SG = 中文普通话-简体-新加坡\r\ncmn-Hant-TW = 中文普通话-繁体-台湾\r\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\r\ncmn = 中文普通话\r\n\r\nzh-Hans = 中文-简体\r\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\r\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\r\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\r\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\r\n}\r\n\r\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long'\r\n}\r\nconst now = new Date()\r\n\r\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\r\n\r\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\r\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\r\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\r\n\r\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\r\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\r\n\r\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\r\n\r\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\r\n\r\nzhCNFormatter.format(now) // 2021年10月13日星期三\r\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\r\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\r\n\r\njaFormatter.format(now) // 2021年10月13日水曜日\r\njaAltFormatter.format(now) // 令和3年10月13日水曜日\r\n\r\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\r\n// {locale: 'zh-CN', calendar: 'gregory', …}\r\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\r\n     // 基于一个固定日期计算，这里选择 1970.1.1\r\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\r\n    const base = new Date(1970, 0, 1).getTime()\r\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\r\n    return Array.from({ length: 7 }, (_, day) =&gt; (\r\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\r\n    ))\r\n}\r\n\r\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\r\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\r\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    second: 'numeric',\r\n}).formatToParts(new Date())\r\n// [\r\n//     { type: 'year', value: '2021' },\r\n//     { type: 'literal', value: '年' },\r\n//     { type: 'month', value: '10' },\r\n//     { type: 'literal', value: '月' },\r\n//     { type: 'day', value: '13' },\r\n//     { type: 'literal', value: '日' },\r\n//     { type: 'weekday', value: '星期三' },\r\n//     { type: 'literal', value: ' ' },\r\n//     { type: 'dayPeriod', value: '上午' },\r\n//     { type: 'hour', value: '1' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'minute', value: '00' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'second', value: '00' }\r\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\r\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\r\n}\r\n\r\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\r\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\r\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\r\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\r\n  timeZone: 'America/Los_Angeles',\r\n  year: 1995,\r\n  month: 12,\r\n  day: 7,\r\n  hour: 3,\r\n  minute: 24,\r\n  second: 30,\r\n  millisecond: 0,\r\n  microsecond: 3,\r\n  nanosecond: 500,\r\n  calendar: 'iso8601'\r\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"\n<p>WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将其表述为 \"An API for accessing Public Key Credentials\"，即“一个用于访问公钥凭证的 API”。WebAuthn 很强大，强大到被认为是 Web 身份认证的未来（当然，也很复杂）。你有想过通过指纹或者面部识别来登录网站吗？WebAuthn 就能在保证安全和隐私的情况下让这样的想法成为现实。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\" alt=\"通过 WebAuthn 调起 Windows Hello 登录网站\" width=\"1912\" height=\"966\" class=\"aligncenter size-full wp-image-2215\"></a>\n<p>你可以在<a href=\"https://webauthn.io/\" rel=\"noopener\">这个网站</a>自行体验 WebAuthn。或者，如果你有一个使用 WordPress 的站点，可以尝试一下 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WP-WebAuthn</a> 这款插件，它可以为你的站点启用 WebAuthn 登录。这是我为了写这篇文章而练手开发的插件，本文中的部分示例代码也来自这款插件。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"wp-webauthn\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/wp-webauthn\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>WebAuthn Level 1 标准已在 2019 年 3 月成为 W3C 推荐标准，而 Level 2 标准目前也已进入编辑草案阶段，但互联网上有关它的中文资料却仍然很少，国内也鲜有网站支持这一新标准。于是，在抱着各种英文资料和标准啃了几天以后，我折腾出了这篇文章。</p>\n<p>在这篇文章里，我将会从最基本的概念开始，逐渐深入 WebAuthn，直到解码公钥等深层细节。这可能是你能找到的有关 WebAuthn 最详细最基础的中文文章，也很可能是最长的。在开始之前，<strong>我强烈建议你打开菜单中的文章目录浏览一遍，以对这篇文章涉及的内容有所了解。</strong>如果你只是想了解如何简单地在你的项目中添加对 WebAuthn 的支持，那么“<a href=\"https://flyhigher.top/#webauthn-overview\">浅谈 WebAuthn</a>”部分就是你要找的；如果你想了解更多关于 WebAuthn 的底层细节，那么你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分。</p>\n<p>由于在本文写作时 WebAuthn Level 2 规范尚未定稿，<strong>这篇文章我们将只专注于 Level 1 规范。</strong></p>\n<p>这篇文章最后更新于 2020.9 ，在你读到这篇文章时，部分事实可能已经发生改变，请注意判断。</p>\n<p><strong>更新日志：</strong></p>\n<ul>\n<li>2021.1.16 添加 Chrome 开发工具信息</li>\n<li>2020.9.17 更新 iOS/iPad OS 兼容性信息</li>\n<li>2020.5.20 添加部分无用户名认证的平台兼容性内容</li>\n<li>2020.5.15 添加部分 <code>extensions</code> 相关内容与链接；添加全局凭证 ID 唯一内容；添加凭证 ID 查找相关内容；添加“从 U2F 认证迁移”一节</li>\n<li>2020.4.13 更新与修正 <code>userVerification</code> 相关内容；添加部分 Firefox 相关内容</li>\n<li>2020.3.23 文章发布</li>\n</ul>\n<p>那么让我们开始吧。<span></span></p>\n<h1>浅谈 WebAuthn</h1>\n<p>在这个部分里，我们将会从基础概念开始，了解有关 WebAuthn 和密码学的一些基础知识，并最终使用第三方库实现基础的 WebAuthn 认证。如果你已经对这些内容有所了解了，可以跳到“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”继续阅读。</p>\n<h2>为什么使用 WebAuthn</h2>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\" alt=\"钓鱼邮件\" width=\"709\" height=\"693\" class=\"aligncenter size-full wp-image-2162\"></a>\n<p>相信你一定收到过类似的邮件吧？只要你点进那个最显眼的链接，你就会进入一个设置好的圈套——钓鱼网站。如果你一时糊涂在这类网站上填写了你的账号和密码，bingo，你的账号就不再是你的账号了。</p>\n<p>不过，就算你警惕心再强，也无法避免密码泄露事件。Twitter, Facebook 等都爆出过明文密码泄露事件，证明再大的公司或组织也无法避免密码泄露问题。雪上加霜的是，很大一部分用户都非常喜欢使用重复密码，这就导致一次密码泄露会牵连很多网站，用户的账户安全性完全无法得到保证。</p>\n<p>那么，有什么办法解决这些问题吗？<strong>彻底解决的方法只有一个，那就是抛弃密码。</strong>可是没有密码还怎么验证用户身份呢？这就是 WebAuthn 的用武之地了。</p>\n<p><del>没有密码的好时代，来临力！</del></p>\n<h2>什么是 WebAuthn</h2>\n<p>那么到底什么是 WebAuthn 呢？如开头所说，WebAuthn 是“一个用于访问公钥凭证的 API”，网站可以通过这个 API 进行一些高安全性的身份验证。WebAuthn 一个最常见的应用就是用于网站登录时的 2FA（双重因素验证）甚至是无密码登录。通过网页调用 WebAuthn，在不同平台下，<strong>我们可以实现通过 USB Key、指纹、面部甚至虹膜扫描来认证身份，同时确保安全和隐私。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\" alt=\"WebAuthn 可使用的各种身份认证方式\" width=\"1294\" height=\"566\" class=\"aligncenter size-full wp-image-2213\"></a>\n<p>WebAuthn 标准是 FIDO2 标准的一部分，而 FIDO2 则是由 FIDO 联盟和 W3C 共同推出的 U2F（现称作 FIDO1）的后继标准，旨在增强网络认证的安全性。</p>\n<blockquote><p>你可能了解过 U2F，那么 U2F 和 FIDO2 的区别在哪里呢？从名字上可以看出，U2F，即“通用第二因素协议”，是专注于作为密码后的第二道屏障的，而 FIDO2 增加了单因素认证功能，这意味着使用 FIDO2 可以完全替代密码，真正实现无密码登录。</p></blockquote>\n<p>FIDO2 标准主要包括四个部分，其一是用于网站和访客设备交互的 WebAuthn，而 Client to Authenticator Protocol 2（CTAP2，客户端-认证器协议）作为 WebAuthn 的补充，则是用于访客的设备和认证器交互的协议。标准的其他两个部分则是 U2F 和 UAF 规范。在这篇文章中，我们只关心 WebAuthn，不会涉及 CTAP, U2F 和 UAF 的相关知识。如果你对这段话中的一些概念不了解，不要紧张，接下来我们就来谈谈 WebAuthn 中一些常用的术语和概念。</p>\n<blockquote><p>WebAuthn 只能在安全上下文中使用，也就是说，页面需要使用 HTTPS 协议或是处于 <code>localhost</code> 中。</p></blockquote>\n<h2>常用术语和概念</h2>\n<p>WebAuthn 中有许多不常碰到的术语，不过我只会在这里介绍一些常用的术语和概念——如果你只是希望做出一个简单的实现，那么了解这一段中的一些概念就足够了。同时，由于我实在没能找到一部分术语的通用翻译，有一些术语我按着自己的理解尽可能地翻译了，有任何问题请告诉我。</p>\n<p>在一个完整的 WebAuthn 认证流程中，通常有这么几个角色：</p>\n<ul>\n<li>Relying Party 依赖方 (RP) ：指服务提供方，即网站</li>\n<li>User 用户：正准备登录的你</li>\n<li>Authenticator 认证器：通常指 USB Key 或是设备内置的指纹扫描器、虹膜扫描器、面部识别装置等，正是它们在使用流程中代替了密码甚至是用户名</li>\n<li>User Agent 用户代理：通常指浏览器或系统，负责与认证器交互</li>\n</ul>\n<p>认证过程通常分为两种：</p>\n<ul>\n<li>Registration Ceremony 注册仪式：用户向账户上添加认证器</li>\n<li>Authentication Ceremony 验证仪式：用户通过已注册的认证器验证身份</li>\n</ul>\n<p>同时，认证过程中还会产生这些内容：</p>\n<ul>\n<li>Challenge 挑战：通常是一串随机字符串</li>\n<li>Public Key Credential 公钥凭证：由认证器产生的凭证，在技术上代替了密码</li>\n<li>Attestation 证明：注册时认证器产生的验证数据</li>\n<li>Assertion 断言：验证时认证器产生的验证数据</li>\n</ul>\n<blockquote><p><strong>请注意区分证明 (Attestation) 和断言 (Assertion)</strong>，特别是在这两个单词有些相似的情况下。在 WebAuthn 中，它们是不同过程中的类似概念，但并不相同。</p></blockquote>\n<p>如果你对于这些内容不是很理解，没有关系，我们会在“<a href=\"https://flyhigher.top/#how-to-webauthn\">使用流程</a>”一节中将这些概念放到实际情况中解释，你只要先区分这些概念即可。</p>\n<h2>安全性的基础</h2>\n<p>WebAuthn 为什么安全？和 HTTPS 一样，WebAuthn 使用非对称加密的思路来保证安全性，但侧重点又有所不同。要理解 WebAuthn 的认证流程，我们必须对非对称加密有所了解。如果你对非对称加密比较熟悉了，就直接跳到下一段吧。</p>\n<p>WebAuthn 的核心在于“认证”，即保证产生了凭证的认证器是用户的认证器，而不是第三方在伪造凭证。但为什么要使用非对称加密呢？我们可以先来看看对称加密。</p>\n<p>让我们假设小明和小红相互写信，见不到对方。这天小红突然想，给自己写信的人是不是真的小明呢？于是小红要求对方向小红证明自己是小明。怎么证明呢？他们商量出来这么一套方案：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明和小红商量一个统一的密码和密钥</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明用提前和小红商量好的密码和密钥加密文本后发回给小红</li>\n<li>小红使用相同的密码和密钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和密钥</li>\n</ol>\n<blockquote><p>在密码学中，我们通常把“加密算法”称为密码 (code)，和通常登录时用的密码 (password) 并非同一个概念。</p></blockquote>\n<p>在这种情况下，<strong>只要密钥不泄露</strong>，即拥有正确密钥的只有小明和小红，那么小红就能确定对方一定是小明。但这样的问题也很明显，如果小明和小红不能见面，那么他们就必须先以明文交换密码——<strong>在这个过程中一旦有人窃取到了密码，这个认证就无效了。</strong></p>\n<p>这时我们就需要使用<strong>非对称加密</strong>来拯救破碎的信任了。非对称加密的基础是一对密钥，也就是公钥和私钥，它们是互相关联但（几乎）无法互相推导的。在非对称加密的过程中，选择相同的密码后，使用私钥加密明文得到的密文只能由对应的公钥解密，无法使用私钥解密，同时这个过程反过来也是成立的。</p>\n<blockquote><p>本文的核心并不是非对称加密算法，因此不会详述非对称加密在数学上的证明，若有兴趣可以自行了解。</p></blockquote>\n<p>这就完美解决密钥泄露的问题了。让我们回过头来看之前的例子。现在小明和小红决定使用非对称加密来证明身份，过程如下：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明提前生成一对公私钥，将公钥发送给小红，私钥自己保管，同时商量好统一的密码</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明使用商量好的密码和自己的私钥加密文本，发送给小红</li>\n<li>小红使用相同的密码和小明的公钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和私钥</li>\n</ol>\n<p>在这种情况下，<strong>只要私钥不泄露</strong>，那么小红解密得到的文本和之前发送的一致，那么就可以证明收到的密文一定是由小明加密后发送过来的。而在整个过程中，私钥都没有离开过小明，更没有经过传输，也就几乎没有泄露的可能了。这时，小红终于可以确定对面和她通信的人的确是小明了。</p>\n<p>题外话：HTTPS 虽然也应用了非对称加密，但 HTTPS 更侧重于“加密”而非“认证”，因此思路上会有些许差异。要了解关于 HTTPS 和非对称加密的更多信息，你可以阅读我之前写的这篇文章：</p>\n<p></p>\n<div class=\"mdx-post-cot\" data-mdxposturl=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdx-post-wait-out-c2\"><div class=\"mdx-post-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<span></span>\n<h2>使用流程</h2>\n<p>了解了非对称加密，我们就可以来看看 WebAuthn 的认证流程了。</p>\n<p>和普通的密码一样，<strong>使用 WebAuthn 分为两个部分，注册和验证。</strong>注册仪式会在依赖方中将认证器的一些信息和用户建立关联；而验证仪式则是验证这些信息以登确保是用户本人在登录。根据上一节的思路，我们可以知道，注册仪式就是认证器生成一对公私钥，然后将公钥交给依赖方；而验证仪式是依赖方发送给认证器一段文本，要求认证器用自己的私钥加密后发回以验证。</p>\n<p>在实际情况中，WebAuthn 是基于<strong>挑战-应答模型</strong>工作的。要更好地理解，我们直接来看具体流程。先来看看注册的流程。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\" alt=\"WebAuthn 注册流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2224\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的注册请求</li>\n<li>依赖方向浏览器发送挑战、依赖方信息和用户信息</li>\n<li>浏览器向认证器发送挑战、依赖方信息、用户信息和客户端信息以请求创建公钥凭证</li>\n<li>认证器请求用户动作，随后创建一对公私钥，并使用私钥签名挑战（即证明），和公钥一起交给浏览器</li>\n<li>浏览器将签名后的挑战和公钥发送给依赖方</li>\n<li>依赖方用公钥验证挑战是否与发送的一致，如果成功则将公钥与用户绑定，注册完成</li>\n</ol>\n<p>我也做了一个交互式的 Demo，你可以对照流程来更好地理解。</p>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\">开始注册</button> <span></span></p>\n<div></div>\n<blockquote><p>注意，这个 Demo 和下方的 Demo 都只是一个本地模拟的简单示例，没有任何数据会被上传，当然也不会对数据进行验证。</p></blockquote>\n<p>而之后的验证流程如下：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\" alt=\"WebAuthn 验证流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2226\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的验证请求</li>\n<li>依赖方向浏览器发送挑战</li>\n<li>浏览器向认证器发送挑战、依赖方信息和客户端信息以请求获取公钥凭证</li>\n<li>认证器请求用户动作，随后通过依赖方信息找到对应私钥，并使用私钥签名挑战（即断言），交给浏览器</li>\n<li>浏览器将签名后的挑战发送给依赖方</li>\n<li>依赖方用之前存储的公钥验证挑战是否与发送的一致，一致则验证成功</li>\n</ol>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\" disabled>开始验证</button> <span>在上方注册后才能验证</span></p>\n<div></div>\n<p>可以看到，WebAuthn 不仅在理论上是安全的，同时<strong>在整个过程中并没有隐私数据被传输</strong>——用户信息实际上只包含用户名和用户 ID。因此我们完全可以说 WebAuthn 是安全且私密的。</p>\n<blockquote><p>为了避免用户在不同依赖方之间被追踪，认证器通常会为每个依赖方和用户的组合都创建一对公私钥。不过，由于认证器的存储空间有限，认证器通常不会存储每一个私钥，而是会通过各类信息和烧录在认证器内的主密钥“算”出对应的私钥以实现无限对公私钥。具体算法根据不同厂商会有所不同。对于 Yubikey，你可以在<a href=\"https://developers.yubico.com/U2F/Protocol_details/Key_generation.html\">这里</a>了解更多。</p></blockquote>\n<blockquote><p>如果依赖方需要，用户同意后，发送给依赖方的公钥凭证中可以包含用于辨认认证器型号的信息，不过这对隐私的影响微乎其微。</p></blockquote>\n<h2>浏览器接口</h2>\n<p>要使用 WebAuthn，我们必须要依靠浏览器作为媒介和验证器进行交互，而这就需要浏览器对于 WebAuthn 的支持了。绝大多数新版本的现代浏览器都为 WebAuthn 提供了统一的接口，而在这一段中我们会了解如何使用相关的接口。但是在开始之前，我们可以先来看看浏览器的支持程度（2020.9）。</p>\n<div class=\"mdui-table-fluid\"><table class=\"mdui-table\">\n<thead><tr>\n<th>浏览器</th>\n<th>支持情况</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>桌面端 Chrome</td>\n<td>67+</td>\n</tr>\n<tr>\n<td>移动端 Chrome</td>\n<td>67+<sup>[1]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Firefox</td>\n<td>60+</td>\n</tr>\n<tr>\n<td>移动端 Firefox</td>\n<td>不支持<sup>[2]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Edge</td>\n<td>18+</td>\n</tr>\n<tr>\n<td>移动端 Edge</td>\n<td>不支持<sup>[3]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Safari</td>\n<td>13+</td>\n</tr>\n<tr>\n<td>移动端 Safari</td>\n<td>13.3+<sup>[4]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Opera</td>\n<td>54+</td>\n</tr>\n<tr>\n<td>移动端 Opera</td>\n<td>不支持</td>\n</tr>\n</tbody>\n</table></div>\n<p><sup>[1]</sup> 受平台限制，Chrome 在 iOS 平台上不支持 WebAuthn，在 Android 平台上支持大部分 WebAuthn 功能，但仍不支持部分特性（如 <code>userVerification</code>）。<br><sup>[2]</sup> 移动端 Firefox 80 以下的版本支持 WebAuthn 但似乎会忽略 <code>authenticatorAttachment</code> 等一部分参数，同时移动端 Firefox Beta 80 以下的版本支持 WebAuthn 但无法成功调用。自 80 版本起移动端 Firefox 暂时取消了对 WebAuthn 的支持（可能是 Bug）。<br><sup>[3]</sup> 移动端 Edge 似乎支持 WebAuthn 但无法成功调用。<br><sup>[4]</sup> Safari iOS/iPad OS 13 仅支持外部认证器，无法调用 Touch ID 或 Face ID；自 iOS/iPad OS 14 起 Safari 已支持全功能 WebAuthn，可以调用 Touch ID/Face ID</p>\n<p>当然，一众国产浏览器，包括 Samsung Browser 和 Yandex Browser，目前都不支持 WebAuthn。此外，由于 WebAuthn 涉及外部验证器和 TPM 可信平台模块等，用户的操作系统也会对 WebAuthn 的可用性造成影响。以下是一些需要注意的信息：</p>\n<ul>\n<li>Windows 10 1903 以下版本仅 Edge 能提供完整支持，其他浏览器只能使用 USB Key 等外部认证器；1903+ 中所有浏览器都可以通过 Windows Hello 带来完整的 WebAuthn 支持</li>\n<li>Android 需要安装并开启 Google 服务</li>\n<li>iOS/iPad OS 13.3 以下的版本不支持 WebAuthn，iOS/iPad OS 14 以下的版本支持有限（参考上文），iOS/iPad OS 14 开始 Safari 已支持全功能 WebAuthn（功能完整度甚至超过了 Android）</li>\n</ul>\n<p>可以看出，WebAuthn 的发展之路仍然很漫长，但好在桌面端对它的支持已经比较完善了，在一些情况下我们完全有理由使用它。</p>\n<hr>\n<p>来看看浏览器提供了怎么样的接口吧。要使用 WebAuthn，我们可以使用 <code>navigator.credentials.create()</code> 请求认证器生成公钥凭证和 <code>navigator.credentials.get()</code> 请求获取公钥凭证。</p>\n<blockquote><p>你或许已经对 Credential Management API 有所了解了。通过这些 API，我们还可以实现一些有趣的特性，不过这值得另开一篇文章来讲了。</p></blockquote>\n<p>对于一个基础的实现，<code>navigator.credentials.create()</code> 需要传入的参数如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        challenge,\r\n        rp: {\r\n            id,\r\n            name\r\n        },\r\n        user: {\r\n            id,\r\n            name,\r\n            displayName\r\n        },\r\n        pubKeyCredParams: [\r\n            {\r\n                type: \"public-key\",\r\n                alg\r\n            }\r\n        ],\r\n        authenticatorSelection: {\r\n            authenticatorAttachment,\r\n            userVerification\r\n        },\r\n        excludeCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>在 <code>navigator.credentials.create()</code> 方法中，我们必须传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值。这指明了我们需要创建公钥凭证，而非普通的密码凭证。然后，在 <code>publicKey</code> 对象中设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rp: Object</code>：依赖方信息，其中有一项为必须：\n<ul>\n<li>\n<code>rp.id: String</code>：（可选）依赖方 ID，必须为当前域名或为当前域名的子集的域名（不是子域名）。如域名为 <code>test.123.example.com</code>，则依赖方 ID 可以是 <code>test.123.example.com</code>, <code>123.example.com</code> 或 <code>example.com</code>。不指定则默认使用当前域名</li>\n<li>\n<code>rp.name: String</code>：依赖方名称，用于方便用户辨认</li>\n</ul>\n</li>\n<li>\n<code>user: Object</code>：用户信息，其中有三项为必须：\n<ul>\n<li>\n<code>user.id: Uint8Array</code>：转换为 <code>Uint8Array</code> 的字符串。<strong>出于安全考量，这应尽可能不与任何用户信息相关联，如不要包含用户名、用户邮箱等</strong>\n</li>\n<li>\n<code>user.name: String</code>：登录用户名</li>\n<li>\n<code>user.dispalyName: String</code>：用于显示的用户名称，显示与否的具体行为取决于浏览器</li>\n</ul>\n</li>\n<li>\n<code>pubKeyCredParams: Array</code>：一个算法列表，指明依赖方接受哪些签名算法。列表的每一项都是一个对象，拥有两个属性：\n<ul>\n<li>\n<code>pubKeyCredParams[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>pubKeyCredParams[].alg: Number</code>：一个负整数，用于标明算法。具体算法对应的数字可以在 <a href=\"https://www.iana.org/assignments/cose/cose.xhtml#algorithms\">COSE</a> 找到</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection: Object</code>：（可选）用于过滤正确的认证器，这里介绍常用的一个参数：\n<ul>\n<li>\n<code>authenticatorSelection.authenticatorAttachment: String</code>：（可选）指定要求的认证器类型。如果没有满足要求的认证器，认证可能会失败。该参数可以为 <code>null</code>（表示接受所有类型的认证器）或是以下两个值之一：\n<ul>\n<li>\n<code>platform</code>：表示仅接受平台内置的、无法移除的认证器，如手机的指纹识别设备</li>\n<li>\n<code>cross-platform</code>：表示仅接受外部认证器，如 USB Key</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection.userVerification: String</code>：（可选）指定认证器是否需要验证“用户为本人 (User Verified, UV)”，否则只须“用户在场 (User Present, UP)”。具体验证过程取决于认证器（不同认证器的认证方法不同，也有认证器不支持用户验证），而对验证结果的处理情况则取决于依赖方。该参数可以为以下三个值之一：\n<ul>\n<li>\n<code>required</code>：依赖方要求用户验证</li>\n<li>\n<code>preferred</code>：（默认）依赖方希望有用户验证，但也接受用户在场的结果</li>\n<li>\n<code>discouraged</code>：依赖方不关心用户验证。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>excludeCredentials: Array</code>：（可选）用于标识要排除的凭证，可以避免同一个用户多次注册同一个认证器。如果用户试图注册相同的认证器，用户代理会抛出 <code>InvalidStateError</code> 错误。数组中的每一项都是一个公钥凭证对象，包含以下属性：\n<ul>\n<li>\n<code>excludeCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>excludeCredentials[].id: Uint8Array</code>：要排除的凭证 ID</li>\n<li>\n<code>excludeCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，超时后将强制终止 <code>create()</code> 并抛出错误。若不设置，将使用用户代理的默认值；若太大或太小，则使用最接近的用户代理默认值范围中的值。推荐值为 5000-120000</li>\n</ul>\n<blockquote><p>对于 <code>pubKeyCredParams</code>，通常我们只需添加 ES256 (alg: -7) 算法即可兼容大部分外部认证器，此外，再添加 RS256 (alg: -257) 算法即可兼容大部分平台内置认证器（如 Windows Hello）。当然，前端添加算法之后，后端也需要相应的算法支持。</p></blockquote>\n<blockquote><p>对于 <code>userVerification</code>，由于默认值 \"preferred\" 并不能很好地被所有设备支持，因此无论在 <code>create()</code> 中还是 <code>get()</code> 中不指定该参数都会在 Chrome 中触发一条警告。具体请参阅<a href=\"https://chromium.googlesource.com/chromium/src/+/master/content/browser/webauth/uv_preferred.md\">这个页面</a>。</p></blockquote>\n<p>调用 <code>create()</code> 之后，我们就可以拿到一个 <code>Promise</code>，并可以在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>create()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAttestationResponse {\r\n        attestationObject: ArrayBuffer(390) {},\r\n        clientDataJSON: ArrayBuffer(121) {}\r\n    },\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\",\r\n    type: \"public-key\"\r\n}</pre>\n<p>其中有：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：<code>AuthenticatorAttestationResponse</code> 对象，是 <code>PublicKeyCredential</code> 的主要部分，包含以下两个内容：\n<ul>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n<li>\n<code>response.attestationObject: ArrayBuffer</code>：CBOR 编码的认证器数据，包含凭证公钥、凭证 ID、签名（如果有）、签名计数等信息</li>\n</ul>\n</li>\n</ul>\n<p>然后将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串，我们就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证与注册了。具体怎么操作，我们会在下文详细讨论。当然，别忘了 <code>catch()</code> 注册过程中抛出的任何错误。</p>\n<blockquote><p>你可能会认为在所有情况下，注册时认证器都会对挑战进行签名。实际上在大部分情况下（同时也是默认情况），<strong>注册时认证器并不会对挑战进行签名</strong>，<code>attestationObject</code> 并不会包含签名后的挑战。只有依赖方明确要求证明且用户同意（部分浏览器要求）后认证器才会对挑战进行签名（具体实现据情况会有所不同）。对此，<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion#Attestation\">MDN 解释道</a>“大部分情况下，用户注册公钥时我们会使用「初次使用时信任模型」(TOFU) ，此时验证公钥是没有必要的。”要了解更多关于证明的内容，请参阅“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>而对于 <code>navigator.credentials.get()</code>，我们可以传入如下的参数：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.get({\r\n    publicKey: {\r\n        challenge,\r\n        rpId,\r\n        userVerification,\r\n        allowCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>和 <code>create()</code> 一样，对于 <code>get()</code> 我们需要传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值，指明我们需要获取的是公钥凭证而非普通的密码凭证。在 <code>publicKey</code> 对象中我们可以设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rpID: String</code>：（可选）依赖方 ID，需要和注册认证器时的一致。规则和上述的 <code>rp.id</code> 一致，不指定默认使用当前域名</li>\n<li>\n<code>userVerification: String</code>：和上文一样，只是需要注意它这次不在 <code>authenticatorSelection</code> 中了</li>\n<li>\n<code>allowCredentials: Array</code>：（可选）用于标识允许的凭证 ID，使用户代理找到正确的认证器。只有符合这个列表中凭证 ID 的凭证才能被成功返回。数组中的每一项都是对象，包含以下属性：\n<ul>\n<li>\n<code>allowCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>allowCredentials[].id: Uint8Array</code>：允许的凭证 ID</li>\n<li>\n<code>allowCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，和上面的一样，推荐值为 5000-120000</li>\n</ul>\n<p>嗯，要传入的参数少多了。之后，和 <code>create()</code> 一样，调用 <code>get()</code> 之后，我们就可以拿到一个 <code>Promise</code> 并在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>get()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAssertionResponse {\r\n        authenticatorData: ArrayBuffer(37) {},\r\n        signature: ArrayBuffer(256) {},\r\n        userHandle: ArrayBuffer(64) {},\r\n        clientDataJSON: ArrayBuffer(118) {}\r\n    }\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\"\r\n    type: \"public-key\"\r\n}</pre>\n<p>这里的东西就比 <code>create()</code> 时拿到的要多了。看看我们拿到了什么吧：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：对于验证流程，认证会返回 <code>AuthenticatorAssertionResponse</code> 而不是 <code>AuthenticatorAttestationResponse</code> 对象，这个对象包含以下 4 个属性：\n<ul>\n<li>\n<code>response.authenticatorData: ArrayBuffer</code>：认证器信息，包含认证状态、签名计数等</li>\n<li>\n<code>response.signature: ArrayBuffer</code>：被认证器签名的 <code>authenticatorData</code> + <code>clientDataHash</code>（<code>clientDataJSON</code> 的 SHA-256 hash）</li>\n<li>\n<code>response.userHandle: ArrayBuffer</code>：<code>create()</code> 创建凭证时的用户 ID <code>user.id</code>。许多 U2F 设备不支持这一特性，这一项将会是 <code>null</code>\n</li>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n</ul>\n</li>\n</ul>\n<p>同样地，我们将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串后就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证了。至于具体怎么做，别急，马上就来讲一讲。</p>\n<h2>简单实现</h2>\n<p>了这么多，我们终于可以实现一个简单的 WebAuthn 认证页面了。由于在实际操作中 WebAuthn 相关的数据解码和密码计算比较复杂，在服务器端我们可以使用第三方库来帮我们做这些脏活累活，我们只需专注于具体流程就可以了。</p>\n<p>要寻找可用的第三方库，你可以在 <a href=\"https://webauthn.io/\">webauthn.io</a> 上找到适用于各种语言的第三方库——除了 PHP（笑）。不过好在你可以在 GitHub 上找到几个不错的 PHP WebAuthn 库，比如 <a href=\"https://github.com/web-auth/webauthn-framework\">web-auth/webauthn-framework</a>。</p>\n<p>在我们的这个例子中，我们关心的主要是前端逻辑；而后端我们可以使用各类几乎已经做到开箱即用的第三方库，这样我们可以专注于流程而不必关心细节。当然如果你想了解后端的解码细节，可以阅读“<a href=\"https://flyhigher.top/#webauthn-decode\">手动解个码</a>”一节。</p>\n<hr>\n<p>让我们先从注册开始吧。现在，用户点击了注册认证器的按钮，一个请求被发送给服务器（也就是依赖方）。在最简单的情况中，依赖方需要将三个内容发送给浏览器：<strong>挑战、用户信息和用户已注册的凭证 ID 列表（即 <code>excludeCredentials</code>）</strong>。当然依赖方也可以自由选择发送更多信息，只要最终前端能构建合法的参数即可。</p>\n<p>挑战最终会被转换为 <code>Uint8Array</code>，即一组 0-255 的整数。如果使用 PHP，在后端我们可以这样生成 Base64 编码的挑战：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"php\">$challenge = \"\";\r\nfor($i = 0; $i \n<p>对于用户信息，我们需要登录名、显示名称和 ID 三项内容。我们可以从数据库中取出用户信息，也可以新建一份。需要注意的是，<strong>出于安全和隐私的考量，ID 不应该包含用户的任何信息，比如用户邮箱等。</strong>推荐的做法是和挑战一样，生成一个随机字符串/一组随机数，并将其于用户关联起来以供之后使用。</p>\n<p>发送已注册的凭证 ID 列表是为了防止用户重复注册同一个认证器。正确设置该列表后，如果用户试图注册同一个认证器，浏览器会中止流程并抛出 <code>InvalidStateError</code>。</p>\n<p>最后，别忘了将挑战等一些后续可能会用到的信息临时存储起来。Session 就是一个很好的选择。</p>\n<p>将所有信息发送到浏览器之后，我们应该可以构建出新建凭证所需的参数了。由于有多个参数需要以 <code>Uint8Array</code> 的形式传入，我们可以准备一个简单的工具函数帮我们将 Base64 的字符串转为 <code>Uint8Array</code>。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function str2ab(str){\r\n    return Uint8Array.from(window.atob(str), c=&gt;c.charCodeAt(0));\r\n}</pre>\n<p>除了 <code>challenge</code>, <code>rp</code>, <code>user</code> 和 <code>excludeCredentials</code> 几部分需要你根据具体情况设置外，上文提到的其他参数一般可以这么设置：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">publicKey: {\r\n    challenge, // 自行设置\r\n    rp, // 自行设置\r\n    user, // 自行设置\r\n    pubKeyCredParams: [\r\n        {\r\n            type: \"public-key\",\r\n            alg: -7 // ES256\r\n        },\r\n        {\r\n            type: \"public-key\",\r\n            alg: -257 // RS256\r\n        }\r\n    ],\r\n    authenticatorSelection: {\r\n        userVerification: \"discouraged\",\r\n        authenticatorAttachment: null // 除非用户指定，大部分情况下无需指定\r\n    },\r\n    excludeCredentials, // 自行设置\r\n    timeout: 60000\r\n}</pre>\n<p>然后就是传入 <code>navigator.credentials.create()</code>，拿到 <code>PublicKeyCredential</code>。如果一切顺利，接下来我们就需要考虑如何将返回的内容传回依赖方了。由于我们拿到的很多都是 <code>ArrayBuffer</code>，我们需要将其进行编码。再准备一个工具函数吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function array2b64String(a) {\r\n    return window.btoa(String.fromCharCode(...a));\r\n}</pre>\n<p>然后适当处理，我们就可以得到一个方便传输的 JSON 字符串了：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({publicKey}).then((credentialInfo) =&gt; {\r\n    const publicKeyCredential = {\r\n        id: credentialInfo.id,\r\n        type: credentialInfo.type,\r\n        rawId: array2b64String(new Uint8Array(credentialInfo.rawId)),\r\n        response: {\r\n            clientDataJSON: array2b64String(new Uint8Array(credentialInfo.response.clientDataJSON)),\r\n            attestationObject: array2b64String(new Uint8Array(credentialInfo.response.attestationObject))\r\n        }\r\n    };\r\n    return publicKeyCredential;\r\n}).then(JSON.stringify).then((authenticatorResponseJSON) =&gt; {\r\n    // 可以发送了\r\n}).catch((error) =&gt; {\r\n    console.warn(error); // 捕获错误\r\n})</pre>\n<p>依赖方收到数据以后，还需要做三件事：验证挑战、存储凭证 ID 和存储公钥。如果数据解码顺利，且收到的挑战和之前发送的一致，就可以认为注册成功，将凭证 ID 及公钥与用户关联起来。这一步有很多第三方库可以帮我们做，对于基础实现我们就不深入探究了。</p>\n<blockquote><p>由于不同厂商的认证器的实现方式不同，<strong>我们并不能保证凭证 ID 一定是全局唯一的</strong>，也就是说，凭证 ID 有可能碰撞——即使这些凭证实际上是不同的。依赖方在实现凭证 ID 的存储及查找时，需要注意和用户 ID 结合进行存储或查找，或是直接在注册认证器时在服务器端对比阻止相同的凭证 ID。</p></blockquote>\n<hr><p>接下来就可以进行验证了。某天，用户点击了验证按钮准备登录，于是浏览器发送了验证请求到依赖方，同时附上要登录的用户名。接下来依赖方至少需要发送两项内容给浏览器：<strong>挑战和用户已绑定的凭证 ID 列表（即 <code>allowCredentials</code>）。</strong></p>\n<p>之后前端的处理流程就和注册时基本一致了。只是需要注意验证流程中获取到的 <code>PublicKeyCredential</code> 的结构和注册时的稍有不同。</p>\n<p>当浏览器将数据传回后，依赖方需要做的事情就比之前要麻烦一些了。依赖方需要验证挑战，并用之前存储的公钥验证签名和签名计数。同样地，这一步有很多第三方库可以帮我们做。最后，如果验证全部通过，我们就可以允许用户登录了。</p>\n<p>到目前为止，我们已经实现了一个简单的 WebAuthn 验证服务。不过这只是一个最基础的实现，对于很多高安全要求的身份认证这是远远不够的。因此，我们需要摆脱对第三方库的依赖，深入了解 WebAuthn。你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分，不过对于基础的 WebAuthn 实现，我们的旅程就到这里了。</p>\n<h2>拓展阅读</h2>\n<p>如果你的目标只是快速了解如何开发 WebAuthn，那么你阅读到这里就可以了。同时，上一节例子中的部分代码来自于我为了这篇文章开发的 WordPress 插件 WP-WebAuthn，这个插件可以为你的 WordPress 启用 WebAuthn 无密码登录（并非二步验证），你可以查阅插件的 <a href=\"https://github.com/yrccondor/wp-webauthn\">GitHub 存储库</a>了解更多，也可以自己安装试一试。</p>\n<p>如果你正在使用 Chrome 开发，Chrome 87+ 版本添加了一个 WebAuthn 开发者面板，可以帮助你在没有任何实体验证器的情况下开发 WebAuthn 功能。你可以在 Google 的<a href=\"https://developers.google.com/web/tools/chrome-devtools/webauthn\">这篇文章</a>中了解更多。不够，如果你正在使用 Firefox，很遗憾目前我还没有找到对应的开发工具或是浏览器扩展可用。</p>\n<p>如果你希望了解更多关于非对称加密的数学证明，可以查阅阮一峰老师的<a href=\"http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html\">这篇文章</a>。</p>\n<p>如果你希望了解更多关于 Credential Management API 的信息，可以查阅<a href=\"https://medium.com/dev-channel/sign-in-on-the-web-credential-management-api-and-best-practices-d21aed14b6fe\">这篇文章</a>（英文）。</p>\n<p>如果你希望了解更多 WebAuthn 的细节，可以继续往下阅读。<span></span></p>\n<h1>深入了解 WebAuthn</h1>\n<p>如上文所说，如果摆脱对第三方库的依赖，或是要实现更安全的 WebAuthn，我们必须深入了解 WebAuthn。在这一部分中，我们会详细讨论上文没有提到的一些概念和参数，并了解 WebAuthn 中各类数据的结构以实现解码与验证。先来看一看一些进阶的选项吧。</p>\n<h2>进阶选项</h2>\n<p>没错，上文提到的传入 <code>navigator.credentials.create()</code> 和 <code>navigator.credentials.get()</code> 方法的参数其实只是所有参数的一部分。对于 <code>create()</code>，我们还可以配置这些可选内容（上文提及的已省略）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        rp: {\r\n            icon\r\n        },\r\n        user: {\r\n            icon\r\n        },\r\n        attestation,\r\n        authenticatorSelection: {\r\n            requireResidentKey\r\n        },\r\n        extensions\r\n    }\r\n})</pre>\n</pre>\n<ul>\n<li>\n<code>rp.icon: String</code> 和 <code>user.icon</code>：是的，你可以为依赖方和用户设置图标，可以使用 HTTPS URL 或 Base64，一般长度不能超过 128 字节，不过大部分浏览器不会显示图标，或是有非常小的图片体积限制，所以一般没有使用这一属性的必要</li>\n<li>\n<code>attestation: String</code>：表明依赖方是否需要证明。可选三个值：\n<ul>\n<li>\n<code>none</code>：（默认）不需要证明。如上文所述，依赖方不关心证明，因此认证器不会签名。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n<li>\n<code>indirect</code>：依赖方需要证明，但证明方式可由认证器选择。在支持匿名证明的认证器上，认证器会通过匿名证明的方式签名挑战，并向依赖方提供签名方式等信息</li>\n<li>\n<code>direct</code>：依赖方要求直接证明。此时认证器会使用烧录在认证器中的公钥进行签名，同时向依赖方提供签名方式等信息以供依赖方验证认证器是否可信。更多信息可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节</li>\n</ul>\n</li>\n<li>在 <code>authenticatorSelection</code> 中，我们还可以设置两个可选属性：\n<ul>\n<li>\n<code>authenticatorSelection.requireResidentKey: Boolean</code>：是否要求将私钥钥永久存储于认证器中。默认值为 <code>false</code>。对于 iOS/iPad OS 13，必须设置为 <code>false</code>，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n<li>\n<code>extensions: Object</code>：WebAuthn 扩展，可以提供规范之外的配置和响应。由于实际情况中很少会使用这一特性，我们不会在这篇文章中讨论它</li>\n\n<blockquote><p>将 <code>requireResidentKey</code> 设置为 <code>true</code> 可以实现无用户名的登录，即认证器同时替代了用户名和密码。需要注意的是，尽管大部分认证器可以实现无限对公私钥，<strong>但能永久存储的私钥数量是有限的</strong>（对于 Yubikey，这通常是 25），因此只应在真正需要的时候启用此特性。我们会在“<a href=\"https://flyhigher.top/#login-without-username\">无用户名登录</a>”一节中详细讨论原因。</p></blockquote>\n<blockquote><p><strong>如果你没有高安全需求（如银行交易等），请不要向认证器索取证明</strong>，即将 <code>attestation</code> 设置为 \"none\"。对于普通身份认证来说，要求证明不必要的，且会有浏览器提示打扰到用户。</p></blockquote>\n<blockquote><p>Android 暂时无法实施用户验证，进而会导致依赖方验证失败。你可以在<a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=997538\">这里</a>追踪这个特性的实现情况。</p></blockquote>\n<blockquote>\n<p>对于 <code>extensions</code>，由于目前浏览器支持和应用范围有限，我们不会在这篇文章中涉及，不过你可以看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    uvm: true, // 要求认证器返回用户进行验证的方法\r\n    txAuthSimple: \"Please proceed\" // 在认证器上显示与交易有关的简短消息\r\n}</pre>\n<p>你可以在<a href=\"https://www.w3.org/2019/01/webauthn-extensions.html\">这个页面</a>了解更多关于 <code>extensions</code> 的信息。</p>\n</blockquote>\n<p>对于 <code>get()</code>，我们其实只有一个可选内容没讲了，即 <code>extensions</code>。和上文一样，我们不会在这篇文章中讨论它。</p>\n<p>就这些了！<span></span></p>\n<h2>手动解个码</h2>\n<p>是时候看看如何手动解码了。我们将会在这一节中讨论认证器返回的数据的结构以及如何正确地解码它们。</p>\n<p>首先我们来看看如何处理注册过程中认证器发回的数据。假设所有 <code>ArrayBuffer</code> 类型的值都被正确地以 Base64 编码，且后端已经将 JSON 的字符串解析为字典。先来复习一下，我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"ZRBkDBCEtq...9XY8atOcbg\",\r\n    type: \"public-key\",\r\n    rawId: \"ZRBkDBCEtq...9XY8atOcbg==\",\r\n    response: {\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...i5jcmVhdGUifQ==\",\r\n        attestationObject: \"o2NmbXRkbm9uZWd...xNHuAMzz2LxZA==\"\r\n    }\r\n}</pre>\n<p>这里的 <code>id</code> 就是凭证的 ID，如果验证正确，我们最终要将它存储起来并于用户关联。同时可以看到 Base64 编码后的 <code>rawId</code> 其实和 <code>id</code> 是一致的（不过 <code>id</code> 是 Base64URL 编码的）。而 <code>type</code> 则一定是 \"public-key\"。</p>\n<p>不过，我们主要关心的还是 <code>respose</code> 中的两项内容。首先是 <code>clientDataJSON</code>。它的处理比较简单，看名字就知道，它应该是一个 JSON 字符串。</p>\n<blockquote><p>小技巧：如果你看到一个 Base64 编码的字符串以 \"ey\" 开头，那么它大概率是一个 Base64 编码的 JSON。</p></blockquote>\n<p>将<code>clientDataJSON</code> Base64 解码再 JSON 解码之后我们就能得到一个字典：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"NI4i1vsNmP2KHcmyFnBCKRVQPfHgg34SsYZUOPZY2lM\",\r\n    extra_keys_may_be_added_here: \"do not compare clientDataJSON against a template. See https://goo.gl/yabPex\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>结构一目了然。在这里，我们需要验证三项内容：</p>\n<ul>\n<li>\n<code>challenge</code> 和之前发送的一致</li>\n<li>\n<code>origin</code> 为创建凭证的页面的源（协议+主机名+端口号，并非 URL）</li>\n<li>\n<code>type</code> 为 \"webauthn.create\"</li>\n</ul>\n<p>同时可以注意到有一个奇怪的 <code>extra_keys_may_be_added_here</code>。这其实是 Google 在 Chrome 中搞的一点小把戏，有一定概率会出现，提醒我们需要将 JSON 解析后再验证键值以防额外插入的键值影响验证。具体信息你可以访问那个 URL 看一看。</p>\n<p>对于 Firefox，我们会多得到两项 <code>clientExtensions</code> 和 <code>hashAlgorithm</code> ，分别指明了客户端扩展数据和签名算法。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"3-4\">{\r\n    challenge: \"dg6ost6ujhAA0g6WqLe-SOOH-tbhvjW9Sp90aPKlLJI\",\r\n    clientExtensions: {},\r\n    hashAlgorithm: \"SHA-256\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>由于本文不考虑扩展数据，因此我们可以不考虑 <code>clientExtensions</code>。同时由于目前规范中指定的签名算法只有 SHA-256 一种，因此现阶段我们也可以简单地忽略 <code>hashAlgorithm</code>。</p>\n<p><code>clientDataJSON</code> 很简单地就处理完了。接下来我们要来看看 <code>attestationObject</code>。先来看看 <code>attestationObject</code> 的结构图示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\" alt=\"attestationObject 的结构\" width=\"1056\" height=\"532\" class=\"aligncenter size-full wp-image-2245\"></a>\n<p><code>attestationObject</code> 是 CBOR 编码后再被 Base64 编码的，因此我们需要额外对其进行 CBOR 解码。</p>\n<blockquote><p>CBOR (Concise Binary Object Representation, 简明二进制对象表示) 是一种多应用于物联网领域的编码方式，你可以将它看作体积更小、更方便物联网传输的二进制 JSON。大部分语言都可以找到对应的 CBOR 解码库。</p></blockquote>\n<p>我们当然不会手解 CBOR，直接来看看解开之后的样子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"none\",\r\n    attStmt: {},\r\n    authData: [211, 217, 43, 24, 199, ..., 97, 238, 166, 67, 107]\r\n}</pre>\n<p>这些键值的含义如下：</p>\n<ul>\n<li>\n<code>fmt</code>：标明证明的格式。WebAuthn 预定义了几种格式，分别为：\n<ul>\n<li>\n<code>none</code>：没有证明</li>\n<li>\n<code>packed</code>：为 WebAuthn 优化的证明格式</li>\n<li>\n<code>android-safetynet</code>：Android 使用的格式</li>\n<li>\n<code>android-key</code>：又是 Android 使用的格式</li>\n<li>\n<code>fido-u2f</code>：FIDO U2F 认证器使用的格式</li>\n<li>\n<code>tpm</code>：TPM 可信平台模块使用的格式</li>\n</ul>\n</li>\n<li>\n<code>attStmt</code>：证明对象，具体格式根据 <code>fmt</code> 的不同会有所不同</li>\n<li>\n<code>authData</code>：包含公钥、签名计数等来自认证器的数据</li>\n</ul>\n<p>诶，例子里的 <code>attStmt</code> 怎么是空的？还记得之前说的吗？大部分情况下，<strong>如果依赖方不要求证明，那么认证器不会签名挑战</strong>，于是 <code>fmt</code> 会变为 \"none\"，<code>attstmt</code> 会为空。如果不是高安全要求，我们可以只对这一种情况做支持。</p>\n<blockquote><p>注意，部分情况下 Firefox 会在不要求证明（即 <code>attestation</code> 为 \"none\"）时会返回 <code>fmt</code> 为 \"packed\" 的证明。<strong>这是符合规范的。</strong>此时认证器会进行自证明，你可以视情况进行处理。具体可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>对于非 \"none\" 的 <code>fmt</code> 我们稍后再谈，现在我们先来看看 <code>authData</code>。来复习一下 <code>authData</code> 的结构：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\" alt=\"authData 的结构\" width=\"1056\" height=\"384\" class=\"aligncenter size-full wp-image-2240\"></a>\n<p>对于它的解码比较简单粗暴，我们要做的就是根据图示将它切开，然后适当地转换类型。其中各部分的含义如下：</p>\n<ul>\n<li>\n<code>rpIdHash</code>：如其名，SHA-256 的 <code>rpId</code>，长度 32 字节</li>\n<li>\n<code>flags</code>：标识认证状态，长度 1 字节。其中 8 位分别为：\n<ul>\n<li>\n<code>ED</code>：是否有扩展数据</li>\n<li>\n<code>AT</code>：是否包含 <code>attestedCredentialData</code>。通常注册认证器时会包含 <code>attestedCredentialData</code>，而验证时不包含</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>\n<code>UV</code>：用户是否已验证</li>\n<li>保留位</li>\n<li>\n<code>UP</code>：用户是否在场</li>\n</ul>\n</li>\n<li>\n<code>signCount</code>：签名计数，长度 4 字节</li>\n<li>\n<code>attestedCredentialData</code>：包含公钥等凭据数据，变长。其结构如下：\n<ul>\n<li>\n<code>aaguid</code>：认证器的 AAGUID (Authenticator Attestation GUID)，对于同一型号的认证器，它们的 AAGUID 是相同的</li>\n<li>\n<code>credentialIdLength</code>：标识 <code>credentialId</code> 的长度，长度 2 字节</li>\n<li>\n<code>credentialId</code>：凭证 ID，和 <code>rawId</code> 一致，长度由 <code>credentialIdLength</code> 定义</li>\n<li>\n<code>credentialPublicKey</code>：CBOR 编码的 COSE 格式的凭证公钥，变长</li>\n</ul>\n</li>\n<li>\n<code>extensions</code>：扩展数据，变长，本文不讨论</li>\n</ul>\n<blockquote><p>出于隐私考虑，如果不要求证明，认证器会以 0 填充 AAGUID。</p></blockquote>\n<p>如果你的后端在使用 Node.js，这里有个工具函数可以帮你完成这一步（不考虑 <code>extensions</code>）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function parseAuthData(buffer){\r\n    let rpIdHash = buffer.slice(0, 32);\r\n    buffer = buffer.slice(32);\r\n  \r\n    let flagsBuf = buffer.slice(0, 1);\r\n    buffer = buffer.slice(1);\r\n\r\n    let flagsInt = flagsBuf[0];\r\n    let flags = {\r\n        up: !!(flagsInt &amp; 0x01),\r\n        uv: !!(flagsInt &amp; 0x04),\r\n        at: !!(flagsInt &amp; 0x40),\r\n        ed: !!(flagsInt &amp; 0x80),\r\n        flagsInt\r\n    }\r\n\r\n    let counterBuf = buffer.slice(0, 4);\r\n    buffer = buffer.slice(4);\r\n  \r\n    let counter = counterBuf.readUInt32BE(0);\r\n\r\n    let aaguid = undefined;\r\n    let credID = undefined;\r\n    let COSEPublicKey = undefined;\r\n\r\n    if(flags.at) {\r\n        aaguid = buffer.slice(0, 16);\r\n        buffer = buffer.slice(16);\r\n\r\n        let credIDLenBuf = buffer.slice(0, 2);\r\n        buffer = buffer.slice(2);\r\n\r\n        let credIDLen = credIDLenBuf.readUInt16BE(0);\r\n        credID = buffer.slice(0, credIDLen);\r\n\r\n        buffer = buffer.slice(credIDLen);\r\n        COSEPublicKey = buffer;\r\n    }\r\n\r\n    return {rpIdHash, flagsBuf, flags, counter, counterBuf, aaguid, credID, COSEPublicKey}\r\n}</pre>\n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>解开后，依赖方至少需要做四件事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>存储签名计数</li>\n<li>存储公钥</li>\n</ol>\n<blockquote><p>签名计数不一定从 0 开始。</p></blockquote>\n<p>对于公钥，也就是 <code>credentialPublicKey</code>，我们需要多一次 CBOR 解码，然后就可以得到类似这样的公钥：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    kty: \"EC\",\r\n    alg: \"ECDSA_w_SHA256\",\r\n    crv: \"P-256\",\r\n    x: \"ZGQALNfqo0L7HFYQHFHCS/X5db49z0ePnuQEs3w3X8w=\",\r\n    y: \"6qYxhnjYuez/Q8N6vX7nIIGfxFWdZ25NzQfZYuYOalA=\"\r\n}</pre>\n<p>然后可以选择适当的方法将其存储起来，之后的步骤本文就不再赘述了。现在，将目光拉回来，让我们看看包含证明的 <code>attestationObject</code> 是怎么样的。我们来看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"packed\",\r\n    attStmt: {\r\n        alg: -7,\r\n        sig: [48, 70, 2, 33, 0, ..., 132, 78, 46, 100, 21],\r\n        x5c: [\r\n            [48, 130, 2, 189, 48, 130, 1, 165, 160, 3, ..., 177, 48, 125, 191, 145, 24, 225, 169, 41, 248]\r\n        ]\r\n    },\r\n    authData: [211, 217, 43, 24, 199, ..., 158, 54, 87, 126, 54]\r\n}</pre>\n<p>这里有一个使用 \"packed\" 格式的证明。此时，<code>attStmt</code> 中包含三个值：</p>\n<ul>\n<li>\n<code>alg</code>：签名算法</li>\n<li>\n<code>sig</code>：签名值</li>\n<li>\n<code>x5c</code>：X.509 编码的证书链</li>\n</ul>\n<p>我们不会在这一节中详述对签名的验证。要了解更多信息，你可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。现在，让我们来看看如何处理验证过程中认证器发回的数据。我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"hmqdxPLit9...BWeVxZqdvU\",\r\n    type: \"public-key\",\r\n    rawId: \"hmqdxPLit9V...BWeVxZqdvU=\",\r\n    response: {\r\n        authenticatorData: \"09krGMcWTf...UFAAAABA==\",\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...XRobi5nZXQifQ==\",\r\n        signature: \"UsXZV3pvT3np8btj6V0g...WBkaqyt88DrD40qh+A==\",\r\n        userHandle: \"MmYxNWYzZjQyZjM...Tg2ZDY4NzhlNw==\"\r\n    }\r\n}</pre>\n<p><code>id</code>, <code>rawId</code> 和 <code>type</code> 和之前一样，这里就不再赘述了。让我们来看看 <code>response</code>。首先是 <code>clientDataJSON</code>，和之前的解法一样，要验证的内容也一样，只是 <code>type</code> 从 \"webauthn.create\" 变成了 \"webauthn.get\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"bnkd2CmrEuvKnAFXs2QlC3SKlg4XFvGtP4HJL1yEWyU\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.get\"\r\n}</pre>\n<p>然后是 <code>userHandle</code>。前面讲过，这是认证器在创建凭证时的用户 ID。如果用户在使用 U2F 认证器，很可能这一项为空，所以大部分情况下我们不关心这一项。</p>\n<p>接着来看 <code>authenticatorData</code>。这其实就是之前的 <code>attestedCredentialData</code>，只是这次不包含公钥。以相同的方式切开数据，我们应该可以得到 <code>rpIdHash</code>, <code>flags</code>和 <code>signCount</code> 三项。此时，依赖方至少需要做这三样事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>验证签名计数大于之前存储的计数，并更新存储的计数</li>\n</ol>\n<blockquote><p>如果签名计数比之前的小，那么这个认证器很可能是伪造的，应该中止验证并返回验证失败。同时，签名计数不一定每次按 1 递增，通常只要计数比此前的大就认为计数检查通过。</p></blockquote>\n<p>最后，我们来看 <code>signature</code>，也就是签名。不过这个签名不是简单的对挑战的签名，具体算法如图所示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\" alt=\"签名过程\" width=\"1034\" height=\"587\" class=\"aligncenter size-full wp-image-2231\"></a>\n<p>计算签名时，认证器会将 <code>authenticatorData</code> 与 <code>clientDataHash</code>（也就是 <code>clientDataJSON</code> 的 SHA-256 Hash）拼接起来，并使用对应的私钥签名。依赖方应该使用对应的公钥将其解密，并验证内容是否是 <code>authenticatorData</code> 与 <code>clientDataHash</code> 的拼接。这部分的计算不在本文的讨论范围内。</p>\n<p>最后，如果全部验证通过，返回验证成功。<span></span></p>\n<h2>验证认证器</h2>\n<p>WebAuthn 已经很安全了，但有的时候我们还要让它更安全一点。比如，如果用户在使用伪造的或是自制的认证器，认证器的安全性就得不到保证。此时，依赖方就需要验证认证器是否是可信的认证器。</p>\n<blockquote><p>这一过程仅发生在注册认证器时。此时，如果认证器验证通过，就可以存储公钥，后续步骤和之前描述的一致。</p></blockquote>\n<blockquote><p>再次说明，如果不是对安全性有极高的要求，向认证器索取证明以验证认证器是否可信是没有必要的。此外，验证认证器需要依赖方自行维护可信认证器列表，大大增加了维护的复杂性。</p></blockquote>\n<p>在调用 <code>navigator.credentials.create()</code> 时，我们可以将 <code>attestation</code> 设置为非 \"none\" 来向认证器索取证明。除无证明外，WebAuthn 定义了四种证明方式：</p>\n<ul>\n<li>Basic Attestation (Basic) ：基础的证明方式，认证器会使用认证器私钥签名</li>\n<li>Self Attestation (Self) ：自证明，认证器会使用凭证私钥签名</li>\n<li>Attestation CA (AttCA) ：认证器会使用多个证明私钥之一签名</li>\n<li>Elliptic Curve based Direct Anonymous Attestation (ECDAA) ：通过 <a href=\"https://en.wikipedia.org/wiki/Direct_Anonymous_Attestation\">DAA</a> 实现的匿名证明</li>\n</ul>\n<blockquote><p>和验证过程一样，这里签名的目标是 <code>authenticatorData</code> 和 <code>clientDataHash</code> 的连接。</p></blockquote>\n<p>还记得 <code>create()</code> 时 <code>attestation</code> 可选的三个值吗？这个值会决定认证器最终使用哪种方式进行证明。复习一下：</p>\n<ul>\n<li>\n<code>none</code>：大部分情况下认证器会选择不进行证明，部分认证器会进行自证明。此时 AAGUID 会被 0 填充</li>\n<li>\n<code>indirect</code>：认证器会试图通过替换 AAGUID 和选择合适的证明方式来进行匿名证明，具体方式由认证器选择</li>\n<li>\n<code>direct</code>：认证器会提供最直接的证明信息</li>\n</ul>\n<p>注意，大部分情况下，当认证器需要向依赖方证明自己可信时需要提供认证器公钥，<strong>这会触发浏览器提示，只有用户同意后认证器才会进行证明，否则认证器将不提供证明。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\" alt=\"浏览器提示\" width=\"446\" height=\"283\" class=\"aligncenter size-full wp-image-2217\"></a>\n<blockquote><p>为什么浏览器会说“安全密钥的品牌和型号”？事实上，为了避免用户通过认证器证书被跨依赖方追踪，FIDO 要求使用相同认证器证书的认证器的数量不能少于 100,000。于是大部分认证器厂商会选择<strong>让同一型号的认证器共用同一份证书。</strong>因此，浏览器的会询问用户是否同意“查看安全密钥的品牌和型号”。</p></blockquote>\n<blockquote><p>Android Safety Net 不会向用户询问是否同意，而是会静默进行证明。</p></blockquote>\n<p>当证明不为空时，依赖方收到数据后根据 <code>attestationObject.fmt</code> 的不同，需要选择不同的验证方式来验证认证器的可信情况。出于篇幅原因，这里我们不会讨论每一种 <code>fmt</code> 的验证方式，更多信息你可以查阅 <a href=\"https://www.w3.org/TR/webauthn/#defined-attestation-formats\">W3C 文档</a>。</p>\n<p>当 <code>fmt</code> 为 <code>packed</code> 时，<code>attestationObject.attStmt</code> 可能会有三种格式：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// 自证明\r\n{\r\n    alg, // 算法\r\n    sig // 签名\r\n}\r\n// 基础或证明 CA 证明\r\n{\r\n    alg,\r\n    sig,\r\n    x5c // X.509 证书链\r\n}\r\n// 椭圆曲线证明\r\n{\r\n    alg,\r\n    sig,\r\n    ecdaaKeyId // ECDAA-Issuer 公钥标识符\r\n}</pre>\n<p>此时，依赖方需要检查证书符合预期格式并检查证书是否在可信链上。首先，如果证明中既没有 <code>ecdaaKeyId</code> 也没有 <code>x5c</code>，就说明这个证明使用的是自证明，只需使用认证器提供的公钥验证即可；如果有 <code>x5c</code>，那么就需要验证 <code>x5c</code> 中的证书是否在可信链上。将 <code>x5c</code> 中的每个证书以 Base64 编码，按 64 个字符切开，并在头尾加上 <code>-----BEGIN CERTIFICATE-----</code> 和 <code>-----END CERTIFICATE-----</code>就能得到一个证书字符串了。之后，依赖方需要验证证书是否可信。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function base64ToPem(b64cert){\r\n    let pemcert = '';\r\n    for(let i = 0; i \n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>至于 <code>ecdaaKeyId</code>，由于目前应用较少，处理方法可能需要你另寻资料了。检查证书的具体步骤已经超出了本文的范围，具体可以查阅<a href=\"https://medium.com/@herrjemand/verifying-fido2-packed-attestation-a067a9b2facd\">这篇文章</a>（英文）。</p>\n<blockquote><p>你可以在 <a href=\"https://fidoalliance.org/metadata/\">FIDO Metadata Service</a> 找到各大厂商认证器的可信证书链。</p></blockquote>\n<p>当在 Android 上调起 WebAuthn 时，大部分情况下 <code>fmt</code> 将会为 <code>safety-net</code>。此时 <code>attestationObject.attStmt</code> 的结构会是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    ver: \"200616037\",\r\n    response: {\r\n        type: \"Buffer\",\r\n        data: [101, 121, 74, 104, 98, ..., 115, 104, 104, 82, 65]\r\n    }\r\n}</pre>\n<p>此时，<code>clientDataJSON</code> 中还会出现 <code>androidPackageName</code> 键，值是调起 WebAuthn 验证的应用的包名，如 Chrome 就是 \"com.android.chrome\"。</p>\n<p>在这个证明中，<code>data</code> 其实是一个 JWT 字符串，我们可以将它编码为字符串并将其按照 JWT 进行解码（别忘了验证 JWT 签名）。最终我们会得到一个类似这样的 Payload：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    nonce: \"0QAurN4F9wik6GEkblDJhGuf4kuaqZn5zaaxlvD1hlA=\",\r\n    timestampMs: 1584950686460,\r\n    apkPackageName: \"com.google.android.gms\",\r\n    apkDigestSha256: \"2BQHno+bmWWwdLUYylS8HLt5ESJzci3nt2uui71ojyE=\",\r\n    ctsProfileMatch: true,\r\n    apkCertificateDigestSha256: [\r\n        \"8P1sW0EPicslw7UzRsiXL64w+O50Ed+RBICtay2g24M=\"\r\n    ],\r\n    basicIntegrity: true,\r\n    evaluationType: \"BASIC\"\r\n}</pre>\n<p>其中包含了有关设备状态的一些信息。比如说，如果 <code>ctsProfileMatch</code> 为 <code>false</code>，那么该设备很有可能被 root 了。对于高安全要求的场景，我们可以视情况进行验证。</p>\n<p>同时我们可以在 JWT Header 中验证证明的有效性。我们应该能取得这样的 Header：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    alg: \"RS256\",\r\n    x5c: [\r\n        \"MIIFkzCCBHugAwIBAgIR...uvlyjOwAzXuMu7M+PWRc\",\r\n        \"MIIESjCCAzKgAwIBAgIN...UK4v4ZUN80atnZz1yg==\"\r\n    ]\r\n}</pre>\n<p>这里的结构就和上方的 <code>x5c</code> 验证类似了。具体步骤可以参考<a href=\"https://medium.com/@herrjemand/verifying-fido2-safetynet-attestation-bd261ce1978d\">这篇文章</a>（英文）。</p>\n<p>其他所有格式的验证方式也都可以在<a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">这篇文章</a>（英文）中找到。<span></span></p>\n<h2>无用户名登录</h2>\n<p>认证器已经代替了密码，可是这还不够！在进行第一因素认证（即使用 WebAuthn 登录）时，我们还是需要输入用户名，然后才能进行身份认证。懒惰是第一生产力，我们能不能不输入用户名就进行身份认证呢？实际上，大部分认证器都允许我们无用户名登录。<strong>而这一特性的核心就是 Resident Key 客户端密钥驻留。</strong></p>\n<p>你可以思考一下，为什么普通的 WebAuthn 为什么不能实现无用户名登录？事实上，大部分认证器为了实现无限对公私钥，会将私钥通过 Key Warp 等技术加密后包含在凭证 ID 中发送给依赖方，这样认证器本身就不用存储任何信息。不过，这就导致需要身份认证时，依赖方必须通过用户名找到对应的凭证 ID，将其发送给认证器以供其算出私钥。</p>\n<blockquote><p>Yubikey 实现了一个基于 HMAC 的算法，认证器可以在私钥不离开认证器的前提下（常规的 Key Warp 算法中实际上私钥离开了认证器）通过一些输入和凭证 ID 重新计算私钥，你可以阅读<a href=\"https://www.yubico.com/blog/yubicos-u2f-key-wrapping/\">这篇文章</a>了解更多。</p></blockquote>\n<blockquote><p>客户端通过凭证 ID 查找对应认证器的算法根据系统的不同是不同的。通常凭证 ID 中会包含认证器信息，因此系统可以通过凭证 ID 找到对应的认证器。</p></blockquote>\n<p>要避免输入用户名，我们可以要求认证器将私钥在自己的内存中也存储一份。这样，依赖方无需提供凭证 ID，认证器就可以通过依赖方 ID 找到所需的私钥并签名公钥。以下是具体流程：</p>\n<p>注册时：</p>\n<ol>\n<li>依赖方请求新建凭证，同时要求启用客户端密钥</li>\n<li>认证器生成一对公私钥，并将私钥存储在永久内存中且与依赖方 ID 及用户 ID 绑定，随后将公钥发送给依赖方以供存储</li>\n<li>依赖方将用户 ID 即公钥与用户绑定</li>\n</ol><p>验证时：</p>\n<ol>\n<li>依赖方请求验证，但不必提供除依赖方 ID 以外的更多信息</li>\n<li>用户选择认证器</li>\n<li>认证器根据依赖方 ID 找到对应私钥</li>\n<li>如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录</li>\n<li>确定私钥后，认证器签名挑战并将其返回，同时返回用户 ID</li>\n<li>依赖方通过用户 ID 找到对应用户并用对应公钥检查签名，正确则允许对应用户登录</li>\n</ol><blockquote><p>可以看到，这个特性同时要求认证器存储用户 ID，即上面提到过的 <code>userHandle</code>。依赖方需要根据此信息找到对应用户，因此不支持 <code>userHandle</code> 的 U2F 认证器无法进行无用户名登录。</p></blockquote>\n<blockquote><p>如之前所说，<strong>认证器能永久存储的私钥数量是有限的</strong>，因此只应在真正需要无用户名登录的时候启用此特性。</p></blockquote>\n<blockquote><p>目前暂时没有办法检测认证器是否支持客户端密钥驻留，因此在无用户名验证失败时应 fallback 至常规的 WebAuthn 验证，即向用户询问用户名。</p></blockquote>\n<p>现在让我们来看看如何实现这一特性吧。首先，调用 <code>navigator.credentials.create()</code> 时我们需要注意两个参数：<code>requireResidentKey</code> 必须为 <code>true</code>，<code>userVerification</code> 必须为 \"required\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"5-6\">navigator.credentials.create({\r\n    publicKey: {\r\n        ...\r\n        authenticatorSelection: {\r\n            requireResidentKey: true,\r\n            userVerification: \"required\"\r\n            ...\r\n        },\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Windows Hello <strong>似乎</strong>会存储所有已注册的凭据，因此无论是否指定 <code>requireResidentKey</code>，你都可以通过 Windows Hello 进行无用户名登录。</p></blockquote>\n<p>随后，浏览器会询问用户是否允许认证器存储私钥。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\" alt=\"浏览器提示\" width=\"445\" height=\"285\" class=\"aligncenter size-full wp-image-2208\"></a>\n<p>如果用户同意，认证器会存储私钥，并和普通的 WebAuthn 一样返回信息。不过，依赖方收到数据之后，只需将公钥、用户 ID 与用户关联起来，而不必再将凭证 ID 与用户关联起来。至此注册完成。</p>\n<p>之后，在用户请求登录时，无需再向依赖方提供用户名。同时在传入 <code>navigator.credentials.get()</code> 的参数中也有两个需要注意：<code>userVerification</code> 必须为 \"required\"，同时 <code>allowCredentials</code> 必须为空。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"4-5\">navigator.credentials.get({\r\n    publicKey: {\r\n        ...\r\n        userVerification: \"required\",\r\n        allowCredentials: [],\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Android 暂不支持无用户名验证，空的 <code>allowCredentials</code> 会导致浏览器返回 <code>NotSupportedError</code> 错误。</p></blockquote>\n<p>此时，认证器会根据依赖方 ID 找到对应的私钥。如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录。用户选择后，认证器就会使用对应的私钥签名挑战并将其返回。此时，<code>userHandle</code> 一定不为空。</p>\n<p>依赖方收到数据后，需要将 <code>userHandle</code> 作为用户 ID 找到对应的用户，并使用对应的公钥验证签名。如果验证成功，则认为对应的用户身份认证成功，依赖方可以允许其登录。至此验证结束。</p>\n<blockquote><p>有的时候你可能会需要清除认证器中的密钥。绝大多数认证器都提供了对应的软件以供清除存储的密钥，但大部分情况下这会重置整个认证器，这意味着相关认证器此前的所有凭证均会失效。因此建议不要将日常使用的认证器作为开发测试用的认证器。</p></blockquote>\n<h2>从 U2F 认证迁移</h2>\n<p>如果你的服务此前提供了 U2F 第二因素认证，你可能会希望在将依赖方从 U2F 升级到 WebAuthn 时用户此前注册的 U2F 认证器仍然可用而无需重新注册。由于 WebAuthn 向后兼容 U2F 设备，用户是可以继续使用原有的 U2F 认证器的。不过，由于 WebAuthn 的依赖方 ID 与 U2F 的 <code>appid</code> 并不一定相同，你需要将原有的 U2F <code>appid</code> 随 WebAuthn 流程一起传递给认证器，认证器才能使用正确的私钥进行响应。</p>\n<p>要实现这一点，我们只需要在注册及认证仪式中使用 WebAuthn 的 <code>appid</code> 扩展。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    appid: \"https://example.com\" //U2F appid\r\n}</pre>\n<p>此时认证器便可以得到正确的私钥，之后的流程与正常情况一致；依赖方除了正常的 WebAuthn 流程外，不需要再做任何其它操作。</p>\n<h2>拓展阅读</h2>\n<p>我们的 WebAuthn 之旅到这里就真的结束了。不过，你仍然可以自行探究，了解更多。<strong>本文只是一个粗浅的使用指南</strong>，而被称为“Web 身份认证的未来”的 WebAuthn 的深层还要很多细节值得我们挖掘学习，不过本文不会再继续讨论了。</p>\n<p>如果你想了解更多关于 WebAuthn 的信息，最好的方法是直接阅读 <a href=\"https://www.w3.org/TR/webauthn\">W3C 规范</a>。此外，Yubico 也提供了不错的 <a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn 文档</a>。</p>\n<p>要了解更多认证器存储凭证的信息，你可以阅读<a href=\"https://duo.com/labs/tech-notes/how-security-keys-store-credentials\">这篇文章</a>（英文）。</p>\n<p>如果你想了解更多 Android Safety Net 是怎样运作的，可以观看<a href=\"https://youtu.be/8lv_9mydrjg\">这个视频</a>，并通过 <a href=\"https://developer.android.com/training/safetynet/attestation\">Google 的文档</a>了解 Android Safety Net 的更多信息。</p>\n<p>如果你想方便地调试 WebAuthn，<a href=\"https://webauthn.me/\">webauthn.me</a> 提供了一个非常直观方便的<a href=\"https://webauthn.me/debugger\">调试器</a>。</p>\n<h1>参考资料</h1>\n<p><a href=\"https://www.w3.org/TR/webauthn\">WebAuthn Level 1 规范 - W3C</a><br><a href=\"https://github.com/w3c/webauthn\">WebAuthn Level 2 草案 - W3C</a><br><a href=\"https://blog.techbridge.cc/2019/08/17/webauthn-intro/\">一起来了解Web Authentication - TechBridge 技术共笔部落格</a><br><a href=\"https://medium.com/@herrjemand/introduction-to-webauthn-api-5fd1fb46c285\">Introduction to WebAuthn API - Medium</a><br><a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">WebAuthn/FIDO2: Verifying responses - Medium</a><br><a href=\"https://obeta.me/posts/2019-03-01/WebAuthn%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8\">WebAuthn介绍与使用 - obeta</a><br><a href=\"https://webauthn.io/\">webauthn.io</a><br><a href=\"https://webauthn.guide/\">webauthn.guide</a><br><a href=\"https://webauthn.me/\">webauthn.me</a><br><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion\">Attestation and Assertion - MDN</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Authentication_API\">Web Authentication API - MDN</a>（顺便翻译了一半）<br><a href=\"https://fidoalliance.org/fido-technotes-the-truth-about-attestation/\">FIDO TechNotes: The Truth about Attestation - FIDO Alliance</a><br><a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn Developer Guide - Yubico</a><br><a href=\"https://en.wikipedia.org/wiki/WebAuthn\">WebAuthn - Wikipedia</a><br><a href=\"https://techcommunity.microsoft.com/t5/identity-standards-blog/all-about-fido2-ctap2-and-webauthn/ba-p/288910\">All about FIDO2, CTAP2 and WebAuthn - Microsoft Tech Community</a><br><a href=\"https://webauthn-doc.spomky-labs.com/\">Webauthn Framework</a><br><a href=\"https://zhuanlan.zhihu.com/p/25279015\">如何开发支持 FIDO U2F 登录的网站 - 知乎专栏</a><br></p></pre>\n","link":"https://flyhigher.top/develop/2160.html"},{"title":"NLP 找门：用朴素贝叶斯进行文本分类","date":"2020-01-29 11:39:58","description":"\n<blockquote>\n<p>有一天，神收到了一封垃圾邮件，于是世界上就有了朴素贝叶斯算法。</p>\n<footer>——我瞎编的</footer>\n</blockquote>\n<p>为什么这篇文章的标题是 NLP 找门呢？因为如果你看完了这篇文章，你就可以<strong>准备入门</strong>自然语言处理 (<strong>N</strong>atural <strong>L</strong>anguage <strong>P</strong>rocessing) 了。我会把这篇文章当作一篇彻彻底底的 NLP 入门文章来写，尽量避免“专业高端”词汇和“全是奇怪符号”的式子，这样<strong>只要你有高中数学基础</strong>，就能毫无压力地看完这篇文章，学会使用朴素贝叶斯分类算法分类文本。</p>\n<p>让我们开始吧。</p>\n<h1>所以，啥是朴素贝叶斯？</h1>\n<p>简单来说，朴素贝叶斯 (Naïve Bayes) <strong>是一个简单但高效的分类算法</strong>，在进行不复杂的文本分类时高效且拥有不低的准确度，判断垃圾邮件就是用朴素贝叶斯进行文本分类的一个经典例子。当然朴素贝叶斯分类不仅能用在 NLP 中，在许多分类问题中朴素贝叶斯也有非常好的效果，但我们今天只关注它在 NLP 中的应用。</p>\n<p>要了解朴素贝叶斯，我们要先来了解一下贝叶斯定理。</p>\n<blockquote>\n<p>每增加一个数学公式都会使读者减半。</p>\n<footer>——霍金</footer>\n</blockquote>\n<p>那么，就让我们先来看看贝叶斯定理的公式吧（笑</p>\n<p>$$P(A|B) = \\frac{P(AB)}{P(B)} = \\frac{P(B|A)P(A)}{P(B)}$$</p>\n<p>其实还是很简单的，运用高中的条件概率知识就能理解。本质上，贝叶斯定理给出了一种方法，使得我们可以在 \\(P(A|B)\\) 和 \\(P(B|A)\\) 之间互相转换，因为通常情况下它们是不一样的。</p>\n<p>要更好地理解，请考虑这样一个例子：</p>\n<blockquote><p>假设有一个学校图书馆，图书管理员正为找不到某本书而发愁。已知老师有 70% 的意愿借走这本书，而是学生的意愿是 30%，这个学校的师生比例是 1:10，那么借走这本书的人是老师的概率有多大？</p></blockquote>\n<p>设学校总人数为 \\(T\\)，我们可以很容易地写出这样的一个式子：</p>\n<p>$$\\begin{align} P &amp; = \\frac{T\\cdot\\frac{1}{11}\\cdot 70\\%}{T\\cdot\\frac{1}{11}\\cdot 70\\%+T\\cdot\\frac{10}{11}\\cdot 30\\%} \\\\ &amp; = \\frac{70\\%}{70\\%+10\\times30\\%} \\\\ &amp; = \\frac{7}{37} \\end{align}$$</p>\n<p>这就是贝叶斯定理了！等等，你可能会挠挠头，这哪里是贝叶斯了？别急，如果我们把最上面的式子换个字母的话...</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>在这里，\\(H\\) 指 Hypothesis，即假设，而 \\(E\\) 指 Evidence，即证据。这样，这个式子就很好理解了，在我们上面的例子里，借走书是证据，那么 \\(P(E)\\) 就是某个人选择借走这本书的概率；这个人是老师是假设，那么这个人是老师的概率是 \\(P(H)\\)。<strong>注意这里的概率指在学校中抽一个人是老师的概率，并不是“在借走书的前提下”这个人是老师的概率</strong>，而“在借走书的前提下”这个人是老师的概率应该是 \\(P(H|E)\\)，也正是我们要求的概率。同样地，而“这个人是老师”的前提下借走书的概率就是 \\(P(E|H)\\) 了。</p>\n<p>那么再来看看上面我们凭小学知识就列出的计算式，如果把里面的具体数据换成概率来表示的话，这个式子就会变成...</p>\n<p>$$P(H|E) = \\frac{T\\cdot P(E|H)P(H)}{T\\cdot P(E|H)P(H) + T\\cdot P(E|\\neg H)P(\\neg H)}$$</p>\n<p>好吧，这里解释一下，\\(\\neg\\) 符号表示“非”，所以 \\(P(E|\\neg H)\\) 表示在“这个人不是老师”的前提下借走书的概率。而 \\(T\\cdot P(E|H)P(H)\\) + \\(T\\cdot P(E|\\neg H)P(\\neg H)\\)，即“可能借走书的老师的数量 + 可能借走书的学生的数量”，就是“可能借走书的人的数量”了，也就是 \\(T\\cdot P(E)\\)。上下消去 \\(T\\)，我们就能得到上面的式子了。</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>这就是贝叶斯了定理。如果你还是不太清楚，可以去看看 3Blue1Brown 的<a href=\"https://www.bilibili.com/video/av84799361\">这个视频</a>，图形化的讲解会清晰很多。</p>\n<p>这里我要提一下这个式子里各部分的专有名称了（“专业高端”词汇警告），你可以不记住，直接看后面。</p>\n<ul>\n<li>\\(P(H|E)\\) 叫做 \\(H\\) 的<strong>后验概率</strong>，反之亦然</li>\n<li>\\(P(H)\\) 叫做 \\(H\\) 的<strong>先验概率</strong>，反之亦然</li>\n<li>特别地，我们把 \\(P(E|H)\\) 称作<strong>“似然值”</strong>，即 likelihood</li>\n</ul>\n<p>那什么是朴素贝叶斯呢？按上面所说的，朴素贝叶斯是一种分类算法。简单来说，朴素贝叶斯将一个对象的各个特征考虑为互相独立，然后根据这些特征的概率的乘积来判断对象所属的分类。基本原理如下：</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)} \\propto P(E|H)P(H) = P(H)\\prod_{i}P(W_i|H)$$</p>\n<p>在这里，\\(W_i\\) 指某一对象的第 \\(i\\) 个特征，对于文本分类来说，这就是一段文本中的某个单词。</p>\n<p>朴素贝叶斯之所以“朴素”，是因为它要求<strong>各个特征间是独立的</strong>，在文本分类中也就是各个单词之间互不干扰。虽然思路简单的代价是适用范围变窄，不过由于这样的简化在很多情况下已经足够了，因此实际上朴素贝叶斯的应用范围非常广。<del>你看朴素贝叶斯 <strong>N</strong>aïve <strong>B</strong>ayes 的缩写都是 NB 了，能不厉害吗（逃</del></p>\n<h1>那么，咋分类啊</h1>\n<p>看来你这下完全听懂了呢（笑），是时候看看如何在 NLP 中应用朴素贝叶斯了。和上面一样，我们用一个具体的例子来说明。我们的目标是让电脑学会分类美国共和党和民主党的演讲稿，由于两个党派的演讲风格不同，所以这样的分类在理论上是可行的。</p>\n<div class=\"wp-block-file\">\n<a href=\"https://acdn.flyhigher.top/nlp/material.zip\" download>material.zip</a><a href=\"https://acdn.flyhigher.top/nlp/material.zip\" class=\"wp-block-file__button\" download>下载</a>\n</div>\n<p>上面我们要用到的数据集，你可以下载下来一起动手玩一玩。先说一下数据集的数据结构吧，压缩包里有两个文件，<code>train.txt</code> 将会被当作训练数据集，而 <code>test.txt</code> 则会作为训练结束后的验证数据集。两个文本文件里数据的结构是类似的，就像这样：</p>\n<pre class=\"EnlighterJSRAW\">BLUE WELL I AM SO HONORED AND PERSONALLY UNKNOWNWORD TO BE HERE...\r\nRED THANK YOU . THIS IS QUITE AN INSTITUTION . IT'S GOOD TO BE...</pre>\n<p>每行都是一篇演讲稿，每行的第一个单词指明了这篇演讲稿所属的党派，<code>RED</code> 指共和党，而 <code>BLUE</code> 指民主党。所有单词和符号都已经被转为大写并由空格分隔方便处理。<code>train.txt</code> 有共和党演讲稿和民主党演讲稿各 23 篇，<code>test.txt</code> 有 6 篇共和党演讲稿，12 篇民主党演讲稿。</p>\n<p>明白了？那我们就开始吧。</p>\n<h2>捋捋思路</h2>\n<p>首先，我们需要考虑如何在文本分类中应用朴素贝叶斯。很简单，按朴素贝叶斯的思路，<strong>计算每个词在某一分类下的出现概率，然后将某篇文章的所有词的概率相乘，再乘以该分类的先验概率，就可以得到某篇文章在某一分类下的概率。</strong></p>\n<p>$$P(Class|Article) = P(Class)\\prod_{i}P(Word_i|Class)$$</p>\n<p>各个分类概率都计算完成后，概率最高的那个分类就是这篇文章可能所属的分类。这个思路的核心就是用词决定了文本风格，文本的不同类别用词会有差异，只要能量化这些差异就可以分类文本。在我们的例子中，我们可以从 <code>train.txt</code> 中统计各个词汇的出现情况，然后用 <code>test.txt</code> 中的数据按上面的算法验证我们算法的准确性。</p>\n<p>这个思路很简单也很清晰，但还有一些问题需要解决。<strong>第一，有的时候，我们的测试数据集中可能会出现一个在训练数据集中没有出现过的词语。这个时候，朴素贝叶斯的计算结果会是 0。</strong>如果我们把 0 乘进式子中，那就别想得到正常的结果了。所以，我们还需要对计算某一单词在某一分类中的式子稍加改进。使用拉普拉斯平滑，就可以避免出现概率为 0 的情况。别被名字吓到，拉普拉斯平滑是一种非常简单的平滑方法：在分子上 +1，在分母上加整个取值范围，这样就可以给整个分式加上非常微小的偏移，避免出现 0。</p>\n<p>$$\\begin{align} P(Word_i|Class) &amp; = \\frac{Word_iCountInClass}{AllWordCountInClass} \\\\ &amp; \\approx \\frac{Word_iCountInClass + 1}{AllWordCountInClass + UniqueWordCount} \\end{align}$$</p>\n<p><strong>第二，对于长文本，大部分词语在某一分类中的出现概率是远小于 1 的，加上长文本词汇量大，往往概率相乘的结果会非常小。</strong>受限于计算机处理浮点数的原理，精确处理这么小的数字是很麻烦的。幸好，运用一些简单的数学知识就可以将其转化为更精确的表达，<strong>那就是取对数。</strong></p>\n<p>首先，将概率计算结果取对数并不影响我们的计算结果。因为取对数是一个单调递增的操作，而我们计算概率只是为了排序选择概率最高的分类，因此取对数是不影响我们排序的。而把多项式取对数，等于把多项式的每一项取对数后相加。所以我们有：</p>\n<p>$$\\lg{\\Big(P(Class)\\prod_{i}P(Word_i|Class)\\Big)} = \\lg{P(Class)} + \\sum_i\\lg{P(Word_i|Class)}$$</p>\n<p>大部分情况下，在每一次取对数的时候，要取对数的数字的大小，即 \\(P(Word_i|Class)\\) 尚还在计算机能处理的范围内，<strong>因此我们可以放心地使用取对数的方法</strong>，避免计算机精度不够影响结果。</p>\n<p><strong>第三就是在某些情况下，可能会有部分词语干扰计算结果</strong>，如 and, is 这类的被大量使用的中性词。如果希望得到更好的结果，我们可以维护一个停用词表，在计算时排除停用词即可。或者，我们可以在计算完每个单词的出现数量后，排除数量最多的前 \\(N\\) 个单词，避免这些单词过多地影响计算。</p>\n<h2>写点代码</h2>\n<p>现在我们终于可以开始实战，写点代码了。我会用简单的 Python 来表达思路。好了，理一理思绪，第一步我们要做的，是统计训练数据集中的用词情况。具体来说，根据上面的思考，我们需要统计的有：</p>\n<ul>\n<li>每个单词在各分类中出现的数量</li>\n<li>各分类中的不重复词数量</li>\n</ul>\n<p>用 Python 简单表示如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\"># 读入数据过程略...\r\ndata_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ndata_blue = []\r\ndata_red = []\r\nword_count_blue = {}\r\nword_count_red = {}\r\n\r\nfor line_data in data_raw:\r\n    word_list = line_data.split(\" \") # 分隔单词\r\n    if word_list[0] == \"BLUE\":\r\n        for i in range(1,len(word_list)):\r\n            if not is_excluded(word_list[i]): # 判断是否为停用词\r\n                data_blue.append(word_list[i])\r\n                # 统计单词出现次数\r\n                word_count_blue.setdefault(word_list[i], 0)\r\n                word_count_blue[word_list[i]] += 1\r\n    elif word_list[0] == \"RED\":\r\n        # Class = red 时同理...\r\n\r\n#统计非重复词\r\nunique_words_blue = list(set(data_blue))\r\nunique_words_red = list(set(data_red))</pre>\n<p>训练过程到这里就结束了，计算机已经知道了各政党演讲的用词习惯。很简单吧？接下来我们就要使用测试数据集来测试准确度了。<strong>这里开始就涉及到朴素贝叶斯的计算了</strong>，可能会稍微复杂一点点。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">import math\r\n#读入测试数据过程略...\r\ntest_data_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ntest_data = []\r\n\r\nfor line_data in test_data_raw:\r\n    if line_data[0] == \"BLUE\":\r\n        content_data = line_data.split(\" \").pop(0)\r\n        test_data.append({\"class\": \"blue\", \"content\": content_data})\r\n    elif line_data[0] == 'RED':\r\n        # ...\r\n\r\nfor line_data in test_data:\r\n    posibility_blue = 0\r\n    for word in line_data[\"content\"]:\r\n        # 计算各单词概率，取对数后相加，使用了拉普拉斯平滑\r\n        if word in word_count_blue:\r\n            posibility_blue += math.log((word_count_blue[word]+1)/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n        else:\r\n            posibility_blue += math.log(1/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n    # 最后加上该分类概率的对数\r\n    posibility_blue += math.log(len(data_blue)/(len(data_blue)+len(data_red)))\r\n\r\n    # 计算 Red 同理...</pre>\n<p>计算完成后，我们就得到每篇演讲稿在各分类下的概率了。之后，简单的比较就能得出推断的分类：如果 \\(P(Red|Article)\\) 大于 \\(P(Blue|Article)\\)，那么这篇演讲稿就更可能是共和党的演讲稿，反之则是民主党的演讲稿。</p>\n<p>很好理解吧？那么这么简单的思路，准确性怎么样呢？对于我们的例子，这是我设置了个别停用词后的结果：</p>\n<pre class=\"EnlighterJSRAW\">+-----+-------+--------------+--------------+-------+-------+\r\n|   ID|  Class|        P(Red)|       P(Blue)|  Guess| Status|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|    1|   Blue|  -23204.68377|  -22998.67066|   Blue|      √|\r\n|    2|   Blue|  -16438.44625|  -16137.48257|   Blue|      √|\r\n|    3|   Blue|  -33468.81214|  -32567.61801|   Blue|      √|\r\n|    4|   Blue|    -8606.2193|   -8601.50426|   Blue|      √|\r\n|    5|   Blue|  -12430.97436|  -11935.70662|   Blue|      √|\r\n|    6|   Blue|  -44033.02883|  -43877.55367|   Blue|      √|\r\n|    7|   Blue|   -16947.2851|  -16758.57542|   Blue|      √|\r\n|    8|   Blue|  -26957.26997|  -26889.62444|   Blue|      √|\r\n|    9|   Blue|  -27503.73985|  -27249.21828|   Blue|      √|\r\n|   10|   Blue|   -20528.4457|   -19991.1248|   Blue|      √|\r\n|   11|   Blue|  -20337.96493|  -19860.12831|   Blue|      √|\r\n|   12|   Blue|  -28409.28489|  -28118.98017|   Blue|      √|\r\n|   13|    Red|  -13756.01015|  -14488.11751|    Red|      √|\r\n|   14|    Red|  -17221.22732|  -17710.15936|    Red|      √|\r\n|   15|    Red|  -17397.45136|  -17899.98659|    Red|      √|\r\n|   16|    Red|  -10724.69095|  -11092.77837|    Red|      √|\r\n|   17|    Red|  -10402.40027|  -10859.48681|    Red|      √|\r\n|   18|    Red|   -9371.53792|    -9669.6769|    Red|      √|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|                                      Total: 18/18, 100.0% |\r\n+-----------------------------------------------------------+</pre>\n<p><strong>100% 的准确率哦！</strong>事实上，对于我们的这个例子，就算不设置停用词，我们仍能达到 100% 的分类准确率。朴素贝叶斯分类的确很 NB 呢。</p>\n<h1>更进一步</h1>\n<p>我们的探索到这里就结束了，但如果你有兴趣，完全可以继续探索下去。我们的例子是一个非常简化的例子，在实际情况中，还有很多问题需要解决。比如，对于中文及类似语言，不存在拉丁语系的天然分词结构，而朴素贝叶斯的文本分类是基于单词的，那么<strong>中文的分词就会是个问题；</strong>再比如，对于朴素贝叶斯分类来说，<strong>词语之间的顺序是不影响分类结果的</strong>，但这就会导致“今天心情很好，但昨天不好”和“昨天心情很好，但今天不好”在朴素贝叶斯看来是一样的，要想获得更好的结果，我们必须<strong>考虑词语的顺序。</strong></p>\n<p>这些问题，今天我们就不再深究了，但你可以自己探索。比如，引入思路同样很简洁的马尔科夫链，我们就可以让计算机学会考虑词语间的顺序，不过那就会是另一个话题了。</p>\n","link":"https://flyhigher.top/develop/1989.html"},{"title":"MDx 中增强页面可访问性的细节","date":"2020-01-25 16:45:04","description":"\n<blockquote><p>这篇文章本来是打算发在 <a href=\"https://mdxblog.flyhigher.top/\">MDx Blog</a> 的，不过写到后来发现这篇文章相对来说还是有价值的，于是就将这篇文章转移到了无垠，MDx Blog 则不再发表这篇文章。</p></blockquote>\n<p>从 MDx 开发之初，增强页面的可访问性就被列为了一个重要目标。从 HTML 语义化，到 ARIA 地标，再到 <code>prefers-reduced-motion</code>，随着浏览器对于增强页面可访问性的支持功能越来越多，MDx 也在不断地更新，让更多的人都能毫无困难地浏览、查看由 MDx 渲染的网页。本文会详细说明一些 MDx 中增强页面可访问性的细节，<strong>如果你希望增强自己开发的网页的可访问性，本文可能会对你有所帮助。</strong></p>\n<h1>基础性增强</h1>\n<p>增强可访问性，最重要也是最基础的一点就是 HTML 语义化。通过使用 HTML 5 语义化标签和 ARIA Role 标签，我们可以很方便地<strong>将整个网页在语义上分为几部分，而这将有效地改善屏幕阅读器对网页的分析质量，使视力障碍用户更好地浏览网页。</strong></p>\n<h2>HTML 语义化</h2>\n<p><strong>HTML 语义化属于增强页面可访问性的基础中的基础。</strong>通过使用语义化的 HTML 标签，我们可以方便地为网页中的各部分标记功能而不影响页面样式。随着符合 HTML 5 的现代化网页成为主流，语义化标签已被很大一部分网站所支持，我也不过多赘述了。就举几个常用的“地标性”标签吧：</p>\n<ul>\n<li>\n<code>header</code> 标签标记页眉，默认样式同 <code>div</code>，不要把它和 <code>head</code> 搞混了</li>\n<li>\n<code>main</code> 标签标记页面的主要内容，默认样式同 <code>div</code>\n</li>\n<li>\n<code>article</code> 标签标记文章（在 HTML 5 中它指任何独立或可复用的文本），默认样式同 <code>div</code>\n</li>\n<li>\n<code>footer</code> 标签标记页脚，默认样式同 <code>div</code>\n</li>\n<li>\n<code>nav</code> 标签标记页面导航栏区域，默认样式同 <code>div</code>\n</li>\n<li>\n<code>aside</code> 标签标记侧栏，默认样式同 <code>div</code>\n</li>\n<li>\n<code>section</code> 标签标记“一组内容”，你可以把它看作是划定网页中一块区域的通用标签，默认样式同 <code>div</code>\n</li>\n</ul>\n<p>只要用这些标签替代 <code>div</code> 而不是无脑使用 <code>div</code> 就能提高页面的可访问性。MDx 使用了这些标签来增强页面的可访问性。</p>\n<h2>下一步，ARIA</h2>\n<p>有的时候，出于一些原因，我们没法使用语义化的 HTML 标签，或者没有合适的语义化标签来标记内容，这时候<strong>我们就需要使用 ARIA (Accessible Rich Internet Applications，可访问的富互联网应用)。</strong>ARIA 的基础用法很简单，只要在相应元素上加上 <code>role</code> 属性指定该元素的功能即可。下面是一个简单的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;div role=\"navigation\"&gt;\r\n  &lt;ul&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page A&lt;/a&gt;&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page B&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page C&lt;/a&gt;&lt;/li&gt;\r\n  &lt;/ul&gt;\r\n&lt;/div&gt;</pre>\n<p>通过 <code>role=\"navigation\"</code>，我们把一个 <code>div</code> 标记为了导航栏区域。实际上，对屏幕阅读器来说，这和 <code>nav</code> 标签在语义上是一致的。上一节中的例子都可以分别用以下 ARIA Role 表示：</p>\n<ul>\n<li><code>role=\"heading\"</code></li>\n<li><code>role=\"main\"</code></li>\n<li><code>role=\"article\"</code></li>\n<li><code>role=\"contentinfo\"</code></li>\n<li><code>role=\"navigation\"</code></li>\n<li><code>role=\"complementary\"</code></li>\n<li><code>role=\"region\"</code></li>\n</ul>\n<p>除此以外，MDx 还使用了 <code>role=\"banner\"</code> 和 <code>role=\"search\"</code> 来分别标记页面中的顶部栏和搜索表单。另外，<strong>有的时候 <code>role</code> 属性还需配合 <code>aria-*</code> 属性一同使用</strong>，具体规则比较复杂，我就不在这里赘述了，具体可参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles\">WAI-ARIA Roles - MDN</a>。</p>\n<h1>媒体查询来帮忙</h1>\n<p>CSS 的媒体查询其实是一个非常强大的特性，<strong>妥善利用其中的一些特性，我们可以在网页外观上大大增强网页的可访问性。</strong>除了已经烂大街的“对浏览器窗口大小”响应的媒体查询，我会介绍 3 个很少有网站充分利用的媒体查询。</p>\n<h2>print</h2>\n<p><code>print</code> 媒体查询其实已经“历史悠久”了，<strong>只要使用 <code>@media print {...}</code> 就可以创建只在打印页面时生效的样式。</strong>通过这种方式，我们可以让页面在打印时应用一套为打印优化的样式，增强页面在物理纸张上的可访问性。</p>\n<blockquote><p>维基百科是对打印样式做了单独适配的著名例子。</p></blockquote>\n<p><strong>由于在打印的情况下，页面已经离开了“可交互”的范围，还有分页这种在屏幕中无需考虑的问题，要让页面在物理纸张上仍能被轻松地阅读，我们需要做一些特殊的适配。</strong>直接来看一个例子吧。以下是 MDx 针对打印情况进行的一些特殊优化，样式的具体理由已经写在了注释中。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media print {\r\n    /*隐藏不必要的元素*/\r\n    header, .mdx-ad-after-article, .mdx-ad-in-article, .mdx-post-money, .page-footer-nav, .mdx-same-posts, .spanout button, .mdui-drawer, .mdui-overlay, .mdui-menu, .mdx-share-img-dialog, .mdx-share-wechat-dialog {\r\n        display: none!important;\r\n    }\r\n\r\n    /*使用下划线标记链接*/\r\n    article a {\r\n        text-decoration: underline!important;\r\n    }\r\n    /*由于纸张不可交互，在链接后显示链接到的 URL*/\r\n    article a::after {\r\n        content: \"(\" attr(href) \")\";\r\n    }\r\n\r\n    /*强制白底黑字*/\r\n    html &gt; body {\r\n        background-color: white!important;\r\n    }\r\n    article p {\r\n        color: rgba(0,0,0,.8)!important;\r\n    }\r\n\r\n    /*对于纸张上的长文章，衬线字体拥有更好的可读性。以下字体列表来自 fonts.css*/\r\n    article {\r\n        font: 13pt Georgia, \"Nimbus Roman No9 L\", \"Songti SC\", \"Noto Serif CJK SC\", \"Source Han Serif SC\", \"Source Han Serif CN\", STSong, \"AR PL New Sung\", \"AR PL SungtiL GB\", NSimSun, SimSun, \"TW\\-Sung\", \"WenQuanYi Bitmap Song\", \"AR PL UMing CN\", \"AR PL UMing HK\", \"AR PL UMing TW\", \"AR PL UMing TW MBE\", PMingLiU, MingLiU, serif!important;\r\n    }\r\n\r\n    /*除部分元素外，禁止在元素内部分页*/\r\n    * {\r\n        page-break-inside: avoid;\r\n    }\r\n    article p, article a, #comments, article {\r\n        page-break-inside: auto;\r\n    }\r\n}</pre>\n<p>MDx 自 1.9.3 版本起已经包含了对文章页的打印样式优化。可以很容易地看出，优化后的样式在物理纸张上将更容易阅读。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\" alt=\"\" width=\"1345\" height=\"1602\" class=\"aligncenter size-full wp-image-1959\"></a>\n<h2>prefers-color-scheme</h2>\n<p><code>prefers-color-scheme</code> 是最近才被浏览器广泛支持的一个媒体查询，但它的功能却很强大：<strong>响应系统级黑暗模式。</strong>这样，我们可以在开启黑暗模式的系统中让网页具有更好的可读性。不过由于这个媒体查询直到最近才被广泛支持，因此大部分网站对此并没有进行适配。</p>\n<blockquote><p>一些适配这一特性的网站：少数派、微信公众平台（文章页）等。</p></blockquote>\n<p>通过像这样的媒体查询，我们可以在系统启用黑暗模式时让页面实时响应：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    body {\r\n        background-color: #212121;\r\n        color: rgba(255, 255, 255, .7);\r\n    }\r\n}</pre>\n<p><code>prefers-color-scheme</code> 一共有 3 个可能值：<code>no-preference</code>, <code>light</code> 和 <code>dark</code>。你也可以不像上面的例子那样默认使用亮色样式并在黑暗模式下启用黑暗样式，而可以反过来将黑暗样式作为默认，用亮色样式覆盖。在不支持的浏览器上将会显示默认样式（即媒体查询不会生效）。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<h2>prefers-reduced-motion</h2>\n<p>看名字就猜得出，<code>prefers-reduced-motion</code> 是和 <code>prefers-color-scheme</code> 师出同门的媒体查询。因此，和 <code>prefers-color-scheme</code> 一样，它也是在最近才获得了浏览器的广泛支持。它的作用也很强大：<strong>响应系统的“减弱动态效果”模式。</strong>这对某些不喜欢甚至无法接受动画的用户可能很有帮助。要知道，对有些用户来说这甚至是医疗上的必要。使用如下的媒体查询，我们可以在系统启用减弱动态效果模式时让页面实时响应，减弱动画：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-reduced-motion: reduce) {\r\n    /*只是一个示例，实际情况中可以保留一些淡入淡出效果*/\r\n    * {\r\n        transition: all 0s!important;\r\n        transform: none!important;\r\n    }\r\n}</pre>\n<p><code>prefers-reduced-motion</code> 只有 2 个可能值：<code>no-preference</code> 和 <code>reduce</code>，在不支持的浏览器上该媒体查询不会生效。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\" alt=\"\" width=\"792\" height=\"515\" class=\"aligncenter size-full wp-image-1962\"></a>\n<h1>黑暗模式适配</h1>\n<p>黑暗模式可不是简单地切换到黑底白字这么简单。<strong>单纯地使用黑底白字会导致页面元素之间对比度过高，文字刺眼，反而降低了页面的可访问性。</strong>我在下面总结了几条应用在了 MDx 中的黑暗模式优化规则和 Google 推荐的优化规则：</p>\n<p><strong>一是避免黑底白字。</strong>黑底白字看起来真的很难受，事实上，深灰和浅灰是黑暗模式最好的配色。比较下方例子里的两段文本，毫无疑问深灰色背景和浅灰色文字搭配的样式的可读性要比黑底白字高很多。（p.s. 有时候这条规则在白底黑字时也适用）</p>\n<p><strong>二是更改部分元素的亮度和对比度以增强可读性。</strong>你可能已经注意到了，下面优化的例子里标题文字的颜色改变了。很明显，未优化的黑暗模式中标题可读性不如优化的版本。在实际中，我们通常可以通过 CSS 滤镜来实现这一更改。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    h1 {\r\n        /*反相颜色后再将色相旋转 180 度，使亮度反相*/\r\n        filter: invert(1) hue-rotate(180deg);\r\n    }\r\n}</pre>\n<p><strong>三是避免让图片过亮。</strong>未经处理的图片通常会导致过高的对比度，降低可读性。在 MDx 中，我选择降低图片的亮度来避免图片刺眼，而 Google 的建议则是使图片灰度，不过这会影响图片的整体观感。无论是哪一种方案，都可以使用 CSS 滤镜来轻松实现。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    img { \r\n        /*MDx 方案*/\r\n        filter: brightness(.8);\r\n        /*Google 方案*/\r\n        filter: grayscale(.5);\r\n    }\r\n}</pre>\n<div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是未优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是经过优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n</div>\n<h1>其他细节</h1>\n<p>还有一些细节，虽然简单，但不可或缺。我把一部分没有在上文提到的 MDx 中的细节列在了这里。</p>\n<p><strong>一是允许页面缩放。</strong>在开发响应式页面时，很多网站会在页面头部添加这样一个 <code>meta</code>：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"&gt;</pre>\n<p>这样的 <code>meta</code> 设定了页面的宽度，却也固定了页面的缩放比例，用户难以手动放大网页。<strong>这样的设置对一部分视力障碍用户非常不友好</strong>，以至于苹果决定在自家的浏览器上忽略禁止缩放的 <code>meta</code>。按照 Google 的推荐，如果你在 MDx 设置中启用了“允许页面缩放”，那么 MDx 会输出这样的 <code>meta</code> 标签，允许页面进行五倍以内的缩放：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=5\"&gt;</pre>\n<p><strong>尽管很多时候放大页面会导致页面结构被破坏，但这大大增强了页面的可访问性，利大于弊。</strong>因此，在 MDx 中，“允许页面缩放”是默认启用的。</p>\n<p><strong>二是在跨设备阅读时同步阅读记录。</strong>这属于 MDx 的“元老级”功能之一。注意到页面右上角的那个“在其他设备上继续阅读”的按钮了吗？如果你滚动页面后重新点击它，你会发现二维码发生变化了。通过在二维码中记录阅读进度，用户在扫描二维码切换设备阅读时，MDx 在新设备上会自动滚动到和原设备上一致的位置——好吧，目前基于百分比的算法在某些情况下可能不太准，但我已经设计了一个更复杂但更精确的阅读进度记录算法，之后就会更新到 MDx 中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\" alt=\"\" width=\"1000\" height=\"574\" class=\"aligncenter size-full wp-image-1976\"></a>\n<p><strong>三是避免 Web 字体阻塞渲染。</strong>如果你在页面中使用了 Web 字体，在字体加载完成之前，浏览器可能不会渲染任何文本，这就导致用户可能需要等待一段时间才能开始浏览网页。Google 推荐使用 <code>font-display: swap;</code> 来向浏览器指定网页的 Web 字体渲染策略。这一规则会提供一个比较短的等待周期，如果在这段时间内 Web 字体没有完成加载，那么浏览器会以 fallback 字体渲染文本。任意时刻一旦 Web 字体完成渲染，浏览器就会使用 Web 字体重新渲染文本。这在大多数情况下都能满足可访问性的需求。</p>\n<p><strong>四是确保 html 元素具有合适的 <code>lang</code> 属性。</strong>这一属性声明了页面的主要语言，浏览器可以据此调整渲染策略，或者触发自动翻译；屏幕阅读器也能更好地阅读网页。</p>\n<p><strong>五是确保页面主要内容在丢失/禁用了 Javascript 甚至 CSS 的情况下仍然可用。</strong>作为一个以内容为主的网站，MDx 在禁用了 Javascript 的情况下页面主要内容仍然可用。这不只是为了 SEO，更是为了保证页面的可访问性。的确，目前的情况下，如果开启了 Lazyload，MDx 在禁用 Javascript 的情况下图片的确无法显示，但我会在后续版本中尽可能的优化这一问题。</p>\n<h1>附录：媒体查询开发技巧</h1>\n<p>有的时候，光有 CSS 响应媒体查询还不够，我们可能需要在 Javascript 中实时响应媒体查询。用如下代码就可以很简单地响应媒体查询：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let mql = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\r\nmql.addListener(handleMediaChange);\r\n\r\n//在添加监听后先调用一次，获得当前查询结果\r\nhandleMediaChange(mql);\r\n\r\nfunction handleMediaChange(mql){\r\n    if(mql.matches){\r\n        //查询匹配\r\n    }else{\r\n        //查询不匹配\r\n    }\r\n}</pre>\n<p>在开发上述媒体查询的过程中，我们需要频繁地切换系统的相应模式或者调出打印窗口。<strong>实际上，Chrome 提供了更简单的调试方法：</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1946\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\" alt=\"\" width=\"723\" height=\"681\"></a>\n<p>只要在这里更改模式，相关媒体查询就能实时生效。这不会影响其他标签页，在关闭开发者工具之后也会自动恢复系统设置。</p>\n","link":"https://flyhigher.top/develop/1912.html"},{"title":"MDx Blog 现已随 MDx 1.9.5 发布","date":"2020-01-22 17:54:11","description":"<p>随着 MDx 发布 1.9.5 更新，<a href=\"https://mdxblog.flyhigher.top/\" rel=\"noopener noreferrer\" target=\"_blank\">MDx Blog</a> 现已建立。我将会在 MDx Blog 中分享一些开发故事并发布 MDx 更新日志。</p>","link":"https://flyhigher.top/diary/1905.html"},{"title":"GitHub 2019 统计无垠版","date":"2020-01-12 13:02:00","description":"\n<h1>缘起</h1>\n<p>2019 年底，我突发奇想想要自己统计一番 GitHub 上存储库的一些信息。尽管 GitHub 有自己的<a href=\"https://octoverse.github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">年度统计</a>，我还是想试着自己爬取一下，说不定能挖出什么有意思的信息，何况这是我第一次有机会处理比较大量的数据，也算是一种学习的过程吧。于是花了一下午写了个简单的爬虫（时间都花在增加 Rate Limit 上了...），然后扔在了两台服务器上开始跑（GitHub  API 真是好文明）。</p>\n<p>从 2019.11.21 3 时到 2020.1.12 24 时的 52 天 21 小时内，我的爬虫一共爬取了<strong>与 2,024,705 个用户有关<sup>*</sup>的 14,651,923 个公共存储库的基础信息</strong>，平均每秒爬取 3.2 个存储库。据 GitHub 的官方数据计算，我爬取了大约 15% 的存储库信息，但由于封禁库和私有库的数量未知，我暂时无法确定我爬取的存储库占公共库的比例。同时由于存储库数量较多，基本可以认为爬取到的样本在时间尺度上已经足够随机，可以通过统计得出一般结论。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\" alt=\"\" width=\"700\" height=\"606\" class=\"aligncenter size-full wp-image-1892\"></a>\n<p>爬到自己了，合影.jpg</p>\n<p>那么下面就来看看统计出来的一些结果吧。爬虫的技术细节和数据集下载放在文末。</p>\n<p>* 指这些用户拥有至少一个库</p>\n<h1>统计信息</h1>\n<p><strong>以下统计结果均基于已放于文末的数据集。</strong>由于爬虫爬取的时间跨度长，加上我并没有完整爬取 GitHub 所有存储库，因此我<strong>不能保证以下统计结果符合真实情况</strong>，各位可以下载数据集或自行爬取进行验证。</p>\n<h2>一些数据</h2>\n<div>\n<div>\n<div>\n<span>3,120,930</span><br>总爬取用户数</div>\n<div>\n<span>44.7%</span><br>的存储库创建<br>自 Fork</div>\n<div>\n<span>6.59%</span><br>的账户被删除或<br>封禁<sup>1</sup>\n</div>\n<div>\n<span>23,913</span><br>单用户拥有最大<br>库数量<sup>2</sup>\n</div>\n</div>\n</div>\n<p><sup>1</sup> 基于用户 ID 规律合理推断<br><sup>2</sup> 统计范围仅限于当前数据集</p>\n<p>比较出乎我意料的是创建自 Fork 的存储库的占比。我预估这样的存储库占比不会太低，但没有想到能接近一半。此外单用户拥有最大库数量也大大超出了我的预期，<a href=\"https://github.com/pombredanne\" rel=\"noopener noreferrer\" target=\"_blank\">pombredanne</a> 这个用户名下拥有将近 24k 的存储库，不过绝大多数都是 Fork 来的，在情理之中。此外<strong>这个数据集中</strong>拥有最多存储库的账户其实是一个组织 <a href=\"https://github.com/gitpan\" rel=\"noopener noreferrer\" target=\"_blank\">gitpan</a>，这个组织拥有 36,377 个存储库。</p>\n<h2>语言</h2>\n<p><canvas></canvas><br>\n首先必须要说明的是，在这个榜单中我<strong>排除了 HTML 和 CSS</strong>，因为在严格意义上它们不属于“编程语言”。如果把它们计算进来的话，分别有 640,368 个和 361,425 个存储库的主要语言分别是 HTML 和 CSS，这样在这份榜单中它们可以排到第 6 和 第 10 名。JavaScript 毫无疑问获得第一，第二名 Python 的热度则和 JavaScript 相差将近一半。<strong>此外还有 2,448,486 个存储库未能识别出语言，占比 16.7%。</strong>在上面的榜单之外，与机器学习和数据科学相关的语言还有 Jupyter Notebook 排名第 13，R 排名 20，Julia 排名 43。</p>\n<p>说实话这份排名和 GitHub 官方的排名<strong>差别很大</strong>，除了前三名，后面的基本都不太一样。我的排名统计结果完全基于 GitHub 对于存储库的主要语言识别，加上我的存储库数据不完整，和官方的数据不同是很正常的，可以做一个参考，但大概率还是官方排名更加准确。</p>\n<h2>许可证</h2>\n<p><canvas></canvas></p>\n<p>自 GitHub 推出许可证功能以来，拥有许可证的存储库比例升升降降，却始终没有超过一半。<strong>选择一个合适的许可证对项目的良好发展真的很有帮助</strong>，要了解如何选择合适的许可证，请参阅<a href=\"https://www.runoob.com/w3cnote/open-source-license.html\" rel=\"noopener noreferrer\" target=\"_blank\">这篇文章</a>。</p>\n<p><canvas></canvas></p>\n<p>对于拥有许可证的存储库，MIT<del> 麻省理工许可证 </del>总是占比最大的；第二则是 Apache-2.0 许可证。此外，WTFPL 许可证也挤入了前 15 名。</p>\n<h2>星标</h2>\n<p><canvas></canvas><br>\nStar 数量毫无疑问是一个存储库受欢迎程度的体现，而 Star 数高的项目基本上大家都了解过。<strong>截至爬取结束时间</strong>，GitHub 中 Star 数最多的库是 <a href=\"https://github.com/freeCodeCamp/freeCodeCamp\" rel=\"noopener noreferrer\" target=\"_blank\">freeCodeCamp</a> <del>非常完美的驼峰命名法</del>，其次则是著名项目 <a href=\"https://github.com/996icu/996.ICU\" rel=\"noopener noreferrer\" target=\"_blank\">996.ICU</a>。<a href=\"https://github.com/vuejs/vue\" rel=\"noopener noreferrer\" target=\"_blank\">Vue</a> 现在的 Star 数已经稳压 <a href=\"https://github.com/facebook/react\" rel=\"noopener noreferrer\" target=\"_blank\">React</a> 一头，Vue YES! 此外 <a href=\"https://github.com/sindresorhus/awesome\" rel=\"noopener noreferrer\" target=\"_blank\">awesome</a> 也挤进第七名。<br><canvas></canvas><br>\n由于 Star 需要时间积累，新项目的 Star 数量很可能是比不过老项目的，这就会导致有实力的新项目无法出现在榜单中。因此我还统计了日均 Star 数，试图通过日均 Star 数来反映项目受欢迎的程度。<strong>由于正热门的项目会比老牌热门项目有优势，这一项的统计范围是 2020-01-01 之前的所有存储库。</strong>996.ICU 和 freeCodeCamp 再次出现在前 10 名，而最近的热门项目 <a href=\"https://github.com/wenyan-lang/wenyan\" rel=\"noopener noreferrer\" target=\"_blank\">wenyan</a> 则飙升至第 2 名。此外还有 <a href=\"https://github.com/menzi11/BullshitGenerator\" rel=\"noopener noreferrer\" target=\"_blank\">BullshitGenerator</a>，即最近热门的“狗屁不通文章生成器”和 <a href=\"https://github.com/evil-huawei/evil-huawei\" rel=\"noopener noreferrer\" target=\"_blank\">evil-huawei</a> 分列第 3 和第 5 名。<br><canvas></canvas><br>\n说实话这个曲线<strong>比我预估的陡多了。</strong>你可能已经注意到了，这个图表的横轴不是均匀缩放的，实际上曲线要比看起来陡很多。同时受爬取方式的影响，GitHub 中 Star 数较少的存储库数量远比我爬取到的多。也就是说，<strong>实际情况下曲线远比这个图表上的陡。</strong>拿点 Star 不容易啊。</p>\n<h2>名称</h2>\n<p><canvas></canvas><br>\n终于知道了原来存储库的名称是有长度限制的...尽管最长有 100 位，<strong>大部分人还是喜欢 8 位长的存储库名。</strong>此外 1 位长的名称也比我预估的要多一些。举几个存储库名称长度为 100 的例子吧。</p>\n<ul>\n<li>testing-something-elsetesting-something-elsetesting-something-elsetesting-something-elsetesting-some</li>\n<li>acts_as_validated_config_so_app_will_not_run_in_random_situation_and_qa_gays_will_not_cry_to_you_whe</li>\n<li>............................................________-....................................-.---......</li>\n<li>----------------------------------------------------------------------------------------------------</li>\n<li>nyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyan</li>\n</ul>\n<p>...创造力有够丰富的。</p>\n<p><canvas></canvas></p>\n<p>最近 GitHub 上有一种奇怪的风气，那就是建立 Awesome 合集<del>骗 Star</del>。看起来 Awesome 存储库满地都是，甚至还出现了关于 Awesome 的 Awesome 合集这种迷惑行为。于是我统计了一下，<del>还好，</del>占比<del>才</del> 0.5% 不到<del>，Awesomer 们任重而道远呐</del>。</p>\n<p><canvas></canvas></p>\n<p>尽管要在 github.io 上托管网站，存储库不一定要以 .github.io 结尾，但我还是统计了一下。拥有这类存储库的用户比我预想的要少一些，看来还有很多人没有完全发挥 GitHub 的完整实力啊<del>（比如我 Doge）</del>。同时<strong>这类存储库在所有存储库中占比 1.12%</strong>，看起来不多<del>，不过至少比 Awesome 多</del>。<br><canvas></canvas><br>\n看得出来 GitHub 对于用户名长度的限制是 1-40 位。用户名最短的 27 位占据了 <code>A-Z</code> 外加 <code>-</code> 的所有可能，而用户名最长的则是一个组织 <a href=\"https://github.com/UOIT-RESEARCH-database-information-group\" rel=\"noopener noreferrer\" target=\"_blank\">UOIT-RESEARCH-database-information-group</a>。不知道是巧合还是某种规律，<strong>最受欢迎的用户名长度和存储库名称长度一样，都是 8</strong>，有点意思。</p>\n<h2>创建时间</h2>\n<p><canvas></canvas><br>\n由于我并没有完整爬取所有存储库，我只能以相对值来统计每月新增存储库数量的变化趋势。<strong>在这个图表中，我将 2017-09 的数据设为了 100%。</strong>你一定一眼就能注意到 2017 年 6,7,8 月的“一柱擎天”。<del datetime=\"2020-02-05T09:18:30+00:00\">我第一次看到这个数据的时候的确愣了一下，不过就着这条新闻看就能明白为什么了：<strong>2017 年 6 月微软收购 GitHub。</strong></del></p>\n<blockquote><p>重新确认了一下，微软收购 GitHub 比这个高峰晚了一年，目前我对这个高峰没有什么很好的解释，如果你有什么思路的话欢迎评论。</p></blockquote>\n<p><strong>需要注意的是这张图表中我排除了 Fork 存储库</strong>，因为 Fork 存储库在 API 中的创建时间是原始存储库的时间，会影响整体趋势。此外，GitHub 中还有一个创建于 2007 年 10 月 29 日的存储库，那就是 <code>id: 1</code> 的...</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"mojombo\" data-mdxgithubp=\"grit\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/mojombo/grit\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>而它的创建者正是 GitHub 的创始人之一 Tom Preston-Werner。</p>\n<h1>一些有趣的结果</h1>\n<p>当初打算自己爬的目的之一就是想看看能不能挖出什么有意思的信息，结果真的有一些不挖不知道的信息。</p>\n<h2>奇怪的存储库</h2>\n<p>在爬取到的所有存储库中，<strong>有 3 个存储库是“无主”的</strong>，即它们的 owner 属性为空。这三个存储库的基本信息如下。</p>\n<div class=\"mdui-table-fluid mdui-table-hoverable\"><table class=\"mdui-table\">\n<thead><tr>\n<th>ID</th>\n<th>名称</th>\n<th>Forked</th>\n<th>Star</th>\n<th>语言</th>\n<th>许可证</th>\n<th>创建于</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>72385291</td>\n<td>vscode-redprl</td>\n<td>否</td>\n<td>10</td>\n<td>TypeScript</td>\n<td>apache-2.0</td>\n<td>2016-10-31 08:50:01</td>\n</tr>\n<tr>\n<td>181218346</td>\n<td>electron-sys</td>\n<td>否</td>\n<td>10</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-14 03:20:56</td>\n</tr>\n<tr>\n<td>181391880</td>\n<td>node-sys</td>\n<td>否</td>\n<td>6</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-15 09:33:08</td>\n</tr>\n</tbody>\n</table></div>\n<p><strong>更奇怪的是这三个存储库“无主”的情况还不一样。</strong>第一个存储库可以通过 <code>/repositories</code> 这个 GitHub API 找到， <a href=\"https://api.github.com/repositories?since=72385290\" target=\"_blank\" rel=\"noopener noreferrer\">这个链接</a>中的第一个存储库就是它；而其余两个存储库甚至无法在 <code>/repositories</code> API 中找到。不过就算能在 API 中找到第一个存储库，它的 <code>html_url</code>，即 <code>https://github.com//vscode-redprl</code> 仍然是不可访问的。这可能是 GitHub 早期的一个 Bug 导致的，不过我仍然对爬虫是如何找到这三个存储库的以及这些 Stars 是哪里来的感到好奇。</p>\n<h2>奇怪的用户名</h2>\n<p>在爬虫爬了一段时间以后，API 中突然开始出现大量的以 fdp 开头的 18 位乱码作为用户名的用户。这些用户拥有的存储库和 starred 的存储库都为 0，而他们的 <code>html_url</code> 为 404。以下是几个例子。</p>\n<ul>\n<li>fdpEpolGCEdQX4ZlRJ</li>\n<li>fdp8XaVrdtmDZnO5pR</li>\n<li>fdp8XRAGnwAOkTr2Ya</li>\n</ul>\n<p>由于我的爬虫并没有超过 Rate Limit，所以我排除了这是污染数据的可能。我怀疑这可能是某种 Bot 账户，于是一边更新爬虫过滤掉了这些用户，一边给 GitHub 支持发邮件问了具体情况。过了两天 GitHub 回复我说这些是<strong>被自动判为可疑进而被封禁的用户</strong>（原话是 they have been flagged by our automated measures for detecting suspicious behavior）。<del>想到我正在疯狂爬取 GitHub，突然害怕.webp</del></p>\n<p>行吧。</p>\n<h1>技术细节</h1>\n<p>爬虫使用 Python3 编写，数据库使用 MySQL。爬虫共使用了 4 个 API Token，在两台服务器上分布式爬取。爬取思路为：</p>\n<ol>\n<li>通过 <code>/users</code> API 遍历用户，每个请求最多获取 30 个用户信息</li>\n<li>循环 30 个用户，分别获取 <code>/users/&lt;user_name&gt;/starred</code> 和 <code>/users/&lt;user_name&gt;/repos</code> API 中的存储库信息，每个请求最多获取 100 个存储库信息，超过 100 个的分页获取</li>\n<li>提取存储库信息，插入数据库。对于已存在的存储库，更新数据</li>\n<li>获取下 30 个用户信息</li>\n</ol>\n<p>由于爬取过程中我多次调整了爬虫逻辑，爬虫爬取到的用户 ID 区间并非连续的，具体区间为1-839586, 14800001-14885493 及 28965251-31161101。</p>\n<h1>免责声明</h1>\n<p>本站会尽可能地提供准确信息，但本站不对此文章中信息的准确性和即时性及带来的任何影响负责。</p>\n<p>本站不代表 GitHub 官方，本文仅供学习之用，请不要将本文内容直接用于任何商业项目中。</p>\n<h1>数据集下载</h1>\n<p>导出的 SQL 文件大约为 1.38GB，全部放在了 GitHub 上（在危险的边缘试探.webp</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"github-analysis-2019\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/github-analysis-2019\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>此外我也提供了 MEGA 下载，链接<a href=\"https://mega.nz/#F!juxm3A6T!7Vwpzi82W1OFrqTLu1A1pQ\">在这里</a>。</p>\n","link":"https://flyhigher.top/develop/1564.html"},{"title":"Milkice 跨年红包解谜 Writeup 及无垠跨年红包解谜答案","date":"2020-01-02 04:29:19","description":"\n<blockquote><p><del>又到了水文章的时间呢</del></p></blockquote>\n<p>先说明一下，这篇文章原本不是在计划中的，而原来说好的「在路上的两篇」文章<del>绝对不会咕</del>。我自己的红包答案本来打算直接塞在年度总结里的，结果发现稍微有些长，再加上我还花了一些时间解了<a href=\"https://milkice.me/\">奶冰</a>的红包解谜游戏，就打算把两个解谜过程放在一起单独写一篇文章。<del>真是个水文章的好理由</del>（被打死</p>\n<h1>奶<del> 子 </del>冰的红包</h1>\n<p>奶冰的红包题目比我的难多了，所以让我们先从难的开始吧。首先看一下<a href=\"https://milkice.me/2019/12/31/2019-summary/\">题目</a>：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1524\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\" alt=\"\" width=\"746\" height=\"410\"></a>\n<p>入口是 <code>happy.2020.milkice.me</code>，扔到浏览器里面表示找不到 IP，那么大概率就是 DNS 的 TXT 记录了，查一下得到 <code>nb2hi4dthixs63ljnrvwsy3ffzwwkl3tivrvezluomxxg5dsmvqw2ltqmnqxa3th</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1525\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\" alt=\"\" width=\"896\" height=\"278\"></a>\n<p>第一眼没看出来是什么编码，直觉是 BaseXX 系列的编码，加上提示“不只有 Base64”，可以推断出是 Base32，转大写解码得到 <code>https://milkice.me/sEcRets/stream.pcapng</code>。是个 URL，下载得到一个 Wireshark 文件，打开一看是和某 USB 设备的通讯抓包。<del>不会做，不做了。</del></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1526\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\" alt=\"\" width=\"1500\" height=\"813\"></a>\n<p>奶冰提示我“Google 上搜得到”，结合第二条提示搜索“wacom pcapng”找到了<a href=\"https://blogs.tunelko.com/2017/02/05/bitsctf-tom-and-jerry-50-points/\">这篇文章</a>（<del>这™就是答案啊</del>）。看起来是一样的套路，即通过解析数据得到数位板上画的内容，于是按文章的思路筛选出数位板发给主机的数据，导出，然后再用 tshark 导出文本数据。本来我想直接用文章中的 POC 的，结果折腾半天因为源的蜜汁原因库没装上，于是按文章中给出的数据结构自己写了段代码，分别导出 X、Y 轴数据扔进 Excel 画散点图。（<del>别问我为什么用 Excel，因为我手边没有更好的工具了</del>）</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1528\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\" alt=\"\" width=\"1280\" height=\"530\"></a>\n<p><span>翻车现场之一</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1539\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\" alt=\"\" width=\"1000\" height=\"286\"></a>\n<p><span>懵逼奶冰.webp</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1533\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\" alt=\"\" width=\"1500\" height=\"462\"></a>\n<p>看得出有手写文字，不过是上下颠倒的，翻转图片得 <code>https://milkice.me/2020/uso.zip</code>。是个 zip，下载打开一看，有密码。<del>不会解，不做了。</del> 第一反应是暴力解密码，但是暴力跑了 15 分钟还是没有跑出来。暴力太不优雅了，肯定不是正确思路，但奶冰什么都不肯说了。不过在这时我终于发现第一个红包口令码就藏在压缩包的注释中，Get。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1544\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\" alt=\"\" width=\"806\" height=\"593\"></a>\n<p>然而题还没解完，回去看提示，看到提供了 osu 谱面下载，于是打算不管怎么样先下载来看看。然而 osu 谱面下载要登录，只好又花了几分钟找到第三方站点，成功下载。这时候可以注意到 uso.zip 里有个同名文件（432314 Mike Greene - Bill Nye the Science Guy Theme Song (Chinese Intro).osz），可以联想到是明文攻击。好吧，上 ARCHPR，十秒解出。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1530\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\" alt=\"\" width=\"462\" height=\"643\"></a>\n<p><span>现场还原.jpg</span></p>\n<p>.osz 文件并不是明文，猜测是压缩包（和 .pptx 一个思路嘛），于是改后缀 .zip 顺利打开。然后红包口令码就藏在奶冰的 .osu 文件中了，由提示可知是明文，打开即可得到。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1542\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\" alt=\"\" width=\"457\" height=\"255\"></a>\n<h1>我的红包</h1>\n<p>相比起来<a href=\"https://flyhigher.top/diary/1464.html\">我的题目</a>就简单很多了嘛...三天时间一共发出了 25 个红包，包括一位重复领取的🌚，比前几年还是多了一些的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\" alt=\"\" width=\"500\" height=\"306\" class=\"aligncenter size-full wp-image-1554\"></a>\n<p><span>这位同学以后请不要多次领取🌚</span></p>\n<p>那么来看看答案吧。</p>\n<h2>第一阶段</h2>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>首先观察字符串，可以发现 <code>.</code> <code>/</code> <code>_</code> 等一些 ASCII 字符原样留在了字符串中，而其他字符被由 <code>=</code> 和十六进制构成的某种编码所替代。如果你正好有所了解，你应该能认出这是 Quoted-printable 编码，这是一种常用于邮件中的编码，可以用<a href=\"https://mothereff.in/quoted-printable\">这个页面</a>解码。如果你不了解，你也应该可以发现这种编码和 URL 编码非常相似。如果你把 <code>=</code> 替换为 <code>%</code>，那么你就可以用各种方法顺利地把它按 URL 编码来进行解码，最后可以得到 <code>αхtоn.іm/соdе_оf_2020_⒈mρз</code>。这个字符串里大部分字符都不是 ASCII 字符，只是长得像而已。根据第一个提示“全是 ASCII 字符”，按样子把字符串用 ASCII 字符抄一遍，可以得到最终 URL 为 <code>axton.im/code_of_2020_1.mp3</code>。</p>\n<h2>第二阶段</h2>\n<p>下载音频，可以听出音频是经过某种处理的白噪音。白噪音的特点是各频段的功率都均匀分布，在白噪音上做文章，很容易就可以联想到线索藏在频谱中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1534\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\" alt=\"\" width=\"1200\" height=\"719\"></a>\n<p>频谱被处理成了 24x3 的网格，结合第二条提示“24x3，横向读取”可以推断出是将频谱当作二进制读取，得到 <code>01111001 01110010 01100011 00101110 01101101 01100101 00101111 00110010 00110000</code>，转为 ASCII 字符可得 <code>yrc.me/20</code>。</p>\n<h2>第三阶段</h2>\n<p>打开上一步得到的页面，提示要求输入十位数密码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1536\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\" alt=\"\" width=\"663\" height=\"460\"></a>\n<p>如果你在上一步注意到了这个音频文件奇怪的属性，你可以反应过来这里的密码就是 <code>2000202020</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1537\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\" alt=\"\" width=\"421\" height=\"651\"></a>\n<p>如果你没有注意到，查看页面代码可以看到一条注释 <code>&lt;!-- Tips: the attribute of the audio --&gt;</code> 将你引导向音频文件的属性。输入密码，解锁即可进入下一步。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1535\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\" alt=\"\" width=\"397\" height=\"223\"></a>\n<h2>第四阶段</h2>\n<p>可以看到是一张图片，内容为“<del>.JPG</del>”和“.ZIP”。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter size-large wp-image-1532\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n<p>和去年一样的套路，下载图片，将后缀名改为 .zip 然后打开，可以看到 README.txt。</p>\n<h2>最后一步</h2>\n<p>查看 README.txt 的内容，可以了解到需要去 🤔.axton.cc 获取红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1538\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\" alt=\"\" width=\"1131\" height=\"278\"></a>\n<p>扔到浏览器里会出现奶冰同款找不到 IP，于是可以联想到 TXT 记录。唯一的问题是 🤔 这个 Emoji 需要如何处理。域名使用 Punycode 将 Unicode 字符转换为 ASCII 字符，特点是以 <code>xn--</code> 开头。如果你把上面这个域名扔进浏览器，你会发现它变成了 <code>xn--wp9h.axton.cc</code>。然后查询 TXT 记录，即可得到红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1527\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\" alt=\"\" width=\"804\" height=\"557\"></a>\n","link":"https://flyhigher.top/develop/1519.html"},{"title":"无垠 2019 年度总结","date":"2019-12-29 12:25:52","description":"\n<p>又是时间飞快的一年...写 2018 总结的情景似乎还在眼前，转眼居然已经到 2019 年末了。</p>\n<p>2019 年，发生了太多事情，包括真的转折了人生的高考，这也导致我博客更新的不多（难以置信居然才更了两篇...），不过两篇技术性文章已经在路上了，可以期待一下。</p>\n<p>2019 年我也学了不少东西（单指技术方面），比如终于认真学了 Vue（但是还要练手）。书买了一大堆，看完的倒是没几本orz</p>\n<p>呼，好吧，是时候回顾一下充满坎坷的这一年了。2019 年还剩下最后两天，希望 2020 年，我能做得更好。</p>\n<h1>一些数据</h1>\n<p>照惯例先来看看一些数据吧。今年是统计系统完整统计了的第二年，终于可以和去年的数据比较一下了。以下数据的统计范围是 2019年1月1日0时至 2019年12月29日20时。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 26,901 (<span>+4%</span>)，年 PV 76,583 (<span>+3%</span>)，日均 UV 73.7，平均停留时间 5分13秒 (<span>-13.8%</span>)，平均跳出率 53% (<span>+20.5%</span>)。一年有效文章数 2 (<span>-50%</span>)，新增评论 439 条。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\" alt=\"\" width=\"1000\" height=\"1143\" class=\"aligncenter size-full wp-image-1511\"></a>\n<p>有趣的是今年文章数腰斩，访问数反而小有提升。<del>如果我哪天不更新了，访问数是不是可以无限大呢？</del></p>\n<p>今年博客最大的改动就是把整体风格切换到了 Material Design 2（当然这是 <a href=\"https://flyhigher.top/develop/788.html\">MDx</a> 中的可选功能，给自己打个广告2333），此外还有比较失败的 WebP 改造计划，因为和缓存冲突已经回滚了。<a href=\"https://flyhigher.top/develop/1245.html\">ABS 系统</a>进展不大，主要是真的没有太多时间，还是要再学习一个。</p>\n<h2>个人主页</h2>\n<p>虽然个人主页的 TODO List 列了老长，但今年完全没有更新，也没有推广，从今年 8 月底开始还莫名被某墙认证了，直到 11 月底才恢复，于是今年总访问量比去年少了很多，</p>\n<p>有多少呢？这么少：总 UV 2,141 (<span>-65.9%</span>)，总 PV 2,744 (<span>-66.6%</span>)，日均 UV 6 (<span>-65.9%</span>)，平均停留时间 62秒 (<span>+19.2%</span>)。主要来源是知乎和 V2EX，还有一些甚至是从微信来的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\" alt=\"\" width=\"1000\" height=\"1103\" class=\"aligncenter size-full wp-image-1512\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 8 次，新增 171 commits，2 种语言的翻译，Star 数增加了 175，现有 408。感谢所有人的支持，尤其是 <a href=\"https://github.com/Sn0bzy\" rel=\"noopener noreferrer\" target=\"_blank\">Hasan CAN</a>, <a href=\"https://github.com/yechs\" rel=\"noopener noreferrer\" target=\"_blank\">Ye Shu</a>, <a href=\"https://github.com/StarryLeo\" rel=\"noopener noreferrer\" target=\"_blank\">StarryLeo</a>, <a href=\"https://github.com/DCTewi\" rel=\"noopener noreferrer\" target=\"_blank\">冻葱Tewi</a>, <a href=\"https://github.com/syfxlin\" rel=\"noopener noreferrer\" target=\"_blank\">Otstar Lin</a> 等为 MDx 做出了不小贡献的你们。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：<a href=\"https://flyhigher.top/photograph/1309.html\">上手</a> DJI OSMO Pocket</li>\n<li>四月：最后一次参加浙江省普通高中学业水平考试</li>\n<li>五月：MDx 喜提 300 Stars</li>\n<li>六月：高考 <del>炸了，差亿点点上浙大</del>\n</li>\n<li>六月：入手了 Oneplus 7 Pro</li>\n<li>六月：和同学一起去成都重庆旅行</li>\n<li>六月：第一次近距离感受到地震</li>\n<li>六月：<a href=\"https://flyhigher.top/diary/1411.html\">入手</a>了一台雷蛇灵刃 15，目前是主力机</li>\n<li>七月：参与组织 THE Hack 2019 活动</li>\n<li>七月：面基了 <a href=\"https://itroy.cc/\" rel=\"noopener noreferrer\" target=\"_blank\">Tory</a>, Bie Shi 和 <a href=\"https://oxz.me/\" rel=\"noopener noreferrer\" target=\"_blank\">FHYunCai</a>\n</li>\n<li>八月：一个人去厦门武汉转了一圈，拍了自己的第一个 Vlog</li>\n<li>八月：入手了一个 Kindle Paperwhite 4，没有泡面可以压，于是用来看英文小说了</li>\n<li>八月：加入 TEDxNingbo 志愿者团队</li>\n<li>八月：和 Ralph 面基</li>\n<li>八月：入手了一个 Yubikey</li>\n<li>九月：人生第一次参加雅思考试 <del>7分，蛮开心的</del>\n</li>\n<li>十月：入手了一个 Samsung Galaxy Watch Active 2 <del>觉得不值</del>\n</li>\n<li>十一月：MDx 达到 400 Stars</li>\n<li>十一月：为 TEDxNingbo 设计开发的 H5 上线</li>\n<li>十一月：入手了第一台胶片相机，试图入坑胶片摄影</li>\n<li>十一月：参加 TEDxNingbo 2019 大会</li>\n<li>十二月：<del>我 Cytus II 入门了</del>\n</li>\n</ul>\n<h1>跨年红包</h1>\n<p>这算「传统习俗」了。和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2020年1月2日。</p>\n<p>今年的解谜旅程，从下面这个字符串开始。</p>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>由于今年的题目比以前稍微难了一些，所以今年的红包金额还是比较大的，而且不限量，尽你所能试一试吧。</p>\n<p>一点你可能用得上的提示：URL 里全是 ASCII 字符 / 24x3，横向读取。</p>\n<p><a href=\"https://flyhigher.top/develop/1519.html\">答案</a>已公布。</p>\n<h1>跨年海报</h1>\n<p>这算是另一个「传统习俗」（笑）。因为我有做跨年海报的习惯，所以以下就是今年份的海报啦。</p>\n<p>用了 C4D+PS，还有我的一整个下午。</p>\n<p>提前祝各位新年快乐！</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter wp-image-1467 size-large\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n","link":"https://flyhigher.top/diary/1464.html"}]