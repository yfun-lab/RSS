[{"title":"各家新能源车企是如何避免出现锂电池热失控现象的？","date":"2022-05-06 02:45:39","description":"\n<p data-pid=\"Qmv-Hq-v\">不知道大家有没有琢磨过：<b>热失控(Thermal Runaway)听起来文绉绉的，为什么不起一个直白的名字？ </b></p>\n<p data-pid=\"FHVKr11s\">咱们新闻上看到的电池热失控，烧起来都很惨烈！</p>\n<p><img src=\"https://pic1.zhimg.com/v2-717d543a58ee8f25810e66d9ebe08503_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"575\" data-rawheight=\"332\" data-watermark=\"original\" data-original-src=\"v2-717d543a58ee8f25810e66d9ebe08503\" data-watermark-src=\"v2-aa1dc0f649ac14e02fd63e1a3f24da2f\" data-private-watermark-src=\"v2-798d8f67dfd12dd4292720da90cfe6ee\"></p>\n<p data-pid=\"6EosW3xe\"><b>那「热失控」为什么不叫「失火了」或「烧起来」呢？</b></p>\n<p data-pid=\"fV8C1YFy\">这是因为，后果惨烈的热失控通常是「千里之堤，毁于蚁穴」的、较为缓慢的渐进过程。</p>\n<p data-pid=\"w1kFF1pO\">在这个渐进过程中，大部分时间都是「可控」的，当超越某个「临界点」之后，才变得「失控」。</p>\n<p data-pid=\"juuS8xSe\">例如，数百个电芯中的其中一个电芯温度偏高，本来不是什么大问题。</p>\n<p data-pid=\"3BF5-kHt\"><b>但是呢，温度一高，电芯里会产生副反应；这些副反应大多是放热的，然后导致温度更高。</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-0f8d2755df22df1d259ccf1cdf3785d8_720w.jpg?source=b1748391?rss\" data-caption=\"黑线上方的副反应都是放热的\" data-size=\"normal\" data-rawwidth=\"1355\" data-rawheight=\"770\" data-watermark=\"original\" data-original-src=\"v2-0f8d2755df22df1d259ccf1cdf3785d8\" data-watermark-src=\"v2-02b3488a2a75bfcdc6646bc9acd88cee\" data-private-watermark-src=\"v2-bfb74e020bfa07ef3f484ba14ecb58c5\"></p>\n<p data-pid=\"flaKpjFA\"><b>温度高 → 副反应 → 温度更高 → 新的副反应 → 温度更高 ……</b></p>\n<p data-pid=\"5-kCdVpl\"><a href=\"https://www.zhihu.com/search?q=%E9%93%BE%E5%BC%8F%E5%8F%8D%E5%BA%94&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2453317813%7D\" class=\"internal\">链式反应</a>到达某个临界点之前，还可以称为是「热堆积」；到达临界点之后，形势就无法逆转，就成了「电芯的热失控」了。</p>\n<p data-pid=\"RELc0ouC\">「电芯的热失控」并不可怕，说到底它也就是几包烟大小的小物件嘛，能有多大能耐？<b>但是呢，个别电芯的热失控放出大量热，把周围的电芯也加热到临界温度，也发生了热失控……</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-452e7ff4cc981b25366c00e97585bfc7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"530\" data-watermark=\"original\" data-original-src=\"v2-452e7ff4cc981b25366c00e97585bfc7\" data-watermark-src=\"v2-becc8828d81f68fc312c482bbae46cc2\" data-private-watermark-src=\"v2-a3b501bf4943dc756db8f2744051e920\"></p>\n<p data-pid=\"baSLaLEk\">当发生「芯传芯」的现象之后，很快就会蔓延到整个模组，到这个时候情况就非常严重了，损失就不可避免了。</p>\n<p data-pid=\"DKrJUJBy\"><b>2019年4月上海特斯拉自燃事故中，其实电池包并没有烧光，只是烧了几个模组，但也已经惨烈至此了。</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-a4ec559508a01caf742403619b103a28_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1077\" data-rawheight=\"757\" data-watermark=\"original\" data-original-src=\"v2-a4ec559508a01caf742403619b103a28\" data-watermark-src=\"v2-4c46fa1d9b3c46c20df986d6a72a8ae7\" data-private-watermark-src=\"v2-0e7d6966b9c50345a58c44294dd8aa0c\"></p>\n<p data-pid=\"S74YLNVc\">事故的调查也可以反映出这种「芯传芯」、「模组传模组」的特性。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d67506f019e2f5cc6c65e53a1cb6fc9a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"809\" data-rawheight=\"482\" data-watermark=\"original\" data-original-src=\"v2-d67506f019e2f5cc6c65e53a1cb6fc9a\" data-watermark-src=\"v2-4c096bc0af7d0289862bd78cc08a262f\" data-private-watermark-src=\"v2-48df02ee6e08dd37bedda7f394f87cc7\"></p>\n<p data-pid=\"yIdjFbuI\">做个概括：先是小副反应带来大副反应，然后是单个电芯传到多个电芯，接着单个模组传到多个模组，<b>「可控状态」渐渐变成了「失控状态」，核心的传导环节都是「热」，所以才被称为「热失控」</b>。</p>\n<p data-pid=\"lOTGxhiJ\"><b>最初的诱因，除了上面举例提到的过热之外，还可能源于机械原因（挤压、针刺）、电的原因（过充、过放、内短路）</b>。</p>\n<p><img src=\"https://pica.zhimg.com/v2-3da20592b9e79a064426f7fa929e75c3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"528\" data-rawheight=\"307\" data-watermark=\"original\" data-original-src=\"v2-3da20592b9e79a064426f7fa929e75c3\" data-watermark-src=\"v2-ea904ef9629d13eae73e569c69a65702\" data-private-watermark-src=\"v2-370e29cad939d1bd9e8b034103455ae1\"></p>\n<p data-pid=\"4bzR3HCc\">了解这些之后，我们就不难猜出各车企对付热失控无非就两条路可以走了：</p>\n<ul>\n<li data-pid=\"Spa3G2PF\">避免热失控的热诱因、电诱因、机械诱因发生。</li>\n<li data-pid=\"hDYxc1g2\">当局部热失控发生时，控制它的蔓延，将损失尽可能控制低 —— <b>正常使用 &gt; 需要维修 &gt; 需要更换 &gt; 烧了电池 &gt; 烧了整车 &gt; 烧得太快导致人身伤亡</b>。但是，如果真到了「烧了电池」这一步，后果严重到什么程度就听天由命了。</li>\n</ul>\n<h2>第一条路：避免热失控的热诱因、电诱因、机械诱因发生</h2>\n<ol><li data-pid=\"idZLNt7o\"><b> 避免热诱因</b></li></ol>\n<p data-pid=\"jkpvO-BT\">同样的温度，有的电池很敏感，有的电池不敏感。<b>一般来说，能量密度越高的电池，越不稳定。</b></p>\n<ul>\n<li data-pid=\"W--ocjDM\">磷酸铁锂(LFP)比三元锂更稳定。</li>\n<li data-pid=\"DTiAyCqM\">在三元锂中，镍钴锰酸锂(NCM)比镍钴铝酸锂(NCA)更稳定。</li>\n<li data-pid=\"HAE5rj97\">在NCM中，NCM523比NCM811更稳定。</li>\n</ul>\n<p><img src=\"https://pic3.zhimg.com/v2-3cb0807dece564ef4806c1a931345b3f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1156\" data-rawheight=\"866\" data-watermark=\"original\" data-original-src=\"v2-3cb0807dece564ef4806c1a931345b3f\" data-watermark-src=\"v2-72b13d3f2da0795ddeaf193814e136a2\" data-private-watermark-src=\"v2-6ea9b9850cdd4b5a035dc52620a722d8\"></p>\n<p data-pid=\"piPwiGE8\">从这个角度来说，比亚迪的刀片电池就很不错，因为它是磷酸铁锂电池。磷酸铁锂正极材料的<b>副反应<a href=\"https://www.zhihu.com/search?q=%E4%B8%B4%E7%95%8C%E6%B8%A9%E5%BA%A6&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A1118498211%7D\" class=\"internal\">临界温度</a>比三元锂、锰酸锂、钴酸锂都要高</b>（发生放热副反应的条件更苛刻）、<b>副反应的放热量更低</b>。</p>\n<p data-pid=\"2l-FEyHH\">此外，在正极材料发生副反应时，磷酸铁锂材料的由于高能量的P=O键使得氧气不会轻易释放出来，这就降低了电解液遇到氧气起火的可能性<sup data-text=\"冯旭宁. 车用锂离子动力电池热失控诱发与扩展机理、建模与防控[D]. 清华大学.\" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\">[1]</sup>。</p>\n<p><img src=\"https://pica.zhimg.com/v2-2d31a27b90c51c893f059268c58243b6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"479\" data-watermark=\"original\" data-original-src=\"v2-2d31a27b90c51c893f059268c58243b6\" data-watermark-src=\"v2-a2eb93827eaace3452f4db7395d6011f\" data-private-watermark-src=\"v2-014d27f39a81b3291a0759ca31c988e5\"></p>\n<p data-pid=\"sshQltGk\">比亚迪的功劳并不在于重新发明了磷酸铁锂，而是大幅度提高了体积能量密度，使它在乘用车市场占据了一席之地。以前搭载磷酸铁锂电池的电动汽车，大部分很难突破400公里续航；而比亚迪首款搭载刀片电池的比亚迪“汉EV”，综合续航里程可达605公里。</p>\n<p data-pid=\"Ph3dvPhR\">后来的事情大家就知道了，磷酸铁锂的出货量节节攀升。<b>虽然磷酸铁锂并不是比亚迪发明的，但它的重新崛起确实离不开比亚迪的工艺与制造能力。</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-3278bdff140ae1e80b6a30c164a2e098_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"668\" data-rawheight=\"501\" data-watermark=\"original\" data-original-src=\"v2-3278bdff140ae1e80b6a30c164a2e098\" data-watermark-src=\"v2-90ff6a36ee53ab5241a999d8ecef4593\" data-private-watermark-src=\"v2-f66c70e1833e07fa76a43869c5b88721\"></p>\n<p data-pid=\"w7feYYYc\">从刀片电池这个例子可以看出，凡是可以更充分利用空间的技术，都可以让工程师做电池安全时更从容（用低能量密度电池、做更多安全设计），也算是避免了热失控现象发生。</p>\n<p data-pid=\"Uk4YfFSL\"><b>宁德时代的钠离子电池也很安全，也有可能用在车上，做标准续航版</b>：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-ed4f52c0079c7a097b6f501721cd4a7a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1349\" data-rawheight=\"707\" data-watermark=\"original\" data-original-src=\"v2-ed4f52c0079c7a097b6f501721cd4a7a\" data-watermark-src=\"v2-728d6380ca5f0c629b076ba812fddd24\" data-private-watermark-src=\"v2-dcca0be1200eb396d0d306b3095f1b7a\"></p>\n<p data-pid=\"u6TYG_bq\"><b>从这个逻辑上讲，宁德时代CTP技术、零跑C01上的CTC技术、通用奥特能的无线BMS技术，也是间接降低了热失控的可能性。</b></p>\n<p data-pid=\"S8Hs7Wvv\">做好电池热管理，也可以避免热诱因的发生 —— <b>既要确保整个电池包不过热（充足的散热能力），也要确保每一节电芯不过热（一致性管理），甚至还要考虑到电芯的每个部位都不过热</b>。</p>\n<p data-pid=\"0KsSs441\">最丧心病狂的就是通用汽车给电芯做的「毛细血管」散热片。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-cab01c350e9b77f5741e28d2f7117bae_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1041\" data-rawheight=\"716\" data-watermark=\"original\" data-original-src=\"v2-cab01c350e9b77f5741e28d2f7117bae\" data-watermark-src=\"v2-5004cf4915b1166a27206fa028e7a236\" data-private-watermark-src=\"v2-8caf9453b903671f4c68ae7259def5cc\"></p>\n<p data-pid=\"euKGaUj1\">关于电池热管理，在此就不展开讲了，有兴趣可以看我的这篇文章：</p>\n<a href=\"https://www.zhihu.com/question/505242375/answer/2453317813\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-b6a2d45609f21d99aaa92deb40de9af8_qhd.jpg?source=b1748391\" data-image-width=\"1355\" data-image-height=\"770\" class=\"internal\">能不能通俗易懂地说说电池包热管理到底是什么，它的意义是什么？</a><h3> 2. 避免电诱因</h3>\n<p data-pid=\"Kxeyljbk\">你可能有点奇怪，电池包这么一个高压高能的东西，它不电到别人就不错了，还有人能用电来伤害它？</p>\n<p data-pid=\"YfFG6aDe\">事实上，在电动汽车发展早期，很大一部分惨烈的自燃事故都是过充引起的。例如著名的深圳4.26电动大巴起火事故，就是过充引起的。</p>\n<a href=\"https://zhuanlan.zhihu.com/p/96247109\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-bb19e12b54298e319148b13e66e43281_qhd.jpg?source=b1748391\" data-image-width=\"440\" data-image-height=\"293\" class=\"internal\">第一电动网：独家报道 | 深圳4.26电动大巴起火调查结果公布：过充引发火灾</a><p data-pid=\"qlv9cipl\">这个事故当时的社会影响非常恶劣，这是因为：<b>如果说热诱因的自燃是技术达到state of art水平也无法避免的小概率「天灾」，那充电自燃就完完全全属于「人祸」了！</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-011842ebf5d4b231bc94f5603d492f65_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"998\" data-rawheight=\"572\" data-watermark=\"original\" data-original-src=\"v2-011842ebf5d4b231bc94f5603d492f65\" data-watermark-src=\"v2-6679195439496dfd519f394e9630b122\" data-private-watermark-src=\"v2-655c34a46e5d5ec15b25f9b1a17ea167\"></p>\n<p data-pid=\"adv2DWbr\">首先车端BMS失效，充满了也不发信号；其次充电桩明知电压很高，却不主动断电。就这样，傻子碰到了疯子，酿成了一场事故！ </p>\n<p data-pid=\"tMInafVo\">说到底，还是程序逻辑写得太不仔细、太菜！这次不是电池工程师的问题，是程序员的问题。</p>\n<p data-pid=\"7FZHZ1YU\">后来国家颁布了标准&lt;GB/T 27930 -2015电动汽车非车载传导式充电机与BMS之间通信协议解析方法&gt;，详细规定了充电程序怎么写。这个国标相当贴心，基本上就是手把手教你编程了。</p>\n<p><img src=\"https://pica.zhimg.com/v2-ed34a8a3db6171954a1d102e826b5f36_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"855\" data-rawheight=\"902\" data-watermark=\"original\" data-original-src=\"v2-ed34a8a3db6171954a1d102e826b5f36\" data-watermark-src=\"v2-82ebfa000d01521a96d0112c3e7c3636\" data-private-watermark-src=\"v2-db48174f899bffae894a144fd8c8d343\"></p>\n<p data-pid=\"OqgaT-gW\"><b>即使你是一个刚成立的造车新势力，只要按着标准来写，就不会出问题</b>！反过来说，为什么现在很少看到过充导致的热失控了，正是因为各个车企和充电桩都按国标写充电逻辑了。</p>\n<h3>3. 避免机械诱因</h3>\n<p data-pid=\"uC4UsZuu\">避免机械诱因，其实就是电池包PACK保护电芯不受外界的物理干扰：包括挤压、针刺、振动等等。PACK层面的安全性，主要由国家/国际标准来保证。</p>\n<ul>\n<li data-pid=\"pKIPY9xx\">\n<b>国家标准</b>：如GB/T 31485-2015，GB/T 31467.3-2015，GB/T 31498-2015等。</li>\n<li data-pid=\"tecpOfCB\">\n<b>国际标准</b>：国外相关的标准包括ISO 12405-2014，IEC 62133-2015, UL 2580-2010，SAE J1929-2011，JIS-C 8715-2-2012等。</li>\n<li data-pid=\"xRLNANiI\">\n<b>核心</b>：以GB/T 31485-2015，IEC 62133，SAE J2464为核心。</li>\n</ul>\n<p data-pid=\"tRMUvmvA\">CNCAP的2021年新规增加了柱碰，这对电动汽车的考验非常大。</p>\n<p><img src=\"https://pica.zhimg.com/v2-22eaefd3f2d28b9f7f20c004b8e10254_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1292\" data-rawheight=\"557\" data-watermark=\"original\" data-original-src=\"v2-22eaefd3f2d28b9f7f20c004b8e10254\" data-watermark-src=\"v2-f4a761d3dd304e2c363976707cd18fb1\" data-private-watermark-src=\"v2-674c079a6eafd378278ddc56e39ab34c\"></p>\n<p data-pid=\"Uy4y3tqB\">那根刚性柱子长这个样子：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-9ff2cdab03546d2222dc874d0ff945cb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1261\" data-rawheight=\"629\" data-watermark=\"original\" data-original-src=\"v2-9ff2cdab03546d2222dc874d0ff945cb\" data-watermark-src=\"v2-689fe5b5e38fb9181ffaf4027315f6e8\" data-private-watermark-src=\"v2-df127380a0f4f5460b83c5d30b6b3961\"></p>\n<p data-pid=\"brUFZn0W\">碰撞现场是这样的：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-a507e7ef8cc7d51f2ad80007226aa7e3_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"480\" data-rawheight=\"270\" data-watermark=\"original\" data-original-src=\"v2-a507e7ef8cc7d51f2ad80007226aa7e3\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"ad7jbD_p\">抵抗这种撞击，思路也很简单：<b>一是加强电池包，二是加强车身侧面</b>。比如说，大众MEB平台的电池包铝合金框架有很多横向的肋面，这就可以抗侧面冲击。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-0a92e25edf51f2c96044af6aec596dbe_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"803\" data-watermark=\"original\" data-original-src=\"v2-0a92e25edf51f2c96044af6aec596dbe\" data-watermark-src=\"v2-827417586e33397624678a6695657d66\" data-private-watermark-src=\"v2-9bbf95349b729e8ebf4d73166e21bc20\"></p>\n<p data-pid=\"FDyRPJa1\">再如岚图FREE，侧面结构上也进行了特殊设计：B柱使用了1500MPa的超高强度钢，车门门槛使用了1500MPa的双层结构超高强度钢，而车门防撞梁更是使用了行业最高等级的2000MPa强度的热成型钢。可惜的是，岚图FREE在CNCAP测试还是用的老标准，没有进行柱碰，只有侧碰。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-5e72ca49e58149621acccab69eaf3985_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"480\" data-rawheight=\"267\" data-watermark=\"original\" data-original-src=\"v2-5e72ca49e58149621acccab69eaf3985\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"KHkrdUYs\">通用奥特能平台的电池包采用了焊接工艺：<b>为了实现超高强度，电池包采用了61%的高强度钢、37.5%的超高强度钢，总体占比约98.5%的高强度材料铸造不出来，只能焊接</b>。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-5ca30cf8e1705691c9ca67366f0590b8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"865\" data-rawheight=\"355\" data-watermark=\"original\" data-original-src=\"v2-5ca30cf8e1705691c9ca67366f0590b8\" data-watermark-src=\"v2-3a4d27edb88214cb00c0272500e00ac9\" data-private-watermark-src=\"v2-b637d7353df165adc8579977928753d0\"></p>\n<p data-pid=\"Ce-XzVjQ\"><b>这个电池包强的有点变态，从5米高自由落体到圆柱刚体上都没事</b>：</p>\n<p data-pid=\"xyZNy_e_\">更不用说除电池包外，车身本身也有加强：<b>凯迪拉克LYRIQ车身中段采用直通梁设计，并增加1.5号梁和3.5号梁。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-a543ccaac8f35026ef4a56a93740d798_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"865\" data-rawheight=\"464\" data-watermark=\"original\" data-original-src=\"v2-a543ccaac8f35026ef4a56a93740d798\" data-watermark-src=\"v2-5573bc2b5f31fb8273d1c0ba4f6a601c\" data-private-watermark-src=\"v2-3104805bca20df4238272ce3e182a254\"></p>\n<p data-pid=\"vdbQCVBt\">此外，门槛梁内也采用了挤压铝加强设计，以实现对电池包更好的保护：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-163ab4a00c1acfdbc148c31cdedc3f44_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"865\" data-rawheight=\"444\" data-watermark=\"original\" data-original-src=\"v2-163ab4a00c1acfdbc148c31cdedc3f44\" data-watermark-src=\"v2-faf2b28528af98badfc2a042203e9090\" data-private-watermark-src=\"v2-6863bde526ad54275c5424df36df6eed\"></p>\n<p data-pid=\"cTyPxYpo\"><b>这个电池包强的有点变态，从5米高自由落体到圆柱刚体上都没事</b>：</p>\n<p><img src=\"https://pica.zhimg.com/v2-f90c64d339668035dba54eb5aaab2973_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"913\" data-watermark=\"original\" data-original-src=\"v2-f90c64d339668035dba54eb5aaab2973\" data-watermark-src=\"v2-492285ae339110a7f67436698c45bcbf\" data-private-watermark-src=\"v2-f762847be85a7832d58841a7c58592b6\"></p>\n<h2>第二条路：局部热失控时，控制热蔓延</h2>\n<p data-pid=\"o6JU7ons\">岚图FREE有两个版本，一个是纯电版，一个是增程版。纯电版采用的是琥珀电池，电芯间填充了<b>有机硅聚合物+低密度隔热材料+阻燃剂的复合材料</b>，形成高效的隔热阻燃绝缘层，使得每个电芯单元像“琥珀”一样处于充分包裹中。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-836a597d5ff52e3c6d4c76ba53dfd382_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"511\" data-rawheight=\"270\" data-watermark=\"original\" data-original-src=\"v2-836a597d5ff52e3c6d4c76ba53dfd382\" data-watermark-src=\"v2-495606c3cb978c76f9902a42754fc631\" data-private-watermark-src=\"v2-de38f1bcadc59b332ee477c7857ed044\"></p>\n<p data-pid=\"BwJiLThr\">具体效果就是单个电芯热失控了、不小心“发烧”了，但在“就地隔离”的措施下，不会扩散到周围的电芯<sup data-text=\"\" data-url=\"https://zhuanlan.zhihu.com/p/357980051\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"2\">[2]</sup>。</p>\n<p><img src=\"https://pica.zhimg.com/v2-07c9cd6b68b7166a3cf0fd754cb09ffb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"462\" data-rawheight=\"256\" data-watermark=\"original\" data-original-src=\"v2-07c9cd6b68b7166a3cf0fd754cb09ffb\" data-watermark-src=\"v2-4940a25fb0ec630b5e3ace5b516fc2be\" data-private-watermark-src=\"v2-5b910f0647ad96ac95fea1be4b334d00\"></p>\n<p data-pid=\"BNsF1K8I\">岚图FREE版电池包中加入<b>层状Al-Si云母和气凝胶</b>，且电芯和云母、气凝胶会像云母石一样层叠堆积，因而命名为“云母电池”。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-23991a8be44acc5dccbb7ffca95108e7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"439\" data-rawheight=\"201\" data-watermark=\"original\" data-original-src=\"v2-23991a8be44acc5dccbb7ffca95108e7\" data-watermark-src=\"v2-5a738dccec426ed912a406a2b87986da\" data-private-watermark-src=\"v2-397be78ff1606dcf8b0b690803f834ee\"></p>\n<p data-pid=\"xYBMId2-\">云母的特点是耐高温，可以防止热失控的进一步蔓延，特别是防止明火对热扩散的加速效果。<b>特斯拉也采用了相似的方案，在<a href=\"https://www.zhihu.com/people/3159a84352b22dfa31d20a3c94c8dbb9\" class=\"internal\">@工科男老王</a>的拆车视频中有介绍</b><sup data-text=\"\" data-url=\"https://www.zhihu.com/question/442501004/answer/1794938676\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"3\">[3]</sup><b>：</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-a73eb1d6dfc915bdf4973ae643678a72_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"442\" data-rawheight=\"248\" data-watermark=\"original\" data-original-src=\"v2-a73eb1d6dfc915bdf4973ae643678a72\" data-watermark-src=\"v2-9a46a566148e58dc768b13eb14ec6a41\" data-private-watermark-src=\"v2-a7971164ec25233db592678a050a2140\"></p>\n<p data-pid=\"NtH8N1JK\">通用汽车作为汽车技术界的老法师，在通用奥特能平台上也采用了很多控制热蔓延的安全措施。例如：</p>\n<ul>\n<li data-pid=\"0hyD8cBo\">\n<b>电芯之间</b>：使用加厚设计的纳米级气凝胶，降低电芯之间的热传递。这样一来，在单体电芯发生失效时，可以有效抑制电芯之间的热扩散。</li>\n<li data-pid=\"EaYEJfZm\">\n<b>模组层面</b>：模组内设计了快速排气通道，在电芯单体热失控时，可以快速排出高温气体。</li>\n<li data-pid=\"QhBNUsug\">\n<b>电池系统</b>：整包也有快速排气通道，通过大面积防爆阀排出高温气体。</li>\n</ul>\n<p><img src=\"https://pic1.zhimg.com/v2-912523fa35567eeaac813007b1f9ad3f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"589\" data-watermark=\"original\" data-original-src=\"v2-912523fa35567eeaac813007b1f9ad3f\" data-watermark-src=\"v2-a6c5f0c0122866ca38b75d1c62ce6230\" data-private-watermark-src=\"v2-d44ad57c18ff57b35563abe555f6d16f\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"YcKtH-ee\">其它车企的电池包的基本思路也都是这样，只不过有的车企做的多一些，有的做得少一些，还有一些想多做但集成水平不行。</p>\n<h2>小结</h2>\n<p data-pid=\"36YNg2Rl\">最后做个小结：</p>\n<ul>\n<li data-pid=\"C5ynj-ZD\">由于热诱因、电诱因、机械诱因，再加上热蔓延，电池由「可控状态」渐渐变成了「失控状态」，核心的传导环节都是「热」，所以才被称为「热失控」。</li>\n<li data-pid=\"lrAdxXjQ\"><b>避免热失控第一条路就是让热诱因、电诱因、机械诱因别发生。</b></li>\n<ul>\n<li data-pid=\"Hf25yHD3\">\n<b>避免热诱因</b>：用更安全的电芯，做好热管理。</li>\n<li data-pid=\"3bHjUFll\">\n<b>避免电诱因</b>：按国标设计充电程序，防止过充。</li>\n<li data-pid=\"TFv9tdKK\">\n<b>避免机械诱因</b>：把车身与电池包设计得强一些，典型考核标准是CNCAP的柱碰。</li>\n</ul>\n<li data-pid=\"ZJjd1M5L\">\n<b>避免热失控的第二条路是控制热蔓延，</b>主要是做好电芯间、模组间的阻隔；再就是在电池包中给高温气体留出通道，让它顺利排出去，而不是加热那些正常电芯。</li>\n</ul>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhangkangkang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">张抗抗</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/529055903/answer/2470287834?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">10 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/526318008?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">各家新能源车企是如何避免出现锂电池热失控现象的？</a><br><a href=\"http://www.zhihu.com/question/505680618?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">新能源车企销量数据超预期提振，氢能重卡概念大涨的原因是什么？</a><br>\n","link":"http://www.zhihu.com/question/529055903/answer/2470287834?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"在两亿年前，昆虫就会“搞间谍”与“牵红线” | 中生代往事（下）","date":"2022-05-06 02:40:12","description":"\n<p data-pid=\"fX_U0R9L\">上一期我们讲完了<u><a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzI3MzE3OTI0Mw%3D%3D%26mid%3D2247539750%26idx%3D1%26sn%3D8679fe291f2dc459efa55e1471cb2d01%26chksm%3Deb252b22dc52a23433695aa9d2d86b0834c20faecfe7d517baf77e7f50e6a3639ae4b1dd78fd%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">昆虫帝国中生代四大军团的“军事改革”</a></u>。这让小个子的昆虫们拥有了巨大力量，也使它们的国家机器开始严丝合缝地运转起来。</p>\n<p data-pid=\"dq4EfR2w\">本期笔者将带来最后两个不为人知的“革命”内容，分别是代表“特务政治”的中生代中期拟寄生性昆虫“革命”和自我定位为植物月老的传粉昆虫的辐射和演替。</p>\n<h3><b>残酷的“特务机构”</b></h3>\n<p data-pid=\"CM8iu2Ys\">一个特务的最高境界，就是打入敌人内部，并用敌人自己的资源将敌人消灭。自然界中的这种行为就叫<b>拟寄生</b>。</p>\n<p data-pid=\"IzQCG25V\">与寄生不同，拟寄生<b>最终会杀死寄主</b>。比起直接的猎杀，这种方式更加残忍无情。寄主会成为拟寄生昆虫幼虫的食物，并给与其幼虫足够的保护，最终被破体而出走向死亡。甚至还有破体而出后不会立即死亡的类型，寄主要继续保护寄生昆虫化茧直至饿死。</p>\n<p data-pid=\"iftWu_0x\">就是因为过于残忍，大量的恐怖电影都模仿了这一繁殖方式，只是寄主成了人类。比如前文提到的异形，结合它的真社会性和外骨骼，这个异形完全就是照着昆虫的特征设计出来的。</p>\n<p data-pid=\"1hLZno7a\">拟寄生昆虫占到如今昆虫多样性的20%。七大家族（脉翅目、鞘翅目、捻翅目、双翅目、毛翅目、鳞翅目、膜翅目）都设立了此<b>特务机构</b>。这其中光膜翅目的机构就占全部拟寄生种类的75%，而双翅目又占了20%。这两个昆虫帝国中的“<b>锦衣卫</b>”和“<b>东厂</b>”对帝国中的其它家族展开了血腥的“特务统治”（很多寄主也是昆虫）。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-9879c8778ed815beaf8f8ef42726e6bf_b.jpg\" data-size=\"normal\" data-rawwidth=\"864\" data-rawheight=\"594\" class=\"origin_image zh-lightbox-thumb\" width=\"864\" data-original=\"https://pic4.zhimg.com/v2-9879c8778ed815beaf8f8ef42726e6bf_r.jpg\"><figcaption>一只寄生蜂正在往蚜虫体内产卵（图源：CSIRO）</figcaption></figure><p data-pid=\"8ptCvvvA\">在<b>早侏罗世</b>时，膜翅目就已经设立了“锦衣卫”，演化出了拟寄生行为。而根据幼虫形态证据，鞘翅目和捻翅目在<b>白垩纪</b>时也组建了自己的“特务机构”。</p>\n<p data-pid=\"Jtwd2yz1\">中生代中期的拟寄生性昆虫革命是<b>整个陆地生态网历史</b>中<b>最为重要</b>的一次演化事件。这种靠寄生打入内部的方式比起直接的捕食来的更有效率。虽然更加残忍，但是却极大地丰富了陆地生态系统的多样性，并且促进了整个生物圈的一次“<b>战备升级</b>”。</p>\n<p data-pid=\"hYlwT_Wk\">从此“间谍战”与“反间谍战”就成了生物圈中不可缺少的一环。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-58914f20400724d87c876dd07c51258c_b.jpg\" data-size=\"normal\" data-rawwidth=\"940\" data-rawheight=\"567\" class=\"origin_image zh-lightbox-thumb\" width=\"940\" data-original=\"https://pic1.zhimg.com/v2-58914f20400724d87c876dd07c51258c_r.jpg\"><figcaption>白垩纪缅甸琥珀中的拟寄生，图C为一只被拟寄生的蟑螂，身体里可能有个雌性的大花蚤，周围有三只雄性，图EF为雄性大花蚤（图源：Jan Batelka）</figcaption></figure><h3><b>狂热的植物月老</b></h3>\n<p data-pid=\"MpPUyXzJ\">讲完了恐怖的“特务机构”，我们来说点八卦。比起见到单身男女就能信手掏出厚厚一叠名单并配对的大爷大妈们，昆虫对于拉郎配更加的热情。只不过它们的对象并不是不堪其扰的“单身狗”，而是植物们。</p>\n<p data-pid=\"MYAW11gB\">作为如今地球上植物界毫无疑问的<b>扛把子</b>，被子植物拥有着植物界最高的多样性。从达尔文时代起，人们就认为多姿多彩的被子植物类群和昆虫的传粉密不可分。因为传粉可以增加相似物种的生殖隔离可能性，从而增加物种的形成率。同时传粉还能提高植物的授粉和种子生产效率，从而降低灭绝的可能。</p>\n<p data-pid=\"TqOHE1Uu\">以往人们认为，裸子植物比较“原始”的风媒传播是逐渐被被子植物复杂的动物交互传播所取代。然而化石证据却告诉我们整个中生代昆虫都在<b>孜孜不倦地为裸子植物传粉</b>，这种行为早在<b>二叠纪</b>时期就已经出现了。</p>\n<p data-pid=\"OCjVnd5W\">这些行为正是给在随后的白垩纪中期大发展的被子植物传粉做着热身准备。化石记录表明<b>至少在昆虫的六个家族</b>里都进化出了给裸子植物传粉的月老，分别是鞘翅目、双翅目、长翅目、脉翅目、缨翅目和奇翅科（一种已经灭绝的网翅总目类群）。</p>\n<p data-pid=\"lxuuP8Kz\">在中生代，<b>长口器类昆虫</b>（可以在传粉过程中起到虹吸管的作用）种类繁多，是给裸子植物拉郎配的主要月老团体。仅在克钦琥珀中就发现了五个拥有长口器的昆虫类群。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-d523cd7df37ef6d665a8001e6afad482_b.jpg\" data-size=\"normal\" data-rawwidth=\"473\" data-rawheight=\"334\" class=\"origin_image zh-lightbox-thumb\" width=\"473\" data-original=\"https://pic3.zhimg.com/v2-d523cd7df37ef6d665a8001e6afad482_r.jpg\"><figcaption>一种中生代长口器类昆虫化石，可以看到框出来的很长的口器，比例尺：5 mm（图源：Conrad C. Labandeira）</figcaption></figure><p data-pid=\"CEhSxtJr\">研究这些口器的长度就能够知道被传粉植物的花被管的长度。比较有趣的是，和喜欢盯着单一目标猛攻的大爷大妈们不同，克钦琥珀中的长口器昆虫的<b>口器长度大都不同</b>。这说明它们各有所好，并且具有不同的传粉生态位。</p>\n<p data-pid=\"-r68P3fy\">划分较为明确的传粉对应关系也减少了内卷，使传粉效率进一步上升，从而增加新人的配对成功率和月老的多样性。不过这种绑定关系非常紧密的一对一服务也在晚白垩世<b>裸子植物衰退</b>的大趋势下造成了此类昆虫的<b>大量灭绝</b>。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-2d336eb7b6a68d1af3dac6fefa8a73d7_b.jpg\" data-size=\"normal\" data-rawwidth=\"1039\" data-rawheight=\"1039\" class=\"origin_image zh-lightbox-thumb\" width=\"1039\" data-original=\"https://pic4.zhimg.com/v2-2d336eb7b6a68d1af3dac6fefa8a73d7_r.jpg\"><figcaption>长口器昆虫阿纽蝎蛉帮裸子植物传粉复原图（图源：杨定华）</figcaption></figure><p data-pid=\"D_RWysL9\">化石资料显示被子植物的繁盛和辐射是在白垩纪中期开始的，根据分子系统学和化石证据推论其起源应该在白垩纪早期。因为大部分现生的基干（这部分最接近原始被子植物）被子植物都是由昆虫传粉的，所以不难推断昆虫传粉推动了白垩纪早期被子植物的发展。</p>\n<p data-pid=\"sJpUCfYn\">化石还保留了昆虫携带被子植物花粉的一些证据。不过在白垩纪这样的化石较为罕见，只有在克钦琥珀中保留了一些较为明确的证据。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-0f6bf4a1410db78306a9b5b17ab8cc4b_b.jpg\" data-size=\"normal\" data-rawwidth=\"659\" data-rawheight=\"293\" class=\"origin_image zh-lightbox-thumb\" width=\"659\" data-original=\"https://pic4.zhimg.com/v2-0f6bf4a1410db78306a9b5b17ab8cc4b_r.jpg\"><figcaption>克钦琥珀中保存的昆虫给植物传粉证据，图A中是一只传粉甲虫（花蚤），红框处为被子植物花粉。图B为给裸子植物传粉的传粉丽蛉（图源：王博）</figcaption></figure><p data-pid=\"gsw6eJSQ\">时代在变化，手段也要跟着变才能顺应。随着白垩纪中期裸子植物和被子植物霸权的交接，这群在正主周围叽叽喳喳的昆虫月老们也开始了<b>自我变革</b>。</p>\n<p data-pid=\"nzc5Erge\">一些昆虫最直接，摇身一变，从给裸子植物传粉变成给被子植物传粉。还有死守底线只给裸子植物传粉的，于是多样性随着裸子植物一起大幅度下降，比如一些特殊的蓟马。而一些长口器昆虫不懂变通就只能灭绝。</p>\n<p data-pid=\"ubxPxhOL\">这一时期的最后胜利者是专门给新霸主被子植物服务的新型传粉昆虫，比如蜜蜂。当然一开始拉对象的昆虫还是有点手生的，不像今天这样主要由<b>蜜蜂、虻类、蝴蝶和飞蛾</b>等专业人才来匹配，而是一些小型的<b>甲虫类</b>。</p>\n<p data-pid=\"isTU132m\">随着被子植物群体渐渐壮大，这些新贵们终于在晚白垩世至新生代稳固了月老的定位。</p>\n<h3><b>结语</b></h3>\n<p data-pid=\"6o6qBUHT\">昆虫帝国在中生代的“二次革命”至此就全部讲完了。在这轰轰烈烈的五大“革命举措”的推动下，昆虫在恐龙横行的时代站稳了脚，并快速从纷繁复杂的新环境中脱颖而出。</p>\n<p data-pid=\"bd-6TcmB\">它们不仅摆脱了二叠纪末的帝国坟场带来的毁灭之痛，还在中生代书写了第一帝国没有的篇章。同时紧紧抱住新兴势力被子植物的大腿，取得了任何一个物种都难以望其项背的多样性优势。</p>\n<p data-pid=\"Hc1BJJbu\">然而人类的一举一动也在影响着这个盘踞地球多年的庞大帝国，昆虫的多样性正在人类的影响下快速下降。</p>\n<p data-pid=\"_a9kO2DN\">也许，作为“万物灵长”的我们也该俯下身好好观察这个不起眼却又无比重要的同行者。在化石里翻看它们的奋斗史，去更好地了解和保护脚下这个多彩而美丽的星球！</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"Hi6_u6zV\"><b><i>参考文献：</i></b></p>\n<p data-pid=\"U_jxGxZe\"><i>[1]  Wang Bo, Xu Chunpeng, Jarzembowski E.A. (2022) Ecological radiations of  insects in the Mesozoic. Trends in Ecology &amp; Evolution,   <a href=\"https://link.zhihu.com/?target=https%3A//doi.org/10.1016/j.tree.2022.02.007\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">doi.org/10.1016/j.tree.</span><span class=\"invisible\">2022.02.007</span><span class=\"ellipsis\"></span></a>. </i></p>\n<p data-pid=\"GNohMQbc\"><i>[2]  Luo Cihang, Beutel R.G., Engel M.S., Liang Kun, Li Liqin, Li Jiahao, Xu  Chunpeng, Vrsansky P., Jarzembowski E.A., Wang Bo, 2021. Life history  and evolution of the enigmatic Cretaceous–Eocene Alienopteridae: A  critical review. Earth-Science Reviews.   <a href=\"https://link.zhihu.com/?target=https%3A//doi.org/10.1016/j.earscirev.2021.103914\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">doi.org/10.1016/j.earsc</span><span class=\"invisible\">irev.2021.103914</span><span class=\"ellipsis\"></span></a>. </i></p>\n<p data-pid=\"2Y6nuUPc\"><i>[3]  Michener, C.D. and Grimaldi, D.A. (1988) The oldest fossil bee: apoid  history, evolutionary stasis, and antiquity of social behavior. Proc.  Natl. Acad. Sci. U. S. A. 85, 6424–6426</i></p>\n<p data-pid=\"G0v_ZNWL\"><i>[4]  Wenzel, J.W. (1990) A social wasp’s nest from the Cretaceous period,  Utah, USA, and its biographical significance. Psyche 97, 21–30</i></p>\n<p data-pid=\"_c3o6Q_L\"><i>[5] Batelka, J. et al. (2021) The complete life cycle of a Cretaceous beetle parasitoid. Curr. Biol. 31, R118–R119</i></p>\n<p data-pid=\"hlMhNOZt\"><i>[6]  Labandeira, C.C. (2010) The pollination of mid Mesozoic seed plants and  the early history of long-proboscid insects. Ann. Mo. Bot. Gard. 97,  469–513</i></p>\n<p data-pid=\"738kSgBw\"><i>[7] Peñalver, E. et al. (2012) Thrips pollination of Mesozoic gymno sperms. Proc. Natl. Acad. Sci. U. S. A. 109, 8623–8628</i></p>\n<p data-pid=\"i5ATiy-x\"><i>[8]  Xu, C., Wang, B., Fan, L., Jarzembowski, E.A., Fang, Y., Wang, H., Li,  T., Zhuo, D., Ding, M., Engel, M.S. (2021). Widespread mimicry and  camouflage among mid-Cretaceous insects. Gondwana Research.  <a href=\"https://link.zhihu.com/?target=https%3A//doi.org/10.1016/j.gr.2021.07.025\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">doi.org/10.1016/j.gr.20</span><span class=\"invisible\">21.07.025</span><span class=\"ellipsis\"></span></a>. </i></p>\n<p data-pid=\"1vdddG45\"><i>[9]  Fan, L., Xu, C., Jarzembowski, E. A., Cui, X. (2021). Quantifying plant  mimesis in fossil insects using deep learning. Historical Biology,  1-10. <a href=\"https://link.zhihu.com/?target=https%3A//doi.org/10.1080/08912963.2021.1952199\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">doi.org/10.1080/0891296</span><span class=\"invisible\">3.2021.1952199</span><span class=\"ellipsis\"></span></a>.</i></p>\n<p data-pid=\"14FKoqBv\"><i>[10]  Heads, S.W. (2008) The fifirst fossil Proscopiidae (Insecta,   Orthoptera, Eumastacoidea) with comments on the historical biogeography  and evolution of the family. Palaeontology 51, 499–507</i></p>\n<p data-pid=\"gKNHrFGX\"><i>[11]  Tapanila, L. and Roberts, E.M. (2012) The earliest evidence of  holometabolan insect pupation in conifer wood. PLoS One 7, e31668</i></p>\n<p data-pid=\"--g535ut\"><i>[12]  Li Ya, Li Yan-Da, Wang Yong-Dong*, Schneider Harald, Shi Gong-Le, 2022.  Re-appraisal of lacewing mimicry of liverworts from the mid-Cretaceous  Kachin amber, Myanmar with a description of Selaginella cretacea sp.  nov. (Selaginellales, Selaginellaceae). Cretaceous Research, 133:105143.  <a href=\"https://link.zhihu.com/?target=https%3A//doi.org/10.1016/j.cretres.2022.105143\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">doi.org/10.1016/j.cretr</span><span class=\"invisible\">es.2022.105143</span><span class=\"ellipsis\"></span></a>.</i></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"reSnTo-D\">作者：王冠群、王博、潘浩晨</p>\n<p data-pid=\"iVg0NvWV\">单位：中国科学院南京地质古生物研究所</p>\n<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s%3F__biz%3DMzI3MzE3OTI0Mw%3D%3D%26mid%3D2247539864%26idx%3D1%26sn%3D60ee199c66f08df4c440fc30c705425f%26chksm%3Deb252b9cdc52a28ae7ce993dc10d38084db1e4ba3b03392025c9489b9c5e97e3f327b10385e8%26mpshare%3D1%26scene%3D2%26srcid%3D0506VZPUoQIE3KU0SHgJB6cS%26sharer_sharetime%3D1651796744298%26sharer_shareid%3D3249b566c07a6aba8ff09dfb2621c64b%23rd\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-30d351d117e3d0fd5e14083670470a7e_qhd.jpg\" data-image-width=\"898\" data-image-height=\"383\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">在两亿年前，昆虫就会“搞间谍”与“牵红线” | 中生代往事（下）</a><p data-pid=\"G14TtoTm\"><a class=\"member_mention\" href=\"https://www.zhihu.com/people/da971e1f564d733611f6a9a51930c4aa\" data-hash=\"da971e1f564d733611f6a9a51930c4aa\" data-hovercard=\"p$b$da971e1f564d733611f6a9a51930c4aa\">@中国科普博览</a> <a class=\"member_mention\" href=\"https://www.zhihu.com/people/df247603a41cf58a466551f0ab09d525\" data-hash=\"df247603a41cf58a466551f0ab09d525\" data-hovercard=\"p$b$df247603a41cf58a466551f0ab09d525\">@科普中国</a> <a class=\"member_mention\" href=\"https://www.zhihu.com/people/0f2006385065c411ad6d08b4fc62b788\" data-hash=\"0f2006385065c411ad6d08b4fc62b788\" data-hovercard=\"p$b$0f2006385065c411ad6d08b4fc62b788\">@知乎科学</a> </p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhong-ke-yuan-nan-jing-gu-sheng-wu-suo?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">中科院南古所</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/509956618?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"汽车热管理系统目前有哪些技术难点呢？","date":"2022-05-06 02:14:59","description":"\n<p data-pid=\"wsgbSzVR\">热管理系统实际在动力电池的研发中，是有着专属设计“V”模型的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-df4642da689bdf11f8b16447b007eb59_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1146\" data-rawheight=\"840\" data-watermark=\"watermark\" data-original-src=\"v2-df4642da689bdf11f8b16447b007eb59\" data-watermark-src=\"v2-f29c42265c93c70cf10b19f44e01f9a5\" data-private-watermark-src=\"v2-2324b46f0090e559fe70b2c6a80d22a5\"></p>\n<p data-pid=\"Ir59Ltus\">这个“V”模型有五条主线，三个层级。（就不详解了，这个图讲解得很清晰了。）</p>\n<p data-pid=\"xJcTr7Pv\">如果要说难点，系统设计的四个模块，<b>冷却、加热、保温、热失控阻隔（TRO）</b>系统，不仅个个都有技术难点，而且综合起来，技术难点更多。</p>\n<p data-pid=\"PVvcgRGs\">举<b>两个简单的例子</b>，比如动力电池在充放电的时候会放热，那到底是<b>要保温还是要散热优先</b>？</p>\n<p data-pid=\"-UE8xpzR\">如果所处的环境是北方的寒冷冬天，不做保温措施，任凭这个动力电池的余热散去，不用几个小时，温度降到和外界温度一样，零下二三十摄氏度，那么按照锂电池的特性，三元锂电池大概还能有部分电量，磷酸铁锂电池抗寒能力差，温度低到零下三十摄氏度，说不定就给你直接罢工了。所以，按照现在的情况，北方冬季出去浪了一天，把车停在冰天雪地里，第二天还想开，就得等电池升温，才能开始工作。否则低温强行用电，可是会损坏电芯的。</p>\n<p data-pid=\"sw9lU6CB\">下图是某厂家的三元锂电池和磷酸铁锂电池实验数据的一个对比，可以做个参考。</p>\n<p><img src=\"https://pica.zhimg.com/v2-984879e4c243bbd12e1244c15fb90629_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"635\" data-rawheight=\"340\" data-watermark=\"watermark\" data-original-src=\"v2-984879e4c243bbd12e1244c15fb90629\" data-watermark-src=\"v2-fbfa30aba3e4882004cac91e1b951223\" data-private-watermark-src=\"v2-eb49add0381345104761787a1a82ac57\"></p>\n<p data-pid=\"8VvZcEnP\">所以为了避免这种情况出现，就要让电池余热不散。余热如果不散去，那么就不用耗能把动力电池温度升到合适的工作温度了。其中最简单，成本最低的解决方案就是加强保温。</p>\n<p data-pid=\"i1AKVTWl\">如我之前回答所写的，电芯组成的<b>模组加保温层，把可能的散热渠道都用保温层给你挡住。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-a83be57f5c379cc87e737a802ae8c256_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"271\" data-watermark=\"watermark\" data-original-src=\"v2-a83be57f5c379cc87e737a802ae8c256\" data-watermark-src=\"v2-1ca9d96a6f2ec1ab18795dc079aaaebc\" data-private-watermark-src=\"v2-b1d19d6ce2cdc870ca963998dfb34450\"></p>\n<p data-pid=\"qu0cJOlF\">模组组成的<b>箱体加保温层，给箱体加个和外界热交换趋向零的外套。</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-3b46942175aeabdde7bfbf31fe3f8ff5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"615\" data-rawheight=\"402\" data-watermark=\"watermark\" data-original-src=\"v2-3b46942175aeabdde7bfbf31fe3f8ff5\" data-watermark-src=\"v2-a0a8f5a225aa5fd5e81f89f4b3a05a40\" data-private-watermark-src=\"v2-c5b1f8eef719e8cd4e1c97e3d415c990\"></p>\n<p data-pid=\"QgN6CkXp\">这种加保温层的方法简单粗暴，但成本低，见效快，工艺简单，只要保温层弄得好，不仅静置很久也不用额外耗能加热电池，而且平时的冬季续航（温度低了不用加热电池，捂着就能自己慢慢暖和）绝对上提一大截，而且也不会太冷充不进电，为什么厂家不弄？</p>\n<p data-pid=\"FL8YN2w-\">因为区域气温不会一直变化，即便是寒冷的北方，比如哈尔滨冬天最低历史气温达到过-52.3℃，平时冬季零下二三十度也是常态，给动力电池保温层弄得厚厚的，如果穿上了几层厚棉袄，让热量不和外界零下几十度的空气交换，保障动力电池在合适工作温度区间，或者停留在室外也不至于十来个小时就降到和外界气温一致，这办法在冬天绝对可行，能有效提高续航，降低能耗，即便停了一晚上，第二天照样充放电正常，容量不会狂降。</p>\n<p data-pid=\"qkeVQy44\">但哈尔滨也不只是冬天，夏天最高历史温度是39℃，平时夏天的温度也超过了三十摄氏度。本来外界温度高，电池温度本身也高，原本导热材料贴在模组上来个自然冷却就行，或者加一个简单低成本的风冷设计就可以解决动力电池的散热问题，不让动力电池的电芯热量积累到一定程度。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-3fa65aba0bf053de3880e66fcf3f782b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"317\" data-watermark=\"watermark\" data-original-src=\"v2-3fa65aba0bf053de3880e66fcf3f782b\" data-watermark-src=\"v2-3f83917ea518974c7a3729081e7a0575\" data-private-watermark-src=\"v2-9011fd972fa40100e77e1bc36a6304f9\"></p>\n<p data-pid=\"uhjksJaQ\">但是如果动力电池模组已经加了保温层，箱体加了保温层，而且这都是在电池包内部弄的，就是为了让电芯的热散不出去。这样的电池包的散热性怎么办？关键电池包也装载在车里，换季就把动力电池返厂，把电池包拆成一个个模组，再拆模组保温层？拆了保温层，还得设计风冷/液冷风路，添加上去？这样豆腐盘成了海鲜价格。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-d58285478765eb4c8c30e2035ef7ecb0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"354\" data-watermark=\"watermark\" data-original-src=\"v2-d58285478765eb4c8c30e2035ef7ecb0\" data-watermark-src=\"v2-2561809ccbed62f5acc87e89ffbf58a9\" data-private-watermark-src=\"v2-514fc3565c6d7dd33ca5c39111a17162\"></p>\n<p data-pid=\"xoBvjCJY\">所以，怎么能在<b>低成本的前提下</b>，让动力电池又能快速散热又能尽量保温？这在技术上本身就是两难。</p>\n<p data-pid=\"fQ9fvJid\">目前来看，车企还是<b>优先动力电池散热</b>，毕竟南方市场的电动车销售还远远没有饱和，另外不散热的话，电池热量积累到一定程度，热失控的风险也很大，一旦自燃多了，品牌就玩完了。</p>\n<p data-pid=\"xcIeJtUA\"><b>所以现在新能源车企是安全第一，续航第二</b>，如果可以的话，再加个南方市场第一，太热太冷的地区，不好意思，你们先站旁边。</p>\n<p data-pid=\"0R4LTBd8\">另一个例子，就是<b>热管理要保障不同电芯的温度均衡性</b>。现在的动力电池动辄一两百颗电芯（特斯拉电池包含几千颗小电芯），用简单的话说，就是要让电池包所有的电芯温度尽量保持一致，如果不能完全均衡，那么也至少控制在5-8℃内的温差，这样在电池包的性能、寿命和成本上面达到一个较好的平衡。</p>\n<p data-pid=\"E9VLx7j9\">而单体电芯的工作状态本身也有不同，比如总有先放完电的、别的电压还很高，或者先充完电的、别的才开始充。电芯本身的工作温度就是有高有底。</p>\n<p data-pid=\"Wl6VXusl\">有的75KWH电池，里面有104颗磷酸铁锂电芯，14颗三元锂电芯，热管理的管控就更复杂了。</p>\n<p><img src=\"https://pica.zhimg.com/v2-298874c312488533945a8e92e698002f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"360\" data-watermark=\"watermark\" data-original-src=\"v2-298874c312488533945a8e92e698002f\" data-watermark-src=\"v2-0078244aa93fd3c70492807ea51f6f90\" data-private-watermark-src=\"v2-616fd8c759ef53fc9729ab28d884f19a\"></p>\n<p data-pid=\"mijAIJur\">不同电芯温度差过大，这一两百颗电芯长期在不同温度区间充放电，时间久了，电池的一致性就会变差，不同电芯的容量、内阻、寿命、倍率都会出现差别。而根据木桶效应，电池包的各项参数是往那根最短的木板（电芯）上面靠的。</p>\n<p data-pid=\"jtY2ed8L\">所以保障不同电芯的工作时的温差不大，那就是保障动力电池的<b>容量、安全、寿命、性能</b>。</p>\n<p data-pid=\"owyLNQlw\">但是难点又出来了，这么多电芯，我怎么分布温度采集点，如果要真正的精准采集，那不是每根电芯都布采集点了，因为单体电芯的不同部位的温度还不同，极耳温度不代表电芯最高温度，叠片工艺的不同导致传热的部位不同。那么为了保障电芯的安全，是否要每个电芯安多个采集点？但是如此多的温度采集点，意味着空间和能耗，意味着成本，意味着BMS的负荷和算法复杂程度。</p>\n<p data-pid=\"gK-cbdmD\">所以，基于种种考量，现在很多装载在量产车上的动力电池就只设置了模组的温度传感器（每个模组两个到四个），更别说上面的精确到电芯不同点的温度采集了。至于模组里面不同的电芯温度咋样，那就是靠估（仿真分析）。</p>\n<p data-pid=\"NBtWaG2G\">哪怕是解决了温度采集的问题，又来到了下一个难题。</p>\n<p data-pid=\"gwMTgC36\">如果有的电芯工作温度超过了45℃（合理温度区间的上限），而其他有的电芯的温度是30℃，有的电芯是35℃，那怎么管控温度平衡？按精准管控，是需要把这个高温电芯积攒的热量散到外界不影响到其他电芯。或者废热利用这热量，导到其他温度低的电芯（提前评估不会温度超限）。</p>\n<p data-pid=\"_dR6SV5T\">但现在大多数的做法是如果电池包里面的某电芯温度超标，那么无论是风冷还是液冷，都是奔着全部电芯（模组范围或箱体范围）来的，就是一个冒头，全部均衡降温。至于有的电芯是35℃，有的电芯是45℃，但管不了，都统统给我降温。这样能耗浪费是肯定的，且有的电芯不需要降温的也降温了，这种策略长期执行下去，实际也牺牲了真正的电池温度均衡。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-f924a6a341bbdaca0355d892340c34b8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"180\" data-watermark=\"watermark\" data-original-src=\"v2-f924a6a341bbdaca0355d892340c34b8\" data-watermark-src=\"v2-54a552c7b77a1e29af2450e08e008ae7\" data-private-watermark-src=\"v2-1bb20b1e01fa9af6696389e3bbded896\"></p>\n<p data-pid=\"O-bsPhkq\">而就这样的全面均衡降温/升温设计，实际都已经花费了老大的功夫才能设计出来这回路。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-8891cac3e70290c8202c919df87b3782_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"299\" data-rawheight=\"179\" data-watermark=\"watermark\" data-original-src=\"v2-8891cac3e70290c8202c919df87b3782\" data-watermark-src=\"v2-9693313f402e14c24d21eed63fac29c8\" data-private-watermark-src=\"v2-f5d577335b2a478aa8d33df24468bb3d\"></p>\n<p data-pid=\"n9PVEKwB\">就比如风冷，冷风从风道进口进入，从出口出去。如果用最简单的模型，如下图一样，最开始的冷风肯定是温度最低的，经过一排发热电芯后，越到出口，风的温度越来越高，对电芯的降温效果越来越差，所谓的均衡降温都达不到。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-eba029ee62d7b7613c5d9e37c8df3b5c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"467\" data-rawheight=\"174\" data-watermark=\"watermark\" data-original-src=\"v2-eba029ee62d7b7613c5d9e37c8df3b5c\" data-watermark-src=\"v2-8be697ffb0584eff633a8c88c4a75060\" data-private-watermark-src=\"v2-033daf67bc8c8cb8d0c97febf1f27b91\"></p>\n<p data-pid=\"JZSdOdX_\">所以，为了均衡降温、升温，在狭窄的空间里能够让每个电芯的热交换能被路过的冷风或者冷液雨露均沾，解决这种单通道热交换的弊病，就已经是需要设计到绞尽脑汁了。</p>\n<p data-pid=\"7unY4-Dp\">如果要做到更进一步的精准管控，能够达到不同电芯之间需要热量交换的时候，余热利用到能够交换降低能耗。而有时候电芯之间却要热量隔绝，免得低温电芯受到热失控电芯的牵连。这个成本和设计的复杂程度，我估计真的很难短时间内实现量产。</p>\n<p><br></p>\n<p data-pid=\"eayojzEP\">其他关于动力电池热管理的回答：</p>\n<a href=\"https://www.zhihu.com/question/519275656/answer/2467593675\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-f25248ee21aa111a0e76b4a28299b85f_qhd.jpg?source=b1748391\" data-image-width=\"1100\" data-image-height=\"715\" class=\"internal\">如何理解储能热管理，它和电车的电池包热管理有联系吗？</a><a href=\"https://www.zhihu.com/question/52539241/answer/2463030657\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-850cf033f8919f3ca4515afe1bfc3c79_qhd.jpg?source=b1748391\" data-image-width=\"1486\" data-image-height=\"798\" class=\"internal\">怎么实现电池包的精确管理，最大限度有效的应用？</a><a href=\"https://www.zhihu.com/question/529055637/answer/2461285456\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-b5ec959709df3a84f2666928cbf2f091_qhd.jpg?source=b1748391\" data-image-width=\"1269\" data-image-height=\"746\" class=\"internal\">电动车热管理系统中特斯拉的做法真的是天花板吗？还有哪些更好的形式，以及他们之间的异同和优劣在哪？</a><a href=\"https://www.zhihu.com/question/524847768/answer/2459813744\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">电池包热管理如今的处理方式是否已经达到理想水平？</a><a href=\"https://www.zhihu.com/question/505242375/answer/2454625334\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-f3006036429a278d846b6feb96f4c95a_qhd.jpg?source=b1748391\" data-image-width=\"1024\" data-image-height=\"768\" class=\"internal\">能不能通俗易懂地说说电池包热管理到底是什么，它的意义是什么？</a><a href=\"https://www.zhihu.com/question/529055903/answer/2451663154\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-21620233e32d026d76c515f4105be94b_qhd.jpg?source=b1748391\" data-image-width=\"1080\" data-image-height=\"879\" class=\"internal\">各家新能源车企是如何避免出现锂电池热失控现象的？</a><p data-pid=\"uuwvynWx\">（图片来源网络，侵删！）</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/27453167/answer/2468910625?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">27 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/512876625?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">暖气炉回水管热是怎么回事?</a><br><a href=\"http://www.zhihu.com/question/525057422?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">商用车热管理工程师可以跳槽乘用车热管理工程师吗？</a><br>\n","link":"http://www.zhihu.com/question/27453167/answer/2468910625?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：Marshall 发布 Emberton II 蓝牙音箱、北京发布一系列快递包装绿色化新规","date":"2022-05-06 01:03:11","description":"Google 智能助理正式推出自动密码更新功能，新华三发布万兆路由器 Magic NX15000 等<a href=\"https://sspai.com/post/73046\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73046"},{"title":"新玩意 104｜少数派的作者们最近买了啥？","date":"2022-05-05 09:27:12","description":"开幕狗粮预警。<a href=\"https://sspai.com/post/73036\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73036"},{"title":"为什么炸食物要炸两遍？真的会使外表更脆吗？详细原理是什么？","date":"2022-05-05 08:29:01","description":"\n<h2>食物要炸两次，因为两次的作用是不同的。</h2>\n<p data-pid=\"jmMNnGBp\">第一次的目的是把食物「煮熟」，第二次是赋予食物金黄、酥脆的外表。</p>\n<p data-pid=\"fT29k-wj\">下面我们来具体说一下。</p>\n<h2>一、油炸温度的影响</h2>\n<p data-pid=\"cW9ZpHOp\">油炸是一种常见的烹饪方法，它和煎、炒等其他烹饪方法一样，可以：</p>\n<ol><li data-pid=\"OgYPBmYp\">把食物煮熟；2. 赋予食物色、香、味，和特殊的口感。</li></ol>\n<p data-pid=\"o7wWvLz6\">但为了达到这些目标，<b>油炸也要控制「火候」，不然就容易翻车。</b></p>\n<blockquote data-pid=\"_y_vWvFY\">像我第一次炸牛排的时候，看到外层已经变金黄了，结果夹出来、切开一看：<br>好家伙，里面还是生的，就像下图左边那块牛排一样。</blockquote>\n<p><img src=\"https://pic2.zhimg.com/v2-7a4822284df7880cf1a719c613f5ca38_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2320\" data-rawheight=\"1184\" data-watermark=\"watermark\" data-original-src=\"v2-7a4822284df7880cf1a719c613f5ca38\" data-watermark-src=\"v2-6c2aa2acd27c5e9f1500389203aaada5\" data-private-watermark-src=\"v2-e25db92bb0e6d14ce6202bce731adef6\"></p>\n<p data-pid=\"rjxjO5W4\"><b>食物外表的色、香、味到位了，但里面没熟</b>。</p>\n<p data-pid=\"1LJE5Npv\">这是因为油炸时候「火候」太猛，<b>「食物表面的温度」</b>远高于<b>「食物内部的温度」</b>造成的。</p>\n<blockquote data-pid=\"NDrbVAC8\">食物表面温度已经150-200℃，再炸就要焦了，但食物中心可能只有30-40℃，还是半生的。<br>就像下图的「高温加热」一样。</blockquote>\n<p><img src=\"https://pic2.zhimg.com/v2-36d458571fc092f71665bbe9026ac714_720w.jpg?source=b1748391?rss\" data-caption=\"高温加热与低温加热的区别\" data-size=\"normal\" data-rawwidth=\"1940\" data-rawheight=\"1204\" data-watermark=\"watermark\" data-original-src=\"v2-36d458571fc092f71665bbe9026ac714\" data-watermark-src=\"v2-d6863b114ebac46e45584dd714fb3cd4\" data-private-watermark-src=\"v2-2b27772fe66024c265ff9d1efe9dad55\"></p>\n<p data-pid=\"Wg2qhTgX\">反之，如果加热温度相对低，虽然花的时间长，但食物内、外部的受热会均匀很多。</p>\n<p data-pid=\"s_tBd2a-\"><b>这就是我们用不同温度来油炸的原因</b>。</p>\n<h2>二、低温油炸vs高温油炸</h2>\n<p data-pid=\"YKu9Ctde\"><b>「低温油炸」的目的是煮熟食物</b>，把食物的中心温度升高到65-75℃。</p>\n<blockquote data-pid=\"IMgHGFoi\"> (上面图示低温加热的温度只是举例)。</blockquote>\n<p data-pid=\"8O_oGGIi\">它主要用于处理<b>比较厚实、传热比较慢</b>的食材 (比如厚牛排、大鸡腿)，</p>\n<p data-pid=\"djuimJo1\">以及<b>淀粉比较多、需要长时间加热糊化</b>的食材 (比如土豆类)。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-b9473c3862b44d21daebd456c655f5d9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"980\" data-rawheight=\"491\" data-watermark=\"watermark\" data-original-src=\"v2-b9473c3862b44d21daebd456c655f5d9\" data-watermark-src=\"v2-43aa7cad38d7c7acc11d9a6534212e4b\" data-private-watermark-src=\"v2-9baac4b2ed5e71768ed1d4980a44011a\"></p>\n<p data-pid=\"gKJMRE-c\">这是我们说的第一遍油炸，把食物煮熟。</p>\n<p data-pid=\"N9OWFDPY\">第二遍就是「高温油炸」了，温度接近油的烟点，在180-200℃左右。</p>\n<p data-pid=\"A62CWJRy\"><b>它的主要作用是给食物酥脆的口感。</b></p>\n<blockquote data-pid=\"smW434ud\">油炸时，食物表面会形成蓬松的多孔结构(如下图)，水滴是支撑这个结构的填充物。<br>油炸过程中水分会慢慢蒸发，油滴会部分取代原来的水滴，起到支撑的作用。</blockquote>\n<p><img src=\"https://pic3.zhimg.com/v2-856a913ed963a63ad6817dacb5d7b137_720w.jpg?source=b1748391?rss\" data-caption=\"高温油炸让食物更脆的原理\" data-size=\"normal\" data-rawwidth=\"1788\" data-rawheight=\"1387\" data-watermark=\"watermark\" data-original-src=\"v2-856a913ed963a63ad6817dacb5d7b137\" data-watermark-src=\"v2-2311eb0c0c6f624a7fce0953e6d5d642\" data-private-watermark-src=\"v2-a1d2ac805b90b3162281578a34501243\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"c6QYwKTY\">就像我们吃的薯片，表面都是密密麻麻的小孔，<b>一口咬下去，这些多孔结构被压塌了</b>，发出咔咔咔咔的声音。</p>\n<p data-pid=\"vOGG8d-Q\">这就是油炸食物变脆的原因。</p>\n<h2>三、食物要炸两遍吗？</h2>\n<p data-pid=\"NzvFq0nZ\"><b>对于中心不需要煮熟(例如火腿肠)、或者比较薄的食材(例如薯片、虾片)，我们可以直接上高温油炸。</b></p>\n<p data-pid=\"mjwPa9nc\">在把食物煮熟的同时，也一步到位地给食物上炸色、变酥脆了。</p>\n<p data-pid=\"7Y6nVi96\">而在处理比较厚实、或带有淀粉质的食材时，我们需要用「低温油炸」先把食物煮熟。</p>\n<p data-pid=\"NRnqw0Oa\">因为油温相对低，<b>此时食物表面的水分只蒸发了一部分，还没有变得完全酥脆</b>。</p>\n<p data-pid=\"wgMCIafb\">我们可以先把食物捞出来，等油温升高后，再把食物放进去炸。</p>\n<p data-pid=\"HxYk4mmG\"><b>这时的「高温油炸」会进一步地把水分逼出来；同时，高油炸温度可以让面衣吸油更少，</b>让食物变得酥脆。</p>\n<p data-pid=\"SIhZFc92\">这是二次油炸让食物变脆的原因。</p>\n<p data-pid=\"OU69lqEE\">如果二次油炸还不满意，或者食物放久吸潮了，可以再重复「高温油炸」这个操作。</p>\n<p data-pid=\"wTCL-lJZ\">前提是不要炸焦了。</p>\n<h2>总结：</h2>\n<ul>\n<li data-pid=\"p-pRkCLs\">食物要炸两遍，因为两遍的作用不同。</li>\n<li data-pid=\"YEkVUaxj\">低温油炸变熟，高温油炸变脆。</li>\n</ul>\n<p data-pid=\"tIQ6g6gv\">——谢谢阅读。</p>\n<p><br></p>\n<p data-pid=\"UHOlP2Rs\"><b>资料：</b></p>\n<ol>\n<li data-pid=\"nqIJBnqJ\"><a href=\"http://link.zhihu.com/?target=https%3A//www.derrickriches.com/steak-temperature-guide/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">derrickriches.com/steak</span><span class=\"invisible\">-temperature-guide/</span><span class=\"ellipsis\"></span></a></li>\n<li data-pid=\"pL9wFWSh\"><a href=\"http://link.zhihu.com/?target=https%3A//noaddedcolors.wordpress.com/2010/01/10/sous-vide/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">noaddedcolors.wordpress.com</span><span class=\"invisible\">/2010/01/10/sous-vide/</span><span class=\"ellipsis\"></span></a></li>\n<li data-pid=\"zfzEbUrq\">M. Mellema. Mechanism and reduction of fat uptake in deep-fat fried foods.<i> Trends in Food Science &amp; Technology</i>. 14 (2003) 364–373</li>\n</ol>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/question/323027010/answer/2466270062?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\">知乎用户（登录查看详情）</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/323027010/answer/2466270062?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">59 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/520108746?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">裹干粉炸的食物味道如何？</a><br><a href=\"http://www.zhihu.com/question/522456756?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">之前炸食物的油，放了3个月，今天又用它炸了东西吃？</a><br>\n","link":"http://www.zhihu.com/question/323027010/answer/2466270062?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"体检报告出现高尿酸，你该如何在饮食方面控制风险？","date":"2022-05-05 08:00:00","description":"从最容易控制的饮食入手，可以大大减少病变风险和痛苦。<a href=\"https://sspai.com/post/73031\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73031"},{"title":"Matrix Talk丨你的专业究竟是做什么的？","date":"2022-05-05 06:33:53","description":"关于MatrixTalk在少数派Matrix社区聚集着一批分享者，你可能经常看他们分享数字生活的心得体验，但你大概还不熟悉他们。为了拉近大家的距离，我们策划了MatrixTalk栏目，将不定期邀请Ma ...<a href=\"https://sspai.com/post/72892\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72892"},{"title":"颜值与性能兼得，开箱即用、易于同步的终端美化方案：Starship","date":"2022-05-05 03:32:40","description":"安装完 Starship 后，无需进行任何具体自定义的配置，默认就已经提供了非常完整和舒适的终端效果，因此我甚至不需要做什么调整，就可以拿来直接开始用。它非常易于同步。各自安装之后，同一份配置文件可以在不同的操作系统（Windows、Linux、macOS、Android 等）、不同的 Shell（Bash、Zsh、Fish、Powershell 等）中使用，而且展示效果完全一致。非常适合同时使用多个环境、又期望在不同环境中拥有相似体验的人们。<a href=\"https://sspai.com/post/72888\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72888"},{"title":"派早报：三星发布 UFS 4.0、AMD 公布锐龙 7000 系列产品路线图等","date":"2022-05-05 00:25:09","description":"雷蛇推出新款 Razer Blade 15 游戏本、Kindle 将支持 EPUB 电子书格式等。<a href=\"https://sspai.com/post/73029\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73029"},{"title":"你是如何被护肤成分「维生素 C」圈粉的？","date":"2022-05-04 06:54:43","description":"\n<p data-pid=\"gq7bcypA\"><b>成分党老司机告诉你怎么被圈粉的！！！！！！！！</b></p>\n<p data-pid=\"e_4_DABz\">VC（<i>维生素C</i>），作为护肤界另一个可以和A醇齐名，并称为“王炸”的成分，这两年在功效护肤大流行的趋势下，可谓是挣足了眼球。</p>\n<p data-pid=\"VR_wYEXZ\"><b>VC和A醇作为两个最经典的从医学上转化来的护肤成分</b>，<b>他们的功效数据得到了很多临床数据的验证，效果有保证</b>。加上这两年护肤圈突然兴起的一股“早C晚A”的风潮也彻底点燃了VC和A醇。</p>\n<p data-pid=\"AaGUavYT\"> A醇，之前我已经给大家介绍过了，今天我们就主要来聊聊VC。</p>\n<a href=\"https://www.zhihu.com/question/345095868/answer/2003460667\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-4ceea78e635561e304666f55dbab0c86_l.jpg?source=b1748391\" data-image-width=\"997\" data-image-height=\"1200\" class=\"internal\">A醇有哪些推荐？</a><h2><b>VC是如何被发现的？</b></h2>\n<p data-pid=\"epCM4z-X\"> 在15世纪到18世纪，一些远洋航行的水手们由于经常长时间得不到新鲜蔬菜、水果的补给，往往会出现牙齿松动、牙龈出血、肌肉酸痛无力甚至皮下出血的症状，有时候严重的话还会导致死亡，这种病症大家称之为：<b>“坏血症“</b>（<i>也称“败血症”</i>）。</p>\n<p data-pid=\"ZNXaPTFc\"> 坏血症在以前被成为“不治之症”，死亡率很高。所以几百年来，科学家们在和坏血症的不断对抗中，发现了VC（<i>因为蔬菜、水果里含有丰富的VC，因此可以预防并治疗败血症</i>）。VC的存在虽然早已被证明，但直到1928年，生化学家Albert Szent-Gyorgyi首次成功分离出VC【1】，并通过化学解析的方式证明了VC的结构和分子式【2】， 才正式揭开了VC之谜。</p>\n<p data-pid=\"NVzvuxVg\"> 因为VC是一种弱酸，而最初发现的意图是对抗“坏血病”，所以后来医学界重新命名维生素C为抗坏血酸。抗坏血酸天然有手性之分，主要是L-和D-型，也就是大家熟知的左旋VC（<i>L-型</i>）和右旋（<i>D-型</i>）VC，<b>左旋VC才有生物活性，右旋VC没有生物活性</b>。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-e87d05cd22d491e5b7a96789f69afdd8_720w.jpg?source=b1748391?rss\" data-caption=\"左旋VC（L）和右旋VC（D）的结构式\" data-size=\"normal\" data-rawwidth=\"608\" data-rawheight=\"234\" data-watermark=\"watermark\" data-original-src=\"v2-e87d05cd22d491e5b7a96789f69afdd8\" data-watermark-src=\"v2-c27a92b9289108a42877c72ad471c7c6\" data-private-watermark-src=\"v2-062dded03586f95d0bcc090f157bb3c4\"></p>\n<p data-pid=\"DHoZdDyY\"><b>虽然VC是人体必须的重要维生素之一，但很可惜，我们人类自身无法合成VC</b>。究其原因主要是因为我们人体合成VC的最后一步关键的酶—<b>古洛糖酸内酯氧化酶</b>缺失【3】。虽然我们人体不能合成VC，但幸运的是植物体内存在大量的天然维生素C，我们可以通过饮食的方式来弥补体内缺乏的VC（<i>所以一定要多吃蔬菜和水果，是有科学道理的</i>）。</p>\n<h2><b>VC是什么？</b></h2>\n<p data-pid=\"OQBr9Inm\"> VC的分子结构如下图所示，它是一个分子量只有176的一元弱酸。<b>VC非常不稳定，很容易被氧化失活，这也是很多VC类产品变黄变色的根本原因</b>。VC不稳定，是因为它的分子结构中存在烯二醇基，这个烯二醇基很活泼，很容易丢失电子甚至开环形成不同的VC还原产物。但也正是因为这个基团的存在，使得VC具有非常好的抗氧化能力。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-403033c6e5f75efabd965110347db87a_720w.jpg?source=b1748391?rss\" data-caption=\"维生素C的结构式\" data-size=\"normal\" data-rawwidth=\"518\" data-rawheight=\"391\" data-watermark=\"watermark\" data-original-src=\"v2-403033c6e5f75efabd965110347db87a\" data-watermark-src=\"v2-4c082fe14780ee5529423818d51e4543\" data-private-watermark-src=\"v2-4524f81caa1404c5b22b279585f55e14\"></p>\n<p data-pid=\"KIs0Ghk9\"> VC在人体的皮肤和组织里都大量存在，<b>除了肾上腺和脑垂体，皮肤的VC含量是最高的</b>，而在皮肤中，<b>角质层中VC的含量又比真皮层的含量更高</b>【4】。而过量的紫外线照射会导致老化皮肤中的VC含量急剧减少（<i>由于VC要中和紫外线引起的自由基消耗</i>），从而导致皮肤的生理功能受到影响。所以白天给皮肤补充VC对抗UV光损伤是非常科学的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-92ed4b924328fae94e03f50d6c32fec7_720w.jpg?source=b1748391?rss\" data-caption=\"VC在人体不同组织上的含量分布情况\" data-size=\"normal\" data-rawwidth=\"811\" data-rawheight=\"385\" data-watermark=\"watermark\" data-original-src=\"v2-92ed4b924328fae94e03f50d6c32fec7\" data-watermark-src=\"v2-900dc873f226b0f86dae1a9be9e128db\" data-private-watermark-src=\"v2-6669e6e39ec7b69d85a2d8300bb56315\"></p>\n<h2><b>VC在皮肤上的作用数据</b></h2>\n<p data-pid=\"b7d175Av\"> 关于VC在皮肤上的作用数据，很早的时候修丽可的创始人--皮内尔博士就展开了研究【5】。目前可以确定的是：</p>\n<p data-pid=\"NTsicnCU\">- VC的透皮受产品pH的影响，一般来说，VC产品的pH低于3.5才可以透皮被皮肤利用，pH越低，透皮效果越好，生物利用率也最高。<b>当pH为2.0时，VC的透皮数据最好</b>。这也是为什么目前大多数效果好的VC精华pH都很低的重要原因。当然产品的pH低于3.5时，是需要品牌自己做毒理，验证产品的安全性的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1f5f0fbf570d317688e5d1b74bc2c9f2_720w.jpg?source=b1748391?rss\" data-caption=\"VC在不同pH值下的透皮吸收数据\" data-size=\"normal\" data-rawwidth=\"549\" data-rawheight=\"400\" data-watermark=\"watermark\" data-original-src=\"v2-1f5f0fbf570d317688e5d1b74bc2c9f2\" data-watermark-src=\"v2-891567192dc725e78107de31bfdd4cc2\" data-private-watermark-src=\"v2-6b8304cb737f8cfb9a55a962d15266c3\"></p>\n<p data-pid=\"VZ_MqjIA\">- 关于<b>VC最佳透皮的浓度</b>，皮内尔博士也展开了研究，根据实验结果可知，左旋VC浓度达到5%时，才有比较好的吸收（<i>也就是产品有效果</i>）。<b>当左旋VC的含量达到20%时，VC的透皮效果最好</b>。浓度高了或是低了，透皮的效果都会大打折扣。这也是目前为什么绝大多数VC精华的浓度最高也就加20%的原因。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-8e3a9817489f35fc49c02132a9ba6284_720w.jpg?source=b1748391?rss\" data-caption=\"VC在不同浓度下的透皮吸收数据\" data-size=\"normal\" data-rawwidth=\"625\" data-rawheight=\"421\" data-watermark=\"watermark\" data-original-src=\"v2-8e3a9817489f35fc49c02132a9ba6284\" data-watermark-src=\"v2-ab3d116bb8e8c291fcb43f2f3743eb7d\" data-private-watermark-src=\"v2-a29ad0fd50c6428a6265c7cdb83f9048\"></p>\n<p data-pid=\"rka-mqtU\">- 关于VC在皮肤的留存时间，这篇文章也做了详细研究，实验表明：<b>当连续使用VC三天后，VC在角质层的有效浓度就达到了饱和，后续即便再继续使用VC，VC的有效浓度也不会增加了</b>（<i>也就是VC皮肤饱和了，吸收不进去了</i>）。滞留在角质层的VC会让皮肤看上去比较黄，但会两三天之内慢慢被皮肤吸收利用，黄色消失。<b>这也是为什么VC类产品我建议大家一周只需要用三次的原因，天天用不吸收没必要，而且浪费！</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-cb4574f5fbeee427673f65520ba9feeb_720w.jpg?source=b1748391?rss\" data-caption=\"VC在皮肤的留存时间数据\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"431\" data-watermark=\"watermark\" data-original-src=\"v2-cb4574f5fbeee427673f65520ba9feeb\" data-watermark-src=\"v2-2fad8157181a7e4f5aa895ad770dcdc2\" data-private-watermark-src=\"v2-141d27632693534c1f6b6895656182a1\"></p>\n<h2><b>VC都能解决哪些皮肤问题？</b></h2>\n<p data-pid=\"dOn4qvFl\"> VC有很多重要的生理功能，虽然我们只能通过饮食补充VC，但通过食物摄取的VC，对皮肤的改善是非常有限的，所以如果你想要通过VC改善皮肤的一些状况，涂抹含有VC的产品是非常有必要的。那涂抹到表皮的VC具体能解决哪些皮肤问题呢？我总结了以下几点：</p>\n<p data-pid=\"S93w5K1P\"><b>1.</b> <b>抗氧化，预防光损伤</b></p>\n<p data-pid=\"OvTQsgcB\"> 这个大家应该都知道，VC作为天然的强大抗氧化剂，其<b>最大的功能就是剿灭自由基，防止自由基对组织、器官的破坏</b>。因为自由基的产生原因有很大一部分是来源于皮肤受到紫外线的照射，所以在日常护肤的时候，大家一定要注意防晒，<b>防晒和VC产品的复配使用才能最大程度的预防光损伤，抗氧化抗衰。</b></p>\n<p data-pid=\"O8V5r0vG\"><b>2.</b> <b>美白，淡斑，提亮肤色</b></p>\n<p data-pid=\"fwq0AJHU\"> VC的美白功效，其实也不用多说，众人皆知。VC能美白，其实是因为<b>VC可以利用自身强还原能力，将黑色素的中间产物多巴以及多巴醌还原成酪氨酸，从而可以有效、减少抑制黑色素的生成</b>。</p>\n<p data-pid=\"WOh6NxMP\"> 与此同时，<b>VC还可以抑制5α-还原酶的合成，减少皮肤的出油</b>，有非常好的控油和抑制脂质过氧化的功效。整个一套组合拳下来，VC的美白功效也不容小觑。</p>\n<p data-pid=\"nn5gxg18\"><b>3.</b> <b>促进胶原蛋白的表达，抗老抗衰</b></p>\n<p data-pid=\"7qReYNTu\"> VC是脯氨酸羟化酶的辅助因子，它与胶原蛋白前体结合生成三螺旋结构，因此是胶原蛋白合成所必须的原料。另外VC它还可以增加胶原蛋白前体的基因翻译和mRNA转录，从而上调胶原蛋白的形成，增加成纤维细胞产生。</p>\n<p data-pid=\"wEMob7Ag\"> 说人话就是<b>VC可以激活胶原蛋白合成相关基因的表达，让真皮层的成纤维母细胞更多的产生胶原蛋白，来支撑皮肤的结构</b>。所以从这块来看，VC也有很好的抗皱抗衰的功效。</p>\n<h2><b>VC变黄真的失效、不能用了吗？</b></h2>\n<p data-pid=\"8NJlMVNq\">这个应该是所有使用过VC产品的消费者最关心的问题。的确！因为VC结构中存在烯二醇基团的缘故，导致VC非常的不稳定，很容易氧化变色而失活。但科学的说，<b>VC变色虽然是氧化的表现，但氧化不一定意味着活性就完全丧失了</b>。</p>\n<p data-pid=\"Kzfq8u88\">究其原因，主要是因为VC的氧化并不是一步，而是一个二步反应（<i>其实是多步反应，这里方便理解，简单划为两步</i>），当然了，它的还原产物也不止一个【6】。</p>\n<p data-pid=\"pg-yOVXf\">正常来说，VC被氧化后，第一步会失去两个电子，变成淡黄色的<b>脱氢抗坏血酸</b>（<i>DHA</i>）。虽然此时VC确实被氧化了，颜色也由无色变成了淡黄甚至黄色，但其实<b>此时DHA仍然有抗氧化的功效，只不过功效上相比精纯VC差一点罢了</b>。但要注意的是，<b>DHA一旦透皮吸收，它会在皮肤里还能重新被还原成VC起作用</b>，所以也就是说，如果一个VC产品，它只是变黄了，颜色没有很深（<i>指的是非常深的棕色或者茶色</i>），它其实仍然是有效果的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-78093356d080d62d14217ff2d07baab7_720w.jpg?source=b1748391?rss\" data-caption=\"VC失去两个电子变成DHA的结构变化\" data-size=\"normal\" data-rawwidth=\"566\" data-rawheight=\"232\" data-watermark=\"watermark\" data-original-src=\"v2-78093356d080d62d14217ff2d07baab7\" data-watermark-src=\"v2-1e4819ba39800aecf4264260e4472dec\" data-private-watermark-src=\"v2-01c8b54c1e5bf1e2bab9d389438e4355\"></p>\n<p data-pid=\"DBiN6Vsv\">VC氧化的第二步，这时候VC的五元内酯环会打开，生成新的产物<b>二酮古洛糖酸</b>，这时候的<b>VC基本就完全失去生理活性了</b>，此时VC的颜色也由原来的黄色变成了更深的棕色。脱氢抗坏血酸DHA转化成二酮古洛糖酸的反应是很慢的，但<b>一旦转化后，就再也不能变回去了</b>，所以我们就不要幻想它能像DHA一样，在皮肤里还能被还原成VC起作用了。</p>\n<p data-pid=\"_aUBouIO\">VC的还原产物二酮古洛糖酸后续还会继续被还原成其他产物（<i>很复杂，就不介绍了</i>），虽然此时功效没了，但涂抹在脸上对皮肤也没有什么太大的伤害，所以如果你之前不太懂，<b>涂了颜色很深的VC产品，也不用担心它的危害，无功无过罢了。</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-5a070e3462b4dabebdaea9589d941f80_720w.jpg?source=b1748391?rss\" data-caption=\"DHA继续还原成二酮古洛糖酸的结构变化\" data-size=\"normal\" data-rawwidth=\"865\" data-rawheight=\"286\" data-watermark=\"watermark\" data-original-src=\"v2-5a070e3462b4dabebdaea9589d941f80\" data-watermark-src=\"v2-1b6ad51b3648a0b4c702897c635adce0\" data-private-watermark-src=\"v2-ea43c0db10b04a416cb9ed1dc6286f18\"></p>\n<h2><b>产品推荐（我就知道你们都想看这里！！！！！！）</b></h2>\n<h3><b>1. 修丽可CEF</b></h3>\n<a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\" data-mcn-id=\"1452422232413184000\"></a><p data-pid=\"r4O6GvRp\">毋庸置疑，作为目前市面上名声最大、最好用当然也是最贵的VC精华，这里必须推荐一波。这支CEF精华主打<b>15%左旋VC + 1% VE + 0.5% 阿魏酸</b>，这个三叉戟组合也是修丽可创始人皮内尔博士赫赫有名的CEF专利。</p>\n<p data-pid=\"VLZ7ro9H\">因为VC很不稳定容易氧化失活影响其抗氧化功效，所以作为美国的抗氧化鼻祖，皮内尔博士很早就展开式了对VC稳定性的研究。后来老爷子发现，<b>如果把0.5%的阿魏酸掺入15%的VC和1%的生育酚溶液中，可以有效提高VC和VE的化学稳定性，同时还能提供双倍的光损伤防护</b>。也就是说，如果只有VC和VE的话，就只有抗氧能力和一点微弱的抗紫外线能力，但是如果引入了阿魏酸，不仅可以维持 VC和VE的抗氧化能力，而且还能大大提高整个配方的抗紫外线能力（<i>原因是阿魏酸作为替死鬼和自由基结合，挽救了VC和VE</i>）。</p>\n<p data-pid=\"07v48MtL\">与此同时，为了让VC更好的透皮被利用，<b>这款精华的pH值也是非常的低</b>，所以酸性很强，对于一些不耐受的肌肤来说，<b>可能初次使用会有一些刺激</b>。但说实话，<b>控油、提亮的效果真不是吹的</b>，我这种懒人，一年三五瓶也是轻飘飘的秒掉。虽然肉痛，但有效。</p>\n<p data-pid=\"Zw2QINaa\">所以这样的一款有技术含量的VC精华，又好用又实在，谁不喜欢。只是这价格，有点让人劝退，如果打个对折，我能给你卖断货，你信不？</p>\n<h3><b>2. OBGAI VC</b></h3>\n<a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\" data-mcn-id=\"1452422312260149248\"></a><p data-pid=\"MIIi8dyq\">和修丽可齐名的OBAGI，必须在这里也有一席之地。和修丽可一样，OBAGI最出名的也是VC系列，因为海外授权的缘故，目前OBAGI的VC有美版和日版之分。<b>美版有10%，15%和20%三个浓度</b>，<b>日本原来也有三个浓度，分别是5%，10%，20%，最近还出了一个猛到哭的25%浓度</b>，浓度越高，价格越贵，但总体价格还是比修丽可美丽。但是毕竟浓度高，刺激性的风险比较大，所以<b>如果你不是耐受肌或者资深成分党的话，建议你上来不要使用高浓度，老老实实从5%浓度干起</b>（<i>敏感肌5%也可以尝试</i>），等皮肤耐受了，再慢慢攀升浓度（要循序渐进攀升，不要急功近利）。</p>\n<p data-pid=\"s7ISSo5C\">因为VC配方容易变色失活，很大一部分原因是因为VC怕水中的氧气，除了给VC找一个替死鬼之外（<i>例如修丽可</i>），那还有一条路，就是配方不用水，或者极致少用水，在这方面，OBAGI那是把这份气质拿捏的死死的。所以这也就成了OBAGI VC的灵魂。<b>OBAGI的VC利用多元醇作为主要溶剂，用极少量水来极限溶解高浓度VC以此来最大程度控制VC的稳定性</b>，所以OBAGI的VC相对来说，稳定性相比水系有了很大的提升，功效有保证。</p>\n<p data-pid=\"s2ArtkQV\"> 因为多元醇作为主溶剂，肤感上会有一点点腻，对于干皮没问题，但是油皮可能就不那么讨喜了。但总体我觉得都还好。所以如果你不喜欢被变色的VC染色，OBAGI的VC可以说是一个非常好的选择。</p>\n<h3>3. 仙丽施VC</h3>\n<a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\" data-mcn-id=\"1452422423426019329\"></a><p data-pid=\"I64tOwDv\"> 虽然修丽可和OBAGI的VC名气很大，但要真论起辈分，在仙丽施的VC面前，这两都要自称小弟。大家可能都不知道吧， <b>OBAGI，修丽可以及下面要说的欧玛，这三个品牌的创始人最早的时候都曾在仙丽施的实验室打过工呢，</b>也就是这份经历，让他们三积累了很多VC方面的技术经验，为以后的发家致富（创业）打下了基础。</p>\n<p data-pid=\"DP0wilUa\"> 仙丽施是全球VC抗衰的开创者（<i>第一个提出VC可以促进胶原蛋白的合成</i>），是首次把精纯左旋VC用于护肤品中的品牌，他们家的VC精华是全球第一款量产的左旋VC产品。<b>仙丽施的VC精华有三个浓度：7.5%，10%以及17.5%</b>。</p>\n<p data-pid=\"mfed0i0K\">1990年的时候，仙丽施研究出了「 <b>10% VC + 2% 硫酸锌 + 0.5% 乙酰酪氨酸</b>」的维 C 专利配方，次年推出市场上第一款 VC 精华，并一直售卖至今。也正是因为它的这个配方专利， 导致了后来的修丽可、OBAGI在使用维 C 时不得不想招避开这个配方。</p>\n<p data-pid=\"CBHGRFfQ\">这个配方的功效肯定没得说，<b>抗氧化、提亮，淡纹紧致的效果都很好</b>。但是很可惜，稳定性不是很好，虽然配方里也有加一些麦角琉因和葡萄籽等天然抗氧化剂，但还是抵不住岁月的侵蚀。但就像我说的，如果你买到比较新鲜的批次，快速用完，那效果也绝对是很赞的。</p>\n<h3>4. 春日来信VC</h3>\n<a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\" data-mcn-id=\"1452422500383166464\"></a><p data-pid=\"Hez9Z58-\">春日来信的VC，大家应该都很熟悉，今年他们家的VC真的是卖的非常非常火，是各大中腰部甚至头部主播直播间的常客。春日来信的创始人卞工，是我的好朋友，也是技术出身，所以在产品打造方面，也是实力派。</p>\n<p data-pid=\"FiwvVA2u\">虽然他们家的VC经常被人说是Copy修丽可的CEF配方，但其实人家的配方也是做了很多升级和调整的。<b>他们家的VC有两个浓度，一个10%，一个20%</b>。</p>\n<p data-pid=\"VhJePhGd\">10%版本的VC主打<b>10%VC + 0.5%阿魏酸 + 0.5%VE衍生物</b>（<i>生育酚乙酸酯</i>），除此之外，卞工在整个配方里还添加了一些其他的抗氧化成分来做CEF做了一个升级，比如里面有<b>白藜芦醇</b>、<b>葡糖基芦丁</b>。同时为了提高VC的透皮利用，除了配方本身pH很低之外，卞工在配方中还<b>添加了乙氧基二甘醇作为促渗剂，帮助VC更好的吸收</b>。</p>\n<p data-pid=\"MfFaZ-Rk\"> 为了改善以往其他VC产品缺乏滋润的肤感，卞工在这款VC里还添加了 大量<b>泛醇、生物糖胶</b>这样的保湿剂，使得整个配方不仅功效十足，在肤感方面也非常不错。之前他给过寄过两瓶，不到一个月全干完。接下去自个又买了两瓶，没办法，修丽可的CEF太贵，天天用扛不住，偶尔混搭一下，非常不错。</p>\n<h3>5. 拾颜VC</h3>\n<a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\" data-mcn-id=\"1452422556058361856\"></a><p data-pid=\"rgzKuAO6\">拾颜，非常陌生是吗？如果我说公众号护肤大号《基础颜究》，大家是不是有点感觉了？不错，拾颜就是三亩大叔创业的品牌，三亩大叔，作为圈内技术流和科学传播流的代表，在产品打造上，怎么缺的了新意？</p>\n<p data-pid=\"tlSpIXKG\">既然VC怕水中的氧气，那就<b>用可乐灌装的工艺通过二氧化碳把水中的氧气赶走</b>，这个看似很简单，但实操很难的工艺竟然被大叔真的拿捏住了，人家自己在工厂真的搭了一个可乐灌装线，这股韧劲不得不说，真的很有技术范。</p>\n<p data-pid=\"i2ILnmUy\">除此之外，这款产品是喷雾设计，<b>料体出口是单向阀</b>，这样尽量避免空气进入瓶内影响VC的活性，所以即便这个产品你用上个半年，料体基本也没什么变化。<b>除了10%的VC之外，这款产品里还添加了4%的黑麦籽提取物和麦角硫因，来有效促进细胞的增殖，抗老抗氧化方面绝对是一把好手</b>。但是一定要记得，使用的时候一定要先喷到掌心然后再涂抹使用，切勿直接朝脸喷。</p>\n<h3>6. 优色林鲜活VC精华</h3>\n<a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\" data-mcn-id=\"1452422620582514688\"></a><p data-pid=\"oB0LMrYz\">优色林，德国BDF旗下的功效护肤品牌，虽然在国内名气不如修丽可、OBAGI，但是也不能算是小众，毕竟在成分党的圈子里，他还是颇有盛名的。BDF毕竟作为作为德国百年科研护肤品牌，不管是技术背景，还是供应链这块，都是非常有保障的。</p>\n<p data-pid=\"LXW_5AHy\"><b>这款VC精华主打的是一个冻干的概念</b>，将鲜活的10%VC首先储备在真空仓里，当使用的时候按压真空仓，鲜活的VC粉就被注入到精华液里面了，摇匀后就可以享用10%的VC大餐了。</p>\n<p data-pid=\"h5YnFUse\">除了10%的鲜活VC，这款产品里还添加了小分子量的玻尿酸，<b>小分子玻尿酸</b>可以直接触达肌底，在保湿的同时，也给VC起作用提供了一个良好的湿润微环境。与此同时里面还添加有<b>胀果甘草提取物</b>，这是一个VC booster，可以增强VC的抗氧效果，还可以修复紫外线带来的光损伤。</p>\n<p data-pid=\"o0oJrZFL\">因为是冻干的概念，再加上乳液的质地，所以无论是在VC功效稳定方面，还是保湿方面，都远超我的预期，使用下来体感非常不错，<b>如果你觉得皮肤负担很重，想精简护肤，这样的一只VC精华， 绝对是一个非常不错的选择</b>。</p>\n<h3>7. Phyto-c欧玛VC精华</h3>\n<a data-draft-node=\"block\" data-draft-type=\"mcn-link-card\" data-mcn-id=\"1452422689139339265\"></a><p data-pid=\"OxRkLnJk\">欧玛，上面也说了，其创始人也曾在仙丽施搬砖过，而且还是修丽可创始人皮内尔博士的学生，所以他在VC方面的造诣也非常不简单。所以说，VC四大天王，欧玛也必须占一席。</p>\n<p data-pid=\"f1rTIv2Y\">欧玛博士本来也是修丽可品牌的创始元老，但因为经营理念的原因，后来出走修丽可，成立了自己的品牌Phyto-C欧玛，不得不说，大佬都是要创业致富的。</p>\n<p data-pid=\"e28cpke9\">欧玛博士一直以来都坚定的认为VC是护肤理念中不可或缺的一环，所以在他进军美妆行业时，一直研究VC，出走修丽可后，因为CEF专利的缘故，他就没再碰这个体系，反而自己独创了一个<b>VC+油橄榄+VE+VA视黄醇</b>的体系，这也就是后来欧玛家的AEC精华的核心。欧玛的VC精华主打<b>15%的左旋VC</b>，另外还添加了<b>硫酸锌</b>和<b>生物类黄铜</b>，成分也是非常的精简，典型的古老成分党。</p>\n<p data-pid=\"6lQknab-\">欧玛这个牌子其实在功效方面做的一点也不差，甚至比修丽可有过之而无不及，但为什么没火起来，究其原因大概就是技术控太不注意细节了，他们家产品的肤感实在不敢恭维。好在后面一系列产品有注意到这点，已经有所改善了。如果大家有兴趣，也仍然值得试一试。</p>\n<h2><b>参考文献</b></h2>\n<ul>\n<li data-pid=\"Xjr7cnJ6\">【1】 Szent-Gyorgyi A. Observations on the function of peroxidase systems and the chemistry of the adrenal cortex: Description of a new carbohydrate derivative. Biochem J, 1928, 22: 1387–1409</li>\n<li data-pid=\"-g08rIr-\">【2】 Szent-Gyorgyi A, Haworth W N. ‘Hexuronic acid’ (ascorbic acid) as the antiscorbutic factor. Nature, 1933, 131: 24</li>\n<li data-pid=\"BF1P4ggL\">【3】 Monfort A, Wutz A. Breathing-in epigenetic change with vitamin C. EMBO Rep, 2013, 14: 337–346</li>\n<li data-pid=\"DJ7ceelb\">【4】 Pullar J M , Carr A C , Vissers M . The Roles of Vitamin C in Skin Health[J]. Nutrients, 2017, 9(8):866-.</li>\n<li data-pid=\"tjreFxp1\">【5】 Pinnell S R , Yang H , Omar M , et al. Topical L‐Ascorbic Acid: Percutaneous Absorption Studies[J]. Dermatologic Surgery, 2010, 27(2):137-142.</li>\n<li data-pid=\"3VgJ2lFO\">【6】 Nemet I , Monnier V M . Vitamin C degradation products and pathways in the human lens.[J]. Journal of Biological Chemistry, 2011, 286(43):37128-37136.</li>\n</ul>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/kang-da-dao-de-kbo-shi-9?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">科学怪人-k博</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/446102132/answer/2264274182?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">19 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/526674059?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">护肤小白可以通过「成分护肤」，快速进阶成分党吗？「成分护肤」具体是个什么概念？</a><br><a href=\"http://www.zhihu.com/question/523591949?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">护肤成分是否也有季节性，新兴成分「依克多因」是更适合春天吗？</a><br>\n","link":"http://www.zhihu.com/question/446102132/answer/2264274182?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"作为学习型工具，文石 Note5+ 用起来怎么样？","date":"2022-05-04 06:30:00","description":"虽然有些小细节尚待优化，但我对它整体满意。<a href=\"https://sspai.com/post/71542\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/71542"},{"title":"缩短命令、调整按键、自动补全，这些代码值得你放进 PowerShell 配置文件","date":"2022-05-04 03:30:00","description":"一般来说，PowerShell 中用户创建的变量、函数等只能在当前的窗口会话生效。但配置文件非常特殊，PowerShell 每次启动前都会加载该文件。如果将某些命令写入这个文件，修改就能全局生效。<a href=\"https://sspai.com/post/73019\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73019"},{"title":"App+1 | 在家里来一场说走就走的旅行：GeoGuessr","date":"2022-05-03 07:00:00","description":"GeoGuessr 发布于 2013 年，最初它是只有一种模式的网页游戏。游戏会给出一张谷歌地图街景，你可以在附近移动，通过地图中的各种细节判断自己身在何处——仅仅知道什么国家是不够的，你需要让选择的定位点和地图的真实地点尽可能接近。<a href=\"https://sspai.com/post/72968\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72968"},{"title":"核酸、抗原、抗体检测，三种新冠检测方式有何差别？","date":"2022-05-03 03:00:00","description":"自 2020 年新冠疫情爆发以来，「核酸检测」作为一项检测是否感染的重要指标，开始反复出现在我们的生活中。2022 年 3 月 10 日，国务院应对新型冠状病毒肺炎疫情联防联控机制综合组发布通知，决定推进「抗原筛查、核酸诊断」的检测模式，在核酸检测基础上增加抗原检测作为补充。\n\n抗原检测是什么？和其他的检测手段有什么不同？这篇文章，我们以新型冠状病毒为例，讲讲常见的快速筛查手段，聊聊相关的原理以及适用范围。<a href=\"https://sspai.com/post/72950\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72950"},{"title":"混合动力汽车为何只用电池储能，而不用飞轮、压缩空气、超级电容等方式储能？","date":"2022-05-02 01:36:27","description":"\n<p data-pid=\"NM7eVxHv\"> 2021年3月13日，国务院发布<b>《中华人民共和国国民经济和社会发展第十四个五年规划和2035年远景目标纲要》。</b></p>\n<p data-pid=\"2b7vlsPh\">其中就讲了2021年到2035年，一共15年需要发展的储能方式。</p>\n<blockquote data-pid=\"VYQ6BCiT\"> 按照技术原理划分，储能技术主要分为<b>物理储能</b>（如抽水储能、<b>压缩空气储能、飞轮储能</b>等）、<b>化学储能</b>（如铅蓄电池、液流电池、钠硫电池、锂离子电池）和<b>电磁储能</b>（如超导电磁储能、<b>超级电容器储能等</b>）三大类。其中：最成熟的是抽水蓄能、铅蓄电池；正处于示范推广阶段的是飞轮储能、压缩空气储能、锂电池；发展处于初期的技术有铝空气电池、液流电池、钠硫电池、固态电池、燃料电池、超导磁蓄能、超级电容等。</blockquote>\n<p><img src=\"https://pic1.zhimg.com/v2-12dab9f3f343e888473eea70c6c2b2da_720w.jpg?source=b1748391?rss\" data-rawwidth=\"655\" data-rawheight=\"521\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-12dab9f3f343e888473eea70c6c2b2da\" data-watermark-src=\"v2-a7ad509968bb570e41af1f8266ac1826\" data-private-watermark-src=\"v2-1544a312e013aeb851611df2358fd7ee\"></p>\n<p data-pid=\"JXGQJxVV\">下面简单介绍下<b>压缩空气、超级电容、飞轮储能</b>的应用及发展，以及为什么现在的混合动力汽车没有使用这些储能方式。</p>\n<p><br></p>\n<h2>压缩空气储能</h2>\n<p data-pid=\"iYJoGfmY\">1978年，德国建成了世界第一座示范性压缩空气蓄能电站--<b>德国汉特福（Huntorf）压缩空⽓储能电站。</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-1ea83bff64db45dde0278f6ce22ed39a_720w.jpg?source=b1748391?rss\" data-rawwidth=\"603\" data-rawheight=\"292\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-1ea83bff64db45dde0278f6ce22ed39a\" data-watermark-src=\"v2-51599d1ccb9c88d6e8fb9ea4a6857673\" data-private-watermark-src=\"v2-68de19211d236edccf2d372f78ecf917\"></p>\n<p data-pid=\"Hz7O3HeA\">压缩空气储能的方法就是用电能将空气压缩成高压力的空气（英国的空气储能甚至压缩成了液态空气），将之注入到大型容器或加工密闭洞穴内。在需要电能输出的时候，将储气容器（洞穴）内的高压空气通过压力阀门释放出，经换热器与油或天然气混合燃烧，导入<b>燃气轮机</b>做功发电。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-720e06c9103e4033e3888db727ffd492_720w.jpg?source=b1748391?rss\" data-rawwidth=\"689\" data-rawheight=\"585\" data-size=\"normal\" data-caption=\"德国汉特福（Huntorf）压缩空⽓储能/发电流程\" data-watermark=\"watermark\" data-original-src=\"v2-720e06c9103e4033e3888db727ffd492\" data-watermark-src=\"v2-5ee81d38faa6177fdc0da6246345321e\" data-private-watermark-src=\"v2-3526a7442dedb394997fbf276617e839\"></p>\n<p data-pid=\"Yd1buPt_\">燃气轮机由<b>压缩机、燃烧室、膨胀机</b>构成，高压力空气和可燃气体进行混合燃烧，产生高压高温的气流，进入膨胀机做功。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ac82b9cd6c125fabcf4563a5d34d42b1_720w.jpg?source=b1748391?rss\" data-rawwidth=\"640\" data-rawheight=\"298\" data-size=\"normal\" data-caption=\"燃气轮机组成\" data-watermark=\"watermark\" data-original-src=\"v2-ac82b9cd6c125fabcf4563a5d34d42b1\" data-watermark-src=\"v2-81dee7d650059ae39947b2d663b7d5db\" data-private-watermark-src=\"v2-7a2c6c9ed53cbfa04f9a1ed809bd5c4a\"></p>\n<p data-pid=\"gS6Yh5fZ\">压缩空气储能方案的优点是建造、运行成本较低，可以利用地下洞穴、废弃矿井等密闭环境，经济性较好。因为空气不会燃烧、爆炸，所以环境污染小，也不像水电储能一样对地点（河流中下游）有着严苛的要求。可以有效储存电能，用于调峰（储存多余的电力）和电网应急。</p>\n<p data-pid=\"0heu8oB3\">德国、美国均有着大型规模的空气储能站，中国则是世界上第三个实现批量性用空气储能供电的国家。</p>\n<p data-pid=\"iPUes3RO\">2013年在河北廊坊建立的<b>1.5兆瓦</b>的压缩空气储能系统。</p>\n<p data-pid=\"ZXXjGsuK\">2015年在安徽芜湖建立的<b>0.5兆瓦</b>的压缩空气储能系统。</p>\n<p data-pid=\"roVoxvNr\">湖北应城一期投资40亿，预计2023年建成的<b>300兆瓦</b>级压缩空气储能项目。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-152636018ddcb703c0c54c75cf690654_720w.jpg?source=b1748391?rss\" data-rawwidth=\"640\" data-rawheight=\"427\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-152636018ddcb703c0c54c75cf690654\" data-watermark-src=\"v2-6b0a28d8e15f03a3e1f20537466ff20a\" data-private-watermark-src=\"v2-85f844110b44bd4bb96b5902d35e92a8\"></p>\n<blockquote data-pid=\"X4oHy9XZ\">该项目建成后，储能电站年发电量可达5亿度，不仅为湖北应城电网提供调峰等辅助服务，助推应城经济转型发展，还实现了对废弃盐穴资源的再次利用，有利于当地的环境保护和资源节约，具有显著的绿色能源经济效益。</blockquote>\n<p data-pid=\"PDhBBelU\"><b>但目前的“压缩空气储能”适用于响应慢的大规模储能，其额定功率下的放电时间为1-20h，所以</b>其漫长的响应时间，加上其规模化的基础硬件设备，是不可能应用在必须以秒为反馈的小型载具，如混合动力汽车上的。</p>\n<p><br></p>\n<h2>超级电容器存储</h2>\n<p data-pid=\"nXjuBMiw\">常用的超级电容器是<b>双电层电容</b>，通常被称为EDLC（机电双层电容器），其构造和锂动力电池类似，正极/隔膜/负极排列组织。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-661e9852f555f5f6d01548214b6f0906_720w.jpg?source=b1748391?rss\" data-rawwidth=\"493\" data-rawheight=\"294\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-661e9852f555f5f6d01548214b6f0906\" data-watermark-src=\"v2-47d7ca0ebada69a5c2898f7c1025558f\" data-private-watermark-src=\"v2-02eab3ff4ab5f03b5db167b78b6242d0\"></p>\n<p data-pid=\"8QtI7IDt\">但构造虽然类似锂动力电池，但和锂动力电池不一样，电能的存储并不需要化学反应，而是一种电荷的纯物理迁移。充电后，电能作为电荷存储在板之间的电场中。当放电时，电流从电场中快速流出。无论是充放电，理论上超级电容器都不会消耗或耗散能量。</p>\n<p data-pid=\"9wPAsEh5\">超级电容器储能方式实际已经用在了多种载具上，但大多都是超级电容器搭配锂动力电池使用。</p>\n<p data-pid=\"Yd81pVnX\">因为双电层电容超级电容的充放电不需要化学反应，而是直接就是电荷的迁移，所以拥有极快的充放电速度。而充电快是好事，但放电速度过快，实际并非一件好事。因为大部分载具都需要保证续航，需要储能装备源源不断地释放能量。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-7c6215f466ef42e5ad778f4c6e8cb0df_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1008\" data-rawheight=\"504\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-7c6215f466ef42e5ad778f4c6e8cb0df\" data-watermark-src=\"v2-6ae76b12a63b80518766775ffb043fc0\" data-private-watermark-src=\"v2-6645103a61d9cca1f7fb66f20416e7d8\"></p>\n<p data-pid=\"3VtIpqb0\">2017年11月，世界第一艘千吨级纯电池推动载重船舶在广州整体吊装下水，填补了世界同吨位内河双电驱动散货船的空白，船上安装有重达<b>26吨的超级电容+超大功率的锂电池</b>，整船电池容量约为2400千瓦时，相当于约30—50台电动汽车电池容量。船舶在满载条件下，航速最高可达12.8公里/小时，续航力可达80公里。</p>\n<p data-pid=\"Zv43Zp3J\"><b>锂动力电池</b>负责船舶的平稳行驶（缓慢放电），而<b>超级电容</b>负责紧急情况的行驶（快速放电），而船舶的减速，也可以很方便快速地给<b>超级电容充电，实现动能的回收。</b></p>\n<p data-pid=\"HdIJ8Wzr\">实际，混合动力汽车里面，早就使用了<b>超级电容器+锂动力电池</b>的储能方式。</p>\n<p data-pid=\"6fsI-Ror\">比如制动能量回收，就可以用超级电容器来进行大电流的瞬时回收，而在需要急加速和爬坡的时候，把超级电容器的电量快速释放，可以获得短时间的大功率、大动力。</p>\n<p data-pid=\"-2EAFzZ3\">美国的Maxwell<a href=\"http://link.zhihu.com/?target=http%3A//www.elecfans.com/tags/te/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Te</a>chnologies是业界最知名的超级电容器生产研发的企业，截至2018年底全球有超过610万辆汽车在使用其超级电容器技术。</p>\n<p><img src=\"https://pica.zhimg.com/v2-1f60428362c61145d6b972b62e089156_720w.jpg?source=b1748391?rss\" data-rawwidth=\"893\" data-rawheight=\"416\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-1f60428362c61145d6b972b62e089156\" data-watermark-src=\"v2-b482d387adbe36d0d3b4b9406b401d21\" data-private-watermark-src=\"v2-008e827d3ebd8f3683107b53150fad28\"></p>\n<p data-pid=\"Sy-Agr2c\">在2018年5月，该公司就向吉利汽车提供“超级电容器”，帮助其混动车型提高“最大功率”。</p>\n<p data-pid=\"Yj_DLYUJ\">但超级电容器的超快放电的特性，在目前阶段，在新能源汽车上，依旧还只能是锂动力电池的辅助，还无法独自担任长续航的重任。</p>\n<p><br></p>\n<h2>飞轮储能</h2>\n<p data-pid=\"G3zAT7ME\">想起十多年前，自己在一家日本电子电器工厂，其中一个产品就是生产某国外的山地自行车的小型飞轮储能装置，靠制动回收来储存能量，可以供自行车照明，好处就是不受温度影响，寿命长，但容量很小，也基本存不了电。</p>\n<p data-pid=\"J3lkoxj-\">言归正传，飞轮储能是旋转绕定轴旋转的转动刚体在获得电能时加速获得动能，而减速过程则会减少动能而转为电能。而如果不充放电，则是浮充状态。</p>\n<p data-pid=\"IAk47Ihd\">飞轮储能装置由<b>飞轮、轴、轴承、电机、真空容器、电力电子变换器</b>组成。</p>\n<p><img src=\"https://pica.zhimg.com/v2-5addd8775165ded73647a09f61883b89_720w.jpg?source=b1748391?rss\" data-rawwidth=\"398\" data-rawheight=\"371\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-5addd8775165ded73647a09f61883b89\" data-watermark-src=\"v2-09aa480a63462f1c77d1cfa31e652e7b\" data-private-watermark-src=\"v2-0693a1cf32ad3231a2f0466bcb7a8499\"></p>\n<p data-pid=\"mu40ZJXR\">储能时，电动机带动飞轮高速旋转，电能转换为飞轮的动能。放电时，飞轮带动发电机，自身减速。无论充放电，都没有化学反应参与，也就是不存在化学环境污染问题。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-e05b564ee81814c51843845891e72f5a_720w.jpg?source=b1748391?rss\" data-rawwidth=\"570\" data-rawheight=\"276\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-e05b564ee81814c51843845891e72f5a\" data-watermark-src=\"v2-8737acb36567ac4c318568dbc890f235\" data-private-watermark-src=\"v2-9c0d95ef72c9c09df4f51ff41591da01\"></p>\n<p data-pid=\"tm8BoQZC\">自古以来，飞轮储能、释放能量，贯穿到历史的各个阶段，从古老的纺车到蒸汽机，一直都是靠着飞轮的惯性来运作。不断给飞轮一个动能，让其不断循环，这种飞轮因为和外界的摩擦（轴承摩擦，空气摩擦），即便有着较高速度的初始动能，也会短时间内消耗殆尽，必须要外界能量才能持续运转，根本就无法储能。</p>\n<p data-pid=\"eoHWCFFP\">而现在飞轮所以能够依靠内部的飞轮动力储能，一个是非接触式的电磁轴承，另一个则是飞轮运行的真空环境。加上高温超导技术、高强纤维复合材料的帮助，现在的飞轮已经在储能方面进入了实用阶段。</p>\n<p data-pid=\"PY5-Gpw-\">飞轮最早作为蓄能电池，是在20世纪的60--70年代，美国NASA首次运用在了卫星上。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-b7fb26a8ee1622be56036306c01c5dc5_720w.jpg?source=b1748391?rss\" data-rawwidth=\"593\" data-rawheight=\"458\" data-size=\"normal\" data-caption=\"NASA研制的飞轮\" data-watermark=\"watermark\" data-original-src=\"v2-b7fb26a8ee1622be56036306c01c5dc5\" data-watermark-src=\"v2-9faae19017d302fdd7cc80983edbf551\" data-private-watermark-src=\"v2-963c036027ce6c07b8f0db98638fc702\"></p>\n<p data-pid=\"mTwYFpiU\">其后飞轮储能也应用在了汽车上，在保时捷918RSR，采用的是混合动力，除开发动机外，副驾驶位置还有一个飞轮储能系统。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-41eea5745a9e65f7f009226e9b3fb128_720w.jpg?source=b1748391?rss\" data-rawwidth=\"497\" data-rawheight=\"244\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-41eea5745a9e65f7f009226e9b3fb128\" data-watermark-src=\"v2-0350d8311b00ac9c08cf2bba5ecaa83c\" data-private-watermark-src=\"v2-59388c9655edf29b1df35962a23c5198\"></p>\n<p data-pid=\"dkM5Zr5Z\">平心而论，如果光从技术上看，其实无论在性能指标，安全性，环保，寿命、储能密度，能量转换效率，加之体积小，重量轻，飞轮电池都很适合汽车使用。</p>\n<p data-pid=\"bJxDlF0X\">但飞轮如果要达到高效的储能效果，基本<b>飞轮的转速得在50，000转/分</b>往上。这样的飞轮储能装置无论是内部、外部所用的材料都非常昂贵，否则无法承受这样的高转速。这也意味着装载在车辆上的飞轮储能设备价格的高昂，现阶段无法普及到普通汽车上面，而只能在昂贵的跑车上面尝鲜。</p>\n<p data-pid=\"MZGfFXJw\">现阶段用的飞轮储能，主要应用场景还是用在了公共大型载具上，比如地铁，用于进站减速的能量回收。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6462ef69bc4fcf328ed06c3c5636408b_720w.jpg?source=b1748391?rss\" data-rawwidth=\"553\" data-rawheight=\"94\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-6462ef69bc4fcf328ed06c3c5636408b\" data-watermark-src=\"v2-0f32a713676a8e09ad2d766f8c8653ad\" data-private-watermark-src=\"v2-b9e54cf0333c08cdccd02d247127af4b\"></p>\n<p data-pid=\"0pxOGHtL\">相比电容储能和中压逆变储能，飞轮储能有更好的节能效果，在美国地铁站使用中，能够实现20-30%的节能效果。</p>\n<p data-pid=\"-seNOmdj\">综合来说，作为能装载在批量生产的混动汽车上的主要储能装置，必须要符合<b>能量反馈快，体积小，性能稳定支持长续航，成本还要低</b>的前提。而飞轮、压缩空气、超级电容都有着各自鲜明的特性，目前阶段来说，都无法作为混合动力汽车的主要储能装置。</p>\n<p data-pid=\"uVozaupe\">参考：</p>\n<p data-pid=\"-VeToRcc\">1、“<a href=\"http://link.zhihu.com/?target=https%3A//xueqiu.com/6702987851/178090157\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">xueqiu.com/6702987851/1</span><span class=\"invisible\">78090157</span><span class=\"ellipsis\"></span></a>”</p>\n<p data-pid=\"nyxZf5tm\">2、”<a href=\"http://link.zhihu.com/?target=https%3A//baijiahao.baidu.com/s%3Fid%3D1706522773049943181%26wfr%3Dspider%26for%3Dpc\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">baijiahao.baidu.com/s?</span><span class=\"invisible\">id=1706522773049943181&amp;wfr=spider&amp;for=pc</span><span class=\"ellipsis\"></span></a>”</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/319174675/answer/2464922188?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">22 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/513320709?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何用能量的角度解读电动汽车？</a><br><a href=\"http://www.zhihu.com/question/517474898?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">电动汽车动力电池的压差问题？</a><br>\n","link":"http://www.zhihu.com/question/319174675/answer/2464922188?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"电动车没有大幅提高续航里程的情况下，研发方向是不是应该转向快充技术？","date":"2022-05-02 01:33:36","description":"\n<p data-pid=\"QjrultVl\">题主的思路大体是正确的，但有那么一点点偏差。<b>电动汽车确实不应该一味追求续航里程的提高，而应该在充电上下功夫 —— 除了充电速度之外，更重要的是充电便利性</b>。</p>\n<h2>一、60-100kW的充电速度很慢吗？</h2>\n<p data-pid=\"865E5Fud\">以特斯拉为例，目前Model 3双电机版最大充电功率250kW、标续版170kW<sup data-text=\"\" data-url=\"https://zhuanlan.zhihu.com/p/90169945\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\">[1]</sup>；我自己开的小鹏P7最高在85kW左右。</p>\n<p data-pid=\"0QNzBjN2\">当然，最大充电功率并不等于实际充电功率，国外Model 3的实测充电曲线如下图的蓝线<sup data-text=\"\" data-url=\"https://www.youtube.com/watch?v=PPrVZtzAqX4\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"2\">[2]</sup>：40%SOC以下时可以实现195kW充电、50%/60%/70%/80%/90%SOC时分别降为154kW/107kW/89kW/57kW/32kW。</p>\n<p data-pid=\"u8GUvmkF\">同时测试的奥迪e-tron的最大功率虽然不如Model 3，但平均功率却强得多。80%SOC时还有125kW的充电功率、96%时还有63kW的充电功率。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-cb22a838687034d48bfaf6936ee87ac2_720w.png?source=b1748391?rss\" data-caption=\"图片来源[2]\" data-size=\"normal\" data-rawwidth=\"2656\" data-rawheight=\"995\" data-watermark=\"original\" data-original-src=\"v2-cb22a838687034d48bfaf6936ee87ac2\" data-watermark-src=\"v2-fb433a3a92b2c9d97f5a0e8da2b8cde6\" data-private-watermark-src=\"v2-8a4dc9b67f1fa1ea03e41f5d76e53288\"></p>\n<p data-pid=\"KkuXztM7\">Model 3与奥迪e-tron的充电功率画成曲线如下图所示：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-9759832484ca2dc4bf0391918d4cbe2a_720w.png?source=b1748391?rss\" data-caption=\"图片来源[2]\" data-size=\"normal\" data-rawwidth=\"839\" data-rawheight=\"472\" data-watermark=\"original\" data-original-src=\"v2-9759832484ca2dc4bf0391918d4cbe2a\" data-watermark-src=\"v2-6cd3280c0d3f57a769bcc7811ef96d7b\" data-private-watermark-src=\"v2-74400032a71009e4e406c4a98c8420b1\"></p>\n<p data-pid=\"N2g6lru6\">题主说：「我国的充电桩功率只有60~100千瓦」。咱们就按平均80kW来算。</p>\n<p data-pid=\"mE7SyeXs\">不考虑保有量极低的奥迪e-tron，假设你开的是Model 3性能版，也只是有0%-70%的SOC范围内可以享受到80kW以上的充电功率。</p>\n<p data-pid=\"m3l2ABmx\">以78.4kWh的高性能版Model 3为例，20%-70%的平均充电功率是155kW。</p>\n<ul>\n<li data-pid=\"fX5DBvHW\">\n<b>使用200kW的超充桩</b>：20%-70%充电时间为15分钟。</li>\n<li data-pid=\"cyJeA6Gt\">\n<b>使用80kW  的普通桩</b>：20%-70%充电时间为29.4分钟。</li>\n</ul>\n<p data-pid=\"HaLxqeWJ\">也就是说，从20%SOC充到任何电量值，使用200kW的超充桩最多只比80kW充电桩快了15分钟而已。</p>\n<p data-pid=\"P_lzwnJU\">这还是Model 3高性能版的数据，如果是Model 3标续版、其它品牌电动车，这个差距会进一步缩小。<b>例如我自己开的小鹏P7，最大充电功率80kW+，70%SOC时降低为70kW、85%SOC时降低为40kW。</b>使用200kW充电桩与80kW充电桩，是完全没有区别的。</p>\n<p><img src=\"https://pica.zhimg.com/v2-9a4750f8f2a8ca2e2174cb66b59691fa_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"980\" data-watermark=\"original\" data-original-src=\"v2-9a4750f8f2a8ca2e2174cb66b59691fa\" data-watermark-src=\"v2-3dfabec4bc97847354ec6b4f5fc7154d\" data-private-watermark-src=\"v2-5acd7ce93a97ede9df3572796f7de0cd\"></p>\n<p data-pid=\"uIJKY8bM\">也就是说，针对市面上的主流电动车来说，60-100kW的充电功率真的不低了。问题在于：<b>服务区上的国网充电桩数量本来就少、损坏又频繁、节假日存在排队情况，且普遍存在降功率的问题</b>。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-09d21d03bd10e42326a3825619e1d878_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"987\" data-rawheight=\"727\" data-watermark=\"original\" data-original-src=\"v2-09d21d03bd10e42326a3825619e1d878\" data-watermark-src=\"v2-5ebd521d69d881452e5165612a549fc8\" data-private-watermark-src=\"v2-22bcab9f4b8e10a8c8484ac5c36d94c5\"></p>\n<p data-pid=\"M7FFZYTJ\">根据我开电动车走南闯北的经验，各省服务区的充电功率大概如下：<b>浙江与江苏普遍为30-45kW、安徽普遍为60kW、河南60-80kW、山东80kW</b>。</p>\n<p data-pid=\"kPhzqHFb\">电动车主的心理状态一般是这样的： <b>遇到30kW桩叫爹骂娘、45kW桩波澜不惊、60kW桩心情舒畅、80kW桩惊喜万分</b>。</p>\n<p data-pid=\"NjzNLRCc\">这并不是国网不靠谱，而是国网早在2015年就布第一批桩了。2015年是什么概念啊？ 电动汽车还是遥不可及的产品，特斯拉生死未卜，蔚小理才刚刚成立。<b>当我们看到国网老旧充电桩成批故障、降功率使用、操作不便时，先别着急骂，它们之所以残破不堪，只是因为英雄暮年</b>。</p>\n<p data-pid=\"4KzC_bhE\">不管怎么说，国网付出了高昂的成本，打破了充电模式下的「鸡生蛋、蛋生鸡」难题。为电动汽车企业和后续的第三方充电桩企业的发展提供了条件。</p>\n<h2>二、车企正在做快充</h2>\n<p data-pid=\"TOv1vekz\">Model 3与奥迪e-tron都属于当前的平台，下一代平台大家都在往超快充的方向去做，有一个关键技术就是800V平台。例如小鹏G9的800V平台，最大可支持480kW充电功率。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-0474fbfbbfef4137ecb0c6d0dcf0bfa3_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"969\" data-rawheight=\"279\" data-watermark=\"original\" data-original-src=\"v2-0474fbfbbfef4137ecb0c6d0dcf0bfa3\" data-watermark-src=\"v2-e0e6583e844fcd97a5fa6010b52d0960\" data-private-watermark-src=\"v2-dde6398e09f21f3ced8be2fdbb14b0fa\"></p>\n<p data-pid=\"j080PShA\"><b>充电功率大上去了，找不到超充桩等于白干</b>。所以要自建超充桩，而超充桩对功率需求太大，电网不一定能满足企业的需求，所以还要自建储能……</p>\n<p><img src=\"https://pic2.zhimg.com/v2-0b3e7b2c85e9a3f8c450c6d2151db081_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"969\" data-rawheight=\"302\" data-watermark=\"original\" data-original-src=\"v2-0b3e7b2c85e9a3f8c450c6d2151db081\" data-watermark-src=\"v2-eb692e377b08b15a1fceaf95d6fc17c7\" data-private-watermark-src=\"v2-4de784b4e47d10e3e3c6626bf1c07ffc\"></p>\n<h2>小结</h2>\n<p data-pid=\"MldKuOgG\">到这里，我们终于可以回答此题了：</p>\n<ul>\n<li data-pid=\"XRRFHc4O\">60-100kW的充电功率不低了，只是能真正稳定提供这个功率的充电桩并不普遍。特别是需求最迫切的高速服务区，数量不够、功率不足。</li>\n<li data-pid=\"KwyRbBWE\">60-100kW的充电功率不低了，再提高功率的边际收益变低。</li>\n<li data-pid=\"18fUdMXN\">车企正在研发超快充技术，迭代升级的契机是800V平台，马上就要来了。</li>\n</ul>\n<p data-pid=\"Hw__LaoQ\"><b>比充电速度更重要的是充电便利性。目前主要的充电场景均存在改进潜力</b>：</p>\n<ol>\n<li data-pid=\"2BB_dnOg\">\n<b>家用慢充</b>：无论充电换电，家用慢充都是最主要的补能方式。从古老的3.3kW到如今主流的7.7kW，将来可能还会有11kW-20kW的三相交流慢充甚至无线充电。从小区整体来看，未来需要有序充电、公共电桩等方式来解决配电额度问题。</li>\n<li data-pid=\"zIZ2WuxB\">\n<b>商场慢充</b>：大型商场停车场逐渐开始有充电桩，多为7.7kW慢充；品牌的超充桩也在这里建设，功率可达80-150kW。实际上，这种停车2-4小时的场景，慢充太慢，快充太快（建设成本高，需要提前挪车），最适合的应该是20kW的「中速充电」。</li>\n<li data-pid=\"D25uSYsl\">\n<b>目的地慢充</b>：度假酒店的慢充，现在普及的还比较少，实际上非常实用必要。不必快充，慢充即可。</li>\n<li data-pid=\"HN131eSA\">\n<b>城市快充</b>： 没有家用充电桩的话，城市快充就成了主要的补能方式。一般建于商场停车场或专用停车场，很多品牌专属桩也属于此形式。</li>\n<li data-pid=\"nrwKsTvG\">\n<b>高速快充</b>： 这是目前最薄弱的环节，高速上建桩比较困难（牵扯单位比较多）、旺季淡季的客流量差异也大，盈利困难。特斯拉、小鹏等头部新势力也在发力超快充。</li>\n</ol>\n<p data-pid=\"MmVNDK68\"><b>其中，题主最为关注的「超快充」，仅对场景4与5有用，对更为常见的场景1、2、3没啥用</b>。</p>\n<p></p>\n<p></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhangkangkang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">张抗抗</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/514658377/answer/2464031731?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">16 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/514890737?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么电动汽车没有“正负电池”，将一辆车的电池分成若干快同时充电提升充电效率？</a><br><a href=\"http://www.zhihu.com/question/518933711?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">电动车充电时长？</a><br>\n","link":"http://www.zhihu.com/question/514658377/answer/2464031731?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价《明日方舟》三周年前瞻特别节目？","date":"2022-05-01 04:57:00","description":"\n<p data-pid=\"lOxgS3iz\">看完舟游长达两小时的三周年直播，这多到离谱的内容量啊……其他不说，光直播里播出的那一打宣传片时髦值就爆炸，配乐也是，审美这块鹰角真是 cool 到不行。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-bb76973685269b0badb32d67369dfa09_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-bb76973685269b0badb32d67369dfa09\" data-watermark-src=\"v2-e73ecf71b2df4838c8d208ac6e67adae\" data-private-watermark-src=\"v2-9aebc4dcb2a829c7b82a9dc8ccfa6fb8\"></p>\n<h3>边消化边简单梳理一下直播内容吧：</h3>\n<ul><li data-pid=\"fqVY5FkX\">周年活动是深海猎人续篇（很好，继续血源诅咒），这个之前好像已经有不少人猜到了，看 PV 还有标题「愚人号」应该是要发掘伊比利亚黄金舰队的遗产，「深海」与「伊比利亚大静谧」可以说是舟游世界观中个人最感兴趣的内容之一了，非常期待这次剧情！</li></ul>\n<p><img src=\"https://pica.zhimg.com/v2-b012f04f972e5ae1d75499f4f3c5b2f9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"840\" data-watermark=\"original\" data-original-src=\"v2-b012f04f972e5ae1d75499f4f3c5b2f9\" data-watermark-src=\"v2-6a573b66a057ec28a754d061c61f3c21\" data-private-watermark-src=\"v2-1ca1b86db08b9a12d6cff9501fac8688\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-8d21128948dfe23cadc086ecc01be6ac_720w.jpg?source=b1748391?rss\" data-caption=\"大审判官面具之下原来长这样，这可是连凯尔希都忌惮三分的人物啊（更新：图中老者并非担任艾丽妮师傅的那位大审判官，而是审判庭中最年长的「圣徒」卡门）\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"838\" data-watermark=\"original\" data-original-src=\"v2-8d21128948dfe23cadc086ecc01be6ac\" data-watermark-src=\"v2-bad89a859a24a8b844efd1668985da46\" data-private-watermark-src=\"v2-785253c813f2ba4384bca7c2ab10568e\"></p>\n<p data-pid=\"1-9bUAO1\">先导 PV 传送门。有一说一，自从二周年第一次出先导动画开始到现在， 鹰角这个 3D 动画的品质真是越来越牛了。</p>\n<a href=\"https://zhuanlan.zhihu.com/p/503703175\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-99f90421dfa5826d20c42a3513ba50a8_qhd.jpg?source=b1748391\" data-image-width=\"1146\" data-image-height=\"717\" class=\"internal\">明日方舟：《明日方舟》SideStory「愚人号」活动先导PV</a><ul><li data-pid=\"aNCcpZOY\">三周年限定是幽灵鲨异格不并让我感到意外（但是好看！），意外的是陪跑六星竟然是二周年就和我们见过面的审判官，还要送一个新六星医疗干员。另外浊心蒂会实装一个非常华丽的 Live2D 新皮肤，蓝蒂→红蒂→绿蒂，这下光的三原色了。</li></ul>\n<p><img src=\"https://pica.zhimg.com/v2-8e54a90c92fa635eb5e8b80e5b3071d9_720w.jpg?source=b1748391?rss\" data-caption=\"归溟幽灵鲨，异格特种\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-8e54a90c92fa635eb5e8b80e5b3071d9\" data-watermark-src=\"v2-98c80188fb55ebf8bd7dc9094cc3c896\" data-private-watermark-src=\"v2-eb4722cfc2b5b1ffe21fecafc91eb058\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-99996dcf1c0ce9b7a903ede7840c84fb_720w.jpg?source=b1748391?rss\" data-caption=\"老熟人了，倔强的审判官小姐\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-99996dcf1c0ce9b7a903ede7840c84fb\" data-watermark-src=\"v2-7498ae090d611cf37f585c2093483e6a\" data-private-watermark-src=\"v2-baf54ac22faa4709b9dede01e6e915aa\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-a0dcb001b7f0b7f7656b22f65c54ae83_720w.jpg?source=b1748391?rss\" data-caption=\"红蒂→绿蒂\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-a0dcb001b7f0b7f7656b22f65c54ae83\" data-watermark-src=\"v2-836d900976e2114e5ad0568b9290a2c5\" data-private-watermark-src=\"v2-a09ddad78764a3b2f061873c1cdf6fc1\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-2e666f9a4294f2971e0d67a2927b698f_720w.jpg?source=b1748391?rss\" data-caption=\"本次活动赠送六星，第一个六星男医疗，异常状态特化对策卡\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-2e666f9a4294f2971e0d67a2927b698f\" data-watermark-src=\"v2-6b078003664f6d72a17c69c6b0bfe90c\" data-private-watermark-src=\"v2-2aace3135a1b6de7049899fba6c8c7df\"></p>\n<ul><li data-pid=\"Oz6y_5s0\">然后是后续活动剧情的前瞻，信息量爆炸。按顺序是莱塔尼亚巫王篇（播了一个手抄本插画风格的历史记录片，配音那口德式英语真带感啊）、哥伦比亚莱茵生命篇（风格和莱塔尼亚那个 PV 形成极强烈的对比，简约而富有科技感，并且明确提及了关键的「炎魔事件」，终于要揭晓小火龙身世了吗！？）以及只给出非常有限信息（造访小矮人杜林一族家乡）的夏活。</li></ul>\n<p><img src=\"https://pic1.zhimg.com/v2-78b2f05dca3c2124ee9d4f1495c9e412_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"3240\" data-watermark=\"original\" data-original-src=\"v2-78b2f05dca3c2124ee9d4f1495c9e412\" data-watermark-src=\"v2-3af045d52ba9ed4050003fd69d9e889e\" data-private-watermark-src=\"v2-5d0f9b64887a46b7a42b4a83e70c24f4\"></p>\n<ul><li data-pid=\"Xw3LAv0I\">一系列系统上的升级，主要有四点：</li></ul>\n<ol>\n<li data-pid=\"FWTeD2Zr\">一是为了照顾玩家缩短剿灭时间，将提供可以直接跳过作战领取奖励的剿灭券，而且这个券是通过完成每日任务就可以获得的，终于可以不用每周挂好长时间的剿灭来刷玉啦；</li>\n<li data-pid=\"Is5MI5GI\">二是将开放龙门币本与经验书本的第六关，方便玩家更快刷资源；</li>\n<li data-pid=\"613bx3wk\">三是增加了理智合剂的恢复量；</li>\n<li data-pid=\"OcmTold9\">四是升级了模组系统，部分干员将拥有第二模组。</li>\n</ol>\n<p data-pid=\"EZ5hYJQ_\">可以说全部都是优化游戏体验到点子上的改进了。</p>\n<ul><li data-pid=\"poZZt1rw\">放出了音乐会「音律联觉 · 灯下定影」的消息，当然因为上海疫情肯定是延期了。对应的主题皮肤非常棒，萨卡兹大姑娘的皮肤必买。</li></ul>\n<p><img src=\"https://pic3.zhimg.com/v2-d93ceb5f1f8b9daff2f02d884fbdf212_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-d93ceb5f1f8b9daff2f02d884fbdf212\" data-watermark-src=\"v2-49c8da8c336c64e6a2cbac7a5cc936e3\" data-private-watermark-src=\"v2-6978582027987fe1c8fb2ece2f9df3b4\"></p>\n<ul><li data-pid=\"gck6GZ-z\">给了全新模式「保全派驻」的消息。介绍听得有点云里雾里，具体还是等后续公开吧。</li></ul>\n<p><img src=\"https://pica.zhimg.com/v2-70673c2ad43ac03c674b2f3380246b72_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-70673c2ad43ac03c674b2f3380246b72\" data-watermark-src=\"v2-5f1b7b0e9e0b54155b036cd72cb410db\" data-private-watermark-src=\"v2-3fac096657b2f7f4884967750b70c27a\"></p>\n<ul><li data-pid=\"rTwNdqkm\">公开了 2.5 周年庆典上公开的舟游主线动画化项目《黎明前奏》的新进展，展示了一段先导 PV，正式上线时会有中配与日配两个版本；还提及鹰角已经建立下属的动画工作室，名称叫「重力井」。</li></ul>\n<p><img src=\"https://pic3.zhimg.com/v2-6d13671c84a0cbe6253902ff4ad85811_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"370\" data-rawheight=\"209\" data-watermark=\"original\" data-original-src=\"v2-6d13671c84a0cbe6253902ff4ad85811\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<ul><li data-pid=\"w9-YvjRl\">为之前被喷得体无完肤的美术设定集 Vol.1 提供了补偿计划，所有在本月 20 号前购买了设定集的玩家都可以免费获得升级后的 Reset 版书籍。看直播里对新书的展示，鹰角确实好好吸取了教训和玩家建议，对原本被人吐槽「全是空白」的书页进行了重排版，插入了大量角色原画与设计草案内容。</li></ul>\n<p><img src=\"https://pic1.zhimg.com/v2-ad4f783156f9f4e2ca3a3a8306fc5bbd_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-ad4f783156f9f4e2ca3a3a8306fc5bbd\" data-watermark-src=\"v2-e9d0aa420b12a214d211ee46ea181426\" data-private-watermark-src=\"v2-a8fe163d14a7f85d76a64fc5e89da3e8\"></p>\n<p data-pid=\"jqzYhjbo\">对了，海猫还宣布因为发现大家对泰拉世界的架构与故事背景特别感兴趣，后续会专门推出舟游世界观设定集，将用详尽文字对很多剧情内难以描述的设定细节进行介绍（剧情党/考据党狂喜）。</p>\n<ul><li data-pid=\"MEw1jsd7\">三部衍生漫画的消息：《A1 行动预备组》《罗德厨房》《罗德岛源石记事》。因为之前推出的漫画内容已经累计到一定量了，所以会有推出单行本的计划。</li></ul>\n<p><img src=\"https://pic4.zhimg.com/v2-130790441a82000f4522c125f9e309e1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"3240\" data-watermark=\"original\" data-original-src=\"v2-130790441a82000f4522c125f9e309e1\" data-watermark-src=\"v2-ad4b849b3c5b859c81fff5805a80b545\" data-private-watermark-src=\"v2-7a48d651eb37b8da1849a16a1fb952fc\"></p>\n<ul><li data-pid=\"WcH_iuLw\">一系列周边物件消息（联名雪糕、联名邮票都有了，鹰角在经营 IP 这块真心厉害）。个人最惊奇的还是那个 1:3000 比例的罗德岛陆行舰模型，这得多贵啊……</li></ul>\n<p><img src=\"https://pic3.zhimg.com/v2-408f4787b824ac61a9be4a7e9b39efe6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1058\" data-watermark=\"original\" data-original-src=\"v2-408f4787b824ac61a9be4a7e9b39efe6\" data-watermark-src=\"v2-8b09f41df8b526afdf1a26cb370f3bc9\" data-private-watermark-src=\"v2-552c3fa482a2f36d98a0dbb2a53acb2d\"></p>\n<ul><li data-pid=\"ZC64yIF-\">继育碧之后，鹰角×卡普空联动，就是不知道会联动啥游戏。《生化危机》？还是《怪物猎人》呢？万分期待！</li></ul>\n<p><img src=\"https://pic2.zhimg.com/v2-1f679abb86e95e236ce437826f5f871f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-1f679abb86e95e236ce437826f5f871f\" data-watermark-src=\"v2-a42029a2efe3e523e652c91174af9fb8\" data-private-watermark-src=\"v2-e10f1486d8e5eee0aeea6cffa4b446cc\"></p>\n<p data-pid=\"5aMdYk5C\">边看三周年生日派对节目边写的，可能有些内容疏漏了语言也有点乱，大家凑活着看下吧。专心看节目去啦，最后就琴柳感一下收尾吧：</p>\n<h3>「你有没有感觉到饼学大厦正从天而降！？」</h3>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/ai-luo-38?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">呆罗</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/529085857/answer/2454155094?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">102 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/529639915?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何看待《明日方舟》三周年前瞻直播中的剿灭代理卡？</a><br><a href=\"http://www.zhihu.com/question/520027377?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价《明日方舟》制作组通讯 17 期，有哪些新内容值得期待？</a><br>\n","link":"http://www.zhihu.com/question/529085857/answer/2454155094?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"当我们进入下一个地图须弥前，各位觉得须弥会是怎样的国家？","date":"2022-05-01 04:56:44","description":"\n<p data-pid=\"fvPzsqdz\">本文基于前天我发布的一篇闲聊须弥的想法拓展而来，文字经过重新排版并补齐了配图，同时新增了大量新内容。文章涉及对以下话题的讨论：</p>\n<ol>\n<li data-pid=\"Zxhu03HM\">关于须弥文化原型的简单考据</li>\n<li data-pid=\"RuASLkxb\">草元素反应体系及由此引出的衍生讨论</li>\n<li data-pid=\"Z4qXmjPU\">有关须弥特殊种族「蕈兽」的信息</li>\n<li data-pid=\"7Mngo-X3\">草神与时间执政伊斯塔露的可能隐含联系</li>\n<li data-pid=\"OCRpuO_0\">须弥主线揭晓世界观重要真相的可能性</li>\n<li data-pid=\"H5Gp_0JV\">有关须弥卡牌游戏「七圣召唤」的信息</li>\n</ol>\n<p data-pid=\"wjncvXFQ\">本文包含部分未证实的泄露游戏情报，内容仅供参考，一切请以最终游戏实装内容为准（当然也不会等待很久了，预计须弥会在 7 月前后正式开放）。写这篇文章的主要目的还是希望能够抛砖引玉，引发各位原友对未来新地区的讨论，非常欢迎大家在评论区积极交流观点和看法。</p>\n<hr>\n<p data-pid=\"DgHXFUYY\">首先向大家推荐一个须弥势力前瞻分析视频<sup data-text=\"学阀垄断知识！？教令院与草神内斗？学者智者贤者晋升体系，前瞻须弥势力分布\" data-url=\"https://www.bilibili.com/video/BV1S44y1G77E\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\">[1]</sup>，篇幅不长，但应该是我看过的基于游戏内已出现的须弥线索统合讲解得最全面的视频了。这里也正好讲讲个人对须弥的一些简单看法和理解。</p>\n<p data-pid=\"GPCHzDT6\">虽然在很早以前就已经锁定须弥的原型是地处「西亚-南亚」这片宽泛地区的文明，但在须弥究竟是以哪个文明/国家/宗教共同体为主要原型这个问题上却始终有争议：</p>\n<p data-pid=\"yrQ4zyV5\">早先因受赛诺这一须弥代表角色形象的影响，让大部人认为须弥对应着古埃及；后来随着游戏中开始透露部分须弥地区专有名词，又将对主要原型考察的焦点转移至了古印度和中东地区；再后来「教令院」这一须弥核心机构的确立，令伊斯兰黄金时期的阿拉伯帝国成为须弥无可怀疑的重要原型之一，因教令院原型为「智慧宫」（Bayt al-Ḥikmah），为阿拉伯帝国第二王朝「阿拔斯王朝」时期由哈里发马蒙（Al-Ma'mun）在都城巴格达所设的综合学术机构<sup data-text=\"智慧之家 - 维基百科，自由的百科全书\" data-url=\"https://zh.wikipedia.org/wiki/%E6%99%BA%E6%85%A7%E4%B9%8B%E5%AE%B6\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"2\">[2]</sup>。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-6e84cca2104acdf71fcb03d806af2a53_720w.jpg?source=b1748391?rss\" data-caption=\"主线章节预告 PV 中登场的须弥使者赛诺形象带有非常显著的古埃及文明特征（胡狼造型头盔象征埃及神话中的死神阿努比斯），这构成了很多人对须弥的第一印象\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-6e84cca2104acdf71fcb03d806af2a53\" data-watermark-src=\"v2-508d75ffe5cc2d9a32c2757c59332ee4\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-f2c49879c2f10c14b72b62f214560fd8_720w.jpg?source=b1748391?rss\" data-caption=\"智慧宫研习包括数学、天文学、医学、化学、动物学及地理学在内的人文科学及自然科学，学者们广泛收集波斯、印度及希腊文献，积累了世界上的各种知识再加以扩展，是当时当之无愧的世界学术中心。著名的「代数之父」花拉子米就是智慧宫的学者\" data-size=\"normal\" data-rawwidth=\"1300\" data-rawheight=\"725\" data-watermark=\"original\" data-original-src=\"v2-f2c49879c2f10c14b72b62f214560fd8\" data-watermark-src=\"v2-d014176e3c34739b4538eea73cb2c4ef\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"0Osi2feM\">到如今，结合各种有关须弥的细节基本可以确认：须弥是以「古波斯」与「琐罗亚斯德教」（Zoroastrianism，说「祆教」或者「拜火教」大家应该更熟悉一点）文化为主要原型，历史上的阿拉伯帝国为次，再杂揉了一系列古埃及、古印度文化要素诞生的「缝合」文明。这个选择当然是非常明智的，因为一些众所周知的原因，在一款面向国际发行的文化娱乐产品中如若过度涉及对伊斯兰教国家与穆斯林元素的化用与讨论，很容易会产生高度风险，而选择波斯这一历史上极度辉煌、如今却不占主流的文化，显然可以在制造中东异域风情的同时又可以最大程度地规避这一问题<sup data-text=\"阿契美尼德帝国 - 维基百科，自由的百科全书\" data-url=\"https://zh.wikipedia.org/wiki/%E9%98%BF%E5%A5%91%E7%BE%8E%E5%B0%BC%E5%BE%B7%E5%B8%9D%E5%9B%BD\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"3\">[3]</sup><sup data-text=\"琐罗亚斯德教 - 维基百科，自由的百科全书\" data-url=\"https://zh.wikipedia.org/wiki/%E7%A5%86%E6%95%99\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"4\">[4]</sup><sup data-text=\"Faravahar - Wikipedia\" data-url=\"https://en.wikipedia.org/wiki/Faravahar\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"5\">[5]</sup>。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d99fb9a869c16038a9f1955ea30c69c2_720w.jpg?source=b1748391?rss\" data-caption=\"盛极一时的波斯帝国（Persian Empire），又称阿契美尼德帝国（Achaemenid Empire），琐罗亚斯德教为其国教\" data-size=\"normal\" data-rawwidth=\"725\" data-rawheight=\"400\" data-watermark=\"original\" data-original-src=\"v2-d99fb9a869c16038a9f1955ea30c69c2\" data-watermark-src=\"v2-fc4be143a42da9b15073b95e2bc8bd83\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-dddb7fcd4efc28a0a6bd52571a54482f_720w.jpg?source=b1748391?rss\" data-caption=\"上图为琐罗亚斯德教的主要象征符号「法拉瓦哈」（Faravahar），一般认为其描绘了守护天使弗拉瓦奇，也有学者认为该标志是拜火教中人类灵魂的样子，是人类灵魂进入末日审判后的新世界（Frashokereti）的状态。也许我们会在须弥地区看到以此为参考原型设计的符文\" data-size=\"small\" data-rawwidth=\"1920\" data-rawheight=\"1029\" data-watermark=\"original\" data-original-src=\"v2-dddb7fcd4efc28a0a6bd52571a54482f\" data-watermark-src=\"v2-c03d0808fac4d63f1fd6c5915427d31a\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"uZbJSYEh\">至于地理方面，目前完全确认须弥是由「蕈菌遍生幽邃的雨林」与「流金般炽热炫目的沙漠」这两种对比强烈的地貌共同组成的国度，甚至须弥主城都有可能是环绕巨树建立的「树上之城」。须弥的这种地貌特征完全区别于已实装的三个地区，对美术设计与画面技术实现都提出了全新要求，当然也让人对这一「雨林与沙漠之国」最终呈现的效果充满了很高的期待。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-f25307a28192257a5ba17ae833946b82_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1200\" data-rawheight=\"675\" data-watermark=\"original\" data-original-src=\"v2-f25307a28192257a5ba17ae833946b82\" data-watermark-src=\"v2-c8fde2a826f23a4e417a86baec1d7cb6\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-bf2dbad69b05034946d55234850f449d_720w.jpg?source=b1748391?rss\" data-caption=\"这里就借用尼尔的图来表达一下意思了\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-bf2dbad69b05034946d55234850f449d\" data-watermark-src=\"v2-9a071ffe6b970919c1a6f892112e41c6\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"vqpNHXct\">另外随 2.6 版本实装层岩巨渊中就出现了不少须弥元素，像是位于主矿区隐藏地区的古树与神秘任务道具「干枯的种子」（对应成就「生命之谷的居民」；已泄露的草系突破材料翡翠宝石的描述信息中也提及了「生命」一词，当然这个宝石的信息真伪存疑）以及位于荧光狭道处的那朵有智慧且能通人言的大蘑菇「赞玛兰」都是重要铺垫。</p>\n<p><img src=\"https://pica.zhimg.com/v2-ca08e0d458ea97d46523e04155f1dc59_720w.jpg?source=b1748391?rss\" data-caption=\"地底巨蕈「赞玛兰」（Xamaran），其名称意义不明，姑且只知道其取自某位须弥老友\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-ca08e0d458ea97d46523e04155f1dc59\" data-watermark-src=\"v2-24210cfc7e147ee8d4cb79ce1a7f626b\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-beb5a201f88bb1a976b86842a55fd854_720w.jpg?source=b1748391?rss\" data-caption=\"位于地下矿区隐藏区域中的须弥古树。点亮位于该地区的三座元素方碑后可取得特殊任务道具「干枯的种子」，三座方碑正好对应旅行者已走过的三国象征元素（风、岩、雷），不排除有更深的剧情隐喻意味；另外此地区拥有独特 BGM，风格与矿区大不相同，颇有尼尔配乐的感觉\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-beb5a201f88bb1a976b86842a55fd854\" data-watermark-src=\"v2-2c06c52eb61f178ba2ddf4f98eb6c79e\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-18c2eff1a299fd726dc13446b5a28364_720w.jpg?source=b1748391?rss\" data-caption=\"草系突破材料「生长碧翡」，各元素突破材料的描述都是针对对应神明核心人格属性的概括\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"654\" data-watermark=\"original\" data-original-src=\"v2-18c2eff1a299fd726dc13446b5a28364\" data-watermark-src=\"v2-2ae2f195a47de4bc80bb97c7d5a1ba1b\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"jJ1nQBwW\">甚至在极深地底判罚之钉处旅行者挑战的那只遗迹巨蛇都包含重要的文化背景暗示，因为它的名字「七嗣之虫」实际上源于波斯著名史诗《列王纪》中的典故「哈夫塔维德的蠕虫」（Haftvād the Worm；传说中一条可以无穷无尽的产出丝绸的蠕虫，城主哈夫塔维德与他的七个儿子凭借该虫富甲一方并威胁到有「万王之王」之称的波斯帝国萨珊王朝建立者阿达希尔一世（Ardashir i）的统治，最终被王皆数斩杀。这部分具体可参考齐漱溟老师的考据文章<sup data-text=\"【原神考据】实锤！“树的比喻”与坎瑞亚的覆灭之谜（下）\" data-url=\"https://www.bilibili.com/read/cv16266591\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"6\">[6]</sup><sup data-text=\"Haftvād - Wikipedia\" data-url=\"https://en.wikipedia.org/wiki/Haftv%C4%81d\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"7\">[7]</sup>）。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-0eab36d3713376ae11ddb7899de383b0_720w.jpg?source=b1748391?rss\" data-caption=\"比起中文版让人感觉有点云里雾里的名称「七嗣之虫」，英文版中的 BOSS 名「Haftvād the Worm」更直接地反映了文化背景上的原型\" data-size=\"normal\" data-rawwidth=\"1067\" data-rawheight=\"540\" data-watermark=\"original\" data-original-src=\"v2-0eab36d3713376ae11ddb7899de383b0\" data-watermark-src=\"v2-3a69424a3ffb175994953156c7775471\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-3f33c4a41bb2596951120b292677670d_720w.jpg?source=b1748391?rss\" data-caption=\"15 世纪《列王纪》（Shahnameh）手抄本中描绘阿达希尔一世（Ardashir i）杀死哈夫塔维德（Hafvād）蠕虫的插图\" data-size=\"small\" data-rawwidth=\"1347\" data-rawheight=\"1947\" data-watermark=\"original\" data-original-src=\"v2-3f33c4a41bb2596951120b292677670d\" data-watermark-src=\"v2-0adf2af6894b6f33b787a7d68e732a81\" data-private-watermark-src=\"\" data-tags=\"porn\"></p>\n<p data-pid=\"vAWt_AIN\">对了，差点忘了讨论早已公开的须弥主线标题「虚空劫灰往世书」，这个标题与波斯文化的关联性就弱了不少，而是同须弥的国度名一样带有浓厚的古印度与印度教色彩。标题中出现的「往世书」其实是一个专有名词，为一类古印度文献的总称，梵语写作「purāṇa」，意为「古代的」或「古老的」。往世书通常为问答式诗歌体，表现为将不同人物联系起来的一系列故事，其覆盖的话题非常广泛，包含故事、哲学和宗教，大多讲述宇宙和人类的产生、帝王和仙人的世系等内容<sup data-text=\"往世书 - 维基百科，自由的百科全书\" data-url=\"https://zh.wikipedia.org/wiki/%E5%BE%80%E4%B8%96%E4%B9%A6\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"8\">[8]</sup>。</p>\n<p><img src=\"https://pica.zhimg.com/v2-30c89427b439303f0ed6c39023f71279_720w.jpg?source=b1748391?rss\" data-caption=\"克什米尔地区，18 世纪晚期纸本往世书样本\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1218\" data-watermark=\"original\" data-original-src=\"v2-30c89427b439303f0ed6c39023f71279\" data-watermark-src=\"v2-9cc3557f8d83aae14448ac83e3145a81\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"KCIxGr43\">这里想小小吐槽一下，个人感觉须弥实装后名词名称这块恐怕会造成剧情理解和讨论上的一些困难，毕竟就目前已出现的一些词语来看已经是相当的拗口了，在记忆难度上哪怕比起稻妻地区最长专有名词「御见鸣神主尊大御所大人」也是要高得多的（拿教令院职称举例：「帝力耶悉」「陀裟多」「珂般荼」，请问大家看完能记住吗2333）。</p>\n<p data-pid=\"257vQowf\">这种「困难」的感觉其实与文化上的隔阂关系比较大，毕竟对绝大部分国人玩家而言，对与我们本国文化相近的（以及作为二次元文化发源地的）日本文化的了解程度与「亲切感」肯定是会远远高于「不受关注的」西亚与南亚地区文化的，个人也是如此。相信等须弥正式实装，对其剧情的挖掘和考据会是一件富有挑战且充满趣味的事，正所谓以玩促学，不也挺好的嘛！</p>\n<hr>\n<p data-pid=\"Y-tqhTJ2\">随着须弥即将实装，七元素体系中让大家等待已久的最后一块拼图 —— 草系也将很快与我们见面。自开服以来对对草系反应的猜测就一直此起彼伏，因为草系角色一鸽再鸽，不少玩家开始怀疑制作组到底如何合理地将草系纳入到现有元素体系中。到目前的 2.6 游戏版本网上又开始流传所谓的内测草系反应，个人以为这个版本的说法可信度应该是很高的，毕竟作为信息源的那位「舅舅党」的确战绩斐然，像之前的 1.3 版本刻晴复刻、1.4 版本公子再度复刻还有雷神建模（当初一度被嗤笑为「村姑」）等，这位可是全部都押中了的。</p>\n<p data-pid=\"RXf2m9Wx\">按目前的网传说法，草元素反应仅与火系、雷系和水系反应，而不与冰系、风系和岩系反应。除了开服即有的与火元素产生的剧变反应「燃烧」（Burning）外，草元素与雷元素接触将触发「激化」（Intensified）反应，掉落元素微粒并同时增加雷与草元素易伤；与水元素接触时则将造成「蔓生」（Overgrown）反应，掉落特殊蘑菇孢子，孢子遇水造成 AOE 伤害。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-ea68ecc7cf707c6a2cc002bdbfb299f1_720w.jpg?source=b1748391?rss\" data-caption=\"水元素是坐稳元素反应之王的宝座了\" data-size=\"normal\" data-rawwidth=\"1160\" data-rawheight=\"1110\" data-watermark=\"original\" data-original-src=\"v2-ea68ecc7cf707c6a2cc002bdbfb299f1\" data-watermark-src=\"v2-bfe8c8844e8168ba806b5dd837788b63\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"1sCGmXz3\">姑且不讨论反应细节（不过还是明显看出草元素体系有与元素精通高度关联的倾向）以及考虑对现有元素体系的影响，仅从「反应是否在逻辑上合理」这点发散来看，目前网传的草反应的确有着一定的道理：</p>\n<p data-pid=\"Rh1gpM2V\">草雷反应在灵感上应该是基于自然界「自然固氮」（Natural nitrogen fixation）作用中的「气电固氮」，即大气中游离态的氮单质（氮气）在主要表现为闪电的高能放电现象中转化为含氮化合物（如硝酸盐、氨、二氧化氮）的过程，而被固定的氮起到了天然「氮肥」的作用，有利于作物生长<sup data-text=\"Nitrogen fixation - Wikipedia\" data-url=\"https://en.wikipedia.org/wiki/Nitrogen_fixation\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"9\">[9]</sup>。</p>\n<p><img src=\"https://pica.zhimg.com/v2-890ab2c2421b7d484a516156f8459331_720w.jpg?source=b1748391?rss\" data-caption=\"闪电造成的自然固氮效果有利于作物茁壮生长，带来更好的收成。古代日本观察到这一现象，将闪电喻为稻谷的「妻子」\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"900\" data-watermark=\"original\" data-original-src=\"v2-890ab2c2421b7d484a516156f8459331\" data-watermark-src=\"v2-31a9b4b64d2fcadde8654f78aafb9fca\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Xo55X2uG\">实际上，日语中的「稻妻」（いなずま，Inazuma）一词就与此有关，古代日本人发现每当雷雨交加后稻田的长势就会变好，不理解背后科学原理的人们以为这是闪电打到稻子上与稻子结婚了，才有了饱满的稻穗，久而久之便赋予了闪电「稻谷的妻子」这样的别称了<sup data-text=\"いなづま - Wikipedia\" data-url=\"https://ja.wikipedia.org/wiki/%E9%9B%B7#%E7%A8%B2%E5%A6%BB\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"10\">[10]</sup>。因此，草与雷元素接触发生「激化」是非常合理的设定。</p>\n<p data-pid=\"BxsBXAbU\">草水反应就非常容易理解了，因为「水乃生命之源」。反应产生蘑菇孢子这种衍生物则非常地具有须弥特色，毕竟蘑菇与须弥的相关频率实在是太高了：</p>\n<p data-pid=\"kFpkeS96\">好兄弟立本就曾告诉我们「须弥人除了蘑菇，其他什么都喜欢」（因为须弥蘑菇实在是随处可见、太过泛滥），稻妻离岛瓦希德经营的须弥特产店「葱茏之愿」中摆满了各式各样的不远万里从须弥进口的菌菇，作为须弥最重要的大宗出口商品，璃月和稻妻都已建立或正在建立专门的商贸通道（踏鞴物语结尾就提到了范卫兵管理稻妻与须弥之间蘑菇贸易的远国御用）。可以说，「蘑菇」就是须弥的一种标志或代名词。</p>\n<p data-pid=\"PunmtaFq\">须弥甚至还有着由蕈菌进化而来、被称为「蕈兽」的特殊生物，在巨渊中我们也终于实际见识到了这个族群的成员「浮游水蕈兽」，它们算得上是目前原魔角色可爱榜 No.1 了<sup data-text=\"Twitter 图源 @yolanda315732\" data-url=\"https://twitter.com/yolanda315732/status/1510997475745697794\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"11\">[11]</sup>。</p>\n<p><img src=\"https://pica.zhimg.com/v2-f3d891f3e801fbcfa9fd5ec38346c703_720w.jpg?source=b1748391?rss\" data-caption=\"浮游水蕈兽的拟人化同人图。几乎没有战力，但是非常可爱！\" data-size=\"normal\" data-rawwidth=\"1200\" data-rawheight=\"675\" data-watermark=\"original\" data-original-src=\"v2-f3d891f3e801fbcfa9fd5ec38346c703\" data-watermark-src=\"v2-0cbd362eaaec6f3986c6004a4c1ec5d1\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"oDGCMtwH\">但是切不可被这些小家伙的外表欺骗而对整个族群掉以轻心，在雷深渊法师的怪物描述中提到，过去须弥曾有一位名为阿尔瓦 · 尼古拉的学者依据对雷深渊法师使用的雷元素模型的研究提出了名为「尼古拉线圈」的理论武器，但还未来得及实践，其人就与武器研究资料一起被泛滥的蕈兽吃掉了。</p>\n<p data-pid=\"LJoTTMmF\">目前我们在巨渊下遭遇的蕈兽们应该只是这个族群中最低级、最无害的成员，蕈兽中恐怕也有着进化后诞生出的可怕猛兽，会在未来须弥的冒险中与我们遭遇并展开激战吧。</p>\n<hr>\n<p data-pid=\"C5RuqTYI\">既然提到了葱茏之愿，就不得不聊聊店老板瓦希德向旅行者大力推销的须弥特产肥料 ——「丰沃之惠」。</p>\n<p data-pid=\"54RcRlrY\">根据他的描述，「丰沃之惠」是小吉祥草王力量的恩惠，须弥人都用其耕种，哪怕是再贫瘠的土地，只要加了一点点这种肥料都会变得肥沃，堪称须弥「金坷垃」，作用原理大概是通过元素力让土地变得有活力。而「丰沃之惠」的英文名为「Anihitian Blessing」，其中「Anihitian」一词原型出自古波斯的生育、丰产与智慧女神「安娜塔希」（Anahita），这正好是对前文中「须弥主要原型为古波斯」看法的一种印证<sup data-text=\"Anahita - Wikipedia\" data-url=\"https://en.wikipedia.org/wiki/Anahita\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"12\">[12]</sup>。</p>\n<p data-pid=\"6wW_Chol\">值得注意的是，文化与宗教意义上，波斯人的女神「安娜塔希」（Anahita）与古代美索不达米亚人崇拜的女神「伊什塔尔」（Ishtar，苏美尔人称之为「伊南娜」）存在着说不清道不明的复杂联系，正如其他波斯神明一样，历史上安娜塔希对伊什塔尔有着一个吸收神性元素并最终合并的过程。</p>\n<p data-pid=\"DoWBXuDQ\"><b>PS：</b>学界有理论认为波斯王权起源于美索不达米亚平原，波斯诸神则是巴比伦神灵的自然延伸。一个典型例子是，琐罗亚斯德教中崇拜的「光明与智慧之主」阿胡拉 · 玛兹达（Ahura Mazda）被认为是苏美尔神话中巴比伦的守护神、主神和巴比伦尼亚的国神 ——「太阳牛犊」马尔杜克（Merodach）的另一种表现<sup data-text=\"  Ahura Mazda - Wikipedia\" data-url=\"https://en.wikipedia.org/wiki/Ahura_Mazda\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"13\">[13]</sup>。</p>\n<p><img src=\"https://pica.zhimg.com/v2-df307fa3f093742edb434ba959273f1c_720w.jpg?source=b1748391?rss\" data-caption=\"时间约在 4 世纪至 6 世纪的萨珊王朝银制镀金容器，其上描绘的女神形象推测是安娜希塔\" data-size=\"small\" data-rawwidth=\"800\" data-rawheight=\"1067\" data-watermark=\"original\" data-original-src=\"v2-df307fa3f093742edb434ba959273f1c\" data-watermark-src=\"v2-f6cd6b8f0ee0fc8ea0fbd5213d24b315\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"rNq5pgkh\">考虑到《原神》世界观中最重要的暗线角色「时间之执政」伊斯塔露原型就是伊什塔尔，并且前代草神与雷神（雷电真）是唯二在天理对坎瑞亚的讨伐战争中丧生的魔神，因此可以大胆预测，须弥草神剧情估计与游戏大主线联系极深，恐怕会揭晓不少与深层世界观相关的内容，甚至可能对之前的故事理解带来颠覆性的改变。</p>\n<p data-pid=\"n0MLxjIb\">草神之死是否有所隐情？是否是因为知晓了《日月前事》中有关王座大战的禁忌知识而遭天理借机灭口？草神与伊斯塔露有着何种关系？现任草神与前任草神又是什么关系？是否就和雷史莱姆暗示了雷神双生一样，草史莱姆的形态是在暗示：如今表面上统治须弥的小吉祥草王只是草史莱姆头顶的那朵起伪装作用的花苞，真正的草神正在某处蛰伏，等待着复苏的时刻呢？</p>\n<p data-pid=\"6otrliX7\">须弥作为象征「智慧」的国度，同时也是旅行者漫长旅程的中点，我想也是时候为这趟旅途的意义增添一些富有戏剧性的「变数」了。</p>\n<p><img src=\"https://pica.zhimg.com/v2-dd0e529dd14d9018340f8de8d3b9cad9_720w.jpg?source=b1748391?rss\" data-caption=\"经常被玩家调侃成「扛着音箱」的草史莱姆，它的形态是否暗示了草神的秘密？\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"387\" data-watermark=\"original\" data-original-src=\"v2-dd0e529dd14d9018340f8de8d3b9cad9\" data-watermark-src=\"v2-846521a3a4c97dca0adb7da1363b5aa9\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"vYKDLH8v\"><b>PS2：</b>须弥剧情可能对世界真相作深度揭晓的这一猜想，一定程度上受到了须弥主线标题「虚空劫灰往世书」的支持。上文中已经对标题中出现的「往世书」一词具有的文化含义进行了介绍，而按照传统说法，往世书需要叙述五类主题，即所谓的「五相」<sup data-text=\"往世书 - 维基百科，自由的百科全书\" data-url=\"https://zh.wikipedia.org/wiki/%E5%BE%80%E4%B8%96%E4%B9%A6\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"8\">[8]</sup>：</p>\n<ol>\n<li data-pid=\"-2CLXvr1\">萨尔迦（Sarga），即宇宙的创造；</li>\n<li data-pid=\"o7SVD2cx\">泼罗提萨尔迦（Pratisarga），即宇宙毁灭后的再创造；</li>\n<li data-pid=\"NCXUYM1W\">瓦姆舍（Vamśa），即天神和仙人的系谱；</li>\n<li data-pid=\"ouO1mfiE\">曼宛陀罗（Manvañtara），即人类的产生和对各摩奴期的叙述；</li>\n<li data-pid=\"ZVGgov5-\">汪沙奴遮哩档（Vamśānucaritam），即日种王朝和月种王朝的世系。</li>\n</ol>\n<p data-pid=\"ktWt-rVN\">看完五相所指请问大家联想到了什么？没错，假若与游戏中目前已出现的记载提瓦特上古历史的禁书《日月前事》中描写的内容结合起来<sup data-text=\"白夜国蛇神记事注疏，见【注11】\" data-url=\"https://www.zhihu.com/question/509683549/answer/2317670654\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"14\">[14]</sup>，往世书的记述体裁无疑可以完美对应上古提瓦特历史的各阶段：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-890879d1e099d8484f4044a096008caf_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-890879d1e099d8484f4044a096008caf\" data-watermark-src=\"v2-57e549068c84276155be75aae1d0bc42\" data-private-watermark-src=\"\"></p>\n<ol>\n<li data-pid=\"qWgMECXw\">最初由七龙王统治的提瓦特洪荒时代 —— 萨尔迦；</li>\n<li data-pid=\"VowjkK2k\">「第一王座」法涅斯降临，击败七龙王，尔后创造新世界 —— 泼罗提萨尔迦；</li>\n<li data-pid=\"29MmcdaW\">描绘法涅斯分出「四影」，帮助管理世界 —— 瓦姆舍；</li>\n<li data-pid=\"iDtmAt0b\">法涅斯造人并赐予人类身处乐园的幸福，人类缔造出繁荣的提瓦特统一文明 —— 曼宛陀罗 &amp; 汪沙奴遮哩档。</li>\n</ol>\n<p data-pid=\"TQNj3fv7\">有理由相信，须弥篇故事将成为旅行者理解世界真相、寻找击败天理之法的旅途中一个至关重要的转折点。</p>\n<hr>\n<p data-pid=\"IH7Uo6eU\">最后简单聊一聊可能要随须弥开放实装的新小游戏「七圣召唤」。</p>\n<p data-pid=\"9GCfrsVI\">刚结束不久的光华容彩祭活动中其实就提到了这种须弥游戏。荒泷派任务中提到，一斗和他的小伙伴们搞来了一套叫做「七圣召唤」的卡牌对战游戏，一下就玩上了瘾，沉迷其中不可自拔。但大家知道，这套游戏其实是咱们的老朋友立本传播到稻妻的吗？</p>\n<p data-pid=\"wkhMmPxO\">上次「百货奇货」活动中立本在告诉旅行者自己近来的商旅经历时提到，他之前在须弥接受了须弥学者的委托，将卡牌游戏「七圣召唤」的原型带给稻妻的八重堂，而如今一斗他们玩的就是由获得授权的八重堂制作售卖的卡牌。</p>\n<p><img src=\"https://pica.zhimg.com/v2-cf9dd6d643f9868364bf65f31958d455_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"178\" data-watermark=\"original\" data-original-src=\"v2-cf9dd6d643f9868364bf65f31958d455\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"WDtMrSOt\">早前论坛其实已经透露了一些有关「七圣召唤」的信息，这种游戏起源于古代须弥庄重而严肃的决斗之仪（我懂了，古埃及黑暗游戏对吧？原来是游戏王），玩家使用丰富的卡牌组合与特殊的元素骰子进行游玩，游戏中的各种行动都需要花费骰子投出的不同元素属性点数，也可能提供能够当作任意元素的「万能元素点」。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-da61d65854dbadc0f67586e85edf49ae_720w.jpg?source=b1748391?rss\" data-caption=\"「元素骰子」大概率就是桌游中常使用的多面骰子\" data-size=\"small\" data-rawwidth=\"800\" data-rawheight=\"800\" data-watermark=\"original\" data-original-src=\"v2-da61d65854dbadc0f67586e85edf49ae\" data-watermark-src=\"v2-0dd8f56dd46d48e99e99f2e926edacf1\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"DYh16GxD\">不出意外的话，到须弥地区正式实装时，「七圣召唤」将作为继「风行迷踪」、「机关棋谭」后的新品种提瓦特桌面游戏与我们见面吧。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/ai-luo-38?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">呆罗</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/492460975/answer/2463415835?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">15 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/514414105?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">世界上到底有没有异世界或者类似异世界的空间？</a><br><a href=\"http://www.zhihu.com/question/510508912?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">既然神之心是权柄不是力量来源，那么为什么非要收集神之心来对抗天理呢？</a><br>\n","link":"http://www.zhihu.com/question/492460975/answer/2463415835?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"国产独立游戏《大洪水的故事》4 月 28 日上线 Steam，你的游戏体验如何？","date":"2022-05-01 03:53:05","description":"\n<p data-pid=\"GDRgRnPi\">经历了两年陆陆续续的制作和修改，《大洪水的故事》这款游戏的玩法和设定基本上成型，4月29日将开启为期三个月左右的EA阶段。</p>\n<p><img src=\"https://pica.zhimg.com/v2-98324f246955cbb58d18dd0020433039_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1204\" data-rawheight=\"802\" data-watermark=\"watermark\" data-original-src=\"v2-98324f246955cbb58d18dd0020433039\" data-watermark-src=\"v2-7983d4e2d80d3d6564085cfff58f8338\" data-private-watermark-src=\"v2-8f6c69d922ff600464d5e233045aa793\"></p>\n<p data-pid=\"aiJ2dcZJ\">这两年时间里，我一直在思考，《大洪水的故事》，到底是一款什么样的游戏？</p>\n<p data-pid=\"UYJ3jhr8\">之前开玩笑说，就做个”末世捡垃圾模拟器”吧</p>\n<p data-pid=\"Nni6uxBN\">也有朋友建议我，干脆做一个细节更完善的互动式人格测验</p>\n<p data-pid=\"TOucF8tm\">在不止一次的自我推翻和否定后，在现在的EA版本中，我想“于绝望处找寻希望”，是《大洪水的故事》想要传递给玩家的一种情感。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-df47c8fccfae83807d2e640edd76bf9a_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1204\" data-rawheight=\"802\" data-watermark=\"watermark\" data-original-src=\"v2-df47c8fccfae83807d2e640edd76bf9a\" data-watermark-src=\"v2-e2c443c789bb76791cb60a537f3c9c11\" data-private-watermark-src=\"v2-db8f83aac9caa13e633a811dc1c63625\"></p>\n<p data-pid=\"XQgaPgC7\">虽然这是一款单机游戏，我依然在游戏中设计了玩家与世界连接的信息机制，每个玩家的留言都有可能出现在其他玩家的游戏世界里。</p>\n<p data-pid=\"fAsyhSKi\">我希望通过这个机制，让末世中的玩家不再孤独前行。</p>\n<p><img src=\"https://pica.zhimg.com/v2-824cedd0a4e8168227585b860c9a6ad7_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1204\" data-rawheight=\"802\" data-watermark=\"watermark\" data-original-src=\"v2-824cedd0a4e8168227585b860c9a6ad7\" data-watermark-src=\"v2-9c3c7f48b5dae3720993fba95d170f1a\" data-private-watermark-src=\"v2-1c24d92b31b3c10c05debbeda7a9d2a7\"></p>\n<p data-pid=\"QEweVrF3\">在后续正式版的更新计划中，有以下工作已经被列入日程。</p>\n<p data-pid=\"-teH2cut\">1. 完善结局的人格心理学测试环节，关于心理学测试这部分，会采用更加简单易懂的语言描述，心理学参数构成将会基于游戏中的行为而非结局——简单来讲，让心理测试变得更准，也更有实验意义。</p>\n<p data-pid=\"CaTrKYI_\">2. 增加一部分与世界环境的互动，漫长旅程中的枯燥与不满，虽然这是试验的一部分，但我会想想优化的方式——大家可以多给我提一些旅程中的互动建议，如果采纳，你的ID将会出现在正式版的感谢名单中</p>\n<p data-pid=\"f107Io_D\">3. 为多周目创造更多的随机事件，让玩家每一次体验，都能感受到更多的不同，甚至这些随机事件，会影响到你的选择，从而继续提升内容的丰富度。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-30851fddad2684ed4419cc02c833519d_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1204\" data-rawheight=\"802\" data-watermark=\"watermark\" data-original-src=\"v2-30851fddad2684ed4419cc02c833519d\" data-watermark-src=\"v2-7d2d3108f44eac5e5c4c463aba39a2f3\" data-private-watermark-src=\"v2-aee4821310cfc03179f47dc08ba2640f\"></p>\n<p data-pid=\"nJOB0lOU\">我坚信一款有意义的作品，需要不断打磨和反复修改的，他的完成，离不开所有玩家的支持，建议，共创，和帮助。所以如果你觉得EA版本体验已足，欢迎随时退款，很感谢各位对一款艺术试验产品的包容与支持。</p>\n<p data-pid=\"Jc-RPLmu\">作为一款基于开放性故事构架的互动冒险小说，我非常希望你能在社交媒体，或者在游戏社区里分享你的故事，体验，旅程，心路。这会是我更新游戏的动力，也会是帮助《大洪水的故事》不断变好的必要过程</p>\n<p data-pid=\"JPUjYCC9\">谢谢你们，玩我的游戏</p>\n<p><img src=\"https://pic2.zhimg.com/v2-dac28830b0b47fbf1db2d8ec0daae1a5_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1204\" data-rawheight=\"802\" data-watermark=\"watermark\" data-original-src=\"v2-dac28830b0b47fbf1db2d8ec0daae1a5\" data-watermark-src=\"v2-a2b0139a1b17a971f48c84535c6e67de\" data-private-watermark-src=\"v2-1e8500ab46644b9097ee40f5eb990b28\"></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/luke-60-85?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Luke</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/530616488/answer/2463090738?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">13 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/504335269?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">国产独立游戏《大多数》上架 Steam，对此你有哪些期待？</a><br><a href=\"http://www.zhihu.com/question/505097147?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">Steam 十月最热门的单机游戏有哪些？</a><br>\n","link":"http://www.zhihu.com/question/530616488/answer/2463090738?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012 年的、由 Node.j......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\n    return new Date(date.toLocaleString('en-US', { timeZone }))\n}\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        timeZone\n    })\n    return {\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\n        convert (date) {\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\n        }\n    }\n}\n\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\n    return converter.convert(new Date(secDate), tzName) - secDate\n}\n\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\ncmn-Hans-SG = 中文普通话-简体-新加坡\ncmn-Hant-TW = 中文普通话-繁体-台湾\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\ncmn = 中文普通话\n\nzh-Hans = 中文-简体\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\n}\n\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long'\n}\nconst now = new Date()\n\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\n\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\n\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\n\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\n\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\n\nzhCNFormatter.format(now) // 2021年10月13日星期三\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\n\njaFormatter.format(now) // 2021年10月13日水曜日\njaAltFormatter.format(now) // 令和3年10月13日水曜日\n\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\n// {locale: 'zh-CN', calendar: 'gregory', …}\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\n     // 基于一个固定日期计算，这里选择 1970.1.1\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\n    const base = new Date(1970, 0, 1).getTime()\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\n    return Array.from({ length: 7 }, (_, day) =&gt; (\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\n    ))\n}\n\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n}).formatToParts(new Date())\n// [\n//     { type: 'year', value: '2021' },\n//     { type: 'literal', value: '年' },\n//     { type: 'month', value: '10' },\n//     { type: 'literal', value: '月' },\n//     { type: 'day', value: '13' },\n//     { type: 'literal', value: '日' },\n//     { type: 'weekday', value: '星期三' },\n//     { type: 'literal', value: ' ' },\n//     { type: 'dayPeriod', value: '上午' },\n//     { type: 'hour', value: '1' },\n//     { type: 'literal', value: ':' },\n//     { type: 'minute', value: '00' },\n//     { type: 'literal', value: ':' },\n//     { type: 'second', value: '00' }\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\n}\n\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\n  timeZone: 'America/Los_Angeles',\n  year: 1995,\n  month: 12,\n  day: 7,\n  hour: 3,\n  minute: 24,\n  second: 30,\n  millisecond: 0,\n  microsecond: 3,\n  nanosecond: 500,\n  calendar: 'iso8601'\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<p>2020 年 11 月 11 日，苹果在本年度最后一次 Apple Events 上发布了全新的 ARM 芯片 M1、以及三款搭载了 M1 的 Mac：MacBook Air、MacBook Pro 13‘ 和 Mac Mini。在 WWDC 2020 库克宣布 Apple Silicon 后，这次 Apple Events 再一次掀起了热潮，不少 KOL 都把 M1 奉若神明，不少人也不以为然。本文通过 8 个问题来简单聊聊 M1 和 ARM Mac。M1 芯片的性能如何？本文写就时，搭载 M1 的 Mac 尚未开始发货，我们能看到的只有 GeekBench 上流出的跑分。所以，让我们先从跑分开始看起？...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote>\n<p>周六不放假休息，还在这加班搞 CTF？</p>\n</blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/86535/11/24318/75037/622032a8E4f94d4ae/89703ccc122cf4e0.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"从 Google Analytics 的统计代码说起 —— 谈谈 script 标签的 async 和 defer 属性","date":"2020-10-13 09:25:00","description":"\n<p>之前我在「天下武功，唯快不破 —— 我是这样优化博客的」一文中提到「对于大部分浏览器来说，确保 JS 异步加载和执行的做法其实是在操作 DOM 动态插入 &lt;script async&gt;」，但是并没有给出详细原因。这一次我以 Google Analytics 的统计代码为引子，详细讲讲 &lt;script&gt; 的 async 和 defer 属性、以及它们背后的故事。拆开 Google Analytic 的统计代码现在 Google 推出了 Google Tag Manager，通过......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/80291/2/16552/19311/622032b3Eb300c2aa/66748fc8124a01c5.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/script-async-defer/\">https://blog.skk.moe/post/script-async-defer/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/script-async-defer/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将 […]","link":"https://flyhigher.top/develop/2160.html"}]