[{"title":"家的风格 | 从法压壶到意式咖啡机，一步步搭起家中咖啡角","date":"2022-04-10 08:00:00","description":"编者注：当你将客人们请进自己的屋子时，你想让他们看看你是怎样的人。通常而言，将你的一切告诉他们的不是你的长沙发；而是你奇怪的乡村挤奶凳，它就放在一张复古风格的人物画下面，画上是一个或许开心或许喝醉了的 ...<a href=\"https://sspai.com/post/72446\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72446"},{"title":"为什么括号又叫括弧？","date":"2022-04-10 06:36:30","description":"\n<p data-pid=\"xw9l0rts\">在研究直角引号（鉤括弧）<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\" data-text=\"中文的直角引号 「」、『』 源自哪里？\" data-url=\"https://www.zhihu.com/question/19867627/answer/2420839332\">[1]</sup>的过程中，了解了「括弧」名称的演变，在这个问题里面写出来吧。</p>\n<h3>最早的中文翻译就是「括弧」，但后来「括号」成为了主流。</h3>\n<p data-pid=\"F0PDAJgF\">在日本维基百科可以查到这样一段内容：</p>\n<blockquote data-pid=\"nIOzXrb7\">他方、清代末期の中国では、スコットランド国教会の宣教師アレクサンダー・ワイリー（英語版）（1815-1887年）が、19世紀後期の初めから半ば（1847-1877年）まで『幾何原本』後編9巻（1856年）など数学書の翻訳に取り組んでいたが、その際に記号と共に「括弧」という語を用いた。日本にはこれが他書を介して伝わり、『改正増補 和英語林集成』（1886年/明治19年）や『工学字彙』（1894年/明治27年）に収録されることで一般化していった。<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"2\" data-text=\"括弧，维基百科\" data-url=\"https://ja.wikipedia.org/wiki/%E6%8B%AC%E5%BC%A7#cite_note-kb%E6%97%A5%E5%9B%BD%E8%BE%9E-5\">[2]</sup>\n</blockquote>\n<p data-pid=\"ke_cWrAV\">这里说伟烈亚力在中文翻译版《几何原本》后编九卷（1856年）里面，有使用「括弧」这个词汇。但事实上我用了两天时间分别采用肉眼和OCR识别的方式，都没能在里面找到「括弧」这个词。但是在这本书里将曲线称作「弧线」的情况非常多。</p>\n<p><br></p>\n<p data-pid=\"v2YKn7AJ\">1859年伟烈亚力与李善兰合译的《代微积拾集》<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"3\" data-text=\"《代微积拾集》，哈佛图书馆\" data-url=\"https://iiif.lib.harvard.edu/manifests/view/drs:430970820$4i\">[3]</sup>，是我能找到「括弧」这个词最早的出处。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-041fbf61cbc78432c396a32301ef7f4a_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1486\" data-rawheight=\"986\" data-size=\"normal\" data-caption=\"1859年，伟烈亚力/李善兰，《代微積拾級》\" data-watermark=\"watermark\" data-original-src=\"v2-041fbf61cbc78432c396a32301ef7f4a\" data-watermark-src=\"v2-56afe11005f37736a92d26806415cce9\" data-private-watermark-src=\"v2-187d6591214100c059a89a615b218cf8\"></p>\n<p><br></p>\n<p data-pid=\"tXNYJWfG\">1906年，朱文熊在日本出版的《江苏新字母》中，把括号称为「括弓」。这是一个介绍汉字拼音化方案的书籍。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-ba5d3baea8ca1282e1a6fb7cf490be61_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1264\" data-rawheight=\"992\" data-size=\"normal\" data-caption=\"1906年，朱文熊，《江苏新字母》\" data-watermark=\"watermark\" data-original-src=\"v2-ba5d3baea8ca1282e1a6fb7cf490be61\" data-watermark-src=\"v2-d0bbac177c91dc0f326a4b501fea6b7e\" data-private-watermark-src=\"v2-29ad762f13697b5a140f97ae27ddff2d\"></p>\n<p><br></p>\n<p data-pid=\"WWduYuwu\">1915年，胡适在《藏暉劄記》里面记录了为《科学》杂志所作文章《论句读及文字符号》的部分内容，其中将括号简称为「括」。当然，这里面大部分符号都写为略称，比如「引号、诧号、线号、不尽号」分别被写为「引、诧、线、不尽」。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-39de925f0d865640abf7f26bd1e2f882_720w.jpg?source=b1748391?rss\" data-rawwidth=\"572\" data-rawheight=\"456\" data-size=\"normal\" data-caption=\"1915年，胡适，《藏暉劄記》\" data-watermark=\"watermark\" data-original-src=\"v2-39de925f0d865640abf7f26bd1e2f882\" data-watermark-src=\"v2-f1c09c75e61a07676accc8a3a07b450a\" data-private-watermark-src=\"v2-81d971c347a3b5de0adae0edc7db9a80\"></p>\n<p><br></p>\n<p data-pid=\"4L4DiBo3\">1916年，《科学》第二卷第一期中，胡适编写的《论句读及文字符号》<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"4\" data-text=\"《论句读及标点符号》，广州数字图书馆\" data-url=\"https://sso.gzlib.org.cn/interlibSSO/goto/231/++9bmajrx9bnl/search/detail/61bc6afc9fc442ba6ba45d479c30a9cd/7/624b408af74f7f773f9d6fa1\">[4]</sup>一文，称之为「括号」。</p>\n<p><img src=\"https://pica.zhimg.com/v2-04c44f04cdfe040c531161a31aeeb4cd_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1046\" data-rawheight=\"234\" data-size=\"normal\" data-caption=\"1916年，胡适，《论句读及文字符号》\" data-watermark=\"watermark\" data-original-src=\"v2-04c44f04cdfe040c531161a31aeeb4cd\" data-watermark-src=\"v2-2376176b82ddb6f0cd7c289583fb837c\" data-private-watermark-src=\"v2-443c1087a9f557b0b64ba2f8a34d47fc\"></p>\n<p><br></p>\n<p data-pid=\"NBaLuf6x\">1919年，马裕藻、周作人、朱希祖、刘复、钱玄同、胡适六人第一次向教育部提出《请颁行新式标点符号议案》<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"5\" data-text=\"請頒行新式標點符號議案（修正案）\" data-url=\"https://zh.wikisource.org/zh/%E8%AB%8B%E9%A0%92%E8%A1%8C%E6%96%B0%E5%BC%8F%E6%A8%99%E9%BB%9E%E7%AC%A6%E8%99%9F%E8%AD%B0%E6%A1%88%EF%BC%88%E4%BF%AE%E6%AD%A3%E6%A1%88%EF%BC%89\">[5]</sup>，称为「夹注号」。<sup data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"6\" data-text=\"《新式标点符号案》，孔夫子旧书网\" data-url=\"https://book.kongfz.com/531164/3465026922/\">[6]</sup></p>\n<p><img src=\"https://pica.zhimg.com/v2-2fa86aee50eaaf26d165310505f763b5_720w.jpg?source=b1748391?rss\" data-rawwidth=\"308\" data-rawheight=\"514\" data-size=\"normal\" data-caption=\"1930年，在1919年基础上重发布的《新式标点符号案》\" data-watermark=\"watermark\" data-original-src=\"v2-2fa86aee50eaaf26d165310505f763b5\" data-watermark-src=\"v2-3b6e67cce39e62f22861e997dbed3939\" data-private-watermark-src=\"v2-54c2285608ee25699969b9fdba46dc36\"></p>\n<p data-pid=\"t4_yeXt5\">1951年，中华人民共和国公布的《标点符号用法》，正式定名为「括号」。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-1d7fe1c96c97edf8731ebb71c615d67d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"2028\" data-rawheight=\"694\" data-size=\"normal\" data-caption=\"1951年9月26日，人民日报第七版\" data-watermark=\"watermark\" data-original-src=\"v2-1d7fe1c96c97edf8731ebb71c615d67d\" data-watermark-src=\"v2-5a47aaf4d2f90cd7a729dc3189462a9a\" data-private-watermark-src=\"v2-4b7ef63b14c99280a3427bc3417a51e1\"></p>\n<h2>此后，括号在官方称呼中被沿用至今，但「括弧」仍在民间广为流传。</h2>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/oooooohmygosh?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">oooooohmygosh</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/36151378/answer/2423636903?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">1 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/286544124?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">“不搭噶”这个词是全国都在用的嘛 感觉大家都听得懂都在用？</a><br><a href=\"http://www.zhihu.com/question/49219459?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">「静学」是什么？</a><br>\n","link":"http://www.zhihu.com/question/36151378/answer/2423636903?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何高效利用下班后的时间？你也可以试试我的这些办法","date":"2022-04-10 03:00:10","description":"工作之后最先感受到的不是变成社会人的种种苦与乐，而是可供自由支配的时间锐减到了可怜的地步。加上计算每分每秒时都带上了时薪的度量，花时间精力去做做任何带不来收益的事情，似乎都与赔钱无异。\n\n但同时我也深知人类体内的懒惰因子可以有多顽固，一旦失去控制，就会拖着我堕落成一条躺平的咸鱼，不知道什么时候才能积攒起让自己动一动的力量。<a href=\"https://sspai.com/post/72494\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72494"},{"title":"万门大学倒闭，我想借此聊聊在线课堂怎么才能做下去","date":"2022-04-09 08:03:02","description":"近期有一个在线课堂项目「万门好课」（原来的万门大学）暴雷，App 下线无法使用，学员群也被解散。\n\n万门大学在我印象中还是大学时期名气颇大的一个在线课堂项目，如今以这么狼狈的状态倒地，借这个机会我来和大家聊聊：在线课堂应该怎么做下去？<a href=\"https://sspai.com/post/72413\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72413"},{"title":"老牌播客客户端的新变化——Overcast 迎来 2022 年更新","date":"2022-04-09 04:25:24","description":"Overcast 的「新瓶装旧酒」。<a href=\"https://sspai.com/post/72525\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72525"},{"title":"本周看什么丨最近值得一看的一大堆作品","date":"2022-04-08 10:04:51","description":"☕️TL;DR近期佳作推荐：[电影]神奇动物：邓布利多之谜、[电影]我眼中的阴影、[美剧]弹子球游戏、[动画]派对浪客诸葛孔明、[英剧]流人第一季、[电影]时间会议、[纪录片]回到太空、[韩剧]猪猡之 ...<a href=\"https://sspai.com/post/72547\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72547"},{"title":"第三排座椅和后备箱空间是鱼与熊掌的关系吗？","date":"2022-04-08 09:19:22","description":"\n<p data-pid=\"cwkLtwV4\">先说结论，不太可能</p>\n<p><img src=\"https://pic3.zhimg.com/v2-6206addb82de20fa4242094434994789_720w.jpg?source=b1748391?rss\" data-rawwidth=\"658\" data-rawheight=\"415\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-6206addb82de20fa4242094434994789\" data-watermark-src=\"v2-22f610924d00f83a292cdbd6ac0e9e31\" data-private-watermark-src=\"v2-2ee81f92a4ce7051d1065eaf2f7f6bb7\"></p>\n<p data-pid=\"G1vqbOcu\">对于车辆总布置有兴趣的朋友建议去看看，一本专业书籍，叫做《H point》，H点在口语里就叫“臀点”</p>\n<p><img src=\"https://pic2.zhimg.com/v2-eb1f114a75a570205ac09257a8c8ff61_720w.jpg?source=b1748391?rss\" data-rawwidth=\"511\" data-rawheight=\"400\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-eb1f114a75a570205ac09257a8c8ff61\" data-watermark-src=\"v2-76825bf2eaec230fcf71bdb1259d6ee7\" data-private-watermark-src=\"v2-cf1adb9dbe041d82f7538f91bf4a8e69\"></p>\n<p data-pid=\"1YqSvxVa\">车辆外形尺寸确定之后，首先确保就是主驾驶成员的臀点，然后再考虑第二排臀点第三排臀点的设计。第三排座椅展开就会占用一定的空间，那么行李箱就不可避免的牺牲掉，而且有些车型后排地板较高，第三排折叠的情况下，依然很高，让搬运行李不便，同时也缩减了坐5个人情况下的行李箱空间。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6a1b9ad18729a1e5b8d1e0d98345810b_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1382\" data-rawheight=\"481\" data-size=\"normal\" data-caption=\"7座车在5座的情况下，行李箱垂直空间缩水\" data-watermark=\"original\" data-original-src=\"v2-6a1b9ad18729a1e5b8d1e0d98345810b\" data-watermark-src=\"v2-f928ba0ee0f58db3ac2da76018b1471e\" data-private-watermark-src=\"v2-5eb7766f9c7e0a44649a51d6cdc24ef5\"></p>\n<p data-pid=\"1z9DmxV1\">科迪亚克的7座和5座之间，可以见到为了把第三排座椅藏好，实际上是把后备箱“地板”抬高了，也就是说两者都是五座的情况下使用，7座车可用的行李空间一定是少于5座车的。有没有办法根治这种顽疾呢？那就必须请出，法兰西空间魔术师了5008了</p>\n<p><img src=\"https://pic2.zhimg.com/v2-6743e3731e55651058afbf8913b72cb7_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1490\" data-rawheight=\"540\" data-size=\"normal\" data-caption=\"7座车和5座车都在5座情况下，行李箱垂直空间不变\" data-watermark=\"original\" data-original-src=\"v2-6743e3731e55651058afbf8913b72cb7\" data-watermark-src=\"v2-29923bf804213799ae31343ecd692b14\" data-private-watermark-src=\"v2-5b47035e79eeb374e64fd6449191ff46\"></p>\n<p data-pid=\"fWwvwj1C\">那么同样是7座的SUV，5008是如何做到的呢？首先5008设计一个非常屌的折叠机构，座椅折叠后是一个豆腐块，可以直接取下来，7座直接物理上变5座。同时5008作为SUV，实际上它的后舱地台是完全跟C4 Grand Picasso一样的，属于低地台后舱（后舱底板到天花板的落差是MPV那种高度），所以它的地台高度就天生比SUV更低，所以折叠好第三排座椅之后，它的地台高度刚好跟其他纯正SUV的地台高度相当。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-99cedfd0c410d2dcfcb9b0b997f07b4c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1002\" data-rawheight=\"685\" data-size=\"normal\" data-caption=\"7座科迪亚克的内置备胎槽\" data-watermark=\"original\" data-original-src=\"v2-99cedfd0c410d2dcfcb9b0b997f07b4c\" data-watermark-src=\"v2-8f87cddb9dde3260b26b7304c14fb728\" data-private-watermark-src=\"v2-abea125cfc16c3eec90b106d62c8e8d8\"></p>\n<p data-pid=\"22p6l3NL\">那么它付出的代价是什么？它付出的代价是，它的地台是没有备胎槽的，它只能底挂备胎。</p>\n<p data-pid=\"PjQR-co8\">5008其实车长还没超过4.7米，但在它同尺寸的3排SUV里面，它的第三排是最为舒适的，因为它地台低，第三排乘客的臀点和地台之间还是有些落差的（其他SUV第三排难受，主要是臀点和地板基本不存在落差了，想象一下抱着自己大腿坐榻榻米的感受）。各位5008车主发现过这点细微差别吗？</p>\n<p data-pid=\"0c5RGGKX\">汽车总布置很奇妙，所以在此也回答一个问题，为啥5008不能改成三擎四驱，因为5008的第三排地台实在太低了，放电池就只能请第三排座椅走人，也就是失去了5008作为拥有第三排SUV的实用性，跟4008相似了，定位重叠了。所以5008是绝无可能的变成三擎四驱PHEV车型的，因为5008实质是一个高底盘帅气MPV。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wangxiaopeng-?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">王晓鹏PPGarage</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/525018448/answer/2429603333?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">7 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/277815148?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">七座suv第三排座椅的意义是什么？</a><br><a href=\"http://www.zhihu.com/question/317111046?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">轿车与SUV哪个舒适性高?</a><br>\n","link":"http://www.zhihu.com/question/525018448/answer/2429603333?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"你自驾过国内哪些有意思的线路？","date":"2022-04-08 08:58:08","description":"\n<p data-pid=\"HaFnM1zD\">长文慎入，全文约4500字，150张图，写了5天，我也不知道多久才能看完。其实对于很地方的理解我还是比较片面，所以也请轻喷，毕竟我就是个过去旅游的。</p>\n<a href=\"https://www.zhihu.com/question/454795561/answer/1847823866\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-144ae856e49539cdc3bc047663727c45_qhd.jpg?source=b1748391\" data-image-width=\"3992\" data-image-height=\"2242\" class=\"internal\">以前贷款买车的你，现在有后悔吗？</a><p data-pid=\"X9T0hSdB\">所有的故事，要从我贷款买了一辆车开始说起，就是上面这个问题的回答，所以说年轻人喜欢旅游的话，还是得买辆车，自从有了这辆车以后，我的相册大概是这样的：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-a9551bf56527ca9e7d7fba1bf3ce9276_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1086\" data-rawheight=\"724\" data-watermark=\"original\" data-original-src=\"v2-a9551bf56527ca9e7d7fba1bf3ce9276\" data-watermark-src=\"v2-2019b5e0e4c55ef495f6291d4aa40907\" data-private-watermark-src=\"v2-2c873f6184bfe60a1f22d0b030d7027b\"></p>\n<p><br></p>\n<p data-pid=\"k-yGUJUv\">以下内容都是我去过的觉得还比较好玩的地方，图片以及视频都是实拍，因为我是个搞摄影的嘛，所以肯定也就比真实的场景要稍微好看那么一点点，请大家见谅，别说P图的都要拉去坐牢就行。</p>\n<h2>1、川西</h2>\n<a href=\"https://www.zhihu.com/zvideo/1448647943674404864\">Vlog | 辞职去旅行</a><p data-pid=\"6DgM2Eno\">以上是去川西拍的一段视频，此生必驾318应该是很多人年轻时候的梦想，川藏滇藏青藏三条线路我都走过，不过其中我觉得最好玩的还是川藏线，川藏线上最好玩的地方又是川西这一片，所以这篇文章的第一个部分，我们就来聊一下川西。</p>\n<h3>1.1 雪山</h3>\n<p><img src=\"https://pic3.zhimg.com/v2-2c1f22657836b0baa273e9603fef7959_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"7349\" data-rawheight=\"4902\" data-watermark=\"original\" data-original-src=\"v2-2c1f22657836b0baa273e9603fef7959\" data-watermark-src=\"v2-317df1b479e9df3f7d44558d636fccfe\" data-private-watermark-src=\"v2-7119d6a8e790e8fc220895fc63403c7b\"></p>\n<p data-pid=\"Wc1TmpLm\">318是川藏线进藏的必经之路，也是几条进藏路线里面旅游设施最完善的一条，沿路都是味道还说的过去的川菜馆子和卫生条件还行的平价酒店。这应该是很多人自驾旅行梦开始的地方。第一次走318的时候觉得最好玩的地方就是雪山，开车在路上走着走着就能看到一座白色的山峰，这是我长这么大第一次见到雪山。</p>\n<p><img src=\"https://pica.zhimg.com/v2-ebfb3fe179c8c10bf447ace8b09411b0_720w.jpg?source=b1748391?rss\" data-caption=\"巴塘 姊妹湖\" data-size=\"normal\" data-rawwidth=\"5723\" data-rawheight=\"3770\" data-watermark=\"original\" data-original-src=\"v2-ebfb3fe179c8c10bf447ace8b09411b0\" data-watermark-src=\"v2-137aeac7a1b03c5e05c1d7609b22cb51\" data-private-watermark-src=\"v2-3ab66311b2aa7f470207333ed444a328\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-d62a6c5b6eccbfab78ceb4ac43cab3b2_720w.jpg?source=b1748391?rss\" data-caption=\"雅拉雪山观景台\" data-size=\"normal\" data-rawwidth=\"5259\" data-rawheight=\"3512\" data-watermark=\"original\" data-original-src=\"v2-d62a6c5b6eccbfab78ceb4ac43cab3b2\" data-watermark-src=\"v2-9f9c11be1337e440bf1b3089f978bf27\" data-private-watermark-src=\"v2-a9d10739ba8637a937d660eb0db942e5\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-258ed0695a497e6207d67eb0061f18fb_720w.jpg?source=b1748391?rss\" data-caption=\"四姑娘山\" data-size=\"normal\" data-rawwidth=\"5889\" data-rawheight=\"3926\" data-watermark=\"original\" data-original-src=\"v2-258ed0695a497e6207d67eb0061f18fb\" data-watermark-src=\"v2-67d7cff1b43666fdfa1522adde171ddc\" data-private-watermark-src=\"v2-17645a01b909b83eedcd6967a04c3f77\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-d18c6d30286ec7e0bcc254cc22a2e312_720w.jpg?source=b1748391?rss\" data-caption=\"贡嘎雪山\" data-size=\"normal\" data-rawwidth=\"5347\" data-rawheight=\"1394\" data-watermark=\"original\" data-original-src=\"v2-d18c6d30286ec7e0bcc254cc22a2e312\" data-watermark-src=\"v2-c9e90714240088da4ffd763f785e65ed\" data-private-watermark-src=\"v2-3955d4cbb907dee21bcccf81053fde52\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-be8ac509af11cd9973b6741b8ef02f4d_720w.jpg?source=b1748391?rss\" data-caption=\"雅拉雪山+贡嘎雪山\" data-size=\"normal\" data-rawwidth=\"4892\" data-rawheight=\"500\" data-watermark=\"original\" data-original-src=\"v2-be8ac509af11cd9973b6741b8ef02f4d\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"GbrbQJJL\">以上这些都是我在川西地区看过的雪山，蜀山之王非贡嘎雪山莫属（倒数第二张），而且跟内地很多景点有个土坡子就圈个地收门票不同，川西这些拍雪山的机位基本都不要钱。</p>\n<h3>1.2 风土人情</h3>\n<p><img src=\"https://pica.zhimg.com/v2-d8a581f18c074e56e8768424e0ab7d0b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2744\" data-rawheight=\"1828\" data-watermark=\"original\" data-original-src=\"v2-d8a581f18c074e56e8768424e0ab7d0b\" data-watermark-src=\"v2-8385e1b7270f2b348801f5274617f050\" data-private-watermark-src=\"v2-ff59b1f51822cd0456f5960f740f903d\"></p>\n<p data-pid=\"ODn9RQ_s\">藏族自治州的风土人情对于第一次走318的朋友来说也挺新鲜，老实说我不是太喜欢藏传佛教，之前有一部电影叫《冈仁波齐》，我看了一半气不过走了，这里就不展开说了。</p>\n<p><img src=\"https://pica.zhimg.com/v2-c74d48d55af44160ed1f8fff06663da0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"5381\" data-rawheight=\"3587\" data-watermark=\"original\" data-original-src=\"v2-c74d48d55af44160ed1f8fff06663da0\" data-watermark-src=\"v2-52b30592cc5b0e12c5f344c72febb8c6\" data-private-watermark-src=\"v2-b1a88de432d5423d1cbacc07cc655b62\"></p>\n<p data-pid=\"-wMcYlFg\">网上有的人说藏族人特别热心肠，有的人说藏族人会拦路抢东西，其实这两种我都遇到过，上图这家藏族老乡，在我们不认识路的时候很热心的骑着摩托车帮我们带路，事后分文不要；在寺庙周围我们也遇到过不那么好的藏族老乡，他们抢东西不叫抢，他们会拿一个很便宜的东西找你换比较贵的东西。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-06c27e01e8fc6044a2e34f4c26e9f286_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3182\" data-rawheight=\"1788\" data-watermark=\"original\" data-original-src=\"v2-06c27e01e8fc6044a2e34f4c26e9f286\" data-watermark-src=\"v2-4a7fed2dbf22f42aeb2baeefbef15e3d\" data-private-watermark-src=\"v2-fe4389437edcfba4d7343fb42802965e\"></p>\n<p data-pid=\"tDT92AeU\">经幡应该也算是藏族地区标志性的风光之一，也可以去拍个合影啥的。</p>\n<p><img src=\"https://pica.zhimg.com/v2-781e9319d6aba99464bb17929c9a8e56_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2000\" data-rawheight=\"1333\" data-watermark=\"original\" data-original-src=\"v2-781e9319d6aba99464bb17929c9a8e56\" data-watermark-src=\"v2-de9eaaee01aa9a9f234be113c8ab3a7e\" data-private-watermark-src=\"v2-158f45c094b8a15279959c502d0be2e0\"></p>\n<p data-pid=\"kypQQ_wf\">当然，如果你特别喜欢藏族服饰的话，在一些网红景点也可以用很便宜的价格租到藏服拍写真，不过藏族的服饰有点显胖，所以身材比较短小的女生慎穿，不然就是女版武松即视感。</p>\n<h3>1.3 隐藏线路——格聂南线</h3>\n<p data-pid=\"Yb7tZdjP\">2021年我进藏回来的时候还开启了一个支线任务，反穿格聂南线，这条线路车少，路野，特别好看。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-63451e2ed045e2238f8878b33edc5105_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6000\" data-rawheight=\"4000\" data-watermark=\"original\" data-original-src=\"v2-63451e2ed045e2238f8878b33edc5105\" data-watermark-src=\"v2-5cbb170ac6180b40850e124d59c2a8a9\" data-private-watermark-src=\"v2-1323cb8569efdfe379d35fb463a22559\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-1076004562579e43aca522008afaa82a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6000\" data-rawheight=\"4000\" data-watermark=\"original\" data-original-src=\"v2-1076004562579e43aca522008afaa82a\" data-watermark-src=\"v2-6e9a01e826890900978a96a547bc98e6\" data-private-watermark-src=\"v2-108736a56bd718a9e8ee9a7da9a688a4\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-734cebc5d0be9ac3f49271ba18014264_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1736\" data-rawheight=\"2600\" data-watermark=\"original\" data-original-src=\"v2-734cebc5d0be9ac3f49271ba18014264\" data-watermark-src=\"v2-2774f42bc9352956b98e2c2ae23170b3\" data-private-watermark-src=\"v2-545532375b9d3168c8a72e877841255d\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-1d7b3884db7ce6acf11e605e522dbcd6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1732\" data-rawheight=\"2600\" data-watermark=\"original\" data-original-src=\"v2-1d7b3884db7ce6acf11e605e522dbcd6\" data-watermark-src=\"v2-8139ab194edbb13e7a276025b590a499\" data-private-watermark-src=\"v2-4c4ac1fb7a2172422c3406b8fdd7edcb\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-fee90fcc65b11018251e0a80644e9eb7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2644\" data-rawheight=\"1760\" data-watermark=\"original\" data-original-src=\"v2-fee90fcc65b11018251e0a80644e9eb7\" data-watermark-src=\"v2-96d3f4f8452a5550f35475a9c696a8ff\" data-private-watermark-src=\"v2-efff4fc806051e2dc024d995fbe18850\"></p>\n<p data-pid=\"sJpAt0G2\">格聂南线的攻略网上有很多，我也不展开说了，反穿比正穿要好看。我并没有什么太华丽的词藻去形容这个地方的美，如果硬要我说一个感觉的话，我就感觉自己现在不是在川西，而是在新疆。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-414ad675abf526c48a2f3ca967dac01c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2622\" data-rawheight=\"1742\" data-watermark=\"original\" data-original-src=\"v2-414ad675abf526c48a2f3ca967dac01c\" data-watermark-src=\"v2-cd234d003aef551cf113b6bdfc7d561a\" data-private-watermark-src=\"v2-2afcf60b8043f3a1799321690c59d21a\"></p>\n<p data-pid=\"hAygoI7A\">最后反穿出来我站在理塘外面的半山坡上还俯瞰了一下理塘的全景，对于这条线路我就有一点要提醒大家的，格聂神山那个铁匠山特别难走，连续4000米以上的海拔，我和朋友晚上到达的铁匠山，都有不同程度的高反，我们一边吸着氧气一边从山上跑下来了。</p>\n<h3>1.4 其他景点</h3>\n<p><img src=\"https://pic3.zhimg.com/v2-ab2c488e0d189f709d44c5a4850496dc_720w.jpg?source=b1748391?rss\" data-caption=\"塔公草原的日落\" data-size=\"normal\" data-rawwidth=\"2554\" data-rawheight=\"1694\" data-watermark=\"original\" data-original-src=\"v2-ab2c488e0d189f709d44c5a4850496dc\" data-watermark-src=\"v2-feac4d92f1bfe6ac17bd4cb9a74d6ab2\" data-private-watermark-src=\"v2-2e0567d992d425372e12e13d28c08797\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-746d9ebeb9348623ca13956e9a4b6f94_720w.jpg?source=b1748391?rss\" data-caption=\"从塔公县看雅拉雪山\" data-size=\"normal\" data-rawwidth=\"2298\" data-rawheight=\"1530\" data-watermark=\"original\" data-original-src=\"v2-746d9ebeb9348623ca13956e9a4b6f94\" data-watermark-src=\"v2-a38cc2b2ea53344a40777c1617dcd5f7\" data-private-watermark-src=\"v2-92bc91b76afb546f1b5eaddf42eb7565\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-1ca4c4e171632e1984c2ff21199ed5b7_720w.jpg?source=b1748391?rss\" data-caption=\"木雅金塔\" data-size=\"normal\" data-rawwidth=\"2378\" data-rawheight=\"1776\" data-watermark=\"original\" data-original-src=\"v2-1ca4c4e171632e1984c2ff21199ed5b7\" data-watermark-src=\"v2-37a3dc6b14dcd026b26560888d5842f8\" data-private-watermark-src=\"v2-649a2f63762bdf1e32c7708b356cdf41\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-3ec6b7366e5fc7f9e1a15f44cca6b609_720w.jpg?source=b1748391?rss\" data-caption=\"墨石公园\" data-size=\"normal\" data-rawwidth=\"3476\" data-rawheight=\"2602\" data-watermark=\"original\" data-original-src=\"v2-3ec6b7366e5fc7f9e1a15f44cca6b609\" data-watermark-src=\"v2-7a8bebd4dd2b873b351b286480e93af3\" data-private-watermark-src=\"v2-3a4442a62536403b805c556f37cd3bc6\"></p>\n<p data-pid=\"g1RMPB9S\">川西部分就先写到这了，快凌晨五点了要睡觉了，后面的内容我明天再更吧。</p>\n<h2>2、云南</h2>\n<p data-pid=\"7fl9z5ho\">云南我应该是去过三四次，走过滇藏线，在丽江拍过星空，在洱海看过日落，在昆明拍过建筑，还去了趟腾冲泡过温泉。</p>\n<h3>2.1 古城</h3>\n<p><img src=\"https://pic2.zhimg.com/v2-c0dccba12d65059f9a32e3f8fbefc75c_720w.jpg?source=b1748391?rss\" data-caption=\"丽江 束河古城\" data-size=\"normal\" data-rawwidth=\"2000\" data-rawheight=\"1123\" data-watermark=\"original\" data-original-src=\"v2-c0dccba12d65059f9a32e3f8fbefc75c\" data-watermark-src=\"v2-78d69fb5665f8af141b2af1a4527c478\" data-private-watermark-src=\"v2-49d8867ead10b3994598eae32de1d806\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-d2743b7bb36abc013ec3a64ef38ff2b5_720w.jpg?source=b1748391?rss\" data-caption=\"丽江 束河古城\" data-size=\"normal\" data-rawwidth=\"2000\" data-rawheight=\"1125\" data-watermark=\"original\" data-original-src=\"v2-d2743b7bb36abc013ec3a64ef38ff2b5\" data-watermark-src=\"v2-6608638185e91769196344e75d122371\" data-private-watermark-src=\"v2-178e76510b26aa99fc8ad745b847fc35\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-d3de345e981216ce88626b50ca90b681_720w.jpg?source=b1748391?rss\" data-caption=\"丽江 束河古城\" data-size=\"normal\" data-rawwidth=\"1182\" data-rawheight=\"665\" data-watermark=\"original\" data-original-src=\"v2-d3de345e981216ce88626b50ca90b681\" data-watermark-src=\"v2-6f45ebdb3d2616078fd824ff96c0f034\" data-private-watermark-src=\"v2-9c06ba12f1f18e9851b32083d5294825\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-50ecc1ef767f7a5d73f054c954299583_720w.jpg?source=b1748391?rss\" data-caption=\"丽江 丽江古城\" data-size=\"normal\" data-rawwidth=\"1234\" data-rawheight=\"1642\" data-watermark=\"original\" data-original-src=\"v2-50ecc1ef767f7a5d73f054c954299583\" data-watermark-src=\"v2-427da9357d7193cc62a0b18741b02428\" data-private-watermark-src=\"v2-5b985934156ad5383edd0a6bc399e510\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-e86ba5f904bf23b1bf3b1565dc485d0d_720w.jpg?source=b1748391?rss\" data-caption=\"丽江 丽江古城\" data-size=\"normal\" data-rawwidth=\"1500\" data-rawheight=\"2002\" data-watermark=\"original\" data-original-src=\"v2-e86ba5f904bf23b1bf3b1565dc485d0d\" data-watermark-src=\"v2-810aeec28253ac4c742d57c9baf35e56\" data-private-watermark-src=\"v2-d4a7dd5a24b1df400e8c2d77f04650ca\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-9c720deb0cf104e60087d6124f704c4d_720w.jpg?source=b1748391?rss\" data-caption=\"丽江 白沙古镇\" data-size=\"normal\" data-rawwidth=\"2008\" data-rawheight=\"1496\" data-watermark=\"original\" data-original-src=\"v2-9c720deb0cf104e60087d6124f704c4d\" data-watermark-src=\"v2-347aa9b09becc7207cc377898f9d3419\" data-private-watermark-src=\"v2-e4146c048aa42475c5af52c1a6ca3cc1\"></p>\n<p data-pid=\"ROSCq4Jj\">丽江有两个古城——丽江古城和束河古城，丽江古城不要门票，束河古城不住里面的话要15块钱门票，除此之外还有一个白沙古镇在丽江外面一些。丽江古城和束河古城两个古城商业化比较多，一水的义乌小商品，白沙古镇稍微原生态一些，我去的时候义乌小商品还比较少，有一家咖啡馆，二楼可以看到玉龙雪山，就是我图上的这个位置。</p>\n<p data-pid=\"EKf0oJRt\">总的来说，我觉得这类古城都没啥好玩的，除了各个地方的建筑风格不同以外，其他的都长的差不多，一般来了就学学爸妈，拍一张人+字的大合影就走就行了，不然发朋友圈别人不知道你去了哪，以为你是去怀柔影视基地或者甘坑客家小镇了。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-a76211f8ca995b7e553568bf31104f5e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1498\" data-rawheight=\"2006\" data-watermark=\"original\" data-original-src=\"v2-a76211f8ca995b7e553568bf31104f5e\" data-watermark-src=\"v2-b04087581b2b4e8e0f68eabd9b551a6e\" data-private-watermark-src=\"v2-a210236906352f5149dc529a9dce0bfc\"></p>\n<h3>2.2 雪山</h3>\n<p><img src=\"https://pic2.zhimg.com/v2-439fa6634c342a9c057b2d393a194134_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2794\" data-rawheight=\"1566\" data-watermark=\"original\" data-original-src=\"v2-439fa6634c342a9c057b2d393a194134\" data-watermark-src=\"v2-4cc1fc0ff01fd79a4dbeb9402123620d\" data-private-watermark-src=\"v2-e3435282650f638855bc578bac644cc6\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-06aec264642d8db395064843eefcd5d3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2794\" data-rawheight=\"1568\" data-watermark=\"original\" data-original-src=\"v2-06aec264642d8db395064843eefcd5d3\" data-watermark-src=\"v2-66337caf3bf6bc1279a3a89015d3741d\" data-private-watermark-src=\"v2-2fccb0926cb4911afb57b8be085b8cee\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-e2bebbb28050bfb7b561610e8c59b9aa_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3648\" data-rawheight=\"5472\" data-watermark=\"original\" data-original-src=\"v2-e2bebbb28050bfb7b561610e8c59b9aa\" data-watermark-src=\"v2-c16328f5425527dab47ce44c1fd10edb\" data-private-watermark-src=\"v2-9e8ce0631e2eeec496b72cf85dcdb614\"></p>\n<p data-pid=\"paY4X8sJ\">相比于去玉龙雪山景区看玉龙雪山，我更喜欢在古城里看雪山，就那么随意一瞟，雪山可能就在你的窗外；又或者随意拐进一条小路，一排老建筑的背后豁然就是一座大雪山。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-1f0cddafa379d23e2e77b071d4f87477_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3853\" data-rawheight=\"5721\" data-watermark=\"original\" data-original-src=\"v2-1f0cddafa379d23e2e77b071d4f87477\" data-watermark-src=\"v2-a00df5bf370924d04604ecbe356b4926\" data-private-watermark-src=\"v2-823ddbbfb8cf9b02e810283742f6b980\"></p>\n<p data-pid=\"g_eGVlWI\">对于丽江的雪山，我最喜欢的机位可能还是龙女湖边，草地树林雪山湖泊星空，全有了。当然，云南最出名的雪山还是梅里雪山，卡瓦博格的传说应该很多朋友都听说过，只不过我去梅里的那天，云太厚了，啥也没看到，大概就像下面这张图这样，等我下次有时间的时候再去看一次。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-94ed0e974b9a1086651134176347205f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2792\" data-rawheight=\"1562\" data-watermark=\"original\" data-original-src=\"v2-94ed0e974b9a1086651134176347205f\" data-watermark-src=\"v2-0fb0eb057cd1203d13fe85d6ee0d717b\" data-private-watermark-src=\"v2-8ee70cffa35ed897cdcab89dbbdaf7a9\"></p>\n<h3>2.3 世外桃源</h3>\n<p><img src=\"https://pic1.zhimg.com/v2-36d21fa1dda7b7e1fc7ab295a70d17d2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"5472\" data-rawheight=\"3648\" data-watermark=\"original\" data-original-src=\"v2-36d21fa1dda7b7e1fc7ab295a70d17d2\" data-watermark-src=\"v2-e6d21f9205d4384f429bdd7bd7e07aaf\" data-private-watermark-src=\"v2-be617ba5392fb27d3cce7da2bfd3571b\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-39e36f14cb1323762c3d3595fe0d9519_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"5472\" data-rawheight=\"3648\" data-watermark=\"original\" data-original-src=\"v2-39e36f14cb1323762c3d3595fe0d9519\" data-watermark-src=\"v2-c81efbc2fec28fc8b15b6fc4ab1c30e1\" data-private-watermark-src=\"v2-3127d72a23d34f436ccf736d086c59e7\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-248c51f51ce1e2c5c2c90062485d230b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"5472\" data-rawheight=\"3648\" data-watermark=\"original\" data-original-src=\"v2-248c51f51ce1e2c5c2c90062485d230b\" data-watermark-src=\"v2-f4d04caedae9a6ee3e5f0ab19694481d\" data-private-watermark-src=\"v2-98d52d91fed3218e621d404ae8386c7e\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-38884f81b8031dce80c8018266412e05_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2746\" data-rawheight=\"1534\" data-watermark=\"original\" data-original-src=\"v2-38884f81b8031dce80c8018266412e05\" data-watermark-src=\"v2-f6617f7501c4b8fd609106d0d9d6434a\" data-private-watermark-src=\"v2-7e833c05a411b81bbb3d889d666e32e5\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-72b218d5e1d7c1c2655e03d6e013f17b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"5572\" data-rawheight=\"3715\" data-watermark=\"original\" data-original-src=\"v2-72b218d5e1d7c1c2655e03d6e013f17b\" data-watermark-src=\"v2-4d62b4488537a0717fd832036cbdbecb\" data-private-watermark-src=\"v2-aea3774c8f3cfe5810e610bb254bad44\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-6c0f9ecbe4ecdd1b33ef7af903f517f7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3992\" data-rawheight=\"2242\" data-watermark=\"original\" data-original-src=\"v2-6c0f9ecbe4ecdd1b33ef7af903f517f7\" data-watermark-src=\"v2-3e77f7bd6ed51ac64d43c3f082b117cc\" data-private-watermark-src=\"v2-ab8c2be3f07e08e8b26baf560d651222\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-f7e3bc92ed439ec8fe3d7ca4133e871f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3257\" data-rawheight=\"1829\" data-watermark=\"original\" data-original-src=\"v2-f7e3bc92ed439ec8fe3d7ca4133e871f\" data-watermark-src=\"v2-0ea987d2ff2c9fd695df92cb24608599\" data-private-watermark-src=\"v2-d577238e41cccad6e58673659e83640a\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-bdc0bb5650af255ecb02a87378357534_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"5472\" data-rawheight=\"3648\" data-watermark=\"original\" data-original-src=\"v2-bdc0bb5650af255ecb02a87378357534\" data-watermark-src=\"v2-0fe6834d5aaeaa04eaefb5d2abafc33f\" data-private-watermark-src=\"v2-27e8a0eca2986855416f733ade17fcf6\"></p>\n<p data-pid=\"06_SVgDU\">腾冲，很久很久以前火过一阵，后来就过气了。这边有些村子里根本没什么年轻人，吊脚楼也都成了危房，甚至路上还有一些没有车牌的右舵报废车还在跑。我在高黎贡山上住了我迄今为止住过最贵的酒店，就是倒数第二第三张，酒店在原始森林边缘的大树上，一个小木屋，里面啥都有，走上阳台放眼望去就是原始森林。</p>\n<p data-pid=\"kRfryW4C\">云南这部分到这就基本结束了，其他的地方比如说苍山洱海其实我不怎么推荐，我去的时候在修路，除了可以看看海鸥也没啥看的，甚至路边都修起了藤原豆腐店。我觉得当地是想把洱海打造成ins风的洱海。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-35cd0dcb898bda92fd923c4a91d4b84e_720w.jpg?source=b1748391?rss\" data-caption=\"洱海的傍晚\" data-size=\"normal\" data-rawwidth=\"1500\" data-rawheight=\"2004\" data-watermark=\"original\" data-original-src=\"v2-35cd0dcb898bda92fd923c4a91d4b84e\" data-watermark-src=\"v2-479f0a5747783aef920823f19301d07e\" data-private-watermark-src=\"v2-8c6946be830d3e013b3e21c38a4ab785\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-23d692988a50868fc73523771536e28d_720w.jpg?source=b1748391?rss\" data-caption=\"洱海旁的藤原豆腐店\" data-size=\"normal\" data-rawwidth=\"2738\" data-rawheight=\"2050\" data-watermark=\"original\" data-original-src=\"v2-23d692988a50868fc73523771536e28d\" data-watermark-src=\"v2-b0b0d270acf1ded7d7ae5ab73e5609d3\" data-private-watermark-src=\"v2-66df237bebec61983ad342d3068847e7\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-6230bab11a934abfb94b900192096eea_720w.jpg?source=b1748391?rss\" data-caption=\"洱海旁的网红建筑\" data-size=\"normal\" data-rawwidth=\"1502\" data-rawheight=\"2000\" data-watermark=\"original\" data-original-src=\"v2-6230bab11a934abfb94b900192096eea\" data-watermark-src=\"v2-cd3f784b07460d808a06dc40ffc6a9d4\" data-private-watermark-src=\"v2-e86ac4350e352661a1dcaeb86113e6ed\"></p>\n<p data-pid=\"26oFkwQZ\">昆明我出差的时候也去过几次，滇池旁的海鸥比洱海好玩，蘑菇火锅我作为一个湖北人吃不太习惯，太清淡了，广东的朋友倒是可以试试。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-868622f4f22f8c7e77e27f33a1055e10_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2002\" data-rawheight=\"1498\" data-watermark=\"original\" data-original-src=\"v2-868622f4f22f8c7e77e27f33a1055e10\" data-watermark-src=\"v2-ee9e31c944eeb2794bf6bd2f25f461c3\" data-private-watermark-src=\"v2-6de02e8143488fdcb257ca82a869188a\"></p>\n<p data-pid=\"3zfMuMmZ\">这是我在酒店门口随手拍的一张，感觉昆明的阳光确实是比深圳和北京更加通透，适合拍照。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-970df5783b126ea30f3f018c3851cf05_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1940\" data-rawheight=\"2578\" data-watermark=\"original\" data-original-src=\"v2-970df5783b126ea30f3f018c3851cf05\" data-watermark-src=\"v2-954ebeba8ad4f02da7e9422cfd0c8c8c\" data-private-watermark-src=\"v2-29e67176c7a072be4f3b3cfb7fb924ee\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-8ab2c047481335509f3e168fca9f9136_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1932\" data-rawheight=\"2582\" data-watermark=\"original\" data-original-src=\"v2-8ab2c047481335509f3e168fca9f9136\" data-watermark-src=\"v2-9aaac51d2cef9931822775606b25eab9\" data-private-watermark-src=\"v2-205a97febae98211b70128ba85fb745c\"></p>\n<p data-pid=\"etyktd-r\">除此之外我感觉昆明的建筑都喜欢修的特别大，比如说特别大的天桥，特别大的公寓，不过关于建筑大这个话题，我觉得最牛X的还是贵州，那么我们就接着来聊下一个部分，神奇建筑在哪里。</p>\n<h2>3、贵州</h2>\n<p data-pid=\"A3khHkCr\">去贵州我主要为了两件事，一是看神奇建筑，比如说之前很火的水司楼，二是看看喀斯特地貌。</p>\n<h3>3.1 神奇建筑在哪里</h3>\n<p><img src=\"https://pic2.zhimg.com/v2-c1daebebe7f2bb5f4e98dcf1380ba91d_720w.jpg?source=b1748391?rss\" data-caption=\"独山县水司楼\" data-size=\"normal\" data-rawwidth=\"3789\" data-rawheight=\"2526\" data-watermark=\"original\" data-original-src=\"v2-c1daebebe7f2bb5f4e98dcf1380ba91d\" data-watermark-src=\"v2-1e2f413e34d99f48e7ef48934fa834b2\" data-private-watermark-src=\"v2-e3a04ca7f26b2ca1641bc7bcc70f91b4\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-cb7cc84ef9d42724f705c9cb112c22fb_720w.jpg?source=b1748391?rss\" data-caption=\"剑河县苗族女神仰阿莎雕塑\" data-size=\"normal\" data-rawwidth=\"4000\" data-rawheight=\"2667\" data-watermark=\"original\" data-original-src=\"v2-cb7cc84ef9d42724f705c9cb112c22fb\" data-watermark-src=\"v2-505ebb4e89473231d9e587c6a18c0bc0\" data-private-watermark-src=\"v2-710c95f07f53a664c8174891fa279d5e\"></p>\n<p data-pid=\"tQMxFKPZ\">2.5亿的水司楼，8600万的仰阿莎，要说起建筑之大，贵州相比于昆明是有过之而无不及。昆明的那些巨物至少都是有一定实用功能的，而贵州就真的是又大又没用。</p>\n<p data-pid=\"a4BOv1oh\">除了水司楼和仰阿莎，贵州还有一些其他的神奇建筑，比如说龙里县的水龙头，贵阳的“白宫”，夜郎谷，感兴趣的朋友都可以去走走。</p>\n<p><br></p>\n<h3>3.2 喀斯特地貌</h3>\n<p><img src=\"https://pic1.zhimg.com/v2-15c6eecd4feb32e99236cac112a4940e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"5832\" data-rawheight=\"2421\" data-watermark=\"original\" data-original-src=\"v2-15c6eecd4feb32e99236cac112a4940e\" data-watermark-src=\"v2-0759bd416eeaecc66e3106104accd95b\" data-private-watermark-src=\"v2-9793f8d7cab6c5374bc4c72ee37854aa\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-28f365f8176509db93b01b85f21363d9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4000\" data-rawheight=\"2666\" data-watermark=\"original\" data-original-src=\"v2-28f365f8176509db93b01b85f21363d9\" data-watermark-src=\"v2-3824e185cf2a55cab8420937ca832ae1\" data-private-watermark-src=\"v2-5992d8bc831318d0222787120aca1408\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-fc5e6e5c54c98b2d2d569c57633c2811_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3985\" data-rawheight=\"2989\" data-watermark=\"original\" data-original-src=\"v2-fc5e6e5c54c98b2d2d569c57633c2811\" data-watermark-src=\"v2-2812a04070b78b6aadd21f581f525b9f\" data-private-watermark-src=\"v2-e33b1a9f4a19e78dc5bf8d77615ca498\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-19c8b803e17f9c9d75425afc00451754_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3704\" data-rawheight=\"2469\" data-watermark=\"original\" data-original-src=\"v2-19c8b803e17f9c9d75425afc00451754\" data-watermark-src=\"v2-934fd452fd615513218417a8cb211b35\" data-private-watermark-src=\"v2-0b790df9a98d389fbd61cb209e62ccdf\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-e75c86a2732450c5b2697e4f71c5e690_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"5464\" data-rawheight=\"3643\" data-watermark=\"original\" data-original-src=\"v2-e75c86a2732450c5b2697e4f71c5e690\" data-watermark-src=\"v2-c250a1291036d86299a52ec289e5883c\" data-private-watermark-src=\"v2-c36db41c24e4d0bb694cb4013954b121\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-cbe8f237af4a7c8ca43c766a24431380_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"5526\" data-rawheight=\"3684\" data-watermark=\"original\" data-original-src=\"v2-cbe8f237af4a7c8ca43c766a24431380\" data-watermark-src=\"v2-6472cb66568debbd0de6d2c300bba1a8\" data-private-watermark-src=\"v2-e8e76d750eb345d722bec469adf74e34\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-6e4790c04132478844161d0f09ea11f5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6000\" data-rawheight=\"3375\" data-watermark=\"original\" data-original-src=\"v2-6e4790c04132478844161d0f09ea11f5\" data-watermark-src=\"v2-6fb870cd9938336c60aa6d3e28c88fec\" data-private-watermark-src=\"v2-7a1d3cd95ad6f2aa30b46dd2c6bc1f84\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-be6674c50ac2580c4494475718c745dc_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3024\" data-rawheight=\"4032\" data-watermark=\"original\" data-original-src=\"v2-be6674c50ac2580c4494475718c745dc\" data-watermark-src=\"v2-ea08c94402ff7c654f38f5d2cad06d4e\" data-private-watermark-src=\"v2-e56f0700edc5554698fa2160cf702f97\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-f8750cf1e1c7e56262edfa0e6bf2382e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3024\" data-rawheight=\"4032\" data-watermark=\"original\" data-original-src=\"v2-f8750cf1e1c7e56262edfa0e6bf2382e\" data-watermark-src=\"v2-e98141d94b6eeb3b3435e01fba242bac\" data-private-watermark-src=\"v2-3f4984f89ebd1d4050b391c8274d938b\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-28cea3b943bed68e08a9bb26924006f5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4032\" data-rawheight=\"3024\" data-watermark=\"original\" data-original-src=\"v2-28cea3b943bed68e08a9bb26924006f5\" data-watermark-src=\"v2-bcdff03d508d28fcd63f0c36ec2d15c5\" data-private-watermark-src=\"v2-c58e218047a58f0abd9ec4839c5fec3a\"></p>\n<p data-pid=\"_ZaBPgGU\">喀斯特地貌的日出日落、山石河流以及溶洞，这部分大家看图就行，似乎不需要用文字做太多的描述。跟其我平时在北京周边看到的RGB溶洞不同，茂兰的溶洞没有人造光源，拿个手电筒进去自己打光看就行（最后那几张图），体验会比RGB溶洞好很多，那种RGB溶洞，看起来就像是西游记里的阎王殿。</p>\n<h3>3.3 黔东南的那些事</h3>\n<p><img src=\"https://pic3.zhimg.com/v2-a47c896b2b83f550522781d772044d97_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4741\" data-rawheight=\"2015\" data-watermark=\"original\" data-original-src=\"v2-a47c896b2b83f550522781d772044d97\" data-watermark-src=\"v2-daed382a640bb1ba1032f5a9916a53ee\" data-private-watermark-src=\"v2-7091c734ccd0197bdfb67e4e3ab2571b\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-0e2b83aa188248100727ced010d2ca1c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2736\" data-rawheight=\"1156\" data-watermark=\"original\" data-original-src=\"v2-0e2b83aa188248100727ced010d2ca1c\" data-watermark-src=\"v2-c4c6a6586d8e79ccbad26b3e66ec4efd\" data-private-watermark-src=\"v2-a0c371a652ccb351d12a935bfb9ade8a\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-535031a634caa03883a88283da6442d8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3434\" data-rawheight=\"2562\" data-watermark=\"original\" data-original-src=\"v2-535031a634caa03883a88283da6442d8\" data-watermark-src=\"v2-0509cf4192b614ee30e3241a77c4b80c\" data-private-watermark-src=\"v2-37e9067714b87a35d8f5931d4800133c\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-735561ecbba9d3bbc45eccce591d4253_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4000\" data-rawheight=\"6000\" data-watermark=\"original\" data-original-src=\"v2-735561ecbba9d3bbc45eccce591d4253\" data-watermark-src=\"v2-61897f03625375ec3727c4b5a0c324c4\" data-private-watermark-src=\"v2-5242f113bef21e5f7086e85780976ad3\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-97aa68c114d410f549eaf26d4a69d2cf_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3891\" data-rawheight=\"5836\" data-watermark=\"original\" data-original-src=\"v2-97aa68c114d410f549eaf26d4a69d2cf\" data-watermark-src=\"v2-0030dbaebcce321c4501e8122488d8dd\" data-private-watermark-src=\"v2-ed4ecd8d52771a64f67ecf9d20302d5e\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-738066c416d4620484274f26e5214b2b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4000\" data-rawheight=\"6000\" data-watermark=\"original\" data-original-src=\"v2-738066c416d4620484274f26e5214b2b\" data-watermark-src=\"v2-5944ca567c8a90cd181a8782fbab84f1\" data-private-watermark-src=\"v2-d947d8c9094b6b5248acb1281eadc998\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-44ff89b5aad5fc8593b7b1ba6624d493_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1938\" data-rawheight=\"2580\" data-watermark=\"original\" data-original-src=\"v2-44ff89b5aad5fc8593b7b1ba6624d493\" data-watermark-src=\"v2-a28b8591af5ff995733976e011f4e1b1\" data-private-watermark-src=\"v2-d5e457b793b198fd87d903ec8384bf3a\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-0829c43227e1a7cfaa4599e4101e3dd6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2734\" data-rawheight=\"1542\" data-watermark=\"original\" data-original-src=\"v2-0829c43227e1a7cfaa4599e4101e3dd6\" data-watermark-src=\"v2-d6d43c808817e9008747f6f91b581c95\" data-private-watermark-src=\"v2-80bbd49acd55998e9ab2282cc18ca553\"></p>\n<p data-pid=\"OGlCPRo9\">黔东南整个是人文线路，各种苗寨侗寨，有商业化比较重，也有相对原始的，稍微挑几个去逛一下就好。我当时和 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/889572b3c61b51bcab1b8137f8c1d2e5\" data-hash=\"889572b3c61b51bcab1b8137f8c1d2e5\" data-hovercard=\"p$b$889572b3c61b51bcab1b8137f8c1d2e5\">@千里</a> 一起走的这条线路，找了一个没怎么开发的侗寨，住在村民家的民宿里，60块钱一晚上，跟村民一起吃，交伙食费30块钱一顿管饱。</p>\n<p data-pid=\"9hZ8lYlf\">除了苗寨侗寨以外凯里附近还有毕赣宇宙，你去到那个地方，就可以见到毕赣电影里的那些场景，甚至有些场景下还是那些人，就这样安安静静地生活在那。我因为不太喜欢看文艺片，所以并没有去寻找毕赣宇宙，这些都是去过的朋友告诉我的。</p>\n<h2>4、内蒙</h2>\n<p data-pid=\"wy-BTU-b\">之前在北京的时候最喜欢去的地方内蒙应该能算一个，西到额济纳旗，北到阿尔山，都跑过了一趟，而且每次去的路上必听杭盖。</p>\n<h3>4.1 草原</h3>\n<p data-pid=\"Dzk8Onwr\">锡林郭勒、呼伦贝尔、西乌珠穆沁，内蒙有大片草原，从西乌到阿尔山的一路上全是草原啊、牛羊啊、马啊这些，起初的时候还很开心拿着相机一直拍，到后面就麻木了。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-873f727ef04f2e53f82be9e2d93a34ec_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"5339\" data-rawheight=\"3559\" data-watermark=\"original\" data-original-src=\"v2-873f727ef04f2e53f82be9e2d93a34ec\" data-watermark-src=\"v2-665408f5b17dea3043ce7e979083a6af\" data-private-watermark-src=\"v2-5d486e25136ec558b659d218578e9c01\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-9b683d51ebd2aec703d19c839b15a328_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"5472\" data-rawheight=\"3648\" data-watermark=\"original\" data-original-src=\"v2-9b683d51ebd2aec703d19c839b15a328\" data-watermark-src=\"v2-e5bbac95f1cd6f776654503f0987a3bd\" data-private-watermark-src=\"v2-380459fe35195dcab3a84a783a0ba9a2\"></p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-eb1df2369e5baa760386c5f54f04d416_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6000\" data-rawheight=\"4000\" data-watermark=\"original\" data-original-src=\"v2-eb1df2369e5baa760386c5f54f04d416\" data-watermark-src=\"v2-641f8cb6794a34e429c99f53e7c29409\" data-private-watermark-src=\"v2-4feeb0a96942179d9a6f02fc9658a05f\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-ed2e9d35dba1af0b0f9b1b11c6af0354_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"5384\" data-rawheight=\"3589\" data-watermark=\"original\" data-original-src=\"v2-ed2e9d35dba1af0b0f9b1b11c6af0354\" data-watermark-src=\"v2-02b21fc238ffe43298efde18f1b1317e\" data-private-watermark-src=\"v2-68693ef5b22b8401e336ec1010d430a1\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-c68f3c86292ce2fac14e0bd711909126_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6000\" data-rawheight=\"4000\" data-watermark=\"original\" data-original-src=\"v2-c68f3c86292ce2fac14e0bd711909126\" data-watermark-src=\"v2-7924ffbc3ca25086bcf10e227eea9417\" data-private-watermark-src=\"v2-760ab6f2bc40a8df9c3121db23f7746c\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-65adabcdc6d52f641c9645ab6760a3a1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6000\" data-rawheight=\"4000\" data-watermark=\"original\" data-original-src=\"v2-65adabcdc6d52f641c9645ab6760a3a1\" data-watermark-src=\"v2-15e7e00237e15a51c14257a13765090b\" data-private-watermark-src=\"v2-db6b865b50a290be7387381936df959c\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-26943174f85ed10d74c36d60eab93b31_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6000\" data-rawheight=\"4000\" data-watermark=\"original\" data-original-src=\"v2-26943174f85ed10d74c36d60eab93b31\" data-watermark-src=\"v2-4f6ff7831a401bfec5d9745ba67a6a83\" data-private-watermark-src=\"v2-01aacd1620edfe94ff43b6795e11cb8d\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-2b586a0bc6c78871ae9b30177ed5f66d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6000\" data-rawheight=\"4000\" data-watermark=\"original\" data-original-src=\"v2-2b586a0bc6c78871ae9b30177ed5f66d\" data-watermark-src=\"v2-15f5ca3705b0a768d7c05a39cc8fba1a\" data-private-watermark-src=\"v2-5db27443de88740ca04ca4e4fb87dc9e\"></p>\n<p data-pid=\"g0etFsPZ\">以上都是内蒙的草原，不像广东哈哈哈哈，我之前去的罗坑大草原，大概就是一个水库加一片草场，就是草原了。</p>\n<h3>4.2 火山</h3>\n<p><img src=\"https://pic2.zhimg.com/v2-511051ad15a288443f764f22946036cc_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6000\" data-rawheight=\"4000\" data-watermark=\"original\" data-original-src=\"v2-511051ad15a288443f764f22946036cc\" data-watermark-src=\"v2-3e0dc443c5955e8fc43ab2471919f7c2\" data-private-watermark-src=\"v2-89cf6d607821f4dd3cb1e7c85de11969\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-478dfa19bbaeeec306d3aa6ee64d3600_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2738\" data-rawheight=\"1826\" data-watermark=\"original\" data-original-src=\"v2-478dfa19bbaeeec306d3aa6ee64d3600\" data-watermark-src=\"v2-b725f9896c8edaba9f3f41c0d1e88331\" data-private-watermark-src=\"v2-9f841cb77380eed586c55b6bb6d8352e\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-53febb99da070626a18c919d32a6ab71_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2724\" data-rawheight=\"1822\" data-watermark=\"original\" data-original-src=\"v2-53febb99da070626a18c919d32a6ab71\" data-watermark-src=\"v2-e8dc1bc84844baa43ff63c18fc6b6d10\" data-private-watermark-src=\"v2-76c2ba8f4afbf508b1a1e656b9e4914e\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-61a1d5af2177a28337c5e9a02afe1ce8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2576\" data-rawheight=\"2572\" data-watermark=\"original\" data-original-src=\"v2-61a1d5af2177a28337c5e9a02afe1ce8\" data-watermark-src=\"v2-5918cfdccc579c7efd651add18d7927c\" data-private-watermark-src=\"v2-1ac9706b96e8c848dac94db3db26c43a\"></p>\n<p data-pid=\"yXv6wrP_\">我第一次去察哈尔火山是2016年，没有漫山遍野的宇航服，也没有望不到边的帐篷，只有不多的几辆车以及遍地的马匹，而且这里的星空特别干净。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-7d4d7ce6194ee904ef77a512bdbd1eda_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2736\" data-rawheight=\"2056\" data-watermark=\"original\" data-original-src=\"v2-7d4d7ce6194ee904ef77a512bdbd1eda\" data-watermark-src=\"v2-5b1ae7f5a481c6ef95e4292034963039\" data-private-watermark-src=\"v2-26c5c7e0bbb3b5f392ccacef3cdd5013\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-b6441ebd28ed92b9d385a2c06eb8952f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2742\" data-rawheight=\"1544\" data-watermark=\"original\" data-original-src=\"v2-b6441ebd28ed92b9d385a2c06eb8952f\" data-watermark-src=\"v2-38b0dcee241250ff5cff892a7ea684b5\" data-private-watermark-src=\"v2-879ffa2802c3c12fd3856908571f7400\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-ed1017be5964be75b71e7490cef7e737_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1710\" data-rawheight=\"2570\" data-watermark=\"original\" data-original-src=\"v2-ed1017be5964be75b71e7490cef7e737\" data-watermark-src=\"v2-f59ae0e2eaae107b9d545ac1517a81d4\" data-private-watermark-src=\"v2-b39fe2d3856bde859707f2e891862b7e\"></p>\n<p data-pid=\"QLfek25_\">再去察哈尔火山的时候是2018年，当时是冲着露营去的，那时候还没有风格露营，简单的帐篷火锅小桌椅就可以冲了。</p>\n<p data-pid=\"w4LP1iKr\">察哈尔火山应该是在国内可以见到为数不多的活火山，上一次喷发距今一万年，所以它还是一座比较年轻的火山，而对于我们来说，从夏商周开始算起也就4000多年。</p>\n<h3>4.3 国境之北</h3>\n<p><img src=\"https://pica.zhimg.com/v2-8ea04d2ebfa070bf620547ba322c7e3a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3233\" data-rawheight=\"4849\" data-watermark=\"original\" data-original-src=\"v2-8ea04d2ebfa070bf620547ba322c7e3a\" data-watermark-src=\"v2-39f4584b31b9cd24162515fc7a6c2a91\" data-private-watermark-src=\"v2-aa144feb4d7bc9438a9bad77a251e288\"></p>\n<p data-pid=\"kfYbgolo\">国门的另外一遍，就是外蒙古了。阿尔山，不仅有极高的植被覆盖率，还有一些特别清新的建筑。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-e7313b44c0971fafc22d60736f56fa38_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3910\" data-rawheight=\"2931\" data-watermark=\"original\" data-original-src=\"v2-e7313b44c0971fafc22d60736f56fa38\" data-watermark-src=\"v2-b8180c4e1c8265fe160e8a410e00fa5d\" data-private-watermark-src=\"v2-f332058e9830e7ea724993813c891064\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-7f7d8a8ad2c515d0ad7dee50bed8c3a8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6000\" data-rawheight=\"4000\" data-watermark=\"original\" data-original-src=\"v2-7f7d8a8ad2c515d0ad7dee50bed8c3a8\" data-watermark-src=\"v2-60dc3ee4359173e4cf2a698422658731\" data-private-watermark-src=\"v2-71b40e895f576a64bbd12e3afa32c177\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-6e07c7d1c0af623659029e0c2f83924f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4194\" data-rawheight=\"2796\" data-watermark=\"original\" data-original-src=\"v2-6e07c7d1c0af623659029e0c2f83924f\" data-watermark-src=\"v2-b6e0b66e753769af12bb8ce4e4a411e3\" data-private-watermark-src=\"v2-2f2dbba4fa413018c4a5ef5d05f11651\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-02620d7aa16bc2b2e5fd5835e8401414_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4032\" data-rawheight=\"3024\" data-watermark=\"original\" data-original-src=\"v2-02620d7aa16bc2b2e5fd5835e8401414\" data-watermark-src=\"v2-289ad0a5fa5e454cb081a26a1a077be2\" data-private-watermark-src=\"v2-5bbf32adf61a343213d38ce65e8d263b\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-261085ed0f9b684001a2e9b517d5ebe9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3217\" data-rawheight=\"2411\" data-watermark=\"original\" data-original-src=\"v2-261085ed0f9b684001a2e9b517d5ebe9\" data-watermark-src=\"v2-aa745dc122c0fc9b882ffa0c2eb3e959\" data-private-watermark-src=\"v2-80b417e58a0b114e9f799fcc0759616e\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-f811fd78782d50bd9d24398bb854ecd8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4000\" data-rawheight=\"3000\" data-watermark=\"original\" data-original-src=\"v2-f811fd78782d50bd9d24398bb854ecd8\" data-watermark-src=\"v2-f023038c9d7e4d693b39acce8aabe346\" data-private-watermark-src=\"v2-e196869d34a92464fbdb670528b876af\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-b9e5555d05a9fc9f033302a705ca8bf8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2712\" data-rawheight=\"1514\" data-watermark=\"original\" data-original-src=\"v2-b9e5555d05a9fc9f033302a705ca8bf8\" data-watermark-src=\"v2-341f7f1c8cbf226cbb8f04477c8f9eaa\" data-private-watermark-src=\"v2-790fad235ec54e6b14301d3878c732f8\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-53178221ca2e2a8d1301674bd503a425_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2580\" data-rawheight=\"2562\" data-watermark=\"original\" data-original-src=\"v2-53178221ca2e2a8d1301674bd503a425\" data-watermark-src=\"v2-450bf0abf76ac407aeb10f25d954ea59\" data-private-watermark-src=\"v2-9d5687a20e599a07b76698a047869657\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-e0cc4d9f43c108bbcbd5c4c7f0b1445e_720w.jpg?source=b1748391?rss\" data-caption=\"阿尔山火车站\" data-size=\"normal\" data-rawwidth=\"2730\" data-rawheight=\"2048\" data-watermark=\"original\" data-original-src=\"v2-e0cc4d9f43c108bbcbd5c4c7f0b1445e\" data-watermark-src=\"v2-eb3ca97e196d4cb178e4017df42c9f22\" data-private-watermark-src=\"v2-c5f314d283e622d09ba6c5602119d76c\"></p>\n<p data-pid=\"2HvcTkgR\">以上都是在阿尔山拍的照片，除了少数几家比较贵的酒店以外，其他的民宿都非常便宜，一晚上也就100出头。吃倒是没啥特别的，除了面食、饺子，剩下的就是牛羊肉了。</p>\n<h2>5、海南</h2>\n<p><img src=\"https://pica.zhimg.com/v2-21132745b01d27ed3d2ebb13b2824b3d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"2716\" data-rawheight=\"2336\" data-watermark=\"original\" data-original-src=\"v2-21132745b01d27ed3d2ebb13b2824b3d\" data-watermark-src=\"v2-6d12c30d9f61c4bd8094aa378090c964\" data-private-watermark-src=\"v2-f7ff1919317a8c4be7bc9902e2059893\"></p>\n<p data-pid=\"uCjLUZ62\">第一次上海南岛的时候我就在想，为什么很少有那种围着海南岛转一圈的攻略，在第三次登岛的时候我就自己试了一下，完了发现刚看到这么干净的大海沙滩还比较兴奋，看到第二天也觉得还好，看到第五天就觉得没意思我想回家了。海南岛大概就是这样，从海口经文昌到三亚，和从三亚经东方市到海口，景色都差不多。所以去自驾的话逛一半就行，一般推荐东线，旅游设施完善一些。</p>\n<h3>5.1 打渔赶海</h3>\n<p><img src=\"https://pic2.zhimg.com/v2-a9018153e0015a6dc36e0aa198d6cbfa_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2728\" data-rawheight=\"2046\" data-watermark=\"original\" data-original-src=\"v2-a9018153e0015a6dc36e0aa198d6cbfa\" data-watermark-src=\"v2-d0829d09e5ef14e0fbcb175ceac955fd\" data-private-watermark-src=\"v2-b127f69019158630c97fc311b05aa562\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-c59d3d13037a4ca1721762be98763ef0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1576\" data-rawheight=\"2104\" data-watermark=\"original\" data-original-src=\"v2-c59d3d13037a4ca1721762be98763ef0\" data-watermark-src=\"v2-5b7f357cd89f1d41c20da85b120d7459\" data-private-watermark-src=\"v2-7b37958d16e533d591ed51413ac42c3b\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-cd5a60774ebd8d53ef5f244dab8a6257_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2738\" data-rawheight=\"2058\" data-watermark=\"original\" data-original-src=\"v2-cd5a60774ebd8d53ef5f244dab8a6257\" data-watermark-src=\"v2-f18dfc3026ddcc61258f2edd4c25619b\" data-private-watermark-src=\"v2-7001ba7d1cbbb16aadb5fd9ec27d1465\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-cdb6c885f15431bfee616ef323122c85_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2738\" data-rawheight=\"2048\" data-watermark=\"original\" data-original-src=\"v2-cdb6c885f15431bfee616ef323122c85\" data-watermark-src=\"v2-3c604420402cf008d7db7ec8509ba032\" data-private-watermark-src=\"v2-c571fcf1d7ef8335cdd9fd950a964062\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-421c6c2962602c31a6fab750d5cf78e1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2108\" data-rawheight=\"1578\" data-watermark=\"original\" data-original-src=\"v2-421c6c2962602c31a6fab750d5cf78e1\" data-watermark-src=\"v2-d2cef84d0eb24c74df292eec7511bf86\" data-private-watermark-src=\"v2-17327a3c1ba383047fb1603c381e24fb\"></p>\n<p data-pid=\"vm3nDJuh\">如果是想去跟渔民一起打鱼，文昌的铺前、陵水的新村都可以，不过跟广东这边打渔没啥区别，海陵岛或者茂名的渔港都会比这两个地方要大，所以可能这只是环岛自驾的路程上顺便去看看的地方。</p>\n<h3>5.2 沙滩度假</h3>\n<p><img src=\"https://pic3.zhimg.com/v2-db72416b20d5be8b3cf9f3e416395184_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2014\" data-rawheight=\"1508\" data-watermark=\"original\" data-original-src=\"v2-db72416b20d5be8b3cf9f3e416395184\" data-watermark-src=\"v2-ab264901944b154fd0a689ae96c772b6\" data-private-watermark-src=\"v2-92c3abd38fa5baa2262dbd5a700ac59e\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-b8306b82461a9f21b6459e9787d94eb0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1510\" data-rawheight=\"2016\" data-watermark=\"original\" data-original-src=\"v2-b8306b82461a9f21b6459e9787d94eb0\" data-watermark-src=\"v2-8a795376360d53b0b70e62da83f49340\" data-private-watermark-src=\"v2-dfb8ceb59782f19440d5a9879152e9c6\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-b3c7d74d185751cba698faccdcd9a229_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1510\" data-rawheight=\"2018\" data-watermark=\"original\" data-original-src=\"v2-b3c7d74d185751cba698faccdcd9a229\" data-watermark-src=\"v2-4d2046bc2f3786f184c30ee3f63ab3a6\" data-private-watermark-src=\"v2-e718d484561910b4f1eeb6b16a73c9eb\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-06084d86c7bd5e07e9f4a05316d9972e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2014\" data-rawheight=\"1510\" data-watermark=\"original\" data-original-src=\"v2-06084d86c7bd5e07e9f4a05316d9972e\" data-watermark-src=\"v2-d5feeaf241f00203fce87a99bcb3effc\" data-private-watermark-src=\"v2-3825094da7f5701b1dfcb1d5f204bf39\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-e07d336a01a9f5e6d9e6f165f42fc534_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2014\" data-rawheight=\"1506\" data-watermark=\"original\" data-original-src=\"v2-e07d336a01a9f5e6d9e6f165f42fc534\" data-watermark-src=\"v2-30fa98921fd69921daeaed623eeb93d0\" data-private-watermark-src=\"v2-e156f58c81dc07756b7a1cd40f6dff7a\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-c8251887eb0d3513677f8dc8800b4f9b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1514\" data-rawheight=\"2014\" data-watermark=\"original\" data-original-src=\"v2-c8251887eb0d3513677f8dc8800b4f9b\" data-watermark-src=\"v2-a65294f07681276f07a5420fdd6a574f\" data-private-watermark-src=\"v2-59b1443e715a3e88f26302a8add7aa9c\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-efc4b8047d6c9e88928139b27ec85ef0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1506\" data-rawheight=\"2012\" data-watermark=\"original\" data-original-src=\"v2-efc4b8047d6c9e88928139b27ec85ef0\" data-watermark-src=\"v2-33a8fb4f83ccca22ed9569a92c254caf\" data-private-watermark-src=\"v2-ed5556e8fdaf07e4b5afa14217883652\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-b08967557662f975e494ded57d6ef905_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2002\" data-rawheight=\"1498\" data-watermark=\"original\" data-original-src=\"v2-b08967557662f975e494ded57d6ef905\" data-watermark-src=\"v2-e7c0b56e0b9d86ea4b99d60364c1573a\" data-private-watermark-src=\"v2-89e89f3dc3554cb80f8ced0a5eabbd01\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-a5b47b006aa567a4835f021a7136d05d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1578\" data-rawheight=\"2108\" data-watermark=\"original\" data-original-src=\"v2-a5b47b006aa567a4835f021a7136d05d\" data-watermark-src=\"v2-a8e5a6ad4e3523a955f89decd7785ce0\" data-private-watermark-src=\"v2-7550461ed2fd9e4850b928a41d7c610b\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-1594a7a3d8a6d74977ff1821bfbc6263_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2106\" data-rawheight=\"1584\" data-watermark=\"original\" data-original-src=\"v2-1594a7a3d8a6d74977ff1821bfbc6263\" data-watermark-src=\"v2-1d830d52799c2baa10540982c1648ef6\" data-private-watermark-src=\"v2-7e920d9c7ccad9ad843b8c358f9fa748\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-79b86a6cbac50dbf18f0676bf332280e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2110\" data-rawheight=\"1580\" data-watermark=\"original\" data-original-src=\"v2-79b86a6cbac50dbf18f0676bf332280e\" data-watermark-src=\"v2-485796aec0aed3ed0221be273376b8b9\" data-private-watermark-src=\"v2-16724da05c857315ef30a7fdef185119\"></p>\n<p data-pid=\"GEjmE-Tg\">可能这是很多朋友觉得海边应该有的样子，大海沙滩比基尼，冲浪潜水出海游，你想要的海南都有，而且价格便宜量又足，这些主要集中在从陵水-三亚这一段。而且酒店丰俭由人，从一二百的民宿，到几千一晚的亚特兰蒂斯，你想要的海南都有。</p>\n<p><img src=\"https://pica.zhimg.com/v2-c7c662c9bb1f59a1475cd1c3f5f67830_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2000\" data-rawheight=\"1504\" data-watermark=\"original\" data-original-src=\"v2-c7c662c9bb1f59a1475cd1c3f5f67830\" data-watermark-src=\"v2-8af273bbfccd835be1ac07f1cba24a08\" data-private-watermark-src=\"v2-d7bbc9965304109d59529034da56a1ae\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-09ea9926594018269693d72832de37e0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2736\" data-rawheight=\"2050\" data-watermark=\"original\" data-original-src=\"v2-09ea9926594018269693d72832de37e0\" data-watermark-src=\"v2-6b2f4f96f50aaa5fedcf588d37172904\" data-private-watermark-src=\"v2-f0892c12a088a3595d052e129ed4eb91\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-b1e01c0e43450de3da44fb055ee5c187_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1922\" data-rawheight=\"2572\" data-watermark=\"original\" data-original-src=\"v2-b1e01c0e43450de3da44fb055ee5c187\" data-watermark-src=\"v2-4f48a334c3bc1c014d20173ce06ef6a6\" data-private-watermark-src=\"v2-5e5c3cc76c56c8a6176fc971bcda5f0f\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-2d82179b35abc3b1a0d3687dbbcacd05_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2736\" data-rawheight=\"2054\" data-watermark=\"original\" data-original-src=\"v2-2d82179b35abc3b1a0d3687dbbcacd05\" data-watermark-src=\"v2-22fabed49ac8d8017d45aff8421750f3\" data-private-watermark-src=\"v2-4501179f074052f5e6058c16d5893bfe\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-5387801e5ea943d55d9baee627f6472c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1998\" data-rawheight=\"1494\" data-watermark=\"original\" data-original-src=\"v2-5387801e5ea943d55d9baee627f6472c\" data-watermark-src=\"v2-5c007fbdba57413a2d453ff227b1c76b\" data-private-watermark-src=\"v2-574858d669a78a7e26e8a61aaf6e6f25\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-b168df1b4e43e9c1933120caa9bbf1f4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2724\" data-rawheight=\"1918\" data-watermark=\"original\" data-original-src=\"v2-b168df1b4e43e9c1933120caa9bbf1f4\" data-watermark-src=\"v2-1ff38808def3599d78e3edc007da34ca\" data-private-watermark-src=\"v2-5f86b3de83015cb54cbdcca633f2c935\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-465c3e92db01dca9f81ad519884001cb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2004\" data-rawheight=\"1498\" data-watermark=\"original\" data-original-src=\"v2-465c3e92db01dca9f81ad519884001cb\" data-watermark-src=\"v2-05f19b8daf27835d1874c87175a110e1\" data-private-watermark-src=\"v2-fd8d49c018cf1d9dfed99a734eea2ffc\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-9a9e5dacd3f4b776c3ee870540b869f5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2732\" data-rawheight=\"2054\" data-watermark=\"original\" data-original-src=\"v2-9a9e5dacd3f4b776c3ee870540b869f5\" data-watermark-src=\"v2-42b2832238d63bea8a6c3c8bf3cb549d\" data-private-watermark-src=\"v2-4b861d2d66e704467035777f918747db\"></p>\n<p data-pid=\"LsdJgJno\">一般不是五一十一过年这种哪哪都是人的假期，400左右就可以住一个还可以的酒店，要么大床房酒店有泳池或者沙滩，要么就是一居室的套间，海南的酒店应该算是我去过的地方性价比最高的了。</p>\n<h3>5.3 琼中森林</h3>\n<p><img src=\"https://pic2.zhimg.com/v2-1bbb34d5cf9b21cf93e3121e2f903824_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2106\" data-rawheight=\"1580\" data-watermark=\"original\" data-original-src=\"v2-1bbb34d5cf9b21cf93e3121e2f903824\" data-watermark-src=\"v2-e07435e28f8fceb9cbe444b5f6f7866c\" data-private-watermark-src=\"v2-7ffae14259c9abbf335275ebad5a8c88\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-5fdf3b85b9f9d36f5fa802d1bdfd14d7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2152\" data-rawheight=\"1432\" data-watermark=\"original\" data-original-src=\"v2-5fdf3b85b9f9d36f5fa802d1bdfd14d7\" data-watermark-src=\"v2-12d9be186a41d304ea557460df1a661a\" data-private-watermark-src=\"v2-d9e715763fe2d245a9b9e3058e2d1ac3\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-d6d46da303da44b70d0e0cc3987f2cc2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2152\" data-rawheight=\"1434\" data-watermark=\"original\" data-original-src=\"v2-d6d46da303da44b70d0e0cc3987f2cc2\" data-watermark-src=\"v2-824c4d1a627c191a17eca9439d2fac29\" data-private-watermark-src=\"v2-6604364a3314629d56d5376e1de3597d\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-38bb7d31b02be1e32c4af02dfd4f0562_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2104\" data-rawheight=\"1576\" data-watermark=\"original\" data-original-src=\"v2-38bb7d31b02be1e32c4af02dfd4f0562\" data-watermark-src=\"v2-2b6d7f42d289e8fec1be7443c3204058\" data-private-watermark-src=\"v2-9b5c52e5ca0933e20b01b62a3f3f0ba5\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-031ba3b1eec9d23dd461d71bf136c7d9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1432\" data-rawheight=\"2148\" data-watermark=\"original\" data-original-src=\"v2-031ba3b1eec9d23dd461d71bf136c7d9\" data-watermark-src=\"v2-141eb0bfe5aab798f68e615a66f97c00\" data-private-watermark-src=\"v2-f8ca64952a68fdf61864ab315e316cd8\"></p>\n<p data-pid=\"oKw5WhNq\">有些朋友回好奇，海南岛中间没海的地方都是啥？我也带着这个问题去看了看，其实是森林，整体风格跟云南一些地方有些像，都属于亚热带或者热带气候了。</p>\n<a href=\"https://www.zhihu.com/question/518443067/answer/2404026815\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-8bb051a3765536f3a8f3724211062483_qhd.jpg?source=b1748391\" data-image-width=\"2402\" data-image-height=\"1658\" class=\"internal\">春季看海哪里可以体验到「云霞出海曙」的美景？</a><p data-pid=\"76iJDI4D\">如果刚好您是一个摄影爱好者，想拍海的话，可以看上面这个回答里的图，海南也有很多地方都挺适合扫海的。</p>\n<a href=\"https://www.zhihu.com/question/517815681/answer/2383493623\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-d055fea93ed2ee93bb3889f89bacbeb7_qhd.jpg?source=b1748391\" data-image-width=\"5888\" data-image-height=\"3927\" class=\"internal\">有哪些存在感极低，但风景绝美的沿海城市值得一去？</a><p data-pid=\"W0xxhomX\">如果您对沿海城市都比较感兴趣的话，可以看这篇回答，好像大部分沿海城市我都过了。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-29a8832d768c27b758643cba1d3df8ca_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2106\" data-rawheight=\"1578\" data-watermark=\"original\" data-original-src=\"v2-29a8832d768c27b758643cba1d3df8ca\" data-watermark-src=\"v2-44bfb1813bedc9ad1a0361985b293d43\" data-private-watermark-src=\"v2-43892af3a11989395f52c9010d7be22e\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-bdcd4b8bd30423dae0256e0bc4228ea7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2102\" data-rawheight=\"1574\" data-watermark=\"original\" data-original-src=\"v2-bdcd4b8bd30423dae0256e0bc4228ea7\" data-watermark-src=\"v2-802932ff3ecc3b06d15649fe0be48d0e\" data-private-watermark-src=\"v2-455d1c9307d5a6e6441b61f28260c8cc\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-ccb6edeeae9149ab1339a4452610a428_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2102\" data-rawheight=\"1572\" data-watermark=\"original\" data-original-src=\"v2-ccb6edeeae9149ab1339a4452610a428\" data-watermark-src=\"v2-c27b25b2fcaa6887f573b337b48d3663\" data-private-watermark-src=\"v2-5993af86db8a7cd9474398b5ba8a349f\"></p>\n<p data-pid=\"c6f9Ly88\">除此之外岛上还有一些盐场啊，骑楼这些，个人感觉没必要专程去一趟，路过就看一眼，不路过就网上看看图得了。</p>\n<h2>6、福建</h2>\n<a href=\"https://www.zhihu.com/zvideo/1298027780983181312\">带无人机出去旅行到底都能拍出啥？</a><p data-pid=\"fodrrPGb\">以上是第二次去福建拍的一些视频，福建我去了两趟，一趟去了火山岛和土楼，另一趟也去了火山岛和土楼。除此之外我觉得福建的面是真好吃，颇有一种为了一碟醋包一顿饺子的感觉。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-5a1ce30d0ef5f7c13ef3f88286ad7a8f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2680\" data-rawheight=\"2674\" data-watermark=\"original\" data-original-src=\"v2-5a1ce30d0ef5f7c13ef3f88286ad7a8f\" data-watermark-src=\"v2-5969cfa21712bc9761759511067e2f84\" data-private-watermark-src=\"v2-0d43124d7429ba5875859dea0e95c959\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-5575540109e3a4975712b1e6ac283059_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3196\" data-rawheight=\"2394\" data-watermark=\"original\" data-original-src=\"v2-5575540109e3a4975712b1e6ac283059\" data-watermark-src=\"v2-ccc431e91945704acdb912484df990b1\" data-private-watermark-src=\"v2-519e664ba37ee613797f2ff26d7dcc34\"></p>\n<p data-pid=\"imrePIGs\">福建的沙茶面，感觉是只要海里有的，啥玩意都可以往面里面加，说实话面一般，汤是真的好喝，海鲜也不错。</p>\n<h3>6.1 众神之城</h3>\n<p><img src=\"https://pica.zhimg.com/v2-3f6c7a7977b7de24bce4b3f5ba2e79f5_720w.jpg?source=b1748391?rss\" data-caption=\"西游记天竺国取景地\" data-size=\"normal\" data-rawwidth=\"3186\" data-rawheight=\"2394\" data-watermark=\"original\" data-original-src=\"v2-3f6c7a7977b7de24bce4b3f5ba2e79f5\" data-watermark-src=\"v2-fb2752d88c442c59a0589a97b92fb5cb\" data-private-watermark-src=\"v2-a0a7cf7479cad581a634757ee6f81e5d\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-e24b3d1aeebc25edb9dfa2a3f3175eec_720w.jpg?source=b1748391?rss\" data-caption=\"关帝庙\" data-size=\"normal\" data-rawwidth=\"3194\" data-rawheight=\"2394\" data-watermark=\"original\" data-original-src=\"v2-e24b3d1aeebc25edb9dfa2a3f3175eec\" data-watermark-src=\"v2-df21f984bc89d3345903dd0a19218d38\" data-private-watermark-src=\"v2-a27068bf633b57bc120f16418c2e3e55\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-56482ba7d5e443cc3e205ff284ff83fb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3192\" data-rawheight=\"2300\" data-watermark=\"original\" data-original-src=\"v2-56482ba7d5e443cc3e205ff284ff83fb\" data-watermark-src=\"v2-e60eea45a791a5211d166cd497e52c61\" data-private-watermark-src=\"v2-dbe6d70d0809460694acae6b0639b897\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-b16f3b29fad212c32dc86592853ae79d_720w.jpg?source=b1748391?rss\" data-caption=\"解放军庙\" data-size=\"normal\" data-rawwidth=\"2006\" data-rawheight=\"2674\" data-watermark=\"original\" data-original-src=\"v2-b16f3b29fad212c32dc86592853ae79d\" data-watermark-src=\"v2-87642142b4f6bf43a7aff7d55d4c231e\" data-private-watermark-src=\"v2-b034f03d747e2b7f45d4de5d0fbf19a3\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-8aea9ad08ff2240a1cb9c7e1d32ab14b_720w.jpg?source=b1748391?rss\" data-caption=\"关帝庙的二维码添香油\" data-size=\"normal\" data-rawwidth=\"3180\" data-rawheight=\"2292\" data-watermark=\"original\" data-original-src=\"v2-8aea9ad08ff2240a1cb9c7e1d32ab14b\" data-watermark-src=\"v2-81663b522b7a391ac24876a7dfe1b477\" data-private-watermark-src=\"v2-ead578b1b63e929f225d08011ca87cc8\"></p>\n<p data-pid=\"AAg1Q0zM\">被称为众神之城是因为泉州的寺庙特别多，佛教有开元寺、承天寺、崇福寺以及南少林，清真有清凉寺，也就是上面那张西游记的取景地，道教有老君岩，除此之外还有民间宗教比如说关帝庙、解放军庙这些。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-62230a8c584b1af9ccc275d61bf5946b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3186\" data-rawheight=\"2386\" data-watermark=\"original\" data-original-src=\"v2-62230a8c584b1af9ccc275d61bf5946b\" data-watermark-src=\"v2-1c985e5853ef40307718f9b0e599293c\" data-private-watermark-src=\"v2-dd13392d2d6950028c25409900f360f0\"></p>\n<p data-pid=\"srP7KZwD\">解放军庙又叫天下第一庙，其实是一个爱国主义教育基地，主殿供奉的27个烈士，偏殿供奉的是毛主席和贺龙。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-bf9d9ef3decc532d789010df742121ad_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3190\" data-rawheight=\"2386\" data-watermark=\"original\" data-original-src=\"v2-bf9d9ef3decc532d789010df742121ad\" data-watermark-src=\"v2-acf098c1416a17926ae1cbbb9727e7d8\" data-private-watermark-src=\"v2-b2b08151d9e0919773cad06aeafca2b8\"></p>\n<blockquote data-pid=\"U2XdMoyD\">庙里的碑文：1949年9月17日，我中国人民解放军叶飞部第十兵团28军84师251团奉命解放金门，调兵至平潭集结崇武，兵船方抵崇武西沙湾即遇敌机空袭，时逢渔镇集市，疏散未及，劫难将临。解放军指战员当机立断依船体或沙坑对空御敌转移目标，终以27位官兵牺牲的巨大代价拯救满城生灵于血火之中。而今国家昌盛，人民安乐，昔日西沙滩已辟为旅游胜地。为缅怀英烈，激励后人，特于27烈士殉难处勒石树碑永志不忘。</blockquote>\n<p data-pid=\"JSqBkV2H\">以上就是解放军庙的来历了，全国仅此一家。其实从深圳到福建的路上还会经过潮州，那边有一间泰佛庙，也挺有意思，那座庙大概长这样：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c008ebc4a236773d16a3c3d5e468132b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3194\" data-rawheight=\"2122\" data-watermark=\"original\" data-original-src=\"v2-c008ebc4a236773d16a3c3d5e468132b\" data-watermark-src=\"v2-6f5ad5ce85faa4d062fcb10844ea93a2\" data-private-watermark-src=\"v2-80c53aaa18261ef0b15d5c633516ab2f\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-b7861b0f5e7505f6faae3abbaac35ebb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3196\" data-rawheight=\"2130\" data-watermark=\"original\" data-original-src=\"v2-b7861b0f5e7505f6faae3abbaac35ebb\" data-watermark-src=\"v2-bdacf5cced4c07e79a097fb9588a58f6\" data-private-watermark-src=\"v2-2394b7b226b6ab857749505bc30e7f16\"></p>\n<h3>6.2 客家土楼（迪士尼花木兰）</h3>\n<p><img src=\"https://pic2.zhimg.com/v2-88fcd82c698a6dfae6d49a1c25af92e3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3186\" data-rawheight=\"2124\" data-watermark=\"original\" data-original-src=\"v2-88fcd82c698a6dfae6d49a1c25af92e3\" data-watermark-src=\"v2-8dace4a9898613effc9420f6bd8dd35e\" data-private-watermark-src=\"v2-795f17d74461adb937ec546d6cb4b5cd\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-f5ad11c3317c251fc9273c17874b1bc5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2992\" data-rawheight=\"1526\" data-watermark=\"original\" data-original-src=\"v2-f5ad11c3317c251fc9273c17874b1bc5\" data-watermark-src=\"v2-024dded2a2f5b558d7a264a7a1c7863b\" data-private-watermark-src=\"v2-8cf26f28660c1997395106e20792f11d\"></p>\n<p><br></p>\n<p><img src=\"https://pica.zhimg.com/v2-2b52b3d31089ad3de08cf4b13354d42a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"896\" data-rawheight=\"496\" data-watermark=\"original\" data-original-src=\"v2-2b52b3d31089ad3de08cf4b13354d42a\" data-watermark-src=\"v2-3eee96f090c8a0161eec84452d0c6e09\" data-private-watermark-src=\"v2-da25bb2fb7c3797a24229dd46fcbf3f4\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-9261c9e6b708660635c69f0fcbcc7c7b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3192\" data-rawheight=\"2122\" data-watermark=\"original\" data-original-src=\"v2-9261c9e6b708660635c69f0fcbcc7c7b\" data-watermark-src=\"v2-bd18d2fda5894ce74fa269b7ab89be30\" data-private-watermark-src=\"v2-59bf6093e679a8f716d35d46c5f4bdf2\"></p>\n<p data-pid=\"vzNswvt3\">土楼大概就长这样，以前是福建客家人民抵御外敌的一种群居性建筑，现在基本也没多少人住在土楼里买了，都搬走了。毕竟南方阴雨天多，木质结构的房子，也没得独立卫生间，住着还是不如楼房舒服。</p>\n<p data-pid=\"f6Z8TgEv\">上面这张图就是被称为四菜一汤的田螺坑土楼群，要说玩吧，里面也没啥好玩的；要说买东西吧，除了土特产就义乌小商品；要说不来吧，来了一趟福建，不去看个土楼好像又过意不去，所以就去打个卡吧。个人感觉不管是田螺坑还是永定土楼，其实都大同小异，随便去一个打个卡就行。</p>\n<a href=\"https://www.zhihu.com/question/419508632/answer/1466349256\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-23800583c93b546c9a5c6477bafaed59_qhd.jpg?source=b1748391\" data-image-width=\"896\" data-image-height=\"504\" class=\"internal\">如何评价电影《花木兰》豆瓣评分4.9分？</a><p data-pid=\"c3iaoT31\">至于说花木兰里面的土楼，我以前已经喷过了，纯粹是迪士尼不了解中国文化，花木兰一个北方人，怎么就住进南方的土楼里面了，这是要开启花木兰打倭寇的副本吗？</p>\n<h3>6.3 纪念碑谷（避坑）</h3>\n<p><img src=\"https://pic1.zhimg.com/v2-5e07f2dd30e1411b9a1e0a8c7b62501b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"1024\" data-watermark=\"original\" data-original-src=\"v2-5e07f2dd30e1411b9a1e0a8c7b62501b\" data-watermark-src=\"v2-1c62e8b25e9277807761495c11097866\" data-private-watermark-src=\"v2-3b04eae9ef88b9dfaad0a4912e53d141\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-9b6db127dea640b3d712f2229dc6e707_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"1024\" data-watermark=\"original\" data-original-src=\"v2-9b6db127dea640b3d712f2229dc6e707\" data-watermark-src=\"v2-5d058964037ba692a407324ea08b2f9f\" data-private-watermark-src=\"v2-c3f5642705f8a96aea4abf00bd400500\"></p>\n<p data-pid=\"rnqW946_\">福建漳州火山岛，我第一次去的时候还是黄色的，门票70，和 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/5ef8b2debf9aaed301292de2fbe3e54a\" data-hash=\"5ef8b2debf9aaed301292de2fbe3e54a\" data-hovercard=\"p$b$5ef8b2debf9aaed301292de2fbe3e54a\">@羽小团</a> 进去逛了一圈，没啥好玩的，小团拍了几张自拍就走了。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-e12c459f8b185483dd64644c11a55ed1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3190\" data-rawheight=\"2122\" data-watermark=\"original\" data-original-src=\"v2-e12c459f8b185483dd64644c11a55ed1\" data-watermark-src=\"v2-3f88e2dd0fd7eb713bd984f437e729ba\" data-private-watermark-src=\"v2-0af923dfe9100549af246f3da39bb675\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-bb9617e9e3a8fb4e0c6e7b0e324ce40d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3198\" data-rawheight=\"2126\" data-watermark=\"original\" data-original-src=\"v2-bb9617e9e3a8fb4e0c6e7b0e324ce40d\" data-watermark-src=\"v2-79ff3b96da6fcc6f53633bac4995a43b\" data-private-watermark-src=\"v2-0cc97302a50a7ba491676e72b780fba8\"></p>\n<p data-pid=\"WS03bcaj\">第二次去的时候刷了个油漆，变成了粉红色，门票140，进去逛了半个小时，飞了一会无人机，完了同行的小伙伴问我为什么要进去，直接无人机拍两张照片看一下不就可以了吗？我说不是你要来的吗？竞无语凝噎。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-0e8b7957e0c5ab4de373eb6f0adbca3f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3190\" data-rawheight=\"2390\" data-watermark=\"original\" data-original-src=\"v2-0e8b7957e0c5ab4de373eb6f0adbca3f\" data-watermark-src=\"v2-16cbbf30e5eb3e861de85d778bd442b2\" data-private-watermark-src=\"v2-e461e52e4a9b4b1dfca29811c14358d2\"></p>\n<p data-pid=\"9Pm5ubUH\">站在纪念碑谷的桥上花280块钱看一场日落，可能这就是年轻人所谓的浪漫吧？其实在去了纪念碑谷以后我有一个感觉，一切比故宫贵还没故宫好玩的景点都是智商税。</p>\n<h3>6.4 平潭蓝眼泪</h3>\n<p data-pid=\"GOzmmjSx\">相比于上面的火山岛纪念碑谷，我觉得蓝眼泪真的是值得一看的景象。很遗憾的是我去平潭的那次由于季节不对，并没有看到传说中的蓝眼泪，不过后来在惠州看到了，我还录了视频，确实很有意思。</p>\n<a href=\"https://www.zhihu.com/video/1495801818436964352\"></a><p data-pid=\"-SCMbM2E\">长江澳、龙凤头、坛南湾、北港村，都是看蓝眼泪比较好的地方。大家如果要去拍的话可以选择4月-6月，找个月黑风高的晚上，就可以看到了。关于蓝眼泪的一些知识这篇帖子里我都有讲。</p>\n<a href=\"https://www.zhihu.com/question/520295108/answer/2388931044\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-1b3489c48cf1ccbea8a1a82ece813850_qhd.jpg?source=b1748391\" data-image-width=\"2000\" data-image-height=\"1333\" class=\"internal\">福州有哪些值得一去风景绝美的海边景点？</a><h2> 总结</h2>\n<p data-pid=\"qDQPlT39\">以上就是我这些年走过的一些地方的线路总结，其实这里面很多地方我都不止去了一次，比如说像川西这种，每个季节去都是不同的景色。还有些地方太大了，比如说新疆西藏，一个去了两次一个去了三次，我觉得我还是只走过他们的很小一部分，根本没法总结出线路。从伊犁到阿勒泰，开车得有1000公里，还没出新疆，你说大不大。</p>\n<p data-pid=\"ToEbK5e3\">最后我再立个flag，等疫情结束以后，我一定要再去新疆逛它个十天半个月。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/question/291164310/answer/2420811989?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\">知乎用户（登录查看详情）</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/291164310/answer/2420811989?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">39 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/445970175?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">有什么国内自驾游的好线路？</a><br><a href=\"http://www.zhihu.com/question/64875833?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">向西走，自驾游有哪些精彩路线？</a><br>\n","link":"http://www.zhihu.com/question/291164310/answer/2420811989?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"[送码] 注入情绪与故事，它想成为你的相片处理「最后一步」：卡片馆 2.0","date":"2022-04-08 06:31:44","description":"卡片馆是一款纯粹的卡片制作工具，它没有拍照和滤镜功能，只想专注于成为你相片处理的最后一步，既然是最后一步，我希望这一步可以尽可能轻松。<a href=\"https://sspai.com/post/72329\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72329"},{"title":"LaunchBar 与 Zotero 联动，补齐文献搜索短板","date":"2022-04-08 03:32:38","description":"由此想起日常使用 LaunchBar 有较为方便的 Action 制作功能，且其制作的 Action 可以实时返回数据，并对数据进行筛选，如果能将 Zotero 与 LaunchBar 结合，则日常搬砖时岂不心情更好？<a href=\"https://sspai.com/post/72459\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72459"},{"title":"创作者请回答｜浙三爷：「废柴逆袭」的爽文人生","date":"2022-04-08 02:45:37","description":"\n<p data-pid=\"1QxyoKMI\">昨天傍晚，局长看到一个问题<a href=\"https://www.zhihu.com/question/42116438/answer/1998288405\" class=\"internal\">「有哪些恶有恶报的故事？」</a>忍不住点开看了看。</p>\n<p data-pid=\"m_fcWLGt\">故事的主人公是一个「完美犯罪者」，却只惩罚那些酒驾、抢劫、欺辱女人的罪人……坏人永远不会觉得自己做错，他们的道歉只是害怕惩罚的借口。他觉得这样不对，既然恶人只能恶人磨，那他宁愿化为恶鬼，解决天下罪恶。</p>\n<p data-pid=\"EJrTId-r\">如此带感的设定，难怪读者们纷纷评价：</p>\n<blockquote data-pid=\"z8juW32Y\">幸好是个故事，前面差点看哭了…… <a class=\"member_mention\" href=\"https://www.zhihu.com/people/6105c6b87901945cae61f9052937676e\" data-hash=\"6105c6b87901945cae61f9052937676e\" data-hovercard=\"p$b$6105c6b87901945cae61f9052937676e\">@浅澄澈</a> <br>写悲剧么，无非是把美好的东西在你眼前毁灭。作者做的更绝，把美好的东西在你眼前毁灭，然后穿越时空以后，把以前毁灭的不完全的再收拾收拾，扔粉碎机再过一遍。 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/70f3a1206208d00cebb8b7fe8b9e0bd5\" data-hash=\"70f3a1206208d00cebb8b7fe8b9e0bd5\" data-hovercard=\"p$b$70f3a1206208d00cebb8b7fe8b9e0bd5\">@呼噜噜</a> <br><i>这是我今年看过的最好的小说，三爷的文笔很棒，他把友情、爱情以及对善恶的思考用直白的语言一层层剖开给你看。贴近生活的作品总是可以给人很多感触的，而我最大的感触是：勿以恶小而为之。</i> <a class=\"member_mention\" href=\"https://www.zhihu.com/people/e1372ff8cbb1502fa7f5162b29779f7e\" data-hash=\"e1372ff8cbb1502fa7f5162b29779f7e\" data-hovercard=\"p$b$e1372ff8cbb1502fa7f5162b29779f7e\">@木宁</a> </blockquote>\n<p data-pid=\"ykijQXQV\">一口气看完，有一种酣畅淋漓的爽感。毕竟，谁的心里没有一个「替天行道」的侠义梦呢？</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-98c9dbfe7e019f718ef119ce6183ae65_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"440\" data-rawheight=\"452\" class=\"origin_image zh-lightbox-thumb\" width=\"440\" data-original=\"https://pic2.zhimg.com/v2-98c9dbfe7e019f718ef119ce6183ae65_r.jpg\"></figure><p data-pid=\"GvUSFgwT\">局长再一看故事的作者，这不是 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/1cf98819cd7722c225956abd77a67099\" data-hash=\"1cf98819cd7722c225956abd77a67099\" data-hovercard=\"p$b$1cf98819cd7722c225956abd77a67099\">@浙三爷</a> 嘛！当即兴冲冲跟浙三爷畅聊了一晚，听他讲了讲自己「废柴逆袭」般的爽文人生。</p>\n<h2>半路出家的「不良少年」</h2>\n<p data-pid=\"4Ws_xmlT\">浙三爷，90 后生人，是家里第三个孩子。他的故事比小说还要精彩，以至于知友们纷纷求他写一本自传。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-0c9032eb6825c73f8b1fe7ea49e6789b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1438\" data-rawheight=\"328\" class=\"origin_image zh-lightbox-thumb\" width=\"1438\" data-original=\"https://pic4.zhimg.com/v2-0c9032eb6825c73f8b1fe7ea49e6789b_r.jpg\"></figure><p data-pid=\"Uu4kL6_d\">他曾是学校里的不良学生，遭遇过体罚、霸凌；高一辍学后向朋友借了 20 块就出门去拼；往水桶里放进凉席、衣服就能搬家；做过饭店服务员、送外卖遭遇过 3 起车祸……</p>\n<p data-pid=\"UkOisINg\">最穷的时候，浙三爷甚至睡过网吧、银行的 ATM 机，他在一个回答中写到，「我当初的选择是睡中国农业银行的 24 小时 ATM 机，一般是有开空调的，你不会被冻死也不会被蚊虫咬死，就蹲在角落安安静静的睡觉。不过取钱的人会很害怕你，当时那些取钱的看我一眼，吓得拿钱就跑。」</p>\n<p data-pid=\"prjgpTmb\">参考儿时玩伴和乡邻的成长轨迹，这样的人生经历大概率会走向：到电子厂打个零工，与结识的同事领证结婚。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-e941738a0328252a33f4b192393bce37_b.jpg\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"854\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic4.zhimg.com/v2-e941738a0328252a33f4b192393bce37_r.jpg\"><figcaption>浙三爷的生活照：「如你所见，这是价值15元的棉花糖，不是一般人可以承担的，符合我尊贵的盐选创作者的身份。它可不是街头10元的！它是游乐园里15元的！」</figcaption></figure><p data-pid=\"8iOsAV1N\">但在他的身上，这些开局设定并没有走向预期的结果，带来偏差的 bug，在浙三爷的 19 岁触发了——</p>\n<p data-pid=\"C4zYm_wo\">2013 年，浙三爷来到一家网文工作室码字，日更 1 万 5 千字，两个星期后日更达到 2 万 5 千字。2014 年起他开始写自己的小说，稿费从第一年的几万，到第二年的 40 万，再到 2016 年的120万。</p>\n<p data-pid=\"98jDnxHL\">2021 年的夏天，他开始在知乎转型写悬疑文，第一部作品<a href=\"https://www.zhihu.com/xen/market/remix/paid_column/1401499605629104128\" class=\"internal\">《时空缉凶》</a>一经上线，便收获了超高人气。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-499e24ec1c5958eb03ade6a9a49a9b08_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1200\" data-rawheight=\"675\" class=\"origin_image zh-lightbox-thumb\" width=\"1200\" data-original=\"https://pic1.zhimg.com/v2-499e24ec1c5958eb03ade6a9a49a9b08_r.jpg\"></figure><h2>工资爆炸式增长是什么体验？</h2>\n<p data-pid=\"JmJPEf2j\">浙三爷很清楚地记得《时空缉凶》的走红，「因为发布第一天就成爆款了」。</p>\n<p data-pid=\"sVDx7e-S\">相较于他此前动辄百万字，连载数月的网文，这本精炼到 20 万字，在 21 天更新 30 章的小说，刷新了他从业以来的记录。</p>\n<p data-pid=\"nRSZlen1\">上线 5 天，阅读量破百万，超 3 万人追更。完结时，知乎问题<a href=\"https://www.zhihu.com/question/475637141\" class=\"internal\">「如何评价浙三爷的《时空缉凶》？」</a>登上站内热榜。</p>\n<p data-pid=\"M8TTFySH\">写完《时空缉凶》的那一刻，浙三爷兴奋地和知乎制作人讲，自己写了八年，终于写出了那么好的书。不过在一年后回想起这件事时，他又觉得好糗好羞人，「如果能回到那个时候，我要把他手机砸了，让他收不到我的消息。」</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-ea8f94dad076df6bf414a86807be3202_b.jpg\" data-size=\"normal\" data-rawwidth=\"1071\" data-rawheight=\"1074\" class=\"origin_image zh-lightbox-thumb\" width=\"1071\" data-original=\"https://pic3.zhimg.com/v2-ea8f94dad076df6bf414a86807be3202_r.jpg\"><figcaption>《时空缉凶》故事开头的框架</figcaption></figure><p data-pid=\"aLUBiv5D\">亮眼的成绩，宣告他成功从灵异文转型到悬疑文，也再次为他的天赋正名。</p>\n<p data-pid=\"560RPr0s\">2014 年到 2021 年，这位年轻的作者，大约完成了 2800 万字，30 多本书，如果按照全年无休计算，日更超过1万字。与此同时，他的稿费收入从第一年的几万，到第二年的 40 万，再到 2016 年，他 20 岁时，年收入破百万。</p>\n<p data-pid=\"uNJk0SSo\">即使网文界素来就有造富神话——2016 年的网络作家富豪榜上，唐家三少以 1.22 亿元版税登顶；年纪最小的柳下挥，29 岁，版税 2500 万——但放在当时总量约有 142 万的网文作者群体中，能签约、出头、冒尖、聚集百万读者，不无需要比拼天赋和韧性。</p>\n<p data-pid=\"-wuFA1zn\">浙三爷意识到自己的天赋是在初二那年，学校希望凑齐 50 名学生参加新概念作文大赛。补位的他，却成了学校唯一拿到全国奖项的人，「原来我并不是一无所用的差生」。</p>\n<p data-pid=\"U94pnq2O\">从那时起，写作成了他投入最多热情，也得到最多回报的事情。但显然，对于当时的浙三爷来说，光靠写作是没办法养活自己的。</p>\n<p data-pid=\"uB35FE6v\">在 16 岁辍学后，他做过车间工人、打包工、服务员、销售员、厨师。干得最久的是送外卖。那时，浙三爷送一单的收入只有 5 毛钱，一月能挣到 1500 元。</p>\n<p data-pid=\"Phuea6U8\">2013 年，他在送外卖遭遇第 3 次车祸后辞职，开始写小说。每天写一万五千字，一个月能比送外卖时多挣 300 元。因此，他最初创作的动机与经济直接相关，每在键盘上多敲出一千字，一天就能多赚四块钱。他曾经实验过自己一天输出的极限：五万六千字。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-2e60b6413286de9ab3183410b42781c3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"292\" data-rawheight=\"292\" class=\"content_image\" width=\"292\"></figure><p data-pid=\"MUBpQl_E\">这种疯狂输出的习惯，一直延续到浙三爷后来创作自己的小说。在同行还在以日更万字为界限时，他一天能写上两三万字，反映在作品的字数和连载时间上，他在 190 天更完 190 万字的《漂流教室》，357 万字的《绝美冥妻》连载时间只有 326 天。凭借天赋和勤勉，浙三爷说，「2016 年我写的灵异文算是全国前五了。」</p>\n<p data-pid=\"gPXc4Wsl\">然而行业也在这时走向转折。2017 年相关条例出台，网络视听节目不得出现「宣扬灵魂附体、转世轮回、巫术作法等封建迷信思想」，行业内也掀起净化网络文学的风潮。到了2019年，以起点为代表的网文平台们，进一步整顿灵异文，频道关停，相关作品也移至其他分区。那几年里，他陷入低谷期，收入暴跌，换过笔名尝试写都市文，也更换了网文平台。</p>\n<p data-pid=\"DB5qabmF\">在万分之一的可能下，他与知乎结缘。根据浙三爷的知乎制作人回忆，自己偶然在网文区看到浙三爷在和人对线，觉得他说得挺在理，下意识地发了一个邀请私信。而当时的浙三爷正将精力放在别的作品上，便随手给了制作人几篇来不及写的稿件想打发他。</p>\n<p data-pid=\"tRJVno5k\">无心插柳，作品却在知乎火了起来，也让双方有了进一步合作的想法。两人在北京碰面。开了 4 个小时的策划会，「仅有一个初步的想法，更多的都是交流故事写作本身，而这个小想法正是后来的《时空缉凶》。」</p>\n<p data-pid=\"vqNewPum\">2021 年 7 月《时空缉凶》正式发布，刷新了他此前的个人记录。而后浙三爷基于大故事线，分别在 2021 年 10 月份写了《时空缉凶：罪恶之地》，2022 年 1 月写了《时空缉凶：起死回生》，截至目前三部作品的知乎评分，均在 9 分以上。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-a2e4b79b61e61275a1fd498e496a4fca_b.jpg\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1877\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-a2e4b79b61e61275a1fd498e496a4fca_r.jpg\"><figcaption>浙三爷《时空缉凶》三部曲</figcaption></figure><p data-pid=\"XhcDgUAm\">8 年的写作经历，敲下的 2800 万字，成为改变浙三爷人生轨迹的直接因素。当问到为什么他可以一直维持高强度输出，他的回答是「极其爱工作」。但考虑到写作与赚钱的直接关联，「穷怕了」可能是更深的原因。</p>\n<h2>「废柴逆袭的爽文人生」</h2>\n<p data-pid=\"PYq1AIG1\">浙三爷人生的前 28 年，被细碎地写进知乎的 581 个回答里。</p>\n<p data-pid=\"fC023z9X\">2017 年 12 月到 2022 年 3 月 9 日，浙三爷在知乎回答了 581 个问题，问题五花八门，他也什么都答。但其中也有一以贯之的逻辑线，那就是他的人生经历。</p>\n<blockquote data-pid=\"umL5PvFv\">「小时候，我们一家五口挤在小小的阁楼里，没有窗户，没有门，用一个布帘当门，只放了两张床。家里没有车，搬家、办事总得蹭别人的车。母亲抱着他坐在五菱宏光小货车的副驾，哥哥姐姐坐在后边的货车箱，父亲只能走路前往，因为实在是坐不下了。」</blockquote>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-7dcd5014e582db1027e3d6f42622d09b_b.jpg\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1440\" data-original=\"https://pic4.zhimg.com/v2-7dcd5014e582db1027e3d6f42622d09b_r.jpg\"><figcaption>浙三爷家的祖屋老宅。浙三爷：「家里二楼总是放着棺材，以前我奶奶就喜欢把棺材放在床边睡觉，搞得我每次上楼挺害怕的。」</figcaption></figure><p data-pid=\"Kasevfq5\">后来，家里买了新房，一家人住进了 200 多平，厕所有浴霸，厨房有微波炉的大房子。「直到过年债主上门讨债，我才知道家里为了买房欠债累累，但我妈妈不在乎，她说今天买不起房，未来一定买不起房。钱就是她借的，而且是高利贷。」</p>\n<p data-pid=\"DT340Qws\">上初一时，浙三爷被学校里的不良少年拉进小巷，警察来了没挨打，「第二天，我买了把刀放在抽屉里。那天起学坏了，再也不被欺负了。」但他也遗憾，如果自己没有妄图和那群人讲道理，「我也不会学坏成绩变差，就不会考上那个高中，不会遇到那群欺负我是农民家庭的富二代，我就可以好好读书考上大学。」</p>\n<p data-pid=\"H2ucHv53\">高一辍学后，他辗转打了 3 年零工，全职写作小有成就后，自己的日子好了起来，帮家里还上欠了 9 年的高利贷，也买了自己的房子和车子。</p>\n<p data-pid=\"JQX4hOcr\">将他这些年的经历串成一条线，也就理解为什么老是有读者在评论区催他写自传，大概是因为人们也将他的经历视为一本「废柴逆袭的爽文」，在阅读里，期待自己的生活能出现另一种可能。</p>\n<p data-pid=\"RDFKu35g\">这些回答也见证了他的成长。2020 年他在知乎写自己故事时，常被人说成编故事，因此老爱和人硬刚，甚至为了自证清白，晒出「工资条」。「现在我只是努力在变得更温柔，因为我不想永远做个孩子气爱吵架的人。」</p>\n<p data-pid=\"VsvpR7pI\">回看过去的作品时，他会觉得以前的内容太黑暗，没有爱在里面。「那时候写的大多都是『生死看淡，不服就干』，现如今都 27 啦（我妈总说我 28，我认为她是错的！），现在喜欢写一些『珍惜眼前的幸福、珍惜眼前的人』之类的作品。」</p>\n<p data-pid=\"ECL2Hipl\">在粉丝眼里，浙三爷是「软萌」的。因为买到一包发霉软糖从此再也不吃软糖；胆小，怕鬼，不敢走四楼，一个晚上睡觉也要开灯的人，写出了霸榜的灵异文；在知乎分享最多的图片是自己做的美食……</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-37bf34f1a9f8d3ff3cd49bf5890d1398_b.jpg\" data-size=\"normal\" data-rawwidth=\"663\" data-rawheight=\"885\" class=\"origin_image zh-lightbox-thumb\" width=\"663\" data-original=\"https://pic1.zhimg.com/v2-37bf34f1a9f8d3ff3cd49bf5890d1398_r.jpg\"><figcaption>浙三爷做的菜</figcaption></figure><p data-pid=\"BV0MaQRs\">如今，浙三爷在知乎获赞 147 万次，积累粉丝超过 20 万。但他还是和两年前一样，不喜欢被称为大 V。</p>\n<p data-pid=\"xlY5zP8C\">「因为我把作品和回答分开，知乎归根结底是我最爱玩耍的地方，我不想因为和知乎有了合作而改变这一切。我觉得作者还是要拿作品说话的，作品足够好，读者才亲近。」</p>\n<p data-pid=\"Ich7s66p\">「在我的心里，我从来只是一位作者。如果老天不眷顾我，那么我会一本接一本，努力再努力，直到证明自己的价值。 」 </p>\n<hr>\n<p data-pid=\"jrJXn3Uv\">跟浙三爷聊完他的经历，局长油然而生一股敬佩之情，坚韧的力量可以抵御一切困境，浙三爷的故事人生经历就是最好的证明。</p>\n<p data-pid=\"zPycr7hB\">再联系到他笔下的故事，正义终将战胜邪恶，那些关于得到与失去的欣喜或遗憾，或多或少在他的笔下得到了回应。</p>\n<p data-pid=\"GN7pWDFj\">好了，局长就不在这里剧透了！如果你还没有看过《时空缉凶》三部曲，快去看看吧～不说了，局长要发奋图强努力工作去了！</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-1b868ad82d5dbe3352b6330dbae36c0b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"440\" data-rawheight=\"440\" class=\"origin_image zh-lightbox-thumb\" width=\"440\" data-original=\"https://pic4.zhimg.com/v2-1b868ad82d5dbe3352b6330dbae36c0b_r.jpg\"></figure><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/gu-shi-dang-an-ju-71?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">故事档案局</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/494367633?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：可口可乐推出「像素味」无糖可乐、荣耀发布 Play6T 系列新品","date":"2022-04-08 01:00:00","description":"LG 推出 gram 便携显示器，Meta 取消 2022 年 F8 开发者大会等<a href=\"https://sspai.com/post/72537\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72537"},{"title":"潍柴动力董事长谭旭光称「无人驾驶就是忽悠，辅助驾驶是希望」背后有那些信息值得关注？你认可这个观点吗？","date":"2022-04-07 10:46:01","description":"\n<p data-pid=\"r_Fx9x0B\">同意谭董事长的大部分观点。但是谭在描述的过程中，也犯了概念混淆的错误，错把L4的自动驾驶当成了L2的辅助驾驶。</p>\n<p data-pid=\"gN6RfBHr\">首先，我们来看看国际自动机工程师学会（SAE）在<i>Taxonomy and Definitions for Terms Related to On-Road Motor Vehicle Automated Driving Systems</i>一文中建立了的关于汽车自动化的六级划分:</p>\n<p data-pid=\"zlGxobQX\"><b>Level 0: 非自动化（No Automation）</b></p>\n<p data-pid=\"rOk50wXO\">Level 0被称为“非自动化”，指的是在交通工具行驶的过程中，驾驶员具有绝对控制权的阶段。</p>\n<p data-pid=\"cqNuzTQm\">在Level 0阶段，普通驾驶环境下的控制主体、紧急驾驶环境的控制主体、环境监控的主体均为驾驶员，没有系统支持的驾驶模式。</p>\n<p data-pid=\"itLIMFpm\"><b>Level 1: 辅助驾驶（Driver Assistance）</b></p>\n<p data-pid=\"nkZK1g-e\">Level 1被称为“辅助驾驶”，指的是驾驶员能够在有限时间内有条件地将部分控制权转移给系统的阶段。</p>\n<p data-pid=\"5D4rLRjn\">在SAE分级体系下的Level 1阶段，系统在同一时间至多拥有“部分控制权”——要么控制转向，要么控制油门/刹车，因此普通驾驶的控制主体为驾驶员和系统。当出现紧急情况突发时，司机需要随时做好立即接替控制的准备，因此紧急驾驶环境下的控制主体为驾驶员 ；此外，由于系统无法对环境进行监控，环境监控的主体依旧是驾驶员；系统仅支持部分驾驶模式。</p>\n<p data-pid=\"IpcUGg5T\"><b>Level 2: 半自动化（Partial Automation）</b></p>\n<p data-pid=\"UdtOgoxK\">Level 2被称为“半自动化驾驶”，是指驾驶员能够在有限时间内有条件地将全部控制权转移给系统的阶段。</p>\n<p data-pid=\"IfQhDl40\">与Level 1不同，Level 2阶段转移给系统的控制权从“部分”变为“全部”，也就是说，在普通驾驶环境下，驾驶员可以将横向和纵向的控制权同时转交给系统。</p>\n<p data-pid=\"vHLCV5LA\">因此，在Level 2阶段，普通驾驶环境下的控制主体为系统，紧急驾驶环境的控制主体为驾驶员；环境监控的主体为驾驶员；系统仅支持部分驾驶模式。</p>\n<p data-pid=\"lZLRghB_\"><b>Level 3: 有条件的自动化（Conditional Automation）</b></p>\n<p data-pid=\"v2eenFer\">Level 3被称为“有条件地自动化”，是指系统完成大多数的驾驶操作，仅当紧急情况发生时，驾驶员视情况给出适当的应答的阶段。</p>\n<p data-pid=\"xqgLpfVQ\">“适当应答”是说当紧急情况发生时，驾驶员会尽可能“做出应答”，接替系统成为控制的主体；但是也有可能在某些的情况下（如转换时间太短的情况）无法做出应答”，不能接管控制权——此时就由系统继续对车辆进行控制，并尝试将风险降到最低。</p>\n<p data-pid=\"hqk-ZbBQ\">在Level 3阶段，普通驾驶环境下的控制主体为系统，紧急驾驶环境的控制主体为驾驶员或系统；环境监控的主体为系统；系统仅支持部分驾驶模式。</p>\n<p data-pid=\"a67h3kaZ\"><b>Level 4: 高度自动化（High Automation）</b></p>\n<p data-pid=\"IgYHNsbe\">Level 4被称为“高度自动化”，是指自动驾驶系统在驾驶员不出做“应答”的条件下，也可以完成所有的驾驶操作的阶段。</p>\n<p data-pid=\"3lwrJbQE\">因此在Level 4阶段，普通驾驶环境和紧急驾驶环境的控制主体均为系统；环境监控的主体为系统；系统仅支持部分驾驶模式。</p>\n<p data-pid=\"LXWN5VgD\"><b>Level 5: 全自动化（Full Automation）</b></p>\n<p data-pid=\"kui5aU-N\">Level 5被称为“高度自动化”，与Level 0、Level 1、Level 2、Level 3、Level 4最为主要的区别在于，系统能够支持所有的驾驶模式。在这一阶段中，可能将不再会允许驾驶员成为控制主体。</p>\n<p data-pid=\"y44e5Vev\">因此在Level 5阶段，普通驾驶环境下的控制主体、紧急驾驶环境的控制主体、环境监控的主体均为系统；系统支持所有驾驶模式。</p>\n<p data-pid=\"QrYssSPh\">其中，之所以大多数人认为L3级别的自动驾驶无法实现，不仅仅是因为场景复杂，还有一个原因就是L3中有大量的法律争议问题。关于这块儿的讨论，可以参考我以前的回答：</p>\n<a href=\"https://www.zhihu.com/question/437010385/answer/1684864833\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-989e35f1888323c4ae37f9cd11cc9f2e_qhd.jpg?source=b1748391\" data-image-width=\"1824\" data-image-height=\"897\" class=\"internal\">现阶段车企在宣传自动驾驶功能时提及到最多的是L2+或L2.5级，是出于技术量产瓶颈还是法律法规限制？</a><p data-pid=\"OsnEP_a8\">同时，如果大家还能够找到资源的话，可以去看看前几年“网易·未来”举办的自动驾驶的行业会议，里面专门有一个part来讨论为什么车企不愿意做level 3场景的自动驾驶。</p>\n<p data-pid=\"3FV_5nzs\">而谭董事长言论中的概念混淆，是把特定环境可实现的自动驾驶当作是Level 3以下的辅助驾驶了。而实际上这应当是Level 4 的自动驾驶。</p>\n<p data-pid=\"Lcx17rCi\">这也是SAE分级体系中非常吊诡的一点，Level 4的自动驾驶比Level 3的自动驾驶更容易实现。</p>\n<p><br></p>\n<p data-pid=\"p1xGuczv\">软件定义汽车的时代，关于无人驾驶能否实现，可以看看我的这个视频：</p>\n<a href=\"https://www.zhihu.com/zvideo/1450219687905226752\">【德国博士】软件定义汽车的时代，L5自动驾驶能否实现？未来智慧交通长啥样？</a>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/ruobingshen?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">留德华叫兽</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/525589861/answer/2425829101?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">186 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/525427628?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">谭旭光称无人驾驶是忽悠，辅助驾驶是希望，对此你如何评价？</a><br><a href=\"http://www.zhihu.com/question/40910893?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价驭势科技这个公司？</a><br>\n","link":"http://www.zhihu.com/question/525589861/answer/2425829101?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"新玩意 101｜少数派的编辑们最近买了啥？","date":"2022-04-07 09:24:31","description":"「暴风」来袭，「海鸥」成片。<a href=\"https://sspai.com/post/72523\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72523"},{"title":"【小考据】高畑勋与初音未来","date":"2022-04-07 09:00:25","description":"\n<p data-pid=\"nbMCGu77\">前天 4 月 5 日，是动画导演·高畑勋的忌日，刚好和群友们考据了他和初音未来、Vocaloid 的关系。以下为动画制作人西村义明在高畑勋导演的《辉夜姬物语》的制作日记翻译：</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"X21MRR7S\">高畑先生的剧本工作进展艰难。有一天，我去了高畑家，高畑先生像往常一样摆弄电脑，但是，他没有打开文档。你到底在做什么！？</p>\n<p data-pid=\"ZvYVCdWK\"><b>高畑先生：“西村，你知道幽门菌（Pylori 菌）吗？”</b></p>\n<p data-pid=\"oVord_p_\"><b>西村：“我听说过。是在胃里的家伙来着？”</b></p>\n<p data-pid=\"xZaTqiF7\"><b>高畑先生：“是的。我在上次的体检中发现这些东西了哦，好像得胃溃疡或者胃癌的可能性会增加。其实应该必须根治。”</b></p>\n<p data-pid=\"iDYly0rL\"><b>西村：“那，好像是根治比较好。”</b></p>\n<p data-pid=\"aiy61Sa8\"><b>高畑先生：“那么，你知道幽门菌的全名吗？”</b></p>\n<p data-pid=\"hfv2x4XO\"><b>西村：“全名？ 不，我不知道。”</b></p>\n<p data-pid=\"uV1l3xHO\"><b>高畑先生：“是叫幽门螺杆菌（Helicobacter pylori 菌）啊，Helicobacter！ ”</b></p>\n<p data-pid=\"OJXNgZ_R\"><b>西村：“Helicobacter……吗？”</b></p>\n<p data-pid=\"Ye6rQYKK\"><b>高畑先生：“嗯。那你知道《幽门螺杆菌之歌》（ピロリ菌のうた）吗？ ”</b></p>\n<p data-pid=\"fC14rcn0\"><b>西村：“《幽门螺杆菌之歌》……我不知道。”</b></p>\n<p data-pid=\"N51y5N51\"><b>高畑先生：“初音未来你知道吗？”</b></p>\n<p data-pid=\"lmCreUN-\"><b>西村：“是那个绿头发的家伙吧。”</b></p>\n<p data-pid=\"J1bcG3DO\"><b>高畑先生：“嗬。初音未来明明知道，《幽门螺杆菌之歌》却不知道……这样吗？”</b></p>\n<p data-pid=\"JkdHutKL\">于是，高畑先生打开了YouTube。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-f83c8dca28432ebe16758ed3bbe9f680_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"450\" data-rawheight=\"162\" class=\"origin_image zh-lightbox-thumb\" width=\"450\" data-original=\"https://pic1.zhimg.com/v2-f83c8dca28432ebe16758ed3bbe9f680_r.jpg\"></figure><blockquote data-pid=\"oetulMbH\">嘶嘶锵锵<br>嘶嘶锵锵<br>―♪你的身体里～<br>Piroriro Piroriro 幽门螺杆菌<br>侵蚀身体的细菌<br>Piroriro Piroriro 幽门螺杆菌♪</blockquote>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<a href=\"https://www.zhihu.com/zvideo/1495421758903164928\" data-draft-node=\"block\" data-draft-type=\"link-card\"></a><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"n2U5XeIO\">在没有开灯的昏暗安静的房间里，笔记本电脑的劣质扬声器传来的“Piroriro Piroriro 幽门螺杆菌”的声音。高畑先生没有表情地坐在电脑桌前，我就在那站着，空气中弥漫着难以言喻的气氛。</p>\n<p data-pid=\"dbbWRR0B\">然后，</p>\n<p data-pid=\"nSBo1okQ\"><b>高畑先生：“……怎么样？”</b></p>\n<p data-pid=\"KQMGslgM\"><b>西村：“您说什么怎么样……”</b></p>\n<p data-pid=\"iry7lbJO\"><b>高畑先生：“……嗯，就是说怎么样？”</b></p>\n<p data-pid=\"B2h4S6UI\"><b>西村：“诶，好歌吧……”</b></p>\n<p data-pid=\"ZkwxItst\"><b>高畑先生：“你也懂是吧！就是这样啊！能感觉到是首好歌！”</b></p>\n<p data-pid=\"eTW9eHkh\">高畑先生兴奋地开始考察初音未来的“萌”，我们一个劲儿地看着 YouTube 上初音未来的影像。</p>\n<p data-pid=\"OR7_TIHG\"><b>“拿着葱，只要摇摇晃晃就能出现的这种‘萌’的感觉，很值得研究哦。吉卜力的动画师也应该康康这个学习一下。”</b></p>\n<p data-pid=\"Wr2hwTdz\">初音未来和高畑先生的相遇，就是在这个时候。几年后，高畑先生和我将以另一种形式与初音未来再会。</p>\n<p data-pid=\"JMbsL8f7\">（引用：《ピロリ菌のうた》作词：ピロリロＰ　作曲：ピロリロＰ　歌：初音未来）</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-1ed22bb42db8a9cb694ddbf793765fcd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"450\" data-rawheight=\"162\" class=\"origin_image zh-lightbox-thumb\" width=\"450\" data-original=\"https://pic2.zhimg.com/v2-1ed22bb42db8a9cb694ddbf793765fcd_r.jpg\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//lineblog.me/studioponoc/archives/110417.html\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">&lt;悲惨日誌 第42回&gt; ピロリ菌のうた : スタジオポノック 公式ブログ</a><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"EcRwcG2z\">以上，这篇日记到此结束，那么后续是怎样的情况呢，吉卜力工作室官网《辉夜姬物语》的页面有记载道：</p>\n<p data-pid=\"YIIOxzgN\">负责音乐的事吉卜力工作室的宫崎骏导演作品的常客久石让。如今虽已是世界闻名地、日本电影音乐第一人，但让他一跃成为万众瞩目的契机，是高畑勋作为制作人参与的《风之谷的娜乌茜卡》。</p>\n<p data-pid=\"cDe0QWQt\">今年（2013年）夏天上映的《起风了》的音乐虽然也是由久石担任，但由于《辉夜姬物语》制作缓慢，没能实现和《起风了》同日上映，但却实现了（久石）参与到《辉夜姬物语》中去。在高畑导演的强烈愿望下，过了 30 年的时间，（久石）才终于和那个可以说是发掘了自己才能的高畑导演结成了“相思相爱”的初交。</p>\n<p data-pid=\"Wgc79_i-\">顺便一说，剧中歌《わらべ唄》《天女の歌》，是由高畑导演和剧本家坂口理子作词，高畑导演作曲的。据说为了说明歌曲的意图，用了“初音未来”制作了 demo ，并拿给久石听。（以下略）</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-ce00d44b124a9f65e1f4aa70427f041b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1347\" data-rawheight=\"1112\" class=\"origin_image zh-lightbox-thumb\" width=\"1347\" data-original=\"https://pic4.zhimg.com/v2-ce00d44b124a9f65e1f4aa70427f041b_r.jpg\"></figure><a href=\"https://link.zhihu.com/?target=https%3A//www.ghibli.jp/kaguyahime/prono.html\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-b209de76f6b606b53e8c8934471309ca_l.jpg\" data-image-width=\"300\" data-image-height=\"300\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">映画『かぐや姫の物語』公式サイト</a><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"YhvNMF_F\">最后以群友“<span class=\"nolink\">17寸的天空</span>”的话来收尾吧：对新事物永远能快速接纳的阿朴（高畑勋的昵称），即使到七十七、七十八这个年纪依然能成为ボカロP。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<hr>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"xVLo0x9h\">以下是无端联想，权当顺带考据存档——</p>\n<h2>冲击宫崎骏的 3DCG 观念的《超时空要塞7》</h2>\n<p data-pid=\"-b241Sm7\">曾经在吉卜力担任CG工作的片塰满则（《BLAME!》摄影监督、《哈尔的移动城堡 》作画监督）在推上晒了两个进入吉卜力之前负责的《On Your Mark》的CG镜头，并说道：</p>\n<p data-pid=\"0yKCIKh4\">1994年秋天，我带着装有《超时空要塞Plus》和《超时空要塞7》的CG镜头的录像带去吉卜力谈工作的四个月后，宫崎导演直接给我打了电话给我工作。</p>\n<p data-pid=\"1tGS9yIo\">补充1：接到宫崎导演的电话的是当时所属的（Studio）Lings的制作部长T先生。对于吉卜力发来的工作感到兴奋的T先生，因为不知道《超时空要塞》已经提案了的事，所以说了这样的话：“由特别小组来负责。”虽然有些焦躁，但结果还是由我来负责，于是放心了。</p>\n<p data-pid=\"LduX3WdY\">补充2：飞往隧道的飞行艇（？）不是3DCG，是大塚伸治的作画。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-4aec0d563b2bf880d4cbbe9cd45c1426_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"480\" data-rawheight=\"270\" class=\"origin_image zh-lightbox-thumb\" width=\"480\" data-original=\"https://pic3.zhimg.com/v2-4aec0d563b2bf880d4cbbe9cd45c1426_r.jpg\"></figure><p data-pid=\"tVaiSIUK\">补充3：虽然写的是3DCG的镜头，但未来都市的细节（窗户和细小凹凸等）并不是用3D模型来制作出来的，是把美术监督武重洋二先生绘制的背景画，用Camera Projection Map这种CG技术，贴在粗略的模型上，类似于“立体书”那种程度的立体。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-5989c35f7d5ee2ff5b643a76afaa7a5f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1038\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-5989c35f7d5ee2ff5b643a76afaa7a5f_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-a8faa8ec57eba84025cb61fc6ad66133_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1038\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-a8faa8ec57eba84025cb61fc6ad66133_r.jpg\"></figure><p data-pid=\"G-sde_iv\">补充4：接到电话后，第一次见面时导演的第一句话是“我画了数码合成了做不到的分镜……”，于是，一边展示着正面接近隧道的镜头，一边开始了讨论。</p>\n<p data-pid=\"kfgWseGA\">补充5：当时吉卜力同时制作的《侧耳倾听》（不如说这部才是放在首位的）是吉卜力首次采用“数码合成”的作品，对于作为指挥的宫崎导演来说，我觉得他对数码技术制作影像的抵触心理有所减少了。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-1a0418df1bb74826585c82f553d1f5ae_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"4817\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-1a0418df1bb74826585c82f553d1f5ae_r.jpg\"></figure><p data-pid=\"FNsXkFX-\">因为片塰满则亲自出来讲述这段往事，这也让许多动画迷一直流传的都市传说得到了印证——宫崎骏因为看了《超时空要塞7》OP的3DCG，而认可了CG这种方式。之前很多人搞不懂为什么宫崎骏要看《超时空要塞7》。</p>\n<p data-pid=\"NrecQszQ\">对此，原画师今井有文（《巨人》1-3季作画监督）也回应道：自己学生时代参加的Anime Style活动中，作为嘉宾的片塰先生就说过这件事，宫崎导演把《超时空要塞7》的OP的开场部分（镜头从阳台上的主人公一口气拉到宇宙）来回看了好几遍。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-a66f8e75a97aecd789381a453cd9ed48_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"480\" data-rawheight=\"270\" class=\"origin_image zh-lightbox-thumb\" width=\"480\" data-original=\"https://pic1.zhimg.com/v2-a66f8e75a97aecd789381a453cd9ed48_r.jpg\"></figure><p data-pid=\"V-htsLnI\">以上译文都首发在微博“名作之壁吧_壁姐姐”上。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/ta-ta-jun-minkun?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">塔塔君Minkun</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/494525483?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"为了能更好地做饭，有人做了个「程序员做饭指南」","date":"2022-04-07 08:16:09","description":"至少你能看懂「适量」和「少许」了<a href=\"https://sspai.com/post/72308\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72308"},{"title":"《艾尔登法环》打很多 Boss 都有逃课的方法，是宫崎英高有意而为之，还是设计组没有想到的 BUG?","date":"2022-04-07 06:45:19","description":"\n<p data-pid=\"bddYMU0d\">怎么说呢？</p>\n<p><br></p>\n<p data-pid=\"UnhKE5dZ\">讲到bug这个东西，我自己考虑的是“这个东西是不是属于设计缺失”，而不是给游戏的机制和内容去下一个对与错的定义。</p>\n<p><br></p>\n<p><br></p>\n<p data-pid=\"gO7pBFRi\">也就是说，设计者可能不是有意为之的，却又能将这一机制实现到游戏引擎当中。</p>\n<a href=\"https://www.zhihu.com/video/1495409705674006528\"></a><a href=\"https://www.zhihu.com/zvideo/1484228385940979712\">【艾尔登法环】这是一只平平无奇的流血狗……上面还有一群</a><p><br></p>\n<p data-pid=\"Z-gDBrrL\">打个比方，奉反机制。</p>\n<p data-pid=\"PYN8566W\">设计者可能是为了做一个“反射机制”的东西，所以设计了奉反类招式，而实现方式是“吸收对方的非残留型飞行道具”，然后作为条件生成“反击”的飞行道具。</p>\n<p><br></p>\n<p data-pid=\"-vs0StfM\">而问题出现在，“吸收飞行道具”这一奉反触发条件，并没有办法区分“敌我”，导致敌人和友方甚至是玩家自己的一些飞行道具，只要奉反的吸收判定够得着，就可以吸收，进而触发“奉反”。</p>\n<p data-pid=\"bWkmNeLD\">这个就是“设计缺失”的体现，也就是设计者没想到奉反的吸收机制条件过于宽松，没有设立独立的触发条件。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-2427757c35b0dba23962c0d2b01e9a97_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1597\" data-rawheight=\"941\" data-watermark=\"watermark\" data-original-src=\"v2-2427757c35b0dba23962c0d2b01e9a97\" data-watermark-src=\"v2-62f5b313b4193ad093bad61a84f1394e\" data-private-watermark-src=\"v2-c606095108c5ddbc44144fa8345d6b0d\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-19f5af705c7761e5ba5cf0eaaba752da_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1120\" data-rawheight=\"882\" data-watermark=\"watermark\" data-original-src=\"v2-19f5af705c7761e5ba5cf0eaaba752da\" data-watermark-src=\"v2-60eb1eaaf894d99e7078426821e4700e\" data-private-watermark-src=\"v2-770f36ba0701f0e2a26b4f74e871652b\"></p>\n<p><br></p>\n<p><br></p>\n<p data-pid=\"YPp0H0Il\">就好像题目讲的岩石球隔门砸死，其实真的要改也不复杂，例如把岩石球的生成方向改变，例如从“面前”改到“头顶”，那么生成的岩石不能越过雾门。</p>\n<p data-pid=\"N_L0ir4q\">但为什么不修复呢？</p>\n<p data-pid=\"tVL6A0Q1\">因为这个的优先权并没有那么高，也就是没那么重要。</p>\n<p><br></p>\n<p data-pid=\"TqYHVxDV\">只狼以前就有一个叫“谢谢你”的邪道，就是用一些办法让怪物跳崖，用滞空时间规则击杀boss，刚好怨鬼被杀了就会说谢谢你。</p>\n<p data-pid=\"iUSbl8KG\">这个逃课套路对于一些卡关的朋友来说，的确是个好办法。</p>\n<p data-pid=\"sMD4ItbS\">但对于本来就需要去正儿八经打Boss的朋友呢？这个逃课套路根本就不需要用。</p>\n<p><br></p>\n<p data-pid=\"N7HOD0Qr\">因为这些战斗主导内容的游戏，你的可玩点就在战斗上，你逃课了也好，不逃课也好，对于你来说，游戏的可玩点就摆在那里。</p>\n<p><br></p>\n<p data-pid=\"9KDavIfX\">这个Boss设计了一大堆的攻击动作，是给你在战斗中处理的，不然干嘛设计Boss，整个挨打用的木桩子不就得了。</p>\n<p><br></p>\n<p data-pid=\"PyTl-dP7\">所以说，要丰富你的游戏体验，你不仅能按照游戏规则玩，还能研究游戏内容寻找游戏漏洞去体验。</p>\n<p><br></p>\n<p data-pid=\"7NGusbsp\">这也是为什么会有“bug是游戏特性”的说法。</p>\n<p><br></p>\n<p data-pid=\"CxeYhS3j\">回到问题上，我的评价是“不要想太多”。</p>\n<p><br></p>\n<p data-pid=\"KTsCh04s\">再说，给手残党通过“所谓某些邪道方法”去通关了，这会对某些人产生困扰呢？</p>\n<p><br></p>\n<p data-pid=\"jq3pjytp\">为什么别人能不能通关游戏，居然还要我去担心起来呢？对不对？</p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-0a9e57a900b69c4b4aad56532fdf06ba_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"655\" data-rawheight=\"458\" data-watermark=\"watermark\" data-original-src=\"v2-0a9e57a900b69c4b4aad56532fdf06ba\" data-watermark-src=\"v2-37fc59c163a38d944a50eefda221c68b\" data-private-watermark-src=\"v2-ca56d2b7e90e6ee6d95d0d9791c4e5da\"></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/Tyquan_Zhang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">零悠悠</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/526277021/answer/2427635348?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">36 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/518457013?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《艾尔登法环》游戏中，有哪些让你难以忘怀的 BOSS 战？</a><br><a href=\"http://www.zhihu.com/question/60777503?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">在你的游戏历程中最难对付的BOSS是怎样的？</a><br>\n","link":"http://www.zhihu.com/question/526277021/answer/2427635348?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价漫画《间谍过家家》?","date":"2022-04-07 05:33:16","description":"\n<p data-pid=\"Lcq9Mhoj\">来抛砖引玉说说这部jump+上最能打的作品吧。</p>\n<p data-pid=\"YWQR1Tnb\">这回不详细聊这作品，因为这作品多能打，剧情角色这些，以及获了什么奖这些别人会说，我不说也罢。我来说说“传承”和编辑，这两个其实是一个问题。</p>\n<p data-pid=\"XAUbAMcT\">间谍过家家的编辑是：林士平<sup data-text=\"林士平访谈（生肉）\" data-url=\"https://alu.jp/article/ivsSgDJ5eb6fUFbVwxpX\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\">[1]</sup>。这是谁呢？</p>\n<p><img src=\"https://pic1.zhimg.com/v2-aeb9cb58f1dc150ef55ecf6eb86efa30_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"663\" data-rawheight=\"497\" data-watermark=\"original\" data-original-src=\"v2-aeb9cb58f1dc150ef55ecf6eb86efa30\" data-watermark-src=\"v2-ae62f1f18f05b932031b749fd5d1dbe8\" data-private-watermark-src=\"v2-251b0c055ce8ceba5335af9ae4787658\"></p>\n<p data-pid=\"9HOdg4w8\">炎拳和电锯人的编辑。这人还做过什么作品的编辑呢？青之驱魔师；一弦定音；怪物事变；贫乏神来了；地狱乐。</p>\n<p data-pid=\"H0sUhPzT\">青驱的作者，曾经是间谍过家家作者远藤达哉的助手。地狱乐的作者做过炎拳作者藤本的助手。怪物事变的作者曾是天野明的助手，远藤达哉则是漂亮脸蛋和MX0的作者叶恭弘（这位说多了都是泪）的助手。咒术回战的作者也被传是叶恭弘or久保带人的助手。而叶恭弘则是封神演义藤崎龙的助手<sup data-text=\"漫画家谱系\" data-url=\"https://www.zhihu.com/question/46264835/answer/101060048\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"2\">[2]</sup>。</p>\n<p data-pid=\"EZKNuv01\">jump创刊比sunday,magazine晚好几年，然而成了卖的最好的漫画杂志，这靠的不光是“友情努力胜利”三要素，更重要的是另三个原则：“发掘新人，培育作家，绝对的问卷调查主义”<sup data-text=\"jump50周年纪录片\" data-url=\"https://www.bilibili.com/video/BV137411i7pS?p=1\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"3\">[3]</sup>。前两条，都是编辑做的。而漫画出来其实不光是作者，编辑在幕后也需要付出很多（内藤出来背锅）。而前两条使得Jump创刊开始就有有奖励金的漫画赏，还有手冢赤冢赏，有每月的漫画赏(什么你说评委是漫画家？总之就那个意思嘛_(:з」∠)_领会精神)，所以才能在灌篮和龙珠完结之后重新从magazine手里抢过第一把交椅。</p>\n<p data-pid=\"tdi4IhBZ\">个人认为，这也是日本漫画这么火的一个重要原因了。</p>\n<p data-pid=\"w3IBNL1t\">就这样。</p>\n<hr>\n<p data-pid=\"HQ4z1QCg\">21.3.22更新——过了一年漫画卷均百万，也快动画化了，所以我再来聊聊这个漫画...这次稍微写的具体点。剧情方面其他答主已经有较为详尽的介绍了，所以我介绍些别的内容。</p>\n<ol><li data-pid=\"5vjZG1CL\">我们还是从作者开始简单的介绍。</li></ol>\n<p><img src=\"https://pic2.zhimg.com/v2-b88ab26079261cffb3cad2c0cd09ba71_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"614\" data-rawheight=\"894\" data-watermark=\"original\" data-original-src=\"v2-b88ab26079261cffb3cad2c0cd09ba71\" data-watermark-src=\"v2-ab5ec1fe7c47f484e850991700739743\" data-private-watermark-src=\"v2-17f47e79100dbb8d5a07f6402a167a00\"></p>\n<p data-pid=\"MjwMXQXZ\">远藤达哉，00年出道，之后发表短篇月华美刃——林士平担任他的编辑，为了连载第一部作品07-08的TISTA，于是俩人去了纽约取材——作品连载结束后担任了青驱作者加藤和惠的助手——然后是10-12的第二部连载：又一部通过竹取物语延申出的故事，月华美刃——然后开始担任加藤，Amyu，藤本，贺来的助手，所以变得啥都能画，这期间14年的短篇《炼狱的阿西娅》中的女主就是本作阿妮亚的雏形——然后是18年的短篇I spy——19年正式连载间谍过家家。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-255372ca4ac723400d75779367e1f7a5_720w.jpg?source=b1748391?rss\" data-caption=\"林士平真中央空调\" data-size=\"normal\" data-rawwidth=\"1256\" data-rawheight=\"924\" data-watermark=\"original\" data-original-src=\"v2-255372ca4ac723400d75779367e1f7a5\" data-watermark-src=\"v2-9c93c639cf9d8785a1606a908739ac75\" data-private-watermark-src=\"v2-fcd2aac342502979419c7bbd571c3b41\"></p>\n<p data-pid=\"PujM0DJT\">2.创作八卦：加藤和惠某一话青驱休刊，然后去间谍过家家那里当了远藤达哉的助手；第一部连载的作品TISTA女主就是用枪的，当时在纽约取材时打靶和买的枪模也用在了本作；林编辑还买了挺多的间谍有关的书籍比如间谍词典给他，不过这些远藤达哉就摆着吃灰几乎没看；当年去了纽约取材，这次本来打算去德国取材，结果预算不够取消了。</p>\n<p><img src=\"https://pica.zhimg.com/v2-ca79fdeaddbfe7297767543f0f78f841_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"822\" data-rawheight=\"1200\" data-watermark=\"original\" data-original-src=\"v2-ca79fdeaddbfe7297767543f0f78f841\" data-watermark-src=\"v2-b14f16b6ae0bdaed31ab6361baca9ce2\" data-private-watermark-src=\"v2-6d335a8d0aa5c887571fdc266057f4ea\"></p>\n<p data-pid=\"CUOW8rcX\">作品初期其实是想走月华美刃或者TISTA那种有些暗黑的风格的，所以你看《炼狱的阿西娅》也有些黑，不过应该是被林给否了，于是有了I SPY的搞笑风短篇，然后就是本作的搞笑漫画《间谍过家家》了。</p>\n<p data-pid=\"k068Zv8g\">3. 间谍过家家的一些特点。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-fd46d0a90a67e6917ab5df00f07857e6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"407\" data-watermark=\"original\" data-original-src=\"v2-fd46d0a90a67e6917ab5df00f07857e6\" data-watermark-src=\"v2-324386feccfbc9b78c29d04d99c3521f\" data-private-watermark-src=\"v2-14b3c1ccabb7ee76ec48777da5072173\"></p>\n<p data-pid=\"wsUWmTNo\">3.1<b>设定方面</b>，通常来说，漫画只能允许一种超现实设定，比如Naruto是忍者的世界，op是海贼的世界，bleach是死神的世界，这个设定都是贯穿全篇的。所以如果Naruto同时是忍者和死神的世界，op同时是海贼和忍者的世界，就会相对比较复杂读者阅读不方便；像海贼虽然用了忍者，不过也只是在一个篇章中用，而不是贯穿全篇<sup data-text=\"凉宫春日这种你可以理解为围绕凉宫的世界\" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"4\">[4]</sup>。然而，本作的是间谍（父亲）的世界+杀手（母亲）的世界+超能力者（阿妮亚）的世界，各世界明显会贯穿全篇，本应彼此之间干扰，然而似乎目前影响还不大。原因可能基于以下几点：母亲的世界还未完全展开，目前只是充当高武力值的角色而未详细刻画杀手的世界；彼此之间不知情，阿妮亚作为超能力者可以通过“读心”平衡彼此世界使得之间不过于相互干扰从而得以共存。然而最新篇章，明显福杰和约尔的世界会彼此干扰，又不能像《史密斯夫妇》一样简单的解决这个问题，作者将怎样处理，确实是值得关注的一点。（我倾向于这个篇章介绍约尔的杀手世界，然后继续搁置走“日常”，毕竟约尔的主线基本没正经的走过。）（彼此之间都有秘密，所以我很期待最后秘密揭开的那一天，估计到了那时故事也就迈向结束了。）</p>\n<p><img src=\"https://pica.zhimg.com/v2-fc2ccb86c426fd2efbc549a970dbbfb5_720w.jpg?source=b1748391?rss\" data-caption=\"“间谍的作者已经意识到了电子版分镜和纸质分镜的不同之处”\" data-size=\"normal\" data-rawwidth=\"619\" data-rawheight=\"288\" data-watermark=\"original\" data-original-src=\"v2-fc2ccb86c426fd2efbc549a970dbbfb5\" data-watermark-src=\"v2-de06a271c9c92d6ddf0082c02760cc35\" data-private-watermark-src=\"v2-c543821a1a9f467d3e2c16a5dac8b3f4\"></p>\n<p data-pid=\"NVAaOulK\">3.2 <b>分镜处理上</b>，这个问题其实叶佳桐大佬在怪兽八号的回答<sup data-text=\"\" data-url=\"https://www.zhihu.com/question/431276720/answer/1720219811\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"5\">[5]</sup>已经提及了，我这里再简单说一下。间谍是在jump+电子平台上连载的作品，这不同于纸质杂志，一个比较明显的事情就是下面绿色图会采用左边而不是右边的分镜方式，跨页应该也会相对少一些，如果有应该也是左右结构的以便不影响阅读。（虽然像b漫和Jump+ app都有自己的跨页阅读模式，但毕竟手机的长宽比偏向于2：1，而纸质的则是3：2<sup data-text=\"页漫，条漫\" data-url=\"https://www.zhihu.com/pin/1336470268613509120\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"6\">[6]</sup>。所以必然会有空间浪费，这个问题依旧需要考虑。）</p>\n<p><img src=\"https://pic2.zhimg.com/v2-111b6db87be8fd9c449958ca7c66d94e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"706\" data-rawheight=\"234\" data-watermark=\"original\" data-original-src=\"v2-111b6db87be8fd9c449958ca7c66d94e\" data-watermark-src=\"v2-c00076b2c945edbea1b1e11ba5fb9ddd\" data-private-watermark-src=\"v2-aecd22186bd643d3549430a39fd61e9a\"></p>\n<p data-pid=\"n7WzKMXD\">当然，某些分镜，比如下面这种，也不好在电子平台出现（因为以单页为主）。与之相关的问题还比如，手机屏幕的大小明显小于杂志——所以必须要考虑字符不能过小，不然手机上看不清。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c94d06ce8a737973dd62f0bce92fcc14_720w.jpg?source=b1748391?rss\" data-caption=\"“消失的五条悟”\" data-size=\"normal\" data-rawwidth=\"2000\" data-rawheight=\"2667\" data-watermark=\"original\" data-original-src=\"v2-c94d06ce8a737973dd62f0bce92fcc14\" data-watermark-src=\"v2-05890f421aa7a5e0fa290cd83449b724\" data-private-watermark-src=\"v2-1fc704d151e2eaec0c5a077df04ec681\"></p>\n<p data-pid=\"Tu2Af6Y3\">3.3<b> 章节编排上</b>，以单元剧为主，如果是需要多话的故事，则不能过长，我认为应该在一卷单行本中解决问题。举个例子，得到大狗邦德的剧情是18-23话。虽然读者可以在app上阅读之前的剧情，但还是需要控制篇幅，让读者能花最少的时间了解一个故事——按松井优征的话说，“易读性”就是漫画的“防御力”<sup data-text=\"\" data-url=\"https://jump-manga-school.hatenablog.com/entry/06\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"7\">[7]</sup>。现在每天都是信息爆炸，所以有些时候，易读性是和趣味性同等重要的。</p>\n<p data-pid=\"J1I0PHHm\">这也是搞笑漫画的一大优势，因为搞笑漫画以单元剧为主，所以它的“防御力”是最强的。但是搞笑漫画相对故事漫画的弱点就是，如果一直走单元剧，情感不能一直酝酿，伏线也不好设置。所以搞笑漫画像故事漫画一样也会走一些剧情。但是依旧不应过长使得“防御力”下降太多<sup data-text=\"怕痛（漫画不受欢迎）只点防御有什么问题吗？\" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"8\">[8]</sup>。</p>\n<p data-pid=\"dDYh29Pc\">这里多提一点，故事类，或者说传统的jump热血漫的讨论度的确高于搞笑漫画，举个例子，哆啦a梦+蜡笔小新+樱桃小丸子在知乎的问题数（3000个左右）大概等于海贼王问题数（13000个左右）的零头。但我个人认为，搞笑漫画，或者说单元剧相对更适合这个快节奏和碎片化阅读的时代（当然两种漫画，比如龙珠和阿拉蕾没有优劣）。当然同时，热血漫故事漫也应该学习搞笑漫的模式，缩短故事章节。</p>\n<p data-pid=\"jyKt9ZRL\">3.4 <b>主题</b>方面，不知是不是错觉，最近jump上以家庭为主题的漫画比以前多了挺多，比如间谍过家家，夜樱大作战，坂本days，高校生家族，等等。不知这是因为现在的读者比起外界更关注自己<sup data-text=\"\" data-url=\"https://www.zhihu.com/question/441918496/answer/1719778297\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"9\">[9]</sup>，还是这是少子化对策之一www。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-507dc607420c4e8e50a20243865906b5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1299\" data-rawheight=\"712\" data-watermark=\"original\" data-original-src=\"v2-507dc607420c4e8e50a20243865906b5\" data-watermark-src=\"v2-e20e551dde2ccd8b5ea6d3ec4bd561be\" data-private-watermark-src=\"v2-7c6987f3c97eca4135d29db619f95d03\"></p>\n<p data-pid=\"FgBybmhp\">4.jump+相关</p>\n<p data-pid=\"JNCP40hn\">林编辑给作者订的标准大概是每隔一周20页；而月刊是一个月45页~周刊则是一个月60-76页左右的样子，所以工作轻松很多，可以构思剧情。藤本则在访谈中提到，“jump+超级自由的。少年Jump的话必须要每话19页，为了对应页数真是消耗脑细胞。但是j+没有硬规定，一话可以在15～25页之间。”<sup data-text=\"\" data-url=\"https://bbs.hupu.com/41517688.html\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"10\">[10]</sup>尾田也说了如果每周把30页压缩到17页需要不少功夫<sup data-text=\"\" data-url=\"https://tieba.baidu.com/p/7235966704?pn=1\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"11\">[11]</sup>。jump+相对于jump也没有20部的连载数量上限限制，可以连载几十上百部作品，连载时间也相对宽松，比如怪八基本也是两周一更。另外可以不从顺位，而是通过点击量来判断自己的作品是否受欢迎，这波的确是利好jump+。也因为这宽松的条件，间谍目前的成绩应该是继暗杀之后最强的未动画化漫画成绩了（怪八可能超了？）。jump+主编说，本刊辉煌的时候，发行量是600w+,他们希望jump+能做到这一点（平台活跃人数）。我认为他们将来能做到<sup data-text=\"\" data-url=\"https://tieba.baidu.com/p/7265707889?pid=138377028606&amp;cid=138384059666#138384059666\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"12\">[12]</sup>。</p>\n<p><br></p>\n<p data-pid=\"IZO1sW0y\">就这样，其实还有一些可说的，不过不放在这篇里说~这篇谈这些我觉得应该足够了。</p>\n<hr>\n<p data-pid=\"qflvxj93\">22/4/7 </p>\n<p data-pid=\"Jj9SBHLQ\">快开播了，简单再说两句。我个人很喜欢最新话对黄昏童年故事的挖掘。间谍过家家的故事虽然一直是欢乐向的，但其实我们都知道背景参考的是东西德。这就说明故事里的和平只是艰难维持的和平。第20话的时候，黄昏对管理官说，我已经受够战争了。阿妮亚和大狗都是某个组织的实验体，约尔为了弟弟当了杀手，可以看出这重组家庭一家的背景其实都是破碎的，这就更显出家庭对他们的重要性，也就有了53话约尔战斗时对自己的追问”我究竟是为了什么战斗的？“所以间虽然我一直说着间谍过家家是个类似史密斯夫妇的故事，但其实这可比史密斯夫妇沉重多了。话说回来，最近几话间谍的故事我个人感觉有点在往更负面的情感靠拢，大概随着故事的进行，环境的影响会越来越凸显出来。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-13ee767b9942c14a9e49ca9a799dd6bd_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1176\" data-rawheight=\"922\" data-watermark=\"original\" data-original-src=\"v2-13ee767b9942c14a9e49ca9a799dd6bd\" data-watermark-src=\"v2-47c542ad4bf29a1a079d42ee4033557c\" data-private-watermark-src=\"v2-16a3544670ce7b2c28f531c559e59703\"></p>\n<p data-pid=\"a3KAVDYg\">就暂时补充这些，作为一部开播前卷均就基本达到150w、初版100w的作品，间谍能说的点还有很多，看什么时候再想说吧。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/tan-shu-shu?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">云吞花卷</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/320063279/answer/1280690456?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">36 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/495572184?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">漫画《间谍过家家》宣布动画化，你有哪些期待？</a><br><a href=\"http://www.zhihu.com/question/364054483?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么日本轻小说动漫大多明明是拯救世界的规模却感觉是过家家，格局感如此小？</a><br>\n","link":"http://www.zhihu.com/question/320063279/answer/1280690456?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"中文的直角引号 「」、『』 源自哪里？","date":"2022-04-07 03:49:45","description":"\n<p data-pid=\"ejPtjnSH\">我花了不少时间收集、购买相关资料，或是进行扫描、整理。在这里你将看到很多关于中国大陆引号历史的图像资料，在此之前只有各处散落着零碎的、不够直观的文字描述。人们似乎很容易会误将直角引号脑补为中国传统，但实际情况是「直角引号」和「弯引号」都是舶来品。</p>\n<p data-pid=\"6v1ukFVl\">我要解释清楚两件事：</p>\n<ol>\n<li data-pid=\"gYwn_Vgf\">「直角引号」究竟源自哪里？</li>\n<li data-pid=\"8gnx1Zjo\">「直角引号」和「弯引号」是什么时候用到中文排版里的？</li>\n</ol>\n<hr>\n<h2>「直角引号」究竟源自哪里？</h2>\n<p data-pid=\"_H_25IEu\">常看到有人将「庵点」视为直角引号（鉤括弧）的起源，但我不太认同。</p>\n<p data-pid=\"htZHOfA2\">早在奈良时期的日本，就有叫做「庵点」的符号，它原本是一个唱段起头的标识，与直角引号的功能并不相同，但仅做外表对比的话，庵点只是前半部分，没有后半部分。</p>\n<p data-pid=\"CR2-ksZa\">庵点在历史上有多种不同的造型，弯曲的、折线的、直线的。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-da8cba829760fea83a4514101a800f2f_720w.jpg?source=b1748391?rss\" data-caption=\"1818年，十返舎一九，《口取肴》\" data-size=\"normal\" data-rawwidth=\"184\" data-rawheight=\"178\" data-watermark=\"watermark\" data-original-src=\"v2-da8cba829760fea83a4514101a800f2f\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><br></p>\n<p data-pid=\"7bvj3Su0\">接下来是江户时代，矢作勝美老师在刊物《MOJICA》九五年八月发行的第二期第九页中发表的研究里面，可以看到一个例子。这个1809年的滑稽本《浮世風呂》中的庵点（下图最右）是用作对话标记的，在庵点附近会标记人名。而且这种对话标记的用法一直延续到了明治时期，比如下图左侧的两个作品。</p>\n<p data-pid=\"T_juMuRU\">感谢 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/e40204272b22d519b1848517520ce3cb\" data-hash=\"e40204272b22d519b1848517520ce3cb\" data-hovercard=\"p$b$e40204272b22d519b1848517520ce3cb\">@Eric Liu</a> 刘庆老师帮忙取得这个杂志中相关部分的照片。</p>\n<p data-pid=\"Y8Bt4TpI\">它仍然只有前半部分，没有后半部分，但在这个作品中庵点的造型是坚硬的折线。</p>\n<p><img src=\"https://pica.zhimg.com/v2-538a00a1717491058765b71078a739ef_720w.jpg?source=b1748391?rss\" data-caption=\"1995年，矢作勝美的研究，《MOJICA》\" data-size=\"normal\" data-rawwidth=\"1272\" data-rawheight=\"1330\" data-watermark=\"watermark\" data-original-src=\"v2-538a00a1717491058765b71078a739ef\" data-watermark-src=\"v2-eeba99205d06d287204f4da5a5d531f6\" data-private-watermark-src=\"v2-851e0c6c27ead6f67f9b63bef4324d56\"></p>\n<p><br></p>\n<p data-pid=\"yWm4jfWr\">与「庵点」相对的是后半部分「鈎画」，按照如今日本对于直角引号（鉤括弧）起源的说法，它源于汉文，是日本解读古代中文时作为分段用途的。这个符号在中国历史上始终存在，一般称作「钩识号」或「直角号」，甚至可以追溯到先秦、两汉时期，但与直角引号的用途并不相同。</p>\n<p data-pid=\"buAUuWEe\">我手里有一本中文作品，1864年赵之谦所著《六朝别字记》的影印版，扫描给大家看。这个作品中，就使用了直角样式的符号来进行分段。</p>\n<p data-pid=\"44sAfD3G\">但这一页里面很有趣的是，作者为了补充画了一条折线，误打误撞把一段文字给括起来了，神似直角引号……当然，这只是趣事罢了。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-93733a57afd20dc53332f34f75969503_720w.jpg?source=b1748391?rss\" data-caption=\"1864年，赵之谦，《六朝别字记》\" data-size=\"normal\" data-rawwidth=\"5395\" data-rawheight=\"4299\" data-watermark=\"watermark\" data-original-src=\"v2-93733a57afd20dc53332f34f75969503\" data-watermark-src=\"v2-ec012b2a3a10ac5fbf4205837a1b9d2c\" data-private-watermark-src=\"v2-550592976b288d196d6d6e9e2dd1c032\"></p>\n<p><br></p>\n<p data-pid=\"SZbJn_15\">日本到了明治时代，<b>外貌完整</b>的直角引号（鉤括弧）出现，就是前后两个标点符号括出一个范围的用法。</p>\n<p data-pid=\"KxotwDTM\">在前面提到的《MOJICA》杂志第九页中可以看到，矢作勝美先生是这样介绍的：</p>\n<blockquote data-pid=\"OYHRXd5I\">「与江户那种在小说对话标记不同，钩括弧在活版早期就已经形成并被使用。比如有明治8年9月共由社出版的《蔷薇栽培法》……其中各种蔷薇品种都用钩括弧分开。……明治7年8月9日的《教义新闻》里有将波斯、印度等固有名词使用，以及明治10年4月《西洋谚草》将书名括起来的例子」。</blockquote>\n<p data-pid=\"KJsmtexY\">也就是说，在明治时期的日本，直角引号已经不再限于对话标记，而是具有引用功能了。</p>\n<p><img src=\"https://pica.zhimg.com/v2-8106bfc0537e18da21ba6b415844e86d_720w.jpg?source=b1748391?rss\" data-caption=\"1995年，矢作勝美的研究，《MOJICA》\" data-size=\"normal\" data-rawwidth=\"2294\" data-rawheight=\"1626\" data-watermark=\"watermark\" data-original-src=\"v2-8106bfc0537e18da21ba6b415844e86d\" data-watermark-src=\"v2-a4094a0fe75d129dbfd499ef734c2946\" data-private-watermark-src=\"v2-22b438579f40ee869d00fdd93593b1fe\"></p>\n<p data-pid=\"sScaaNQu\">还有一种很可信的说法，直角引号（鉤括弧）的出现是为了介绍西方文化，随着「圆括弧」的传入而引进的。值得一提的是，「括弧」这种叫法是在19世纪中叶，随着翻译成中文的数学书籍传入日本的。我个人认为，<b>将原本用作标记歌唱起始的庵点作为直角引号的起源，有强行拉扯关系的「嫌疑」。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-041fbf61cbc78432c396a32301ef7f4a_720w.jpg?source=b1748391?rss\" data-caption=\"1859年，李善兰/伟烈亚力，《代微积拾级》\" data-size=\"small\" data-rawwidth=\"1486\" data-rawheight=\"986\" data-watermark=\"watermark\" data-original-src=\"v2-041fbf61cbc78432c396a32301ef7f4a\" data-watermark-src=\"v2-56afe11005f37736a92d26806415cce9\" data-private-watermark-src=\"v2-187d6591214100c059a89a615b218cf8\"></p>\n<p><br></p>\n<p data-pid=\"pCf80dA2\">但可以肯定的是，<b>如今使用的直角引号确实是日本「创新」出来的东西</b>。</p>\n<p><br></p>\n<p data-pid=\"fN9_i8tX\">林穗芳老师著有《标点符号学习与应用》一书，提到可查最早出现直角引号的中文出版物是王炳耀（号煜初）1897年清末时期在香港出版的《拼音字谱》。在句义表一页可以看到直角引号，它被称为「释明之号」。</p>\n<p data-pid=\"OzUJUqck\">这本书的影印版我有一本，阅读一下就会发现这些标点符号是<b>用于「切音字」，所以不可以算作直角引号在中文排版中的正式例子</b>，直角引号真正流行起来的时间还要更晚。网络流传的单页看起来真的很像中文语境下的直角引号，所以我重新扫描了一个跨页，实际用途一看便知。</p>\n<p data-pid=\"jZ71FxLh\">但至少我们可以借此得知，正式使用直角引号的时间是在日本之后。而且 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/cca4b616c04a6ac16861452b925b682a\" data-hash=\"cca4b616c04a6ac16861452b925b682a\" data-hovercard=\"p$b$cca4b616c04a6ac16861452b925b682a\">@stevenliuyi</a> 的答案中提到，王炳耀曾于《拼音字谱》出版的三年前编辑出版过六卷本《中日战辑》，从日本引入直角引号也就是很自然的事情了。</p>\n<p><img src=\"https://pica.zhimg.com/v2-34018bd310da3ebce0c01629c2f334f0_720w.jpg?source=b1748391?rss\" data-caption=\"1897年，王炳耀，《拼音字谱》\" data-size=\"normal\" data-rawwidth=\"1996\" data-rawheight=\"1316\" data-watermark=\"watermark\" data-original-src=\"v2-34018bd310da3ebce0c01629c2f334f0\" data-watermark-src=\"v2-7b9afb0e0f4d63df0b2884e3f4d72010\" data-private-watermark-src=\"v2-02656b7bd72df67dee482a9371a596e8\"></p>\n<p data-pid=\"4gjVRM_G\"><b>所以，几乎可以确定直角引号就是取自日本的舶来品。</b></p>\n<hr>\n<h3>「直角引号」和「弯引号」谁最先用到中文版面里？</h3>\n<p data-pid=\"3xBcmjrX\">既然已知「直角引号」是舶来品，那我们就按时间线一同整理另一个舶来品「弯引号」的资料吧。</p>\n<p data-pid=\"sU0KQnUW\">1868年，在张德彝创作的《航海述奇》中，第一次提到了可以追溯到16世纪的西方弯引号。稿本中的文字阅读起来有一种强烈、有趣的穿越感。但这只是记录见闻，并非实际运用到中文排版里面，不是我们要找的东西。有趣的是，从文中可以感觉到，张德彝并不看好西方的标点符号系统，例如评价西文标点时说到「讲解甚烦」。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c8319781a067cdcaa5fb2c940cc45a14_720w.jpg?source=b1748391?rss\" data-caption=\"1868年，张德彝，《再述奇》\" data-size=\"normal\" data-rawwidth=\"1719\" data-rawheight=\"1363\" data-watermark=\"watermark\" data-original-src=\"v2-c8319781a067cdcaa5fb2c940cc45a14\" data-watermark-src=\"v2-061a7413f7c42b8b61dda8fd2a40cb20\" data-private-watermark-src=\"v2-25033dacf67101eb6440016c0c9ffd88\"></p>\n<p><br></p>\n<p data-pid=\"gjVHGQ0X\">严复早在1904年就创作了横排书籍《英文汉诂》，其中就用到了西文标点。二手书网站中有过1904版拍卖的记录，还能看到部分图片，确实有弯引号的存在。而且有大量嵌套的用法，顺序是单引号在内，双引号在外。就算有人说它出现西文标点是为了服务于书中的英文，那它也是确确实实地在中文内容中使用标点符号了。我自己也收藏了一本，就是品相有点差。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-47c044c854b07abcbb82069b0b80ea76_720w.jpg?source=b1748391?rss\" data-caption=\"1904，严复，《英文汉诂》\" data-size=\"normal\" data-rawwidth=\"434\" data-rawheight=\"248\" data-watermark=\"watermark\" data-original-src=\"v2-47c044c854b07abcbb82069b0b80ea76\" data-watermark-src=\"v2-4127c8b5556751f3a5a2412dfc537c0c\" data-private-watermark-src=\"v2-699a8c5f69969bcff58726ec0ec30657\"></p>\n<p><br></p>\n<p data-pid=\"rXKiilbS\">1906年，卢戆章在《中国字母北京切音教科书》中制定的标点系统就有弯引号。我手里正好有一本，其实看到书的名字就已经在意料之中了，书中提到的弯引号同样是给「切音字」用的，不是给汉字用的，所以也不算数。但这本书在引号相关时间线里仍然出镜率很高。</p>\n<p><img src=\"https://pica.zhimg.com/v2-e9f5afcc9945b9f5cce4416700872dbe_720w.jpg?source=b1748391?rss\" data-caption=\"1906年，卢戆章，《中国字母北京切音教科书》\" data-size=\"small\" data-rawwidth=\"783\" data-rawheight=\"1206\" data-watermark=\"watermark\" data-original-src=\"v2-e9f5afcc9945b9f5cce4416700872dbe\" data-watermark-src=\"v2-4dafb2767c2bbcc7d77a84200433fbdd\" data-private-watermark-src=\"v2-aa6e6044d9d3150520cb39d2b72fcb5e\"></p>\n<p><br></p>\n<p data-pid=\"Tizf37lH\">接下来就到了最关键的转折点， <a class=\"member_mention\" href=\"http://www.zhihu.com/people/cca4b616c04a6ac16861452b925b682a\" data-hash=\"cca4b616c04a6ac16861452b925b682a\" data-hovercard=\"p$b$cca4b616c04a6ac16861452b925b682a\">@stevenliuyi</a> 的答案中说，安徽教育出版社整理出版的《胡适留学日记》中提到，胡适在美国留学时曾为写日记而拟定一套标点符号规则。网上比较容易搜索到胡适1914年日记手稿中的这一页，在一次文献展览的网站记录中能找到高清的原件照片。</p>\n<p data-pid=\"SFSpW6UH\">如安徽教育出版社后来点校的那本书所说，其中的引号被称为「矩」，正是做为引用功能。但是因为跨页，这张图的网站并没有上传后面的内容。下一页的内容里有一个非常特别的引号样式，所以我打算继续寻找。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-06902ed9e4abd4c5ad18b9a7711f283d_720w.jpg?source=b1748391?rss\" data-caption=\"胡适留学日记手稿\" data-size=\"normal\" data-rawwidth=\"1436\" data-rawheight=\"960\" data-watermark=\"watermark\" data-original-src=\"v2-06902ed9e4abd4c5ad18b9a7711f283d\" data-watermark-src=\"v2-3ec24cfc27ead1931a7102ba587f14fc\" data-private-watermark-src=\"v2-2bb34806370f3c1afeb2ea954a56a9dd\"></p>\n<p><br></p>\n<p data-pid=\"jkEwmzK5\">我翻遍了展览、拍卖网站都没有找到，好在这套手稿曾出版过一套影印图书，但存世量稀少。最后我在华东师范大学图书馆获得这一页的照片。</p>\n<p data-pid=\"h8yKnE2A\">在这一页里，不仅有单矩（单层直角引号），还介绍了双矩（双层直角引号），以及更加复杂的三矩（三层直角引号）。我也不懂胡适为什么要设计出这么复杂的东西，手写时甚至会糊在一起，但我认为有必要在「引号」这个主题中补全它的图像资料。</p>\n<p data-pid=\"rL9jhJj1\">如今，这种引语中的引语中又有引语的嵌套情况，是将单双引号交替使用。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-adcbb7772a113422e46ee5ac4eba127f_720w.jpg?source=b1748391?rss\" data-caption=\"胡适留学日记手稿，三矩特写\" data-size=\"small\" data-rawwidth=\"842\" data-rawheight=\"544\" data-watermark=\"watermark\" data-original-src=\"v2-adcbb7772a113422e46ee5ac4eba127f\" data-watermark-src=\"v2-88ed2c959610dec5fe9c0cb28b77fba7\" data-private-watermark-src=\"v2-cffb5bcab5fcefe26696852e25c98d01\"></p>\n<p><br></p>\n<p data-pid=\"vlb7_98l\">在寻找的过程中，我还在另一本手稿里面看到了1915年的这部分札记。这是我从手稿影印版持有者那里购买的扫描件，开头写着：</p>\n<blockquote data-pid=\"drPIDOYx\">为「科学」做一文「论句读及文字符号」，凡三昼夜始成，约一万字。</blockquote>\n<p data-pid=\"zaEEprYl\">后面记录了这篇文章的部分内容。可以看出，文章讲的是标点符号，不仅是弯引号和直角引号，还包括另外几种标点符号的用法。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-3d332890ccb207638806720d72557a9d_720w.jpg?source=b1748391?rss\" data-caption=\"藏暉劄記\" data-size=\"normal\" data-rawwidth=\"2586\" data-rawheight=\"576\" data-watermark=\"watermark\" data-original-src=\"v2-3d332890ccb207638806720d72557a9d\" data-watermark-src=\"v2-e737d614b4ba2606ab6e30a4c97ed1fa\" data-private-watermark-src=\"v2-cb00e020e317d5cec342860d99674bd3\"></p>\n<p><br></p>\n<p data-pid=\"ArbHhv2L\">1915年，中国留学生于美国康奈尔大学创办《科学》杂志，次年移上海出版。</p>\n<p data-pid=\"Z5wxpiPw\">在《科学》第一期的「例言」里，写着一段话，意思是这个杂志采用横排排版，使用西文标点，目的是方便插入物理化学方程公式。</p>\n<p data-pid=\"MNcItYbz\">我手里正好有一本那个时代的数学书，也扫描了一下给大家看看直行排版情况下公式是如何表现的。可以看到为了让公式保持足够清晰的字号尺寸，且一行显示，它们被旋转90度放置，这非常不利于阅读，确实横排才是更好的选择。</p>\n<p data-pid=\"oI9NPqaf\">科学杂志的例言里面还对横向排版有着这样一句补充「非故好新奇，读者谅之」，看来在那个时代，横排还是一个需要读者花时间来接受的前卫行为。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-480cefe7b9acdb2f79db6a519f1b6040_720w.jpg?source=b1748391?rss\" data-caption=\"1915年，《科学》杂志例言\" data-size=\"normal\" data-rawwidth=\"1170\" data-rawheight=\"254\" data-watermark=\"watermark\" data-original-src=\"v2-480cefe7b9acdb2f79db6a519f1b6040\" data-watermark-src=\"v2-500b8f7dc38649d9a51503317a60fa28\" data-private-watermark-src=\"v2-10bca400a981fbb14b288b1c9e328ab0\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-f0f07e181e81c9ad7f2b9d55b322043b_720w.jpg?source=b1748391?rss\" data-caption=\"清末，《笔算教科书》\" data-size=\"normal\" data-rawwidth=\"3510\" data-rawheight=\"2550\" data-watermark=\"watermark\" data-original-src=\"v2-f0f07e181e81c9ad7f2b9d55b322043b\" data-watermark-src=\"v2-aea013b1414306e37c4128a54c055b17\" data-private-watermark-src=\"v2-58f4b90061b00b4eafaa657a940a535a\"></p>\n<p><br></p>\n<p data-pid=\"rM5eLKuB\">《科学》1916年第二卷第一期中，我们就能找到胡适编写的《论句读及文字符号》一文。这篇文章很有名气，只要是谈及标点符号历史，都会谈及它。这个杂志很难找，最后在广州数字图书馆找到了它，我也是第一次看到它的全貌。在以前的想象中，这应该是一个短篇的文章，没想到是一份长达将近30页的详细文档。</p>\n<p data-pid=\"3TkEif44\"><b>里面的引号部分，同时存在「弯引号」和「直角引号」。</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-24d5e92b78e3cd040a846dc77857b706_720w.jpg?source=b1748391?rss\" data-caption=\"1916年，《科学》，论句读及文字符号\" data-size=\"normal\" data-rawwidth=\"1134\" data-rawheight=\"234\" data-watermark=\"watermark\" data-original-src=\"v2-24d5e92b78e3cd040a846dc77857b706\" data-watermark-src=\"v2-189ba0546564c2c0cd800ff48145dc9a\" data-private-watermark-src=\"v2-39444d5b8bed6bad177ff7b93bb34ba0\"></p>\n<p><br></p>\n<p data-pid=\"wWoNA21_\">这套规范里面还介绍了纵向直行排版。文中所写是横行使用弯引号，直行使用直角引号，<b>和现在国家现行的推荐执行标准的处理手法一致</b>，但单双层的优先顺位是反的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1b861d6b2a6472c849aa6fabebfb3124_720w.jpg?source=b1748391?rss\" data-caption=\"1916年，《科学》，论句读及文字符号\" data-size=\"small\" data-rawwidth=\"1112\" data-rawheight=\"1578\" data-watermark=\"watermark\" data-original-src=\"v2-1b861d6b2a6472c849aa6fabebfb3124\" data-watermark-src=\"v2-8c9f38d95b2caea0efe207c11b4c6135\" data-private-watermark-src=\"v2-133f03e143d59e0566c1336a37d58aad\"></p>\n<p><br></p>\n<p data-pid=\"u8xNTrqy\">陈独秀在新青年杂志中说「《科学》杂志的符号和句读，全用西式，看下去很明白」。而且我觉得他们肯定也是认为弯引号比直角引号更好书写，所以在胡适这一版本的规范中优先使用单引号，就是因为形式简洁，可以一笔写出来。</p>\n<p data-pid=\"z5IYWnqG\">但是单引号也不是一个多好的选择，首先是不够醒目，还有就是在那个印刷品质粗糙的年代，单引号很容易被当成脏点。所以，后来双引号逐渐成为了第一顺位的优先选择。</p>\n<p data-pid=\"xfBAyoBC\">再后来，1919年4月，马裕藻、周作人、朱希祖、刘复、钱玄同、胡适六人第一次向教育部提出颁行新式标点符号议案，并且获得通过。不过<b>这次提案中的引号只提到了直角引号</b>，因为当时还是流行纵向直行排版。</p>\n<p><img src=\"https://pica.zhimg.com/v2-c8e03d8248819c9bebc3bc40bdc76405_720w.jpg?source=b1748391?rss\" data-caption=\"1919年11月在《请颁行新式标点符号议案》基础上做的修正案\" data-size=\"normal\" data-rawwidth=\"1414\" data-rawheight=\"2000\" data-watermark=\"watermark\" data-original-src=\"v2-c8e03d8248819c9bebc3bc40bdc76405\" data-watermark-src=\"v2-f2356cce96ad97b67f0f9e960884d4ae\" data-private-watermark-src=\"v2-36ee3a799a75b8f753fb117f69557ae4\"></p>\n<p><br></p>\n<p data-pid=\"WM6WuOEq\">直到1951年，中华人民共和国公布的《标点符号用法》，才<b>正式提出横排文稿可以使用弯引号</b>的说法。这个规范刊登在1951年9月26日人民日报第七版上，但是关于「弯引号」的说法并不在这版，而是作为补充写在第八版的角落里。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-652ea15c1d74b9a9b8c13246573e74b2_720w.jpg?source=b1748391?rss\" data-caption=\"1951年9月26日，《人民日报》\" data-size=\"normal\" data-rawwidth=\"886\" data-rawheight=\"646\" data-watermark=\"watermark\" data-original-src=\"v2-652ea15c1d74b9a9b8c13246573e74b2\" data-watermark-src=\"v2-5bec6a7087eb463e72ec156b2c889483\" data-private-watermark-src=\"v2-4e5c9a814e76f6379563278d07c8a5ac\"></p>\n<p data-pid=\"ItRDWH6s\">不过我发现一个有趣的事情，那就是这篇《标点符号用法》里面都是优先使用单层直角引号，而这份报纸中其他文章，却都是优先使用双层直角引号，这就出现了两种规则。其实规范中有写相关内容，主张的是从实用角度出发。原文说：</p>\n<blockquote data-pid=\"FmkNRRXo\">用哪种都可以，没有意义上的分别。一般来说，用单引号的居多，那是因为方便，画单线比双线省事。如果引号里面还要用引号，那就必须用另外一种看起来才清楚。</blockquote>\n<p data-pid=\"l21XPDSn\">我向后查找，逐渐缩小范围，最后发现在1951年10月5日，是人民日报第一次将正文部分从优先使用「双层直角引号」改为优先使用「单层直角引号」，当然这只是直排正文部分，横排和标题有另一套规则。</p>\n<p data-pid=\"4cnp-fye\">也正是因此，我发现了人民日报七十多年前的排版趣事。可能就是因为规则的突变触发了流程的问题，导致1951年10月6日一篇文章里出现了单双层直角引号共存的现象。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-52637be2765d884c865442e3353a8537_720w.jpg?source=b1748391?rss\" data-caption=\"1951年10月6日，《人民日报》中的趣事\" data-size=\"normal\" data-rawwidth=\"474\" data-rawheight=\"528\" data-watermark=\"watermark\" data-original-src=\"v2-52637be2765d884c865442e3353a8537\" data-watermark-src=\"v2-28d115e83fd86e7aee528d36b76ea1f0\" data-private-watermark-src=\"v2-cb05ceb89092fedbe4158f95d54f7a21\"></p>\n<p data-pid=\"WOIern1B\">值得一提的是，网上可以查到，1956年1月1日起人民日报由直排为主改成了横排为主。我翻查了一下，确实如此。并且横排引号优先使用的是双层西式弯引号样式，而直排内容，优先使用的是单层直角引号。直到90年代，直排中的直角引号又改回了双层优先，这和1990年实行的《标点符号用法》有关，在这个版本的标准中双层直角引号又被改回了第一顺位。</p>\n<p data-pid=\"942zHDYr\">民间流行方案受地区及用途影响，必然会有所不同，所谓《标点符号用法》也只是推荐标准，并非强制执行，不过人民日报采用的方案可以作为一个<b>大概的演变参考</b>。</p>\n<hr>\n<p data-pid=\"u4A0TCWT\">我最后总结一下，最早在美国创办的中文杂志《科学》，为了更好地表现物理化学公式，使用了一套含有西式弯引号的标点符号规范，一直发展演变成我们今天所使用的模样。</p>\n<p data-pid=\"bi44_ltc\">确实有人推动了西式引号在横排版面中的使用，不过这并不是一拍脑袋随便选的，确实思考了功能性。在弯引号取代直角引号这件事上，也并非取代传统，因为不仅弯引号不是中文传统，直角引号也同样不是。</p>\n<p data-pid=\"XI4NJvc2\">它们都是舶来品，分别应用到了「那个时代」「属于各自」的地方。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/oooooohmygosh?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">oooooohmygosh</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/19867627/answer/2420839332?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">6 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/20141091?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">现代中文中需不需要使用「牛津逗号（或顿号）」？</a><br><a href=\"http://www.zhihu.com/question/20951393?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么英语中常用分号（；），但没有顿号（、），而汉语会使用顿号（、）？</a><br>\n","link":"http://www.zhihu.com/question/19867627/answer/2420839332?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"虚幻引擎 5 现已正式推出，是否是使用新版引擎开发游戏的好时机呢？","date":"2022-04-07 02:37:49","description":"\n<h2>首先利好一波硬盘！</h2>\n<p data-pid=\"jWL6pE7j\">随着虚幻引擎5的发布，也随着发布了一系列的资源：</p>\n<ul>\n<li data-pid=\"b7gT0KZk\">虚幻引擎5正式版发布，已可在Launcher里下载，约36G。</li>\n<li data-pid=\"ApAfPk-m\">《黑客帝国觉醒》城市示例项目免费公开，已可在虚幻商城里下载，约93G。</li>\n<li data-pid=\"pZ9twjod\">《Lyra》虚幻引擎5初学者游戏包发布，已可在虚幻商城里下载，约2.75G。</li>\n<li data-pid=\"m9aG7AoC\">《ContentExample》最新版更新，约5.85G。</li>\n</ul>\n<p data-pid=\"5k8mo3cQ\">所以下载编译和使用，估摸着你得准备有200G多的SSD硬盘空间。然后CPU和GPU也得比较给力一些，显卡驱动记得更新到最新版。</p>\n<h2>有什么新功能？</h2>\n<p data-pid=\"5HTznb4q\">关注UE5的朋友应该早就在抢先体验版和预览版中细细把玩过UE5的各种功能了，这次正式版在新功能上倒没有什么令人惊奇的。一切都在意料之中，或者说能顺利的发布，其实已经令人喜悦了。</p>\n<p data-pid=\"No770uWC\">想看具体更新了哪些东西的朋友可以去看<a href=\"http://link.zhihu.com/?target=https%3A//docs.unrealengine.com/5.0/zh-CN/unreal-engine-5_0-release-notes/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">虚幻引擎5.0版本说明</a>。</p>\n<h2>稳定吗？</h2>\n<p data-pid=\"cQLMnEcI\">第二个大家最关心的问题是，UE5.0它稳定吗？</p>\n<p data-pid=\"AKoo4GOG\">虽然官方在发布会里说：</p>\n<blockquote data-pid=\"D6xJ6KxF\">它已经在去年12月的 《堡垒之夜：第三章》中经过了实测，并且覆盖了所有平台PC、PS4和PS5；Xbox One、Series X和Series S、Nintendo Switch以及Android。其中的打磨过程非常严格，我们对比了UE5和UE4版《堡垒之夜》的性能、占用内存和稳定性，确定我们能够实现顺利的过渡并且无需大幅修改《堡垒之夜》的代码和内容，而《堡垒之夜》也能够利用UE5的全新编辑器和工作流程。经过我们的亲身试验，大家可以相信UE5已经经过实测，可以用于生产。</blockquote>\n<p data-pid=\"JCNAwNJC\">我自己作为Epic的内部员工，也是看着UE5在FinalBuild之前已知Bug数目在每天递减。但作为一个开发者还是要说：</p>\n<ol>\n<li data-pid=\"ol2QWJTh\">UE5.0作为第一个大版本的正式版本，不可避免也绝对的会在初期遇到一些稳定性问题。包括不限于崩溃或者发现功能不像以往那么工作了。就这点，一是我们开发者自己要努力逐渐适应新的引擎和方式；二是Epic也肯定会比较快的继续推出UE5.0.1之类的修复(其实main分支上已经是UE5.1了)，所以我们等着就好了。</li>\n<li data-pid=\"JxYhLdLv\">作为社区经理，这两天也已经在虚幻社区里收到一些报告崩溃（Bridge插件没更新造成的），或者感觉帧率变慢，或者自己电脑跑不起来CitySample的问题。还好这些问题目前都是比较容易解决的。还有一类问题是不知道在UE5里怎么实现某些功能效果，这个就得靠大家继续研究学习讨论了。</li>\n<li data-pid=\"nn0hL_7j\">UE5是未来，毋庸置疑。所以即使明知道有可能不稳定，也还是想要自己努力追上最新的技术前沿，学习新的技术（卷死别人bushi）。所以看见崩溃或问题，平常心对待吧。</li>\n</ol>\n<h2>现在是用UE5开始做正式项目的好时机吗？</h2>\n<p data-pid=\"mtu9PO1C\">这个问题还真有点难回答，我觉得取决于你要做的项目类型吧。看你是否懂得扬长避短，是否懂得把控你的项目规模和进度。很多情况不能简单的二极管拍脑袋。</p>\n<p data-pid=\"5KGUA3JI\">比如你说UE5要求性能高，Lumen和Nanite不支持移动端，因此得出一个结论UE5不适合手游，这就是想的太简单了。UE5的很多高级特性不支持移动端，但同时UE5也大大新增和改进了很多其他模块，比如大世界，动画模块改进等，这些都是手游可以受益的。Epic自己做的《堡垒之夜》手机端也是很看重的，不可能自己傻傻去忽略移动端上的改进。</p>\n<p data-pid=\"aHnl8mhH\">另外也有一些人拍脑袋就说UE5不适合小团队，因为机器要求配置高和资产规模大成本高，这也是想的太过简单。换个角度想，小团队如果能直接利用UE5的各种强大便利功能，自己也不用改啥，然后小团队自然做一个小而美的中小资产的游戏，那这么算的话以一个小团队的能量和技术力，却能做出看起来2A伪3A能入眼的作品，也是一种成功的模式。虚幻社区内已经有挺多这样的案例，团队往往就是几个人或1个人。所以中心思想还是要自己聪明的懂得扬长避短。</p>\n<p data-pid=\"MzXBarw9\">还有一个方向是影视动画娱乐，大家都知道UE5的Lumen和Nanite会大大加强动画的品质，但同时也知道当前UE5并不能直接平替掉UE4的所有功能，比如曲面细分WPO啥的。这个时候可能就会纠结一下，到底是升到UE5呢，还是继续坚守一段时间UE4？这个就要看各自公司不同项目的进度和商业紧急程度了，一方面现有成熟的项目肯定不能立马大动，另一方面如有新的项目也得及时跟上新技术享受新的技术红利。这个就大家自己判断了。</p>\n<p data-pid=\"dSZXqqef\">我个人的结论是，如果是项目不会因为当前UE5的一些缺陷而影响，那还是推荐UE5。遇到坑也不用那么怕，之后的时间里其他技术同僚也都是在研究UE5（以后研究UE4的资料就越来越少了），你也有人和资料可以学习探讨。而且用什么引擎做项目，其实都不可避免趟坑，这也是必经的过程。</p>\n<p><br></p>\n<h2>UE5的发展愿景？</h2>\n<p data-pid=\"ndTLlMHI\">如果说有什么类型的项目天然就适合UE5？那一定是大世界。别人也问过我你觉得UE4和UE5最大的差别是什么，我想了想回答是大世界。在UE4时代，UE4能承载的游戏上限，其实顶多是一个我们现在司空见惯的3A游戏，世界的规模和粒度大家同时作为玩家也都有个基本印象了。但UE5我觉得目标直接拔高了一个大台阶，在以前我们是真的很难想象《黑客帝国觉醒》那种规模的精细程度的游戏世界。不是说现在的3A游戏地图不如《黑客帝国觉醒》那么大，而是现在的3A游戏依然是传统的渲染流程，利用上当前的各种优化，造出来的世界是看起来大，但精细程度上其实都很平滑。</p>\n<p data-pid=\"AW1gBDyR\">而UE5的宏伟目标，我觉得是朝着搭建一个更大世界的目标前进。更大的世界，量变导致质变。在规模上，一方面会催生出世界分区、程序化生成和MassAI等这种应对大规模的架构技术。大的世界，不光代表数字大，而是同时在小的方面也要更加精细，每一样东西都要比以往做的更加真实自然精致，因此人物角色、物理、动画、粒子等等都得继续上一个台阶。大的世界，也要求更大的团队来开发，因此也就要求在团队协作迭代效率上继续提升，因此像单Actor单文件，虚拟资产，按需加载和ZenLoader等这种技术也得开发出来。这些功能模块的开发和完善，是做以往那种3A游戏不会碰见的需求。</p>\n<p data-pid=\"JLHTNRtx\">总结一下，我想表达的是，如果你能意识到UE5的长远技术目标是大世界，而如果你的项目类型正好契合，那真的应该乘着这股东风扶摇直上。有别人吭哧吭哧花那么大物力人力帮你开发底层技术，你拿来直接用就行，多爽的事。至于那点引擎授权费就真的不算什么了，否则要嘛你真的自己去开发个引擎试试？商业的人都能很容易算清这笔账。</p>\n<hr>\n<p data-pid=\"07h8TpV8\">下面是我的一些个人有感杂谈，纯代表我个人主观想法，如有不对，纯属我认知片面。</p>\n<h2>自研引擎还是商业通用引擎？</h2>\n<p data-pid=\"5fclNqt3\">国内技术圈或者说玩家群体，总有一个迷思，认为大厂的自研引擎最牛，其次才是商业通用引擎。其一自然是因为物以稀为贵，inhouse引擎大部分人接触不到，自然就叠加了一层神秘，仿佛各个都拥有黑科技加持，有自家的绝世武功傍身。其实有接触过自研引擎的人就都会懂其中的痛，缺失的工具链，高频的崩溃，残缺的功能，升级维护耗费的巨大人力。之前寒霜的一次内部人员访谈里就已经吐槽过，我就不找资料佐证了。</p>\n<p data-pid=\"dO9xynSF\">其二可能来源于国内一种高手在民间的情怀，仿佛某些人掌握了某种方法技巧，就能推倒碾压掉工程化的通用引擎。我觉得这其实也是一种手作坊工匠精神面对现代化工厂的抗争和无力。</p>\n<p data-pid=\"NYGYyOrA\">其三游戏好不代表背后的引擎好，游戏坏也不代表背后的引擎坏。做技术应该都懂这一点，但普通玩家不太懂，因此就加剧了这种氛围，觉得游戏那么厉害，背后的引擎肯定巨牛。但现实往往是引擎可能真的很乱很弱，只不过开发游戏的时候用了大量人力堆上去，或者绕过去而已。绝大部分自研引擎其实都是不敢见人的。</p>\n<p data-pid=\"boi_2IPe\">其四再想想这次发布会，那么几个国外自研大厂也改用UE5。他们也算是成功的公司，而且还是自己有自研引擎的公司，就更不傻了。他们远比我们更懂开发和维护一个自研引擎要付出的成本和苦痛。他们也一定是精细对比权衡过，才选择投奔虚幻阵营。现在不能说，但以后这种公司案例还会越来越多。</p>\n<p data-pid=\"qHYzGw-f\">因此我个人最大的感慨是，UE5那么多功能模块，在做《黑客帝国觉醒》时用的那么多技术，其中90%+都是我不懂的！而且我还同时悲哀的发现，按我现在的学习精力和速度以及平凡的天赋，那其中大部分的内容我这辈子也学不会！但我也深知道，UE5是一个成熟的引擎，该有的功能模块也都有，当然该有的bug也有，它足以支撑一个团队利用它去开发出优秀的游戏或作品。从这种意义上来说，此刻我们免费拿到手中的，还包含全套源码的，这个引擎真的很厉害也很珍贵。这话听起来是尬吹有点肉麻，但我作为一个开发者身份这么多年，一分钱没交给Epic，白嫖了这么多年引擎和资源，是有点感谢的。然后Epic现在还发我工资，就更感谢了，哈哈。</p>\n<h2>游戏性重要还是技术重要？</h2>\n<p data-pid=\"5WfKoYUq\">最后也是一点个人感想，因为我总是在网上看到评论说，做游戏还是游戏性最重要，技术画面没那么重要。这话听起来很有道理，对一个游戏来说，游戏不好玩，玩家不买账，确实就是失败的。但我只是想提醒一点，太过看重设计和巧思，而看轻技术，可能恰恰是我们技术薄弱的原因。研究技术工程开发总是费力昂贵的，设计精巧想法刁钻也许正是成功捷径。但长此以往这种氛围，可能代价就是我们发展扶持不起足够底层也足够高端的技术。什么中国为何没有3A，为何开发不出那些工业软件，为何没有我们自己给力的游戏引擎，这些问题背后可能有诸多综合复杂原因，但也许有一点就落在了不够重视技术的点上。</p>\n<p data-pid=\"1iJqK7vU\">还有一方面，现在虚幻引擎早已不止用来做游戏了，在企业的各个领域都在大展拳脚。因此游戏开发中孕育而出的各种技术，是能反哺降临到别的领域再赋能加强的，从而成为基建设施般至关重要的生命技术。</p>\n<p data-pid=\"h1Hs1sGP\">我的point就是一点，尊重技术。</p>\n<hr>\n<p data-pid=\"4kURzxA1\">祝大家虚幻引擎5玩的开心！有什么问题可以找我，我去向官方抱怨，他们听不听是他们的事，但我就是干这个的。</p>\n<p data-pid=\"OgaX1tkf\">虚幻引擎官方群4：869321716 </p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/fjz13?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">大钊</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/526248363/answer/2426865410?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">28 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/405029801?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">虚幻五引擎来后，采用这款引擎制作的游戏是否需要贴图，是不是意味着可以将高模直接用于游戏？</a><br><a href=\"http://www.zhihu.com/question/264812264?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">未来的手游行业使用虚幻四引擎会更加有利吗？</a><br>\n","link":"http://www.zhihu.com/question/526248363/answer/2426865410?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\r\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\r\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\r\n    return new Date(date.toLocaleString('en-US', { timeZone }))\r\n}\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\r\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\r\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\r\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: '2-digit',\r\n        hour12: false,\r\n        timeZone\r\n    })\r\n    return {\r\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\r\n        convert (date) {\r\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\r\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\r\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\r\n        }\r\n    }\r\n}\r\n\r\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\r\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\r\n    return converter.convert(new Date(secDate), tzName) - secDate\r\n}\r\n\r\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\r\ncmn-Hans-SG = 中文普通话-简体-新加坡\r\ncmn-Hant-TW = 中文普通话-繁体-台湾\r\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\r\ncmn = 中文普通话\r\n\r\nzh-Hans = 中文-简体\r\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\r\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\r\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\r\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\r\n}\r\n\r\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long'\r\n}\r\nconst now = new Date()\r\n\r\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\r\n\r\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\r\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\r\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\r\n\r\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\r\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\r\n\r\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\r\n\r\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\r\n\r\nzhCNFormatter.format(now) // 2021年10月13日星期三\r\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\r\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\r\n\r\njaFormatter.format(now) // 2021年10月13日水曜日\r\njaAltFormatter.format(now) // 令和3年10月13日水曜日\r\n\r\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\r\n// {locale: 'zh-CN', calendar: 'gregory', …}\r\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\r\n     // 基于一个固定日期计算，这里选择 1970.1.1\r\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\r\n    const base = new Date(1970, 0, 1).getTime()\r\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\r\n    return Array.from({ length: 7 }, (_, day) =&gt; (\r\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\r\n    ))\r\n}\r\n\r\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\r\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\r\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    second: 'numeric',\r\n}).formatToParts(new Date())\r\n// [\r\n//     { type: 'year', value: '2021' },\r\n//     { type: 'literal', value: '年' },\r\n//     { type: 'month', value: '10' },\r\n//     { type: 'literal', value: '月' },\r\n//     { type: 'day', value: '13' },\r\n//     { type: 'literal', value: '日' },\r\n//     { type: 'weekday', value: '星期三' },\r\n//     { type: 'literal', value: ' ' },\r\n//     { type: 'dayPeriod', value: '上午' },\r\n//     { type: 'hour', value: '1' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'minute', value: '00' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'second', value: '00' }\r\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\r\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\r\n}\r\n\r\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\r\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\r\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\r\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\r\n  timeZone: 'America/Los_Angeles',\r\n  year: 1995,\r\n  month: 12,\r\n  day: 7,\r\n  hour: 3,\r\n  minute: 24,\r\n  second: 30,\r\n  millisecond: 0,\r\n  microsecond: 3,\r\n  nanosecond: 500,\r\n  calendar: 'iso8601'\r\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote>\n<p>周六不放假休息，还在这加班搞 CTF？</p>\n</blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/86535/11/24318/75037/622032a8E4f94d4ae/89703ccc122cf4e0.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"从 Google Analytics 的统计代码说起 —— 谈谈 script 标签的 async 和 defer 属性","date":"2020-10-13 09:25:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/80291/2/16552/19311/622032b3Eb300c2aa/66748fc8124a01c5.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/script-async-defer/\">https://blog.skk.moe/post/script-async-defer/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/script-async-defer/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"\n<p>WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将其表述为 \"An API for accessing Public Key Credentials\"，即“一个用于访问公钥凭证的 API”。WebAuthn 很强大，强大到被认为是 Web 身份认证的未来（当然，也很复杂）。你有想过通过指纹或者面部识别来登录网站吗？WebAuthn 就能在保证安全和隐私的情况下让这样的想法成为现实。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\" alt=\"通过 WebAuthn 调起 Windows Hello 登录网站\" width=\"1912\" height=\"966\" class=\"aligncenter size-full wp-image-2215\"></a>\n<p>你可以在<a href=\"https://webauthn.io/\" rel=\"noopener\">这个网站</a>自行体验 WebAuthn。或者，如果你有一个使用 WordPress 的站点，可以尝试一下 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WP-WebAuthn</a> 这款插件，它可以为你的站点启用 WebAuthn 登录。这是我为了写这篇文章而练手开发的插件，本文中的部分示例代码也来自这款插件。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"wp-webauthn\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/wp-webauthn\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>WebAuthn Level 1 标准已在 2019 年 3 月成为 W3C 推荐标准，而 Level 2 标准目前也已进入编辑草案阶段，但互联网上有关它的中文资料却仍然很少，国内也鲜有网站支持这一新标准。于是，在抱着各种英文资料和标准啃了几天以后，我折腾出了这篇文章。</p>\n<p>在这篇文章里，我将会从最基本的概念开始，逐渐深入 WebAuthn，直到解码公钥等深层细节。这可能是你能找到的有关 WebAuthn 最详细最基础的中文文章，也很可能是最长的。在开始之前，<strong>我强烈建议你打开菜单中的文章目录浏览一遍，以对这篇文章涉及的内容有所了解。</strong>如果你只是想了解如何简单地在你的项目中添加对 WebAuthn 的支持，那么“<a href=\"https://flyhigher.top/#webauthn-overview\">浅谈 WebAuthn</a>”部分就是你要找的；如果你想了解更多关于 WebAuthn 的底层细节，那么你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分。</p>\n<p>由于在本文写作时 WebAuthn Level 2 规范尚未定稿，<strong>这篇文章我们将只专注于 Level 1 规范。</strong></p>\n<p>这篇文章最后更新于 2020.9 ，在你读到这篇文章时，部分事实可能已经发生改变，请注意判断。</p>\n<p><strong>更新日志：</strong></p>\n<ul>\n<li>2021.1.16 添加 Chrome 开发工具信息</li>\n<li>2020.9.17 更新 iOS/iPad OS 兼容性信息</li>\n<li>2020.5.20 添加部分无用户名认证的平台兼容性内容</li>\n<li>2020.5.15 添加部分 <code>extensions</code> 相关内容与链接；添加全局凭证 ID 唯一内容；添加凭证 ID 查找相关内容；添加“从 U2F 认证迁移”一节</li>\n<li>2020.4.13 更新与修正 <code>userVerification</code> 相关内容；添加部分 Firefox 相关内容</li>\n<li>2020.3.23 文章发布</li>\n</ul>\n<p>那么让我们开始吧。<span></span></p>\n<h1>浅谈 WebAuthn</h1>\n<p>在这个部分里，我们将会从基础概念开始，了解有关 WebAuthn 和密码学的一些基础知识，并最终使用第三方库实现基础的 WebAuthn 认证。如果你已经对这些内容有所了解了，可以跳到“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”继续阅读。</p>\n<h2>为什么使用 WebAuthn</h2>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\" alt=\"钓鱼邮件\" width=\"709\" height=\"693\" class=\"aligncenter size-full wp-image-2162\"></a>\n<p>相信你一定收到过类似的邮件吧？只要你点进那个最显眼的链接，你就会进入一个设置好的圈套——钓鱼网站。如果你一时糊涂在这类网站上填写了你的账号和密码，bingo，你的账号就不再是你的账号了。</p>\n<p>不过，就算你警惕心再强，也无法避免密码泄露事件。Twitter, Facebook 等都爆出过明文密码泄露事件，证明再大的公司或组织也无法避免密码泄露问题。雪上加霜的是，很大一部分用户都非常喜欢使用重复密码，这就导致一次密码泄露会牵连很多网站，用户的账户安全性完全无法得到保证。</p>\n<p>那么，有什么办法解决这些问题吗？<strong>彻底解决的方法只有一个，那就是抛弃密码。</strong>可是没有密码还怎么验证用户身份呢？这就是 WebAuthn 的用武之地了。</p>\n<p><del>没有密码的好时代，来临力！</del></p>\n<h2>什么是 WebAuthn</h2>\n<p>那么到底什么是 WebAuthn 呢？如开头所说，WebAuthn 是“一个用于访问公钥凭证的 API”，网站可以通过这个 API 进行一些高安全性的身份验证。WebAuthn 一个最常见的应用就是用于网站登录时的 2FA（双重因素验证）甚至是无密码登录。通过网页调用 WebAuthn，在不同平台下，<strong>我们可以实现通过 USB Key、指纹、面部甚至虹膜扫描来认证身份，同时确保安全和隐私。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\" alt=\"WebAuthn 可使用的各种身份认证方式\" width=\"1294\" height=\"566\" class=\"aligncenter size-full wp-image-2213\"></a>\n<p>WebAuthn 标准是 FIDO2 标准的一部分，而 FIDO2 则是由 FIDO 联盟和 W3C 共同推出的 U2F（现称作 FIDO1）的后继标准，旨在增强网络认证的安全性。</p>\n<blockquote><p>你可能了解过 U2F，那么 U2F 和 FIDO2 的区别在哪里呢？从名字上可以看出，U2F，即“通用第二因素协议”，是专注于作为密码后的第二道屏障的，而 FIDO2 增加了单因素认证功能，这意味着使用 FIDO2 可以完全替代密码，真正实现无密码登录。</p></blockquote>\n<p>FIDO2 标准主要包括四个部分，其一是用于网站和访客设备交互的 WebAuthn，而 Client to Authenticator Protocol 2（CTAP2，客户端-认证器协议）作为 WebAuthn 的补充，则是用于访客的设备和认证器交互的协议。标准的其他两个部分则是 U2F 和 UAF 规范。在这篇文章中，我们只关心 WebAuthn，不会涉及 CTAP, U2F 和 UAF 的相关知识。如果你对这段话中的一些概念不了解，不要紧张，接下来我们就来谈谈 WebAuthn 中一些常用的术语和概念。</p>\n<blockquote><p>WebAuthn 只能在安全上下文中使用，也就是说，页面需要使用 HTTPS 协议或是处于 <code>localhost</code> 中。</p></blockquote>\n<h2>常用术语和概念</h2>\n<p>WebAuthn 中有许多不常碰到的术语，不过我只会在这里介绍一些常用的术语和概念——如果你只是希望做出一个简单的实现，那么了解这一段中的一些概念就足够了。同时，由于我实在没能找到一部分术语的通用翻译，有一些术语我按着自己的理解尽可能地翻译了，有任何问题请告诉我。</p>\n<p>在一个完整的 WebAuthn 认证流程中，通常有这么几个角色：</p>\n<ul>\n<li>Relying Party 依赖方 (RP) ：指服务提供方，即网站</li>\n<li>User 用户：正准备登录的你</li>\n<li>Authenticator 认证器：通常指 USB Key 或是设备内置的指纹扫描器、虹膜扫描器、面部识别装置等，正是它们在使用流程中代替了密码甚至是用户名</li>\n<li>User Agent 用户代理：通常指浏览器或系统，负责与认证器交互</li>\n</ul>\n<p>认证过程通常分为两种：</p>\n<ul>\n<li>Registration Ceremony 注册仪式：用户向账户上添加认证器</li>\n<li>Authentication Ceremony 验证仪式：用户通过已注册的认证器验证身份</li>\n</ul>\n<p>同时，认证过程中还会产生这些内容：</p>\n<ul>\n<li>Challenge 挑战：通常是一串随机字符串</li>\n<li>Public Key Credential 公钥凭证：由认证器产生的凭证，在技术上代替了密码</li>\n<li>Attestation 证明：注册时认证器产生的验证数据</li>\n<li>Assertion 断言：验证时认证器产生的验证数据</li>\n</ul>\n<blockquote><p><strong>请注意区分证明 (Attestation) 和断言 (Assertion)</strong>，特别是在这两个单词有些相似的情况下。在 WebAuthn 中，它们是不同过程中的类似概念，但并不相同。</p></blockquote>\n<p>如果你对于这些内容不是很理解，没有关系，我们会在“<a href=\"https://flyhigher.top/#how-to-webauthn\">使用流程</a>”一节中将这些概念放到实际情况中解释，你只要先区分这些概念即可。</p>\n<h2>安全性的基础</h2>\n<p>WebAuthn 为什么安全？和 HTTPS 一样，WebAuthn 使用非对称加密的思路来保证安全性，但侧重点又有所不同。要理解 WebAuthn 的认证流程，我们必须对非对称加密有所了解。如果你对非对称加密比较熟悉了，就直接跳到下一段吧。</p>\n<p>WebAuthn 的核心在于“认证”，即保证产生了凭证的认证器是用户的认证器，而不是第三方在伪造凭证。但为什么要使用非对称加密呢？我们可以先来看看对称加密。</p>\n<p>让我们假设小明和小红相互写信，见不到对方。这天小红突然想，给自己写信的人是不是真的小明呢？于是小红要求对方向小红证明自己是小明。怎么证明呢？他们商量出来这么一套方案：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明和小红商量一个统一的密码和密钥</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明用提前和小红商量好的密码和密钥加密文本后发回给小红</li>\n<li>小红使用相同的密码和密钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和密钥</li>\n</ol>\n<blockquote><p>在密码学中，我们通常把“加密算法”称为密码 (code)，和通常登录时用的密码 (password) 并非同一个概念。</p></blockquote>\n<p>在这种情况下，<strong>只要密钥不泄露</strong>，即拥有正确密钥的只有小明和小红，那么小红就能确定对方一定是小明。但这样的问题也很明显，如果小明和小红不能见面，那么他们就必须先以明文交换密码——<strong>在这个过程中一旦有人窃取到了密码，这个认证就无效了。</strong></p>\n<p>这时我们就需要使用<strong>非对称加密</strong>来拯救破碎的信任了。非对称加密的基础是一对密钥，也就是公钥和私钥，它们是互相关联但（几乎）无法互相推导的。在非对称加密的过程中，选择相同的密码后，使用私钥加密明文得到的密文只能由对应的公钥解密，无法使用私钥解密，同时这个过程反过来也是成立的。</p>\n<blockquote><p>本文的核心并不是非对称加密算法，因此不会详述非对称加密在数学上的证明，若有兴趣可以自行了解。</p></blockquote>\n<p>这就完美解决密钥泄露的问题了。让我们回过头来看之前的例子。现在小明和小红决定使用非对称加密来证明身份，过程如下：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明提前生成一对公私钥，将公钥发送给小红，私钥自己保管，同时商量好统一的密码</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明使用商量好的密码和自己的私钥加密文本，发送给小红</li>\n<li>小红使用相同的密码和小明的公钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和私钥</li>\n</ol>\n<p>在这种情况下，<strong>只要私钥不泄露</strong>，那么小红解密得到的文本和之前发送的一致，那么就可以证明收到的密文一定是由小明加密后发送过来的。而在整个过程中，私钥都没有离开过小明，更没有经过传输，也就几乎没有泄露的可能了。这时，小红终于可以确定对面和她通信的人的确是小明了。</p>\n<p>题外话：HTTPS 虽然也应用了非对称加密，但 HTTPS 更侧重于“加密”而非“认证”，因此思路上会有些许差异。要了解关于 HTTPS 和非对称加密的更多信息，你可以阅读我之前写的这篇文章：</p>\n<p></p>\n<div class=\"mdx-post-cot\" data-mdxposturl=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdx-post-wait-out-c2\"><div class=\"mdx-post-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<span></span>\n<h2>使用流程</h2>\n<p>了解了非对称加密，我们就可以来看看 WebAuthn 的认证流程了。</p>\n<p>和普通的密码一样，<strong>使用 WebAuthn 分为两个部分，注册和验证。</strong>注册仪式会在依赖方中将认证器的一些信息和用户建立关联；而验证仪式则是验证这些信息以登确保是用户本人在登录。根据上一节的思路，我们可以知道，注册仪式就是认证器生成一对公私钥，然后将公钥交给依赖方；而验证仪式是依赖方发送给认证器一段文本，要求认证器用自己的私钥加密后发回以验证。</p>\n<p>在实际情况中，WebAuthn 是基于<strong>挑战-应答模型</strong>工作的。要更好地理解，我们直接来看具体流程。先来看看注册的流程。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\" alt=\"WebAuthn 注册流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2224\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的注册请求</li>\n<li>依赖方向浏览器发送挑战、依赖方信息和用户信息</li>\n<li>浏览器向认证器发送挑战、依赖方信息、用户信息和客户端信息以请求创建公钥凭证</li>\n<li>认证器请求用户动作，随后创建一对公私钥，并使用私钥签名挑战（即证明），和公钥一起交给浏览器</li>\n<li>浏览器将签名后的挑战和公钥发送给依赖方</li>\n<li>依赖方用公钥验证挑战是否与发送的一致，如果成功则将公钥与用户绑定，注册完成</li>\n</ol>\n<p>我也做了一个交互式的 Demo，你可以对照流程来更好地理解。</p>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\">开始注册</button> <span></span></p>\n<div></div>\n<blockquote><p>注意，这个 Demo 和下方的 Demo 都只是一个本地模拟的简单示例，没有任何数据会被上传，当然也不会对数据进行验证。</p></blockquote>\n<p>而之后的验证流程如下：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\" alt=\"WebAuthn 验证流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2226\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的验证请求</li>\n<li>依赖方向浏览器发送挑战</li>\n<li>浏览器向认证器发送挑战、依赖方信息和客户端信息以请求获取公钥凭证</li>\n<li>认证器请求用户动作，随后通过依赖方信息找到对应私钥，并使用私钥签名挑战（即断言），交给浏览器</li>\n<li>浏览器将签名后的挑战发送给依赖方</li>\n<li>依赖方用之前存储的公钥验证挑战是否与发送的一致，一致则验证成功</li>\n</ol>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\" disabled>开始验证</button> <span>在上方注册后才能验证</span></p>\n<div></div>\n<p>可以看到，WebAuthn 不仅在理论上是安全的，同时<strong>在整个过程中并没有隐私数据被传输</strong>——用户信息实际上只包含用户名和用户 ID。因此我们完全可以说 WebAuthn 是安全且私密的。</p>\n<blockquote><p>为了避免用户在不同依赖方之间被追踪，认证器通常会为每个依赖方和用户的组合都创建一对公私钥。不过，由于认证器的存储空间有限，认证器通常不会存储每一个私钥，而是会通过各类信息和烧录在认证器内的主密钥“算”出对应的私钥以实现无限对公私钥。具体算法根据不同厂商会有所不同。对于 Yubikey，你可以在<a href=\"https://developers.yubico.com/U2F/Protocol_details/Key_generation.html\">这里</a>了解更多。</p></blockquote>\n<blockquote><p>如果依赖方需要，用户同意后，发送给依赖方的公钥凭证中可以包含用于辨认认证器型号的信息，不过这对隐私的影响微乎其微。</p></blockquote>\n<h2>浏览器接口</h2>\n<p>要使用 WebAuthn，我们必须要依靠浏览器作为媒介和验证器进行交互，而这就需要浏览器对于 WebAuthn 的支持了。绝大多数新版本的现代浏览器都为 WebAuthn 提供了统一的接口，而在这一段中我们会了解如何使用相关的接口。但是在开始之前，我们可以先来看看浏览器的支持程度（2020.9）。</p>\n<div class=\"mdui-table-fluid\"><table class=\"mdui-table\">\n<thead><tr>\n<th>浏览器</th>\n<th>支持情况</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>桌面端 Chrome</td>\n<td>67+</td>\n</tr>\n<tr>\n<td>移动端 Chrome</td>\n<td>67+<sup>[1]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Firefox</td>\n<td>60+</td>\n</tr>\n<tr>\n<td>移动端 Firefox</td>\n<td>不支持<sup>[2]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Edge</td>\n<td>18+</td>\n</tr>\n<tr>\n<td>移动端 Edge</td>\n<td>不支持<sup>[3]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Safari</td>\n<td>13+</td>\n</tr>\n<tr>\n<td>移动端 Safari</td>\n<td>13.3+<sup>[4]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Opera</td>\n<td>54+</td>\n</tr>\n<tr>\n<td>移动端 Opera</td>\n<td>不支持</td>\n</tr>\n</tbody>\n</table></div>\n<p><sup>[1]</sup> 受平台限制，Chrome 在 iOS 平台上不支持 WebAuthn，在 Android 平台上支持大部分 WebAuthn 功能，但仍不支持部分特性（如 <code>userVerification</code>）。<br><sup>[2]</sup> 移动端 Firefox 80 以下的版本支持 WebAuthn 但似乎会忽略 <code>authenticatorAttachment</code> 等一部分参数，同时移动端 Firefox Beta 80 以下的版本支持 WebAuthn 但无法成功调用。自 80 版本起移动端 Firefox 暂时取消了对 WebAuthn 的支持（可能是 Bug）。<br><sup>[3]</sup> 移动端 Edge 似乎支持 WebAuthn 但无法成功调用。<br><sup>[4]</sup> Safari iOS/iPad OS 13 仅支持外部认证器，无法调用 Touch ID 或 Face ID；自 iOS/iPad OS 14 起 Safari 已支持全功能 WebAuthn，可以调用 Touch ID/Face ID</p>\n<p>当然，一众国产浏览器，包括 Samsung Browser 和 Yandex Browser，目前都不支持 WebAuthn。此外，由于 WebAuthn 涉及外部验证器和 TPM 可信平台模块等，用户的操作系统也会对 WebAuthn 的可用性造成影响。以下是一些需要注意的信息：</p>\n<ul>\n<li>Windows 10 1903 以下版本仅 Edge 能提供完整支持，其他浏览器只能使用 USB Key 等外部认证器；1903+ 中所有浏览器都可以通过 Windows Hello 带来完整的 WebAuthn 支持</li>\n<li>Android 需要安装并开启 Google 服务</li>\n<li>iOS/iPad OS 13.3 以下的版本不支持 WebAuthn，iOS/iPad OS 14 以下的版本支持有限（参考上文），iOS/iPad OS 14 开始 Safari 已支持全功能 WebAuthn（功能完整度甚至超过了 Android）</li>\n</ul>\n<p>可以看出，WebAuthn 的发展之路仍然很漫长，但好在桌面端对它的支持已经比较完善了，在一些情况下我们完全有理由使用它。</p>\n<hr>\n<p>来看看浏览器提供了怎么样的接口吧。要使用 WebAuthn，我们可以使用 <code>navigator.credentials.create()</code> 请求认证器生成公钥凭证和 <code>navigator.credentials.get()</code> 请求获取公钥凭证。</p>\n<blockquote><p>你或许已经对 Credential Management API 有所了解了。通过这些 API，我们还可以实现一些有趣的特性，不过这值得另开一篇文章来讲了。</p></blockquote>\n<p>对于一个基础的实现，<code>navigator.credentials.create()</code> 需要传入的参数如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        challenge,\r\n        rp: {\r\n            id,\r\n            name\r\n        },\r\n        user: {\r\n            id,\r\n            name,\r\n            displayName\r\n        },\r\n        pubKeyCredParams: [\r\n            {\r\n                type: \"public-key\",\r\n                alg\r\n            }\r\n        ],\r\n        authenticatorSelection: {\r\n            authenticatorAttachment,\r\n            userVerification\r\n        },\r\n        excludeCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>在 <code>navigator.credentials.create()</code> 方法中，我们必须传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值。这指明了我们需要创建公钥凭证，而非普通的密码凭证。然后，在 <code>publicKey</code> 对象中设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rp: Object</code>：依赖方信息，其中有一项为必须：\n<ul>\n<li>\n<code>rp.id: String</code>：（可选）依赖方 ID，必须为当前域名或为当前域名的子集的域名（不是子域名）。如域名为 <code>test.123.example.com</code>，则依赖方 ID 可以是 <code>test.123.example.com</code>, <code>123.example.com</code> 或 <code>example.com</code>。不指定则默认使用当前域名</li>\n<li>\n<code>rp.name: String</code>：依赖方名称，用于方便用户辨认</li>\n</ul>\n</li>\n<li>\n<code>user: Object</code>：用户信息，其中有三项为必须：\n<ul>\n<li>\n<code>user.id: Uint8Array</code>：转换为 <code>Uint8Array</code> 的字符串。<strong>出于安全考量，这应尽可能不与任何用户信息相关联，如不要包含用户名、用户邮箱等</strong>\n</li>\n<li>\n<code>user.name: String</code>：登录用户名</li>\n<li>\n<code>user.dispalyName: String</code>：用于显示的用户名称，显示与否的具体行为取决于浏览器</li>\n</ul>\n</li>\n<li>\n<code>pubKeyCredParams: Array</code>：一个算法列表，指明依赖方接受哪些签名算法。列表的每一项都是一个对象，拥有两个属性：\n<ul>\n<li>\n<code>pubKeyCredParams[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>pubKeyCredParams[].alg: Number</code>：一个负整数，用于标明算法。具体算法对应的数字可以在 <a href=\"https://www.iana.org/assignments/cose/cose.xhtml#algorithms\">COSE</a> 找到</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection: Object</code>：（可选）用于过滤正确的认证器，这里介绍常用的一个参数：\n<ul>\n<li>\n<code>authenticatorSelection.authenticatorAttachment: String</code>：（可选）指定要求的认证器类型。如果没有满足要求的认证器，认证可能会失败。该参数可以为 <code>null</code>（表示接受所有类型的认证器）或是以下两个值之一：\n<ul>\n<li>\n<code>platform</code>：表示仅接受平台内置的、无法移除的认证器，如手机的指纹识别设备</li>\n<li>\n<code>cross-platform</code>：表示仅接受外部认证器，如 USB Key</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection.userVerification: String</code>：（可选）指定认证器是否需要验证“用户为本人 (User Verified, UV)”，否则只须“用户在场 (User Present, UP)”。具体验证过程取决于认证器（不同认证器的认证方法不同，也有认证器不支持用户验证），而对验证结果的处理情况则取决于依赖方。该参数可以为以下三个值之一：\n<ul>\n<li>\n<code>required</code>：依赖方要求用户验证</li>\n<li>\n<code>preferred</code>：（默认）依赖方希望有用户验证，但也接受用户在场的结果</li>\n<li>\n<code>discouraged</code>：依赖方不关心用户验证。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>excludeCredentials: Array</code>：（可选）用于标识要排除的凭证，可以避免同一个用户多次注册同一个认证器。如果用户试图注册相同的认证器，用户代理会抛出 <code>InvalidStateError</code> 错误。数组中的每一项都是一个公钥凭证对象，包含以下属性：\n<ul>\n<li>\n<code>excludeCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>excludeCredentials[].id: Uint8Array</code>：要排除的凭证 ID</li>\n<li>\n<code>excludeCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，超时后将强制终止 <code>create()</code> 并抛出错误。若不设置，将使用用户代理的默认值；若太大或太小，则使用最接近的用户代理默认值范围中的值。推荐值为 5000-120000</li>\n</ul>\n<blockquote><p>对于 <code>pubKeyCredParams</code>，通常我们只需添加 ES256 (alg: -7) 算法即可兼容大部分外部认证器，此外，再添加 RS256 (alg: -257) 算法即可兼容大部分平台内置认证器（如 Windows Hello）。当然，前端添加算法之后，后端也需要相应的算法支持。</p></blockquote>\n<blockquote><p>对于 <code>userVerification</code>，由于默认值 \"preferred\" 并不能很好地被所有设备支持，因此无论在 <code>create()</code> 中还是 <code>get()</code> 中不指定该参数都会在 Chrome 中触发一条警告。具体请参阅<a href=\"https://chromium.googlesource.com/chromium/src/+/master/content/browser/webauth/uv_preferred.md\">这个页面</a>。</p></blockquote>\n<p>调用 <code>create()</code> 之后，我们就可以拿到一个 <code>Promise</code>，并可以在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>create()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAttestationResponse {\r\n        attestationObject: ArrayBuffer(390) {},\r\n        clientDataJSON: ArrayBuffer(121) {}\r\n    },\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\",\r\n    type: \"public-key\"\r\n}</pre>\n<p>其中有：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：<code>AuthenticatorAttestationResponse</code> 对象，是 <code>PublicKeyCredential</code> 的主要部分，包含以下两个内容：\n<ul>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n<li>\n<code>response.attestationObject: ArrayBuffer</code>：CBOR 编码的认证器数据，包含凭证公钥、凭证 ID、签名（如果有）、签名计数等信息</li>\n</ul>\n</li>\n</ul>\n<p>然后将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串，我们就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证与注册了。具体怎么操作，我们会在下文详细讨论。当然，别忘了 <code>catch()</code> 注册过程中抛出的任何错误。</p>\n<blockquote><p>你可能会认为在所有情况下，注册时认证器都会对挑战进行签名。实际上在大部分情况下（同时也是默认情况），<strong>注册时认证器并不会对挑战进行签名</strong>，<code>attestationObject</code> 并不会包含签名后的挑战。只有依赖方明确要求证明且用户同意（部分浏览器要求）后认证器才会对挑战进行签名（具体实现据情况会有所不同）。对此，<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion#Attestation\">MDN 解释道</a>“大部分情况下，用户注册公钥时我们会使用「初次使用时信任模型」(TOFU) ，此时验证公钥是没有必要的。”要了解更多关于证明的内容，请参阅“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>而对于 <code>navigator.credentials.get()</code>，我们可以传入如下的参数：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.get({\r\n    publicKey: {\r\n        challenge,\r\n        rpId,\r\n        userVerification,\r\n        allowCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>和 <code>create()</code> 一样，对于 <code>get()</code> 我们需要传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值，指明我们需要获取的是公钥凭证而非普通的密码凭证。在 <code>publicKey</code> 对象中我们可以设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rpID: String</code>：（可选）依赖方 ID，需要和注册认证器时的一致。规则和上述的 <code>rp.id</code> 一致，不指定默认使用当前域名</li>\n<li>\n<code>userVerification: String</code>：和上文一样，只是需要注意它这次不在 <code>authenticatorSelection</code> 中了</li>\n<li>\n<code>allowCredentials: Array</code>：（可选）用于标识允许的凭证 ID，使用户代理找到正确的认证器。只有符合这个列表中凭证 ID 的凭证才能被成功返回。数组中的每一项都是对象，包含以下属性：\n<ul>\n<li>\n<code>allowCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>allowCredentials[].id: Uint8Array</code>：允许的凭证 ID</li>\n<li>\n<code>allowCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，和上面的一样，推荐值为 5000-120000</li>\n</ul>\n<p>嗯，要传入的参数少多了。之后，和 <code>create()</code> 一样，调用 <code>get()</code> 之后，我们就可以拿到一个 <code>Promise</code> 并在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>get()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAssertionResponse {\r\n        authenticatorData: ArrayBuffer(37) {},\r\n        signature: ArrayBuffer(256) {},\r\n        userHandle: ArrayBuffer(64) {},\r\n        clientDataJSON: ArrayBuffer(118) {}\r\n    }\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\"\r\n    type: \"public-key\"\r\n}</pre>\n<p>这里的东西就比 <code>create()</code> 时拿到的要多了。看看我们拿到了什么吧：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：对于验证流程，认证会返回 <code>AuthenticatorAssertionResponse</code> 而不是 <code>AuthenticatorAttestationResponse</code> 对象，这个对象包含以下 4 个属性：\n<ul>\n<li>\n<code>response.authenticatorData: ArrayBuffer</code>：认证器信息，包含认证状态、签名计数等</li>\n<li>\n<code>response.signature: ArrayBuffer</code>：被认证器签名的 <code>authenticatorData</code> + <code>clientDataHash</code>（<code>clientDataJSON</code> 的 SHA-256 hash）</li>\n<li>\n<code>response.userHandle: ArrayBuffer</code>：<code>create()</code> 创建凭证时的用户 ID <code>user.id</code>。许多 U2F 设备不支持这一特性，这一项将会是 <code>null</code>\n</li>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n</ul>\n</li>\n</ul>\n<p>同样地，我们将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串后就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证了。至于具体怎么做，别急，马上就来讲一讲。</p>\n<h2>简单实现</h2>\n<p>了这么多，我们终于可以实现一个简单的 WebAuthn 认证页面了。由于在实际操作中 WebAuthn 相关的数据解码和密码计算比较复杂，在服务器端我们可以使用第三方库来帮我们做这些脏活累活，我们只需专注于具体流程就可以了。</p>\n<p>要寻找可用的第三方库，你可以在 <a href=\"https://webauthn.io/\">webauthn.io</a> 上找到适用于各种语言的第三方库——除了 PHP（笑）。不过好在你可以在 GitHub 上找到几个不错的 PHP WebAuthn 库，比如 <a href=\"https://github.com/web-auth/webauthn-framework\">web-auth/webauthn-framework</a>。</p>\n<p>在我们的这个例子中，我们关心的主要是前端逻辑；而后端我们可以使用各类几乎已经做到开箱即用的第三方库，这样我们可以专注于流程而不必关心细节。当然如果你想了解后端的解码细节，可以阅读“<a href=\"https://flyhigher.top/#webauthn-decode\">手动解个码</a>”一节。</p>\n<hr>\n<p>让我们先从注册开始吧。现在，用户点击了注册认证器的按钮，一个请求被发送给服务器（也就是依赖方）。在最简单的情况中，依赖方需要将三个内容发送给浏览器：<strong>挑战、用户信息和用户已注册的凭证 ID 列表（即 <code>excludeCredentials</code>）</strong>。当然依赖方也可以自由选择发送更多信息，只要最终前端能构建合法的参数即可。</p>\n<p>挑战最终会被转换为 <code>Uint8Array</code>，即一组 0-255 的整数。如果使用 PHP，在后端我们可以这样生成 Base64 编码的挑战：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"php\">$challenge = \"\";\r\nfor($i = 0; $i \n<p>对于用户信息，我们需要登录名、显示名称和 ID 三项内容。我们可以从数据库中取出用户信息，也可以新建一份。需要注意的是，<strong>出于安全和隐私的考量，ID 不应该包含用户的任何信息，比如用户邮箱等。</strong>推荐的做法是和挑战一样，生成一个随机字符串/一组随机数，并将其于用户关联起来以供之后使用。</p>\n<p>发送已注册的凭证 ID 列表是为了防止用户重复注册同一个认证器。正确设置该列表后，如果用户试图注册同一个认证器，浏览器会中止流程并抛出 <code>InvalidStateError</code>。</p>\n<p>最后，别忘了将挑战等一些后续可能会用到的信息临时存储起来。Session 就是一个很好的选择。</p>\n<p>将所有信息发送到浏览器之后，我们应该可以构建出新建凭证所需的参数了。由于有多个参数需要以 <code>Uint8Array</code> 的形式传入，我们可以准备一个简单的工具函数帮我们将 Base64 的字符串转为 <code>Uint8Array</code>。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function str2ab(str){\r\n    return Uint8Array.from(window.atob(str), c=&gt;c.charCodeAt(0));\r\n}</pre>\n<p>除了 <code>challenge</code>, <code>rp</code>, <code>user</code> 和 <code>excludeCredentials</code> 几部分需要你根据具体情况设置外，上文提到的其他参数一般可以这么设置：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">publicKey: {\r\n    challenge, // 自行设置\r\n    rp, // 自行设置\r\n    user, // 自行设置\r\n    pubKeyCredParams: [\r\n        {\r\n            type: \"public-key\",\r\n            alg: -7 // ES256\r\n        },\r\n        {\r\n            type: \"public-key\",\r\n            alg: -257 // RS256\r\n        }\r\n    ],\r\n    authenticatorSelection: {\r\n        userVerification: \"discouraged\",\r\n        authenticatorAttachment: null // 除非用户指定，大部分情况下无需指定\r\n    },\r\n    excludeCredentials, // 自行设置\r\n    timeout: 60000\r\n}</pre>\n<p>然后就是传入 <code>navigator.credentials.create()</code>，拿到 <code>PublicKeyCredential</code>。如果一切顺利，接下来我们就需要考虑如何将返回的内容传回依赖方了。由于我们拿到的很多都是 <code>ArrayBuffer</code>，我们需要将其进行编码。再准备一个工具函数吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function array2b64String(a) {\r\n    return window.btoa(String.fromCharCode(...a));\r\n}</pre>\n<p>然后适当处理，我们就可以得到一个方便传输的 JSON 字符串了：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({publicKey}).then((credentialInfo) =&gt; {\r\n    const publicKeyCredential = {\r\n        id: credentialInfo.id,\r\n        type: credentialInfo.type,\r\n        rawId: array2b64String(new Uint8Array(credentialInfo.rawId)),\r\n        response: {\r\n            clientDataJSON: array2b64String(new Uint8Array(credentialInfo.response.clientDataJSON)),\r\n            attestationObject: array2b64String(new Uint8Array(credentialInfo.response.attestationObject))\r\n        }\r\n    };\r\n    return publicKeyCredential;\r\n}).then(JSON.stringify).then((authenticatorResponseJSON) =&gt; {\r\n    // 可以发送了\r\n}).catch((error) =&gt; {\r\n    console.warn(error); // 捕获错误\r\n})</pre>\n<p>依赖方收到数据以后，还需要做三件事：验证挑战、存储凭证 ID 和存储公钥。如果数据解码顺利，且收到的挑战和之前发送的一致，就可以认为注册成功，将凭证 ID 及公钥与用户关联起来。这一步有很多第三方库可以帮我们做，对于基础实现我们就不深入探究了。</p>\n<blockquote><p>由于不同厂商的认证器的实现方式不同，<strong>我们并不能保证凭证 ID 一定是全局唯一的</strong>，也就是说，凭证 ID 有可能碰撞——即使这些凭证实际上是不同的。依赖方在实现凭证 ID 的存储及查找时，需要注意和用户 ID 结合进行存储或查找，或是直接在注册认证器时在服务器端对比阻止相同的凭证 ID。</p></blockquote>\n<hr><p>接下来就可以进行验证了。某天，用户点击了验证按钮准备登录，于是浏览器发送了验证请求到依赖方，同时附上要登录的用户名。接下来依赖方至少需要发送两项内容给浏览器：<strong>挑战和用户已绑定的凭证 ID 列表（即 <code>allowCredentials</code>）。</strong></p>\n<p>之后前端的处理流程就和注册时基本一致了。只是需要注意验证流程中获取到的 <code>PublicKeyCredential</code> 的结构和注册时的稍有不同。</p>\n<p>当浏览器将数据传回后，依赖方需要做的事情就比之前要麻烦一些了。依赖方需要验证挑战，并用之前存储的公钥验证签名和签名计数。同样地，这一步有很多第三方库可以帮我们做。最后，如果验证全部通过，我们就可以允许用户登录了。</p>\n<p>到目前为止，我们已经实现了一个简单的 WebAuthn 验证服务。不过这只是一个最基础的实现，对于很多高安全要求的身份认证这是远远不够的。因此，我们需要摆脱对第三方库的依赖，深入了解 WebAuthn。你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分，不过对于基础的 WebAuthn 实现，我们的旅程就到这里了。</p>\n<h2>拓展阅读</h2>\n<p>如果你的目标只是快速了解如何开发 WebAuthn，那么你阅读到这里就可以了。同时，上一节例子中的部分代码来自于我为了这篇文章开发的 WordPress 插件 WP-WebAuthn，这个插件可以为你的 WordPress 启用 WebAuthn 无密码登录（并非二步验证），你可以查阅插件的 <a href=\"https://github.com/yrccondor/wp-webauthn\">GitHub 存储库</a>了解更多，也可以自己安装试一试。</p>\n<p>如果你正在使用 Chrome 开发，Chrome 87+ 版本添加了一个 WebAuthn 开发者面板，可以帮助你在没有任何实体验证器的情况下开发 WebAuthn 功能。你可以在 Google 的<a href=\"https://developers.google.com/web/tools/chrome-devtools/webauthn\">这篇文章</a>中了解更多。不够，如果你正在使用 Firefox，很遗憾目前我还没有找到对应的开发工具或是浏览器扩展可用。</p>\n<p>如果你希望了解更多关于非对称加密的数学证明，可以查阅阮一峰老师的<a href=\"http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html\">这篇文章</a>。</p>\n<p>如果你希望了解更多关于 Credential Management API 的信息，可以查阅<a href=\"https://medium.com/dev-channel/sign-in-on-the-web-credential-management-api-and-best-practices-d21aed14b6fe\">这篇文章</a>（英文）。</p>\n<p>如果你希望了解更多 WebAuthn 的细节，可以继续往下阅读。<span></span></p>\n<h1>深入了解 WebAuthn</h1>\n<p>如上文所说，如果摆脱对第三方库的依赖，或是要实现更安全的 WebAuthn，我们必须深入了解 WebAuthn。在这一部分中，我们会详细讨论上文没有提到的一些概念和参数，并了解 WebAuthn 中各类数据的结构以实现解码与验证。先来看一看一些进阶的选项吧。</p>\n<h2>进阶选项</h2>\n<p>没错，上文提到的传入 <code>navigator.credentials.create()</code> 和 <code>navigator.credentials.get()</code> 方法的参数其实只是所有参数的一部分。对于 <code>create()</code>，我们还可以配置这些可选内容（上文提及的已省略）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        rp: {\r\n            icon\r\n        },\r\n        user: {\r\n            icon\r\n        },\r\n        attestation,\r\n        authenticatorSelection: {\r\n            requireResidentKey\r\n        },\r\n        extensions\r\n    }\r\n})</pre>\n</pre>\n<ul>\n<li>\n<code>rp.icon: String</code> 和 <code>user.icon</code>：是的，你可以为依赖方和用户设置图标，可以使用 HTTPS URL 或 Base64，一般长度不能超过 128 字节，不过大部分浏览器不会显示图标，或是有非常小的图片体积限制，所以一般没有使用这一属性的必要</li>\n<li>\n<code>attestation: String</code>：表明依赖方是否需要证明。可选三个值：\n<ul>\n<li>\n<code>none</code>：（默认）不需要证明。如上文所述，依赖方不关心证明，因此认证器不会签名。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n<li>\n<code>indirect</code>：依赖方需要证明，但证明方式可由认证器选择。在支持匿名证明的认证器上，认证器会通过匿名证明的方式签名挑战，并向依赖方提供签名方式等信息</li>\n<li>\n<code>direct</code>：依赖方要求直接证明。此时认证器会使用烧录在认证器中的公钥进行签名，同时向依赖方提供签名方式等信息以供依赖方验证认证器是否可信。更多信息可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节</li>\n</ul>\n</li>\n<li>在 <code>authenticatorSelection</code> 中，我们还可以设置两个可选属性：\n<ul>\n<li>\n<code>authenticatorSelection.requireResidentKey: Boolean</code>：是否要求将私钥钥永久存储于认证器中。默认值为 <code>false</code>。对于 iOS/iPad OS 13，必须设置为 <code>false</code>，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n<li>\n<code>extensions: Object</code>：WebAuthn 扩展，可以提供规范之外的配置和响应。由于实际情况中很少会使用这一特性，我们不会在这篇文章中讨论它</li>\n\n<blockquote><p>将 <code>requireResidentKey</code> 设置为 <code>true</code> 可以实现无用户名的登录，即认证器同时替代了用户名和密码。需要注意的是，尽管大部分认证器可以实现无限对公私钥，<strong>但能永久存储的私钥数量是有限的</strong>（对于 Yubikey，这通常是 25），因此只应在真正需要的时候启用此特性。我们会在“<a href=\"https://flyhigher.top/#login-without-username\">无用户名登录</a>”一节中详细讨论原因。</p></blockquote>\n<blockquote><p><strong>如果你没有高安全需求（如银行交易等），请不要向认证器索取证明</strong>，即将 <code>attestation</code> 设置为 \"none\"。对于普通身份认证来说，要求证明不必要的，且会有浏览器提示打扰到用户。</p></blockquote>\n<blockquote><p>Android 暂时无法实施用户验证，进而会导致依赖方验证失败。你可以在<a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=997538\">这里</a>追踪这个特性的实现情况。</p></blockquote>\n<blockquote>\n<p>对于 <code>extensions</code>，由于目前浏览器支持和应用范围有限，我们不会在这篇文章中涉及，不过你可以看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    uvm: true, // 要求认证器返回用户进行验证的方法\r\n    txAuthSimple: \"Please proceed\" // 在认证器上显示与交易有关的简短消息\r\n}</pre>\n<p>你可以在<a href=\"https://www.w3.org/2019/01/webauthn-extensions.html\">这个页面</a>了解更多关于 <code>extensions</code> 的信息。</p>\n</blockquote>\n<p>对于 <code>get()</code>，我们其实只有一个可选内容没讲了，即 <code>extensions</code>。和上文一样，我们不会在这篇文章中讨论它。</p>\n<p>就这些了！<span></span></p>\n<h2>手动解个码</h2>\n<p>是时候看看如何手动解码了。我们将会在这一节中讨论认证器返回的数据的结构以及如何正确地解码它们。</p>\n<p>首先我们来看看如何处理注册过程中认证器发回的数据。假设所有 <code>ArrayBuffer</code> 类型的值都被正确地以 Base64 编码，且后端已经将 JSON 的字符串解析为字典。先来复习一下，我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"ZRBkDBCEtq...9XY8atOcbg\",\r\n    type: \"public-key\",\r\n    rawId: \"ZRBkDBCEtq...9XY8atOcbg==\",\r\n    response: {\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...i5jcmVhdGUifQ==\",\r\n        attestationObject: \"o2NmbXRkbm9uZWd...xNHuAMzz2LxZA==\"\r\n    }\r\n}</pre>\n<p>这里的 <code>id</code> 就是凭证的 ID，如果验证正确，我们最终要将它存储起来并于用户关联。同时可以看到 Base64 编码后的 <code>rawId</code> 其实和 <code>id</code> 是一致的（不过 <code>id</code> 是 Base64URL 编码的）。而 <code>type</code> 则一定是 \"public-key\"。</p>\n<p>不过，我们主要关心的还是 <code>respose</code> 中的两项内容。首先是 <code>clientDataJSON</code>。它的处理比较简单，看名字就知道，它应该是一个 JSON 字符串。</p>\n<blockquote><p>小技巧：如果你看到一个 Base64 编码的字符串以 \"ey\" 开头，那么它大概率是一个 Base64 编码的 JSON。</p></blockquote>\n<p>将<code>clientDataJSON</code> Base64 解码再 JSON 解码之后我们就能得到一个字典：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"NI4i1vsNmP2KHcmyFnBCKRVQPfHgg34SsYZUOPZY2lM\",\r\n    extra_keys_may_be_added_here: \"do not compare clientDataJSON against a template. See https://goo.gl/yabPex\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>结构一目了然。在这里，我们需要验证三项内容：</p>\n<ul>\n<li>\n<code>challenge</code> 和之前发送的一致</li>\n<li>\n<code>origin</code> 为创建凭证的页面的源（协议+主机名+端口号，并非 URL）</li>\n<li>\n<code>type</code> 为 \"webauthn.create\"</li>\n</ul>\n<p>同时可以注意到有一个奇怪的 <code>extra_keys_may_be_added_here</code>。这其实是 Google 在 Chrome 中搞的一点小把戏，有一定概率会出现，提醒我们需要将 JSON 解析后再验证键值以防额外插入的键值影响验证。具体信息你可以访问那个 URL 看一看。</p>\n<p>对于 Firefox，我们会多得到两项 <code>clientExtensions</code> 和 <code>hashAlgorithm</code> ，分别指明了客户端扩展数据和签名算法。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"3-4\">{\r\n    challenge: \"dg6ost6ujhAA0g6WqLe-SOOH-tbhvjW9Sp90aPKlLJI\",\r\n    clientExtensions: {},\r\n    hashAlgorithm: \"SHA-256\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>由于本文不考虑扩展数据，因此我们可以不考虑 <code>clientExtensions</code>。同时由于目前规范中指定的签名算法只有 SHA-256 一种，因此现阶段我们也可以简单地忽略 <code>hashAlgorithm</code>。</p>\n<p><code>clientDataJSON</code> 很简单地就处理完了。接下来我们要来看看 <code>attestationObject</code>。先来看看 <code>attestationObject</code> 的结构图示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\" alt=\"attestationObject 的结构\" width=\"1056\" height=\"532\" class=\"aligncenter size-full wp-image-2245\"></a>\n<p><code>attestationObject</code> 是 CBOR 编码后再被 Base64 编码的，因此我们需要额外对其进行 CBOR 解码。</p>\n<blockquote><p>CBOR (Concise Binary Object Representation, 简明二进制对象表示) 是一种多应用于物联网领域的编码方式，你可以将它看作体积更小、更方便物联网传输的二进制 JSON。大部分语言都可以找到对应的 CBOR 解码库。</p></blockquote>\n<p>我们当然不会手解 CBOR，直接来看看解开之后的样子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"none\",\r\n    attStmt: {},\r\n    authData: [211, 217, 43, 24, 199, ..., 97, 238, 166, 67, 107]\r\n}</pre>\n<p>这些键值的含义如下：</p>\n<ul>\n<li>\n<code>fmt</code>：标明证明的格式。WebAuthn 预定义了几种格式，分别为：\n<ul>\n<li>\n<code>none</code>：没有证明</li>\n<li>\n<code>packed</code>：为 WebAuthn 优化的证明格式</li>\n<li>\n<code>android-safetynet</code>：Android 使用的格式</li>\n<li>\n<code>android-key</code>：又是 Android 使用的格式</li>\n<li>\n<code>fido-u2f</code>：FIDO U2F 认证器使用的格式</li>\n<li>\n<code>tpm</code>：TPM 可信平台模块使用的格式</li>\n</ul>\n</li>\n<li>\n<code>attStmt</code>：证明对象，具体格式根据 <code>fmt</code> 的不同会有所不同</li>\n<li>\n<code>authData</code>：包含公钥、签名计数等来自认证器的数据</li>\n</ul>\n<p>诶，例子里的 <code>attStmt</code> 怎么是空的？还记得之前说的吗？大部分情况下，<strong>如果依赖方不要求证明，那么认证器不会签名挑战</strong>，于是 <code>fmt</code> 会变为 \"none\"，<code>attstmt</code> 会为空。如果不是高安全要求，我们可以只对这一种情况做支持。</p>\n<blockquote><p>注意，部分情况下 Firefox 会在不要求证明（即 <code>attestation</code> 为 \"none\"）时会返回 <code>fmt</code> 为 \"packed\" 的证明。<strong>这是符合规范的。</strong>此时认证器会进行自证明，你可以视情况进行处理。具体可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>对于非 \"none\" 的 <code>fmt</code> 我们稍后再谈，现在我们先来看看 <code>authData</code>。来复习一下 <code>authData</code> 的结构：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\" alt=\"authData 的结构\" width=\"1056\" height=\"384\" class=\"aligncenter size-full wp-image-2240\"></a>\n<p>对于它的解码比较简单粗暴，我们要做的就是根据图示将它切开，然后适当地转换类型。其中各部分的含义如下：</p>\n<ul>\n<li>\n<code>rpIdHash</code>：如其名，SHA-256 的 <code>rpId</code>，长度 32 字节</li>\n<li>\n<code>flags</code>：标识认证状态，长度 1 字节。其中 8 位分别为：\n<ul>\n<li>\n<code>ED</code>：是否有扩展数据</li>\n<li>\n<code>AT</code>：是否包含 <code>attestedCredentialData</code>。通常注册认证器时会包含 <code>attestedCredentialData</code>，而验证时不包含</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>\n<code>UV</code>：用户是否已验证</li>\n<li>保留位</li>\n<li>\n<code>UP</code>：用户是否在场</li>\n</ul>\n</li>\n<li>\n<code>signCount</code>：签名计数，长度 4 字节</li>\n<li>\n<code>attestedCredentialData</code>：包含公钥等凭据数据，变长。其结构如下：\n<ul>\n<li>\n<code>aaguid</code>：认证器的 AAGUID (Authenticator Attestation GUID)，对于同一型号的认证器，它们的 AAGUID 是相同的</li>\n<li>\n<code>credentialIdLength</code>：标识 <code>credentialId</code> 的长度，长度 2 字节</li>\n<li>\n<code>credentialId</code>：凭证 ID，和 <code>rawId</code> 一致，长度由 <code>credentialIdLength</code> 定义</li>\n<li>\n<code>credentialPublicKey</code>：CBOR 编码的 COSE 格式的凭证公钥，变长</li>\n</ul>\n</li>\n<li>\n<code>extensions</code>：扩展数据，变长，本文不讨论</li>\n</ul>\n<blockquote><p>出于隐私考虑，如果不要求证明，认证器会以 0 填充 AAGUID。</p></blockquote>\n<p>如果你的后端在使用 Node.js，这里有个工具函数可以帮你完成这一步（不考虑 <code>extensions</code>）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function parseAuthData(buffer){\r\n    let rpIdHash = buffer.slice(0, 32);\r\n    buffer = buffer.slice(32);\r\n  \r\n    let flagsBuf = buffer.slice(0, 1);\r\n    buffer = buffer.slice(1);\r\n\r\n    let flagsInt = flagsBuf[0];\r\n    let flags = {\r\n        up: !!(flagsInt &amp; 0x01),\r\n        uv: !!(flagsInt &amp; 0x04),\r\n        at: !!(flagsInt &amp; 0x40),\r\n        ed: !!(flagsInt &amp; 0x80),\r\n        flagsInt\r\n    }\r\n\r\n    let counterBuf = buffer.slice(0, 4);\r\n    buffer = buffer.slice(4);\r\n  \r\n    let counter = counterBuf.readUInt32BE(0);\r\n\r\n    let aaguid = undefined;\r\n    let credID = undefined;\r\n    let COSEPublicKey = undefined;\r\n\r\n    if(flags.at) {\r\n        aaguid = buffer.slice(0, 16);\r\n        buffer = buffer.slice(16);\r\n\r\n        let credIDLenBuf = buffer.slice(0, 2);\r\n        buffer = buffer.slice(2);\r\n\r\n        let credIDLen = credIDLenBuf.readUInt16BE(0);\r\n        credID = buffer.slice(0, credIDLen);\r\n\r\n        buffer = buffer.slice(credIDLen);\r\n        COSEPublicKey = buffer;\r\n    }\r\n\r\n    return {rpIdHash, flagsBuf, flags, counter, counterBuf, aaguid, credID, COSEPublicKey}\r\n}</pre>\n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>解开后，依赖方至少需要做四件事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>存储签名计数</li>\n<li>存储公钥</li>\n</ol>\n<blockquote><p>签名计数不一定从 0 开始。</p></blockquote>\n<p>对于公钥，也就是 <code>credentialPublicKey</code>，我们需要多一次 CBOR 解码，然后就可以得到类似这样的公钥：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    kty: \"EC\",\r\n    alg: \"ECDSA_w_SHA256\",\r\n    crv: \"P-256\",\r\n    x: \"ZGQALNfqo0L7HFYQHFHCS/X5db49z0ePnuQEs3w3X8w=\",\r\n    y: \"6qYxhnjYuez/Q8N6vX7nIIGfxFWdZ25NzQfZYuYOalA=\"\r\n}</pre>\n<p>然后可以选择适当的方法将其存储起来，之后的步骤本文就不再赘述了。现在，将目光拉回来，让我们看看包含证明的 <code>attestationObject</code> 是怎么样的。我们来看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"packed\",\r\n    attStmt: {\r\n        alg: -7,\r\n        sig: [48, 70, 2, 33, 0, ..., 132, 78, 46, 100, 21],\r\n        x5c: [\r\n            [48, 130, 2, 189, 48, 130, 1, 165, 160, 3, ..., 177, 48, 125, 191, 145, 24, 225, 169, 41, 248]\r\n        ]\r\n    },\r\n    authData: [211, 217, 43, 24, 199, ..., 158, 54, 87, 126, 54]\r\n}</pre>\n<p>这里有一个使用 \"packed\" 格式的证明。此时，<code>attStmt</code> 中包含三个值：</p>\n<ul>\n<li>\n<code>alg</code>：签名算法</li>\n<li>\n<code>sig</code>：签名值</li>\n<li>\n<code>x5c</code>：X.509 编码的证书链</li>\n</ul>\n<p>我们不会在这一节中详述对签名的验证。要了解更多信息，你可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。现在，让我们来看看如何处理验证过程中认证器发回的数据。我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"hmqdxPLit9...BWeVxZqdvU\",\r\n    type: \"public-key\",\r\n    rawId: \"hmqdxPLit9V...BWeVxZqdvU=\",\r\n    response: {\r\n        authenticatorData: \"09krGMcWTf...UFAAAABA==\",\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...XRobi5nZXQifQ==\",\r\n        signature: \"UsXZV3pvT3np8btj6V0g...WBkaqyt88DrD40qh+A==\",\r\n        userHandle: \"MmYxNWYzZjQyZjM...Tg2ZDY4NzhlNw==\"\r\n    }\r\n}</pre>\n<p><code>id</code>, <code>rawId</code> 和 <code>type</code> 和之前一样，这里就不再赘述了。让我们来看看 <code>response</code>。首先是 <code>clientDataJSON</code>，和之前的解法一样，要验证的内容也一样，只是 <code>type</code> 从 \"webauthn.create\" 变成了 \"webauthn.get\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"bnkd2CmrEuvKnAFXs2QlC3SKlg4XFvGtP4HJL1yEWyU\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.get\"\r\n}</pre>\n<p>然后是 <code>userHandle</code>。前面讲过，这是认证器在创建凭证时的用户 ID。如果用户在使用 U2F 认证器，很可能这一项为空，所以大部分情况下我们不关心这一项。</p>\n<p>接着来看 <code>authenticatorData</code>。这其实就是之前的 <code>attestedCredentialData</code>，只是这次不包含公钥。以相同的方式切开数据，我们应该可以得到 <code>rpIdHash</code>, <code>flags</code>和 <code>signCount</code> 三项。此时，依赖方至少需要做这三样事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>验证签名计数大于之前存储的计数，并更新存储的计数</li>\n</ol>\n<blockquote><p>如果签名计数比之前的小，那么这个认证器很可能是伪造的，应该中止验证并返回验证失败。同时，签名计数不一定每次按 1 递增，通常只要计数比此前的大就认为计数检查通过。</p></blockquote>\n<p>最后，我们来看 <code>signature</code>，也就是签名。不过这个签名不是简单的对挑战的签名，具体算法如图所示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\" alt=\"签名过程\" width=\"1034\" height=\"587\" class=\"aligncenter size-full wp-image-2231\"></a>\n<p>计算签名时，认证器会将 <code>authenticatorData</code> 与 <code>clientDataHash</code>（也就是 <code>clientDataJSON</code> 的 SHA-256 Hash）拼接起来，并使用对应的私钥签名。依赖方应该使用对应的公钥将其解密，并验证内容是否是 <code>authenticatorData</code> 与 <code>clientDataHash</code> 的拼接。这部分的计算不在本文的讨论范围内。</p>\n<p>最后，如果全部验证通过，返回验证成功。<span></span></p>\n<h2>验证认证器</h2>\n<p>WebAuthn 已经很安全了，但有的时候我们还要让它更安全一点。比如，如果用户在使用伪造的或是自制的认证器，认证器的安全性就得不到保证。此时，依赖方就需要验证认证器是否是可信的认证器。</p>\n<blockquote><p>这一过程仅发生在注册认证器时。此时，如果认证器验证通过，就可以存储公钥，后续步骤和之前描述的一致。</p></blockquote>\n<blockquote><p>再次说明，如果不是对安全性有极高的要求，向认证器索取证明以验证认证器是否可信是没有必要的。此外，验证认证器需要依赖方自行维护可信认证器列表，大大增加了维护的复杂性。</p></blockquote>\n<p>在调用 <code>navigator.credentials.create()</code> 时，我们可以将 <code>attestation</code> 设置为非 \"none\" 来向认证器索取证明。除无证明外，WebAuthn 定义了四种证明方式：</p>\n<ul>\n<li>Basic Attestation (Basic) ：基础的证明方式，认证器会使用认证器私钥签名</li>\n<li>Self Attestation (Self) ：自证明，认证器会使用凭证私钥签名</li>\n<li>Attestation CA (AttCA) ：认证器会使用多个证明私钥之一签名</li>\n<li>Elliptic Curve based Direct Anonymous Attestation (ECDAA) ：通过 <a href=\"https://en.wikipedia.org/wiki/Direct_Anonymous_Attestation\">DAA</a> 实现的匿名证明</li>\n</ul>\n<blockquote><p>和验证过程一样，这里签名的目标是 <code>authenticatorData</code> 和 <code>clientDataHash</code> 的连接。</p></blockquote>\n<p>还记得 <code>create()</code> 时 <code>attestation</code> 可选的三个值吗？这个值会决定认证器最终使用哪种方式进行证明。复习一下：</p>\n<ul>\n<li>\n<code>none</code>：大部分情况下认证器会选择不进行证明，部分认证器会进行自证明。此时 AAGUID 会被 0 填充</li>\n<li>\n<code>indirect</code>：认证器会试图通过替换 AAGUID 和选择合适的证明方式来进行匿名证明，具体方式由认证器选择</li>\n<li>\n<code>direct</code>：认证器会提供最直接的证明信息</li>\n</ul>\n<p>注意，大部分情况下，当认证器需要向依赖方证明自己可信时需要提供认证器公钥，<strong>这会触发浏览器提示，只有用户同意后认证器才会进行证明，否则认证器将不提供证明。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\" alt=\"浏览器提示\" width=\"446\" height=\"283\" class=\"aligncenter size-full wp-image-2217\"></a>\n<blockquote><p>为什么浏览器会说“安全密钥的品牌和型号”？事实上，为了避免用户通过认证器证书被跨依赖方追踪，FIDO 要求使用相同认证器证书的认证器的数量不能少于 100,000。于是大部分认证器厂商会选择<strong>让同一型号的认证器共用同一份证书。</strong>因此，浏览器的会询问用户是否同意“查看安全密钥的品牌和型号”。</p></blockquote>\n<blockquote><p>Android Safety Net 不会向用户询问是否同意，而是会静默进行证明。</p></blockquote>\n<p>当证明不为空时，依赖方收到数据后根据 <code>attestationObject.fmt</code> 的不同，需要选择不同的验证方式来验证认证器的可信情况。出于篇幅原因，这里我们不会讨论每一种 <code>fmt</code> 的验证方式，更多信息你可以查阅 <a href=\"https://www.w3.org/TR/webauthn/#defined-attestation-formats\">W3C 文档</a>。</p>\n<p>当 <code>fmt</code> 为 <code>packed</code> 时，<code>attestationObject.attStmt</code> 可能会有三种格式：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// 自证明\r\n{\r\n    alg, // 算法\r\n    sig // 签名\r\n}\r\n// 基础或证明 CA 证明\r\n{\r\n    alg,\r\n    sig,\r\n    x5c // X.509 证书链\r\n}\r\n// 椭圆曲线证明\r\n{\r\n    alg,\r\n    sig,\r\n    ecdaaKeyId // ECDAA-Issuer 公钥标识符\r\n}</pre>\n<p>此时，依赖方需要检查证书符合预期格式并检查证书是否在可信链上。首先，如果证明中既没有 <code>ecdaaKeyId</code> 也没有 <code>x5c</code>，就说明这个证明使用的是自证明，只需使用认证器提供的公钥验证即可；如果有 <code>x5c</code>，那么就需要验证 <code>x5c</code> 中的证书是否在可信链上。将 <code>x5c</code> 中的每个证书以 Base64 编码，按 64 个字符切开，并在头尾加上 <code>-----BEGIN CERTIFICATE-----</code> 和 <code>-----END CERTIFICATE-----</code>就能得到一个证书字符串了。之后，依赖方需要验证证书是否可信。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function base64ToPem(b64cert){\r\n    let pemcert = '';\r\n    for(let i = 0; i \n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>至于 <code>ecdaaKeyId</code>，由于目前应用较少，处理方法可能需要你另寻资料了。检查证书的具体步骤已经超出了本文的范围，具体可以查阅<a href=\"https://medium.com/@herrjemand/verifying-fido2-packed-attestation-a067a9b2facd\">这篇文章</a>（英文）。</p>\n<blockquote><p>你可以在 <a href=\"https://fidoalliance.org/metadata/\">FIDO Metadata Service</a> 找到各大厂商认证器的可信证书链。</p></blockquote>\n<p>当在 Android 上调起 WebAuthn 时，大部分情况下 <code>fmt</code> 将会为 <code>safety-net</code>。此时 <code>attestationObject.attStmt</code> 的结构会是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    ver: \"200616037\",\r\n    response: {\r\n        type: \"Buffer\",\r\n        data: [101, 121, 74, 104, 98, ..., 115, 104, 104, 82, 65]\r\n    }\r\n}</pre>\n<p>此时，<code>clientDataJSON</code> 中还会出现 <code>androidPackageName</code> 键，值是调起 WebAuthn 验证的应用的包名，如 Chrome 就是 \"com.android.chrome\"。</p>\n<p>在这个证明中，<code>data</code> 其实是一个 JWT 字符串，我们可以将它编码为字符串并将其按照 JWT 进行解码（别忘了验证 JWT 签名）。最终我们会得到一个类似这样的 Payload：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    nonce: \"0QAurN4F9wik6GEkblDJhGuf4kuaqZn5zaaxlvD1hlA=\",\r\n    timestampMs: 1584950686460,\r\n    apkPackageName: \"com.google.android.gms\",\r\n    apkDigestSha256: \"2BQHno+bmWWwdLUYylS8HLt5ESJzci3nt2uui71ojyE=\",\r\n    ctsProfileMatch: true,\r\n    apkCertificateDigestSha256: [\r\n        \"8P1sW0EPicslw7UzRsiXL64w+O50Ed+RBICtay2g24M=\"\r\n    ],\r\n    basicIntegrity: true,\r\n    evaluationType: \"BASIC\"\r\n}</pre>\n<p>其中包含了有关设备状态的一些信息。比如说，如果 <code>ctsProfileMatch</code> 为 <code>false</code>，那么该设备很有可能被 root 了。对于高安全要求的场景，我们可以视情况进行验证。</p>\n<p>同时我们可以在 JWT Header 中验证证明的有效性。我们应该能取得这样的 Header：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    alg: \"RS256\",\r\n    x5c: [\r\n        \"MIIFkzCCBHugAwIBAgIR...uvlyjOwAzXuMu7M+PWRc\",\r\n        \"MIIESjCCAzKgAwIBAgIN...UK4v4ZUN80atnZz1yg==\"\r\n    ]\r\n}</pre>\n<p>这里的结构就和上方的 <code>x5c</code> 验证类似了。具体步骤可以参考<a href=\"https://medium.com/@herrjemand/verifying-fido2-safetynet-attestation-bd261ce1978d\">这篇文章</a>（英文）。</p>\n<p>其他所有格式的验证方式也都可以在<a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">这篇文章</a>（英文）中找到。<span></span></p>\n<h2>无用户名登录</h2>\n<p>认证器已经代替了密码，可是这还不够！在进行第一因素认证（即使用 WebAuthn 登录）时，我们还是需要输入用户名，然后才能进行身份认证。懒惰是第一生产力，我们能不能不输入用户名就进行身份认证呢？实际上，大部分认证器都允许我们无用户名登录。<strong>而这一特性的核心就是 Resident Key 客户端密钥驻留。</strong></p>\n<p>你可以思考一下，为什么普通的 WebAuthn 为什么不能实现无用户名登录？事实上，大部分认证器为了实现无限对公私钥，会将私钥通过 Key Warp 等技术加密后包含在凭证 ID 中发送给依赖方，这样认证器本身就不用存储任何信息。不过，这就导致需要身份认证时，依赖方必须通过用户名找到对应的凭证 ID，将其发送给认证器以供其算出私钥。</p>\n<blockquote><p>Yubikey 实现了一个基于 HMAC 的算法，认证器可以在私钥不离开认证器的前提下（常规的 Key Warp 算法中实际上私钥离开了认证器）通过一些输入和凭证 ID 重新计算私钥，你可以阅读<a href=\"https://www.yubico.com/blog/yubicos-u2f-key-wrapping/\">这篇文章</a>了解更多。</p></blockquote>\n<blockquote><p>客户端通过凭证 ID 查找对应认证器的算法根据系统的不同是不同的。通常凭证 ID 中会包含认证器信息，因此系统可以通过凭证 ID 找到对应的认证器。</p></blockquote>\n<p>要避免输入用户名，我们可以要求认证器将私钥在自己的内存中也存储一份。这样，依赖方无需提供凭证 ID，认证器就可以通过依赖方 ID 找到所需的私钥并签名公钥。以下是具体流程：</p>\n<p>注册时：</p>\n<ol>\n<li>依赖方请求新建凭证，同时要求启用客户端密钥</li>\n<li>认证器生成一对公私钥，并将私钥存储在永久内存中且与依赖方 ID 及用户 ID 绑定，随后将公钥发送给依赖方以供存储</li>\n<li>依赖方将用户 ID 即公钥与用户绑定</li>\n</ol><p>验证时：</p>\n<ol>\n<li>依赖方请求验证，但不必提供除依赖方 ID 以外的更多信息</li>\n<li>用户选择认证器</li>\n<li>认证器根据依赖方 ID 找到对应私钥</li>\n<li>如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录</li>\n<li>确定私钥后，认证器签名挑战并将其返回，同时返回用户 ID</li>\n<li>依赖方通过用户 ID 找到对应用户并用对应公钥检查签名，正确则允许对应用户登录</li>\n</ol><blockquote><p>可以看到，这个特性同时要求认证器存储用户 ID，即上面提到过的 <code>userHandle</code>。依赖方需要根据此信息找到对应用户，因此不支持 <code>userHandle</code> 的 U2F 认证器无法进行无用户名登录。</p></blockquote>\n<blockquote><p>如之前所说，<strong>认证器能永久存储的私钥数量是有限的</strong>，因此只应在真正需要无用户名登录的时候启用此特性。</p></blockquote>\n<blockquote><p>目前暂时没有办法检测认证器是否支持客户端密钥驻留，因此在无用户名验证失败时应 fallback 至常规的 WebAuthn 验证，即向用户询问用户名。</p></blockquote>\n<p>现在让我们来看看如何实现这一特性吧。首先，调用 <code>navigator.credentials.create()</code> 时我们需要注意两个参数：<code>requireResidentKey</code> 必须为 <code>true</code>，<code>userVerification</code> 必须为 \"required\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"5-6\">navigator.credentials.create({\r\n    publicKey: {\r\n        ...\r\n        authenticatorSelection: {\r\n            requireResidentKey: true,\r\n            userVerification: \"required\"\r\n            ...\r\n        },\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Windows Hello <strong>似乎</strong>会存储所有已注册的凭据，因此无论是否指定 <code>requireResidentKey</code>，你都可以通过 Windows Hello 进行无用户名登录。</p></blockquote>\n<p>随后，浏览器会询问用户是否允许认证器存储私钥。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\" alt=\"浏览器提示\" width=\"445\" height=\"285\" class=\"aligncenter size-full wp-image-2208\"></a>\n<p>如果用户同意，认证器会存储私钥，并和普通的 WebAuthn 一样返回信息。不过，依赖方收到数据之后，只需将公钥、用户 ID 与用户关联起来，而不必再将凭证 ID 与用户关联起来。至此注册完成。</p>\n<p>之后，在用户请求登录时，无需再向依赖方提供用户名。同时在传入 <code>navigator.credentials.get()</code> 的参数中也有两个需要注意：<code>userVerification</code> 必须为 \"required\"，同时 <code>allowCredentials</code> 必须为空。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"4-5\">navigator.credentials.get({\r\n    publicKey: {\r\n        ...\r\n        userVerification: \"required\",\r\n        allowCredentials: [],\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Android 暂不支持无用户名验证，空的 <code>allowCredentials</code> 会导致浏览器返回 <code>NotSupportedError</code> 错误。</p></blockquote>\n<p>此时，认证器会根据依赖方 ID 找到对应的私钥。如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录。用户选择后，认证器就会使用对应的私钥签名挑战并将其返回。此时，<code>userHandle</code> 一定不为空。</p>\n<p>依赖方收到数据后，需要将 <code>userHandle</code> 作为用户 ID 找到对应的用户，并使用对应的公钥验证签名。如果验证成功，则认为对应的用户身份认证成功，依赖方可以允许其登录。至此验证结束。</p>\n<blockquote><p>有的时候你可能会需要清除认证器中的密钥。绝大多数认证器都提供了对应的软件以供清除存储的密钥，但大部分情况下这会重置整个认证器，这意味着相关认证器此前的所有凭证均会失效。因此建议不要将日常使用的认证器作为开发测试用的认证器。</p></blockquote>\n<h2>从 U2F 认证迁移</h2>\n<p>如果你的服务此前提供了 U2F 第二因素认证，你可能会希望在将依赖方从 U2F 升级到 WebAuthn 时用户此前注册的 U2F 认证器仍然可用而无需重新注册。由于 WebAuthn 向后兼容 U2F 设备，用户是可以继续使用原有的 U2F 认证器的。不过，由于 WebAuthn 的依赖方 ID 与 U2F 的 <code>appid</code> 并不一定相同，你需要将原有的 U2F <code>appid</code> 随 WebAuthn 流程一起传递给认证器，认证器才能使用正确的私钥进行响应。</p>\n<p>要实现这一点，我们只需要在注册及认证仪式中使用 WebAuthn 的 <code>appid</code> 扩展。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    appid: \"https://example.com\" //U2F appid\r\n}</pre>\n<p>此时认证器便可以得到正确的私钥，之后的流程与正常情况一致；依赖方除了正常的 WebAuthn 流程外，不需要再做任何其它操作。</p>\n<h2>拓展阅读</h2>\n<p>我们的 WebAuthn 之旅到这里就真的结束了。不过，你仍然可以自行探究，了解更多。<strong>本文只是一个粗浅的使用指南</strong>，而被称为“Web 身份认证的未来”的 WebAuthn 的深层还要很多细节值得我们挖掘学习，不过本文不会再继续讨论了。</p>\n<p>如果你想了解更多关于 WebAuthn 的信息，最好的方法是直接阅读 <a href=\"https://www.w3.org/TR/webauthn\">W3C 规范</a>。此外，Yubico 也提供了不错的 <a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn 文档</a>。</p>\n<p>要了解更多认证器存储凭证的信息，你可以阅读<a href=\"https://duo.com/labs/tech-notes/how-security-keys-store-credentials\">这篇文章</a>（英文）。</p>\n<p>如果你想了解更多 Android Safety Net 是怎样运作的，可以观看<a href=\"https://youtu.be/8lv_9mydrjg\">这个视频</a>，并通过 <a href=\"https://developer.android.com/training/safetynet/attestation\">Google 的文档</a>了解 Android Safety Net 的更多信息。</p>\n<p>如果你想方便地调试 WebAuthn，<a href=\"https://webauthn.me/\">webauthn.me</a> 提供了一个非常直观方便的<a href=\"https://webauthn.me/debugger\">调试器</a>。</p>\n<h1>参考资料</h1>\n<p><a href=\"https://www.w3.org/TR/webauthn\">WebAuthn Level 1 规范 - W3C</a><br><a href=\"https://github.com/w3c/webauthn\">WebAuthn Level 2 草案 - W3C</a><br><a href=\"https://blog.techbridge.cc/2019/08/17/webauthn-intro/\">一起来了解Web Authentication - TechBridge 技术共笔部落格</a><br><a href=\"https://medium.com/@herrjemand/introduction-to-webauthn-api-5fd1fb46c285\">Introduction to WebAuthn API - Medium</a><br><a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">WebAuthn/FIDO2: Verifying responses - Medium</a><br><a href=\"https://obeta.me/posts/2019-03-01/WebAuthn%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8\">WebAuthn介绍与使用 - obeta</a><br><a href=\"https://webauthn.io/\">webauthn.io</a><br><a href=\"https://webauthn.guide/\">webauthn.guide</a><br><a href=\"https://webauthn.me/\">webauthn.me</a><br><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion\">Attestation and Assertion - MDN</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Authentication_API\">Web Authentication API - MDN</a>（顺便翻译了一半）<br><a href=\"https://fidoalliance.org/fido-technotes-the-truth-about-attestation/\">FIDO TechNotes: The Truth about Attestation - FIDO Alliance</a><br><a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn Developer Guide - Yubico</a><br><a href=\"https://en.wikipedia.org/wiki/WebAuthn\">WebAuthn - Wikipedia</a><br><a href=\"https://techcommunity.microsoft.com/t5/identity-standards-blog/all-about-fido2-ctap2-and-webauthn/ba-p/288910\">All about FIDO2, CTAP2 and WebAuthn - Microsoft Tech Community</a><br><a href=\"https://webauthn-doc.spomky-labs.com/\">Webauthn Framework</a><br><a href=\"https://zhuanlan.zhihu.com/p/25279015\">如何开发支持 FIDO U2F 登录的网站 - 知乎专栏</a><br></p></pre>\n","link":"https://flyhigher.top/develop/2160.html"},{"title":"NLP 找门：用朴素贝叶斯进行文本分类","date":"2020-01-29 11:39:58","description":"\n<blockquote>\n<p>有一天，神收到了一封垃圾邮件，于是世界上就有了朴素贝叶斯算法。</p>\n<footer>——我瞎编的</footer>\n</blockquote>\n<p>为什么这篇文章的标题是 NLP 找门呢？因为如果你看完了这篇文章，你就可以<strong>准备入门</strong>自然语言处理 (<strong>N</strong>atural <strong>L</strong>anguage <strong>P</strong>rocessing) 了。我会把这篇文章当作一篇彻彻底底的 NLP 入门文章来写，尽量避免“专业高端”词汇和“全是奇怪符号”的式子，这样<strong>只要你有高中数学基础</strong>，就能毫无压力地看完这篇文章，学会使用朴素贝叶斯分类算法分类文本。</p>\n<p>让我们开始吧。</p>\n<h1>所以，啥是朴素贝叶斯？</h1>\n<p>简单来说，朴素贝叶斯 (Naïve Bayes) <strong>是一个简单但高效的分类算法</strong>，在进行不复杂的文本分类时高效且拥有不低的准确度，判断垃圾邮件就是用朴素贝叶斯进行文本分类的一个经典例子。当然朴素贝叶斯分类不仅能用在 NLP 中，在许多分类问题中朴素贝叶斯也有非常好的效果，但我们今天只关注它在 NLP 中的应用。</p>\n<p>要了解朴素贝叶斯，我们要先来了解一下贝叶斯定理。</p>\n<blockquote>\n<p>每增加一个数学公式都会使读者减半。</p>\n<footer>——霍金</footer>\n</blockquote>\n<p>那么，就让我们先来看看贝叶斯定理的公式吧（笑</p>\n<p>$$P(A|B) = \\frac{P(AB)}{P(B)} = \\frac{P(B|A)P(A)}{P(B)}$$</p>\n<p>其实还是很简单的，运用高中的条件概率知识就能理解。本质上，贝叶斯定理给出了一种方法，使得我们可以在 \\(P(A|B)\\) 和 \\(P(B|A)\\) 之间互相转换，因为通常情况下它们是不一样的。</p>\n<p>要更好地理解，请考虑这样一个例子：</p>\n<blockquote><p>假设有一个学校图书馆，图书管理员正为找不到某本书而发愁。已知老师有 70% 的意愿借走这本书，而是学生的意愿是 30%，这个学校的师生比例是 1:10，那么借走这本书的人是老师的概率有多大？</p></blockquote>\n<p>设学校总人数为 \\(T\\)，我们可以很容易地写出这样的一个式子：</p>\n<p>$$\\begin{align} P &amp; = \\frac{T\\cdot\\frac{1}{11}\\cdot 70\\%}{T\\cdot\\frac{1}{11}\\cdot 70\\%+T\\cdot\\frac{10}{11}\\cdot 30\\%} \\\\ &amp; = \\frac{70\\%}{70\\%+10\\times30\\%} \\\\ &amp; = \\frac{7}{37} \\end{align}$$</p>\n<p>这就是贝叶斯定理了！等等，你可能会挠挠头，这哪里是贝叶斯了？别急，如果我们把最上面的式子换个字母的话...</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>在这里，\\(H\\) 指 Hypothesis，即假设，而 \\(E\\) 指 Evidence，即证据。这样，这个式子就很好理解了，在我们上面的例子里，借走书是证据，那么 \\(P(E)\\) 就是某个人选择借走这本书的概率；这个人是老师是假设，那么这个人是老师的概率是 \\(P(H)\\)。<strong>注意这里的概率指在学校中抽一个人是老师的概率，并不是“在借走书的前提下”这个人是老师的概率</strong>，而“在借走书的前提下”这个人是老师的概率应该是 \\(P(H|E)\\)，也正是我们要求的概率。同样地，而“这个人是老师”的前提下借走书的概率就是 \\(P(E|H)\\) 了。</p>\n<p>那么再来看看上面我们凭小学知识就列出的计算式，如果把里面的具体数据换成概率来表示的话，这个式子就会变成...</p>\n<p>$$P(H|E) = \\frac{T\\cdot P(E|H)P(H)}{T\\cdot P(E|H)P(H) + T\\cdot P(E|\\neg H)P(\\neg H)}$$</p>\n<p>好吧，这里解释一下，\\(\\neg\\) 符号表示“非”，所以 \\(P(E|\\neg H)\\) 表示在“这个人不是老师”的前提下借走书的概率。而 \\(T\\cdot P(E|H)P(H)\\) + \\(T\\cdot P(E|\\neg H)P(\\neg H)\\)，即“可能借走书的老师的数量 + 可能借走书的学生的数量”，就是“可能借走书的人的数量”了，也就是 \\(T\\cdot P(E)\\)。上下消去 \\(T\\)，我们就能得到上面的式子了。</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>这就是贝叶斯了定理。如果你还是不太清楚，可以去看看 3Blue1Brown 的<a href=\"https://www.bilibili.com/video/av84799361\">这个视频</a>，图形化的讲解会清晰很多。</p>\n<p>这里我要提一下这个式子里各部分的专有名称了（“专业高端”词汇警告），你可以不记住，直接看后面。</p>\n<ul>\n<li>\\(P(H|E)\\) 叫做 \\(H\\) 的<strong>后验概率</strong>，反之亦然</li>\n<li>\\(P(H)\\) 叫做 \\(H\\) 的<strong>先验概率</strong>，反之亦然</li>\n<li>特别地，我们把 \\(P(E|H)\\) 称作<strong>“似然值”</strong>，即 likelihood</li>\n</ul>\n<p>那什么是朴素贝叶斯呢？按上面所说的，朴素贝叶斯是一种分类算法。简单来说，朴素贝叶斯将一个对象的各个特征考虑为互相独立，然后根据这些特征的概率的乘积来判断对象所属的分类。基本原理如下：</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)} \\propto P(E|H)P(H) = P(H)\\prod_{i}P(W_i|H)$$</p>\n<p>在这里，\\(W_i\\) 指某一对象的第 \\(i\\) 个特征，对于文本分类来说，这就是一段文本中的某个单词。</p>\n<p>朴素贝叶斯之所以“朴素”，是因为它要求<strong>各个特征间是独立的</strong>，在文本分类中也就是各个单词之间互不干扰。虽然思路简单的代价是适用范围变窄，不过由于这样的简化在很多情况下已经足够了，因此实际上朴素贝叶斯的应用范围非常广。<del>你看朴素贝叶斯 <strong>N</strong>aïve <strong>B</strong>ayes 的缩写都是 NB 了，能不厉害吗（逃</del></p>\n<h1>那么，咋分类啊</h1>\n<p>看来你这下完全听懂了呢（笑），是时候看看如何在 NLP 中应用朴素贝叶斯了。和上面一样，我们用一个具体的例子来说明。我们的目标是让电脑学会分类美国共和党和民主党的演讲稿，由于两个党派的演讲风格不同，所以这样的分类在理论上是可行的。</p>\n<div class=\"wp-block-file\">\n<a href=\"https://acdn.flyhigher.top/nlp/material.zip\" download>material.zip</a><a href=\"https://acdn.flyhigher.top/nlp/material.zip\" class=\"wp-block-file__button\" download>下载</a>\n</div>\n<p>上面我们要用到的数据集，你可以下载下来一起动手玩一玩。先说一下数据集的数据结构吧，压缩包里有两个文件，<code>train.txt</code> 将会被当作训练数据集，而 <code>test.txt</code> 则会作为训练结束后的验证数据集。两个文本文件里数据的结构是类似的，就像这样：</p>\n<pre class=\"EnlighterJSRAW\">BLUE WELL I AM SO HONORED AND PERSONALLY UNKNOWNWORD TO BE HERE...\r\nRED THANK YOU . THIS IS QUITE AN INSTITUTION . IT'S GOOD TO BE...</pre>\n<p>每行都是一篇演讲稿，每行的第一个单词指明了这篇演讲稿所属的党派，<code>RED</code> 指共和党，而 <code>BLUE</code> 指民主党。所有单词和符号都已经被转为大写并由空格分隔方便处理。<code>train.txt</code> 有共和党演讲稿和民主党演讲稿各 23 篇，<code>test.txt</code> 有 6 篇共和党演讲稿，12 篇民主党演讲稿。</p>\n<p>明白了？那我们就开始吧。</p>\n<h2>捋捋思路</h2>\n<p>首先，我们需要考虑如何在文本分类中应用朴素贝叶斯。很简单，按朴素贝叶斯的思路，<strong>计算每个词在某一分类下的出现概率，然后将某篇文章的所有词的概率相乘，再乘以该分类的先验概率，就可以得到某篇文章在某一分类下的概率。</strong></p>\n<p>$$P(Class|Article) = P(Class)\\prod_{i}P(Word_i|Class)$$</p>\n<p>各个分类概率都计算完成后，概率最高的那个分类就是这篇文章可能所属的分类。这个思路的核心就是用词决定了文本风格，文本的不同类别用词会有差异，只要能量化这些差异就可以分类文本。在我们的例子中，我们可以从 <code>train.txt</code> 中统计各个词汇的出现情况，然后用 <code>test.txt</code> 中的数据按上面的算法验证我们算法的准确性。</p>\n<p>这个思路很简单也很清晰，但还有一些问题需要解决。<strong>第一，有的时候，我们的测试数据集中可能会出现一个在训练数据集中没有出现过的词语。这个时候，朴素贝叶斯的计算结果会是 0。</strong>如果我们把 0 乘进式子中，那就别想得到正常的结果了。所以，我们还需要对计算某一单词在某一分类中的式子稍加改进。使用拉普拉斯平滑，就可以避免出现概率为 0 的情况。别被名字吓到，拉普拉斯平滑是一种非常简单的平滑方法：在分子上 +1，在分母上加整个取值范围，这样就可以给整个分式加上非常微小的偏移，避免出现 0。</p>\n<p>$$\\begin{align} P(Word_i|Class) &amp; = \\frac{Word_iCountInClass}{AllWordCountInClass} \\\\ &amp; \\approx \\frac{Word_iCountInClass + 1}{AllWordCountInClass + UniqueWordCount} \\end{align}$$</p>\n<p><strong>第二，对于长文本，大部分词语在某一分类中的出现概率是远小于 1 的，加上长文本词汇量大，往往概率相乘的结果会非常小。</strong>受限于计算机处理浮点数的原理，精确处理这么小的数字是很麻烦的。幸好，运用一些简单的数学知识就可以将其转化为更精确的表达，<strong>那就是取对数。</strong></p>\n<p>首先，将概率计算结果取对数并不影响我们的计算结果。因为取对数是一个单调递增的操作，而我们计算概率只是为了排序选择概率最高的分类，因此取对数是不影响我们排序的。而把多项式取对数，等于把多项式的每一项取对数后相加。所以我们有：</p>\n<p>$$\\lg{\\Big(P(Class)\\prod_{i}P(Word_i|Class)\\Big)} = \\lg{P(Class)} + \\sum_i\\lg{P(Word_i|Class)}$$</p>\n<p>大部分情况下，在每一次取对数的时候，要取对数的数字的大小，即 \\(P(Word_i|Class)\\) 尚还在计算机能处理的范围内，<strong>因此我们可以放心地使用取对数的方法</strong>，避免计算机精度不够影响结果。</p>\n<p><strong>第三就是在某些情况下，可能会有部分词语干扰计算结果</strong>，如 and, is 这类的被大量使用的中性词。如果希望得到更好的结果，我们可以维护一个停用词表，在计算时排除停用词即可。或者，我们可以在计算完每个单词的出现数量后，排除数量最多的前 \\(N\\) 个单词，避免这些单词过多地影响计算。</p>\n<h2>写点代码</h2>\n<p>现在我们终于可以开始实战，写点代码了。我会用简单的 Python 来表达思路。好了，理一理思绪，第一步我们要做的，是统计训练数据集中的用词情况。具体来说，根据上面的思考，我们需要统计的有：</p>\n<ul>\n<li>每个单词在各分类中出现的数量</li>\n<li>各分类中的不重复词数量</li>\n</ul>\n<p>用 Python 简单表示如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\"># 读入数据过程略...\r\ndata_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ndata_blue = []\r\ndata_red = []\r\nword_count_blue = {}\r\nword_count_red = {}\r\n\r\nfor line_data in data_raw:\r\n    word_list = line_data.split(\" \") # 分隔单词\r\n    if word_list[0] == \"BLUE\":\r\n        for i in range(1,len(word_list)):\r\n            if not is_excluded(word_list[i]): # 判断是否为停用词\r\n                data_blue.append(word_list[i])\r\n                # 统计单词出现次数\r\n                word_count_blue.setdefault(word_list[i], 0)\r\n                word_count_blue[word_list[i]] += 1\r\n    elif word_list[0] == \"RED\":\r\n        # Class = red 时同理...\r\n\r\n#统计非重复词\r\nunique_words_blue = list(set(data_blue))\r\nunique_words_red = list(set(data_red))</pre>\n<p>训练过程到这里就结束了，计算机已经知道了各政党演讲的用词习惯。很简单吧？接下来我们就要使用测试数据集来测试准确度了。<strong>这里开始就涉及到朴素贝叶斯的计算了</strong>，可能会稍微复杂一点点。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">import math\r\n#读入测试数据过程略...\r\ntest_data_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ntest_data = []\r\n\r\nfor line_data in test_data_raw:\r\n    if line_data[0] == \"BLUE\":\r\n        content_data = line_data.split(\" \").pop(0)\r\n        test_data.append({\"class\": \"blue\", \"content\": content_data})\r\n    elif line_data[0] == 'RED':\r\n        # ...\r\n\r\nfor line_data in test_data:\r\n    posibility_blue = 0\r\n    for word in line_data[\"content\"]:\r\n        # 计算各单词概率，取对数后相加，使用了拉普拉斯平滑\r\n        if word in word_count_blue:\r\n            posibility_blue += math.log((word_count_blue[word]+1)/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n        else:\r\n            posibility_blue += math.log(1/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n    # 最后加上该分类概率的对数\r\n    posibility_blue += math.log(len(data_blue)/(len(data_blue)+len(data_red)))\r\n\r\n    # 计算 Red 同理...</pre>\n<p>计算完成后，我们就得到每篇演讲稿在各分类下的概率了。之后，简单的比较就能得出推断的分类：如果 \\(P(Red|Article)\\) 大于 \\(P(Blue|Article)\\)，那么这篇演讲稿就更可能是共和党的演讲稿，反之则是民主党的演讲稿。</p>\n<p>很好理解吧？那么这么简单的思路，准确性怎么样呢？对于我们的例子，这是我设置了个别停用词后的结果：</p>\n<pre class=\"EnlighterJSRAW\">+-----+-------+--------------+--------------+-------+-------+\r\n|   ID|  Class|        P(Red)|       P(Blue)|  Guess| Status|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|    1|   Blue|  -23204.68377|  -22998.67066|   Blue|      √|\r\n|    2|   Blue|  -16438.44625|  -16137.48257|   Blue|      √|\r\n|    3|   Blue|  -33468.81214|  -32567.61801|   Blue|      √|\r\n|    4|   Blue|    -8606.2193|   -8601.50426|   Blue|      √|\r\n|    5|   Blue|  -12430.97436|  -11935.70662|   Blue|      √|\r\n|    6|   Blue|  -44033.02883|  -43877.55367|   Blue|      √|\r\n|    7|   Blue|   -16947.2851|  -16758.57542|   Blue|      √|\r\n|    8|   Blue|  -26957.26997|  -26889.62444|   Blue|      √|\r\n|    9|   Blue|  -27503.73985|  -27249.21828|   Blue|      √|\r\n|   10|   Blue|   -20528.4457|   -19991.1248|   Blue|      √|\r\n|   11|   Blue|  -20337.96493|  -19860.12831|   Blue|      √|\r\n|   12|   Blue|  -28409.28489|  -28118.98017|   Blue|      √|\r\n|   13|    Red|  -13756.01015|  -14488.11751|    Red|      √|\r\n|   14|    Red|  -17221.22732|  -17710.15936|    Red|      √|\r\n|   15|    Red|  -17397.45136|  -17899.98659|    Red|      √|\r\n|   16|    Red|  -10724.69095|  -11092.77837|    Red|      √|\r\n|   17|    Red|  -10402.40027|  -10859.48681|    Red|      √|\r\n|   18|    Red|   -9371.53792|    -9669.6769|    Red|      √|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|                                      Total: 18/18, 100.0% |\r\n+-----------------------------------------------------------+</pre>\n<p><strong>100% 的准确率哦！</strong>事实上，对于我们的这个例子，就算不设置停用词，我们仍能达到 100% 的分类准确率。朴素贝叶斯分类的确很 NB 呢。</p>\n<h1>更进一步</h1>\n<p>我们的探索到这里就结束了，但如果你有兴趣，完全可以继续探索下去。我们的例子是一个非常简化的例子，在实际情况中，还有很多问题需要解决。比如，对于中文及类似语言，不存在拉丁语系的天然分词结构，而朴素贝叶斯的文本分类是基于单词的，那么<strong>中文的分词就会是个问题；</strong>再比如，对于朴素贝叶斯分类来说，<strong>词语之间的顺序是不影响分类结果的</strong>，但这就会导致“今天心情很好，但昨天不好”和“昨天心情很好，但今天不好”在朴素贝叶斯看来是一样的，要想获得更好的结果，我们必须<strong>考虑词语的顺序。</strong></p>\n<p>这些问题，今天我们就不再深究了，但你可以自己探索。比如，引入思路同样很简洁的马尔科夫链，我们就可以让计算机学会考虑词语间的顺序，不过那就会是另一个话题了。</p>\n","link":"https://flyhigher.top/develop/1989.html"},{"title":"MDx 中增强页面可访问性的细节","date":"2020-01-25 16:45:04","description":"\n<blockquote><p>这篇文章本来是打算发在 <a href=\"https://mdxblog.flyhigher.top/\">MDx Blog</a> 的，不过写到后来发现这篇文章相对来说还是有价值的，于是就将这篇文章转移到了无垠，MDx Blog 则不再发表这篇文章。</p></blockquote>\n<p>从 MDx 开发之初，增强页面的可访问性就被列为了一个重要目标。从 HTML 语义化，到 ARIA 地标，再到 <code>prefers-reduced-motion</code>，随着浏览器对于增强页面可访问性的支持功能越来越多，MDx 也在不断地更新，让更多的人都能毫无困难地浏览、查看由 MDx 渲染的网页。本文会详细说明一些 MDx 中增强页面可访问性的细节，<strong>如果你希望增强自己开发的网页的可访问性，本文可能会对你有所帮助。</strong></p>\n<h1>基础性增强</h1>\n<p>增强可访问性，最重要也是最基础的一点就是 HTML 语义化。通过使用 HTML 5 语义化标签和 ARIA Role 标签，我们可以很方便地<strong>将整个网页在语义上分为几部分，而这将有效地改善屏幕阅读器对网页的分析质量，使视力障碍用户更好地浏览网页。</strong></p>\n<h2>HTML 语义化</h2>\n<p><strong>HTML 语义化属于增强页面可访问性的基础中的基础。</strong>通过使用语义化的 HTML 标签，我们可以方便地为网页中的各部分标记功能而不影响页面样式。随着符合 HTML 5 的现代化网页成为主流，语义化标签已被很大一部分网站所支持，我也不过多赘述了。就举几个常用的“地标性”标签吧：</p>\n<ul>\n<li>\n<code>header</code> 标签标记页眉，默认样式同 <code>div</code>，不要把它和 <code>head</code> 搞混了</li>\n<li>\n<code>main</code> 标签标记页面的主要内容，默认样式同 <code>div</code>\n</li>\n<li>\n<code>article</code> 标签标记文章（在 HTML 5 中它指任何独立或可复用的文本），默认样式同 <code>div</code>\n</li>\n<li>\n<code>footer</code> 标签标记页脚，默认样式同 <code>div</code>\n</li>\n<li>\n<code>nav</code> 标签标记页面导航栏区域，默认样式同 <code>div</code>\n</li>\n<li>\n<code>aside</code> 标签标记侧栏，默认样式同 <code>div</code>\n</li>\n<li>\n<code>section</code> 标签标记“一组内容”，你可以把它看作是划定网页中一块区域的通用标签，默认样式同 <code>div</code>\n</li>\n</ul>\n<p>只要用这些标签替代 <code>div</code> 而不是无脑使用 <code>div</code> 就能提高页面的可访问性。MDx 使用了这些标签来增强页面的可访问性。</p>\n<h2>下一步，ARIA</h2>\n<p>有的时候，出于一些原因，我们没法使用语义化的 HTML 标签，或者没有合适的语义化标签来标记内容，这时候<strong>我们就需要使用 ARIA (Accessible Rich Internet Applications，可访问的富互联网应用)。</strong>ARIA 的基础用法很简单，只要在相应元素上加上 <code>role</code> 属性指定该元素的功能即可。下面是一个简单的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;div role=\"navigation\"&gt;\r\n  &lt;ul&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page A&lt;/a&gt;&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page B&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page C&lt;/a&gt;&lt;/li&gt;\r\n  &lt;/ul&gt;\r\n&lt;/div&gt;</pre>\n<p>通过 <code>role=\"navigation\"</code>，我们把一个 <code>div</code> 标记为了导航栏区域。实际上，对屏幕阅读器来说，这和 <code>nav</code> 标签在语义上是一致的。上一节中的例子都可以分别用以下 ARIA Role 表示：</p>\n<ul>\n<li><code>role=\"heading\"</code></li>\n<li><code>role=\"main\"</code></li>\n<li><code>role=\"article\"</code></li>\n<li><code>role=\"contentinfo\"</code></li>\n<li><code>role=\"navigation\"</code></li>\n<li><code>role=\"complementary\"</code></li>\n<li><code>role=\"region\"</code></li>\n</ul>\n<p>除此以外，MDx 还使用了 <code>role=\"banner\"</code> 和 <code>role=\"search\"</code> 来分别标记页面中的顶部栏和搜索表单。另外，<strong>有的时候 <code>role</code> 属性还需配合 <code>aria-*</code> 属性一同使用</strong>，具体规则比较复杂，我就不在这里赘述了，具体可参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles\">WAI-ARIA Roles - MDN</a>。</p>\n<h1>媒体查询来帮忙</h1>\n<p>CSS 的媒体查询其实是一个非常强大的特性，<strong>妥善利用其中的一些特性，我们可以在网页外观上大大增强网页的可访问性。</strong>除了已经烂大街的“对浏览器窗口大小”响应的媒体查询，我会介绍 3 个很少有网站充分利用的媒体查询。</p>\n<h2>print</h2>\n<p><code>print</code> 媒体查询其实已经“历史悠久”了，<strong>只要使用 <code>@media print {...}</code> 就可以创建只在打印页面时生效的样式。</strong>通过这种方式，我们可以让页面在打印时应用一套为打印优化的样式，增强页面在物理纸张上的可访问性。</p>\n<blockquote><p>维基百科是对打印样式做了单独适配的著名例子。</p></blockquote>\n<p><strong>由于在打印的情况下，页面已经离开了“可交互”的范围，还有分页这种在屏幕中无需考虑的问题，要让页面在物理纸张上仍能被轻松地阅读，我们需要做一些特殊的适配。</strong>直接来看一个例子吧。以下是 MDx 针对打印情况进行的一些特殊优化，样式的具体理由已经写在了注释中。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media print {\r\n    /*隐藏不必要的元素*/\r\n    header, .mdx-ad-after-article, .mdx-ad-in-article, .mdx-post-money, .page-footer-nav, .mdx-same-posts, .spanout button, .mdui-drawer, .mdui-overlay, .mdui-menu, .mdx-share-img-dialog, .mdx-share-wechat-dialog {\r\n        display: none!important;\r\n    }\r\n\r\n    /*使用下划线标记链接*/\r\n    article a {\r\n        text-decoration: underline!important;\r\n    }\r\n    /*由于纸张不可交互，在链接后显示链接到的 URL*/\r\n    article a::after {\r\n        content: \"(\" attr(href) \")\";\r\n    }\r\n\r\n    /*强制白底黑字*/\r\n    html &gt; body {\r\n        background-color: white!important;\r\n    }\r\n    article p {\r\n        color: rgba(0,0,0,.8)!important;\r\n    }\r\n\r\n    /*对于纸张上的长文章，衬线字体拥有更好的可读性。以下字体列表来自 fonts.css*/\r\n    article {\r\n        font: 13pt Georgia, \"Nimbus Roman No9 L\", \"Songti SC\", \"Noto Serif CJK SC\", \"Source Han Serif SC\", \"Source Han Serif CN\", STSong, \"AR PL New Sung\", \"AR PL SungtiL GB\", NSimSun, SimSun, \"TW\\-Sung\", \"WenQuanYi Bitmap Song\", \"AR PL UMing CN\", \"AR PL UMing HK\", \"AR PL UMing TW\", \"AR PL UMing TW MBE\", PMingLiU, MingLiU, serif!important;\r\n    }\r\n\r\n    /*除部分元素外，禁止在元素内部分页*/\r\n    * {\r\n        page-break-inside: avoid;\r\n    }\r\n    article p, article a, #comments, article {\r\n        page-break-inside: auto;\r\n    }\r\n}</pre>\n<p>MDx 自 1.9.3 版本起已经包含了对文章页的打印样式优化。可以很容易地看出，优化后的样式在物理纸张上将更容易阅读。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\" alt=\"\" width=\"1345\" height=\"1602\" class=\"aligncenter size-full wp-image-1959\"></a>\n<h2>prefers-color-scheme</h2>\n<p><code>prefers-color-scheme</code> 是最近才被浏览器广泛支持的一个媒体查询，但它的功能却很强大：<strong>响应系统级黑暗模式。</strong>这样，我们可以在开启黑暗模式的系统中让网页具有更好的可读性。不过由于这个媒体查询直到最近才被广泛支持，因此大部分网站对此并没有进行适配。</p>\n<blockquote><p>一些适配这一特性的网站：少数派、微信公众平台（文章页）等。</p></blockquote>\n<p>通过像这样的媒体查询，我们可以在系统启用黑暗模式时让页面实时响应：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    body {\r\n        background-color: #212121;\r\n        color: rgba(255, 255, 255, .7);\r\n    }\r\n}</pre>\n<p><code>prefers-color-scheme</code> 一共有 3 个可能值：<code>no-preference</code>, <code>light</code> 和 <code>dark</code>。你也可以不像上面的例子那样默认使用亮色样式并在黑暗模式下启用黑暗样式，而可以反过来将黑暗样式作为默认，用亮色样式覆盖。在不支持的浏览器上将会显示默认样式（即媒体查询不会生效）。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<h2>prefers-reduced-motion</h2>\n<p>看名字就猜得出，<code>prefers-reduced-motion</code> 是和 <code>prefers-color-scheme</code> 师出同门的媒体查询。因此，和 <code>prefers-color-scheme</code> 一样，它也是在最近才获得了浏览器的广泛支持。它的作用也很强大：<strong>响应系统的“减弱动态效果”模式。</strong>这对某些不喜欢甚至无法接受动画的用户可能很有帮助。要知道，对有些用户来说这甚至是医疗上的必要。使用如下的媒体查询，我们可以在系统启用减弱动态效果模式时让页面实时响应，减弱动画：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-reduced-motion: reduce) {\r\n    /*只是一个示例，实际情况中可以保留一些淡入淡出效果*/\r\n    * {\r\n        transition: all 0s!important;\r\n        transform: none!important;\r\n    }\r\n}</pre>\n<p><code>prefers-reduced-motion</code> 只有 2 个可能值：<code>no-preference</code> 和 <code>reduce</code>，在不支持的浏览器上该媒体查询不会生效。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\" alt=\"\" width=\"792\" height=\"515\" class=\"aligncenter size-full wp-image-1962\"></a>\n<h1>黑暗模式适配</h1>\n<p>黑暗模式可不是简单地切换到黑底白字这么简单。<strong>单纯地使用黑底白字会导致页面元素之间对比度过高，文字刺眼，反而降低了页面的可访问性。</strong>我在下面总结了几条应用在了 MDx 中的黑暗模式优化规则和 Google 推荐的优化规则：</p>\n<p><strong>一是避免黑底白字。</strong>黑底白字看起来真的很难受，事实上，深灰和浅灰是黑暗模式最好的配色。比较下方例子里的两段文本，毫无疑问深灰色背景和浅灰色文字搭配的样式的可读性要比黑底白字高很多。（p.s. 有时候这条规则在白底黑字时也适用）</p>\n<p><strong>二是更改部分元素的亮度和对比度以增强可读性。</strong>你可能已经注意到了，下面优化的例子里标题文字的颜色改变了。很明显，未优化的黑暗模式中标题可读性不如优化的版本。在实际中，我们通常可以通过 CSS 滤镜来实现这一更改。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    h1 {\r\n        /*反相颜色后再将色相旋转 180 度，使亮度反相*/\r\n        filter: invert(1) hue-rotate(180deg);\r\n    }\r\n}</pre>\n<p><strong>三是避免让图片过亮。</strong>未经处理的图片通常会导致过高的对比度，降低可读性。在 MDx 中，我选择降低图片的亮度来避免图片刺眼，而 Google 的建议则是使图片灰度，不过这会影响图片的整体观感。无论是哪一种方案，都可以使用 CSS 滤镜来轻松实现。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    img { \r\n        /*MDx 方案*/\r\n        filter: brightness(.8);\r\n        /*Google 方案*/\r\n        filter: grayscale(.5);\r\n    }\r\n}</pre>\n<div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是未优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是经过优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n</div>\n<h1>其他细节</h1>\n<p>还有一些细节，虽然简单，但不可或缺。我把一部分没有在上文提到的 MDx 中的细节列在了这里。</p>\n<p><strong>一是允许页面缩放。</strong>在开发响应式页面时，很多网站会在页面头部添加这样一个 <code>meta</code>：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"&gt;</pre>\n<p>这样的 <code>meta</code> 设定了页面的宽度，却也固定了页面的缩放比例，用户难以手动放大网页。<strong>这样的设置对一部分视力障碍用户非常不友好</strong>，以至于苹果决定在自家的浏览器上忽略禁止缩放的 <code>meta</code>。按照 Google 的推荐，如果你在 MDx 设置中启用了“允许页面缩放”，那么 MDx 会输出这样的 <code>meta</code> 标签，允许页面进行五倍以内的缩放：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=5\"&gt;</pre>\n<p><strong>尽管很多时候放大页面会导致页面结构被破坏，但这大大增强了页面的可访问性，利大于弊。</strong>因此，在 MDx 中，“允许页面缩放”是默认启用的。</p>\n<p><strong>二是在跨设备阅读时同步阅读记录。</strong>这属于 MDx 的“元老级”功能之一。注意到页面右上角的那个“在其他设备上继续阅读”的按钮了吗？如果你滚动页面后重新点击它，你会发现二维码发生变化了。通过在二维码中记录阅读进度，用户在扫描二维码切换设备阅读时，MDx 在新设备上会自动滚动到和原设备上一致的位置——好吧，目前基于百分比的算法在某些情况下可能不太准，但我已经设计了一个更复杂但更精确的阅读进度记录算法，之后就会更新到 MDx 中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\" alt=\"\" width=\"1000\" height=\"574\" class=\"aligncenter size-full wp-image-1976\"></a>\n<p><strong>三是避免 Web 字体阻塞渲染。</strong>如果你在页面中使用了 Web 字体，在字体加载完成之前，浏览器可能不会渲染任何文本，这就导致用户可能需要等待一段时间才能开始浏览网页。Google 推荐使用 <code>font-display: swap;</code> 来向浏览器指定网页的 Web 字体渲染策略。这一规则会提供一个比较短的等待周期，如果在这段时间内 Web 字体没有完成加载，那么浏览器会以 fallback 字体渲染文本。任意时刻一旦 Web 字体完成渲染，浏览器就会使用 Web 字体重新渲染文本。这在大多数情况下都能满足可访问性的需求。</p>\n<p><strong>四是确保 html 元素具有合适的 <code>lang</code> 属性。</strong>这一属性声明了页面的主要语言，浏览器可以据此调整渲染策略，或者触发自动翻译；屏幕阅读器也能更好地阅读网页。</p>\n<p><strong>五是确保页面主要内容在丢失/禁用了 Javascript 甚至 CSS 的情况下仍然可用。</strong>作为一个以内容为主的网站，MDx 在禁用了 Javascript 的情况下页面主要内容仍然可用。这不只是为了 SEO，更是为了保证页面的可访问性。的确，目前的情况下，如果开启了 Lazyload，MDx 在禁用 Javascript 的情况下图片的确无法显示，但我会在后续版本中尽可能的优化这一问题。</p>\n<h1>附录：媒体查询开发技巧</h1>\n<p>有的时候，光有 CSS 响应媒体查询还不够，我们可能需要在 Javascript 中实时响应媒体查询。用如下代码就可以很简单地响应媒体查询：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let mql = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\r\nmql.addListener(handleMediaChange);\r\n\r\n//在添加监听后先调用一次，获得当前查询结果\r\nhandleMediaChange(mql);\r\n\r\nfunction handleMediaChange(mql){\r\n    if(mql.matches){\r\n        //查询匹配\r\n    }else{\r\n        //查询不匹配\r\n    }\r\n}</pre>\n<p>在开发上述媒体查询的过程中，我们需要频繁地切换系统的相应模式或者调出打印窗口。<strong>实际上，Chrome 提供了更简单的调试方法：</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1946\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\" alt=\"\" width=\"723\" height=\"681\"></a>\n<p>只要在这里更改模式，相关媒体查询就能实时生效。这不会影响其他标签页，在关闭开发者工具之后也会自动恢复系统设置。</p>\n","link":"https://flyhigher.top/develop/1912.html"},{"title":"MDx Blog 现已随 MDx 1.9.5 发布","date":"2020-01-22 17:54:11","description":"<p>随着 MDx 发布 1.9.5 更新，<a href=\"https://mdxblog.flyhigher.top/\" rel=\"noopener noreferrer\" target=\"_blank\">MDx Blog</a> 现已建立。我将会在 MDx Blog 中分享一些开发故事并发布 MDx 更新日志。</p>","link":"https://flyhigher.top/diary/1905.html"},{"title":"GitHub 2019 统计无垠版","date":"2020-01-12 13:02:00","description":"\n<h1>缘起</h1>\n<p>2019 年底，我突发奇想想要自己统计一番 GitHub 上存储库的一些信息。尽管 GitHub 有自己的<a href=\"https://octoverse.github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">年度统计</a>，我还是想试着自己爬取一下，说不定能挖出什么有意思的信息，何况这是我第一次有机会处理比较大量的数据，也算是一种学习的过程吧。于是花了一下午写了个简单的爬虫（时间都花在增加 Rate Limit 上了...），然后扔在了两台服务器上开始跑（GitHub  API 真是好文明）。</p>\n<p>从 2019.11.21 3 时到 2020.1.12 24 时的 52 天 21 小时内，我的爬虫一共爬取了<strong>与 2,024,705 个用户有关<sup>*</sup>的 14,651,923 个公共存储库的基础信息</strong>，平均每秒爬取 3.2 个存储库。据 GitHub 的官方数据计算，我爬取了大约 15% 的存储库信息，但由于封禁库和私有库的数量未知，我暂时无法确定我爬取的存储库占公共库的比例。同时由于存储库数量较多，基本可以认为爬取到的样本在时间尺度上已经足够随机，可以通过统计得出一般结论。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\" alt=\"\" width=\"700\" height=\"606\" class=\"aligncenter size-full wp-image-1892\"></a>\n<p>爬到自己了，合影.jpg</p>\n<p>那么下面就来看看统计出来的一些结果吧。爬虫的技术细节和数据集下载放在文末。</p>\n<p>* 指这些用户拥有至少一个库</p>\n<h1>统计信息</h1>\n<p><strong>以下统计结果均基于已放于文末的数据集。</strong>由于爬虫爬取的时间跨度长，加上我并没有完整爬取 GitHub 所有存储库，因此我<strong>不能保证以下统计结果符合真实情况</strong>，各位可以下载数据集或自行爬取进行验证。</p>\n<h2>一些数据</h2>\n<div>\n<div>\n<div>\n<span>3,120,930</span><br>总爬取用户数</div>\n<div>\n<span>44.7%</span><br>的存储库创建<br>自 Fork</div>\n<div>\n<span>6.59%</span><br>的账户被删除或<br>封禁<sup>1</sup>\n</div>\n<div>\n<span>23,913</span><br>单用户拥有最大<br>库数量<sup>2</sup>\n</div>\n</div>\n</div>\n<p><sup>1</sup> 基于用户 ID 规律合理推断<br><sup>2</sup> 统计范围仅限于当前数据集</p>\n<p>比较出乎我意料的是创建自 Fork 的存储库的占比。我预估这样的存储库占比不会太低，但没有想到能接近一半。此外单用户拥有最大库数量也大大超出了我的预期，<a href=\"https://github.com/pombredanne\" rel=\"noopener noreferrer\" target=\"_blank\">pombredanne</a> 这个用户名下拥有将近 24k 的存储库，不过绝大多数都是 Fork 来的，在情理之中。此外<strong>这个数据集中</strong>拥有最多存储库的账户其实是一个组织 <a href=\"https://github.com/gitpan\" rel=\"noopener noreferrer\" target=\"_blank\">gitpan</a>，这个组织拥有 36,377 个存储库。</p>\n<h2>语言</h2>\n<p><canvas></canvas><br>\n首先必须要说明的是，在这个榜单中我<strong>排除了 HTML 和 CSS</strong>，因为在严格意义上它们不属于“编程语言”。如果把它们计算进来的话，分别有 640,368 个和 361,425 个存储库的主要语言分别是 HTML 和 CSS，这样在这份榜单中它们可以排到第 6 和 第 10 名。JavaScript 毫无疑问获得第一，第二名 Python 的热度则和 JavaScript 相差将近一半。<strong>此外还有 2,448,486 个存储库未能识别出语言，占比 16.7%。</strong>在上面的榜单之外，与机器学习和数据科学相关的语言还有 Jupyter Notebook 排名第 13，R 排名 20，Julia 排名 43。</p>\n<p>说实话这份排名和 GitHub 官方的排名<strong>差别很大</strong>，除了前三名，后面的基本都不太一样。我的排名统计结果完全基于 GitHub 对于存储库的主要语言识别，加上我的存储库数据不完整，和官方的数据不同是很正常的，可以做一个参考，但大概率还是官方排名更加准确。</p>\n<h2>许可证</h2>\n<p><canvas></canvas></p>\n<p>自 GitHub 推出许可证功能以来，拥有许可证的存储库比例升升降降，却始终没有超过一半。<strong>选择一个合适的许可证对项目的良好发展真的很有帮助</strong>，要了解如何选择合适的许可证，请参阅<a href=\"https://www.runoob.com/w3cnote/open-source-license.html\" rel=\"noopener noreferrer\" target=\"_blank\">这篇文章</a>。</p>\n<p><canvas></canvas></p>\n<p>对于拥有许可证的存储库，MIT<del> 麻省理工许可证 </del>总是占比最大的；第二则是 Apache-2.0 许可证。此外，WTFPL 许可证也挤入了前 15 名。</p>\n<h2>星标</h2>\n<p><canvas></canvas><br>\nStar 数量毫无疑问是一个存储库受欢迎程度的体现，而 Star 数高的项目基本上大家都了解过。<strong>截至爬取结束时间</strong>，GitHub 中 Star 数最多的库是 <a href=\"https://github.com/freeCodeCamp/freeCodeCamp\" rel=\"noopener noreferrer\" target=\"_blank\">freeCodeCamp</a> <del>非常完美的驼峰命名法</del>，其次则是著名项目 <a href=\"https://github.com/996icu/996.ICU\" rel=\"noopener noreferrer\" target=\"_blank\">996.ICU</a>。<a href=\"https://github.com/vuejs/vue\" rel=\"noopener noreferrer\" target=\"_blank\">Vue</a> 现在的 Star 数已经稳压 <a href=\"https://github.com/facebook/react\" rel=\"noopener noreferrer\" target=\"_blank\">React</a> 一头，Vue YES! 此外 <a href=\"https://github.com/sindresorhus/awesome\" rel=\"noopener noreferrer\" target=\"_blank\">awesome</a> 也挤进第七名。<br><canvas></canvas><br>\n由于 Star 需要时间积累，新项目的 Star 数量很可能是比不过老项目的，这就会导致有实力的新项目无法出现在榜单中。因此我还统计了日均 Star 数，试图通过日均 Star 数来反映项目受欢迎的程度。<strong>由于正热门的项目会比老牌热门项目有优势，这一项的统计范围是 2020-01-01 之前的所有存储库。</strong>996.ICU 和 freeCodeCamp 再次出现在前 10 名，而最近的热门项目 <a href=\"https://github.com/wenyan-lang/wenyan\" rel=\"noopener noreferrer\" target=\"_blank\">wenyan</a> 则飙升至第 2 名。此外还有 <a href=\"https://github.com/menzi11/BullshitGenerator\" rel=\"noopener noreferrer\" target=\"_blank\">BullshitGenerator</a>，即最近热门的“狗屁不通文章生成器”和 <a href=\"https://github.com/evil-huawei/evil-huawei\" rel=\"noopener noreferrer\" target=\"_blank\">evil-huawei</a> 分列第 3 和第 5 名。<br><canvas></canvas><br>\n说实话这个曲线<strong>比我预估的陡多了。</strong>你可能已经注意到了，这个图表的横轴不是均匀缩放的，实际上曲线要比看起来陡很多。同时受爬取方式的影响，GitHub 中 Star 数较少的存储库数量远比我爬取到的多。也就是说，<strong>实际情况下曲线远比这个图表上的陡。</strong>拿点 Star 不容易啊。</p>\n<h2>名称</h2>\n<p><canvas></canvas><br>\n终于知道了原来存储库的名称是有长度限制的...尽管最长有 100 位，<strong>大部分人还是喜欢 8 位长的存储库名。</strong>此外 1 位长的名称也比我预估的要多一些。举几个存储库名称长度为 100 的例子吧。</p>\n<ul>\n<li>testing-something-elsetesting-something-elsetesting-something-elsetesting-something-elsetesting-some</li>\n<li>acts_as_validated_config_so_app_will_not_run_in_random_situation_and_qa_gays_will_not_cry_to_you_whe</li>\n<li>............................................________-....................................-.---......</li>\n<li>----------------------------------------------------------------------------------------------------</li>\n<li>nyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyan</li>\n</ul>\n<p>...创造力有够丰富的。</p>\n<p><canvas></canvas></p>\n<p>最近 GitHub 上有一种奇怪的风气，那就是建立 Awesome 合集<del>骗 Star</del>。看起来 Awesome 存储库满地都是，甚至还出现了关于 Awesome 的 Awesome 合集这种迷惑行为。于是我统计了一下，<del>还好，</del>占比<del>才</del> 0.5% 不到<del>，Awesomer 们任重而道远呐</del>。</p>\n<p><canvas></canvas></p>\n<p>尽管要在 github.io 上托管网站，存储库不一定要以 .github.io 结尾，但我还是统计了一下。拥有这类存储库的用户比我预想的要少一些，看来还有很多人没有完全发挥 GitHub 的完整实力啊<del>（比如我 Doge）</del>。同时<strong>这类存储库在所有存储库中占比 1.12%</strong>，看起来不多<del>，不过至少比 Awesome 多</del>。<br><canvas></canvas><br>\n看得出来 GitHub 对于用户名长度的限制是 1-40 位。用户名最短的 27 位占据了 <code>A-Z</code> 外加 <code>-</code> 的所有可能，而用户名最长的则是一个组织 <a href=\"https://github.com/UOIT-RESEARCH-database-information-group\" rel=\"noopener noreferrer\" target=\"_blank\">UOIT-RESEARCH-database-information-group</a>。不知道是巧合还是某种规律，<strong>最受欢迎的用户名长度和存储库名称长度一样，都是 8</strong>，有点意思。</p>\n<h2>创建时间</h2>\n<p><canvas></canvas><br>\n由于我并没有完整爬取所有存储库，我只能以相对值来统计每月新增存储库数量的变化趋势。<strong>在这个图表中，我将 2017-09 的数据设为了 100%。</strong>你一定一眼就能注意到 2017 年 6,7,8 月的“一柱擎天”。<del datetime=\"2020-02-05T09:18:30+00:00\">我第一次看到这个数据的时候的确愣了一下，不过就着这条新闻看就能明白为什么了：<strong>2017 年 6 月微软收购 GitHub。</strong></del></p>\n<blockquote><p>重新确认了一下，微软收购 GitHub 比这个高峰晚了一年，目前我对这个高峰没有什么很好的解释，如果你有什么思路的话欢迎评论。</p></blockquote>\n<p><strong>需要注意的是这张图表中我排除了 Fork 存储库</strong>，因为 Fork 存储库在 API 中的创建时间是原始存储库的时间，会影响整体趋势。此外，GitHub 中还有一个创建于 2007 年 10 月 29 日的存储库，那就是 <code>id: 1</code> 的...</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"mojombo\" data-mdxgithubp=\"grit\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/mojombo/grit\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>而它的创建者正是 GitHub 的创始人之一 Tom Preston-Werner。</p>\n<h1>一些有趣的结果</h1>\n<p>当初打算自己爬的目的之一就是想看看能不能挖出什么有意思的信息，结果真的有一些不挖不知道的信息。</p>\n<h2>奇怪的存储库</h2>\n<p>在爬取到的所有存储库中，<strong>有 3 个存储库是“无主”的</strong>，即它们的 owner 属性为空。这三个存储库的基本信息如下。</p>\n<div class=\"mdui-table-fluid mdui-table-hoverable\"><table class=\"mdui-table\">\n<thead><tr>\n<th>ID</th>\n<th>名称</th>\n<th>Forked</th>\n<th>Star</th>\n<th>语言</th>\n<th>许可证</th>\n<th>创建于</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>72385291</td>\n<td>vscode-redprl</td>\n<td>否</td>\n<td>10</td>\n<td>TypeScript</td>\n<td>apache-2.0</td>\n<td>2016-10-31 08:50:01</td>\n</tr>\n<tr>\n<td>181218346</td>\n<td>electron-sys</td>\n<td>否</td>\n<td>10</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-14 03:20:56</td>\n</tr>\n<tr>\n<td>181391880</td>\n<td>node-sys</td>\n<td>否</td>\n<td>6</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-15 09:33:08</td>\n</tr>\n</tbody>\n</table></div>\n<p><strong>更奇怪的是这三个存储库“无主”的情况还不一样。</strong>第一个存储库可以通过 <code>/repositories</code> 这个 GitHub API 找到， <a href=\"https://api.github.com/repositories?since=72385290\" target=\"_blank\" rel=\"noopener noreferrer\">这个链接</a>中的第一个存储库就是它；而其余两个存储库甚至无法在 <code>/repositories</code> API 中找到。不过就算能在 API 中找到第一个存储库，它的 <code>html_url</code>，即 <code>https://github.com//vscode-redprl</code> 仍然是不可访问的。这可能是 GitHub 早期的一个 Bug 导致的，不过我仍然对爬虫是如何找到这三个存储库的以及这些 Stars 是哪里来的感到好奇。</p>\n<h2>奇怪的用户名</h2>\n<p>在爬虫爬了一段时间以后，API 中突然开始出现大量的以 fdp 开头的 18 位乱码作为用户名的用户。这些用户拥有的存储库和 starred 的存储库都为 0，而他们的 <code>html_url</code> 为 404。以下是几个例子。</p>\n<ul>\n<li>fdpEpolGCEdQX4ZlRJ</li>\n<li>fdp8XaVrdtmDZnO5pR</li>\n<li>fdp8XRAGnwAOkTr2Ya</li>\n</ul>\n<p>由于我的爬虫并没有超过 Rate Limit，所以我排除了这是污染数据的可能。我怀疑这可能是某种 Bot 账户，于是一边更新爬虫过滤掉了这些用户，一边给 GitHub 支持发邮件问了具体情况。过了两天 GitHub 回复我说这些是<strong>被自动判为可疑进而被封禁的用户</strong>（原话是 they have been flagged by our automated measures for detecting suspicious behavior）。<del>想到我正在疯狂爬取 GitHub，突然害怕.webp</del></p>\n<p>行吧。</p>\n<h1>技术细节</h1>\n<p>爬虫使用 Python3 编写，数据库使用 MySQL。爬虫共使用了 4 个 API Token，在两台服务器上分布式爬取。爬取思路为：</p>\n<ol>\n<li>通过 <code>/users</code> API 遍历用户，每个请求最多获取 30 个用户信息</li>\n<li>循环 30 个用户，分别获取 <code>/users/&lt;user_name&gt;/starred</code> 和 <code>/users/&lt;user_name&gt;/repos</code> API 中的存储库信息，每个请求最多获取 100 个存储库信息，超过 100 个的分页获取</li>\n<li>提取存储库信息，插入数据库。对于已存在的存储库，更新数据</li>\n<li>获取下 30 个用户信息</li>\n</ol>\n<p>由于爬取过程中我多次调整了爬虫逻辑，爬虫爬取到的用户 ID 区间并非连续的，具体区间为1-839586, 14800001-14885493 及 28965251-31161101。</p>\n<h1>免责声明</h1>\n<p>本站会尽可能地提供准确信息，但本站不对此文章中信息的准确性和即时性及带来的任何影响负责。</p>\n<p>本站不代表 GitHub 官方，本文仅供学习之用，请不要将本文内容直接用于任何商业项目中。</p>\n<h1>数据集下载</h1>\n<p>导出的 SQL 文件大约为 1.38GB，全部放在了 GitHub 上（在危险的边缘试探.webp</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"github-analysis-2019\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/github-analysis-2019\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>此外我也提供了 MEGA 下载，链接<a href=\"https://mega.nz/#F!juxm3A6T!7Vwpzi82W1OFrqTLu1A1pQ\">在这里</a>。</p>\n","link":"https://flyhigher.top/develop/1564.html"},{"title":"Milkice 跨年红包解谜 Writeup 及无垠跨年红包解谜答案","date":"2020-01-02 04:29:19","description":"\n<blockquote><p><del>又到了水文章的时间呢</del></p></blockquote>\n<p>先说明一下，这篇文章原本不是在计划中的，而原来说好的「在路上的两篇」文章<del>绝对不会咕</del>。我自己的红包答案本来打算直接塞在年度总结里的，结果发现稍微有些长，再加上我还花了一些时间解了<a href=\"https://milkice.me/\">奶冰</a>的红包解谜游戏，就打算把两个解谜过程放在一起单独写一篇文章。<del>真是个水文章的好理由</del>（被打死</p>\n<h1>奶<del> 子 </del>冰的红包</h1>\n<p>奶冰的红包题目比我的难多了，所以让我们先从难的开始吧。首先看一下<a href=\"https://milkice.me/2019/12/31/2019-summary/\">题目</a>：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1524\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\" alt=\"\" width=\"746\" height=\"410\"></a>\n<p>入口是 <code>happy.2020.milkice.me</code>，扔到浏览器里面表示找不到 IP，那么大概率就是 DNS 的 TXT 记录了，查一下得到 <code>nb2hi4dthixs63ljnrvwsy3ffzwwkl3tivrvezluomxxg5dsmvqw2ltqmnqxa3th</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1525\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\" alt=\"\" width=\"896\" height=\"278\"></a>\n<p>第一眼没看出来是什么编码，直觉是 BaseXX 系列的编码，加上提示“不只有 Base64”，可以推断出是 Base32，转大写解码得到 <code>https://milkice.me/sEcRets/stream.pcapng</code>。是个 URL，下载得到一个 Wireshark 文件，打开一看是和某 USB 设备的通讯抓包。<del>不会做，不做了。</del></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1526\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\" alt=\"\" width=\"1500\" height=\"813\"></a>\n<p>奶冰提示我“Google 上搜得到”，结合第二条提示搜索“wacom pcapng”找到了<a href=\"https://blogs.tunelko.com/2017/02/05/bitsctf-tom-and-jerry-50-points/\">这篇文章</a>（<del>这™就是答案啊</del>）。看起来是一样的套路，即通过解析数据得到数位板上画的内容，于是按文章的思路筛选出数位板发给主机的数据，导出，然后再用 tshark 导出文本数据。本来我想直接用文章中的 POC 的，结果折腾半天因为源的蜜汁原因库没装上，于是按文章中给出的数据结构自己写了段代码，分别导出 X、Y 轴数据扔进 Excel 画散点图。（<del>别问我为什么用 Excel，因为我手边没有更好的工具了</del>）</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1528\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\" alt=\"\" width=\"1280\" height=\"530\"></a>\n<p><span>翻车现场之一</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1539\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\" alt=\"\" width=\"1000\" height=\"286\"></a>\n<p><span>懵逼奶冰.webp</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1533\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\" alt=\"\" width=\"1500\" height=\"462\"></a>\n<p>看得出有手写文字，不过是上下颠倒的，翻转图片得 <code>https://milkice.me/2020/uso.zip</code>。是个 zip，下载打开一看，有密码。<del>不会解，不做了。</del> 第一反应是暴力解密码，但是暴力跑了 15 分钟还是没有跑出来。暴力太不优雅了，肯定不是正确思路，但奶冰什么都不肯说了。不过在这时我终于发现第一个红包口令码就藏在压缩包的注释中，Get。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1544\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\" alt=\"\" width=\"806\" height=\"593\"></a>\n<p>然而题还没解完，回去看提示，看到提供了 osu 谱面下载，于是打算不管怎么样先下载来看看。然而 osu 谱面下载要登录，只好又花了几分钟找到第三方站点，成功下载。这时候可以注意到 uso.zip 里有个同名文件（432314 Mike Greene - Bill Nye the Science Guy Theme Song (Chinese Intro).osz），可以联想到是明文攻击。好吧，上 ARCHPR，十秒解出。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1530\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\" alt=\"\" width=\"462\" height=\"643\"></a>\n<p><span>现场还原.jpg</span></p>\n<p>.osz 文件并不是明文，猜测是压缩包（和 .pptx 一个思路嘛），于是改后缀 .zip 顺利打开。然后红包口令码就藏在奶冰的 .osu 文件中了，由提示可知是明文，打开即可得到。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1542\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\" alt=\"\" width=\"457\" height=\"255\"></a>\n<h1>我的红包</h1>\n<p>相比起来<a href=\"https://flyhigher.top/diary/1464.html\">我的题目</a>就简单很多了嘛...三天时间一共发出了 25 个红包，包括一位重复领取的🌚，比前几年还是多了一些的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\" alt=\"\" width=\"500\" height=\"306\" class=\"aligncenter size-full wp-image-1554\"></a>\n<p><span>这位同学以后请不要多次领取🌚</span></p>\n<p>那么来看看答案吧。</p>\n<h2>第一阶段</h2>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>首先观察字符串，可以发现 <code>.</code> <code>/</code> <code>_</code> 等一些 ASCII 字符原样留在了字符串中，而其他字符被由 <code>=</code> 和十六进制构成的某种编码所替代。如果你正好有所了解，你应该能认出这是 Quoted-printable 编码，这是一种常用于邮件中的编码，可以用<a href=\"https://mothereff.in/quoted-printable\">这个页面</a>解码。如果你不了解，你也应该可以发现这种编码和 URL 编码非常相似。如果你把 <code>=</code> 替换为 <code>%</code>，那么你就可以用各种方法顺利地把它按 URL 编码来进行解码，最后可以得到 <code>αхtоn.іm/соdе_оf_2020_⒈mρз</code>。这个字符串里大部分字符都不是 ASCII 字符，只是长得像而已。根据第一个提示“全是 ASCII 字符”，按样子把字符串用 ASCII 字符抄一遍，可以得到最终 URL 为 <code>axton.im/code_of_2020_1.mp3</code>。</p>\n<h2>第二阶段</h2>\n<p>下载音频，可以听出音频是经过某种处理的白噪音。白噪音的特点是各频段的功率都均匀分布，在白噪音上做文章，很容易就可以联想到线索藏在频谱中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1534\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\" alt=\"\" width=\"1200\" height=\"719\"></a>\n<p>频谱被处理成了 24x3 的网格，结合第二条提示“24x3，横向读取”可以推断出是将频谱当作二进制读取，得到 <code>01111001 01110010 01100011 00101110 01101101 01100101 00101111 00110010 00110000</code>，转为 ASCII 字符可得 <code>yrc.me/20</code>。</p>\n<h2>第三阶段</h2>\n<p>打开上一步得到的页面，提示要求输入十位数密码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1536\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\" alt=\"\" width=\"663\" height=\"460\"></a>\n<p>如果你在上一步注意到了这个音频文件奇怪的属性，你可以反应过来这里的密码就是 <code>2000202020</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1537\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\" alt=\"\" width=\"421\" height=\"651\"></a>\n<p>如果你没有注意到，查看页面代码可以看到一条注释 <code>&lt;!-- Tips: the attribute of the audio --&gt;</code> 将你引导向音频文件的属性。输入密码，解锁即可进入下一步。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1535\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\" alt=\"\" width=\"397\" height=\"223\"></a>\n<h2>第四阶段</h2>\n<p>可以看到是一张图片，内容为“<del>.JPG</del>”和“.ZIP”。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter size-large wp-image-1532\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n<p>和去年一样的套路，下载图片，将后缀名改为 .zip 然后打开，可以看到 README.txt。</p>\n<h2>最后一步</h2>\n<p>查看 README.txt 的内容，可以了解到需要去 🤔.axton.cc 获取红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1538\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\" alt=\"\" width=\"1131\" height=\"278\"></a>\n<p>扔到浏览器里会出现奶冰同款找不到 IP，于是可以联想到 TXT 记录。唯一的问题是 🤔 这个 Emoji 需要如何处理。域名使用 Punycode 将 Unicode 字符转换为 ASCII 字符，特点是以 <code>xn--</code> 开头。如果你把上面这个域名扔进浏览器，你会发现它变成了 <code>xn--wp9h.axton.cc</code>。然后查询 TXT 记录，即可得到红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1527\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\" alt=\"\" width=\"804\" height=\"557\"></a>\n","link":"https://flyhigher.top/develop/1519.html"},{"title":"无垠 2019 年度总结","date":"2019-12-29 12:25:52","description":"\n<p>又是时间飞快的一年...写 2018 总结的情景似乎还在眼前，转眼居然已经到 2019 年末了。</p>\n<p>2019 年，发生了太多事情，包括真的转折了人生的高考，这也导致我博客更新的不多（难以置信居然才更了两篇...），不过两篇技术性文章已经在路上了，可以期待一下。</p>\n<p>2019 年我也学了不少东西（单指技术方面），比如终于认真学了 Vue（但是还要练手）。书买了一大堆，看完的倒是没几本orz</p>\n<p>呼，好吧，是时候回顾一下充满坎坷的这一年了。2019 年还剩下最后两天，希望 2020 年，我能做得更好。</p>\n<h1>一些数据</h1>\n<p>照惯例先来看看一些数据吧。今年是统计系统完整统计了的第二年，终于可以和去年的数据比较一下了。以下数据的统计范围是 2019年1月1日0时至 2019年12月29日20时。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 26,901 (<span>+4%</span>)，年 PV 76,583 (<span>+3%</span>)，日均 UV 73.7，平均停留时间 5分13秒 (<span>-13.8%</span>)，平均跳出率 53% (<span>+20.5%</span>)。一年有效文章数 2 (<span>-50%</span>)，新增评论 439 条。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\" alt=\"\" width=\"1000\" height=\"1143\" class=\"aligncenter size-full wp-image-1511\"></a>\n<p>有趣的是今年文章数腰斩，访问数反而小有提升。<del>如果我哪天不更新了，访问数是不是可以无限大呢？</del></p>\n<p>今年博客最大的改动就是把整体风格切换到了 Material Design 2（当然这是 <a href=\"https://flyhigher.top/develop/788.html\">MDx</a> 中的可选功能，给自己打个广告2333），此外还有比较失败的 WebP 改造计划，因为和缓存冲突已经回滚了。<a href=\"https://flyhigher.top/develop/1245.html\">ABS 系统</a>进展不大，主要是真的没有太多时间，还是要再学习一个。</p>\n<h2>个人主页</h2>\n<p>虽然个人主页的 TODO List 列了老长，但今年完全没有更新，也没有推广，从今年 8 月底开始还莫名被某墙认证了，直到 11 月底才恢复，于是今年总访问量比去年少了很多，</p>\n<p>有多少呢？这么少：总 UV 2,141 (<span>-65.9%</span>)，总 PV 2,744 (<span>-66.6%</span>)，日均 UV 6 (<span>-65.9%</span>)，平均停留时间 62秒 (<span>+19.2%</span>)。主要来源是知乎和 V2EX，还有一些甚至是从微信来的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\" alt=\"\" width=\"1000\" height=\"1103\" class=\"aligncenter size-full wp-image-1512\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 8 次，新增 171 commits，2 种语言的翻译，Star 数增加了 175，现有 408。感谢所有人的支持，尤其是 <a href=\"https://github.com/Sn0bzy\" rel=\"noopener noreferrer\" target=\"_blank\">Hasan CAN</a>, <a href=\"https://github.com/yechs\" rel=\"noopener noreferrer\" target=\"_blank\">Ye Shu</a>, <a href=\"https://github.com/StarryLeo\" rel=\"noopener noreferrer\" target=\"_blank\">StarryLeo</a>, <a href=\"https://github.com/DCTewi\" rel=\"noopener noreferrer\" target=\"_blank\">冻葱Tewi</a>, <a href=\"https://github.com/syfxlin\" rel=\"noopener noreferrer\" target=\"_blank\">Otstar Lin</a> 等为 MDx 做出了不小贡献的你们。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：<a href=\"https://flyhigher.top/photograph/1309.html\">上手</a> DJI OSMO Pocket</li>\n<li>四月：最后一次参加浙江省普通高中学业水平考试</li>\n<li>五月：MDx 喜提 300 Stars</li>\n<li>六月：高考 <del>炸了，差亿点点上浙大</del>\n</li>\n<li>六月：入手了 Oneplus 7 Pro</li>\n<li>六月：和同学一起去成都重庆旅行</li>\n<li>六月：第一次近距离感受到地震</li>\n<li>六月：<a href=\"https://flyhigher.top/diary/1411.html\">入手</a>了一台雷蛇灵刃 15，目前是主力机</li>\n<li>七月：参与组织 THE Hack 2019 活动</li>\n<li>七月：面基了 <a href=\"https://itroy.cc/\" rel=\"noopener noreferrer\" target=\"_blank\">Tory</a>, Bie Shi 和 <a href=\"https://oxz.me/\" rel=\"noopener noreferrer\" target=\"_blank\">FHYunCai</a>\n</li>\n<li>八月：一个人去厦门武汉转了一圈，拍了自己的第一个 Vlog</li>\n<li>八月：入手了一个 Kindle Paperwhite 4，没有泡面可以压，于是用来看英文小说了</li>\n<li>八月：加入 TEDxNingbo 志愿者团队</li>\n<li>八月：和 Ralph 面基</li>\n<li>八月：入手了一个 Yubikey</li>\n<li>九月：人生第一次参加雅思考试 <del>7分，蛮开心的</del>\n</li>\n<li>十月：入手了一个 Samsung Galaxy Watch Active 2 <del>觉得不值</del>\n</li>\n<li>十一月：MDx 达到 400 Stars</li>\n<li>十一月：为 TEDxNingbo 设计开发的 H5 上线</li>\n<li>十一月：入手了第一台胶片相机，试图入坑胶片摄影</li>\n<li>十一月：参加 TEDxNingbo 2019 大会</li>\n<li>十二月：<del>我 Cytus II 入门了</del>\n</li>\n</ul>\n<h1>跨年红包</h1>\n<p>这算「传统习俗」了。和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2020年1月2日。</p>\n<p>今年的解谜旅程，从下面这个字符串开始。</p>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>由于今年的题目比以前稍微难了一些，所以今年的红包金额还是比较大的，而且不限量，尽你所能试一试吧。</p>\n<p>一点你可能用得上的提示：URL 里全是 ASCII 字符 / 24x3，横向读取。</p>\n<p><a href=\"https://flyhigher.top/develop/1519.html\">答案</a>已公布。</p>\n<h1>跨年海报</h1>\n<p>这算是另一个「传统习俗」（笑）。因为我有做跨年海报的习惯，所以以下就是今年份的海报啦。</p>\n<p>用了 C4D+PS，还有我的一整个下午。</p>\n<p>提前祝各位新年快乐！</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter wp-image-1467 size-large\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n","link":"https://flyhigher.top/diary/1464.html"}]