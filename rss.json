[{"title":"游戏界有哪些称得上大师的人物？","date":"2022-04-04 11:02:46","description":"\n<p data-pid=\"7NgicEx1\">到底达成什么样的成就才能被称之为游戏行业的大师。是创造一种新玩法？还是建立几家最顶尖的工作室，游戏销量上千万？是开发通用图形引擎？还是主导设计PS4、PS5这样的主机？事实上有一个男人同时达成了以上的所有目标，他就是大名鼎鼎的<b>马克·赛尔尼</b>。如果要写一篇游戏题材的爽文，他就是毫无疑问的男主角！分享一篇最近写的马克·赛尔尼生平介绍吧～</p>\n<p data-pid=\"Zpte0Ug_\">在所有授予游戏开发者个人的奖项中，游戏开发者大会（GDC）颁发的GDC终身成就奖无疑是含金量最高的一个。我们耳熟能详的宫本茂，小岛秀夫，坂口博信，席德·梅尔，约翰·卡马克，都是这一奖项的得主。这些获奖者有的开创了全新的玩法类型，有的在引擎技术上做出了前所未有的突破，还有的总结出不少游戏开发的思路秘诀，被同行奉为圭臬。可以说行业的整体进步，离不开这些天才对于玩法边界和前沿技术的拓展和挖掘。在所有获奖者中，有一位相较其他人而言更为特殊。他不仅比刚才那几位获奖者更早（04年）拿到了GDC终身成就奖，还同时在游戏开发、硬件设计、乃至企业管理等领域都取得了极高的成就。此前讲述滚球类游戏发展史的视频中，我曾提到过他的名字——马克·塞尔尼（Mark Cerny）。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-6dcb669eb380d9b7e25655354852639c_720w.jpg?source=b1748391?rss\" data-caption=\"在马克·塞尔尼前一年获得GDC终身成就奖的是：十字键之父-横井军平\" data-size=\"normal\" data-rawwidth=\"629\" data-rawheight=\"331\" data-watermark=\"watermark\" data-original-src=\"v2-6dcb669eb380d9b7e25655354852639c\" data-watermark-src=\"v2-1b27c8af3c15ebd42f166164a905ecd1\" data-private-watermark-src=\"v2-743f2c3e97e3450650e0645c9486e867\"></p>\n<p data-pid=\"tnFDdTEP\">这位18岁入行的天才少年至今已在电子游戏领域耕耘了40年。从80年代初的雅达利街机到如今的新世代主机PS5，无数大作中都留下了他的名字。他曾是索尼克，古惑狼，和小龙斯派罗等知名IP的制作人，也是杀戮地带，战神，神海、死亡搁浅的技术顾问。当然，现今他最为玩家们所熟悉的头衔或许是索尼近两代主机PS4、PS5的主架构师。纵观整个电子游戏发展史，巅峰期如此之长，成就跨度如此之大的开发者，也只此一位，被誉为“现代达芬奇”。翻看赛尔尼的从业经历，简直如同阅读一本游戏开发题材的爽文，纵使偶有挫折，也终能站上巅峰。唯一遗憾的是，由于他的事迹太多太杂，所以一直没有诸如“马里奥之父”，“程序员之神”这样能精准概括其贡献的头衔，在中文互联网讨论相对较少。所以这篇文章才想介绍一下这位真正的游戏全才——马克·塞尔尼。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4affa03d4d26075c0d0ed75c29d47de3_720w.jpg?source=b1748391?rss\" data-caption=\"岛哥哥拿到GDC终身成就奖都是2009年了\" data-size=\"normal\" data-rawwidth=\"569\" data-rawheight=\"491\" data-watermark=\"watermark\" data-original-src=\"v2-4affa03d4d26075c0d0ed75c29d47de3\" data-watermark-src=\"v2-e892851f9ffd269de06a99e73c8b9045\" data-private-watermark-src=\"v2-fee097dcfb153eb240f04a89ff512b06\"></p>\n<h2>在雅达利初试身手，却遭遇大崩溃危机</h2>\n<p data-pid=\"FogjG_pu\">马克·塞尔尼1964年出生于美国洛杉矶附近的伯班克，由于父母都是加州伯克利大学的教师，所以他很小就搬去了伯克利市生活。这里临近硅谷的摇篮帕洛阿托，无数科技天才将从这里影响世界。电脑、编程、电子游戏等当时还十分稀罕的物事正在这里出现。幼年时的塞尔尼便受此影响，对编程和电子游戏产生了浓厚的兴趣。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-401d8aa80a93fd696697c5f74fc66ed9_720w.jpg?source=b1748391?rss\" data-caption=\"17岁的马克·塞尔尼\" data-size=\"normal\" data-rawwidth=\"617\" data-rawheight=\"548\" data-watermark=\"watermark\" data-original-src=\"v2-401d8aa80a93fd696697c5f74fc66ed9\" data-watermark-src=\"v2-c01648e4979d9c83557bc9f1a73162d5\" data-private-watermark-src=\"v2-d978bbd96ca271d2dd1e61f905307486\"></p>\n<p data-pid=\"qc_LuN_a\">由于成绩优异，13岁的他就开始在父母工作的地方蹭课，并在三年后正式考入加州伯克利。大学期间他主要学习数学和物理，但街机游戏的吸引力远超课本上的知识。他当时特别爱玩两款游戏，一款是操纵飞机打陨石的Asteroids，另一款是操纵防空炮击落来袭导弹的Missile Command。多年后他在采访里怀念道：“那时的游戏只有一个简单的概念，它告诉你有小行星和飞船，然后你就去玩吧。”</p>\n<p><img src=\"https://pic2.zhimg.com/v2-40ca888c193b215cb64680058752acbf_720w.jpg?source=b1748391?rss\" data-caption=\"《Missile Command 导弹指挥官》是雅达利于1980年发行的街机游戏\" data-size=\"normal\" data-rawwidth=\"718\" data-rawheight=\"653\" data-watermark=\"watermark\" data-original-src=\"v2-40ca888c193b215cb64680058752acbf\" data-watermark-src=\"v2-74b4478c309faa8cb31ce3e40274ec3c\" data-private-watermark-src=\"v2-d8783e01448f95a37c8e13593896d605\"></p>\n<p data-pid=\"zss7wCW9\">随着他花在游戏上的时间越来越多，赛尔尼开始思考——既然自己这么喜欢游戏，为什么不将其变成一份正式的工作呢？凭着大学期间学会的编程本领，他被当时北美游戏巨头雅达利看中，获得了进入其街机部门工作的机会。1982年，马克·塞尔尼毅然选择了从大学辍学，但等他真正进入雅达利，才发现行业现状与他的想象差距甚远。当时雅达利CEO雷·卡萨尔极度信任传统行业里那套以秩序、效率优先的流水线式生产管理模式，对游戏创意十分轻视。</p>\n<p data-pid=\"dIYw_QrR\">具体到街机部门，则体现为投币率高于一切的指导思想。一款游戏如果上市前投币率测试不佳，便不会投入量产。无论创意有多么新鲜，都会被直接砍掉。在被砍掉两款游戏后，赛尔尼从mini高尔夫中获得灵感，做出了创意与玩法俱佳的滚球游戏鼻祖——《狂暴弹珠》。对于这款游戏的开发历程，在我的滚球游戏节目中有更详细的描述，感兴趣的话可以找来回顾一下，在此就不多做赘述了。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-32e70635133d2329b034652dce340575_720w.jpg?source=b1748391?rss\" data-caption=\"图片为1984年一篇关于《Marble Madness 狂暴弹珠》的文章\" data-size=\"normal\" data-rawwidth=\"494\" data-rawheight=\"653\" data-watermark=\"watermark\" data-original-src=\"v2-32e70635133d2329b034652dce340575\" data-watermark-src=\"v2-e087928c865aa0e4dbf1ec9e96623331\" data-private-watermark-src=\"v2-13de29add590b24c237eebadf770234d\"></p>\n<p data-pid=\"Lp6x7Q7V\">《狂暴弹珠》虽然成功发售，但却好巧不巧地赶上了整个北美游戏行业的灾难——雅达利大崩溃。雅达利街机业务的销售额下降了百分之90，即便《狂暴弹珠》是当时雅达利表现最好的项目，也拿不出钱来嘉奖开发者。塞尔尼曾说，如果当时他能在《狂暴弹珠》热销时，从每次投币中获得一美分，那估计也得有好几百万。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d4e2cebd38230e1686483f4e62132109_720w.jpg?source=b1748391?rss\" data-caption=\"雅达利大奔溃已经是现代游戏史上极为重要的转折点了\" data-size=\"normal\" data-rawwidth=\"547\" data-rawheight=\"347\" data-watermark=\"watermark\" data-original-src=\"v2-d4e2cebd38230e1686483f4e62132109\" data-watermark-src=\"v2-710468668a5f3a6af426ac4641b8f4f2\" data-private-watermark-src=\"v2-a2f7b450c9f81f3d7caab7ae7ff91906\"></p>\n<p data-pid=\"mfYHvvnZ\">更让他不满的是，雅达利一直不允许开发者在自己开发的游戏上署名。甚至后来EA将《狂暴弹珠》移植到Amiga上时，游戏的包装上也只有负责移植的程序员的名字，而没有马克·塞尔尼，这件事让他倍感失望。可以说塞尔尼刚进入游戏行业时，走得并不算顺利。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-90b76f302c732f9e95d82070cdf79af9_720w.jpg?source=b1748391?rss\" data-caption=\"雅达利时期对开发者不公正对待所导致的彩蛋事件，后来成了某电影的精彩桥段\" data-size=\"normal\" data-rawwidth=\"1049\" data-rawheight=\"632\" data-watermark=\"watermark\" data-original-src=\"v2-90b76f302c732f9e95d82070cdf79af9\" data-watermark-src=\"v2-3112c9705dcc84cf8c429c47ce3d51b3\" data-private-watermark-src=\"v2-5119d4a6acc4ed18db8a3ec55298374a\"></p>\n<p data-pid=\"mO1QptZG\">但另一方面，雅达利当时对开发者严苛的要求和极低的预算，也迫使塞尔尼在开发游戏时不得不同时兼任程序员，美术，策划。这使得他的能力得到了全面、迅速的提升，并获得了脱离雅达利的底气。</p>\n<h2>走出阴霾，SEGA援手成立世嘉技术学院</h2>\n<p data-pid=\"WjJgDuK1\">1985年，塞尔尼决心自己做一款独创项目，他找到了世嘉公司的两位创始人中山隼雄，和大卫·罗森，希望他们能投资。二人对塞尔尼的能力十分欣赏，立刻同意了他的请求。但雅达利大崩溃的影响过于深远，整个北美游戏行业百废待兴，即便拿到了投资，也很难短期内做出一款优秀的街机游戏。在两位CEO的亲自劝说下。塞尔尼放弃了自己的项目，远渡重洋，来到了日本东京的世嘉总部打工。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-146ca0b39ad85d993d318f50acd8b282_720w.jpg?source=b1748391?rss\" data-caption=\"中山隼雄，原世嘉社长，现Amuse Capital CEO\" data-size=\"normal\" data-rawwidth=\"369\" data-rawheight=\"267\" data-watermark=\"watermark\" data-original-src=\"v2-146ca0b39ad85d993d318f50acd8b282\" data-watermark-src=\"v2-22d909bfa195ceb2c5a1975b2227b3ec\" data-private-watermark-src=\"v2-b1f9bb69fe2c851a6eb8c801a794a177\"></p>\n<p data-pid=\"FiVHWG9i\">来到世嘉的塞尔尼再次发挥了自己强大的学习能力，不仅很快练就了一口流利的日语，融入了世嘉的开发团队，还从电影行业的3D视效中获得了灵感，开发了一款适配8位游戏主机的3D眼镜系统——SegaScope 3D。这个1987年上市的外设虽然市场成绩不算太好，但对3D技术的尝试与探索为世嘉之后的3D街机打下了基础。</p>\n<p><img src=\"https://pica.zhimg.com/v2-6da425eb959ce3e12de0931a2de58c08_720w.jpg?source=b1748391?rss\" data-caption=\"《SegaScope 3D》最早于1987年8月在美国发售\" data-size=\"normal\" data-rawwidth=\"962\" data-rawheight=\"659\" data-watermark=\"watermark\" data-original-src=\"v2-6da425eb959ce3e12de0931a2de58c08\" data-watermark-src=\"v2-51492bd1228e6f60d8c88180f9f09e8b\" data-private-watermark-src=\"v2-3c94d5522d5ed04fa64303a43ca0df9f\"></p>\n<p data-pid=\"zt5WW0ke\">八十年代末，塞尔尼遇到了一个难得的机会。当时世嘉主机Sega Mark III虽然在日本成绩不错，但美版机型Master System却被美版FC，也就是任天堂的NES打得一败涂地。情况最严峻时，NES已售出3000万台，而世嘉Master System才卖出两百万。（《游戏结束：任天堂全球征服史》）。无论世嘉投放多少广告，都无法撼动红帽子和绿帽子在北美建起的玛丽亚之墙。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-796138ae3af31d34dc3c7027d22e6647_720w.jpg?source=b1748391?rss\" data-caption=\"Master System是世嘉在8位机时代的产品。北美和日本市场均不行，但在巴西市场大放异彩\" data-size=\"normal\" data-rawwidth=\"1059\" data-rawheight=\"596\" data-watermark=\"watermark\" data-original-src=\"v2-796138ae3af31d34dc3c7027d22e6647\" data-watermark-src=\"v2-cbb3fdf0a105acb0c7cc237df2743392\" data-private-watermark-src=\"v2-4046be4269e39da3fb0ce941e26cb92a\"></p>\n<p data-pid=\"gdp7vOzu\">当时，世嘉重夺北美市场的全部希望，都落在了新研发的16位机世嘉MD上。塞尔尼觉得自己可以趁此机会，返回美国，组建面向新主机的开发团队。中山隼雄得知后，不仅在资源上全力支持，还给予了他极大的开发自主权。时任世嘉美国分部的总裁迈克尔·凯茨（Michael Katz）也同样支持塞尔尼，他认为美国世嘉太依赖日本进口的游戏软件，要想让主机在欧美卖得出去，必须得先做出更符合美国人口味的作品。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-bb99afde2c385bfc618d4baa6b9ee354_720w.jpg?source=b1748391?rss\" data-caption=\"Mega Drive简称MD，在全球共售出3075万台。正是这台主机让世嘉一战成名\" data-size=\"normal\" data-rawwidth=\"1139\" data-rawheight=\"569\" data-watermark=\"watermark\" data-original-src=\"v2-bb99afde2c385bfc618d4baa6b9ee354\" data-watermark-src=\"v2-65470ed027235ab6a9961da6b21d604e\" data-private-watermark-src=\"v2-236410acecb6c55753e9c8a80d89c969\"></p>\n<p data-pid=\"epPxJ-Fz\">在两位总裁的支持和鼓励下，塞尔尼在1991年组建起了一个独立于世嘉美国和世嘉东京的开发部门——世嘉技术学院（Sega Technical Institute）。他希望世嘉学院可以成为美日顶尖游戏开发者互相协作的天堂，因此他从世嘉总部调来了不少老资历开发者，给缺乏经验的美国员工上课。</p>\n<p data-pid=\"dWg-oxOX\">技术学院的员工也拥有极大的自由，每个员工都可以在工作时提出自己的创意和想法，哪怕是刚入职的新人，公司也会鼓励他大胆思考。在塞尔尼的要求下，世嘉管理层至少在游戏开发方面，给予了技术学院百分之百的信任。它们在1991年推出的《迪克·特雷西》，1992年推出的变色龙小子，都是MD早期评价不错的横板动作类游戏。在当时媒体和玩家看来，变色龙小子甚至足以和马里奥，索尼克这样大作相提并论。作为一个刚刚成立两年不到的新公司，能如此迅速在竞争激烈的市场上立足，已经相当了不起了。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-08051783ed42e8f83516c517489951eb_720w.jpg?source=b1748391?rss\" data-caption=\"上图为《Dick Tracy Longplay 迪克·特雷西》的截图。同名动作电影在1990年上映\" data-size=\"normal\" data-rawwidth=\"1267\" data-rawheight=\"713\" data-watermark=\"watermark\" data-original-src=\"v2-08051783ed42e8f83516c517489951eb\" data-watermark-src=\"v2-113dc8fac5785a39f188338199b28d80\" data-private-watermark-src=\"v2-7b8d7dfae96cee57a8a1f03dbdfe80d1\"></p>\n<h2>传说的开始，发售前48小时完成索尼克2代</h2>\n<p data-pid=\"eChRu-8-\">不过真正让世嘉技术学院一跃成名的，还是世嘉最具影响力的系列——《刺猬索尼克》。1991年9月，《索尼克1》在北美大火。但事实上，世嘉美国此前完全不看好这部作品，觉得索尼克的形象设计简直是一场灾难，甚至还当作反面典型，列入了公司内部 “游戏产品应避免的十大注意事项”清单。但塞尔尼却一直坚持与索尼克的创造者中裕司详细讨论索尼克的人物和概念设计。初代索尼克发售并取得成功后，中裕司因为薪资待遇问题决定离开世嘉，但塞尔尼却执意挽留，并邀请中裕司来他的世嘉技术学院工作。同时，靠着强大的人格魅力，他还从世嘉总部挖来了不少Sonic Team的成员，包括设计了1代主要关卡的传奇设计师安原弘和。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-60b6b3f62e22b577ace5eaa09300aefc_720w.jpg?source=b1748391?rss\" data-caption=\"《刺猬索尼克》由Sonic Team制作，世嘉在Mega Drive发行。于1991年6月23日在北美、欧洲和澳洲发行，7月26日在日本发行\" data-size=\"normal\" data-rawwidth=\"902\" data-rawheight=\"676\" data-watermark=\"watermark\" data-original-src=\"v2-60b6b3f62e22b577ace5eaa09300aefc\" data-watermark-src=\"v2-c36dd108bab2c9ae828f45430d97834c\" data-private-watermark-src=\"v2-e58583ca3db47bdca134131010b16a47\"></p>\n<p data-pid=\"8M8vQPUS\">可以说塞尔尼凭一己之力，将世嘉当红的新IP，从东京总部转到了远在美国的世嘉技术学院。在续作《索尼克2》的开发过程中，因为高层的一些错误决策，导致开发工期被迫压缩。为了救场，赛尔尼决定亲自上阵，同时担任关卡设计监督，玩法监督，以及艺术总监。在几十人半年连轴转的高负荷工作下，《索尼克2》终于在游戏预定发售日前48小时制作完成。不过代价则是砍掉了近3分之2的预期内容。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-900c988b68fe25ab92b7c8ae226b814d_720w.jpg?source=b1748391?rss\" data-caption=\"《刺猬索尼克2》包含11个地区的关卡。游戏到2020年还在做版本移植，最新是NS版\" data-size=\"normal\" data-rawwidth=\"899\" data-rawheight=\"667\" data-watermark=\"watermark\" data-original-src=\"v2-900c988b68fe25ab92b7c8ae226b814d\" data-watermark-src=\"v2-55d8b9ab399b8912267400dab2cee6f5\" data-private-watermark-src=\"v2-bf4b91ff732e1791d7ee9221184df5f6\"></p>\n<p data-pid=\"1wuxCqeU\">即便如此，相较于1代，游戏还是发生了全方位的进化。关卡数量接近两倍，场景内容也大量扩充，从阳光明媚的翡翠山峦，到充满污染的化工厂，再到如同拉斯维加斯的夜之赌场。游戏甚至还在某些关卡用纵轴视角模拟出了伪3D效果。索尼克的经典动作，原地旋转蓄力冲刺，也是2代中新增的设计。游戏一经发售，就成为了1992年销售最快，收入最高的主机游戏，在美国上市当天就卖出了100万份，至今仍有不少粉丝认为，《索尼克2》就是整个系列最好的作品。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-a46cf8ef00fd0ad6d1cb11bea4c8301c_720w.jpg?source=b1748391?rss\" data-caption=\"截至2011年3月，所有索尼克的相关游戏系列在全球的累计销量已达8900万份\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"240\" data-watermark=\"watermark\" data-original-src=\"v2-a46cf8ef00fd0ad6d1cb11bea4c8301c\" data-watermark-src=\"v2-6b27efa4d8abf140b0b91b96719e0cb5\" data-private-watermark-src=\"v2-a72b5f241c78482252b7b04287108667\"></p>\n<p data-pid=\"3_QnJGAg\">然而在做出这部名作后，赛尔尼却决定离开一手创办的世嘉技术学院。除了不满世嘉高层的一些独裁管理外，他还在日后的采访中谈到：他觉得当时的世嘉技术学院未能实现成立的初衷——让日本顶尖的游戏开发者来到美国，给美国开发者提供指导。实际情况是，美国开发者们大多不会也不愿意学习日语，美日开发者间的交流不足，双方的工作模式也存在差异。比如在《索尼克2》开发途中，日本团队往往加班到半夜，有时甚至会直接睡在公司的小隔间。但美国开发者却按时按点地上下班。两方在游戏开发上的分歧也时常发生，比如2代的关卡艺术设计师克雷格·斯蒂特就认为，与自己一同工作的日本艺术家山口恭史简直就像“一台机器”，因为他不仅会反复修改自己所做的内容，还会检查，修改其他人的设计，甚至会因为自己不喜欢，就大把砍掉别人的创意，这在重视平等合作的美国开发者们看来过于独断。尽管斯蒂特对此非常不满，但山口恭史确实能力更强，因此满腹牢骚只好咽回肚里。后来技术学院里美日开发者的合作开始减少，续作《索尼克3》和《索尼克纳克路斯》都只有日本开发者参与。而另一些原创IP则基本由美国人负责。这样的结果着实让赛尔尼大感失望。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-a0fd5d0ccbd9c9d592ad25f0f1456a01_720w.jpg?source=b1748391?rss\" data-caption=\"上图为《刺猬索尼克3》截图。很可惜索尼克没能成为红帽子的竞争者，世嘉也退出了主机战争\" data-size=\"normal\" data-rawwidth=\"899\" data-rawheight=\"674\" data-watermark=\"watermark\" data-original-src=\"v2-a0fd5d0ccbd9c9d592ad25f0f1456a01\" data-watermark-src=\"v2-edc0c0398e84be627f07b798f892f00b\" data-private-watermark-src=\"v2-9d6a0d79746aa0f6f8cad4b048b46606\"></p>\n<h2>慧眼识珠，两款神作：古惑狼、瑞奇与叮当</h2>\n<p data-pid=\"yRB5gyc1\">离开世嘉后，赛尔尼去了另一家前世嘉员工创立的新公司——水晶动力。水晶动力当时正和主机行业的新入局者3DO开展合作。此时PS1和世嘉土星均未发售，只有少数街机能够支持3D图形技术。而采用CD作为存储介质的3DO主机，是当时市面上性能最强，唯一可以实现真3D效果的家用机。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-a4970f9e33f53850d0cf99b5cb7abe7e_720w.jpg?source=b1748391?rss\" data-caption=\"3DO游戏机于1993年发行，是世界上第一部真正的32位游戏主机。\" data-size=\"normal\" data-rawwidth=\"1184\" data-rawheight=\"553\" data-watermark=\"watermark\" data-original-src=\"v2-a4970f9e33f53850d0cf99b5cb7abe7e\" data-watermark-src=\"v2-233dee71576367f1b03b3bda986aa71f\" data-private-watermark-src=\"v2-e99c53b8f50772fd7f21d14811759195\"></p>\n<p data-pid=\"yrCwaDTW\">大学时就想要做3D游戏的塞尔尼对此相当感兴趣，于是参与了两款3DO主机游戏的开发——《碰撞与燃烧》和《日全食》。前者是一款带有战斗要素的赛车竞速游戏，后者则是类似《铁甲飞龙》的动作射击游戏。3DO主机的优秀性能，让两款游戏得以呈现当时最顶级的3D画面，无论是赛车的转向，损伤细节，还是战机在峡谷中穿梭的效果。都让只见过2D或伪3D游戏的媒体和玩家们大为惊叹。但遗憾的是，由于3DO主机售价昂贵，且CD技术不成熟，读盘过慢，因此主机整体销量很差，也拖累了这两款游戏的商业成绩。</p>\n<p><img src=\"https://pica.zhimg.com/v2-1f919a39dfbb0c7069f1865e15ae52fd_720w.jpg?source=b1748391?rss\" data-caption=\"《Total Eclipse》的游戏画面\" data-size=\"normal\" data-rawwidth=\"886\" data-rawheight=\"661\" data-watermark=\"watermark\" data-original-src=\"v2-1f919a39dfbb0c7069f1865e15ae52fd\" data-watermark-src=\"v2-38e10053f0619d9972c291f09b2f0001\" data-private-watermark-src=\"v2-13d09a6b55426ebbfbd0edebbe0cf05b\"></p>\n<p data-pid=\"brYTbICw\">不过这次失败的尝试也并非全无收获，水晶动力和3DO的合作让塞尔尼更深入地了解了新一代主机的技术状况。在一次前往东京的访问中，赛尔尼见到了尚未当上索尼总裁，但已是 PlayStation主机项目负责人的吉田修平。此前积累的经验，让塞尔尼敏锐察觉到了PS1主机的巨大潜力。因此他请求吉田修平，允许水晶动力购买PS1的开发套件，这让水晶动力成为了第一家拥有PS1开发套件的第三方开发商，为公司后续的发展铺平了道路。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-df3ec145d1f98032943b302b2faae5c2_720w.jpg?source=b1748391?rss\" data-caption=\"PS1在1995年的E3展上以&amp;amp;amp;amp;quot;299&amp;amp;amp;amp;quot;事件一骑绝尘\" data-size=\"normal\" data-rawwidth=\"872\" data-rawheight=\"661\" data-watermark=\"watermark\" data-original-src=\"v2-df3ec145d1f98032943b302b2faae5c2\" data-watermark-src=\"v2-a5ebf8b1dba742daf6202420ed9ec29c\" data-private-watermark-src=\"v2-1d5e52cad305c0cdd5486df396ff84cd\"></p>\n<p data-pid=\"5lxhq4d5\">在此之后，环球影视的高管邀请他出任环球旗下游戏业务部门——环球互动的副总裁。在多年后的一次采访中赛尔尼表示，之所以愿意跳槽去环球，是因为他发现环球影视的管理层不懂游戏相关业务，因此他可以拿着一大笔钱做自己想做的事而没有人监督。这话也真是真诚中透露着一股天才的狂狷之气。不过赛尔尼也没有乱花环球影视的投资，而是用这笔钱孵化了两家最顶尖的游戏工作室。1994年国际消费电子展（CES）上，一款只有两人开发，名叫《勇士之怒》的格斗游戏DEMO引起了三家发行商的注意。这三家发行商分别是3DO、水晶动力和赛尔尼所在的环球互动。最终，赛尔尼提出的，签约发行但不插手游戏开发的条件说服了两位开发者。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-fac266f1997cf225b10b82a5ead877fa_720w.jpg?source=b1748391?rss\" data-caption=\"《Way of the Warrior 勇士之怒》由环球互动工作室1994年8月在3DO发布\" data-size=\"normal\" data-rawwidth=\"893\" data-rawheight=\"672\" data-watermark=\"watermark\" data-original-src=\"v2-fac266f1997cf225b10b82a5ead877fa\" data-watermark-src=\"v2-d47d6fb1e33d1360ebd43d84d208d40f\" data-private-watermark-src=\"v2-ba0a19d2572dd657f92bdbd477f2d604\" data-tags=\"porn\"></p>\n<p data-pid=\"XnMbUaZt\">赛尔尼还提出，希望能和他们额外签订两款后续作品的发行合同，并且撮合了他们与索尼相识，将那两款游戏作为PS主机独占作发布。这两款后续作品，便是PS1上获得赞誉无数的两部《古惑狼》。说到这里，不少老玩家或许猜到了，这个由两人起家的小开发组，便是日后索尼旗下最重要的第一方工作室——顽皮狗。可以说，顽皮狗的诞生正是赛尔尼慧眼识珠的结果。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-9b255a086ad45271747cd6a263e48b4b_720w.jpg?source=b1748391?rss\" data-caption=\"很难把前面那个B级片一样的游戏与赫赫有名的最后生还者联系在一起\" data-size=\"normal\" data-rawwidth=\"861\" data-rawheight=\"586\" data-watermark=\"watermark\" data-original-src=\"v2-9b255a086ad45271747cd6a263e48b4b\" data-watermark-src=\"v2-4f73aabc2d2306c2ac94d4b12b15168e\" data-private-watermark-src=\"v2-babcebd93900c07ec65837d44bb87638\"></p>\n<p data-pid=\"iaCyTQgY\">除了顽皮狗外，赛尔尼还投资了另一家现今同样是索尼第一方工作室的企业——Insomniac Games，他们最近几年的代表作是《瑞奇与叮当：时空跳转》和《漫威蜘蛛侠》，中国玩家一般称之为“失眠组”。失眠组最早也和水晶动力一样，给3DO主机开发游戏，但马克·塞尔尼知道，3DO主机有严重的商业缺陷。因此他劝说失眠组放弃3DO平台，并将他们正在开发的一款名叫《破坏者》的射击游戏转移到PS1上发售。塞尔尼还为此亲自给失眠组提供指导，在设计和移植环节给予了帮助。最终《破坏者》成功登录了PS1，并得到了DOOM初代开发者约翰·罗梅罗的赞赏，失眠组自此在业内打出了名头。</p>\n<p><img src=\"https://pica.zhimg.com/v2-74436e2fde7028755e978b8638fe4602_720w.jpg?source=b1748391?rss\" data-caption=\"《Disruptor 破坏者》由环球互动工作室1996年在PS1发布，评价颇高，但商业成绩一般\" data-size=\"normal\" data-rawwidth=\"998\" data-rawheight=\"536\" data-watermark=\"watermark\" data-original-src=\"v2-74436e2fde7028755e978b8638fe4602\" data-watermark-src=\"v2-ee2b10c17fccc47ae4a8c1bfc58fb2cd\" data-private-watermark-src=\"v2-f056f88f0b44c19f3f0523cc635c020d\"></p>\n<p data-pid=\"sSJS40De\">之后几年，马克·塞尔尼如同一位导师，指引着顽皮狗和失眠组的发展方向。失眠组的创始人特德·普莱斯曾这样回忆道：在开发完《破坏者》后，塞尔尼跟我说，现在的游戏市场存在很大的真空，PlayStation上的任何游戏在受众广度上，都无法和任天堂IP相提并论，我觉得你们应该考虑考虑射击游戏以外的市场，想想你们可以做些什么。“于是，失眠组决定转而开发一些更能吸引儿童和年轻人，趣味性更强的游戏，《小龙斯派罗》系列就此应运而生。而在顽皮狗那边，创始人杰森·罗宾的评价更为直接。“我觉得马克·赛尔尼是一个令人难以置信的天才，我们一直在合作开发游戏。他自己不觉得自己是环球影业的一员，虽然他是环球互动的总裁，但我觉得他更像是在顽皮狗工作。“</p>\n<p><img src=\"https://pic3.zhimg.com/v2-a17beb36f93c45bc431ade43df7a26ef_720w.jpg?source=b1748391?rss\" data-caption=\"《Spyro the Dragon 小龙斯派罗》共出了十部的游戏，系列已在全球销售超过共2000万套\" data-size=\"normal\" data-rawwidth=\"904\" data-rawheight=\"502\" data-watermark=\"watermark\" data-original-src=\"v2-a17beb36f93c45bc431ade43df7a26ef\" data-watermark-src=\"v2-897d1382a467a6b22470a1f458f0e68c\" data-private-watermark-src=\"v2-1ccb1a75d27bfd4bd7d89099e20876c9\"></p>\n<h2>潜心研究底层技术，PS3时代救火功臣</h2>\n<p data-pid=\"LBwmxpE-\">1998年，环球影视陷入了财务危机，冻结了环球互动的各项资金。当时赛尔尼有两个选择，要么继续留在环球，凭借过硬的业绩去母公司当一名高管。要么离职，完全以个人身份继续参与到环球与顽皮狗和失眠组此前签订的开发项目。热爱游戏开发的赛尔尼果断选择了后者，他以自己的名字创办了一家咨询公司，Cerny Games，然后以顾问的身份，投身到了《古惑狼2》和《小龙斯派罗》的开发中。这两款游戏发售后都获得了极高的评价，前者共卖出700万份，是所有PS1游戏中销量第7的产品。后者则卖出近500万，排名第18。在单款游戏开发领域获得如此成绩后，赛尔尼的兴趣居然又转移到了引擎开发上。</p>\n<p><img src=\"https://pica.zhimg.com/v2-3e212fcbac9fedf349cd1c335bdbaf76_720w.jpg?source=b1748391?rss\" data-caption=\"《Crash Bandicoot 2 古惑狼2》1997年发售\" data-size=\"normal\" data-rawwidth=\"894\" data-rawheight=\"671\" data-watermark=\"watermark\" data-original-src=\"v2-3e212fcbac9fedf349cd1c335bdbaf76\" data-watermark-src=\"v2-c05113424887e3b7a0adcb18d5aa94a6\" data-private-watermark-src=\"v2-65a6e4b920af53862dbad87e6c509f41\"></p>\n<p data-pid=\"xSl9v2sx\">1999年，PS2主机的研发接近尾声，虽然PS2拥有了更强的硬件性能，但开发游戏的过程也更加复杂。为了保证新主机能更好地服务于开发者，吉田修平再一次想到了塞尔尼，邀请他为第一方工作室开发图形引擎。赛尔尼欣然接受，成为了唯一一个参与PS2图形引擎开发的美国人。他到达东京后，把自己关在索尼总部一个小房间里，没日没夜地研究PS2的开发工具包。后来他说，因为自己很喜欢底层技术，喜欢任何可以深入研究后带来惊喜感的东西，所以无论做什么，他都一定会认真钻研。他参与开发的引擎让顽皮狗和失眠组顺利开发出了《杰克和达斯特》《瑞奇与叮当》。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-095fc0851964cd695b5d380c6739d910_720w.jpg?source=b1748391?rss\" data-caption=\"《Jak and Daxter 杰克和达斯特》2001年在PS2发售，2017年发售了PS4版本\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"908\" data-watermark=\"watermark\" data-original-src=\"v2-095fc0851964cd695b5d380c6739d910\" data-watermark-src=\"v2-d8a3a4bf00c5428576e5dcae4a3cd28f\" data-private-watermark-src=\"v2-cbd8bc8c80f8526f4e401712e89f9874\"></p>\n<p data-pid=\"0jbgvg1i\">这两款游戏的特点都是画面效果极佳。《瑞奇与叮当》1代就曾获得GameSpot 评选的PlayStation 2 最佳图形奖。而《杰克与达斯特》则在2001年就实现了接近无缝的超大地图。其中每片游戏区域都包含300万到600万个多边形。这种效果哪怕用当时最先进的PC也无法实现。这一切都与赛尔尼的贡献密切相关。此时的马克·赛尔尼为游戏业界做出的贡献已经足以让他在40岁时，便早早拿下GDC终生成就奖，但他却并未就此止步，而是再次攀向下一个职业生涯的高峰。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-ca976943169e5edb0f2a3a86144e72cd_720w.jpg?source=b1748391?rss\" data-caption=\"《Ratchet &amp;amp;amp;amp;amp; Clank 瑞奇与叮当》系列首作于2002年11月4日发售\" data-size=\"normal\" data-rawwidth=\"1267\" data-rawheight=\"713\" data-watermark=\"watermark\" data-original-src=\"v2-ca976943169e5edb0f2a3a86144e72cd\" data-watermark-src=\"v2-6e7cb42d9e98c2bd802178688f537a4d\" data-private-watermark-src=\"v2-d955b4075dab4ed83e5ddcfe2241dcc1\"></p>\n<p data-pid=\"lAshDQre\">2003年，已经晋升为索尼互娱副总裁的吉田修平意识到，如果让每个游戏开发组都自己研究主机性能，开发引擎，游戏的开发成本将大幅提高。所以不如单独组建一个技术小组，给各个开发团队统一提供技术帮助。这项重任再次落到了马克·塞尔尼身上，他组建了一个名为Initiative for a Common Engine的队伍，简称ICE，中文直译为通用引擎提案。团队成员大多来自顽皮狗和失眠组，旨在专门为索尼旗下所有工作室提供引擎技术支持。</p>\n<p data-pid=\"ZO0j6Lnd\">在PS1和PS2时代，索尼的硬件团队独立于软件开发团队运作，很少考虑游戏开发者的意愿。但在ICE成立后，塞尔尼开始主动和开发组建立联系。当年夏天，他又一次来到了东京，同样是在一个小房间里，ICE团队见到了正在秘密研发PS3硬件的团队。</p>\n<p><img src=\"https://pica.zhimg.com/v2-43d33c773f40a4f8a29c10fbbf32cb15_720w.jpg?source=b1748391?rss\" data-caption=\"PlayStation 3于2006年11月11日在日本发售\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"337\" data-watermark=\"watermark\" data-original-src=\"v2-43d33c773f40a4f8a29c10fbbf32cb15\" data-watermark-src=\"v2-a7ca1380b06335ff4517d578a76f0a15\" data-private-watermark-src=\"v2-270989216a1b9173d54950a9a4942ae5\"></p>\n<p data-pid=\"9KQdHzP6\">他们给塞尔尼展示了一款集成了CPU和GPU，名为 CELL的芯片。让他研究如何使用。这款芯片相当复杂，塞尔尼形容，了解它就像在解答一个复杂的谜题。但这也难不倒赛尔尼和他的团队，不到一个月时间，他就摸清了CELL的运行原理，让PS3的硬件开发者都有点惊讶。在后续一年里，塞尔尼带领ICE团队编写出了可以实用于索尼第一方游戏开发的软件工具包和图形引擎。保证了索尼第一方工作室能够顺利上手这台全新架构的主机，顺利开发PS3游戏。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-0b8fbec9cb9a8a0de5ba8d4393d816f5_720w.jpg?source=b1748391?rss\" data-caption=\"CELL微处理器架构，由索尼、索尼电脑娱乐、东芝、国际商业机器（IBM）公司联合开发\" data-size=\"normal\" data-rawwidth=\"909\" data-rawheight=\"511\" data-watermark=\"watermark\" data-original-src=\"v2-0b8fbec9cb9a8a0de5ba8d4393d816f5\" data-watermark-src=\"v2-35d282140319dc01bbb3d86795c8be88\" data-private-watermark-src=\"v2-7fd666b51c6e19390a370ad6a898ceee\"></p>\n<p data-pid=\"pO4qYv7c\">作为比较，那些未能得到赛尔尼支持的第三方开发者，在探索PS3平台时则举步维艰。很多团队都因为PS3的芯片架构过于奇怪而不得不花费大量时间研究，这让PS3初期的商业成绩一度很不理想。赛尔尼不得不再次当上了救火队长，从04年到11年，塞尔尼都在为PS3的各种技术问题奔波。从《抵抗》到《神秘海域》，从《瑞奇与叮当》到《战神3》，再到《杀戮地带3》。塞尔尼几乎参与了每款PS3上3A大作的开发。虽然无法仅靠ICE解决第三方厂商遇到的海量技术难题，但好歹能保证索尼第一方工作室充分发挥出CELL芯片的性能，做出优秀的大作，稳住了用户基本盘，扶大厦于将倾。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-344e6cfc6d1dff91c3134c3956afdb35_720w.jpg?source=b1748391?rss\" data-caption=\"战神系列如今已经家喻户晓，三代之后系列开启北欧篇\" data-size=\"normal\" data-rawwidth=\"294\" data-rawheight=\"337\" data-watermark=\"watermark\" data-original-src=\"v2-344e6cfc6d1dff91c3134c3956afdb35\" data-watermark-src=\"v2-13cbcd8a5a1de2a582fef7edf2203b52\" data-private-watermark-src=\"v2-a2f57e8eb2772fb90f9a9d980df087b0\"></p>\n<h2>领导PS4开发，一扫上世代的阴霾</h2>\n<p data-pid=\"BJw6ju6z\">在一次休假中，塞尔尼复盘了PS3的失利。当时几乎所有的CPU都在用和PS3完全不同的X86架构。他不得不思考，比起 CELL架构，主流的X86是否更适合下一代索尼主机。为此他研究了X86架构从1978年诞生至今30多年的历史，耗费了整个休假时光。终于得出了结论——下一代索尼主机必须改变。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-130ef9f477aed067d5d061d98a9c95c4_720w.jpg?source=b1748391?rss\" data-caption=\"塞尔尼设计了PS4架构\" data-size=\"normal\" data-rawwidth=\"837\" data-rawheight=\"483\" data-watermark=\"watermark\" data-original-src=\"v2-130ef9f477aed067d5d061d98a9c95c4\" data-watermark-src=\"v2-a86d4446b12145dfa3e0a3eee018bba5\" data-private-watermark-src=\"v2-a20a13deef65f1d48530e9b31e44ec3e\"></p>\n<p data-pid=\"KAZ4T0Oo\">其实马克·塞尔尼此前的工作内容并不包含研发硬件，但他觉得内心始终有一股激情在驱使着他：既然自己有经验和知识，也做了充分的研究准备，那就有责任做出更大的贡献。他主动向吉田修平提出，想要成为PS4主机首席架构师的想法。没想到吉田居然立刻同意了。要知道此时的塞尔尼并不是索尼的正式员工，而是一名“咨询顾问”。将索尼主机的未来交给一个不是索尼员工的外国人，这简直是天方夜谭。好在赛尔尼很快便用他的才华回报了这番信任。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-91a72056aa3cc66d0e13adc6318e2e29_720w.jpg?source=b1748391?rss\" data-caption=\"Mark Cerny 2013年在Gamelab的演讲视频\" data-size=\"normal\" data-rawwidth=\"1101\" data-rawheight=\"609\" data-watermark=\"watermark\" data-original-src=\"v2-91a72056aa3cc66d0e13adc6318e2e29\" data-watermark-src=\"v2-71cb9fed7c8c0b70e55021e1e84a840b\" data-private-watermark-src=\"v2-40f982acb630af9ed9825a42ff25185a\"></p>\n<p data-pid=\"U8AUHalS\">2008年开始，塞尔尼逐步走访了全球30多家游戏开发商，了解他们的想法，需求，和对下一代索尼主机的期望。总结后，他决定彻底放弃CELL，转而使用更加普遍的X86架构，并提供了功能可靠，附加内容丰富的指令集。他解释说：曾经著名的街机游戏开发者诺兰·布什内尔遵循的设计哲学是：“易于上手，难于精通”。他觉得硬件设计也应该遵循这种思路。让游戏开发者既能简单上手地开发游戏，也能在后续几年不断探索，在游戏里实现更多新技术。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-27b060f56f0a666fd5387efef64afd61_720w.jpg?source=b1748391?rss\" data-caption=\"现在大部分电脑、游戏机（NS除外）都是基于X86架构（The X86 architecture）\" data-size=\"normal\" data-rawwidth=\"960\" data-rawheight=\"720\" data-watermark=\"watermark\" data-original-src=\"v2-27b060f56f0a666fd5387efef64afd61\" data-watermark-src=\"v2-a047b1382740a5f12763bcc793aabf41\" data-private-watermark-src=\"v2-3ef105697ba2350c5cad44e0bd95aa8b\"></p>\n<p data-pid=\"c2Hsf71d\">在研发PS4的过程中，塞尔尼也在关注不少新技术的发展，比如实时光线追踪，固态硬盘等都在08年就进入了他的视野。只不过碍于成本和技术成熟度的限制，这些新技术直到PS5才最终得以实装。PS4如今销量已破1.2亿，成为有史以来销量第二高的家用主机。在2010年，马克·塞尔尼成功入选互动艺术与科学学院（AIAS）名人堂时，AIAS 总裁乔瑟夫·奥林的一番评价可谓相当精准“马克·塞尔尼如同一个文艺复兴时期的全才，他同时是优秀的设计师、制作人、程序员和科学家。他是对日本游戏产业影响最大的西方专家，也是行业中唯一一个不隶属于任何机构，保持独立身份的顶尖从业者。他就是最接近‘现代达芬奇’概念的人。”</p>\n<p><img src=\"https://pic1.zhimg.com/v2-712653363fa8f7986e8546a4f0db7be5_720w.jpg?source=b1748391?rss\" data-caption=\"马克·塞尔尼在2013年纽约的PS4发布会上展示DUALSHOCK4手柄\" data-size=\"normal\" data-rawwidth=\"1265\" data-rawheight=\"731\" data-watermark=\"watermark\" data-original-src=\"v2-712653363fa8f7986e8546a4f0db7be5\" data-watermark-src=\"v2-79c0040513534745c38c3131efa3e80c\" data-private-watermark-src=\"v2-80e67438725771a60f26159376f31a90\"></p>\n<p data-pid=\"bF87FQxv\">此后，这位现代达芬奇依然没有停下自己的脚步。几乎所有的PS4独占大作，他都有参与。他还陆续主导了PSV和PS5的硬件架构设计。在几年前的一次采访中，他曾说想在自己退休前，主导开发一款大型3A游戏。现如今，年近60的他仍在以技术顾问的身份参与着PS5上不同项目的开发。不知他最终会为玩家们带来一款怎样超乎想象的作品。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1ba4f1f26212e892e467fd6a5d94fa58_720w.jpg?source=b1748391?rss\" data-caption=\"马克·塞尔尼在2020年3月的“The Road to PS5”做技术讲解\" data-size=\"normal\" data-rawwidth=\"1091\" data-rawheight=\"609\" data-watermark=\"watermark\" data-original-src=\"v2-1ba4f1f26212e892e467fd6a5d94fa58\" data-watermark-src=\"v2-9f894da969b8911b1bbc9d8625425118\" data-private-watermark-src=\"v2-0002b88d0287a0e8b7f4b88f91139e80\"></p>\n<p data-pid=\"Hgp-MiYb\">今年1月，马克塞尔尼发了一段推特，感谢雅达利在40年前愿意给他一个机会进入游戏行业。其实在雅达利的时光，是他人生中比较艰难的日子，但他依然在多年后用感恩的心态来面对，这种谦逊的品德让人不由得生出由衷的钦佩。</p>\n<h2>结语：别颓废！加油！你行的！</h2>\n<p data-pid=\"XtcJm-fc\">不知道听到现在的你是什么感受，就我自己来讲，在搜集资料的过程中，我先后感受到了震惊、赞叹、自惭形秽和……一种荣幸。自惭形秽，不仅因为羡慕这颗天才头脑的精致，更是因为随着年纪渐长，如今更能体认，这些看似偶然的人生“金手指”背后需要多么旺盛的精力、乐观强大的心理和数十年如一日的精进。作为“六边形战士”的马克·赛尔尼，在“研究者”的好奇心、领悟力和刻苦钻研之外，还有“协作者”的谦和、一针见血和无私分享；在“企业家”的永远自我驱动、永远未雨绸缪之外，他还有“冒险家”般变动不居的活力和永远看向未来的目光。相形之下，我们的怠惰、短视怎能不让人自惭形秽。但想想游戏行业还有这样一位行动者、创造者，我又感到一种荣幸——天才正以他的荣光实实在在地展示给我们：大可不必被虚无颓丧磨灭了志气，这世界能人辈出，大有可为。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/mang-guo-bing-ol?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">芒果冰OL</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/26057340/answer/2422951691?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">56 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/284086734?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么游戏制作人一定要有很丰富的游戏经历？</a><br><a href=\"http://www.zhihu.com/question/46465078?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">好的游戏制作人需要对人性有哪些理解？</a><br>\n","link":"http://www.zhihu.com/question/26057340/answer/2422951691?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"Matrix Talk丨从一线回到家乡二线城市定居，你后悔了吗？","date":"2022-04-04 07:00:00","description":"关于MatrixTalk在少数派Matrix社区聚集着一批分享者，你可能经常看他们分享数字生活的心得体验，但你大概还不熟悉他们。为了拉近大家的距离，我们策划了MatrixTalk栏目，将不定期邀请Ma ...<a href=\"https://sspai.com/post/72376\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72376"},{"title":"如何评价《原神》2.6版本神里绫人传说任务「神守柏之章」？","date":"2022-04-04 04:46:22","description":"\n<p data-pid=\"ZvFbZgAX\">这次绫人的传说任务质量非常不错，应该说是截至目前游戏中文斗戏刻画最好的一个任务了，主要是围绕一场看似被祝福、实则背后阴霾重重的政治联姻，刻画了稻妻权谋场上一轮不算特别复杂但又不失精彩的夺权交锋。</p>\n<p data-pid=\"052nH-PJ\">剧情可谓全程智商保持在线，没有刻意玩弄反差萌破坏氛围，而是整体保持了比较严肃沉稳的叙事格调。事件最终也在绫人反将一军与借力打力的高明手段下达成了一个比较好的结果，既粉碎了勘定奉行家臣乘虚下克上的篡权阴谋，维系了三奉行间互相制衡的平衡局面，避免了稻妻在内战后政局再现动荡，同时也使社奉行得以维护巩固自身利益，甚至还向各势力方卖出了一个大人情。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-90a5840a865498865e124b3ca9761830_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-90a5840a865498865e124b3ca9761830\" data-watermark-src=\"v2-12a76100a9e97829c7418e9c2ea93cd4\" data-private-watermark-src=\"v2-cd83c34b59b33604efd6d3399eff1a0b\"></p>\n<p data-pid=\"x0MlNVN4\">概括地讲，绫人是在基于自身立场又兼顾他方诉求的情况下，通过巧妙斡旋对事态施加改变，最终促成「共赢」的结果，这充分展现了他对局势的洞察力与高明的政治手腕，加之整个过程中绫人始终保持的得体且滴水不漏、必要时又极为犀利的言谈水准，可以说这一趟传说任务走下来，绫人精明强干、算无遗策的智谋者人设已经很好地被树立起来了。</p>\n<p><img src=\"https://pica.zhimg.com/v2-6ba07261155171b48558f0e8871f9c3a_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-6ba07261155171b48558f0e8871f9c3a\" data-watermark-src=\"v2-843ca16fa93e4174d05b40c1872d09ae\" data-private-watermark-src=\"v2-aeb88e2e9892401ef7f4087daa67f7e7\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-5a73426e96aea9a4926b36edf0f56162_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-5a73426e96aea9a4926b36edf0f56162\" data-watermark-src=\"v2-6c405615f68b3713bceb9483fedfada0\" data-private-watermark-src=\"v2-1be5c44768ce8b93b97a8bb975d48ad3\"></p>\n<p data-pid=\"O2ZEXJgS\">另一方面，故事中绫人对于婚姻观的发言也意味深长。他一方面在稻妻这样仍处在封建价值观下的社会中秉持恋爱自由、婚姻自由的进步思想，一方面用自己的促膝之谈，旁敲侧击地告诫了在爱情带来的兴奋中失去冷静处事能力的九条镰治与柊千里，真正「不含阴霾的幸福婚姻」应当是建立在双方平等、独立自主的前提下，爱一个人不代表应该去依附对方而活，那些不考虑现实因素、一味付出的爱，终归是换不来长久幸福的。</p>\n<p><img src=\"https://pica.zhimg.com/v2-b7ef979bca635ed63a06b5a4db2941be_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-b7ef979bca635ed63a06b5a4db2941be\" data-watermark-src=\"v2-700b2cbd2ac5096d7847f8d995f9000c\" data-private-watermark-src=\"v2-237123370825b50fcfff26278b622a15\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-f6793d6a3870efa8143a6512a330d4ac_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-f6793d6a3870efa8143a6512a330d4ac\" data-watermark-src=\"v2-04b4883eb75f86272bb82ef61bc676ee\" data-private-watermark-src=\"v2-3c1845b57e1271b3803c5a29f42fd61b\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-7cecb2be2165087dab973a50343047de_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"不顾一切嫁入九条家的柊千里只会在失去身份、地位乃至「自我」后，成为笼中无法掌握自身命运的可悲金丝雀。当独立自主、温柔坚强这些让九条镰治为之倾心的美好品质都从这个女人身上离去后，谁又能保证曾经起誓相守一生的美好爱情不会走向变质呢？\" data-watermark=\"original\" data-original-src=\"v2-7cecb2be2165087dab973a50343047de\" data-watermark-src=\"v2-dad3171c3f5f007455ef01ae71ca4634\" data-private-watermark-src=\"v2-63e703afe2b330edc946534fa09bd6a4\"></p>\n<p data-pid=\"ewoXBXGq\">当然，就像角色演示「林隐泓洄」的最后中展现了绫人为了妹妹「一反常态」地支援反抗军的冒险举动，在整体颇为严肃的传说任务的最后，编剧也没有忘记用一抹感性的色彩对绫人的形象进行「软化」。毕竟，如若过度强调角色的老谋深算，使人物的冷静理性达到到近乎冷酷的程度，反倒可能会降低受众对于角色的好感，从而产生反面效果。</p>\n<p data-pid=\"2swmlz0I\">绫人之所以会在这场牵扯天领与勘定两大奉行争斗的联姻中出手，而非纯粹站在实现自身利益最大化的角度采取落井下石的行动，一个重要原因便是眼前局面令他回忆起当初自己曾遭遇过的困厄：</p>\n<p data-pid=\"0sclRi-d\">神里家曾因突如其来的变故陷入没落，父母积劳成疾先后早衰离世，彼时势单力薄的神里兄妹被视为「碍事的累赘」，承受了外界诸多污蔑与盘剥，背负守护年幼妹妹与珍视家族责任的哥哥绫人，是在付出了无数坚持与努力后才得以拨云见日、重振家族。正是过去这份难言的艰辛，才让绫人对柊千里的境遇感同身受，真心希望施予援手。</p>\n<p><img src=\"https://pica.zhimg.com/v2-9ad7cf0542a710f83e287afd51218090_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-9ad7cf0542a710f83e287afd51218090\" data-watermark-src=\"v2-686bdd8f530a8bcf37ac156e4f89babd\" data-private-watermark-src=\"v2-45406ef5078d552f806cd3eb97c5b6ca\"></p>\n<p data-pid=\"HsWJshiV\">绫人最后还向旅行者倾述，与那些痴迷权力、玩弄权术之辈不同，对他而言最重要的就是稻妻的稳定。尽管从功利层面出发，这的确是最符合社奉行核心利益的选择，但正如绫人于其角色 PV「灯火照夜」中表达的「为万民谋福祉，守护千万小家」的家国情怀与高洁理想，在颇具手腕的谋略家的外表下，绫人拥有的是一颗满怀仁义、赤诚无比的士者之心。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-f2ee887956db2f5ec817be2e9bcf7d14_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-f2ee887956db2f5ec817be2e9bcf7d14\" data-watermark-src=\"v2-99d664f558948cdb4592896b8ae4873c\" data-private-watermark-src=\"v2-0c6f1c0392e8c2522a7408af03c3a1ba\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-1692e6355471690ab4e08dbb79c39ab1_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"身修而后家齐，家齐而后国治，国治而后天下平\" data-watermark=\"original\" data-original-src=\"v2-1692e6355471690ab4e08dbb79c39ab1\" data-watermark-src=\"v2-3ddc8c015e500b8a96757e76f3ed1056\" data-private-watermark-src=\"v2-77d48de1582f951a2001a7d1e8e07c81\"></p>\n<p data-pid=\"xXsq0rX3\">一则高品质传说任务，搭配两部角色视频，就为绫人这一半空降角色塑造出了丰满而令人欣赏喜爱的人物形象，编剧组展现出的功力着实叫人佩服。</p>\n<p data-pid=\"sXvrvk4a\">（奥托主教……啊不是，赵路老师精彩的配音演绎在绫人形象的塑造中发挥了非常重要的作用，语气细节拿捏得非常到位。）</p>\n<p data-pid=\"lJJjwbFj\">从最初广受好评的「若你困于无风之地」到后来的「匪石」，再到拥有鲜明传播中国文化与价值观效用的海灯节、逐月节剧情，至最近封神的雷神新传说任务「须臾百梦」以及本次的绫人故事，相信各位不难看到，《原神》已慢慢摆脱因早期剧情被烙上的「低幼」标签，逐渐迈向更加成熟的叙事模式。</p>\n<p data-pid=\"3LpnQx34\">伴随编剧组逐渐放开手脚以及游戏舞台的展开，《原神》的故事正朝着「复杂化」与「内涵化」的方向积极进步，不时在创作中融入丰富的文化背景及带有一定深度的人文思想，也令作品具备的文艺价值获得了拔高。有理由相信，游戏在剧情方面还有臻至更佳水准的余地，希望制作组再接再厉，保持优势、继续进步，在未来为我们带来更大的惊喜。</p>\n<hr>\n<p data-pid=\"eCIdxbjh\"><b>PS1：</b>说起来这次绫人传说任务给人的整体印象的确很不「12+」，特别是新之丞被家臣爪牙关进笼子打算扔进海里灭口的桥段，以及绫人「割掉舌头」的发言……</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1a2a9a2896819d5409d3c5aa2cfd42f9_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1106\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-1a2a9a2896819d5409d3c5aa2cfd42f9\" data-watermark-src=\"v2-aaa7db1fbae57e75d84d99ed04845375\" data-private-watermark-src=\"v2-85dfa9d7f4234e301b795be2cab114f5\"></p>\n<p data-pid=\"bh0Ih4Kr\"><b>PS2：</b>早在初登稻妻列岛那会儿咱们就已经知晓了新之丞对柊大小姐的单相思，到此次绫人任务终于还是给这段打一开始就不会有结果的恋情判了死刑，但这里我却不想嘲笑他为「败犬」。新之丞在得知恋情无果后不仅坦然接受，还真挚地给予了小姐祝福，对于心怀不轨的谋权者他也没有选择沉默，而是不惜以身犯险，忠心可鉴，是位真正的汉子。虽然不知道后续还会不会安排他的剧情，但我希望新之丞能找到命中属于他的另一半吧。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-30a0793d8aa5babf3148fa9b8e74fd41_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-30a0793d8aa5babf3148fa9b8e74fd41\" data-watermark-src=\"v2-efb4d25690951c30b2673bbd29975336\" data-private-watermark-src=\"v2-89b135cf725bce282a03a0203d1a2fa0\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-380e33682539e92c2b98fe99b265d410_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"话虽如此，还是为新之丞感到一丝辛酸啊\" data-watermark=\"original\" data-original-src=\"v2-380e33682539e92c2b98fe99b265d410\" data-watermark-src=\"v2-c77ae9d7bef16da623768d3c5852164e\" data-private-watermark-src=\"v2-239e9721173f494338becab6074bd4fb\"></p>\n<p data-pid=\"QF4OkaVB\"><b>PS3：</b>绫人登场 CG 中他是在背对着棋盘与托马下「盲棋」（即眼睛不看棋盘，用话说出每一步棋的下法），能看到托马在这场将棋对弈中并不占优势。这可能是绫人日常对自己的一种思维训练（不过按绫人在剧情中所言，但凡不是处理要紧的公务，对日理万机的他而言都是一种「放松」），也从侧面反映出绫人的洞察谋划能力之强。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ed9df6cd2fdc42de3efdafe8f75d0b1c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-ed9df6cd2fdc42de3efdafe8f75d0b1c\" data-watermark-src=\"v2-c637d17dd8c214ee36f48e5cd47c65f8\" data-private-watermark-src=\"v2-118fe0402cacbc51a5e6d4eb6aa37290\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-025a2d569a8fbe43a0acab5728124b70_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-025a2d569a8fbe43a0acab5728124b70\" data-watermark-src=\"v2-b1d1e4f6a798a5987893473c752bb6ae\" data-private-watermark-src=\"v2-a648211807b289288efb57b57c465c1d\"></p>\n<p data-pid=\"tVSdeiKD\"><b>PS4：</b>绫人喜欢自己制作以及品尝奇怪料理的兴趣爱好，其实是在反映他思想开明、乐于接受新事物的一面。不过在局势复杂、暗潮涌动的政坛，即便是绫人往往也身不由己，更多时候只能按捺住自己这份天性，采用「妥协的艺术」去处理诸项事务。料理则是为数不多的可以由他自己完全掌控的领域，自然有坚持的理由，这种爱好甚至变成了角色半恶搞性质的特殊天赋「神里流 · 日常茶饭」（当完美烹饪时会随机产生一份「奇怪」也就是做坏掉品质的食物）。</p>\n<p><img src=\"https://pica.zhimg.com/v2-f5ef91b4a69c81c74afb1d83b038ad4e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-f5ef91b4a69c81c74afb1d83b038ad4e\" data-watermark-src=\"v2-4b528d7e58746c88c587538156b8afa6\" data-private-watermark-src=\"v2-a45321caf488e2a183809ff4843e9590\"></p>\n<p data-pid=\"nVea7bks\">另外，虽然我们看到绫人特意吩咐手下要给托马也带一份「混搭牛奶」会为托马捏把汗，觉得有点哭笑不得（我怀疑托马的「火锅游戏」搞不好就是从绫人这儿学的），但某种意义上，这也正表明在神里兄妹的心目中，托马绝不仅仅只是家臣，而是最最重要的朋友、家人一般的存在。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-12b5b12d526f5cb036d115aac92f1b80_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"我选的是堇瓜牛奶，其实应该还行吧2333\" data-watermark=\"original\" data-original-src=\"v2-12b5b12d526f5cb036d115aac92f1b80\" data-watermark-src=\"v2-df9503d733111681e76039605ff3080f\" data-private-watermark-src=\"v2-ea6b3e3395764184afcd48065a516ee1\"></p>\n<p data-pid=\"d4LHQi81\"><b>PS5：</b>引发神里家没落的「重大变故」具体是指过去因愚人众的阴谋算计致使稻妻国宝级刀工失传，五支刀匠流派门户皆数衰败，如今仅留天目流一支存世。</p>\n<p data-pid=\"S68jaBDY\">由于能锻造名刀的刀工在稻妻被视为神事，因此历来归属统筹文化、艺术、祭祀的社奉行一派管辖，事件中神里家不仅折损了诸多臣下，还因未能保护好刀工被将军严肃问责。彼时的家主也就是神里兄妹的父亲甚至因之早衰而死，深受打击的母亲在不久后也随之逝去，家族仅存带着年幼妹妹绫华的少年绫人，神里家在幕府中的地位就此一落千丈。</p>\n<p data-pid=\"mNQNe109\">实际上，散兵也参与了愚人众这次稻妻破坏行动，由于私人恩怨（指踏鞴砂灾变与桂木之死。详情见「华馆梦醒形骸记」系列圣遗物以及锻造武器「桂木斩长正」故事），散兵在行动过程中刻意针对了刀匠，这间接导致了神里家的悲剧。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/ai-luo-38?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">呆罗</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/524619076/answer/2415773160?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">162 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/288116231?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么崩坏三 V2.5 开放世界材料名称变更？</a><br><a href=\"http://www.zhihu.com/question/453454431?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">米哈游是如何培养出来这么多米xz的？</a><br>\n","link":"http://www.zhihu.com/question/524619076/answer/2415773160?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价游戏《原神》2.6版本新地图「层岩巨渊」的设计水平？","date":"2022-04-04 04:46:13","description":"\n<p data-pid=\"0bU2RdcF\">沉迷层岩的壮观景色不可自拔中……虽然提醒自己先专注主线把任务做完再来细细探索，但一逛起来就全忘了，一路都在疯狂拍照，陈老师的音乐还是一如既往的神，特别是马头琴的加入带来了一种苍凉却辽阔的边塞气息，只想说跑图的过程太享受了。</p>\n<p data-pid=\"32u4qq9H\"><b>仅凭目前我对地面矿区有限的体验都能明显看出，这次层岩地图的设计水准又攀升至了新的高度。</b></p>\n<p data-pid=\"QPE1Py21\">巨大的纵向深度加上众多地形元素（千沟万壑的地面与高耸的悬崖岩脊、依岩壁搭建的蜿蜒栈道、纵横交错的矿道等等）构成了非常复杂的变化，地图上的交互元素（如由起重机和喷气岩构成的上下通路）与解密部分（共振岩柱、淡光棱锥）也更加丰富且与环境融入得更加深入，同时为充实开放世界还嵌入了数量多、品质优的支线任务与收集品（千岩六贡物、老石等）。这些赋予了整个区域相较以往地图具深度和立体化的特征以及庞大的探索内容体量。</p>\n<p data-pid=\"Q1TTdnOF\">而恐怖的是，我上面所说的这些还都只是层岩地面矿区的内容，地下部分拥有更加惊人的纵深（真正意义上的踏入「深渊」）、更加庞大的规模（至少为地面部分的两到三倍）与更加错综复杂的地貌（深不见底的峡谷、废弃的采矿设施与钢索、四通八达的洞窟与静静流淌的水泽暗河），同时围绕「流明石」与「黑泥」这两大核心建立起一套全新的探索交互机制。随着不断深入渊底，整个地区的生态环境也在逐渐发生变化，地底的奇异荧光生物以及远古文明的遗迹都给人一种「行向至深」的隔世之感，这一点到目睹无名遗迹的「倒悬城市」达到顶峰。</p>\n<p data-pid=\"4Kx_KGjm\">说起来，个人还是刚白金完《艾尔登法环》才重新回归原神之旅。宫崎老贼带领的 FS 社有业界公认的尖端地图设计能力，初代黑魂地图称得上是游戏史上难以超越的一代经典，最新的法环则用其庞大无比的开放世界给许多朋友留下了极为深刻的印象，水准之高可谓毋庸置疑。但是，这次回归却并没有让我产生一种「由奢入俭」的落差感，我感到的是什么呢？是<b>「哇，完全不一样的风格欸！」</b>，还有<b>「果然有种在原神里才找得到的特别的舒适感呢」</b>。</p>\n<p data-pid=\"pD1jwwPG\">我想，这种感受虽然肯定有个人对《原神》这部游戏喜爱带来的粉丝滤镜，但不可否认，《原神》从开服至今已经在全球玩家的见证下实现了一次又一次的进步与跨越，在制作团队的持续磨合与不懈努力下，游戏整体设计水平稳步上升，到如今，游戏呈现效果其实已经不输于相当一部分传统单机（如果无需兼顾移动端性能限制的因素，估计表现力还能更上一层楼）。</p>\n<p data-pid=\"foJX9oHu\"><b>更重要的是，《原神》早已由单纯的模仿转向探索自己的创新道路，寻求自身的差异化定位。在二次元标签与优质美术音乐打底的条件下，依托不断丰满内涵的世界观与注重平衡「轻度化」与「硬核化」的游戏性，《原神》逐渐开始形成属于自身的独特风格，而这种风格目前你是很难在其他游戏中找到替代的，这正在成为作品的一种核心竞争力。</b></p>\n<p data-pid=\"jKcDBoIH\">开玩笑地说：现在层岩都已经这样了，以后等七国更新完毕我都不敢想会变成什么样了（笑）。衷心感谢所有制作人员的努力付出，希望《原神》能保持这种平稳精进的势头，在未来给我们带来更多更大的惊喜吧。</p>\n<p><br></p>\n<p data-pid=\"Xuc6Kjh7\"><b>PS1：</b>这次之所以在地表配乐中使用音色极为独特的蒙古族民族乐器马头琴，是因为现实中内蒙古就是我国最重要的矿产地之一，除煤炭外多种矿藏资源储量均居全国首位（已探明的 87 种有开采价值矿藏占全国已查明资源储量的足足 50％）。游戏中层岩作为璃月的边陲之地以及自古以来的主要矿区，选择在某种程度上映射内蒙也就显得非常合理了。</p>\n<p data-pid=\"PmB-Shwd\"><b>PS2：</b>咳咳，最后还是忍不住想吐槽一下。论坛上已经看到有一大堆原友把层岩里外打穿了（捂脸）……可是、可是，新版本才更新完两天不到呀！还有半天时间就发出来的全收集攻略视频，太卷了，太卷啦。</p>\n<p data-pid=\"W4r2lFNh\">虽然我知道这些大佬大概率是内测玩家，对他们而言相当于打「二周目」，自然会很快。但我看到一种现象真的很不理解，那就是一部分玩家上来就照着攻略闷头去全收集，完全不去享受正常探索的乐趣；更有甚者，碰到比较复杂的解密和难拿的宝箱就直喷地图怎么这么「阴间」。</p>\n<p data-pid=\"16boCXCj\">讲实话，如此去玩我真觉得游戏乐趣会大打折扣，而且一个大版本有足足 42 天，干嘛着急召唤土木大队直接把巨渊填平成「大草原」呢。我理解一些朋友游戏时间有限必需加速，但我想，如果有可能的话，放慢节奏去好好体验新地图是不是会更有沉浸感、更有乐趣？这样应该也是对制作组劳动成果的一种尊重吧。</p>\n<hr>\n<h2>层岩个人摄影精选</h2>\n<p data-pid=\"RmzVsrRo\">从进层岩开始留影机就停不下来，风景实在太好看了。这个部分我会精选自己拍摄的一些不错的截图分享出来，后面随着个人游玩进度推动会不断更新，喜欢的朋友可以点个收藏或追更哈。</p>\n<p data-pid=\"lhzVuaHr\"><b>※ 更新提示：</b>层岩地面部分风景精选已分享完毕，后续将更新地下部分摄影作品。敬请期待！</p>\n<h3>地面矿区</h3>\n<p><img src=\"https://pic1.zhimg.com/v2-848e6d60f0118f066277499459ea6f1f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-848e6d60f0118f066277499459ea6f1f\" data-watermark-src=\"v2-ba63af7888716106c7ae1f06130737b9\" data-private-watermark-src=\"v2-b076de2eb18ac647ed4106be01f06272\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-8f7d0b1ee96611a18e5365ce57eacba1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-8f7d0b1ee96611a18e5365ce57eacba1\" data-watermark-src=\"v2-47d51752d51ed26b9c3502e330ff667f\" data-private-watermark-src=\"v2-b166e6c0bf0240cdbacc03617a35daa5\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-d0230b6f1fa3c6018ce4974e9aff599d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-d0230b6f1fa3c6018ce4974e9aff599d\" data-watermark-src=\"v2-36bfac36ac8f4509f8347249beb29b67\" data-private-watermark-src=\"v2-8ddc0d4cd78dbbbfafe547ac1a965d2d\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-eaf9a8a7f91d8e14c794bdc58900fef4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-eaf9a8a7f91d8e14c794bdc58900fef4\" data-watermark-src=\"v2-cc44d34575fe87e95cc4beb2cf31fe82\" data-private-watermark-src=\"v2-0b629f3b9be680cabf75730ac0d3faa5\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-4d17856f3c66eb4671923a474e8995b3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-4d17856f3c66eb4671923a474e8995b3\" data-watermark-src=\"v2-4c35875427f351dbdd639d5f231bd2b1\" data-private-watermark-src=\"v2-74e19f13a57b0e97662002ee6a0c6302\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-2cef931db32d012ebb9e6ac5a5c29635_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-2cef931db32d012ebb9e6ac5a5c29635\" data-watermark-src=\"v2-a42478c6f4049e8f984c9695cfb9dd2f\" data-private-watermark-src=\"v2-5b344673ce12217b0b58c44827764713\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-9fe77feff6d751ea12a83ec5386e2ce5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-9fe77feff6d751ea12a83ec5386e2ce5\" data-watermark-src=\"v2-0e978c36abcf9b19d121327dceac0fd7\" data-private-watermark-src=\"v2-6b6981b86f0e0c18442ad7e724ca7bfc\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-7054f9e3b1cf1d473707f9d1bd5e6698_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-7054f9e3b1cf1d473707f9d1bd5e6698\" data-watermark-src=\"v2-1d23eeede491f0c5a58b62ecb9ccd4dc\" data-private-watermark-src=\"v2-c73aa8e6114ed10b0f1b5ea2a3f46427\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-4f9f22d4b2b941a878ff9b6954037b5c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-4f9f22d4b2b941a878ff9b6954037b5c\" data-watermark-src=\"v2-6c417d3b78d9d78261da75697a5f3e7b\" data-private-watermark-src=\"v2-af3bb3b212847095dce147bb07220780\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-3dd438a24902461500ebeeb794ac2795_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-3dd438a24902461500ebeeb794ac2795\" data-watermark-src=\"v2-9e4ed9a87675d1b2bc03a56b447b336a\" data-private-watermark-src=\"v2-b65f289c79d9b1d730b7da5a7fda7ff4\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-a8456e21d3e013d2ce6d39b973b6780a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-a8456e21d3e013d2ce6d39b973b6780a\" data-watermark-src=\"v2-090b150644a064c99ff0dfbaaafc8c30\" data-private-watermark-src=\"v2-222c67b3d19129cd36a09962e36122a5\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-22f459aef2a799b2e4cb63a8fc674de4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-22f459aef2a799b2e4cb63a8fc674de4\" data-watermark-src=\"v2-84b713e64cd7b1a6ee73f7043863afad\" data-private-watermark-src=\"v2-2c3d4e5ce9370f737b0739d272b4f9ab\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-fcb986008f1c51362079e74c34343ab2_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-fcb986008f1c51362079e74c34343ab2\" data-watermark-src=\"v2-b92573bf5b388d337a1fb2c66e2e3ed6\" data-private-watermark-src=\"v2-4c729c767a3147d1372b7848a8941aaa\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-45588ef227f919a2a98b8504592c7c57_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-45588ef227f919a2a98b8504592c7c57\" data-watermark-src=\"v2-35c926da327c6468137c2567ab414097\" data-private-watermark-src=\"v2-763bef8dd09d1f074460d4b593f184f6\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-38c1022360e07dc35e03c719befd672c_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-38c1022360e07dc35e03c719befd672c\" data-watermark-src=\"v2-07f838f4c403c5345c30f71ded263658\" data-private-watermark-src=\"v2-a91774df240f96b0f12df45087fa9ff4\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-424799acff7e17d88c4def3b24f488d0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-424799acff7e17d88c4def3b24f488d0\" data-watermark-src=\"v2-fb2c3cc748213f4e58c553ac01b8f04b\" data-private-watermark-src=\"v2-d8d8b89f5ad255740a3a906c10038f36\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-e50a7eaea7fa58390c85f9cb68640ab0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-e50a7eaea7fa58390c85f9cb68640ab0\" data-watermark-src=\"v2-e82db567d621f4bc5d7e54d971114603\" data-private-watermark-src=\"v2-025515f308493a6ec9bbf9cbf98ae9b3\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-eea17f39b6cf47b6645fc20139ef2753_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-eea17f39b6cf47b6645fc20139ef2753\" data-watermark-src=\"v2-451849ad0f25ca643d7bcc49f33bcf60\" data-private-watermark-src=\"v2-7202a4e9551ce8ace17973096edbb8cf\"></p>\n<h3>伏鳌谷</h3>\n<p><img src=\"https://pic1.zhimg.com/v2-0b150636d434559333330187a83d0e3e_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-0b150636d434559333330187a83d0e3e\" data-watermark-src=\"v2-63eb827be5f3ae2aa2b9a65711c599a9\" data-private-watermark-src=\"v2-fe39573cd6275179bae13d5ce0635ae7\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-ac83d72e3e178c685c163d834848f0fa_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-ac83d72e3e178c685c163d834848f0fa\" data-watermark-src=\"v2-cee78d9306e82eae533ec8d669949653\" data-private-watermark-src=\"v2-acff4ecb70dc67f1c5e5b2c7a4602636\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-731b1f71d32b29ea9a7e8faec6eeb235_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-731b1f71d32b29ea9a7e8faec6eeb235\" data-watermark-src=\"v2-8d372b8b58106ea13c79a1ef427c33d2\" data-private-watermark-src=\"v2-f3b4c8658ab9cc51a3886fcb7cacbe92\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-9d5710b7287cb1cbbcce1ff75bd20942_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-9d5710b7287cb1cbbcce1ff75bd20942\" data-watermark-src=\"v2-bbcf23ba6e6563e758df50739fd75522\" data-private-watermark-src=\"v2-4587b67bdeddac48f1d98a326972a17f\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-8b9e62af934e5d6a7cbb33f7a1f1c50d_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-8b9e62af934e5d6a7cbb33f7a1f1c50d\" data-watermark-src=\"v2-9e0f20dd275b2d58b1b6623675b53af4\" data-private-watermark-src=\"v2-3db9af2561ea6169629f6185067ad33d\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-c9339693b8d3bb765d727d7ef59b7f5d_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-c9339693b8d3bb765d727d7ef59b7f5d\" data-watermark-src=\"v2-8bece4aa02c67244f7f61a08d355d044\" data-private-watermark-src=\"v2-8f77e195a9357ca068c0fe58b56ef74f\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-79feb00d7ed2eb43802e4237de7fea64_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-79feb00d7ed2eb43802e4237de7fea64\" data-watermark-src=\"v2-59e5472dc559349e838f5165b8ecdebc\" data-private-watermark-src=\"v2-4f9db1050ae32045d8728cfceb378f39\"></p>\n<h3>天工峡</h3>\n<p><img src=\"https://pic2.zhimg.com/v2-a8fbed603bc699878d9d839a022ebd0f_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-a8fbed603bc699878d9d839a022ebd0f\" data-watermark-src=\"v2-17e5695b51547f26c2a549a0c806462a\" data-private-watermark-src=\"v2-9ef4dba8454eadb4d783aeeb332e0899\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-9958a778193349d56794078364dfec86_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-9958a778193349d56794078364dfec86\" data-watermark-src=\"v2-7450774ae42c604494cf92784a627add\" data-private-watermark-src=\"v2-179f8bb57a8383aafc0d588fa95dd169\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-5d6752113ae981a81efb88c9e36d21de_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-5d6752113ae981a81efb88c9e36d21de\" data-watermark-src=\"v2-cb7ea5b352d0c15a271fee854829e6d1\" data-private-watermark-src=\"v2-8e5cbba23bc9899465c4a21c27c0e92e\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-e11361489028bb1c7a47cf97d1821d5e_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-e11361489028bb1c7a47cf97d1821d5e\" data-watermark-src=\"v2-40f96e352ef703eb9915fcace242ac4b\" data-private-watermark-src=\"v2-b67692027fe3f0cc535735ace8fac041\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-95515ded2e3173d15254bdd5e7595cf6_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-95515ded2e3173d15254bdd5e7595cf6\" data-watermark-src=\"v2-20ee7b24471850a48edd3ac6b836d66f\" data-private-watermark-src=\"v2-1a989812010800c05ef75535e3e4ea86\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-af305f4bb51cdc692e67caf9f6415de7_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-af305f4bb51cdc692e67caf9f6415de7\" data-watermark-src=\"v2-eeb0b70c01714d295fb7ad1b89886dc8\" data-private-watermark-src=\"v2-9ef2e099202eedb04da08a1433dbc431\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-dd526eb4de63649dcdd9edd052f17834_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-dd526eb4de63649dcdd9edd052f17834\" data-watermark-src=\"v2-ac63090368366b633ef6ec820b72b83a\" data-private-watermark-src=\"v2-1d37b2686d4ad6e022718522093c45af\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-a890004d51f1a9688a67198c11a531ce_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-a890004d51f1a9688a67198c11a531ce\" data-watermark-src=\"v2-17ad30a305e39172b80e312f4de8483c\" data-private-watermark-src=\"v2-116363e17ca3bbb36e8f0d2a90d2b81d\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-337a525d729249edf8873b29f1788e66_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-337a525d729249edf8873b29f1788e66\" data-watermark-src=\"v2-4cc84a9a01fb35c76bf78e75ce06dcae\" data-private-watermark-src=\"v2-4a2d45365352787c8cefa7e5de60d98b\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-a1ceb93bfd8eb3e28f49a5af9ae5a564_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-a1ceb93bfd8eb3e28f49a5af9ae5a564\" data-watermark-src=\"v2-8bf5f5d014d8795103d004d48a57a838\" data-private-watermark-src=\"v2-85ea7a7729ce96c0df94392e10570111\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-c5cb26a1b949ab347e6f0a5870a7c589_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-c5cb26a1b949ab347e6f0a5870a7c589\" data-watermark-src=\"v2-d5f23733435697ed857455f0c6eb3da9\" data-private-watermark-src=\"v2-59d2016324025cebce33a5feb6969b0a\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-b2bfa820871bfcf18c579dedee58bdb8_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-b2bfa820871bfcf18c579dedee58bdb8\" data-watermark-src=\"v2-208130c547c38fbda3b0af73bc062bca\" data-private-watermark-src=\"v2-a517beabc95a31a9a9c8b4887b2a7200\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-0234d119f4ffde1b4015c3cd83812342_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-0234d119f4ffde1b4015c3cd83812342\" data-watermark-src=\"v2-025dd1c1ec7539519eded9ca3eecf597\" data-private-watermark-src=\"v2-2b4b8aee16796887387dd3968c8cf8a1\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-4197e8a6b3c7fbeca71d6c6cb7baeae1_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-4197e8a6b3c7fbeca71d6c6cb7baeae1\" data-watermark-src=\"v2-e1e25da8ce32ee1e86bf5b63eaae71ef\" data-private-watermark-src=\"v2-666de33372759f505a0a6980279e560a\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-2e5a6e0accc6d94cec9bda3b0298cfa3_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-2e5a6e0accc6d94cec9bda3b0298cfa3\" data-watermark-src=\"v2-e6b47f24e24cd7da946d2887f5e25fd1\" data-private-watermark-src=\"v2-e80f208bad27eca47cc62f41ab21842d\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-af65b8b4b54cabb1fa7850b4fae4a788_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-af65b8b4b54cabb1fa7850b4fae4a788\" data-watermark-src=\"v2-1b9a7657c5956f3ec15815ff2c510438\" data-private-watermark-src=\"v2-62ddc95f65d813ab7daa0f2848c6a90f\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-0d73ef96a5816478117a6e9a3d10a422_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-0d73ef96a5816478117a6e9a3d10a422\" data-watermark-src=\"v2-36b465cd307dd2aa832f96a06d578691\" data-private-watermark-src=\"v2-0fce0fdee344037d8736b81f55115dfa\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-7d3d1d8af7a6798ad0ec0a8a57590539_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-7d3d1d8af7a6798ad0ec0a8a57590539\" data-watermark-src=\"v2-93b821cba1c702de14546294b5121964\" data-private-watermark-src=\"v2-f00db325e69003f67232ccdc2ecfbfcd\"></p>\n<h3>琉璃峰</h3>\n<p><img src=\"https://pic2.zhimg.com/v2-6789cb7c6c50708f1a0133f625643d85_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-6789cb7c6c50708f1a0133f625643d85\" data-watermark-src=\"v2-ec1da5fd8276b6081e65a59e512c005c\" data-private-watermark-src=\"v2-74ba1eeb11d3a111fe1ff0f5e2e0c935\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-6869d43821cc88850568454c5d15dcef_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-6869d43821cc88850568454c5d15dcef\" data-watermark-src=\"v2-e59d627c97ca2c46176c8cc1f0d0af12\" data-private-watermark-src=\"v2-4d01f7f8aa062ea8551fceb6a84750c0\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-3478f78f5350ee9d0ee68746e38fa510_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-3478f78f5350ee9d0ee68746e38fa510\" data-watermark-src=\"v2-c3f1a56d8fce0465e0f9e3a47bd2f743\" data-private-watermark-src=\"v2-8a50a44e5edce5824e03870e370420ad\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-0a7b4e8ceee25046204728023158cf93_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-0a7b4e8ceee25046204728023158cf93\" data-watermark-src=\"v2-045ac6a75a2c25dc0c315aac9329f5e5\" data-private-watermark-src=\"v2-2d436f0d6ce3fc889dc5355eff672324\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-88174892cb37f8a0af1d3ef93271df6a_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-88174892cb37f8a0af1d3ef93271df6a\" data-watermark-src=\"v2-6b6471274df508ca7ad8626876ce6923\" data-private-watermark-src=\"v2-a7ce57f09c18838ca7155ee638a33f78\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-89a8e109f987c61c3a0585b7d5442647_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-89a8e109f987c61c3a0585b7d5442647\" data-watermark-src=\"v2-ee20081d4520183c8fa11cddb791c42c\" data-private-watermark-src=\"v2-5fdaaec8b444a24f381d85a0fdad5fb9\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-541aa9d16370600479c9d5b275e147a7_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-541aa9d16370600479c9d5b275e147a7\" data-watermark-src=\"v2-82f717f35e3fa1c330ed2077e9a95181\" data-private-watermark-src=\"v2-5f6fc8dfd55c1d607c97b16b8f89bd18\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-9df84d795b0fd7146a7ed0909c7ba458_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-9df84d795b0fd7146a7ed0909c7ba458\" data-watermark-src=\"v2-a3828809f109667fa2a3d20eeabe6bc5\" data-private-watermark-src=\"v2-0f43bc234034047015dab37c11a63207\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-aa41bcaba71af0f5f69dcc747aca2ba8_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-aa41bcaba71af0f5f69dcc747aca2ba8\" data-watermark-src=\"v2-05055395dac802b3df7bb66182286afc\" data-private-watermark-src=\"v2-f9fd6a98a994402c86fddd62ffa33f6a\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-e0bd0f075736eb3eb641f4ab87fe8a92_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-e0bd0f075736eb3eb641f4ab87fe8a92\" data-watermark-src=\"v2-189360097a61ef643086fdddc7c370a7\" data-private-watermark-src=\"v2-a9c1360d65bc393537cebf0abfa7b02c\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-20001f305f2fe5f86e08fcd97a543bda_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-20001f305f2fe5f86e08fcd97a543bda\" data-watermark-src=\"v2-e688d898b6e51e3249b1d97ebfe3926d\" data-private-watermark-src=\"v2-43ffcf79075f45bf7925ee1014e92ab5\"></p>\n<h3><b>丹砂崖观日出</b></h3>\n<p><img src=\"https://pic3.zhimg.com/v2-cfeaac3acd3181dfdcb6f35d828a3db4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-cfeaac3acd3181dfdcb6f35d828a3db4\" data-watermark-src=\"v2-c32be5f2e821783e37c3a8bcac5c3001\" data-private-watermark-src=\"v2-faa94d8d2b2c391e5143ba2a0eed552e\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-cee477be4b9e5b38fbef20cd2ea8bd1c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-cee477be4b9e5b38fbef20cd2ea8bd1c\" data-watermark-src=\"v2-7115397c1f6410bf78a5d87806552c80\" data-private-watermark-src=\"v2-d9afeac2555a5435e0162a1c758d71f4\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-db61cfac5773783355be1943848dc01e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-db61cfac5773783355be1943848dc01e\" data-watermark-src=\"v2-f1a1818a881394789f9961d5c6521979\" data-private-watermark-src=\"v2-e11dcfb8b81d66de9fe6928b86f8b6a8\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-54474c81fe13f7c1454812e17c643827_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-54474c81fe13f7c1454812e17c643827\" data-watermark-src=\"v2-1739bf1b519c1def57f57a38d1aa346a\" data-private-watermark-src=\"v2-f07ebe89b6790af381b21833c2c09d72\"></p>\n<h3>持续更新中……</h3>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/ai-luo-38?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">呆罗</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/524984169/answer/2418785277?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">373 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/23227289?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如果你是 Flappy Bird 的策划，那你会为 v2.0 做哪些功能增/删？</a><br><a href=\"http://www.zhihu.com/question/288116231?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么崩坏三 V2.5 开放世界材料名称变更？</a><br>\n","link":"http://www.zhihu.com/question/524984169/answer/2418785277?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"不会游泳还想玩潜水，这是一个旱鸭子的潜水考证之旅","date":"2022-04-04 04:45:30","description":"Matrix首页推荐Matrix是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选Matrix最优质的文章，展示来自用户的最真实的体验和观点。文章代表作者个人观点 ...<a href=\"https://sspai.com/post/72334\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72334"},{"title":"如何评价 4 月新番动画《影之诗F》第一集？","date":"2022-04-04 02:05:17","description":"\n<p data-pid=\"pK8oaEyp\">正如《影之诗》一期动画的制作是为了ns版《影之诗 巅峰对决》的发售一样，《影之诗F》的制作自然也有推广今年刚开始发售的实体TCG《影之诗EVOLVE》的目的包含在其中。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-968f177c219ccbf29e4adfdd0a0381d8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"576\" data-watermark=\"original\" data-original-src=\"v2-968f177c219ccbf29e4adfdd0a0381d8\" data-watermark-src=\"v2-011bdc799477ad17e011efcec1cf8b66\" data-private-watermark-src=\"v2-18b91b94aaf5e40c8f43c9dfe4a2f568\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-729078ecfcbe8767f001740b26e9dd12_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"576\" data-watermark=\"original\" data-original-src=\"v2-729078ecfcbe8767f001740b26e9dd12\" data-watermark-src=\"v2-194cd501f2718a6168ba6faca22303bd\" data-private-watermark-src=\"v2-4be4a4366fafa72a34acbd1cc7f5966c\"></p>\n<p data-pid=\"rpKgOQRt\">当然对于绝大多数观众，甚至于大多数影之诗玩家来说，这个TCG的存在比较的无关紧要，动画内也依然是用手机打游戏，所以还是回到动画上来说。</p>\n<p data-pid=\"u97WUX9S\">《影之诗F》和《影之诗》的制作组基本没有发生变化，依旧是ZEXCS制作，川口敬一郎监督，原田大基、新田靖成、北川大辅等人为作画头这样的配置。总的来说还是应该感到高兴的，一期动画作为一个不分割的年番，基本上全片都维持了较为稳定的高修正质量，对于现在的日本动画业界来说是如此的难得而又可贵，也足以证明ZEXCS的制作实力。</p>\n<p data-pid=\"X8qlvKDs\">当然我也清楚，dead game《影之诗》的动画能有一定的关注度，是因为一期确实有一些特别离谱的内容，这一点在监督川口敬一郎的<a href=\"http://link.zhihu.com/?target=https%3A//thetv.jp/news/detail/1077751/p11/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">访谈</a>中也有所提及：</p>\n<blockquote data-pid=\"mYb8_m7p\">そして、第一期では展開を急ぎ過ぎた部分もあり、キャラクターの掘り下げが足らない部分もありましたので、そういった反省点は改善され、魅力的な登場キャラクターたちの華やかで面白いストーリーが展開されていきます。<br>然后呢，在一期动画中有过于着急展开的部分，也有角色挖掘不足的部分，这样的反省点得到了改善，魅力十足的登场角色们有趣的故事展开了。</blockquote>\n<p data-pid=\"XodogtfQ\">顺便说个题外话，在我去年花半年时间补完《游戏王 怪兽之决斗》224集之后，对《影之诗》一期动画有了一些全新的理解。</p>\n<p data-pid=\"javImgOx\">首先看过游戏王dm的应该都知道，《影之诗》的故事结构和它不能说完全一样，也可以说是大差不差了，以学校为起点的开篇、进入岛内的比赛、随着故事推进带来的比赛设备的升级、比赛之后更为阴暗的拯救世界桥段.....</p>\n<p data-pid=\"ibpq5NFI\">当然了，两者的素质可以说是天差地别，原因有很多：角色魅力差距大、dm长篇幅的冒险是影之诗不可比拟的、dm虽然前期口嗨但是中期出现了非常多的优秀的决斗构成。这种差异导致一味照抄dm的影之诗显得如此不伦不类，加上一些台词设计上的问题，最终决定了影之诗的失败。</p>\n<p data-pid=\"lhNFJhWR\">在我一个个查游戏王dm的作画监督时，意外地发现彼时的川口敬一郎也参与了游戏王dm的制作（154话、160话作画监督）。仅仅参与两话的川口敬一郎在游戏王爱好者的口中被评为了和井上善胜一个级别的邪神，但是实际上这两话是游戏王dm工期比较紧张的时期制作的，大量工作包给了海外，整体质量不高反倒是正常的。</p>\n<p data-pid=\"S66yLIb5\">然而值得一提的是，154、160是游戏王dm的两个反派（恐龙龙崎、昆虫羽蛾）绘柄最好的之二，川口丝毫不掩饰自己对这两个反派角色的喜爱，修得非常用心。《影之诗》动画是受《游戏王 怪兽之决斗》影响很多的作品，这种影响既体现在上面所说的故事结构上，也体现在对绘柄的执着和特殊集数的特殊绘柄出现上。也不知道川口监督有没有想起十多年前的龙崎呢。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-90a08daa031c7e011deee76894dc59d6_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1265\" data-rawheight=\"712\" data-watermark=\"original\" data-original-src=\"v2-90a08daa031c7e011deee76894dc59d6\" data-watermark-src=\"v2-27697528be14ddb9dc6f164807847009\" data-private-watermark-src=\"v2-67420da2703d61e856e6343d8761009b\"></p>\n<p data-pid=\"-FIEGWay\">回到《影之诗F》上来。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-63dc9171bf3c2a95cc64d77d23079095_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2560\" data-rawheight=\"1440\" data-watermark=\"original\" data-original-src=\"v2-63dc9171bf3c2a95cc64d77d23079095\" data-watermark-src=\"v2-726feebfec1ecbacfcfe7f747ee66d71\" data-private-watermark-src=\"v2-30ee1ce703b226c4562b5bfe2a4ccac1\"></p>\n<p data-pid=\"pdWydeoF\">第一集播完大概有这么几个重点信息：</p>\n<ul>\n<li data-pid=\"UpK-ctKC\">故事发生在前作的三年后，传说中的7张卡牌拯救世界之后安置在影之诗学院内。</li>\n<li data-pid=\"QwVDSGuB\">每个人有一个数码伙伴，初始稀有度为史诗，有可能进化为传说。</li>\n<li data-pid=\"Zw1mQASw\">灾厄之树的问题平息，创世公司开始研究一个叫Arc的东西，一个叫Arc ruler的人抢走了Arc。</li>\n<li data-pid=\"Cr8aFxjJ\">影之诗pro玩家都会加入影之诗社团，学校一共有七个社团（其实就是对应除了鱼丸以外的七个职业），主角加入了即将废部的7th Flame。</li>\n</ul>\n<p data-pid=\"WhiMJ_BY\">主角天龙光的塑造，家庭圆满、性格温柔善良而又坚定，比起无情的影之诗机器人龙崎洋芋显然是正常了很多的。回想起监督在开播之前说的话，我暂且相信川口说的注重角色塑造是认真的。不过隐忧也是有的，比如某个打赢了比赛踩碎对方手机的人，手机这个梗真的过不去了吗？</p>\n<p data-pid=\"naHCPsek\">作为手机游戏，影之诗的动画跟其他卡牌游戏的动画表现出的最大差异就是数字化的东西非常多。这一期不仅有新的数码伙伴，而且上文提到的Arc和Arc ruler也都是虚拟的存在，我其实真心挺想在《影之诗f》里看到关于虚拟赛博空间的想象（类似这一季的《build divide》？），不知道有没有机会。</p>\n<p data-pid=\"hWmQO9-6\">第一集还没有决斗，我觉得影之诗的决斗构成还是有点难做的，准确的说是很难做得比较精彩，上一期也只有妖精爆牌回和皇家斩杀回做得比较出彩，因为一方面影之诗的规则确实比较简单，另一方面又很想突出key卡，导致很多决斗构成缺少博弈的层面。不过像一期那种到点直接拍火神龙确实真的不想看到了。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-8df4e0dfb7b42c76848a2448eb31fc2f_720w.png?source=b1748391?rss\" data-caption=\"所有人都爱影之诗捏\" data-size=\"normal\" data-rawwidth=\"2560\" data-rawheight=\"1440\" data-watermark=\"original\" data-original-src=\"v2-8df4e0dfb7b42c76848a2448eb31fc2f\" data-watermark-src=\"v2-b50bae61c5634e375bcde6c506109bd2\" data-private-watermark-src=\"v2-22c10e69aa7cebda0c2714e19d90397e\"></p>\n<p data-pid=\"KqkKCZx_\">《影之诗》被骂得这么惨，作为一个非常喜欢影之诗的玩家而言还挺难过的，希望大家骂一骂的同时来玩一玩影之诗吧，希望所有人都爱影之诗捏。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wo-bu-shi-wang-wang-wang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Anier</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>延伸阅读：<br><a href=\"http://www.zhihu.com/question/511133390?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价 1 月新番动画《杀爱》第一集？</a><br><a href=\"http://www.zhihu.com/question/495773735?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价 10 月新番动画《无职转生》part.2 的第十六集（本季度第五集）？</a><br>\n","link":"http://www.zhihu.com/question/525212756/answer/2421972032?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"试播集 04 | 少数派作者们最近读完了啥（下）","date":"2022-04-03 04:29:34","description":"旧书店的萧条虽令人惋惜、痛苦，但情绪如此悠长深沉，苦涩中掺着难以言状的甘蜜之味。<a href=\"https://sspai.com/post/72353\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72353"},{"title":"在浅薄的信息时代中，我们应该注意什么？","date":"2022-04-03 02:56:33","description":"高速发展的网络和蓬勃的信息，我们需要珍视并保留我们思考以及见解。<a href=\"https://sspai.com/post/72052\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72052"},{"title":"如何评价 4 月新番动画《派对浪客诸葛孔明》第一集？","date":"2022-04-03 02:51:10","description":"\n<p data-pid=\"Nz1S46Yp\">随便写点东西，算是个人的观影笔记。</p>\n<p data-pid=\"0E9okrXZ\">我很少关注漫画，但派对咖孔明一直有所耳闻，虽然连载时间只有两年，但本作应该算是近些年来比较有影响力的三国题材漫画之一，已经和光荣三国志14以及世嘉三国志大战两大重磅IP进行了联动。我正好是三国志14的深度玩家，所以也一直期待着这部作品的动画化。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-98b4c27d1f9d82058fdf725a3ed87b64_720w.jpg?source=b1748391?rss\" data-rawwidth=\"720\" data-rawheight=\"405\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-98b4c27d1f9d82058fdf725a3ed87b64\" data-watermark-src=\"v2-164dd3d0358c33631a9a25cfc5108a8a\" data-private-watermark-src=\"v2-5a2176c66f3a370bf6212b65ba1c6aa6\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-5c785fd7d36df82ac254c4cfc0d529db_720w.jpg?source=b1748391?rss\" data-rawwidth=\"520\" data-rawheight=\"406\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-5c785fd7d36df82ac254c4cfc0d529db\" data-watermark-src=\"v2-fb06ba60b5ff5bb91ed063e885b96d0c\" data-private-watermark-src=\"v2-0363e01cbb6e601695f6b86a51bc577f\"></p>\n<p data-pid=\"s15ZXYuH\">就第一集的表现来看本作还是十分让我满意的，无论剧情还是音乐都有出彩的地方。本作的故事以在东京涩谷复活的诸葛亮帮助女主角月见英子成为歌手出道而展开，不可避免会有许多关于演唱方面的内容，当知道制作公司是PA时我就放心了，PA的Angel Beats是我入宅后最早接触的几部作品之一，该作有条支线是关于校园乐队GDM的，而当时PA请来献唱的歌手里有个叫LiSA的新人，听到这里大家基本就该知道他们的鉴赏水平了（不过评论区也有人指正挖掘LiSA的是原作企划方）。</p>\n<p data-pid=\"-sqQ_0GQ\">打开视频才看几秒就有一股非常熟悉的味道扑面而来，马上把进度条拖到结尾看了下，果然，负责担任旁白的是增谷康纪。这位是真三国无双里关羽和魏延的声优，并且一直担任真三系列的旁白，其声线浑厚饱满，语速不快不慢，瞬间就把我带入了看真三系列剧情介绍时的体验。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ef81a801f9e20c501b0a74df6286410e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"313\" data-rawheight=\"33\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-ef81a801f9e20c501b0a74df6286410e\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"m-uf7Wy6\">制作组应该是比较懂行的，不但旁白请的是真三的旁白，主角诸葛亮请的也是真三里给司马懿配音的置鲇龙太郎，不得不怀疑是在玩梗。至于为啥不直接请诸葛亮的声优小野坂昌也，个人估计是因为如果让小野坂配这么活泼的角色，他很可能会配成一个变态......</p>\n<p data-pid=\"9RbwgYDO\">然后是这张三国地图。有人注意到东南方位的夷洲没有划给吴国，考虑到孙权确实没有实际掌控夷洲，这么画倒也没什么问题。问题在于魏国地图的东北方向地图开疆严重，不但把三韩画了进来，高句丽似乎也不能幸免。另外并州部分是按照东汉地图来画的，实际上雁门关以北的当时已经落入拓跋鲜卑（没错，就是后来建立北魏的那个拓跋）之手，其中就包括吕布的故乡五原。两相对比似乎显得有些厚此薄彼，帮孙权大帝震怒一下。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-8e646ad154dbb7ca06f2fed7696d6605_720w.jpg?source=b1748391?rss\" data-rawwidth=\"946\" data-rawheight=\"682\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-8e646ad154dbb7ca06f2fed7696d6605\" data-watermark-src=\"v2-0b67d82b17a5c550e28565fc14ce5f9a\" data-private-watermark-src=\"v2-feaa5bb15bfa1f53ad99c01ba67c10d5\"></p>\n<p data-pid=\"7W3Ejal7\">孔明在五丈原病逝前回想起了逝去们的战友，画面从上到下依次是刘备、关羽、马超、赵云、黄忠、张飞。马超采用的是类似于真三系列里的金甲造型，而非传统连环画里的银甲，越发怀疑团队里有真三的粉丝。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-661e026226262a8c3b1290429ac62235_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1205\" data-rawheight=\"680\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-661e026226262a8c3b1290429ac62235\" data-watermark-src=\"v2-ae126cfeaaa8c4e37a342d7ea85dc98e\" data-private-watermark-src=\"v2-529ff66667f582695e4d7f4c4ca21d91\"></p>\n<p data-pid=\"YLlgkSHY\">孔明去世时许的愿望让我喷了口饭，是希望来生能够活在和平的世界当中。这句发言不太符合孔明的形象，不过从后面才知道安这么句话上去不光是为了推进剧情，而且是一个伏笔。</p>\n<p data-pid=\"hswnpgfp\">孔明重生在了万圣节的涩谷街头，在那里你就算打扮成羽扇纶巾的模样也不会被当成疯子，还会因为造型太还原而被coser同好拉着一起游行，然后孔明就这么被一边灌酒一边拖进了酒吧。在那里，他第一次见到了担任酒吧驻唱的女主角月见英子，并且听她唱了第一首歌，是欢快摇滚风格的Be crazy for me。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-21363723f2aedcd039517435b80ccab1_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1201\" data-rawheight=\"679\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-21363723f2aedcd039517435b80ccab1\" data-watermark-src=\"v2-6d2077ee2f970dc7be00b10500eeb8fe\" data-private-watermark-src=\"v2-62fe3fb3712a3ccda1322e9e6a748301\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-c27b7550e37a3f8d276b8d91d4182231_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1221\" data-rawheight=\"681\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-c27b7550e37a3f8d276b8d91d4182231\" data-watermark-src=\"v2-a81937b9bfdc197aed7ccb6ee85cd825\" data-private-watermark-src=\"v2-07615b1b2b675051724be161d70a2b44\"></p>\n<p data-pid=\"sl8J69Bb\">虽然听上去好像是在夸这首歌好听，但其实是个伏笔，吧台小哥的独眼龙造型同样也是伏笔。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1b08fc92e04fc86d8bd0529b161b3960_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1210\" data-rawheight=\"677\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-1b08fc92e04fc86d8bd0529b161b3960\" data-watermark-src=\"v2-0471ec0d9098ab7caa814007ce3511da\" data-private-watermark-src=\"v2-afef859d1f7ae793465c4251ab2e039d\"></p>\n<p data-pid=\"KWhPWh-P\">喝醉酒被女主捡回家的孔明终于意识到自己不是身处地狱，而是复活了，感到大为震撼，说连奇门遁甲里都没有记载转生之术。此处使用的应该是演义里学过法术的孔明设定，也就是借东风点七星灯的那个妖道。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-49de53186028a8d86936ebe4af15e306_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1217\" data-rawheight=\"681\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-49de53186028a8d86936ebe4af15e306\" data-watermark-src=\"v2-b93c5ca2e67f40ea8aa3a58efdbff22b\" data-private-watermark-src=\"v2-5cf5472553b82547f1031909189dfe8d\"></p>\n<p data-pid=\"SHEp_zUL\">调整好心态的孔明对这个时代的万事万物充满了好奇，并请求女主能够教自己学习掌握。他通过“才能是通过学习掌握的”这句话打动了女主，因为女主自己也是一直在音乐的道路上学习成长着，孔明的处境和她别无二致。随后孔明说自己将在学会后报答恩情，基本说明了后续的剧情发展。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-2246de539597aee588e18241c10bd022_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1225\" data-rawheight=\"681\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-2246de539597aee588e18241c10bd022\" data-watermark-src=\"v2-38ad8316cbb063fe235dab4b0a074d22\" data-private-watermark-src=\"v2-fa766e54863e0e24e0643f5ae401201f\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-d868c23b2627d38f09cce3aca0e5ad2e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"363\" data-rawheight=\"67\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-d868c23b2627d38f09cce3aca0e5ad2e\" data-watermark-src=\"v2-739b39edcf5132cb3982ca28a0686444\" data-private-watermark-src=\"v2-7b5e719b333913c4e8ed4ec049212492\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-d904e3694c853d5ec3f203a82acc0096_720w.jpg?source=b1748391?rss\" data-rawwidth=\"364\" data-rawheight=\"66\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-d904e3694c853d5ec3f203a82acc0096\" data-watermark-src=\"v2-c8163211e3f555fadf98ba512e279666\" data-private-watermark-src=\"v2-2e60a453a08bce5ab196fb15c979efa2\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-67b407ffbd585914abbebac88e6de8f3_720w.jpg?source=b1748391?rss\" data-rawwidth=\"323\" data-rawheight=\"69\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-67b407ffbd585914abbebac88e6de8f3\" data-watermark-src=\"v2-620d7e4863066fe72c950ee9f95ce776\" data-private-watermark-src=\"v2-694b0a88d56475d04e527f28c9618d7f\"></p>\n<p data-pid=\"TjkOSjxj\">然后一学就是四个小时，孔明不但学会了玩手机，还会上维基百科找自己的词条，然后开始研究起了区块链，但女主已经累到崩溃了......崩溃后的女主提出了一个所有玩过无双大蛇的人都会产生的疑问——为什么三国时代的人可以和日本人无障碍沟通？</p>\n<p data-pid=\"S7Sfgooa\">答案是作者也不知道......</p>\n<p><img src=\"https://pica.zhimg.com/v2-19e2b4f5d4a57446da84a7d5a5f71f6e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1224\" data-rawheight=\"683\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-19e2b4f5d4a57446da84a7d5a5f71f6e\" data-watermark-src=\"v2-ba96b6467d813ff6455f88cdab57d733\" data-private-watermark-src=\"v2-5709769ae69ab3a010ae25eb8a875fea\" data-tags=\"porn\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-0eb778441fc7e85adf902e8d43560f19_720w.jpg?source=b1748391?rss\" data-rawwidth=\"329\" data-rawheight=\"68\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-0eb778441fc7e85adf902e8d43560f19\" data-watermark-src=\"v2-f713d4877a95ed55394d5d377f737524\" data-private-watermark-src=\"v2-217d99e6da5b0291a586be198a074ece\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-58ab6c5d1b375ea86bc06446931fc178_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1210\" data-rawheight=\"679\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-58ab6c5d1b375ea86bc06446931fc178\" data-watermark-src=\"v2-a32c3203008b36243181ef9533f1f798\" data-private-watermark-src=\"v2-9dd31160ca88ef5d341784811b607755\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-1670a66e8aea445a7b49160cf0d6289f_720w.jpg?source=b1748391?rss\" data-rawwidth=\"313\" data-rawheight=\"70\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-1670a66e8aea445a7b49160cf0d6289f\" data-watermark-src=\"v2-26648af42d1fcb7f66008db453db2e5a\" data-private-watermark-src=\"v2-fd691e2d4d2617ca9734b908f6dd868d\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-e0bd24d2da523ac59cbb7baa8b2a2588_720w.jpg?source=b1748391?rss\" data-rawwidth=\"400\" data-rawheight=\"72\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-e0bd24d2da523ac59cbb7baa8b2a2588\" data-watermark-src=\"v2-7de2646e38834f5ac10819c8bbb21f62\" data-private-watermark-src=\"v2-cf596b2343e54a54f9d00dd65c932137\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-b0d3034323c92017d9a9e04c826e4e33_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1220\" data-rawheight=\"685\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-b0d3034323c92017d9a9e04c826e4e33\" data-watermark-src=\"v2-02555f108ff2f47bdcd38b69a44c9e45\" data-private-watermark-src=\"v2-5b118f62b02b72cde5355ce7995d6334\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-90d9d7dcc332f8db095800354512fac3_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1218\" data-rawheight=\"679\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-90d9d7dcc332f8db095800354512fac3\" data-watermark-src=\"v2-9184dc79d8760242fb9c24922b2a3ede\" data-private-watermark-src=\"v2-16c77629eda7fc2cfa6d3c4b6f639156\"></p>\n<p data-pid=\"j4aAat9t\">接下来是第一集里最伤感的部分。孔明翻到了刘备进位汉中王的记载，并表示好怀念。在刘备成为汉中王到关羽败亡前的这半年时间是整个蜀汉政权的巅峰，也是自己身为蜀汉臣子最快乐的一段时间。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-c71841471fb818d61bbd16a78cf848cb_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1222\" data-rawheight=\"685\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-c71841471fb818d61bbd16a78cf848cb\" data-watermark-src=\"v2-0738c0e2e543623763d1738b51770218\" data-private-watermark-src=\"v2-95cef2f12249bacc1ab07673cfc5caed\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-5ce37cd70547d05ae0a6a4641b222395_720w.jpg?source=b1748391?rss\" data-rawwidth=\"155\" data-rawheight=\"86\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-5ce37cd70547d05ae0a6a4641b222395\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"gjtU06bR\">但快乐的时光总是短暂的，孔明马上就知道了最后的结局，并感叹果然如此。蜀汉在自己死后约30年灭亡，司马家族统一了天下，但世间又很快回到了战乱，熟识的人和事一件件消逝，无论蜀汉还是自己都成了一场空。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-0e31174953d8dbec4d8a80f90910b7b9_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1211\" data-rawheight=\"688\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-0e31174953d8dbec4d8a80f90910b7b9\" data-watermark-src=\"v2-5468851d97e922574fb01a7be6226615\" data-private-watermark-src=\"v2-3ecf82fabdcdca1270d153656a0ed938\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-3aee6030290ac5505cd8cd973c0145fb_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1223\" data-rawheight=\"686\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-3aee6030290ac5505cd8cd973c0145fb\" data-watermark-src=\"v2-a6e4561fe0162cbb531dd3456b80a7b7\" data-private-watermark-src=\"v2-518f95894d598761e4a040c8cb0bff18\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-7f1ea520560ce1c88ead2f2ab1c9fe5c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1227\" data-rawheight=\"688\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-7f1ea520560ce1c88ead2f2ab1c9fe5c\" data-watermark-src=\"v2-8c7d1b86d5cc84f9b7c0e702ea24102e\" data-private-watermark-src=\"v2-2d8ad57c249e9680bd8df1e55e5eb2dd\"></p>\n<p data-pid=\"9o9tR9dT\">就在孔明失落之余，女主唱起了本集的第二首歌I'm still alive today。这是一首抒情婉转的歌，歌名正对应孔明的状态，他听出了歌曲主题，耳边随即响起刘备说的要创造没有战乱的世界，而这正是死前的孔明想要到达的地方。刘备和自己一生的追求正是现在所处的时空，孔明终于在歌声中走出了对往事的感怀。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-635dd6f58486f58395357392d6a4ced7_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1219\" data-rawheight=\"684\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-635dd6f58486f58395357392d6a4ced7\" data-watermark-src=\"v2-158e291428668e41d6308db946008ca2\" data-private-watermark-src=\"v2-d8d0fb87b477fa5b0a2a0f4324c77f54\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-67c748c65d78d63fe7feb7dbd0947f70_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1220\" data-rawheight=\"680\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-67c748c65d78d63fe7feb7dbd0947f70\" data-watermark-src=\"v2-6283572e18b1337d5f87e8cf03177ef4\" data-private-watermark-src=\"v2-e6e64cf17cee3c810431d0727f269743\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-5769e6a7209ca480eba529d3111b2f91_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1225\" data-rawheight=\"683\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-5769e6a7209ca480eba529d3111b2f91\" data-watermark-src=\"v2-c76a3ed446e9ce8fae422365a17bffd6\" data-private-watermark-src=\"v2-f50af70139fce8be9fbbc37bb1d5ae2b\"></p>\n<p data-pid=\"3_GaFhQ4\">在夸奖女主歌声的同时，他也表示女主昨晚唱的摇滚纯属噪音，看来“扬子江的浊流”果然不是什么好词。之所以孔明之前会夸女主唱得好，估计是觉得“地狱里的歌声好像也不是完全不能听”。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-6b9595e35d2d18dc1e32b6fb2f1baeb8_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1214\" data-rawheight=\"677\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-6b9595e35d2d18dc1e32b6fb2f1baeb8\" data-watermark-src=\"v2-4327246ddf8fdb8a7d42091ace898910\" data-private-watermark-src=\"v2-d575f37dffa0e4b6f6fde5d1b63c3ef0\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-5baf0bb8151ac2499d8fb79f107afea5_720w.jpg?source=b1748391?rss\" data-rawwidth=\"365\" data-rawheight=\"75\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-5baf0bb8151ac2499d8fb79f107afea5\" data-watermark-src=\"v2-e5ef0c7ad8ba61dd9e23b3509ffaf7c7\" data-private-watermark-src=\"v2-62ad72e1400c306cc741d9a24e8cc503\"></p>\n<p data-pid=\"LsdV9jXa\">振作起来的孔明决定在现代生活下去，然后去女主工作的店里投了份简历。我专门上网去查了下，武侯祠大街231号附2号就是成都武侯祠，估计孔明也是打开谷歌现查的......当然这里有个不是很严谨但无伤大雅的地方，那就是孔明真正下葬的位置是汉中定军山，成都武侯祠只是后世纪念他的地方。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-4642c5c4317521233a03abde9bf807a1_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1228\" data-rawheight=\"686\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-4642c5c4317521233a03abde9bf807a1\" data-watermark-src=\"v2-4dc4d48b086e685280a5002c072088e3\" data-private-watermark-src=\"v2-6910bc2bf4c0e0297cfcc31d9544c50c\"></p>\n<p data-pid=\"wuDG7hwb\">正常人看到这种简历都会觉得对方是个疯子，不过孔明的运气比较好，这位老板是个三国宅，居然和他聊起了三国，然后问了个很犀利的问题——为什么要用马谡去守街亭。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-67b305382975b530a72fe24c111107b3_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1228\" data-rawheight=\"684\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-67b305382975b530a72fe24c111107b3\" data-watermark-src=\"v2-a63c6b09e580b30f582ecee3c37bc5b2\" data-private-watermark-src=\"v2-a1dfe1b15e3c491232a7b09e1ea8a9e7\"></p>\n<p data-pid=\"LFP80R0k\">这个问题确实值得一问，因为这是孔明堪称完美的一生中所犯下的最大错误，他的回答也符合当时的情况，即蜀汉缺少人才，所以自己冒着风险想要培养马谡。这里他提到有人推荐魏延和吴懿，这段剧情在三国演义以及吉川英治版三国都没有出现，而是出自三国志马良传：</p>\n<blockquote data-pid=\"XMaUEJWO\">建兴六年，亮出军向祁山，时有宿将魏延、吴壹等，论者皆言以为宜令为先锋，而亮违众拔谡，统大众在前，与魏将张郃战于街亭，为郃所破，士卒离散。</blockquote>\n<p data-pid=\"9dMvb7Kd\">所以原作者对正史还是有一定了解的。日本ACG作品里以三国宅形象出现的角色不少，名侦探柯南还有监狱学园里都有，但实际展现出来的都是一些二设和三设的混搭，本作在这方面倒是还做得不错。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-d2f05d29ec79b6a22238ebf400ee8ae7_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1227\" data-rawheight=\"684\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-d2f05d29ec79b6a22238ebf400ee8ae7\" data-watermark-src=\"v2-bf8c47f56724dc3756471009401cfd89\" data-private-watermark-src=\"v2-611e0cb473ed31f092c4fd6a1a8b48df\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-585eca4101ee725cfea468130b3dbac9_720w.jpg?source=b1748391?rss\" data-rawwidth=\"356\" data-rawheight=\"63\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-585eca4101ee725cfea468130b3dbac9\" data-watermark-src=\"v2-57e181b8952ecc6f82d9404498f921ce\" data-private-watermark-src=\"v2-0450d23ae79a481234f9cd8d26fd930f\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-438cff1d6e6beef2db572f750edc540d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"482\" data-rawheight=\"68\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-438cff1d6e6beef2db572f750edc540d\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-d3ac73aa5d5b0c95856a430123676ab9_720w.jpg?source=b1748391?rss\" data-rawwidth=\"657\" data-rawheight=\"66\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-d3ac73aa5d5b0c95856a430123676ab9\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"HxqaaNwZ\">接着是孔明对于马谡失守街亭的一些大胆猜想，这一段比较富有动漫作品的浪漫审美，看作是一个发散思维还是挺有意思的。其实这段对话里孔明完全是作者的化身，他所提出的都是作者自己的一些想法，再利用马谡不明确的动机和孔明在他人眼中来历不明的身份借剧中角色进行猜测，而老板完全可以看作是作者在现实世界里的朋友，他俩的对话与其说是三国爱好者和孔明的对话，更像是两个爱好者在互相交流想法，颇具现实感。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-788f38b94a5fab64d03c0a32ac8b6092_720w.jpg?source=b1748391?rss\" data-rawwidth=\"440\" data-rawheight=\"68\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-788f38b94a5fab64d03c0a32ac8b6092\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-d0dcb0fd2f7a292a3cbc6ddd980e8cf1_720w.jpg?source=b1748391?rss\" data-rawwidth=\"220\" data-rawheight=\"71\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-d0dcb0fd2f7a292a3cbc6ddd980e8cf1\" data-watermark-src=\"v2-b4d98097020ec76dfa48c22bcdaf0e3a\" data-private-watermark-src=\"v2-028c4ce4002a2b4a571b99ff64f7445f\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-e8394219a3ecd150904907ed5e0d4213_720w.jpg?source=b1748391?rss\" data-rawwidth=\"507\" data-rawheight=\"66\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-e8394219a3ecd150904907ed5e0d4213\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-b382edd6dcfd038a1d8f4938b364c632_720w.jpg?source=b1748391?rss\" data-rawwidth=\"400\" data-rawheight=\"63\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-b382edd6dcfd038a1d8f4938b364c632\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-ca0e0d41d214dd0efa95e8c066aac44e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"305\" data-rawheight=\"75\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-ca0e0d41d214dd0efa95e8c066aac44e\" data-watermark-src=\"v2-299a7133cd11a89f20c111e7f04bb2ac\" data-private-watermark-src=\"v2-e82983eaf3e498c97ba3e35989e844f3\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-2bcc83e9a931b5ae71b31511a309ff37_720w.jpg?source=b1748391?rss\" data-rawwidth=\"406\" data-rawheight=\"62\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-2bcc83e9a931b5ae71b31511a309ff37\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-899c45b38d76b5bc5736f3b149a80899_720w.jpg?source=b1748391?rss\" data-rawwidth=\"382\" data-rawheight=\"80\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-899c45b38d76b5bc5736f3b149a80899\" data-watermark-src=\"v2-64ed92e4473c898054f42d20e4429fef\" data-private-watermark-src=\"v2-f1da118821a748e6dfbd488432cc0096\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-1979276ee249d91942d3596330378e5f_720w.jpg?source=b1748391?rss\" data-rawwidth=\"228\" data-rawheight=\"77\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-1979276ee249d91942d3596330378e5f\" data-watermark-src=\"v2-20ba6f70026f6d3c538274186c412c56\" data-private-watermark-src=\"v2-267e79aa9fa536fd074adac230918436\"></p>\n<p data-pid=\"hRDEQiUC\">就这样，成为老板知心好友的孔明加入了酒吧。老板提到想要找到一起聊三国的人，因为最近的年轻人都不读三国了。这里稍微说明一下，日本的三国热潮其实是从80年代中日蜜月期开始的，当时日本上下都对中国历史及文学很感兴趣，国营电视台NHK制作了木偶剧三国志，影响了一代日本人，随后就是横山光辉三国志的动画化以及光荣三国志等游戏的推出。到本世纪初三国热潮略有消退时，又是真三国无双和三国志大战等游戏的爆火成为了新一代日本年轻人了解三国的窗口，并在09年电影赤壁引进时达到高峰。</p>\n<p data-pid=\"49gZldcJ\">虽然如今三国在日本已经成为一个文化符号，但像过去那样直接通过作品详细了解三国的人反而变少了，就和中国的金庸作品一样，在中年人当中不少可以对剧情如数家珍，而年纪小一点的可能更多只是一知半解。说起来，中日两国人都经常高估对方对三国的认知，中国人到日本旅游，发现日本人可以随口说出一些三国人物的名字，以为对方很懂三国，日本人来到中国也是差不多的情况。</p>\n<p data-pid=\"GJiigDNS\">另外这里还有一处细节是老板提到三国时说的都不是“三国”而是“三国志”，但字幕组很贴心地翻译成了“三国”。这是日本的一种特殊现象，由于三国演义及各种三国题材的小说漫画游戏作品的日文名大都叫做“三国志”，所以日本人把所有和三国相关话题内容都统称为“三国志”，但直译成“三国志”就很容易造成误解。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-314ad8b6fbd3af458dd7c77457ac5ce0_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1218\" data-rawheight=\"681\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-314ad8b6fbd3af458dd7c77457ac5ce0\" data-watermark-src=\"v2-ac20aee9f9b9454eab6914f923cc5f5e\" data-private-watermark-src=\"v2-d82c2fc276ab3295bd8aec6503cada15\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-5ab3523e929905f07b32ff6c0e56b9cc_720w.jpg?source=b1748391?rss\" data-rawwidth=\"468\" data-rawheight=\"67\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-5ab3523e929905f07b32ff6c0e56b9cc\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"UufosZUS\">最后孔明在工作时听到了女主的第三首歌shooting star，并在和老板的交谈中确信女主有歌唱的才能，具备成为shooting star的潜质。这三首歌在不同的时机出现，分别给孔明带来的不同的冲击，并确认了当下的感受，第一首歌让他在“地狱”中找到了乐子，第二首歌让他接受了自己复活的事实，第三首歌让他发现了复活后的生存目标，孔明对女主的评价在这三首歌里循序渐进，正好对应了三顾之礼。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-4cc10937620b463674eda9abc1c38838_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1222\" data-rawheight=\"682\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-4cc10937620b463674eda9abc1c38838\" data-watermark-src=\"v2-6770ed4fc4bf76412f0ba01650ddc4b4\" data-private-watermark-src=\"v2-8b5b087269e03af0bc047816e6fb7c45\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-aeba41046030f4add57276e3155ad555_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1221\" data-rawheight=\"685\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-aeba41046030f4add57276e3155ad555\" data-watermark-src=\"v2-d12c596cb2316bed8889cb163feb8c99\" data-private-watermark-src=\"v2-5787785108917eaee78d23036d91c64a\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-a14264f076007d6095524c799b730be3_720w.jpg?source=b1748391?rss\" data-rawwidth=\"231\" data-rawheight=\"78\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-a14264f076007d6095524c799b730be3\" data-watermark-src=\"v2-9a08640e1ef7d2b4a41ba118fb117984\" data-private-watermark-src=\"v2-98399d2b497257196cbc52ac3b9e3bb9\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-dbb9b3827b08b5be0295373b895e56dd_720w.jpg?source=b1748391?rss\" data-rawwidth=\"551\" data-rawheight=\"60\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-dbb9b3827b08b5be0295373b895e56dd\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"zCq3K2aJ\">不过相比女主对孔明的三顾之礼，个人认为这更应该算是制作组对观众的三顾之礼。女主的声优是本渡枫，但唱歌时请来了唱见96猫担任声替，同时一集就贡献了三首高质量且和角色心态高度契合的歌曲，实实在在地表达出了自己的诚意。作为一名观众，也很难不被制作组的这份“三顾之礼”所打动。</p>\n<p data-pid=\"4jzf8VBz\">中午和 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/5a81949425920ddc2218a9950e53f1c7\" data-hash=\"5a81949425920ddc2218a9950e53f1c7\" data-hovercard=\"p$b$5a81949425920ddc2218a9950e53f1c7\">@肩上的乌鸦</a> 聊到这部作品时，他说挺有港剧九五至尊的感觉，那一部是江华扮演的雍正穿越到现代，利用权谋帮助集团少爷夺权上位，而这一部是诸葛亮利用才能帮助驻唱歌手出道。其实作为带有历史背景的穿越作品，二者确有共通之处，利用角色身份、知识和时代背景的错位来创造戏剧性，正是这类作品的乐趣所在，尤其该作里也描写了雍正知道清朝灭亡时的反应。</p>\n<p><img src=\"https://pica.zhimg.com/v2-f79bc924a08e6f0190d0f6431d635188_720w.jpg?source=b1748391?rss\" data-rawwidth=\"480\" data-rawheight=\"346\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-f79bc924a08e6f0190d0f6431d635188\" data-watermark-src=\"v2-8e3b172fa9042470dd70087274ca0cc8\" data-private-watermark-src=\"v2-6d6f5b8ba36c43e62231a5e30e6a6707\"></p>\n<p data-pid=\"UN47Gq_Q\">现代人穿越回古代是利用自己未来的知识，而古代人穿越回现代，则更多是利用身上的才能，在此之外，角色作为历史人物所具备的特殊经历如何投射到剧本，也是剧情的一大看点。或许正因为如此，本作虽然带有穿越剧的搞笑基因，却在剧情推进过程中不时透露出一种正剧感，诸葛亮的角色形象也比较令人信服。</p>\n<p data-pid=\"cCPR5QJn\">而诸葛亮说出才能不是出自天生，而是需要学习时，又让我想起另一位在现代复活并不断提升自己技艺的古人藤原佐为。他指导主角的同时又在完成自己生前的遗憾，实现自身价值构成了另一条主线，从越过千年的往事里发掘出人类共通的情感。一想到这位派对浪客究竟会以什么样的姿态退场，也不免为作品增添了几分哀婉的色彩。</p>\n<p><img src=\"https://pica.zhimg.com/v2-c87b627536d2784beea817e2f8d2f5bd_720w.jpg?source=b1748391?rss\" data-rawwidth=\"500\" data-rawheight=\"375\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-c87b627536d2784beea817e2f8d2f5bd\" data-watermark-src=\"v2-d61f0270df62dfa4176563e458b1c569\" data-private-watermark-src=\"v2-ab76128fc054ca98c5f4cfaf79884ce5\"></p>\n<p data-pid=\"RQ4znlfN\">最后则是很多人都提到女主月见英子的名字出自诸葛亮的妻子黄月英。其实诸葛亮的妻子黄氏在史书还有演义里都没记载叫什么，月英是袁阔成评书里的说法，而且原本流传度很低。在85年到01年期间，两岸三地拍摄的几部相关电视剧里，黄氏分别有黄瑛、黄昏、黄阿楚、黄素的姓名，其他的叫法还有黄硕、黄婉贞、黄阿丑等。</p>\n<p data-pid=\"Pb5is1gH\">目前互联网上能找到最早的关于“月英”的条目是2003年4月15日，最早关于“黄月英”的条目是2005年1月1日，在这之前完全找不到关于“月英”或“黄月英”的内容。</p>\n<p><img src=\"https://pica.zhimg.com/v2-a5379bf0ba311ce982042e04845e45b4_720w.jpg?source=b1748391?rss\" data-rawwidth=\"744\" data-rawheight=\"129\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-a5379bf0ba311ce982042e04845e45b4\" data-watermark-src=\"v2-bd4f89f88ae5f7a9595caff78c7032c3\" data-private-watermark-src=\"v2-6a0b63dfac8279f0035661a18e91b926\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-07a84e07158c30d8abc81f9242dbcbf6_720w.jpg?source=b1748391?rss\" data-rawwidth=\"742\" data-rawheight=\"166\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-07a84e07158c30d8abc81f9242dbcbf6\" data-watermark-src=\"v2-f7044f70d76d5b4a15b1db464ad86302\" data-private-watermark-src=\"v2-57aa50c451ecdb8fd79bec1f0526c058\"></p>\n<p data-pid=\"MGGwWOIR\">这期间发生最重要的事情是2003年2月发售的真三国无双3里将月英这个角色转正，随后同公司出品的三国志9里也设置了该角色，借由这些游戏的影响力，“黄月英”这个名字被广泛接受并逐渐成为黄氏的唯一名称。到了09年台湾拍摄的终极三国和11年香港拍摄的回到三国里，都不约而同使用了黄月英的名字，大陆出品的三国杀等游戏也称其为黄月英。</p>\n<p data-pid=\"CkjoZaEK\">所以虽然黄月英这个名字产生于本土，但它如今的认知度却几乎都是依靠日本游戏的传播，或许大家都该庆幸光荣当年没自己随便起个名字。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhang-ting-61-50?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">FFF团长</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/525377156/answer/2420750319?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">101 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/494315958?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价 10 月新番动画《看得见的女孩》第四集？</a><br><a href=\"http://www.zhihu.com/question/491980585?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2021 年十月新番动画有哪些值得推荐？</a><br>\n","link":"http://www.zhihu.com/question/525377156/answer/2420750319?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"剧场版动画「摇曳露营」特报 PV 和第二弹先导视觉图公开，有哪些看点？","date":"2022-04-02 09:43:52","description":"\n<p data-pid=\"1fMb6Hgs\">先翻译一下这次情报出来的人物简介：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ff77ee7f0475f9094d199b017593c6df_720w.jpg?source=b1748391?rss\" data-rawwidth=\"2000\" data-rawheight=\"2828\" data-size=\"normal\" data-caption=\"各务原抚子 ：在东京的户外用品店工作，以天生开朗的性格接待客人，“想让很多人享受户外活动”。 到了休息日，露营自不必说，好像也会骑公路自行车和爬山等。\" data-watermark=\"original\" data-original-src=\"v2-ff77ee7f0475f9094d199b017593c6df\" data-watermark-src=\"v2-d8fc2c5146f0f177983c49198f83671d\" data-private-watermark-src=\"v2-83b3198a86cc80092688e33865966e91\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-fd62847d0013f9303d8fa6d4e4da925f_720w.jpg?source=b1748391?rss\" data-rawwidth=\"849\" data-rawheight=\"1200\" data-size=\"normal\" data-caption=\"志摩凜： 在名古屋的出版社当编辑，做过营销最近调到编辑部，做了城镇信息杂志，但是自己的企划还没有通过。作为放松，休息日会骑摩托车去旅游。\" data-watermark=\"original\" data-original-src=\"v2-fd62847d0013f9303d8fa6d4e4da925f\" data-watermark-src=\"v2-c393f9f9aae30777485a5e68100edae0\" data-private-watermark-src=\"v2-1cba238d7604bc8064d14a08a1868d17\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-ee5545aea81cbdbacda6e5d961451368_720w.jpg?source=b1748391?rss\" data-rawwidth=\"800\" data-rawheight=\"1131\" data-size=\"normal\" data-caption=\"大垣千明 ：曾在东京的活动公司工作，后来跳槽到山梨县的观光推进机构。每天都很期待下班回家的路上在居酒屋喝一杯。\" data-watermark=\"original\" data-original-src=\"v2-ee5545aea81cbdbacda6e5d961451368\" data-watermark-src=\"v2-1083e8c178b90be1523292143b40a416\" data-private-watermark-src=\"v2-3bb396f3749be41e81a7e4e63194fe4f\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-698b33baa0b247f028eeba0f4b7f73aa_720w.jpg?source=b1748391?rss\" data-rawwidth=\"707\" data-rawheight=\"1000\" data-size=\"normal\" data-caption=\"犬山葵：在山梨做小学教师的工作，虽然因为很会照顾人的性格而受到学生的仰慕，但是也有偶尔在课堂上吹牛的传言……？\" data-watermark=\"original\" data-original-src=\"v2-698b33baa0b247f028eeba0f4b7f73aa\" data-watermark-src=\"v2-b8b51de7837e408134ddf3fae267e321\" data-private-watermark-src=\"v2-56c2bee47b8dd06fc7336a278c9ddab3\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-0d1e8d924ee621617e7380c32e0868e5_720w.jpg?source=b1748391?rss\" data-rawwidth=\"750\" data-rawheight=\"1060\" data-size=\"normal\" data-caption=\"齐藤惠那：在横滨的宠物沙龙里作为犬美容师工作。 因为爱犬的竹轮在老家，所以一到休息日就回山梨带着爱犬散步和开车兜风。\" data-watermark=\"original\" data-original-src=\"v2-0d1e8d924ee621617e7380c32e0868e5\" data-watermark-src=\"v2-b8f8b5147528a21807e3465a884c2984\" data-private-watermark-src=\"v2-756b21404bb6d022754ba5e51081ea68\"></p>\n<p data-pid=\"zc7zC2Xc\">综合 PV 来看，剧场版就是大家成年后社畜后难得聚在一起，决定抛下当下工作，完成学生时代未尽之梦想，一起制造露营场的故事。</p>\n<p data-pid=\"q_HWddZG\">虽然从之前透露的情报来看就已经能确认，剧场版会直接越过学生时代讲她们的社会人生活，但人物简介一出来，每个角色各奔西东各有各的未来成了既定事实，一种真切的冲击感袭来的同时，又觉得这个动画系列实在是有魄力。因为漫画都还在讲她们高中的故事，直接越过原作高中甚至大学的故事，这等于《轻音少女》动画突然出了续作，却跳过大学篇直接原创了个社会人篇一样。而且更现实的是，原作曾幻想抚子未来会成为户外产品公司的 CEO ，但现实是和许多日本普通青年一样“上京”在户外用品店打工，小明更是疑似“上京”遇挫回到家乡就业。</p>\n<p data-pid=\"eUXuy033\">但我觉得这才是《摇曳露营》。不如说《摇曳露营》本来就和一般芳文社空气系美少女漫画有区别。就拿上个季度完结的空气系动画《女孩的钓鱼慢活》来说吧，这部作品虽然以重组家庭这个很现实的话题切入故事，似乎也在努力呈现一种现实感，但其实和《摇曳露营》还是两回事。原因是虽然关于重组再婚家庭的故事，两个女孩经历各自亲生父母的伤痛之后，如何接入再婚家庭的新环境，这个过程是被省略的，取而代之的是她们迅速融洽然后开始你好我好大家好的日常，她们那看似幼龄的人设，以这种萌系作品的符号性越过了现实主义的沟壑。正如第 11 集所揭示的母亲之所以决定再婚是因为女儿的体谅，观众正如她们的父母一样，不带质疑地接受了她们令人欣慰却不知来由的懂事生性（并享受她们带来的这种感动）。这和其他空气系作品一样，正是她们作为萌系角色本身存在的符号性——这些萌系角色都是无条件接收观众投射来的爱怜，才是空气系这个安全日常乐园的根基。原生家庭不完整这个背景，但又绝不会深入描写的浅尝辄止，这样的设定就承担了来自观众的爱怜的欲望。换个说法就是大家爱说的“箱庭世界”、“美少女动物园”（这个有点恶意），这个世界和角色承担着观众的注视，承担着观众自己也可能并未察觉的隐含的欲望投射。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-730d360ab669fd9c42bc5f9371291b9a_720w.jpg?source=b1748391?rss\" data-rawwidth=\"855\" data-rawheight=\"1200\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-730d360ab669fd9c42bc5f9371291b9a\" data-watermark-src=\"v2-fcc10915d9942577fdaf59131591d2f0\" data-private-watermark-src=\"v2-03a1e58bea7703c21c55efb950ffb8ae\"></p>\n<p data-pid=\"mMPUpmi8\">《摇曳露营》同样是关于几个女孩子的学生日常，却是反注视、一直打破这种注视的，直白地说，就是角色有角色自己的人生，有他们自己完整的生活世界呈现。比如故事中一直强调的，即使志摩凛一个坚定的独行者也找到了集体活动的乐趣，但她依旧坚信自己一直以来的生活经验：独自旅游有着无法代替的魅力，而她的周遭、那些热爱团体活动的朋友也最大程度地包容她（比如去伊豆团体露营的时候，凜还是选择了自己开摩托车前往）。又比如，凜和抚子分开露营，却通过邮件互相分享各自看到的夜景时，观众被允许看到她们俩看到的景色（大全景），却不允许窥探她们互相看到了对方发来了怎样的照片，她们互相转述的风景恰恰不被公开共享。这正如那些互相无须言说中体谅照顾着对方的角色，正如抚子悄悄给姐姐买了自动保暖袋，凜知晓爷爷仅仅只是想多陪自己走一段路，《摇曳露营》的世界永远为每个人（包括读者）保留自己最私人的空间和感受，保留他们享有秘密的权利，保留他们的无言与默契。</p>\n<p data-pid=\"N1uh5hzz\">各有各的露营方式，也各有各的人生（それぞれのキャンプ、それぞれの人生），我认为“それぞれ”这个日文词的语感很好地形容、概括了《摇曳露营》这部作品的特色。</p>\n<p data-pid=\"azxQvzg_\">又及，这部作品并没有承受我们贪婪的欲望，也就是反注视的，它绝不是隔绝于现实世界，相反我一直认为它一直在努力以轻盈的方式摹写着我们所生活的这个世界，它尽可能去传达一种你一定有所体验的、却未曾用言语道出的独一无二的心情，告诉我们这不是别人的生活，而是我们每个人都可能会有的、生活中许许多多的独特。</p>\n<p data-pid=\"_NDYyFeO\">正是因为对这些内面踏实的描写，凛和抚子等人才能在旅途中与世界“对峙”，与所谓的旅游的非日常“对峙”，不被非日常的浪漫假象所魅惑，她们的旅途总有结束之时，总要回归自己熟悉的街道与城镇。但即便如此，再熟悉的街道本身能挖掘出“令人惊讶的各种迂回”、“偶然的事物的呼吸”。日常不是一个被人围观着注视的他人的生活小世界，而是让作品连接到我们所生活的现实世界，去挖掘既属于作品又属于现实世界的偶然与独特，对峙着日常生活的乏味与庸常。在如此“对峙”之中，一个真实的世界悄然诞生。</p>\n<p data-pid=\"YRu-YaPr\">中平卓马说道：“简而言之旅途就是通过世界而与日期同化了的一个又一个进程，是与他者和异质的偶然相遇，通过那个相遇而突然将自己解体，最后再诞生新的自己的没有终点的自我超越的全部进程。但在每天生活的街道、在毫无变化的城市躁动中，我们都应能随时经历与从未体验过的、未知的、威胁着自己远近法的东西相遇，然后将自我解体的瞬间，这不就是旅途吗？”</p>\n<p data-pid=\"-UKOBMXT\">《轻音少女》——是的，我很喜欢用《轻音少女》举例，因为它作为空气系作品具备各种意义上的典型——动画不会描绘高中之后的故事，漫画也不会描绘大学之后的故事，仿佛学生的毕业就意味着故事的一个终点，终点之后便是到达了“长大”的彼岸，而不再去描绘毕业之后的故事，这个终点也被看作是长不大的青春的末日。但《摇曳露营》正因为它关于我们生活的世界，有着独属于私人的沉思，其时间是跟随着这个世界无限延伸的，并不会存在所谓的青春末日，青春之后生活依旧继续，剧场版的故事即使目前只有个模糊的梗概，但我觉得已经揭示了这一点。</p>\n<p data-pid=\"TH63_03H\">不好意思的是我最近才开始补《摇曳露营》的漫画，我觉得这个漫画的一大特点是作者特别喜欢用竖线条呈现阴影的层次，而且用得很浓，甚至浓到了考验出版社的印刷校对能力的程度。正是竖线条的光影世界中，几乎每一格阴影都会存在，似乎再轻快的故事叙述，也会最小程度地保留着阴郁一样，正如故事永远“保留自己最私人的空间和感受，保留他们享有秘密的权利”一样，或者这正是给予我们一种慢下来沉思的片刻，体验和寻找埋藏于生活的安宁。在圣诞露营的一章结尾，从夜晚到凌晨，再到朝霞，竖线条阴影一点一点地减少，在这个过程中，露营的小伙伴各自起床，做早饭，然而镜头并没有让我们清楚看到她们的脸庞。最后太阳终于从富士山腰探头，似乎欲与之前形成对比似的，一个白色的世界俨然出现，我们享受着的沉思被暂时打断，迎面而来的是旅行的“非日常”瞬间，同时也终于伴随着白色看清了她们面孔。日出只是日出，是每天司空见惯的景象，绝不是什么奇迹也绝不是什么世界尽头，但这片简单的白色足以让我们注意到生活的意义，这难道，不正是漫画以自己的表现形式，来呈现生活的某个高光，揭示这无奇的世界有着令人惊讶的迂回么？</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b5d7a201ac42431361179f83d96f4441_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1350\" data-rawheight=\"1920\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-b5d7a201ac42431361179f83d96f4441\" data-watermark-src=\"v2-fa2945628ee24c225cc828b10e497a1d\" data-private-watermark-src=\"v2-f4a601eab7099d82a86128ae5588508d\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-c5e73d26f685d7a3f7eb8c89ebbd9f6f_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1350\" data-rawheight=\"1920\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-c5e73d26f685d7a3f7eb8c89ebbd9f6f\" data-watermark-src=\"v2-2b660acecc2a77fc6541db484a2b5276\" data-private-watermark-src=\"v2-c000c37626a896044205aa426303187c\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-1a67eda08411a44b3b7aaec6cd5b3abc_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1350\" data-rawheight=\"1920\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-1a67eda08411a44b3b7aaec6cd5b3abc\" data-watermark-src=\"v2-eefd0974fb4a905e6055a569f4d066af\" data-private-watermark-src=\"v2-62ca604b873fce5b592d101723fa78ec\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-f44dd2e634be1da59da417b70a56d376_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1350\" data-rawheight=\"1920\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-f44dd2e634be1da59da417b70a56d376\" data-watermark-src=\"v2-8e881937b41aac83f8ced7bd8fec58e1\" data-private-watermark-src=\"v2-824180ae73fef079e5d0fd45961b12af\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-22d577396df98317fa7a6a905d21ee8c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1350\" data-rawheight=\"1920\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-22d577396df98317fa7a6a905d21ee8c\" data-watermark-src=\"v2-70fcfd40772c44863267694d1de892e0\" data-private-watermark-src=\"v2-b0dd50cfadd28901e6d2352d3b09bff4\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-7e8f6816ad7615cbddd08493606f69c3_720w.jpg?source=b1748391?rss\" data-rawwidth=\"2700\" data-rawheight=\"1920\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-7e8f6816ad7615cbddd08493606f69c3\" data-watermark-src=\"v2-b44dae9fcaeef8a6c27db736e9a65c12\" data-private-watermark-src=\"v2-cb573c2d2a9c3e0d5536e9d40038e320\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-321f6ff0b239d1f74f58949e5ed8c49c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1350\" data-rawheight=\"1920\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-321f6ff0b239d1f74f58949e5ed8c49c\" data-watermark-src=\"v2-8dda23a7be28afd612ec04911e52630d\" data-private-watermark-src=\"v2-e1e997954632da7cad546887a0c8269d\"></p>\n<p data-pid=\"2t7iweZF\">“异质并不是滚动在市区某处的东西，而是应该被发掘出来的。只有在对着世界萌生作为接受体的意愿，愿意接受事物的原来样貌、接受充满事物反射回来的敌意视线时，才能让我按下快门。”中平卓马说道。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/ta-ta-jun-minkun?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">塔塔君Minkun</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>延伸阅读：<br><a href=\"http://www.zhihu.com/question/269440431?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价《拳愿阿修罗》动画PV公布 拳拳到肉的战斗酣畅淋漓？</a><br><a href=\"http://www.zhihu.com/question/444415624?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何看待tv动画《鬼灭之刃 第二季 游郭篇》放出pv，并将在2021年内播出 ？</a><br>\n","link":"http://www.zhihu.com/question/525421898/answer/2419473989?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"我想要的可不是这个「中杯」：三星 Galaxy S22 评测","date":"2022-04-02 09:30:00","description":"在 Galaxy S22 面前你要么做选择、要么加钱，或者干脆和我一样拒绝这个「中杯」。<a href=\"https://sspai.com/post/72441\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72441"},{"title":"如果由你设计一个新的三国杀游戏模式，你会如何设计?","date":"2022-04-02 09:22:01","description":"\n<p data-pid=\"7DCkxdHq\">答：虽然这些年我的大部分工作重心《三国杀》之外的项目上，但近期的《三国杀》各种模式研发和线下联名产品的开发，我仍有参与把关或监修。像近年的《三国杀》“用间篇”和《拳皇三国杀》都是监制，只不过内容偏重线下的玩法创新，可能很多人没有注意到。如今的《三国杀》早已不仅仅是一盒实体卡牌了，它发展为一个多产品多场景、具庞大内容的游戏“合集”。我不能说对线上游戏这部分的模式非常熟悉，但也知道线上能做的创新相比线下需要冒更大的风险，更长时间的验证，因此更加不易。不过，相信线下能做到的，线上终归也能实现，创新不止，游戏不死。这里仅从个人/线下设计的视角，借这个问题跟大家分享一些最近的想法。</p>\n<p data-pid=\"4ypq-Dvo\">先看《三国杀》目前有哪些模式——除经典的“身份局”模式和“国战”模式外，大致分为竞技类（斗地主、2v2、3v3等）和线上活动场的各种PVE休闲玩法。“国战”脱胎于“身份局”，武将大多延续了“身份局”里的特征，但后也逐渐在自身体系内发展专属纬度展开扩充；而其他模式相比“国战”，内容基本是在原“身份局”基础上做牌池的微调，附带简单的对战目标。虽然一个游戏的模式本身并不需颠覆其内核，给玩家熟悉的内容加上更多的选择也不坏，但为模式差异化带来了两个问题：1.原本的内容（游戏牌，武将等）和底层机制不变的情况下，光靠模式规则创新的局限性较大；2.“身份局”玩法本身更偏休闲，而强加于其身的其他方向会导致水土不服，难以极致。</p>\n<p data-pid=\"vwOFnAkc\">讨论新模式的思路，就需要先探讨第一个问题：怎么才算“模式”，它有多大的创新空间？换句话说，改动多少内容才能既不脱离游戏本体系，也不算变成另一个游戏？举例来说，之前我们做的集换式卡牌游戏《阵面对决》，尽管用了“三国杀”的主题，你也不会认为它是“三国杀”的一个模式，而换做《火影三国杀》或《拳皇三国杀》，就可能有不同的论断（排除主题不论），尽管二者在玩法上相较原版也有不同程度的差异；再比如扑克，它能玩出的花样无穷尽，每种玩法都算是它的模式还是新游戏？这个边界的划定取决于其定义，如果模式定义为在不改配件（或基础内容）的前提下仅就规则的调整而演化出新的玩法，那么德州、斗地主、炸金花都是扑克这一产品的模式，而倘若定义从玩法切入，则可以单独算一个游戏。这个边界的划定大多情况下跟游戏核心体验的改变息息相关，而有时候，是否要以新游戏来包装一个玩法，取决于站在产品和市场的角度是否有必要。</p>\n<p data-pid=\"gMKFrQLv\">第二个问题是新模式探寻的方向，应该是偏向扬长还是偏向补短？《三国杀》的基本玩法决定了它在角色代入感、可变能力搭配和社交性等方面较突出，也许不同的产品形态会让这些特征有打折扣，但核心乐趣还是不变的；短处是相对的竞技性和难具成长感的游戏体验方面；这些年较成功的模式都是偏向扬长这个方向，而偏向补短的就相对逊色一些。 我认为两个方向都各具开发的空间，只是后者在不改变配件或内容的前提下来考虑的话，比较难以做出实质的游戏性突破。</p>\n<p data-pid=\"RuI3QaiE\">综上，在两个方向上，有几个完成度不同的点子分享：</p>\n<p data-pid=\"IkUvv2qS\">◆【偏扬长】“新身份局”玩法——回归初心，让局面更扑朔，代入感更强。（无需新配件）</p>\n<p data-pid=\"yAVeBHn9\">规则：1.先以随机方式决定主公玩家，并选将完毕。2.其余玩家选将后暗置。3.除主公外玩家在亮将时派发身份：与主公同势力则从偏忠一侧派发，不同则从偏反一侧派发。4.角色亮将的时机与“国战”类似，即发动技能的时机，但无回合开始阶段的机会，此外到主公回合开始时会选一名暗将翻开。</p>\n<p data-pid=\"Ub3t8JVr\">这一模式目前在线下测试过几次，虽然还有些平衡问题待解决，但核心体验基本能满足上述目标。有兴趣的童鞋不妨用实体卡试试，有任何建议也可以反馈给我。</p>\n<p data-pid=\"nNSEXGvz\">◆【偏补短】“新1v1”——尝试在模式的极限改动范围内体现游戏的竞技性。</p>\n<p data-pid=\"4M-c_mqJ\">规则梗概：1.玩家将操控多名武将组成的阵容来与另一名玩家对抗（相比KOF，能保留《三国杀》最大的乐趣）；2.武将强弱与费用相关（风味不变，但会改变武将的技能构成和体力），玩家阵容有费用上限，在此基础上构筑的阵容可能武将数量不同；3.武将的布阵与距离相关，而玩家手牌仅有一份（会比传统模式抓更多的牌，但比一控多方便操作）；4.胜负将由击杀的武将费用决定，例如8分局就仅需击杀对手总计8费的武将获胜（阵容总费用为12）；</p>\n<p data-pid=\"R0B-Lx3G\">这一玩法此前在线上预约页面做过功能展示，也有小范围的线下demo玩家测试，完成度很高，但能否成为融入线上游戏的一部分还有些问题待解决，今年晚些时候会发行这一玩法的线下版本，有兴趣的童鞋可以关注下。</p>\n<p data-pid=\"7VkqzvvM\">◆ 还一个点子是可以基于上述“新1v1”的方案而延展的单人Roguelike游戏，设定适当的关卡难度，解锁新内容，让武将阵容得以成长… 这一方向尚在测试中。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/kayak777?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">KayaK</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/430150853/answer/2420125563?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">11 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/287855557?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《三国杀》的设计可以有多用心？</a><br><a href=\"http://www.zhihu.com/question/417515519?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如果三国杀要设计一个只能在游戏结束时发动的技能，可以如何设计？</a><br>\n","link":"http://www.zhihu.com/question/430150853/answer/2420125563?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"《三国杀》国战有哪些神组合？","date":"2022-04-02 08:38:31","description":"\n<h2>我眼中的三国杀6：双将、锦囊叙事与野心家</h2>\n<p data-pid=\"yU7dumq9\">by 乌合之子但愿君</p>\n<p data-pid=\"vrEUjf3Q\">上一个回答见<b><a href=\"https://www.zhihu.com/question/523235955/answer/2417275744\" class=\"internal\">我眼中的三国杀5：红桃玩家、至尊场与限制选将</a></b>  。</p>\n<p data-pid=\"Y70CSNAr\">迄今为止已经写了5个回答了，下面进入下半场，各种具体模式的分析，首先要分析的就是国战。</p>\n<p data-pid=\"iANx3HXR\">三国杀的国战模式可以说是在推出之时就凭借模式而不是牌堆的改变，直接拉满了热度。国战模式公测的那几个月，简直是重回三国杀刚面世的巅峰。现如今国战模式已经成为永久常驻模式，与其他限时活动完全不一样了。</p>\n<p data-pid=\"aOczdqPv\">循着这个问题，就来聊一下介于互文性契合与数据库消费的微妙平衡，国战。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-193e2974bd8a62bb5dd5093f1cb989d3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2560\" data-rawheight=\"1600\" data-watermark=\"original\" data-original-src=\"v2-193e2974bd8a62bb5dd5093f1cb989d3\" data-watermark-src=\"v2-df4a75645d39263c3a7474e98ca67fee\" data-private-watermark-src=\"v2-ce3b26701aa3736ec413e8c213d532f6\"></p>\n<h2>1、三国杀作为文本套件</h2>\n<p data-pid=\"M9Mfhkdd\">齐泽克在对拉康的凝视、快感、死亡理论的解释过程中 ，特别喜欢用各种通俗文化的例证，以至于读者还必须是一个流行文化的跟随者，才能很好地理解齐泽克的思路。用三国杀游戏解释互文理论也能起到比较好的作用。</p>\n<p data-pid=\"2oztCMi1\">之前已说过，三国杀的原始逻辑，是用本土神话故事（三国故事，尤其是最近出的道教武将）将意大利式游戏机制（扑克，尤其是德州扑克）进行改写之后的结果，在改写的过程中还是难免留下原文本的部分内核，比如黑桃2-9就会出现爆破伤害的闪电牌。</p>\n<p data-pid=\"-TgXMpXL\">但是第一次的改写已经算是一个风格的扭转了。如果说最近几年不断增加拓展包的《BANG！》是一种<b>合并/粘贴</b>（integration-collage）的话，那么三国杀就是对文本和历史的引用。三国杀尽管会出现“关公战秦琼”式的大乱斗，但由于历史典故成为集体性潜在文本的存在，游戏对战本身也在不断通过后时性（ulteriorite）重新确认之前的历史文本。尽管我们都知道《三国演义》比之《三国志》而言，是一个可信度不足的版本历史，不过再进入二次模仿的三国杀里，可信度就不再是需要被关注的对象了。</p>\n<p data-pid=\"dkJY79Nw\">三国杀滋生出一种文本套件，作为对现实（外部）世界的抵制。虚构的对战过程当然不能和现实世界重叠起来，但这不代表不是“制造历史虚拟的再言”。</p>\n<h3>从这个逻辑上看，三国杀的互文性是压倒数据库性的。</h3>\n<p data-pid=\"tyucFZNd\">它与《BANG！》和三国故事，都是派生关系，而不是共存关系。</p>\n<p data-pid=\"jpTTJSNd\">我们可以用其他三个游戏（不是《BANG！》）与之对比。</p>\n<p data-pid=\"Yya6O8eO\">《英雄杀》，另一个BANG！的模仿者，但它几乎完全照搬（或抄袭）了BANG!产生新角色的模式，数据标记。即可以完全不受限的出“耳熟能详”的角色。《王者荣耀》，在对比Dota模式的戏仿上，则是破坏叙事文本，不过和英雄杀的逻辑又是一致的，只要耳熟能详即可。毕竟冰封王座类的三路对战游戏即便是相似的地图，里面的角色拥有更庞大的内生的自洽文本世界。《风声》，虽然也是通过不断增加新角色完成游戏的新鲜度，但因为《风声》的文本容纳度太高，导致不管任何角色的加入，都具有了抗战时期多方间谍博弈的感觉。</p>\n<h2>2、国战的本质是势力</h2>\n<p data-pid=\"LoXx8Hnq\">而国战非常明显的动摇了三国杀的互文属性，它的本质就是势力同一与双将模式。</p>\n<p data-pid=\"0BwenghQ\">势力同一取代身份认同，在是国战之为“国”的重要特性。这意味着对整个《BANG！》对战模式底层的扬弃。如果说国战还是对《BANG！》的<b>仿作（parodie）</b>的话，那就一定是体裁仿作而不是风格仿作了。</p>\n<p data-pid=\"EjyRXfsC\">阿尼克·布亚盖在《模仿的作品》一书中就如是说：</p>\n<blockquote data-pid=\"TEtgUXiJ\">并不就是说体裁仿作的作者必然忽视风格。<br>不过他首先把风格视为一种服务于体裁的整体形式，因而认为自己首先应该符合一些必需的体裁要求，而后才自主考虑属于独特表达的要求。</blockquote>\n<p data-pid=\"PuIxGGyF\">国战能够更好地呼应三国杀这个名字背后所拥有的象征意义，即多方势力之间的角逐。当然微妙的是，群雄势力依然被视为一“国”存在。当国战对战中，某势力角色阵亡时，除了群雄以外，都会显示”将“与”势力“的双重称谓，不可谓不妙。我们也很难想象张角和董卓都作为君主，之间的联系性会比魏蜀吴的君主更强。</p>\n<p data-pid=\"1aAYwr5q\">为了强化多方势力角逐的变数，在势备篇里提出来全新的概念[大势力]和[小势力]。小势力在围攻大势力时，就有相对的优势。在这个拓展包里，17张锦囊牌中，除了无懈可击以外，全是新锦囊。</p>\n<p data-pid=\"6OOWt_im\">势力对战的概念强化了战争叙事的<b>对话机制</b>，在身份场里的<b>政治合法性</b>被大幅度的削弱。</p>\n<p data-pid=\"mmDZR4_e\">仔细琢磨一下上面这句话，是不是这个道理。不管身份怎么分派，”反贼“和”内奸“的称呼的污名化就明显要高于”势力“——后面还有”野心家“这个另说。</p>\n<p><img src=\"https://pica.zhimg.com/v2-b324ab8a9f863dc0c6c3e0c83387e351_720w.jpg?source=b1748391?rss\" data-caption=\"放一个老版本的文和乱武\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"697\" data-watermark=\"original\" data-original-src=\"v2-b324ab8a9f863dc0c6c3e0c83387e351\" data-watermark-src=\"v2-a6e20b7eb8008f0cdf9d55c5a5d6b81a\" data-private-watermark-src=\"v2-0d594248b8711d50daafc650db2f9d92\"></p>\n<h3>那么政治合法性被转移到哪里了呢？</h3>\n<p data-pid=\"RagRDlgz\">答案是锦囊。势备篇的<b>势备锦囊</b>和不臣篇中的<b>势力锦囊</b>都是如此。</p>\n<p data-pid=\"q5klZAT8\">【挟天子以令诸侯】有利于大势力，【联军盛宴】有利于小势力，【敕令】要求必须明确势力。【火烧连营】是强化队列，【勠力同心】则单独对势力和横置有用，【玉玺】则强制成为大势力。</p>\n<p data-pid=\"EeTzrN9s\">我们能在势备锦囊的叙事风格里看到非常明显的双重叙事：当你大势力时，站在你的角度具有法理正统；而当你是小势力时，站在你的角度则是反抗压制。在势备篇实体版里，玩法解析里还专门有一句话”势备篇针对这两个概念做了很多文章，这也是大国不再独大，小势力的联合也可以<b>推翻压迫</b>“。（注意这个推翻压迫）</p>\n<p data-pid=\"DIeIIJov\">势力锦囊则淡化了反抗压迫的讲法，赋予了每个势力更加合法的政统表述，这种表述更像是在争夺话语解释权。</p>\n<p data-pid=\"8MfjSrMa\">蜀势力锦囊是【克复中原】，用非常明显的诸葛亮的北伐语词（民族叙事），对蜀国摸牌和伤害有加成。吴势力锦囊是【固国安邦】，代表江东吴国借水域优势进行固守（乡土叙事），对吴国的换牌有加成。魏势力锦囊是【号令天下】，这主要还是因为魏国有法统性（制度叙事），强化了魏国的卖血反伤属性，同样也有号令围攻之义。群势力锦囊是【文和乱武】，混杂了黄巾、宦官、割据等群体左右时局的意味（政治叙事），没有造成伤害，但会带来代价。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-9516fbd78beab1ce9c8d92539d4ccb7b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"942\" data-rawheight=\"510\" data-watermark=\"original\" data-original-src=\"v2-9516fbd78beab1ce9c8d92539d4ccb7b\" data-watermark-src=\"v2-b4b423d7999e152db5299e267fbfcdfa\" data-private-watermark-src=\"v2-0337fc6da1be9e385f20acd1d02296be\"></p>\n<h2>3、当双将作为扮演的反面</h2>\n<p data-pid=\"Jx3_Prbc\">国战如果只是用势力对战，难免还是稍显单调。于是国战还有一个本质属性，那就是双将模式。</p>\n<p data-pid=\"oSIE5e0a\">这意味着玩家不再是<b>”扮演“</b>某个三国魏晋时期的角色参与战斗，而是<b>”驱使“”操作“</b>角色参与战斗。国战里的武将不再是你的coser，而是你的随从。</p>\n<p data-pid=\"3wlN8jYO\">这个改变对玩家来说，既是显著的，也是隐藏的。说它显著，是因为从玩法上，双将兼备了三国叙事，也强化了技能和武将的脱节，随便什么（同势力）武将都可以组合，这些好玩程度都是显而易见的。而隐藏，则是因为在相当好玩的游戏体验的背后，玩家和角色之间的关系被悄然改变了。</p>\n<p data-pid=\"MS202PWr\">只要这个武将不再是你的唯一，那你们之间的关系就失去了排他性。</p>\n<p data-pid=\"ZbR_0FJi\">写到这里，有的朋友可能会问，这个问题不是问国战有哪些神组合吗？怎么写那么久还不到正题呢。其实国战只有一个神组合。</p>\n<h3>在不臣篇范围下，那就是<b>钟会+左慈</b>。爆发流+生存流的顶级天花板，只要亮出来，就是一打七的存在。</h3>\n<p><img src=\"https://pic1.zhimg.com/v2-8121269b48e0e53c6e23817e7c9a0683_720w.jpg?source=b1748391?rss\" data-caption=\"视频来源：折棒的钟会一打七视频\" data-size=\"normal\" data-rawwidth=\"1107\" data-rawheight=\"567\" data-watermark=\"original\" data-original-src=\"v2-8121269b48e0e53c6e23817e7c9a0683\" data-watermark-src=\"v2-663fdd9685d60d55d7174452dca62c8a\" data-private-watermark-src=\"v2-2b0c53b2ae2aacff2ef882fb7d002bff\"></p>\n<p data-pid=\"rJ3sV_fS\">折棒甚至出了差不多8个视频来讲国战钟会到底有多强。这个问题问的是”神组合“，他直接给定位为”逆天组合“，比神还要高出一档。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-ac0f2e9690f225aacf284c10babeecde_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"704\" data-watermark=\"original\" data-original-src=\"v2-ac0f2e9690f225aacf284c10babeecde\" data-watermark-src=\"v2-61ea99a7b0aa6f977fd9f2ea62c56397\" data-private-watermark-src=\"v2-12e140c1e848cf7d4d78f326cf7c223a\"></p>\n<p data-pid=\"OY0OzD_b\">而<b>野心家标记</b>和<b>暴露野心</b>模式，不仅直接将政治合法性宣之于口，也为国战平添了一份BOSS战即视感。要么你做前期大魔王，要么你做后期恐惧魔王。</p>\n<p data-pid=\"IW-8f66m\">野心家模式下的野心家们，在国战的基础上再次颠覆了国战的势力博弈（原本的野心家要同势力超过4个才能有），将国战游戏进入到另一个阶段，可以说是吸收了虎牢关模式吕布的优秀思路，不管是当魔王一穿七，还是貌合神离的联军们携手打败魔王的成就感，都可以说是极大地加强了游戏体验。</p>\n<p data-pid=\"me9emZaG\">钟会造成和受到伤害都可以获得标记并进行制衡，这个看起来稍显复杂的机制既是韩旭设计武将时遵守”1血=2牌“的绝响，又能通过这个机制代表三国杀的最典型对战方式，伤害与摸牌。</p>\n<p data-pid=\"LeIKVoAR\">左慈的役魂和化身，则将国战模式里的”武将与技能混合“的方式发挥到机制。同时左慈还可以将<b>武将牌当做任何牌使用（有势力限制）</b>，是为<b>卡牌转化机制</b>的极限操作，非常好的普及国战模式的核心逻辑。</p>\n<p data-pid=\"8P4SizH5\">不仅如此，左慈和钟会的野心家组合，还复现了玩家操纵复数个武将组合时的过程。如我上文所说，玩家在国战模式里和角色之间的关系已经发生了变化。如果我们把这个变化移植到左慈这个武将身上呢？</p>\n<h3>野心家卡牌上的那个大眼睛，就是非常好的隐喻。</h3>\n<p data-pid=\"3qGjQcjd\">而这种凝视而不是占有的模式，在另一种注视环境中也存在，那就是云玩家。这个问题要展开，就留待之后的回答分析了。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/dandoliya?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">乌合之子但愿君</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/21349175/answer/2420085891?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">177 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/30857736?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">三国杀中，国战为何不如身份局热门？</a><br><a href=\"http://www.zhihu.com/question/22203995?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">三国杀在卡牌游戏里属于什么水平？</a><br>\n","link":"http://www.zhihu.com/question/21349175/answer/2420085891?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"iPhone 支持口罩解锁以后，我却不想卖掉 Apple Watch 了","date":"2022-04-02 08:00:00","description":"3月15日，iOS15.4正式版推送，在iPhone12及后续机型上新增戴口罩时通过面容ID解锁的功能。不少网友直呼：是时候在某鱼蹲守低价二手了。事实上，你现在确实可以在某鱼搜到很多低价出手的Appl ...<a href=\"https://sspai.com/post/72439\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72439"},{"title":"家的风格 | 是装修时的意料之外，也是我的自成一派","date":"2022-04-02 06:30:00","description":"筹备装修的时候我买了不少书来看，其中一本《家的风格》让我印象尤为深刻。当你将客人们请进自己的屋子时，你想让他们看看你是怎样的人。通常而言，将你的一切告诉他们的不是你的长沙发；而是你奇怪的乡村挤奶凳，它 ...<a href=\"https://sspai.com/post/72431\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72431"},{"title":"手哥的「编辑小课堂」——第二期！","date":"2022-04-02 06:17:38","description":"\n<p data-pid=\"x1yWr7vX\">什么样的故事能打动盐选编辑老师？</p>\n<p data-pid=\"TPIV03ck\">什么样的故事能把读者一把子拽进来？</p>\n<p data-pid=\"uSV2oa7b\">编辑老师挂在嘴边的「创新」到底指的是什么？</p>\n<p data-pid=\"w0UJV-dv\">熟悉的手哥，熟悉的配方，咱们来康康，本期编辑课堂，都有哪些「疑难杂症」被编辑老师  pick 了呢？</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-eb33b612b6a4dc7e2ee6aad53faa0abb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"150\" data-rawheight=\"150\" class=\"content_image\" width=\"150\"></figure><hr>\n<p data-pid=\"707xaiAn\">【所有版权归知乎会员业务所有，转载请标明出处】</p>\n<h3>1. 一个故事能不能打动编辑老师究竟取决于什么呢？</h3>\n<p data-pid=\"4kozGcPf\">一般情况而言，除了文笔流畅以外，编辑最看重的可以归为以下几方面：</p>\n<ul>\n<li data-pid=\"geoHAWsw\">\n<b>开篇明义</b>。开篇尽快抛出主线，挑明基调，是重生复仇？还是白月光替身文？</li>\n<li data-pid=\"6t-c5IG2\">\n<b>立住人设</b>。是否通过细节和行为展现出主角的设定，故事看完是否对人物产生记忆点？</li>\n<li data-pid=\"ak32ETZT\">\n<b>制造悬念</b>。是否在开篇设置了与主线相关的核心悬念？悬念是否足够吸引人？</li>\n<li data-pid=\"qhHhIvmX\">\n<b>核心创意</b>。你的文章是否具备不同于其他文章的元素、视角、切入点？是否能让读者从开头就产生期待感？</li>\n</ul>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>2. 故事开头应该怎么写才能让读者有继续阅读的冲动？</h3>\n<p data-pid=\"pGbUPHi2\">男女频故事的开头略有不同。</p>\n<p data-pid=\"xdJkgiLv\">女频通常开篇要制造落差感，比如女主平平无奇却征服了强大男主；或女主被打到人生低谷，破产、被陷害、被误解等，在这种情况下与男主展开对手戏。</p>\n<p data-pid=\"8Uy4rs--\">男频文中，男主可以呈现为一个拥有和反派不对等能力的人设，比如反派有权有势，男主穷困潦倒，最后一路逆袭；或反派有权有势，男主则拥有超能力，与反派展开对峙，在开篇便制造出强烈矛盾冲突。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>3. 如何快速让读者有代入感？怎样挑起读者的情绪，让读者共情？</h3>\n<p data-pid=\"eOZOdl77\">怎么能让你的读者对你故事中人物的遭遇感同身受呢？有三个最简单的小方法：</p>\n<ul>\n<li data-pid=\"ERWZQ1cp\">第一视角写主角，用主角的视角去经历事件、观察环境，迅速带领读者入戏。</li>\n<li data-pid=\"Ligdht0o\">场景具有画面感，让读者脑海中快速勾勒出与你的描述相符的故事世界。</li>\n<li data-pid=\"d7C7P93G\">人物形象要立住，除了神态外貌需细节外，还要多多揣摩人物的行为逻辑，人物的反应和举动不能背离生活常态。</li>\n</ul>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>4. 意外事件的剧情多了显得假，少了就平淡，如何平衡？</h3>\n<p data-pid=\"xSEY0lLY\">如何平衡故事中事件的数量呢？这个问题要根据作品的篇幅而定，短篇与长篇体量不同，需要填充的情节数量也有差异。</p>\n<p data-pid=\"uA7tg5mq\">那这个问题如何解答呢？这里需要引入一个「有效事件」的概念，并建议你可以尝试以下几个步骤：</p>\n<p data-pid=\"R_wXrpzt\">第一，明确故事的主线。你的故事主要讲一件什么事？你的人物主要的任务是什么？你的人物要完成怎样的成长路径？故事主要表达的主题是什么？</p>\n<p data-pid=\"NZ00bEIV\">第二，明确故事的支线。支线就是主线这个大树干上长出的小树枝，它对故事中某一个阶段的结局产生直接影响，但不能影响主线情节的发展和结局。</p>\n<p data-pid=\"bDzfUU7s\">第三，在大纲中把你想写的事件都列出来，然后挨个区别是否是「有效事件」。判定是否是「有效事件」主要有如下几个标准：</p>\n<ul>\n<li data-pid=\"FOm08P2i\">这个事件对人物成长有什么作用？</li>\n<li data-pid=\"UaSeCTeA\">这个事件传递给读者什么信息？</li>\n<li data-pid=\"7m-DfeYM\">这个事件对下面的情节产生影响了吗？</li>\n<li data-pid=\"bCNWVnD9\">为什么读者要关心这个事件？</li>\n</ul>\n<p data-pid=\"5QlPw_r2\">第四，把通过考察的事件留下，把你回答不上来理由的事件扔掉吧！</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>5. 写到一半圆不回来故事怎么办？一般是想到开头就直接动笔了</h3>\n<p data-pid=\"u6zZxatJ\">一个最简单的办法：尽可能完善你的大纲和细纲，疏通每一个环节后再动笔。</p>\n<p data-pid=\"Fb-yP9EY\">一个最基本的原则：设置大纲时，让每一个「是什么」背后都有一个「为什么」。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>6. 怎么保持垂直度又创新选材？</h3>\n<p data-pid=\"50klpLTy\">创新是编辑最为看中的一项元素之一，创新并不一定要别人完全没有写过的题材。</p>\n<p data-pid=\"ztu0IB_R\">事实上，作者很难在相对饱和的网文市场找到一个全新题材去写。</p>\n<p data-pid=\"4C-FlZXU\">那么，如何在某一个垂直领域体现选材创新呢？</p>\n<p data-pid=\"96dAYJzF\">主要还是要找到一个不同的切入点，同样的题材以什么角度切入，挑选什么视角去写，都会带来截然不同的效果。</p>\n<p data-pid=\"8lGNK-Ms\">还是那句话：你要寻找主角、对手、核心困境、核心创意的另一种解法、不同的讲述方式。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>7. 怎样写故事能在简短篇章里写出更有画面感的情节？</h3>\n<p data-pid=\"J8RYFdtl\">首先，故事的画面感指的是什么？</p>\n<p data-pid=\"AZXHtNxa\">说白了，就是这件事这个人这个场景好像就在你面前发生的一样，它的关键就是——可视化。</p>\n<p data-pid=\"lwwmr0-g\">那这么做才能实现可视化呢？</p>\n<p data-pid=\"j-2W0vJG\">类比一下把几十几百万字的小说改编成 20 集的电视剧或一部 100 分钟的电影。</p>\n<p data-pid=\"KCCC20bY\">其实，可视化，关键在于一个删繁就简、保留主干的过程。</p>\n<p data-pid=\"zhAPt7A6\">你首先要做的，是把自己习惯的文字讲述思维转换为视觉为主的画面思维。</p>\n<p data-pid=\"12NQ1kpD\">然后通读全文，舍弃掉不必要的人物心理描写、人物旁白，多用简洁短促的描述，多以人物行为和活动来牵引整个故事创作。</p>\n<p data-pid=\"n1gSBv8D\">总而言之，让你的人物动起来，让他们自己把故事讲明白。</p>\n<hr>\n<p data-pid=\"wmhBv9Uq\">【手动下课铃：铃铃铃～～～ 】</p>\n<p data-pid=\"R3aB6Fox\">本期编辑课堂到这里就告一段落啦，如果以上问题没有解答你的疑问，莫慌！</p>\n<p data-pid=\"P2okCNOH\">我们每月一期，专注答疑 20 年，品质有保障！</p>\n<p data-pid=\"u4eZ5IpQ\">添加<a href=\"https://www.zhihu.com/xen/market/ecom-page/1385922427680063488\" class=\"internal\">盐选作者小助手微信</a>，更有多多故事创作资源及官方活动动态等你来捞！</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"5G9lMCkX\"><b>【所有版权归知乎会员业务所有】</b></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/yan-xuan-zuo-zhe-xiao-guan-jia?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">盐选作者小助手</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/492039461?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"你自驾过国内哪些有意思的线路？","date":"2022-04-02 05:28:23","description":"\n<p data-pid=\"PYn7iPEl\">自驾过新疆的这10条公路，等于走了半个世界</p>\n<p><br></p>\n<p data-pid=\"6v-yvmxA\">新疆入疆线路现在有5条进疆线路，有G7高速经内蒙古包进疆，G30G312高速国道经甘肃进疆，G216国道经西藏阿里进疆。G315国道经青海进疆。G219国道经西藏进疆。</p>\n<p data-pid=\"7FMUXEtJ\">这9条公路集成大美新疆，北疆5条，以101省道，独库公路（G217国道中段），伊昭公路（省道237），新G219新疆边境公路，G30G312高速国道赛里木湖果子沟段简称赛果高速。南疆4条，东西沙漠公路（东轮台到民丰或且末，西线阿拉尔到和田）喀喇昆仑之路（G314国道中段喀什到红旗拉甫口岸段）塔莎古道（塔什库尔干县到莎车县段）盘龙古道（塔什库尔干县到瓦恰乡）</p>\n<p data-pid=\"h1JE3bkF\"><b>一、新疆101省道</b></p>\n<p data-pid=\"Ra4ZqjPl\"><b>1、101省道简介</b></p>\n<p data-pid=\"HI3A4UDc\">新疆101省道也称S101由乌鲁木齐南G216国道西山牧场岔口至独库公路G217段巴音沟岔路口省道也称国防公路，是上个世纪60年代为备战备荒防止苏修袭击而修建的公路。S101就是平行与乌奎高速（G30G312高速国道乌鲁木齐到奎屯段），修建于天山中段依连哈比尔尕山浅山地段的公路。全长约310公里，全程SUV和越野车可通行，路况有部分沙石路面和冬季翻浆路面，风景独特，自然资源丰富，集雅丹，丘陵草原，戈壁荒漠，高山草原，流水峡谷等地质地貌与一体的较好自驾线路。</p>\n<p data-pid=\"PNXtLUV8\"><b>2、沿途旅游接待</b></p>\n<p data-pid=\"u45NIO9l\">全程只有个别地方有简易的食宿接待能力，没有酒店，没有标准间，没有合格的卫生间，有两处加油站，分别可从榆泉南路、硫磺沟镇返回乌鲁木齐，X147返回呼图壁县，X146，X160返回G30G312国道高速，S223返回石河子，X814返回沙湾县，X805返回安集海，所以从乌鲁木齐、昌吉、呼图壁、大丰、乐土驿、石河子、沙湾、安集海、独山子，都有路可以通到南山，与S101连接，也就是可以有多个出口随时离开101公路。也可以选择其中的某一段进出游玩。151团场可以算是穿越的中间补给站吧。冬季部分路段下雪不能走，其他时间都可以，全程接待不完善，可以带露营装备，</p>\n<p data-pid=\"kxT6b69l\"><b>3、途经达坂或最高点</b></p>\n<p data-pid=\"P9ZoncWl\">途经（天山北坡，无达坂和高海拔地区）硫磺沟镇，到乌苏八音沟牧场结束。<b>4、途中主要景点：</b></p>\n<p data-pid=\"ZHutxpry\">主要景点：1、亚洲地理位置中心2、硫磺沟地貌3、三屯河水库4、石梯子（山体很独特，站在高处拍出不一样风景）5、石门水库6、呼图壁林场（天下第一漂）7、康家石门子岩画8、肯斯瓦特水库9、观音沟10、紫泥泉11、玛河大峡谷12、沙湾双龙沟，13沙湾温泉14、安集海大峡谷（红山大峡谷）15、鹿角湾高山牧场16、乌拉斯台17、独山子大峡谷。</p>\n<p data-pid=\"js2O2Bw0\"><b>5、行走S101省道注意事项</b></p>\n<p data-pid=\"MI7MKKt-\">1、注意行车，有很多路段沙子路面，坑很多，速度不应太快。</p>\n<p data-pid=\"mQwiKH8x\">2、这条线转弯很多，有些都是路面盲区。</p>\n<p data-pid=\"xI9tyNiY\">3、沿途都是摄影或自驾常停留地点拍照，没有太多A级景点，基本自然风景为主。</p>\n<p data-pid=\"9LA0-MSP\">4、沿途补给不多，可以随时到G30G312高速国道，除非露营，不必准备太多物品</p>\n<p><img src=\"https://pica.zhimg.com/v2-7f3f48a61a8712f4b85f0296963dd6a1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"555\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"FntHm1Ai\"><b>二、独库公路（G217国道中段）</b></p>\n<p data-pid=\"u8vs-OX1\"><b>1、独库公路简介</b></p>\n<p data-pid=\"MmGr2ucb\">国道217线：阿勒泰市-布尔津县-和什托洛盖镇-克拉玛依市乌尔禾区--克拉玛依市白碱滩区-克拉玛依市克拉玛依区-克拉玛依市独山子区—乌苏市--乔尔玛(草原)--巴音布鲁克镇--库车县—沙雅县-阿拉尔市—和田。</p>\n<p data-pid=\"gXO30c-Q\">独库公路全程约561公里(独山子到库车段每年6-9月可通行)，被誉为中国最美最险的公路。它风险与美丽并存，从独山子出发至终点库车，一路体验四季的变幻。并不能粗暴的说他是新疆最美公路，应该说能够用最少的时间和精力去感受天山南北风景和植被的巨大差异。从戈壁荒漠到高山峡谷，从湿地草原到空中草原，从原始森林到雪岭云杉。与G318相比，G217风景差异化更大，所处旅游资源更多，开放时间更短，临时关闭最多。地质灾害天气更多，一天四季温差更大，独山子短袖热得不行，哈希勒根隧道羽绒服都冷，相差100多公里，温差20度以上。</p>\n<p data-pid=\"_nCKV86T\"><b>2、途经四个达坂（新疆说法，两山之间最低点）</b></p>\n<p data-pid=\"E-kOXG_k\">1、哈希勒根达坂隧道 海拔约3500米（独山子-乔尔玛）限速40急弯30</p>\n<p data-pid=\"84MLBye5\">2、玉希莫勒盖达坂隧道海拔约3400米（乔尔玛-那拉提镇）限速40急弯30</p>\n<p data-pid=\"mXezeAQI\">3、图兰沙拉达坂 海拔约2700米（那拉提镇-巴音布鲁克镇）限速40急弯30</p>\n<p data-pid=\"52qSQD5E\">4、铁力买提达坂隧道海拔约3300米（巴音布鲁克镇—库车）限速40急弯30</p>\n<p><img src=\"https://pic1.zhimg.com/v2-fc934cdbf878f8a20aaef33acc7fc415_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"840\" data-rawheight=\"881\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"LNMHbRM4\"><b>3、独库公路景点（独山子出发到库车结束）</b></p>\n<p data-pid=\"Qg_dWf24\"><b>1、独山子大峡谷</b>（景区门票）周边有旅游接待设施，景区有玻璃栈道2019年运行，溜索2019年运行，整时还有达瓦孜和民俗表演。</p>\n<p data-pid=\"1ypYIoBT\"><b>2、八音沟牧场</b>，算是中间很原始高山牧场（非景区，收费）。</p>\n<p data-pid=\"Q529LFQA\"><b>3、毛柳沟道班牧场</b></p>\n<p data-pid=\"5t1OlI4D\"><b>4、乔尔玛革命烈士陵园</b>是为了纪念修建天山独库公路而牺牲并安葬在这里的168名革命烈士而建的国家革命烈士陵园。1974年8月开始，工程兵第四工区整体从湖北移防新疆，投入兵力13000多人，十年间，有168名战士牺牲。下图是现陵园的守住者兼讲解员陈俊贵，参加了独库公路的全部建造，如今他将自己的一生与烈士们共同守护着独库公路。周边有简单接待设施，蒙古包住宿。</p>\n<p data-pid=\"ki5NU-c5\"><b>5、唐布拉森林公园，百里画廊（</b>乔尔玛中间有个Y字路口，左转沿217国道往那拉提方向，右转尼勒克方向，即唐布拉森林公园，国家4A景区，没有门票） 该公园位于喀什河上游南岸阿吾拉勒山北坡唐布拉沟内。唐布拉草原是伊犁地区著名的草原之一。当沿着喀什河谷溯源而上，行至唐布拉沟口时，喀什河谷地形开阔，两岸河流阶地十分发育。河流阶地丰茂的草原上百花盛开。然而只有进入唐布拉沟内才开始见茂密的云杉林。滔滔的喀什河水奔腾不息，喀什河南岸芳草茵茵，唐布拉沟内溪水淙淙，云杉林苍翠挺拔。唐布拉沟内林区山清 水秀、清爽宜人，夏季如画如屏，层峦叠翠。乔尔玛出发沿途50公里内有四家酒店或山庄，都在路边，可以看到，沿途蒙古包也有不少。</p>\n<p data-pid=\"zuK0aN6K\"><b>6、那拉提草原</b>是世界四大高山河谷草原之一。这里集蓝天白云、冰川雪峰、森林草原、峡谷河流于一体，是世界上哈萨克人口聚居最集中的草原，曾被上海大世界吉尼斯总部评定为“哈萨克人口最多的草原”、“哈萨克毡房最多的草原”，是集中反映和展现哈萨克族传统生活习惯的“露天博物馆”。4月-6月是那拉提草原最好的赏花季，从4月初顶冰绽放的野百合到6月下旬的阿山金莲、鼠尾草，各类山花争奇斗艳，这个时段的空中草原又被称为是空中花园；7月-9月的草原一片碧绿，羊群如云朵般移动，气候十分宜人，是避暑纳凉的好去处；10月-11月的那拉提草原，盘龙谷内五彩斑斓，天高云淡，是摄影的绝佳期；12月-3月的那拉提草原银装素裹，红柳妖娆，十分壮观。门票95元，区间车有三种，河谷平原40元，空中草原40元，盘龙古道70元。 那拉提镇旅游接待小镇，距离新源县约70公里，设施完善。</p>\n<p data-pid=\"28rGif5H\"><b>7、巩乃斯森林公园（班禅沟）</b>与那拉提有些像，比那拉提更原始，河谷平原与空中草原在一起，班禅选择这地方，背山面水，风景无限好。</p>\n<p data-pid=\"kbdogrF-\"><b>8、巴音布鲁克天鹅湖与九曲十八湾</b>，蒙古语意为丰泉-“丰富的泉水”，草原地势平坦，水草丰盛，是典型的禾草草甸草原。是新疆最重要的畜牧业基地之一。不但“九曲十八弯”的开都河，更有优雅迷人的天鹅湖。游玩巴音布鲁克草原的最佳时间为每年的6-9月，其他时间则比较寒冷。夏季九曲十八弯最佳观景时间北京时间21:00-22:00，摄影爱好的胜地；巴音布鲁克镇属于军事管控地带，非中国国际的游客禁止入住，如有外籍游客，务必提前计划行程，以免给自己带来不必要的麻烦。</p>\n<p data-pid=\"XgtYPqrU\"><b>9、奎克乌苏石林</b>又称天山石林,因位于天山山脉西段、那拉提山北麓的奎克乌苏达坂之下而得名,从巴音布鲁克草原向西南行走73km左右,登上科克乌苏达坂顶端抵达。天山石林,极具科学内涵和美学价值,“世界罕见,中国独有”天山石林地质公园,天山深处的一颗璀璨明珠,是旅游观光、科研探险的圣地。</p>\n<p data-pid=\"8063nVKt\"><b>10、资深越野（四驱）自驾线路：“电力天山”巩留县——库车县段</b></p>\n<p data-pid=\"t1qO0TMq\">“电力天路”通过央视播出的《走遍中国》进入众人眼帘，又是一项名副其实的\"超级工程\"。贯穿天山山脉，北起伊犁巩留县库尔德宁辣子沟，沿途一路翻雪山、过草原、穿森林，最终抵达南天山库车县。此自驾路线同“电力天路”一路结伴而行，是国家电网的电力维修道路，被当地资深玩家称作“电力天路”，也是天山山脉的究极自驾路线之一。全程石子路及非铺装路面，周边无食宿，可借宿当地牧民毡房。（需提前准有做好功课）</p>\n<p data-pid=\"FSYotql-\"><b>11、大小龙池，</b>独库公路上最后一幅青山绿水的画面。两个被群山和森林环绕的高山湖泊，静静坐落在天山深处。</p>\n<p data-pid=\"OFKfok7A\"><b>12、天山神秘大峡谷，</b>从大小龙池一路下坡后，开始显现出南疆的端倪。森林草甸不复存在，取而代之的是火红的雅丹地貌。维语中，这里被称作“克孜利亚”，意为红色的山崖。像火焰一般热烈，这里便是库车神秘大峡谷。独特的地貌，让人终于缓过神来，意识到自己已经来到了南疆。<b>阿艾石窟，</b>在大峡谷里，阿艾石窟是典型的汉风洞窟，其内容则宣扬的是汉地大乘佛教的思想。其佛教思想即有西方阿弥陀信仰，又有东方净土药师佛、卢舍那佛信仰及文殊、观音菩萨信仰，呈多元化的信仰趋势。</p>\n<p data-pid=\"m1nO_d4m\">13、库车：库车王府，库车大寺，库车博物馆，民俗遗址库车苏巴什古城，克孜尔尕哈烽燧等，看时间吧，有时间都可以转转。</p>\n<p data-pid=\"te1EDfZE\">独库公路段到此结束，是不是有想原路返回的冲动呢。库车出发，可以前往阿克苏、喀什。或库车，沙雅，阿拉尔市走西线沙漠公路到和田。或库车轮台、库尔勒，吐鲁番回乌鲁木齐或哈密出疆。或走库车，库尔勒，尉犁，若羌出疆前往青海。</p>\n<p data-pid=\"6jZC7UXe\"><b>4、行走新疆独库公路有几点需要特别注意：</b></p>\n<p data-pid=\"EH_fPwWM\">1.独库公路只能七座以下非营运车辆，房车6米以内通行，路上有交警检查，所有七座以上车辆禁止通行。货运车辆禁止通行。</p>\n<p data-pid=\"Uk8OQ26J\">2.独库公路每年6月通车到9月底封路，请安排好您的时间，高峰时段独库2019年暑期已经堵车了！高峰期为7-8月每周六周日，堵！堵！堵！</p>\n<p data-pid=\"8LlbnELE\"><b>3.独库公路有军事管辖地，禁止外国人及港澳台人员通过。</b></p>\n<p data-pid=\"GOSEK368\">4.独库公路需要翻越天山冰大阪，路况复杂，最好有驾驶经验丰富的司机驾驶。</p>\n<p data-pid=\"Njstjn34\">5.车辆选择其实不一定非要是越野车，车辆性能正常即可前往。</p>\n<p data-pid=\"o6cZW-Ov\">6.独库公路海拔最高点哈希勒根达坂3600米，冬季积雪厚度一度达到10多米厚，夏季最高温度只有13度左右，一般会有轻微的高原反应。</p>\n<p data-pid=\"nox8dl35\">7、夜间限行：21:00-凌晨9:00山区禁止入内，安排好时间节点。（每年时间都不一样）</p>\n<p data-pid=\"Bz9pvcMg\">8、加油补给：盘山路途中没有任何修车加油站，进山前加油站加满，否则会尴尬到爆！（乔尔玛加油站人多车多预计等待1小时以上，可能还加不上，那拉提镇中间主要加油点，巴音布鲁克镇中间主要加油点）</p>\n<p data-pid=\"gtdOznRx\">9、旅行补给：盘山路途中没有任何商店、医院、修车铺等，根据个人情况提前做好准备。（乔尔玛，巴音布鲁克镇简单设施，那拉提距县城新源约70公里，有完善设施）</p>\n<p data-pid=\"LymJiRS-\">10、路况信息：独库公路全程均为沥青路面（部分经常塌方地段为沙石路面），全程高海拔盘山路，山体滑坡及落石属常态，遇到恶劣天气会交通管制（如雨天、雪天、雾天、山体滑坡、落石等）。全程流动测速40，弯道30，遇见测速摄像头请勿超过40通过。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-8473888e430f49e05187a623b5129c11_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"1745\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"xf-Gs4M6\"><b>三、伊昭公路（省道）即弓月道，伊昭公路简介省道编号S237。</b></p>\n<p data-pid=\"pMCGnvfx\"><b>1、伊昭公路简介</b></p>\n<p data-pid=\"5duuUF2B\">北起伊宁市、途径察布查尔县到昭苏县夏特牧场，全程190公里左右，到县城约120公里。伊昭公路是古丝绸之路\"弓月道\"其中的一段，如果到伊宁市有到昭苏打算可以走这条公路，与独库公路差不多，路程约120公里，山路约70多公里，算是去昭苏县捷径吧。</p>\n<p data-pid=\"pjVh__zZ\"><b>2、途经1个达坂（新疆说法，两山之间最低点）</b></p>\n<p data-pid=\"7bmKtTfY\">1、乌孙山上的安格列特冰大坂海拔约3000米限速40急弯30。</p>\n<p data-pid=\"-bbXQi3f\">2、白石峰是伊昭公路最高的景点，海拔3500米左右，是乌孙山山脊上的高峰，因山体都是石灰岩构成，远望成灰白色，得名白石峰。</p>\n<p data-pid=\"SQ1YQGYl\"><b>3、伊昭公路景点（伊宁市出发到昭苏结束）</b></p>\n<p data-pid=\"eTjawevW\">察布查尔县：西迁博物馆，昭苏：夏特景区（夏特古道），7月油菜花，天马文化园区，木札特口岸，格登山石碑，松拜边防哨所，草原石人。</p>\n<p data-pid=\"Ejyj-XWw\"><b>4、行走新疆伊昭公路有几点需要特别注意：</b></p>\n<p data-pid=\"tZYNEWKz\">1、伊昭公路只能七座以下非营运车辆，房车6米以内通行，路上有交警检查，所有七座以上车辆禁止通行。货运车辆禁止通行。</p>\n<p data-pid=\"y4tfoOS7\">2、伊昭公路每年6月通车到9月底封路，请安排好您的时间， 这个没有独库火热，偶有堵车。</p>\n<p data-pid=\"8nMG6Ypp\">3、夜间限行：21:00-凌晨7:00山区禁止入内，安排好时间节点。（每年时间都不一样）</p>\n<p data-pid=\"Lic8eteq\">4、加油补给：伊宁市到昭苏县城约120公里，全程不需要补给。</p>\n<p data-pid=\"BoE4Lsog\">5、旅行补给：盘山路途中没有任何商店、医院、修车铺等，根据个人情况提前做好准备。</p>\n<p data-pid=\"ff4TLGe-\">6、路况信息：伊昭公路全程均为沥青路面（部分经常塌方地段为沙石路面），全程高海拔盘山路，山体滑坡及落石属常态，遇到恶劣天气会交通管制（如雨天、雪天、雾天、山体滑坡、落石等）。全程流动测速40，弯道30，遇见测速摄像头请勿超过40通过。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-27fda523808d71215f402891c95f967e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2995\" data-rawheight=\"1733\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-f82d1edae6fa14fb84af6474aeb635f9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4256\" data-rawheight=\"2832\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"VnzdngWz\"><b>四、赛里木湖-果子沟高速简称赛果高速</b></p>\n<p data-pid=\"_k8AwJ-E\"><b>1、赛果高速简介</b></p>\n<p data-pid=\"Q-3KtMlz\">赛果高速公路，是新疆第一条山区高速公路，也是全疆第一条贯穿天山并实现桥梁隧道相连的高速公路，全长56.2公里。 作为连云港至霍尔果斯高速公路和新疆大通道建设的重要组成部分，是交通运输部和自治区“十一五”重点基础设施建设工程，也是重大民生工程。设特大桥5座、隧道5座。</p>\n<p data-pid=\"tAhCDr6A\">果子沟特大桥是赛果高速公路项目的控制性和标志性工程,全长700米,特大桥跨径330米,主塔高度分别为209米和215.5米,是目前国内首座双塔双索钢桁梁公路斜拉桥,也是新疆最高的公路大桥。大桥主桥全部采用钢桁梁结构,使用国内特殊专用桥梁钢材17000吨,并采用高强螺栓连接,设计精度控制在两毫米以内。果子沟大桥作为全国首座公路钢桁梁斜拉桥、也是新疆第一高桥,是我国连霍高速公路的赛里木湖至果子沟高速公路控制性和标志性工程，它集新技术、新结构、新工艺、新设备于一身，是新疆公路建设史上一次重大突破。</p>\n<p><img src=\"https://pica.zhimg.com/v2-471d1bae595a0cd89d65d545c765b2de_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"860\" data-rawheight=\"573\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-373d7150fe96ea989b05a8e58b110ee8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"750\" data-rawheight=\"500\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-d95ac1d35f6682ca3df5cd4a81fb2d6f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3264\" data-rawheight=\"1775\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"zYX1V9Kj\"><b>2、赛果高速景点</b></p>\n<p data-pid=\"APwn-16E\"><b>1、果子沟</b>是赛果高速公路另一道著名风景，在元代被称之为“铁木尔忏察”(意即“铁关”)。又名塔勒奇，维吾尔语是“窄”的意思。从当地人对这条峡谷的命名，便可以看出它地势非常复杂。<b>它是横卧天山腹地的钢铁“天路”。</b> “中国色彩最丰富的高速公路” <b>果子沟大桥：</b>行走天堑之上。</p>\n<p data-pid=\"PfdpkyeR\"><b>2、赛里木湖景区，</b>国家级风景名胜区，是大西洋暖湿气流最后眷顾的地方，有“大西洋最后一滴眼泪”的说法。</p>\n<p data-pid=\"mILZEN5V\">赛里木湖古称“净海”，湖面海拔2071米，东西长30公里，南北宽25公里，面积453平方公里，蓄水量达210亿立方米，湖水清澈透底，透明度达12米。</p>\n<p data-pid=\"zm8rOvnY\">赛里木湖原本没有鱼，从俄罗斯引进高白鲑、凹目白鲑等冷水鱼养殖，经过十年的发展，已成为新疆重要的冷水鱼生产基地。</p>\n<p data-pid=\"DaLnXw_i\">赛里木湖景区共划分为环湖风光游览区域、草原游牧风情区域、生态景观保育区、天鹅及其他珍稀鸟类栖息地保护区、旅游综合服务区、原生态环境保持区等6个功能区。确定了赛里木湖中央核心部位水体、西海天鹅湿地草甸水体栖息地、查干郭勒冰雪生态探险景区3块特级保护区。2018年4月13日，入围“神奇西北100景”。</p>\n<p data-pid=\"FsK1Ldst\">2021年4月15日，文化和旅游部发布公示，拟确定新疆维吾尔自治区博尔塔拉蒙古自治州赛里木湖景区为国家5A级旅游景区。</p>\n<p data-pid=\"DnXpUoYQ\"><b>3、特殊高速转场人文风景，</b>除了自然风光，牛羊借道公路转场，也是赛果高速公路上的一条奇特的人文风景。每年入冬前的11月份，牧民们便会赶着牛羊群，从霍城县的夏牧场赶至赛里木湖的冬牧场，待到来年初春3月，又从冬牧场赶着牛羊从赛里木湖经果子沟回到霍城县。于是，每年固定的几次转场迁徙，造就了赛果高速上一个壮观的场面：在坦阔的高速公路上，成千上万头牲畜，在牧民马队驼队的指挥下，他们在百里山路上形成一个个连绵不断的迁徙队伍。这时候，高速公路便成了真正的“马路”。在浩浩荡荡的牛羊大军占领下，无论你开的是“陆虎”还是“宝马”，统统都得给这些欢快的牲畜们让道。</p>\n<p data-pid=\"mO47tqN5\"><b>3、行走新疆赛果高速公路有几点需要特别注意：</b></p>\n<p data-pid=\"TjLROrNV\">1、G30G312高速国道，正常一年四季都可通行，冬季风雪大可能会遇到临时性封路。</p>\n<p data-pid=\"aKQO7cO_\">2、老国道G312在隧道前转到赛里木湖南门处，翻过天山大门，有观景台可以看到果子沟主桥的全貌。</p>\n<p data-pid=\"J8RlkSw4\">3、赛里木湖无法露营，景区内有房车营地，自驾车无法环湖，只能坐景区区间车或租景区电动车，15座以上的旅游车可通行。老国道上面有自驾车营地和蒙古包。</p>\n<p data-pid=\"KeDHRSUY\">4、在赛里木湖东门有正常的餐饮和旅游接待，景区内基本自然风光，有完善的旅游公共设施，赛里木湖南门到老国道上有自驾车营地，栈道到山顶，有众多蒙古包可住宿餐饮。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-80e8cb171cfb95930f2081552358373a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1500\" data-rawheight=\"995\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-49e4a2cc528d2bcdcae6eef7f23f0f25_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"683\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-e3ff8ba8eb643ebdf4a6a73d0d89ab66_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1200\" data-rawheight=\"800\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"XZlo2K3j\"><b>五、国道219线</b></p>\n<p data-pid=\"j0HYQ24k\"><b>1、G219国道简介</b></p>\n<p data-pid=\"EC9T6iXa\">老219国道又称新藏公路（或G219、国道219线、叶孜线），北起新疆喀什地区叶城县的零公里石碑，南至西藏日喀则市拉孜县查务乡2140公里石碑，全程2140千米，经过新疆、西藏两个自治区，连接我国西北、西南地区。是重要的进疆、进藏路线，同时也是世界上海拔最高、条件最艰险的公路。新219国道编号：G219，又称喀东线，于2018年3月5日，交通运输部将原G219北端延伸至新疆北部喀纳斯，南端改线延伸至广西（中越边境的）东兴市 ，经过新疆，西藏，云南，广西4个省市区。</p>\n<p data-pid=\"DYa5VISq\"><b>新G219路线包含四省（新疆、西藏、云南、广西）</b></p>\n<p data-pid=\"V8xJL0JE\"><b>新疆：</b>喀纳斯、哈巴河、吉木乃、和布克赛尔、裕民、博乐、温泉、昭苏、温宿、乌什、阿合奇、伽师、岳普湖、英吉沙、莎车、泽普、叶城(新增)。</p>\n<p data-pid=\"G5tpg0M8\"><b>西藏：</b>日土、噶尔、仲巴、萨嘎、吉隆、定日、定结、岗巴、洛扎、措美、隆子、米林、墨脱、察隅。进入云南境内。</p>\n<p data-pid=\"zOhAFx3Y\"><b>云南：</b>自丙中洛始，贡山、福贡、泸水、<b>腾冲</b>、龙陵、永德、镇康、沧源、西盟、孟连、澜沧、勐海、景洪、江城、绿春、金平、屏边、马关、西畴。进入广西境内。</p>\n<p data-pid=\"iZjlpRHm\"><b>广西：</b>凭祥、东兴。</p>\n<p data-pid=\"pj4NveCf\">本攻略只介绍新G219国道新疆段（叶城到日喀则段已含含在内），从布尔津喀纳斯开始，到喀什经叶城县到日土结束。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-ad7c7b95e198a27079d1ee9dd182b813_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"831\" data-rawheight=\"709\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"30sh_1l7\"><b>2、经过达坂或最高点</b></p>\n<p data-pid=\"KYBmgfDC\">1、北起喀纳斯到叶城段基本没有高海拔地区，昭苏到温宿县目前还在借道G218线，G217线到温宿县。</p>\n<p data-pid=\"s1Mjo6kP\">2、库地达坂（海拔3250)，又名阿卡孜达坂，是新藏线第一个冰雪达坂，因地势险要而得名，维吾尔语意为\"连猴子都爬不上去的雪山\"。</p>\n<p data-pid=\"8xXjdo9u\">3、全线几乎所有路段均为高寒缺氧的无人区，沿途横卧着逾千公里的荒漠戈壁、永冻土层和常年积雪的崇山峻岭。从大红柳滩到松西乡路段244公里是彻底的无人区几乎见不到人烟。冬季气温达零下40℃，氧气含量只有内陆地区的44%。</p>\n<p data-pid=\"H9T2MCvX\">4、界山达坂（大坂系维语“山口”之意），海拔高达5200多米。</p>\n<p><img src=\"https://pica.zhimg.com/v2-6a41150b2a758ed423ea8b77ffc696ba_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"426\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"enrpWuj_\"><b>3、景区景点：</b></p>\n<p data-pid=\"TtvtP5DM\"><b>一、起点 喀纳斯</b></p>\n<p data-pid=\"34bhp18d\">1、喀纳斯景区（5A，新疆国家旅游度假区，新疆全国文明风景旅游区，哈纳斯自然保护区，国家地质公园）</p>\n<p data-pid=\"zeX-0CB9\">2、<b>新疆民俗文化景点禾木村、喀纳斯村，</b></p>\n<p data-pid=\"VDZbuRDa\"><b>二、白哈巴村</b></p>\n<p data-pid=\"Pd54Vxpb\">1、新疆国家森林康养基地哈巴河县白哈巴村，白哈巴村国家森林公园，新疆边防界碑5号界碑，哈巴河县白哈巴村，新疆边境哨所哈巴河县白哈巴村西北第一哨，新疆著名大草原哈巴河县那仁牧场。</p>\n<p data-pid=\"JDnWJVen\"><b>三、哈巴河县</b></p>\n<p data-pid=\"s77qqVoH\">1、5A哈巴河县185团白沙湖景区（新疆国家游学基地，新疆民俗文化景点哈巴河县185团边防连，新疆著名湖泊185白沙湖，新疆边境哨所哈巴河县185团军武夫妻哨所，新疆对外开放口岸185团 阿黑吐别克口岸）</p>\n<p data-pid=\"chvA77si\">2、4A哈巴河县白桦林，哈巴河白桦国家森林公园</p>\n<p data-pid=\"ELbS49Mz\"><b>四、哈巴河县接布尔津县接G217线，接布尔津、北屯转G216线</b></p>\n<p data-pid=\"e2DYcpiI\"><b>五、吉木乃县</b></p>\n<p data-pid=\"vuARlt5H\">1、神石城景区（4A，国家地质公园）（通天洞考古遗址）</p>\n<p data-pid=\"TCP9CL5a\">2、新疆对外开放口岸，3A吉木乃口岸（67号界碑）</p>\n<p data-pid=\"g4n4hzKd\">3、新疆吉木乃高山冰缘区国家湿地公园</p>\n<p data-pid=\"2wgfEhRk\"><b>六、和布克赛尔蒙古自治县（和布克赛尔镇）和丰县</b></p>\n<p data-pid=\"UZHXyuz_\">1、3A和丰东归文化园景区</p>\n<p data-pid=\"rPKbjpvR\">2、3A江格尔文化园景区</p>\n<p data-pid=\"6picxpwY\">3、骆驼石旧石器遗址（3A，骆驼石高台人类活动遗迹景区，新疆国保著名古城遗址，）</p>\n<p data-pid=\"2KjH13c2\">4、道尔本厄鲁特森木古城遗址（新疆国保著名古城遗址）</p>\n<p data-pid=\"Hf2vJAkR\">5、和丰王爷府旧址</p>\n<p data-pid=\"vZrY9jp_\">6、江格尔热气泉（自然温泉）</p>\n<p data-pid=\"fKMgsTkh\">7、新疆和布克赛尔国家湿地公园（北疆鸟类繁殖观鸟地）</p>\n<p data-pid=\"y8mzWg-e\"><b>七、铁厂沟镇 接S201省道到克拉玛依区</b></p>\n<p data-pid=\"wFB6oahq\"><b>八、铁厂沟镇 接S201省道到额敏县</b></p>\n<p data-pid=\"y_Dt8WIW\"><b>九、托里县</b></p>\n<p data-pid=\"5UGJR8EN\"><b>十、裕民县</b></p>\n<p data-pid=\"RPDTFRRi\">1、裕民巴尔鲁克山景区（4A，国家森林、国家自然保护区、新疆全国重点烈士纪念建筑保护单位裕民县孙龙珍军垦烈士陵园，新疆著名大草原裕民县吐尔加辽草原，新疆边境哨所裕民小白杨哨所）</p>\n<p data-pid=\"KpLKNZ6p\">2、新疆裸露岩画岩刻遗址裕民巴尔达库岩画群</p>\n<p><img src=\"https://pic2.zhimg.com/v2-ab855ff5511e47d18e4ea72b3f538045_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"426\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"WITUDpMt\"><b>十一、阿拉山口市</b></p>\n<p data-pid=\"tHqiWDxd\">1、4A阿拉山口口岸 风景区</p>\n<p data-pid=\"KurNGLTZ\">2、阿拉山口口岸</p>\n<p data-pid=\"QjIqQgvJ\">3、老风口</p>\n<p data-pid=\"sFuShwoD\"><b>十二、博乐市</b></p>\n<p data-pid=\"RYeLpODB\">1、博乐哈日图热格国家森林公园</p>\n<p data-pid=\"Ah_yHV7a\">2、新疆地质奇观博乐怪石峪</p>\n<p data-pid=\"KaLdGH0B\">3、博尔塔拉蒙古自治州博物馆</p>\n<p data-pid=\"ObYxU4qv\"><b>十三、温泉县</b></p>\n<p data-pid=\"q014Kmh1\">1、赛里木湖（4A，新疆国家级风景名胜区，新疆著名湖泊，新疆国保古墓遗址）</p>\n<p data-pid=\"NnbaGjOb\">2、温泉县博格达（圣泉）景区（4A，新疆国家旅游度假区，新疆自然温泉温）</p>\n<p data-pid=\"PRzJ5iXS\">3、新疆北鲵自然保护区</p>\n<p data-pid=\"tLV4dSbO\">4、温泉县夏尔希里自然保护区（夏尔西里草原）</p>\n<p data-pid=\"JADBtXY_\"><b>十四、昭苏县</b></p>\n<p data-pid=\"ZOp3k7ou\">1、夏特古道景区（4A、新疆著名冰川，国家森林公园，木扎尔特冰川）</p>\n<p data-pid=\"s0r8o4-t\">2、昭苏圣佑庙（4A、新疆国保古寺古庙遗址）</p>\n<p data-pid=\"e5fqwCgE\">3、4A昭苏天马文化园景区</p>\n<p data-pid=\"j2kZm3UJ\">4、4A昭苏县湿地公园（城市休闲）</p>\n<p data-pid=\"PP3aTM56\">5、3A昭苏县灯塔知青馆</p>\n<p data-pid=\"xMMBJkYb\">6、小洪纳海草原石人（3A，新疆草原石人遗址）</p>\n<p data-pid=\"0DT4a07f\">7、新疆昭苏夏塔古道</p>\n<p data-pid=\"rOr0ZL_K\">8、昭苏草原（新疆著名大草原）</p>\n<p data-pid=\"AUSUua_v\">10、木札特口岸（新疆对外开放口岸）</p>\n<p data-pid=\"-DbRF5B1\">11、准噶尔铭格登山之碑（新疆国保古建筑及历史纪念建筑物）</p>\n<p data-pid=\"rh0h4E_0\">12、夏塔古城遗址（新疆国保著名古城遗址）</p>\n<p data-pid=\"WVNWPA6J\">13、昭苏县天山阿合牙孜国家湿地公园</p>\n<p data-pid=\"wpfODh5Z\"><b>十五、温宿县</b></p>\n<p data-pid=\"wrpmBkqb\">1、托木尔峰自然保护区（世界自然遗产）</p>\n<p data-pid=\"BrHNg8do\">2、天山托木尔大峡谷景区（4A，新疆国家级风景名胜区，新疆国家自然保护区, 新疆著名冰川,温宿县托木尔冰川）</p>\n<p data-pid=\"08QBAY5_\">3、4A温宿县天山神木园</p>\n<p data-pid=\"QFh0Qcbq\">4、温宿大峡谷(新疆著名大峡谷，新疆著名雅丹地貌,国家地质公园)</p>\n<p data-pid=\"cKZgmLwX\"><b>十六、乌什县</b></p>\n<p data-pid=\"SmpCUl1K\">1、4A乌什县沙棘林湿地景区</p>\n<p data-pid=\"NFHFSRDB\">2、4A乌什燕泉山景区</p>\n<p data-pid=\"gWV78I5Q\">3、新疆乌什托什干河国家湿地公园</p>\n<p data-pid=\"KebiBjro\"><b>十七、阿合奇</b></p>\n<p data-pid=\"1_qaq7FO\">1、猎鹰之乡</p>\n<p data-pid=\"y0rGBuXm\">2、木孜力克岩画</p>\n<p data-pid=\"LRaOZXiK\">3、新疆阿合奇托什干河国家湿地公园</p>\n<p data-pid=\"u9cp3KXe\"><b>十八、伽师</b></p>\n<p data-pid=\"w_7HUEgA\">1、卡玛洞佛寺遗址（新疆国保古寺古庙遗址）</p>\n<p data-pid=\"RmvHntzm\">2、喀勒呼其佛塔（新疆国保古寺古庙遗址）</p>\n<p data-pid=\"d6S641Qc\"><b>十九、岳普湖</b></p>\n<p data-pid=\"V2ycdnN3\">1、4A岳普湖达瓦昆沙漠</p>\n<p data-pid=\"uPS7_QIL\">2、岳普湖县达瓦昆沙漠水利风景区</p>\n<p data-pid=\"k_UykP8I\"><b>二十、英吉沙</b></p>\n<p data-pid=\"0xdUY-OF\">1、4A英吉沙南湖旅游度假区</p>\n<p data-pid=\"WyF-WXax\">2、3A英吉沙县小刀村景区</p>\n<p data-pid=\"r7LeyJwP\">3、新疆英吉沙国家湿地公园</p>\n<p data-pid=\"Ym_PeYa2\"><b>二十一、莎车县</b></p>\n<p data-pid=\"BOihRPdW\">1、3A莎车中国巴旦木之乡景区</p>\n<p data-pid=\"-ok64SDv\">2、莎车叶尔羌汗国王陵（新疆国保古墓遗址，3A ）</p>\n<p data-pid=\"Ez8wFymP\">3、莎车加满清真寺（新疆国保古寺古庙遗址，新疆国保古建筑及历史纪念建筑物）</p>\n<p data-pid=\"hbu69cjG\">4、新疆塔莎古道</p>\n<p data-pid=\"mnL5Wmx0\">5、莎车依克孜艾列克库尔干古城遗址</p>\n<p data-pid=\"oT3nHR4n\">6、莎车喀尔苏国家沙漠公园</p>\n<p data-pid=\"z0eky0VW\">7、莎车县丝绸之路•莎车博物馆</p>\n<p data-pid=\"FwOPMyoz\">8、新疆莎车叶尔羌国家湿地公园</p>\n<p data-pid=\"LRcbCV8g\">9、莎车县老城区茶馆</p>\n<p data-pid=\"5IZrY8hT\"><b>二十二、泽普县</b></p>\n<p data-pid=\"yRufbIAk\">1、泽普金胡杨林（5A，泽普县金湖杨国家森林公园，新疆特有胡杨林）</p>\n<p data-pid=\"fRSkXeDO\">2、新疆泽普叶尔羌河国家湿地公园</p>\n<p data-pid=\"vyKZwA_b\"><b>二十三、叶城县</b></p>\n<p data-pid=\"Cz_rByJg\">1、4A叶城县宗郎灵泉景区</p>\n<p data-pid=\"7PhjQMEz\">2、叶城烈士陵园（3A新疆全国重点烈士纪念建筑保护单位，新疆红色旅游经典景区）</p>\n<p data-pid=\"KqfdcD-Z\">3、3A叶城锡提亚迷城</p>\n<p data-pid=\"H_q0R6Y0\">4、新疆特色旅游街区叶城县石榴风情园—石榴之乡</p>\n<p data-pid=\"63CXQ3BC\">5、新疆国保石窟佛洞遗址叶城棋盘千佛洞</p>\n<p data-pid=\"KpP4XGH8\">6、新疆叶城宗朗国家湿地公园</p>\n<p data-pid=\"_LIKgjvo\"><b>4、注意事项</b></p>\n<p data-pid=\"jz-14SM4\">1、新藏线由于海拔高，人烟稀少，信号之类自然很微弱，多玛乡至三十里营房全程没有手机信号，而那段路恰好是最蛮荒的路段，要经过和穿越羌塘无人区与昆仑山脉。</p>\n<p data-pid=\"Y6DpWb2a\">2、新藏线高山陡坡并不多，但是却是世界上海拔最高的国道公路，平均海拔4500+，人烟稀少，高原反应更加强烈，在这种环境里，建议不要做剧烈运动，尽量减少能量消耗。根据自身情况还可以带上给氧设备。</p>\n<p data-pid=\"sj6NrFY6\">3、根据中华人民共和国《边境通行证管理办法》规定，西藏的阿里、日喀则、山南地区；新疆叶城县，塔什库尔干县。新疆段疆内需要在户口所在地办理，疆外需要在喀什游客服务中心办理。西藏区域需要在户外所在地办理（建议）如需在西藏本地办理，可前往边防去办。</p>\n<p data-pid=\"MoWkeKcS\">4、江孜至萨嘎约550KM，沿途风景不多。日喀则、拉孜、桑桑、萨嘎均有正规加油站提供油料。汽油标号多为93号，质量一般。偶尔会遇到因停电而无法加油的状况。<br>5、沿途住宿及补给：日喀则之后沿途乡镇规模不大，住宿及补给条件变差。萨嘎是进入阿里前最大的城镇，住宿条件较好，有多间汽车、摩托车修理店。进口车需自带零配件。<br>萨嘎165KM-仲巴80KM-帕羊230KM-霍尔乡 全程柏油路<br>6、全程柏油路，途中翻越海拔5221米的马莜木拉山口，进山前有武警边防检查站，检查边防证。马莜木拉山口为西藏日喀则地区和阿里地区的分界，过了这就算正式进入西藏阿里地区了。</p>\n<p data-pid=\"F_jEJM4h\"><b>本文收集了新疆段新G219国道线路行程，我也只是走了新疆段部分标识有G219国道，部分线路没有全线通车，地图只是参考网络资料大概画的，不能做为实际自驾线路使用。只能做为参考线路，以实际自驾为准。</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-57b9bb576765825856b1369eb490b332_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"427\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"DQ14roZc\"><b>六、沙漠公路（东、西线）</b></p>\n<p data-pid=\"43cPtw1p\"><b>1、沙漠公路简介</b></p>\n<p data-pid=\"UaihZKWQ\">沙漠公路，贯穿塔克拉玛干沙漠南北的有两条公路都被称为沙漠公路，东线一条是从轮台到民丰，全长522公里，是世界上最长最高的的流动沙漠公路。西线另一条是从阿拉尔至和田的沙漠公路。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-9b478c5fb1084bcd24c9195f83f89a2e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1198\" data-rawheight=\"848\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"x-rvzrFI\">途经东线（塔中）、西线</p>\n<p data-pid=\"uIAqAcEI\">1、东线轮台-塔中-民丰或且末全长500多公里。补给点在塔中，塔中是油田补给点，可以在此补给些油料，出发后在无其他补给点</p>\n<p data-pid=\"OEiTCMh0\">2、 西线阿拉尔到和田，全程约450公里,中间无补给点，给点只能在和田或阿拉尔市补给。西线沙漠公路是G217国道南段，阿勒泰到独山子为北段，独山子到库车为中段，库车，沙雅，阿拉市到和田为南段。</p>\n<p data-pid=\"I1Lc4PCy\">沙漠公路景点，沿途除了沙漠和胡杨林再无它物，沙漠公路两边夫妻补水站可以转转，公路两边50多米绿化挡沙地带，全部用滴灌补水。这些夫妻补水站常年都在这条公路两边，有固定住所，每天要检查各自负责路段。</p>\n<p data-pid=\"JhsJsDGh\"><b>2、沿途达坂和高点，基本都是沙漠丘陵，没有太高的海拔。</b></p>\n<p data-pid=\"FCzd8MWz\"><b>3、沿途景点：</b></p>\n<p data-pid=\"sfa271iD\">1、东沙漠公路，轮台胡杨林国家森林，国家沙漠，国家湿地公园，是国内唯一一家集，沙漠，森林，湿地公园。塔中休息站，一边且末，一边民丰。</p>\n<p data-pid=\"Tf8IHStz\">2、西沙漠公路，阿拉尔359旅军垦纪念馆。</p>\n<p data-pid=\"RBJUPQhT\"><b>4、行走沙漠公路有几点需要特别注意：</b></p>\n<p data-pid=\"d8TSbDfJ\">1、全年都可以通行，啥车都可以走，没有限制，夏季路面温度较高。</p>\n<p data-pid=\"kXDefnGg\">2、新疆唯一没有高峰期道路，啥时候走都不堵（特殊情况除外）。</p>\n<p data-pid=\"TNH53Spe\">3、全程路面平缓，起伏不大，沙漠在路两边，部分路段偶有风吹沙路面。</p>\n<p data-pid=\"l23hSAb8\">4、加油补给： 东线在塔中（地名，不是市也不是县是石油单位补给站）可以补充些油料和其他物资。</p>\n<p data-pid=\"TftwIhpD\">5、旅行补给：不需要</p>\n<p data-pid=\"Q6EJDgdO\">6、路况信息：全程均为沥青路面，全程流动测速60，弯道40，遇见测速摄像头请勿超过40通过。据说在2019年9月限速改成80了，2019年9月后去过小伙伴给说下。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-2759f47b7036e51c8126dcdd2bca3652_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"960\" data-rawheight=\"768\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"_q9-4mwp\"><b>七、喀喇昆仑公路（G314国道）</b></p>\n<p data-pid=\"RTmH--Db\"><b>1、喀喇昆仑公路（G314国道）简介</b></p>\n<p data-pid=\"OQUJod2G\">G314国道起点为新疆乌鲁木齐，终点为新疆红其拉甫的国门，全程1948公里。而喀喇昆仑公路，又名为中巴友谊公路或帕米尔公路，属于G314国道的一部分。喀喇昆仑公路北起喀什喀什，奥依塔克红山，盖孜检查站（海拔：2200m），恰克拉克湖(海拔：3300m)，喀拉库勒湖(海拔：3615m)，苏巴什达坂口(海拔：4033m)，塔合曼，塔什库尔干(海拔：3055m)，达布达尔，红其拉甫国门(海拔：4733m)进入巴基斯坦 。《中国国家地理》杂志将这条公路誉为<b>“群山间的绸带”。</b></p>\n<p data-pid=\"nINW8XT7\">喀喇昆仑公路北起中国新疆的喀什，南至巴基斯坦北部城市塔科特。它不仅是是巴基斯坦北方城市通往首都和南部沿海城市的交通要道，更是中国连接巴基斯坦及南亚次大陆、中东地区的唯一陆路通道，被誉为“当代丝绸之路”。喀喇昆仑公路被称为世界上最高最美的公路，但同时又被评为”世界十大险峻公路”之一。</p>\n<p data-pid=\"Bg3-gpHR\"><b>2、途经达坂或最高点</b></p>\n<p data-pid=\"vBmzeqAQ\">公路全线海拔最低点为600米，最高点为4694米，空气稀薄，气候恶劣;地质情况极为复杂，雪崩、山体滑坡、落石、塌方、积雪、积冰等地质灾害经常发生，沿途路面和桥梁设施经常遭到破坏，许多路段难以通车。</p>\n<p data-pid=\"FlXPZsOX\"><b>3、沿途公路景点：</b></p>\n<p data-pid=\"ZT0STwDA\"><b>1、艾提尕尔清真寺</b>是典型的伊斯兰建筑风格，远远的就能看到它特有的拱门、尖塔，以及代表不同种寓意的颜色图案。整个艾提尕尔清真寺，分为正殿、外殿、教经堂、院落、拱拜孜、宣礼塔、大门等七个部分，可谓新疆规模最大的清真寺。</p>\n<p data-pid=\"U7TFIX1M\"><b>2、高台民居</b>位于喀什市的老城区，它距今有600多年的历史，在拥有二千多年国家历史文化名城里，似乎还是个辈分比较小的景点。但高40多米，长800多米黄土高崖上的维吾尔族民居群，始终拥有一种特别的魅力。它也是我国唯一保存下来具有典型古西域特色的街区，特别是土砖木结构，总能勾起穿越百年的古西域向往。</p>\n<p data-pid=\"JnR1JGZD\">3、<b>阿帕霍加墓，又称香妃墓，</b>这座精美阿帕霍加墓则是她的衣冠冢，也是埋葬着阿帕霍加五代人的地方。墓室不大却异常的精美，每一处都像用心雕琢的翡翠，墓室四周都用绿色硫璃砖贴面，是典型的维吾尔族古建筑风格。</p>\n<p data-pid=\"MN9UCkpJ\">4、<b>喀什大巴扎，</b>规模巨大而历史悠久的古丝绸之路的贸易中心。它距今已有2000多年的历史，一直作为商旅往来的集中地。</p>\n<p data-pid=\"Tm9ZfjoQ\"><b>5、喀什噶尔古城</b>(5A,新疆特色旅游街区喀什古城民俗街区，新疆国保著名古城遗址，新疆民俗文化景点)</p>\n<p data-pid=\"TKPMUNBr\"><b>6、奥依塔克红山，</b>自身透体通红。奥依塔克镇的红山口（距喀什100公里），有<b>南疆火焰山</b>之称。这里的许多山，山体颜色如火焰燃烧，一片丹红，因此被称为红山口或红山谷。</p>\n<p data-pid=\"FaoehrRF\"><b>7、奥依塔克冰川公园，</b>\"奥依塔克\"是古突厥语，意思是\"群山之中的一片洼地\"。奥依塔克风景区将雪山、冰川、瀑布、河流、雪崩、草地揉为一体，加上山坡上成群的牛羊和柯尔克孜牧民的圆形毡房，使这块伟大圣洁的处女地充满了自然美，没有一丝半缕的人工雕琢。这也难怪有那么多国内外游客慕名而至，以览其容色，观其纯真。中国唯一一处夏季可以看到雪崩地方。</p>\n<p data-pid=\"reONr0iv\"><b>8、白沙湖，恰克拉克湖与白沙山，</b>布伦口水库.</p>\n<p data-pid=\"Jyv7oxx-\">9、<b>慕士塔格峰山，</b>它地处塔里木盆地西部边缘，是有名的冰山之父，在<b>慕士</b>塔格峰山的旁边还有两座主峰，公格尔峰和公格尔九别峰，它们三山鼎力如同被冰封的山神，又称昆仑三雄。</p>\n<p data-pid=\"ROU8ECjR\"><b>10、喀拉库勒湖</b></p>\n<p data-pid=\"C0-1WnTw\"><b>11、塔什库尔干自治县中国唯一的白人小城，国内唯一与3个国家接壤的县城。中国唯一与三个国家</b>（巴基斯坦、阿富汗、塔吉克斯坦）<b>接壤县城。</b></p>\n<p data-pid=\"TZGsZbVt\"><b>12、塔什库尔干石头城</b>（4A，世界遗产名录，新疆国保著名古城遗址）石头城，为唐代遗存。该城曾出土过唐代钱币、和田文书等。塔什库尔干“石头城”是我国历史上最著名的石头城之一，它与辽宁石城、南京石城并称“三大著名石城”。 塔什库尔干的维吾尔语意为“石头城堡”。</p>\n<p data-pid=\"9qU2xMf2\"><b>13、帕米尔旅游景区（5A）</b>“帕米尔”源自古代波斯语，意思是“房子的屋脊”（这也是帕米尔被誉为“世界屋脊”的确凿来历）。塔吉克族人民对“帕米尔”这个名称有两种解释：其一，“帕米尔”指最高的地方，因为这里的水向世界的四方流去；其二，“帕米尔”是指水草丰美、适合放牧的肥沃草原。这里是古代丝绸之路南道、中道通往西亚、南亚及欧洲的必经之地。唐代曾在此地设置葱岭守捉城，元代曾在这里设置驿站。帕米尔旅游景区由石头城景区、金草滩，塔吉克民俗村、综合服务中心、旅游购物中心五大区域组成。</p>\n<p data-pid=\"IVykSr3Y\"><b>14、慕士塔格冰川（新疆著名冰川）</b>冰山之父慕士塔格冰川公园位于塔什库尔干县、世界著名的“冰山之父”—7546米的慕士塔格峰裙带下，该公园方圆20公里，距县城72公里，距314国道12公里，平均海拔5000米，有美丽的“绿弓湖”在此停留。</p>\n<p data-pid=\"LyIAv5U0\"><b>15、拱拜孜古驿站，</b>古丝绸之路的拱拜孜在我县境内有六处，目前保存较完善的就是此处的塔什库尔干河畔的古驿站，为一连三间的石头房子，已倾陷。有一间可见原状。该驿站遗址是一座用卵石砌成的圆锥形小屋，有点像搭起的毡房。屋门朝东，天窗、屋顶有气孔可供通风。屋内有石砌的残龛，四壁已经薰得乌黑。驿站四周为河滩环绕，河边高地有古墓地，东侧有一小城遗址。</p>\n<p data-pid=\"El4PL_sL\"><b>4、行走注意事项：</b></p>\n<p data-pid=\"pcWnxsfr\">1、每年只有5月—11月放行</p>\n<p data-pid=\"c4uPuauD\">2、边防：到达中国边境地区，游客须有边防证或出国签证方可通行；疆外可到喀什游客服务中心办理，疆内需要在户外所在地办理。</p>\n<p data-pid=\"rDJ7o3Y4\">3、沿途有公路测速，部分路段限速很低，小心驾驶。</p>\n<p data-pid=\"I-RQvX6Q\">4、从海拔600多注，到海拔4500米以上，肯定会有高返，只是有些人反应快，有些人反应慢。</p>\n<p data-pid=\"Q0ZYR3zN\">5、注意高反反应，呼吸粗壮，头晕，头痛，嘴唇发紫，快走些就呼吸困难。一定在量力而行。不做过多剧烈运动，慢走慢行。</p>\n<p data-pid=\"tLtS-oRs\">6、高原食物和饮水注意喝温水。吃热食物。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-8792400f76d8acaf79476fa054cfca3e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"690\" data-rawheight=\"459\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-a6bf809bfefe1436a6c5b7ba942a5da4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"683\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-856b75e53cfea86c1aa78446d673f44a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"1749\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"KOgb9Rsk\"><b>八、盘龙古道（塔什库尔干县到瓦恰乡）</b></p>\n<p data-pid=\"4Act4BmD\"><b>1、盘龙古道简介</b></p>\n<p data-pid=\"LV8EysDz\">新疆塔什库尔干县的盘龙古道，又名蟠龙古道；位于喀什地区塔什库尔干塔吉克自治县瓦恰乡境内，乡政府驻地距县城75公里，盘龙古道就是瓦恰乡通往县城的致富路!它横卧于昆仑山脉，海拔约4100千米左右，腾空远望像一条巨龙卧于山间，守望着这祖国西部的神山圣地。全部盘山公路超过600个S弯道，黝黑的新柏油路面既象黑蟒出行，更像一笔勾勒出的水墨画。</p>\n<p data-pid=\"a46nYCxv\"><b>2、盘龙古道所经达坂或最高点</b></p>\n<p data-pid=\"79qa2JSF\">从塔什库尔干县出发全程下坡，从瓦恰乡上行全程上坡。</p>\n<p data-pid=\"N4tIDkcr\"><b>3、盘龙古道沿途景点</b></p>\n<p data-pid=\"aw8vOmwV\">盘龙古道就是最大景点</p>\n<p data-pid=\"ZyW0Gh9z\"><b>4、盘龙古道注意事项</b></p>\n<p data-pid=\"UEdmpG2C\">1、从塔县县城游客服务中心出发，走314国道往红其拉甫方向约23公里，见路牌（如下图）后继续前行约一百米，左拐进柏油马路往瓦恰乡方向，正式开始进入盘龙古道。</p>\n<p data-pid=\"Q79jY85z\">2、盘龙古道全程约34公里，两头铺装有柏油马路，中间约有20多公里是土路。路况还好，轿车也可以通行。</p>\n<p data-pid=\"AiW7E97C\">3、走盘龙古道下到山脚，右转就是瓦恰乡，左转就是大路，回程可以选择走大路。沿途会经过坎儿洋村、下坂地水库等。到下坂地水库左转回塔县，喀什，右转就是塔莎古道到莎车县。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-a34c7e2661e70d972369542d662a0c00_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"597\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-b1d47d7cbd3030a157aa7de340be9ccc_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1095\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-a9f4346b3beb8a6edf387c43aba9bd06_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"563\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"ECw0jAp_\"><b>九、塔莎古道</b></p>\n<p data-pid=\"klUbRiee\"><b>1、塔莎古道简介</b></p>\n<p data-pid=\"S438J4aw\">早在千年以前，唐玄奘法师就走了一条“塔莎古道”，这是一条至今都很少人敢走的南疆密境。玄奘法师曾如此描述这条古道“东下葱岭东冈，登危岭越洞谷；溪径险阻风雪相继，行八百余里出葱岭至乌铩国。”</p>\n<p data-pid=\"8LzPTY1y\">其实，玄奘法师所说的葱岭就是帕米尔高原，而乌铩国就是今日喀什的莎车县，塔莎古道即为塔什库尔干县到莎车县的古道。在中国户外，塔莎古道被誉为世外桃源，既有人间仙境，又有荒无人烟。常言道“身在地狱，眼在天堂”，用来形容塔莎古道实不为过。</p>\n<p data-pid=\"bNFC0xOK\"><b>2、沿途经过达坂或最高点：</b></p>\n<p data-pid=\"RyPFooPX\"><b>3、沿途景点：</b></p>\n<p data-pid=\"eKkWSq2x\">1、帕米尔高原，中国古代称葱岭，古丝绸之路在此经过。地处中亚东南部、中国的最西端，横跨塔吉克斯坦、中国和阿富汗。是亚洲多个主要山脉的汇集处，平均海拔4000米-7700米。</p>\n<p data-pid=\"Vc_-t1vi\">2、瓦恰魔鬼城也称“瓦恰土林”，是一种独特的水土侵蚀地貌，在干热气候和地壳运动环境下，暴雨和热气流强烈侵蚀、切割地表松散碎屑所形成的地形。由于表层部分沉积物有铁质风化壳，或夹有钙质胶结砂砾层，对下面土层起保护作用，使凸起的残留侧坡保持陡直。</p>\n<p data-pid=\"vQj4pVPG\">3、大同乡是喀什最负盛名的户外探险目的地，此乡地处帕米尔腹地的河谷中，村民中90%以上都是塔吉克人，而冷峻的雪山和苍凉的峡谷就围着那些杏花林子，视觉上强烈的对比，美得令人窒息。（3月看花，7月收果）</p>\n<p data-pid=\"UtzQmjbC\"><b>4、沿途自驾注意事项</b></p>\n<p data-pid=\"88Mm4qGe\">1、塔莎古道路程多单行道，注意对方来车，估计能遇到的不多，除了旅游车，就是本地车辆，车辆很少。</p>\n<p data-pid=\"OQufxFsA\">2、多山地滑坡路段，小心山体落石</p>\n<p data-pid=\"gQu8XmGf\">3、沿途没有完善旅游接待设施，住宿只能民宿或简单宾馆。</p>\n<p data-pid=\"6PPBkunT\">4、从塔什库尔干县出发海拔一直在降低到莎车县。</p>\n<p data-pid=\"TBrbz0Jq\">5、3月上旬4月初为杏花最美时间，沿途自驾车辆很多，住宿不太好找。塔尔乡与大同乡杏花居多，风景独特。</p>\n<p data-pid=\"U29vjuh7\">6、全程没有路碑或很少，重要交通路口都有标识，偶有标识很小的，多注意看。</p>\n<p data-pid=\"rRcDeDB8\">7、转弯路段记得喇叭是个很好用的工具。</p>\n<p data-pid=\"1raezfOO\"><b>第10条  哈罗若大道S235省道， </b></p>\n<p data-pid=\"rNWKyrQy\"><b>1、简介</b></p>\n<p data-pid=\"r5KmI4Yi\"><b>哈密-大海道-罗布泊-罗布泊湖心--若羌 </b></p>\n<p data-pid=\"JvyqUJud\"><b>累了，后面在补上吧。</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-518321e9534e3cbd4f50139f7916d972_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"427\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-6623c460d75bd04cfb0f7ff77e0e3b6c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"479\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-25f35a7de340498346b62b5c525dd05f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"755\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/xin-jiang-ding-zhi-lu-xing?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">分享新疆旅行故事</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/291164310/answer/2419745960?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">32 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/445970175?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">有什么国内自驾游的好线路？</a><br><a href=\"http://www.zhihu.com/question/64875833?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">向西走，自驾游有哪些精彩路线？</a><br>\n","link":"http://www.zhihu.com/question/291164310/answer/2419745960?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"拥有一座「移动城堡」：聊聊我的房车及体验","date":"2022-04-02 03:30:08","description":"如果不是我提前做了很多功课，自己也懂得折腾，换了我我也会亏钱把房车卖掉。房车生活的很多东西都是要自己亲身体验后才能知道哪里不好，仅在车展里静态看车，凭自己的想象就买了房车，是一定会后悔的。<a href=\"https://sspai.com/post/72337\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72337"},{"title":"派早报：E3 2022 电子娱乐展取消，图灵奖颁给超算跑分开创者等","date":"2022-04-02 00:58:28","description":"E3 2022 电子娱乐展取消，图灵奖颁给超算跑分开创者等<a href=\"https://sspai.com/post/72420\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72420"},{"title":"本周看什么丨最近值得一看的 7 部作品","date":"2022-04-01 10:59:01","description":"☕️TL;DR近期佳作推荐：[美剧]月光骑士、[电影]星期四、[美剧]亚特兰大第三季、[动画]外之国的少女、[美剧]关于帕姆的那些事、[纪录片]一次远行、[动画]SLOWLOOP-女孩的钓鱼慢活-几则 ...<a href=\"https://sspai.com/post/72421\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72421"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\r\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\r\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\r\n    return new Date(date.toLocaleString('en-US', { timeZone }))\r\n}\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\r\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\r\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\r\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: '2-digit',\r\n        hour12: false,\r\n        timeZone\r\n    })\r\n    return {\r\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\r\n        convert (date) {\r\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\r\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\r\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\r\n        }\r\n    }\r\n}\r\n\r\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\r\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\r\n    return converter.convert(new Date(secDate), tzName) - secDate\r\n}\r\n\r\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\r\ncmn-Hans-SG = 中文普通话-简体-新加坡\r\ncmn-Hant-TW = 中文普通话-繁体-台湾\r\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\r\ncmn = 中文普通话\r\n\r\nzh-Hans = 中文-简体\r\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\r\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\r\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\r\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\r\n}\r\n\r\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long'\r\n}\r\nconst now = new Date()\r\n\r\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\r\n\r\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\r\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\r\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\r\n\r\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\r\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\r\n\r\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\r\n\r\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\r\n\r\nzhCNFormatter.format(now) // 2021年10月13日星期三\r\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\r\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\r\n\r\njaFormatter.format(now) // 2021年10月13日水曜日\r\njaAltFormatter.format(now) // 令和3年10月13日水曜日\r\n\r\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\r\n// {locale: 'zh-CN', calendar: 'gregory', …}\r\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\r\n     // 基于一个固定日期计算，这里选择 1970.1.1\r\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\r\n    const base = new Date(1970, 0, 1).getTime()\r\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\r\n    return Array.from({ length: 7 }, (_, day) =&gt; (\r\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\r\n    ))\r\n}\r\n\r\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\r\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\r\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    second: 'numeric',\r\n}).formatToParts(new Date())\r\n// [\r\n//     { type: 'year', value: '2021' },\r\n//     { type: 'literal', value: '年' },\r\n//     { type: 'month', value: '10' },\r\n//     { type: 'literal', value: '月' },\r\n//     { type: 'day', value: '13' },\r\n//     { type: 'literal', value: '日' },\r\n//     { type: 'weekday', value: '星期三' },\r\n//     { type: 'literal', value: ' ' },\r\n//     { type: 'dayPeriod', value: '上午' },\r\n//     { type: 'hour', value: '1' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'minute', value: '00' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'second', value: '00' }\r\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\r\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\r\n}\r\n\r\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\r\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\r\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\r\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\r\n  timeZone: 'America/Los_Angeles',\r\n  year: 1995,\r\n  month: 12,\r\n  day: 7,\r\n  hour: 3,\r\n  minute: 24,\r\n  second: 30,\r\n  millisecond: 0,\r\n  microsecond: 3,\r\n  nanosecond: 500,\r\n  calendar: 'iso8601'\r\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote>\n<p>周六不放假休息，还在这加班搞 CTF？</p>\n</blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/86535/11/24318/75037/622032a8E4f94d4ae/89703ccc122cf4e0.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"从 Google Analytics 的统计代码说起 —— 谈谈 script 标签的 async 和 defer 属性","date":"2020-10-13 09:25:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/80291/2/16552/19311/622032b3Eb300c2aa/66748fc8124a01c5.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/script-async-defer/\">https://blog.skk.moe/post/script-async-defer/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/script-async-defer/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"\n<p>WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将其表述为 \"An API for accessing Public Key Credentials\"，即“一个用于访问公钥凭证的 API”。WebAuthn 很强大，强大到被认为是 Web 身份认证的未来（当然，也很复杂）。你有想过通过指纹或者面部识别来登录网站吗？WebAuthn 就能在保证安全和隐私的情况下让这样的想法成为现实。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\" alt=\"通过 WebAuthn 调起 Windows Hello 登录网站\" width=\"1912\" height=\"966\" class=\"aligncenter size-full wp-image-2215\"></a>\n<p>你可以在<a href=\"https://webauthn.io/\" rel=\"noopener\">这个网站</a>自行体验 WebAuthn。或者，如果你有一个使用 WordPress 的站点，可以尝试一下 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WP-WebAuthn</a> 这款插件，它可以为你的站点启用 WebAuthn 登录。这是我为了写这篇文章而练手开发的插件，本文中的部分示例代码也来自这款插件。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"wp-webauthn\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/wp-webauthn\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>WebAuthn Level 1 标准已在 2019 年 3 月成为 W3C 推荐标准，而 Level 2 标准目前也已进入编辑草案阶段，但互联网上有关它的中文资料却仍然很少，国内也鲜有网站支持这一新标准。于是，在抱着各种英文资料和标准啃了几天以后，我折腾出了这篇文章。</p>\n<p>在这篇文章里，我将会从最基本的概念开始，逐渐深入 WebAuthn，直到解码公钥等深层细节。这可能是你能找到的有关 WebAuthn 最详细最基础的中文文章，也很可能是最长的。在开始之前，<strong>我强烈建议你打开菜单中的文章目录浏览一遍，以对这篇文章涉及的内容有所了解。</strong>如果你只是想了解如何简单地在你的项目中添加对 WebAuthn 的支持，那么“<a href=\"https://flyhigher.top/#webauthn-overview\">浅谈 WebAuthn</a>”部分就是你要找的；如果你想了解更多关于 WebAuthn 的底层细节，那么你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分。</p>\n<p>由于在本文写作时 WebAuthn Level 2 规范尚未定稿，<strong>这篇文章我们将只专注于 Level 1 规范。</strong></p>\n<p>这篇文章最后更新于 2020.9 ，在你读到这篇文章时，部分事实可能已经发生改变，请注意判断。</p>\n<p><strong>更新日志：</strong></p>\n<ul>\n<li>2021.1.16 添加 Chrome 开发工具信息</li>\n<li>2020.9.17 更新 iOS/iPad OS 兼容性信息</li>\n<li>2020.5.20 添加部分无用户名认证的平台兼容性内容</li>\n<li>2020.5.15 添加部分 <code>extensions</code> 相关内容与链接；添加全局凭证 ID 唯一内容；添加凭证 ID 查找相关内容；添加“从 U2F 认证迁移”一节</li>\n<li>2020.4.13 更新与修正 <code>userVerification</code> 相关内容；添加部分 Firefox 相关内容</li>\n<li>2020.3.23 文章发布</li>\n</ul>\n<p>那么让我们开始吧。<span></span></p>\n<h1>浅谈 WebAuthn</h1>\n<p>在这个部分里，我们将会从基础概念开始，了解有关 WebAuthn 和密码学的一些基础知识，并最终使用第三方库实现基础的 WebAuthn 认证。如果你已经对这些内容有所了解了，可以跳到“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”继续阅读。</p>\n<h2>为什么使用 WebAuthn</h2>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\" alt=\"钓鱼邮件\" width=\"709\" height=\"693\" class=\"aligncenter size-full wp-image-2162\"></a>\n<p>相信你一定收到过类似的邮件吧？只要你点进那个最显眼的链接，你就会进入一个设置好的圈套——钓鱼网站。如果你一时糊涂在这类网站上填写了你的账号和密码，bingo，你的账号就不再是你的账号了。</p>\n<p>不过，就算你警惕心再强，也无法避免密码泄露事件。Twitter, Facebook 等都爆出过明文密码泄露事件，证明再大的公司或组织也无法避免密码泄露问题。雪上加霜的是，很大一部分用户都非常喜欢使用重复密码，这就导致一次密码泄露会牵连很多网站，用户的账户安全性完全无法得到保证。</p>\n<p>那么，有什么办法解决这些问题吗？<strong>彻底解决的方法只有一个，那就是抛弃密码。</strong>可是没有密码还怎么验证用户身份呢？这就是 WebAuthn 的用武之地了。</p>\n<p><del>没有密码的好时代，来临力！</del></p>\n<h2>什么是 WebAuthn</h2>\n<p>那么到底什么是 WebAuthn 呢？如开头所说，WebAuthn 是“一个用于访问公钥凭证的 API”，网站可以通过这个 API 进行一些高安全性的身份验证。WebAuthn 一个最常见的应用就是用于网站登录时的 2FA（双重因素验证）甚至是无密码登录。通过网页调用 WebAuthn，在不同平台下，<strong>我们可以实现通过 USB Key、指纹、面部甚至虹膜扫描来认证身份，同时确保安全和隐私。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\" alt=\"WebAuthn 可使用的各种身份认证方式\" width=\"1294\" height=\"566\" class=\"aligncenter size-full wp-image-2213\"></a>\n<p>WebAuthn 标准是 FIDO2 标准的一部分，而 FIDO2 则是由 FIDO 联盟和 W3C 共同推出的 U2F（现称作 FIDO1）的后继标准，旨在增强网络认证的安全性。</p>\n<blockquote><p>你可能了解过 U2F，那么 U2F 和 FIDO2 的区别在哪里呢？从名字上可以看出，U2F，即“通用第二因素协议”，是专注于作为密码后的第二道屏障的，而 FIDO2 增加了单因素认证功能，这意味着使用 FIDO2 可以完全替代密码，真正实现无密码登录。</p></blockquote>\n<p>FIDO2 标准主要包括四个部分，其一是用于网站和访客设备交互的 WebAuthn，而 Client to Authenticator Protocol 2（CTAP2，客户端-认证器协议）作为 WebAuthn 的补充，则是用于访客的设备和认证器交互的协议。标准的其他两个部分则是 U2F 和 UAF 规范。在这篇文章中，我们只关心 WebAuthn，不会涉及 CTAP, U2F 和 UAF 的相关知识。如果你对这段话中的一些概念不了解，不要紧张，接下来我们就来谈谈 WebAuthn 中一些常用的术语和概念。</p>\n<blockquote><p>WebAuthn 只能在安全上下文中使用，也就是说，页面需要使用 HTTPS 协议或是处于 <code>localhost</code> 中。</p></blockquote>\n<h2>常用术语和概念</h2>\n<p>WebAuthn 中有许多不常碰到的术语，不过我只会在这里介绍一些常用的术语和概念——如果你只是希望做出一个简单的实现，那么了解这一段中的一些概念就足够了。同时，由于我实在没能找到一部分术语的通用翻译，有一些术语我按着自己的理解尽可能地翻译了，有任何问题请告诉我。</p>\n<p>在一个完整的 WebAuthn 认证流程中，通常有这么几个角色：</p>\n<ul>\n<li>Relying Party 依赖方 (RP) ：指服务提供方，即网站</li>\n<li>User 用户：正准备登录的你</li>\n<li>Authenticator 认证器：通常指 USB Key 或是设备内置的指纹扫描器、虹膜扫描器、面部识别装置等，正是它们在使用流程中代替了密码甚至是用户名</li>\n<li>User Agent 用户代理：通常指浏览器或系统，负责与认证器交互</li>\n</ul>\n<p>认证过程通常分为两种：</p>\n<ul>\n<li>Registration Ceremony 注册仪式：用户向账户上添加认证器</li>\n<li>Authentication Ceremony 验证仪式：用户通过已注册的认证器验证身份</li>\n</ul>\n<p>同时，认证过程中还会产生这些内容：</p>\n<ul>\n<li>Challenge 挑战：通常是一串随机字符串</li>\n<li>Public Key Credential 公钥凭证：由认证器产生的凭证，在技术上代替了密码</li>\n<li>Attestation 证明：注册时认证器产生的验证数据</li>\n<li>Assertion 断言：验证时认证器产生的验证数据</li>\n</ul>\n<blockquote><p><strong>请注意区分证明 (Attestation) 和断言 (Assertion)</strong>，特别是在这两个单词有些相似的情况下。在 WebAuthn 中，它们是不同过程中的类似概念，但并不相同。</p></blockquote>\n<p>如果你对于这些内容不是很理解，没有关系，我们会在“<a href=\"https://flyhigher.top/#how-to-webauthn\">使用流程</a>”一节中将这些概念放到实际情况中解释，你只要先区分这些概念即可。</p>\n<h2>安全性的基础</h2>\n<p>WebAuthn 为什么安全？和 HTTPS 一样，WebAuthn 使用非对称加密的思路来保证安全性，但侧重点又有所不同。要理解 WebAuthn 的认证流程，我们必须对非对称加密有所了解。如果你对非对称加密比较熟悉了，就直接跳到下一段吧。</p>\n<p>WebAuthn 的核心在于“认证”，即保证产生了凭证的认证器是用户的认证器，而不是第三方在伪造凭证。但为什么要使用非对称加密呢？我们可以先来看看对称加密。</p>\n<p>让我们假设小明和小红相互写信，见不到对方。这天小红突然想，给自己写信的人是不是真的小明呢？于是小红要求对方向小红证明自己是小明。怎么证明呢？他们商量出来这么一套方案：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明和小红商量一个统一的密码和密钥</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明用提前和小红商量好的密码和密钥加密文本后发回给小红</li>\n<li>小红使用相同的密码和密钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和密钥</li>\n</ol>\n<blockquote><p>在密码学中，我们通常把“加密算法”称为密码 (code)，和通常登录时用的密码 (password) 并非同一个概念。</p></blockquote>\n<p>在这种情况下，<strong>只要密钥不泄露</strong>，即拥有正确密钥的只有小明和小红，那么小红就能确定对方一定是小明。但这样的问题也很明显，如果小明和小红不能见面，那么他们就必须先以明文交换密码——<strong>在这个过程中一旦有人窃取到了密码，这个认证就无效了。</strong></p>\n<p>这时我们就需要使用<strong>非对称加密</strong>来拯救破碎的信任了。非对称加密的基础是一对密钥，也就是公钥和私钥，它们是互相关联但（几乎）无法互相推导的。在非对称加密的过程中，选择相同的密码后，使用私钥加密明文得到的密文只能由对应的公钥解密，无法使用私钥解密，同时这个过程反过来也是成立的。</p>\n<blockquote><p>本文的核心并不是非对称加密算法，因此不会详述非对称加密在数学上的证明，若有兴趣可以自行了解。</p></blockquote>\n<p>这就完美解决密钥泄露的问题了。让我们回过头来看之前的例子。现在小明和小红决定使用非对称加密来证明身份，过程如下：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明提前生成一对公私钥，将公钥发送给小红，私钥自己保管，同时商量好统一的密码</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明使用商量好的密码和自己的私钥加密文本，发送给小红</li>\n<li>小红使用相同的密码和小明的公钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和私钥</li>\n</ol>\n<p>在这种情况下，<strong>只要私钥不泄露</strong>，那么小红解密得到的文本和之前发送的一致，那么就可以证明收到的密文一定是由小明加密后发送过来的。而在整个过程中，私钥都没有离开过小明，更没有经过传输，也就几乎没有泄露的可能了。这时，小红终于可以确定对面和她通信的人的确是小明了。</p>\n<p>题外话：HTTPS 虽然也应用了非对称加密，但 HTTPS 更侧重于“加密”而非“认证”，因此思路上会有些许差异。要了解关于 HTTPS 和非对称加密的更多信息，你可以阅读我之前写的这篇文章：</p>\n<p></p>\n<div class=\"mdx-post-cot\" data-mdxposturl=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdx-post-wait-out-c2\"><div class=\"mdx-post-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<span></span>\n<h2>使用流程</h2>\n<p>了解了非对称加密，我们就可以来看看 WebAuthn 的认证流程了。</p>\n<p>和普通的密码一样，<strong>使用 WebAuthn 分为两个部分，注册和验证。</strong>注册仪式会在依赖方中将认证器的一些信息和用户建立关联；而验证仪式则是验证这些信息以登确保是用户本人在登录。根据上一节的思路，我们可以知道，注册仪式就是认证器生成一对公私钥，然后将公钥交给依赖方；而验证仪式是依赖方发送给认证器一段文本，要求认证器用自己的私钥加密后发回以验证。</p>\n<p>在实际情况中，WebAuthn 是基于<strong>挑战-应答模型</strong>工作的。要更好地理解，我们直接来看具体流程。先来看看注册的流程。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\" alt=\"WebAuthn 注册流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2224\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的注册请求</li>\n<li>依赖方向浏览器发送挑战、依赖方信息和用户信息</li>\n<li>浏览器向认证器发送挑战、依赖方信息、用户信息和客户端信息以请求创建公钥凭证</li>\n<li>认证器请求用户动作，随后创建一对公私钥，并使用私钥签名挑战（即证明），和公钥一起交给浏览器</li>\n<li>浏览器将签名后的挑战和公钥发送给依赖方</li>\n<li>依赖方用公钥验证挑战是否与发送的一致，如果成功则将公钥与用户绑定，注册完成</li>\n</ol>\n<p>我也做了一个交互式的 Demo，你可以对照流程来更好地理解。</p>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\">开始注册</button> <span></span></p>\n<div></div>\n<blockquote><p>注意，这个 Demo 和下方的 Demo 都只是一个本地模拟的简单示例，没有任何数据会被上传，当然也不会对数据进行验证。</p></blockquote>\n<p>而之后的验证流程如下：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\" alt=\"WebAuthn 验证流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2226\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的验证请求</li>\n<li>依赖方向浏览器发送挑战</li>\n<li>浏览器向认证器发送挑战、依赖方信息和客户端信息以请求获取公钥凭证</li>\n<li>认证器请求用户动作，随后通过依赖方信息找到对应私钥，并使用私钥签名挑战（即断言），交给浏览器</li>\n<li>浏览器将签名后的挑战发送给依赖方</li>\n<li>依赖方用之前存储的公钥验证挑战是否与发送的一致，一致则验证成功</li>\n</ol>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\" disabled>开始验证</button> <span>在上方注册后才能验证</span></p>\n<div></div>\n<p>可以看到，WebAuthn 不仅在理论上是安全的，同时<strong>在整个过程中并没有隐私数据被传输</strong>——用户信息实际上只包含用户名和用户 ID。因此我们完全可以说 WebAuthn 是安全且私密的。</p>\n<blockquote><p>为了避免用户在不同依赖方之间被追踪，认证器通常会为每个依赖方和用户的组合都创建一对公私钥。不过，由于认证器的存储空间有限，认证器通常不会存储每一个私钥，而是会通过各类信息和烧录在认证器内的主密钥“算”出对应的私钥以实现无限对公私钥。具体算法根据不同厂商会有所不同。对于 Yubikey，你可以在<a href=\"https://developers.yubico.com/U2F/Protocol_details/Key_generation.html\">这里</a>了解更多。</p></blockquote>\n<blockquote><p>如果依赖方需要，用户同意后，发送给依赖方的公钥凭证中可以包含用于辨认认证器型号的信息，不过这对隐私的影响微乎其微。</p></blockquote>\n<h2>浏览器接口</h2>\n<p>要使用 WebAuthn，我们必须要依靠浏览器作为媒介和验证器进行交互，而这就需要浏览器对于 WebAuthn 的支持了。绝大多数新版本的现代浏览器都为 WebAuthn 提供了统一的接口，而在这一段中我们会了解如何使用相关的接口。但是在开始之前，我们可以先来看看浏览器的支持程度（2020.9）。</p>\n<div class=\"mdui-table-fluid\"><table class=\"mdui-table\">\n<thead><tr>\n<th>浏览器</th>\n<th>支持情况</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>桌面端 Chrome</td>\n<td>67+</td>\n</tr>\n<tr>\n<td>移动端 Chrome</td>\n<td>67+<sup>[1]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Firefox</td>\n<td>60+</td>\n</tr>\n<tr>\n<td>移动端 Firefox</td>\n<td>不支持<sup>[2]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Edge</td>\n<td>18+</td>\n</tr>\n<tr>\n<td>移动端 Edge</td>\n<td>不支持<sup>[3]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Safari</td>\n<td>13+</td>\n</tr>\n<tr>\n<td>移动端 Safari</td>\n<td>13.3+<sup>[4]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Opera</td>\n<td>54+</td>\n</tr>\n<tr>\n<td>移动端 Opera</td>\n<td>不支持</td>\n</tr>\n</tbody>\n</table></div>\n<p><sup>[1]</sup> 受平台限制，Chrome 在 iOS 平台上不支持 WebAuthn，在 Android 平台上支持大部分 WebAuthn 功能，但仍不支持部分特性（如 <code>userVerification</code>）。<br><sup>[2]</sup> 移动端 Firefox 80 以下的版本支持 WebAuthn 但似乎会忽略 <code>authenticatorAttachment</code> 等一部分参数，同时移动端 Firefox Beta 80 以下的版本支持 WebAuthn 但无法成功调用。自 80 版本起移动端 Firefox 暂时取消了对 WebAuthn 的支持（可能是 Bug）。<br><sup>[3]</sup> 移动端 Edge 似乎支持 WebAuthn 但无法成功调用。<br><sup>[4]</sup> Safari iOS/iPad OS 13 仅支持外部认证器，无法调用 Touch ID 或 Face ID；自 iOS/iPad OS 14 起 Safari 已支持全功能 WebAuthn，可以调用 Touch ID/Face ID</p>\n<p>当然，一众国产浏览器，包括 Samsung Browser 和 Yandex Browser，目前都不支持 WebAuthn。此外，由于 WebAuthn 涉及外部验证器和 TPM 可信平台模块等，用户的操作系统也会对 WebAuthn 的可用性造成影响。以下是一些需要注意的信息：</p>\n<ul>\n<li>Windows 10 1903 以下版本仅 Edge 能提供完整支持，其他浏览器只能使用 USB Key 等外部认证器；1903+ 中所有浏览器都可以通过 Windows Hello 带来完整的 WebAuthn 支持</li>\n<li>Android 需要安装并开启 Google 服务</li>\n<li>iOS/iPad OS 13.3 以下的版本不支持 WebAuthn，iOS/iPad OS 14 以下的版本支持有限（参考上文），iOS/iPad OS 14 开始 Safari 已支持全功能 WebAuthn（功能完整度甚至超过了 Android）</li>\n</ul>\n<p>可以看出，WebAuthn 的发展之路仍然很漫长，但好在桌面端对它的支持已经比较完善了，在一些情况下我们完全有理由使用它。</p>\n<hr>\n<p>来看看浏览器提供了怎么样的接口吧。要使用 WebAuthn，我们可以使用 <code>navigator.credentials.create()</code> 请求认证器生成公钥凭证和 <code>navigator.credentials.get()</code> 请求获取公钥凭证。</p>\n<blockquote><p>你或许已经对 Credential Management API 有所了解了。通过这些 API，我们还可以实现一些有趣的特性，不过这值得另开一篇文章来讲了。</p></blockquote>\n<p>对于一个基础的实现，<code>navigator.credentials.create()</code> 需要传入的参数如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        challenge,\r\n        rp: {\r\n            id,\r\n            name\r\n        },\r\n        user: {\r\n            id,\r\n            name,\r\n            displayName\r\n        },\r\n        pubKeyCredParams: [\r\n            {\r\n                type: \"public-key\",\r\n                alg\r\n            }\r\n        ],\r\n        authenticatorSelection: {\r\n            authenticatorAttachment,\r\n            userVerification\r\n        },\r\n        excludeCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>在 <code>navigator.credentials.create()</code> 方法中，我们必须传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值。这指明了我们需要创建公钥凭证，而非普通的密码凭证。然后，在 <code>publicKey</code> 对象中设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rp: Object</code>：依赖方信息，其中有一项为必须：\n<ul>\n<li>\n<code>rp.id: String</code>：（可选）依赖方 ID，必须为当前域名或为当前域名的子集的域名（不是子域名）。如域名为 <code>test.123.example.com</code>，则依赖方 ID 可以是 <code>test.123.example.com</code>, <code>123.example.com</code> 或 <code>example.com</code>。不指定则默认使用当前域名</li>\n<li>\n<code>rp.name: String</code>：依赖方名称，用于方便用户辨认</li>\n</ul>\n</li>\n<li>\n<code>user: Object</code>：用户信息，其中有三项为必须：\n<ul>\n<li>\n<code>user.id: Uint8Array</code>：转换为 <code>Uint8Array</code> 的字符串。<strong>出于安全考量，这应尽可能不与任何用户信息相关联，如不要包含用户名、用户邮箱等</strong>\n</li>\n<li>\n<code>user.name: String</code>：登录用户名</li>\n<li>\n<code>user.dispalyName: String</code>：用于显示的用户名称，显示与否的具体行为取决于浏览器</li>\n</ul>\n</li>\n<li>\n<code>pubKeyCredParams: Array</code>：一个算法列表，指明依赖方接受哪些签名算法。列表的每一项都是一个对象，拥有两个属性：\n<ul>\n<li>\n<code>pubKeyCredParams[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>pubKeyCredParams[].alg: Number</code>：一个负整数，用于标明算法。具体算法对应的数字可以在 <a href=\"https://www.iana.org/assignments/cose/cose.xhtml#algorithms\">COSE</a> 找到</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection: Object</code>：（可选）用于过滤正确的认证器，这里介绍常用的一个参数：\n<ul>\n<li>\n<code>authenticatorSelection.authenticatorAttachment: String</code>：（可选）指定要求的认证器类型。如果没有满足要求的认证器，认证可能会失败。该参数可以为 <code>null</code>（表示接受所有类型的认证器）或是以下两个值之一：\n<ul>\n<li>\n<code>platform</code>：表示仅接受平台内置的、无法移除的认证器，如手机的指纹识别设备</li>\n<li>\n<code>cross-platform</code>：表示仅接受外部认证器，如 USB Key</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection.userVerification: String</code>：（可选）指定认证器是否需要验证“用户为本人 (User Verified, UV)”，否则只须“用户在场 (User Present, UP)”。具体验证过程取决于认证器（不同认证器的认证方法不同，也有认证器不支持用户验证），而对验证结果的处理情况则取决于依赖方。该参数可以为以下三个值之一：\n<ul>\n<li>\n<code>required</code>：依赖方要求用户验证</li>\n<li>\n<code>preferred</code>：（默认）依赖方希望有用户验证，但也接受用户在场的结果</li>\n<li>\n<code>discouraged</code>：依赖方不关心用户验证。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>excludeCredentials: Array</code>：（可选）用于标识要排除的凭证，可以避免同一个用户多次注册同一个认证器。如果用户试图注册相同的认证器，用户代理会抛出 <code>InvalidStateError</code> 错误。数组中的每一项都是一个公钥凭证对象，包含以下属性：\n<ul>\n<li>\n<code>excludeCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>excludeCredentials[].id: Uint8Array</code>：要排除的凭证 ID</li>\n<li>\n<code>excludeCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，超时后将强制终止 <code>create()</code> 并抛出错误。若不设置，将使用用户代理的默认值；若太大或太小，则使用最接近的用户代理默认值范围中的值。推荐值为 5000-120000</li>\n</ul>\n<blockquote><p>对于 <code>pubKeyCredParams</code>，通常我们只需添加 ES256 (alg: -7) 算法即可兼容大部分外部认证器，此外，再添加 RS256 (alg: -257) 算法即可兼容大部分平台内置认证器（如 Windows Hello）。当然，前端添加算法之后，后端也需要相应的算法支持。</p></blockquote>\n<blockquote><p>对于 <code>userVerification</code>，由于默认值 \"preferred\" 并不能很好地被所有设备支持，因此无论在 <code>create()</code> 中还是 <code>get()</code> 中不指定该参数都会在 Chrome 中触发一条警告。具体请参阅<a href=\"https://chromium.googlesource.com/chromium/src/+/master/content/browser/webauth/uv_preferred.md\">这个页面</a>。</p></blockquote>\n<p>调用 <code>create()</code> 之后，我们就可以拿到一个 <code>Promise</code>，并可以在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>create()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAttestationResponse {\r\n        attestationObject: ArrayBuffer(390) {},\r\n        clientDataJSON: ArrayBuffer(121) {}\r\n    },\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\",\r\n    type: \"public-key\"\r\n}</pre>\n<p>其中有：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：<code>AuthenticatorAttestationResponse</code> 对象，是 <code>PublicKeyCredential</code> 的主要部分，包含以下两个内容：\n<ul>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n<li>\n<code>response.attestationObject: ArrayBuffer</code>：CBOR 编码的认证器数据，包含凭证公钥、凭证 ID、签名（如果有）、签名计数等信息</li>\n</ul>\n</li>\n</ul>\n<p>然后将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串，我们就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证与注册了。具体怎么操作，我们会在下文详细讨论。当然，别忘了 <code>catch()</code> 注册过程中抛出的任何错误。</p>\n<blockquote><p>你可能会认为在所有情况下，注册时认证器都会对挑战进行签名。实际上在大部分情况下（同时也是默认情况），<strong>注册时认证器并不会对挑战进行签名</strong>，<code>attestationObject</code> 并不会包含签名后的挑战。只有依赖方明确要求证明且用户同意（部分浏览器要求）后认证器才会对挑战进行签名（具体实现据情况会有所不同）。对此，<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion#Attestation\">MDN 解释道</a>“大部分情况下，用户注册公钥时我们会使用「初次使用时信任模型」(TOFU) ，此时验证公钥是没有必要的。”要了解更多关于证明的内容，请参阅“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>而对于 <code>navigator.credentials.get()</code>，我们可以传入如下的参数：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.get({\r\n    publicKey: {\r\n        challenge,\r\n        rpId,\r\n        userVerification,\r\n        allowCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>和 <code>create()</code> 一样，对于 <code>get()</code> 我们需要传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值，指明我们需要获取的是公钥凭证而非普通的密码凭证。在 <code>publicKey</code> 对象中我们可以设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rpID: String</code>：（可选）依赖方 ID，需要和注册认证器时的一致。规则和上述的 <code>rp.id</code> 一致，不指定默认使用当前域名</li>\n<li>\n<code>userVerification: String</code>：和上文一样，只是需要注意它这次不在 <code>authenticatorSelection</code> 中了</li>\n<li>\n<code>allowCredentials: Array</code>：（可选）用于标识允许的凭证 ID，使用户代理找到正确的认证器。只有符合这个列表中凭证 ID 的凭证才能被成功返回。数组中的每一项都是对象，包含以下属性：\n<ul>\n<li>\n<code>allowCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>allowCredentials[].id: Uint8Array</code>：允许的凭证 ID</li>\n<li>\n<code>allowCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，和上面的一样，推荐值为 5000-120000</li>\n</ul>\n<p>嗯，要传入的参数少多了。之后，和 <code>create()</code> 一样，调用 <code>get()</code> 之后，我们就可以拿到一个 <code>Promise</code> 并在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>get()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAssertionResponse {\r\n        authenticatorData: ArrayBuffer(37) {},\r\n        signature: ArrayBuffer(256) {},\r\n        userHandle: ArrayBuffer(64) {},\r\n        clientDataJSON: ArrayBuffer(118) {}\r\n    }\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\"\r\n    type: \"public-key\"\r\n}</pre>\n<p>这里的东西就比 <code>create()</code> 时拿到的要多了。看看我们拿到了什么吧：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：对于验证流程，认证会返回 <code>AuthenticatorAssertionResponse</code> 而不是 <code>AuthenticatorAttestationResponse</code> 对象，这个对象包含以下 4 个属性：\n<ul>\n<li>\n<code>response.authenticatorData: ArrayBuffer</code>：认证器信息，包含认证状态、签名计数等</li>\n<li>\n<code>response.signature: ArrayBuffer</code>：被认证器签名的 <code>authenticatorData</code> + <code>clientDataHash</code>（<code>clientDataJSON</code> 的 SHA-256 hash）</li>\n<li>\n<code>response.userHandle: ArrayBuffer</code>：<code>create()</code> 创建凭证时的用户 ID <code>user.id</code>。许多 U2F 设备不支持这一特性，这一项将会是 <code>null</code>\n</li>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n</ul>\n</li>\n</ul>\n<p>同样地，我们将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串后就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证了。至于具体怎么做，别急，马上就来讲一讲。</p>\n<h2>简单实现</h2>\n<p>了这么多，我们终于可以实现一个简单的 WebAuthn 认证页面了。由于在实际操作中 WebAuthn 相关的数据解码和密码计算比较复杂，在服务器端我们可以使用第三方库来帮我们做这些脏活累活，我们只需专注于具体流程就可以了。</p>\n<p>要寻找可用的第三方库，你可以在 <a href=\"https://webauthn.io/\">webauthn.io</a> 上找到适用于各种语言的第三方库——除了 PHP（笑）。不过好在你可以在 GitHub 上找到几个不错的 PHP WebAuthn 库，比如 <a href=\"https://github.com/web-auth/webauthn-framework\">web-auth/webauthn-framework</a>。</p>\n<p>在我们的这个例子中，我们关心的主要是前端逻辑；而后端我们可以使用各类几乎已经做到开箱即用的第三方库，这样我们可以专注于流程而不必关心细节。当然如果你想了解后端的解码细节，可以阅读“<a href=\"https://flyhigher.top/#webauthn-decode\">手动解个码</a>”一节。</p>\n<hr>\n<p>让我们先从注册开始吧。现在，用户点击了注册认证器的按钮，一个请求被发送给服务器（也就是依赖方）。在最简单的情况中，依赖方需要将三个内容发送给浏览器：<strong>挑战、用户信息和用户已注册的凭证 ID 列表（即 <code>excludeCredentials</code>）</strong>。当然依赖方也可以自由选择发送更多信息，只要最终前端能构建合法的参数即可。</p>\n<p>挑战最终会被转换为 <code>Uint8Array</code>，即一组 0-255 的整数。如果使用 PHP，在后端我们可以这样生成 Base64 编码的挑战：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"php\">$challenge = \"\";\r\nfor($i = 0; $i \n<p>对于用户信息，我们需要登录名、显示名称和 ID 三项内容。我们可以从数据库中取出用户信息，也可以新建一份。需要注意的是，<strong>出于安全和隐私的考量，ID 不应该包含用户的任何信息，比如用户邮箱等。</strong>推荐的做法是和挑战一样，生成一个随机字符串/一组随机数，并将其于用户关联起来以供之后使用。</p>\n<p>发送已注册的凭证 ID 列表是为了防止用户重复注册同一个认证器。正确设置该列表后，如果用户试图注册同一个认证器，浏览器会中止流程并抛出 <code>InvalidStateError</code>。</p>\n<p>最后，别忘了将挑战等一些后续可能会用到的信息临时存储起来。Session 就是一个很好的选择。</p>\n<p>将所有信息发送到浏览器之后，我们应该可以构建出新建凭证所需的参数了。由于有多个参数需要以 <code>Uint8Array</code> 的形式传入，我们可以准备一个简单的工具函数帮我们将 Base64 的字符串转为 <code>Uint8Array</code>。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function str2ab(str){\r\n    return Uint8Array.from(window.atob(str), c=&gt;c.charCodeAt(0));\r\n}</pre>\n<p>除了 <code>challenge</code>, <code>rp</code>, <code>user</code> 和 <code>excludeCredentials</code> 几部分需要你根据具体情况设置外，上文提到的其他参数一般可以这么设置：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">publicKey: {\r\n    challenge, // 自行设置\r\n    rp, // 自行设置\r\n    user, // 自行设置\r\n    pubKeyCredParams: [\r\n        {\r\n            type: \"public-key\",\r\n            alg: -7 // ES256\r\n        },\r\n        {\r\n            type: \"public-key\",\r\n            alg: -257 // RS256\r\n        }\r\n    ],\r\n    authenticatorSelection: {\r\n        userVerification: \"discouraged\",\r\n        authenticatorAttachment: null // 除非用户指定，大部分情况下无需指定\r\n    },\r\n    excludeCredentials, // 自行设置\r\n    timeout: 60000\r\n}</pre>\n<p>然后就是传入 <code>navigator.credentials.create()</code>，拿到 <code>PublicKeyCredential</code>。如果一切顺利，接下来我们就需要考虑如何将返回的内容传回依赖方了。由于我们拿到的很多都是 <code>ArrayBuffer</code>，我们需要将其进行编码。再准备一个工具函数吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function array2b64String(a) {\r\n    return window.btoa(String.fromCharCode(...a));\r\n}</pre>\n<p>然后适当处理，我们就可以得到一个方便传输的 JSON 字符串了：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({publicKey}).then((credentialInfo) =&gt; {\r\n    const publicKeyCredential = {\r\n        id: credentialInfo.id,\r\n        type: credentialInfo.type,\r\n        rawId: array2b64String(new Uint8Array(credentialInfo.rawId)),\r\n        response: {\r\n            clientDataJSON: array2b64String(new Uint8Array(credentialInfo.response.clientDataJSON)),\r\n            attestationObject: array2b64String(new Uint8Array(credentialInfo.response.attestationObject))\r\n        }\r\n    };\r\n    return publicKeyCredential;\r\n}).then(JSON.stringify).then((authenticatorResponseJSON) =&gt; {\r\n    // 可以发送了\r\n}).catch((error) =&gt; {\r\n    console.warn(error); // 捕获错误\r\n})</pre>\n<p>依赖方收到数据以后，还需要做三件事：验证挑战、存储凭证 ID 和存储公钥。如果数据解码顺利，且收到的挑战和之前发送的一致，就可以认为注册成功，将凭证 ID 及公钥与用户关联起来。这一步有很多第三方库可以帮我们做，对于基础实现我们就不深入探究了。</p>\n<blockquote><p>由于不同厂商的认证器的实现方式不同，<strong>我们并不能保证凭证 ID 一定是全局唯一的</strong>，也就是说，凭证 ID 有可能碰撞——即使这些凭证实际上是不同的。依赖方在实现凭证 ID 的存储及查找时，需要注意和用户 ID 结合进行存储或查找，或是直接在注册认证器时在服务器端对比阻止相同的凭证 ID。</p></blockquote>\n<hr><p>接下来就可以进行验证了。某天，用户点击了验证按钮准备登录，于是浏览器发送了验证请求到依赖方，同时附上要登录的用户名。接下来依赖方至少需要发送两项内容给浏览器：<strong>挑战和用户已绑定的凭证 ID 列表（即 <code>allowCredentials</code>）。</strong></p>\n<p>之后前端的处理流程就和注册时基本一致了。只是需要注意验证流程中获取到的 <code>PublicKeyCredential</code> 的结构和注册时的稍有不同。</p>\n<p>当浏览器将数据传回后，依赖方需要做的事情就比之前要麻烦一些了。依赖方需要验证挑战，并用之前存储的公钥验证签名和签名计数。同样地，这一步有很多第三方库可以帮我们做。最后，如果验证全部通过，我们就可以允许用户登录了。</p>\n<p>到目前为止，我们已经实现了一个简单的 WebAuthn 验证服务。不过这只是一个最基础的实现，对于很多高安全要求的身份认证这是远远不够的。因此，我们需要摆脱对第三方库的依赖，深入了解 WebAuthn。你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分，不过对于基础的 WebAuthn 实现，我们的旅程就到这里了。</p>\n<h2>拓展阅读</h2>\n<p>如果你的目标只是快速了解如何开发 WebAuthn，那么你阅读到这里就可以了。同时，上一节例子中的部分代码来自于我为了这篇文章开发的 WordPress 插件 WP-WebAuthn，这个插件可以为你的 WordPress 启用 WebAuthn 无密码登录（并非二步验证），你可以查阅插件的 <a href=\"https://github.com/yrccondor/wp-webauthn\">GitHub 存储库</a>了解更多，也可以自己安装试一试。</p>\n<p>如果你正在使用 Chrome 开发，Chrome 87+ 版本添加了一个 WebAuthn 开发者面板，可以帮助你在没有任何实体验证器的情况下开发 WebAuthn 功能。你可以在 Google 的<a href=\"https://developers.google.com/web/tools/chrome-devtools/webauthn\">这篇文章</a>中了解更多。不够，如果你正在使用 Firefox，很遗憾目前我还没有找到对应的开发工具或是浏览器扩展可用。</p>\n<p>如果你希望了解更多关于非对称加密的数学证明，可以查阅阮一峰老师的<a href=\"http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html\">这篇文章</a>。</p>\n<p>如果你希望了解更多关于 Credential Management API 的信息，可以查阅<a href=\"https://medium.com/dev-channel/sign-in-on-the-web-credential-management-api-and-best-practices-d21aed14b6fe\">这篇文章</a>（英文）。</p>\n<p>如果你希望了解更多 WebAuthn 的细节，可以继续往下阅读。<span></span></p>\n<h1>深入了解 WebAuthn</h1>\n<p>如上文所说，如果摆脱对第三方库的依赖，或是要实现更安全的 WebAuthn，我们必须深入了解 WebAuthn。在这一部分中，我们会详细讨论上文没有提到的一些概念和参数，并了解 WebAuthn 中各类数据的结构以实现解码与验证。先来看一看一些进阶的选项吧。</p>\n<h2>进阶选项</h2>\n<p>没错，上文提到的传入 <code>navigator.credentials.create()</code> 和 <code>navigator.credentials.get()</code> 方法的参数其实只是所有参数的一部分。对于 <code>create()</code>，我们还可以配置这些可选内容（上文提及的已省略）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        rp: {\r\n            icon\r\n        },\r\n        user: {\r\n            icon\r\n        },\r\n        attestation,\r\n        authenticatorSelection: {\r\n            requireResidentKey\r\n        },\r\n        extensions\r\n    }\r\n})</pre>\n</pre>\n<ul>\n<li>\n<code>rp.icon: String</code> 和 <code>user.icon</code>：是的，你可以为依赖方和用户设置图标，可以使用 HTTPS URL 或 Base64，一般长度不能超过 128 字节，不过大部分浏览器不会显示图标，或是有非常小的图片体积限制，所以一般没有使用这一属性的必要</li>\n<li>\n<code>attestation: String</code>：表明依赖方是否需要证明。可选三个值：\n<ul>\n<li>\n<code>none</code>：（默认）不需要证明。如上文所述，依赖方不关心证明，因此认证器不会签名。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n<li>\n<code>indirect</code>：依赖方需要证明，但证明方式可由认证器选择。在支持匿名证明的认证器上，认证器会通过匿名证明的方式签名挑战，并向依赖方提供签名方式等信息</li>\n<li>\n<code>direct</code>：依赖方要求直接证明。此时认证器会使用烧录在认证器中的公钥进行签名，同时向依赖方提供签名方式等信息以供依赖方验证认证器是否可信。更多信息可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节</li>\n</ul>\n</li>\n<li>在 <code>authenticatorSelection</code> 中，我们还可以设置两个可选属性：\n<ul>\n<li>\n<code>authenticatorSelection.requireResidentKey: Boolean</code>：是否要求将私钥钥永久存储于认证器中。默认值为 <code>false</code>。对于 iOS/iPad OS 13，必须设置为 <code>false</code>，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n<li>\n<code>extensions: Object</code>：WebAuthn 扩展，可以提供规范之外的配置和响应。由于实际情况中很少会使用这一特性，我们不会在这篇文章中讨论它</li>\n\n<blockquote><p>将 <code>requireResidentKey</code> 设置为 <code>true</code> 可以实现无用户名的登录，即认证器同时替代了用户名和密码。需要注意的是，尽管大部分认证器可以实现无限对公私钥，<strong>但能永久存储的私钥数量是有限的</strong>（对于 Yubikey，这通常是 25），因此只应在真正需要的时候启用此特性。我们会在“<a href=\"https://flyhigher.top/#login-without-username\">无用户名登录</a>”一节中详细讨论原因。</p></blockquote>\n<blockquote><p><strong>如果你没有高安全需求（如银行交易等），请不要向认证器索取证明</strong>，即将 <code>attestation</code> 设置为 \"none\"。对于普通身份认证来说，要求证明不必要的，且会有浏览器提示打扰到用户。</p></blockquote>\n<blockquote><p>Android 暂时无法实施用户验证，进而会导致依赖方验证失败。你可以在<a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=997538\">这里</a>追踪这个特性的实现情况。</p></blockquote>\n<blockquote>\n<p>对于 <code>extensions</code>，由于目前浏览器支持和应用范围有限，我们不会在这篇文章中涉及，不过你可以看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    uvm: true, // 要求认证器返回用户进行验证的方法\r\n    txAuthSimple: \"Please proceed\" // 在认证器上显示与交易有关的简短消息\r\n}</pre>\n<p>你可以在<a href=\"https://www.w3.org/2019/01/webauthn-extensions.html\">这个页面</a>了解更多关于 <code>extensions</code> 的信息。</p>\n</blockquote>\n<p>对于 <code>get()</code>，我们其实只有一个可选内容没讲了，即 <code>extensions</code>。和上文一样，我们不会在这篇文章中讨论它。</p>\n<p>就这些了！<span></span></p>\n<h2>手动解个码</h2>\n<p>是时候看看如何手动解码了。我们将会在这一节中讨论认证器返回的数据的结构以及如何正确地解码它们。</p>\n<p>首先我们来看看如何处理注册过程中认证器发回的数据。假设所有 <code>ArrayBuffer</code> 类型的值都被正确地以 Base64 编码，且后端已经将 JSON 的字符串解析为字典。先来复习一下，我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"ZRBkDBCEtq...9XY8atOcbg\",\r\n    type: \"public-key\",\r\n    rawId: \"ZRBkDBCEtq...9XY8atOcbg==\",\r\n    response: {\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...i5jcmVhdGUifQ==\",\r\n        attestationObject: \"o2NmbXRkbm9uZWd...xNHuAMzz2LxZA==\"\r\n    }\r\n}</pre>\n<p>这里的 <code>id</code> 就是凭证的 ID，如果验证正确，我们最终要将它存储起来并于用户关联。同时可以看到 Base64 编码后的 <code>rawId</code> 其实和 <code>id</code> 是一致的（不过 <code>id</code> 是 Base64URL 编码的）。而 <code>type</code> 则一定是 \"public-key\"。</p>\n<p>不过，我们主要关心的还是 <code>respose</code> 中的两项内容。首先是 <code>clientDataJSON</code>。它的处理比较简单，看名字就知道，它应该是一个 JSON 字符串。</p>\n<blockquote><p>小技巧：如果你看到一个 Base64 编码的字符串以 \"ey\" 开头，那么它大概率是一个 Base64 编码的 JSON。</p></blockquote>\n<p>将<code>clientDataJSON</code> Base64 解码再 JSON 解码之后我们就能得到一个字典：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"NI4i1vsNmP2KHcmyFnBCKRVQPfHgg34SsYZUOPZY2lM\",\r\n    extra_keys_may_be_added_here: \"do not compare clientDataJSON against a template. See https://goo.gl/yabPex\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>结构一目了然。在这里，我们需要验证三项内容：</p>\n<ul>\n<li>\n<code>challenge</code> 和之前发送的一致</li>\n<li>\n<code>origin</code> 为创建凭证的页面的源（协议+主机名+端口号，并非 URL）</li>\n<li>\n<code>type</code> 为 \"webauthn.create\"</li>\n</ul>\n<p>同时可以注意到有一个奇怪的 <code>extra_keys_may_be_added_here</code>。这其实是 Google 在 Chrome 中搞的一点小把戏，有一定概率会出现，提醒我们需要将 JSON 解析后再验证键值以防额外插入的键值影响验证。具体信息你可以访问那个 URL 看一看。</p>\n<p>对于 Firefox，我们会多得到两项 <code>clientExtensions</code> 和 <code>hashAlgorithm</code> ，分别指明了客户端扩展数据和签名算法。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"3-4\">{\r\n    challenge: \"dg6ost6ujhAA0g6WqLe-SOOH-tbhvjW9Sp90aPKlLJI\",\r\n    clientExtensions: {},\r\n    hashAlgorithm: \"SHA-256\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>由于本文不考虑扩展数据，因此我们可以不考虑 <code>clientExtensions</code>。同时由于目前规范中指定的签名算法只有 SHA-256 一种，因此现阶段我们也可以简单地忽略 <code>hashAlgorithm</code>。</p>\n<p><code>clientDataJSON</code> 很简单地就处理完了。接下来我们要来看看 <code>attestationObject</code>。先来看看 <code>attestationObject</code> 的结构图示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\" alt=\"attestationObject 的结构\" width=\"1056\" height=\"532\" class=\"aligncenter size-full wp-image-2245\"></a>\n<p><code>attestationObject</code> 是 CBOR 编码后再被 Base64 编码的，因此我们需要额外对其进行 CBOR 解码。</p>\n<blockquote><p>CBOR (Concise Binary Object Representation, 简明二进制对象表示) 是一种多应用于物联网领域的编码方式，你可以将它看作体积更小、更方便物联网传输的二进制 JSON。大部分语言都可以找到对应的 CBOR 解码库。</p></blockquote>\n<p>我们当然不会手解 CBOR，直接来看看解开之后的样子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"none\",\r\n    attStmt: {},\r\n    authData: [211, 217, 43, 24, 199, ..., 97, 238, 166, 67, 107]\r\n}</pre>\n<p>这些键值的含义如下：</p>\n<ul>\n<li>\n<code>fmt</code>：标明证明的格式。WebAuthn 预定义了几种格式，分别为：\n<ul>\n<li>\n<code>none</code>：没有证明</li>\n<li>\n<code>packed</code>：为 WebAuthn 优化的证明格式</li>\n<li>\n<code>android-safetynet</code>：Android 使用的格式</li>\n<li>\n<code>android-key</code>：又是 Android 使用的格式</li>\n<li>\n<code>fido-u2f</code>：FIDO U2F 认证器使用的格式</li>\n<li>\n<code>tpm</code>：TPM 可信平台模块使用的格式</li>\n</ul>\n</li>\n<li>\n<code>attStmt</code>：证明对象，具体格式根据 <code>fmt</code> 的不同会有所不同</li>\n<li>\n<code>authData</code>：包含公钥、签名计数等来自认证器的数据</li>\n</ul>\n<p>诶，例子里的 <code>attStmt</code> 怎么是空的？还记得之前说的吗？大部分情况下，<strong>如果依赖方不要求证明，那么认证器不会签名挑战</strong>，于是 <code>fmt</code> 会变为 \"none\"，<code>attstmt</code> 会为空。如果不是高安全要求，我们可以只对这一种情况做支持。</p>\n<blockquote><p>注意，部分情况下 Firefox 会在不要求证明（即 <code>attestation</code> 为 \"none\"）时会返回 <code>fmt</code> 为 \"packed\" 的证明。<strong>这是符合规范的。</strong>此时认证器会进行自证明，你可以视情况进行处理。具体可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>对于非 \"none\" 的 <code>fmt</code> 我们稍后再谈，现在我们先来看看 <code>authData</code>。来复习一下 <code>authData</code> 的结构：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\" alt=\"authData 的结构\" width=\"1056\" height=\"384\" class=\"aligncenter size-full wp-image-2240\"></a>\n<p>对于它的解码比较简单粗暴，我们要做的就是根据图示将它切开，然后适当地转换类型。其中各部分的含义如下：</p>\n<ul>\n<li>\n<code>rpIdHash</code>：如其名，SHA-256 的 <code>rpId</code>，长度 32 字节</li>\n<li>\n<code>flags</code>：标识认证状态，长度 1 字节。其中 8 位分别为：\n<ul>\n<li>\n<code>ED</code>：是否有扩展数据</li>\n<li>\n<code>AT</code>：是否包含 <code>attestedCredentialData</code>。通常注册认证器时会包含 <code>attestedCredentialData</code>，而验证时不包含</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>\n<code>UV</code>：用户是否已验证</li>\n<li>保留位</li>\n<li>\n<code>UP</code>：用户是否在场</li>\n</ul>\n</li>\n<li>\n<code>signCount</code>：签名计数，长度 4 字节</li>\n<li>\n<code>attestedCredentialData</code>：包含公钥等凭据数据，变长。其结构如下：\n<ul>\n<li>\n<code>aaguid</code>：认证器的 AAGUID (Authenticator Attestation GUID)，对于同一型号的认证器，它们的 AAGUID 是相同的</li>\n<li>\n<code>credentialIdLength</code>：标识 <code>credentialId</code> 的长度，长度 2 字节</li>\n<li>\n<code>credentialId</code>：凭证 ID，和 <code>rawId</code> 一致，长度由 <code>credentialIdLength</code> 定义</li>\n<li>\n<code>credentialPublicKey</code>：CBOR 编码的 COSE 格式的凭证公钥，变长</li>\n</ul>\n</li>\n<li>\n<code>extensions</code>：扩展数据，变长，本文不讨论</li>\n</ul>\n<blockquote><p>出于隐私考虑，如果不要求证明，认证器会以 0 填充 AAGUID。</p></blockquote>\n<p>如果你的后端在使用 Node.js，这里有个工具函数可以帮你完成这一步（不考虑 <code>extensions</code>）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function parseAuthData(buffer){\r\n    let rpIdHash = buffer.slice(0, 32);\r\n    buffer = buffer.slice(32);\r\n  \r\n    let flagsBuf = buffer.slice(0, 1);\r\n    buffer = buffer.slice(1);\r\n\r\n    let flagsInt = flagsBuf[0];\r\n    let flags = {\r\n        up: !!(flagsInt &amp; 0x01),\r\n        uv: !!(flagsInt &amp; 0x04),\r\n        at: !!(flagsInt &amp; 0x40),\r\n        ed: !!(flagsInt &amp; 0x80),\r\n        flagsInt\r\n    }\r\n\r\n    let counterBuf = buffer.slice(0, 4);\r\n    buffer = buffer.slice(4);\r\n  \r\n    let counter = counterBuf.readUInt32BE(0);\r\n\r\n    let aaguid = undefined;\r\n    let credID = undefined;\r\n    let COSEPublicKey = undefined;\r\n\r\n    if(flags.at) {\r\n        aaguid = buffer.slice(0, 16);\r\n        buffer = buffer.slice(16);\r\n\r\n        let credIDLenBuf = buffer.slice(0, 2);\r\n        buffer = buffer.slice(2);\r\n\r\n        let credIDLen = credIDLenBuf.readUInt16BE(0);\r\n        credID = buffer.slice(0, credIDLen);\r\n\r\n        buffer = buffer.slice(credIDLen);\r\n        COSEPublicKey = buffer;\r\n    }\r\n\r\n    return {rpIdHash, flagsBuf, flags, counter, counterBuf, aaguid, credID, COSEPublicKey}\r\n}</pre>\n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>解开后，依赖方至少需要做四件事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>存储签名计数</li>\n<li>存储公钥</li>\n</ol>\n<blockquote><p>签名计数不一定从 0 开始。</p></blockquote>\n<p>对于公钥，也就是 <code>credentialPublicKey</code>，我们需要多一次 CBOR 解码，然后就可以得到类似这样的公钥：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    kty: \"EC\",\r\n    alg: \"ECDSA_w_SHA256\",\r\n    crv: \"P-256\",\r\n    x: \"ZGQALNfqo0L7HFYQHFHCS/X5db49z0ePnuQEs3w3X8w=\",\r\n    y: \"6qYxhnjYuez/Q8N6vX7nIIGfxFWdZ25NzQfZYuYOalA=\"\r\n}</pre>\n<p>然后可以选择适当的方法将其存储起来，之后的步骤本文就不再赘述了。现在，将目光拉回来，让我们看看包含证明的 <code>attestationObject</code> 是怎么样的。我们来看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"packed\",\r\n    attStmt: {\r\n        alg: -7,\r\n        sig: [48, 70, 2, 33, 0, ..., 132, 78, 46, 100, 21],\r\n        x5c: [\r\n            [48, 130, 2, 189, 48, 130, 1, 165, 160, 3, ..., 177, 48, 125, 191, 145, 24, 225, 169, 41, 248]\r\n        ]\r\n    },\r\n    authData: [211, 217, 43, 24, 199, ..., 158, 54, 87, 126, 54]\r\n}</pre>\n<p>这里有一个使用 \"packed\" 格式的证明。此时，<code>attStmt</code> 中包含三个值：</p>\n<ul>\n<li>\n<code>alg</code>：签名算法</li>\n<li>\n<code>sig</code>：签名值</li>\n<li>\n<code>x5c</code>：X.509 编码的证书链</li>\n</ul>\n<p>我们不会在这一节中详述对签名的验证。要了解更多信息，你可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。现在，让我们来看看如何处理验证过程中认证器发回的数据。我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"hmqdxPLit9...BWeVxZqdvU\",\r\n    type: \"public-key\",\r\n    rawId: \"hmqdxPLit9V...BWeVxZqdvU=\",\r\n    response: {\r\n        authenticatorData: \"09krGMcWTf...UFAAAABA==\",\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...XRobi5nZXQifQ==\",\r\n        signature: \"UsXZV3pvT3np8btj6V0g...WBkaqyt88DrD40qh+A==\",\r\n        userHandle: \"MmYxNWYzZjQyZjM...Tg2ZDY4NzhlNw==\"\r\n    }\r\n}</pre>\n<p><code>id</code>, <code>rawId</code> 和 <code>type</code> 和之前一样，这里就不再赘述了。让我们来看看 <code>response</code>。首先是 <code>clientDataJSON</code>，和之前的解法一样，要验证的内容也一样，只是 <code>type</code> 从 \"webauthn.create\" 变成了 \"webauthn.get\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"bnkd2CmrEuvKnAFXs2QlC3SKlg4XFvGtP4HJL1yEWyU\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.get\"\r\n}</pre>\n<p>然后是 <code>userHandle</code>。前面讲过，这是认证器在创建凭证时的用户 ID。如果用户在使用 U2F 认证器，很可能这一项为空，所以大部分情况下我们不关心这一项。</p>\n<p>接着来看 <code>authenticatorData</code>。这其实就是之前的 <code>attestedCredentialData</code>，只是这次不包含公钥。以相同的方式切开数据，我们应该可以得到 <code>rpIdHash</code>, <code>flags</code>和 <code>signCount</code> 三项。此时，依赖方至少需要做这三样事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>验证签名计数大于之前存储的计数，并更新存储的计数</li>\n</ol>\n<blockquote><p>如果签名计数比之前的小，那么这个认证器很可能是伪造的，应该中止验证并返回验证失败。同时，签名计数不一定每次按 1 递增，通常只要计数比此前的大就认为计数检查通过。</p></blockquote>\n<p>最后，我们来看 <code>signature</code>，也就是签名。不过这个签名不是简单的对挑战的签名，具体算法如图所示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\" alt=\"签名过程\" width=\"1034\" height=\"587\" class=\"aligncenter size-full wp-image-2231\"></a>\n<p>计算签名时，认证器会将 <code>authenticatorData</code> 与 <code>clientDataHash</code>（也就是 <code>clientDataJSON</code> 的 SHA-256 Hash）拼接起来，并使用对应的私钥签名。依赖方应该使用对应的公钥将其解密，并验证内容是否是 <code>authenticatorData</code> 与 <code>clientDataHash</code> 的拼接。这部分的计算不在本文的讨论范围内。</p>\n<p>最后，如果全部验证通过，返回验证成功。<span></span></p>\n<h2>验证认证器</h2>\n<p>WebAuthn 已经很安全了，但有的时候我们还要让它更安全一点。比如，如果用户在使用伪造的或是自制的认证器，认证器的安全性就得不到保证。此时，依赖方就需要验证认证器是否是可信的认证器。</p>\n<blockquote><p>这一过程仅发生在注册认证器时。此时，如果认证器验证通过，就可以存储公钥，后续步骤和之前描述的一致。</p></blockquote>\n<blockquote><p>再次说明，如果不是对安全性有极高的要求，向认证器索取证明以验证认证器是否可信是没有必要的。此外，验证认证器需要依赖方自行维护可信认证器列表，大大增加了维护的复杂性。</p></blockquote>\n<p>在调用 <code>navigator.credentials.create()</code> 时，我们可以将 <code>attestation</code> 设置为非 \"none\" 来向认证器索取证明。除无证明外，WebAuthn 定义了四种证明方式：</p>\n<ul>\n<li>Basic Attestation (Basic) ：基础的证明方式，认证器会使用认证器私钥签名</li>\n<li>Self Attestation (Self) ：自证明，认证器会使用凭证私钥签名</li>\n<li>Attestation CA (AttCA) ：认证器会使用多个证明私钥之一签名</li>\n<li>Elliptic Curve based Direct Anonymous Attestation (ECDAA) ：通过 <a href=\"https://en.wikipedia.org/wiki/Direct_Anonymous_Attestation\">DAA</a> 实现的匿名证明</li>\n</ul>\n<blockquote><p>和验证过程一样，这里签名的目标是 <code>authenticatorData</code> 和 <code>clientDataHash</code> 的连接。</p></blockquote>\n<p>还记得 <code>create()</code> 时 <code>attestation</code> 可选的三个值吗？这个值会决定认证器最终使用哪种方式进行证明。复习一下：</p>\n<ul>\n<li>\n<code>none</code>：大部分情况下认证器会选择不进行证明，部分认证器会进行自证明。此时 AAGUID 会被 0 填充</li>\n<li>\n<code>indirect</code>：认证器会试图通过替换 AAGUID 和选择合适的证明方式来进行匿名证明，具体方式由认证器选择</li>\n<li>\n<code>direct</code>：认证器会提供最直接的证明信息</li>\n</ul>\n<p>注意，大部分情况下，当认证器需要向依赖方证明自己可信时需要提供认证器公钥，<strong>这会触发浏览器提示，只有用户同意后认证器才会进行证明，否则认证器将不提供证明。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\" alt=\"浏览器提示\" width=\"446\" height=\"283\" class=\"aligncenter size-full wp-image-2217\"></a>\n<blockquote><p>为什么浏览器会说“安全密钥的品牌和型号”？事实上，为了避免用户通过认证器证书被跨依赖方追踪，FIDO 要求使用相同认证器证书的认证器的数量不能少于 100,000。于是大部分认证器厂商会选择<strong>让同一型号的认证器共用同一份证书。</strong>因此，浏览器的会询问用户是否同意“查看安全密钥的品牌和型号”。</p></blockquote>\n<blockquote><p>Android Safety Net 不会向用户询问是否同意，而是会静默进行证明。</p></blockquote>\n<p>当证明不为空时，依赖方收到数据后根据 <code>attestationObject.fmt</code> 的不同，需要选择不同的验证方式来验证认证器的可信情况。出于篇幅原因，这里我们不会讨论每一种 <code>fmt</code> 的验证方式，更多信息你可以查阅 <a href=\"https://www.w3.org/TR/webauthn/#defined-attestation-formats\">W3C 文档</a>。</p>\n<p>当 <code>fmt</code> 为 <code>packed</code> 时，<code>attestationObject.attStmt</code> 可能会有三种格式：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// 自证明\r\n{\r\n    alg, // 算法\r\n    sig // 签名\r\n}\r\n// 基础或证明 CA 证明\r\n{\r\n    alg,\r\n    sig,\r\n    x5c // X.509 证书链\r\n}\r\n// 椭圆曲线证明\r\n{\r\n    alg,\r\n    sig,\r\n    ecdaaKeyId // ECDAA-Issuer 公钥标识符\r\n}</pre>\n<p>此时，依赖方需要检查证书符合预期格式并检查证书是否在可信链上。首先，如果证明中既没有 <code>ecdaaKeyId</code> 也没有 <code>x5c</code>，就说明这个证明使用的是自证明，只需使用认证器提供的公钥验证即可；如果有 <code>x5c</code>，那么就需要验证 <code>x5c</code> 中的证书是否在可信链上。将 <code>x5c</code> 中的每个证书以 Base64 编码，按 64 个字符切开，并在头尾加上 <code>-----BEGIN CERTIFICATE-----</code> 和 <code>-----END CERTIFICATE-----</code>就能得到一个证书字符串了。之后，依赖方需要验证证书是否可信。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function base64ToPem(b64cert){\r\n    let pemcert = '';\r\n    for(let i = 0; i \n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>至于 <code>ecdaaKeyId</code>，由于目前应用较少，处理方法可能需要你另寻资料了。检查证书的具体步骤已经超出了本文的范围，具体可以查阅<a href=\"https://medium.com/@herrjemand/verifying-fido2-packed-attestation-a067a9b2facd\">这篇文章</a>（英文）。</p>\n<blockquote><p>你可以在 <a href=\"https://fidoalliance.org/metadata/\">FIDO Metadata Service</a> 找到各大厂商认证器的可信证书链。</p></blockquote>\n<p>当在 Android 上调起 WebAuthn 时，大部分情况下 <code>fmt</code> 将会为 <code>safety-net</code>。此时 <code>attestationObject.attStmt</code> 的结构会是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    ver: \"200616037\",\r\n    response: {\r\n        type: \"Buffer\",\r\n        data: [101, 121, 74, 104, 98, ..., 115, 104, 104, 82, 65]\r\n    }\r\n}</pre>\n<p>此时，<code>clientDataJSON</code> 中还会出现 <code>androidPackageName</code> 键，值是调起 WebAuthn 验证的应用的包名，如 Chrome 就是 \"com.android.chrome\"。</p>\n<p>在这个证明中，<code>data</code> 其实是一个 JWT 字符串，我们可以将它编码为字符串并将其按照 JWT 进行解码（别忘了验证 JWT 签名）。最终我们会得到一个类似这样的 Payload：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    nonce: \"0QAurN4F9wik6GEkblDJhGuf4kuaqZn5zaaxlvD1hlA=\",\r\n    timestampMs: 1584950686460,\r\n    apkPackageName: \"com.google.android.gms\",\r\n    apkDigestSha256: \"2BQHno+bmWWwdLUYylS8HLt5ESJzci3nt2uui71ojyE=\",\r\n    ctsProfileMatch: true,\r\n    apkCertificateDigestSha256: [\r\n        \"8P1sW0EPicslw7UzRsiXL64w+O50Ed+RBICtay2g24M=\"\r\n    ],\r\n    basicIntegrity: true,\r\n    evaluationType: \"BASIC\"\r\n}</pre>\n<p>其中包含了有关设备状态的一些信息。比如说，如果 <code>ctsProfileMatch</code> 为 <code>false</code>，那么该设备很有可能被 root 了。对于高安全要求的场景，我们可以视情况进行验证。</p>\n<p>同时我们可以在 JWT Header 中验证证明的有效性。我们应该能取得这样的 Header：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    alg: \"RS256\",\r\n    x5c: [\r\n        \"MIIFkzCCBHugAwIBAgIR...uvlyjOwAzXuMu7M+PWRc\",\r\n        \"MIIESjCCAzKgAwIBAgIN...UK4v4ZUN80atnZz1yg==\"\r\n    ]\r\n}</pre>\n<p>这里的结构就和上方的 <code>x5c</code> 验证类似了。具体步骤可以参考<a href=\"https://medium.com/@herrjemand/verifying-fido2-safetynet-attestation-bd261ce1978d\">这篇文章</a>（英文）。</p>\n<p>其他所有格式的验证方式也都可以在<a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">这篇文章</a>（英文）中找到。<span></span></p>\n<h2>无用户名登录</h2>\n<p>认证器已经代替了密码，可是这还不够！在进行第一因素认证（即使用 WebAuthn 登录）时，我们还是需要输入用户名，然后才能进行身份认证。懒惰是第一生产力，我们能不能不输入用户名就进行身份认证呢？实际上，大部分认证器都允许我们无用户名登录。<strong>而这一特性的核心就是 Resident Key 客户端密钥驻留。</strong></p>\n<p>你可以思考一下，为什么普通的 WebAuthn 为什么不能实现无用户名登录？事实上，大部分认证器为了实现无限对公私钥，会将私钥通过 Key Warp 等技术加密后包含在凭证 ID 中发送给依赖方，这样认证器本身就不用存储任何信息。不过，这就导致需要身份认证时，依赖方必须通过用户名找到对应的凭证 ID，将其发送给认证器以供其算出私钥。</p>\n<blockquote><p>Yubikey 实现了一个基于 HMAC 的算法，认证器可以在私钥不离开认证器的前提下（常规的 Key Warp 算法中实际上私钥离开了认证器）通过一些输入和凭证 ID 重新计算私钥，你可以阅读<a href=\"https://www.yubico.com/blog/yubicos-u2f-key-wrapping/\">这篇文章</a>了解更多。</p></blockquote>\n<blockquote><p>客户端通过凭证 ID 查找对应认证器的算法根据系统的不同是不同的。通常凭证 ID 中会包含认证器信息，因此系统可以通过凭证 ID 找到对应的认证器。</p></blockquote>\n<p>要避免输入用户名，我们可以要求认证器将私钥在自己的内存中也存储一份。这样，依赖方无需提供凭证 ID，认证器就可以通过依赖方 ID 找到所需的私钥并签名公钥。以下是具体流程：</p>\n<p>注册时：</p>\n<ol>\n<li>依赖方请求新建凭证，同时要求启用客户端密钥</li>\n<li>认证器生成一对公私钥，并将私钥存储在永久内存中且与依赖方 ID 及用户 ID 绑定，随后将公钥发送给依赖方以供存储</li>\n<li>依赖方将用户 ID 即公钥与用户绑定</li>\n</ol><p>验证时：</p>\n<ol>\n<li>依赖方请求验证，但不必提供除依赖方 ID 以外的更多信息</li>\n<li>用户选择认证器</li>\n<li>认证器根据依赖方 ID 找到对应私钥</li>\n<li>如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录</li>\n<li>确定私钥后，认证器签名挑战并将其返回，同时返回用户 ID</li>\n<li>依赖方通过用户 ID 找到对应用户并用对应公钥检查签名，正确则允许对应用户登录</li>\n</ol><blockquote><p>可以看到，这个特性同时要求认证器存储用户 ID，即上面提到过的 <code>userHandle</code>。依赖方需要根据此信息找到对应用户，因此不支持 <code>userHandle</code> 的 U2F 认证器无法进行无用户名登录。</p></blockquote>\n<blockquote><p>如之前所说，<strong>认证器能永久存储的私钥数量是有限的</strong>，因此只应在真正需要无用户名登录的时候启用此特性。</p></blockquote>\n<blockquote><p>目前暂时没有办法检测认证器是否支持客户端密钥驻留，因此在无用户名验证失败时应 fallback 至常规的 WebAuthn 验证，即向用户询问用户名。</p></blockquote>\n<p>现在让我们来看看如何实现这一特性吧。首先，调用 <code>navigator.credentials.create()</code> 时我们需要注意两个参数：<code>requireResidentKey</code> 必须为 <code>true</code>，<code>userVerification</code> 必须为 \"required\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"5-6\">navigator.credentials.create({\r\n    publicKey: {\r\n        ...\r\n        authenticatorSelection: {\r\n            requireResidentKey: true,\r\n            userVerification: \"required\"\r\n            ...\r\n        },\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Windows Hello <strong>似乎</strong>会存储所有已注册的凭据，因此无论是否指定 <code>requireResidentKey</code>，你都可以通过 Windows Hello 进行无用户名登录。</p></blockquote>\n<p>随后，浏览器会询问用户是否允许认证器存储私钥。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\" alt=\"浏览器提示\" width=\"445\" height=\"285\" class=\"aligncenter size-full wp-image-2208\"></a>\n<p>如果用户同意，认证器会存储私钥，并和普通的 WebAuthn 一样返回信息。不过，依赖方收到数据之后，只需将公钥、用户 ID 与用户关联起来，而不必再将凭证 ID 与用户关联起来。至此注册完成。</p>\n<p>之后，在用户请求登录时，无需再向依赖方提供用户名。同时在传入 <code>navigator.credentials.get()</code> 的参数中也有两个需要注意：<code>userVerification</code> 必须为 \"required\"，同时 <code>allowCredentials</code> 必须为空。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"4-5\">navigator.credentials.get({\r\n    publicKey: {\r\n        ...\r\n        userVerification: \"required\",\r\n        allowCredentials: [],\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Android 暂不支持无用户名验证，空的 <code>allowCredentials</code> 会导致浏览器返回 <code>NotSupportedError</code> 错误。</p></blockquote>\n<p>此时，认证器会根据依赖方 ID 找到对应的私钥。如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录。用户选择后，认证器就会使用对应的私钥签名挑战并将其返回。此时，<code>userHandle</code> 一定不为空。</p>\n<p>依赖方收到数据后，需要将 <code>userHandle</code> 作为用户 ID 找到对应的用户，并使用对应的公钥验证签名。如果验证成功，则认为对应的用户身份认证成功，依赖方可以允许其登录。至此验证结束。</p>\n<blockquote><p>有的时候你可能会需要清除认证器中的密钥。绝大多数认证器都提供了对应的软件以供清除存储的密钥，但大部分情况下这会重置整个认证器，这意味着相关认证器此前的所有凭证均会失效。因此建议不要将日常使用的认证器作为开发测试用的认证器。</p></blockquote>\n<h2>从 U2F 认证迁移</h2>\n<p>如果你的服务此前提供了 U2F 第二因素认证，你可能会希望在将依赖方从 U2F 升级到 WebAuthn 时用户此前注册的 U2F 认证器仍然可用而无需重新注册。由于 WebAuthn 向后兼容 U2F 设备，用户是可以继续使用原有的 U2F 认证器的。不过，由于 WebAuthn 的依赖方 ID 与 U2F 的 <code>appid</code> 并不一定相同，你需要将原有的 U2F <code>appid</code> 随 WebAuthn 流程一起传递给认证器，认证器才能使用正确的私钥进行响应。</p>\n<p>要实现这一点，我们只需要在注册及认证仪式中使用 WebAuthn 的 <code>appid</code> 扩展。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    appid: \"https://example.com\" //U2F appid\r\n}</pre>\n<p>此时认证器便可以得到正确的私钥，之后的流程与正常情况一致；依赖方除了正常的 WebAuthn 流程外，不需要再做任何其它操作。</p>\n<h2>拓展阅读</h2>\n<p>我们的 WebAuthn 之旅到这里就真的结束了。不过，你仍然可以自行探究，了解更多。<strong>本文只是一个粗浅的使用指南</strong>，而被称为“Web 身份认证的未来”的 WebAuthn 的深层还要很多细节值得我们挖掘学习，不过本文不会再继续讨论了。</p>\n<p>如果你想了解更多关于 WebAuthn 的信息，最好的方法是直接阅读 <a href=\"https://www.w3.org/TR/webauthn\">W3C 规范</a>。此外，Yubico 也提供了不错的 <a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn 文档</a>。</p>\n<p>要了解更多认证器存储凭证的信息，你可以阅读<a href=\"https://duo.com/labs/tech-notes/how-security-keys-store-credentials\">这篇文章</a>（英文）。</p>\n<p>如果你想了解更多 Android Safety Net 是怎样运作的，可以观看<a href=\"https://youtu.be/8lv_9mydrjg\">这个视频</a>，并通过 <a href=\"https://developer.android.com/training/safetynet/attestation\">Google 的文档</a>了解 Android Safety Net 的更多信息。</p>\n<p>如果你想方便地调试 WebAuthn，<a href=\"https://webauthn.me/\">webauthn.me</a> 提供了一个非常直观方便的<a href=\"https://webauthn.me/debugger\">调试器</a>。</p>\n<h1>参考资料</h1>\n<p><a href=\"https://www.w3.org/TR/webauthn\">WebAuthn Level 1 规范 - W3C</a><br><a href=\"https://github.com/w3c/webauthn\">WebAuthn Level 2 草案 - W3C</a><br><a href=\"https://blog.techbridge.cc/2019/08/17/webauthn-intro/\">一起来了解Web Authentication - TechBridge 技术共笔部落格</a><br><a href=\"https://medium.com/@herrjemand/introduction-to-webauthn-api-5fd1fb46c285\">Introduction to WebAuthn API - Medium</a><br><a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">WebAuthn/FIDO2: Verifying responses - Medium</a><br><a href=\"https://obeta.me/posts/2019-03-01/WebAuthn%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8\">WebAuthn介绍与使用 - obeta</a><br><a href=\"https://webauthn.io/\">webauthn.io</a><br><a href=\"https://webauthn.guide/\">webauthn.guide</a><br><a href=\"https://webauthn.me/\">webauthn.me</a><br><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion\">Attestation and Assertion - MDN</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Authentication_API\">Web Authentication API - MDN</a>（顺便翻译了一半）<br><a href=\"https://fidoalliance.org/fido-technotes-the-truth-about-attestation/\">FIDO TechNotes: The Truth about Attestation - FIDO Alliance</a><br><a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn Developer Guide - Yubico</a><br><a href=\"https://en.wikipedia.org/wiki/WebAuthn\">WebAuthn - Wikipedia</a><br><a href=\"https://techcommunity.microsoft.com/t5/identity-standards-blog/all-about-fido2-ctap2-and-webauthn/ba-p/288910\">All about FIDO2, CTAP2 and WebAuthn - Microsoft Tech Community</a><br><a href=\"https://webauthn-doc.spomky-labs.com/\">Webauthn Framework</a><br><a href=\"https://zhuanlan.zhihu.com/p/25279015\">如何开发支持 FIDO U2F 登录的网站 - 知乎专栏</a><br></p></pre>\n","link":"https://flyhigher.top/develop/2160.html"},{"title":"NLP 找门：用朴素贝叶斯进行文本分类","date":"2020-01-29 11:39:58","description":"\n<blockquote>\n<p>有一天，神收到了一封垃圾邮件，于是世界上就有了朴素贝叶斯算法。</p>\n<footer>——我瞎编的</footer>\n</blockquote>\n<p>为什么这篇文章的标题是 NLP 找门呢？因为如果你看完了这篇文章，你就可以<strong>准备入门</strong>自然语言处理 (<strong>N</strong>atural <strong>L</strong>anguage <strong>P</strong>rocessing) 了。我会把这篇文章当作一篇彻彻底底的 NLP 入门文章来写，尽量避免“专业高端”词汇和“全是奇怪符号”的式子，这样<strong>只要你有高中数学基础</strong>，就能毫无压力地看完这篇文章，学会使用朴素贝叶斯分类算法分类文本。</p>\n<p>让我们开始吧。</p>\n<h1>所以，啥是朴素贝叶斯？</h1>\n<p>简单来说，朴素贝叶斯 (Naïve Bayes) <strong>是一个简单但高效的分类算法</strong>，在进行不复杂的文本分类时高效且拥有不低的准确度，判断垃圾邮件就是用朴素贝叶斯进行文本分类的一个经典例子。当然朴素贝叶斯分类不仅能用在 NLP 中，在许多分类问题中朴素贝叶斯也有非常好的效果，但我们今天只关注它在 NLP 中的应用。</p>\n<p>要了解朴素贝叶斯，我们要先来了解一下贝叶斯定理。</p>\n<blockquote>\n<p>每增加一个数学公式都会使读者减半。</p>\n<footer>——霍金</footer>\n</blockquote>\n<p>那么，就让我们先来看看贝叶斯定理的公式吧（笑</p>\n<p>$$P(A|B) = \\frac{P(AB)}{P(B)} = \\frac{P(B|A)P(A)}{P(B)}$$</p>\n<p>其实还是很简单的，运用高中的条件概率知识就能理解。本质上，贝叶斯定理给出了一种方法，使得我们可以在 \\(P(A|B)\\) 和 \\(P(B|A)\\) 之间互相转换，因为通常情况下它们是不一样的。</p>\n<p>要更好地理解，请考虑这样一个例子：</p>\n<blockquote><p>假设有一个学校图书馆，图书管理员正为找不到某本书而发愁。已知老师有 70% 的意愿借走这本书，而是学生的意愿是 30%，这个学校的师生比例是 1:10，那么借走这本书的人是老师的概率有多大？</p></blockquote>\n<p>设学校总人数为 \\(T\\)，我们可以很容易地写出这样的一个式子：</p>\n<p>$$\\begin{align} P &amp; = \\frac{T\\cdot\\frac{1}{11}\\cdot 70\\%}{T\\cdot\\frac{1}{11}\\cdot 70\\%+T\\cdot\\frac{10}{11}\\cdot 30\\%} \\\\ &amp; = \\frac{70\\%}{70\\%+10\\times30\\%} \\\\ &amp; = \\frac{7}{37} \\end{align}$$</p>\n<p>这就是贝叶斯定理了！等等，你可能会挠挠头，这哪里是贝叶斯了？别急，如果我们把最上面的式子换个字母的话...</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>在这里，\\(H\\) 指 Hypothesis，即假设，而 \\(E\\) 指 Evidence，即证据。这样，这个式子就很好理解了，在我们上面的例子里，借走书是证据，那么 \\(P(E)\\) 就是某个人选择借走这本书的概率；这个人是老师是假设，那么这个人是老师的概率是 \\(P(H)\\)。<strong>注意这里的概率指在学校中抽一个人是老师的概率，并不是“在借走书的前提下”这个人是老师的概率</strong>，而“在借走书的前提下”这个人是老师的概率应该是 \\(P(H|E)\\)，也正是我们要求的概率。同样地，而“这个人是老师”的前提下借走书的概率就是 \\(P(E|H)\\) 了。</p>\n<p>那么再来看看上面我们凭小学知识就列出的计算式，如果把里面的具体数据换成概率来表示的话，这个式子就会变成...</p>\n<p>$$P(H|E) = \\frac{T\\cdot P(E|H)P(H)}{T\\cdot P(E|H)P(H) + T\\cdot P(E|\\neg H)P(\\neg H)}$$</p>\n<p>好吧，这里解释一下，\\(\\neg\\) 符号表示“非”，所以 \\(P(E|\\neg H)\\) 表示在“这个人不是老师”的前提下借走书的概率。而 \\(T\\cdot P(E|H)P(H)\\) + \\(T\\cdot P(E|\\neg H)P(\\neg H)\\)，即“可能借走书的老师的数量 + 可能借走书的学生的数量”，就是“可能借走书的人的数量”了，也就是 \\(T\\cdot P(E)\\)。上下消去 \\(T\\)，我们就能得到上面的式子了。</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>这就是贝叶斯了定理。如果你还是不太清楚，可以去看看 3Blue1Brown 的<a href=\"https://www.bilibili.com/video/av84799361\">这个视频</a>，图形化的讲解会清晰很多。</p>\n<p>这里我要提一下这个式子里各部分的专有名称了（“专业高端”词汇警告），你可以不记住，直接看后面。</p>\n<ul>\n<li>\\(P(H|E)\\) 叫做 \\(H\\) 的<strong>后验概率</strong>，反之亦然</li>\n<li>\\(P(H)\\) 叫做 \\(H\\) 的<strong>先验概率</strong>，反之亦然</li>\n<li>特别地，我们把 \\(P(E|H)\\) 称作<strong>“似然值”</strong>，即 likelihood</li>\n</ul>\n<p>那什么是朴素贝叶斯呢？按上面所说的，朴素贝叶斯是一种分类算法。简单来说，朴素贝叶斯将一个对象的各个特征考虑为互相独立，然后根据这些特征的概率的乘积来判断对象所属的分类。基本原理如下：</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)} \\propto P(E|H)P(H) = P(H)\\prod_{i}P(W_i|H)$$</p>\n<p>在这里，\\(W_i\\) 指某一对象的第 \\(i\\) 个特征，对于文本分类来说，这就是一段文本中的某个单词。</p>\n<p>朴素贝叶斯之所以“朴素”，是因为它要求<strong>各个特征间是独立的</strong>，在文本分类中也就是各个单词之间互不干扰。虽然思路简单的代价是适用范围变窄，不过由于这样的简化在很多情况下已经足够了，因此实际上朴素贝叶斯的应用范围非常广。<del>你看朴素贝叶斯 <strong>N</strong>aïve <strong>B</strong>ayes 的缩写都是 NB 了，能不厉害吗（逃</del></p>\n<h1>那么，咋分类啊</h1>\n<p>看来你这下完全听懂了呢（笑），是时候看看如何在 NLP 中应用朴素贝叶斯了。和上面一样，我们用一个具体的例子来说明。我们的目标是让电脑学会分类美国共和党和民主党的演讲稿，由于两个党派的演讲风格不同，所以这样的分类在理论上是可行的。</p>\n<div class=\"wp-block-file\">\n<a href=\"https://acdn.flyhigher.top/nlp/material.zip\" download>material.zip</a><a href=\"https://acdn.flyhigher.top/nlp/material.zip\" class=\"wp-block-file__button\" download>下载</a>\n</div>\n<p>上面我们要用到的数据集，你可以下载下来一起动手玩一玩。先说一下数据集的数据结构吧，压缩包里有两个文件，<code>train.txt</code> 将会被当作训练数据集，而 <code>test.txt</code> 则会作为训练结束后的验证数据集。两个文本文件里数据的结构是类似的，就像这样：</p>\n<pre class=\"EnlighterJSRAW\">BLUE WELL I AM SO HONORED AND PERSONALLY UNKNOWNWORD TO BE HERE...\r\nRED THANK YOU . THIS IS QUITE AN INSTITUTION . IT'S GOOD TO BE...</pre>\n<p>每行都是一篇演讲稿，每行的第一个单词指明了这篇演讲稿所属的党派，<code>RED</code> 指共和党，而 <code>BLUE</code> 指民主党。所有单词和符号都已经被转为大写并由空格分隔方便处理。<code>train.txt</code> 有共和党演讲稿和民主党演讲稿各 23 篇，<code>test.txt</code> 有 6 篇共和党演讲稿，12 篇民主党演讲稿。</p>\n<p>明白了？那我们就开始吧。</p>\n<h2>捋捋思路</h2>\n<p>首先，我们需要考虑如何在文本分类中应用朴素贝叶斯。很简单，按朴素贝叶斯的思路，<strong>计算每个词在某一分类下的出现概率，然后将某篇文章的所有词的概率相乘，再乘以该分类的先验概率，就可以得到某篇文章在某一分类下的概率。</strong></p>\n<p>$$P(Class|Article) = P(Class)\\prod_{i}P(Word_i|Class)$$</p>\n<p>各个分类概率都计算完成后，概率最高的那个分类就是这篇文章可能所属的分类。这个思路的核心就是用词决定了文本风格，文本的不同类别用词会有差异，只要能量化这些差异就可以分类文本。在我们的例子中，我们可以从 <code>train.txt</code> 中统计各个词汇的出现情况，然后用 <code>test.txt</code> 中的数据按上面的算法验证我们算法的准确性。</p>\n<p>这个思路很简单也很清晰，但还有一些问题需要解决。<strong>第一，有的时候，我们的测试数据集中可能会出现一个在训练数据集中没有出现过的词语。这个时候，朴素贝叶斯的计算结果会是 0。</strong>如果我们把 0 乘进式子中，那就别想得到正常的结果了。所以，我们还需要对计算某一单词在某一分类中的式子稍加改进。使用拉普拉斯平滑，就可以避免出现概率为 0 的情况。别被名字吓到，拉普拉斯平滑是一种非常简单的平滑方法：在分子上 +1，在分母上加整个取值范围，这样就可以给整个分式加上非常微小的偏移，避免出现 0。</p>\n<p>$$\\begin{align} P(Word_i|Class) &amp; = \\frac{Word_iCountInClass}{AllWordCountInClass} \\\\ &amp; \\approx \\frac{Word_iCountInClass + 1}{AllWordCountInClass + UniqueWordCount} \\end{align}$$</p>\n<p><strong>第二，对于长文本，大部分词语在某一分类中的出现概率是远小于 1 的，加上长文本词汇量大，往往概率相乘的结果会非常小。</strong>受限于计算机处理浮点数的原理，精确处理这么小的数字是很麻烦的。幸好，运用一些简单的数学知识就可以将其转化为更精确的表达，<strong>那就是取对数。</strong></p>\n<p>首先，将概率计算结果取对数并不影响我们的计算结果。因为取对数是一个单调递增的操作，而我们计算概率只是为了排序选择概率最高的分类，因此取对数是不影响我们排序的。而把多项式取对数，等于把多项式的每一项取对数后相加。所以我们有：</p>\n<p>$$\\lg{\\Big(P(Class)\\prod_{i}P(Word_i|Class)\\Big)} = \\lg{P(Class)} + \\sum_i\\lg{P(Word_i|Class)}$$</p>\n<p>大部分情况下，在每一次取对数的时候，要取对数的数字的大小，即 \\(P(Word_i|Class)\\) 尚还在计算机能处理的范围内，<strong>因此我们可以放心地使用取对数的方法</strong>，避免计算机精度不够影响结果。</p>\n<p><strong>第三就是在某些情况下，可能会有部分词语干扰计算结果</strong>，如 and, is 这类的被大量使用的中性词。如果希望得到更好的结果，我们可以维护一个停用词表，在计算时排除停用词即可。或者，我们可以在计算完每个单词的出现数量后，排除数量最多的前 \\(N\\) 个单词，避免这些单词过多地影响计算。</p>\n<h2>写点代码</h2>\n<p>现在我们终于可以开始实战，写点代码了。我会用简单的 Python 来表达思路。好了，理一理思绪，第一步我们要做的，是统计训练数据集中的用词情况。具体来说，根据上面的思考，我们需要统计的有：</p>\n<ul>\n<li>每个单词在各分类中出现的数量</li>\n<li>各分类中的不重复词数量</li>\n</ul>\n<p>用 Python 简单表示如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\"># 读入数据过程略...\r\ndata_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ndata_blue = []\r\ndata_red = []\r\nword_count_blue = {}\r\nword_count_red = {}\r\n\r\nfor line_data in data_raw:\r\n    word_list = line_data.split(\" \") # 分隔单词\r\n    if word_list[0] == \"BLUE\":\r\n        for i in range(1,len(word_list)):\r\n            if not is_excluded(word_list[i]): # 判断是否为停用词\r\n                data_blue.append(word_list[i])\r\n                # 统计单词出现次数\r\n                word_count_blue.setdefault(word_list[i], 0)\r\n                word_count_blue[word_list[i]] += 1\r\n    elif word_list[0] == \"RED\":\r\n        # Class = red 时同理...\r\n\r\n#统计非重复词\r\nunique_words_blue = list(set(data_blue))\r\nunique_words_red = list(set(data_red))</pre>\n<p>训练过程到这里就结束了，计算机已经知道了各政党演讲的用词习惯。很简单吧？接下来我们就要使用测试数据集来测试准确度了。<strong>这里开始就涉及到朴素贝叶斯的计算了</strong>，可能会稍微复杂一点点。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">import math\r\n#读入测试数据过程略...\r\ntest_data_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ntest_data = []\r\n\r\nfor line_data in test_data_raw:\r\n    if line_data[0] == \"BLUE\":\r\n        content_data = line_data.split(\" \").pop(0)\r\n        test_data.append({\"class\": \"blue\", \"content\": content_data})\r\n    elif line_data[0] == 'RED':\r\n        # ...\r\n\r\nfor line_data in test_data:\r\n    posibility_blue = 0\r\n    for word in line_data[\"content\"]:\r\n        # 计算各单词概率，取对数后相加，使用了拉普拉斯平滑\r\n        if word in word_count_blue:\r\n            posibility_blue += math.log((word_count_blue[word]+1)/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n        else:\r\n            posibility_blue += math.log(1/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n    # 最后加上该分类概率的对数\r\n    posibility_blue += math.log(len(data_blue)/(len(data_blue)+len(data_red)))\r\n\r\n    # 计算 Red 同理...</pre>\n<p>计算完成后，我们就得到每篇演讲稿在各分类下的概率了。之后，简单的比较就能得出推断的分类：如果 \\(P(Red|Article)\\) 大于 \\(P(Blue|Article)\\)，那么这篇演讲稿就更可能是共和党的演讲稿，反之则是民主党的演讲稿。</p>\n<p>很好理解吧？那么这么简单的思路，准确性怎么样呢？对于我们的例子，这是我设置了个别停用词后的结果：</p>\n<pre class=\"EnlighterJSRAW\">+-----+-------+--------------+--------------+-------+-------+\r\n|   ID|  Class|        P(Red)|       P(Blue)|  Guess| Status|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|    1|   Blue|  -23204.68377|  -22998.67066|   Blue|      √|\r\n|    2|   Blue|  -16438.44625|  -16137.48257|   Blue|      √|\r\n|    3|   Blue|  -33468.81214|  -32567.61801|   Blue|      √|\r\n|    4|   Blue|    -8606.2193|   -8601.50426|   Blue|      √|\r\n|    5|   Blue|  -12430.97436|  -11935.70662|   Blue|      √|\r\n|    6|   Blue|  -44033.02883|  -43877.55367|   Blue|      √|\r\n|    7|   Blue|   -16947.2851|  -16758.57542|   Blue|      √|\r\n|    8|   Blue|  -26957.26997|  -26889.62444|   Blue|      √|\r\n|    9|   Blue|  -27503.73985|  -27249.21828|   Blue|      √|\r\n|   10|   Blue|   -20528.4457|   -19991.1248|   Blue|      √|\r\n|   11|   Blue|  -20337.96493|  -19860.12831|   Blue|      √|\r\n|   12|   Blue|  -28409.28489|  -28118.98017|   Blue|      √|\r\n|   13|    Red|  -13756.01015|  -14488.11751|    Red|      √|\r\n|   14|    Red|  -17221.22732|  -17710.15936|    Red|      √|\r\n|   15|    Red|  -17397.45136|  -17899.98659|    Red|      √|\r\n|   16|    Red|  -10724.69095|  -11092.77837|    Red|      √|\r\n|   17|    Red|  -10402.40027|  -10859.48681|    Red|      √|\r\n|   18|    Red|   -9371.53792|    -9669.6769|    Red|      √|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|                                      Total: 18/18, 100.0% |\r\n+-----------------------------------------------------------+</pre>\n<p><strong>100% 的准确率哦！</strong>事实上，对于我们的这个例子，就算不设置停用词，我们仍能达到 100% 的分类准确率。朴素贝叶斯分类的确很 NB 呢。</p>\n<h1>更进一步</h1>\n<p>我们的探索到这里就结束了，但如果你有兴趣，完全可以继续探索下去。我们的例子是一个非常简化的例子，在实际情况中，还有很多问题需要解决。比如，对于中文及类似语言，不存在拉丁语系的天然分词结构，而朴素贝叶斯的文本分类是基于单词的，那么<strong>中文的分词就会是个问题；</strong>再比如，对于朴素贝叶斯分类来说，<strong>词语之间的顺序是不影响分类结果的</strong>，但这就会导致“今天心情很好，但昨天不好”和“昨天心情很好，但今天不好”在朴素贝叶斯看来是一样的，要想获得更好的结果，我们必须<strong>考虑词语的顺序。</strong></p>\n<p>这些问题，今天我们就不再深究了，但你可以自己探索。比如，引入思路同样很简洁的马尔科夫链，我们就可以让计算机学会考虑词语间的顺序，不过那就会是另一个话题了。</p>\n","link":"https://flyhigher.top/develop/1989.html"},{"title":"MDx 中增强页面可访问性的细节","date":"2020-01-25 16:45:04","description":"\n<blockquote><p>这篇文章本来是打算发在 <a href=\"https://mdxblog.flyhigher.top/\">MDx Blog</a> 的，不过写到后来发现这篇文章相对来说还是有价值的，于是就将这篇文章转移到了无垠，MDx Blog 则不再发表这篇文章。</p></blockquote>\n<p>从 MDx 开发之初，增强页面的可访问性就被列为了一个重要目标。从 HTML 语义化，到 ARIA 地标，再到 <code>prefers-reduced-motion</code>，随着浏览器对于增强页面可访问性的支持功能越来越多，MDx 也在不断地更新，让更多的人都能毫无困难地浏览、查看由 MDx 渲染的网页。本文会详细说明一些 MDx 中增强页面可访问性的细节，<strong>如果你希望增强自己开发的网页的可访问性，本文可能会对你有所帮助。</strong></p>\n<h1>基础性增强</h1>\n<p>增强可访问性，最重要也是最基础的一点就是 HTML 语义化。通过使用 HTML 5 语义化标签和 ARIA Role 标签，我们可以很方便地<strong>将整个网页在语义上分为几部分，而这将有效地改善屏幕阅读器对网页的分析质量，使视力障碍用户更好地浏览网页。</strong></p>\n<h2>HTML 语义化</h2>\n<p><strong>HTML 语义化属于增强页面可访问性的基础中的基础。</strong>通过使用语义化的 HTML 标签，我们可以方便地为网页中的各部分标记功能而不影响页面样式。随着符合 HTML 5 的现代化网页成为主流，语义化标签已被很大一部分网站所支持，我也不过多赘述了。就举几个常用的“地标性”标签吧：</p>\n<ul>\n<li>\n<code>header</code> 标签标记页眉，默认样式同 <code>div</code>，不要把它和 <code>head</code> 搞混了</li>\n<li>\n<code>main</code> 标签标记页面的主要内容，默认样式同 <code>div</code>\n</li>\n<li>\n<code>article</code> 标签标记文章（在 HTML 5 中它指任何独立或可复用的文本），默认样式同 <code>div</code>\n</li>\n<li>\n<code>footer</code> 标签标记页脚，默认样式同 <code>div</code>\n</li>\n<li>\n<code>nav</code> 标签标记页面导航栏区域，默认样式同 <code>div</code>\n</li>\n<li>\n<code>aside</code> 标签标记侧栏，默认样式同 <code>div</code>\n</li>\n<li>\n<code>section</code> 标签标记“一组内容”，你可以把它看作是划定网页中一块区域的通用标签，默认样式同 <code>div</code>\n</li>\n</ul>\n<p>只要用这些标签替代 <code>div</code> 而不是无脑使用 <code>div</code> 就能提高页面的可访问性。MDx 使用了这些标签来增强页面的可访问性。</p>\n<h2>下一步，ARIA</h2>\n<p>有的时候，出于一些原因，我们没法使用语义化的 HTML 标签，或者没有合适的语义化标签来标记内容，这时候<strong>我们就需要使用 ARIA (Accessible Rich Internet Applications，可访问的富互联网应用)。</strong>ARIA 的基础用法很简单，只要在相应元素上加上 <code>role</code> 属性指定该元素的功能即可。下面是一个简单的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;div role=\"navigation\"&gt;\r\n  &lt;ul&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page A&lt;/a&gt;&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page B&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page C&lt;/a&gt;&lt;/li&gt;\r\n  &lt;/ul&gt;\r\n&lt;/div&gt;</pre>\n<p>通过 <code>role=\"navigation\"</code>，我们把一个 <code>div</code> 标记为了导航栏区域。实际上，对屏幕阅读器来说，这和 <code>nav</code> 标签在语义上是一致的。上一节中的例子都可以分别用以下 ARIA Role 表示：</p>\n<ul>\n<li><code>role=\"heading\"</code></li>\n<li><code>role=\"main\"</code></li>\n<li><code>role=\"article\"</code></li>\n<li><code>role=\"contentinfo\"</code></li>\n<li><code>role=\"navigation\"</code></li>\n<li><code>role=\"complementary\"</code></li>\n<li><code>role=\"region\"</code></li>\n</ul>\n<p>除此以外，MDx 还使用了 <code>role=\"banner\"</code> 和 <code>role=\"search\"</code> 来分别标记页面中的顶部栏和搜索表单。另外，<strong>有的时候 <code>role</code> 属性还需配合 <code>aria-*</code> 属性一同使用</strong>，具体规则比较复杂，我就不在这里赘述了，具体可参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles\">WAI-ARIA Roles - MDN</a>。</p>\n<h1>媒体查询来帮忙</h1>\n<p>CSS 的媒体查询其实是一个非常强大的特性，<strong>妥善利用其中的一些特性，我们可以在网页外观上大大增强网页的可访问性。</strong>除了已经烂大街的“对浏览器窗口大小”响应的媒体查询，我会介绍 3 个很少有网站充分利用的媒体查询。</p>\n<h2>print</h2>\n<p><code>print</code> 媒体查询其实已经“历史悠久”了，<strong>只要使用 <code>@media print {...}</code> 就可以创建只在打印页面时生效的样式。</strong>通过这种方式，我们可以让页面在打印时应用一套为打印优化的样式，增强页面在物理纸张上的可访问性。</p>\n<blockquote><p>维基百科是对打印样式做了单独适配的著名例子。</p></blockquote>\n<p><strong>由于在打印的情况下，页面已经离开了“可交互”的范围，还有分页这种在屏幕中无需考虑的问题，要让页面在物理纸张上仍能被轻松地阅读，我们需要做一些特殊的适配。</strong>直接来看一个例子吧。以下是 MDx 针对打印情况进行的一些特殊优化，样式的具体理由已经写在了注释中。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media print {\r\n    /*隐藏不必要的元素*/\r\n    header, .mdx-ad-after-article, .mdx-ad-in-article, .mdx-post-money, .page-footer-nav, .mdx-same-posts, .spanout button, .mdui-drawer, .mdui-overlay, .mdui-menu, .mdx-share-img-dialog, .mdx-share-wechat-dialog {\r\n        display: none!important;\r\n    }\r\n\r\n    /*使用下划线标记链接*/\r\n    article a {\r\n        text-decoration: underline!important;\r\n    }\r\n    /*由于纸张不可交互，在链接后显示链接到的 URL*/\r\n    article a::after {\r\n        content: \"(\" attr(href) \")\";\r\n    }\r\n\r\n    /*强制白底黑字*/\r\n    html &gt; body {\r\n        background-color: white!important;\r\n    }\r\n    article p {\r\n        color: rgba(0,0,0,.8)!important;\r\n    }\r\n\r\n    /*对于纸张上的长文章，衬线字体拥有更好的可读性。以下字体列表来自 fonts.css*/\r\n    article {\r\n        font: 13pt Georgia, \"Nimbus Roman No9 L\", \"Songti SC\", \"Noto Serif CJK SC\", \"Source Han Serif SC\", \"Source Han Serif CN\", STSong, \"AR PL New Sung\", \"AR PL SungtiL GB\", NSimSun, SimSun, \"TW\\-Sung\", \"WenQuanYi Bitmap Song\", \"AR PL UMing CN\", \"AR PL UMing HK\", \"AR PL UMing TW\", \"AR PL UMing TW MBE\", PMingLiU, MingLiU, serif!important;\r\n    }\r\n\r\n    /*除部分元素外，禁止在元素内部分页*/\r\n    * {\r\n        page-break-inside: avoid;\r\n    }\r\n    article p, article a, #comments, article {\r\n        page-break-inside: auto;\r\n    }\r\n}</pre>\n<p>MDx 自 1.9.3 版本起已经包含了对文章页的打印样式优化。可以很容易地看出，优化后的样式在物理纸张上将更容易阅读。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\" alt=\"\" width=\"1345\" height=\"1602\" class=\"aligncenter size-full wp-image-1959\"></a>\n<h2>prefers-color-scheme</h2>\n<p><code>prefers-color-scheme</code> 是最近才被浏览器广泛支持的一个媒体查询，但它的功能却很强大：<strong>响应系统级黑暗模式。</strong>这样，我们可以在开启黑暗模式的系统中让网页具有更好的可读性。不过由于这个媒体查询直到最近才被广泛支持，因此大部分网站对此并没有进行适配。</p>\n<blockquote><p>一些适配这一特性的网站：少数派、微信公众平台（文章页）等。</p></blockquote>\n<p>通过像这样的媒体查询，我们可以在系统启用黑暗模式时让页面实时响应：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    body {\r\n        background-color: #212121;\r\n        color: rgba(255, 255, 255, .7);\r\n    }\r\n}</pre>\n<p><code>prefers-color-scheme</code> 一共有 3 个可能值：<code>no-preference</code>, <code>light</code> 和 <code>dark</code>。你也可以不像上面的例子那样默认使用亮色样式并在黑暗模式下启用黑暗样式，而可以反过来将黑暗样式作为默认，用亮色样式覆盖。在不支持的浏览器上将会显示默认样式（即媒体查询不会生效）。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<h2>prefers-reduced-motion</h2>\n<p>看名字就猜得出，<code>prefers-reduced-motion</code> 是和 <code>prefers-color-scheme</code> 师出同门的媒体查询。因此，和 <code>prefers-color-scheme</code> 一样，它也是在最近才获得了浏览器的广泛支持。它的作用也很强大：<strong>响应系统的“减弱动态效果”模式。</strong>这对某些不喜欢甚至无法接受动画的用户可能很有帮助。要知道，对有些用户来说这甚至是医疗上的必要。使用如下的媒体查询，我们可以在系统启用减弱动态效果模式时让页面实时响应，减弱动画：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-reduced-motion: reduce) {\r\n    /*只是一个示例，实际情况中可以保留一些淡入淡出效果*/\r\n    * {\r\n        transition: all 0s!important;\r\n        transform: none!important;\r\n    }\r\n}</pre>\n<p><code>prefers-reduced-motion</code> 只有 2 个可能值：<code>no-preference</code> 和 <code>reduce</code>，在不支持的浏览器上该媒体查询不会生效。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\" alt=\"\" width=\"792\" height=\"515\" class=\"aligncenter size-full wp-image-1962\"></a>\n<h1>黑暗模式适配</h1>\n<p>黑暗模式可不是简单地切换到黑底白字这么简单。<strong>单纯地使用黑底白字会导致页面元素之间对比度过高，文字刺眼，反而降低了页面的可访问性。</strong>我在下面总结了几条应用在了 MDx 中的黑暗模式优化规则和 Google 推荐的优化规则：</p>\n<p><strong>一是避免黑底白字。</strong>黑底白字看起来真的很难受，事实上，深灰和浅灰是黑暗模式最好的配色。比较下方例子里的两段文本，毫无疑问深灰色背景和浅灰色文字搭配的样式的可读性要比黑底白字高很多。（p.s. 有时候这条规则在白底黑字时也适用）</p>\n<p><strong>二是更改部分元素的亮度和对比度以增强可读性。</strong>你可能已经注意到了，下面优化的例子里标题文字的颜色改变了。很明显，未优化的黑暗模式中标题可读性不如优化的版本。在实际中，我们通常可以通过 CSS 滤镜来实现这一更改。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    h1 {\r\n        /*反相颜色后再将色相旋转 180 度，使亮度反相*/\r\n        filter: invert(1) hue-rotate(180deg);\r\n    }\r\n}</pre>\n<p><strong>三是避免让图片过亮。</strong>未经处理的图片通常会导致过高的对比度，降低可读性。在 MDx 中，我选择降低图片的亮度来避免图片刺眼，而 Google 的建议则是使图片灰度，不过这会影响图片的整体观感。无论是哪一种方案，都可以使用 CSS 滤镜来轻松实现。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    img { \r\n        /*MDx 方案*/\r\n        filter: brightness(.8);\r\n        /*Google 方案*/\r\n        filter: grayscale(.5);\r\n    }\r\n}</pre>\n<div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是未优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是经过优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n</div>\n<h1>其他细节</h1>\n<p>还有一些细节，虽然简单，但不可或缺。我把一部分没有在上文提到的 MDx 中的细节列在了这里。</p>\n<p><strong>一是允许页面缩放。</strong>在开发响应式页面时，很多网站会在页面头部添加这样一个 <code>meta</code>：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"&gt;</pre>\n<p>这样的 <code>meta</code> 设定了页面的宽度，却也固定了页面的缩放比例，用户难以手动放大网页。<strong>这样的设置对一部分视力障碍用户非常不友好</strong>，以至于苹果决定在自家的浏览器上忽略禁止缩放的 <code>meta</code>。按照 Google 的推荐，如果你在 MDx 设置中启用了“允许页面缩放”，那么 MDx 会输出这样的 <code>meta</code> 标签，允许页面进行五倍以内的缩放：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=5\"&gt;</pre>\n<p><strong>尽管很多时候放大页面会导致页面结构被破坏，但这大大增强了页面的可访问性，利大于弊。</strong>因此，在 MDx 中，“允许页面缩放”是默认启用的。</p>\n<p><strong>二是在跨设备阅读时同步阅读记录。</strong>这属于 MDx 的“元老级”功能之一。注意到页面右上角的那个“在其他设备上继续阅读”的按钮了吗？如果你滚动页面后重新点击它，你会发现二维码发生变化了。通过在二维码中记录阅读进度，用户在扫描二维码切换设备阅读时，MDx 在新设备上会自动滚动到和原设备上一致的位置——好吧，目前基于百分比的算法在某些情况下可能不太准，但我已经设计了一个更复杂但更精确的阅读进度记录算法，之后就会更新到 MDx 中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\" alt=\"\" width=\"1000\" height=\"574\" class=\"aligncenter size-full wp-image-1976\"></a>\n<p><strong>三是避免 Web 字体阻塞渲染。</strong>如果你在页面中使用了 Web 字体，在字体加载完成之前，浏览器可能不会渲染任何文本，这就导致用户可能需要等待一段时间才能开始浏览网页。Google 推荐使用 <code>font-display: swap;</code> 来向浏览器指定网页的 Web 字体渲染策略。这一规则会提供一个比较短的等待周期，如果在这段时间内 Web 字体没有完成加载，那么浏览器会以 fallback 字体渲染文本。任意时刻一旦 Web 字体完成渲染，浏览器就会使用 Web 字体重新渲染文本。这在大多数情况下都能满足可访问性的需求。</p>\n<p><strong>四是确保 html 元素具有合适的 <code>lang</code> 属性。</strong>这一属性声明了页面的主要语言，浏览器可以据此调整渲染策略，或者触发自动翻译；屏幕阅读器也能更好地阅读网页。</p>\n<p><strong>五是确保页面主要内容在丢失/禁用了 Javascript 甚至 CSS 的情况下仍然可用。</strong>作为一个以内容为主的网站，MDx 在禁用了 Javascript 的情况下页面主要内容仍然可用。这不只是为了 SEO，更是为了保证页面的可访问性。的确，目前的情况下，如果开启了 Lazyload，MDx 在禁用 Javascript 的情况下图片的确无法显示，但我会在后续版本中尽可能的优化这一问题。</p>\n<h1>附录：媒体查询开发技巧</h1>\n<p>有的时候，光有 CSS 响应媒体查询还不够，我们可能需要在 Javascript 中实时响应媒体查询。用如下代码就可以很简单地响应媒体查询：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let mql = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\r\nmql.addListener(handleMediaChange);\r\n\r\n//在添加监听后先调用一次，获得当前查询结果\r\nhandleMediaChange(mql);\r\n\r\nfunction handleMediaChange(mql){\r\n    if(mql.matches){\r\n        //查询匹配\r\n    }else{\r\n        //查询不匹配\r\n    }\r\n}</pre>\n<p>在开发上述媒体查询的过程中，我们需要频繁地切换系统的相应模式或者调出打印窗口。<strong>实际上，Chrome 提供了更简单的调试方法：</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1946\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\" alt=\"\" width=\"723\" height=\"681\"></a>\n<p>只要在这里更改模式，相关媒体查询就能实时生效。这不会影响其他标签页，在关闭开发者工具之后也会自动恢复系统设置。</p>\n","link":"https://flyhigher.top/develop/1912.html"},{"title":"MDx Blog 现已随 MDx 1.9.5 发布","date":"2020-01-22 17:54:11","description":"<p>随着 MDx 发布 1.9.5 更新，<a href=\"https://mdxblog.flyhigher.top/\" rel=\"noopener noreferrer\" target=\"_blank\">MDx Blog</a> 现已建立。我将会在 MDx Blog 中分享一些开发故事并发布 MDx 更新日志。</p>","link":"https://flyhigher.top/diary/1905.html"},{"title":"GitHub 2019 统计无垠版","date":"2020-01-12 13:02:00","description":"\n<h1>缘起</h1>\n<p>2019 年底，我突发奇想想要自己统计一番 GitHub 上存储库的一些信息。尽管 GitHub 有自己的<a href=\"https://octoverse.github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">年度统计</a>，我还是想试着自己爬取一下，说不定能挖出什么有意思的信息，何况这是我第一次有机会处理比较大量的数据，也算是一种学习的过程吧。于是花了一下午写了个简单的爬虫（时间都花在增加 Rate Limit 上了...），然后扔在了两台服务器上开始跑（GitHub  API 真是好文明）。</p>\n<p>从 2019.11.21 3 时到 2020.1.12 24 时的 52 天 21 小时内，我的爬虫一共爬取了<strong>与 2,024,705 个用户有关<sup>*</sup>的 14,651,923 个公共存储库的基础信息</strong>，平均每秒爬取 3.2 个存储库。据 GitHub 的官方数据计算，我爬取了大约 15% 的存储库信息，但由于封禁库和私有库的数量未知，我暂时无法确定我爬取的存储库占公共库的比例。同时由于存储库数量较多，基本可以认为爬取到的样本在时间尺度上已经足够随机，可以通过统计得出一般结论。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\" alt=\"\" width=\"700\" height=\"606\" class=\"aligncenter size-full wp-image-1892\"></a>\n<p>爬到自己了，合影.jpg</p>\n<p>那么下面就来看看统计出来的一些结果吧。爬虫的技术细节和数据集下载放在文末。</p>\n<p>* 指这些用户拥有至少一个库</p>\n<h1>统计信息</h1>\n<p><strong>以下统计结果均基于已放于文末的数据集。</strong>由于爬虫爬取的时间跨度长，加上我并没有完整爬取 GitHub 所有存储库，因此我<strong>不能保证以下统计结果符合真实情况</strong>，各位可以下载数据集或自行爬取进行验证。</p>\n<h2>一些数据</h2>\n<div>\n<div>\n<div>\n<span>3,120,930</span><br>总爬取用户数</div>\n<div>\n<span>44.7%</span><br>的存储库创建<br>自 Fork</div>\n<div>\n<span>6.59%</span><br>的账户被删除或<br>封禁<sup>1</sup>\n</div>\n<div>\n<span>23,913</span><br>单用户拥有最大<br>库数量<sup>2</sup>\n</div>\n</div>\n</div>\n<p><sup>1</sup> 基于用户 ID 规律合理推断<br><sup>2</sup> 统计范围仅限于当前数据集</p>\n<p>比较出乎我意料的是创建自 Fork 的存储库的占比。我预估这样的存储库占比不会太低，但没有想到能接近一半。此外单用户拥有最大库数量也大大超出了我的预期，<a href=\"https://github.com/pombredanne\" rel=\"noopener noreferrer\" target=\"_blank\">pombredanne</a> 这个用户名下拥有将近 24k 的存储库，不过绝大多数都是 Fork 来的，在情理之中。此外<strong>这个数据集中</strong>拥有最多存储库的账户其实是一个组织 <a href=\"https://github.com/gitpan\" rel=\"noopener noreferrer\" target=\"_blank\">gitpan</a>，这个组织拥有 36,377 个存储库。</p>\n<h2>语言</h2>\n<p><canvas></canvas><br>\n首先必须要说明的是，在这个榜单中我<strong>排除了 HTML 和 CSS</strong>，因为在严格意义上它们不属于“编程语言”。如果把它们计算进来的话，分别有 640,368 个和 361,425 个存储库的主要语言分别是 HTML 和 CSS，这样在这份榜单中它们可以排到第 6 和 第 10 名。JavaScript 毫无疑问获得第一，第二名 Python 的热度则和 JavaScript 相差将近一半。<strong>此外还有 2,448,486 个存储库未能识别出语言，占比 16.7%。</strong>在上面的榜单之外，与机器学习和数据科学相关的语言还有 Jupyter Notebook 排名第 13，R 排名 20，Julia 排名 43。</p>\n<p>说实话这份排名和 GitHub 官方的排名<strong>差别很大</strong>，除了前三名，后面的基本都不太一样。我的排名统计结果完全基于 GitHub 对于存储库的主要语言识别，加上我的存储库数据不完整，和官方的数据不同是很正常的，可以做一个参考，但大概率还是官方排名更加准确。</p>\n<h2>许可证</h2>\n<p><canvas></canvas></p>\n<p>自 GitHub 推出许可证功能以来，拥有许可证的存储库比例升升降降，却始终没有超过一半。<strong>选择一个合适的许可证对项目的良好发展真的很有帮助</strong>，要了解如何选择合适的许可证，请参阅<a href=\"https://www.runoob.com/w3cnote/open-source-license.html\" rel=\"noopener noreferrer\" target=\"_blank\">这篇文章</a>。</p>\n<p><canvas></canvas></p>\n<p>对于拥有许可证的存储库，MIT<del> 麻省理工许可证 </del>总是占比最大的；第二则是 Apache-2.0 许可证。此外，WTFPL 许可证也挤入了前 15 名。</p>\n<h2>星标</h2>\n<p><canvas></canvas><br>\nStar 数量毫无疑问是一个存储库受欢迎程度的体现，而 Star 数高的项目基本上大家都了解过。<strong>截至爬取结束时间</strong>，GitHub 中 Star 数最多的库是 <a href=\"https://github.com/freeCodeCamp/freeCodeCamp\" rel=\"noopener noreferrer\" target=\"_blank\">freeCodeCamp</a> <del>非常完美的驼峰命名法</del>，其次则是著名项目 <a href=\"https://github.com/996icu/996.ICU\" rel=\"noopener noreferrer\" target=\"_blank\">996.ICU</a>。<a href=\"https://github.com/vuejs/vue\" rel=\"noopener noreferrer\" target=\"_blank\">Vue</a> 现在的 Star 数已经稳压 <a href=\"https://github.com/facebook/react\" rel=\"noopener noreferrer\" target=\"_blank\">React</a> 一头，Vue YES! 此外 <a href=\"https://github.com/sindresorhus/awesome\" rel=\"noopener noreferrer\" target=\"_blank\">awesome</a> 也挤进第七名。<br><canvas></canvas><br>\n由于 Star 需要时间积累，新项目的 Star 数量很可能是比不过老项目的，这就会导致有实力的新项目无法出现在榜单中。因此我还统计了日均 Star 数，试图通过日均 Star 数来反映项目受欢迎的程度。<strong>由于正热门的项目会比老牌热门项目有优势，这一项的统计范围是 2020-01-01 之前的所有存储库。</strong>996.ICU 和 freeCodeCamp 再次出现在前 10 名，而最近的热门项目 <a href=\"https://github.com/wenyan-lang/wenyan\" rel=\"noopener noreferrer\" target=\"_blank\">wenyan</a> 则飙升至第 2 名。此外还有 <a href=\"https://github.com/menzi11/BullshitGenerator\" rel=\"noopener noreferrer\" target=\"_blank\">BullshitGenerator</a>，即最近热门的“狗屁不通文章生成器”和 <a href=\"https://github.com/evil-huawei/evil-huawei\" rel=\"noopener noreferrer\" target=\"_blank\">evil-huawei</a> 分列第 3 和第 5 名。<br><canvas></canvas><br>\n说实话这个曲线<strong>比我预估的陡多了。</strong>你可能已经注意到了，这个图表的横轴不是均匀缩放的，实际上曲线要比看起来陡很多。同时受爬取方式的影响，GitHub 中 Star 数较少的存储库数量远比我爬取到的多。也就是说，<strong>实际情况下曲线远比这个图表上的陡。</strong>拿点 Star 不容易啊。</p>\n<h2>名称</h2>\n<p><canvas></canvas><br>\n终于知道了原来存储库的名称是有长度限制的...尽管最长有 100 位，<strong>大部分人还是喜欢 8 位长的存储库名。</strong>此外 1 位长的名称也比我预估的要多一些。举几个存储库名称长度为 100 的例子吧。</p>\n<ul>\n<li>testing-something-elsetesting-something-elsetesting-something-elsetesting-something-elsetesting-some</li>\n<li>acts_as_validated_config_so_app_will_not_run_in_random_situation_and_qa_gays_will_not_cry_to_you_whe</li>\n<li>............................................________-....................................-.---......</li>\n<li>----------------------------------------------------------------------------------------------------</li>\n<li>nyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyan</li>\n</ul>\n<p>...创造力有够丰富的。</p>\n<p><canvas></canvas></p>\n<p>最近 GitHub 上有一种奇怪的风气，那就是建立 Awesome 合集<del>骗 Star</del>。看起来 Awesome 存储库满地都是，甚至还出现了关于 Awesome 的 Awesome 合集这种迷惑行为。于是我统计了一下，<del>还好，</del>占比<del>才</del> 0.5% 不到<del>，Awesomer 们任重而道远呐</del>。</p>\n<p><canvas></canvas></p>\n<p>尽管要在 github.io 上托管网站，存储库不一定要以 .github.io 结尾，但我还是统计了一下。拥有这类存储库的用户比我预想的要少一些，看来还有很多人没有完全发挥 GitHub 的完整实力啊<del>（比如我 Doge）</del>。同时<strong>这类存储库在所有存储库中占比 1.12%</strong>，看起来不多<del>，不过至少比 Awesome 多</del>。<br><canvas></canvas><br>\n看得出来 GitHub 对于用户名长度的限制是 1-40 位。用户名最短的 27 位占据了 <code>A-Z</code> 外加 <code>-</code> 的所有可能，而用户名最长的则是一个组织 <a href=\"https://github.com/UOIT-RESEARCH-database-information-group\" rel=\"noopener noreferrer\" target=\"_blank\">UOIT-RESEARCH-database-information-group</a>。不知道是巧合还是某种规律，<strong>最受欢迎的用户名长度和存储库名称长度一样，都是 8</strong>，有点意思。</p>\n<h2>创建时间</h2>\n<p><canvas></canvas><br>\n由于我并没有完整爬取所有存储库，我只能以相对值来统计每月新增存储库数量的变化趋势。<strong>在这个图表中，我将 2017-09 的数据设为了 100%。</strong>你一定一眼就能注意到 2017 年 6,7,8 月的“一柱擎天”。<del datetime=\"2020-02-05T09:18:30+00:00\">我第一次看到这个数据的时候的确愣了一下，不过就着这条新闻看就能明白为什么了：<strong>2017 年 6 月微软收购 GitHub。</strong></del></p>\n<blockquote><p>重新确认了一下，微软收购 GitHub 比这个高峰晚了一年，目前我对这个高峰没有什么很好的解释，如果你有什么思路的话欢迎评论。</p></blockquote>\n<p><strong>需要注意的是这张图表中我排除了 Fork 存储库</strong>，因为 Fork 存储库在 API 中的创建时间是原始存储库的时间，会影响整体趋势。此外，GitHub 中还有一个创建于 2007 年 10 月 29 日的存储库，那就是 <code>id: 1</code> 的...</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"mojombo\" data-mdxgithubp=\"grit\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/mojombo/grit\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>而它的创建者正是 GitHub 的创始人之一 Tom Preston-Werner。</p>\n<h1>一些有趣的结果</h1>\n<p>当初打算自己爬的目的之一就是想看看能不能挖出什么有意思的信息，结果真的有一些不挖不知道的信息。</p>\n<h2>奇怪的存储库</h2>\n<p>在爬取到的所有存储库中，<strong>有 3 个存储库是“无主”的</strong>，即它们的 owner 属性为空。这三个存储库的基本信息如下。</p>\n<div class=\"mdui-table-fluid mdui-table-hoverable\"><table class=\"mdui-table\">\n<thead><tr>\n<th>ID</th>\n<th>名称</th>\n<th>Forked</th>\n<th>Star</th>\n<th>语言</th>\n<th>许可证</th>\n<th>创建于</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>72385291</td>\n<td>vscode-redprl</td>\n<td>否</td>\n<td>10</td>\n<td>TypeScript</td>\n<td>apache-2.0</td>\n<td>2016-10-31 08:50:01</td>\n</tr>\n<tr>\n<td>181218346</td>\n<td>electron-sys</td>\n<td>否</td>\n<td>10</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-14 03:20:56</td>\n</tr>\n<tr>\n<td>181391880</td>\n<td>node-sys</td>\n<td>否</td>\n<td>6</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-15 09:33:08</td>\n</tr>\n</tbody>\n</table></div>\n<p><strong>更奇怪的是这三个存储库“无主”的情况还不一样。</strong>第一个存储库可以通过 <code>/repositories</code> 这个 GitHub API 找到， <a href=\"https://api.github.com/repositories?since=72385290\" target=\"_blank\" rel=\"noopener noreferrer\">这个链接</a>中的第一个存储库就是它；而其余两个存储库甚至无法在 <code>/repositories</code> API 中找到。不过就算能在 API 中找到第一个存储库，它的 <code>html_url</code>，即 <code>https://github.com//vscode-redprl</code> 仍然是不可访问的。这可能是 GitHub 早期的一个 Bug 导致的，不过我仍然对爬虫是如何找到这三个存储库的以及这些 Stars 是哪里来的感到好奇。</p>\n<h2>奇怪的用户名</h2>\n<p>在爬虫爬了一段时间以后，API 中突然开始出现大量的以 fdp 开头的 18 位乱码作为用户名的用户。这些用户拥有的存储库和 starred 的存储库都为 0，而他们的 <code>html_url</code> 为 404。以下是几个例子。</p>\n<ul>\n<li>fdpEpolGCEdQX4ZlRJ</li>\n<li>fdp8XaVrdtmDZnO5pR</li>\n<li>fdp8XRAGnwAOkTr2Ya</li>\n</ul>\n<p>由于我的爬虫并没有超过 Rate Limit，所以我排除了这是污染数据的可能。我怀疑这可能是某种 Bot 账户，于是一边更新爬虫过滤掉了这些用户，一边给 GitHub 支持发邮件问了具体情况。过了两天 GitHub 回复我说这些是<strong>被自动判为可疑进而被封禁的用户</strong>（原话是 they have been flagged by our automated measures for detecting suspicious behavior）。<del>想到我正在疯狂爬取 GitHub，突然害怕.webp</del></p>\n<p>行吧。</p>\n<h1>技术细节</h1>\n<p>爬虫使用 Python3 编写，数据库使用 MySQL。爬虫共使用了 4 个 API Token，在两台服务器上分布式爬取。爬取思路为：</p>\n<ol>\n<li>通过 <code>/users</code> API 遍历用户，每个请求最多获取 30 个用户信息</li>\n<li>循环 30 个用户，分别获取 <code>/users/&lt;user_name&gt;/starred</code> 和 <code>/users/&lt;user_name&gt;/repos</code> API 中的存储库信息，每个请求最多获取 100 个存储库信息，超过 100 个的分页获取</li>\n<li>提取存储库信息，插入数据库。对于已存在的存储库，更新数据</li>\n<li>获取下 30 个用户信息</li>\n</ol>\n<p>由于爬取过程中我多次调整了爬虫逻辑，爬虫爬取到的用户 ID 区间并非连续的，具体区间为1-839586, 14800001-14885493 及 28965251-31161101。</p>\n<h1>免责声明</h1>\n<p>本站会尽可能地提供准确信息，但本站不对此文章中信息的准确性和即时性及带来的任何影响负责。</p>\n<p>本站不代表 GitHub 官方，本文仅供学习之用，请不要将本文内容直接用于任何商业项目中。</p>\n<h1>数据集下载</h1>\n<p>导出的 SQL 文件大约为 1.38GB，全部放在了 GitHub 上（在危险的边缘试探.webp</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"github-analysis-2019\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/github-analysis-2019\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>此外我也提供了 MEGA 下载，链接<a href=\"https://mega.nz/#F!juxm3A6T!7Vwpzi82W1OFrqTLu1A1pQ\">在这里</a>。</p>\n","link":"https://flyhigher.top/develop/1564.html"},{"title":"Milkice 跨年红包解谜 Writeup 及无垠跨年红包解谜答案","date":"2020-01-02 04:29:19","description":"\n<blockquote><p><del>又到了水文章的时间呢</del></p></blockquote>\n<p>先说明一下，这篇文章原本不是在计划中的，而原来说好的「在路上的两篇」文章<del>绝对不会咕</del>。我自己的红包答案本来打算直接塞在年度总结里的，结果发现稍微有些长，再加上我还花了一些时间解了<a href=\"https://milkice.me/\">奶冰</a>的红包解谜游戏，就打算把两个解谜过程放在一起单独写一篇文章。<del>真是个水文章的好理由</del>（被打死</p>\n<h1>奶<del> 子 </del>冰的红包</h1>\n<p>奶冰的红包题目比我的难多了，所以让我们先从难的开始吧。首先看一下<a href=\"https://milkice.me/2019/12/31/2019-summary/\">题目</a>：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1524\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\" alt=\"\" width=\"746\" height=\"410\"></a>\n<p>入口是 <code>happy.2020.milkice.me</code>，扔到浏览器里面表示找不到 IP，那么大概率就是 DNS 的 TXT 记录了，查一下得到 <code>nb2hi4dthixs63ljnrvwsy3ffzwwkl3tivrvezluomxxg5dsmvqw2ltqmnqxa3th</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1525\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\" alt=\"\" width=\"896\" height=\"278\"></a>\n<p>第一眼没看出来是什么编码，直觉是 BaseXX 系列的编码，加上提示“不只有 Base64”，可以推断出是 Base32，转大写解码得到 <code>https://milkice.me/sEcRets/stream.pcapng</code>。是个 URL，下载得到一个 Wireshark 文件，打开一看是和某 USB 设备的通讯抓包。<del>不会做，不做了。</del></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1526\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\" alt=\"\" width=\"1500\" height=\"813\"></a>\n<p>奶冰提示我“Google 上搜得到”，结合第二条提示搜索“wacom pcapng”找到了<a href=\"https://blogs.tunelko.com/2017/02/05/bitsctf-tom-and-jerry-50-points/\">这篇文章</a>（<del>这™就是答案啊</del>）。看起来是一样的套路，即通过解析数据得到数位板上画的内容，于是按文章的思路筛选出数位板发给主机的数据，导出，然后再用 tshark 导出文本数据。本来我想直接用文章中的 POC 的，结果折腾半天因为源的蜜汁原因库没装上，于是按文章中给出的数据结构自己写了段代码，分别导出 X、Y 轴数据扔进 Excel 画散点图。（<del>别问我为什么用 Excel，因为我手边没有更好的工具了</del>）</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1528\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\" alt=\"\" width=\"1280\" height=\"530\"></a>\n<p><span>翻车现场之一</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1539\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\" alt=\"\" width=\"1000\" height=\"286\"></a>\n<p><span>懵逼奶冰.webp</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1533\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\" alt=\"\" width=\"1500\" height=\"462\"></a>\n<p>看得出有手写文字，不过是上下颠倒的，翻转图片得 <code>https://milkice.me/2020/uso.zip</code>。是个 zip，下载打开一看，有密码。<del>不会解，不做了。</del> 第一反应是暴力解密码，但是暴力跑了 15 分钟还是没有跑出来。暴力太不优雅了，肯定不是正确思路，但奶冰什么都不肯说了。不过在这时我终于发现第一个红包口令码就藏在压缩包的注释中，Get。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1544\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\" alt=\"\" width=\"806\" height=\"593\"></a>\n<p>然而题还没解完，回去看提示，看到提供了 osu 谱面下载，于是打算不管怎么样先下载来看看。然而 osu 谱面下载要登录，只好又花了几分钟找到第三方站点，成功下载。这时候可以注意到 uso.zip 里有个同名文件（432314 Mike Greene - Bill Nye the Science Guy Theme Song (Chinese Intro).osz），可以联想到是明文攻击。好吧，上 ARCHPR，十秒解出。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1530\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\" alt=\"\" width=\"462\" height=\"643\"></a>\n<p><span>现场还原.jpg</span></p>\n<p>.osz 文件并不是明文，猜测是压缩包（和 .pptx 一个思路嘛），于是改后缀 .zip 顺利打开。然后红包口令码就藏在奶冰的 .osu 文件中了，由提示可知是明文，打开即可得到。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1542\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\" alt=\"\" width=\"457\" height=\"255\"></a>\n<h1>我的红包</h1>\n<p>相比起来<a href=\"https://flyhigher.top/diary/1464.html\">我的题目</a>就简单很多了嘛...三天时间一共发出了 25 个红包，包括一位重复领取的🌚，比前几年还是多了一些的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\" alt=\"\" width=\"500\" height=\"306\" class=\"aligncenter size-full wp-image-1554\"></a>\n<p><span>这位同学以后请不要多次领取🌚</span></p>\n<p>那么来看看答案吧。</p>\n<h2>第一阶段</h2>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>首先观察字符串，可以发现 <code>.</code> <code>/</code> <code>_</code> 等一些 ASCII 字符原样留在了字符串中，而其他字符被由 <code>=</code> 和十六进制构成的某种编码所替代。如果你正好有所了解，你应该能认出这是 Quoted-printable 编码，这是一种常用于邮件中的编码，可以用<a href=\"https://mothereff.in/quoted-printable\">这个页面</a>解码。如果你不了解，你也应该可以发现这种编码和 URL 编码非常相似。如果你把 <code>=</code> 替换为 <code>%</code>，那么你就可以用各种方法顺利地把它按 URL 编码来进行解码，最后可以得到 <code>αхtоn.іm/соdе_оf_2020_⒈mρз</code>。这个字符串里大部分字符都不是 ASCII 字符，只是长得像而已。根据第一个提示“全是 ASCII 字符”，按样子把字符串用 ASCII 字符抄一遍，可以得到最终 URL 为 <code>axton.im/code_of_2020_1.mp3</code>。</p>\n<h2>第二阶段</h2>\n<p>下载音频，可以听出音频是经过某种处理的白噪音。白噪音的特点是各频段的功率都均匀分布，在白噪音上做文章，很容易就可以联想到线索藏在频谱中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1534\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\" alt=\"\" width=\"1200\" height=\"719\"></a>\n<p>频谱被处理成了 24x3 的网格，结合第二条提示“24x3，横向读取”可以推断出是将频谱当作二进制读取，得到 <code>01111001 01110010 01100011 00101110 01101101 01100101 00101111 00110010 00110000</code>，转为 ASCII 字符可得 <code>yrc.me/20</code>。</p>\n<h2>第三阶段</h2>\n<p>打开上一步得到的页面，提示要求输入十位数密码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1536\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\" alt=\"\" width=\"663\" height=\"460\"></a>\n<p>如果你在上一步注意到了这个音频文件奇怪的属性，你可以反应过来这里的密码就是 <code>2000202020</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1537\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\" alt=\"\" width=\"421\" height=\"651\"></a>\n<p>如果你没有注意到，查看页面代码可以看到一条注释 <code>&lt;!-- Tips: the attribute of the audio --&gt;</code> 将你引导向音频文件的属性。输入密码，解锁即可进入下一步。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1535\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\" alt=\"\" width=\"397\" height=\"223\"></a>\n<h2>第四阶段</h2>\n<p>可以看到是一张图片，内容为“<del>.JPG</del>”和“.ZIP”。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter size-large wp-image-1532\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n<p>和去年一样的套路，下载图片，将后缀名改为 .zip 然后打开，可以看到 README.txt。</p>\n<h2>最后一步</h2>\n<p>查看 README.txt 的内容，可以了解到需要去 🤔.axton.cc 获取红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1538\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\" alt=\"\" width=\"1131\" height=\"278\"></a>\n<p>扔到浏览器里会出现奶冰同款找不到 IP，于是可以联想到 TXT 记录。唯一的问题是 🤔 这个 Emoji 需要如何处理。域名使用 Punycode 将 Unicode 字符转换为 ASCII 字符，特点是以 <code>xn--</code> 开头。如果你把上面这个域名扔进浏览器，你会发现它变成了 <code>xn--wp9h.axton.cc</code>。然后查询 TXT 记录，即可得到红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1527\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\" alt=\"\" width=\"804\" height=\"557\"></a>\n","link":"https://flyhigher.top/develop/1519.html"},{"title":"无垠 2019 年度总结","date":"2019-12-29 12:25:52","description":"\n<p>又是时间飞快的一年...写 2018 总结的情景似乎还在眼前，转眼居然已经到 2019 年末了。</p>\n<p>2019 年，发生了太多事情，包括真的转折了人生的高考，这也导致我博客更新的不多（难以置信居然才更了两篇...），不过两篇技术性文章已经在路上了，可以期待一下。</p>\n<p>2019 年我也学了不少东西（单指技术方面），比如终于认真学了 Vue（但是还要练手）。书买了一大堆，看完的倒是没几本orz</p>\n<p>呼，好吧，是时候回顾一下充满坎坷的这一年了。2019 年还剩下最后两天，希望 2020 年，我能做得更好。</p>\n<h1>一些数据</h1>\n<p>照惯例先来看看一些数据吧。今年是统计系统完整统计了的第二年，终于可以和去年的数据比较一下了。以下数据的统计范围是 2019年1月1日0时至 2019年12月29日20时。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 26,901 (<span>+4%</span>)，年 PV 76,583 (<span>+3%</span>)，日均 UV 73.7，平均停留时间 5分13秒 (<span>-13.8%</span>)，平均跳出率 53% (<span>+20.5%</span>)。一年有效文章数 2 (<span>-50%</span>)，新增评论 439 条。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\" alt=\"\" width=\"1000\" height=\"1143\" class=\"aligncenter size-full wp-image-1511\"></a>\n<p>有趣的是今年文章数腰斩，访问数反而小有提升。<del>如果我哪天不更新了，访问数是不是可以无限大呢？</del></p>\n<p>今年博客最大的改动就是把整体风格切换到了 Material Design 2（当然这是 <a href=\"https://flyhigher.top/develop/788.html\">MDx</a> 中的可选功能，给自己打个广告2333），此外还有比较失败的 WebP 改造计划，因为和缓存冲突已经回滚了。<a href=\"https://flyhigher.top/develop/1245.html\">ABS 系统</a>进展不大，主要是真的没有太多时间，还是要再学习一个。</p>\n<h2>个人主页</h2>\n<p>虽然个人主页的 TODO List 列了老长，但今年完全没有更新，也没有推广，从今年 8 月底开始还莫名被某墙认证了，直到 11 月底才恢复，于是今年总访问量比去年少了很多，</p>\n<p>有多少呢？这么少：总 UV 2,141 (<span>-65.9%</span>)，总 PV 2,744 (<span>-66.6%</span>)，日均 UV 6 (<span>-65.9%</span>)，平均停留时间 62秒 (<span>+19.2%</span>)。主要来源是知乎和 V2EX，还有一些甚至是从微信来的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\" alt=\"\" width=\"1000\" height=\"1103\" class=\"aligncenter size-full wp-image-1512\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 8 次，新增 171 commits，2 种语言的翻译，Star 数增加了 175，现有 408。感谢所有人的支持，尤其是 <a href=\"https://github.com/Sn0bzy\" rel=\"noopener noreferrer\" target=\"_blank\">Hasan CAN</a>, <a href=\"https://github.com/yechs\" rel=\"noopener noreferrer\" target=\"_blank\">Ye Shu</a>, <a href=\"https://github.com/StarryLeo\" rel=\"noopener noreferrer\" target=\"_blank\">StarryLeo</a>, <a href=\"https://github.com/DCTewi\" rel=\"noopener noreferrer\" target=\"_blank\">冻葱Tewi</a>, <a href=\"https://github.com/syfxlin\" rel=\"noopener noreferrer\" target=\"_blank\">Otstar Lin</a> 等为 MDx 做出了不小贡献的你们。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：<a href=\"https://flyhigher.top/photograph/1309.html\">上手</a> DJI OSMO Pocket</li>\n<li>四月：最后一次参加浙江省普通高中学业水平考试</li>\n<li>五月：MDx 喜提 300 Stars</li>\n<li>六月：高考 <del>炸了，差亿点点上浙大</del>\n</li>\n<li>六月：入手了 Oneplus 7 Pro</li>\n<li>六月：和同学一起去成都重庆旅行</li>\n<li>六月：第一次近距离感受到地震</li>\n<li>六月：<a href=\"https://flyhigher.top/diary/1411.html\">入手</a>了一台雷蛇灵刃 15，目前是主力机</li>\n<li>七月：参与组织 THE Hack 2019 活动</li>\n<li>七月：面基了 <a href=\"https://itroy.cc/\" rel=\"noopener noreferrer\" target=\"_blank\">Tory</a>, Bie Shi 和 <a href=\"https://oxz.me/\" rel=\"noopener noreferrer\" target=\"_blank\">FHYunCai</a>\n</li>\n<li>八月：一个人去厦门武汉转了一圈，拍了自己的第一个 Vlog</li>\n<li>八月：入手了一个 Kindle Paperwhite 4，没有泡面可以压，于是用来看英文小说了</li>\n<li>八月：加入 TEDxNingbo 志愿者团队</li>\n<li>八月：和 Ralph 面基</li>\n<li>八月：入手了一个 Yubikey</li>\n<li>九月：人生第一次参加雅思考试 <del>7分，蛮开心的</del>\n</li>\n<li>十月：入手了一个 Samsung Galaxy Watch Active 2 <del>觉得不值</del>\n</li>\n<li>十一月：MDx 达到 400 Stars</li>\n<li>十一月：为 TEDxNingbo 设计开发的 H5 上线</li>\n<li>十一月：入手了第一台胶片相机，试图入坑胶片摄影</li>\n<li>十一月：参加 TEDxNingbo 2019 大会</li>\n<li>十二月：<del>我 Cytus II 入门了</del>\n</li>\n</ul>\n<h1>跨年红包</h1>\n<p>这算「传统习俗」了。和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2020年1月2日。</p>\n<p>今年的解谜旅程，从下面这个字符串开始。</p>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>由于今年的题目比以前稍微难了一些，所以今年的红包金额还是比较大的，而且不限量，尽你所能试一试吧。</p>\n<p>一点你可能用得上的提示：URL 里全是 ASCII 字符 / 24x3，横向读取。</p>\n<p><a href=\"https://flyhigher.top/develop/1519.html\">答案</a>已公布。</p>\n<h1>跨年海报</h1>\n<p>这算是另一个「传统习俗」（笑）。因为我有做跨年海报的习惯，所以以下就是今年份的海报啦。</p>\n<p>用了 C4D+PS，还有我的一整个下午。</p>\n<p>提前祝各位新年快乐！</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter wp-image-1467 size-large\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n","link":"https://flyhigher.top/diary/1464.html"}]