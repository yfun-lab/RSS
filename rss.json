[{"title":"[送码] 千呼万唤始出来：老牌 Windows 启动器 Listary 更新 6.0","date":"2022-04-27 07:00:56","description":"Listary 近日正式发布了 6.0 大版本，相比此前的 5.0 版本带来了完全意义上的功能重构，一起来看看都有哪些新功能吧。<a href=\"https://sspai.com/post/72853\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72853"},{"title":"作家的日常是怎样的？有没有比较有趣的事情？","date":"2022-04-27 05:54:01","description":"\n<p data-pid=\"GB4edl14\">说个很少人提的点：</p>\n<p data-pid=\"D7WvfY_Z\">相当多作者——包括但不限于各种协会的成员——是<b>有本职工作的</b>。</p>\n<p data-pid=\"kirD3Qe3\">写作者中最常见的职业，我所接触的，是教师和图书编辑。他们有本职工作，然后日常该上班上班，尽量抽出<b>整块的时间</b>写东西。</p>\n<p><br></p>\n<p data-pid=\"0mMPEK7E\">当然也有做大生意的。比如我很佩服的几位作者，自己开了影视投资公司之类。</p>\n<p data-pid=\"DHz0-vtA\">有位开了公司做我书的老师，年轻时写东西很认真。现在忙事业了写得少。我问他一般什么时候写，他打开手机备忘录给我看，里面是写得字句工整、很严肃的小说。</p>\n<p data-pid=\"VyRJ5UMF\">他说他每逢碎片时间就写写，然后自嘲地笑笑：</p>\n<p data-pid=\"h_qjgCYM\">“反正也不会畅销，就自己写写——怎么会不畅销？我自己做书的自己不知道？”</p>\n<p><br></p>\n<p data-pid=\"Atb6k5oS\">我自己没统计过，但我有位编辑告诉我，绝大多数作者，一辈子只出过一到两本书。</p>\n<p data-pid=\"VsSsJH7D\">第一本书畅销的概率不大，他们往往也因此抒尽了已有的情怀，也被出版过程消磨得失去了写作的热情，或者其他缘故，不写了。</p>\n<p data-pid=\"XwFlJhXj\">偶尔第一本书就畅销的诸位，会写第二本，但往往不尽如人意。这其实就刷掉了许多人。</p>\n<p><br></p>\n<p data-pid=\"ThHjffrW\">我某本书几年前被输出了繁体字版权，还据说得了一个犄角旮旯无关痛痒的小奖，那会儿我才去打听这书的销量，大失所望，和简体字版权的销量没法比。编辑安慰我说，这都算畅销了，接着一句话：</p>\n<p data-pid=\"lJWA1hIW\">“在那（繁体字书销售的）地方，大概能纯靠写作，让自己过体面生活的人，勉强两位数吧。”</p>\n<p data-pid=\"bjwLj51m\">我另一位英国朋友在都柏林住过，她的说法：“都柏林也差不多这样。”</p>\n<p data-pid=\"tSmJf7S2\">所以<b>大多数作者，依然过着普通的雇员生活。</b></p>\n<hr>\n<p data-pid=\"LlQWuzhv\">能把全职写作的人，当生活方式继续下来的诸位，未必是多热爱写作，只是摸索出了一套与之配合的生活方式。</p>\n<p data-pid=\"eRv_fzzP\">我自己的经验，就很普通了。</p>\n<p data-pid=\"VfI5GMdD\">大学里出书，有了稿费（和信心）。</p>\n<p data-pid=\"TdLN610n\">于是搬出来租房子住；平时去学校上完课，回家写东西。大学毕业了，继续写东西。自由撰稿人没啥挑剔权，编辑让写啥写啥。那会儿写杂志稿比写书来钱快，也实在，所以要写书，总是会等琢磨透了，空出一大堆时间，才奋然开工。所以写杂志报纸专栏稿是日常，偶尔写书稿。</p>\n<p data-pid=\"wyBq8Mvo\">那会儿我在上海，过的就是深居简出的小区居民生活。</p>\n<p data-pid=\"Uftdl9YG\">早起，上线，跟编辑沟通，写。写累了看看书，吃东西，出门溜达，偶尔去看看话剧啦比赛啦之类，以及打游戏。</p>\n<p data-pid=\"grxH_-VP\">久而久之，也就逼出了随时坐下来就能写的能力，虽然并不一定被每个人理解——我初次去见如今的岳母大人时，吃完晚饭，略坐一刻，说要回自己房间写东西了；岳母大人诧异，说这都吃完晚饭了，你还要写？你也写得了？坐下来聊聊天嘛！</p>\n<p data-pid=\"2pS0mURN\">后来到巴黎，白天要上课，晚上写。偶尔午休时也写。一旦有成块的时间了，就写书稿。</p>\n<p data-pid=\"Kp6KK9vw\">比如这本书，初稿我是在2015年过年期间，八天里写完的。当然之后修改会花多些时间。</p>\n<a href=\"http://link.zhihu.com/?target=https%3A//book.douban.com/subject/26394204/\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-bc27dd3012cdcecf8733d0d002777ea3_200x0.jpg?source=b1748391\" data-image-width=\"270\" data-image-height=\"390\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">爱情故事</a><p data-pid=\"MFmecSQY\">大概现在也是这样：</p>\n<p data-pid=\"F84kEIFf\">非夏天就早起，上午写，写到中午收工，午饭，读书，看资料，修改稿子，跑步，见朋友，去博物馆，去看比赛，晚上打游戏。</p>\n<p data-pid=\"pu3ghqZK\">夏天会起得更早，跑步时间挪到上午，其他差不多如故。</p>\n<p data-pid=\"4ivG14ds\">决定要干大活，就进入大活状态。手边备好水、水果与果仁巧克力之类，一口气不停。</p>\n<p data-pid=\"MByh1U1a\">所谓一口气不停，比如去年秋天做一个活，那一周的打字量是这样的：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-91173378e2f111325566bd645f4ea76a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"655\" data-rawheight=\"507\" data-watermark=\"watermark\" data-original-src=\"v2-91173378e2f111325566bd645f4ea76a\" data-watermark-src=\"v2-7c7ee09eac2e818802380742ff3c9f07\" data-private-watermark-src=\"v2-92c163eb442524a258a9c342823fddea\"></p>\n<hr>\n<p data-pid=\"fYWoMrQQ\">总之吧，写东西之外的时间，其实就和任何普通人一样——本来写东西的也都是普通人，大家混口饭吃而已。</p>\n<p data-pid=\"ZBsb4Ew_\">只是每天会尽量拳不离手曲不离口地读书，哪怕没有约稿也随便写点东西，类似于做点简单无氧维持身体健康——这个几年前写到过，有时在知乎回答问题，或者偶尔读书时想到一个点，是能激出许多想法的。</p>\n<p><br></p>\n<p data-pid=\"-2qrUuKZ\">最后吧，我知道许多读者对写东西的人有许多美好想象，但事实上大多数创作者也都是在干活。门德尔松的私人信件里也抱怨自己因为被伯辽兹搞坏心情所以“两天没工作”。大家说起来，也无非是那些老套的东西：</p>\n<p data-pid=\"GrXgNbXw\">尼尔·盖曼说：Write, Finish Things, Keep writing.</p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-356fe38ad30c9e1b81ae47f6c3df7fdc_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"485\" data-rawheight=\"272\" data-watermark=\"watermark\" data-original-src=\"v2-356fe38ad30c9e1b81ae47f6c3df7fdc\" data-watermark-src=\"v2-22dcda1e069b634effd77d8f4a10ae40\" data-private-watermark-src=\"v2-3adab245895f3ec6309b03d7f2e58980\"></p>\n<p><br></p>\n<p data-pid=\"Zy4TDBpt\">吉恩·沃尔夫：Start the Next One!</p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-e5a7c14908e8aada8046858f273a633d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"289\" data-rawheight=\"375\" data-watermark=\"watermark\" data-original-src=\"v2-e5a7c14908e8aada8046858f273a633d\" data-watermark-src=\"v2-97726eb39e744bae83f8510bc2065828\" data-private-watermark-src=\"v2-9269c404746f629e84e82b95c2bc424d\"></p>\n<p data-pid=\"_eIKPRrV\">帕慕克说他在书桌前，每天坐十小时。</p>\n<p data-pid=\"8M1kqAi1\">我当然不敢和这些大神相比，但道理其实是差不多的。大家都是干活。</p>\n<p data-pid=\"N9vd5ky9\">我知道许多读者都想象，作家们一定有风花雪月的生活。但在巴黎度过年少岁月并成名还认识他第二任老婆，认为巴黎是“流动盛宴”的海明威——嗯我翻译过他的这本书：</p>\n<a href=\"http://link.zhihu.com/?target=https%3A//book.douban.com/subject/30333515/\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-c8abbdda23257e0a827af3982fde7d57_l.jpg?source=b1748391\" data-image-width=\"270\" data-image-height=\"270\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">流动的盛宴</a><p data-pid=\"CJmGGlU1\">——强调的也是：</p>\n<p data-pid=\"TR_7RM2U\"><b>宽裕的经济和稳定的生活才是最好的。</b></p>\n<p data-pid=\"6_ZXvzim\">写东西的海明威自己在古巴住着时，每天会自己记录工作进程，“以防自欺欺人”。</p>\n<p data-pid=\"nZc_djEB\">当时《巴黎评论》记录：海明威每天规定自己写的量，从450、575、462、1250，到512——一天写1250个词那天，是因为海明威第二天要去海湾小溪钓鱼，所以前一天多写掉一点。</p>\n<p><br></p>\n<p data-pid=\"arC38tk7\">不只是写东西，我认识的，老练的自由职业者，每天日常生活，或多或少，也都是这样的：</p>\n<p data-pid=\"B-E7TJlx\">尽量安排妥帖自己的生活，各自有自己维持身体和情绪健康的法子，希望可以持续输出。</p>\n<p data-pid=\"sYZURHLO\">而每天最苦恼的，就是第二天如何顺利熟练地开工。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhang-jia-wei?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">张佳玮</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/42982102/answer/2453755598?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">134 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/504871436?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">作家的生活是怎么样的？</a><br><a href=\"http://www.zhihu.com/question/517595625?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">起床的话题?</a><br>\n","link":"http://www.zhihu.com/question/42982102/answer/2453755598?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"ICLR2022文章速览（二）","date":"2022-04-27 05:53:29","description":"\n<h3><u><a href=\"https://link.zhihu.com/?target=https%3A//iclr.cc/virtual/2022/poster/5994\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Multi-objective Optimization by Learning Space Partition</a></u></h3>\n<p data-pid=\"HfvBfmRc\"><u>（文章链接</u><a href=\"https://link.zhihu.com/?target=https%3A//openreview.net/forum%3Fid%3DFlwzVjfMryn\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Multi-objective Optimization by Learning Space Partition</a>，Poster Session 6，加州时间4月26日周二下午6点30分，北京时间4月27日周三上午9点30分）</p>\n<p data-pid=\"B02KFcLW\">多目标黑盒优化（Multi-objective Black-box Optimization）在很多实际问题和应用中都能看到其身影。例如如何最大化汽车引擎的性能且让其能耗最小，如何平衡电池的容量和尺寸，如何在尽可能减小风险的条件下获得最大效益的投资。不同于单目标优化，多目标优化由于不同目标间存在内在的冲突，所以多目标优化结果是得到一个最优解集合（Pareto-frontier）而不是单一的最优解。因其应用广泛，一直在各类领域和研究方向上受到人们的关注。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-afdda2bd5572e3e6319122c78558950e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1104\" data-rawheight=\"497\" class=\"origin_image zh-lightbox-thumb\" width=\"1104\" data-original=\"https://pic3.zhimg.com/v2-afdda2bd5572e3e6319122c78558950e_r.jpg\"></figure><p data-pid=\"kcvT9rSR\">本篇ICLR是之前一系列learning-to-partition（基于学习的搜索空间切分）这个方向工作的后续，包括<a href=\"https://link.zhihu.com/?target=https%3A//arxiv.org/abs/1906.06832\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">LaNAS</a> (TPAMI'21), <a href=\"https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2007.00708\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">LaMCTS</a> (NeurIPS'20)，<a href=\"https://link.zhihu.com/?target=https%3A//arxiv.org/abs/2106.10544\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">LaP^3</a> (NeurIPS'21)。这次我们将这个方向做到了多目标优化上面。</p>\n<p data-pid=\"h7PG_3KI\">具体来说，我们提出了LaMOO，利用采样的支配数目（Dominance Number）学习出一个边界，将当前搜索空间分割为好的和坏的子区域，并不断的重复这一步直到区域足够小。然后利用蒙特卡洛树搜索选出相应的子区域进行采样，从而实现多目标的黑盒优化。在一个小的区域里，我们依然可以结合贝叶斯优化或者进化算法进行采样，大幅提升了样本搜索效率。</p>\n<p data-pid=\"fBil45Qc\">LaMOO简单易行，且可以作为元算法（meta-algorithm）与其它优化算法（例如进化算法和贝叶斯优化）相结合，实验证明，LaMOO在不同函数和实际任务中大幅度提升多种类优化算法的搜索效率。在小规模问题中（输入维度小于10且目标维度小于等于3），LaMOO大幅度提升了进化算法（CMAES）和贝叶斯优化（qEHVI）的样本搜索效率。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-09e15266f68b7c4413c0e40bfe2a47af_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1364\" data-rawheight=\"772\" class=\"origin_image zh-lightbox-thumb\" width=\"1364\" data-original=\"https://pic4.zhimg.com/v2-09e15266f68b7c4413c0e40bfe2a47af_r.jpg\"></figure><p data-pid=\"bCswpEFR\">我们在实际问题（如发现满足多种准则的分子，Molecule Discovery）中, LaMOO也取得了很好的搜索效果。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-5002557e336fc70fda04d6571c0f6469_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1362\" data-rawheight=\"452\" class=\"origin_image zh-lightbox-thumb\" width=\"1362\" data-original=\"https://pic2.zhimg.com/v2-5002557e336fc70fda04d6571c0f6469_r.jpg\"></figure><p data-pid=\"vTGhHO_W\">LaMOO的代码将在近期开源。</p>\n<p data-pid=\"_oJSuN5q\">关于learning-to-partition这个思想其实可以往下挖很深。相比事先定义好某个马尔可夫决策过程（MDP），跑一跑强化学习算法这样的习惯性思维，其实每一个实际问题都可以对应无数个不同版本的MDP，究竟哪个比较好是更本质的问题。这个等我有空，会写一个专栏讨论。</p>\n<p data-pid=\"PudBFkmG\">如果说强化学习是解决大问题的攻城重武器，基于学习的优化算法就是便携式轻量级工具，可以在各种应用中发挥作用，欢迎大家使用！</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/tian-yuan-dong?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">田渊栋</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/505617266?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"谈恋爱到底能不能让人加快成长，成熟？","date":"2022-04-27 03:37:05","description":"\n<p data-pid=\"XtwhjL1A\">很多女生都会发现一个问题，就是恋爱前后对方就好像完全变了一个人。</p>\n<p data-pid=\"lx8ADus4\">比如恋爱前让你感到成熟稳重的他，恋爱后却变得幼稚且不靠谱；比如恋爱前让你安全感十足的人，恋爱后却对你忽冷忽热，让你患得患失。<b>因为你们在恋爱前所表现出来的情感模式，其实是具有一定的伪装性的。</b>相处的时间长了，你们就各自变回自己的情感模式，矛盾也就越来越多。</p>\n<p data-pid=\"DYcj5L-L\">所以不是人变了，而是你们一开始伪装了自己的情感模式，时间长了是没有办法伪装的。你们原以为特别契合的情感模式，其实完全不合适，那时候女生才会开始明白，两个人之间情感模式的匹配才是一段感情得以长久的基础。</p>\n<p data-pid=\"0KDo2EVs\"><b>恋爱固然能加快一个人的成长，没有经历过恋爱的人是无法感同身受的。</b></p>\n<p data-pid=\"O30ed1yQ\">但如果你想要的是一段稳定而长久的亲密关系，不妨来先看看我的新书<i>《爱情基因》</i>，弄明白自己的情感模式，也读懂与之匹配的人是什么样的，才能更好的去恋爱，经营婚姻。</p>\n<p data-pid=\"vPQxodbO\"><b><i>《爱情基因》</i>这本书，是我和我的团队，历时12年，通过1000多个情感案例的研究，得出的结果。</b>这本书里详细介绍了女性在情感里一再受伤的根源，以及人在两性关系中的规律，爱情基因决定了你的爱情状态、婚姻预期，以及在恋爱时愉悦感的建立方式。</p>\n<p data-pid=\"UagD8mr_\">你会喜欢什么人，会被什么人伤害，什么事情会让你开心，什么事情会让你痛苦？这些都是由你的爱情基因决定的。</p>\n<p data-pid=\"nAb-Z7iM\"><b>你遇到的很多情感问题，都能在这里找到答案。</b></p>\n<p data-pid=\"pGwAazB6\">只有认清自己，才能好好爱人。愿我们都能修复爱的伤痕，治愈心底的裂痕。获得圆满的爱情、婚姻关系。</p>\n<p data-pid=\"g3MwDtej\">书里包含情感模式的自测题，可以测一测你们的情感模式是否匹配，并判断这段关系是否要长期发展下去。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-09cc8a3d7f88cb2f386ed1f096f3eaea_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"800\" data-watermark=\"watermark\" data-original-src=\"v2-09cc8a3d7f88cb2f386ed1f096f3eaea\" data-watermark-src=\"v2-801ef58d43271dff950314b6dfe1e2a3\" data-private-watermark-src=\"v2-a094a069c2ac085e5c0cc29127eb2e1e\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/26-68-58-12?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">陆琪</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/271226347/answer/2458523980?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">20 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/511673552?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">男生如何定义一个女生“人很好，很单纯”？</a><br><a href=\"http://www.zhihu.com/question/506272219?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">有些人为什么想谈恋爱又不会主动出击？</a><br>\n","link":"http://www.zhihu.com/question/271226347/answer/2458523980?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"长大后，如果是时间修剪了我们的好奇心，我们应该责怪时间吗？","date":"2022-04-27 03:32:15","description":"前两天是读书日，很多出版商、知识服务商、知识博主都在安利各种各样的书籍，我们可能不担心买书的钱花得值不值，而是担心买来后，有没有时间去看。在告别学生时代，走进职场工作后，我们的读书时间越来越少了。闲暇 ...<a href=\"https://sspai.com/post/72878\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72878"},{"title":"派早报：Android 13 公开测试版上线、OPPO 数字车钥匙适配特斯拉等","date":"2022-04-27 01:01:50","description":"统一推送联盟升级为「统一推送工作委员会」，新款 VAIO S15 笔记本在日本发布等。<a href=\"https://sspai.com/post/72917\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72917"},{"title":"如何评价 4 月新番动画《间谍过家家》第三集？","date":"2022-04-26 13:36:19","description":"\n<p data-pid=\"qLxRVir2\">说实话整个片还是挺好看的，温馨家庭味十足，每集嘻嘻哈哈又甜甜蜜蜜看起来和恋爱喜剧似的。但是看完了却总觉得不对劲，吃饭也不香了，觉也睡不好了。横竖睡不着，爬起来仔细看了半夜，才从字缝里看出来，整个片子都写着两个字“拉扯”！</p>\n<p data-pid=\"FEC7rplL\">可能是我黄油打多了，看那种纯爱甜蜜剧情上了瘾。每次看到这种片都觉得有点不自在。以前看《辉夜大小姐想让我告白》也是差不多，看起来挺好看，但就是不自在。看了《间谍过家家》第三集之后，才突然顿悟了。</p>\n<p data-pid=\"cxCPivwg\">这第三话开头一段旁白就给点明白了：</p>\n<blockquote data-pid=\"y4I-zwjk\">每个人都有不能展现给别人看的一面，对朋友，对恋人，甚至是对家人也不行。顶着虚伪笑容装腔作势，借此掩盖真心，隐藏本性。世界就是如此维系着表面的和平。</blockquote>\n<p data-pid=\"dTe3fhx7\">要想生活过得去，头上总要带点绿。男主不仅不怕绿，还称赞一波约儿舍身扶弟的高尚品德。倒不是男主不怕绿，而是他有个更为惊天的大秘密。用一个谎言去掩盖另一个谎言罢了。</p>\n<p data-pid=\"bYVB8NVy\">女主约儿也差不太多，表面天然，实则妖艳女杀手。被造谣失足甚至连反驳的意愿都没有，失节是小，暴露身份是大。</p>\n<p data-pid=\"2INz814k\">一个字就是“骗”，那毕竟是间谍题材嘛，倒也是挺符合主题的。但是披着间谍题材的皮，群众眼睛也是雪亮的，明眼都能看出来，这本质还是恋爱喜剧嘛。不过这一颠倒了，就看清了很多东西。就是最近的恋爱喜剧，都喜欢提倡“骗”了。或者说提倡“拉扯”了。《辉夜》这种就不说了，像什么《高木同学》、《长瀞同学》啥的……明明可以搞成纯爱的，非要拉扯一番，而且观众还对这种拉扯乐在其中。</p>\n<p data-pid=\"E2lB99O_\">对于习惯了零零年代纯爱黄油（什么世界系啊、命中注定之类的啊啥的）的老害来说，这种拉扯是真的看得不自在。对老害来说纯爱的最高境界，那就是不知不觉中就喜欢上了，喜欢上了就命中注定白发偕老。当然现实生活中的恋爱肯定是拉扯的，但是看个片都要提倡拉扯，那就很别扭了。</p>\n<p data-pid=\"3VcF5L5G\">不过更让人不自在的可能还是更深层次的，这种拉扯式的恋爱喜剧最意识形态的部分其实在于，<b>谈恋爱不仅仅要拉扯，而且你还必须要对拉扯乐在其中</b>。所以无论是《辉夜大小姐》的勾心斗角也好，还是《高木同学》的互相下套也好，还是《间谍过家家》的尔虞我诈也好，虽然就是一个字骗，但是骗得搞笑，骗得甜蜜，骗得温馨。仿佛幸福生活，总是少不了一点拉扯一样。</p>\n<p data-pid=\"QhGp1Sq0\">所以说第三话开头这个旁白其实只说对了一半，虽然每个人都有不能展现给别人看的一面，但是隐藏自我维系的并不是表面的和平。而是真正的幸福生活，只有隐藏自己，欺骗他人，经过无数的拉扯之后，才能到达真正的幸福。间谍男主，杀手女主，如果一开始就开诚布公了，那肯定就没有后续的温馨家庭了。恰恰是因为他们互相欺骗了，才能走向幸福生活。在这个作品里，拉扯不仅不是坏事，甚至还是获得灵魂伴侣的必经之路。别的不说，这勾心斗角的间谍“过家家”我估计比很多现实中晒恩爱的夫妇都要来的幸福温馨。</p>\n<p data-pid=\"YPUrUpwV\">这么一想的话，到也觉得这立意还有点高明了。不过要让老害阿宅去接受这种拉扯式恋爱的文艺观还是有点太难了，所以这些作品往往都没有真正贯彻这个立意。毕竟真要贯彻了这种拉扯恋爱观，那观众肯定会陷入和现实谈恋爱一样的不安情感中去了。那这动画也看起来也颇累人了。都2022年了还要每年追一个《好想急死你》，小心脏可受不了。所以上面提到的这些片子们，要么就是男女主多视角，要么就是有上帝视角有旁白叙述，必须先给观众兜清楚了，虽然我们拉扯，但是我给你保证最后是纯爱。这个上帝视角放到《间谍过家家》里，就是女儿的读心术。这个读心术就相当于给读者吃一个定心丸，让他们可以放心看男女主拉扯又不至于走向不安甚至破防。</p>\n<p data-pid=\"7U6-z6Zg\">而我觉得最别扭的部分其实还是在这里。拉扯式恋爱喜剧虽然有某种高明立意的方向性。但是最后实操还是一次带好护具的过山车。虽然惊险刺激，但是没有真正破防的风险。甚至我们可以说，<b>拉扯式恋爱喜剧是顺应了时代的纯爱变体</b>。在更接近现实恋爱的维度上满足了阿宅们对纯爱的幻想。</p>\n<p data-pid=\"-6adSlDr\">从这个意义上来说，《间谍过家家》可以说是一个非常有代表性的片了。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/fishersonic?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">红茶泡海苔</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/529491054/answer/2458823093?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">57 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/526681041?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价 4 月新番动画《间谍过家家》第一集？</a><br><a href=\"http://www.zhihu.com/question/528060777?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价 4 月新番动画《间谍过家家》第二集？</a><br>\n","link":"http://www.zhihu.com/question/529491054/answer/2458823093?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何给海淘电子产品挑一根「合格」电源线","date":"2022-04-26 09:30:00","description":"本文就简单科普一下海淘中和电源线有关的小知识，希望能帮助到你选购一根合适的电源线，保证用电安全。<a href=\"https://sspai.com/post/72699\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72699"},{"title":"能不能通俗易懂地说说电池包热管理到底是什么，它的意义是什么？","date":"2022-04-26 08:53:50","description":"\n<p data-pid=\"te06WM5f\">可以这么说句“<b>耸人听闻”</b>的话，现在市场上面海量纯电车型里面，还没有一款车型能够做到好的电池热管理。</p>\n<p data-pid=\"Yj2wS11U\">什么是热管理，并不是我们日常所说的不要热失控，真正的热管理实际是<b>温度区间管理</b>。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d91987755d4e18e86843cafc3398c6eb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"370\" data-watermark=\"watermark\" data-original-src=\"v2-d91987755d4e18e86843cafc3398c6eb\" data-watermark-src=\"v2-de1e100827f35be91bd47836a0702e3c\" data-private-watermark-src=\"v2-f473987f801036abbff8f43b1359fbb2\"></p>\n<p data-pid=\"tyc6d-RH\">从电池包的核心部件电芯来看，就是控制<b>单体电芯的工作温度</b>和控制<b>不同电芯的温度差</b>。</p>\n<p data-pid=\"HPYRbkX7\"><b>单体电芯的温度</b>直接影响着电池的<b>性能和寿命</b>，通常热设计的理论是要让电芯控制在20-30摄氏度，现在车企的目标温度区间基本定在10-45摄氏度之间。温度长期高于45摄氏度，动力电池的循环寿命会大幅削减，且会有热失控的安全隐患。而长期低于零度或者更低温中使用，电池容易出现不可逆的充电析锂现象，伤害到电池，甚至可能晶体刺穿隔膜造成内部短路。</p>\n<p data-pid=\"WCvKvygu\">所以说，电池长期高温下运行会有热失控的安全影响，但长期低温运行一样也会有安全影响，也不能忽视。</p>\n<p data-pid=\"o73sa2T4\"><b>不同电芯之间的温度差</b>控制在5-8摄氏度以内比较好，因为过高的温度差并不是会影响临近的电芯，而是在不同的温度下长期充放电，会造成不同电芯的循环寿命、容量、内阻出现差异，最后导致<b>电芯一致性</b>变差。而电芯的一致性变差是电池包出各种问题<b>（安全问题）</b>的源头之一。不仅如此，电芯的温差过大，也会造成<b>系统SOC的不准确</b>。研究表明，当温差超过5摄氏度时，系统的SOC差异大于10%，也就是电量不准。</p>\n<p data-pid=\"doSen-Vs\">要达到目标温度区间的控制，低了需要考虑如何加温，高了要考虑如何降温。衍生开来，就是<b>加热、散热、热均衡、保温</b>这四个措施。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-d07f469f3dc1ea118c518e0c53761e74_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"537\" data-rawheight=\"325\" data-watermark=\"watermark\" data-original-src=\"v2-d07f469f3dc1ea118c518e0c53761e74\" data-watermark-src=\"v2-100db566895ae090ead710dc95828363\" data-private-watermark-src=\"v2-9144954c97e3e1919c80720298b90d91\"></p>\n<p data-pid=\"0LbjG_P6\">以上看起来简单，但实际应用起来，在考虑成本和工艺的前提下，却是非常复杂的一件事情。</p>\n<p data-pid=\"rv-XCTgk\">一般来说，电芯组成模组，模组组成箱体，然后配上其他部件，搭载BMS，成为一个可以装载在车上的电池包。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-038ed79b36b3709afdcab7c0a7029974_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"354\" data-watermark=\"watermark\" data-original-src=\"v2-038ed79b36b3709afdcab7c0a7029974\" data-watermark-src=\"v2-d69ebbcf0d75daedb28e01b334840c7c\" data-private-watermark-src=\"v2-2c7448c818aa94ba59a289ecd15c5214\"></p>\n<p data-pid=\"rVkHFY3D\">要根据系统运行的工况、外部的环境温度、发热功率，计算出换热系数，使得整体电池模组在车辆不同的状况下（剧烈驾驶，平稳驾驶，动能回收，充电）都能在合适的温度区间中工作。</p>\n<p data-pid=\"vXqUIaRK\">而更难的是不同电芯之间的温度差还不能过大，这必须要监控到每一个单体电芯，还需要考虑到电池包局部的散热和加热。因为同一个电池包的同一时间点，不同电芯的工作状态不会完全一样，有的电芯是在放电，有的电芯则是休息。而有的电芯则可能靠近外围，环境温度过低或者过高。所以如何<b>保障单体电芯之间的温度差趋向于零</b>，一直都是个难点。</p>\n<p data-pid=\"-Cz5_x5C\">在设计热管理系统的时候，我们一般拆分成四个子系统来分别进行设计：<b>加热子系统、冷却子系统、热失控阻隔子系统、保温子系统，</b>同时进行仿真分析来初步验证系统设计。</p>\n<p data-pid=\"_DKwwKgS\">其中的冷却系统，就是我们经常说的防止电芯/模组温度过高的降温措施了。</p>\n<p data-pid=\"isT8Zmpv\">现在我们通常在汽车动力电池上面使用的，一般有<b>自然冷却、风冷、液冷、制冷剂冷却</b>等四种降温方式。</p>\n<p data-pid=\"xNjyGh6j\">比如早期的纯电车Leaf,对于动力电池采取的是<b>自然冷却的方式</b>。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f3006036429a278d846b6feb96f4c95a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"768\" data-watermark=\"watermark\" data-original-src=\"v2-f3006036429a278d846b6feb96f4c95a\" data-watermark-src=\"v2-206df76a8acdf409174916e7e940fbf5\" data-private-watermark-src=\"v2-4f524da414d7c6b0993ea44e4dda088e\"></p>\n<p data-pid=\"esT3CT9Y\">什么叫<b>自然冷却</b>，就是电池发热了，靠电池包本身的设计，靠外在环境的空气自然对流给电池降温。其优点就是低成本，不会有冷却系统多占空间。</p>\n<p data-pid=\"5Qf0r2iU\">这种效果就和一盘刚出锅的热菜你无法下嘴，就端到通风的地方让它凉快下。温度降不降得下来，纯靠外在环境给不给力。要是外在温度不高还好，如果是武汉的夏天，室外太阳直射温度60摄氏度还往上，自然风都是桑拿风，这菜估计得多放下才能入口了。</p>\n<p data-pid=\"B6-6Ev0n\">据研究表明，Leaf在炎热地区的电池循环寿命会大为降低，动力电池的剩余容量是随着环境温度的升高而变得越小。</p>\n<hr>\n<p data-pid=\"pVcfc_F9\"><b>风冷系统</b>则是利用风扇的方式，将引来的风加速通过风道，风道连接电芯、模组的表面，将其产生的热量及时带走到外界。</p>\n<p data-pid=\"R4rf162-\">这就类似一盘出锅的热菜，你无法忍受菜自然摊凉，想快点吃上菜，就拿个电风扇对着菜吹。</p>\n<p><img src=\"https://pica.zhimg.com/v2-a34085a9a06f861460f17c93a5f4dd1f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"942\" data-rawheight=\"415\" data-watermark=\"watermark\" data-original-src=\"v2-a34085a9a06f861460f17c93a5f4dd1f\" data-watermark-src=\"v2-4100cbd4e80e8947c77bd24c5fd4b203\" data-private-watermark-src=\"v2-fb5c52d4ad81941b1abb4dcf9f3c6a55\"></p>\n<p data-pid=\"BZdXhaAF\">风冷要设计良好的风道，减少风的阻力和干扰，方便把热量快速带走。</p>\n<p data-pid=\"tJGZIUej\">另一个则是需要合适的风扇，在考虑噪音、功耗、成本的前提下，需要提供足够的升力以保证冷却系统有足够的冷却空气流量。</p>\n<p data-pid=\"V5v82xqM\">最后是冷却空气的选择，可以从环境中引来的自然风<b>（被动风冷）</b>进入风道，也可以是通过热交换把自然风降温后引进风道<b>（主动风冷）</b>。</p>\n<p data-pid=\"kUZ0PnTg\">如欧拉的黑猫系列，采取的就是风冷被动散热系统。优点就是比自然冷却效果要好很多，成本较液冷要低很多，但风冷对整体动力电池的冷却均匀性无法得到保障。越靠近风道尾端，散热效果越差。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-6918bdc2b63d8374cf40e5409240c620_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"600\" data-watermark=\"watermark\" data-original-src=\"v2-6918bdc2b63d8374cf40e5409240c620\" data-watermark-src=\"v2-9488ad6f946b1528a5423afc92647cdf\" data-private-watermark-src=\"v2-7897a86b212c3d41ee9216d854177250\"></p>\n<hr>\n<p data-pid=\"_N3PEWy6\"><b>液冷</b>顾名思义就是利用<b>液冷工质</b>对电池系统内部和外部进行循环降温的方式。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-96e8945c4ff2e24c8d301a3206d37304_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"480\" data-watermark=\"watermark\" data-original-src=\"v2-96e8945c4ff2e24c8d301a3206d37304\" data-watermark-src=\"v2-ce1d470001fc85733be8138fd3fe2e7b\" data-private-watermark-src=\"v2-642ee1d66257b142ced6e36f83044b71\"></p>\n<p data-pid=\"IGgBjX0s\">内部液冷系统带走电芯的热量，进入外部液冷回路中，这部分热量通过热交换器传递给整车空调系统，进行循环利用或者排到环境中。</p>\n<p data-pid=\"CcnU7TAl\">液冷工质不仅仅是可以用水，而是在传热能力、黏度、电绝缘性、腐蚀性、可燃性、毒性和成本方面考虑，常见的工质还可以选择去离子水、乙二醇溶液、硅油、蓖麻油等。</p>\n<p data-pid=\"ZD4_LyEc\">硅油、蓖麻油这类液冷工质可以直接和电芯表面接触进行循环，这种方式就是<b>直接接触式液冷冷却</b>。</p>\n<p data-pid=\"3fTSV2N9\">水、乙二醇不能直接与电芯表面接触，需要额外通过金属容器的隔离和电芯进行间接性接触来降温，这种方式就是<b>间接接触式液冷冷却。</b></p>\n<p data-pid=\"cwsrFQiW\">小鹏G3采取的就是液冷方式。原本的液冷方式，两三年前还是在20万以上的纯电车型上搭载。但是现在推出的新车型，基本10万左右的也开始搭载了液冷冷却系统。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-091ddafc0fa172c60b337bd0c964d002_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"667\" data-watermark=\"watermark\" data-original-src=\"v2-091ddafc0fa172c60b337bd0c964d002\" data-watermark-src=\"v2-81a926eae8d42cce9d85f01cfcb44a34\" data-private-watermark-src=\"v2-c4980e1690991d77acc687d7c33de77e\"></p>\n<p data-pid=\"BTHm5I7V\">当然，液冷除了液冷工质的选择，还有<b>液冷板设计、液冷回路设计、冷却策略设计、机械结构设计、仿真分析、测试验证</b>等一系列的复杂操作，就不一一详述了。</p>\n<hr>\n<p data-pid=\"JMVgHzCi\">最后说的就是<b>冷媒制冷</b>了，和自然冷却、风冷、液冷不同。上面介绍的三种方式是利用冷却工质（风、液体）流过电芯表面，通过对流换热将电芯热量带走，冷却工质并没有发生相变。而冷媒制冷则是冷却工质在冷板中进行相变，利用相变带走大量的热量。</p>\n<p><img src=\"https://pica.zhimg.com/v2-904e838490e689f0a058f84de03369c2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1309\" data-rawheight=\"259\" data-watermark=\"watermark\" data-original-src=\"v2-904e838490e689f0a058f84de03369c2\" data-watermark-src=\"v2-b1b1b25baa9edadc1079abde61da6691\" data-private-watermark-src=\"v2-1a40d6a743fc84d40db431340a3d4cef\"></p>\n<p data-pid=\"Inrjl-IA\">毫无疑问，冷媒制冷是最强效的冷却方式了，在实际使用效果中，冷媒制冷的散热效果是液冷系统的3-4倍。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-12836044f257c58b68346f8c78e8dd75_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"520\" data-rawheight=\"211\" data-watermark=\"watermark\" data-original-src=\"v2-12836044f257c58b68346f8c78e8dd75\" data-watermark-src=\"v2-bc90e93ed6b748025fa9e3e04789e2d5\" data-private-watermark-src=\"v2-99250b787a9ef60ce4ffe4238294d82c\"></p>\n<p data-pid=\"ym3upcdu\">直冷系统的基础结构由<b>压缩机、冷凝器、蒸发器、节流装置</b>组成。制冷工质经过冷却板发生吸热，将电芯的热量带出。</p>\n<p data-pid=\"3fT94qw6\">比亚迪推出的海豚采取的就是冷媒直冷，其优点是冷却效能高，可快速降温，满足电池快充需求。结构相对液冷更加紧凑，节省汽车空间。</p>\n<p><img src=\"https://pica.zhimg.com/v2-f5f82dbd324fa4ce4e32b1aad260ed54_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"723\" data-rawheight=\"493\" data-watermark=\"watermark\" data-original-src=\"v2-f5f82dbd324fa4ce4e32b1aad260ed54\" data-watermark-src=\"v2-6a65da8b7e0f97dee5130953f3876f26\" data-private-watermark-src=\"v2-e3e104a3b03d35fae7f13e5613b08116\"></p>\n<p data-pid=\"iwBKlL8E\">限于篇幅，<b>加热系统、保温系统</b>就不说了。</p>\n<p data-pid=\"CMzlAt1m\">综合来说，一个好的电池热管理，应该是无论何种充放电状态，外界的环境超过50摄氏度还是零下三十摄氏度，都能始终让动力电池处于合适的工作温度区间，不同的电芯的温差控制在5摄氏度以内。保障动力电池正常运行，电芯一致性良好，系统SOC准确无误，电芯容量、循环寿命、安全性不会有明显的改变。</p>\n<p><br></p>\n<p data-pid=\"LOomMWIC\">参考资料：</p>\n<p data-pid=\"lHMJzeYR\">电动汽车动力电池系统设计与制造技术 王芳 夏军 等著</p>\n<p data-pid=\"Kkr3Zm22\">（图片来源网络，侵删！）</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/505242375/answer/2454625334?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">11 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/523780457?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">对地理感兴趣，想知道大城市的发展为什么离不开河流？</a><br><a href=\"http://www.zhihu.com/question/527637171?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">管子的轻重说在现实的适用性是什么？</a><br>\n","link":"http://www.zhihu.com/question/505242375/answer/2454625334?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"现有的混动技术都有哪些?从技术角度讲,哪种混合动力技术更有优势?","date":"2022-04-26 07:58:16","description":"\n<p data-pid=\"aFAcQxIC\">这题我会！混动技术太多了，几乎每个大车企都有，全讲清楚是一件很复杂的事情。<b>本文任务是以最小的学习成本，让你掌握整个脉络</b>！</p>\n<p data-pid=\"hHB64E_m\">先放出这几年来修修补补做出的图：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-2a46be3ab18a0c745cd9452b09047846_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1832\" data-rawheight=\"1118\" data-watermark=\"original\" data-original-src=\"v2-2a46be3ab18a0c745cd9452b09047846\" data-watermark-src=\"v2-fd812a10a6768c58766d37e86b8e22aa\" data-private-watermark-src=\"v2-7cfa424a0d9f486f62896964bd13ec68\"></p>\n<p data-pid=\"cvdPbJri\">看起来很复杂对吗？其实我们只要沿着日系三强抓住主干即可：<b>丰田的功率分流式、本田的串并联式、日产的串联式。</b></p>\n<h2><b>一、串联式/增程式</b></h2>\n<p data-pid=\"-oZ1Ws4n\">先讲串联式，有三个原因：</p>\n<ul>\n<li data-pid=\"le-dyD2a\">\n<b>时间上</b>：它是历史上最早出现的，却又是最晚成熟的。</li>\n<li data-pid=\"oQ6ViHcj\">\n<b>难度上</b>：它是工程上最容易入门的，却又是技术上最难精进的。</li>\n<li data-pid=\"l6loBXtL\">\n<b>构型上</b>：它的构型最简单，方便大家理解。</li>\n</ul>\n<p data-pid=\"CbJ9gvot\">串联式很简单：<b>发动机给电池充电，然后给电机驱动车轮。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-b87e57d842cee7ba72dc989477f4e72e_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"544\" data-rawheight=\"156\" data-watermark=\"original\" data-original-src=\"v2-b87e57d842cee7ba72dc989477f4e72e\" data-watermark-src=\"v2-c180c6735e32efb367173277d6fc9536\" data-private-watermark-src=\"v2-cab0023080f16be9d6931e0963a3cdd8\"></p>\n<ul>\n<li data-pid=\"ogTlkxwV\">\n<b>从燃油车的角度来看</b>，串联式是在发动机与车轮之间加了一套电驱系统的「中介」，整个系统是串起来的，所以叫<b>「串联式」混合动力</b>。</li>\n<li data-pid=\"DiIIWN35\">\n<b>从电动车的角度来看</b>，串联式是给电池加了发动机+发电机构成的「充电宝」，所以也被称为「<b>增程式」电动汽车</b>。</li>\n</ul>\n<p data-pid=\"SkEi9leC\">注意了，虽然是同一个东西，但一个叫「混合动力」、一个叫「电动汽车」，听起来差别还挺大的。</p>\n<p><img src=\"https://pica.zhimg.com/v2-46c4997adcaa38531d0939ae7edce219_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"718\" data-watermark=\"original\" data-original-src=\"v2-46c4997adcaa38531d0939ae7edce219\" data-watermark-src=\"v2-6155e6e2c6332947f885809843051557\" data-private-watermark-src=\"v2-0e7619a817d2a0a06039404b8038109f\"></p>\n<p data-pid=\"xi1Q2kAq\">为了这件事，通用汽车还较真打过官司，参见：</p>\n<a href=\"https://zhuanlan.zhihu.com/p/51985322\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-e7643d77bb24ad062fcc32b17e6c39e1_qhd.jpg?source=b1748391\" data-image-width=\"720\" data-image-height=\"479\" class=\"internal\">张抗抗：增程电动往事</a><h3><b>1. 串联式是历史上最早出现的</b></h3>\n<p data-pid=\"mYswyztp\">费迪南德·保时捷于1896年设计了四轮轮毂电机驱动的纯电动汽车Lohner-Porsche，但续航太短。</p>\n<p data-pid=\"jtSaGWAN\">为了解决这一难题，费迪南德·保时捷又加上了一台内燃机，从而打造了世界上第一辆串联式汽油机混合动力汽车Lohner-Porsche Mixte Hybrid。</p>\n<p><img src=\"https://pica.zhimg.com/v2-539338aff5eb68adf3d088ce8040c03d_720w.png?source=b1748391?rss\" data-caption=\"Lohner-Porsche Mixte Hybrid\" data-size=\"normal\" data-rawwidth=\"1263\" data-rawheight=\"841\" data-watermark=\"original\" data-original-src=\"v2-539338aff5eb68adf3d088ce8040c03d\" data-watermark-src=\"v2-53c596122feddaf00504581596b4aec1\" data-private-watermark-src=\"v2-e3988c5852ed6926e9f3157ff564f47b\"></p>\n<h3><b>2. 串联式是历史上成熟最晚的</b></h3>\n<p data-pid=\"RVmxX7lC\">日产NOTE e-POWER，油耗与同级别的丰田混动、本田混动相当，并于2017-2019年连续三年夺得日本1.6L排量以下小型乘用车市场销量冠军。</p>\n<p data-pid=\"IjVlvxRq\"><b>这就从技术与产品两个角度证明了串联式的成熟</b>。</p>\n<p data-pid=\"mS8f_EF4\">2017年，丰田THS已经卖了上千万辆了，本田iMMD也早就走向了成熟，所以说日产e-POWER成熟比较晚。<b>为什么会晚？ 主要是串联式对发动机的重新研发要求最高，详见：</b></p>\n<a href=\"https://www.zhihu.com/question/508210803/answer/2453133673\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-3d0be118a159ab178ae741a1a83d4334_qhd.jpg?source=b1748391\" data-image-width=\"907\" data-image-height=\"399\" class=\"internal\">增程式电动汽车是油转电再驱动，传统汽车是油驱动，是增程式转化效率高吗？</a><h3>3. 新时代的增程：理想ONE、岚图FREE、华为问界5</h3>\n<p data-pid=\"lOpGUPfL\">这一波后起之秀，搭上了<b>锂电池成本大幅降低、锂电池成组技术快速成熟</b>两大东风，让「大电池串联式」这种几年前看起来「非常糟糕」的混动构型，也变得相当合理了，可以说是天时地利人和啊！</p>\n<p data-pid=\"qZretVEN\">两年前，大众中国CEO说增程电动车的技术方案「最糟糕」，也并不是乱喷。<b>只不过，他拿的剧本有点过时了，没想到中国让锂电池成本降低那么快、让锂电池成组技术成熟那么快！</b></p>\n<a href=\"https://www.zhihu.com/question/420163215/answer/1463177496\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-60489a07daf9d81790ab2b530b9be486_l.jpg?source=b1748391\" data-image-width=\"1147\" data-image-height=\"1064\" class=\"internal\">如何看待大众中国 CEO 炮轰「增程电动车」：胡说八道，是最糟糕的方案？</a><p data-pid=\"ODvH-BvJ\">「大电池串联式」技术方案能变得相对合理，主要是因为电动汽车的产业成熟给奶起来的。从这个角度来说，都沾了电动汽车的光了，还天天指着电动汽车续航短大作文章，这就不太合适了。</p>\n<p data-pid=\"IQWI3ixO\"><b>「大电池串联式」技术方案变得相对合理，但并不能说成熟</b>。</p>\n<p data-pid=\"xUoLh5CD\">为什么这么说？来看一个对比吧：摩卡DHT PHEV与理想ONE车型相似、车重相似，动力与经济性的对比如下：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-d4b068d3282185e7deb480cc60eee108_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1539\" data-rawheight=\"740\" data-watermark=\"original\" data-original-src=\"v2-d4b068d3282185e7deb480cc60eee108\" data-watermark-src=\"v2-be60c6f15e4e88a2a5d288769093786b\" data-private-watermark-src=\"v2-3d42da77f57315663e877ed0903b5528\"></p>\n<ul>\n<li data-pid=\"PpANtTrC\">\n<b>动力性：</b>总功率380kW vs 341kW，零百加速4.8s vs 6.5s，意味着新势力某SUV车型以89.7%的总功率，实现了73.8%的加速性能(车重修正后为75.4%)，两个比值相除并车重修正后为118.9%。<b>可以说，相比较于串联式混动构型，串并联混动系统的动力利用率提高了18.9%</b>。</li>\n<li data-pid=\"5y0jHCxz\">\n<b>经济性：</b>摩卡DHT PHEV四驱版的动力性要显著高出25%左右（已考虑车重修正），那么根据「鱼和熊掌不可兼得」原理，续航应该短很多、油耗应该低很多吧？ 来看看数据，<b>WLTC的纯电175km续航，折合NEDC大概是200公里，比188公里还要高6%左右；WLTC馈电油耗6.3升，折合NEDC大概是5.67L，比8.8L要低35%左右</b>。</li>\n</ul>\n<p data-pid=\"1V0e6Qi2\">也就是说，「大电池串联式」进化成「大电池串并联式」后，动力性提高、经济性也提高。因此，「大电池串联式」本质上只是「大电池串并联式」的一种退化，优势是可以让新势力快速推出新车。</p>\n<p data-pid=\"AynlmGXy\"><b>反观日产e-POWER则不一样，它以放弃直连为代价，获得了发动机进一步的专用化、获得更高的热效率（日产目标是实现50%的超高热效率）</b>。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-e36102c8df159507dd86743bdb69244d_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"749\" data-rawheight=\"363\" data-watermark=\"original\" data-original-src=\"v2-e36102c8df159507dd86743bdb69244d\" data-watermark-src=\"v2-3e21c2597bb8532f87ec24272e848702\" data-private-watermark-src=\"v2-07626673a25ef162d9e3728d2e2e1c63\"></p>\n<ul>\n<li data-pid=\"522KD62E\">放弃直连，获得了高热效率收益，这叫成熟。</li>\n<li data-pid=\"HhbF3hUB\">放弃直连，仅获得了快速出产品，这叫妥协。</li>\n</ul>\n<p data-pid=\"NjeLv3lt\">当然，我必须声明一下：<b>汽车是to C产品，技术是为产品服务的；评价一个汽车企业，不能光看技术，更要看产品能力；技术不强但能做出很强的产品，这也是独特且优秀的企业，是能够造福消费者的企业。</b></p>\n<p data-pid=\"5fremOqe\">再说直白一些，我想表达的意思是：<b>理想ONE月销万辆，肯定也是好产品。但是，仅从混合动力系统水平的角度来说，进步潜力非常大！换言之，如果理想ONE的动力性、经济性达到长城DHT那样的水准，消费者岂不是更欢喜？</b></p>\n<h3>二、串并联式</h3>\n<h3>1. 本田i-MMD</h3>\n<p data-pid=\"38-Fm-qk\">串并联式很简单，就是在串联式的基础上增加一个发动机直连模式，代表做是本田i-MMD。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-9f10b945541bb152a6f02fb1b1896523_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"744\" data-rawheight=\"465\" data-watermark=\"original\" data-original-src=\"v2-9f10b945541bb152a6f02fb1b1896523\" data-watermark-src=\"v2-216a8691e1fde619d159d6818e75d5a4\" data-private-watermark-src=\"v2-a11d49030a976d19ec93beb232478829\"></p>\n<p data-pid=\"gCQIXBk5\">串并联式的模式切换比想象得频繁。从下图可以看出：<b>无论是在中速行驶还是高速工况下，增程模式与引擎模式都是频繁切换的。</b>在高速段需要在引擎模式与增程模式之间频繁切换；在中速段甚至要在纯电模式、增程模式、引擎模式三种模式之间频繁切换。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-ad6e54f75d4407a4e0b2490e824b9c20_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"468\" data-rawheight=\"372\" data-watermark=\"original\" data-original-src=\"v2-ad6e54f75d4407a4e0b2490e824b9c20\" data-watermark-src=\"v2-4ca1dc58dc6ec4fdb3912cc25aa81b43\" data-private-watermark-src=\"v2-875ef9ebadf7070179a5b06f9d0d73ae\"></p>\n<p data-pid=\"iEFkeaW6\">模式切换必须做到「无缝切换」，这就是给新势力造成了巨大阻碍： <b>与传统变速箱类似的换档控制问题和多动力源的动态协调控制问题</b>。这阻碍着实大，搞不好公司都没了，干脆还是做串联式吧。</p>\n<h3>2. 比亚迪DM-i</h3>\n<p data-pid=\"yyQ-rJ5J\">构型上与本田i-MMD相似，思路上与日产相似 ，进一步强化了发动机的「专用化」。骁云1.5L发动机不讲武德，只能用于插混，不能用于燃油车。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-b75cab724bf01e2c17fddd01acd8a654_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"612\" data-rawheight=\"649\" data-watermark=\"original\" data-original-src=\"v2-b75cab724bf01e2c17fddd01acd8a654\" data-watermark-src=\"v2-85d8e3c69575ac11380f58b658457671\" data-private-watermark-src=\"v2-f4867d0c5765560a46e57fcc37fbe520\"></p>\n<p data-pid=\"k_u4uJMM\">两年前，我就对比亚迪DM-i的评价很高：<b>比亚迪推出了一款插混专用的骁云1.5L自吸发动机，目标却是实现更好的新能源动力技术，剑指传统燃油车。</b></p>\n<a href=\"https://www.zhihu.com/question/432584257/answer/1619236358\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-6fe426789451890ff0c21a0410ff5e7d_qhd.jpg?source=b1748391\" data-image-width=\"1096\" data-image-height=\"704\" class=\"internal\">如何评价比亚迪秦PLUS搭载的DM-i混动技术，为何被称之为「超级混动」？</a><p data-pid=\"nmG6Nlt2\">那时候比亚迪DM-i还没开始卖，不少人质疑我是不是吹得太过了。<b>两年过去了，大家回头再看看呢？</b></p>\n<a href=\"https://www.zhihu.com/question/525821174/answer/2422475982\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-accba345b42a845f9e2117fd9b77d88e_l.jpg?source=b1748391\" data-image-width=\"617\" data-image-height=\"610\" class=\"internal\">比亚迪宣布自2022年3月起停止燃油汽车的整车生产，此举对比亚迪发展有何意义？燃油车车主会受影响吗？</a><h2>3. 长城DHT</h2>\n<p data-pid=\"_4Wu9dQA\">长城DHT是在本田i-MMD或比亚迪DM-i基础上，将发动机直驱档一分为二：<b>动力直驱档、经济直驱档。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-22b8bd61d58722f8644be732b1755d16_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"865\" data-rawheight=\"451\" data-watermark=\"original\" data-original-src=\"v2-22b8bd61d58722f8644be732b1755d16\" data-watermark-src=\"v2-01bbcd7c644e6fae5897b1e428eb5e61\" data-private-watermark-src=\"v2-dced05911ae469a61cf3e4e6c0c59527\"></p>\n<ul>\n<li data-pid=\"73btMBlN\">\n<b>动力直驱档</b>：速比较大，动力较强，在车速35-65公里/小时介入时，既提高经济性也提高动力性；更高车速下的加速工况下也可介入，以提高动力性。</li>\n<li data-pid=\"wHB430vb\">\n<b>经济直驱档</b>：速比较小，在65公里/小时以上时介入，可以提高经济性、降低发动机噪音。</li>\n</ul>\n<p><img src=\"https://pica.zhimg.com/v2-4594d8464bb0c1983d16f83d312eda6d_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"865\" data-rawheight=\"453\" data-watermark=\"original\" data-original-src=\"v2-4594d8464bb0c1983d16f83d312eda6d\" data-watermark-src=\"v2-0aef22a3a8e993ee92767fe33061cd26\" data-private-watermark-src=\"v2-cace639cfcdb21965db379090ca1a818\"></p>\n<p data-pid=\"7ZzYjOj_\">概括来说就是：<b>中低速时采用动力档直驱，中高速时采用经济档直驱，以提高经济性；无论中低速还是中高速，急加速时都采用动力档直驱，以提高动力性</b>。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-7d5143eb5694697809eb312fdd0a6d97_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"692\" data-rawheight=\"519\" data-watermark=\"original\" data-original-src=\"v2-7d5143eb5694697809eb312fdd0a6d97\" data-watermark-src=\"v2-ae37b6b90eeeeafeb8cdfabbe3093e1e\" data-private-watermark-src=\"v2-c01d8a993a697766717cb4baff5508e0\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-a012d2af619a2e9e9b48bfa68eab562d_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"865\" data-rawheight=\"181\" data-watermark=\"original\" data-original-src=\"v2-a012d2af619a2e9e9b48bfa68eab562d\" data-watermark-src=\"v2-a5762e30c0248c23fbccd8a84e673319\" data-private-watermark-src=\"v2-8594c38926fa47e07163837bfa232433\"></p>\n<p data-pid=\"ywo3HlL5\">增加一个档位，对动力性与经济性都有好处，考验的就是成本、可靠性、平顺性。<b>总体上来说，长城DHT可以理解为是高性能的串并联式，可类比为比亚迪DM-p（还未发布）</b>。</p>\n<h2>三、功率分流式</h2>\n<p data-pid=\"__l48IKa\">前文提到的日产e-POWER与比亚迪DM-i，在混动历史上属于晚辈，有一个共同点： <b>发动机并不是高高在上的地位，它只是系统的一个零部件，必要的时候可以做出牺牲与调整，也就是专用化</b>。</p>\n<p data-pid=\"d2w2wGTV\">早期混动并非如此，特别是丰田THS，它的思路还是： <b>发动机是高高在上的大爷，整个混动系统都要是给发动机打工的</b>。</p>\n<p data-pid=\"WUB9mf6b\">那时候，评价混动系统的唯一标准，就是有没有把发动机给服侍舒服了。那么，我们想问发动机，你最舒服的时候，是什么样子呢？有四点：</p>\n<ol>\n<li data-pid=\"bpAYtDxe\">\n<b>避免发动机转速剧烈变化</b>。若没有混动系统，当变速箱档位固定时，发动机转速与车速是一一对应的关系，即便油门踩的稳，遇到坡度变化时也会出现速度的波动，更不用说复杂的路况了。<b>在串联式(包括增程式)、功率分流式混动系统中，以及串并联式的某些工作模式下，发动机转速与车速解耦，不存在直接关系</b>。</li>\n<li data-pid=\"zV2EAo5z\">\n<b>避免发动机转矩剧烈变化。</b>若没有混动系统，在特定转速下，转矩与油门踏板深度是一一对应的关系。除了<a href=\"https://www.zhihu.com/search?q=%E9%AB%98%E9%80%9F%E5%B7%A1%E8%88%AA&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A876739877%7D\" class=\"internal\">高速巡航</a>之外，大部分情况下大家不会将油门踩到固定位置。<b>在串联式、<a href=\"https://www.zhihu.com/search?q=%E5%B9%B6%E8%81%94%E5%BC%8F&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A876739877%7D\" class=\"internal\">并联式</a>、串并联式、功率分流式混动系统中，驱动电机可以配合输出正转矩或负转矩(发电)，以实现发动机转速与油门解耦，不存在直接关系</b>。</li>\n<li data-pid=\"WhwEPl4n\">\n<b>避免发动机工作在低负载工况。</b>若没有混动系统，在市区堵车时，大家都知道怠速空转或低速蠕行时发动机效率很低，但此时既不能关掉发动机（带轻混系统除外）、也不能一脚油门轰下去啊！<b>在所有形式的混动系统中，车辆在低负载工况下仍然可以让发动机工作在中高负载工况下，多出的输出功率可以发电存储在电池中。</b>\n</li>\n<li data-pid=\"4pI_jMgg\">\n<b>制动能量回馈</b>：若没有混动系统，一脚刹车踩下去就意味着大量的动能转化成热能，耗散在空气中了。在所有形式的混动系统中，部分制动能量可以发电储存到电池中。</li>\n</ol>\n<p data-pid=\"lDUii8HN\"><b>列个表对比一下：发动机说还是功率分流式最舒服</b>。</p>\n<p><img src=\"https://pica.zhimg.com/v2-5f2ab80f13fb02d0d7e64145076f8eb9_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"410\" data-watermark=\"original\" data-original-src=\"v2-5f2ab80f13fb02d0d7e64145076f8eb9\" data-watermark-src=\"v2-a65ba90213e80fe16fb2b3bd22d6e9a7\" data-private-watermark-src=\"v2-6d69993cda0998aa467282ef240a04ba\"></p>\n<p data-pid=\"JtR-e_xQ\">那可不，发动机的转速与转矩都是自由的，同时还能直驱车轮，太舒服了！</p>\n<p><img src=\"https://pic2.zhimg.com/v2-59152fb96d18067d9260a128b9eb2fab_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"480\" data-rawheight=\"372\" data-watermark=\"original\" data-original-src=\"v2-59152fb96d18067d9260a128b9eb2fab\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"qH5KkH2h\">丰田THS出现最早，侍候发动机最好，也就是所谓的「出手既巅峰」。人家成功是有道理的！</p>\n<p data-pid=\"DY5_OJbS\"><b>要说缺点，主要是难以实现高性能。</b>以前这不是什么大事，中国人有个车省油能开就满足了；但在电车遍地的今天，这个缺点恐怕将会变得显著。</p>\n<a href=\"https://www.zhihu.com/question/296161292/answer/564870690\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-77890f2ea9cb45d1d3057fb96df151d7_qhd.jpg?source=b1748391\" data-image-width=\"1153\" data-image-height=\"899\" class=\"internal\">为何丰田混动的动力似乎都不是很强？</a><h2>小结</h2>\n<p data-pid=\"AF-UsBNo\"><b>存活到2022年还有强大生命力的混动系统，基本上就以上三种类型。掌握了这个主干，就具备了深入研究的基础。</b></p>\n<p data-pid=\"BbS3GjCy\">混动历史上，还有很多逐渐被淘汰的构型，它们的故事也很精彩，但就不放在本文了。知乎上有一个混动技术的专栏，我觉得很不错，推荐给大家：</p>\n<a href=\"https://www.zhihu.com/column/c_1425497145570525184\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-52a669542a8699d42a3c5796c7e536e9_l.jpg?source=b1748391\" data-image-width=\"200\" data-image-height=\"200\" class=\"internal\"><span class=\"invisible\">https://www.</span><span class=\"visible\">zhihu.com/column/c_1425</span><span class=\"invisible\">497145570525184</span><span class=\"ellipsis\"></span></a><a href=\"https://www.zhihu.com/column/c_1425497145570525184\" class=\"internal\">混动汽车百科</a><a href=\"https://www.zhihu.com/column/c_1425497145570525184\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-52a669542a8699d42a3c5796c7e536e9_l.jpg?source=b1748391\" data-image-width=\"200\" data-image-height=\"200\" class=\"internal\">混动汽车百科</a><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhangkangkang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">张抗抗</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/39246535/answer/2458071312?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">54 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/523595398?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">油电混动与插电混动有什么区别，如何评价当今市面上的混动技术？</a><br><a href=\"http://www.zhihu.com/question/26916862?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">日系车的混合动力技术有什么区别？</a><br>\n","link":"http://www.zhihu.com/question/39246535/answer/2458071312?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"《最终幻想14》更新 6.0 了，现在「入坑」依然不晚","date":"2022-04-26 07:45:21","description":"前些时间，我终于做了一件酝酿很久的事——从零开始入坑《最终幻想14》，也就是俗称的FF14，并且跑通了它从 2.0 到 5.0 版本的所有主线。 期间，我把两个战斗特职练到了满级，对应版本的大型副本和娱乐玩法也基本上都一一解锁体验了一遍，从建号算起，前后历时正好整整一个月。<a href=\"https://sspai.com/post/72894\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72894"},{"title":"我们找了 3 个「非典型」案例，想和你聊聊脊柱侧弯的自我治疗","date":"2022-04-26 06:30:00","description":"本文为系列下篇，将与你分享具有运动力学专业背景的作者的自我治疗实验，以及两位受脊柱侧弯困扰的作者是如何发现与治疗的。<a href=\"https://sspai.com/post/72898\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72898"},{"title":"每天都涂防晒，会不会防晒过度，影响身体维生素 D 合成，导致骨质疏松呢？","date":"2022-04-26 06:19:06","description":"\n<p data-pid=\"WOJoSKdM\">好像没有看到这方面大量的人体研究。</p>\n<p data-pid=\"utlq3RvF\">因为不同人处于不同纬度，不同的户外工作时间，用的防晒产品和使用时间都不同。如果仅仅是几百上千人的临床研究我觉得完全不够，起码中国要不同地区选几个城市，农村城市都测测，起码也要几千数万人的研究才能够磨平这些影响因素。</p>\n<p><br></p>\n<p data-pid=\"SgRlk66k\">不过非人体测试我几年前看过这样一个论文。</p>\n<p data-pid=\"pnJtFIQH\">假设紫外线对人体的伤害是通过产生自由基（这个当然不是完全正确的）。那产生多少的自由基才会对皮肤有害呢？</p>\n<p data-pid=\"RmyPs5KF\">在2014年，Zastrow，Doucet和Al将自由基阈值（FRTV）定义为〜3.5×10 12 rad / mg。只有超过这个限制，才会对皮肤产生有害影响。</p>\n<p data-pid=\"2lpo70h9\">然后这个值也有点尴尬，几乎接近维生素D的产生值。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-0d3f277dcec3e1e510af36b2bc4487a1_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"777\" data-rawheight=\"500\" data-watermark=\"watermark\" data-original-src=\"v2-0d3f277dcec3e1e510af36b2bc4487a1\" data-watermark-src=\"v2-d9f3a56adf85a10e971c9cf1b3652a2c\" data-private-watermark-src=\"v2-30a882dd3ccd911b502d5efc89e470b9\"></p>\n<p data-pid=\"YweuPd4b\">（这就像药物维生素A酸。它的单用起效浓度和它的刺激性浓度几乎差不多，甚至按化妆品（这个维生素A酸是处方药）一般来说不良反应要控制在1%以下的话，0.025%浓度A酸都刺激率都很高。所以不建议用A酸当护肤品用的。）</p>\n<p data-pid=\"oScyvQ2A\">上面实验当然也有缺陷。但是就这个研究来说，如果我们防晒做得好，那确实<b>有可能</b>影响身体合成维生素D。</p>\n<p data-pid=\"lUF9-aZc\">之前和潇嫂去体检，当时医生就说，最近几年的女性抽血体检看，缺少维生素D的情况不断增加，不知道是不是大家防晒做得太好了。</p>\n<p data-pid=\"4X9-V1Kd\">手动扶额。。。。</p>\n<p data-pid=\"2erT22-8\">医生这个是猜测，不过这个猜测也不是完全没有理由的。</p>\n<p data-pid=\"T-E2M3ci\">所以，就我个人而言，</p>\n<p data-pid=\"An0dLWu7\">第一：每年一次体检真的很重要。</p>\n<p data-pid=\"2EZ4pAGI\">第二：防晒不要盲目使用防晒霜。ABC原则很重要。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-b6d63d86d5b8ec3b6866ad4e710d8fe4_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"888\" data-rawheight=\"828\" data-watermark=\"watermark\" data-original-src=\"v2-b6d63d86d5b8ec3b6866ad4e710d8fe4\" data-watermark-src=\"v2-3241bc8ffaeabef406ca6913422dbecf\" data-private-watermark-src=\"v2-2aa93e7be7b89dd03ee5b82ef8ff8f8f\"></p>\n<p data-pid=\"X3XgAu3Q\">我就喜欢这种的！</p>\n<p data-pid=\"Upg_Jr-u\">第三，多吃蔬菜，多休息，少熬夜（熬夜也会影响维生素D的合成），如果体检发现缺维生素D，可以买点保健品吃，如果没有体检，也可以吃，但是吃的量建议减少，比如一周两次。不要每天吃哈。</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/yan-yu-xiao-10?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">言雨潇</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/529871750/answer/2456753255?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">31 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/529082032?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">成人补充哪种维生素D?</a><br><a href=\"http://www.zhihu.com/question/529423613?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么现在好多人都缺乏维生素D?</a><br>\n","link":"http://www.zhihu.com/question/529871750/answer/2456753255?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"不怕晒黑的话，是不是可以不用涂防晒了？","date":"2022-04-26 06:17:53","description":"\n<p data-pid=\"tiYIn0K1\"><b>NO，防晒最核心的意义在于预防日光危害，晒黑只是日光危害众多表现的其中一种。</b></p>\n<p data-pid=\"3TYu_VUS\">我们来模拟一下，假设你不涂防晒，在阳光下暴晒，会出现什么情况。</p>\n<hr>\n<h3><b>5分钟后：</b></h3>\n<blockquote data-pid=\"dh0mbhEp\">\n<b>你开始感觉到皮肤有轻微的发热，但暂时看起来还没有什么变化。</b><br>这是由于太阳光中的红外线，起了热效应，红外线可以使物体发热，同理微波炉。</blockquote>\n<h3><b>10分钟后：</b></h3>\n<blockquote data-pid=\"bWKwBGb6\">\n<b>你的面部先开始感觉到明显的灼烧感，脸部产生轻微的局部泛红现象。</b><br>这是因为面部皮肤属于较为脆弱的皮肤区域，所分布的触感神经也更细腻，而局部性泛红则是因为太阳直射所形成的刺激性红斑，一般在阴凉处休息一会是可以自己消退的。</blockquote>\n<h3><b>20分钟后：</b></h3>\n<blockquote data-pid=\"wYcBAPwg\">\n<b>你的面部泛红开始加重，泛红区域扩散到全脸，面部产生轻微的刺痛感。</b><br>这是面部皮肤角质层功能降低的重要信号，你的皮肤正遭受着太阳直射光的损害，特别是敏感肌，因为本身敏感肌的皮肤屏障就要比其他肤质薄，所以这方面的表现会比其他肤质的反应更为明显。</blockquote>\n<h3>40分钟后：</h3>\n<blockquote data-pid=\"EZl4Sl2b\">\n<b>你的脸开始出现瘙痒、明显的刺痛感，全身皮肤开始泛红，身体皮肤角质层功能降低。</b><br>这时候的皮肤开始产生紫外线过敏的现象，紫外线过敏是日光作用于人体所引起的异常光变态性反应，简单来说它就是一种免疫性反应。<br>我们皮肤里有少量的光感物质，数量因人而异，这些光感物质在受到紫外线一定程度的照射后就会开始发生反应。<br>所以当紫外线作用于我们的皮肤表面，光感物质产生反应，引起毛细血管直径增粗，皮肤产生特异性炎症，你就会感觉刺痛和发痒。</blockquote>\n<p><br></p>\n<h3>2小时后：</h3>\n<blockquote data-pid=\"uUZeSQ6X\">\n<b>你的皮肤干燥、灼热、疼痛难忍，肉眼可见明显的红肿现象。</b><br>这时候的皮肤已经处于非常严重的缺水状态，也是我们出去海边玩最容易遇见的情况，去海边游泳度假常见的晒伤症状，已经属于中度晒伤了。</blockquote>\n<h3>12小时后：</h3>\n<blockquote data-pid=\"9HHtIHuz\">\n<b>你的皮肤开始出现脱皮的现象，伴随着火辣辣的感觉。</b><br>这是由于皮肤细胞吸收热量过多，部分皮肤细胞损伤、坏死，而表皮上部的组织坏死聚集，就会产生“蜕皮”的现象。</blockquote>\n<h3><b>24小时后：</b></h3>\n<blockquote data-pid=\"j5H8Dau9\">\n<b>皮肤泛红开始慢慢消退，消退后原本的皮肤已经不在白皙，被照射的皮肤变黑。</b><br>这是因为紫外线对于我们表皮的黑素细胞具有增殖、活化的作用，所以日晒以后，由于黑素细胞增殖、活化以后产生黑素增多，暴露于紫外线下的皮肤就会出现色素沉着过度，导致皮肤发黑，这一点会在皮肤泛红褪去的时候非常明显。</blockquote>\n<p><br></p>\n<hr>\n<p data-pid=\"ZgOjz4OQ\">看到这里你还敢不涂防晒吗？</p>\n<p data-pid=\"WQ0TE7-E\">如果你抱着侥幸心理说，那我也不会傻到每天在太阳底下暴晒，我出去都走阴凉的地方，那你就错了。</p>\n<h3><b>比晒伤更可怕的，是光老化。</b></h3>\n<blockquote data-pid=\"QYfu2qPb\">\n<b>何为光老化？</b><br><b>经过日光紫外线照射所引起的皮肤老化，都统称为光老化。</b>\n</blockquote>\n<p data-pid=\"qy79vDzJ\">而紫外线作为一种具有散射、反射、折射特性的光线，很遗憾的告诉你，它<b>并非只存在于你肉眼所看到的阳光中</b>，在阴凉处它也是存在的。</p>\n<p><br></p>\n<p data-pid=\"ZfSToTAo\">我们的皮肤分为三层<a href=\"http://link.zhihu.com/?target=https%3A//vibaike.com/3123/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">结构</a>：表皮层、真皮层、<a href=\"http://link.zhihu.com/?target=https%3A//vibaike.com/129101/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">皮下组织</a>(<a href=\"http://link.zhihu.com/?target=https%3A//vibaike.com/37205/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">脂肪</a>和<a href=\"http://link.zhihu.com/?target=https%3A//vibaike.com/37425/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">血管</a>、<a href=\"http://link.zhihu.com/?target=https%3A//vibaike.com/37433/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">神经</a>)，而皮肤是人体最先衰老的部位之一。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-1b3730705b5a2d70029284b9c95c38a3_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"641\" data-rawheight=\"423\" data-watermark=\"original\" data-original-src=\"v2-1b3730705b5a2d70029284b9c95c38a3\" data-watermark-src=\"v2-8799635d06b94dff16f0ec74699f2f76\" data-private-watermark-src=\"v2-124a7a0e031f569fc8409a46dbdea559\"></p>\n<p data-pid=\"x4NULt7j\">真皮层的<a href=\"http://link.zhihu.com/?target=https%3A//vibaike.com/37447/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">胶原蛋白</a>、弹力<a href=\"http://link.zhihu.com/?target=https%3A//vibaike.com/125476/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">蛋白</a>和其他<a href=\"http://link.zhihu.com/?target=https%3A//vibaike.com/37536/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">纤维</a>等，合力构成了一个“弹簧支架”，对皮肤影响比较大的是中波与长波紫外线。</p>\n<p data-pid=\"PVR60yja\">中波紫外线到达肌肤时，有70%被表皮最外边的<a href=\"http://link.zhihu.com/?target=https%3A//vibaike.com/129105/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">角质层</a>给吸收了，有20%到达了表皮层的下层，有10%穿透了表皮层，到达了真皮层的上层。</p>\n<p data-pid=\"83bG2ngs\">而<b>紫外线的作用便是导致皮肤晒伤晒黑，进而衰老的“元凶”之一。</b></p>\n<p><br></p>\n<p data-pid=\"2vWxgQkc\"><b>皮肤衰老主要分为自然衰老和<a href=\"http://link.zhihu.com/?target=https%3A//vibaike.com/25025/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">光老化</a>两种形式，</b>而光老化与自然老化的<a href=\"http://link.zhihu.com/?target=https%3A//vibaike.com/3139/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">特征</a>又有所不同。</p>\n<ul>\n<li data-pid=\"FuCCoIQW\">光老化所带来的后果有深皱纹、色斑、肤色不佳、癌前病变等11项问题；</li>\n<li data-pid=\"JFJUWSUO\">而自然老化带来的结果只有三项：细纹、松弛和良性肿瘤。</li>\n</ul>\n<p><br></p>\n<p data-pid=\"nuICvfxG\">光老化是非常普遍的，尤其是在强光照射的情况下，我们的面部容易出现皱纹，就像一些高原地区居民或是长期在户外<a href=\"http://link.zhihu.com/?target=https%3A//vibaike.com/3278/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">工作</a>的人，鱼尾纹或是笑纹的出现要比一般人早上很多。</p>\n<p data-pid=\"TyDQAFSw\">和自然老化相比，<b>光老化更容易导致癌前病变，皮革样外观和弹性组织变性等问题，同时更容易引起皮肤的各种肿瘤，</b></p>\n<blockquote data-pid=\"svdrufRk\">如：日光角化病、<a href=\"http://link.zhihu.com/?target=https%3A//vibaike.com/133639/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">鳞状细胞癌</a>、<a href=\"http://link.zhihu.com/?target=https%3A//vibaike.com/133628/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">黑色素细胞</a>瘤等。</blockquote>\n<p><br></p>\n<p data-pid=\"cE-kJxHi\">比较出名的案例就是《新英格兰医学》的慢性光老化了，相信很多人都讲过了我也不多说了。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-90c3bb3115b04eb1b6f7be9d7fe9ec76_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"266\" data-rawheight=\"400\" data-watermark=\"original\" data-original-src=\"v2-90c3bb3115b04eb1b6f7be9d7fe9ec76\" data-watermark-src=\"v2-6811f2d8ddf80448b7afbfbf8d6c74ec\" data-private-watermark-src=\"v2-d6a82c7f0cc6694ecdb54914a4083ab6\"></p>\n<p data-pid=\"rQs-SiyJ\">再举个比较典型的吧。</p>\n<p data-pid=\"uXGaSpJM\">在2012年伦敦奥运会开幕的时候，比尔盖茨观赛的照片就成为成为了当时很多人讨论的热门，没到花甲之年的盖茨看起来好像已经提前进入了衰老状态。</p>\n<p data-pid=\"n-4kahrK\">盖茨的面部皮肤已经呈现了<b>典型光老化症状——深皱纹、肤色不均、色斑</b>，当然，这和欧美人热衷日光浴是密切相关的。</p>\n<p><img src=\"https://pica.zhimg.com/v2-6c035907b02aed2e9976daa5b01eb53b_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"354\" data-rawheight=\"613\" data-watermark=\"original\" data-original-src=\"v2-6c035907b02aed2e9976daa5b01eb53b\" data-watermark-src=\"v2-97009de0aae7f65a2cc758388f34eb0e\" data-private-watermark-src=\"v2-78b85c38119d68299d6033da3cb6f379\"></p>\n<p data-pid=\"BgVfDCMn\">一些网友也贴出了盖茨几年间的对比照片，以此显示盖茨的苍老程度，感兴趣的可以自己去搜一搜。</p>\n<p><br></p>\n<p data-pid=\"Gw6Fu8HA\">所以说<b>光老化是个缓慢的过程，我们防晒首要的并非防止“晒黑”，而是要防止“老化”</b>，大家平时还是要注意防晒，最好穿深色的衣服，因为紫外线比较容易穿透浅色衣服。</p>\n<p data-pid=\"m8dh2-te\">上午10点到下午3点的时候，是阳光最猛烈的时候，这时能不出门就别出门了，即使阴天或雨天也一样，因为长波紫外线能穿透云层，照射进真皮层。</p>\n<p><br></p>\n<p data-pid=\"krcSPQFo\"><b>最后谢谢大家的观看，如果感觉有帮助不如点个赞？</b></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/ju-li-ju-qi-66-90?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Diego</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/529106374/answer/2456689296?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">76 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/527880810?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">女生不想晒黑只涂防晒霜可以吗，还是需要其他防晒装备？</a><br><a href=\"http://www.zhihu.com/question/529934102?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">夏天到了，防晒该怎么涂呢？</a><br>\n","link":"http://www.zhihu.com/question/529106374/answer/2456689296?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"每天都涂防晒，会不会防晒过度，影响身体维生素 D 合成，导致骨质疏松呢？","date":"2022-04-26 06:15:06","description":"\n<p data-pid=\"WHSzf7_6\">谢谢彭工 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/83bf190109e7e95955286a32f87ccd77\" data-hash=\"83bf190109e7e95955286a32f87ccd77\" data-hovercard=\"p$b$83bf190109e7e95955286a32f87ccd77\">@配方师Markgo</a> ，这题我会，在书本上啃到过。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-2c135516905bf9917742e000be82f28d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"373\" data-rawheight=\"190\" data-watermark=\"watermark\" data-original-src=\"v2-2c135516905bf9917742e000be82f28d\" data-watermark-src=\"v2-36849ab58508e86f932f66a68f225d0a\" data-private-watermark-src=\"v2-6165cc89ad5f4bf30b0d2ac47c675d62\"></p>\n<p data-pid=\"6uFcRtof\">开明综义，确实会有影响。</p>\n<p data-pid=\"1lEL91SF\">维生素D是各种维生素中的另类，它是在皮肤里合成的。说具体点，是在表皮的棘层和基底层。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1a0a422283efd9fea3685f7a013d27a4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"220\" data-rawheight=\"218\" data-watermark=\"watermark\" data-original-src=\"v2-1a0a422283efd9fea3685f7a013d27a4\" data-watermark-src=\"v2-b153b03f9840ed39579900a7eb57286a\" data-private-watermark-src=\"v2-e5c487e2b2ca9265b17abc68f147715e\"></p>\n<p data-pid=\"F6zFBy3Z\">原料是7-脱氢胆固醇，在紫外线的作用下6号电子发生顺旋电环化反应，形成前维生素D3。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-18714468a69f1c3ae5a8a6f61f594d00_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"82\" data-watermark=\"watermark\" data-original-src=\"v2-18714468a69f1c3ae5a8a6f61f594d00\" data-watermark-src=\"v2-091b2de68a2121800e012a5e39d5e54a\" data-private-watermark-src=\"v2-cb917d846d16f786c57f54ea2f0812e1\"></p>\n<p data-pid=\"WlTGN9Qu\">前维生素D3再缓慢地形成维生素D3，室温下整个过程可以花上12天。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-5edc800378e7d477684a03d4a4e38d67_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"135\" data-watermark=\"watermark\" data-original-src=\"v2-5edc800378e7d477684a03d4a4e38d67\" data-watermark-src=\"v2-ca3a24ce68bf9f00babf8e367888cab3\" data-private-watermark-src=\"v2-6cd09cb946834e5fd68eecb2c1452a12\"></p>\n<p data-pid=\"_PJn5nRI\">皮肤里不缺7-脱氢胆固醇，把它转化成前维生素D3是反应限量的关键步骤，需要波长在300纳米左右的紫外线催化，也就是我们常说的UVB波段。</p>\n<p data-pid=\"SagMvgkm\">这是人体能够合成的维生素D3（胆钙化醇），白色的蘑菇会合成维生素D2（麦角钙化醇）。</p>\n<p data-pid=\"3cVwlgT8\">两种形态的维生素D，都会被我们的肝脏转化为骨化二醇，血浆中维生素D指标25(OH)D就是这个。</p>\n<p data-pid=\"Og71sr17\">骨化二醇会被肾脏进一步转化为骨化三醇（1,25(OH)D），维生素D的最终活性形态，主要作用是调节<span class=\"nolink\">钙</span>和<span class=\"nolink\">磷酸盐</span>的浓度，并促进骨骼的健康生长和重塑。骨化三醇还具有其他作用，包括对细胞生长、神经肌肉和免疫功能以及减轻炎症的作用。</p>\n<p data-pid=\"by7avl8H\">维生素D缺乏症其实不仅限于缺钙和佝偻症，同时还会影响肌肉强度，提高患高血压和糖尿病等疾病的风险。</p>\n<hr>\n<p data-pid=\"Kn0uKOzA\">好了冒充营养学专家到此为止。</p>\n<p data-pid=\"7LJzfd5k\">维生素D既然是在皮肤里合成的，那自然跟皮肤状态以及护肤方式有千丝万缕的关系。</p>\n<p data-pid=\"0jxqjW_k\">首先产生维生素D的棘层和基底层都在角质层以下，而角质层中的黑色素会吸收UVB，所以肤色对于维生素D的影响很大，皮肤越黑，晒太阳产生维生素D的效率越低。</p>\n<p data-pid=\"OFb1dZWW\">同样的道理放在防晒霜也是一样，在实验室里，仅仅SPF8的防晒，就能导致一个MED当量的光照后，血液中25(OH)D指标增量被显著抑制。</p>\n<p data-pid=\"izHu9kZo\">一项对照实验，一组24人用防晒，另一组19人不用防晒，两年后检测，发现不用防晒的一组血浆中25(OH)D含量显著高于用防晒的一组。</p>\n<p data-pid=\"7xPknLdt\">这种区别在室内工作和户外工作的人群中差距更大。</p>\n<p data-pid=\"0ZDloSpM\">这个关联的确是存在的，我还不至于为了卖点防晒霜就昧着良心掩盖事实。</p>\n<p data-pid=\"hisbwmLf\">而且，如果被晒黑了，晒太阳合成维生素D的效率也会下降。</p>\n<p data-pid=\"f7mRiPvK\">既要健康又要美美的，就得多吃点补充维生素D的食物，除了刚才说的白蘑菇可以补充维生素D2之外，鸡蛋黄，鱼类脂肪，以及添加了维D的牛奶乳制品，都可以帮我们补充维生素D。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-f244455ceeee71ce52ddcbd1f7aeed36_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"1200\" data-watermark=\"watermark\" data-original-src=\"v2-f244455ceeee71ce52ddcbd1f7aeed36\" data-watermark-src=\"v2-294329b4adb39fb453171cf48aacce57\" data-private-watermark-src=\"v2-58f1752c20392b7947834ad832b11709\"></p>\n<p data-pid=\"709ymPHp\">健康饮食很重要，维生素D是一种脂溶性维生素，做得油腻一点更好吸收。</p>\n<p><img src=\"https://pica.zhimg.com/v2-3a16632709a93fe759ecc98eb487e320_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"785\" data-rawheight=\"729\" data-watermark=\"watermark\" data-original-src=\"v2-3a16632709a93fe759ecc98eb487e320\" data-watermark-src=\"v2-b777a2f1f59bb31a383e8ff19c22cfa6\" data-private-watermark-src=\"v2-643d51e1fbc8268ea68adb45563cc5f9\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/juan-fu-jiang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">卷福酱</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/529871750/answer/2456745605?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">31 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/529082032?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">成人补充哪种维生素D?</a><br><a href=\"http://www.zhihu.com/question/529423613?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么现在好多人都缺乏维生素D?</a><br>\n","link":"http://www.zhihu.com/question/529871750/answer/2456745605?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"大家都在用防晒，但是光用防晒能达到什么程度，能否做到抗老或者美白？","date":"2022-04-26 04:52:33","description":"\n<p data-pid=\"pCXTUATf\">得益于品牌市场部、各类成分党、护肤博主多年孜孜不倦的宣传，“防晒的必要性”已经成为了大家的基本共识，从防晒入手进行抗老/美白的思路也逐渐扎根人心。</p>\n<p data-pid=\"Qa5tzQrC\">先说我个人的理解：<b>做好防晒工作=主动抵御自然外因造成的老化</b>。</p>\n<p data-pid=\"bY3e33Wt\">采取防晒措施，就意味着我们在主动回避不采取措施时会遭遇的光伤害，而光伤害是肌肤老化的最主要外因之一。</p>\n<p data-pid=\"IXpw9oRL\">理论上来说，人类的老化有内因和外因促成：</p>\n<p data-pid=\"y-zhs7vc\">内因包括如先天基因（有些人的天生丽质），年龄上升后的细胞老化，新陈代谢下降，肌体环境的陈旧等。</p>\n<p data-pid=\"DnCBRXtT\">皮肤逐渐变薄，干燥，出现细小皱纹，但是很少有不均匀的色斑和深刻的皱纹，也没有全面的暗沉和粗糙。</p>\n<p data-pid=\"JqD9Fuyx\">一般意义上说的intrinsically aged skin（内因导致的老化皮肤）会接近下图的样子，保养非常得当的肌肤，自然老化后大概就差不多这样。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-20910daebe125284f74a2acef5a6548a_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1017\" data-rawheight=\"679\" data-watermark=\"watermark\" data-original-src=\"v2-20910daebe125284f74a2acef5a6548a\" data-watermark-src=\"v2-6d38a23d1a33d562fe2c5e4db785bfe6\" data-private-watermark-src=\"v2-24fd62415aac59a71a6094ddac51ad0f\"></p>\n<p data-pid=\"qjyFczJg\">而我们生存的环境并不会允许我们有幸等到内因老化的出现，在我们每一天的生活里，导致肌肤老化外因也每天都在发生作用：日光（UVA/UVB等光老化）；污染（空气污染）；电离辐射（手机，电吹风）；刺激性化学物质（抽烟喝酒）等。这种外界因素带来的肌肤老化，和内因造成的自然老化非常不同，主要体现在不均匀的表皮、斑点暗沉、深刻且不匀称的皱纹等，伴随着粗糙和松弛。</p>\n<p data-pid=\"InTb-6ph\">相信这张图大家也都看到过，一张常年半边日晒的面部肌肤状态对比，可以作为“外因老化”的比较直观的例子：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-ba8cbf1e0b4c1e61adeec4ba7b1a4409_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"338\" data-watermark=\"watermark\" data-original-src=\"v2-ba8cbf1e0b4c1e61adeec4ba7b1a4409\" data-watermark-src=\"v2-e97d7c9d8faaeafcc15f89d07b9a4d10\" data-private-watermark-src=\"v2-20f7722a8a53ecdfe067c9c45ff6d290\"></p>\n<p data-pid=\"B7ffNb_y\">而我们日化产品能够做的，不是“逆天改命”去改变自己基因，或者改造自己的肌体环境，而是针对外因刺激入手，尽可能降低环境对肌肤造成的老化影响。</p>\n<p data-pid=\"_e0rRdDh\">打个比方的话，我们的皮肤状态就像是一部开往老化的小车，内因是一个匀速施加的力，而外因则是一个加速器，我们要做的就是减少这个加速器的力，让我们的小车尽可能匀速地驶向终点。</p>\n<p data-pid=\"Nzg1PK7V\">所以回到问题上来，“防晒能达到什么程度”？</p>\n<p data-pid=\"P-63g4W4\"><b>坚持、到位的防晒</b>能达到尽可能减少光伤害的作用，使肌肤减少光老化，减缓老化速度。</p>\n<p data-pid=\"iQVOxzJ1\">而从防晒的原理来看，我们能知道它<b>除了防晒老之外，还能防晒黑</b>，从另一个角度来看也就达到了“美白”的目的——试想，你用了无数美白产品，但是不用防晒，且不说美白产品起效多块，就说每天被阳光唤醒的黑色素，是不是两者相抵就在做无用功呢？</p>\n<p><img src=\"https://pica.zhimg.com/v2-6d61cb2cb922385ba2b3570de05cda5f_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"490\" data-rawheight=\"414\" data-watermark=\"watermark\" data-original-src=\"v2-6d61cb2cb922385ba2b3570de05cda5f\" data-watermark-src=\"v2-cb0067832979e34095c83d4e3da8a723\" data-private-watermark-src=\"v2-1876f22655a34f81c3ee4adfd63b2ea9\"></p>\n<p data-pid=\"uZlmjpoN\">所以防晒在我这儿看起来，是一种基础的，但是很靠谱的防御手段，做好这个工作，在抗老/美白 征途上会走得轻松许多。</p>\n<p data-pid=\"-ywkksll\">至于很多小伙伴都想做的类似于“逆转肌龄”这种逆天改命的事情，防晒是做不到的，日化用品最多也就给你从抗氧化/减少肌肤应激反应的程度来帮助你尽可能持久地维持在现有的肌肤状态，真的想要逆龄翻盘，还是得看医美啊……</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/baobaoling?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">凌暴暴</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/528893397/answer/2458108733?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">18 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/528640862?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2022 年大家买防晒的时候更偏向物理防晒、还是化学防晒、或是物化结合的防晒？</a><br><a href=\"http://www.zhihu.com/question/504790481?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">摄影师在户外采取什么防晒措施才能最大程度避免照射紫外线？</a><br>\n","link":"http://www.zhihu.com/question/528893397/answer/2458108733?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"App+1 | 完全免费的素材库管理新选择：Billfish","date":"2022-04-26 03:33:34","description":"作为一款素材管理软件，Billfish 可以说是 Eagle 的平替——目前上线官网的 Billfish 2.0 版本覆盖了 Eagle 基础功能的八成左右，在满足一般使用需求的基础上还更小更轻，而且完全免费。<a href=\"https://sspai.com/post/72847\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72847"},{"title":"派早报：vivo 发布 X80 系列智能手机、Twitter 接受马斯克 440 亿美元收购案","date":"2022-04-26 00:56:15","description":"PlayStation Plus 上线时间公布，小米游戏手柄精英版发布等。<a href=\"https://sspai.com/post/72897\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72897"},{"title":"派评 | 近期值得关注的 App","date":"2022-04-25 10:30:23","description":"你可以通过文章目录快速跳转到你感兴趣的内容。如果发现了其它感兴趣的 App 或者关注的话题，也欢迎在评论区和我们进行讨论。<a href=\"https://sspai.com/post/72893\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72893"},{"title":"耗尽红利后雪崩，Netflix 得了「空心病」","date":"2022-04-25 08:02:44","description":"如今的流媒体行业与十年前相比已然沧海桑田，Netflix 近期的糟糕表现也令人不禁怀疑：曾经带飞 Netflix 的商业模式是否依然具备长线运营的条件？<a href=\"https://sspai.com/post/72843\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72843"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\n    return new Date(date.toLocaleString('en-US', { timeZone }))\n}\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        timeZone\n    })\n    return {\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\n        convert (date) {\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\n        }\n    }\n}\n\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\n    return converter.convert(new Date(secDate), tzName) - secDate\n}\n\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\ncmn-Hans-SG = 中文普通话-简体-新加坡\ncmn-Hant-TW = 中文普通话-繁体-台湾\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\ncmn = 中文普通话\n\nzh-Hans = 中文-简体\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\n}\n\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long'\n}\nconst now = new Date()\n\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\n\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\n\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\n\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\n\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\n\nzhCNFormatter.format(now) // 2021年10月13日星期三\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\n\njaFormatter.format(now) // 2021年10月13日水曜日\njaAltFormatter.format(now) // 令和3年10月13日水曜日\n\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\n// {locale: 'zh-CN', calendar: 'gregory', …}\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\n     // 基于一个固定日期计算，这里选择 1970.1.1\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\n    const base = new Date(1970, 0, 1).getTime()\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\n    return Array.from({ length: 7 }, (_, day) =&gt; (\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\n    ))\n}\n\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n}).formatToParts(new Date())\n// [\n//     { type: 'year', value: '2021' },\n//     { type: 'literal', value: '年' },\n//     { type: 'month', value: '10' },\n//     { type: 'literal', value: '月' },\n//     { type: 'day', value: '13' },\n//     { type: 'literal', value: '日' },\n//     { type: 'weekday', value: '星期三' },\n//     { type: 'literal', value: ' ' },\n//     { type: 'dayPeriod', value: '上午' },\n//     { type: 'hour', value: '1' },\n//     { type: 'literal', value: ':' },\n//     { type: 'minute', value: '00' },\n//     { type: 'literal', value: ':' },\n//     { type: 'second', value: '00' }\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\n}\n\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\n  timeZone: 'America/Los_Angeles',\n  year: 1995,\n  month: 12,\n  day: 7,\n  hour: 3,\n  minute: 24,\n  second: 30,\n  millisecond: 0,\n  microsecond: 3,\n  nanosecond: 500,\n  calendar: 'iso8601'\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote>\n<p>周六不放假休息，还在这加班搞 CTF？</p>\n</blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/86535/11/24318/75037/622032a8E4f94d4ae/89703ccc122cf4e0.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"从 Google Analytics 的统计代码说起 —— 谈谈 script 标签的 async 和 defer 属性","date":"2020-10-13 09:25:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/80291/2/16552/19311/622032b3Eb300c2aa/66748fc8124a01c5.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/script-async-defer/\">https://blog.skk.moe/post/script-async-defer/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/script-async-defer/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将 […]","link":"https://flyhigher.top/develop/2160.html"}]