[{"title":"咖啡地图 | 哥伦比亚的咖啡与宗教","date":"2022-05-20 06:30:00","description":"哥伦比亚，可能很多人都是在各类电影、新闻中看到它的身影，并且充斥着一些不可细说的东西。但在咖啡世界中，不得不说哥伦比亚是个神奇的存在。它不仅是咖啡产量世界第三大国，而且咖啡的处理方法被他们玩出了新高度 ...<a href=\"https://sspai.com/post/73296\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73296"},{"title":"译文 | 无障碍字体指南：如何让字体更为友好","date":"2022-05-20 03:32:28","description":"当我们希望让我们的信息尽可能的无障碍时，选择一种可以帮助视力不佳、学习障碍、失语症、失读症或者低识字率的阅读者提高易读性（legibility）和可读性（readability）的字体是至关重要的。下文所列出的原则不是影响字体无障碍的唯一因素，但它们是基于神经科学和形成性研究的用户数据所总结出的提升阅读体验的基础。有一些字体自称对不同的用户类型都是「无障碍的」，但其根据只是一些假设和传闻。所以在你使用字体/字型前请检查一下字体声明。\n<a href=\"https://sspai.com/post/73290\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73290"},{"title":"派早报：Apple 武汉零售店将于 5 月 21 日开幕、vivo S15 系列正式发布","date":"2022-05-20 01:02:42","description":"Sony 正式发布 LinkBuds S 耳机，惠普发布战 99 锐龙版移动工作站等<a href=\"https://sspai.com/post/73318\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73318"},{"title":"创作者请回答｜没错就是我：用文字走进一场「完美谋杀」","date":"2022-05-19 13:11:44","description":"\n<p data-pid=\"pOZ_Dbrc\">在档案局里，我们曾请来过刑侦专家和法医，他们用自己的亲身经历带大家抽丝剥茧，寻找案件背后的真相。</p>\n<p data-pid=\"dANgKQ-t\">想必各位知友们都曾听说过大名鼎鼎的唐风吧！在作者 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/1a3ed751799813bd3cbca85b8ff29feb\" data-hash=\"1a3ed751799813bd3cbca85b8ff29feb\" data-hovercard=\"p$b$1a3ed751799813bd3cbca85b8ff29feb\">@没错就是我</a> 的笔下，老刑警唐风与徒弟一起，破获了多起错综复杂的案子，成为平安和正义的守护使者。</p>\n<p data-pid=\"XNjggmko\">在档案局开办的一开始，我们就邀请到了这位老刑警，给大家分享了他曾经历过的那些惊心动魄的案件，和那些现实生活里发生过的重案故事。</p>\n<p data-pid=\"WJSnwtPa\"><b>今天，局长带大家重温经典，一起听唐风背后的那个男人讲讲他自己的故事，没错就是他！</b></p>\n<h2>这个「唐风」，没错就是他</h2>\n<p data-pid=\"HFypmOs1\"><a href=\"https://www.zhihu.com/xen/market/remix/paid_column/1187437252308869120\" class=\"internal\">《完美谋杀：一位老刑警笔下的 7 个真实重案故事》</a>是答主「没错就是我」在知乎上发表的第一个盐选故事专栏，也是他本人短篇创作的开始。</p>\n<p data-pid=\"pdV38kym\">专栏故事里的两位主角——有着二十年警龄、参与破获数起重案的资深刑侦人员唐风（也是答主同时使用的笔名），和他的同事兼徒弟韩东升——通过一线刑侦人员的讲述口吻，故事呈现了 7 桩堪称「完美」的犯罪案件。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-96475a0e4e5083f0bcdd8d6a03354336_b.jpg\" data-size=\"normal\" data-rawwidth=\"1036\" data-rawheight=\"1379\" class=\"origin_image zh-lightbox-thumb\" width=\"1036\" data-original=\"https://pic3.zhimg.com/v2-96475a0e4e5083f0bcdd8d6a03354336_r.jpg\"><figcaption>《完美谋杀：一位老刑警笔下的 7 个真实重案故事》纸质书</figcaption></figure><p data-pid=\"IgXnaKhW\">这些案子要么犯罪现场是天衣无缝的密室；要么是嫌犯有无懈可击的不在场证明；要么凶手明明近在咫尺，却没有证据抓捕他……</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-d3d05584bc36126c4ec76a1ba4499cee_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1270\" data-rawheight=\"678\" class=\"origin_image zh-lightbox-thumb\" width=\"1270\" data-original=\"https://pic3.zhimg.com/v2-d3d05584bc36126c4ec76a1ba4499cee_r.jpg\"></figure><p data-pid=\"Pt29C8Y1\"><b>但最引人入胜的，还是在于这些故事背后的真实性。</b>专栏的创作并非完全虚构，它们或多或少都与答主的本职工作有关。</p>\n<p data-pid=\"BETjW3Qs\">在现实世界里，答主「没错就是我」是一名 80 后法律专业资深从业者，同时也是刑事科学技术研究人员。</p>\n<p data-pid=\"eYbSKs53\">而促使他成为一名作家的原因，也非常奇妙。</p>\n<p data-pid=\"gqo91r0Z\">当年，风靡网文界的作品《鬼吹灯》，因作者天下霸唱更新得太慢，南派三叔索性自己写出了《盗墓笔记》。</p>\n<p data-pid=\"c-jR3nvO\">而「没错就是我」开始写作的理由，则是因为南派三叔的《盗墓笔记》没填的坑太多，「等得实在太难受了，我就开始自己写了。」</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-da1bb70d1aeafe5a82baabf944557c20_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"240\" data-rawheight=\"147\" data-thumbnail=\"https://pic1.zhimg.com/v2-da1bb70d1aeafe5a82baabf944557c20_b.jpg\" class=\"content_image\" width=\"240\"></figure><p data-pid=\"KgpK0II1\">作为一个从小看书比看电视多、将文字视为重要媒介的一代人，「没错就是我」在大学时期就开始在国内的小说期刊上发表文章，开始了自己的悬疑小说创作之旅。当时，他在天涯论坛上做连载，引发了巨大关注。2010 年，他出版了自己的第一本悬疑小说。</p>\n<p data-pid=\"RFWLpRBJ\">出书这件事，除了帮助他完善了自己对长篇文学作品的系统性策划能力，也让他结识到一批忠实且专业的读者。其中，就有如今的知乎盐选专栏制作人。</p>\n<p data-pid=\"R-RXh6Cd\">2019 年，受到知乎专栏制作人的邀请，「没错就是我」入驻知乎专栏，根据个人从业经历，创作出各类虚实相生的犯罪故事，探寻人性深处的幽微。</p>\n<h2>在知乎，书写正义</h2>\n<p data-pid=\"VIEesGNf\">除了素材并非完全虚构，《完美谋杀》在叙事手法与价值取向上有着极强的个人风格烙印——</p>\n<p data-pid=\"oVQYAz3S\">首先，即便专栏名字中带有「谋杀」二字，但在故事里，作者都刻意回避了对作案手法和血腥场面的细节描写，也很少出现那些「天生的罪犯」人设，几乎都是只用两三句话一笔带过，简单陈述某人被害的事实以及大概的作案过程。<b>他无意用这些猎奇的内容来抓人眼球。</b></p>\n<p data-pid=\"CtHbvL7B\">「这不存在什么保不保密的问题」，「没错就是我」说，「很多作案手法在网上、电视上都能看得到，我只是不爱写这种强烈感官刺激的东西，我更侧重在一个人物是否可以让你共情上。」</p>\n<p data-pid=\"4tRbyKXP\">不少同题材的创作者容易陷入对作案逻辑的过度挖掘，强行追求高能反转。这一点，「没错就是我」也不赞同，「现实中不是所有的犯罪都是遵循完善逻辑的，充满随机性，才是犯罪动机的常态。」</p>\n<p data-pid=\"kJTjMJ3d\"><b>从业十几年，他深知，好人与坏人的身份并非是恒定的，而是更取决于语境。</b>这成为他摒弃非黑即白的设定，尽力塑造复杂角色的理由。</p>\n<p data-pid=\"eiCJm9L4\">其次，高能的一线刑侦工作现场，让他笔下的故事本身就呈现着奇观。但答主没有仅仅停留重现奇观上，而是往前又走了一步，给出价值观的引导——即每个短篇的结尾，借由主人公「唐风」之口，抒发带有作者看法的朴素价值观。</p>\n<p data-pid=\"1nWYvEQh\"><i>在</i><a href=\"https://www.zhihu.com/market/paid_column/1187437252308869120/section/1202190914464321536\" class=\"internal\">《犯罪嫌疑人三年前就死了》</a><i>这篇故事的结尾，「唐风」对策划谋杀自己父亲的凶手马力说：「仇恨这团烈火一旦燃烧起来，要么催人奋进，要么就会反噬其身。而这团火，与其用来和恨的人同归于尽，倒不如用来照亮你的未来。」</i></p>\n<p data-pid=\"wjQ4_Tpw\"><i>在《</i><a href=\"https://www.zhihu.com/market/paid_column/1187437252308869120/section/1196079085502296064\" class=\"internal\">出租房里凭空出现的尸体</a><i>》的结尾，「唐风」宽慰由于复杂案情而对人性失望的徒弟韩东升不必灰心：「风再大，也吹不走太阳。」</i></p>\n<p data-pid=\"_Nvhmdrv\">这样的处理与他的写作目的直接相关。「没错就是我」在知乎上的简介是「书写正义」，这不是一种只靠主观祈求就能实现的愿望，更需要有所行动。</p>\n<p data-pid=\"sNDU_Yui\">具体到一个作者身上，「没错就是我」的选择是把这种价值观写进作品。这并非刻意为之，带有价值观的写作一向难以伪装，用他自己的话来说，「文字就是指纹。警察、法官、检察官，这些工作面对的都是社会的阴暗面，只有这种从心底就认可这种很朴素的价值观的人，才能在这个岗位上守纪守法地坚持下去。」</p>\n<p data-pid=\"mt733Fqb\">这些故事字里行间透露出的乐观和对正能量的向往与推崇，是早已融入他的骨血、会下意识流露出来的愿望。</p>\n<p data-pid=\"UNVuo_3J\">除此以外，「没错就是我」的盐选作品也从文字开始「立体化」。2021年年末，由《完美谋杀》专栏改编的剧集《第四审讯室》在视频平台上线，在后疫情时代，师徒二人的刑侦之旅仿佛一剂强心剂，为更多人注入「正义」的力量。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-b5d4c249849de9d4cefe6ee727582279_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"450\" data-rawheight=\"620\" class=\"origin_image zh-lightbox-thumb\" width=\"450\" data-original=\"https://pic2.zhimg.com/v2-b5d4c249849de9d4cefe6ee727582279_r.jpg\"></figure><p data-pid=\"G4gwFP1v\">而在今年，《完美谋杀》的纸质版《锋芒—唐风探案笔记》也已经出版上市。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-bb50b3f15d5654f23fff815af9012c1f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"800\" class=\"origin_image zh-lightbox-thumb\" width=\"800\" data-original=\"https://pic4.zhimg.com/v2-bb50b3f15d5654f23fff815af9012c1f_r.jpg\"></figure><p data-pid=\"qmhugBPP\">他知乎写下自己的感想：「《完美谋杀》上线已经两年了。我有幸目睹它一天天攀上专栏的榜首，让人激动和欣慰。更让我高兴的是，很多读者在专栏下留言，大段大段的话，像是喷薄而出的岩浆，炽热澎湃，又理性温和。</p>\n<p data-pid=\"p7-hAeZS\">他们谈论罪恶的根源，书写自己的感悟，以及对生活的热爱、对生命的珍惜。更可贵的，他们有着对于正直的坚持和热爱。这个世界，就是因为这样的人，一步步地走向美好。」</p>\n<h2>画出「公平正义」最完美的圆</h2>\n<p data-pid=\"kzltdolL\"><b>答主认为，社会上几乎所有的进步，都是由正向力量的事情推动促成的。</b></p>\n<p data-pid=\"Iejd8SDS\">「我觉得我喜欢知乎的原因之一就是这里的读者，我确实能够感受到很多读者对公平正义的向往和想要维护它的决心，他们能在一个很复杂的社会中保持清醒的头脑和明确的是非观，他们很专业，很年轻，让人很有信心，我觉得这是国家强大的一种标志。」</p>\n<p data-pid=\"qkmr6nAF\">他的读者以90后、00后居多，这些刚刚进入社会的年轻人是社会中最朝气蓬勃的群体，他们也正值形成三观的年纪，他希望自己的写作能够带给这些人希望。</p>\n<p data-pid=\"40CFa7ax\">《完美谋杀》连载时，一位女读者留言表示自己受到鼓舞，准备毕业后去考警察。「没错就是我」在惊讶之余提醒对方慎重考虑，并提示了对方可能的风险。但下一次交谈时，女孩依然发来了自己的公安专业招生考察表格。对于一个创作者来说，自己的作品被读者看到，对读者产生影响，这个过程又通过读者的行动反馈过来，这让他由衷感动。</p>\n<p data-pid=\"F--eU4qE\">现实与作品仿佛也在此刻形成了互文。「唐风」作为谋杀宇宙的绝对中心，一直以来都是作者笔下的重点。设定中，这已经是一个极为稳定、完善的警官。如今，「没错就是我」将更多笔墨添到唐风的徒弟韩东升身上，在新的专栏中，韩东升出现的频率越来越高，成长越来越快，成为唐风的得力帮手与挚友。<b>如同社会的进步一样，也是在这样一棒一棒的交接中完成。</b></p>\n<p data-pid=\"3dOYr-Am\">「没错就是我」欣赏罗翔。他认为，对一个法律工作者、法学工作者来说，现实工作和人性温度不好兼顾，这世界上很多高度理智的人都少了一点人文关怀，但他欣赏罗翔互动时流露出的关照感。同时他最欣赏的作家是余华，因为「他的文字幽默、简单，但你就是能够读出一种悲怆来。」</p>\n<p data-pid=\"fNtUufai\">十几年的从业经历，他见证着瑰丽复杂的人性。在采访中我们问答主，对这个世界的年轻人有什么嘱咐，他郑重表达——</p>\n<p data-pid=\"c_306SIZ\">「这个世界很残酷，但是也很美好，做人要善良，但是也要时刻保持警惕，对生活保持一种谨慎的乐观，才能走得更加稳健。<b>如果可能，做一个好人，如果有足够的定力和意志，做一个正直的人。</b>某种程度上，做一个正直的人比做一个好人更难，因为后者只需要做好自己，前者则要影响别人。这个世界的美好就是由每一个好人和正直的人铸就起来的。」</p>\n<p data-pid=\"ZG_a7Z8F\">跟唐风背后的塑造者聊完，我们深切体会到和平安宁的来之不易。想到那一句话，<b>「岁月静好，那是因为有人替我们负重前行。」</b></p>\n<p data-pid=\"n-smjP6K\">最后，如果你是重度悬疑故事爱好者，想围观刑警们的办案过程，想了解那些离奇案件背后的真相，就看它！局长先走一步，三刷去了～</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-0602f67b991df9bbc55aff94bb7cfa24_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"552\" data-rawheight=\"394\" class=\"origin_image zh-lightbox-thumb\" width=\"552\" data-original=\"https://pic1.zhimg.com/v2-0602f67b991df9bbc55aff94bb7cfa24_r.jpg\"></figure><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/gu-shi-dang-an-ju-71?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">故事档案局</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/516827572?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"新玩意 106｜少数派的作者们最近买了啥？","date":"2022-05-19 09:30:00","description":"长达万字、海量更新。<a href=\"https://sspai.com/post/73311\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73311"},{"title":"风投公司 a16z 宣布设立第一支 6 亿美元的游戏基金，致力于打造游戏行业的未来，如何解读这一行为？","date":"2022-05-19 09:09:51","description":"\n<p data-pid=\"36hhv03d\">1.先说结论</p>\n<p data-pid=\"t5-qvhUf\">对游戏行业来说是好事。</p>\n<p data-pid=\"UrRfCFuE\">a16z算是硅谷相当主流的风投基金（最主要的案子像是facebook，instagram和airbnb），成立6个亿美元的大额游戏专项基金，对游戏行业的整体风向是非常利好的。</p>\n<p data-pid=\"cbSEcMQF\">尽管今年早些时候griffin和makers分别都宣布募了7.5亿和5亿美元新基金，但他们本身就是相对垂直的基金，griffin全称就叫griffin gaming partners，makers没说自己只投游戏也基本是投互动娱乐相关的内容和技术领域。</p>\n<p data-pid=\"rbDIv9ak\">另一个点在于，a16z在普遍善于叙事的机构里，也算是一个独树一帜会造风造势的大基金。例如20年鼓吹metaverse，然后投了roblox爆赚；21年鼓吹web3、和twitter创始人口水战，然后宣布要募一支45亿美元的资金投加密资产（实际上是35亿+10亿2支）。讲难听点，那些科技媒体、商业媒体不都是跟在后面拾人牙慧，捡他们的输出去进一步炒作吗？</p>\n<p data-pid=\"iuBSpyY9\">不讨论价值取向，如果他们继续“鼓吹”游戏，这的确是快速普及推广游戏概念或正面形象的一种方式。并且游戏拥有的基本面价值，不会像纯概念在泡沫破裂后一地鸡毛，即使有一定回调，总体趋势还是螺旋上升的。</p>\n<p data-pid=\"KSAgfJEq\">而微软、索尼、embracer group等等还在一刻不停地跑马圈地收工作室，二级市场的并购案从zynga到动视暴雪屡创新高，接盘侠永存的故事（起码近几年）就可以持续地圆下去。</p>\n<p data-pid=\"B7HuuVDG\">2.挂羊头卖狗肉？</p>\n<p data-pid=\"aPDYljgM\">早些时候一些群里讨论，有朋友提到警惕a16z这是5月份币圈大跌以后crypto fund搞不动了，换了个马甲继续去投web3和gamefi。</p>\n<p data-pid=\"j6zKM_Ht\">我倒比较乐观，他们这支基金大概率还是搞正经游戏相关的项目，小部分会投web3。</p>\n<p data-pid=\"7K70kKjs\">首先，从a16z自己的官方介绍可以看到，他们的投资方向是</p>\n<ul>\n<li data-pid=\"ShHotAA5\">研发工作室</li>\n<li data-pid=\"nqXtGkn4\">社区、平台，类似discord</li>\n<li data-pid=\"Xj50MF_Z\">基建技术、工具</li>\n</ul>\n<p><img src=\"https://pic1.zhimg.com/v2-09002599d0d0e856745d7d8c2ed9f6b1_720w.jpg?source=b1748391?rss\" data-caption=\"https://a16z.com/games/\" data-size=\"normal\" data-rawwidth=\"945\" data-rawheight=\"357\" data-watermark=\"original\" data-original-src=\"v2-09002599d0d0e856745d7d8c2ed9f6b1\" data-watermark-src=\"v2-89dd016a1a32e7497f766f3bc49286d8\" data-private-watermark-src=\"v2-231a92dddc4c48eee5345a5211d75a40\"></p>\n<p data-pid=\"KclJqvEE\">区块链和代币经济（tokenomics）本身是一种技术和商业化手段，如果可以结合，没有理由不投。</p>\n<p data-pid=\"qtjCfEYq\">griffin的创始合伙人Nick Tuosto也曾说他们基金对“游戏”的定义其实是广义的，如果区块链和web3相关的项目可以更有利于游戏的制作和商业化，更应该投：</p>\n<blockquote data-pid=\"9XtDyOER\">the fund’s definition of “gaming” is broad, including content creators, platforms that bolster key components of gaming such as communications and social aspects, and infrastructural tools that help developers create and monetize games, <b>especially with new blockchain and Web3-related titles</b>.</blockquote>\n<p data-pid=\"AcEuP887\">其次，虽然币圈经历了大跌，进入熊市，a16z的45亿美元基金也不知道啥进展，但其实在21年，他们就已经又募了22亿美元的crypto fund III（已经3期了）。</p>\n<p data-pid=\"M5q5W9WZ\">加上他们的portfolio基本上包场级别的，公链（solana）、DeFi（uniswap）、NFT交易所（opensea）、媒体工具（mirror）、大IP（yuga labs，即无聊猿）啥都有......回报已经逆天了，募单独的加密基金应该不成问题。</p>\n<p data-pid=\"eR92uYl2\">最后，a16z一贯是人海战术，每个领域和团队其实切得比较开，而官网上crypto和games已经被划成了2个不同的基金投资领域，也分别由不同的合伙人带队。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-e074b4dd133634f4e50c750e30604172_720w.jpg?source=b1748391?rss\" data-caption=\"这是游戏团队\" data-size=\"normal\" data-rawwidth=\"1213\" data-rawheight=\"610\" data-watermark=\"original\" data-original-src=\"v2-e074b4dd133634f4e50c750e30604172\" data-watermark-src=\"v2-329af21c9baf00cb7c7b4a5d5c9127b7\" data-private-watermark-src=\"v2-a7ae204e59ff0d5206ab85b20e1289f1\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-e856ffa2f06d93f537c77f402fa14291_720w.jpg?source=b1748391?rss\" data-caption=\"这是crypto团队，下面还有2屏人，比游戏团队要大得多\" data-size=\"normal\" data-rawwidth=\"1241\" data-rawheight=\"946\" data-watermark=\"original\" data-original-src=\"v2-e856ffa2f06d93f537c77f402fa14291\" data-watermark-src=\"v2-9ec754eb147473274b8579b17ac1f7f7\" data-private-watermark-src=\"v2-43b9d145fef0df3dd82e9245c4f755ad\"></p>\n<p data-pid=\"1qFmjuaT\">3.来点八卦</p>\n<p data-pid=\"pZ_4Vo3r\">说到团队，最后就得讲讲人。</p>\n<p data-pid=\"b2GZs2qZ\">为什么a16z这样主流的风投机构，今天要设第一支游戏基金？我个人的感受其实有点体现了事在人为。</p>\n<p data-pid=\"ad4mDHSN\">a16z过去不是没投过游戏，只是不系统，没有单独成为一个专精领域。而在这样的大机构，试图开辟新的投资战场，显然不是一件拍脑袋的容易事情。</p>\n<p data-pid=\"yCwCBxwP\">从截图可以看到，现在游戏团队的3个带头大哥，即高级合伙人，分别是Andrew Chen，Jonathan Lai，和James Gwertzman。我们一个一个讲。</p>\n<p data-pid=\"eIAL1w5q\">Chen最早，18年进到a16z做合伙人，此前的主要经历是创业和uber，对互联网、消费、增长比较擅长，但没有游戏经历（但好像是资深玩家，我忘了好像看过哪篇文章讲），所以本来只是看消费。</p>\n<p data-pid=\"fIH-n7su\">所以chen应该是第一个想系统性投游戏的合伙人，但限于自己的专业性，只能借力外部人才，于是19年拉来了Lai作为游戏方向的合伙人。</p>\n<p data-pid=\"foY80oJ_\">Lai的履历更光鲜，一路哈佛、大摩、拳头、腾讯，一个非常典型的游戏和商业复合背景的高级人才，彼时应该正对a16z需求。而且他也的确善于叙事，今天a16z关于游戏的绝大部分文章应该出自他手，而如果我没记错，要论metaverse的早期vc布道者，makers的matthew ball排第一，应该就是janoathan lai第二了。当然，槽点不是没有，这老哥从腾讯走的时候高调PR自己是高管（executive），主管北美发行和投资，还天天讲epic之类的重要案子是他主导的......实际上只是高级总监（senior director），在腾讯内只能算是基层干部天花板。并且鹅大部分中干（GM）是从总监（director）这个位置直接上到助总（Assistant GM）的，SD基本就意味着只提待遇不提title了，所以这个executive emmm......</p>\n<p data-pid=\"jtUCTDvJ\">G最晚，21年底才加入a16z，但他是真正的“业内人士”。他的20年职业经历大概是，微软打工，创业，被并购，再被EA并购，二次创业（playfab），被微软并购，在微软干了3年GM（不算高管也算中干了吧，百年刀年薪级别）。并且是程序出身，二次创业和最后在微软也是负责云平台相关，是真正的游戏人、技术专家、连续（成功）创业者。</p>\n<p data-pid=\"FLhcxX7x\">至此，拼图彻底完整了。机构内部的发起者，找来行业的连接者与推手，再拉进有成功创业经验的技术大咖，过程中还投出一些可以大吹特吹的案子（roblox），专门的游戏基金设立，也就水到渠成了。</p>\n<p data-pid=\"lGEze5ld\">很多时候，大家过度拟人化或者脸谱化一个企业或机构了，其实只是一些人或者团队想做事，在一步步铺垫下，最后就做了。不是一个企业多么伟大或者邪恶，最后还得是落到“人”上。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/denzel-xu?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Denzel</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/533526443/answer/2492571900?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/533524292?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何看待a16z设立第一支6亿美元的游戏基金Games Fund One？</a><br><a href=\"http://www.zhihu.com/question/523636743?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">数据初创公司「Hex」完成 5200 万美元 B 轮融资，该公司未来发展前景如何？</a><br>\n","link":"http://www.zhihu.com/question/533526443/answer/2492571900?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"旧酒换新杯，Linux 游戏的春天","date":"2022-05-19 08:26:26","description":"我们看到 Wine 目前对新游戏和新应用的兼容性是比较差的，所以也从侧面表明了 Valve 基于 Wine 做了很多定制开发的工作才能达到比较好的运行效果。<a href=\"https://sspai.com/post/73238\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73238"},{"title":"App+1 | 国产小组件库，为笔记嵌入可视化模块：NotionPet","date":"2022-05-19 06:29:59","description":"这款国产小组件库 NotionPet，能为 Notion 等产品提供好看、强大、可定制的可视化小组件。<a href=\"https://sspai.com/post/73211\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73211"},{"title":"招商证券首席策略在朋友圈表示「现在就是底！」，目前A股已经触底了吗？","date":"2022-05-19 05:25:59","description":"\n<p data-pid=\"pfw_P4wI\">首先声明，我的屁股是偏的。</p>\n<p data-pid=\"lu26lbBW\">每年新财富投票，策略这个行业，我都会投张夏第一。</p>\n<p data-pid=\"nxxG3rkI\">他的每场电话会，只要时间排的开，我都会参加。</p>\n<p data-pid=\"Q7mi42xO\">散户同志们可能对以机构投资者为服务对象的卖方研究行业不了解。</p>\n<p data-pid=\"1mSCz_A_\">在证券市场，卖方研究一般提供交易思路和标的分析，买方机构做投资判断。卖方策略研究员明确改变观点，转向看多或者明确看空都是很罕见的。大多数卖方研究员采用的生存策略是持续看多或者持续看空，利用幸存者偏误，总会对一次嘛。万一有一次全市场只有我一个人看多（空），逻辑还对了，那就牛逼大发了。还有一种生存策略较马后炮。策略管策略写，把想法和逻辑写出来，结论尽量模糊一些，事后做诸葛亮。标志性用语是“正如我们所料”。这种研究员占大多数，毕竟后验特别容易。但是他们也有他们存在的价值，毕竟他们讲了一个事物演化的逻辑，故事讲好了，也可以赚钱。有一种圈外的卖方研究员，叫李大霄。散户朋友们会比较熟悉，但是机构圈内没有人关注。他主要的流量靠散户，类似网红。对错不重要，关键是曝光度。</p>\n<p data-pid=\"VkKlDOmf\">买方干什么呢？首先分辨这个研究员是哪一类的。如果是李大霄类的，那就当盘后的笑话聊一聊。如果是马后炮类的，就略过结论看逻辑；如果是死多或死空，那就顺风的时候略过，等套牢的时候找心里安慰或者坚定信念。</p>\n<p data-pid=\"kl1eQKur\">真的是千年才能找到一个观点清晰，逻辑通顺，方向明确的卖方研究员啊。他其实替买方把活干了。</p>\n<p data-pid=\"hDNq6ES7\">回到正题，他这么说是有道理的。</p>\n<p><br></p>\n<p data-pid=\"STQEq39g\">站在2021年底，A股面临的是什么问题？估值贵。</p>\n<p data-pid=\"QpxHyQcS\">站在2022年4月底，宁王跌了多少？宁王的小伙伴们跌了多少？茅跌了多少？客观说，估值已经消化得差不多了。现在市场上满是一把把25倍的消费股，20倍的成长股，5倍的周期股。</p>\n<p data-pid=\"NmZ0c08K\">现在市场在担忧什么？</p>\n<p data-pid=\"NH1kdTvD\">封城永续扩大化，供应链中断，房地产持续下滑，居民收入下滑，一季报低于预期，美联储加息，外资撤出。这些悲观的情景市场是否预期到吗？全都预期到了。上海占了全国一半的机构投资者。全国一半的基金经理在家或者公司被持续关了1个月。若是看盘没抢上团购，有些可能还这辈子有史以来第一次挨了几天饿。情绪能不悲观吗？那应该是绝望。你想想，这批人如果放出来恢复工作，情绪将有多大的反转？</p>\n<p data-pid=\"py_W-afQ\">别怀疑，卖方已经开始推送在线心理专家辅导服务了。</p>\n<p data-pid=\"7K4XKL3C\">短期来看，似乎也不能更糟糕了。首先，所有带权益的产品基本都处于深度亏损区间。众所周知，这个区间是很少有赎回的。无论理财产品还是公募基金，负债端都相对稳定。</p>\n<p data-pid=\"VtPkVJ6t\">其次，疫情管控还能更严吗？站在这周来看，似乎只会改观，不会更糟糕了。</p>\n<p data-pid=\"qm_-8Y_Q\">房地产现在和疫情管控是一个问题的两面，救市政策都出了，唯独等待疫情高峰过去，生活恢复。</p>\n<p data-pid=\"s4JHTrW3\">一季报低于预期、美联储加息、外资撤出，这些事情都已经发生。</p>\n<p data-pid=\"mlUvTOHf\">那么还有什么未被定价的利空呢？</p>\n<p data-pid=\"JyV2Q94c\">所以站在这个时点，从胜率的角度出发，似乎到了一个不应该看空的时点了。当然，站在赔率的角度，大可从潜在增速下降的角度批判反弹的幅度。但那不应该是当下的核心矛盾。</p>\n<p data-pid=\"ilqcgvBu\">毕竟，当一切负面因素都超出了想象力的极限，接下来也只能是反转了。</p>\n<p data-pid=\"hMwzi9VR\">想想去年初的煤炭，年中的双控，年底的房地产。所有大波段的反转和拉升，都来自于极限施压后的上跳。</p>\n<p data-pid=\"E-ZIQdMD\">借用华为的广告歌：Dream it possible.</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/tu-dou-xian-sheng-56-59?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">土豆先生</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/529425809/answer/2459157917?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">476 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/530056276?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">多位券商首席认为A股已经触底，即将迎来反攻时刻，现在是「人弃我取」的好时机吗？</a><br><a href=\"http://www.zhihu.com/question/529196343?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">A股：2022年4月21日市场分析和2022年4月22日市场预测怎么样？</a><br>\n","link":"http://www.zhihu.com/question/529425809/answer/2459157917?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"静音轮胎真的“静音”吗？原理是什么？","date":"2022-05-19 05:14:13","description":"\n<p></p>\n<a href=\"https://www.zhihu.com/video/1510311694149066752\">静音轮胎如何静音？</a><p><br></p>\n<p data-pid=\"9XnC4bZI\">是可以非常静音的。</p>\n<p data-pid=\"ZJ-8VBnz\">原理非常简单：<b>物体震动产生声音，抑制震动可以减少噪音，通过吸音材料吸收已经产生的噪音，可以达到静音的效果。</b></p>\n<p data-pid=\"KItq4mo3\">大多数静音轮胎会从主动、被动两个维度入手，即调整花纹以及增加吸音材料，目的是降低轮胎与路面摩擦产生的噪音以及吸收在轮胎内部不断反射的噪音。不过，吸音材料大都应用在新能源轮胎上，较少出现在油车上。主要原因也是新能源相比燃油车有更强的静音需求。</p>\n<p data-pid=\"7Uf_zgBr\">既然其他答主已经从传统油车的角度对比了静音轮胎的实际表现，那我就从新能源汽车的角度谈谈静音轮胎的选择。</p>\n<p><br></p>\n<h2>新能源汽车对静音轮胎的追求</h2>\n<p data-pid=\"3HrdMvJr\">过去轮胎在性能和静音之间只能二选一。如果选择性能，对不起，静音很难照顾到，尤其是缺气保用轮胎。这也就解释了宝马3系、马自达3这类强调操控、运动车子路噪、胎噪为什么非常大。</p>\n<p data-pid=\"IUlIQH9K\">与此同时，内燃机要凸显轮胎的静音相对更加容易，因为燃油车有内燃机，内燃机工作时处于震动的状态，伴随一些细碎且均匀的声音。这部分声音可以掩盖住部分来自轮胎细碎的、嘈杂的较低频率的噪音，主观上降低人耳对这部分噪音的关注。</p>\n<p data-pid=\"iv1d-dFH\">这个规律到了新能源时代就不那么适用了。</p>\n<p data-pid=\"wQ9Rr1Yn\">一个原因是，新能源车非常安静，一点点噪音都会被无限放大。按理说，一根针掉在地上所发出的声音非常小，但在寂静的教室里就非常明显（小学作文）。目前困扰很多电车的噪音来自电机，这部分声音实际上不大，但就是非常明显，难以消除。</p>\n<p data-pid=\"U9aZrXRv\">另外一个原因是，电机带来了更为直接的加速能力，加上大电池带来的自重，需要轮胎具备足够优秀的抓地力，也就是性能化。</p>\n<p data-pid=\"41L0LpXv\">新能源车硬生生的把性能和静音糅合在一起，轮胎也正在发生翻天覆地的变化，已经有非常多轮胎厂商宣布未来将只生产新能源专用轮胎，侧面反映出新能源汽车轮胎的要求更加苛刻。</p>\n<p data-pid=\"gLIT1oyz\">这也就是说轮胎在追求静音的要求下，单纯通过主动的花纹设计已经不够，需要在其他方面做更多尝试，当然前提是不能降低性能，于是开始有越来越多的轮胎配备吸音棉。当然</p>\n<p><br></p>\n<h2>轮胎静音主要技术</h2>\n<p data-pid=\"Gwd2cdiw\">一般新能源车，尤其是家用型的，会在出厂时标配静音、舒适比较均衡的轮胎。我自己的微蓝7原厂配备米其林Primacy 4（浩悦4），是一款非常强的轮胎。</p>\n<p><img src=\"https://pica.zhimg.com/v2-14b32486d532e7bce5814bf75eff9072_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1268\" data-rawheight=\"846\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"KoaSpH11\">不过，微蓝7作为一款主打空间的家用车，不太追求操控，所以一直想换一套新能源专用的静音轮胎，发挥出纯电优势，后面在途虎上买了雷神静悦Silence。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-295a641e0b8528ac430d565e6027f4e1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1268\" data-rawheight=\"846\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"2-i3rQ8L\">雷神定位中高端，特别强调适配新能源、兼顾燃油车，微蓝7这种小众车也有适配 。</p>\n<p data-pid=\"M8yN3UhI\">源于新能源汽车静谧性的大幅提升，雷神核心卖点是静音，旗下四条产品线包括了静音棉轮胎（静悦）、缺气保用轮胎（铠悦），缺气保用+静音棉（北辰）、欧洲静音（星驰）。</p>\n<p data-pid=\"P6U-j8F-\">即便是最基础的轮胎型号也提供了非常优秀的静音性能，有特殊设计的花纹和吸音棉材料。这也就意味着没有特别乞丐的入门轮胎。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ad829562f21e643d85aba7f2116fbdd2_720w.jpg?source=b1748391?rss\" data-caption=\"只要450元，还要啥自行车？\" data-size=\"normal\" data-rawwidth=\"1268\" data-rawheight=\"846\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"vN9gkZt9\">我选择的是雷神静悦，整体价格不算贵。相比原厂米其林浩悦4售价900元/条，雷神静悦四条只要1680元，每条只有450元。</p>\n<p><br></p>\n<p data-pid=\"rZSYSyJC\">没有选择缺气保用，价格是一方面，另一方面是微蓝7胎压正常，日常只需要250，不像那些长续航、大电池包的新能源车胎压需要310。<b>胎压比较高的车型可以选择缺气保用胎。</b>不过，缺气保用胎不如普通胎舒适就是了。</p>\n<p data-pid=\"l001UdKE\">就轮胎的静音技术而言，各家大同小异，你听到的米其林Acoustic静音技术、德国马牌ContiSilent轮胎降噪技术、固特异噪音覆盖科技等等都可以理解为<b>在轮胎内侧附着一块特殊材料的吸音棉。</b></p>\n<p data-pid=\"HK34XZaB\">这块吸音棉根据各家轮胎品牌对轮胎整体设计的侧重点不同而不同，因此在材料上也会呈现出「独家科技」，实际上都是一类。这样做的好处是在<b>不破坏原有轮胎性能</b>，而只提升静音性能。当然，这种轮胎一般都定位高端。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-ba656e48fbef7aa107f32e60ed00e945_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1268\" data-rawheight=\"846\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-a698ca24d89cc42f403d73136ba2404c_720w.jpg?source=b1748391?rss\" data-caption=\"静音棉厚度\" data-size=\"normal\" data-rawwidth=\"1268\" data-rawheight=\"846\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"T9ZWqa6Y\">雷神静悦轮胎内部也有一块这样的聚氨酯吸音棉，这也是我选择它的主要原因。轮胎与路面撞击产生的噪音会在轮胎内部反复折射，最终被吸音棉逐渐吸收。与此同时，吸音棉也可以减少路面对轮胎内部空气挤压产生的噪音。</p>\n<p data-pid=\"cf2uGIAv\">根据目前大多数轮胎品牌测试数据，经过吸音棉处理过后的轮胎，高速情况下可以降低9分贝的噪音。9分贝是什么概念？大概接近10倍这么一个水平。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-8c0b0912e6659f1fb77a7bd6c05cdc35_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1268\" data-rawheight=\"846\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"9k3VMqHc\">除去静音棉，花纹排布属于「主动降噪」的部分，而且越「凌乱无章」越好。原因嘛，单一花纹会产生单一频率的噪音，复杂花纹可以分散声音能量，使峰值变得平缓。雷神静悦这条胎除去四条主排水沟槽之外，采用5频花纹块，五种节距比例，可以减少轮胎花纹内留存的空气振动。</p>\n<p><br></p>\n<h2>微蓝7实际体验</h2>\n<p data-pid=\"sgGJHW6P\">未通知女司机更换轮胎，直接问她主观感受，表示如下：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-547ef6afb7d32313e5cc87ec72b1eee8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"1751\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"zKY1qMl2\">我的感受是这条轮胎操控性其实不错，但对手毕竟是米其林浩悦4，所以在操控上有一些弱化，也就是指向性相比原厂轮胎略差。话说回来，败给米其林浩悦4一点都不丢人。</p>\n<p data-pid=\"YtVDWu_s\">静悦轮胎比较软，比较侧重舒适性和缓震，虽然事前已经预料到，但实际上没想到变化会大到女司机也感知出来。我只能说，这几年女司机的驾驶水准提升不少。好在微蓝7并不是一台操控性能非常好的车，方向盘变轻对女司机来说反倒是一件好事。</p>\n<p data-pid=\"EwagZSQC\">对我来说，如果要给Mustang Mach E更换静音轮胎，会倾向雷神铠悦的缺气保用轮胎。</p>\n<p><br></p>\n<p data-pid=\"EVeNx3xh\">其次，未测试数据之前，这条轮胎静谧性主观上的提升非常明显，尤其对中低速下粗糙路面的行驶大有裨益，十分显著。</p>\n<p data-pid=\"oMongY9W\">大多数轮胎运转时会出现低频「嗡嗡」的声音，静悦这条轮胎上处理的非常明显。只是说这种噪音无法通过分贝仪直接呈现出来，只能靠主观感受。</p>\n<p data-pid=\"D-N2iMW0\">如果是在市区新铺设的柏油路面上行驶，驾驶室里的乘客几乎察觉不到声音，接近静默的状态，非常夸张。这时候，都能非常明显的听到空调风扇转动的声音。</p>\n<p><br></p>\n<p data-pid=\"T6W8PMYQ\">第三，耐磨指数520比原厂轮胎340优秀不少。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-254cd49b143f1cbdf0d466cfb65b9ec4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1268\" data-rawheight=\"846\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"qeHK2OxO\">驾驶微蓝7分别测试了新柏油路、粗糙砂石路、水泥路、高速路等四种常见路面（如下图），保持30/50/80的三种速度。之所以没有选择100及以上，是因为那个速度风噪已经严重影响到实际成绩了。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-89dbcb1e77a74d1f4304fc86ef9475cf_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2550\" data-rawheight=\"1748\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Yvv2lbd-\">更换轮胎之前并未想到要全面对比，只是简单对比下米其林浩悦4和雷神静悦粗糙水泥路面的表现，结果如下：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-d24b9541a135cda131672ed5c29235c4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1231\" data-rawheight=\"1565\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Xcn5ipy4\">同一条道路，空调手动，风量三挡，时速50km/h，全程录像，排除突发的环境音，取20组相对平稳的数据，最终显示雷神静悦相比米其林浩悦4有1~2分贝的提升，这种噪音的改善是可以被人耳感受到的，换算过来大概相当于1.1倍到1.25倍的提升。</p>\n<p data-pid=\"Fl4B6xEU\">分贝不同于常规数字，是一种指数关系，提升2分贝意味着降噪效果提升接近50%，如果是10分贝意味着提升了10倍。</p>\n<p data-pid=\"GwO0baEw\">考虑到米其林浩悦4本身就是一款非常优秀的静音轮胎，而雷神静悦依然能有这样的提升属实非常优秀了</p>\n<p data-pid=\"XZfkcB8O\">随后为了回答这个问题，我又测试了其他几种路面，数据如下：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-05b61b7d838f6a27088c4710da73e511_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3074\" data-rawheight=\"1563\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"8Vc8f1ha\">城市驾驶，哪怕是经常有货车出现，磨损非常严重的路面，低于60km/h，雷神静悦效果非常明显，可以做到56dB以下。如果是新铺设的沥青路面，数值在52~53之间，几乎没有杂音，空调、电机、雨刮任何声音都会变得非常明显。</p>\n<p data-pid=\"rtbU8_km\">作为对比，同样为30km/h，经常有货车出现的粗糙路面和日常磨损的城市路面，实际噪音相差有2dB。随着时速上升，电动车开始有电机加速的啸叫声以及能量回收的声音以及风噪，噪音亦有差别。</p>\n<p data-pid=\"KHGZoKeQ\">值得一提的是，静悦这条轮胎在处理路面接缝时表现要更有优势。或许是因为轮胎相对较软，或许是因为吸音棉吸收了轮胎变形所产生的噪音，总之这部分噪音比预期要好，或者说比印象中的浩悦4稍好。</p>\n<p><br></p>\n<h2>总结</h2>\n<p data-pid=\"d3HfwAtB\">回到问题本身，轮胎可以通过许多方式解决静音的问题，通过花纹、吸音棉，雷神静悦就实现了比原厂轮胎更好的静音效果。</p>\n<p data-pid=\"HBx5Kebu\">但也不得不说，微蓝7并不是一个好标的。如果找到一个更好的标的，静音效果会更加明显。</p>\n<p data-pid=\"j1cJrGP7\">首先，微蓝7配原厂轮胎太强。米其林主力产品浩悦4，雷神静悦能打的互有胜负就已经非常优秀了，毕竟价格摆在那。</p>\n<p data-pid=\"mJgKEwue\">其次，别克本来就非常注重静音，尤其美国车型。微蓝7有搭载QuietTuning静音技术，虽然没有配备ANC，但整体还是非常安静。</p>\n<p data-pid=\"uGAl9AzI\">如果将样本换成小鹏P5，我想这个对比会更有意思，一个是小鹏P5原厂轮胎各方面表现一般，另一方面P5也更需要静音。</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/dickiesgao?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">默默-KG</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/54960847/answer/2491235528?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">20 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/532426685?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">污水提升器噪音怎么弄，上海智流的静音电机怎么样，有用过的小伙伴吗？</a><br><a href=\"http://www.zhihu.com/question/511205085?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">佳通轮胎静音效果怎么样？能完全听不到噪音吗？</a><br>\n","link":"http://www.zhihu.com/question/54960847/answer/2491235528?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"两个月的居家隔离，我收获了什么","date":"2022-05-19 03:30:25","description":"我相信疫情终究会过去，太久没看到陌生人的笑脸了，我想他们了。<a href=\"https://sspai.com/post/73240\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73240"},{"title":"派早报：Apple 公布创新辅助功能、研究人员发现特斯拉安全漏洞等","date":"2022-05-19 00:52:48","description":"Google 湾景园区正式开放，Google 推出 Protected by Android。<a href=\"https://sspai.com/post/73300\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73300"},{"title":"腾讯第一季度营收 1355 亿元人民币，盈利 255.45 亿元人民币，哪些信息值得关注？","date":"2022-05-18 10:58:28","description":"\n<h2>腾讯季报图解：期内盈利237亿同比降52% 马化腾要换档增长</h2>\n<p><img src=\"https://pic2.zhimg.com/v2-9e13ffe781609d00c155f2846b2c56b2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"584\" data-watermark=\"watermark\" data-original-src=\"v2-9e13ffe781609d00c155f2846b2c56b2\" data-watermark-src=\"v2-ad454597d8a08d332987fea04a7c16e2\" data-private-watermark-src=\"v2-2943e79470d1620bac6d3e15e2924544\"></p>\n<p><br></p>\n<p data-pid=\"NC0mGNcG\"><b>雷递网 雷建平 5月18日报道</b></p>\n<p data-pid=\"fgiBZjYN\">腾讯控股（股票编号: 00700）今天公布财报。财报显示，腾讯2022年第一季度营收为1355亿元（213亿美元），较2021年第一季基本持平，较上一季度的1441亿元下降6%。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-44367efac5565fb37bed8ee518e70a2b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"881\" data-rawheight=\"413\" data-watermark=\"watermark\" data-original-src=\"v2-44367efac5565fb37bed8ee518e70a2b\" data-watermark-src=\"v2-ff34c9f3a47283316236e8200f9fca97\" data-private-watermark-src=\"v2-7c9accd9fe74ad5eeef2b9fe3888ab4a\"></p>\n<p><br></p>\n<p data-pid=\"mb97C-Vq\">腾讯2022年第一季度期内盈利为237亿元（37亿美元），同比减少52%；净利润率由上年同期的36%下降至18%。</p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-ae7110ca22b2dca5cfb0569dbfe14b26_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"916\" data-watermark=\"watermark\" data-original-src=\"v2-ae7110ca22b2dca5cfb0569dbfe14b26\" data-watermark-src=\"v2-d14169cb23dc70b07e814f7235b1401c\" data-private-watermark-src=\"v2-390f394c3f546e191d82a6231c852e83\"></p>\n<p><br></p>\n<p data-pid=\"LWUN37gT\">腾讯称，2022年第二季至今，广告市场持续低迷，快速消费品、电子商务及旅游等行业的广告主大幅缩减广告支出。在艰难的市场环境中，腾讯持续投资优化广告系统，升级了机器学习的基础架构，以更高效地处理数据。此次升级将有助腾讯为广告主提供更精准的投放能力及更高的转化率。</p>\n<p data-pid=\"tRvO4nDb\">在云及其他企业服务层面，腾讯重新聚焦于企业服务的健康增长，主动缩减亏损业务，并将资源集中于视频云及网络安全等领域的PaaS解决方案。</p>\n<p data-pid=\"eCgECjym\">腾讯董事会主席兼首席执行官马化腾表示：“在具有挑战性的2022年第一季期间，我们实施了成本控制措施，并调整了部分非核心业务，有助我们在未来实现更优化的成本结构。我们利用小程序、腾讯会议及企业微信等工具，帮助中国的企业及消费者于新一轮疫情共克时艰，并继续投资于战略成长领域，包括企业软件、视频号及国际市场游戏。”</p>\n<p data-pid=\"0OaaP7HJ\">马化腾说：“展望未来，我们将在各种挑战及周期变化下聚焦重点业务并坚持创新，持续为用户、合作伙伴及整个社会创造价值。”</p>\n<p data-pid=\"IcbSqlda\">近期，马化腾还说，腾讯正面临着挑战与发展并存的新阶段。“一方面，收入与利润的增速放缓；另一方面，我们也认为可借此换档，去创造更高质量的发展——那就是更加聚焦以用户价值、科技创新及社会责任为中心的本源，更加坚守科技向善的愿景。这样的企业，才会在更长时间跨度里持续进化，为国家与时代创造更大价值。”</p>\n<p data-pid=\"-JRq6id6\">腾讯2022年第一季增值服务业务收入为727亿元，相较2021年第一季总体保持稳定。</p>\n<p data-pid=\"7YgR3RYx\"><b>腾讯Q1游戏收入430亿 与上年基本持平</b></p>\n<p><br></p>\n<p><img src=\"https://pica.zhimg.com/v2-0dbb2ace4aedaed17377b1963d6a90f2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"912\" data-rawheight=\"433\" data-watermark=\"watermark\" data-original-src=\"v2-0dbb2ace4aedaed17377b1963d6a90f2\" data-watermark-src=\"v2-a0b4d00e09a0179c84b17aa561d44e4a\" data-private-watermark-src=\"v2-bbdc7de94f77fd9aee6dc2f35c1c9568\"></p>\n<p><br></p>\n<p data-pid=\"YMMBNLd-\">其中，腾讯2022年第一季度游戏收入为430亿元，基本与上年同期持平。</p>\n<p data-pid=\"VIahDdhP\">游戏收入中，腾讯2022年第一季度本土市场游戏收入330亿，同比下降1%。这由于未成年人保护措施对活跃用户及付费用户数量造成了直接和间接的影响。本季度，《英雄联盟手游》及《金铲铲之战》等最近推出的游戏产生的收入大部分被《天涯明月刀手游》及《使命召唤手游》等游戏的收入下滑抵销。</p>\n<p data-pid=\"ZCnA2BiL\">腾讯2022年第一季度国际市场游戏收入106亿元，增长4%，体现了《VALORANT》及《部落冲突》等游戏的收入增长，但由于用户消费在新冠疫情后有所回落，该增长部分被《PUBG Mobile》的收入减少所抵销。</p>\n<p data-pid=\"THR4ze-I\">腾讯2022年第一季度社交网络收入291亿元，增长1%，反映腾讯的视频号直播服务的收入增加，但大部分被音乐直播及游戏直播收入下降所抵销。</p>\n<p data-pid=\"EQhnS-PE\"><b>腾讯Q1广告收入180亿 同比下降18%</b></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-fde9fd1bde589f1dc25b304a6a2c408d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"964\" data-rawheight=\"449\" data-watermark=\"watermark\" data-original-src=\"v2-fde9fd1bde589f1dc25b304a6a2c408d\" data-watermark-src=\"v2-074ed4c785c10c662cfc03ce3c2329e1\" data-private-watermark-src=\"v2-dff6857f66a04886aae587b6f88ac131\"></p>\n<p><br></p>\n<p data-pid=\"SleorrBk\">腾讯2022年第一季度网络广告业务收入180亿元，同比下降18%，反映了教育、互联网服务及电子商务等行业的广告需求疲软，以及网络广告行业自身的监管整改的影响，部分被快速消费品行业的稳定需求以及腾讯合并搜狗所带来的广告收入抵销。</p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-f3f38a7c93079d6abc19508f41f3badc_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"641\" data-watermark=\"watermark\" data-original-src=\"v2-f3f38a7c93079d6abc19508f41f3badc\" data-watermark-src=\"v2-73851b2e60a22fd5edfc8c3a985494ca\" data-private-watermark-src=\"v2-31ebb5a48e5b0cf14861a9b4318d2151\"></p>\n<p><br></p>\n<p data-pid=\"XBt23urB\">腾讯2022年第一季度社交及其他广告收入157亿元，下降15%，主要由于腾讯的移动广告联盟广告业务适应监管变化，收入大幅减少。另一方面，公众号内的订阅列表广告拉动了其广告收入增长，部分抵消了联盟广告的下滑。媒体广告收入23亿元，下降30%，反映了腾讯新闻及腾讯视频等媒体广告的收入下滑，部分被2022年北京冬季奥运会的广告收入所抵销。</p>\n<p data-pid=\"2nZoUbTC\">腾讯2022年第一季度金融科技及企业服务业务收入428亿元，同比增长10%。金融科技服务收入同比增速放缓，反映了2022年三月新一轮新冠疫情影响商业支付交易金额。企业服务收入同比略有下降，我们重新定位了我们的IaaS服务，从单纯追求收入增长到实现健康增长，并主动减少亏损合同。</p>\n<p data-pid=\"LBglGe94\"><b>腾讯Q1成本784亿 同比增长8%</b></p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-b198f158b73bc6cf795196f7848f3283_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"892\" data-rawheight=\"462\" data-watermark=\"watermark\" data-original-src=\"v2-b198f158b73bc6cf795196f7848f3283\" data-watermark-src=\"v2-2bceff8e41dc63d719956e40596b7b0c\" data-private-watermark-src=\"v2-c9e97ec5969a74d789fc5543ac4dc26c\"></p>\n<p><br></p>\n<p data-pid=\"ieoCTrsh\">腾讯2022年第一季度成本为784亿元，较上年同期的727亿元增长8%。</p>\n<p data-pid=\"Pmz75EAu\"><b>腾讯Q1毛利570.74亿 毛利率42%</b></p>\n<p><br></p>\n<p><img src=\"https://pica.zhimg.com/v2-2ee9572f4077cecdf90478ebc332eb88_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"858\" data-rawheight=\"440\" data-watermark=\"watermark\" data-original-src=\"v2-2ee9572f4077cecdf90478ebc332eb88\" data-watermark-src=\"v2-0775babf6f0bcd7c91deecef6e96ca45\" data-private-watermark-src=\"v2-fb4370539d814ba8024eb4306b1f2630\"></p>\n<p><br></p>\n<p data-pid=\"P1ZjxcrP\">腾讯2022年第一季度毛利为570.74亿元，毛利率为42%。</p>\n<p data-pid=\"h_xWWFia\"><b>腾讯Q1运营利润372亿 运营利润率27%</b></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-35d9c2ef1d9ba85dfd898a5b6983c0a8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"896\" data-rawheight=\"435\" data-watermark=\"watermark\" data-original-src=\"v2-35d9c2ef1d9ba85dfd898a5b6983c0a8\" data-watermark-src=\"v2-f697506c76b048b8b59560de0da1ffac\" data-private-watermark-src=\"v2-7e8c3cf33d4f8745aa4b81791e221af8\"></p>\n<p><br></p>\n<p data-pid=\"L6PhrsNJ\">按国际财务报告准则：腾讯2022年第一季度经营盈利为372亿元（59亿美元），同比减少34%；经营利润率由上年同期的42%下降至27%。</p>\n<p data-pid=\"iMeauBSY\">按非国际财务报告准则，腾讯2022年第一季度经营盈利为365亿元（58亿美元），同比减少15%；经营利润率由上年同期的32%下降至27%。</p>\n<p data-pid=\"LpNMlNNU\"><b>腾讯Q1净利237亿 同比下降52%</b></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-6dc88154be5281879ef5a85dbe314571_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"862\" data-rawheight=\"412\" data-watermark=\"watermark\" data-original-src=\"v2-6dc88154be5281879ef5a85dbe314571\" data-watermark-src=\"v2-c31c0ffc5e10f358608d06802409803c\" data-private-watermark-src=\"v2-f2967eecd37ced16f934cf882b0906d0\"></p>\n<p><br></p>\n<p data-pid=\"DTfQWFkv\">按国际财务报告准则：腾讯2022年第一季度期内盈利为237亿元（37亿美元），同比减少52%；净利润率由上年同期的36%下降至18%。期内本公司权益持有人应占盈利为234亿元（37亿美元），同比减少51%。</p>\n<p data-pid=\"rC8JAx2N\">按非国际财务报告准则，腾讯2022年第一季度期内盈利为263亿元（41亿美元），同比减少24%；净利润率由上年同期的26%下降至19%。</p>\n<p data-pid=\"gqxQVUWN\">截至2021年3月31日，腾讯持有总现金为3041亿元（479亿美元）。</p>\n<p data-pid=\"gVexujiS\">———————————————</p>\n<p data-pid=\"yRhtu2Ct\"><b>雷递由资深媒体人雷建平创办，若转载请写明来源。</b></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/lei-jian-ping-93?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">雷递</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/533433320/answer/2491246001?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">160 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/533438335?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">腾讯 2022 年第一季度营收 1355 亿元，净利润 255 亿元，这一数据说明什么？</a><br><a href=\"http://www.zhihu.com/question/533535993?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">腾讯 2022 年第一季度营收 1355 亿元，净利润 255 亿元，这一数据说明了什么？</a><br>\n","link":"http://www.zhihu.com/question/533433320/answer/2491246001?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何让家务分工更和谐？不妨试试量化分工的模式","date":"2022-05-18 09:30:00","description":"「家务分工」，是每一个家庭都绕不开的话题。然而，正因为家务需要协作配合，也会存在很多可能的问题。本文将结合我和太太，两人实际踩坑、改进总结的经验，聊一聊怎么应对这些问题，从而帮助每一个家庭如何在「家务分工」这件事上，更加和谐。<a href=\"https://sspai.com/post/73229\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73229"},{"title":"macOS 的「预览」有几种用法？","date":"2022-05-18 08:00:00","description":"macOS 内置的「预览」这些功能你真的知道吗？<a href=\"https://sspai.com/post/73291\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73291"},{"title":"如何看待国家统计局表示「一旦疫情得到有效控制，正常生活秩序得到恢复，被压抑的消费需求会得到较快释放」？","date":"2022-05-18 05:52:12","description":"\n<p data-pid=\"2zO3RXFn\">我对于疫情和消费的影响做过不少研究，结论大概是这样的：</p>\n<p data-pid=\"CZJyaBbw\"><b>1，疫情对于本地消费的抑制，持续时间会达到疫情本身的两倍到三倍。</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-4d485c4be19507fece85699138ff3a85_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2640\" data-rawheight=\"1920\" data-watermark=\"original\" data-original-src=\"v2-4d485c4be19507fece85699138ff3a85\" data-watermark-src=\"v2-3b009065f842efe07c19c2f7327a5df9\" data-private-watermark-src=\"v2-5869316204b68caf8397b2b81d73aeaa\"></p>\n<p data-pid=\"aXTjWemx\">上面的数据是使用了Difference in Difference方法，用某个支付平台的分地区消费支付数据做的，这个数据不包括通过电商平台的支付。</p>\n<p data-pid=\"kkG3qhZU\">每一个点代表在疫情后的每一天，每一个点比起横向的红线越低，代表该地区消费因疫情的下降越多。</p>\n<p data-pid=\"mfZWguAL\">上面这张图的数据，用的是2021年12月之前的疫情，也就是奥密克戎进入中国前的疫情。在这段时间，大部分地区的疫情一个月内就可以清零，即便是西安疫情、石家庄疫情、乌鲁木齐疫情，持续时间也就一个半月时间，之后就是全域低风险，理论上已经没有任何政策影响了。</p>\n<p data-pid=\"ypOGyJ80\">但从图中看，消费恢复需要的时间也非常久，90天才和疫情前的正常水平没有统计上的显著差异。</p>\n<p data-pid=\"c0Z9MJC4\">也就是说，从奥密克戎之前的疫情看，<b><u>消费需求被抑制的时间，至少是疫情本身持续时间的两到三倍</u></b>。理由很简单，消费者的收入减少，业态大量死亡，这些都需要时间来修复，是不可能在疫情一旦控制之后马上就恢复的。</p>\n<p data-pid=\"tp-0EIVl\">而奥密克戎之后的疫情对本地消费的影响是多少呢？</p>\n<p data-pid=\"OxpV9129\">就用长春举例吧，他的情况是这样的——如果疫情前是1，整个疫情期间的消费都在0.05以下，截止到昨天5月17日，长春市的消费恢复到了疫情前的40%。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-29e0e6fec3443e7a240d5d2632582918_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1021\" data-rawheight=\"606\" data-watermark=\"original\" data-original-src=\"v2-29e0e6fec3443e7a240d5d2632582918\" data-watermark-src=\"v2-3917013c278f52c6285a79f7f606bdfc\" data-private-watermark-src=\"v2-b3cc93d2a914ee52b8a5a0a64e17a829\"></p>\n<p data-pid=\"oxmF8273\">那么长春是什么时候社会面清零的呢？4月11日。<b>社会面清零一个多月后也只恢复了40%，比之前的恢复速度更慢</b>。因此，即使疫情得到了有效控制，消费需求显然也不会很快释放。</p>\n<p><br></p>\n<p data-pid=\"p68h6THY\"><b>2，奥密克戎变种株之前，疫情对于每个地区的电商数据是没有影响的。</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-4dfc5a88066b0be3f947ba216b15d3bf_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2640\" data-rawheight=\"1920\" data-watermark=\"original\" data-original-src=\"v2-4dfc5a88066b0be3f947ba216b15d3bf\" data-watermark-src=\"v2-1399a32a3925e1b1a3d1817dba7b311c\" data-private-watermark-src=\"v2-f9d4ab175211b378301026f56d2e8d3e\"></p>\n<p data-pid=\"F_pAO9_P\">上面的图我们使用了某个电商各月在各个城市的销售额来计算，用的是2021年12月和之前的疫情。</p>\n<p data-pid=\"MBTsLI9G\">可以看到，每一个月的数据，从-2（疫情前两个月）到0（疫情当月）到2（疫情后两个月），和0之间都没有统计上显著的差异。因此疫情是不会影响电商消费的。一些看法认为，人们不能到线下逛街买东西，就会去电商买东西，因此电商消费会增加——这个看法是错的。</p>\n<p><br></p>\n<p data-pid=\"qzvXZo3F\"><b>3，奥密克戎变种株之后，疫情对于每个地区的电商数据是有显著影响的。</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-2db2727e84898168658fcff50577ed4d_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2640\" data-rawheight=\"1920\" data-watermark=\"original\" data-original-src=\"v2-2db2727e84898168658fcff50577ed4d\" data-watermark-src=\"v2-de1649993f38f8339ef15568d7d70054\" data-private-watermark-src=\"v2-6529ab73cd7c323aed2b3d96c5dc6575\"></p>\n<p data-pid=\"01RIC900\">上图我们使用同样的电商平台数据，对2022年1月之后的疫情进行分析。</p>\n<p data-pid=\"cm0YDkBf\">可以看到，在疫情当月和疫情前一个月，电商的消费都会受到近10%左右，统计上显著的损失。且在疫情后两个月，也没有出现统计上超过正常水平的恢复。</p>\n<p data-pid=\"X2SXH5Gc\">这里最有趣的是-1这个点，也就是疫情前一个月，<b>在这个城市还没有疫情的时候，电商消费的损失就开始了</b>。为什么呢？因为奥密克戎物传人啊，所以那些毗邻疫区的城市，就抢先把来往于疫区的物流砍掉一刀，怕这个地区的疫情传进来，自己也被迫一例就封城。</p>\n<p data-pid=\"YUaVtdPx\">于是在这个地区还没有出现疫情的时候，电商就开始损失了，疫情当月继续损失，且在疫情之后也没有恢复回来。</p>\n<p><br></p>\n<p data-pid=\"KwroDDxk\"><b>结论：</b></p>\n<p data-pid=\"qpwp04Yk\">「一旦疫情得到有效控制，正常生活秩序得到恢复，被压抑的消费需求会得到较快释放」，这句话与现实是并不吻合的。</p>\n<p data-pid=\"opxYX-Mk\">现实情况是，本地消费的压抑时间，在奥密克戎之前就达到疫情本身持续时间的两到三倍。在奥密克戎之后，压抑时间会持续更久。</p>\n<p data-pid=\"COn9LLEg\">电商平台在奥密克戎之前原本是不被疫情影响的，但在奥密克戎带来的物传人现象后也开始出现损失，这种损失甚至会提前于疫情本身出现，且在疫情后也没有观察到统计上显著的恢复。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/chenqin?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">chenqin</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/533037443/answer/2490856319?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2436 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/506161500?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">国家统计局表示「下阶段扩大内需还有较多有利因素」，其中有哪些信息值得关注？</a><br><a href=\"http://www.zhihu.com/question/533100972?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">国家统计局表示二季度经济会保持较好增长，这说明了什么？</a><br>\n","link":"http://www.zhihu.com/question/533037443/answer/2490856319?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"数据拾遗：美债拍卖数据【2】","date":"2022-05-18 00:25:27","description":"\n<p data-pid=\"fohps89R\">今天我们继续分享关于美债的数据。上次分享的是每次的拍卖细节，但是为了方便投资者处理信息，美国财政部还整理了一些总结性的数据，最有名的就是根据各个参与者分类的 <a href=\"https://link.zhihu.com/?target=https%3A//home.treasury.gov/data/investor-class-auction-allotments\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Investor Class Auction Allotments</a> 数据。比如我在之前的一个想法中就用到了这个数据，以说明美国国库券的承销主要由Primary Dealers来负责，该数据也会成为文章《关于缩表2.0》下次更新的素材之一。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-835fdacdc2cd11ffdcb7a226c073472c_b.jpg\" data-size=\"normal\" data-rawwidth=\"4845\" data-rawheight=\"2108\" class=\"origin_image zh-lightbox-thumb\" width=\"4845\" data-original=\"https://pic1.zhimg.com/v2-835fdacdc2cd11ffdcb7a226c073472c_r.jpg\"><figcaption>美国国库券拍卖各类参与者所占份额分布图，券商与基金是两大参与者</figcaption></figure><p data-pid=\"cttZHAZJ\">下面这段简陋的代码处理的就是这个数据集：</p>\n<div class=\"highlight\"><pre><code class=\"language-python3\"><span class=\"c1\"># Treasury bills investor class auction allotments</span>\n<span class=\"n\">auction_bill_url</span> <span class=\"o\">=</span> <span class=\"s1\">'https://home.treasury.gov/system/files/276/May_9_2022_IC_Bills.xls'</span>\n<span class=\"n\">bill_df_raw</span><span class=\"o\">=</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"n\">auction_bill_url</span><span class=\"p\">,</span> <span class=\"n\">skiprows</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">bill_df_raw</span><span class=\"o\">.</span><span class=\"n\">rename</span><span class=\"p\">(</span><span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">,</span><span class=\"s1\">''</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">,</span><span class=\"s1\">''</span><span class=\"p\">),</span><span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">auction_rename_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'Issuedate'</span><span class=\"p\">:</span><span class=\"s1\">'issue_date'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Securityterm'</span><span class=\"p\">:</span><span class=\"s1\">'tenor'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Auctionhighrate%'</span><span class=\"p\">:</span><span class=\"s1\">'high_rate'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Cusip'</span><span class=\"p\">:</span><span class=\"s1\">'cusip'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Maturitydate'</span><span class=\"p\">:</span><span class=\"s1\">'maturity_date'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Totalissue'</span><span class=\"p\">:</span><span class=\"s1\">'total_issue'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'(SOMA)FederalReservebanks'</span><span class=\"p\">:</span><span class=\"s1\">'Fed'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Depositoryinstitutions'</span><span class=\"p\">:</span><span class=\"s1\">'banks'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Individuals'</span><span class=\"p\">:</span><span class=\"s1\">'individuals'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Dealersandbrokers'</span><span class=\"p\">:</span><span class=\"s1\">'broker_dealers'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'PensionandRetirementfundsandIns.Co.'</span><span class=\"p\">:</span><span class=\"s1\">'pension'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Investmentfunds'</span><span class=\"p\">:</span><span class=\"s1\">'investment_fund'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Foreignandinternational'</span><span class=\"p\">:</span><span class=\"s1\">'foreign'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Other(seecategorydescription)'</span><span class=\"p\">:</span><span class=\"s1\">'other'</span>\n<span class=\"p\">}</span>\n<span class=\"n\">bill_df_raw</span><span class=\"o\">.</span><span class=\"n\">rename</span><span class=\"p\">(</span><span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"n\">auction_rename_dict</span><span class=\"p\">,</span> <span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">bill_df_raw</span><span class=\"o\">.</span><span class=\"n\">dropna</span><span class=\"p\">(</span><span class=\"n\">subset</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'tenor'</span><span class=\"p\">],</span><span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">bill_df_raw</span><span class=\"p\">[</span><span class=\"s1\">'issue_date'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"n\">bill_df_raw</span><span class=\"p\">[</span><span class=\"s1\">'issue_date'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># transform numerical variables to floats</span>\n<span class=\"n\">numeric_cols2</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'high_rate'</span><span class=\"p\">,</span><span class=\"s1\">'total_issue'</span><span class=\"p\">,</span><span class=\"s1\">'Fed'</span><span class=\"p\">,</span><span class=\"s1\">'depository_inst'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'individuals'</span><span class=\"p\">,</span><span class=\"s1\">'broker_dealers'</span><span class=\"p\">,</span><span class=\"s1\">'pension'</span><span class=\"p\">,</span><span class=\"s1\">'investment_fund'</span><span class=\"p\">,</span><span class=\"s1\">'foreign'</span><span class=\"p\">,</span><span class=\"s1\">'other'</span><span class=\"p\">]</span>\n<span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">numeric_cols2</span><span class=\"p\">:</span>\n    <span class=\"n\">bill_df_raw</span><span class=\"p\">[</span><span class=\"n\">c</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">bill_df_raw</span><span class=\"p\">[</span><span class=\"n\">c</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">)</span></code></pre></div>\n<p data-pid=\"90Bj9Hgw\">以上给出了一个基本的数据集，没有进一步做什么处理。接下来，我们可以提取出按日程发行的国库券总量数据（另一种是现金管理票据，根据到期日不同有多达一百种类别，在此就不考虑了），然后计算出每次发行时每类参与者所购买的份额。</p>\n<div class=\"highlight\"><pre><code class=\"language-python3\"><span class=\"n\">participants</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'Fed'</span><span class=\"p\">,</span><span class=\"s1\">'depository_inst'</span><span class=\"p\">,</span><span class=\"s1\">'individuals'</span><span class=\"p\">,</span><span class=\"s1\">'broker_dealers'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'pension'</span><span class=\"p\">,</span><span class=\"s1\">'investment_fund'</span><span class=\"p\">,</span><span class=\"s1\">'foreign'</span><span class=\"p\">,</span><span class=\"s1\">'other'</span><span class=\"p\">]</span>\n<span class=\"n\">participants_w</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">c</span><span class=\"o\">+</span><span class=\"s1\">'_w'</span> <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">participants</span><span class=\"p\">]</span>\n<span class=\"n\">bill_names</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'4-Week Bill'</span><span class=\"p\">,</span><span class=\"s1\">'8-Week Bill'</span><span class=\"p\">,</span><span class=\"s1\">'13-Week Bill'</span><span class=\"p\">,</span><span class=\"s1\">'26-Week Bill'</span><span class=\"p\">,</span><span class=\"s1\">'52-Week Bill'</span><span class=\"p\">]</span>\n\n<span class=\"n\">total_bills</span> <span class=\"o\">=</span> <span class=\"n\">bill_df_raw</span><span class=\"o\">.</span><span class=\"n\">set_index</span><span class=\"p\">([</span><span class=\"s1\">'issue_date'</span><span class=\"p\">,</span><span class=\"s1\">'tenor'</span><span class=\"p\">])[</span><span class=\"s1\">'total_issue'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">unstack</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">dropna</span><span class=\"p\">(</span><span class=\"n\">how</span><span class=\"o\">=</span><span class=\"s1\">'all'</span><span class=\"p\">)</span>\n<span class=\"n\">total_bills_scheduled</span> <span class=\"o\">=</span> <span class=\"n\">total_bills</span><span class=\"p\">[[</span><span class=\"n\">c</span> <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">total_bills</span><span class=\"o\">.</span><span class=\"n\">columns</span> <span class=\"k\">if</span> <span class=\"s1\">'Bill'</span> <span class=\"ow\">in</span> <span class=\"n\">c</span><span class=\"p\">]]</span>\n<span class=\"n\">total_bills_scheduled</span> <span class=\"o\">=</span> <span class=\"n\">total_bills_scheduled</span><span class=\"o\">.</span><span class=\"n\">rename</span><span class=\"p\">(</span><span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">'Bill'</span><span class=\"p\">,</span><span class=\"s1\">''</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span>\n<span class=\"n\">total_bills_scheduled</span> <span class=\"o\">=</span> <span class=\"n\">total_bills_scheduled</span><span class=\"p\">[[</span><span class=\"s1\">'4-Week'</span><span class=\"p\">,</span><span class=\"s1\">'8-Week'</span><span class=\"p\">,</span><span class=\"s1\">'13-Week'</span><span class=\"p\">,</span><span class=\"s1\">'26-Week'</span><span class=\"p\">,</span><span class=\"s1\">'52-Week'</span><span class=\"p\">]]</span>\n<span class=\"n\">total_bills_cmb</span> <span class=\"o\">=</span> <span class=\"n\">total_bills</span><span class=\"p\">[[</span><span class=\"n\">c</span> <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">total_bills</span><span class=\"o\">.</span><span class=\"n\">columns</span> <span class=\"k\">if</span> <span class=\"s1\">'CMB'</span> <span class=\"ow\">in</span> <span class=\"n\">c</span><span class=\"p\">]]</span> <span class=\"c1\"># cash management bills</span>\n\n<span class=\"c1\"># calculate participation shares</span>\n<span class=\"n\">bill_df_idx</span><span class=\"o\">=</span><span class=\"n\">bill_df_raw</span><span class=\"o\">.</span><span class=\"n\">set_index</span><span class=\"p\">([</span><span class=\"s1\">'issue_date'</span><span class=\"p\">,</span><span class=\"s1\">'tenor'</span><span class=\"p\">])</span>\n<span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">participants</span><span class=\"p\">:</span>\n    <span class=\"n\">bill_df_idx</span><span class=\"p\">[</span><span class=\"n\">c</span><span class=\"o\">+</span><span class=\"s1\">'_w'</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"o\">*</span><span class=\"n\">bill_df_idx</span><span class=\"p\">[</span><span class=\"n\">c</span><span class=\"p\">]</span><span class=\"o\">/</span><span class=\"n\">bill_df_idx</span><span class=\"p\">[</span><span class=\"s1\">'total_issue'</span><span class=\"p\">]</span>\n\n<span class=\"n\">bill_df_idx</span><span class=\"p\">[</span><span class=\"s1\">'broker_dealers_w'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">hist</span><span class=\"p\">(</span><span class=\"n\">bins</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span><span class=\"n\">color</span><span class=\"o\">=</span><span class=\"s1\">'k'</span><span class=\"p\">)</span></code></pre></div>\n<p data-pid=\"ygTNbdFw\">同样的，长期国债的参与数据见此，笔者没有做更多处理，感兴趣的朋友们可自己试试。</p>\n<div class=\"highlight\"><pre><code class=\"language-python3\"><span class=\"c1\"># Treasury coupon securities (notes and bonds)</span>\n<span class=\"n\">auction_coupon_url</span> <span class=\"o\">=</span> <span class=\"s1\">'https://home.treasury.gov/system/files/276/May_9_2022_IC_Coupons.xls'</span>\n<span class=\"n\">coupon_df_raw</span><span class=\"o\">=</span><span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_excel</span><span class=\"p\">(</span><span class=\"n\">auction_coupon_url</span><span class=\"p\">,</span> <span class=\"n\">skiprows</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"n\">coupon_df_raw</span><span class=\"o\">.</span><span class=\"n\">rename</span><span class=\"p\">(</span><span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">,</span><span class=\"s1\">''</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">,</span><span class=\"s1\">''</span><span class=\"p\">),</span><span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">auction_rename_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'Issuedate'</span><span class=\"p\">:</span><span class=\"s1\">'issue_date'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Securitytype'</span><span class=\"p\">:</span><span class=\"s1\">'security_type'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'(%)CouponrateOrSpread'</span><span class=\"p\">:</span><span class=\"s1\">'coupon_rate'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Cusip'</span><span class=\"p\">:</span><span class=\"s1\">'cusip'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Maturitydate'</span><span class=\"p\">:</span><span class=\"s1\">'maturity_date'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Totalissue'</span><span class=\"p\">:</span><span class=\"s1\">'total_issue'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'(SOMA)FederalReservebanks'</span><span class=\"p\">:</span><span class=\"s1\">'Fed'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Depositoryinstitutions'</span><span class=\"p\">:</span><span class=\"s1\">'banks'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Individuals'</span><span class=\"p\">:</span><span class=\"s1\">'individuals'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Dealersandbrokers'</span><span class=\"p\">:</span><span class=\"s1\">'broker_dealers'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'PensionandRetirementfundsandIns.Co.'</span><span class=\"p\">:</span><span class=\"s1\">'pension'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Investmentfunds'</span><span class=\"p\">:</span><span class=\"s1\">'investment_fund'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Foreignandinternational'</span><span class=\"p\">:</span><span class=\"s1\">'foreign'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'Other'</span><span class=\"p\">:</span><span class=\"s1\">'other'</span>\n<span class=\"p\">}</span>\n<span class=\"n\">coupon_df_raw</span><span class=\"o\">.</span><span class=\"n\">rename</span><span class=\"p\">(</span><span class=\"n\">columns</span><span class=\"o\">=</span><span class=\"n\">auction_rename_dict</span><span class=\"p\">,</span><span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">coupon_df_raw</span><span class=\"o\">.</span><span class=\"n\">dropna</span><span class=\"p\">(</span><span class=\"n\">subset</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'security_type'</span><span class=\"p\">],</span><span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">coupon_df_raw</span><span class=\"p\">[</span><span class=\"s1\">'issue_date'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">to_datetime</span><span class=\"p\">(</span><span class=\"n\">coupon_df_raw</span><span class=\"p\">[</span><span class=\"s1\">'issue_date'</span><span class=\"p\">])</span>\n<span class=\"n\">coupon_df_raw</span><span class=\"p\">[</span><span class=\"s1\">'tenor'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">coupon_df_raw</span><span class=\"p\">[</span><span class=\"s1\">'security_type'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"n\">coupon_df_raw</span><span class=\"p\">[</span><span class=\"s1\">'asset_type'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">coupon_df_raw</span><span class=\"p\">[</span><span class=\"s1\">'security_type'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># transform numerical variables to floats</span>\n<span class=\"n\">numeric_cols</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'coupon_rate'</span><span class=\"p\">,</span><span class=\"s1\">'total_issue'</span><span class=\"p\">,</span><span class=\"s1\">'Fed'</span><span class=\"p\">,</span><span class=\"s1\">'depository_inst'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'individuals'</span><span class=\"p\">,</span><span class=\"s1\">'broker_dealers'</span><span class=\"p\">,</span><span class=\"s1\">'pension'</span><span class=\"p\">,</span><span class=\"s1\">'investment_fund'</span><span class=\"p\">,</span><span class=\"s1\">'foreign'</span><span class=\"p\">,</span><span class=\"s1\">'other'</span><span class=\"p\">]</span>\n<span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">numeric_cols</span><span class=\"p\">:</span>\n    <span class=\"n\">coupon_df_raw</span><span class=\"p\">[</span><span class=\"n\">c</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">coupon_df_raw</span><span class=\"p\">[</span><span class=\"n\">c</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">astype</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">)</span></code></pre></div>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://zhuanlan.zhihu.com/p/516037009?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\">知乎用户（登录查看详情）</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/516037009?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"央行表示 2022 年 4 月社会融资规模增量为 9102 亿元，这数据说明了什么？","date":"2022-05-17 05:10:11","description":"\n<p data-pid=\"HYHKUYCF\">从一个银行基层员工的角度谈社融大幅下降</p>\n<p data-pid=\"DR2aYmJv\">我是一个银行基层员工，在银行工作7年多，做过三年个人贷款业务，去年离开了个贷业务条线到了管理岗。上周五我看到社融数据非常差劲，想大胆谈谈我的看法，都是肺腑之言，如有不妥请平台删除，网警不要抓我，监管不要查我。</p>\n<p data-pid=\"AXcqL74V\">先介绍一下我三年做贷款业务得经历。</p>\n<p data-pid=\"Ke2_PcKa\">2018年中央开始要求银行做普惠金融业务，这个政策确实解决了小微企业融资难融资贵的问题。当时经济虽然收到贸易战的影响但是整体可控，而且最初的小微企业贷款利率一般在6%左右，大部分贷款有抵押物，所以虽然该业务的风险相对较大，但是规模如果做起来银行还是有的赚，于是银行开始重点布局此业务。我也是在2018年底被调到个人信贷部主要做个人经营性房屋抵押贷款，此贷款属于普惠贷款的一种。2019年下半年，监管机构加大了对银行普惠金融业务的考核，而且要求银行降低普惠贷款的利率。由于监管的要求几乎所有的银行都开始大规模开展普惠业务，真实经营的优质企业就这么多，为了抢业务，银行间开始了恶性竞争，利率一降再降，到2019年年底已经降到5%左右。到了2020年，收到疫情影响，经济增长乏力，大批小企业主和个体工商户破产。银行的普惠不良贷款率快速上升，但是监管给银行下的普惠任务继续增加，而且由于国家要求银行进一步降低小微企业融资成本和银行间的恶性竞争，普惠贷款的利率已经降到基准利率，连1年期以上贷款利率都已经到了4左右，普惠金融业务已然成为政治任务。当时我就有了很大的困惑，1.银行为什么要赔本做这个业务？2.现在有几个企业真正能符合银行定的审批要求？3.客户的抵押物是否能永远保值？4.我之前做的客户如果因为疫情逾期行里会不会问责我？在种种困惑下我不再敢放款。我们行审批部门应该也和我有一样的困惑，审批政策中对经营主体真实经营和经营状况的审查更加严格。政策的严格导致普惠贷款业务放款量大幅下降，客户经理完不成任务收入降低，领导完不成任务要被上级和监管问责。于是所有人开始倒逼审批部门放宽审批政策，在重重压力下审批最终低下了头，除了原则性的底线政策，其他方面都做了一定程度的放宽，有些放宽留给了客户可钻的空子。我越来越觉得为难，1.银行给每一个客户经理下的任务特别多。2.符合基本审批条件的客户越来越少，基本条件是:真实经营，经营稳定，行业不容易受疫情影响，有正常的抵押物。3.如果要完成领导布置的放款量的任务，肯定要钻审批的漏洞，帮着客户把款贷下来，但是这样风险太大，贷款出现问题银行肯定要问责我。如果完不成任务收入实在太低，领导也会督导和批评我。和我一样为难的是几十万银行的基层员工，最终全国大部分银行客户经理选择了把款贷给了部分优质的小企业主和贷款用途为买房的客户。2020年和2021年制造业增长乏力而一线城市房价快速上涨，监管机构意识到资金没有进到制造业和小微企业中，于是开始了对银行普惠贷款资金用途的大检查，几十家银行被罚款，相应的肯定有很多员工被处分。由于我很谨慎，业务量不大，没有不良贷款也没有被处分，不过收入自然也不高，刚好在2021年8月份有一个好的机会，我就果断选择离开原岗位。到了管理岗位后，接触的企业多了，了解的信息多了，更加觉得普惠金融业务乃至制造业贷款难度太大。具体分析如下； 银行是商业机构，所有业务都是以盈利为目的，目前的普惠和制造业贷款利率低，风险大，银行做普惠和制造业业务赔的钱绝对不是小数目。以我在的这家银行为例，每年全总行要放1000亿普惠贷款，不良贷款我预计在10%左右，利率上平均每笔贷款要亏30个bp，所以每年预计在普惠业务上要亏10个亿以上。不过商业银行大部分是国有企业，应该要承担社会责任，前几十年也赚了很多钱，国家有难，国有银行理应回报社会，亏一点也不会伤筋动骨。但是如果形成了问题贷款，被问责的是几十万银行的基层员工。每家银行都有严格的贷款审批制度和问题贷款问责制度。严格的贷款审批制度是银行能够正常经营的基础，银行不可能把资金贷给经营有问题的企业。但是监管机构给每家银行下的普惠和制造业的任务特别多，在目前的经济形势和疫情影响下符合银行审批政策的企业很少，要想完成任务，必定会出现钻空子，放款政策，审批睁一只眼闭一只眼的现象。这些贷款很大可能会出现问题，这时银行的问责制度就会来抽鞭子。大部分银行要求贷款不能首贷逾期，或者一年内不能逾期，但是疫情严重，每天都有地方因为发现病例封城，只要封1个月就会有很多企业主资金链紧张甚至破产。所以经营再怎么好的企业也实在无法保证能在一年内不受疫情影响正常经营。只要没有经济问题，银行高层领导干部大多不会因为制造业或者普惠业务出了问题贷款被严重问责，而基层员工会受到扣绩效，停业务，不能提拔和跳槽等一系列影响。这样的话，就会导致银行抢着给头部制造业或者极少数优质小微企业贷款，而其他绝大部分企业贷不到款，而这些贷款资金往往没有真正用于经营。另外，监管现在严查贷款资金用途，如果有流入房市、股市等违规行为，经办客户经理也要被问责。但是客户经理无法完全保证客户的资金用途正常。首先，银行已经采用受托支付的方式放款，其次银行间的系统不相通，客户如果和受托支付方串通好，把资金转移到其他银行的账户再流入违规房市股市我们无法通过系统查询到。</p>\n<p data-pid=\"dZcVyR-a\">综上，我总结普惠金融业务和制造业贷款难度大的原因： 一、普惠和制造业贷款的不良会影响银行的财务报表，对上市银行影响很大 二、银行原有的且相对合理的审批政策不支持大规模放款给小微企业和制造业。 三、银行基层员工开展该业务面临的风险很大。</p>\n<p data-pid=\"ArzVr2PT\">所以，虽然国务院三令五申银行要支持制造业和小微企业，央行也利用各种手段多次放水，但是到头来发现很大一部分钱还是流向了房地产。而今年上半年因为受到疫情影响，银行更是不敢放款，社融大幅下降。</p>\n<p data-pid=\"2yiSDRsg\">我认为要想解决目前的困境是有办法的。</p>\n<p data-pid=\"XoVCEWgj\">第一种、由国家成立制造业和小微企业政策性银行，每家商业银行和央行每年上交一定比例的利润给该银行，专门用于制造业和小微企业贷款业务。放款贷款审批政策，比如只要求真实经营，贷款金额和经营支出的平均数挂钩等。设计合适的贷款产品，比如贷款期限5年以上，贷款利率基准以下，还款方式灵活等。设计全面的资金用途监管系统，保证资金用于经营。</p>\n<p data-pid=\"DQ32_kNT\">第二种、国家鼓励国有商业银行开展制造业和小微企业贷款业务，按每年不良贷款额和利差亏损给与银行一定比例的补贴，补贴的形式可以为减少上交利润，退税等。要求银行适当放宽审批政策和问题贷款问责制度。设计全面的资金用途监管系统供所有银行使用。</p>\n<p data-pid=\"w0qWR5HU\">我只是银行的基层员工，我的想法肯定是不全面的，但这是我作为国家政策最直接的执行者的真实感受。今年长三角受到了疫情的严重影响，必定会有大批企业资金紧张，如果再不给他们贷款的话，下一步就是破产潮的到来。政府要想办法让市场资金有源泉，水能流，水敢流，能解渴。要不然国家经济还得依靠房地产，全民又开始炒房，好不容易走上正路的经济又要走回头路。</p>\n<p data-pid=\"vzFjVLAv\">·················~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</p>\n<p data-pid=\"NCa-3C25\">第一次在知乎发言，没想到会有这么多关注，真是受宠若惊。我说过我只是银行基层员工，我的观点肯定有不足的地方，请大家包涵，欢迎讨论。另外，我也看到有很多刚发出来就被删除的评论，想必有很多是喷我的，我很恐慌，希望大家文明发言，理性发言，如果有让大家不爽的地方，我给大家跪拜。</p>\n<p data-pid=\"MOfb9Mh8\">～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～</p>\n<p data-pid=\"DBkI_xkc\">一篇回答11万多的阅读量真是让我惊到了，之前阅读量超过100的就是10多年前写的qq日志了。</p>\n<p data-pid=\"YXDoLuRg\">所有的评论我都认真看了，有喷我的，有肯定我的，有一起讨论的，感受颇深。喷我的，我也能理解，他们应该不是金融行业的，对银行的运营不了解，而且可能已经深受房贷折磨。肯定我的，百分之90跟我一样是金融民工。</p>\n<p data-pid=\"kPRYQLcR\">银行确实是相对稳定，利润高，员工收入也相对高的行业。而且大部分银行是国有股份，疫情当前，承担点社会责任也无可厚非。但是我觉得普惠和制造业的任务完全让商业银行执行，这个不合适。</p>\n<p data-pid=\"RrAjdUFD\">首先，从经营层面。银行是商业机构，且绝大部分银行都是上市公司。普惠和制造业贷款的风险很大，如果年报显示每家银行不良率大幅提高，必定会影响股价，也必定会严重影响股市，小型股灾是肯定会发生的。而如果提高国有银行的上缴利润比例，就算年报利润减少，出公告告知股民是由于上缴利润增加引起的，而不是因为经营引起的，那么对股价影响有限。银行按目前的不良率去考核员工普惠和制造业贷款的不良率是不合理的，不过银行也没办法。还有就是要跟大家普及一下，有抵押的贷款逾期多次后就算最后能收回，也是不良贷款，只是可能有问责轻重的差别。银行上缴的利润可以作为专款，给专门的机构做普惠和制造业贷款。</p>\n<p data-pid=\"xzG2_piv\">其次，从操作层面。我看到有很多朋友说阿里的系统很强大，能够准确的判断借款人的风险等级。确实，这个没法比，长期使用阿里系统的人要比某一家银行多太多了，所以他们的系统相对更准确。这个系统靠某一家银行是不可能建立的，如果监管能够牵头建立这样的系统供所有银行使用，那就太棒了。不过阿里的贷款利息很高，一般在10以上，而且额度很少，这个是不能跟银行比的。</p>\n<p data-pid=\"c2emImjc\">所以，我还是觉得最好的办法是国家成立专门的机构，由该机构来做专门的事。机构的注册资本由各家国有银行和央行出，每年按一定比例再上缴。由监管牵头所有金融机构和阿里设计专门的普惠和制造业审查系统来确保客户真实经营，设计贷款资金过渡和监管系统来确保资金90%以上用于经营。适当提高允许的不良率，比如到10%。设计贷款利率低于基准，期限超过5年的产品。</p>\n<p data-pid=\"aaIJn8Kq\">我想的可能过于简单了，操作起来难度肯定很大，不过小微和制造业必须得救助，也只有国家有能力来救。现在疫情严重，国际环境恶劣，我们中国实在是太难了。希望疫情尽快结束，我们国家能够带领大家一起挺过来。</p>\n<p></p>\n<p></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/44-27-43-51?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">树树爱花花</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/532654339/answer/2486648045?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">484 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/531865178?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">央行公布一季度地区社会融资规模增量数据，其中有哪些信息值得关注？</a><br><a href=\"http://www.zhihu.com/question/532788338?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">4 月金融数据出炉，央行透露下一步货币政策发力点，其中有哪些细节值得关注？</a><br>\n","link":"http://www.zhihu.com/question/532654339/answer/2486648045?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"周冠宇 23 年有希望继续续约吗?","date":"2022-05-16 10:43:46","description":"\n<p data-pid=\"DcY8eR01\">A：有希望（完）</p>\n<p data-pid=\"rJdUOWRb\">Q：为什么有希望？</p>\n<p data-pid=\"xdFXcOIX\">A：每一个在围场里的正式F1车手都有续约的希望。</p>\n<p data-pid=\"GvhQvYVw\">Q：有多大希望？</p>\n<p data-pid=\"MOFxVJ8j\">A：99%希望和1%希望，其实都不是我们这些网友所能够揣测的，可能续约这件事已经有定论了也未可知，只是我们不知道而已。</p>\n<p data-pid=\"TonfWzTF\">F1车手的合同签订，本身是极其复杂的，不仅受车手本身能力和表现的影响，还有诸如给车队带来的财务收益、车手的国籍、围场资源、甚至国际政治经济环境等各方面因素影响。所以要预测一位F1车手的未来合同情况是十分困难的，尤其是像周冠宇这种类型，实力不算出众，但也不至于十分拉胯，以付费车手进入围场、还是一位中国车手，属于可进可退的状况，情况就变得更难以预测了。</p>\n<p data-pid=\"hnzKG7se\">而且目前周冠宇的征程才刚完成5场比赛，很多赛道都还是第一次开，所以还很难完全看出周冠宇在F1中的实力。</p>\n<p data-pid=\"GxStIBTy\">以下就仅从目前的信息做一些基础分析，可能是一些正确的废话，等到后面随着赛程的进行，有时间再持续更新。</p>\n<h2>1、从自身表现来看：稳得不像一个新人</h2>\n<p data-pid=\"A6_wjvnz\">4场完赛、1场因赛车问题退赛，最佳起步位置12，最佳完赛位置10，拿到1个积分，比赛中的表现相对成熟稳重，赛道上超车赶紧利索，不像去年的马泽平一样拉胯、也不像角田一样暴躁，菜鸟赛季表现得像一个老手，这方面感觉很中国车手的味道，礼让谦和。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-c93e79e054e38ad0521e6689d553a680_720w.jpg?source=b1748391?rss\" data-rawwidth=\"2000\" data-rawheight=\"1333\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-c93e79e054e38ad0521e6689d553a680\" data-watermark-src=\"v2-a1439844e774dff2248bd0c3c89775c8\" data-private-watermark-src=\"v2-31a0c332b0ebdcf86d41307f70e8efaf\"></p>\n<h2>2、对标队友博塔斯：完败，但不丢人</h2>\n<p data-pid=\"EoV8Vznl\">首先定义一下博塔斯，虽然之前在奔驰，博塔斯一直被喷菜，但是博塔斯真的菜吗？显然不是的，博塔斯虽然不是顶级车手，但是在中游车手里还是很强的。所以周冠宇跟不上博塔斯是很正常的，新人第一年就打败老人队友，只有像勒克莱尔这样的顶级车手才可以做到，老周跟博塔斯的差距主要体现在单圈上，正赛节奏上的差距到不是很大。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-db6a351701bbfc5af8aef73efde9206d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"528\" data-rawheight=\"267\" data-size=\"normal\" data-caption=\"单圈差距\" data-watermark=\"original\" data-original-src=\"v2-db6a351701bbfc5af8aef73efde9206d\" data-watermark-src=\"v2-488bcc5b65c82059af822144b0546231\" data-private-watermark-src=\"v2-7a524b62b5cd9682b635b434554f04c5\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-e4b5584b4fead801b2bea6090826e5e5_720w.jpg?source=b1748391?rss\" data-rawwidth=\"561\" data-rawheight=\"615\" data-size=\"normal\" data-caption=\"长距离差距\" data-watermark=\"original\" data-original-src=\"v2-e4b5584b4fead801b2bea6090826e5e5\" data-watermark-src=\"v2-287e87065ee612de94d9e119a169e13c\" data-private-watermark-src=\"v2-60652443a0b9b114b48b879720ee8d55\"></p>\n<h2>3、对标米克，完胜</h2>\n<p data-pid=\"f42z_sEa\">无论是在成绩单的结果上，还是在赛道上的过程中，都全方位赢过米克，尤其是今年哈斯的车相比于阿罗的车丝毫不落下风，甚至还更占优势的情况下。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-9b8c265ded33d9c9d39d64cc2d28a22e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1024\" data-rawheight=\"574\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-9b8c265ded33d9c9d39d64cc2d28a22e\" data-watermark-src=\"v2-9d0c9b1b2e17f51dad09551efe9de6f5\" data-private-watermark-src=\"v2-c6f6154b0e89c8c889a13d2983e50ea1\"></p>\n<h2>4、对标角田，仍有差距</h2>\n<p data-pid=\"Q3el9Lqm\">角田同样以F2季军的身份进入F1，去年的表现虽然也不及加斯利，但是菜鸟赛季全年拿下32个积分还是很亮眼的，虽然去年赛季结束，随着本田的退出，他的席位也一度风雨飘摇。但是今年到目前为止积分还排在加斯利前面，拿下10分，且小牛今年的车是明显不如阿罗的车的。角田比周冠宇早进入F1一年，但是他却是比周冠宇小1岁，头顶F1首位00后的光环。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b844a44e913975fbeca07cb163aab365_720w.jpg?source=b1748391?rss\" data-rawwidth=\"600\" data-rawheight=\"750\" data-size=\"normal\" data-caption=\"5月11日刚刚过完22岁生日\" data-watermark=\"original\" data-original-src=\"v2-b844a44e913975fbeca07cb163aab365\" data-watermark-src=\"v2-607b441f1858ddac18e17b75f97bfde0\" data-private-watermark-src=\"v2-efa4f9517d13d31973a07b19a5d7a2bd\"></p>\n<h2>5、近些年两位可供参考的前辈</h2>\n<p data-pid=\"wjnYE1-F\"><b>Marcus Ericsson，瑞典车手</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-d0c3eb8822bc2138d75a2fcbade5f81a_720w.jpg?source=b1748391?rss\" data-rawwidth=\"620\" data-rawheight=\"413\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-d0c3eb8822bc2138d75a2fcbade5f81a\" data-watermark-src=\"v2-419c64ab2940022747d778dfce891264\" data-private-watermark-src=\"v2-435572d7bd4d15097f8a935a0092cc78\"></p>\n<p data-pid=\"6vXGjK-J\">以F2四年级老生第六的成绩进入F1，15年加入索伯车队，澳大利亚首秀拿下P8，获得4个积分，也成为2015赛季最好完赛成绩，全年5次取得积分，全年9分进账。第二年2016年继续在索伯车队，全年0分进账，2017年继续全年0分进账，2018年再拿9分，并于2019年转投indycar赛事，没想到出道即巅峰，处子秀拿下F1职业生涯最好完赛成绩。</p>\n<p data-pid=\"4rvpv5IR\"><b>Antonio Giovinazzi，意大利户口，模拟器之王</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-c65a377bcd1df3aa691b3d184d7dc530_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1024\" data-rawheight=\"683\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-c65a377bcd1df3aa691b3d184d7dc530\" data-watermark-src=\"v2-7cfc085af5e895b954dff7ab498c03e4\" data-private-watermark-src=\"v2-50d44b043971245e184564b9ccbcd4f4\"></p>\n<p data-pid=\"mPZ978-j\">以F2亚军成绩进入F1（冠军是加斯利），2017年参加了澳大利亚站和中国站两站赛事（替补出场），0分入账，2018年勒克莱尔进入F1，加入索伯车队，Antonio Giovinazzi退出一线，担任法拉利试车手，2019年勒克莱尔升入法拉利，Antonio Giovinazzi回到索伯车队搭档kimi，全年拿下14分（队友kimi拿下43分）高光时刻是巴西站的P5，拿下10分，2020年全年4次拿下积分，总计4分，最好成绩是揭幕战的澳大利亚站，拿下P9，21赛季全年2次拿分，总计拿下3分。</p>\n<p><br></p>\n<p data-pid=\"xkqZq3yK\">从目前来看，老周能不能凭实力超过两位阿罗的前辈（毕竟今年阿罗的车比前两年要强），乃至弟弟角田，我们只能在接下来的比赛中见分晓了。</p>\n<p data-pid=\"Q1nCvnVy\">老周有个好消息是，这两年的F2不太有前几年诸如勒克莱尔、加斯利、诺里斯、拉塞尔这种天才少年的出现，目前对于F1名额的威胁主要是去年的冠军皮亚斯特里，以及今年的冠军有力争夺者，也是阿罗的亲儿子索伯青训队的普谢尔（Théo Pourchaire）。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6a54729ddb8bd08527611b4044f84e8d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1000\" data-rawheight=\"563\" data-size=\"normal\" data-caption=\"普谢尔（Théo Pourchaire）\" data-watermark=\"original\" data-original-src=\"v2-6a54729ddb8bd08527611b4044f84e8d\" data-watermark-src=\"v2-b2495855b63d2f2b926e9efb44af09f6\" data-private-watermark-src=\"v2-32bd2faa0b4a3f2fe473c7602393fb9e\"></p>\n<p data-pid=\"vfk50kk_\">另外就是拉导再这么撞下去，车队嫌弃其老爸投的钱都不够修车了，围场内有传言说威廉姆斯有兴趣给Alpine替补车手皮亚斯特里提供一个2023赛季的席位，但尚不知晓是替代阿尔本还是拉提菲。</p>\n<p data-pid=\"E05vIaGN\">无论如何，老周需要拿出强有力的表现来证明自己，不然即使通过继续付费拿到了明年的席位，面临的也未必是一段美好的F1旅途了。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/question/527084204/answer/2482776911?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\">知乎用户（登录查看详情）</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/527084204/answer/2482776911?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">26 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/504241598?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">洛国富的伤势怎么样了？</a><br><a href=\"http://www.zhihu.com/question/517883802?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">冬奥会结束了，什么行业受益了？</a><br>\n","link":"http://www.zhihu.com/question/527084204/answer/2482776911?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"车企所谓的「终身质保、免费保养」全是坑？是否有猫腻？","date":"2022-05-16 05:23:02","description":"\n<p data-pid=\"rSgj_fp1\">不敢说全是坑，里面还是有干货的，但大多数都是「误导性宣传」。</p>\n<p data-pid=\"ZBOn1OTw\">怎么形容呢？和方便面包装差不多的程度，里面是真的有面条，但和看起来的差距有点大。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-cceddb0bfda0c14ad75f8b580a61e7b1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"660\" data-rawheight=\"376\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h2>先说比较新鲜的「终身免费保养」</h2>\n<p data-pid=\"h5WJbtBN\">按照字面意思，人家大几十万的雷克萨斯才包含4年/10万公里免费保养，现在一堆车厂都来「终身免费保养」，那是不是服务比雷克萨斯还强好多倍？厂家就是想你这么理解，而实际上呢？</p>\n<h3>大都是不那么值钱的「基础保养」</h3>\n<p data-pid=\"yX_7AdUz\">「终身免费保养」字面意思是「终身的保养都免费」，当然厂家也希望你这样理解，而实际上却是「贵的项目不免费」，只包含「基础保养」，就是<b>只换 机油+机油滤芯 的「小保养」</b>。</p>\n<p data-pid=\"5YK8NPdi\">人家雷克萨斯免费保养期限虽然只有4年/10万公里，但包含的项目更实在，随车手册上要求的定期保养项目一律免费，而且免工时费。除了不包免费换轮胎，别的都包。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f13e8c70ff1eb2880489ef2ee83a3c48_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"997\" data-rawheight=\"576\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"TxVFfO2H\">机油机滤不是天上掉下来的，「小保养」一次也值小几百块，这好像车主赚了？反正车主没吃亏，<b>如果你本来就习惯去4S保养，这免费小保养的确是实惠</b>。但如果你原计划到外面的保养店保养，那这免费小保养会绑定你其他的保养维修项目都必须在4S店消费。众所周知，4S店的保养费用相较其他渠道偏高（但也更有保障一些）。</p>\n<p data-pid=\"fSF_ZNnt\">如果是纯电车跟你说终身免费基础保养，就约等于忽悠，纯电车不需要定期更换机油和机油滤，所谓的「基础保养」只是不消耗物料的全车检查而已。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f693e4e1c08b37f728c8db77adaef43d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"1173\" data-rawheight=\"1269\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"epCLnreT\">以20万元级别的大众途观L为例<sup data-text=\"\" data-url=\"https://www.autohome.com.cn/use/202111/1225879.html\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\">[1]</sup>，<b> 6万公里保养总费用9077元，其中小保养合计3825元，而还需要花5252元做其他保养。</b>除了可见小保养是小头，其他保养项目还有动不动上千元的维修、养护项目才是大头。没有免费的午餐，商家送的小头，正是为了拴住消费者的大头。</p>\n<h3>常规和非常规限制条款</h3>\n<p data-pid=\"bOIJalB1\">限首任车主，限非营运车，限每年免费保养里程和次数，这些都属于常规的合理限制条款，这里不多说。</p>\n<p data-pid=\"VzlV5Wqx\"><b>有些「免费保养」要求必须在4S店买车险</b>，实际上是左手倒右手，用免费小保养抵消了车险的打折金额，这些都必须在买车交钱签合同之前问清楚。</p>\n<h3>注意区分是「4S店」送的，还是「厂家」送的</h3>\n<p data-pid=\"yuMuGSpD\">车厂全面推出「终身免费保养」的情况还比较少见，目前厂家只在新车上市和某些促销节点将「免费保养」当作优惠来送。</p>\n<p data-pid=\"lNeoX1lr\">反倒是4S店推出「终身免费保养」更为常见。4S店普遍采用代理制度，不会做亏本的买卖，导致长期优惠措施后期执行不到位，采用非原厂机油耗材也是常见现象，还存在4S店换老板不认账、4S店倒闭跑路的情况，加上能开4S店的本地老板往往都有一定能耐和背景，死猪不怕开水烫，维权较为困难——厂家送保养更多是出于花钱做宣传促销，要是出了问题上网曝光一下还是很有用的，所以厂家送「终身免费保养」的会更靠谱。</p>\n<p data-pid=\"XvB5jxaG\">新闻曝光的「免费保养」相关纠纷，绝大多数都是4S店送出的。</p>\n<p data-pid=\"V3VBnx05\">▼ 「免费保养」活动中途暂停，店家指出有「最终解释权」<sup data-text=\"\" data-url=\"https://baijiahao.baidu.com/s?id=1671913497165921793&amp;wfr=spider&amp;for=pc\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"2\">[2]</sup></p>\n<p><img src=\"https://pic3.zhimg.com/v2-a19e7bb9913fbb815d59d528af47db8b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1174\" data-rawheight=\"764\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"TmI2gXCX\">▼ 「免费保养」捆绑保险纠纷<sup data-text=\"\" data-url=\"http://cq.cqnews.net/html/2016-11/04/content_39304101.htm\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"3\">[3]</sup></p>\n<p><img src=\"https://pica.zhimg.com/v2-af8b6402d0853e0b32d9e08edd547046_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1299\" data-rawheight=\"684\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h3>免费保养不免费</h3>\n<p data-pid=\"B9lpOywx\">尤其是4S店促销送的「免费保养」，很多是保养物料免费，工时费照样要交，有些更黑的对免费保养的客户区别看待，收取更高的工时费，最后算下来车主没得到多少优惠，所以送的保养是否包含工时费也需要问清楚。</p>\n<p data-pid=\"kwP1ht6M\">▼ 「免费保养」活动中途增加工时费纠纷<sup data-text=\"\" data-url=\"https://www.sohu.com/a/438772643_99995202\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"4\">[4]</sup></p>\n<p><img src=\"https://pic1.zhimg.com/v2-e88aca18f0f941b963ceb6db7660ea6d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1295\" data-rawheight=\"760\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h2>再谈谈比较常见的「终身质保」</h2>\n<p data-pid=\"NN_NjEke\">「终身质保」在电车市场比较常见，说是终身质保，也并非全车质保，大都是「三电终身质保」，「三电」指的是动力电池、电机系统以及电控系统，其实都是不容易坏的大件， 而且大都仅限首任车主。</p>\n<blockquote data-pid=\"gMPNyOMu\">根据国家工信部规定，从2016年起乘用车生产企业对电池、电机等<b>核心部件必需提供8年或者12万公里质保</b>(先到达为准)。</blockquote>\n<p data-pid=\"pAc1Okza\">也就是说现在能买到的电车，<b>三电系统本来就有8年/12万公里的强制质保</b>，只有超出8年/12万公里之外，才能享受到「三电终身质保」带来的好处。而另一方面一大堆限制条款依然存在，例如<b>仅限首任车主，仅限非营运车，有些还对行驶里程熟有额外限制</b>，甚至还有不准把电量用到20%以下的奇怪规定。</p>\n<p data-pid=\"S6y3cbWX\">列个常见的限制条款：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-a0fb166168a953cf5311f373f4b3260b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1220\" data-rawheight=\"519\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"MzgWKiZO\">连没有注册APP，连续12个月行驶里程超3万公里，不到品牌服务中心维修，都会丧失终身保修。</p>\n<p data-pid=\"nS2tayPv\">再来个比较离谱的，要求不准把电量用到20%以下，否则丧失终身质保，这里就不点名是哪家了。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5528309946313d6020b5d6f13e2c51dd_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"624\" data-rawheight=\"107\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"rTrDibwf\">经过众多限制条件后，能真正享受「三电终身质保」的人实属凤毛麟角。</p>\n<p data-pid=\"aDi27OD1\">如果你真的全部遵守了，坚持开了12年不卖，也没有超出规定里程，发现电池衰减到只有70%电量，是不是可以享受保修呢？</p>\n<p data-pid=\"ZV4D3CsS\">答案是现在还不知道，多家品牌的条款里都有这么一句：<b>“电池容量正常衰减，不属于终身保修范围。”到底怎样才算正常衰减？车厂们都没有说明白。</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-f2cfe98fb7b699a497d08ddf98d46702_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"934\" data-rawheight=\"480\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"eHvsAjos\">国家标准是8年12万公里后也能保证电池容量大于80%，那么12年后也是按80%电量的标准才是正常衰减，还是70%电量的标准？这里面有很大的灰色地带。</p>\n<p data-pid=\"BVH3mgdn\">但由于前期的纯电车的确存在使用几年后电量大幅度暴跌的情况，现在的新型电车已经大幅度改善，但依然有让多消费者担忧电池寿命问题，众多电车品牌推出「三电终身质保」主要是为了增加购买信心。</p>\n<p data-pid=\"nq4Egmcc\">最后顺带提一嘴，国内比较早推「终身质保」和「终身免费保养」的宝沃已经倒闭了，卖出去的车成了没爹妈的孤儿，连正常的保修和维修都成问题，这样的品牌，终身承诺又有啥意义呢？</p>\n<p><img src=\"https://pica.zhimg.com/v2-2d9b8dd366539495220b0c0d7f67d83b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1403\" data-rawheight=\"803\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"aP0kC5iE\">参考资料：</p>\n<p data-pid=\"doyZJ4bN\"><a href=\"http://link.zhihu.com/?target=https%3A//baijiahao.baidu.com/s%3Fid%3D1702044111144041765%26wfr%3Dspider%26for%3Dpc\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">baijiahao.baidu.com/s?</span><span class=\"invisible\">id=1702044111144041765&amp;wfr=spider&amp;for=pc</span><span class=\"ellipsis\"></span></a></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/gaoyongqiang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">汽车奇谈高小强</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/531597174/answer/2487467684?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">9 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/483802963?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">新能源汽车安全问题频发，岚图FREE的安全品质和工艺怎么样？</a><br><a href=\"http://www.zhihu.com/question/523240319?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">国产新能源车首任车主三电系统终身质保是否要求全程4S店保养？</a><br>\n","link":"http://www.zhihu.com/question/531597174/answer/2487467684?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012 年的、由 Node.j......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\n    return new Date(date.toLocaleString('en-US', { timeZone }))\n}\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        timeZone\n    })\n    return {\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\n        convert (date) {\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\n        }\n    }\n}\n\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\n    return converter.convert(new Date(secDate), tzName) - secDate\n}\n\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\ncmn-Hans-SG = 中文普通话-简体-新加坡\ncmn-Hant-TW = 中文普通话-繁体-台湾\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\ncmn = 中文普通话\n\nzh-Hans = 中文-简体\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\n}\n\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long'\n}\nconst now = new Date()\n\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\n\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\n\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\n\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\n\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\n\nzhCNFormatter.format(now) // 2021年10月13日星期三\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\n\njaFormatter.format(now) // 2021年10月13日水曜日\njaAltFormatter.format(now) // 令和3年10月13日水曜日\n\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\n// {locale: 'zh-CN', calendar: 'gregory', …}\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\n     // 基于一个固定日期计算，这里选择 1970.1.1\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\n    const base = new Date(1970, 0, 1).getTime()\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\n    return Array.from({ length: 7 }, (_, day) =&gt; (\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\n    ))\n}\n\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n}).formatToParts(new Date())\n// [\n//     { type: 'year', value: '2021' },\n//     { type: 'literal', value: '年' },\n//     { type: 'month', value: '10' },\n//     { type: 'literal', value: '月' },\n//     { type: 'day', value: '13' },\n//     { type: 'literal', value: '日' },\n//     { type: 'weekday', value: '星期三' },\n//     { type: 'literal', value: ' ' },\n//     { type: 'dayPeriod', value: '上午' },\n//     { type: 'hour', value: '1' },\n//     { type: 'literal', value: ':' },\n//     { type: 'minute', value: '00' },\n//     { type: 'literal', value: ':' },\n//     { type: 'second', value: '00' }\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\n}\n\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\n  timeZone: 'America/Los_Angeles',\n  year: 1995,\n  month: 12,\n  day: 7,\n  hour: 3,\n  minute: 24,\n  second: 30,\n  millisecond: 0,\n  microsecond: 3,\n  nanosecond: 500,\n  calendar: 'iso8601'\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<p>2020 年 11 月 11 日，苹果在本年度最后一次 Apple Events 上发布了全新的 ARM 芯片 M1、以及三款搭载了 M1 的 Mac：MacBook Air、MacBook Pro 13‘ 和 Mac Mini。在 WWDC 2020 库克宣布 Apple Silicon 后，这次 Apple Events 再一次掀起了热潮，不少 KOL 都把 M1 奉若神明，不少人也不以为然。本文通过 8 个问题来简单聊聊 M1 和 ARM Mac。M1 芯片的性能如何？本文写就时，搭载 M1 的 Mac 尚未开始发货，我们能看到的只有 GeekBench 上流出的跑分。所以，让我们先从跑分开始看起？...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote>\n<p>周六不放假休息，还在这加班搞 CTF？</p>\n</blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/86535/11/24318/75037/622032a8E4f94d4ae/89703ccc122cf4e0.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"从 Google Analytics 的统计代码说起 —— 谈谈 script 标签的 async 和 defer 属性","date":"2020-10-13 09:25:00","description":"\n<p>之前我在「天下武功，唯快不破 —— 我是这样优化博客的」一文中提到「对于大部分浏览器来说，确保 JS 异步加载和执行的做法其实是在操作 DOM 动态插入 &lt;script async&gt;」，但是并没有给出详细原因。这一次我以 Google Analytics 的统计代码为引子，详细讲讲 &lt;script&gt; 的 async 和 defer 属性、以及它们背后的故事。拆开 Google Analytic 的统计代码现在 Google 推出了 Google Tag Manager，通过......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/80291/2/16552/19311/622032b3Eb300c2aa/66748fc8124a01c5.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/script-async-defer/\">https://blog.skk.moe/post/script-async-defer/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/script-async-defer/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将 […]","link":"https://flyhigher.top/develop/2160.html"}]