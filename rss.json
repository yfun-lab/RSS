[{"title":"试播集 06 | 少数派作者们最近读完了啥（上）","date":"2022-05-25 09:29:00","description":"关于栏目不少读者表示希望能够见到更多关于文化与书籍的内容，充实书单、丰富精神。机器人特地邀请了Matrix社区作者们来聊聊自己近期阅读的有意思的书籍。喜欢本栏目的话，欢迎充电或评论文章来表达自己的喜爱 ...<a href=\"https://sspai.com/post/73426\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73426"},{"title":"如何评价如龙工作室新作《审判之眼:死神的遗言》？","date":"2022-05-25 09:05:27","description":"\n<p data-pid=\"us13qbHc\">最近在趁着会免和居家，终于断断续续地打通了这个游戏..</p>\n<p><br></p>\n<p data-pid=\"jmg1s9G7\">《审判之眼:死神的遗言》故事的舞台主要还在神室町，恰好之前我刚刚在PC上重新打完《如龙0》，所以感慨万千...</p>\n<p data-pid=\"y2wdJaab\">同一个地区，不同的时代，这种时代交错的体验特别奇妙。</p>\n<p data-pid=\"H2atmS86\">同样的街头斗殴，在最早的80年代纸醉金迷街头暴揍打的钞票乱飞，技能升级最后能花上亿；然后到了2018年的《审判之眼》里，打了半天才有几率掉一点钱，还不够买几盒泡面的，以至于去下水道医生那里买医疗包都有点肉疼，由于又不想打麻将赚钱，只能每次大战前多买点包子凑数，另外少挨点致命打击——让人深感时光荏苒，日本经济不复当年。</p>\n<p data-pid=\"624b4Lz0\">另外，更多是一种物是人非的感觉，毕竟《如龙》系列里桐生的故事都发生在同样的地方，有的时候走过一些已经被封起来或者早就被改造的地方，比如亚细亚街，忍不住驻足回望，想起在多少年前，也是在这里，自己遭遇了什么，自己所熟悉的那些人在这里的爱恨情仇。</p>\n<p><br></p>\n<p data-pid=\"30XBMfRt\">但这些对这些毫无记忆，屏幕里的《审判之眼》的主角八神则就没这么多眷念了，曾经为律师的他因为卷入了一场巨大的阴谋中，最终转职成为了侦探。当然时代在进步，主题不完全再是传统黑道话题了，更多掺和了一些社会性和现实性。</p>\n<p data-pid=\"E4TU6ak8\">虽然这个故事厚重感个人认为达不到双线叙事的《如龙0》的水平，但连环的悬念设置也足够精彩，从一桩桩案件委托开始，最终让主角重返了让自己几乎身败名裂的开端，就是最后有点太快了。</p>\n<p data-pid=\"S66u2Ma5\"><b>不过，《审判之眼》并不是一款以推理和解谜为驱动的游戏，实际上只是使用了侦探的身份</b>，主线故事更多的重点还是花在了“承接委托，到达地点，（观察/跟踪）打架，看动画”的循环里——在这里就不得不提一下游戏里塞满了大量追逐、跟踪、观察、举证的桥段，虽然很符合侦探的定位，但在如此高强度的填充下，乏善可陈的变化可能会让人觉得有些厌烦。</p>\n<p data-pid=\"ryuukLuU\">作为侦探，八神还要搞好各路路人角色的关系，甚至包括各路店员的羁绊（而且很一般），才能进一步获得道具（比如CD碟）或者触发新的委托和功能，也算是这个游戏支线拓展的一部分，获得的经验可以解锁更多的能力，而不是钱。</p>\n<p data-pid=\"FV0ozUmM\">其中包括大量鸡毛蒜皮的案件，比如帮人追假发系列，炸弹警报系列，算命系列，充斥着自《如龙》系列以来一贯的日式幽默。</p>\n<p data-pid=\"eFVx_ayT\">尤其是当主角有个可以吐槽的同事搭档的时候。</p>\n<p data-pid=\"3c53MDZ_\">与《如龙》不那么相同的地方，就是主角更文明了。指不能用什么过于凶狠像黑帮的武器了，倒还是可以抓起路边设施比如自行车就是一顿猛砸，可惜自行车质量一如既往的差，经常在乱斗中还没捡起来就碎了。</p>\n<p data-pid=\"JI6YU0Wg\">相较于之前的作品，其实还是加入了一些比较神秘的小系统，比如开锁系统，比如记住钥匙的技能，可能加入这些东西更符合侦探的设定吧（偷偷开锁真的算侦探吗）。</p>\n<p><br></p>\n<p data-pid=\"p-nk0PPK\">《审判之眼》中八神的战斗上其实更像《如龙0》里的真岛吾朗，可以切换多种适应不同战斗环境的战斗风格，与场景的交互相较于之前的作品也更加丝滑，尤其是在纵向上的拓展相较于前作有了不小的提升。</p>\n<p data-pid=\"hG95zKBS\">而唯一比较头疼的部分大概就是无处不在的京滨同盟了，没事就在街道上搞突袭，剧情吧也没啥剧情，总是拦着玩家要打一架。</p>\n<p data-pid=\"weS2os95\">至于特色小游戏，仍然多到爆炸，什么VR馆啦，无人机大赛（无人机手感烂到爆炸，梦回GTA 遥控飞机）啦，赌场啦，都是有的，但比前作都少了一些，此外还有几个支线任务里可以偶遇并达成特殊羁绊的红颜知己。</p>\n<p><br></p>\n<p data-pid=\"DTgse3xO\">其实在我个人看来，八神干更像《看门狗》里的艾登·皮尔斯，一个是有着律师理想的暴力侦探，一个是假装自己是黑客的收尾人。</p>\n<p data-pid=\"W6JalO7X\">区别就是后者是真的下杀手，而前者只是把人打服。二者多少都有点苦大仇深，只不过八神这边有了活宝队友和合理的桥段安插之后，最后还是很积极向上的。</p>\n<p><br></p>\n<p data-pid=\"ycldtg3X\">总的来说，《审判之眼》的重点还是叙事本身，剧情安排的其实不算完整但发挥还算在线，延续了《如龙》系列的诸多特色和系统传统，所以看上去新意有些不足。真硬要说推荐与否的话，那还是推荐在如今这个没什么大作的空窗期玩一下吧。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/question/305570613/answer/2499211785?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\">知乎用户（登录查看详情）</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/305570613/answer/2499211785?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">8 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/505051844?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《审判之眼：死神的遗言》是一款怎样的游戏？</a><br><a href=\"http://www.zhihu.com/question/504244941?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《审判之眼:死神的遗言》麻将有哪些打法？</a><br>\n","link":"http://www.zhihu.com/question/305570613/answer/2499211785?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"为大屏体验优化的 Android 与 Windows 碰撞：WSA 新版升级与体验","date":"2022-05-25 08:30:00","description":"底层版本升级到 Android 12L，让 Android 应用在 Windows 系统中的体验更出色。<a href=\"https://sspai.com/post/73422\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73422"},{"title":"消费者的高端梦先碎：作为米粉我究竟期待过什么？","date":"2022-05-25 07:30:57","description":"我经常对其他米粉朋友们说的一句话是：小米在干啥啊？这都干了啥事儿啊？<a href=\"https://sspai.com/post/73350\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73350"},{"title":"一日一技 | 我开发的这款小工具，轻松助你将飞书文档转为 Markdown","date":"2022-05-25 06:30:00","description":"本文就提供一种将飞书文档转换为 Markdown 文件的方法，来弥补飞书文档无法导出 Markdown 文件下载的情况。<a href=\"https://sspai.com/post/73386\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73386"},{"title":"闭关家中，我将监控摄像对准了自己","date":"2022-05-25 03:29:33","description":"经过几天的自我监控后，我对于自己的活动有了更清晰的认知，方便进行控制、修正。<a href=\"https://sspai.com/post/73362\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73362"},{"title":"派早报：Redmi Note 11T Pro 系列发布、WWDC22 日程公布等","date":"2022-05-25 00:52:05","description":"Microsoft Store 正式向 Win32 应用开放，罗技推出 MX Master 3S 鼠标和两款 MX Mechanical 键盘等。<a href=\"https://sspai.com/post/73418\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73418"},{"title":"费曼学习法真的好用吗？我尝试用费曼学习法去理解它自己","date":"2022-05-24 09:52:37","description":"费曼技巧，又称费曼学习法，这个学习方法听上去十分简单，人人都可以学会掌握，然后就能提高自己的学习能力。然而，费曼学习法效果真的有这么好吗？没学这个方法的人是不是会竞争不过别人？有这么好的方法，为什么不早点服用呢？\n\n本篇目标：打算用费曼技巧，来学习费曼技巧本身，也就是用其人之道还治其人之身。<a href=\"https://sspai.com/post/73353\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73353"},{"title":"你忽略的「报到证」终于被取消，这件事究竟有什么影响？","date":"2022-05-24 08:00:00","description":"某种意义上来讲，报到证的取消具有一种划时代的意义，它标志着人才流动与档案管理的一种巨大进步。<a href=\"https://sspai.com/post/73399\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73399"},{"title":"#热门话题的两端藏着一段历史#","date":"2022-05-24 03:30:28","description":"当看到「#」时，你会想到什么？<a href=\"https://sspai.com/post/73345\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73345"},{"title":"个人养老金制度热议背后，你可以了解一下这款金融产品","date":"2022-05-24 03:00:00","description":"注：本文为，服务由齐欣云服提供，少数派会获得一定的佣金，请详细了解后再做决定。随着人口老龄化的加剧，此前国家着重发展的基本养老保险开始体现它的局限性，根据中国社科院世界社保研究中心发布的《中国 ...<a href=\"https://sspai.com/post/73390\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73390"},{"title":"【041】机器学习驱动的基本面量化投资","date":"2022-05-23 11:40:50","description":"\n<p data-pid=\"D9zevbmE\">本文是<b>因子选择</b>专题的第 <i>001 </i>篇，也是因子动物园的第 <i>041</i> 篇独立原创研究。</p>\n<p data-pid=\"DJpXvA8g\">【<b>未经授权，禁止转载！</b>】欢迎私信公众号后台或动物园园长获取转载授权。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"GA-VC7FZ\">【30 秒速览】李斌, 邵新月和李玥阳（2019）第一次基于 A 股的大量异象，对机器学习和深度学习算法选择因子和预测股票收益的能力进行了深入的探究，并利用分析结果，反过来对因子的重要进行了考察。他们发现，<b>新的算法的确在某种程度上可以更好地挖掘因子与股票未来收益间的线性与非线性关系</b>。他们也指出，<b>交易摩擦类因子在 A 股最为重要</b>，但价值因子不重要，这一点似乎与已有研究不符。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"K5eq924y\">目录：</p>\n<p data-pid=\"sf6srlyf\">01. 简介</p>\n<p data-pid=\"KYHsKpJM\">02. 基本目标和方法</p>\n<p data-pid=\"mGWYlHn3\">03. 方法比较的实证结果</p>\n<p data-pid=\"Vn20gndV\">04. 因子重要性检验</p>\n<p data-pid=\"XQCYxThI\">05. 一点评论</p>\n<p data-pid=\"5unzJMaF\">06. 结语</p>\n<hr>\n<h2>1. 简介</h2>\n<p data-pid=\"ElJ1icZV\">近年来，随着机器学习和深度学习的快速发展，机器学习在金融，包括因子研究领域，也得到了日益广泛的应用。例如，周国富和 Rapach 教授也在多篇文献中用到了以 forecast combination 为代表的机器学习方法（见 Rapach, Strauss, and Zhou (2010), Kong, Rapach, Strauss, and Zhou (2011), Rapach and Zhou (2010) 以及 Han, He, Rapach, and Zhou (2019).）。</p>\n<p data-pid=\"wrs6i3LZ\">更重要的自然是 Macos Lopez Prado ，仅 2018 年一年，他撰写了至少 3 篇相关论文以及一部专著（见 Prado (2018 a,b,c,d)）。此外，他还同 Frank Fabozzi 和 Joseph Simonian 一同作为主编，参与创办了新的期刊 Journal of Financial Data Science ，在第一期中，三位大佬 Rob Arnott、Campbell Harvey 和投资组合理论奠基人 Harry Markowitz 联合发表了一篇题为《A Backtesting Protocol in the Era of Machine Learning》的文章，宣告投资策略和因子研究正式步入机器学习时代。</p>\n<p data-pid=\"SL0zdBri\">但过去的相关研究往往仍集中于利用机器学习算法构建新的因子，鲜少涉及利用机器学习算法来进行大规模的因子及预测模型筛选。此外，已有研究主要关注机器学习算法，对近年日益兴起的深度学习则关注较少。最后，这些研究大多基于美股进行，较少关注 A 股市场。</p>\n<p data-pid=\"JQivS2gk\">因此，今天难得地着重介绍一篇中文文章——《机器学习驱动的基本面量化投资》，由武汉大学李斌教授及两位硕士生发表于《中国工业经济》。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h2>2. 基本目标和方法</h2>\n<p data-pid=\"gV-BgNT3\">作者们以 1997 年 1 月至 2018 年 10 月间 A 股市场的 96 个重要投资异象为基础，比较了经典的 OLS 模型和多种机器学习和深度学习模型，以回答下述 3 个依次递进的主要问题：</p>\n<ul>\n<li data-pid=\"-tB6lWxL\"> 是否有线性机器学习模型可以超越 OLS ？<br>\n</li>\n<li data-pid=\"Kf-FHbk3\"> 是否有非线性机器学习模型可以超越线性机器学习模型？<br>\n</li>\n<li data-pid=\"wUx2x8Q0\"> 如果非线性模型的确表现更好，那么，是否有深度学习算法可以超越机器学习模型？<br>\n</li>\n</ul>\n<p data-pid=\"7ThsgyCG\">特别地，作者们共选取了 5 种线性机器学习算法、4 种非线性机器学习算法和 3 种深度学习方法。其中，考虑到股票收益预测问题的性质，机器学习算法都为监督学习方法。具体算法如下表所示：</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-73ca112828c2c9b7b1b640db562ed67b_b.jpg\" data-size=\"normal\" data-rawwidth=\"1004\" data-rawheight=\"533\" class=\"origin_image zh-lightbox-thumb\" width=\"1004\" data-original=\"https://pic4.zhimg.com/v2-73ca112828c2c9b7b1b640db562ed67b_r.jpg\"><figcaption>表 1 ：文章所用算法列表.数据来源：因子动物园，李斌, 邵新月和李玥阳（2019）.</figcaption></figure><p data-pid=\"XEdd6ezN\">对于每一个因子/模型，作者使用 12 个月的滚动窗宽进行建模并对下月收益率进行预测，根据预测收益率将股票分为 10 组，构建多空因子组合。理论上，最优参数也是时变的，但基于计算量和稳健性的考虑，作者在整个分析期间，都沿用第一期选择的最优参数。</p>\n<p data-pid=\"QI3IqIff\">此外，考虑到不同因子取值可能有数量级的差异，为了控制其对建模结果的影响，作者在每次建模前，对训练集的因子进行了标准化处理。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h2>3. 算法比较的实证结果</h2>\n<p data-pid=\"6iU_s9Js\">表 2 展示了不同模型下的多头、空头及多空组合表现。从该表可以发现：</p>\n<ul>\n<li data-pid=\"9v3dGoEx\">\n<b>线性机器学习模型表现均略优于 OLS</b>，显示机器学习算法确实可以更好地识别因子与股票未来收益之间的相关性，虽然提升幅度并不是非常大。<br>\n</li>\n<li data-pid=\"HOuPn1pW\">\n<b>非线性模型表现显著优于线性模型</b>，其中以 XGBoost 为甚。XGBoost 近年在数据挖掘界非常流行（有玩笑称其为 Kaggle 竞赛标配），此处在因子研究中同样也有非常出色的表现，不仅多空组合平均收益提升超过 30%，t 统计量更是超过 9，异常得显著。<br>\n</li>\n<li data-pid=\"39oTJK5S\">\n<b>深度学习算法普遍表现出色，总体上优于机器学习算法</b>，其中 DFN 表现最好，平均收益最高（2.78%），t 统计量同样也接近 9 。<br>\n</li>\n<li data-pid=\"H7HAxKoh\">\n<b>所有机器学习模型都高度显著，且显著优于经典的规模因子（SIZE)</b>。要知道，规模因子是众所周知的 A 股市场表现最好的单因子。由此可见机器学习模型的确尤其重要价值。<br>\n</li>\n</ul>\n<p data-pid=\"A5ipe_zJ\">此外，由于 A 股做空约束较多，多头组合的表现也应给予较多关注。结果也是类似的，深度学习和非线性机器学习算法，尤其是 DFN 和 XGBoost ，表现非常出色，此外，LSTM 也表现优异。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-4cc1148c199f613bb623d8650e50231e_b.jpg\" data-size=\"normal\" data-rawwidth=\"496\" data-rawheight=\"632\" class=\"origin_image zh-lightbox-thumb\" width=\"496\" data-original=\"https://pic3.zhimg.com/v2-4cc1148c199f613bb623d8650e50231e_r.jpg\"><figcaption>表 2 ：不同模型表现概览. 数据来源：李斌, 邵新月和李玥阳（2019），表 1.</figcaption></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"sKIaILes\">进一步的收益差分析表明，所有机器学习算法的绩效相对 OLS 都有显著提升，而 DFN 能显著超越线性机器学习算法。</p>\n<p data-pid=\"_wEF2NvK\">在此基础上，利用除 FC （因 FC 为单变量 OLS 的算术平均）之外的 11 类算法，构建集成预测：</p>\n<p data-pid=\"Lgb0nfDa\"><img src=\"https://www.zhihu.com/equation?tex=%5Cbegin%7Bequation%7D+++++R_%7Bt%2Ci%7D%5E%7BEnsemble%7D+%3D+%5Cfrac+%7B1%7D+%7B11%7D+%5Csum%5Climits_%7Bj%3D1%7D%5E%7B11%7D+R_%7Bt%2Ci%7D%5E%7Bj%7D+++%5Cend%7Bequation%7D\" alt=\"\\begin{equation}     R_{t,i}^{Ensemble} = \\frac {1} {11} \\sum\\limits_{j=1}^{11} R_{t,i}^{j}   \\end{equation}\" eeimg=\"1\"></p>\n<p data-pid=\"bF7Cvwga\">再根据集成预测来构建因子。结果显示，在不同的窗宽下，多空组合和多头组合的表现都显著优于 OLS 下的表现。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-9cc9fbcda45628a8ac733c6b3c0c653d_b.jpg\" data-size=\"normal\" data-rawwidth=\"611\" data-rawheight=\"558\" class=\"origin_image zh-lightbox-thumb\" width=\"611\" data-original=\"https://pic2.zhimg.com/v2-9cc9fbcda45628a8ac733c6b3c0c653d_r.jpg\"><figcaption>表 3 ：集成预测因子表现概览. 数据来源：李斌, 邵新月和李玥阳（2019），表 3 和 表 4.</figcaption></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<h2>4. 因子重要性检验</h2>\n<p data-pid=\"5x_-qm-_\">在肯定了机器学习算法对于因子模型的重要性后，作者们并未就此止步。他们试图据此对不同异象的重要性进行探讨。具体而言，已知机器学习算法有良好表现，那么，一个因子越重要，理论上，它就应该被越多的机器学习模型选入最终的模型。因此，作者们统计了每个因子被不同模型选中的次数，来分析因子的相对重要性。</p>\n<p data-pid=\"kQXKMpty\">表 4 展示了单因子、线性和非线性算法中被选中次数较多的因子。可见，交易摩擦类因子非常多，成长、盈利和动量因子等也有上榜。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-1442005883669994ee6b2a30a47895d6_b.jpg\" data-size=\"normal\" data-rawwidth=\"639\" data-rawheight=\"546\" class=\"origin_image zh-lightbox-thumb\" width=\"639\" data-original=\"https://pic3.zhimg.com/v2-1442005883669994ee6b2a30a47895d6_r.jpg\"><figcaption>表 4 ：重要因子列表. 数据来源：李斌, 邵新月和李玥阳（2019），表 6.</figcaption></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"NC43uQh4\">表 5 则直接给出了不同类别因子被所有 14 个模型选中次数不低于 5 次的情况。与表 4 一致，交易摩擦类因子以 52% 的上榜率遥遥领先，流动性因子和动量因子表现也不错，价值因子则无一入围。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-57158fac598a22bfed907d7f61065e6d_b.jpg\" data-size=\"normal\" data-rawwidth=\"1015\" data-rawheight=\"283\" class=\"origin_image zh-lightbox-thumb\" width=\"1015\" data-original=\"https://pic2.zhimg.com/v2-57158fac598a22bfed907d7f61065e6d_r.jpg\"><figcaption>表 5 ：分类别重要因子统计表. 数据来源：李斌, 邵新月和李玥阳（2019），表 8.</figcaption></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h2>5. 一点评论</h2>\n<p data-pid=\"N4J7YSqF\">首先，这篇文章的思路非常清晰，循着提出的几个主要问题而有序地推进研究，且实证工作毫无疑问也非常详尽而扎实（据说作者光 coding 前前后后就花了一年多时间），非常令人钦佩，值得好好学习。</p>\n<p data-pid=\"2n-LhVlJ\">其次，该文最后关于因子重要性的发现是非常有趣的，也有一定争议。大部分关于 A 股的研究都认可交易摩擦类因子在 A 股当仁不让的重要地位，但已有研究普遍认为 A 股价值因子显著而动量不显著，例如 Qiao (2018) 在研究了 231 个因子后指出，交易摩擦和价值因子在 A 股较为显著，其他因子则普遍不显著。这篇文章则发现基于机器学习的视角，价值因子不重要，动量反而更重要一些。这方面，未来值得更深入的讨论。</p>\n<p data-pid=\"paNjzJyR\">再者，作者们未进行动态参数选择，这固然降低了过度拟合的风险。但一直使用第一期选择的参数，似乎也不是非常恰当。也许某些线性算法在其他的参数下有着显著优异的表现且同样稳健，那么，本文的结论就要打问号了。</p>\n<p data-pid=\"Vc0VDv4n\">最后，这篇文章基于已有因子进行整合和筛选，固然有更好的表现，但其内部的 blackbox 仍然难以让投资者对其表现真正信服，因而在实际应用中会有不少障碍。这同此前我们梳理关于 trend factor 的研究时的疑虑是相同的。未来，也许可以更进一步，对投资组合的持仓进行深入分析和比较，基于持仓和收益率分解，将新算法下的业绩提升进行量化拆解，以让投资者更好地理解策略。</p>\n<h2>6. 结语</h2>\n<p data-pid=\"-cw4ifJt\">机器学习和深度学习的时代已然来临，因子研究也不可避免步入机器学习时代。虽然已有不少相关研究，但李斌, 邵新月和李玥阳（2019）这篇文章还是有不少新意，作者们第一次基于 A 股的大量异象，对机器学习和深度学习算法选择因子和预测股票收益的能力进行了深入的探究，并利用分析结果，反过来对因子的重要进行了考察。</p>\n<p data-pid=\"K3LqLVZn\">他们发现，机器学习模型优于单因子（包括 SIZE），而非线性模型优于线性模型，深度学习算法总体上优于机器学习算法。这表明，新的算法的确在某种程度上可以更好地挖掘因子与股票未来收益间的线性与非线性关系。</p>\n<p data-pid=\"xg7njMpG\">与此同时，他们的部分发现和观点也有待进一步探究。例如，他们发现 A 股市场上价值因子不重要，但已有研究和投资者的直观感受，都支持价值因子很显著。</p>\n<p data-pid=\"DCpDglpQ\">此外，更为重要的，<b>如何拆解机器学习和深度学习算法的 blackbox ，让投资者更好地理解算法超额收益的来源，从而更好地据此指导投资实践。也许，这也是这个机器学习新时代的核心课题</b>。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"zsMQQj5_\">全文完。</p>\n<p data-pid=\"qHxeNVqZ\"><b>本文仅为分享，不代表任何投资建议。文章图表来自于相应论文，仅为介绍之用，版权归原作者和期刊所有。</b></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"Ztq0KZkG\">另：点击下述公众号文章文末的阅读原文，可跳转至期刊的文章链接，下载文章原文及附件。该文附件包含作者提供的相关数据。</p>\n<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/P2CZlNngFOsUKHUAr5FC7Q\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-8009d4546a55e63b2c27eb3756d78959_180x120.jpg\" data-image-width=\"867\" data-image-height=\"370\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【041】机器学习驱动的基本面量化投资</a><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"QbgKKRHQ\"><b>历史推荐：</b></p>\n<p data-pid=\"6A6Kvnip\">文章索引：</p>\n<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzUxNzY0NjU3Mw%3D%3D%26mid%3D2247484177%26idx%3D1%26sn%3D974752cfa8284d111eb9a4affa067532%26chksm%3Df995b293cee23b85d1d3ba89dc58136f684efa0d51ac5e8a2c299ce036165d6f82f391331997%26scene%3D21%23wechat_redirect\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-683cec67ef807dcb038909511ecf1e37_180x120.jpg\" data-image-width=\"635\" data-image-height=\"270\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">因子投资小册子</a><p data-pid=\"z-qpS01T\">因子体系：</p>\n<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzUxNzY0NjU3Mw%3D%3D%26mid%3D2247484154%26idx%3D1%26sn%3De8bbc417df2e0dcfd01999b545eed3a5%26chksm%3Df995b378cee23a6ee62b176a6f14d81a6c3ce608717a46dcc5abe723404e00341ac06d329428%26scene%3D21%23wechat_redirect\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-8e92d116e5742ccd9be3491097682782_180x120.jpg\" data-image-width=\"1000\" data-image-height=\"427\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">FF 和 Barra 体系，谁是你的菜？</a><p data-pid=\"Nm5y6HJk\">实践方法论：</p>\n<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/574CqLn3eEYqWsy4lCrCow\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-f5a5a8956bc4b4d0dfc0972de69856fe_180x120.jpg\" data-image-width=\"1280\" data-image-height=\"545\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【037】资产配置与因子配置：可以团圆吗？</a><p data-pid=\"2bFcD8Aa\">投资因子：</p>\n<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzUxNzY0NjU3Mw%3D%3D%26mid%3D2247484082%26idx%3D1%26sn%3D5e928ca55b3f594af640783f728bbfdf%26chksm%3Df995b330cee23a2662956624514e3baae8490658650302bb6727c4962f4fc12f996d1a63d605%26scene%3D21%23wechat_redirect\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-c23d38f108a512739a88fb2c06943ffe_180x120.jpg\" data-image-width=\"1280\" data-image-height=\"545\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【031】投资效应：Factor War 前传</a><p data-pid=\"ZWrkdgWx\">研究方法论：</p>\n<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzUxNzY0NjU3Mw%3D%3D%26mid%3D2247484028%26idx%3D1%26sn%3D6f23422ddf7c0e75173397beb7189a29%26chksm%3Df995b3fecee23ae8d07889c467a5a592f6c805447e560e8a5dfd62422e17161cabe723fd7e7e%26scene%3D21%23wechat_redirect\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-3957928d9240707d682ee2a2f5f11c1b_180x120.jpg\" data-image-width=\"1280\" data-image-height=\"543\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【027】追寻因子的足迹：分类、构造与检验</a><p data-pid=\"mXbTJV2Q\">搞事情小组：</p>\n<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzUxNzY0NjU3Mw%3D%3D%26mid%3D2247484138%26idx%3D2%26sn%3D50214e7728c99d7ee5641a5b670a70a2%26chksm%3Df995b368cee23a7e043a1e8059199b041f26c02b09c42750c1ff751d0d09dcc396145677b8e7%26scene%3D21%23wechat_redirect\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-0e4372849323c0b8afd2360d57a1b17b_180x120.jpg\" data-image-width=\"1010\" data-image-height=\"431\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">搞事情深度研究| 异质波动率之谜</a><p data-pid=\"K-rDAseu\">实证研究：</p>\n<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzUxNzY0NjU3Mw%3D%3D%26mid%3D2247484000%26idx%3D1%26sn%3D9017c6526ba8754d35cd436ac18cd89d%26chksm%3Df995b3e2cee23af4c3a7d810052ba5f938941f3fb750de86161f0aa5eb78712951d74abc7564%26scene%3D21%23wechat_redirect\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-a0b4bd562ca104e4141033bb1806998d_180x120.jpg\" data-image-width=\"1200\" data-image-height=\"510\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【026】低 Beta 在 A 股：证券市场线是平坦的吗？</a><p data-pid=\"fMuhv5fe\">技术因子：</p>\n<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/AKrS-Qyait1UJ0gctS9x0A\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-8cbf1c8649151b1f9716f01ddc96c38c_180x120.jpg\" data-image-width=\"1280\" data-image-height=\"546\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【040】Trend Factor in China ：中国版定价模型？</a><p data-pid=\"yJVp95gL\">低风险因子：</p>\n<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzUxNzY0NjU3Mw%3D%3D%26mid%3D2247483884%26idx%3D1%26sn%3D9effd3f5b77c9b5479ae0db1d7b8f80d%26chksm%3Df995b06ecee2397806a201d29314f737349ef11b0e30deb925a60b15d0c5648eee55625953a2%26scene%3D21%23wechat_redirect\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-f9b311eaafec7b0d4321deed9126e1fe_180x120.jpg\" data-image-width=\"1024\" data-image-height=\"436\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【018】低风险异象靠谱吗？解释与批判</a><p data-pid=\"euDRVkJL\">动量因子：</p>\n<a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzUxNzY0NjU3Mw%3D%3D%26mid%3D2247483796%26idx%3D1%26sn%3Df657141b69c2f4d8b319ac8f41ca45b5%26chksm%3Df995b016cee239001303e7e7bdf569c4d50ae8cf4b98f095f08a9308dfc399aeaee928502cb3%26scene%3D21%23wechat_redirect\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-4408df1004f7861fdbdf13d6e0205980_180x120.jpg\" data-image-width=\"1280\" data-image-height=\"543\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【010】横截面动量那些事</a><p data-pid=\"W2Lyy41X\">基本面动量因子：</p>\n<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/1LafMHLQdbdQsB35TkNoDw\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-3eebaec4e5742067173ff44a91fdef8e_180x120.jpg\" data-image-width=\"1040\" data-image-height=\"443\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【038】不止于价格动量：基本面动量也很酷</a><hr>\n<p data-pid=\"6zvQX7U4\">References:</p>\n<ul>\n<li data-pid=\"rKrSfdpD\"> Arnott, Rob, Campbell R. Harvey, and Harry Markowitz. \"A Backtesting Protocol in the Era of Machine Learning.\" <i>Journal of Financial Data Science</i> 1.1 (2019): 64-74.<br>\n</li>\n<li data-pid=\"jEgFAGLN\"> Bali, Turan G., Robert F. Engle, and Scott Murray. \"Empirical Asset Pricing: The Cross Section of Stock Returns.\" John Wiley &amp; Sons, 2016.<br>\n</li>\n<li data-pid=\"m9L5KdSh\"> De Prado, Marcos Lopez. \"Advances in Financial Machine Learning.\" John Wiley &amp; Sons, 2018.<br>\n</li>\n<li data-pid=\"anttIoXO\"> De Prado, Marcos Lopez. \"Beyond Econometrics: A Roadmap Towards Financial Machine Learning.\" Available at SSRN 3365282 (2018).<br>\n</li>\n<li data-pid=\"UaiRcIzk\"> De Prado, Marcos Lopez. \"Ten Applications of Financial Machine Learning.\" Available at SSRN 3365271 (2018).<br>\n</li>\n<li data-pid=\"jrZrc1W5\"> De Prado, Marcos Lopez. \"The 10 Reasons Most Machine Learning Funds Fail.\" <i>Journal of Portfolio Management</i> 44.6 (2018): 120-133.<br>\n</li>\n<li data-pid=\"8BjWDpOS\"> Han, Yufeng, Ai He, David E. Rapach, and Guofu Zhou. \"What Firm Characteristics Drive US Stock Returns?.\" Available at SSRN 3185335 (2018).<br>\n</li>\n<li data-pid=\"O_XIu7Ji\"> Kong, Aiguo, David E. Rapach, Jack K. Strauss, and Guofu Zhou. \"Predicting Market Components Out of Sample: Asset Allocation Implications.\" <i>Journal of Portfolio Management</i> 37.4 (2011): 29-41.<br>\n</li>\n<li data-pid=\"IlUY1mQk\"> Qiao, Fang. \"Replicating Anomalies in China.\" Available at SSRN 3263990 (2018).<br>\n</li>\n<li data-pid=\"pKcC8Mz9\"> Rapach, David, and Guofu Zhou. \"Forecasting Stock Returns.\" <i>Handbook of Economic Forecasting</i>. Vol. 2. Elsevier, 2013. 328-383.<br>\n</li>\n<li data-pid=\"ZjzRYJrX\"> Rapach, David E., Jack K. Strauss, and Guofu Zhou. \"Out-of-sample Equity Premium Prediction: Combination Forecasts and Links to the Real Economy.\" <i>Review of Financial Studies</i> 23.2 (2010): 821-862.<br>\n</li>\n<li data-pid=\"G-RH8aQV\"> 李斌, 邵新月 和 李玥阳. \"机器学习驱动的基本面量化投资研究.\" 中国工业经济 8 (2019): 61-79.<br>\n</li>\n</ul>\n<p data-pid=\"H04IpeJO\">题图：Abstract Wallpaper, from www.pexels.com.</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/llanglli?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">llanglli</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/88233451?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"01-经济思想的源与流-经济哲学的主要争论","date":"2022-05-23 11:38:30","description":"\n<p data-pid=\"30qz0Psl\">我想要梳理一下经济思想的流变。</p>\n<p data-pid=\"PcmKmk3u\">为了完成这个学习计划</p>\n<p data-pid=\"ApJNlpNw\">我将指定以下几本书自己阅读。</p>\n<p data-pid=\"GIwhvJT4\"><b>经济思想</b>：</p>\n<blockquote data-pid=\"YkesTNUM\">Stanley Brue, Randy Grant.<i>The Evolution of Economic Thought.</i> <br>Davis. <i>Companion to the History of Economic Thought</i>.</blockquote>\n<p data-pid=\"ursp-eIw\"><b>经济哲学</b>：</p>\n<blockquote data-pid=\"8MTghLDe\">Alexander Rosenberg. <i>Philosophy of Social Science.</i><br>Barry Hindess. <i>Philosophy and Methodology in the Social Sciences.</i>\n</blockquote>\n<a href=\"https://link.zhihu.com/?target=https%3A//plato.stanford.edu/entries/economics/%23Bib\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Philosophy of Economics</a><p data-pid=\"KWxTuA3i\">本次学习这自然会涉及到各个经济学派的思想内容。</p>\n<p data-pid=\"RveXjhYR\"> 什么是经济学派？<b>经济学流派或经济思想流派是对人类社会基本经济 问题或某个时期重要的经济问题持有相对一致的立场、观点和政策主张的经济学家所形成的松散团体</b>，或者是指一些经济学家在追随某个先驱者和理论领袖的基础上发展出来的一种经济学理论体系。 </p>\n<p data-pid=\"4tOGqWbs\">为什么要研究经济思想起源和流变？</p>\n<p data-pid=\"u-AWA6-F\"><b>它们的历史是依赖象征体系和个人的记忆而维持着的社会共同经验。这样说来，每个现代学派的“当前”，不但包括他本身“过去”的投影，而且是整个整个经济思想的“过去”的投影。</b></p>\n<p data-pid=\"DDZDOgvP\">接下来想说说方法论的问题。</p>\n<p data-pid=\"fUPPiNgX\">尽管不同学派对于经济有着自己的方法论和认知论，但是都会在方法论上涉及到这7个问题。</p>\n<p data-pid=\"s-Bynrm6\">（Although the different branches and schools of economics raise a wide variety of epistemological and ontological issues concerning economics, seven problems have been central to methodological reflection (in this philosophical sense) concerning economics.）</p>\n<hr>\n<h2><b>目录</b></h2>\n<p data-pid=\"h3iZ3oNR\"><b>1.实证性vs规范性</b></p>\n<p data-pid=\"hpTgDY5C\"><b>2.理由与原因</b></p>\n<p data-pid=\"VWOKt621\"><b>3.社会科学自然主义</b></p>\n<p data-pid=\"jMxRKo-j\"><b>4.抽象化，观念化与CP问题</b></p>\n<p data-pid=\"ugaCUGU0\"><b>5.因果关系之于实证经济学和计量经济学</b></p>\n<p data-pid=\"Z6sRPg1X\"><b>6.经济学的结构与策略：范式与研究纲领</b></p>\n<p data-pid=\"33uV4A7J\"><b>7.模型论</b></p>\n<hr>\n<h2>1.实证性vs规范性（Positive versus normative economics）</h2>\n<p data-pid=\"cau__nQC\">首先引用两位知友的回答</p>\n<p data-pid=\"f_UwWVmW\"><a class=\"member_mention\" href=\"https://www.zhihu.com/people/497f941a42c565b3787f2cec5d3f3572\" data-hash=\"497f941a42c565b3787f2cec5d3f3572\" data-hovercard=\"p$b$497f941a42c565b3787f2cec5d3f3572\">@文石</a> <a class=\"member_mention\" href=\"https://www.zhihu.com/people/61aec83cec749621fd3736854ba8e2f0\" data-hash=\"61aec83cec749621fd3736854ba8e2f0\" data-hovercard=\"p$b$61aec83cec749621fd3736854ba8e2f0\">@冯晗</a> </p>\n<a href=\"https://www.zhihu.com/question/29612395/answer/45619841\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/169bc7f56632204203c92cdf16a24c3a_bh.jpg\" data-image-width=\"627\" data-image-height=\"549\" class=\"internal\">什么是经济学的「规范分析」？</a><p class=\"ztext-empty-paragraph\"><br></p>\n<a href=\"https://www.zhihu.com/question/22574460/answer/21832680\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">实证分析（Positive Analysis）在经济学中的地位是怎样的？</a><p class=\"ztext-empty-paragraph\"><br></p>\n<a href=\"https://www.zhihu.com/question/22574460/answer/21845954\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">实证分析（Positive Analysis）在经济学中的地位是怎样的？</a><p class=\"ztext-empty-paragraph\"><br></p>\n<a href=\"https://www.zhihu.com/question/30436087/answer/152875022\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\"internal\">为什么现代西方经济学抛弃了劳动价值论？</a><p data-pid=\"YsOvT4bh\">经济学作为社会“科学”，就像德尔干提出的研究social fact一样，经济学也应该是研究fact的实证科学。但是经济学多少会涉及到规范性的问题，比如经济学也研究价值。但是也有人认为经济学不研究价值，它是帮助决策者选择实现目标的手段，但它并应该作为某种价值观念不影响agent如何去做选择。</p>\n<p data-pid=\"dejDEYl4\">尽管许多经济学家不愿意将规范性问题视为经济学帝国的一部分，规范性经济学现在自成一家形成了一个令人印象深刻的理论和文献体系。</p>\n<p data-pid=\"HDJCft4p\">20世纪上半叶，大多数主要的经济学家（庀古、希克斯、卡尔多、萨缪尔森、阿罗等）将大量的研究工作投入到规范性问题上的研究上，特别是公共政策评价标准的定义上。但是对于规范性命题在经济学中的地位一直都很模糊，经济学研究的主题和它与公共政策咨询的紧密联系，使得经济学与价值判断无法分割。值得一提的是，许多规范经济学的结果都是主要具有分析功能的数学化定理，赋予他们一个规范性的概念可能是有争议的，因为他们在阐明伦理价值上最有用，但是并不是它的理论本身说明这些价值必须被认知</p>\n<p data-pid=\"1gOFwaGm\">规范经济学与政治哲学之间存在着诸多相互影响。特别是，罗尔斯的差异原则对再分配政策关注最大化原则进行经济分析有重大影响。这是把处境最坏的人放在优先地位来考虑，而不是仅仅是简单功利主义的加总。</p>\n<p data-pid=\"6sMOTzAY\">比如罗尔斯提出差别原则和纳什议价博弈就有千丝万缕的联系。详见 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/3f80935cc58187fa3efe67d4cc16aede\" data-hash=\"3f80935cc58187fa3efe67d4cc16aede\" data-hovercard=\"p$b$3f80935cc58187fa3efe67d4cc16aede\">@米哈伊</a> 老师这个答案</p>\n<p data-pid=\"SfUNi8Ur\">在《作为公平的正义》中，罗尔斯在阐释差别原则时提到的“纳什点”和“边沁点”是什么意思？ - 米哈伊的回答 - 知乎 <a href=\"https://www.zhihu.com/question/67416858/answer/252607160\" class=\"internal\"><span class=\"invisible\">https://www.</span><span class=\"visible\">zhihu.com/question/6741</span><span class=\"invisible\">6858/answer/252607160</span><span class=\"ellipsis\"></span></a></p>\n<p data-pid=\"y-UKN7Eu\">反对没有规范性问题，原因有大概三个层面：</p>\n<p data-pid=\"6i_jblhJ\">1）经济活动和任何人类活动一样，受到价值观念的支配，这就涉及到每个大经济学家都需要构建自己的value theory。每个开山立派的大经济学派大概都对人性和指导人们如何选择的价值观有自己的洞见，究竟什么是理性，人性到底是如何的，什么是有限理性？亚当斯密为什么要写到的情操论？</p>\n<p data-pid=\"OxwMsYdn\">2）经济学家必须为决策阐明或科学解释目标和约束条件（Machlup 1969b）。可目标因何处而来呢？我们在宏观经济学探讨政策制定方向的时候究竟应该以什么为目标？是否应该在保护人的自由、平等权利和理想的条件下去追求财富和经济的增长，资本深化和资本广化的问题。agent-based model是有意义的吗？</p>\n<p data-pid=\"BA8JfS8e\">3）人的利己主义到底如何影响了人的经济行为？为什么会产生外部性？为什么会产生寻租问题？</p>\n<p data-pid=\"YIXiNNuH\">每个社会学理论都需要想清楚的最核心的两个问题就是<b>Problem of order</b>和<b>Problem of action</b>: <b>社会秩序的根基是什么？人类行为的根基是什么？</b>经济学作为社会科学，是否也要思考，<b>经济社会秩序的根基和机制是什么？人们经济行为根基是什么？</b></p>\n<p data-pid=\"Ws4x4J6e\">所以经济学是既涉及到实证性又涉及到规范性的问题。</p>\n<h2>2.理由与原因（Reasons versus causes）</h2>\n<p data-pid=\"sBzyqrMz\">我们在做科学解释（scientific explanation）的时候必定要涉及到理由与原因的解释，同时经济学还涉及到预测的问题，经济学家需要去做预测，比如宏观经济学的DSGE模型在考虑我们政策决定的跨期影响是什么？计量经济学运用回归分析，统计推断，识别变量与变量的依存关系，识别因果问题。这也是社会学常在定量分析中所做的事情。就像科学解释的经典模型Deductive-Nomological (<i>DN</i>) model所说，每个经济学派在构建解释的时候是如何解释项中普遍成立的定律，我们是否能称之为经济规律。探讨经济学现象产生的背后的机制又是什么？</p>\n<p data-pid=\"CGxWjXZA\">经济学家通常关心的是个人选择的总体结果，也有个人的行为，理论上提供了个人选择的因果解释和他们选择的原因，系统建模一个人在做选择时候的：理由、动机、解释。</p>\n<p data-pid=\"EhRgYrbG\">偏好的本质是什么？偏好和欲望什么关系？偏好是否影响了选择？什么是偏好关系？什么是显示偏好公理？应该依据什么建模人的选择结构？人的某些信念是否影响和经济现象（流动偏好根源是什么）</p>\n<p data-pid=\"dLd8KLbD\">关于agent偏好是否叠加的问题，在传统经济学教育中根据经典帕累托最优原则，个人偏好的aggregation就是社会偏好。也就是整体主义和个人主义不矛盾。  这种总效用效用计算问题，我觉得和经典utilitarianism是一样的。当然我仅指aggregate原则，前者更强调不使得任何一个变坏，后者更强调敢于牺牲小我。</p>\n<p data-pid=\"-LKkztDJ\">Kahneman认为：行为人的行动受到直觉和推理两个系统的影响。人眼界有限，个人仅仅由狭隘的自我关注所驱动。人的认知能力有限，以及决策喜欢依赖直觉。Expected Utility Theory中von Neumann-Morgenstern utility function失去保序性。 </p>\n<p data-pid=\"-F3tFa8k\">许多哲学家质疑人类行为的解释是否可以作因果解释(von Wright 1971, Winch 1958)。Donald Davidson在他的作品\"Actions, Reasons, and Causes,\" 中提出的概念，比如一个行为A，它由一个本源理由-primary reason所解释，而这个理由包括了行动者对于特定行为基于一个目标G 的pro-attitude以及一个instrumental belief 做出行为A可以达到目标G。</p>\n<h2>3.社会科学自然主义（Social scientific naturalism）</h2>\n<p data-pid=\"6YoEIOs8\">在所有的社会科学中，经济学与自然科学最为相似。经济理论已经公理化。</p>\n<p data-pid=\"DrF0QO8w\">可是</p>\n<p data-pid=\"kdeAYM8B\">1）自然科学和社会科学的理论和解释的结构或概念是否有根本的区别？</p>\n<p data-pid=\"pe-ZVA8D\">2）哲学家和经济学家认为，除了自然科学的预测性和解释性目标之外，社会科学的目标应该是为我们提供理解。就像马克思韦伯所说的社会科学应该“从内部”为我们提供一种理解，即我们应该能够同情代理人的反应，并找到“可以理解”的结果。社会科学的首要目标就是对个人的社会行动进行<b>解释性的理解</b>（erklärendes Verstehen）。</p>\n<p data-pid=\"k7IzkKyX\">就像新教伦理和资本主义之间的“选择亲和性”（ Wahlverwandtschaft/elective affinity，或“内在亲和性”）的关系，不是简单的因果关系。</p>\n<p data-pid=\"MJqvOSHe\">韦伯受到当时<b>新康德主义</b>的影响，认为人文科学和自然科学存在本质上的差异，因此自然科学的方法无法贯彻于社会科学领域。经济学也是如此吗？</p>\n<p data-pid=\"Lfpf8so6\">经济学应该坚持：<b>methodological individualism？methodological holism？</b></p>\n<p data-pid=\"5H-LNGXg\"><b>在社会选择中个人利益和集体利益矛盾吗？</b>经济学有经典的Kaplow-Shavell定理：<b>如果一个社会的评价标准里，除了每个人的效用之外，还包含其它东西，那么，一定存在这么一个情形——两个状况A和B，社会中每个人都认为在A这个状况下效用更高，但社会的评价标准认为B更好</b>。</p>\n<p data-pid=\"1Cdjr6aM\">见 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/1d1c9784aab4f00964215f435e479924\" data-hash=\"1d1c9784aab4f00964215f435e479924\" data-hovercard=\"p$b$1d1c9784aab4f00964215f435e479924\">@Manolo</a> 回答</p>\n<p data-pid=\"84BwYfSp\">3）由于人类选择（或自由意志）的重要性，社会现象是否太不规则，无法在法律和理论框架内加以捕捉？鉴于人类的自由意志，也许人类的行为在本质上是不可预测的。经济学家试图预测是否是徒劳？</p>\n<p data-pid=\"TrzlVnHC\">4）还原论问题（Scientific Reduction），宏观经济学是否需要微观基础，有一个最直观的感受是Philips 曲线了。计量经济学家发现失业率与通货膨胀率 之间有负的相关关系。于是政府可以似乎可以利用这种统计上的关系，通过高通货膨胀率来 压低失业率。但是一旦政府真正实行这样的政策时，它会改变居民的行为，使 Philips 曲线 不再成立。从而也就使高通胀的政策无效。实际的结果正是如此，高通胀的政策最后带来的不是低失业，而是滞胀。</p>\n<p data-pid=\"TzPW--Zn\">我们会探讨到卢卡斯批判问题、</p>\n<p data-pid=\"8isJz5sR\">“The Philosophy of Economics: An Anthology”中的一个章节“What Macroeconomics Needs Microfoundations”中的，我看陈老师 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/efdd5ebd2eafbbe8570f81078908cc34\" data-hash=\"efdd5ebd2eafbbe8570f81078908cc34\" data-hovercard=\"p$b$efdd5ebd2eafbbe8570f81078908cc34\">@陈茁</a> 推荐过。</p>\n<p data-pid=\"fBu5I9pe\">为什么宏观经济学强调微观基础？ - chen Victory的回答 - 知乎 <a href=\"https://www.zhihu.com/question/40095872/answer/84861536\" class=\"internal\"><span class=\"invisible\">https://www.</span><span class=\"visible\">zhihu.com/question/4009</span><span class=\"invisible\">5872/answer/84861536</span><span class=\"ellipsis\"></span></a></p>\n<h2>4.抽象化，观念化与CP问题（Abstraction, idealization, and <i>ceteris paribus</i> clauses in economics）</h2>\n<p data-pid=\"2Mc_bZRg\">比如完全理性人假设，完全竞争市场假设，完全信息对称，商品是无限可分割的。这些过于观念化抽象的理论在实证中是否真正的有解释力？</p>\n<p data-pid=\"s4_upihz\">Other schools of economics may not employ idealizations that are this extreme, but there is no way to do economics if one is not willing to simplify drastically and abstract from many complications. How much simplification, idealization, abstraction or “isolation” (Mäki 2006) is legitimate?</p>\n<p data-pid=\"0XFStDdd\">模型是事实的简化，但是现象后的系统过于复杂，过度的简化噪声和外生干扰因素的模型真的有意义吗？</p>\n<h2><b>5.因果关系与实证经济学和计量经济学（Causation in economics and econometrics）</b></h2>\n<p data-pid=\"M95CRx-g\">经济学中许多重要的原则都是因果关系。例如，需求定律认为，价格上涨将减少需求量，但这个因果又受到吉芬商品商品这样的例外干扰。计量经济学回归分析推断因果问题。</p>\n<p data-pid=\"Ymz7fDx6\">在20世纪30年代之前，经济学家们普遍愿意明确地、字面地使用因果语言，尽管有人担心，对经济变化的因果分析与对均衡状态的“比较静态”处理之间可能存在冲突。</p>\n<p data-pid=\"RsDhjSpL\">在20世纪30年代和40年代的反形而上学的知识环境中（逻辑实证主义至少），对因果关系的任何提及都变得可疑，经济学家通常假装回避因果概念。其结果是，他们不再仔细思考他们继续隐式引用的因果概念（Hausman 1983, 1990, Helm 1984, Runde 1998)。</p>\n<p data-pid=\"G71mARpl\">例如，经济学家们并没有根据价格变化对需求量的因果关系来制定需求规律，而是试图将自己局限于讨论价格和需求量之间的数学函数。而不是直接说变量之间是因果关系。</p>\n<p data-pid=\"UFm-lrh4\">kevin hoover在其《宏观经济学因果关系》（2001b）一书中提出了调查大规模因果问题的可行方法，例如货币供应量（m）的变化是导致通货膨胀率p的变化，还是适应以其他方式引起的p的变化。</p>\n<p data-pid=\"Hu2w_fu2\">一种相对安全的确定因果关系的方法是通过随机对照实验。如果实验者将受试者随机分为实验组和对照组，并且只改变一个因素，那么，除非运气不好，这两个组以某种未知的方式不同，考虑到对照组和治疗组的共同特点，结果的变化应该是由于一个因素。实际上，在数量变量的情况下，可以计算平均因果效应（Deaton 2010）。</p>\n<p data-pid=\"3aaYA08t\">计量经济学者对因果关系概念的哲学研究热重燃做出了重要贡献。见 Geweke (1982), Granger (1969, 1980), Cartwright (1989), Sims (1977), Zellner and Aigner (1988), Pearl (2000), Spirtes, Glymour and Scheines (2001).</p>\n<p data-pid=\"CqouosEW\">尤其是在处理模型内生性问题上，工具变量这个思想的发明，格外令人欣赏，这种思想非常精髓。</p>\n<p data-pid=\"d2m3_E8z\">由知识论上对于趋势律与使用其他状况不变条件的讨论我们可以进一步探究本体论的议题：理论或模型的真实性为何？广义的科学实在论 (scientific realism) 要求设定的理论存有物真的存在、科学理论提供真实的说明。但是若理论或模型中使用趋势陈述与其他状况条件，则表示没有完全包含真实世界的所有因素，与真实世界有所差距。换言之，模型将非主要因素隔绝于外，是一种与真实世界不同的孤立世界(isolation)。若理论模型或所描述的是经过简化、抽象、或理想化的孤立世界，它是否是真实的？ 大多数经济学家的看法以诺贝尔经济学奖得主傅利曼 (Milton Friedman) 的〈实证经济学方法论〉 (Friedman 1953) 为代表。该文在 1980 年代被称为是「每一位现代经济学家都曾经读过的方法论论文」，隐含地认为这篇论文的必读性。虽然现今大多数经济学者或只闻其名，或以讹传讹地引用，但该文所主张经济学作为一种实证科学 (positive science)，应忽略理论的假设的真实性，并以预测能力作为理论的判准。〈实证经济学方法论〉为许多学者接受为经济学研究方法的主流观点，其中两个最重要的论点是经济理论的实证面与理论假设的真值问题。</p>\n<p data-pid=\"NmqXhont\">　　〈实证经济学方法论〉由经济学的「规范」与「实证」面的区别谈起，重申经济分析应以事实问题为导向，不应涉及价值判断。接着他提出实证科学的「终极目标」(ultimate goal) 为「提出理论或假说以对尚未观察到的现象提出有意义的（也就是非『不证自明』的）预测。」 (p.7) 而傅利曼接着以带有逻辑实证论的观点，认为理论包含两个部分，一为无实质内涵但助于推理的「语言」，另一为关于复杂现象的实质假说 (substantive hypothesis)。「语言」的部分可作为经验事物的档案系统 (filing system) 以利分类，实质假设则代表理论证成的部分。傅利曼认为检证理论是以其预测力为准，只有事实证据可以据之判别理论之对错，与理论的接受和拒绝，也就是认为检证假说的「唯一」方式为经验与预测的比较。在此傅利曼的说法带有的意涵，但他接续以 Popper 否证论的观点表示事实从不证明假说，仅能反证假说 (pp. 8-9)。</p>\n<p data-pid=\"dloWJ3DF\">　　傅利曼主张假说的检证与其假设的真值无关，完全取决于预测能力，造就他的方法论被评论者称为相似于哲学上的「工具主义」(instrumentalism)。傅利曼认为理论中的假设可以是不真实的，甚至强烈地表示「理论越显着，其假设越不真实」(p.14)，「一假说的假设必然在描述上为假 (descriptive false)」。在此必须理解傅利曼撰写此论文的目的在于替马歇尔的部分均衡分析、完全竞争厂商假设作辩解。时值不完全竞争学说于 1950 年代兴起，欲替代被批评为不切实际、不符事实的完全竞争厂商假设，故傅利曼欲在方法论上的制高点上以攻代守地维护理性经济人、完全竞争厂商等抽象假设的合理性。他的策略与哲学家 Hans Vaihinger (1924) 的「拟似」或「彷彿」(as if) 方法论几乎相似，但更强调在理论中使用「<i>A</i> 拟似 <i>B</i>」(<i>A</i> as if <i>B</i>) 的语句以虚构的<i>B</i>取代实际的事物 <i>A</i>，忽略 <i>A </i> 是否真为 <i>B</i> 的问题，并且以理论的检证结果支持使用「<i>A</i> 拟似 <i>B</i>」语句的合理性。傅利曼提出数例，如「在高处同时释放的不同质量的物体会『彷彿』处在真空状态下同时落地」、「树木的树叶在日照较多处比较茂密『彷彿』是树叶追求阳光极大化的结果」、「职业撞球选手轻易地将球击入球带『彷彿』是他熟知物理运动定律并且计算得出击球的力道与角度」。自然在经济分析中假设人的行为彷彿是理性地追求效用极大，厂商的行为有如是完全竞争厂商，并无不妥之处。理论假设的真实性与理论的合理性无关，甚至理论假设必然为伪，不真实的假设使得理论变得简单明瞭，所以在只考量理论预测的准确性下，当理论的预测力相似时，理论越简单，其有效性越强。</p>\n<p data-pid=\"0JuJ5XQx\">　　综观傅利曼的实证经济学方法论，他主张理论为预测事实的工具，故预测能力为检定理论的标准。至于因果关係或科学说明的追求，则非实证经济学方法论的重点。对傅利曼而言，追求阳光极大化的树叶当然不是真实树叶密度现象的合理解释，遑论它是否提供因果说明。</p>\n<p data-pid=\"3E4lS7Fo\">　　傅利曼的实证经济学方法论在经济学界并非没有批评，而且自该文发表以来便有许多着名经济与哲学学者表示不同意见，特别是反对经济理论假设的不真实性的看法，认为假设虽然是抽象化和理想化，但是依然须保持某种程度的真实性，并非可以任意设置。不真实的假设与由抽象事实所得到的理想化假设有本质上的不同 (Simon 1963)，若经济学家可任意地作假设，他首先所要回答的问题是在该假设在起始时如何得到，若该假设是先验的，他是否有事实的基础，还是凭空想像。若理论的假设是虚假的，当理论的预测不正确，不符合经验资料时，要如何验证与修改理论 (Machlup, 1955; Koopmans, 1957; Klappholz &amp; Agassi, 1959; Rotwein, 1959; Nagel, 1963; Samuelson, 1963)。更甚者，科学的重点之一是在于提出因果说明，虽说学者已指出傅利曼本人的货币理论与消费理论研究中有不少因果研究 (Chao, 2003; Hoover, 2009)，故学者将他诠释为实作上的「因果实在主义者」(causal realist) (Hoover, 2009)，但实证经济学方法论既不关心因果关係，也不在乎科学说明，而且对于上述的方法论问题并没有合理的解答。</p>\n<p data-pid=\"JmSXjlw4\">　　但是值得注意的是，即便是抱持实证经济学方法论的工具主义立场，并不表示经济学家是全然的反实在论者。<a href=\"https://link.zhihu.com/?target=http%3A//mephilosophy.ccu.edu.tw/entry.php%3Fentry_name%3D%25E7%25BB%258F%25E6%25B5%258E%25E7%2590%2586%25E8%25AE%25BA%25E4%25B8%258E%25E6%25A8%25A1%25E5%259E%258B%23_ftn8\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">[8]</a> 经济哲学中的关于实在论的讨论在 1990 年代至 21 世纪初期的时期相当的热门（如 Usali Mäki 的一系列着作），但是皆体认到经济学家至少不否认经济现象与问题是真实存在的实在论立场，这似乎表示经济学家一方面为反理论实在论者（基于虚假的假设的理论是不真实的），另一方面为经济事物的实在论者（欲分析的经济现象的确存在）。不过由于经济理论与现象都是透过模型操作而为之，由模型实作来讨论经济绝佳的实在论也许更为恰当。</p>\n<p data-pid=\"xsNhK0on\">理论与模型的探讨，围绕在科学理论结构的讨论下时，在于「理论——模型——真实世界」三者之间的关係，由文献和实作观之，三者的关係并非是单向的。Morgan and Morrison (1999) 的论文集对于对物理学与经济学模型的研究极具代表性，他们并指出「理论——模型——真实世界」三者之间的关係是多元的，其中科学模型具有其自主性 (autonomy)，表现于其建构 (construction) 的方式、与表征、检证、说明、预测、建构、启发、推理等不同的作用 (functioning)、并且可从模型中学习 (learning)，表示模型并非依附于理论或真实世界，而是积极地作为探究理论与世界的推理工具。就经济模型而言，Morgan (2013) 的钜着以经济学发展史中的众多实例详细地提供经济模型的哲学意涵，说明在经济学的实作中以模型作为推理工具的多重面貌。在此我们就部分「自主模型」的的重要议题稍做讨论。</p>\n<p data-pid=\"IC44z-0w\">就理论模型而言，在哲学讨论中有两种观点。Hausman (1992) 认为模型的作用为透过模型分析去探讨理论的特徵，也就是在给定的前提假设下使用数学或逻辑运算来探究会得到何种结果。这是演绎式的「概念探索」(conceptual exploration)，这个「模型世界」表徵的是理论的经济世界， 不需要求模型与真实世界有任何连结。另一观点是 Sudgen (2000, 2009) 认为理论模型是「可信的世界」(credible world)，与真实世界适切的连结。他的模型配适的的归纳逻辑可以如下表示：若证据 <i>ei</i>  与模型 <i>M</i> 的某一因素 <i>mi</i>  相符，则我们可归纳得出 <i>M</i> 就此层面真实地表徵了真实世界，故我们可以推论至模型与现实世界具有相同的起因结构。</p>\n<p data-pid=\"NC3e7OLv\"><b>「概念探索」和「可信世界」</b>恰分别代表 Morgan (2013) 所细緻区分的两种不同层次模型探究：探究模型以了解模型世界，和探究模型以了解真实世界。问题是经济学家是活在模型世界，或是活在真实世界？若是仅专注在概念探索则迴避不了与真实世界对应的问题，但是就算是「可信的世界」是为真实世界提出说明，该学说不仅在方法上不能避免归纳法的谬误：为何模型与现象相符就可以认为理论模型为真（虽然 Sugden 使用「可信度」一词，避免本体论的真值讨论），而且不能说服实证学者为何不用资料分析便能到与经验世界配适的结果：如果理论模型是可性的世界，那么实证模型岂非是更可信的世界？要避免这些方法论的谬误，理论经济学家必须建立「表徵定理」(representation theorems) 来证明表徵是可行的 (Chao 2014)。建立表徵定理在哲学与科学实作上都已经有相当的研究，如 Suppes 早期 (Suppes, 1960, 1962, 1967)、晚期 (Suppes, 2002) 的研究与 van Fraassen (2008) 近期的哲学论述，和 Suppes 等人在心理测量学说的贡献 (Krantz et al., 1971; Suppes et al., 1989; Luce et al., 1990)。</p>\n<p data-pid=\"m7gEnDFn\">　　实证模型虽然为作为处理资料的工具，但是在模型选择 (model selection)（在众多的模型中选择最适合的模型）和模型认定 (model identification)（确定模型的结构）也会受对理论的考量影响，这些经济学者的考量混合本体论和知识论的考虑，如傅利曼的实证研究代表二十世纪初期「NBER 取向」，指私人机构美国国家经济研究局 (National Bureau of Economic Research; NBER) 学者的资料优先的计量模型化取向，不承认先验经济理论的真实性，故经济理论无助于模型选择和认定。相反的，同时期在芝加哥大学的 Cowles 委员会 (Cowles Commission，现改名为 Cowles Foundation 并为在耶鲁大学) 所赞助的计量经济研究取向明显地以两个理论为模型的基石：凯因斯主义的总体理论与瓦拉斯式的一般均衡分析 (Walrasian general equilibrium)。他们相信凯因斯理论的真实性，亦就是理论真实地描绘了实际经济世界的运作。相反地，NBER 取向所代表的经验主义观点认为Cowles 取向根据理论所建构的模型不具有经验上的支持，是不可信的。这种反真实主义的经验主义态度同时也反映在现在的主流的应用个体研究中（如第一节所提到「通常无害的计量经济学」所代表）。应用个体研究认为资料为证据，故实证研究为证据导向，由证据推论，真正符合实情的研究，特别是现在主流总体经济学者和机构所采用的 DSGE 模型因无法预测 2007-2008 所发生的全球性金融危机现象，而遭到质疑，应用个体学者甚至倡议他们的实证模型方法是屏弃不可信的先验理论资讯的「可信度革命」(credibility revolution) (Angrist &amp; Pischke, 2010)，应推广至经济学所有的领域，包含自然实验 (natural experiments) （指以非人所控制的事件当作是自然界的介入，形成类似随机控制实验的设计，以寻找因果关係的实证方法）与在田野进行的随机控制实验。但是数据不等同于证据，不同种类的开放空间实验的证据力不但与封闭实验室下的随机控制实验不同，甚至他们之间的效力也不同。但学界中有不同的拥护者，且似沦为各说各话的争论（如Imbens (2010) 与 Deaton (2010) 的辩论）。在科学研究与哲学探讨中对于证据的定义和有效性有相当多的讨论，目前经济学中尚未有像生医领域中的实证医学 (evidence-based medicine) 对于证据强度由随机对照实验到世代研究、病例对照研究、个案报告、专家意见的等级 (level of evidence) 的界定。 </p>\n<h2>6.经济学的结构与策略：范式与研究纲领（Structure and strategy of economics: paradigms and research programmes）</h2>\n<p data-pid=\"KwdbcEzf\">在Kuhn (1970) and Lakatos (1970)之后，哲学家们对统一和指导特定研究传统内的研究的更大理论结构有了更多的认识和兴趣。由于经济学中的许多理论项目或方法是系统统一的，它们提出了关于什么指导研究的问题，许多经济学家运用Kuhn  and Lakatos的方法，揭示经济学的整体结构(Baumberg 1977, Blaug 1976, de Marchi and Blaug 1991, Bronfenbrenner 1971, Coats 1969, Dillard 1978, Hands 1985b, Hausman 1992, ch. 6, Hutchison 1978, Latsis 1976, Jalladeau 1978, Kunin and Weaver 1971, Stanfield 1974, Weintraub 1985, Worland 1972)</p>\n<p data-pid=\"Eu6ERjO9\">Kuhn 的范式标准和科学共同体概念主要是针对自然科学的发展而言的。但是，如果我们把经济学看作是社会科学中的一个学科的话，可以借用库恩的范式标准和科学共同体概念来划分经济学流派。经济学中的“流派”相当于库恩所说 的“科学共同体”。当然，经济学中的流派和自然科学中的科学共同体有一点不 同，这就是，某个经济学流派的成员除了遵从共同的范式以外，还具有某种共同 的意识形态，对某种制度(社会制度和经济制度)持有基本相同的见解或立场。 例如，西方经济学中的主流派对资本主义制度或社会主义制度都持有基本一致的 信念;西方经济学中的新自由主义各流派都认为资本主义市场经济制度具有自我稳定的特性。 </p>\n<p data-pid=\"u3kXOOyO\"><b>根据Kuhn 的范式标准和科学共同体概念，可以按照“信念”、“方法论 “、假设 、接受或拒绝某个命题的“准 则 ” 的不同来划分经济学流派。</b></p>\n<p data-pid=\"8cjjUAaP\"><br>Lakatos主张用“科学研究纲领” （SRPs）作为标准来划分不同的理论体系， 评价科学的进步。 他所说的科学研究纲领实际上就是一个具有严密内在结构、 处在不断发展变化状态的理论体系。这种理论体系由一组相互联系、有内在逻辑关系的理论构成。所以，Lakatos有时候又把科学研究纲领称作“理论的星座” 。<b>   Lakatos所说的科学研究纲领由“硬核” “保护带” “反面启示法” 和“正面启示法” 这四个相互联系的部分构成。</b>或者说，<b>一个完整的或成熟的理论体系 通常有三个特征:有一个共有的“硬核”，有一组保护硬核的“保护带”和引导 理论体系不断发展完善的“启示法”。 </b><br>    所谓硬核，是指不可证伪的理论或无法加以拒绝的公理，它一般由若干个最 能反映这种理论体系特征的核心概念组成。 <br>    所谓保护带，是指一组附属性假说或假设，这些假说或假设可以通过科学研 究或经验证据来加以检验、证伪或拒绝。保护带是保卫硬核不受经验事实的反驳 或否定。保护带本身可以被修改、调整和替换。 <br>    所谓反面启示法，是指禁止人们把经验反驳的矛头指向硬核;当硬核遭到攻 击时，要尽力把攻击的矛头由硬核转向保护带，通过修改、调整和替换保护带来 保卫硬核。 <br>    所谓正面启示法，是指如何改进和发展科学研究纲领中的“可反驳”部分， 通过调整和完善保护带来发展科学研究纲领。 <br><br><b> 在微观经济学中，“最大化”(经济当事人在一组约束条件下追求自身利益最 大化)假设是一个硬核假设，相应的反面启示法就是“不要构建那些非理性行为 在其中发挥重要作用的经济理论”，相应的正面启示法就是“以市场缺陷来解释 资源配置的帕累托无效率”。 </b></p>\n<p data-pid=\"DqWzQtcM\"><b> 弗里德曼在谈到什么是宏观经济学中的芝加哥学派时说:“在讨论经济政策时，‘芝加哥’学派相信自由市场 作为一种调配资源的手段的有效性，对政府干预经济事务持怀疑态度，强调货币 数量是产生通货膨胀的一个关键因素。在讨论经济学时，‘芝加哥’学派的研究 视角是，严格地把经济理论作为一种工具来分析大量的具体问题， 而不是把它作为一种徒有其表但并无多少说服力的抽象的数理结构;坚持对理论概括进行经验检验，既反对有事实而无理论，也反对有理论而无事实。” </b><br></p>\n<p data-pid=\"PYys0OBJ\">在硬核和保护带的基础上，每一个科学研究纲领都提出自己的<b>研究主题</b>和<b>特殊的论据</b>来形成自己的<b>理论结论</b>。 <br><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-c4147ef9f9955b372406fa73309e7cce_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"752\" data-rawheight=\"830\" class=\"origin_image zh-lightbox-thumb\" width=\"752\" data-original=\"https://pic3.zhimg.com/v2-c4147ef9f9955b372406fa73309e7cce_r.jpg\"></figure><h2>\n<b>7.模型论（</b>Model Theory<b>）</b>\n</h2>\n<a href=\"https://link.zhihu.com/?target=https%3A//plato.stanford.edu/entries/model-theory/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Model Theory (Stanford Encyclopedia of Philosophy)</a><p data-pid=\"KF0WTHH_\">经济学家喜欢用“principles,” “laws,”, and “theories.”这些词语，比如“principles,” “laws,”, and “theories.”</p>\n<p data-pid=\"0boEgkM6\">经济学家更愿意把有关理性选择的公理描述为构成理性选择模型，而不是描述理性选择理论。详见MGW高级微观第一章节。计量经济学家更喜欢用模型了。</p>\n<p data-pid=\"G7MHNRE5\">许多最杰出的模型建构者将它们视为虚构的世界，他们的研究为我们了解实际现象提供了信息（Frig，2010）“创造模型就是‘创造世界’”(Morgan 2012, pp. 95, 405)在他们看来，经济学家能够通过构建模型来研究在没有干扰的情况下因果因素的运作方式——即没有干扰的虚构经济体。Dani Rodrik（2015）认为，经济学由一系列模型组成，而做经济学则是从这些模型中选择或定制一个模型。</p>\n<p data-pid=\"wmKqthsc\">在哲学上，将模型视为谓词或谓词的定义要容易理解得多（Hausman 1992）。例如，当经济学家写下一个只有一个产出和两个投入的企业模型时，他们定义了一个概念，可以用来描述实际的企业。</p>\n<p data-pid=\"z5gwo0jO\">那么我们不禁要问什么是好的模型？经济学好的模型应该具有哪些要素呢？</p>\n<p data-pid=\"gHQck2iX\">The view of models to which economists are most attracted is philosophically problematic, because it is apparently committed to the existence of fictional entities whose properties and causal propensities economists can investigate. In experiments, whether carried out in a laboratory or in the field, experimenters interact causally with flesh and blood experimental subjects, and the outcome may contradict the economist’s predictions. In investigating a model, in contrast, the economist “interacts” with fictional entities, which are arguably nothing other than his or her own thoughts, and the logical implications of the axioms that define the model are never disappointed. This is not to say that the logical investigation of models never results in surprises. Humans are not logically omniscient, and discovering the implications of a set of axioms may be an arduous task. But it is a different task than carrying out an experiment in the laboratory or the field, and ontology of the “worlds” that economists allegedly “create” and then study is deeply puzzling. </p>\n<p data-pid=\"rLepA7OR\">关于科学理论与模型主要有两种科哲观点：<b>语法观点 (the syntactic view) 与语意观点 (the semantic view)。</b>语法观点为逻辑实证论与 Karl Popper 思想影响下产物，语意观点之源流虽然可追溯至形式逻辑中模型论 (model theory)，讨论语句的结构的真值。二十世纪中期身兼行为科学家与科学哲学家等数职的 Patrick Suppes 开始首</p>\n<p data-pid=\"dgChxM9Q\">先认为数学与经验科学中的模型实具有相同的意义，故可以应用相同的方法论探讨科学模型与理论之间的关係 (Suppes 1960)，他更以身作则，以集合论的方式呈现经验科学（包含物理学、心理学、经济学）理论的形式化结构。自 1970 年代后由 Frederick Suppe、Bas van Fraassen、Ronald Giere 等学哲学家所倡议以模型为中心所建构的新观点之后才逐渐形成并为学界所接受。由于但在今日以科学实作为导向的潮流下，科学哲学的对于科学理论和模型的讨论少以理论结构的形式为重点，而由实际上理论与模型在科学研究应用发掘哲学议题。简言之，在科学实作中模型扮演独立亦积极的多元角色，当代模型论者认为模型是独立的「行动体」(autonomous agent)，其在建构之始便非依附于理论 (如理论模型) 或经验资料 (如经验模型)。模型也是一种媒介 (mediator) 工具，不仅是理论与真实世界的媒介工具，而且在科学研究过程中融合各种研究活动，使研究者可以从建模的过程中得到科学知识，强调模型自有的知识力，故传统的科哲中围绕在科学理论的讨论，如与发现与证成的脉络 (contexts of discovery and justification) 的相关议题，皆需在基于科学实作的基础上重新检视模型在其中所扮演的角色 (Morgan &amp; Morrison, 1999; Chao &amp; Reiss 2017)。</p>\n<p data-pid=\"NYEiGqMD\">　　二十世纪早期维也纳学圈代表的逻辑实证论，认为理论有着严谨的逻辑演绎结构，与具有语言结构的「语法物」(syntactic object)，故其学说又称为语法观点。在逻辑实证论的观点下，理论由一组语句所构成，这组语句包含了由指涉理论存在物的「理论词汇」(theoretical vocabularies) 所构成的「理论语句」(theoretical sentences) 而制作的理论陈述 (theoretical statements)，代表数学和逻辑所组成的为先验的知识和分析性的真理 (analytical truth)。与由经验面相对应的观察词汇与语句构成的观察陈述 (observational statements)，代表事实的、综合的真理 (factual and synthetic truth)。理论陈述与观察陈述以「对应原则」(correspondence rules) 连结，并以观察陈述给予理论陈述解释 (interpretation)。<a href=\"https://link.zhihu.com/?target=http%3A//mephilosophy.ccu.edu.tw/entry.php%3Fentry_name%3D%25E7%25BB%258F%25E6%25B5%258E%25E7%2590%2586%25E8%25AE%25BA%25E4%25B8%258E%25E6%25A8%25A1%25E5%259E%258B%23_ftn5\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">[5]</a>二次大战后英美科哲界的逻辑经验论 (logical empiricism) 继承逻辑实证论的传统，不尽强调理论与经验的全然区分，方法论上也由注重归纳法转向至「假设—演绎」 (hypothetico-deductive) 法，与「演绎—规律」(deductive-nomological) 或涵盖律 (covering laws) 的科学说明模式 (Hempel and Oppenheim 1948)，在其中全称式的科学律则在理论的组成，与理论的说明功能中皆扮演相当重要的角色。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-341b7d5a3f27faed7a11d72b14229f31_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"614\" data-rawheight=\"294\" class=\"origin_image zh-lightbox-thumb\" width=\"614\" data-original=\"https://pic2.zhimg.com/v2-341b7d5a3f27faed7a11d72b14229f31_r.jpg\"></figure><p data-pid=\"_EZcNC-S\">其中 <i>L</i>i 代表普遍律则，<i>C</i>i 代表先行条件的叙述，两者组成说明项 (explanans)。<i>E</i> 表示被说明的经验现象之描述，也就是被说明项 (explanandum)。举例而言，若今欲说明某厂商提高产品价格之行为，我们首先找出适用的经济律则「在其他状况不变下，边际成本增加会使得独佔厂商其高价格」(<i>L</i>1)，并列举各项先行条件，包含「在其他状况不变下」(<i>C</i>1)「此厂商为独佔厂商」(<i>C</i>2)，「该厂商的边际成本增加」(<i>C</i>3)，最后演绎得出实际上该厂商在边际成本增加时会提高价格的说明 (Hands 2001 p. 86)。</p>\n<p data-pid=\"uzXYFaXP\">　　同时，演绎—规律说明模式隐含「对称论题」(symmetry thesis)，认为说明与预测这是以同样的演绎模式进行，其实是相同的科学活动，不同者仅为说明为事后，预测为事前。故当理论为事实所证实时，同理可以推论出未来事物也会依着相同的科学律则而发生。</p>\n<p data-pid=\"okoSh5fK\">　　在这种「律则先行」的原则之下，语法观点认为理论是科学的重心，提出严谨的语法结构，模型为满足理论的语法结构的实体，一个模型是理论结构中的一则对应原则，或至多代表一组对应原则。各个模型仅为语法结构一项解释 (interpretation)，故模型仅被视为理论的附属物，故不可能自外于理论本身。二十世纪前半叶的科哲学者受逻辑实证论与经验论的影响，多抱持这种模型附属在理论之下的观点，如 Richard Braithwaite (1953)、Ernest Nagel (1961)，甚至提出模型作为类比的 Norman Campbell (1920) 与将其发扬的 Mary Hesse (1966) 虽然在他们的学说中强调模型的重要性，但是模型与理论仍然有强烈的依存关係。</p>\n<p data-pid=\"U8mUb-Wn\">　　自 1950 至 60 年代起逻辑实证论的学说受到不同面向的挑战，其中主要的问题之一为理论与观察陈述的区分。逻辑实证论的理论结构学说建立在理论与观察（经验）陈述间绝对的区分，但是学者质疑理论与观察的独立性，并指出实际上两者可以是互相依附 (ladenness)。同时，语法观点下的科学理论由「定律式陈述」(lawlike statements) 所组成，表示定律为科学理论的主要因素。但是随着对于特殊科学 (special sciences) 的哲学研究的兴起，学者反思科学定律的角色，而将重心转向至科学实作中更常见、更常用的研究工具，如科学模型。</p>\n<p data-pid=\"G2OaSN4D\">语意观点则由不同的角度探讨理论的结构，一般而言语意观点学者借用数学中的「模型」与「结构」的概念将科学理论表示为集合论物件 (set-theoretical entities)，也就是将理论表示为包含相关元素与关係等成员的数学物件，但是语意观点放弃语法观点的语言结构，与其中律则演绎法，改以提供明确的理论组成的方式表现其结构，并据之提供公理化的基础，故其要旨不在于语法结构中的「律则」与「演绎」的规则，而在于结构的「满足」与「实现」。简言之，一理论可表示为:</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-528d7b708466a6e809cfd219c84e783c_b.png\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"586\" data-rawheight=\"78\" class=\"origin_image zh-lightbox-thumb\" width=\"586\" data-original=\"https://pic1.zhimg.com/v2-528d7b708466a6e809cfd219c84e783c_r.jpg\"></figure><p data-pid=\"e48Oii4C\">其中<i>x</i>i为理论变数，<i>r</i>i为理论变数间的关係，接下来提供一组必须符合的理论公理，这两者构成理论的「表征定理」(representation theorem)，符合表徵定理的物件则可以被视为理论的一个模型，一方面此模型具有理论的结构，我们称此模型为理论的表徵，或说模型呈现 (represent) 理论，与模型是理论的实现 (realization) 因以集合表现理论的成员与特征皆于模型中实现，故理论实由模型来理解与呈现。</p>\n<p data-pid=\"YX5OKLdd\">以经济学消费者需求的偏好理论为例，消费者对于商品的偏好行为可表示为 <i>R</i>=〈<i>x</i>,<i>y</i>,<i>r</i>〉的集合，其中 <i>x </i>与 <i>y </i>为两种商品，<i>r </i>为偏好关系。消费者遵循合乎「理性」的行为公理，一般包含完备性公理 (completeness) 指消费者能够按照他的偏好程度大小排列出可供选择的商品组合，如给定 <i>x </i>与 <i>y </i>两种商品组合，消费者的可以指出其偏好为下列三者其中之一：<i>x </i>比 <i>y </i>好、<i>y </i>比 <i>x </i>好、两者一样好。递移性公理 (transitivity) 表示消费者的偏好可以合理的传递，如消费者对 <i>x </i>的偏好大于 <i>y</i>，而对 <i>y </i>的偏好又大于 <i>z</i>，则消费者对于 <i>x </i>的偏好必然大于对 <i>z</i>，也就是不会有 <i>z </i>比 <i>x </i>好的矛盾发生。自返性公理 (reflexivity) 表示消费者会认为 <i>x </i>至少与它自己一样好。当某一模型满足所有的公理时，消费者的偏好为该模型所呈现，如一偏好函数或一组无异曲线。换言之，理论以集合与公理表示其形式结构，任何满足形式结构即可视为该理论的模型，故不但个别模型呈现理论，理论是被一组模型满足公理并具有共同结构的模型所呈现 (van Fraassen 1980, 1989; Weisberg 2007; Chao 2009)。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zjyzmysj-sleep?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">最近一直忙于睡觉</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/82175350?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"由 SE 发行的悬疑推理游戏《春逝百年抄》已上线，游戏质量如何？","date":"2022-05-20 09:15:56","description":"\n<p data-pid=\"W68SaDM5\">最初是在任天堂直面会看到这款游戏，虽然最近几年我对所谓悬疑推理游戏的信心丧失殆尽：高价位高时间损耗，却不能获得等价的解谜快感，但其高调用“新本格”宣传的方式还是吸引了我。更有甚者开发组在采访中要成为新本格的旗手<a href=\"https://zhuanlan.zhihu.com/p/469196391\" class=\"internal\">《春逝百年抄》开发团队访谈：高举「新本格」大旗的真人实拍推理作品</a>。</p>\n<p data-pid=\"E4ed7nFE\">不过吸引我的不是作为推理小说的读者看到新本格就起了什么奇怪的反应。而是我觉得把新本格作为本作的宣传重点，难称妙手，因为时至今日已经有相当多的读者们（包含影视剧观众、电子游戏玩家）认为新本格推理就是怪力乱神、胡说八道。（至少新本格运动起步时，读者们只会把标签限定在叙述性诡计和“馆”系。）这一方面说明很多读者无法接受设定系推理，另一方面也是新本格日趋极端的证明。</p>\n<p data-pid=\"9jD9_6GK\">事实上，新本格和本格究竟是什么，其实很简单：</p>\n<p data-pid=\"_eoKKmSQ\">所谓本格就是欧美黄金时代的解谜推理，唯一的重点就是“公平竞争”，后世你看到的再怪力乱神、胡说八道的东西其实在那个时代都能找到源头。（比如你能在泡坂妻夫小说里看到陨石砸人的“凶杀”，这甚至还不是诡计，然而黄金时代甚至黄金时代之前的推理小说就已经有至少三个作者把陨石砸人作为不可能犯罪诡计使用。）</p>\n<p data-pid=\"1wHi8ctU\">所谓新本格其实是时代划分而不是风格或者内容的界定概念。但是如果从风格和内容的界定去解释也可以，新本格其实是日本当时回溯欧美黄金时代解谜推理的一场运动，本质还是解谜推理。所以风格和内容的界定也就没有了必要，我用新本格这个词都是指时代划分，1987年开始的日本推理回溯解谜推理的时期罢了。</p>\n<p data-pid=\"f1HIf4KJ\">即：新本格=本格=解谜推理（与读者进行公平竞争的解谜推理的游戏）（关于为什么称之为游戏可参考约翰·狄克森·卡尔的文章《世界上最伟大的游戏》）</p>\n<p><br></p>\n<p data-pid=\"kE8VS_UN\">那么，废话说完了，就以上述观点和具体的游玩感受，来看看本作是否在公平竞争？是否是有趣的解谜推理？是否是一款好游戏？</p>\n<p><br></p>\n<p data-pid=\"3lXz6_-p\">《春逝百年抄》所有案件都是较为正常的谋杀案，没有涉及密室和不可能犯罪的部分，其实从游戏年表就能略窥一二，年表中欧美推理的部分，三大家只提了阿加莎·克里斯蒂和埃勒里·奎因两位的作品，对擅长不可能犯罪的约翰·狄克森·卡尔未曾提到过。</p>\n<p data-pid=\"CLHT1WQ2\">不过，游戏里一直在渲染某种怪力乱神的元素是真实存在的氛围，但最后的做法不同于设定系推理（在科幻、奇幻或其他幻想世界观下事先告知读者世界的规则并利用这些规则的推理作品）的一般形式，可能正是由于本作对这个元素模棱两可、不置可否的态度。</p>\n<p data-pid=\"fo7fv7-U\">在说到案件前，有必要批评本作的游戏系统，真要说的话，制作组是有设计一个好的推理游戏系统的想法的，这种努力尝试你可以从这里的<a href=\"http://link.zhihu.com/?target=https%3A//bbs.saraba1st.com/2b/thread-2069698-1-1.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">34楼</a>得到详细的解析，但是字小、操作繁琐、假设过多让人烦躁等一系列缺陷让这种努力付诸东流，更有甚者，简单的案子用不着这堆假设的部分，能提供线索的案子又始终不提最重要的假设，让人迷惑的案子假设部分完成依然迷惑。用Switch右摇杆作为鼠标拖拽上百次（没具体数），真的有趣么，我是睡过去两次。</p>\n<p data-pid=\"ODZowf5V\">再说剧情结构，这点还不错，把现实案件、杂志文章、未发表手稿结合到一起，如果没有烦躁的假设部分，想必是一场愉快的剧情切换过程。而玩到后面时会发现这个剧情切换的过程还真的隐藏着诡计。</p>\n<p data-pid=\"Bp_9hPPD\">从第一章到第五章每章都有谋杀案件出现，第五章还有密室逃脱的部分，虽然我是不太感冒...但要说真正让玩家参与进来的解谜，比起对照花纹拖拽拼图的机械操作，这个密室逃脱部分可能还好得多。</p>\n<p data-pid=\"MaSYm1g-\">烂不是最大的敌人，平庸才是，烂出特点反而也会有趣。五章里三章的案子平庸到无聊也是很难得了。</p>\n<p data-pid=\"QYHIBcYb\">第一章，简单至极的案件，没什么可说的。</p>\n<p data-pid=\"jEEbowh5\">第二章，只看第二章的话，诡计过于用力过猛，让人不禁头上打问号，就算第六章的解释，所谓为了看起来不是XX犯罪这个点也是应该在第二章就拿出来的东西，根本不是能解释得了谋杀现场的说法，不够分量。还好第七章，虽然剧情过于狗血，但总算让这里的解释说的过去了。</p>\n<p data-pid=\"_MPqkpfj\">玩到这，会发现一点，就是排除其他人的理由只有在你选错的时候才会告诉你，如果你一路选对，一马平川，那么你反而会觉得有其他的可能性，而那些可能性根本就否定不了。这就是线索的后置，在解答部分给新线索，基本上100年前的推理小说大多都不会这么干了。</p>\n<p data-pid=\"VpN8zudB\">第三章，我以为会对两个MKF进行一番短小的“逻辑流”类的推理过程，然而...不过从单个案件的角度看的话，本案已经是几章中最好的了。而且本案和其他章节的案件联系不是那么紧密，营造的情感却最突出。侦探如水最后的话语是我在本作看到的第一个亮点。虽然也是伪解答。但比起终章的真解答我更喜欢这里的解释。</p>\n<p data-pid=\"QWhOL-Ic\">第四章，只看案件也没什么可说的。</p>\n<p data-pid=\"Q7Tm8iua\">第五章，对接下来的解答进行伏线埋设的工具章。</p>\n<p data-pid=\"0W2fQ88P\">第六章，涉及谜底的部分就不说了，想看泄底讨论可以点进上面提到的原贴。伏线的埋设还是不错的，作为WHO的反转而不是诡计的反转，其实那种东西本身也没法在作案诡计上做文章吧。但是会有种凶手总是在说错话、总是在露怯的感觉。不过重点是以切换剧情为基础的诡计，但是这个设计，应该大家都不会去注意，或者说根本不在意，在想法上是好的，但是实施起来很弱，我现在有点怀疑开发组真的想在那上面做文章么，毕竟和终章的那个同类诡计相比，都是后者的更清晰更详尽，大概是我自作多情了。不过我愿意相信这是种尝试，干的漂亮。</p>\n<p data-pid=\"ErVGOnA8\">终章，有几个很有趣的点。第二章用力过猛的诡计也得到了很好的解释，诡计本身作为伏线是我没有预料到的，非常有趣。而且其他伏线埋设的也很不错，虽然剧情过于狗血，但是除了最后那部分，我是接受了。重点的是另一个核心诡计在此揭露，相比前一章，这个反而是推理小说中常用的诡计，有诸多伏线支撑。</p>\n<p><br></p>\n<p data-pid=\"ngdaXHNq\">最后回答三个问题：本作是否在公平竞争？是否是有趣的解谜推理？是否是一款好游戏？</p>\n<p data-pid=\"B3uDVMDQ\">在单个案件部分确实是公平竞争，扩大来说，在作案诡计HOW上也是趋近于公平的，在整体的凶手设置上和推理规则的理解上掉下了钢丝，但是也没摔伤。不过考虑到线索的后置，在完备性上是十分欠缺的。</p>\n<p data-pid=\"G_7DWqHJ\">有几个很有趣的点。伏线量大管饱，虽然有时非常明显。剧情上的逆转多于也好于案件上的逆转。核心诡计在伏线的支撑下都表现不错，只不过一个是老梗。</p>\n<p data-pid=\"WVakVr6w\">游戏系统大部分时间让人烦躁，虽然案件部分让我满意，但很难说得上是一款好游戏。</p>\n<p><br></p>\n<p data-pid=\"nlK2L1sV\">我推荐你们购买支持，但是务必等打折，打骨折。</p>\n<p><br></p>\n<p data-pid=\"rQkPn4Lr\">最后鼓励一下吧，单个案件不评分了，实在...</p>\n<p data-pid=\"hL2jS2qB\">整体案件★★★★</p>\n<p data-pid=\"PD4MRdA-\">整体游戏★★★</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/hai-an-xian-happy?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">海岸线</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/515973950/answer/2489593379?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">27 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/530606427?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">悬疑冒险游戏《春逝百年抄》中文售前宣传片公开，你都有哪些期待？</a><br><a href=\"http://www.zhihu.com/question/532626986?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《春逝百年抄》公开游玩感想宣传片，游戏现已登陆 PS/NS/Steam 平台，对此你有哪些期待？</a><br>\n","link":"http://www.zhihu.com/question/515973950/answer/2489593379?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"创作者请回答｜没错就是我：用文字走进一场「完美谋杀」","date":"2022-05-19 13:11:44","description":"\n<p data-pid=\"pOZ_Dbrc\">在档案局里，我们曾请来过刑侦专家和法医，他们用自己的亲身经历带大家抽丝剥茧，寻找案件背后的真相。</p>\n<p data-pid=\"dANgKQ-t\">想必各位知友们都曾听说过大名鼎鼎的唐风吧！在作者 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/1a3ed751799813bd3cbca85b8ff29feb\" data-hash=\"1a3ed751799813bd3cbca85b8ff29feb\" data-hovercard=\"p$b$1a3ed751799813bd3cbca85b8ff29feb\">@没错就是我</a> 的笔下，老刑警唐风与徒弟一起，破获了多起错综复杂的案子，成为平安和正义的守护使者。</p>\n<p data-pid=\"XNjggmko\">在档案局开办的一开始，我们就邀请到了这位老刑警，给大家分享了他曾经历过的那些惊心动魄的案件，和那些现实生活里发生过的重案故事。</p>\n<p data-pid=\"WJSnwtPa\"><b>今天，局长带大家重温经典，一起听唐风背后的那个男人讲讲他自己的故事，没错就是他！</b></p>\n<h2>这个「唐风」，没错就是他</h2>\n<p data-pid=\"HFypmOs1\"><a href=\"https://www.zhihu.com/xen/market/remix/paid_column/1187437252308869120\" class=\"internal\">《完美谋杀：一位老刑警笔下的 7 个真实重案故事》</a>是答主「没错就是我」在知乎上发表的第一个盐选故事专栏，也是他本人短篇创作的开始。</p>\n<p data-pid=\"pdV38kym\">专栏故事里的两位主角——有着二十年警龄、参与破获数起重案的资深刑侦人员唐风（也是答主同时使用的笔名），和他的同事兼徒弟韩东升——通过一线刑侦人员的讲述口吻，故事呈现了 7 桩堪称「完美」的犯罪案件。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-96475a0e4e5083f0bcdd8d6a03354336_b.jpg\" data-size=\"normal\" data-rawwidth=\"1036\" data-rawheight=\"1379\" class=\"origin_image zh-lightbox-thumb\" width=\"1036\" data-original=\"https://pic3.zhimg.com/v2-96475a0e4e5083f0bcdd8d6a03354336_r.jpg\"><figcaption>《完美谋杀：一位老刑警笔下的 7 个真实重案故事》纸质书</figcaption></figure><p data-pid=\"IgXnaKhW\">这些案子要么犯罪现场是天衣无缝的密室；要么是嫌犯有无懈可击的不在场证明；要么凶手明明近在咫尺，却没有证据抓捕他……</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-d3d05584bc36126c4ec76a1ba4499cee_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1270\" data-rawheight=\"678\" class=\"origin_image zh-lightbox-thumb\" width=\"1270\" data-original=\"https://pic3.zhimg.com/v2-d3d05584bc36126c4ec76a1ba4499cee_r.jpg\"></figure><p data-pid=\"Pt29C8Y1\"><b>但最引人入胜的，还是在于这些故事背后的真实性。</b>专栏的创作并非完全虚构，它们或多或少都与答主的本职工作有关。</p>\n<p data-pid=\"BETjW3Qs\">在现实世界里，答主「没错就是我」是一名 80 后法律专业资深从业者，同时也是刑事科学技术研究人员。</p>\n<p data-pid=\"eYbSKs53\">而促使他成为一名作家的原因，也非常奇妙。</p>\n<p data-pid=\"gqo91r0Z\">当年，风靡网文界的作品《鬼吹灯》，因作者天下霸唱更新得太慢，南派三叔索性自己写出了《盗墓笔记》。</p>\n<p data-pid=\"c-jR3nvO\">而「没错就是我」开始写作的理由，则是因为南派三叔的《盗墓笔记》没填的坑太多，「等得实在太难受了，我就开始自己写了。」</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-da1bb70d1aeafe5a82baabf944557c20_b.gif\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"240\" data-rawheight=\"147\" data-thumbnail=\"https://pic1.zhimg.com/v2-da1bb70d1aeafe5a82baabf944557c20_b.jpg\" class=\"content_image\" width=\"240\"></figure><p data-pid=\"KgpK0II1\">作为一个从小看书比看电视多、将文字视为重要媒介的一代人，「没错就是我」在大学时期就开始在国内的小说期刊上发表文章，开始了自己的悬疑小说创作之旅。当时，他在天涯论坛上做连载，引发了巨大关注。2010 年，他出版了自己的第一本悬疑小说。</p>\n<p data-pid=\"RFWLpRBJ\">出书这件事，除了帮助他完善了自己对长篇文学作品的系统性策划能力，也让他结识到一批忠实且专业的读者。其中，就有如今的知乎盐选专栏制作人。</p>\n<p data-pid=\"R-RXh6Cd\">2019 年，受到知乎专栏制作人的邀请，「没错就是我」入驻知乎专栏，根据个人从业经历，创作出各类虚实相生的犯罪故事，探寻人性深处的幽微。</p>\n<h2>在知乎，书写正义</h2>\n<p data-pid=\"VIEesGNf\">除了素材并非完全虚构，《完美谋杀》在叙事手法与价值取向上有着极强的个人风格烙印——</p>\n<p data-pid=\"oVQYAz3S\">首先，即便专栏名字中带有「谋杀」二字，但在故事里，作者都刻意回避了对作案手法和血腥场面的细节描写，也很少出现那些「天生的罪犯」人设，几乎都是只用两三句话一笔带过，简单陈述某人被害的事实以及大概的作案过程。<b>他无意用这些猎奇的内容来抓人眼球。</b></p>\n<p data-pid=\"CtHbvL7B\">「这不存在什么保不保密的问题」，「没错就是我」说，「很多作案手法在网上、电视上都能看得到，我只是不爱写这种强烈感官刺激的东西，我更侧重在一个人物是否可以让你共情上。」</p>\n<p data-pid=\"4tRbyKXP\">不少同题材的创作者容易陷入对作案逻辑的过度挖掘，强行追求高能反转。这一点，「没错就是我」也不赞同，「现实中不是所有的犯罪都是遵循完善逻辑的，充满随机性，才是犯罪动机的常态。」</p>\n<p data-pid=\"kJTjMJ3d\"><b>从业十几年，他深知，好人与坏人的身份并非是恒定的，而是更取决于语境。</b>这成为他摒弃非黑即白的设定，尽力塑造复杂角色的理由。</p>\n<p data-pid=\"eiCJm9L4\">其次，高能的一线刑侦工作现场，让他笔下的故事本身就呈现着奇观。但答主没有仅仅停留重现奇观上，而是往前又走了一步，给出价值观的引导——即每个短篇的结尾，借由主人公「唐风」之口，抒发带有作者看法的朴素价值观。</p>\n<p data-pid=\"1nWYvEQh\"><i>在</i><a href=\"https://www.zhihu.com/market/paid_column/1187437252308869120/section/1202190914464321536\" class=\"internal\">《犯罪嫌疑人三年前就死了》</a><i>这篇故事的结尾，「唐风」对策划谋杀自己父亲的凶手马力说：「仇恨这团烈火一旦燃烧起来，要么催人奋进，要么就会反噬其身。而这团火，与其用来和恨的人同归于尽，倒不如用来照亮你的未来。」</i></p>\n<p data-pid=\"wjQ4_Tpw\"><i>在《</i><a href=\"https://www.zhihu.com/market/paid_column/1187437252308869120/section/1196079085502296064\" class=\"internal\">出租房里凭空出现的尸体</a><i>》的结尾，「唐风」宽慰由于复杂案情而对人性失望的徒弟韩东升不必灰心：「风再大，也吹不走太阳。」</i></p>\n<p data-pid=\"_Nvhmdrv\">这样的处理与他的写作目的直接相关。「没错就是我」在知乎上的简介是「书写正义」，这不是一种只靠主观祈求就能实现的愿望，更需要有所行动。</p>\n<p data-pid=\"sNDU_Yui\">具体到一个作者身上，「没错就是我」的选择是把这种价值观写进作品。这并非刻意为之，带有价值观的写作一向难以伪装，用他自己的话来说，「文字就是指纹。警察、法官、检察官，这些工作面对的都是社会的阴暗面，只有这种从心底就认可这种很朴素的价值观的人，才能在这个岗位上守纪守法地坚持下去。」</p>\n<p data-pid=\"mt733Fqb\">这些故事字里行间透露出的乐观和对正能量的向往与推崇，是早已融入他的骨血、会下意识流露出来的愿望。</p>\n<p data-pid=\"UNVuo_3J\">除此以外，「没错就是我」的盐选作品也从文字开始「立体化」。2021年年末，由《完美谋杀》专栏改编的剧集《第四审讯室》在视频平台上线，在后疫情时代，师徒二人的刑侦之旅仿佛一剂强心剂，为更多人注入「正义」的力量。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-b5d4c249849de9d4cefe6ee727582279_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"450\" data-rawheight=\"620\" class=\"origin_image zh-lightbox-thumb\" width=\"450\" data-original=\"https://pic2.zhimg.com/v2-b5d4c249849de9d4cefe6ee727582279_r.jpg\"></figure><p data-pid=\"G4gwFP1v\">而在今年，《完美谋杀》的纸质版《锋芒—唐风探案笔记》也已经出版上市。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-bb50b3f15d5654f23fff815af9012c1f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"800\" class=\"origin_image zh-lightbox-thumb\" width=\"800\" data-original=\"https://pic4.zhimg.com/v2-bb50b3f15d5654f23fff815af9012c1f_r.jpg\"></figure><p data-pid=\"qmhugBPP\">他知乎写下自己的感想：「《完美谋杀》上线已经两年了。我有幸目睹它一天天攀上专栏的榜首，让人激动和欣慰。更让我高兴的是，很多读者在专栏下留言，大段大段的话，像是喷薄而出的岩浆，炽热澎湃，又理性温和。</p>\n<p data-pid=\"p7-hAeZS\">他们谈论罪恶的根源，书写自己的感悟，以及对生活的热爱、对生命的珍惜。更可贵的，他们有着对于正直的坚持和热爱。这个世界，就是因为这样的人，一步步地走向美好。」</p>\n<h2>画出「公平正义」最完美的圆</h2>\n<p data-pid=\"kzltdolL\"><b>答主认为，社会上几乎所有的进步，都是由正向力量的事情推动促成的。</b></p>\n<p data-pid=\"Iejd8SDS\">「我觉得我喜欢知乎的原因之一就是这里的读者，我确实能够感受到很多读者对公平正义的向往和想要维护它的决心，他们能在一个很复杂的社会中保持清醒的头脑和明确的是非观，他们很专业，很年轻，让人很有信心，我觉得这是国家强大的一种标志。」</p>\n<p data-pid=\"qkmr6nAF\">他的读者以90后、00后居多，这些刚刚进入社会的年轻人是社会中最朝气蓬勃的群体，他们也正值形成三观的年纪，他希望自己的写作能够带给这些人希望。</p>\n<p data-pid=\"40CFa7ax\">《完美谋杀》连载时，一位女读者留言表示自己受到鼓舞，准备毕业后去考警察。「没错就是我」在惊讶之余提醒对方慎重考虑，并提示了对方可能的风险。但下一次交谈时，女孩依然发来了自己的公安专业招生考察表格。对于一个创作者来说，自己的作品被读者看到，对读者产生影响，这个过程又通过读者的行动反馈过来，这让他由衷感动。</p>\n<p data-pid=\"F--eU4qE\">现实与作品仿佛也在此刻形成了互文。「唐风」作为谋杀宇宙的绝对中心，一直以来都是作者笔下的重点。设定中，这已经是一个极为稳定、完善的警官。如今，「没错就是我」将更多笔墨添到唐风的徒弟韩东升身上，在新的专栏中，韩东升出现的频率越来越高，成长越来越快，成为唐风的得力帮手与挚友。<b>如同社会的进步一样，也是在这样一棒一棒的交接中完成。</b></p>\n<p data-pid=\"3dOYr-Am\">「没错就是我」欣赏罗翔。他认为，对一个法律工作者、法学工作者来说，现实工作和人性温度不好兼顾，这世界上很多高度理智的人都少了一点人文关怀，但他欣赏罗翔互动时流露出的关照感。同时他最欣赏的作家是余华，因为「他的文字幽默、简单，但你就是能够读出一种悲怆来。」</p>\n<p data-pid=\"fNtUufai\">十几年的从业经历，他见证着瑰丽复杂的人性。在采访中我们问答主，对这个世界的年轻人有什么嘱咐，他郑重表达——</p>\n<p data-pid=\"c_306SIZ\">「这个世界很残酷，但是也很美好，做人要善良，但是也要时刻保持警惕，对生活保持一种谨慎的乐观，才能走得更加稳健。<b>如果可能，做一个好人，如果有足够的定力和意志，做一个正直的人。</b>某种程度上，做一个正直的人比做一个好人更难，因为后者只需要做好自己，前者则要影响别人。这个世界的美好就是由每一个好人和正直的人铸就起来的。」</p>\n<p data-pid=\"ZG_a7Z8F\">跟唐风背后的塑造者聊完，我们深切体会到和平安宁的来之不易。想到那一句话，<b>「岁月静好，那是因为有人替我们负重前行。」</b></p>\n<p data-pid=\"n-smjP6K\">最后，如果你是重度悬疑故事爱好者，想围观刑警们的办案过程，想了解那些离奇案件背后的真相，就看它！局长先走一步，三刷去了～</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-0602f67b991df9bbc55aff94bb7cfa24_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"552\" data-rawheight=\"394\" class=\"origin_image zh-lightbox-thumb\" width=\"552\" data-original=\"https://pic1.zhimg.com/v2-0602f67b991df9bbc55aff94bb7cfa24_r.jpg\"></figure><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/gu-shi-dang-an-ju-71?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">故事档案局</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/516827572?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"风投公司 a16z 宣布设立第一支 6 亿美元的游戏基金，致力于打造游戏行业的未来，如何解读这一行为？","date":"2022-05-19 09:09:51","description":"\n<p data-pid=\"36hhv03d\">1.先说结论</p>\n<p data-pid=\"t5-qvhUf\">对游戏行业来说是好事。</p>\n<p data-pid=\"UrRfCFuE\">a16z算是硅谷相当主流的风投基金（最主要的案子像是facebook，instagram和airbnb），成立6个亿美元的大额游戏专项基金，对游戏行业的整体风向是非常利好的。</p>\n<p data-pid=\"cbSEcMQF\">尽管今年早些时候griffin和makers分别都宣布募了7.5亿和5亿美元新基金，但他们本身就是相对垂直的基金，griffin全称就叫griffin gaming partners，makers没说自己只投游戏也基本是投互动娱乐相关的内容和技术领域。</p>\n<p data-pid=\"rbDIv9ak\">另一个点在于，a16z在普遍善于叙事的机构里，也算是一个独树一帜会造风造势的大基金。例如20年鼓吹metaverse，然后投了roblox爆赚；21年鼓吹web3、和twitter创始人口水战，然后宣布要募一支45亿美元的资金投加密资产（实际上是35亿+10亿2支）。讲难听点，那些科技媒体、商业媒体不都是跟在后面拾人牙慧，捡他们的输出去进一步炒作吗？</p>\n<p data-pid=\"iuBSpyY9\">不讨论价值取向，如果他们继续“鼓吹”游戏，这的确是快速普及推广游戏概念或正面形象的一种方式。并且游戏拥有的基本面价值，不会像纯概念在泡沫破裂后一地鸡毛，即使有一定回调，总体趋势还是螺旋上升的。</p>\n<p data-pid=\"KSAgfJEq\">而微软、索尼、embracer group等等还在一刻不停地跑马圈地收工作室，二级市场的并购案从zynga到动视暴雪屡创新高，接盘侠永存的故事（起码近几年）就可以持续地圆下去。</p>\n<p data-pid=\"B7HuuVDG\">2.挂羊头卖狗肉？</p>\n<p data-pid=\"aPDYljgM\">早些时候一些群里讨论，有朋友提到警惕a16z这是5月份币圈大跌以后crypto fund搞不动了，换了个马甲继续去投web3和gamefi。</p>\n<p data-pid=\"j6zKM_Ht\">我倒比较乐观，他们这支基金大概率还是搞正经游戏相关的项目，小部分会投web3。</p>\n<p data-pid=\"7K70kKjs\">首先，从a16z自己的官方介绍可以看到，他们的投资方向是</p>\n<ul>\n<li data-pid=\"ShHotAA5\">研发工作室</li>\n<li data-pid=\"nqXtGkn4\">社区、平台，类似discord</li>\n<li data-pid=\"Xj50MF_Z\">基建技术、工具</li>\n</ul>\n<p><img src=\"https://pic2.zhimg.com/v2-09002599d0d0e856745d7d8c2ed9f6b1_720w.jpg?source=b1748391?rss\" data-caption=\"https://a16z.com/games/\" data-size=\"normal\" data-rawwidth=\"945\" data-rawheight=\"357\" data-watermark=\"original\" data-original-src=\"v2-09002599d0d0e856745d7d8c2ed9f6b1\" data-watermark-src=\"v2-89dd016a1a32e7497f766f3bc49286d8\" data-private-watermark-src=\"v2-231a92dddc4c48eee5345a5211d75a40\"></p>\n<p data-pid=\"KclJqvEE\">区块链和代币经济（tokenomics）本身是一种技术和商业化手段，如果可以结合，没有理由不投。</p>\n<p data-pid=\"qtjCfEYq\">griffin的创始合伙人Nick Tuosto也曾说他们基金对“游戏”的定义其实是广义的，如果区块链和web3相关的项目可以更有利于游戏的制作和商业化，更应该投：</p>\n<blockquote data-pid=\"9XtDyOER\">the fund’s definition of “gaming” is broad, including content creators, platforms that bolster key components of gaming such as communications and social aspects, and infrastructural tools that help developers create and monetize games, <b>especially with new blockchain and Web3-related titles</b>.</blockquote>\n<p data-pid=\"AcEuP887\">其次，虽然币圈经历了大跌，进入熊市，a16z的45亿美元基金也不知道啥进展，但其实在21年，他们就已经又募了22亿美元的crypto fund III（已经3期了）。</p>\n<p data-pid=\"M5q5W9WZ\">加上他们的portfolio基本上包场级别的，公链（solana）、DeFi（uniswap）、NFT交易所（opensea）、媒体工具（mirror）、大IP（yuga labs，即无聊猿）啥都有......回报已经逆天了，募单独的加密基金应该不成问题。</p>\n<p data-pid=\"eR92uYl2\">最后，a16z一贯是人海战术，每个领域和团队其实切得比较开，而官网上crypto和games已经被划成了2个不同的基金投资领域，也分别由不同的合伙人带队。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-e074b4dd133634f4e50c750e30604172_720w.jpg?source=b1748391?rss\" data-caption=\"这是游戏团队\" data-size=\"normal\" data-rawwidth=\"1213\" data-rawheight=\"610\" data-watermark=\"original\" data-original-src=\"v2-e074b4dd133634f4e50c750e30604172\" data-watermark-src=\"v2-329af21c9baf00cb7c7b4a5d5c9127b7\" data-private-watermark-src=\"v2-a7ae204e59ff0d5206ab85b20e1289f1\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-e856ffa2f06d93f537c77f402fa14291_720w.jpg?source=b1748391?rss\" data-caption=\"这是crypto团队，下面还有2屏人，比游戏团队要大得多\" data-size=\"normal\" data-rawwidth=\"1241\" data-rawheight=\"946\" data-watermark=\"original\" data-original-src=\"v2-e856ffa2f06d93f537c77f402fa14291\" data-watermark-src=\"v2-9ec754eb147473274b8579b17ac1f7f7\" data-private-watermark-src=\"v2-43b9d145fef0df3dd82e9245c4f755ad\"></p>\n<p data-pid=\"1qFmjuaT\">3.来点八卦</p>\n<p data-pid=\"pZ_4Vo3r\">说到团队，最后就得讲讲人。</p>\n<p data-pid=\"b2GZs2qZ\">为什么a16z这样主流的风投机构，今天要设第一支游戏基金？我个人的感受其实有点体现了事在人为。</p>\n<p data-pid=\"ad4mDHSN\">a16z过去不是没投过游戏，只是不系统，没有单独成为一个专精领域。而在这样的大机构，试图开辟新的投资战场，显然不是一件拍脑袋的容易事情。</p>\n<p data-pid=\"yCwCBxwP\">从截图可以看到，现在游戏团队的3个带头大哥，即高级合伙人，分别是Andrew Chen，Jonathan Lai，和James Gwertzman。我们一个一个讲。</p>\n<p data-pid=\"eIAL1w5q\">Chen最早，18年进到a16z做合伙人，此前的主要经历是创业和uber，对互联网、消费、增长比较擅长，但没有游戏经历（但好像是资深玩家，我忘了好像看过哪篇文章讲），所以本来只是看消费。</p>\n<p data-pid=\"fIH-n7su\">所以chen应该是第一个想系统性投游戏的合伙人，但限于自己的专业性，只能借力外部人才，于是19年拉来了Lai作为游戏方向的合伙人。</p>\n<p data-pid=\"foY80oJ_\">Lai的履历更光鲜，一路哈佛、大摩、拳头、腾讯，一个非常典型的游戏和商业复合背景的高级人才，彼时应该正对a16z需求。而且他也的确善于叙事，今天a16z关于游戏的绝大部分文章应该出自他手，而如果我没记错，要论metaverse的早期vc布道者，makers的matthew ball排第一，应该就是janoathan lai第二了。当然，槽点不是没有，这老哥从腾讯走的时候高调PR自己是高管（executive），主管北美发行和投资，还天天讲epic之类的重要案子是他主导的......实际上只是高级总监（senior director），在腾讯内只能算是基层干部天花板。并且鹅大部分中干（GM）是从总监（director）这个位置直接上到助总（Assistant GM）的，SD基本就意味着只提待遇不提title了，所以这个executive emmm......</p>\n<p data-pid=\"jtUCTDvJ\">G最晚，21年底才加入a16z，但他是真正的“业内人士”。他的20年职业经历大概是，微软打工，创业，被并购，再被EA并购，二次创业（playfab），被微软并购，在微软干了3年GM（不算高管也算中干了吧，百年刀年薪级别）。并且是程序出身，二次创业和最后在微软也是负责云平台相关，是真正的游戏人、技术专家、连续（成功）创业者。</p>\n<p data-pid=\"FLhcxX7x\">至此，拼图彻底完整了。机构内部的发起者，找来行业的连接者与推手，再拉进有成功创业经验的技术大咖，过程中还投出一些可以大吹特吹的案子（roblox），专门的游戏基金设立，也就水到渠成了。</p>\n<p data-pid=\"lGEze5ld\">很多时候，大家过度拟人化或者脸谱化一个企业或机构了，其实只是一些人或者团队想做事，在一步步铺垫下，最后就做了。不是一个企业多么伟大或者邪恶，最后还得是落到“人”上。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/denzel-xu?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Denzel</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/533526443/answer/2492571900?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">3 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/533524292?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何看待a16z设立第一支6亿美元的游戏基金Games Fund One？</a><br><a href=\"http://www.zhihu.com/question/523636743?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">数据初创公司「Hex」完成 5200 万美元 B 轮融资，该公司未来发展前景如何？</a><br>\n","link":"http://www.zhihu.com/question/533526443/answer/2492571900?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"招商证券首席策略在朋友圈表示「现在就是底！」，目前A股已经触底了吗？","date":"2022-05-19 05:25:59","description":"\n<p data-pid=\"pfw_P4wI\">首先声明，我的屁股是偏的。</p>\n<p data-pid=\"lu26lbBW\">每年新财富投票，策略这个行业，我都会投张夏第一。</p>\n<p data-pid=\"nxxG3rkI\">他的每场电话会，只要时间排的开，我都会参加。</p>\n<p data-pid=\"Q7mi42xO\">散户同志们可能对以机构投资者为服务对象的卖方研究行业不了解。</p>\n<p data-pid=\"1mSCz_A_\">在证券市场，卖方研究一般提供交易思路和标的分析，买方机构做投资判断。卖方策略研究员明确改变观点，转向看多或者明确看空都是很罕见的。大多数卖方研究员采用的生存策略是持续看多或者持续看空，利用幸存者偏误，总会对一次嘛。万一有一次全市场只有我一个人看多（空），逻辑还对了，那就牛逼大发了。还有一种生存策略较马后炮。策略管策略写，把想法和逻辑写出来，结论尽量模糊一些，事后做诸葛亮。标志性用语是“正如我们所料”。这种研究员占大多数，毕竟后验特别容易。但是他们也有他们存在的价值，毕竟他们讲了一个事物演化的逻辑，故事讲好了，也可以赚钱。有一种圈外的卖方研究员，叫李大霄。散户朋友们会比较熟悉，但是机构圈内没有人关注。他主要的流量靠散户，类似网红。对错不重要，关键是曝光度。</p>\n<p data-pid=\"VkKlDOmf\">买方干什么呢？首先分辨这个研究员是哪一类的。如果是李大霄类的，那就当盘后的笑话聊一聊。如果是马后炮类的，就略过结论看逻辑；如果是死多或死空，那就顺风的时候略过，等套牢的时候找心里安慰或者坚定信念。</p>\n<p data-pid=\"kl1eQKur\">真的是千年才能找到一个观点清晰，逻辑通顺，方向明确的卖方研究员啊。他其实替买方把活干了。</p>\n<p data-pid=\"hDNq6ES7\">回到正题，他这么说是有道理的。</p>\n<p><br></p>\n<p data-pid=\"STQEq39g\">站在2021年底，A股面临的是什么问题？估值贵。</p>\n<p data-pid=\"QpxHyQcS\">站在2022年4月底，宁王跌了多少？宁王的小伙伴们跌了多少？茅跌了多少？客观说，估值已经消化得差不多了。现在市场上满是一把把25倍的消费股，20倍的成长股，5倍的周期股。</p>\n<p data-pid=\"NmZ0c08K\">现在市场在担忧什么？</p>\n<p data-pid=\"NH1kdTvD\">封城永续扩大化，供应链中断，房地产持续下滑，居民收入下滑，一季报低于预期，美联储加息，外资撤出。这些悲观的情景市场是否预期到吗？全都预期到了。上海占了全国一半的机构投资者。全国一半的基金经理在家或者公司被持续关了1个月。若是看盘没抢上团购，有些可能还这辈子有史以来第一次挨了几天饿。情绪能不悲观吗？那应该是绝望。你想想，这批人如果放出来恢复工作，情绪将有多大的反转？</p>\n<p data-pid=\"py_W-afQ\">别怀疑，卖方已经开始推送在线心理专家辅导服务了。</p>\n<p data-pid=\"7K4XKL3C\">短期来看，似乎也不能更糟糕了。首先，所有带权益的产品基本都处于深度亏损区间。众所周知，这个区间是很少有赎回的。无论理财产品还是公募基金，负债端都相对稳定。</p>\n<p data-pid=\"VtPkVJ6t\">其次，疫情管控还能更严吗？站在这周来看，似乎只会改观，不会更糟糕了。</p>\n<p data-pid=\"qm_-8Y_Q\">房地产现在和疫情管控是一个问题的两面，救市政策都出了，唯独等待疫情高峰过去，生活恢复。</p>\n<p data-pid=\"s4JHTrW3\">一季报低于预期、美联储加息、外资撤出，这些事情都已经发生。</p>\n<p data-pid=\"mlUvTOHf\">那么还有什么未被定价的利空呢？</p>\n<p data-pid=\"JyV2Q94c\">所以站在这个时点，从胜率的角度出发，似乎到了一个不应该看空的时点了。当然，站在赔率的角度，大可从潜在增速下降的角度批判反弹的幅度。但那不应该是当下的核心矛盾。</p>\n<p data-pid=\"ilqcgvBu\">毕竟，当一切负面因素都超出了想象力的极限，接下来也只能是反转了。</p>\n<p data-pid=\"hMwzi9VR\">想想去年初的煤炭，年中的双控，年底的房地产。所有大波段的反转和拉升，都来自于极限施压后的上跳。</p>\n<p data-pid=\"E-ZIQdMD\">借用华为的广告歌：Dream it possible.</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/tu-dou-xian-sheng-56-59?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">土豆先生</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/529425809/answer/2459157917?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">474 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/530056276?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">多位券商首席认为A股已经触底，即将迎来反攻时刻，现在是「人弃我取」的好时机吗？</a><br><a href=\"http://www.zhihu.com/question/529196343?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">A股：2022年4月21日市场分析和2022年4月22日市场预测怎么样？</a><br>\n","link":"http://www.zhihu.com/question/529425809/answer/2459157917?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"静音轮胎真的“静音”吗？原理是什么？","date":"2022-05-19 05:14:13","description":"\n<p></p>\n<a href=\"https://www.zhihu.com/video/1510311694149066752\">静音轮胎如何静音？</a><p><br></p>\n<p data-pid=\"9XnC4bZI\">是可以非常静音的。</p>\n<p data-pid=\"ZJ-8VBnz\">原理非常简单：<b>物体震动产生声音，抑制震动可以减少噪音，通过吸音材料吸收已经产生的噪音，可以达到静音的效果。</b></p>\n<p data-pid=\"KItq4mo3\">大多数静音轮胎会从主动、被动两个维度入手，即调整花纹以及增加吸音材料，目的是降低轮胎与路面摩擦产生的噪音以及吸收在轮胎内部不断反射的噪音。不过，吸音材料大都应用在新能源轮胎上，较少出现在油车上。主要原因也是新能源相比燃油车有更强的静音需求。</p>\n<p data-pid=\"7Uf_zgBr\">既然其他答主已经从传统油车的角度对比了静音轮胎的实际表现，那我就从新能源汽车的角度谈谈静音轮胎的选择。</p>\n<p><br></p>\n<h2>新能源汽车对静音轮胎的追求</h2>\n<p data-pid=\"3HrdMvJr\">过去轮胎在性能和静音之间只能二选一。如果选择性能，对不起，静音很难照顾到，尤其是缺气保用轮胎。这也就解释了宝马3系、马自达3这类强调操控、运动车子路噪、胎噪为什么非常大。</p>\n<p data-pid=\"IUlIQH9K\">与此同时，内燃机要凸显轮胎的静音相对更加容易，因为燃油车有内燃机，内燃机工作时处于震动的状态，伴随一些细碎且均匀的声音。这部分声音可以掩盖住部分来自轮胎细碎的、嘈杂的较低频率的噪音，主观上降低人耳对这部分噪音的关注。</p>\n<p data-pid=\"iv1d-dFH\">这个规律到了新能源时代就不那么适用了。</p>\n<p data-pid=\"wQ9Rr1Yn\">一个原因是，新能源车非常安静，一点点噪音都会被无限放大。按理说，一根针掉在地上所发出的声音非常小，但在寂静的教室里就非常明显（小学作文）。目前困扰很多电车的噪音来自电机，这部分声音实际上不大，但就是非常明显，难以消除。</p>\n<p data-pid=\"U9aZrXRv\">另外一个原因是，电机带来了更为直接的加速能力，加上大电池带来的自重，需要轮胎具备足够优秀的抓地力，也就是性能化。</p>\n<p data-pid=\"41L0LpXv\">新能源车硬生生的把性能和静音糅合在一起，轮胎也正在发生翻天覆地的变化，已经有非常多轮胎厂商宣布未来将只生产新能源专用轮胎，侧面反映出新能源汽车轮胎的要求更加苛刻。</p>\n<p data-pid=\"gLIT1oyz\">这也就是说轮胎在追求静音的要求下，单纯通过主动的花纹设计已经不够，需要在其他方面做更多尝试，当然前提是不能降低性能，于是开始有越来越多的轮胎配备吸音棉。当然</p>\n<p><br></p>\n<h2>轮胎静音主要技术</h2>\n<p data-pid=\"Gwd2cdiw\">一般新能源车，尤其是家用型的，会在出厂时标配静音、舒适比较均衡的轮胎。我自己的微蓝7原厂配备米其林Primacy 4（浩悦4），是一款非常强的轮胎。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-14b32486d532e7bce5814bf75eff9072_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1268\" data-rawheight=\"846\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"KoaSpH11\">不过，微蓝7作为一款主打空间的家用车，不太追求操控，所以一直想换一套新能源专用的静音轮胎，发挥出纯电优势，后面在途虎上买了雷神静悦Silence。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-295a641e0b8528ac430d565e6027f4e1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1268\" data-rawheight=\"846\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"2-i3rQ8L\">雷神定位中高端，特别强调适配新能源、兼顾燃油车，微蓝7这种小众车也有适配 。</p>\n<p data-pid=\"M8yN3UhI\">源于新能源汽车静谧性的大幅提升，雷神核心卖点是静音，旗下四条产品线包括了静音棉轮胎（静悦）、缺气保用轮胎（铠悦），缺气保用+静音棉（北辰）、欧洲静音（星驰）。</p>\n<p data-pid=\"P6U-j8F-\">即便是最基础的轮胎型号也提供了非常优秀的静音性能，有特殊设计的花纹和吸音棉材料。这也就意味着没有特别乞丐的入门轮胎。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-ad829562f21e643d85aba7f2116fbdd2_720w.jpg?source=b1748391?rss\" data-caption=\"只要450元，还要啥自行车？\" data-size=\"normal\" data-rawwidth=\"1268\" data-rawheight=\"846\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"vN9gkZt9\">我选择的是雷神静悦，整体价格不算贵。相比原厂米其林浩悦4售价900元/条，雷神静悦四条只要1680元，每条只有450元。</p>\n<p><br></p>\n<p data-pid=\"rZSYSyJC\">没有选择缺气保用，价格是一方面，另一方面是微蓝7胎压正常，日常只需要250，不像那些长续航、大电池包的新能源车胎压需要310。<b>胎压比较高的车型可以选择缺气保用胎。</b>不过，缺气保用胎不如普通胎舒适就是了。</p>\n<p data-pid=\"l001UdKE\">就轮胎的静音技术而言，各家大同小异，你听到的米其林Acoustic静音技术、德国马牌ContiSilent轮胎降噪技术、固特异噪音覆盖科技等等都可以理解为<b>在轮胎内侧附着一块特殊材料的吸音棉。</b></p>\n<p data-pid=\"HK34XZaB\">这块吸音棉根据各家轮胎品牌对轮胎整体设计的侧重点不同而不同，因此在材料上也会呈现出「独家科技」，实际上都是一类。这样做的好处是在<b>不破坏原有轮胎性能</b>，而只提升静音性能。当然，这种轮胎一般都定位高端。</p>\n<p><img src=\"https://pica.zhimg.com/v2-ba656e48fbef7aa107f32e60ed00e945_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1268\" data-rawheight=\"846\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-a698ca24d89cc42f403d73136ba2404c_720w.jpg?source=b1748391?rss\" data-caption=\"静音棉厚度\" data-size=\"normal\" data-rawwidth=\"1268\" data-rawheight=\"846\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"T9ZWqa6Y\">雷神静悦轮胎内部也有一块这样的聚氨酯吸音棉，这也是我选择它的主要原因。轮胎与路面撞击产生的噪音会在轮胎内部反复折射，最终被吸音棉逐渐吸收。与此同时，吸音棉也可以减少路面对轮胎内部空气挤压产生的噪音。</p>\n<p data-pid=\"cf2uGIAv\">根据目前大多数轮胎品牌测试数据，经过吸音棉处理过后的轮胎，高速情况下可以降低9分贝的噪音。9分贝是什么概念？大概接近10倍这么一个水平。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-8c0b0912e6659f1fb77a7bd6c05cdc35_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1268\" data-rawheight=\"846\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"9k3VMqHc\">除去静音棉，花纹排布属于「主动降噪」的部分，而且越「凌乱无章」越好。原因嘛，单一花纹会产生单一频率的噪音，复杂花纹可以分散声音能量，使峰值变得平缓。雷神静悦这条胎除去四条主排水沟槽之外，采用5频花纹块，五种节距比例，可以减少轮胎花纹内留存的空气振动。</p>\n<p><br></p>\n<h2>微蓝7实际体验</h2>\n<p data-pid=\"sgGJHW6P\">未通知女司机更换轮胎，直接问她主观感受，表示如下：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-547ef6afb7d32313e5cc87ec72b1eee8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"1751\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"zKY1qMl2\">我的感受是这条轮胎操控性其实不错，但对手毕竟是米其林浩悦4，所以在操控上有一些弱化，也就是指向性相比原厂轮胎略差。话说回来，败给米其林浩悦4一点都不丢人。</p>\n<p data-pid=\"YtVDWu_s\">静悦轮胎比较软，比较侧重舒适性和缓震，虽然事前已经预料到，但实际上没想到变化会大到女司机也感知出来。我只能说，这几年女司机的驾驶水准提升不少。好在微蓝7并不是一台操控性能非常好的车，方向盘变轻对女司机来说反倒是一件好事。</p>\n<p data-pid=\"EwagZSQC\">对我来说，如果要给Mustang Mach E更换静音轮胎，会倾向雷神铠悦的缺气保用轮胎。</p>\n<p><br></p>\n<p data-pid=\"EVeNx3xh\">其次，未测试数据之前，这条轮胎静谧性主观上的提升非常明显，尤其对中低速下粗糙路面的行驶大有裨益，十分显著。</p>\n<p data-pid=\"oMongY9W\">大多数轮胎运转时会出现低频「嗡嗡」的声音，静悦这条轮胎上处理的非常明显。只是说这种噪音无法通过分贝仪直接呈现出来，只能靠主观感受。</p>\n<p data-pid=\"D-N2iMW0\">如果是在市区新铺设的柏油路面上行驶，驾驶室里的乘客几乎察觉不到声音，接近静默的状态，非常夸张。这时候，都能非常明显的听到空调风扇转动的声音。</p>\n<p><br></p>\n<p data-pid=\"T6W8PMYQ\">第三，耐磨指数520比原厂轮胎340优秀不少。</p>\n<p><img src=\"https://pica.zhimg.com/v2-254cd49b143f1cbdf0d466cfb65b9ec4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1268\" data-rawheight=\"846\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"qeHK2OxO\">驾驶微蓝7分别测试了新柏油路、粗糙砂石路、水泥路、高速路等四种常见路面（如下图），保持30/50/80的三种速度。之所以没有选择100及以上，是因为那个速度风噪已经严重影响到实际成绩了。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-89dbcb1e77a74d1f4304fc86ef9475cf_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2550\" data-rawheight=\"1748\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Yvv2lbd-\">更换轮胎之前并未想到要全面对比，只是简单对比下米其林浩悦4和雷神静悦粗糙水泥路面的表现，结果如下：</p>\n<p><img src=\"https://pica.zhimg.com/v2-d24b9541a135cda131672ed5c29235c4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1231\" data-rawheight=\"1565\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Xcn5ipy4\">同一条道路，空调手动，风量三挡，时速50km/h，全程录像，排除突发的环境音，取20组相对平稳的数据，最终显示雷神静悦相比米其林浩悦4有1~2分贝的提升，这种噪音的改善是可以被人耳感受到的，换算过来大概相当于1.1倍到1.25倍的提升。</p>\n<p data-pid=\"Fl4B6xEU\">分贝不同于常规数字，是一种指数关系，提升2分贝意味着降噪效果提升接近50%，如果是10分贝意味着提升了10倍。</p>\n<p data-pid=\"GwO0baEw\">考虑到米其林浩悦4本身就是一款非常优秀的静音轮胎，而雷神静悦依然能有这样的提升属实非常优秀了</p>\n<p data-pid=\"XZfkcB8O\">随后为了回答这个问题，我又测试了其他几种路面，数据如下：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-05b61b7d838f6a27088c4710da73e511_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3074\" data-rawheight=\"1563\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"8Vc8f1ha\">城市驾驶，哪怕是经常有货车出现，磨损非常严重的路面，低于60km/h，雷神静悦效果非常明显，可以做到56dB以下。如果是新铺设的沥青路面，数值在52~53之间，几乎没有杂音，空调、电机、雨刮任何声音都会变得非常明显。</p>\n<p data-pid=\"rtbU8_km\">作为对比，同样为30km/h，经常有货车出现的粗糙路面和日常磨损的城市路面，实际噪音相差有2dB。随着时速上升，电动车开始有电机加速的啸叫声以及能量回收的声音以及风噪，噪音亦有差别。</p>\n<p data-pid=\"KHGZoKeQ\">值得一提的是，静悦这条轮胎在处理路面接缝时表现要更有优势。或许是因为轮胎相对较软，或许是因为吸音棉吸收了轮胎变形所产生的噪音，总之这部分噪音比预期要好，或者说比印象中的浩悦4稍好。</p>\n<p><br></p>\n<h2>总结</h2>\n<p data-pid=\"d3HfwAtB\">回到问题本身，轮胎可以通过许多方式解决静音的问题，通过花纹、吸音棉，雷神静悦就实现了比原厂轮胎更好的静音效果。</p>\n<p data-pid=\"HBx5Kebu\">但也不得不说，微蓝7并不是一个好标的。如果找到一个更好的标的，静音效果会更加明显。</p>\n<p data-pid=\"j1cJrGP7\">首先，微蓝7配原厂轮胎太强。米其林主力产品浩悦4，雷神静悦能打的互有胜负就已经非常优秀了，毕竟价格摆在那。</p>\n<p data-pid=\"mJgKEwue\">其次，别克本来就非常注重静音，尤其美国车型。微蓝7有搭载QuietTuning静音技术，虽然没有配备ANC，但整体还是非常安静。</p>\n<p data-pid=\"uGAl9AzI\">如果将样本换成小鹏P5，我想这个对比会更有意思，一个是小鹏P5原厂轮胎各方面表现一般，另一方面P5也更需要静音。</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/dickiesgao?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">默默-KG</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/54960847/answer/2491235528?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">20 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/532426685?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">污水提升器噪音怎么弄，上海智流的静音电机怎么样，有用过的小伙伴吗？</a><br><a href=\"http://www.zhihu.com/question/511205085?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">佳通轮胎静音效果怎么样？能完全听不到噪音吗？</a><br>\n","link":"http://www.zhihu.com/question/54960847/answer/2491235528?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"腾讯第一季度营收 1355 亿元人民币，盈利 255.45 亿元人民币，哪些信息值得关注？","date":"2022-05-18 10:58:28","description":"\n<h2>腾讯季报图解：期内盈利237亿同比降52% 马化腾要换档增长</h2>\n<p><img src=\"https://pic2.zhimg.com/v2-9e13ffe781609d00c155f2846b2c56b2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"584\" data-watermark=\"watermark\" data-original-src=\"v2-9e13ffe781609d00c155f2846b2c56b2\" data-watermark-src=\"v2-ad454597d8a08d332987fea04a7c16e2\" data-private-watermark-src=\"v2-2943e79470d1620bac6d3e15e2924544\"></p>\n<p><br></p>\n<p data-pid=\"NC0mGNcG\"><b>雷递网 雷建平 5月18日报道</b></p>\n<p data-pid=\"fgiBZjYN\">腾讯控股（股票编号: 00700）今天公布财报。财报显示，腾讯2022年第一季度营收为1355亿元（213亿美元），较2021年第一季基本持平，较上一季度的1441亿元下降6%。</p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-44367efac5565fb37bed8ee518e70a2b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"881\" data-rawheight=\"413\" data-watermark=\"watermark\" data-original-src=\"v2-44367efac5565fb37bed8ee518e70a2b\" data-watermark-src=\"v2-ff34c9f3a47283316236e8200f9fca97\" data-private-watermark-src=\"v2-7c9accd9fe74ad5eeef2b9fe3888ab4a\"></p>\n<p><br></p>\n<p data-pid=\"mb97C-Vq\">腾讯2022年第一季度期内盈利为237亿元（37亿美元），同比减少52%；净利润率由上年同期的36%下降至18%。</p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-ae7110ca22b2dca5cfb0569dbfe14b26_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"916\" data-watermark=\"watermark\" data-original-src=\"v2-ae7110ca22b2dca5cfb0569dbfe14b26\" data-watermark-src=\"v2-d14169cb23dc70b07e814f7235b1401c\" data-private-watermark-src=\"v2-390f394c3f546e191d82a6231c852e83\"></p>\n<p><br></p>\n<p data-pid=\"LWUN37gT\">腾讯称，2022年第二季至今，广告市场持续低迷，快速消费品、电子商务及旅游等行业的广告主大幅缩减广告支出。在艰难的市场环境中，腾讯持续投资优化广告系统，升级了机器学习的基础架构，以更高效地处理数据。此次升级将有助腾讯为广告主提供更精准的投放能力及更高的转化率。</p>\n<p data-pid=\"tRvO4nDb\">在云及其他企业服务层面，腾讯重新聚焦于企业服务的健康增长，主动缩减亏损业务，并将资源集中于视频云及网络安全等领域的PaaS解决方案。</p>\n<p data-pid=\"eCgECjym\">腾讯董事会主席兼首席执行官马化腾表示：“在具有挑战性的2022年第一季期间，我们实施了成本控制措施，并调整了部分非核心业务，有助我们在未来实现更优化的成本结构。我们利用小程序、腾讯会议及企业微信等工具，帮助中国的企业及消费者于新一轮疫情共克时艰，并继续投资于战略成长领域，包括企业软件、视频号及国际市场游戏。”</p>\n<p data-pid=\"0OaaP7HJ\">马化腾说：“展望未来，我们将在各种挑战及周期变化下聚焦重点业务并坚持创新，持续为用户、合作伙伴及整个社会创造价值。”</p>\n<p data-pid=\"IcbSqlda\">近期，马化腾还说，腾讯正面临着挑战与发展并存的新阶段。“一方面，收入与利润的增速放缓；另一方面，我们也认为可借此换档，去创造更高质量的发展——那就是更加聚焦以用户价值、科技创新及社会责任为中心的本源，更加坚守科技向善的愿景。这样的企业，才会在更长时间跨度里持续进化，为国家与时代创造更大价值。”</p>\n<p data-pid=\"-JRq6id6\">腾讯2022年第一季增值服务业务收入为727亿元，相较2021年第一季总体保持稳定。</p>\n<p data-pid=\"7YgR3RYx\"><b>腾讯Q1游戏收入430亿 与上年基本持平</b></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-0dbb2ace4aedaed17377b1963d6a90f2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"912\" data-rawheight=\"433\" data-watermark=\"watermark\" data-original-src=\"v2-0dbb2ace4aedaed17377b1963d6a90f2\" data-watermark-src=\"v2-a0b4d00e09a0179c84b17aa561d44e4a\" data-private-watermark-src=\"v2-bbdc7de94f77fd9aee6dc2f35c1c9568\"></p>\n<p><br></p>\n<p data-pid=\"YMMBNLd-\">其中，腾讯2022年第一季度游戏收入为430亿元，基本与上年同期持平。</p>\n<p data-pid=\"VIahDdhP\">游戏收入中，腾讯2022年第一季度本土市场游戏收入330亿，同比下降1%。这由于未成年人保护措施对活跃用户及付费用户数量造成了直接和间接的影响。本季度，《英雄联盟手游》及《金铲铲之战》等最近推出的游戏产生的收入大部分被《天涯明月刀手游》及《使命召唤手游》等游戏的收入下滑抵销。</p>\n<p data-pid=\"ZCnA2BiL\">腾讯2022年第一季度国际市场游戏收入106亿元，增长4%，体现了《VALORANT》及《部落冲突》等游戏的收入增长，但由于用户消费在新冠疫情后有所回落，该增长部分被《PUBG Mobile》的收入减少所抵销。</p>\n<p data-pid=\"THR4ze-I\">腾讯2022年第一季度社交网络收入291亿元，增长1%，反映腾讯的视频号直播服务的收入增加，但大部分被音乐直播及游戏直播收入下降所抵销。</p>\n<p data-pid=\"EQhnS-PE\"><b>腾讯Q1广告收入180亿 同比下降18%</b></p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-fde9fd1bde589f1dc25b304a6a2c408d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"964\" data-rawheight=\"449\" data-watermark=\"watermark\" data-original-src=\"v2-fde9fd1bde589f1dc25b304a6a2c408d\" data-watermark-src=\"v2-074ed4c785c10c662cfc03ce3c2329e1\" data-private-watermark-src=\"v2-dff6857f66a04886aae587b6f88ac131\"></p>\n<p><br></p>\n<p data-pid=\"SleorrBk\">腾讯2022年第一季度网络广告业务收入180亿元，同比下降18%，反映了教育、互联网服务及电子商务等行业的广告需求疲软，以及网络广告行业自身的监管整改的影响，部分被快速消费品行业的稳定需求以及腾讯合并搜狗所带来的广告收入抵销。</p>\n<p><br></p>\n<p><img src=\"https://pica.zhimg.com/v2-f3f38a7c93079d6abc19508f41f3badc_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"641\" data-watermark=\"watermark\" data-original-src=\"v2-f3f38a7c93079d6abc19508f41f3badc\" data-watermark-src=\"v2-73851b2e60a22fd5edfc8c3a985494ca\" data-private-watermark-src=\"v2-31ebb5a48e5b0cf14861a9b4318d2151\"></p>\n<p><br></p>\n<p data-pid=\"XBt23urB\">腾讯2022年第一季度社交及其他广告收入157亿元，下降15%，主要由于腾讯的移动广告联盟广告业务适应监管变化，收入大幅减少。另一方面，公众号内的订阅列表广告拉动了其广告收入增长，部分抵消了联盟广告的下滑。媒体广告收入23亿元，下降30%，反映了腾讯新闻及腾讯视频等媒体广告的收入下滑，部分被2022年北京冬季奥运会的广告收入所抵销。</p>\n<p data-pid=\"2nZoUbTC\">腾讯2022年第一季度金融科技及企业服务业务收入428亿元，同比增长10%。金融科技服务收入同比增速放缓，反映了2022年三月新一轮新冠疫情影响商业支付交易金额。企业服务收入同比略有下降，我们重新定位了我们的IaaS服务，从单纯追求收入增长到实现健康增长，并主动减少亏损合同。</p>\n<p data-pid=\"LBglGe94\"><b>腾讯Q1成本784亿 同比增长8%</b></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-b198f158b73bc6cf795196f7848f3283_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"892\" data-rawheight=\"462\" data-watermark=\"watermark\" data-original-src=\"v2-b198f158b73bc6cf795196f7848f3283\" data-watermark-src=\"v2-2bceff8e41dc63d719956e40596b7b0c\" data-private-watermark-src=\"v2-c9e97ec5969a74d789fc5543ac4dc26c\"></p>\n<p><br></p>\n<p data-pid=\"ieoCTrsh\">腾讯2022年第一季度成本为784亿元，较上年同期的727亿元增长8%。</p>\n<p data-pid=\"Pmz75EAu\"><b>腾讯Q1毛利570.74亿 毛利率42%</b></p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-2ee9572f4077cecdf90478ebc332eb88_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"858\" data-rawheight=\"440\" data-watermark=\"watermark\" data-original-src=\"v2-2ee9572f4077cecdf90478ebc332eb88\" data-watermark-src=\"v2-0775babf6f0bcd7c91deecef6e96ca45\" data-private-watermark-src=\"v2-fb4370539d814ba8024eb4306b1f2630\"></p>\n<p><br></p>\n<p data-pid=\"P1ZjxcrP\">腾讯2022年第一季度毛利为570.74亿元，毛利率为42%。</p>\n<p data-pid=\"h_xWWFia\"><b>腾讯Q1运营利润372亿 运营利润率27%</b></p>\n<p><br></p>\n<p><img src=\"https://pica.zhimg.com/v2-35d9c2ef1d9ba85dfd898a5b6983c0a8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"896\" data-rawheight=\"435\" data-watermark=\"watermark\" data-original-src=\"v2-35d9c2ef1d9ba85dfd898a5b6983c0a8\" data-watermark-src=\"v2-f697506c76b048b8b59560de0da1ffac\" data-private-watermark-src=\"v2-7e8c3cf33d4f8745aa4b81791e221af8\"></p>\n<p><br></p>\n<p data-pid=\"L6PhrsNJ\">按国际财务报告准则：腾讯2022年第一季度经营盈利为372亿元（59亿美元），同比减少34%；经营利润率由上年同期的42%下降至27%。</p>\n<p data-pid=\"iMeauBSY\">按非国际财务报告准则，腾讯2022年第一季度经营盈利为365亿元（58亿美元），同比减少15%；经营利润率由上年同期的32%下降至27%。</p>\n<p data-pid=\"LpNMlNNU\"><b>腾讯Q1净利237亿 同比下降52%</b></p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-6dc88154be5281879ef5a85dbe314571_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"862\" data-rawheight=\"412\" data-watermark=\"watermark\" data-original-src=\"v2-6dc88154be5281879ef5a85dbe314571\" data-watermark-src=\"v2-c31c0ffc5e10f358608d06802409803c\" data-private-watermark-src=\"v2-f2967eecd37ced16f934cf882b0906d0\"></p>\n<p><br></p>\n<p data-pid=\"DTfQWFkv\">按国际财务报告准则：腾讯2022年第一季度期内盈利为237亿元（37亿美元），同比减少52%；净利润率由上年同期的36%下降至18%。期内本公司权益持有人应占盈利为234亿元（37亿美元），同比减少51%。</p>\n<p data-pid=\"rC8JAx2N\">按非国际财务报告准则，腾讯2022年第一季度期内盈利为263亿元（41亿美元），同比减少24%；净利润率由上年同期的26%下降至19%。</p>\n<p data-pid=\"gqxQVUWN\">截至2021年3月31日，腾讯持有总现金为3041亿元（479亿美元）。</p>\n<p data-pid=\"gVexujiS\">———————————————</p>\n<p data-pid=\"yRhtu2Ct\"><b>雷递由资深媒体人雷建平创办，若转载请写明来源。</b></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/lei-jian-ping-93?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">雷递</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/533433320/answer/2491246001?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">169 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/533438335?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">腾讯 2022 年第一季度营收 1355 亿元，净利润 255 亿元，这一数据说明什么？</a><br><a href=\"http://www.zhihu.com/question/533535993?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">腾讯 2022 年第一季度营收 1355 亿元，净利润 255 亿元，这一数据说明了什么？</a><br>\n","link":"http://www.zhihu.com/question/533433320/answer/2491246001?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何看待国家统计局表示「一旦疫情得到有效控制，正常生活秩序得到恢复，被压抑的消费需求会得到较快释放」？","date":"2022-05-18 05:52:12","description":"\n<p data-pid=\"2zO3RXFn\">我对于疫情和消费的影响做过不少研究，结论大概是这样的：</p>\n<p data-pid=\"CZJyaBbw\"><b>1，疫情对于本地消费的抑制，持续时间会达到疫情本身的两倍到三倍。</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-4d485c4be19507fece85699138ff3a85_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2640\" data-rawheight=\"1920\" data-watermark=\"original\" data-original-src=\"v2-4d485c4be19507fece85699138ff3a85\" data-watermark-src=\"v2-3b009065f842efe07c19c2f7327a5df9\" data-private-watermark-src=\"v2-5869316204b68caf8397b2b81d73aeaa\"></p>\n<p data-pid=\"aXTjWemx\">上面的数据是使用了Difference in Difference方法，用某个支付平台的分地区消费支付数据做的，这个数据不包括通过电商平台的支付。</p>\n<p data-pid=\"kkG3qhZU\">每一个点代表在疫情后的每一天，每一个点比起横向的红线越低，代表该地区消费因疫情的下降越多。</p>\n<p data-pid=\"mfZWguAL\">上面这张图的数据，用的是2021年12月之前的疫情，也就是奥密克戎进入中国前的疫情。在这段时间，大部分地区的疫情一个月内就可以清零，即便是西安疫情、石家庄疫情、乌鲁木齐疫情，持续时间也就一个半月时间，之后就是全域低风险，理论上已经没有任何政策影响了。</p>\n<p data-pid=\"ypOGyJ80\">但从图中看，消费恢复需要的时间也非常久，90天才和疫情前的正常水平没有统计上的显著差异。</p>\n<p data-pid=\"c0Z9MJC4\">也就是说，从奥密克戎之前的疫情看，<b><u>消费需求被抑制的时间，至少是疫情本身持续时间的两到三倍</u></b>。理由很简单，消费者的收入减少，业态大量死亡，这些都需要时间来修复，是不可能在疫情一旦控制之后马上就恢复的。</p>\n<p data-pid=\"tp-0EIVl\">而奥密克戎之后的疫情对本地消费的影响是多少呢？</p>\n<p data-pid=\"OxpV9129\">就用长春举例吧，他的情况是这样的——如果疫情前是1，整个疫情期间的消费都在0.05以下，截止到昨天5月17日，长春市的消费恢复到了疫情前的40%。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-29e0e6fec3443e7a240d5d2632582918_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1021\" data-rawheight=\"606\" data-watermark=\"original\" data-original-src=\"v2-29e0e6fec3443e7a240d5d2632582918\" data-watermark-src=\"v2-3917013c278f52c6285a79f7f606bdfc\" data-private-watermark-src=\"v2-b3cc93d2a914ee52b8a5a0a64e17a829\"></p>\n<p data-pid=\"oxmF8273\">那么长春是什么时候社会面清零的呢？4月11日。<b>社会面清零一个多月后也只恢复了40%，比之前的恢复速度更慢</b>。因此，即使疫情得到了有效控制，消费需求显然也不会很快释放。</p>\n<p><br></p>\n<p data-pid=\"p68h6THY\"><b>2，奥密克戎变种株之前，疫情对于每个地区的电商数据是没有影响的。</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-4dfc5a88066b0be3f947ba216b15d3bf_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2640\" data-rawheight=\"1920\" data-watermark=\"original\" data-original-src=\"v2-4dfc5a88066b0be3f947ba216b15d3bf\" data-watermark-src=\"v2-1399a32a3925e1b1a3d1817dba7b311c\" data-private-watermark-src=\"v2-f9d4ab175211b378301026f56d2e8d3e\"></p>\n<p data-pid=\"F_pAO9_P\">上面的图我们使用了某个电商各月在各个城市的销售额来计算，用的是2021年12月和之前的疫情。</p>\n<p data-pid=\"MBTsLI9G\">可以看到，每一个月的数据，从-2（疫情前两个月）到0（疫情当月）到2（疫情后两个月），和0之间都没有统计上显著的差异。因此疫情是不会影响电商消费的。一些看法认为，人们不能到线下逛街买东西，就会去电商买东西，因此电商消费会增加——这个看法是错的。</p>\n<p><br></p>\n<p data-pid=\"qzvXZo3F\"><b>3，奥密克戎变种株之后，疫情对于每个地区的电商数据是有显著影响的。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-2db2727e84898168658fcff50577ed4d_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2640\" data-rawheight=\"1920\" data-watermark=\"original\" data-original-src=\"v2-2db2727e84898168658fcff50577ed4d\" data-watermark-src=\"v2-de1649993f38f8339ef15568d7d70054\" data-private-watermark-src=\"v2-6529ab73cd7c323aed2b3d96c5dc6575\"></p>\n<p data-pid=\"01RIC900\">上图我们使用同样的电商平台数据，对2022年1月之后的疫情进行分析。</p>\n<p data-pid=\"cm0YDkBf\">可以看到，在疫情当月和疫情前一个月，电商的消费都会受到近10%左右，统计上显著的损失。且在疫情后两个月，也没有出现统计上超过正常水平的恢复。</p>\n<p data-pid=\"X2SXH5Gc\">这里最有趣的是-1这个点，也就是疫情前一个月，<b>在这个城市还没有疫情的时候，电商消费的损失就开始了</b>。为什么呢？因为奥密克戎物传人啊，所以那些毗邻疫区的城市，就抢先把来往于疫区的物流砍掉一刀，怕这个地区的疫情传进来，自己也被迫一例就封城。</p>\n<p data-pid=\"YUaVtdPx\">于是在这个地区还没有出现疫情的时候，电商就开始损失了，疫情当月继续损失，且在疫情之后也没有恢复回来。</p>\n<p><br></p>\n<p data-pid=\"KwroDDxk\"><b>结论：</b></p>\n<p data-pid=\"qpwp04Yk\">「一旦疫情得到有效控制，正常生活秩序得到恢复，被压抑的消费需求会得到较快释放」，这句话与现实是并不吻合的。</p>\n<p data-pid=\"opxYX-Mk\">现实情况是，本地消费的压抑时间，在奥密克戎之前就达到疫情本身持续时间的两到三倍。在奥密克戎之后，压抑时间会持续更久。</p>\n<p data-pid=\"COn9LLEg\">电商平台在奥密克戎之前原本是不被疫情影响的，但在奥密克戎带来的物传人现象后也开始出现损失，这种损失甚至会提前于疫情本身出现，且在疫情后也没有观察到统计上显著的恢复。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/chenqin?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">chenqin</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/533037443/answer/2490856319?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2606 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/506161500?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">国家统计局表示「下阶段扩大内需还有较多有利因素」，其中有哪些信息值得关注？</a><br><a href=\"http://www.zhihu.com/question/533100972?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">国家统计局表示二季度经济会保持较好增长，这说明了什么？</a><br>\n","link":"http://www.zhihu.com/question/533037443/answer/2490856319?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012 年的、由 Node.j......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\n    return new Date(date.toLocaleString('en-US', { timeZone }))\n}\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        timeZone\n    })\n    return {\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\n        convert (date) {\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\n        }\n    }\n}\n\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\n    return converter.convert(new Date(secDate), tzName) - secDate\n}\n\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\ncmn-Hans-SG = 中文普通话-简体-新加坡\ncmn-Hant-TW = 中文普通话-繁体-台湾\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\ncmn = 中文普通话\n\nzh-Hans = 中文-简体\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\n}\n\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long'\n}\nconst now = new Date()\n\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\n\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\n\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\n\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\n\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\n\nzhCNFormatter.format(now) // 2021年10月13日星期三\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\n\njaFormatter.format(now) // 2021年10月13日水曜日\njaAltFormatter.format(now) // 令和3年10月13日水曜日\n\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\n// {locale: 'zh-CN', calendar: 'gregory', …}\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\n     // 基于一个固定日期计算，这里选择 1970.1.1\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\n    const base = new Date(1970, 0, 1).getTime()\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\n    return Array.from({ length: 7 }, (_, day) =&gt; (\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\n    ))\n}\n\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n}).formatToParts(new Date())\n// [\n//     { type: 'year', value: '2021' },\n//     { type: 'literal', value: '年' },\n//     { type: 'month', value: '10' },\n//     { type: 'literal', value: '月' },\n//     { type: 'day', value: '13' },\n//     { type: 'literal', value: '日' },\n//     { type: 'weekday', value: '星期三' },\n//     { type: 'literal', value: ' ' },\n//     { type: 'dayPeriod', value: '上午' },\n//     { type: 'hour', value: '1' },\n//     { type: 'literal', value: ':' },\n//     { type: 'minute', value: '00' },\n//     { type: 'literal', value: ':' },\n//     { type: 'second', value: '00' }\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\n}\n\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\n  timeZone: 'America/Los_Angeles',\n  year: 1995,\n  month: 12,\n  day: 7,\n  hour: 3,\n  minute: 24,\n  second: 30,\n  millisecond: 0,\n  microsecond: 3,\n  nanosecond: 500,\n  calendar: 'iso8601'\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<p>2020 年 11 月 11 日，苹果在本年度最后一次 Apple Events 上发布了全新的 ARM 芯片 M1、以及三款搭载了 M1 的 Mac：MacBook Air、MacBook Pro 13‘ 和 Mac Mini。在 WWDC 2020 库克宣布 Apple Silicon 后，这次 Apple Events 再一次掀起了热潮，不少 KOL 都把 M1 奉若神明，不少人也不以为然。本文通过 8 个问题来简单聊聊 M1 和 ARM Mac。M1 芯片的性能如何？本文写就时，搭载 M1 的 Mac 尚未开始发货，我们能看到的只有 GeekBench 上流出的跑分。所以，让我们先从跑分开始看起？...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote>\n<p>周六不放假休息，还在这加班搞 CTF？</p>\n</blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/86535/11/24318/75037/622032a8E4f94d4ae/89703ccc122cf4e0.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"从 Google Analytics 的统计代码说起 —— 谈谈 script 标签的 async 和 defer 属性","date":"2020-10-13 09:25:00","description":"\n<p>之前我在「天下武功，唯快不破 —— 我是这样优化博客的」一文中提到「对于大部分浏览器来说，确保 JS 异步加载和执行的做法其实是在操作 DOM 动态插入 &lt;script async&gt;」，但是并没有给出详细原因。这一次我以 Google Analytics 的统计代码为引子，详细讲讲 &lt;script&gt; 的 async 和 defer 属性、以及它们背后的故事。拆开 Google Analytic 的统计代码现在 Google 推出了 Google Tag Manager，通过......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/80291/2/16552/19311/622032b3Eb300c2aa/66748fc8124a01c5.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/script-async-defer/\">https://blog.skk.moe/post/script-async-defer/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/script-async-defer/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将 […]","link":"https://flyhigher.top/develop/2160.html"}]