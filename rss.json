[{"title":"山田尚子监督于伦敦·有关新作与旧作的访谈","date":"2022-11-22 12:13:08","description":"\n<p data-pid=\"Q8LSHD95\">——《轻音少女》是否为男性向作品？《利兹与青鸟》讲述的是同性恋间的故事？</p>\n<p data-pid=\"RCzqh_K1\">​​日本人气动画监督山田尚子于今年十月到访英国，对她而言，这趟旅程并不陌生。2012年Scotland Loves Anime举办时，她曾作为嘉宾，受邀参加剧场版《轻音少女》的上映会。巧合的是，这部剧场版动画也是以伦敦为舞台，讲述了轻音部的几位成员从日本来到英国的趣事。<br><br>自那以后十年，山田再次成为了Scotland Loves Anime的受邀嘉宾。在热闹非凡的问答会上，山田监督颇为怀念地谈起了曾经在英国的感受。比如，苏格兰人不喜欢说尼斯湖水怪不存在；海德公园里像邮箱的容器其实是专门给狗狗用的器具；马麦酱（一种由酵母菌发酵而成的酱）一点也不好吃等等。关于最后这一点，大部分观众都表示赞同。<br><br>但是，山田本次之行并不是为了怀念这份异国情思。真正促使她跨越大海的动力是由Science SARU制作的17分钟短片作品《Garden of Remembrance》将在全球首映。这部作品主要描述了失去与随即到来的事物——失去重要之人独自生活的少女，度过乏味的日常与突然发生巨变的生活。这是一部与歌手Lovely Summer、漫画家水沢悦子合作完成的大型MV。<br><br>活动前几天，山田监督来到了伦敦，我也能有幸采访到她。我主要采访了她的最新作和Science SARU出品的近期作品。另外，我也借此良机向她询问了她在京都动画时期，满怀爱意制作的以《轻音少女》为首的早期作品。<br><br><br><b>——您在京都动画和Science SARU都有过工作经历，这两家工作室都带有“画风”的强烈特色，作为粉丝基本一眼就能辨别出两者的区别。特别是在画面上，角色的每个动作都能让观众清晰地感受到美感。关于这点，您有什么见解吗？比如说，您是在保持自身感性的同时选择其他工作室的吗？</b><br><br>我在京都动画学到了很多，比如如何描述人们之间的感情，角色内心是如何变化的等等。不仅仅是动画本身，京都动画的staff们还将亲身经历用在了角色上，这些经历像是真实在角色身上发生过一样，只是被用动画的形式表现了出来。他们的目的与其说是制作动画，不如说是把这些角色们当做现实中存在的人物来对待，创造出有实感的人生。我们的职责是成为摄影监督，而不是动画师。也就是说，站在摄影师的立场上，让角色们活出他们自己的人生。这是我们的追求和挑战。<br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-43162148242b5b9abfd0f1f774805bd7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"670\" data-rawheight=\"378\" class=\"origin_image zh-lightbox-thumb\" width=\"670\" data-original=\"https://pic4.zhimg.com/v2-43162148242b5b9abfd0f1f774805bd7_r.jpg\"></figure><p data-pid=\"QNrTQTai\"><br>在这以后，我在Science SARU制作《平家物语》，明显看出了这两家工作室的不同之处。在Science SARU时，我很享受让动画动起来这件事。那时，我整个人都充满了能够制作动画的喜悦之情。真实存在的角色与制作动画的乐趣，我如何将两家不同的方向融合在一起；结合这两方的经验，又会产生什么样的化学反应呢？对此，我也充满期待。<br><br>所以，在制作《平家物语》时，我有意识地让自己不要以摄影师的角度思考。制作《Garden of Remembrance》时也是如此。这是我在《平家物语》更进一步的尝试，现在我也在不断尝试。只不过，《Garden of Remembrance》是以“我”为视角来进行拍摄，掺杂了两种做法。不仅仅作为摄影师，还作为窥探者，这样两种视角。作品中进行窥探的是男性视角。<br><br><br><b>——所以说《Garden of Remembrance》是一部男性视角的作品吗。</b><br><br>不完全是这样。这部作品其实存在三种视角。第一个视角是从描绘的世界中消失的男性，他一直守护着失去的恋人。第二个视角是失去的恋人（也就是“你”）。第三个视角是另一位女性（青梅竹马）。<br><br><br><b>——您的作品曾被许多人评价脚部的表现非常重要，但《Garden of Remembrance》中的女性角色与其他动画作品中的少女相比，脚部却略显圆润，我听说（漫画家）水沢悦子设计了这样胖乎乎的角色，请问您为何要采用这种设计呢？</b><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-8a852753d0084efd2f3019aa174ccade_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1200\" data-rawheight=\"516\" class=\"origin_image zh-lightbox-thumb\" width=\"1200\" data-original=\"https://pic3.zhimg.com/v2-8a852753d0084efd2f3019aa174ccade_r.jpg\"></figure><p data-pid=\"CuOlYzZO\">略显肥大的脚部不是她设计的想法，我本来就很喜欢水沢悦子的设计和绘画作品，所以才参与了本次的项目。她笔下的女孩子大多都很丰满。正如您所说，比其他动画角色偏胖，与社会上公认的美妙身姿有所偏差。但是，这些角色却有种被唤醒的质感……仿佛能触碰她们的肌肤一般的柔软，睡醒时能闻到口水味道的亲近感。我非常喜欢这种特色，所以特意跟她提了一下。<br><br><br><b>——在《声之形》期间拜访您时，我曾问过您“请问这部作品与以往相比有什么不同吗？”，当时您的回答是：“其实并没有什么变化。”那今天，在《Garden of Remembrance》上映之际，我还想再次问您这个问题，请问您在本部作品中展示出了什么新的方向吗？</b><br><br>我真正想做的作品、追求的目标核心其实并没有变。我制作动画的目的也是因为想珍视人类的存在。我对大家所想所感，以及作为感情经历过的事报以深深地敬意，也很希望自己能尊重角色们的私人生活。所以，在描绘这些角色时，我也会考虑很多。关于这点，不管以后创作什么作品都不会改变。在创作动画作品时，要心中常怀着尊敬的想法。<br><br>本次与Science SARU的合作也是如此，今后我可能会涉足不同的领域，主人公和她的性格也可能会发生改变，但是我真正的核心是不会变的。<br><br><br><b>——关于您的早期作品，我想问您一些问题。一部分粉丝认为《幸运星》和《轻音少女》讲述了女学生们悠闲的生活，担任了00年代流行风潮的重要一环。请问您赞同这种说法吗？如果赞同，您认为为何会流行起这种题材的作品呢？</b><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-e7ed9ed36d1828f0c6eee1e93d2670d9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1200\" data-rawheight=\"675\" class=\"origin_image zh-lightbox-thumb\" width=\"1200\" data-original=\"https://pic2.zhimg.com/v2-e7ed9ed36d1828f0c6eee1e93d2670d9_r.jpg\"></figure><p data-pid=\"h6uooZKz\">《幸运星》是其他监督的作品。我当时也在京都动画任职，所以有参与制作。当时确实有股高中生作为主角团的风潮，可能会有人认为，当时的流行趋势简直象征着时代特色。不过，从我个人的角度来讲，我并没有想过迎合时代来创作动画，也尽量让自己不被流行趋势影响。就如我刚刚说过的理由一样，我希望自己能够重视角色们的情感，这一点不管在哪个时代都不会改变。所以，我希望自己不要去迎合潮流。<br><br><br><b>——那么我还有一个问题，有种说法认为《轻音少女》是迎合男性粉丝的作品。但也有一种说法认为，日本观看《轻音少女》的粉丝中，女性粉丝占比非常高。关于这点，您有什么想法吗？</b><br><br>嗯，制片人们最初的目的确实是这样。不过，我在创作《轻音少女》时没有考虑到这个方向。我意识到的是……我只是想单纯地被她们的可爱和率真感动，想把这种想法传递给观众而已。制片人们没有强加过于商业的想法和目标或许就是《轻音少女》大受欢迎的秘诀吧。<br><br><br><b>——2017年到访格拉斯哥时，您曾说过，《声之形》虽然包含有恋爱元素，但里边的爱情故事并不是最重要的部分。那么，《利兹与青鸟》是否可以说是以恋爱故事为主线的作品呢？可以明确指明这是一部同性恋者的爱情故事吗？在这群少女中，至少霙应该是同性恋吧？</b><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-bdf8574a3a95baf2b5a6cc6ec17336bc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1200\" data-rawheight=\"646\" class=\"origin_image zh-lightbox-thumb\" width=\"1200\" data-original=\"https://pic1.zhimg.com/v2-bdf8574a3a95baf2b5a6cc6ec17336bc_r.jpg\"></figure><p data-pid=\"0fDdtu3d\">《玉子爱情故事》也是这样，正如您刚才所说，很多人把《利兹与青鸟》当作一个同性恋的故事来欣赏，但这并不是我有意做成这样的。我来解释一下吧，与其说这是某种性取向的表现，不如说是青春期的表现。在那几年里，友情、对他人的执着、依赖心，所有的情绪都变得沉重……因为人物生活的世界也有局限性。我只是想描绘十几岁的青春期有多么辛苦，以及她们又会有什么样的倾向。<br><br>所以，我无法简单一句话概括，“是的，她们是同性恋，这就是她们的爱情故事。”究其原因，因为我无法评论她们将来会爱上什么样的人，会成长为怎样的大人。我能做到的，仅仅只是描绘出她们那时的写照。我的回答真令人难懂呢。<br><br><br><b>——最后一个问题，听说您今后将在Science SARU担任长篇电影的监督，请问这是真的吗？</b><br>对的，我正在和Science SARU推进长篇企划。今后也会画一些分镜。这份工作可不简单，我也非常头疼呢。<br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-90e542bc3be9932fa40a7ca5f665b559_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"947\" data-rawheight=\"707\" class=\"origin_image zh-lightbox-thumb\" width=\"947\" data-original=\"https://pic2.zhimg.com/v2-90e542bc3be9932fa40a7ca5f665b559_r.jpg\"></figure><hr>\n<p data-pid=\"dqTwVYDV\">原文：<a href=\"https://link.zhihu.com/?target=https%3A//weibo.cn/sinaurl%3Fu%3Dhttps%253A%252F%252Fcinemania.hatenadiary.jp%252F\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">cinemania 映画の記録 (hatenadiary.jp)</a><br>翻译：July<br>润色&amp;校对：果壳里的墨墨、抚璃梦​​​​</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/KyoaniMessenger?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">京阿尼信使</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/585421585?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"深度详解 Heptabase 的四大功能模块","date":"2022-11-22 09:45:53","description":"在今天的这篇文章中，我将对 Heptabase 的功能进行详细介绍，方便你快速入门使用 Heptabase。<p>[......]</p>\n<a href=\"https://sspai.com/post/76704\" target=\"_blank\">查看全文</a><p>本文为付费栏目文章，出自<a href=\"https://sspai.com/series/289\" target=\"_blank\">《59 分钟就上手 Heptabase》</a>，订阅后可阅读全文。</p>\n","link":"https://sspai.com/post/76704"},{"title":"有关于人文社科类的让人看了就放不下的超赞书籍推荐吗？","date":"2022-11-22 08:07:40","description":"\n<p data-pid=\"wCq9pegA\"><b>夏可君的时代之书</b></p>\n<p data-pid=\"6AiwP31P\"><b>——《无用的神学：本雅明，海德格尔与德里达》简介</b></p>\n<p data-pid=\"dk4l_Vw6\">叶书亚</p>\n<p><img src=\"https://pic1.zhimg.com/v2-8389e4c158c3390bd0edd041e4415b07_720w.jpeg?source=b1748391?rss\" data-caption=\"夏可君：《无用的神学：本雅明，海德格尔，德里达》，广西师范大学出版社，2022\" data-size=\"normal\" data-rawwidth=\"1750\" data-rawheight=\"2551\" data-watermark=\"watermark\" data-original-src=\"v2-8389e4c158c3390bd0edd041e4415b07\" data-watermark-src=\"v2-7b3ad15b666c05710fb0404767ee6905\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"mVq1UXeW\">时代需要它的神学之书，进入危机时刻的历史，已经不仅仅是哲学问题，无论是宗教回归不可逆转的趋势，还是时代再次进入了神学信念的较量时刻，这就要求哲学提升自己的音调，在转折的节点上准确判断，磨炼历史趋势的判断力。夏可君的《无用的神学》，就是一部时代之书，因为它触及了现代性内部的根本问题与当代性的深度危机。</p>\n<p data-pid=\"oJ8aG7Zu\"><b>现代性思想面临着三重的悖论式挑战：其一是尼采对虚无主义的揭示，上帝死亡或者最高价值的废黜之后，导致了人性进入虚无主义的深渊，不可能陷入虚无的狂欢，但又不得不以虚无主义作为方法，这是本雅明深刻认识到的悖论。其二是技术无限复制的后果，现代人性离不开技术，但也被技术所虚拟化，如同病毒的全球化来自于技术的加速，要做梦的技术如何与与灵魂的梦想相互渗透？有着一种“灵媒”的技艺吗？技术的整体化集置如何转化自身？这是海德格尔要回应的挑战。其三是各个文明的冲突，全球化的现代性在扬弃了各自文化的宗教神学绝对性之后，唯一的普遍性只能来自于未来的重建，但如何在文化的原初记忆与未来的共识之间，形成对于生命的保护与福佑？欧洲与亚洲的相遇乃至于全球化融合是幸运还是不幸，如何理解彼此的上升与下降？这是德里达已经触及的核心疑难。</b></p>\n<p data-pid=\"76PEsgqc\">但为什么这些问题都要关涉到一个中国哲学与道家的词汇：无用？而且是无用的神学？因为上面的三重挑战，其实都关涉现代性最为根本的盲点，这也是我们当下历史的痛点，核武战争的发生，技术的普遍实用，虚无主义的享乐，其实都最终关涉到神学式的信念与信仰，肯定个体有限性与必死性的现代人性，如何再次面对不死性与永恒性？这是康德式二律背反的另一种表达？或者说，在无用的吊诡思考中：现代性导致了神学之根本的无用，但现代性也许并不知道，这无用要成为大用，这就要施行一种“逆转的辩证法”，这还不是黑格尔与马克思式革命的肯定辩证法，也不是否定神学与虚无主义的否定辩证法，而是一种“先在地”肯定无用，无论是人性还是哲学的无用，却又要反转这无用，使之转化为大用，但又依然还保持为无用！如此“用无用”的吊诡逻辑，如何得以实现？这是否让哲学-神学获得了一双来自于东方智慧的诡异面孔？</p>\n<p data-pid=\"do3v-HlH\">围绕无用的吊诡逻辑，夏可君教授之前在他的相关著作中已经有所讨论，最初是《一个等待与无用的民族——庄子与海德格尔的第二次转向》，围绕海德格尔最近《黑皮本》的出版所导致的反犹主义争论，西方学界似乎要彻底“打死”海德格尔，但夏可君发现了1943-1945-1949年艰难时世之际的另一个海德格尔：面对德意志第三帝国的必然战败，而且被分裂的命运；而无论世界大战谁输输赢，整个西方文化或欧洲都已经沉落；同时自己之前的所有哲学工作，无论是1920年代的《存在与时间》还是1930年代寻求另外一个开端的《哲学论稿》，都是迷途歧路或已经彻底无效。从存在历史的危险中，这也包括他的反犹主义，都进入了历史命运的陷进，他必须找到一条出路，而整个西方的资源都不再可用，他只能从远东中国寻找灵感，这就是道家的无用之思。</p>\n<p data-pid=\"vL7ZQo7O\">这是海德格尔异常残酷的智慧洞见：无论是美国式自由民主“加”资本的技术化，还是前苏联的苏维埃专政“加”工业电气化，抑或是希特勒法西斯主义的种族主义“加”总动员的战争机器，都会导致存在历史的末世论终结，来自于尼采的权力意志与云格尔所言的工人劳动型相所结合形成的存在主宰与谋制，是力造性的技术实现，也必然导致人性的自我毁灭与自我摧毁，如果犹太性的计算思维也参与到这个进程之中，当然也会招致灭绝。整个现代性已经终结（这完全不同于福山等人的历史终结论），这是异常彻底的“反现代性”的判断反思！但如何从此现代性的虚无主义命运中找到出路？</p>\n<p data-pid=\"F5gvgTAy\">道家的无用律令在此危难时刻出现了：西方的人性本质必须发生逆转，不再有命运（如同德里达后来最为彻底地宣称），德意志民族必须成为一个无用的民族，才可能在一个彻底荒芜化的世界，一个已经彻底被技术与人性用坏与用死的世界，即“存在的末世论”与“用之最后”的非世界上，海德格尔第一次呼吁，让西方的人性转化为无用，让无用成为人的本质，再通过“用无用”的吊诡，让无来用——让自然来用——让让来用，如此的“三让”才可能有着世界被拯救的可能性。这就是夏可君自己所总结出来的“集-让”（Ge-Lassen）：“三让”的原初伦理如同康德式的绝对律令！</p>\n<p data-pid=\"bj-gMdGY\">以此逆转，我们可以看到当今“俄乌”战争冲突中“新欧亚主义”（Eurasia）代表人物杜金的“第四维”政治哲学，同样也是反思美国与欧洲的现代性路径，而走向以俄罗斯东正教，以斯拉夫民族的欧亚历史记忆，加上地缘政治的冲突，试图在海德格尔失败的开端之后，在批判自由主义、共产主义与法西斯主义的全球化合流模式导致的所谓历史终结之后，再一次以“斗争”的方式，而不是“让予”的方式，开启了战争乃至于核武器的威胁模式，逼向了第三次世界大战的危险，这不就让历史再次回到了1943-49年的危难时刻？</p>\n<p data-pid=\"DI4oYWiU\"><b>而夏可君所开启的东方道家智慧，无用与让予结合的“第二次转向”，如果回到元代新战国时代的“亚欧主义”（Asiope），这是夏可君与他台湾“庄子之友”们持续十年的讨论，它不是日本军国主义的东亚共荣圈，也不是元帝国的战争征服，而是把丘处机全真道教的“望太平”与成吉思汗的“长生天”结合，寻求新的“一言止杀”，以和平为主的“第五维政治”。当然这必须对比另外两重历史思维：此“战国时代”的跨文化关系，必须一方面要面对中华帝国的向心性与土地性的“天下观”；另一方面必须接受以海洋为主导的“全球史”未来重建观，只有同时以“三重历史观”来重思才完整，这也是德里达在思考欧洲之为海角，民主还处于到来之中，各个文明必须还原到一个荒漠的地带，或者一个廓纳（柏拉图式的chora）式的虚位上，才可能形成对话的场域，而这当然需要悬置各个文明自身的绝对信念，而杜金的新欧亚主义乃是历史政治神学的挑战，这也是对于施米特敌人式政治神学的接续。</b></p>\n<p data-pid=\"MCEG_Tvz\">当今世界历史，到底是东升西降，还是东西方同时在上升与下降？夏可君的新书给出了非常深入的思考，围绕大地、海洋与天空，三者之间所展开的“第五维”思想实验，也非常吸引人。</p>\n<p data-pid=\"mgAGk0dD\">而如此彻底的认知，其实不仅仅是反犹主义的海德格尔与东正教神学化的杜金，夏可君在之前《无用的文学——卡夫卡与中国》的写作中，已经指出了犹太文学家与思想家对自身命运的预先觉察。在大屠杀之前，卡夫卡已经预感到现代人的无家可归，而一直处于散居状态的犹太人与现代虚无主义不是更为相似，与更为严酷了？那么，为犹太人重新寻找家园，也就是在为现代人克服虚无主义，但这不可能是回到耶路撒冷——那是进入唯一神论冲突的漩涡，中东与9·11危机与之相关；但也不是从远东的儒家获得家的温暖，同样作为族长的亚伯拉罕父亲形象一直要求着儿子的献祭牺牲，从以撒到耶稣；那就只能从道家，因为道家为犹太人提供的乃是一个“邻村”，“以自然为家”！而不是进入城堡！</p>\n<p data-pid=\"4SltKhuQ\">因为这要求人性回到自然，临近的村子都是以“自然”作为关联的背景与风景，而城堡乃是现代都市与官僚化的象征，或者现代水晶宫的技术集置！“邻村”就是现代人性生存的余地，是历史自然的剩余地带，只有有着“余让”的空间（廓纳就是如此），才有着存活的余地，夏可君深入思考了来自于海德格尔与德里达所思考的“虚托邦”余地空间的可能性。这也是本雅明在流亡之中围绕卡夫卡最为短小小说《邻村》所给出的思考，《邻村》改写自《道德经》的小国寡民与“鸡犬之声相闻”，但也体现了犹太教的弥赛亚回忆，并感受到现代虚无主义深渊瞬间，是这三重观念的整合：中国道家的自然主义诗学，犹太教的弥赛亚主义，现代解构哲学的反讽，但都被“无用的诡异逻辑”所连接：“认认真真做某事，同时又空无所成。”这就是本雅明自觉从道家那里获得的启示！</p>\n<p data-pid=\"Nebgb7gp\">在夏可君这部600多页的新作中，他从本雅明《神学政治学残篇》的争论出发，对之做出了逐字逐句的解读，释放出里面丰富的历史意涵，发现了其中幸福辩证法的逆转与虚无主义的方法，越是虚无，就越是无用，也就越是需要救赎，因此神学的信仰被无用化之后，恰好相反，需要另一种无用的信仰，但依然还是保持为无用。围绕此颠倒与逆转的可能性，夏可君随之深入展开了本雅明思想中的道家元素，尤其是与布莱希特的对话中，以及在技术复制中寻求光晕的可能性时，再次借用了中国文化的自然相似性原理，强调了自然自身生产的无用游戏，如同凯卢瓦（R.Caillois）了不起的发现，这是中国哲学家第一次严肃接纳凯卢瓦的自然神圣性人类学，在蝴蝶翅膀的拟态游戏中，既奢侈又无用，而其中却启发了技术与自然再次结合的可能性，由此让夏可君回到了中国道家的蝴蝶梦，如何被蝴蝶做梦见，甚至回到生命原初的“灵根种子”，在生命技术上的对应物则是干细胞技术，这是对另一种人性及其不死性的诡异发现。</p>\n<p data-pid=\"THakKr7L\"><b>从海德格尔的差异到德里达的延异，再到夏可君的诡异，当代哲学与神学在四重不可能性的模态中在该书中得到了初步的讨论：犹太教弥赛亚性的“不可能的不可能性”之为延异，“不可能的可能性之”为海德格尔式与基督教式的神学现象学，“可能性之为可能性”的自然拟似性的道家哲学，“可能性之为不可能性”的技术哲学的智能灵媒化。这“四重不可能性”如何形成诡异的综合与逆觉的转化，也许是未来哲学与神学必须回答的唯一问题。</b></p>\n<p data-pid=\"KUmYTrFw\">此书有着严格的学理讨论，这可能是夏可君教授过去20年的学术生涯中最为重要的一本书，他聚集了作者对于西方几十年的思考与研究生课堂教学，无论是作为德里达与南希解构学派的中国翻译与编辑，还是在《身体》一书中围绕“触感”的凝练概括，而此新书从德里达思想中最为艰深与前沿的“廓纳”或“虚位”出发，把犹太教的弥赛亚与道家的自然性，接续本雅明的隐秘思考，而加以新的综合，提出了“自然的弥赛亚化与弥赛亚的自然化”的双重转化，这是对本雅明与德里达东西方对话思想遗产的再次发扬与深入展开。</p>\n<p data-pid=\"euHV4JdZ\">非常有趣的是，夏可君把海德格尔这个反犹主义的德国人置于两个犹太人本雅明与德里达之间，其实，这个中间人，本来应该是庄子，因为这是中国道家的无用之思，第一次进入了世界哲学与现代哲学的话语讨论空间，这是过去几十年来中国哲学迈出的第一步，它建立在坚实的学理与艰难的思考之上，它踩着历史的痛点，面对生命重新处于无保护性的疫情困境，试图让哲学或神学说汉语，让汉语哲学重新以现代性的世界眼光，重新开端。</p>\n<p><br></p>\n<p data-pid=\"sw8sICP4\">本书的一些关键词，期待学术界，从神学，哲学，政治神学，比较哲学，技术哲学，本源伦理学，艺术神学，等等领域，展开进一步的对话与讨论：</p>\n<p data-pid=\"CIXQmSes\"><b>纯粹哲学的演变，从差异，延异与诡异，可能性与不可能性的几重模态。弥赛亚性与自然性的转换关系，犹太教与道家的跨文化对话。第一技术与第二技术，灵媒，自然的生产与生命技术，灵根种子与生命宇宙技术。余让，让自然来为，让无来为，让让来为，对于泰然让之的转化。余地，chora，虚托邦。</b></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/keke-47-98?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">夏可君</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/374206610/answer/2769600826?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">3 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/22953757?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">有没有人文社科类的好书推荐？谢谢</a><br><a href=\"http://www.zhihu.com/question/558368960?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">有哪些人文社科类的书籍值得推荐？</a><br>\n","link":"http://www.zhihu.com/question/374206610/answer/2769600826?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"家的风格 | 用一米八的桌面，承载两种截然不同却相伴而行的生活方式","date":"2022-11-22 08:00:00","description":"针对「生活美好」这件事情的判定维度有很多，但在家装这个维度，简单粗暴但又直截了当的一个成功标准，莫过于来自造访者一句「你这简直是我的梦中情X，什么时候搬出去给我住」。而屡获这句殊荣的，则是来自我房间的 ...<a href=\"https://sspai.com/post/76861\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/76861"},{"title":"一派·Podcast | 从 Ask Apple 畅想 Apple 生态的未来","date":"2022-11-22 06:30:00","description":"谈谈嘉宾们在 Apple 生态开发中积累的经验，以及对于 Apple 未来开发环境的预期与看法。<a href=\"https://sspai.com/post/76927\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/76927"},{"title":"Windows on ARM 笔记本能用了吗？聊聊我的 Surface Pro X 体验","date":"2022-11-22 03:16:03","description":"Windows on ARM 足够好用，却还有一些不可忽视的问题。<a href=\"https://sspai.com/post/76849\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/76849"},{"title":"有没有追妻火葬场但破镜没重圆的故事？","date":"2022-11-22 02:02:26","description":"\n<p data-pid=\"gLVpGvZ4\">富豪老公出轨那天，从小在孤儿院长大的我，我为了孩子想妥协，但富豪姐姐不干了。她开着豪车来到我家，当着我婆婆的面给了我一张一千万的支票。</p>\n<p data-pid=\"6RA-foCI\">「离开渣男，跟我回家。」</p>\n<p data-pid=\"NE5Iyl5u\">我愣了一秒，揪着孩子立马坐上她的奔驰：「好嘞，马上就走。」</p>\n<p data-pid=\"W7QYOQ84\">1</p>\n<p data-pid=\"eEoVSSRc\">我第一次见到祈风是在孤儿院。</p>\n<p data-pid=\"V1rTtp1Z\">他穿着小西装，扎着小领带，白白净净的小脸，精致又可爱。</p>\n<p data-pid=\"DmOABZy7\">院长妈妈说，他被爸妈遗弃了，以后孤儿院就是他的家，我们就是他的家人。</p>\n<p data-pid=\"lJHsJBEH\">像他这么好看的孩子都被爸爸妈妈丢了，再想想自己好像没那么难过了。</p>\n<p data-pid=\"2MhjN29Z\">祈风蹲在角落，不愿意和我们吃饭。我把饭碗塞进他手里，分给了他一块肉。</p>\n<p data-pid=\"t-kwi3ML\">他刚想咬一口，却被旁边的小朋友们抢了饭碗。</p>\n<p data-pid=\"w-G6XUEc\">「你不能吃她的东西，他爸是杀人犯，吃了她的东西小心她爸杀了你。」</p>\n<p data-pid=\"d-GhBHct\">「你爸才是杀人犯！」</p>\n<p data-pid=\"0mYwN-PO\">我和那位出言不逊的小胖子打了起来，祈风为了帮我，被打掉了半颗牙。</p>\n<p data-pid=\"rJgZwL7f\">那晚，我躲在角落里流眼泪。</p>\n<p data-pid=\"tC5BR1UV\">祈风爬到我床上，伸手给了我一颗糖。</p>\n<p data-pid=\"GNc2ty4U\">想到以后会和这样好看的朋友陪着，好像又没那么难过了。</p>\n<p data-pid=\"4ZC2KHjm\">可是，没多久，他被爸爸妈妈接走了。</p>\n<p data-pid=\"hNSdO_TH\">我看着他躲进妈妈的怀里，第一次感受到了强烈的背叛和失落。</p>\n<p data-pid=\"8yDBoPZn\">「你不是说你和我一样，没有爸爸妈妈吗？」临别前，我怯生生地说道。</p>\n<p data-pid=\"O2-6IyGd\">他帮我抹了抹眼泪，憋红了脸，「谁让那时候他们老打我。」</p>\n<p data-pid=\"DU3LrhQn\">我明白了，祈风说的是气话。</p>\n<p data-pid=\"e1Wx4FX5\">祈风离开的这些年，时间过得很快，一晃十几年过去，我该上初中了。</p>\n<p data-pid=\"k2KgAEDb\">院长妈妈没有能力支持我们二十个孩子的学费，就在她为此愁白头时，祈风回来了。</p>\n<p data-pid=\"Xq_unjFI\">往昔奶包子已长成翩翩少年，光是往我面前一站，就能让我心动不已。</p>\n<p data-pid=\"c7-kcwqU\">祈风把他的机车卖了，瞒着家里，资助孤儿院的孩子读完了初中高中，唯独没资助那位曾经嘲笑过我的小胖子。</p>\n<p data-pid=\"9EUmzgGR\">高考结束那年，本想留在南方上学的他，偷偷为了我改了志愿。</p>\n<p data-pid=\"zgbXIeWW\">大学开学，他在北方大学逆着人群朝我走来，拎过我的行李箱，带我报道，帮我铺床，一条龙服务细心又体贴。</p>\n<p data-pid=\"kg9hCIl-\">一路上引得好多女生围观，甚至还有人以为他是我哥，问我要他的微信。</p>\n<p data-pid=\"x_bZmx3P\">我只是笑笑，没有说话。</p>\n<p data-pid=\"TwRA7dSx\">军训后，祈风被选为艺术系的校草，追我的消息也传遍了全校。</p>\n<p data-pid=\"RLplB2Ft\">可他打扮优雅的妈妈始终刻在我的记忆里，我根本不敢奢望能和他这样的人在一起。</p>\n<p data-pid=\"AiuenWYU\">即便喜欢得要命，也只是冷着脸保持着距离。</p>\n<p data-pid=\"J-2hcXWf\">拒绝祈风那晚，全校的女生都嘲笑我不知好歹。</p>\n<p data-pid=\"00kduWqD\">我被舍友孤立，被同学排斥。她们趁我睡觉剪我头发，趁我不在往我被子里丢老鼠。</p>\n<p data-pid=\"FGB8ItrZ\">我没搭理她们。</p>\n<p data-pid=\"q4W2FKd3\">可我越不搭理她们，她们就越变着花样侮辱我，还把我的身世放在了学校论坛。</p>\n<p data-pid=\"MTCzOBe3\">我最不堪的一面，被人撕开放到了众人面前。</p>\n<p data-pid=\"tCRcwLbc\">看着同学们个个对我评头论足，我难过得一个月没睡好觉。</p>\n<p data-pid=\"V49sP_3D\">祈风知道后，直接冲进女宿舍，把死老鼠丢进女生的被子里。当着宿管的面，把她的头发剪了。</p>\n<p data-pid=\"mKiVHH_O\">后来，那位女生的男朋友把我堵在厕所。</p>\n<p data-pid=\"IsJ0bDe_\">「装什么装？小三的女儿还装得这么清高？」</p>\n<p data-pid=\"ZmbCG7zk\">「敢让祈风那阔少爷动手打我的女人，你能耐啊！」</p>\n<p data-pid=\"hAnkMGPV\">「我现在倒是要看看你有什么本事！」</p>\n<p data-pid=\"nYvY0q7r\">他当着众多正在上厕所男生的面，肆无忌惮地撕扯着我的衣服。</p>\n<p data-pid=\"E9ewgUFz\">我被他压在墙上，毫无反抗的能力。</p>\n<p data-pid=\"YRImUX9d\">祈风询问赶来时，我赤裸着身体蜷缩在墙角，手臂上全是抓痕，衣服裤子也被丢进了马桶。</p>\n<p data-pid=\"ktX8U7O-\">「江晚！」</p>\n<p data-pid=\"EeZ1Ze3G\">听到祈风叫我的这一刻，我的心都碎了，眼泪止不住啪啪往地板上掉。</p>\n<p data-pid=\"v6J3mPJ_\">他手忙脚乱想抱我却不知从何下手，最后只能脱下衣服，闭着眼披在了我的身上。</p>\n<p data-pid=\"2t_IWk4N\">「江晚，你别哭啊！没事儿啊没事，我在呢。」</p>\n<p data-pid=\"swWitdRf\">「晚晚，求求你和我在一起好不好。」</p>\n<p data-pid=\"gpfdOjRd\">厕所里，回荡着我抽噎和喘气的声音。</p>\n<p data-pid=\"OGUgTPXZ\">我颤抖着说不出话来，许久才从喉咙眼里挤出来一个字：「好。」</p>\n<p data-pid=\"Stz7Rgk8\">就像濒临死亡的人，抓住生命中的最后一丝光亮。</p>\n<p><br></p>\n<p data-pid=\"MAANrnUK\">2</p>\n<p data-pid=\"aHgV_EIg\">那些欺负我的同学被祈风告上了法庭。</p>\n<p data-pid=\"vUnr0JvD\">结果是什么，他没有告诉我，我也不想知道，</p>\n<p data-pid=\"1DXAstTf\">和祈风在一起之后，我没有再受半点欺负。</p>\n<p data-pid=\"uTUWXFtv\">他带我融入他的圈子，带我去吃饭，去唱歌，去健身，去打球。</p>\n<p data-pid=\"c8gH6-Fs\">所有美好的事情一下子都降落到了我的生活里，可是我知道，这不属于我。</p>\n<p data-pid=\"jKu3JzNV\">大学毕业那晚，我和祈风去了酒店，开了房。</p>\n<p data-pid=\"fou6x896\">两个月后，我怀孕了，他不顾家人反对和我领了证。</p>\n<p data-pid=\"nx1bR0Mu\">虽然没有婚礼，没有戒指，没有仪式，但我却觉得自己是全天下最幸福的女人。</p>\n<p data-pid=\"PB0PUL25\">那种抓不住的幸福，好像有了一点点可循的踪迹。</p>\n<p data-pid=\"iNi0eFuC\">婚后，祈风没了家庭的支持，他从零开始打拼。</p>\n<p data-pid=\"FY9rxDqj\">成天忙于工作，婆婆心疼儿子，提出要来照顾我。</p>\n<p data-pid=\"Bz5FFcG9\">可实际上，她对我十分不待见，生完孩子的第二年，直接把我赶回了乡下老家。</p>\n<p data-pid=\"eiaYQNtX\">刚开始，祈风非常生气，还和他妈吵了起来。</p>\n<p data-pid=\"JQtFDQPU\">我不想他和家人吵架，觉得乡下也有乡下的好处。青山绿水的，说不定对孩子也好。</p>\n<p data-pid=\"2pGJ5nXg\">为了证明我不是贪图他的钱才和他在一起，婚前我和他签了协议。</p>\n<p data-pid=\"I91HX19o\">不论他以后回不回祈家，他的钱我多一分都不会拿。</p>\n<p data-pid=\"grA2ie26\">只是，我没想到，我在乡下这一住，就是八年。而在这八年期间，我和祈风只见过4次，他只给我打过四次钱。</p>\n<p data-pid=\"JY7JF8ah\">我心疼他创业不易，一块钱省做几块钱花。</p>\n<p data-pid=\"5TkrxYzn\">好在每次见面，他都对我无比温柔体贴，都快三十的人了，却比之前更粘人。</p>\n<p data-pid=\"4HxFmBO-\">慢慢的，祈风的事业逐渐走上正规。</p>\n<p data-pid=\"Mzt884aW\">而我已经习惯了，不想伸手问他要钱的生活。</p>\n<p data-pid=\"zSwmyZZt\">于是，为了能更好的养活自己和孩子，我开始拍视频做直播，硬生生把自己逼成了网红博主。</p>\n<p data-pid=\"Qkl14P17\">幸运的是，我拍的视频深受大家喜欢，转眼3年过去，我在全网拥有了好几百万粉丝。</p>\n<p data-pid=\"jqEf6lDA\">许多品牌方来找我合作，我的生活不再是只有祈风。孩子小的时候，我都是带着孩子一起出门。</p>\n<p data-pid=\"m9yiVvjF\">可是现在孩子马上就要期末考试了，再怎么样也不能耽误他的学习。</p>\n<p data-pid=\"LcIlP0uK\">纠结再三，我拿起手机，给许久未见的婆婆打了个电话。</p>\n<p data-pid=\"pyX0f_Z2\">「妈，你这周能来给我带下朵朵吗？」</p>\n<p data-pid=\"5tMC-V3_\">「你谁啊？」</p>\n<p data-pid=\"E-1tme7c\">「我是......」</p>\n<p data-pid=\"w5q7-aM8\">听着嘟嘟的手机提示音，我的心凉了半截。</p>\n<p data-pid=\"GH49iN3x\">我又给远在市区的祈风发了个消息，想让他带两天孩子。</p>\n<p data-pid=\"tQe7Gcyp\">可祈风他说他已经离开星城，到上海谈合作去了。</p>\n<p data-pid=\"3TranvJg\">我失落的挂掉手机。</p>\n<p data-pid=\"kp7yGoPR\">第二天，我的豪门婆婆踩着高跟鞋，带着她的宠物狗来到了我住的地方。</p>\n<p data-pid=\"sv8VFGly\">想必是祈风叫的，我心里的失落有所缓解。</p>\n<p data-pid=\"O2wzjR24\">「你看看你，这是人住的地方吗？」</p>\n<p data-pid=\"QzA8onvD\">婆婆一脸嫌弃，我强忍住不悦，把收拾得最干净的房间让给了她。</p>\n<p data-pid=\"jCKeqR2j\">「妈，这几天辛苦你帮我带几天朵朵。其实也不用怎么带，她放学了你去接一下就行。」</p>\n<p data-pid=\"FKjwIMZP\">「这里点不了外卖，我冰箱里做了一个星期的饭，你讲究着吃一下。」</p>\n<p data-pid=\"y2oK41o7\">「要是实在吃不惯，我让人给你从县里带回来。」</p>\n<p data-pid=\"0rgFGw0q\">婆婆不屑地看了我一眼，我没再多说，匆匆骑着小电驴离开了家。</p>\n<p><br></p>\n<p data-pid=\"jkEaSPsw\">3</p>\n<p data-pid=\"qhpvQfPk\">我坐 了八个小时动车，来到了品牌方的城市。</p>\n<p data-pid=\"kfUDX_5i\">品牌方非常热情，派了负责的工作人员来接我，还给我安排好酒店休息。</p>\n<p data-pid=\"-Zs3FQxN\">「江晚姐，你和你老公一起来的吗？」走到酒店大厅的时候，品牌方一工作人员忽然问我。</p>\n<p data-pid=\"7fO1usdX\">「没有呀，他工作很忙。」我刚说完，抬头就看到</p>\n<p data-pid=\"yclMHoki\">我老公带着一位女人从我面前走过，拐进了隔壁的主题双人房。</p>\n<p data-pid=\"0901PD5A\">刹那间，空气中弥漫着一股尴尬的气息，很是微妙。</p>\n<p data-pid=\"59xSnGwo\">「可能是我看错了。」</p>\n<p data-pid=\"3R5tOQ_9\">「确实挺像啊。」</p>\n<p data-pid=\"kh4W_WaO\">我假装没看出来对方是我老公，笑嘻嘻地走进了品牌方给我准备的酒店，就在我老公隔壁。</p>\n<p data-pid=\"hIa3G8U3\">品牌方走后，本该准备明天谈判工作的我，完全没了工作的欲望。</p>\n<p data-pid=\"OJ_jNWly\">我给祈风打了无数个电话，先是没人接，后来直接关了机。</p>\n<p data-pid=\"oRkmPi5P\">我的心掉到谷底，刚才那人，真的是祈风吗？</p>\n<p data-pid=\"sUpFmQbW\">直觉告诉我是，可我不愿承认，除非我亲眼抓奸在床。</p>\n<p data-pid=\"a2UVEtgy\">我换上睡衣，走出门，假装在走廊放松，足足等了3个小时，都没人出来。</p>\n<p data-pid=\"B37wGElR\">我安慰自己，肯定是我自己看错了。</p>\n<p data-pid=\"iSHzGsek\">就算男女同处一室，也不一定会发生关系。</p>\n<p data-pid=\"Q3yXNXTE\">说不定，他真的是在工作。</p>\n<p data-pid=\"MM6kIt4s\">我回到房间，坐了一天车的我累得浑身发酸。</p>\n<p data-pid=\"Y3Ms6Gr4\">刚躺在床上，颇有睡意，我就被一阵呻吟声吵醒了。</p>\n<p data-pid=\"jgsQHoxt\">我失眠了，隔壁的人折腾了一晚上。</p>\n<p data-pid=\"dQiK2IM4\">第二天，我没堵到祈风。</p>\n<p data-pid=\"xocuKn6e\">和品牌方谈完合作后，我立马回了星城，还给了这个酒店的隔音差评。</p>\n<p data-pid=\"N-o5YXrZ\">车上，我想了许多，回忆起祈风对我的种种，尽管心有不甘，我还是决定为了孩子妥协。</p>\n<p data-pid=\"kJTP3M0u\">毕竟我一个孤女，背后无依靠离了婚往后生活可能更难。</p>\n<p data-pid=\"eamGUuz1\">揣着万般矛盾的心情，我回到家发现自己养的鸡鸭鹅丢了，孩子也丢了。</p>\n<p data-pid=\"2_oTfzE1\">我看着乱得无处下脚的家，很是崩溃。</p>\n<p data-pid=\"u-HG1bcN\">「妈，你怎么把鸡鸭鹅全放出来了啊？」</p>\n<p data-pid=\"UlMU4VQU\">「妈！」</p>\n<p data-pid=\"fXWqaL31\">我连续喊了几声，家里都没人回话。</p>\n<p data-pid=\"WvRBhNXq\">我走到二楼，看到婆婆正躺在床上玩手机，毫无帮忙之意。</p>\n<p data-pid=\"croUgMMF\">「妈，朵朵呢？」</p>\n<p data-pid=\"35j2VKT5\">婆婆白了我一眼，「我怎么知道，她的脚又不长在我身上。」</p>\n<p data-pid=\"e7pd9gnN\">我深呼一口气，在屋子里到处找孩子，可是找了一圈，我才意识到孩子丢了！</p>\n<p data-pid=\"pOHs4Vrs\">我冲上楼，颇有些气愤地询问婆婆孩子去哪了，最后一次见面是什么时候。</p>\n<p data-pid=\"-Dc89nGM\">奈何婆婆还是躺在床上玩手机，不爱搭理我一眼，嘴里还不停说落我看不好孩子还不体贴老人。</p>\n<p data-pid=\"5yVal-yZ\">我心里急得要死，根本没心情和她吵架。</p>\n<p data-pid=\"UPGo5pLM\">我冲出门去，问遍了村子上的人，可都没人见到朵朵。</p>\n<p data-pid=\"QuWh3KKr\">从村上跑到镇上，我足足找了一晚上还是没看到孩子的踪影。</p>\n<p data-pid=\"yBW-rIb_\">我来到警察局想报案，映入眼帘的是紧闭着的大门。</p>\n<p data-pid=\"wdY93KoA\">寒风习习，我蹲在警察局门口睡了一觉。</p>\n<p data-pid=\"fksizWhg\">第二天报了案，我拖着疲惫的身体回家，刚走进家门，婆婆看到我独自回来，站在门口破口大骂。</p>\n<p data-pid=\"hzG7JVe1\">骂我弄丢了孩子，骂我学历不高身世不好给她家抹黑。骂我没有本事，拖累她的宝贝儿子......</p>\n<p data-pid=\"RtNPEwtY\">「妈，你别说了行吗？我累了。」</p>\n<p data-pid=\"2E5aaoag\">「哎呀，你真是好大的架子，难道我说错了吗？」</p>\n<p data-pid=\"0CoNxFhC\">「真是搞不懂，祈风怎么会喜欢你这种女人！」</p>\n<p data-pid=\"jmsJiq-K\">「妈！」</p>\n<p data-pid=\"SXyqYfhO\">反驳的话堵在胸口。</p>\n<p data-pid=\"Xbs_GNoZ\">想到我这些年又是独自带娃，又是洗衣做饭。</p>\n<p data-pid=\"LwkTaADf\">她没给我帮半点忙也就算了，还处处打压我，我心里就觉得委屈至极。</p>\n<p data-pid=\"Ntoso5en\">再加上祈风最近对我似乎是真的冷淡了许多，越想越难过，眼泪止不住地往下掉。</p>\n<p data-pid=\"0WyENOFW\">「哭哭哭，你就知道哭！」婆婆推了我一把。</p>\n<p data-pid=\"xLbji3Qz\">就在此刻想毫无保留地发泄出来时，门口缓缓驶进来一辆兰博基尼，紧接着走下来一位穿着高跟鞋且相貌精致的女人。</p>\n<p data-pid=\"o0MH_ivV\">「她骂你你不知道骂回去吗？我怎么会有你这么窝囊的妹妹！」</p>\n<p data-pid=\"GBvXQ_kC\">「？？？」</p>\n<p data-pid=\"ZTYy6u4h\">妹妹？</p>\n<p data-pid=\"LfkbDy-m\">不是，我怎么知道从来都不知道，我有这么一个富豪姐姐？</p>\n<p data-pid=\"cnUBWrB4\">新文来啦！喜欢的小可爱点个赞吧，真的非常感谢你们的支持！！</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/feng-xue-ye-gui-ren-48-85?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">风雪夜归人</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/497122453/answer/2738463953?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">775 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/550144834?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">有没有追妻火葬场但破镜重圆的故事?</a><br><a href=\"http://www.zhihu.com/question/566892968?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">有没有追妻火葬场破镜没有重圆的故事？</a><br>\n","link":"http://www.zhihu.com/question/497122453/answer/2738463953?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：微软修复打印机导致的升级问题，Twitter 已开始重启招聘等","date":"2022-11-22 01:05:49","description":"三星中国开始推送 One UI 5 正式版，美光宣布量产 LPDDR5X RAM 等。<a href=\"https://sspai.com/post/76926\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/76926"},{"title":"派评 | 近期值得关注的 App","date":"2022-11-21 09:43:30","description":"你可以通过文章目录快速跳转到你感兴趣的内容。如果发现了其它感兴趣的 App 或者关注的话题，也欢迎在评论区和我们进行讨论。<a href=\"https://sspai.com/post/76918\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/76918"},{"title":"如何正确夸赞那位会乐器的朋友：萨克斯风欣赏入门","date":"2022-11-21 08:02:29","description":"当那个会吹萨克斯的朋友露上一手的时候，除了「哇」也请不要吝啬你的夸赞——只是作为一个非专业听众，我们又该从哪些方面夸起？<a href=\"https://sspai.com/post/76915\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/76915"},{"title":"把小城市的街头拍出「电影感」，是种什么体验？","date":"2022-11-21 07:47:45","description":"\n<p data-pid=\"5GtHjn1Z\">这个体验我很多，之前我一直在东北寻找有电影感的小城，还专门出了一个系列叫《寻找文艺作品中的东北》。</p>\n<p data-pid=\"7thsDHRE\">这个系列的开头是从沈阳的艳粉街开始的......</p>\n<p><img src=\"https://pica.zhimg.com/v2-728f03c11000a56d4ef766308e07d4d4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"768\" data-rawheight=\"576\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"SmU9MpgL\">艳粉街，这是沈阳铁西区一条街道的名字，虽然这个名字的来历并不是我想得那样（邪恶），但是在一个重工业城区，取这么个名字，让我不得不对它多些青睐。我不由自主地联想到了漠河金矿的胭脂沟，都是男人世界中的女人名，一定是个有故事的地方。</p>\n<p data-pid=\"KD27BNnq\">我是从《铁西区》纪录片中知道的艳粉街，后来又在几本写东北八九十年代的小说里看到它。几次熏陶之后，艳粉街在我心里就成了东北文艺圣地，成了东北工业形象的缩影，我甚至觉得所有那些破败颓废的工业场景都是它的延伸。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-542313fa666ae00e7651f405391b8f0f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1080\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"h8GxSzpa\">当然，并不只是我，去年，很多人都感受到了以铁西区为代表的东北工业元素所产生的背景辐射。</p>\n<p data-pid=\"CRDwIfd8\">2019年，来自沈阳，被人称为“铁西三剑客”的三位作家，双雪涛、班宇和郑执，火了，唱《野狼disco》的老舅火了，还有一些来自东北的短视频创作者火了，文化娱乐领域时隔多年又集中凸现了大量东北元素，以至于有人将之称为东北的文艺复兴。</p>\n<p><img src=\"https://picx.zhimg.com/v2-998a6837ae2c6a50b85ccc4dc4d04cb0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"1258\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"7A_GvU8e\">文艺复兴与否，暂且不说，但是许多以书写东北迷茫时代的作品突然涌现，并不是偶然，这之前有过，未来也还会有。</p>\n<p data-pid=\"4NmI1HV8\">上世纪90年代那场剧烈的社会变迁给东北人的记忆打上了深深的烙印，工厂关门，工人下岗，那段艰苦的岁月如今成为很多文艺工作者的创作素材，也造就了东北在当代文艺作品中的形象。</p>\n<p><img src=\"https://pica.zhimg.com/v2-bd6f2fb7be5651a158ff5d5ead24569c_720w.jpg?source=b1748391?rss\" data-caption=\"《钢的琴》\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"692\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"xfQ6L9qn\">昏暗的色调，寒冷的气候，被雪覆盖的大地，萧条的大街，破败的建筑，独具特色的标语，冒烟咕咚的工厂，和永远屹立在城边的大烟囱，如果你留意过近些年以东北为背景的文艺作品，比如《钢的琴》、《白日焰火》、《无证之罪》、《地久天长》、《耳朵大有福》、《锤子镰刀都休息》、《hello，树先生》、《平原上的摩西》、《冬泳》、《生吞》等等，你会发现前面提到那些场景已经成了必不可少的东北元素。</p>\n<p><img src=\"https://pica.zhimg.com/v2-1c7bd0556a157405efdd3ec9b830e524_720w.jpg?source=b1748391?rss\" data-caption=\"《地久天长》\" data-size=\"normal\" data-rawwidth=\"3340\" data-rawheight=\"5010\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://picd.zhimg.com/v2-b5cc5012f23fe1de896dc2ce4f4ed575_720w.jpg?source=b1748391?rss\" data-caption=\"《白日焰火》\" data-size=\"normal\" data-rawwidth=\"2208\" data-rawheight=\"1242\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"juL3YnpI\">这些事物本是颓废衰落的代表，可是在文艺工作者的创作和历史的加持下，被二次加工的它们具有了一种美感，延伸出一种独属于东北的特质，往大了说就像是基于维多利亚时代而诞生的蒸汽朋克，往小了说就像美国的西部片一样，形成了自己的视觉风格。</p>\n<p data-pid=\"zNlYSLJg\">虽然这种“东北风格”还未成型，但我对这个概念已经有了很大的兴趣。我在豆瓣上建了一个“以东北为背景的文艺作品”豆列，然后一边补充着相关的影视剧和书，一边在东北各地寻找符合这些作品中塑造的东北。</p>\n<h2>横道河子</h2>\n<p><img src=\"https://picd.zhimg.com/v2-409403b2511d33c905467d0029181191_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"watermark\" data-original-src=\"v2-409403b2511d33c905467d0029181191\" data-watermark-src=\"v2-e262063a9f4390b95b92e8d6c1c9fbc8\" data-private-watermark-src=\"v2-ba8a375bcb173031b46d7a25321a9635\"></p>\n<p data-pid=\"XD4Z2Exy\">我第一个遇见的地方是横道河子。这是个位于中东铁路沿线的小镇，很完整地保留了过去东北小城的质感，所以这里常年有剧组拍戏，张艺谋、徐克都在这儿拍过电影。大明星来过的更是不计其数，张涵予，宋佳、林更新、李幼斌、秦海璐、梁家辉、太多了，当地人最不稀罕的就是明星。</p>\n<p><img src=\"https://picd.zhimg.com/v2-055881a7fdee327a5b8e2692c62602f6_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"watermark\" data-original-src=\"v2-055881a7fdee327a5b8e2692c62602f6\" data-watermark-src=\"v2-ca61963485ab6cdf9f815156cdb83a3d\" data-private-watermark-src=\"v2-8cbf6ff621a2c4039b2a8c688b665060\"></p>\n<p data-pid=\"N1PTvrVk\">所以当年我第一次到横道河子的时候，以为我一身背包客的打扮会像在其它小地方一样引来当地人的侧目，结果呆了两天，愣是没一个路人搭理我。是啊，明星都见惯了，我这样一个不起眼的游客算个啥。</p>\n<p><img src=\"https://picd.zhimg.com/v2-2aae9146b49e74e7ca0abb285176cee4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://picd.zhimg.com/v2-1cabfabc4499b125751666ed99d208d9_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"watermark\" data-original-src=\"v2-1cabfabc4499b125751666ed99d208d9\" data-watermark-src=\"v2-baeae1a10e9e8bd2a86e639921eb0cdd\" data-private-watermark-src=\"v2-f4dc15693c31cfd96ece37ad1bf9cc74\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-e62508adfc3b5fc6f7ad021fc7568bfb_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"watermark\" data-original-src=\"v2-e62508adfc3b5fc6f7ad021fc7568bfb\" data-watermark-src=\"v2-6f677c6da680c5909afe2fb89e8edc9e\" data-private-watermark-src=\"v2-e2b96549c73c72b649ee5bc78848ea43\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-3b2d3c0ee77af6a2ac2cb4860d038ec7_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"watermark\" data-original-src=\"v2-3b2d3c0ee77af6a2ac2cb4860d038ec7\" data-watermark-src=\"v2-0fc8bee4db5aa93c929c979e7148176d\" data-private-watermark-src=\"v2-268ff8222eb44a18ed1b745370dd14c8\"></p>\n<p data-pid=\"JWIJTZxc\">冬季雪夜的横道河子，特别有东北犯罪悬疑片的感觉。如果看多了这类电影和小说，到了横道河子，怕是要控制不住自己违法的欲望。</p>\n<p><img src=\"https://pica.zhimg.com/v2-e2205896c70928bec74dc544020ecd0c_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"watermark\" data-original-src=\"v2-e2205896c70928bec74dc544020ecd0c\" data-watermark-src=\"v2-37a4b9f85c0290cf2c4cab561ab1de62\" data-private-watermark-src=\"v2-5b85aaf43a39493048073e96a85bab79\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-1f22384abbc4c985b72f3fe46da1dda5_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"watermark\" data-original-src=\"v2-1f22384abbc4c985b72f3fe46da1dda5\" data-watermark-src=\"v2-f7c499ff7235ae516772c039507968ce\" data-private-watermark-src=\"v2-8d600ca0fe62155f1fb14c3cd87d5c57\"></p>\n<p><img src=\"https://picd.zhimg.com/v2-cafe0ead326f9d8bf41165db03d10860_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"watermark\" data-original-src=\"v2-cafe0ead326f9d8bf41165db03d10860\" data-watermark-src=\"v2-777639d74b0eb4dab0583a4b50ef578d\" data-private-watermark-src=\"v2-60236a0f3db726e70f479f6abeaa616d\"></p>\n<p data-pid=\"K96V47xV\">前段时间我去横道河子，夜晚正赶上雨夹雪，我打了一辆出租车，让司机带着我在镇里转一圈，顺便利用车灯打个光。</p>\n<p><img src=\"https://picd.zhimg.com/v2-367878e6ff7a7e8e5c1e910aa7399a21_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"watermark\" data-original-src=\"v2-367878e6ff7a7e8e5c1e910aa7399a21\" data-watermark-src=\"v2-7c5164a1bd7b207743a8fa671b3beafb\" data-private-watermark-src=\"v2-6c96a23bd74018c397215f3e3ca65bc0\"></p>\n<p><img src=\"https://picd.zhimg.com/v2-39634790753f22d1ced810c8eabbf86b_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"watermark\" data-original-src=\"v2-39634790753f22d1ced810c8eabbf86b\" data-watermark-src=\"v2-9ef1c42aaf22f0a03e0cce22dcc3b9be\" data-private-watermark-src=\"v2-cf01f9ab4d724d534fa113c94b7d846d\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-49f09372261286860ff7fc7b3273f347_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"watermark\" data-original-src=\"v2-49f09372261286860ff7fc7b3273f347\" data-watermark-src=\"v2-0544c8fb90bf51a6565738e3e97e3255\" data-private-watermark-src=\"v2-3fde3ae631b7d40f64ddcdb7adc18f3f\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"YHLr6GBj\">出租车拐进一条偏僻的小巷，我透过雨刷和纷飞的大雪看见前面车灯中有个打着伞赶路的女生，那一刻，我感觉自己就像个跟踪者。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d04839146ad7733ef08efd292367a8cd_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"watermark\" data-original-src=\"v2-d04839146ad7733ef08efd292367a8cd\" data-watermark-src=\"v2-97b4cbe3a5fb56b6940b6c5a0f6e5dae\" data-private-watermark-src=\"v2-e33727920a2b54c6fe0e4a53bd201b5d\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-2f9c6ab6fca835927c6d1c44d8acdbfc_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"opg-tkaz\">后来由于我入戏太深，让车慢慢跟在后面，把人家女生吓到了。其实我只是想离得近点，拍得清晰些。</p>\n<p data-pid=\"0wK2XJOE\">像在横道河子这样给自己加戏算是旅行中的常态，有戏才能发现更多好玩的场景嘛。不过大多情况，我都是被迫给自己加戏。我曾在阜新冒充过记者，在伊春冒充过马蜂窝的工作人员，在博克图冒充过中国国家地理的摄影师，还在扎兰屯和伊春的一个小镇被人当作日本间谍（这个是被加戏）。没办法，有时候没有点身份，一些地方不让进。</p>\n<h2>阜新</h2>\n<p><img src=\"https://pic1.zhimg.com/v2-2a6347fa3979f5bec131499e9efcf335_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"721\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"6J-VR0D2\">阜新那次我冒充的是新闻调查记者。</p>\n<p data-pid=\"NkiZcV-3\">一个出租车司机觉得除了记者没有人会喜欢拍这些锈迹斑斑灰头土脸的建筑。我本想否认的，那是我第一次冒充记者，有点怂。不过他说看我是记者，就带我多去几个这样的地方，我也就没再多说什么。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f61f8ee5ef00c272035aaf79f3bd62a8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"721\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"4LAi-bnW\">我在阜新遇到的两个出租车司机都很耿直，除了上面那个把我当记者跟我反映社会现状的，还有一个个性更暴躁的，直接跟我抱怨起煤矿关闭导致“粉红”从业人员流失，还说女人都是拜金的势利眼。</p>\n<p data-pid=\"Wrf0CHrZ\">现在回想，这位小哥的经历和我的拍摄主题太配了，“粉红题材”也是东北文艺电影中的一个关注点，秦海璐的成名作《榴莲飘飘》和齐溪主演的《下海》讲的就是东北下岗潮后，一些边缘女性外出谋求生路的故事。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-0883f7e02d9672d0b660a1b1ec636718_720w.jpg?source=b1748391?rss\" data-caption=\"《下海》\" data-size=\"normal\" data-rawwidth=\"2101\" data-rawheight=\"2987\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-33a1f505d8460313c3164a23efd70702_720w.jpg?source=b1748391?rss\" data-caption=\"《榴莲飘飘》\" data-size=\"normal\" data-rawwidth=\"798\" data-rawheight=\"418\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"8xzxqyvr\">阜新是我觉得最有上世纪八九十年代东北工业城市感觉的地方，海州露天矿，阜新电厂还有一些老城区和煤矿附近，就像是电影里的场景。和人说阜新时，有一句话我重复过好多遍：电影《钢的琴》故事原型在沈阳，实际拍摄地点在鞍山，可现实中最有电影里画面感的地方是阜新。不过在我去过吉林市之后，这话我想改一下，应该是它们两个都有电影中东北工业城市的质感。</p>\n<p><img src=\"https://picd.zhimg.com/v2-a821b2cd4309cc9afcd94517f0485453_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4813\" data-rawheight=\"3213\" data-watermark=\"watermark\" data-original-src=\"v2-a821b2cd4309cc9afcd94517f0485453\" data-watermark-src=\"v2-10ca524ce259f4d1607ff56dddbadb76\" data-private-watermark-src=\"v2-854daabf6e4b62f24fd2ec2ccbdd2827\"></p>\n<p><img src=\"https://picd.zhimg.com/v2-fa6dec8d67c413d1e5d5d97b500f24fa_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3851\" data-rawheight=\"2571\" data-watermark=\"watermark\" data-original-src=\"v2-fa6dec8d67c413d1e5d5d97b500f24fa\" data-watermark-src=\"v2-e5707a7ffcf043fd1bee59fcb13f9e2a\" data-private-watermark-src=\"v2-29e6637794aaa4bc96c1e5917fa53417\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-51a4c7680465429ed84e4b8e7fe5e51c_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4600\" data-rawheight=\"3071\" data-watermark=\"watermark\" data-original-src=\"v2-51a4c7680465429ed84e4b8e7fe5e51c\" data-watermark-src=\"v2-6b453474a8445662ba4e7321c9e72d5a\" data-private-watermark-src=\"v2-1742d172c9ce25c3d22c8417867da7e3\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-29c91becbc1b786afde6388487943f82_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4813\" data-rawheight=\"3213\" data-watermark=\"watermark\" data-original-src=\"v2-29c91becbc1b786afde6388487943f82\" data-watermark-src=\"v2-2b4727bfce0bf42fbd801baf436d4b8b\" data-private-watermark-src=\"v2-a868f66b4637d36db990adf440a2a050\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-79954176f35eeb6798a43e606329439b_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4571\" data-rawheight=\"3051\" data-watermark=\"watermark\" data-original-src=\"v2-79954176f35eeb6798a43e606329439b\" data-watermark-src=\"v2-bbdb0f9e67dbdb088ac6f3af3482fcd2\" data-private-watermark-src=\"v2-80a5c4de6be56e449c5bf8d9d4fec289\"></p>\n<p data-pid=\"m6WefhuF\">我一直觉得对不住阜新，因为我拍了它太多灰暗的一面。每次有当地人留言说我怎么把阜新拍得这么落后，我都很愧疚。所以我希望能让更多人发现阜新的美，去阜新转转。希望以后能有导演像我一样有眼光，在阜新拍摄电影，这样也能弥补一下我的愧疚。</p>\n<h2>吉林市</h2>\n<p><img src=\"https://pic1.zhimg.com/v2-edb32bd3c1ca7c365df9b0531ccd234e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"dsmVaS3U\">相比阜新，吉林市幸运多了，刘昊然和周冬雨主演的电影《平原上的摩西》在那里取了景。电影还没上映，就已经有很多人去吉林市打卡了。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d0fb46f2bfeafbe16fade435524db86f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"V6lQc8PK\">吉林市北边哈达湾周围，尤其是碳素厂和铁合金厂附近，有很多红砖楼、老式的报亭和招牌，还有拥挤的棚户区，这里很完美地保留了90年代工厂家属区的生活氛围，不过也保留了那个年代的窘迫。</p>\n<p><img src=\"https://pica.zhimg.com/v2-a79dc7b291cfeceb7e885d534a610a40_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"kW7c93MJ\">在吉林市碳素厂附近的棚户区，我碰触了一直想逃避的话题。我想了解下这里的厂子现在的经营状况，看看哪个关闭了能溜进去。我没想和当地人聊得太深入，因为走了这么多地方，看了那么多，我清楚这些地方的生活状况。如果我将重点放到这方面，那我的行程就没法走下去了，这是个过于沉重的话题，我实在无能为力。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5e2d52f040e6111891d268e28a750c0a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"4016\" data-rawheight=\"6016\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"W1V6GySw\">东北工业衰退已经持续三十多年，下岗潮也已经成为了历史，但是它所造成的创伤并没有过去，很多人都还在里面挣扎。我可以将那时遗留下的破败建筑当作美，可是我没有办法将仍然陷在苦难中的人们当作美。几次遇到老人拄着拐杖在泥泞的巷子里佝偻着走路，虽然这更像是电影中的画面，可我不忍心拍摄。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-49c8347e353dbb593b93e5bc87c1e997_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"5V6EFA9f\">我总能想起那个在门口扫地的大爷跟我说，他这辈子是完蛋了，到死也就窝在这个破地方了；还有神智不清的大哥跟我说，他不好意思去应聘电影的群演，嫌自己穿得太破了。</p>\n<p><img src=\"https://picd.zhimg.com/v2-47d90bf0aa2058d3996c5ddbac6825b9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-3835dc228f3bddcb4e5a56c5474f95d0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"CPJ0AlXs\">这个地方，2020年下半年才通自来水，巷子里的路即使在晴天都得掂着脚走，到处都是水坑。跟我一起去的小伙伴，看到拥挤的老红砖楼，不停地嘟囔，这里还有人住呢？还有人住呢？他觉得特不可思议。</p>\n<p data-pid=\"IKNmQ896\">《平原上的摩西》就是在这儿取的景，还在红砖楼租了一间房作为拍摄地。我一想到那些明星所表演的过去的艰苦岁月其实并没有过去，那是这里的人们还在过的日子，不免有些心酸。</p>\n<p><img src=\"https://picd.zhimg.com/v2-d0f45032e1ffd7859245ff5a4caad87f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"h-hXXxiE\">“寻找文艺作品中的东北”之旅最后一站，我去的是艳粉街，也只有去了艳粉街，才有底气写这篇文章。不知艳粉何以谈文艺作品中的东北啊。</p>\n<p data-pid=\"PqXuHZna\">不过如今的艳粉街已经完全没有书中所写得那种感觉了，甚至整个“铁西区”都不存在了，但这也没有什么可遗憾的，如果能让在那里生活的人们活得体面，铁西区作为工业历史纪念的使命可以交由东北其它地方完成，虽有损失，但值得。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d8219da128a8db4acc333c6ca04126a2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"uB_TY-Ju\">此篇文章无法把所有去过的地方都涵盖，还有扎兰屯、一面坡、晨明、五林洞、开山屯、呼中、莫尔道嘎、本溪、图们、丹东、抚顺没有写，此处不得不省略一万字，以后再慢慢展开。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-775bf48dc8b80c6d5ed75ce80af93f50_720w.jpeg?source=b1748391?rss\" data-caption=\"开山屯\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"watermark\" data-original-src=\"v2-775bf48dc8b80c6d5ed75ce80af93f50\" data-watermark-src=\"v2-6cffbce530027b599e63d6a40ed3fd4d\" data-private-watermark-src=\"v2-25beca47e9e705e11b4c228cf8ae3906\"></p>\n<p><img src=\"https://picd.zhimg.com/v2-0bdbf6e589ec5427862196ee61e159b3_720w.jpeg?source=b1748391?rss\" data-caption=\"金河\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"watermark\" data-original-src=\"v2-0bdbf6e589ec5427862196ee61e159b3\" data-watermark-src=\"v2-7a784a5d83daa3028cad4b9ef39294bd\" data-private-watermark-src=\"v2-26a4f54eea8d4f227090ada1612a9ef4\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-d93ee8fe3c7649f352d01842e0a57cab_720w.jpeg?source=b1748391?rss\" data-caption=\"金河\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"watermark\" data-original-src=\"v2-d93ee8fe3c7649f352d01842e0a57cab\" data-watermark-src=\"v2-777988533e1dc260e713b6dc1c36446c\" data-private-watermark-src=\"v2-420f5340a7e3363a3dbbafa793da006c\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-a97cc61c662ceb40c0caa2796477f90d_720w.jpeg?source=b1748391?rss\" data-caption=\"根河\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"watermark\" data-original-src=\"v2-a97cc61c662ceb40c0caa2796477f90d\" data-watermark-src=\"v2-b4906ba37e2831b83ecf729aed959088\" data-private-watermark-src=\"v2-1768f88afbd81daede525a434fbe04d9\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-4ca19416cbabfd879ab47ee9a573c5a1_720w.jpeg?source=b1748391?rss\" data-caption=\"根河\" data-size=\"normal\" data-rawwidth=\"3802\" data-rawheight=\"6016\" data-watermark=\"watermark\" data-original-src=\"v2-4ca19416cbabfd879ab47ee9a573c5a1\" data-watermark-src=\"v2-5eabf93435f0dba28d71e6f38d27cf0d\" data-private-watermark-src=\"v2-328a027200c059c7cf5a05d74e34596b\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-3ea72af811f2fbb64a0081ccc824315e_720w.jpeg?source=b1748391?rss\" data-caption=\"金河\" data-size=\"normal\" data-rawwidth=\"6016\" data-rawheight=\"4016\" data-watermark=\"watermark\" data-original-src=\"v2-3ea72af811f2fbb64a0081ccc824315e\" data-watermark-src=\"v2-475de5672e45ef729526d6fe1cf5b220\" data-private-watermark-src=\"v2-ae8c682ed91d47778658e67b290bcd54\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-0c4024c9ca79daf85aa6649b6d65f344_720w.jpeg?source=b1748391?rss\" data-caption=\"满洲里\" data-size=\"normal\" data-rawwidth=\"4928\" data-rawheight=\"3264\" data-watermark=\"watermark\" data-original-src=\"v2-0c4024c9ca79daf85aa6649b6d65f344\" data-watermark-src=\"v2-5bb0b8262653fdf915a38631476f709b\" data-private-watermark-src=\"v2-aa40ac59a79d6f38e3e2ae1efa3e08ba\"></p>\n<p><img src=\"https://picd.zhimg.com/v2-be27eeb014067fd35ba61928b94c32d5_720w.jpeg?source=b1748391?rss\" data-caption=\"绥芬河\" data-size=\"normal\" data-rawwidth=\"3264\" data-rawheight=\"4928\" data-watermark=\"watermark\" data-original-src=\"v2-be27eeb014067fd35ba61928b94c32d5\" data-watermark-src=\"v2-00aacd2c1d0d2cae2f84d72e6416c430\" data-private-watermark-src=\"v2-7f77ff0ff71855e81aeb17fe715b3750\"></p>\n<p><img src=\"https://picd.zhimg.com/v2-e3f5a76e81ca1283b890a4a9d1775366_720w.jpeg?source=b1748391?rss\" data-caption=\"根河\" data-size=\"normal\" data-rawwidth=\"4016\" data-rawheight=\"6016\" data-watermark=\"watermark\" data-original-src=\"v2-e3f5a76e81ca1283b890a4a9d1775366\" data-watermark-src=\"v2-209b5f4bf5b2635f80af4f51d11e624a\" data-private-watermark-src=\"v2-4f10d886989e42e69681c8e701427629\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-5d39c31ade9c46abfb330f864077fbbe_720w.jpeg?source=b1748391?rss\" data-caption=\"昂昂溪\" data-size=\"normal\" data-rawwidth=\"2362\" data-rawheight=\"1565\" data-watermark=\"watermark\" data-original-src=\"v2-5d39c31ade9c46abfb330f864077fbbe\" data-watermark-src=\"v2-bf21270029e34d8f239dbb62c61d1cbe\" data-private-watermark-src=\"v2-aa038a51762f796c6619656c779cc2cf\"></p>\n<p><br></p>\n<p data-pid=\"ZzwUOOIP\"><a class=\"member_mention\" href=\"http://www.zhihu.com/people/614f573dea8647f30ed0bcfc03866e3a\" data-hash=\"614f573dea8647f30ed0bcfc03866e3a\" data-hovercard=\"p$b$614f573dea8647f30ed0bcfc03866e3a\">@知乎旅行</a> </p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/ji-xian-zhen?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">杨二史密斯</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/567250476/answer/2767740253?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">5 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/406730782?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">有哪些电影为了拍摄而专门建立了拍摄场景？</a><br><a href=\"http://www.zhihu.com/question/29392083?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何创作出一副震撼人心的风光大片？</a><br>\n","link":"http://www.zhihu.com/question/567250476/answer/2767740253?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何逃离办公室？——Tim Ferriss 和他的《每周工作 4 小时》","date":"2022-11-21 06:10:03","description":"我们不需要像作者 Tim Ferriss 一样每周只工作极短的时间，只要能学会减少做无意义的工作，给自己创造更舒适的工作环境，想必我们也能更好地掌握自己的人生。<p>[......]</p>\n<a href=\"https://sspai.com/prime/story/vol1-four-hour-work-week\" target=\"_blank\">查看全文</a><p>本文为会员文章，出自<a href=\"https://sspai.com/prime/precog/vol01-cog-escape-and-%20return\" target=\"_blank\">《逃离与回归》</a>，订阅后可阅读全文。</p>\n","link":"https://sspai.com/prime/story/vol1-four-hour-work-week"},{"title":"本月玩什么 | Pentiment、战神 诸神黄昏、宝可梦 朱/紫","date":"2022-11-21 03:30:00","description":"你心目中的年度游戏又是哪一款？<a href=\"https://sspai.com/post/76900\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/76900"},{"title":"派早报：闰秒将于 2035 年停用，Epic 称谷歌向暴雪付费避免竞争等","date":"2022-11-21 00:53:50","description":"你可能错过的新鲜事国际计量大会决议2035年停用闰秒11月18日，各国代表在巴黎郊外举行的国际计量大会（CGPM）上决议，从2035年起，将不再人为向协调世界时（UTC）添加闰秒。协调世界时一般基于原 ...<a href=\"https://sspai.com/post/76903\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/76903"},{"title":"新能源汽车工业能否带领中国走向世界第一强国？","date":"2022-11-18 06:30:19","description":"\n<p data-pid=\"tdrjTDRd\">几年前在动力电池企业工作，也过了保密期。</p>\n<p data-pid=\"r3_vTSRA\">放一个动力电池的基础BOM给大家看下，下图是一个电芯的BOM。</p>\n<p><img src=\"https://picd.zhimg.com/v2-1d191ca614295f4dc1d3c30ee3cfaecc_720w.jpg?source=b1748391?rss\" data-rawwidth=\"400\" data-rawheight=\"646\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-1d191ca614295f4dc1d3c30ee3cfaecc\" data-watermark-src=\"v2-67b05f2a1f3c1505af4973455b28efd3\" data-private-watermark-src=\"v2-6896efb5e83397acfad88e214db78e7c\"></p>\n<p data-pid=\"FSV-DBYj\">这是一个普通电芯CELL的BOM图，就要用上三十几种材料。CELL组装成PACK，还需要其他的原料，如端板、绝缘块、绝缘罩、卡扣、密封垫等约50种材料。</p>\n<p data-pid=\"CSnt7vR_\">PACK组装成最后装车的动力电池组，还需要十几种材料。</p>\n<p><img src=\"https://picx.zhimg.com/v2-1498a5eaffe393d9492def3a22afda6e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"533\" data-rawheight=\"500\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-1498a5eaffe393d9492def3a22afda6e\" data-watermark-src=\"v2-cbea4347921b61749fe92896d002fd24\" data-private-watermark-src=\"v2-796bfc9a9dc5b74c7ebf9c9bef49eea5\"></p>\n<p data-pid=\"I1Nkr4up\">这样一块可以供给车企的动力电池，需要的原材料就是数以百计，而很多关键材料是执行A/B/C供应商的策略，A为主供应商，B为量起来后的次供应商，而C为备用供应商。</p>\n<p data-pid=\"kvqMPtV-\">当时大约算了下，有接近百个供应商，也就是说一块动力电池就带动了近百个企业的业务。</p>\n<p data-pid=\"GlsrPLzT\">而新能源汽车构架中类似电池这种组件有上千个，虽然不是说所有的组件都有动力电池这么复杂，但是带动的企业上千个是绝对有的。</p>\n<p data-pid=\"JktWgUIV\">所以一个车企所带来的经济利益链条是惊人的，基本一个城市有两三个车企，围绕在他们周围配套的数百家供应商，数十万名员工，绝对能撑起一个国家级别的工业开发区。</p>\n<p data-pid=\"5aogc9Im\">这也是为啥一个大车企的工厂落户，就会引来无数城市的争相推荐，因为带来的供应链条实在是太大太广了。</p>\n<p data-pid=\"LBUPHgDt\">以日本为例，日本去年的国内汽车制造了785万辆，带动的直接就业人口达到500多万人，间接就业人口500多万人。而日本的人口是1.26亿人，70%的工作人口约8800万人，意味着11%的工作人口都和汽车产业有关。而要知道日本工作人口的大头是第三产业，如果只算制造业的话，那汽车带动的制造业链条绝对是NO.1。</p>\n<p data-pid=\"wlzvbmpW\">2021年，丰田汽车的丰田章男曾公开抨击日本政府的碳中和政策。</p>\n<blockquote data-pid=\"4pWAnEy8\">“到 2030 年，纯电动汽车政策将导致日本失去 550 万个工作岗位和 800 万汽车产量，日本政府受到‘绿色制造目标’的启发，但它绝不是可持续的。”</blockquote>\n<p data-pid=\"B8IjWah9\">上述新闻，也间接表示了日本国内和汽车制造有关的人数。</p>\n<p data-pid=\"f_tCXkC2\">而日本的八大车企在2021年的产量是2321万辆，国外产出了国内的两倍产量，这意味着汽车制造给日本带来了巨大的利润，甚至可以说汽车制造就是日本现在的支柱产业，支撑住了日本经济的发展。</p>\n<p><img src=\"https://picx.zhimg.com/v2-0625eafaafd349304e86c5e0240c4951_720w.jpg?source=b1748391?rss\" data-rawwidth=\"600\" data-rawheight=\"448\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-0625eafaafd349304e86c5e0240c4951\" data-watermark-src=\"v2-3a3a77376eda0142882dc10ea4c7a38f\" data-private-watermark-src=\"v2-c87eccd9e2bb4a3b854c37514012eeb9\"></p>\n<p data-pid=\"xaN47oap\">反观国内，之前的传统汽车领域，谁是领头羊，谁就能拿取最大的市场份额，还能卖得出高价，获得最多的单车利润。</p>\n<p data-pid=\"tiI5aSjN\">从国内来看，那些拿取最大利润的肯定是<b>进口车型+国内合资制造车型</b>，国产车型基本都走的性价比和低利润的模式，要想起量，就得价低，利润啥的就不要多谈了。</p>\n<p data-pid=\"M6hjc-Dd\">随便看下2020年之前的SUV和轿车排行榜就可以看到，如果销量排前的国产车型，100%就是走的性价比路线，价格基本就是10万左右上下，不超过15万。而合资路线则是以差不多的配置，以20-35万的售价占据着销量排行榜的前列，用着翻倍的价格，攫取数倍乃至10倍于国产车型的利润。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-024c7c77161f9a7b24b550c84af821d8_720w.jpg?source=b1748391?rss\" data-rawwidth=\"711\" data-rawheight=\"481\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-024c7c77161f9a7b24b550c84af821d8\" data-watermark-src=\"v2-cb839022af2c2631ccb9b465438095d1\" data-private-watermark-src=\"v2-f8a670a0c8bb01bd1cba68e91b5a873f\"></p>\n<p data-pid=\"6Rnp44Zz\">而国内汽车从传统燃油汽车开始向新能源汽车开始转变，而合资/国外传统势力的转型缓慢，也意味着国产汽车的真正崛起。</p>\n<p><img src=\"https://picd.zhimg.com/v2-93ec153355058e825a0a1572005dff77_720w.jpg?source=b1748391?rss\" data-rawwidth=\"720\" data-rawheight=\"1096\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-93ec153355058e825a0a1572005dff77\" data-watermark-src=\"v2-ef6bd07940db11ae5019194110106a69\" data-private-watermark-src=\"v2-83f15d351ab80030032c6b296ef0c27e\"></p>\n<p data-pid=\"ajweijQU\">2022年10月新能源销量排行榜的前15位，合资/外资的新能源厂商寥寥无几，基本都是国产的厂商霸榜。</p>\n<p data-pid=\"gFrLGkaK\">再看厂商排名，前十里面国产汽车里面有比亚迪、吉利、长安、长城等品牌，已经占据了半壁江山。</p>\n<p><img src=\"https://pica.zhimg.com/v2-1aa8a427c0bde45ae713b2c9ca3e546e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"640\" data-rawheight=\"339\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-1aa8a427c0bde45ae713b2c9ca3e546e\" data-watermark-src=\"v2-447afad680a9535523634ceee6488694\" data-private-watermark-src=\"v2-69232a19ee046908d215ade993f9b084\"></p>\n<p data-pid=\"01OSGNJg\">1978年我国全年汽车产量是18万辆，到了2021年是2652万辆，中国汽车制造业链条走了整整43年的艰辛里程，中间的弯路、冤枉路因为国外的打压而不知道走了多少。</p>\n<p data-pid=\"unNfGk8s\">即便到了去年，2021年的国内汽车制造的大部分产量还是被合资/外资车企所瓜分，乘用车的国产品牌产量只占据了总产量的44.4%，一大半产量和绝大部分利润被合资/外资拿走。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-158f7aee21eef4f7e8791f404ced2229_720w.jpg?source=b1748391?rss\" data-rawwidth=\"640\" data-rawheight=\"586\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-158f7aee21eef4f7e8791f404ced2229\" data-watermark-src=\"v2-d2040bd75b8a915eeac6c47426b23cf5\" data-private-watermark-src=\"v2-243979534214fba7682336e7c44cf81c\"></p>\n<p data-pid=\"tWLnefUI\">如果设想下，十年后，到了2032年，也能和日本一样。</p>\n<p data-pid=\"bGtGPp5y\">那个时候，国内制造的汽车基本都是国产品牌产出，原本国产1000万辆的份额变成了3000万辆，那带来的变化可谓是翻天覆地。</p>\n<p data-pid=\"WsDurnDr\">首先，原本国外的供应商基本都替换成国内的。我先后在日企/美企/德企/法企的tier1呆过，外企抱团得厉害，日系就只用日系供应商，德系就只用德系/欧系供应商，哪怕是比国内贵很多，甚至贵几倍，也优先考虑本国供应商。不要说零部件localization，即便是国内供货也是找的国外50%甚至100%控股的该国供应商在国内开的厂。</p>\n<p data-pid=\"KFMy_-Hb\">如果汽车零部件基本都用国内制造，加上国外出口的需求，那个时候我们应该是稳稳的汽车制造供应链全球第一了。这巨大的国产汽车供应链条带动国内相关企业体量翻几倍是轻轻松松，增加国内的汽车相关就业估计1倍都不止。</p>\n<p data-pid=\"xXkUDX9D\">而国产汽车利润翻的倍数我都不敢估算，国内供应链本身就便宜，加上国产汽车链条的产能翻个几倍带来的议价能力和成本的狂降。如果未来的国产新能源车价不走性价比，按以往的合资车价来定价，有大体量的国产品牌的利润比目前翻个四五倍都是正常的。</p>\n<p data-pid=\"yBHZx9hE\">所以，如果国产新能源势力真的能突破发达国产的封锁，国内国外两开花的话。制造业第一强国是真正的名副其实了，而汽车制造高副加值带来的各种利益，即便以中国如此巨大体量来算，也是强有力的助推剂，中国重返世界巅峰不再是梦想。</p>\n<p><br></p>\n<p data-pid=\"AO1NM58u\">（图片来源网络，侵删！）</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/515337233/answer/2756568238?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">118 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/545483707?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">我国新能源汽车核心技术达到国际先进水平，这对我国汽车行业有哪些意义？</a><br><a href=\"http://www.zhihu.com/question/524913633?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">目前国内在能源汽车产业方面的布局状况是什么样的？</a><br>\n","link":"http://www.zhihu.com/question/515337233/answer/2756568238?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"2025 年动力电池回收市场规模预计超 400 亿元，透露了哪些信息？","date":"2022-11-18 06:27:48","description":"\n<p data-pid=\"FmPOzEPg\">如果单从新能源汽车的动力电池回收来看，这个新闻的数据是有问题的，未来的动力电池回收市场会超出新闻预期。</p>\n<p><img src=\"https://picd.zhimg.com/v2-697c810268b16e65455a5d9e28cad640_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"606\" data-rawheight=\"364\" data-watermark=\"watermark\" data-original-src=\"v2-697c810268b16e65455a5d9e28cad640\" data-watermark-src=\"v2-b5eb9d1baa7b6a150f1c5eddd3940899\" data-private-watermark-src=\"v2-71fb4de48484db759df9c7ffdb436872\"></p>\n<blockquote data-pid=\"4SGoqcaA\">新闻：2021年我国废旧动力电池回收市场规模进一步增长至150亿元左右，到2025年市场规模将超400亿元。</blockquote>\n<p data-pid=\"duVbddgL\">按早期新能源汽车动力电池6年的回收周期来算（2015年左右的动力电池成组技术，一致性普遍没有最近几年的好），2015年的产量约为34万辆，2021年那批动力电池退役，回收市场达到150亿。</p>\n<p data-pid=\"nvkXz43J\">那么2025年往前推6-7年，2018/2019年的年产量超120万辆，光看产量，就是2015年的3.5倍，同比例换算下，2025年的废旧动力电池回收市场规模应该是550亿元左右。而从2015年到2019年，实际单车配置动力电池的容量/价格是逐年见涨的，原本两三百公里的续航普遍涨到了四五百公里的续航，所以2025年废旧动力电池回收规模应该比550亿元还要多。</p>\n<p data-pid=\"kgNxgKw3\">2022年新能源车的产销预计会突破600万辆，按照最简单的逻辑来说，34万辆的2021年我国废旧动力电池回收市场规模150亿元。那么过了八年，2030年的我国废旧动力电池回收市场规模将达到2650亿元，实际的市场规模很有可能会比预料的要大。</p>\n<p data-pid=\"PV6_ywqn\">要知道，2021年市场2000-3000亿/年左右的行业，有医美行业（2600亿），影视行业（2349亿）。</p>\n<p data-pid=\"dCcyVbJy\">如果说早期的市场还是杂乱的，后期如此高的动力电池回收的行业市值，就足以培养出两位数的上市公司了。</p>\n<p><img src=\"https://picx.zhimg.com/v2-e306de37d1ebec23c864468a5800bf77_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"300\" data-watermark=\"watermark\" data-original-src=\"v2-e306de37d1ebec23c864468a5800bf77\" data-watermark-src=\"v2-6cf91a955a3186929d66c0050ecfca2c\" data-private-watermark-src=\"v2-e9220c0844a835e63a643afdf331d82a\"></p>\n<p data-pid=\"t1fohAM-\">说了市场前景，再说下为什么现在的新能源汽车的动力电池回收能有如此大的规模。而以前双轮/三轮电瓶/传统燃油车的电瓶的规模也很大，为啥没有形成如此大规模的电池回收。</p>\n<p data-pid=\"sZYDZtbz\"><b>一个是新能源汽车动力电池里面的金属太贵。</b></p>\n<p data-pid=\"q8I4uLcG\">之前电瓶车用的<a href=\"https://www.zhihu.com/search?q=%E9%93%85%E9%85%B8%E8%93%84%E7%94%B5%E6%B1%A0&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2275281578%7D\" class=\"internal\">铅酸蓄电池</a>的镉、铅、砷，这些金属无论对环境还是对人体，都会造成巨大的伤害，如果厂家用合乎国家法规的技术方法进行回收再制造，在成本上比较高，经济性并不好。</p>\n<p data-pid=\"fjIvufzh\">而三元锂电池还是磷酸铁锂电池，里面都不含镉、汞、铅这类难处理的有害元素，而是富含锂、镍、钴、锰、铜、铁、铝等贵重金属，对环境危害并没有大众想象那么大，属于<b>环保类电池。</b></p>\n<p data-pid=\"KxOQRpKI\">现在汽车动力电池的锂、钴、镍，非常昂贵，如果能够回收<b>（再生处理）</b>，也能够缓解原料上涨带来的资金压力。</p>\n<p data-pid=\"isl2RNPv\">锂矿不多说了，最近两年暴涨近10倍的售价。<a href=\"https://www.zhihu.com/search?q=%E7%A2%B3%E9%85%B8%E9%94%82&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2275281578%7D\" class=\"internal\">碳酸锂</a>、氢氧化锂都出现了倒挂情况，就是供应商屯矿卖矿，比费心费力费钱地加工成锂电池要赚钱得多。越靠近锂矿开采源头的企业赚的钱越多，导致了开矿的比新能源车企赚的钱还多，而新能源车企付出的人力物力，造车的复杂程度，所承担的风险，毫无疑问却是比挖矿的要高。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d9d115706b091d9ae9dc38ce1df16f84_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"447\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"0q-28TKY\">而钴呢，一样重金难求。</p>\n<p data-pid=\"xI6PT7LS\">按照<a href=\"https://www.zhihu.com/search?q=%E5%9B%BD%E5%9C%9F%E8%B5%84%E6%BA%90%E9%83%A8&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2275281578%7D\" class=\"internal\">国土资源部</a>2012年公布的2011年全国矿产资源储量通报，我国钴储量基础为7.99万吨<b>，</b>资源量为56.6万吨，具有开采意义的储量为4.21万吨，占查明资源储量64.59万吨6.5%。<b>我国钴资源储量仅占全球总量的1%</b>，因此钴资源十分短缺，每年自产矿石钴金属量只有1500吨左右，<b>进口依赖度在90%以上。</b></p>\n<p data-pid=\"d83LHafo\">所以，如果这些贵重金属都能充分回收<b>（再生处理）</b>，哪怕回收的金属只满足当年动力电池的10%-20%的需求量，也能够增加和国外议价的砝码，势必能够压低原料的价格，从而降低动力电池的成本。</p>\n<p data-pid=\"01S1jkDu\"><b>其二，就是动力电池虽然降低到70%，不能在汽车上使用了，实际还是可以用在其他领域的。</b></p>\n<p data-pid=\"XPsqbqWW\">这个就是<b>梯次利用。</b></p>\n<p data-pid=\"0POLTYBu\">梯次利用并非是我们想象的那种5号电池，游戏手柄上用完了，带不动了然后遥控器用，最后遥控器用完了就丢垃圾的那种简单做法，而是要筛选、分组后再利用。</p>\n<p data-pid=\"w6kea90k\">我们现在汽车的动力电池，实际都是用的电芯成组技术。</p>\n<p data-pid=\"fBtkOqqe\">数十到上千个“高度一致”的电芯组成了一块超大的电池组，然后一起贡献电量给汽车，驱动汽车运动。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-966ebac4307c4b08132d4440de02535d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"759\" data-rawheight=\"520\" data-watermark=\"watermark\" data-original-src=\"v2-966ebac4307c4b08132d4440de02535d\" data-watermark-src=\"v2-bee655acf6148c52a195d9fee1ad0e71\" data-private-watermark-src=\"v2-4da60d2ea39424f5830dcac743757e9a\"></p>\n<p data-pid=\"a0CB7fXc\">在制造电池组的后续步骤中，有一个重要的环节就是<b>“分容”</b>。把不同容量/电阻的电芯进行分类，来优化电池组的一致性。</p>\n<p data-pid=\"IULxob4O\">要知道如果内阻不一样，容量不一样，就会导致电芯的不一致。而电芯的不一致，使得不同电芯的充放电深度不一致。比如容量较小、性能较差的电芯会先充满，而容量大、性能好的电芯则总是到不了满电，造成容量的浪费。不仅如此，有的电芯长期充满充涨，也导致寿命会缩短。</p>\n<p data-pid=\"_JZukowi\">而整个电池组的寿命实际就是个木桶原理，电芯就是组成木桶的一根板材，而木桶的寿命则是那根最先坏掉的板材决定的。</p>\n<p data-pid=\"GoKv2VEY\">而即便是出厂的时候电芯都是高度一致的，后期电芯在不断的充放电数百次，过了数年以后，也未必能保持一致。</p>\n<p data-pid=\"PbdpININ\">比如理论上要求不同电芯之间的温度差越小越好，最好能控制在5-8摄氏度，但实际上这个要求是很难达到的。或者说，我们根本就不知道每个电芯之间的精确温度差是多少，因为我们的温度探测一般精度只到模组的，电芯的温度一般靠“算”。</p>\n<p><img src=\"https://picx.zhimg.com/v2-f857a980e2e90c332b0835b9ed2368fb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"537\" data-rawheight=\"421\" data-watermark=\"watermark\" data-original-src=\"v2-f857a980e2e90c332b0835b9ed2368fb\" data-watermark-src=\"v2-133abc0f79fc5dbbb024724ddbb365d8\" data-private-watermark-src=\"v2-9cbccf2a3135fb68853148002ba4c327\"></p>\n<p data-pid=\"6Fc6N52k\">而在长期使用中，不同的温度下长期充放电，都会给电芯带来不同的影响。</p>\n<p data-pid=\"eVsA_lYR\">比如夏天，靠近散热源/冷源的电芯温度低，而远离的则温度高。或者冬天，外围的电芯会温度低，里面电芯的温度高。长期温度不均衡，就会造成不同电芯的<b>循环寿命、容量、<a href=\"https://www.zhihu.com/search?q=%E5%86%85%E9%98%BB&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2454625334%7D\" class=\"internal\">内阻</a></b>出现差异，最后导致<b>电芯一致性</b>变差。</p>\n<p data-pid=\"pYU8d0Kb\">所以，过了六七年，汽车系统SOC说，电池包电量下降到70%了，要更换电池了。</p>\n<p data-pid=\"7JVSyUX9\">实际，并不是电池包里面所有的电芯到70%了，循环次数还剩400次就得彻底报废。而是另一部分电芯还有可能是80%，甚至更高的容量，还可以支持循环次数600次。</p>\n<p data-pid=\"XPGG_m0_\">所以，梯次利用，实际也要进行再“分容”，把容量/电阻等参数一致的电池进行分类，分组。</p>\n<p data-pid=\"r6SekYTy\">而动力电池的梯次利用如果做得好，实际不需要政府的补助，都会是一项非常赚钱的产业。</p>\n<blockquote data-pid=\"PYUvjs_2\">中国铁塔在江苏省内有10万座通讯塔，都需要24小时供电。过去企业都是自行采购全新电池。但从2018年开始逐步转而使用从新能源车上更换下的锂电池<b>。</b>使用二次利用电池比新锂电在投资上至少节省1/3。</blockquote>\n<p><img src=\"https://pic1.zhimg.com/v2-b93854af6330be130c503ae009b550d5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"360\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"6bvXA8hX\">综合来说，因为行业的扩大，相关动力电池回收市场达到了千亿级别后，里面的商机和长期利益是非常可观的。</p>\n<p data-pid=\"5xK6XZJk\">所以，国外的车企，基本都在研发回收锂电池技术和建设回收工厂，如大众、丰田、特斯拉、本田、宝马、奥迪等都有着详细的日期规划表。</p>\n<p data-pid=\"1vyBBH4G\">国内最近也在推进电池回收再利用的政策，督促国内车企/相关机构加快制定动力电池回收体系。</p>\n<p data-pid=\"c9sdvzoo\">以下为近几年的国家相关法规和政策。</p>\n<blockquote data-pid=\"i48UMvPX\">2014年，国务院办公厅颁布《关于 加快新能源汽车推广应用的指导意见》提出要制定电池回收政策、健全电池回收体系。<br><br>2016 年，国家发改委、工信部、环保部等部 门联合发布《电动汽车动力蓄电池回收利用技术政 策》，对电动汽车动力电池设计生产、回收、梯次利 用、再生利用等方面均做出了详细的规定。<br><br>2017 年，国家标准化管理委员会等部门先后颁布《电动 汽车用动力电池产品规格尺寸》《汽车动力电池编 码规则》《车用动力电池回收利用拆解规范》和《车 用动力电池回收利用余能检测》，进一步明确了相 关标准。<br><br>2018年，工信部、科技部、环保部、交通运 输部、商务部、质检总局、能源局等部门联合发布 《新能源汽车动力蓄电池回收利用管理暂行办法》 规定，车企承担动力电池回收的主体责任，以产品 编码标准和溯源信息系统为基础，实现电池来源可 查、去向可追、节点可控、责任可究，构建全生命周期管理机制。<br><br>2020，工信部发布《2020年工业节能与综合利用工作要点》，包括推动新能源汽车动力蓄电池回收利用体系建设。<br><br>2022年8月，工信部研究制定《新能源汽车动力蓄电池回收利用管理办法》和行业急需标准，健全动力电池回收利用体系。</blockquote>\n<p data-pid=\"EqE6L2Nx\">个人认为，动力电池回收这个新兴行业在不久的未来发展可期。</p>\n<p data-pid=\"tO28kNKH\">而企业目前各自的回收模块，随着新能源的做大做强，电池兼容性的提高，有可能在后期合并出独立的动力电池回收企业。</p>\n<p data-pid=\"qr7ZugpP\">而这个行业的体量甚至有可能在十年二十年后，支撑起来几个世界500强的新兴企业。</p>\n<p><br></p>\n<p data-pid=\"IBtQkTlE\">（图片来源网络，侵删！）</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/543591712/answer/2751572021?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">11 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/543480947?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2025 年动力电池回收市场规模预计超 400 亿元，这一规模意味着什么？</a><br><a href=\"http://www.zhihu.com/question/543474909?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2025 年动力电池回收市场规模预计超 400 亿元，这数据说明了什么？</a><br>\n","link":"http://www.zhihu.com/question/543591712/answer/2751572021?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"2022年，最让你「失望」的汽车品牌或者车型是？","date":"2022-11-18 05:14:50","description":"\n<p data-pid=\"bre3I_k4\">这明显就是一道得罪众多品牌的回答，但还是有些话想说下。</p>\n<p data-pid=\"-HOUnY4-\">这几个月基本把所有新推出来的新能源车都试驾了下。</p>\n<p data-pid=\"PQg1Mk3H\">热门的有蔚来ET7,问界M7，小鹏G9，理想L9，比亚迪海豹，岚图梦想家等。其他的次热门的就更多了。</p>\n<p data-pid=\"HkCWO9TK\">实际每款车型，多多少少都有点和我不“适配”的地方。</p>\n<p data-pid=\"wWQlZYMu\">比如<b>ET7</b>，测试它的车道偏移辅助功能的时候真的吓了一跳。</p>\n<p><img src=\"https://pica.zhimg.com/v2-f59f9bbdf215210397e3dff97b1f64ef_720w.jpg?source=b1748391?rss\" data-rawwidth=\"757\" data-rawheight=\"931\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-f59f9bbdf215210397e3dff97b1f64ef\" data-watermark-src=\"v2-0879299c9c07d6845e6c937665a51daf\" data-private-watermark-src=\"v2-f5737af43e9d86604deabbcffad9cadd\"></p>\n<p data-pid=\"LoqR4-w3\">我开别的车，如果是不打转向灯偏移车道，那个方向盘回转的力就如同一个秀气的女孩子拉了你方向盘一下，力道比较柔韧。如果你坚持加大力度扭方向盘，她纠正的力达到一定程度就放弃了。</p>\n<p data-pid=\"CjMQ8n1H\">整个调整过程不会突兀或者方向盘纠偏的力量非常大，如果你不阻止，方向盘会转向，让车回到车道中间。但只要你发力阻止，她就不会太坚持，更多的是提醒你注意力回到路况上面来。</p>\n<p data-pid=\"kDyLOr1K\">而ET7在你不打转向灯偏移车道，那给你方向盘的力就如同一个壮汉怒吼一般，瞬间夺过你的方向盘，你他娘的偏移车道了，给劳资回来。</p>\n<p><img src=\"https://picx.zhimg.com/v2-0da662bcaa3bf1df2b68ca5784f8d87d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3024\" data-rawheight=\"4032\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-0da662bcaa3bf1df2b68ca5784f8d87d\" data-watermark-src=\"v2-9ee36c5987d54dc81d297d84dc067708\" data-private-watermark-src=\"v2-9de661632f6b19755a254f0ea0221367\"></p>\n<p data-pid=\"GMQDamDZ\">我当时都惊了，这纠偏的力量也太猛了，而且迅猛直接就来个最大力度，我完全不敢发力抗衡，怕把我的手给搅伤了。真的是系统不容置疑地强行打方向盘，让车头迅速摆回车道中央。</p>\n<p data-pid=\"vK2yYO5b\">当时问那个销售小哥，说这力道有些猛，这样容易让人手受伤，尤其是反应慢且力气小的女孩子开车，这反馈力度能不能调，他说猛了快了才安全啊……</p>\n<p data-pid=\"KmLUMjZN\">另外不知道是否蔚来中控屏的刷新率低，手机隔着半米，拍出来的条纹也太大了。拍其他汽车中控屏没这情况。</p>\n<p><img src=\"https://picx.zhimg.com/v2-3b620015b123683ccfa142ff9592889d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3024\" data-rawheight=\"4032\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-3b620015b123683ccfa142ff9592889d\" data-watermark-src=\"v2-593731b00140493c3986ec41f63f1b94\" data-private-watermark-src=\"v2-cf80f8020fe4402a3499a1545097ca63\"></p>\n<p data-pid=\"8hEsjVy1\"> 比如<b>理想L9。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-de125b4c862864d973d82e5dc077ced1_720w.jpg?source=b1748391?rss\" data-rawwidth=\"4032\" data-rawheight=\"3024\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-de125b4c862864d973d82e5dc077ced1\" data-watermark-src=\"v2-319822a950faeceb40a595d2c6627358\" data-private-watermark-src=\"v2-6682738638877a504c962dd42f99b04b\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-1d9388d5acff929b636a18b4e8e2ca7d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"720\" data-rawheight=\"540\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-1d9388d5acff929b636a18b4e8e2ca7d\" data-watermark-src=\"v2-5515bac0bcc554ba535eb194f0015958\" data-private-watermark-src=\"v2-173bd6688d803b5bc398d580c6313754\"></p>\n<p data-pid=\"nTd58qX0\">那个硕大的HUD（抬头显示）,能显示具体地图和速度等信息，真的是比其他车的HUD内容丰富许多，13.4英寸的尺寸占据了面前挡风玻璃相当大的一块面积。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-8a5a4bf204f58df75b05e9f3a1c0d3a8_720w.jpg?source=b1748391?rss\" data-rawwidth=\"629\" data-rawheight=\"310\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-8a5a4bf204f58df75b05e9f3a1c0d3a8\" data-watermark-src=\"v2-7e9acc5dd1efd247e4e776e70ee89a5c\" data-private-watermark-src=\"v2-a75ae867852fcff547d522fdca978e45\"></p>\n<p data-pid=\"3ojPZzMd\">但也许我是人到中年，总感觉对焦那个庞大的HUD，再对焦那个路面有些眼睛累。别人的HUD显示区域比较小，所以可以基本聚焦路面，想看HUD的时候再去看HUD。</p>\n<p data-pid=\"LVHARC5w\">但那个HUD真的又大又显眼，占据了面前的主视野，一不小心就聚焦上去了，视线赶紧又切换到路面，这一路上的来回切换聚焦，对于中年近视的我实在是个考验，很容易就眼睛发酸了。当然，这一点可能对年轻人比较友好，对于年龄大的，视焦距调节差的人多少还是有点干扰。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5e5c095c201f9af92e41d4be81332e3b_720w.jpg?source=b1748391?rss\" data-rawwidth=\"4032\" data-rawheight=\"3024\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-5e5c095c201f9af92e41d4be81332e3b\" data-watermark-src=\"v2-d2b0c5bec3ec369f40cb4ad7a9109a95\" data-private-watermark-src=\"v2-a0ef00b25bf0d9a955d292e2749af8df\"></p>\n<p data-pid=\"Tdx0O_4I\">另外L9的智能驾驶，在覆盖高精地图的路段可以实现自动变道、超车，不需要你动方向盘，但是离开高精地图的时候就是\"直接干脆”把方向盘塞给了驾驶员，真的是不给驾驶员缓冲的时间，说脱离就脱离（切换成了ACC模式）。这一点觉得还是需要改善下，最好是提前几分钟通知驾驶员，让其有个心理准备。</p>\n<p data-pid=\"hwbBgaFN\">说下<b>问界M7。</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-08207d495acd5245ae8c7d2c7ebc9c36_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3024\" data-rawheight=\"4032\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-08207d495acd5245ae8c7d2c7ebc9c36\" data-watermark-src=\"v2-c4f80df0f0fa4681f197ea1e90263204\" data-private-watermark-src=\"v2-5a04d0a57d818d69f0dc71cc1ff9bb4d\"></p>\n<p data-pid=\"wx8k8wY8\"> 其实在市内驾驶感受还可以，并非如很多人说的那样底盘差。</p>\n<p><img src=\"https://picd.zhimg.com/v2-90f3ee48373372671be82c2345794323_720w.jpg?source=b1748391?rss\" data-rawwidth=\"720\" data-rawheight=\"960\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-90f3ee48373372671be82c2345794323\" data-watermark-src=\"v2-3f9ccf9d1cc1bd581cc329094736be95\" data-private-watermark-src=\"v2-df6c1cdc0344634888fb7a7dbbdf23d3\"></p>\n<p data-pid=\"93cGawlj\">有的人说问界是小康股份代工，而小康股份（后改名塞力斯）是做面包车的，所以质量怎么差怎么不行。</p>\n<p data-pid=\"_X12-H5i\">实际，小鹏在自己工厂起来之前，是靠的海马代工。理想是靠的力帆代工。蔚来是靠的江淮代工。问界是小康股份代工。这些新势力开始造车都是要考虑成本的，所以都是找的这些有资质，且比较“好谈”的非一线车企代工的。</p>\n<p data-pid=\"y3TI4sN7\">就是现在如日中天的比亚迪，也是十几年前收的即将破产的秦川集团（专做微型车的低端车型，但败给了当时的奥拓），开始了造车之旅。</p>\n<p data-pid=\"Kzzg86-5\">回到问界M7，在高速上驾驶的时候发现了一个问题。</p>\n<p><img src=\"https://picd.zhimg.com/v2-cd552b7bbb165da4320e929ab57259a0_720w.jpg?source=b1748391?rss\" data-rawwidth=\"720\" data-rawheight=\"540\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-cd552b7bbb165da4320e929ab57259a0\" data-watermark-src=\"v2-70b34bc674f7d1e954fccbf5cac0a32a\" data-private-watermark-src=\"v2-0e36876ca40962941477889d90722af1\"></p>\n<p data-pid=\"c3KJHINv\">在时速120-130公里/小时的ACC<a href=\"https://www.zhihu.com/search?q=%E8%87%AA%E9%80%82%E5%BA%94%E5%B7%A1%E8%88%AA&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2686110154%7D\" class=\"internal\">自适应巡航</a>下，路面稍微有点倾斜，车突然开始打摆子了，就是以极快的速度小频率左右晃荡，当时我的手虚扶在方向盘上，吓了我一跳，连忙把稳住方向盘，车才没有剧烈晃动。问及旁边的销售小哥，他估计也不清楚，说可能太快了……</p>\n<p data-pid=\"L5iNmAnA\">后来我再试了一次，路面稍微有一点倾斜，但是路况很好，周围无车的时候，我放开方向盘，果然车头又开始剧烈的左右小幅度摆起来，而且你不扶方向盘，那种摆动的幅度就越来越大，我感觉如果不管，几秒过后，车辆的方向都有可能失控。</p>\n<p data-pid=\"si81rw0H\">我不知道这是车辆本身底盘的原因，还是道路居中程序频繁参与调整的原因，现在虽然没啥大问题，因为驾驶员肯定要扶着方向盘的。但是后面如果上了半自动的智能驾驶，允许驾驶员短期放开方向盘，那就真的会出大问题了。</p>\n<p data-pid=\"flXWeTGU\">最后说下<b>岚图梦想家。</b></p>\n<p><img src=\"https://picd.zhimg.com/v2-d8d1c8b59c5363a19544feeab3cf068f_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3024\" data-rawheight=\"4032\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-d8d1c8b59c5363a19544feeab3cf068f\" data-watermark-src=\"v2-c7f9e3cbe961a12c74bae670d81d2a0c\" data-private-watermark-src=\"v2-980b0059ad795cae8a1e074cd23a7cf3\"></p>\n<p data-pid=\"U_GI89dt\">岚图梦想家尺寸够大，前脸也霸气。而且视野比岚图FREE要好，开阔许多。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-bf1ea7b6a8d5fbf9b1fcdac4a7a7cf7e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"705\" data-rawheight=\"517\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-bf1ea7b6a8d5fbf9b1fcdac4a7a7cf7e\" data-watermark-src=\"v2-e79a5fba51ee058e8437349aa850cae4\" data-private-watermark-src=\"v2-227a54e265a2a564bee1ee7c94c9c9c6\"></p>\n<p data-pid=\"XxEITdHV\">因为自己是武汉汽车行业出身的，所以对于本土武汉的东风岚图品牌一直抱有期望，在很多文章都推了东风岚图，动力、空间、驾驶质感都不错，希望这个新能源品牌能大卖。</p>\n<p data-pid=\"AWec7DrP\">但严格来说，东风岚图有些地方还是做得一般，还是带着一些传统车企的思维。</p>\n<p data-pid=\"Jk0kfVhj\">比如主打车型五十来万的车了，中间第二排的座椅还是手动的，不是电动的，手用力拉着旁边的扳手咔咔响，脚用力前后蹬才能挪座位，总觉得有些尴尬。</p>\n<p data-pid=\"q7iYv2EK\">另外中控的几个屏幕的黑边有些碍眼，真的太大黑边了，难道设计理念是黑边越大越好？</p>\n<p><img src=\"https://picd.zhimg.com/v2-ce419fbbb11e873382bc051b0148c2ab_720w.jpg?source=b1748391?rss\" data-rawwidth=\"4032\" data-rawheight=\"3024\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-ce419fbbb11e873382bc051b0148c2ab\" data-watermark-src=\"v2-91a1c8e73b86c137b8364343c0208444\" data-private-watermark-src=\"v2-4dc1a26df6dfb0a1878211a046198bb6\"></p>\n<p data-pid=\"5J8S70jW\">而且试驾岚图梦想家的感受也让人觉得不舒服。</p>\n<p data-pid=\"5IZ7dl6D\">试驾车出来一个多月，给我提供的试驾车还没网，在线互动不能试，语音和导航都没有，车机互动连卡还是不卡都不能试，因为没网络，中控屏大多数界面都是缺失的。</p>\n<p data-pid=\"iu-1vMFe\">试驾开了一半（预约的试驾截止时间还没到），就有另一个销售电话催说下一个客户来了，这个销售马上要我立即返程……这说明了，试驾的流程都不完善，或者流程规定没得到员工的执行。</p>\n<p data-pid=\"NQnNainv\">但短短的试驾时间，我还是发现了有设计类的问题，就是某被动安全的功能，应该是默认开启的。但不行，非要手动开启。而且这个被动安全的功能还集成在智能驾驶上面。你手动开启了，一刹车，ACC取消，那被动安全功能也给关了……</p>\n<p data-pid=\"uxOzQ_jQ\">真的岚图系列销量不好，不能全怪市场的。在某些观念上面，东风岚图还是偏向传统车企，你说重视了内饰智能吧，弄了大连屏和真皮沙发，但我看员工态度和话术就是轻内饰轻智能，而且内饰啥的也没把精细化贯彻到底，员工介绍的发力点也是重传统硬件。</p>\n<p data-pid=\"9YnFyQAH\">说了这么多，以上的观点是试驾后的个人观点和主观感受，主要是说一些缺点，并不是说这些车型不好。实际这些车型都有可圈可点的地方，真的要谈，一些优势用长篇大论都说不完。但还是觉得这些三四十万，甚至四五十万的车，在某些方面可以做得更好些，更精细些，这样才能对得起消费者的期望。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/563746375/answer/2740822158?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">61 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/567476089?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2022年哪个品牌的汽车比较成功？</a><br><a href=\"http://www.zhihu.com/question/566990215?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2022年出的汽车中，你最喜欢哪一款？</a><br>\n","link":"http://www.zhihu.com/question/563746375/answer/2740822158?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"2022 年卡塔尔世界杯冠军可能是谁？","date":"2022-11-15 13:52:48","description":"\n<h2><b>【智叔侃球】诸神黄昏––2022卡塔尔世界杯前瞻（每场比赛球评持续更新中）</b></h2>\n<p><img src=\"https://picx.zhimg.com/v2-bef44ed3a84a87d85a105312bcbb631a_720w.jpg?source=b1748391?rss\" data-rawwidth=\"869\" data-rawheight=\"501\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-bef44ed3a84a87d85a105312bcbb631a\" data-watermark-src=\"v2-1a8eeb7b772c68b184b9d079c3fc3f8d\" data-private-watermark-src=\"v2-7065d2a869689276d69d47b3e82fdf4f\"></p>\n<p><br></p>\n<p data-pid=\"r2yyQ5IJ\"><b>理想主义的花最终会盛开在浪漫主义的土壤里，我的热情，永远不会熄灭在现实的平凡里，我们终将上岸，阳光万里！</b></p>\n<p><br></p>\n<p><br></p>\n<p data-pid=\"OxLV1VN6\">2002到2022,</p>\n<p data-pid=\"ky1WF7il\">二十年后，世界杯举办地又回到了亚洲。</p>\n<p data-pid=\"vm_i10Nu\">我到现在都记得，2002年的韩日世界杯，对于中国球迷而言，绝对是锣鼓喧天，鞭炮齐鸣，扬眉吐气，老泪纵横，高兴得像过年的一届了。</p>\n<p data-pid=\"62wRohnl\">因为，我们的国足男队，闯进了这届世界杯的决赛圈。</p>\n<p data-pid=\"H3guJD9B\">那时候只要是中国队的比赛时，无论你是青壮小伙，还是老弱妇孺，无论你是踢足球的还是不踢足球的，只要你是个中国人，都会丢掉手上的活计，万人空巷去看国足的比赛，为中国足球加油呐喊。</p>\n<p data-pid=\"kz_JDYHu\">我们都以为2002这一年，是中国足球，特别是中国男足腾飞的开始，谁知道却是巅峰的终止。</p>\n<p data-pid=\"hcTdUvO9\">是的，太傻太天真，TOO YOUNG TOO NAÏVE。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-90e02c46d32e1c4c3fa73acb932e328e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"550\" data-rawheight=\"340\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-90e02c46d32e1c4c3fa73acb932e328e\" data-watermark-src=\"v2-4d9cf3510f89ad88f1046cd6e6eb40dc\" data-private-watermark-src=\"v2-91a38b6cc6c1d433928717bb74680214\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"hY7mU_hL\">那支中国男足在世界杯的赛场小组赛三战皆墨，一球未进，一分未得，我把他们骂得狗血喷头，体无完肤，认为这简直就是奇耻大辱。</p>\n<p data-pid=\"vzEgTCuf\">谁知道，二十年后的今天，当我看着眼前的中国男足输越南输得连底裤都不剩时，却已经麻木得不再有任何力气去骂，只是把电视一关，转头就去冲凉了。哀莫大于心死。</p>\n<p data-pid=\"5RVDUP4p\">唉，如果可以穿越时空，我真的想回到2002年的那个夏天，和当年正在骂街的那个自己说一句：“我说这位小兄弟，冷静一下，消消气哈。你不知道啊，这支国足，是未来的20年里最强的一队了。能踢成这样，已经算是非常长脸了，真的，不骗你。”</p>\n<p data-pid=\"nS7LllXE\">二十年，可以改变许多人和事，可以将一个青涩少年磨成中年大叔，可以让当年那个觉得站在彩云之巅能与诸神并肩的风华少年在不知不觉间就变成了被柴米油盐困扰得快秃顶的油腻中年男人。</p>\n<p data-pid=\"vqX-FcER\">是的，人生，能有多少个20年呢？</p>\n<p data-pid=\"lUWyQR1R\">2022年11月的这届卡塔尔世界杯，是一个告别的主题，更是诸神的黄昏。我们，又要跟谁告别呢？</p>\n<p data-pid=\"78xdg_u0\">35岁的梅西刚刚确认了这即将是他最后一次代表国家队参加世界杯，年少时为国效力的梦想终于要落下帷幕，他多么渴望再带领这群可爱的年轻人在他最后一届世界杯亲手捧起神圣的大力神杯。</p>\n<p><img src=\"https://pica.zhimg.com/v2-7bd4d4e169ec05ffa39ff8121cd480e6_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"608\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-7bd4d4e169ec05ffa39ff8121cd480e6\" data-watermark-src=\"v2-b8bb4d7ba106fb68d3b832c4159ef895\" data-private-watermark-src=\"v2-2d47866e0f2a565ba8016327cceef41c\"></p>\n<p data-pid=\"H9nrRAln\">30岁的内马尔不再是那个对足球怀揣热爱的大男孩，足球世界让他千疮百孔，可肩负五星巴西使命的他明白了责任的意义。</p>\n<p data-pid=\"q3ij3WF4\">贝尔的双鬓已经略显微白，是世界杯再向早已经准备归隐的他做着最后的挽留。</p>\n<p data-pid=\"JPJxHcqJ\">37岁的C罗连接了两代最好的葡萄牙，可自己却在时光的无情冲刷下尽显老态，他依然渴望成为那个一己之力逆天改命的葡萄牙英雄，老骥伏枥，依然志在千里。</p>\n<p><img src=\"https://picx.zhimg.com/v2-57da44454de218842f673112e62a24ab_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-57da44454de218842f673112e62a24ab\" data-watermark-src=\"v2-2fabbfeb0cf6a92ffd7e7dac8dcf8d8e\" data-private-watermark-src=\"v2-f04c8f400ddef08a86c13347be809d93\"></p>\n<p data-pid=\"dpTo9Tvk\">35岁的苏亚雷斯逐渐淡出了大众的视野，那个以一己之力绝杀英格兰的关键先生，那个用一次手球拯救乌拉圭的民族英雄，向着他心中所爱最后一次出发。</p>\n<p data-pid=\"BOGZMhqs\">36岁的诺伊尔不再年少无畏，可他依然时刻准备用高接抵挡捍卫德国人最后一道防线。</p>\n<p data-pid=\"pIAZYBGO\">34岁的迪玛利亚，全世界都在等着天使的再次展翅。</p>\n<p data-pid=\"C7hvpUIy\">39岁的佩佩，可能是陪伴在C罗身后的最后一战，他愿意赌上一切，没有遗憾的离开。</p>\n<p data-pid=\"DkaiUd_A\">37岁的莫德里奇，早已经成为了克罗地亚的图腾，大家还在等待着放羊娃最后奏响的悠长魔笛。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-36e00df1af55d23f5998acff2c283994_720w.jpg?source=b1748391?rss\" data-rawwidth=\"640\" data-rawheight=\"480\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-36e00df1af55d23f5998acff2c283994\" data-watermark-src=\"v2-61079ed81a45c4d46108f8dd7cbfde77\" data-private-watermark-src=\"v2-0e55866c1715ebd5d8377c32d5a7301f\"></p>\n<p data-pid=\"BWKx_wXA\">​33岁的穆勒，34岁的本泽玛，35岁的卡瓦尼，36岁的吉鲁等等，这是他们的最后一舞，也是他们最后的一次绽放。我们习惯了夏日世界杯的沸沸扬扬，却还没有习惯冬日世界杯告别的主旋律，如果再也不见，那就和他们，和足球再爱这最后一次吧。</p>\n<p data-pid=\"0UhjSFjG\">抒情的话说完了，咱们来点专业层面的东西，前瞻一下A组-H组的出线分析，否则，都对不起我这有着30年看球经验，江湖人称“著名球场饮水机管理员”的足坛老鸟的称号。</p>\n<p data-pid=\"Pka3VCdZ\">好啦，废话少说，下面，直接进入正题吧！</p>\n<p><br></p>\n<p><br></p>\n<p><img src=\"https://picd.zhimg.com/v2-aad307bf8b04a1e11de00b8b268a2936_720w.jpg?source=b1748391?rss\" data-rawwidth=\"320\" data-rawheight=\"380\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-aad307bf8b04a1e11de00b8b268a2936\" data-watermark-src=\"v2-8e189283b7fec29f0b7f8ac48e98cde9\" data-private-watermark-src=\"v2-1cb03db14a04bba1291e3b1c1c3835f5\"></p>\n<p data-pid=\"FQHf2xtp\">A组：</p>\n<p data-pid=\"dra5h1gA\">当亚洲杯、非洲杯、欧洲杯冠军都分在一个小组会是什么局面？在今年的世界杯分组中，2019年亚洲杯冠军东道主卡塔尔，2022年非洲杯冠军塞内加尔，无冕之王、前欧洲杯冠军荷兰，加上刚刚6 : 1暴虐哥伦比亚的大黑马厄瓜多尔齐聚一组，局势之混乱让不少老球迷都直呼摸不着头脑。</p>\n<p data-pid=\"oMseW-49\">从纸面上来看，郁金香荷兰队在A组是一支独秀，是本届世界杯夺冠热门球队之一。加上荷兰历来是小组赛惨案制造机，属于很快就能进入状态的类型，小组出线的概率在本组内是最大。</p>\n<p><img src=\"https://picd.zhimg.com/v2-e72b1f9089244c3adaaa787fb2766860_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-e72b1f9089244c3adaaa787fb2766860\" data-watermark-src=\"v2-86a395ea7421816406982bb8e32efc7f\" data-private-watermark-src=\"v2-bd6900f089e6e943c48b958e4924e938\"></p>\n<p data-pid=\"P3yfUVF8\">​东道主卡塔尔曾在2019年夺得亚洲杯冠军，连续战胜日韩、沙特，含金量非常高，加上主场优势也不是不可能复制2018年世界杯东道主俄罗斯的轨迹。东道主世界杯首战不败的好运如果延续下去，一鼓作气拿下厄瓜多尔，厄瓜多尔又扮演好搅局者的角色，卡塔尔甚至有出线的可能。</p>\n<p data-pid=\"s3MBCgiK\">厄瓜多尔由老将瓦伦西亚领衔，夏窗转会至布莱顿的埃斯图皮尼安与其俱乐部队友凯塞多德赛季体现非常强势，在卡塔尔世界杯的南美预选赛中，厄瓜多尔还曾6 : 1血洗哥伦比亚，说稳稳出线肯定谈不上，不过很有机会搅乱局势，一旦荷兰和塞内加尔在他们身上丢分，整个小组的态势都会有很大变化。</p>\n<p data-pid=\"nHSE_Nds\">塞内加尔今年十分强势，在年初的非洲杯中夺得冠军，头号巨星马内近期逐渐找回了状态，库利巴利、格耶都是来自于五大联赛豪门，大后方更是由切尔西门神、身高臂长的门迪坐镇。单从纸面上来说，塞内加尔是本组出线机会第二大的。</p>\n<p data-pid=\"m63--g5L\">A组的第二很可能对决隔壁口的英格兰，所以荷兰和塞内加尔势必会从第一场就展开血拼，届时元气大伤的两队将迎来卡塔尔和厄瓜多尔的比赛，鹿死谁手，谁又能说得准呢？</p>\n<p><br></p>\n<p><br></p>\n<p><img src=\"https://picx.zhimg.com/v2-55ed2c1e181c136afc4c2df3a596bd7c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"690\" data-rawheight=\"500\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-55ed2c1e181c136afc4c2df3a596bd7c\" data-watermark-src=\"v2-fe8e97704cdd6a97d18b69cca56cfc09\" data-private-watermark-src=\"v2-a4d125f3036d63868d0c6eb0463be058\"></p>\n<p data-pid=\"82cVnQMk\">B组：</p>\n<p data-pid=\"tw0U7giS\">美国队长向着中东进发，波斯铁骑挥着马刀在卡塔尔集结，英格兰长弓兵早已经拉满了弓弦，箭在弦上，一触即发。威尔士人大声呐喊着：我们反的就是你丫的长腿爱德华！</p>\n<p data-pid=\"gD7SBhqM\">这不是什么战争大片，而是世界杯B组的四支球队。世界杯B组也许不是最死亡的，但绝对是仇恨最多的，不是冤家不聚头，这回世界杯的安保们该头疼了。</p>\n<p data-pid=\"V1_z74Uv\">本组中实力最强的是三狮军团，身价世界第一，从英超源源不断输送优质球员的英格兰，前中后都不乏明星球员，而世界杯和欧洲杯的洗礼让这支球队更加成熟，唯一担心的是他们会延续英国佬那种不作不死的精神内核，出现的各种和比赛无关的骚操作。但本次赛程对他们有利，索斯盖特完全有时间调整，锁定一个出线名额不成问题。</p>\n<p><img src=\"https://picd.zhimg.com/v2-c94c3dbbde0506c6e3c4c046397a646d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"625\" data-rawheight=\"312\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-c94c3dbbde0506c6e3c4c046397a646d\" data-watermark-src=\"v2-cd4ab22b4c3cd6ebd3bcb0de48de37ae\" data-private-watermark-src=\"v2-2b89261ca01ae195abeb05d6701a74d9\"></p>\n<p data-pid=\"8rtFqbXr\">英格兰人在小组赛碰到的第一个对手便是伊朗，作为国足历年来的苦主，老帅奎罗斯一手将这支球队调教为亚洲顶级，他们的当家球星是效力于勒沃库森的阿兹蒙和波尔图的塔尼，强硬的对抗和硬朗的球风让波斯铁骑在亚洲所向披靡，但这套阵容去硬抗欧洲球队显然不够看。波斯铁骑的出线形式十分不妙。</p>\n<p data-pid=\"ZmjSgv3n\">与伊朗在国家层面势同水火的美国队则是这组出线的第二热门。都说美国是足球荒漠，但他们本届世界杯的阵容可圈可点。切尔西的普利西奇、尤文的麦肯尼和米兰的德斯特，以五大联赛和美国联盟为班底的美国人在这届世界杯也刮起了青春风暴。而这，说不定会令人眼前一亮。</p>\n<p data-pid=\"L649cahN\">本组中最后确定的球队是威尔士，红龙军团淘汰了乌克兰，时隔64年重回世界杯。这支球队的许多球员都是英超的老熟人，大英内战话题十足。红龙的当家球星仍是大圣贝尔，但缺乏大赛经验将是这支球队的短板，与美国队的比赛或将成为威尔士人出线的胜负手。对于这个恩怨之组，你们认为小组晋级将是哪两支球队呢？</p>\n<p><br></p>\n<p><br></p>\n<p><img src=\"https://picx.zhimg.com/v2-d7d0fb608899a5d8553becab5680482a_720w.jpg?source=b1748391?rss\" data-rawwidth=\"690\" data-rawheight=\"500\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-d7d0fb608899a5d8553becab5680482a\" data-watermark-src=\"v2-17660b8879395ea79a8b8387c3753c3c\" data-private-watermark-src=\"v2-79730ddfd5ed7070a00696775a7c687a\"></p>\n<p data-pid=\"N8hE-KVp\">C组：</p>\n<p data-pid=\"5108t8xz\">C组共有四支球队，104名球员，但全世界的目光和所有的镁光灯都只是集中在一个人的身上，这个人就是梅西。</p>\n<p data-pid=\"1us8dHaf\">作为梅西的最后一届世界杯，很多人都已经在畅想着绝代双骄会师决赛的那一幕。但他们的对手显然都不是摆设。小组赛就看谁能给潘博斯帕雄鹰制造麻烦。本组除阿根廷外还有两只鹰，分别是沙漠绿鹰沙特阿拉伯和东欧白鹰波兰，最后则是草帽军团墨西哥。</p>\n<p data-pid=\"lvTBNb_c\">阿根廷不论是纸面实力，阵容厚度和大赛经验都占据着明显的优势。围绕梅西而构建的阵容帮助他们在世预赛中轻松晋级。潘博斯帕雄鹰的实力足以保证他们在小组赛稳定出线，但为了避免再次碰到法国，阿根廷队必须全力争夺小组第一。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-bac8bc8ae84ee94b621761fdbe7d5e26_720w.jpg?source=b1748391?rss\" data-rawwidth=\"388\" data-rawheight=\"365\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-bac8bc8ae84ee94b621761fdbe7d5e26\" data-watermark-src=\"v2-befb544cf9279175353d2972168ae430\" data-private-watermark-src=\"v2-90687a6dbadaaa5384ca09ebec86ed62\"></p>\n<p data-pid=\"8OLvdANU\">而唯一能对阿根廷人造成麻烦的恐怕只有墨西哥。草帽军团已经连续七届世界杯小组出线，当然他们也连续七届淘汰赛首轮就回家。这只上限低，但下限高的球队阵中有诸如劳尔-西门尼斯，洛萨诺等锋线好手，是本组晋级的第二热门。</p>\n<p data-pid=\"oLzj8lKS\">C组的欧洲球队代表是由莱万领衔的波兰队，红白军团战胜了瑞典获得正赛资格，但这支锋线闪耀、整体实力一般的球队大赛表现却是习惯性疲软，上届小组垫底，再加上和小日本来了一出足以钉入世界杯历史耻辱柱的默契球，这一届，他们恐怕继续难有作为。呸！</p>\n<p data-pid=\"IknYJflH\">沙特这次真的太难了。世预赛提前晋级的沙特进入正赛后直接傻眼，即便他们有半个主场的因素加持，但这支以本国联赛为班底的球队前景十分惨淡。他们世界杯首战必输惨案的记录恐怕将继续上演。相比B组的仇深似海，C组这四支来自不同大洲、风格各异的球队反而更有看意，你们认为呢？</p>\n<p><br></p>\n<p><br></p>\n<p><img src=\"https://picd.zhimg.com/v2-b34f0ec3ed70d8a16a76210313616a86_720w.jpg?source=b1748391?rss\" data-rawwidth=\"690\" data-rawheight=\"500\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-b34f0ec3ed70d8a16a76210313616a86\" data-watermark-src=\"v2-da165df76cbabe45e24009fc98f58713\" data-private-watermark-src=\"v2-900002ac8914ab48ebefe6d93d75ec77\"></p>\n<p data-pid=\"AY6x5Jvu\">D组</p>\n<p data-pid=\"lwkX8wcq\">2022卡塔尔世界杯卫冕冠军魔咒比以往来得更早一些。当博格巴重伤，坎特确定无缘世界杯后，魔咒缠身的法国队能否出线成为了本届世界杯最大的迷题。</p>\n<p data-pid=\"NiOuKZ-U\">法国队所在的D组还有童话王国丹麦、袋鼠军团澳大利亚和迦太基之鹰突尼斯队，这四支球队中高卢雄鸡实力自成一档，但法国队想要走的更远，博格巴就不可或缺，如果11月他能火线复出，这支球队依旧是夺冠的热门球队。</p>\n<p data-pid=\"a4kKu-Im\">当然，抛开所谓的魔咒，高卢雄鸡大赛内部的习惯性内讧的苗头这次可能又要压不住了。毕竟金球先生本泽马、巴黎总监姆巴佩这些人哪个都不是好惹的主。看来，主教练德尚的烦恼不仅仅是那个在后面等着他铩羽而归虎视眈眈他帅位的齐达内啊。</p>\n<p><img src=\"https://picd.zhimg.com/v2-41ab9ec51ffe2ade37bd62c4c56bc676_720w.jpg?source=b1748391?rss\" data-rawwidth=\"797\" data-rawheight=\"441\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-41ab9ec51ffe2ade37bd62c4c56bc676\" data-watermark-src=\"v2-6f30a19d94e6fa74721a58a1890658cf\" data-private-watermark-src=\"v2-23b73bc4c7b13e952a58f590b3a7c2e0\"></p>\n<p data-pid=\"PaR9bZnO\">本组中的出线热门还有丹麦队，他们在世预赛上延续了欧洲杯的上佳状态，八战全胜狂轰27球且未丢一球强势晋级，丹麦阵中有着不少大牌球员，小舒梅切尔、埃里克森、霍伊比尔等球星加成让这支球队颇具竞争力，力压法国出线再创丹麦童话或许不是梦。</p>\n<p data-pid=\"EK0A35h0\">与两支欧洲球队相比，来自亚足联的澳大利亚被一致看死，虽然他们在附加赛淘汰了秘鲁挺进正赛，但一向依靠身材优势，强调高空球压制的袋鼠军团，在卡希尔退役后始终缺少一个稳定的得分点。受到实力的限制，他们注定是一支遇弱不强，遇强更弱的打卡型球队。</p>\n<p data-pid=\"DgAj7K6E\">最后来到神奇的非洲大陆，加泰基雄鹰突尼斯已经连续两届杀入到世界杯正赛，他们是非洲区最平民化也是最稳定的球队。来自圣埃蒂安的哈兹里是这支球队仅有的明星球员，但可不要小瞧突尼斯队，本组的搅局者定是他们。总之，D组的冷门和奇迹一定不会少。记得到时准时收看大戏的拉开哈。</p>\n<p><br></p>\n<p><br></p>\n<p><img src=\"https://picx.zhimg.com/v2-e052eba62f5e24730fd1afb9e686eb36_720w.jpg?source=b1748391?rss\" data-rawwidth=\"690\" data-rawheight=\"500\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-e052eba62f5e24730fd1afb9e686eb36\" data-watermark-src=\"v2-e5a734e278934b0bb468c14abc9074db\" data-private-watermark-src=\"v2-decae27ea0c504fcf5776433c1f0b45e\"></p>\n<p data-pid=\"nni-F1S-\">E组</p>\n<p data-pid=\"Ok578k5a\">2022卡塔尔世界杯最遗憾的是绝对是意大利没进入正赛，否则如果E组的哥斯达黎加换成意大利的话，外加德国、日本、西班牙组团厮杀，绝对妥妥的梦回二战。</p>\n<p data-pid=\"V8vZnq6C\">在俄罗斯遭到羞辱的德国战车卷土重来，弗里克接手后依旧以拜仁球员为架构组建阵容，高位逼抢加上快速推进的战术让他们在世预赛上摧枯拉朽。并且德国终于有了像样的高中锋人选，那便是本赛季在德甲大杀四方的菲尔克鲁格，虽说离金色轰炸机克林斯曼还有差距、但至少德国人开始找回曾经的那个自己，不再偏执于传控至死，就是他娘的不射！</p>\n<p><img src=\"https://pic1.zhimg.com/v2-83806661749ac1ac9fdddce7f75f4c8c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"633\" data-rawheight=\"326\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-83806661749ac1ac9fdddce7f75f4c8c\" data-watermark-src=\"v2-61ca1b5406cd0e4a103cef7bf29b2d8c\" data-private-watermark-src=\"v2-d4254a3fa1f581eec2dcdf064faff975\"></p>\n<p data-pid=\"x7d4ZGny\">与德国同在复苏期的是斗牛士西班牙。在哈白时代后，西班牙经历了更新换代，恩里克启用了大量年轻球员，以加维和佩德里领衔的青年禁卫军继承了西班牙人那细腻的技术和优秀的传带，但西班牙同样缺少一个能一槌定音的前锋，他们是世预赛欧洲区进球最少的球队。锋无力的这个难题将继续在世界杯上困扰着这支年轻的西班牙队。</p>\n<p data-pid=\"H9znW2hJ\">本组中的亚洲代表是日本队。日本队中不乏有久保健英、富安健阳等五大联赛效力的球员，但日本队就怕碰上技术和身体都比他们好的球队，上届世界杯被比利时人两个头球砸得连阿妈都不认得的惨剧还历历在目。但非常不幸的是，这个小组中除了日本人自己，其他三支全部都是！日本人这次的命运恐怕是凶多吉少。所以，请允许我不厚道地笑出声来，</p>\n<p data-pid=\"zkGiaQVp\">小组中最后一支球队是哥斯达黎加，加勒比海盗曾在巴西世界杯上以黑马姿态令世界刮目相看，但八年之后今非昔比，今年他们直到附加赛才艰难晋级。哥斯达黎加这次想继续扮演黑马角色属实不易，是的，他们已经尽力了。</p>\n<p><br></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-48cd1b38a7ac1016eb0f90764b254f71_720w.jpg?source=b1748391?rss\" data-rawwidth=\"690\" data-rawheight=\"500\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-48cd1b38a7ac1016eb0f90764b254f71\" data-watermark-src=\"v2-baa4c12ed21f9897686f4e999d274bec\" data-private-watermark-src=\"v2-9b6bf3746dda31a84ab24e93e8282f54\"></p>\n<p data-pid=\"bppvbn6C\">F组</p>\n<p data-pid=\"MoMX45BV\">世界杯F组，这里有欧洲红魔比利时，上届亚军克罗地亚，枫叶军团加拿大以及足球很纯粹的摩洛哥。本小组是老牌劲旅的落日余晖和新星球队的抢班夺位，最终出线的结果可能超乎你的想象。</p>\n<p data-pid=\"gAWcAiPG\">迎来黄金一代谢幕演出的比利时曾连续多年积分排名世界第一，四年前他们创造了队史最佳的季军成绩，但时间改变了太多东西，虽然阵中仍不乏有大师德布劳内，门神库尔图瓦，汉堡界民宿阿扎尔和小平头啤酒肚的卢卡库，但在孔帕尼和维尔马伦退役后，比利时的防线上是真无人可用。两位加起来超过70岁的老球员带上几个不满20岁的孩子，即便能跨过小组赛，但到了淘汰赛首轮，你觉得他能战胜德国还是西班牙？</p>\n<p data-pid=\"VAqhmZmn\">本小组另一出线热门是上届亚军克罗地亚。俄罗斯世界杯他们一路闯进决赛，但遗憾输给了法国队。当克罗地亚狂想曲还未结束，拉基蒂奇和曼朱基奇等球员却已隐退。只有37岁的莫德里奇仍在坚守，虽然阵容趋于平庸，但格子军团三条线上没有明显的的短板，小组出线应该问题不大。</p>\n<p><img src=\"https://picd.zhimg.com/v2-34367f457a4b1cf50a4edacbc0976fef_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-34367f457a4b1cf50a4edacbc0976fef\" data-watermark-src=\"v2-bd64a28e60f06ce4c644ccf11dacb6cc\" data-private-watermark-src=\"v2-643009ca05b97decd9db89eb23344b2a\"></p>\n<p data-pid=\"gm8T84Z5\">力压美国和墨西哥，加拿大队时隔36年重回世界杯，加拿大最大牌的球星当属效力于拜仁的阿方索戴维斯和里尔的乔纳森戴维，一个坐镇后场，一个攻城拔寨，他们的发挥将很大程度决定这支球队的本性。</p>\n<p data-pid=\"nZL_JeUA\">最后一支球队摩洛哥，经过2018年世界杯把霸道总裁C罗领衔的葡萄牙队按在地下摩擦的经典一战后，很多球迷对这支球队不陌生。他们阵中不乏有阿什拉夫和齐耶赫这样的大牌球星，但这支低调的非洲球队，最大的问题是临阵换帅，球队动荡。即便他们难以抗衡比利士和克罗地亚，但我相信他们依然能制造不少麻烦。</p>\n<p data-pid=\"8MXJ4wiV\">总之，这四支球队人气和话题可能没有隔壁死亡之组高，但同样不乏看点和精彩，值得期待。</p>\n<p><br></p>\n<p><br></p>\n<p><img src=\"https://picd.zhimg.com/v2-6714b75da0220b035494958e7b820cb4_720w.jpg?source=b1748391?rss\" data-rawwidth=\"690\" data-rawheight=\"500\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-6714b75da0220b035494958e7b820cb4\" data-watermark-src=\"v2-87908f43f8c5290227d9429a1cbd867c\" data-private-watermark-src=\"v2-734354f282ad044eb81b53182015a404\"></p>\n<p data-pid=\"xrlRnPkZ\">G组</p>\n<p data-pid=\"bxRNgV_F\">四年轮回，冤家路窄，俄罗斯世界杯E组的三支球队再次相遇，三强齐聚卡塔尔世界杯G组，而这组绝对算是低配版的死亡之组。当然五星巴西除外，塞尔维亚、瑞士和喀麦隆将为了一个出线名额而争破头。</p>\n<p data-pid=\"m3Eyg_wN\">桑巴军团作为夺冠最大热门在本组中一骑绝尘，内马尔、维尼、修斯塔、塞米罗、阿里松等巨星齐聚这支巴西队。这届他们的阵容厚度深到令人发指，就算单从实况足球这款游戏的数值来计算的话，他们的替补阵容都能小组出线。但最终决定巴西人能否举起大力神杯的，不是技术，不是战术，而是他们是否能真的战胜心魔，他们的对手其实只有他们自己！</p>\n<p><img src=\"https://picd.zhimg.com/v2-ea949ec315b9db24b294c1b345ab11d4_720w.jpg?source=b1748391?rss\" data-rawwidth=\"393\" data-rawheight=\"368\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-ea949ec315b9db24b294c1b345ab11d4\" data-watermark-src=\"v2-5c2a5c9eaaec40dc0b61367c462a2083\" data-private-watermark-src=\"v2-fb305c0314cc09936bd4de04872182c3\"></p>\n<p data-pid=\"k-RYP258\">巴西是夺冠第一，而塞尔维亚绝对是黑马第一。这只巴尔干雄鹰拥有米特洛维奇和弗拉霍维奇这对双子星。中后场有塔迪奇和科斯蒂奇等实力球星坐镇，他们这套阵容是时候出成绩了。只要跨过瑞士这道坎，小组第二出线应该不成问题。是啊，南斯拉夫足球，是时候回归了。</p>\n<p data-pid=\"4HFEeNHM\">作为大赛钉子户，在老油条瑞士面前，法国队都得跪。虽然沙奇里、扎卡和索默这三条大腿的年龄在增长，但他们依旧不容小视。和塞尔维亚的比赛将直接决定出线权的鹿死谁手，2018年世界杯的那场充斥着足球原始野性、拳拳到肉的暴力美学的对碰又将再次上演，值得期待！</p>\n<p data-pid=\"vHLqlwnb\">没有了埃托奥的喀麦隆队看似是本组的鱼腩，但他们也有秘密武器，那便是坚固的防守。世预赛中，非洲雄狮仅丢三球，一路磨掉了强大的科特迪瓦和阿尔及利亚，赶上了末班车。这支球队的当家球星是拜仁的舒波莫廷和国米门将奥大拉，其余则多非五大联赛球员，但只要他们拿出狮子般的防守勇气，就一定会令其他对手头疼。</p>\n<p data-pid=\"lE8hBzcy\">除了巴西，你认为本组中出现的另一支球队会是谁？</p>\n<p><br></p>\n<p><br></p>\n<p><img src=\"https://picd.zhimg.com/v2-7b9f8798c6745fdb00d3dd3ccc1bda64_720w.jpg?source=b1748391?rss\" data-rawwidth=\"690\" data-rawheight=\"500\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-7b9f8798c6745fdb00d3dd3ccc1bda64\" data-watermark-src=\"v2-ca8e73d173307a65114a44582469d54f\" data-private-watermark-src=\"v2-a62d5f49dda70cc875350bf0360e83df\"></p>\n<p data-pid=\"KcS0x3wa\">H组</p>\n<p data-pid=\"uYCHYlP1\">各位久等了，本届世界杯恩怨最深的一个小组来了。H组4支球队分别是葡萄牙，韩国，加纳和乌拉圭，有仇报仇，有冤报冤，无论是新仇还是旧恨，卡塔尔咱们一起算。</p>\n<p data-pid=\"nL2aHrp7\">拥有新黄金一代的葡萄牙是小组的出线热门，葡萄牙中前场有B席，B费，后场有迪亚斯、坎塞洛以及这支球队的精神领袖C罗。在霸道总裁C罗的带领下，他们磨刀霍霍，已经做好了报仇的准备。而20年前亲手淘汰葡萄牙的韩国队已经今非昔比，想要在强敌环伺的小组中出线，可能真的寄希望于裁判帮忙。</p>\n<p><img src=\"https://pica.zhimg.com/v2-3d4c1dc7470efe4d86e209cf2feec3ba_720w.jpg?source=b1748391?rss\" data-rawwidth=\"444\" data-rawheight=\"541\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-3d4c1dc7470efe4d86e209cf2feec3ba\" data-watermark-src=\"v2-830751f6619fcab9256cd2bd3519130c\" data-private-watermark-src=\"v2-02a9fb35571591ba7d6f53375fe4acb1\"></p>\n<p data-pid=\"dusYfNUq\">韩国队的问题是头重脚轻，虽然金英权金文哉名声在外，但实际的效果却不如人意。他们只能寄希望于孙兴敏能延续神勇状态，但坏消息是亚洲一哥面部刚刚遭到重创，是否会影响到世界杯之行仍未可知。</p>\n<p data-pid=\"Ff_Ilkc_\">本组中的另一恩怨对决是乌拉圭和加纳，阵容老化折磨着这支南美劲旅，但老将的同样尚能一战。锋线上苏亚雷斯、卡瓦尼和努涅斯组成新三差戟，中后场有巴尔维德、本坦布尔和希门尼斯等人。单看阵容可能不如诸多热门球队，但他们从来都是难啃的骨头，制造过不少经典名局。</p>\n<p data-pid=\"4ZJsLuSK\">其中受害最深的自然是加纳。加纳队沉沦多年后终于回归世界杯，他们阵容中有多位双国籍的球员，但球员的磨合依旧存在很大问题，球队后卫和锋线上的问题不小，即便他们是本组最不被看好，但与乌拉圭的比赛一定能燃起熊熊怒火，在复仇的基调下，黑星军团或许真能带来奇迹，不知道这四支打成一团的球队最终出线的将会是谁呢？</p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-04fc6bac7aafb0fdd9b66bac2c4485f8_720w.jpg?source=b1748391?rss\" data-rawwidth=\"854\" data-rawheight=\"475\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-04fc6bac7aafb0fdd9b66bac2c4485f8\" data-watermark-src=\"v2-11b92e549d897cf37e643d94a2604e87\" data-private-watermark-src=\"v2-8c33fd94b1521b456004d77142b109a7\"></p>\n<p data-pid=\"tKpBzOz_\">好啦，A组到H组32支球队都讲完了，拉拉杂杂胡侃了一通，只是一家之言，绝对不作为下注的参考哈。</p>\n<p data-pid=\"drYKuO1L\">本人一直提倡纯粹看球，这样才能享受足球真正的乐趣。</p>\n<p data-pid=\"sbU1GmzA\">是的，</p>\n<p data-pid=\"Pw7-spBE\">在此再宣发一下，【智叔侃球】，即将随2022年卡塔尔世界杯而再次回归！希望你们能一如既往地支持哈！</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5a414a0c35e45c9afe2434694ceb9413_720w.jpg?source=b1748391?rss\" data-rawwidth=\"640\" data-rawheight=\"904\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-5a414a0c35e45c9afe2434694ceb9413\" data-watermark-src=\"v2-bb571e177b58e0b41676963b2c27c6cc\" data-private-watermark-src=\"v2-7fe7f2e6096e9ba59a05daf6b6c80096\"></p>\n<p><br></p>\n<p><img src=\"https://pica.zhimg.com/v2-2ab0ffbef16e1a3001ad3eee48d94855_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1076\" data-rawheight=\"793\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-2ab0ffbef16e1a3001ad3eee48d94855\" data-watermark-src=\"v2-fcd775bce94d64bed505bc7250db5cff\" data-private-watermark-src=\"v2-0fdffe72cf7ae937935f2657de946660\"></p>\n<p><br></p>\n<p data-pid=\"E1RgpAOy\">原文发布在本人的公众号【智叔杂侃】，见以下链接，感兴趣的朋友可以关注看更多原创文章。谢谢！</p>\n<a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"http://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/dlfwwvlPX3fgQap9sQxKuQ\" data-image=\"https://pica.zhimg.com/v2-4393e4e443f22d1967a0a907260e124e.jpg?source=b1748391\" data-image-width=\"869\" data-image-height=\"370\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【智叔侃球】诸神黄昏：卡塔尔世界杯前瞻</a><p><br></p>\n<p><br></p>\n<h3>———————————————————————————</h3>\n<h3>【智叔侃球】11月21日更新</h3>\n<h3>卡塔尔对阵厄瓜多尔</h3>\n<p><img src=\"https://pica.zhimg.com/v2-92f0173e2c0cfcf291fd70ecd19a4b85_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"1080\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-92f0173e2c0cfcf291fd70ecd19a4b85\" data-watermark-src=\"v2-c86ef3cf3fb5fa069b6ff44cfa157872\" data-private-watermark-src=\"v2-d669b224646f2de45c7c14ef41e408ac\"></p>\n<p data-pid=\"tMTFTGBo\">【智叔侃球】刚在种花家航展上买买买的中东土豪们笑得合不拢嘴兴奋地清空了购物车，那一枚枚直插云霄的东方系列快递和一架架各种型号先进的无人机，更过分的是兔子竟然还打包出售一整支现代化的合成旅装备，这着实让中东土豪们觉得自己一下就能迈入了世界强军之列。</p>\n<p data-pid=\"zHXRognV\">在土豪们的世界观里，这个世界或许没有超能力，但一定有“钞能力”。没有什么是一张美金搞不掂的，如果有，那就两张！有钱，就是任性！</p>\n<p data-pid=\"UHpcAnTv\">是的，本届世界杯东道主卡塔尔在今晚这场对厄瓜多尔的揭幕战前，是笃信这条道理的，而且是深信不疑。</p>\n<p data-pid=\"RT6o0q1r\">为了这次比赛，东道主卡塔尔人挥舞着大笔美金建立了哪怕在欧洲足坛也是最顶级的阿斯拜育学院，在阿拉伯和非洲考察了各年龄段超过12岁以下的足球苗子，择优归化培养成自个的青训球员。</p>\n<p data-pid=\"5CBqcqvQ\">他们不止关注硬件，在这个过程里还去包括巴萨在内的欧洲豪门高薪挖来各种球探、青训教练和数据分析师。这次带领卡塔尔国家队打世界杯的主教练桑切斯，就是来自拉玛西亚。</p>\n<p data-pid=\"2020nznJ\">他们把这批孩子养出来之后，过去几年开始组队满世界刷经验。亚洲杯、美洲杯、中北美和加勒比金杯赛…甚至还去世界杯欧洲区预选赛掏钱找陪练。</p>\n<p data-pid=\"EvggmD78\">成果还是有的。2019年他们拿到了亚洲杯冠军。</p>\n<p data-pid=\"WB8LyMMp\">卡塔尔人志得意满，踌躇满志，觉得是时候见证奇迹的时刻了！</p>\n<p data-pid=\"ylJWcoiG\">然而比赛真打起来，卡塔尔人瞬间感受到了什么叫做降！维！打！击！</p>\n<p data-pid=\"Warm9ta4\">他们不明白，厄瓜多尔这队穷逼，怎么可以把我们这队用美金武装到牙齿的亚洲冠军按在地下不停地摩擦，而且还丝毫不给东道主面子，两球将东道主砍于马下。</p>\n<p data-pid=\"tDn_H9dQ\">在“胜厄瓜多尔、平塞内加尔、小负荷兰，靠净胜球小组第二出线”的幻想中，卡塔尔人以东道主的姿态开启了自己的首次世界杯之旅。但理想很丰满，现实很骨感，土豪们是花最多的钱，挨最毒的打...</p>\n<p data-pid=\"sjQav0qy\">怎么说呢，归化策略或许可以帮助一支处于足球荒漠中的国家队在亚洲范围内迅速地崛起；但在世界范围内，如果没有正经的体系建设的话，就算进了世界杯的决赛圈，也只有被先进完整体系球队蹂躏的份儿。</p>\n<p data-pid=\"TCXwI1DX\">是啊，有钱可以让你买来各种人才，但却不能让你成为人才。</p>\n<p data-pid=\"IxdcZ1Po\">最后，我想说的是，厄瓜多尔人用比分证明了自己的清白之躯，击碎了赛前各种小道传闻，虽穷但却志坚！</p>\n<p data-pid=\"dg5LUogn\">好样的！厄瓜多尔人！我选择多金的卡塔尔！</p>\n<p data-pid=\"UwNNY19C\">2022年卡塔尔世界杯揭幕战</p>\n<p data-pid=\"yPCKlqoN\">卡塔尔0:2厄瓜多尔</p>\n<p><img src=\"https://picd.zhimg.com/v2-c87acdbe02118b3908a754613f9edee6_720w.jpg?source=b1748391?rss\" data-rawwidth=\"720\" data-rawheight=\"492\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-c87acdbe02118b3908a754613f9edee6\" data-watermark-src=\"v2-55ac3a9960d6462976b4205e82017b5f\" data-private-watermark-src=\"v2-b7fa2b0675f12dd2f6b6444a9a1a243b\"></p>\n<p><br></p>\n<p><br></p>\n<h3>———————————————————————————</h3>\n<h3>【智叔侃球】11月22更新</h3>\n<h3>英格兰对阵伊朗</h3>\n<p><img src=\"https://pic1.zhimg.com/v2-4492d1f4f8e50586b344200724e44428_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1125\" data-rawheight=\"1319\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-4492d1f4f8e50586b344200724e44428\" data-watermark-src=\"v2-41b5a407ba9f989efa9201660bf607e7\" data-private-watermark-src=\"v2-b0938b25a5d740692acbb661495f64ca\"></p>\n<p data-pid=\"WVG_Kvsu\">【智叔侃球】英格兰人和波斯人的这场对决最终定格在6:2，这个悬殊的比分从表面上看是一场有关虐菜的比赛，但从另一方面来看，它其实是一个年轻人的救赎之旅，更是奏响新时代降临的一篇华美乐章。</p>\n<p data-pid=\"Kro88Xbj\">从2018年开始，随着英格兰队球员的颜值断崖式崩塌和太太团的花边新闻不再占据头版后，英格兰人开始逐步回归到足球本身，这种专注带给英格兰人丰厚的成绩回报。</p>\n<p data-pid=\"iQkHVUJB\">英格兰人不再是三喵，他们变回了三狮，赢下了所有该赢的比赛，也输掉了该输的比赛。一切都在意料之中，稳定得让人可怕。</p>\n<p data-pid=\"Bf5zdXKI\">2021年欧洲杯获得亚军后，英格兰人在卡塔尔又一次刮起了青春风暴，但这一次他们愈发的成熟，年龄配置更加合理。加上有世界第一联赛的加持，英格兰人的眼神里对大力神杯的渴望比任何一次都要强烈。</p>\n<p data-pid=\"DYKlSx2o\">此战，英格兰人21岁的萨卡首发了，19岁的贝林厄姆也首发了。</p>\n<p data-pid=\"y8t-6OnG\">萨卡最近三个赛季都是阿森纳右边锋位置的绝对主力。更是去年欧洲杯上是三狮军团的一个爆点。决赛时索斯盖特让这么年轻的小孩踢点球大战，一方面是他自己心大，另一方面也是对萨卡有一定信心。虽然踢飞点球丢掉冠军的那一个结果是那么的残酷，让这个少年背负了本不该他承受的痛，但498天后，他那一脚抽射完成了自我救赎，也完成了涅槃。</p>\n<p data-pid=\"pCLMRcD8\">而19岁的贝林厄姆，那一个头球吊射，画面太美，酣畅淋漓。而你们能想到吗，这个只有19岁的年轻人已经在德甲劲旅多特蒙德踢了四个赛季的主力。</p>\n<p data-pid=\"NFnesiSx\">自古英雄出少年，没有人能永远年轻，但永远有人年轻！</p>\n<p data-pid=\"Rmyzj4gL\">而对于伊朗人而言，这足以证明在绝对实力前面，一切的战术或打法都是不值得一提的。伊朗人也不会明白中国球迷的痛，这种球过不了半场，三脚传球必丢和中场失控的感觉，对于我们简直熟悉得太不要不要的，是的，多少次看中国队比赛的时候就是这感觉！</p>\n<p data-pid=\"cEbIYDlg\">我们再想想当年那场亚洲杯四分之一决赛，中国队令人绝望的输给伊朗0比3，再看看这场比赛的差距...</p>\n<p data-pid=\"Oc9vcBDD\">哈哈哈哈.....</p>\n<p><br></p>\n<p data-pid=\"cd8M0sQU\">2022年卡塔尔世界杯</p>\n<p data-pid=\"lWWVIzn9\">伊朗2:6英格兰</p>\n<p><img src=\"https://pica.zhimg.com/v2-d2de57e80c3bd4bac07ead593944e70a_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1260\" data-rawheight=\"950\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-d2de57e80c3bd4bac07ead593944e70a\" data-watermark-src=\"v2-764c54052856839608dc11f42006ce1d\" data-private-watermark-src=\"v2-565f685502e8211eb666851653dc93a0\"></p>\n<p><br></p>\n<p><img src=\"https://pica.zhimg.com/v2-051f6c3d68da780d3db4aca1a7815f58_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1024\" data-rawheight=\"670\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-051f6c3d68da780d3db4aca1a7815f58\" data-watermark-src=\"v2-563d5411ad0d8d235de0207504abc511\" data-private-watermark-src=\"v2-38f336338b905489a7df0ac1bede66f9\"></p>\n<p><br></p>\n<p><br></p>\n<p><br></p>\n<h3>———————————————————————————</h3>\n<h3>【智叔侃球】11月22日更新</h3>\n<h3>荷兰对阵塞内加尔</h3>\n<p><img src=\"https://pica.zhimg.com/v2-ae987e85840ee89dfebea40106f10c17_720w.jpg?source=b1748391?rss\" data-rawwidth=\"640\" data-rawheight=\"1131\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-ae987e85840ee89dfebea40106f10c17\" data-watermark-src=\"v2-043ed089f486bb03585e6fcbf96f1f25\" data-private-watermark-src=\"v2-6433652ce9c737f6ee139de532abd6d6\"></p>\n<p data-pid=\"xFi5f46v\">【智叔侃球】荷兰人与塞内加尔人的这场比赛，是开赛以来对抗最强，强度最高，攻防转换快得让人眼花缭乱的一场。这才是高手过招，虽然进球不多，其实过程比英格兰人6-2虐菜那场好看得多。</p>\n<p data-pid=\"Mco7JBAK\">但其实话说回来，通观整场比赛，踢得开放酣畅，大开大合的是塞内加尔人，而荷兰人却龟缩起来，打起了防守反击，场面甚至一度以破坏比赛节奏为主。</p>\n<p data-pid=\"DAmmMHWo\">或者这么说吧，荷兰人的战术是护住要害抱头蜷缩在墙角先挨打，等你打累了，我再趁你喘气不备时一板砖上去结果你...</p>\n<p data-pid=\"a3VRcbuh\">荷兰人已经不是以前那支全攻全守，两翼齐飞，华丽飞舞的无冕之王了。曾经那个飞翔的荷兰人，移动的方格拉毕斯，这些赞美在荷兰队身上是再也看不见了。现在这支荷兰队，完全没有一点米歇尔斯的血脉，没有阿贾克斯血统的一点东西。</p>\n<p data-pid=\"IjhixBob\">而塞内加尔人和大部分非洲球队一样，拥有着一群天赋爆棚，能力漫溢，身体素质超强的个人，但战术纪律性太差，整体性不行，布置太粗糙，这也导致了他们的比赛过程很好看，但却永远走不远。</p>\n<p data-pid=\"Am4Vu427\">最后，保守的荷兰人两球完胜才华横溢的塞内加尔人，这是一场体系和战术的完胜，是荷兰队整体团队实力的具体体现，也是战术执行能力优越的具体结果。</p>\n<p data-pid=\"lc34gdis\">我不能指责荷兰人的功力和丑陋，毕竟他们赢了，2比0的结果是完美的，是值得荷兰人欢呼雀跃的。但从克鲁伊夫到范巴斯滕，再到博格坎普，拥有这些足球艺术家的荷兰队，再也不是我心中的那支无冕之王了。</p>\n<p data-pid=\"xbZ_Lich\">再见了，那艘乘风破浪的“飞翔荷兰人”号！</p>\n<p data-pid=\"i0miaWQl\">衷心祝愿你们能走得更远一些...</p>\n<p><br></p>\n<p data-pid=\"OpuXvkeP\">2022年卡塔尔世界杯</p>\n<p data-pid=\"XA0Das2F\">荷兰2:0塞内加尔</p>\n<p><img src=\"https://pic1.zhimg.com/v2-9e0dc673d89ba5f616cd1926512f0b20_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1280\" data-rawheight=\"640\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-9e0dc673d89ba5f616cd1926512f0b20\" data-watermark-src=\"v2-47a78533a00120b3ce9566d714be7c5a\" data-private-watermark-src=\"v2-ae937967861143ab3d41049de3b30efb\"></p>\n<p><br></p>\n<p><br></p>\n<p><br></p>\n<h3>———————————————————————————</h3>\n<h3>【智叔侃球】11月22日更新</h3>\n<p data-pid=\"D7A2127X\">阿根廷对阵沙特阿拉伯</p>\n<p><img src=\"https://picx.zhimg.com/v2-33ca31f4cce8b7bd229ab7c36fff6171_720w.jpeg?source=b1748391?rss\" data-rawwidth=\"1907\" data-rawheight=\"1133\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-33ca31f4cce8b7bd229ab7c36fff6171\" data-watermark-src=\"v2-47906237f56912e45f189827728f03ae\" data-private-watermark-src=\"v2-23dd602be308c2258763cfc0e56abd7e\"></p>\n<p data-pid=\"8ETGQWkj\">【智叔侃球】我相信，今晚过后，梅西会问一个问题，为什么赢不了？没理由啊...同样，全世界下重注赌阿根廷赢的人在走上天台那一刻也会问同一个问题，为什么赢不了？ 没理由啊...</p>\n<p data-pid=\"VaezGWYm\">是啊，大家都想不明白，双脚会拉小提琴的阿根廷人是艺术足球的典范，2022年的这支阿根廷更是最好最团结的一队，也是最有可能帮助梅老板捧起大力神杯的一队。</p>\n<p data-pid=\"SItce-vl\">虽然有差不多80%的控球率，虽然有压倒性的优势，虽然全沙特队加起来还不及梅西一个人的身价，但今天这场比赛不属于阿根廷，不属于梅西。</p>\n<p data-pid=\"ETn8jx9M\">沙特人大概是知道，自己面对阿根廷这些球星摆大巴也是摆不住的，干脆就直接越位陷阱走起。</p>\n<p data-pid=\"8mY2FBtL\">一边轻中场直接各种穿越传球，另一边中前场一丢球后防就急停甚至前压。带来上半场最高光的大概就是边裁和var半自动越位系统。阿根廷人三个进球直接给吹掉后，心态已经开始崩了...</p>\n<p data-pid=\"643Zn4JM\">沙特赌的就是越位陷阱生效让你跑，然后下半场开局体能错位冲一波。结果真的赌赢了，然后再开始摆大巴，众志成城，舍身堵枪眼，甚至还血溅球场...</p>\n<p data-pid=\"pGSHH5zu\">这场比赛最后结果说明，沙特人这个整体策略肯定是相当成功的。是的，这是一场科技的胜利，更是一场钞能力的胜利！</p>\n<p data-pid=\"Rrd5VpiH\">若干年后的一个黄昏，一位踢过这场比赛的沙特人老眼昏花地看向远方的夕阳，和坐在旁边的孙子骄傲地说到，想当年，你爷爷年轻的时候，曾经把这个星球最厉害的球王按在地下，死命地摩擦！</p>\n<p><br></p>\n<p data-pid=\"lVBlMmbL\">2022年卡塔尔世界杯</p>\n<p data-pid=\"EN5ccCEy\">沙特2:1阿根廷</p>\n<p><br></p>\n<p><img src=\"https://picd.zhimg.com/v2-2322a6dd06bef660b0cee7375ac50c0a_720w.jpeg?source=b1748391?rss\" data-rawwidth=\"1000\" data-rawheight=\"667\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-2322a6dd06bef660b0cee7375ac50c0a\" data-watermark-src=\"v2-6b5d7311e1ace57f5e5b96e3ca7b9951\" data-private-watermark-src=\"v2-62ecca85ded3661b0a883294ba84e020\"></p>\n<p><br></p>\n<p data-pid=\"oybcctGW\"><b>（持续更新，敬请期待）</b></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/chen-zhi-8-71?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">陈智</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/510506351/answer/2750342659?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">200 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/567235749?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2022卡塔尔世界杯，你心目中的冠军是谁呢？</a><br><a href=\"http://www.zhihu.com/question/502906250?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何预测 2022 年卡塔尔世界杯的冠军是谁？</a><br>\n","link":"http://www.zhihu.com/question/510506351/answer/2750342659?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价《假面骑士Black Sun》？","date":"2022-11-15 12:23:01","description":"\n<p data-pid=\"4Qbcs23M\">看完了Blacksun，想写些观后的所思所想以及个人对剧情的一些解读。各位读者们，求同存异。</p>\n<p data-pid=\"M9Qd9kHe\">因为Black是我唯一一部童年看完的昭和骑士（本该还有v3，但是那时觉得奶奶买回来的v3光碟封面上的v3不好看，遂返回音像店换了一盒初代奥。小时候的许多事都忘了，往往迷惑行为记得最深），故听到blacksun立项的消息后，期待值拉满。</p>\n<p data-pid=\"CP5ZXSKj\">看完Blacksun后，发现白石和弥交上了一部并不粉丝向且有一定观看门槛的答卷。这，注定了这部作品的口碑是两极分化的。</p>\n<p data-pid=\"eZ5sD3bY\">Blacksun是一部以特摄为载体的时代片，是一部魔幻色彩的传记片。而对于blacksun的主要受众（特摄粉）而言，大部分人也只能看见表面的荒唐言，解不了其中的荒唐泪。也只能一窥红粉，而不见背面的骷髅。所以，我个人非常喜欢这部作品，但也完全觉得它遭受争议和差评是应该的，因为，特摄仅仅沦为了它的载体。</p>\n<p data-pid=\"tiSZZ2gD\">Blacksun和商业暴死的超人幻想一样，同样双时间线，让人起初看得一头雾水。也同样套着特摄英雄的皮，讲左翼运动。劝退的人很劝退，喜欢的人很喜欢。</p>\n<p data-pid=\"LWzmIBY_\">在此，我也想说下我对这部剧一些情节的个人理解。如果不同意，那求同存异，如果对你理解剧情有一定帮助，或者所见略同，那我也很高兴。</p>\n<p data-pid=\"yi8SDB9O\">首先，在我们明白白石和弥究竟要借着Blacksun讲一个什么故事的时候，我们不妨来略谈下白石和弥的老师若松孝二。</p>\n<p data-pid=\"X0ey9JMj\">若松孝二，是日本知名的粉色电影导演。作为学生的白石和弥也曾于2018年拍摄了以老师若松孝二为主角的电影《我们无法阻挡》，为老师“立传”。而《我们无法阻挡》的背景70年代，也是日本左翼运动达到高潮，迎来转折点的年代。若松孝二于1971年拍摄了赤军纪录片《赤军/PFLP：世界战争宣言》，又于多年后的2007年又拍摄了关于赤军的纪录片《联合赤军实录：通向浅间山庄之路》（这部片里重信房子的演员是特摄粉的熟人——7X的女二号特工S的演员伴杏里）。可以说，70年代的往事对于若松孝二而言影响深远。他年轻时一度想加入赤军，多年后，也提及因过往的关系，被米国列入禁止入境的黑名单，愤然道：“日本再这样继续下去，会沦为米国的一部分。算了，我已经放弃了。”</p>\n<p data-pid=\"Q5j2zFMC\">Blacksun的故事，可以说是《我们无法阻挡》衍生的后传。若松孝二，对70年代的左翼思潮念念不忘。而学生白石和弥则以两部作品作为对泉下的老师的回声，在blacksun的故事中，相比现代线，白石和弥更注重1972的往事线。</p>\n<p><img src=\"https://picx.zhimg.com/v2-326c77ebb5984e90a314e9f1b49ff589_720w.jpg?source=b1748391?rss\" data-rawwidth=\"692\" data-rawheight=\"957\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-326c77ebb5984e90a314e9f1b49ff589\" data-watermark-src=\"v2-41f1b774b2f76c70f32dbb51d4e9b880\" data-private-watermark-src=\"v2-a45673464d3a51640e1ead646b3439a7\"></p>\n<p data-pid=\"xDB3wwOf\"><b>1972.分歧线</b></p>\n<p data-pid=\"esck2Zbf\">为什么选择1972？1972，是新生ip假面骑士诞生的第二年。1972，中美建交，成为日本左翼运动幻灭的转折点，派系分裂，浅见山庄事件发生，联合赤军向日本赤军过渡。1972，南光太郎、秋月信彦、剑圣比鲁吉尼亚分道扬镳。</p>\n<p data-pid=\"IKBHG8Ud\">1972年2月19日，浅见山庄事件，联合赤军的五名成员闯入河合乐器位于长野县的保养所浅见山庄，劫持管理员妻子作为人质。2月28日，警察攻入山庄，救出人质，逮捕五名赤军成员。</p>\n<p><img src=\"https://picd.zhimg.com/v2-a7643794b1a6ecbea68788e7329b005f_720w.jpg?source=b1748391?rss\" data-rawwidth=\"654\" data-rawheight=\"884\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-a7643794b1a6ecbea68788e7329b005f\" data-watermark-src=\"v2-7673b5733866e3053dbe7619553a8200\" data-private-watermark-src=\"v2-158e19138ee1dcae5b68b79cabcf657f\"></p>\n<p data-pid=\"XPvlJpnN\">1972年，可里等人绑架首相堂波道之助孙子小堂波作为人质，进入藏匿创世王的深山。最后，小堂波被救出。信彦，剑圣被捕，光太郎受伤。</p>\n<p><img src=\"https://picd.zhimg.com/v2-64e3827b808025caa17e7578223eb821_720w.jpg?source=b1748391?rss\" data-rawwidth=\"692\" data-rawheight=\"291\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-64e3827b808025caa17e7578223eb821\" data-watermark-src=\"v2-0a903fbd88f2cfbfee49371f5801b440\" data-private-watermark-src=\"v2-e5c4d989cc4ec6008f01e643e2c9807d\"></p>\n<p data-pid=\"S8yrXdgK\">神化47年（1972年）3月，超人革命军挟持人质，进入山岳据点。案后，警方发现了革命军成员被内部肃清的尸体。</p>\n<p><img src=\"https://picx.zhimg.com/v2-583453c06b50a9ab13286549909fea31_720w.jpg?source=b1748391?rss\" data-rawwidth=\"692\" data-rawheight=\"394\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-583453c06b50a9ab13286549909fea31\" data-watermark-src=\"v2-ecd2511c903f216a85e8e2e45e15954e\" data-private-watermark-src=\"v2-7860d05232b1b22bc373af58b357a268\"></p>\n<p data-pid=\"aIUIsluP\">浅见山庄事件，是联合赤军走向末路，日本左翼阵营分裂的标志事件。同样，于深山之中，光太郎，信彦，剑圣分道扬镳，三神官则以妥协换取堂波允许的一席之地。</p>\n<p data-pid=\"DsXClaGY\">而值得一提的是，最高收视率达到89.7%，引发广泛关注的浅见山庄事件中。包围山庄的警方吃日清泡面果腹的画面一度引发了民众对日清泡面的抢购潮，也是杯面流行的转折点。而在blacksun中，进入深山，看管小堂波的奥列佛与蝙蝠一样吃了日清杯面，这应该也是有意为之的细节。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-46a2c5c2a9904ca79c3cfed409f668f6_720w.jpg?source=b1748391?rss\" data-rawwidth=\"414\" data-rawheight=\"289\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-46a2c5c2a9904ca79c3cfed409f668f6\" data-watermark-src=\"v2-20430d2eca557a99fc6ffb29274ebc6b\" data-private-watermark-src=\"v2-d108ed39bd900fa93ddc33c0838b666a\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-6465e59b1ce9c100467fc2965e008d02_720w.jpg?source=b1748391?rss\" data-rawwidth=\"250\" data-rawheight=\"297\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-6465e59b1ce9c100467fc2965e008d02\" data-watermark-src=\"v2-27cf6fb620d2e4ae240f5f08ed55f55e\" data-private-watermark-src=\"v2-d159652c3f48b81bcc02bbb2bf54e067\"></p>\n<p data-pid=\"Zk8JukHX\"><b>怪人是什么？</b></p>\n<p data-pid=\"jWk2anSn\">有人觉得blacksun是日本创作者跟风模仿黑人议题，没有想象力和历史知识。而最浅层的特摄观众，一听到种族冲突，就转进01，再自顾自ptsd更是大可不必。</p>\n<p data-pid=\"-Y5W2aXv\">更别提，种族歧视是世界性范围的议题。当然，世界上的族群歧视，并不一定与族群数量有关，掌控更多资源的小族群一样会压迫数量更多的族群。而剧里，怪人与人类的冲突，很大程度也是资源分配上的冲突。</p>\n<p data-pid=\"nH3oNM9x\">而我个人也认为，人类与怪人的冲突，并不是单单的种族冲突，而是多向性的指代。在此之前，我们先理清怪人指代什么，在此，我做出一些拙见。</p>\n<p data-pid=\"ecVRSzwO\">我们的切入点是女主小葵的青梅俊介（麻雀怪人），冲突引爆的转折点。有人觉得俊介这个角色很多余，我倒觉得他是切入怪人究竟为何物的切入口。</p>\n<p data-pid=\"K56FerXm\">首先，俊介的身份，是人类和“怪人”的混血儿。</p>\n<p data-pid=\"jWxqKBFY\">俊介居住的地方，是被市民所鄙夷的脏兮兮的底层（其中有一些便是被主流社会排斥的怪人）聚居区。</p>\n<p><img src=\"https://picx.zhimg.com/v2-3a7f1b0dd9d385a86e824c0cf051c434_720w.jpg?source=b1748391?rss\" data-rawwidth=\"692\" data-rawheight=\"322\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-3a7f1b0dd9d385a86e824c0cf051c434\" data-watermark-src=\"v2-e749eccbbbbc3b6d6d3460f9fba93fe9\" data-private-watermark-src=\"v2-689f122aa31a63335f24c6ea48b04090\"></p>\n<p data-pid=\"rejj9Fwq\">而女主养母也居住于此，剧中虽然没有明说养母的身份。但从养母所开的服装商店背景来看——</p>\n<p data-pid=\"F372rnoq\">背后有两套半岛儿童服与一套半岛女装。</p>\n<p><img src=\"https://picx.zhimg.com/v2-d40293d465bcf3f189722551b52668f3_720w.jpg?source=b1748391?rss\" data-rawwidth=\"693\" data-rawheight=\"587\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-d40293d465bcf3f189722551b52668f3\" data-watermark-src=\"v2-a89d3b077eccf484934452b4f356e1ad\" data-private-watermark-src=\"v2-45fd64b25aea731da771770d0e937827\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-1f28c1657dbdc185ece6cd570d98b8a7_720w.jpg?source=b1748391?rss\" data-rawwidth=\"408\" data-rawheight=\"489\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-1f28c1657dbdc185ece6cd570d98b8a7\" data-watermark-src=\"v2-d2b1e466e1de4d537ba0b8a26ad1f1a1\" data-private-watermark-src=\"v2-9338b403017f2f650960902da6fabbca\"></p>\n<p data-pid=\"2jBsXXa-\">墙上的多张照片也能够说明这是一家半岛服装店。</p>\n<p><img src=\"https://picd.zhimg.com/v2-df5d9bbcf8b63f2506e2367a0bba9b0c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"455\" data-rawheight=\"477\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-df5d9bbcf8b63f2506e2367a0bba9b0c\" data-watermark-src=\"v2-ec7427ac87b422bab6ff4fa6eeff9838\" data-private-watermark-src=\"v2-3c4e4645c5ae42ab5b7bd9efd43e3bcd\"></p>\n<p><img src=\"https://picd.zhimg.com/v2-8bfe1f3d205ff6d5408d43e8ee4aee10_720w.jpg?source=b1748391?rss\" data-rawwidth=\"428\" data-rawheight=\"354\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-8bfe1f3d205ff6d5408d43e8ee4aee10\" data-watermark-src=\"v2-d452f3bfc1dcb18b81bea7afc9c528dc\" data-private-watermark-src=\"v2-3f807ab4b6e2e0f2102ae14102c3e681\"></p>\n<p data-pid=\"OBDvuFL2\">而俊介死时，人们给他送上的零食包装上，大多都写着半岛文。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d6c473e54736beb6352abdcf64eb6f0e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"692\" data-rawheight=\"592\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-d6c473e54736beb6352abdcf64eb6f0e\" data-watermark-src=\"v2-5e20d135a8ba14fdafb8f8b7fcc8d27e\" data-private-watermark-src=\"v2-68eba429b881301b30c3330ed2f02caa\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-4e6cecb7623b8240645f506d7335cf34_720w.jpg?source=b1748391?rss\" data-rawwidth=\"692\" data-rawheight=\"349\" data-size=\"normal\" data-caption=\"日本是个零食大国，但是剧组选上来的零食却都不是日本零食，这也能旁敲侧击下俊介的身份了\" data-watermark=\"watermark\" data-original-src=\"v2-4e6cecb7623b8240645f506d7335cf34\" data-watermark-src=\"v2-3fb84b20876d39e3f281e02e22cc9ea4\" data-private-watermark-src=\"v2-9d3e653f41a34047df125458b03b96e5\"></p>\n<p data-pid=\"edaVc9LK\">这个区域的门口，也有着“韩国XX”的牌子（还有两字我看不清。）</p>\n<p><img src=\"https://picx.zhimg.com/v2-b35e12f760fe73c5cc32fb1bfe5dd833_720w.jpg?source=b1748391?rss\" data-rawwidth=\"693\" data-rawheight=\"284\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-b35e12f760fe73c5cc32fb1bfe5dd833\" data-watermark-src=\"v2-c0b5b8845690ad8de12e3eebbab3ff3d\" data-private-watermark-src=\"v2-300990d6d26432d05605170f202f690c\"></p>\n<p><img src=\"https://picd.zhimg.com/v2-5267614c76236b5512a7c7bda5493668_720w.jpg?source=b1748391?rss\" data-rawwidth=\"292\" data-rawheight=\"315\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-5267614c76236b5512a7c7bda5493668\" data-watermark-src=\"v2-729cc0f517a19f2fed8de0a2f56a1bf8\" data-private-watermark-src=\"v2-569a785703ac82a7213a91ac064a76f6\"></p>\n<p data-pid=\"NFR9BMFp\">这个区域，显然半岛要素过多，而且有意在镜头前展示，那就不得不怀疑这个地域，很可能是一个有较多半岛侨民的部落民聚居的同和地区。</p>\n<p data-pid=\"tb9sevWK\">日本从来不是一个单一民族国家，甚至可以说是一个人种较多的移民国家（国族构建是近现代的事，明治初期一度想往多民族国家构建国族意识。而半岛近代，也有六族论）。但日本长期不承认少民的基本身份权利，日本的少民便不少集中于全国各地的同和地区。</p>\n<p data-pid=\"aJkwzVxt\">同和地区，是部落民聚居的地方。部落民，是日本历史上贱业之人的泛称，带有阶级等级上的歧视。而，日本不被承认身份的少民，也被划入部落民，被主流所排斥。所以，部落民歧视，是带着阶级和民族双重属性的歧视。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b9bef0e4fc8682ae7727a8bdcc049293_720w.jpg?source=b1748391?rss\" data-rawwidth=\"693\" data-rawheight=\"436\" data-size=\"normal\" data-caption=\"废除非人，秽多后，部落民有了新称呼叫“新市民”，而说的难听点，就是光头口中的意思。这些人，大概率即是部落民，这片区域，则是同和区域。\" data-watermark=\"watermark\" data-original-src=\"v2-b9bef0e4fc8682ae7727a8bdcc049293\" data-watermark-src=\"v2-f56d77ebb8e40d0e7b86008b2c9d5c8f\" data-private-watermark-src=\"v2-0d08804e54cb153c1424b30a533a2e4c\"></p>\n<p data-pid=\"mIlGDBJW\">而部落民的旧称是什么，“秽多”，“非人”！非人，在人们眼里不算人，不就是怪人嘛。</p>\n<p data-pid=\"TkdWXCUZ\">那么，结合我上面所给的信息，俊介的身份，已经很明显了。人类与怪人的混血，大概指向，很可能是平民父亲与部落民母亲的结合。而结合人们给于俊介的零食，以及该地区较多的半岛元素，作为怪人的母亲可能指向半岛侨民。</p>\n<p data-pid=\"DU829poK\">（1871年日本废除了秽多，非人的称呼，名义上平等。但直到今天，对部落民的歧视依然存在。今天，大多数zf和机关都会拒绝雇佣部落民，这不就是非我族类，其心必异吗。这俩词在日本人眼中，还是攻击性极强的词汇，比如刺杀安倍的山上彻也，就被安倍支持者骂为“部落民”。这一点，我后面也会提到。）</p>\n<p data-pid=\"gO1LSswO\">因此，在60年代，70年代的左翼运动中，也产生了部落民平权运动——【部落解放同盟】。</p>\n<p data-pid=\"242hLQUD\">怪人平权组织的穿着，打扮，标语都再明显不过了，指向左翼运动。如写了字的头盔，围巾，标语栏。</p>\n<p><img src=\"https://pica.zhimg.com/v2-724ae06bd772e04fc1da7afc29d546bc_720w.jpg?source=b1748391?rss\" data-rawwidth=\"692\" data-rawheight=\"570\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-724ae06bd772e04fc1da7afc29d546bc\" data-watermark-src=\"v2-6b826549893228958ac7f14f66371bbb\" data-private-watermark-src=\"v2-60d6d6f1e35e39218f268d1a3e392c54\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-eebbe95893b8fe93cb2b5bd3ec82d635_720w.jpg?source=b1748391?rss\" data-rawwidth=\"692\" data-rawheight=\"323\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-eebbe95893b8fe93cb2b5bd3ec82d635\" data-watermark-src=\"v2-1cac1bb46723f51e96e13d706acb591b\" data-private-watermark-src=\"v2-59714f0b1c3c0f39c6395a14e7fe5d52\"></p>\n<p><img src=\"https://picd.zhimg.com/v2-9833014cdfbad89cd0623e0ed6957576_720w.jpg?source=b1748391?rss\" data-rawwidth=\"692\" data-rawheight=\"277\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-9833014cdfbad89cd0623e0ed6957576\" data-watermark-src=\"v2-3c72877a5b379e1761ddb5299960ee83\" data-private-watermark-src=\"v2-f34e178040eb35d3a9473459a3f57c6c\"></p>\n<p><img src=\"https://picd.zhimg.com/v2-fda4defceda74be6e43b95d61e12d6df_720w.jpg?source=b1748391?rss\" data-rawwidth=\"692\" data-rawheight=\"922\" data-size=\"normal\" data-caption=\"对照标语上的字体\" data-watermark=\"watermark\" data-original-src=\"v2-fda4defceda74be6e43b95d61e12d6df\" data-watermark-src=\"v2-566b97fc0b9bba9c080c1f6fdf611b9f\" data-private-watermark-src=\"v2-1144dad517fff12a49e556ad41480195\"></p>\n<p data-pid=\"PzRfolWx\">部落解放同盟，希望消除日本对于部落出身的人群偏见的组织。50年代后，部落解放同盟便与日共关系紧密。而耐人寻味的是，70年代左翼运动出现转折后，对左翼运动失望的部落解放同盟断绝了与日共的联系，投向了右翼。</p>\n<p data-pid=\"t0dErmpb\">而怪人，对应部落民。部落解放同盟，投向右翼。是否也对应戈尔戈姆党背叛了怪人平权的初衷，投向右翼堂波当局？</p>\n<p data-pid=\"w4Zvi4Nr\">当然，戈尔戈姆党的指向并不单向。比如达罗姆的主张也与放弃了枪杆子斗争，以妥协换取生存空间，走议会斗争的日共类似：曲线求平等，以无尽的屈辱一步步换取权益。</p>\n<p data-pid=\"Tjt_67lf\">同理，日本80年代后右翼的中间力量中，有一些人脱胎于左翼运动中。在左翼运动失败后，不少对左翼彻底失望的人加入了右翼。这点，也适用于戈尔戈姆。</p>\n<p data-pid=\"4zDnBzTZ\">总之，怪人并不是单纯的与人类截然不同的种族，以01那种玩意代入毫无疑问是南辕北辙。</p>\n<p data-pid=\"pir6J4Wp\">我个人感觉第一集小葵同学的“自由女神不能呼吸”，结尾怪人的“我不能呼吸”反而是有点多余了。（制作组想在剧里塞太多东西，一定程度也是这部剧没那么成功的原因）</p>\n<p data-pid=\"gG-juVmA\"><b>堂波家族</b></p>\n<p data-pid=\"-ueCRFEC\">小堂波的演员大柴亨的扮相和“昭和之妖”岸信介有些神似。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-42e5b0a1b851c6d7a63d7c6699f2dae5_720w.jpg?source=b1748391?rss\" data-rawwidth=\"515\" data-rawheight=\"462\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-42e5b0a1b851c6d7a63d7c6699f2dae5\" data-watermark-src=\"v2-7aecfe21118e46fdedda6aedff250631\" data-private-watermark-src=\"v2-d1ba22a91d295175a0000f503c1fdb3d\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-73986f3f361e542a0a29bb3ffd808a0a_720w.jpg?source=b1748391?rss\" data-rawwidth=\"240\" data-rawheight=\"219\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-73986f3f361e542a0a29bb3ffd808a0a\" data-watermark-src=\"v2-27f587d22c94e5e47d2eddbcc494396d\" data-private-watermark-src=\"v2-280579f3fbd7f9cf5013329e018c6160\"></p>\n<p data-pid=\"McB1QAFw\">小堂波的祖父堂波道之助的主要原型，也明显指向岸信介。岸信介是731的资助者，是参加侵略战争的战犯，堂波则主导生化研究组的方向。岸信介在战后躲过惩罚，成为首相，堂波也是。</p>\n<p><img src=\"https://picd.zhimg.com/v2-afc3c9abc7f5419985f6206b0109f7bf_720w.jpg?source=b1748391?rss\" data-rawwidth=\"692\" data-rawheight=\"532\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-afc3c9abc7f5419985f6206b0109f7bf\" data-watermark-src=\"v2-200922093b77bee3ae347f0f7f6a041e\" data-private-watermark-src=\"v2-8850adaeaaad43c788fa6f9d4fcae2bf\"></p>\n<p data-pid=\"76rEAA9r\">731以防疫为幌子成立，小组的器具上也写着“疫研”字样。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-04a0a3d662ab1f617256ba054dcd3a4e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"692\" data-rawheight=\"434\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-04a0a3d662ab1f617256ba054dcd3a4e\" data-watermark-src=\"v2-217e7c2387eceb1ca87c4dde824aca59\" data-private-watermark-src=\"v2-23c1a93972745c4555586e88d9537768\"></p>\n<p><img src=\"https://picd.zhimg.com/v2-2d2f02cbcf9f8e0698be0a6755351155_720w.jpg?source=b1748391?rss\" data-rawwidth=\"605\" data-rawheight=\"650\" data-size=\"normal\" data-caption=\"疫研\" data-watermark=\"watermark\" data-original-src=\"v2-2d2f02cbcf9f8e0698be0a6755351155\" data-watermark-src=\"v2-6ca390ea77b8e384a667599238c710f9\" data-private-watermark-src=\"v2-463c3f0315cb36198d3b018bc43d20d7\"></p>\n<p data-pid=\"tgGxdSCy\">1972年的首相是老堂波，而现实位面，1972年7月前的首相，是岸信介之弟佐藤荣作（老堂波原型大概率不会指向7月后的田中角荣）。</p>\n<p data-pid=\"r8w0p65X\">小堂波于2003年，升任首相，2003年的首相是自民党的小泉纯一郎（剧里的人民党原型也很显然是自民党）。</p>\n<p data-pid=\"eWTc7PLF\">因此，小堂波的原型是自民党集体的一个代表。</p>\n<p data-pid=\"JyH7p57J\">老堂波主要参照物是岸信介，小堂波作为老堂波之孙，是政治家族世袭的产物。岸信介的外孙，安倍也成为了日本首相。岸信介-佐藤荣作-安倍一脉，应该是堂波家族的原型。</p>\n<p data-pid=\"70rk1ALF\">小堂波，死于蝙蝠与蟋蟀怪人力克的街头刺杀。而安倍，死于山上彻也的街头刺杀。安倍支持者将山上骂为“部落民”（其实山上并不是，这里的部落民单纯是作为安倍支持者脱口而出的蔑称），而怪人的原型，很可能指向部落民。可以说，很讽刺了。</p>\n<p data-pid=\"d9lBqYei\">而在拍摄blacksun的时候，安倍还没有遇刺。这部片如果在安倍遇刺前，就拍完放送，是预言。在安倍遇刺后，放出来，是讽刺。</p>\n<p data-pid=\"obI3zld9\"><b>剑圣</b></p>\n<p data-pid=\"hoMBARmq\">以革马与中核派为代表的日本左翼运动两大派，纷争不休。其中，被右翼利用，挑衅离间，举报对方的事不少见。比如日本警方获知某一派的关键信息，会通过其线人将信息透露给敌对的左翼派系，让他们互相残杀。</p>\n<p data-pid=\"eeH5CQGl\">剑圣，便是被右翼利用的左翼，粗暴而激进。最终在失去利用价值后，被两派共同抛弃，又听闻自己效忠的创世王不过是被发明者认为的“无用之物”，彻底抛弃了过去的自己。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f332e970da0db0166d34c5c1abc1e686_720w.jpg?source=b1748391?rss\" data-rawwidth=\"692\" data-rawheight=\"432\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-f332e970da0db0166d34c5c1abc1e686\" data-watermark-src=\"v2-f5617ed1cf99cc3ac98255a0ea73a961\" data-private-watermark-src=\"v2-9c28feaa01851901ca0e462197160801\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-47ad86441b6cfedd6c7486d7f029d445_720w.jpg?source=b1748391?rss\" data-rawwidth=\"692\" data-rawheight=\"445\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-47ad86441b6cfedd6c7486d7f029d445\" data-watermark-src=\"v2-ab4fdfc21a3a560530b33a88568c4b71\" data-private-watermark-src=\"v2-95bc75b65b1c15b21d456e89c75b2d4f\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-775125e2492a29531e15033f45912c20_720w.jpg?source=b1748391?rss\" data-rawwidth=\"692\" data-rawheight=\"426\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-775125e2492a29531e15033f45912c20\" data-watermark-src=\"v2-4bdf98a17291370f63f04afbb8bfc4cc\" data-private-watermark-src=\"v2-0537e77fedd784cb8117635252881081\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-ece751a446147dcdc79b4f3bbaee0668_720w.jpg?source=b1748391?rss\" data-rawwidth=\"692\" data-rawheight=\"447\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-ece751a446147dcdc79b4f3bbaee0668\" data-watermark-src=\"v2-14665a9b01b885e99eec56dcb8ef1a0d\" data-private-watermark-src=\"v2-f3cff3c94ecbc447ddd602506b15f859\"></p>\n<p data-pid=\"ewwTK1ms\">也可以投射，对左翼运动失望而在运动后加入右翼的人士。</p>\n<p data-pid=\"kPKbqNMr\"><b>南光太郎</b></p>\n<p data-pid=\"Q5h7lDnK\">运动后，也有一部分人认为左翼右翼都会将日本拖入泥潭，对日本的zz完全失望。</p>\n<p data-pid=\"lT1nAU4M\">南光太郎便是属于这部分人，信仰破灭，又自然不相信敌对势力。因对zz的彻底失望，而选择了对zz的冷感。</p>\n<p data-pid=\"b9SBzaD2\">一个在右翼环境下，成长，一度沉沦的落魄左翼。直到，看到帝王石并与女主相遇后，光太郎才决定对过去做一个了结，并将意义寄托于后来者小葵。</p>\n<p data-pid=\"ylNj3XJ9\"><b>秋月信彦</b></p>\n<p data-pid=\"Z4Nuc8AL\">秋月信彦，反而是意志坚定，虽然转变了斗争方式，但从未选择放弃斗争的人物。若若松孝二，一度憧憬，并于海外坚持斗争，但不免走歪的赤军般。信彦，也可以说是他们之中的投射。</p>\n<p data-pid=\"WXyz9Ufi\"><b>怪人和人类的生命，远比地球重要</b></p>\n<p data-pid=\"8Y1C_ifW\">这句口号不知道为什么让我想起了，在目标是“飞到平壤去，改造金体制”的淀号劫机事件（1970年）中，日方的要求口号是“人命重于地球”。</p>\n<p data-pid=\"injWzmfK\"><b>总结</b></p>\n<p data-pid=\"KZ8VpBSN\">注定有争议的一部作品，也并不太理想。且其面向的人群组成，更进一步拉大了这种争议。那段历史，对日本人而言，都已经太远了。对此，也不必太苛责这里的观众了吧。</p>\n<p data-pid=\"Mxt4rFG1\">也因此，我觉得TV的ED《Long Long ago 20th century》比black的op更适合于《Black sun》，1972年的往事，已经是很远之前发生的事了，远得恍如隔世。</p>\n<p data-pid=\"jAr629pX\">可惜，没用到。</p>\n<p data-pid=\"QjdpMA83\">镰仓时代很近，而1972很远。但他们又偏偏想听用不破灭的谎言，想听“两个人的旅程现在仍还在继续着。”</p>\n<p data-pid=\"kJ7loKAK\">小葵，渴望着两个人的旅程，却不得不杀死进化为创世王的光太郎。</p>\n<p data-pid=\"zv86CZgN\">光太郎，曾与信彦同行，却终以一场死斗收场。</p>\n<p data-pid=\"g58XZKTG\">信彦，到死前，都还信奉着永不破灭的谎言，希望着不管到何时都不会被揭穿的真相。</p>\n<p data-pid=\"JV6FiKwT\">在那个世界里，人们迎来了理想的生活。大家，也都还没走，光太郎，奥列佛，可里，达罗姆，巴拉欧姆，比修姆，比鲁吉尼亚都在那里。</p>\n<p data-pid=\"gBH17mV0\">《Black Sun》是白石和弥送给老师的回声，即“一个永远的谎言”。</p>\n<p><img src=\"https://picx.zhimg.com/v2-c61a682dbdcb9826db8a3667fad18f90_720w.jpg?source=b1748391?rss\" data-rawwidth=\"692\" data-rawheight=\"590\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-c61a682dbdcb9826db8a3667fad18f90\" data-watermark-src=\"v2-e4a1811ac78dc1f902b5b5e0e9d79e02\" data-private-watermark-src=\"v2-a463132b5531e562b40e5561992e87ad\"></p>\n<p><img src=\"https://picd.zhimg.com/v2-78a7cc2b8ebd0969618e2e6e83af3690_720w.jpg?source=b1748391?rss\" data-rawwidth=\"692\" data-rawheight=\"418\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-78a7cc2b8ebd0969618e2e6e83af3690\" data-watermark-src=\"v2-171d61c5f3e3921118473ab72271b83c\" data-private-watermark-src=\"v2-4a8ed81fb8d68d8d089ceb604a07d9a6\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-a721e7918a34460e9fc802a553c143a6_720w.jpg?source=b1748391?rss\" data-rawwidth=\"692\" data-rawheight=\"426\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-a721e7918a34460e9fc802a553c143a6\" data-watermark-src=\"v2-04c8672d8fea340222065361774a7d1c\" data-private-watermark-src=\"v2-181e14637b000ab9199af28b6908aacd\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-4f993fc3b18ed1377f448dfb15f5a174_720w.jpg?source=b1748391?rss\" data-rawwidth=\"692\" data-rawheight=\"433\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-4f993fc3b18ed1377f448dfb15f5a174\" data-watermark-src=\"v2-970b54f8a662893410b9278a96b7bea0\" data-private-watermark-src=\"v2-80d7068312f86abff8f4fa2fdaf2fb19\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/gong-xiao-15-15?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">史官</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/494129001/answer/2738226815?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">165 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/461385845?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价《假面骑士black sun》？</a><br><a href=\"http://www.zhihu.com/question/558620853?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《假面骑士 Black Sun》的选角如何？</a><br>\n","link":"http://www.zhihu.com/question/494129001/answer/2738226815?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"1亿像素方向错了，2亿呢？｜Redmi Note 12 Pro+","date":"2022-11-15 04:10:01","description":"\n<p data-pid=\"5HihsyfQ\"><span class=\"nolink\">距离第一台一亿像素的手机问世已经过去3年左右的时间，这期间一亿像素方向是否正确的声音一直都在。目前至少在旗舰机上，除了三星自家旗舰，一亿像素几乎已经看不见了。高像素真的错了吗？三年之后，更高像素的两亿像素问世，这一次，它还出现在更加平价的机器上，这也代表着超高像素应用方向有了新的可能性。</span></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-0b830f3d9afbb41096dca66acca27e1c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"624\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic1.zhimg.com/v2-0b830f3d9afbb41096dca66acca27e1c_r.jpg\"></figure><h2>照惯例先说优缺点： </h2>\n<p data-pid=\"DalPuJP-\"><b>优点：</b></p>\n<p data-pid=\"YgL18bNR\">在各个场景表现比较稳定，解析力、白平衡、暗光表现出色</p>\n<p data-pid=\"ao0hoYPf\">高像素在数码裁切下2X下数码裁切效果不错</p>\n<p data-pid=\"tHZSH4Ru\">胶片模式、水印的软件玩法和小米12s Ultra 逻辑相同，可玩性很高</p>\n<p data-pid=\"DUYaVWT7\"><b>不足：</b></p>\n<p data-pid=\"tBdJA9pG\">锐化痕迹比较明显</p>\n<p data-pid=\"L-jJ-d2K\">动态范围相对比较弱</p>\n<h2>高像素的用途</h2>\n<p data-pid=\"DwX2sao4\">其实这颗两亿像素传感器对于Redmi Note 12 Pro+的意义不在2亿本身，而是在于1/1.4英寸的大底带来的大进光量，以及高像素带来的变焦能力。这些能力的实现需要加一个前提就是：在2000-3000元档的手机中。绝对实力上它和旗舰手机还有很大的差距。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-dbfd183d2766dad3fb96989efefe898c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"624\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic1.zhimg.com/v2-dbfd183d2766dad3fb96989efefe898c_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-b1d85620822681def0b714f3cc915cdc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"624\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic1.zhimg.com/v2-b1d85620822681def0b714f3cc915cdc_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-983bfaa0759f0a67a85fcfa32edaf8a6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"624\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic3.zhimg.com/v2-983bfaa0759f0a67a85fcfa32edaf8a6_r.jpg\"></figure><p data-pid=\"HIC8hhsi\">而在2000元档情况就不太一样了， 毕竟连1/1.56英寸的 IMX766 都鲜有调教不错的选择，对吧。这颗 1/1.4 英寸的尺寸算得上鹤立鸡群，调教也算得上是同级别比较出色的存在。</p>\n<p data-pid=\"lI5TYbdQ\">值得注意的是，虽然这是一块2亿像素的传感器，但是它的尺寸相比最初1亿像素那块1/1.3的HM1还要再小一点点，单像素尺寸0.56，实在是太小了。显然小米也清楚这一点，因此高像素默认格式也不是2亿，而是5000w，2亿像素要单独选择。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-8a3bdbd41acf8a7bc2b6167bee3ab7f3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"374\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic4.zhimg.com/v2-8a3bdbd41acf8a7bc2b6167bee3ab7f3_r.jpg\"></figure><p data-pid=\"hg_8UxbK\">实际效果上，2亿像素确实比5000w要稍好一点，打开小米 12s Ultra的高清模式，也能看到明显的分别，树叶颜色的分解更加分明，不过也能看出明显的锐化痕迹。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-12b88d2683a25c1ed00716cd71382fd4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"616\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic1.zhimg.com/v2-12b88d2683a25c1ed00716cd71382fd4_r.jpg\"></figure><p data-pid=\"9gAonu5Y\">同时这个传感器尺寸在 2X 可以获得还不错的解析力，在次旗舰以下定位的机器中，目前长焦基本是不可能出现的硬件，因此大尺寸高像素带来的变焦能力也算是一种弥补。在到手之前，我曾经预想这颗传感器至少在3X也许都会有不错的效果，不过传感器本身能力限制，实际还是有些下滑，变焦能力上依旧是 5000w 像素的底子。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-d790dca95fc2941c7551d674c9f9c972_b.jpg\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"624\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic3.zhimg.com/v2-d790dca95fc2941c7551d674c9f9c972_r.jpg\"><figcaption>3X 样张，细节解析力下降明显</figcaption></figure><h2>成像效果与可玩性</h2>\n<p data-pid=\"nrJK_Hxx\">日常使用中，这颗传感器的成像效果没有太大问题，使用也很顺手，无论是解析力，自动白平衡，还是夜景的纯净，高光压制，都有不错的效果。而且我觉得在夜景情况下的表现还要更好一些，成片率高，画面纯净，高反差场景还原也很干净。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-903e19c13fbe675ecd33dfd3cbccf8b3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"624\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic4.zhimg.com/v2-903e19c13fbe675ecd33dfd3cbccf8b3_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-1e9c8f81e9732fe8f70ce3770619e3b9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"624\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic2.zhimg.com/v2-1e9c8f81e9732fe8f70ce3770619e3b9_r.jpg\"></figure><p data-pid=\"hWiWRnuq\">相比之下日间的动态效果还有待优化，自动 HDR 状态下，虽然整体画面亮度比较稳定，但是透过树叶的天空依旧有一些过曝的倾向，即使是朝北的顺光，这种情况也依旧存在。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-c6b19d0a101d00bb201c6b8cf8b5566f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"624\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic4.zhimg.com/v2-c6b19d0a101d00bb201c6b8cf8b5566f_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-e31ec8ab379433e7569b3a930bc1b0df_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"624\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic4.zhimg.com/v2-e31ec8ab379433e7569b3a930bc1b0df_r.jpg\"></figure><p data-pid=\"6ZBaipQI\">而在比如夕阳的强光下，对面路人的面部细节丢失也比较严重，不过边角画质倒是还算不错。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-34d3f79235915eb714009882dddd8fdb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"468\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic4.zhimg.com/v2-34d3f79235915eb714009882dddd8fdb_r.jpg\"></figure><p data-pid=\"iX4v1JxS\">有一些场景的色彩还原还有些偶发问题，比如大家家里都有红色法拉利，在日光下，相机会还原成玫红色。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-ef7946b2705bedf01d7ea42d926fcd92_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"624\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic3.zhimg.com/v2-ef7946b2705bedf01d7ea42d926fcd92_r.jpg\"></figure><p data-pid=\"cidMKmRK\">至于超广角，中端机器用800w 像素超广角算是各家机器的祖传配置了，实际也不会有什么惊喜，微距模式也是依靠200w像素战术镜头来实现的。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-214e4de5f8efa7dc2be0ab697a3a1eaf_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"624\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic4.zhimg.com/v2-214e4de5f8efa7dc2be0ab697a3a1eaf_r.jpg\"></figure><p data-pid=\"RDSsSQl2\">胶片模拟是这次 Redmi Note 12 Pro+主打的玩法，它的可玩性可以说是徕卡联名的青春版，首先滤镜的应用形式和编辑形式和徕卡滤镜一样，你可以在拍照界面选择，同时也可以通过后期编辑实现，胶片水印也一样，依旧可以在相册中进行添加。思路是一个思路，旗舰和中端机打造了两个不同玩法，不得不说是很聪明的产品策略。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-3a5bdfaad5d2604ee9612f1ca94a2d08_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"616\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic1.zhimg.com/v2-3a5bdfaad5d2604ee9612f1ca94a2d08_r.jpg\"></figure><p data-pid=\"6wZEwwRM\">至于实际胶片模拟效果，由于体验时间有限，并没有办法好好寻找场景来做合适的样张，随便调两张看一个氛围。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-b3b19b6ba57e940e0f75901ffa93ca92_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"368\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic3.zhimg.com/v2-b3b19b6ba57e940e0f75901ffa93ca92_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-89b5629a0a01e5d9aadc130d845b1b29_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"662\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic2.zhimg.com/v2-89b5629a0a01e5d9aadc130d845b1b29_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-7b9a5e23defed660d0bba6981ef99cfb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"660\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic4.zhimg.com/v2-7b9a5e23defed660d0bba6981ef99cfb_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-b5e1d50e6b925b0abb8359451f7e7abf_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"1158\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic4.zhimg.com/v2-b5e1d50e6b925b0abb8359451f7e7abf_r.jpg\"></figure><h2>聊聊中端机的影像</h2>\n<p data-pid=\"woXIURP5\">无论是影像硬件还是芯片，在中端机这个市场，妥协是必定要有的，就连传承真性价比的红米，芯片和影像硬件也不可兼得。而影像硬件上，相比之前对这类定位机器拍照=扫码的认知，目前开始强调影像的机器上，能够搭建起来的依旧只有主摄，800w像素的超广角+战术镜头的配置恐怕还要再持续一段时间。</p>\n<p data-pid=\"p1skbfcH\">这样的情况下，一颗尽可能大的主摄可能是不错的方向，比如IMX766虽然已经近乎祖传，但依旧是一颗中高端传感器，比如这次两亿像素的HPX，在长焦硬件缺失的情况下，可以补足一部分变焦效果。同时大底同样意味着视角变广，边角画质不同程度的下降，因此比较好的裁切能力，也会在拍摄文件，或是获得更适合的视角等方面提供支持。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-576417e0d6fe71a87de66e2fd511c462_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"554\" class=\"origin_image zh-lightbox-thumb\" width=\"832\" data-original=\"https://pic3.zhimg.com/v2-576417e0d6fe71a87de66e2fd511c462_r.jpg\"></figure><p data-pid=\"sZJujh1l\">当然，硬件之外，软件和算法也需要更多的下放，毕竟IMX766今年也不是第一次下放2000元档手机，然而完成度大家都是知道的。虽然天玑+三星传感器，两个影像硬件在影像这方面口碑都不算是特别好，但是你能看得出小米在实际成像效果上是用心了的，这一点必须要支持，也希望同价位的机型，也可以见贤思齐。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/mo-fu-ping-sheng-zhi?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">JT的数字日常</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/583455065?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"让阅读无缝衔接 —— JS 获取用户阅读进度","date":"2022-11-11 16:40:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>很多博客中最常见的问题就是：文章很长，但是读者很忙。下次阅读的时候，可能要花一些时间才能恢复到先前的阅读位置。</p>\n<p>如果可以设备间，识别二维码或是一个链接就可以让阅读无缝衔接，直接跳转到相应位置，那么阅读体验就会变得更加优秀。</p>\n<p>那么，开始吧！</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%9E%E8%B7%B5\" class=\"headerlink\" title=\"实践\"></a>实践</h2>\n<p>要知道阅读位置，那么就要知道当前页面的坐标。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getScrollPosition = <span class=\"function\">(<span class=\"params\">el = <span class=\"built_in\">window</span></span>) =&gt;</span> ({</span><br><span class=\"line\">    x: el.pageXOffset !== <span class=\"literal\">undefined</span> ? el.pageXOffset : el.scrollLeft,</span><br><span class=\"line\">    y: el.pageYOffset !== <span class=\"literal\">undefined</span> ? el.pageYOffset : el.scrollTop</span><br><span class=\"line\">});</span><br><span class=\"line\"><span class=\"comment\">// getScollPosition().x =&gt; 页面横坐标; getScrollPosition().y =&gt; 页面纵坐标;</span></span><br></pre></td></tr></table></figure><p>大部分情况下，我们只用关注纵坐标。横坐标大概率为 <code>0</code>。</p>\n<p>我们还需要一个页面滚动的事件，用于记录当前坐标，并储存在临时存储中。</p>\n<p>至于为什么是 <code>sessionStorage</code> 而不是 <code>localStorage</code>，则是因为 <code>localStorage</code> 除手动清除外，不会自动过期。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 此处的 750 是「页面元素的最大宽度」</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> wx = <span class=\"built_in\">window</span>.innerWidth &gt;= <span class=\"number\">750</span> ? <span class=\"number\">750</span> : <span class=\"built_in\">window</span>.innerWidth;</span><br><span class=\"line\"><span class=\"keyword\">var</span> wy = <span class=\"built_in\">window</span>.innerHeight;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">windowScroll</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 反复修改 确保页面尺寸不改变</span></span><br><span class=\"line\">    wx = <span class=\"built_in\">window</span>.innerWidth &gt;= <span class=\"number\">750</span> ? <span class=\"number\">750</span> : <span class=\"built_in\">window</span>.innerWidth;</span><br><span class=\"line\">    wy = <span class=\"built_in\">window</span>.innerHeight;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> y = <span class=\"built_in\">Math</span>.round(getScrollPosition().y);</span><br><span class=\"line\">    <span class=\"comment\">// 组合字符串，同时记录页面坐标，页面宽度和高度</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> p = <span class=\"string\">`<span class=\"subst\">${y}</span>:<span class=\"subst\">${wx}</span>:<span class=\"subst\">${wy}</span>`</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 写入到 sessionStorage 中</span></span><br><span class=\"line\">    sessionStorage.setItem(<span class=\"string\">\"read_y\"</span>, p);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"built_in\">window</span>.onscroll = windowScroll;</span><br></pre></td></tr></table></figure><p>你可能发现了，此处的变量 <code>p</code>，并不仅仅是「页面纵坐标」，而是「页面高度」与「纵坐标」的组合字符串。</p>\n<p>事实上，如果单纯是纵坐标判断位置，那么在不同高度，不同宽度的设备上，就会出现错位的情况。而同时记录三个信息，就可以还原真实坐标。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// URL 中是否包含传递的坐标信息</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (location.hash.split(<span class=\"string\">\"#read=\"</span>).length &gt; <span class=\"number\">1</span>) {</span><br><span class=\"line\">    <span class=\"comment\">// 分离字符串</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> read_y = location.hash.split(<span class=\"string\">\"#read=\"</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\">    read_y = read_y.split(<span class=\"string\">\":\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 组合乘积，顺滑移动至坐标</span></span><br><span class=\"line\">    <span class=\"built_in\">window</span>.scrollTo({<span class=\"attr\">top</span>: <span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Number</span>(read_y[<span class=\"number\">0</span>]) * <span class=\"built_in\">Number</span>(read_y[<span class=\"number\">1</span>] * <span class=\"built_in\">Number</span>(read_y[<span class=\"number\">2</span>] / wx / wy))), <span class=\"attr\">behavior</span>: <span class=\"string\">\"smooth\"</span>});</span><br><span class=\"line\">} <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    <span class=\"comment\">// 从 sessionStorage 中获取</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> read_y = sessionStorage.getItem(<span class=\"string\">\"read_y\"</span>) || <span class=\"string\">\"0:0:0\"</span>;</span><br><span class=\"line\">    read_y = read_y.split(<span class=\"string\">\":\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.scrollTo({<span class=\"attr\">top</span>: <span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Number</span>(read_y[<span class=\"number\">0</span>]) * <span class=\"built_in\">Number</span>(read_y[<span class=\"number\">1</span>] * <span class=\"built_in\">Number</span>(read_y[<span class=\"number\">2</span>] / wx / wy))), <span class=\"attr\">behavior</span>: <span class=\"string\">\"smooth\"</span>});</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>到现在，我们已经完成了 URL 的解析和基本生成。</p>\n<p>那么，URL 即为:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">`<span class=\"subst\">${location.protocol}</span>//<span class=\"subst\">${location.hostname}</span><span class=\"subst\">${location.port ? <span class=\"string\">\":\"</span>+location.port:location.port}</span><span class=\"subst\">${location.pathname}</span>#read=<span class=\"subst\">${sessionStorage.getItem(<span class=\"string\">\"read_y\"</span>)}</span>`</span>;</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%90%8E\" class=\"headerlink\" title=\"最后\"></a>最后</h2>\n<p>搭配生成二维码等插件效果更佳。</p>\n<blockquote><p>Miracle 主题将在下个版本中更新该功能。</p></blockquote>\n","link":"https://blog.yfun.top/posts/2022/js-get-users-reading-progress/"},{"title":"React 为什么重新渲染","date":"2022-09-06 08:29:00","description":"\n<p>更新（重新渲染）是 React 的重要特性 —— 当用户与应用交互的时候，React 需要重新渲染、更新 UI，以响应用户的输入。但是，React 为什么会重新渲染呢？如果不知道 React 为什么会重新渲染，我们如何才能避免额外的重新渲染呢？</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/186432/20/28325/37613/631725bbEf2ff226e/66b99021df66578b.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/react-re-renders-101/\">https://blog.skk.moe/post/react-re-renders-101/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/react-re-renders-101/"},{"title":"为什么你不应该在 React 中直接使用 useEffect 从 API 获取数据","date":"2022-08-19 08:53:00","description":"\n<p>React 是一个由 Facebook 开源的、可以在任意平台上构建 UI 的 JavaScript 库。在 React 中，一个常见的 Pattern 是使用 <code>useEffect</code> 搭配 <code>useState</code> 发送请求、将状态从 API（React 外部）同步到 React 内部、用于渲染 UI，这篇文章恰恰在向你介绍为什么你不应该直接这么做。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/180676/37/27394/27265/62ff57f2E600b3725/cff75c5fca39bbcc.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/\">https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/"},{"title":"NPM 自动更新版本号","date":"2022-08-04 05:00:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>ChenYFan 大佬的文章：<a href=\"https://blog.cyfan.top/p/d3c51290.html\">SpeedUp!使用黑科技为你的网站提速</a> 有提到过将 Hexo 博客的全部静态文件上传至 NPM 达到加速效果。</p>\n<p>但是 NPM 版本号不能重复，而且为了精准命中缓存和防止边缘 <code>@latest</code> 缓存过长，就必须指定版本号。</p>\n<p>本人在 <a href=\"https://blog.yfun.top/posts/2876015612/\">我的图床解决方案</a> 一文中使用的方法是 <code>npm version patch</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804133426.png\"></p>\n<p>但这个方法也有一些弊端，比如 <code>patch</code> 只会更新 <code>z</code> 位数的版本号，而且并不会上传至仓库，很可能会出现版本号冲突导致上传失败。这就是为什么最后还需要重新推送 Git 提交。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E8%AF%95%E8%AF%95%E7%9C%8B\" class=\"headerlink\" title=\"试试看\"></a>试试看</h2>\n<p>NPM 版本号遵循 <code>semver</code> 规范，格式为 <code>major.minor.patch</code>。</p>\n<p>为了在获取最新版本号的时候不发生混乱，我选择先获取最新的版本号。</p>\n<blockquote><p>记得把 <code>cky-blog-static</code> 改成自己的项目名。</p></blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>获取到最新版本号后，就可以对版本号进行分析。</p>\n<p>以 <code>1.4.7-b541af2ea284a39da0bbf63b88fdb65c</code> 为例，先按 <code>major.minor.patch</code> 分离。当然，也需要考虑版本号后还有 <code>build metadata</code> 的情况。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\"><span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br></pre></td></tr></table></figure><p><del>为了版本号好看些</del>，可以通过判断实现满十进一。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位小于 9，直接 +1</span></span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">} <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位大于等于 9，y 位小于 9，y+1, z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">} <span class=\"keyword\">else</span> {</span><br><span class=\"line\"><span class=\"comment\">// z 大于等于 9，y 大于等于 9，x+1,y=0,z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>最后，重新拼接版本号。如果担心服务器缓存版本号导致冲突，还可以加上一些随机字符串。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br></pre></td></tr></table></figure><p>将最新的版本号信息重新写入 <code>package.json</code> 文件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">packageJson.version = newVersion;</span><br><span class=\"line\"><span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p><del>直接 CV 代码！</del></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 更新 package.json 版本号</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fetch = <span class=\"built_in\">require</span>(<span class=\"string\">\"node-fetch\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> md5 = <span class=\"built_in\">require</span>(<span class=\"string\">\"js-md5\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> update = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">    verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(newVersion);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">    packageJson.version = newVersion;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">    fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Complete!!\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">update();</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%90%8E\" class=\"headerlink\" title=\"最后\"></a>最后</h2>\n<p>如果是 Hexo 文件部署，就可以直接把文件直接丢在项目根目录，Action 集成部署加上：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">node update.js</span><br></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804135818.png\"></p>\n<p><del>Blog 半年没更新，除除草 --(....</del></p>\n","link":"https://blog.yfun.top/posts/2022/auto-update-npm-version/"},{"title":"我有特别的 DNS 配置和使用技巧","date":"2022-07-28 15:31:00","description":"\n<p>众所周知，DNS 的作用与电话簿类似，将人类可读的域名映射到机器可读 IP 地址、使人更方便地访问互联网。DNS 是非常重要的互联网基础设施，对于改善上网冲浪的体验中的重要程度不容小觑。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/96381/31/31172/23930/62e2ab5bE554d388b/37027f4a03351b9e.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/i-have-my-unique-dns-setup/\">https://blog.skk.moe/post/i-have-my-unique-dns-setup/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/i-have-my-unique-dns-setup/"},{"title":"优化博客的累计布局偏移（CLS）问题","date":"2022-06-07 17:24:00","description":"\n<p>距离上一篇文章发布已有四个月了，是时候写几篇文章给博客除草了。上一次我介绍了我如何迁移、重构了我的博客的架构，这次我想来谈谈我在重构中优化和打磨访客体验时解决的一个问题。我的博客优化之旅 图片 lazyload 的学问和在 Hexo 上的最佳实践 我的博客有多快？ 天下武功，唯快不破 —— 我是这样优化博客的 ...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/206311/26/14625/38940/629f7f81Eb11312de/b1e67f07b1cc9bc7.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/fix-blog-cls/\">https://blog.skk.moe/post/fix-blog-cls/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/fix-blog-cls/"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\r\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\r\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\r\n    return new Date(date.toLocaleString('en-US', { timeZone }))\r\n}\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\r\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\r\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\r\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: '2-digit',\r\n        hour12: false,\r\n        timeZone\r\n    })\r\n    return {\r\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\r\n        convert (date) {\r\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\r\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\r\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\r\n        }\r\n    }\r\n}\r\n\r\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\r\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\r\n    return converter.convert(new Date(secDate), tzName) - secDate\r\n}\r\n\r\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\r\ncmn-Hans-SG = 中文普通话-简体-新加坡\r\ncmn-Hant-TW = 中文普通话-繁体-台湾\r\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\r\ncmn = 中文普通话\r\n\r\nzh-Hans = 中文-简体\r\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\r\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\r\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\r\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\r\n}\r\n\r\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long'\r\n}\r\nconst now = new Date()\r\n\r\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\r\n\r\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\r\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\r\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\r\n\r\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\r\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\r\n\r\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\r\n\r\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\r\n\r\nzhCNFormatter.format(now) // 2021年10月13日星期三\r\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\r\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\r\n\r\njaFormatter.format(now) // 2021年10月13日水曜日\r\njaAltFormatter.format(now) // 令和3年10月13日水曜日\r\n\r\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\r\n// {locale: 'zh-CN', calendar: 'gregory', …}\r\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\r\n     // 基于一个固定日期计算，这里选择 1970.1.1\r\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\r\n    const base = new Date(1970, 0, 1).getTime()\r\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\r\n    return Array.from({ length: 7 }, (_, day) =&gt; (\r\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\r\n    ))\r\n}\r\n\r\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\r\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\r\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    second: 'numeric',\r\n}).formatToParts(new Date())\r\n// [\r\n//     { type: 'year', value: '2021' },\r\n//     { type: 'literal', value: '年' },\r\n//     { type: 'month', value: '10' },\r\n//     { type: 'literal', value: '月' },\r\n//     { type: 'day', value: '13' },\r\n//     { type: 'literal', value: '日' },\r\n//     { type: 'weekday', value: '星期三' },\r\n//     { type: 'literal', value: ' ' },\r\n//     { type: 'dayPeriod', value: '上午' },\r\n//     { type: 'hour', value: '1' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'minute', value: '00' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'second', value: '00' }\r\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\r\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\r\n}\r\n\r\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\r\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\r\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\r\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\r\n  timeZone: 'America/Los_Angeles',\r\n  year: 1995,\r\n  month: 12,\r\n  day: 7,\r\n  hour: 3,\r\n  minute: 24,\r\n  second: 30,\r\n  millisecond: 0,\r\n  microsecond: 3,\r\n  nanosecond: 500,\r\n  calendar: 'iso8601'\r\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"\n<p>WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将其表述为 \"An API for accessing Public Key Credentials\"，即“一个用于访问公钥凭证的 API”。WebAuthn 很强大，强大到被认为是 Web 身份认证的未来（当然，也很复杂）。你有想过通过指纹或者面部识别来登录网站吗？WebAuthn 就能在保证安全和隐私的情况下让这样的想法成为现实。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\" alt=\"通过 WebAuthn 调起 Windows Hello 登录网站\" width=\"1912\" height=\"966\" class=\"aligncenter size-full wp-image-2215\"></a>\n<p>你可以在<a href=\"https://webauthn.io/\" rel=\"noopener\">这个网站</a>自行体验 WebAuthn。或者，如果你有一个使用 WordPress 的站点，可以尝试一下 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WP-WebAuthn</a> 这款插件，它可以为你的站点启用 WebAuthn 登录。这是我为了写这篇文章而练手开发的插件，本文中的部分示例代码也来自这款插件。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"wp-webauthn\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/wp-webauthn\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>WebAuthn Level 1 标准已在 2019 年 3 月成为 W3C 推荐标准，而 Level 2 标准目前也已进入编辑草案阶段，但互联网上有关它的中文资料却仍然很少，国内也鲜有网站支持这一新标准。于是，在抱着各种英文资料和标准啃了几天以后，我折腾出了这篇文章。</p>\n<p>在这篇文章里，我将会从最基本的概念开始，逐渐深入 WebAuthn，直到解码公钥等深层细节。这可能是你能找到的有关 WebAuthn 最详细最基础的中文文章，也很可能是最长的。在开始之前，<strong>我强烈建议你打开菜单中的文章目录浏览一遍，以对这篇文章涉及的内容有所了解。</strong>如果你只是想了解如何简单地在你的项目中添加对 WebAuthn 的支持，那么“<a href=\"https://flyhigher.top/#webauthn-overview\">浅谈 WebAuthn</a>”部分就是你要找的；如果你想了解更多关于 WebAuthn 的底层细节，那么你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分。</p>\n<p>由于在本文写作时 WebAuthn Level 2 规范尚未定稿，<strong>这篇文章我们将只专注于 Level 1 规范。</strong></p>\n<p>这篇文章最后更新于 2020.9 ，在你读到这篇文章时，部分事实可能已经发生改变，请注意判断。</p>\n<p><strong>更新日志：</strong></p>\n<ul>\n<li>2021.1.16 添加 Chrome 开发工具信息</li>\n<li>2020.9.17 更新 iOS/iPad OS 兼容性信息</li>\n<li>2020.5.20 添加部分无用户名认证的平台兼容性内容</li>\n<li>2020.5.15 添加部分 <code>extensions</code> 相关内容与链接；添加全局凭证 ID 唯一内容；添加凭证 ID 查找相关内容；添加“从 U2F 认证迁移”一节</li>\n<li>2020.4.13 更新与修正 <code>userVerification</code> 相关内容；添加部分 Firefox 相关内容</li>\n<li>2020.3.23 文章发布</li>\n</ul>\n<p>那么让我们开始吧。<span></span></p>\n<h1>浅谈 WebAuthn</h1>\n<p>在这个部分里，我们将会从基础概念开始，了解有关 WebAuthn 和密码学的一些基础知识，并最终使用第三方库实现基础的 WebAuthn 认证。如果你已经对这些内容有所了解了，可以跳到“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”继续阅读。</p>\n<h2>为什么使用 WebAuthn</h2>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\" alt=\"钓鱼邮件\" width=\"709\" height=\"693\" class=\"aligncenter size-full wp-image-2162\"></a>\n<p>相信你一定收到过类似的邮件吧？只要你点进那个最显眼的链接，你就会进入一个设置好的圈套——钓鱼网站。如果你一时糊涂在这类网站上填写了你的账号和密码，bingo，你的账号就不再是你的账号了。</p>\n<p>不过，就算你警惕心再强，也无法避免密码泄露事件。Twitter, Facebook 等都爆出过明文密码泄露事件，证明再大的公司或组织也无法避免密码泄露问题。雪上加霜的是，很大一部分用户都非常喜欢使用重复密码，这就导致一次密码泄露会牵连很多网站，用户的账户安全性完全无法得到保证。</p>\n<p>那么，有什么办法解决这些问题吗？<strong>彻底解决的方法只有一个，那就是抛弃密码。</strong>可是没有密码还怎么验证用户身份呢？这就是 WebAuthn 的用武之地了。</p>\n<p><del>没有密码的好时代，来临力！</del></p>\n<h2>什么是 WebAuthn</h2>\n<p>那么到底什么是 WebAuthn 呢？如开头所说，WebAuthn 是“一个用于访问公钥凭证的 API”，网站可以通过这个 API 进行一些高安全性的身份验证。WebAuthn 一个最常见的应用就是用于网站登录时的 2FA（双重因素验证）甚至是无密码登录。通过网页调用 WebAuthn，在不同平台下，<strong>我们可以实现通过 USB Key、指纹、面部甚至虹膜扫描来认证身份，同时确保安全和隐私。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\" alt=\"WebAuthn 可使用的各种身份认证方式\" width=\"1294\" height=\"566\" class=\"aligncenter size-full wp-image-2213\"></a>\n<p>WebAuthn 标准是 FIDO2 标准的一部分，而 FIDO2 则是由 FIDO 联盟和 W3C 共同推出的 U2F（现称作 FIDO1）的后继标准，旨在增强网络认证的安全性。</p>\n<blockquote><p>你可能了解过 U2F，那么 U2F 和 FIDO2 的区别在哪里呢？从名字上可以看出，U2F，即“通用第二因素协议”，是专注于作为密码后的第二道屏障的，而 FIDO2 增加了单因素认证功能，这意味着使用 FIDO2 可以完全替代密码，真正实现无密码登录。</p></blockquote>\n<p>FIDO2 标准主要包括四个部分，其一是用于网站和访客设备交互的 WebAuthn，而 Client to Authenticator Protocol 2（CTAP2，客户端-认证器协议）作为 WebAuthn 的补充，则是用于访客的设备和认证器交互的协议。标准的其他两个部分则是 U2F 和 UAF 规范。在这篇文章中，我们只关心 WebAuthn，不会涉及 CTAP, U2F 和 UAF 的相关知识。如果你对这段话中的一些概念不了解，不要紧张，接下来我们就来谈谈 WebAuthn 中一些常用的术语和概念。</p>\n<blockquote><p>WebAuthn 只能在安全上下文中使用，也就是说，页面需要使用 HTTPS 协议或是处于 <code>localhost</code> 中。</p></blockquote>\n<h2>常用术语和概念</h2>\n<p>WebAuthn 中有许多不常碰到的术语，不过我只会在这里介绍一些常用的术语和概念——如果你只是希望做出一个简单的实现，那么了解这一段中的一些概念就足够了。同时，由于我实在没能找到一部分术语的通用翻译，有一些术语我按着自己的理解尽可能地翻译了，有任何问题请告诉我。</p>\n<p>在一个完整的 WebAuthn 认证流程中，通常有这么几个角色：</p>\n<ul>\n<li>Relying Party 依赖方 (RP) ：指服务提供方，即网站</li>\n<li>User 用户：正准备登录的你</li>\n<li>Authenticator 认证器：通常指 USB Key 或是设备内置的指纹扫描器、虹膜扫描器、面部识别装置等，正是它们在使用流程中代替了密码甚至是用户名</li>\n<li>User Agent 用户代理：通常指浏览器或系统，负责与认证器交互</li>\n</ul>\n<p>认证过程通常分为两种：</p>\n<ul>\n<li>Registration Ceremony 注册仪式：用户向账户上添加认证器</li>\n<li>Authentication Ceremony 验证仪式：用户通过已注册的认证器验证身份</li>\n</ul>\n<p>同时，认证过程中还会产生这些内容：</p>\n<ul>\n<li>Challenge 挑战：通常是一串随机字符串</li>\n<li>Public Key Credential 公钥凭证：由认证器产生的凭证，在技术上代替了密码</li>\n<li>Attestation 证明：注册时认证器产生的验证数据</li>\n<li>Assertion 断言：验证时认证器产生的验证数据</li>\n</ul>\n<blockquote><p><strong>请注意区分证明 (Attestation) 和断言 (Assertion)</strong>，特别是在这两个单词有些相似的情况下。在 WebAuthn 中，它们是不同过程中的类似概念，但并不相同。</p></blockquote>\n<p>如果你对于这些内容不是很理解，没有关系，我们会在“<a href=\"https://flyhigher.top/#how-to-webauthn\">使用流程</a>”一节中将这些概念放到实际情况中解释，你只要先区分这些概念即可。</p>\n<h2>安全性的基础</h2>\n<p>WebAuthn 为什么安全？和 HTTPS 一样，WebAuthn 使用非对称加密的思路来保证安全性，但侧重点又有所不同。要理解 WebAuthn 的认证流程，我们必须对非对称加密有所了解。如果你对非对称加密比较熟悉了，就直接跳到下一段吧。</p>\n<p>WebAuthn 的核心在于“认证”，即保证产生了凭证的认证器是用户的认证器，而不是第三方在伪造凭证。但为什么要使用非对称加密呢？我们可以先来看看对称加密。</p>\n<p>让我们假设小明和小红相互写信，见不到对方。这天小红突然想，给自己写信的人是不是真的小明呢？于是小红要求对方向小红证明自己是小明。怎么证明呢？他们商量出来这么一套方案：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明和小红商量一个统一的密码和密钥</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明用提前和小红商量好的密码和密钥加密文本后发回给小红</li>\n<li>小红使用相同的密码和密钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和密钥</li>\n</ol>\n<blockquote><p>在密码学中，我们通常把“加密算法”称为密码 (code)，和通常登录时用的密码 (password) 并非同一个概念。</p></blockquote>\n<p>在这种情况下，<strong>只要密钥不泄露</strong>，即拥有正确密钥的只有小明和小红，那么小红就能确定对方一定是小明。但这样的问题也很明显，如果小明和小红不能见面，那么他们就必须先以明文交换密码——<strong>在这个过程中一旦有人窃取到了密码，这个认证就无效了。</strong></p>\n<p>这时我们就需要使用<strong>非对称加密</strong>来拯救破碎的信任了。非对称加密的基础是一对密钥，也就是公钥和私钥，它们是互相关联但（几乎）无法互相推导的。在非对称加密的过程中，选择相同的密码后，使用私钥加密明文得到的密文只能由对应的公钥解密，无法使用私钥解密，同时这个过程反过来也是成立的。</p>\n<blockquote><p>本文的核心并不是非对称加密算法，因此不会详述非对称加密在数学上的证明，若有兴趣可以自行了解。</p></blockquote>\n<p>这就完美解决密钥泄露的问题了。让我们回过头来看之前的例子。现在小明和小红决定使用非对称加密来证明身份，过程如下：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明提前生成一对公私钥，将公钥发送给小红，私钥自己保管，同时商量好统一的密码</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明使用商量好的密码和自己的私钥加密文本，发送给小红</li>\n<li>小红使用相同的密码和小明的公钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和私钥</li>\n</ol>\n<p>在这种情况下，<strong>只要私钥不泄露</strong>，那么小红解密得到的文本和之前发送的一致，那么就可以证明收到的密文一定是由小明加密后发送过来的。而在整个过程中，私钥都没有离开过小明，更没有经过传输，也就几乎没有泄露的可能了。这时，小红终于可以确定对面和她通信的人的确是小明了。</p>\n<p>题外话：HTTPS 虽然也应用了非对称加密，但 HTTPS 更侧重于“加密”而非“认证”，因此思路上会有些许差异。要了解关于 HTTPS 和非对称加密的更多信息，你可以阅读我之前写的这篇文章：</p>\n<p></p>\n<div class=\"mdx-post-cot\" data-mdxposturl=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdx-post-wait-out-c2\"><div class=\"mdx-post-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<span></span>\n<h2>使用流程</h2>\n<p>了解了非对称加密，我们就可以来看看 WebAuthn 的认证流程了。</p>\n<p>和普通的密码一样，<strong>使用 WebAuthn 分为两个部分，注册和验证。</strong>注册仪式会在依赖方中将认证器的一些信息和用户建立关联；而验证仪式则是验证这些信息以登确保是用户本人在登录。根据上一节的思路，我们可以知道，注册仪式就是认证器生成一对公私钥，然后将公钥交给依赖方；而验证仪式是依赖方发送给认证器一段文本，要求认证器用自己的私钥加密后发回以验证。</p>\n<p>在实际情况中，WebAuthn 是基于<strong>挑战-应答模型</strong>工作的。要更好地理解，我们直接来看具体流程。先来看看注册的流程。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\" alt=\"WebAuthn 注册流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2224\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的注册请求</li>\n<li>依赖方向浏览器发送挑战、依赖方信息和用户信息</li>\n<li>浏览器向认证器发送挑战、依赖方信息、用户信息和客户端信息以请求创建公钥凭证</li>\n<li>认证器请求用户动作，随后创建一对公私钥，并使用私钥签名挑战（即证明），和公钥一起交给浏览器</li>\n<li>浏览器将签名后的挑战和公钥发送给依赖方</li>\n<li>依赖方用公钥验证挑战是否与发送的一致，如果成功则将公钥与用户绑定，注册完成</li>\n</ol>\n<p>我也做了一个交互式的 Demo，你可以对照流程来更好地理解。</p>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\">开始注册</button> <span></span></p>\n<div></div>\n<blockquote><p>注意，这个 Demo 和下方的 Demo 都只是一个本地模拟的简单示例，没有任何数据会被上传，当然也不会对数据进行验证。</p></blockquote>\n<p>而之后的验证流程如下：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\" alt=\"WebAuthn 验证流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2226\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的验证请求</li>\n<li>依赖方向浏览器发送挑战</li>\n<li>浏览器向认证器发送挑战、依赖方信息和客户端信息以请求获取公钥凭证</li>\n<li>认证器请求用户动作，随后通过依赖方信息找到对应私钥，并使用私钥签名挑战（即断言），交给浏览器</li>\n<li>浏览器将签名后的挑战发送给依赖方</li>\n<li>依赖方用之前存储的公钥验证挑战是否与发送的一致，一致则验证成功</li>\n</ol>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\" disabled>开始验证</button> <span>在上方注册后才能验证</span></p>\n<div></div>\n<p>可以看到，WebAuthn 不仅在理论上是安全的，同时<strong>在整个过程中并没有隐私数据被传输</strong>——用户信息实际上只包含用户名和用户 ID。因此我们完全可以说 WebAuthn 是安全且私密的。</p>\n<blockquote><p>为了避免用户在不同依赖方之间被追踪，认证器通常会为每个依赖方和用户的组合都创建一对公私钥。不过，由于认证器的存储空间有限，认证器通常不会存储每一个私钥，而是会通过各类信息和烧录在认证器内的主密钥“算”出对应的私钥以实现无限对公私钥。具体算法根据不同厂商会有所不同。对于 Yubikey，你可以在<a href=\"https://developers.yubico.com/U2F/Protocol_details/Key_generation.html\">这里</a>了解更多。</p></blockquote>\n<blockquote><p>如果依赖方需要，用户同意后，发送给依赖方的公钥凭证中可以包含用于辨认认证器型号的信息，不过这对隐私的影响微乎其微。</p></blockquote>\n<h2>浏览器接口</h2>\n<p>要使用 WebAuthn，我们必须要依靠浏览器作为媒介和验证器进行交互，而这就需要浏览器对于 WebAuthn 的支持了。绝大多数新版本的现代浏览器都为 WebAuthn 提供了统一的接口，而在这一段中我们会了解如何使用相关的接口。但是在开始之前，我们可以先来看看浏览器的支持程度（2020.9）。</p>\n<div class=\"mdui-table-fluid\"><table class=\"mdui-table\">\n<thead><tr>\n<th>浏览器</th>\n<th>支持情况</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>桌面端 Chrome</td>\n<td>67+</td>\n</tr>\n<tr>\n<td>移动端 Chrome</td>\n<td>67+<sup>[1]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Firefox</td>\n<td>60+</td>\n</tr>\n<tr>\n<td>移动端 Firefox</td>\n<td>不支持<sup>[2]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Edge</td>\n<td>18+</td>\n</tr>\n<tr>\n<td>移动端 Edge</td>\n<td>不支持<sup>[3]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Safari</td>\n<td>13+</td>\n</tr>\n<tr>\n<td>移动端 Safari</td>\n<td>13.3+<sup>[4]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Opera</td>\n<td>54+</td>\n</tr>\n<tr>\n<td>移动端 Opera</td>\n<td>不支持</td>\n</tr>\n</tbody>\n</table></div>\n<p><sup>[1]</sup> 受平台限制，Chrome 在 iOS 平台上不支持 WebAuthn，在 Android 平台上支持大部分 WebAuthn 功能，但仍不支持部分特性（如 <code>userVerification</code>）。<br><sup>[2]</sup> 移动端 Firefox 80 以下的版本支持 WebAuthn 但似乎会忽略 <code>authenticatorAttachment</code> 等一部分参数，同时移动端 Firefox Beta 80 以下的版本支持 WebAuthn 但无法成功调用。自 80 版本起移动端 Firefox 暂时取消了对 WebAuthn 的支持（可能是 Bug）。<br><sup>[3]</sup> 移动端 Edge 似乎支持 WebAuthn 但无法成功调用。<br><sup>[4]</sup> Safari iOS/iPad OS 13 仅支持外部认证器，无法调用 Touch ID 或 Face ID；自 iOS/iPad OS 14 起 Safari 已支持全功能 WebAuthn，可以调用 Touch ID/Face ID</p>\n<p>当然，一众国产浏览器，包括 Samsung Browser 和 Yandex Browser，目前都不支持 WebAuthn。此外，由于 WebAuthn 涉及外部验证器和 TPM 可信平台模块等，用户的操作系统也会对 WebAuthn 的可用性造成影响。以下是一些需要注意的信息：</p>\n<ul>\n<li>Windows 10 1903 以下版本仅 Edge 能提供完整支持，其他浏览器只能使用 USB Key 等外部认证器；1903+ 中所有浏览器都可以通过 Windows Hello 带来完整的 WebAuthn 支持</li>\n<li>Android 需要安装并开启 Google 服务</li>\n<li>iOS/iPad OS 13.3 以下的版本不支持 WebAuthn，iOS/iPad OS 14 以下的版本支持有限（参考上文），iOS/iPad OS 14 开始 Safari 已支持全功能 WebAuthn（功能完整度甚至超过了 Android）</li>\n</ul>\n<p>可以看出，WebAuthn 的发展之路仍然很漫长，但好在桌面端对它的支持已经比较完善了，在一些情况下我们完全有理由使用它。</p>\n<hr>\n<p>来看看浏览器提供了怎么样的接口吧。要使用 WebAuthn，我们可以使用 <code>navigator.credentials.create()</code> 请求认证器生成公钥凭证和 <code>navigator.credentials.get()</code> 请求获取公钥凭证。</p>\n<blockquote><p>你或许已经对 Credential Management API 有所了解了。通过这些 API，我们还可以实现一些有趣的特性，不过这值得另开一篇文章来讲了。</p></blockquote>\n<p>对于一个基础的实现，<code>navigator.credentials.create()</code> 需要传入的参数如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        challenge,\r\n        rp: {\r\n            id,\r\n            name\r\n        },\r\n        user: {\r\n            id,\r\n            name,\r\n            displayName\r\n        },\r\n        pubKeyCredParams: [\r\n            {\r\n                type: \"public-key\",\r\n                alg\r\n            }\r\n        ],\r\n        authenticatorSelection: {\r\n            authenticatorAttachment,\r\n            userVerification\r\n        },\r\n        excludeCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>在 <code>navigator.credentials.create()</code> 方法中，我们必须传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值。这指明了我们需要创建公钥凭证，而非普通的密码凭证。然后，在 <code>publicKey</code> 对象中设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rp: Object</code>：依赖方信息，其中有一项为必须：\n<ul>\n<li>\n<code>rp.id: String</code>：（可选）依赖方 ID，必须为当前域名或为当前域名的子集的域名（不是子域名）。如域名为 <code>test.123.example.com</code>，则依赖方 ID 可以是 <code>test.123.example.com</code>, <code>123.example.com</code> 或 <code>example.com</code>。不指定则默认使用当前域名</li>\n<li>\n<code>rp.name: String</code>：依赖方名称，用于方便用户辨认</li>\n</ul>\n</li>\n<li>\n<code>user: Object</code>：用户信息，其中有三项为必须：\n<ul>\n<li>\n<code>user.id: Uint8Array</code>：转换为 <code>Uint8Array</code> 的字符串。<strong>出于安全考量，这应尽可能不与任何用户信息相关联，如不要包含用户名、用户邮箱等</strong>\n</li>\n<li>\n<code>user.name: String</code>：登录用户名</li>\n<li>\n<code>user.dispalyName: String</code>：用于显示的用户名称，显示与否的具体行为取决于浏览器</li>\n</ul>\n</li>\n<li>\n<code>pubKeyCredParams: Array</code>：一个算法列表，指明依赖方接受哪些签名算法。列表的每一项都是一个对象，拥有两个属性：\n<ul>\n<li>\n<code>pubKeyCredParams[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>pubKeyCredParams[].alg: Number</code>：一个负整数，用于标明算法。具体算法对应的数字可以在 <a href=\"https://www.iana.org/assignments/cose/cose.xhtml#algorithms\">COSE</a> 找到</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection: Object</code>：（可选）用于过滤正确的认证器，这里介绍常用的一个参数：\n<ul>\n<li>\n<code>authenticatorSelection.authenticatorAttachment: String</code>：（可选）指定要求的认证器类型。如果没有满足要求的认证器，认证可能会失败。该参数可以为 <code>null</code>（表示接受所有类型的认证器）或是以下两个值之一：\n<ul>\n<li>\n<code>platform</code>：表示仅接受平台内置的、无法移除的认证器，如手机的指纹识别设备</li>\n<li>\n<code>cross-platform</code>：表示仅接受外部认证器，如 USB Key</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection.userVerification: String</code>：（可选）指定认证器是否需要验证“用户为本人 (User Verified, UV)”，否则只须“用户在场 (User Present, UP)”。具体验证过程取决于认证器（不同认证器的认证方法不同，也有认证器不支持用户验证），而对验证结果的处理情况则取决于依赖方。该参数可以为以下三个值之一：\n<ul>\n<li>\n<code>required</code>：依赖方要求用户验证</li>\n<li>\n<code>preferred</code>：（默认）依赖方希望有用户验证，但也接受用户在场的结果</li>\n<li>\n<code>discouraged</code>：依赖方不关心用户验证。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>excludeCredentials: Array</code>：（可选）用于标识要排除的凭证，可以避免同一个用户多次注册同一个认证器。如果用户试图注册相同的认证器，用户代理会抛出 <code>InvalidStateError</code> 错误。数组中的每一项都是一个公钥凭证对象，包含以下属性：\n<ul>\n<li>\n<code>excludeCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>excludeCredentials[].id: Uint8Array</code>：要排除的凭证 ID</li>\n<li>\n<code>excludeCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，超时后将强制终止 <code>create()</code> 并抛出错误。若不设置，将使用用户代理的默认值；若太大或太小，则使用最接近的用户代理默认值范围中的值。推荐值为 5000-120000</li>\n</ul>\n<blockquote><p>对于 <code>pubKeyCredParams</code>，通常我们只需添加 ES256 (alg: -7) 算法即可兼容大部分外部认证器，此外，再添加 RS256 (alg: -257) 算法即可兼容大部分平台内置认证器（如 Windows Hello）。当然，前端添加算法之后，后端也需要相应的算法支持。</p></blockquote>\n<blockquote><p>对于 <code>userVerification</code>，由于默认值 \"preferred\" 并不能很好地被所有设备支持，因此无论在 <code>create()</code> 中还是 <code>get()</code> 中不指定该参数都会在 Chrome 中触发一条警告。具体请参阅<a href=\"https://chromium.googlesource.com/chromium/src/+/master/content/browser/webauth/uv_preferred.md\">这个页面</a>。</p></blockquote>\n<p>调用 <code>create()</code> 之后，我们就可以拿到一个 <code>Promise</code>，并可以在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>create()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAttestationResponse {\r\n        attestationObject: ArrayBuffer(390) {},\r\n        clientDataJSON: ArrayBuffer(121) {}\r\n    },\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\",\r\n    type: \"public-key\"\r\n}</pre>\n<p>其中有：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：<code>AuthenticatorAttestationResponse</code> 对象，是 <code>PublicKeyCredential</code> 的主要部分，包含以下两个内容：\n<ul>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n<li>\n<code>response.attestationObject: ArrayBuffer</code>：CBOR 编码的认证器数据，包含凭证公钥、凭证 ID、签名（如果有）、签名计数等信息</li>\n</ul>\n</li>\n</ul>\n<p>然后将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串，我们就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证与注册了。具体怎么操作，我们会在下文详细讨论。当然，别忘了 <code>catch()</code> 注册过程中抛出的任何错误。</p>\n<blockquote><p>你可能会认为在所有情况下，注册时认证器都会对挑战进行签名。实际上在大部分情况下（同时也是默认情况），<strong>注册时认证器并不会对挑战进行签名</strong>，<code>attestationObject</code> 并不会包含签名后的挑战。只有依赖方明确要求证明且用户同意（部分浏览器要求）后认证器才会对挑战进行签名（具体实现据情况会有所不同）。对此，<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion#Attestation\">MDN 解释道</a>“大部分情况下，用户注册公钥时我们会使用「初次使用时信任模型」(TOFU) ，此时验证公钥是没有必要的。”要了解更多关于证明的内容，请参阅“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>而对于 <code>navigator.credentials.get()</code>，我们可以传入如下的参数：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.get({\r\n    publicKey: {\r\n        challenge,\r\n        rpId,\r\n        userVerification,\r\n        allowCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>和 <code>create()</code> 一样，对于 <code>get()</code> 我们需要传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值，指明我们需要获取的是公钥凭证而非普通的密码凭证。在 <code>publicKey</code> 对象中我们可以设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rpID: String</code>：（可选）依赖方 ID，需要和注册认证器时的一致。规则和上述的 <code>rp.id</code> 一致，不指定默认使用当前域名</li>\n<li>\n<code>userVerification: String</code>：和上文一样，只是需要注意它这次不在 <code>authenticatorSelection</code> 中了</li>\n<li>\n<code>allowCredentials: Array</code>：（可选）用于标识允许的凭证 ID，使用户代理找到正确的认证器。只有符合这个列表中凭证 ID 的凭证才能被成功返回。数组中的每一项都是对象，包含以下属性：\n<ul>\n<li>\n<code>allowCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>allowCredentials[].id: Uint8Array</code>：允许的凭证 ID</li>\n<li>\n<code>allowCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，和上面的一样，推荐值为 5000-120000</li>\n</ul>\n<p>嗯，要传入的参数少多了。之后，和 <code>create()</code> 一样，调用 <code>get()</code> 之后，我们就可以拿到一个 <code>Promise</code> 并在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>get()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAssertionResponse {\r\n        authenticatorData: ArrayBuffer(37) {},\r\n        signature: ArrayBuffer(256) {},\r\n        userHandle: ArrayBuffer(64) {},\r\n        clientDataJSON: ArrayBuffer(118) {}\r\n    }\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\"\r\n    type: \"public-key\"\r\n}</pre>\n<p>这里的东西就比 <code>create()</code> 时拿到的要多了。看看我们拿到了什么吧：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：对于验证流程，认证会返回 <code>AuthenticatorAssertionResponse</code> 而不是 <code>AuthenticatorAttestationResponse</code> 对象，这个对象包含以下 4 个属性：\n<ul>\n<li>\n<code>response.authenticatorData: ArrayBuffer</code>：认证器信息，包含认证状态、签名计数等</li>\n<li>\n<code>response.signature: ArrayBuffer</code>：被认证器签名的 <code>authenticatorData</code> + <code>clientDataHash</code>（<code>clientDataJSON</code> 的 SHA-256 hash）</li>\n<li>\n<code>response.userHandle: ArrayBuffer</code>：<code>create()</code> 创建凭证时的用户 ID <code>user.id</code>。许多 U2F 设备不支持这一特性，这一项将会是 <code>null</code>\n</li>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n</ul>\n</li>\n</ul>\n<p>同样地，我们将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串后就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证了。至于具体怎么做，别急，马上就来讲一讲。</p>\n<h2>简单实现</h2>\n<p>了这么多，我们终于可以实现一个简单的 WebAuthn 认证页面了。由于在实际操作中 WebAuthn 相关的数据解码和密码计算比较复杂，在服务器端我们可以使用第三方库来帮我们做这些脏活累活，我们只需专注于具体流程就可以了。</p>\n<p>要寻找可用的第三方库，你可以在 <a href=\"https://webauthn.io/\">webauthn.io</a> 上找到适用于各种语言的第三方库——除了 PHP（笑）。不过好在你可以在 GitHub 上找到几个不错的 PHP WebAuthn 库，比如 <a href=\"https://github.com/web-auth/webauthn-framework\">web-auth/webauthn-framework</a>。</p>\n<p>在我们的这个例子中，我们关心的主要是前端逻辑；而后端我们可以使用各类几乎已经做到开箱即用的第三方库，这样我们可以专注于流程而不必关心细节。当然如果你想了解后端的解码细节，可以阅读“<a href=\"https://flyhigher.top/#webauthn-decode\">手动解个码</a>”一节。</p>\n<hr>\n<p>让我们先从注册开始吧。现在，用户点击了注册认证器的按钮，一个请求被发送给服务器（也就是依赖方）。在最简单的情况中，依赖方需要将三个内容发送给浏览器：<strong>挑战、用户信息和用户已注册的凭证 ID 列表（即 <code>excludeCredentials</code>）</strong>。当然依赖方也可以自由选择发送更多信息，只要最终前端能构建合法的参数即可。</p>\n<p>挑战最终会被转换为 <code>Uint8Array</code>，即一组 0-255 的整数。如果使用 PHP，在后端我们可以这样生成 Base64 编码的挑战：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"php\">$challenge = \"\";\r\nfor($i = 0; $i \n<p>对于用户信息，我们需要登录名、显示名称和 ID 三项内容。我们可以从数据库中取出用户信息，也可以新建一份。需要注意的是，<strong>出于安全和隐私的考量，ID 不应该包含用户的任何信息，比如用户邮箱等。</strong>推荐的做法是和挑战一样，生成一个随机字符串/一组随机数，并将其于用户关联起来以供之后使用。</p>\n<p>发送已注册的凭证 ID 列表是为了防止用户重复注册同一个认证器。正确设置该列表后，如果用户试图注册同一个认证器，浏览器会中止流程并抛出 <code>InvalidStateError</code>。</p>\n<p>最后，别忘了将挑战等一些后续可能会用到的信息临时存储起来。Session 就是一个很好的选择。</p>\n<p>将所有信息发送到浏览器之后，我们应该可以构建出新建凭证所需的参数了。由于有多个参数需要以 <code>Uint8Array</code> 的形式传入，我们可以准备一个简单的工具函数帮我们将 Base64 的字符串转为 <code>Uint8Array</code>。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function str2ab(str){\r\n    return Uint8Array.from(window.atob(str), c=&gt;c.charCodeAt(0));\r\n}</pre>\n<p>除了 <code>challenge</code>, <code>rp</code>, <code>user</code> 和 <code>excludeCredentials</code> 几部分需要你根据具体情况设置外，上文提到的其他参数一般可以这么设置：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">publicKey: {\r\n    challenge, // 自行设置\r\n    rp, // 自行设置\r\n    user, // 自行设置\r\n    pubKeyCredParams: [\r\n        {\r\n            type: \"public-key\",\r\n            alg: -7 // ES256\r\n        },\r\n        {\r\n            type: \"public-key\",\r\n            alg: -257 // RS256\r\n        }\r\n    ],\r\n    authenticatorSelection: {\r\n        userVerification: \"discouraged\",\r\n        authenticatorAttachment: null // 除非用户指定，大部分情况下无需指定\r\n    },\r\n    excludeCredentials, // 自行设置\r\n    timeout: 60000\r\n}</pre>\n<p>然后就是传入 <code>navigator.credentials.create()</code>，拿到 <code>PublicKeyCredential</code>。如果一切顺利，接下来我们就需要考虑如何将返回的内容传回依赖方了。由于我们拿到的很多都是 <code>ArrayBuffer</code>，我们需要将其进行编码。再准备一个工具函数吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function array2b64String(a) {\r\n    return window.btoa(String.fromCharCode(...a));\r\n}</pre>\n<p>然后适当处理，我们就可以得到一个方便传输的 JSON 字符串了：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({publicKey}).then((credentialInfo) =&gt; {\r\n    const publicKeyCredential = {\r\n        id: credentialInfo.id,\r\n        type: credentialInfo.type,\r\n        rawId: array2b64String(new Uint8Array(credentialInfo.rawId)),\r\n        response: {\r\n            clientDataJSON: array2b64String(new Uint8Array(credentialInfo.response.clientDataJSON)),\r\n            attestationObject: array2b64String(new Uint8Array(credentialInfo.response.attestationObject))\r\n        }\r\n    };\r\n    return publicKeyCredential;\r\n}).then(JSON.stringify).then((authenticatorResponseJSON) =&gt; {\r\n    // 可以发送了\r\n}).catch((error) =&gt; {\r\n    console.warn(error); // 捕获错误\r\n})</pre>\n<p>依赖方收到数据以后，还需要做三件事：验证挑战、存储凭证 ID 和存储公钥。如果数据解码顺利，且收到的挑战和之前发送的一致，就可以认为注册成功，将凭证 ID 及公钥与用户关联起来。这一步有很多第三方库可以帮我们做，对于基础实现我们就不深入探究了。</p>\n<blockquote><p>由于不同厂商的认证器的实现方式不同，<strong>我们并不能保证凭证 ID 一定是全局唯一的</strong>，也就是说，凭证 ID 有可能碰撞——即使这些凭证实际上是不同的。依赖方在实现凭证 ID 的存储及查找时，需要注意和用户 ID 结合进行存储或查找，或是直接在注册认证器时在服务器端对比阻止相同的凭证 ID。</p></blockquote>\n<hr><p>接下来就可以进行验证了。某天，用户点击了验证按钮准备登录，于是浏览器发送了验证请求到依赖方，同时附上要登录的用户名。接下来依赖方至少需要发送两项内容给浏览器：<strong>挑战和用户已绑定的凭证 ID 列表（即 <code>allowCredentials</code>）。</strong></p>\n<p>之后前端的处理流程就和注册时基本一致了。只是需要注意验证流程中获取到的 <code>PublicKeyCredential</code> 的结构和注册时的稍有不同。</p>\n<p>当浏览器将数据传回后，依赖方需要做的事情就比之前要麻烦一些了。依赖方需要验证挑战，并用之前存储的公钥验证签名和签名计数。同样地，这一步有很多第三方库可以帮我们做。最后，如果验证全部通过，我们就可以允许用户登录了。</p>\n<p>到目前为止，我们已经实现了一个简单的 WebAuthn 验证服务。不过这只是一个最基础的实现，对于很多高安全要求的身份认证这是远远不够的。因此，我们需要摆脱对第三方库的依赖，深入了解 WebAuthn。你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分，不过对于基础的 WebAuthn 实现，我们的旅程就到这里了。</p>\n<h2>拓展阅读</h2>\n<p>如果你的目标只是快速了解如何开发 WebAuthn，那么你阅读到这里就可以了。同时，上一节例子中的部分代码来自于我为了这篇文章开发的 WordPress 插件 WP-WebAuthn，这个插件可以为你的 WordPress 启用 WebAuthn 无密码登录（并非二步验证），你可以查阅插件的 <a href=\"https://github.com/yrccondor/wp-webauthn\">GitHub 存储库</a>了解更多，也可以自己安装试一试。</p>\n<p>如果你正在使用 Chrome 开发，Chrome 87+ 版本添加了一个 WebAuthn 开发者面板，可以帮助你在没有任何实体验证器的情况下开发 WebAuthn 功能。你可以在 Google 的<a href=\"https://developers.google.com/web/tools/chrome-devtools/webauthn\">这篇文章</a>中了解更多。不够，如果你正在使用 Firefox，很遗憾目前我还没有找到对应的开发工具或是浏览器扩展可用。</p>\n<p>如果你希望了解更多关于非对称加密的数学证明，可以查阅阮一峰老师的<a href=\"http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html\">这篇文章</a>。</p>\n<p>如果你希望了解更多关于 Credential Management API 的信息，可以查阅<a href=\"https://medium.com/dev-channel/sign-in-on-the-web-credential-management-api-and-best-practices-d21aed14b6fe\">这篇文章</a>（英文）。</p>\n<p>如果你希望了解更多 WebAuthn 的细节，可以继续往下阅读。<span></span></p>\n<h1>深入了解 WebAuthn</h1>\n<p>如上文所说，如果摆脱对第三方库的依赖，或是要实现更安全的 WebAuthn，我们必须深入了解 WebAuthn。在这一部分中，我们会详细讨论上文没有提到的一些概念和参数，并了解 WebAuthn 中各类数据的结构以实现解码与验证。先来看一看一些进阶的选项吧。</p>\n<h2>进阶选项</h2>\n<p>没错，上文提到的传入 <code>navigator.credentials.create()</code> 和 <code>navigator.credentials.get()</code> 方法的参数其实只是所有参数的一部分。对于 <code>create()</code>，我们还可以配置这些可选内容（上文提及的已省略）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        rp: {\r\n            icon\r\n        },\r\n        user: {\r\n            icon\r\n        },\r\n        attestation,\r\n        authenticatorSelection: {\r\n            requireResidentKey\r\n        },\r\n        extensions\r\n    }\r\n})</pre>\n</pre>\n<ul>\n<li>\n<code>rp.icon: String</code> 和 <code>user.icon</code>：是的，你可以为依赖方和用户设置图标，可以使用 HTTPS URL 或 Base64，一般长度不能超过 128 字节，不过大部分浏览器不会显示图标，或是有非常小的图片体积限制，所以一般没有使用这一属性的必要</li>\n<li>\n<code>attestation: String</code>：表明依赖方是否需要证明。可选三个值：\n<ul>\n<li>\n<code>none</code>：（默认）不需要证明。如上文所述，依赖方不关心证明，因此认证器不会签名。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n<li>\n<code>indirect</code>：依赖方需要证明，但证明方式可由认证器选择。在支持匿名证明的认证器上，认证器会通过匿名证明的方式签名挑战，并向依赖方提供签名方式等信息</li>\n<li>\n<code>direct</code>：依赖方要求直接证明。此时认证器会使用烧录在认证器中的公钥进行签名，同时向依赖方提供签名方式等信息以供依赖方验证认证器是否可信。更多信息可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节</li>\n</ul>\n</li>\n<li>在 <code>authenticatorSelection</code> 中，我们还可以设置两个可选属性：\n<ul>\n<li>\n<code>authenticatorSelection.requireResidentKey: Boolean</code>：是否要求将私钥钥永久存储于认证器中。默认值为 <code>false</code>。对于 iOS/iPad OS 13，必须设置为 <code>false</code>，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n<li>\n<code>extensions: Object</code>：WebAuthn 扩展，可以提供规范之外的配置和响应。由于实际情况中很少会使用这一特性，我们不会在这篇文章中讨论它</li>\n\n<blockquote><p>将 <code>requireResidentKey</code> 设置为 <code>true</code> 可以实现无用户名的登录，即认证器同时替代了用户名和密码。需要注意的是，尽管大部分认证器可以实现无限对公私钥，<strong>但能永久存储的私钥数量是有限的</strong>（对于 Yubikey，这通常是 25），因此只应在真正需要的时候启用此特性。我们会在“<a href=\"https://flyhigher.top/#login-without-username\">无用户名登录</a>”一节中详细讨论原因。</p></blockquote>\n<blockquote><p><strong>如果你没有高安全需求（如银行交易等），请不要向认证器索取证明</strong>，即将 <code>attestation</code> 设置为 \"none\"。对于普通身份认证来说，要求证明不必要的，且会有浏览器提示打扰到用户。</p></blockquote>\n<blockquote><p>Android 暂时无法实施用户验证，进而会导致依赖方验证失败。你可以在<a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=997538\">这里</a>追踪这个特性的实现情况。</p></blockquote>\n<blockquote>\n<p>对于 <code>extensions</code>，由于目前浏览器支持和应用范围有限，我们不会在这篇文章中涉及，不过你可以看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    uvm: true, // 要求认证器返回用户进行验证的方法\r\n    txAuthSimple: \"Please proceed\" // 在认证器上显示与交易有关的简短消息\r\n}</pre>\n<p>你可以在<a href=\"https://www.w3.org/2019/01/webauthn-extensions.html\">这个页面</a>了解更多关于 <code>extensions</code> 的信息。</p>\n</blockquote>\n<p>对于 <code>get()</code>，我们其实只有一个可选内容没讲了，即 <code>extensions</code>。和上文一样，我们不会在这篇文章中讨论它。</p>\n<p>就这些了！<span></span></p>\n<h2>手动解个码</h2>\n<p>是时候看看如何手动解码了。我们将会在这一节中讨论认证器返回的数据的结构以及如何正确地解码它们。</p>\n<p>首先我们来看看如何处理注册过程中认证器发回的数据。假设所有 <code>ArrayBuffer</code> 类型的值都被正确地以 Base64 编码，且后端已经将 JSON 的字符串解析为字典。先来复习一下，我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"ZRBkDBCEtq...9XY8atOcbg\",\r\n    type: \"public-key\",\r\n    rawId: \"ZRBkDBCEtq...9XY8atOcbg==\",\r\n    response: {\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...i5jcmVhdGUifQ==\",\r\n        attestationObject: \"o2NmbXRkbm9uZWd...xNHuAMzz2LxZA==\"\r\n    }\r\n}</pre>\n<p>这里的 <code>id</code> 就是凭证的 ID，如果验证正确，我们最终要将它存储起来并于用户关联。同时可以看到 Base64 编码后的 <code>rawId</code> 其实和 <code>id</code> 是一致的（不过 <code>id</code> 是 Base64URL 编码的）。而 <code>type</code> 则一定是 \"public-key\"。</p>\n<p>不过，我们主要关心的还是 <code>respose</code> 中的两项内容。首先是 <code>clientDataJSON</code>。它的处理比较简单，看名字就知道，它应该是一个 JSON 字符串。</p>\n<blockquote><p>小技巧：如果你看到一个 Base64 编码的字符串以 \"ey\" 开头，那么它大概率是一个 Base64 编码的 JSON。</p></blockquote>\n<p>将<code>clientDataJSON</code> Base64 解码再 JSON 解码之后我们就能得到一个字典：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"NI4i1vsNmP2KHcmyFnBCKRVQPfHgg34SsYZUOPZY2lM\",\r\n    extra_keys_may_be_added_here: \"do not compare clientDataJSON against a template. See https://goo.gl/yabPex\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>结构一目了然。在这里，我们需要验证三项内容：</p>\n<ul>\n<li>\n<code>challenge</code> 和之前发送的一致</li>\n<li>\n<code>origin</code> 为创建凭证的页面的源（协议+主机名+端口号，并非 URL）</li>\n<li>\n<code>type</code> 为 \"webauthn.create\"</li>\n</ul>\n<p>同时可以注意到有一个奇怪的 <code>extra_keys_may_be_added_here</code>。这其实是 Google 在 Chrome 中搞的一点小把戏，有一定概率会出现，提醒我们需要将 JSON 解析后再验证键值以防额外插入的键值影响验证。具体信息你可以访问那个 URL 看一看。</p>\n<p>对于 Firefox，我们会多得到两项 <code>clientExtensions</code> 和 <code>hashAlgorithm</code> ，分别指明了客户端扩展数据和签名算法。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"3-4\">{\r\n    challenge: \"dg6ost6ujhAA0g6WqLe-SOOH-tbhvjW9Sp90aPKlLJI\",\r\n    clientExtensions: {},\r\n    hashAlgorithm: \"SHA-256\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>由于本文不考虑扩展数据，因此我们可以不考虑 <code>clientExtensions</code>。同时由于目前规范中指定的签名算法只有 SHA-256 一种，因此现阶段我们也可以简单地忽略 <code>hashAlgorithm</code>。</p>\n<p><code>clientDataJSON</code> 很简单地就处理完了。接下来我们要来看看 <code>attestationObject</code>。先来看看 <code>attestationObject</code> 的结构图示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\" alt=\"attestationObject 的结构\" width=\"1056\" height=\"532\" class=\"aligncenter size-full wp-image-2245\"></a>\n<p><code>attestationObject</code> 是 CBOR 编码后再被 Base64 编码的，因此我们需要额外对其进行 CBOR 解码。</p>\n<blockquote><p>CBOR (Concise Binary Object Representation, 简明二进制对象表示) 是一种多应用于物联网领域的编码方式，你可以将它看作体积更小、更方便物联网传输的二进制 JSON。大部分语言都可以找到对应的 CBOR 解码库。</p></blockquote>\n<p>我们当然不会手解 CBOR，直接来看看解开之后的样子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"none\",\r\n    attStmt: {},\r\n    authData: [211, 217, 43, 24, 199, ..., 97, 238, 166, 67, 107]\r\n}</pre>\n<p>这些键值的含义如下：</p>\n<ul>\n<li>\n<code>fmt</code>：标明证明的格式。WebAuthn 预定义了几种格式，分别为：\n<ul>\n<li>\n<code>none</code>：没有证明</li>\n<li>\n<code>packed</code>：为 WebAuthn 优化的证明格式</li>\n<li>\n<code>android-safetynet</code>：Android 使用的格式</li>\n<li>\n<code>android-key</code>：又是 Android 使用的格式</li>\n<li>\n<code>fido-u2f</code>：FIDO U2F 认证器使用的格式</li>\n<li>\n<code>tpm</code>：TPM 可信平台模块使用的格式</li>\n</ul>\n</li>\n<li>\n<code>attStmt</code>：证明对象，具体格式根据 <code>fmt</code> 的不同会有所不同</li>\n<li>\n<code>authData</code>：包含公钥、签名计数等来自认证器的数据</li>\n</ul>\n<p>诶，例子里的 <code>attStmt</code> 怎么是空的？还记得之前说的吗？大部分情况下，<strong>如果依赖方不要求证明，那么认证器不会签名挑战</strong>，于是 <code>fmt</code> 会变为 \"none\"，<code>attstmt</code> 会为空。如果不是高安全要求，我们可以只对这一种情况做支持。</p>\n<blockquote><p>注意，部分情况下 Firefox 会在不要求证明（即 <code>attestation</code> 为 \"none\"）时会返回 <code>fmt</code> 为 \"packed\" 的证明。<strong>这是符合规范的。</strong>此时认证器会进行自证明，你可以视情况进行处理。具体可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>对于非 \"none\" 的 <code>fmt</code> 我们稍后再谈，现在我们先来看看 <code>authData</code>。来复习一下 <code>authData</code> 的结构：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\" alt=\"authData 的结构\" width=\"1056\" height=\"384\" class=\"aligncenter size-full wp-image-2240\"></a>\n<p>对于它的解码比较简单粗暴，我们要做的就是根据图示将它切开，然后适当地转换类型。其中各部分的含义如下：</p>\n<ul>\n<li>\n<code>rpIdHash</code>：如其名，SHA-256 的 <code>rpId</code>，长度 32 字节</li>\n<li>\n<code>flags</code>：标识认证状态，长度 1 字节。其中 8 位分别为：\n<ul>\n<li>\n<code>ED</code>：是否有扩展数据</li>\n<li>\n<code>AT</code>：是否包含 <code>attestedCredentialData</code>。通常注册认证器时会包含 <code>attestedCredentialData</code>，而验证时不包含</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>\n<code>UV</code>：用户是否已验证</li>\n<li>保留位</li>\n<li>\n<code>UP</code>：用户是否在场</li>\n</ul>\n</li>\n<li>\n<code>signCount</code>：签名计数，长度 4 字节</li>\n<li>\n<code>attestedCredentialData</code>：包含公钥等凭据数据，变长。其结构如下：\n<ul>\n<li>\n<code>aaguid</code>：认证器的 AAGUID (Authenticator Attestation GUID)，对于同一型号的认证器，它们的 AAGUID 是相同的</li>\n<li>\n<code>credentialIdLength</code>：标识 <code>credentialId</code> 的长度，长度 2 字节</li>\n<li>\n<code>credentialId</code>：凭证 ID，和 <code>rawId</code> 一致，长度由 <code>credentialIdLength</code> 定义</li>\n<li>\n<code>credentialPublicKey</code>：CBOR 编码的 COSE 格式的凭证公钥，变长</li>\n</ul>\n</li>\n<li>\n<code>extensions</code>：扩展数据，变长，本文不讨论</li>\n</ul>\n<blockquote><p>出于隐私考虑，如果不要求证明，认证器会以 0 填充 AAGUID。</p></blockquote>\n<p>如果你的后端在使用 Node.js，这里有个工具函数可以帮你完成这一步（不考虑 <code>extensions</code>）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function parseAuthData(buffer){\r\n    let rpIdHash = buffer.slice(0, 32);\r\n    buffer = buffer.slice(32);\r\n  \r\n    let flagsBuf = buffer.slice(0, 1);\r\n    buffer = buffer.slice(1);\r\n\r\n    let flagsInt = flagsBuf[0];\r\n    let flags = {\r\n        up: !!(flagsInt &amp; 0x01),\r\n        uv: !!(flagsInt &amp; 0x04),\r\n        at: !!(flagsInt &amp; 0x40),\r\n        ed: !!(flagsInt &amp; 0x80),\r\n        flagsInt\r\n    }\r\n\r\n    let counterBuf = buffer.slice(0, 4);\r\n    buffer = buffer.slice(4);\r\n  \r\n    let counter = counterBuf.readUInt32BE(0);\r\n\r\n    let aaguid = undefined;\r\n    let credID = undefined;\r\n    let COSEPublicKey = undefined;\r\n\r\n    if(flags.at) {\r\n        aaguid = buffer.slice(0, 16);\r\n        buffer = buffer.slice(16);\r\n\r\n        let credIDLenBuf = buffer.slice(0, 2);\r\n        buffer = buffer.slice(2);\r\n\r\n        let credIDLen = credIDLenBuf.readUInt16BE(0);\r\n        credID = buffer.slice(0, credIDLen);\r\n\r\n        buffer = buffer.slice(credIDLen);\r\n        COSEPublicKey = buffer;\r\n    }\r\n\r\n    return {rpIdHash, flagsBuf, flags, counter, counterBuf, aaguid, credID, COSEPublicKey}\r\n}</pre>\n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>解开后，依赖方至少需要做四件事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>存储签名计数</li>\n<li>存储公钥</li>\n</ol>\n<blockquote><p>签名计数不一定从 0 开始。</p></blockquote>\n<p>对于公钥，也就是 <code>credentialPublicKey</code>，我们需要多一次 CBOR 解码，然后就可以得到类似这样的公钥：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    kty: \"EC\",\r\n    alg: \"ECDSA_w_SHA256\",\r\n    crv: \"P-256\",\r\n    x: \"ZGQALNfqo0L7HFYQHFHCS/X5db49z0ePnuQEs3w3X8w=\",\r\n    y: \"6qYxhnjYuez/Q8N6vX7nIIGfxFWdZ25NzQfZYuYOalA=\"\r\n}</pre>\n<p>然后可以选择适当的方法将其存储起来，之后的步骤本文就不再赘述了。现在，将目光拉回来，让我们看看包含证明的 <code>attestationObject</code> 是怎么样的。我们来看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"packed\",\r\n    attStmt: {\r\n        alg: -7,\r\n        sig: [48, 70, 2, 33, 0, ..., 132, 78, 46, 100, 21],\r\n        x5c: [\r\n            [48, 130, 2, 189, 48, 130, 1, 165, 160, 3, ..., 177, 48, 125, 191, 145, 24, 225, 169, 41, 248]\r\n        ]\r\n    },\r\n    authData: [211, 217, 43, 24, 199, ..., 158, 54, 87, 126, 54]\r\n}</pre>\n<p>这里有一个使用 \"packed\" 格式的证明。此时，<code>attStmt</code> 中包含三个值：</p>\n<ul>\n<li>\n<code>alg</code>：签名算法</li>\n<li>\n<code>sig</code>：签名值</li>\n<li>\n<code>x5c</code>：X.509 编码的证书链</li>\n</ul>\n<p>我们不会在这一节中详述对签名的验证。要了解更多信息，你可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。现在，让我们来看看如何处理验证过程中认证器发回的数据。我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"hmqdxPLit9...BWeVxZqdvU\",\r\n    type: \"public-key\",\r\n    rawId: \"hmqdxPLit9V...BWeVxZqdvU=\",\r\n    response: {\r\n        authenticatorData: \"09krGMcWTf...UFAAAABA==\",\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...XRobi5nZXQifQ==\",\r\n        signature: \"UsXZV3pvT3np8btj6V0g...WBkaqyt88DrD40qh+A==\",\r\n        userHandle: \"MmYxNWYzZjQyZjM...Tg2ZDY4NzhlNw==\"\r\n    }\r\n}</pre>\n<p><code>id</code>, <code>rawId</code> 和 <code>type</code> 和之前一样，这里就不再赘述了。让我们来看看 <code>response</code>。首先是 <code>clientDataJSON</code>，和之前的解法一样，要验证的内容也一样，只是 <code>type</code> 从 \"webauthn.create\" 变成了 \"webauthn.get\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"bnkd2CmrEuvKnAFXs2QlC3SKlg4XFvGtP4HJL1yEWyU\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.get\"\r\n}</pre>\n<p>然后是 <code>userHandle</code>。前面讲过，这是认证器在创建凭证时的用户 ID。如果用户在使用 U2F 认证器，很可能这一项为空，所以大部分情况下我们不关心这一项。</p>\n<p>接着来看 <code>authenticatorData</code>。这其实就是之前的 <code>attestedCredentialData</code>，只是这次不包含公钥。以相同的方式切开数据，我们应该可以得到 <code>rpIdHash</code>, <code>flags</code>和 <code>signCount</code> 三项。此时，依赖方至少需要做这三样事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>验证签名计数大于之前存储的计数，并更新存储的计数</li>\n</ol>\n<blockquote><p>如果签名计数比之前的小，那么这个认证器很可能是伪造的，应该中止验证并返回验证失败。同时，签名计数不一定每次按 1 递增，通常只要计数比此前的大就认为计数检查通过。</p></blockquote>\n<p>最后，我们来看 <code>signature</code>，也就是签名。不过这个签名不是简单的对挑战的签名，具体算法如图所示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\" alt=\"签名过程\" width=\"1034\" height=\"587\" class=\"aligncenter size-full wp-image-2231\"></a>\n<p>计算签名时，认证器会将 <code>authenticatorData</code> 与 <code>clientDataHash</code>（也就是 <code>clientDataJSON</code> 的 SHA-256 Hash）拼接起来，并使用对应的私钥签名。依赖方应该使用对应的公钥将其解密，并验证内容是否是 <code>authenticatorData</code> 与 <code>clientDataHash</code> 的拼接。这部分的计算不在本文的讨论范围内。</p>\n<p>最后，如果全部验证通过，返回验证成功。<span></span></p>\n<h2>验证认证器</h2>\n<p>WebAuthn 已经很安全了，但有的时候我们还要让它更安全一点。比如，如果用户在使用伪造的或是自制的认证器，认证器的安全性就得不到保证。此时，依赖方就需要验证认证器是否是可信的认证器。</p>\n<blockquote><p>这一过程仅发生在注册认证器时。此时，如果认证器验证通过，就可以存储公钥，后续步骤和之前描述的一致。</p></blockquote>\n<blockquote><p>再次说明，如果不是对安全性有极高的要求，向认证器索取证明以验证认证器是否可信是没有必要的。此外，验证认证器需要依赖方自行维护可信认证器列表，大大增加了维护的复杂性。</p></blockquote>\n<p>在调用 <code>navigator.credentials.create()</code> 时，我们可以将 <code>attestation</code> 设置为非 \"none\" 来向认证器索取证明。除无证明外，WebAuthn 定义了四种证明方式：</p>\n<ul>\n<li>Basic Attestation (Basic) ：基础的证明方式，认证器会使用认证器私钥签名</li>\n<li>Self Attestation (Self) ：自证明，认证器会使用凭证私钥签名</li>\n<li>Attestation CA (AttCA) ：认证器会使用多个证明私钥之一签名</li>\n<li>Elliptic Curve based Direct Anonymous Attestation (ECDAA) ：通过 <a href=\"https://en.wikipedia.org/wiki/Direct_Anonymous_Attestation\">DAA</a> 实现的匿名证明</li>\n</ul>\n<blockquote><p>和验证过程一样，这里签名的目标是 <code>authenticatorData</code> 和 <code>clientDataHash</code> 的连接。</p></blockquote>\n<p>还记得 <code>create()</code> 时 <code>attestation</code> 可选的三个值吗？这个值会决定认证器最终使用哪种方式进行证明。复习一下：</p>\n<ul>\n<li>\n<code>none</code>：大部分情况下认证器会选择不进行证明，部分认证器会进行自证明。此时 AAGUID 会被 0 填充</li>\n<li>\n<code>indirect</code>：认证器会试图通过替换 AAGUID 和选择合适的证明方式来进行匿名证明，具体方式由认证器选择</li>\n<li>\n<code>direct</code>：认证器会提供最直接的证明信息</li>\n</ul>\n<p>注意，大部分情况下，当认证器需要向依赖方证明自己可信时需要提供认证器公钥，<strong>这会触发浏览器提示，只有用户同意后认证器才会进行证明，否则认证器将不提供证明。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\" alt=\"浏览器提示\" width=\"446\" height=\"283\" class=\"aligncenter size-full wp-image-2217\"></a>\n<blockquote><p>为什么浏览器会说“安全密钥的品牌和型号”？事实上，为了避免用户通过认证器证书被跨依赖方追踪，FIDO 要求使用相同认证器证书的认证器的数量不能少于 100,000。于是大部分认证器厂商会选择<strong>让同一型号的认证器共用同一份证书。</strong>因此，浏览器的会询问用户是否同意“查看安全密钥的品牌和型号”。</p></blockquote>\n<blockquote><p>Android Safety Net 不会向用户询问是否同意，而是会静默进行证明。</p></blockquote>\n<p>当证明不为空时，依赖方收到数据后根据 <code>attestationObject.fmt</code> 的不同，需要选择不同的验证方式来验证认证器的可信情况。出于篇幅原因，这里我们不会讨论每一种 <code>fmt</code> 的验证方式，更多信息你可以查阅 <a href=\"https://www.w3.org/TR/webauthn/#defined-attestation-formats\">W3C 文档</a>。</p>\n<p>当 <code>fmt</code> 为 <code>packed</code> 时，<code>attestationObject.attStmt</code> 可能会有三种格式：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// 自证明\r\n{\r\n    alg, // 算法\r\n    sig // 签名\r\n}\r\n// 基础或证明 CA 证明\r\n{\r\n    alg,\r\n    sig,\r\n    x5c // X.509 证书链\r\n}\r\n// 椭圆曲线证明\r\n{\r\n    alg,\r\n    sig,\r\n    ecdaaKeyId // ECDAA-Issuer 公钥标识符\r\n}</pre>\n<p>此时，依赖方需要检查证书符合预期格式并检查证书是否在可信链上。首先，如果证明中既没有 <code>ecdaaKeyId</code> 也没有 <code>x5c</code>，就说明这个证明使用的是自证明，只需使用认证器提供的公钥验证即可；如果有 <code>x5c</code>，那么就需要验证 <code>x5c</code> 中的证书是否在可信链上。将 <code>x5c</code> 中的每个证书以 Base64 编码，按 64 个字符切开，并在头尾加上 <code>-----BEGIN CERTIFICATE-----</code> 和 <code>-----END CERTIFICATE-----</code>就能得到一个证书字符串了。之后，依赖方需要验证证书是否可信。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function base64ToPem(b64cert){\r\n    let pemcert = '';\r\n    for(let i = 0; i \n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>至于 <code>ecdaaKeyId</code>，由于目前应用较少，处理方法可能需要你另寻资料了。检查证书的具体步骤已经超出了本文的范围，具体可以查阅<a href=\"https://medium.com/@herrjemand/verifying-fido2-packed-attestation-a067a9b2facd\">这篇文章</a>（英文）。</p>\n<blockquote><p>你可以在 <a href=\"https://fidoalliance.org/metadata/\">FIDO Metadata Service</a> 找到各大厂商认证器的可信证书链。</p></blockquote>\n<p>当在 Android 上调起 WebAuthn 时，大部分情况下 <code>fmt</code> 将会为 <code>safety-net</code>。此时 <code>attestationObject.attStmt</code> 的结构会是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    ver: \"200616037\",\r\n    response: {\r\n        type: \"Buffer\",\r\n        data: [101, 121, 74, 104, 98, ..., 115, 104, 104, 82, 65]\r\n    }\r\n}</pre>\n<p>此时，<code>clientDataJSON</code> 中还会出现 <code>androidPackageName</code> 键，值是调起 WebAuthn 验证的应用的包名，如 Chrome 就是 \"com.android.chrome\"。</p>\n<p>在这个证明中，<code>data</code> 其实是一个 JWT 字符串，我们可以将它编码为字符串并将其按照 JWT 进行解码（别忘了验证 JWT 签名）。最终我们会得到一个类似这样的 Payload：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    nonce: \"0QAurN4F9wik6GEkblDJhGuf4kuaqZn5zaaxlvD1hlA=\",\r\n    timestampMs: 1584950686460,\r\n    apkPackageName: \"com.google.android.gms\",\r\n    apkDigestSha256: \"2BQHno+bmWWwdLUYylS8HLt5ESJzci3nt2uui71ojyE=\",\r\n    ctsProfileMatch: true,\r\n    apkCertificateDigestSha256: [\r\n        \"8P1sW0EPicslw7UzRsiXL64w+O50Ed+RBICtay2g24M=\"\r\n    ],\r\n    basicIntegrity: true,\r\n    evaluationType: \"BASIC\"\r\n}</pre>\n<p>其中包含了有关设备状态的一些信息。比如说，如果 <code>ctsProfileMatch</code> 为 <code>false</code>，那么该设备很有可能被 root 了。对于高安全要求的场景，我们可以视情况进行验证。</p>\n<p>同时我们可以在 JWT Header 中验证证明的有效性。我们应该能取得这样的 Header：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    alg: \"RS256\",\r\n    x5c: [\r\n        \"MIIFkzCCBHugAwIBAgIR...uvlyjOwAzXuMu7M+PWRc\",\r\n        \"MIIESjCCAzKgAwIBAgIN...UK4v4ZUN80atnZz1yg==\"\r\n    ]\r\n}</pre>\n<p>这里的结构就和上方的 <code>x5c</code> 验证类似了。具体步骤可以参考<a href=\"https://medium.com/@herrjemand/verifying-fido2-safetynet-attestation-bd261ce1978d\">这篇文章</a>（英文）。</p>\n<p>其他所有格式的验证方式也都可以在<a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">这篇文章</a>（英文）中找到。<span></span></p>\n<h2>无用户名登录</h2>\n<p>认证器已经代替了密码，可是这还不够！在进行第一因素认证（即使用 WebAuthn 登录）时，我们还是需要输入用户名，然后才能进行身份认证。懒惰是第一生产力，我们能不能不输入用户名就进行身份认证呢？实际上，大部分认证器都允许我们无用户名登录。<strong>而这一特性的核心就是 Resident Key 客户端密钥驻留。</strong></p>\n<p>你可以思考一下，为什么普通的 WebAuthn 为什么不能实现无用户名登录？事实上，大部分认证器为了实现无限对公私钥，会将私钥通过 Key Warp 等技术加密后包含在凭证 ID 中发送给依赖方，这样认证器本身就不用存储任何信息。不过，这就导致需要身份认证时，依赖方必须通过用户名找到对应的凭证 ID，将其发送给认证器以供其算出私钥。</p>\n<blockquote><p>Yubikey 实现了一个基于 HMAC 的算法，认证器可以在私钥不离开认证器的前提下（常规的 Key Warp 算法中实际上私钥离开了认证器）通过一些输入和凭证 ID 重新计算私钥，你可以阅读<a href=\"https://www.yubico.com/blog/yubicos-u2f-key-wrapping/\">这篇文章</a>了解更多。</p></blockquote>\n<blockquote><p>客户端通过凭证 ID 查找对应认证器的算法根据系统的不同是不同的。通常凭证 ID 中会包含认证器信息，因此系统可以通过凭证 ID 找到对应的认证器。</p></blockquote>\n<p>要避免输入用户名，我们可以要求认证器将私钥在自己的内存中也存储一份。这样，依赖方无需提供凭证 ID，认证器就可以通过依赖方 ID 找到所需的私钥并签名公钥。以下是具体流程：</p>\n<p>注册时：</p>\n<ol>\n<li>依赖方请求新建凭证，同时要求启用客户端密钥</li>\n<li>认证器生成一对公私钥，并将私钥存储在永久内存中且与依赖方 ID 及用户 ID 绑定，随后将公钥发送给依赖方以供存储</li>\n<li>依赖方将用户 ID 即公钥与用户绑定</li>\n</ol><p>验证时：</p>\n<ol>\n<li>依赖方请求验证，但不必提供除依赖方 ID 以外的更多信息</li>\n<li>用户选择认证器</li>\n<li>认证器根据依赖方 ID 找到对应私钥</li>\n<li>如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录</li>\n<li>确定私钥后，认证器签名挑战并将其返回，同时返回用户 ID</li>\n<li>依赖方通过用户 ID 找到对应用户并用对应公钥检查签名，正确则允许对应用户登录</li>\n</ol><blockquote><p>可以看到，这个特性同时要求认证器存储用户 ID，即上面提到过的 <code>userHandle</code>。依赖方需要根据此信息找到对应用户，因此不支持 <code>userHandle</code> 的 U2F 认证器无法进行无用户名登录。</p></blockquote>\n<blockquote><p>如之前所说，<strong>认证器能永久存储的私钥数量是有限的</strong>，因此只应在真正需要无用户名登录的时候启用此特性。</p></blockquote>\n<blockquote><p>目前暂时没有办法检测认证器是否支持客户端密钥驻留，因此在无用户名验证失败时应 fallback 至常规的 WebAuthn 验证，即向用户询问用户名。</p></blockquote>\n<p>现在让我们来看看如何实现这一特性吧。首先，调用 <code>navigator.credentials.create()</code> 时我们需要注意两个参数：<code>requireResidentKey</code> 必须为 <code>true</code>，<code>userVerification</code> 必须为 \"required\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"5-6\">navigator.credentials.create({\r\n    publicKey: {\r\n        ...\r\n        authenticatorSelection: {\r\n            requireResidentKey: true,\r\n            userVerification: \"required\"\r\n            ...\r\n        },\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Windows Hello <strong>似乎</strong>会存储所有已注册的凭据，因此无论是否指定 <code>requireResidentKey</code>，你都可以通过 Windows Hello 进行无用户名登录。</p></blockquote>\n<p>随后，浏览器会询问用户是否允许认证器存储私钥。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\" alt=\"浏览器提示\" width=\"445\" height=\"285\" class=\"aligncenter size-full wp-image-2208\"></a>\n<p>如果用户同意，认证器会存储私钥，并和普通的 WebAuthn 一样返回信息。不过，依赖方收到数据之后，只需将公钥、用户 ID 与用户关联起来，而不必再将凭证 ID 与用户关联起来。至此注册完成。</p>\n<p>之后，在用户请求登录时，无需再向依赖方提供用户名。同时在传入 <code>navigator.credentials.get()</code> 的参数中也有两个需要注意：<code>userVerification</code> 必须为 \"required\"，同时 <code>allowCredentials</code> 必须为空。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"4-5\">navigator.credentials.get({\r\n    publicKey: {\r\n        ...\r\n        userVerification: \"required\",\r\n        allowCredentials: [],\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Android 暂不支持无用户名验证，空的 <code>allowCredentials</code> 会导致浏览器返回 <code>NotSupportedError</code> 错误。</p></blockquote>\n<p>此时，认证器会根据依赖方 ID 找到对应的私钥。如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录。用户选择后，认证器就会使用对应的私钥签名挑战并将其返回。此时，<code>userHandle</code> 一定不为空。</p>\n<p>依赖方收到数据后，需要将 <code>userHandle</code> 作为用户 ID 找到对应的用户，并使用对应的公钥验证签名。如果验证成功，则认为对应的用户身份认证成功，依赖方可以允许其登录。至此验证结束。</p>\n<blockquote><p>有的时候你可能会需要清除认证器中的密钥。绝大多数认证器都提供了对应的软件以供清除存储的密钥，但大部分情况下这会重置整个认证器，这意味着相关认证器此前的所有凭证均会失效。因此建议不要将日常使用的认证器作为开发测试用的认证器。</p></blockquote>\n<h2>从 U2F 认证迁移</h2>\n<p>如果你的服务此前提供了 U2F 第二因素认证，你可能会希望在将依赖方从 U2F 升级到 WebAuthn 时用户此前注册的 U2F 认证器仍然可用而无需重新注册。由于 WebAuthn 向后兼容 U2F 设备，用户是可以继续使用原有的 U2F 认证器的。不过，由于 WebAuthn 的依赖方 ID 与 U2F 的 <code>appid</code> 并不一定相同，你需要将原有的 U2F <code>appid</code> 随 WebAuthn 流程一起传递给认证器，认证器才能使用正确的私钥进行响应。</p>\n<p>要实现这一点，我们只需要在注册及认证仪式中使用 WebAuthn 的 <code>appid</code> 扩展。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    appid: \"https://example.com\" //U2F appid\r\n}</pre>\n<p>此时认证器便可以得到正确的私钥，之后的流程与正常情况一致；依赖方除了正常的 WebAuthn 流程外，不需要再做任何其它操作。</p>\n<h2>拓展阅读</h2>\n<p>我们的 WebAuthn 之旅到这里就真的结束了。不过，你仍然可以自行探究，了解更多。<strong>本文只是一个粗浅的使用指南</strong>，而被称为“Web 身份认证的未来”的 WebAuthn 的深层还要很多细节值得我们挖掘学习，不过本文不会再继续讨论了。</p>\n<p>如果你想了解更多关于 WebAuthn 的信息，最好的方法是直接阅读 <a href=\"https://www.w3.org/TR/webauthn\">W3C 规范</a>。此外，Yubico 也提供了不错的 <a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn 文档</a>。</p>\n<p>要了解更多认证器存储凭证的信息，你可以阅读<a href=\"https://duo.com/labs/tech-notes/how-security-keys-store-credentials\">这篇文章</a>（英文）。</p>\n<p>如果你想了解更多 Android Safety Net 是怎样运作的，可以观看<a href=\"https://youtu.be/8lv_9mydrjg\">这个视频</a>，并通过 <a href=\"https://developer.android.com/training/safetynet/attestation\">Google 的文档</a>了解 Android Safety Net 的更多信息。</p>\n<p>如果你想方便地调试 WebAuthn，<a href=\"https://webauthn.me/\">webauthn.me</a> 提供了一个非常直观方便的<a href=\"https://webauthn.me/debugger\">调试器</a>。</p>\n<h1>参考资料</h1>\n<p><a href=\"https://www.w3.org/TR/webauthn\">WebAuthn Level 1 规范 - W3C</a><br><a href=\"https://github.com/w3c/webauthn\">WebAuthn Level 2 草案 - W3C</a><br><a href=\"https://blog.techbridge.cc/2019/08/17/webauthn-intro/\">一起来了解Web Authentication - TechBridge 技术共笔部落格</a><br><a href=\"https://medium.com/@herrjemand/introduction-to-webauthn-api-5fd1fb46c285\">Introduction to WebAuthn API - Medium</a><br><a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">WebAuthn/FIDO2: Verifying responses - Medium</a><br><a href=\"https://obeta.me/posts/2019-03-01/WebAuthn%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8\">WebAuthn介绍与使用 - obeta</a><br><a href=\"https://webauthn.io/\">webauthn.io</a><br><a href=\"https://webauthn.guide/\">webauthn.guide</a><br><a href=\"https://webauthn.me/\">webauthn.me</a><br><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion\">Attestation and Assertion - MDN</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Authentication_API\">Web Authentication API - MDN</a>（顺便翻译了一半）<br><a href=\"https://fidoalliance.org/fido-technotes-the-truth-about-attestation/\">FIDO TechNotes: The Truth about Attestation - FIDO Alliance</a><br><a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn Developer Guide - Yubico</a><br><a href=\"https://en.wikipedia.org/wiki/WebAuthn\">WebAuthn - Wikipedia</a><br><a href=\"https://techcommunity.microsoft.com/t5/identity-standards-blog/all-about-fido2-ctap2-and-webauthn/ba-p/288910\">All about FIDO2, CTAP2 and WebAuthn - Microsoft Tech Community</a><br><a href=\"https://webauthn-doc.spomky-labs.com/\">Webauthn Framework</a><br><a href=\"https://zhuanlan.zhihu.com/p/25279015\">如何开发支持 FIDO U2F 登录的网站 - 知乎专栏</a><br></p></pre>\n","link":"https://flyhigher.top/develop/2160.html"},{"title":"NLP 找门：用朴素贝叶斯进行文本分类","date":"2020-01-29 11:39:58","description":"\n<blockquote>\n<p>有一天，神收到了一封垃圾邮件，于是世界上就有了朴素贝叶斯算法。</p>\n<footer>——我瞎编的</footer>\n</blockquote>\n<p>为什么这篇文章的标题是 NLP 找门呢？因为如果你看完了这篇文章，你就可以<strong>准备入门</strong>自然语言处理 (<strong>N</strong>atural <strong>L</strong>anguage <strong>P</strong>rocessing) 了。我会把这篇文章当作一篇彻彻底底的 NLP 入门文章来写，尽量避免“专业高端”词汇和“全是奇怪符号”的式子，这样<strong>只要你有高中数学基础</strong>，就能毫无压力地看完这篇文章，学会使用朴素贝叶斯分类算法分类文本。</p>\n<p>让我们开始吧。</p>\n<h1>所以，啥是朴素贝叶斯？</h1>\n<p>简单来说，朴素贝叶斯 (Naïve Bayes) <strong>是一个简单但高效的分类算法</strong>，在进行不复杂的文本分类时高效且拥有不低的准确度，判断垃圾邮件就是用朴素贝叶斯进行文本分类的一个经典例子。当然朴素贝叶斯分类不仅能用在 NLP 中，在许多分类问题中朴素贝叶斯也有非常好的效果，但我们今天只关注它在 NLP 中的应用。</p>\n<p>要了解朴素贝叶斯，我们要先来了解一下贝叶斯定理。</p>\n<blockquote>\n<p>每增加一个数学公式都会使读者减半。</p>\n<footer>——霍金</footer>\n</blockquote>\n<p>那么，就让我们先来看看贝叶斯定理的公式吧（笑</p>\n<p>$$P(A|B) = \\frac{P(AB)}{P(B)} = \\frac{P(B|A)P(A)}{P(B)}$$</p>\n<p>其实还是很简单的，运用高中的条件概率知识就能理解。本质上，贝叶斯定理给出了一种方法，使得我们可以在 \\(P(A|B)\\) 和 \\(P(B|A)\\) 之间互相转换，因为通常情况下它们是不一样的。</p>\n<p>要更好地理解，请考虑这样一个例子：</p>\n<blockquote><p>假设有一个学校图书馆，图书管理员正为找不到某本书而发愁。已知老师有 70% 的意愿借走这本书，而是学生的意愿是 30%，这个学校的师生比例是 1:10，那么借走这本书的人是老师的概率有多大？</p></blockquote>\n<p>设学校总人数为 \\(T\\)，我们可以很容易地写出这样的一个式子：</p>\n<p>$$\\begin{align} P &amp; = \\frac{T\\cdot\\frac{1}{11}\\cdot 70\\%}{T\\cdot\\frac{1}{11}\\cdot 70\\%+T\\cdot\\frac{10}{11}\\cdot 30\\%} \\\\ &amp; = \\frac{70\\%}{70\\%+10\\times30\\%} \\\\ &amp; = \\frac{7}{37} \\end{align}$$</p>\n<p>这就是贝叶斯定理了！等等，你可能会挠挠头，这哪里是贝叶斯了？别急，如果我们把最上面的式子换个字母的话...</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>在这里，\\(H\\) 指 Hypothesis，即假设，而 \\(E\\) 指 Evidence，即证据。这样，这个式子就很好理解了，在我们上面的例子里，借走书是证据，那么 \\(P(E)\\) 就是某个人选择借走这本书的概率；这个人是老师是假设，那么这个人是老师的概率是 \\(P(H)\\)。<strong>注意这里的概率指在学校中抽一个人是老师的概率，并不是“在借走书的前提下”这个人是老师的概率</strong>，而“在借走书的前提下”这个人是老师的概率应该是 \\(P(H|E)\\)，也正是我们要求的概率。同样地，而“这个人是老师”的前提下借走书的概率就是 \\(P(E|H)\\) 了。</p>\n<p>那么再来看看上面我们凭小学知识就列出的计算式，如果把里面的具体数据换成概率来表示的话，这个式子就会变成...</p>\n<p>$$P(H|E) = \\frac{T\\cdot P(E|H)P(H)}{T\\cdot P(E|H)P(H) + T\\cdot P(E|\\neg H)P(\\neg H)}$$</p>\n<p>好吧，这里解释一下，\\(\\neg\\) 符号表示“非”，所以 \\(P(E|\\neg H)\\) 表示在“这个人不是老师”的前提下借走书的概率。而 \\(T\\cdot P(E|H)P(H)\\) + \\(T\\cdot P(E|\\neg H)P(\\neg H)\\)，即“可能借走书的老师的数量 + 可能借走书的学生的数量”，就是“可能借走书的人的数量”了，也就是 \\(T\\cdot P(E)\\)。上下消去 \\(T\\)，我们就能得到上面的式子了。</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>这就是贝叶斯了定理。如果你还是不太清楚，可以去看看 3Blue1Brown 的<a href=\"https://www.bilibili.com/video/av84799361\">这个视频</a>，图形化的讲解会清晰很多。</p>\n<p>这里我要提一下这个式子里各部分的专有名称了（“专业高端”词汇警告），你可以不记住，直接看后面。</p>\n<ul>\n<li>\\(P(H|E)\\) 叫做 \\(H\\) 的<strong>后验概率</strong>，反之亦然</li>\n<li>\\(P(H)\\) 叫做 \\(H\\) 的<strong>先验概率</strong>，反之亦然</li>\n<li>特别地，我们把 \\(P(E|H)\\) 称作<strong>“似然值”</strong>，即 likelihood</li>\n</ul>\n<p>那什么是朴素贝叶斯呢？按上面所说的，朴素贝叶斯是一种分类算法。简单来说，朴素贝叶斯将一个对象的各个特征考虑为互相独立，然后根据这些特征的概率的乘积来判断对象所属的分类。基本原理如下：</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)} \\propto P(E|H)P(H) = P(H)\\prod_{i}P(W_i|H)$$</p>\n<p>在这里，\\(W_i\\) 指某一对象的第 \\(i\\) 个特征，对于文本分类来说，这就是一段文本中的某个单词。</p>\n<p>朴素贝叶斯之所以“朴素”，是因为它要求<strong>各个特征间是独立的</strong>，在文本分类中也就是各个单词之间互不干扰。虽然思路简单的代价是适用范围变窄，不过由于这样的简化在很多情况下已经足够了，因此实际上朴素贝叶斯的应用范围非常广。<del>你看朴素贝叶斯 <strong>N</strong>aïve <strong>B</strong>ayes 的缩写都是 NB 了，能不厉害吗（逃</del></p>\n<h1>那么，咋分类啊</h1>\n<p>看来你这下完全听懂了呢（笑），是时候看看如何在 NLP 中应用朴素贝叶斯了。和上面一样，我们用一个具体的例子来说明。我们的目标是让电脑学会分类美国共和党和民主党的演讲稿，由于两个党派的演讲风格不同，所以这样的分类在理论上是可行的。</p>\n<div class=\"wp-block-file\">\n<a href=\"https://acdn.flyhigher.top/nlp/material.zip\" download>material.zip</a><a href=\"https://acdn.flyhigher.top/nlp/material.zip\" class=\"wp-block-file__button\" download>下载</a>\n</div>\n<p>上面我们要用到的数据集，你可以下载下来一起动手玩一玩。先说一下数据集的数据结构吧，压缩包里有两个文件，<code>train.txt</code> 将会被当作训练数据集，而 <code>test.txt</code> 则会作为训练结束后的验证数据集。两个文本文件里数据的结构是类似的，就像这样：</p>\n<pre class=\"EnlighterJSRAW\">BLUE WELL I AM SO HONORED AND PERSONALLY UNKNOWNWORD TO BE HERE...\r\nRED THANK YOU . THIS IS QUITE AN INSTITUTION . IT'S GOOD TO BE...</pre>\n<p>每行都是一篇演讲稿，每行的第一个单词指明了这篇演讲稿所属的党派，<code>RED</code> 指共和党，而 <code>BLUE</code> 指民主党。所有单词和符号都已经被转为大写并由空格分隔方便处理。<code>train.txt</code> 有共和党演讲稿和民主党演讲稿各 23 篇，<code>test.txt</code> 有 6 篇共和党演讲稿，12 篇民主党演讲稿。</p>\n<p>明白了？那我们就开始吧。</p>\n<h2>捋捋思路</h2>\n<p>首先，我们需要考虑如何在文本分类中应用朴素贝叶斯。很简单，按朴素贝叶斯的思路，<strong>计算每个词在某一分类下的出现概率，然后将某篇文章的所有词的概率相乘，再乘以该分类的先验概率，就可以得到某篇文章在某一分类下的概率。</strong></p>\n<p>$$P(Class|Article) = P(Class)\\prod_{i}P(Word_i|Class)$$</p>\n<p>各个分类概率都计算完成后，概率最高的那个分类就是这篇文章可能所属的分类。这个思路的核心就是用词决定了文本风格，文本的不同类别用词会有差异，只要能量化这些差异就可以分类文本。在我们的例子中，我们可以从 <code>train.txt</code> 中统计各个词汇的出现情况，然后用 <code>test.txt</code> 中的数据按上面的算法验证我们算法的准确性。</p>\n<p>这个思路很简单也很清晰，但还有一些问题需要解决。<strong>第一，有的时候，我们的测试数据集中可能会出现一个在训练数据集中没有出现过的词语。这个时候，朴素贝叶斯的计算结果会是 0。</strong>如果我们把 0 乘进式子中，那就别想得到正常的结果了。所以，我们还需要对计算某一单词在某一分类中的式子稍加改进。使用拉普拉斯平滑，就可以避免出现概率为 0 的情况。别被名字吓到，拉普拉斯平滑是一种非常简单的平滑方法：在分子上 +1，在分母上加整个取值范围，这样就可以给整个分式加上非常微小的偏移，避免出现 0。</p>\n<p>$$\\begin{align} P(Word_i|Class) &amp; = \\frac{Word_iCountInClass}{AllWordCountInClass} \\\\ &amp; \\approx \\frac{Word_iCountInClass + 1}{AllWordCountInClass + UniqueWordCount} \\end{align}$$</p>\n<p><strong>第二，对于长文本，大部分词语在某一分类中的出现概率是远小于 1 的，加上长文本词汇量大，往往概率相乘的结果会非常小。</strong>受限于计算机处理浮点数的原理，精确处理这么小的数字是很麻烦的。幸好，运用一些简单的数学知识就可以将其转化为更精确的表达，<strong>那就是取对数。</strong></p>\n<p>首先，将概率计算结果取对数并不影响我们的计算结果。因为取对数是一个单调递增的操作，而我们计算概率只是为了排序选择概率最高的分类，因此取对数是不影响我们排序的。而把多项式取对数，等于把多项式的每一项取对数后相加。所以我们有：</p>\n<p>$$\\lg{\\Big(P(Class)\\prod_{i}P(Word_i|Class)\\Big)} = \\lg{P(Class)} + \\sum_i\\lg{P(Word_i|Class)}$$</p>\n<p>大部分情况下，在每一次取对数的时候，要取对数的数字的大小，即 \\(P(Word_i|Class)\\) 尚还在计算机能处理的范围内，<strong>因此我们可以放心地使用取对数的方法</strong>，避免计算机精度不够影响结果。</p>\n<p><strong>第三就是在某些情况下，可能会有部分词语干扰计算结果</strong>，如 and, is 这类的被大量使用的中性词。如果希望得到更好的结果，我们可以维护一个停用词表，在计算时排除停用词即可。或者，我们可以在计算完每个单词的出现数量后，排除数量最多的前 \\(N\\) 个单词，避免这些单词过多地影响计算。</p>\n<h2>写点代码</h2>\n<p>现在我们终于可以开始实战，写点代码了。我会用简单的 Python 来表达思路。好了，理一理思绪，第一步我们要做的，是统计训练数据集中的用词情况。具体来说，根据上面的思考，我们需要统计的有：</p>\n<ul>\n<li>每个单词在各分类中出现的数量</li>\n<li>各分类中的不重复词数量</li>\n</ul>\n<p>用 Python 简单表示如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\"># 读入数据过程略...\r\ndata_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ndata_blue = []\r\ndata_red = []\r\nword_count_blue = {}\r\nword_count_red = {}\r\n\r\nfor line_data in data_raw:\r\n    word_list = line_data.split(\" \") # 分隔单词\r\n    if word_list[0] == \"BLUE\":\r\n        for i in range(1,len(word_list)):\r\n            if not is_excluded(word_list[i]): # 判断是否为停用词\r\n                data_blue.append(word_list[i])\r\n                # 统计单词出现次数\r\n                word_count_blue.setdefault(word_list[i], 0)\r\n                word_count_blue[word_list[i]] += 1\r\n    elif word_list[0] == \"RED\":\r\n        # Class = red 时同理...\r\n\r\n#统计非重复词\r\nunique_words_blue = list(set(data_blue))\r\nunique_words_red = list(set(data_red))</pre>\n<p>训练过程到这里就结束了，计算机已经知道了各政党演讲的用词习惯。很简单吧？接下来我们就要使用测试数据集来测试准确度了。<strong>这里开始就涉及到朴素贝叶斯的计算了</strong>，可能会稍微复杂一点点。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">import math\r\n#读入测试数据过程略...\r\ntest_data_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ntest_data = []\r\n\r\nfor line_data in test_data_raw:\r\n    if line_data[0] == \"BLUE\":\r\n        content_data = line_data.split(\" \").pop(0)\r\n        test_data.append({\"class\": \"blue\", \"content\": content_data})\r\n    elif line_data[0] == 'RED':\r\n        # ...\r\n\r\nfor line_data in test_data:\r\n    posibility_blue = 0\r\n    for word in line_data[\"content\"]:\r\n        # 计算各单词概率，取对数后相加，使用了拉普拉斯平滑\r\n        if word in word_count_blue:\r\n            posibility_blue += math.log((word_count_blue[word]+1)/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n        else:\r\n            posibility_blue += math.log(1/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n    # 最后加上该分类概率的对数\r\n    posibility_blue += math.log(len(data_blue)/(len(data_blue)+len(data_red)))\r\n\r\n    # 计算 Red 同理...</pre>\n<p>计算完成后，我们就得到每篇演讲稿在各分类下的概率了。之后，简单的比较就能得出推断的分类：如果 \\(P(Red|Article)\\) 大于 \\(P(Blue|Article)\\)，那么这篇演讲稿就更可能是共和党的演讲稿，反之则是民主党的演讲稿。</p>\n<p>很好理解吧？那么这么简单的思路，准确性怎么样呢？对于我们的例子，这是我设置了个别停用词后的结果：</p>\n<pre class=\"EnlighterJSRAW\">+-----+-------+--------------+--------------+-------+-------+\r\n|   ID|  Class|        P(Red)|       P(Blue)|  Guess| Status|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|    1|   Blue|  -23204.68377|  -22998.67066|   Blue|      √|\r\n|    2|   Blue|  -16438.44625|  -16137.48257|   Blue|      √|\r\n|    3|   Blue|  -33468.81214|  -32567.61801|   Blue|      √|\r\n|    4|   Blue|    -8606.2193|   -8601.50426|   Blue|      √|\r\n|    5|   Blue|  -12430.97436|  -11935.70662|   Blue|      √|\r\n|    6|   Blue|  -44033.02883|  -43877.55367|   Blue|      √|\r\n|    7|   Blue|   -16947.2851|  -16758.57542|   Blue|      √|\r\n|    8|   Blue|  -26957.26997|  -26889.62444|   Blue|      √|\r\n|    9|   Blue|  -27503.73985|  -27249.21828|   Blue|      √|\r\n|   10|   Blue|   -20528.4457|   -19991.1248|   Blue|      √|\r\n|   11|   Blue|  -20337.96493|  -19860.12831|   Blue|      √|\r\n|   12|   Blue|  -28409.28489|  -28118.98017|   Blue|      √|\r\n|   13|    Red|  -13756.01015|  -14488.11751|    Red|      √|\r\n|   14|    Red|  -17221.22732|  -17710.15936|    Red|      √|\r\n|   15|    Red|  -17397.45136|  -17899.98659|    Red|      √|\r\n|   16|    Red|  -10724.69095|  -11092.77837|    Red|      √|\r\n|   17|    Red|  -10402.40027|  -10859.48681|    Red|      √|\r\n|   18|    Red|   -9371.53792|    -9669.6769|    Red|      √|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|                                      Total: 18/18, 100.0% |\r\n+-----------------------------------------------------------+</pre>\n<p><strong>100% 的准确率哦！</strong>事实上，对于我们的这个例子，就算不设置停用词，我们仍能达到 100% 的分类准确率。朴素贝叶斯分类的确很 NB 呢。</p>\n<h1>更进一步</h1>\n<p>我们的探索到这里就结束了，但如果你有兴趣，完全可以继续探索下去。我们的例子是一个非常简化的例子，在实际情况中，还有很多问题需要解决。比如，对于中文及类似语言，不存在拉丁语系的天然分词结构，而朴素贝叶斯的文本分类是基于单词的，那么<strong>中文的分词就会是个问题；</strong>再比如，对于朴素贝叶斯分类来说，<strong>词语之间的顺序是不影响分类结果的</strong>，但这就会导致“今天心情很好，但昨天不好”和“昨天心情很好，但今天不好”在朴素贝叶斯看来是一样的，要想获得更好的结果，我们必须<strong>考虑词语的顺序。</strong></p>\n<p>这些问题，今天我们就不再深究了，但你可以自己探索。比如，引入思路同样很简洁的马尔科夫链，我们就可以让计算机学会考虑词语间的顺序，不过那就会是另一个话题了。</p>\n","link":"https://flyhigher.top/develop/1989.html"},{"title":"MDx 中增强页面可访问性的细节","date":"2020-01-25 16:45:04","description":"\n<blockquote><p>这篇文章本来是打算发在 <a href=\"https://mdxblog.flyhigher.top/\">MDx Blog</a> 的，不过写到后来发现这篇文章相对来说还是有价值的，于是就将这篇文章转移到了无垠，MDx Blog 则不再发表这篇文章。</p></blockquote>\n<p>从 MDx 开发之初，增强页面的可访问性就被列为了一个重要目标。从 HTML 语义化，到 ARIA 地标，再到 <code>prefers-reduced-motion</code>，随着浏览器对于增强页面可访问性的支持功能越来越多，MDx 也在不断地更新，让更多的人都能毫无困难地浏览、查看由 MDx 渲染的网页。本文会详细说明一些 MDx 中增强页面可访问性的细节，<strong>如果你希望增强自己开发的网页的可访问性，本文可能会对你有所帮助。</strong></p>\n<h1>基础性增强</h1>\n<p>增强可访问性，最重要也是最基础的一点就是 HTML 语义化。通过使用 HTML 5 语义化标签和 ARIA Role 标签，我们可以很方便地<strong>将整个网页在语义上分为几部分，而这将有效地改善屏幕阅读器对网页的分析质量，使视力障碍用户更好地浏览网页。</strong></p>\n<h2>HTML 语义化</h2>\n<p><strong>HTML 语义化属于增强页面可访问性的基础中的基础。</strong>通过使用语义化的 HTML 标签，我们可以方便地为网页中的各部分标记功能而不影响页面样式。随着符合 HTML 5 的现代化网页成为主流，语义化标签已被很大一部分网站所支持，我也不过多赘述了。就举几个常用的“地标性”标签吧：</p>\n<ul>\n<li>\n<code>header</code> 标签标记页眉，默认样式同 <code>div</code>，不要把它和 <code>head</code> 搞混了</li>\n<li>\n<code>main</code> 标签标记页面的主要内容，默认样式同 <code>div</code>\n</li>\n<li>\n<code>article</code> 标签标记文章（在 HTML 5 中它指任何独立或可复用的文本），默认样式同 <code>div</code>\n</li>\n<li>\n<code>footer</code> 标签标记页脚，默认样式同 <code>div</code>\n</li>\n<li>\n<code>nav</code> 标签标记页面导航栏区域，默认样式同 <code>div</code>\n</li>\n<li>\n<code>aside</code> 标签标记侧栏，默认样式同 <code>div</code>\n</li>\n<li>\n<code>section</code> 标签标记“一组内容”，你可以把它看作是划定网页中一块区域的通用标签，默认样式同 <code>div</code>\n</li>\n</ul>\n<p>只要用这些标签替代 <code>div</code> 而不是无脑使用 <code>div</code> 就能提高页面的可访问性。MDx 使用了这些标签来增强页面的可访问性。</p>\n<h2>下一步，ARIA</h2>\n<p>有的时候，出于一些原因，我们没法使用语义化的 HTML 标签，或者没有合适的语义化标签来标记内容，这时候<strong>我们就需要使用 ARIA (Accessible Rich Internet Applications，可访问的富互联网应用)。</strong>ARIA 的基础用法很简单，只要在相应元素上加上 <code>role</code> 属性指定该元素的功能即可。下面是一个简单的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;div role=\"navigation\"&gt;\r\n  &lt;ul&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page A&lt;/a&gt;&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page B&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page C&lt;/a&gt;&lt;/li&gt;\r\n  &lt;/ul&gt;\r\n&lt;/div&gt;</pre>\n<p>通过 <code>role=\"navigation\"</code>，我们把一个 <code>div</code> 标记为了导航栏区域。实际上，对屏幕阅读器来说，这和 <code>nav</code> 标签在语义上是一致的。上一节中的例子都可以分别用以下 ARIA Role 表示：</p>\n<ul>\n<li><code>role=\"heading\"</code></li>\n<li><code>role=\"main\"</code></li>\n<li><code>role=\"article\"</code></li>\n<li><code>role=\"contentinfo\"</code></li>\n<li><code>role=\"navigation\"</code></li>\n<li><code>role=\"complementary\"</code></li>\n<li><code>role=\"region\"</code></li>\n</ul>\n<p>除此以外，MDx 还使用了 <code>role=\"banner\"</code> 和 <code>role=\"search\"</code> 来分别标记页面中的顶部栏和搜索表单。另外，<strong>有的时候 <code>role</code> 属性还需配合 <code>aria-*</code> 属性一同使用</strong>，具体规则比较复杂，我就不在这里赘述了，具体可参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles\">WAI-ARIA Roles - MDN</a>。</p>\n<h1>媒体查询来帮忙</h1>\n<p>CSS 的媒体查询其实是一个非常强大的特性，<strong>妥善利用其中的一些特性，我们可以在网页外观上大大增强网页的可访问性。</strong>除了已经烂大街的“对浏览器窗口大小”响应的媒体查询，我会介绍 3 个很少有网站充分利用的媒体查询。</p>\n<h2>print</h2>\n<p><code>print</code> 媒体查询其实已经“历史悠久”了，<strong>只要使用 <code>@media print {...}</code> 就可以创建只在打印页面时生效的样式。</strong>通过这种方式，我们可以让页面在打印时应用一套为打印优化的样式，增强页面在物理纸张上的可访问性。</p>\n<blockquote><p>维基百科是对打印样式做了单独适配的著名例子。</p></blockquote>\n<p><strong>由于在打印的情况下，页面已经离开了“可交互”的范围，还有分页这种在屏幕中无需考虑的问题，要让页面在物理纸张上仍能被轻松地阅读，我们需要做一些特殊的适配。</strong>直接来看一个例子吧。以下是 MDx 针对打印情况进行的一些特殊优化，样式的具体理由已经写在了注释中。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media print {\r\n    /*隐藏不必要的元素*/\r\n    header, .mdx-ad-after-article, .mdx-ad-in-article, .mdx-post-money, .page-footer-nav, .mdx-same-posts, .spanout button, .mdui-drawer, .mdui-overlay, .mdui-menu, .mdx-share-img-dialog, .mdx-share-wechat-dialog {\r\n        display: none!important;\r\n    }\r\n\r\n    /*使用下划线标记链接*/\r\n    article a {\r\n        text-decoration: underline!important;\r\n    }\r\n    /*由于纸张不可交互，在链接后显示链接到的 URL*/\r\n    article a::after {\r\n        content: \"(\" attr(href) \")\";\r\n    }\r\n\r\n    /*强制白底黑字*/\r\n    html &gt; body {\r\n        background-color: white!important;\r\n    }\r\n    article p {\r\n        color: rgba(0,0,0,.8)!important;\r\n    }\r\n\r\n    /*对于纸张上的长文章，衬线字体拥有更好的可读性。以下字体列表来自 fonts.css*/\r\n    article {\r\n        font: 13pt Georgia, \"Nimbus Roman No9 L\", \"Songti SC\", \"Noto Serif CJK SC\", \"Source Han Serif SC\", \"Source Han Serif CN\", STSong, \"AR PL New Sung\", \"AR PL SungtiL GB\", NSimSun, SimSun, \"TW\\-Sung\", \"WenQuanYi Bitmap Song\", \"AR PL UMing CN\", \"AR PL UMing HK\", \"AR PL UMing TW\", \"AR PL UMing TW MBE\", PMingLiU, MingLiU, serif!important;\r\n    }\r\n\r\n    /*除部分元素外，禁止在元素内部分页*/\r\n    * {\r\n        page-break-inside: avoid;\r\n    }\r\n    article p, article a, #comments, article {\r\n        page-break-inside: auto;\r\n    }\r\n}</pre>\n<p>MDx 自 1.9.3 版本起已经包含了对文章页的打印样式优化。可以很容易地看出，优化后的样式在物理纸张上将更容易阅读。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\" alt=\"\" width=\"1345\" height=\"1602\" class=\"aligncenter size-full wp-image-1959\"></a>\n<h2>prefers-color-scheme</h2>\n<p><code>prefers-color-scheme</code> 是最近才被浏览器广泛支持的一个媒体查询，但它的功能却很强大：<strong>响应系统级黑暗模式。</strong>这样，我们可以在开启黑暗模式的系统中让网页具有更好的可读性。不过由于这个媒体查询直到最近才被广泛支持，因此大部分网站对此并没有进行适配。</p>\n<blockquote><p>一些适配这一特性的网站：少数派、微信公众平台（文章页）等。</p></blockquote>\n<p>通过像这样的媒体查询，我们可以在系统启用黑暗模式时让页面实时响应：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    body {\r\n        background-color: #212121;\r\n        color: rgba(255, 255, 255, .7);\r\n    }\r\n}</pre>\n<p><code>prefers-color-scheme</code> 一共有 3 个可能值：<code>no-preference</code>, <code>light</code> 和 <code>dark</code>。你也可以不像上面的例子那样默认使用亮色样式并在黑暗模式下启用黑暗样式，而可以反过来将黑暗样式作为默认，用亮色样式覆盖。在不支持的浏览器上将会显示默认样式（即媒体查询不会生效）。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<h2>prefers-reduced-motion</h2>\n<p>看名字就猜得出，<code>prefers-reduced-motion</code> 是和 <code>prefers-color-scheme</code> 师出同门的媒体查询。因此，和 <code>prefers-color-scheme</code> 一样，它也是在最近才获得了浏览器的广泛支持。它的作用也很强大：<strong>响应系统的“减弱动态效果”模式。</strong>这对某些不喜欢甚至无法接受动画的用户可能很有帮助。要知道，对有些用户来说这甚至是医疗上的必要。使用如下的媒体查询，我们可以在系统启用减弱动态效果模式时让页面实时响应，减弱动画：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-reduced-motion: reduce) {\r\n    /*只是一个示例，实际情况中可以保留一些淡入淡出效果*/\r\n    * {\r\n        transition: all 0s!important;\r\n        transform: none!important;\r\n    }\r\n}</pre>\n<p><code>prefers-reduced-motion</code> 只有 2 个可能值：<code>no-preference</code> 和 <code>reduce</code>，在不支持的浏览器上该媒体查询不会生效。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\" alt=\"\" width=\"792\" height=\"515\" class=\"aligncenter size-full wp-image-1962\"></a>\n<h1>黑暗模式适配</h1>\n<p>黑暗模式可不是简单地切换到黑底白字这么简单。<strong>单纯地使用黑底白字会导致页面元素之间对比度过高，文字刺眼，反而降低了页面的可访问性。</strong>我在下面总结了几条应用在了 MDx 中的黑暗模式优化规则和 Google 推荐的优化规则：</p>\n<p><strong>一是避免黑底白字。</strong>黑底白字看起来真的很难受，事实上，深灰和浅灰是黑暗模式最好的配色。比较下方例子里的两段文本，毫无疑问深灰色背景和浅灰色文字搭配的样式的可读性要比黑底白字高很多。（p.s. 有时候这条规则在白底黑字时也适用）</p>\n<p><strong>二是更改部分元素的亮度和对比度以增强可读性。</strong>你可能已经注意到了，下面优化的例子里标题文字的颜色改变了。很明显，未优化的黑暗模式中标题可读性不如优化的版本。在实际中，我们通常可以通过 CSS 滤镜来实现这一更改。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    h1 {\r\n        /*反相颜色后再将色相旋转 180 度，使亮度反相*/\r\n        filter: invert(1) hue-rotate(180deg);\r\n    }\r\n}</pre>\n<p><strong>三是避免让图片过亮。</strong>未经处理的图片通常会导致过高的对比度，降低可读性。在 MDx 中，我选择降低图片的亮度来避免图片刺眼，而 Google 的建议则是使图片灰度，不过这会影响图片的整体观感。无论是哪一种方案，都可以使用 CSS 滤镜来轻松实现。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    img { \r\n        /*MDx 方案*/\r\n        filter: brightness(.8);\r\n        /*Google 方案*/\r\n        filter: grayscale(.5);\r\n    }\r\n}</pre>\n<div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是未优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是经过优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n</div>\n<h1>其他细节</h1>\n<p>还有一些细节，虽然简单，但不可或缺。我把一部分没有在上文提到的 MDx 中的细节列在了这里。</p>\n<p><strong>一是允许页面缩放。</strong>在开发响应式页面时，很多网站会在页面头部添加这样一个 <code>meta</code>：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"&gt;</pre>\n<p>这样的 <code>meta</code> 设定了页面的宽度，却也固定了页面的缩放比例，用户难以手动放大网页。<strong>这样的设置对一部分视力障碍用户非常不友好</strong>，以至于苹果决定在自家的浏览器上忽略禁止缩放的 <code>meta</code>。按照 Google 的推荐，如果你在 MDx 设置中启用了“允许页面缩放”，那么 MDx 会输出这样的 <code>meta</code> 标签，允许页面进行五倍以内的缩放：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=5\"&gt;</pre>\n<p><strong>尽管很多时候放大页面会导致页面结构被破坏，但这大大增强了页面的可访问性，利大于弊。</strong>因此，在 MDx 中，“允许页面缩放”是默认启用的。</p>\n<p><strong>二是在跨设备阅读时同步阅读记录。</strong>这属于 MDx 的“元老级”功能之一。注意到页面右上角的那个“在其他设备上继续阅读”的按钮了吗？如果你滚动页面后重新点击它，你会发现二维码发生变化了。通过在二维码中记录阅读进度，用户在扫描二维码切换设备阅读时，MDx 在新设备上会自动滚动到和原设备上一致的位置——好吧，目前基于百分比的算法在某些情况下可能不太准，但我已经设计了一个更复杂但更精确的阅读进度记录算法，之后就会更新到 MDx 中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\" alt=\"\" width=\"1000\" height=\"574\" class=\"aligncenter size-full wp-image-1976\"></a>\n<p><strong>三是避免 Web 字体阻塞渲染。</strong>如果你在页面中使用了 Web 字体，在字体加载完成之前，浏览器可能不会渲染任何文本，这就导致用户可能需要等待一段时间才能开始浏览网页。Google 推荐使用 <code>font-display: swap;</code> 来向浏览器指定网页的 Web 字体渲染策略。这一规则会提供一个比较短的等待周期，如果在这段时间内 Web 字体没有完成加载，那么浏览器会以 fallback 字体渲染文本。任意时刻一旦 Web 字体完成渲染，浏览器就会使用 Web 字体重新渲染文本。这在大多数情况下都能满足可访问性的需求。</p>\n<p><strong>四是确保 html 元素具有合适的 <code>lang</code> 属性。</strong>这一属性声明了页面的主要语言，浏览器可以据此调整渲染策略，或者触发自动翻译；屏幕阅读器也能更好地阅读网页。</p>\n<p><strong>五是确保页面主要内容在丢失/禁用了 Javascript 甚至 CSS 的情况下仍然可用。</strong>作为一个以内容为主的网站，MDx 在禁用了 Javascript 的情况下页面主要内容仍然可用。这不只是为了 SEO，更是为了保证页面的可访问性。的确，目前的情况下，如果开启了 Lazyload，MDx 在禁用 Javascript 的情况下图片的确无法显示，但我会在后续版本中尽可能的优化这一问题。</p>\n<h1>附录：媒体查询开发技巧</h1>\n<p>有的时候，光有 CSS 响应媒体查询还不够，我们可能需要在 Javascript 中实时响应媒体查询。用如下代码就可以很简单地响应媒体查询：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let mql = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\r\nmql.addListener(handleMediaChange);\r\n\r\n//在添加监听后先调用一次，获得当前查询结果\r\nhandleMediaChange(mql);\r\n\r\nfunction handleMediaChange(mql){\r\n    if(mql.matches){\r\n        //查询匹配\r\n    }else{\r\n        //查询不匹配\r\n    }\r\n}</pre>\n<p>在开发上述媒体查询的过程中，我们需要频繁地切换系统的相应模式或者调出打印窗口。<strong>实际上，Chrome 提供了更简单的调试方法：</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1946\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\" alt=\"\" width=\"723\" height=\"681\"></a>\n<p>只要在这里更改模式，相关媒体查询就能实时生效。这不会影响其他标签页，在关闭开发者工具之后也会自动恢复系统设置。</p>\n","link":"https://flyhigher.top/develop/1912.html"},{"title":"MDx Blog 现已随 MDx 1.9.5 发布","date":"2020-01-22 17:54:11","description":"<p>随着 MDx 发布 1.9.5 更新，<a href=\"https://mdxblog.flyhigher.top/\" rel=\"noopener noreferrer\" target=\"_blank\">MDx Blog</a> 现已建立。我将会在 MDx Blog 中分享一些开发故事并发布 MDx 更新日志。</p>","link":"https://flyhigher.top/diary/1905.html"},{"title":"GitHub 2019 统计无垠版","date":"2020-01-12 13:02:00","description":"\n<h1>缘起</h1>\n<p>2019 年底，我突发奇想想要自己统计一番 GitHub 上存储库的一些信息。尽管 GitHub 有自己的<a href=\"https://octoverse.github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">年度统计</a>，我还是想试着自己爬取一下，说不定能挖出什么有意思的信息，何况这是我第一次有机会处理比较大量的数据，也算是一种学习的过程吧。于是花了一下午写了个简单的爬虫（时间都花在增加 Rate Limit 上了...），然后扔在了两台服务器上开始跑（GitHub  API 真是好文明）。</p>\n<p>从 2019.11.21 3 时到 2020.1.12 24 时的 52 天 21 小时内，我的爬虫一共爬取了<strong>与 2,024,705 个用户有关<sup>*</sup>的 14,651,923 个公共存储库的基础信息</strong>，平均每秒爬取 3.2 个存储库。据 GitHub 的官方数据计算，我爬取了大约 15% 的存储库信息，但由于封禁库和私有库的数量未知，我暂时无法确定我爬取的存储库占公共库的比例。同时由于存储库数量较多，基本可以认为爬取到的样本在时间尺度上已经足够随机，可以通过统计得出一般结论。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\" alt=\"\" width=\"700\" height=\"606\" class=\"aligncenter size-full wp-image-1892\"></a>\n<p>爬到自己了，合影.jpg</p>\n<p>那么下面就来看看统计出来的一些结果吧。爬虫的技术细节和数据集下载放在文末。</p>\n<p>* 指这些用户拥有至少一个库</p>\n<h1>统计信息</h1>\n<p><strong>以下统计结果均基于已放于文末的数据集。</strong>由于爬虫爬取的时间跨度长，加上我并没有完整爬取 GitHub 所有存储库，因此我<strong>不能保证以下统计结果符合真实情况</strong>，各位可以下载数据集或自行爬取进行验证。</p>\n<h2>一些数据</h2>\n<div>\n<div>\n<div>\n<span>3,120,930</span><br>总爬取用户数</div>\n<div>\n<span>44.7%</span><br>的存储库创建<br>自 Fork</div>\n<div>\n<span>6.59%</span><br>的账户被删除或<br>封禁<sup>1</sup>\n</div>\n<div>\n<span>23,913</span><br>单用户拥有最大<br>库数量<sup>2</sup>\n</div>\n</div>\n</div>\n<p><sup>1</sup> 基于用户 ID 规律合理推断<br><sup>2</sup> 统计范围仅限于当前数据集</p>\n<p>比较出乎我意料的是创建自 Fork 的存储库的占比。我预估这样的存储库占比不会太低，但没有想到能接近一半。此外单用户拥有最大库数量也大大超出了我的预期，<a href=\"https://github.com/pombredanne\" rel=\"noopener noreferrer\" target=\"_blank\">pombredanne</a> 这个用户名下拥有将近 24k 的存储库，不过绝大多数都是 Fork 来的，在情理之中。此外<strong>这个数据集中</strong>拥有最多存储库的账户其实是一个组织 <a href=\"https://github.com/gitpan\" rel=\"noopener noreferrer\" target=\"_blank\">gitpan</a>，这个组织拥有 36,377 个存储库。</p>\n<h2>语言</h2>\n<p><canvas></canvas><br>\n首先必须要说明的是，在这个榜单中我<strong>排除了 HTML 和 CSS</strong>，因为在严格意义上它们不属于“编程语言”。如果把它们计算进来的话，分别有 640,368 个和 361,425 个存储库的主要语言分别是 HTML 和 CSS，这样在这份榜单中它们可以排到第 6 和 第 10 名。JavaScript 毫无疑问获得第一，第二名 Python 的热度则和 JavaScript 相差将近一半。<strong>此外还有 2,448,486 个存储库未能识别出语言，占比 16.7%。</strong>在上面的榜单之外，与机器学习和数据科学相关的语言还有 Jupyter Notebook 排名第 13，R 排名 20，Julia 排名 43。</p>\n<p>说实话这份排名和 GitHub 官方的排名<strong>差别很大</strong>，除了前三名，后面的基本都不太一样。我的排名统计结果完全基于 GitHub 对于存储库的主要语言识别，加上我的存储库数据不完整，和官方的数据不同是很正常的，可以做一个参考，但大概率还是官方排名更加准确。</p>\n<h2>许可证</h2>\n<p><canvas></canvas></p>\n<p>自 GitHub 推出许可证功能以来，拥有许可证的存储库比例升升降降，却始终没有超过一半。<strong>选择一个合适的许可证对项目的良好发展真的很有帮助</strong>，要了解如何选择合适的许可证，请参阅<a href=\"https://www.runoob.com/w3cnote/open-source-license.html\" rel=\"noopener noreferrer\" target=\"_blank\">这篇文章</a>。</p>\n<p><canvas></canvas></p>\n<p>对于拥有许可证的存储库，MIT<del> 麻省理工许可证 </del>总是占比最大的；第二则是 Apache-2.0 许可证。此外，WTFPL 许可证也挤入了前 15 名。</p>\n<h2>星标</h2>\n<p><canvas></canvas><br>\nStar 数量毫无疑问是一个存储库受欢迎程度的体现，而 Star 数高的项目基本上大家都了解过。<strong>截至爬取结束时间</strong>，GitHub 中 Star 数最多的库是 <a href=\"https://github.com/freeCodeCamp/freeCodeCamp\" rel=\"noopener noreferrer\" target=\"_blank\">freeCodeCamp</a> <del>非常完美的驼峰命名法</del>，其次则是著名项目 <a href=\"https://github.com/996icu/996.ICU\" rel=\"noopener noreferrer\" target=\"_blank\">996.ICU</a>。<a href=\"https://github.com/vuejs/vue\" rel=\"noopener noreferrer\" target=\"_blank\">Vue</a> 现在的 Star 数已经稳压 <a href=\"https://github.com/facebook/react\" rel=\"noopener noreferrer\" target=\"_blank\">React</a> 一头，Vue YES! 此外 <a href=\"https://github.com/sindresorhus/awesome\" rel=\"noopener noreferrer\" target=\"_blank\">awesome</a> 也挤进第七名。<br><canvas></canvas><br>\n由于 Star 需要时间积累，新项目的 Star 数量很可能是比不过老项目的，这就会导致有实力的新项目无法出现在榜单中。因此我还统计了日均 Star 数，试图通过日均 Star 数来反映项目受欢迎的程度。<strong>由于正热门的项目会比老牌热门项目有优势，这一项的统计范围是 2020-01-01 之前的所有存储库。</strong>996.ICU 和 freeCodeCamp 再次出现在前 10 名，而最近的热门项目 <a href=\"https://github.com/wenyan-lang/wenyan\" rel=\"noopener noreferrer\" target=\"_blank\">wenyan</a> 则飙升至第 2 名。此外还有 <a href=\"https://github.com/menzi11/BullshitGenerator\" rel=\"noopener noreferrer\" target=\"_blank\">BullshitGenerator</a>，即最近热门的“狗屁不通文章生成器”和 <a href=\"https://github.com/evil-huawei/evil-huawei\" rel=\"noopener noreferrer\" target=\"_blank\">evil-huawei</a> 分列第 3 和第 5 名。<br><canvas></canvas><br>\n说实话这个曲线<strong>比我预估的陡多了。</strong>你可能已经注意到了，这个图表的横轴不是均匀缩放的，实际上曲线要比看起来陡很多。同时受爬取方式的影响，GitHub 中 Star 数较少的存储库数量远比我爬取到的多。也就是说，<strong>实际情况下曲线远比这个图表上的陡。</strong>拿点 Star 不容易啊。</p>\n<h2>名称</h2>\n<p><canvas></canvas><br>\n终于知道了原来存储库的名称是有长度限制的...尽管最长有 100 位，<strong>大部分人还是喜欢 8 位长的存储库名。</strong>此外 1 位长的名称也比我预估的要多一些。举几个存储库名称长度为 100 的例子吧。</p>\n<ul>\n<li>testing-something-elsetesting-something-elsetesting-something-elsetesting-something-elsetesting-some</li>\n<li>acts_as_validated_config_so_app_will_not_run_in_random_situation_and_qa_gays_will_not_cry_to_you_whe</li>\n<li>............................................________-....................................-.---......</li>\n<li>----------------------------------------------------------------------------------------------------</li>\n<li>nyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyan</li>\n</ul>\n<p>...创造力有够丰富的。</p>\n<p><canvas></canvas></p>\n<p>最近 GitHub 上有一种奇怪的风气，那就是建立 Awesome 合集<del>骗 Star</del>。看起来 Awesome 存储库满地都是，甚至还出现了关于 Awesome 的 Awesome 合集这种迷惑行为。于是我统计了一下，<del>还好，</del>占比<del>才</del> 0.5% 不到<del>，Awesomer 们任重而道远呐</del>。</p>\n<p><canvas></canvas></p>\n<p>尽管要在 github.io 上托管网站，存储库不一定要以 .github.io 结尾，但我还是统计了一下。拥有这类存储库的用户比我预想的要少一些，看来还有很多人没有完全发挥 GitHub 的完整实力啊<del>（比如我 Doge）</del>。同时<strong>这类存储库在所有存储库中占比 1.12%</strong>，看起来不多<del>，不过至少比 Awesome 多</del>。<br><canvas></canvas><br>\n看得出来 GitHub 对于用户名长度的限制是 1-40 位。用户名最短的 27 位占据了 <code>A-Z</code> 外加 <code>-</code> 的所有可能，而用户名最长的则是一个组织 <a href=\"https://github.com/UOIT-RESEARCH-database-information-group\" rel=\"noopener noreferrer\" target=\"_blank\">UOIT-RESEARCH-database-information-group</a>。不知道是巧合还是某种规律，<strong>最受欢迎的用户名长度和存储库名称长度一样，都是 8</strong>，有点意思。</p>\n<h2>创建时间</h2>\n<p><canvas></canvas><br>\n由于我并没有完整爬取所有存储库，我只能以相对值来统计每月新增存储库数量的变化趋势。<strong>在这个图表中，我将 2017-09 的数据设为了 100%。</strong>你一定一眼就能注意到 2017 年 6,7,8 月的“一柱擎天”。<del datetime=\"2020-02-05T09:18:30+00:00\">我第一次看到这个数据的时候的确愣了一下，不过就着这条新闻看就能明白为什么了：<strong>2017 年 6 月微软收购 GitHub。</strong></del></p>\n<blockquote><p>重新确认了一下，微软收购 GitHub 比这个高峰晚了一年，目前我对这个高峰没有什么很好的解释，如果你有什么思路的话欢迎评论。</p></blockquote>\n<p><strong>需要注意的是这张图表中我排除了 Fork 存储库</strong>，因为 Fork 存储库在 API 中的创建时间是原始存储库的时间，会影响整体趋势。此外，GitHub 中还有一个创建于 2007 年 10 月 29 日的存储库，那就是 <code>id: 1</code> 的...</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"mojombo\" data-mdxgithubp=\"grit\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/mojombo/grit\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>而它的创建者正是 GitHub 的创始人之一 Tom Preston-Werner。</p>\n<h1>一些有趣的结果</h1>\n<p>当初打算自己爬的目的之一就是想看看能不能挖出什么有意思的信息，结果真的有一些不挖不知道的信息。</p>\n<h2>奇怪的存储库</h2>\n<p>在爬取到的所有存储库中，<strong>有 3 个存储库是“无主”的</strong>，即它们的 owner 属性为空。这三个存储库的基本信息如下。</p>\n<div class=\"mdui-table-fluid mdui-table-hoverable\"><table class=\"mdui-table\">\n<thead><tr>\n<th>ID</th>\n<th>名称</th>\n<th>Forked</th>\n<th>Star</th>\n<th>语言</th>\n<th>许可证</th>\n<th>创建于</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>72385291</td>\n<td>vscode-redprl</td>\n<td>否</td>\n<td>10</td>\n<td>TypeScript</td>\n<td>apache-2.0</td>\n<td>2016-10-31 08:50:01</td>\n</tr>\n<tr>\n<td>181218346</td>\n<td>electron-sys</td>\n<td>否</td>\n<td>10</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-14 03:20:56</td>\n</tr>\n<tr>\n<td>181391880</td>\n<td>node-sys</td>\n<td>否</td>\n<td>6</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-15 09:33:08</td>\n</tr>\n</tbody>\n</table></div>\n<p><strong>更奇怪的是这三个存储库“无主”的情况还不一样。</strong>第一个存储库可以通过 <code>/repositories</code> 这个 GitHub API 找到， <a href=\"https://api.github.com/repositories?since=72385290\" target=\"_blank\" rel=\"noopener noreferrer\">这个链接</a>中的第一个存储库就是它；而其余两个存储库甚至无法在 <code>/repositories</code> API 中找到。不过就算能在 API 中找到第一个存储库，它的 <code>html_url</code>，即 <code>https://github.com//vscode-redprl</code> 仍然是不可访问的。这可能是 GitHub 早期的一个 Bug 导致的，不过我仍然对爬虫是如何找到这三个存储库的以及这些 Stars 是哪里来的感到好奇。</p>\n<h2>奇怪的用户名</h2>\n<p>在爬虫爬了一段时间以后，API 中突然开始出现大量的以 fdp 开头的 18 位乱码作为用户名的用户。这些用户拥有的存储库和 starred 的存储库都为 0，而他们的 <code>html_url</code> 为 404。以下是几个例子。</p>\n<ul>\n<li>fdpEpolGCEdQX4ZlRJ</li>\n<li>fdp8XaVrdtmDZnO5pR</li>\n<li>fdp8XRAGnwAOkTr2Ya</li>\n</ul>\n<p>由于我的爬虫并没有超过 Rate Limit，所以我排除了这是污染数据的可能。我怀疑这可能是某种 Bot 账户，于是一边更新爬虫过滤掉了这些用户，一边给 GitHub 支持发邮件问了具体情况。过了两天 GitHub 回复我说这些是<strong>被自动判为可疑进而被封禁的用户</strong>（原话是 they have been flagged by our automated measures for detecting suspicious behavior）。<del>想到我正在疯狂爬取 GitHub，突然害怕.webp</del></p>\n<p>行吧。</p>\n<h1>技术细节</h1>\n<p>爬虫使用 Python3 编写，数据库使用 MySQL。爬虫共使用了 4 个 API Token，在两台服务器上分布式爬取。爬取思路为：</p>\n<ol>\n<li>通过 <code>/users</code> API 遍历用户，每个请求最多获取 30 个用户信息</li>\n<li>循环 30 个用户，分别获取 <code>/users/&lt;user_name&gt;/starred</code> 和 <code>/users/&lt;user_name&gt;/repos</code> API 中的存储库信息，每个请求最多获取 100 个存储库信息，超过 100 个的分页获取</li>\n<li>提取存储库信息，插入数据库。对于已存在的存储库，更新数据</li>\n<li>获取下 30 个用户信息</li>\n</ol>\n<p>由于爬取过程中我多次调整了爬虫逻辑，爬虫爬取到的用户 ID 区间并非连续的，具体区间为1-839586, 14800001-14885493 及 28965251-31161101。</p>\n<h1>免责声明</h1>\n<p>本站会尽可能地提供准确信息，但本站不对此文章中信息的准确性和即时性及带来的任何影响负责。</p>\n<p>本站不代表 GitHub 官方，本文仅供学习之用，请不要将本文内容直接用于任何商业项目中。</p>\n<h1>数据集下载</h1>\n<p>导出的 SQL 文件大约为 1.38GB，全部放在了 GitHub 上（在危险的边缘试探.webp</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"github-analysis-2019\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/github-analysis-2019\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>此外我也提供了 MEGA 下载，链接<a href=\"https://mega.nz/#F!juxm3A6T!7Vwpzi82W1OFrqTLu1A1pQ\">在这里</a>。</p>\n","link":"https://flyhigher.top/develop/1564.html"},{"title":"Milkice 跨年红包解谜 Writeup 及无垠跨年红包解谜答案","date":"2020-01-02 04:29:19","description":"\n<blockquote><p><del>又到了水文章的时间呢</del></p></blockquote>\n<p>先说明一下，这篇文章原本不是在计划中的，而原来说好的「在路上的两篇」文章<del>绝对不会咕</del>。我自己的红包答案本来打算直接塞在年度总结里的，结果发现稍微有些长，再加上我还花了一些时间解了<a href=\"https://milkice.me/\">奶冰</a>的红包解谜游戏，就打算把两个解谜过程放在一起单独写一篇文章。<del>真是个水文章的好理由</del>（被打死</p>\n<h1>奶<del> 子 </del>冰的红包</h1>\n<p>奶冰的红包题目比我的难多了，所以让我们先从难的开始吧。首先看一下<a href=\"https://milkice.me/2019/12/31/2019-summary/\">题目</a>：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1524\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\" alt=\"\" width=\"746\" height=\"410\"></a>\n<p>入口是 <code>happy.2020.milkice.me</code>，扔到浏览器里面表示找不到 IP，那么大概率就是 DNS 的 TXT 记录了，查一下得到 <code>nb2hi4dthixs63ljnrvwsy3ffzwwkl3tivrvezluomxxg5dsmvqw2ltqmnqxa3th</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1525\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\" alt=\"\" width=\"896\" height=\"278\"></a>\n<p>第一眼没看出来是什么编码，直觉是 BaseXX 系列的编码，加上提示“不只有 Base64”，可以推断出是 Base32，转大写解码得到 <code>https://milkice.me/sEcRets/stream.pcapng</code>。是个 URL，下载得到一个 Wireshark 文件，打开一看是和某 USB 设备的通讯抓包。<del>不会做，不做了。</del></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1526\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\" alt=\"\" width=\"1500\" height=\"813\"></a>\n<p>奶冰提示我“Google 上搜得到”，结合第二条提示搜索“wacom pcapng”找到了<a href=\"https://blogs.tunelko.com/2017/02/05/bitsctf-tom-and-jerry-50-points/\">这篇文章</a>（<del>这™就是答案啊</del>）。看起来是一样的套路，即通过解析数据得到数位板上画的内容，于是按文章的思路筛选出数位板发给主机的数据，导出，然后再用 tshark 导出文本数据。本来我想直接用文章中的 POC 的，结果折腾半天因为源的蜜汁原因库没装上，于是按文章中给出的数据结构自己写了段代码，分别导出 X、Y 轴数据扔进 Excel 画散点图。（<del>别问我为什么用 Excel，因为我手边没有更好的工具了</del>）</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1528\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\" alt=\"\" width=\"1280\" height=\"530\"></a>\n<p><span>翻车现场之一</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1539\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\" alt=\"\" width=\"1000\" height=\"286\"></a>\n<p><span>懵逼奶冰.webp</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1533\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\" alt=\"\" width=\"1500\" height=\"462\"></a>\n<p>看得出有手写文字，不过是上下颠倒的，翻转图片得 <code>https://milkice.me/2020/uso.zip</code>。是个 zip，下载打开一看，有密码。<del>不会解，不做了。</del> 第一反应是暴力解密码，但是暴力跑了 15 分钟还是没有跑出来。暴力太不优雅了，肯定不是正确思路，但奶冰什么都不肯说了。不过在这时我终于发现第一个红包口令码就藏在压缩包的注释中，Get。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1544\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\" alt=\"\" width=\"806\" height=\"593\"></a>\n<p>然而题还没解完，回去看提示，看到提供了 osu 谱面下载，于是打算不管怎么样先下载来看看。然而 osu 谱面下载要登录，只好又花了几分钟找到第三方站点，成功下载。这时候可以注意到 uso.zip 里有个同名文件（432314 Mike Greene - Bill Nye the Science Guy Theme Song (Chinese Intro).osz），可以联想到是明文攻击。好吧，上 ARCHPR，十秒解出。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1530\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\" alt=\"\" width=\"462\" height=\"643\"></a>\n<p><span>现场还原.jpg</span></p>\n<p>.osz 文件并不是明文，猜测是压缩包（和 .pptx 一个思路嘛），于是改后缀 .zip 顺利打开。然后红包口令码就藏在奶冰的 .osu 文件中了，由提示可知是明文，打开即可得到。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1542\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\" alt=\"\" width=\"457\" height=\"255\"></a>\n<h1>我的红包</h1>\n<p>相比起来<a href=\"https://flyhigher.top/diary/1464.html\">我的题目</a>就简单很多了嘛...三天时间一共发出了 25 个红包，包括一位重复领取的🌚，比前几年还是多了一些的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\" alt=\"\" width=\"500\" height=\"306\" class=\"aligncenter size-full wp-image-1554\"></a>\n<p><span>这位同学以后请不要多次领取🌚</span></p>\n<p>那么来看看答案吧。</p>\n<h2>第一阶段</h2>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>首先观察字符串，可以发现 <code>.</code> <code>/</code> <code>_</code> 等一些 ASCII 字符原样留在了字符串中，而其他字符被由 <code>=</code> 和十六进制构成的某种编码所替代。如果你正好有所了解，你应该能认出这是 Quoted-printable 编码，这是一种常用于邮件中的编码，可以用<a href=\"https://mothereff.in/quoted-printable\">这个页面</a>解码。如果你不了解，你也应该可以发现这种编码和 URL 编码非常相似。如果你把 <code>=</code> 替换为 <code>%</code>，那么你就可以用各种方法顺利地把它按 URL 编码来进行解码，最后可以得到 <code>αхtоn.іm/соdе_оf_2020_⒈mρз</code>。这个字符串里大部分字符都不是 ASCII 字符，只是长得像而已。根据第一个提示“全是 ASCII 字符”，按样子把字符串用 ASCII 字符抄一遍，可以得到最终 URL 为 <code>axton.im/code_of_2020_1.mp3</code>。</p>\n<h2>第二阶段</h2>\n<p>下载音频，可以听出音频是经过某种处理的白噪音。白噪音的特点是各频段的功率都均匀分布，在白噪音上做文章，很容易就可以联想到线索藏在频谱中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1534\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\" alt=\"\" width=\"1200\" height=\"719\"></a>\n<p>频谱被处理成了 24x3 的网格，结合第二条提示“24x3，横向读取”可以推断出是将频谱当作二进制读取，得到 <code>01111001 01110010 01100011 00101110 01101101 01100101 00101111 00110010 00110000</code>，转为 ASCII 字符可得 <code>yrc.me/20</code>。</p>\n<h2>第三阶段</h2>\n<p>打开上一步得到的页面，提示要求输入十位数密码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1536\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\" alt=\"\" width=\"663\" height=\"460\"></a>\n<p>如果你在上一步注意到了这个音频文件奇怪的属性，你可以反应过来这里的密码就是 <code>2000202020</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1537\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\" alt=\"\" width=\"421\" height=\"651\"></a>\n<p>如果你没有注意到，查看页面代码可以看到一条注释 <code>&lt;!-- Tips: the attribute of the audio --&gt;</code> 将你引导向音频文件的属性。输入密码，解锁即可进入下一步。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1535\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\" alt=\"\" width=\"397\" height=\"223\"></a>\n<h2>第四阶段</h2>\n<p>可以看到是一张图片，内容为“<del>.JPG</del>”和“.ZIP”。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter size-large wp-image-1532\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n<p>和去年一样的套路，下载图片，将后缀名改为 .zip 然后打开，可以看到 README.txt。</p>\n<h2>最后一步</h2>\n<p>查看 README.txt 的内容，可以了解到需要去 🤔.axton.cc 获取红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1538\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\" alt=\"\" width=\"1131\" height=\"278\"></a>\n<p>扔到浏览器里会出现奶冰同款找不到 IP，于是可以联想到 TXT 记录。唯一的问题是 🤔 这个 Emoji 需要如何处理。域名使用 Punycode 将 Unicode 字符转换为 ASCII 字符，特点是以 <code>xn--</code> 开头。如果你把上面这个域名扔进浏览器，你会发现它变成了 <code>xn--wp9h.axton.cc</code>。然后查询 TXT 记录，即可得到红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1527\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\" alt=\"\" width=\"804\" height=\"557\"></a>\n","link":"https://flyhigher.top/develop/1519.html"},{"title":"无垠 2019 年度总结","date":"2019-12-29 12:25:52","description":"\n<p>又是时间飞快的一年...写 2018 总结的情景似乎还在眼前，转眼居然已经到 2019 年末了。</p>\n<p>2019 年，发生了太多事情，包括真的转折了人生的高考，这也导致我博客更新的不多（难以置信居然才更了两篇...），不过两篇技术性文章已经在路上了，可以期待一下。</p>\n<p>2019 年我也学了不少东西（单指技术方面），比如终于认真学了 Vue（但是还要练手）。书买了一大堆，看完的倒是没几本orz</p>\n<p>呼，好吧，是时候回顾一下充满坎坷的这一年了。2019 年还剩下最后两天，希望 2020 年，我能做得更好。</p>\n<h1>一些数据</h1>\n<p>照惯例先来看看一些数据吧。今年是统计系统完整统计了的第二年，终于可以和去年的数据比较一下了。以下数据的统计范围是 2019年1月1日0时至 2019年12月29日20时。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 26,901 (<span>+4%</span>)，年 PV 76,583 (<span>+3%</span>)，日均 UV 73.7，平均停留时间 5分13秒 (<span>-13.8%</span>)，平均跳出率 53% (<span>+20.5%</span>)。一年有效文章数 2 (<span>-50%</span>)，新增评论 439 条。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\" alt=\"\" width=\"1000\" height=\"1143\" class=\"aligncenter size-full wp-image-1511\"></a>\n<p>有趣的是今年文章数腰斩，访问数反而小有提升。<del>如果我哪天不更新了，访问数是不是可以无限大呢？</del></p>\n<p>今年博客最大的改动就是把整体风格切换到了 Material Design 2（当然这是 <a href=\"https://flyhigher.top/develop/788.html\">MDx</a> 中的可选功能，给自己打个广告2333），此外还有比较失败的 WebP 改造计划，因为和缓存冲突已经回滚了。<a href=\"https://flyhigher.top/develop/1245.html\">ABS 系统</a>进展不大，主要是真的没有太多时间，还是要再学习一个。</p>\n<h2>个人主页</h2>\n<p>虽然个人主页的 TODO List 列了老长，但今年完全没有更新，也没有推广，从今年 8 月底开始还莫名被某墙认证了，直到 11 月底才恢复，于是今年总访问量比去年少了很多，</p>\n<p>有多少呢？这么少：总 UV 2,141 (<span>-65.9%</span>)，总 PV 2,744 (<span>-66.6%</span>)，日均 UV 6 (<span>-65.9%</span>)，平均停留时间 62秒 (<span>+19.2%</span>)。主要来源是知乎和 V2EX，还有一些甚至是从微信来的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\" alt=\"\" width=\"1000\" height=\"1103\" class=\"aligncenter size-full wp-image-1512\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 8 次，新增 171 commits，2 种语言的翻译，Star 数增加了 175，现有 408。感谢所有人的支持，尤其是 <a href=\"https://github.com/Sn0bzy\" rel=\"noopener noreferrer\" target=\"_blank\">Hasan CAN</a>, <a href=\"https://github.com/yechs\" rel=\"noopener noreferrer\" target=\"_blank\">Ye Shu</a>, <a href=\"https://github.com/StarryLeo\" rel=\"noopener noreferrer\" target=\"_blank\">StarryLeo</a>, <a href=\"https://github.com/DCTewi\" rel=\"noopener noreferrer\" target=\"_blank\">冻葱Tewi</a>, <a href=\"https://github.com/syfxlin\" rel=\"noopener noreferrer\" target=\"_blank\">Otstar Lin</a> 等为 MDx 做出了不小贡献的你们。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：<a href=\"https://flyhigher.top/photograph/1309.html\">上手</a> DJI OSMO Pocket</li>\n<li>四月：最后一次参加浙江省普通高中学业水平考试</li>\n<li>五月：MDx 喜提 300 Stars</li>\n<li>六月：高考 <del>炸了，差亿点点上浙大</del>\n</li>\n<li>六月：入手了 Oneplus 7 Pro</li>\n<li>六月：和同学一起去成都重庆旅行</li>\n<li>六月：第一次近距离感受到地震</li>\n<li>六月：<a href=\"https://flyhigher.top/diary/1411.html\">入手</a>了一台雷蛇灵刃 15，目前是主力机</li>\n<li>七月：参与组织 THE Hack 2019 活动</li>\n<li>七月：面基了 <a href=\"https://itroy.cc/\" rel=\"noopener noreferrer\" target=\"_blank\">Tory</a>, Bie Shi 和 <a href=\"https://oxz.me/\" rel=\"noopener noreferrer\" target=\"_blank\">FHYunCai</a>\n</li>\n<li>八月：一个人去厦门武汉转了一圈，拍了自己的第一个 Vlog</li>\n<li>八月：入手了一个 Kindle Paperwhite 4，没有泡面可以压，于是用来看英文小说了</li>\n<li>八月：加入 TEDxNingbo 志愿者团队</li>\n<li>八月：和 Ralph 面基</li>\n<li>八月：入手了一个 Yubikey</li>\n<li>九月：人生第一次参加雅思考试 <del>7分，蛮开心的</del>\n</li>\n<li>十月：入手了一个 Samsung Galaxy Watch Active 2 <del>觉得不值</del>\n</li>\n<li>十一月：MDx 达到 400 Stars</li>\n<li>十一月：为 TEDxNingbo 设计开发的 H5 上线</li>\n<li>十一月：入手了第一台胶片相机，试图入坑胶片摄影</li>\n<li>十一月：参加 TEDxNingbo 2019 大会</li>\n<li>十二月：<del>我 Cytus II 入门了</del>\n</li>\n</ul>\n<h1>跨年红包</h1>\n<p>这算「传统习俗」了。和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2020年1月2日。</p>\n<p>今年的解谜旅程，从下面这个字符串开始。</p>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>由于今年的题目比以前稍微难了一些，所以今年的红包金额还是比较大的，而且不限量，尽你所能试一试吧。</p>\n<p>一点你可能用得上的提示：URL 里全是 ASCII 字符 / 24x3，横向读取。</p>\n<p><a href=\"https://flyhigher.top/develop/1519.html\">答案</a>已公布。</p>\n<h1>跨年海报</h1>\n<p>这算是另一个「传统习俗」（笑）。因为我有做跨年海报的习惯，所以以下就是今年份的海报啦。</p>\n<p>用了 C4D+PS，还有我的一整个下午。</p>\n<p>提前祝各位新年快乐！</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter wp-image-1467 size-large\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n","link":"https://flyhigher.top/diary/1464.html"}]