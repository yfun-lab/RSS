[{"title":"本周看什么丨最近值得一看的一大筐作品","date":"2022-06-24 10:16:29","description":"☕️TL;DR近期佳作推荐：[电影]祝你好运，里奥·格兰德、[美剧]伞学院第三季、[国产剧]破事精英、[动画]遗迹守护者、[电影]奇异博士2：疯狂多元宇宙、[纪录片]家园第二季、[英剧]人来蜂、[港剧 ...<a href=\"https://sspai.com/post/73985\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73985"},{"title":"有奖征文 | 地大物博的华夏，哪些是你的风物推荐？","date":"2022-06-24 08:00:00","description":"还记得前不久在派评栏目给大家推荐的「华夏风物」App吗？这个全面专业的中国风物百科数据库和分享社区，专注于中国风物之美，让我们感受风物世界里的温度和力量。近期，这款独特的App进行了全新版本的升级。他 ...<a href=\"https://sspai.com/post/73978\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73978"},{"title":"如何看待中国成功实施陆基中段反导拦截技术试验？这将有何意义？","date":"2022-06-24 07:17:53","description":"\n<p data-pid=\"UsOhXifj\">反导拦截技术被形象地比喻为“用子弹打子弹”，它有哪些特点？又分哪些拦截阶段？</p>\n<p data-pid=\"ZntO-QNr\">相信大家一定比较好奇！</p>\n<p data-pid=\"g5Ljaxkf\">下面，我们从三个方面给大家讲讲~</p>\n<h2><b>一、助推段拦截——纸上谈兵</b></h2>\n<p data-pid=\"pChPcqJr\">助推段是导弹从地面发射车、地下发射井或水下潜艇起飞，凭借发动机的推力向上飞行的过程。</p>\n<p data-pid=\"32tAVu3u\">从理论上讲，导弹助推段拦截最容易实现。导弹在克服地球引力向上飞行的过程中，发动机喷射出的高温燃气很容易被红外探测装置发现，被击落后的残骸也是掉落在敌方领土上。<br></p>\n<p data-pid=\"VIfMPCKR\">根据这个原理，自上世纪以来，美国在太空中部署了几代导弹预警卫星，用红外相机对着苏联/俄罗斯等国家可能发射导弹的位置，进行实时监视。而且，导弹在助推段的飞行速度较低，容易被瞄准。如果预警卫星发现有导弹起飞，可以用激光或其他导弹将其击毁。</p>\n<p data-pid=\"McprATSa\">尽管容易探测，但助推段拦截却是最困难的，主要是难以选择有效的拦截手段。这是因为导弹一般会从一个国家的本土起飞，拦截方很难接近发射地点。因此，美国曾经提出过天基激光、机载激光拦截的方案。</p>\n<p data-pid=\"hPBZq1IJ\">天基激光是把激光器部署到地球轨道上，自上而下照射起飞的导弹，但激光器的轨道选择是个难题。激光束存在发散问题，轨道较高，激光照射到大气层内时就会威力不足；如果轨道较低，就需要部署大量的激光器，成本很高。如果导弹在雨、雾天气发射，激光器只能在导弹飞出云层后才能有效照射，甚至来不及照射。</p>\n<p data-pid=\"wShEHoXu\">此外，天基激光需要保持几十台激光炮在轨运行，和平年代每年也要耗费巨额资金，即使是富裕的美国也无法承受这样的“无底洞”。因此，这个方案最终被放弃。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-4250c47a95730d4d3652cc72101c675b_720w.jpg?source=b1748391?rss\" data-caption=\"波音747飞机发射激光拦截助推段的导弹\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"218\" data-watermark=\"original\" data-original-src=\"v2-4250c47a95730d4d3652cc72101c675b\" data-watermark-src=\"v2-e98d16daaf1a185121951f1fd5ce8465\" data-private-watermark-src=\"v2-989b535f87ebb8e25e88db34b31f4f6f\"></p>\n<p data-pid=\"yR7l6s0P\">机载激光是将一门激光炮装在波音747飞机上，从数百公里外照射助推段中的导弹。但这也存在着受雨雾影响的问题，而且几百公里的距离对波音747飞机来说并不安全，对方可以用战斗机在发射场周围巡逻，由于两者速度和机动的差距，波音747飞机一旦被发现，绝对逃不脱战斗机的追击。因此，这个方案不太现实，最终也被放弃。</p>\n<p data-pid=\"qywGhiB3\">美国后来又推出了空空导弹反导方案，即用无人机携带改型AIM-120空空导弹，在对方导弹发射场周围巡飞，一旦发现导弹起飞就前去拦截。这个方案和机载激光一样存在射程不足、容易被对方拦截的问题。所以，助推段拦截至今还只是纸上谈兵。</p>\n<h2><b>二、中段拦截——合理的选择</b></h2>\n<p data-pid=\"lKsyk5X3\">中段是指导弹飞出稠密大气层，在空气稀薄的外大气层甚至更高的宇宙空间飞行的过程。</p>\n<p data-pid=\"ZMGZnjPM\"> 中段反导的好处是在敌方导弹尚未到达本土前，对其拦截并将其战斗部摧毁，避免了在末段拦截时，敌方携带有核弹头的来袭导弹造成本土上空核污染，或因拦截产生的碎片掉在本土上造成经济损失。因此，目前，世界上一些军事大国都在研究和试验中段反导技术，其作战效能突出，但技术门槛很高，来袭导弹会释放诱饵和变轨，所以最大的难题是目标跟踪和识别。</p>\n<p><img src=\"https://pica.zhimg.com/v2-da1e6f2eb8b2dcc15166efe38ddc1b34_720w.jpg?source=b1748391?rss\" data-caption=\"陆基中段反导示意图\" data-size=\"normal\" data-rawwidth=\"510\" data-rawheight=\"300\" data-watermark=\"original\" data-original-src=\"v2-da1e6f2eb8b2dcc15166efe38ddc1b34\" data-watermark-src=\"v2-8251669760bf39b7694bd757e1248b64\" data-private-watermark-src=\"v2-cd6680c435d36f72523bf19d84c92c42\"></p>\n<p data-pid=\"LzCTbx9d\">来袭导弹进入中段飞行后，助推段的发动机已脱离，只剩下弹头在飞行，由于体积变小，因此需要高性能大型相控阵雷达才能发现和跟踪。</p>\n<p data-pid=\"W-FFYQ-M\">雷达发现目标后，针对怎样拦截的方案目前有天基拦截和陆基拦截两种。上世纪80年代，美国政府提出了一种天基拦截方案，在低轨道上部署大量称为“智能卵石”的拦截器，覆盖整个轨道高度。</p>\n<p data-pid=\"V0CpsByz\">一旦雷达确定了目标，相应位置上的“智能卵石”就被激活，启动发动机前往拦截。不过，这种方案需要部署的拦截器数量巨大，可能需要上千个，这其中的建造、发射和维护成本，很难有国家承担得起。因此，“智能卵石”只停留在纸面上。</p>\n<p data-pid=\"w_HPp1ZM\">陆基中段拦截比较现实。但是，“天下武功唯快不破”，面对高速飞行的导弹，拦截弹也需要相应的高速度。其中，最重要的指标是发动机关机速度，关机速度越快，拦截弹覆盖范围越广、动能越大。</p>\n<p data-pid=\"-SRXbgBL\">另外，在导弹和拦截弹相对飞来时，拦截窗口一闪而逝，为此，科研人员在拦截弹的战斗部上安装有多个小型轨道调整发动机，用于短距离机动，以便将目标纳入杀伤范围。</p>\n<p data-pid=\"uu6O_dbx\">总的来说，中段反导对整个反导作战技术要求很高，如果没有过硬的军事技术，很难有效对敌方发射的中远程弹道导弹和洲际弹道导弹进行拦截。</p>\n<h2><b>三、末段拦截——最后的防线</b></h2>\n<p data-pid=\"99hsQb-h\">末段是指来袭弹头在重力作用下再次进入稠密大气层，并再次回到地面的飞行过程。末段拦截是对来袭导弹突破中段拦截后实施的再次拦截，以增加拦截概率。</p>\n<p data-pid=\"8awBnibG\">来袭导弹在末段飞行时只剩下弹头，由于高度不断降低，势能不断转化成动能，弹头速度越来越快，直至空气阻力和重力平衡。而拦截弹从地面起飞，几乎迎着弹头飞行，相对速度很快。因此，仅就拦截过程本身，末段拦截的难度仍然很大。</p>\n<p data-pid=\"UFDLiC-T\">由于末段飞行的弹头会与空气摩擦生热，末段拦截弹往往也采取红外制导方式，因此，发现来袭弹头不是很困难，但如何准确撞上去才是重点。目前，用于末端拦截的反导系统主要有美国的萨德反导系统、爱国者-3防空反导系统、以色列的箭-2反导系统和俄罗斯S-300V系列防空反导系统等。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-cc2e5dd257f31d303d3b578e10a20003_720w.jpg?source=b1748391?rss\" data-caption=\"俄罗斯S-300V系列防空反导系统\" data-size=\"normal\" data-rawwidth=\"550\" data-rawheight=\"363\" data-watermark=\"original\" data-original-src=\"v2-cc2e5dd257f31d303d3b578e10a20003\" data-watermark-src=\"v2-2b966d266251a7560b593352922b6355\" data-private-watermark-src=\"v2-b4b69674e593ff803fe35a94ef765bcd\"></p>\n<p data-pid=\"5U9A7rBa\">末段拦截弹可以采用破片杀伤式战斗部或通过直接碰撞杀伤来袭的弹头，例如，爱国者-3反导系统的拦截弹采用的是直接碰撞动能杀伤战斗部，要求制导精度高；俄罗斯的S-300V等拦截弹采用的是破片定向杀伤战斗部。</p>\n<p><br></p>\n<p data-pid=\"Mv8GxByE\">来源/《中国航天报·飞天科普周刊》</p>\n<p data-pid=\"HB6mKdFp\">文/常飞</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhong-guo-hang-tian-ke-ji-ji-tuan?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">中国航天科技集团</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/538511702/answer/2536032959?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">860 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/538517688?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何看待中国再次成功实施陆基中段反导拦截技术试验，与上一次有什么不同？</a><br><a href=\"http://www.zhihu.com/question/538511865?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">怎么看中国成功实施陆基中段反导拦截技术试验？意味着什么？</a><br>\n","link":"http://www.zhihu.com/question/538511702/answer/2536032959?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"VSCO：一次关于大更新的大更新","date":"2022-06-24 06:30:00","description":"尚处 beta 阶段的新功能形态未定，既有功能的改进倒是令人满意。<a href=\"https://sspai.com/post/73960\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73960"},{"title":"玩转 Obsidian 08：利用 Dataview 打造自动化 HomePage","date":"2022-06-24 03:29:07","description":"本文介绍了 Obsidian 第三方插件 Dataview ，并介绍了如何通过「编码」实现「自动化 HomePage」解决问题，相关代码可以在 Github 查看。大家下载保存后，简单修改其中的一些「关键字」，即可打造属于自己的「自动化 HomePage」，欢迎尝试。<a href=\"https://sspai.com/post/73958\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73958"},{"title":"去大连旅游，有什么推荐的攻略？","date":"2022-06-24 02:32:57","description":"\n<p data-pid=\"pepSzxfc\">这是一篇非主流的大连旅游攻略。</p>\n<p data-pid=\"jjLtdpKH\">对海胆的爱是360度全方位无死角的。在巴黎的时候每次去Takara必点两份鹅肝寿司和两份海胆寿司。宵禁时期也要和V赶去圣日尔曼德佩喝酒吃海胆了再回家。回国后一时半会儿去不了北海道，便想着去大连把海胆刺身海胆水饺海胆蒸蛋一网打尽。</p>\n<p data-pid=\"TcdeLIHo\">之前的我只是一个盲目的海胆爱好者，好吃就完事儿了。这回去大连倒是好好做了一番功课，想明明白白地做一个海胆收割机。</p>\n<h2><b> 科普时间到  </b></h2>\n<p data-pid=\"YcFKqVjL\">海胆黄和蟹黄蟹膏白子雪蛤等一样，是动物身上的不可描述部分。可偏偏最美味到不可描述的也是它们。</p>\n<p data-pid=\"J-f98wMJ\">看开海胆的过程中我注意到海胆身上一个圆圆的部分，猜想会不会是它的嘴。</p>\n<p data-pid=\"XmUdbq60\">其实我只对了一半。这个部位不仅是它的嘴，还有五颗牙齿。如此可爱的生物居然有五颗锋利的牙齿，着实把我吓了一跳。好在它还有个好听的名字叫<b>「亚里士多德提灯 Aristotle’s Lantern」</b>，不过这个名字也可能是对亚里士多德《动物志》中一句话的误解，真正像提灯的不是它的口器，而是死后只剩骨骼的海胆身体。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-e41ad641d8858c92f70ee3ebe784686c_720w.jpg?source=b1748391?rss\" data-caption=\"海胆灯© warisanlighting.com\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"600\" data-watermark=\"original\" data-original-src=\"v2-e41ad641d8858c92f70ee3ebe784686c\" data-watermark-src=\"v2-e41ad641d8858c92f70ee3ebe784686c\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"IPeABHxh\">海胆种类众多，傻傻分不清的话怎么能吃得明白呢？于是我着重了解了四种最常见的食用品种：</p>\n<h3>马粪海胆，紫海胆，北紫海胆，虾夷马粪海胆。</h3>\n<p data-pid=\"qmYOQJKa\">简单总结我理解的区别就是<b>马粪海胆</b>个头最小，口感也不是很好；<b>紫海胆</b>个头略大，主要是中国东南部出产；<b>北紫海胆</b> 比紫海胆要大，色泽淡黄，味道清雅，大连的紫海胆和黑海胆就是这一品种；而<b>虾夷马粪海胆</b>色泽橙黄，味道甘甜，原产自日本北海道及北沿海，或许因为北海道古称虾夷而得名，这一品种于1989年由大连水产学院引入中国，大连的马粪海胆便是这一品种，也是忠妍个人最喜欢的海胆品种。</p>\n<p data-pid=\"xuBdb2m-\">当然，分不分得清其实也没那么重要，没有一个海胆能逃过被海獭吃的命运。海獭说，黄海胆红海胆紫海胆马粪海胆我都要！</p>\n<p><img src=\"https://pic2.zhimg.com/v2-2083879c804d457f426b1dbcb1ba7185_720w.jpg?source=b1748391?rss\" data-caption=\"© climate.gov\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"413\" data-watermark=\"original\" data-original-src=\"v2-2083879c804d457f426b1dbcb1ba7185\" data-watermark-src=\"v2-2083879c804d457f426b1dbcb1ba7185\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-b526685e79cf38387685e26aaf3f9b64_720w.jpg?source=b1748391?rss\" data-caption=\"© Katherine Johns\" data-size=\"normal\" data-rawwidth=\"750\" data-rawheight=\"422\" data-watermark=\"original\" data-original-src=\"v2-b526685e79cf38387685e26aaf3f9b64\" data-watermark-src=\"v2-b526685e79cf38387685e26aaf3f9b64\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"7fxB8TbL\">「咱也不知道咱也不敢问」</p>\n<p><img src=\"https://pic1.zhimg.com/v2-3174361c9749cab2fdebc2b5a57918d5_720w.jpg?source=b1748391?rss\" data-caption=\"© Karac Lindsay\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"540\" data-watermark=\"original\" data-original-src=\"v2-3174361c9749cab2fdebc2b5a57918d5\" data-watermark-src=\"v2-3174361c9749cab2fdebc2b5a57918d5\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-a749faeb7f8230a038cc0b1943cbee31_720w.jpg?source=b1748391?rss\" data-caption=\"© Brendon Bissonnette\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"540\" data-watermark=\"original\" data-original-src=\"v2-a749faeb7f8230a038cc0b1943cbee31\" data-watermark-src=\"v2-a749faeb7f8230a038cc0b1943cbee31\" data-private-watermark-src=\"\"></p>\n<h2><b>科普时间结束</b></h2>\n<p data-pid=\"G6_zyALF\">在大连待了一周，时间慢了下来，得以二刷几家喜欢的海胆餐厅，这里就按海胆的不同做法来记录一下吧。</p>\n<h2># 海胆水饺</h2>\n<p data-pid=\"LwTCJCOL\">来大连必吃的是<b>喜鼎</b>的海胆水饺。早在几年前就被朋友种了草，这次去了东港店真是喜欢得不得了。中间巨大的开放式厨房让我得以将做水饺的步骤看得一清二楚。原来这里是擀一张水饺皮包一个饺子的呀。用的擀面杖也和一般圆柱形的不一样，是修长的纺锤形的。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-016bbf8cc0e72b732137eedb27a7c405_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"250\" data-rawheight=\"141\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"_HwIyXZg\">精致的一小碗端上来，下面是饺子原汤，上面卧着两只嫩滑的水饺。作为一个从小不爱吃水饺的人，我这次被颠覆了认知：原来水饺皮可以如此轻薄又弹牙。说是一人限点两只，好心的小哥哥还是让我们点了八只。一口咬下去就是鲜掉眉毛的汁水，海胆水饺真是深得极鲜的精髓：水产和肉类混合的最高鲜味。这种小技巧此前不止一位法国名厨跟我提起过。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-dbb1408e9c7e43d656b4691b3ecca4db_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"338\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-4d3963d3ff86df20786ed44cfb49e917_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"338\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"dN5cYVnB\">除了海胆水饺，喜鼎的鲍鱼水饺和原汁海参汤也值得一试。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-830d594a6a41c73da311f575150550b8_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"338\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-f9dc9bf7dabe792c95052820208b7a25_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-f9dc9bf7dabe792c95052820208b7a25\" data-watermark-src=\"v2-f9dc9bf7dabe792c95052820208b7a25\" data-private-watermark-src=\"\"></p>\n<h2># 海胆刺身</h2>\n<p data-pid=\"oZd4pIym\">尝了四家餐厅的海胆刺身，最满意的是<b>常鲜楼</b>的马粪海胆。处理得很干净，海胆鲜甜，不蘸酱油芥末直接入口也毫无腥气。L边吃边想着怎么从日本弄山葵来了，毕竟大连和日本离得近哈哈。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-93ec869b91c8c702f956b004a34b7a29_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-93ec869b91c8c702f956b004a34b7a29\" data-watermark-src=\"v2-93ec869b91c8c702f956b004a34b7a29\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"T5TC2zP5\">当然，追求性价比的话呢推荐<b>海胆小馆</b>，追求个儿大的话呢推荐<b>品海楼</b>。</p>\n<h2># 海胆蒸蛋</h2>\n<p data-pid=\"ZUKWCHcy\">海胆蒸蛋算是一道家常菜，自己在家打个蛋液也能做，不过食材不一定有产地直接吃的好就是了。对于不能接受刺身的朋友来说蒸蛋真是个讨喜的选择。没有人会对海胆蒸蛋有抵抗力吧？我们去的是<b>海胆小馆</b>的春柳店，刚进去坐下就有一个爸爸带着小朋友也大老远跑来吃。小朋友一口气吃了俩蒸蛋，又吃了一盘海胆水饺，然后感叹说还是喜鼎的好吃。吃完就准备走人，爸爸笑着说不付钱就准备走了呀？有爱死了。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-03d302c9e5400374e9de6274b6403e04_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-03d302c9e5400374e9de6274b6403e04\" data-watermark-src=\"v2-03d302c9e5400374e9de6274b6403e04\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"DOWTYBho\">虽然此行的目的是花式吃海胆，但毕竟是度假，还是有几个心动地点推荐的～</p>\n<p><br></p>\n<h2><b>✈️ 心水目的地1 北岛</b></h2>\n<p data-pid=\"8c2DGxZ5\">临走的前一天去了心心念念的北岛咖啡馆。依山傍海而建的两栋纯白别墅小院，隐匿在一个老旧的居民区里。室内装饰简单干净，本不抱希望地点了点吃的，没想到味道也还过得去。或许是离韩国很近的原因吧，这边的年糕啊冷面啊炸鸡啊都没雷点。满怀期待地点了一杯百利甜香草拿铁，用料实在不行，勉强喝完还反胃了好久，算是一大败笔。</p>\n<p data-pid=\"bSAcLgQs\">喜欢这里的最大原因是可以和爱人窝在沙发上看书，累了就望着窗外微风拂过的绿植发呆，耳畔响着和自己私人歌单高度重合的音乐，就这样惬意度过午后时光。</p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-593522ce6af27d2293c12c931d1b63af_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"809\" data-watermark=\"original\" data-original-src=\"v2-593522ce6af27d2293c12c931d1b63af\" data-watermark-src=\"v2-593522ce6af27d2293c12c931d1b63af\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-357bbd29d4904ead76e98cb297bb380d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"719\" data-watermark=\"original\" data-original-src=\"v2-357bbd29d4904ead76e98cb297bb380d\" data-watermark-src=\"v2-357bbd29d4904ead76e98cb297bb380d\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-2c31bf2f8d6957f908f45813e994e246_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-2c31bf2f8d6957f908f45813e994e246\" data-watermark-src=\"v2-2c31bf2f8d6957f908f45813e994e246\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-6c34d4e4ada896d3cd294833a1d2f1e5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"original\" data-original-src=\"v2-6c34d4e4ada896d3cd294833a1d2f1e5\" data-watermark-src=\"v2-6c34d4e4ada896d3cd294833a1d2f1e5\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"0VMEf9JM\"><b>SUMMER</b></p>\n<p data-pid=\"OA5ztESa\">我已经很久没有坐过摩托车了</p>\n<p data-pid=\"8Grmm0wt\">也很久未试过这么接近一个人了</p>\n<p data-pid=\"5m9lnRgC\">2021</p>\n<p data-pid=\"R8SMJ8n8\">7.17</p>\n<h2><b>✈️ 心水目的地2 Our</b></h2>\n<p data-pid=\"31n8kczp\">某天中午吃饱喝足后在海边散了会儿步，觉得东港的海边实在不好看，便找到了附近的Our坐下来。露天的阳光房是我的爱，临窗坐下或是在遮阳伞下坐下都是不错的选择。没想到我们短短几天就去那里打发了好几个下午和晚上的时间。</p>\n<p data-pid=\"EzYPXA5u\">这家店像是一个集合概念店，有自己的convenience store，café，restaurant和bakery。尝试的巧克力脏脏包，艾草包，蜂巢冰激淋，抹茶拿铁以及炸鸡沙拉都水平在线， 特别喜欢它家的伯爵茶口味可露丽。貌似这是一家从首尔江南区开到国内的店，难怪设计感十足。有机会去的朋友还可以感受一下它家的洗手间 </p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-e22a177e6973d1d323777c82a7383f74_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-e22a177e6973d1d323777c82a7383f74\" data-watermark-src=\"v2-e22a177e6973d1d323777c82a7383f74\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-25871273e610e0dd61fb5367de26a8eb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-25871273e610e0dd61fb5367de26a8eb\" data-watermark-src=\"v2-25871273e610e0dd61fb5367de26a8eb\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-769923a418180bd1028a5818afc2cdcd_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-769923a418180bd1028a5818afc2cdcd\" data-watermark-src=\"v2-769923a418180bd1028a5818afc2cdcd\" data-private-watermark-src=\"\"></p>\n<h2><b>✈️ 心水目的地 3 启新街</b></h2>\n<p data-pid=\"KTdzlL_C\">此行最有意思的经历或许要数<b>去旅顺</b>了。印象里的旅顺是历史课本里日俄战争中旅顺口海战的一个地名，这次去大东北感觉历史走进现实了。在站北广场只收现金不能扫码的售票窗口买了两张巴士票，就这样从市区晃去了旅顺口区。大连站一带的商户看上去都像是上世纪八九十年代的，仿佛一下子穿越回了三十多年前。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-2e2496269a940b837b99c165032baff7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-2e2496269a940b837b99c165032baff7\" data-watermark-src=\"v2-2e2496269a940b837b99c165032baff7\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-e919bd73eb6c06aed9ac3cd4d200f0b6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-e919bd73eb6c06aed9ac3cd4d200f0b6\" data-watermark-src=\"v2-e919bd73eb6c06aed9ac3cd4d200f0b6\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"NAs_DE-3\">到旅顺后本想去盐场附近的海鲜街，结果打车的司机小哥说沿海都是游客和大连人去，旅顺本地人都去另一条街。虽然感觉大连人被黑了，但还是选择了相信小哥去了启新街。刚一下车就看见下班后去买菜的人们络绎不绝，买完提着几个塑料袋就走路回附近的小区了。沿街的小贩卖什么的都有，海鲜和水果都很新鲜，量也不大，听小哥说都是附近农民自家的。在这种地方讨价还价似乎都很少，我没走几步就爱上了这种质朴的烟火气。实诚的小哥还说这里的海鲜特别便宜，我俩如果有个锅买了海鲜回去上锅蒸蒸就能吃了，多好 。</p>\n<p data-pid=\"NJxfJ2iF\">最后没有锅的我开开心心买了不少水果。回程选择了在塔河湾坐地铁，L说沿着海岸线的轨道有种镰仓的感觉。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-6dfafccce98ce95d786fb1470b02b7b5_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"225\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Qwl39RfR\">好啦，一篇洋洋洒洒的分享就到这里啦。</p>\n<hr>\n<p data-pid=\"0a_F5qgf\">-喜欢就点个赞，让更多人看到叭  -</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhongyan.llp?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">巴黎情书</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/22877999/answer/2469176830?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">179 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/538283377?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">去大连自驾游，有什么景点是一定要去观光的？</a><br><a href=\"http://www.zhihu.com/question/510169873?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">去大连自驾游，有哪些路线推荐？</a><br>\n","link":"http://www.zhihu.com/question/22877999/answer/2469176830?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：索尼发布 2022 电视新品、AMD GPU 对比工具上线","date":"2022-06-24 00:49:05","description":"VAIO 发布 FE 系列笔记本，iOS 16 等系统已推送 Beta 2 版本更新等<a href=\"https://sspai.com/post/73974\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73974"},{"title":"新玩意 110｜少数派的编辑们最近买了啥？","date":"2022-06-23 09:25:50","description":"关于栏目很多读者都会好奇少数派的编辑们到底平时都「买了啥」。我们希望通过「编辑部的新玩意」介绍编辑部成员们最近在用的新奇产品，让他们自己来谈谈这些新玩意的使用体验究竟如何。内容声明：《新玩意》栏目如含 ...<a href=\"https://sspai.com/post/73964\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73964"},{"title":"为什么你应该试试一句话换一行","date":"2022-06-23 08:01:14","description":"你真的应该试试一句话换一行，半句话换一行，如果感到高兴就拍拍回车换一行。<a href=\"https://sspai.com/post/73957\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73957"},{"title":"大船靠岸，激动暂缓：以 Pixel 为例谈二手/水货 Android 手机验机","date":"2022-06-23 06:30:17","description":"随着 5G 网络解锁方案出现，或许又将出现一波小小的 Pixel 购机潮，这篇文章希望提供一些国内入手 Pixel 机型后的验机指引，其他 Android 机型也可参照。<p>[......]</p>\n<a href=\"https://sspai.com/prime/story/inspecting-imported-used-pixel\" target=\"_blank\">查看全文</a><p>本文为会员文章，出自<a href=\"https://sspai.com/prime/precog/single\" target=\"_blank\">《单篇文章》</a>，订阅后可阅读全文。</p>\n","link":"https://sspai.com/prime/story/inspecting-imported-used-pixel"},{"title":"核心体验分析——明日方舟","date":"2022-06-23 04:09:43","description":"\n<p data-pid=\"ewgRgB0X\"><b>*由于刚入坑不久，对游戏的理解存在不足，还需指正</b></p>\n<p data-pid=\"X-R7vTgp\"><b>游戏简介：</b></p>\n<p data-pid=\"8RM7E13h\">明日方舟（简称舟游），有RPG元素的塔防手游，鹰角网络开发运营，2019年5月1日公测。</p>\n<p data-pid=\"tSW95f__\"><b>游戏特色：</b></p>\n<p data-pid=\"xRQpIlsP\">数量丰富、功能多样的干员（即防御塔）</p>\n<p data-pid=\"JcOEb0cS\">RPG化的养成系统</p>\n<p data-pid=\"b-Ei1BhV\">出色的剧情氛围</p>\n<p data-pid=\"bQc3Lsej\">节奏较激烈，要求玩家操作的战斗</p>\n<p data-pid=\"yjFjdM2N\">其<b>核心体验也是塔防游戏的核心体验——建立坚固防线的安全感，以此防线战胜敌人，保护目标的成就感。</b>RTS游戏也包括了此类体验。</p>\n<p data-pid=\"qKg4Ukpj\">本文将拆解核心体验相关的游戏系统，介绍其体验从何形成。</p>\n<p data-pid=\"Jh3jRZN7\"><b>目录</b></p>\n<p data-pid=\"pQVLNann\"><b>一、战斗系统</b></p>\n<p data-pid=\"HaflmxRZ\"><b>二、养成系统</b></p>\n<p data-pid=\"jDyUvoZa\">商店、基建、抽卡主要服务于养成与付费，与核心体验没有直接关联，因此不进行分析</p>\n<h2><b>一、战斗系统</b></h2>\n<h3><b>关卡</b></h3>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-2d3d54f58cd72eabd962ba18684fc6bf_b.jpg\" data-size=\"normal\" data-rawwidth=\"1143\" data-rawheight=\"637\" class=\"origin_image zh-lightbox-thumb\" width=\"1143\" data-original=\"https://pic4.zhimg.com/v2-2d3d54f58cd72eabd962ba18684fc6bf_r.jpg\"><figcaption>关卡战斗界面示意</figcaption></figure><p data-pid=\"TLNeg4Ra\"><b>战斗基本规则：</b></p>\n<p data-pid=\"Q_55sGsF\">1.关卡目标：建立防御，阻止敌人通过己方终点，终点血量剩余0时（漏过敌人过多）失败。</p>\n<p data-pid=\"9-QMzMEB\">2.关卡内共可上场8名角色（包括干员与其召唤物），战斗前可编入最多13名干员（12名自带+1名他人支援）。</p>\n<p data-pid=\"AzR8l_w7\">3.放置干员需要消耗费用，费用可自动获得或通过先锋干员技能/天赋特性获得。</p>\n<p data-pid=\"XhQwZXgU\">4.仅部分地格能放置干员，大多数干员仅能放置在地面或高台两类地格之一。</p>\n<p data-pid=\"cYTDZ3vI\">5.干员被手动撤离（相当于出售）或被击倒后需要一段时间才能再次放置。再次放置所需费用增加。</p>\n<p data-pid=\"RnaOod5w\">6.部分关卡的地格有特殊机制，将干员放置于其上或相邻地格可激活效果。部分机制可被敌人激活。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-ddb3923f2efacf0b72b5757ee823be83_b.jpg\" data-size=\"normal\" data-rawwidth=\"698\" data-rawheight=\"392\" class=\"origin_image zh-lightbox-thumb\" width=\"698\" data-original=\"https://pic4.zhimg.com/v2-ddb3923f2efacf0b72b5757ee823be83_r.jpg\"><figcaption>资源本CE-4的场景预览，使用最简单的场景结构</figcaption></figure><p data-pid=\"pO0mwBOk\">关卡场景本身为塔防玩法的基本元素之一，<b>让战斗双方有战斗的场地</b>。通过结合地格类型与特殊机制，<b>用路线与障碍的形式创造关卡难易点，为游戏带来挑战</b>。此外，关卡的美术设计能<b>提供一定美学体验，增强玩家的沉浸感</b>。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-422ccaa02a722d8080b12beb718262ff_b.jpg\" data-size=\"normal\" data-rawwidth=\"1142\" data-rawheight=\"526\" class=\"origin_image zh-lightbox-thumb\" width=\"1142\" data-original=\"https://pic4.zhimg.com/v2-422ccaa02a722d8080b12beb718262ff_r.jpg\"><figcaption>活动关“覆潮之下”SV-5的场景预览</figcaption></figure><p data-pid=\"EExFRORN\">以活动关卡SV-5为例，本关敌人从上、下、右（空中）出现，汇集于中间道路，前往左侧的终点。三处高台的两处有作为关卡机制的装置，是通关的重点。观察关卡场景设计后，玩家就能明确本关战斗的思路——将战斗集中到中路拐角处，通过高台干员与关卡机制支援这一拐角；上下路可以利用输出干员削弱敌人。场景美术能给玩家带来“在海边某处小镇中，与来自深海的敌人战斗”的感官体验。</p>\n<p data-pid=\"yioYKRIp\"><b>设计优点：</b></p>\n<p data-pid=\"VV0EwpRN\">1.每个章节都有独特的核心机制，在保持主题统一性的同时给玩家不同的战斗体验，带来新鲜感。例如“覆潮之下”活动的特色机制是关于<u>神经损伤</u>（积累后对干员造成伤害与长时间眩晕）的控制与恢复，围绕这一点的战斗思路与阵容配置的变化的能让玩家产生不同的体验。</p>\n<p data-pid=\"VGeLGTqX\">2.路线相对自由的空中敌人的存在，在战斗时可能会被玩家忽略，且漏过防线后较难拦截。为战斗带来一定意外难点。</p>\n<p data-pid=\"llwUGRP9\"><b>设计缺点：</b></p>\n<p data-pid=\"UIL2rg69\">1.关卡中的敌人出生点，除了“这是敌人的出生点”外没有任何常驻提示，比如本波次的敌人种类与敌人前进路线。玩家在结束一段艰难的战斗后可能会忘记后续的敌人阵容与路线，导致没能及时调整干员布置而失败。</p>\n<p data-pid=\"jGYcJP_T\">改进方法——玩家点击出生点时，显示本波次会出现的敌人类型与数量（或显示从本出生点出现的全部存活敌人），同时显示其行进路线。</p>\n<p data-pid=\"JNCwxCL3\">2.玩家没有办法在战斗过程中查看敌人特点，仅在其初次出现时短暂弹窗提示。对于初次挑战关卡的玩家来说很容易因信息缺失导致战斗失败，产生一种不公平感。</p>\n<p data-pid=\"T0nyKvn0\">改进方法——在暂停界面添加敌人情报界面，或玩家点击敌人时再次弹出小窗提示。</p>\n<p data-pid=\"mD7s2OT-\">3.部分场景因美术设计展现的信息不够明确（此地格能否使用深坑地形杀，能否放置干员等），可能导致玩家出现困惑，致使策略失误。</p>\n<p data-pid=\"LTGEZTHq\">改进方法——调整美术设计，明确并强化各类地格的外观特点。</p>\n<h3><b>敌人</b></h3>\n<p data-pid=\"ehSn2PYl\">敌人是<b>关卡内容与难度的主要组成部分</b>，玩家能战胜的敌人越强，胜利后获得的成就感越高。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-2a1fd52e723a530367e1b56e0af35905_b.jpg\" data-size=\"normal\" data-rawwidth=\"1141\" data-rawheight=\"416\" class=\"origin_image zh-lightbox-thumb\" width=\"1141\" data-original=\"https://pic2.zhimg.com/v2-2a1fd52e723a530367e1b56e0af35905_r.jpg\"><figcaption>活动关卡的敌人信息</figcaption></figure><p data-pid=\"zHTK2HLe\">舟游的敌人设计框架类似《王国保卫战》（Kingdom Rush）系列，敌人有耐久、攻击、物防、魔防四种属性与各自的机制特性。得益于世界观基础与长期运营的积累，舟游的敌人<b>种类十分丰富</b>，<b>按关卡主题形成了多个机制体系</b>，为玩家<b>带来了足够的新鲜感与战斗深度</b>，也要求玩家培养全面的干员阵容，间接促进付费。</p>\n<p data-pid=\"s1zOOM-T\"><b>设计优点：</b></p>\n<p data-pid=\"QB3smCtw\">1.上文提到的丰富度带来的新鲜感，形成体系的机制产生的战斗深度。</p>\n<p data-pid=\"5taZINS4\">2.玩家可从敌人信息界面直接查看特性详情（如上图所示），便于自己快速了解敌人的重要信息，降低记忆难度。</p>\n<p data-pid=\"4P37DeeX\"><b>设计缺点：</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-fbaabe38e9210aae048651ae248bc16b_b.jpg\" data-size=\"normal\" data-rawwidth=\"1124\" data-rawheight=\"394\" class=\"origin_image zh-lightbox-thumb\" width=\"1124\" data-original=\"https://pic4.zhimg.com/v2-fbaabe38e9210aae048651ae248bc16b_r.jpg\"><figcaption>“愚人号”活动关卡的敌人，需要用异常状态解除其物法双闪避效果</figcaption></figure><p data-pid=\"DWZYXGWv\">1.部分敌人信息的机制详情不够详细，导致玩家阵容配置或干员布置出现失误，产生挫败感。一些对“异常状态”的描述不够全面，可能缺失重要或最有效的状态类型。如上图展示的深溟猎食者，其具有高达80%的双属性闪避率，需要通过触发异常状态解除——而其中没有提及更常用的沉默。这一点导致活动初期许多玩家认为这一敌人的设计“过于困难，很难应对”。</p>\n<p data-pid=\"yMLVMOI1\">改进方法——将异常状态分类，添加标签（如减速类、止步类、沉默类），便于后续各类战斗机制设计的同时，让玩家在应对敌人时有更清晰的思路。</p>\n<p data-pid=\"lt5mkRZY\">2.部分敌人的特性较难应对，但没有对应的信息提示或警告。以从场景中空降出场的敌人为例，其出现前没有任何UI或特效提示，让玩家猝不及防。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-dd474a5c41a3db309142a1ee15cc567f_b.jpg\" data-size=\"normal\" data-rawwidth=\"335\" data-rawheight=\"249\" class=\"content_image\" width=\"335\"><figcaption>《王国保卫战：前线》关卡的敌方额外出生点 ，从左方与下方连接主路</figcaption></figure><p data-pid=\"GhtLpECr\">作为对比，《植物大战僵尸》的蹦极僵尸在攻击前会指示目标；《王国保卫战》的额外出生点，从此出现的敌人没有波次警告，但有连向主路的暗示，玩家会对其提防。</p>\n<p data-pid=\"QAZ_s4iO\">改进方法——添加UI或特效提示，在敌人触发特性前警告玩家，让玩家有一定的反应时间。</p>\n<h3><b>干员</b></h3>\n<p data-pid=\"jibhXD6o\">防御塔（干员）的设计是塔防游戏最体现特色的部分。</p>\n<table data-draft-node=\"block\" data-draft-type=\"table\" data-size=\"normal\" data-row-style=\"normal\"><tbody>\n<tr>\n<td>传统塔防</td>\n<td>新世代塔防</td>\n<td>王国保卫战</td>\n<td>明日方舟</td>\n</tr>\n<tr>\n<td>规则简单直接的设计</td>\n<td>结合了FPS、TPS、RTS等设计，玩法更丰富</td>\n<td>传统塔防中有较大创新的系列</td>\n<td>融合RPG设计的塔防手游</td>\n</tr>\n<tr>\n<td>防御塔完全服务攻击，攻击范围全是圆形。</td>\n<td>防御塔增加改变路线、经济等功能，可放置在道路上（不拦截敌人）。多数塔的攻击范围是圆形。</td>\n<td>添加步兵，在道路拦截敌人。所有防御塔攻击范围是圆形。</td>\n<td>防御塔能放在道路上（拦截敌人），攻击范围多样。</td>\n</tr>\n<tr>\n<td>防御塔无技能</td>\n<td>防御塔无技能</td>\n<td>顶级防御塔有2~3个自动技能或被动效果</td>\n<td>干员选择携带一个技能，自动或手动使用</td>\n</tr>\n</tbody></table>\n<p data-pid=\"VgDO3YVG\">从上表的比较可以看出，舟游的干员设计对于其他塔防游戏来说较大创新，让游戏<b>产生了更深度的RPG体验，增强了游戏玩法深度，给玩家带来了较大新鲜感。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-680e1a63452f629d96eb38ef27d8eaeb_b.jpg\" data-size=\"normal\" data-rawwidth=\"953\" data-rawheight=\"413\" class=\"origin_image zh-lightbox-thumb\" width=\"953\" data-original=\"https://pic4.zhimg.com/v2-680e1a63452f629d96eb38ef27d8eaeb_r.jpg\"><figcaption>舟游的职业大类，每个职业有不同特点的分支</figcaption></figure><p data-pid=\"U9VO2O-5\">与市面常见的塔防游戏不同，舟游的干员参考RPG类游戏，设计出了职业体系。玩家不仅需要用干员削弱、击败道路上的敌人，还需要使用干员直接在道路上拦截敌人，并借助治疗、闪避等手段让其在敌人攻击中存活下来。这一改变<b>丰富了游戏玩法、增强了挑战性与策略性，允许玩家用更多样的阵容配置通过关卡。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-8799e65804b3d2f148778a61ab1475f3_b.jpg\" data-size=\"normal\" data-rawwidth=\"793\" data-rawheight=\"542\" class=\"origin_image zh-lightbox-thumb\" width=\"793\" data-original=\"https://pic4.zhimg.com/v2-8799e65804b3d2f148778a61ab1475f3_r.jpg\"><figcaption>放置干员时调整方向，攻击范围会随方向变化</figcaption></figure><p data-pid=\"w2bfMUEk\">除职业体系外，干员本身的攻击范围也有很大变化，其攻击范围不再是大大小小的圆形，而是需要调整面向，以其为基准的多种形状，如直线、扇形等。这一设计<b>增强了游戏的策略性，要求玩家更谨慎选择干员的放置部署</b>。</p>\n<p data-pid=\"xA7GSOBk\"><b>设计优点：</b></p>\n<p data-pid=\"JIfy1Vwj\">1.如上文提到的丰富玩法、增强挑战性与策略性。</p>\n<p data-pid=\"GCnLXHdv\">2.战斗中干员数值会根据加成实时变化，让玩家能更直接获取信息，更好判断战斗状况。</p>\n<p data-pid=\"UAtxHfjU\">3.技能系统为干员功能提供了一定调整空间，以适应更多关卡的战况，还能略微弥补阵容空缺。 </p>\n<p data-pid=\"eaitwPQy\"><b>设计缺点：</b></p>\n<p data-pid=\"xWNodXJM\">暂无，上文提到的设计没有太大问题。</p>\n<h2><b>二、养成系统——干员</b></h2>\n<p data-pid=\"O6zKuHFg\">干员设计将同类游戏防御塔的简单升级转变为了更复杂的养成系统，其主要包括等级、精英阶段、技能、天赋四项，其次是潜能、模组与信赖三项。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-65b0315a540de884017c6ed4ea4d869d_b.jpg\" data-size=\"normal\" data-rawwidth=\"1087\" data-rawheight=\"542\" class=\"origin_image zh-lightbox-thumb\" width=\"1087\" data-original=\"https://pic2.zhimg.com/v2-65b0315a540de884017c6ed4ea4d869d_r.jpg\"><figcaption>干员界面，右侧为主要养成部分，模组于精英2解锁</figcaption></figure><p data-pid=\"fpRw0ovx\"><b>等级：</b>干员等级完全来自于作战记录（经验书），等级上限随干员星级、精英阶段提升。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-cdebc37ddbf3aaa1e3540c85eda54445_b.jpg\" data-size=\"normal\" data-rawwidth=\"1120\" data-rawheight=\"529\" class=\"origin_image zh-lightbox-thumb\" width=\"1120\" data-original=\"https://pic2.zhimg.com/v2-cdebc37ddbf3aaa1e3540c85eda54445_r.jpg\"><figcaption>改版后的干员升级界面，系统自动选择作战记录升至玩家指定等级</figcaption></figure><p data-pid=\"24b7tH3b\">等级上限变化能<b>直观展现干员之间的能力上限差距</b>。<b>经验书的仓储式设计更便于玩家进行分配，同时避免了反复刷本培养低级角色的重复操作。</b>玩家能放心使用高级干员刷资源副本，将经验产出完全投入至其他干员中。</p>\n<p data-pid=\"pB36WWcM\"><b>精英阶段：</b>提升精英阶段能解锁干员天赋与技能，对其能力产生突破性提升，也是材料需求最高的项目之一。提升精英阶段后，会在保留干员强度的情况下重置等级。同时，精英阶段会呈现“阶段式满级”，暂时限制干员强度上限，在实现突破前能有效<b>迫使玩家去培养其他角色，促进其形成强度更统一的阵容，防止因资源过度倾斜导致阵容缺乏，难以过关。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-52b83ba0e353d1988a4b4034937fe4db_b.jpg\" data-size=\"normal\" data-rawwidth=\"902\" data-rawheight=\"220\" class=\"origin_image zh-lightbox-thumb\" width=\"902\" data-original=\"https://pic4.zhimg.com/v2-52b83ba0e353d1988a4b4034937fe4db_r.jpg\"><figcaption>干员提升至精英2的变化，能显著提升干员强度</figcaption></figure><p data-pid=\"5bmogIdu\">干员升至精英1所需材料容易获得，<b>让玩家快速形成完整阵容</b>。升至精英2材料的获取难度显著提升，<b>大大延长了养成周期，保持玩家活跃度，间接促进付费。此外通过限制材料制造条件或产出渠道的方法，一定程度上促使玩家推进主线进度。</b></p>\n<table data-draft-node=\"block\" data-draft-type=\"table\" data-size=\"normal\" data-row-style=\"normal\"><tbody>\n<tr>\n<td></td>\n<td>等级上限（精英0/1/2）</td>\n<td>精英阶段上限</td>\n<td>到达精英2时长（无月卡）</td>\n</tr>\n<tr>\n<td>3星以下</td>\n<td>最高40 / 最高55 / 无</td>\n<td>最高1</td>\n<td>无</td>\n</tr>\n<tr>\n<td>4星</td>\n<td>45 / 60 / 70</td>\n<td>2</td>\n<td>约1周</td>\n</tr>\n<tr>\n<td>5星</td>\n<td>50 / 70 / 80</td>\n<td>2</td>\n<td>约2周</td>\n</tr>\n<tr>\n<td>6星</td>\n<td>50 / 80 / 90</td>\n<td>2</td>\n<td>3周以上，材料产出需求主线进度</td>\n</tr>\n</tbody></table>\n<p data-pid=\"cuKEjntM\">上表是干员等级差距与预估养成时间，活动产出会显著加快养成进度</p>\n<p data-pid=\"27cVypzr\"><b>技能：</b>游戏战斗深度的主要部分。每个干员都有1~3个技能，战斗前只能选择携带其中一个。这一设计为玩家<b>提供了战术多样性，给玩家一定调整空间的同时，防止干员过于强大而难以平衡。</b></p>\n<p data-pid=\"CajF7EXa\">干员技能最高可升至7级，升级需要花费技巧概要与少量材料，消耗量与材料等级逐级提升。同一干员所有技能等级共享，<b>降低玩家养成成本</b>。之后需要在基建训练室消耗时间与大量材料对单个技能提升最多3次专精等级，即提升至10级。技能专精进一步增强技能强度，<b>作为花费较高的额外养成点，加深干员对阵容的价值贡献。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-3fd14f6ac1b2447d25d91b4c485fbdf5_b.jpg\" data-size=\"normal\" data-rawwidth=\"1141\" data-rawheight=\"652\" class=\"origin_image zh-lightbox-thumb\" width=\"1141\" data-original=\"https://pic2.zhimg.com/v2-3fd14f6ac1b2447d25d91b4c485fbdf5_r.jpg\"><figcaption>干员技能界面说明</figcaption></figure><p data-pid=\"BmjXXrUe\"><b>天赋：</b>干员的被动效果，游戏战斗深度的主要部分。天赋效果随精英阶段获得或强化。其从被动效果方面<b>与其他干员能力联动，形成战术体系</b>，能够持续改变全队伍的战斗表现。除此之外，天赋也能<b>帮助玩家了解干员的特色</b>，根据其进行阵容配置。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-01f02f4394d1424106373e53ad8c9a5c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"858\" data-rawheight=\"175\" class=\"origin_image zh-lightbox-thumb\" width=\"858\" data-original=\"https://pic1.zhimg.com/v2-01f02f4394d1424106373e53ad8c9a5c_r.jpg\"></figure><p data-pid=\"ga6k-up6\"><b>潜能：</b>养成表现上最接近手游“升星”的部分，其核心价值在于降低干员部署费用，较大提升干员性价比。提升潜能的信物道具通过重复获得干员赠送的干员信物，或在商店花费较多凭证兑换通用道具。这一设计能<b>刺激玩家付费，抽卡或购买体力刷取凭证</b>。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-a86e29c6b19a6ba810b721d9f5cd1972_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"879\" data-rawheight=\"445\" class=\"origin_image zh-lightbox-thumb\" width=\"879\" data-original=\"https://pic3.zhimg.com/v2-a86e29c6b19a6ba810b721d9f5cd1972_r.jpg\"></figure><p data-pid=\"KJkG7shp\"><b>模组：</b>2022年6月更新后另一个使干员强度产生质变的养成元素。模组目前仅部分干员能使用，需要精英2阶段，消耗材料解锁（还需完成特定任务）与升级，其材料要求低于技能专精，但需要产出渠道有限的专属材料。模组的核心价值<b>类似于技能专精，</b>在于<b>新增或强化干员天赋，进一步增强对阵容的价值贡献。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-6cd4478759d7e3a00a2a1cd9416d948d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"863\" data-rawheight=\"323\" class=\"origin_image zh-lightbox-thumb\" width=\"863\" data-original=\"https://pic2.zhimg.com/v2-6cd4478759d7e3a00a2a1cd9416d948d_r.jpg\"></figure><p data-pid=\"ZN1hSbqJ\"><b>信赖：</b>无法消耗资源直接养成，通过多次参加战斗或指派为基建副手提升。以低成本为干员提供可观的数值提升，<b>略微弥补练度不足导致强度较低的问题</b>，对于升级成本飙升的精英2干员也很有价值。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-45fd95e44709f0325b398638b884c407_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"693\" data-rawheight=\"234\" class=\"origin_image zh-lightbox-thumb\" width=\"693\" data-original=\"https://pic4.zhimg.com/v2-45fd95e44709f0325b398638b884c407_r.jpg\"></figure><p data-pid=\"EMpKC0rM\"><b>设计优点：</b></p>\n<p data-pid=\"Hb7Of5xJ\">1.如上文各点内容。</p>\n<p data-pid=\"UQfUVOME\">2.干员设计让防御塔变成了RPG角色框架，加深了战斗玩法深度，有助于长期运营的后续更新与内容扩展。</p>\n<p data-pid=\"VVBz6N6I\">3.通过控制各类材料产出数量，促使玩家参与多种游戏活动。</p>\n<p data-pid=\"3waT7_1n\">4.设计了多个养成方面与较高的成本需求，大大延长玩家游玩时长。</p>\n<p data-pid=\"96xt04wH\"><b>设计缺点：</b></p>\n<p data-pid=\"574xfJxs\">1.部分养成资源产出渠道少且需求较多，对于新手玩家养成成本偏高。</p>\n<p data-pid=\"OxStvtVw\">改进方法——调整数量需求或产出渠道（加入活动产出、允许商店兑换、作为新手任务奖励等），加快新人的养成速度。</p>\n<p data-pid=\"-Ee4UzBC\">2.较高的养成需求会让玩家频繁暂停主线进度去刷资源本，可能影响其连续剧情体验。</p>\n<p data-pid=\"i7v8vTu3\">改进方法——初次通过主线关卡后通过对应主线任务或新手任务，提供较多养成资源，保证玩家前期剧情体验较流畅。</p>\n<p data-pid=\"eghmm7U6\">3.专精技能耗费的大量资源，但提升较小，本质上依然是技能升级，对非强度党的吸引力较小。</p>\n<p data-pid=\"5FbzamiX\">改进方法——专精1级或3级时有较大数值/功能变化，提升其养成价值。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"TE_VmLut\"><b>*由于刚入坑不久，对游戏的理解存在不足，还需指正</b></p>\n<p data-pid=\"TSnUzzkq\">参考资料：</p>\n<a href=\"https://link.zhihu.com/?target=https%3A//wiki.biligame.com/arknights/%25E9%25A6%2596%25E9%25A1%25B5\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-4d48b26e129ad572c409c875c057fe59_l.jpg\" data-image-width=\"135\" data-image-height=\"135\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">明日方舟 Bilibili Wiki</a><a href=\"https://zhuanlan.zhihu.com/p/185739581\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-8718685559189a8b1372a5cf71477e1e_qhd.jpg\" data-image-width=\"1939\" data-image-height=\"1404\" class=\"internal\">毛毛雨魔理沙：《明日方舟》个人向拆解分析（上篇-战斗系统）</a><a href=\"https://zhuanlan.zhihu.com/p/188281407\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-cc8642ba2192c9d063bca1a4970990c0_qhd.jpg\" data-image-width=\"1920\" data-image-height=\"1080\" class=\"internal\">毛毛雨魔理沙：《明日方舟》个人向拆解分析（中篇-养成系统）</a><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/chhim?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">CHHIM</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/527745985?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"核心体验分析——最终幻想14","date":"2022-06-23 04:09:36","description":"\n<p data-pid=\"vX0sz9_H\"><b>*本文仅代表个人观点</b></p>\n<p data-pid=\"HUAhNQzp\"><b>*部分内容包含剧透</b></p>\n<p data-pid=\"IhaOZmfb\"><b>游戏简介：</b></p>\n<p data-pid=\"Y6y06CVw\">最终幻想14（Final Fantasy XIV, FF14），日厂Square Enix开发的MMORPG，是系列第14部正作，以其系列特有的美术风格、弱社交体验与高度围绕玩家编写的故事剧情闻名。</p>\n<p data-pid=\"vvfdGJUj\"><b>游戏特色：</b></p>\n<p data-pid=\"3Io6hI0n\">1.以玩家角色为中心的剧情</p>\n<p data-pid=\"Ll2yHivi\">2.丰富的休闲玩法</p>\n<p data-pid=\"SKs14FkW\">3.全职业自由切换</p>\n<p data-pid=\"zh3BCoJv\">4.线性成长的轻数值设计</p>\n<p data-pid=\"GE_5MNiK\">5.完善的世界观设定</p>\n<p data-pid=\"bIWW6usj\">6.弱社交的玩家关系</p>\n<p data-pid=\"B0lBSS9W\">其核心体验偏重MMORPG的RPG部分——创建一名角色，将自己代入其中，体验不同世界的生活，包括故事、娱乐、战斗等。比起其他同类游戏，FF14的游戏体验偏向单机RPG，更吸引爱好单机游戏的玩家。</p>\n<p data-pid=\"0XWA696P\">本文将<b>从系统设计入手</b>，分析其核心体验从何形成。</p>\n<p data-pid=\"psAnS3x7\"><b>目录：</b></p>\n<p data-pid=\"vFLK19Ah\"><b>一、战斗系统——职业与副本</b></p>\n<p data-pid=\"ErnCpGlu\"><b>二、养成系统——重点是外观</b></p>\n<p data-pid=\"WuC1sKWX\"><b>三、休闲玩法——钓鱼、打牌、赛鸟</b></p>\n<p data-pid=\"PORT8uuI\"><b>四、社交系统——一个人的网游</b></p>\n<h2><b>一、战斗系统——职业与副本</b></h2>\n<h3><b>角色职业</b></h3>\n<p data-pid=\"nWF1jVM1\">FF14中玩家角色职业参照了系列其他作品，设计了数量较多且各具特色的职业。作为本作特色，玩家只需一名角色就能完全体验所有战斗与生活职业。</p>\n<figure data-size=\"small\"><img src=\"https://pic2.zhimg.com/v2-5ae8b2cb4245747096891e352af2c561_b.jpg\" data-size=\"small\" data-rawwidth=\"651\" data-rawheight=\"484\" class=\"origin_image zh-lightbox-thumb\" width=\"651\" data-original=\"https://pic2.zhimg.com/v2-5ae8b2cb4245747096891e352af2c561_r.jpg\"><figcaption>FF14所有职业一览（严格说是“特职”，右侧的“职业”是旧版本遗留设计）</figcaption></figure><p data-pid=\"LpFYxc7Z\">FF14的职业体系为标准的“战法牧”体系，防护（T）、治疗（N）、进攻（DPS）三类职业的团队职能基本固定，数值属性与多数技能设计都不会超出其职能规定。固定职能的职业<b>便于玩家学习了解，也便于上手同类职业，降低总体学习成本。</b></p>\n<p data-pid=\"nnN1-TaT\">在此基础上，FF14在同类型的职业之间做了一定差异设计，玩家在使用不同职业时的战斗思路和技能安排都有所不同，<b>能够让玩家保持一定新鲜感</b>。结合剧情塑造与美术设计，<b>职业还能协助玩家为自己的角色添加背景设定与人物性格、增强对角色的代入感与情感投入。</b></p>\n<p data-pid=\"YzQW79tx\">技能方面，FF14职业的技能分为战技（物理伤害，无读条，有公共CD）、魔法（魔法伤害，多数读条、消耗魔法，有公共CD）、能力技（设计与功能多样）三类。多数战技与部分魔法有连击机制，释放技能会激活下个技能的连击收益，打出更高伤害或获得职业资源（用于释放其他技能）。<b>以职业资源为核心的设计能让玩家更清楚职业特色与战斗思路。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-1ed69ef76ba306a8924f822b24d4505e_b.jpg\" data-size=\"normal\" data-rawwidth=\"662\" data-rawheight=\"211\" class=\"origin_image zh-lightbox-thumb\" width=\"662\" data-original=\"https://pic3.zhimg.com/v2-1ed69ef76ba306a8924f822b24d4505e_r.jpg\"><figcaption>“绝枪战士”的部分技能，分别是连击（左下）、资源战技（左上）、职业量谱（中央）、资源能力技（右下）</figcaption></figure><p data-pid=\"_BnGUWH8\">FF14基本的战斗思路为：围绕增伤能力技，在获得增伤BUFF的爆发期内尽可能多释放伤害高的战技/魔法/攻击能力技，在爆发期外通过战技/魔法的连击奖励积攒资源与填补输出。围绕连击与能力技形成的爆发期与非爆发期的交错，以及期间的技能安排，构成了职业的战斗循环。<b>如何在处理副本机制的同时保证技能循环，如何在爆发期内打出更多输出，是FF14战斗深度的主要组成部分。</b>（由于个人能力有限，加上FF14的独特设计理念，这一点没有太多能详细分析的内容）</p>\n<h3><b>副本战斗</b></h3>\n<p data-pid=\"L2rtENu-\">排除2.0版本（1~50级时期）的不成熟设计，FF14的副本类型划分明确，流程完全线性，基本不存在分支路线。</p>\n<table data-draft-node=\"block\" data-draft-type=\"table\" data-size=\"normal\" data-row-style=\"normal\"><tbody>\n<tr>\n<td>主要副本类型</td>\n<td>玩家俗称</td>\n<td>人数</td>\n<td>主要特点</td>\n<td>设计目的</td>\n</tr>\n<tr>\n<td>迷宫挑战</td>\n<td>4人本</td>\n<td>4</td>\n<td>多数副本以3个难度较低的BOSS与BOSS战之间的大量小怪构成3段流程</td>\n<td>参与构成剧情内容，设计重点在副本提供的剧情氛围</td>\n</tr>\n<tr>\n<td>行会令</td>\n<td>无俗称</td>\n<td>4或8</td>\n<td>流程差别较大，普遍较短且难度低</td>\n<td>用于新手教程，教学副本战斗流程与玩家行为</td>\n</tr>\n<tr>\n<td>讨伐歼灭战</td>\n<td>讨伐/真神</td>\n<td>8</td>\n<td>难度略高于4人本。内容为1场难度较低的BOSS战</td>\n<td>参与构成剧情内容，设计重点在BOSS战本身</td>\n</tr>\n<tr>\n<td>歼殛战、幻巧战</td>\n<td>极神、幻神</td>\n<td>8</td>\n<td>极神为真神的高难版本；<br>幻巧战为旧版本极神保留机制，数值提升至当前版本强度的战斗</td>\n<td>极神作为较简单的高难副本，供玩家适应过渡到零式副本；<br>幻巧战鼓励玩家体验旧版本极神的正常难度</td>\n</tr>\n<tr>\n<td>大型任务</td>\n<td>8人本</td>\n<td>8</td>\n<td>分版本发布，有较长剧情的支线副本系列，每个系列共12个副本，多数副本只有1场BOSS战</td>\n<td>增加额外剧情，为零式副本的简单难度，用于介绍特色机制</td>\n</tr>\n<tr>\n<td>大型任务</td>\n<td>零式</td>\n<td>8</td>\n<td>对标同类游戏的Raid副本，与8人本一一对应的高难版本</td>\n<td>高难挑战的主要组成部分</td>\n</tr>\n<tr>\n<td>绝境战</td>\n<td>绝本</td>\n<td>8</td>\n<td>难度最高的副本，每个副本先后与多个BOSS战斗</td>\n<td>进一步满足玩家挑战高难副本的需求</td>\n</tr>\n<tr>\n<td>团队任务</td>\n<td>团本</td>\n<td>24</td>\n<td>分版本发布，有较长剧情的支线副本系列。每个系列共3个副本，每个副本由4个BOSS与BOSS战之间的少量小怪构成4段流程</td>\n<td>增加额外剧情，难度介于真神与极神之间，提供适中难度的副本战斗</td>\n</tr>\n</tbody></table>\n<p data-pid=\"bmn-8DwR\">除行会令外，所有副本都融合了一定剧情演出，<b>结合场景美术与音乐创造了出色的情感氛围，让玩家更好地代入自己的角色，参与到故事剧情中。</b></p>\n<p data-pid=\"EuaQaLOK\">绝大多数副本的小怪除了普通攻击与简单范围攻击外没有其他攻击手段，对玩家的压力主要在于其数值强度，难于BOSS战，<b>重点考验玩家的技能安排。</b></p>\n<p data-pid=\"ZmddTd-Y\">FF14的多数BOSS战都按时间轴顺序或以一定规律释放技能，其行为很容易被玩家记忆与预测。高难副本的BOSS在按顺序释放完技能后，会发动一个长读条的技能强制团灭以结束战斗。<b>能够背板记忆的BOSS战显著控制了战斗难度，让玩家能够分出精力体验其情感氛围。</b></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"P_oFYaSG\"><b>*可能有5.0、5.3版本主线剧透</b></p>\n<p data-pid=\"YB56aMAV\">接下来选择5.0版本的4人副本——<i>末日暗影 亚马乌罗提</i>，与5.3版本的讨伐战——<i>光之战士歼灭战</i>，主要从剧情氛围方面的分析其带来的体验。</p>\n<p data-pid=\"P4-3_K-K\"><b>末日暗影 亚马乌罗提（4人副本）</b></p>\n<p data-pid=\"VOeMQM6N\"><b>剧情背景：</b>玩家与反派<i>爱梅特赛尔克</i>即将迎来决战。在决战前，一直谋划毁灭现在的世界以复活古代时期牺牲同胞的爱梅特赛尔克，反而创造了一个虚拟都市，向玩家展示了他所经历过的苦痛——古代世界毁灭于终末，国都亚马乌罗提被摧毁。</p>\n<p data-pid=\"txLcsSdE\"><b>氛围渲染：</b>副本场景主要由两部分组成——灾难下的都市与毁灭中的星球。副本关卡中随处可见被破坏的房屋与道路，以及由绝望情绪产生的灾兽。副本背景音乐复用了先前的旋律，借助玩家对旋律的第一印象——充满回忆而悲伤的古代都市，塑造出了一个彻底绝望，即将毁灭的世界。</p>\n<a href=\"https://link.zhihu.com/?target=https%3A//music.163.com/%23/song%3Fid%3D1391211261\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">末日时刻  ~ 末日暗影 亚马乌罗提</a><figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-9b502d5dd710cc5856999c94750d24bf_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1915\" data-rawheight=\"1081\" class=\"origin_image zh-lightbox-thumb\" width=\"1915\" data-original=\"https://pic4.zhimg.com/v2-9b502d5dd710cc5856999c94750d24bf_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-c0dd98346f20e331802d745c5ff01a88_b.jpg\" data-size=\"normal\" data-rawwidth=\"1915\" data-rawheight=\"1081\" class=\"origin_image zh-lightbox-thumb\" width=\"1915\" data-original=\"https://pic1.zhimg.com/v2-c0dd98346f20e331802d745c5ff01a88_r.jpg\"><figcaption>副本两部分的场景设计——灾难下的都市与毁灭中的星球</figcaption></figure><p data-pid=\"MOVNYfHU\">副本的敌人名称为<i>终末的[负面动词/形容词]</i>。BOSS名称与其技能机制名称均参考了《启示录》相关内容。</p>\n<p data-pid=\"PQLVDjgO\"><b>其他细节：</b>副本BOSS都会释放展现压迫力的技能，例如召唤能轰炸全场的陨石、用塌陷的建筑砸向战斗场地的大部分区域、在狭窄的场地用巨大的身躯冲向玩家等。</p>\n<p data-pid=\"e5fSEq_u\">前两段流程的道路上会有随机的陨石砸向地面，可能伤害到玩家，加强场景的末日氛围。</p>\n<p data-pid=\"nw9_i2PE\">副本地图用叙述代替了地点说明，场景中的天气显示为“末日”。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-fa64f73ade39e8e302ca4c02ac75581e_b.jpg\" data-size=\"normal\" data-rawwidth=\"757\" data-rawheight=\"680\" class=\"origin_image zh-lightbox-thumb\" width=\"757\" data-original=\"https://pic3.zhimg.com/v2-fa64f73ade39e8e302ca4c02ac75581e_r.jpg\"><figcaption>副本地图的一部分</figcaption></figure><p data-pid=\"zKouBdSq\"><b>剧情体验：</b>在副本中，反派让玩家亲身体验自己经历过的末日，此时的玩家也需要解决接近的严重问题，因此能够与反派产生深刻的共情，理解古代人类毁灭现在世界的理由。在先前的剧情中，反派尝试唤起玩家角色上辈子作为古代人的记忆，也让玩家对反派产生了私心，双方的矛盾由正邪对抗转为了不可调和的立场冲突，加深了剧情的悲剧元素。</p>\n<p data-pid=\"MbO1tUpr\"><b>光之战士歼灭战（8人讨伐副本）</b></p>\n<p data-pid=\"xnhq-4z2\"><b>剧情背景：</b>作为最后一名未经转世，保留最初灵魂的古代人，<i>艾里迪布斯</i>在漫长的时光中已经忘记了战斗的理由，但为了复活自己的同胞，他决定继续肩负自己的使命，以“第一位光之战士”的身份挑战玩家。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-a6e883c49f6d16a1c8bd2773d68ac4c7_b.jpg\" data-size=\"normal\" data-rawwidth=\"1729\" data-rawheight=\"1081\" class=\"origin_image zh-lightbox-thumb\" width=\"1729\" data-original=\"https://pic4.zhimg.com/v2-a6e883c49f6d16a1c8bd2773d68ac4c7_r.jpg\"><figcaption>BOSS艾里迪布斯，其形象与初代《最终幻想》的光之战士十分相似</figcaption></figure><p data-pid=\"NXQLba9R\"><b>氛围渲染：</b>副本战斗场地十分开阔，在阴暗的天色下失去了光彩。这一氛围暗示了艾里迪布斯目前的状况——坚持着自己的正义，但已经失去了背后的理由。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-bbc0d99d1b75ce80809c7ce3272e93a0_b.jpg\" data-size=\"normal\" data-rawwidth=\"1915\" data-rawheight=\"1081\" class=\"origin_image zh-lightbox-thumb\" width=\"1915\" data-original=\"https://pic1.zhimg.com/v2-bbc0d99d1b75ce80809c7ce3272e93a0_r.jpg\"><figcaption>副本中实际画面</figcaption></figure><a href=\"https://link.zhihu.com/?target=https%3A//music.163.com/%23/song%3Fid%3D1937718136\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-597fdbd70c71b7fe4ff0c5d5d781eec7_l.jpg\" data-image-width=\"650\" data-image-height=\"644\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">末路尽头（To the Edge）</a><p data-pid=\"FYXwW89A\">副本背景音乐为感情压抑的摇滚乐，同样借助玩家对相同旋律的第一印象，产生了较强的悲伤情感。歌词内容描绘了灾难中的人们诉说自己的悲惨命运，希望得到拯救。幸存的人们则不断抗争，宁愿承担罪责也要创造明天的新生。结合整段剧情，这首歌曲同时描写了双方为自己命运的抗争。</p>\n<p data-pid=\"D2MZY2mf\"><b>其他细节：</b>BOSS绝大部分技能的特效与玩家职业相同，也会使用“极限技”、“无敌”等玩家技能。副本开场与中场转场的过场动画分别致敬了初代《最终幻想》（上图）与本作2.0版本封面的角色造型。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-f157e34ad85040dbddd813c7ba108372_b.jpg\" data-size=\"normal\" data-rawwidth=\"1109\" data-rawheight=\"1222\" class=\"origin_image zh-lightbox-thumb\" width=\"1109\" data-original=\"https://pic3.zhimg.com/v2-f157e34ad85040dbddd813c7ba108372_r.jpg\"><figcaption>中场过场动画，人物造型致敬本作封面</figcaption></figure><p data-pid=\"1WgI0rcX\"><b>剧情体验：</b>副本中双方使用了相同身份——光之战士，这一剧情变化进一步淡化了双方的正邪差异、强化表现立场冲突。不同的是，这场战斗突出展现了反派方的正义，让玩家对反派产生了较强烈的同情与愧疚。 </p>\n<h2><b>二、养成系统——重点是外观</b></h2>\n<h3><b>职业升级</b></h3>\n<p data-pid=\"9D_uuB2n\">为了让玩家正常体验到所有职业，FF14角色的升级十分快速，从1级开始，玩家花费约1~2周就能升至50级，并在之后以约1周10级的进度升至满级。也就是说在目前版本下（6.0），玩家花费6周左右就能拥有一个满级职业。若玩家付费购买直升礼包，或学习起始等级更高的新职业，这一速度还会更快。<b>这一升级速度既能让玩家尽快将职业升至满级，体验满级后的更多玩法，又足够让玩家在升级过程中将职业锻炼到合格水平。从角色扮演的角度来讲，升级能直观体现角色的成长与玩家的投入。</b></p>\n<p data-pid=\"HE2vCtS0\">由于以系列其他作品为设计基础，FF14的职业升级没有任何加点项，职业技能数量固定，在达到等级、完成对应职业任务后会直接解锁与升级，不存在任何形式的分支流派。这一点<b>从职业自身限制了玩法深度，但便于开发组平衡数值，方便突出每个职业的特色（最近版本的同质化问题另说）。</b>此外，FF14的技能说明均使用攻击参数代替最终数值，例如技能说明中，攻击力固定显示为200、400，而非5382等实际伤害。<b>玩家能更直观比较、计算技能强度，进而安排其技能循环。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-4d132d498f0a4875c940983ac2f4858a_b.jpg\" data-size=\"normal\" data-rawwidth=\"1027\" data-rawheight=\"917\" class=\"origin_image zh-lightbox-thumb\" width=\"1027\" data-original=\"https://pic3.zhimg.com/v2-4d132d498f0a4875c940983ac2f4858a_r.jpg\"><figcaption>“贤者”的部分技能表，分别为主动技能与被动效果，均通过升级与职业任务直接解锁</figcaption></figure><h3><b>角色装备</b></h3>\n<p data-pid=\"-eeX78nn\">FF14的装备获取难度普遍较低，有多种途径，并且数值为线性提升。每个版本高难本掉落的毕业装备比常规途径获得的最强装备高5~25品级，两者在非高难副本中的差距甚至可以忽略，<b>降低了游戏的装备需求，让玩家能将注意力集中到通过副本上</b>。此外，装备的颜色主要用于区分其获取途径，与稀有度并无关联。<b>玩家在寻求装备时更清楚其获取途径。</b></p>\n<table data-draft-node=\"block\" data-draft-type=\"table\" data-size=\"normal\" data-row-style=\"normal\"><tbody>\n<tr>\n<td>装备颜色</td>\n<td>获取途径</td>\n</tr>\n<tr>\n<td>白</td>\n<td>生产职业制作、主线任务奖励、NPC处购买</td>\n</tr>\n<tr>\n<td>绿</td>\n<td>生产职业制作、4人副本掉落、军票兑换</td>\n</tr>\n<tr>\n<td>蓝</td>\n<td>神典石点数兑换、高难副本掉落道具兑换、所有类型8人副本掉落</td>\n</tr>\n<tr>\n<td>紫</td>\n<td>成长型武器，通过专属支线任务获得与强化</td>\n</tr>\n</tbody></table>\n<p data-pid=\"8j7vnBVI\">除了体现角色成长外，<b>装备还用于玩家体现角色身份，成为角色扮演体验的主要部分之一。</b></p>\n<h3><b>角色外观</b></h3>\n<p data-pid=\"2vXRcz5V\">比较意外的是，外观在FF14角色养成中占据了相当一部分比例。装备幻化、宠物、坐骑、时尚配饰（独立装饰性装备）、情感动作、称号等无数值的外观元素反而<b>是鼓励玩家参与各类玩法的主要驱动力。这一设计将玩家参与活动的驱动力由外在驱动</b>（因副本装等要求不得不获取）<b>转为了自己的内在驱动</b>（玩家喜欢物品外观而主动争取）<b>，产生了更强烈的游玩欲望。</b>部分玩家甚至愿意为了获得一个宠物或坐骑，反复通关副本多次；或是为了一套时装，投身于PVP中。</p>\n<figure data-size=\"small\"><img src=\"https://pic2.zhimg.com/v2-bfaf4b1f91a6f9cfa275ba2cd6bda5d9_b.jpg\" data-size=\"small\" data-rawwidth=\"679\" data-rawheight=\"1405\" class=\"origin_image zh-lightbox-thumb\" width=\"679\" data-original=\"https://pic2.zhimg.com/v2-bfaf4b1f91a6f9cfa275ba2cd6bda5d9_r.jpg\"><figcaption>“野战指挥官”时装，特定PVP地图百胜成就奖励，是很多玩家参与PVP的动力</figcaption></figure><h2><b>三、休闲玩法——钓鱼、打牌、赛鸟</b></h2>\n<p data-pid=\"1X6_8Zzc\">多种轻度玩法是FF14突出的特点之一，这些多样的娱乐活动不仅<b>能让玩家从紧张的战斗中放松心情，还能丰富玩家与世界的互动，更好以“冒险者”的身份沉浸其中。</b></p>\n<p data-pid=\"nlnVhMC3\"><b>金<u>碟</u>游乐场</b></p>\n<p data-pid=\"gEiZ0QM9\">金碟游乐场是玩家参与娱乐活动的主要场所，包括种类丰富、不同规模的休闲游戏。从需要和全世界找NPC对战的九宫幻卡，到各类几分钟就能完成的小游戏，一应俱全，沉迷金碟甚至成为了新人体验主线时的一道障碍。从金碟活动中获得的金碟币则用于兑换游乐场专属的时装、宠物、坐骑、乐谱等外观元素，<b>进一步促进了玩家的游玩动力。</b>结合时刻贴合世界观设定的美术、文案设计，金碟游乐场很好<b>调节了玩家的游玩节奏，让其像世界中的居民一样获得放松。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-8359f3388d9cdce2b1dcb0160222b0a9_b.jpg\" data-size=\"normal\" data-rawwidth=\"1078\" data-rawheight=\"496\" class=\"origin_image zh-lightbox-thumb\" width=\"1078\" data-original=\"https://pic2.zhimg.com/v2-8359f3388d9cdce2b1dcb0160222b0a9_r.jpg\"><figcaption>某个小游戏的界面，文字为原创的“艾欧泽亚文字”</figcaption></figure><p data-pid=\"BvWnqffc\"><b>生活职业</b></p>\n<p data-pid=\"YlikcYLz\">同多数MMORPG一样，FF14也有承担采集与制造玩法的生活职业。生活职业在升级与获取装备上与战斗职业类似，在获得产品时也需要依靠技能搭配提升其优质率，<b>保证了一定玩法深度，并用高难度配方为生活职业玩家带来挑战</b>。<b>围绕产品生产链的商业行为也丰富了玩家的活动类型，间接促进玩家社交。</b>此外，生活职业还有一系列以“收藏品”类型产品为基础的玩法，通过与剧情结合的方式让玩家参与到帮助NPC与战后重建的活动中，<b>让玩家从另一个方面为世界的发展做贡献，并在过程中增进与NPC的关系，生活职业本身也能丰富玩家的角色形象。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-a2bb68188394410c26405dbd21b28f0e_b.jpg\" data-size=\"normal\" data-rawwidth=\"536\" data-rawheight=\"219\" class=\"origin_image zh-lightbox-thumb\" width=\"536\" data-original=\"https://pic3.zhimg.com/v2-a2bb68188394410c26405dbd21b28f0e_r.jpg\"><figcaption>剧情中的对话选项，分别对应“战斗”、“生产”、“剧情”三个方面</figcaption></figure><p data-pid=\"Q7Ac96JP\"><b>房屋</b></p>\n<p data-pid=\"N7N2q4hR\">在FF14中，房屋是最能发挥玩家创造力的玩法，也为玩家。玩家能使用丰富的家具、墙壁等物件，搭配出多样的房屋风格，让玩家打造一个舒适的家，或是将房屋装修成活动室，邀请其他玩家进行活动，<b>是玩家间组织活动的主要场合</b>。如果是以部队（即公会）组织购买的房屋，还会提供额外活动，<b>加深成员间的交流。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-19182c5e7651e811a140b14d440e5a47_b.jpg\" data-size=\"normal\" data-rawwidth=\"1034\" data-rawheight=\"758\" class=\"origin_image zh-lightbox-thumb\" width=\"1034\" data-original=\"https://pic4.zhimg.com/v2-19182c5e7651e811a140b14d440e5a47_r.jpg\"><figcaption>设计为酒店的玩家房屋</figcaption></figure><p data-pid=\"olddxjEp\"><b>乐器演奏</b></p>\n<p data-pid=\"LBmywITm\">和现实类似，乐器给了玩家个人表达的机会，<b>从艺术方面填充了游戏的角色扮演属性</b>。在更新节拍器与合奏功能后，玩家能更方便地组队演奏，<b>享受共同努力，成功演奏曲目的成就感。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-94f7082bf9ae9f3f96260cf3c51c7361_b.jpg\" data-size=\"normal\" data-rawwidth=\"1663\" data-rawheight=\"582\" class=\"origin_image zh-lightbox-thumb\" width=\"1663\" data-original=\"https://pic2.zhimg.com/v2-94f7082bf9ae9f3f96260cf3c51c7361_r.jpg\"><figcaption>乐器演奏界面的钢琴键位与节拍器</figcaption></figure><p data-pid=\"vAx93DfW\"><b>笔记图鉴</b></p>\n<p data-pid=\"VDANE16u\">这里主要指代“探索笔记”与“鱼类图鉴”，前者通过玩家在野外地图各处激活探索点解锁条目，后者在玩家第一次钓到新鱼时解锁条目。这两本手册既<b>记录了玩家的游戏经历，也引导着玩家探索世界，发掘背后的故事。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-157a7cd4a3963bcdfbc8aead2c1d6213_b.jpg\" data-size=\"normal\" data-rawwidth=\"1082\" data-rawheight=\"647\" class=\"origin_image zh-lightbox-thumb\" width=\"1082\" data-original=\"https://pic4.zhimg.com/v2-157a7cd4a3963bcdfbc8aead2c1d6213_r.jpg\"><figcaption>鱼类图鉴中关于“上爬刺鱼”的背景描述</figcaption></figure><h2><b>四、社交系统——一个人的网游</b></h2>\n<p data-pid=\"D-F0LBN7\"><b>社交带来的身份认同与个人实现、个性表达的作用对创造角色扮演体验起到了重要作用。</b>由于将FF14作为《最终幻想》系列正作的设计理念（可能还有日本公司的奇妙思维），其刻意岔开其他同行，创造了同类游戏中独特的弱社交体验，在保持社交关系的同时尽可能减少了玩家间的冲突，这一部分将从战斗内与战斗外两点分析。</p>\n<h3><b>战斗内</b></h3>\n<p data-pid=\"zcst1shJ\">由于FF14的副本难度普遍偏低，即使是高难副本也是固定流程，能够能背板记忆，“传递炸弹”、“分摊伤害”等需要玩家配合解决的技能机制也有固定的处理方式。因此每个队员只需要按部就班，按时间轴进行各自对应的行动就能通关。这一设计<b>降低了玩家的配合要求，从而降低了玩家的社交压力与冲突概率</b>，即使是最难的绝境战副本也有机会与路人组队完成。</p>\n<p data-pid=\"u9NolrVf\">在装备方面，对于非高难副本，其通关的装等要求普遍较低。通关4人副本后，玩家会固定获得一件本职业未拥有的装备。对于高难本，玩家在每次通关后会固定获得1个兑换用道具（俗称低保，部分副本掉落2个）作为没有获得装备的补偿。零式、24人副本在开放后约半年内都有周限制，每人每周仅能获得一次装备。除高难的毕业装外，玩家有2种以上途径获取相同强度的装备，例如玩家间交易与点数兑换。以上设计<b>为玩家获得全套装备提供了可预期的进度，缓解了队员因装备分配产生冲突的情况。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-0fb5b789c550d4bd6b28f27f32b7f8f4_b.jpg\" data-size=\"normal\" data-rawwidth=\"1134\" data-rawheight=\"815\" class=\"origin_image zh-lightbox-thumb\" width=\"1134\" data-original=\"https://pic1.zhimg.com/v2-0fb5b789c550d4bd6b28f27f32b7f8f4_r.jpg\"><figcaption>用极神低保道具兑换武器的界面，以防玩家多次通关后都没有得到所需武器</figcaption></figure><p data-pid=\"smfMOz7a\">非组队情况下，通关副本后，玩家还能匿名点赞其他玩家。这<b>鼓励着玩家承担自己的团队职责，认可了被点赞玩家的能力与身份。匿名点赞的设计则保持了玩家间“路人“的关系。</b></p>\n<h3><b>战斗外</b></h3>\n<p data-pid=\"xOaoFiBO\">除了基本的聊天频道外，FF14还为玩家设计了“通讯贝”与“同好会“两种社交相关系统。通讯贝类似于APP的群聊，玩家可以灵活调整频道人数，供玩家从同服或跨服邀请关系较好的朋友一起交流，<b>满足玩家希望只和少量朋友交流的需求，也方便其跨地图、跨服对话</b>。同好会则类似于论坛，创建者会根据自己的社交需求创建对应标签的同好会，有相同兴趣的玩家也能根据标签选择加入，并在其中找到共同话题与自己乐于参加的活动。<b>独立于公会组织的同好会使得玩家能灵活加入或退出，不受利益绑定等原因限制</b>。同好会源于兴趣的社交方式<b>还能方便玩家找到有相同兴趣的玩家，更好组织、参与各类活动。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-c4b546f05ad185aae9b2f33674178d19_b.jpg\" data-size=\"normal\" data-rawwidth=\"2215\" data-rawheight=\"1331\" class=\"origin_image zh-lightbox-thumb\" width=\"2215\" data-original=\"https://pic2.zhimg.com/v2-c4b546f05ad185aae9b2f33674178d19_r.jpg\"><figcaption>公开招募成员的同好会</figcaption></figure><p data-pid=\"YmDvncNe\">公会方面，FF14通过“部队”这一组织<b>为玩家带来归属感</b>。加入部队后，玩家个人的多种活动都能积攒部队的战绩点数，用于升级部队、兑换相关活动道具或启用全部队享用的加成特效。<b>这一设计降低了玩家的贡献门槛，避免了强制参加公会活动的问题，只需正常游戏就能为部队做出贡献。多数活动的低难度也减少了玩家在公会组织的活动中花费过多精力的情况。</b>除了这些基础内容，玩家还能以部队名义购买房屋，让所有人参与装修设计，并在之后用于聚会或部队合建等活动。玩家个人也能在部队房屋中购买个人房间，获得属于自己的家。<b>有了部队房屋这一场所，玩家能感受到更强烈的归属感，装修与合建活动时的投入则强化了这一情感。</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-6653e0c5ad0ece8ca525319d853f3ff1_b.jpg\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-6653e0c5ad0ece8ca525319d853f3ff1_r.jpg\"><figcaption>装修完成的部队房屋</figcaption></figure><p data-pid=\"LGGjUHrk\">招募系统的设计<b>方便玩家进行短期组队与公开宣传</b>。通过招募面板，玩家可以设置条件，将有相同目的的其他玩家招至队伍中。除了副本组队，一些玩家也会随季节组织各类活动，或者是宣传自己的活动房屋。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-da02e7ef714fdca9c21080f493262322_b.jpg\" data-size=\"normal\" data-rawwidth=\"788\" data-rawheight=\"506\" class=\"origin_image zh-lightbox-thumb\" width=\"788\" data-original=\"https://pic3.zhimg.com/v2-da02e7ef714fdca9c21080f493262322_r.jpg\"><figcaption>宣传交易与组建副本队伍的招募</figcaption></figure><p data-pid=\"5RjjN2Ro\">FF14还针对新人（包括回归玩家）添加了指导者系统。达到条件的玩家能够认证指导者，加入新人频道教导新人。此外，指导者还有优先匹配新人或缺人队伍的“随机任务：指导者”副本匹配，帮助新人。在最近版本的更新后，指导者与新人组队时，新人还能获得经验加成。相比同类游戏的师徒系统，<b>百家饭式的指导者系统能较好地分配玩家资源，尽可能让更多新人得到指导。代表“指导者”的皇冠标记也能强化玩家的身份认同，鼓励其承担指导新人的责任。</b></p>\n<figure data-size=\"small\"><img src=\"https://pic1.zhimg.com/v2-5241a516d76a20d850d44415a1758858_b.jpg\" data-size=\"small\" data-rawwidth=\"989\" data-rawheight=\"1290\" class=\"origin_image zh-lightbox-thumb\" width=\"989\" data-original=\"https://pic1.zhimg.com/v2-5241a516d76a20d850d44415a1758858_r.jpg\"><figcaption>认证指导者的界面，完成认证后就能在名字前挂上对应的皇冠标记</figcaption></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"ifT6S4OQ\">参考资料：</p>\n<a href=\"https://link.zhihu.com/?target=https%3A//ff14.huijiwiki.com/wiki/%25E9%25A6%2596%25E9%25A1%25B5\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-9a7b6bc31c1dba1f942b2c5ecfa3a11c_qhd.jpg\" data-image-width=\"1200\" data-image-height=\"600\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">最终幻想XIV中文维基</a><a href=\"https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/BV19t411u7R4\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-5ad32e3b560e0e909e2db2948fceab97_qhd.jpg\" data-image-width=\"1728\" data-image-height=\"1080\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【FF14】5.0超浓缩考据攻略 末日暗影 亚马乌罗提 + 哈迪斯歼灭战_哔哩哔哩_bilibili</a><a href=\"https://link.zhihu.com/?target=https%3A//www.bilibili.com/video/BV1Mt4y1q7UJ\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic4.zhimg.com/v2-4c1f6159d8952ee75ff22e8f4be18e3b_qhd.jpg\" data-image-width=\"962\" data-image-height=\"601\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">【熟肉】5.3最终BOSS音乐专业赏析【To The Edge】【by 音乐制作人 Alex】_哔哩哔哩_bilibili</a><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/chhim?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">CHHIM</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/530667682?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"而立之年，我当择何处而居？","date":"2022-06-23 03:29:27","description":"读书时，曾梦想工作后可以来去自由，四处云游。毕业后才知道机票很贵，假期很少。\n到了而立之年，不得不去思考自己该在何处停留肉身并安居立命。经历了这几年的选择和评估，暂时打算定居上海，隔离在家不妨把这个过程分享给大家，也许对于尚在考虑这件事的小伙伴会有所启发。<a href=\"https://sspai.com/post/72677\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72677"},{"title":"如何看待北京近期的「自行车骑行热」和一车难求等现象？","date":"2022-06-23 03:17:24","description":"\n<p data-pid=\"R-BfXxnK\">知乎小编私信通知我被很多人投诉了，看来是说实话得罪了不少装AC的小朋友，哈哈哈哈。</p>\n<p data-pid=\"dosDosFk\">那么好，这两天我正在帮朋友闲鱼捡垃圾组一个车，大框架是外走线碳架+拆车铝轮+顺泰单盘，速联RIVAL拆车曲柄，除了车架是台湾厂的库存，其他全部国产垃圾，过几天电子秤上见，价格基本控制在3K以内，然后会去爬杭州的龙井山，并骑一趟环千岛湖，看看会不会断架摔车之类的，上一台这种闲鱼垃圾车已经骑了半年了，不好意思连异响都没有，改配置减重过程如下图：</p>\n<p><img src=\"https://picx.zhimg.com/v2-a6d1c12b527250767ab5e31f7e792178_720w.jpeg?source=b1748391?rss\" data-rawwidth=\"1280\" data-rawheight=\"2560\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-a6d1c12b527250767ab5e31f7e792178\" data-watermark-src=\"v2-1c7d72834ab2c37052e2009d3deaf89e\" data-private-watermark-src=\"v2-ff13b4b35feb6103b5cba90885a49db7\"></p>\n<p data-pid=\"GKAF7NH_\"><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-7c332986a07f94136f67d886a1dcd422_720w.jpeg?source=b1748391?rss\" data-rawwidth=\"1276\" data-rawheight=\"1702\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-7c332986a07f94136f67d886a1dcd422\" data-watermark-src=\"v2-1237e2be2db598bee8688f0e9343db35\" data-private-watermark-src=\"v2-af4c5a3fc3191aafe92f3deaee4a0b3c\"></p>\n<p><br></p>\n<p><img src=\"https://picx.zhimg.com/v2-4a711604d4245ba9b92526bb84fe563d_720w.jpeg?source=b1748391?rss\" data-rawwidth=\"1536\" data-rawheight=\"2048\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-4a711604d4245ba9b92526bb84fe563d\" data-watermark-src=\"v2-ace5ae33b7c2cdfbd6f896d71f24f6f6\" data-private-watermark-src=\"v2-843113585cb1449157f74e49fd85f266\"></p>\n<p data-pid=\"s5zNI2Uz\">我们中年骑游党根本无所谓什么电变不电变的，百公里均速25要什么电变，tiagra都嫌贵。</p>\n<p data-pid=\"7q4Ti6sZ\"><b>祝各位公路小将早日出国大环赛为国争光，以计指导为榜样，不要来和我这种闲鱼垃圾佬+中年骑游党较劲</b></p>\n<p data-pid=\"nAnJinEN\">…………更新的分割线…………</p>\n<p data-pid=\"MqcmhSFW\">点赞的人多起来了，我再补充一下：所谓“骑行热”没啥好看待的，业余爱好嘛，玩儿嘛，体育锻炼嘛，不要太当真，这一阵阵一波波的，从极少数到骑行热，再到退坑退烧，留下极少数一群忠实用户，各行各业都逃不出这个规律去。</p>\n<p data-pid=\"kjCuY8II\">至于为什么这两年“骑行热”了，一点都用不关心，想骑就骑，不想骑就不要骑，觉得好玩的可以一直玩到老，玩到死，社会面上这个事情热不热跟你一点关系都没有。有人跑了十年马拉松，有人骑了十年摩托车，有人打了十年羽毛球，而非体育运动类的爱好就更可以长时间玩了，有人种了二十年花，有人养了三十年金鱼，有人写了四十年毛笔字，有人玩胶片相机玩到进骨灰盒了。</p>\n<p data-pid=\"eYSJjVYA\">至于一车难求，那就更简单了，市场规律而已，如何看待？答案就是与你无关，你是开车店了还是顺泰研发部总监还是禧玛诺华东总代理还是自行车省队教练？你是吃这碗饭的吗？你能改变市场规律，扭转市场趋势？作为消费者，你唯一能做的就是付出适当代价，获得合理回报</p>\n<p data-pid=\"mHc1KHzT\">什么叫适当代价？有人觉得一万八是适当代价，有人觉得一千八又不是不能用。有人觉得半年时间是适当代价，有人觉得我掏了钱就要当场骑走。你问问自己具体是哪个档次？</p>\n<p data-pid=\"6el5DbPz\">那什么是合理回报呢？那就是原价一万八的并没有贬值到九千八，一千八的也并没有三个月报废原地散架。等半年的终于可以发朋友圈了，有一百五十个赞，当场骑走的也爬了半年坡了，功率提升了一百五十瓦。你问问自己具体是哪个档次？</p>\n<p data-pid=\"s2cdI8ce\">……………原答案分割线……………</p>\n<p data-pid=\"pFoUG0_d\">火个毛线，绝对小众人群，一车难求个毛线，非要买禧玛诺套件和全新品牌大组车那当然一车难求，国产碳架拆车铝轮顺泰套件KMC链条，三天内组不出车你用佳威线管勒死我，不太挑的话，信不信含快递都能三天搞定</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/coolkfj?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">龙兄</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/537693355/answer/2532368490?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">120 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/534794388?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">新一轮骑行潮兴起，自行车和相关装备的销量直线上升，订单已排到 2024 年，如何看待此数据？</a><br><a href=\"http://www.zhihu.com/question/537963135?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">法国电动自行车市场增长迅速，背后的原因是什么？</a><br>\n","link":"http://www.zhihu.com/question/537693355/answer/2532368490?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"孩子在班级各种期末评优都没中，做父母的该怎么看？","date":"2022-06-23 02:28:39","description":"\n<p data-pid=\"MfLRUYzS\">如果是我，我会先和我家孩子商量，问一下她到底是怎么想的。她自己想不想要这些评优，她觉得和班上小朋友比，自己有哪些不足，自己是否有实力去拿这些评优，还需要做哪些努力，需要我们家长做什么。然后告诉她作为父母你们是怎么想法，希望她达到什么样的水平。家长和孩子先自己家里统一一下思想。</p>\n<p><br></p>\n<p data-pid=\"uFz8YtF2\">然后再找老师聊一下，听听老师对孩子的评价。老师见过的孩子多，看孩子水平的能力肯定比我们第一次当家长的更高，也更客观（不像我们家长有亲妈滤镜）。只要老师水平够，有师德，那么他能给孩子比较客观公正的评价和推荐。他会告诉我家的孩子在同学中是什么水平，孩子有哪些优点缺点，是否有能力拿到这些评优。</p>\n<p><br></p>\n<p data-pid=\"AZVB_9w3\">最后结合孩子，老师和我们三方的观点，再做决定下一步该怎么办。万一孩子自己不愿意或者真的没那个实力，接受孩子能做到的最好而不是和其他人比。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/sijie-gu?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">顾一二</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/419176329/answer/2532184792?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">12 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/527527437?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">学校里老师不公平对待孩子?</a><br><a href=\"http://www.zhihu.com/question/532342597?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">怎么去对待态度差，不学习的孩子？</a><br>\n","link":"http://www.zhihu.com/question/419176329/answer/2532184792?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：多亲公布新款手机、亚马逊 Alexa 将可以模拟人声等","date":"2022-06-23 00:39:19","description":"多家科技巨头联合制定元宇宙技术标准、索尼将放弃参加 2022 科隆游戏展。<a href=\"https://sspai.com/post/73954\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73954"},{"title":"郑州发布关于部分村镇银行储户被赋红码问题调查问责情况的通报，有哪些信息值得关注？","date":"2022-06-22 12:33:30","description":"\n<p data-pid=\"lQwQmVYi\">6月22日下午18:00 ，郑州市纪委监委通过微信公众号“清风郑州”发布《关于部分村镇银行储户被赋红码问题调查问责情况的通报》（下称“问责通报”），对近期颇受关注的河南部分村镇银行储户健康码被“赋红码”事件进行了通报。</p>\n<p data-pid=\"9u702FUW\">通报称，经查，郑州市委政法委常务副书记、市新冠肺炎疫情防控指挥部社会管控指导部部长冯献彬，团市委书记、市新冠肺炎疫情防控指挥部社会管控指导部副部长张琳琳，擅自决定对部分村镇银行储户来郑赋红码，安排市委政法委维稳指导处处长赵勇，市大数据局科员、市疫情防控指挥部社会管控指导部健康码管理组组长陈冲，郑州大数据发展有限公司副总经理杨耀环，对储户在郑扫码人员赋红码。据统计，共有1317名村镇银行储户被赋红码，其中446人系入郑扫场所码被赋红码，871人系未在郑但通过扫他人发送的郑州场所码被赋红码。</p>\n<p data-pid=\"4EAoBG2N\">冯献彬、张琳琳、陈冲、杨耀环、赵勇等同志法治意识、规矩意识淡薄，违反《河南省新冠肺炎疫情防控健康码管理办法》及健康码赋码转码规则，擅自对不符合赋码条件的人员赋红码，严重损害健康码管理使用规定的严肃性，造成严重不良社会影响，是典型的乱作为，冯献彬、张琳琳同志对此分别负主要领导责任、重要领导责任，陈冲、杨耀环、赵勇同志对此负直接责任，应予从严从重问责追责。</p>\n<p data-pid=\"dODDmQ8I\">郑州市纪委监委给出处理意见称，依据《中国共产党纪律处分条例》《中华人民共和国公职人员政务处分法》，经研究决定，给予冯献彬同志撤销党内职务、政务撤职处分；给予张琳琳同志党内严重警告、政务降级处分；给予陈冲同志政务记大过处分；给予杨耀环、赵勇同志政务记过处分。</p>\n<p data-pid=\"VzDYaHGW\">第一财经查询发现，冯献彬长期在郑州公安系统工作，2021年底，河南当地媒体报道称，原任郑州市公安局党委委员、副局长的冯献彬已任郑州市委政法委常务副书记。</p>\n<p data-pid=\"SgeZBZe2\">《问责通报》一公布，也很快在一些村镇银行储户中间引起反响。</p>\n<p data-pid=\"tGIrBExg\">“我们之前也没跟郑州市打过交道，我的信息，都在禹州新民生村镇银行。”一名接受第一财经记者采访的储户说，自己目前仍感疑惑的是，郑州市有关部门是如何掌握他们的信息，并且精准地将健康码“红码”赋予给他们这些储户的呢？“是谁，向这些部门提供了我们的信息？”</p>\n<p data-pid=\"k40tl2N1\">目前，伴随着郑州市纪委监委的《问责通报》，相关细节或有望得到进一步解答。</p>\n<p><br></p>\n<a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"http://link.zhihu.com/?target=https%3A//www.yicai.com/news/101452092.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">郑州通报“红码”事件调查情况，储户：谁泄漏了个人信息</a><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/di-yi-cai-jing-58?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">第一财经</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/538986890/answer/2540274150?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">4494 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/538989462?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何看待郑州关于部分村镇银行储户被赋红码问题调查问责情况的通报？</a><br><a href=\"http://www.zhihu.com/question/538987135?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何看待郑州通报部分村镇银行储户被赋红码问题：多名干部被处理？</a><br>\n","link":"http://www.zhihu.com/question/538986890/answer/2540274150?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"为什么说舟山观音法界让人叹为观止？有哪些原因？","date":"2022-06-22 09:40:54","description":"\n<p data-pid=\"r5Cwkzfk\">今天这篇文的主角——<b>舟山朱家尖岛的观音法界</b>。（好吧，其实没有沪 ‍♀️）</p>\n<p data-pid=\"XcMpWoKo\">之前年少无知写牛首山的时候，我说牛首山是国内最壕的佛教景区，评论区立马有朋友来打我脸：不，观音法界有过之而无不及！</p>\n<p><img src=\"https://pic3.zhimg.com/v2-fdad5551444e9f7e03b0f1a1ffc5a844_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"719\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"xLbBkR8Y\">去做了下功课，发现观音法界的确不一般。它是以观音文化为核心，集观音文化之大成的主题博览园。其中最核心的观音圣坛还荣获过<b>“中国建设工程鲁班奖”</b>。</p>\n<p data-pid=\"pfkvbzp9\">据说整个景区，<b>耗资过百亿。</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-0dc5c817260a23f7fb1818ccd593f315_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"U8-qHbaL\">众所周知，舟山普陀山是必去的观音道场，所以在隔壁的朱家尖岛有一座观音博览园，倒也正常。</p>\n<p data-pid=\"nWFqirMZ\">正好之前去舟山南苑海上丝绸之路酒店打卡，我和摄影师妮子就顺道去观音法界朝了个圣。</p>\n<p><img src=\"https://pica.zhimg.com/v2-0a7acce99acb36785377070821103fc4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"FSu_p-J4\"><b><i>观音浓度过高的观音圣坛</i></b></p>\n<p data-pid=\"JS1Obc2d\">整个观音法界景区其实很大，包含<b>观音圣坛、观音公园、观音村，以及佛学院</b>等。其中最值得细逛的当然是观音圣坛。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-e51808d8caf6a12b064274bb96abd149_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"719\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"oIBBRnnb\">平常在朱家尖岛打车路过圣坛的时候，很难不留意到它，因为它的建筑造型实在奇特，乍一看有些异域，其实很有讲究。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-cd2a5060e891f6fb4e7952ca9c66e8a7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"vFAfO9aL\">它由大台阶、基座、莲瓣、塔身、背光和毗卢貌六大部分构成。据说设计的初衷是要让“圣坛即观音”，不知道朋友们有没有看出来，这其实是<b>观音菩萨趺坐在莲座之上</b>。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6b7a8a0f82c87337c9bacb58273abd6b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"ZBkD-_AY\">走近观音圣坛，大台阶之上是一圈熟悉又亲切的欧式回廊，仿佛是牛首山佛顶宫的复制粘贴。</p>\n<p data-pid=\"GG3Nt_Os\">分享一点显而易见的知识，<b>佛顶宫、梵宫和观音圣坛的室内设计其实出自同一团队</b>，所以会有许多相似的地方。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-d50efac5af76f708549d7570c0b4a377_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"G94YaqA7\">老规矩，进圣坛需要<b>穿鞋套</b>，鞋套的布料质感还挺好的。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-03ab37e624c3f88baeb9e3aefe9d8477_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-b0d9d6a9f8fd9d5ab6c937b68ab8a09c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"pA1_g812\">不同于佛顶宫和梵宫的金碧辉煌，观音法界是以白色为底色的，墙壁都是<b>汉白玉</b>，一下子显得低调了不少。</p>\n<p data-pid=\"7Gz_Q7C9\">圣坛内是<b>明令禁止焚香</b>的，只能参拜。但圣坛内部弥漫着一股很独特的檀香味，是法界特调的香。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-dddc5ded05734900b1785ce4e33df1b6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"962\" data-rawheight=\"1441\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-94f89728ec74c1d3bb0859f31977f9c2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"962\" data-rawheight=\"1441\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"kTVn8AQ6\">整座观音圣坛一共有九层，其中有可看性的是<b>一二三四六七层</b>（第四层是灯光秀观赏层）。五层是电梯转换层，八九层暂未开放。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1e60efdc3c78a42003e89e490f768ff5_720w.jpg?source=b1748391?rss\" data-caption=\"*这座是在“须弥山”之上的韦陀天尊\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"d3C1fHw2\">正确的朝圣姿势是<b>每层绕顺时针逛</b>，一层层往上即可。</p>\n<p data-pid=\"8zlCgdET\">吸取上次牛首山佛顶宫我全程看不懂的教训，这回我特意花钱请了个讲解，会陪你逛一二三六七层。</p>\n<p data-pid=\"VOwtVeI_\">请个讲解还是挺值的，她们并不是一昧地“背诵课文”。我作为一个佛学小白，问了许多不着边际的问题，但讲解员都有问必答，知识储备很强大。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-cfc69f872c646887dffdc6412e954221_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"-CIGm9AD\"><b>第一层：圆通大厅</b></p>\n<p data-pid=\"biG_3IFs\">整座观音圣坛，最让人为之震撼的就是圆通大厅，它是目前<b>世界上佛教建筑最大的穹顶空间</b>，中庭做成了佛教<b>“须弥山”</b>的建筑形态。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-566464a5f784954f9cb28b427f13c8f8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"ytGokmhV\">你有过被几百尊观音菩萨凝视到密集恐惧症发作，头皮发麻，甚至动弹不得的体验吗？</p>\n<p data-pid=\"2ssAe4EW\">在圆通大厅，是真的有可能发生的。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-4f954f43fc204302452ae4b723e24ec7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"962\" data-rawheight=\"1441\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"e_8cEoph\">穹顶上有整整<b>三百一十座毗卢观音的正（法）身像</b>。</p>\n<p data-pid=\"I2_tI1XL\">全国供奉观音菩萨的正（法）身的寺庙极少，最知名的就是隔壁普陀山岛第一大寺普济寺，圆通宝殿里供的是毗卢观音正身。</p>\n<p data-pid=\"7YA5Bws4\">全世界大概只有在观音法界，能如此高密度地看到这么多观音正身像。</p>\n<p><img src=\"https://picx.zhimg.com/v2-7c42bd16d37c87ff1a2d5e720bf19760_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"xIVAPZZA\">c位的千手观音是<b>桧木木雕</b>，属于非物质文化遗产，雕刻得极为精美，佛像都栩栩如生。</p>\n<p data-pid=\"iVI6QZOe\">巨大的莲花台上，罗汉和仙人们围绕着千手观音。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-7988a6abad4e9787f529ee7a8e80dfcf_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"719\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"JQ--IAzz\">千手观音前有一个<b>祈愿箱</b>，可以在殿外领取心愿卡，写下自己的愿望投进箱子。总归这里的观音菩萨那么多，听到心愿的概率也会大些。</p>\n<p><img src=\"https://pica.zhimg.com/v2-720735d8e879e01c95af7acb104d3ddf_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"9PobyoZe\"><b>第二层：万缘层、第三层：普门层</b></p>\n<p data-pid=\"2jpRnFC5\">第二层、第三层展出的是一些中小型的<b>金铜佛造像</b>，不仅有观音造像，还有释迦牟尼佛像等，全是来自全球四面八方的香客捐赠，佛像年代可以从唐宋元明清追溯到汉魏，价值无可估量。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-12d6a4f037585fdeee5508fde1cc658f_720w.jpg?source=b1748391?rss\" data-caption=\"*这一part的图都不是在二三层拍的\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Gv5VdnZW\">第二层有<b>震旦慈怙</b>、<b>旃檀妙相</b>、<b>花开见佛</b>和<b>宣政圣像</b>四个展厅，第三层有<b>普门总持</b>、<b>十方如来</b>、<b>梵海清音</b>三个展厅。</p>\n<p data-pid=\"6ZgxVtWD\">因为这些佛像年代久远，出于保护的目的，这两层是<b>不允许拍照</b>的。</p>\n<p><img src=\"https://pica.zhimg.com/v2-aa0690487044bd7dfb49a8b741cafaf5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"usYARw6s\">如果没请讲解，可能也就是走马观花看一看。但请了讲解的好处，就在于可以被科普一些本应该知道的冷知识，比如人们挂在嘴边的阿弥陀佛，其实就是无量寿佛，而不仅仅只是一句佛教口头禅。</p>\n<p data-pid=\"-QDkn80W\">再比如《西游记》里“如来佛祖”的说法，其实是不正确的。“如来”和“佛”同是一切佛的统称，理论上并不能连在一起用。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f2c524049d3d7e1adcc8a38e9da00686_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"UORLADxN\"><b>第四层：紫竹层</b></p>\n<p data-pid=\"2YMFK9cY\">不像佛顶宫、梵宫有真人歌舞表演，观音法界只有一个叫作<b>《观音纳须弥》</b>的灯光表演，是投影在中庭的“须弥山”上的，最佳观赏位就在第四层。</p>\n<p data-pid=\"FVCSigmY\">上下午各有一场，上午的时间是10:50am，下午的时间是3pm。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-60f87fa5fca6471d1c0e128c5590f778_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-86c0ca60d22211e1ef6c00cd6fa21f1e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"3HJ1MAA7\">表演的时长大概四分钟多，声光电的效果还挺沉浸，浅做了几张gif，朋友们感受下。</p>\n<p><img src=\"https://pica.zhimg.com/v2-587ee6a568ae114ae532e417c5660899_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-dc7e92eb205fe6f69c46f6bb511fb288_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-3c58629c5bf45a4df1e36d3611729db3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\"></p>\n<p data-pid=\"pPQO2lRJ\"><b>第六层：法雨层</b></p>\n<p data-pid=\"1dKP97ur\">到了六七层，就可以像去寺庙那样，开始朝圣礼佛，这两层的佛像大小和寺庙内无异。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-185741d509102e3f90a8060da9a13e2b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"x1NS_obz\">第六层设有汉魏，唐宋，明清三个殿，展出的是观音菩萨的<b>三十三种分（化）身</b>。</p>\n<p><img src=\"https://pica.zhimg.com/v2-67fd926917ca5286a245cd1131c087a7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-00c316422173a610107f9febee62497f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"xwScuvwi\">在这层你会发现观音的分身也有（辟支）<b>佛身</b>，也就是龙头观音。听讲解员分享，观音菩萨的功德其实早就可以修成佛，但他却选择停留在菩萨位，继续帮助世人。这大概也是观音菩萨在人们心中地位高的原因吧。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-f04bbe301b8c4596090564e56c1a5c80_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"DXnsd5LG\">在这一层参拜的时候，请别忘了抬头，有一枚精巧绝伦的<b>团龙藻井</b>让我和妮子仰头盯了好久。（具体在哪个殿忘了 ‍♀️）</p>\n<p data-pid=\"06lViPyC\">团龙是高贵、尊荣的象征，又有攘除灾难、带来吉祥的寓意。</p>\n<p><img src=\"https://picx.zhimg.com/v2-979bfb1677b0d35c9872f36a6e706a3a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"pSYHWB-q\">这层还有一个<b>禅修抄经室</b>，如果时间充裕的话，可以在这里静下心来抄抄经。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-e9f298cfd833fb9f1c78c2d8d115b47f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"S5Dy-EA9\"><b>第七层：慧济层</b></p>\n<p data-pid=\"8PeNPgpN\">七层也同样是礼佛空间，有他度观音、普陀观音、六道观音三座大殿。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-a5a3a600881b085590f213018e05d3e7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"S-1bEeP8\"><b>他度观音</b></p>\n<p data-pid=\"U9t9a4Wq\">他度观音殿里展出的，是我国西藏地区以及其他国家的观音像。</p>\n<p><img src=\"https://pica.zhimg.com/v2-cf9125bca98b322bab8d983c39b18fc9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"yqDlxsxi\">不同地方的观音像，因为年代或是当地风俗的差异，都会有一些不同。像藏传佛教中的观世音菩萨，多以度母的分身出现（也就是女身观音）。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ff723e01f5e5c650b960d2b2b48688a8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"poKAvfpl\"><b>普陀观音</b></p>\n<p data-pid=\"9PEbOW3T\">整个观音圣坛，最金光闪闪<b>佛光普照</b>的殿就是普陀观音殿。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-b2127da222ab84a7b5b6ae482994be0a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"962\" data-rawheight=\"1441\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"wvNnwLeP\">朋友们，点题了，那些在普陀山岛找不到，或者只是匆忙拜一下的观音造像们（比如送子观音、杨枝观音等），在普陀观音殿可以一次性全部拜完。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-0491d630e2e5074885af9e0373e2ef32_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"4WnMQhIu\"><b>六道观音</b></p>\n<p data-pid=\"GCYT-eOj\">六道指的是地狱、饿鬼、畜生、修罗、人间以及天道。其中地狱、饿鬼、畜生是三恶道，修罗、人间、天道是三善道。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-96c99377a3440e3989f70c3858eb6d8d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"PYARJ5Xf\">这个殿里可以看到许多凶神恶煞、张牙舞爪的造像。</p>\n<p><img src=\"https://pica.zhimg.com/v2-a8e2ba04c1b9353ace350b6d4c823eb3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Wg5pKEbk\">整座观音圣坛适合先请讲解，跟着浅拜一遍，被科普到有一定认知之后，再慢慢细逛。尤其是二三层的金铜像，虽然小，但工艺做得极是精美。</p>\n<p data-pid=\"7V32fPsG\">噢对了，在圣坛的负一层，既能用些简餐，还能买一些<b>周边</b>，比如圣坛独有的香氛、开过光的佛串、小型的佛造像、护身符、帆布包等。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-6059318d4a69ca3564ce0b1d4b74b9f4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-528a3d267922cd683224fda15e49ed96_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"tKD-2rKA\"><b><i>观音圣坛周边</i></b></p>\n<p data-pid=\"3MTOM_Qy\">和观音圣坛比起来，观音法界其他的景点都会稍显逊色，就适合散散步，或者坐在公园里冥想。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-6ad1a18ace83884787b7f27db8a794e0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"B4iR2wCA\"><b>善财楼、龙女楼</b></p>\n<p data-pid=\"wqK4bwNH\">观音圣坛遵循“一主两从”，主楼自然圣坛，两侧就是二楼拱卫：善财楼、龙女楼。</p>\n<p data-pid=\"IFwv-0b1\">目前这两座楼都只开放第一层，有一些展品可以看。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-415956899e1e777a34d47fdb4727c06c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"962\" data-rawheight=\"1441\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-6ba06edbe399da76df63ee8ff5a88469_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"962\" data-rawheight=\"1441\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"-MrORIoD\">仔细观察地话，会发现圣坛严格遵循着对称布局，就连圣坛前的石雕狮子和石雕大象，也有两对。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-2e3fd413a6b9834560bfd838b21c83df_720w.jpg?source=b1748391?rss\" data-caption=\"*另一边还有一对\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"ROG7Bjar\"><b>观音公园</b></p>\n<p data-pid=\"CJcEvxXM\">我们当时去观音法界的时候，是个有些闷热的午后，浑身都黏糊糊得不舒服。但身处圣坛旁边的观音公园，听着溪水潺潺的时候，真就有一股从心底冒出来的清凉，这大概就是佛教圣地得天独厚的灵气。</p>\n<p data-pid=\"jSdGZyy7\">整个观音公园里有小南海、行念谷、福田花雨、幽篁里、修慧谷、梵山云起等景观，十步一景。</p>\n<p><img src=\"https://pica.zhimg.com/v2-8e2f1a4ac2e3749d3b383032eba9afa9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"ZNlJGtD9\">建议朋友们在观音法界安排大半天的时间，它是来朱家尖岛不容错过的一个景点，也适合作为去完普陀山岛的第二站。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-02d103fe9d0ea35d0afb0a99edd8469c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"b1AIpfPf\">三大佛教“壕门”已解锁了两门，看来是时候得把无锡的灵山梵宫也安排上了～</p>\n<p><img src=\"https://pic3.zhimg.com/v2-cd423048b49896bf89dc3dee7e9a354f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"962\" data-rawheight=\"1441\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"t-G4fmaV\"><br></p>\n<p data-pid=\"-ej7GWqJ\"><b>/ 舟山观音法界 /</b></p>\n<ul>\n<li data-pid=\"OVzPjGTF\">\n<b>地址</b>：浙江省舟山市普陀区香莲路（朱家尖）</li>\n<li data-pid=\"qWK8YRBM\">\n<b>开放时间</b>：8:30am-5pm</li>\n<li data-pid=\"QhEJSezq\">\n<b>香花券</b>：90rmb/人</li>\n<li data-pid=\"QU9m465k\">\n<b>讲解收费：</b>120rmb/1-5人；170rmb/6-10人；220rmb/11-15人，讲解时长在80min左右</li>\n<li data-pid=\"Al6LGDUA\">\n<b>周边酒店推荐：观音村居士学院</b>，属于观音法界的配套，酒店内即可抄经礼佛，入住会附赠两张观音法界香花券；<b>舟山海上丝绸之路酒店</b>，距离观音法界车程10min左右，是全舟山最好的酒店，适合度假</li>\n</ul>\n<p data-pid=\"eV8Skuut\"><b>相关阅读</b></p>\n<p data-pid=\"QXzWv9ZK\"><b>普陀山攻略：</b><a href=\"http://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzA4MDQ3NDkxNA%3D%3D%26mid%3D2247766000%26idx%3D1%26sn%3Dbd2f832557aac88660ad0876a2866664%26chksm%3D9fad29bda8daa0abcaf340cb964122016035611230aedbd87532499be3c83ae624b748fb67a8%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">人生必去的普陀山，超全拜佛攻略整理好了！</a></p>\n<p data-pid=\"zOXMkZtO\"><b>南京牛首山：</b><a href=\"http://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzA4MDQ3NDkxNA%3D%3D%26mid%3D2247692515%26idx%3D1%26sn%3Ddfd6a68d812c172952376727fb182e81%26chksm%3D9fae16aea8d99fb85029d3c09c4335500755e5395b2d6b9a5257849ced299783f483aadaa9b9%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">去了可能是国内最“壕”的佛教景区，一整个被惊住！</a></p>\n<p data-pid=\"NUaEzSaM\"><b>南京大报恩寺：</b><a href=\"http://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzA4MDQ3NDkxNA%3D%3D%26mid%3D2247563303%26idx%3D1%26sn%3Df475ebed0d001d554c823ff294928ae1%26chksm%3D9fa01e6aa8d7977c0b3448d89a219f5488716ecfbf45a8fb831e8628d5c65ba1a63a57284c8b%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">南京大报恩寺：一座寺庙的前世今生</a></p>\n<p data-pid=\"h-leTNcg\"><b>天台国清寺：</b><a href=\"http://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzA4MDQ3NDkxNA%3D%3D%26mid%3D2247720855%26idx%3D1%26sn%3D6494fa17ea4eaa530c0b386bae56779c%26chksm%3D9fae79daa8d9f0cccff19eff7400647be43701ae439fb8497539e9f6ff999751c69652ccfcf3%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">它或许是国内最值得去的寺庙之一</a></p>\n<p data-pid=\"RzLYkP84\"><b>杭州寺庙：</b><a href=\"http://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzA4MDQ3NDkxNA%3D%3D%26mid%3D2247573962%26idx%3D1%26sn%3Df702e5741c7cfdd3b0f0aa480d3c38e0%26chksm%3D9fa04787a8d7ce91225551ecfe094fe4f4a155a4cef1842aeef95c02391b853ee706b77599f0%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">杭州终极拜佛攻略｜走这条路，一天解锁灵隐法喜7大宝藏寺庙！</a></p>\n<p data-pid=\"6VWjkGFO\"><b>南京寺庙：</b><a href=\"http://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzA4MDQ3NDkxNA%3D%3D%26mid%3D2247703576%26idx%3D1%26sn%3D99f5cf2ae0cf6593c86c04556f265702%26chksm%3D9fae3a55a8d9b3433c2ec90118e2736e3f2c6f61a2884f77072e1c184fc9f49b1bab32b0d998%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">南京最美的四季风景，都藏在这里了！</a></p>\n<p data-pid=\"pxcZatHF\"><b>北京寺庙：</b><a href=\"http://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzA4MDQ3NDkxNA%3D%3D%26mid%3D2247704428%26idx%3D1%26sn%3D6b8dea7da46afcd995ea5ebe0cc58764%26chksm%3D9fae3921a8d9b037d8b3222a7efb156a7494edd8f801d5954602ee6fe90446e4dd91a975ef97%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">看展喝咖啡、赏壁画、听古乐…这座城市的寺庙也太厉害了吧！</a></p>\n<p data-pid=\"TAJzJ4B2\"><b>宁波寺庙：</b><a href=\"http://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzA4MDQ3NDkxNA%3D%3D%26mid%3D2247636042%26idx%3D1%26sn%3D1e6dee93c06223defd83ec8c029be479%26chksm%3D9faf3207a8d8bb117b608113c393ecd6c13719f0f6a339c1bbc7aa005c3275264b6cf35c2bb2%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">别再说什么小京都了，宁波这些寺庙来打脸了！</a></p>\n<p data-pid=\"5BdckUfi\"><b>世界寺庙：</b><a href=\"http://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzA4MDQ3NDkxNA%3D%3D%26mid%3D2247490903%26idx%3D1%26sn%3D84f3e16db7400608196617e3d75cba7b%26chksm%3D9fa2fb1aa8d5720ca47482cc63e870101c0baaa888df2fe37fb5f6a8dc57f234c8648d117cd9%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">寺庙，其实是个很有趣的地方啊</a></p>\n<p data-pid=\"BZZqjmSS\"><b>舟山海上丝绸之路酒店：</b><a href=\"http://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzA4MDQ3NDkxNA%3D%3D%26mid%3D2247776086%26idx%3D1%26sn%3Daf989e0340cd3b38bfe7387709950077%26chksm%3D9fad511ba8dad80d5ef5c00c1175bed6a449b056cc533bf44609c851dfb92961519e0e5b2090%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">住了这家海边酒店，一不小心就横跨了“欧亚非三大洲”！</a></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhu-yin-lun?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">嬉游君</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/523949149/answer/2532589956?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">8 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/522788444?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">什么时间段去普陀山祈福人少还不失氛围？</a><br><a href=\"http://www.zhihu.com/question/537099983?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">普陀山一日游，有哪些攻略值得分享？</a><br>\n","link":"http://www.zhihu.com/question/523949149/answer/2532589956?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"光荣的《太阁立志传 5 DX》现已上线，游戏体验如何，符合预期吗？","date":"2022-06-22 08:02:58","description":"\n<p data-pid=\"OBu7urDs\">花一个月时间搞定了太阁5DX的全收集，差不多可以谈谈这个问题了。得庆幸家用机版增加了历史上的锅煮五右卫门事件，让PC版里最难拿的一张CG图现在随随便便就能拿到，不然我现在恐怕还在奋战当中吧。不过因为疫情缘故国际快递停运，导致之前订的实体典藏版现在还没送到，只好多花了点钱买了数字版。</p>\n<p data-pid=\"BM3ZftK8\">下面是战果：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-c354466eecb7eefd35fe5c883b881ff4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"898\" data-rawheight=\"363\" data-watermark=\"original\" data-original-src=\"v2-c354466eecb7eefd35fe5c883b881ff4\" data-watermark-src=\"v2-cf4dcc38fd51b31e31e1c2cc6ad0aad5\" data-private-watermark-src=\"v2-43c239c69ab2a0600aad62d594ec3a7d\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-6c8612378baebc2039e5b6d2bc577692_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1602\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-6c8612378baebc2039e5b6d2bc577692\" data-watermark-src=\"v2-be3f7333d5675bb549b7b23b13ab1622\" data-private-watermark-src=\"v2-90cc42fb543b539dcfa67d675e6bdefd\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-7c83a1ae5953c137c730072419b2e087_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1602\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-7c83a1ae5953c137c730072419b2e087\" data-watermark-src=\"v2-40eb27097a7940f18dcae50bd4d1777b\" data-private-watermark-src=\"v2-14f8d98f9ad7b4b6dd847071c14b7a61\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-420a0a81fc34f6d519bb986946bf5ad1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1602\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-420a0a81fc34f6d519bb986946bf5ad1\" data-watermark-src=\"v2-767604d0d70d3efc1962f52f3f147878\" data-private-watermark-src=\"v2-7b0d48134c8122247f16d889d337c49c\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-40cbc53b7c36faf84412e6e0195430d9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1602\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-40cbc53b7c36faf84412e6e0195430d9\" data-watermark-src=\"v2-8f5e6573a6a2602bf58c11d0c1074e85\" data-private-watermark-src=\"v2-70ee1e4cfa40d5e26795ee0d600c72cb\"></p>\n<h2>初版的各种问题</h2>\n<p data-pid=\"n4gTzqvN\">游戏目前在steam的好评率为60％，处于一个比较低的水准，问题主要出在PC版的UI设计比原版差太多。不过要说这是反向优化其实不太准确，玩过家用机版的都知道，DX版几乎直接是把家用机版的UI拿过来用了，致使操作极其不便利。</p>\n<p data-pid=\"3By5xiZN\">最初有玩家反映DX版的节奏变慢了，例如合战、个人战、大地图移动变得十分缓慢，结果在深入研究后发现变慢的其实只有个人战。合战通过长按左键可以完成加速，而大地图移动将地图特效点选为简易后也可以恢复原版的移动速度，而更坑的地方在于原版其实也有地图特效的选项，只不过默认选择了简易。</p>\n<p data-pid=\"MwK3I8oM\">而除此之外则是确认追随功能取消以及住宅情报画面这种完全延续自家用机版的设定让作品变成了“太阁确认传”，一系列操作极其繁琐。而玩家又大多是从操作简便的原版一路玩过来的，抱着玩到“威力加强版”的心态购买了DX版，结果却买了个劣化版，自然就更加不满。</p>\n<p data-pid=\"gvhn2sw_\">而除开UI问题，一些内容方面的改版也打了个老玩家措手不及，比较典型的就是矿山、辩才、骑马、铁炮等小游戏的改变和合战设计的变化。实际上矿山、辩才这两个游戏在原版里就属于被诟病比较多的，矿山有固定路线，辩才则极其难把控，将其进行改动属于众望所归。这两个游戏改动后的设计还算比较成功，问题在于矿山的游戏设计思路匹配的又是家用机版，导致一个原本并不难的游戏变得十分刁钻，这一点甚至在最新的补丁里都没有进行优化。</p>\n<p data-pid=\"TStTx6Dy\">而骑马和铁炮就直接变成了阴间游戏，虽然只是简单加快了原版的速度以提升难度，但实际效果可以用形如鬼魅来形容。铁炮在原版就属于个人必定跳过的小游戏之一，而到了DX版里这份黑名单再度喜加一。但一些跳不过的地方就十分难受了，例如医生的骑马剧情和锻冶匠的铁炮大会，最难受的则要数用真田幸村收猿飞佐助当小弟，被这两个游戏轮番轰炸的感觉简直酸爽无比。</p>\n<p data-pid=\"1LLOmzI5\">此外各种bug也是多如牛毛，虽然大部分并不影响游戏进行，但足以看出本作的赶工程度。官方在游戏发售后一个月不到就出了修复补丁，解决了大部分UI问题，说明要处理这些问题并不困难。所以要么制作时间吃紧，要么内部沟通存在问题，要么制作组本身不上心。</p>\n<p data-pid=\"ZsJWWWu6\">个人倒是有一个小发现，原版太阁5一共有1080张卡片，家用机版增加到了1200张，DX版则是1322张。几个数字已经对比，很容易发现DX版的数字容易让人起强迫症。考虑到原版还有38张没有实装的秘所卡存在于后台，可以猜测制作组最初打算把这些卡直接做出来，凑够1360的数字，结果没时间做才变成变成现在这种不上不下的样子。</p>\n<p data-pid=\"TRNV7ilf\">因为UI的问题，我还考虑过插上手柄再投个屏，直接当成家用机版来玩，然后发现这游戏确实做了手柄适配，连键位图标都会改变（花工夫在这上面真是莫名其妙）。但很快我就放弃了，作为一个老牌策略游戏，太阁5的整体操作还是按照电脑逻辑来的，尤其是建筑、灌溉、医术等小游戏用手柄操作极其不便，整体玩下来还不如鼠标操作。于是本作成了电脑可以完美适配却不用心，家用机操作别扭却费了力气，最后弄出一个两边不讨好的局面。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ac0674ca4fda2886ed1e8f016844be52_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1602\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-ac0674ca4fda2886ed1e8f016844be52\" data-watermark-src=\"v2-1cb6dbbf77cda3add6ae135d24400b1c\" data-private-watermark-src=\"v2-e3b733f03ef24e33316252b0accdd810\"></p>\n<p data-pid=\"QvoU1nmr\">至于合战方面的修改我是打算给个好评的。虽然老玩家大多对新版合战的AI极其不满，但实际上在新版出来前，我听过的对旧版游戏最大的不满就是合战AI太低，使得游戏过于简单。制作组也知道这一点，因而战斗系统是家用机版的改进重点。</p>\n<p data-pid=\"zMn6rQSm\">这其中有的地方做得十分到位，例如技能施放系统，新系统的平衡性更强，而且攻城战也变得更加激烈。但也有矫枉过正的地方，一个是原版里十分逆天的士气流被削废了，另一个则是敌我双方AI变得十分恶心。DX版延续了家用机版的战斗系统，而家用机版的AI对于玩家担任主帅以外位置时极不友好，同时部队过河的AI设计疑似有bug，导致原版玩起来十分轻松的姊川合战对新手成了地狱级体验。</p>\n<p data-pid=\"77E4Xp1F\">至于我为什么还要给好评呢，等到后面介绍卡片时会提。</p>\n<p data-pid=\"4oEp5if5\">总的来说，对于初版游戏的差评，一方面是UI本身没有进行相应适配，加上一些细节设计发生了变动，给了按照原版玩法进行游戏的老玩家一闷棍，另一方面则是战斗和小游戏等方面做了调整，导致以前的许多经验派不上用场，只能从头学起，感到很不适应。在16日PC版补丁出来之后，UI方面的问题大部分得到修正（当然也有不少没改的，例如评定界面和数字输入界面），而深入玩过游戏之后，也会发现原版技巧现在大部分也还成立，新版AI则有新的针对方法（例如堵手下防止主将回城的技巧），内容方面全方位胜过原版。至少在拿完全部收集之后，让我再回去玩原版，那我肯定还是会觉得DX版体验更好。</p>\n<p data-pid=\"ceHEJ2jj\">这让我想起一件很久之前的事。2006年3月17日光荣发售了三国志11，结果因为多如牛毛的bug收到玩家海量差评，光荣于是在4月10日火速推出修复补丁，并且允许玩家用旧版光盘无偿更换新版，至今该作在日本的口碑都是毁誉参半。而中国玩家玩过初版三国志11的并不多，大部分玩的是威力加强版或者mod，因而口碑远超日本本土。这种首发玩家才有的愤怒，16年后的今天我们也终于感受到了。</p>\n<h2>有所欠缺的部分</h2>\n<p data-pid=\"OtC1plEN\">首先可以确定的是这回的制作组肯定很懒。刚才我没提翻译方面的问题，因为这回的PC版同时提供三种语言版本，玩家可以自由切换简体、繁体、日文版，繁体就是原版的翻译。虽然三个版本因为编码方式不同导致存档独立，但这种随时可以回归原版的设计让我觉得这方面不好算作是相对原版的缺点。</p>\n<p data-pid=\"Tgaq7eCw\">至于为什么说制作组懒，首先这回的简中文本居然直接使用了十八年前的翻译文本，于是原版就被很多人吐槽的尸王秀吉和精中家康又再度卷土重来。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4f5c30d0cc596a25da6b4389fdab87e2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1602\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-4f5c30d0cc596a25da6b4389fdab87e2\" data-watermark-src=\"v2-512297245ab64c409a0b0667bc3ee71f\" data-private-watermark-src=\"v2-8e26a7a3717649806e66322b2128904f\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-3ec07ca91b87df92036e870f53d5b0a1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1602\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-3ec07ca91b87df92036e870f53d5b0a1\" data-watermark-src=\"v2-b3196532b473c704e0014fed207c9a14\" data-private-watermark-src=\"v2-abcb834a3da6b739c49ad36342d894c3\"></p>\n<p data-pid=\"xNDqFeZn\">其次本作虽然提升了画面分辨率，但剧本封面就懒得改了，导致出现了三种不同画质水平的封面。DX版新增的浪华之章是最清晰的，PC版的旧剧本其次，家用机版的流亡之章和梦幻之章画质最差。虽然不影响游玩体验，但偷懒痕迹着实明显了点。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d58cd972e4bf3b7efe495551d5106fe4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"422\" data-watermark=\"original\" data-original-src=\"v2-d58cd972e4bf3b7efe495551d5106fe4\" data-watermark-src=\"v2-9127b40aca481cf783c1192b88a85a00\" data-private-watermark-src=\"v2-8d145832b6e9cbfc7788c9f331e8eb30\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-fa660f22769922848de9dcf82ad5f240_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1602\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-fa660f22769922848de9dcf82ad5f240\" data-watermark-src=\"v2-6145a3ebf8f65c7bef9ffaa088600248\" data-private-watermark-src=\"v2-0d5cb53a250075ff591f0eb04fa8dd75\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-6f80e143a0d298e349dc252a576d26c1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1602\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-6f80e143a0d298e349dc252a576d26c1\" data-watermark-src=\"v2-083b6e94c25ce4936651afcfbf302ea7\" data-private-watermark-src=\"v2-0fe5aa55d545e42f1e732fdb6616bea9\"></p>\n<p data-pid=\"H3p6zBDN\">最后则是新内容大量照搬自信野系列，100名新武将全部使用信野大志的立绘导致人物画风不统一这点在游戏发售前大家就各种吐槽。而我在玩到一些新增剧情时突然有种似曾相识的感觉，打开信野创造对比了一下，发现流放仙石、参拜八幡宫以及长宗我部元亲的相关剧情文本是直接从信野创造里照搬过来的，几乎连字都没改......不愧是越后谷，果然是省钱的神，也不知道光荣给的预算到底有多低。</p>\n<p data-pid=\"07dkCu_K\">虽然翻译方面整体不能算是缺点，但简中版的槽点确实比较多。一种是本土化做得太过，如果说“用心棒”这种战国爱好者都不一定听得懂的名词是应该翻译一下，而“上洛”改成“上京”，“中国”改成“中部地区”也还算是接受范围内，那么“一揆”变成“起义”就有点变味了。最莫名其妙的还要数“兵法指南”变成“兵法教头”这种，中文里确实不习惯用“指南”来表示指导者，但也不会称武术为“兵法”啊，倒不如说“兵法教头”这种表达更容易让普通人弄错原意。</p>\n<p data-pid=\"pbM2m4r9\">另一种则是把原版里的一些敏感词进行了和谐。例如我惹老大生气时，他本来是想让我滚，结果却说成了退，虽然意思是一样的，但这也礼貌过头了，不仔细琢磨都没察觉自己惹他生气了。太阁5里一直有和老婆搞黄色的台词，因为一些内容被和谐，我还一度以为DX版把这些精华部分给删掉了。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-444403a13454952d18d15f5ad5e99300_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1602\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-444403a13454952d18d15f5ad5e99300\" data-watermark-src=\"v2-f805e48f79c434708b99ed771c0593d1\" data-private-watermark-src=\"v2-f370d593e6cfd60d3a3bb6e6a2af600c\"></p>\n<p data-pid=\"mJM5el4m\">还有一种则干脆是错误翻译，什么把自己的爸爸说成是对方的爸爸（刘邦行为），或者直接出现乱码之类的，对游玩体验的影响还是比较恶劣的。不过这类问题在最新的补丁里基本得到了修正。</p>\n<h2>战斗体验升级</h2>\n<p data-pid=\"yM_x2d8L\">虽然在包装方面本作确实做得不尽人意，但游戏性则几乎是全方位提升。从新增卡片数量就可以简单算出本作相比原版增加了约20％的内容，同时家用机版进行的诸多调整在DX版里也得到了全部保留。例如用秀吉开局的老玩家很容易就会发现，原版需要一定运气才能让柴田胜家的封地位置符合本能寺触发条件，新版本有专门事件确定封地，省了不少力气。</p>\n<p data-pid=\"hVHrVuCe\">长期修业和连续征战两项功能是很大的便利，无论什么样的部下都可以练成满技能（所以竹中半兵卫以后只能当剑术老师来用了），而最大的受益者应该是海贼这些小众职业，大家终于不用再带着一帮废柴去辛辛苦苦打据点了。相应地也有削弱的部分，例如内政活动资金被固定，增筑效果也被降低，没办法像以前一样轻松刷数字了。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-928239f06b39a1a6587fc4e6938e16c0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1602\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-928239f06b39a1a6587fc4e6938e16c0\" data-watermark-src=\"v2-79d8ceb5bc87aa014b75a011cfd91067\" data-private-watermark-src=\"v2-349b064497ee68fbb41abbe6c9fdffc9\"></p>\n<p data-pid=\"CxoKWiNb\">合战部分对备大将的设定进行了丰富，其技能卡由主将的技能等级决定，而不是原版的白板。因为玩家通常会凑出一套豪华阵容，所以这个设定主要是强化了电脑，虽然强化力度不大，但体验还是不错的，玩家一般情况下都是和备大将战斗，很多时候备大将的实力都超过了普通的废柴。同时水军技能会影响部队的渡河能力，使得原版游戏里在海贼职业之外部下练了完全没用的水军变得很有价值。</p>\n<p data-pid=\"lLMKMWy7\">虽然家用机版的合战机制已经大幅调整，但DX版再引入一堆强度极其夸张的新卡后又再度进行了颠覆。原版的风林火山是唯一真神，拉拢、威吓、鬼谋、城门爆破都是强力技能，家用机版把威吓鬼谋砍废了，又降低了风林火山和城门爆破的强度，增加了可以与风林火山相媲美的毗沙门天，而在DX版里以上全部都是弟弟，只有三幻神才是最猛的。</p>\n<p data-pid=\"BtRcD0if\">这三幻神分别是千成瓢箪（简中版为千成葫芦）、狮子奋迅、威风堂堂（简中版为威风凛凛）。基本上野战靠威风，攻城战靠狮子，两者再辅以葫芦，然后就是一人干翻全场的局面。刚才提到姊川合战对新手是地狱级体验的一大原因就是因为朝仓义景在原版是咸鱼中的咸鱼，DX版里却有威风这种bug技，玩家如果直接冲上去会发现自己才是那条咸鱼。还好我一直有优先学拉拢的好习惯，勉强稳住了场面，那场面犹如北冥神功大战吸星大法。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-dde5e19da8e9dcc1729f83eeb8b6d6c2_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1602\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-dde5e19da8e9dcc1729f83eeb8b6d6c2\" data-watermark-src=\"v2-1d5b02fc45da68ae1d3b4dba2738b512\" data-private-watermark-src=\"v2-91c28599ec6ea6df67fa3516c181a3b6\"></p>\n<p data-pid=\"Qeuuw3jz\">原本我觉得这些卡片的强度有些超模，但又想起合战机制改变后，我连足轻和水军修业都只能跳过，突然有些明白设计者的用意了。这几张卡算是制作组开的一扇后门，用来挽回玩家被家用机版AI夺走的游戏体验，这种“敌强我更强”的设计很大程度上提升了战斗部分的操作上限和丰富性，玩家可以试着不用这些卡片挑战升级后的AI，也可以依靠它们去逆转一些极其困难的战斗，方便地触发各种隐藏剧情。</p>\n<p data-pid=\"BaqV8t-1\">并且这些新卡片的加入又增加了新的小技巧，例如小田原剑圣现在不光送武器，还免费担任口才讲师，细川藤孝实用性暴涨，98剧本的风魔小太郎成了比小幡勘兵卫更好用的老师。这些新的游戏技巧所带来的乐趣不亚于原版的拉真田小早川和砍足利等等，而且两者还可以并存，玩家既可以拉旧人，又可以学新卡，还可以搭配使用。熟悉这些机制后，马上可以从原先充满挫败感的体验中跳出，挖掘新的乐趣。</p>\n<p data-pid=\"ykN9V8PC\">DX版新增的合战卡远不止这三张，其中不少都能发挥出相当优秀的效果并组合出新的玩法。例如我曾经凑出五支带有百万一心的部队形成终极攻城军团，理论上还可以凑出一堆天主教徒用加护玩高C技能连放，至于百发百中的斩首战术有多变态，DX版里打过石山本愿寺的玩家应该都有体会，可惜三河武士只有军团长能放，否则士气流打法也要重出江湖了，不过可以尝试一下配合加护流是什么效果。总而言之，DX版在战术方面的丰富性极高，光是我能想到的打法都有这么多，未来还会有非常高的开发价值，这也是我给合战部分好评的重要原因。</p>\n<p data-pid=\"8MdXNSx3\">但不得不吐槽的是这么多大名都有了专属技能，连朝仓义景都能咸鱼翻身，黑田细川这些老牌二五仔以及主角秀吉也得到二次强化，唯独没有强化信长老板以及头号马仔竹中半兵卫，实在说不过去。尤其这次最难获得的隐藏合战卡机略纵横还用竹中做了卡面人物，显得更加讽刺。</p>\n<p data-pid=\"b_QsojiR\">与合战相似的是个人战部分也进行了很大修改。原版里近乎无敌的无刀取+霞在无刀取升C后废了一半，虽然因为转向功能的增加使得无刀取依然好用，但总归是没有原版那么无耻了，而且一之太刀破防的设定也使得玩家不敢再无脑出无刀。与无刀取一样被削的还有分身，扣血的设定使得分身往往会浪费气力给自己加血，缺点变得明显。另一方面，AI也会根据玩家当前的气力点数选择不同招式，战斗变得更加有挑战。</p>\n<p data-pid=\"-kxxQJBa\">当然也有新的后门，新当流（原版叫香取神道流）不止加强了一之太刀，还有了十分bug的新技能罗刹，配合人见人爱的霞，可以组合出极其流氓的新组合，一旦成功上手，可以直接连到死。缺点是不如原版的无刀取+霞无脑，而且天览里只有决赛敢随便放血，因而连用有难度。总而言之新当流在DX版的地位终于上来了，新阴流不再一家独大。至于玩家们的老朋友吉冈宪法也有了新卡，虽然强度不算高，但总算会放波了，可以跻身准一流剑豪。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-e04992fa56253dd4c56f9b74cf5384ef_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1602\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-e04992fa56253dd4c56f9b74cf5384ef\" data-watermark-src=\"v2-478fb4366944e4d04d240ee70e8abec6\" data-private-watermark-src=\"v2-a6f84a28e545fc2f0ab5ca990da0af2f\"></p>\n<p data-pid=\"PL0lylfX\">以上是家用机版的改进，而DX版则又给玩家开了扇后门，新增的秘技克己堪称万能辅助，直接鸟枪换大炮，克己起步基本是DX版里个人战的标准打法。如果说旧版剑豪学医术是常识，到了DX版则除了医术还得学茶道，大家都是德智体美劳全面发展。</p>\n<p data-pid=\"6c1yEUk5\">剑豪的个人流程也大为丰富，冥想对手里新增了源义经和相马小次郎，后者估计已经是很多玩家的心理阴影了。相应地，冥想出的秘技卡也大幅增加，一部分是家用机版新增的，另一部分则是DX版新增的，其中最受玩家喜爱的应该是枪秘技里的青岚了。受此影响，原版游戏里可以最快走完流程的主角柳生宗严游玩体验有了很大不同。</p>\n<p data-pid=\"nJSKvmeo\">不过这里比较不爽的是DX版虽然新增了阴流剑豪爱洲元香斋，却没有增加相关秘技。这也罢了，毕竟类似的流派在原版里也有不少，比较不能忍的是制作组都挖出了爱洲元香斋曾经指导过佐竹义重，并且把佐竹义重也加上了阴流标志，却没有给他分配任何新秘技，这就显得太过偷懒了。</p>\n<p><img src=\"https://pica.zhimg.com/v2-6ddcd3a2187295927de17495a0d366de_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1602\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-6ddcd3a2187295927de17495a0d366de\" data-watermark-src=\"v2-00b5c7a836c1be7d88c98dc7a97e9ae7\" data-private-watermark-src=\"v2-769b3a372a9d1e53818696e6b4a7b03c\"></p>\n<p data-pid=\"tWp1pFBg\">相比之下，其他职业就没这俩那么好命了，尤其忍者海贼靠勒索一夜暴富的打法也遭到限制，新版的武士全部成了铁公鸡，宁肯不要命也要把钱粮留着。</p>\n<h2>丰富的新事件</h2>\n<p data-pid=\"bihOO7DI\">事件方面家用机版已经增加了流亡之章的剧本和不少历史事件，其中不光包含新剧本的剧情，也包含对旧剧本的补充事件，还有武田信虎夺回武田家这种系列一贯的if剧情。新版又增加了长宗我部元亲崛起、伊达政宗降伏和玩家们等了十八年的小牧长久手之后的剧情，丰富程度上用完爆原版来形容毫不为过。至于梦幻之章这种精心设计出来的剧本所带来的体验也是前所未有的，只是出现条件过于严苛，多数人无缘得见。</p>\n<p data-pid=\"QRlVLyNa\">不过新版的AI非常喜欢囤积物资，而且进攻性变得很强，所以剧情也容易被打断，尤其北条、武田、德川、上杉这四家堪称中部四天王，大部分剧本里如果放任不管，其中总有一两家会迅速成为巨无霸，扩张速度令人咋舌（然后又半天都统一不了）。同时我对新事件的触发机制也有一些不满，基本上电脑绝大部分时候只能触发到九州征伐开始就完了，要电脑自己打出小田原几乎是不可能的事，就连玩家自己去触发都很不方便，需要手动打下一堆城。</p>\n<p data-pid=\"xh_q7Dq3\">除开历史事件外，一些通用事件倒是颇有意思。家用机版给8名历史武将增加了老婆，其中虽然也有吉川元春老婆这种十分影响游玩体验的存在，但总归还是件好事，而更为体贴的是新增了不少娶老婆的剧情。原版里除了自带老婆的高富帅们之外，普通的屌丝武将就只能找阿国或者宿屋女凑合着过日子，或者自行做点新武将出来，基本属于是要想生活过得去，总得头上带点绿的状态。</p>\n<p data-pid=\"E4em73qS\">家用机版则有亡国的公主事件、相亲事件等等，并且求婚对象也扩展到了NPC女海盗、NPC女忍者以及女商人里璐，制作组对单身汉的关怀程度让我想起了三国志10。虽然亡国公主的名字都是虚构的，但立绘则是用的历史女性，玩家可以通过读档摇号摇出自己心仪的老婆，相亲对象更是天马行空，什么宿屋酒场老板娘都包含在内，甚至还有报告消息的女忍者。我就专门试了一把女忍者，然后感觉每次和老婆说话都像是在听她汇报工作......</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ebc32208f42fc27778c4d9a0cfe37d1c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1602\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-ebc32208f42fc27778c4d9a0cfe37d1c\" data-watermark-src=\"v2-5f99abbb07a76d303ffd1dbbda55cc7f\" data-private-watermark-src=\"v2-64a1a490330f94e0577d729f2fbf7857\"></p>\n<p data-pid=\"UG0Jl2zm\">DX版则更进一步，把大航海4的其他几名角色也一起搬了过来，佐伯和海雷丁分别可以当商人和海贼下属（海雷丁的技能相当好用），蒂雅和李华梅则可以娶来当老婆。实际上原版就有的两名大航海客串角色按照太阁5的画风重新绘制了立绘，但DX版里估计是为了和这些伙伴保持一样的画风，又变回了大航海4里的立绘（个人其实更喜欢之前那一版）。另外则是只有海雷丁和李华梅有相关剧情，佐伯和蒂雅则没有（所以蒂雅你到底经历了什么啊......）。</p>\n<p data-pid=\"0O0n8oHY\">这种全员可以成为老婆的绘卷级体验能出现在官方版本里，对许多玩家而言已经是超出预料的事了。同时华梅的事件台词写得非常感人，“几百次人生”毫无疑问指的是游玩大航海4的过程，而“一瞬间的奇迹”则是太阁5里的这场相逢，令人颇为感慨。只不过DX版里的华梅性格有点活泼过头了，和原版相比就像变了个人。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-8b15cf83d3d456c17a0e1881ac6a26ad_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1602\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-8b15cf83d3d456c17a0e1881ac6a26ad\" data-watermark-src=\"v2-3a31c5626e89bf82fb953719e38ac73d\" data-private-watermark-src=\"v2-4697dfb050e44e7b0e416dafaf4bde6a\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-67adc497fd165f561f97a67d94ab1bb4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1602\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-67adc497fd165f561f97a67d94ab1bb4\" data-watermark-src=\"v2-f01dc9629766a3c83a826988737d2323\" data-private-watermark-src=\"v2-e55fae8ca88ee28cf3a7e1ae706b2092\"></p>\n<p data-pid=\"Uf-40je2\">新结局算是DX相对家用机版新增内容中的一大亮点，几个结局的前置剧情很容易触发，算是丰富了共通路线，其中不乏梦见源义经传授军学这种附带收益的事件（包括李华梅和海雷丁的事件其实也是前置剧情）。这几个结局的致敬感比较强，其中又以历史创造者为最，虽然从书名来看好像致敬的是丰臣秀吉，但其实是在致敬每个玩家或者说游戏本身，让角色在游戏里经历波澜壮阔的故事，体验各种各样的人生，正是太阁立志传所带来的浪漫。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-9b902bde04a40af7565cc97695841dac_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1602\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-9b902bde04a40af7565cc97695841dac\" data-watermark-src=\"v2-67a98d748ae244e60f430c6a10b34e3f\" data-private-watermark-src=\"v2-ef6e6caac7fa8d649e88eda2b5c500a5\"></p>\n<p data-pid=\"BcLyZ7qU\">世界之海就很明显了，完全是在致敬隔壁的大航海时代系列，毕竟要触发这个结局本身就要和四个从隔壁来的角色搞好关系（佐伯和蒂雅还是没有人权）。天下人的右手则有点为历史上丰臣家的结局惋惜的意思，剩下俩结局则像是专门做给喜欢乱玩游戏的玩家们的，尤其是修罗之道相当惊悚，整条路线充满着诡异的风格，我在大晚上玩出这结局时还受了点惊吓。</p>\n<p data-pid=\"StIeSx4d\">与之配套的结局收集系统则称得上是本作的一大优点，这个系统不仅帮玩家理清了结局种类，而且有专门的触发提示。我在玩老版时虽然玩出了所有主副职业的结局，但同一职业的结局并没有收集完全，所以这次才终于完整地体验了内容。并且这个系统的奖励非常丰厚，会随着解锁结局的增多允许让玩家在开局时继承若干张已经获得的卡片，当解锁30个以上结局时能够继承多达5张。</p>\n<p data-pid=\"MK7zAWqJ\">这个设定给了玩家不断重复游戏的动力，而且在游戏的策略属性和RPG属性之间找到了平衡，还在很大程度上方便了玩家收集。5张卡片提供的助力不小，但也不至于强大到破坏游戏乐趣，反而让忍术奥义皆传、第六感、青岚这些难以获得的卡片更容易发挥作用，我在玩原版时为了享受皆传带来的便利，甚至需要动用修改器或者专门留一个存档。不过在解锁全部39个结局后却并没有更进一步的奖励，而是得了个“高手”的鼓励......</p>\n<p><img src=\"https://pica.zhimg.com/v2-a5668132d724ee5c7ba768a540674d7f_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1602\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-a5668132d724ee5c7ba768a540674d7f\" data-watermark-src=\"v2-d1a1092870b7dd2158e80c62187ae071\" data-private-watermark-src=\"v2-2f199253007b929b65c78699c3cd7e8b\"></p>\n<p data-pid=\"XdJqoxSN\">至于自创武将系统，倒是有一些劣化的地方，例如面部特征和手持道具两项被合并，玩家只能选择其一，于是少了很多组合。但整体上还是比原版的自创武将功能要强大多了，不光可以选择开局前出仕状态，家用机版里作为彩蛋的特殊姓名系统也被复刻了过来，这是光荣老战略游戏做给家用机版的保留节目，反向移植到PC上倒是很罕见，而且还为中文版做了适配。此外又增加了若干套新装备，例如你会发现一个战国题材的游戏里居然出现了水手服和女仆装......</p>\n<p><img src=\"https://pic2.zhimg.com/v2-b07aa203c2d83fbd162104ea1a317601_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1602\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-b07aa203c2d83fbd162104ea1a317601\" data-watermark-src=\"v2-d79c48ad4030cbae4253ff6a2f012ae2\" data-private-watermark-src=\"v2-e17f3ac959c80db2bfd5211cf490afcd\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-bc30df48a99b4d61528a0a259ac43667_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1602\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-bc30df48a99b4d61528a0a259ac43667\" data-watermark-src=\"v2-46d5ac2138c2cb3abbf61dc99449bae6\" data-private-watermark-src=\"v2-efb17b80c13b4f5988491056771d0d77\"></p>\n<p data-pid=\"jvtu4ePs\">整体上这回的太阁5DX存在着成本低廉、制作组偷懒、PC适配不足等诸多问题，但平心而论确实算得上是一个内容丰富的加强版，既有大量新玩法，又没有丢失原版的神髓，值得投入时间去玩。在最近的更新补丁出来之后，PC版的体验已经达到及格，如果后续还能进一步解决遗留的少数问题，毫无疑问将全方位胜过原版。</p>\n<h2>多余的话</h2>\n<p data-pid=\"_K1AFv16\">说到这里再谈谈个人对该系列的一些想法。虽然“太阁5因为销量暴死导致系列终结”是中文互联网上流传相当广的一个说法，但这个说法并不准确，太阁5的销量确实不算高，但放在整个系列里也不低，历代太阁立志传都只有三五万的销量。</p>\n<p data-pid=\"BTOAhWzq\">稍微了解光荣公司的人都清楚太阁系列属于REKOEITION企划，该企划的最后一部作品就是04年的太阁立志传5，而倒数第二部作品则是01年的太阁立志传4，时任光荣社长的小松清志在02年的就职演讲中就说以后不会再把大量精力投入到历史策略游戏当中。在这样的背景下，虽然太阁5本身的市场表现并没有多差，但并不能挽救这个系列，因而制作组成员很多从一开始就是抱着制作最后一部的心态来做的。</p>\n<p data-pid=\"9fdAkptk\">2004年并不是1994年，那是一个使命召唤、生化危机4、GTA:SA都已经发售的年代，光荣自己也已经出了战国无双，想要他们在这种环境下还一门心思做太阁立志传这样的游戏本身也不现实。这里要说的是，虽然太阁5DX作为重制版定价249人民币被大家喊贵，但要知道的是该游戏日版售价为4950日元，而原版在04年的售价是10240日元（差不多是DX典藏版的价格），所以大可不必遗憾“太阁5生不逢时”。我并不相信国内会有足够的人愿意为原版太阁5掏这么多钱，不光过去和现在不会有，未来也同样不会有，这种内容丰富的小众买断制游戏只会逐步消亡。</p>\n<p data-pid=\"EcNQHi8u\">我也从未在任何场合表达过对太阁6的期待，太阁5的重制就是我心中最好的结局。不用说现在的光荣已经做不出太阁5这样的游戏，我见过无数玩家提出的太阁6制作方案，按照这些思路做出来的无一不是太阁5的mod。大家其实已经想象不出太阁系列的架构还能有怎样质的飞跃，那又何必狗尾续貂呢？</p>\n<p data-pid=\"N7xvG51j\">按照越后谷的说法，这回之所以重制太阁5，是因为之前在中韩两国宣传三国志14的时候收到了大量玩家对这个系列的期盼，从目前的销量来看，太阁5的粉丝群体也确实要远大于大航海4。而在结局的staff名单里我发现一件有趣的事，这次的重制团队里出现了许多中国人的名字，甚至连导演、主设计师、主程序员这些核心人员都大量来自中国，这款游戏的目标受众是谁已经非常明显了。</p>\n<p><img src=\"https://pica.zhimg.com/v2-9a0ef1dcfdfcbbcb413a53ec3cf837ad_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"272\" data-rawheight=\"162\" data-watermark=\"original\" data-original-src=\"v2-9a0ef1dcfdfcbbcb413a53ec3cf837ad\" data-watermark-src=\"v2-9888853421f41a47f4e63aa0a8e8fb3d\" data-private-watermark-src=\"v2-f53847c15e9d8a1c544a4bf6ab8de7be\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-87cd9e125db7bf72fbf8110c36ff66ba_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"223\" data-rawheight=\"211\" data-watermark=\"original\" data-original-src=\"v2-87cd9e125db7bf72fbf8110c36ff66ba\" data-watermark-src=\"v2-f6226d6b02d86ae575ad3e247d3556c9\" data-private-watermark-src=\"v2-c9aee3a54c281ce257b6af93fb18ea3d\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-8bef8b2d1cf0f9d639805ae545d3ec2e_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"216\" data-rawheight=\"302\" data-watermark=\"original\" data-original-src=\"v2-8bef8b2d1cf0f9d639805ae545d3ec2e\" data-watermark-src=\"v2-002063cc8be10e1f5d5723b29af1efde\" data-private-watermark-src=\"v2-604e77edc5dc814d329ad70ca19ab660\"></p>\n<p data-pid=\"Ukv6pINs\">写到最后我来提点建议，希望大家以后不妨多骂一骂光荣，因为光荣听骂。当然你在光荣看不到的地方骂肯定是没用的，你得想办法想办法让他们听到你的意见，无论官微、官推、官方邮箱都是可行的渠道。骂的人多就改，这家公司一向如此。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhang-ting-61-50?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">FFF团长</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/533540516/answer/2538862277?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">93 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/534099800?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《太阁 5 DX》游戏的玩家在首次登录时会有什么礼包赠送？</a><br><a href=\"http://www.zhihu.com/question/534276035?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《太阁立志传 5 DX》Steam版据说体验很差，那么NS版体验如何？值得入吗？</a><br>\n","link":"http://www.zhihu.com/question/533540516/answer/2538862277?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"钱学森明明是造导弹的，但为什么很多人都觉得钱学森造原子弹的？","date":"2022-06-22 01:12:19","description":"\n<p data-pid=\"fk8tx4Al\">钱学森确实与原子弹有联系，<b>他直接领导了用中近程导弹运载原子弹的“两弹结合”试验。</b></p>\n<p data-pid=\"Ce6pXoB5\">1964年10月16日，中国第一颗原子弹爆炸成功，震惊了世界，但当时国际上就有人嘲笑<b>中国是有弹无枪</b>。面对质疑，中央决定，要在1966年进行原子弹、导弹结合试验，尽快形成核威慑能力，试验地点就放在地广人稀的西北戈壁滩。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-c29a1a1e7b278598f35ccc8470d2f36d_720w.jpg?source=b1748391?rss\" data-caption=\"1966年10月27日，中国第一枚带有核弹头的东风二号甲导弹从甘肃酒泉发射基地发射升空\" data-size=\"normal\" data-rawwidth=\"366\" data-rawheight=\"489\" data-watermark=\"original\" data-original-src=\"v2-c29a1a1e7b278598f35ccc8470d2f36d\" data-watermark-src=\"v2-99c2d22d690bfb73c215a8e801b64195\" data-private-watermark-src=\"v2-049d71c237d4fe62c0556f9073d435ae\"></p>\n<p data-pid=\"McinY7tb\">1966年10月27日上午9时10秒，中国第一枚带有核弹头的东风二号甲导弹从甘肃酒泉发射基地发射升空。在飞行了 9分14秒后，核弹头在距发射场894公里以外的新疆罗布泊上空靶心爆炸，试验成功，<b>中国从此拥有了可以用于实战的导弹核武器</b>。</p>\n<p><img src=\"https://pica.zhimg.com/v2-1f0a2b1a997a43ab05f5a953d9579a0f_720w.jpg?source=b1748391?rss\" data-caption=\"核弹头在弹着区上空爆炸后的蘑菇云\" data-size=\"normal\" data-rawwidth=\"479\" data-rawheight=\"329\" data-watermark=\"original\" data-original-src=\"v2-1f0a2b1a997a43ab05f5a953d9579a0f\" data-watermark-src=\"v2-bafd484dd6ba2dc306963b4f88be03a0\" data-private-watermark-src=\"v2-ed46151fdfe04ca1ec43eae23e8ef036\" data-tags=\"porn\"></p>\n<p data-pid=\"wzbBH3Ms\">罗布泊的一声巨响，再一次震动了世界。“两弹结合”的试验成功标志着我国科学技术和国防力量在快速地向前发展，同时也彻底打破了超级大国的核垄断、核讹诈和核威胁。</p>\n<p data-pid=\"_cmTsoN1\">1999年9月18日，在中华人民共和国成立五十周年之际，党中央、国务院、中央军委隆重表彰为中国“两弹一星”事业作出突出贡献的23位科技专家，并授予他们“两弹一星功勋奖章”。钱学森是其中一员。</p>\n<p data-pid=\"V3xjMt-0\">这样一来，人们更容易将原子弹联系到钱老身上了。</p>\n<p data-pid=\"GJPZH83c\">其实啊，不管导弹还是原子弹，都是保卫咱们国家的“大国利器”！我们有如今安定的生活，离不开每位先辈的无私奉献！</p>\n<p data-pid=\"OU9lA6di\">向他们致敬！</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhong-guo-hang-tian-ke-ji-ji-tuan?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">中国航天科技集团</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/296211541/answer/2537917985?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">147 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/536711998?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">钱学森和袁隆平谁对中国贡献更大?</a><br><a href=\"http://www.zhihu.com/question/519146432?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">怎么看待武汉大学50多位同学花3年时间造的卫星成功发射？</a><br>\n","link":"http://www.zhihu.com/question/296211541/answer/2537917985?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"优化博客的累计布局偏移（CLS）问题","date":"2022-06-07 17:24:00","description":"\n<p>距离上一篇文章发布已有四个月了，是时候写几篇文章给博客除草了。上一次我介绍了我如何迁移、重构了我的博客的架构，这次我想来谈谈我在重构中优化和打磨访客体验时解决的一个问题。我的博客优化之旅 图片 lazyload 的学问和在 Hexo 上的最佳实践 我的博客有多快？ 天下武功，唯快不破 —— 我是这样优化博客的 再快一点，再快一点 ......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/206311/26/14625/38940/629f7f81Eb11312de/b1e67f07b1cc9bc7.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/fix-blog-cls/\">https://blog.skk.moe/post/fix-blog-cls/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/fix-blog-cls/"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012 年的、由 Node.j......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\r\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\r\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\r\n    return new Date(date.toLocaleString('en-US', { timeZone }))\r\n}\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\r\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\r\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\r\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: '2-digit',\r\n        hour12: false,\r\n        timeZone\r\n    })\r\n    return {\r\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\r\n        convert (date) {\r\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\r\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\r\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\r\n        }\r\n    }\r\n}\r\n\r\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\r\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\r\n    return converter.convert(new Date(secDate), tzName) - secDate\r\n}\r\n\r\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\r\ncmn-Hans-SG = 中文普通话-简体-新加坡\r\ncmn-Hant-TW = 中文普通话-繁体-台湾\r\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\r\ncmn = 中文普通话\r\n\r\nzh-Hans = 中文-简体\r\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\r\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\r\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\r\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\r\n}\r\n\r\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long'\r\n}\r\nconst now = new Date()\r\n\r\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\r\n\r\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\r\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\r\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\r\n\r\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\r\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\r\n\r\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\r\n\r\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\r\n\r\nzhCNFormatter.format(now) // 2021年10月13日星期三\r\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\r\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\r\n\r\njaFormatter.format(now) // 2021年10月13日水曜日\r\njaAltFormatter.format(now) // 令和3年10月13日水曜日\r\n\r\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\r\n// {locale: 'zh-CN', calendar: 'gregory', …}\r\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\r\n     // 基于一个固定日期计算，这里选择 1970.1.1\r\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\r\n    const base = new Date(1970, 0, 1).getTime()\r\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\r\n    return Array.from({ length: 7 }, (_, day) =&gt; (\r\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\r\n    ))\r\n}\r\n\r\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\r\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\r\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    second: 'numeric',\r\n}).formatToParts(new Date())\r\n// [\r\n//     { type: 'year', value: '2021' },\r\n//     { type: 'literal', value: '年' },\r\n//     { type: 'month', value: '10' },\r\n//     { type: 'literal', value: '月' },\r\n//     { type: 'day', value: '13' },\r\n//     { type: 'literal', value: '日' },\r\n//     { type: 'weekday', value: '星期三' },\r\n//     { type: 'literal', value: ' ' },\r\n//     { type: 'dayPeriod', value: '上午' },\r\n//     { type: 'hour', value: '1' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'minute', value: '00' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'second', value: '00' }\r\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\r\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\r\n}\r\n\r\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\r\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\r\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\r\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\r\n  timeZone: 'America/Los_Angeles',\r\n  year: 1995,\r\n  month: 12,\r\n  day: 7,\r\n  hour: 3,\r\n  minute: 24,\r\n  second: 30,\r\n  millisecond: 0,\r\n  microsecond: 3,\r\n  nanosecond: 500,\r\n  calendar: 'iso8601'\r\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<p>2020 年 11 月 11 日，苹果在本年度最后一次 Apple Events 上发布了全新的 ARM 芯片 M1、以及三款搭载了 M1 的 Mac：MacBook Air、MacBook Pro 13‘ 和 Mac Mini。在 WWDC 2020 库克宣布 Apple Silicon 后，这次 Apple Events 再一次掀起了热潮，不少 KOL 都把 M1 奉若神明，不少人也不以为然。本文通过 8 个问题来简单聊聊 M1 和 ARM Mac。M1 芯片的性能如何？本文写就时，搭载 M1 的 Mac 尚未开始发货，我们能看到的只有 GeekBench 上流出的跑分。所以，让我们先从跑分开始看起？...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote>\n<p>周六不放假休息，还在这加班搞 CTF？</p>\n</blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/86535/11/24318/75037/622032a8E4f94d4ae/89703ccc122cf4e0.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"\n<p>WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将其表述为 \"An API for accessing Public Key Credentials\"，即“一个用于访问公钥凭证的 API”。WebAuthn 很强大，强大到被认为是 Web 身份认证的未来（当然，也很复杂）。你有想过通过指纹或者面部识别来登录网站吗？WebAuthn 就能在保证安全和隐私的情况下让这样的想法成为现实。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\" alt=\"通过 WebAuthn 调起 Windows Hello 登录网站\" width=\"1912\" height=\"966\" class=\"aligncenter size-full wp-image-2215\"></a>\n<p>你可以在<a href=\"https://webauthn.io/\" rel=\"noopener\">这个网站</a>自行体验 WebAuthn。或者，如果你有一个使用 WordPress 的站点，可以尝试一下 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WP-WebAuthn</a> 这款插件，它可以为你的站点启用 WebAuthn 登录。这是我为了写这篇文章而练手开发的插件，本文中的部分示例代码也来自这款插件。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"wp-webauthn\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/wp-webauthn\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>WebAuthn Level 1 标准已在 2019 年 3 月成为 W3C 推荐标准，而 Level 2 标准目前也已进入编辑草案阶段，但互联网上有关它的中文资料却仍然很少，国内也鲜有网站支持这一新标准。于是，在抱着各种英文资料和标准啃了几天以后，我折腾出了这篇文章。</p>\n<p>在这篇文章里，我将会从最基本的概念开始，逐渐深入 WebAuthn，直到解码公钥等深层细节。这可能是你能找到的有关 WebAuthn 最详细最基础的中文文章，也很可能是最长的。在开始之前，<strong>我强烈建议你打开菜单中的文章目录浏览一遍，以对这篇文章涉及的内容有所了解。</strong>如果你只是想了解如何简单地在你的项目中添加对 WebAuthn 的支持，那么“<a href=\"https://flyhigher.top/#webauthn-overview\">浅谈 WebAuthn</a>”部分就是你要找的；如果你想了解更多关于 WebAuthn 的底层细节，那么你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分。</p>\n<p>由于在本文写作时 WebAuthn Level 2 规范尚未定稿，<strong>这篇文章我们将只专注于 Level 1 规范。</strong></p>\n<p>这篇文章最后更新于 2020.9 ，在你读到这篇文章时，部分事实可能已经发生改变，请注意判断。</p>\n<p><strong>更新日志：</strong></p>\n<ul>\n<li>2021.1.16 添加 Chrome 开发工具信息</li>\n<li>2020.9.17 更新 iOS/iPad OS 兼容性信息</li>\n<li>2020.5.20 添加部分无用户名认证的平台兼容性内容</li>\n<li>2020.5.15 添加部分 <code>extensions</code> 相关内容与链接；添加全局凭证 ID 唯一内容；添加凭证 ID 查找相关内容；添加“从 U2F 认证迁移”一节</li>\n<li>2020.4.13 更新与修正 <code>userVerification</code> 相关内容；添加部分 Firefox 相关内容</li>\n<li>2020.3.23 文章发布</li>\n</ul>\n<p>那么让我们开始吧。<span></span></p>\n<h1>浅谈 WebAuthn</h1>\n<p>在这个部分里，我们将会从基础概念开始，了解有关 WebAuthn 和密码学的一些基础知识，并最终使用第三方库实现基础的 WebAuthn 认证。如果你已经对这些内容有所了解了，可以跳到“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”继续阅读。</p>\n<h2>为什么使用 WebAuthn</h2>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\" alt=\"钓鱼邮件\" width=\"709\" height=\"693\" class=\"aligncenter size-full wp-image-2162\"></a>\n<p>相信你一定收到过类似的邮件吧？只要你点进那个最显眼的链接，你就会进入一个设置好的圈套——钓鱼网站。如果你一时糊涂在这类网站上填写了你的账号和密码，bingo，你的账号就不再是你的账号了。</p>\n<p>不过，就算你警惕心再强，也无法避免密码泄露事件。Twitter, Facebook 等都爆出过明文密码泄露事件，证明再大的公司或组织也无法避免密码泄露问题。雪上加霜的是，很大一部分用户都非常喜欢使用重复密码，这就导致一次密码泄露会牵连很多网站，用户的账户安全性完全无法得到保证。</p>\n<p>那么，有什么办法解决这些问题吗？<strong>彻底解决的方法只有一个，那就是抛弃密码。</strong>可是没有密码还怎么验证用户身份呢？这就是 WebAuthn 的用武之地了。</p>\n<p><del>没有密码的好时代，来临力！</del></p>\n<h2>什么是 WebAuthn</h2>\n<p>那么到底什么是 WebAuthn 呢？如开头所说，WebAuthn 是“一个用于访问公钥凭证的 API”，网站可以通过这个 API 进行一些高安全性的身份验证。WebAuthn 一个最常见的应用就是用于网站登录时的 2FA（双重因素验证）甚至是无密码登录。通过网页调用 WebAuthn，在不同平台下，<strong>我们可以实现通过 USB Key、指纹、面部甚至虹膜扫描来认证身份，同时确保安全和隐私。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\" alt=\"WebAuthn 可使用的各种身份认证方式\" width=\"1294\" height=\"566\" class=\"aligncenter size-full wp-image-2213\"></a>\n<p>WebAuthn 标准是 FIDO2 标准的一部分，而 FIDO2 则是由 FIDO 联盟和 W3C 共同推出的 U2F（现称作 FIDO1）的后继标准，旨在增强网络认证的安全性。</p>\n<blockquote><p>你可能了解过 U2F，那么 U2F 和 FIDO2 的区别在哪里呢？从名字上可以看出，U2F，即“通用第二因素协议”，是专注于作为密码后的第二道屏障的，而 FIDO2 增加了单因素认证功能，这意味着使用 FIDO2 可以完全替代密码，真正实现无密码登录。</p></blockquote>\n<p>FIDO2 标准主要包括四个部分，其一是用于网站和访客设备交互的 WebAuthn，而 Client to Authenticator Protocol 2（CTAP2，客户端-认证器协议）作为 WebAuthn 的补充，则是用于访客的设备和认证器交互的协议。标准的其他两个部分则是 U2F 和 UAF 规范。在这篇文章中，我们只关心 WebAuthn，不会涉及 CTAP, U2F 和 UAF 的相关知识。如果你对这段话中的一些概念不了解，不要紧张，接下来我们就来谈谈 WebAuthn 中一些常用的术语和概念。</p>\n<blockquote><p>WebAuthn 只能在安全上下文中使用，也就是说，页面需要使用 HTTPS 协议或是处于 <code>localhost</code> 中。</p></blockquote>\n<h2>常用术语和概念</h2>\n<p>WebAuthn 中有许多不常碰到的术语，不过我只会在这里介绍一些常用的术语和概念——如果你只是希望做出一个简单的实现，那么了解这一段中的一些概念就足够了。同时，由于我实在没能找到一部分术语的通用翻译，有一些术语我按着自己的理解尽可能地翻译了，有任何问题请告诉我。</p>\n<p>在一个完整的 WebAuthn 认证流程中，通常有这么几个角色：</p>\n<ul>\n<li>Relying Party 依赖方 (RP) ：指服务提供方，即网站</li>\n<li>User 用户：正准备登录的你</li>\n<li>Authenticator 认证器：通常指 USB Key 或是设备内置的指纹扫描器、虹膜扫描器、面部识别装置等，正是它们在使用流程中代替了密码甚至是用户名</li>\n<li>User Agent 用户代理：通常指浏览器或系统，负责与认证器交互</li>\n</ul>\n<p>认证过程通常分为两种：</p>\n<ul>\n<li>Registration Ceremony 注册仪式：用户向账户上添加认证器</li>\n<li>Authentication Ceremony 验证仪式：用户通过已注册的认证器验证身份</li>\n</ul>\n<p>同时，认证过程中还会产生这些内容：</p>\n<ul>\n<li>Challenge 挑战：通常是一串随机字符串</li>\n<li>Public Key Credential 公钥凭证：由认证器产生的凭证，在技术上代替了密码</li>\n<li>Attestation 证明：注册时认证器产生的验证数据</li>\n<li>Assertion 断言：验证时认证器产生的验证数据</li>\n</ul>\n<blockquote><p><strong>请注意区分证明 (Attestation) 和断言 (Assertion)</strong>，特别是在这两个单词有些相似的情况下。在 WebAuthn 中，它们是不同过程中的类似概念，但并不相同。</p></blockquote>\n<p>如果你对于这些内容不是很理解，没有关系，我们会在“<a href=\"https://flyhigher.top/#how-to-webauthn\">使用流程</a>”一节中将这些概念放到实际情况中解释，你只要先区分这些概念即可。</p>\n<h2>安全性的基础</h2>\n<p>WebAuthn 为什么安全？和 HTTPS 一样，WebAuthn 使用非对称加密的思路来保证安全性，但侧重点又有所不同。要理解 WebAuthn 的认证流程，我们必须对非对称加密有所了解。如果你对非对称加密比较熟悉了，就直接跳到下一段吧。</p>\n<p>WebAuthn 的核心在于“认证”，即保证产生了凭证的认证器是用户的认证器，而不是第三方在伪造凭证。但为什么要使用非对称加密呢？我们可以先来看看对称加密。</p>\n<p>让我们假设小明和小红相互写信，见不到对方。这天小红突然想，给自己写信的人是不是真的小明呢？于是小红要求对方向小红证明自己是小明。怎么证明呢？他们商量出来这么一套方案：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明和小红商量一个统一的密码和密钥</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明用提前和小红商量好的密码和密钥加密文本后发回给小红</li>\n<li>小红使用相同的密码和密钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和密钥</li>\n</ol>\n<blockquote><p>在密码学中，我们通常把“加密算法”称为密码 (code)，和通常登录时用的密码 (password) 并非同一个概念。</p></blockquote>\n<p>在这种情况下，<strong>只要密钥不泄露</strong>，即拥有正确密钥的只有小明和小红，那么小红就能确定对方一定是小明。但这样的问题也很明显，如果小明和小红不能见面，那么他们就必须先以明文交换密码——<strong>在这个过程中一旦有人窃取到了密码，这个认证就无效了。</strong></p>\n<p>这时我们就需要使用<strong>非对称加密</strong>来拯救破碎的信任了。非对称加密的基础是一对密钥，也就是公钥和私钥，它们是互相关联但（几乎）无法互相推导的。在非对称加密的过程中，选择相同的密码后，使用私钥加密明文得到的密文只能由对应的公钥解密，无法使用私钥解密，同时这个过程反过来也是成立的。</p>\n<blockquote><p>本文的核心并不是非对称加密算法，因此不会详述非对称加密在数学上的证明，若有兴趣可以自行了解。</p></blockquote>\n<p>这就完美解决密钥泄露的问题了。让我们回过头来看之前的例子。现在小明和小红决定使用非对称加密来证明身份，过程如下：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明提前生成一对公私钥，将公钥发送给小红，私钥自己保管，同时商量好统一的密码</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明使用商量好的密码和自己的私钥加密文本，发送给小红</li>\n<li>小红使用相同的密码和小明的公钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和私钥</li>\n</ol>\n<p>在这种情况下，<strong>只要私钥不泄露</strong>，那么小红解密得到的文本和之前发送的一致，那么就可以证明收到的密文一定是由小明加密后发送过来的。而在整个过程中，私钥都没有离开过小明，更没有经过传输，也就几乎没有泄露的可能了。这时，小红终于可以确定对面和她通信的人的确是小明了。</p>\n<p>题外话：HTTPS 虽然也应用了非对称加密，但 HTTPS 更侧重于“加密”而非“认证”，因此思路上会有些许差异。要了解关于 HTTPS 和非对称加密的更多信息，你可以阅读我之前写的这篇文章：</p>\n<p></p>\n<div class=\"mdx-post-cot\" data-mdxposturl=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdx-post-wait-out-c2\"><div class=\"mdx-post-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<span></span>\n<h2>使用流程</h2>\n<p>了解了非对称加密，我们就可以来看看 WebAuthn 的认证流程了。</p>\n<p>和普通的密码一样，<strong>使用 WebAuthn 分为两个部分，注册和验证。</strong>注册仪式会在依赖方中将认证器的一些信息和用户建立关联；而验证仪式则是验证这些信息以登确保是用户本人在登录。根据上一节的思路，我们可以知道，注册仪式就是认证器生成一对公私钥，然后将公钥交给依赖方；而验证仪式是依赖方发送给认证器一段文本，要求认证器用自己的私钥加密后发回以验证。</p>\n<p>在实际情况中，WebAuthn 是基于<strong>挑战-应答模型</strong>工作的。要更好地理解，我们直接来看具体流程。先来看看注册的流程。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\" alt=\"WebAuthn 注册流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2224\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的注册请求</li>\n<li>依赖方向浏览器发送挑战、依赖方信息和用户信息</li>\n<li>浏览器向认证器发送挑战、依赖方信息、用户信息和客户端信息以请求创建公钥凭证</li>\n<li>认证器请求用户动作，随后创建一对公私钥，并使用私钥签名挑战（即证明），和公钥一起交给浏览器</li>\n<li>浏览器将签名后的挑战和公钥发送给依赖方</li>\n<li>依赖方用公钥验证挑战是否与发送的一致，如果成功则将公钥与用户绑定，注册完成</li>\n</ol>\n<p>我也做了一个交互式的 Demo，你可以对照流程来更好地理解。</p>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\">开始注册</button> <span></span></p>\n<div></div>\n<blockquote><p>注意，这个 Demo 和下方的 Demo 都只是一个本地模拟的简单示例，没有任何数据会被上传，当然也不会对数据进行验证。</p></blockquote>\n<p>而之后的验证流程如下：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\" alt=\"WebAuthn 验证流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2226\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的验证请求</li>\n<li>依赖方向浏览器发送挑战</li>\n<li>浏览器向认证器发送挑战、依赖方信息和客户端信息以请求获取公钥凭证</li>\n<li>认证器请求用户动作，随后通过依赖方信息找到对应私钥，并使用私钥签名挑战（即断言），交给浏览器</li>\n<li>浏览器将签名后的挑战发送给依赖方</li>\n<li>依赖方用之前存储的公钥验证挑战是否与发送的一致，一致则验证成功</li>\n</ol>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\" disabled>开始验证</button> <span>在上方注册后才能验证</span></p>\n<div></div>\n<p>可以看到，WebAuthn 不仅在理论上是安全的，同时<strong>在整个过程中并没有隐私数据被传输</strong>——用户信息实际上只包含用户名和用户 ID。因此我们完全可以说 WebAuthn 是安全且私密的。</p>\n<blockquote><p>为了避免用户在不同依赖方之间被追踪，认证器通常会为每个依赖方和用户的组合都创建一对公私钥。不过，由于认证器的存储空间有限，认证器通常不会存储每一个私钥，而是会通过各类信息和烧录在认证器内的主密钥“算”出对应的私钥以实现无限对公私钥。具体算法根据不同厂商会有所不同。对于 Yubikey，你可以在<a href=\"https://developers.yubico.com/U2F/Protocol_details/Key_generation.html\">这里</a>了解更多。</p></blockquote>\n<blockquote><p>如果依赖方需要，用户同意后，发送给依赖方的公钥凭证中可以包含用于辨认认证器型号的信息，不过这对隐私的影响微乎其微。</p></blockquote>\n<h2>浏览器接口</h2>\n<p>要使用 WebAuthn，我们必须要依靠浏览器作为媒介和验证器进行交互，而这就需要浏览器对于 WebAuthn 的支持了。绝大多数新版本的现代浏览器都为 WebAuthn 提供了统一的接口，而在这一段中我们会了解如何使用相关的接口。但是在开始之前，我们可以先来看看浏览器的支持程度（2020.9）。</p>\n<div class=\"mdui-table-fluid\"><table class=\"mdui-table\">\n<thead><tr>\n<th>浏览器</th>\n<th>支持情况</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>桌面端 Chrome</td>\n<td>67+</td>\n</tr>\n<tr>\n<td>移动端 Chrome</td>\n<td>67+<sup>[1]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Firefox</td>\n<td>60+</td>\n</tr>\n<tr>\n<td>移动端 Firefox</td>\n<td>不支持<sup>[2]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Edge</td>\n<td>18+</td>\n</tr>\n<tr>\n<td>移动端 Edge</td>\n<td>不支持<sup>[3]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Safari</td>\n<td>13+</td>\n</tr>\n<tr>\n<td>移动端 Safari</td>\n<td>13.3+<sup>[4]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Opera</td>\n<td>54+</td>\n</tr>\n<tr>\n<td>移动端 Opera</td>\n<td>不支持</td>\n</tr>\n</tbody>\n</table></div>\n<p><sup>[1]</sup> 受平台限制，Chrome 在 iOS 平台上不支持 WebAuthn，在 Android 平台上支持大部分 WebAuthn 功能，但仍不支持部分特性（如 <code>userVerification</code>）。<br><sup>[2]</sup> 移动端 Firefox 80 以下的版本支持 WebAuthn 但似乎会忽略 <code>authenticatorAttachment</code> 等一部分参数，同时移动端 Firefox Beta 80 以下的版本支持 WebAuthn 但无法成功调用。自 80 版本起移动端 Firefox 暂时取消了对 WebAuthn 的支持（可能是 Bug）。<br><sup>[3]</sup> 移动端 Edge 似乎支持 WebAuthn 但无法成功调用。<br><sup>[4]</sup> Safari iOS/iPad OS 13 仅支持外部认证器，无法调用 Touch ID 或 Face ID；自 iOS/iPad OS 14 起 Safari 已支持全功能 WebAuthn，可以调用 Touch ID/Face ID</p>\n<p>当然，一众国产浏览器，包括 Samsung Browser 和 Yandex Browser，目前都不支持 WebAuthn。此外，由于 WebAuthn 涉及外部验证器和 TPM 可信平台模块等，用户的操作系统也会对 WebAuthn 的可用性造成影响。以下是一些需要注意的信息：</p>\n<ul>\n<li>Windows 10 1903 以下版本仅 Edge 能提供完整支持，其他浏览器只能使用 USB Key 等外部认证器；1903+ 中所有浏览器都可以通过 Windows Hello 带来完整的 WebAuthn 支持</li>\n<li>Android 需要安装并开启 Google 服务</li>\n<li>iOS/iPad OS 13.3 以下的版本不支持 WebAuthn，iOS/iPad OS 14 以下的版本支持有限（参考上文），iOS/iPad OS 14 开始 Safari 已支持全功能 WebAuthn（功能完整度甚至超过了 Android）</li>\n</ul>\n<p>可以看出，WebAuthn 的发展之路仍然很漫长，但好在桌面端对它的支持已经比较完善了，在一些情况下我们完全有理由使用它。</p>\n<hr>\n<p>来看看浏览器提供了怎么样的接口吧。要使用 WebAuthn，我们可以使用 <code>navigator.credentials.create()</code> 请求认证器生成公钥凭证和 <code>navigator.credentials.get()</code> 请求获取公钥凭证。</p>\n<blockquote><p>你或许已经对 Credential Management API 有所了解了。通过这些 API，我们还可以实现一些有趣的特性，不过这值得另开一篇文章来讲了。</p></blockquote>\n<p>对于一个基础的实现，<code>navigator.credentials.create()</code> 需要传入的参数如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        challenge,\r\n        rp: {\r\n            id,\r\n            name\r\n        },\r\n        user: {\r\n            id,\r\n            name,\r\n            displayName\r\n        },\r\n        pubKeyCredParams: [\r\n            {\r\n                type: \"public-key\",\r\n                alg\r\n            }\r\n        ],\r\n        authenticatorSelection: {\r\n            authenticatorAttachment,\r\n            userVerification\r\n        },\r\n        excludeCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>在 <code>navigator.credentials.create()</code> 方法中，我们必须传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值。这指明了我们需要创建公钥凭证，而非普通的密码凭证。然后，在 <code>publicKey</code> 对象中设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rp: Object</code>：依赖方信息，其中有一项为必须：\n<ul>\n<li>\n<code>rp.id: String</code>：（可选）依赖方 ID，必须为当前域名或为当前域名的子集的域名（不是子域名）。如域名为 <code>test.123.example.com</code>，则依赖方 ID 可以是 <code>test.123.example.com</code>, <code>123.example.com</code> 或 <code>example.com</code>。不指定则默认使用当前域名</li>\n<li>\n<code>rp.name: String</code>：依赖方名称，用于方便用户辨认</li>\n</ul>\n</li>\n<li>\n<code>user: Object</code>：用户信息，其中有三项为必须：\n<ul>\n<li>\n<code>user.id: Uint8Array</code>：转换为 <code>Uint8Array</code> 的字符串。<strong>出于安全考量，这应尽可能不与任何用户信息相关联，如不要包含用户名、用户邮箱等</strong>\n</li>\n<li>\n<code>user.name: String</code>：登录用户名</li>\n<li>\n<code>user.dispalyName: String</code>：用于显示的用户名称，显示与否的具体行为取决于浏览器</li>\n</ul>\n</li>\n<li>\n<code>pubKeyCredParams: Array</code>：一个算法列表，指明依赖方接受哪些签名算法。列表的每一项都是一个对象，拥有两个属性：\n<ul>\n<li>\n<code>pubKeyCredParams[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>pubKeyCredParams[].alg: Number</code>：一个负整数，用于标明算法。具体算法对应的数字可以在 <a href=\"https://www.iana.org/assignments/cose/cose.xhtml#algorithms\">COSE</a> 找到</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection: Object</code>：（可选）用于过滤正确的认证器，这里介绍常用的一个参数：\n<ul>\n<li>\n<code>authenticatorSelection.authenticatorAttachment: String</code>：（可选）指定要求的认证器类型。如果没有满足要求的认证器，认证可能会失败。该参数可以为 <code>null</code>（表示接受所有类型的认证器）或是以下两个值之一：\n<ul>\n<li>\n<code>platform</code>：表示仅接受平台内置的、无法移除的认证器，如手机的指纹识别设备</li>\n<li>\n<code>cross-platform</code>：表示仅接受外部认证器，如 USB Key</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection.userVerification: String</code>：（可选）指定认证器是否需要验证“用户为本人 (User Verified, UV)”，否则只须“用户在场 (User Present, UP)”。具体验证过程取决于认证器（不同认证器的认证方法不同，也有认证器不支持用户验证），而对验证结果的处理情况则取决于依赖方。该参数可以为以下三个值之一：\n<ul>\n<li>\n<code>required</code>：依赖方要求用户验证</li>\n<li>\n<code>preferred</code>：（默认）依赖方希望有用户验证，但也接受用户在场的结果</li>\n<li>\n<code>discouraged</code>：依赖方不关心用户验证。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>excludeCredentials: Array</code>：（可选）用于标识要排除的凭证，可以避免同一个用户多次注册同一个认证器。如果用户试图注册相同的认证器，用户代理会抛出 <code>InvalidStateError</code> 错误。数组中的每一项都是一个公钥凭证对象，包含以下属性：\n<ul>\n<li>\n<code>excludeCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>excludeCredentials[].id: Uint8Array</code>：要排除的凭证 ID</li>\n<li>\n<code>excludeCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，超时后将强制终止 <code>create()</code> 并抛出错误。若不设置，将使用用户代理的默认值；若太大或太小，则使用最接近的用户代理默认值范围中的值。推荐值为 5000-120000</li>\n</ul>\n<blockquote><p>对于 <code>pubKeyCredParams</code>，通常我们只需添加 ES256 (alg: -7) 算法即可兼容大部分外部认证器，此外，再添加 RS256 (alg: -257) 算法即可兼容大部分平台内置认证器（如 Windows Hello）。当然，前端添加算法之后，后端也需要相应的算法支持。</p></blockquote>\n<blockquote><p>对于 <code>userVerification</code>，由于默认值 \"preferred\" 并不能很好地被所有设备支持，因此无论在 <code>create()</code> 中还是 <code>get()</code> 中不指定该参数都会在 Chrome 中触发一条警告。具体请参阅<a href=\"https://chromium.googlesource.com/chromium/src/+/master/content/browser/webauth/uv_preferred.md\">这个页面</a>。</p></blockquote>\n<p>调用 <code>create()</code> 之后，我们就可以拿到一个 <code>Promise</code>，并可以在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>create()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAttestationResponse {\r\n        attestationObject: ArrayBuffer(390) {},\r\n        clientDataJSON: ArrayBuffer(121) {}\r\n    },\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\",\r\n    type: \"public-key\"\r\n}</pre>\n<p>其中有：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：<code>AuthenticatorAttestationResponse</code> 对象，是 <code>PublicKeyCredential</code> 的主要部分，包含以下两个内容：\n<ul>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n<li>\n<code>response.attestationObject: ArrayBuffer</code>：CBOR 编码的认证器数据，包含凭证公钥、凭证 ID、签名（如果有）、签名计数等信息</li>\n</ul>\n</li>\n</ul>\n<p>然后将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串，我们就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证与注册了。具体怎么操作，我们会在下文详细讨论。当然，别忘了 <code>catch()</code> 注册过程中抛出的任何错误。</p>\n<blockquote><p>你可能会认为在所有情况下，注册时认证器都会对挑战进行签名。实际上在大部分情况下（同时也是默认情况），<strong>注册时认证器并不会对挑战进行签名</strong>，<code>attestationObject</code> 并不会包含签名后的挑战。只有依赖方明确要求证明且用户同意（部分浏览器要求）后认证器才会对挑战进行签名（具体实现据情况会有所不同）。对此，<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion#Attestation\">MDN 解释道</a>“大部分情况下，用户注册公钥时我们会使用「初次使用时信任模型」(TOFU) ，此时验证公钥是没有必要的。”要了解更多关于证明的内容，请参阅“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>而对于 <code>navigator.credentials.get()</code>，我们可以传入如下的参数：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.get({\r\n    publicKey: {\r\n        challenge,\r\n        rpId,\r\n        userVerification,\r\n        allowCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>和 <code>create()</code> 一样，对于 <code>get()</code> 我们需要传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值，指明我们需要获取的是公钥凭证而非普通的密码凭证。在 <code>publicKey</code> 对象中我们可以设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rpID: String</code>：（可选）依赖方 ID，需要和注册认证器时的一致。规则和上述的 <code>rp.id</code> 一致，不指定默认使用当前域名</li>\n<li>\n<code>userVerification: String</code>：和上文一样，只是需要注意它这次不在 <code>authenticatorSelection</code> 中了</li>\n<li>\n<code>allowCredentials: Array</code>：（可选）用于标识允许的凭证 ID，使用户代理找到正确的认证器。只有符合这个列表中凭证 ID 的凭证才能被成功返回。数组中的每一项都是对象，包含以下属性：\n<ul>\n<li>\n<code>allowCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>allowCredentials[].id: Uint8Array</code>：允许的凭证 ID</li>\n<li>\n<code>allowCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，和上面的一样，推荐值为 5000-120000</li>\n</ul>\n<p>嗯，要传入的参数少多了。之后，和 <code>create()</code> 一样，调用 <code>get()</code> 之后，我们就可以拿到一个 <code>Promise</code> 并在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>get()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAssertionResponse {\r\n        authenticatorData: ArrayBuffer(37) {},\r\n        signature: ArrayBuffer(256) {},\r\n        userHandle: ArrayBuffer(64) {},\r\n        clientDataJSON: ArrayBuffer(118) {}\r\n    }\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\"\r\n    type: \"public-key\"\r\n}</pre>\n<p>这里的东西就比 <code>create()</code> 时拿到的要多了。看看我们拿到了什么吧：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：对于验证流程，认证会返回 <code>AuthenticatorAssertionResponse</code> 而不是 <code>AuthenticatorAttestationResponse</code> 对象，这个对象包含以下 4 个属性：\n<ul>\n<li>\n<code>response.authenticatorData: ArrayBuffer</code>：认证器信息，包含认证状态、签名计数等</li>\n<li>\n<code>response.signature: ArrayBuffer</code>：被认证器签名的 <code>authenticatorData</code> + <code>clientDataHash</code>（<code>clientDataJSON</code> 的 SHA-256 hash）</li>\n<li>\n<code>response.userHandle: ArrayBuffer</code>：<code>create()</code> 创建凭证时的用户 ID <code>user.id</code>。许多 U2F 设备不支持这一特性，这一项将会是 <code>null</code>\n</li>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n</ul>\n</li>\n</ul>\n<p>同样地，我们将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串后就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证了。至于具体怎么做，别急，马上就来讲一讲。</p>\n<h2>简单实现</h2>\n<p>了这么多，我们终于可以实现一个简单的 WebAuthn 认证页面了。由于在实际操作中 WebAuthn 相关的数据解码和密码计算比较复杂，在服务器端我们可以使用第三方库来帮我们做这些脏活累活，我们只需专注于具体流程就可以了。</p>\n<p>要寻找可用的第三方库，你可以在 <a href=\"https://webauthn.io/\">webauthn.io</a> 上找到适用于各种语言的第三方库——除了 PHP（笑）。不过好在你可以在 GitHub 上找到几个不错的 PHP WebAuthn 库，比如 <a href=\"https://github.com/web-auth/webauthn-framework\">web-auth/webauthn-framework</a>。</p>\n<p>在我们的这个例子中，我们关心的主要是前端逻辑；而后端我们可以使用各类几乎已经做到开箱即用的第三方库，这样我们可以专注于流程而不必关心细节。当然如果你想了解后端的解码细节，可以阅读“<a href=\"https://flyhigher.top/#webauthn-decode\">手动解个码</a>”一节。</p>\n<hr>\n<p>让我们先从注册开始吧。现在，用户点击了注册认证器的按钮，一个请求被发送给服务器（也就是依赖方）。在最简单的情况中，依赖方需要将三个内容发送给浏览器：<strong>挑战、用户信息和用户已注册的凭证 ID 列表（即 <code>excludeCredentials</code>）</strong>。当然依赖方也可以自由选择发送更多信息，只要最终前端能构建合法的参数即可。</p>\n<p>挑战最终会被转换为 <code>Uint8Array</code>，即一组 0-255 的整数。如果使用 PHP，在后端我们可以这样生成 Base64 编码的挑战：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"php\">$challenge = \"\";\r\nfor($i = 0; $i \n<p>对于用户信息，我们需要登录名、显示名称和 ID 三项内容。我们可以从数据库中取出用户信息，也可以新建一份。需要注意的是，<strong>出于安全和隐私的考量，ID 不应该包含用户的任何信息，比如用户邮箱等。</strong>推荐的做法是和挑战一样，生成一个随机字符串/一组随机数，并将其于用户关联起来以供之后使用。</p>\n<p>发送已注册的凭证 ID 列表是为了防止用户重复注册同一个认证器。正确设置该列表后，如果用户试图注册同一个认证器，浏览器会中止流程并抛出 <code>InvalidStateError</code>。</p>\n<p>最后，别忘了将挑战等一些后续可能会用到的信息临时存储起来。Session 就是一个很好的选择。</p>\n<p>将所有信息发送到浏览器之后，我们应该可以构建出新建凭证所需的参数了。由于有多个参数需要以 <code>Uint8Array</code> 的形式传入，我们可以准备一个简单的工具函数帮我们将 Base64 的字符串转为 <code>Uint8Array</code>。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function str2ab(str){\r\n    return Uint8Array.from(window.atob(str), c=&gt;c.charCodeAt(0));\r\n}</pre>\n<p>除了 <code>challenge</code>, <code>rp</code>, <code>user</code> 和 <code>excludeCredentials</code> 几部分需要你根据具体情况设置外，上文提到的其他参数一般可以这么设置：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">publicKey: {\r\n    challenge, // 自行设置\r\n    rp, // 自行设置\r\n    user, // 自行设置\r\n    pubKeyCredParams: [\r\n        {\r\n            type: \"public-key\",\r\n            alg: -7 // ES256\r\n        },\r\n        {\r\n            type: \"public-key\",\r\n            alg: -257 // RS256\r\n        }\r\n    ],\r\n    authenticatorSelection: {\r\n        userVerification: \"discouraged\",\r\n        authenticatorAttachment: null // 除非用户指定，大部分情况下无需指定\r\n    },\r\n    excludeCredentials, // 自行设置\r\n    timeout: 60000\r\n}</pre>\n<p>然后就是传入 <code>navigator.credentials.create()</code>，拿到 <code>PublicKeyCredential</code>。如果一切顺利，接下来我们就需要考虑如何将返回的内容传回依赖方了。由于我们拿到的很多都是 <code>ArrayBuffer</code>，我们需要将其进行编码。再准备一个工具函数吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function array2b64String(a) {\r\n    return window.btoa(String.fromCharCode(...a));\r\n}</pre>\n<p>然后适当处理，我们就可以得到一个方便传输的 JSON 字符串了：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({publicKey}).then((credentialInfo) =&gt; {\r\n    const publicKeyCredential = {\r\n        id: credentialInfo.id,\r\n        type: credentialInfo.type,\r\n        rawId: array2b64String(new Uint8Array(credentialInfo.rawId)),\r\n        response: {\r\n            clientDataJSON: array2b64String(new Uint8Array(credentialInfo.response.clientDataJSON)),\r\n            attestationObject: array2b64String(new Uint8Array(credentialInfo.response.attestationObject))\r\n        }\r\n    };\r\n    return publicKeyCredential;\r\n}).then(JSON.stringify).then((authenticatorResponseJSON) =&gt; {\r\n    // 可以发送了\r\n}).catch((error) =&gt; {\r\n    console.warn(error); // 捕获错误\r\n})</pre>\n<p>依赖方收到数据以后，还需要做三件事：验证挑战、存储凭证 ID 和存储公钥。如果数据解码顺利，且收到的挑战和之前发送的一致，就可以认为注册成功，将凭证 ID 及公钥与用户关联起来。这一步有很多第三方库可以帮我们做，对于基础实现我们就不深入探究了。</p>\n<blockquote><p>由于不同厂商的认证器的实现方式不同，<strong>我们并不能保证凭证 ID 一定是全局唯一的</strong>，也就是说，凭证 ID 有可能碰撞——即使这些凭证实际上是不同的。依赖方在实现凭证 ID 的存储及查找时，需要注意和用户 ID 结合进行存储或查找，或是直接在注册认证器时在服务器端对比阻止相同的凭证 ID。</p></blockquote>\n<hr><p>接下来就可以进行验证了。某天，用户点击了验证按钮准备登录，于是浏览器发送了验证请求到依赖方，同时附上要登录的用户名。接下来依赖方至少需要发送两项内容给浏览器：<strong>挑战和用户已绑定的凭证 ID 列表（即 <code>allowCredentials</code>）。</strong></p>\n<p>之后前端的处理流程就和注册时基本一致了。只是需要注意验证流程中获取到的 <code>PublicKeyCredential</code> 的结构和注册时的稍有不同。</p>\n<p>当浏览器将数据传回后，依赖方需要做的事情就比之前要麻烦一些了。依赖方需要验证挑战，并用之前存储的公钥验证签名和签名计数。同样地，这一步有很多第三方库可以帮我们做。最后，如果验证全部通过，我们就可以允许用户登录了。</p>\n<p>到目前为止，我们已经实现了一个简单的 WebAuthn 验证服务。不过这只是一个最基础的实现，对于很多高安全要求的身份认证这是远远不够的。因此，我们需要摆脱对第三方库的依赖，深入了解 WebAuthn。你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分，不过对于基础的 WebAuthn 实现，我们的旅程就到这里了。</p>\n<h2>拓展阅读</h2>\n<p>如果你的目标只是快速了解如何开发 WebAuthn，那么你阅读到这里就可以了。同时，上一节例子中的部分代码来自于我为了这篇文章开发的 WordPress 插件 WP-WebAuthn，这个插件可以为你的 WordPress 启用 WebAuthn 无密码登录（并非二步验证），你可以查阅插件的 <a href=\"https://github.com/yrccondor/wp-webauthn\">GitHub 存储库</a>了解更多，也可以自己安装试一试。</p>\n<p>如果你正在使用 Chrome 开发，Chrome 87+ 版本添加了一个 WebAuthn 开发者面板，可以帮助你在没有任何实体验证器的情况下开发 WebAuthn 功能。你可以在 Google 的<a href=\"https://developers.google.com/web/tools/chrome-devtools/webauthn\">这篇文章</a>中了解更多。不够，如果你正在使用 Firefox，很遗憾目前我还没有找到对应的开发工具或是浏览器扩展可用。</p>\n<p>如果你希望了解更多关于非对称加密的数学证明，可以查阅阮一峰老师的<a href=\"http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html\">这篇文章</a>。</p>\n<p>如果你希望了解更多关于 Credential Management API 的信息，可以查阅<a href=\"https://medium.com/dev-channel/sign-in-on-the-web-credential-management-api-and-best-practices-d21aed14b6fe\">这篇文章</a>（英文）。</p>\n<p>如果你希望了解更多 WebAuthn 的细节，可以继续往下阅读。<span></span></p>\n<h1>深入了解 WebAuthn</h1>\n<p>如上文所说，如果摆脱对第三方库的依赖，或是要实现更安全的 WebAuthn，我们必须深入了解 WebAuthn。在这一部分中，我们会详细讨论上文没有提到的一些概念和参数，并了解 WebAuthn 中各类数据的结构以实现解码与验证。先来看一看一些进阶的选项吧。</p>\n<h2>进阶选项</h2>\n<p>没错，上文提到的传入 <code>navigator.credentials.create()</code> 和 <code>navigator.credentials.get()</code> 方法的参数其实只是所有参数的一部分。对于 <code>create()</code>，我们还可以配置这些可选内容（上文提及的已省略）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        rp: {\r\n            icon\r\n        },\r\n        user: {\r\n            icon\r\n        },\r\n        attestation,\r\n        authenticatorSelection: {\r\n            requireResidentKey\r\n        },\r\n        extensions\r\n    }\r\n})</pre>\n</pre>\n<ul>\n<li>\n<code>rp.icon: String</code> 和 <code>user.icon</code>：是的，你可以为依赖方和用户设置图标，可以使用 HTTPS URL 或 Base64，一般长度不能超过 128 字节，不过大部分浏览器不会显示图标，或是有非常小的图片体积限制，所以一般没有使用这一属性的必要</li>\n<li>\n<code>attestation: String</code>：表明依赖方是否需要证明。可选三个值：\n<ul>\n<li>\n<code>none</code>：（默认）不需要证明。如上文所述，依赖方不关心证明，因此认证器不会签名。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n<li>\n<code>indirect</code>：依赖方需要证明，但证明方式可由认证器选择。在支持匿名证明的认证器上，认证器会通过匿名证明的方式签名挑战，并向依赖方提供签名方式等信息</li>\n<li>\n<code>direct</code>：依赖方要求直接证明。此时认证器会使用烧录在认证器中的公钥进行签名，同时向依赖方提供签名方式等信息以供依赖方验证认证器是否可信。更多信息可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节</li>\n</ul>\n</li>\n<li>在 <code>authenticatorSelection</code> 中，我们还可以设置两个可选属性：\n<ul>\n<li>\n<code>authenticatorSelection.requireResidentKey: Boolean</code>：是否要求将私钥钥永久存储于认证器中。默认值为 <code>false</code>。对于 iOS/iPad OS 13，必须设置为 <code>false</code>，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n<li>\n<code>extensions: Object</code>：WebAuthn 扩展，可以提供规范之外的配置和响应。由于实际情况中很少会使用这一特性，我们不会在这篇文章中讨论它</li>\n\n<blockquote><p>将 <code>requireResidentKey</code> 设置为 <code>true</code> 可以实现无用户名的登录，即认证器同时替代了用户名和密码。需要注意的是，尽管大部分认证器可以实现无限对公私钥，<strong>但能永久存储的私钥数量是有限的</strong>（对于 Yubikey，这通常是 25），因此只应在真正需要的时候启用此特性。我们会在“<a href=\"https://flyhigher.top/#login-without-username\">无用户名登录</a>”一节中详细讨论原因。</p></blockquote>\n<blockquote><p><strong>如果你没有高安全需求（如银行交易等），请不要向认证器索取证明</strong>，即将 <code>attestation</code> 设置为 \"none\"。对于普通身份认证来说，要求证明不必要的，且会有浏览器提示打扰到用户。</p></blockquote>\n<blockquote><p>Android 暂时无法实施用户验证，进而会导致依赖方验证失败。你可以在<a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=997538\">这里</a>追踪这个特性的实现情况。</p></blockquote>\n<blockquote>\n<p>对于 <code>extensions</code>，由于目前浏览器支持和应用范围有限，我们不会在这篇文章中涉及，不过你可以看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    uvm: true, // 要求认证器返回用户进行验证的方法\r\n    txAuthSimple: \"Please proceed\" // 在认证器上显示与交易有关的简短消息\r\n}</pre>\n<p>你可以在<a href=\"https://www.w3.org/2019/01/webauthn-extensions.html\">这个页面</a>了解更多关于 <code>extensions</code> 的信息。</p>\n</blockquote>\n<p>对于 <code>get()</code>，我们其实只有一个可选内容没讲了，即 <code>extensions</code>。和上文一样，我们不会在这篇文章中讨论它。</p>\n<p>就这些了！<span></span></p>\n<h2>手动解个码</h2>\n<p>是时候看看如何手动解码了。我们将会在这一节中讨论认证器返回的数据的结构以及如何正确地解码它们。</p>\n<p>首先我们来看看如何处理注册过程中认证器发回的数据。假设所有 <code>ArrayBuffer</code> 类型的值都被正确地以 Base64 编码，且后端已经将 JSON 的字符串解析为字典。先来复习一下，我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"ZRBkDBCEtq...9XY8atOcbg\",\r\n    type: \"public-key\",\r\n    rawId: \"ZRBkDBCEtq...9XY8atOcbg==\",\r\n    response: {\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...i5jcmVhdGUifQ==\",\r\n        attestationObject: \"o2NmbXRkbm9uZWd...xNHuAMzz2LxZA==\"\r\n    }\r\n}</pre>\n<p>这里的 <code>id</code> 就是凭证的 ID，如果验证正确，我们最终要将它存储起来并于用户关联。同时可以看到 Base64 编码后的 <code>rawId</code> 其实和 <code>id</code> 是一致的（不过 <code>id</code> 是 Base64URL 编码的）。而 <code>type</code> 则一定是 \"public-key\"。</p>\n<p>不过，我们主要关心的还是 <code>respose</code> 中的两项内容。首先是 <code>clientDataJSON</code>。它的处理比较简单，看名字就知道，它应该是一个 JSON 字符串。</p>\n<blockquote><p>小技巧：如果你看到一个 Base64 编码的字符串以 \"ey\" 开头，那么它大概率是一个 Base64 编码的 JSON。</p></blockquote>\n<p>将<code>clientDataJSON</code> Base64 解码再 JSON 解码之后我们就能得到一个字典：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"NI4i1vsNmP2KHcmyFnBCKRVQPfHgg34SsYZUOPZY2lM\",\r\n    extra_keys_may_be_added_here: \"do not compare clientDataJSON against a template. See https://goo.gl/yabPex\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>结构一目了然。在这里，我们需要验证三项内容：</p>\n<ul>\n<li>\n<code>challenge</code> 和之前发送的一致</li>\n<li>\n<code>origin</code> 为创建凭证的页面的源（协议+主机名+端口号，并非 URL）</li>\n<li>\n<code>type</code> 为 \"webauthn.create\"</li>\n</ul>\n<p>同时可以注意到有一个奇怪的 <code>extra_keys_may_be_added_here</code>。这其实是 Google 在 Chrome 中搞的一点小把戏，有一定概率会出现，提醒我们需要将 JSON 解析后再验证键值以防额外插入的键值影响验证。具体信息你可以访问那个 URL 看一看。</p>\n<p>对于 Firefox，我们会多得到两项 <code>clientExtensions</code> 和 <code>hashAlgorithm</code> ，分别指明了客户端扩展数据和签名算法。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"3-4\">{\r\n    challenge: \"dg6ost6ujhAA0g6WqLe-SOOH-tbhvjW9Sp90aPKlLJI\",\r\n    clientExtensions: {},\r\n    hashAlgorithm: \"SHA-256\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>由于本文不考虑扩展数据，因此我们可以不考虑 <code>clientExtensions</code>。同时由于目前规范中指定的签名算法只有 SHA-256 一种，因此现阶段我们也可以简单地忽略 <code>hashAlgorithm</code>。</p>\n<p><code>clientDataJSON</code> 很简单地就处理完了。接下来我们要来看看 <code>attestationObject</code>。先来看看 <code>attestationObject</code> 的结构图示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\" alt=\"attestationObject 的结构\" width=\"1056\" height=\"532\" class=\"aligncenter size-full wp-image-2245\"></a>\n<p><code>attestationObject</code> 是 CBOR 编码后再被 Base64 编码的，因此我们需要额外对其进行 CBOR 解码。</p>\n<blockquote><p>CBOR (Concise Binary Object Representation, 简明二进制对象表示) 是一种多应用于物联网领域的编码方式，你可以将它看作体积更小、更方便物联网传输的二进制 JSON。大部分语言都可以找到对应的 CBOR 解码库。</p></blockquote>\n<p>我们当然不会手解 CBOR，直接来看看解开之后的样子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"none\",\r\n    attStmt: {},\r\n    authData: [211, 217, 43, 24, 199, ..., 97, 238, 166, 67, 107]\r\n}</pre>\n<p>这些键值的含义如下：</p>\n<ul>\n<li>\n<code>fmt</code>：标明证明的格式。WebAuthn 预定义了几种格式，分别为：\n<ul>\n<li>\n<code>none</code>：没有证明</li>\n<li>\n<code>packed</code>：为 WebAuthn 优化的证明格式</li>\n<li>\n<code>android-safetynet</code>：Android 使用的格式</li>\n<li>\n<code>android-key</code>：又是 Android 使用的格式</li>\n<li>\n<code>fido-u2f</code>：FIDO U2F 认证器使用的格式</li>\n<li>\n<code>tpm</code>：TPM 可信平台模块使用的格式</li>\n</ul>\n</li>\n<li>\n<code>attStmt</code>：证明对象，具体格式根据 <code>fmt</code> 的不同会有所不同</li>\n<li>\n<code>authData</code>：包含公钥、签名计数等来自认证器的数据</li>\n</ul>\n<p>诶，例子里的 <code>attStmt</code> 怎么是空的？还记得之前说的吗？大部分情况下，<strong>如果依赖方不要求证明，那么认证器不会签名挑战</strong>，于是 <code>fmt</code> 会变为 \"none\"，<code>attstmt</code> 会为空。如果不是高安全要求，我们可以只对这一种情况做支持。</p>\n<blockquote><p>注意，部分情况下 Firefox 会在不要求证明（即 <code>attestation</code> 为 \"none\"）时会返回 <code>fmt</code> 为 \"packed\" 的证明。<strong>这是符合规范的。</strong>此时认证器会进行自证明，你可以视情况进行处理。具体可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>对于非 \"none\" 的 <code>fmt</code> 我们稍后再谈，现在我们先来看看 <code>authData</code>。来复习一下 <code>authData</code> 的结构：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\" alt=\"authData 的结构\" width=\"1056\" height=\"384\" class=\"aligncenter size-full wp-image-2240\"></a>\n<p>对于它的解码比较简单粗暴，我们要做的就是根据图示将它切开，然后适当地转换类型。其中各部分的含义如下：</p>\n<ul>\n<li>\n<code>rpIdHash</code>：如其名，SHA-256 的 <code>rpId</code>，长度 32 字节</li>\n<li>\n<code>flags</code>：标识认证状态，长度 1 字节。其中 8 位分别为：\n<ul>\n<li>\n<code>ED</code>：是否有扩展数据</li>\n<li>\n<code>AT</code>：是否包含 <code>attestedCredentialData</code>。通常注册认证器时会包含 <code>attestedCredentialData</code>，而验证时不包含</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>\n<code>UV</code>：用户是否已验证</li>\n<li>保留位</li>\n<li>\n<code>UP</code>：用户是否在场</li>\n</ul>\n</li>\n<li>\n<code>signCount</code>：签名计数，长度 4 字节</li>\n<li>\n<code>attestedCredentialData</code>：包含公钥等凭据数据，变长。其结构如下：\n<ul>\n<li>\n<code>aaguid</code>：认证器的 AAGUID (Authenticator Attestation GUID)，对于同一型号的认证器，它们的 AAGUID 是相同的</li>\n<li>\n<code>credentialIdLength</code>：标识 <code>credentialId</code> 的长度，长度 2 字节</li>\n<li>\n<code>credentialId</code>：凭证 ID，和 <code>rawId</code> 一致，长度由 <code>credentialIdLength</code> 定义</li>\n<li>\n<code>credentialPublicKey</code>：CBOR 编码的 COSE 格式的凭证公钥，变长</li>\n</ul>\n</li>\n<li>\n<code>extensions</code>：扩展数据，变长，本文不讨论</li>\n</ul>\n<blockquote><p>出于隐私考虑，如果不要求证明，认证器会以 0 填充 AAGUID。</p></blockquote>\n<p>如果你的后端在使用 Node.js，这里有个工具函数可以帮你完成这一步（不考虑 <code>extensions</code>）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function parseAuthData(buffer){\r\n    let rpIdHash = buffer.slice(0, 32);\r\n    buffer = buffer.slice(32);\r\n  \r\n    let flagsBuf = buffer.slice(0, 1);\r\n    buffer = buffer.slice(1);\r\n\r\n    let flagsInt = flagsBuf[0];\r\n    let flags = {\r\n        up: !!(flagsInt &amp; 0x01),\r\n        uv: !!(flagsInt &amp; 0x04),\r\n        at: !!(flagsInt &amp; 0x40),\r\n        ed: !!(flagsInt &amp; 0x80),\r\n        flagsInt\r\n    }\r\n\r\n    let counterBuf = buffer.slice(0, 4);\r\n    buffer = buffer.slice(4);\r\n  \r\n    let counter = counterBuf.readUInt32BE(0);\r\n\r\n    let aaguid = undefined;\r\n    let credID = undefined;\r\n    let COSEPublicKey = undefined;\r\n\r\n    if(flags.at) {\r\n        aaguid = buffer.slice(0, 16);\r\n        buffer = buffer.slice(16);\r\n\r\n        let credIDLenBuf = buffer.slice(0, 2);\r\n        buffer = buffer.slice(2);\r\n\r\n        let credIDLen = credIDLenBuf.readUInt16BE(0);\r\n        credID = buffer.slice(0, credIDLen);\r\n\r\n        buffer = buffer.slice(credIDLen);\r\n        COSEPublicKey = buffer;\r\n    }\r\n\r\n    return {rpIdHash, flagsBuf, flags, counter, counterBuf, aaguid, credID, COSEPublicKey}\r\n}</pre>\n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>解开后，依赖方至少需要做四件事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>存储签名计数</li>\n<li>存储公钥</li>\n</ol>\n<blockquote><p>签名计数不一定从 0 开始。</p></blockquote>\n<p>对于公钥，也就是 <code>credentialPublicKey</code>，我们需要多一次 CBOR 解码，然后就可以得到类似这样的公钥：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    kty: \"EC\",\r\n    alg: \"ECDSA_w_SHA256\",\r\n    crv: \"P-256\",\r\n    x: \"ZGQALNfqo0L7HFYQHFHCS/X5db49z0ePnuQEs3w3X8w=\",\r\n    y: \"6qYxhnjYuez/Q8N6vX7nIIGfxFWdZ25NzQfZYuYOalA=\"\r\n}</pre>\n<p>然后可以选择适当的方法将其存储起来，之后的步骤本文就不再赘述了。现在，将目光拉回来，让我们看看包含证明的 <code>attestationObject</code> 是怎么样的。我们来看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"packed\",\r\n    attStmt: {\r\n        alg: -7,\r\n        sig: [48, 70, 2, 33, 0, ..., 132, 78, 46, 100, 21],\r\n        x5c: [\r\n            [48, 130, 2, 189, 48, 130, 1, 165, 160, 3, ..., 177, 48, 125, 191, 145, 24, 225, 169, 41, 248]\r\n        ]\r\n    },\r\n    authData: [211, 217, 43, 24, 199, ..., 158, 54, 87, 126, 54]\r\n}</pre>\n<p>这里有一个使用 \"packed\" 格式的证明。此时，<code>attStmt</code> 中包含三个值：</p>\n<ul>\n<li>\n<code>alg</code>：签名算法</li>\n<li>\n<code>sig</code>：签名值</li>\n<li>\n<code>x5c</code>：X.509 编码的证书链</li>\n</ul>\n<p>我们不会在这一节中详述对签名的验证。要了解更多信息，你可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。现在，让我们来看看如何处理验证过程中认证器发回的数据。我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"hmqdxPLit9...BWeVxZqdvU\",\r\n    type: \"public-key\",\r\n    rawId: \"hmqdxPLit9V...BWeVxZqdvU=\",\r\n    response: {\r\n        authenticatorData: \"09krGMcWTf...UFAAAABA==\",\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...XRobi5nZXQifQ==\",\r\n        signature: \"UsXZV3pvT3np8btj6V0g...WBkaqyt88DrD40qh+A==\",\r\n        userHandle: \"MmYxNWYzZjQyZjM...Tg2ZDY4NzhlNw==\"\r\n    }\r\n}</pre>\n<p><code>id</code>, <code>rawId</code> 和 <code>type</code> 和之前一样，这里就不再赘述了。让我们来看看 <code>response</code>。首先是 <code>clientDataJSON</code>，和之前的解法一样，要验证的内容也一样，只是 <code>type</code> 从 \"webauthn.create\" 变成了 \"webauthn.get\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"bnkd2CmrEuvKnAFXs2QlC3SKlg4XFvGtP4HJL1yEWyU\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.get\"\r\n}</pre>\n<p>然后是 <code>userHandle</code>。前面讲过，这是认证器在创建凭证时的用户 ID。如果用户在使用 U2F 认证器，很可能这一项为空，所以大部分情况下我们不关心这一项。</p>\n<p>接着来看 <code>authenticatorData</code>。这其实就是之前的 <code>attestedCredentialData</code>，只是这次不包含公钥。以相同的方式切开数据，我们应该可以得到 <code>rpIdHash</code>, <code>flags</code>和 <code>signCount</code> 三项。此时，依赖方至少需要做这三样事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>验证签名计数大于之前存储的计数，并更新存储的计数</li>\n</ol>\n<blockquote><p>如果签名计数比之前的小，那么这个认证器很可能是伪造的，应该中止验证并返回验证失败。同时，签名计数不一定每次按 1 递增，通常只要计数比此前的大就认为计数检查通过。</p></blockquote>\n<p>最后，我们来看 <code>signature</code>，也就是签名。不过这个签名不是简单的对挑战的签名，具体算法如图所示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\" alt=\"签名过程\" width=\"1034\" height=\"587\" class=\"aligncenter size-full wp-image-2231\"></a>\n<p>计算签名时，认证器会将 <code>authenticatorData</code> 与 <code>clientDataHash</code>（也就是 <code>clientDataJSON</code> 的 SHA-256 Hash）拼接起来，并使用对应的私钥签名。依赖方应该使用对应的公钥将其解密，并验证内容是否是 <code>authenticatorData</code> 与 <code>clientDataHash</code> 的拼接。这部分的计算不在本文的讨论范围内。</p>\n<p>最后，如果全部验证通过，返回验证成功。<span></span></p>\n<h2>验证认证器</h2>\n<p>WebAuthn 已经很安全了，但有的时候我们还要让它更安全一点。比如，如果用户在使用伪造的或是自制的认证器，认证器的安全性就得不到保证。此时，依赖方就需要验证认证器是否是可信的认证器。</p>\n<blockquote><p>这一过程仅发生在注册认证器时。此时，如果认证器验证通过，就可以存储公钥，后续步骤和之前描述的一致。</p></blockquote>\n<blockquote><p>再次说明，如果不是对安全性有极高的要求，向认证器索取证明以验证认证器是否可信是没有必要的。此外，验证认证器需要依赖方自行维护可信认证器列表，大大增加了维护的复杂性。</p></blockquote>\n<p>在调用 <code>navigator.credentials.create()</code> 时，我们可以将 <code>attestation</code> 设置为非 \"none\" 来向认证器索取证明。除无证明外，WebAuthn 定义了四种证明方式：</p>\n<ul>\n<li>Basic Attestation (Basic) ：基础的证明方式，认证器会使用认证器私钥签名</li>\n<li>Self Attestation (Self) ：自证明，认证器会使用凭证私钥签名</li>\n<li>Attestation CA (AttCA) ：认证器会使用多个证明私钥之一签名</li>\n<li>Elliptic Curve based Direct Anonymous Attestation (ECDAA) ：通过 <a href=\"https://en.wikipedia.org/wiki/Direct_Anonymous_Attestation\">DAA</a> 实现的匿名证明</li>\n</ul>\n<blockquote><p>和验证过程一样，这里签名的目标是 <code>authenticatorData</code> 和 <code>clientDataHash</code> 的连接。</p></blockquote>\n<p>还记得 <code>create()</code> 时 <code>attestation</code> 可选的三个值吗？这个值会决定认证器最终使用哪种方式进行证明。复习一下：</p>\n<ul>\n<li>\n<code>none</code>：大部分情况下认证器会选择不进行证明，部分认证器会进行自证明。此时 AAGUID 会被 0 填充</li>\n<li>\n<code>indirect</code>：认证器会试图通过替换 AAGUID 和选择合适的证明方式来进行匿名证明，具体方式由认证器选择</li>\n<li>\n<code>direct</code>：认证器会提供最直接的证明信息</li>\n</ul>\n<p>注意，大部分情况下，当认证器需要向依赖方证明自己可信时需要提供认证器公钥，<strong>这会触发浏览器提示，只有用户同意后认证器才会进行证明，否则认证器将不提供证明。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\" alt=\"浏览器提示\" width=\"446\" height=\"283\" class=\"aligncenter size-full wp-image-2217\"></a>\n<blockquote><p>为什么浏览器会说“安全密钥的品牌和型号”？事实上，为了避免用户通过认证器证书被跨依赖方追踪，FIDO 要求使用相同认证器证书的认证器的数量不能少于 100,000。于是大部分认证器厂商会选择<strong>让同一型号的认证器共用同一份证书。</strong>因此，浏览器的会询问用户是否同意“查看安全密钥的品牌和型号”。</p></blockquote>\n<blockquote><p>Android Safety Net 不会向用户询问是否同意，而是会静默进行证明。</p></blockquote>\n<p>当证明不为空时，依赖方收到数据后根据 <code>attestationObject.fmt</code> 的不同，需要选择不同的验证方式来验证认证器的可信情况。出于篇幅原因，这里我们不会讨论每一种 <code>fmt</code> 的验证方式，更多信息你可以查阅 <a href=\"https://www.w3.org/TR/webauthn/#defined-attestation-formats\">W3C 文档</a>。</p>\n<p>当 <code>fmt</code> 为 <code>packed</code> 时，<code>attestationObject.attStmt</code> 可能会有三种格式：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// 自证明\r\n{\r\n    alg, // 算法\r\n    sig // 签名\r\n}\r\n// 基础或证明 CA 证明\r\n{\r\n    alg,\r\n    sig,\r\n    x5c // X.509 证书链\r\n}\r\n// 椭圆曲线证明\r\n{\r\n    alg,\r\n    sig,\r\n    ecdaaKeyId // ECDAA-Issuer 公钥标识符\r\n}</pre>\n<p>此时，依赖方需要检查证书符合预期格式并检查证书是否在可信链上。首先，如果证明中既没有 <code>ecdaaKeyId</code> 也没有 <code>x5c</code>，就说明这个证明使用的是自证明，只需使用认证器提供的公钥验证即可；如果有 <code>x5c</code>，那么就需要验证 <code>x5c</code> 中的证书是否在可信链上。将 <code>x5c</code> 中的每个证书以 Base64 编码，按 64 个字符切开，并在头尾加上 <code>-----BEGIN CERTIFICATE-----</code> 和 <code>-----END CERTIFICATE-----</code>就能得到一个证书字符串了。之后，依赖方需要验证证书是否可信。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function base64ToPem(b64cert){\r\n    let pemcert = '';\r\n    for(let i = 0; i \n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>至于 <code>ecdaaKeyId</code>，由于目前应用较少，处理方法可能需要你另寻资料了。检查证书的具体步骤已经超出了本文的范围，具体可以查阅<a href=\"https://medium.com/@herrjemand/verifying-fido2-packed-attestation-a067a9b2facd\">这篇文章</a>（英文）。</p>\n<blockquote><p>你可以在 <a href=\"https://fidoalliance.org/metadata/\">FIDO Metadata Service</a> 找到各大厂商认证器的可信证书链。</p></blockquote>\n<p>当在 Android 上调起 WebAuthn 时，大部分情况下 <code>fmt</code> 将会为 <code>safety-net</code>。此时 <code>attestationObject.attStmt</code> 的结构会是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    ver: \"200616037\",\r\n    response: {\r\n        type: \"Buffer\",\r\n        data: [101, 121, 74, 104, 98, ..., 115, 104, 104, 82, 65]\r\n    }\r\n}</pre>\n<p>此时，<code>clientDataJSON</code> 中还会出现 <code>androidPackageName</code> 键，值是调起 WebAuthn 验证的应用的包名，如 Chrome 就是 \"com.android.chrome\"。</p>\n<p>在这个证明中，<code>data</code> 其实是一个 JWT 字符串，我们可以将它编码为字符串并将其按照 JWT 进行解码（别忘了验证 JWT 签名）。最终我们会得到一个类似这样的 Payload：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    nonce: \"0QAurN4F9wik6GEkblDJhGuf4kuaqZn5zaaxlvD1hlA=\",\r\n    timestampMs: 1584950686460,\r\n    apkPackageName: \"com.google.android.gms\",\r\n    apkDigestSha256: \"2BQHno+bmWWwdLUYylS8HLt5ESJzci3nt2uui71ojyE=\",\r\n    ctsProfileMatch: true,\r\n    apkCertificateDigestSha256: [\r\n        \"8P1sW0EPicslw7UzRsiXL64w+O50Ed+RBICtay2g24M=\"\r\n    ],\r\n    basicIntegrity: true,\r\n    evaluationType: \"BASIC\"\r\n}</pre>\n<p>其中包含了有关设备状态的一些信息。比如说，如果 <code>ctsProfileMatch</code> 为 <code>false</code>，那么该设备很有可能被 root 了。对于高安全要求的场景，我们可以视情况进行验证。</p>\n<p>同时我们可以在 JWT Header 中验证证明的有效性。我们应该能取得这样的 Header：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    alg: \"RS256\",\r\n    x5c: [\r\n        \"MIIFkzCCBHugAwIBAgIR...uvlyjOwAzXuMu7M+PWRc\",\r\n        \"MIIESjCCAzKgAwIBAgIN...UK4v4ZUN80atnZz1yg==\"\r\n    ]\r\n}</pre>\n<p>这里的结构就和上方的 <code>x5c</code> 验证类似了。具体步骤可以参考<a href=\"https://medium.com/@herrjemand/verifying-fido2-safetynet-attestation-bd261ce1978d\">这篇文章</a>（英文）。</p>\n<p>其他所有格式的验证方式也都可以在<a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">这篇文章</a>（英文）中找到。<span></span></p>\n<h2>无用户名登录</h2>\n<p>认证器已经代替了密码，可是这还不够！在进行第一因素认证（即使用 WebAuthn 登录）时，我们还是需要输入用户名，然后才能进行身份认证。懒惰是第一生产力，我们能不能不输入用户名就进行身份认证呢？实际上，大部分认证器都允许我们无用户名登录。<strong>而这一特性的核心就是 Resident Key 客户端密钥驻留。</strong></p>\n<p>你可以思考一下，为什么普通的 WebAuthn 为什么不能实现无用户名登录？事实上，大部分认证器为了实现无限对公私钥，会将私钥通过 Key Warp 等技术加密后包含在凭证 ID 中发送给依赖方，这样认证器本身就不用存储任何信息。不过，这就导致需要身份认证时，依赖方必须通过用户名找到对应的凭证 ID，将其发送给认证器以供其算出私钥。</p>\n<blockquote><p>Yubikey 实现了一个基于 HMAC 的算法，认证器可以在私钥不离开认证器的前提下（常规的 Key Warp 算法中实际上私钥离开了认证器）通过一些输入和凭证 ID 重新计算私钥，你可以阅读<a href=\"https://www.yubico.com/blog/yubicos-u2f-key-wrapping/\">这篇文章</a>了解更多。</p></blockquote>\n<blockquote><p>客户端通过凭证 ID 查找对应认证器的算法根据系统的不同是不同的。通常凭证 ID 中会包含认证器信息，因此系统可以通过凭证 ID 找到对应的认证器。</p></blockquote>\n<p>要避免输入用户名，我们可以要求认证器将私钥在自己的内存中也存储一份。这样，依赖方无需提供凭证 ID，认证器就可以通过依赖方 ID 找到所需的私钥并签名公钥。以下是具体流程：</p>\n<p>注册时：</p>\n<ol>\n<li>依赖方请求新建凭证，同时要求启用客户端密钥</li>\n<li>认证器生成一对公私钥，并将私钥存储在永久内存中且与依赖方 ID 及用户 ID 绑定，随后将公钥发送给依赖方以供存储</li>\n<li>依赖方将用户 ID 即公钥与用户绑定</li>\n</ol><p>验证时：</p>\n<ol>\n<li>依赖方请求验证，但不必提供除依赖方 ID 以外的更多信息</li>\n<li>用户选择认证器</li>\n<li>认证器根据依赖方 ID 找到对应私钥</li>\n<li>如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录</li>\n<li>确定私钥后，认证器签名挑战并将其返回，同时返回用户 ID</li>\n<li>依赖方通过用户 ID 找到对应用户并用对应公钥检查签名，正确则允许对应用户登录</li>\n</ol><blockquote><p>可以看到，这个特性同时要求认证器存储用户 ID，即上面提到过的 <code>userHandle</code>。依赖方需要根据此信息找到对应用户，因此不支持 <code>userHandle</code> 的 U2F 认证器无法进行无用户名登录。</p></blockquote>\n<blockquote><p>如之前所说，<strong>认证器能永久存储的私钥数量是有限的</strong>，因此只应在真正需要无用户名登录的时候启用此特性。</p></blockquote>\n<blockquote><p>目前暂时没有办法检测认证器是否支持客户端密钥驻留，因此在无用户名验证失败时应 fallback 至常规的 WebAuthn 验证，即向用户询问用户名。</p></blockquote>\n<p>现在让我们来看看如何实现这一特性吧。首先，调用 <code>navigator.credentials.create()</code> 时我们需要注意两个参数：<code>requireResidentKey</code> 必须为 <code>true</code>，<code>userVerification</code> 必须为 \"required\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"5-6\">navigator.credentials.create({\r\n    publicKey: {\r\n        ...\r\n        authenticatorSelection: {\r\n            requireResidentKey: true,\r\n            userVerification: \"required\"\r\n            ...\r\n        },\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Windows Hello <strong>似乎</strong>会存储所有已注册的凭据，因此无论是否指定 <code>requireResidentKey</code>，你都可以通过 Windows Hello 进行无用户名登录。</p></blockquote>\n<p>随后，浏览器会询问用户是否允许认证器存储私钥。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\" alt=\"浏览器提示\" width=\"445\" height=\"285\" class=\"aligncenter size-full wp-image-2208\"></a>\n<p>如果用户同意，认证器会存储私钥，并和普通的 WebAuthn 一样返回信息。不过，依赖方收到数据之后，只需将公钥、用户 ID 与用户关联起来，而不必再将凭证 ID 与用户关联起来。至此注册完成。</p>\n<p>之后，在用户请求登录时，无需再向依赖方提供用户名。同时在传入 <code>navigator.credentials.get()</code> 的参数中也有两个需要注意：<code>userVerification</code> 必须为 \"required\"，同时 <code>allowCredentials</code> 必须为空。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"4-5\">navigator.credentials.get({\r\n    publicKey: {\r\n        ...\r\n        userVerification: \"required\",\r\n        allowCredentials: [],\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Android 暂不支持无用户名验证，空的 <code>allowCredentials</code> 会导致浏览器返回 <code>NotSupportedError</code> 错误。</p></blockquote>\n<p>此时，认证器会根据依赖方 ID 找到对应的私钥。如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录。用户选择后，认证器就会使用对应的私钥签名挑战并将其返回。此时，<code>userHandle</code> 一定不为空。</p>\n<p>依赖方收到数据后，需要将 <code>userHandle</code> 作为用户 ID 找到对应的用户，并使用对应的公钥验证签名。如果验证成功，则认为对应的用户身份认证成功，依赖方可以允许其登录。至此验证结束。</p>\n<blockquote><p>有的时候你可能会需要清除认证器中的密钥。绝大多数认证器都提供了对应的软件以供清除存储的密钥，但大部分情况下这会重置整个认证器，这意味着相关认证器此前的所有凭证均会失效。因此建议不要将日常使用的认证器作为开发测试用的认证器。</p></blockquote>\n<h2>从 U2F 认证迁移</h2>\n<p>如果你的服务此前提供了 U2F 第二因素认证，你可能会希望在将依赖方从 U2F 升级到 WebAuthn 时用户此前注册的 U2F 认证器仍然可用而无需重新注册。由于 WebAuthn 向后兼容 U2F 设备，用户是可以继续使用原有的 U2F 认证器的。不过，由于 WebAuthn 的依赖方 ID 与 U2F 的 <code>appid</code> 并不一定相同，你需要将原有的 U2F <code>appid</code> 随 WebAuthn 流程一起传递给认证器，认证器才能使用正确的私钥进行响应。</p>\n<p>要实现这一点，我们只需要在注册及认证仪式中使用 WebAuthn 的 <code>appid</code> 扩展。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    appid: \"https://example.com\" //U2F appid\r\n}</pre>\n<p>此时认证器便可以得到正确的私钥，之后的流程与正常情况一致；依赖方除了正常的 WebAuthn 流程外，不需要再做任何其它操作。</p>\n<h2>拓展阅读</h2>\n<p>我们的 WebAuthn 之旅到这里就真的结束了。不过，你仍然可以自行探究，了解更多。<strong>本文只是一个粗浅的使用指南</strong>，而被称为“Web 身份认证的未来”的 WebAuthn 的深层还要很多细节值得我们挖掘学习，不过本文不会再继续讨论了。</p>\n<p>如果你想了解更多关于 WebAuthn 的信息，最好的方法是直接阅读 <a href=\"https://www.w3.org/TR/webauthn\">W3C 规范</a>。此外，Yubico 也提供了不错的 <a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn 文档</a>。</p>\n<p>要了解更多认证器存储凭证的信息，你可以阅读<a href=\"https://duo.com/labs/tech-notes/how-security-keys-store-credentials\">这篇文章</a>（英文）。</p>\n<p>如果你想了解更多 Android Safety Net 是怎样运作的，可以观看<a href=\"https://youtu.be/8lv_9mydrjg\">这个视频</a>，并通过 <a href=\"https://developer.android.com/training/safetynet/attestation\">Google 的文档</a>了解 Android Safety Net 的更多信息。</p>\n<p>如果你想方便地调试 WebAuthn，<a href=\"https://webauthn.me/\">webauthn.me</a> 提供了一个非常直观方便的<a href=\"https://webauthn.me/debugger\">调试器</a>。</p>\n<h1>参考资料</h1>\n<p><a href=\"https://www.w3.org/TR/webauthn\">WebAuthn Level 1 规范 - W3C</a><br><a href=\"https://github.com/w3c/webauthn\">WebAuthn Level 2 草案 - W3C</a><br><a href=\"https://blog.techbridge.cc/2019/08/17/webauthn-intro/\">一起来了解Web Authentication - TechBridge 技术共笔部落格</a><br><a href=\"https://medium.com/@herrjemand/introduction-to-webauthn-api-5fd1fb46c285\">Introduction to WebAuthn API - Medium</a><br><a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">WebAuthn/FIDO2: Verifying responses - Medium</a><br><a href=\"https://obeta.me/posts/2019-03-01/WebAuthn%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8\">WebAuthn介绍与使用 - obeta</a><br><a href=\"https://webauthn.io/\">webauthn.io</a><br><a href=\"https://webauthn.guide/\">webauthn.guide</a><br><a href=\"https://webauthn.me/\">webauthn.me</a><br><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion\">Attestation and Assertion - MDN</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Authentication_API\">Web Authentication API - MDN</a>（顺便翻译了一半）<br><a href=\"https://fidoalliance.org/fido-technotes-the-truth-about-attestation/\">FIDO TechNotes: The Truth about Attestation - FIDO Alliance</a><br><a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn Developer Guide - Yubico</a><br><a href=\"https://en.wikipedia.org/wiki/WebAuthn\">WebAuthn - Wikipedia</a><br><a href=\"https://techcommunity.microsoft.com/t5/identity-standards-blog/all-about-fido2-ctap2-and-webauthn/ba-p/288910\">All about FIDO2, CTAP2 and WebAuthn - Microsoft Tech Community</a><br><a href=\"https://webauthn-doc.spomky-labs.com/\">Webauthn Framework</a><br><a href=\"https://zhuanlan.zhihu.com/p/25279015\">如何开发支持 FIDO U2F 登录的网站 - 知乎专栏</a><br></p></pre>\n","link":"https://flyhigher.top/develop/2160.html"},{"title":"NLP 找门：用朴素贝叶斯进行文本分类","date":"2020-01-29 11:39:58","description":"\n<blockquote>\n<p>有一天，神收到了一封垃圾邮件，于是世界上就有了朴素贝叶斯算法。</p>\n<footer>——我瞎编的</footer>\n</blockquote>\n<p>为什么这篇文章的标题是 NLP 找门呢？因为如果你看完了这篇文章，你就可以<strong>准备入门</strong>自然语言处理 (<strong>N</strong>atural <strong>L</strong>anguage <strong>P</strong>rocessing) 了。我会把这篇文章当作一篇彻彻底底的 NLP 入门文章来写，尽量避免“专业高端”词汇和“全是奇怪符号”的式子，这样<strong>只要你有高中数学基础</strong>，就能毫无压力地看完这篇文章，学会使用朴素贝叶斯分类算法分类文本。</p>\n<p>让我们开始吧。</p>\n<h1>所以，啥是朴素贝叶斯？</h1>\n<p>简单来说，朴素贝叶斯 (Naïve Bayes) <strong>是一个简单但高效的分类算法</strong>，在进行不复杂的文本分类时高效且拥有不低的准确度，判断垃圾邮件就是用朴素贝叶斯进行文本分类的一个经典例子。当然朴素贝叶斯分类不仅能用在 NLP 中，在许多分类问题中朴素贝叶斯也有非常好的效果，但我们今天只关注它在 NLP 中的应用。</p>\n<p>要了解朴素贝叶斯，我们要先来了解一下贝叶斯定理。</p>\n<blockquote>\n<p>每增加一个数学公式都会使读者减半。</p>\n<footer>——霍金</footer>\n</blockquote>\n<p>那么，就让我们先来看看贝叶斯定理的公式吧（笑</p>\n<p>$$P(A|B) = \\frac{P(AB)}{P(B)} = \\frac{P(B|A)P(A)}{P(B)}$$</p>\n<p>其实还是很简单的，运用高中的条件概率知识就能理解。本质上，贝叶斯定理给出了一种方法，使得我们可以在 \\(P(A|B)\\) 和 \\(P(B|A)\\) 之间互相转换，因为通常情况下它们是不一样的。</p>\n<p>要更好地理解，请考虑这样一个例子：</p>\n<blockquote><p>假设有一个学校图书馆，图书管理员正为找不到某本书而发愁。已知老师有 70% 的意愿借走这本书，而是学生的意愿是 30%，这个学校的师生比例是 1:10，那么借走这本书的人是老师的概率有多大？</p></blockquote>\n<p>设学校总人数为 \\(T\\)，我们可以很容易地写出这样的一个式子：</p>\n<p>$$\\begin{align} P &amp; = \\frac{T\\cdot\\frac{1}{11}\\cdot 70\\%}{T\\cdot\\frac{1}{11}\\cdot 70\\%+T\\cdot\\frac{10}{11}\\cdot 30\\%} \\\\ &amp; = \\frac{70\\%}{70\\%+10\\times30\\%} \\\\ &amp; = \\frac{7}{37} \\end{align}$$</p>\n<p>这就是贝叶斯定理了！等等，你可能会挠挠头，这哪里是贝叶斯了？别急，如果我们把最上面的式子换个字母的话...</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>在这里，\\(H\\) 指 Hypothesis，即假设，而 \\(E\\) 指 Evidence，即证据。这样，这个式子就很好理解了，在我们上面的例子里，借走书是证据，那么 \\(P(E)\\) 就是某个人选择借走这本书的概率；这个人是老师是假设，那么这个人是老师的概率是 \\(P(H)\\)。<strong>注意这里的概率指在学校中抽一个人是老师的概率，并不是“在借走书的前提下”这个人是老师的概率</strong>，而“在借走书的前提下”这个人是老师的概率应该是 \\(P(H|E)\\)，也正是我们要求的概率。同样地，而“这个人是老师”的前提下借走书的概率就是 \\(P(E|H)\\) 了。</p>\n<p>那么再来看看上面我们凭小学知识就列出的计算式，如果把里面的具体数据换成概率来表示的话，这个式子就会变成...</p>\n<p>$$P(H|E) = \\frac{T\\cdot P(E|H)P(H)}{T\\cdot P(E|H)P(H) + T\\cdot P(E|\\neg H)P(\\neg H)}$$</p>\n<p>好吧，这里解释一下，\\(\\neg\\) 符号表示“非”，所以 \\(P(E|\\neg H)\\) 表示在“这个人不是老师”的前提下借走书的概率。而 \\(T\\cdot P(E|H)P(H)\\) + \\(T\\cdot P(E|\\neg H)P(\\neg H)\\)，即“可能借走书的老师的数量 + 可能借走书的学生的数量”，就是“可能借走书的人的数量”了，也就是 \\(T\\cdot P(E)\\)。上下消去 \\(T\\)，我们就能得到上面的式子了。</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>这就是贝叶斯了定理。如果你还是不太清楚，可以去看看 3Blue1Brown 的<a href=\"https://www.bilibili.com/video/av84799361\">这个视频</a>，图形化的讲解会清晰很多。</p>\n<p>这里我要提一下这个式子里各部分的专有名称了（“专业高端”词汇警告），你可以不记住，直接看后面。</p>\n<ul>\n<li>\\(P(H|E)\\) 叫做 \\(H\\) 的<strong>后验概率</strong>，反之亦然</li>\n<li>\\(P(H)\\) 叫做 \\(H\\) 的<strong>先验概率</strong>，反之亦然</li>\n<li>特别地，我们把 \\(P(E|H)\\) 称作<strong>“似然值”</strong>，即 likelihood</li>\n</ul>\n<p>那什么是朴素贝叶斯呢？按上面所说的，朴素贝叶斯是一种分类算法。简单来说，朴素贝叶斯将一个对象的各个特征考虑为互相独立，然后根据这些特征的概率的乘积来判断对象所属的分类。基本原理如下：</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)} \\propto P(E|H)P(H) = P(H)\\prod_{i}P(W_i|H)$$</p>\n<p>在这里，\\(W_i\\) 指某一对象的第 \\(i\\) 个特征，对于文本分类来说，这就是一段文本中的某个单词。</p>\n<p>朴素贝叶斯之所以“朴素”，是因为它要求<strong>各个特征间是独立的</strong>，在文本分类中也就是各个单词之间互不干扰。虽然思路简单的代价是适用范围变窄，不过由于这样的简化在很多情况下已经足够了，因此实际上朴素贝叶斯的应用范围非常广。<del>你看朴素贝叶斯 <strong>N</strong>aïve <strong>B</strong>ayes 的缩写都是 NB 了，能不厉害吗（逃</del></p>\n<h1>那么，咋分类啊</h1>\n<p>看来你这下完全听懂了呢（笑），是时候看看如何在 NLP 中应用朴素贝叶斯了。和上面一样，我们用一个具体的例子来说明。我们的目标是让电脑学会分类美国共和党和民主党的演讲稿，由于两个党派的演讲风格不同，所以这样的分类在理论上是可行的。</p>\n<div class=\"wp-block-file\">\n<a href=\"https://acdn.flyhigher.top/nlp/material.zip\" download>material.zip</a><a href=\"https://acdn.flyhigher.top/nlp/material.zip\" class=\"wp-block-file__button\" download>下载</a>\n</div>\n<p>上面我们要用到的数据集，你可以下载下来一起动手玩一玩。先说一下数据集的数据结构吧，压缩包里有两个文件，<code>train.txt</code> 将会被当作训练数据集，而 <code>test.txt</code> 则会作为训练结束后的验证数据集。两个文本文件里数据的结构是类似的，就像这样：</p>\n<pre class=\"EnlighterJSRAW\">BLUE WELL I AM SO HONORED AND PERSONALLY UNKNOWNWORD TO BE HERE...\r\nRED THANK YOU . THIS IS QUITE AN INSTITUTION . IT'S GOOD TO BE...</pre>\n<p>每行都是一篇演讲稿，每行的第一个单词指明了这篇演讲稿所属的党派，<code>RED</code> 指共和党，而 <code>BLUE</code> 指民主党。所有单词和符号都已经被转为大写并由空格分隔方便处理。<code>train.txt</code> 有共和党演讲稿和民主党演讲稿各 23 篇，<code>test.txt</code> 有 6 篇共和党演讲稿，12 篇民主党演讲稿。</p>\n<p>明白了？那我们就开始吧。</p>\n<h2>捋捋思路</h2>\n<p>首先，我们需要考虑如何在文本分类中应用朴素贝叶斯。很简单，按朴素贝叶斯的思路，<strong>计算每个词在某一分类下的出现概率，然后将某篇文章的所有词的概率相乘，再乘以该分类的先验概率，就可以得到某篇文章在某一分类下的概率。</strong></p>\n<p>$$P(Class|Article) = P(Class)\\prod_{i}P(Word_i|Class)$$</p>\n<p>各个分类概率都计算完成后，概率最高的那个分类就是这篇文章可能所属的分类。这个思路的核心就是用词决定了文本风格，文本的不同类别用词会有差异，只要能量化这些差异就可以分类文本。在我们的例子中，我们可以从 <code>train.txt</code> 中统计各个词汇的出现情况，然后用 <code>test.txt</code> 中的数据按上面的算法验证我们算法的准确性。</p>\n<p>这个思路很简单也很清晰，但还有一些问题需要解决。<strong>第一，有的时候，我们的测试数据集中可能会出现一个在训练数据集中没有出现过的词语。这个时候，朴素贝叶斯的计算结果会是 0。</strong>如果我们把 0 乘进式子中，那就别想得到正常的结果了。所以，我们还需要对计算某一单词在某一分类中的式子稍加改进。使用拉普拉斯平滑，就可以避免出现概率为 0 的情况。别被名字吓到，拉普拉斯平滑是一种非常简单的平滑方法：在分子上 +1，在分母上加整个取值范围，这样就可以给整个分式加上非常微小的偏移，避免出现 0。</p>\n<p>$$\\begin{align} P(Word_i|Class) &amp; = \\frac{Word_iCountInClass}{AllWordCountInClass} \\\\ &amp; \\approx \\frac{Word_iCountInClass + 1}{AllWordCountInClass + UniqueWordCount} \\end{align}$$</p>\n<p><strong>第二，对于长文本，大部分词语在某一分类中的出现概率是远小于 1 的，加上长文本词汇量大，往往概率相乘的结果会非常小。</strong>受限于计算机处理浮点数的原理，精确处理这么小的数字是很麻烦的。幸好，运用一些简单的数学知识就可以将其转化为更精确的表达，<strong>那就是取对数。</strong></p>\n<p>首先，将概率计算结果取对数并不影响我们的计算结果。因为取对数是一个单调递增的操作，而我们计算概率只是为了排序选择概率最高的分类，因此取对数是不影响我们排序的。而把多项式取对数，等于把多项式的每一项取对数后相加。所以我们有：</p>\n<p>$$\\lg{\\Big(P(Class)\\prod_{i}P(Word_i|Class)\\Big)} = \\lg{P(Class)} + \\sum_i\\lg{P(Word_i|Class)}$$</p>\n<p>大部分情况下，在每一次取对数的时候，要取对数的数字的大小，即 \\(P(Word_i|Class)\\) 尚还在计算机能处理的范围内，<strong>因此我们可以放心地使用取对数的方法</strong>，避免计算机精度不够影响结果。</p>\n<p><strong>第三就是在某些情况下，可能会有部分词语干扰计算结果</strong>，如 and, is 这类的被大量使用的中性词。如果希望得到更好的结果，我们可以维护一个停用词表，在计算时排除停用词即可。或者，我们可以在计算完每个单词的出现数量后，排除数量最多的前 \\(N\\) 个单词，避免这些单词过多地影响计算。</p>\n<h2>写点代码</h2>\n<p>现在我们终于可以开始实战，写点代码了。我会用简单的 Python 来表达思路。好了，理一理思绪，第一步我们要做的，是统计训练数据集中的用词情况。具体来说，根据上面的思考，我们需要统计的有：</p>\n<ul>\n<li>每个单词在各分类中出现的数量</li>\n<li>各分类中的不重复词数量</li>\n</ul>\n<p>用 Python 简单表示如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\"># 读入数据过程略...\r\ndata_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ndata_blue = []\r\ndata_red = []\r\nword_count_blue = {}\r\nword_count_red = {}\r\n\r\nfor line_data in data_raw:\r\n    word_list = line_data.split(\" \") # 分隔单词\r\n    if word_list[0] == \"BLUE\":\r\n        for i in range(1,len(word_list)):\r\n            if not is_excluded(word_list[i]): # 判断是否为停用词\r\n                data_blue.append(word_list[i])\r\n                # 统计单词出现次数\r\n                word_count_blue.setdefault(word_list[i], 0)\r\n                word_count_blue[word_list[i]] += 1\r\n    elif word_list[0] == \"RED\":\r\n        # Class = red 时同理...\r\n\r\n#统计非重复词\r\nunique_words_blue = list(set(data_blue))\r\nunique_words_red = list(set(data_red))</pre>\n<p>训练过程到这里就结束了，计算机已经知道了各政党演讲的用词习惯。很简单吧？接下来我们就要使用测试数据集来测试准确度了。<strong>这里开始就涉及到朴素贝叶斯的计算了</strong>，可能会稍微复杂一点点。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">import math\r\n#读入测试数据过程略...\r\ntest_data_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ntest_data = []\r\n\r\nfor line_data in test_data_raw:\r\n    if line_data[0] == \"BLUE\":\r\n        content_data = line_data.split(\" \").pop(0)\r\n        test_data.append({\"class\": \"blue\", \"content\": content_data})\r\n    elif line_data[0] == 'RED':\r\n        # ...\r\n\r\nfor line_data in test_data:\r\n    posibility_blue = 0\r\n    for word in line_data[\"content\"]:\r\n        # 计算各单词概率，取对数后相加，使用了拉普拉斯平滑\r\n        if word in word_count_blue:\r\n            posibility_blue += math.log((word_count_blue[word]+1)/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n        else:\r\n            posibility_blue += math.log(1/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n    # 最后加上该分类概率的对数\r\n    posibility_blue += math.log(len(data_blue)/(len(data_blue)+len(data_red)))\r\n\r\n    # 计算 Red 同理...</pre>\n<p>计算完成后，我们就得到每篇演讲稿在各分类下的概率了。之后，简单的比较就能得出推断的分类：如果 \\(P(Red|Article)\\) 大于 \\(P(Blue|Article)\\)，那么这篇演讲稿就更可能是共和党的演讲稿，反之则是民主党的演讲稿。</p>\n<p>很好理解吧？那么这么简单的思路，准确性怎么样呢？对于我们的例子，这是我设置了个别停用词后的结果：</p>\n<pre class=\"EnlighterJSRAW\">+-----+-------+--------------+--------------+-------+-------+\r\n|   ID|  Class|        P(Red)|       P(Blue)|  Guess| Status|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|    1|   Blue|  -23204.68377|  -22998.67066|   Blue|      √|\r\n|    2|   Blue|  -16438.44625|  -16137.48257|   Blue|      √|\r\n|    3|   Blue|  -33468.81214|  -32567.61801|   Blue|      √|\r\n|    4|   Blue|    -8606.2193|   -8601.50426|   Blue|      √|\r\n|    5|   Blue|  -12430.97436|  -11935.70662|   Blue|      √|\r\n|    6|   Blue|  -44033.02883|  -43877.55367|   Blue|      √|\r\n|    7|   Blue|   -16947.2851|  -16758.57542|   Blue|      √|\r\n|    8|   Blue|  -26957.26997|  -26889.62444|   Blue|      √|\r\n|    9|   Blue|  -27503.73985|  -27249.21828|   Blue|      √|\r\n|   10|   Blue|   -20528.4457|   -19991.1248|   Blue|      √|\r\n|   11|   Blue|  -20337.96493|  -19860.12831|   Blue|      √|\r\n|   12|   Blue|  -28409.28489|  -28118.98017|   Blue|      √|\r\n|   13|    Red|  -13756.01015|  -14488.11751|    Red|      √|\r\n|   14|    Red|  -17221.22732|  -17710.15936|    Red|      √|\r\n|   15|    Red|  -17397.45136|  -17899.98659|    Red|      √|\r\n|   16|    Red|  -10724.69095|  -11092.77837|    Red|      √|\r\n|   17|    Red|  -10402.40027|  -10859.48681|    Red|      √|\r\n|   18|    Red|   -9371.53792|    -9669.6769|    Red|      √|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|                                      Total: 18/18, 100.0% |\r\n+-----------------------------------------------------------+</pre>\n<p><strong>100% 的准确率哦！</strong>事实上，对于我们的这个例子，就算不设置停用词，我们仍能达到 100% 的分类准确率。朴素贝叶斯分类的确很 NB 呢。</p>\n<h1>更进一步</h1>\n<p>我们的探索到这里就结束了，但如果你有兴趣，完全可以继续探索下去。我们的例子是一个非常简化的例子，在实际情况中，还有很多问题需要解决。比如，对于中文及类似语言，不存在拉丁语系的天然分词结构，而朴素贝叶斯的文本分类是基于单词的，那么<strong>中文的分词就会是个问题；</strong>再比如，对于朴素贝叶斯分类来说，<strong>词语之间的顺序是不影响分类结果的</strong>，但这就会导致“今天心情很好，但昨天不好”和“昨天心情很好，但今天不好”在朴素贝叶斯看来是一样的，要想获得更好的结果，我们必须<strong>考虑词语的顺序。</strong></p>\n<p>这些问题，今天我们就不再深究了，但你可以自己探索。比如，引入思路同样很简洁的马尔科夫链，我们就可以让计算机学会考虑词语间的顺序，不过那就会是另一个话题了。</p>\n","link":"https://flyhigher.top/develop/1989.html"},{"title":"MDx 中增强页面可访问性的细节","date":"2020-01-25 16:45:04","description":"\n<blockquote><p>这篇文章本来是打算发在 <a href=\"https://mdxblog.flyhigher.top/\">MDx Blog</a> 的，不过写到后来发现这篇文章相对来说还是有价值的，于是就将这篇文章转移到了无垠，MDx Blog 则不再发表这篇文章。</p></blockquote>\n<p>从 MDx 开发之初，增强页面的可访问性就被列为了一个重要目标。从 HTML 语义化，到 ARIA 地标，再到 <code>prefers-reduced-motion</code>，随着浏览器对于增强页面可访问性的支持功能越来越多，MDx 也在不断地更新，让更多的人都能毫无困难地浏览、查看由 MDx 渲染的网页。本文会详细说明一些 MDx 中增强页面可访问性的细节，<strong>如果你希望增强自己开发的网页的可访问性，本文可能会对你有所帮助。</strong></p>\n<h1>基础性增强</h1>\n<p>增强可访问性，最重要也是最基础的一点就是 HTML 语义化。通过使用 HTML 5 语义化标签和 ARIA Role 标签，我们可以很方便地<strong>将整个网页在语义上分为几部分，而这将有效地改善屏幕阅读器对网页的分析质量，使视力障碍用户更好地浏览网页。</strong></p>\n<h2>HTML 语义化</h2>\n<p><strong>HTML 语义化属于增强页面可访问性的基础中的基础。</strong>通过使用语义化的 HTML 标签，我们可以方便地为网页中的各部分标记功能而不影响页面样式。随着符合 HTML 5 的现代化网页成为主流，语义化标签已被很大一部分网站所支持，我也不过多赘述了。就举几个常用的“地标性”标签吧：</p>\n<ul>\n<li>\n<code>header</code> 标签标记页眉，默认样式同 <code>div</code>，不要把它和 <code>head</code> 搞混了</li>\n<li>\n<code>main</code> 标签标记页面的主要内容，默认样式同 <code>div</code>\n</li>\n<li>\n<code>article</code> 标签标记文章（在 HTML 5 中它指任何独立或可复用的文本），默认样式同 <code>div</code>\n</li>\n<li>\n<code>footer</code> 标签标记页脚，默认样式同 <code>div</code>\n</li>\n<li>\n<code>nav</code> 标签标记页面导航栏区域，默认样式同 <code>div</code>\n</li>\n<li>\n<code>aside</code> 标签标记侧栏，默认样式同 <code>div</code>\n</li>\n<li>\n<code>section</code> 标签标记“一组内容”，你可以把它看作是划定网页中一块区域的通用标签，默认样式同 <code>div</code>\n</li>\n</ul>\n<p>只要用这些标签替代 <code>div</code> 而不是无脑使用 <code>div</code> 就能提高页面的可访问性。MDx 使用了这些标签来增强页面的可访问性。</p>\n<h2>下一步，ARIA</h2>\n<p>有的时候，出于一些原因，我们没法使用语义化的 HTML 标签，或者没有合适的语义化标签来标记内容，这时候<strong>我们就需要使用 ARIA (Accessible Rich Internet Applications，可访问的富互联网应用)。</strong>ARIA 的基础用法很简单，只要在相应元素上加上 <code>role</code> 属性指定该元素的功能即可。下面是一个简单的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;div role=\"navigation\"&gt;\r\n  &lt;ul&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page A&lt;/a&gt;&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page B&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page C&lt;/a&gt;&lt;/li&gt;\r\n  &lt;/ul&gt;\r\n&lt;/div&gt;</pre>\n<p>通过 <code>role=\"navigation\"</code>，我们把一个 <code>div</code> 标记为了导航栏区域。实际上，对屏幕阅读器来说，这和 <code>nav</code> 标签在语义上是一致的。上一节中的例子都可以分别用以下 ARIA Role 表示：</p>\n<ul>\n<li><code>role=\"heading\"</code></li>\n<li><code>role=\"main\"</code></li>\n<li><code>role=\"article\"</code></li>\n<li><code>role=\"contentinfo\"</code></li>\n<li><code>role=\"navigation\"</code></li>\n<li><code>role=\"complementary\"</code></li>\n<li><code>role=\"region\"</code></li>\n</ul>\n<p>除此以外，MDx 还使用了 <code>role=\"banner\"</code> 和 <code>role=\"search\"</code> 来分别标记页面中的顶部栏和搜索表单。另外，<strong>有的时候 <code>role</code> 属性还需配合 <code>aria-*</code> 属性一同使用</strong>，具体规则比较复杂，我就不在这里赘述了，具体可参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles\">WAI-ARIA Roles - MDN</a>。</p>\n<h1>媒体查询来帮忙</h1>\n<p>CSS 的媒体查询其实是一个非常强大的特性，<strong>妥善利用其中的一些特性，我们可以在网页外观上大大增强网页的可访问性。</strong>除了已经烂大街的“对浏览器窗口大小”响应的媒体查询，我会介绍 3 个很少有网站充分利用的媒体查询。</p>\n<h2>print</h2>\n<p><code>print</code> 媒体查询其实已经“历史悠久”了，<strong>只要使用 <code>@media print {...}</code> 就可以创建只在打印页面时生效的样式。</strong>通过这种方式，我们可以让页面在打印时应用一套为打印优化的样式，增强页面在物理纸张上的可访问性。</p>\n<blockquote><p>维基百科是对打印样式做了单独适配的著名例子。</p></blockquote>\n<p><strong>由于在打印的情况下，页面已经离开了“可交互”的范围，还有分页这种在屏幕中无需考虑的问题，要让页面在物理纸张上仍能被轻松地阅读，我们需要做一些特殊的适配。</strong>直接来看一个例子吧。以下是 MDx 针对打印情况进行的一些特殊优化，样式的具体理由已经写在了注释中。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media print {\r\n    /*隐藏不必要的元素*/\r\n    header, .mdx-ad-after-article, .mdx-ad-in-article, .mdx-post-money, .page-footer-nav, .mdx-same-posts, .spanout button, .mdui-drawer, .mdui-overlay, .mdui-menu, .mdx-share-img-dialog, .mdx-share-wechat-dialog {\r\n        display: none!important;\r\n    }\r\n\r\n    /*使用下划线标记链接*/\r\n    article a {\r\n        text-decoration: underline!important;\r\n    }\r\n    /*由于纸张不可交互，在链接后显示链接到的 URL*/\r\n    article a::after {\r\n        content: \"(\" attr(href) \")\";\r\n    }\r\n\r\n    /*强制白底黑字*/\r\n    html &gt; body {\r\n        background-color: white!important;\r\n    }\r\n    article p {\r\n        color: rgba(0,0,0,.8)!important;\r\n    }\r\n\r\n    /*对于纸张上的长文章，衬线字体拥有更好的可读性。以下字体列表来自 fonts.css*/\r\n    article {\r\n        font: 13pt Georgia, \"Nimbus Roman No9 L\", \"Songti SC\", \"Noto Serif CJK SC\", \"Source Han Serif SC\", \"Source Han Serif CN\", STSong, \"AR PL New Sung\", \"AR PL SungtiL GB\", NSimSun, SimSun, \"TW\\-Sung\", \"WenQuanYi Bitmap Song\", \"AR PL UMing CN\", \"AR PL UMing HK\", \"AR PL UMing TW\", \"AR PL UMing TW MBE\", PMingLiU, MingLiU, serif!important;\r\n    }\r\n\r\n    /*除部分元素外，禁止在元素内部分页*/\r\n    * {\r\n        page-break-inside: avoid;\r\n    }\r\n    article p, article a, #comments, article {\r\n        page-break-inside: auto;\r\n    }\r\n}</pre>\n<p>MDx 自 1.9.3 版本起已经包含了对文章页的打印样式优化。可以很容易地看出，优化后的样式在物理纸张上将更容易阅读。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\" alt=\"\" width=\"1345\" height=\"1602\" class=\"aligncenter size-full wp-image-1959\"></a>\n<h2>prefers-color-scheme</h2>\n<p><code>prefers-color-scheme</code> 是最近才被浏览器广泛支持的一个媒体查询，但它的功能却很强大：<strong>响应系统级黑暗模式。</strong>这样，我们可以在开启黑暗模式的系统中让网页具有更好的可读性。不过由于这个媒体查询直到最近才被广泛支持，因此大部分网站对此并没有进行适配。</p>\n<blockquote><p>一些适配这一特性的网站：少数派、微信公众平台（文章页）等。</p></blockquote>\n<p>通过像这样的媒体查询，我们可以在系统启用黑暗模式时让页面实时响应：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    body {\r\n        background-color: #212121;\r\n        color: rgba(255, 255, 255, .7);\r\n    }\r\n}</pre>\n<p><code>prefers-color-scheme</code> 一共有 3 个可能值：<code>no-preference</code>, <code>light</code> 和 <code>dark</code>。你也可以不像上面的例子那样默认使用亮色样式并在黑暗模式下启用黑暗样式，而可以反过来将黑暗样式作为默认，用亮色样式覆盖。在不支持的浏览器上将会显示默认样式（即媒体查询不会生效）。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<h2>prefers-reduced-motion</h2>\n<p>看名字就猜得出，<code>prefers-reduced-motion</code> 是和 <code>prefers-color-scheme</code> 师出同门的媒体查询。因此，和 <code>prefers-color-scheme</code> 一样，它也是在最近才获得了浏览器的广泛支持。它的作用也很强大：<strong>响应系统的“减弱动态效果”模式。</strong>这对某些不喜欢甚至无法接受动画的用户可能很有帮助。要知道，对有些用户来说这甚至是医疗上的必要。使用如下的媒体查询，我们可以在系统启用减弱动态效果模式时让页面实时响应，减弱动画：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-reduced-motion: reduce) {\r\n    /*只是一个示例，实际情况中可以保留一些淡入淡出效果*/\r\n    * {\r\n        transition: all 0s!important;\r\n        transform: none!important;\r\n    }\r\n}</pre>\n<p><code>prefers-reduced-motion</code> 只有 2 个可能值：<code>no-preference</code> 和 <code>reduce</code>，在不支持的浏览器上该媒体查询不会生效。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\" alt=\"\" width=\"792\" height=\"515\" class=\"aligncenter size-full wp-image-1962\"></a>\n<h1>黑暗模式适配</h1>\n<p>黑暗模式可不是简单地切换到黑底白字这么简单。<strong>单纯地使用黑底白字会导致页面元素之间对比度过高，文字刺眼，反而降低了页面的可访问性。</strong>我在下面总结了几条应用在了 MDx 中的黑暗模式优化规则和 Google 推荐的优化规则：</p>\n<p><strong>一是避免黑底白字。</strong>黑底白字看起来真的很难受，事实上，深灰和浅灰是黑暗模式最好的配色。比较下方例子里的两段文本，毫无疑问深灰色背景和浅灰色文字搭配的样式的可读性要比黑底白字高很多。（p.s. 有时候这条规则在白底黑字时也适用）</p>\n<p><strong>二是更改部分元素的亮度和对比度以增强可读性。</strong>你可能已经注意到了，下面优化的例子里标题文字的颜色改变了。很明显，未优化的黑暗模式中标题可读性不如优化的版本。在实际中，我们通常可以通过 CSS 滤镜来实现这一更改。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    h1 {\r\n        /*反相颜色后再将色相旋转 180 度，使亮度反相*/\r\n        filter: invert(1) hue-rotate(180deg);\r\n    }\r\n}</pre>\n<p><strong>三是避免让图片过亮。</strong>未经处理的图片通常会导致过高的对比度，降低可读性。在 MDx 中，我选择降低图片的亮度来避免图片刺眼，而 Google 的建议则是使图片灰度，不过这会影响图片的整体观感。无论是哪一种方案，都可以使用 CSS 滤镜来轻松实现。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    img { \r\n        /*MDx 方案*/\r\n        filter: brightness(.8);\r\n        /*Google 方案*/\r\n        filter: grayscale(.5);\r\n    }\r\n}</pre>\n<div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是未优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是经过优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n</div>\n<h1>其他细节</h1>\n<p>还有一些细节，虽然简单，但不可或缺。我把一部分没有在上文提到的 MDx 中的细节列在了这里。</p>\n<p><strong>一是允许页面缩放。</strong>在开发响应式页面时，很多网站会在页面头部添加这样一个 <code>meta</code>：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"&gt;</pre>\n<p>这样的 <code>meta</code> 设定了页面的宽度，却也固定了页面的缩放比例，用户难以手动放大网页。<strong>这样的设置对一部分视力障碍用户非常不友好</strong>，以至于苹果决定在自家的浏览器上忽略禁止缩放的 <code>meta</code>。按照 Google 的推荐，如果你在 MDx 设置中启用了“允许页面缩放”，那么 MDx 会输出这样的 <code>meta</code> 标签，允许页面进行五倍以内的缩放：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=5\"&gt;</pre>\n<p><strong>尽管很多时候放大页面会导致页面结构被破坏，但这大大增强了页面的可访问性，利大于弊。</strong>因此，在 MDx 中，“允许页面缩放”是默认启用的。</p>\n<p><strong>二是在跨设备阅读时同步阅读记录。</strong>这属于 MDx 的“元老级”功能之一。注意到页面右上角的那个“在其他设备上继续阅读”的按钮了吗？如果你滚动页面后重新点击它，你会发现二维码发生变化了。通过在二维码中记录阅读进度，用户在扫描二维码切换设备阅读时，MDx 在新设备上会自动滚动到和原设备上一致的位置——好吧，目前基于百分比的算法在某些情况下可能不太准，但我已经设计了一个更复杂但更精确的阅读进度记录算法，之后就会更新到 MDx 中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\" alt=\"\" width=\"1000\" height=\"574\" class=\"aligncenter size-full wp-image-1976\"></a>\n<p><strong>三是避免 Web 字体阻塞渲染。</strong>如果你在页面中使用了 Web 字体，在字体加载完成之前，浏览器可能不会渲染任何文本，这就导致用户可能需要等待一段时间才能开始浏览网页。Google 推荐使用 <code>font-display: swap;</code> 来向浏览器指定网页的 Web 字体渲染策略。这一规则会提供一个比较短的等待周期，如果在这段时间内 Web 字体没有完成加载，那么浏览器会以 fallback 字体渲染文本。任意时刻一旦 Web 字体完成渲染，浏览器就会使用 Web 字体重新渲染文本。这在大多数情况下都能满足可访问性的需求。</p>\n<p><strong>四是确保 html 元素具有合适的 <code>lang</code> 属性。</strong>这一属性声明了页面的主要语言，浏览器可以据此调整渲染策略，或者触发自动翻译；屏幕阅读器也能更好地阅读网页。</p>\n<p><strong>五是确保页面主要内容在丢失/禁用了 Javascript 甚至 CSS 的情况下仍然可用。</strong>作为一个以内容为主的网站，MDx 在禁用了 Javascript 的情况下页面主要内容仍然可用。这不只是为了 SEO，更是为了保证页面的可访问性。的确，目前的情况下，如果开启了 Lazyload，MDx 在禁用 Javascript 的情况下图片的确无法显示，但我会在后续版本中尽可能的优化这一问题。</p>\n<h1>附录：媒体查询开发技巧</h1>\n<p>有的时候，光有 CSS 响应媒体查询还不够，我们可能需要在 Javascript 中实时响应媒体查询。用如下代码就可以很简单地响应媒体查询：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let mql = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\r\nmql.addListener(handleMediaChange);\r\n\r\n//在添加监听后先调用一次，获得当前查询结果\r\nhandleMediaChange(mql);\r\n\r\nfunction handleMediaChange(mql){\r\n    if(mql.matches){\r\n        //查询匹配\r\n    }else{\r\n        //查询不匹配\r\n    }\r\n}</pre>\n<p>在开发上述媒体查询的过程中，我们需要频繁地切换系统的相应模式或者调出打印窗口。<strong>实际上，Chrome 提供了更简单的调试方法：</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1946\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\" alt=\"\" width=\"723\" height=\"681\"></a>\n<p>只要在这里更改模式，相关媒体查询就能实时生效。这不会影响其他标签页，在关闭开发者工具之后也会自动恢复系统设置。</p>\n","link":"https://flyhigher.top/develop/1912.html"},{"title":"MDx Blog 现已随 MDx 1.9.5 发布","date":"2020-01-22 17:54:11","description":"<p>随着 MDx 发布 1.9.5 更新，<a href=\"https://mdxblog.flyhigher.top/\" rel=\"noopener noreferrer\" target=\"_blank\">MDx Blog</a> 现已建立。我将会在 MDx Blog 中分享一些开发故事并发布 MDx 更新日志。</p>","link":"https://flyhigher.top/diary/1905.html"},{"title":"GitHub 2019 统计无垠版","date":"2020-01-12 13:02:00","description":"\n<h1>缘起</h1>\n<p>2019 年底，我突发奇想想要自己统计一番 GitHub 上存储库的一些信息。尽管 GitHub 有自己的<a href=\"https://octoverse.github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">年度统计</a>，我还是想试着自己爬取一下，说不定能挖出什么有意思的信息，何况这是我第一次有机会处理比较大量的数据，也算是一种学习的过程吧。于是花了一下午写了个简单的爬虫（时间都花在增加 Rate Limit 上了...），然后扔在了两台服务器上开始跑（GitHub  API 真是好文明）。</p>\n<p>从 2019.11.21 3 时到 2020.1.12 24 时的 52 天 21 小时内，我的爬虫一共爬取了<strong>与 2,024,705 个用户有关<sup>*</sup>的 14,651,923 个公共存储库的基础信息</strong>，平均每秒爬取 3.2 个存储库。据 GitHub 的官方数据计算，我爬取了大约 15% 的存储库信息，但由于封禁库和私有库的数量未知，我暂时无法确定我爬取的存储库占公共库的比例。同时由于存储库数量较多，基本可以认为爬取到的样本在时间尺度上已经足够随机，可以通过统计得出一般结论。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\" alt=\"\" width=\"700\" height=\"606\" class=\"aligncenter size-full wp-image-1892\"></a>\n<p>爬到自己了，合影.jpg</p>\n<p>那么下面就来看看统计出来的一些结果吧。爬虫的技术细节和数据集下载放在文末。</p>\n<p>* 指这些用户拥有至少一个库</p>\n<h1>统计信息</h1>\n<p><strong>以下统计结果均基于已放于文末的数据集。</strong>由于爬虫爬取的时间跨度长，加上我并没有完整爬取 GitHub 所有存储库，因此我<strong>不能保证以下统计结果符合真实情况</strong>，各位可以下载数据集或自行爬取进行验证。</p>\n<h2>一些数据</h2>\n<div>\n<div>\n<div>\n<span>3,120,930</span><br>总爬取用户数</div>\n<div>\n<span>44.7%</span><br>的存储库创建<br>自 Fork</div>\n<div>\n<span>6.59%</span><br>的账户被删除或<br>封禁<sup>1</sup>\n</div>\n<div>\n<span>23,913</span><br>单用户拥有最大<br>库数量<sup>2</sup>\n</div>\n</div>\n</div>\n<p><sup>1</sup> 基于用户 ID 规律合理推断<br><sup>2</sup> 统计范围仅限于当前数据集</p>\n<p>比较出乎我意料的是创建自 Fork 的存储库的占比。我预估这样的存储库占比不会太低，但没有想到能接近一半。此外单用户拥有最大库数量也大大超出了我的预期，<a href=\"https://github.com/pombredanne\" rel=\"noopener noreferrer\" target=\"_blank\">pombredanne</a> 这个用户名下拥有将近 24k 的存储库，不过绝大多数都是 Fork 来的，在情理之中。此外<strong>这个数据集中</strong>拥有最多存储库的账户其实是一个组织 <a href=\"https://github.com/gitpan\" rel=\"noopener noreferrer\" target=\"_blank\">gitpan</a>，这个组织拥有 36,377 个存储库。</p>\n<h2>语言</h2>\n<p><canvas></canvas><br>\n首先必须要说明的是，在这个榜单中我<strong>排除了 HTML 和 CSS</strong>，因为在严格意义上它们不属于“编程语言”。如果把它们计算进来的话，分别有 640,368 个和 361,425 个存储库的主要语言分别是 HTML 和 CSS，这样在这份榜单中它们可以排到第 6 和 第 10 名。JavaScript 毫无疑问获得第一，第二名 Python 的热度则和 JavaScript 相差将近一半。<strong>此外还有 2,448,486 个存储库未能识别出语言，占比 16.7%。</strong>在上面的榜单之外，与机器学习和数据科学相关的语言还有 Jupyter Notebook 排名第 13，R 排名 20，Julia 排名 43。</p>\n<p>说实话这份排名和 GitHub 官方的排名<strong>差别很大</strong>，除了前三名，后面的基本都不太一样。我的排名统计结果完全基于 GitHub 对于存储库的主要语言识别，加上我的存储库数据不完整，和官方的数据不同是很正常的，可以做一个参考，但大概率还是官方排名更加准确。</p>\n<h2>许可证</h2>\n<p><canvas></canvas></p>\n<p>自 GitHub 推出许可证功能以来，拥有许可证的存储库比例升升降降，却始终没有超过一半。<strong>选择一个合适的许可证对项目的良好发展真的很有帮助</strong>，要了解如何选择合适的许可证，请参阅<a href=\"https://www.runoob.com/w3cnote/open-source-license.html\" rel=\"noopener noreferrer\" target=\"_blank\">这篇文章</a>。</p>\n<p><canvas></canvas></p>\n<p>对于拥有许可证的存储库，MIT<del> 麻省理工许可证 </del>总是占比最大的；第二则是 Apache-2.0 许可证。此外，WTFPL 许可证也挤入了前 15 名。</p>\n<h2>星标</h2>\n<p><canvas></canvas><br>\nStar 数量毫无疑问是一个存储库受欢迎程度的体现，而 Star 数高的项目基本上大家都了解过。<strong>截至爬取结束时间</strong>，GitHub 中 Star 数最多的库是 <a href=\"https://github.com/freeCodeCamp/freeCodeCamp\" rel=\"noopener noreferrer\" target=\"_blank\">freeCodeCamp</a> <del>非常完美的驼峰命名法</del>，其次则是著名项目 <a href=\"https://github.com/996icu/996.ICU\" rel=\"noopener noreferrer\" target=\"_blank\">996.ICU</a>。<a href=\"https://github.com/vuejs/vue\" rel=\"noopener noreferrer\" target=\"_blank\">Vue</a> 现在的 Star 数已经稳压 <a href=\"https://github.com/facebook/react\" rel=\"noopener noreferrer\" target=\"_blank\">React</a> 一头，Vue YES! 此外 <a href=\"https://github.com/sindresorhus/awesome\" rel=\"noopener noreferrer\" target=\"_blank\">awesome</a> 也挤进第七名。<br><canvas></canvas><br>\n由于 Star 需要时间积累，新项目的 Star 数量很可能是比不过老项目的，这就会导致有实力的新项目无法出现在榜单中。因此我还统计了日均 Star 数，试图通过日均 Star 数来反映项目受欢迎的程度。<strong>由于正热门的项目会比老牌热门项目有优势，这一项的统计范围是 2020-01-01 之前的所有存储库。</strong>996.ICU 和 freeCodeCamp 再次出现在前 10 名，而最近的热门项目 <a href=\"https://github.com/wenyan-lang/wenyan\" rel=\"noopener noreferrer\" target=\"_blank\">wenyan</a> 则飙升至第 2 名。此外还有 <a href=\"https://github.com/menzi11/BullshitGenerator\" rel=\"noopener noreferrer\" target=\"_blank\">BullshitGenerator</a>，即最近热门的“狗屁不通文章生成器”和 <a href=\"https://github.com/evil-huawei/evil-huawei\" rel=\"noopener noreferrer\" target=\"_blank\">evil-huawei</a> 分列第 3 和第 5 名。<br><canvas></canvas><br>\n说实话这个曲线<strong>比我预估的陡多了。</strong>你可能已经注意到了，这个图表的横轴不是均匀缩放的，实际上曲线要比看起来陡很多。同时受爬取方式的影响，GitHub 中 Star 数较少的存储库数量远比我爬取到的多。也就是说，<strong>实际情况下曲线远比这个图表上的陡。</strong>拿点 Star 不容易啊。</p>\n<h2>名称</h2>\n<p><canvas></canvas><br>\n终于知道了原来存储库的名称是有长度限制的...尽管最长有 100 位，<strong>大部分人还是喜欢 8 位长的存储库名。</strong>此外 1 位长的名称也比我预估的要多一些。举几个存储库名称长度为 100 的例子吧。</p>\n<ul>\n<li>testing-something-elsetesting-something-elsetesting-something-elsetesting-something-elsetesting-some</li>\n<li>acts_as_validated_config_so_app_will_not_run_in_random_situation_and_qa_gays_will_not_cry_to_you_whe</li>\n<li>............................................________-....................................-.---......</li>\n<li>----------------------------------------------------------------------------------------------------</li>\n<li>nyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyan</li>\n</ul>\n<p>...创造力有够丰富的。</p>\n<p><canvas></canvas></p>\n<p>最近 GitHub 上有一种奇怪的风气，那就是建立 Awesome 合集<del>骗 Star</del>。看起来 Awesome 存储库满地都是，甚至还出现了关于 Awesome 的 Awesome 合集这种迷惑行为。于是我统计了一下，<del>还好，</del>占比<del>才</del> 0.5% 不到<del>，Awesomer 们任重而道远呐</del>。</p>\n<p><canvas></canvas></p>\n<p>尽管要在 github.io 上托管网站，存储库不一定要以 .github.io 结尾，但我还是统计了一下。拥有这类存储库的用户比我预想的要少一些，看来还有很多人没有完全发挥 GitHub 的完整实力啊<del>（比如我 Doge）</del>。同时<strong>这类存储库在所有存储库中占比 1.12%</strong>，看起来不多<del>，不过至少比 Awesome 多</del>。<br><canvas></canvas><br>\n看得出来 GitHub 对于用户名长度的限制是 1-40 位。用户名最短的 27 位占据了 <code>A-Z</code> 外加 <code>-</code> 的所有可能，而用户名最长的则是一个组织 <a href=\"https://github.com/UOIT-RESEARCH-database-information-group\" rel=\"noopener noreferrer\" target=\"_blank\">UOIT-RESEARCH-database-information-group</a>。不知道是巧合还是某种规律，<strong>最受欢迎的用户名长度和存储库名称长度一样，都是 8</strong>，有点意思。</p>\n<h2>创建时间</h2>\n<p><canvas></canvas><br>\n由于我并没有完整爬取所有存储库，我只能以相对值来统计每月新增存储库数量的变化趋势。<strong>在这个图表中，我将 2017-09 的数据设为了 100%。</strong>你一定一眼就能注意到 2017 年 6,7,8 月的“一柱擎天”。<del datetime=\"2020-02-05T09:18:30+00:00\">我第一次看到这个数据的时候的确愣了一下，不过就着这条新闻看就能明白为什么了：<strong>2017 年 6 月微软收购 GitHub。</strong></del></p>\n<blockquote><p>重新确认了一下，微软收购 GitHub 比这个高峰晚了一年，目前我对这个高峰没有什么很好的解释，如果你有什么思路的话欢迎评论。</p></blockquote>\n<p><strong>需要注意的是这张图表中我排除了 Fork 存储库</strong>，因为 Fork 存储库在 API 中的创建时间是原始存储库的时间，会影响整体趋势。此外，GitHub 中还有一个创建于 2007 年 10 月 29 日的存储库，那就是 <code>id: 1</code> 的...</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"mojombo\" data-mdxgithubp=\"grit\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/mojombo/grit\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>而它的创建者正是 GitHub 的创始人之一 Tom Preston-Werner。</p>\n<h1>一些有趣的结果</h1>\n<p>当初打算自己爬的目的之一就是想看看能不能挖出什么有意思的信息，结果真的有一些不挖不知道的信息。</p>\n<h2>奇怪的存储库</h2>\n<p>在爬取到的所有存储库中，<strong>有 3 个存储库是“无主”的</strong>，即它们的 owner 属性为空。这三个存储库的基本信息如下。</p>\n<div class=\"mdui-table-fluid mdui-table-hoverable\"><table class=\"mdui-table\">\n<thead><tr>\n<th>ID</th>\n<th>名称</th>\n<th>Forked</th>\n<th>Star</th>\n<th>语言</th>\n<th>许可证</th>\n<th>创建于</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>72385291</td>\n<td>vscode-redprl</td>\n<td>否</td>\n<td>10</td>\n<td>TypeScript</td>\n<td>apache-2.0</td>\n<td>2016-10-31 08:50:01</td>\n</tr>\n<tr>\n<td>181218346</td>\n<td>electron-sys</td>\n<td>否</td>\n<td>10</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-14 03:20:56</td>\n</tr>\n<tr>\n<td>181391880</td>\n<td>node-sys</td>\n<td>否</td>\n<td>6</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-15 09:33:08</td>\n</tr>\n</tbody>\n</table></div>\n<p><strong>更奇怪的是这三个存储库“无主”的情况还不一样。</strong>第一个存储库可以通过 <code>/repositories</code> 这个 GitHub API 找到， <a href=\"https://api.github.com/repositories?since=72385290\" target=\"_blank\" rel=\"noopener noreferrer\">这个链接</a>中的第一个存储库就是它；而其余两个存储库甚至无法在 <code>/repositories</code> API 中找到。不过就算能在 API 中找到第一个存储库，它的 <code>html_url</code>，即 <code>https://github.com//vscode-redprl</code> 仍然是不可访问的。这可能是 GitHub 早期的一个 Bug 导致的，不过我仍然对爬虫是如何找到这三个存储库的以及这些 Stars 是哪里来的感到好奇。</p>\n<h2>奇怪的用户名</h2>\n<p>在爬虫爬了一段时间以后，API 中突然开始出现大量的以 fdp 开头的 18 位乱码作为用户名的用户。这些用户拥有的存储库和 starred 的存储库都为 0，而他们的 <code>html_url</code> 为 404。以下是几个例子。</p>\n<ul>\n<li>fdpEpolGCEdQX4ZlRJ</li>\n<li>fdp8XaVrdtmDZnO5pR</li>\n<li>fdp8XRAGnwAOkTr2Ya</li>\n</ul>\n<p>由于我的爬虫并没有超过 Rate Limit，所以我排除了这是污染数据的可能。我怀疑这可能是某种 Bot 账户，于是一边更新爬虫过滤掉了这些用户，一边给 GitHub 支持发邮件问了具体情况。过了两天 GitHub 回复我说这些是<strong>被自动判为可疑进而被封禁的用户</strong>（原话是 they have been flagged by our automated measures for detecting suspicious behavior）。<del>想到我正在疯狂爬取 GitHub，突然害怕.webp</del></p>\n<p>行吧。</p>\n<h1>技术细节</h1>\n<p>爬虫使用 Python3 编写，数据库使用 MySQL。爬虫共使用了 4 个 API Token，在两台服务器上分布式爬取。爬取思路为：</p>\n<ol>\n<li>通过 <code>/users</code> API 遍历用户，每个请求最多获取 30 个用户信息</li>\n<li>循环 30 个用户，分别获取 <code>/users/&lt;user_name&gt;/starred</code> 和 <code>/users/&lt;user_name&gt;/repos</code> API 中的存储库信息，每个请求最多获取 100 个存储库信息，超过 100 个的分页获取</li>\n<li>提取存储库信息，插入数据库。对于已存在的存储库，更新数据</li>\n<li>获取下 30 个用户信息</li>\n</ol>\n<p>由于爬取过程中我多次调整了爬虫逻辑，爬虫爬取到的用户 ID 区间并非连续的，具体区间为1-839586, 14800001-14885493 及 28965251-31161101。</p>\n<h1>免责声明</h1>\n<p>本站会尽可能地提供准确信息，但本站不对此文章中信息的准确性和即时性及带来的任何影响负责。</p>\n<p>本站不代表 GitHub 官方，本文仅供学习之用，请不要将本文内容直接用于任何商业项目中。</p>\n<h1>数据集下载</h1>\n<p>导出的 SQL 文件大约为 1.38GB，全部放在了 GitHub 上（在危险的边缘试探.webp</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"github-analysis-2019\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/github-analysis-2019\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>此外我也提供了 MEGA 下载，链接<a href=\"https://mega.nz/#F!juxm3A6T!7Vwpzi82W1OFrqTLu1A1pQ\">在这里</a>。</p>\n","link":"https://flyhigher.top/develop/1564.html"},{"title":"Milkice 跨年红包解谜 Writeup 及无垠跨年红包解谜答案","date":"2020-01-02 04:29:19","description":"\n<blockquote><p><del>又到了水文章的时间呢</del></p></blockquote>\n<p>先说明一下，这篇文章原本不是在计划中的，而原来说好的「在路上的两篇」文章<del>绝对不会咕</del>。我自己的红包答案本来打算直接塞在年度总结里的，结果发现稍微有些长，再加上我还花了一些时间解了<a href=\"https://milkice.me/\">奶冰</a>的红包解谜游戏，就打算把两个解谜过程放在一起单独写一篇文章。<del>真是个水文章的好理由</del>（被打死</p>\n<h1>奶<del> 子 </del>冰的红包</h1>\n<p>奶冰的红包题目比我的难多了，所以让我们先从难的开始吧。首先看一下<a href=\"https://milkice.me/2019/12/31/2019-summary/\">题目</a>：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1524\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\" alt=\"\" width=\"746\" height=\"410\"></a>\n<p>入口是 <code>happy.2020.milkice.me</code>，扔到浏览器里面表示找不到 IP，那么大概率就是 DNS 的 TXT 记录了，查一下得到 <code>nb2hi4dthixs63ljnrvwsy3ffzwwkl3tivrvezluomxxg5dsmvqw2ltqmnqxa3th</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1525\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\" alt=\"\" width=\"896\" height=\"278\"></a>\n<p>第一眼没看出来是什么编码，直觉是 BaseXX 系列的编码，加上提示“不只有 Base64”，可以推断出是 Base32，转大写解码得到 <code>https://milkice.me/sEcRets/stream.pcapng</code>。是个 URL，下载得到一个 Wireshark 文件，打开一看是和某 USB 设备的通讯抓包。<del>不会做，不做了。</del></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1526\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\" alt=\"\" width=\"1500\" height=\"813\"></a>\n<p>奶冰提示我“Google 上搜得到”，结合第二条提示搜索“wacom pcapng”找到了<a href=\"https://blogs.tunelko.com/2017/02/05/bitsctf-tom-and-jerry-50-points/\">这篇文章</a>（<del>这™就是答案啊</del>）。看起来是一样的套路，即通过解析数据得到数位板上画的内容，于是按文章的思路筛选出数位板发给主机的数据，导出，然后再用 tshark 导出文本数据。本来我想直接用文章中的 POC 的，结果折腾半天因为源的蜜汁原因库没装上，于是按文章中给出的数据结构自己写了段代码，分别导出 X、Y 轴数据扔进 Excel 画散点图。（<del>别问我为什么用 Excel，因为我手边没有更好的工具了</del>）</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1528\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\" alt=\"\" width=\"1280\" height=\"530\"></a>\n<p><span>翻车现场之一</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1539\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\" alt=\"\" width=\"1000\" height=\"286\"></a>\n<p><span>懵逼奶冰.webp</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1533\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\" alt=\"\" width=\"1500\" height=\"462\"></a>\n<p>看得出有手写文字，不过是上下颠倒的，翻转图片得 <code>https://milkice.me/2020/uso.zip</code>。是个 zip，下载打开一看，有密码。<del>不会解，不做了。</del> 第一反应是暴力解密码，但是暴力跑了 15 分钟还是没有跑出来。暴力太不优雅了，肯定不是正确思路，但奶冰什么都不肯说了。不过在这时我终于发现第一个红包口令码就藏在压缩包的注释中，Get。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1544\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\" alt=\"\" width=\"806\" height=\"593\"></a>\n<p>然而题还没解完，回去看提示，看到提供了 osu 谱面下载，于是打算不管怎么样先下载来看看。然而 osu 谱面下载要登录，只好又花了几分钟找到第三方站点，成功下载。这时候可以注意到 uso.zip 里有个同名文件（432314 Mike Greene - Bill Nye the Science Guy Theme Song (Chinese Intro).osz），可以联想到是明文攻击。好吧，上 ARCHPR，十秒解出。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1530\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\" alt=\"\" width=\"462\" height=\"643\"></a>\n<p><span>现场还原.jpg</span></p>\n<p>.osz 文件并不是明文，猜测是压缩包（和 .pptx 一个思路嘛），于是改后缀 .zip 顺利打开。然后红包口令码就藏在奶冰的 .osu 文件中了，由提示可知是明文，打开即可得到。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1542\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\" alt=\"\" width=\"457\" height=\"255\"></a>\n<h1>我的红包</h1>\n<p>相比起来<a href=\"https://flyhigher.top/diary/1464.html\">我的题目</a>就简单很多了嘛...三天时间一共发出了 25 个红包，包括一位重复领取的🌚，比前几年还是多了一些的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\" alt=\"\" width=\"500\" height=\"306\" class=\"aligncenter size-full wp-image-1554\"></a>\n<p><span>这位同学以后请不要多次领取🌚</span></p>\n<p>那么来看看答案吧。</p>\n<h2>第一阶段</h2>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>首先观察字符串，可以发现 <code>.</code> <code>/</code> <code>_</code> 等一些 ASCII 字符原样留在了字符串中，而其他字符被由 <code>=</code> 和十六进制构成的某种编码所替代。如果你正好有所了解，你应该能认出这是 Quoted-printable 编码，这是一种常用于邮件中的编码，可以用<a href=\"https://mothereff.in/quoted-printable\">这个页面</a>解码。如果你不了解，你也应该可以发现这种编码和 URL 编码非常相似。如果你把 <code>=</code> 替换为 <code>%</code>，那么你就可以用各种方法顺利地把它按 URL 编码来进行解码，最后可以得到 <code>αхtоn.іm/соdе_оf_2020_⒈mρз</code>。这个字符串里大部分字符都不是 ASCII 字符，只是长得像而已。根据第一个提示“全是 ASCII 字符”，按样子把字符串用 ASCII 字符抄一遍，可以得到最终 URL 为 <code>axton.im/code_of_2020_1.mp3</code>。</p>\n<h2>第二阶段</h2>\n<p>下载音频，可以听出音频是经过某种处理的白噪音。白噪音的特点是各频段的功率都均匀分布，在白噪音上做文章，很容易就可以联想到线索藏在频谱中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1534\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\" alt=\"\" width=\"1200\" height=\"719\"></a>\n<p>频谱被处理成了 24x3 的网格，结合第二条提示“24x3，横向读取”可以推断出是将频谱当作二进制读取，得到 <code>01111001 01110010 01100011 00101110 01101101 01100101 00101111 00110010 00110000</code>，转为 ASCII 字符可得 <code>yrc.me/20</code>。</p>\n<h2>第三阶段</h2>\n<p>打开上一步得到的页面，提示要求输入十位数密码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1536\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\" alt=\"\" width=\"663\" height=\"460\"></a>\n<p>如果你在上一步注意到了这个音频文件奇怪的属性，你可以反应过来这里的密码就是 <code>2000202020</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1537\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\" alt=\"\" width=\"421\" height=\"651\"></a>\n<p>如果你没有注意到，查看页面代码可以看到一条注释 <code>&lt;!-- Tips: the attribute of the audio --&gt;</code> 将你引导向音频文件的属性。输入密码，解锁即可进入下一步。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1535\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\" alt=\"\" width=\"397\" height=\"223\"></a>\n<h2>第四阶段</h2>\n<p>可以看到是一张图片，内容为“<del>.JPG</del>”和“.ZIP”。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter size-large wp-image-1532\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n<p>和去年一样的套路，下载图片，将后缀名改为 .zip 然后打开，可以看到 README.txt。</p>\n<h2>最后一步</h2>\n<p>查看 README.txt 的内容，可以了解到需要去 🤔.axton.cc 获取红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1538\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\" alt=\"\" width=\"1131\" height=\"278\"></a>\n<p>扔到浏览器里会出现奶冰同款找不到 IP，于是可以联想到 TXT 记录。唯一的问题是 🤔 这个 Emoji 需要如何处理。域名使用 Punycode 将 Unicode 字符转换为 ASCII 字符，特点是以 <code>xn--</code> 开头。如果你把上面这个域名扔进浏览器，你会发现它变成了 <code>xn--wp9h.axton.cc</code>。然后查询 TXT 记录，即可得到红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1527\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\" alt=\"\" width=\"804\" height=\"557\"></a>\n","link":"https://flyhigher.top/develop/1519.html"},{"title":"无垠 2019 年度总结","date":"2019-12-29 12:25:52","description":"\n<p>又是时间飞快的一年...写 2018 总结的情景似乎还在眼前，转眼居然已经到 2019 年末了。</p>\n<p>2019 年，发生了太多事情，包括真的转折了人生的高考，这也导致我博客更新的不多（难以置信居然才更了两篇...），不过两篇技术性文章已经在路上了，可以期待一下。</p>\n<p>2019 年我也学了不少东西（单指技术方面），比如终于认真学了 Vue（但是还要练手）。书买了一大堆，看完的倒是没几本orz</p>\n<p>呼，好吧，是时候回顾一下充满坎坷的这一年了。2019 年还剩下最后两天，希望 2020 年，我能做得更好。</p>\n<h1>一些数据</h1>\n<p>照惯例先来看看一些数据吧。今年是统计系统完整统计了的第二年，终于可以和去年的数据比较一下了。以下数据的统计范围是 2019年1月1日0时至 2019年12月29日20时。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 26,901 (<span>+4%</span>)，年 PV 76,583 (<span>+3%</span>)，日均 UV 73.7，平均停留时间 5分13秒 (<span>-13.8%</span>)，平均跳出率 53% (<span>+20.5%</span>)。一年有效文章数 2 (<span>-50%</span>)，新增评论 439 条。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\" alt=\"\" width=\"1000\" height=\"1143\" class=\"aligncenter size-full wp-image-1511\"></a>\n<p>有趣的是今年文章数腰斩，访问数反而小有提升。<del>如果我哪天不更新了，访问数是不是可以无限大呢？</del></p>\n<p>今年博客最大的改动就是把整体风格切换到了 Material Design 2（当然这是 <a href=\"https://flyhigher.top/develop/788.html\">MDx</a> 中的可选功能，给自己打个广告2333），此外还有比较失败的 WebP 改造计划，因为和缓存冲突已经回滚了。<a href=\"https://flyhigher.top/develop/1245.html\">ABS 系统</a>进展不大，主要是真的没有太多时间，还是要再学习一个。</p>\n<h2>个人主页</h2>\n<p>虽然个人主页的 TODO List 列了老长，但今年完全没有更新，也没有推广，从今年 8 月底开始还莫名被某墙认证了，直到 11 月底才恢复，于是今年总访问量比去年少了很多，</p>\n<p>有多少呢？这么少：总 UV 2,141 (<span>-65.9%</span>)，总 PV 2,744 (<span>-66.6%</span>)，日均 UV 6 (<span>-65.9%</span>)，平均停留时间 62秒 (<span>+19.2%</span>)。主要来源是知乎和 V2EX，还有一些甚至是从微信来的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\" alt=\"\" width=\"1000\" height=\"1103\" class=\"aligncenter size-full wp-image-1512\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 8 次，新增 171 commits，2 种语言的翻译，Star 数增加了 175，现有 408。感谢所有人的支持，尤其是 <a href=\"https://github.com/Sn0bzy\" rel=\"noopener noreferrer\" target=\"_blank\">Hasan CAN</a>, <a href=\"https://github.com/yechs\" rel=\"noopener noreferrer\" target=\"_blank\">Ye Shu</a>, <a href=\"https://github.com/StarryLeo\" rel=\"noopener noreferrer\" target=\"_blank\">StarryLeo</a>, <a href=\"https://github.com/DCTewi\" rel=\"noopener noreferrer\" target=\"_blank\">冻葱Tewi</a>, <a href=\"https://github.com/syfxlin\" rel=\"noopener noreferrer\" target=\"_blank\">Otstar Lin</a> 等为 MDx 做出了不小贡献的你们。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：<a href=\"https://flyhigher.top/photograph/1309.html\">上手</a> DJI OSMO Pocket</li>\n<li>四月：最后一次参加浙江省普通高中学业水平考试</li>\n<li>五月：MDx 喜提 300 Stars</li>\n<li>六月：高考 <del>炸了，差亿点点上浙大</del>\n</li>\n<li>六月：入手了 Oneplus 7 Pro</li>\n<li>六月：和同学一起去成都重庆旅行</li>\n<li>六月：第一次近距离感受到地震</li>\n<li>六月：<a href=\"https://flyhigher.top/diary/1411.html\">入手</a>了一台雷蛇灵刃 15，目前是主力机</li>\n<li>七月：参与组织 THE Hack 2019 活动</li>\n<li>七月：面基了 <a href=\"https://itroy.cc/\" rel=\"noopener noreferrer\" target=\"_blank\">Tory</a>, Bie Shi 和 <a href=\"https://oxz.me/\" rel=\"noopener noreferrer\" target=\"_blank\">FHYunCai</a>\n</li>\n<li>八月：一个人去厦门武汉转了一圈，拍了自己的第一个 Vlog</li>\n<li>八月：入手了一个 Kindle Paperwhite 4，没有泡面可以压，于是用来看英文小说了</li>\n<li>八月：加入 TEDxNingbo 志愿者团队</li>\n<li>八月：和 Ralph 面基</li>\n<li>八月：入手了一个 Yubikey</li>\n<li>九月：人生第一次参加雅思考试 <del>7分，蛮开心的</del>\n</li>\n<li>十月：入手了一个 Samsung Galaxy Watch Active 2 <del>觉得不值</del>\n</li>\n<li>十一月：MDx 达到 400 Stars</li>\n<li>十一月：为 TEDxNingbo 设计开发的 H5 上线</li>\n<li>十一月：入手了第一台胶片相机，试图入坑胶片摄影</li>\n<li>十一月：参加 TEDxNingbo 2019 大会</li>\n<li>十二月：<del>我 Cytus II 入门了</del>\n</li>\n</ul>\n<h1>跨年红包</h1>\n<p>这算「传统习俗」了。和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2020年1月2日。</p>\n<p>今年的解谜旅程，从下面这个字符串开始。</p>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>由于今年的题目比以前稍微难了一些，所以今年的红包金额还是比较大的，而且不限量，尽你所能试一试吧。</p>\n<p>一点你可能用得上的提示：URL 里全是 ASCII 字符 / 24x3，横向读取。</p>\n<p><a href=\"https://flyhigher.top/develop/1519.html\">答案</a>已公布。</p>\n<h1>跨年海报</h1>\n<p>这算是另一个「传统习俗」（笑）。因为我有做跨年海报的习惯，所以以下就是今年份的海报啦。</p>\n<p>用了 C4D+PS，还有我的一整个下午。</p>\n<p>提前祝各位新年快乐！</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter wp-image-1467 size-large\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n","link":"https://flyhigher.top/diary/1464.html"}]