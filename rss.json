[{"title":"【小考据】高畑勋与初音未来","date":"2022-04-07 09:00:25","description":"\n<p data-pid=\"J8PWv0mI\">前天 4 月 5 日，是动画导演·高畑勋的忌日，刚好和群友们考据了他和初音未来、Vocaloid 的关系。以下为动画制作人西村义明在高畑勋导演的《辉夜姬物语》的制作日记翻译：</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"zUfj-KN-\">高畑先生的剧本工作进展艰难。有一天，我去了高畑家，高畑先生像往常一样摆弄电脑，但是，他没有打开文档。你到底在做什么！？</p>\n<p data-pid=\"ApELLKsT\"><b>高畑先生：“西村，你知道幽门菌（Pylori 菌）吗？”</b></p>\n<p data-pid=\"BzK3nArI\"><b>西村：“我听说过。是在胃里的家伙来着？”</b></p>\n<p data-pid=\"N0NB_gfZ\"><b>高畑先生：“是的。我在上次的体检中发现这些东西了哦，好像得胃溃疡或者胃癌的可能性会增加。其实应该必须根治。”</b></p>\n<p data-pid=\"tIEvZPfk\"><b>西村：“那，好像是根治比较好。”</b></p>\n<p data-pid=\"POVVCv-M\"><b>高畑先生：“那么，你知道幽门菌的全名吗？”</b></p>\n<p data-pid=\"rDhebyh1\"><b>西村：“全名？ 不，我不知道。”</b></p>\n<p data-pid=\"uimSbIEJ\"><b>高畑先生：“是叫幽门螺杆菌（Helicobacter pylori 菌）啊，Helicobacter！ ”</b></p>\n<p data-pid=\"6x9KNXMH\"><b>西村：“Helicobacter……吗？”</b></p>\n<p data-pid=\"OiJrAdAy\"><b>高畑先生：“嗯。那你知道《幽门螺杆菌之歌》（ピロリ菌のうた）吗？ ”</b></p>\n<p data-pid=\"e5iZPc4F\"><b>西村：“《幽门螺杆菌之歌》……我不知道。”</b></p>\n<p data-pid=\"DX7KMM5C\"><b>高畑先生：“初音未来你知道吗？”</b></p>\n<p data-pid=\"6PJaTwxy\"><b>西村：“是那个绿头发的家伙吧。”</b></p>\n<p data-pid=\"-cdom74O\"><b>高畑先生：“嗬。初音未来明明知道，《幽门螺杆菌之歌》却不知道……这样吗？”</b></p>\n<p data-pid=\"0bjh3lZ9\">于是，高畑先生打开了YouTube。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-f83c8dca28432ebe16758ed3bbe9f680_b.jpg\" data-rawwidth=\"450\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"450\" data-original=\"https://pic1.zhimg.com/v2-f83c8dca28432ebe16758ed3bbe9f680_r.jpg\"></figure><blockquote data-pid=\"riGgCPLb\">嘶嘶锵锵<br>嘶嘶锵锵<br>―♪你的身体里～<br>Piroriro Piroriro 幽门螺杆菌<br>侵蚀身体的细菌<br>Piroriro Piroriro 幽门螺杆菌♪</blockquote>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<a href=\"https://www.zhihu.com/zvideo/1495421758903164928\" data-draft-node=\"block\" data-draft-type=\"link-card\"></a><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"ajYp60l7\">在没有开灯的昏暗安静的房间里，笔记本电脑的劣质扬声器传来的“Piroriro Piroriro 幽门螺杆菌”的声音。高畑先生没有表情地坐在电脑桌前，我就在那站着，空气中弥漫着难以言喻的气氛。</p>\n<p data-pid=\"CWpJjVbi\">然后，</p>\n<p data-pid=\"pTK0MeeS\"><b>高畑先生：“……怎么样？”</b></p>\n<p data-pid=\"eqyPz0wO\"><b>西村：“您说什么怎么样……”</b></p>\n<p data-pid=\"FkX_95Tn\"><b>高畑先生：“……嗯，就是说怎么样？”</b></p>\n<p data-pid=\"9ggctEjW\"><b>西村：“诶，好歌吧……”</b></p>\n<p data-pid=\"85aAWRPS\"><b>高畑先生：“你也懂是吧！就是这样啊！能感觉到是首好歌！”</b></p>\n<p data-pid=\"IOGvyrd9\">高畑先生兴奋地开始考察初音未来的“萌”，我们一个劲儿地看着 YouTube 上初音未来的影像。</p>\n<p data-pid=\"Ym5F2L0V\"><b>“拿着葱，只要摇摇晃晃就能出现的这种‘萌’的感觉，很值得研究哦。吉卜力的动画师也应该康康这个学习一下。”</b></p>\n<p data-pid=\"EYjcIMlS\">初音未来和高畑先生的相遇，就是在这个时候。几年后，高畑先生和我将以另一种形式与初音未来再会。</p>\n<p data-pid=\"kc9Jd3zW\">（引用：《ピロリ菌のうた》作词：ピロリロＰ　作曲：ピロリロＰ　歌：初音未来）</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-1ed22bb42db8a9cb694ddbf793765fcd_b.jpg\" data-rawwidth=\"450\" data-rawheight=\"162\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"450\" data-original=\"https://pic2.zhimg.com/v2-1ed22bb42db8a9cb694ddbf793765fcd_r.jpg\"></figure><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//lineblog.me/studioponoc/archives/110417.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">&lt;悲惨日誌 第42回&gt; ピロリ菌のうた : スタジオポノック 公式ブログ</a><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"EpwX-Ilx\">以上，这篇日记到此结束，那么后续是怎样的情况呢，吉卜力工作室官网《辉夜姬物语》的页面有记载道：</p>\n<p data-pid=\"7X3q6MEp\">负责音乐的事吉卜力工作室的宫崎骏导演作品的常客久石让。如今虽已是世界闻名地、日本电影音乐第一人，但让他一跃成为万众瞩目的契机，是高畑勋作为制作人参与的《风之谷的娜乌茜卡》。</p>\n<p data-pid=\"GZfTr_iF\">今年（2013年）夏天上映的《起风了》的音乐虽然也是由久石担任，但由于《辉夜姬物语》制作缓慢，没能实现和《起风了》同日上映，但却实现了（久石）参与到《辉夜姬物语》中去。在高畑导演的强烈愿望下，过了 30 年的时间，（久石）才终于和那个可以说是发掘了自己才能的高畑导演结成了“相思相爱”的初交。</p>\n<p data-pid=\"1NKIStcA\">顺便一说，剧中歌《わらべ唄》《天女の歌》，是由高畑导演和剧本家坂口理子作词，高畑导演作曲的。据说为了说明歌曲的意图，用了“初音未来”制作了 demo ，并拿给久石听。（以下略）</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-4c8ccc5c82633dde5951b11e0bbab34e_b.jpg\" data-rawwidth=\"1293\" data-rawheight=\"1112\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"1293\" data-original=\"https://pic3.zhimg.com/v2-4c8ccc5c82633dde5951b11e0bbab34e_r.jpg\"></figure><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://link.zhihu.com/?target=https%3A//www.ghibli.jp/kaguyahime/prono.html\" data-image=\"https://pic3.zhimg.com/v2-b209de76f6b606b53e8c8934471309ca_l.jpg\" data-image-width=\"300\" data-image-height=\"300\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">映画『かぐや姫の物語』公式サイト</a><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"U_NP2gCf\">最后以群友“<span class=\"nolink\">17寸的天空</span>”的话来收尾吧：对新事物永远能快速接纳的阿朴（高畑勋的昵称），即使到七十七、七十八这个年纪依然能成为ボカロP。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<hr>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"sJyfxwF4\">以下是无端联想，权当顺带考据存档——</p>\n<h2>冲击宫崎骏的 3DCG 观念的《超时空要塞7》</h2>\n<p data-pid=\"Fqt6RC-Q\">曾经在吉卜力担任CG工作的片塰满则（《BLAME!》摄影监督、《哈尔的移动城堡 》作画监督）在推上晒了两个进入吉卜力之前负责的《On Your Mark》的CG镜头，并说道：</p>\n<p data-pid=\"S-X64ZEG\">1994年秋天，我带着装有《超时空要塞Plus》和《超时空要塞7》的CG镜头的录像带去吉卜力谈工作的四个月后，宫崎导演直接给我打了电话给我工作。</p>\n<p data-pid=\"BrL8hydg\">补充1：接到宫崎导演的电话的是当时所属的（Studio）Lings的制作部长T先生。对于吉卜力发来的工作感到兴奋的T先生，因为不知道《超时空要塞》已经提案了的事，所以说了这样的话：“由特别小组来负责。”虽然有些焦躁，但结果还是由我来负责，于是放心了。</p>\n<p data-pid=\"p6z6tUmp\">补充2：飞往隧道的飞行艇（？）不是3DCG，是大塚伸治的作画。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-4aec0d563b2bf880d4cbbe9cd45c1426_b.jpg\" data-rawwidth=\"480\" data-rawheight=\"270\" data-size=\"normal\" data-thumbnail=\"https://pic2.zhimg.com/v2-4aec0d563b2bf880d4cbbe9cd45c1426_720w.jpg?source=d16d100b\" class=\"origin_image zh-lightbox-thumb\" width=\"480\" data-original=\"https://pic3.zhimg.com/v2-4aec0d563b2bf880d4cbbe9cd45c1426_r.jpg\"></figure><p data-pid=\"Ev5deFj1\">补充3：虽然写的是3DCG的镜头，但未来都市的细节（窗户和细小凹凸等）并不是用3D模型来制作出来的，是把美术监督武重洋二先生绘制的背景画，用Camera Projection Map这种CG技术，贴在粗略的模型上，类似于“立体书”那种程度的立体。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-5989c35f7d5ee2ff5b643a76afaa7a5f_b.jpg\" data-rawwidth=\"1920\" data-rawheight=\"1038\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-5989c35f7d5ee2ff5b643a76afaa7a5f_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-a8faa8ec57eba84025cb61fc6ad66133_b.jpg\" data-rawwidth=\"1920\" data-rawheight=\"1038\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-a8faa8ec57eba84025cb61fc6ad66133_r.jpg\"></figure><p data-pid=\"xtH08SYy\">补充4：接到电话后，第一次见面时导演的第一句话是“我画了数码合成了做不到的分镜……”，于是，一边展示着正面接近隧道的镜头，一边开始了讨论。</p>\n<p data-pid=\"xZ9Pkxw0\">补充5：当时吉卜力同时制作的《侧耳倾听》（不如说这部才是放在首位的）是吉卜力首次采用“数码合成”的作品，对于作为指挥的宫崎导演来说，我觉得他对数码技术制作影像的抵触心理有所减少了。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-1a0418df1bb74826585c82f553d1f5ae_b.jpg\" data-rawwidth=\"1080\" data-rawheight=\"4817\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-1a0418df1bb74826585c82f553d1f5ae_r.jpg\"></figure><p data-pid=\"gviXtjvd\">因为片塰满则亲自出来讲述这段往事，这也让许多动画迷一直流传的都市传说得到了印证——宫崎骏因为看了《超时空要塞7》OP的3DCG，而认可了CG这种方式。之前很多人搞不懂为什么宫崎骏要看《超时空要塞7》。</p>\n<p data-pid=\"2MaqNkAx\">对此，原画师今井有文（《巨人》1-3季作画监督）也回应道：自己学生时代参加的Anime Style活动中，作为嘉宾的片塰先生就说过这件事，宫崎导演把《超时空要塞7》的OP的开场部分（镜头从阳台上的主人公一口气拉到宇宙）来回看了好几遍。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-a66f8e75a97aecd789381a453cd9ed48_b.jpg\" data-rawwidth=\"480\" data-rawheight=\"270\" data-size=\"normal\" data-thumbnail=\"https://pic2.zhimg.com/v2-a66f8e75a97aecd789381a453cd9ed48_720w.jpg?source=d16d100b\" class=\"origin_image zh-lightbox-thumb\" width=\"480\" data-original=\"https://pic1.zhimg.com/v2-a66f8e75a97aecd789381a453cd9ed48_r.jpg\"></figure><p data-pid=\"SUy9gPEq\">以上译文都首发在微博“名作之壁吧_壁姐姐”上。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/ta-ta-jun-minkun?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">塔塔君Minkun</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/494525483?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"为了能更好地做饭，有人做了个「程序员做饭指南」","date":"2022-04-07 08:16:09","description":"至少你能看懂「适量」和「少许」了<a href=\"https://sspai.com/post/72308\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72308"},{"title":"《艾尔登法环》打很多 Boss 都有逃课的方法，是宫崎英高有意而为之，还是设计组没有想到的 Bug?","date":"2022-04-07 06:45:19","description":"\n<p data-pid=\"bddYMU0d\">怎么说呢？</p>\n<p><br></p>\n<p data-pid=\"UnhKE5dZ\">讲到bug这个东西，我自己考虑的是“这个东西是不是属于设计缺失”，而不是给游戏的机制和内容去下一个对与错的定义。</p>\n<p><br></p>\n<p><br></p>\n<p data-pid=\"gO7pBFRi\">也就是说，设计者可能不是有意为之的，却又能将这一机制实现到游戏引擎当中。</p>\n<a href=\"https://www.zhihu.com/video/1495409705674006528\"></a><p><br></p>\n<p data-pid=\"Z-gDBrrL\">打个比方，奉反机制。</p>\n<p data-pid=\"PYN8566W\">设计者可能是为了做一个“反射机制”的东西，所以设计了奉反类招式，而实现方式是“吸收对方的非残留型飞行道具”，然后作为条件生成“反击”的飞行道具。</p>\n<p><br></p>\n<p data-pid=\"-vs0StfM\">而问题出现在，“吸收飞行道具”这一奉反触发条件，并没有办法区分“敌我”，导致敌人和友方甚至是玩家自己的一些飞行道具，只要奉反的吸收判定够得着，就可以吸收，进而触发“奉反”。</p>\n<p data-pid=\"bWkmNeLD\">这个就是“设计缺失”的体现，也就是设计者没想到奉反的吸收机制条件过于宽松，没有设立独立的触发条件。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-2427757c35b0dba23962c0d2b01e9a97_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1597\" data-rawheight=\"941\" data-watermark=\"watermark\" data-original-src=\"v2-2427757c35b0dba23962c0d2b01e9a97\" data-watermark-src=\"v2-62f5b313b4193ad093bad61a84f1394e\" data-private-watermark-src=\"v2-c606095108c5ddbc44144fa8345d6b0d\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-19f5af705c7761e5ba5cf0eaaba752da_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1120\" data-rawheight=\"882\" data-watermark=\"watermark\" data-original-src=\"v2-19f5af705c7761e5ba5cf0eaaba752da\" data-watermark-src=\"v2-60eb1eaaf894d99e7078426821e4700e\" data-private-watermark-src=\"v2-770f36ba0701f0e2a26b4f74e871652b\"></p>\n<p><br></p>\n<p><br></p>\n<p data-pid=\"YPp0H0Il\">就好像题目讲的岩石球隔门砸死，其实真的要改也不复杂，例如把岩石球的生成方向改变，例如从“面前”改到“头顶”，那么生成的岩石不能越过雾门。</p>\n<p data-pid=\"N_L0ir4q\">但为什么不修复呢？</p>\n<p data-pid=\"tVL6A0Q1\">因为这个的优先权并没有那么高，也就是没那么重要。</p>\n<p><br></p>\n<p data-pid=\"TqYHVxDV\">只狼以前就有一个叫“谢谢你”的邪道，就是用一些办法让怪物跳崖，用滞空时间规则击杀boss，刚好怨鬼被杀了就会说谢谢你。</p>\n<p data-pid=\"iUSbl8KG\">这个逃课套路对于一些卡关的朋友来说，的确是个好办法。</p>\n<p data-pid=\"sMD4ItbS\">但对于本来就需要去正儿八经打Boss的朋友呢？这个逃课套路根本就不需要用。</p>\n<p><br></p>\n<p data-pid=\"N7HOD0Qr\">因为这些战斗主导内容的游戏，你的可玩点就在战斗上，你逃课了也好，不逃课也好，对于你来说，游戏的可玩点就摆在那里。</p>\n<p><br></p>\n<p data-pid=\"9KDavIfX\">这个Boss设计了一大堆的攻击动作，是给你在战斗中处理的，不然干嘛设计Boss，整个挨打用的木桩子不就得了。</p>\n<p><br></p>\n<p data-pid=\"PyTl-dP7\">所以说，要丰富你的游戏体验，你不仅能按照游戏规则玩，还能研究游戏内容寻找游戏漏洞去体验。</p>\n<p><br></p>\n<p data-pid=\"7NGusbsp\">这也是为什么会有“bug是游戏特性”的说法。</p>\n<p><br></p>\n<p data-pid=\"CxeYhS3j\">回到问题上，我的评价是“不要想太多”。</p>\n<p><br></p>\n<p data-pid=\"KTsCh04s\">再说，给手残党通过“所谓某些邪道方法”去通关了，这会对某些人产生困扰呢？</p>\n<p><br></p>\n<p data-pid=\"jq3pjytp\">为什么别人能不能通关游戏，居然还要我去担心起来呢？对不对？</p>\n<p><br></p>\n<p><img src=\"https://pica.zhimg.com/v2-0a9e57a900b69c4b4aad56532fdf06ba_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"655\" data-rawheight=\"458\" data-watermark=\"watermark\" data-original-src=\"v2-0a9e57a900b69c4b4aad56532fdf06ba\" data-watermark-src=\"v2-37fc59c163a38d944a50eefda221c68b\" data-private-watermark-src=\"v2-ca56d2b7e90e6ee6d95d0d9791c4e5da\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/Tyquan_Zhang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">零悠悠</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/526277021/answer/2427635348?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">12 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/518457013?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《艾尔登法环》游戏中，有哪些让你难以忘怀的 BOSS 战？</a><br><a href=\"http://www.zhihu.com/question/60777503?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">在你的游戏历程中最难对付的BOSS是怎样的？</a><br>\n","link":"http://www.zhihu.com/question/526277021/answer/2427635348?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"一派·Podcast｜机械键盘——从入坑到发疯（不是","date":"2022-04-07 06:20:34","description":"谈谈机械键盘选购中需要注意的概念和细节。<a href=\"https://sspai.com/post/72498\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72498"},{"title":"如何评价漫画《间谍过家家》?","date":"2022-04-07 05:33:16","description":"\n<p data-pid=\"Lcq9Mhoj\">来抛砖引玉说说这部jump+上最能打的作品吧。</p>\n<p data-pid=\"YWQR1Tnb\">这回不详细聊这作品，因为这作品多能打，剧情角色这些，以及获了什么奖这些别人会说，我不说也罢。我来说说“传承”和编辑，这两个其实是一个问题。</p>\n<p data-pid=\"XAUbAMcT\">间谍过家家的编辑是：林士平<sup data-text=\"林士平访谈（生肉）\" data-url=\"https://alu.jp/article/ivsSgDJ5eb6fUFbVwxpX\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\">[1]</sup>。这是谁呢？</p>\n<p><img src=\"https://pic1.zhimg.com/v2-aeb9cb58f1dc150ef55ecf6eb86efa30_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"663\" data-rawheight=\"497\" data-watermark=\"original\" data-original-src=\"v2-aeb9cb58f1dc150ef55ecf6eb86efa30\" data-watermark-src=\"v2-ae62f1f18f05b932031b749fd5d1dbe8\" data-private-watermark-src=\"v2-251b0c055ce8ceba5335af9ae4787658\"></p>\n<p data-pid=\"9HOdg4w8\">炎拳和电锯人的编辑。这人还做过什么作品的编辑呢？青之驱魔师；一弦定音；怪物事变；贫乏神来了；地狱乐。</p>\n<p data-pid=\"H0sUhPzT\">青驱的作者，曾经是间谍过家家作者远藤达哉的助手。地狱乐的作者做过炎拳作者藤本的助手。怪物事变的作者曾是天野明的助手，远藤达哉则是漂亮脸蛋和MX0的作者叶恭弘（这位说多了都是泪）的助手。咒术回战的作者也被传是叶恭弘or久保带人的助手。而叶恭弘则是封神演义藤崎龙的助手<sup data-text=\"漫画家谱系\" data-url=\"https://www.zhihu.com/question/46264835/answer/101060048\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"2\">[2]</sup>。</p>\n<p data-pid=\"EZKNuv01\">jump创刊比sunday,magazine晚好几年，然而成了卖的最好的漫画杂志，这靠的不光是“友情努力胜利”三要素，更重要的是另三个原则：“发掘新人，培育作家，绝对的问卷调查主义”<sup data-text=\"jump50周年纪录片\" data-url=\"https://www.bilibili.com/video/BV137411i7pS?p=1\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"3\">[3]</sup>。前两条，都是编辑做的。而漫画出来其实不光是作者，编辑在幕后也需要付出很多（内藤出来背锅）。而前两条使得Jump创刊开始就有有奖励金的漫画赏，还有手冢赤冢赏，有每月的漫画赏(什么你说评委是漫画家？总之就那个意思嘛_(:з」∠)_领会精神)，所以才能在灌篮和龙珠完结之后重新从magazine手里抢过第一把交椅。</p>\n<p data-pid=\"tdi4IhBZ\">个人认为，这也是日本漫画这么火的一个重要原因了。</p>\n<p data-pid=\"w3IBNL1t\">就这样。</p>\n<hr>\n<p data-pid=\"HQ4z1QCg\">21.3.22更新——过了一年漫画卷均百万，也快动画化了，所以我再来聊聊这个漫画...这次稍微写的具体点。剧情方面其他答主已经有较为详尽的介绍了，所以我介绍些别的内容。</p>\n<ol><li data-pid=\"5vjZG1CL\">我们还是从作者开始简单的介绍。</li></ol>\n<p><img src=\"https://pica.zhimg.com/v2-b88ab26079261cffb3cad2c0cd09ba71_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"614\" data-rawheight=\"894\" data-watermark=\"original\" data-original-src=\"v2-b88ab26079261cffb3cad2c0cd09ba71\" data-watermark-src=\"v2-ab5ec1fe7c47f484e850991700739743\" data-private-watermark-src=\"v2-17f47e79100dbb8d5a07f6402a167a00\"></p>\n<p data-pid=\"MjwMXQXZ\">远藤达哉，00年出道，之后发表短篇月华美刃——林士平担任他的编辑，为了连载第一部作品07-08的TISTA，于是俩人去了纽约取材——作品连载结束后担任了青驱作者加藤和惠的助手——然后是10-12的第二部连载：又一部通过竹取物语延申出的故事，月华美刃——然后开始担任加藤，Amyu，藤本，贺来的助手，所以变得啥都能画，这期间14年的短篇《炼狱的阿西娅》中的女主就是本作阿妮亚的雏形——然后是18年的短篇I spy——19年正式连载间谍过家家。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-255372ca4ac723400d75779367e1f7a5_720w.jpg?source=b1748391?rss\" data-caption=\"林士平真中央空调\" data-size=\"normal\" data-rawwidth=\"1256\" data-rawheight=\"924\" data-watermark=\"original\" data-original-src=\"v2-255372ca4ac723400d75779367e1f7a5\" data-watermark-src=\"v2-9c93c639cf9d8785a1606a908739ac75\" data-private-watermark-src=\"v2-fcd2aac342502979419c7bbd571c3b41\"></p>\n<p data-pid=\"PujM0DJT\">2.创作八卦：加藤和惠某一话青驱休刊，然后去间谍过家家那里当了远藤达哉的助手；第一部连载的作品TISTA女主就是用枪的，当时在纽约取材时打靶和买的枪模也用在了本作；林编辑还买了挺多的间谍有关的书籍比如间谍词典给他，不过这些远藤达哉就摆着吃灰几乎没看；当年去了纽约取材，这次本来打算去德国取材，结果预算不够取消了。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-ca79fdeaddbfe7297767543f0f78f841_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"822\" data-rawheight=\"1200\" data-watermark=\"original\" data-original-src=\"v2-ca79fdeaddbfe7297767543f0f78f841\" data-watermark-src=\"v2-b14f16b6ae0bdaed31ab6361baca9ce2\" data-private-watermark-src=\"v2-6d335a8d0aa5c887571fdc266057f4ea\"></p>\n<p data-pid=\"CUOW8rcX\">作品初期其实是想走月华美刃或者TISTA那种有些暗黑的风格的，所以你看《炼狱的阿西娅》也有些黑，不过应该是被林给否了，于是有了I SPY的搞笑风短篇，然后就是本作的搞笑漫画《间谍过家家》了。</p>\n<p data-pid=\"k068Zv8g\">3. 间谍过家家的一些特点。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-fd46d0a90a67e6917ab5df00f07857e6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"407\" data-watermark=\"original\" data-original-src=\"v2-fd46d0a90a67e6917ab5df00f07857e6\" data-watermark-src=\"v2-324386feccfbc9b78c29d04d99c3521f\" data-private-watermark-src=\"v2-14b3c1ccabb7ee76ec48777da5072173\"></p>\n<p data-pid=\"wsUWmTNo\">3.1<b>设定方面</b>，通常来说，漫画只能允许一种超现实设定，比如Naruto是忍者的世界，op是海贼的世界，bleach是死神的世界，这个设定都是贯穿全篇的。所以如果Naruto同时是忍者和死神的世界，op同时是海贼和忍者的世界，就会相对比较复杂读者阅读不方便；像海贼虽然用了忍者，不过也只是在一个篇章中用，而不是贯穿全篇<sup data-text=\"凉宫春日这种你可以理解为围绕凉宫的世界\" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"4\">[4]</sup>。然而，本作的是间谍（父亲）的世界+杀手（母亲）的世界+超能力者（阿妮亚）的世界，各世界明显会贯穿全篇，本应彼此之间干扰，然而似乎目前影响还不大。原因可能基于以下几点：母亲的世界还未完全展开，目前只是充当高武力值的角色而未详细刻画杀手的世界；彼此之间不知情，阿妮亚作为超能力者可以通过“读心”平衡彼此世界使得之间不过于相互干扰从而得以共存。然而最新篇章，明显福杰和约尔的世界会彼此干扰，又不能像《史密斯夫妇》一样简单的解决这个问题，作者将怎样处理，确实是值得关注的一点。（我倾向于这个篇章介绍约尔的杀手世界，然后继续搁置走“日常”，毕竟约尔的主线基本没正经的走过。）（彼此之间都有秘密，所以我很期待最后秘密揭开的那一天，估计到了那时故事也就迈向结束了。）</p>\n<p><img src=\"https://pic3.zhimg.com/v2-fc2ccb86c426fd2efbc549a970dbbfb5_720w.jpg?source=b1748391?rss\" data-caption=\"“间谍的作者已经意识到了电子版分镜和纸质分镜的不同之处”\" data-size=\"normal\" data-rawwidth=\"619\" data-rawheight=\"288\" data-watermark=\"original\" data-original-src=\"v2-fc2ccb86c426fd2efbc549a970dbbfb5\" data-watermark-src=\"v2-de06a271c9c92d6ddf0082c02760cc35\" data-private-watermark-src=\"v2-c543821a1a9f467d3e2c16a5dac8b3f4\"></p>\n<p data-pid=\"NVAaOulK\">3.2 <b>分镜处理上</b>，这个问题其实叶佳桐大佬在怪兽八号的回答<sup data-text=\"\" data-url=\"https://www.zhihu.com/question/431276720/answer/1720219811\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"5\">[5]</sup>已经提及了，我这里再简单说一下。间谍是在jump+电子平台上连载的作品，这不同于纸质杂志，一个比较明显的事情就是下面绿色图会采用左边而不是右边的分镜方式，跨页应该也会相对少一些，如果有应该也是左右结构的以便不影响阅读。（虽然像b漫和Jump+ app都有自己的跨页阅读模式，但毕竟手机的长宽比偏向于2：1，而纸质的则是3：2<sup data-text=\"页漫，条漫\" data-url=\"https://www.zhihu.com/pin/1336470268613509120\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"6\">[6]</sup>。所以必然会有空间浪费，这个问题依旧需要考虑。）</p>\n<p><img src=\"https://pic1.zhimg.com/v2-111b6db87be8fd9c449958ca7c66d94e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"706\" data-rawheight=\"234\" data-watermark=\"original\" data-original-src=\"v2-111b6db87be8fd9c449958ca7c66d94e\" data-watermark-src=\"v2-c00076b2c945edbea1b1e11ba5fb9ddd\" data-private-watermark-src=\"v2-aecd22186bd643d3549430a39fd61e9a\"></p>\n<p data-pid=\"n7WzKMXD\">当然，某些分镜，比如下面这种，也不好在电子平台出现（因为以单页为主）。与之相关的问题还比如，手机屏幕的大小明显小于杂志——所以必须要考虑字符不能过小，不然手机上看不清。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c94d06ce8a737973dd62f0bce92fcc14_720w.jpg?source=b1748391?rss\" data-caption=\"“消失的五条悟”\" data-size=\"normal\" data-rawwidth=\"2000\" data-rawheight=\"2667\" data-watermark=\"original\" data-original-src=\"v2-c94d06ce8a737973dd62f0bce92fcc14\" data-watermark-src=\"v2-05890f421aa7a5e0fa290cd83449b724\" data-private-watermark-src=\"v2-1fc704d151e2eaec0c5a077df04ec681\"></p>\n<p data-pid=\"Tu2Af6Y3\">3.3<b> 章节编排上</b>，以单元剧为主，如果是需要多话的故事，则不能过长，我认为应该在一卷单行本中解决问题。举个例子，得到大狗邦德的剧情是18-23话。虽然读者可以在app上阅读之前的剧情，但还是需要控制篇幅，让读者能花最少的时间了解一个故事——按松井优征的话说，“易读性”就是漫画的“防御力”<sup data-text=\"\" data-url=\"https://jump-manga-school.hatenablog.com/entry/06\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"7\">[7]</sup>。现在每天都是信息爆炸，所以有些时候，易读性是和趣味性同等重要的。</p>\n<p data-pid=\"J1I0PHHm\">这也是搞笑漫画的一大优势，因为搞笑漫画以单元剧为主，所以它的“防御力”是最强的。但是搞笑漫画相对故事漫画的弱点就是，如果一直走单元剧，情感不能一直酝酿，伏线也不好设置。所以搞笑漫画像故事漫画一样也会走一些剧情。但是依旧不应过长使得“防御力”下降太多<sup data-text=\"怕痛（漫画不受欢迎）只点防御有什么问题吗？\" data-url=\"\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"8\">[8]</sup>。</p>\n<p data-pid=\"dDYh29Pc\">这里多提一点，故事类，或者说传统的jump热血漫的讨论度的确高于搞笑漫画，举个例子，哆啦a梦+蜡笔小新+樱桃小丸子在知乎的问题数（3000个左右）大概等于海贼王问题数（13000个左右）的零头。但我个人认为，搞笑漫画，或者说单元剧相对更适合这个快节奏和碎片化阅读的时代（当然两种漫画，比如龙珠和阿拉蕾没有优劣）。当然同时，热血漫故事漫也应该学习搞笑漫的模式，缩短故事章节。</p>\n<p data-pid=\"jyKt9ZRL\">3.4 <b>主题</b>方面，不知是不是错觉，最近jump上以家庭为主题的漫画比以前多了挺多，比如间谍过家家，夜樱大作战，坂本days，高校生家族，等等。不知这是因为现在的读者比起外界更关注自己<sup data-text=\"\" data-url=\"https://www.zhihu.com/question/441918496/answer/1719778297\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"9\">[9]</sup>，还是这是少子化对策之一www。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-507dc607420c4e8e50a20243865906b5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1299\" data-rawheight=\"712\" data-watermark=\"original\" data-original-src=\"v2-507dc607420c4e8e50a20243865906b5\" data-watermark-src=\"v2-e20e551dde2ccd8b5ea6d3ec4bd561be\" data-private-watermark-src=\"v2-7c6987f3c97eca4135d29db619f95d03\"></p>\n<p data-pid=\"FgBybmhp\">4.jump+相关</p>\n<p data-pid=\"JNCP40hn\">林编辑给作者订的标准大概是每隔一周20页；而月刊是一个月45页~周刊则是一个月60-76页左右的样子，所以工作轻松很多，可以构思剧情。藤本则在访谈中提到，“jump+超级自由的。少年Jump的话必须要每话19页，为了对应页数真是消耗脑细胞。但是j+没有硬规定，一话可以在15～25页之间。”<sup data-text=\"\" data-url=\"https://bbs.hupu.com/41517688.html\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"10\">[10]</sup>尾田也说了如果每周把30页压缩到17页需要不少功夫<sup data-text=\"\" data-url=\"https://tieba.baidu.com/p/7235966704?pn=1\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"11\">[11]</sup>。jump+相对于jump也没有20部的连载数量上限限制，可以连载几十上百部作品，连载时间也相对宽松，比如怪八基本也是两周一更。另外可以不从顺位，而是通过点击量来判断自己的作品是否受欢迎，这波的确是利好jump+。也因为这宽松的条件，间谍目前的成绩应该是继暗杀之后最强的未动画化漫画成绩了（怪八可能超了？）。jump+主编说，本刊辉煌的时候，发行量是600w+,他们希望jump+能做到这一点（平台活跃人数）。我认为他们将来能做到<sup data-text=\"\" data-url=\"https://tieba.baidu.com/p/7265707889?pid=138377028606&amp;cid=138384059666#138384059666\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"12\">[12]</sup>。</p>\n<p><br></p>\n<p data-pid=\"IZO1sW0y\">就这样，其实还有一些可说的，不过不放在这篇里说~这篇谈这些我觉得应该足够了。</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/tan-shu-shu?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">云吞花卷</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/320063279/answer/1280690456?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">36 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/495572184?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">漫画《间谍过家家》宣布动画化，你有哪些期待？</a><br><a href=\"http://www.zhihu.com/question/364054483?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么日本轻小说动漫大多明明是拯救世界的规模却感觉是过家家，格局感如此小？</a><br>\n","link":"http://www.zhihu.com/question/320063279/answer/1280690456?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"中文的直角引号 「」、『』 源自哪里？","date":"2022-04-07 03:49:45","description":"\n<p data-pid=\"ejPtjnSH\">我花了不少时间收集、购买相关资料，或是进行扫描、整理。在这里你将看到很多关于中国大陆引号历史的图像资料，在此之前只有各处散落着零碎的、不够直观的文字描述。人们似乎很容易会误将直角引号脑补为中国传统，但实际情况是「直角引号」和「弯引号」都是舶来品。</p>\n<p data-pid=\"6v1ukFVl\">我要解释清楚两件事：</p>\n<ol>\n<li data-pid=\"gYwn_Vgf\">「直角引号」究竟源自哪里？</li>\n<li data-pid=\"8gnx1Zjo\">「直角引号」和「弯引号」是什么时候用到中文排版里的？</li>\n</ol>\n<hr>\n<h2>「直角引号」究竟源自哪里？</h2>\n<p data-pid=\"klign2Ll\">早在奈良时期的日本，就有叫做「庵点」的符号，它原本是一个唱段起头的标识，与直角引号（鉤括弧）的功能并不相同，但仅做外表对比的话，庵点只是前半部分，没有后半部分。</p>\n<p data-pid=\"CR2-ksZa\">庵点在历史上有多种不同的造型，弯曲的、折线的、直线的。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-da8cba829760fea83a4514101a800f2f_720w.jpg?source=b1748391?rss\" data-rawwidth=\"184\" data-rawheight=\"178\" data-size=\"normal\" data-caption=\"1818年，十返舎一九，《口取肴》\" data-watermark=\"watermark\" data-original-src=\"v2-da8cba829760fea83a4514101a800f2f\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><br></p>\n<p data-pid=\"7bvj3Su0\">接下来是江户时代，矢作勝美老师在刊物《MOJICA》九五年八月发行的第二期第九页中发表的研究里面，可以看到一个例子。这个1809年的滑稽本《浮世風呂》中的庵点（下图最右）是用作对话标记的，在庵点附近会标记人名。而且这种对话标记的用法一直延续到了明治时期，比如下图左侧的两个作品。</p>\n<p data-pid=\"T_juMuRU\">感谢 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/e40204272b22d519b1848517520ce3cb\" data-hash=\"e40204272b22d519b1848517520ce3cb\" data-hovercard=\"p$b$e40204272b22d519b1848517520ce3cb\">@Eric Liu</a> 刘庆老师帮忙取得这个杂志中相关部分的照片。</p>\n<p data-pid=\"Y8Bt4TpI\">它仍然只有前半部分，没有后半部分，但在这个作品中庵点的造型是坚硬的折线。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-538a00a1717491058765b71078a739ef_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1272\" data-rawheight=\"1330\" data-size=\"normal\" data-caption=\"1995年，矢作勝美的研究，《MOJICA》\" data-watermark=\"watermark\" data-original-src=\"v2-538a00a1717491058765b71078a739ef\" data-watermark-src=\"v2-eeba99205d06d287204f4da5a5d531f6\" data-private-watermark-src=\"v2-851e0c6c27ead6f67f9b63bef4324d56\"></p>\n<p><br></p>\n<p data-pid=\"JvT6Y3XT\">与「庵点」相对的是后半部分「鈎画」，按照如今日本对于直角引号（鉤括弧）起源的说法，它源于汉文，是日本解读古代中文时作为分段用途的。这就代表中日交流一直存在，无法确定究竟是谁创造了「鈎画」。而且这个符号是用作分段而非引用，与直角引号并无关系。</p>\n<p data-pid=\"buAUuWEe\">我手里有一本中文作品，1864年赵之谦所著《六朝别字记》的影印版，扫描给大家看。这个作品中，就使用了「鈎画」样式的符号来进行分段。</p>\n<p data-pid=\"44sAfD3G\">但这一页里面很有趣的是，作者为了补充画了一条折线，误打误撞把一段文字给括起来了，神似直角引号……当然，这只是趣事罢了。</p>\n<p><img src=\"https://pica.zhimg.com/v2-93733a57afd20dc53332f34f75969503_720w.jpg?source=b1748391?rss\" data-rawwidth=\"5395\" data-rawheight=\"4299\" data-size=\"normal\" data-caption=\"1864年，赵之谦，《六朝别字记》\" data-watermark=\"watermark\" data-original-src=\"v2-93733a57afd20dc53332f34f75969503\" data-watermark-src=\"v2-ec012b2a3a10ac5fbf4205837a1b9d2c\" data-private-watermark-src=\"v2-550592976b288d196d6d6e9e2dd1c032\"></p>\n<p><br></p>\n<p data-pid=\"SZbJn_15\">日本到了明治时代，<b>外貌完整</b>的直角引号（鉤括弧）出现，就是前后两个标点符号括出一个范围的用法。</p>\n<p data-pid=\"KxotwDTM\">在前面提到的《MOJICA》杂志第九页中可以看到，矢作勝美先生是这样介绍的：</p>\n<blockquote data-pid=\"OYHRXd5I\">「与江户那种在小说对话标记不同，钩括弧在活版早期就已经形成并被使用。比如有明治8年9月共由社出版的《蔷薇栽培法》……其中各种蔷薇品种都用钩括弧分开。……明治7年8月9日的《教义新闻》里有将波斯、印度等固有名词使用，以及明治10年4月《西洋谚草》将书名括起来的例子」。</blockquote>\n<p data-pid=\"KJsmtexY\">也就是说，在明治时期的日本，直角引号已经不再限于对话标记，而是具有引用功能了。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-8106bfc0537e18da21ba6b415844e86d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"2294\" data-rawheight=\"1626\" data-size=\"normal\" data-caption=\"1995年，矢作勝美的研究，《MOJICA》\" data-watermark=\"watermark\" data-original-src=\"v2-8106bfc0537e18da21ba6b415844e86d\" data-watermark-src=\"v2-a4094a0fe75d129dbfd499ef734c2946\" data-private-watermark-src=\"v2-22b438579f40ee869d00fdd93593b1fe\"></p>\n<p data-pid=\"sScaaNQu\">还有一种很可信的说法，直角引号（鉤括弧）的出现是为了介绍西方文化，随着「圆括弧」的传入而引进的。值得一提的是，「括弧」这种叫法是在19世纪中叶，随着翻译成中文的数学书籍传入日本的。我个人认为，<b>将原本用作标记歌唱起始的庵点作为直角引号的起源，有强行拉扯关系的「嫌疑」。</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-041fbf61cbc78432c396a32301ef7f4a_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1486\" data-rawheight=\"986\" data-size=\"small\" data-caption=\"1859年，李善兰/伟烈亚力，《代微积拾级》\" data-watermark=\"watermark\" data-original-src=\"v2-041fbf61cbc78432c396a32301ef7f4a\" data-watermark-src=\"v2-56afe11005f37736a92d26806415cce9\" data-private-watermark-src=\"v2-187d6591214100c059a89a615b218cf8\"></p>\n<p><br></p>\n<p data-pid=\"pCf80dA2\">但可以肯定的是，<b>如今使用的直角引号确实是日本「创新」出来的东西</b>。</p>\n<p><br></p>\n<p data-pid=\"fN9_i8tX\">林穗芳老师著有《标点符号学习与应用》一书，提到可查最早出现直角引号的中文出版物是王炳耀（号煜初）1897年清末时期在香港出版的《拼音字谱》。在句义表一页可以看到直角引号，它被称为「释明之号」。</p>\n<p data-pid=\"OzUJUqck\">这本书的影印版我有一本，阅读一下就会发现这些标点符号是<b>用于「切音字」，所以不可以算作直角引号在中文排版中的正式例子</b>，直角引号真正流行起来的时间还要更晚。网络流传的单页看起来真的很像中文语境下的直角引号，所以我重新扫描了一个跨页，实际用途一看便知。</p>\n<p data-pid=\"jZ71FxLh\">但至少我们可以借此得知，正式使用直角引号的时间是在日本之后。而且 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/cca4b616c04a6ac16861452b925b682a\" data-hash=\"cca4b616c04a6ac16861452b925b682a\" data-hovercard=\"p$b$cca4b616c04a6ac16861452b925b682a\">@stevenliuyi</a> 的答案中提到，王炳耀曾于《拼音字谱》出版的三年前编辑出版过六卷本《中日战辑》，从日本引入直角引号也就是很自然的事情了。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-34018bd310da3ebce0c01629c2f334f0_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1996\" data-rawheight=\"1316\" data-size=\"normal\" data-caption=\"1897年，王炳耀，《拼音字谱》\" data-watermark=\"watermark\" data-original-src=\"v2-34018bd310da3ebce0c01629c2f334f0\" data-watermark-src=\"v2-7b9afb0e0f4d63df0b2884e3f4d72010\" data-private-watermark-src=\"v2-02656b7bd72df67dee482a9371a596e8\"></p>\n<p data-pid=\"4gjVRM_G\"><b>所以，几乎可以确定直角引号就是取自日本的舶来品。</b></p>\n<hr>\n<h3>「直角引号」和「弯引号」谁最先用到中文版面里？</h3>\n<p data-pid=\"3xBcmjrX\">既然已知「直角引号」是舶来品，那我们就按时间线一同整理另一个舶来品「弯引号」的资料吧。</p>\n<p data-pid=\"sU0KQnUW\">1868年，在张德彝创作的《航海述奇》中，第一次提到了可以追溯到16世纪的西方弯引号。稿本中的文字阅读起来有一种强烈、有趣的穿越感。但这只是记录见闻，并非实际运用到中文排版里面，不是我们要找的东西。有趣的是，从文中可以感觉到，张德彝并不看好西方的标点符号系统，例如评价西文标点时说到「讲解甚烦」。</p>\n<p><img src=\"https://pica.zhimg.com/v2-c8319781a067cdcaa5fb2c940cc45a14_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1719\" data-rawheight=\"1363\" data-size=\"normal\" data-caption=\"1868年，张德彝，《再述奇》\" data-watermark=\"watermark\" data-original-src=\"v2-c8319781a067cdcaa5fb2c940cc45a14\" data-watermark-src=\"v2-061a7413f7c42b8b61dda8fd2a40cb20\" data-private-watermark-src=\"v2-25033dacf67101eb6440016c0c9ffd88\"></p>\n<p><br></p>\n<p data-pid=\"gjVHGQ0X\">严复早在1904年就创作了横排书籍《英文汉诂》，其中就用到了西文标点。二手书网站中有过1904版拍卖的记录，还能看到部分图片，确实有弯引号的存在。而且有大量嵌套的用法，顺序是单引号在内，双引号在外。就算有人说它出现西文标点是为了服务于书中的英文，那它也是确确实实地在中文内容中使用标点符号了。我自己也收藏了一本，就是品相有点差。</p>\n<p><img src=\"https://pica.zhimg.com/v2-47c044c854b07abcbb82069b0b80ea76_720w.jpg?source=b1748391?rss\" data-rawwidth=\"434\" data-rawheight=\"248\" data-size=\"normal\" data-caption=\"1904，严复，《英文汉诂》\" data-watermark=\"watermark\" data-original-src=\"v2-47c044c854b07abcbb82069b0b80ea76\" data-watermark-src=\"v2-4127c8b5556751f3a5a2412dfc537c0c\" data-private-watermark-src=\"v2-699a8c5f69969bcff58726ec0ec30657\"></p>\n<p><br></p>\n<p data-pid=\"rXKiilbS\">1906年，卢戆章在《中国字母北京切音教科书》中制定的标点系统就有弯引号。我手里正好有一本，其实看到书的名字就已经在意料之中了，书中提到的弯引号同样是给「切音字」用的，不是给汉字用的，所以也不算数。但这本书在引号相关时间线里仍然出镜率很高。</p>\n<p><img src=\"https://pica.zhimg.com/v2-e9f5afcc9945b9f5cce4416700872dbe_720w.jpg?source=b1748391?rss\" data-rawwidth=\"783\" data-rawheight=\"1206\" data-size=\"small\" data-caption=\"1906年，卢戆章，《中国字母北京切音教科书》\" data-watermark=\"watermark\" data-original-src=\"v2-e9f5afcc9945b9f5cce4416700872dbe\" data-watermark-src=\"v2-4dafb2767c2bbcc7d77a84200433fbdd\" data-private-watermark-src=\"v2-aa6e6044d9d3150520cb39d2b72fcb5e\"></p>\n<p><br></p>\n<p data-pid=\"Tizf37lH\">接下来就到了最关键的转折点， <a class=\"member_mention\" href=\"http://www.zhihu.com/people/cca4b616c04a6ac16861452b925b682a\" data-hash=\"cca4b616c04a6ac16861452b925b682a\" data-hovercard=\"p$b$cca4b616c04a6ac16861452b925b682a\">@stevenliuyi</a> 的答案中说，安徽教育出版社整理出版的《胡适留学日记》中提到，胡适在美国留学时曾为写日记而拟定一套标点符号规则。网上比较容易搜索到胡适1914年日记手稿中的这一页，在一次文献展览的网站记录中能找到高清的原件照片。</p>\n<p data-pid=\"SFSpW6UH\">如安徽教育出版社后来点校的那本书所说，其中的引号被称为「矩」，正是做为引用功能。但是因为跨页，这张图的网站并没有上传后面的内容。下一页的内容里有一个非常特别的引号样式，所以我打算继续寻找。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-06902ed9e4abd4c5ad18b9a7711f283d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1436\" data-rawheight=\"960\" data-size=\"normal\" data-caption=\"胡适留学日记手稿\" data-watermark=\"watermark\" data-original-src=\"v2-06902ed9e4abd4c5ad18b9a7711f283d\" data-watermark-src=\"v2-3ec24cfc27ead1931a7102ba587f14fc\" data-private-watermark-src=\"v2-2bb34806370f3c1afeb2ea954a56a9dd\"></p>\n<p><br></p>\n<p data-pid=\"jkEwmzK5\">我翻遍了展览、拍卖网站都没有找到，好在这套手稿曾出版过一套影印图书，但存世量稀少。最后我在华东师范大学图书馆获得这一页的照片。</p>\n<p data-pid=\"h8yKnE2A\">在这一页里，不仅有单矩（单层直角引号），还介绍了双矩（双层直角引号），以及更加复杂的三矩（三层直角引号）。我也不懂胡适为什么要设计出这么复杂的东西，手写时甚至会糊在一起，但我认为有必要在「引号」这个主题中补全它的图像资料。</p>\n<p data-pid=\"rL9jhJj1\">如今，这种引语中的引语中又有引语的嵌套情况，是将单双引号交替使用。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-adcbb7772a113422e46ee5ac4eba127f_720w.jpg?source=b1748391?rss\" data-rawwidth=\"842\" data-rawheight=\"544\" data-size=\"small\" data-caption=\"胡适留学日记手稿，三矩特写\" data-watermark=\"watermark\" data-original-src=\"v2-adcbb7772a113422e46ee5ac4eba127f\" data-watermark-src=\"v2-88ed2c959610dec5fe9c0cb28b77fba7\" data-private-watermark-src=\"v2-cffb5bcab5fcefe26696852e25c98d01\"></p>\n<p><br></p>\n<p data-pid=\"vlb7_98l\">在寻找的过程中，我还在另一本手稿里面看到了1915年的这部分札记。这是我从手稿影印版持有者那里购买的扫描件，开头写着：</p>\n<blockquote data-pid=\"drPIDOYx\">为「科学」做一文「论句读及文字符号」，凡三昼夜始成，约一万字。</blockquote>\n<p data-pid=\"zaEEprYl\">后面记录了这篇文章的部分内容。可以看出，文章讲的是标点符号，不仅是弯引号和直角引号，还包括另外几种标点符号的用法。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-3d332890ccb207638806720d72557a9d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"2586\" data-rawheight=\"576\" data-size=\"normal\" data-caption=\"藏暉劄記\" data-watermark=\"watermark\" data-original-src=\"v2-3d332890ccb207638806720d72557a9d\" data-watermark-src=\"v2-e737d614b4ba2606ab6e30a4c97ed1fa\" data-private-watermark-src=\"v2-cb00e020e317d5cec342860d99674bd3\"></p>\n<p><br></p>\n<p data-pid=\"ArbHhv2L\">1915年，中国留学生于美国康奈尔大学创办《科学》杂志，次年移上海出版。</p>\n<p data-pid=\"Z5wxpiPw\">在《科学》第一期的「例言」里，写着一段话，意思是这个杂志采用横排排版，使用西文标点，目的是方便插入物理化学方程公式。</p>\n<p data-pid=\"MNcItYbz\">我手里正好有一本那个时代的数学书，也扫描了一下给大家看看直行排版情况下公式是如何表现的。可以看到为了让公式保持足够清晰的字号尺寸，且一行显示，它们被旋转90度放置，这非常不利于阅读，确实横排才是更好的选择。</p>\n<p data-pid=\"oI9NPqaf\">科学杂志的例言里面还对横向排版有着这样一句补充「非故好新奇，读者谅之」，看来在那个时代，横排还是一个需要读者花时间来接受的前卫行为。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-480cefe7b9acdb2f79db6a519f1b6040_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1170\" data-rawheight=\"254\" data-size=\"normal\" data-caption=\"1915年，《科学》杂志例言\" data-watermark=\"watermark\" data-original-src=\"v2-480cefe7b9acdb2f79db6a519f1b6040\" data-watermark-src=\"v2-500b8f7dc38649d9a51503317a60fa28\" data-private-watermark-src=\"v2-10bca400a981fbb14b288b1c9e328ab0\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-f0f07e181e81c9ad7f2b9d55b322043b_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3510\" data-rawheight=\"2550\" data-size=\"normal\" data-caption=\"清末，《笔算教科书》\" data-watermark=\"watermark\" data-original-src=\"v2-f0f07e181e81c9ad7f2b9d55b322043b\" data-watermark-src=\"v2-aea013b1414306e37c4128a54c055b17\" data-private-watermark-src=\"v2-58f4b90061b00b4eafaa657a940a535a\"></p>\n<p><br></p>\n<p data-pid=\"rM5eLKuB\">《科学》1916年第二卷第一期中，我们就能找到胡适编写的《论句读及文字符号》一文。这篇文章很有名气，只要是谈及标点符号历史，都会谈及它。这个杂志很难找，最后在广州数字图书馆找到了它，我也是第一次看到它的全貌。在以前的想象中，这应该是一个短篇的文章，没想到是一份长达将近30页的详细文档。</p>\n<p data-pid=\"3TkEif44\"><b>里面的引号部分，同时存在「弯引号」和「直角引号」。</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-24d5e92b78e3cd040a846dc77857b706_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1134\" data-rawheight=\"234\" data-size=\"normal\" data-caption=\"1916年，《科学》，论句读及文字符号\" data-watermark=\"watermark\" data-original-src=\"v2-24d5e92b78e3cd040a846dc77857b706\" data-watermark-src=\"v2-189ba0546564c2c0cd800ff48145dc9a\" data-private-watermark-src=\"v2-39444d5b8bed6bad177ff7b93bb34ba0\"></p>\n<p><br></p>\n<p data-pid=\"wWoNA21_\">这套规范里面还介绍了纵向直行排版。文中所写是横行使用弯引号，直行使用直角引号，<b>和现在国家现行的推荐执行标准的处理手法一致</b>，但单双层的优先顺位是反的。</p>\n<p><img src=\"https://pica.zhimg.com/v2-1b861d6b2a6472c849aa6fabebfb3124_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1112\" data-rawheight=\"1578\" data-size=\"small\" data-caption=\"1916年，《科学》，论句读及文字符号\" data-watermark=\"watermark\" data-original-src=\"v2-1b861d6b2a6472c849aa6fabebfb3124\" data-watermark-src=\"v2-8c9f38d95b2caea0efe207c11b4c6135\" data-private-watermark-src=\"v2-133f03e143d59e0566c1336a37d58aad\"></p>\n<p><br></p>\n<p data-pid=\"u8xNTrqy\">陈独秀在新青年杂志中说「《科学》杂志的符号和句读，全用西式，看下去很明白」。而且我觉得他们肯定也是认为弯引号比直角引号更好书写，所以在胡适这一版本的规范中优先使用单引号，就是因为形式简洁，可以一笔写出来。</p>\n<p data-pid=\"z5IYWnqG\">但是单引号也不是一个多好的选择，首先是不够醒目，还有就是在那个印刷品质粗糙的年代，单引号很容易被当成脏点。所以，后来双引号逐渐成为了第一顺位的优先选择。</p>\n<p data-pid=\"xfBAyoBC\">再后来，1919年4月，马裕藻、周作人、朱希祖、刘复、钱玄同、胡适六人第一次向教育部提出颁行新式标点符号议案，并且获得通过。不过<b>这次提案中的引号只提到了直角引号</b>，因为当时还是流行纵向直行排版。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c8e03d8248819c9bebc3bc40bdc76405_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1414\" data-rawheight=\"2000\" data-size=\"normal\" data-caption=\"1919年11月在《请颁行新式标点符号议案》基础上做的修正案\" data-watermark=\"watermark\" data-original-src=\"v2-c8e03d8248819c9bebc3bc40bdc76405\" data-watermark-src=\"v2-f2356cce96ad97b67f0f9e960884d4ae\" data-private-watermark-src=\"v2-36ee3a799a75b8f753fb117f69557ae4\"></p>\n<p><br></p>\n<p data-pid=\"WM6WuOEq\">直到1951年，中华人民共和国公布的《标点符号用法》，才<b>正式提出横排文稿可以使用弯引号</b>的说法。这个规范刊登在1951年9月26日人民日报第七版上，但是关于「弯引号」的说法并不在这版，而是作为补充写在第八版的角落里。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-652ea15c1d74b9a9b8c13246573e74b2_720w.jpg?source=b1748391?rss\" data-rawwidth=\"886\" data-rawheight=\"646\" data-size=\"normal\" data-caption=\"1951年9月26日，《人民日报》\" data-watermark=\"watermark\" data-original-src=\"v2-652ea15c1d74b9a9b8c13246573e74b2\" data-watermark-src=\"v2-5bec6a7087eb463e72ec156b2c889483\" data-private-watermark-src=\"v2-4e5c9a814e76f6379563278d07c8a5ac\"></p>\n<p data-pid=\"ItRDWH6s\">不过我发现一个有趣的事情，那就是这篇《标点符号用法》里面都是优先使用单层直角引号，而这份报纸中其他文章，却都是优先使用双层直角引号，这就出现了两种规则。其实规范中有写相关内容，主张的是从实用角度出发。原文说：</p>\n<blockquote data-pid=\"FmkNRRXo\">用哪种都可以，没有意义上的分别。一般来说，用单引号的居多，那是因为方便，画单线比双线省事。如果引号里面还要用引号，那就必须用另外一种看起来才清楚。</blockquote>\n<p data-pid=\"l21XPDSn\">我向后查找，逐渐缩小范围，最后发现在1951年10月5日，是人民日报第一次将正文部分从优先使用「双层直角引号」改为优先使用「单层直角引号」，当然这只是直排正文部分，横排和标题有另一套规则。</p>\n<p data-pid=\"4cnp-fye\">也正是因此，我发现了人民日报七十多年前的排版趣事。可能就是因为规则的突变触发了流程的问题，导致1951年10月6日一篇文章里出现了单双层直角引号共存的现象。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-52637be2765d884c865442e3353a8537_720w.jpg?source=b1748391?rss\" data-rawwidth=\"474\" data-rawheight=\"528\" data-size=\"normal\" data-caption=\"1951年10月6日，《人民日报》中的趣事\" data-watermark=\"watermark\" data-original-src=\"v2-52637be2765d884c865442e3353a8537\" data-watermark-src=\"v2-28d115e83fd86e7aee528d36b76ea1f0\" data-private-watermark-src=\"v2-cb05ceb89092fedbe4158f95d54f7a21\"></p>\n<p data-pid=\"WOIern1B\">值得一提的是，网上可以查到，1956年1月1日起人民日报由直排为主改成了横排为主。我翻查了一下，确实如此。并且横排引号优先使用的是双层西式弯引号样式，而直排内容，优先使用的是单层直角引号。直到90年代，直排中的直角引号又改回了双层优先，这和1990年实行的《标点符号用法》有关，在这个版本的标准中双层直角引号又被改回了第一顺位。</p>\n<p data-pid=\"942zHDYr\">民间流行方案受地区及用途影响，必然会有所不同，所谓《标点符号用法》也只是推荐标准，并非强制执行，不过人民日报采用的方案可以作为一个<b>大概的演变参考</b>。</p>\n<hr>\n<p data-pid=\"u4A0TCWT\">我最后总结一下，最早在美国创办的中文杂志《科学》，为了更好地表现物理化学公式，使用了一套含有西式弯引号的标点符号规范，一直发展演变成我们今天所使用的模样。</p>\n<p data-pid=\"bi44_ltc\">确实有人推动了西式引号在横排版面中的使用，不过这并不是一拍脑袋随便选的，确实思考了功能性。在弯引号取代直角引号这件事上，也并非取代传统，因为不仅弯引号不是中文传统，直角引号也同样不是。</p>\n<p data-pid=\"XI4NJvc2\">它们都是舶来品，分别应用到了「那个时代」「属于各自」的地方。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/oooooohmygosh?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">oooooohmygosh</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/19867627/answer/2420839332?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">6 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/20141091?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">现代中文中需不需要使用「牛津逗号（或顿号）」？</a><br><a href=\"http://www.zhihu.com/question/20951393?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么英语中常用分号（；），但没有顿号（、），而汉语会使用顿号（、）？</a><br>\n","link":"http://www.zhihu.com/question/19867627/answer/2420839332?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"除了五险一金，为什么我要给员工上「百万医疗险」","date":"2022-04-07 03:00:00","description":"我们希望人人都能健康度日。但天有不测风云，人有旦夕祸福，早早将风险转嫁，才能在真正遇到麻烦时不会惊慌失措。<a href=\"https://sspai.com/post/72491\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72491"},{"title":"虚幻引擎 5 现已正式推出，是否是使用新版引擎开发游戏的好时机呢？","date":"2022-04-07 02:37:49","description":"\n<h2>首先利好一波硬盘！</h2>\n<p data-pid=\"jWL6pE7j\">随着虚幻引擎5的发布，也随着发布了一系列的资源：</p>\n<ul>\n<li data-pid=\"b7gT0KZk\">虚幻引擎5正式版发布，已可在Launcher里下载，约36G。</li>\n<li data-pid=\"ApAfPk-m\">《黑客帝国觉醒》城市示例项目免费公开，已可在虚幻商城里下载，约93G。</li>\n<li data-pid=\"pZ9twjod\">《Lyra》虚幻引擎5初学者游戏包发布，已可在虚幻商城里下载，约2.75G。</li>\n<li data-pid=\"m9aG7AoC\">《ContentExample》最新版更新，约5.85G。</li>\n</ul>\n<p data-pid=\"5k8mo3cQ\">所以下载编译和使用，估摸着你得准备有200G多的SSD硬盘空间。然后CPU和GPU也得比较给力一些，显卡驱动记得更新到最新版。</p>\n<h2>有什么新功能？</h2>\n<p data-pid=\"5HTznb4q\">关注UE5的朋友应该早就在抢先体验版和预览版中细细把玩过UE5的各种功能了，这次正式版在新功能上倒没有什么令人惊奇的。一切都在意料之中，或者说能顺利的发布，其实已经令人喜悦了。</p>\n<p data-pid=\"No770uWC\">想看具体更新了哪些东西的朋友可以去看<a href=\"http://link.zhihu.com/?target=https%3A//docs.unrealengine.com/5.0/zh-CN/unreal-engine-5_0-release-notes/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">虚幻引擎5.0版本说明</a>。</p>\n<h2>稳定吗？</h2>\n<p data-pid=\"cQLMnEcI\">第二个大家最关心的问题是，UE5.0它稳定吗？</p>\n<p data-pid=\"AKoo4GOG\">虽然官方在发布会里说：</p>\n<blockquote data-pid=\"D6xJ6KxF\">它已经在去年12月的 《堡垒之夜：第三章》中经过了实测，并且覆盖了所有平台PC、PS4和PS5；Xbox One、Series X和Series S、Nintendo Switch以及Android。其中的打磨过程非常严格，我们对比了UE5和UE4版《堡垒之夜》的性能、占用内存和稳定性，确定我们能够实现顺利的过渡并且无需大幅修改《堡垒之夜》的代码和内容，而《堡垒之夜》也能够利用UE5的全新编辑器和工作流程。经过我们的亲身试验，大家可以相信UE5已经经过实测，可以用于生产。</blockquote>\n<p data-pid=\"JCNAwNJC\">我自己作为Epic的内部员工，也是看着UE5在FinalBuild之前已知Bug数目在每天递减。但作为一个开发者还是要说：</p>\n<ol>\n<li data-pid=\"ol2QWJTh\">UE5.0作为第一个大版本的正式版本，不可避免也绝对的会在初期遇到一些稳定性问题。包括不限于崩溃或者发现功能不像以往那么工作了。就这点，一是我们开发者自己要努力逐渐适应新的引擎和方式；二是Epic也肯定会比较快的继续推出UE5.0.1之类的修复(其实main分支上已经是UE5.1了)，所以我们等着就好了。</li>\n<li data-pid=\"JxYhLdLv\">作为社区经理，这两天也已经在虚幻社区里收到一些报告崩溃（Bridge插件没更新造成的），或者感觉帧率变慢，或者自己电脑跑不起来CitySample的问题。还好这些问题目前都是比较容易解决的。还有一类问题是不知道在UE5里怎么实现某些功能效果，这个就得靠大家继续研究学习讨论了。</li>\n<li data-pid=\"nn0hL_7j\">UE5是未来，毋庸置疑。所以即使明知道有可能不稳定，也还是想要自己努力追上最新的技术前沿，学习新的技术（卷死别人bushi）。所以看见崩溃或问题，平常心对待吧。</li>\n</ol>\n<h2>现在是用UE5开始做正式项目的好时机吗？</h2>\n<p data-pid=\"mtu9PO1C\">这个问题还真有点难回答，我觉得取决于你要做的项目类型吧。看你是否懂得扬长避短，是否懂得把控你的项目规模和进度。很多情况不能简单的二极管拍脑袋。</p>\n<p data-pid=\"5KGUA3JI\">比如你说UE5要求性能高，Lumen和Nanite不支持移动端，因此得出一个结论UE5不适合手游，这就是想的太简单了。UE5的很多高级特性不支持移动端，但同时UE5也大大新增和改进了很多其他模块，比如大世界，动画模块改进等，这些都是手游可以受益的。Epic自己做的《堡垒之夜》手机端也是很看重的，不可能自己傻傻去忽略移动端上的改进。</p>\n<p data-pid=\"aHnl8mhH\">另外也有一些人拍脑袋就说UE5不适合小团队，因为机器要求配置高和资产规模大成本高，这也是想的太过简单。换个角度想，小团队如果能直接利用UE5的各种强大便利功能，自己也不用改啥，然后小团队自然做一个小而美的中小资产的游戏，那这么算的话以一个小团队的能量和技术力，却能做出看起来2A伪3A能入眼的作品，也是一种成功的模式。虚幻社区内已经有挺多这样的案例，团队往往就是几个人或1个人。所以中心思想还是要自己聪明的懂得扬长避短。</p>\n<p data-pid=\"MzXBarw9\">还有一个方向是影视动画娱乐，大家都知道UE5的Lumen和Nanite会大大加强动画的品质，但同时也知道当前UE5并不能直接平替掉UE4的所有功能，比如曲面细分WPO啥的。这个时候可能就会纠结一下，到底是升到UE5呢，还是继续坚守一段时间UE4？这个就要看各自公司不同项目的进度和商业紧急程度了，一方面现有成熟的项目肯定不能立马大动，另一方面如有新的项目也得及时跟上新技术享受新的技术红利。这个就大家自己判断了。</p>\n<p data-pid=\"dSZXqqef\">我个人的结论是，如果是项目不会因为当前UE5的一些缺陷而影响，那还是推荐UE5。遇到坑也不用那么怕，之后的时间里其他技术同僚也都是在研究UE5（以后研究UE4的资料就越来越少了），你也有人和资料可以学习探讨。而且用什么引擎做项目，其实都不可避免趟坑，这也是必经的过程。</p>\n<p><br></p>\n<h2>UE5的发展愿景？</h2>\n<p data-pid=\"ndTLlMHI\">如果说有什么类型的项目天然就适合UE5？那一定是大世界。别人也问过我你觉得UE4和UE5最大的差别是什么，我想了想回答是大世界。在UE4时代，UE4能承载的游戏上限，其实顶多是一个我们现在司空见惯的3A游戏，世界的规模和粒度大家同时作为玩家也都有个基本印象了。但UE5我觉得目标直接拔高了一个大台阶，在以前我们是真的很难想象《黑客帝国觉醒》那种规模的精细程度的游戏世界。不是说现在的3A游戏地图不如《黑客帝国觉醒》那么大，而是现在的3A游戏依然是传统的渲染流程，利用上当前的各种优化，造出来的世界是看起来大，但精细程度上其实都很平滑。</p>\n<p data-pid=\"AW1gBDyR\">而UE5的宏伟目标，我觉得是朝着搭建一个更大世界的目标前进。更大的世界，量变导致质变。在规模上，一方面会催生出世界分区、程序化生成和MassAI等这种应对大规模的架构技术。大的世界，不光代表数字大，而是同时在小的方面也要更加精细，每一样东西都要比以往做的更加真实自然精致，因此人物角色、物理、动画、粒子等等都得继续上一个台阶。大的世界，也要求更大的团队来开发，因此也就要求在团队协作迭代效率上继续提升，因此像单Actor单文件，虚拟资产，按需加载和ZenLoader等这种技术也得开发出来。这些功能模块的开发和完善，是做以往那种3A游戏不会碰见的需求。</p>\n<p data-pid=\"JLHTNRtx\">总结一下，我想表达的是，如果你能意识到UE5的长远技术目标是大世界，而如果你的项目类型正好契合，那真的应该乘着这股东风扶摇直上。有别人吭哧吭哧花那么大物力人力帮你开发底层技术，你拿来直接用就行，多爽的事。至于那点引擎授权费就真的不算什么了，否则要嘛你真的自己去开发个引擎试试？商业的人都能很容易算清这笔账。</p>\n<hr>\n<p data-pid=\"07h8TpV8\">下面是我的一些个人有感杂谈，纯代表我个人主观想法，如有不对，纯属我认知片面。</p>\n<h2>自研引擎还是商业通用引擎？</h2>\n<p data-pid=\"5fclNqt3\">国内技术圈或者说玩家群体，总有一个迷思，认为大厂的自研引擎最牛，其次才是商业通用引擎。其一自然是因为物以稀为贵，inhouse引擎大部分人接触不到，自然就叠加了一层神秘，仿佛各个都拥有黑科技加持，有自家的绝世武功傍身。其实有接触过自研引擎的人就都会懂其中的痛，缺失的工具链，高频的崩溃，残缺的功能，升级维护耗费的巨大人力。之前寒霜的一次内部人员访谈里就已经吐槽过，我就不找资料佐证了。</p>\n<p data-pid=\"dO9xynSF\">其二可能来源于国内一种高手在民间的情怀，仿佛某些人掌握了某种方法技巧，就能推倒碾压掉工程化的通用引擎。我觉得这其实也是一种手作坊工匠精神面对现代化工厂的抗争和无力。</p>\n<p data-pid=\"NYGYyOrA\">其三游戏好不代表背后的引擎好，游戏坏也不代表背后的引擎坏。做技术应该都懂这一点，但普通玩家不太懂，因此就加剧了这种氛围，觉得游戏那么厉害，背后的引擎肯定巨牛。但现实往往是引擎可能真的很乱很弱，只不过开发游戏的时候用了大量人力堆上去，或者绕过去而已。绝大部分自研引擎其实都是不敢见人的。</p>\n<p data-pid=\"boi_2IPe\">其四再想想这次发布会，那么几个国外自研大厂也改用UE5。他们也算是成功的公司，而且还是自己有自研引擎的公司，就更不傻了。他们远比我们更懂开发和维护一个自研引擎要付出的成本和苦痛。他们也一定是精细对比权衡过，才选择投奔虚幻阵营。现在不能说，但以后这种公司案例还会越来越多。</p>\n<p data-pid=\"qHYzGw-f\">因此我个人最大的感慨是，UE5那么多功能模块，在做《黑客帝国觉醒》时用的那么多技术，其中90%+都是我不懂的！而且我还同时悲哀的发现，按我现在的学习精力和速度以及平凡的天赋，那其中大部分的内容我这辈子也学不会！但我也深知道，UE5是一个成熟的引擎，该有的功能模块也都有，当然该有的bug也有，它足以支撑一个团队利用它去开发出优秀的游戏或作品。从这种意义上来说，此刻我们免费拿到手中的，还包含全套源码的，这个引擎真的很厉害也很珍贵。这话听起来是尬吹有点肉麻，但我作为一个开发者身份这么多年，一分钱没交给Epic，白嫖了这么多年引擎和资源，是有点感谢的。然后Epic现在还发我工资，就更感谢了，哈哈。</p>\n<h2>游戏性重要还是技术重要？</h2>\n<p data-pid=\"5WfKoYUq\">最后也是一点个人感想，因为我总是在网上看到评论说，做游戏还是游戏性最重要，技术画面没那么重要。这话听起来很有道理，对一个游戏来说，游戏不好玩，玩家不买账，确实就是失败的。但我只是想提醒一点，太过看重设计和巧思，而看轻技术，可能恰恰是我们技术薄弱的原因。研究技术工程开发总是费力昂贵的，设计精巧想法刁钻也许正是成功捷径。但长此以往这种氛围，可能代价就是我们发展扶持不起足够底层也足够高端的技术。什么中国为何没有3A，为何开发不出那些工业软件，为何没有我们自己给力的游戏引擎，这些问题背后可能有诸多综合复杂原因，但也许有一点就落在了不够重视技术的点上。</p>\n<p data-pid=\"1iJqK7vU\">还有一方面，现在虚幻引擎早已不止用来做游戏了，在企业的各个领域都在大展拳脚。因此游戏开发中孕育而出的各种技术，是能反哺降临到别的领域再赋能加强的，从而成为基建设施般至关重要的生命技术。</p>\n<p data-pid=\"h1Hs1sGP\">我的point就是一点，尊重技术。</p>\n<hr>\n<p data-pid=\"4kURzxA1\">祝大家虚幻引擎5玩的开心！有什么问题可以找我，我去向官方抱怨，他们听不听是他们的事，但我就是干这个的。</p>\n<p data-pid=\"OgaX1tkf\">虚幻引擎官方群4：869321716 </p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/fjz13?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">大钊</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/526248363/answer/2426865410?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">26 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/405029801?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">虚幻五引擎来后，采用这款引擎制作的游戏是否需要贴图，是不是意味着可以将高模直接用于游戏？</a><br><a href=\"http://www.zhihu.com/question/264812264?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">未来的手游行业使用虚幻四引擎会更加有利吗？</a><br>\n","link":"http://www.zhihu.com/question/526248363/answer/2426865410?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"虚幻引擎 5 现已正式推出，是否是使用新版引擎开发游戏的好时机呢？","date":"2022-04-07 02:37:40","description":"\n<h2>快速一览</h2>\n<ul>\n<li data-pid=\"uLRch65k\">虚幻引擎5正式版发布，已可在Launcher里下载，约36G。</li>\n<li data-pid=\"Di3Rx1-d\">《黑客帝国觉醒》城市示例项目免费公开，已可在虚幻商城里下载，约93G。</li>\n<li data-pid=\"mhimVonm\">《Lyra》虚幻引擎5初学者游戏包发布，已可在虚幻商城里下载，约2.75G。</li>\n<li data-pid=\"7zuSpfLU\">《ContentExample》最新版更新，约5.85G。</li>\n<li data-pid=\"eluP4suX\">最新一系列UE5技术演讲</li>\n</ul>\n<h2>虚幻引擎5正式版发布</h2>\n<p data-pid=\"-EHAuCdz\">发布的日期选的刚刚好，4.5号终于发布正式版了。</p>\n<p><img src=\"https://pica.zhimg.com/v2-fff58ab2845cb6cdfd50ee0dacaee7be_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2458\" data-rawheight=\"1275\" data-watermark=\"original\" data-original-src=\"v2-fff58ab2845cb6cdfd50ee0dacaee7be\" data-watermark-src=\"v2-600b5570bbe0bbf0df9ffb9cda677cd0\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"PpJhk2-P\">有两种安装方式：</p>\n<ol><li data-pid=\"-CmiLMMc\"> 全新安装，选好平台SDK，纯PC平台不带调试的大概36G。 </li></ol>\n<p><img src=\"https://pic3.zhimg.com/v2-8bfc2fc9acc5aac84ffd74bc4119ee89_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1040\" data-rawheight=\"824\" data-watermark=\"original\" data-original-src=\"v2-8bfc2fc9acc5aac84ffd74bc4119ee89\" data-watermark-src=\"v2-deeebdf05f579bc1f16c8f2341855fda\" data-private-watermark-src=\"\"></p>\n<p><br></p>\n<ol><li data-pid=\"cJOUEDpx\"> 从预览版直接更新升级上来，这种方式记得一定要更新插件。 </li></ol>\n<p><img src=\"https://pica.zhimg.com/v2-252b239a3e12e417ccf3c0bad399e631_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"414\" data-rawheight=\"302\" data-watermark=\"original\" data-original-src=\"v2-252b239a3e12e417ccf3c0bad399e631\" data-watermark-src=\"v2-1058d4eb478e6908e476e6262b4a5bb4\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-270bd4bd8f5d56758ce864f702a06ad6_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"845\" data-rawheight=\"370\" data-watermark=\"original\" data-original-src=\"v2-270bd4bd8f5d56758ce864f702a06ad6\" data-watermark-src=\"v2-9ad05e2de9a5d780967f5aa8fa4f2aee\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Eswwpjaw\"> 否则你会遇见这种崩溃： </p>\n<p><img src=\"https://pica.zhimg.com/v2-615149c10bd6b19c02f567a8cc89ada0_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2643\" data-rawheight=\"2055\" data-watermark=\"original\" data-original-src=\"v2-615149c10bd6b19c02f567a8cc89ada0\" data-watermark-src=\"v2-10c5ac05ba0a1cb791285d94db9fc13a\" data-private-watermark-src=\"\"></p>\n<h2>《黑客帝国觉醒》城市示例项目免费公开</h2>\n<p data-pid=\"cGN-1gUU\">这个CitySample，无论你是下载下来玩玩，还是去研究探索里面的技术，都无疑是一个巨大的宝藏，因此大小整整有约93G。 </p>\n<p><img src=\"https://pic3.zhimg.com/v2-85b4944d54ad322db012b5248062890f_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2138\" data-rawheight=\"1517\" data-watermark=\"original\" data-original-src=\"v2-85b4944d54ad322db012b5248062890f\" data-watermark-src=\"v2-23194abccb1fa2456d0878d538673850\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"VU_dfBRt\">下载链接：<a href=\"http://link.zhihu.com/?target=https%3A//www.unrealengine.com/marketplace/zh-CN/product/city-sample\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">城市示例</a></p>\n<p data-pid=\"_VoKEgKU\">另外其实《黑客帝国觉醒》的里面配套资产也分享了出来： </p>\n<p><img src=\"https://pica.zhimg.com/v2-1995089a01c683845b2265e25e3f60bf_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2006\" data-rawheight=\"1691\" data-watermark=\"original\" data-original-src=\"v2-1995089a01c683845b2265e25e3f60bf\" data-watermark-src=\"v2-776e0a17b60a0e8213955a4f68f362af\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"H5dt05M5\"> 下载链接：</p>\n<ul>\n<li data-pid=\"EyvXFXdG\"><a href=\"http://link.zhihu.com/?target=https%3A//www.unrealengine.com/marketplace/zh-CN/product/31797bf6fa0545d590e3bb17d0968dea%23\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">技术宅公寓</a></li>\n<li data-pid=\"1Bt3wDvo\"><a href=\"http://link.zhihu.com/?target=https%3A//www.unrealengine.com/marketplace/zh-CN/product/8162a702d7c747e9ac544dff38af78c8\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">街道装饰</a></li>\n<li data-pid=\"dQBM_p2p\"><a href=\"http://link.zhihu.com/?target=https%3A//www.unrealengine.com/marketplace/zh-CN/product/3ac6699c15a34926afc47bfbe15f4fc5\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">高速公路装饰</a></li>\n</ul>\n<h2>《Lyra》虚幻引擎5初学者游戏包</h2>\n<p data-pid=\"Q01zbc3K\">如果说有什么项目最适合用来熟悉学习UE5，什么项目提供了最教科书级别的编程方式，那肯定是这个Lyra了。 </p>\n<p><img src=\"https://pic3.zhimg.com/v2-032d2cd20b8c5d979bc105a5e671ad9a_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2182\" data-rawheight=\"1395\" data-watermark=\"original\" data-original-src=\"v2-032d2cd20b8c5d979bc105a5e671ad9a\" data-watermark-src=\"v2-c62208ba934a7fd80dae6d505d0f6e6c\" data-private-watermark-src=\"\" data-tags=\"porn\"></p>\n<p data-pid=\"8qEUcf0j\"> 简单贴一个其中的C++代码结构，就能发现其整理的井井有条，强烈大家下载下来学习！大小为2.75G。 </p>\n<p><img src=\"https://pic2.zhimg.com/v2-8d241d5b0e6ca46a9a990ec43e533317_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1449\" data-rawheight=\"1039\" data-watermark=\"original\" data-original-src=\"v2-8d241d5b0e6ca46a9a990ec43e533317\" data-watermark-src=\"v2-516b1ec3c7bf34c7e198c49c76a7a7d1\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"2q0wPhIc\">下载链接：<a href=\"http://link.zhihu.com/?target=https%3A//www.unrealengine.com/marketplace/zh-CN/product/lyra\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Lyra初学者游戏包</a></p>\n<h2>最新ContentExample</h2>\n<p data-pid=\"UlG1_96P\">随着UE5的发布，Epic也随之更新了ContentExample，其中为UE5的各个功能都提供了详细了示例。如果你想深入研究一下UE5的某个功能模块，想看一下有哪些功能，一般是怎么编写实现的，就非常推荐来这个项目学习了。大小为5.85G。 </p>\n<p><img src=\"https://pic3.zhimg.com/v2-f567964136fb49cb26ec8f7adce157d1_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2043\" data-rawheight=\"1362\" data-watermark=\"original\" data-original-src=\"v2-f567964136fb49cb26ec8f7adce157d1\" data-watermark-src=\"v2-243a0a483c46ff6a7adf9f01b4f567de\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"dIU392wU\"> 下载链接：<a href=\"http://link.zhihu.com/?target=https%3A//www.unrealengine.com/marketplace/zh-CN/product/content-examples\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ContentExample</a></p>\n<h2>最新一系列UE5技术演讲</h2>\n<p data-pid=\"okW0oZVy\">同样的，伴随着UE5的发布，我们也将陆续推出一系列的UE5相关技术演讲，涵盖引擎的各个模块，大家可以关注起来学习。我们也在第一时间努力为每个技术视频提供中英文字幕。 </p>\n<p><img src=\"https://pic3.zhimg.com/v2-e8a36a559fa0d833e0d0622f6f398f48_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1692\" data-rawheight=\"1219\" data-watermark=\"original\" data-original-src=\"v2-e8a36a559fa0d833e0d0622f6f398f48\" data-watermark-src=\"v2-9e01acb5ba7a0cae5b5b33e7308587e1\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"54dDVxOC\"> 合集观看链接：<a href=\"http://link.zhihu.com/?target=https%3A//space.bilibili.com/138827797/channel/collectiondetail%3Fsid%3D315208\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">UE5技术演讲</a></p>\n<h2>总结</h2>\n<p data-pid=\"214suutG\">最后，希望大家可以开心享受这些最新的学习资源，期待大家的精彩作品！</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/xu-huan-yin-qing-24?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">虚幻引擎</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/526248363/answer/2426839028?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">26 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/405029801?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">虚幻五引擎来后，采用这款引擎制作的游戏是否需要贴图，是不是意味着可以将高模直接用于游戏？</a><br><a href=\"http://www.zhihu.com/question/264812264?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">未来的手游行业使用虚幻四引擎会更加有利吗？</a><br>\n","link":"http://www.zhihu.com/question/526248363/answer/2426839028?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：B 站发布耳机新品、联想公布新款小新 Pro 16 等","date":"2022-04-07 00:36:22","description":"尼康发布 NIKKOR Z 800mm 镜头、Google Play 将执行更严格的 API 等级限制等。<a href=\"https://sspai.com/post/72501\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72501"},{"title":"汽车设计回顾Vol.9——大众 途锐（上）","date":"2022-04-06 13:05:52","description":"\n<p data-pid=\"kZgw1KfS\">这次在封控居家的漫长时间里聊一下途锐。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-47182eee733690262894b7968858e5eb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"1200\" class=\"origin_image zh-lightbox-thumb\" width=\"1600\" data-original=\"https://pic4.zhimg.com/v2-47182eee733690262894b7968858e5eb_r.jpg\"></figure><p data-pid=\"KnCZUQdr\">我个人一直认为途锐是所有汽车外文名翻译得最信达雅的。Touareg，不仅读音比较像，而且一台SUV动力强大所向披靡的形象也自然显示出来了。Touareg应该是tou+areg的组合词，其中tou很明显是旅行、巡航之类的含义，而areg直接查一下是“沙土荒漠”。因此Touareg的意思也就是在荒漠旅行的SUV。</p>\n<p data-pid=\"qxboBjIX\"><b>途锐诞生于SUV浪潮的背景下</b>。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-d57ec165a330e377e0bc81217be9325f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-d57ec165a330e377e0bc81217be9325f_r.jpg\"></figure><p data-pid=\"vtobMbHk\">2000年，大众推出了一个叫做AAC的皮卡概念车，大致算是对途锐的预告。</p>\n<p data-pid=\"khxADxxM\">当时奔驰已经先推出了M级也就是今天的GLE；宝马则随后推出了X5。到了大众+保时捷系这边，则紧跟着德国老乡的步伐推出了中大型SUV三兄弟：卡宴、Q7和途锐。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-36bfbde38b61ad14f3f050af26972d10_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2882\" data-rawheight=\"768\" class=\"origin_image zh-lightbox-thumb\" width=\"2882\" data-original=\"https://pic1.zhimg.com/v2-36bfbde38b61ad14f3f050af26972d10_r.jpg\"></figure><p data-pid=\"8qgv7RYA\">卡宴主打公路运动性能；Q7尺寸最大且提供7座版，主打豪华+空间；而品牌定位最低的途锐则算是主打最原始的越野能力以及性价比。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-aa85f076ccedee97c434f282aa48ff0e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"683\" data-rawheight=\"512\" class=\"origin_image zh-lightbox-thumb\" width=\"683\" data-original=\"https://pic3.zhimg.com/v2-aa85f076ccedee97c434f282aa48ff0e_r.jpg\"></figure><p data-pid=\"yZxvZ1AP\">所以当时途锐的广告能看到大量针对越野性能方面的宣传。我记得小时候看的电视广告里提到了涉水深度、爬坡角度，侧倾角度等等相当硬核的数据。尤其侧倾角度（记得是30°），看起来是相当夸张的。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-db2a1d431bfa8706bf03606fcd128d82_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic3.zhimg.com/v2-db2a1d431bfa8706bf03606fcd128d82_r.jpg\"></figure><p data-pid=\"SEAIxs3Z\">可能也是为了配合宣传，大众开始用Race Touareg赛车（<i>虽然这车怎么看和普通途锐都八竿子打不着</i>）参加达喀尔拉力赛，并在09-11年取得了三连冠。然后不久就退出并转头去参加WRC，后来也获得了几连冠就又退出了…似乎大众就是去一个自己没怎么玩过的比赛去刷一波存在感，拿几年冠军就走人。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-cf257e625045412bb18f89d5a54bb77e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1400\" data-rawheight=\"1276\" class=\"origin_image zh-lightbox-thumb\" width=\"1400\" data-original=\"https://pic3.zhimg.com/v2-cf257e625045412bb18f89d5a54bb77e_r.jpg\"></figure><p data-pid=\"Wv1_N9gh\">回到正文上来。<b>如果论血缘，途锐和卡宴更近。比如相当值得一提的就是途锐和卡宴共用了侧门</b>。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-f9c5e0c094769852fc96d66baaed79ea_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1369\" data-rawheight=\"1133\" class=\"origin_image zh-lightbox-thumb\" width=\"1369\" data-original=\"https://pic3.zhimg.com/v2-f9c5e0c094769852fc96d66baaed79ea_r.jpg\"></figure><p data-pid=\"mFIcWeTD\">而在动力方面，除了中低端的VR6发动机共享外，在顶配发动机上则各显神通。彼时大众集团在技术狂魔皮耶希的领导下非常激进：</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-1723eaa2e8012bc8406bdc527a05ed03_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"768\" class=\"origin_image zh-lightbox-thumb\" width=\"1024\" data-original=\"https://pic4.zhimg.com/v2-1723eaa2e8012bc8406bdc527a05ed03_r.jpg\"></figure><p data-pid=\"LLCkd6ds\">途锐推出了主要面向中东市场的限量500台的W12款，柴油机则提供5.0 V10车型。后来在07年调高功率到350匹后更是暨高尔夫R32和帕萨特R36之后命名为R50。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-895c7367f0b6ab6c4b8e81b3bfc80baf_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic4.zhimg.com/v2-895c7367f0b6ab6c4b8e81b3bfc80baf_r.jpg\"></figure><p data-pid=\"TC0SP6P7\">而奥迪更是在勒芒最强势那阵推出了Q7的6.0 V12 TDI版。在整个大众集团大规模共享各种调教的EA839的今天看来，那个时代的发动机可以说是非常疯狂了。</p>\n<h3>下面终于可以开始说说设计了……</h3>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-f525f809eab26305b2ff1f9169756028_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic1.zhimg.com/v2-f525f809eab26305b2ff1f9169756028_r.jpg\"></figure><p data-pid=\"oZ6Ff5VV\">途锐整体设计上有种学院派的标准感，拿来放在课本上都没问题。比例协调，姿态<b>稳健</b>，整车视觉重心在B柱略微靠后的位置，车高和轮子比例适中，前后悬长度合适。整体很均衡，带了一点运动倾向。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-750a594ac3d9a7e42e918d495193390d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"768\" class=\"origin_image zh-lightbox-thumb\" width=\"1024\" data-original=\"https://pic2.zhimg.com/v2-750a594ac3d9a7e42e918d495193390d_r.jpg\"></figure><p data-pid=\"7DKlnmT3\">初代途锐和高尔夫4同时代，当时整个大众品牌的设计也是相对板正、圆润的（可以理解为更像圆角矩形）。特征横平竖直，但细节处理多以圆角为主。而这样的设计手法也使得车头看起来坚固敦实，颇有种高级工具车的味道。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-6a6ec64a9ad9b5c1449b3df260ac29f4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"960\" class=\"origin_image zh-lightbox-thumb\" width=\"1280\" data-original=\"https://pic1.zhimg.com/v2-6a6ec64a9ad9b5c1449b3df260ac29f4_r.jpg\"></figure><p data-pid=\"0KtYa6Jw\">带大灯清洗装置的双氙气大灯在当时是绝对高级的配置。整灯电镀也是在没有细分车灯设计时代的常规操作。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-0d4dba66350686ab1cdee2138494e365_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"1200\" class=\"origin_image zh-lightbox-thumb\" width=\"1600\" data-original=\"https://pic2.zhimg.com/v2-0d4dba66350686ab1cdee2138494e365_r.jpg\"></figure><p data-pid=\"ea14uO51\">圆润的形面+宽大的肩膀现在被证明是永不过时的设计。车身侧面的高光同样具有教科书一般的标准感。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-0cd5cc21de900ee08cd18c136cd43b5c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"1200\" class=\"origin_image zh-lightbox-thumb\" width=\"1600\" data-original=\"https://pic1.zhimg.com/v2-0cd5cc21de900ee08cd18c136cd43b5c_r.jpg\"></figure><p data-pid=\"eaxK4-4J\">尾灯虽然是卤素的，但双圆的theme在辨识度方面非常好。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-828c9bb75ebd6fd0483347d611f7ddbe_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"688\" data-rawheight=\"516\" class=\"origin_image zh-lightbox-thumb\" width=\"688\" data-original=\"https://pic3.zhimg.com/v2-828c9bb75ebd6fd0483347d611f7ddbe_r.jpg\"></figure><p data-pid=\"9PRC4QcV\">五辐轮毂采用了当时也不是很多见的精车工艺，虽然没有增加黑色喷涂，但依然显得很犀利。另外连螺栓装饰帽都用了电镀处理。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-b2bfa4ce3b1fe345edafbb6487f82fa6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"1200\" class=\"origin_image zh-lightbox-thumb\" width=\"1600\" data-original=\"https://pic3.zhimg.com/v2-b2bfa4ce3b1fe345edafbb6487f82fa6_r.jpg\"></figure><p data-pid=\"OO3njWFz\">内饰方面，作为大众的旗舰车型，途锐有与级别相称的宽大内饰。整体造型很敦实的IP，宽大的console，哪怕门扶手都显得比普通车更宽大一些。桃木饰板+浅灰色的底色则充满了当年的豪华气息。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-4eda0835a4b49db3edf81b7b023decb0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"1200\" class=\"origin_image zh-lightbox-thumb\" width=\"1600\" data-original=\"https://pic1.zhimg.com/v2-4eda0835a4b49db3edf81b7b023decb0_r.jpg\"></figure><p data-pid=\"BR52vzjv\">横向四辐的方向盘和飞机式的挡把都来自辉腾。在当时，带多功能按键的方向盘毫无疑问是一个相当高端的配置，大部分车——即使奥迪A4这种——都是光板。放大看的话，音量、切歌、电话等今天常见的功能都在这里安排上了，只不过限于技术，各个功能的集成度没有今天这么高。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-68895abae17940b88575a3ddd7ce010b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"1024\" class=\"origin_image zh-lightbox-thumb\" width=\"1280\" data-original=\"https://pic4.zhimg.com/v2-68895abae17940b88575a3ddd7ce010b_r.jpg\"></figure><p data-pid=\"QWSmkGSt\">中控方面，各种眼花缭乱的功能键键平铺直叙，分区空调面板也显得比较朴素，但双旋钮的设计还是很抢眼的。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-465402f1ed573d3ce1f33d0fe7144011_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-465402f1ed573d3ce1f33d0fe7144011_r.jpg\"></figure><p data-pid=\"CrCHBVWI\">2006年，途锐迎来Facelift。此时大众开启了U形前脸时代，整体品牌的外观设计走向更加豪华，大面积的U形电镀格栅成为了前脸的主角。头灯也都告别了矩形设计，开始采用外大内小的双单元布局。</p>\n<p data-pid=\"L5XRLSxY\">但拉长的大灯以及下格栅都让车头看起来相比之前稍显脆弱。车头看起来很敦实的感觉不复存在。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-be72283b5ef0cc649a60952a8f42703d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"768\" class=\"origin_image zh-lightbox-thumb\" width=\"1024\" data-original=\"https://pic2.zhimg.com/v2-be72283b5ef0cc649a60952a8f42703d_r.jpg\"></figure><p data-pid=\"8Dm_5irC\">但好处就是整车气质上显得年轻运动了一些。虽然大改的地方只有车头，但从侧视看起来，仅通过给大灯开外眼角，整车就显得运动不少。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-6d95e1a47d713a7cb4b002b874b99020_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1680\" data-rawheight=\"1050\" class=\"origin_image zh-lightbox-thumb\" width=\"1680\" data-original=\"https://pic1.zhimg.com/v2-6d95e1a47d713a7cb4b002b874b99020_r.jpg\"></figure><p data-pid=\"0X40zVP6\">而车尾则几乎没变化。仅有尾灯看起来似乎熏黑了一样。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-09a59c33c25b3bb50b99d46d61cdb60d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"768\" class=\"origin_image zh-lightbox-thumb\" width=\"1024\" data-original=\"https://pic2.zhimg.com/v2-09a59c33c25b3bb50b99d46d61cdb60d_r.jpg\"></figure><p data-pid=\"L020zUxi\">尾灯主题保持原样的基础上做了加强化的处理。外灯罩用了深红色，内部结构是重新设计的，细看下内部更立体了，另外color&amp;trim方面也加入了一些黑色。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-beb9efcee9615b79a9870b9bb107ede9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic2.zhimg.com/v2-beb9efcee9615b79a9870b9bb107ede9_r.jpg\"></figure><p data-pid=\"f5M_OkqG\">新的五辐Y形车轮也很好看。对于尺寸足够大的轮毂来说，主题简洁就已经够了。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-c861cc66518b0873b35af7eb95bf2996_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" class=\"origin_image zh-lightbox-thumb\" width=\"1920\" data-original=\"https://pic3.zhimg.com/v2-c861cc66518b0873b35af7eb95bf2996_r.jpg\"></figure><p data-pid=\"lnasgtXj\">我们能从途锐看到很多设计上连贯有逻辑感的特征。这种有些学院派的简洁设计，在充满了激进、歇斯底里式设计的今天看来是值得怀念的。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"NjkaaFjr\">途锐2代和3代会在下篇介绍</p>\n<p></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/DesignerZhao?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">赵英男</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/493691921?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"怎样去选择与自己车子相匹配的机油？","date":"2022-04-06 10:04:07","description":"\n<p data-pid=\"6d7OofU_\"></p>\n<p data-pid=\"6d7OofU_\"><b>选机油就跟谈恋爱一样，好不好不重要，最重要的是合适。</b></p>\n<p data-pid=\"tRrtZ88z\">那么哪些地方要合适呢?</p>\n<p data-pid=\"8ga5T1aj\">往大了说6、7万的车没必要上全合成，半合成或者矿物油足以，开个30多万的车，加矿物油就不合适了。</p>\n<p data-pid=\"QoaNdDRj\">往小了说机油油品、等级（API）、粘度（SAE）等都要符合厂家的标准，也就是使用保养手册上规定的标准。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-08963d934da11524a89fa6c316d44276_720w.jpg?source=b1748391?rss\" data-rawwidth=\"720\" data-rawheight=\"406\" data-size=\"normal\" data-caption=\"马自达保养手册\" data-watermark=\"watermark\" data-original-src=\"v2-08963d934da11524a89fa6c316d44276\" data-watermark-src=\"v2-fc3d5ccb9d97423c5c91dd0592ac13e0\" data-private-watermark-src=\"v2-95ec195e3252f36fc4b32755d08886f9\"></p>\n<p data-pid=\"3gRpu02m\">找到保养手册，通过目录翻到机油那一页，找到厂家对于SN、SAE的要求，上图画框的部分就是厂家对于SN、SAE的要求。</p>\n<p data-pid=\"3djiV7wl\">好一点的车，比如BBA，都会有厂家认证的机油标准。</p>\n<p><img src=\"https://pica.zhimg.com/v2-a4c79526e655c9ac65d227eed099a2c0_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1269\" data-rawheight=\"403\" data-size=\"normal\" data-caption=\"奔驰保养手册\" data-watermark=\"watermark\" data-original-src=\"v2-a4c79526e655c9ac65d227eed099a2c0\" data-watermark-src=\"v2-97781088e0edf4e586b13f30d2b2a277\" data-private-watermark-src=\"v2-4f031c5780524c048517d3e71d7e0d4e\"></p>\n<p data-pid=\"sJUv0SB1\">比如这辆奔驰，厂家认证的等级就是MB229.5/229.6，除此之外粘度(SAE)要求是0W-40或5W-40。</p>\n<p data-pid=\"_GIcPKHN\">从保养手册上获得API、SAE以及机油等级的信息之后，直接对应到机油壳上就可以选择到合适的机油啦。</p>\n<p><img src=\"https://pica.zhimg.com/v2-da733fb21c7888dfa99b82ffa3f1128f_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"1401\" data-size=\"small\" data-caption=\"马自达原厂油\" data-watermark=\"watermark\" data-original-src=\"v2-da733fb21c7888dfa99b82ffa3f1128f\" data-watermark-src=\"v2-0ee1a07941ba427bccbddca95b95f1ee\" data-private-watermark-src=\"v2-90f190d20dafffd6ef5f05b861bc960e\"></p>\n<p></p>\n<a data-draft-node=\"block\" data-draft-type=\"ad-link-card\" data-ad-id=\"fee_ed738f18b8becbc84659cc10797a3fbf\"></a><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhang-xiao-5-34-17?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">张立晨</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/57394330/answer/2424718099?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">7 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/266403361?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">请问我的车子4个月前换的机油，现在要开800公里想要换机油或者带上机油吗？</a><br><a href=\"http://www.zhihu.com/question/64932840?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">机油如果加混了怎么处理？</a><br>\n","link":"http://www.zhihu.com/question/57394330/answer/2424718099?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"智能座舱最理想的交互模式应该是什么样的？目前己经发展到了哪个阶段？","date":"2022-04-06 10:03:57","description":"\n<p data-pid=\"7RMD9iNE\">刚拜读完 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/bdccf5497f35d71f2eab387e9c0c6138\" data-hash=\"bdccf5497f35d71f2eab387e9c0c6138\" data-hovercard=\"p$b$bdccf5497f35d71f2eab387e9c0c6138\">@李星宇</a> 的回答，非常专业，全面，但是我想做一些补充，也是我最近一段时间的思考。</p>\n<p data-pid=\"W15N1Ng-\">我的其中一个研究方向是“Human AI Interaction”(HAAI)，这个概念是伴随着人工智能的兴起而不断发展起来的一个新方向，大的背景是2019年，MIT领衔，哈佛、耶鲁联合微软、谷歌、Facebook等公司的多位研究者，在 Nature 发表了一篇以 “Machine behaviour”为题的文章，宣告“机器行为学”诞生。</p>\n<p data-pid=\"C6X9-FBV\">有意思的是，该学科将人工智能视为一系列有自己行为模式及生态反应的个体，认为机器行为会反作用于人的行为，同时人与人工智能之间也会派生出合作行为，“机器行为学”与HAAI密不可分，汽车作为智能自动化机器和多种人机交互技术的载体，是HAAI纯天然的研究对象。</p>\n<p data-pid=\"mfCO7BMq\">先说说智能化，大家猜一猜，<b>我们的智能汽车的智商有多高？</b></p>\n<p data-pid=\"hfwx1VZ1\">我在清华大学做过一个智能体的智商、共情能力和拟人化的研究，目前还在进行，中间我们把市面上的语音助手、车机助手做过简单的评测，从智力上来看，目前的<b>语音助手（包括车机）智商与3-4年级的儿童等级类似，共情能力和拟人化较低（总分10分，均值在6以下）</b>。</p>\n<p data-pid=\"2LB5bmeu\">这意味着目前的<b>智能座舱“不足够智能”，或者说处于“弱人工智能”阶段，拟人化也处于比较初级的“形象拟人”而非“灵魂拟人”阶段，我们把智能座舱的“智能”高估了。</b></p>\n<p data-pid=\"3KQfJRIM\">如果把智能座舱的阶段抽象归纳为3个阶段进程的话，可以归纳成：<b>用户主动式交互---机器建议式交互---机器主动式交互</b>，我们目前处于用户主动式交互到机器建议式交互到过渡期。而我们能推理出用户输入，机器输出/反馈和场景信息采集在这3个阶段进程里的曲线趋势如图所示。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-24e3b620168af99c1a1b7fb161fcf7db_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"687\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-24e3b620168af99c1a1b7fb161fcf7db\" data-watermark-src=\"v2-c461631d1cab4e79effa0289cb5d7451\" data-private-watermark-src=\"v2-267d8a3f68238f5823c8e55cd63e2b59\"></p>\n<p data-pid=\"j1niNrK9\">再回到汽车人机交互上来，<b>我们做过研究，人机交互的种类非常多</b>（视听触嗅），交互的方式、预警的方式并不是越多越好，我们的研究结果表明，预警方式视听触三通道预警和听触双通道预警的区别不大，而车内交互方式并非越多越好（2-3种），<b>从研究的角度看，我希望“交互看不见”、“返璞归真”。</b></p>\n<h3>让“交互看不见”</h3>\n<p data-pid=\"BhM7pLb8\">为什么都2022年了，还没有一个好的国产车机产品？就是因为我们在“满足五感”的刺激，而非把交互关在智能后面。</p>\n<p data-pid=\"bxqx_w13\"><a href=\"https://www.zhihu.com/search?q=%E4%BA%BA%E6%9C%BA%E4%BA%A4%E4%BA%92&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A%22817528452%22%7D\" class=\"internal\">人机交互</a><b>的本质，仍然是通过智能化及数字化交互技术，进一步加强和延伸人与周围事物的自然交互能力，所有人机交互方式都是在扩展人的感觉和知觉能力，从而实现自然流畅的互动。</b></p>\n<p data-pid=\"YFhrD06q\">人工智能时代到来，人与机器的关系、人与数据的关系、人与信息的关系在发生着本质的变化，在这个数字化的智能时代，传统的<b>基于从命令到反馈的人机交互方式</b>正在被打破。被动交互的逻辑很简单，由人给机器发号施令，机器执行并输出结果反馈给人。<b>整个过程直接高效，但是并不智能。</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-a7d78bce37a1906e32d88b9ab33e5820_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1000\" data-rawheight=\"640\" data-size=\"normal\" data-caption=\"GUI\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Tndxbpob\">基于大数据并融合多传感器信息的<b>“主动交互”，与被动交互相反，由机器为起点，主动输出执行结果或使用建议给用户，用户根据结果或提供的建议完成具体的交互任务，在这个过程中，机器通过分析传感器获得的大数据信息，主动的从外界的信息中做出判断，</b>计算出用户在当前情境下用户需要的信息，不再需要人来输入或下达命令，而这个过程的输入和输出完全由机器来完成。</p>\n<p data-pid=\"ttb-zZC9\">我个人也比较认同“宁静技术”（Calm technology）的人机交互方向，<b>人机交互逐渐变得隐匿和不可见（invisible），通过对用户的情景感知（contextual awareness）能力，最小化用户的注意力，让计算设备在背景中运行。</b></p>\n<h3>\n<br>“返璞归真”</h3>\n<p data-pid=\"ADxDdsBR\"><br>汽车的根本，就是把我们安全、高效的（再加个舒适）从A运到B，目前对于安全我们还没有完全弄明白，就开始内卷到各种大屏、视觉显示、垃圾功能的“堆料”上面。</p>\n<p data-pid=\"7KS1u8RB\">乱花渐欲迷人眼，浅草才能没马蹄。人是欲望的动物，不要指望在给予了“视觉刺激”、“自动化依赖”后，用户能够一哆嗦从梦中回来，机器的行为会重塑人的大脑、重塑人的行为，很多时候并不可逆。大屏和大屏背后的内容就是视觉刺激，内容越丰富，对用户的安全影响越大，智能辅助驾驶也一样，适度依赖和绝对依赖之间的界限并不清晰。</p>\n<p data-pid=\"kz1C897d\">所以我们需要返璞归真，少制造噱头，多想想用户安全。</p>\n<p data-pid=\"4Ug7xs45\">另外说一下我的专栏：</p>\n<a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://zhuanlan.zhihu.com/p/153143673\" data-size=\"small\" data-image=\"https://pic2.zhimg.com/v2-75def099865f6e6fdc7be513c1a07a74_r.jpg?source=b1748391\" data-entity-type=\"article\" class=\"internal\">当我们提到汽车HMI设计时，我们到底在设计什么？</a><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://www.zhihu.com/column/automotiveHMI\" data-image=\"https://pic3.zhimg.com/v2-33c576c892c63ea300332acdb69b32ed_l.jpg?source=b1748391\" data-image-width=\"300\" data-image-height=\"300\" class=\"internal\">汽车HMI</a><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://zhuanlan.zhihu.com/p/141339932\" data-size=\"small\" data-image=\"https://pic3.zhimg.com/v2-ccc4d8abec25a24fc6638c5191892bdc_720w.jpg?source=b1748391\" data-entity-type=\"article\" class=\"internal\">智能座舱里最理想的交互体系是什么？</a><p data-pid=\"ZOaAFklh\"><b>以上只是补充，给大家提个醒。</b></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wyhdesign?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">王亚辉</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/515398912/answer/2418504377?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">21 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/26977271?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">现在的智能家居方案，符合你的预期吗？你理想中的智能家是什么样的？</a><br><a href=\"http://www.zhihu.com/question/266636086?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">大家理想中的智能汽车钥匙是什么样的？</a><br>\n","link":"http://www.zhihu.com/question/515398912/answer/2418504377?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"送码 | 为了在 Safari 中愉快地摘录文章，我开发了一个 Obsidian 插件","date":"2022-04-06 09:30:03","description":"这款扩展一直都是我配合 Obsidian 使用的利器，但是自从我将 safari 当做主流浏览器（没错它现在很棒了）后就遇到麻烦了，由于有大量的文章需要摘录，就会不停的在两个浏览器来回切换，为了解决这个问题，我就想有没有可能在 Safari 中实现同样的扩展。于是就开始着手研究如何开发 Safari 浏览器扩展，经过一番折腾，终于顺利上架 Mac App Store，所以今天就在少数派跟大家介绍一下插件的使用。<a href=\"https://sspai.com/post/72231\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72231"},{"title":"如何评价《境界触发者》漫画第221、222话？","date":"2022-04-06 09:07:51","description":"\n<p data-pid=\"LiRptHRS\">话不多说，直接进入正题吧。本月更新的《境界触发者》漫画221-222话基本还是在给模拟测试的第二天各支队伍做总结。</p>\n<hr>\n<h2>一、221-222话内容汇总</h2>\n<p><img src=\"https://pic2.zhimg.com/v2-0a49b89cfe7dc14ccac870ac5396dadb_720w.jpg?source=b1748391?rss\" data-caption=\"承接220话结尾\" data-size=\"normal\" data-rawwidth=\"573\" data-rawheight=\"546\" data-watermark=\"watermark\" data-original-src=\"v2-0a49b89cfe7dc14ccac870ac5396dadb\" data-watermark-src=\"v2-ba6fcfa6a98adf0fb494ff3ffa020d1b\" data-private-watermark-src=\"v2-e665e356ddbe69f9ad82ff1339bdede2\"></p>\n<p data-pid=\"hcygYGyM\">221话开头承接了220话结尾了，对比220话20P讲解5支队伍的当日总结，221-222话倒是将38P的内容展开到了4支队伍上，横向对比各支队伍的内容更加充裕了，也花了相当多的笔墨着重在了柿崎、水上的队伍上。</p>\n<p data-pid=\"mbNSSps8\">之前青稚218-219话分析内容中预测柿崎、来马队终于如愿登场。</p>\n<p data-pid=\"7Fpdgsrd\">221话主要还是围绕在第二天的特别课题回答人选的反馈上，二宫、柿崎两只队伍都算是在这个人选上获得了负反馈，包括且不限于绘马的碎碎念、太一双目失去了生活的希望。</p>\n<p data-pid=\"K_hbE_ul\">222话则是变成了对水上的声讨会和弓场的自我声讨。</p>\n<p data-pid=\"ndJzNHiB\">最终在模拟测试第三天的到来，水上的原队友隐岐看穿了“幕后黑手”水上作为本月漫画的结尾。</p>\n<p><br></p>\n<h2>二、队长们眼中的远征测试选拔</h2>\n<p><img src=\"https://pic2.zhimg.com/v2-16bb671c6880290cbd38e4676369ed85_720w.jpg?source=b1748391?rss\" data-caption=\"不同人对测试的不同看法\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"241\" data-watermark=\"watermark\" data-original-src=\"v2-16bb671c6880290cbd38e4676369ed85\" data-watermark-src=\"v2-2d4facc86801ccf997e44f209d45f66f\" data-private-watermark-src=\"v2-f66dfa88c051ef462cf7e45240ff90ac\"></p>\n<p data-pid=\"BHKeMVpb\">221话中借东队长的口，说出了不同人对于远征测试选拔的不同看待方式。二宫眼中的测试选拔，是锻炼新人。柿崎眼中的测试选拔，除了让犬饲和影浦带动队伍战力，也有另外的考量。水上虽然骚操作不断，但对于队伍的走向有着清晰的认识。诹访不止一次刷新了读者对他的观感。220话中王子也说课题分数不重要，有趣才最重要。村上队伍如同学霸们的一场学习研讨会。歌川队就像是兄弟姐妹的家庭交流。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-4c67fc2491ef7709013f5db0309c133b_720w.jpg?source=b1748391?rss\" data-caption=\"队长原因不明确的若村\" data-size=\"normal\" data-rawwidth=\"365\" data-rawheight=\"231\" data-watermark=\"watermark\" data-original-src=\"v2-4c67fc2491ef7709013f5db0309c133b\" data-watermark-src=\"v2-92c8ae19297e1b902ea596d44f8552a1\" data-private-watermark-src=\"v2-ac0c25cbb6659b0abe817638a837dcd7\"></p>\n<p data-pid=\"VIhmf5kN\">除了现在依旧不太明朗的若村、北添，其他队伍的队长（包括古寺和来马）似乎对于这一场远征测试选拔都有自己不同的看法。</p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-deff9392239a8cdff91ce44ac7c2a409_720w.jpg?source=b1748391?rss\" data-caption=\"若村不像带有任务的样子\" data-size=\"normal\" data-rawwidth=\"568\" data-rawheight=\"375\" data-watermark=\"watermark\" data-original-src=\"v2-deff9392239a8cdff91ce44ac7c2a409\" data-watermark-src=\"v2-cfbdea03ac979cf06b53572e57799b4d\" data-private-watermark-src=\"v2-f0fb014680f2880d771c6e7d83a13d93\"></p>\n<p data-pid=\"ZZMEbDJf\">之前我在 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/79ebfff6feb3423ea6ab16f6550454ac\" data-hash=\"79ebfff6feb3423ea6ab16f6550454ac\" data-hovercard=\"p$b$79ebfff6feb3423ea6ab16f6550454ac\">@云吞花卷</a> 的想法下评论，感觉队长们似乎都带着某种任务、目的参与了这场远征测试。但细想一番，这个观点似乎不太可论证，原因是在众多队长里，若村是这个观点最大的漏洞，总不会就若村一个人没有任务吧？</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6e1b1fb456064a10e99ed051242b187c_720w.jpg?source=b1748391?rss\" data-caption=\"个个都是“懂事长”\" data-size=\"normal\" data-rawwidth=\"567\" data-rawheight=\"223\" data-watermark=\"watermark\" data-original-src=\"v2-6e1b1fb456064a10e99ed051242b187c\" data-watermark-src=\"v2-f56d2e26a308e5eb4a281e4cedabf77a\" data-private-watermark-src=\"v2-22bfffb912bc8f54e40b58da15622eaf\"></p>\n<p data-pid=\"qDUgbxSg\">因此转念一想，每个队长的看待方式，更像是这群智商超过200点的优秀队员们对于边境高层设置远征测试选拔的目的有了一个清晰的认知。毕竟连边境高层们对于队员也点评为“太懂事了”。这一圈“懂事长”应该对远征测试做了不少的思考，从而将他们的想法付之于测试的环节中。</p>\n<p><br></p>\n<h2>三、特别课题的延申</h2>\n<p><img src=\"https://pic3.zhimg.com/v2-6d186a32a5886f33945656ee0a774f62_720w.jpg?source=b1748391?rss\" data-caption=\"虚心请教\" data-size=\"normal\" data-rawwidth=\"242\" data-rawheight=\"355\" data-watermark=\"watermark\" data-original-src=\"v2-6d186a32a5886f33945656ee0a774f62\" data-watermark-src=\"v2-307799f33f05076995329230d4a42e27\" data-private-watermark-src=\"v2-b792b02b6d2d9c5f428c84095344cfc3\"></p>\n<p data-pid=\"EYD9XoCY\">221话中，木虎听从了奥寺的建议，虚心向东队请教特别课题答案的差异。从东队的回应上看，东队是在木虎对于1对1的认知基础上进行了延申，加深了3队混合对战后带来的战术增益。这个增益对于边境的优秀成员是一个正向的补充，让成员更加飞速成长。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-bfd48af74b53928c70875d769d16b1d1_720w.jpg?source=b1748391?rss\" data-caption=\"思考解题的全面性\" data-size=\"normal\" data-rawwidth=\"688\" data-rawheight=\"265\" data-watermark=\"watermark\" data-original-src=\"v2-bfd48af74b53928c70875d769d16b1d1\" data-watermark-src=\"v2-59a4e865aaea7c631e1371a0ae7d2d48\" data-private-watermark-src=\"v2-f87e04fa46ec85e4c43e430784652f95\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-4bf54bddee19d98702b9b3b837711a3c_720w.jpg?source=b1748391?rss\" data-caption=\"单一观点的深入解析\" data-size=\"normal\" data-rawwidth=\"731\" data-rawheight=\"405\" data-watermark=\"watermark\" data-original-src=\"v2-4bf54bddee19d98702b9b3b837711a3c\" data-watermark-src=\"v2-f31a25270e61312e2dc0d62460379c21\" data-private-watermark-src=\"v2-1f27c5651ad4d999979de8d1e56d8fa9\"></p>\n<p data-pid=\"hRyRNRMR\">这里面能看出木虎和东两人思考问题的不同，木虎是从题干明面上进行的反向推导，务求追寻全面的解答。东队则是从其中一个点进行延申，这种做法类似我们生活中常说的，精于某一个领域或方向。这恰好也展现了木虎作为精英部队的全面性，而东队则是边境战术/狙击手的传授员。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-c69cf179cad2e1d94646533982c5f888_720w.jpg?source=b1748391?rss\" data-caption=\"面授机宜\" data-size=\"normal\" data-rawwidth=\"682\" data-rawheight=\"461\" data-watermark=\"watermark\" data-original-src=\"v2-c69cf179cad2e1d94646533982c5f888\" data-watermark-src=\"v2-ecd5bdf2022d48d4f0d3ed16e17729e0\" data-private-watermark-src=\"v2-93ad9d4c44fc935ff9e8e3964592ce18\"></p>\n<p data-pid=\"QWppJp9Z\">当然，受到木虎和绘马二人的反馈，东队也开始了他自我定位的导师作用，开始向“徒孙”绘马面授机宜。</p>\n<p><br></p>\n<h2>四、犬影之争，殃及太一</h2>\n<p><img src=\"https://pic2.zhimg.com/v2-53f2bee1633bcc973c08b4a2a347900f_720w.jpg?source=b1748391?rss\" data-caption=\"被选剩下的太一\" data-size=\"normal\" data-rawwidth=\"288\" data-rawheight=\"333\" data-watermark=\"watermark\" data-original-src=\"v2-53f2bee1633bcc973c08b4a2a347900f\" data-watermark-src=\"v2-5c181a077414ce01e31edc1ac6a8b73f\" data-private-watermark-src=\"v2-aebf40fd936c7272327e76504d76707f\"></p>\n<p data-pid=\"KylVMS5F\">太一失去希望其实在204话就有铺垫，太一当时就被队长们选人公开处刑，给太一本话“黑化”埋下了伏笔。真正让太一彻底眼神空洞则是犬饲在影浦在场选择“直言不讳”、柿崎在下决断选择犬饲三重的因素下所导致的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-03c2fcf50e71a2f07a374f782f2fee04_720w.jpg?source=b1748391?rss\" data-caption=\"对比柿崎的做法，来马更懂得照顾他人的情绪\" data-size=\"normal\" data-rawwidth=\"611\" data-rawheight=\"212\" data-watermark=\"watermark\" data-original-src=\"v2-03c2fcf50e71a2f07a374f782f2fee04\" data-watermark-src=\"v2-6490e56c62901e1b45c567091e155587\" data-private-watermark-src=\"v2-1fa866056648803ae98c02c5ff593df2\"></p>\n<p data-pid=\"jueHzm0u\">这段剧情也可以反向证明为何铃鸣第一最受尊重的是佛系的来马队长。柿崎虽暖，但他容易摇摆不定，做出决定也容易接收一时的建议。来马队长虽然佛系，但对于所有队员的情绪都非常照顾，太一此刻的情绪不对，来马会先解决太一所表现出来的情绪问题。（也可以参考钢情绪低落时来马的处理方式）</p>\n<p><img src=\"https://pic2.zhimg.com/v2-df8599217c9c6735914409c88d22390e_720w.jpg?source=b1748391?rss\" data-caption=\"柿崎的做法也不能说是错误的\" data-size=\"normal\" data-rawwidth=\"645\" data-rawheight=\"610\" data-watermark=\"watermark\" data-original-src=\"v2-df8599217c9c6735914409c88d22390e\" data-watermark-src=\"v2-b8a002a263bdff80a26eb8f1311de489\" data-private-watermark-src=\"v2-b95ee806be80c27f319dcef60a95c0b4\"></p>\n<p data-pid=\"MLAkpsq7\">但柿崎有柿崎的做法，柿崎及时调停了犬影之争，安抚太一并不能说是错的。柿崎的性格里有容易摇摆的倾向，也需要犬饲这样能够帮助下决断的队员，柿崎也不是忽略太一的情绪，只是说因为前文阐述的三重因素的影响下，让太一有点钻牛角尖了。</p>\n<p data-pid=\"Oid8kuI3\">影的表现跟他平常护犊子的形象一致，队友想要做什么事情，就让他做好了，做好还是没做好不重要。这点在北添和绘马身上都有一样的体现。</p>\n<p data-pid=\"RrQhL5HU\">犬饲的劝说则有点二宫的风格，虽然事实都对，却不看场合。按之前的人设来说，犬饲虽然有些腹黑，但与人相处还是稍微有些圆滑的。只能说这次的“直言不讳”跟影浦在场有很大关联了，犬饲极力在调和维护自己跟影浦的关系，但这次不幸殃及到了太一身上了。</p>\n<p><br></p>\n<h2>五、“吹牛大王”水上的第一次大危机</h2>\n<p><img src=\"https://pic2.zhimg.com/v2-bdc45d10a3d612960c2f7054b096d27b_720w.png?source=b1748391?rss\" data-caption=\"水上声讨会\" data-size=\"normal\" data-rawwidth=\"399\" data-rawheight=\"327\" data-watermark=\"watermark\" data-original-src=\"v2-bdc45d10a3d612960c2f7054b096d27b\" data-watermark-src=\"v2-fe35fef46edecd972ae670384ec5658a\" data-private-watermark-src=\"v2-62343d8be32fe49c1c4a1fedec2fc92f\"></p>\n<p data-pid=\"Dg3NO-JS\">水上队伍的危机、照屋敏锐的洞察力，我已经说了不下三次了。此次水上险些被戳破漏洞，还是靠水上不太圆滑的危机处理勉强逃过一劫。但也因为这个处理不够圆滑，遭到了大姐头今的训斥。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-2b4e1234347d11da0483e36d67672a37_720w.png?source=b1748391?rss\" data-caption=\"虽然干了坏事，但也知道坏事的后果\" data-size=\"normal\" data-rawwidth=\"614\" data-rawheight=\"511\" data-watermark=\"watermark\" data-original-src=\"v2-2b4e1234347d11da0483e36d67672a37\" data-watermark-src=\"v2-64374126a273117cf285095a25202e46\" data-private-watermark-src=\"v2-62f3cd904b06781766f2a3df874ce284\"></p>\n<p data-pid=\"LEAkVcT8\">水上面对今和荒船倒是直言自己做了坏事，却不愿意将事实拖出，其实也是水上自己对自己的行为有清晰的考虑。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-219a1ae4213f5b07cc36065f8c5aa8a3_720w.png?source=b1748391?rss\" data-caption=\"“完全不对”却“干得漂亮”\" data-size=\"normal\" data-rawwidth=\"598\" data-rawheight=\"248\" data-watermark=\"watermark\" data-original-src=\"v2-219a1ae4213f5b07cc36065f8c5aa8a3\" data-watermark-src=\"v2-8933d1a0835be00576bf74dc5e46287f\" data-private-watermark-src=\"v2-57cdba5be6d75ad38d4020fae42f6ef3\"></p>\n<p data-pid=\"5b-b0Ndr\">一本正经的今、樫尾在这个队伍中确实能给“没有一句实话”的水上做合格的辅助，这也是为什么水上来了一句“完全不对”却“干得漂亮”评价樫尾，荒船资深的带队经验也是这支队伍最大的主心骨。</p>\n<p data-pid=\"J9DXukII\">然而，部分队伍已经看穿了水上的骚操作，因此后续5天的模拟对战，水上也难以再如同第二天一样保持不败，反馈到当日的成绩中，届时照屋还是会质疑水上的行为，荒船和今已经知道水上干坏事了，也不会偏袒水上，所以水上队长的职责危机还会出现，一旦被抓住实锤，水上就容易被正经的队员们孤立了。</p>\n<p><br></p>\n<h2>六、严于律人严于律己</h2>\n<p><img src=\"https://pic3.zhimg.com/v2-f300759db8ba33993b959cba3f77e594_720w.png?source=b1748391?rss\" data-caption=\"你告诉我上面的“顺毛”和下面Q版的“翘毛”是同一个人？\" data-size=\"normal\" data-rawwidth=\"606\" data-rawheight=\"514\" data-watermark=\"watermark\" data-original-src=\"v2-f300759db8ba33993b959cba3f77e594\" data-watermark-src=\"v2-db6d5bb19c1ff0997375cfb6720fe452\" data-private-watermark-src=\"v2-2bf81d5566ad65122fd5733fcfdf7ad4\"></p>\n<p data-pid=\"zgtEp3Xn\">恶鬼副官弓场一板一眼的性格读者们都见识过了，所以看到弓场的表现并不意外，前文就说来马的佛性与照顾别人情绪让队员大受尊重，对较真的弓场来说更像一种责任的托付。读者们意外的是小荒井非触力能体的发型，原本跳脱活跃的小荒井非触力能体居然像个安静的小孩是所有读者都没想到。</p>\n<p><br></p>\n<h2>七、水上的秘密不再是秘密</h2>\n<p><img src=\"https://pic3.zhimg.com/v2-ead9024cdca23a28f10377d792d95eab_720w.png?source=b1748391?rss\" data-caption=\"来自于雀友的察觉\" data-size=\"normal\" data-rawwidth=\"655\" data-rawheight=\"446\" data-watermark=\"watermark\" data-original-src=\"v2-ead9024cdca23a28f10377d792d95eab\" data-watermark-src=\"v2-1b19900cf2e04c053fa47f478503e527\" data-private-watermark-src=\"v2-9b350170c44f690586bc87bd979921a5\"></p>\n<p data-pid=\"TBbcxedn\">其实这个在216-217话中已有暗示，当时修提出水上整齐划一的行动时，诹访已有察觉。（毕竟是一起打麻将的雀友）</p>\n<p data-pid=\"YdA5EUFW\">而这个秘密一旦被识破，其他队伍就会有效仿或针对的方向了，一些队伍可以合理分工，进一步提升获取分数的效率，一些队伍可以反过来针对一个人控制太多战旗的弊端（例如操作员同时兼顾4名防御人员的负担），从而打破水上的不败金身。</p>\n<p data-pid=\"jM0MqjGz\">但这也必须说一句，仅仅1天且对战过一局比赛，就能敏锐觉察到队伍的战术风格，从而推导出幕后的真相，边境的聪明人确实太多了。</p>\n<p><br></p>\n<h2>八、223-234话的预测</h2>\n<p data-pid=\"X4dkv_sC\">到此本话内容结束，细节方面我们一会再说，青稚先对6月号的剧情进行一波猜测。</p>\n<p data-pid=\"ANO-4a3M\">首先，223话肯定会延续本话结尾，将上述水上的做法进行合理的分析利用。</p>\n<p data-pid=\"LHBnaFpr\">其次是220话中导致歌川队落败的若村队已经三话没有出现了，若村队的谜题不比其他队伍少。仅若村队排名垫底，第三天就必须有所调整，加上若村队这场唯一的胜迹就有疑点，若村、休斯、半崎之间隐隐约约存在矛盾伏笔，日佐人情商虽高，却无法照顾到队伍里其他三名成员，若村本人的队长疑云至今也没有解释。作为远征测试选拔重点刻画的队伍之一，连续四、五话不出现是不合清理的，那么223、224话，若村队出现应该是显而易见的。</p>\n<p data-pid=\"B2xr-sSu\">220、221、222话没有出现的北添队估计会酌情在223、224话略有提及，但不一定提及，毕竟北添队的成员目前来讲，笔墨着重在操作员小华上，其他成员在未来未必有很大的影响力，因为我预计只有20%的概率会有北添队的刻画。</p>\n<p data-pid=\"QiNOpuOW\">而内容应该着重在队伍的分工分派上。毕竟经过了2天的磨合，各支队伍也能看出模拟战斗、特别课题才是封闭测试的关键，所以重新分配安排将是223、224的一个看点。</p>\n<p><br></p>\n<p data-pid=\"LWqjhB_r\">本话内容分析与猜测就到此为止，下面还是惯例一些漫画的细节和幽默一刻。</p>\n<h2>九、有趣的细节</h2>\n<p><img src=\"https://pica.zhimg.com/v2-314941522e87ab4150dd56c63420bbdc_720w.png?source=b1748391?rss\" data-caption=\"“知人善用”还是专项补习？\" data-size=\"normal\" data-rawwidth=\"328\" data-rawheight=\"396\" data-watermark=\"watermark\" data-original-src=\"v2-314941522e87ab4150dd56c63420bbdc\" data-watermark-src=\"v2-c59c846e6dce36213ff07f98985c96d0\" data-private-watermark-src=\"v2-63049604d43eee775a32e8e87c33b4d0\"></p>\n<p data-pid=\"l1buMmp7\">1、另一个方面的“知人善用”</p>\n<p><img src=\"https://pic1.zhimg.com/v2-886c5540baf984086f9bf7ee1492a3c6_720w.png?source=b1748391?rss\" data-caption=\"“布布”为赢\" data-size=\"normal\" data-rawwidth=\"647\" data-rawheight=\"340\" data-watermark=\"watermark\" data-original-src=\"v2-886c5540baf984086f9bf7ee1492a3c6\" data-watermark-src=\"v2-22e27c1990a7aa08351e111385448047\" data-private-watermark-src=\"v2-53c7bbe06fe7e60917612e74d8da4b04\"></p>\n<p data-pid=\"rT1JIwHF\">2、战术猜拳</p>\n<p><img src=\"https://pic3.zhimg.com/v2-e0f8ecc6ea107e6a59c40bf000430c49_720w.png?source=b1748391?rss\" data-caption=\"三个感觉派狙击手\" data-size=\"normal\" data-rawwidth=\"325\" data-rawheight=\"275\" data-watermark=\"watermark\" data-original-src=\"v2-e0f8ecc6ea107e6a59c40bf000430c49\" data-watermark-src=\"v2-a893d19b2cb5abd5d5e8d3a5496ea916\" data-private-watermark-src=\"v2-af0efd8b80226df949cab8e5a4f00dac\"></p>\n<p data-pid=\"yFQ9tPYo\">3、白鸟：来自队友的背刺</p>\n<p><img src=\"https://pic1.zhimg.com/v2-ef63bfb1573f70c361a36713faa78cf0_720w.png?source=b1748391?rss\" data-caption=\"徒弟和“徒孙”\" data-size=\"normal\" data-rawwidth=\"646\" data-rawheight=\"233\" data-watermark=\"watermark\" data-original-src=\"v2-ef63bfb1573f70c361a36713faa78cf0\" data-watermark-src=\"v2-4c84b73214597b0697e140fa0a89083d\" data-private-watermark-src=\"v2-4bb1da50f38aa7c2e0b46ba97a687885\"></p>\n<p data-pid=\"nUQPm8DN\">4、第三代徒弟：奥寺；不知道第几代的徒孙：古寺（东-奈良坂-古寺）</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b5728dca0c849563b870ab442f6a7814_720w.png?source=b1748391?rss\" data-caption=\"失去了希望的眼神\" data-size=\"normal\" data-rawwidth=\"645\" data-rawheight=\"283\" data-watermark=\"watermark\" data-original-src=\"v2-b5728dca0c849563b870ab442f6a7814\" data-watermark-src=\"v2-f4b8448593dfd8cfd02719fe2772a9e8\" data-private-watermark-src=\"v2-3421e73366739798fe9d477553f8d1af\"></p>\n<p data-pid=\"3nO7z9d-\">5、备受打击的太一</p>\n<p><img src=\"https://pica.zhimg.com/v2-b88ba83e338d3270b4bd8b2531f149b5_720w.png?source=b1748391?rss\" data-caption=\"我的忍道就是有话直说\" data-size=\"normal\" data-rawwidth=\"495\" data-rawheight=\"411\" data-watermark=\"watermark\" data-original-src=\"v2-b88ba83e338d3270b4bd8b2531f149b5\" data-watermark-src=\"v2-b4841ba0ab4eb3d02d8f097c3d390144\" data-private-watermark-src=\"v2-12bf46dcfb5f2727206fc811332ce3b9\"></p>\n<p data-pid=\"I_Vsq7j1\">6、伤我最痛的人，我还极力维持这段友谊。</p>\n<p><img src=\"https://pica.zhimg.com/v2-34bf10b806ce83e5a274185119db34a1_720w.png?source=b1748391?rss\" data-caption=\"水上模仿秀\" data-size=\"normal\" data-rawwidth=\"611\" data-rawheight=\"390\" data-watermark=\"watermark\" data-original-src=\"v2-34bf10b806ce83e5a274185119db34a1\" data-watermark-src=\"v2-4a8e9523590e6acd3652571cfe99fefd\" data-private-watermark-src=\"v2-f1468550174312d605e7aa8e32c50d5a\"></p>\n<p data-pid=\"JABlGzxd\">7、不愧是生驹的队友</p>\n<p><img src=\"https://pic2.zhimg.com/v2-478794ee6000ddad77b0790665d0b6be_720w.png?source=b1748391?rss\" data-caption=\"一切为了战术\" data-size=\"normal\" data-rawwidth=\"197\" data-rawheight=\"322\" data-watermark=\"watermark\" data-original-src=\"v2-478794ee6000ddad77b0790665d0b6be\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"YLx9pMdQ\">8、战术性干坏事</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c248da148706ecc4fdbaaf5befdd2f61_720w.png?source=b1748391?rss\" data-caption=\"说服我自己\" data-size=\"normal\" data-rawwidth=\"604\" data-rawheight=\"456\" data-watermark=\"watermark\" data-original-src=\"v2-c248da148706ecc4fdbaaf5befdd2f61\" data-watermark-src=\"v2-7ba3a01d2d5c298dee1059f16c8984e6\" data-private-watermark-src=\"v2-19e7aad82a385fc4aa49392644169aa3\"></p>\n<p data-pid=\"U8naOT33\">9、“樫尾，干得漂亮”</p>\n<p><img src=\"https://pica.zhimg.com/v2-48b27c0675e06bed41ae6fbd3dca3d1a_720w.png?source=b1748391?rss\" data-caption=\"别在意，你就是菜\" data-size=\"normal\" data-rawwidth=\"606\" data-rawheight=\"288\" data-watermark=\"watermark\" data-original-src=\"v2-48b27c0675e06bed41ae6fbd3dca3d1a\" data-watermark-src=\"v2-ac01427b62683651dbccddbcc92bd6c7\" data-private-watermark-src=\"v2-0126200e6ab0377688560bf25e9c108c\"></p>\n<p data-pid=\"DJzjzYo7\">10、孩子，瞎说什么大实话呢，面前可是魔鬼副官</p>\n<p><img src=\"https://pic2.zhimg.com/v2-50bea8a78f2a2ef04e455c3d1c078298_720w.png?source=b1748391?rss\" data-caption=\"诹访圈粉（1/1）\" data-size=\"normal\" data-rawwidth=\"343\" data-rawheight=\"291\" data-watermark=\"watermark\" data-original-src=\"v2-50bea8a78f2a2ef04e455c3d1c078298\" data-watermark-src=\"v2-6cb1ad40f81ff08293bea40aa8aa9e85\" data-private-watermark-src=\"v2-d9e126437f6e2d65d9a57b9740ba43b5\"></p>\n<p data-pid=\"L6Pg0mrO\">11、不止修一个有同感，广大的读者也是这么想的。</p>\n<p><br></p>\n<hr>\n<p data-pid=\"Ll-zKpUm\">本话结束，下个月6月号再见。</p>\n<p data-pid=\"Vv0lTnvs\"><sup data-text=\"境界触发者漫画221话\" data-url=\"https://manga.bilibili.com/mc24770/734008?from=manga_detail\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\">[1]</sup><sup data-text=\"境界触发者漫画222话\" data-url=\"https://manga.bilibili.com/mc24770/734009?from=manga_detail\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"2\">[2]</sup></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/qing-zhi-han-bing?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">青稚寒冰</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/525999662/answer/2426086965?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">1 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/34365116?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价《冷面天使》这部漫画？？</a><br><a href=\"http://www.zhihu.com/question/437799299?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价漫画《铂金终局》的结尾?</a><br>\n","link":"http://www.zhihu.com/question/525999662/answer/2426086965?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"化身语音效果最自然的听书工具：Edge 100 稳定版亮点功能速览","date":"2022-04-06 08:00:00","description":"就在上周，微软也正式发布了 Edge 100 稳定版更新，相比前几个以安全更新为主的版本，Edge 100 在移动端和桌面端都带来了不少值得关注的新功能。<a href=\"https://sspai.com/post/72480\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72480"},{"title":"博采众长也不忘初心，笔记+日程管理应用 Agenda 14.0 带来了什么变化？","date":"2022-04-06 06:40:34","description":"公允地说，由于这两年 Notion、Obsidian 等笔记应用，或称知识管理应用的兴起，Agenda 的上述更新很难说得上多么创新。但是，对我这种忠实的 Agenda 用户来说，新补足的功能为这款小而美的应用增加了更多的亮点，让它原本的功用发挥出了更大的价值，日臻完美。<a href=\"https://sspai.com/post/72479\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72479"},{"title":"手中有粮，心里不慌：如何储备自己的物资「大后方」","date":"2022-04-06 03:30:00","description":"生存危机未必只发生在远离文明世界的地方。（各种突发事件）将切断所有的日常服务和食物供应。……在大城市，商店的食品架上将空空如也……公园和花园里的植物皮将会被剥光……（在正常的秩序恢复前）你只有依靠自身 ...<a href=\"https://sspai.com/post/72477\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72477"},{"title":"派早报：WWDC22 将于 6 月 6 日至 10 日举行、Twitter 任命马斯克为董事会成员等","date":"2022-04-06 00:45:27","description":"微软宣布将为 Windows 11 带来多项新功能，五大 Android 应用商店宣布共同推进 64 位应用升级等。<a href=\"https://sspai.com/post/72482\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72482"},{"title":"合上电脑，与三星 DeX 度过一周","date":"2022-04-05 07:00:29","description":"三星 DeX 的产品形态并非首创，但它却是现阶段我们能够用上的、为数不多的移动设备桌面化体验之一——只是在一个分崩离析的软件生态中， 它缺点也被成倍放大了。<a href=\"https://sspai.com/post/72475\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72475"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\n    return new Date(date.toLocaleString('en-US', { timeZone }))\n}\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        timeZone\n    })\n    return {\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\n        convert (date) {\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\n        }\n    }\n}\n\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\n    return converter.convert(new Date(secDate), tzName) - secDate\n}\n\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\ncmn-Hans-SG = 中文普通话-简体-新加坡\ncmn-Hant-TW = 中文普通话-繁体-台湾\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\ncmn = 中文普通话\n\nzh-Hans = 中文-简体\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\n}\n\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long'\n}\nconst now = new Date()\n\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\n\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\n\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\n\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\n\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\n\nzhCNFormatter.format(now) // 2021年10月13日星期三\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\n\njaFormatter.format(now) // 2021年10月13日水曜日\njaAltFormatter.format(now) // 令和3年10月13日水曜日\n\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\n// {locale: 'zh-CN', calendar: 'gregory', …}\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\n     // 基于一个固定日期计算，这里选择 1970.1.1\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\n    const base = new Date(1970, 0, 1).getTime()\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\n    return Array.from({ length: 7 }, (_, day) =&gt; (\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\n    ))\n}\n\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n}).formatToParts(new Date())\n// [\n//     { type: 'year', value: '2021' },\n//     { type: 'literal', value: '年' },\n//     { type: 'month', value: '10' },\n//     { type: 'literal', value: '月' },\n//     { type: 'day', value: '13' },\n//     { type: 'literal', value: '日' },\n//     { type: 'weekday', value: '星期三' },\n//     { type: 'literal', value: ' ' },\n//     { type: 'dayPeriod', value: '上午' },\n//     { type: 'hour', value: '1' },\n//     { type: 'literal', value: ':' },\n//     { type: 'minute', value: '00' },\n//     { type: 'literal', value: ':' },\n//     { type: 'second', value: '00' }\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\n}\n\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\n  timeZone: 'America/Los_Angeles',\n  year: 1995,\n  month: 12,\n  day: 7,\n  hour: 3,\n  minute: 24,\n  second: 30,\n  millisecond: 0,\n  microsecond: 3,\n  nanosecond: 500,\n  calendar: 'iso8601'\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote>\n<p>周六不放假休息，还在这加班搞 CTF？</p>\n</blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/86535/11/24318/75037/622032a8E4f94d4ae/89703ccc122cf4e0.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"从 Google Analytics 的统计代码说起 —— 谈谈 script 标签的 async 和 defer 属性","date":"2020-10-13 09:25:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/80291/2/16552/19311/622032b3Eb300c2aa/66748fc8124a01c5.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/script-async-defer/\">https://blog.skk.moe/post/script-async-defer/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/script-async-defer/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将 […]","link":"https://flyhigher.top/develop/2160.html"}]