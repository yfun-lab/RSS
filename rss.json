[{"title":"演员在塑造一个角色时，如何使角色变得丰满？","date":"2022-12-27 10:46:41","description":"\n<p></p>\n<p data-pid=\"WdisLahl\">大家好，我是雷佳音，也是电视剧《人世间》中的“老疙瘩”周秉昆。感谢大家对《人世间》的喜爱，也非常感谢大家喜欢老疙瘩。</p>\n<p><img src=\"https://picx.zhimg.com/v2-b23ea143c87ac934ea937466a99e2877_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1920\" data-watermark=\"original\" data-original-src=\"v2-b23ea143c87ac934ea937466a99e2877\" data-watermark-src=\"v2-533b01d77e1555db5a1fa87b1561d432\" data-private-watermark-src=\"v2-c9ec3d43100f93dd97dba46ae92a7b0f\"></p>\n<p><br></p>\n<p data-pid=\"uPsFYAab\">塑造「周秉昆」这个角色的过程，还算是比较顺利的。我是东北人，而且周秉昆几乎和我父亲是同年生人，戏里好多角色我脑袋里打小就有原型，一看就知道，哎，这不就谁谁谁。有时候一边演着一边就会想，这场戏要是发生在真实世界的这一边，我父亲那辈人一起坐在小酒馆里喝酒聊天，会是什么样的情景。</p>\n<p data-pid=\"rs0SRYfN\"><br>当然演这个角色也有困难的地方，因为这个戏时间跨度特别大，我要从20岁演到60岁。青年、中年、老年，这三个阶段的表演难度是不一样的。刚开始演的时候我老跟宋佳开玩笑说：“姐，咋整？40岁了往这儿一站，演年轻也不像，演年老也不像。”</p>\n<p data-pid=\"gzaEokeG\"><br>到底怎么能把这个人物的变化演活，让观众相信，这个是需要我去琢磨的。所以我从一些比较细节的人物状态上去想办法，青年时期的秉昆老是戴一顶雷锋帽，我就按自己的尺寸选小了一号。原本两头耷拉着的雷锋帽，就直挺挺地竖着，“老疙瘩”的形象一下就变得很俏皮，有一种玩世不恭的喜剧感。我小时候就这么戴雷锋帽，出来的效果剧组都觉得行，大家也乐得不行。</p>\n<p data-pid=\"5wPrcDXf\"><br>除了从细节上寻找人物状态，我也会去思考这个人物在文本之外的角色逻辑。在看剧本的时候我就有一个疑问：周秉昆一开始看枪毙罪犯的现场都能晕倒，应该是一个胆小的角色，但在计划经济年代，他说辞职就辞职，对和郑娟的感情完全不惧世俗眼光。我当时想，他是什么样的存在呢？带着这个思考我抓住了周秉昆对待人生「以不变应万变」的方式，以此来处理很多细节。</p>\n<p data-pid=\"tuIwiGJB\"><br>在表演的时候和对手碰撞出的化学反应，也会给人物增添很多色彩。戏里其实我和宋佳对手戏的词儿很少，但我俩是特别熟的老朋友了，经常就会有一些互相调侃的即兴情节。比方宋佳说：“你怎么最近胖了呢？”“你是不是哭一路，脸都哭肿了？”这些看似没用的玩笑话其实提供给观众很多信息量和维度，一准能联想到姐弟俩小时候肯定没事就打打闹闹。还有大家很有共鸣的「穿姐姐红毛裤」这个情节，也是我和萨日娜老师在对词的时候即兴出来的，最后出来的效果确实很好。</p>\n<p data-pid=\"BvnJ8tnO\"><br>其实对一个角色的创作首先是要贴合戏的风格，从戏的色彩基调去揣度自己的表演尺度。塑造人物时，以人为基础，演起来手段就会比较多。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/lei-jia-yin-gong-zuo-shi?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">雷佳音工作室</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/569975711/answer/2818383417?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">3 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/569975719?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">演员在塑造一个角色时，如何使角色变得丰满？</a><br><a href=\"http://www.zhihu.com/question/574571201?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">演员应该如何塑炼好一个角色？</a><br>\n","link":"http://www.zhihu.com/question/569975711/answer/2818383417?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"演员是如何训练自己眼神的？","date":"2022-12-27 10:38:36","description":"\n<p data-pid=\"OnEHv_k8\">大家好，我是陈晓，很幸运今年有多部作品和观众见面，也很感谢大家对我表演作品的喜爱、关注和评价。<br>关于演员如何训练自己的眼神，我觉得一个演员对角色的理解和诠释，跟他的成长轨迹和年龄是有挂钩的，不同年份拍出来的作品也会有不同的变化。有时候情感的变化不仅可以通过台词和动作表现出来，也可以通过眼神传达出来。而眼神戏的部分也可以让大家感觉出角色情感和当下人物情绪的变化，后期观众在看剧的时候能感受到那种氛围感。<br>《梦华录》中，其实是杨阳导演特别会捕捉演员的情绪，在实际拍摄的时候其实我并没有很多的诀窍和心得，也没有刻意去做眼神练习，导演在拍摄现场给了大家一个很自由的创作空间，不管是道具、服装、情景、氛围等都很贴合剧情，在那样的创作空间里很容易让人融入到剧中的情节当中，所以表演起来就很顺畅，很舒服，很真实。<br>导演经常跟我们说“你心里是怎么想的，就跟着当时的状态去演，比较轻松的去演，不要有顾及的去演就行，我的机器能够抓到你的小细节。”就这样很多细节、不经意之间的反应，更自然的被导演捕捉到。然后再通过后期剪辑合成最后呈现给观众，让观众觉得有一种氛围感。<br>2022年相继播出了《好好说话》，《梦华录》、《冰雨火》，顺利完成了《人生路遥》，《尘封十三载》的拍摄工作，对我来说是一件很幸运的事情。演员拍戏有时候当下是看不到最终效果的，播出后会有惊喜，能让更多的观众看到并且喜欢，挺开心幸运的。<br>最后，我希望大家都可以遇到喜欢的、愿意去投入自己所有精力去做的事情，但同时也不要给自己过多压力，有时候顺其自然也会有意想不到的收获</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/49-11-65-31?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">陈晓工作室</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/571877972/answer/2818390104?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">25 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/266327067?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">演员是如何训练自己的眼神的？</a><br><a href=\"http://www.zhihu.com/question/26224919?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何练就演员一样的眼神？</a><br>\n","link":"http://www.zhihu.com/question/571877972/answer/2818390104?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"究竟是演员成就了角色，还是角色成就了演员呢？","date":"2022-12-27 10:37:50","description":"\n<p data-pid=\"jVb6h3Jq\">对于我而言，我觉得是互相成就，演员演好了一个角色，角色同样也会回馈这个演员。</p>\n<p data-pid=\"1w8WEfnu\">先说角色带给我的，其一是，演这个角色会让我很过瘾，就是很通俗的过瘾，我因为喜欢，选择了这个剧本这个人物，在整个拍戏阶段，沉浸式感受着他的人生经历，他的性格，他的情绪，这种体验对于我来说，是很重要的一点。</p>\n<p data-pid=\"jICqw0a9\">其二是，我塑造的每一个角色，都带给了我不同的机会，也让我有了更多选择。比如我拿沈翊举例子，演完《猎罪图鉴》之后，这部作品被很多人看见了，被大家认可了，也让业内一些前辈看到了我，我可能也会多一些角色的选择权，我的工作机会也随之变多。</p>\n<p data-pid=\"S0s3igIV\">当然，角色带给我更重要的是：观众。演员嘛，每一部作品，最终都要拿到观众面前检验的，你演的好不好，用不用心，观众一眼就看出来了。所以一部作品，一个角色，能得到观众的认可，观众看到你会说“这不是演谁谁谁那个人吗？”，这是角色给予我最好的回馈。</p>\n<p data-pid=\"H6YX8E_k\">沈翊之前，我其实也演过很多的角色，那个时候，我好像离“我是一个演员”很近，演了一部又一部的作品；又好像很远，能被大家记住的角色不多。即使到今天，可能依旧有很多人不认识我，但我依然很感恩每一次机会，感谢每一个角色，他们都是刚刚好的，是丰满我自己的重要一环。</p>\n<p data-pid=\"f_Us4ocy\">在我的认知里，演员是要服务于角色的，所以必须要时常保持学习和思考的能力，才能更加完美的演绎出一个鲜活的角色，尽自己最大的努力，不断进步，用影视作品中无数个3-5分钟的累积，让大家可以更加纯粹的感受由我演绎的角色魅力。把白纸黑字上面描写的文字，变成一个活生生的人呈现给大家，让大家看完以后，不管是带来什么样的情绪，开心的也好，难过的也好，能够丰富观众的生活，我觉得这是我应该做的事情。</p>\n<p data-pid=\"tg6JdgpV\">我要赋予角色灵魂，赋予是我这个工作的职责所在。感谢知乎对我的认可，新的一年，我也会努力拍更多好的作品，带着不同的角色走到观众的面前。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/kami-37-8?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">檀健次</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/571388954/answer/2818378206?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">63 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/309367961?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">观众夸演员演得好，会说他成就了这个角色，真的是这样吗？演员的演技能在角色的成功能占多少分量？</a><br><a href=\"http://www.zhihu.com/question/282837625?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">到底是角色成就了演员，还是演员演活了角色？</a><br>\n","link":"http://www.zhihu.com/question/571388954/answer/2818378206?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"不读可以先收藏：2022 少数派年度高分内容「合订本」","date":"2022-12-27 09:30:00","description":"希望来年大家一如既往，在数字世界里看清真相，更要于忙碌生活中照顾好自己。<a href=\"https://sspai.com/post/77488\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77488"},{"title":"我的文科转码之路：入门新领域的思路与方法","date":"2022-12-27 06:42:16","description":"编注：作者为香港大学计算机学院硕士，目前是区块链开发从业者。以前并不算是一个很崇尚各种学习方法论的人，对这种「如何」体也比较无感，总觉得学习是一件很因人而异的事，常常固守着自己原本的习惯与方法。发生转 ...<a href=\"https://sspai.com/post/77485\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77485"},{"title":"本月玩什么 | 巫师 3 次世代版、极品飞车 不羁、木卫四协议","date":"2022-12-27 03:30:00","description":"最近值得一玩的新作推荐。<a href=\"https://sspai.com/post/77477\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77477"},{"title":"如何评价十月新番动画《孤独摇滚》最终回第十二集，以及整个作品？","date":"2022-12-27 02:56:54","description":"\n<p data-pid=\"zxkLwqxh\">1）在Cloverworks的故事里，我们总能找到关于“厨力”的蛛丝马迹。</p>\n<p data-pid=\"2zLAHsVN\">其实整个企划的源头是片场制作人梅原翔太与《孤独摇滚》人设けろりら（后称krrr）闲聊，得知krrr非常喜欢《独孤摇滚》这部漫画作品（和作品中的喜多，后来的故事我们都知道了），才找到Aniplex企划方，得知Aniplex正好接到了芳文社改编《孤独摇滚》的企划需求，然后才有Cloverworks梅原班接到这部作品的改编权。krrr厨这部作品厨到什么程度呢？OP一人修正（当然堀口应该是没修）、人设总作画监督、每一话的原画、ep10的剪辑，第12话Live喜多部分应该全是krrr一人完成的……也就是说，如果在《孤独摇滚》里面选择一个人作为最大的功臣，那毫无疑问是krrr。</p>\n<p><img src=\"https://picx.zhimg.com/v2-4e2b15c5496c05d60f3f08e0c1296e40_720w.jpg?source=b1748391?rss\" data-caption=\"OP中堀口负责的卡，没错，就是前京都动画那个堀口\" data-size=\"normal\" data-rawwidth=\"2560\" data-rawheight=\"1440\" data-watermark=\"original\" data-original-src=\"v2-4e2b15c5496c05d60f3f08e0c1296e40\" data-watermark-src=\"v2-26c8d2175aa442ce4857663192040427\" data-private-watermark-src=\"v2-4f2efd0d1f7ac2949900fb4674dd0046\"></p>\n<p data-pid=\"Z4397byT\">2）krrr是第一次担任TV动画人设，而斋藤圭一郎是第一次担任TV动画的监督。作为业内备受期待的新人，圭一郎成为监督只是时间的问题。但是我们很难找到一个比《孤独摇滚》更为契合圭一郎的作品，作为他的出道作与代表作了；即便，明年，圭一郎还会担任另一部TV动画的监督。</p>\n<p data-pid=\"Dcf_eDtU\">圭一郎作为原画就经常喜欢“漫符”来展现段落的“立体性”和“冲突感”，也喜欢用广角镜头来呈现氛围。我想我说到这就不需要一一列举《孤独摇滚》与圭一郎的合适了。你随便在你QQ和微信的表情包里，随便找个关于“波奇酱”的表情，就应该知道我要说的意思。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6f50450e4d4e0812a57ed932ba3b3a85_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"430\" data-rawheight=\"233\" data-watermark=\"original\" data-original-src=\"v2-6f50450e4d4e0812a57ed932ba3b3a85\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"BDzxGekc\">这么做的处理一方面要展现作品的“气质”，因为原作本身就是充满欢乐、逗比气氛的作品；另一方面则是要规避一些问题，这个事情是我一个很厉害的群友指出的，我只是转述一下（当然，我非常认同这个观点），就是如果没有演艺的话，<b>波奇大概是辨识度极差的女主角，甚至纵观这几年的动画都极为罕见，如果你拿下来那蓝黄色的发饰那就更惨了。</b></p>\n<p data-pid=\"kAvYZOQy\">当然，最后，这个制作方针取得了非常好的效果。波奇酱“发癫”的部分，也是给原画充分发挥的部分，比如第七话五十岚海负责的“火烧魔女”的桥段、第八话滨口明负责的“社畜喝酒”的桥段，这些都是作品非常出彩且有记忆点的部分。</p>\n<p><img src=\"https://picx.zhimg.com/v2-fd76093522b7b1dc930799e2bce652e0_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"360\" data-rawheight=\"202\" data-watermark=\"original\" data-original-src=\"v2-fd76093522b7b1dc930799e2bce652e0\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"KkjZkW3-\">3）当然，我依然认为有很多部分，梅原班陷入了一种“路径依赖”，就是在一些没有必要参考的部分、甚至是非常容易展现作品“动画性”的部分，用了太多的“参考”（不完全是“转描”的意思），比较典型的就是播完疯传的“虹夏摆手”，如果那个部分不使用参考而是凭借画师的想象力和作画力来展现出来，恐怕效果会更好一些。</p>\n<p data-pid=\"yLDVBC0Q\">器乐演奏的部分也是。我不是说器乐演奏不应该转描，我反倒认为主要展现出来器乐演奏的指法是必须要依托于转描的。我只是思考就前两次Live“乐手演奏-动作捕捉-建模-描建模”这样的创作方式是否有“必要”。就事后的讨论来看，像“3D僵硬的木偶感”这种比喻并不少，而像以往单纯的“演奏-录视频-秒视频”是否能让衣服的褶皱看起来更为自然？</p>\n<p data-pid=\"jK8oBRL1\">我不知道，说实话我也不是作画爱好者，我对技术的兴趣仅仅是流于表面罢了。我只是觉得这些都是值得讨论的。至少《孤独摇滚》这样备受好评的作品能够抛出来这些问题，是非常“安全”的。</p>\n<p><img src=\"https://pica.zhimg.com/v2-3896b673f75663c026628d44b9a9c8d5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"791\" data-rawheight=\"611\" data-watermark=\"original\" data-original-src=\"v2-3896b673f75663c026628d44b9a9c8d5\" data-watermark-src=\"v2-c82cbe684b2a90b94e710cbda4b7649e\" data-private-watermark-src=\"v2-65233f0a663105b5ba5a8eedc2f9668a\"></p>\n<p data-pid=\"jsaTDgz0\">4）最后，我还是要说出来我对《孤独摇滚》的不满，基本跟动画制作组没有一毛钱关系，最大的问题还是——</p>\n<p data-pid=\"yKhxM4bC\">索尼音乐（SME）。</p>\n<p data-pid=\"o9JZjKMJ\">这个我也发了想法，附上我在豆瓣上短评的截图。</p>\n<p><img src=\"https://picx.zhimg.com/v2-06454896340d5d53ffbf03556a699f23_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1376\" data-rawheight=\"766\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"-Nfk9K6l\">简单来说，我不认为索尼这种大型音乐发行商会有“独立”精神的，独立音乐这个概念就是与大型音乐发行商完成分化而诞生的。</p>\n<p data-pid=\"Yeahwegk\">《独孤摇滚》是四个女孩子一起成立独立乐队在小型Live House逐渐成型的过程。作为任何一个独立乐队，如何找好他们所喜欢的Genre（就像她们参观酒鬼贝斯手乐队玩迷幻一样，当然我不认为那首歌是迷幻）、进而去发力。在原作中也提到了山田凉想要做EMO（情绪硬核）。但作品最后的呈现，是找了索尼旗下厂牌几个乐队的创作者，一人写了几首歌，然后糅合在一起。</p>\n<p data-pid=\"zgu-XLa7\"><b>这些音乐没有情绪的主轴、没有乐队的“精神”、没有乐队想要做的音乐</b>，有的只是“好听”罢了。但如果想要追求“好听”，我们又何必去欣赏摇滚呢？</p>\n<p data-pid=\"rFXNTEOU\">可悖论就是，任何一个独立厂牌不会投资一款动画、芳文社大概也不会让自己原作受众极其固定的动画改编作品冒多少险。这就是现实。我倒不是苛责索尼音乐，你要知道我对于Aniplex的社长岩上敦宏有着极高的评价；只是当下环境，如果想要触碰真正的独立精神，恐怕动画就体量而言还需要进一步扩大。</p>\n<p data-pid=\"4KTcAJ1_\">最后，《孤独摇滚》是一个值得欣赏的动画，是一个值得反复回味“演出”（当然你有认为“过度”的权利）的动画，也是一个值得只图一乐的动画。四个声优，尤其是波奇CV的青山小姐、主要的Vocal长谷川小姐，表现都出乎意料的好。</p>\n<p data-pid=\"q27reS4Z\">我也相信第二季也是时间的问题。</p>\n<p><img src=\"https://pica.zhimg.com/v2-275ef7ab6e301972d3b28246a925351e_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"360\" data-watermark=\"original\" data-original-src=\"v2-275ef7ab6e301972d3b28246a925351e\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/fcukdk?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">一山同学</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/574390453/answer/2815697680?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">64 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/572935188?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价十月新番动画《孤独摇滚》第十一集？</a><br><a href=\"http://www.zhihu.com/question/567665727?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价十月新番动画《孤独摇滚》第七集？</a><br>\n","link":"http://www.zhihu.com/question/574390453/answer/2815697680?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：红魔 8 Pro 系列发布、荣耀发布 80 GT 等","date":"2022-12-27 01:01:33","description":"全新的 QQ for Linux 版现已发布，和包全国通行卡可使用 Apple Pay 快捷交通模式等。<a href=\"https://sspai.com/post/77478\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77478"},{"title":"派评 | 近期值得关注的 App","date":"2022-12-26 09:58:51","description":"你可以通过文章目录快速跳转到你感兴趣的内容。如果发现了其它感兴趣的 App 或者关注的话题，也欢迎在评论区和我们进行讨论。<a href=\"https://sspai.com/post/77473\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77473"},{"title":"更换 Apple ID 后的资料备份与迁移，我是这样做的","date":"2022-12-26 06:40:10","description":"尽管在迁移 Apple ID 前做了不少功课，但我仍然遇到了不少问题以及遗憾。在这篇文章中，我整理了迁移 iCloud 帐户涉及的主要项目及对应方法，以供参考。<a href=\"https://sspai.com/post/77458\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77458"},{"title":"动画《一人之下》第五季正在热播，有哪些值得关注的点？","date":"2022-12-26 05:57:12","description":"\n<p data-pid=\"3-T1DdK4\">感谢主办方邀请~作为宝儿姐的配音，替宝儿姐来回答一下，咳咳。</p>\n<p data-pid=\"Rtx8qlou\"><b>1、宝儿姐在这一季中有没有get到什么新技能？</b></p>\n<p data-pid=\"gBXfmHsl\">当然有啦！这一季到这周为止播了4集，宝儿姐只出场了一集，但在这短短一集里，已经初步展示了<i>入室绑人</i>、<i>顺手牵如意</i>、<i>自制燃烧瓶</i>、<i>放火烧房子</i>等等专（wei）业（xian）技（xing）能（wei），怎么说呢，属于是知识面特别广，动手能力又强，谁看了不说一句「不愧是你」呢？（但小朋友们千万不要模仿哦~</p>\n<p data-pid=\"TEydzZh9\"><b>2、第五季配音过程中，有没有遇到什么挑战？</b></p>\n<p data-pid=\"iUdxOUan\">宝儿姐一向话不多，经过前面几季的录制，尤其是我们已经有了一位固定的四川话方言指导，每次都可以在现场示范，教学配音本身没有太大的困难了，真要说的话，就是前段时间生病，嗓子也有好多天没办法工作，所幸已经恢复了，没有影响第五季的录制！</p>\n<p data-pid=\"jgQBNV3P\"><b>3、有哪些想对陈朵说的话？</b></p>\n<p data-pid=\"7hqW8q12\">陈朵，很高兴认识你，很遗憾是在这样的情况下认识你。或许你觉得自己没办法做个正常人，但宝儿姐、张楚岚、王震球、肖哥、黑管、二壮...甚至包括陈俊彦，他们在别人眼中也是不正常的，你不是孤单的一个人。你要相信，不管你做出什么样的选择，都有人会理解和支持你，不管你选择走哪条路，都有人会陪你走完这一程。虽然我们还是会觉得惋惜，但最终，你是快乐且满足的，就够了。</p>\n<p data-pid=\"VAdOJavj\"><b>4、有什么想对宝儿姐粉丝说的？</b></p>\n<p data-pid=\"pYdrxkYE\">感谢作者米二创造出了这样的宝儿姐，作为宝儿姐的配音兼粉丝，很开心能跟大家一起感受宝儿姐、爱宝儿姐，也欢迎大家在各个平台一起探讨哦。</p>\n<p><img src=\"https://picx.zhimg.com/v2-ccce3330e8e1957bc33d3754bfe3eb6b_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"1505\" data-rawheight=\"1055\" data-watermark=\"watermark\" data-original-src=\"v2-ccce3330e8e1957bc33d3754bfe3eb6b\" data-watermark-src=\"v2-f26ec0d1af0b34d2a96fa4a6b61565fd\" data-private-watermark-src=\"v2-d892f92959ddba58058249339ec08d13\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/mi-qi-xiao-lian-sha?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">米琪小连杀</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/574113171/answer/2816043445?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">33 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/369447503?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《一人之下》有第三季吗？</a><br><a href=\"http://www.zhihu.com/question/460329560?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">你对《一人之下》527（559）话的预告内容有什么看法？</a><br>\n","link":"http://www.zhihu.com/question/574113171/answer/2816043445?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价手绘风格独立游戏《失眠》？","date":"2022-12-26 03:27:48","description":"\n<p data-pid=\"x40V9H9F\">Hi~，我是“完美的一天”工作室，《失眠——脑子里的剧场》的制作人，Keke。</p>\n<p data-pid=\"Cnv2ZWne\">《失眠》发售了有一周了，陆续把成就卡牌和一些优化更新好啦，终于能静下心来聊一聊了。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-fbfa028f459e83cc7ffd291312486081_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3012\" data-rawheight=\"1076\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-fbfa028f459e83cc7ffd291312486081\" data-watermark-src=\"v2-0f8d6bd44d93856db13626d6f36c320a\" data-private-watermark-src=\"v2-865d97206fc4dfd204866868b12ea0b7\"></p>\n<p data-pid=\"i-qeUvW3\">其实不太知道该怎么评价自己的游戏，我并不擅长用语言表达自己，所以会更多的把表达欲倾注在自己的画中、粘土中、木雕中……而这次它们凝聚在“游戏”这个载体中，成为了我的《失眠》。</p>\n<p data-pid=\"pHtC3C5s\">我的睡眠质量一直不太好，经常性失眠。和游戏里的一样，躺在床上总是不合时宜的一会纠结过去，一会害怕未来，但凡当天说错了什么话，或者第二天有什么活动，这一晚脑子就别想清净了。就像有个剧场扎根着，幕布一拉开，小小的空间里挤满了后悔和焦虑。而想到能把这些念头做成一个游戏，也正来自于一场失眠。</p>\n<h2>【后台 准备】</h2>\n<p data-pid=\"lPFjuw4L\">和《完美的一天》一样，《失眠》最初也来自于一次Gamejam，但不同的是，我从一个听故事的人变为了一个讲故事的人。</p>\n<p data-pid=\"JGcDb8tx\">《完美的一天》的开始是由邓卜冉找到我，被他诉说的故事打动，一拍即合完成了那次Gamejam的demo。我便作为主美，之后又加入老葛来做主程，开始了《完美的一天》的旅途。</p>\n<p data-pid=\"W18Faj2k\">当第二次Gamejam时，我因为随口说了句“要不这次我自己做个小游戏？”而获得了他们几个窒息般的期待。就像我游戏里说的，我想做新尝试，又想得到认可，我不想别人对我失望，又不想失去自己……当晚就陷入了这无尽的矛盾和纠结，便又，失眠了……</p>\n<p data-pid=\"81xu50CC\">直到鸟开始鸣叫，阳光从窗帘的缝隙里爬了进来，我才发现这痛苦的“失眠”其实也是我的一部分，都存在了，不如就把它做出来好了。顺着这个念头，之后就找老葛作为程序，和他两人完成了那次的demo（此demo作为了闪卡奖励置入了《完美的一天》里）。</p>\n<p data-pid=\"jShR8kjp\">从那时候开始，我的手机里就建了一个备忘录，记录着每次失眠脑子里的画面，记些关键词，记些碎片。而绝大部分都呈现在了之后的游戏中。也在今年下半年和老葛两人继续合作，开始了《失眠》的旅途。</p>\n<p><img src=\"https://pica.zhimg.com/v2-ca4a25be21c33843904d7ad99af77d23_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1500\" data-rawheight=\"987\" data-size=\"normal\" data-caption=\"失眠灵感记录\" data-watermark=\"watermark\" data-original-src=\"v2-ca4a25be21c33843904d7ad99af77d23\" data-watermark-src=\"v2-6fef4c114813f365cbb8dbff83c8fbb7\" data-private-watermark-src=\"v2-3a4036cff01c2bab9def4619cf4680c4\"></p>\n<h2>【幕布 拉开】</h2>\n<p data-pid=\"VqsBS7gg\">说实话第一次做制作人，对我来说面对的所有，都是挑战。过程中充斥着焦虑，自我怀疑，以及更多的不眠夜。</p>\n<p data-pid=\"FGu8qCvw\">然而表达欲始终推着我往前走，去做哪些从未做过的事。试着构思每一幕的关卡，试着撰写角色间的对话，试着完整游戏的故事，试着在unity里做动画，试着找合适的参考音乐，试着去安排整个进度……当真正的做了起来，将它们一一实现的时候才发现，它们之间其实没有界限，有的只是“把它做好”这同一个目标。</p>\n<p data-pid=\"U-9EWq20\">当然除此之外也缺不了团队内的支持，总被我拖着加班到零点的老葛（本来不失眠，做《失眠》后开始失眠……），还有全程力挺我的老邓和星星狗，他们不止帮我了很多忙，最重要的是他们在我怀疑自己的时候给予了我很多力量。</p>\n<p data-pid=\"JNlf5Vrd\">也是这半年多的过程，让我对游戏这个媒介有了些更多的认识，它能够让我的表达不只是我自己的表达，它帮助我和玩家之间搭了一座实实在在的桥，能让我亲手把画笔送到大家手中。</p>\n<p data-pid=\"RYzDGiOo\">今年是很艰难的一年，第二幕的表现也是我今年大多数失眠的源头，如果我的游戏能引起共鸣，那也希望这场演出最后能传递出一丝治愈和力量。</p>\n<p data-pid=\"DuDVT-6V\">而其他想说的，想表达的，也都在游戏里了。</p>\n<p><img src=\"https://picx.zhimg.com/v2-60183fec0e690c5bc85dec88096c1482_720w.jpg?source=b1748391?rss\" data-rawwidth=\"2397\" data-rawheight=\"1230\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-60183fec0e690c5bc85dec88096c1482\" data-watermark-src=\"v2-bcf8e1c3d806f2d295c5a895d4237cda\" data-private-watermark-src=\"v2-e7105ee0162f62c635e1c60dd2192400\"></p>\n<h2>【演出 继续】</h2>\n<p data-pid=\"XQQOy2UW\">直到现在，我还是会看着steam的评论恍惚，有的像是面镜子，互相共情看到了自己；有的像杯热饮，带着绵绵的热气；有的像一双大手，捧起了我的小心思……</p>\n<p data-pid=\"GlRlzqtN\">这种感觉很奇妙， 我因为失眠而想做《失眠》，也伴随着失眠完成了《失眠》，但在发售日的当晚看着大家在评论里留下的那些温柔，挂着泪，安然入睡。</p>\n<p data-pid=\"WqEW8C9i\">当然，天依旧会亮起，我们也会继续为下一个作品而努力，因为我们逐渐知道了，我们要去的，是哪里。</p>\n<p><br></p>\n<p data-pid=\"LAx-7VcF\">再次万分感谢各位玩家，感谢你们花时间来体验我的这个小小作品，感谢所有的支持和所有的喜爱。</p>\n<p data-pid=\"aSEAVkkV\"><b>祝各位，安眠入睡</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-bc3c21583fe8aa3290cbbffdb1b38aec_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3840\" data-rawheight=\"2160\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-bc3c21583fe8aa3290cbbffdb1b38aec\" data-watermark-src=\"v2-84890e16e83904f8e6ad3a929f4c37d6\" data-private-watermark-src=\"v2-7fe57007d0af08c7db1a7590cbeacefe\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/kook-59-80?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Kook.KE</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/572491736/answer/2813593969?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">10 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/562575020?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">你觉得《失眠》这款游戏的独特美术设计怎么样？</a><br><a href=\"http://www.zhihu.com/question/562575208?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">游戏《失眠》的故事背景设定是怎样的？</a><br>\n","link":"http://www.zhihu.com/question/572491736/answer/2813593969?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：魅族发布 M3 Pro 播放器，加州新法将禁止特斯拉使用 FSD 名称等","date":"2022-12-26 01:01:28","description":"你可能错过的新鲜事魅族发布M3ProHi-Fi播放器12月23日下午，魅族科技召开魅友大会，活动期间发布了型号为M3Pro的「全场景Hi-Fi播放器」。据介绍，该产品搭载魅族定制的H1Hi-Fi解码芯 ...<a href=\"https://sspai.com/post/77460\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77460"},{"title":"App+1 | 有声有色有形，为 Android 本地音乐播放增味：椒盐音乐","date":"2022-12-25 09:50:14","description":"椒盐音乐或许是一款各个方面都能对你胃口的本地音乐播放器——无论是 UI 设计、使用体验还是丰富的音乐播放功能。<a href=\"https://sspai.com/post/77446\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77446"},{"title":"除了成为马桶里的惊吓，红心火龙果真的是「通便神器」吗？","date":"2022-12-25 07:00:00","description":"祝大家肠道健康。<a href=\"https://sspai.com/post/77457\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/77457"},{"title":"动画《一人之下》第五季正在热播，有哪些值得关注的点？","date":"2022-12-24 13:39:03","description":"\n<ol><li data-pid=\"ZOPdLd3Z\">第五季楚岚内心戏更加丰富了，在角色刻画时有没有遇到难题？</li></ol>\n<p data-pid=\"k2OQeN4Z\">第五季了，随着故事的推进，楚岚也在“长大”，人在事中成长，而不同环境的故事，不同“篇”“季”的故事，我感受到了风格跟形式也在成长，如何在这些变化中寻求平衡完成各阶段的任务，是我和楚岚一直都在面临的问题；难题让人“兴奋”，攻克难题更加让人兴奋！若是在攻克各种难题的进程中能交到朋友，就是更加让人兴奋的事情了！欢迎大家指教，谢谢各位朋友的帮助。</p>\n<p data-pid=\"TULuaeQ2\"> 2. 浅谈一下您对第五季中张楚岚这个角色的理解吧～</p>\n<p data-pid=\"8Yby1bhn\">异人是普通人中的异类，临时工是公司中的异类，新截教，陈朵，更是异类中的异类，“异类”终归也需要同类；大千世界，生存不易，生活更加不易，宝儿姐是“我”的同类，希望异类看在同为异类的份上，能拉同类一把，人，毕竟是社会性动物，抱团取暖，生存容易点。这一季的主题，依旧是生存；阴阳相参，降猿勒马，向着“光”，争一线生机。</p>\n<p data-pid=\"xCiVKwkE\"> 3. 最想对一直以来支持、喜爱张楚岚的粉丝们说什么？</p>\n<p data-pid=\"b-xzaAQx\">二爷绘出了楚岚，我也超级喜欢，我觉得大家一定都是善解人意温柔无比的小可爱，如果我这版楚岚也能得到大家的喜爱，我超级开心～～～鞠躬～～～</p>\n<p><br></p>\n<p><br></p>\n<p data-pid=\"KPu1pS5M\">                                              夏侯落枫</p>\n<p data-pid=\"B1J4x8iq\">                                              壬寅年腊月初一</p>\n<p><br></p>\n<p><br></p>\n<p><br></p>\n<p><br></p>\n<p data-pid=\"KoI7d14O\">最后最后</p>\n<p data-pid=\"TG3EobU3\">草稿一张</p>\n<p data-pid=\"vIy3-aLI\">字丑莫怪 </p>\n<p><img src=\"https://picx.zhimg.com/v2-a9e363495b2aea1c47c92011f13f511d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3024\" data-rawheight=\"4032\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-a9e363495b2aea1c47c92011f13f511d\" data-watermark-src=\"v2-b0aa8a7f70baea5ab64a42e5fd5106e2\" data-private-watermark-src=\"v2-52d09094d619c592428accb0fed959c9\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/xia-hou-luo-feng-85?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">夏侯落枫</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/574113171/answer/2813628130?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">33 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/369447503?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《一人之下》有第三季吗？</a><br><a href=\"http://www.zhihu.com/question/460329560?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">你对《一人之下》527（559）话的预告内容有什么看法？</a><br>\n","link":"http://www.zhihu.com/question/574113171/answer/2813628130?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价动画《大理寺日志》第二季第七集？","date":"2022-12-24 13:36:36","description":"\n<p data-pid=\"NN37_FJS\">大家好我是大理寺日志的导演槐佳佳。如何评价大理寺已经更新到第七集了，很感谢喜欢好传喜欢大理寺的观众们一路的支持与反馈。</p>\n<p><img src=\"https://pica.zhimg.com/v2-b152b0bdd869230743789b774d26145c_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2388\" data-rawheight=\"1668\" data-watermark=\"watermark\" data-original-src=\"v2-b152b0bdd869230743789b774d26145c\" data-watermark-src=\"v2-286f0e4691bca4c2f9007164d1df7e9d\" data-private-watermark-src=\"v2-e70306edb1a9fe8ecf4a23a5de2c56b0\"></p>\n<p data-pid=\"UCV5zxoh\">上周在说第六集的时候我有带过一句（剧情已经走上了高速），其实并不是说某个人物落难或者是某个人物下线了才是所谓的剧情高速。</p>\n<p><img src=\"https://pica.zhimg.com/v2-855f407ad9c11f56b9018ec47da27840_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2388\" data-rawheight=\"1668\" data-watermark=\"watermark\" data-original-src=\"v2-855f407ad9c11f56b9018ec47da27840\" data-watermark-src=\"v2-8389b5eb0bec843c66df8fc9dd968cc0\" data-private-watermark-src=\"v2-cf771a71f4be2a67966e22df4cb217e7\"></p>\n<p data-pid=\"5gqjJ21T\">第二季整体基调的沉重与第一季的轻快形成了对比，为此有很多观众是有点接受困难的，毕竟第一季给大家带来的感觉是大唐公务员日常轻松搞笑番的感觉。我想借着答题的机会再次重申一下，大理寺它其实并不完全是一部搞笑番剧，它也是充斥着权谋斗争，古代阶级的明争暗斗的。</p>\n<p><img src=\"https://picx.zhimg.com/v2-1719696df856634a04a1a67560819020_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2388\" data-rawheight=\"1668\" data-watermark=\"watermark\" data-original-src=\"v2-1719696df856634a04a1a67560819020\" data-watermark-src=\"v2-41fcb9d5e3dcd5f0d749284629db24a7\" data-private-watermark-src=\"v2-e65f124f97b96a59fb308ed8e34264ff\"></p>\n<p data-pid=\"3Ca_kbFX\">不难看出第二季我们着重塑造了以丘神纪为首的一众角色，而丘将军在第七集里被陷害，身陷险境。而这险境的背后，是由前六集铺垫的内容环环相扣导致丘将军被奸佞陷害，血战宫门。</p>\n<p><img src=\"https://picx.zhimg.com/v2-2ce3b52b869c134ad479c4057510a4be_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2388\" data-rawheight=\"1668\" data-watermark=\"watermark\" data-original-src=\"v2-2ce3b52b869c134ad479c4057510a4be\" data-watermark-src=\"v2-d311bb75e6f8376b9d90a61801a6b7a4\" data-private-watermark-src=\"v2-1d618ee0ca97520c7cdb2f4847e9b341\"></p>\n<p data-pid=\"vC7GTPGF\">火烧博州城，烧了数日的大火，无论是降兵还是无辜百姓，皆因丘神纪的一道军令断送了生路。命赴沙场即所求，但丘将军更多的是被命运裹挟着向前，有很多东西他无法选择。像徐大人对他的敬告【血沾多了，洗不干净的】。其实丘神纪也从未想过要洗净什么，他很清楚自己在做什么就可以了。是非功过无非是留给后人评说的罢了。</p>\n<p><img src=\"https://picx.zhimg.com/v2-6f1612c442e58c7fc41551b8c80c6d0a_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2388\" data-rawheight=\"1668\" data-watermark=\"watermark\" data-original-src=\"v2-6f1612c442e58c7fc41551b8c80c6d0a\" data-watermark-src=\"v2-974e7580d1a8ab1ee1572af978a48a65\" data-private-watermark-src=\"v2-bd6a0d5558db2b01ebaced011b0460ac\"></p>\n<p data-pid=\"_ZyUBiO9\">少卿觉得丘神纪要为做过的事付出代价，这个代价他跟陈拾讨论的时候就是官降三级，罚奉三。少卿自己也是觉得这惩罚对于丘神纪来说未尝不是一件好事，可是少卿从未想过，官场沉浮，幕后推手的心思不是像他自己那般单纯的。</p>\n<p><img src=\"https://pica.zhimg.com/v2-0e0cb48633964a214f990d8ae3ddc379_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2388\" data-rawheight=\"1668\" data-watermark=\"watermark\" data-original-src=\"v2-0e0cb48633964a214f990d8ae3ddc379\" data-watermark-src=\"v2-714c49f61ed80b526b0bdc1de40e4f58\" data-private-watermark-src=\"v2-a3b5f595fadcbef1d52c8f285989cced\"></p>\n<p data-pid=\"6qngkhzG\">所以接下来的剧情将会走向哪里，少卿对丘神纪的事情是否还会出手。观众老爷们敬请期待吧~</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/hadj-46?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">槐佳佳</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>延伸阅读：<br><a href=\"http://www.zhihu.com/question/571607535?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价动画《大理寺日志》第二季第五集？</a><br><a href=\"http://www.zhihu.com/question/572875732?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价动画《大理寺日志》第二季第六集？</a><br>\n","link":"http://www.zhihu.com/question/574344418/answer/2814460549?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"找到基础与关键，让保持心流不再是难事","date":"2022-12-24 09:20:59","description":"\n<p>欢迎来到《创造心流》的第三步：获取并保持心流。</p>\n<p>在前一篇中，我们介绍了启动心流你必须掌握的关键模型：执行意图和 WOOP 模型，带着你完成了必要的准备工作，用按下 Cubi 的大按钮作为行动触发器，啪嗒一下，马上开始。这一篇我们会带着你正式踏入心流的领地，开展一段奇妙的心灵奇旅。</p>\n<p>本篇同样会分成理论和实践 2 个部分。在理论部分，你将会了解心流的心理基础和生理基础。在实践部分，我们会告诉你心流的前、中、后 3 个阶段要如何做，才能达到最佳效果</p>\n<p>理论部分：</p>\n<ul>\n<li>心流的心理基础</li>\n    <li>心流的生理基础</li>\n</ul>\n<p>实践部分：</p>\n<ul>\n<li>心流前期：大脑热身</li>\n    <li>心流中期：保持流动</li>\n    <li>心流后期：正确退出</li>\n<p>[......]</p>\n<a href=\"https://sspai.com/post/77435\" target=\"_blank\">查看全文</a><p>本文为付费栏目文章，出自<a href=\"https://sspai.com/series/290\" target=\"_blank\">《心流管理魔方》</a>，订阅后可阅读全文。</p>\n</ul>\n","link":"https://sspai.com/post/77435"},{"title":"未来三年，做好没法「涨薪」的准备","date":"2022-12-24 06:30:57","description":"\n<p></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-42729c5b61d8616077b12f1e1f5de0c3_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"899\" data-rawheight=\"312\" class=\"origin_image zh-lightbox-thumb\" width=\"899\" data-original=\"https://pic4.zhimg.com/v2-42729c5b61d8616077b12f1e1f5de0c3_r.jpg\"></figure><p data-pid=\"K0jC3EtI\">本文首发自公众号：瞎说职场。</p>\n<p data-pid=\"7zAv-Kms\">原文：</p>\n<a href=\"https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/Vsy6tVEj20Ibjnu6JWspZg\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-153801621abacb78462f46581b855514_qhd.jpg\" data-image-width=\"900\" data-image-height=\"382\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">未来三年，做好没法「涨薪」的准备</a><h2>\n<b>✎</b> <b>写在前面</b>\n</h2>\n<p data-pid=\"kcGUiUZC\">几个月前，有一位房地产专家，在接受采访时发表了一些比较奇葩的言论，引得网友们纷纷批判。</p>\n<p data-pid=\"KzPKvy66\">我却注意到了一个细节：他在提出「房贷前五年只还利息，不还本金」观点时提到了这样一个观点：</p>\n<blockquote data-pid=\"4UnFq2WB\"><b>大学生刚毕业时月薪7000。五年以后，月薪13k-14k是很正常的。</b></blockquote>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-7c62b67cfa554e7e9c725c9bbdceec25_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"506\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-7c62b67cfa554e7e9c725c9bbdceec25_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-7e2c9f8b671bdf4abd2df0b83e018ade_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"500\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-7e2c9f8b671bdf4abd2df0b83e018ade_r.jpg\"></figure><p data-pid=\"KzAJetwZ\">应届生 5 年薪水翻一番，真的能做到吗？</p>\n<p data-pid=\"uhhb2bvP\">我的观点是：<b>过去做得到，但未来大概率会越来越难。</b></p>\n<p data-pid=\"JXJIrYOi\">有趣的是，有个网友很激动地和我争论：</p>\n<blockquote data-pid=\"wozOagbK\"><b>大学生毕业7k，工作5年后拿不到月薪13k，也是混子。</b></blockquote>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-2a8d54212c8717d35ad2143d56c30502_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"508\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic3.zhimg.com/v2-2a8d54212c8717d35ad2143d56c30502_r.jpg\"></figure><p data-pid=\"KAleywBH\">抱有类似观点的小伙伴们人数不少。</p>\n<p data-pid=\"ihIwWdIp\">尤其是互联网行业的从业者，从过去10年来看，应届生的薪资水涨船高，倒挂老员工。</p>\n<p data-pid=\"ldQmiAzv\">而老员工如果跳槽涨个30-50%没啥问题，5年翻一番，看起来是基本操作。</p>\n<p data-pid=\"ykQ0oOEb\">但那是过去10年的基本操作，未来10年，还能如此乐观吗？</p>\n<hr>\n<h2><b>1）增长周期没了</b></h2>\n<p data-pid=\"giuAk2J8\">岁数大一点的职场人，可能都能看到，和我们大A股的牛熊交替相似。</p>\n<p data-pid=\"gCzK9fxD\">职场也是有周期的。</p>\n<p data-pid=\"nDOwu10X\">从上个世纪末的东南亚金融危机，对中国制造业带来了不小的打击，但是差不多在3-4年之后，中国确定了加入 WTO，来了一波职场大牛市，无数 500 强企业涌入中国市场，中国白领人才的薪水实现了质的突破。</p>\n<p data-pid=\"Dmq9kfda\">当年，IBM、微软招人才，月薪都是上万的，须知那个年代，中国大部分打工人的月薪还是以几百为标准的。</p>\n<p data-pid=\"7oyjj2kQ\">外企带来的牛市持续到了2008年。</p>\n<p data-pid=\"YhA6gxN9\">但在08年全球金融海啸之后，外企一直没有完全缓过气来。</p>\n<p data-pid=\"VCtIrAge\">但很幸运的，移动互联网带来了新一波增长周期，在智能手机出现之前，上网的门槛挺高的，要有电脑，我是 2001 和 2005 年都买过电脑，一台 5000-6000 打底，上网当时还是小众。</p>\n<p data-pid=\"IQGJhhTe\">而智能手机的普及，让所有人拿着手机就能上网了，这一波红利，我们吃了接近 10 年。</p>\n<p data-pid=\"F3vamgbx\">好了，能上网的都上网了，上到70-980岁的爷爷奶奶们，下到中小学生如今都开始上网了，这波红利又没了。</p>\n<p data-pid=\"NBfeV-Di\">下一波红利在哪里？有人说是汽车，有人说是眼镜，这个我预留一个坑，准备年底前写写。</p>\n<p data-pid=\"0dxpXeWk\">但无论是什么产品，眼下，我们看不到下一个经济周期的影子——牛市不见了。</p>\n<p data-pid=\"ileiwlBJ\">没有了信心，没有了高增长的预期，那么资本大概率也不会开启撒钱模式。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-960ec63e9c886cd18a524abd012aa4c0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"648\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-960ec63e9c886cd18a524abd012aa4c0_r.jpg\"></figure><h2><b>2）预期变了</b></h2>\n<p data-pid=\"CrTxRlu5\">过去几十年，我们经济高速增长，打工人的薪水也水涨船高，很大程度上是因为高的预期。</p>\n<p data-pid=\"fkL2Fw-L\">外企进入中国可以短期不赚钱，但是需要高薪挖人才；互联网行业崛起可以短期不赚钱，但是也要高薪挖人才。</p>\n<p data-pid=\"I6vBGvCX\">无论是外企，还是互联网大厂，都很清楚，短期赚不赚钱不那么重要，重要的是我能够在资本市场上讲一个动听的故事——当然，很重要的一点是，中国这么大的市场，讲起故事来本身就非常动听。</p>\n<p data-pid=\"NuYL2Vt2\">而这个故事，到了2022年，基本上已经讲不下去了。资本市场不信了。</p>\n<p data-pid=\"y5VI5HLs\">如果我们看今年互联网公司的财报会发现一个有趣的特点：</p>\n<p data-pid=\"slhCdyS5\">头部的互联网大厂能赚钱，但资本市场并不认可，股价还在跌；比如，腾讯明明是盈利的，但是现在公司依然在降低成本，提升利润率。</p>\n<p data-pid=\"XNVVq5XK\">一些新兴互联网企业，过往不盈利，但故事讲得很好的，比如快手，今年也没法继续讲故事了，强行降本增效，并在年中开始盈利了。据说 B 站明年的目标也是要盈利。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-cea474878a73e1e635aff60f362c5848_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"263\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-cea474878a73e1e635aff60f362c5848_r.jpg\"></figure><p data-pid=\"mIF7UxIU\">资本市场现在只相信盈利。</p>\n<p data-pid=\"BqMXuXHv\">你赚钱了，那么ok，你是好公司。如果你不赚钱，不管你手里有什么资源，资本市场就不信。</p>\n<p data-pid=\"NVNkUXmm\">据我了解有家互联网公司现在手里握着的现金，比公司的市值还高——也就是说，你现在花钱按市值盘下这家公司，再立马把公司关了，你可能就赚翻了……</p>\n<p data-pid=\"Bjs69NAu\">说到底，预期变了。</p>\n<p data-pid=\"ADXWjVYk\">你可能会问，这和我们打工人有什么关系呢？</p>\n<p data-pid=\"tGxObZNv\">很不信，我们赚钱的逻辑也变了，公司不会再因为对这个市场有着超高预期而开出高薪，他们要货真价实看公司盈利。</p>\n<p data-pid=\"fY1pnMec\">如今的企业加薪，重新回到了一个朴素的劳动人民价值观：（公司）挣多少钱，（员工才可能）分多少钱。</p>\n<p data-pid=\"QUogC1cr\">这也意味着，对于我们普通打工人来说，涨薪，就只有华山一条路：</p>\n<p data-pid=\"ySebAYwq\"><b>业绩说话：</b></p>\n<ul>\n<li data-pid=\"oxgzBxLl\"><b>你需要有机会加入一个高利润的行业；</b></li>\n<li data-pid=\"VDP_dW4B\"><b>你需要有机会工作在一家高利润的公司；</b></li>\n<li data-pid=\"m0T4_ygm\"><b>你需要在公司的核心业务团队。</b></li>\n</ul>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-69a777ba3b928673c70398d4a2b506d1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"900\" data-rawheight=\"749\" class=\"origin_image zh-lightbox-thumb\" width=\"900\" data-original=\"https://pic2.zhimg.com/v2-69a777ba3b928673c70398d4a2b506d1_r.jpg\"></figure><h2><b>3）薪酬涨不动了</b></h2>\n<p data-pid=\"bUclJ3KA\">我在之前回答里，描述过我亲身经历的一个场景：</p>\n<a href=\"https://www.zhihu.com/question/321856811/answer/829582304\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-4276b952af1341b6d8209cc612e1cda6_qhd.jpg\" data-image-width=\"1080\" data-image-height=\"710\" class=\"internal\">外企在 2020 年后的中国会不会越来越差？</a><p data-pid=\"d5VsATmj\">一次会议上，公司一位总监提出给员工涨薪。</p>\n<p data-pid=\"gbJWEUfg\">外国老板立即在白板上展示绘画技巧：<b>他先画了一条缓慢上升的曲线，标注公司业绩增长曲线；接着画了一条员工薪资涨幅的曲线，上升幅度明显超过业绩涨幅</b>。</p>\n<p data-pid=\"6OTRvpmp\">老板转过身来，放下笔，问总监：</p>\n<blockquote data-pid=\"ZnuA0KtK\">这么下去，总有一天，公司的业绩无法支撑薪资增长。你有什么应对方案？</blockquote>\n<p data-pid=\"OIBndKB7\">对于打工人来说，还真有——<b>加入高利润高增长的行业/公司</b>。</p>\n<p data-pid=\"9I7fDEyg\">道理，咱都懂，谁不想去一个高利润的行业呢？</p>\n<p data-pid=\"BKRs7B4j\">咱都想去苹果，都想去茅台……</p>\n<p data-pid=\"OZjlvF9l\">但从大环境来看，我们更可能加入的就是一家中等水平的公司，利润增长能不输 GDP 增速，咱就谢天谢地了。</p>\n<h3><b>1、GDP增速放缓</b></h3>\n<p data-pid=\"8_c6koUB\">我们来看看过去10多年的GDP增速 vs 年度薪资涨幅的关系。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-d37f1349fef518163d87adfed0be1ddf_b.jpg\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"610\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-d37f1349fef518163d87adfed0be1ddf_r.jpg\"><figcaption>图源Mercer，2022年GDP增速为年中数据</figcaption></figure><p data-pid=\"oFLWDQnm\">过去这些年，薪酬的涨幅一直在下降。</p>\n<p data-pid=\"5eUYlPzu\">2015年之前，薪资涨幅是高于GDP涨幅的；2015年之后，年度调薪就赶不上GDP了。</p>\n<p data-pid=\"SebQcOTQ\">去年因为全球各大经济体糜烂，相比之下，疫情防控极为出色的我们GDP又刷出了8.1%的涨幅，这才让我们今年的年度调薪（5.3%），神奇般略高于2021年的涨幅（5.1%）。</p>\n<p data-pid=\"6h6YQ8Js\">没办法，对一个普通员工来说，10%的年终涨薪并不算高，可能也就一个月多800-1000，还是税前。</p>\n<p data-pid=\"2DjHVmPY\">但对管理者来说，很清楚公司不可能永远给员工10%的年终涨薪。</p>\n<h3><b>2、消失的薪资优势</b></h3>\n<p data-pid=\"b-0lM4TS\">有一个事实，很多打工人并不知道。</p>\n<p data-pid=\"5WMgJLNQ\">尽管相比房价，我们的薪资依然差之千里，但我们中国打工人的薪资，在全球市场上已经不算低了。</p>\n<p data-pid=\"EpH5TsWK\">咱不用和印度、越南这种新兴市场去比，就是相比波兰、爱尔兰部分欧洲国家，我们的打工人的薪资也没有什么优势了。</p>\n<p data-pid=\"HveqO-8c\">这对打工人来说，是好事——我们中国打工人，挣多点，怎么了？</p>\n<p data-pid=\"fE22ycaP\">但是对于很多跨国企业来说，它们还愿意为中国打工人提供10%+的年度调薪吗？</p>\n<p data-pid=\"fo4vcu-Z\">须知，越南人、印度人、新加坡人也在向跨国企业招手，这些市场上对跨国企业也有一些吸引力。</p>\n<p data-pid=\"-1m4hjBj\">尤其是新加坡，两波躺赢，吃爽了跨国企业亚洲总部的红利。</p>\n<p data-pid=\"bEafSq_N\">所以，大家再想想，未来五年真的能薪资翻倍吗？</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-5aba5da9a618dd267d8a1d9be2c74283_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"630\" data-rawheight=\"358\" class=\"origin_image zh-lightbox-thumb\" width=\"630\" data-original=\"https://pic4.zhimg.com/v2-5aba5da9a618dd267d8a1d9be2c74283_r.jpg\"></figure><h2><b>4）未来怎么办</b></h2>\n<h3><b>1、苟一苟，提升风险意识</b></h3>\n<p data-pid=\"jgwx9M5_\">疫情之前，坦白说，我们打工人的日子还算过得去。</p>\n<p data-pid=\"nh38G1d3\">尤其是在2010-2018年之间互联网+的高速增长，让很多人赚到了钱。</p>\n<p data-pid=\"oECoXh6Q\">但未来10年，情况可能大为不同。我们不能再以5年薪资翻一番的计划去做自己的财务规划。</p>\n<p data-pid=\"UNfRzn37\">大约从2013年开始，在外企的我们开始疯狂讨论VUCA时代：</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-472db1caab78fe8e4de9892fabcbd96a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"941\" data-rawheight=\"543\" class=\"origin_image zh-lightbox-thumb\" width=\"941\" data-original=\"https://pic3.zhimg.com/v2-472db1caab78fe8e4de9892fabcbd96a_r.jpg\"></figure><p data-pid=\"O-7f3SPy\">但直到今年4月份被封之后，我才能真正感受到啥是VUCA。</p>\n<p data-pid=\"dIlWCBRk\">回想当年，真的是：</p>\n<p data-pid=\"jINwcox5\"><b>年少不知VUCA滋味 为写公号强说VUCA</b>。</p>\n<p data-pid=\"0HsBJBnT\">风险是真实存在我们身边的，我见证了被辞退后纠结是不是要卖房回老家的中年打工人，也看到了刚刚毕业手里钱不多，却还在努力找工作的年轻人。</p>\n<p data-pid=\"b1La9ON3\">如果现在应届生还觉得未来5年薪资可以翻一番，没有任何难度……</p>\n<p data-pid=\"HtuK-wXM\">可以考虑重新了解一下「刻舟求剑」这个成语典故。</p>\n<p data-pid=\"mHh5cO3X\">在我看来，各家公司2023年的年初薪酬涨幅，可能就会是一个极低的数字，不涨薪，也很有可能。</p>\n<h3><b>2、苟在合适的地方</b></h3>\n<p data-pid=\"I_ygTqpB\">如果能苟在高利润行业，固然好；</p>\n<p data-pid=\"I_XHWKgt\">如果不行，就苟在优质公司；</p>\n<p data-pid=\"8A1FNeoa\">如果还不行，就苟在核心团队；</p>\n<p data-pid=\"EZm5mqwp\">2022年的今天，如果你在一个夕阳行业，或者在一个非核心部门，做的是一个非核心岗位工作，风险不小。</p>\n<p data-pid=\"2Ndp3MV-\">原先「不关注边界」的大厂们，早就学乖了——开始停止扩张，裁撤非核心业务。</p>\n<p data-pid=\"qiImsEob\">如果不在核心业务团队，如果依然在烧钱，没有找到好的盈利模式，那始终有一把剑悬在头上。</p>\n<p data-pid=\"gAcBIUgP\">两周前，一个小伙伴约我聊，新媒体运营背景的他加入了一家行业里顶尖的互联网培训公司，负责新媒体营销，而这家公司最出名的恰恰是新媒体运营。</p>\n<p data-pid=\"wUBCV9Kq\">本来是份很有前途的工作。</p>\n<p data-pid=\"UO0mKyOC\">然而，公司总喜欢让员工“拥抱变化”，急于抓现金流的公司安排他去做业务拓展，简而言之就是找到合适的自媒体，合作推广他们的课程。</p>\n<p data-pid=\"n3GuEcHb\">我问了他两个问题：</p>\n<ul>\n<li data-pid=\"culQLfuJ\">这个工作对你个人的价值在哪里？</li>\n<li data-pid=\"HiPPK9zg\">这个工作的可取代性高吗？</li>\n</ul>\n<p data-pid=\"rJ3nFoN3\">他很快意识到问题的紧迫性：为公司做贡献的时候，别荒废了自己的职业规划。</p>\n<p data-pid=\"rBLzQIdj\">我给他的建议是：</p>\n<p data-pid=\"kokxqyKe\">如果不能在核心部门待下，起码也要尽力加入核心的项目，始终给自己创造机会提升核心竞争力——在这家公司，对于他来说——新媒体运营能力。</p>\n<p data-pid=\"tZrFhb16\">2022年，留在公司成为核心业务的一份子，是更稳当的成长路径。但如果真的沦落到非核心团队，也别慌张，尽量参与一些重要的项目，在团队里刷刷脸，一方面争取未来有机会转岗，另外重要的项目往往没那么快被砍，还是能够苟一苟的。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-dde9d20b5fe6df8c450475ca116d0b2c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic1.zhimg.com/v2-dde9d20b5fe6df8c450475ca116d0b2c_r.jpg\"></figure><h2>\n<b>✎</b> <b>写在最后</b>\n</h2>\n<ul>\n<li data-pid=\"mxtFXr0p\">98年亚洲金融危机</li>\n<li data-pid=\"NtFjpaJY\">08年次贷危机引发的全球金融海啸</li>\n<li data-pid=\"T2sYZhmr\">20年新冠疫情来袭</li>\n</ul>\n<p data-pid=\"ilEShrsb\">每隔十年，麻烦就来一次。</p>\n<p data-pid=\"C_LKSaE1\">我以为，人这一生总归会遇到几次金融危机，经济下滑的周期。</p>\n<p data-pid=\"SgDoYkIV\">如果真要选，我选在年轻的时候经历，这个时候我还能抵抗，我还能重新来过。等我接近退休年纪的时候，可能就被打垮了，没得挣扎了。</p>\n<p data-pid=\"-bbuMPuK\">当年在寝室里打「拱猪」（据说是一项已经失传的民间非物质文化遗产），听过室友说过一句很有哲理的话：</p>\n<p data-pid=\"wf3gxq1u\"><b>牌好的时候，不犯错，不吃猪；牌差的时候，保持好心态，别掀桌子</b>。</p>\n<p data-pid=\"YxLz1Fb7\">如今，在看到下一个经济周期之前，我们能做的还是：打好手里的牌，手里是好牌的时候，别浪，稳稳地把握住机会。</p>\n<p data-pid=\"1S7w2FOv\">而当我们手里是烂牌的时候，少输点，保持好心态，别掀桌子，别下牌桌，我们还有赢的机会。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/sean-yenan?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Sean Ye</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/593193433?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"过年的杂物较多，有什么好用的置物架值得推荐？","date":"2022-12-22 08:03:39","description":"\n<h2>「我的置物百宝箱」</h2>\n<p data-pid=\"Dj8rEFwa\">作为一个乐衷于宅家以及囤物的人来说，我家的收纳基本都是按照功能类来区分。大概分为休闲区，用餐区，工作区，杂物区和书写区这几大类。</p>\n<blockquote data-pid=\"J_v3YCba\">一、休闲区悬空置物柜</blockquote>\n<p data-pid=\"F9PqXfkA\">首先来看看我的休闲区吧，冬天的休闲区我放在了室内，一个小柜子放在角落，可以用来收纳杂志，一些简单的小杂物，比如烛台，零食等，摆上装饰画和台灯，再放一张小桌子，就是妥妥的下午茶角了。</p>\n<p><img src=\"https://pica.zhimg.com/v2-947b348a4d334388278ee98ba733ed33_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3456\" data-rawheight=\"5184\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-947b348a4d334388278ee98ba733ed33\" data-watermark-src=\"v2-256473b6a1de038bb67bb3913c0a9ffe\" data-private-watermark-src=\"v2-468cf030cc7278b5c524ed9a0a3a020b\"></p>\n<p data-pid=\"0zJACfbE\">这个柜子的尺寸不大，大概60×40cm的样子，特别适合摆在角落。它属于悬浮式的收纳柜，刚开始买来的时候长这样～</p>\n<p><img src=\"https://pic1.zhimg.com/v2-cc9ca394181ba094282ba244916e9a37_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3456\" data-rawheight=\"5184\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-cc9ca394181ba094282ba244916e9a37\" data-watermark-src=\"v2-4c9c41eb2f0779d0c0c091d88d6f0405\" data-private-watermark-src=\"v2-8b6a4bb607bb2507e0d23a1cd559bef8\"></p>\n<p data-pid=\"S00Y_B1G\">安装也很方便，是整体式的，只要装上两边的不锈钢脚架就可以了，柜体不重，很适合女孩子。</p>\n<p data-pid=\"v51MgZf1\">它的收纳区域分为三类，一类是杂志收纳区，可以将随手要看的杂志归纳起来，拿取很方便；</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6c2950b8ad1d69a1e278c7f0cba30c0f_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3456\" data-rawheight=\"5184\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-6c2950b8ad1d69a1e278c7f0cba30c0f\" data-watermark-src=\"v2-c8d9b6992a897ea6e654bef4957d9e75\" data-private-watermark-src=\"v2-7225331744981177a4bb3c6dc27e7bdc\"></p>\n<p data-pid=\"_LD8wUI_\">一类是可以移动的柜门收纳区，用来存放没有看完的书籍非常适合，它有挡板，我有时候可以直接把打开的书放进去，即拿即看；</p>\n<p><img src=\"https://pica.zhimg.com/v2-b497f18fa93d7ebdc5eabb15afc1df32_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3456\" data-rawheight=\"5184\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-b497f18fa93d7ebdc5eabb15afc1df32\" data-watermark-src=\"v2-cc4d4252d3c168ed92db54a5cca88a61\" data-private-watermark-src=\"v2-1efce31f2778975e8df34a330922cb37\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"g5uGFl9L\">还有一块挡板后面的区域，我时常用来放零食，空间很宽敞，有空的时候冲一杯咖啡，吃点零食看看杂志，刷刷手机，可以坐一下午。</p>\n<p><img src=\"https://picx.zhimg.com/v2-0e791790636ca07fcd5fc5b300b66e81_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3456\" data-rawheight=\"5184\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-0e791790636ca07fcd5fc5b300b66e81\" data-watermark-src=\"v2-b188e6dfe9b291ac201060184fc8b40b\" data-private-watermark-src=\"v2-f9284586ebb655a4f89e0984b501d87e\"></p>\n<blockquote data-pid=\"xh6kAuFP\">二、工作区收纳书柜</blockquote>\n<p data-pid=\"FcbW3Mx_\">接下来是我的工作区收纳。工作区基本上就是很简单的一个落地书柜，会放一些常看的书籍和资料，以及一些常用的工具，比如整套的画材等等，书柜上会放一台饮水机，方便喝水。</p>\n<p><img src=\"https://picx.zhimg.com/v2-7fbca33975e1650e446b9e4b17f80811_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3286\" data-rawheight=\"4823\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-7fbca33975e1650e446b9e4b17f80811\" data-watermark-src=\"v2-649d48b6399978cf3447a689173e3fd6\" data-private-watermark-src=\"v2-3bfffd6ca524c233658419ce69fc7510\"></p>\n<p><br></p>\n<p><img src=\"https://pica.zhimg.com/v2-f60b24fbf54af94b3fd874e8c535b423_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3072\" data-rawheight=\"4096\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-f60b24fbf54af94b3fd874e8c535b423\" data-watermark-src=\"v2-3ffc1870f213f074ede23a78e05eac64\" data-private-watermark-src=\"v2-b248055c4deecf9391427b14e0dede86\"></p>\n<p data-pid=\"iXRWJ-GR\">这个书柜我是买了两张拼在一起的，置物格比较多，层板可以随意调整拿取，大件或是小件的物品都可以有合适的空间尺寸，非常灵活。我大致上是上层放书籍，下层放置物篮和工具，一切的主旨都是以取用方便为主。这样做的最大好处是很多时候手里有活走不开时，只要转身就可以拿到自己想要的东西，特别适合我这种懒人类型。</p>\n<p><img src=\"https://picx.zhimg.com/v2-0d5fbb8f0ed1ecf3a160a4ae1e318be7_720w.jpg?source=b1748391?rss\" data-rawwidth=\"2727\" data-rawheight=\"4092\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-0d5fbb8f0ed1ecf3a160a4ae1e318be7\" data-watermark-src=\"v2-3f246c7fbe9d0758915103277ce10ce8\" data-private-watermark-src=\"v2-b2c0d90461ef3782faf8e36280de20b7\"></p>\n<blockquote data-pid=\"WXLrUb8t\">三、 书写区收纳架</blockquote>\n<p data-pid=\"DdgWFjkP\">这个架子原本是我买来放杂志的，后来购入了杂志柜以后无意间发现了更适合她的角落。</p>\n<p data-pid=\"GV_ZTqtn\">她原本长这样 </p>\n<p><img src=\"https://picx.zhimg.com/v2-09d65f683d2c6a2c1af87d6630cdf471_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3456\" data-rawheight=\"5184\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-09d65f683d2c6a2c1af87d6630cdf471\" data-watermark-src=\"v2-fe992a70d84c654c540b1bf366a7ad9a\" data-private-watermark-src=\"v2-3b6d6d02b21d37e9e82e5955a89abffa\"></p>\n<p data-pid=\"HKtO3W6S\">杂志搬空以后她成了这样 </p>\n<p><img src=\"https://pic1.zhimg.com/v2-a1e49932b47e03cb1a589205fefa2049_720w.jpg?source=b1748391?rss\" data-rawwidth=\"2733\" data-rawheight=\"4096\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-a1e49932b47e03cb1a589205fefa2049\" data-watermark-src=\"v2-3b16bd6c164cba76ea3b85fac3d74417\" data-private-watermark-src=\"v2-819427c0437dbb3e3f4cbb90f4a27283\"></p>\n<p data-pid=\"7mWhvoQR\">我用她来收纳了自己没有抄完的佛经。</p>\n<p data-pid=\"gfYSNT6F\">以前抄经，因为篇幅实在太大，没有合适的置物架可以收纳，只能卷起来塞到经筒里。这样做的缺点就是拿取非常不方便，每次要找很久，然后因为纸张是卷起来的，所以拿出来继续抄的时候要费很大的功夫把她找平。但是现在，这个神器成就了我～</p>\n<p><img src=\"https://picx.zhimg.com/v2-a78e6d8f50868a493845541d24796700_720w.jpg?source=b1748391?rss\" data-rawwidth=\"2733\" data-rawheight=\"4096\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-a78e6d8f50868a493845541d24796700\" data-watermark-src=\"v2-4632421640feccbeec4947d154234114\" data-private-watermark-src=\"v2-62fd5a53527942213179c61d7117fbd5\"></p>\n<p data-pid=\"kk-SPgnq\">现在抄经分类就方便了很多，抄完的和未抄完的可以很明显的区分开来；不同的经卷也可以分门别类地收纳，一眼就可以找到自己要的东西，整齐又美观。</p>\n<p><img src=\"https://picx.zhimg.com/v2-f9e3fe683e581a64b98fc0fa387abc00_720w.jpg?source=b1748391?rss\" data-rawwidth=\"2733\" data-rawheight=\"4096\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-f9e3fe683e581a64b98fc0fa387abc00\" data-watermark-src=\"v2-9c35b7da013791caf702d96340f9e4a7\" data-private-watermark-src=\"v2-00064756efbc2110c19df840fafa8dae\"></p>\n<p data-pid=\"2HBuXX6u\">因为置物架的层数比较多，所以我上层会用来放经卷，下层会用来放一些未使用过的材料，根据颜色和用途分别归纳，特别方便。临近新年，买了好些对联纸，也有了属于它们的安生之处，无比匹配。</p>\n<blockquote data-pid=\"ke6aslLV\">四、 餐厅区收纳柜</blockquote>\n<p><img src=\"https://pica.zhimg.com/v2-bd2234ca99da14100433887fd8b8808c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3456\" data-rawheight=\"5184\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-bd2234ca99da14100433887fd8b8808c\" data-watermark-src=\"v2-778b3e65b00e093ab5ebfaf1f72218f4\" data-private-watermark-src=\"v2-a845c5b4f239c8cae729b4e0d554d03b\"></p>\n<p data-pid=\"wVfWYdcf\">这是我的餐边柜，因为家里有一扇窗景很好，所以我买了漂亮的餐桌用来吃早餐。</p>\n<p data-pid=\"CPCKtGER\">这个餐边柜的功能就是承载我各种各样的早餐盘。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-05c59e12fe5af986569c650f5e86d0b2_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3072\" data-rawheight=\"4096\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-05c59e12fe5af986569c650f5e86d0b2\" data-watermark-src=\"v2-8eac9565656b0e3150ac5a0d44155d14\" data-private-watermark-src=\"v2-09d25c17806478f6b3365738ed1164f6\"></p>\n<p data-pid=\"deVpWVZU\">柜体分为三部分，左边是 用来放各种形状的盘子和一些一次性的咖啡杯，这样很多时候出门我都可以自带咖啡☕️，非常方便。柜子下层放了一些常用的杯具，有时候用来喝茶，有时候拿来插花。</p>\n<p><img src=\"https://picx.zhimg.com/v2-900ca7783cd1623b3cf7da2c1296d337_720w.jpg?source=b1748391?rss\" data-rawwidth=\"5184\" data-rawheight=\"3456\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-900ca7783cd1623b3cf7da2c1296d337\" data-watermark-src=\"v2-d2f3c8755881551de7cdd0b637291e26\" data-private-watermark-src=\"v2-e6918e7ec77d6dd7bf958eaa5a5467cb\"></p>\n<p data-pid=\"Po2pKG0v\">右边区域是收纳柜和抽屉，一般会放一些常备的维生素和药品，底下的抽屉会放一些自己做的餐垫和其他小杂物，东西不多，收纳方便，用着很顺手。</p>\n<p data-pid=\"PU-QcTe8\">唯一的缺点是柜体的木材偏软了一点，会容易造成划痕，但是它的颜值让我可以忽略它的小缺点～</p>\n<p><img src=\"https://picx.zhimg.com/v2-65fd2cd0d0ddd6d2bbbea631b228e11b_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3456\" data-rawheight=\"5184\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-65fd2cd0d0ddd6d2bbbea631b228e11b\" data-watermark-src=\"v2-5910baa09723fc79afaf45f01f24ae4a\" data-private-watermark-src=\"v2-c89e87f27e394b7f6d8db155fb8ae05c\"></p>\n<p data-pid=\"rX0fOtVD\">还有我的杯架。它的功能不仅仅是用来放杯子，我也经常会用来放一些自己做的小烛台，一些常用的小工具，比如相机镜头之类的。它的置物格尺寸比较大，12×12cm的大小，所以很多罐状的物品都可以进行分类放置，一目了然。</p>\n<p><img src=\"https://picx.zhimg.com/v2-255173f6303ab32225976c4478788f84_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3456\" data-rawheight=\"5184\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-255173f6303ab32225976c4478788f84\" data-watermark-src=\"v2-b8ab111b6718b66ac407642949b166fa\" data-private-watermark-src=\"v2-e6d58f44aa3ebb355f75af5daff5018d\"></p>\n<blockquote data-pid=\"yP_3wMMC\">五、 阳台老柜子收纳区</blockquote>\n<p data-pid=\"ZFKlE2-9\">最后是我家的压轴老大，九十岁高龄的老柜子，因为它原本是个组合衣柜，我取了上半部分放在家里用来置物，下半部分给了邻居装饰屋子。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-97d7db7b6eb221ba472392518f8f7e60_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3070\" data-rawheight=\"4096\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-97d7db7b6eb221ba472392518f8f7e60\" data-watermark-src=\"v2-36423cc80461cd5b52ea50a1053c41f7\" data-private-watermark-src=\"v2-8f7836578378e7c2fd06faa302c8e964\"></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-f8c98a4e63554f9039e26a7444acb741_720w.jpg?source=b1748391?rss\" data-rawwidth=\"2730\" data-rawheight=\"4096\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-f8c98a4e63554f9039e26a7444acb741\" data-watermark-src=\"v2-0caca158e16e1d4901336378c5b4540f\" data-private-watermark-src=\"v2-231b869074b8beda5f03428b97bd41bd\"></p>\n<p data-pid=\"CHYy8C9p\">这是我刚护理好它的样子。</p>\n<p data-pid=\"9YhIqxK8\">因为这个柜子是放在阳台，阳台是我春秋时节经常会呆的空间，种花，晒太阳，喝茶，有时候会在阳台画画。所以这个柜子我用来放不常用的礼盒类套装茶具，有朋友来的时候，大家一起喝茶可以即拿即用，收纳空间足够大。</p>\n<p><img src=\"https://picx.zhimg.com/v2-653c99857fd6c1b7abbd9b5d2484bfe4_720w.jpg?source=b1748391?rss\" data-rawwidth=\"5184\" data-rawheight=\"3456\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-653c99857fd6c1b7abbd9b5d2484bfe4\" data-watermark-src=\"v2-c6ad89fc1a20b4f53e5065bf3b676df2\" data-private-watermark-src=\"v2-15afb7b1f2610b995dfe495247ccf2b1\"></p>\n<p data-pid=\"Be_2G9C6\">也得益于它的内部空间大，所以我有好多幅尺寸大小不一的画都可以完全收纳进去，还有多余的空间可以放好几个杂物箱，用来收纳画材和工具。</p>\n<p><img src=\"https://picx.zhimg.com/v2-309049f7839c7d2b2f12707967fa8a6d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"2730\" data-rawheight=\"4096\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-309049f7839c7d2b2f12707967fa8a6d\" data-watermark-src=\"v2-96d291072ead7da51dd5b54f707f20c4\" data-private-watermark-src=\"v2-b5d7aec350e1d1761c9f550c67784411\"></p>\n<p data-pid=\"_4DIGo4t\">这是我最喜欢的柜子，没有之一。我总觉得，它就像个老者一样，笑着看我在这个空间里过自己喜欢的生活，任时光流去，它始终在那里。</p>\n<blockquote data-pid=\"ZFCfgC-s\">六、 海报收纳架</blockquote>\n<p data-pid=\"K9EZ6mm7\">一个很便宜的收纳架，是我购物节的时候凑单买的，原本以为它会很鸡肋，但是我发现，每一样在我生活中出现的物品，好像都有它存在的意义。</p>\n<p><img src=\"https://picx.zhimg.com/v2-e158b275ffebd094a3dacecf33be7105_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3456\" data-rawheight=\"5184\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-e158b275ffebd094a3dacecf33be7105\" data-watermark-src=\"v2-6e4f15c278d732d6d7ae1a367d67d1cf\" data-private-watermark-src=\"v2-2586954a62b1705630676836ff25df9e\"></p>\n<p data-pid=\"9MvKAPI6\">因为自己家里有很多挂画，基本上这些装饰画都是自己日常拍的照片，然后制作成海报打印出来挂墙上的。我每次都会打很多，根据心情来变换墙上的装饰，所以剩下来的画轴，海报之类的收纳就成了问题。</p>\n<p data-pid=\"sxAglrX1\">它的出现拯救了我尺寸不一的卷轴收纳，以前家里的置物柜尺寸都是固定的，所以大大小小的卷轴不好堆放，现在，它们都有自己的家啦，任由尺寸大小都不会受影响。</p>\n<p><img src=\"https://picx.zhimg.com/v2-d11f3e16dad850678f894099a0a631c9_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3456\" data-rawheight=\"5184\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-d11f3e16dad850678f894099a0a631c9\" data-watermark-src=\"v2-c21bd4404e56931c4979a973f370df2a\" data-private-watermark-src=\"v2-0b875cbbbc212ae6d20ca5cabae7b25b\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p><br></p>\n<p><img src=\"https://picx.zhimg.com/v2-97c2b17e31f6012fa6861186c0046ed7_720w.jpg?source=b1748391?rss\" data-rawwidth=\"3456\" data-rawheight=\"5184\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-97c2b17e31f6012fa6861186c0046ed7\" data-watermark-src=\"v2-f6cdee10318e4e94ec7949e469095be8\" data-private-watermark-src=\"v2-db9ce269d8784c307eff1e5496f2a5b1\"></p>\n<p data-pid=\"0PAzIb5H\">它还可以随意摆在家里各个角落，桌上地上都可以，是不是很合适？</p>\n<p data-pid=\"pnasIKtQ\">愿大家都有自己喜欢且合适的置物家具呀～</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zzyde-nan-xiao-mu?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">zzy的南小木</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/572504451/answer/2810333751?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">6 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/462112929?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">一个人住，有什么置物架推荐？</a><br><a href=\"http://www.zhihu.com/question/460577151?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">有什么适合租房的置物架推荐？</a><br>\n","link":"http://www.zhihu.com/question/572504451/answer/2810333751?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"什么年代还在用传统 Pjax? —— 自定义 Pjax 提升页面加载速度","date":"2022-12-15 04:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>Hexo 属于静态博客，很多同学给自己的博客加上 Pjax 是为了音乐播放器等功能不中断。</p>\n<p>之前我也想过对博客和主题加入 Pjax 支持，但经过一番分析后觉得，这不仅引入了一个巨大的 <code>jquery.pjax.js</code>，反而优化效果不明显。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8E%9F%E7%90%86\" class=\"headerlink\" title=\"原理\"></a>原理</h2>\n<p>其实，Pjax 的原理并不复杂。或许说，README 一开始就告诉你了：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">pjax = pushState + ajax</span><br></pre></td></tr></table></figure><p>其中 <code>ajax</code> 用于页面的新内容，<code>pushState</code> 改变浏览器状态。</p>\n<p>很简单吧。</p>\n<p>事实上，<code>pjax</code> 并不应该应用于整个页面当中。而应该只是局部更改。</p>\n<p>这样，Blog 当中的导航栏、样式文件等就不需要重复下载与预览。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%88%86%E6%9E%90\" class=\"headerlink\" title=\"分析\"></a>分析</h2>\n<p>以我使用 Miracle 为主题的博客为例，进入首页，按 <code>F12</code> 查看页面 Elements.</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.18/rawimg/2022-12-15_12-32-37.png\"></p>\n<p>可以发现，页面主要更改的也就是 <code>#page-main</code> 部分，只需要实现动态刷新这部分的内容就可以了。</p>\n<p>那怎么实现呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%B0%8F%E5%8C%96%E7%9A%84%E6%95%B0%E6%8D%AE%E6%8E%A5%E5%8F%A3\" class=\"headerlink\" title=\"最小化的数据接口\"></a>最小化的数据接口</h2>\n<p>现在生成的页面当中，有 <code>&lt;head&gt;</code> 部分声明大量样式与元信息，<code>&lt;body&gt;</code> 之下重复的页脚、导航栏，还有每个页面下方都有的一些 <code>&lt;script&gt;</code>。</p>\n<p>很明显，我们不需要这些。我们只要 <code>#page-main</code> 中的主要内容。</p>\n<p>最重要的是，Hexo 是静态博客，这一点只能在生成文件时进行。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%BD%BD%E5%85%A5-HTML\" class=\"headerlink\" title=\"载入 HTML\"></a>载入 HTML</h3>\n<p>我是用 Cheerio 模块帮我完成这一工作。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> cheerio = <span class=\"built_in\">require</span>(<span class=\"string\">'cheerio'</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">\"path\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> filePath = path.resolve(<span class=\"string\">'public/'</span>);</span><br></pre></td></tr></table></figure><p>定义一个 <code>parse function</code>，打开文件并解析相关信息，顺便把不是 HTML 的文件排除掉。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> parse = <span class=\"function\">(<span class=\"params\">filename, fullpath</span>) =&gt;</span> {</span><br><span class=\"line\">    <span class=\"comment\">// 不是 .html 我不要</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!filename.endsWith(<span class=\"string\">\".html\"</span>)) {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>然后通过 Cheerio 解析 HTML:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">{...</span><br><span class=\"line\">  <span class=\"comment\">// 组合新文件名</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> filepath = fullpath+<span class=\"string\">\".page.json\"</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 读取文件内容</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> pageContent = fs.readFileSync(fullpath).toString();</span><br><span class=\"line\">  <span class=\"comment\">// 解析页面内容</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> $pg = cheerio.load(pageContent);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> rtData = {};</span><br><span class=\"line\">...}</span><br></pre></td></tr></table></figure><p>然后获取页面的标题和 <code>#page-main</code> 下的 HTML.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">{...</span><br><span class=\"line\"><span class=\"comment\">// 页面标题</span></span><br><span class=\"line\">    rtData.title = $pg(<span class=\"string\">\"title\"</span>).text();</span><br><span class=\"line\">    <span class=\"comment\">// OR $pg(\"#page-main\").html()</span></span><br><span class=\"line\">    <span class=\"comment\">// 我这么写是因为主题 #page-main 下还有 script 无法执行</span></span><br><span class=\"line\">    rtData.page = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">    &lt;div class=\"mg-top\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        <span class=\"subst\">${$pg(<span class=\"string\">\".mg-top\"</span>).html() || <span class=\"string\">\"\"</span>}</span></span></span><br><span class=\"line\"><span class=\"string\">    &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;footer class=\"text-center\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        <span class=\"subst\">${$pg(<span class=\"string\">\"footer\"</span>).html() || <span class=\"string\">\"\"</span>}</span></span></span><br><span class=\"line\"><span class=\"string\">    &lt;/footer&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;div class=\"p-btn\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">        <span class=\"subst\">${$pg(<span class=\"string\">\".p-btn\"</span>).html() || <span class=\"string\">\"\"</span>}</span></span></span><br><span class=\"line\"><span class=\"string\">    &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">    `</span>;</span><br><span class=\"line\">    rtData.path = filename;</span><br><span class=\"line\">...}</span><br></pre></td></tr></table></figure><p>页面中还有一些 <code>script</code>，比如阅读进度、懒加载等。所以需要一个 <code>extraJS</code> 放置额外的 Script.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">{...</span><br><span class=\"line\">    rtData.extraJS = []</span><br><span class=\"line\">    <span class=\"comment\">// 只解析 #page-main 下的 script</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> $pageMain = cheerio.load($pg(<span class=\"string\">\"#page-main\"</span>).html());</span><br><span class=\"line\">    $pageMain(<span class=\"string\">'script'</span>).map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">i, el</span>) </span>{</span><br><span class=\"line\">        <span class=\"comment\">// 尝试往 extraJS 中 push 相关代码</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> {rtData.extraJS.push($pageMain(<span class=\"built_in\">this</span>)[<span class=\"number\">0</span>].children[<span class=\"number\">0</span>].data);} <span class=\"keyword\">catch</span>(e) {}</span><br><span class=\"line\">        $pageMain(<span class=\"built_in\">this</span>).remove();</span><br><span class=\"line\">    });</span><br><span class=\"line\">...}</span><br></pre></td></tr></table></figure><p>最后，将 JSON 写入文件中。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">{...</span><br><span class=\"line\">    fs.writeFileSync(filepath, <span class=\"built_in\">JSON</span>.stringify(rtData));</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E4%BB%B6%E9%80%92%E5%BD%92\" class=\"headerlink\" title=\"文件递归\"></a>文件递归</h3>\n<p>我们还需要一个函数递归 <code>public</code> 目录下的所有文件，这个不用多说。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fileDisplay</span>(<span class=\"params\">filePath</span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 根据文件路径读取文件，返回文件列表</span></span><br><span class=\"line\">    fs.readdir(filePath, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">err, files</span>) </span>{</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.warn(err, <span class=\"string\">\"读取文件夹错误！\"</span>)</span><br><span class=\"line\">        } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">            <span class=\"comment\">// 遍历读取到的文件列表</span></span><br><span class=\"line\">            files.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">filename</span>) </span>{</span><br><span class=\"line\">                <span class=\"comment\">// 获取当前文件的绝对路径</span></span><br><span class=\"line\">                <span class=\"keyword\">var</span> filedir = path.join(filePath, filename);</span><br><span class=\"line\">                <span class=\"keyword\">var</span> fullname = filedir.split(<span class=\"string\">\"public\"</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\">                fs.stat(filedir, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">eror, stats</span>) </span>{</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (eror) {</span><br><span class=\"line\">                        <span class=\"built_in\">console</span>.warn(<span class=\"string\">'获取文件 Stats 失败!'</span>);</span><br><span class=\"line\">                    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                        <span class=\"keyword\">var</span> isFile = stats.isFile(); <span class=\"comment\">// 是文件</span></span><br><span class=\"line\">                        <span class=\"keyword\">var</span> isDir = stats.isDirectory(); <span class=\"comment\">// 是文件夹</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (isFile) {</span><br><span class=\"line\">                            parse(fullname, filedir);</span><br><span class=\"line\">                        }</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (isDir) {</span><br><span class=\"line\">                            fileDisplay(filedir); <span class=\"comment\">// 递归，如果是文件夹，就继续遍历该文件夹下面的文件</span></span><br><span class=\"line\">                        }</span><br><span class=\"line\">                    }</span><br><span class=\"line\">                });</span><br><span class=\"line\">            });</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br><span class=\"line\">}</span><br><span class=\"line\">fileDisplay(filePath);</span><br></pre></td></tr></table></figure><p>最后运行这个 Node.js 文件，就可以看到 <code>public/</code> 目录下多出很多 <code>***.page.json</code> 文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84\" class=\"headerlink\" title=\"基本结构\"></a>基本结构</h3>\n<p>这些文件内容也很简单，基本如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">    <span class=\"comment\">// 页面的标题</span></span><br><span class=\"line\">    <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"Hello World\"</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 内容</span></span><br><span class=\"line\">    <span class=\"attr\">\"page\"</span>: <span class=\"string\">\"...\"</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 路径</span></span><br><span class=\"line\">    <span class=\"attr\">\"path\"</span>: <span class=\"string\">\"/foo/bar\"</span>,</span><br><span class=\"line\">    <span class=\"comment\">// JS</span></span><br><span class=\"line\">    <span class=\"attr\">\"extraJS\"</span>: ['alert(<span class=\"string\">\"Hello World\"</span>);']</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E7%AB%AF-pjax-js\" class=\"headerlink\" title=\"前端 pjax.js\"></a>前端 <code>pjax.js</code>\n</h2>\n<p>新建一个 <code>pjax.js</code>。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%9B%BF%E6%8D%A2%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"替换链接\"></a>替换链接</h3>\n<p>我们需要先将页面当中所有本站链接转为 Pjax 的 Jump 函数。</p>\n<p>判断条件是：有链接，不带 hash，且为本站链接</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 转换页面中的链接为 Pjax 链接</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> $pjax_convertAllLinks = <span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\"><span class=\"comment\">// 所有的 a 标签</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> linkElements = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\"a\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">of</span> linkElements) {</span><br><span class=\"line\">        <span class=\"comment\">// 有链接，不带 hash，且为本站链接</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i.href &amp;&amp; !i.href.includes(<span class=\"string\">\"/#\"</span>) &amp;&amp; (i.href.startsWith(<span class=\"string\">\"/\"</span>) || i.href.match(<span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(<span class=\"built_in\">window</span>.location.hostname)))) {</span><br><span class=\"line\">            <span class=\"keyword\">let</span> thisLink = <span class=\"keyword\">new</span> URL(i.href).pathname+<span class=\"keyword\">new</span> URL(i.href).hash;</span><br><span class=\"line\">            i.href = <span class=\"string\">`javascript:$pjax_jump('<span class=\"subst\">${thisLink}</span>');`</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>另外，要转化页面链接为全路径。</p>\n<p>这里参考了下 ChenYFan 的 Service Worker 函数，需要根据实际情况做出调整。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 转换路径为全路径</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> $pjax_fullpath = <span class=\"function\">(<span class=\"params\">path</span>) =&gt;</span> {</span><br><span class=\"line\">    path = path.split(<span class=\"string\">'?'</span>)[<span class=\"number\">0</span>].split(<span class=\"string\">'#'</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (path.match(<span class=\"regexp\">/\\/$/</span>)) {</span><br><span class=\"line\">        path += <span class=\"string\">'index.html'</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!path.match(<span class=\"regexp\">/\\.[a-zA-Z]+$/</span>)) {</span><br><span class=\"line\">        path += <span class=\"string\">'/index.html'</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">return</span> path;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// $pjax_fullpath('/') =&gt; /index.html</span></span><br></pre></td></tr></table></figure><h3>\n<a href=\"https://blog.yfun.top/#%E8%B7%B3%E8%BD%AC\" class=\"headerlink\" title=\"跳转\"></a>跳转</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 跳转页面</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> $pjax_jump = <span class=\"keyword\">async</span> (path) =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">try</span> {</span><br><span class=\"line\">        <span class=\"comment\">// 是 # 就别跳转了</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (path.startsWith(<span class=\"string\">\"#\"</span>)) {</span><br><span class=\"line\">            <span class=\"built_in\">window</span>.hash = path;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"comment\">// 加载动画</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> loading = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">'div'</span>);</span><br><span class=\"line\">        loading.innerHTML = <span class=\"string\">`&lt;div style=\"position: fixed;top:0;left:0;z-index:99999;display: block;width: 100%;height: 4px;overflow: hidden;background-color: rgba(63,81,181,.2);border-radius: 2px;\"&gt;&lt;div class=\"progress-indeterminate\" style=\"background-color: #3f51b5;\"&gt;&lt;/div&gt;&lt;style&gt;#page-main{transition:0.2s;}.progress-indeterminate::before{position:absolute;top:0;bottom:0;left:0;background-color:inherit;-webkit-animation:mdui-progress-indeterminate 2s linear infinite;animation:mdui-progress-indeterminate 2s linear infinite;content:' ';will-change:left,width;}.progress-indeterminate::after{position:absolute;top:0;bottom:0;left:0;background-color:inherit;-webkit-animation:mdui-progress-indeterminate-short 2s linear infinite;animation:mdui-progress-indeterminate-short 2s linear infinite;content:' ';will-change:left,width;}@keyframes mdui-progress-indeterminate{0%{left:0;width:0;}50%{left:30%;width:70%;}75%{left:100%;width:0;}}@keyframes mdui-progress-indeterminate-short{0%{left:0;width:0;}50%{left:0;width:0;}75%{left:0;width:25%;}100%{left:100%;width:0;}}&lt;/style&gt;&lt;/div&gt;`</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 在 body 后加入 &lt;div&gt;</span></span><br><span class=\"line\">        <span class=\"built_in\">document</span>.body.appendChild(loading);</span><br><span class=\"line\">        <span class=\"comment\">// 如果页面中没有 page.css 或 search.css，为防止样式错乱，需要在加载过程中隐藏页面内容</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"page_css\"</span>) || !<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"search_css\"</span>)) <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"page-main\"</span>).style.opacity = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 获取页面数据</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> pageData;</span><br><span class=\"line\">        <span class=\"comment\">// 看看 SessionStorage 里有没有缓存</span></span><br><span class=\"line\">        <span class=\"comment\">// 依赖后文的 prefetch</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sessionStorage.getItem(<span class=\"string\">`<span class=\"subst\">${location.protocol}</span>//<span class=\"subst\">${location.hostname}</span><span class=\"subst\">${location.port ? <span class=\"string\">\":\"</span>+location.port:location.port}</span><span class=\"subst\">${$pjax_fullpath(path)}</span>`</span>)) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">\"FROM SESSIONSTORAGE\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">try</span> {</span><br><span class=\"line\">                pageData = <span class=\"built_in\">JSON</span>.parse(sessionStorage.getItem(<span class=\"string\">`<span class=\"subst\">${location.protocol}</span>//<span class=\"subst\">${location.hostname}</span><span class=\"subst\">${location.port ? <span class=\"string\">\":\"</span>+location.port:location.port}</span><span class=\"subst\">${$pjax_fullpath(path)}</span>`</span>));</span><br><span class=\"line\">            } <span class=\"keyword\">catch</span>(e) {</span><br><span class=\"line\">                <span class=\"comment\">// 还是出错就从服务器获取</span></span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"string\">\"FROM SERVER\"</span>);</span><br><span class=\"line\">                pageData = <span class=\"keyword\">await</span> fetch($pjax_fullpath(path) + <span class=\"string\">\".page.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json());</span><br><span class=\"line\">                <span class=\"comment\">// 写到 SessionStorage 中</span></span><br><span class=\"line\">                sessionStorage.setItem(<span class=\"string\">`<span class=\"subst\">${location.protocol}</span>//<span class=\"subst\">${location.hostname}</span><span class=\"subst\">${location.port ? <span class=\"string\">\":\"</span>+location.port:location.port}</span><span class=\"subst\">${$pjax_fullpath(path)}</span>`</span>, <span class=\"built_in\">JSON</span>.stringify(pageData));</span><br><span class=\"line\">            }</span><br><span class=\"line\">        } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">\"FROM SERVER\"</span>);</span><br><span class=\"line\">            <span class=\"comment\">// fetch JSON</span></span><br><span class=\"line\">            pageData = <span class=\"keyword\">await</span> fetch($pjax_fullpath(path) + <span class=\"string\">\".page.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json());</span><br><span class=\"line\">            sessionStorage.setItem(<span class=\"string\">`<span class=\"subst\">${location.protocol}</span>//<span class=\"subst\">${location.hostname}</span><span class=\"subst\">${location.port ? <span class=\"string\">\":\"</span>+location.port:location.port}</span><span class=\"subst\">${$pjax_fullpath(path)}</span>`</span>, <span class=\"built_in\">JSON</span>.stringify(pageData));</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"comment\">// 补齐页面 CSS</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"search_css\"</span>)) {</span><br><span class=\"line\">            fetch(<span class=\"string\">\"/css/search.css\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.text()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">                <span class=\"keyword\">let</span> ele = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"style\"</span>);</span><br><span class=\"line\">                ele.innerHTML = res;</span><br><span class=\"line\">                ele.id = <span class=\"string\">\"search_css\"</span>;</span><br><span class=\"line\">                <span class=\"built_in\">document</span>.body.appendChild(ele);</span><br><span class=\"line\">            });</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"page_css\"</span>)) {</span><br><span class=\"line\">            fetch(<span class=\"string\">\"/css/page.css\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.text()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">                <span class=\"keyword\">let</span> ele = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"style\"</span>);</span><br><span class=\"line\">                ele.innerHTML = res;</span><br><span class=\"line\">                ele.id = <span class=\"string\">\"page_css\"</span>;</span><br><span class=\"line\">                <span class=\"built_in\">document</span>.body.appendChild(ele);</span><br><span class=\"line\">            });</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!pageData) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 组合 state</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> state = { <span class=\"attr\">title</span>: <span class=\"string\">''</span>, <span class=\"attr\">url</span>: <span class=\"built_in\">window</span>.location.href.split(<span class=\"string\">\"?\"</span>)[<span class=\"number\">0</span>] };</span><br><span class=\"line\">        <span class=\"comment\">// 利用 history.pushState() 修改地址栏而不跳转</span></span><br><span class=\"line\">        history.pushState(state, <span class=\"string\">''</span>, path);</span><br><span class=\"line\">        <span class=\"comment\">// 修改页面标题</span></span><br><span class=\"line\">        <span class=\"built_in\">document</span>.title = pageData.title;</span><br><span class=\"line\">        <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">            <span class=\"comment\">// 滚动到页面顶部</span></span><br><span class=\"line\">            <span class=\"built_in\">window</span>.scrollTo({<span class=\"attr\">top</span>: <span class=\"number\">0</span>, <span class=\"attr\">behavior</span>: <span class=\"string\">\"smooth\"</span>});</span><br><span class=\"line\">            <span class=\"comment\">// 写入 HTML</span></span><br><span class=\"line\">            <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"page-main\"</span>).innerHTML = pageData.page;</span><br><span class=\"line\">            <span class=\"built_in\">window</span>.onscroll = <span class=\"literal\">null</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> pageData.extraJS) {</span><br><span class=\"line\">                <span class=\"keyword\">try</span> {</span><br><span class=\"line\">                    <span class=\"comment\">// eval() 执行 JS</span></span><br><span class=\"line\">                    <span class=\"built_in\">eval</span>(pageData.extraJS[i]);</span><br><span class=\"line\">                } <span class=\"keyword\">catch</span>(e) {}</span><br><span class=\"line\">            }</span><br><span class=\"line\">            <span class=\"keyword\">try</span>{$pjax_prefetch();}<span class=\"keyword\">catch</span>(e){}</span><br><span class=\"line\">            <span class=\"comment\">// 再次转换所有链接</span></span><br><span class=\"line\">            $pjax_convertAllLinks();</span><br><span class=\"line\">        }, <span class=\"number\">200</span>);</span><br><span class=\"line\">        <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">            <span class=\"comment\">// 重新显示页面</span></span><br><span class=\"line\">            <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"page-main\"</span>).style.opacity = <span class=\"number\">1</span>;</span><br><span class=\"line\">            loading.remove();</span><br><span class=\"line\">        }, <span class=\"number\">1000</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">catch</span>(e) {</span><br><span class=\"line\">        <span class=\"comment\">// 有报错 直接跳转</span></span><br><span class=\"line\">        <span class=\"built_in\">console</span>.warn(e);</span><br><span class=\"line\">        <span class=\"built_in\">window</span>.location.href = path;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>如果使用 <code>window.location.href</code> 修改，那么页面就会刷新。<br>为了实现无刷新跳转，必须要使用 <code>pushState()</code> 更改。</p>\n<p>执行 JavaScript 方面使用 <code>eval()</code> 函数。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 组合 state</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> state = { <span class=\"attr\">title</span>: <span class=\"string\">''</span>, <span class=\"attr\">url</span>: <span class=\"built_in\">window</span>.location.href.split(<span class=\"string\">\"?\"</span>)[<span class=\"number\">0</span>] };</span><br><span class=\"line\"><span class=\"comment\">// 利用 history.pushState() 修改地址栏而不跳转</span></span><br><span class=\"line\">history.pushState(state, <span class=\"string\">''</span>, path);</span><br><span class=\"line\"><span class=\"comment\">// 修改页面标题</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.title = pageData.title;</span><br><span class=\"line\"><span class=\"comment\">// 滚动到页面顶部</span></span><br><span class=\"line\"><span class=\"built_in\">window</span>.scrollTo({<span class=\"attr\">top</span>: <span class=\"number\">0</span>, <span class=\"attr\">behavior</span>: <span class=\"string\">\"smooth\"</span>});</span><br><span class=\"line\"><span class=\"comment\">// 写入 HTML</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"page-main\"</span>).innerHTML = pageData.page;</span><br><span class=\"line\"><span class=\"built_in\">window</span>.onscroll = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> pageData.extraJS) {</span><br><span class=\"line\">  <span class=\"keyword\">try</span> {</span><br><span class=\"line\">    <span class=\"comment\">// eval() 执行 JS</span></span><br><span class=\"line\">    <span class=\"built_in\">eval</span>(pageData.extraJS[i]);</span><br><span class=\"line\">  } <span class=\"keyword\">catch</span>(e) {}</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h3>\n<a href=\"https://blog.yfun.top/#Prefetch-amp-Refetch\" class=\"headerlink\" title=\"Prefetch &amp; Refetch\"></a>Prefetch &amp; Refetch</h3>\n<p>此处借鉴乐特关于 Prefetch Page 的源码，当用户打开节流模式或为低速网络时就不要 Prefetch.</p>\n<p>Prefetch 可以提前缓存部分数据。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> $pjax_prefetch = <span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">    <span class=\"comment\">// 节流和低速网络不要 Prefetch</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> nav = navigator;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> { saveData, effectiveType } = nav.connection || nav.mozConnection || nav.webkitConnection || {};</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (saveData || <span class=\"regexp\">/2g/</span>.test(effectiveType)) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">// 此处是 Blog 的一些常见链接</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> posts_list = <span class=\"built_in\">document</span>.querySelectorAll(<span class=\"string\">\".index-header a\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> posts_list) {</span><br><span class=\"line\">        <span class=\"comment\">// 全路径</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> thisLink = $pjax_fullpath(posts_list[i].href);</span><br><span class=\"line\">        <span class=\"comment\">// Session Storage 没有才 Fetch</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!sessionStorage.getItem(thisLink)) {</span><br><span class=\"line\">            fetch(thisLink + <span class=\"string\">\".page.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.text()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">                sessionStorage.setItem(thisLink,res);</span><br><span class=\"line\">            });</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>Refetch 用于刷新已有的缓存（虽然 <code>SessionStorage</code> 关闭页面就没了）</p>\n<p>其原理也很简单，<code>SessionStorage</code> 中所有的 Pjax 缓存重新获取就完事了。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> $pjax_refetch = <span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sst = sessionStorage;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i <span class=\"keyword\">in</span> sst) {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i.startsWith(<span class=\"string\">\"http://\"</span>) || i.startsWith(<span class=\"string\">\"https://\"</span>)) {</span><br><span class=\"line\">            fetch(i + <span class=\"string\">\".page.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.text()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">                sessionStorage.setItem(i, res);</span><br><span class=\"line\">            });</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%80%E4%BA%9B%E4%BC%98%E5%8C%96\" class=\"headerlink\" title=\"一些优化\"></a>一些优化</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#Prefetch-CSS-%E6%96%87%E4%BB%B6\" class=\"headerlink\" title=\"Prefetch CSS 文件\"></a>Prefetch CSS 文件</h4>\n<p>既然 CSS 文件需要补齐，那么打开页面 5s 后自动 Prefetch 可以提升速度。</p>\n<blockquote><p>5s 后再获取是为了防止阻塞页面。</p></blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">    <span class=\"comment\">// Prefetch CSS 文件</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"search_css\"</span>)) {</span><br><span class=\"line\">        fetch(<span class=\"string\">\"/css/search.css\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.text()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ele = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"style\"</span>)</span><br><span class=\"line\">            ele.innerHTML = res;</span><br><span class=\"line\">            ele.id = <span class=\"string\">\"search_css\"</span>;</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.body.appendChild(ele);</span><br><span class=\"line\">        });</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"built_in\">document</span>.getElementById(<span class=\"string\">\"page_css\"</span>)) {</span><br><span class=\"line\">        fetch(<span class=\"string\">\"/css/page.css\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.text()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">            <span class=\"keyword\">let</span> ele = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"style\"</span>)</span><br><span class=\"line\">            ele.innerHTML = res;</span><br><span class=\"line\">            ele.id = <span class=\"string\">\"page_css\"</span>;</span><br><span class=\"line\">            <span class=\"built_in\">document</span>.body.appendChild(ele);</span><br><span class=\"line\">        });</span><br><span class=\"line\">    }    </span><br><span class=\"line\">}, <span class=\"number\">5000</span>);</span><br></pre></td></tr></table></figure><h4>\n<a href=\"https://blog.yfun.top/#%E5%85%B3%E4%BA%8E-Robots\" class=\"headerlink\" title=\"关于 Robots\"></a>关于 Robots</h4>\n<p>当你运行 <code>$pjax_convertAllLinks();</code> 后，你肯定会发现所有的链接都变成了 <code>javascript:$pjax_jump('/xxx');</code>。这对机器人来说很不友好。</p>\n<p>所以，我们需要排除这些机器人。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> runningOnBrowser = <span class=\"keyword\">typeof</span> <span class=\"built_in\">window</span> !== <span class=\"string\">\"undefined\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> isBot = runningOnBrowser &amp;&amp; !(<span class=\"string\">\"onscroll\"</span> <span class=\"keyword\">in</span> <span class=\"built_in\">window</span>) || <span class=\"keyword\">typeof</span> navigator !== <span class=\"string\">\"undefined\"</span> &amp;&amp; <span class=\"regexp\">/(gle|ing|ro|msn)bot|crawl|spider|yand|duckgo/i</span>.test(navigator.userAgent);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (runningOnBrowser &amp;&amp; !isBot) {</span><br><span class=\"line\">    <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">try</span>{$pjax_prefetch();}<span class=\"keyword\">catch</span>(e){}</span><br><span class=\"line\">        $pjax_convertAllLinks();</span><br><span class=\"line\">    }, <span class=\"number\">100</span>);</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%90%8E\" class=\"headerlink\" title=\"最后\"></a>最后</h2>\n<p>在启用 Pjax 后，YFun's Blog 传输大小理论上最高缩小 3/4，性能速度均有提升。</p>\n<p>如果你也在使用 Pjax，不妨试试看。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E8%BF%98%E6%9C%89%E4%B8%80%E4%BA%9B%E9%94%99%E8%AF%AF\" class=\"headerlink\" title=\"还有一些错误\"></a>还有一些错误</h2>\n<p>如果你定义了 <code>onload</code> 等事件，页面没有刷新即代表没有变化，你需要在 <code>$pjax_jump()</code> 中简单清除一下这些信息。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%B9%BF%E5%91%8A%E6%97%B6%E9%97%B4\" class=\"headerlink\" title=\"广告时间\"></a>广告时间</h2>\n<p>我的博客即将同步至腾讯云开发者社区，邀请大家一同入驻：<a href=\"https://cloud.tencent.com/developer/support-plan?invite_code=16qkaef2qdvzm\">https://cloud.tencent.com/developer/support-plan?invite_code=16qkaef2qdvzm</a></p>\n","link":"https://blog.yfun.top/posts/2022/pjax/"},{"title":"抛弃静态博客的缺点，用 ESHexoN 在线编辑！","date":"2022-12-04 16:00:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%80%E4%B9%88%E6%98%AF-ESHexoN\" class=\"headerlink\" title=\"什么是 ESHexoN?\"></a>什么是 ESHexoN?</h2>\n<blockquote><p>ESHexoN 是一款简洁、强大的 Hexo 在线编辑器。</p></blockquote>\n<p>其灵感来自于 <a href=\"https://github.com/HexoPlusPlus/HexoPlusPlus\">HexoPlusPlus/HexoPlusPlus</a> (基于 Cloudflare Workers 的无服务器 Hexo 后端)</p>\n<p>但是，遗憾的是 HPP 突然停止维护，只留下一个 <a href=\"https://github.com/Wexagonal/Wexagonal\">Wexagonal</a>。</p>\n<blockquote><p>However, 这更新速度也太慢了啊喂~</p></blockquote>\n<p><a href=\"https://github.com/Qexo/Qexo\">Qexo</a> 也是一个很不错的项目，但是它基于 Python + MongoDB，不属于我擅长的技术栈，有点劝退。</p>\n<p>于是，ESHexoN 诞生了。它致力于使用 JavaScript Edge Function 构建 Hexo「后端」，实现普通静态博客所不具备的功能，解决大部分静态博客的痛点。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-ESHexoN\" class=\"headerlink\" title=\"如何使用 ESHexoN?\"></a>如何使用 ESHexoN?</h2>\n<blockquote><p>ESHexoN 的使用说明可以参见文档 --&gt; <a href=\"https://eshexon-docs.netlify.app/\">文档链接</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#ESHexoN-%E4%BB%A3%E7%A0%81-amp-%E5%8E%9F%E7%90%86\" class=\"headerlink\" title=\"ESHexoN 代码 &amp; 原理\"></a>ESHexoN 代码 &amp; 原理</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"代码目录\"></a>代码目录</h3>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205115647.png\"></p>\n<p><code>dist</code> 目录存放构建的文件，<code>src</code> 目录为源码，<code>tools</code> 是一些工具，<code>index.js</code> 则为入口文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%90%8E%E7%AB%AF%E7%9A%84%E4%B8%BB%E8%A6%81%E6%96%87%E4%BB%B6\" class=\"headerlink\" title=\"后端的主要文件\"></a>后端的主要文件</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#src-res-js\" class=\"headerlink\" title=\"src/res.js\"></a><code>src/res.js</code>\n</h4>\n<p><code>res.js</code> 主要负责 HTTP 响应输出，统一输出格式。</p>\n<p>故 ESHexoN API 主要返回格式为:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"statusCode\"</span>: <span class=\"string\">\"...\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"statusInfo\"</span>: <span class=\"string\">\"...\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p><a href=\"https://github.com/ESHexoN/ESHexoN/blob/master/src/res.js\">[Source Code]</a></p>\n<h4>\n<a href=\"https://blog.yfun.top/#src-check-token-js\" class=\"headerlink\" title=\"src/check_token.js\"></a><code>src/check_token.js</code>\n</h4>\n<p><code>check_token.js</code> 主要负责 API 请求的鉴权，所有的鉴权 API 都需要携带 <code>token</code> 发送。</p>\n<p>生成代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> token = md5(userdata[<span class=\"number\">0</span>].username + userdata[<span class=\"number\">0</span>].password + <span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"built_in\">Date</span>.now()).getFullYear()}</span><span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"built_in\">Date</span>.now()).getMonth()+<span class=\"number\">1</span>}</span>`</span>);</span><br></pre></td></tr></table></figure><p>故 ESHexoN Token 格式为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">md5(USERNAME+PASSWORD+YEAR+MONTH);</span><br></pre></td></tr></table></figure><p>过期时间为一个月。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#src-env-js\" class=\"headerlink\" title=\"src/env.js\"></a><code>src/env.js</code>\n</h4>\n<p>ESHexoN 除了依靠 <a href=\"https://github.com/yfun-lab/gh-worker-kv\">yfun-lab/gh-worker-kv</a> 存储主要数据库文件外，还使用环境变量存储基本的 Token、仓库等。</p>\n<p>ESHexoN 自设计之初就预备支持 Cloudflare Workers, Deno 等平台。</p>\n<p>事实上，这两个平台获取环境变量的方式根本不一样。为了在一个代码下同时支持两个平台，<code>env.js</code> 简单的写了个判断。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205120944.png\"></p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%98%AF%E4%B8%8D%E6%98%AF%E7%9B%AE%E5%BD%95%EF%BC%9F%E6%96%87%E4%BB%B6%E9%81%8D%E5%8E%86\" class=\"headerlink\" title=\"是不是目录？文件遍历\"></a>是不是目录？文件遍历</h4>\n<p>GitHub API 会返回当前目录下的文件和文件夹，但有人的 <code>source/_posts</code> 目录下还有文件夹。根据观察发现，文件夹的 <code>type</code> 为 <code>dir</code>，而普通文件为 <code>file</code>，那么只需要一个简单的判断，就可以返回单个目录下所有文件。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205121416.png\"></p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E5%86%99%E6%96%87%E4%BB%B6\" class=\"headerlink\" title=\"写文件\"></a>写文件</h4>\n<p>在写文件之前，我们需要先获取该文件的 <code>sha</code> 值。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205121728.png\"></p>\n<blockquote><p>这是因为 GitHub 规定修改文件必须在 <code>body</code> 中携带源文件 <code>sha</code>.</p></blockquote>\n<p>同时，文件还必须接受 Base64 编码。这个问题很好解决，ESHexoN 的仓库依赖中已经包含。当然，我更倾向于在前端编码文本，在后端直接 PUT。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E9%82%A3%E5%89%8D%E7%AB%AF%E5%91%A2%EF%BC%9F\" class=\"headerlink\" title=\"那前端呢？\"></a>那前端呢？</h3>\n<p>以上是后端的主要代码。因为 ESHexoN 是前后端分离项目，并且开放跨域，所以我们构建了一个官方前端。只需要输入你的用户名、密码和后端地址就可以开始使用。</p>\n<p>前端的代码也是开源的，基于 Vue + Vuetify 构建，<a href=\"https://github.com/ESHexoN/eshexon-frontend\">在 GitHub 上查看它</a></p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E4%B8%80%E4%BA%9B%E5%B0%8F%E7%BB%86%E8%8A%82\" class=\"headerlink\" title=\"一些小细节\"></a>一些小细节</h4>\n<p>早在 HexoPlusPlus <code>dev</code> 阶段的时候，ChenYFan 就在群内讨论如何解决 Markdown 编辑器的问题。在当时，EditorMD 的兼容性很差。于是，HPP 上采取的解决方案是：<code>textarea</code> + <code>marked.js</code>。</p>\n<p>然后，HPP 编辑器就是这样的：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205122539.png\"></p>\n<p>这并不是一个很好的主意。</p>\n<p>于是在 ESHexoN 上，我们为 Hexo 特性定制了一款简单的编辑器。</p>\n<p>首先，它是由 <a href=\"https://yfun.top/lab/markdown/\">https://yfun.top/lab/markdown/</a> 修改而来的，在部分特性上与其类似。</p>\n<p>但是受限于页面尺寸和小屏幕优化，ESHexoN 的编辑器在大屏上是这样显示的：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205122828.png\"></p>\n<p>双栏布局，实时预览。</p>\n<p>为了保证在小屏幕的体验，在小屏幕上将自动收起预览，改为全屏模式。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205122955.png\"></p>\n<p>如果需要预览，可以点击「预览」按键。</p>\n<p>同时 ESHexoN 的编辑器有自动保存功能，即使写到一半刷新页面或是浏览器崩溃也不用怕，页面内容已经存储到 <code>localStorage</code> 内了。（我也不知道会不会撑炸</p>\n<p>一些基本的搜索功能都得以保留（与 HPP 是十分甚至九分的类似</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205123316.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205123356.png\"></p>\n<p>不仅仅局限于文章，配置文件、代码都可以修改：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.17/rawimg/20221205123427.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%9C%A8%E6%9C%AA%E6%9D%A5\" class=\"headerlink\" title=\"在未来\"></a>在未来</h2>\n<p>目前 ESHexoN 还处于 Beta 阶段，部分功能还没有开发完成。</p>\n<p>关于说说、评论等也都在等待开发（最近可能不会有）</p>\n<p>如果在使用中出现了任何的问题，欢迎提 Issue 反馈。</p>\n","link":"https://blog.yfun.top/posts/2022/eshexon/"},{"title":"让阅读无缝衔接 —— JS 获取用户阅读进度","date":"2022-11-11 16:40:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>很多博客中最常见的问题就是：文章很长，但是读者很忙。下次阅读的时候，可能要花一些时间才能恢复到先前的阅读位置。</p>\n<p>如果可以设备间，识别二维码或是一个链接就可以让阅读无缝衔接，直接跳转到相应位置，那么阅读体验就会变得更加优秀。</p>\n<p>那么，开始吧！</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%9E%E8%B7%B5\" class=\"headerlink\" title=\"实践\"></a>实践</h2>\n<p>要知道阅读位置，那么就要知道当前页面的坐标。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getScrollPosition = <span class=\"function\">(<span class=\"params\">el = <span class=\"built_in\">window</span></span>) =&gt;</span> ({</span><br><span class=\"line\">    x: el.pageXOffset !== <span class=\"literal\">undefined</span> ? el.pageXOffset : el.scrollLeft,</span><br><span class=\"line\">    y: el.pageYOffset !== <span class=\"literal\">undefined</span> ? el.pageYOffset : el.scrollTop</span><br><span class=\"line\">});</span><br><span class=\"line\"><span class=\"comment\">// getScollPosition().x =&gt; 页面横坐标; getScrollPosition().y =&gt; 页面纵坐标;</span></span><br></pre></td></tr></table></figure><p>大部分情况下，我们只用关注纵坐标。横坐标大概率为 <code>0</code>。</p>\n<p>我们还需要一个页面滚动的事件，用于记录当前坐标，并储存在临时存储中。</p>\n<p>至于为什么是 <code>sessionStorage</code> 而不是 <code>localStorage</code>，则是因为 <code>localStorage</code> 除手动清除外，不会自动过期。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 此处的 750 是「页面元素的最大宽度」</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> wx = <span class=\"built_in\">window</span>.innerWidth &gt;= <span class=\"number\">750</span> ? <span class=\"number\">750</span> : <span class=\"built_in\">window</span>.innerWidth;</span><br><span class=\"line\"><span class=\"keyword\">var</span> wy = <span class=\"built_in\">window</span>.innerHeight;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">windowScroll</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 反复修改 确保页面尺寸不改变</span></span><br><span class=\"line\">    wx = <span class=\"built_in\">window</span>.innerWidth &gt;= <span class=\"number\">750</span> ? <span class=\"number\">750</span> : <span class=\"built_in\">window</span>.innerWidth;</span><br><span class=\"line\">    wy = <span class=\"built_in\">window</span>.innerHeight;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> y = <span class=\"built_in\">Math</span>.round(getScrollPosition().y);</span><br><span class=\"line\">    <span class=\"comment\">// 组合字符串，同时记录页面坐标，页面宽度和高度</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> p = <span class=\"string\">`<span class=\"subst\">${y}</span>:<span class=\"subst\">${wx}</span>:<span class=\"subst\">${wy}</span>`</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 写入到 sessionStorage 中</span></span><br><span class=\"line\">    sessionStorage.setItem(<span class=\"string\">\"read_y\"</span>, p);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"built_in\">window</span>.onscroll = windowScroll;</span><br></pre></td></tr></table></figure><p>你可能发现了，此处的变量 <code>p</code>，并不仅仅是「页面纵坐标」，而是「页面高度」与「纵坐标」的组合字符串。</p>\n<p>事实上，如果单纯是纵坐标判断位置，那么在不同高度，不同宽度的设备上，就会出现错位的情况。而同时记录三个信息，就可以还原真实坐标。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// URL 中是否包含传递的坐标信息</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (location.hash.split(<span class=\"string\">\"#read=\"</span>).length &gt; <span class=\"number\">1</span>) {</span><br><span class=\"line\">    <span class=\"comment\">// 分离字符串</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> read_y = location.hash.split(<span class=\"string\">\"#read=\"</span>)[<span class=\"number\">1</span>];</span><br><span class=\"line\">    read_y = read_y.split(<span class=\"string\">\":\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 组合乘积，顺滑移动至坐标</span></span><br><span class=\"line\">    <span class=\"built_in\">window</span>.scrollTo({<span class=\"attr\">top</span>: <span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Number</span>(read_y[<span class=\"number\">0</span>]) * <span class=\"built_in\">Number</span>(read_y[<span class=\"number\">1</span>] * <span class=\"built_in\">Number</span>(read_y[<span class=\"number\">2</span>] / wx / wy))), <span class=\"attr\">behavior</span>: <span class=\"string\">\"smooth\"</span>});</span><br><span class=\"line\">} <span class=\"keyword\">else</span> {</span><br><span class=\"line\">    <span class=\"comment\">// 从 sessionStorage 中获取</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> read_y = sessionStorage.getItem(<span class=\"string\">\"read_y\"</span>) || <span class=\"string\">\"0:0:0\"</span>;</span><br><span class=\"line\">    read_y = read_y.split(<span class=\"string\">\":\"</span>);</span><br><span class=\"line\">    <span class=\"built_in\">window</span>.scrollTo({<span class=\"attr\">top</span>: <span class=\"built_in\">Math</span>.round(<span class=\"built_in\">Number</span>(read_y[<span class=\"number\">0</span>]) * <span class=\"built_in\">Number</span>(read_y[<span class=\"number\">1</span>] * <span class=\"built_in\">Number</span>(read_y[<span class=\"number\">2</span>] / wx / wy))), <span class=\"attr\">behavior</span>: <span class=\"string\">\"smooth\"</span>});</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>到现在，我们已经完成了 URL 的解析和基本生成。</p>\n<p>那么，URL 即为:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">`<span class=\"subst\">${location.protocol}</span>//<span class=\"subst\">${location.hostname}</span><span class=\"subst\">${location.port ? <span class=\"string\">\":\"</span>+location.port:location.port}</span><span class=\"subst\">${location.pathname}</span>#read=<span class=\"subst\">${sessionStorage.getItem(<span class=\"string\">\"read_y\"</span>)}</span>`</span>;</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%90%8E\" class=\"headerlink\" title=\"最后\"></a>最后</h2>\n<p>搭配生成二维码等插件效果更佳。</p>\n<blockquote><p>Miracle 主题将在下个版本中更新该功能。</p></blockquote>\n","link":"https://blog.yfun.top/posts/2022/js-get-users-reading-progress/"},{"title":"React 为什么重新渲染","date":"2022-09-06 08:29:00","description":"\n<p>更新（重新渲染）是 React 的重要特性 —— 当用户与应用交互的时候，React 需要重新渲染、更新 UI，以响应用户的输入。但是，React 为什么会重新渲染呢？如果不知道 React 为什么会重新渲染，我们如何才能避免额外的重新渲染呢？</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/186432/20/28325/37613/631725bbEf2ff226e/66b99021df66578b.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/react-re-renders-101/\">https://blog.skk.moe/post/react-re-renders-101/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/react-re-renders-101/"},{"title":"为什么你不应该在 React 中直接使用 useEffect 从 API 获取数据","date":"2022-08-19 08:53:00","description":"\n<p>React 是一个由 Facebook 开源的、可以在任意平台上构建 UI 的 JavaScript 库。在 React 中，一个常见的 Pattern 是使用 <code>useEffect</code> 搭配 <code>useState</code> 发送请求、将状态从 API（React 外部）同步到 React 内部、用于渲染 UI，这篇文章恰恰在向你介绍为什么你不应该直接这么做。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/180676/37/27394/27265/62ff57f2E600b3725/cff75c5fca39bbcc.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/\">https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/why-you-should-not-fetch-data-directly-in-use-effect/"},{"title":"NPM 自动更新版本号","date":"2022-08-04 05:00:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>ChenYFan 大佬的文章：<a href=\"https://blog.cyfan.top/p/d3c51290.html\">SpeedUp!使用黑科技为你的网站提速</a> 有提到过将 Hexo 博客的全部静态文件上传至 NPM 达到加速效果。</p>\n<p>但是 NPM 版本号不能重复，而且为了精准命中缓存和防止边缘 <code>@latest</code> 缓存过长，就必须指定版本号。</p>\n<p>本人在 <a href=\"https://blog.yfun.top/posts/2876015612/\">我的图床解决方案</a> 一文中使用的方法是 <code>npm version patch</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804133426.png\"></p>\n<p>但这个方法也有一些弊端，比如 <code>patch</code> 只会更新 <code>z</code> 位数的版本号，而且并不会上传至仓库，很可能会出现版本号冲突导致上传失败。这就是为什么最后还需要重新推送 Git 提交。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E8%AF%95%E8%AF%95%E7%9C%8B\" class=\"headerlink\" title=\"试试看\"></a>试试看</h2>\n<p>NPM 版本号遵循 <code>semver</code> 规范，格式为 <code>major.minor.patch</code>。</p>\n<p>为了在获取最新版本号的时候不发生混乱，我选择先获取最新的版本号。</p>\n<blockquote><p>记得把 <code>cky-blog-static</code> 改成自己的项目名。</p></blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>获取到最新版本号后，就可以对版本号进行分析。</p>\n<p>以 <code>1.4.7-b541af2ea284a39da0bbf63b88fdb65c</code> 为例，先按 <code>major.minor.patch</code> 分离。当然，也需要考虑版本号后还有 <code>build metadata</code> 的情况。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\"><span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br></pre></td></tr></table></figure><p><del>为了版本号好看些</del>，可以通过判断实现满十进一。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位小于 9，直接 +1</span></span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">} <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\"><span class=\"comment\">// z 位大于等于 9，y 位小于 9，y+1, z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">} <span class=\"keyword\">else</span> {</span><br><span class=\"line\"><span class=\"comment\">// z 大于等于 9，y 大于等于 9，x+1,y=0,z=0</span></span><br><span class=\"line\">verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><p>最后，重新拼接版本号。如果担心服务器缓存版本号导致冲突，还可以加上一些随机字符串。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br></pre></td></tr></table></figure><p>将最新的版本号信息重新写入 <code>package.json</code> 文件：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">packageJson.version = newVersion;</span><br><span class=\"line\"><span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p><del>直接 CV 代码！</del></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 更新 package.json 版本号</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fetch = <span class=\"built_in\">require</span>(<span class=\"string\">\"node-fetch\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> md5 = <span class=\"built_in\">require</span>(<span class=\"string\">\"js-md5\"</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">\"fs\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> getVersion = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> latestVersion = <span class=\"keyword\">await</span> fetch(<span class=\"string\">\"https://registry.npmjs.org/cky-blog-static/latest\"</span>).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> res.json()).then(<span class=\"function\"><span class=\"params\">res</span> =&gt;</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.version;</span><br><span class=\"line\">    })</span><br><span class=\"line\">    <span class=\"keyword\">return</span> latestVersion;</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> update = <span class=\"keyword\">async</span>() =&gt; {</span><br><span class=\"line\">    <span class=\"keyword\">const</span> version = <span class=\"keyword\">await</span> getVersion();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> verArray = version.split(<span class=\"string\">\".\"</span>);</span><br><span class=\"line\">    verArray[<span class=\"number\">2</span>] = verArray[<span class=\"number\">2</span>].split(<span class=\"string\">\"-\"</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (verArray[<span class=\"number\">2</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">2</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (verArray[<span class=\"number\">1</span>] &lt; <span class=\"number\">9</span>) {</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">1</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">        verArray[<span class=\"number\">0</span>] = <span class=\"built_in\">String</span>(<span class=\"built_in\">Number</span>(verArray[<span class=\"number\">0</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">        verArray[<span class=\"number\">1</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">        verArray[<span class=\"number\">2</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = <span class=\"string\">`<span class=\"subst\">${verArray[<span class=\"number\">0</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">1</span>]}</span>.<span class=\"subst\">${verArray[<span class=\"number\">2</span>]}</span>`</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> newVersion = newVersion + <span class=\"string\">\"-\"</span> + md5(<span class=\"string\">`<span class=\"subst\">${<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>().getTime()}</span><span class=\"subst\">${newVersion}</span>`</span>);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(newVersion);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = fs.readFileSync(<span class=\"string\">\"./package.json\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">var</span> packageJson = <span class=\"built_in\">JSON</span>.parse(packageJson);</span><br><span class=\"line\">    packageJson.version = newVersion;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> newPackage = <span class=\"built_in\">JSON</span>.stringify(packageJson);</span><br><span class=\"line\">    fs.writeFileSync(<span class=\"string\">\"./package.json\"</span>, newPackage);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"Complete!!\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\">update();</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%9C%80%E5%90%8E\" class=\"headerlink\" title=\"最后\"></a>最后</h2>\n<p>如果是 Hexo 文件部署，就可以直接把文件直接丢在项目根目录，Action 集成部署加上：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">node update.js</span><br></pre></td></tr></table></figure><p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.16/rawimg/20220804135818.png\"></p>\n<p><del>Blog 半年没更新，除除草 --(....</del></p>\n","link":"https://blog.yfun.top/posts/2022/auto-update-npm-version/"},{"title":"我有特别的 DNS 配置和使用技巧","date":"2022-07-28 15:31:00","description":"\n<p>众所周知，DNS 的作用与电话簿类似，将人类可读的域名映射到机器可读 IP 地址、使人更方便地访问互联网。DNS 是非常重要的互联网基础设施，对于改善上网冲浪的体验中的重要程度不容小觑。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/96381/31/31172/23930/62e2ab5bE554d388b/37027f4a03351b9e.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/i-have-my-unique-dns-setup/\">https://blog.skk.moe/post/i-have-my-unique-dns-setup/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/i-have-my-unique-dns-setup/"},{"title":"优化博客的累计布局偏移（CLS）问题","date":"2022-06-07 17:24:00","description":"\n<p>距离上一篇文章发布已有四个月了，是时候写几篇文章给博客除草了。上一次我介绍了我如何迁移、重构了我的博客的架构，这次我想来谈谈我在重构中优化和打磨访客体验时解决的一个问题。我的博客优化之旅 图片 lazyload 的学问和在 Hexo 上的最佳实践 我的博客有多快？ 天下武功，唯快不破 —— 我是这样优化博客的 ...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/206311/26/14625/38940/629f7f81Eb11312de/b1e67f07b1cc9bc7.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/fix-blog-cls/\">https://blog.skk.moe/post/fix-blog-cls/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/fix-blog-cls/"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\n    return new Date(date.toLocaleString('en-US', { timeZone }))\n}\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        timeZone\n    })\n    return {\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\n        convert (date) {\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\n        }\n    }\n}\n\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\n    return converter.convert(new Date(secDate), tzName) - secDate\n}\n\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\ncmn-Hans-SG = 中文普通话-简体-新加坡\ncmn-Hant-TW = 中文普通话-繁体-台湾\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\ncmn = 中文普通话\n\nzh-Hans = 中文-简体\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\n}\n\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long'\n}\nconst now = new Date()\n\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\n\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\n\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\n\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\n\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\n\nzhCNFormatter.format(now) // 2021年10月13日星期三\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\n\njaFormatter.format(now) // 2021年10月13日水曜日\njaAltFormatter.format(now) // 令和3年10月13日水曜日\n\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\n// {locale: 'zh-CN', calendar: 'gregory', …}\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\n     // 基于一个固定日期计算，这里选择 1970.1.1\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\n    const base = new Date(1970, 0, 1).getTime()\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\n    return Array.from({ length: 7 }, (_, day) =&gt; (\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\n    ))\n}\n\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n}).formatToParts(new Date())\n// [\n//     { type: 'year', value: '2021' },\n//     { type: 'literal', value: '年' },\n//     { type: 'month', value: '10' },\n//     { type: 'literal', value: '月' },\n//     { type: 'day', value: '13' },\n//     { type: 'literal', value: '日' },\n//     { type: 'weekday', value: '星期三' },\n//     { type: 'literal', value: ' ' },\n//     { type: 'dayPeriod', value: '上午' },\n//     { type: 'hour', value: '1' },\n//     { type: 'literal', value: ':' },\n//     { type: 'minute', value: '00' },\n//     { type: 'literal', value: ':' },\n//     { type: 'second', value: '00' }\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\n}\n\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\n  timeZone: 'America/Los_Angeles',\n  year: 1995,\n  month: 12,\n  day: 7,\n  hour: 3,\n  minute: 24,\n  second: 30,\n  millisecond: 0,\n  microsecond: 3,\n  nanosecond: 500,\n  calendar: 'iso8601'\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将 […]","link":"https://flyhigher.top/develop/2160.html"}]