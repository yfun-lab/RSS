[{"title":"派评 | 近期值得关注的 App","date":"2022-05-30 09:50:22","description":"你可以通过文章目录快速跳转到你感兴趣的内容。如果发现了其它感兴趣的 App 或者关注的话题，也欢迎在评论区和我们进行讨论。<a href=\"https://sspai.com/post/73533\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73533"},{"title":"力量训练：办卡之前需要了解的训练基础与细节制定","date":"2022-05-30 07:56:12","description":"上一篇文章主要关注了抗阻训练的益处，目的是让大家正确认识抗阻训练，不知道大家有没有行动起来去尝试抗阻训练。这一篇文章我们主要介绍一些抗阻训练的进阶技巧，带你了解如何科学规划抗阻训练，同时介绍三个核心抗 ...<a href=\"https://sspai.com/post/73443\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73443"},{"title":"版本众多、结果各异：泛滥的 MBTI 测试你该信多少","date":"2022-05-30 06:38:04","description":"遭到口诛笔伐的 MBTI 真的一无是处吗？我有一些不同看法。本文将从我了解的学科角度介绍我理解的 MBTI 测试的变迁与优劣。<a href=\"https://sspai.com/post/73511\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73511"},{"title":"Missing Financial Data","date":"2022-05-30 04:12:50","description":"\n<p data-pid=\"2bnsBMJq\"><b>摘要：</b>在因子投资中，当协变量存在缺数问题时，除了填充截面或行业均值/中位数，是否还有更好的方法？</p>\n<h2><b>01</b></h2>\n<p data-pid=\"Rau3Xpu-\">协变量缺数是因子投资中绕不过的坎儿，而这个问题在另类数据中尤甚。缺数，顾名思义，就是在特定的历史时刻、对特定的股票来说、某个协变量的取值是缺失的。这个问题广泛存在于因子投资和实证资产定价研究之中。</p>\n<p data-pid=\"CZYb6pcD\">在面对缺数问题时，常见的做法是填充截面均值/中位数，或者行业均值/中位数，或者上一期的值（假设上一期没有缺数）。这些似乎是人们约定俗成的做法，从来也没有人去质疑上述处理方式的合理性。（另外一种更加粗暴的方式是，把缺数的资产排除在分析之外，但这会造成 sample selection bias。）</p>\n<p data-pid=\"Pz5r8mps\">然而，它们真的合理吗？</p>\n<p data-pid=\"XpR3EOJ6\">要想搞清楚这个问题，就必须回答一系列具体的问题：数据缺失在时序和截面上是随机的吗？还是有何种相关性（比如小市值的股票更容易缺失某些变量）？不同公司的协变量之间是否存在截面上和时序上相关性，能否利用它们更好的填充缺失的数据？无脑排除缺数的股票，对实证资产定价有怎样的影响（比如在因子溢价估计方面）？对现实世界中的投资机会又有怎样的影响（比如是否会损害可能构造的最大夏普比率）？</p>\n<p data-pid=\"3a1FydPc\">当意识到存在如此之多尚待回答的问题时，就很难再对“约定俗成”做法可能存在的潜在危害无动于衷。好消息是，学界在这方面的一些最新研究成果，有助于帮助人们回答上述问题（虽然是针对美股）。在应对实证资产定价的缺数问题方面，近期两篇颇有代表性的 working papers 是 Freyberger et al. (2021) 以及 Bryzgalov et al. (2022)。</p>\n<p data-pid=\"JAG07aFq\">由于 Svetlana Bryzgalova 和 Markus Pelger 两位都是我非常欣赏的新生代学者，今天就来简要介绍 Bryzgalov et al. (2022) 一文。本文的题目也照搬了该文的标题，特此说明。</p>\n<h2><b>02</b></h2>\n<p data-pid=\"63vs6kDz\">Bryzgalov et al. (2022) 考察了美股中最常用的 45 个公司特征（下表），缺数存在 4 点 stylized facts。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-923e8668a5939ee8561f738200172dfd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"930\" data-rawheight=\"654\" class=\"origin_image zh-lightbox-thumb\" width=\"930\" data-original=\"https://pic2.zhimg.com/v2-923e8668a5939ee8561f738200172dfd_r.jpg\"></figure><p data-pid=\"F9sTWttx\"><b>Fact 1：</b>缺数问题广泛存在于上市公司之中，受影响的公司占据了一半的市场总市值。无论公司市值是高是低，无论公司的历史是长是短，又无论公司的经营情况是好是坏，都有可能出现缺数的问题。</p>\n<p data-pid=\"sAdhbkQd\">以美股中重要的 5 个变量为例——账面市值比（B2M）、operating profitability（OP）、investment（INV）、leverage（LEV）以及real investment to book value（DPI2A）——下图展示了它们在时序上的缺数变化情况。从（a）和（b）中不难看出，随着时间的推移，缺数的比例在下降，不过仍然存在于所有变量。而（c）和（d）表明，无论是考察季度数据还是月度数据变量，以及无论考察大市值公司还是小市值公司，缺数问题都是存在的。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-a2bc64e3bcd73d05ceda0099f99dd97f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"878\" data-rawheight=\"686\" class=\"origin_image zh-lightbox-thumb\" width=\"878\" data-original=\"https://pic4.zhimg.com/v2-a2bc64e3bcd73d05ceda0099f99dd97f_r.jpg\"></figure><p data-pid=\"r8jkrOjw\"><b>Fact 2：</b>当分析中需要用到众多协变量时（比如利用机器学习算法），缺数问题的影响更加严重。</p>\n<p data-pid=\"hGGI31se\">同样是上述 45 个变量，下图展示了不同允许缺数变量个数下，公司占比随时间的变化。比如，图中蓝色曲线代表 = 0 的情况，即要求不存在任何变量的缺失。在这个约束下，满足条件的公司仅占不到 30%。换句话说，如果研究中同时使用上述 45 个协变量且要求仅使用没有任何缺数的公司，那么 70% 的公司都会被排除在外。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-bc43301f96313cea9624a84ab7d49540_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"626\" data-rawheight=\"418\" class=\"origin_image zh-lightbox-thumb\" width=\"626\" data-original=\"https://pic1.zhimg.com/v2-bc43301f96313cea9624a84ab7d49540_r.jpg\"></figure><p data-pid=\"1P7BzDu3\"><b>Fact 3：</b>公司特征的缺失并非随机的。比如，很多基本面变量可能用到了同样的会计学条目来计算，那么一旦该条目缺数，就会影响基本面变量的计算；又比如，对于历史时间较短的公司，一些长周期的量价变量（比如中期动量和长期反转）自然也就无法计算。</p>\n<p data-pid=\"-8dMuVKS\">下图（a）展示了 1981 年 4 月实际的缺书情况，其中横轴为 45 个公司特征，纵轴为公司 index。图（b）展示了假想的随机缺失的情况。如果缺数是随机的，那么我们在不同的变量上应该观察到无序的随机性，如图（b）所示。而真实情况下（图（a））则显示了截然不同的情况，很多公司在不同的变量上均存在缺数的情况。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-89974ddfd86fe3cd374a10b4411084dd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"830\" data-rawheight=\"342\" class=\"origin_image zh-lightbox-thumb\" width=\"830\" data-original=\"https://pic2.zhimg.com/v2-89974ddfd86fe3cd374a10b4411084dd_r.jpg\"></figure><p data-pid=\"xdndNNGQ\">仍以前述 5 个公司特征为例，下图（a）考察了不同市值分组下的缺失比例，可见小市值（第 1 组）相对大市值组（第 5 组）的缺数问题更加严重；图（b）则以变量本身进行分组，考察了每组的缺数程度。看到这里有的小伙伴也许会问：如果变量都缺数了还怎么分组？这里的处理方法是利用股票在该变量上取值的均值作为分组的依据。结果显示，当按照变量排序时，最小的组（第 1 组）和最大的组（第 5 组）往往缺数问题最为严重。由于因子或异象通常是通过这两组多空对冲构造的，因此这两组缺失严重无疑是进行实证资产定价或因子投资的梦魇。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-377a19829abe43d44e68e79ef59a057d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"992\" data-rawheight=\"645\" class=\"origin_image zh-lightbox-thumb\" width=\"992\" data-original=\"https://pic2.zhimg.com/v2-377a19829abe43d44e68e79ef59a057d_r.jpg\"></figure><p data-pid=\"GBw3bh3W\">另一方面，由于变量本身的构造机制以及使用的数据的差异，不同变量的缺数存在异质性。这些问题均使得“约定俗成”的中位数或均值填充不再合理（因为均值或中位数是有偏的）。</p>\n<p data-pid=\"qbaJ37Wa\">下面两图分别展示了每个变量自身的时序自相关性以及不同变量的截面相关性。从中不难发现，一些变量在时序上的自相关性非常高（比如市值），有些则为零（比如特质波动率 iVol）；此外，很多变量的截面相关性很高。这些结果表明，不同变量的缺数问题存在特质性，而为了找到比“约定俗成”更好的填数方法，需要充分利用变量在时序和截面上的信息。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-4a3102232d538260058300cf34783021_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"947\" data-rawheight=\"610\" class=\"origin_image zh-lightbox-thumb\" width=\"947\" data-original=\"https://pic2.zhimg.com/v2-4a3102232d538260058300cf34783021_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-a87f778ed60bc1acf1e540389d9e8e98_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"727\" data-rawheight=\"691\" class=\"origin_image zh-lightbox-thumb\" width=\"727\" data-original=\"https://pic1.zhimg.com/v2-a87f778ed60bc1acf1e540389d9e8e98_r.jpg\"></figure><p data-pid=\"muxrYaoP\"><b>Fact 4：</b>股票的收益率与公司是否缺数有关，对实证资产定价的研究结果（比如简单如 portfolio sort）造成了复杂的影响。</p>\n<h2><b>03</b></h2>\n<p data-pid=\"sTiuUhnM\">为了利用变量的截面和时序信息，Bryzgalov et al. (2022) 针对公司特征协变量构造了一个隐性多因子模型。</p>\n<p data-pid=\"z6wvr52C\">以截面信息为基础，该模型的重要因素如下面这张 slide 所示（其中 <img src=\"https://www.zhihu.com/equation?tex=C_%7Bi%2Cl%7D%5Et\" alt=\"C_{i,l}^t\" eeimg=\"1\"> 表示公司特征，上标 <img src=\"https://www.zhihu.com/equation?tex=t\" alt=\"t\" eeimg=\"1\"> 表示时间，<img src=\"https://www.zhihu.com/equation?tex=i\" alt=\"i\" eeimg=\"1\">表示股票，<img src=\"https://www.zhihu.com/equation?tex=l\" alt=\"l\" eeimg=\"1\">表示变量）。该文利用 PCA 估计隐性多因子模型，并使用 Xiong and Pelger (2019) 的方法应对估计中的缺数问题。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-a433b2007ab8e65b4ecd35e89ff51c8b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"814\" data-rawheight=\"572\" class=\"origin_image zh-lightbox-thumb\" width=\"814\" data-original=\"https://pic4.zhimg.com/v2-a433b2007ab8e65b4ecd35e89ff51c8b_r.jpg\"></figure><p data-pid=\"SfZ5Tc9c\">PCA 结果显示，公司特征之间表现出了很强的因子结构；使用 6 个因子就可以捕捉绝大部分截面上的变化。此外，这些因子也有很强的经济学解释。图（b）展示了样本外填充的公司特征的 RMSE 随隐性因子个数的变化。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-11ca89cbfb8be04d08a444d773e761bd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1077\" data-rawheight=\"632\" class=\"origin_image zh-lightbox-thumb\" width=\"1077\" data-original=\"https://pic2.zhimg.com/v2-11ca89cbfb8be04d08a444d773e761bd_r.jpg\"></figure><p data-pid=\"XnBwcWmT\">有了基础的截面模型，Bryzgalov et al. (2022) 进一步添加了时序的公司特征，构造了同时包括截面和时序信息的隐性因子模型。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-969a04aabf3dc768cb31e2b81e5ebf61_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"789\" data-rawheight=\"598\" class=\"origin_image zh-lightbox-thumb\" width=\"789\" data-original=\"https://pic2.zhimg.com/v2-969a04aabf3dc768cb31e2b81e5ebf61_r.jpg\"></figure><p data-pid=\"Lm-NHgHk\">最后我们来看看不同模型和“约定俗成”模型在样本外的表现。不过这里先插一句，在前述的介绍中，就提到了样本外 RMSE 的计算。有小伙伴可能会问：既然是缺数，怎么算是“样本外”？这里的处理方法是，刻意隐去（masking）一部分观测到的公司特征（随机选择，记为 OOS MAR 或者在选择上保留时序连续性，记为 OOS Block），用剩余观测数据进行建模，然后用这部分隐去的数据进行样本外评估。评估结果如下表。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-d18492d1f39b86729abcae91af88d68d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"968\" data-rawheight=\"690\" class=\"origin_image zh-lightbox-thumb\" width=\"968\" data-original=\"https://pic2.zhimg.com/v2-d18492d1f39b86729abcae91af88d68d_r.jpg\"></figure><p data-pid=\"619BpAKx\">以我标出的 local B-XS 和 local XS 两个模型为例，它们都是单期条件模型，其中 B-XS 用到了截面信息和历史时序信息，XS 仅用到了截面信息。另外两个“约定俗成”模型是 XS-median，即截面中位数填充和 ind-median，即行业中位数填充。结果显示，无论是在样本内还是在样本外（OOS MAR 或 OOS Block），通过主成分分析得到的预测均优于“约定俗成”模型，即它们的预测误差更低，且改进非常明显。</p>\n<p data-pid=\"vHwyJASR\">另一方面，从 local B-XS 和 local XS 两个模型结果的差异可知，补充了时序信息后能够进一步提高预测准确性，说明时序和截面信息对于填充缺数来说同样重要。对于一些时序上自相关性很强的变量，上述隐性因子模型能够更多地利用时序信息；而对于那些截面上信息更重要的变量，该模型则更多地利用截面信息。换句话说，该模型并不依赖于人们对于 missing patterns 的假设，而是能够从数据中发现并加以利用。</p>\n<p data-pid=\"63SWqrot\">最后来看两个具体的例子。考虑 Microsoft 和 Hasbro 两个公司，考虑 operating profitability 和 iVol 两个变量。图中灰色的区间是留出的 OOS 区间，图中 0.0 的水平线表示“约定俗成”做法的填充。从这两个例子中可以看到，无论是对于 OP 这种比较稳定的变量，还是对于 iVol 这种上蹿下跳的变量，模型都能给出不错的填充结果，远远优于填充 0.0。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-97ddc2bb35aab6fa3f2d905ec87d2dfe_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"751\" data-rawheight=\"705\" class=\"origin_image zh-lightbox-thumb\" width=\"751\" data-original=\"https://pic3.zhimg.com/v2-97ddc2bb35aab6fa3f2d905ec87d2dfe_r.jpg\"></figure><h2><b>04</b></h2>\n<p data-pid=\"DlqjAJLI\">以上和各位一起简要浏览了 Bryzgalov et al. (2022) 一文的核心内容和结果。在近日的一个 talk 中，Bryzgalov 提到她们后续会把填充好的数据挂出来，供学界和业界使用。当有了更合理填充后的公司特征后，一些传统的异象或因子的表现是否会发生颠覆性的改变？答案令人期待。</p>\n<p data-pid=\"5wp89M6f\">另一方面，Bryzgalov et al. (2022) 对于缺数的研究还给了我另外的一个强烈的感受。近年来，机器学习算法已经被广泛应用于实证资产定价和因子投资之中。然而，越来越多的研究表明，在如此低信噪比的金融领域，指望“数据发声”的粗暴做法是不切实际的。反而是小到数据如何标准化、不同的协变量如何进行缩放，如何选择正则化的方式等每一个具体的细节决定着应用机器学习算法的成败。</p>\n<p data-pid=\"Uoj4RCE2\">Bryzgalov et al. (2022) 关于缺数的研究毫无疑问再次说明了这一点。一个看似不起眼的填充决定，也许就会改变应用机器学习的结果。而到底应该使用哪种数据处理方式（例如“约定俗成” vs. 该文同时利用时序和截面信息构造的隐性模型）背后显然也应该有足够的经济学推导作为指引。这些看似很小的差异，也许在其他高信噪比的机器学习应用领域难以产生太大的影响，但对于实证资产定价的成功来说，可能正是必不可少的一环。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"FctkECJT\">More to come …</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"j7X0CEVX\"><b>参考文献</b></p>\n<ul>\n<li data-pid=\"GxzQwhUc\">Bryzgalov, S., S. Lerner, M. Lettau, and M. Pelger (2022). Missing financial data. Working paper.</li>\n<li data-pid=\"GSE-8Rak\">Freyberger, J., B. Hoppner, A. Neuhierl, and M. Weber (2021). Missing data in asset pricing panels. Working paper.</li>\n<li data-pid=\"8HdgGDAn\">Xiong, R. and M. Pelger (2019). Large dimensional latent factor modeling with missing observations and applications to causal inference. <b><i>Journal of Econometrics</i></b> forthcoming.</li>\n</ul>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"gAqfjRHD\"><b>免责声明：</b>入市有风险，投资需谨慎。在任何情况下，本文的内容、信息及数据或所表述的意见并不构成对任何人的投资建议。在任何情况下，本文作者及所属机构不对任何人因使用本文的任何内容所引致的任何损失负任何责任。除特别说明外，文中图表均直接或间接来自于相应论文，仅为介绍之用，版权归原作者和期刊所有。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"82SoeHUd\">原创不易，请保护版权。如需转载，请联系获得授权，并注明出处。已委托“维权骑士”(<a href=\"https://link.zhihu.com/?target=http%3A//rightknights.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">维权骑士-版权保护 版权知识 原创检测 识别字体 著作权登记</a>) 为进行维权行动。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/mitcshi?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">石川</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/517848480?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"有没有那种男女主暧昧不清的心动小鹿乱撞的感觉的现言小说？","date":"2022-05-30 03:52:42","description":"\n<h1>舔狗太撩</h1>\n<p data-pid=\"TA2oLAcm\">救命！ </p>\n<p data-pid=\"eaAXGob3\">如果我有罪请让法律制裁我，而不是让我备受煎熬，男色当前，只能嘶哈嘶哈。 </p>\n<p data-pid=\"T3Newr9v\">眼前的江知行，身上只围着一条浴巾，好身材一览无余。 </p>\n<p data-pid=\"Ca5l0Nq-\">我明显看到化妆师给他抹油的时候，吞咽了一下口水。 </p>\n<p data-pid=\"SYwgng9v\">不怪她。 </p>\n<p data-pid=\"vIw0RSUi\">确实色气满满，秀色可餐。 </p>\n<p data-pid=\"akz1fgeD\">连我的脑海里都开始自动播放一些付费画面，还有一句话：「从此君王不早朝。」 </p>\n<p data-pid=\"4B40MriR\">打住打住打住！ </p>\n<p data-pid=\"OSa-qSqt\">作为一个临时被拉来凑数当演员的社畜，我要有职业精神，不能在工作的时候心生邪念，毕竟我也是“老演员”了，不能怂啊。 </p>\n<p data-pid=\"S70wTJ7v\">下一秒，江知行的声音飘过来：「徐未晚，你干什么呢？」 </p>\n<p data-pid=\"sHiMRghc\">我猛然回神，强装镇定：「嗯 ，怎么了？」 </p>\n<p data-pid=\"AVVg1W9w\">江知行突然俯身向前，安全距离瞬间打破。 </p>\n<p data-pid=\"7ExJm0h5\">我反应极快，战术后仰，手却被江知行攥住。 </p>\n<p data-pid=\"DEcLHlbq\">他把我的手举到面前：「徐未晚 ，你掐什么呢？」 </p>\n<p data-pid=\"ylZeH_Oh\">我心跳入鼓，却面不改色：「哦，我有点困，掐掐自己好清醒一点。」 </p>\n<p data-pid=\"K0v9tug_\">江知行有点好笑的样子，声音里透着三分无奈五分大度：「但你掐的是我。」 </p>\n<p data-pid=\"VGJRT6td\">？！ </p>\n<p data-pid=\"vImzmO8-\">「不好意思啊，我昨晚睡得晚，今天困成狗了......」我做出一副无比真诚且自责的样子，「没，没掐疼你吧。」 </p>\n<p data-pid=\"tMTrfa_b\">手再次被抓住。 </p>\n<p data-pid=\"bjImpV_t\">啊，无地自容了朋友们。 </p>\n<p data-pid=\"hPAqaQAr\">江知行放开我的手，眼睛凝视着我，一开口就是致命一击：「别碰，怕痒。」 </p>\n<p data-pid=\"qVW4HVB9\">该死。 </p>\n<p data-pid=\"z2k8QN_-\">我忘记他的副业是配音了。 </p>\n<p data-pid=\"_4fukrDW\">这声音真是要命。 </p>\n<p data-pid=\"Hf7h7ipp\">但我也不是吃素的，作为一名专业打工人，我决定扭转局势，速战速决，用公事公办的语气对还在调机器的任强说：「任强，我们好了，拍吧。」 </p>\n<p data-pid=\"c9RSpq1x\">任强是我招进来的导演，刚毕业没多久，性子直。 </p>\n<p data-pid=\"dPEwSU2C\">他听到我的招呼，看过来的时候顿住了，一脸委屈地开口：「好什么好啊未晚姐，这位帅哥是好了，可是你这满头大汗满脸通红的样子一点也不符合拍摄情境，咱们拍的是情侣间嬉闹，不是完成时，懂?」 </p>\n<p data-pid=\"Qi33e0ce\">现在的年轻人真是什么虎狼之词都敢说！ </p>\n<p data-pid=\"LxcdP0ng\">吃了熊心豹子胆了！ </p>\n<p data-pid=\"MKO8LP1b\">我顿时感觉无地自容，万箭穿心，只盼着原地去世。 </p>\n<p data-pid=\"Bb0YxhXF\">去世前还想跟任强掰头一番以证清白，江知行却扯过旁边的纸巾，坐上前，纸巾带着他手掌的温度掠过我的脸颊，我往后挪了一寸，被他轻轻按住：「别动，帮你擦擦。」 </p>\n<p data-pid=\"JWB2KZCi\">擦什么擦。 </p>\n<p data-pid=\"KeL2hONk\">越擦越热。 </p>\n<p data-pid=\"F0-n9hl7\">江知行好像看出了我的心思，嘴角弯起，顺手拿起桌上的冰水，贴在我脸上，我扶着冰水，他抽开手，玩味地看着我，一副看戏的样子。 </p>\n<p data-pid=\"X8b2MO9r\">我压低声音，没好气的说：「你怎么也来拍这种东西了？」 </p>\n<p data-pid=\"CMtNxoeg\">江知行看着我，一脸无辜的模样：「什么东西，哪种东西？」。 </p>\n<p data-pid=\"6pBHoR1v\">顿了顿，又反问我：「你不也在拍这种东西？」 </p>\n<p data-pid=\"vP8gdjty\">我想说就是这种为了博取点击量，有意无意让人浮想联翩的小广告，但又觉得没有必要说这么多。 </p>\n<p data-pid=\"uTKs1CRQ\">「那不一样，我是为了工作，而且我是临时被拉来的，没办法，这是我自己带的项目。」我一股脑说完，觉得自己义正言辞。 </p>\n<p data-pid=\"lClGTmvM\">江知行一脸坦荡：「我也是为了工作」。 </p>\n<p data-pid=\"yvVaKw1u\">他紧了紧腰间的浴巾，又抬头看我，用肆无忌惮的眼神，转瞬又笑得明朗：「所以，敬业点，徐策划。」 </p>\n<p data-pid=\"P2PO_w0c\">我气结，刚要反驳，又听到他在耳边大放厥词。 </p>\n<p data-pid=\"3GMynDvx\">「不该想的不要想。」 </p>\n<p data-pid=\"294oxVvA\">我徐未晚出了名的敬业，你是在教我做事？ </p>\n<p data-pid=\"fGHwrynx\">不气不气我不气，气出病来无人替，我缓缓吐了一口气，非常peace and love地说：「放心，我会，非常，敬业的。」 </p>\n<p data-pid=\"FJfSfXBm\">2.</p>\n<p data-pid=\"t3KBOzyd\">正式开拍。 </p>\n<p data-pid=\"F0XOvNNn\">任强一边说戏，我和江知行一边当着工具人。 </p>\n<p data-pid=\"H0UJpvpG\">「男生把手放女生脖子上，侧头，来，女生靠近男生一点，往他左脸靠。」 </p>\n<p data-pid=\"Tc5yhsEr\">江知行的气息如薄雾轻抚而过，好痒。 </p>\n<p data-pid=\"Wl39-zTZ\">我将肩膀几缕散乱的头发撩到后边，不经意间却瞥见将知行目光闪躲。 </p>\n<p data-pid=\"RyE1bCV0\">任强还在说戏，他是完全不管我的死活。 </p>\n<p data-pid=\"0J6uQtHe\">「我们再来一遍。男生揽着女生的肩，两人对视，露出幸福的笑容，找一找坠入爱河的感觉，感情要真，多给我一点，不要害羞嘛。」 </p>\n<p data-pid=\"Q-VfWuXT\">江知行龟速靠近，我感觉到他的手掌贴着我肩膀的皮肤，热热的，一双清亮的眸子多了几分雾气，少了几分平日的霸道。 </p>\n<p data-pid=\"KtPUsnmU\">如果不是在工作我就要举旗投降了。 </p>\n<p data-pid=\"I8Y4Ju63\">反正看不清脸，我把心一横，摆出职业假笑，就像临场发挥一样自然地勾住他的脖子，用轻不可闻的声音在他耳畔说：「江知行，敬业一点，不该想的不要想。」 </p>\n<p data-pid=\"c22h3kt0\">江知行的眼神霎时变得充满侵略性，像草原上发现猎物的小狮子。 </p>\n<p data-pid=\"vsgIByBE\">完蛋，这个人好像激不得，我暗自懊悔。 </p>\n<p data-pid=\"RZMQGJv2\">突然，他用手抵住我的后颈，把我往他身边送，然后，在众目睽睽之下，当着我所有同事的面，亲了我一口！ </p>\n<p data-pid=\"XSOXHx2J\">这个突如其来的吻，大概持续了......五秒！ </p>\n<p data-pid=\"8_rd7SyN\">空气稍稍一滞。 </p>\n<p data-pid=\"49pak3_G\">我的大脑好像当机了，发出嗡嗡的声音。 </p>\n<p data-pid=\"vsk5Q_LJ\">好像还有旁人低低的惊呼声。 </p>\n<p data-pid=\"gDJScHJm\">任强咳嗽了一声，秉持只要他不尴尬尴尬的就是别人的原则继续说戏：「很好，最后一个镜头，男生扶着女生的头，两人贴近。好，咔！」 </p>\n<p data-pid=\"U8HovHL8\">光线瞬间暗了下来，江知行的脸还是清晰可见，我的头枕在他的手上，他的人在距离我不到20厘米的位置，眼睛如同夜空里的星子 。 </p>\n<p data-pid=\"0ZU6iWn-\">一如既往的耀眼。 </p>\n<p data-pid=\"gLxa42Ub\">可是这么耀眼的人拒绝过我。 </p>\n<p data-pid=\"3BYGZrA_\">想想，就忿忿不平。 </p>\n<p data-pid=\"ePCi5Iz6\">任强的声音再度响起： 「很好，但是脚本里好像没有吻戏……不过效果挺好的，大家收工吧！」 </p>\n<p data-pid=\"nGYOCUkD\">拍摄的同事一个跑的比一个快，很快，房间里就剩下我和江知行。 </p>\n<p data-pid=\"lal_80sK\">我的大脑终于重启成功，想起刚才江知行亲我的事，脸上顿时烧得慌。 </p>\n<p data-pid=\"wRElhUxe\">我挣扎着想起来，江知行却把我圈得更紧，我用力瞪他：「你刚才干嘛！」 </p>\n<p data-pid=\"vuwKKrT_\">江知行声音蛊惑，贴在我耳边：「不是你叫我敬业一点吗，我入戏了。」 </p>\n<p data-pid=\"4N5o-_TA\">我稳住心绪，尽量不被美色冲昏头脑，「江知行，你知不知道这样很不尊重人？」 </p>\n<p data-pid=\"TK3P0dxq\">江知行：「知道。」 </p>\n<p data-pid=\"wGpbAZ4m\">「知道你还......」 </p>\n<p data-pid=\"OWqCatww\">「对不起」 </p>\n<p data-pid=\"P2JgYiTx\">...... </p>\n<p data-pid=\"bEdZy9RJ\">「可是你刚才，张嘴了。」 </p>\n<p data-pid=\"akrQ5pyk\">江知行勾唇，笑得肆意。 </p>\n<p data-pid=\"s5KAe0Oj\">我错愕！ </p>\n<p data-pid=\"tB7MEy8j\">我哪有张嘴？ </p>\n<p data-pid=\"fQMdN05D\">我......应该...... </p>\n<p data-pid=\"tU4afq0u\">没有张嘴.....吧...... </p>\n<p data-pid=\"W1ltVuxm\">「再说，这是你该还我的......」 </p>\n<p data-pid=\"n5KCDkSR\">我尖叫一声，用手捂住他的嘴不让他继续说。 </p>\n<p data-pid=\"sFwyPkvk\">我知道他要说什么。 </p>\n<p data-pid=\"qQSzjNr8\">他要说那年大学毕业晚会我趁他不备偷亲他的事！ </p>\n<p data-pid=\"2mSrMExV\">他要说我跟他告白被拒的事！ </p>\n<p data-pid=\"Q4FC9K7_\">全是黑历史，我徐未晚从小认真学习，尊敬师长，助人为乐，积极向上，团结同事，努力工作，唯一的污点就是跟模特队队长江知行告白被拒，奇耻大辱啊。 </p>\n<p data-pid=\"o1jLN5X7\">从那以后我每次看到好看的小哥，脑海里就会冒出江知行拒绝我的那张脸，叫人好不泄气！ </p>\n<p data-pid=\"pZjvhTH_\">当年我色令智昏，借着酒意就敢对模特队队长江知行无脑告白，还狗胆包天地亲了人家一口，江知行十分震动，然后拒绝了我。 </p>\n<p data-pid=\"HKnamcb2\">据围观群众说，我当时的告白堪称舔狗模范，什么哥哥，你是我见过最好看的男人。想和哥哥谈恋爱，想在哥哥的鼻梁上滑滑梯。 </p>\n<p data-pid=\"1acQ4kbT\">呕，想吐。 </p>\n<p data-pid=\"V_IjMZQF\">当时的徐未晚已经死了。 </p>\n<p data-pid=\"PwWdNEhR\">现在回来的是钮祜禄氏·徐未晚。</p>\n<p data-pid=\"MktDvN0F\">没看完的点击下方图片继续看哈！</p>\n<a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://www.zhihu.com/question/355515763/answer/2350967774\" class=\"internal\">有哪些甜文值得推荐？</a><p></p>\n<p></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/li-zhi-tang-gong-zi?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">荔枝傥公子</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/515356903/answer/2352326613?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">1 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/472465867?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么《我喜欢你的信息素》在晋江榜单前面，感觉一般般啊？</a><br><a href=\"http://www.zhihu.com/question/513705278?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">有没有贴近生活的现言甜甜的小说！?</a><br>\n","link":"http://www.zhihu.com/question/515356903/answer/2352326613?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"为什么任务清单如此令人不满？","date":"2022-05-30 03:37:27","description":"为什么任务清单如此令人不满？因为我们不得不面对无限的可能性和有限的生命之间的张力。<a href=\"https://sspai.com/post/73453\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73453"},{"title":"游戏技术策划（Technical Designer）核心竞争力是什么？在团队中能够起到怎样的关键作用？","date":"2022-05-30 03:18:56","description":"\n<p data-pid=\"GvtR9Oev\">[感谢我的同事 Epic Games 资深游戏设计师 何骞 撰写此文，希望能帮助到各位开发者]</p>\n<p data-pid=\"78YMwTtU\">与技术美术（Technical Artist）类似，技术策划（Technical Designer）并非一个全新的职位概念，作为游戏设计职业发展的一个重要分支，技术策划这一职业定位在欧美的大型游戏开发商中已存在十数年之久。随着项目规模的进一步扩张以及游戏系统复杂度的进一步提升，技术策划团队在项目的开发中往往也会起到更为关键的作用。近几年，随着国内游戏行业的蓬勃发展以及项目规模的扩张，对游戏开发各个部门的专业能力以及沟通要求也提出了新的挑战，作为沟通游戏设计以及其他开发部门之间的桥梁，技术策划一职也自然而然地进入了更多人的视野。<br></p>\n<p data-pid=\"bJQ_qF5y\">回到问题自身，笔者首先尝试明确如下的定义：</p>\n<p data-pid=\"_eGDnrT9\"><br>【<u><b>什么是技术策划？技术策划是干什么的？】</b></u></p>\n<p data-pid=\"T-MS0Zvd\"><br>若干年前，笔者曾听到过对技术策划的简短定义：”<u>a designer who can code</u>”，意即拥有编程能力的策划。这定义当然不能算错，不过和现实项目中技术策划的工作重心相比，显然就不够精确。</p>\n<p data-pid=\"eyXTFDeE\">如果以笔者此前的工作经验来下一个定义，技术策划是<u>游戏开发中遇到具体设计问题时引导并提供具体（跨团队）解决方案的设计负责人</u>。技术策划的存在，可以填补设计团队和程序以及其他团队之间空缺的联系，以确保设计和开发方向的统一并高效助力设计团队完成开发任务。针对这点，Cedric Hauteville在GDC 2019上有一场名为Technical Designers: The Master Link Between Engineering and Design的分享可以作为参考。<br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-2ce8aaa3f5c7685464c86117656dfc1c_720w.png?source=b1748391?rss\" data-caption=\"互联网梗图：设计与开发方向南辕北辙\" data-size=\"normal\" data-rawwidth=\"458\" data-rawheight=\"570\" data-watermark=\"original\" data-original-src=\"v2-2ce8aaa3f5c7685464c86117656dfc1c\" data-watermark-src=\"v2-5082fa1f9a1c990eecdc2c8b0b793e2f\" data-private-watermark-src=\"v2-006353cb1d6a5899cba777383b76d7b1\"></p>\n<p data-pid=\"rQFLwlFD\"><br>在解决项目开发问题的过程中，技术策划的职责是需要帮助界定设计问题的本质、基于现有的引擎和工具资源快速创作原型以验证解决方案可行性和拓展性、协同其他开发部门（特别是程序开发部门）的同事完成整套设计方案的实现以及确保最终成品的产品质量。考虑到大型项目的分工，技术策划往往也会将工作重心分配在游戏核心玩法验证、任务系统支持、开放世界内容创作工具、用户体验支持等不同方面的内容。某些大型开放世界项目的技术策划团队可能会有十来人分别负责支持不同的游戏子系统和内容开发，以保证团队可以无障碍地并行工作。</p>\n<p data-pid=\"oUz6HUCn\">一个好的技术策划，他的背景可能是一个好的游戏玩法策划、关卡策划、游戏程序员抑或是一个好的技术美术，而他们的共同点往往是游戏开发中的通才，对于游戏设计理念和架构各方面都有基础的理解并且在某些方面有特别深入的了解和研发能力，从而可以为设计团队扫清开发中的各种障碍，让其他人可以更专注地进行设计、执行工作。</p>\n<p data-pid=\"Ccputbs8\">需要注意的是，不同游戏公司对于技术策划的定位和实际职责或多或少都会有一些差异，比如Call of Duty项目组对技术策划的岗位定位会更偏向于脚本能力（特别考虑到这个职位需要使用到GSC这一门类C的脚本语言，可参考<u><a href=\"http://link.zhihu.com/?target=https%3A//careers.activision.com/job/R012465/Technical-Designer-Treyarch\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Treyarch</a><a href=\"http://link.zhihu.com/?target=https%3A//careers.activision.com/job/R012465/Technical-Designer-Treyarch\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">的招聘需求</a></u>），而Rockstar的岗位需求则除了脚本能力之外，对开放世界的内容创作和工具管线都有一定的需求（可参考）。不过总体说来，哪怕技术策划的工作并不要求实际进行C++或者C#的编程工作，对编程或是脚本语言的了解和应用能力，都是能够让技术策划能够更好立足及服务于设计团队的关键技能之一。<br></p>\n<p data-pid=\"m5t5bT7M\">在下面的部分，笔者会尝试更进一步的介绍技术策划的关键技能和核心竞争力。<br><br>【<u><b>技术策划的核心竞争力是什么？】</b></u></p>\n<p data-pid=\"UNFT-dTw\">在上面的部分，我们已经提到过技术策划包括从界定设计问题到确保最终成品质量在内的工作职责。笔者根据之前的工作经验和心得，则简略地将技术策划的核心竞争力划分为如下的几点以供参考：</p>\n<p data-pid=\"MfrLdwjF\"><br>一.<b>硬技能</b></p>\n<p data-pid=\"eI8e2HI2\"><br>这一部分会介绍技术策划的一些关键的硬技能，特别是完成特定设计任务的能力，同时也可以很好地在游戏项目开发中来具体地衡量和评估技术策划的工作成果。</p>\n<p data-pid=\"sZPYFh5q\"><br>①<u>Full-Fledged Game Designer with Technical Capabilities / 拥有技术能力的成熟游戏策划</u></p>\n<p data-pid=\"FvFm7heV\"><br>说到底，技术策划依然需要立足于游戏策划的工作基础之上（换句话说，一个设计能力不合格的游戏策划是很难成为一个合格的技术策划的），技术策划除了关注具体的设计实施方案之外，更需要了解这个方案给玩家带来的体验（user experience），可用性（usability）或是重复可玩性（replayability）等方面的内容。</p>\n<p data-pid=\"loUgMEmF\">技术策划最重要的技能和职责之一，是与其他部门的人（程序开发、美术、动画、音频、叙事设计等等）进行沟通，并且能够真正理解不同部门的人考虑的重点，理解他们的语言体系以及工作方式并且报以相应的同理心。</p>\n<p data-pid=\"l2nGIvFa\">需要注意的是，技术策划往往不是为了自己在工作，在像引擎或者工具团队提出需求时，他们也需要考虑到其他非技术人员的可用性问题，比如在设计和实现一套近战攻击系统时，如何让美术和动画团队更方便地参与进来快速地迭代以及尝试新的想法，而不是每一个需求都需要经过程序或者技术策划之手才能实现。</p>\n<p data-pid=\"OFObUOHH\"><br>②<u>In-depth Game Engine Knowledge / 深入了解游戏引擎知识</u></p>\n<p data-pid=\"70KEyZEw\"><br>不管项目中使用的是自研引擎还是如虚幻引擎或者Unity在内的商业引擎，技术策划都应当对引擎的基础知识有比较扎实的理解。这里并不是要让技术策划成为面面俱到，事无巨细的百科全书（事实上，很多细节问题查询官方文档恐怕要比靠死记硬背更为有效），而是希望技术策划能够快速地定位到引擎的具体功能和限制所在，从而更好地提出具体的设计解决方案。以虚幻引擎为例，了解<u><a href=\"http://link.zhihu.com/?target=https%3A//docs.unrealengine.com/5.0/en-US/unreal-engine-actor-lifecycle/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Actor Lifecycle</a></u>和<u><a href=\"http://link.zhihu.com/?target=https%3A//docs.unrealengine.com/5.0/en-US/networking-and-multiplayer-in-unreal-engine/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">网络机制</a></u>，对于开发联机游戏和处理优化问题都有很好的助益。<br>之前在和一位技术策划朋友聊天的时候曾提到过一个概念<u>Constraints Generate Creativity</u> ，意即“限制催生创造力”。这里的限制往往就来自于引擎限制以及游戏项目相关的规范，而明晰这些限制和规范，则可以更好地提供有创造性的解决方案。</p>\n<p data-pid=\"3bxlr7_B\"><br>③<u>Solid Prototype Skills / 扎实的游戏原型制作技能</u></p>\n<p data-pid=\"v0gucBQH\"><br>技术策划产常见的工作职责是为项目中某一功能模块或者流程体验提供游戏原型开发的支持，这一原型往往会做为Vertical Slice / 垂直切片（亦有称之为Minimal Playable Product，即最小可玩版本）用以验证游戏玩法设计，以及保证可以在此基础上验证设计可行性，以及未来可以拓展成为更丰富玩法和内容产出模式。</p>\n<p data-pid=\"XoFcF4bq\">在这个原型的构建过程中，技术策划往往起到了比较核心的开发骨干作用，利用现有的引擎脚本工具和基础系统，在不需要程序团队大规模参与进来的前提下就可以实现游戏原型的制作和针对相应基础的探索。这点在项目早期的概念设计（Conception）和预制作（Preproduction）阶段尤其重要，可以省下许多不必要的成本以及更早地验证项目和相关系统的开发方向。</p>\n<p data-pid=\"36xJ3Tlm\">需要注意的是，制作游戏原型的过程中，技术策划亦需要考虑到该系统和玩法的拓展性，以及尽量减少使用比较偏门而无法使用到最终产品中的方案（no hack solution），制作原型的目标并不仅仅是为了展示特定效果，更重要的是保证产品能够最终按照此标准落地。<br></p>\n<p data-pid=\"8ZFTel86\"><b>二.软技能</b></p>\n<p data-pid=\"SlPhyRa3\">这部分则是技术策划一些比较不那么容易用具体产出来衡量的能力，但往往也都是一些优秀的技术策划所拥有的共性。</p>\n<p data-pid=\"y2Bb0WBz\"><br>①<u>Be A Modernized Designer / 努力做一个</u> <u>“现代化”</u> <u>的设计人员</u></p>\n<p data-pid=\"wF1qoVPp\"><br>技术策划需要有好的技术能力，也需要有好的技术嗅觉，在很多方案的设计和实现上，不能简单地被既有的项目经验所禁锢，而是需要因地适宜，根据人员配置和实际项目需求来制作合理的实现方案，切忌生搬硬套，粗暴套用以往的成功经验和方案到新的项目中来。</p>\n<p data-pid=\"YWw9pVRP\">除此之外，技术策划也需要对市场上新兴的技术方案有一定的了解所在，在合适的时机将新的方案验证、引入到开发管线中，很有可能能够收获到不错的效果，又或者是作为未来项目开发中的备选技术方案使用。</p>\n<p data-pid=\"-XDOkHQ0\"><br>②<u>Make Rational Trade-offs / 合理权衡方案利弊</u></p>\n<p data-pid=\"ZdrSAZh6\"><br>针对具体的设计难题，往往没有一个最优解可以解决所有问题，而是在有若干个次优解的情况下需要选取其中某些方向进行验证并坚持下去。在权衡这些方案的过程中，技术策划的决断力会受到很大的考验，而且往往也会受限于各种因素而难以做出理性的判断。越是这样的情况下，就越需要减少个人情感和临时冲动的影响来做出相关决定，而是要梳理清楚不同方案的利弊，以及如何验证及衡量接下来的开发工作。</p>\n<p data-pid=\"9dCEoq8X\">而权衡这些方案的过程中，技术策划一定要保持和不同技术团队的紧密沟通，保证大家都确实了解到问题所在以及实现这些方案的利弊（Pros and Cons）甚至于某些情况下不得不做出的牺牲，从而找到相对比较好的平衡方案确保可以顺利执行下去。</p>\n<p data-pid=\"J_78IIrk\"><u>③Help The Design Team Grow / 帮助设计团队成长</u></p>\n<p data-pid=\"PLvTcHmL\"><br>一个好的技术策划，必然不是一个藏私的技术策划，除了为设计团队提供技术支持之外，技术策划也可以主动为给团队分享自己的经验和学习到的知识中，在这个过程中不光可以帮助团队一起成长，也可以很好地温习、巩固自己的知识体系。</p>\n<p data-pid=\"FJ1H_rqs\">此外，技术策划可以根据项目此前的积累，以及项目开发中遇到的各种问题，为设计团队（以及其他包括美术、音效在内的跨部门合作）制作各种最佳实践的规范，以帮助团队完成更好的协作和表现效果。这些最佳实践可以包含游戏场景中的具体制作和物件摆放规则，游戏任务从开始到执行以及最终结束的流程优化以及游戏脚本的写作规范等等，最终的目的都是保证游戏更好的成品质量，以及减少不同团队以及不同策划之间的沟通成本。<br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-58b5cb91245cb0e36242cff3d62e1fce_720w.jpg?source=b1748391?rss\" data-caption=\"引自Ayesha Siddiqi，“做你年轻时需要的人”\" data-size=\"normal\" data-rawwidth=\"750\" data-rawheight=\"750\" data-watermark=\"original\" data-original-src=\"v2-58b5cb91245cb0e36242cff3d62e1fce\" data-watermark-src=\"v2-26bebd642024a0ac7c6eaa6623d618a8\" data-private-watermark-src=\"v2-b1ea4968c059be98d68540b3dc14eb7b\"></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/epicyou-xi-shang-cheng?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Epic游戏商城</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/534544209/answer/2507277531?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">7 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/534524335?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">什么特质会让你立刻觉得一个游戏技术策划（Technical Designer）很靠谱？</a><br><a href=\"http://www.zhihu.com/question/503354364?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">游戏策划的从业门槛是否正变得越来越高？</a><br>\n","link":"http://www.zhihu.com/question/534544209/answer/2507277531?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：博通收购 VMware、三星将减产三千万台手机等","date":"2022-05-30 00:53:41","description":"你可能错过的新鲜事博通宣布收购VMware5月27日，美国芯片制造商博通（Broadcomm）宣布以总金额610亿美元收购VMware，并承担后者约80亿美元的债务。这是今年以来全球第二大收购案，仅次 ...<a href=\"https://sspai.com/post/73508\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73508"},{"title":"游戏阵容「缩水」、玩家问题不断，全新 PlayStation Plus 会员值得订阅吗？","date":"2022-05-29 07:07:41","description":"全面拥抱订阅制的索尼，在全新 PS Plus 会员制度的解题思路上会有什么异同之处？目前服务的体验如何？借着这篇文章，我想和大家分享一下自己目前的使用感受；也希望能为犹豫是否要订阅的你，提供一些有价值的参考。<a href=\"https://sspai.com/post/73490\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73490"},{"title":"如何评价动画电影《哆啦A梦：大雄的宇宙小战争2021》？","date":"2022-05-29 05:38:30","description":"\n<blockquote data-pid=\"n5FW5ROK\">剧透预警，长文预警</blockquote>\n<p data-pid=\"Fjo9TJn1\">我仍然记得小时候初次翻开《大雄的宇宙小战争》时的情景。那是我第一次了解到《哆啦A梦》居然还有200页的超长篇章，也是我第一次知道，<b>《哆啦A梦》描绘的不仅是日常点点滴滴的趣事，还有那些惊心动魄的异世界大冒险。</b>小夫的模型摄影、静香的牛奶浴、十岁的天才总统、鲸鱼型的航空母舰、无敌的地球坦克、最终的绝地逆转……这些元素，早已深深镌刻在我的脑海里。</p>\n<p data-pid=\"AmY-bLXo\">正因如此，两年以来我一直迫切地期待着《宇宙小战争2021》的上映，却又担忧这部作品能否完美展现原作的魅力。而当我走出电影院时，我发现自己对原作的喜爱，与欣喜、失望、兴奋、困惑种种情感杂揉在一起，让我的感受变得微妙了起来。总体来说，<b>诸多令人失望的改编与氛围渲染上的不足导致其终究无法达到新魔界、新铁人那样的高度，但优秀的原作保证了本作的下限，仍然给予了这部电影不错的观感。</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-a117e474195043e371626933fa9c91a7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-a117e474195043e371626933fa9c91a7\" data-watermark-src=\"v2-8be1f362d57120961c17f994e96389e3\" data-private-watermark-src=\"v2-6b112cb119dd652ec4763155d8532836\"></p>\n<h2>人物形象</h2>\n<p data-pid=\"qC5NXYMI\">这部电影相比原作最大的改动，当属对主角巴比的形象更加细致立体的刻画。在原作中，巴比尽管只有10岁，却显得远远比大雄他们成熟。面对陌生的“巨型生物”，他不卑不亢地介绍自己；意识到自己给他人添了麻烦，他彬彬有礼地想要告别；与PCIA长官德拉哥鲁鲁为解救静香而对峙时，他一身正气地让对方妥协；即使被送上法庭接受了不公正的审判，他依然大义凛然地说出了掷地有声的话语。</p>\n<p data-pid=\"VPM-6kev\">而本作中的巴比虽然也具备了这些特质，但却显得更加“孩子气”一些。他会因为把静香错认为姐姐而慌张，会因为一行人不听自己劝阻鲁莽行事而生气，会因为看到物是人非的景色而感伤。在公众面前，他必须表现得有责任心、坚韧不拔、一丝不苟，因为他是要为整个国家的未来负责的总统。但在私下，他也只不过是个十岁的孩子，一直绷紧的神经总是要放松的，一直压抑的情感也总有喷薄而出的一天。于是，我们在故事的结尾看到，在与姐姐两个人独处的时候，他终于完全卸下了自己的心防，将内心的情感全部转化为了响彻天空的哭喊。<b>如果说一般的人物成长意味着变得更加成熟，那么巴比的成长反而体现为对原始自我的释放。</b>想必，国民们也会喜欢这个有人情味的总统的。</p>\n<p><img src=\"https://pica.zhimg.com/v2-be3dad090cd5c7eeff8ed511004985c9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-be3dad090cd5c7eeff8ed511004985c9\" data-watermark-src=\"v2-2410ea2e90133a3101696548020015e6\" data-private-watermark-src=\"v2-4b16ab15e766b1c927d31d5f0cac4de8\"></p>\n<p data-pid=\"LB9NWx83\">将原本较为扁平的人物进行立体化的塑造，自然值得赞扬。但这也就意味着作品中需要花费更多笔墨来描写这一人物，比如增加他与五人组之间的互动。简单的对话还不够，双方必须要爆发激烈的冲突才能让人印象深刻。于是，当五人组好不容易从PCIA手中救下巴比时，他的第一反应不是感谢，不是惭愧，而是为朋友们的鲁莽感到生气。他执拗地认为，比利卡星的事不能给地球人添麻烦，自己被抓走才是最好的结果。<b>巴比这里体现出的固执性格与原作中的表现截然不同，让这个人物不再完美，而是有了自己的些许小缺点。</b>至于这种塑造是好是坏，就完全由各位观众自行判断了。</p>\n<p data-pid=\"RS6e2A5R\">为了突出巴比的孩子气，本作还加入了一位新人物——巴比的姐姐皮娜。可是，皮娜的人物塑造就显得乏善可陈了，整部电影没有给人留下任何深刻的印象。我们不难从巴比的回忆中看出姐弟两人亲情的羁绊，可是由于正面的描写实在太少，在整个故事中的作用显得可有可无。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-efed5d91e00fc12f0a93d936c73606eb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-efed5d91e00fc12f0a93d936c73606eb\" data-watermark-src=\"v2-7c581e4b1fba3640a5761c901800b1a0\" data-private-watermark-src=\"v2-59e83a42a9b4410f6f91518eb2676c2e\"></p>\n<p data-pid=\"DJ97JnTR\">而且，作为严肃的战争题材，原作的情感抒发极为内敛。我在这部电影上映之前曾分析过《宇宙小战争》的主题：</p>\n<a href=\"https://www.zhihu.com/question/428401464/answer/2504871845\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-888adf4a5b2f2ed7d1bba30848c1d4d4_qhd.jpg?source=b1748391\" data-image-width=\"968\" data-image-height=\"714\" class=\"internal\">哆啦A梦哪个超长篇最值得细品？</a><p data-pid=\"wRwU2GnS\">其中就提到“人心”，即人类意志在作品中所占的核心地位。相比整部作品一直强调的人物意志，情感则全靠自然流露，没有过多的着墨。但这部电影却添加了不少煽情戏份，尤其是大雄与巴比的经典“夜谈”有些用力过猛。而由于对皮娜塑造的缺失，姐弟情的渲染也仅仅是点到为止，没有能够成为《新魔界大冒险》中母女情这样的点睛之笔，着实有些遗憾。</p>\n<h2>剧情</h2>\n<p data-pid=\"FEAv_xhn\">在大刀阔斧改动人物形象的同时，剧情结构也不可避免地会发生变化。然而，这部电影改编部分多少都值得斟酌。<b>原作的剧情脉络是，在绝望之中燃起一线希望，却又再次落入绝望的深渊，最后奇迹般地大逆转。</b>这种先抑后扬的结构无疑能让观众在屏住呼吸保持许久的紧张感后爆发出无与伦比的爽快感。然而，这部电影却完全抛弃了原作的剧情推动方式，无论是紧张感还是爽快感都无法与原作比拟。</p>\n<p data-pid=\"Um7XSZLX\">最典型的一段当属巴比只身前往公园营救静香的情节：在原作中，静香只能眼睁睁地看着载着巴比的宇宙飞船飞向远方，而追随主人来到地球的洛克洛克也只能对着寂静的夜空仰天长嚎。要保护的人被敌人带走，关键道具缩小灯也落入敌方之手，五人组由此陷入了整个故事中最绝望的境地。然而，为了拯救自己的朋友，也为了让比利卡星重获和平与自由，五人组还是毅然踏上了抗争的征途。在宇宙飞船里，每个人都心情凝重，正如静香所说，<b>“现在不是享受的时候”</b>，他们的肩上承担着整个星球的未来。</p>\n<p><img src=\"https://pica.zhimg.com/v2-843ac26f005fcbe78b91a555777331f5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1291\" data-rawheight=\"939\" data-watermark=\"original\" data-original-src=\"v2-843ac26f005fcbe78b91a555777331f5\" data-watermark-src=\"v2-ca4b047ba24567f8aaea9d5ac6bcfc91\" data-private-watermark-src=\"v2-80ae618bd52c93e1788283f607158e6a\"></p>\n<p data-pid=\"rnwiTCu0\">然而，改编的情节却破坏了这种绝望感和悲壮感。在巴比即将被带走时，男孩子们驾驶着模型坦克帅气地赶到，在一番华丽的战斗后顺利把静香和巴比都带回了基地。<b>巴比的悲壮之举成了无用功，而五人组也马上沉浸在了计划成功的喜悦中，紧张感瞬间化为乌有。</b>尽管一行人为了拯救皮娜和比利卡星还是乘上了宇宙飞船，但毕竟皮娜不同于与五人组早已建立了友情的巴比，观众无法移情，自然也就无法体会到那种同伴落入敌方手中的危机感。更何况，在宇宙飞船上一行人还享受起了美食，愈发将氛围推离了大战之前的凝重。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-e0e80e59785a8ee41fb2d017104a4cae_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-e0e80e59785a8ee41fb2d017104a4cae\" data-watermark-src=\"v2-c942dfa85b35c9227f0bef3c93aa83a4\" data-private-watermark-src=\"v2-425e42650d16bdbc62896601b88eeaed\"></p>\n<p data-pid=\"Y-TOQ8KZ\">当然，这段情节或许是为了让巴比留在五人组身边，方便深入塑造而作出的妥协。但还有很多剧情上的细节也作出同样的修改，实在让人无法解释。</p>\n<p data-pid=\"TldmvW0q\">让我意难平的一点是，<b>PCIA这个反派组织相比原作压迫力大大减弱。</b>原作中PCIA碾压五人组的情节，在本作中都给后者留下了一线生机。比如PCIA包围自由同盟基地时，原作中瞬间就将所有人一网打尽，本作却给了自由同盟通风报信、从地下通道逃走的机会。还有原作中没有任何刻画，单纯服从命令的PCIA士兵，本作中却成了毫无用处的谐星，专门拖长官的后腿，不听指挥放跑大雄，面对示威群众落荒而逃，丝毫没有身为反派的“自觉”。而且，五人组获得生机之后并没有改变原先的剧情走向，绕了一圈弯路之后还是陷入了原来的危机，那么改动这些剧情的意义何在呢？</p>\n<p><img src=\"https://pic2.zhimg.com/v2-3f1fbc876c6820168a9b8bc1f83da4c0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-3f1fbc876c6820168a9b8bc1f83da4c0\" data-watermark-src=\"v2-f76a0a2748b3428028e750b5e993a734\" data-private-watermark-src=\"v2-be6a45c10250fef73f8238f19dede7bf\"></p>\n<p data-pid=\"_DelTBXZ\">除了紧张感之外，最终决战的爽快感同样有所减弱。原作中胖虎骑上“鲸鱼”，用毛衣蒙住其头部的名场面，我至今记忆犹新，不知为何电影中却没有复现出来。德拉哥鲁鲁被捉到后的表现过于冷静，甚至还跟五人组谈起了条件，完全没有战败的感觉。所谓的“保障部下安全”的承诺也十分突兀。当然还有罪魁祸首吉尔莫亚，被群众包围后瘫坐在了地上便戛然而止，可是应该有很多人像我一样想看他被打得鼻青脸肿、落荒而逃的吧。</p>\n<p data-pid=\"haEvvPg5\">好在本作并没有颠覆原作的大体框架，大部分的精彩情节都得到了不错的再现。看到小夫用精心制作的模型和机械拍出华丽的战争场面时，我仍会心潮澎湃；看到静香为巴比准备的城堡一般的梦幻宅邸时，我也仍会怦然心动。在于反派的斗智斗勇中，虽然PCIA的压迫力减弱了，但长官德拉哥鲁鲁算无遗策的形象反而愈加突出，突袭秘密基地、识破流星伪装、包围地下组织……他那标志性的阴冷狞笑在大银幕上显得更加令人胆寒。而五人组的表现也是如此，尤其是静香孤独地向战场出发，小夫随之赶来并肩作战的情节，即使我已经读过无数遍依然为两人人性的光辉所感动。</p>\n<h2>主题</h2>\n<p data-pid=\"gZhbvGgq\">虽然剧情氛围的渲染逊于原作，但在主旨的表达方面这部作品还是与原作保持了一致——“人心”的力量。</p>\n<p data-pid=\"CcX-w0H0\">从设定之初，总统巴比和独裁者吉尔莫亚的形象就形成了鲜明的对立：巴比是民选总统，他能成为一国领导，靠的正是民众的“人心”；而作为独裁者的吉尔莫亚，为了权力不惜与千万国民为敌，尽失“人心”。巴比最大的特点就是照顾他人，不愿给他人添麻烦。正是因为他这种温柔体贴、富有责任感的性格，才让如此多的民众自发组建了自由同盟与强权对抗；而吉尔莫亚深知自己不得人心，害怕遭到背叛而无法信任任何人，只愿派遣无人战斗机参与战争，到头来还是孤单一人。看起来，这场战斗是八十万大军对自由同盟的数百人，<b>但有了成千上万的国民“人心”的支持，数百人的星星之火终会呈燎原之势，烧毁这摇摇欲坠的独裁军政府。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-4b74cdaa54b552ce45a04dded6663e7a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-4b74cdaa54b552ce45a04dded6663e7a\" data-watermark-src=\"v2-d7313b3e343131bfd4a32403017edbf1\" data-private-watermark-src=\"v2-28aaf8952f12962079283682f0b7b3fa\"></p>\n<p data-pid=\"JhUqObsD\">这种“人心”的力量同样体现在五人组身上，尤其是静香和小夫的一段情节将“人心”的意义诠释得淋漓尽致。</p>\n<p data-pid=\"ZH3B0kT_\">当听闻数千架无人战斗机来势汹汹的时候，小夫害怕得缩在角落躲了起来。的确，敌我力量差距悬殊，既然明知道此行凶多吉少，明知道自己的牺牲也难以改变绝望的现实，那为什么还要去送死呢？面对小夫的哭喊，静香没有说话，而是用行动作出了回应：为了不愧对自己的心。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-819e0fd72bd8fb1d4b5154ec519e84e2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"973\" data-rawheight=\"359\" data-watermark=\"original\" data-original-src=\"v2-819e0fd72bd8fb1d4b5154ec519e84e2\" data-watermark-src=\"v2-8201d39de45872a44208510ee6134099\" data-private-watermark-src=\"v2-8d3f6b4c7ecbc84e7cb5a18e8d90b2d3\"></p>\n<p data-pid=\"Wk6jQ8DA\">生命固然宝贵，宝贵到对死亡的恐惧深入我们每个人内心的最深处。然而人类的内心就是这么神奇，那种不屈于独裁者的意志，那种对自由与和平的追求，真的能够推动人的精神超脱对死亡的恐惧，爆发出意想不到的力量。是的，<b>“人心”的力量，正是这样的伟大理想赋予人类的克服人性弱点、保持坚定意志的强大精神力量。</b>正因有了这种力量，人类才不会拘束于个人的安危，而是放下个人利益，为人类共同的未来而奋斗。我们之所以有今天，不也是因为前人们团结一致的“人心”推动了历史的进程吗？</p>\n<p data-pid=\"SOea-0wg\">正因如此，吓得浑身发抖的小夫仍然开动坦克走上了前线；正因如此，眼看静香陷入危险的他没有丝毫犹豫，立刻用自己的车身挡下了敌人的攻击——这一刻，是小夫在《哆啦A梦》这部作品中最帅气的一个瞬间。</p>\n<p><img src=\"https://pica.zhimg.com/v2-4f31266046c4b9be4216f740fc17c42e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-4f31266046c4b9be4216f740fc17c42e\" data-watermark-src=\"v2-81f1b049d5f0ddecf2353780385442b8\" data-private-watermark-src=\"v2-0a0ae8243657ff2b7d82f8b6f9efceae\"></p>\n<h2>其他</h2>\n<p data-pid=\"Tv6So_sp\">本作的作画与演出都相当不错，全程保持了高水准，大雄和哆啦A梦初次变小时的镜头流畅的视角转换体现了制作组的用心。<b>尤其是静香画得实在太棒，在细致的动作和神态加持下可爱之极，牛奶浴和在海洋中变大的名场面也都还原得相当出色。</b>单凭这一点我也要给这部作品稍稍加点分。漂亮的空战镜头和动感的“马戏”也看得人直呼过瘾，宇宙战争的科幻感铺面而来。然而，服部隆之的音乐这次又犯了老毛病，大半部电影都完全游离于剧情之外，而且没有让人记得住的旋律。插入曲虽然还不错，但因为缺少相应的气氛渲染，效果无法与《月球探险记》相比。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-5763f41ab82734c2539b3f0a76f82e98_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-5763f41ab82734c2539b3f0a76f82e98\" data-watermark-src=\"v2-c39597d08cc7efac342ed2fdec907005\" data-private-watermark-src=\"v2-48cb82fcfbfb8533148ed2474fdb95d0\"></p>\n<p data-pid=\"zReLyPii\">另外，作品结尾大家一起拍摄的《宇宙大战争》无疑填补了原作的模型摄影不了了之的遗憾，最后还迫害了一次出木杉，真是喜闻乐见。</p>\n<h2>结语</h2>\n<p data-pid=\"XR7u5MMK\">站在巨人的肩膀上，《宇宙小战争2021》并没有给我们交出一份满意的答卷。不过，当我看到大雄变小后大快朵颐哈密瓜的时候，还是会感觉由衷地艳羡；当我看到静香放下小夫的鞋子，跑向模型坦克的时候，我还是会从心底感到一丝感动。这部作品，包含了<b>藤子·F·不二雄老师太多的奇思妙想，也融入了他对和平的向往，对人类意志的力量终将战胜违背人心的强权的愿望</b>。无论如何，能将藤子老师的这些思想用新时代的方式展现在大众，特别是孩子们的眼前，就是这部作品无可比拟的价值。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f015f5a8e1e1a630f1d3bcd11a6e07a9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-f015f5a8e1e1a630f1d3bcd11a6e07a9\" data-watermark-src=\"v2-df9c3232fe76225f38a7f8f984ce1e19\" data-private-watermark-src=\"v2-720ef49255d7896b6983f80060075675\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/shi_mmer?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Shimmer</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/519952582/answer/2505693635?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">33 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/532135555?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">剧场版动画 《哆啦A梦：大雄的宇宙小战争 2021》确认引进内地，这部动画有哪些看点？</a><br><a href=\"http://www.zhihu.com/question/532135089?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《大雄的宇宙小战争 2021》确定引进国内，你有哪些期待？</a><br>\n","link":"http://www.zhihu.com/question/519952582/answer/2505693635?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"看什么 · 特别篇丨小孩子看有点幼稚，但成年人看刚刚好","date":"2022-05-29 03:00:00","description":"大小孩子都能看的 11 部作品<a href=\"https://sspai.com/post/73495\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73495"},{"title":"在《白色相簿2》里，哪一条线最完美，哪一条线最真实？为什么？","date":"2022-05-28 08:42:07","description":"\n<p data-pid=\"ipZ34iib\">最真实的肯定是<b>唯一在官方公式书</b>里被标上True end的千晶TE。也是<b>超现实要素浓度最低</b>的一条线。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b68765068b527e084058c0f6cc0242cb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"360\" data-rawheight=\"301\" data-watermark=\"watermark\" data-original-src=\"v2-b68765068b527e084058c0f6cc0242cb\" data-watermark-src=\"v2-41b6f8ebdef24402f3315d43ed2e7bf6\" data-private-watermark-src=\"v2-426365b554cb1f743f4b2d46c6c962a8\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-b22c05c95f520ac8f2e9a3a1a7a77210_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"636\" data-rawheight=\"634\" data-watermark=\"watermark\" data-original-src=\"v2-b22c05c95f520ac8f2e9a3a1a7a77210\" data-watermark-src=\"v2-bfd59d452deafaca07099e93af7ec137\" data-private-watermark-src=\"v2-bb134f9ae59e45f4ea6754bb2fc54851\"></p>\n<p data-pid=\"oaG_LLQU\">即便是所有的配角支线全都收束在冬马结局，笔者也得承认冬马结局根本没有TE的标。毕竟coda结束时期是2013年2月29这个现实中根本不存在的日子——虽然也从没听说过GALGAME要按现实逻辑走对吧？</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b3a6d2821c5c51d70312873c71ccd895_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"402\" data-watermark=\"watermark\" data-original-src=\"v2-b3a6d2821c5c51d70312873c71ccd895\" data-watermark-src=\"v2-cec8ed2e4bb523699609ea345dc7caa9\" data-private-watermark-src=\"v2-d100e891e04885def5fec266244e4342\"></p>\n<p data-pid=\"ZxbDk3nk\">事实上自93年《<span class=\"nolink\">河原崎家の一族</span>》引入路线分支选项设计之后，视觉小说就与单线程的传统小说在阅读体验上产生了差距。分支选项的存在使得玩家必然会多次经历同一天的同一事件，然后通过改变选择的方式进入新的剧情。从这一步开始视觉小说的读者就已经在经历一种超现实的游戏体验。</p>\n<p data-pid=\"OwqM9PRb\">很多的创作者都在尝试使用各种方法来弥补这种阅读体验上的失真，比如AIR的翼人轮回，Clannad的光玉系统，Little busters的“世界的真相”，infinity系列的无限轮回、MUV的平行世界，以及meta系游戏的降次元打击。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-486ad9e70364de5e54528b386facf65b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"450\" data-watermark=\"watermark\" data-original-src=\"v2-486ad9e70364de5e54528b386facf65b\" data-watermark-src=\"v2-290cf10b0c2a93ded98cbf01ca0d9e68\" data-private-watermark-src=\"v2-63cd8e669386707d7ae3990867d84fc1\" data-tags=\"porn\"></p>\n<p data-pid=\"xLL4c5js\">这也使得Galgame成为了涉及到时间、轮回、次元、平行世界题材的试验田，在这一主题下诞生过许多的先锋作品，连深夜动画的史一《魔法少女小圆》也是Gal创作者走出去创作的，算是在这棵大树上结下的果子。</p>\n<p data-pid=\"w6uzVx_h\">《白色相簿2》作为丸户的集大成之作，理所当然的使用了六套幻想剧情的创作方式作为其Galgame创作生涯的总结。本文我不能保证我的分类是不是对的，如果出错，那么就是我搞混了会有两套12个。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-c45d24d289b592f74275a7735efbdf22_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1271\" data-rawheight=\"714\" data-watermark=\"watermark\" data-original-src=\"v2-c45d24d289b592f74275a7735efbdf22\" data-watermark-src=\"v2-96df4ba40306a6f0f0f56923d8fe4989\" data-private-watermark-src=\"v2-456a20fd789631f1663d49a70672c636\"></p>\n<p data-pid=\"6afdWCta\">主要是这个狗东西在剧本中每个手法只用一次，比如麻理线使用的好感赠礼系统就是Gal传统的经典回礼系统。但这玩意全剧只在麻理身上用了一次。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-e693c67f7b09d9cfbcddd90cfc7fcc55_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"815\" data-rawheight=\"635\" data-watermark=\"watermark\" data-original-src=\"v2-e693c67f7b09d9cfbcddd90cfc7fcc55\" data-watermark-src=\"v2-8b462a16b1fae607734d56b605113611\" data-private-watermark-src=\"v2-5b3dd7c42c88c98fd5f58a91a33d98e8\"></p>\n<p data-pid=\"34ob8xtp\">而其他手法，涉及到故事的解谜内容。</p>\n<p data-pid=\"gjAF-aBh\">老Gal玩家们应该都知道08年，也就是白色相簿2草创阶段有这么一部名作在剧情中要求要你自己找出世界的“非现实之处”来解开世界的真相、如果你将故事中都合之处视为理所当然，那么你将无法解开世界的答案。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-359fd7276839ad32ea5dd10f4b006867_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"405\" data-watermark=\"watermark\" data-original-src=\"v2-359fd7276839ad32ea5dd10f4b006867\" data-watermark-src=\"v2-9c20f3119ff339653244b3b0a4831e10\" data-private-watermark-src=\"v2-ee7606f2be608ae4515f2fe98e327197\"></p>\n<p data-pid=\"jyiE3nLO\">让我们开始吧——</p>\n<h2>充满都合与BUG的世界</h2>\n<p data-pid=\"0QYJGNG0\">十年前《白色相簿2》新发售时最为人诟病的地方就是剧本极其都合，各种事件的刻意安排的痕迹很重，机械降神的手法用得非常多。甚至丸户自己都在剧本中吐槽有一部分展开很都合：</p>\n<blockquote data-pid=\"vDUyPdpI\">CC 126-2 大学教室<br>春千武<br>依然、说是存在着我向她偿还的道路。<br>那道路、说是不止是我、她也能得救的。<br>那般、如此露恶又都合的美好梦话、<br>至今也顽固地相信着。<br>把自己的事束之高阁。</blockquote>\n<p data-pid=\"0FS2kzJR\">深究的话，问题更大：</p>\n<h3>只在2013年2月29日异常的雪</h3>\n<p data-pid=\"bBczsqwv\">在Closing结局，冬马发来演奏会成功了的短信。随后春希跟雪菜告别，去往车站的路上，下起了雪。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d7eabed11ebb169ddc40e8f13130f3e6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"537\" data-watermark=\"watermark\" data-original-src=\"v2-d7eabed11ebb169ddc40e8f13130f3e6\" data-watermark-src=\"v2-ba1d7d26e968cc08613d080c54781595\" data-private-watermark-src=\"v2-32eec3c8094bbd0630e795d9be003ded\"></p>\n<p data-pid=\"Te73kqvI\">而在时之魔法结局，这场雪直到第二天的凌晨1点才下起来。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5a1d0fc363050c51eeef0f573ee2e42c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"563\" data-watermark=\"watermark\" data-original-src=\"v2-5a1d0fc363050c51eeef0f573ee2e42c\" data-watermark-src=\"v2-7edb285f1e590067a696b03d4baa61ab\" data-private-watermark-src=\"v2-bd98c4ee3fd47fc67b8e33eeff915596\"></p>\n<p data-pid=\"P843nWPA\">参考我做的时间线，我们来捋一下这个事：</p>\n<a href=\"https://www.zhihu.com/question/41694862/answer/2453877246\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-6fc027cbd3c818bcbce15a0eddd062d4_l.jpg?source=b1748391\" data-image-width=\"849\" data-image-height=\"1021\" class=\"internal\">白色相簿2  introductory chapter剧情发生在什么日期？</a><p data-pid=\"4ECSRp5i\">冬马的演奏会是2013年2月29日夜间7点。时长是2小时。演奏结束后冬马给春希发了捷报短信。春希将短信给雪菜看，此时秋菜已经取得了联系在来接雪菜的途中，春希离开，然后在去车站的途中下起了雪。</p>\n<p data-pid=\"v-n58EdY\">这个时间理应在9点，不超过10点。而时之魔法这场雪在凌晨1点才下起来。</p>\n<p data-pid=\"MRZ8r_1c\">记住了，这是在现实中不存在的一天中下起的雪。</p>\n<h3>只在特典中去过滑雪合宿</h3>\n<p><img src=\"https://pic2.zhimg.com/v2-2f2e506b961d33155fd04e4f4587b505_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"411\" data-watermark=\"watermark\" data-original-src=\"v2-2f2e506b961d33155fd04e4f4587b505\" data-watermark-src=\"v2-32aabc94b63ba7d50b21d393235309a7\" data-private-watermark-src=\"v2-7a10e72095c34cf50aba761dbcc2cca9\"></p>\n<p data-pid=\"x37NCfoY\">我们来报一下基础设定：</p>\n<p data-pid=\"Qnmg_wu5\">忘歌偶像的滑雪发生在2010年2月的寒假，彼时春希武也雪菜同在政经学部，且春希雪菜在同一研究会，滑雪由研究会组织。CC的滑雪发生在2011年2月的寒假，而这一次滑雪是本篇里春希第一滑雪。</p>\n<p data-pid=\"6kJUMl_d\">雪菜和武也对这是春希第一次滑雪的事实并无疑问，并且雪菜还专门问了春希是否滑过雪。</p>\n<p data-pid=\"0bnVgGQR\">此事一定有说法，各位可以猜一下这到底是平行世界还是多周目，我们最后揭晓——反正这事肯定有说法是吧？</p>\n<h3>真巧啊武也</h3>\n<p><img src=\"https://pic3.zhimg.com/v2-d62c8f2f665678be0e6ebfc83f6970f5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"542\" data-watermark=\"watermark\" data-original-src=\"v2-d62c8f2f665678be0e6ebfc83f6970f5\" data-watermark-src=\"v2-9fe9a4b4ca014847c43bf9cb79b536c9\" data-private-watermark-src=\"v2-480c9905bf3e546bd9b1ee13249f854d\"></p>\n<blockquote data-pid=\"rCRDv4x1\">2011年2月1日周二 <br>凌晨 0：00-0:30 小春给春希打电话。春希要小春和矢田一直做朋友，小春表示会一直烦她缠着她。 <br>2011年2月3日周四 <br>凌晨0：00-0:30 小春给春希打电话 <br>晨 诹访安排小春毕业致辞 <br>2011年2月4日周五 <br>凌晨 武也来电话找春希借笔记 <br>夕 4点 附属学生看到小春找春希</blockquote>\n<p data-pid=\"T4b3hHMc\">小春线小春养成了每天凌晨跟春希打半小时习惯，可是在诹访安排毕业致辞小春被群嘲之后，小春正想向春希大电话时，武也突然在平时与小春聊天的时间打来了电话。</p>\n<p><img src=\"https://pica.zhimg.com/v2-b88671a8b63e13c99a200d43db8e4e77_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"567\" data-watermark=\"watermark\" data-original-src=\"v2-b88671a8b63e13c99a200d43db8e4e77\" data-watermark-src=\"v2-dee1a7f2153cbb45426417b40d8192f3\" data-private-watermark-src=\"v2-a4751e9e309108ff0563a0f6d6c8e949\"></p>\n<blockquote data-pid=\"z_f9LX_z\">2011年1月29日周六 <br>夕 4点 武也向春希借法语笔记，春希翻找其他乐谱 <br>夕 4点 秋菜抱怨雪菜打电话太久 <br>夜 春希给雪菜弹奏与冬马的定情曲《未竟的梦想》，雪菜陷入回忆 <br>夜 春希第一次无失误下《White Album》雪菜再次退缩 <br>夜 春希给雪菜弹《White Album》 <br>2011年2月3日周四 法语考试</blockquote>\n<p data-pid=\"qZGWyr7X\">而在雪菜线提到了，这次法语考试在周四——小春线借笔记的当天。</p>\n<p data-pid=\"mOQyu5AZ\">也就是说武也是在考试当天提出要借笔记，在下午考试结束之后才拿到笔记。</p>\n<p data-pid=\"Vn-8N_3b\">这个事有且仅有在小春线与雪菜线出现。一共4句信息，少了一句都不会出现BUG。</p>\n<blockquote data-pid=\"duOANW3n\">2011年2月27日周日 <br>夜 武也来电询问滑雪计划安排，指责春希一个月都没做出了断 <br>夜 武也上门，将春希带去滑雪 <br>夜 麻理提前回国</blockquote>\n<p data-pid=\"alR7SAy9\">麻理线麻理提前回国找春希面谈，当天晚上武也把春希带去了滑雪。</p>\n<p data-pid=\"wPSkVcaT\">直接造成后面春希被风雪阻碍没去成东京的机场。</p>\n<p><img src=\"https://pica.zhimg.com/v2-8e89784035da76378bc37cbca5d5a3ea_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"499\" data-watermark=\"watermark\" data-original-src=\"v2-8e89784035da76378bc37cbca5d5a3ea\" data-watermark-src=\"v2-959e530d4caea08bc9c114b05c14c781\" data-private-watermark-src=\"v2-3f73462fea1159d28473b01fa6fda6e1\"></p>\n<p data-pid=\"5ub42BGe\">在CC线，2010年12月15日周三晚上，武也依绪直接就去了春希家。打扰了千晶周三的学习会。</p>\n<p data-pid=\"4HgUezd3\">光看着一点还看不出来什么。我们结合春希的打工表：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4f779c47b6eb4a2e844841b1ec14fbaa_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"338\" data-rawheight=\"340\" data-watermark=\"watermark\" data-original-src=\"v2-4f779c47b6eb4a2e844841b1ec14fbaa\" data-watermark-src=\"v2-dbb7c3e951acd2aa8a8eab44d97c3229\" data-private-watermark-src=\"v2-f7c3063ffa56a7cba5b2eb1fd030117d\"></p>\n<p data-pid=\"SYI86jcu\">游戏开始时美穗子告白时，春希还剩下最后3节课。在告白导致春希辞职之后周三变成了辅导千晶作报告。此事发生在辅导千晶的第三周。</p>\n<p data-pid=\"nf-sqZY-\">也就是说，在一个月前，周三还是春希打工最多的一天。这一天春希原计划是在私塾教书，然后武也就很笃定春希在家跑了过来。</p>\n<p data-pid=\"xeF2eHdM\">——三女每人一次？</p>\n<blockquote data-pid=\"ODqROhtX\">2013年2月6日周三 <br>午 曜子去高柳处检查 <br>夜 8点 春希带曜子去找和纱，武也试图约春希<br>9点见面，被和纱拒绝 夜 <br>11点 和纱睡着 <br>2013年2月8日周五 <br>午 曜子结束上午治疗，与春希吃午餐 <br>夜 8点 和纱结束练习 <br>夜 9点 武也依绪朋在电话里庆祝春希订婚，和纱哭着跑出房间 <br>夜 10点 和纱睡着 <br>夜 春希睡着后的半小时里和纱离开</blockquote>\n<p data-pid=\"WOg4HdJi\">在Closing线中武也在约春希见面后打了个电话过来造成了和纱离开</p>\n<blockquote data-pid=\"A0OUfaTG\">2013年2月6日周三 <br>午 曜子去高柳处检查 <br>夜 8点 春希带曜子去找和纱，武也试图约春希9点见面，被和纱拒绝 <br>夜 11点 和纱睡着，春希给雪菜发短信 <br>2013年2月8日周五 <br>午 曜子结束上午治疗，与春希吃午餐 <br>夜 8点 和纱结束练习 <br>夜 9点 和纱因为给雪菜发短信的事，以及春希瞒着曜子的事而向春希发火赶春希走 <br>夜 10点 和纱睡着 <br>夜 春希睡着后的半小时里和纱离开</blockquote>\n<p data-pid=\"m_YUrISF\">而在雪菜线因为冬马已经生气了，就没打这个电话。</p>\n<p data-pid=\"utA8NjeB\">一样的前置展开，武也的行动却变了</p>\n<p data-pid=\"Y6w5aIHW\">武也，How old are you？</p>\n<h3>抽鬼牌事件：作弊的游戏管理员</h3>\n<p><img src=\"https://pic2.zhimg.com/v2-0e190897b8bc25f09d20a5f7ec5ee4cf_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"825\" data-rawheight=\"635\" data-watermark=\"watermark\" data-original-src=\"v2-0e190897b8bc25f09d20a5f7ec5ee4cf\" data-watermark-src=\"v2-7682ee489622624d36c388f5b9d631cf\" data-private-watermark-src=\"v2-9d6ab5a2dcab0cb34d55f1d866417798\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-9bba32df035ca3891c41141a7f866a50_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"815\" data-rawheight=\"637\" data-watermark=\"watermark\" data-original-src=\"v2-9bba32df035ca3891c41141a7f866a50\" data-watermark-src=\"v2-a983c0504c5831c8f3295fe3baa1bf48\" data-private-watermark-src=\"v2-dc9151012d07a5eed2df313b3d893b09\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-69bb2bc44a7ecdee2f31de7aa517e2ca_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"561\" data-watermark=\"watermark\" data-original-src=\"v2-69bb2bc44a7ecdee2f31de7aa517e2ca\" data-watermark-src=\"v2-99a180ab7984e29de9a5f396e59f6c85\" data-private-watermark-src=\"v2-61a8bdb67aa63976f92fbd2b88297bd9\"></p>\n<p data-pid=\"fU7ZnSH7\">在雪菜线，千晶上门与千晶玩了抽鬼牌的游戏。</p>\n<p data-pid=\"rUWfmCR1\">这个抽鬼牌游戏中，一旦春希将鬼牌抽到手中，即宣告失败。</p>\n<p data-pid=\"HI9TGFzd\">在这个游戏中千晶表示自己是通过观察春希表情实现的——在千晶TE中，千晶反而做不到这一点。误以为春希选择了雪菜。</p>\n<p data-pid=\"_QAcuA1_\">也就是说，千晶并非真的是通过表情。这件事是游戏管理员作弊，直接读的玩家选项。</p>\n<h2>“脳天気”的管理员</h2>\n<p data-pid=\"3tRUpW_4\">此处有一个汉化版没翻译出来的用词设计：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1b807ac71c6486c6da07b1ad44802d23_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"663\" data-rawheight=\"107\" data-watermark=\"watermark\" data-original-src=\"v2-1b807ac71c6486c6da07b1ad44802d23\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-d20b80c54b41a559e7538fe24d392cf7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"411\" data-rawheight=\"54\" data-watermark=\"watermark\" data-original-src=\"v2-d20b80c54b41a559e7538fe24d392cf7\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"ddA0wMsG\">IC与雪融雪降时期，对饭塚武也的评价是“轻薄”</p>\n<p><img src=\"https://pic3.zhimg.com/v2-f9b9afa2917511a549b36ab6a21a7514_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"646\" data-rawheight=\"127\" data-watermark=\"watermark\" data-original-src=\"v2-f9b9afa2917511a549b36ab6a21a7514\" data-watermark-src=\"v2-30ec12c78e97ecd06e75905499aea06f\" data-private-watermark-src=\"v2-adcf1465b31615bbb3faf4ac6b10ced4\"></p>\n<p data-pid=\"BJKDnD-M\">而在滑雪线/麻理线。饭塚武也的评价变成了“脳天気的犯罪者”。这个词当然汉化版没有完美译出来。</p>\n<p data-pid=\"WpmBgZnZ\">脳天気这个词的词源的我引用一下沪江</p>\n<blockquote data-pid=\"k5QGSMM3\">「のうてんき」とは行動が軽はずみである様子や、軽薄な人などを指すときに用いる表現です。「のんき」ということばとも似ていますが、「のんき」は良い意味で用いられる場合もあるのに対し、「のうてんき」はどちらかというと侮蔑するような印象が感じられる傾向があります。 <br>“のうてんき”这个词是形容轻率的行动，以及轻浮的人。虽然与发音为“のんき”的词在读音上十分相近，但意思却不同，“のんき”有时有褒义的用法，但如果用“のうてんき”这个词，无论怎样都有一种轻蔑的感觉。<br> 古くは18世紀ごろの文典にも見られますが、漢字での表記は一様ではありません。もともとは「能天気」や「能転気」と書かれることが多いようです。また、「脳天気」という表記は「のうてんき」という音から類推してあてられた字のようですが、これもごく最近の表記というわけではなくそれなりに古くから見られるようです。いずれにしても、俗語的表現で、語源は定かでないようです。<br> 大约在18世纪前后的语法书里就记载了“のうてんき”这个词，但当时记载的汉字写法与现在并不相同。以前大多数情况下写作“能天気”或者“能転気”，从相关记载来看“ 脳天気”这个写法，似乎是通过发音“のうてんき”类推演变而成的汉字，但关于这一说法的记载并不是在最近出现的，而是许久以前看到的。总而言之，作为俗语表达，“のうてんき”这个词语的来源尚不明确。 <br>「能」という字は、物事をうまくこなすという意味をもっていますから、「能天気」、「能転気」と書いた場合「天をも意のままにするかのような気持ち」、あるいは「何事もうまく転じられるかのような気持ち」といった意味になるでしょうか。 <br>“能”这个汉字，含有将各种事物运用自如的意思，写作“能天気”的话，看起来似乎表达出“人的意志甚至能改变天意”的意思，而若写作“ 能転気”，却又表达出“任何事都能应对自如”的意味。</blockquote>\n<p data-pid=\"w3Qip-YT\">这是同音字造成了语义演化</p>\n<p data-pid=\"VFnZj6Rl\">能転気：能把事情应对自如</p>\n<p data-pid=\"y5dnOOa-\">能天気：能改变天气→引申为不靠谱，轻浮</p>\n<p data-pid=\"FIbhptvm\">于是乎，脳天気这个词的字面意思是能用意识改变天气。</p>\n<p data-pid=\"RSVMVoEE\">在故事中被用于描述千晶与武也两人。</p>\n<p data-pid=\"72fXKmBP\">在下面这个回答中我们对比过滑雪线和麻理线的滑雪剧情部分：</p>\n<a href=\"https://www.zhihu.com/question/440164185/answer/2465072790\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-42f4a5cc4c3786423759ab0dd040547e_200x0.jpg?source=b1748391\" data-image-width=\"1623\" data-image-height=\"5273\" class=\"internal\">白色相簿2 中的滑雪线和千晶NE后续会如何展开？</a><p data-pid=\"zHG443Pk\">实际上滑雪线的台词是由麻理线粘贴复制过去的。修改的台词一共没几行，还主要都是因为麻理线前置剧情导致的。而在这其中：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-8cbf7d4642f1f57c7a3660d74373efb6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"241\" data-watermark=\"watermark\" data-original-src=\"v2-8cbf7d4642f1f57c7a3660d74373efb6\" data-watermark-src=\"v2-e1893f78c1270bed40f7e1728ec98037\" data-private-watermark-src=\"v2-e2aa85ac16e8cc2016317c81b0b4f475\"></p>\n<p data-pid=\"P983JMc7\">作者专程添加了一句关于天气的描述“雪就快要化了”——当然，绕过了群马县走进了山梨县后，雪又开始下了，然后雪在次日醒来后停了，他们如愿滑上了新雪。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-8989764c6e27ec68c5b08f362eb93b88_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"504\" data-watermark=\"watermark\" data-original-src=\"v2-8989764c6e27ec68c5b08f362eb93b88\" data-watermark-src=\"v2-158965149b951ffbf1e849da410d6f9d\" data-private-watermark-src=\"v2-e9c7fd0b5ff43d256ae5836d93f577dd\"></p>\n<h3>天气的实际写法：</h3>\n<p data-pid=\"wIgNUT4B\">我们印象里整个故事关键戏都在不停下雪，但实质上，进入<b>个人支线</b>之后只会下两场雪。</p>\n<p data-pid=\"fhGdI33D\">分别是：</p>\n<p data-pid=\"Cnoe_4mB\">CC</p>\n<p data-pid=\"yG6S_Z9L\">2010年12月24日周五 平安夜事件</p>\n<p data-pid=\"vewjVrwU\">2011年2月28日周一 最终清算</p>\n<p data-pid=\"tX5uefbf\">CODA：</p>\n<p data-pid=\"MsYBys-C\">2013年2月10日周日 时之魔法与Closing的分歧</p>\n<p data-pid=\"0uX_QgMm\">以及我们前面说的</p>\n<p data-pid=\"JAzMuFGS\">2013年3月1日周六 凌晨 时之魔法的雪</p>\n<p data-pid=\"3qL5d0fU\">2013年2月29日周五 夜 Closing的雪</p>\n<blockquote data-pid=\"OAAYPaOd\">浮气 <br>2013年<b>2月7日</b>周四 <br>凌晨1点 武也表示“这次自己一定会拿出真本事来”喝得醉倒 <br>凌晨2点 雪菜阻止朋追究到底 <br>凌晨3点 春希回到和纱房间，春希告诉和纱在跟武也两人喝酒 <br>凌晨4点 春希被和纱叫醒 晨 和纱被春希摇醒 <br>2013年<b>2月14日</b>周四 晨 亲志打电话来说要听追加和纱的公演 <br>夜 5点 春希搞定工作提前下班 <br>夜 7点 春希挑好礼物准备去小木曾家时接到和纱哭着祝贺的电话 <br>夜 冬马到车站接春希，两人在公园H</blockquote>\n<p data-pid=\"8_LYAre-\">只有一头一尾的四天，浮气线在已经做好了2月10日设定的前提下跳掉了2013年2月10日的相关剧情，音乐会也没有描写会场外而是直接转场。</p>\n<p data-pid=\"6tZ-0eZl\">——雪菜线演奏会之后特地给了散场之后没下雪的滑雪。</p>\n<h3>2010年12月24日的雪</h3>\n<p><img src=\"https://pic1.zhimg.com/v2-4191f4823e99a696360781bedb2f3c47_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"1023\" data-watermark=\"watermark\" data-original-src=\"v2-4191f4823e99a696360781bedb2f3c47\" data-watermark-src=\"v2-2d714fce8d18fe667abf92b11f1f8283\" data-private-watermark-src=\"v2-69537fee610a625e16867787d95a5e58\"></p>\n<p data-pid=\"-alQFgjK\">雪菜线和小春线就是粘贴复制，没有改。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-72cff740741cbb2a18ee929c5b71d5ef_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"971\" data-watermark=\"watermark\" data-original-src=\"v2-72cff740741cbb2a18ee929c5b71d5ef\" data-watermark-src=\"v2-6ec100cfc4b0190c457bdb568f185013\" data-private-watermark-src=\"v2-6f857129a05e27edc498f7b0a6595d53\"></p>\n<p data-pid=\"jyUC1fLx\">下面是千晶线关于这场雪的正面描写：</p>\n<blockquote data-pid=\"_YmUlndp\">结果、电车最后只开到了御宿。 从那里坐着出租车回到公寓的时候、 <b>慢慢停止的粉雪又、渐渐取回了力量、</b> 温柔地、降了下来。 夜里1点过了一大半了、 都差不多该变成2点的这个时间段。 <b>气温的程度、已经下降到了会刺痛皮肤的程度。</b>\n</blockquote>\n<p data-pid=\"gzc4qzxV\">这个只出现过一次的设定就是我们所说的借景抒情，他很微妙地与现实世界有所不同——现实是化雪比降雪冷。</p>\n<p data-pid=\"8lcC1jnf\">我们如果通过写作思路来看待这一部分设定的成因，那么很简单：</p>\n<p data-pid=\"3tNqDool\">作者要借景抒情，在多分支的情况下描写同一天，先是通过减少下雪日期的方式缩小了工作量，再通过“躲对比场景”的方式来规避了可能出现的BUG。 </p>\n<p data-pid=\"bLPHrSwc\">原本作者有在刻意规避BUG，而2013.2.29这一天，作者故意没管，在上了一堆保险措施的前提下让天气出了BUG。</p>\n<h3>2013年2月10日凌晨的雪</h3>\n<p data-pid=\"-63mn9Q7\">Closing</p>\n<p><img src=\"https://pic1.zhimg.com/v2-ef9a3eae479c40ef259eaf88df76dcbd_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"514\" data-watermark=\"watermark\" data-original-src=\"v2-ef9a3eae479c40ef259eaf88df76dcbd\" data-watermark-src=\"v2-80228aaef773bd49333f654c0dc6cd8e\" data-private-watermark-src=\"v2-a7f56302f0892d293680f844f97acbf5\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-7942528e6748973f13d1fbbd2e02e429_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"554\" data-watermark=\"watermark\" data-original-src=\"v2-7942528e6748973f13d1fbbd2e02e429\" data-watermark-src=\"v2-35844b5b8fa42fa3209860a72c2af390\" data-private-watermark-src=\"v2-a930d8d84a499e4dac31a8dfae3c4020\"></p>\n<p data-pid=\"5foUaxCp\">半夜2点，雪停了。</p>\n<p data-pid=\"pFYG7v8E\">接着时之魔法：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-8f7a6fd6e3e1aad41df577d8f19eddfe_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"546\" data-watermark=\"watermark\" data-original-src=\"v2-8f7a6fd6e3e1aad41df577d8f19eddfe\" data-watermark-src=\"v2-cde32e5ff62fa51fc254a95f0c24c24e\" data-private-watermark-src=\"v2-2aed886c0574c0b403626fc56752ac41\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-127ac74cbfe2007b54db0f3942fdd842_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"519\" data-watermark=\"watermark\" data-original-src=\"v2-127ac74cbfe2007b54db0f3942fdd842\" data-watermark-src=\"v2-8d4ef31cf3d68bb524d18da40afbc089\" data-private-watermark-src=\"v2-16e7270825db6c77190fd73ae71f68cc\"></p>\n<p data-pid=\"wm-SWtN9\">可以看到的是前一段又是粘贴复制的，然后在时之魔法这条线因为春希什么都没做所以单纯的把时间调到了首班车快出发进行错位描写。</p>\n<p data-pid=\"CVh3xsgs\">唯一值得注意的是——此处不仅雪不受春希控制，而且<b>反应的并不是春希的心情</b>。</p>\n<p data-pid=\"8JfzY5-j\">事实上浮气线20这场戏，也出现过春希求不下雪，那一次春希极度自责，但真的没有下雪。</p>\n<h3>2011年2月28日CC最后一日</h3>\n<p><img src=\"https://pic1.zhimg.com/v2-afd0366bcd55b77f9f577b9fd5b52ccf_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"493\" data-watermark=\"watermark\" data-original-src=\"v2-afd0366bcd55b77f9f577b9fd5b52ccf\" data-watermark-src=\"v2-c2df4f94eabcea387ce9c902ab845db3\" data-private-watermark-src=\"v2-43d44f73e164edee01dddbdd49dea16d\"></p>\n<p data-pid=\"439F_IrC\">千晶线这场雪则是在2011年3月1日1点，千晶从昏迷中醒来之后开始下的。</p>\n<p><img src=\"https://pica.zhimg.com/v2-75181269fa273c85a3d018c510c7a4f4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"551\" data-watermark=\"watermark\" data-original-src=\"v2-75181269fa273c85a3d018c510c7a4f4\" data-watermark-src=\"v2-760492dbf93aa85eec17657b41b98a75\" data-private-watermark-src=\"v2-f79b75a058266ce735036f8a7af97dc7\"></p>\n<p data-pid=\"hgg6Gwk7\">麻理线，西边已经开始下了。长野在东京的西边。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-72a8f615896f0efdf619e9e254d9f6c9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"538\" data-watermark=\"watermark\" data-original-src=\"v2-72a8f615896f0efdf619e9e254d9f6c9\" data-watermark-src=\"v2-0fdbdd0ea86825e9b0c12438a5cc8dba\" data-private-watermark-src=\"v2-dc9b31cc2fe0ca153b39cd35ca9b1bfd\"></p>\n<p data-pid=\"LHNfT2Fi\"><b>因为武也</b>，春希没有按照佐和子的要求在家里守着。</p>\n<p data-pid=\"4tpYV0R0\">当春希试图去找麻理的时候，雪成了阻碍。</p>\n<p><img src=\"https://pica.zhimg.com/v2-b87073411710414f1d0aacc24e9f1679_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"556\" data-watermark=\"watermark\" data-original-src=\"v2-b87073411710414f1d0aacc24e9f1679\" data-watermark-src=\"v2-2677c1612f2cf4e0b86870e0fcc7532f\" data-private-watermark-src=\"v2-52a4879968de9fa2fb81bbaec09d2f80\"></p>\n<p data-pid=\"sI93TkBA\">积雪这种事对于东京是稀有情况。——然后CC把一年中的两次积雪都撞上了。</p>\n<p data-pid=\"quZ5Il7C\">其实作者不点出来这一点谁TM知道啊</p>\n<p><img src=\"https://pic1.zhimg.com/v2-2df035ceb1a1d5a2e9ce26316e2b91f8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"562\" data-watermark=\"watermark\" data-original-src=\"v2-2df035ceb1a1d5a2e9ce26316e2b91f8\" data-watermark-src=\"v2-063e7d1830b4b306a3b5e51e1efb637a\" data-private-watermark-src=\"v2-e45a1d2eef9a6ab96409c33713a5b0a7\"></p>\n<p data-pid=\"y8qLpG7b\">东京的积雪厚到了出租车都开不动，这影响了佐和子坐机场专线到机场。</p>\n<p data-pid=\"Evu33vQO\">小春线没提这岔，我回忆了一下，机场专线有一截是轨道在地面上的轻轨。所以此处可能是地铁没影响轻轨受到了影响。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-ddc14b9b758574b01d189cd01785246c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"370\" data-watermark=\"watermark\" data-original-src=\"v2-ddc14b9b758574b01d189cd01785246c\" data-watermark-src=\"v2-aa87d501927c15ee012268f015f4cc2d\" data-private-watermark-src=\"v2-b49a97e99b9223f0fa0a120003bf1937\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-12e4ba88899840f5aff4618369111834_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"563\" data-watermark=\"watermark\" data-original-src=\"v2-12e4ba88899840f5aff4618369111834\" data-watermark-src=\"v2-c01afef53dca034ed691770f445481e5\" data-private-watermark-src=\"v2-74934b71178d39e0bd0c659b75cfe5b0\"></p>\n<p data-pid=\"AG52K2Al\">春希和雪菜分开时，磅礴大雪。 </p>\n<p data-pid=\"bK_bOmLl\"><b>但，雪菜和小春分开时，没有雪</b>。要知道，雪菜是在和小春道别后才删的春希短信。对于雪菜来说和春希的最终诀别是在跟小春告别后。</p>\n<p data-pid=\"pETznXXn\"> ……所以这雪反应的也<b>不是</b>雪菜的心境。而是“脳天気”的武也与千晶在斗法</p>\n<p><img src=\"https://pic2.zhimg.com/v2-a45695d5aadffb6161539883c0d77056_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"810\" data-rawheight=\"644\" data-watermark=\"watermark\" data-original-src=\"v2-a45695d5aadffb6161539883c0d77056\" data-watermark-src=\"v2-02ca58f1372e7961e1143bca865f0d23\" data-private-watermark-src=\"v2-ebd4385407a8b3d83aaba244dc0793d7\"></p>\n<p data-pid=\"k2lnddvI\">回顾文本，我们可以发现大多数的“都合感”也正是集中在了武也身上。</p>\n<p><img src=\"https://pica.zhimg.com/v2-ff04c3daf18cff00d30fe5848cce7bca_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"563\" data-watermark=\"watermark\" data-original-src=\"v2-ff04c3daf18cff00d30fe5848cce7bca\" data-watermark-src=\"v2-2d411b5e5cbef9ab6995bfc16c09a887\" data-private-watermark-src=\"v2-e88aa5114d13a36ad0777ba26cbdb797\"></p>\n<h2>一、千晶的剧本世界：</h2>\n<p data-pid=\"E_eEJw5P\">提起虚构世界，最传统也是最容易想到的即是“这是一场梦”“这一切都是剧本”这两种处理。</p>\n<p data-pid=\"Avbdpvdq\">而白色相簿2，很不巧就刚好有这么一个写剧本的人：</p>\n<p><img src=\"https://pica.zhimg.com/v2-3d5ab93beabc89a7b68cd0da77120b00_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"547\" data-watermark=\"watermark\" data-original-src=\"v2-3d5ab93beabc89a7b68cd0da77120b00\" data-watermark-src=\"v2-c369cf84671a69dd52408965faa2b738\" data-private-watermark-src=\"v2-c043c6aef06d77354448c0f35ab7d3e9\"></p>\n<p data-pid=\"5FrNO5Y0\">千晶在千晶TE中表演了舞台剧，舞台剧最终演到了第三幕第四场。</p>\n<p data-pid=\"ySEGWeqR\">——可是</p>\n<p><img src=\"https://pic2.zhimg.com/v2-76ba0460830290fda425a1e03a951414_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"566\" data-watermark=\"watermark\" data-original-src=\"v2-76ba0460830290fda425a1e03a951414\" data-watermark-src=\"v2-3cce2980113eb187182f308a328c74c5\" data-private-watermark-src=\"v2-b36d12af13dd3769351fa4989372f85b\"></p>\n<p data-pid=\"4LtaBweX\">千晶一共写了五幕。在第三幕之后以“<b>三年之后的了断</b>”为主题追加写作了剩下两幕。</p>\n<p data-pid=\"wxzon3cZ\">各位，我提醒一下，虽然我们已经将coda视为游戏的常规部分，但游戏原设计中coda的内容为<b>“雪菜线后续隐藏剧情”</b>。</p>\n<p data-pid=\"Qdte8ItG\">在“千晶扮演雪菜”的名场面中，春希与千晶约定，“当要说真话的时候就把双手放在胸前”<br>而雪菜的话，在公式书中的代表动作是下面这个：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-8a5b2ccd711e643aa41cd896c0ed9e39_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"245\" data-rawheight=\"673\" data-watermark=\"watermark\" data-original-src=\"v2-8a5b2ccd711e643aa41cd896c0ed9e39\" data-watermark-src=\"v2-f3f95311c5800316be75c90af2b6f090\" data-private-watermark-src=\"v2-25922af7b485b1bbcae8e42053f70f07\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-a4e4c4698d16b2e22621078bfbba6e6e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"284\" data-rawheight=\"648\" data-watermark=\"watermark\" data-original-src=\"v2-a4e4c4698d16b2e22621078bfbba6e6e\" data-watermark-src=\"v2-c881e2bef74cdbc3cb3c68d4ea5b3c86\" data-private-watermark-src=\"v2-aa4697cd77fbb1669beafd7458b82a69\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-a2695361d44c834f8d6d37194d3b4195_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"254\" data-rawheight=\"563\" data-watermark=\"watermark\" data-original-src=\"v2-a2695361d44c834f8d6d37194d3b4195\" data-watermark-src=\"v2-2134ec6188f5921325d69d1cb96cd686\" data-private-watermark-src=\"v2-9d4b8f9db1866a9d1ffa0c3e14b7e772\"></p>\n<p data-pid=\"y8REPDqG\">双手相交合在裙子上是每阶段雪菜必有动作。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-7e215568d3d8c210573dc9eba46c4e80_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"408\" data-watermark=\"watermark\" data-original-src=\"v2-7e215568d3d8c210573dc9eba46c4e80\" data-watermark-src=\"v2-99f8232c3176bf2f1ee8f538ab66b1b3\" data-private-watermark-src=\"v2-6e625c4b8888aea70a54c75e9b3f9e99\"></p>\n<p data-pid=\"dKy5hm6W\">我们前面说过，选项分歧的引入相对于原本的单线程叙事带来了一种超现实的阅读感。True end就是为了弥合这种超现实阅读感而诞生，将阅读感收束回归到单线程的“现实世界体验”的设计。在最终叙事上“其他结局”就是为了TE而存在的。</p>\n<p data-pid=\"Jlnpr0gj\">当作者没有收束的意思的时候，TE是没有必要存在的。我们以日在校园为例，日在校园既有GOODEND也有BADEND，甚至还有后宫结局与基佬结局（续作）。一般反而是认为BE的鲜血の结末为符合官方态度的结局，然而实际光是黑化砍人的结局就有三个版本，也不存在TE的标志。</p>\n<p data-pid=\"7DUffEbq\">而白色相簿2这个情况实际也就意味着：</p>\n<p data-pid=\"Bd5akykH\"><b>《WHITE ALBUM2 ～closing chapter～ 》就是千晶舞台剧本身。</b></p>\n<p data-pid=\"dg-gLuaC\">千晶的这个二周目选项，也就是WA2版本的“你知道世界的真相吗”</p>\n<p data-pid=\"vlEU_Tfr\">当你选择知道，将会追加“非主角视角”。换句话说，就是故事阅读体验彻底变成\"<b>游戏叙事方法</b>”</p>\n<p data-pid=\"Z8gK2zP_\">进一步来说，第四幕和第五幕指的是哪两个结局呢？</p>\n<h3>浮气线+不共戴天 VS 时之魔法+closing</h3>\n<p data-pid=\"uh9mXuSU\">这事我们直接从剧本长度剖开：</p>\n<p><img src=\"https://pica.zhimg.com/v2-183fe953edfcfdb0dc978dfc3054111c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"873\" data-rawheight=\"1225\" data-watermark=\"watermark\" data-original-src=\"v2-183fe953edfcfdb0dc978dfc3054111c\" data-watermark-src=\"v2-d671d395415bf1325e4deb1798055e1c\" data-private-watermark-src=\"v2-02981c08c6cc055c8ebe1da421234e29\"></p>\n<p data-pid=\"b9pNKwm_\">可以看到，浮气线+不共戴天的剧本长度与时之魔法+closing的长度一致。</p>\n<p data-pid=\"GQKzaH1y\">并且这两条线呈现出对称效果：</p>\n<p data-pid=\"Zz3x0IGg\">浮气+不共戴天最后雪菜和春希在一起，所以中间是冬马Hscene</p>\n<p data-pid=\"dHXfFHxr\">时之魔法+closing最后冬马和春希在一起，所以中间是雪菜Hscene</p>\n<p data-pid=\"6h2YrshV\">在80左右的位置雪菜跟父母大吵了一架，然后一边是雪菜和冬马和好，一边是冬马和雪菜决裂。</p>\n<p data-pid=\"pmjlVK9w\">浮气+不共戴天结尾是冬马再次凯旋演唱会，时之魔法+closing结尾是雪菜弹吉他</p>\n<p data-pid=\"iWj3KYpa\">连clotrue和closing这两首歌也是，clotrue是雪菜得到冬马联系方式，所以歌曲没有人声（雪菜不唱歌），closing是春希和冬马在一起，所以歌曲没有弦乐（春希不弹吉他）。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-5dad92543ab44526fe878b18b3388ea7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"820\" data-rawheight=\"647\" data-watermark=\"watermark\" data-original-src=\"v2-5dad92543ab44526fe878b18b3388ea7\" data-watermark-src=\"v2-1b1fb68fb949c4df545b759edbb8087b\" data-private-watermark-src=\"v2-c0e639cd82a562ca085851ed43ebe791\"></p>\n<p data-pid=\"Kzq2xnHL\">这也符合朋指摘的“为了更多待在身边而放弃唱歌”的设定。</p>\n<p data-pid=\"Lqxb_np4\">回头看浮气线，入线时专门提到了<b>雪菜告诉千晶的择偶要求</b>：平等对待一切：</p>\n<p><img src=\"https://pica.zhimg.com/v2-18b4c9bdaa8112ea992429ebb7533499_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1281\" data-rawheight=\"717\" data-watermark=\"watermark\" data-original-src=\"v2-18b4c9bdaa8112ea992429ebb7533499\" data-watermark-src=\"v2-002704fd01614da93e09b54d899efc74\" data-private-watermark-src=\"v2-0fc42c3a1c84badedb8c7d9b85700e2d\" data-tags=\"porn\"></p>\n<h3>去演奏会的愿望</h3>\n<p><img src=\"https://pic3.zhimg.com/v2-0b65c75071053604682b8e3a24c798fc_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"754\" data-rawheight=\"1134\" data-watermark=\"watermark\" data-original-src=\"v2-0b65c75071053604682b8e3a24c798fc\" data-watermark-src=\"v2-9b97781d7b1f77cd7ef129fc075b180f\" data-private-watermark-src=\"v2-adb2efefb45670c29ddaac57e56cd493\"></p>\n<p data-pid=\"t6p9NYcF\">我们捋一下这个事：coda线冬马演奏会门票开卖几分钟即售罄，春希对雪菜说自己不想去。</p>\n<p data-pid=\"vLAXuPco\">然后雪菜通过骑士（有马）唱片曾经给冬马曜子出过一张唱片的这层关系，以入社第一年新人的身份弄来了两张票。</p>\n<p data-pid=\"DD1t22X0\">原计划就算惹得春希生气也要把他带去演奏会，结果临时公司安排了出差没去成。又不想让春希单独一个人去，于是把门票给了武也和依绪。</p>\n<p data-pid=\"0vzeieZu\">在浮气线去了之后高兴地哭了，在不共戴天的结尾开开心心的说答应要一起去</p>\n<p data-pid=\"Od3wcyaY\">在closing线中为自己妨碍了春希听演奏会道歉。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-55ae96c8b4abbff87baee91ebdc290d3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1286\" data-rawheight=\"769\" data-watermark=\"watermark\" data-original-src=\"v2-55ae96c8b4abbff87baee91ebdc290d3\" data-watermark-src=\"v2-583c48f602e51a866b9c4a26a75d181c\" data-private-watermark-src=\"v2-72d0b8c8cc853cbd1897b8e210d8de85\" data-tags=\"porn\"></p>\n<p data-pid=\"kZ8widex\">在时之魔法线确定去不成了之后全程苦着脸不说话。</p>\n<p data-pid=\"ZWjAuu9w\">属于是把想去演奏会写在脸上了。而这个愿望在浮气线实际实现了。</p>\n<h3>终于被称呼为“おまえ”</h3>\n<p><img src=\"https://pic2.zhimg.com/v2-dd94d14f8ac653c5373db093e26ad9c8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"814\" data-rawheight=\"641\" data-watermark=\"watermark\" data-original-src=\"v2-dd94d14f8ac653c5373db093e26ad9c8\" data-watermark-src=\"v2-4e98c84f7cbca3b9ca5ce92c6351bb28\" data-private-watermark-src=\"v2-95733b9c69bb985965ce26744f626e7c\"></p>\n<p data-pid=\"9ZW4USqM\">在千晶TE，雪菜说出了自己想要被春希称呼为“あいつ”像千晶一样帅气坚强。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-440c5a2ab4250ebc9013ca71fc8b8442_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1193\" data-rawheight=\"658\" data-watermark=\"watermark\" data-original-src=\"v2-440c5a2ab4250ebc9013ca71fc8b8442\" data-watermark-src=\"v2-8821eebccb7f36c16ddfce9f3105b65c\" data-private-watermark-src=\"v2-a8efba15e7bd76157e57014fdbeb01e7\"></p>\n<p data-pid=\"l1gvMYXT\">在不共戴天中，雪菜第一次被おまえ来称呼</p>\n<p data-pid=\"o2HRNVo8\">因为不是同一个词，所以专门贴一下词典：</p>\n<blockquote data-pid=\"pzqykNd-\">お‐まえ【御前】（‥まへ）<br><b> ２ 対等もしくは下位者に対して用いる。親愛の意を込めて用いる場合もある。江戸後半期に至って生じた言い方。</b>＊俚言集覧「御前(オマヘ)。人を尊敬して云也、今は同輩にいふ」<br>●御前＝軽薄(けいはく)［＝追従(ついしょう)］<br>その人の面前でこびへつらうこと。<br>●御前の試(こころ)み<br>五節(ごせち)の儀式の一つ。陰暦一一月の中の寅の日の夜、天皇が清涼殿で舞姫の舞を御覧になること。ごぜんのこころみ。</blockquote>\n<p data-pid=\"SUOySL4Q\">一言蔽之，雪菜追求的并不是某个特定词汇，而是带亲密感的蔑称。此处也是全剧第一次被春希用对待冬马的方式来对待。</p>\n<h2>二、拔旗男二饭塚武也</h2>\n<p data-pid=\"ez52TTp-\">没错，你玩个galgame男二试图拔你的旗</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5e277e34120f307ff96a9a6d35b40d0d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"797\" data-rawheight=\"2699\" data-watermark=\"watermark\" data-original-src=\"v2-5e277e34120f307ff96a9a6d35b40d0d\" data-watermark-src=\"v2-52b1388c4bd9f55a5eb281ede3ac8d98\" data-private-watermark-src=\"v2-315af4677a8b684f901321cb5ef7a499\"></p>\n<p data-pid=\"DNCJAIid\">我们来捋一下这个事：麻理线，武也告诉你，你去做个了断我不会有意见的。然后让雪菜躲着你。雪菜顶不住了同意见面立刻跳出来拉你去滑雪，然后向你灌输再放一放比较好的想法，把见面推到雪菜生日那天。</p>\n<p data-pid=\"M9Pf35RW\">接着雪菜开大招拖了半个月之后，武也挑麻理回国那天把春希拉去滑雪。接着开管理员权限大雪封住了去东京的路。</p>\n<p><img src=\"https://pica.zhimg.com/v2-4f43bf3ce0a6d75b78378958c5c48345_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"821\" data-rawheight=\"645\" data-watermark=\"watermark\" data-original-src=\"v2-4f43bf3ce0a6d75b78378958c5c48345\" data-watermark-src=\"v2-1dc6eff2a47bfa78895f089faf03b2e5\" data-private-watermark-src=\"v2-f70f603578e48994ee414aac3623dc8b\"></p>\n<p data-pid=\"h2QXOCkk\">同理，千晶线借着为春希说话的姿势后</p>\n<p data-pid=\"DgVZr0qc\">紧接着第二次登场：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-6d75d35d01b2c493a5c0a5d53639ffd1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"813\" data-rawheight=\"642\" data-watermark=\"watermark\" data-original-src=\"v2-6d75d35d01b2c493a5c0a5d53639ffd1\" data-watermark-src=\"v2-22bbf33dd4e13ef8bdd2d671ef012b6c\" data-private-watermark-src=\"v2-9c174ed49343efccde1336ead9fde302\"></p>\n<p data-pid=\"7_sCWH8k\">实际上已经后台调档案，对整件事门清了。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d64dd37bcdb59155bdc7a5459d055782_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"823\" data-rawheight=\"639\" data-watermark=\"watermark\" data-original-src=\"v2-d64dd37bcdb59155bdc7a5459d055782\" data-watermark-src=\"v2-d0d5bc38172544216fb74528f2ce7622\" data-private-watermark-src=\"v2-8073067a4cebf567b1290c1157d9f2d9\"></p>\n<p data-pid=\"XS1jHdtW\">然后借之前的翻脸跟依绪谈判。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-051a581b042f0af37cac868492caa846_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"817\" data-rawheight=\"643\" data-watermark=\"watermark\" data-original-src=\"v2-051a581b042f0af37cac868492caa846\" data-watermark-src=\"v2-8c0a4bd22eebc36b103bede71ec1d7fa\" data-private-watermark-src=\"v2-062958b84502aaf7ff6a7ad7ea2e2f5a\"></p>\n<p data-pid=\"Hytj7T21\">注意用词哦，原句“脑のHard disk” 中Hard disk就是电脑的硬盘。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-158fd26b7762e190ba13756e540a2561_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"813\" data-rawheight=\"643\" data-watermark=\"watermark\" data-original-src=\"v2-158fd26b7762e190ba13756e540a2561\" data-watermark-src=\"v2-75b13eacd7030c20834be4e50ca6192f\" data-private-watermark-src=\"v2-fe680183f9416ffb43e92b7cc7006920\"></p>\n<p data-pid=\"_RMsYtHL\">在小春线制造“小春希”这个说法</p>\n<p><img src=\"https://pic1.zhimg.com/v2-c9a4e8414b0c5fbbc8e684d04f661f42_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"835\" data-rawheight=\"635\" data-watermark=\"watermark\" data-original-src=\"v2-c9a4e8414b0c5fbbc8e684d04f661f42\" data-watermark-src=\"v2-d7b25e92d83cb5d38c98751c270bccc2\" data-private-watermark-src=\"v2-cdf52df2d447a640bdb07e2a765c417b\"></p>\n<p data-pid=\"H7H092Dv\">然后用“春希的女朋友”这个谎言欺负小春</p>\n<p data-pid=\"loUuZa9O\">这个谎言的实际过程我们展示在了下面这个回答中：</p>\n<a href=\"https://www.zhihu.com/question/281804218/answer/2375663538\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-1d648cadc30bcb3add2b3e37babd4205_200x0.jpg?source=b1748391\" data-image-width=\"1215\" data-image-height=\"2685\" class=\"internal\">《白色相簿2》的三女线里春希是哪天向雪菜提分手的？</a><p><img src=\"https://pic1.zhimg.com/v2-56e66b46cd58dc75821f7f9e96a2740b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"819\" data-rawheight=\"634\" data-watermark=\"watermark\" data-original-src=\"v2-56e66b46cd58dc75821f7f9e96a2740b\" data-watermark-src=\"v2-16400f0473179f552b79707477d775a1\" data-private-watermark-src=\"v2-27e020313feb6349562cf6f5eb41c749\"></p>\n<p data-pid=\"PUcGVi1P\">实际上就是武也<b>误导</b>观众产生春希没讲清楚的<b>错觉</b>。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b920124fa0f2d965dcd4d4a2af470b29_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"822\" data-rawheight=\"644\" data-watermark=\"watermark\" data-original-src=\"v2-b920124fa0f2d965dcd4d4a2af470b29\" data-watermark-src=\"v2-8e3deaa16438a150f2412474b167452d\" data-private-watermark-src=\"v2-0aa4afcec17293115be41966ec708307\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-d2ca3a58eaaced6d78ca5335a70a0240_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"814\" data-rawheight=\"639\" data-watermark=\"watermark\" data-original-src=\"v2-d2ca3a58eaaced6d78ca5335a70a0240\" data-watermark-src=\"v2-6fd7457b87107c7c61ef790d8bc9e6ee\" data-private-watermark-src=\"v2-d1c33e63c6340e2f3c641e2d1dbc9db8\"></p>\n<p data-pid=\"xeJv0Xaj\">接着就是开管理员权限在法语考试当天借法语笔记的事了。</p>\n<p data-pid=\"-clVtH2K\">在小春硬着头皮找上门来时，用话术让小春百口莫辩，试图将小春赶走。</p>\n<p data-pid=\"2zO6ESfK\">我们捋顺了这件事就能发觉武也实际就是红脸黑脸，胡萝卜加大棒。然后武也是那个红脸。</p>\n<p><img src=\"https://pica.zhimg.com/v2-6d62b6f4af053a6e1675945f6a70fffa_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"751\" data-rawheight=\"628\" data-watermark=\"watermark\" data-original-src=\"v2-6d62b6f4af053a6e1675945f6a70fffa\" data-watermark-src=\"v2-cd8ec3a3f247003ae662def01c6e6ad1\" data-private-watermark-src=\"v2-acedc5524f053450381aca608a51eaf2\"></p>\n<p data-pid=\"8Ky8xSgU\">拿出真本事可以，开外挂过分了。</p>\n<p data-pid=\"l2Hmn0eO\">不过哪怕是开外挂前的表现，相信三女线一路走下来看着自己本命被欺负的各位也都对他一肚子火了。</p>\n<h3>武也追求的结局</h3>\n<p data-pid=\"f7XbzbwR\">galgame这种形式载体，大多数情况下是由多个编剧分工完成的。比如：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1562ff32239199b2bd41d917e376f011_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1278\" data-rawheight=\"718\" data-watermark=\"watermark\" data-original-src=\"v2-1562ff32239199b2bd41d917e376f011\" data-watermark-src=\"v2-078d7d551e865a42d45797536053138b\" data-private-watermark-src=\"v2-2282613ba15df88194dbaf5d7b5dbb85\"></p>\n<p data-pid=\"8-SPqyqu\">Staff表中企划屋的凉元悠一就是以前Clannad琴盈线的担当。这种多人分工的做法，在客观上造成了各条支线在故事上相互独立，而且因为编剧水平与发挥导致剧本水平落差极大。</p>\n<p data-pid=\"FQGupxAe\">正因如此除非是TE剧情锁要求，大部分Galgame玩家就是确定了本命之后一本道的走本命线。也正因如此，正常情况下编剧都是默认个人支线中女主是玩家本命的。</p>\n<p data-pid=\"d-DPiuXG\">也就是说，对于三女玩家来说游戏体验是跟自己的本命谈恋爱的过程中，武也这个B人过来拔你的旗，搞你本命的心态。要你去追那个甩了你的前女友，一次不答应两次不答应，转头就开管理员权限来妨碍你。</p>\n<p data-pid=\"_snrsCpI\">他是为了什么？</p>\n<p><img src=\"https://pic2.zhimg.com/v2-d06ab2460ed94df77b1de060c65d9020_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1701\" data-rawheight=\"4241\" data-watermark=\"watermark\" data-original-src=\"v2-d06ab2460ed94df77b1de060c65d9020\" data-watermark-src=\"v2-8f3ac3d1b28d6c1f3eaf2d2f33fa8260\" data-private-watermark-src=\"v2-cf0471e07d210b3c8364fa4e82733682\"></p>\n<p data-pid=\"F67UC73c\">如图武也本人认为春希和雪菜该分手了，但是为了追依绪又开始撮合春希雪菜。转头对春希说“我是为你好”。如果是三女线的话，武也会要求选择自己的本命的春希为了雪菜当一个厚颜无耻满嘴谎言的混蛋去选择雪菜。</p>\n<p data-pid=\"Y_9SBNhi\">武也依绪在时之魔法与不共戴天结尾，春希和雪菜走到一起之后会走到一起。其中时之魔法武也会骗依绪说之前那些女人都是假的用来气依绪的，不共戴天则会上了依绪不愿意公开。</p>\n<p data-pid=\"Bd628dt5\">接下来再看两段剧情，看的时候可以猜一下出自哪个结局：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-5897c7a6b77b4938e265a11927948325_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"806\" data-rawheight=\"633\" data-watermark=\"watermark\" data-original-src=\"v2-5897c7a6b77b4938e265a11927948325\" data-watermark-src=\"v2-a642fac45f989b0975c4f31cdce2fa6b\" data-private-watermark-src=\"v2-06389a1b52d64ce2c82e0b9563b4021b\"></p>\n<p><img src=\"https://pic4.zhimg.com/v2-cbc5170d28c9f7b7ecddffb8d4544e8a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"821\" data-rawheight=\"631\" data-watermark=\"watermark\" data-original-src=\"v2-cbc5170d28c9f7b7ecddffb8d4544e8a\" data-watermark-src=\"v2-167d45eaf599a3982f4d5c7a87c6af58\" data-private-watermark-src=\"v2-c73c13dd5ea4c49d903dca768ea2a06f\"></p>\n<p data-pid=\"EHDlxQCa\">答案是：这两段剧情都出自时之魔法。 </p>\n<p><img src=\"https://pic2.zhimg.com/v2-a0fd911b04489764f0bc2b527db72391_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"811\" data-rawheight=\"635\" data-watermark=\"watermark\" data-original-src=\"v2-a0fd911b04489764f0bc2b527db72391\" data-watermark-src=\"v2-f9ea1d9a2d21ab46294a3293b95556b4\" data-private-watermark-src=\"v2-ef39b6d84a11065f080b75f1ad61eeed\"></p>\n<p data-pid=\"B1bhXuOm\">坦白事件反而是发生在浮气线。</p>\n<p data-pid=\"tOXnJB5D\">武也说的那个结局是时之魔法。不共戴天才是千晶为雪菜准备的那个结局。</p>\n<h3>雪菜的管理员身份</h3>\n<p data-pid=\"w-Kg49SO\">先上两段剧情：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6281c44aeecd2858dd259744dfba3985_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"992\" data-rawheight=\"1093\" data-watermark=\"watermark\" data-original-src=\"v2-6281c44aeecd2858dd259744dfba3985\" data-watermark-src=\"v2-2bacd49151a7b764f0099da13aaa8c3e\" data-private-watermark-src=\"v2-07e8eb0a7564c09777dc7a1a2bde54c0\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-c58c299cb2990b35fb486368af6af581_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"526\" data-rawheight=\"631\" data-watermark=\"watermark\" data-original-src=\"v2-c58c299cb2990b35fb486368af6af581\" data-watermark-src=\"v2-c9145c54ad3b2f8be0654bd5168b1771\" data-private-watermark-src=\"v2-12a22d7c65ae7475aec289bac41a1edb\"></p>\n<p data-pid=\"_rQaiJ1n\">“换人，下一圈该你跑”</p>\n<p data-pid=\"MS32mff4\">“把你说过的话全部都变成没有发生过一样”</p>\n<p data-pid=\"SKndNYxv\">“三个人回到那个学园祭的前一天”</p>\n<p data-pid=\"V4cLHeLc\">嗯，看到这里相信大家都看明白武也确实有这个“能力”了</p>\n<p data-pid=\"N_Kyb0Ak\">此处武也和雪菜的用词是戻って</p>\n<p data-pid=\"7GMv2Ah2\">不过另外两场戏就不一样了</p>\n<blockquote data-pid=\"W12TPEuw\">CC 151-4 海滨公园<br>春雪<br>春希 雪菜、咱们、按重启吧？<br>雪菜 重启是…全部变成没有吗？那种事…那种事情我<br>春希 错了哟。变没有的是我们成为三个人的，那天开始<br>雪菜 欸…<br>春希 忘掉吧？那天的雪也好、接着…那家伙也好</blockquote>\n<p data-pid=\"ZKIAYBQ5\">就像前面的Hard disk一样，此处春希用的词是リセットし，计算机术语reset，就是你机箱上小小圆圆的复位键。没有使用restart。指的是清空内存或者清空缓存。作为游戏术语则是清空缓存回到<b>存档点</b>。</p>\n<a href=\"https://www.zhihu.com/answer/2414929503\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-18be1113439f79cfaf5a5d13bde865de_200x0.jpg?source=b1748391\" data-image-width=\"850\" data-image-height=\"3913\" class=\"internal\">都说丸户写《路人女主》分不清谁在说话，这是为什么？</a><p data-pid=\"6JA0OnfV\">在上面分析文风的回答中我们曾说过丸户的习惯，喜欢用让人物飙行业术语的方式来区分人物。麻理是飚棒球和出版业术语，而千晶是飚戏剧术语。此处是游戏-计算机术语……</p>\n<p data-pid=\"4hgf7nAe\">而雪菜在自己主视角用的则是音乐术语：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-15bfd2ff9bf66f47b537c342d15bc67b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"399\" data-rawheight=\"45\" data-watermark=\"watermark\" data-original-src=\"v2-15bfd2ff9bf66f47b537c342d15bc67b\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"A5eg9h92\">巻き戻って，即倒带，把胶带卷回去。</p>\n<p data-pid=\"aaqd4IP8\">也就是说武也的做法是让你读档，雪菜的做法是倒带</p>\n<p data-pid=\"rLKxwMHc\">下面是同意雪菜倒带时的剧情状态：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-35421deb2a22ac86f15fe0d7d5af9918_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1167\" data-rawheight=\"1784\" data-watermark=\"watermark\" data-original-src=\"v2-35421deb2a22ac86f15fe0d7d5af9918\" data-watermark-src=\"v2-f60a26a3c26be602587885241640f897\" data-private-watermark-src=\"v2-e74e74e262fefcdb44c798c5eacf6dd6\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-0a82717bfcbf5ae7c629371c6ac330d9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2130\" data-rawheight=\"2235\" data-watermark=\"watermark\" data-original-src=\"v2-0a82717bfcbf5ae7c629371c6ac330d9\" data-watermark-src=\"v2-d4a751e290f48478a915da30e8ef5ce6\" data-private-watermark-src=\"v2-fd98dd02e7d645c132c21754f35097ba\"></p>\n<p data-pid=\"jts2FNIO\">到这里大家应该也能明白closing结尾那辆差点让雪菜出车祸的车是怎么回事了……</p>\n<h3>梦结局时之魔法</h3>\n<p data-pid=\"Oib5rvug\">那么，时之魔法为什么会是closing的一部分？这里说法是什么呢？</p>\n<p data-pid=\"DWKtuB4N\">这里我们上一下coda三条支线互cue时说的话：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-80b2ff28d5c25fba67a91f1b90b3a4ee_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2257\" data-rawheight=\"1296\" data-watermark=\"watermark\" data-original-src=\"v2-80b2ff28d5c25fba67a91f1b90b3a4ee\" data-watermark-src=\"v2-b1ebb810a00bbd7be13e7c8b4f77e8bc\" data-private-watermark-src=\"v2-ef5022a6d98a15aab59ff6a57c4c2b78\"></p>\n<p data-pid=\"n2R0Ms2T\">就是冬马在演奏会前一晚上的梦。</p>\n<p data-pid=\"PE0wuOTJ\">与不共戴天全是雪菜的愿望相对，时之魔法这条线里都是纯纯的冬马的愿望。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-308f157f17aebd57010b282750b1d89e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"817\" data-rawheight=\"641\" data-watermark=\"watermark\" data-original-src=\"v2-308f157f17aebd57010b282750b1d89e\" data-watermark-src=\"v2-99f591d26918a2d4688a62d7c3676b89\" data-private-watermark-src=\"v2-bc55a02bc3545aaf0529c463ae7478c4\"></p>\n<p data-pid=\"mnJgqxeI\">春希不向雪菜说出那一个月的事，春希和雪菜都是装成什么都没发生过，雪菜解决了妈妈的问题，各方面问题堆成山也获得了演奏会大成功。</p>\n<p data-pid=\"MjQpArs6\">实际行文过程全程都在疯狂DISS：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-e707eaa22931cf63b5af68b0a0ce4318_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"812\" data-rawheight=\"602\" data-watermark=\"watermark\" data-original-src=\"v2-e707eaa22931cf63b5af68b0a0ce4318\" data-watermark-src=\"v2-229c442e92531ecc076f1fb638387445\" data-private-watermark-src=\"v2-fdc2de80b9f37d0fdae02fde0acea3a8\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-f9fa515658be00e5430fb123e5be090b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1274\" data-rawheight=\"715\" data-watermark=\"watermark\" data-original-src=\"v2-f9fa515658be00e5430fb123e5be090b\" data-watermark-src=\"v2-5f8281a0e48454ef3a33d8938c47136d\" data-private-watermark-src=\"v2-3e33857b90f65296511c160501d19ba5\"></p>\n<blockquote data-pid=\"dAP5E_eh\">时之魔法 61-2 练习室<br>春冬雪<br>一个月前的演奏会。<br>外行人没听出来。<br>评论家却听出来了不好的地方，<br>和纱那、其实只有少量的凌乱。<br>正因为我、没有去会场。<br>正因为我和雪菜、两人一起度过了。<br><b>可是、如今的和纱、</b><br><b>在雪菜的眼前说出了这种问题发言</b><br><b>在全身里、都充满了自信。</b><br><b>彩排什么的、完全没有去做。</b><br><b>就算和前回相比也是、练习以外显然易见地准备不足</b><br><b>而且还睡眠不足、体力也好精神力也好问题如山般堆积着</b><br><b>既然都这样了、这份自信是什么…？</b>\n</blockquote>\n<p data-pid=\"TJY7Ykqu\">有人可能好奇了，这么个结局怎么被叫雪菜TE叫了这么多年。</p>\n<p data-pid=\"wywSi7Kd\">其实这事儿吧……雪菜原本的结局不共戴天被丸户删了……删了…删了</p>\n<p data-pid=\"W2rSxOAc\">官方公式书中把时之魔法这个结局标记为了雪菜结局。冬马结局因为其14连P的选择难度符合一般游戏中“需要努力解谜才能到达TE”的游戏印象而在玩家那获得了冬马TE的非官方称呼。 </p>\n<p data-pid=\"mjn336Yx\">十年前游戏刚出的时候一般说法是冬马TE，冬马NE（浮气线），雪菜NE，直到CK汉化组创造性的翻译出了雪菜TE这个词冠在了唯一的雪菜结局头上打平衡。</p>\n<p data-pid=\"C_OHGxME\">讽刺的是，汉化组自己培养出的魔怔人因为汉化组不够魔怔导致汉化组被咬，这又是后话了。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-fc3f6c7bae15e3046b38d1d97864a889_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"754\" data-rawheight=\"470\" data-watermark=\"watermark\" data-original-src=\"v2-fc3f6c7bae15e3046b38d1d97864a889\" data-watermark-src=\"v2-1c7155aea0100da6c1924f4a17292c9c\" data-private-watermark-src=\"v2-c815d2df78e941c68bf0a0b5e097274e\"></p>\n<h2>三、所有细节全错的忘歌偶像</h2>\n<p data-pid=\"YF_zdnIU\">事实上不仅滑雪合宿有本篇与特典的巨大矛盾出现，忘歌偶像涉及到的细节<b>全部对不上</b>。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5c5c29501a22edcedd92be035f4feb6c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1174\" data-rawheight=\"324\" data-watermark=\"watermark\" data-original-src=\"v2-5c5c29501a22edcedd92be035f4feb6c\" data-watermark-src=\"v2-9182f2c88cb610ddbf6952616a80b82c\" data-private-watermark-src=\"v2-7dde405c158351e7835a33b02cbba790\"></p>\n<p data-pid=\"oAbJjoWV\">CC中春希的体力是非常差的：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-bcb7b2f647d397a326d6204c56697ff6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1192\" data-rawheight=\"664\" data-watermark=\"watermark\" data-original-src=\"v2-bcb7b2f647d397a326d6204c56697ff6\" data-watermark-src=\"v2-c9c1eacd8e38eac0ac2c04753686287f\" data-private-watermark-src=\"v2-aaa030ead7196a73fff38e7ae1b1205b\"></p>\n<p data-pid=\"pyt1T_25\">第二次送小春回家的过程中因为吵起来导致春希和小春产生了追逐，跑得春希上下不接下气调整气息花了5、6分钟。表现出的是完全追不上。</p>\n<p data-pid=\"D6gCeocg\">追逐之前的对话时长是接近6分钟。这点直接游戏原速播放或者找录播视频就OK了。编剧在把控剧本时长的时候算的就是这玩意。</p>\n<p><img src=\"https://pica.zhimg.com/v2-a4b8741d4eb130e0f6457a4e0bfba8ec_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"801\" data-rawheight=\"459\" data-watermark=\"watermark\" data-original-src=\"v2-a4b8741d4eb130e0f6457a4e0bfba8ec\" data-watermark-src=\"v2-ed468adac5b1bb26a0cf1016760b6099\" data-private-watermark-src=\"v2-3ca30431d3f25372ff32dfd429ec6048\"></p>\n<p data-pid=\"I2aOUIPm\">南末次站离goodies拢共也就徒步10分钟的路。</p>\n<p data-pid=\"WfcNlCBa\">人的跑步速度至少也是步行的3倍。算下来也就跑了1分钟。作者原话是“原体育部员和原文化部员之间的差距”——鉴于在这个问题上说到这个地步我都被杠精杠过，我在这里直接用这个说法：作者想要表现的就是春希体力一直都很差这点。</p>\n<p data-pid=\"UXre9EmK\">在搬家打工这件事中，就算春希在场也只会是不习惯重体力劳动觉得干不下去的那个。</p>\n<p data-pid=\"WsE62FRZ\">何况搬家打工这事发生时春希正在被千晶拖着喝酒：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-861d296d96bfe8744cf35d0820f480fd_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"806\" data-rawheight=\"619\" data-watermark=\"watermark\" data-original-src=\"v2-861d296d96bfe8744cf35d0820f480fd\" data-watermark-src=\"v2-fbd9c36539a2ca9753694e462c81e2ae\" data-private-watermark-src=\"v2-1e088381a3d258a5ca32ba64a3602b35\"></p>\n<p data-pid=\"w0PyMMor\">忘歌偶像中描述春希打工借友近君钱的一个月里，千晶拖着春希到处喝酒花了春希很多钱。</p>\n<p data-pid=\"oBbO59zi\">从第二礼拜开始周围人就开始把一堆活往春希头上甩了。</p>\n<p data-pid=\"wjojvwJ4\">进一步来说，春希也没有钱。</p>\n<p><img src=\"https://pica.zhimg.com/v2-f59b08088d2590ddff0474787dd675f7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"750\" data-rawheight=\"633\" data-watermark=\"watermark\" data-original-src=\"v2-f59b08088d2590ddff0474787dd675f7\" data-watermark-src=\"v2-3a7227ac2508daaa955e34d3b72c358d\" data-private-watermark-src=\"v2-607f316f50d90431a568b386bc07305e\"></p>\n<p data-pid=\"QT5HEaZE\">春希的总收入不到16万。这个时间点的打工是周二晚的开樱社、周三晚的私塾、开樱社、周五晚的开樱社。</p>\n<p data-pid=\"zrpCxQFp\">春希形容中开樱社的工资是超过房租，也就是超8万。不过以这个表的实际表现来说开樱社的月收至少占四分之三也就是12万。开樱社的时薪大概在2000。</p>\n<p data-pid=\"Pel93ymQ\">私塾打工是现代日语+英语文法两门课。一个月8个节，一节5000。也就是针对名校的讲师才有这个收入。</p>\n<p data-pid=\"OPqLbNdT\">但是我们扒时间线的话：</p>\n<blockquote data-pid=\"TQ4anTdD\">2009年5月前<br>春希开始在私塾兼职现代日语/英语文法讲师<br>美穗子问春希有没有女朋友<br>2009年<br>本田入职goodies<br>2009年12月<br>大专2级生中川入职goodies<br>小谷入职goodies<br>2010年2月<br>松冈以非应届生身份入职开樱社<br>2010年3月 春希goodies辞职<br>一个一礼拜后 小谷辞职<br>2010年4月春希进入文学部<br>千晶拉着春希到处喝酒，持续一周<br>千晶第一次去春希公寓<br>文学部同年级都开始找春希帮忙<br>2010年6月前<br>春希入职开樱社</blockquote>\n<p data-pid=\"H91u4Mg0\">忘歌偶像搬家公司这段工作的时间点刚好卡在春希在goodies被小谷喜欢上并告白、随即辞职，又没有入职开樱社的这个时间段。</p>\n<p data-pid=\"RcR40V3j\">goodies那种工作它的时给就是最低工资，09年前后是850左右。周二周三周五每天4点半到11点半，七个小时，加上周六10点半到11点半，一个月下来也就是个10万到11万日元。</p>\n<p data-pid=\"TMDMfCg0\">加上私塾一个月14到15万的程度。而他光是房租就8万块，生活费起码也得有个4万，加上物业管理费、火灾险、水电、紧急应对服务费等等费用。也就是说他确实是勉强收支平衡的程度。</p>\n<p data-pid=\"fvShUjd4\">这样一个他承受千晶拉着喝酒的开销就够勉强了，根本没有借钱给友近的能力。</p>\n<p data-pid=\"zTugDrsB\">进一步来说，这个表上还有另外一个秘密。</p>\n<p><img src=\"https://pica.zhimg.com/v2-5da16e511b85e873181aab43a8219be5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"833\" data-rawheight=\"640\" data-watermark=\"watermark\" data-original-src=\"v2-5da16e511b85e873181aab43a8219be5\" data-watermark-src=\"v2-e4b4e7a8eb609996cf54394b1e25d0c9\" data-private-watermark-src=\"v2-8608465787d894af1dbefbd3dd52056d\"></p>\n<p data-pid=\"8lWxVRfg\">中川加入goodies是在春希离职的3个月前，最早不超过12月。</p>\n<p data-pid=\"gd9flvii\">而忘歌偶像中友近找雪菜聊的第一件事，就是春希在goodies中被告白事件。‘’</p>\n<p><img src=\"https://pic1.zhimg.com/v2-bf560cdb6523ccd59376d65964628160_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"785\" data-rawheight=\"495\" data-watermark=\"watermark\" data-original-src=\"v2-bf560cdb6523ccd59376d65964628160\" data-watermark-src=\"v2-eed263e08da65a564008af001dd62f19\" data-private-watermark-src=\"v2-29457321fb71a5bfc6efb4f9f128d351\"></p>\n<p data-pid=\"tTwu4vWc\">此处汉化组应该是注意到了BUG的存在，所以将之前叙述中的打工改成了“前一份打工”</p>\n<p><img src=\"https://pic3.zhimg.com/v2-aa655cded8395102f5d75035409329d2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1144\" data-rawheight=\"507\" data-watermark=\"watermark\" data-original-src=\"v2-aa655cded8395102f5d75035409329d2\" data-watermark-src=\"v2-4a67c8628b9634af727ed31f07167608\" data-private-watermark-src=\"v2-220cfd6529a62fee742a917c3e27a4ba\"></p>\n<p data-pid=\"d3swhPNu\">但原文是この前もバイト先 。“之前也在打工的地方”后面聊的也从头到尾就是goodies。</p>\n<p data-pid=\"44TVl9sF\">这事发生在中川刚入职的时候，但本篇中完全没提过。</p>\n<p data-pid=\"f50D7-gy\">——而如果这是在说小谷事件，那么时间同样不对。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-c77bb6a9b46bf07b06bd23518457d104_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"924\" data-rawheight=\"269\" data-watermark=\"watermark\" data-original-src=\"v2-c77bb6a9b46bf07b06bd23518457d104\" data-watermark-src=\"v2-402a477d158885ad3be8b40e1fc8deb6\" data-private-watermark-src=\"v2-879d43a5c68ca2852533610b10bf43fe\"></p>\n<p data-pid=\"e8JkKAV-\">进一步来说，对于雪菜的描述也不对头。</p>\n<p data-pid=\"S8JVGzzS\">以CC的说法，雪菜在大学三年期间因为疏远男性所以人际关系并不差，没有被恶意造谣的理由。事实上柳园朋见到雪菜说的谣言也是高三时期的谣言。</p>\n<p data-pid=\"iUCZ3BXL\">雪菜在本篇中对男性的疏远也很难想象在学校出现这种亲密之举，更别提一起去宾馆了。</p>\n<p data-pid=\"MhLp8SGm\">——除非她像三年前跟春希打过那个深夜电话之后一样。</p>\n<p><img src=\"https://pica.zhimg.com/v2-487bcb68703199e0a6697d4960efef0f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"841\" data-rawheight=\"179\" data-watermark=\"watermark\" data-original-src=\"v2-487bcb68703199e0a6697d4960efef0f\" data-watermark-src=\"v2-a8bc69ce52a67fb2e4b8063e85522869\" data-private-watermark-src=\"v2-5002321ed53753fdb4bd3c0421a90dad\"></p>\n<p data-pid=\"xFTrKyHY\">相对的，友近怎么知道春希背叛过雪菜的？</p>\n<p data-pid=\"J9t5A14T\">是春希会说，还是雪菜会说？答案是都不会。</p>\n<p data-pid=\"sf4EOqdz\">让我们回到滑雪事件——</p>\n<h3>\n<br>正篇没有被提到过的友近君</h3>\n<p data-pid=\"0r0zpFku\">春希没有去过滑雪只是本篇滑雪聊天中的第一件事而已。当天的第二个关键话题就是聊到了过去的同学，事实上，在浮气线也安排了亲志与春希的再联络。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-0fe7d278e1b084b724e8cf30f49b2284_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"620\" data-watermark=\"watermark\" data-original-src=\"v2-0fe7d278e1b084b724e8cf30f49b2284\" data-watermark-src=\"v2-9b02b677b814000092dedbe751dce52a\" data-private-watermark-src=\"v2-6165fdfcd77de1fa11287d606e1ca1df\"></p>\n<p data-pid=\"2fMSRQbx\">聊了过去配角的后续发展，不过更重要的是：这两段明显是互相补充互相照应的。</p>\n<p data-pid=\"6zjBkC58\">第三个关键话题是转部后经历的一年：</p>\n<blockquote data-pid=\"ZtH1zDFG\">麻理线 33-4 滑雪旅馆<br>春雪<br>春希 那就…这次来听听关于雪菜的话题吧<br>雪菜 关于我的…进路的事？<br>春希 不是、比起那个啊…去年的事、什么都好<br>雪菜 去年…？<br>春希 从四月开始、不在同一个学部开始…<br>雪菜 啊…<br>春希 报的讲义也全然都没有重合、碰面的时间、比以前减少很多对吧？<br>雪菜 嗯…是的呢。没怎么、碰过面呢<br>春希 我、对大学三年级的雪菜、几乎都不了解。如果可以的话、什么事都行能讲讲吗？<br>雪菜 ……<br>春希 …原本拉开距离放着的就是我这一边、可能说这话也有点只顾自己方便了<br>雪菜 没有、才没有的。这种事、没有啊…<br>春希 雪菜…<br>雪菜 也是啊…那么开始就从、跟医学部的男生联谊的话题开始…<br>春希 只有这个还是放过去吧…不如说我、这个原本就全部都知道！<br>雪菜 啊哈哈哈哈…是这样呢<br>“雪菜的一年间”结束之后、<br>接着就是“我的一年间”的登场了。<br>开始是春天<br>成为了文学部的新参者的我、<br>渐渐融入了新伙伴之间。<br>突然上来搭话的熟不拘礼的女人以、<br>欢迎会为名目彻底地奢侈了一把<br>是因为之后因为她拜托的事的缘故吗<br>不知不觉间将我看作便利屋的风潮便传开了、<br>意外地跟周围缩进了距离的事<br>接着是夏天<br>差不多该把就职的事情放进视野中了、<br>着眼于未来开始打工的暑假。<br>飞进了叩开门的开樱社是、<br>如此忙碌到了这般忙到头晕目眩<br>能够24小时什么都不考虑的工作。<br>在那筑起了人际关系。<br>严厉得不得了又稍微有点温柔、有能力的上司耳朵事<br>再后来是秋天。<br>研究室的研习也正式地开始了、<br>考虑的事仿佛都变得能做到一般的黄色日历章节<br>学园祭就结束了、<br>校内的FM开始放送、我们的歌也开始流淌、<br>和雪菜再次互相接触、再次擦肩而过的事、<br>这般不安定的我犯下了过错、<br>绝对不会原谅的后辈的少女的事<br>于是冬天<br>不管等过几年也<br>无法停止想起那家伙、追忆的季节<br>擦肩而过、重新站起、努力了、靠近了、<br>因为这个缘故决定性地决裂了、<br>那个、圣诞节的夜<br>但是…<br>对雪菜来说、在那就结束的那一天里、<br>对我来说、还依然延续着的事。<br>在那之前、决不从我身上移开视线的雪菜那、<br>在那个瞬间向下低去、从我对罪的告白之中逃开了。</blockquote>\n<p data-pid=\"xpEkbwUZ\">千晶麻理小春的故事串起了一年。</p>\n<p data-pid=\"IswwPFcj\">在双方秉持着哪壶不开提哪壶的态度说起的话中，没有友近。</p>\n<p data-pid=\"13hblG7o\">不光如此，本篇200多万字没有一次提到友近浩树这个人。</p>\n<p data-pid=\"ZhZGiV6g\">武也、政经部的同学、goodies的同事全都没有提过这个人。</p>\n<p data-pid=\"fyNXpWXT\">所以……忘歌偶像实际是什么？</p>\n<h3>精分结局忘歌偶像</h3>\n<p data-pid=\"SFkW_H2e\">实际上，白色相簿2的故事是有着丰富的精神病要素的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6980fd51ad216e4d39862f0c6337310a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1616\" data-rawheight=\"778\" data-watermark=\"watermark\" data-original-src=\"v2-6980fd51ad216e4d39862f0c6337310a\" data-watermark-src=\"v2-f60575e546b3a3a5bbdcd153362ab66e\" data-private-watermark-src=\"v2-a6a7ebfde930473f0565ba90dec8f08d\"></p>\n<p data-pid=\"WChbtXIQ\">春希每周的周二周三周五周六，四天不睡，周一周四周日，三天不醒，这是典型双相障碍躁狂与抑郁交替发作的疾病模式。</p>\n<p data-pid=\"4d07zTHP\">而雪菜，跟春希有着相同的病理症状：</p>\n<p><img src=\"https://pica.zhimg.com/v2-9b3086f17c9e1152664dac642e1f342d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"526\" data-watermark=\"watermark\" data-original-src=\"v2-9b3086f17c9e1152664dac642e1f342d\" data-watermark-src=\"v2-a0adb1ae1886b6b45c0990e33e4bc89a\" data-private-watermark-src=\"v2-b5916b4c7d1d333c641462d7c7f75ae8\"></p>\n<p data-pid=\"CSaHtI6A\">双相障碍受遗传和原生家庭环境影响的继承概率高达80%</p>\n<p><img src=\"https://pic3.zhimg.com/v2-835ecf935ad6e91935f040524227b94d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1278\" data-rawheight=\"714\" data-watermark=\"watermark\" data-original-src=\"v2-835ecf935ad6e91935f040524227b94d\" data-watermark-src=\"v2-28744b3a1ce9981f3e0d69d826d3cdd5\" data-private-watermark-src=\"v2-1355ad9cb7bdca6222f71803c0fd75d1\"></p>\n<p data-pid=\"B7kIkU8_\">春希“我家几年前也是小木曾家那样哦”</p>\n<p data-pid=\"FF1-JyoB\">而这个病会与大名鼎鼎的精神分裂症混合发作，形<b>成分裂情感性精神病</b>，基本上被认为是一个<b>遗传疾病</b>。其患者有三分之一在发病前经历了应激事件，比如<b>重要人际关系的变动</b>。</p>\n<p data-pid=\"7-ghjMPv\">那么，下面这个是忘歌偶像第一年与第二年的分野，友近君于第二年出现。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-cf02c5bc207ff7640bb9c68489c67733_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"874\" data-rawheight=\"601\" data-watermark=\"watermark\" data-original-src=\"v2-cf02c5bc207ff7640bb9c68489c67733\" data-watermark-src=\"v2-4d4c970903ca06ae885eb374ed42e8bf\" data-private-watermark-src=\"v2-edebe46a281f3ca533c270646d24f4c3\"></p>\n<p data-pid=\"_dCeXLVN\">在游戏管理员.编剧.千晶的安排之下，大一的学园祭响起了“传达不到的爱”，于是一切开始倒带，大二再次响起“传达不到的爱”一周后，友近君出现。于是一切细节都与现实不一样了。</p>\n<p data-pid=\"iFia0uEc\">这戏码是典型的精神分裂戏码。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-4c249402b1cd289480252f1a11f4c426_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"658\" data-watermark=\"watermark\" data-original-src=\"v2-4c249402b1cd289480252f1a11f4c426\" data-watermark-src=\"v2-73bbef9245fce36b1de2b08cdcb4624d\" data-private-watermark-src=\"v2-0031378c6b137f149319d9086c439bad\"></p>\n<p data-pid=\"8NGUt69d\">雪菜受到打击制造了忘歌偶像的精分世界。</p>\n<h3>哪边是分裂前的原型人物？</h3>\n<p data-pid=\"ZPwNUEn0\">实际上，这个问题我们之前已经解出来了。</p>\n<p data-pid=\"vXLMzPX6\">在这个回答中：</p>\n<a href=\"https://www.zhihu.com/answer/2467889810\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-eefcae7a0bb94944307b90d5e601c7e8_qhd.jpg?source=b1748391\" data-image-width=\"1274\" data-image-height=\"718\" class=\"internal\">怎样评价春希在不同线里面的感情倾向？他更爱雪菜还是冬马？</a><p data-pid=\"GeOR-8bk\">白色相簿2的车站名中，春希住在南末次站，而雪菜住在末次站。千晶住在有川站、小春住在峰之谷站、而麻理住在须黑。</p>\n<p data-pid=\"qbc8j-UQ\">这里从东京的一个历史地名沿革说下来：</p>\n<p data-pid=\"t_2ZLHrH\">东京都的东北部分在古代与埼玉县东部合称武藏国。</p>\n<p data-pid=\"ao8rfZuK\">武藏国分为北葛饰与南葛饰。</p>\n<p data-pid=\"KUBSNgbm\">后南葛饰被拆分并入东京，分为了葛饰区、江户川区、江东区、墨田区。其中北葛饰在2006年更名为久喜市。</p>\n<a href=\"https://www.zhihu.com/question/517376385/answer/2385160216\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-d50dc366b8835cb27dfc638abafaab1c_qhd.jpg?source=b1748391\" data-image-width=\"1277\" data-image-height=\"720\" class=\"internal\">为何白2的主要角色只有冬马和纱是简称姓？</a><p data-pid=\"6UwHLAwE\">在上面这个回答中我们提到了雪菜在“覆盖一层雪泥”之前是小松菜，小松菜出处是东京小松川村，小松川村是南葛饰区的首府。</p>\n<p data-pid=\"rIw55v1Y\">于是我们得到了下面的对应关系：</p>\n<p data-pid=\"XhBp_Zlt\">春希→南末次→南葛饰区</p>\n<p data-pid=\"E2YrFXTZ\">雪菜→末次→葛饰区</p>\n<p data-pid=\"VSJuXyje\">千晶→有川→江户川区</p>\n<p data-pid=\"zOOfrBJe\">小春→峰之谷→山谷→荒川→江东区</p>\n<p data-pid=\"NLpC5rN0\">麻理→须黑→墨田</p>\n<p data-pid=\"77in14k3\">春希带着小春去找雪菜时乘坐的列车去往鹫王站是北葛饰的鹫宫 ，于2006年也就是<b>剧本开始编写后的第2年</b>改名久喜市</p>\n<p data-pid=\"q47w_Qhw\">也就是<b>春希分裂出了雪菜和三女</b>。</p>\n<p data-pid=\"kArfIepS\">这点其实稍微有点打我脸了，过去两年我一直认为是雪菜分裂出春希和三女，理由是雪菜对角色人格形成过程讲得最完整。</p>\n<p data-pid=\"DHpwMOPP\">再引入年龄的话：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-98721ab1aa03c4c07ab0beb7d4c1c147_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1501\" data-rawheight=\"408\" data-watermark=\"watermark\" data-original-src=\"v2-98721ab1aa03c4c07ab0beb7d4c1c147\" data-watermark-src=\"v2-64889b138f29a4d3918934a383d2abb2\" data-private-watermark-src=\"v2-abde82c7348f54d24b96f162979bc010\"></p>\n<p data-pid=\"hmUYBf1p\">那么这个分法的意思大概是这样：雪菜是分裂后的自己的主干，小春是小时候的自己，千晶是作为编剧的现在的自己，麻理则是长大后的自己。</p>\n<p data-pid=\"QWAAg8AW\">我们处在一个多重嵌套的剧中剧里。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/mo-li-lan-mao?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">魔力懒猫</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/25383860/answer/2495916520?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">62 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/534827608?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">游戏《白色相簿2》里你最不能接受的情节是哪个，为什么？</a><br><a href=\"http://www.zhihu.com/question/504026397?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">游戏《白色相簿2》里哪个细节让你觉得过于真实？</a><br>\n","link":"http://www.zhihu.com/question/25383860/answer/2495916520?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"白色相簿2  introductory chapter剧情发生在什么日期？","date":"2022-05-28 08:41:29","description":"\n<h2>先唠叨一下方法：</h2>\n<p data-pid=\"NnR4OB_2\">当我们分析角色的时候，<b>最最基础的工作就是从制作时间轴开始</b>。这也是我们平时了解历史人物的方法。用百科来展示的话，实质也就是下面这一部分：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6fc027cbd3c818bcbce15a0eddd062d4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"849\" data-rawheight=\"1021\" data-watermark=\"watermark\" data-original-src=\"v2-6fc027cbd3c818bcbce15a0eddd062d4\" data-watermark-src=\"v2-aa4e3e160f632150e165e0264b9e7c95\" data-private-watermark-src=\"v2-60c386976ee031136645c1c5191cab90\"></p>\n<p data-pid=\"7JLEDBaR\">在制作时间轴的过程中我们需要额外准备<b>万年历</b>与<b>东京日出日落时刻表</b>并最好随时作者提供的<b>时间相关信息检索工作</b>。即便是没有直接明文指出，大部分时间丸户史明也会提供3条以上相关信息来帮助定位。</p>\n<p data-pid=\"4rSgb4rJ\">比如说IC时期的时间定位就可以通过轻音部部活的时间来完成推算。部活相关信息在雪融雪降，不过此事涉及到一个汉化BUG：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-984841be8db7e5feadb8058839c164d4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1150\" data-rawheight=\"233\" data-watermark=\"watermark\" data-original-src=\"v2-984841be8db7e5feadb8058839c164d4\" data-watermark-src=\"v2-7215461427fdcb4d03f654eccb00ea9f\" data-private-watermark-src=\"v2-643f07aab999f460586c777dddbe02b5\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-ef67e0170fc7187c1530167fcb4893ad_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1144\" data-rawheight=\"219\" data-watermark=\"watermark\" data-original-src=\"v2-ef67e0170fc7187c1530167fcb4893ad\" data-watermark-src=\"v2-6fc8a805531597aee5e3611d9be61935\" data-private-watermark-src=\"v2-fcaab964422a6c54c90c2b1497e51b0d\"></p>\n<p data-pid=\"7KbchOoG\">即火曜日和木曜日被翻译为了星期三和星期四。实际上是轻音部的部活是星期二和星期四。而原本仅这一条就能将IC故事开头的日期锁定为2007年的10月9日或16日的下午4点30到5点之间。</p>\n<p data-pid=\"9CoUPSAN\">冬马在暑假学驾照事件也能通过描写细节了解到是每周进行阶段考试的合宿制驾照考试，周期为一个月。时间为2007年7月18日周三，时间到2007年8月14日周二的2007年甲子园高中八强赛之前。</p>\n<p data-pid=\"JHpJHuD7\">通过制作时间轴我们能发现很多创作上的信息：</p>\n<blockquote data-pid=\"yMyx2y6d\">1.丸户的时间划分在时间表上细到30分钟。但是转化为场景光影安排时会更糙一些大概以一个小时为刻度。<br>2.作品中有一些程序BUG。比如2007年11月4日周日，春希和冬马聊完天后原本应该黑屏转场到一个星期后，但未及时转跳。<br>3.作品有一部分时间BUG，主要是2007年11月12日周一并不是轻音部能用第一音乐室的日子。这个BUG在动画版被作者修复。微妙的是，作品内有“到了地下室时间感就模糊了”这样的语句。<br>4.作品内有一部分神奇且很难认为是BUG的描写，比如2013年2月29日追加演奏会。<br>5.最异常的还得是忘歌偶像的部分，可以看到整个画风都不对。事实上其给出为数不多的细节描写与本篇的细节也有巨大冲突，确定没法并入。</blockquote>\n<p data-pid=\"8zoT2JJj\">实际分析角色情感变化过程需另外按角色大事件分别制作。下为总本，除了IC部分以外应该还能精校2次。不过白学家这么多这种按逻辑应该是每个人自己做一份的东西也不需要无瑕疵，所以就直接放上来了。</p>\n<h2>雪融雪降时间轴、雪融雪降时间线</h2>\n<p data-pid=\"AgXdIXFB\">周2周4轻音社部活<br>周3周5雪菜打工<br>2007年4月9日开学典礼<br>2007年4月11日周三<br>午 雪菜打工<br>2007年4月13日周四<br>午 雪菜打工<br>2007年4月16日周一<br>晨 冬马第一次上学、春冬相识<br>晨 春希找冬马要进路调查表<br>2007年4月17日周二<br>夕 5点 冬马给春希伴奏曲目<span class=\"nolink\">山口百恵</span>《<span class=\"nolink\">禁じられた遊び</span>》、<span class=\"nolink\">The Beatles</span>《Yesterday》、White Album<br>2007年4月18日周三<br>午  雪菜打工<br>2007年4月19日周四<br>夕 5点 冬马给春希伴奏<br>2007年4月20日周五<br>午 雪菜打工<br>2007年4月26日周四<br>夕 5点 冬马给春希伴奏<br>2007年4月27日周五<br>午 雪菜打工<br>夜 武也搭讪冬马<br>2007年4月28日周六<br>夜 goodies事件 冬马见到武也维护春希<br>2007年5月1日-5月6日<br>黄金连休<br>2007年5月7日周一<br>假后上学<br>2007年5月8日周二<br>夕 5点 冬马给春希伴奏<br>2007年5月9日周三<br>午 雪菜打工<br>2007年5月10日周四<br>晨 开学一个月零一天，冬马交出进路调查表<br>夕 5点 冬马给春希伴奏<br>2007年5月15-21日<br>运动会<br>2007年5月22-29日<br>春希处境改善 <br>2007年5月28日周一<br>晨 春希庆祝冬马生日<br>2007年5月29日周二<br>午 冬马给春希伴奏<br>2007年7月17日周二<br>夕 5点 冬马因不及格被教师训斥<br>夕 5点 冬马愤怒弹奏出了巨大的声音<br>夕 5点 雪菜在天台上看体育社团活动。注意到冬马<br>夕 5点 春希演奏《Smoke On The Water》以及伊势正三《なごり雪》<br>夕 5点 冬马陪着春希弹完了White Album <br>2007年7月18日周三 暑假 <br>冬马开始报名参加合宿制驾校<br>午 雪菜打工<br>2007年8月1日周三<br>午 雪菜打工<br>2007年8月2日周四 <br>冬马被教练骚扰并回家<br>2007年8月3日周五<br>午 雪菜打工 <br>2007年8月8日<br>午 雪菜打工<br>2007年8月10日周五<br>冬马通过自主学习、自主考试获得驾照、发现合奏规律<br>午 雪菜打工<br>2007年8月14日周二 盂兰盆节短假开始 <br>07年甲子园高中八强赛 <br>夕 5点 冬马给春希伴奏<span class=\"nolink\">Led Zeppelin</span>《Stairway To Hearven》、佐田雅志《精霊流し》、White Album<br>2007年8月15日周三<br>午 雪菜打工<br>夜 冬马曜子表示不回国，和纱摔碎手机<br>2007年8月16日周四<br>午 12点 冬马在第一音乐室教春希弹吉他<br>2007年8月17日周五<br>午 雪菜打工<br>2007年8月17-24日<br>冬马每天人工搬乐器到第二音乐室<br>2007年8月25-26日<br>冬马雇卡车将大量乐器送到第二音乐室<br>2007年8月28日周二<br>午 12点 冬马在春希预习<span class=\"nolink\">押尾コータロー</span>《コンドルは飛んでいく》时加入演奏，与春希的音色重叠。春希注意到钢琴君<br>午 冬马开始引导春希弹吉他<br>2007年8月29日周三<br>午 雪菜打工<br>2007年8月30日周四<br>午 12点 春冬合奏<br>2007年8月31日周五<br>午 雪菜打工<br>2007年9月3日周一 第二学期开学<br>2007年9月4日周二<br>夕 5点 春冬合奏<br>2007年9月5日周三<br>午 雪菜打工<br>2007年9月6日周四<br>夕 5点 春冬合奏<br>2007年9月7日周五<br>午 雪菜打工<br>2007年9月11日周二<br>夕 5点 春冬合奏<br>2007年9月12日周三<br>午 雪菜打工<br>2007年9月13日周四<br>夕 5点 春冬合奏<br>2007年9月14日周五<br>午 雪菜打工<br>2007年9月18日周二<br>夕 5点 春希被早坂拉走<br>夕 5点 冬马推倒窗边的桌子，愤怒的独奏<br>夕 5点 雪菜听到吉他离开后的独奏<br>夜 春希在北国屋书屋购买绿叶出版社基础语法<br>2007年9月19日周三<br>晨 春希约冬马留下来<br>午 雪菜打工<br>夜 8:50 冬马推倒桌子离开<br>夜 9:00 春希回到教室<br>夜 9:30 春希收拾好桌子离开<br>2007年9月20日周四<br>晨 春希送冬马教科书<br>夜 冬马在goodies吃布丁<br>夜 忠犬和纱大冒险<br>2007年9月21日周五<br>凌晨 3点 冬马找到英语书<br>晨 冬马迟到30分钟到学校<br>午 雪菜打工<br>2007年9月24日-28日 考试周<br>2007年10月2日周二<br>夕 5点 春冬恢复合奏<br>夕 5点 冬马发现春希进步<br>夜 冬马缝小狗玩偶<br>2007年10月3日周三<br>午 雪菜打工<br>2007年10月4日周四<br>夕 5点 春冬合奏<br>2007年10月5日周五<br>午 雪菜打工</p>\n<h2>IC时间轴、IC时间线</h2>\n<p data-pid=\"sAJzikrL\"><br>2007年10月9日周二<br>夕 4点 柳园朋退出轻音社<br>夕 4点 春冬合奏<br>2007年10月10日周三<br>晨 亲志春希采访雪菜<br>夕 4点 雪菜打工<br>2007年10月11日周四<br>夕 4点 春冬合奏<br>夕 4点 武也注意到冬马的合奏<br>2007年10月16日周二<br>学园祭报名提交截止日<br>夕 4点 春冬合奏<br>夕 4点 雪菜唱歌<br>夕 4点 春希上天台<br>2007年10月17日周三<br>晨 冬马试图找春希聊昨天的事、冬马停止演奏<br>晨 雪菜拒绝邀请<br>夕 4点 雪菜打工 <br>夜 春希雪菜约ktv见面<br>2007年10月18日周四<br>夕 4点 雪菜轻音社见习，春希表示钢琴君要休息两三天<br>2007年10月19日周五<br>夕 4点 雪菜打工<br>2007年10月22日周一<br>午 春希找松川君<br>夕 4点 春希睡着<br>夕 5点醒来，错过钢琴君<br>2007年10月23日周二<br>夕 春希爬窗台<br>夕 春希被训斥<br>2007年10月24日周三<br>晨 冬马被训斥<br>晨 冬马雪菜初见面<br>夕 4点 雪菜打工 <br>夕 4点 春希在天台练吉他，武也给出冬马情报<br>2007年10月25日周四<br>夕 4点 春希在第二音乐室被冬马踹出<br>2007年10月26日周五<br>夕 4点 雪菜打工<br>2007年10月31日周三<br>夕 4点 雪菜打工<br>夕 4点 春希跟雪菜认错，提到暑假的事<br>2007年11月1日周四<br>夕 4点 春希听雪菜建议跟冬马聊雪菜，被踹出<br>夕 4点 春希与雪菜（常服）一起回家<br>2007年11月2日周五<br>夕 4点 春希被冬马踹出<br>夜 雪菜辞掉打工找冬马逛街<br>2007年11月3日周六<br>夕 4点 春希顺利进入第二音乐室<br>2007年11月4日周日 <br>晨 三人见面去小木曾家<br>夜 春希冬马交流家庭状况<br>2007年11月12日周一<br>凌晨 1点雪菜获得父母许可<br>午 冬马加入轻音社<br>午 春希被赶到第一音乐室自主练习<br>夜 春希冬马一起坐地铁<br>2007年11月13日周三<br>凌晨 4点 春希入睡、冬马失眠<br>夜 8点 春希和冬马坐地铁，冬马站着睡着<br>夜 9点 冬马带春希回家<br>夜 春希在末班车前睡着<br>2007年11月14日周四<br>晨 7点50 春希撞见冬马出浴<br>午 雪菜邀请春希吃饭<br>午 冬马练习时犯困<br>夜 6点春希回家入浴并小睡了一会<br>夜 8点15 地铁到站<br>夜 春希购买旅行套装、再次留宿冬马家<br>2007年11月16日周五<br>凌晨5点 春希在地板上睡着<br>晨7点15 春希起床<br>午 春希完成第一首歌<br>夜 春希与小木曾家人交涉<br>2007年11月17日周六<br>晨 轻音部在冬马家合宿<br>夕 4点 武也将歌词交给冬马<br>2007年11月18日周日<br>凌晨 1点 雪菜意识到春希留宿的事<br>午 5点 雪菜发挥失常合宿提前结束<br>夜 11点 春希给雪菜打电话，听说初中的事<br>2007年11月19日周一<br>凌晨0点10分 春希宣言永远是朋友<br>晨 冬马上课谱曲 传达不到的爱恋<br>夜 雪菜和春希一起放学<br>夜 春希将雪菜送的苹果转交冬马<br>2007年11月20日周二<br>晨 诹访没收冬马笔记<br>2007年11月21日周三<br>晨 6点 春希睡着<br>晨 7点15 冬马完成 传达不到的爱恋 春希醒来<br>晨 冬马病倒<br>晨 春希头次上课睡觉<br>夜 春希母亲回家<br>夜 19点30分春希到冬马家<br>2007年11月22日周四<br>春希照顾冬马<br>夕 4点 彩排雪菜怯场 <br>夜 冬马退烧，春希冬马聊起童年<br>夜 雪菜彻夜失眠<br>2007年11月23日周五 学园祭开始<br>晨 春希完成《Sound Of Destiny》<br>晨 8点45 春希从大正女店拉雪菜去冬马家<br>晨 开始排练传达不到的爱恋<br>2007年11月24日周六 峰城大附属学园祭第二天<br>午 3点 春希等三人上台<br>午 朋、千晶、曜子、秋菜孝宏参加<br>夕 4点 春希听冬马演奏时睡着<br>夜 春希与雪菜成为恋人<br>2007年11月25日周日 峰城大附属学园祭第三天<br>春希与雪菜一共逛学园祭、后夜祭 <br>夜 雪菜让春希去冬马家，春希全剧第一次意识到自己一直喜欢冬马<br>夜 曜子与和纱吃饭<br>夜 10点 春希雪菜见面<br>2007年11月26-30日<br>夕 4点 雪菜把冬马叫上天台<br>2007年12月9日周日 <br>春希三人在雪菜家开学习会<br>2007年12月14日周五<br>春希三人在雪菜家补习英语<br>2007年12月15日周六 考试周结束<br>晨 英语考试结束<br>2007年12月22日周六 结业式<br>冬马完成全部补考<br>2007年12月24日周一 开车去温泉<br>夜 第0次轻音部ob会<br>夜 三人混浴<br>2008年1月4日周五 开学<br>2008年1月21日周一<br>夕 4点 雪菜邀请春希过生日<br>2008年1月24日周四<br>冬马停止上课<br>2008年1月26日周六<br>夜 春希去冬马家<br>2008年2月3日周日<br>钢琴大赛<br>午 冬马落选<br>夜 曜子邀请和纱去奥地利<br>2008年2月4日周一<br>冬马出国<br>春希给冬马发短信收不到回复<br>2008年2月5日周二<br>雪菜给冬马语音信箱留言<br>春希给冬马发短信收不到回复<br>冬马给雪菜打电话告诉了考试的事情<br>2008年2月6日周三<br>夕 5点 雪菜告诉春希考试的事情<br>2008年2月7日周四<br>夜 雪菜拒绝春希单独相处的提案<br>夜 小木曾家准备去旅行<br>2008年2月9日周六 雪菜生日会<br>午 春希买戒指<br>夕 5点 春希与曜子正式见面<br>夜 春希去机场找和纱<br>夜 熟练街</p>\n<p data-pid=\"ULipgGn2\">夜 几个小时后，春希给雪菜发短信将雪菜喊了过来。<br>2008年2月11日周一<br>夜 雪菜照顾生病的春希</p>\n<p data-pid=\"H9FuMRy7\">夜 小木曾家旅行回归<br>2008年2月14日周四 雪菜生日<br>晨 春希赠送戒指<br>晨 冬马告诉雪菜要出国<br>夜 春希送雪菜回家<br>2008年2月21日周四<br>夕 5点 春希武也在第一音乐室弹吉他<br>夕 5点 雪菜依绪在天台聊天<br>2008年2月28日周四 毕业典礼<br>午 春希跑出去找冬马<br>夜 春希在房间里接到电话<br>夜 分手炮<br>2008年2月29日周五<br>午 雪菜拉上春希去机场<br>午 2点 机场事件</p>\n<h2>忘歌偶像时间轴、时间线</h2>\n<p data-pid=\"Fv6Ceoic\"><br>2007年1-3月<br>友近母亲病倒<br>2008年4月21日周一<br>峰城大学入学<br>2008年10月6-10日春希雪菜最后一次联系<br>推定10月9日<br>2008年11月10-14日 雪菜武也依绪三人喝酒<br>2008年11月21日周五 峰城大学学园祭开幕<br>晨 春希雪菜逛学园祭<br>学校广播第一次放传达不到的爱恋<br>2008年11月春希和友近走近<br>2009年11月20日周五 峰城大学学园祭<br>广播开始放传达不到的爱恋<br>2009年11月27日 雪菜放学后拦住友近<br>2009年11月30-12月5日 友近与雪菜传出绯闻<br>2009年12月7-12日 考试周<br>2010年2月13日周六 期末考结束<br>午 雪菜发现春希不在研讨会名单<br>午 春希告诉雪菜要转部，雪菜对春希说 在新专业也要努力哦<br>夜 依绪武也对春希发脾气<br>2010年2月14日周日 <br>凌晨 友近告白被雪菜僵住无反应<br>凌晨 春希和雪菜分手，双方最后一次见面<br>凌晨 雪菜与友近打电话退出合宿<br>春希参加合宿<br>2010年3月10-20日<br>友近母亲出院<br>2010年4月 峰城大学开学<br>春希开始在搬家公司打工<br>2010年4月12-16日 <br>雪菜看见春希与千晶走出文学部大楼<br>2010年4月17日周六<br>雪菜参加政经联谊<br>夜 9点回家<br>2010年5月5日周三<br>夕 春希和友近付够学费，春希揍友近<br>2010年5月6日周四<br>晨 黄金周最后一天，友近君上门拜访雪菜<br>2010年5月7日周五<br>晨 雪菜差点唱出传达不到的爱恋</p>\n<h2>CC时间轴、时间线</h2>\n<p data-pid=\"6q0G06-z\"><br>2001年4月<br>麻理高二 16岁（正常入学）<br>麻理认识佐和子<br>2006年1月1日<br>麻理21岁<br>2006年2月<br>滨田21岁<br>2006年4月<br>麻理入职开樱社<br>2008年3月 <br>春希入住公寓<br>2008年3月 <br>松冈大学毕业<br>2008年3月前<br>千晶父母离婚<br>2008年4月21日周一 峰城大学入学<br>春希、雪菜、武也、依绪、千晶入学<br>2008年4月 <br>孝宏、小春、美穗子、早百合、亚子入学峰城高<br>2009年1月1日<br>麻理24岁<br>2009年4月<br>柳园朋入学峰城大<br>本田入学峰城大<br>中川入学大专<br>2009年5月前 <br>春希开始在私塾兼职现代日语/英语文法讲师<br>美穗子问春希有没有女朋友<br>2009年6月24日周三<br>春希私塾打工<br>2009年6月28日周日<br>春希关小黑屋<br>2009年<br>本田入职goodies<br>2009年11月20日周五 峰城大学学园祭/峰城附属学园祭<br>柳园朋获得miss峰城附属<br>2009年12月<br>大专2级生中川入职goodies<br>小谷入职goodies<br>2010年1月1-3日<br>春希goodies打工<br>2010年1月1日周五<br>麻理25岁<br>2010年2月<br>松冈以非应届生身份入职开樱社<br>2010年3月 春希goodies辞职<br>一个一礼拜后 小谷辞职<br>2010年3月3日周三<br>夜 春希私塾打工<br>2010年3月28日周日<br>春希关小黑屋<br>2010年3月31日周三<br>夜 春希私塾打工<br>2010年4月春希进入文学部<br>千晶拉着春希到处喝酒，持续一周<br>千晶拉着春希到处喝酒，持续一周 千晶第一次去春希公寓</p>\n<p data-pid=\"l23c_lCK\">文学部同年级都开始找春希帮忙 </p>\n<p data-pid=\"M456u81h\">2010年4月11日周日<br>春希关小黑屋<br>2010年4月12日周一<br>午 荻岛研讨会<br>2010年4月13日周二<br>午 荻岛研讨会<br>2010年4月14日周三<br>夜 春希私塾打工<br>2010年4月18日周日<br>春希关小黑屋<br>2010年4月14日周三<br>夜 春希私塾打工<br>2010年4月19日周一<br>午 荻岛研究会<br>2010年4月20日周二<br>午 荻岛研究会<br>2010年4月25日周日<br>春希关小黑屋<br>2010年4月29日黄金周开始<br>夜 春希私塾打工<br>2010年5月2日周日<br>春希关小黑屋<br>2010年5月5日周三<br>夜 春希私塾打工<br>2010年5月6日周四<br>返校<br>2010年5月9日周日<br>春希关小黑屋<br>2010年5月10日周一<br>荻岛研讨会<br>2010年5月11日周二<br>荻岛研讨会<br>2010年5月12日周三<br>夜 春希私塾打工<br>2010年5月16日周日<br>春希关小黑屋<br>2010年6月前 <br>春希入职开樱社<br>2010年8月<br>小春网球社退社<br>2010年10月23日前<br>春希雪菜最后一次见面<br>2010年11月8日周一<br>午 荻岛研讨会<br>千晶停止在研究会露面<br>2010年11月19日周五 峰城学园祭<br>柳园朋获得miss峰城<br>春希开始麻痹意识<br>春希开樱社打工<br>麻理出国<br>2010年11月21日周日<br>春希关小黑屋<br>2010年11月22日周一<br>午 荻岛研讨会<br>2010年11月23日周二<br>午 荻岛研讨会<br>夜 春希开樱社打工<br>2010年11月24 周三 CC开始<br>春希开始着手研究会合宿工作<br>午 春希请千晶吃A套餐<br>夜 春希私塾打工、私塾原定课程剩3节。<br>夜 春希拒绝矢田美穗子<br>夜 春希开樱社打工<br>夜 麻理回国<br>夜 春希开始做《活跃在世界上的日本的青年才俊们》整理工作<br>2010年11月25日周四 <br>午 政经部开始讨论与医学部周末联谊，雪菜拒绝去ktv<br>午 千晶回礼请春希露天茶座的意大利面套餐，主导春希和雪菜见面<br>2010年11月26日周五 <br>午 荻岛研讨会联谊<br>午 小春到大学找春希<br>夕 4点 雪菜武也依绪喝酒<br>夜 春希开樱社打工<br>夜 春希注意到冬马和纱获得了亚军<br>2010年11月28日周日<br>春希关小黑屋<br>2010年11月29日周一<br>荻岛研讨会<br>2010年11月30日周二<br>荻岛研讨会<br>夜 千晶喝酒<br>夜 春希开樱社打工<br>2010年12月1日周三 <br>晨 美穗子对小春说要冲进大学找春希<br>晨 春希与千晶约定周三补习<br>夕 4点 千晶以女友身份打发小春<br>夜 千晶在春希公寓开学习会<br>夜 雪菜买到开樱画报<br>夜 雪菜给春希发短信<br>2010年12月2日周四 <br>凌晨3点 春希给雪菜打电话祝贺冬马获奖<br>2010年12月3日周五 <br>夜 春希开樱社打工<br>夜 春希接下开樱画报工作，第一次正式进行编辑工作<br>2010年12月4日周六 <br>春希工作到失去意识<br>2010年12月5日周日 <br>晨 佐藤打电话找春希到goodies工作<br>晨 小春开始goodies打工<br>午 1点 春希让小春实习30分钟<br>午 1点20 春希让小春撤退<br>午 3点 春希拿到夜班表<br>夜 7点 春希送小春回家<br>2010年12月6日周一 <br>午 荻岛研讨会<br>午 春希在高中取材<br>午 小春从孝宏处听说女朋友是雪菜<br>2010年12月7日周二<br>荻岛研讨会<br>2010年12月8日周三 <br>夜 千晶在春希公寓开学习会<br>2010年12月9日周四<br>凌晨 三点 千晶接雪菜的电话<br>夕 4点 武也告诉春希联谊的事<br>2010年12月10日周五<br>夜 麻理打回春希草稿<br>2010年12月11日周六<br>晨 春希goodies打工，小春要求实习到11点<br>午 11点 小春进入见习<br>午 1点 春希指导小春<br>午 3点 小春进行实习<br>夕 5点 春希讨论调班事宜，佐藤联谊，中川喝酒<br>夜 7点 雪菜联谊<br>夜 8点30 夜班迟到的人到场<br>夜 10点 雪菜与朋 千晶见面，被千晶接走<br>夜 11点30 春希接孝宏电话与小春武也找雪菜<br>夜 雪菜与千晶喝酒<br>2010年12月12日周日<br>夜 0点30 春希送小春回家时遇见雪菜<br>夜 3点 春希送雪菜回家被小木曾父母训了一顿<br>午 春希回到公寓<br>2010年12月13日周一 <br>麻理获得学园祭录像<br>小春观看学园祭录像<br>午 千晶在戏剧部露面<br>午 荻岛研讨会<br>午 千晶打电话确认春希没去研讨会<br>夕 4点 春希写冬马和纱专题<br>2010年12月14日周二 <br>午 荻岛研讨会<br>午 春希在研讨会等千晶 <br>夜 春希稿件通过<br>2010年12月15日周三 <br>夕 4点 小春到大学找春希，约周六日打工见面<br>夜 千晶在春希公寓开学习会<br>夜 武也依绪到春希公寓慰问，千晶学习会中断约周六日开学习会<br>2010年12月16日周四<br>凌晨3点 依绪让春希把雪菜领回去<br>凌晨3点 春希给雪菜发短信<br>晨 依绪注意到春希的洗护套装被用过<br>2010年12月17日周五 <br>晨 美穗子问话小春</p>\n<h3>\n<br>麻理打棒球</h3>\n<p data-pid=\"Z2iBNBjo\"><br>2010年12月18日周六<br>凌晨 0点30 麻理完成工作<br>凌晨 1点 春希麻理喝酒<br>凌晨 4点30 春希麻理打完棒球</p>\n<h3>\n<br>千晶学习会1</h3>\n<p data-pid=\"DEy7zFBa\"><br>2010年12月17日周五 <br>千晶聊到和冬马春希一样的家庭情况<br>选项 和千晶聊一天<br>2010年12月18日周六<br>晨 两人入睡<br>午 两人睡醒<br>夕 4点 千晶离开 跟母亲约饭<br>选项 和雪菜聊到天亮</p>\n<h3>\n<br>千晶学习会2</h3>\n<p data-pid=\"ySPguIRJ\"><br>2010年12月18日周六 <br>千晶聊到和冬马春希一样的家庭情况<br>选项 千晶聊一天<br>2010年12月19日周日<br>晨 两人入睡<br>午 两人睡醒<br>夕 4点 千晶离开 跟母亲约饭<br>选项 和雪菜聊到天亮</p>\n<h3>\n<br>goodies打工</h3>\n<p data-pid=\"wYlZlPfW\"><br>2010年12月18日周六<br>小春goodies打工<br>2010年12月19日周日<br>晨 春希、小春goodies打工<br><br>2010年12月20日周一 研讨会报告截止日期<br>夕 4点 春希参加荻岛研讨会聚餐<br>夕 4点35 千晶偶遇雪菜<br>夕 4点40 春希到约定的地点<br>夜 7点 千晶与雪菜喝酒</p>\n<h3>\n<br>选项 千晶与春希接吻</h3>\n<p data-pid=\"FHey7gkr\"><br>2010年12月20日周一<br>夜 春希与千晶喝酒<br><br>2010年12月21日周二 <br>夕 4点 开樱画报冬马和纱专题发售<br>夕 4点 麻理给千晶开庆祝派对<br>夜 雪菜购买开樱画报增刊，停止吃饭<br>夜 雪菜拒绝22号出门，约春希24号见</p>\n<h3>\n<br>选项 麻理给春希买杂志</h3>\n<p data-pid=\"1ZogGI-D\"><br>20010年12月21日周二<br>夜 11点 麻理给春希买杂志</p>\n<h3>公共内容</h3>\n<p data-pid=\"ZRAvrIUE\"><br>2010年12月22日周三 <br>晨 小春安排佐藤改排班<br>夜 武也依绪送电影票<br>夜 孝宏找雪菜借开樱画报增刊，雪菜拒绝<br>2010年12月23日周四<br>午 春希购买戒指<br>午 春希雪菜约会<br>夜 春希被雪菜踢下床</p>\n<h2>千晶线时间轴、千晶线时间线</h2>\n<p data-pid=\"-AKYfIFo\"><br>2006年<br>武也追千晶加入戏剧部<br>2010年12月24日周五<br>凌晨 春希跟着末班车到了御宿<br>凌晨 2点春希在家门口见到千晶<br>夜 两人入睡<br>2010年12月25日周六<br>凌晨 0点38 武也电话留言<br>晨 6点半 春希醒来<br>晨 千晶吃过早餐后入睡<br>夕 4点 千晶睡醒<br>夜 10点20 小春电话留言<br>夜 11点45 依绪电话留言，表示跟依绪联系上了<br>2010年12月26日周日<br>晨 11点 春希醒来接武也电话<br>2010年12月28日周二<br>凌晨 1点32 麻理电话留言，麻理出国<br>春希时间认知出现问题，认为这是第四天<br>2010年12月30日周四<br>晨 9点 春希醒来<br>晨 11点 千晶回来<br>2011年12月31日周五<br>夜 20点 冬马曜子音乐会<br>夜 11点 春希向千晶坦白<br>2011年1月1日周六<br>凌晨 千晶扮演冬马饶恕了春希<br>凌晨 春希入睡<br>晨 6点 春希起床<br>晨 10点 千晶醒来<br>晨 春希的“千晶依存症”被治好<br>夜 千晶收拾行李，打算明天走<br>2011年1月2日周日<br>雪菜停止哭泣<br>2011年1月3日周一<br>晨 6点30 春希醒来，认为千晶昨晚还在<br>2011年1月4日周二<br>夕 4点 上原回到戏剧社，得知千晶在写剧本<br>夜 依绪武也到春希公寓<br>夜 2小时后 依绪发现千晶刻意使用了留给武也依绪的牙膏<br>夜 依绪和武也决裂<br>2011年1月10日周一<br>寒假最后一天<br>2011年1月11日周二<br>夕 4点 千晶找雪菜聊天<br>夕 4点 依绪去研讨会没有找到雪菜<br>夕 4点 依绪要求武也调查千晶<br>午 春希在荻岛研究室等千晶<br>夜 雪菜短信联络春希<br>夜 春希开樱社打工<br>2010年1月12日周三<br>夜 春希开樱社打工<br>2010年1月14日周五<br>夜 春希开樱社打工<br>2011年1月15日周六<br>春希goodies打工<br>小春追问春希<br>2011年1月16日周日<br>春希goodies打工<br>小春追问春希<br>2011年1月17-22日<br>春希尝试联系千晶<br>春希找遍所有教室<br>2011年1月18日周二<br>夜 春希开樱社打工<br>2011年1月19日周三<br>夜 春希开樱社打工<br>2011年1月21日周五<br>夜 春希开樱社打工<br>2011年1月22日周六<br>晨 春希goodies打工<br>晨 春希在更衣室给千晶发短信<br>夜 春希开樱社打工<br>2011年1月23日周日<br>凌晨 0点57分 武也电话留言<br>春希对武也说今天有兼职<br>凌晨 2点 麻理和春希下班<br>凌晨 3点 春希回家<br>凌晨 春希看雨月山之鬼<br>2011年1月24日周一<br>夕 4点 武也带春希去戏剧部<br>夜 千晶向春希摊牌<br>2011年1月24日夜-26日夜<br>春希取消所有打工，72小时内除了睡觉就是发呆<br>2011年1月25日周二<br>凌晨 2点 雪菜给春希发短信，春希入睡<br>2011年1月26日周三<br>晨 8点 春希醒来<br>午 武也找上原<br>午 依绪找千晶<br>2011年11月27日-29日<br>春希扫除、复习在街上游荡<br>2011年1月29日周六<br>夕 4点 春希三次打扫房间<br>夜 8点 春希乘上地铁<br>夜 10点 春希在地铁站坐了2小时<br>春希爬回家进入“无梦的睡眠”<br>2011年2月1日周二<br>午 春希被电话吵醒，发烧39度<br>午 千晶在研讨会得知春希生病<br>夕 4点 春希起床吃东西<br>夕 4点 千晶决定探病<br>夕 4点 雪菜探病<br>夜 春希向雪菜摊牌<br>夜 千晶与雪菜摊牌<br>2011年2月10日周四<br>考试周最后一天，学校进入春假<br>午 春希参加补考<br>午 武也约春希滑雪，春希拒绝<br>2011年2月14日周一<br>夜 11点40 春希去戏剧社找千晶<br>2011年2月15日周二<br>凌晨 春希探望千晶，千晶在春希腿上睡着<br>2011年2月21日周一<br>入学考试<br>2011年2月23日周三<br>入学考试放榜<br>晨 依绪从雪菜处得知孝宏补缺考上政经系<br>午 春希与武也喝酒<br>夜 千晶写剧本<br>2011年2月25日周五<br>夜 11点 千晶到公寓找春希<br>2011年2月26日周六<br>凌晨 春希乘末班车回家，时隔1个月与雪菜打电话<br>凌晨 千晶在春希公寓门口等春希<br>凌晨 千晶与春希约定说真话的信号<br>2011年2月28日周一<br>午 0:30 春希到便利店<br>午 1点 雪菜到便利店<br>午 春希给雪菜买手镯<br>午 4点 春希与雪菜吃饭逛街<br>2011年3月1日周二<br>凌晨 0:30 春希与雪菜在站台告别<br>凌晨 1点 昏倒的千晶醒来<br>2011年9月<br>千晶主持研究室发表会</p>\n<h2>麻理线时间轴、麻理线时间线</h2>\n<p data-pid=\"Do_iBVYO\"><br>2010年12月25日周六<br>凌晨 春希到开樱社遇见独自加班的麻理<br>凌晨 麻理和春希庆祝圣诞节<br>凌晨 3点 麻理告诉春希要去旅行，春希向麻理告白<br>2010年12月27日周一<br>午 铃木告知春希麻理不来上班<br>午 松冈将冬马曜子音乐会门票交给春希<br>2010年12月31日周五<br>夜 春希开樱社打工<br>夜 8点30 春希接武也电话<br>夜 11点 麻理和佐和子在关岛相会<br>夜 11点50 春希离开编辑部去御宿艺术文化厅<br>2011年1月1日周六<br>凌晨 2点 春希强迫自己躺在床上 <br>凌晨 3点 佐和子拿麻理手机拨春希电话<br>凌晨 4点半 春希在开樱社给铃木打电话<br>夜 滨田熬夜工作<br>2011年1月2日周日<br>凌晨 5点 春希首班车回家<br>凌晨 6点 春希上班<br>夜 滨田熬夜工作<br>2011年1月3日周一<br>凌晨 5点 春希首班车回家<br>凌晨 6点 春希上班<br>晨 7点 铃木上班<br>晨 10点 铃木去印刷厂<br>2011年1月4日周二<br>凌晨 5点 春希首班车回家<br>凌晨 6点 春希上班<br>2011年1月5日周三<br>凌晨 5点 春希首班车回家<br>凌晨 6点 春希上班<br>夜 春希开樱社打工<br>夜 麻理回国<br>夜 麻理从铃木处得知春希一直在上班<br>夜 麻理将春希带回家<br>夜 春希从麻理家逃走，被麻理追回来<br>夜 21点 春希入睡<br>2011年1月7日周五<br>午 1点 春希醒来<br>2011年1月8日周六<br>凌晨 麻理开始在美容院做美容<br>2011年1月11日 寒假结束<br>2011年1月12日周三<br>凌晨 2点30 春希入睡<br>晨 6点30 春希醒来<br>晨 春希打电话找麻理，雪菜在学校看见春希<br>2011年1月13日周四<br>午 佐和子介绍麻理去妇科开药<br>2011年1月16日周日<br>凌晨 1点15分 麻理春希酒吧见面，试图辞职离开一年<br>凌晨 春希向麻理坦白，即将说到雪菜时被麻理服药导致的呕吐打断<br>凌晨 春希把麻理送回家<br>夜 武也打春希电话<br>2011年1月17日周一<br>凌晨 春希离开麻理家<br>凌晨 春希接武也电话，武也和春希见面<br>春希开始约雪菜谈绝交<br>2011年1月21日周五<br>夜 10点半 春希约雪菜出来绝交，被认为是给女朋友发短信<br>夜 麻理给春希诅咒人偶<br>2011年1月22日周六<br>凌晨 春希在麻理家等麻理<br>凌晨 4点 麻理接到隔壁部门电话，回去上班<br>晨 春希收到雪菜短信说明天要帮孝宏补习，在麻理家等麻理<br>晨 雪菜约孝宏明天吃午饭，孝宏拒绝表示明天要去补习<br>2011年1月23日周日<br>春希短信约雪菜绝交，表示接下来除了周三以外都有空，约周一周二5点后<br>2011年1月25日周二<br>夜 11点30 雪菜发短信拒绝<br>2011年1月26日周三<br>夕 4点 春希有约<br>春希短信约周四周五5点后，周五上午无课<br>2011年1月27日周四<br>凌晨 1点30分 雪菜表示时间表没定下来，拒绝见面<br>2011年1月28日周五<br>夜 11点30分 春希再次约雪菜今明两天见面<br>夜 春希约麻理周日见面<br>2010年1月30日周日<br>夜 雪菜拒绝见面<br>2011年1月31日周一<br>凌晨 麻理回家<br>凌晨 麻理提出自己是否是冬马替代品，春希否认<br>晨 麻理打包行李去美国<br>2011年2月10日周四<br>午 期末考结束<br>午 雪菜同意晚上见面<br>午 武也约春希滑雪<br>夜 春希与麻理打电话，约在下周一见面<br>夜 雪菜短信通知春希下周一下午5点在车站见面<br>2011年2月14日-2月19日<br>麻理一共睡觉3小时<br>2011年2月14日周一<br>午 3点 春希去饰品店买礼物<br>夕 4点 麻理通知航班到达时间<br>夕 5点 春希与雪菜见面，春希约8点<br>夜 6点 麻理到达机场，与主编约9点<br>春希面对2008年2月14日一样的选择，将三年前去机场称为人生中最大的错误<br>夜 麻理犹豫去不去美国<br>夜 7点 雪菜刻意提起3年前，自己推掉了家人的旅行一个人等待春希的事<br>2011年2月15日周二<br>凌晨 0点 麻理挂断第五次电话，雪菜向春希道歉使用了大招<br>凌晨 主编询问麻理是否真的要拒绝，麻理表示接受调任<br>凌晨 1点 春希离开雪菜家<br>凌晨 麻理回家，春希麻理决裂<br>春希开始准备出国手续<br>晨 9点春希与雪菜发短信，麻理准备出发<br>2011年2月18日周五<br>午 春希打电话辞职，铃木本想征求春希同意<br>夕 5点 春希短信表示自己没去滑过雪也没碰过滑雪板。曾用干事权限否决过研究室的滑雪合宿提议。<br>夕 5点 佐和子打电话给春希<br>2011年2月19日周六<br>凌晨 春希与佐和子在酒吧碰头<br>凌晨 麻理喝醉酒打电话要佐和子帮忙<br>2011年2月19日-2月27日<br>春希等待3月麻理回国<br>2011年2月27日周日<br>夜 武也来电询问滑雪计划安排，指责春希一个月都没做出了断<br>夜 武也上门，将春希带去滑雪<br>夜 麻理提前回国<br>2011年2月28日周一<br>凌晨 四人坐车去滑雪<br>凌晨 3点 四人到达山梨县<br>凌晨 5点 依绪递过毛毯让两人盖上<br>午 春希第一次滑雪<br>夕 5点 麻理退房检查，春希返还的钥匙扣上取下了稻草人的饰品<br>夜 麻理搭车去机场<br>夜 武也要求春希让自己与依绪睡一间房，完成自己的夙愿<br>夜 雪菜要求春希一直聊到早上<br>2011年3月1日周二<br>凌晨 麻理发短信告诉春希下午1点飞机，表示如果春希撒娇就会考虑考虑，后删除<br>凌晨 春希离开合宿地，去往东京<br>凌晨 5点 春希到达长野车站<br>晨 9点 春希坐上中央线<br>晨 10点 春希到达名古屋<br>晨 11点 佐和子到达机场、春希在名古屋坐上了底特律的航班<br>午 1点 麻理航班准点起飞<br>2011年3月2日周三 东京时间 凌晨 2点30 <br>2011年3月1日 纽约时间 午 12:30 麻理到达机场，春希麻理碰面</p>\n<h2>小春线时间轴、小春线时间线</h2>\n<p data-pid=\"9ZCaS7OV\"><br>2007年4月<br>小春、美穗子、早百合、亚子入学峰城大附属<br>矢田美穗子作为幼儿园开始的嫡系无法融入班级，初中时几次表示不肯去上学<br>小春每天绕路去接美穗子上学<br>2010年4月<br>小春、早百合、亚子成为同班同学<br>2010年12月25日周六<br>晨 春希彻夜未眠后走出房间<br>夜 7点 春希在goodies遇见小春，春希逃跑<br>夜 9点 美穗子撞见小春安慰春希<br>夜 10点 春希入睡<br>2010年12月26日周日<br>凌晨 3点 春希醒来<br>晨 春希GOODIES打工<br>午 2点 佐藤打听起春希的事<br>夜 7点 小春武也见面<br>2010年12月27-30日<br>10点-11点30春希小春goodies打工<br>2010年12月31日周五<br>夜 11点30 春希与小春关店<br>夜 11点45 小春拉着春希去末次八幡宫参拜<br>2011年1月1-3日<br>雪菜拜访双亲老家<br>2011年1月1日周六<br>凌晨 0:15 春希送小春护身符<br>凌晨 1点 春希送小春回家<br>晨 9点 小春到goodies<br>晨 9点30 小春向春希道歉，请求原谅，春希原谅小春<br>2011年1月2-9日<br>10点-11点30春希小春goodies打工<br>2011年1月9日周日<br>夜 11点30 春希送小春回家时，提议明天一起休息<br>2011年1月10日-16日<br>孝宏逛其他大学<br>2011年1月10日周一<br>夜 7点 春希带小春吃饭<br>小春赚到了14万<br>小春展示了12月25日的电话记录<br>春希展示了雪菜返还的新年短信<br>2011年1月11日周二<br>晨 6点30 春希起床<br>晨 8点20分 雪菜在校门口等到春希<br>晨 8点20分 小春到校，正常时间8点到校，早百合亚子找小春谈话<br>晨 8点25分 峰城大附属第一节课<br>晨 8点50分 峰城大第一节课<br>晨 峰城大毕业论文发表彩排<br>2011年1月14日周五<br>夜 春希被麻理发火训斥，送钥匙扣<br>2011年1月15日周六<br>晨 8点 春希回家<br>晨 小春对美穗子发誓不再说谎<br>晨 美穗子追问春希隐私小春选择闭嘴<br>晨 10点 春希被佐藤电话吵醒，得知小春没来<br>晨 11点 春希到goodies打工<br>午 1点 小春联系佐藤说昨晚发烧到38睡过了头<br>午 1点30 小春赶到goodies<br>夜 春希送小春回家<br>2011年1月16日周日<br>晨 春希小春goodies打工<br>2011年1月20日周四<br>孝宏决定去参观大学，雪菜给春希打电话<br>2011年1月21日周五<br>夕 4点 春希带着考上政经的孝宏参观文学部<br>夕 4点 春希听说美穗子的事<br>夕 4点 诹访带着孝宏拜访美穗子<br>2011年1月22日周六<br>晨 春希看到小春拜访美穗子被拒绝<br>晨 小春与小春一起打工<br>夜 春希送小春回家<br>夜 春希抚摸小春的头</p>\n<p data-pid=\"4t3f0WFA\">2011年1月23日周日<br>夜 春希与小春分别时初吻<br>2011年1月24日周一<br>雪菜约春希参加2月12、13日的派对<br>晨 8点20分 春希拒绝派对要求后折返去噶咖啡厅<br>晨 早百合亚子质问小春<br>2011年1月25日周二<br>凌晨0点 小春给春希打电话<br>凌晨1点 春希小春约周五打工<br>凌晨2点 小春向春希表白<br>2011年1月27日周四<br>晨 自习课时小春在班上被羞辱<br>2011年1月30日周日<br>夜 10点武也和依绪在goodies讨论滑雪，依绪刻意邀请小春和春希女朋友一起去滑雪<br>夜 11点30 小春去车站等春希<br>2011年1月31日周一<br>凌晨 0:30 春希与小春会和，接吻<br>夕 4点 小春练习时被网球部员指指点点，传闻在学校疯传<br>夕 4点 孝宏聊天中提到小春在新生入学仪式上助词、小春拒绝报名MISS峰城附属<br>2011年2月1日周二<br>凌晨 0：00-0:30 小春给春希打电话。春希要小春和矢田一直做朋友，小春表示会一直烦她缠着她。<br>2011年2月3日周四<br>晨 诹访安排小春毕业致辞<br>2011年2月4日周五<br>凌晨 武也来电话找春希借笔记<br>夕 4点 附属学生看到小春找春希<br>夕 4点 武也约春希周六吃饭，被拒绝，邀请春希去雪菜生日派对<br>夕 4点 小春与春希武也会面<br>夜 小春到春希家<br>夜 春希发短信拒绝雪菜生日宴会邀请。小春给妈妈打电话说会外宿<br>夜 小春在噩梦中惊醒，在春希怀中痛哭<br>2011年2月5日周六<br>晨 7点 小春离开春希家<br>2011年2月10日周四<br>午 3点 课程结束，孝宏邀请小春参加派对<br>午 孝宏和早百合亚子吵架<br>午 小春带着换洗衣物见到春希<br>午 两人扛着衣物购物<br>午 春希带着小春去饰品店<br>夕 5点 两人家庭餐馆吃饭<br>2011年2月11日周五<br>晨 春希小春goodies打工<br>夜 小春在春希家过夜<br>夜 春希彻夜看着小春<br>2011年2月12日周六<br>春希差点在后厨睡着<br>春希寄了生日礼物给雪菜<br>夜 11点50 春希昏厥，10分钟后被小春叫醒<br>2011年2月13日周日<br>夕 5点 雪菜生日派对<br>夜 春希收到所有女生的巧克力<br>夜 武也得知小春被孤立的事<br>夜 11点 小春表示掉了胸针开始找东西<br>2011年2月14日周一<br>凌晨 0点10分 小春掏出藏着的巧克力<br>凌晨 2点 春希回到公寓，收到雪菜的礼物，雪菜的短信引用了之前发的信息<br>晨 小春专门到更衣室示威后回家<br>2011年2月15日周二<br>夜 武也在依绪房间和依绪吵了一宿<br>2011年2月16日周三<br>夕 5点 武也告诉春希，小春的遭遇<br>2011年2月18日周五<br>夕 5点 小春打电话确认能去春希家<br>夕 5点 孝宏发现小春被从毕业相册除名<br>夕 5点 孝宏对小春说永远是朋友<br>夜 小春爽约，春希找佐藤要小春家人联系方式，家人表示“我家的孩子一定没事的”<br>夜 春希在寻找5小时后找到小春<br>2011年2月19日周六<br>晨 烦恼一整晚后小春决定辞掉goodies工作<br>晨 孝宏考试，小春向孝宏道歉<br>晨 春希陪着小春辞去goodies工作<br>晨 小春承认与春希的事<br>春希小春开始每天超过10小时以上应试复习<br>2011年2月21日周一<br>晨 小春放弃推荐<br>晨 小春向早百合亚子告别<br>2011年2月22日周二<br>晨 小春和美穗子的母亲见面，小春转交告别信<br>2011年2月24日周四<br>凌晨 小春在复习中睡着<br>2011年2月28日周一<br>夜 春希与雪菜告别<br>2011年3月1日周二 峰城大附属毕业典礼<br>晨 春希给小春颁发毕业证书<br>孝宏的纽扣都被要走了<br>亚子找孝宏要最后一颗纽扣<br>2011年3月14日周一<br>晨 清泉大学入学考，小春在心中向春希告别<br>晨 春希收到雪菜要求和小春见面的短信<br>夕 5点 雪菜和小春见面<br>夜 6点30 雪菜送走小春，删掉春希地址<br>夜 春希与小春见面<br>2012年3月<br>晨 春希因体检迟到30分钟<br>晨 小春考上清泉大学<br>晨 美穗子给小春道贺</p>\n<h2>雪菜线时间轴、雪菜线时间线</h2>\n<p data-pid=\"f7fjaQaU\"><br>2005年4月<br>丰滨芳人与武也依绪同班<br>2009年2月14日<br>武也带女友参加峰城大情人节演出<br>2010年2月14日<br>武也带女友参加峰城大情人节演出<br>2010年12月25日周六<br>晨 春希睁眼看着日出<br>夜 依绪和雪菜见面后打来电话<br>2010年12月26日周日<br>晨 春希睁眼看着第二个日出<br>晨 武也打来电话，第九次语音留言<br>2010年12月27日周一<br>午 12点 春希拉上窗帘、睡着<br>2010年12月28日周二<br>午 1点30 春希被麻理的电话吵醒，麻理告知会休息到5号<br>麻理告知冬马曜子音乐会、春希坦白<br>2010年12月29日周三<br>晨 8点 春希醒来<br>夜 8点 千晶拜访春希<br>夜 千晶离开<br>2010年12月30日周四<br>午 春希出门<br>夜 邮局送来音乐会门票<br>夜 春希游荡到goodies<br>夜 春希到goodies打工，小春得知是雪菜甩掉了春希<br>夜 小春鼓励春希<br>2010年12月31日周五<br>凌晨 小春把美穗子喊出出来和春希见面<br>凌晨 美穗子得知小春在帮自己忙后给小春道歉<br>夜 7点 武也电话邀请春希<br>夜 春希想起音乐会的事，选择去和武也碰头<br>夜 春希向武也依绪坦白，依绪发火<br>夜 23点59分 三人走到御宿艺术厅门口<br>2011年1月<br>B班岛津分手<br>2011年1月1日周六<br>凌晨 0:00 新年钟声响起，春希打电话向雪菜告白<br>2011年1月11-13日<br>午 春希在研讨会等千晶<br>2011年1月13日周四<br>夕 4点 春希碰上雪菜，雪菜逃跑，武也抓春希去春希家喝酒<br>夜 依绪抓雪菜去食堂，雪菜说出自己主动与春希提分手的事<br>夜 春希武也依绪三人在家中开酒会，春希想起雪菜跟自己很像的事<br>2011年1月14日周五<br>凌晨 2点 武也提议去滑雪<br>凌晨 春希重新拿起吉他<br>2011年1月21日周五<br>午 雪菜去商学部找千晶，弄翻柳园朋的饭盒<br>夕 4点 文学部研讨会，春希打千晶电话<br>夕 4点 柳园朋带雪菜去KTV<br>夕 4点 春希挑换班时间去goodies辞职<br>夜 5点10分小春表示会继续留下来，提到美穗子复学了，春希提出会把笔记给小春<br>夜 8点 雪菜柳园朋被搭讪<br>夜 8点 春希在开樱社打工，工作效率超过铃木，麻理提到要出差美国<br>2011年1月22日周六<br>凌晨 春希麻理铃木三人一起下班，春希提出停止打工<br>凌晨 麻理请铃木喝酒<br>凌晨 柳园朋在家门口下车，把雪菜留在车上<br>凌晨 雪菜求救，柳园朋帮忙雪菜，雪菜向柳园朋坦白<br>凌晨 雪菜给春希打电话抱怨，春希给雪菜弹《White Album》<br>夜 春希给雪菜弹《White Album》<br>20111年1月23日周日<br>夜 春希给雪菜弹《White Album》<br>2011年1月24日周一<br>晨 8点20 春希在校门口注意到雪菜，春希追上去向雪菜搭话<br>晨 雪菜将便当交给出春希，春希承诺每天与雪菜联系<br>晨 雪菜将便当交给柳原朋，柳园朋获得雪菜手机号码<br>夜 春希给雪菜弹《White Album》<br>2011年1月25日周二<br>夜 春希给雪菜弹《White Album》，雪菜点播《Sound Of Destiny》<br>2011年1月26日周三<br>夜 春希给雪菜弹《White Album》<br>2011年1月27日周四<br>午 武也依绪在餐厅撞见雪菜和柳原打闹<br>夜 雪菜向春希抱怨柳园朋<br>夜 春希给雪菜弹《White Album》<br>2011年1月28日周五<br>凌晨 4点 孝宏结束备考去上厕所时发现雪菜醒着<br>凌晨 雪菜听电话到凌晨去洗澡<br>晨 秋菜洗衣服时发现水是温的<br>夜 春希给雪菜弹《White Album》<br>2011年1月29日周六<br>夕 4点 武也向春希借法语笔记，春希翻找其他乐谱<br>夕 4点 秋菜抱怨雪菜打电话太久<br>夜 春希给雪菜弹奏与冬马的定情曲《未竟的梦想》，雪菜陷入回忆<br>夜 春希第一次无失误下《White Album》雪菜再次退缩<br>2011年1月29-31日<br>夜 春希给雪菜弹《White Album》<br>2011年2月1日周二<br>夜 春希给雪菜弹奏《你的代替》、《White Album》<br>2011年2月2日周三<br>午 雪菜在食堂向依绪兴奋的说起昨天的曲目<br>午 雪菜被依绪和朋催促做出了断<br>午 雪菜离开后朋提起雪菜唱歌的事<br>夜 春希给雪菜弹《White Album》<br>2011年2月3日周四<br>法语考试<br>夜 春希给雪菜弹《White Album》<br>2011年2月4日周五<br>春希练习《传达不到的爱恋》<br>2011年2月5日周六<br>凌晨 1点 春希弹奏《传达不到的爱恋》被雪菜制止<br>2011年2月5日-9日<br>夜 春希给雪菜弹《White Album》<br>2011年2月10日周四 期末考最后一天<br>午 期末考结束后雪菜时隔三周邀请春希四人一起吃饭，雪菜邀请春希参加2月14日生日宴会<br>午 雪菜被叫去广播站<br>午 春希与武也依绪汇合，武也依绪讨论滑雪的事<br>午 柳园朋宣布雪菜参加情人节演出，雪菜失联<br>夜 10点 春希来到小木曾家<br>2011年2月11日周五 建国纪念日<br>凌晨 春希出门找雪菜<br>晨 6点 晋拿报纸时给春希开门<br>晨 8点 春希被孝宏叫醒<br>夕 4点 孝宏回家，春希意识到雪菜在附中<br>夜 雪菜在春希家过夜，电话告知父母不回家<br>夜 春希为情人节音乐会练习吉他<br>夜 雪菜表示讨厌《White Album》和《Sound Of Destiny》<br>2011年2月12日周六<br>晨 6点 春希彻夜练习了表演曲目<br>2011年2月14日周一<br>午 2点 朋参加纪念DVD发售活动<br>夕 4点 孝宏邀请小春，早百合和亚子等人加入<br>夕 4点 千晶找春希要门票<br>夜 情人节演出<br>夜 春希雪菜最后一组登场，为将歌声传达给和纱而表演<br>夜 雪菜在春希家过夜<br>2011年2月15日周二<br>夕 春希雪菜醒来<br>夕 5点 春希起床<br>夜 7点 春希雪菜起床做饭<br>夜 春希雪菜约定一周见一次面<br>2011年2月16日周三<br>晨 6点30 春希起床<br>晨 8点 雪菜醒来<br>晨 11点 雪菜回家<br>小木曾家对雪菜作出外宿禁止令<br>2011年2月26-27日<br>晨 雪菜去春希家，再次夜宿<br>夜 雪菜回家后收到外出禁止令<br>2011月2月28日周一<br>晋在书房呆了一整天<br>夜 雪菜生日会<br>夜 春希将2008年2月14日买的戒指交给雪菜，雪菜拒绝了2011年新买的高价品</p>\n<h2>CODA线时间轴、CODA线时间线</h2>\n<p data-pid=\"3uQrY6bU\"><br>2012年3月<br>春希雪菜毕业，春希进入开樱社，雪菜进入骑士唱片<br>武也清算女性关系专注追求依绪<br>2011年-2012年<br>雪菜在春希家过夜时，两人有时会彻底聊天，有时雪菜会直接从凌晨睡到第二天傍晚<br>2012年11月<br>柳园朋被东亚电视台内定录用<br>2012年 11月30日周五<br>夜 雪菜在春希家呆到0点末班车离开<br>2012年12月7日周五<br>午 3点 春希开樱社打工<br>夕 4点 因木崎订婚，春希参加乐团编辑会议，雪菜出席<br>夜 6点 春希结束会议<br>夜 10点 春希修改松冈企划书<br>夜 11点 春希下班<br>夜 23点59 春希回家<br>2012年12月8日周六<br>凌晨 春希提起欧洲出差，雪菜要求去斯特拉斯堡<br>夕 4点 春希与小木曾家交涉旅行问题<br>夜 春希回家前小木曾晋喝白兰地醉酒<br>夜 雪菜指出春希和小木曾晋很像<br>2012年12月14日周五<br>夜 武也依绪朋为春希辞行<br>夜 武也和依绪吵架，春希将武也灌醉<br>夜 依绪催春希结婚<br>夜 众人去KTV<br>2012年12月17日周一<br>春希出发去欧洲<br>2012年12月23日周日<br>曜子提出回日本办音乐会，和纱拒绝<br>2012年12月24日周一<br>夜 曜子在水上巴士下车时身后是巴黎交响乐团的老朋友伊莲<br>夜 10点 春希到斯特拉斯堡车站，雪菜因积雪航班在空中盘旋延迟三小时，和纱下车时身后是春希<br>夜 10点 曜子约和纱11点见面，和纱开始追春希出租车<br>夜 11点 雪菜到斯特拉斯堡<br>夜 11点 春希在旅馆给和纱洗脚<br>2012年12月25日周二<br>凌晨 1点30 春希跟和纱道别<br>晨 7点 春希跟雪菜散步<br>晨 10点 春希到酒店采访冬马母子<br>午 3点30 拍摄写真<br>午 4点 采访结束<br>午 4点30 提早收班30分钟的春希和提早等着的雪菜碰面<br>夜 冬马母女离开斯特拉斯堡，和纱同意演奏会<br>夜 和雪菜H一整晚<br>2012年12月26日周三<br>春希坐经济舱回国<br>2012年12月27日周四<br>春希回国后直接来到编辑部整理资料<br>2012年12月28日周五<br>夜 松冈约春希喝酒过程中春希差点睡着<br>夜 冬马曜子工作室公告，和纱1月27日公演<br>2013年1月31日周一<br>夜 雪菜表示想听和纱音乐会<br>夜 武也依绪叮嘱春希要拒绝<br>夜 11点55 选项</p>\n<h3>1.春希表示不想见和纱</h3>\n<p data-pid=\"9n3A90ks\"><br>1月4日周五<br>午 冬马母女回国，春希拒绝接受相关工作<br>夜 9点 春希坐地铁到冬马旧宅遇到和纱<br>夜 春希回家，发现雪菜离开了<br>雪菜表示自己看了当日的开樱画报<br>雪菜与春希约定断联，由雪菜主动打电话</p>\n<h3>\n<br>2.春希表示在斯特拉斯堡见过和纱了</h3>\n<p data-pid=\"1Xekr9Tb\">2013年2月1日周二<br>凌晨 雪菜与春希约定断联，由雪菜主动打电话</p>\n<p><br></p>\n<p data-pid=\"GVv3Rt9L\">2013年1月4日-7日<br>和纱睡不着觉<br>2013年1月4日周五<br>午 冬马母女回国，春希拒绝接受相关工作<br>夜 21点 春希坐地铁到冬马旧宅遇到和纱，和纱说不要再见<br>2013年1月6日周日 <br>晨 朋带着雪菜做发声练习<br>午 朋邀请雪菜live作为帮唱主唱<br>2013年1月7日周一<br>晨 和纱与记者吵架<br>午 春希再次拒绝贴身专访<br>午 冬马拒绝贴身专访<br>午 曜子去看医生<br>2013年1月10日周四<br>夜 和纱无法入睡<br>2013年1月11日周五<br>雪菜在录音室等北见先生<br>曜子去看医生<br>夜 和纱在出租车上睡着，身体开始发热<br>夜 和纱被东邦出版社安宁（shanti）编辑部的记者板仓缠上。冒雨逃开<br>夜 11点30 春希离开开樱社，接到和纱电话<br>2013年1月12日周六<br>凌晨 0:00 春希找到和纱，花了十几分钟把和纱塞进车里<br>凌晨 0:30 春希将和纱带回公寓，给冬马曜子工作室打电话<br>凌晨 1点 和纱吃上雪菜教春希煮的粥<br>凌晨 2点 春希训了和纱一个小时<br>凌晨 2点 和纱在春希的训斥中睡着<br>2013年1月12日周六<br>午 2点 曜子上门找和纱<br>午 曜子注意到隔壁没人住，曜子再次提出贴身专访<br>2013年1月13日周日<br>晨 和纱醒来<br>午 和纱回到酒店，曜子让和纱收拾包袱<br>午 12点 春希因为曜子的请求而睡不着觉，打电话接下专访<br>夜 和纱失眠<br>2013年1月14日周一<br>午 12点 和纱退房<br>夕 4点 春希收到和纱房间的钥匙，滨田要求春希一周回两次开樱社<br>夜 5点 春希在公寓门口找到一直等待的和纱<br>夜 5点30 春希做好锅料理<br>夜 和纱与春希失眠<br>2013年1月15日周二<br>晨 7点 和纱与春希吃早餐<br>晨 春希用雪菜打扮的方式给和纱乔装<br>午 2点 采购结束，和纱练琴<br>2013年1月16日周三<br>凌晨 0点 和纱回到房间<br>晨 10点 和纱练琴<br>夜 8点 和纱回家<br>2013年1月17日周四<br>晨 8点 春希带着和纱在河边散步<br>晨 10点 和纱练琴<br>夜 8点 和纱回家<br>2013年1月18日周五<br>晨 10点 和纱练琴<br>夕 4点 春希去开樱社交接工作<br>夜 8点 柳园朋上门找春希送门票，遇上和纱<br>2013年1月18日周五<br>凌晨 和纱表示要去看演出<br>晨 10点 和纱练琴<br>夜 6点 雪菜时隔2年再次登台献唱《Routes》<br>夜 和纱观看雪菜演出，演出后被柳园朋注意到<br>夜 演出结束后雪菜想去找春希，被朋拦住<br>2013年1月19日周六<br>晨 10点 和纱练琴<br>夜 8点 和纱回家<br>2013年1月20日周日<br>晨 6点30 春希起床<br>晨 和纱试图自己做饭烧焦和鸡蛋和吐司<br>晨 10点 和纱练琴<br>夜 9点 和纱在家庭餐厅吃晚饭后回家<br>夜 雪菜得知出春希和冬马住在一起，试图发短信问<br>2013年1月21日周一<br>晨 10点 和纱练琴<br>晨 春希将文档发到开樱社<br>午 春希承诺要将真正的和纱展示给世界<br>夜 雪菜被公司派去大阪，雪菜将自留的演奏会门票转交依绪<br>夜 8点 和纱在采访中睡着，被春希叫醒<br>夜 和纱在采访中睡着<br></p>\n<h3>1.春希回去<br>2.春希留下来拍照</h3>\n<p data-pid=\"e80297no\">夜 春希睡着，和纱偷走录音笔<br>2013年1月25日周五<br>晨 10点 和纱练琴<br>午 2点 和纱录下录音说将会用演奏会与春希告别<br>晨 10点 和纱练琴</p>\n<h3>公共线</h3>\n<p data-pid=\"_3-3brLq\"><br>2013年1月22日周二<br>晨 春希醒来，撞见和纱洗澡<br>晨 10点 曜子夸奖和纱，和纱向母亲致谢，曜子哽住<br>夜 8点 和纱高兴地主动向春希打电话约晚饭，挂掉后拒绝出院后逆袭回拨<br>夜 和纱开心等待春希过来，春希在自己公寓处理带回家的工作<br>2013年1月23日周三<br>凌晨 和纱生气的踹墙壁<br>晨 10点 和纱练琴<br>夜 8点 春希带着和纱去柴田夫人家<br>夜 和纱牵起春希的手<br>2013年1月24日周四<br>晨 10点 和纱练琴<br>夜 8点 和纱回家<br>2013年1月25日周五<br>晨 10点 和纱曜子参观会场<br>夕 4点 春希带着和纱回到附中<br>夕 4点 雪菜出差去大阪，在车站前发给春希的短信说自己不想春希一个人去演奏会的事<br>夕 4点 和纱说出学园祭后的真相<br>夜 春希梦遗<br>2013年1月26日周六<br>晨 10点 和纱练琴<br>午 雪菜到大阪，收到春希回信<br>午 3点 和纱不间断的弹奏5小时<br>夜 8点 和纱回家<br>2013年1月27日周日<br>雪菜在工作中犯错<br>午 2点 春希逃离东京<br>午 5点 春希达到新大阪车站。<br>午 5点半 武也依绪约定时间<br>夜 6点 春希遇到雪菜<br>夜 6点 冬马和纱演奏会开场<br>夜 春希雪菜H<br>夜 8点30 武也打算送依绪回家，依绪产生了约武也转转的想法<br>夜 8点30 和纱砸后台，冬马曜子从后台离开<br>2013年1月28日周一<br>凌晨 2点05 春希求婚<br>晨 6点 春希离开<br>晨 8点 春希听到和纱于1月25日的录音<br>晨 10点 春希到开樱社<br>2013年1月29日周二<br>晨 6点50 春希开始行动<br>午 1点 春希找到出租车公司的村冈先生<br>夕 4点 春希去附中和柴田家找和纱<br>夜 春希到冬马老宅找到和纱</p>\n<h2>Clotrue时间轴、Clotrue时间线</h2>\n<p data-pid=\"b5xsI4Cx\"><b>浮气线线时间轴、浮气线时间线</b></p>\n<p data-pid=\"ptfZqgYv\">2013年1月31日周四<br>夜 春希联系到曜子，曜子表示一切交由自己来处理<br>2013年2月1日周五<br>晨 春希接下开樱社的工作<br>夜 春希拉雪菜去外面吃饭，雪菜坚持去春希家做菜。春希给和纱发消息说不去了<br>夜 春希和雪菜H，冬马在隔壁听<br>2013年2月2日周六<br>晨 春希雪菜在房间里打法时间<br>午 春希和雪菜购物<br>夜 春希到雪菜家吃饭<br>夜 和纱到车站接春希，自己撤掉了手上的绷带<br>晨 6点 H后和纱躺在春希手臂上<br>2013年2月6日周三<br>晨 10点 和纱请求母亲比自己活更久<br>夜 武也依绪朋给春希雪菜庆祝婚约<br>2013年2月7日周四<br>凌晨1点 武也表示“这次自己一定会拿出真本事来”喝得醉倒<br>凌晨2点 雪菜阻止朋追究到底<br>凌晨3点 春希回到和纱房间，春希告诉和纱在跟武也两人喝酒<br>凌晨4点 春希被和纱叫醒<br>晨 和纱被春希摇醒<br>2013年2月14日周四<br>晨 亲志打电话来说要听追加和纱的公演<br>夜 5点 春希搞定工作提前下班<br>夜 7点 春希挑好礼物准备去小木曾家时接到和纱哭着祝贺的电话<br>夜 冬马到车站接春希，两人在公园H<br>2013年2月15日周五<br>午 3点 春希病倒，雪菜过来照顾<br>夕 4点50 雪菜回家<br>夜 5点 和纱请求作为雪菜的代替<br>2013年2月17日周日<br>夜 春希说明天要去上班，让和纱在自己房间过夜<br>2013年2月18日周一<br>晨 6点 闹钟吵醒和纱，和纱再次睡着<br>晨 8点30 和纱叫醒春希<br>晨 春希请假后从车站折返回公寓，撞见和纱触发报警器<br>晨 10点 春希给和纱做好煎蛋<br>2013年2月19日周二<br>晨 春希出门<br>晨 春希在车站呕吐30分钟后回家<br>晨 春希打电话请假一周说自己得了流感<br>晨 10点 春希给和纱梳头，曜子失联<br>2013年2月20日周三<br>凌晨 和纱提出去看雪<br>2013年2月21日周四<br>晨 10点 美代子向曜子抱怨和纱不来练习<br>夕 5点 和纱要春希弹吉他，春希拒绝<br>夜 雪菜试图联络春希，走到公寓后离开<br>夜 武也和朋上门找春希<br>夜 春希决定带着和纱去看雪<br>2013年2月22日周五<br>晨 6点半 春希与和纱开始收拾行李准备出发<br>午 1点 春希与和纱的火车离开东京<br>夕 5点 曜子与美代子到和纱房间<br>夕 5点 春希把和纱叫醒<br>夜 6点 春希与和纱下车<br>夜 春希与和纱在5年前雪菜定的旅馆住下<br>夜 和纱的身份被女招待发现，二人商量回东京或者去往更北<br>夜 二人交换夫妻的誓言<br>2013年2月23日周六<br>晨 春希醒来，发现和纱不在身边<br>和纱与春希道别<br>2013年2月23-28日<br>和纱不睡觉<br>2013年2月28日<br>麻理打电话训斥滨田<br>2013年2月29日周五<br>夜 5点30 武也依绪到达会场<br>夜 5点30 和纱在后台小睡<br>夜 6点 和纱演奏会开始，雪菜在春希旁边落座<br>夜 7点 中场休息，春希向雪菜坦白<br>夜 7点 和纱告诉曜子要告别日本</p>\n<p data-pid=\"8NjG6ev7\"><b>不共戴天时间轴、不共戴天时间i线</b></p>\n<p data-pid=\"K18ZRolw\"><br>东京<br>2013年3月1日-7日<br>雪菜痛哭<br>2013年3月8日<br>雪菜回到春希房间照顾春希<br>2013年3月-4月<br>春希进入一个星期4天不睡3天不醒的状态，每周看一次医生<br>2013年4月5日周五<br>朋配属到报道部<br>武也成为卖场联系人，被店员邀请联谊<br>依绪为新人研修的事据理力争，即将被调往开发部<br>松冈为取稿件的方法与滨田据理力争，被委托全权负责<br>夜 雪菜拒绝骑士唱片前辈推过来的工作<br>夜 雪菜到春希家照顾春希，更换日历<br>2013年4月6日周六<br>凌晨 春希哭了一整晚后入睡<br>晨 10点 雪菜睡醒，打电话给前辈要求去加班<br>2013年4月8日周一<br>晨 10点 骑士唱片产品说明会议 <br>维也纳<br>2013年3月8日<br>雪菜将日本事务处理完成后回到维也纳<br>2013年4月<br>晨 和纱在医院做骨髓适性检查，被曜子否决<br>东京<br>2013年5月3日周五<br>春希和滨田相约面谈，春希没去<br>2013年5月<br>朋、依绪和雪菜开激励会，雪菜开始管教朋的礼仪<br>武也在春希家打游戏，19连败<br>朋和依绪提起去伊豆的阿多良温泉，雪菜同意<br>雪菜说教依绪被依绪吐槽<br>朋询问live的事，雪菜接受并说说自己不会放弃唱歌<br>春希向武也求教，武也要春希自己做决定<br>夜 朋陪雪菜去KTV<br>凌晨 雪菜朋赶末班车回家，依绪被武也喊去喝酒<br>东京<br>2013年6月3-6日<br>春希每周会去图书馆度过一天接触人群<br>不接电话不开电话的春希开始给雪菜发短信<br>夕 7点 雪菜接到短信，春希走出图书馆，说周末要去和上司做每月一次的面谈<br>2013年6月7日周五<br>东京开始进入梅雨季<br>春希约滨田进行面谈，因为下雨而没去成<br>夜 雪菜到春希公寓照顾春希<br>夜 春希说自己死了雪菜就解脱了。<br>2013年6月8日周六<br>晨 雪菜在自己房间醒来，说出自己“不能不去”<br>晨 晋要求跟春希家人见面，秋菜认为分手的话父母不见面才更好<br>维也纳<br>2013年6月8日周六<br>曜子开始唠叨、交代后事，和纱与母亲的聊天中感觉不到快乐<br>曜子提出让和纱演奏cloture 德语为《die andere seite des Glück》<br>2013年6月9日周日<br>和纱打乐团电话交涉失败<br>2013年6月12日周三<br>和纱设置好电脑<br>2013年6月15日周六<br>和纱设置好邮件和网络<br>2013年6月18日周二<br>和纱完成信件文案<br>2013年6月21日周五<br>和纱回复邮件被纷纷拒绝<br>欧洲本部职员艾玛.贝尔肯开始为和纱找乐团<br>东京<br>2013年7月<br>武也代替雪菜呆在春希公寓<br>午 9点 朋在女子会上邀请雪菜去特洛伊纪念live，雪菜为了照顾春希拒绝<br>朋被雪菜弄哭，依绪让雪菜回去照顾春希，提前把武也喊来<br>维也纳<br>2013年7月<br>凌晨 和纱给美代子打第十次电话，日本支部休业<br>凌晨 艾玛.贝尔肯找到的乐团依然为0，和纱考虑打乐团总编的电话<br>凌晨 和纱收到附近的市民乐团拒绝邮件，给了和纱、弗朗兹.迪普雷管弦乐团介绍信<br>晨 和纱向母亲表示将会在2个月后与弗朗兹.迪普雷管弦乐团协奏<br>东京<br>2013年8月<br>晨 6点30 春希基本恢复早起<br>2013年8月8日周四<br>雪菜连续数日身体不适<br>2013年8月9日周五<br>雪菜请病假，在家静养<br>夜 雪菜睡了一觉<br>2013年8月10日周六<br>晨 雪菜甩开母亲的阻止去春希房间<br>晨 11点 雪菜试图去春希房间 ，在车站向心中的和纱求救<br>夜 春希注意到雪菜变成了半年前的自己，恳求雪菜不要再来<br>雪菜被家里禁足<br>2013年8月15 盂兰盆节假期<br>巴黎<br>2013年9月<br>和纱到巴黎一周<br>曜子身体急转而下<br>全体练习第一天 迪普雷对和纱的演奏完全否定<br>夜 和纱睡着，梦到过去的事<br>夜 梦到和春希分别后和纱从噩梦中惊醒，拨起日本的电话<br>东京<br>2013年9月<br>春希开始早上出门散步，散步后在附中附近河堤看天空的生活<br>雪菜复职工作，每到周末就会瘫痪<br>夜 9点 雪菜下楼喝水，看到冬马和纱的新闻<br>2013年9月<br>索尼赞助和纱音乐会<br>弗朗兹.迪普雷开始嘲讽和纱<br>2013年9月15日<br>曜子吧美代子调到欧洲本部<br>2013年9月23日周五<br>夕 7点 和纱拨起雪菜的电话<br>2013年9月24日周六<br>凌晨 2点 雪菜从日本支部录音处获得欧洲支部的电话<br>凌晨 冬马和雪菜在电话中大吵了一架<br>晨 6点 和纱挂掉电话，雪菜恢复正常，下楼吃饭<br>晨 雪菜去找春希，发现春希在河堤看天空<br>晨 春希表示要和雪菜一直在一起<br>巴黎<br>2013年9月27日周五<br>夜 6点 最终彩排开始<br>2013年9月28日周六<br>午 2点 最终彩排结束<br>弗丁基尔和曜子一起等待音乐会开始<br>cloture演奏会<br>东京<br>2013年9月28日周六<br>春希雪菜观看演奏会直播<br>维也纳<br>2013年9月29日周日<br>晨 和纱接到母亲擅自出院练琴的信息，跑回维也纳<br>晨 美代子到达维也纳，就任和纱经纪人<br>2013年10月5日周六<br>午 春希和雪菜到会场向朋道歉<br>夜 6点 特洛伊10周年纪念live<br>武也依绪复合<br>2014年2月<br>春希回到开樱社上班<br>2014年2月<br>雪菜再次登台唱歌<br>夜 春希开始经常拜访小木曾家，小木曾家父母拒绝见面<br>夜 依绪催促武也官宣<br>2014年2月<br>麻理回国当开樱社主编<br>2014年2月13日<br>夜 6点 春希下班<br>夜 8点 雪菜到春希家<br>夜 11点55 春希回到家里与雪菜相会<br>2014年2月14日<br>午 冬马和纱宣布再凯旋<br>2014年3月18日 春分<br>夜 6点 特洛伊工作室live</p>\n<p><br></p>\n<h2>Closing时间轴、closing时间线</h2>\n<p data-pid=\"Napc90z4\"><b>时之魔法时间轴、时之魔法时间线</b></p>\n<p data-pid=\"oiY0IlMl\">2013年1月30日周三<br>晨 春希在开樱社汇报和纱受伤<br>夜 春希给和纱换衣服<br>2013年1月31日周四<br>凌晨 2点 春希被发烧饿肚子的和纱赶回房间<br>凌晨 3点 春希听到隔壁和纱打翻咖喱，春希给和纱洗澡<br>凌晨 5点 春希喂完和纱后给雪菜发短信，睡觉<br>晨 春希与美代子联络<br>夜 春希给和纱消毒换绷带，给雪菜汇报近况<br>夜 春希与曜子取得联络<br>2013年2月1日周五<br>晨 6点30 春希起床<br>晨 春希在和纱的抱怨下延迟1小时出门，陪着和纱去曜子工作室<br>晨 春希和曜子见面<br>夜 8点 春希在车站等和纱<br>夜 10点 和纱到车站<br>夜 和纱将春希赶出浴室，自己吃饭，睡着<br>2013年2月2日周六<br>凌晨 春希因曜子白血病的事彻夜未眠<br>2013年2月3日周日<br>晨 10点 和纱恢复练习<br>2013年2月4日周一<br>乐团杂志内容审核<br>午 12点 春希接曜子去工作室，定下周一、三、五上午去医院检查<br>午 2点 和纱停止练习<br>夜 7点半 春希离开公司<br>夜 8点 和纱与春希碰面<br>2013年2月6日周三<br>午 曜子去高柳处检查<br>夜 8点 春希带曜子去找和纱，武也试图约春希9点见面，被春希拒绝<br>夜 11点 和纱睡着，春希给雪菜发短信<br>2013年2月8日周五<br>午 曜子结束上午治疗，与春希吃午餐<br>夜 8点 和纱结束练习<br>夜 9点 和纱因为给雪菜发短信的事，以及春希瞒着曜子的事而向春希发火赶春希走<br>夜 10点 和纱睡着<br>夜 春希睡着后的半小时里和纱离开<br>2013年2月9日周六<br>晨 6点50-8点 和纱看到曜子倒下<br>晨 春希开始搜索冬马母女的行踪<br>夜 5点 春希取得曜子的联系<br>夜 10点30 春希离开峰城大附属医院<br>夜 11点 春希走出大学<br>夜 11点半 春希走到goodies<br>2013年2月10日周日<br>凌晨 春希乘末班车到开樱社<br>凌晨 4点 春希在公园里写求救短信，5分钟后雪菜到达中央公园<br>春希雪菜找到曜子商量增刊CD事宜<br>2013年2月11日周一<br>春希雪菜提出企划书<br>2013年2月14日周四<br>晨 春希联络好乐团与骑士唱片的合作后，在滨田上班前离开<br>夜 雪菜上门拜访和纱，送了和纱蛋糕<br>2013年2月15日周五<br>夜 雪菜拜访和纱，要求和纱亲口说讨厌自己<br>2013年2月17日周日<br>夜 雪菜拜访和纱，吵架打了和纱一巴掌<br>2013年2月18日周一<br>夜 和纱出门练琴，雪菜打电话向春希求救<br>2013年2月19日周二<br>夜 春希与麻理打了2个小时电话<br>2013年2月20日周三<br>晨 春希开樱社上班<br>夜 8点 雪菜接和纱回酒店<br>夜 和纱把雪菜留下来整夜吵架<br>2013年2月21日周四<br>晨 雪菜晚了几小时离开酒店赶会议<br>午 和纱睡到中午去练琴<br>夕 5点 雪菜与春希联络<br>夜 雪菜收拾行李准备去酒店合宿<br>夜 雪菜给和纱唱《传达不到的爱恋》<br>2013年2月22日周五<br>午 第三次出院 曜子决定取消公演<br>午 2点 雪菜和纱赖床到2点<br>夕 5点 和纱在雪菜怀里哭<br>夜 11点46分 雪菜请求春希弹《传达不到的爱恋》<br>2013年2月23日周六<br>晨 10点20 三人合宿开始<br>2013年2月24日周日<br>晨 三人开始着手《时之魔法》创作<br>午 3点 原定录音开始<br>2013年2月25日周一<br>午 雪菜开始跑外勤<br>夜 6点 雪菜回到录音室<br>夜 8点 春希完成初校回到录音室<br>夜 11点30 春希雪菜开始封面设计工作<br>2013年2月26日周二<br>凌晨 3点半 保险丝烧断<br>凌晨 5点半 和纱提议用纯白当封面<br>晨 音乐会网站更新<br>夜 春希开始写《时之魔法》的歌词<br>2013年2月28日周四<br>凌晨 和纱雪菜睡着，春希完成《时之魔法》<br>晨 春希睡了2小时，和纱开始作曲<br>午 因作曲未完成，当日录制中止<br>2013年2月29日周五<br>凌晨 6点 完成最后的日程表<br>午 2点30 和纱完成《时之魔法》<br>午 3点 和纱去会场<br>夜 6点30 武也依绪到演奏会场，被美代子请到后台<br>夜 6点55 和纱感谢母亲将自己生下来<br>夜 7点 追加公演开演<br>夜 柳园朋因为临时追加的任务中途到场<br>夜 10点 录制《时之魔法》<br>夜 11点15 正式录制开始<br>夜 11点 武也说之前身经百战都是装出来的，依绪接受武也<br>夜 12点 录制完成<br>2013年3月1日周六<br>凌晨 1点 录音间收拾结束，雪菜去录音室外等待<br>凌晨 1点 和纱说自己一生都不会再爱上别人，让春希离开去陪雪菜<br>凌晨 1点半 春希向雪菜表白，雪菜将1月31日以来未发出让春希去找和纱的短信发给春希<br>凌晨 雪菜向春希哭诉后跟着春希回家<br>凌晨 6点 春希放弃送婚约戒指<br>晨 10点 工厂交纳成品<br>2013年3月8日周六<br>晨 春希带着和纱买《乐团》增刊，大卖导致买不到<br>夕 5点 雪菜将增刊拿给家人后出门接人，秋菜孝宏通过CD得知雪菜参与录制的事</p>\n<h3>冬马结局时间轴、冬马结局时间线</h3>\n<p data-pid=\"6Vaanmjx\"><br>2013年1月30日周三<br>晨 春希在开樱社汇报和纱受伤<br>夜 春希给和纱换衣服<br>2013年1月31日周四<br>凌晨 2点 春希被发烧饿肚子的和纱赶回房间<br>凌晨 3点 春希听到隔壁和纱打翻咖喱，春希给和纱洗澡<br>凌晨 5点 春希喂和纱<br>晨 春希与美代子联络<br>夜 春希给和纱消毒换绷带，给雪菜汇报近况<br>夜 春希与曜子取得联络<br>2013年2月1日周五<br>晨 6点30 春希起床<br>晨 春希在和纱的抱怨下延迟1小时出门，陪着和纱去曜子工作室<br>晨 春希和曜子见面<br>夜 8点 春希在车站等和纱<br>夜 10点 和纱到车站<br>夜 和纱将春希赶出浴室，自己吃饭，睡着<br>2013年2月2日周六<br>凌晨 春希因曜子白血病的事彻夜未眠<br>夜 春希去小木曾家吃饭，家人注意到雪菜手上的戒指<br>2013年2月3日周日<br>晨 10点 和纱恢复练习<br>2013年2月4日周一<br>乐团杂志内容审核<br>午 12点 春希接曜子去工作室，定下周一、三、五上午去医院检查<br>午 2点 和纱停止练习<br>夜 7点半 春希离开公司<br>夜 8点 和纱与春希碰面<br>2013年2月6日周三<br>午 曜子去高柳处检查<br>夜 8点 春希带曜子去找和纱，武也试图约春希9点见面，被春希拒绝<br>夜 11点 和纱睡着<br>2013年2月8日周五<br>午 曜子结束上午治疗，与春希吃午餐<br>夜 8点 和纱结束练习<br>夜 9点 武也依绪朋在电话里庆祝春希订婚，和纱哭着跑出房间<br>夜 10点 和纱睡着<br>夜 春希睡着后的半小时里和纱离开<br>2013年2月9日周六<br>晨 6点50-8点 和纱看到曜子倒下<br>晨 春希开始搜索冬马母女的行踪<br>夜 5点 春希取得曜子的联系<br>夜 10点30 春希离开峰城大附属医院<br>夜 11点 春希走出大学<br>夜 11点半 春希走到goodies<br>2013年2月10日周日<br>凌晨 春希乘末班车到开樱社<br>凌晨 2点 春希到帝国大厦找和纱<br>凌晨 春希跟和纱散步，表示会为了和纱放弃一切<br>2013年2月11日周一<br>春希开始进行连续的编辑工作<br>2013年2月14日周四<br>晨 和纱坐上去机场的巴士<br>晨 春希开始进行初校<br>夜 武也依绪催春希来雪菜派对<br>夜 和纱与春希立下血之誓言<br>2013年2月15日周五<br>夜 春希收到雪菜短信，身体开始出现不适<br>2013年2月16日周六<br>晨 和纱重新开始练琴<br>午 1点 春希与雪菜在有海站见面，吃午餐，交换生日礼物<br>夕 5点 春希和雪菜逛购物中心，给小木曾晋买领带<br>夜 春希和雪菜摊牌<br>2013年2月17日周日<br>凌晨 春希在雪菜离开后动弹不得<br>凌晨 1点半 春希回到家里，发现和纱一直在门口等<br>凌晨 春希和纱彻夜不眠<br>晨 雪菜早起做便当<br>午 12点 和纱离开去练琴<br>午 雪菜在春希公寓前犹豫，发现自己的便当做得没法吃<br>夕 5点 春希表示不续租<br>2013年2月18日周一<br>夜 春希表示要辞职，被开樱社众人偷听到<br>2013年2月19日周二<br>夜 春希邀请曜子一起和纱，曜子选择独自留在日本<br>夜 武也来电话，春希拒接<br>2013年2月22日周五<br>夜 春希与武也依绪朋摊牌<br>2013年2月23日周六<br>凌晨 春希走到车站，接到小木曾晋的电话<br>夜 柳园朋支开雪菜，小木曾秋菜给孝宏门票<br>夜 春希与小木曾家摊牌<br>夜 孝宏殴打春希，雪菜追上给春希包扎<br>夜 雪菜提出跟春希一起走，春希拒绝<br>2013年2月24日-29日<br>雪菜不回家<br>2013年2月24日周日<br>凌晨 和纱在门口与车站来来回回等着春希<br>凌晨 春希回到家<br>2013年2月26日周二<br>晨 和纱探望曜子，假设放弃钢琴<br>2013年2月28日周四<br>夜 春希与松冈进行最后的工作交接，被松冈拉去喝酒<br>夜 木崎带着滨田买单的消息来到春希送别会<br>夜 和纱约雪菜见面，表示会放弃钢琴，被雪菜阻止<br>夜 和纱在春希公寓门口等和纱等到睡着<br>夜 雪菜险些被车撞上<br>2013年2月29日周五<br>夜 6点30 春希接到柳园朋电话，雪菜失联并旷工<br>夜 7点 追加演奏会<br>夜 7点 春希给雪菜电话留言，前往小木曾家<br>夜 雪菜发短信回复，春希打通电话得知雪菜在有海公园<br>夜 9点 和纱发短信告知春希雪菜公演大成功，春希与雪菜最后清算<br>2013年3月23日周六<br>午 春希和纱离开日本<br>日本<br>2015年2月14日周六<br>夜 雪菜拿起吉他唱歌<br>欧洲<br>2015年2月14日周六<br>凌晨 1点15 春希和纱收到曜子转发的录像带</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/mo-li-lan-mao?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">魔力懒猫</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/41694862/answer/2453877246?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">3 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/513184979?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何跳过所有步骤直接得到一个结婚的对象？</a><br><a href=\"http://www.zhihu.com/question/510453433?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">关于死亡可以想到些什么问题?</a><br>\n","link":"http://www.zhihu.com/question/41694862/answer/2453877246?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"新电脑、新芯片：COMPUTEX 2022 展会带来了这些新玩意","date":"2022-05-28 07:00:00","description":"COMPUTEX 2022 依然主题聚焦六大板块：「开创运算 Innovative Computing」「智慧驱动 Accelerating Intelligence」「数位韧性 Digital Resilience」「无限体验 Connected X - Experience」「创新与新创 Innovations &amp; Startups」「绿能永续 Sustainability」，在终端算力、人工智能、边缘计算、自动驾驶、数据安全等领域为线上和线下的参展者们带来了丰富的内容。<a href=\"https://sspai.com/post/73484\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73484"},{"title":"TA 有好物 | 618 将至，为你挑选 5 款多场景风扇","date":"2022-05-28 05:01:47","description":"本獭又找来了少数派的编辑和作者，亲测了来自几素的多款新品风扇，接下来为大家推荐 5 款定位和形态都完全不同的产品。<a href=\"https://sspai.com/post/73304\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73304"},{"title":"Apple 与「聚光灯」下的开发者们：App Store 交出阶段性成绩单","date":"2022-05-28 03:00:00","description":"少数派获邀与 App Store 中几款优秀作品的开发团队进行了采访，结合这些开发者们自己开发 App 的实际经历以及取得的成果，不妨和我们一起看看，Apple 近几年在开发者的生态中扮演的角色，以及做得究竟怎么样。<a href=\"https://sspai.com/post/73472\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/73472"},{"title":"游戏开发工具的真正价值是什么？是在于激发创意吗？","date":"2022-05-27 06:01:15","description":"\n<p data-pid=\"yeY7BNNP\"><b>先上结论，个人认为游戏开发工具的目的主要应该是帮助创意实现，解放生产力，而非激发创意本身。</b></p>\n<p data-pid=\"yQk339My\">针对这个问题首先我们可以来看下游戏开发过程中具体会用到哪些工具。</p>\n<p data-pid=\"zcIagG9Y\">从游戏开发流程出发，一般可以分为以下几个环节的工具链：DCC工具链，引擎工具链，研发效率工具链。</p>\n<h2>DCC工具链</h2>\n<p data-pid=\"txiWIN5N\"><b>DCC工具链</b>一般直接面向美术制作，从功能上划分一般可以简单分成两个大的方向。</p>\n<p data-pid=\"QAkuLQiq\"><b>一类是用于标准检测</b>，类似于质检，例如检查资产命名是否规范，模型的面数是否超标，权重骨骼数量是否过多，贴图尺寸是否过大等等。这类工具避免了手动检查的疏漏，是保证资产在游戏中有效性的基础。一般上一点规模的游戏都会根据游戏资产的制作规范开发相应的此类工具。</p>\n<p data-pid=\"9cev29lE\"><b>另一类则是加速美术制作效率</b>，从美术关注的角度，又可以细化为两类。</p>\n<p data-pid=\"zW1V7og-\"><b>第一种与美术资产制作和效果相关性不大</b>，一般这类工具都是自动化处理一些资产的固定流程，比如批量针对一批资产进行模型，材质合并，贴图的自动扩边，骨骼 Retargeting，模型各级 LOD 自动减面等，针对这些重复性的操作，由工具来执行，可以节省大量美术工作量，从而让美术有更多的精力投入到效果相关的工作中去。</p>\n<p data-pid=\"JbRE1IvU\"><b>第二种则与美术资产的制作相关性较高</b>，一般此类工具都与美术资产生产过程紧密结合，例如角色表情 Controller，《极限竞速 地平线4（Forza Horizon 4）》开发团队应用的车漆材质矫正流程工具，Epic Games 的 Metahuman 角色生成器，都属于这一类，这些工具的存在可以快速地帮助美术实现最终想要的资产效果。</p>\n<p><img src=\"https://pica.zhimg.com/v2-300c8bd15828fe31cfd914bf0dc2f454_720w.jpg?source=b1748391?rss\" data-caption=\"Forza Horizon 4 中使用的车漆矫正工具，图源 2019 GDC[1]\" data-size=\"normal\" data-rawwidth=\"997\" data-rawheight=\"496\" data-watermark=\"watermark\" data-original-src=\"v2-300c8bd15828fe31cfd914bf0dc2f454\" data-watermark-src=\"v2-ca771ed9499f1404f3863b20526a9e56\" data-private-watermark-src=\"v2-8372105736cbc1b6eb29cae9ead56db5\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-1f37a7c0b66efb977b8ea94ca537f10c_720w.jpg?source=b1748391?rss\" data-caption=\"Metahuman Creator，图源网络\" data-size=\"normal\" data-rawwidth=\"1267\" data-rawheight=\"713\" data-watermark=\"watermark\" data-original-src=\"v2-1f37a7c0b66efb977b8ea94ca537f10c\" data-watermark-src=\"v2-27729e70c423313fbbf6aec60738a2e9\" data-private-watermark-src=\"v2-1271adba6943fd4d48081253469574e7\"></p>\n<h2>引擎工具链</h2>\n<p data-pid=\"iZOlKYTn\">引擎工具链相对比较复杂，因为引擎本身就是一个工具集，大致来说，引擎工具我们大致可以将其分为四个方向：</p>\n<p data-pid=\"nCkmDMtX\"><b>第一类主要针对引擎资产管理</b>，比如资产浏览器，可以对不同类型的资产进行过滤查找，导入导出，还有具体的资产预览器，可以对相关的资产的属性编辑进行修改，以及对资产之间的关联引用关系进行编辑。</p>\n<p data-pid=\"e7sWsLzg\">这是引擎的基础功能之一，如果没有这块，就无法对引擎内的资产进行有效地调用，Unreal 的Content Browser，Unity 的 Asset 浏览窗口，以及相应的各类资产的预览界面都属于此类。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-6f80544126e807ba722fd686d7e08400_720w.jpg?source=b1748391?rss\" data-caption=\"Unity Project Window，图源网络\" data-size=\"normal\" data-rawwidth=\"700\" data-rawheight=\"171\" data-watermark=\"watermark\" data-original-src=\"v2-6f80544126e807ba722fd686d7e08400\" data-watermark-src=\"v2-30e369902ab385ac2f2d92f3261e03a5\" data-private-watermark-src=\"v2-f3bd7d26d71d7ac866022f2a4c03c6d4\"></p>\n<p data-pid=\"lMXvimZF\"><b>第二类主要是游戏逻辑所需针对各类资源的整合工具</b>，比如场景编辑器，包含了场景美术资产组装，光照调整，寻路数据生成等这些功能；音效编辑器则是由游戏逻辑驱动，对相关音源资产进行组合调用，以满足游戏需求，比如比较著名的 Wwise；动画状态机通过对一系列动作的组合拼接，可以实现各种不同游戏动作之间的平滑过渡与混合调用；AI行为树则直接驱动游戏 NPC 或者 Enemy 调用角色动作状态机，做出合理的动作与行为反馈。</p>\n<p data-pid=\"B4iIHZBU\">通过这类工具，可以直接将原始资源通过一定的规则，整合成最终游戏运行时所需的数据形式。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-bdfbb35b8579430c93b599704da41390_720w.jpg?source=b1748391?rss\" data-caption=\"Wwise 界面，图源网络\" data-size=\"normal\" data-rawwidth=\"1141\" data-rawheight=\"633\" data-watermark=\"watermark\" data-original-src=\"v2-bdfbb35b8579430c93b599704da41390\" data-watermark-src=\"v2-4492a75734f4a600fb333a3c83227ed0\" data-private-watermark-src=\"v2-c3f382bbcbe87386d6d928264bd53f53\"></p>\n<p data-pid=\"cvgUm4Dr\"><b>第三类主要是面向策划配置相关工具</b>，比如各类用于游戏运行时服务器端与本地的数据配置的相关工具，像玩家全身 Avatar 道具，武器 id 配置表，不同场景的 id 配置表，还有任务系统，包括任务编辑模块，以及上层的任务配置工具，这类工具一般都需要能够进行逻辑编辑，通常都会接入轻量级的脚本语言。</p>\n<p data-pid=\"F-pjrDie\"><b>第四类主要包括了性能 Profiling 工具以及各类静态资源统计工具</b>，Profiling 工具主要是用于游戏运行时的性能分析，比如 Draw Calls，同屏面数，物理，AI 等分项每帧针对 CPU，GPU 的消耗，进而定位运行时性能瓶颈，目的是保证游戏能够在目标平台上稳定流畅运行。例如 Unity 的 Profiler，Unreal 的 Timing Insights 都是典型的 Profiling 工具。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-b27d0f3472edc40450d37c22ee706486_720w.jpg?source=b1748391?rss\" data-caption=\"Unity Profiler，图源网络\" data-size=\"normal\" data-rawwidth=\"1693\" data-rawheight=\"816\" data-watermark=\"watermark\" data-original-src=\"v2-b27d0f3472edc40450d37c22ee706486\" data-watermark-src=\"v2-efb665ebf288ec9903242204ee9aaf1f\" data-private-watermark-src=\"v2-36e79a0aec715c348e6640cf1f1b8408\"></p>\n<p data-pid=\"viu-L4Ip\">静态资源统计工具主要在非运行时编辑器下对各类静态资产的容量以及规格进行批量统计，一般来说主要目的是限制单体资源内存占用，和控制游戏安装包容量。</p>\n<h2>研发效率工具链</h2>\n<p data-pid=\"8fpxOqN2\"><b>研发效率工具链一般指提供团队协同工作，敏捷开发管理以及快速版本构建发布相关的工具</b>，这块大致分三块。</p>\n<p data-pid=\"m383A_tA\"><b>第一类是用于游戏数据版本管理与多分支开发管理的版本管理工具</b>，例如 svn，perforce，git等，这类工具主要用于支持多人以及多团队的协同开发，避免多方对共同数据内容操作而引起的数据冲突，并支持分线多特性并行开发与多线合并，可以方便团队更加稳定地针对独立特性进行迭代，避免了多特性在同一版本环境中互相干扰造成的研发效率折损。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-e5427396b52f213b9a316e3e2a150da3_720w.jpg?source=b1748391?rss\" data-caption=\"P4v 界面，图源网络\" data-size=\"normal\" data-rawwidth=\"1100\" data-rawheight=\"674\" data-watermark=\"watermark\" data-original-src=\"v2-e5427396b52f213b9a316e3e2a150da3\" data-watermark-src=\"v2-8aa88390dea4a2c3d8d92ed2f118b4a3\" data-private-watermark-src=\"v2-b5f0fcec4ff944ebe7b0cefcef6d4ed7\"></p>\n<p data-pid=\"1dQ8w0Ui\"><b>第二类则是方便项目管理的工具</b>，例如 TAPD，Jira，这类工具主要用于项目日常任务管理，进度统计，能够清晰地让项目成员知道目前的制作任务以及上下游任务的依赖关系，也能够让项目进度管理者清晰地知道当前整个项目各个模块的进度。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b84971ccff0845d2f75e5e3b9a81f212_720w.jpg?source=b1748391?rss\" data-caption=\"Jira 界面，图源网络\" data-size=\"normal\" data-rawwidth=\"740\" data-rawheight=\"402\" data-watermark=\"watermark\" data-original-src=\"v2-b84971ccff0845d2f75e5e3b9a81f212\" data-watermark-src=\"v2-16b4f975c9c79256af4d252d2bd3a025\" data-private-watermark-src=\"v2-96384df6bc5e79a4f66c833fcd5694c1\"></p>\n<p data-pid=\"3U34cLNQ\"><b>第三类则是关于项目快速构建各类版本的相关流程工具</b>，这类工具的主要作用就是自动化快速构建不同平台，用于不同目的游戏安装包，比如 iOS，Android，Windows 等不同平台体验包，或者 development 版本用于真机调试，或者性能分析的测试包，以及各种分线分特性体验的快速体验包等。</p>\n<p data-pid=\"VO2WNy6K\">一套高效的自动构建流水线可以快速地让开发团队能够在最终目标平台上进行最终的版本验证，从而提早发现一些在开发环境中无法出现的真机问题。</p>\n<p data-pid=\"8jski9R9\">当然还有很多针对前两类工具开发的相关 DCC 工具与引擎工具，以减少不同软件之间切换使用的摩擦成本。</p>\n<h2>总结</h2>\n<p data-pid=\"WzoHnuSa\"><b>从以上这些工具分类与作用来看，在整个游戏开发过程中，真正与游戏内容生产或者游戏玩法设计相关的工具只是占到了其中一部分，其他更多的工具设计则是从增效，维护研发品质的角度为出发点， 这类工具的本质并不是为了激发创意。</b></p>\n<p data-pid=\"afR5vJ0E\">而在正常的游戏开发过程中，一般都是先提出想法，然后再去针对这个想法来开发对应的功能或者工具。而不是先做一套工具，再在这个工具的基础上去想创意。</p>\n<p data-pid=\"VUir4D-3\"><b>工具存在的目的是辅助创意的实现。</b></p>\n<p data-pid=\"EjBiUdbo\">当然辩证来看，高效率的工具，能够节省开发者大量的精力与时间，可以让他们投入更多的精力在创意相关的设计工作上。从这方面来说，高效的工具对创意的实现与产生还是有正向的推动作用的。</p>\n<p data-pid=\"53Wg1Rhz\">还有，一套强大的工具往往本身就包含了工具设计者自身丰富的经验与思想，使用者在应用这些工具的过程中，有时候也可能从工具设计的机制层面受到一定的灵感激发。</p>\n<p data-pid=\"JySYgPiW\">综上所述，虽然高效强大的开发工具在开发过程中也许会激发开发者的灵感，但游戏开发工具的目的主要应该是<b>帮助创意实现，解放生产力</b>，而非激发创意本身。</p>\n<h2>参考:</h2>\n<p data-pid=\"nIFgaf0s\">[1]<a href=\"http://link.zhihu.com/?target=https%3A//ubm-twvideo01.s3.amazonaws.com/o1/vault/gdc2019/presentations/Liu_Yibo_Physically_Based_Calibration.pdf\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">ubm-twvideo01.s3.amazonaws.com</span><span class=\"invisible\">/o1/vault/gdc2019/presentations/Liu_Yibo_Physically_Based_Calibration.pdf</span><span class=\"ellipsis\"></span></a></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/bi-xiao-xian-41?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">keggame</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/534519807/answer/2501596051?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">30 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/513042337?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">初探游戏开发，使用什么引擎？</a><br><a href=\"http://www.zhihu.com/question/521856343?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">游戏引擎开发的学习路线是怎么样？</a><br>\n","link":"http://www.zhihu.com/question/534519807/answer/2501596051?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"《巫师 3：狂猎》中有哪些隐藏较深或难以发现的细节？","date":"2022-05-26 16:22:02","description":"\n<p data-pid=\"PeSvRKiv\">《巫师3》对话里面隐藏了许多小细节，在人物的对话中，我们可以补全对游戏世界背景的认知——实际上，这就是巫师3里面隐藏较深或难以发现的细节。</p>\n<p data-pid=\"1xAv6nX-\">1.关于扑克牌，在白果园的小酒馆：</p>\n<blockquote data-pid=\"jcOKWPZJ\">\n<b>农民A</b>：四组，就是四种、四样！就像黑桃和梅花是不同组那样，只是每组还有各自的人脸图案。另外还有所谓的特别牌。<br><b>农民B</b>：我们还是玩战争牌吧？等我学会你这个新游戏，天都要亮啦。</blockquote>\n<p data-pid=\"uC9Id9qv\">《巫师3》里面流行的当然是昆特牌，有人戏称为昆曲，为了昆特牌杰洛特连寻女都忘记了。然而白果园这里小酒馆的农民对话其实暗示的是现实里面的扑克牌。</p>\n<p data-pid=\"LCVVXtZ1\">波兰蠢驴实际上在玩梗。这个梗是什么呢，实际上农民最为贴近生活，故而也最容易创新。实际上扑克牌扣掉大小王牌，52张象征全年52个星期。黑桃♠、红心♥、梅花♣、方块♦与四季有关。每季13张，代表一季13星期。每种图案13张之点（1-13）加起来是91点，而每季也是91天。大小王牌则代表多出的日子（以最多日子数的年份计算，即闰年，闰年有366天，即52星期再加上2天，再加上的2天就是代表2张大小王牌）。此外，全牌只有两种颜色，红色代表白天，黑色代表夜晚。</p>\n<p data-pid=\"dp-q1V3F\">其中黑桃代表橄榄叶，象征和平；梅花为三叶草，意味著幸运；方块呈钻石形状，象征财富；而红桃为红心型，象征智慧和爱情。</p>\n<p data-pid=\"fNB-qZ9b\">此外也有研究指出，黑桃、红心、方块、梅花的图案与中世纪的阶级有关：黑桃♠（spade）是由意大利语的“剑”Spada而来，即是贵族的象徴；红心♥则是由“圣杯”变形而来，象征圣职者；方块♦由“货币”变形而成，象征商人；最后，梅花♣是由象征农夫的“棍棒”变形而成，以前的纸牌上会在农夫的棍棒印上梅花，随著后代传承省略棍棒而只剩下梅花。</p>\n<p data-pid=\"V4E4IYpV\">比较有意思的是，巫师3世界里面其实主要就是这四个阶层，类似于陶森特或蔷薇的骑士、矮人为代表的商人、永恒之火或者其他德鲁伊这样的神职人员、随处可见的农民组成。</p>\n<p data-pid=\"iDhPTJT0\">这里农民所说的“四组，就是四种、四样！就像黑桃和梅花是不同组那样，只是每组还有各自的人脸图案。另外还有所谓的特别牌。”实际上就是扑克牌。有意思的是人们在现实流行扑克牌，巫师3游戏中大家却流行昆特牌。</p>\n<p data-pid=\"ge5cfv9k\">2.白果园蛇派猎魔人的“莫须有”，太冤了，白果园村民谈话：</p>\n<blockquote data-pid=\"Rz0UMGca\">\n<b>农民A</b>：我奶奶把铁匠儿子的事情告诉我了。他失踪了一天，所以大家把附近猎怪物的狩魔男抓了起来，开始戳他、拷问他。他开始动来动去，扭曲身体，然后'砰'的一声，他们把他的头打了下来。哎，事情都发生了。不过抓那个孩子的是水鬼，跟狩魔猎人没关系。<br><b>农民B</b>：那他们怎么办？<br><b>农民A</b>：他们又不能把他的头缝上去！听说他们安葬了他的尸体，让他在土窖里安息……</blockquote>\n<p data-pid=\"9vTLOaPG\">白果园的蛇派猎魔人实际上遭受了无妄之灾，“吃着火锅唱着歌”明明在猎魔，结果就被当成抓孩子的怪物了——实际上除了陶森特，各国民众对猎魔人都有很深的偏见，这个偏见过去是杰洛特被草叉弄死，后面是猫派猎魔人的悲哀（狼与猫玩耍的地方）。蛇派更惨，直接被当地民众当成怪物弄死了，实际上大家也知道是冤枉的——莫须有，实在是令人悲叹。</p>\n<p data-pid=\"-LZHKs0J\">或许玩家在白果园收集资料的时候可以看到，更为悲哀的是，这个蛇派猎魔人实际上被屈打成招，换言之在法律上依照程序被处死，“迟到的正义并非正义”。</p>\n<p data-pid=\"JkJYr_Q9\">3.地域歧视和争执，白果园村民谈话：</p>\n<blockquote data-pid=\"Ew5L05tA\">\n<b>农民A</b>：苟伊德玛！来跟我干一杯吧。<br><b>农民B</b>：现在我叫德尔文了，不叫苟伊德玛。<br><b>农民A</b>：怎么，什么意思？你命名时就是这个名字的啊！怎么会取“德尔文”这种奇怪的名字？<br><b>农民B</b>：是尼弗迦德语，我奶奶是奈泽尔来的。<br><b>农民A</b>：哼，这样是吧。好哇，德尔文先生，我先走一步了，愿太阳引领你——滚出这里！</blockquote>\n<p data-pid=\"bgtQLjfM\">尼弗伽德的标志当然是太阳，泰莫利亚（Temeria） 的标志却是鸢尾花，感觉波兰蠢驴其实在内涵乳法——希特勒入侵法国。但是这个只是第一个层面的理解，实际上就像电影《沃伦》或者卢旺达种族大屠杀一样，明明是积年累月生活的邻居，或许因为种族、意识形态、信仰不同就导致分歧，这个分歧其实会导致进一步的纷争。当然德尔文先生其实也是为了趋利避害，某种意义上的趋炎附势其实是为了更好的“活着”罢了。</p>\n<p data-pid=\"ZYvWdE3f\">4.尼弗伽德人民的勤劳，善于改造自然，白果园军营：</p>\n<blockquote data-pid=\"y9Rzcodj\">\n<b>尼弗迦德士兵A</b>：听说狮鹫兽又在树林里出现了。<br><b>尼弗迦德士兵B</b>：不，是在路上，这次是攻击了商人的马车。<br><b>尼弗迦德士兵A</b>：家乡的人说得果然没错，北方什么都没有，沼泽和怪物最多。<br><b>尼弗迦德士兵B</b>：放心，只要我们把沼泽的水抽干，把那些怪物都杀死，跟你说，不用十年，这里就会变得和我们家乡一样。</blockquote>\n<p data-pid=\"ztSWYuQB\">比较有意思的是，尼弗伽德士兵身上隐含了文明的象征，更多意义上像秦国、罗马，也像西汉——装备精良，更有正义感，纪律严明，喜欢耕战。在笔者看来，似乎白果园的尼弗伽德士兵会诚心诚意的绞杀怪兽，他们建设和维护秩序，不仅仅出于侵略战争，也在于想要改变自然，他们不太信多种神灵。相比而言，北方诸国似乎就喜欢“淫祀”，尼弗伽德和北方其实文化程度完全不同。</p>\n<p data-pid=\"Mp_pfUJ1\">5.威伦实际上在爆发鼠疫，以及类似战争宣传上的“套路”古今中外都有啊，白果园军营：</p>\n<blockquote data-pid=\"mkFHWC_p\">\n<b>尼弗迦德士兵A</b>：你听说了吗？杰里德下士死了。<br><b>尼弗迦德士兵B</b>：杰里德？是那个铁血教头杰里德？我以为北方人没一个能打的赢他。<br><b>尼弗迦德士兵A</b>：他不是被北方人杀死的。听说他是生病死的，除了发烧，腋下还长了一些黑色的沸泡。不过可别四处宣扬，那些政治官员对这种事很敏感。</blockquote>\n<p data-pid=\"XWYYwdXF\">“腋下还长了一些黑色的沸泡”明显是一种传染病（这个病是什么呢，我后面说），官方为了避免军队恐慌，所以才会对这种事很敏感，但是士兵其实都不是傻子。颇为有意思的是，在威伦一些聚集点，我们经常可以听到尼弗伽德士兵有痰或咳嗽的声音，有合理理由认为军队内部在传播一种上呼吸道传染病。</p>\n<p data-pid=\"79XGFpXi\">一个佐证就是威伦尼弗迦德军营附近，会有三个士兵闲聊，大体意思是现在军营内有瘟疫，感染会可以被送至后方，一个士兵说有个队长在卖病人的床单，另一个人问能确保得病么，看到主角来了会说小声点有人来了。</p>\n<p data-pid=\"0dVpSvc4\">这一点还可以在威伦其他村民对话得到验证，威伦：</p>\n<blockquote data-pid=\"GDQSc7ph\">\n<b>农民A</b>：黑衣人很邪恶没错，可是他们经过的时候，有人丢了一块面包给我的弗威提...<br><b>农民B</b>：小心他发高烧。<br><b>农民A</b>：你讲什么？<br><b>农民B</b>：他们在某个村庄送猪肉，结果那个村子现在通通死光了。<br><b>农民A</b>（惊恐）：弗威提，快来！</blockquote>\n<p data-pid=\"z8ZGWcVj\">尼弗伽德人并非那样邪恶，但是这里面发高烧，恐怕就是跟上呼吸道传染有关系，军中有瘟疫。</p>\n<p data-pid=\"_ae9HXan\">另外，大家可能不会忘掉费克岛的老鼠之塔，凯拉梅兹指引杰洛特跟她一起去，这背后隐藏了什么呢？请看对话，实际上凯拉梅兹是知道当地在流传瘟疫的，老鼠之塔其实是一个隐喻。</p>\n<p data-pid=\"mqdPRQ-m\">与此同时，人们应该不会忘却安娜贝的灵魂早已变成了专门散布疾病和瘟疫的瘟疫女妖——散播的什么瘟疫，结合老鼠之塔的经历，有心人现在已经明白的七七八八了。</p>\n<p data-pid=\"CtiO8WG6\">值得提到的是，历史是由幸存者书写的，历史未必真的如宣传或者书本上的那样。游戏攻略里面一般说“一位叫亚历山大的术士在费克岛上研究瘟疫术，战乱期间领主维瑟拉德和他的女儿安娜贝以及家人在这里避难。但是逃难到此的暴民，不仅将塔楼里一洗而空，杀害了安娜贝的家人，并要对她施暴。安娜贝喝下术士给他的药水后倒下。他的爱人葛拉汉以为他死掉了，便逃离了塔楼，并诅咒这里的人统统下地狱。”</p>\n<p data-pid=\"TZ-2YJiN\">注意，游戏里面，杰洛特解决了费克岛上的诅咒事件，回去见凯拉，说起岛上的亚历山大在研究瘟疫的事情，凯拉表现出极大的兴趣——我们往下看。</p>\n<p data-pid=\"P-CKM9Kz\">威伦：</p>\n<blockquote data-pid=\"91yM_BZ8\">\n<b>农民A</b>：那女巫说我应该...教育你们。现在我努力。你们要避免瘟疫，就要注意...注意...卫生什么的。而且水井的水不要直接喝...<br><b>农民B</b>：反正每星期洗一次澡，水烧开再喝就对了！</blockquote>\n<p data-pid=\"BJNKhaOg\">“那女巫（凯拉）说我应该...教育你们。现在我努力。你们要避免瘟疫，就要注意...注意...卫生什么的。而且水井的水不要直接喝”——这里的要避免瘟疫，实际上已经暗示在流行瘟疫了，只是瘟疫应该是由南向北传播的。不知细心的玩家是否发现，经常有一些南边的村庄鸡犬不闻，毫无人烟。我推断这不仅仅是战争的结果，实际上还有瘟疫传播的结果。</p>\n<p data-pid=\"zO_Gy2hm\">更有意思的是，可以看到奥森福特和诺维格瑞有很多带着鸟嘴面具（防护罩）的医生，以及尼弗伽德和北方军队不约而同地用火焚烧尸体，这里其实点点滴滴都在暗示：真相呼之欲出。</p>\n<p data-pid=\"5-4ZiTk_\">推理到这个地步，要求搞好卫生，喝开水，然后病情症状是发高烧，“腋下还长了一些黑色的沸泡”——其实这个就是历史上令人闻风丧胆的鼠疫，也叫黑死病。略微科普一下，鼠疫分为腺鼠疫、肺鼠疫、败血症型鼠疫和一些少见类型。</p>\n<p data-pid=\"qLvUfIoE\">看看典型的腺鼠疫最为常见，除具有鼠疫的全身表现外，受侵部位所属淋巴结肿大为其主要特点。好发部位依次为腹股沟淋巴结，腋下、颈部及颌下淋巴结，多为单侧。淋巴结肿大与发热同时出现，表现为迅速的弥漫性淋巴结肿胀，典型表现为淋巴结明显触痛而坚硬，与皮下组织粘连，失去移动性，周围组织显著水肿，可有充血和出血。由于疼痛剧烈，患者常呈被动体位。这个也就是所谓“杰里德下士的症状是除了发烧，腋下还长了一些黑色的沸泡。不过可别四处宣扬，那些政治官员对这种事很敏感”。</p>\n<p data-pid=\"fcLF2LnA\">至于尼弗伽德士兵有痰或咳嗽的声音，则是肺鼠疫，这种类型起病急骤，寒战高热，在起病24～36小时内可发生剧烈胸痛、咳嗽，咯大量泡沫粉红色或鲜红色血痰；呼吸急促并呼吸困难；肺部仅可闻及少量散在湿啰音或轻微的胸膜摩擦音，较少的肺部体征与严重的全身症状常不相称。胸部X线片可见多叶段分布的斑片状边缘模糊的高密度阴影。若不及时给予有效治疗，患者多于发病2～3天后死于中毒性休克、呼吸衰竭和心力衰竭。</p>\n<p data-pid=\"rKonE3Hx\">这正好佐证了对话：</p>\n<blockquote data-pid=\"OSMZJlFe\">\n<b>农民A</b>：黑衣人很邪恶没错，可是他们经过的时候，有人丢了一块面包给我的弗威提...  <br><b>农民B</b>：小心他发高烧。 （起病急骤，寒战高热） <br><b>农民A</b>：你讲什么？  <br><b>农民B</b>：他们在某个村庄送猪肉，结果那个村子现在通通死光了。  （若不及时给予有效治疗，患者多于发病2～3天后死于中毒性休克、呼吸衰竭和心力衰竭。）<br><b>农民A</b>（惊恐）：弗威提，快来！</blockquote>\n<p data-pid=\"9N2w_nYv\">回到老鼠之塔问题上，我猜想游戏背景中的“费克岛上的亚历山大在研究瘟疫”其实并不是在研究如何传染鼠疫，而是在思索如何治疗鼠疫，这从其中用于隔离的玻璃和牢笼可以看到，凯拉为什么会对这个研究感兴趣呢，回到她提示村民要避免瘟疫，实际上是对鼠疫产生了兴趣。当然这个鼠疫也可以作为击败尼弗伽德的工具，所以她从政治角度上有给北方国王的动机（在杰罗特与凯拉对话完之后，凯拉会到灯塔处得到瘟疫研究笔记。她想拿这份笔记回到北方，妄想与北方国王和解。实际上无论选择如何，凯拉都会研制出瘟疫的解药，从这一点来看无论亚历山大还是凯拉都在致力于研究疾病的原理，从而治疗疾病）——不过我们要知道，医疗科学可以治病也可以害人，为恶为善都在一念之间。</p>\n<p data-pid=\"qmM2ITPf\">6.宣传为了政治服务，白果园村民谈话：</p>\n<blockquote data-pid=\"5vXWlS7m\">\n<b>小男孩</b>：大雨大雨一直下，恩希尔皇帝鼾声大。睡前碰到头没在怕，早上尿床湿答答。<br><b>农妇</b>：什么？你在唱什么？谁教你这首歌的？！<br><b>小男孩</b>：查提。<br><b>农妇</b>：你给我听清楚，以后绝对不准唱那首歌，永远不行！以后也不准再去和查提玩。<br><b>小男孩</b>：可是我跟查提最要好了！<br><b>农妇</b>：查提是个小傻瓜，他的不小心会害我们通通丢了小命，敢给我看到你和他玩你就给我当心点！</blockquote>\n<p data-pid=\"BQzrBtrp\">实际上政治性的童谣来自于什么地方呢？我猜测来自于罗契他们的游击队。现实中也不罕见，且看一段蔡楚《民间童谣和政治化的儿歌》节选：上世纪五十年代初期，我（蔡楚）就读于成都市龙江路小学。当时朝鲜战争爆发，音乐老师教我们一首儿歌：“有个人是大坏蛋，他的名字叫李承晚，坐飞机、丢炸弹，炸死人民千千万。人民叫他陪血汗，陪不起就敲沙罐，第二天，我来看，沙罐敲得稀巴烂。” 不久就传遍成都，风靡一时，大街小巷的女同学跳橡筋绳都在唱。 </p>\n<p data-pid=\"DBzk7e7k\">笔者不由想起还有一个流行在97年到2003年的东北童谣，“运输大队长（名讳）他妈，稀里哗啦，洗脚的水，扑地瓜，被窝里吃，被窝里拉，被窝里放屁崩爆花”，这亦然其实是政治童谣化。</p>\n<p data-pid=\"8B87nlsu\">白果园的农妇其实很聪明，当妈妈的都很聪明“政策时时变”，很多时候当权者将人民视作愚民，其实自己何尝不是愚民呢？一些愚弄措施其实愚弄的只是小孩子罢了——当然通过小孩子去影响家庭，当真是当局好算计。</p>\n<p data-pid=\"DX1M9Dm2\">7.维瑟米尔不白给，其实是个智谋人物，比杰洛特想的多，反过来杰洛特不是很聪明的样子。白果园小酒馆：</p>\n<blockquote data-pid=\"5dMd03jO\">\n<b>维瑟米尔</b>：那片麦田是谁的？<br><b>农民</b>：树林旁的那片吗？是伯彦·克林米尔的。狩魔大师，他是个好人，不过……<br><b>维瑟米尔</b>：好、好，这位伯彦先生短时间内会出来巡视他的麦田吗？<br><b>农民</b>：没必要吧？因为离收割的时候还很久……</blockquote>\n<p data-pid=\"XulZFPUz\">当爹的不容易啊，总要给孩子擦屁股。从维瑟米尔身上，大家是否可以找到老父亲的感觉呢？名义上让孩子自己去办事，放孩子去飞，实际上却早就考虑好很多孩子会想不到的细节了。《巫师3》这里面其实有个值得关注的地方是，白果园最后猎杀狮鹫的诱饵田地（杰洛特去采集鼠李草包装假羊）实际上是伯彦·克林米尔的，这个正好呼应了维瑟米尔跟村民对话的事前设计。</p>\n<p data-pid=\"1dvXVMwD\">8.前作的雅妲公主，以及杰洛特“打桩机”之名全大陆都知道了，维吉玛宫殿：</p>\n<blockquote data-pid=\"LpIrcseM\">\n<b>尼弗迦德贵族A</b>：百分之百确定，像猫一般锐利的眼睛，带着两把剑……就是狩魔猎人。<br><b>尼弗迦德贵族B</b>：或许他要去解决地下墓窖的怪物。从弗尔泰斯特时代起，那里就一直有吸血妖鸟。<br><b>尼弗迦德贵族A</b>：可能吧。谁知道他究竟播了多少种……大家都说他好色至极。真是典型的北方人。<br><b>尼弗迦德贵族B</b>：净是些野蛮人！</blockquote>\n<p data-pid=\"vDWMmd4N\">“从弗尔泰斯特时代起，那里就一直有吸血妖鸟”，弗尔泰斯特的女儿是怪兽，细心的朋友在维吉玛花园里面可以找到暗室，并找到相关骷髅和线索，不知道大家是否想到一个昆特牌的名言“<u><a href=\"http://link.zhihu.com/?target=https%3A//zhidao.baidu.com/question/2142432330032898308.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">男人喜欢自己的妹妹是件自然而美好的事</a></u>”，实际上吸血妖鸟雅妲公主就是悲剧故事的结果。至于杰洛特打桩机，还需要展开么？人所尽知。从背面其实看到另一个事情，似乎尼弗伽德对礼节和名声更在意，或许尼弗伽德是一夫一妻制？</p>\n<p data-pid=\"vhOAH5Mk\">9.实际上尼弗伽德很擅长于明谋和阴谋，维吉玛宫殿：</p>\n<blockquote data-pid=\"yBphetaA\">\n<b>大使</b>：……诺维格瑞真正的当权者不是市议会、也不是商人公会，而是永恒之火教会和黑社会。有时候两者很难区分，因为双方都无情残酷，愤世嫉俗到……<br><b>抄写员</b>：请慢一点，大使……我跟不上了。<br><b>大使</b>：我自己来写报告好了。这样你只要准备一式三份的草稿就好了。</blockquote>\n<p data-pid=\"xXQEhE6B\">宗教和黑社会一样无情残酷。如何搞定一个城市，如何劝降这个城市的当权者，要从情报入手。偏偏这个还是明面的谋略。其实从刻画中可以看到尼弗伽德大使馆在大桥附近，大桥附近可是有一个高级销金窟的，金钱和美色之下，你说尼弗伽德的情报来自于什么地方？</p>\n<p data-pid=\"MJIUv8Re\">10.不要想歪了，其实是便秘，乌鸦窝：</p>\n<blockquote data-pid=\"4691g32t\">\n<b>男爵的手下A</b>：他在里面搞了有一个小时了吧？<br><b>男爵的手下B</b>：看来这次积的分量不少。</blockquote>\n<p data-pid=\"T_lrhig6\">好像是一语双关，对话地点发生在乌鸦窝一个类似厕所边上，尤其是参军的男子，容易口无遮拦，接触过就知道了，他们言必称什么呢？人类自然的欲望罢了。</p>\n<p data-pid=\"lw5WThii\">评论区说这些士兵其实还去巫医家里讨药，确实如此，这个士兵在军队里人缘还不错，故而有不少朋友去帮助他解决病痛，只是很有意思的是巫医似乎给了这个士兵猛烈的泻药。</p>\n<p data-pid=\"3kFWyYif\">11.侧面看血腥男爵是个非常正义的好汉，但是可惜了，酗酒成命，对下属没有进一步的约束，乌鸦窝：</p>\n<blockquote data-pid=\"ccev5x3H\">\n<b>男爵的手下A</b>：我们去村子里收保护费，那家伙上了一个姑娘。<br><b>男爵的手下B</b>：所以血腥男爵把他杀了。<br><b>男爵的手下A</b>：你说你从哪儿听来的？</blockquote>\n<p data-pid=\"gd-LhnID\">乌鸦窝：</p>\n<blockquote data-pid=\"VbBEtNf_\">\n<b>男爵的护卫A</b>：伙伴，想去找找看那个女妖吗？<br><b>男爵的护卫B</b>：你是说铁匠的女儿？缺颗牙的那个？好主意，她的奶子还蛮大的。<br><b>男爵的护卫A</b>：我是说最近破坏农妇鸡舍的那个尖叫怪啦！<br><b>男爵的护卫B</b>：你疯了不成？还想装英雄拯救世人咧。</blockquote>\n<p data-pid=\"BXP4IcWs\">乱世很难维持军纪，溃兵如匪，这些人曾经都是好男儿，可是溃败之后，都失去了心气。许多逃兵或许良心未泯，但是这样的人太少了，一群没有军纪只会欺负百姓的军队和土匪差不多。 乌鸦窝里面，其实血腥男爵也管不了那么多。</p>\n<p data-pid=\"htXRemAz\">12.贿赂是人间常态？会说话的人总能找到一条路，威伦通向诺维格瑞的路：</p>\n<blockquote data-pid=\"hxCdsYoe\">\n<b>旅行家</b>：这些税真是有够贵……<br><b>瑞达尼亚士兵</b>：这是国王设的，不是我。<br><b>旅行家</b>：但决定谁能通行的是你，不是拉多维德。或许我们能讨论出个共识。<br><b>瑞达尼亚士兵</b>：我们可以讨论讨论……但现在喉咙好像有点渴……<br><b>旅行家</b>：这可不行，艾科！拿个杯子来给下士。<br><b>瑞达尼亚士兵</b>：下士……？不对，我只是低阶大兵啊。<br><b>旅行家</b>：很快就要升官了！你的举止就像个军官，头脑还很聪明！</blockquote>\n<p data-pid=\"NmzjS1fq\">这里的士兵其实是个雏，旅行家能说会道，不仅在在中国的社会文化中，“阎王好见，小鬼难缠；穷人好帮，懒人难扶”已经成为了每个人都可能遇到的困扰难题。其实西方也如此，尤其是在这人心不古的现代社会，确实是又常见、又实用，不禁令人唏嘘。</p>\n<p data-pid=\"ErIz2ruh\">不妨想想电视剧《西游记》里面的情节：孙悟空去那阎王殿找阎王，刚开始会遭到门口的小鬼小妖的阻挡，说他既没有令牌，也没有名帖，绝对不能见阎王。这种情况下倒逼民众行贿，你说这是什么世道呢？</p>\n<p data-pid=\"liwJTdDL\">这个旅行家比较会恭维，实际上在古代中国动辄称呼“军爷”“将军”，都是恭维，为了方便行走，总要有一些人情世故。</p>\n<p data-pid=\"DS6Oik8c\">与此对比的是不懂人情世故的（旅行家遵纪守法，但是没有向士兵行贿，看到这里大家有没有想到什么？），诺维格瑞城外路边：</p>\n<blockquote data-pid=\"hsp1vulS\">\n<b>旅行家A</b>：你的那圈熊猫眼是谁的杰作？<br><b>旅行家B</b>：瑞达尼亚士兵，那些该死的小偷，全都去死吧。<br><b>旅行家A</b>：嘘……别让别人听到了……<br><b>旅行家B</b>：我去了酿酒厂，正想骑马回城里。东西都带好了，通行证、许可证、关税也付了。那些该死的士兵拦住我，说他们要征收我的伏特加。说是要慰劳士兵用。我问他们，‘哪时候找麻烦也是士兵的工作了？’他们把我打下马，把东西都抢走了。</blockquote>\n<p data-pid=\"GMlx_CtT\">13.求人的时候卑躬屈膝，实际上背后则喜欢说三道四，人性的劣根不改，凯拉的小屋前：</p>\n<blockquote data-pid=\"5BohHWvM\">\n<b>农民A</b>：她心情很差，我们最好明天再回来。<br><b>农民B</b>：小心你的嘴唷！她动不动就发脾气，就连人家不小心得罪了一点点，她也要报复呢。<br><b>农民A</b>：贱人就是爱发火，一定是缺男人啦！</blockquote>\n<p data-pid=\"v1-GytT-\">这里面其实是农民们想要求药物，然而没有得到满足，就开始背后诋毁凯拉，人性实在难以琢磨，人心险恶。</p>\n<p data-pid=\"Q74cOMcf\">有这样一则寓言故事：有一个老人和一个小孩，用一匹驴子驮着货物去赶集，孩子骑着驴，老人跟在后面，路上的人见了都说这孩子不懂事，让老年人徒步，而自己骑驴享福。孩子连忙下来，让老人骑上。路上的人又说，老人怎么忍心自己骑驴，让小孩走路，老人听了又把孩子抱上来一同骑。骑了一段路，别人都说他们残酷，两个人骑一头小毛驴，不怕把毛驴压死了。两个人就只好都下去，可是路人又笑他们是呆子，有驴子不骑却走路，老人听了叹息道：“这下没法子了，看来我们只剩下一条路，两个人抬着驴子走吧。”</p>\n<p data-pid=\"vYzjDMls\">这个故事说明人言可畏啊，类似的一句话说的也是如此，当初求种贱如狗，如今撸完嫌人丑。</p>\n<p data-pid=\"YSmpAa5t\">14.无形幽默，类似世说新语，护身符的确解渴了，用护身符换酒喝，威伦：</p>\n<blockquote data-pid=\"9kXvGTR5\">\n<b>农民A</b>：我问她，“要怎样让我那酒鬼老公别再喝那么多酒？”她给了我一个护身符，还说那会解他的渴。<br><b>农民B</b>：结果呢？成功了吗？<br><b>农民A</b>：隔天他竟然把护身符拿去换酒喝！</blockquote>\n<p data-pid=\"Btb13ekK\">威伦进入民宅搜刮的时候，碰到最多的就是各种酒，什么尼弗伽德柠檬酒，黑啤酒，樱桃啤酒，马哈坎烈酒之类的：实际上乱世人们总是买醉，不由想起一些史实。</p>\n<p data-pid=\"67WfLNl-\">伶曰：“善！吾不能自禁，惟当祝鬼神自誓耳。便可具酒肉。”妻从之。伶跪祝曰：“天生刘伶，以酒为名。一饮一斛，五斗解酲。妇儿之言，慎不可听。”仍引酒御肉，隗然复醉。——《晋书》</p>\n<p data-pid=\"2bTHIKuA\">刘伶喜欢喝酒，每次喝很多。当他再一次跟妻子要酒喝时，刘伶的妻子实在无法忍受，果断倒掉了美酒，把酒具也给砸了，哭着劝他一定要戒酒。对妻子的话，刘伶还是给了点面子。他爽快地答应了，但同时提出了一点小要求，说自己自制力比较差，控制不了饮酒的念头，要求妻子准备点儿酒肉，得向上天发誓戒酒，以此为证。刘伶的妻子信以为真，赶忙准备了美酒佳肴。结果刘伶跪下来祈祷说，自己天生就是喜欢喝酒，一次就得喝一斛，喝五斗才能消除酒瘾，上天您可千万别听信妇人之言啊！说完，刘伶又一次大口吃肉、大碗喝酒，一会儿就又醉倒了，弄得妻子哭笑不得。</p>\n<p data-pid=\"cwmfpDRv\">至于用护身符换酒喝，这令人想起好酒的唐代，贺知章金龟换酒。唐代孟棨《本事诗》记：“李太白初至京师，舍于逆旅，贺监知章闻其名，首访之。既奇其姿，复请所为文，出《蜀道难》以示之，读未竟，称赏者数四，号为谪仙。”从此李白被称为“谪仙人”，人称诗仙。两人相见恨晚，遂成莫逆。贺知章即邀李白对酒共饮，但不巧，这一天贺知章没带酒钱，于是便毫不犹豫地解下佩带的金龟(当时官员的佩饰物)换酒，与李白开怀畅饮，一醉方休。这就是著名的“金龟换酒”的故事。</p>\n<p data-pid=\"dVs6nEkY\">唐天宝三年(744)，贺知章告老还乡，李白深情难舍。 作《送贺宾客归越》诗道：“镜湖流水漾清波，狂客归舟逸兴多。山阴道士如相见，应写黄庭换白鹅。”表达了他对贺知章的情谊和后会有期的愿望。不幸，贺知章回到家乡不到一年，便仙逝道山。对此，李白十分悲痛，他写下了《对酒忆贺监二首》，其序曰：“太子宾客贺公于长安紫极宫一见余，呼余为‘谪仙人’，因解金龟换酒为乐。怅然有怀，而作是诗。”其一：“四明有狂客，风流贺季真。长安一相见，呼我谪仙人。昔好杯中物，今为松下尘。金龟换酒处，却忆泪沾巾。”其二：“狂客归四明，山阴道士迎。敕赐镜湖水，为君台沼荣。人亡余故宅，空有荷花生。念此杳如梦，凄然伤我情。”可见“金龟换酒”一事，给李白留下了多么深刻的印象，产生了多么深厚的挚情。</p>\n<p data-pid=\"2OhPWYwA\">15.欺骗和被欺骗，拜维斯尼弗伽德巡逻队的真相：</p>\n<p data-pid=\"SpiZJBwq\">杰洛特前往奥瑞登，从告示板上接受本委托任务。发现驻军的指挥官米兰正招募熟悉本地的人，前去帮忙寻找失踪的巡逻队。按照指示前去和驻军指挥官米兰（一个光头）交谈，得知他派遣的巡逻队在温达梅尔湖南岸失踪。据说有个村落叫拜维斯，那里有怪物在杀人，整个村庄都空了。</p>\n<p data-pid=\"gBbgiAHZ\">这时候会有周边的士兵在议论：</p>\n<blockquote data-pid=\"mRPf3dui\">\n<b>尼弗迦德士兵A</b>：去拜维斯的巡逻队有消息吗？<br><b>尼弗迦德士兵B</b>：没有，我有预感即使收到了也是坏消息。<br><b>尼弗迦德士兵A</b>：我们应该派搜救队去搜索。<br><b>尼弗迦德士兵B</b>：指挥官不准，他说我们不能再冒折损人力的险。<br><b>尼弗迦德士兵A</b>：他给了一笔赏金，赏金给提供巡逻队消息的人！<br><b>尼弗迦德士兵B</b>：......我最讨厌这片沼泽了....等着瞧吧，我们肯定没有人会活着回去。</blockquote>\n<p data-pid=\"-fsfriud\">从士兵闲聊和小队指挥官的话语里面可以得出事实：军官爱惜自己的士兵，但同时也在致力于维护地方秩序，故而得知拜维斯有怪物在杀人，米兰派遣了巡逻队。</p>\n<p data-pid=\"KG8Ej6ze\">这一支巡逻小队的结局如何呢，到底发生了什么？</p>\n<p data-pid=\"HeJy6nPT\">杰洛特来到南方的拜维斯村，遇到成群的食尸鬼，将它们全部斩杀后，幸存的村民说尼弗迦德人烧杀抢掠，到处抢劫值钱的东西，然后那些食尸鬼出现虐杀了那些士兵。</p>\n<p data-pid=\"8AZpIf0n\">真相就是如此么？绝非如此。调查完地上的狗尸、猪尸、两具巡逻队士兵的尸体后，可以触发血腥的气味，循着气味找到一幢屋子。这时候说来奇怪，村民过来阻止杰洛特，说屋底有个精灵遗迹，他们经常在里面捡些东西和尼弗迦德人换钱，不想引来祸事。他们还在遗迹里找到一间密室，里面睡着一只怪兽。</p>\n<p data-pid=\"kxusVSVN\">注意，此时村民的叙述就有了逻辑瑕疵，一方面说“尼弗迦德人烧杀抢掠，到处抢劫值钱的东西，食尸鬼出现虐杀了那些士兵”，另一方面说“屋底有个精灵遗迹，他们经常在里面捡些东西和尼弗迦德人换钱······里面睡着一只怪兽”。</p>\n<p data-pid=\"-E2nMUD7\">从法律上来说，这姑且属于当事人陈述或者证人证言。我们基于尸体和血腥气味这些物证，其实可以组成一个证据链，这个证据链则指向一个事实：虐杀士兵的并非食尸鬼，而是地底的怪物（尸体的气味追寻就可以推理出）。</p>\n<p data-pid=\"JgXKLMrP\">那么这些士兵为什么会被杀呢？答案就隐藏在幸存村民的话语之中和在这等人行为之中，要过钥匙进入屋子（这些幸存的村民为什么会有钥匙），调查地板发现血魔的气息。打开盖板进入地穴，一路前行。在一座地下大殿里看到悬吊很多的尸体，在这里遭遇血魔沙拉斯提，击杀这个怪物之后，由此真相大白。</p>\n<p data-pid=\"hIlkpijB\">当地村民日常喜欢进入精灵遗迹盗墓，结果不小心惊动了血魔，导致村民被杀，被抓进地下大殿——当地派出村民向奥瑞登的米兰指挥官求救——派出巡逻队——巡逻队得知情况后进入地下遭遇血魔——血魔虐杀尼弗伽德巡逻队士兵，一部分逃出，但依旧被追出来的血魔杀掉——血魔不喜欢在外面待着，回归地下——幸存村民锁住盖板和屋子，并躲藏起来——此时路过的食尸鬼进食尸体。</p>\n<p data-pid=\"vrTjNJPL\">由此我们知道“尼弗迦德人烧杀抢掠，到处抢劫值钱的东西，食尸鬼出现虐杀了那些士兵”是谎言，为什么当地幸存村民要这么叙述呢？当地村民有恃无恐，我们知道村民是不知道杰洛特的身份的（万一是派来调查的），假如说士兵是因为保护当地村民而死，尼弗伽德未免会迁怒于当地村民（情报不实），但是如果说这小队军纪有问题，则尼弗伽德自知理亏，不会追究。</p>\n<p data-pid=\"-3eAdR4T\">与白果园和威伦当地人民对尼弗伽德的污蔑不同，从游戏里我们可以看到尼弗伽德的军队军纪优良，实际接触则没干什么坏事。</p>\n<p data-pid=\"CF6RNhND\">这里从诺维格瑞港口难民的对话可以得到佐证：</p>\n<blockquote data-pid=\"yRBTlEM5\">\n<b>难民A</b>：你是哪座村子来的？<br><b>难民B</b>：威洛斯。是在泰莫利亚，离维吉玛要走两天的路。尼弗迦德人在冬天前攻到那里了。<b>黑衣者一开始没怎么样</b>...直到游击队攻击了他们的要塞，然后他们就把我们的小屋全烧了。<br><b>难民A</b>：为什么？你们又没对他们做什么事！<br><b>难民B</b>：尼弗迦德人遵守严刑峻法，所有罪都有惩罚，就算抓不到罪犯也一样。</blockquote>\n<p data-pid=\"-Rm4XGNT\">当然这个对话其中真真假假，需要甄别。关键的信息是，尼弗伽德对“对他们做了什么事”才会惩罚，那么难民B所在村庄的事情很有可能是给游击队提供了情报。</p>\n<p data-pid=\"rJCQPctb\">16.奥森福特大学被封闭后，高校教师失业后的去向：</p>\n<p data-pid=\"wc9YcGli\">杰洛特所熟知的夏妮自然是去前线做战地医生了，由此留下夏妮担任教职时常引用米洛·范德贝克的话“红的跟红的缝在一起，黄的跟黄的，白的跟白的，这样就一定不会错的”；</p>\n<p data-pid=\"crFCPOmJ\">著名游吟诗人丹德里恩继承家业，开了个小酒馆；</p>\n<p data-pid=\"LsTQq_xJ\">看看这个情侣吵架，香草酒馆：</p>\n<blockquote data-pid=\"9LRNuST0\">\n<b>普西拉</b>：这真的是你要的吗？你就想当个老鸨，灌水卖酒给嫖客？<br><b>丹德里恩</b>：嘿！我又不能选择我要继承什么？<br><b>普西拉</b>：但你可以选择别的处理方式啊！<br><b>丹德里恩</b>：我知道，所以我正在考虑……<br><b>普西拉</b>：你就只会考虑！整天考虑东考虑西！下定决心之后再告诉我吧。</blockquote>\n<p data-pid=\"zKV3Wjk1\">香草酒馆外：</p>\n<blockquote data-pid=\"hMmivJjl\">（丹德里恩和普西拉正在酒馆内讨论香草酒馆的装修事宜）<br><b>半身人</b>：都准备好了吗？<br><b>工人</b>：不，我只是出来抽根烟。<br><b>半身人</b>：他们还在吵？<br><b>工人</b>：看来他们决定不了颜色。<br><b>半身人</b>：我真搞不懂问题到底出在哪。颜色不是好看就是丑，又没什么深奥的。<br><b>工人</b>：嘿嘿，嘿呵。</blockquote>\n<p data-pid=\"EuFw5gsT\">其他教师呢？</p>\n<p data-pid=\"5dnWXT14\">卖草药的，植物学老师，诺维格瑞市场：</p>\n<blockquote data-pid=\"h6alkZP5\">\n<b>商人</b>：大家来吧，我的东西可不够所有人买！<br><b>老妇人</b>：有肚子痛的药吗？我肚子下面从昨天开始就痛得不得了。<br><b>商人</b>：我建议你买些金丝桃叶，又叫藿香蓟，它们可以缓和腹痛，清理胆汁道。<br><b>老妇人</b>：就个小贩来说你还真是聪明。<br><b>商人</b>：我战前在学院里教植物学...这样够了吗？</blockquote>\n<p data-pid=\"MrlBWXj7\">这里金丝桃叶是藤黄科植物金丝桃的叶子，“多情夏雨润新枝，灿若娇娘起舞姿，风月无边关不住，金丝万缕吐相思。”如此风雅的诗句形容的就是金丝桃。商人说的“缓和腹痛，清理胆汁道”其实是真的，按《中华本草》：清热解毒；散瘀止痛；祛风湿。有个《中药大辞典》药方，治风湿性腰痛：金丝桃根一两，鸡蛋两只，水煎二小时。吃蛋和汤，一天二次分服。</p>\n<p data-pid=\"-qkTEN8m\">卖指南针和直角器的，估计是数学老师，诺维格瑞街边：</p>\n<blockquote data-pid=\"mhHSfXZR\">\n<b>瑞达尼亚人A</b>：女士，有什么需要吗？指南针？直角器？现在是限时特价喔。<br><b>妇人</b>：我要这些奇怪的东西干嘛？<br><b>瑞达尼亚人A</b>：嗯……说不定你想量个东西……画个圆……<br><b>瑞达尼亚人B</b>：别听他胡言乱语，女士。这些是学生留下来的垃圾，他现在逢人就推销。</blockquote>\n<p data-pid=\"-lTbixT4\">教人乞讨的，估计是文学院的老师，诺维格瑞街边：</p>\n<blockquote data-pid=\"Tep5PcqC\">\n<b>教授</b>：不对，不是这样。声音要拉长点，‘面——包——’。<br><b>镇民</b>：有差吗？<br><b>教授</b>：差多了。把声音拉长，像小朋友哭一样。可以刺激潜意识。<br><b>镇民</b>：你还真聪明，教授！</blockquote>\n<p data-pid=\"Tc8rH0Zy\">17.威伦和诺维格瑞不仅流传鼠疫，同时也在爆发天花，诺维格瑞小酒馆：</p>\n<blockquote data-pid=\"nYNcc703\">\n<b>贫穷的镇民A</b>：大家老爱说永恒之火会赐予奇迹……<br><b>贫穷的镇民B</b>：奇迹个屁啦！我儿子快死了，知道吗？得天花病死啦！<br><b>贫穷的镇民A</b>：小声点，被其他人听到的话我们就惨了……<br><b>贫穷的镇民B</b>：为什么？我儿子死了，你不懂吗？我祷告到膝盖都流血了……</blockquote>\n<p data-pid=\"tsYqu27y\">这一点可以在威伦一个任务得到佐证，其他网友说道遇到一个用车拉尸体的人，车上都是感染瘟疫的死人。他车翻了，差点被食尸鬼吃了，杰洛特救下了他，有一个选项是提醒他离尸体远一点。还有一个是告辞，当时赶任务就告辞了。然后后来做任务路上偶遇，满脸的疮···我问他我们见过吗，他说见过，他就是那个拉车的人，感染了瘟疫，想来沼泽寻死，但食尸鬼都躲着他——“满脸的疮”，记得猴痘么，这里其实就是天花。</p>\n<p data-pid=\"Sq8mMYzf\">与此对比的是，宗教给人带来的讽刺，广场：</p>\n<blockquote data-pid=\"k9p5ynzC\">\n<b>永恒之火祭司</b>：有一天，一个母亲发现身边的婴儿生命垂危。她绝望至极，找了个医官。幸好她的丈夫跟她说医官救不了孩子。他把婴儿接了下来，带到永恒之火的面前。孩子隔天马上痊愈，到今天还活得好好的，备受父母疼爱。</blockquote>\n<p data-pid=\"9ATE4zjk\">宗教利用恐吓和编造案例来传教，其实这个都是套路。</p>\n<p data-pid=\"hFGbjD-F\">18.战争下中世纪的欲望，人间百态，车速很快。</p>\n<p data-pid=\"dwsJaKfk\">诺维格瑞偏僻小巷：</p>\n<blockquote data-pid=\"zyTgninf\">\n<b>女巫：</b>听说你是最厉害的扒手？介意向我示范一下你的双手有多灵巧吗？<br><b>小偷：</b>宝贝，我正要去市集广场，想看就跟来吧。<br><b>女巫：</b>（尴尬）……我可不是这意思。本来至少想在被他们烧死之前找点乐子的。</blockquote>\n<p data-pid=\"IbYDxiMh\">诺维格瑞街边：</p>\n<blockquote data-pid=\"BVnQ1Rtc\">\n<b>小偷：</b>干嘛在街上乱晃？想勾引男人犯错是吧？<br><b>年轻女性：</b>我……我要去水井……<br><b>小偷：</b>要去给井水下毒，是吧？<br><b>年轻女性：</b>……</blockquote>\n<p data-pid=\"HE4fqoL4\">诺维格瑞桥边：</p>\n<blockquote data-pid=\"LkmWYqLY\">\n<b>妓女：</b>你身上有汗吗？<br><b>守卫：</b>干你什么事？<br><b>妓女：</b>把汗洒在我身上不是比较开心吗？</blockquote>\n<p data-pid=\"o2b_LR8u\">诺维格瑞小巷路边：</p>\n<blockquote data-pid=\"cWxAGkrL\">\n<b>镇民：</b>军官大人！今天休假吗？您好，大人，很高兴再次见到您。<br><b>女巫猎人：</b>老样子。<br><b>镇民：</b>没问题，如果您一直光顾的话，之后还可以打折呢。<br><b>女巫猎人：</b>很好，我就爱嫖怪胎。普通妓院才没有身上有三个奶子的货。</blockquote>\n<p data-pid=\"84CQbFgY\">诺维格瑞妓院附近：</p>\n<blockquote data-pid=\"LJ9EqZqA\">\n<b>小男孩A：</b>嘿，杰克，你最大，我问你喔。妓女到底是做什么的？<br><b>小男孩B：</b>嗯……我爸爸说她们会做妈妈不会做的事。<br><b>小男孩C：</b>嗯……我妈妈不喜欢洗衣服。所以那些先生都是去帕西弗罗拉洗衣服的吗？<br><b>小男孩B：</b>可能吧，我有一次偷看窗户，他们穿着内裤跳来跳去……<br><b>小男孩A：</b>那我爸为什么说帕西弗罗拉的妓女最脏，所以最棒？<br><b>小男孩C：</b>谁知道……大人好奇怪。</blockquote>\n<p data-pid=\"4esRtCpc\">19.资本家的秉性：压榨和白嫖，而且擅长站在道德高地指责和批评他人。</p>\n<p data-pid=\"4fQMT-JB\">诺维格瑞市场附近：</p>\n<blockquote data-pid=\"hgOmHVab\">\n<b>富有镇民：</b>听着，是碧翠斯，我爱上她了。帮我写首十四行诗好吗？你不愿意免费帮我写吗？但这是个无价的经验啊——可以让你加到公会资料上。<br><b>吟游诗人：</b>我可以免费给你这首对句——一毛不拔的铁公鸡，全都给我去死光吧！<br><b>富有镇民：</b>无礼！大家说的都没错，吟游诗人全是懒惰的贪心鬼！</blockquote>\n<p data-pid=\"PFRphIBY\">诺维格瑞价格稍贵的那家妓院：</p>\n<blockquote data-pid=\"HE8GKMRt\">\n<b>富有镇民A：</b>还跳舞咧，我的眼睛——不知道她（妓女）扭得这么尴尬可以拿到多少钱？<br><b>富有镇民B：</b>不管怎么样都比我们给员工的还多。而且他们的工作还很老实咧，才不会在别人面前扭屁股。<br><b>富有镇民A：</b>她再扭几下，胸部就要从裙子里蹦出来了。她一点道德感都没有吗？</blockquote>\n<p data-pid=\"0paz_VHP\">20.射箭的姿势，实际上这个应该是射法撒放问题，希里到过的史凯利格村庄：</p>\n<blockquote data-pid=\"EFOizaaJ\">（一个父亲在教孩子练习射箭）<br><b>史凯利杰男性</b>：不是那样子，把手肘抬高，不然箭会射歪。<br><b>小男孩</b>：我知道，但是手臂好痛。<br><b>史凯利杰男性</b>：很好，这代表你用对了肌肉。注意别让弦打到鼻子。<br><b>小男孩</b>：爸，我知道啦！<br>（一段时间过后，开始下雨。）<br><b>史凯利杰男性</b>：暴风雨要来了，我得叫你妈把刚晾的衣服收了，你继续练习。要是手指酸了，换个方式抓弦·····<br><b>小男孩</b>：不必，不会酸的。</blockquote>\n<p data-pid=\"7KTqihdV\">注意这个父亲说的“不是那样子，把手肘抬高，不然箭会射歪”和“注意别让弦打到鼻子”，前者是撒放错误的拉弓臂手肘下垂（主要表现为撒放后手肘的位置比瞄准时的位置更低，非常容易被射手本身所忽视），故而需要拉弦一侧的手把手肘抬高，不妨看下图。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ad729ceaf68c95893dbe1b4beea4bf0b_720w.jpg?source=b1748391?rss\" data-caption=\"虚线是对的，实线就是这个父亲批评的状态\" data-size=\"normal\" data-rawwidth=\"619\" data-rawheight=\"379\" data-watermark=\"watermark\" data-original-src=\"v2-ad729ceaf68c95893dbe1b4beea4bf0b\" data-watermark-src=\"v2-25282734db7db68c27dd1c043432383d\" data-private-watermark-src=\"v2-84721a17acf2126b79f17cba6e102329\" data-tags=\"porn\"></p>\n<p data-pid=\"n9WLb28x\">而后面说的“我得叫你妈把刚晾的衣服收了，你继续练习。要是手指酸了，换个方式抓弦”，我猜测是蒙古式换地中海，或者地中海换蒙古式——有骑射和步射经验的人，估计对此会心一笑，抓弦在游戏里面得到了复原。</p>\n<p data-pid=\"5D7giCZn\">笔者按：蒙古式射法，适合在移动的马背上使用，以短弓为主，通常用于骑射；地中海式射法，适合地面站立的弓手，因为上手简单，成为现代广泛使用的射箭方式。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-8c3e65ac5fb3639a7b4452eb4ef2d7f4_720w.jpg?source=b1748391?rss\" data-caption=\"这里可以看出抓弦方式的不同\" data-size=\"normal\" data-rawwidth=\"539\" data-rawheight=\"579\" data-watermark=\"watermark\" data-original-src=\"v2-8c3e65ac5fb3639a7b4452eb4ef2d7f4\" data-watermark-src=\"v2-b1345f373e8d4a8ee3ad44b41bdc344a\" data-private-watermark-src=\"v2-a0b46a889f58a451d2158304020ca9d2\" data-tags=\"porn\"></p>\n<p data-pid=\"BS7Rl8_I\"><br></p>\n<p data-pid=\"59l3lYHt\">未完待续，持续更新，不要慌。</p>\n<p><br></p>\n<p data-pid=\"A7es7fe0\">注意，本文《巫师3》的对话来自于知友 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/d7fe12f700f692a2595405bc8a9e8598\" data-hash=\"d7fe12f700f692a2595405bc8a9e8598\" data-hovercard=\"p$b$d7fe12f700f692a2595405bc8a9e8598\">@哆啦酱</a> 的耐心收集，虽然她已经不再上知乎，但是必须要提到，因为巫师3无法读取文件提取文本，其收集的精彩对话都是她游玩的时候一句一句搜集的，笔者在此篇实际上是对哆啦酱收集的对话做背景注解（就好像注疏一般，对原文错别字和细节做了修订，同时加入 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/08da7c2e8b45a9c56cbe23b0178d299b\" data-hash=\"08da7c2e8b45a9c56cbe23b0178d299b\" data-hovercard=\"p$b$08da7c2e8b45a9c56cbe23b0178d299b\">@Legal诗睿</a> 笔者个人的理解），看到这里觉得颇有意趣的人们，一定不要忘记关注这个有趣的女孩子。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/threeshi-rui?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Legal诗睿</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/31119815/answer/2503137916?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">401 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/534105843?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《巫师 3 ：狂猎》中有哪些隐藏较深的细节？</a><br><a href=\"http://www.zhihu.com/question/528209855?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《巫师 3：狂猎》游戏的哪些剧情设计的很有趣？</a><br>\n","link":"http://www.zhihu.com/question/31119815/answer/2503137916?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价动画《新秦时明月》第28集？","date":"2022-05-26 12:59:58","description":"\n<p data-pid=\"Xv9Vmc7t\">大家好，《新秦时明月》已经播出第二十八集。</p>\n<p data-pid=\"if05IJ3A\">首先回答一下留言区提到的，关于端木蓉眼睛的问题。这个问题的确需要优化，因为老模型的结构并不完全适用于新技术，所以需要对眼球四周的结构进行较大的改动。但考虑到改变眼睛结构会对人物的形象和气质产生比较明显的影响—因此我们时常把眼睛比喻为心灵的窗口，所以团队经过慎重的考虑，准备把对端木蓉眼睛的优化提升应用到秦时第六部的后续制作中，避免人物在同一部作品里前后差异过大所带来的割裂感。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-a2e1c5028f8bcdc2042e4b3188642489_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1090\" data-rawheight=\"614\" data-watermark=\"watermark\" data-original-src=\"v2-a2e1c5028f8bcdc2042e4b3188642489\" data-watermark-src=\"v2-a746389b58ff3ac0faa0046d2ce68f44\" data-private-watermark-src=\"v2-3f9e27ad95910fce67356cf0b80553af\"></p>\n<p data-pid=\"hN0Sa02N\"> 这一集的剧情，是围绕着三位主角在“龙喉”机关中的冒险展开的。老观众都知道，在“侠道”、“王道”试炼中，天明和少羽分别获得了对自己的未来非常重要的本命兵器，而“龙喉”则可谓是专门为月儿量身定制的机关。破解“龙喉”的剧情是月儿的高光时刻，画面和情节都以月儿为主。大家有没有发现这一集里的月儿，漂亮的镜头密集了很多？不仅有映着星辰大海的大眼睛，还有在燕国雪景中仰望夜空的倩影。可惜这么灵动可爱的小公主，很快就要被抓走了。</p>\n<p><img src=\"https://pica.zhimg.com/v2-ff29e9764f5063bef5966c38506bcb4a_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"709\" data-watermark=\"watermark\" data-original-src=\"v2-ff29e9764f5063bef5966c38506bcb4a\" data-watermark-src=\"v2-dd6134167a48347530b402160024ab27\" data-private-watermark-src=\"v2-b23560bfd624d7dea53f541ecd8c86f1\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-c4a121f7cfa0306aea40526c05eb9d13_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"711\" data-watermark=\"watermark\" data-original-src=\"v2-c4a121f7cfa0306aea40526c05eb9d13\" data-watermark-src=\"v2-964d7cb948a082ab5fa6efb706494156\" data-private-watermark-src=\"v2-22d5b88009a3242f6cd37654ab47a352\"></p>\n<p data-pid=\"IUwqTjsp\">虽说“龙喉”是月儿的高光时刻，但毕竟三位主角身陷机关，随时都有性命之虞。所以除了美感，危机感也是剧情中必不可少的要素。为了表现这种紧迫的危机感，我们对这一集里机关的声效进行了比较精细的处理。例如环绕着三位主角并不断迫近的刀片阵—我们希望刀片的声音要能够体现出它的锋利，但又不能显得过于嘈杂。因此对于这段声效，团队进行了反复的调整和尝试。调试完成后的声效其实已经达到了比较满意的效果，但做完混音后再听，却又觉得不够完美；所以我们又重新去再次修改、调试音效，在此非常感谢声效方的耐心和支持。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-7d2218b786e26cae5c4a856d9992c441_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"711\" data-watermark=\"watermark\" data-original-src=\"v2-7d2218b786e26cae5c4a856d9992c441\" data-watermark-src=\"v2-32fadf7881a7551e6976d6aea6002aac\" data-private-watermark-src=\"v2-65f9b1378bb054677f50679d5e19dcda\"></p>\n<p data-pid=\"g4vV0rQl\">值得注意的是，公输仇已经靠秘密武器“破土七郎”成功破解了班大师的“绝天锁”，开启了新世界的大门。在三位主角潜心破解“龙喉”之时，狡猾的公输老头也进入了墨家禁地，成为了这场大型探险活动的第四位玩家。</p>\n<p data-pid=\"q1p1LTan\">不要小看了公输老头，他不仅是个拥有高超开锁技术的工具人，还是个搞笑担当。这次整个攻陷墨家机关城的行动，如果没有了公输仇，恐怕会少了很多乐趣。进入禁地后的公输老头可以说是承包了这段剧情的笑点，没少被三个小家伙修理。让我们一起期待他们在禁地中的相遇吧！</p>\n<p><img src=\"https://pic2.zhimg.com/v2-fa8f37751e48cb2baa18142eee9554ce_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"719\" data-watermark=\"watermark\" data-original-src=\"v2-fa8f37751e48cb2baa18142eee9554ce\" data-watermark-src=\"v2-d7bfbd669b2a78f96cf3f5765374c5df\" data-private-watermark-src=\"v2-e5e682412481c5fd41c82751406496e1\"></p>\n<p data-pid=\"YVBG7AM9\">至于疫情形势，这周也有了更明显的好转。上海的商超、餐饮开始逐渐复苏，如果不出意外，玄机应该可以在6月做到复工复产。对于一直居家办公的我们来说，最直观的感受是可以叫到外卖了。封控了近3个月，终于可以叫叫外卖解解馋喽！久违的烧烤、汉堡、披萨和火锅，现在都可以送了。团队里很多年轻的同事大学吃食堂、毕业吃外卖，基本也不会准备烧菜所需的柴米油盐，当然很多人也不会烧菜，这段时间可是苦惨了。等到复工见面的那天，不知多少人瘦了，又有多少人胖了。</p>\n<p data-pid=\"2LFFOGo-\">看到了恢复常态的希望，还是很开心的。感谢大家一直以来的理解和支持，期待复工以后，可以更加自如地推进制作，让更多、更好的内容尽快与大家见面。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/xie-xiao-ming-98-74?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">薛小明</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/534703801/answer/2502927214?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">5 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/523022725?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价动画《新秦时明月》第18集？</a><br><a href=\"http://www.zhihu.com/question/526543239?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价动画《新秦时明月》第21集？</a><br>\n","link":"http://www.zhihu.com/question/534703801/answer/2502927214?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"电动汽车驱动电机的类型都有哪些？有哪些优缺点？","date":"2022-05-26 08:12:57","description":"\n<p data-pid=\"xdXlqyq3\">先说下啥叫电机。</p>\n<p data-pid=\"GGqL5A-y\">顾名思义就是<b>电能和机械能相互转换的机器。</b></p>\n<p data-pid=\"ZLGCLrVX\">可以将电能转化为机械能，驱动车辆。也可以将机械能转为电能，输送到蓄电池里面存储。</p>\n<p data-pid=\"jaqBe0HF\">电机的原理，就是<b>电磁装置，磁场对电流受力使得电机转动。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-7607ef463c18e2b0c91dca969290c953_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"436\" data-rawheight=\"342\" data-watermark=\"watermark\" data-original-src=\"v2-7607ef463c18e2b0c91dca969290c953\" data-watermark-src=\"v2-a142263c0baa175635978f97fb5325d0\" data-private-watermark-src=\"v2-10572d3552e2ad7bfcc823fab41660f6\"></p>\n<p data-pid=\"xTaI9_d1\">比如最常见，最早市场化的直流有刷电机。</p>\n<h3>直流有刷电机：</h3>\n<p data-pid=\"9WRMinXW\">由定子、转子、电刷、壳体组成，通过旋转的磁场获得转动力矩，由电能转化为动能。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-bda149c5e91ccfb181bdd3094b3ef5a4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"456\" data-rawheight=\"384\" data-watermark=\"watermark\" data-original-src=\"v2-bda149c5e91ccfb181bdd3094b3ef5a4\" data-watermark-src=\"v2-9072fa67d8b71fa80a98074c51e9a383\" data-private-watermark-src=\"v2-dd4ac2c6ef80bafeafc70e817fdd2ebb\"></p>\n<blockquote data-pid=\"VuZWQ_xF\">\n<a href=\"http://link.zhihu.com/?target=https%3A//baike.baidu.com/item/%25E6%259C%2589%25E5%2588%25B7%25E7%2594%25B5%25E6%259C%25BA/9206383\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">有刷电机</a>的<a href=\"http://link.zhihu.com/?target=https%3A//baike.baidu.com/item/%25E5%25AE%259A%25E5%25AD%2590/9205822\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">定子</a>上安装有固定的主磁极和<a href=\"http://link.zhihu.com/?target=https%3A//baike.baidu.com/item/%25E7%2594%25B5%25E5%2588%25B7/6018829\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">电刷</a>，<a href=\"http://link.zhihu.com/?target=https%3A//baike.baidu.com/item/%25E8%25BD%25AC%25E5%25AD%2590/1993958\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">转子</a>上安装有<a href=\"http://link.zhihu.com/?target=https%3A//baike.baidu.com/item/%25E7%2594%25B5%25E6%259E%25A2%25E7%25BB%2595%25E7%25BB%2584/4417217\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">电枢绕组</a>和<a href=\"http://link.zhihu.com/?target=https%3A//baike.baidu.com/item/%25E6%258D%25A2%25E5%2590%2591%25E5%2599%25A8/117883\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">换向器</a>。直流电源的电能通过电刷和换向器进入电枢绕组，产生<a href=\"http://link.zhihu.com/?target=https%3A//baike.baidu.com/item/%25E7%2594%25B5%25E6%259E%25A2%25E7%2594%25B5%25E6%25B5%2581/686491\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">电枢电流</a>，电枢电流产生的磁场与主磁场相互作用产生<a href=\"http://link.zhihu.com/?target=https%3A//baike.baidu.com/item/%25E7%2594%25B5%25E7%25A3%2581%25E8%25BD%25AC%25E7%259F%25A9/5556828\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">电磁转矩</a>，使电机旋转带动负载。</blockquote>\n<p data-pid=\"RNzxaScf\">直流有刷电动机是最早出现的电机，因为工艺成熟，所以成本较低。常用于启动（启动大扭矩）和调速要求较高（速度范围宽）的场合，电动自行车、电梯、城市电车和一些大型生产机械中。</p>\n<p data-pid=\"1eXNPN5s\">做了一个思维导图，可以更清晰知道市面上常见的电机分类。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-aee6198d4e2377be2fb5b2a9494253ad_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1015\" data-rawheight=\"552\" data-watermark=\"watermark\" data-original-src=\"v2-aee6198d4e2377be2fb5b2a9494253ad\" data-watermark-src=\"v2-e41b82097b29bf31fa458b59e5d48c8a\" data-private-watermark-src=\"v2-be8e1a56b6bf6501ffb64911991f8bf0\"></p>\n<p data-pid=\"5ZOx6oC3\">综合起来说，直流电动机的启动转矩大（低转速大扭矩），工艺成熟但是效率不高，且体积、质量较大，电刷发热难以解决，且因为有电刷和换向器，结构比较复杂，后期维护成本高。所以现在电机很多都是采用的无刷电机，也就是利用电流方向的切换来进行驱动。</p>\n<p data-pid=\"CnP7dGXv\">说回到电动汽车的驱动电机上面来。</p>\n<p data-pid=\"8PzQoYmr\">针对汽车的性能，其搭载的驱动电机要具有以下几点：</p>\n<p data-pid=\"P4EwqtWt\"><b>1、能频繁启动、加速、减速、制动，也就是要耐用，质量可靠。</b></p>\n<p data-pid=\"KrCngbJd\"><b>2、性能上要启动扭矩大，也就是低速扭矩大，高速时能恒功率、低转矩。</b></p>\n<p data-pid=\"nz_RSGUy\"><b>3、质量轻、体积小、集成度高，效能高。</b></p>\n<p data-pid=\"rXfl--YP\"><b>4、调速灵活，响应快，速度可调范围广，适应市区中低速工况和高速工况。</b></p>\n<p data-pid=\"oWYrPzhE\"><b>5、适应恶劣环境，如高湿度、低温、高温，颠簸的外界环境。</b></p>\n<p data-pid=\"76WqDv7q\">接下来说现在电动汽车驱动电机的异步电机。</p>\n<h3>异步电机：</h3>\n<p data-pid=\"uCNWuvc0\">异步电机分为三相异步电机和单相异步电机，三相异步电机运用较多。</p>\n<p data-pid=\"3z7-22Ty\">比如特斯拉的Model S，国产的Model 3等 ,奥迪 E-tron采用的驱动电机都是<b>三相异步电机</b>。</p>\n<p data-pid=\"MzM5V58C\">交流异步电机没有电刷，利用交流波形来改变电动机中的磁场来生成转矩。</p>\n<p data-pid=\"6DZEUr1m\">驱动逆变器将来自电池组的直流电转化为电机定子的三个交流电（DC转AC）。电流波形彼此异相120°，在定子中产生旋转的磁场，磁场在转子中感应出电流，感应电流产生与定子磁场相反的第二磁场。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-591e2f7dadb4ab19ce60d9757d3cfab6_720w.jpg?source=b1748391?rss\" data-caption=\"三相交流电在转子空间产生的磁场\" data-size=\"normal\" data-rawwidth=\"1049\" data-rawheight=\"436\" data-watermark=\"watermark\" data-original-src=\"v2-591e2f7dadb4ab19ce60d9757d3cfab6\" data-watermark-src=\"v2-f2a33ec551afacc80970f488a561a47f\" data-private-watermark-src=\"v2-7660b936701f0470e7710775bd76b7c4\"></p>\n<p data-pid=\"nQLE0l2t\">互相作用的两个磁场产生了电动机的转矩。这里电动机的速度是取决于驱动变频器能承受的交流电频率，而电动机的转矩则取决于交流电的幅度。</p>\n<p data-pid=\"e_1vdpQM\">以特斯拉为例，其驱动单元主要是三部分：<b>三相交流感应电机、单机变速箱、逆变器组成。</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-e636be34805802726af215cc0c03a5cb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1148\" data-rawheight=\"662\" data-watermark=\"watermark\" data-original-src=\"v2-e636be34805802726af215cc0c03a5cb\" data-watermark-src=\"v2-c66b3d914217d5f1aa39def3740315f5\" data-private-watermark-src=\"v2-692984a131a5f317deb1f36047e6e67a\"></p>\n<p data-pid=\"xptM05sx\">定子、转子容纳在铝制件内，和变速箱的一半共享，这种高度集成使得电机和变速箱的整体体积缩小，也减少了制造成本，但这种也带来了后期的维修困难（因为不好拆分）。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-16dd28d865b391aad6c604b0168354d4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"353\" data-watermark=\"watermark\" data-original-src=\"v2-16dd28d865b391aad6c604b0168354d4\" data-watermark-src=\"v2-fda9c76de5e6b817046691cefd8b3d9a\" data-private-watermark-src=\"v2-d3e94accd04cae09be87d6a8bf6daed3\"></p>\n<p data-pid=\"OH6QFVRQ\">接下来说下特斯拉的驱动电机内部的具体构造，这也是其核心技术之一，申请了相关专利。</p>\n<p data-pid=\"onsgxNwF\">定子是由一叠钢叠片组成。定子内的温度传感器藏在绕组内部。特斯拉把定子直接连接到变频器，不适用电动机电缆和连接器，这种做法有效降低了系统成本、故障率、辐射排放和总成质量。</p>\n<p data-pid=\"BY-3g0nX\">转子也是由一叠刚叠片组成，在圆周上均匀分布铜导体条，转子安装在中心轴上，中心轴的两端均有轴承支撑。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-307ab4b0375380fce03ad07ffbca61ba_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"399\" data-rawheight=\"406\" data-watermark=\"watermark\" data-original-src=\"v2-307ab4b0375380fce03ad07ffbca61ba\" data-watermark-src=\"v2-9e2c37e42e20b118bf7e747cec245b34\" data-private-watermark-src=\"v2-564a70fbeeb72a3cfcf1fa421053496b\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-d95ce76a2b132240f0d0f1ed6bc7904d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"400\" data-watermark=\"watermark\" data-original-src=\"v2-d95ce76a2b132240f0d0f1ed6bc7904d\" data-watermark-src=\"v2-018f751aa5bbbdecc5931265054b33ed\" data-private-watermark-src=\"v2-b9a1acde7a0d97cc48eb59eb7c393e43\"></p>\n<p data-pid=\"wuub6nLl\">驱动系统使用两通道霍尔效应传感器测量电机速度。传感器监视安装在转子轴上的编码器轮齿的旋转。驱动逆变器控制板使用编码器信号的频率来确定电机速度，并使用两个信号的相位来确定电机方向。</p>\n<p data-pid=\"KuDHPIHE\">异步电机的结构简单，后期维护方便。广泛应用于机床、水泵等工、农业生产机械和家用电器，如电扇、电冰箱、空调等。</p>\n<p data-pid=\"W-MXliTf\">国外的相当部分的电动、混动车型实际采用的都是异步电机。而国内则和国外相反，电动汽车上最常用的电机是同步电机，这个原因后面再说。</p>\n<h3>同步电机：</h3>\n<p data-pid=\"vNJ1Oejo\">国内的电动车之王比亚迪旗下多款新能源，都是用的同步电机。新老电动车势力，如吉利、奇瑞、小鹏、理想也是用的同步电机。</p>\n<p data-pid=\"EE5tNhDi\">同步电机根据产生磁场方式可以分为电励磁同步电机（转子绕组在外接电流下产生磁场）和永磁同步电机（转子直接加上永磁体）。</p>\n<p data-pid=\"Y1x1xKBQ\">以最常用的永磁同步电机举例。</p>\n<p data-pid=\"e6xCNZBp\"><b>永磁</b>指的是电机的转子上安装了永磁体，采用稀土材料（钕铁硼等）制造，在非高温环境下能够永久保持磁力。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-0d8866e36dd1390de1518f7f4bbb6908_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"630\" data-rawheight=\"393\" data-watermark=\"watermark\" data-original-src=\"v2-0d8866e36dd1390de1518f7f4bbb6908\" data-watermark-src=\"v2-5b40fb26a272a2a942a814201f43c0c4\" data-private-watermark-src=\"v2-139f041c597a8bdc482310f4c55f08d8\"></p>\n<p data-pid=\"fqGPaXNZ\">而<b>同步</b>则表示转子的转速和定子绕组产生的旋转磁场始终保持同步，意味着只要控制输入的电流频率就能控制电动机转子的转速。</p>\n<p data-pid=\"LgiqKUPe\">具体原理为定子的三相绕组中通过三相对称电流，将会产生定子旋转磁场。定子旋转磁场对于转子旋转在笼型绕组内产生电流，产生转子旋转磁场。定子旋转磁场和转子旋转磁场相互作用产生的异步转矩使得转子由静止到转动。启动完成后，转子绕组不在起作用，由永磁体和定子绕组产生的磁场相互作用产生驱动转矩。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-e25c5e828d349aba3b77d3ac9aeaad86_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"677\" data-rawheight=\"337\" data-watermark=\"watermark\" data-original-src=\"v2-e25c5e828d349aba3b77d3ac9aeaad86\" data-watermark-src=\"v2-28d2bae89abedd4f801a50fde6f2a4de\" data-private-watermark-src=\"v2-6a3201a896f8fafe2fc17ca2b2d08206\"></p>\n<p data-pid=\"yJ0DYRi-\">以宝马i3为例，其驱动的永磁同步电机只有49公斤，峰值功率为125KW(可持续30秒），最大转矩为250NM。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-9e76c4fa06778c8750edb18300f73fe1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"570\" data-rawheight=\"379\" data-watermark=\"watermark\" data-original-src=\"v2-9e76c4fa06778c8750edb18300f73fe1\" data-watermark-src=\"v2-a882cd615ed6e5ae9893326bb64ac6c8\" data-private-watermark-src=\"v2-bc832d07601d60bc82d3cf6833b0e778\"></p>\n<p data-pid=\"AZU_K2Mg\">永磁同步电动机对比同功率的异步电机来说，体积小，质量轻，输出转矩大，相应速度快，极限转速和制动性能比较好，而且永磁体替代了激磁线圈后也省了电能，所以现阶段国内大部分电动车型实际都采用的永磁同步电机（虽然这个细节基本很难在企业宣传中看到）。</p>\n<p data-pid=\"1Q0NHTou\">但永磁同步电机的缺点就是在高温，频繁震动等恶劣环境下容易消磁，如电机高温，环境高温，热量集聚的状况，如何在使用中避免磁性衰退，需要提升抗磁化的技术来应对。比如增设负载检测，调低最高负载，增加散热措施，避免频繁启动等。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-2d25b0053e1438f168b1b2f9462c7448_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"523\" data-rawheight=\"415\" data-watermark=\"watermark\" data-original-src=\"v2-2d25b0053e1438f168b1b2f9462c7448\" data-watermark-src=\"v2-87fbbb3b5c13c341f562e83cad9d1292\" data-private-watermark-src=\"v2-391d89bca27b47c567fb006b50e3a343\"></p>\n<p data-pid=\"cP9IrmqC\">宝马i3为避免电机内部温度过高，在运行模式下，温度上限为200℃，在定子绕组内设置了两个温度传感器（NTC型热敏电阻，通过测量电压、电流来计算温度）来监控，对于转子的温度则是通过热量模型进行预估。在高于180℃的时候，宝马就会降低电动机功率。</p>\n<p data-pid=\"q61hoEGg\">另外永磁同步电机一个缺点就是永磁材料的昂贵，经常占据到整体材料的50%成本以上。永磁材料需要稀土资源，而在国外稀土属于极为稀缺的资源，价高难得。但中国拥有全球70%以上的易开采稀土资源，所以这一个缺点在国内也不存在了。这也是国外车企宁愿上大体积，大重量的异步电机，也不愿意上永磁同步电机的主要原因之一了。</p>\n<p data-pid=\"b1fFU7Ur\">而三相异步电机则结构相对简单，后期维护成本低，但尺寸大，重量重，同体积同重量的异步电机的输出功率赶不上永磁同步电机，调速的范围也没有永磁同步电机大，但成本较低，且高速性能不差。</p>\n<p data-pid=\"EgaGf1Uf\">最后说下最近比较热门的开关磁阻电机，因为其结构简单，宽转速和宽转矩范围内高效运行，可四象限运行，响应速度快且能耐高温的特点，也被视为电动汽车电机的一个发展方向。</p>\n<h3>开关磁阻电机</h3>\n<p data-pid=\"nin_WuUj\">开关磁阻电机的定子双凸极上绕有集中绕组，转子凸极上没有绕组，根据磁路磁阻最小原理产生电磁转矩。当绕组通交流电后，会在气隙形成交流磁场，该磁场从定子流到转子后回流定子形成回路，该回路始终从最小磁阻的路径流过。</p>\n<p><img src=\"https://pica.zhimg.com/v2-a179d4ab0ab799e383c42323661c747e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"471\" data-rawheight=\"430\" data-watermark=\"watermark\" data-original-src=\"v2-a179d4ab0ab799e383c42323661c747e\" data-watermark-src=\"v2-548e0cb90870d6ac63306e00d6a82e92\" data-private-watermark-src=\"v2-eb98edabf6ddb8f04ac29cb95a43b196\"></p>\n<blockquote data-pid=\"hELRU8X5\">当各<u><a href=\"http://link.zhihu.com/?target=https%3A//www.hqchip.com/nav.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">电子</a></u>开关依次控制A、B、C、D四个定子绕组通电时，转子就会不断受电磁力的作用而持续转动。如果定子绕组按D-A-B-C的顺序通电，则转子就会逆着励磁顺序以逆时针方向连续旋转。反之，若按B-A-D-C的顺序通电，则电动汽车电机转子就会沿顺时针方向转动。</blockquote>\n<p data-pid=\"0gPcdBSe\">根据定子、转子凸极对数的配比，开关磁阻电机可以设计成不同的结构，如图所示。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-bbc2e7121561a728c7578d53777475cb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"642\" data-rawheight=\"271\" data-watermark=\"watermark\" data-original-src=\"v2-bbc2e7121561a728c7578d53777475cb\" data-watermark-src=\"v2-9bd38cc179c6757fa1110c17de658e52\" data-private-watermark-src=\"v2-2d0119038ecb21da367de8efc32f2442\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-40ef06622b45e656c2a486ea239541a7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"696\" data-rawheight=\"407\" data-watermark=\"watermark\" data-original-src=\"v2-40ef06622b45e656c2a486ea239541a7\" data-watermark-src=\"v2-6272045f366eec18983694ef404f7082\" data-private-watermark-src=\"v2-264c0bdd069f2cc27fd4c4141120b5a2\"></p>\n<p data-pid=\"N4eqgsJi\">但开关磁阻电机也有着很明显的缺点，那就是定子和转子都有齿槽，气隙磁场畸变严重，导致转矩波动大、噪声大、需要精密的位置检测器，另外也没有永磁体，需要额外耗电来产生磁力。现阶段开关磁阻电机还主要运用在木材、五金、玻璃、等行业生产加工中，并没有批量运用在电动汽车上。</p>\n<p><br></p>\n<p data-pid=\"Rad0cHaP\">（图片来源网络，侵删！）</p>\n<p><br></p>\n<p data-pid=\"n1i5kLZT\">参考资料：</p>\n<p data-pid=\"gQT-cj4z\">1、电动汽车电池、电机与电动控制/瑞佩尔主编  北京：化学工业出版社， 2022.1</p>\n<p data-pid=\"dg5L8GnZ\">2、“<a href=\"http://link.zhihu.com/?target=https%3A//www.elecfans.com/d/1553984.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">elecfans.com/d/1553984.</span><span class=\"invisible\">html</span><span class=\"ellipsis\"></span></a>”</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/532024680/answer/2500508875?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">3 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/528984332?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">电动汽车 驱动电机的拆解步骤总结?</a><br><a href=\"http://www.zhihu.com/question/519598995?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">电动汽车的电机主要有哪些性能指标?</a><br>\n","link":"http://www.zhihu.com/question/532024680/answer/2500508875?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012 年的、由 Node.j......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\r\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\r\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\r\n    return new Date(date.toLocaleString('en-US', { timeZone }))\r\n}\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\r\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\r\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\r\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: '2-digit',\r\n        hour12: false,\r\n        timeZone\r\n    })\r\n    return {\r\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\r\n        convert (date) {\r\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\r\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\r\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\r\n        }\r\n    }\r\n}\r\n\r\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\r\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\r\n    return converter.convert(new Date(secDate), tzName) - secDate\r\n}\r\n\r\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\r\ncmn-Hans-SG = 中文普通话-简体-新加坡\r\ncmn-Hant-TW = 中文普通话-繁体-台湾\r\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\r\ncmn = 中文普通话\r\n\r\nzh-Hans = 中文-简体\r\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\r\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\r\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\r\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\r\n}\r\n\r\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long'\r\n}\r\nconst now = new Date()\r\n\r\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\r\n\r\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\r\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\r\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\r\n\r\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\r\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\r\n\r\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\r\n\r\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\r\n\r\nzhCNFormatter.format(now) // 2021年10月13日星期三\r\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\r\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\r\n\r\njaFormatter.format(now) // 2021年10月13日水曜日\r\njaAltFormatter.format(now) // 令和3年10月13日水曜日\r\n\r\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\r\n// {locale: 'zh-CN', calendar: 'gregory', …}\r\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\r\n     // 基于一个固定日期计算，这里选择 1970.1.1\r\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\r\n    const base = new Date(1970, 0, 1).getTime()\r\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\r\n    return Array.from({ length: 7 }, (_, day) =&gt; (\r\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\r\n    ))\r\n}\r\n\r\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\r\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\r\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    second: 'numeric',\r\n}).formatToParts(new Date())\r\n// [\r\n//     { type: 'year', value: '2021' },\r\n//     { type: 'literal', value: '年' },\r\n//     { type: 'month', value: '10' },\r\n//     { type: 'literal', value: '月' },\r\n//     { type: 'day', value: '13' },\r\n//     { type: 'literal', value: '日' },\r\n//     { type: 'weekday', value: '星期三' },\r\n//     { type: 'literal', value: ' ' },\r\n//     { type: 'dayPeriod', value: '上午' },\r\n//     { type: 'hour', value: '1' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'minute', value: '00' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'second', value: '00' }\r\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\r\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\r\n}\r\n\r\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\r\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\r\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\r\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\r\n  timeZone: 'America/Los_Angeles',\r\n  year: 1995,\r\n  month: 12,\r\n  day: 7,\r\n  hour: 3,\r\n  minute: 24,\r\n  second: 30,\r\n  millisecond: 0,\r\n  microsecond: 3,\r\n  nanosecond: 500,\r\n  calendar: 'iso8601'\r\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<p>2020 年 11 月 11 日，苹果在本年度最后一次 Apple Events 上发布了全新的 ARM 芯片 M1、以及三款搭载了 M1 的 Mac：MacBook Air、MacBook Pro 13‘ 和 Mac Mini。在 WWDC 2020 库克宣布 Apple Silicon 后，这次 Apple Events 再一次掀起了热潮，不少 KOL 都把 M1 奉若神明，不少人也不以为然。本文通过 8 个问题来简单聊聊 M1 和 ARM Mac。M1 芯片的性能如何？本文写就时，搭载 M1 的 Mac 尚未开始发货，我们能看到的只有 GeekBench 上流出的跑分。所以，让我们先从跑分开始看起？...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote>\n<p>周六不放假休息，还在这加班搞 CTF？</p>\n</blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/86535/11/24318/75037/622032a8E4f94d4ae/89703ccc122cf4e0.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"从 Google Analytics 的统计代码说起 —— 谈谈 script 标签的 async 和 defer 属性","date":"2020-10-13 09:25:00","description":"\n<p>之前我在「天下武功，唯快不破 —— 我是这样优化博客的」一文中提到「对于大部分浏览器来说，确保 JS 异步加载和执行的做法其实是在操作 DOM 动态插入 &lt;script async&gt;」，但是并没有给出详细原因。这一次我以 Google Analytics 的统计代码为引子，详细讲讲 &lt;script&gt; 的 async 和 defer 属性、以及它们背后的故事。拆开 Google Analytic 的统计代码现在 Google 推出了 Google Tag Manager，通过......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/80291/2/16552/19311/622032b3Eb300c2aa/66748fc8124a01c5.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/script-async-defer/\">https://blog.skk.moe/post/script-async-defer/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/script-async-defer/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"\n<p>WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将其表述为 \"An API for accessing Public Key Credentials\"，即“一个用于访问公钥凭证的 API”。WebAuthn 很强大，强大到被认为是 Web 身份认证的未来（当然，也很复杂）。你有想过通过指纹或者面部识别来登录网站吗？WebAuthn 就能在保证安全和隐私的情况下让这样的想法成为现实。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\" alt=\"通过 WebAuthn 调起 Windows Hello 登录网站\" width=\"1912\" height=\"966\" class=\"aligncenter size-full wp-image-2215\"></a>\n<p>你可以在<a href=\"https://webauthn.io/\" rel=\"noopener\">这个网站</a>自行体验 WebAuthn。或者，如果你有一个使用 WordPress 的站点，可以尝试一下 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WP-WebAuthn</a> 这款插件，它可以为你的站点启用 WebAuthn 登录。这是我为了写这篇文章而练手开发的插件，本文中的部分示例代码也来自这款插件。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"wp-webauthn\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/wp-webauthn\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>WebAuthn Level 1 标准已在 2019 年 3 月成为 W3C 推荐标准，而 Level 2 标准目前也已进入编辑草案阶段，但互联网上有关它的中文资料却仍然很少，国内也鲜有网站支持这一新标准。于是，在抱着各种英文资料和标准啃了几天以后，我折腾出了这篇文章。</p>\n<p>在这篇文章里，我将会从最基本的概念开始，逐渐深入 WebAuthn，直到解码公钥等深层细节。这可能是你能找到的有关 WebAuthn 最详细最基础的中文文章，也很可能是最长的。在开始之前，<strong>我强烈建议你打开菜单中的文章目录浏览一遍，以对这篇文章涉及的内容有所了解。</strong>如果你只是想了解如何简单地在你的项目中添加对 WebAuthn 的支持，那么“<a href=\"https://flyhigher.top/#webauthn-overview\">浅谈 WebAuthn</a>”部分就是你要找的；如果你想了解更多关于 WebAuthn 的底层细节，那么你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分。</p>\n<p>由于在本文写作时 WebAuthn Level 2 规范尚未定稿，<strong>这篇文章我们将只专注于 Level 1 规范。</strong></p>\n<p>这篇文章最后更新于 2020.9 ，在你读到这篇文章时，部分事实可能已经发生改变，请注意判断。</p>\n<p><strong>更新日志：</strong></p>\n<ul>\n<li>2021.1.16 添加 Chrome 开发工具信息</li>\n<li>2020.9.17 更新 iOS/iPad OS 兼容性信息</li>\n<li>2020.5.20 添加部分无用户名认证的平台兼容性内容</li>\n<li>2020.5.15 添加部分 <code>extensions</code> 相关内容与链接；添加全局凭证 ID 唯一内容；添加凭证 ID 查找相关内容；添加“从 U2F 认证迁移”一节</li>\n<li>2020.4.13 更新与修正 <code>userVerification</code> 相关内容；添加部分 Firefox 相关内容</li>\n<li>2020.3.23 文章发布</li>\n</ul>\n<p>那么让我们开始吧。<span></span></p>\n<h1>浅谈 WebAuthn</h1>\n<p>在这个部分里，我们将会从基础概念开始，了解有关 WebAuthn 和密码学的一些基础知识，并最终使用第三方库实现基础的 WebAuthn 认证。如果你已经对这些内容有所了解了，可以跳到“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”继续阅读。</p>\n<h2>为什么使用 WebAuthn</h2>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\" alt=\"钓鱼邮件\" width=\"709\" height=\"693\" class=\"aligncenter size-full wp-image-2162\"></a>\n<p>相信你一定收到过类似的邮件吧？只要你点进那个最显眼的链接，你就会进入一个设置好的圈套——钓鱼网站。如果你一时糊涂在这类网站上填写了你的账号和密码，bingo，你的账号就不再是你的账号了。</p>\n<p>不过，就算你警惕心再强，也无法避免密码泄露事件。Twitter, Facebook 等都爆出过明文密码泄露事件，证明再大的公司或组织也无法避免密码泄露问题。雪上加霜的是，很大一部分用户都非常喜欢使用重复密码，这就导致一次密码泄露会牵连很多网站，用户的账户安全性完全无法得到保证。</p>\n<p>那么，有什么办法解决这些问题吗？<strong>彻底解决的方法只有一个，那就是抛弃密码。</strong>可是没有密码还怎么验证用户身份呢？这就是 WebAuthn 的用武之地了。</p>\n<p><del>没有密码的好时代，来临力！</del></p>\n<h2>什么是 WebAuthn</h2>\n<p>那么到底什么是 WebAuthn 呢？如开头所说，WebAuthn 是“一个用于访问公钥凭证的 API”，网站可以通过这个 API 进行一些高安全性的身份验证。WebAuthn 一个最常见的应用就是用于网站登录时的 2FA（双重因素验证）甚至是无密码登录。通过网页调用 WebAuthn，在不同平台下，<strong>我们可以实现通过 USB Key、指纹、面部甚至虹膜扫描来认证身份，同时确保安全和隐私。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\" alt=\"WebAuthn 可使用的各种身份认证方式\" width=\"1294\" height=\"566\" class=\"aligncenter size-full wp-image-2213\"></a>\n<p>WebAuthn 标准是 FIDO2 标准的一部分，而 FIDO2 则是由 FIDO 联盟和 W3C 共同推出的 U2F（现称作 FIDO1）的后继标准，旨在增强网络认证的安全性。</p>\n<blockquote><p>你可能了解过 U2F，那么 U2F 和 FIDO2 的区别在哪里呢？从名字上可以看出，U2F，即“通用第二因素协议”，是专注于作为密码后的第二道屏障的，而 FIDO2 增加了单因素认证功能，这意味着使用 FIDO2 可以完全替代密码，真正实现无密码登录。</p></blockquote>\n<p>FIDO2 标准主要包括四个部分，其一是用于网站和访客设备交互的 WebAuthn，而 Client to Authenticator Protocol 2（CTAP2，客户端-认证器协议）作为 WebAuthn 的补充，则是用于访客的设备和认证器交互的协议。标准的其他两个部分则是 U2F 和 UAF 规范。在这篇文章中，我们只关心 WebAuthn，不会涉及 CTAP, U2F 和 UAF 的相关知识。如果你对这段话中的一些概念不了解，不要紧张，接下来我们就来谈谈 WebAuthn 中一些常用的术语和概念。</p>\n<blockquote><p>WebAuthn 只能在安全上下文中使用，也就是说，页面需要使用 HTTPS 协议或是处于 <code>localhost</code> 中。</p></blockquote>\n<h2>常用术语和概念</h2>\n<p>WebAuthn 中有许多不常碰到的术语，不过我只会在这里介绍一些常用的术语和概念——如果你只是希望做出一个简单的实现，那么了解这一段中的一些概念就足够了。同时，由于我实在没能找到一部分术语的通用翻译，有一些术语我按着自己的理解尽可能地翻译了，有任何问题请告诉我。</p>\n<p>在一个完整的 WebAuthn 认证流程中，通常有这么几个角色：</p>\n<ul>\n<li>Relying Party 依赖方 (RP) ：指服务提供方，即网站</li>\n<li>User 用户：正准备登录的你</li>\n<li>Authenticator 认证器：通常指 USB Key 或是设备内置的指纹扫描器、虹膜扫描器、面部识别装置等，正是它们在使用流程中代替了密码甚至是用户名</li>\n<li>User Agent 用户代理：通常指浏览器或系统，负责与认证器交互</li>\n</ul>\n<p>认证过程通常分为两种：</p>\n<ul>\n<li>Registration Ceremony 注册仪式：用户向账户上添加认证器</li>\n<li>Authentication Ceremony 验证仪式：用户通过已注册的认证器验证身份</li>\n</ul>\n<p>同时，认证过程中还会产生这些内容：</p>\n<ul>\n<li>Challenge 挑战：通常是一串随机字符串</li>\n<li>Public Key Credential 公钥凭证：由认证器产生的凭证，在技术上代替了密码</li>\n<li>Attestation 证明：注册时认证器产生的验证数据</li>\n<li>Assertion 断言：验证时认证器产生的验证数据</li>\n</ul>\n<blockquote><p><strong>请注意区分证明 (Attestation) 和断言 (Assertion)</strong>，特别是在这两个单词有些相似的情况下。在 WebAuthn 中，它们是不同过程中的类似概念，但并不相同。</p></blockquote>\n<p>如果你对于这些内容不是很理解，没有关系，我们会在“<a href=\"https://flyhigher.top/#how-to-webauthn\">使用流程</a>”一节中将这些概念放到实际情况中解释，你只要先区分这些概念即可。</p>\n<h2>安全性的基础</h2>\n<p>WebAuthn 为什么安全？和 HTTPS 一样，WebAuthn 使用非对称加密的思路来保证安全性，但侧重点又有所不同。要理解 WebAuthn 的认证流程，我们必须对非对称加密有所了解。如果你对非对称加密比较熟悉了，就直接跳到下一段吧。</p>\n<p>WebAuthn 的核心在于“认证”，即保证产生了凭证的认证器是用户的认证器，而不是第三方在伪造凭证。但为什么要使用非对称加密呢？我们可以先来看看对称加密。</p>\n<p>让我们假设小明和小红相互写信，见不到对方。这天小红突然想，给自己写信的人是不是真的小明呢？于是小红要求对方向小红证明自己是小明。怎么证明呢？他们商量出来这么一套方案：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明和小红商量一个统一的密码和密钥</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明用提前和小红商量好的密码和密钥加密文本后发回给小红</li>\n<li>小红使用相同的密码和密钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和密钥</li>\n</ol>\n<blockquote><p>在密码学中，我们通常把“加密算法”称为密码 (code)，和通常登录时用的密码 (password) 并非同一个概念。</p></blockquote>\n<p>在这种情况下，<strong>只要密钥不泄露</strong>，即拥有正确密钥的只有小明和小红，那么小红就能确定对方一定是小明。但这样的问题也很明显，如果小明和小红不能见面，那么他们就必须先以明文交换密码——<strong>在这个过程中一旦有人窃取到了密码，这个认证就无效了。</strong></p>\n<p>这时我们就需要使用<strong>非对称加密</strong>来拯救破碎的信任了。非对称加密的基础是一对密钥，也就是公钥和私钥，它们是互相关联但（几乎）无法互相推导的。在非对称加密的过程中，选择相同的密码后，使用私钥加密明文得到的密文只能由对应的公钥解密，无法使用私钥解密，同时这个过程反过来也是成立的。</p>\n<blockquote><p>本文的核心并不是非对称加密算法，因此不会详述非对称加密在数学上的证明，若有兴趣可以自行了解。</p></blockquote>\n<p>这就完美解决密钥泄露的问题了。让我们回过头来看之前的例子。现在小明和小红决定使用非对称加密来证明身份，过程如下：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明提前生成一对公私钥，将公钥发送给小红，私钥自己保管，同时商量好统一的密码</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明使用商量好的密码和自己的私钥加密文本，发送给小红</li>\n<li>小红使用相同的密码和小明的公钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和私钥</li>\n</ol>\n<p>在这种情况下，<strong>只要私钥不泄露</strong>，那么小红解密得到的文本和之前发送的一致，那么就可以证明收到的密文一定是由小明加密后发送过来的。而在整个过程中，私钥都没有离开过小明，更没有经过传输，也就几乎没有泄露的可能了。这时，小红终于可以确定对面和她通信的人的确是小明了。</p>\n<p>题外话：HTTPS 虽然也应用了非对称加密，但 HTTPS 更侧重于“加密”而非“认证”，因此思路上会有些许差异。要了解关于 HTTPS 和非对称加密的更多信息，你可以阅读我之前写的这篇文章：</p>\n<p></p>\n<div class=\"mdx-post-cot\" data-mdxposturl=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdx-post-wait-out-c2\"><div class=\"mdx-post-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<span></span>\n<h2>使用流程</h2>\n<p>了解了非对称加密，我们就可以来看看 WebAuthn 的认证流程了。</p>\n<p>和普通的密码一样，<strong>使用 WebAuthn 分为两个部分，注册和验证。</strong>注册仪式会在依赖方中将认证器的一些信息和用户建立关联；而验证仪式则是验证这些信息以登确保是用户本人在登录。根据上一节的思路，我们可以知道，注册仪式就是认证器生成一对公私钥，然后将公钥交给依赖方；而验证仪式是依赖方发送给认证器一段文本，要求认证器用自己的私钥加密后发回以验证。</p>\n<p>在实际情况中，WebAuthn 是基于<strong>挑战-应答模型</strong>工作的。要更好地理解，我们直接来看具体流程。先来看看注册的流程。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\" alt=\"WebAuthn 注册流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2224\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的注册请求</li>\n<li>依赖方向浏览器发送挑战、依赖方信息和用户信息</li>\n<li>浏览器向认证器发送挑战、依赖方信息、用户信息和客户端信息以请求创建公钥凭证</li>\n<li>认证器请求用户动作，随后创建一对公私钥，并使用私钥签名挑战（即证明），和公钥一起交给浏览器</li>\n<li>浏览器将签名后的挑战和公钥发送给依赖方</li>\n<li>依赖方用公钥验证挑战是否与发送的一致，如果成功则将公钥与用户绑定，注册完成</li>\n</ol>\n<p>我也做了一个交互式的 Demo，你可以对照流程来更好地理解。</p>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\">开始注册</button> <span></span></p>\n<div></div>\n<blockquote><p>注意，这个 Demo 和下方的 Demo 都只是一个本地模拟的简单示例，没有任何数据会被上传，当然也不会对数据进行验证。</p></blockquote>\n<p>而之后的验证流程如下：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\" alt=\"WebAuthn 验证流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2226\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的验证请求</li>\n<li>依赖方向浏览器发送挑战</li>\n<li>浏览器向认证器发送挑战、依赖方信息和客户端信息以请求获取公钥凭证</li>\n<li>认证器请求用户动作，随后通过依赖方信息找到对应私钥，并使用私钥签名挑战（即断言），交给浏览器</li>\n<li>浏览器将签名后的挑战发送给依赖方</li>\n<li>依赖方用之前存储的公钥验证挑战是否与发送的一致，一致则验证成功</li>\n</ol>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\" disabled>开始验证</button> <span>在上方注册后才能验证</span></p>\n<div></div>\n<p>可以看到，WebAuthn 不仅在理论上是安全的，同时<strong>在整个过程中并没有隐私数据被传输</strong>——用户信息实际上只包含用户名和用户 ID。因此我们完全可以说 WebAuthn 是安全且私密的。</p>\n<blockquote><p>为了避免用户在不同依赖方之间被追踪，认证器通常会为每个依赖方和用户的组合都创建一对公私钥。不过，由于认证器的存储空间有限，认证器通常不会存储每一个私钥，而是会通过各类信息和烧录在认证器内的主密钥“算”出对应的私钥以实现无限对公私钥。具体算法根据不同厂商会有所不同。对于 Yubikey，你可以在<a href=\"https://developers.yubico.com/U2F/Protocol_details/Key_generation.html\">这里</a>了解更多。</p></blockquote>\n<blockquote><p>如果依赖方需要，用户同意后，发送给依赖方的公钥凭证中可以包含用于辨认认证器型号的信息，不过这对隐私的影响微乎其微。</p></blockquote>\n<h2>浏览器接口</h2>\n<p>要使用 WebAuthn，我们必须要依靠浏览器作为媒介和验证器进行交互，而这就需要浏览器对于 WebAuthn 的支持了。绝大多数新版本的现代浏览器都为 WebAuthn 提供了统一的接口，而在这一段中我们会了解如何使用相关的接口。但是在开始之前，我们可以先来看看浏览器的支持程度（2020.9）。</p>\n<div class=\"mdui-table-fluid\"><table class=\"mdui-table\">\n<thead><tr>\n<th>浏览器</th>\n<th>支持情况</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>桌面端 Chrome</td>\n<td>67+</td>\n</tr>\n<tr>\n<td>移动端 Chrome</td>\n<td>67+<sup>[1]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Firefox</td>\n<td>60+</td>\n</tr>\n<tr>\n<td>移动端 Firefox</td>\n<td>不支持<sup>[2]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Edge</td>\n<td>18+</td>\n</tr>\n<tr>\n<td>移动端 Edge</td>\n<td>不支持<sup>[3]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Safari</td>\n<td>13+</td>\n</tr>\n<tr>\n<td>移动端 Safari</td>\n<td>13.3+<sup>[4]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Opera</td>\n<td>54+</td>\n</tr>\n<tr>\n<td>移动端 Opera</td>\n<td>不支持</td>\n</tr>\n</tbody>\n</table></div>\n<p><sup>[1]</sup> 受平台限制，Chrome 在 iOS 平台上不支持 WebAuthn，在 Android 平台上支持大部分 WebAuthn 功能，但仍不支持部分特性（如 <code>userVerification</code>）。<br><sup>[2]</sup> 移动端 Firefox 80 以下的版本支持 WebAuthn 但似乎会忽略 <code>authenticatorAttachment</code> 等一部分参数，同时移动端 Firefox Beta 80 以下的版本支持 WebAuthn 但无法成功调用。自 80 版本起移动端 Firefox 暂时取消了对 WebAuthn 的支持（可能是 Bug）。<br><sup>[3]</sup> 移动端 Edge 似乎支持 WebAuthn 但无法成功调用。<br><sup>[4]</sup> Safari iOS/iPad OS 13 仅支持外部认证器，无法调用 Touch ID 或 Face ID；自 iOS/iPad OS 14 起 Safari 已支持全功能 WebAuthn，可以调用 Touch ID/Face ID</p>\n<p>当然，一众国产浏览器，包括 Samsung Browser 和 Yandex Browser，目前都不支持 WebAuthn。此外，由于 WebAuthn 涉及外部验证器和 TPM 可信平台模块等，用户的操作系统也会对 WebAuthn 的可用性造成影响。以下是一些需要注意的信息：</p>\n<ul>\n<li>Windows 10 1903 以下版本仅 Edge 能提供完整支持，其他浏览器只能使用 USB Key 等外部认证器；1903+ 中所有浏览器都可以通过 Windows Hello 带来完整的 WebAuthn 支持</li>\n<li>Android 需要安装并开启 Google 服务</li>\n<li>iOS/iPad OS 13.3 以下的版本不支持 WebAuthn，iOS/iPad OS 14 以下的版本支持有限（参考上文），iOS/iPad OS 14 开始 Safari 已支持全功能 WebAuthn（功能完整度甚至超过了 Android）</li>\n</ul>\n<p>可以看出，WebAuthn 的发展之路仍然很漫长，但好在桌面端对它的支持已经比较完善了，在一些情况下我们完全有理由使用它。</p>\n<hr>\n<p>来看看浏览器提供了怎么样的接口吧。要使用 WebAuthn，我们可以使用 <code>navigator.credentials.create()</code> 请求认证器生成公钥凭证和 <code>navigator.credentials.get()</code> 请求获取公钥凭证。</p>\n<blockquote><p>你或许已经对 Credential Management API 有所了解了。通过这些 API，我们还可以实现一些有趣的特性，不过这值得另开一篇文章来讲了。</p></blockquote>\n<p>对于一个基础的实现，<code>navigator.credentials.create()</code> 需要传入的参数如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        challenge,\r\n        rp: {\r\n            id,\r\n            name\r\n        },\r\n        user: {\r\n            id,\r\n            name,\r\n            displayName\r\n        },\r\n        pubKeyCredParams: [\r\n            {\r\n                type: \"public-key\",\r\n                alg\r\n            }\r\n        ],\r\n        authenticatorSelection: {\r\n            authenticatorAttachment,\r\n            userVerification\r\n        },\r\n        excludeCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>在 <code>navigator.credentials.create()</code> 方法中，我们必须传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值。这指明了我们需要创建公钥凭证，而非普通的密码凭证。然后，在 <code>publicKey</code> 对象中设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rp: Object</code>：依赖方信息，其中有一项为必须：\n<ul>\n<li>\n<code>rp.id: String</code>：（可选）依赖方 ID，必须为当前域名或为当前域名的子集的域名（不是子域名）。如域名为 <code>test.123.example.com</code>，则依赖方 ID 可以是 <code>test.123.example.com</code>, <code>123.example.com</code> 或 <code>example.com</code>。不指定则默认使用当前域名</li>\n<li>\n<code>rp.name: String</code>：依赖方名称，用于方便用户辨认</li>\n</ul>\n</li>\n<li>\n<code>user: Object</code>：用户信息，其中有三项为必须：\n<ul>\n<li>\n<code>user.id: Uint8Array</code>：转换为 <code>Uint8Array</code> 的字符串。<strong>出于安全考量，这应尽可能不与任何用户信息相关联，如不要包含用户名、用户邮箱等</strong>\n</li>\n<li>\n<code>user.name: String</code>：登录用户名</li>\n<li>\n<code>user.dispalyName: String</code>：用于显示的用户名称，显示与否的具体行为取决于浏览器</li>\n</ul>\n</li>\n<li>\n<code>pubKeyCredParams: Array</code>：一个算法列表，指明依赖方接受哪些签名算法。列表的每一项都是一个对象，拥有两个属性：\n<ul>\n<li>\n<code>pubKeyCredParams[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>pubKeyCredParams[].alg: Number</code>：一个负整数，用于标明算法。具体算法对应的数字可以在 <a href=\"https://www.iana.org/assignments/cose/cose.xhtml#algorithms\">COSE</a> 找到</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection: Object</code>：（可选）用于过滤正确的认证器，这里介绍常用的一个参数：\n<ul>\n<li>\n<code>authenticatorSelection.authenticatorAttachment: String</code>：（可选）指定要求的认证器类型。如果没有满足要求的认证器，认证可能会失败。该参数可以为 <code>null</code>（表示接受所有类型的认证器）或是以下两个值之一：\n<ul>\n<li>\n<code>platform</code>：表示仅接受平台内置的、无法移除的认证器，如手机的指纹识别设备</li>\n<li>\n<code>cross-platform</code>：表示仅接受外部认证器，如 USB Key</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection.userVerification: String</code>：（可选）指定认证器是否需要验证“用户为本人 (User Verified, UV)”，否则只须“用户在场 (User Present, UP)”。具体验证过程取决于认证器（不同认证器的认证方法不同，也有认证器不支持用户验证），而对验证结果的处理情况则取决于依赖方。该参数可以为以下三个值之一：\n<ul>\n<li>\n<code>required</code>：依赖方要求用户验证</li>\n<li>\n<code>preferred</code>：（默认）依赖方希望有用户验证，但也接受用户在场的结果</li>\n<li>\n<code>discouraged</code>：依赖方不关心用户验证。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>excludeCredentials: Array</code>：（可选）用于标识要排除的凭证，可以避免同一个用户多次注册同一个认证器。如果用户试图注册相同的认证器，用户代理会抛出 <code>InvalidStateError</code> 错误。数组中的每一项都是一个公钥凭证对象，包含以下属性：\n<ul>\n<li>\n<code>excludeCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>excludeCredentials[].id: Uint8Array</code>：要排除的凭证 ID</li>\n<li>\n<code>excludeCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，超时后将强制终止 <code>create()</code> 并抛出错误。若不设置，将使用用户代理的默认值；若太大或太小，则使用最接近的用户代理默认值范围中的值。推荐值为 5000-120000</li>\n</ul>\n<blockquote><p>对于 <code>pubKeyCredParams</code>，通常我们只需添加 ES256 (alg: -7) 算法即可兼容大部分外部认证器，此外，再添加 RS256 (alg: -257) 算法即可兼容大部分平台内置认证器（如 Windows Hello）。当然，前端添加算法之后，后端也需要相应的算法支持。</p></blockquote>\n<blockquote><p>对于 <code>userVerification</code>，由于默认值 \"preferred\" 并不能很好地被所有设备支持，因此无论在 <code>create()</code> 中还是 <code>get()</code> 中不指定该参数都会在 Chrome 中触发一条警告。具体请参阅<a href=\"https://chromium.googlesource.com/chromium/src/+/master/content/browser/webauth/uv_preferred.md\">这个页面</a>。</p></blockquote>\n<p>调用 <code>create()</code> 之后，我们就可以拿到一个 <code>Promise</code>，并可以在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>create()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAttestationResponse {\r\n        attestationObject: ArrayBuffer(390) {},\r\n        clientDataJSON: ArrayBuffer(121) {}\r\n    },\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\",\r\n    type: \"public-key\"\r\n}</pre>\n<p>其中有：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：<code>AuthenticatorAttestationResponse</code> 对象，是 <code>PublicKeyCredential</code> 的主要部分，包含以下两个内容：\n<ul>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n<li>\n<code>response.attestationObject: ArrayBuffer</code>：CBOR 编码的认证器数据，包含凭证公钥、凭证 ID、签名（如果有）、签名计数等信息</li>\n</ul>\n</li>\n</ul>\n<p>然后将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串，我们就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证与注册了。具体怎么操作，我们会在下文详细讨论。当然，别忘了 <code>catch()</code> 注册过程中抛出的任何错误。</p>\n<blockquote><p>你可能会认为在所有情况下，注册时认证器都会对挑战进行签名。实际上在大部分情况下（同时也是默认情况），<strong>注册时认证器并不会对挑战进行签名</strong>，<code>attestationObject</code> 并不会包含签名后的挑战。只有依赖方明确要求证明且用户同意（部分浏览器要求）后认证器才会对挑战进行签名（具体实现据情况会有所不同）。对此，<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion#Attestation\">MDN 解释道</a>“大部分情况下，用户注册公钥时我们会使用「初次使用时信任模型」(TOFU) ，此时验证公钥是没有必要的。”要了解更多关于证明的内容，请参阅“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>而对于 <code>navigator.credentials.get()</code>，我们可以传入如下的参数：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.get({\r\n    publicKey: {\r\n        challenge,\r\n        rpId,\r\n        userVerification,\r\n        allowCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>和 <code>create()</code> 一样，对于 <code>get()</code> 我们需要传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值，指明我们需要获取的是公钥凭证而非普通的密码凭证。在 <code>publicKey</code> 对象中我们可以设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rpID: String</code>：（可选）依赖方 ID，需要和注册认证器时的一致。规则和上述的 <code>rp.id</code> 一致，不指定默认使用当前域名</li>\n<li>\n<code>userVerification: String</code>：和上文一样，只是需要注意它这次不在 <code>authenticatorSelection</code> 中了</li>\n<li>\n<code>allowCredentials: Array</code>：（可选）用于标识允许的凭证 ID，使用户代理找到正确的认证器。只有符合这个列表中凭证 ID 的凭证才能被成功返回。数组中的每一项都是对象，包含以下属性：\n<ul>\n<li>\n<code>allowCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>allowCredentials[].id: Uint8Array</code>：允许的凭证 ID</li>\n<li>\n<code>allowCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，和上面的一样，推荐值为 5000-120000</li>\n</ul>\n<p>嗯，要传入的参数少多了。之后，和 <code>create()</code> 一样，调用 <code>get()</code> 之后，我们就可以拿到一个 <code>Promise</code> 并在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>get()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAssertionResponse {\r\n        authenticatorData: ArrayBuffer(37) {},\r\n        signature: ArrayBuffer(256) {},\r\n        userHandle: ArrayBuffer(64) {},\r\n        clientDataJSON: ArrayBuffer(118) {}\r\n    }\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\"\r\n    type: \"public-key\"\r\n}</pre>\n<p>这里的东西就比 <code>create()</code> 时拿到的要多了。看看我们拿到了什么吧：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：对于验证流程，认证会返回 <code>AuthenticatorAssertionResponse</code> 而不是 <code>AuthenticatorAttestationResponse</code> 对象，这个对象包含以下 4 个属性：\n<ul>\n<li>\n<code>response.authenticatorData: ArrayBuffer</code>：认证器信息，包含认证状态、签名计数等</li>\n<li>\n<code>response.signature: ArrayBuffer</code>：被认证器签名的 <code>authenticatorData</code> + <code>clientDataHash</code>（<code>clientDataJSON</code> 的 SHA-256 hash）</li>\n<li>\n<code>response.userHandle: ArrayBuffer</code>：<code>create()</code> 创建凭证时的用户 ID <code>user.id</code>。许多 U2F 设备不支持这一特性，这一项将会是 <code>null</code>\n</li>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n</ul>\n</li>\n</ul>\n<p>同样地，我们将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串后就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证了。至于具体怎么做，别急，马上就来讲一讲。</p>\n<h2>简单实现</h2>\n<p>了这么多，我们终于可以实现一个简单的 WebAuthn 认证页面了。由于在实际操作中 WebAuthn 相关的数据解码和密码计算比较复杂，在服务器端我们可以使用第三方库来帮我们做这些脏活累活，我们只需专注于具体流程就可以了。</p>\n<p>要寻找可用的第三方库，你可以在 <a href=\"https://webauthn.io/\">webauthn.io</a> 上找到适用于各种语言的第三方库——除了 PHP（笑）。不过好在你可以在 GitHub 上找到几个不错的 PHP WebAuthn 库，比如 <a href=\"https://github.com/web-auth/webauthn-framework\">web-auth/webauthn-framework</a>。</p>\n<p>在我们的这个例子中，我们关心的主要是前端逻辑；而后端我们可以使用各类几乎已经做到开箱即用的第三方库，这样我们可以专注于流程而不必关心细节。当然如果你想了解后端的解码细节，可以阅读“<a href=\"https://flyhigher.top/#webauthn-decode\">手动解个码</a>”一节。</p>\n<hr>\n<p>让我们先从注册开始吧。现在，用户点击了注册认证器的按钮，一个请求被发送给服务器（也就是依赖方）。在最简单的情况中，依赖方需要将三个内容发送给浏览器：<strong>挑战、用户信息和用户已注册的凭证 ID 列表（即 <code>excludeCredentials</code>）</strong>。当然依赖方也可以自由选择发送更多信息，只要最终前端能构建合法的参数即可。</p>\n<p>挑战最终会被转换为 <code>Uint8Array</code>，即一组 0-255 的整数。如果使用 PHP，在后端我们可以这样生成 Base64 编码的挑战：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"php\">$challenge = \"\";\r\nfor($i = 0; $i \n<p>对于用户信息，我们需要登录名、显示名称和 ID 三项内容。我们可以从数据库中取出用户信息，也可以新建一份。需要注意的是，<strong>出于安全和隐私的考量，ID 不应该包含用户的任何信息，比如用户邮箱等。</strong>推荐的做法是和挑战一样，生成一个随机字符串/一组随机数，并将其于用户关联起来以供之后使用。</p>\n<p>发送已注册的凭证 ID 列表是为了防止用户重复注册同一个认证器。正确设置该列表后，如果用户试图注册同一个认证器，浏览器会中止流程并抛出 <code>InvalidStateError</code>。</p>\n<p>最后，别忘了将挑战等一些后续可能会用到的信息临时存储起来。Session 就是一个很好的选择。</p>\n<p>将所有信息发送到浏览器之后，我们应该可以构建出新建凭证所需的参数了。由于有多个参数需要以 <code>Uint8Array</code> 的形式传入，我们可以准备一个简单的工具函数帮我们将 Base64 的字符串转为 <code>Uint8Array</code>。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function str2ab(str){\r\n    return Uint8Array.from(window.atob(str), c=&gt;c.charCodeAt(0));\r\n}</pre>\n<p>除了 <code>challenge</code>, <code>rp</code>, <code>user</code> 和 <code>excludeCredentials</code> 几部分需要你根据具体情况设置外，上文提到的其他参数一般可以这么设置：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">publicKey: {\r\n    challenge, // 自行设置\r\n    rp, // 自行设置\r\n    user, // 自行设置\r\n    pubKeyCredParams: [\r\n        {\r\n            type: \"public-key\",\r\n            alg: -7 // ES256\r\n        },\r\n        {\r\n            type: \"public-key\",\r\n            alg: -257 // RS256\r\n        }\r\n    ],\r\n    authenticatorSelection: {\r\n        userVerification: \"discouraged\",\r\n        authenticatorAttachment: null // 除非用户指定，大部分情况下无需指定\r\n    },\r\n    excludeCredentials, // 自行设置\r\n    timeout: 60000\r\n}</pre>\n<p>然后就是传入 <code>navigator.credentials.create()</code>，拿到 <code>PublicKeyCredential</code>。如果一切顺利，接下来我们就需要考虑如何将返回的内容传回依赖方了。由于我们拿到的很多都是 <code>ArrayBuffer</code>，我们需要将其进行编码。再准备一个工具函数吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function array2b64String(a) {\r\n    return window.btoa(String.fromCharCode(...a));\r\n}</pre>\n<p>然后适当处理，我们就可以得到一个方便传输的 JSON 字符串了：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({publicKey}).then((credentialInfo) =&gt; {\r\n    const publicKeyCredential = {\r\n        id: credentialInfo.id,\r\n        type: credentialInfo.type,\r\n        rawId: array2b64String(new Uint8Array(credentialInfo.rawId)),\r\n        response: {\r\n            clientDataJSON: array2b64String(new Uint8Array(credentialInfo.response.clientDataJSON)),\r\n            attestationObject: array2b64String(new Uint8Array(credentialInfo.response.attestationObject))\r\n        }\r\n    };\r\n    return publicKeyCredential;\r\n}).then(JSON.stringify).then((authenticatorResponseJSON) =&gt; {\r\n    // 可以发送了\r\n}).catch((error) =&gt; {\r\n    console.warn(error); // 捕获错误\r\n})</pre>\n<p>依赖方收到数据以后，还需要做三件事：验证挑战、存储凭证 ID 和存储公钥。如果数据解码顺利，且收到的挑战和之前发送的一致，就可以认为注册成功，将凭证 ID 及公钥与用户关联起来。这一步有很多第三方库可以帮我们做，对于基础实现我们就不深入探究了。</p>\n<blockquote><p>由于不同厂商的认证器的实现方式不同，<strong>我们并不能保证凭证 ID 一定是全局唯一的</strong>，也就是说，凭证 ID 有可能碰撞——即使这些凭证实际上是不同的。依赖方在实现凭证 ID 的存储及查找时，需要注意和用户 ID 结合进行存储或查找，或是直接在注册认证器时在服务器端对比阻止相同的凭证 ID。</p></blockquote>\n<hr><p>接下来就可以进行验证了。某天，用户点击了验证按钮准备登录，于是浏览器发送了验证请求到依赖方，同时附上要登录的用户名。接下来依赖方至少需要发送两项内容给浏览器：<strong>挑战和用户已绑定的凭证 ID 列表（即 <code>allowCredentials</code>）。</strong></p>\n<p>之后前端的处理流程就和注册时基本一致了。只是需要注意验证流程中获取到的 <code>PublicKeyCredential</code> 的结构和注册时的稍有不同。</p>\n<p>当浏览器将数据传回后，依赖方需要做的事情就比之前要麻烦一些了。依赖方需要验证挑战，并用之前存储的公钥验证签名和签名计数。同样地，这一步有很多第三方库可以帮我们做。最后，如果验证全部通过，我们就可以允许用户登录了。</p>\n<p>到目前为止，我们已经实现了一个简单的 WebAuthn 验证服务。不过这只是一个最基础的实现，对于很多高安全要求的身份认证这是远远不够的。因此，我们需要摆脱对第三方库的依赖，深入了解 WebAuthn。你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分，不过对于基础的 WebAuthn 实现，我们的旅程就到这里了。</p>\n<h2>拓展阅读</h2>\n<p>如果你的目标只是快速了解如何开发 WebAuthn，那么你阅读到这里就可以了。同时，上一节例子中的部分代码来自于我为了这篇文章开发的 WordPress 插件 WP-WebAuthn，这个插件可以为你的 WordPress 启用 WebAuthn 无密码登录（并非二步验证），你可以查阅插件的 <a href=\"https://github.com/yrccondor/wp-webauthn\">GitHub 存储库</a>了解更多，也可以自己安装试一试。</p>\n<p>如果你正在使用 Chrome 开发，Chrome 87+ 版本添加了一个 WebAuthn 开发者面板，可以帮助你在没有任何实体验证器的情况下开发 WebAuthn 功能。你可以在 Google 的<a href=\"https://developers.google.com/web/tools/chrome-devtools/webauthn\">这篇文章</a>中了解更多。不够，如果你正在使用 Firefox，很遗憾目前我还没有找到对应的开发工具或是浏览器扩展可用。</p>\n<p>如果你希望了解更多关于非对称加密的数学证明，可以查阅阮一峰老师的<a href=\"http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html\">这篇文章</a>。</p>\n<p>如果你希望了解更多关于 Credential Management API 的信息，可以查阅<a href=\"https://medium.com/dev-channel/sign-in-on-the-web-credential-management-api-and-best-practices-d21aed14b6fe\">这篇文章</a>（英文）。</p>\n<p>如果你希望了解更多 WebAuthn 的细节，可以继续往下阅读。<span></span></p>\n<h1>深入了解 WebAuthn</h1>\n<p>如上文所说，如果摆脱对第三方库的依赖，或是要实现更安全的 WebAuthn，我们必须深入了解 WebAuthn。在这一部分中，我们会详细讨论上文没有提到的一些概念和参数，并了解 WebAuthn 中各类数据的结构以实现解码与验证。先来看一看一些进阶的选项吧。</p>\n<h2>进阶选项</h2>\n<p>没错，上文提到的传入 <code>navigator.credentials.create()</code> 和 <code>navigator.credentials.get()</code> 方法的参数其实只是所有参数的一部分。对于 <code>create()</code>，我们还可以配置这些可选内容（上文提及的已省略）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        rp: {\r\n            icon\r\n        },\r\n        user: {\r\n            icon\r\n        },\r\n        attestation,\r\n        authenticatorSelection: {\r\n            requireResidentKey\r\n        },\r\n        extensions\r\n    }\r\n})</pre>\n</pre>\n<ul>\n<li>\n<code>rp.icon: String</code> 和 <code>user.icon</code>：是的，你可以为依赖方和用户设置图标，可以使用 HTTPS URL 或 Base64，一般长度不能超过 128 字节，不过大部分浏览器不会显示图标，或是有非常小的图片体积限制，所以一般没有使用这一属性的必要</li>\n<li>\n<code>attestation: String</code>：表明依赖方是否需要证明。可选三个值：\n<ul>\n<li>\n<code>none</code>：（默认）不需要证明。如上文所述，依赖方不关心证明，因此认证器不会签名。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n<li>\n<code>indirect</code>：依赖方需要证明，但证明方式可由认证器选择。在支持匿名证明的认证器上，认证器会通过匿名证明的方式签名挑战，并向依赖方提供签名方式等信息</li>\n<li>\n<code>direct</code>：依赖方要求直接证明。此时认证器会使用烧录在认证器中的公钥进行签名，同时向依赖方提供签名方式等信息以供依赖方验证认证器是否可信。更多信息可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节</li>\n</ul>\n</li>\n<li>在 <code>authenticatorSelection</code> 中，我们还可以设置两个可选属性：\n<ul>\n<li>\n<code>authenticatorSelection.requireResidentKey: Boolean</code>：是否要求将私钥钥永久存储于认证器中。默认值为 <code>false</code>。对于 iOS/iPad OS 13，必须设置为 <code>false</code>，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n<li>\n<code>extensions: Object</code>：WebAuthn 扩展，可以提供规范之外的配置和响应。由于实际情况中很少会使用这一特性，我们不会在这篇文章中讨论它</li>\n\n<blockquote><p>将 <code>requireResidentKey</code> 设置为 <code>true</code> 可以实现无用户名的登录，即认证器同时替代了用户名和密码。需要注意的是，尽管大部分认证器可以实现无限对公私钥，<strong>但能永久存储的私钥数量是有限的</strong>（对于 Yubikey，这通常是 25），因此只应在真正需要的时候启用此特性。我们会在“<a href=\"https://flyhigher.top/#login-without-username\">无用户名登录</a>”一节中详细讨论原因。</p></blockquote>\n<blockquote><p><strong>如果你没有高安全需求（如银行交易等），请不要向认证器索取证明</strong>，即将 <code>attestation</code> 设置为 \"none\"。对于普通身份认证来说，要求证明不必要的，且会有浏览器提示打扰到用户。</p></blockquote>\n<blockquote><p>Android 暂时无法实施用户验证，进而会导致依赖方验证失败。你可以在<a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=997538\">这里</a>追踪这个特性的实现情况。</p></blockquote>\n<blockquote>\n<p>对于 <code>extensions</code>，由于目前浏览器支持和应用范围有限，我们不会在这篇文章中涉及，不过你可以看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    uvm: true, // 要求认证器返回用户进行验证的方法\r\n    txAuthSimple: \"Please proceed\" // 在认证器上显示与交易有关的简短消息\r\n}</pre>\n<p>你可以在<a href=\"https://www.w3.org/2019/01/webauthn-extensions.html\">这个页面</a>了解更多关于 <code>extensions</code> 的信息。</p>\n</blockquote>\n<p>对于 <code>get()</code>，我们其实只有一个可选内容没讲了，即 <code>extensions</code>。和上文一样，我们不会在这篇文章中讨论它。</p>\n<p>就这些了！<span></span></p>\n<h2>手动解个码</h2>\n<p>是时候看看如何手动解码了。我们将会在这一节中讨论认证器返回的数据的结构以及如何正确地解码它们。</p>\n<p>首先我们来看看如何处理注册过程中认证器发回的数据。假设所有 <code>ArrayBuffer</code> 类型的值都被正确地以 Base64 编码，且后端已经将 JSON 的字符串解析为字典。先来复习一下，我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"ZRBkDBCEtq...9XY8atOcbg\",\r\n    type: \"public-key\",\r\n    rawId: \"ZRBkDBCEtq...9XY8atOcbg==\",\r\n    response: {\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...i5jcmVhdGUifQ==\",\r\n        attestationObject: \"o2NmbXRkbm9uZWd...xNHuAMzz2LxZA==\"\r\n    }\r\n}</pre>\n<p>这里的 <code>id</code> 就是凭证的 ID，如果验证正确，我们最终要将它存储起来并于用户关联。同时可以看到 Base64 编码后的 <code>rawId</code> 其实和 <code>id</code> 是一致的（不过 <code>id</code> 是 Base64URL 编码的）。而 <code>type</code> 则一定是 \"public-key\"。</p>\n<p>不过，我们主要关心的还是 <code>respose</code> 中的两项内容。首先是 <code>clientDataJSON</code>。它的处理比较简单，看名字就知道，它应该是一个 JSON 字符串。</p>\n<blockquote><p>小技巧：如果你看到一个 Base64 编码的字符串以 \"ey\" 开头，那么它大概率是一个 Base64 编码的 JSON。</p></blockquote>\n<p>将<code>clientDataJSON</code> Base64 解码再 JSON 解码之后我们就能得到一个字典：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"NI4i1vsNmP2KHcmyFnBCKRVQPfHgg34SsYZUOPZY2lM\",\r\n    extra_keys_may_be_added_here: \"do not compare clientDataJSON against a template. See https://goo.gl/yabPex\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>结构一目了然。在这里，我们需要验证三项内容：</p>\n<ul>\n<li>\n<code>challenge</code> 和之前发送的一致</li>\n<li>\n<code>origin</code> 为创建凭证的页面的源（协议+主机名+端口号，并非 URL）</li>\n<li>\n<code>type</code> 为 \"webauthn.create\"</li>\n</ul>\n<p>同时可以注意到有一个奇怪的 <code>extra_keys_may_be_added_here</code>。这其实是 Google 在 Chrome 中搞的一点小把戏，有一定概率会出现，提醒我们需要将 JSON 解析后再验证键值以防额外插入的键值影响验证。具体信息你可以访问那个 URL 看一看。</p>\n<p>对于 Firefox，我们会多得到两项 <code>clientExtensions</code> 和 <code>hashAlgorithm</code> ，分别指明了客户端扩展数据和签名算法。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"3-4\">{\r\n    challenge: \"dg6ost6ujhAA0g6WqLe-SOOH-tbhvjW9Sp90aPKlLJI\",\r\n    clientExtensions: {},\r\n    hashAlgorithm: \"SHA-256\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>由于本文不考虑扩展数据，因此我们可以不考虑 <code>clientExtensions</code>。同时由于目前规范中指定的签名算法只有 SHA-256 一种，因此现阶段我们也可以简单地忽略 <code>hashAlgorithm</code>。</p>\n<p><code>clientDataJSON</code> 很简单地就处理完了。接下来我们要来看看 <code>attestationObject</code>。先来看看 <code>attestationObject</code> 的结构图示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\" alt=\"attestationObject 的结构\" width=\"1056\" height=\"532\" class=\"aligncenter size-full wp-image-2245\"></a>\n<p><code>attestationObject</code> 是 CBOR 编码后再被 Base64 编码的，因此我们需要额外对其进行 CBOR 解码。</p>\n<blockquote><p>CBOR (Concise Binary Object Representation, 简明二进制对象表示) 是一种多应用于物联网领域的编码方式，你可以将它看作体积更小、更方便物联网传输的二进制 JSON。大部分语言都可以找到对应的 CBOR 解码库。</p></blockquote>\n<p>我们当然不会手解 CBOR，直接来看看解开之后的样子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"none\",\r\n    attStmt: {},\r\n    authData: [211, 217, 43, 24, 199, ..., 97, 238, 166, 67, 107]\r\n}</pre>\n<p>这些键值的含义如下：</p>\n<ul>\n<li>\n<code>fmt</code>：标明证明的格式。WebAuthn 预定义了几种格式，分别为：\n<ul>\n<li>\n<code>none</code>：没有证明</li>\n<li>\n<code>packed</code>：为 WebAuthn 优化的证明格式</li>\n<li>\n<code>android-safetynet</code>：Android 使用的格式</li>\n<li>\n<code>android-key</code>：又是 Android 使用的格式</li>\n<li>\n<code>fido-u2f</code>：FIDO U2F 认证器使用的格式</li>\n<li>\n<code>tpm</code>：TPM 可信平台模块使用的格式</li>\n</ul>\n</li>\n<li>\n<code>attStmt</code>：证明对象，具体格式根据 <code>fmt</code> 的不同会有所不同</li>\n<li>\n<code>authData</code>：包含公钥、签名计数等来自认证器的数据</li>\n</ul>\n<p>诶，例子里的 <code>attStmt</code> 怎么是空的？还记得之前说的吗？大部分情况下，<strong>如果依赖方不要求证明，那么认证器不会签名挑战</strong>，于是 <code>fmt</code> 会变为 \"none\"，<code>attstmt</code> 会为空。如果不是高安全要求，我们可以只对这一种情况做支持。</p>\n<blockquote><p>注意，部分情况下 Firefox 会在不要求证明（即 <code>attestation</code> 为 \"none\"）时会返回 <code>fmt</code> 为 \"packed\" 的证明。<strong>这是符合规范的。</strong>此时认证器会进行自证明，你可以视情况进行处理。具体可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>对于非 \"none\" 的 <code>fmt</code> 我们稍后再谈，现在我们先来看看 <code>authData</code>。来复习一下 <code>authData</code> 的结构：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\" alt=\"authData 的结构\" width=\"1056\" height=\"384\" class=\"aligncenter size-full wp-image-2240\"></a>\n<p>对于它的解码比较简单粗暴，我们要做的就是根据图示将它切开，然后适当地转换类型。其中各部分的含义如下：</p>\n<ul>\n<li>\n<code>rpIdHash</code>：如其名，SHA-256 的 <code>rpId</code>，长度 32 字节</li>\n<li>\n<code>flags</code>：标识认证状态，长度 1 字节。其中 8 位分别为：\n<ul>\n<li>\n<code>ED</code>：是否有扩展数据</li>\n<li>\n<code>AT</code>：是否包含 <code>attestedCredentialData</code>。通常注册认证器时会包含 <code>attestedCredentialData</code>，而验证时不包含</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>\n<code>UV</code>：用户是否已验证</li>\n<li>保留位</li>\n<li>\n<code>UP</code>：用户是否在场</li>\n</ul>\n</li>\n<li>\n<code>signCount</code>：签名计数，长度 4 字节</li>\n<li>\n<code>attestedCredentialData</code>：包含公钥等凭据数据，变长。其结构如下：\n<ul>\n<li>\n<code>aaguid</code>：认证器的 AAGUID (Authenticator Attestation GUID)，对于同一型号的认证器，它们的 AAGUID 是相同的</li>\n<li>\n<code>credentialIdLength</code>：标识 <code>credentialId</code> 的长度，长度 2 字节</li>\n<li>\n<code>credentialId</code>：凭证 ID，和 <code>rawId</code> 一致，长度由 <code>credentialIdLength</code> 定义</li>\n<li>\n<code>credentialPublicKey</code>：CBOR 编码的 COSE 格式的凭证公钥，变长</li>\n</ul>\n</li>\n<li>\n<code>extensions</code>：扩展数据，变长，本文不讨论</li>\n</ul>\n<blockquote><p>出于隐私考虑，如果不要求证明，认证器会以 0 填充 AAGUID。</p></blockquote>\n<p>如果你的后端在使用 Node.js，这里有个工具函数可以帮你完成这一步（不考虑 <code>extensions</code>）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function parseAuthData(buffer){\r\n    let rpIdHash = buffer.slice(0, 32);\r\n    buffer = buffer.slice(32);\r\n  \r\n    let flagsBuf = buffer.slice(0, 1);\r\n    buffer = buffer.slice(1);\r\n\r\n    let flagsInt = flagsBuf[0];\r\n    let flags = {\r\n        up: !!(flagsInt &amp; 0x01),\r\n        uv: !!(flagsInt &amp; 0x04),\r\n        at: !!(flagsInt &amp; 0x40),\r\n        ed: !!(flagsInt &amp; 0x80),\r\n        flagsInt\r\n    }\r\n\r\n    let counterBuf = buffer.slice(0, 4);\r\n    buffer = buffer.slice(4);\r\n  \r\n    let counter = counterBuf.readUInt32BE(0);\r\n\r\n    let aaguid = undefined;\r\n    let credID = undefined;\r\n    let COSEPublicKey = undefined;\r\n\r\n    if(flags.at) {\r\n        aaguid = buffer.slice(0, 16);\r\n        buffer = buffer.slice(16);\r\n\r\n        let credIDLenBuf = buffer.slice(0, 2);\r\n        buffer = buffer.slice(2);\r\n\r\n        let credIDLen = credIDLenBuf.readUInt16BE(0);\r\n        credID = buffer.slice(0, credIDLen);\r\n\r\n        buffer = buffer.slice(credIDLen);\r\n        COSEPublicKey = buffer;\r\n    }\r\n\r\n    return {rpIdHash, flagsBuf, flags, counter, counterBuf, aaguid, credID, COSEPublicKey}\r\n}</pre>\n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>解开后，依赖方至少需要做四件事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>存储签名计数</li>\n<li>存储公钥</li>\n</ol>\n<blockquote><p>签名计数不一定从 0 开始。</p></blockquote>\n<p>对于公钥，也就是 <code>credentialPublicKey</code>，我们需要多一次 CBOR 解码，然后就可以得到类似这样的公钥：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    kty: \"EC\",\r\n    alg: \"ECDSA_w_SHA256\",\r\n    crv: \"P-256\",\r\n    x: \"ZGQALNfqo0L7HFYQHFHCS/X5db49z0ePnuQEs3w3X8w=\",\r\n    y: \"6qYxhnjYuez/Q8N6vX7nIIGfxFWdZ25NzQfZYuYOalA=\"\r\n}</pre>\n<p>然后可以选择适当的方法将其存储起来，之后的步骤本文就不再赘述了。现在，将目光拉回来，让我们看看包含证明的 <code>attestationObject</code> 是怎么样的。我们来看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"packed\",\r\n    attStmt: {\r\n        alg: -7,\r\n        sig: [48, 70, 2, 33, 0, ..., 132, 78, 46, 100, 21],\r\n        x5c: [\r\n            [48, 130, 2, 189, 48, 130, 1, 165, 160, 3, ..., 177, 48, 125, 191, 145, 24, 225, 169, 41, 248]\r\n        ]\r\n    },\r\n    authData: [211, 217, 43, 24, 199, ..., 158, 54, 87, 126, 54]\r\n}</pre>\n<p>这里有一个使用 \"packed\" 格式的证明。此时，<code>attStmt</code> 中包含三个值：</p>\n<ul>\n<li>\n<code>alg</code>：签名算法</li>\n<li>\n<code>sig</code>：签名值</li>\n<li>\n<code>x5c</code>：X.509 编码的证书链</li>\n</ul>\n<p>我们不会在这一节中详述对签名的验证。要了解更多信息，你可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。现在，让我们来看看如何处理验证过程中认证器发回的数据。我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"hmqdxPLit9...BWeVxZqdvU\",\r\n    type: \"public-key\",\r\n    rawId: \"hmqdxPLit9V...BWeVxZqdvU=\",\r\n    response: {\r\n        authenticatorData: \"09krGMcWTf...UFAAAABA==\",\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...XRobi5nZXQifQ==\",\r\n        signature: \"UsXZV3pvT3np8btj6V0g...WBkaqyt88DrD40qh+A==\",\r\n        userHandle: \"MmYxNWYzZjQyZjM...Tg2ZDY4NzhlNw==\"\r\n    }\r\n}</pre>\n<p><code>id</code>, <code>rawId</code> 和 <code>type</code> 和之前一样，这里就不再赘述了。让我们来看看 <code>response</code>。首先是 <code>clientDataJSON</code>，和之前的解法一样，要验证的内容也一样，只是 <code>type</code> 从 \"webauthn.create\" 变成了 \"webauthn.get\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"bnkd2CmrEuvKnAFXs2QlC3SKlg4XFvGtP4HJL1yEWyU\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.get\"\r\n}</pre>\n<p>然后是 <code>userHandle</code>。前面讲过，这是认证器在创建凭证时的用户 ID。如果用户在使用 U2F 认证器，很可能这一项为空，所以大部分情况下我们不关心这一项。</p>\n<p>接着来看 <code>authenticatorData</code>。这其实就是之前的 <code>attestedCredentialData</code>，只是这次不包含公钥。以相同的方式切开数据，我们应该可以得到 <code>rpIdHash</code>, <code>flags</code>和 <code>signCount</code> 三项。此时，依赖方至少需要做这三样事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>验证签名计数大于之前存储的计数，并更新存储的计数</li>\n</ol>\n<blockquote><p>如果签名计数比之前的小，那么这个认证器很可能是伪造的，应该中止验证并返回验证失败。同时，签名计数不一定每次按 1 递增，通常只要计数比此前的大就认为计数检查通过。</p></blockquote>\n<p>最后，我们来看 <code>signature</code>，也就是签名。不过这个签名不是简单的对挑战的签名，具体算法如图所示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\" alt=\"签名过程\" width=\"1034\" height=\"587\" class=\"aligncenter size-full wp-image-2231\"></a>\n<p>计算签名时，认证器会将 <code>authenticatorData</code> 与 <code>clientDataHash</code>（也就是 <code>clientDataJSON</code> 的 SHA-256 Hash）拼接起来，并使用对应的私钥签名。依赖方应该使用对应的公钥将其解密，并验证内容是否是 <code>authenticatorData</code> 与 <code>clientDataHash</code> 的拼接。这部分的计算不在本文的讨论范围内。</p>\n<p>最后，如果全部验证通过，返回验证成功。<span></span></p>\n<h2>验证认证器</h2>\n<p>WebAuthn 已经很安全了，但有的时候我们还要让它更安全一点。比如，如果用户在使用伪造的或是自制的认证器，认证器的安全性就得不到保证。此时，依赖方就需要验证认证器是否是可信的认证器。</p>\n<blockquote><p>这一过程仅发生在注册认证器时。此时，如果认证器验证通过，就可以存储公钥，后续步骤和之前描述的一致。</p></blockquote>\n<blockquote><p>再次说明，如果不是对安全性有极高的要求，向认证器索取证明以验证认证器是否可信是没有必要的。此外，验证认证器需要依赖方自行维护可信认证器列表，大大增加了维护的复杂性。</p></blockquote>\n<p>在调用 <code>navigator.credentials.create()</code> 时，我们可以将 <code>attestation</code> 设置为非 \"none\" 来向认证器索取证明。除无证明外，WebAuthn 定义了四种证明方式：</p>\n<ul>\n<li>Basic Attestation (Basic) ：基础的证明方式，认证器会使用认证器私钥签名</li>\n<li>Self Attestation (Self) ：自证明，认证器会使用凭证私钥签名</li>\n<li>Attestation CA (AttCA) ：认证器会使用多个证明私钥之一签名</li>\n<li>Elliptic Curve based Direct Anonymous Attestation (ECDAA) ：通过 <a href=\"https://en.wikipedia.org/wiki/Direct_Anonymous_Attestation\">DAA</a> 实现的匿名证明</li>\n</ul>\n<blockquote><p>和验证过程一样，这里签名的目标是 <code>authenticatorData</code> 和 <code>clientDataHash</code> 的连接。</p></blockquote>\n<p>还记得 <code>create()</code> 时 <code>attestation</code> 可选的三个值吗？这个值会决定认证器最终使用哪种方式进行证明。复习一下：</p>\n<ul>\n<li>\n<code>none</code>：大部分情况下认证器会选择不进行证明，部分认证器会进行自证明。此时 AAGUID 会被 0 填充</li>\n<li>\n<code>indirect</code>：认证器会试图通过替换 AAGUID 和选择合适的证明方式来进行匿名证明，具体方式由认证器选择</li>\n<li>\n<code>direct</code>：认证器会提供最直接的证明信息</li>\n</ul>\n<p>注意，大部分情况下，当认证器需要向依赖方证明自己可信时需要提供认证器公钥，<strong>这会触发浏览器提示，只有用户同意后认证器才会进行证明，否则认证器将不提供证明。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\" alt=\"浏览器提示\" width=\"446\" height=\"283\" class=\"aligncenter size-full wp-image-2217\"></a>\n<blockquote><p>为什么浏览器会说“安全密钥的品牌和型号”？事实上，为了避免用户通过认证器证书被跨依赖方追踪，FIDO 要求使用相同认证器证书的认证器的数量不能少于 100,000。于是大部分认证器厂商会选择<strong>让同一型号的认证器共用同一份证书。</strong>因此，浏览器的会询问用户是否同意“查看安全密钥的品牌和型号”。</p></blockquote>\n<blockquote><p>Android Safety Net 不会向用户询问是否同意，而是会静默进行证明。</p></blockquote>\n<p>当证明不为空时，依赖方收到数据后根据 <code>attestationObject.fmt</code> 的不同，需要选择不同的验证方式来验证认证器的可信情况。出于篇幅原因，这里我们不会讨论每一种 <code>fmt</code> 的验证方式，更多信息你可以查阅 <a href=\"https://www.w3.org/TR/webauthn/#defined-attestation-formats\">W3C 文档</a>。</p>\n<p>当 <code>fmt</code> 为 <code>packed</code> 时，<code>attestationObject.attStmt</code> 可能会有三种格式：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// 自证明\r\n{\r\n    alg, // 算法\r\n    sig // 签名\r\n}\r\n// 基础或证明 CA 证明\r\n{\r\n    alg,\r\n    sig,\r\n    x5c // X.509 证书链\r\n}\r\n// 椭圆曲线证明\r\n{\r\n    alg,\r\n    sig,\r\n    ecdaaKeyId // ECDAA-Issuer 公钥标识符\r\n}</pre>\n<p>此时，依赖方需要检查证书符合预期格式并检查证书是否在可信链上。首先，如果证明中既没有 <code>ecdaaKeyId</code> 也没有 <code>x5c</code>，就说明这个证明使用的是自证明，只需使用认证器提供的公钥验证即可；如果有 <code>x5c</code>，那么就需要验证 <code>x5c</code> 中的证书是否在可信链上。将 <code>x5c</code> 中的每个证书以 Base64 编码，按 64 个字符切开，并在头尾加上 <code>-----BEGIN CERTIFICATE-----</code> 和 <code>-----END CERTIFICATE-----</code>就能得到一个证书字符串了。之后，依赖方需要验证证书是否可信。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function base64ToPem(b64cert){\r\n    let pemcert = '';\r\n    for(let i = 0; i \n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>至于 <code>ecdaaKeyId</code>，由于目前应用较少，处理方法可能需要你另寻资料了。检查证书的具体步骤已经超出了本文的范围，具体可以查阅<a href=\"https://medium.com/@herrjemand/verifying-fido2-packed-attestation-a067a9b2facd\">这篇文章</a>（英文）。</p>\n<blockquote><p>你可以在 <a href=\"https://fidoalliance.org/metadata/\">FIDO Metadata Service</a> 找到各大厂商认证器的可信证书链。</p></blockquote>\n<p>当在 Android 上调起 WebAuthn 时，大部分情况下 <code>fmt</code> 将会为 <code>safety-net</code>。此时 <code>attestationObject.attStmt</code> 的结构会是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    ver: \"200616037\",\r\n    response: {\r\n        type: \"Buffer\",\r\n        data: [101, 121, 74, 104, 98, ..., 115, 104, 104, 82, 65]\r\n    }\r\n}</pre>\n<p>此时，<code>clientDataJSON</code> 中还会出现 <code>androidPackageName</code> 键，值是调起 WebAuthn 验证的应用的包名，如 Chrome 就是 \"com.android.chrome\"。</p>\n<p>在这个证明中，<code>data</code> 其实是一个 JWT 字符串，我们可以将它编码为字符串并将其按照 JWT 进行解码（别忘了验证 JWT 签名）。最终我们会得到一个类似这样的 Payload：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    nonce: \"0QAurN4F9wik6GEkblDJhGuf4kuaqZn5zaaxlvD1hlA=\",\r\n    timestampMs: 1584950686460,\r\n    apkPackageName: \"com.google.android.gms\",\r\n    apkDigestSha256: \"2BQHno+bmWWwdLUYylS8HLt5ESJzci3nt2uui71ojyE=\",\r\n    ctsProfileMatch: true,\r\n    apkCertificateDigestSha256: [\r\n        \"8P1sW0EPicslw7UzRsiXL64w+O50Ed+RBICtay2g24M=\"\r\n    ],\r\n    basicIntegrity: true,\r\n    evaluationType: \"BASIC\"\r\n}</pre>\n<p>其中包含了有关设备状态的一些信息。比如说，如果 <code>ctsProfileMatch</code> 为 <code>false</code>，那么该设备很有可能被 root 了。对于高安全要求的场景，我们可以视情况进行验证。</p>\n<p>同时我们可以在 JWT Header 中验证证明的有效性。我们应该能取得这样的 Header：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    alg: \"RS256\",\r\n    x5c: [\r\n        \"MIIFkzCCBHugAwIBAgIR...uvlyjOwAzXuMu7M+PWRc\",\r\n        \"MIIESjCCAzKgAwIBAgIN...UK4v4ZUN80atnZz1yg==\"\r\n    ]\r\n}</pre>\n<p>这里的结构就和上方的 <code>x5c</code> 验证类似了。具体步骤可以参考<a href=\"https://medium.com/@herrjemand/verifying-fido2-safetynet-attestation-bd261ce1978d\">这篇文章</a>（英文）。</p>\n<p>其他所有格式的验证方式也都可以在<a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">这篇文章</a>（英文）中找到。<span></span></p>\n<h2>无用户名登录</h2>\n<p>认证器已经代替了密码，可是这还不够！在进行第一因素认证（即使用 WebAuthn 登录）时，我们还是需要输入用户名，然后才能进行身份认证。懒惰是第一生产力，我们能不能不输入用户名就进行身份认证呢？实际上，大部分认证器都允许我们无用户名登录。<strong>而这一特性的核心就是 Resident Key 客户端密钥驻留。</strong></p>\n<p>你可以思考一下，为什么普通的 WebAuthn 为什么不能实现无用户名登录？事实上，大部分认证器为了实现无限对公私钥，会将私钥通过 Key Warp 等技术加密后包含在凭证 ID 中发送给依赖方，这样认证器本身就不用存储任何信息。不过，这就导致需要身份认证时，依赖方必须通过用户名找到对应的凭证 ID，将其发送给认证器以供其算出私钥。</p>\n<blockquote><p>Yubikey 实现了一个基于 HMAC 的算法，认证器可以在私钥不离开认证器的前提下（常规的 Key Warp 算法中实际上私钥离开了认证器）通过一些输入和凭证 ID 重新计算私钥，你可以阅读<a href=\"https://www.yubico.com/blog/yubicos-u2f-key-wrapping/\">这篇文章</a>了解更多。</p></blockquote>\n<blockquote><p>客户端通过凭证 ID 查找对应认证器的算法根据系统的不同是不同的。通常凭证 ID 中会包含认证器信息，因此系统可以通过凭证 ID 找到对应的认证器。</p></blockquote>\n<p>要避免输入用户名，我们可以要求认证器将私钥在自己的内存中也存储一份。这样，依赖方无需提供凭证 ID，认证器就可以通过依赖方 ID 找到所需的私钥并签名公钥。以下是具体流程：</p>\n<p>注册时：</p>\n<ol>\n<li>依赖方请求新建凭证，同时要求启用客户端密钥</li>\n<li>认证器生成一对公私钥，并将私钥存储在永久内存中且与依赖方 ID 及用户 ID 绑定，随后将公钥发送给依赖方以供存储</li>\n<li>依赖方将用户 ID 即公钥与用户绑定</li>\n</ol><p>验证时：</p>\n<ol>\n<li>依赖方请求验证，但不必提供除依赖方 ID 以外的更多信息</li>\n<li>用户选择认证器</li>\n<li>认证器根据依赖方 ID 找到对应私钥</li>\n<li>如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录</li>\n<li>确定私钥后，认证器签名挑战并将其返回，同时返回用户 ID</li>\n<li>依赖方通过用户 ID 找到对应用户并用对应公钥检查签名，正确则允许对应用户登录</li>\n</ol><blockquote><p>可以看到，这个特性同时要求认证器存储用户 ID，即上面提到过的 <code>userHandle</code>。依赖方需要根据此信息找到对应用户，因此不支持 <code>userHandle</code> 的 U2F 认证器无法进行无用户名登录。</p></blockquote>\n<blockquote><p>如之前所说，<strong>认证器能永久存储的私钥数量是有限的</strong>，因此只应在真正需要无用户名登录的时候启用此特性。</p></blockquote>\n<blockquote><p>目前暂时没有办法检测认证器是否支持客户端密钥驻留，因此在无用户名验证失败时应 fallback 至常规的 WebAuthn 验证，即向用户询问用户名。</p></blockquote>\n<p>现在让我们来看看如何实现这一特性吧。首先，调用 <code>navigator.credentials.create()</code> 时我们需要注意两个参数：<code>requireResidentKey</code> 必须为 <code>true</code>，<code>userVerification</code> 必须为 \"required\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"5-6\">navigator.credentials.create({\r\n    publicKey: {\r\n        ...\r\n        authenticatorSelection: {\r\n            requireResidentKey: true,\r\n            userVerification: \"required\"\r\n            ...\r\n        },\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Windows Hello <strong>似乎</strong>会存储所有已注册的凭据，因此无论是否指定 <code>requireResidentKey</code>，你都可以通过 Windows Hello 进行无用户名登录。</p></blockquote>\n<p>随后，浏览器会询问用户是否允许认证器存储私钥。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\" alt=\"浏览器提示\" width=\"445\" height=\"285\" class=\"aligncenter size-full wp-image-2208\"></a>\n<p>如果用户同意，认证器会存储私钥，并和普通的 WebAuthn 一样返回信息。不过，依赖方收到数据之后，只需将公钥、用户 ID 与用户关联起来，而不必再将凭证 ID 与用户关联起来。至此注册完成。</p>\n<p>之后，在用户请求登录时，无需再向依赖方提供用户名。同时在传入 <code>navigator.credentials.get()</code> 的参数中也有两个需要注意：<code>userVerification</code> 必须为 \"required\"，同时 <code>allowCredentials</code> 必须为空。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"4-5\">navigator.credentials.get({\r\n    publicKey: {\r\n        ...\r\n        userVerification: \"required\",\r\n        allowCredentials: [],\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Android 暂不支持无用户名验证，空的 <code>allowCredentials</code> 会导致浏览器返回 <code>NotSupportedError</code> 错误。</p></blockquote>\n<p>此时，认证器会根据依赖方 ID 找到对应的私钥。如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录。用户选择后，认证器就会使用对应的私钥签名挑战并将其返回。此时，<code>userHandle</code> 一定不为空。</p>\n<p>依赖方收到数据后，需要将 <code>userHandle</code> 作为用户 ID 找到对应的用户，并使用对应的公钥验证签名。如果验证成功，则认为对应的用户身份认证成功，依赖方可以允许其登录。至此验证结束。</p>\n<blockquote><p>有的时候你可能会需要清除认证器中的密钥。绝大多数认证器都提供了对应的软件以供清除存储的密钥，但大部分情况下这会重置整个认证器，这意味着相关认证器此前的所有凭证均会失效。因此建议不要将日常使用的认证器作为开发测试用的认证器。</p></blockquote>\n<h2>从 U2F 认证迁移</h2>\n<p>如果你的服务此前提供了 U2F 第二因素认证，你可能会希望在将依赖方从 U2F 升级到 WebAuthn 时用户此前注册的 U2F 认证器仍然可用而无需重新注册。由于 WebAuthn 向后兼容 U2F 设备，用户是可以继续使用原有的 U2F 认证器的。不过，由于 WebAuthn 的依赖方 ID 与 U2F 的 <code>appid</code> 并不一定相同，你需要将原有的 U2F <code>appid</code> 随 WebAuthn 流程一起传递给认证器，认证器才能使用正确的私钥进行响应。</p>\n<p>要实现这一点，我们只需要在注册及认证仪式中使用 WebAuthn 的 <code>appid</code> 扩展。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    appid: \"https://example.com\" //U2F appid\r\n}</pre>\n<p>此时认证器便可以得到正确的私钥，之后的流程与正常情况一致；依赖方除了正常的 WebAuthn 流程外，不需要再做任何其它操作。</p>\n<h2>拓展阅读</h2>\n<p>我们的 WebAuthn 之旅到这里就真的结束了。不过，你仍然可以自行探究，了解更多。<strong>本文只是一个粗浅的使用指南</strong>，而被称为“Web 身份认证的未来”的 WebAuthn 的深层还要很多细节值得我们挖掘学习，不过本文不会再继续讨论了。</p>\n<p>如果你想了解更多关于 WebAuthn 的信息，最好的方法是直接阅读 <a href=\"https://www.w3.org/TR/webauthn\">W3C 规范</a>。此外，Yubico 也提供了不错的 <a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn 文档</a>。</p>\n<p>要了解更多认证器存储凭证的信息，你可以阅读<a href=\"https://duo.com/labs/tech-notes/how-security-keys-store-credentials\">这篇文章</a>（英文）。</p>\n<p>如果你想了解更多 Android Safety Net 是怎样运作的，可以观看<a href=\"https://youtu.be/8lv_9mydrjg\">这个视频</a>，并通过 <a href=\"https://developer.android.com/training/safetynet/attestation\">Google 的文档</a>了解 Android Safety Net 的更多信息。</p>\n<p>如果你想方便地调试 WebAuthn，<a href=\"https://webauthn.me/\">webauthn.me</a> 提供了一个非常直观方便的<a href=\"https://webauthn.me/debugger\">调试器</a>。</p>\n<h1>参考资料</h1>\n<p><a href=\"https://www.w3.org/TR/webauthn\">WebAuthn Level 1 规范 - W3C</a><br><a href=\"https://github.com/w3c/webauthn\">WebAuthn Level 2 草案 - W3C</a><br><a href=\"https://blog.techbridge.cc/2019/08/17/webauthn-intro/\">一起来了解Web Authentication - TechBridge 技术共笔部落格</a><br><a href=\"https://medium.com/@herrjemand/introduction-to-webauthn-api-5fd1fb46c285\">Introduction to WebAuthn API - Medium</a><br><a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">WebAuthn/FIDO2: Verifying responses - Medium</a><br><a href=\"https://obeta.me/posts/2019-03-01/WebAuthn%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8\">WebAuthn介绍与使用 - obeta</a><br><a href=\"https://webauthn.io/\">webauthn.io</a><br><a href=\"https://webauthn.guide/\">webauthn.guide</a><br><a href=\"https://webauthn.me/\">webauthn.me</a><br><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion\">Attestation and Assertion - MDN</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Authentication_API\">Web Authentication API - MDN</a>（顺便翻译了一半）<br><a href=\"https://fidoalliance.org/fido-technotes-the-truth-about-attestation/\">FIDO TechNotes: The Truth about Attestation - FIDO Alliance</a><br><a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn Developer Guide - Yubico</a><br><a href=\"https://en.wikipedia.org/wiki/WebAuthn\">WebAuthn - Wikipedia</a><br><a href=\"https://techcommunity.microsoft.com/t5/identity-standards-blog/all-about-fido2-ctap2-and-webauthn/ba-p/288910\">All about FIDO2, CTAP2 and WebAuthn - Microsoft Tech Community</a><br><a href=\"https://webauthn-doc.spomky-labs.com/\">Webauthn Framework</a><br><a href=\"https://zhuanlan.zhihu.com/p/25279015\">如何开发支持 FIDO U2F 登录的网站 - 知乎专栏</a><br></p></pre>\n","link":"https://flyhigher.top/develop/2160.html"},{"title":"NLP 找门：用朴素贝叶斯进行文本分类","date":"2020-01-29 11:39:58","description":"\n<blockquote>\n<p>有一天，神收到了一封垃圾邮件，于是世界上就有了朴素贝叶斯算法。</p>\n<footer>——我瞎编的</footer>\n</blockquote>\n<p>为什么这篇文章的标题是 NLP 找门呢？因为如果你看完了这篇文章，你就可以<strong>准备入门</strong>自然语言处理 (<strong>N</strong>atural <strong>L</strong>anguage <strong>P</strong>rocessing) 了。我会把这篇文章当作一篇彻彻底底的 NLP 入门文章来写，尽量避免“专业高端”词汇和“全是奇怪符号”的式子，这样<strong>只要你有高中数学基础</strong>，就能毫无压力地看完这篇文章，学会使用朴素贝叶斯分类算法分类文本。</p>\n<p>让我们开始吧。</p>\n<h1>所以，啥是朴素贝叶斯？</h1>\n<p>简单来说，朴素贝叶斯 (Naïve Bayes) <strong>是一个简单但高效的分类算法</strong>，在进行不复杂的文本分类时高效且拥有不低的准确度，判断垃圾邮件就是用朴素贝叶斯进行文本分类的一个经典例子。当然朴素贝叶斯分类不仅能用在 NLP 中，在许多分类问题中朴素贝叶斯也有非常好的效果，但我们今天只关注它在 NLP 中的应用。</p>\n<p>要了解朴素贝叶斯，我们要先来了解一下贝叶斯定理。</p>\n<blockquote>\n<p>每增加一个数学公式都会使读者减半。</p>\n<footer>——霍金</footer>\n</blockquote>\n<p>那么，就让我们先来看看贝叶斯定理的公式吧（笑</p>\n<p>$$P(A|B) = \\frac{P(AB)}{P(B)} = \\frac{P(B|A)P(A)}{P(B)}$$</p>\n<p>其实还是很简单的，运用高中的条件概率知识就能理解。本质上，贝叶斯定理给出了一种方法，使得我们可以在 \\(P(A|B)\\) 和 \\(P(B|A)\\) 之间互相转换，因为通常情况下它们是不一样的。</p>\n<p>要更好地理解，请考虑这样一个例子：</p>\n<blockquote><p>假设有一个学校图书馆，图书管理员正为找不到某本书而发愁。已知老师有 70% 的意愿借走这本书，而是学生的意愿是 30%，这个学校的师生比例是 1:10，那么借走这本书的人是老师的概率有多大？</p></blockquote>\n<p>设学校总人数为 \\(T\\)，我们可以很容易地写出这样的一个式子：</p>\n<p>$$\\begin{align} P &amp; = \\frac{T\\cdot\\frac{1}{11}\\cdot 70\\%}{T\\cdot\\frac{1}{11}\\cdot 70\\%+T\\cdot\\frac{10}{11}\\cdot 30\\%} \\\\ &amp; = \\frac{70\\%}{70\\%+10\\times30\\%} \\\\ &amp; = \\frac{7}{37} \\end{align}$$</p>\n<p>这就是贝叶斯定理了！等等，你可能会挠挠头，这哪里是贝叶斯了？别急，如果我们把最上面的式子换个字母的话...</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>在这里，\\(H\\) 指 Hypothesis，即假设，而 \\(E\\) 指 Evidence，即证据。这样，这个式子就很好理解了，在我们上面的例子里，借走书是证据，那么 \\(P(E)\\) 就是某个人选择借走这本书的概率；这个人是老师是假设，那么这个人是老师的概率是 \\(P(H)\\)。<strong>注意这里的概率指在学校中抽一个人是老师的概率，并不是“在借走书的前提下”这个人是老师的概率</strong>，而“在借走书的前提下”这个人是老师的概率应该是 \\(P(H|E)\\)，也正是我们要求的概率。同样地，而“这个人是老师”的前提下借走书的概率就是 \\(P(E|H)\\) 了。</p>\n<p>那么再来看看上面我们凭小学知识就列出的计算式，如果把里面的具体数据换成概率来表示的话，这个式子就会变成...</p>\n<p>$$P(H|E) = \\frac{T\\cdot P(E|H)P(H)}{T\\cdot P(E|H)P(H) + T\\cdot P(E|\\neg H)P(\\neg H)}$$</p>\n<p>好吧，这里解释一下，\\(\\neg\\) 符号表示“非”，所以 \\(P(E|\\neg H)\\) 表示在“这个人不是老师”的前提下借走书的概率。而 \\(T\\cdot P(E|H)P(H)\\) + \\(T\\cdot P(E|\\neg H)P(\\neg H)\\)，即“可能借走书的老师的数量 + 可能借走书的学生的数量”，就是“可能借走书的人的数量”了，也就是 \\(T\\cdot P(E)\\)。上下消去 \\(T\\)，我们就能得到上面的式子了。</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>这就是贝叶斯了定理。如果你还是不太清楚，可以去看看 3Blue1Brown 的<a href=\"https://www.bilibili.com/video/av84799361\">这个视频</a>，图形化的讲解会清晰很多。</p>\n<p>这里我要提一下这个式子里各部分的专有名称了（“专业高端”词汇警告），你可以不记住，直接看后面。</p>\n<ul>\n<li>\\(P(H|E)\\) 叫做 \\(H\\) 的<strong>后验概率</strong>，反之亦然</li>\n<li>\\(P(H)\\) 叫做 \\(H\\) 的<strong>先验概率</strong>，反之亦然</li>\n<li>特别地，我们把 \\(P(E|H)\\) 称作<strong>“似然值”</strong>，即 likelihood</li>\n</ul>\n<p>那什么是朴素贝叶斯呢？按上面所说的，朴素贝叶斯是一种分类算法。简单来说，朴素贝叶斯将一个对象的各个特征考虑为互相独立，然后根据这些特征的概率的乘积来判断对象所属的分类。基本原理如下：</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)} \\propto P(E|H)P(H) = P(H)\\prod_{i}P(W_i|H)$$</p>\n<p>在这里，\\(W_i\\) 指某一对象的第 \\(i\\) 个特征，对于文本分类来说，这就是一段文本中的某个单词。</p>\n<p>朴素贝叶斯之所以“朴素”，是因为它要求<strong>各个特征间是独立的</strong>，在文本分类中也就是各个单词之间互不干扰。虽然思路简单的代价是适用范围变窄，不过由于这样的简化在很多情况下已经足够了，因此实际上朴素贝叶斯的应用范围非常广。<del>你看朴素贝叶斯 <strong>N</strong>aïve <strong>B</strong>ayes 的缩写都是 NB 了，能不厉害吗（逃</del></p>\n<h1>那么，咋分类啊</h1>\n<p>看来你这下完全听懂了呢（笑），是时候看看如何在 NLP 中应用朴素贝叶斯了。和上面一样，我们用一个具体的例子来说明。我们的目标是让电脑学会分类美国共和党和民主党的演讲稿，由于两个党派的演讲风格不同，所以这样的分类在理论上是可行的。</p>\n<div class=\"wp-block-file\">\n<a href=\"https://acdn.flyhigher.top/nlp/material.zip\" download>material.zip</a><a href=\"https://acdn.flyhigher.top/nlp/material.zip\" class=\"wp-block-file__button\" download>下载</a>\n</div>\n<p>上面我们要用到的数据集，你可以下载下来一起动手玩一玩。先说一下数据集的数据结构吧，压缩包里有两个文件，<code>train.txt</code> 将会被当作训练数据集，而 <code>test.txt</code> 则会作为训练结束后的验证数据集。两个文本文件里数据的结构是类似的，就像这样：</p>\n<pre class=\"EnlighterJSRAW\">BLUE WELL I AM SO HONORED AND PERSONALLY UNKNOWNWORD TO BE HERE...\r\nRED THANK YOU . THIS IS QUITE AN INSTITUTION . IT'S GOOD TO BE...</pre>\n<p>每行都是一篇演讲稿，每行的第一个单词指明了这篇演讲稿所属的党派，<code>RED</code> 指共和党，而 <code>BLUE</code> 指民主党。所有单词和符号都已经被转为大写并由空格分隔方便处理。<code>train.txt</code> 有共和党演讲稿和民主党演讲稿各 23 篇，<code>test.txt</code> 有 6 篇共和党演讲稿，12 篇民主党演讲稿。</p>\n<p>明白了？那我们就开始吧。</p>\n<h2>捋捋思路</h2>\n<p>首先，我们需要考虑如何在文本分类中应用朴素贝叶斯。很简单，按朴素贝叶斯的思路，<strong>计算每个词在某一分类下的出现概率，然后将某篇文章的所有词的概率相乘，再乘以该分类的先验概率，就可以得到某篇文章在某一分类下的概率。</strong></p>\n<p>$$P(Class|Article) = P(Class)\\prod_{i}P(Word_i|Class)$$</p>\n<p>各个分类概率都计算完成后，概率最高的那个分类就是这篇文章可能所属的分类。这个思路的核心就是用词决定了文本风格，文本的不同类别用词会有差异，只要能量化这些差异就可以分类文本。在我们的例子中，我们可以从 <code>train.txt</code> 中统计各个词汇的出现情况，然后用 <code>test.txt</code> 中的数据按上面的算法验证我们算法的准确性。</p>\n<p>这个思路很简单也很清晰，但还有一些问题需要解决。<strong>第一，有的时候，我们的测试数据集中可能会出现一个在训练数据集中没有出现过的词语。这个时候，朴素贝叶斯的计算结果会是 0。</strong>如果我们把 0 乘进式子中，那就别想得到正常的结果了。所以，我们还需要对计算某一单词在某一分类中的式子稍加改进。使用拉普拉斯平滑，就可以避免出现概率为 0 的情况。别被名字吓到，拉普拉斯平滑是一种非常简单的平滑方法：在分子上 +1，在分母上加整个取值范围，这样就可以给整个分式加上非常微小的偏移，避免出现 0。</p>\n<p>$$\\begin{align} P(Word_i|Class) &amp; = \\frac{Word_iCountInClass}{AllWordCountInClass} \\\\ &amp; \\approx \\frac{Word_iCountInClass + 1}{AllWordCountInClass + UniqueWordCount} \\end{align}$$</p>\n<p><strong>第二，对于长文本，大部分词语在某一分类中的出现概率是远小于 1 的，加上长文本词汇量大，往往概率相乘的结果会非常小。</strong>受限于计算机处理浮点数的原理，精确处理这么小的数字是很麻烦的。幸好，运用一些简单的数学知识就可以将其转化为更精确的表达，<strong>那就是取对数。</strong></p>\n<p>首先，将概率计算结果取对数并不影响我们的计算结果。因为取对数是一个单调递增的操作，而我们计算概率只是为了排序选择概率最高的分类，因此取对数是不影响我们排序的。而把多项式取对数，等于把多项式的每一项取对数后相加。所以我们有：</p>\n<p>$$\\lg{\\Big(P(Class)\\prod_{i}P(Word_i|Class)\\Big)} = \\lg{P(Class)} + \\sum_i\\lg{P(Word_i|Class)}$$</p>\n<p>大部分情况下，在每一次取对数的时候，要取对数的数字的大小，即 \\(P(Word_i|Class)\\) 尚还在计算机能处理的范围内，<strong>因此我们可以放心地使用取对数的方法</strong>，避免计算机精度不够影响结果。</p>\n<p><strong>第三就是在某些情况下，可能会有部分词语干扰计算结果</strong>，如 and, is 这类的被大量使用的中性词。如果希望得到更好的结果，我们可以维护一个停用词表，在计算时排除停用词即可。或者，我们可以在计算完每个单词的出现数量后，排除数量最多的前 \\(N\\) 个单词，避免这些单词过多地影响计算。</p>\n<h2>写点代码</h2>\n<p>现在我们终于可以开始实战，写点代码了。我会用简单的 Python 来表达思路。好了，理一理思绪，第一步我们要做的，是统计训练数据集中的用词情况。具体来说，根据上面的思考，我们需要统计的有：</p>\n<ul>\n<li>每个单词在各分类中出现的数量</li>\n<li>各分类中的不重复词数量</li>\n</ul>\n<p>用 Python 简单表示如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\"># 读入数据过程略...\r\ndata_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ndata_blue = []\r\ndata_red = []\r\nword_count_blue = {}\r\nword_count_red = {}\r\n\r\nfor line_data in data_raw:\r\n    word_list = line_data.split(\" \") # 分隔单词\r\n    if word_list[0] == \"BLUE\":\r\n        for i in range(1,len(word_list)):\r\n            if not is_excluded(word_list[i]): # 判断是否为停用词\r\n                data_blue.append(word_list[i])\r\n                # 统计单词出现次数\r\n                word_count_blue.setdefault(word_list[i], 0)\r\n                word_count_blue[word_list[i]] += 1\r\n    elif word_list[0] == \"RED\":\r\n        # Class = red 时同理...\r\n\r\n#统计非重复词\r\nunique_words_blue = list(set(data_blue))\r\nunique_words_red = list(set(data_red))</pre>\n<p>训练过程到这里就结束了，计算机已经知道了各政党演讲的用词习惯。很简单吧？接下来我们就要使用测试数据集来测试准确度了。<strong>这里开始就涉及到朴素贝叶斯的计算了</strong>，可能会稍微复杂一点点。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">import math\r\n#读入测试数据过程略...\r\ntest_data_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ntest_data = []\r\n\r\nfor line_data in test_data_raw:\r\n    if line_data[0] == \"BLUE\":\r\n        content_data = line_data.split(\" \").pop(0)\r\n        test_data.append({\"class\": \"blue\", \"content\": content_data})\r\n    elif line_data[0] == 'RED':\r\n        # ...\r\n\r\nfor line_data in test_data:\r\n    posibility_blue = 0\r\n    for word in line_data[\"content\"]:\r\n        # 计算各单词概率，取对数后相加，使用了拉普拉斯平滑\r\n        if word in word_count_blue:\r\n            posibility_blue += math.log((word_count_blue[word]+1)/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n        else:\r\n            posibility_blue += math.log(1/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n    # 最后加上该分类概率的对数\r\n    posibility_blue += math.log(len(data_blue)/(len(data_blue)+len(data_red)))\r\n\r\n    # 计算 Red 同理...</pre>\n<p>计算完成后，我们就得到每篇演讲稿在各分类下的概率了。之后，简单的比较就能得出推断的分类：如果 \\(P(Red|Article)\\) 大于 \\(P(Blue|Article)\\)，那么这篇演讲稿就更可能是共和党的演讲稿，反之则是民主党的演讲稿。</p>\n<p>很好理解吧？那么这么简单的思路，准确性怎么样呢？对于我们的例子，这是我设置了个别停用词后的结果：</p>\n<pre class=\"EnlighterJSRAW\">+-----+-------+--------------+--------------+-------+-------+\r\n|   ID|  Class|        P(Red)|       P(Blue)|  Guess| Status|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|    1|   Blue|  -23204.68377|  -22998.67066|   Blue|      √|\r\n|    2|   Blue|  -16438.44625|  -16137.48257|   Blue|      √|\r\n|    3|   Blue|  -33468.81214|  -32567.61801|   Blue|      √|\r\n|    4|   Blue|    -8606.2193|   -8601.50426|   Blue|      √|\r\n|    5|   Blue|  -12430.97436|  -11935.70662|   Blue|      √|\r\n|    6|   Blue|  -44033.02883|  -43877.55367|   Blue|      √|\r\n|    7|   Blue|   -16947.2851|  -16758.57542|   Blue|      √|\r\n|    8|   Blue|  -26957.26997|  -26889.62444|   Blue|      √|\r\n|    9|   Blue|  -27503.73985|  -27249.21828|   Blue|      √|\r\n|   10|   Blue|   -20528.4457|   -19991.1248|   Blue|      √|\r\n|   11|   Blue|  -20337.96493|  -19860.12831|   Blue|      √|\r\n|   12|   Blue|  -28409.28489|  -28118.98017|   Blue|      √|\r\n|   13|    Red|  -13756.01015|  -14488.11751|    Red|      √|\r\n|   14|    Red|  -17221.22732|  -17710.15936|    Red|      √|\r\n|   15|    Red|  -17397.45136|  -17899.98659|    Red|      √|\r\n|   16|    Red|  -10724.69095|  -11092.77837|    Red|      √|\r\n|   17|    Red|  -10402.40027|  -10859.48681|    Red|      √|\r\n|   18|    Red|   -9371.53792|    -9669.6769|    Red|      √|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|                                      Total: 18/18, 100.0% |\r\n+-----------------------------------------------------------+</pre>\n<p><strong>100% 的准确率哦！</strong>事实上，对于我们的这个例子，就算不设置停用词，我们仍能达到 100% 的分类准确率。朴素贝叶斯分类的确很 NB 呢。</p>\n<h1>更进一步</h1>\n<p>我们的探索到这里就结束了，但如果你有兴趣，完全可以继续探索下去。我们的例子是一个非常简化的例子，在实际情况中，还有很多问题需要解决。比如，对于中文及类似语言，不存在拉丁语系的天然分词结构，而朴素贝叶斯的文本分类是基于单词的，那么<strong>中文的分词就会是个问题；</strong>再比如，对于朴素贝叶斯分类来说，<strong>词语之间的顺序是不影响分类结果的</strong>，但这就会导致“今天心情很好，但昨天不好”和“昨天心情很好，但今天不好”在朴素贝叶斯看来是一样的，要想获得更好的结果，我们必须<strong>考虑词语的顺序。</strong></p>\n<p>这些问题，今天我们就不再深究了，但你可以自己探索。比如，引入思路同样很简洁的马尔科夫链，我们就可以让计算机学会考虑词语间的顺序，不过那就会是另一个话题了。</p>\n","link":"https://flyhigher.top/develop/1989.html"},{"title":"MDx 中增强页面可访问性的细节","date":"2020-01-25 16:45:04","description":"\n<blockquote><p>这篇文章本来是打算发在 <a href=\"https://mdxblog.flyhigher.top/\">MDx Blog</a> 的，不过写到后来发现这篇文章相对来说还是有价值的，于是就将这篇文章转移到了无垠，MDx Blog 则不再发表这篇文章。</p></blockquote>\n<p>从 MDx 开发之初，增强页面的可访问性就被列为了一个重要目标。从 HTML 语义化，到 ARIA 地标，再到 <code>prefers-reduced-motion</code>，随着浏览器对于增强页面可访问性的支持功能越来越多，MDx 也在不断地更新，让更多的人都能毫无困难地浏览、查看由 MDx 渲染的网页。本文会详细说明一些 MDx 中增强页面可访问性的细节，<strong>如果你希望增强自己开发的网页的可访问性，本文可能会对你有所帮助。</strong></p>\n<h1>基础性增强</h1>\n<p>增强可访问性，最重要也是最基础的一点就是 HTML 语义化。通过使用 HTML 5 语义化标签和 ARIA Role 标签，我们可以很方便地<strong>将整个网页在语义上分为几部分，而这将有效地改善屏幕阅读器对网页的分析质量，使视力障碍用户更好地浏览网页。</strong></p>\n<h2>HTML 语义化</h2>\n<p><strong>HTML 语义化属于增强页面可访问性的基础中的基础。</strong>通过使用语义化的 HTML 标签，我们可以方便地为网页中的各部分标记功能而不影响页面样式。随着符合 HTML 5 的现代化网页成为主流，语义化标签已被很大一部分网站所支持，我也不过多赘述了。就举几个常用的“地标性”标签吧：</p>\n<ul>\n<li>\n<code>header</code> 标签标记页眉，默认样式同 <code>div</code>，不要把它和 <code>head</code> 搞混了</li>\n<li>\n<code>main</code> 标签标记页面的主要内容，默认样式同 <code>div</code>\n</li>\n<li>\n<code>article</code> 标签标记文章（在 HTML 5 中它指任何独立或可复用的文本），默认样式同 <code>div</code>\n</li>\n<li>\n<code>footer</code> 标签标记页脚，默认样式同 <code>div</code>\n</li>\n<li>\n<code>nav</code> 标签标记页面导航栏区域，默认样式同 <code>div</code>\n</li>\n<li>\n<code>aside</code> 标签标记侧栏，默认样式同 <code>div</code>\n</li>\n<li>\n<code>section</code> 标签标记“一组内容”，你可以把它看作是划定网页中一块区域的通用标签，默认样式同 <code>div</code>\n</li>\n</ul>\n<p>只要用这些标签替代 <code>div</code> 而不是无脑使用 <code>div</code> 就能提高页面的可访问性。MDx 使用了这些标签来增强页面的可访问性。</p>\n<h2>下一步，ARIA</h2>\n<p>有的时候，出于一些原因，我们没法使用语义化的 HTML 标签，或者没有合适的语义化标签来标记内容，这时候<strong>我们就需要使用 ARIA (Accessible Rich Internet Applications，可访问的富互联网应用)。</strong>ARIA 的基础用法很简单，只要在相应元素上加上 <code>role</code> 属性指定该元素的功能即可。下面是一个简单的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;div role=\"navigation\"&gt;\r\n  &lt;ul&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page A&lt;/a&gt;&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page B&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page C&lt;/a&gt;&lt;/li&gt;\r\n  &lt;/ul&gt;\r\n&lt;/div&gt;</pre>\n<p>通过 <code>role=\"navigation\"</code>，我们把一个 <code>div</code> 标记为了导航栏区域。实际上，对屏幕阅读器来说，这和 <code>nav</code> 标签在语义上是一致的。上一节中的例子都可以分别用以下 ARIA Role 表示：</p>\n<ul>\n<li><code>role=\"heading\"</code></li>\n<li><code>role=\"main\"</code></li>\n<li><code>role=\"article\"</code></li>\n<li><code>role=\"contentinfo\"</code></li>\n<li><code>role=\"navigation\"</code></li>\n<li><code>role=\"complementary\"</code></li>\n<li><code>role=\"region\"</code></li>\n</ul>\n<p>除此以外，MDx 还使用了 <code>role=\"banner\"</code> 和 <code>role=\"search\"</code> 来分别标记页面中的顶部栏和搜索表单。另外，<strong>有的时候 <code>role</code> 属性还需配合 <code>aria-*</code> 属性一同使用</strong>，具体规则比较复杂，我就不在这里赘述了，具体可参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles\">WAI-ARIA Roles - MDN</a>。</p>\n<h1>媒体查询来帮忙</h1>\n<p>CSS 的媒体查询其实是一个非常强大的特性，<strong>妥善利用其中的一些特性，我们可以在网页外观上大大增强网页的可访问性。</strong>除了已经烂大街的“对浏览器窗口大小”响应的媒体查询，我会介绍 3 个很少有网站充分利用的媒体查询。</p>\n<h2>print</h2>\n<p><code>print</code> 媒体查询其实已经“历史悠久”了，<strong>只要使用 <code>@media print {...}</code> 就可以创建只在打印页面时生效的样式。</strong>通过这种方式，我们可以让页面在打印时应用一套为打印优化的样式，增强页面在物理纸张上的可访问性。</p>\n<blockquote><p>维基百科是对打印样式做了单独适配的著名例子。</p></blockquote>\n<p><strong>由于在打印的情况下，页面已经离开了“可交互”的范围，还有分页这种在屏幕中无需考虑的问题，要让页面在物理纸张上仍能被轻松地阅读，我们需要做一些特殊的适配。</strong>直接来看一个例子吧。以下是 MDx 针对打印情况进行的一些特殊优化，样式的具体理由已经写在了注释中。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media print {\r\n    /*隐藏不必要的元素*/\r\n    header, .mdx-ad-after-article, .mdx-ad-in-article, .mdx-post-money, .page-footer-nav, .mdx-same-posts, .spanout button, .mdui-drawer, .mdui-overlay, .mdui-menu, .mdx-share-img-dialog, .mdx-share-wechat-dialog {\r\n        display: none!important;\r\n    }\r\n\r\n    /*使用下划线标记链接*/\r\n    article a {\r\n        text-decoration: underline!important;\r\n    }\r\n    /*由于纸张不可交互，在链接后显示链接到的 URL*/\r\n    article a::after {\r\n        content: \"(\" attr(href) \")\";\r\n    }\r\n\r\n    /*强制白底黑字*/\r\n    html &gt; body {\r\n        background-color: white!important;\r\n    }\r\n    article p {\r\n        color: rgba(0,0,0,.8)!important;\r\n    }\r\n\r\n    /*对于纸张上的长文章，衬线字体拥有更好的可读性。以下字体列表来自 fonts.css*/\r\n    article {\r\n        font: 13pt Georgia, \"Nimbus Roman No9 L\", \"Songti SC\", \"Noto Serif CJK SC\", \"Source Han Serif SC\", \"Source Han Serif CN\", STSong, \"AR PL New Sung\", \"AR PL SungtiL GB\", NSimSun, SimSun, \"TW\\-Sung\", \"WenQuanYi Bitmap Song\", \"AR PL UMing CN\", \"AR PL UMing HK\", \"AR PL UMing TW\", \"AR PL UMing TW MBE\", PMingLiU, MingLiU, serif!important;\r\n    }\r\n\r\n    /*除部分元素外，禁止在元素内部分页*/\r\n    * {\r\n        page-break-inside: avoid;\r\n    }\r\n    article p, article a, #comments, article {\r\n        page-break-inside: auto;\r\n    }\r\n}</pre>\n<p>MDx 自 1.9.3 版本起已经包含了对文章页的打印样式优化。可以很容易地看出，优化后的样式在物理纸张上将更容易阅读。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\" alt=\"\" width=\"1345\" height=\"1602\" class=\"aligncenter size-full wp-image-1959\"></a>\n<h2>prefers-color-scheme</h2>\n<p><code>prefers-color-scheme</code> 是最近才被浏览器广泛支持的一个媒体查询，但它的功能却很强大：<strong>响应系统级黑暗模式。</strong>这样，我们可以在开启黑暗模式的系统中让网页具有更好的可读性。不过由于这个媒体查询直到最近才被广泛支持，因此大部分网站对此并没有进行适配。</p>\n<blockquote><p>一些适配这一特性的网站：少数派、微信公众平台（文章页）等。</p></blockquote>\n<p>通过像这样的媒体查询，我们可以在系统启用黑暗模式时让页面实时响应：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    body {\r\n        background-color: #212121;\r\n        color: rgba(255, 255, 255, .7);\r\n    }\r\n}</pre>\n<p><code>prefers-color-scheme</code> 一共有 3 个可能值：<code>no-preference</code>, <code>light</code> 和 <code>dark</code>。你也可以不像上面的例子那样默认使用亮色样式并在黑暗模式下启用黑暗样式，而可以反过来将黑暗样式作为默认，用亮色样式覆盖。在不支持的浏览器上将会显示默认样式（即媒体查询不会生效）。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<h2>prefers-reduced-motion</h2>\n<p>看名字就猜得出，<code>prefers-reduced-motion</code> 是和 <code>prefers-color-scheme</code> 师出同门的媒体查询。因此，和 <code>prefers-color-scheme</code> 一样，它也是在最近才获得了浏览器的广泛支持。它的作用也很强大：<strong>响应系统的“减弱动态效果”模式。</strong>这对某些不喜欢甚至无法接受动画的用户可能很有帮助。要知道，对有些用户来说这甚至是医疗上的必要。使用如下的媒体查询，我们可以在系统启用减弱动态效果模式时让页面实时响应，减弱动画：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-reduced-motion: reduce) {\r\n    /*只是一个示例，实际情况中可以保留一些淡入淡出效果*/\r\n    * {\r\n        transition: all 0s!important;\r\n        transform: none!important;\r\n    }\r\n}</pre>\n<p><code>prefers-reduced-motion</code> 只有 2 个可能值：<code>no-preference</code> 和 <code>reduce</code>，在不支持的浏览器上该媒体查询不会生效。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\" alt=\"\" width=\"792\" height=\"515\" class=\"aligncenter size-full wp-image-1962\"></a>\n<h1>黑暗模式适配</h1>\n<p>黑暗模式可不是简单地切换到黑底白字这么简单。<strong>单纯地使用黑底白字会导致页面元素之间对比度过高，文字刺眼，反而降低了页面的可访问性。</strong>我在下面总结了几条应用在了 MDx 中的黑暗模式优化规则和 Google 推荐的优化规则：</p>\n<p><strong>一是避免黑底白字。</strong>黑底白字看起来真的很难受，事实上，深灰和浅灰是黑暗模式最好的配色。比较下方例子里的两段文本，毫无疑问深灰色背景和浅灰色文字搭配的样式的可读性要比黑底白字高很多。（p.s. 有时候这条规则在白底黑字时也适用）</p>\n<p><strong>二是更改部分元素的亮度和对比度以增强可读性。</strong>你可能已经注意到了，下面优化的例子里标题文字的颜色改变了。很明显，未优化的黑暗模式中标题可读性不如优化的版本。在实际中，我们通常可以通过 CSS 滤镜来实现这一更改。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    h1 {\r\n        /*反相颜色后再将色相旋转 180 度，使亮度反相*/\r\n        filter: invert(1) hue-rotate(180deg);\r\n    }\r\n}</pre>\n<p><strong>三是避免让图片过亮。</strong>未经处理的图片通常会导致过高的对比度，降低可读性。在 MDx 中，我选择降低图片的亮度来避免图片刺眼，而 Google 的建议则是使图片灰度，不过这会影响图片的整体观感。无论是哪一种方案，都可以使用 CSS 滤镜来轻松实现。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    img { \r\n        /*MDx 方案*/\r\n        filter: brightness(.8);\r\n        /*Google 方案*/\r\n        filter: grayscale(.5);\r\n    }\r\n}</pre>\n<div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是未优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是经过优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n</div>\n<h1>其他细节</h1>\n<p>还有一些细节，虽然简单，但不可或缺。我把一部分没有在上文提到的 MDx 中的细节列在了这里。</p>\n<p><strong>一是允许页面缩放。</strong>在开发响应式页面时，很多网站会在页面头部添加这样一个 <code>meta</code>：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"&gt;</pre>\n<p>这样的 <code>meta</code> 设定了页面的宽度，却也固定了页面的缩放比例，用户难以手动放大网页。<strong>这样的设置对一部分视力障碍用户非常不友好</strong>，以至于苹果决定在自家的浏览器上忽略禁止缩放的 <code>meta</code>。按照 Google 的推荐，如果你在 MDx 设置中启用了“允许页面缩放”，那么 MDx 会输出这样的 <code>meta</code> 标签，允许页面进行五倍以内的缩放：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=5\"&gt;</pre>\n<p><strong>尽管很多时候放大页面会导致页面结构被破坏，但这大大增强了页面的可访问性，利大于弊。</strong>因此，在 MDx 中，“允许页面缩放”是默认启用的。</p>\n<p><strong>二是在跨设备阅读时同步阅读记录。</strong>这属于 MDx 的“元老级”功能之一。注意到页面右上角的那个“在其他设备上继续阅读”的按钮了吗？如果你滚动页面后重新点击它，你会发现二维码发生变化了。通过在二维码中记录阅读进度，用户在扫描二维码切换设备阅读时，MDx 在新设备上会自动滚动到和原设备上一致的位置——好吧，目前基于百分比的算法在某些情况下可能不太准，但我已经设计了一个更复杂但更精确的阅读进度记录算法，之后就会更新到 MDx 中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\" alt=\"\" width=\"1000\" height=\"574\" class=\"aligncenter size-full wp-image-1976\"></a>\n<p><strong>三是避免 Web 字体阻塞渲染。</strong>如果你在页面中使用了 Web 字体，在字体加载完成之前，浏览器可能不会渲染任何文本，这就导致用户可能需要等待一段时间才能开始浏览网页。Google 推荐使用 <code>font-display: swap;</code> 来向浏览器指定网页的 Web 字体渲染策略。这一规则会提供一个比较短的等待周期，如果在这段时间内 Web 字体没有完成加载，那么浏览器会以 fallback 字体渲染文本。任意时刻一旦 Web 字体完成渲染，浏览器就会使用 Web 字体重新渲染文本。这在大多数情况下都能满足可访问性的需求。</p>\n<p><strong>四是确保 html 元素具有合适的 <code>lang</code> 属性。</strong>这一属性声明了页面的主要语言，浏览器可以据此调整渲染策略，或者触发自动翻译；屏幕阅读器也能更好地阅读网页。</p>\n<p><strong>五是确保页面主要内容在丢失/禁用了 Javascript 甚至 CSS 的情况下仍然可用。</strong>作为一个以内容为主的网站，MDx 在禁用了 Javascript 的情况下页面主要内容仍然可用。这不只是为了 SEO，更是为了保证页面的可访问性。的确，目前的情况下，如果开启了 Lazyload，MDx 在禁用 Javascript 的情况下图片的确无法显示，但我会在后续版本中尽可能的优化这一问题。</p>\n<h1>附录：媒体查询开发技巧</h1>\n<p>有的时候，光有 CSS 响应媒体查询还不够，我们可能需要在 Javascript 中实时响应媒体查询。用如下代码就可以很简单地响应媒体查询：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let mql = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\r\nmql.addListener(handleMediaChange);\r\n\r\n//在添加监听后先调用一次，获得当前查询结果\r\nhandleMediaChange(mql);\r\n\r\nfunction handleMediaChange(mql){\r\n    if(mql.matches){\r\n        //查询匹配\r\n    }else{\r\n        //查询不匹配\r\n    }\r\n}</pre>\n<p>在开发上述媒体查询的过程中，我们需要频繁地切换系统的相应模式或者调出打印窗口。<strong>实际上，Chrome 提供了更简单的调试方法：</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1946\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\" alt=\"\" width=\"723\" height=\"681\"></a>\n<p>只要在这里更改模式，相关媒体查询就能实时生效。这不会影响其他标签页，在关闭开发者工具之后也会自动恢复系统设置。</p>\n","link":"https://flyhigher.top/develop/1912.html"},{"title":"MDx Blog 现已随 MDx 1.9.5 发布","date":"2020-01-22 17:54:11","description":"<p>随着 MDx 发布 1.9.5 更新，<a href=\"https://mdxblog.flyhigher.top/\" rel=\"noopener noreferrer\" target=\"_blank\">MDx Blog</a> 现已建立。我将会在 MDx Blog 中分享一些开发故事并发布 MDx 更新日志。</p>","link":"https://flyhigher.top/diary/1905.html"},{"title":"GitHub 2019 统计无垠版","date":"2020-01-12 13:02:00","description":"\n<h1>缘起</h1>\n<p>2019 年底，我突发奇想想要自己统计一番 GitHub 上存储库的一些信息。尽管 GitHub 有自己的<a href=\"https://octoverse.github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">年度统计</a>，我还是想试着自己爬取一下，说不定能挖出什么有意思的信息，何况这是我第一次有机会处理比较大量的数据，也算是一种学习的过程吧。于是花了一下午写了个简单的爬虫（时间都花在增加 Rate Limit 上了...），然后扔在了两台服务器上开始跑（GitHub  API 真是好文明）。</p>\n<p>从 2019.11.21 3 时到 2020.1.12 24 时的 52 天 21 小时内，我的爬虫一共爬取了<strong>与 2,024,705 个用户有关<sup>*</sup>的 14,651,923 个公共存储库的基础信息</strong>，平均每秒爬取 3.2 个存储库。据 GitHub 的官方数据计算，我爬取了大约 15% 的存储库信息，但由于封禁库和私有库的数量未知，我暂时无法确定我爬取的存储库占公共库的比例。同时由于存储库数量较多，基本可以认为爬取到的样本在时间尺度上已经足够随机，可以通过统计得出一般结论。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\" alt=\"\" width=\"700\" height=\"606\" class=\"aligncenter size-full wp-image-1892\"></a>\n<p>爬到自己了，合影.jpg</p>\n<p>那么下面就来看看统计出来的一些结果吧。爬虫的技术细节和数据集下载放在文末。</p>\n<p>* 指这些用户拥有至少一个库</p>\n<h1>统计信息</h1>\n<p><strong>以下统计结果均基于已放于文末的数据集。</strong>由于爬虫爬取的时间跨度长，加上我并没有完整爬取 GitHub 所有存储库，因此我<strong>不能保证以下统计结果符合真实情况</strong>，各位可以下载数据集或自行爬取进行验证。</p>\n<h2>一些数据</h2>\n<div>\n<div>\n<div>\n<span>3,120,930</span><br>总爬取用户数</div>\n<div>\n<span>44.7%</span><br>的存储库创建<br>自 Fork</div>\n<div>\n<span>6.59%</span><br>的账户被删除或<br>封禁<sup>1</sup>\n</div>\n<div>\n<span>23,913</span><br>单用户拥有最大<br>库数量<sup>2</sup>\n</div>\n</div>\n</div>\n<p><sup>1</sup> 基于用户 ID 规律合理推断<br><sup>2</sup> 统计范围仅限于当前数据集</p>\n<p>比较出乎我意料的是创建自 Fork 的存储库的占比。我预估这样的存储库占比不会太低，但没有想到能接近一半。此外单用户拥有最大库数量也大大超出了我的预期，<a href=\"https://github.com/pombredanne\" rel=\"noopener noreferrer\" target=\"_blank\">pombredanne</a> 这个用户名下拥有将近 24k 的存储库，不过绝大多数都是 Fork 来的，在情理之中。此外<strong>这个数据集中</strong>拥有最多存储库的账户其实是一个组织 <a href=\"https://github.com/gitpan\" rel=\"noopener noreferrer\" target=\"_blank\">gitpan</a>，这个组织拥有 36,377 个存储库。</p>\n<h2>语言</h2>\n<p><canvas></canvas><br>\n首先必须要说明的是，在这个榜单中我<strong>排除了 HTML 和 CSS</strong>，因为在严格意义上它们不属于“编程语言”。如果把它们计算进来的话，分别有 640,368 个和 361,425 个存储库的主要语言分别是 HTML 和 CSS，这样在这份榜单中它们可以排到第 6 和 第 10 名。JavaScript 毫无疑问获得第一，第二名 Python 的热度则和 JavaScript 相差将近一半。<strong>此外还有 2,448,486 个存储库未能识别出语言，占比 16.7%。</strong>在上面的榜单之外，与机器学习和数据科学相关的语言还有 Jupyter Notebook 排名第 13，R 排名 20，Julia 排名 43。</p>\n<p>说实话这份排名和 GitHub 官方的排名<strong>差别很大</strong>，除了前三名，后面的基本都不太一样。我的排名统计结果完全基于 GitHub 对于存储库的主要语言识别，加上我的存储库数据不完整，和官方的数据不同是很正常的，可以做一个参考，但大概率还是官方排名更加准确。</p>\n<h2>许可证</h2>\n<p><canvas></canvas></p>\n<p>自 GitHub 推出许可证功能以来，拥有许可证的存储库比例升升降降，却始终没有超过一半。<strong>选择一个合适的许可证对项目的良好发展真的很有帮助</strong>，要了解如何选择合适的许可证，请参阅<a href=\"https://www.runoob.com/w3cnote/open-source-license.html\" rel=\"noopener noreferrer\" target=\"_blank\">这篇文章</a>。</p>\n<p><canvas></canvas></p>\n<p>对于拥有许可证的存储库，MIT<del> 麻省理工许可证 </del>总是占比最大的；第二则是 Apache-2.0 许可证。此外，WTFPL 许可证也挤入了前 15 名。</p>\n<h2>星标</h2>\n<p><canvas></canvas><br>\nStar 数量毫无疑问是一个存储库受欢迎程度的体现，而 Star 数高的项目基本上大家都了解过。<strong>截至爬取结束时间</strong>，GitHub 中 Star 数最多的库是 <a href=\"https://github.com/freeCodeCamp/freeCodeCamp\" rel=\"noopener noreferrer\" target=\"_blank\">freeCodeCamp</a> <del>非常完美的驼峰命名法</del>，其次则是著名项目 <a href=\"https://github.com/996icu/996.ICU\" rel=\"noopener noreferrer\" target=\"_blank\">996.ICU</a>。<a href=\"https://github.com/vuejs/vue\" rel=\"noopener noreferrer\" target=\"_blank\">Vue</a> 现在的 Star 数已经稳压 <a href=\"https://github.com/facebook/react\" rel=\"noopener noreferrer\" target=\"_blank\">React</a> 一头，Vue YES! 此外 <a href=\"https://github.com/sindresorhus/awesome\" rel=\"noopener noreferrer\" target=\"_blank\">awesome</a> 也挤进第七名。<br><canvas></canvas><br>\n由于 Star 需要时间积累，新项目的 Star 数量很可能是比不过老项目的，这就会导致有实力的新项目无法出现在榜单中。因此我还统计了日均 Star 数，试图通过日均 Star 数来反映项目受欢迎的程度。<strong>由于正热门的项目会比老牌热门项目有优势，这一项的统计范围是 2020-01-01 之前的所有存储库。</strong>996.ICU 和 freeCodeCamp 再次出现在前 10 名，而最近的热门项目 <a href=\"https://github.com/wenyan-lang/wenyan\" rel=\"noopener noreferrer\" target=\"_blank\">wenyan</a> 则飙升至第 2 名。此外还有 <a href=\"https://github.com/menzi11/BullshitGenerator\" rel=\"noopener noreferrer\" target=\"_blank\">BullshitGenerator</a>，即最近热门的“狗屁不通文章生成器”和 <a href=\"https://github.com/evil-huawei/evil-huawei\" rel=\"noopener noreferrer\" target=\"_blank\">evil-huawei</a> 分列第 3 和第 5 名。<br><canvas></canvas><br>\n说实话这个曲线<strong>比我预估的陡多了。</strong>你可能已经注意到了，这个图表的横轴不是均匀缩放的，实际上曲线要比看起来陡很多。同时受爬取方式的影响，GitHub 中 Star 数较少的存储库数量远比我爬取到的多。也就是说，<strong>实际情况下曲线远比这个图表上的陡。</strong>拿点 Star 不容易啊。</p>\n<h2>名称</h2>\n<p><canvas></canvas><br>\n终于知道了原来存储库的名称是有长度限制的...尽管最长有 100 位，<strong>大部分人还是喜欢 8 位长的存储库名。</strong>此外 1 位长的名称也比我预估的要多一些。举几个存储库名称长度为 100 的例子吧。</p>\n<ul>\n<li>testing-something-elsetesting-something-elsetesting-something-elsetesting-something-elsetesting-some</li>\n<li>acts_as_validated_config_so_app_will_not_run_in_random_situation_and_qa_gays_will_not_cry_to_you_whe</li>\n<li>............................................________-....................................-.---......</li>\n<li>----------------------------------------------------------------------------------------------------</li>\n<li>nyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyan</li>\n</ul>\n<p>...创造力有够丰富的。</p>\n<p><canvas></canvas></p>\n<p>最近 GitHub 上有一种奇怪的风气，那就是建立 Awesome 合集<del>骗 Star</del>。看起来 Awesome 存储库满地都是，甚至还出现了关于 Awesome 的 Awesome 合集这种迷惑行为。于是我统计了一下，<del>还好，</del>占比<del>才</del> 0.5% 不到<del>，Awesomer 们任重而道远呐</del>。</p>\n<p><canvas></canvas></p>\n<p>尽管要在 github.io 上托管网站，存储库不一定要以 .github.io 结尾，但我还是统计了一下。拥有这类存储库的用户比我预想的要少一些，看来还有很多人没有完全发挥 GitHub 的完整实力啊<del>（比如我 Doge）</del>。同时<strong>这类存储库在所有存储库中占比 1.12%</strong>，看起来不多<del>，不过至少比 Awesome 多</del>。<br><canvas></canvas><br>\n看得出来 GitHub 对于用户名长度的限制是 1-40 位。用户名最短的 27 位占据了 <code>A-Z</code> 外加 <code>-</code> 的所有可能，而用户名最长的则是一个组织 <a href=\"https://github.com/UOIT-RESEARCH-database-information-group\" rel=\"noopener noreferrer\" target=\"_blank\">UOIT-RESEARCH-database-information-group</a>。不知道是巧合还是某种规律，<strong>最受欢迎的用户名长度和存储库名称长度一样，都是 8</strong>，有点意思。</p>\n<h2>创建时间</h2>\n<p><canvas></canvas><br>\n由于我并没有完整爬取所有存储库，我只能以相对值来统计每月新增存储库数量的变化趋势。<strong>在这个图表中，我将 2017-09 的数据设为了 100%。</strong>你一定一眼就能注意到 2017 年 6,7,8 月的“一柱擎天”。<del datetime=\"2020-02-05T09:18:30+00:00\">我第一次看到这个数据的时候的确愣了一下，不过就着这条新闻看就能明白为什么了：<strong>2017 年 6 月微软收购 GitHub。</strong></del></p>\n<blockquote><p>重新确认了一下，微软收购 GitHub 比这个高峰晚了一年，目前我对这个高峰没有什么很好的解释，如果你有什么思路的话欢迎评论。</p></blockquote>\n<p><strong>需要注意的是这张图表中我排除了 Fork 存储库</strong>，因为 Fork 存储库在 API 中的创建时间是原始存储库的时间，会影响整体趋势。此外，GitHub 中还有一个创建于 2007 年 10 月 29 日的存储库，那就是 <code>id: 1</code> 的...</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"mojombo\" data-mdxgithubp=\"grit\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/mojombo/grit\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>而它的创建者正是 GitHub 的创始人之一 Tom Preston-Werner。</p>\n<h1>一些有趣的结果</h1>\n<p>当初打算自己爬的目的之一就是想看看能不能挖出什么有意思的信息，结果真的有一些不挖不知道的信息。</p>\n<h2>奇怪的存储库</h2>\n<p>在爬取到的所有存储库中，<strong>有 3 个存储库是“无主”的</strong>，即它们的 owner 属性为空。这三个存储库的基本信息如下。</p>\n<div class=\"mdui-table-fluid mdui-table-hoverable\"><table class=\"mdui-table\">\n<thead><tr>\n<th>ID</th>\n<th>名称</th>\n<th>Forked</th>\n<th>Star</th>\n<th>语言</th>\n<th>许可证</th>\n<th>创建于</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>72385291</td>\n<td>vscode-redprl</td>\n<td>否</td>\n<td>10</td>\n<td>TypeScript</td>\n<td>apache-2.0</td>\n<td>2016-10-31 08:50:01</td>\n</tr>\n<tr>\n<td>181218346</td>\n<td>electron-sys</td>\n<td>否</td>\n<td>10</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-14 03:20:56</td>\n</tr>\n<tr>\n<td>181391880</td>\n<td>node-sys</td>\n<td>否</td>\n<td>6</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-15 09:33:08</td>\n</tr>\n</tbody>\n</table></div>\n<p><strong>更奇怪的是这三个存储库“无主”的情况还不一样。</strong>第一个存储库可以通过 <code>/repositories</code> 这个 GitHub API 找到， <a href=\"https://api.github.com/repositories?since=72385290\" target=\"_blank\" rel=\"noopener noreferrer\">这个链接</a>中的第一个存储库就是它；而其余两个存储库甚至无法在 <code>/repositories</code> API 中找到。不过就算能在 API 中找到第一个存储库，它的 <code>html_url</code>，即 <code>https://github.com//vscode-redprl</code> 仍然是不可访问的。这可能是 GitHub 早期的一个 Bug 导致的，不过我仍然对爬虫是如何找到这三个存储库的以及这些 Stars 是哪里来的感到好奇。</p>\n<h2>奇怪的用户名</h2>\n<p>在爬虫爬了一段时间以后，API 中突然开始出现大量的以 fdp 开头的 18 位乱码作为用户名的用户。这些用户拥有的存储库和 starred 的存储库都为 0，而他们的 <code>html_url</code> 为 404。以下是几个例子。</p>\n<ul>\n<li>fdpEpolGCEdQX4ZlRJ</li>\n<li>fdp8XaVrdtmDZnO5pR</li>\n<li>fdp8XRAGnwAOkTr2Ya</li>\n</ul>\n<p>由于我的爬虫并没有超过 Rate Limit，所以我排除了这是污染数据的可能。我怀疑这可能是某种 Bot 账户，于是一边更新爬虫过滤掉了这些用户，一边给 GitHub 支持发邮件问了具体情况。过了两天 GitHub 回复我说这些是<strong>被自动判为可疑进而被封禁的用户</strong>（原话是 they have been flagged by our automated measures for detecting suspicious behavior）。<del>想到我正在疯狂爬取 GitHub，突然害怕.webp</del></p>\n<p>行吧。</p>\n<h1>技术细节</h1>\n<p>爬虫使用 Python3 编写，数据库使用 MySQL。爬虫共使用了 4 个 API Token，在两台服务器上分布式爬取。爬取思路为：</p>\n<ol>\n<li>通过 <code>/users</code> API 遍历用户，每个请求最多获取 30 个用户信息</li>\n<li>循环 30 个用户，分别获取 <code>/users/&lt;user_name&gt;/starred</code> 和 <code>/users/&lt;user_name&gt;/repos</code> API 中的存储库信息，每个请求最多获取 100 个存储库信息，超过 100 个的分页获取</li>\n<li>提取存储库信息，插入数据库。对于已存在的存储库，更新数据</li>\n<li>获取下 30 个用户信息</li>\n</ol>\n<p>由于爬取过程中我多次调整了爬虫逻辑，爬虫爬取到的用户 ID 区间并非连续的，具体区间为1-839586, 14800001-14885493 及 28965251-31161101。</p>\n<h1>免责声明</h1>\n<p>本站会尽可能地提供准确信息，但本站不对此文章中信息的准确性和即时性及带来的任何影响负责。</p>\n<p>本站不代表 GitHub 官方，本文仅供学习之用，请不要将本文内容直接用于任何商业项目中。</p>\n<h1>数据集下载</h1>\n<p>导出的 SQL 文件大约为 1.38GB，全部放在了 GitHub 上（在危险的边缘试探.webp</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"github-analysis-2019\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/github-analysis-2019\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>此外我也提供了 MEGA 下载，链接<a href=\"https://mega.nz/#F!juxm3A6T!7Vwpzi82W1OFrqTLu1A1pQ\">在这里</a>。</p>\n","link":"https://flyhigher.top/develop/1564.html"},{"title":"Milkice 跨年红包解谜 Writeup 及无垠跨年红包解谜答案","date":"2020-01-02 04:29:19","description":"\n<blockquote><p><del>又到了水文章的时间呢</del></p></blockquote>\n<p>先说明一下，这篇文章原本不是在计划中的，而原来说好的「在路上的两篇」文章<del>绝对不会咕</del>。我自己的红包答案本来打算直接塞在年度总结里的，结果发现稍微有些长，再加上我还花了一些时间解了<a href=\"https://milkice.me/\">奶冰</a>的红包解谜游戏，就打算把两个解谜过程放在一起单独写一篇文章。<del>真是个水文章的好理由</del>（被打死</p>\n<h1>奶<del> 子 </del>冰的红包</h1>\n<p>奶冰的红包题目比我的难多了，所以让我们先从难的开始吧。首先看一下<a href=\"https://milkice.me/2019/12/31/2019-summary/\">题目</a>：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1524\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\" alt=\"\" width=\"746\" height=\"410\"></a>\n<p>入口是 <code>happy.2020.milkice.me</code>，扔到浏览器里面表示找不到 IP，那么大概率就是 DNS 的 TXT 记录了，查一下得到 <code>nb2hi4dthixs63ljnrvwsy3ffzwwkl3tivrvezluomxxg5dsmvqw2ltqmnqxa3th</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1525\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\" alt=\"\" width=\"896\" height=\"278\"></a>\n<p>第一眼没看出来是什么编码，直觉是 BaseXX 系列的编码，加上提示“不只有 Base64”，可以推断出是 Base32，转大写解码得到 <code>https://milkice.me/sEcRets/stream.pcapng</code>。是个 URL，下载得到一个 Wireshark 文件，打开一看是和某 USB 设备的通讯抓包。<del>不会做，不做了。</del></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1526\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\" alt=\"\" width=\"1500\" height=\"813\"></a>\n<p>奶冰提示我“Google 上搜得到”，结合第二条提示搜索“wacom pcapng”找到了<a href=\"https://blogs.tunelko.com/2017/02/05/bitsctf-tom-and-jerry-50-points/\">这篇文章</a>（<del>这™就是答案啊</del>）。看起来是一样的套路，即通过解析数据得到数位板上画的内容，于是按文章的思路筛选出数位板发给主机的数据，导出，然后再用 tshark 导出文本数据。本来我想直接用文章中的 POC 的，结果折腾半天因为源的蜜汁原因库没装上，于是按文章中给出的数据结构自己写了段代码，分别导出 X、Y 轴数据扔进 Excel 画散点图。（<del>别问我为什么用 Excel，因为我手边没有更好的工具了</del>）</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1528\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\" alt=\"\" width=\"1280\" height=\"530\"></a>\n<p><span>翻车现场之一</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1539\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\" alt=\"\" width=\"1000\" height=\"286\"></a>\n<p><span>懵逼奶冰.webp</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1533\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\" alt=\"\" width=\"1500\" height=\"462\"></a>\n<p>看得出有手写文字，不过是上下颠倒的，翻转图片得 <code>https://milkice.me/2020/uso.zip</code>。是个 zip，下载打开一看，有密码。<del>不会解，不做了。</del> 第一反应是暴力解密码，但是暴力跑了 15 分钟还是没有跑出来。暴力太不优雅了，肯定不是正确思路，但奶冰什么都不肯说了。不过在这时我终于发现第一个红包口令码就藏在压缩包的注释中，Get。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1544\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\" alt=\"\" width=\"806\" height=\"593\"></a>\n<p>然而题还没解完，回去看提示，看到提供了 osu 谱面下载，于是打算不管怎么样先下载来看看。然而 osu 谱面下载要登录，只好又花了几分钟找到第三方站点，成功下载。这时候可以注意到 uso.zip 里有个同名文件（432314 Mike Greene - Bill Nye the Science Guy Theme Song (Chinese Intro).osz），可以联想到是明文攻击。好吧，上 ARCHPR，十秒解出。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1530\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\" alt=\"\" width=\"462\" height=\"643\"></a>\n<p><span>现场还原.jpg</span></p>\n<p>.osz 文件并不是明文，猜测是压缩包（和 .pptx 一个思路嘛），于是改后缀 .zip 顺利打开。然后红包口令码就藏在奶冰的 .osu 文件中了，由提示可知是明文，打开即可得到。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1542\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\" alt=\"\" width=\"457\" height=\"255\"></a>\n<h1>我的红包</h1>\n<p>相比起来<a href=\"https://flyhigher.top/diary/1464.html\">我的题目</a>就简单很多了嘛...三天时间一共发出了 25 个红包，包括一位重复领取的🌚，比前几年还是多了一些的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\" alt=\"\" width=\"500\" height=\"306\" class=\"aligncenter size-full wp-image-1554\"></a>\n<p><span>这位同学以后请不要多次领取🌚</span></p>\n<p>那么来看看答案吧。</p>\n<h2>第一阶段</h2>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>首先观察字符串，可以发现 <code>.</code> <code>/</code> <code>_</code> 等一些 ASCII 字符原样留在了字符串中，而其他字符被由 <code>=</code> 和十六进制构成的某种编码所替代。如果你正好有所了解，你应该能认出这是 Quoted-printable 编码，这是一种常用于邮件中的编码，可以用<a href=\"https://mothereff.in/quoted-printable\">这个页面</a>解码。如果你不了解，你也应该可以发现这种编码和 URL 编码非常相似。如果你把 <code>=</code> 替换为 <code>%</code>，那么你就可以用各种方法顺利地把它按 URL 编码来进行解码，最后可以得到 <code>αхtоn.іm/соdе_оf_2020_⒈mρз</code>。这个字符串里大部分字符都不是 ASCII 字符，只是长得像而已。根据第一个提示“全是 ASCII 字符”，按样子把字符串用 ASCII 字符抄一遍，可以得到最终 URL 为 <code>axton.im/code_of_2020_1.mp3</code>。</p>\n<h2>第二阶段</h2>\n<p>下载音频，可以听出音频是经过某种处理的白噪音。白噪音的特点是各频段的功率都均匀分布，在白噪音上做文章，很容易就可以联想到线索藏在频谱中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1534\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\" alt=\"\" width=\"1200\" height=\"719\"></a>\n<p>频谱被处理成了 24x3 的网格，结合第二条提示“24x3，横向读取”可以推断出是将频谱当作二进制读取，得到 <code>01111001 01110010 01100011 00101110 01101101 01100101 00101111 00110010 00110000</code>，转为 ASCII 字符可得 <code>yrc.me/20</code>。</p>\n<h2>第三阶段</h2>\n<p>打开上一步得到的页面，提示要求输入十位数密码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1536\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\" alt=\"\" width=\"663\" height=\"460\"></a>\n<p>如果你在上一步注意到了这个音频文件奇怪的属性，你可以反应过来这里的密码就是 <code>2000202020</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1537\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\" alt=\"\" width=\"421\" height=\"651\"></a>\n<p>如果你没有注意到，查看页面代码可以看到一条注释 <code>&lt;!-- Tips: the attribute of the audio --&gt;</code> 将你引导向音频文件的属性。输入密码，解锁即可进入下一步。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1535\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\" alt=\"\" width=\"397\" height=\"223\"></a>\n<h2>第四阶段</h2>\n<p>可以看到是一张图片，内容为“<del>.JPG</del>”和“.ZIP”。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter size-large wp-image-1532\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n<p>和去年一样的套路，下载图片，将后缀名改为 .zip 然后打开，可以看到 README.txt。</p>\n<h2>最后一步</h2>\n<p>查看 README.txt 的内容，可以了解到需要去 🤔.axton.cc 获取红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1538\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\" alt=\"\" width=\"1131\" height=\"278\"></a>\n<p>扔到浏览器里会出现奶冰同款找不到 IP，于是可以联想到 TXT 记录。唯一的问题是 🤔 这个 Emoji 需要如何处理。域名使用 Punycode 将 Unicode 字符转换为 ASCII 字符，特点是以 <code>xn--</code> 开头。如果你把上面这个域名扔进浏览器，你会发现它变成了 <code>xn--wp9h.axton.cc</code>。然后查询 TXT 记录，即可得到红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1527\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\" alt=\"\" width=\"804\" height=\"557\"></a>\n","link":"https://flyhigher.top/develop/1519.html"},{"title":"无垠 2019 年度总结","date":"2019-12-29 12:25:52","description":"\n<p>又是时间飞快的一年...写 2018 总结的情景似乎还在眼前，转眼居然已经到 2019 年末了。</p>\n<p>2019 年，发生了太多事情，包括真的转折了人生的高考，这也导致我博客更新的不多（难以置信居然才更了两篇...），不过两篇技术性文章已经在路上了，可以期待一下。</p>\n<p>2019 年我也学了不少东西（单指技术方面），比如终于认真学了 Vue（但是还要练手）。书买了一大堆，看完的倒是没几本orz</p>\n<p>呼，好吧，是时候回顾一下充满坎坷的这一年了。2019 年还剩下最后两天，希望 2020 年，我能做得更好。</p>\n<h1>一些数据</h1>\n<p>照惯例先来看看一些数据吧。今年是统计系统完整统计了的第二年，终于可以和去年的数据比较一下了。以下数据的统计范围是 2019年1月1日0时至 2019年12月29日20时。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 26,901 (<span>+4%</span>)，年 PV 76,583 (<span>+3%</span>)，日均 UV 73.7，平均停留时间 5分13秒 (<span>-13.8%</span>)，平均跳出率 53% (<span>+20.5%</span>)。一年有效文章数 2 (<span>-50%</span>)，新增评论 439 条。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\" alt=\"\" width=\"1000\" height=\"1143\" class=\"aligncenter size-full wp-image-1511\"></a>\n<p>有趣的是今年文章数腰斩，访问数反而小有提升。<del>如果我哪天不更新了，访问数是不是可以无限大呢？</del></p>\n<p>今年博客最大的改动就是把整体风格切换到了 Material Design 2（当然这是 <a href=\"https://flyhigher.top/develop/788.html\">MDx</a> 中的可选功能，给自己打个广告2333），此外还有比较失败的 WebP 改造计划，因为和缓存冲突已经回滚了。<a href=\"https://flyhigher.top/develop/1245.html\">ABS 系统</a>进展不大，主要是真的没有太多时间，还是要再学习一个。</p>\n<h2>个人主页</h2>\n<p>虽然个人主页的 TODO List 列了老长，但今年完全没有更新，也没有推广，从今年 8 月底开始还莫名被某墙认证了，直到 11 月底才恢复，于是今年总访问量比去年少了很多，</p>\n<p>有多少呢？这么少：总 UV 2,141 (<span>-65.9%</span>)，总 PV 2,744 (<span>-66.6%</span>)，日均 UV 6 (<span>-65.9%</span>)，平均停留时间 62秒 (<span>+19.2%</span>)。主要来源是知乎和 V2EX，还有一些甚至是从微信来的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\" alt=\"\" width=\"1000\" height=\"1103\" class=\"aligncenter size-full wp-image-1512\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 8 次，新增 171 commits，2 种语言的翻译，Star 数增加了 175，现有 408。感谢所有人的支持，尤其是 <a href=\"https://github.com/Sn0bzy\" rel=\"noopener noreferrer\" target=\"_blank\">Hasan CAN</a>, <a href=\"https://github.com/yechs\" rel=\"noopener noreferrer\" target=\"_blank\">Ye Shu</a>, <a href=\"https://github.com/StarryLeo\" rel=\"noopener noreferrer\" target=\"_blank\">StarryLeo</a>, <a href=\"https://github.com/DCTewi\" rel=\"noopener noreferrer\" target=\"_blank\">冻葱Tewi</a>, <a href=\"https://github.com/syfxlin\" rel=\"noopener noreferrer\" target=\"_blank\">Otstar Lin</a> 等为 MDx 做出了不小贡献的你们。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：<a href=\"https://flyhigher.top/photograph/1309.html\">上手</a> DJI OSMO Pocket</li>\n<li>四月：最后一次参加浙江省普通高中学业水平考试</li>\n<li>五月：MDx 喜提 300 Stars</li>\n<li>六月：高考 <del>炸了，差亿点点上浙大</del>\n</li>\n<li>六月：入手了 Oneplus 7 Pro</li>\n<li>六月：和同学一起去成都重庆旅行</li>\n<li>六月：第一次近距离感受到地震</li>\n<li>六月：<a href=\"https://flyhigher.top/diary/1411.html\">入手</a>了一台雷蛇灵刃 15，目前是主力机</li>\n<li>七月：参与组织 THE Hack 2019 活动</li>\n<li>七月：面基了 <a href=\"https://itroy.cc/\" rel=\"noopener noreferrer\" target=\"_blank\">Tory</a>, Bie Shi 和 <a href=\"https://oxz.me/\" rel=\"noopener noreferrer\" target=\"_blank\">FHYunCai</a>\n</li>\n<li>八月：一个人去厦门武汉转了一圈，拍了自己的第一个 Vlog</li>\n<li>八月：入手了一个 Kindle Paperwhite 4，没有泡面可以压，于是用来看英文小说了</li>\n<li>八月：加入 TEDxNingbo 志愿者团队</li>\n<li>八月：和 Ralph 面基</li>\n<li>八月：入手了一个 Yubikey</li>\n<li>九月：人生第一次参加雅思考试 <del>7分，蛮开心的</del>\n</li>\n<li>十月：入手了一个 Samsung Galaxy Watch Active 2 <del>觉得不值</del>\n</li>\n<li>十一月：MDx 达到 400 Stars</li>\n<li>十一月：为 TEDxNingbo 设计开发的 H5 上线</li>\n<li>十一月：入手了第一台胶片相机，试图入坑胶片摄影</li>\n<li>十一月：参加 TEDxNingbo 2019 大会</li>\n<li>十二月：<del>我 Cytus II 入门了</del>\n</li>\n</ul>\n<h1>跨年红包</h1>\n<p>这算「传统习俗」了。和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2020年1月2日。</p>\n<p>今年的解谜旅程，从下面这个字符串开始。</p>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>由于今年的题目比以前稍微难了一些，所以今年的红包金额还是比较大的，而且不限量，尽你所能试一试吧。</p>\n<p>一点你可能用得上的提示：URL 里全是 ASCII 字符 / 24x3，横向读取。</p>\n<p><a href=\"https://flyhigher.top/develop/1519.html\">答案</a>已公布。</p>\n<h1>跨年海报</h1>\n<p>这算是另一个「传统习俗」（笑）。因为我有做跨年海报的习惯，所以以下就是今年份的海报啦。</p>\n<p>用了 C4D+PS，还有我的一整个下午。</p>\n<p>提前祝各位新年快乐！</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter wp-image-1467 size-large\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n","link":"https://flyhigher.top/diary/1464.html"}]