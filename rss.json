[{"title":"四十岁的女人难道真的没人要了吗？","date":"2022-03-24 11:54:51","description":"\n<p data-pid=\"S5mTvY5E\">如果你自己就是这种想法，那没错，确实是没人要了。</p>\n<p data-pid=\"8vGFONJE\">但是你一定也见过40岁成熟美丽、落落大方的魅力女人吧，这样的女人身后少不了追求者，你能说她们没人要？</p>\n<p data-pid=\"NyUzCAVX\">如今的社会，对女性来说已经不是裹小脚的封建时代了，越来越多的女性都活成了自己希望的样子，所以，我要告诉你，40岁的生活不可怕，可怕的是女人贬低自己，或者认同那些歧视女人的观念：</p>\n<blockquote data-pid=\"auDGzNIi\">女人四十就是豆腐渣。<br><br>女人只能找比自己大的男人，预防老了被抛弃。<br><br>女人年纪大了，就年老色衰了，要让自己像花瓶一样美丽，才能取悦男人。</blockquote>\n<p data-pid=\"Q1ylwDdY\">有这样观念的女人，就是有人要（结了婚），那她也无法在婚姻中拥有自己的位置。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-02b6fc4a9c7dab9a5f94f40b3d2d3300_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"989\" data-rawheight=\"661\" data-watermark=\"original\" data-original-src=\"v2-02b6fc4a9c7dab9a5f94f40b3d2d3300\" data-watermark-src=\"v2-1d5d4ccfff75508779d91d1c2d7cf33c\" data-private-watermark-src=\"v2-11e08190bdd4abfec4486afc4c3a0a91\"></p>\n<ul><li data-pid=\"GQmpmE5c\"><b>我们再反过来想一想，40岁的女人，为什么会觉得没人要，或者说她们之前为什么没有走进婚姻呢？</b></li></ul>\n<p data-pid=\"yIhRRNKV\">因为她们内心深处，在做这样的纠结：到底是<b>成为自己，还是做别人期望的自己？</b></p>\n<p data-pid=\"SYzwz33i\">很多大龄未婚的姑娘都有这样的心灵困境，造成这种困境的，是来自社会与文化的巨大变革。</p>\n<p data-pid=\"OmjGwXA4\"><b>一方面是传统文化中的相夫教子，一方面是来自<a href=\"https://www.zhihu.com/search?q=%E7%8E%B0%E4%BB%A3%E6%96%87%E5%8C%96&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A1271256698%7D\" class=\"internal\">现代文化</a>的冲击——活出真我。</b></p>\n<p data-pid=\"GdE31CKm\"><b>所以，40岁的你，是不是没人要，都是你自己做出的选择。</b></p>\n<p data-pid=\"nMI8CnyO\">所有人在面对人生的分岔路口时，都会有2个选项。</p>\n<p data-pid=\"JPuZtnAt\"><b>一边是结婚生子的安全感，一边又心有不甘。</b></p>\n<ul>\n<li data-pid=\"NE4QrmpE\">选择了安全感，那就不要再纠结于我的自由怎么办，我的灵魂何处安放；</li>\n<li data-pid=\"r8QU1aMy\">如果你心有不甘，总以为自己还有更优选项，那你就继续等，不要抱怨没人要。</li>\n</ul>\n<p data-pid=\"OF-FG-at\">因为这世界上就没有这么好的事，让安全和浪漫紧随相伴。<b>你想同时拥有二者，那叫贪心。</b><br><br>其实现在的中国已经和以前很不一样了，一切都变得更为自由。</p>\n<p data-pid=\"mvSZUNCT\">“有人要”与“没人要”，都只是一个选择。</p>\n<p data-pid=\"mB2V7Ly3\">你做出选择，承担可能的后果，仅此而已。</p>\n<p data-pid=\"PdclWtrh\">当20岁的你，选择了独自绽放，就要为自己的选择负责，不要觉得“没人要”是“40岁”的错。</p>\n<p data-pid=\"BVWjspNf\">真正清醒的人都是拥有自我认知的人，所以，40岁的女人，与其想着事到如今，自己还有没有人要，不如先了解自己是个什么样的人，受限在那些地方。</p>\n<p data-pid=\"-OlkZs9g\">说白了，有没有人要你其实是别人的事，而你得先弄清楚自己想要什么？</p>\n<p data-pid=\"KlH3zgSQ\"><b>如果你需要更多的情感分析或婚姻问题解决方案，可以来找我</b> <a class=\"member_mention\" href=\"http://www.zhihu.com/people/2e9bec45021b054809f01c4b20b665d8\" data-hash=\"2e9bec45021b054809f01c4b20b665d8\" data-hovercard=\"p$b$2e9bec45021b054809f01c4b20b665d8\">@婚恋专家赵悦辰</a> <b>加V聊聊，我会用专业的心理学视角，为你拆解婚恋难题。</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-2e2ebd91b0db17894da1ad5e5e8da37c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"295\" data-rawheight=\"267\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"B0mcoMuN\"><a class=\"member_mention\" href=\"http://www.zhihu.com/people/2e9bec45021b054809f01c4b20b665d8\" data-hash=\"2e9bec45021b054809f01c4b20b665d8\" data-hovercard=\"p$b$2e9bec45021b054809f01c4b20b665d8\">@婚恋专家赵悦辰</a>，中科院心理研究所心理学硕士、国家二级心理咨询师、婚恋关系咨询专家、中国社工协会社会心理健康服务指导中心理事、社会心理健康服务指导中心心里援助工作站副站长、心之助心理情感平台联合创始人、央视电台北京电台特邀心理专家，15年来帮助2万多名来访解决问题。</p>\n<p data-pid=\"MD8gmO_9\">多次接受电台、电视台、报刊杂志等多家媒体专题采访，为二十多家企业讲授压力管理、亲子教育、婚恋情感等方面的心理讲座。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/yue-21-19-64?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">婚恋专家赵悦辰</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/503533937/answer/2404974127?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">731 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/403660899?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">31-40岁的女人都喜欢什么？</a><br><a href=\"http://www.zhihu.com/question/403660659?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">24-30岁的女人都喜欢什么？</a><br>\n","link":"http://www.zhihu.com/question/503533937/answer/2404974127?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"已婚男会为了爱情离婚吗？","date":"2022-03-24 09:27:53","description":"\n<p data-pid=\"vXEP9lk4\">我之前说过，在我的咨询案例中，很多背叛婚姻的男人是不会离婚的，但是你要说一个离婚的都没有吗？那当然也不是。</p>\n<p data-pid=\"npvLT0TS\"><b>已婚男也有可能会离婚，甚至宁愿净身出户也要离，但你说他们是为了爱情吗？应该也不是。</b></p>\n<p data-pid=\"5tFDOcRu\"><b>因为婚外找到真爱，真的是一个极其小概率的事件。</b></p>\n<p data-pid=\"PaoHaS4q\">我们不妨来看看，哪些已婚男会选择离婚？</p>\n<p data-pid=\"NEXx2w4S\"><b>一、脑疯期的男人</b></p>\n<p data-pid=\"j-ja4xmT\">一般在背叛后就和婚外女人陷入“蜜月期”的男人，多半是处于“脑疯期”，这样的男人在当前的状态里，确实会认为自己和婚外那个女人是真爱，甚至爱的难舍难分，没有她就活不下去了。</p>\n<p data-pid=\"eR9zC2DJ\">这个时候，他们最常见的做法就是逼离原配，因为这时候在他眼中，原配就是阻碍他们爱情的“绊脚石”。</p>\n<ul><li data-pid=\"vIrRWF3c\">也就是我们常说的<b>“逆反心理”</b>，你越阻止我，我越觉得我们之间的爱情真伟大，为了爱情我可以赴汤蹈火，我要离婚！必须离婚！</li></ul>\n<p data-pid=\"WI_rZbUE\">这样的男人是不是看起来就是为了爱情离婚的那一挂，我告诉你，错了！</p>\n<p data-pid=\"FVFp4iG9\"><b>这样的男人就是一时的冲动的代名词，</b>如果原配真跟他离婚了，他如愿和婚外女人结婚之后，婚姻也不会幸福长久，因为当这一切归于平静的时候，他之前对于婚外女人的“滤镜”就碎了。</p>\n<p data-pid=\"FPyqhj2L\">这时候，他会发现：“啊？我的女神怎么也会打嗝、放屁？”、“天啊！这个女人怎么这么懒？”、“原来她不化妆还没我前妻漂亮，我之前怎么会看上她啊。”</p>\n<p data-pid=\"glsGS7Wd\">这样的男人是没有<b>反思能力</b>的，他不会想我有什么问题，当他眼中的“真爱滤镜”碎了，就会继续找下一个“女神”，那小四、小五也就陆续而来了。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-98e123f8db2ddc48a84e5ec76bfc067b_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3138\" data-rawheight=\"3648\" data-watermark=\"original\" data-original-src=\"v2-98e123f8db2ddc48a84e5ec76bfc067b\" data-watermark-src=\"v2-6fc8b479b36b7d238a155caa11734a0e\" data-private-watermark-src=\"v2-506ef3c80748b551201a071165e611f7\"></p>\n<p data-pid=\"nIDQuE9K\"><b>二、中年危机的男人</b></p>\n<p data-pid=\"nRB8nMX7\">如果一个男人中年危机了，那这个男人就开始“作”了，怎么“作”呢？</p>\n<blockquote data-pid=\"00qgHkYB\">背叛婚姻，找个还不如自己原配夫人的婚外女人，做尽荒唐事，哪怕要抛弃一切，也要离婚，甚至宣称要为那个婚外女人倾家荡产。</blockquote>\n<p data-pid=\"DajFtDYy\">那这个男人你觉得他对那个婚外女人是真爱吗？当然也不是！</p>\n<p data-pid=\"V8ClWm_V\">他之所以这么做，哪怕倾家荡产也要离婚，不是因为他爱婚外那个女人，而是要“弥补”自己。</p>\n<p data-pid=\"LuhfOTVz\">他觉得自己前半生是为了别人而活，现在他要为自己而活，所以他们试图“变成年轻人”，去作，去闹。</p>\n<p data-pid=\"8bREsKvp\">这样的男人你能说他是为了追求真爱吗，这只不过就是一种挣扎，都知道人到中年是怎么也回不到少年的，所以他们的梦也终会醒来。</p>\n<p data-pid=\"j3lDE_mT\"><b>所以，总结就是，已婚男会为了爱情而离婚的概率，就像你中彩票的概率，小之又小。</b></p>\n<p data-pid=\"6edWBsnE\"><b>如果你有更多情感问题，可以按下图所示私信找我</b> <a class=\"member_mention\" href=\"http://www.zhihu.com/people/f0acd87dbdd58922b460cd0e9f13bebe\" data-hash=\"f0acd87dbdd58922b460cd0e9f13bebe\" data-hovercard=\"p$b$f0acd87dbdd58922b460cd0e9f13bebe\">@婚恋咨询师卢悦</a> <b>加个好友或者点击下方</b><a href=\"https://www.zhihu.com/consult/people/724343828181450752?utm_source=wechat_session&amp;utm_medium=social&amp;utm_oi=1300384437893488640\" class=\"internal\">向我咨询</a><b>，我们来1对1沟通，告诉我更多相关的信息，我来帮你分析解决。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-a2e4d2d878bb05878e6bb482838324ec_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"295\" data-rawheight=\"256\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"0yCMJzO-\"><a class=\"member_mention\" href=\"http://www.zhihu.com/people/f0acd87dbdd58922b460cd0e9f13bebe\" data-hash=\"f0acd87dbdd58922b460cd0e9f13bebe\" data-hovercard=\"p$b$f0acd87dbdd58922b460cd0e9f13bebe\">@婚恋咨询师卢悦</a>，知乎十年新知答主。70后，婚恋作者，央视、<a href=\"https://www.zhihu.com/search?q=%E5%8C%97%E4%BA%AC%E5%8D%AB%E8%A7%86&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2388367058%7D\" class=\"internal\">北京卫视</a>、凤凰卫视多档栏目特约心理专家，心之助女性情感心理平台联合创始人。著有《<a href=\"https://www.zhihu.com/search?q=%E7%88%B1%E6%83%85%E6%9C%89%E6%AF%92&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2388367058%7D\" class=\"internal\">爱情有毒</a>》、《爱到绝处便逢生》、《过日子就像玩闯关游戏》、《<a href=\"https://www.zhihu.com/search?q=%E4%BA%B2%E5%AF%86%E5%85%B3%E7%B3%BB%E7%9A%84%E9%87%8D%E5%BB%BA&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2388367058%7D\" class=\"internal\">亲密关系的重建</a>》</p>\n<p><img src=\"https://pic1.zhimg.com/v2-721a4fdc4dad5669e0930a6cfe371445_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1245\" data-rawheight=\"825\" data-watermark=\"original\" data-original-src=\"v2-721a4fdc4dad5669e0930a6cfe371445\" data-watermark-src=\"v2-d5c218f426bf3f15f2244b4afe601485\" data-private-watermark-src=\"v2-83905a75ea6e5e58fdb201d569d415ee\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/lu-yue-46?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">婚恋咨询师卢悦</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/517222643/answer/2405088504?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">147 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/510283249?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">已婚6年，有一儿一女，老公精神出轨，身体出轨，该不该继续，要不要离婚？</a><br><a href=\"http://www.zhihu.com/question/519133931?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">我和前妻想再在一起，现任死活不离婚，怎么办？</a><br>\n","link":"http://www.zhihu.com/question/517222643/answer/2405088504?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"新玩意 099｜少数派的作者们最近买了啥？","date":"2022-03-24 09:26:16","description":"眼镜防雾探秘👓️<a href=\"https://sspai.com/post/72271\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72271"},{"title":"一派·在线沙龙 07：2022 年的知识付费应该怎么做？","date":"2022-03-24 08:36:57","description":"周五（3 月 25 日）晚 20:00 ，来少数派 B 站直播间畅所欲言<a href=\"https://sspai.com/post/72259\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72259"},{"title":"意识先行，工具辅助：谈谈我们该怎样分辨虚假信息","date":"2022-03-24 08:00:00","description":"拂去层层笼罩在真相前的迷雾，我们可以这样努力。<a href=\"https://sspai.com/post/72274\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72274"},{"title":"路特斯发布首款纯电 SUV TYPE 132 预告图，你对这款 SUV 有哪些期待？","date":"2022-03-24 07:41:09","description":"\n<p data-pid=\"ES0U9nXC\">作为工程师生涯最后一个项目，谈谈我的期待，这个项目代号是Lambda ，也叫做Type132，早期一直是Lambda喊得习惯，可能后面都改称呼了。</p>\n<p data-pid=\"INgeWowp\">我当时作为LOTUS项目组的第29名员工，算是非常早期的接触了这个项目的定型，从VTS的设定，到平台的选型，到最后开始初级仿真，到最后我就离职了。</p>\n<p data-pid=\"ZRXf88-j\">type132按照原定计划是要冲击纽伯格林的SUV的圈速纪录的，而且这台纪录车，不会跟EP9一样稀缺，只有几个投资人能买到。type132的高性能版一般富豪也是可以买到手，也可以合法上路。如果这个既定目标没有改变的话，那么今年type132应该会做这件事儿。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-a55a7552e818c359ab8326596f78972a_720w.jpg?source=b1748391?rss\" data-caption=\"性能车，是一定要去纽伯格林的\" data-size=\"normal\" data-rawwidth=\"1200\" data-rawheight=\"630\" data-watermark=\"original\" data-original-src=\"v2-a55a7552e818c359ab8326596f78972a\" data-watermark-src=\"v2-5dfcb40d9302ecffc68e216a6086c142\" data-private-watermark-src=\"v2-feb761ee4c5b3de7ec764345d60dbc85\"></p>\n<h3>动力性能和续航</h3>\n<p data-pid=\"0WgAUWcS\">type132按照计划性能，从高到低，从加速3s内到5s不等，极速将超过250kph，对于高性能车来说，极速就是秀技术，我可不开，但是你不能没有。</p>\n<p><br></p>\n<p data-pid=\"iNnHmw5P\">电动车极速跟燃油车不一样，燃油车一般以到功率平衡点为极速，但是电动车一般因为电机转速限制而到极速，而且单速比的电动车就面临两个问题，是跟理想一样鸡贼用250kw大速比去搞一个不错的01成绩呢，还是用个主流的速比，极速也兼顾一下，放弃01一点点呢。更费钱更秀技术的做法就是靠突破电机转速的上限，到20000转甚至更多，把头尾都兼顾。显然对于奶爸车来说，顾头不顾尾是可以理解的，思域雅阁也是这样干的。但是对于定位高性能的超跑纯电SUV来说，type 132似乎没有退路，头尾都要顾着，所以我很好奇最后电机的性能和速比到底怎么设定。</p>\n<p><br></p>\n<p data-pid=\"c_PTdKk0\">对于性能SUV来说，极限续航反而是不重点，重点是补能的速度，通过充电速度来体现品牌定位和区隔，极氪上说来又没来的800V，在路特斯上一定会来的。</p>\n<p><br></p>\n<h3><b>造型和空气动力学</b></h3>\n<p data-pid=\"j1V3UgYh\">Lotus是一个英国超跑，所以它的造型必须展示英国汽车工业的魅力，我不太希望看到德国车死板的样子和意大利车风骚的感觉，因为我是一个小小工程师，但是又过于热爱汽车，我经常去其他部门瞎打听，只是知道，企划部同事说，这台车的造型将是百分之一百的英国风味。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-7cc7da52b6be7025cd9900d8bfd7cd05_720w.jpg?source=b1748391?rss\" data-caption=\"EVORA是吉利之前的lotus\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"540\" data-watermark=\"original\" data-original-src=\"v2-7cc7da52b6be7025cd9900d8bfd7cd05\" data-watermark-src=\"v2-2fba3f1490eb6645b2182779834531bb\" data-private-watermark-src=\"v2-95b185fb0b421888e3e45369b9c2f1c9\"></p>\n<p data-pid=\"2NGlb3L9\">而我觉得英国风味就是，克制而优雅，EVORA最原始的设计稿，感觉就像被保鲜膜包裹一样，浑身丝滑圆润，但是又有着足够的力量感，就像英国的喷火战机一样，优雅丝滑。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-5bedcb1fa0b1f2b4e7444838ce8d494c_720w.jpg?source=b1748391?rss\" data-caption=\"喷火战机是耗尽了英国战机的颜值\" data-size=\"normal\" data-rawwidth=\"1500\" data-rawheight=\"938\" data-watermark=\"original\" data-original-src=\"v2-5bedcb1fa0b1f2b4e7444838ce8d494c\" data-watermark-src=\"v2-295687abfac3ec0b5868d19822423398\" data-private-watermark-src=\"v2-983a31e5da74494931b2f47cdf22b966\"></p>\n<p data-pid=\"gvexPU0c\">但是EVIJA 作为吉利入主路特斯之后的电动跑超，会发现EVIJA相对于EVORA的初始设计多了很多可见的空气动力学设计，</p>\n<p><img src=\"https://pica.zhimg.com/v2-5709402d65cb4f727b438bfadb11c417_720w.jpg?source=b1748391?rss\" data-caption=\"EVIJA是电动超跑定性产品\" data-size=\"normal\" data-rawwidth=\"6655\" data-rawheight=\"4437\" data-watermark=\"original\" data-original-src=\"v2-5709402d65cb4f727b438bfadb11c417\" data-watermark-src=\"v2-8b340db3bf5312554b80fb179662f90b\" data-private-watermark-src=\"v2-e22f809456441b2403b297fbfd0cdf3d\"></p>\n<p data-pid=\"bcC78L-G\">再考虑到EMIRA的发布，所以我相信Type132应该会借鉴EVIJA和EMIRA的造型，就车身有明显可见的空气动力设计。</p>\n<p data-pid=\"wiE81fQw\">我觉得造型非常重要，因为百万的SUV就没有动力不够用的，更何况是纯电动的百万SUV，所以造型必须一眼入魂，让富豪们直接高潮下单。</p>\n<p><br></p>\n<h3><b>轻量化和驾驭感受</b></h3>\n<p data-pid=\"AlbpfqnQ\">毫无疑问Type132是一台路特斯，不管是燃油时代的路特斯还是电动时代的路特斯，它都遵循路特斯的DNA，就是轻量化。所以我很好奇，type 132的最后质量能做到多少，虽然我们早期在设定VTS的时候，是有这个数据的，但是我不知道后面有没有更加极致的推进这个数据。作为参考，主打性能的ES8的整备质量是2.45吨，Type 132如果能真的做到2吨以内，我认为是比较出色的，卡宴的性能版也就2.1吨。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-5db00a3bfa1dd043b11ef3b4c0320ec1_720w.jpg?source=b1748391?rss\" data-caption=\"lotus诞生的平台\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"307\" data-watermark=\"original\" data-original-src=\"v2-5db00a3bfa1dd043b11ef3b4c0320ec1\" data-watermark-src=\"v2-11732beb1a1e8928f200bc4e5537a52e\" data-private-watermark-src=\"v2-d5a41f54360b049a88df29b9a204d511\"></p>\n<p data-pid=\"cXB9beKX\">type132应该是多个版本是四驱型号，或许会保留一两个后驱型号，底盘的科技会点满，比如空气悬架，比如CCD阻尼避震器，比如后轮转向，比如前后防倾杆。各种底盘科技加持，加上多种动力模式的设计，一定会让这台新时代的超跑SUV拥有多变的驾驶感受，想轻微推刷圈速，还是更甩点获得更多乐趣，我觉得大家可以在这台车发挥想象力。</p>\n<p data-pid=\"haPbQsZa\">高性能版的type 132一定是后轴双电机的，甚至更大胆点前后轴均双电机，全车四电机，这样可以做到汽油车难以想象的AYC（active yaw control）能力，为了控制它的千匹的马力，应该会匹配定制的超宽性能SUV轮胎，加上LOTUS宽扁的造型，一定很帅。</p>\n<p><br></p>\n<p data-pid=\"OZ1LSePz\">当然作为本人最后一个工程项目的参与者，我跟各位网友一样，非常期待Type132的诞生，按照官方计划，应该是本月发布。</p>\n<p></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wangxiaopeng-?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">王晓鹏PPGarage</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/523829700/answer/2405104665?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/52737556?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">从设计角度，如何评价阿尔法罗密欧发布的首款 SUV Stelvio ？</a><br><a href=\"http://www.zhihu.com/question/438628815?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">售价44.8-50.6万元，如何评价蔚来全新发布的旗舰轿车ET7？</a><br>\n","link":"http://www.zhihu.com/question/523829700/answer/2405104665?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价《画江湖之不良人》第 5 季第 11 集？","date":"2022-03-24 07:16:43","description":"\n<p data-pid=\"tZmdzkmS\">大好我鱼今十一。<br></p>\n<p data-pid=\"xDnC6Ojh\"><br>就如我之前所说，巴也大人是本季最有始有终的角色，你看，我们还是有实话的。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-0da8f4b9ba0f3ddf0b082e22f5dc9c20_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1478\" data-rawheight=\"632\" data-watermark=\"watermark\" data-original-src=\"v2-0da8f4b9ba0f3ddf0b082e22f5dc9c20\" data-watermark-src=\"v2-a42bace0ac52be93f66601aedd0d4368\" data-private-watermark-src=\"v2-bbf32dc48d7cb51ac30f212b178a285b\"></p>\n<p data-pid=\"RuZmn7so\"><br><br>而为我们巴也大人送葬的，就是四尸祖战力巅峰——破烂收集者——万能表情包载体——正骨小能手——蚊之友——侯咩咩之姐——冥海无岸——阿姐！<br>啊不，萤勾！</p>\n<p><img src=\"https://pic3.zhimg.com/v2-48e6a075c3f7d1b03b9e56df236e4e2f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"496\" data-rawheight=\"169\" data-watermark=\"watermark\" data-original-src=\"v2-48e6a075c3f7d1b03b9e56df236e4e2f\" data-watermark-src=\"v2-ecfdd7b2221a2561ce6926033e074f97\" data-private-watermark-src=\"v2-b4ad0bb2d81e427c0724d6b0e5cf0868\"></p>\n<p data-pid=\"iJuWJl0W\"><br><br>是的，萤勾就是四大尸祖里最能打的，请注意，是最能打的。大家看到她小女孩儿的形态，有没有思念一人一教的冥帝老师，两者外形上有着几分相似，侯咩咩也说了阿姐是练功所致，而冥帝修炼的是与降臣共创的《九幽玄天神功》，这其中的联系……就先不多说了。<br><br>在最早交代的“冥海无岸”尸祖萤勾时，有一副枷锁，打开那副枷锁，便会生灵涂炭，在阿姐第一次出场时便是遍地尸体，而那一副枷锁，就是阿姐。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-183529694f465146422f5122e9e649c0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"325\" data-watermark=\"watermark\" data-original-src=\"v2-183529694f465146422f5122e9e649c0\" data-watermark-src=\"v2-cab11209f8955c9f5bed5a54d971a4a6\" data-private-watermark-src=\"v2-c731c7e8b7602ed0def1b3f3a237c003\"></p>\n<p data-pid=\"q8Ad_tHc\"><br><br><br>萤勾拥有强大的内力，一手正骨功夫触者即碎，血色的气流只是她强大内力以气化形的展现方式，如果阿姐是啥都会啥都不精，那么萤勾就是什么都不会只会杀人……论打架杀人，我是专业的。最后的打戏，我们尽可能的在尺度内展现萤勾的冷血强悍，“战无不胜”的巴也连破防都办不到，最后在萤勾强大的气场压迫下破防了……所谓一力降十会，凡是被萤勾所触碰到的东西，都会被震颤成渣，握住弯钺便震碎巴也一臂，随后震碎弯钺将内力注入碎片之中爆射清场，没有一句废话（话都被阿姐说完了…）。为了彰显萤勾强大的压迫感，最后让她一把抓住玩命奔逃的巴也手腕，就像小姑娘可怜巴巴的紧紧抓住大人的手“叔叔不要走”，然而这个小手牵大手是“送叔叔走”，巴也在极致的惊恐中话还没出口就被捏成麻花了……<br><br>而萤勾强悍如此，也是敌不过自己，她抹不掉阿姐，这是她强大的代价。<br><br>上一集姬如雪背着李星云冲出通文馆，巴尔巴戈没有第一时间追出去，大家看到这一集最后想必也知道为什么了，从第六集开始我们就一直在展示巴戈的狂傲自大，她敢将李嗣源的女婿石敬瑭踩在脚下就可见一斑，在被老李“der”跪下再到被老李咬断红蛇，巴戈心里只想看着老李跪在自己面前，再像踩着石敬瑭一样，践踏他的尊严。<br>然而蛇尸的覆灭彻底让巴戈破防了，巴尔推开她躲过姬如雪那一剑和掷出的晋星刺看似是在救巴戈，实则是阻她，此刻她难以从浑浑噩噩中及时清醒。而巴尔为何不追？因为他就是三千院假扮的，一直藏在李嗣源身边。第十集结尾的预告中，本来是他转身的镜头，但为了十一集情绪递进，再揭一层面纱的效果，将悬念留在这里揭露。</p>\n<p><img src=\"https://pica.zhimg.com/v2-5c10d12fd58b32c32435f1d7a6e632c1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2048\" data-rawheight=\"852\" data-watermark=\"watermark\" data-original-src=\"v2-5c10d12fd58b32c32435f1d7a6e632c1\" data-watermark-src=\"v2-f226d21660b77826ce52eb68a3af0fc2\" data-private-watermark-src=\"v2-5d95c1aad0645c31a01fbb6fbc74f048\"></p>\n<p data-pid=\"ePYkA3Up\"><br><br>大家可能会想，他既然是三千院，为什么不救下上官为什么不帮助老李他们？为了大局，为了维系住不良人组织另立新帅，为了替死去的不良人报仇。他心里只有不良人，不良人不能没有不良帅，你老李不是说没有不良人也要救下太原吗？是的，也许你可以，但你知道你可能会付出什么吗？三千院知道老李此行可能会流血会牺牲，但他不会管，这是你老李必须经历的，就像大帅说的“天子你是不是要有所失才能有所悟啊”。老李做了这么多，却从没说过一句他要成为不良帅，因为他再像也成为不了袁天罡，他决定要做什么了却只能自己摸索前路。现在你经历了，你活着就好，活着告诉我，你要成为不良帅。<br><br>其实姬如雪救走李星云时，龙泉剑遗留在了通文馆，我们有一段巴尔巴戈返程时，巴尔持上官云阙剑斩杀巴戈的戏份，三千院也会在那里展露真面目，用上官剑剥掉巴戈的人皮，再到李星云和姬如雪离开岐国时会有一匹马在城门口等候李星云，上面会有龙泉剑。但因为篇幅有限我们拿掉了，没办法，大家也知道我们的现状，只得取舍。然而情节不能动，巴戈得死，我想让她死的很惨，但我们目前只能这样。<br><br><br>当然大家也请记住最后骆小北的情绪。<br><br>最后再说说阿姐和侯卿的“血仇孽缘”，是的，阿姐深爱小红很合理不是嘛，大家现在能理解萤勾有多崩溃了嘛。我萤勾，御姐、高冷、强大、嗜血；我阿姐，这是啥味道！你还我小红命来！吔屎啦雷！想想侯卿和萤勾站在一起，同样的高冷高逼格，多么炫酷的姐弟啊。现在侯卿会拿着个笛子找阿姐切磋音律，并且认可小红的存在并透露一丝悲伤，他仙风道骨的背后变得有那么一丝人情味儿了，主角团一众有不可推卸的责任！Doge</p>\n<p><img src=\"https://pic3.zhimg.com/v2-a3cda8c2a3b8adbfef5648341797a97b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1578\" data-rawheight=\"578\" data-watermark=\"watermark\" data-original-src=\"v2-a3cda8c2a3b8adbfef5648341797a97b\" data-watermark-src=\"v2-0b6092f4806d167eb29b89e3a0355c14\" data-private-watermark-src=\"v2-da2af4bb559eadee60e8c1f7d799ca27\"></p>\n<p data-pid=\"OSBXHdC7\"><br><br>下集见。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/qiu-dao-yu-5-64?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">十万个秋刀鱼</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/517087086/answer/2405056220?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">108 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/522413482?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价《画江湖之不良人》第5季第10集？</a><br><a href=\"http://www.zhihu.com/question/517086941?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价《画江湖之不良人》第 5 季第 8 集？</a><br>\n","link":"http://www.zhihu.com/question/517087086/answer/2405056220?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"App+1 | Android 12 装机必备，免 root 实现 Material You 二次定制：Repainter","date":"2022-03-24 06:30:00","description":"Material You 距离你我手中的 Android 设备已经没那么遥远了，这个 app 则能帮你进一步实现 Android 12 配色方案的二次定制。<a href=\"https://sspai.com/post/72269\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72269"},{"title":"超越罐头：艾尔登法环与下一代开放世界","date":"2022-03-24 03:15:00","description":"\n<p data-pid=\"vvpN158o\">《艾尔登法环》(Elden Ring，以下简称法环)的成功已经毫无悬念。</p>\n<p data-pid=\"kxpuHG94\">虽然很多玩家还在辩论魂和开放世界的结合到底好不好，Steam的好评率也还没有上涨到好评如潮，但平台销量、在线数、媒体评分、用户口碑和在所有视频和直播平台的热度，都已经证明了“类魂游戏”（Souls-like，这已经是Steam一个成文玩法Tag了）这次的成功，证明了宫崎英高这次的开放世界冒险是成功的，证明了From Software和宫崎英高已经跻身全世界最顶级的游戏研发团队之列。</p>\n<p data-pid=\"By92eS-x\">几乎所有想和法环正面作战的游戏，从2月18日的《地平线2：西部禁域》、3月1日的《影子武士3》到3月4日的《三角战略》，几乎都被淹没在了法环玩家的热情之中。它必然会挑战2022年的最佳游戏宝座，甚至可能成为整个疫情时代的最佳游戏。疫情极大地影响了期间所有游戏的开发进度，很多游戏都能看到肉眼可见的内容和品质折损，例如我曾经写过的《赛博朋克2077》，好不容易才上线的《消逝的光芒2》，还有类似《Far Cry 6》、《战地2042》、《光环无限》等一大票大作，都是明显的疫情受害者。疫情期间的玩家信心和耐心也更差了，几乎每款新的付费大作在Steam上线，都会面临一轮差评狂潮，玩家不是批判画面、帧数就是批判Bug，就连法环也不例外，上线首日一度到达了褒贬不一的差评率。</p>\n<p data-pid=\"wdBolIbW\">然而，接下来发生的事情，仿佛那个拿破仑的笑话重演。</p>\n<p data-pid=\"dMFTvYUy\">第一天：“宫崎老贼帧数低下的新作在Steam登陆褒贬不一”</p>\n<p data-pid=\"tITqGusm\">第二天：“卑鄙无耻缺少引导的开放世界导致玩家广泛抨击，From这样的小公司不应激进”</p>\n<p data-pid=\"QiCZzzar\">第三天：“熔炉骑士和狮子粗暴的AI处理，令传统魂系动作玩家困扰”</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-0a7abab26f6b202b917b9ddd23e7398a_b.jpg\" data-size=\"normal\" data-rawwidth=\"1937\" data-rawheight=\"808\" class=\"origin_image zh-lightbox-thumb\" width=\"1937\" data-original=\"https://pic3.zhimg.com/v2-0a7abab26f6b202b917b9ddd23e7398a_r.jpg\"><figcaption>陛下，宫崎拿破仑在神坛登陆了！</figcaption></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"LJHfMZf7\">第四天：“满月女王和碎星拉塔恩的BOSS战体现出了From和马丁合作的价值”</p>\n<p data-pid=\"n_NhK7cs\">第五天：“永恒之城诺克隆恩的每个角度都能截图当作壁纸，体现了宫崎监督的审美”</p>\n<p data-pid=\"30NhUyjw\">第六天：“宫崎先生重返神坛！菈妮和仿生泪滴万岁！”</p>\n<p data-pid=\"dRkbsTPz\">从数据上你能明显看到，随着他们游戏进度的推进，绝大多数玩家迅速地从差评方转向了好评方，并坚定地将好评比率锁定在了优势位置，而在这个过程之中评论数和销量甚至仍然在一路上涨。如果去掉前三天的差评，数据已经到达了好评如潮的标准。发行商Bandai Namco公布，法环首月销量已经超过了1200万套（日本超过100万套）；大多数统计网站和评论家都认为，这款游戏的销售速度将刷新魂系列的所有销量记录，达到首年全球2000万套甚至更高的销量数字。这当然意味着巨大的、不可置疑的商业成功。</p>\n<p data-pid=\"_wZygKgQ\">宫崎拿破仑是怎么做到的？这就是旗舰本文想讨论的话题。</p>\n<p data-pid=\"m145L5wI\">同时，你也会看到，许多第一次通过法环接触魂系列的玩家，甚至是对魂系列了解较少的游戏开发者都表现出了相当程度的不适应性：这样一款游戏怎么能够在大众玩家、专业媒体和游戏主播中获得如此巨大的成功呢？育碧斯德哥尔摩（在开发《阿凡达》）的用户体验总监Ahmed Salama在推上抨击了游戏的用户体验设计，而地平线2的任务设计师则回复法环没有任务设计——理所当然地，这两位被热情的法环粉丝网暴到打滚：你们这些做罐头的人也敢碰瓷？</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-fd1cfef815de9c1d845336078074838d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"550\" data-rawheight=\"424\" class=\"origin_image zh-lightbox-thumb\" width=\"550\" data-original=\"https://pic2.zhimg.com/v2-fd1cfef815de9c1d845336078074838d_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"bP5J2xEp\">但我们确实要承认：客观来看，法环在易用性上并没有那么好，被这套体验和路边的飞扑大熊打到退坑的新褪色者真不是一个两个。如果你照着法环的UI和UX设计，去做一个刺客信条或者全境封锁，这个游戏恐怕真会被大家打到3分。法环之所以能够超越和击败育碧和索尼的罐头开放世界，是因为它做对了更多其他的事情，这些事情对于每个游戏设计师都有价值。</p>\n<p data-pid=\"0X25Sypt\">关于魂系列的核心玩法和碎片化叙事研究，旗舰曾经有一篇长文<a href=\"https://zhuanlan.zhihu.com/p/25481394\" class=\"internal\">魂的进化史</a>，请各位读者自行取阅。那么，我在这里就不赘述已经讲过的“魂like”动作和关卡设计部分，直接跳到法环和开放世界的设计，来讨论大家最关心的新的设计。</p>\n<p data-pid=\"8pAEON32\"><b>本世代竞争最重要的问题：公式化开放世界的问题出在哪里？</b></p>\n<p data-pid=\"DiW68cM4\">要讨论法环对开放世界设计的贡献，首先我们来回顾所谓“罐头”的开放世界游戏是什么样子的。</p>\n<p data-pid=\"G9oCuelA\">“罐头”，或者说公式化开放世界（Checklist Openworld Game）虽然被玩家们当梗反复吐槽，但这个品类仍然是整个游戏市场上最重要、商业价值最高且开发难度最高的品类。几乎每个头部游戏公司都有自己的开放世界拳头产品：罐头总厂育碧几乎全是开放世界自不用说，R星手握GTA和大镖客两个天下第一，微软有Bethesda的上古辐射全家外加光环无限，索尼有蜘蛛侠地平线对马岛，任天堂的红帽绿帽小畜生也全都开放世界化了，EA有Bioware的龙腾和质量效应，CDPR和Techland这些新兴3A干脆就是抱着开放世界的大腿成长起来的。就连日本的公司们也同样依靠开放世界支撑，世嘉手握如龙，卡普空怪物猎人进化成世界，SE造了FF14和FF15——而这次的法环就是Bandai Namco和From Software联手进攻开放世界的协力大作。从市场份额上来说，除去数量有限的PVP爆款巨作，整个主机和PC端的游戏行业就是这些开放世界巨作所支撑的（如果加上大家都知道的“那个游戏”，其实开放世界在移动端的份额也不算小了）。</p>\n<p data-pid=\"VCuZtq1Z\">玩家们虽然天天给这些罐头作品打差评，甚至时常褒贬不一，但销量和点击率更加诚实：当开放世界大作和线性/关卡大作同时出现时，前者几乎都会把后者碾压得看不到影子。乍看之下，玩家们确实在开放世界游戏里确实留下了不少差评；但与此同时，他们中的绝大多数，对新发售的线性关卡制游戏看都不会看一眼。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-6436a394098bc7a34189dd16c9771ef8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1392\" data-rawheight=\"1412\" class=\"origin_image zh-lightbox-thumb\" width=\"1392\" data-original=\"https://pic1.zhimg.com/v2-6436a394098bc7a34189dd16c9771ef8_r.jpg\"></figure><p data-pid=\"apYX4MWD\">就以2022第一季度这个时间点来说，正好有一对核心玩法非常相似的作品同时在这个季度上市：消逝光芒2对影子武士3。两者都是以跑酷+战斗作为核心，只是一款是开放世界动作，一款是跑酷射击……结果，当开放世界这个重量级砝码登上舞台后，线性关卡的一方立刻承担了巨大的压力。更糟糕的是，现代线性游戏不仅框架不如开放世界游戏，甚至连单一关卡体验都敌不过开放世界了——影子武士3的线性关卡，甚至还不如消逝光芒2里的开放世界关卡精巧！甚至就连Game Freak都能把自己的口袋妖怪回合制玩法转化成开放世界然后获得满堂喝彩，我也实在想不到有哪个玩法不应该转化成开放世界了。顺带一提，仁王组的最终幻想+魂系新作，《最终幻想起源》也紧跟着法环上市了，但关卡制+刷刷刷的传统结构要直面魂系巨头法环，看起来也是凶多吉少……</p>\n<p data-pid=\"14RAystL\">那么，所谓的“公式化开放世界”究竟是什么？其中的“公式”指的就是游戏中的“清单”（Checklist）。这是个很难翻译准确的词，所以最早将这个词翻译成中文的人用了“公式化”来描述这套设计。用语言描述这个概念同样很麻烦，所以我还是看图说话：这张来自Reddit的图片，原始标题为“如果育碧来做艾尔登法环”。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-73cc5b6f321636d06a47cde65e011e64_b.jpg\" data-size=\"normal\" data-rawwidth=\"989\" data-rawheight=\"556\" class=\"origin_image zh-lightbox-thumb\" width=\"989\" data-original=\"https://pic1.zhimg.com/v2-73cc5b6f321636d06a47cde65e011e64_r.jpg\"><figcaption>如果宫崎育碧来做艾尔登法环</figcaption></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"PhBUadw0\">构成“公式化”的主要元素几乎都体现在了这张图上。所有这些设计元素可以被分为两组：一组是易用性（Accessibility）和用户体验（User Experience）的游戏设计，类似按A跳跃、按X激活提示、当前任务进度、切换快捷键、升级提示这些都属于本组；另外一组则是关于游戏内容指引（Direction）的游戏设计，类似罗盘、大世界中的引导光柱和问号、小地图上的问号、角色提示对话、任务目标提示等等都属于这一组。我再提供一张对比图，这两组设计会更加清晰。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-c523328a0b8c7fd288904493ecc8f840_b.jpg\" data-size=\"normal\" data-rawwidth=\"1200\" data-rawheight=\"675\" class=\"origin_image zh-lightbox-thumb\" width=\"1200\" data-original=\"https://pic1.zhimg.com/v2-c523328a0b8c7fd288904493ecc8f840_r.jpg\"><figcaption>这图不是我截的，我截了七八张也和原图不像</figcaption></figure><p data-pid=\"pSMI6fXQ\">绝大多数法环玩家看到这张恶搞改图，恐怕都立刻会发出爽朗的笑声，嘲笑其他“过度设计”的游戏：你看这张真正的法环UI！多么简洁、清晰、隐晦而不失有效的引导！果然公式化开放世界是错的，宫崎英高和法环才是对的啊！在中国玩家中，这种二分法可能会更加盛行：育碧式的可用性和指引设计，会令玩家们想起用各种图标、系统、活动铺满界面的国产网游和手游，而法环简洁的界面则和它的玩法一起象征着当代游戏的最高水平，支持哪边简直是天经地义般明显的事情……</p>\n<p data-pid=\"Zgru1MX5\">等等，请停一下。这种“简洁好”、“繁杂坏”的故事固然易于理解，但它是真的吗？UI是这里的核心矛盾吗？From是一个主张反其道而行之，不做任何易用性和指引设计的公司吗？答案并非如此。</p>\n<p data-pid=\"tmaDw7mx\">如果我们打开法环，会发现里面到处都是恶魂、黑魂、血源们没有做过的易用性设计和指引优化，甚至他们还在不停尝试做更多新的易用性；也许再过几年，这张恶搞图上的部分设计就会变成现实。</p>\n<p data-pid=\"fGzQBWKu\">例如，之前所有的魂类游戏，都没有一张可以传送的大地图；这次法环有了——你可能还记得，在黑魂1里面你需要打掉小半个游戏才能获取在篝火之间传送的能力。以前从来没有过的指引功能，实际上这次也实现了：你可以在地图上标记出几十根光柱，用来替自己设计一条引导路线，这个光柱引导系统甚至比绝大多数开放世界的引导都更加明显。法环没做一排0-9的快捷键，但确实做了额外的快捷按钮，可以通过Y+方向快速使用。随着版本更新，更多的提示也被加进了游戏里：比如1.03版本，虽然仍然没有准备任务列表，但玩家已经可以在地图上看到所有曾经对话过的NPC图标。战斗方面From同样也不是什么都不做的，只狼中，From已经在尝试通过音效、粒子、架势跳和“危”提示来给玩家提供更易懂的敌方行动提示，以便让玩家更容易对策；这代对一些噩兆、大蛇、蒙格之类的boss，宫崎英高甚至直接提供了对策道具和装备来方便玩家通过。我相信，绝大多数玩家都会觉得黑魂1后半的火堆传送和法环的赐福传送是更好的易用性设计，不会去怀念黑魂1前半的跑步点火时期；大多数玩家们也会觉得法环拿到地图碎片点亮的地图更舒适，不会要求删除地图系统，更不会因为NPC多了个提示标记就要求后续更新拿掉这个内容。如果法环后续更新了普通RPG那样的NPC任务记录和对话记录系统（这个可能性真的存在），我相信绝大多数玩家也不会觉得“这破坏了法环的游戏乐趣和简洁性”。</p>\n<p data-pid=\"M_ndgoW4\">易用性和玩家指引是所有游戏都要追求的目标，绝不是游戏玩家的敌人。过度的提示和繁杂的UI或许是个问题，但游戏设计师们一直在寻找平衡点，在保留易用功能的同时不让它们过于侵害玩家们的体验。不管是增加了NPC指引、人物列表还是辅助光柱，就算法环的易用性和指引比现在多一倍，这个游戏也仍然一样出色。</p>\n<p data-pid=\"lSJ4OAIv\">让我们从表象往前再走一步。如果问题不出在UI层的易用性和指引上，那么“公式化”的问题出在哪里，玩家到底为什么会厌烦那些“问号”和“任务列表”呢？他们怎么就不厌恶艾尔登法环呢？</p>\n<p data-pid=\"6EbHzHGw\"><b>艾尔登法环的答案：体验的多样性，才是开放世界游戏设计的真正核心</b></p>\n<p data-pid=\"OHl0jx9K\">如果你是个老不死人，当你刚进入法环的交界地世界时，会觉得一切简直太熟悉了，宫崎老贼根本就没有什么提高嘛！熟悉的开场职业选择、起始携带物品和捏脸，熟悉的丑逼新手boss这次叫“接肢贵族”，熟悉的缓慢翻滚、禁止动作取消和输入队列，熟悉的被初始boss一刀送走开始新生活……到处都是满满的“魂味”。对于早就玩过或者看过公测版本的“老褪色者”来说，离开初始洞窟后的宁姆格福西区也没啥新鲜的。第一个下马威boss大树守卫可以绕过不打，沿着赐福引导一路解锁马匹和令人想起黑魂2的骨灰，对付一些高处跳巨人或者强弩弓箭手之类的经典宫崎英高阴谋，最后被真正的新人杀手BOSS噩兆干脆利落斩杀马下——到这里为止，整个游戏都仿佛是经典的魂Like作品的配方。很多老不死人都能做个对比表来解说：你看这个下马威boss噩兆吧，就对应血源的神父，只狼的鬼刑部，老贼真是没有什么新点子……但这个下马威Boss咋这么难啊？这真是用初始装备能打过的BOSS？这难以区分节奏的快慢刀和专抓魔法和喝血的技能是怎么回事？我专门在B站和Twitch留意了一下，不止一个有经验的魂系游戏主播用初始装备在噩兆门口死了几个小时才终于积累到足够的经验通过。</p>\n<p data-pid=\"iV0dg0Ub\">当然，只有技术流主播和真正的魂玩家才会拿着初始装备反复硬刚噩兆。当普通玩家第一次在噩兆处死亡，他会被梅琳娜召唤进大赐福（相当于魂系列的中心场景传火祭祀场），玩家才会意识到自己这时候可能不应该去硬冲噩兆和史东城。这个触发机关的设置，非常明显地昭示了宫崎英高的设计意图：他就是希望魂系玩家到这里放弃单线前进，转而开始探索开放世界；如果玩家自己探索到了开放世界的部分，例如找到绕过史东威尔城的山路，点亮了湖区任何一个赐福篝火，梅琳娜同样会出现召唤玩家到大赐福（对，我甚至开了两个号验证了这两种不同的大赐福激活方式）。一旦玩家放弃传统魂系硬刚的思路，开始探索开放世界，交界地真正的宏大画卷才从此展开。</p>\n<p data-pid=\"x7X9tz-M\">你会发现，虽然这张地图乍看之下空空荡荡，宫崎英高几乎不提供任何指引，但只要开始做探索，不管走到哪里，都能找到一些独特且可能有效的回报。玩家不用像以往的魂系列游戏那样死磕一些高难度的敌人，也能获得强大的各种能力和可观的进度推进。</p>\n<p data-pid=\"cspWtoQN\">如果你在地面部分探索，你会发现各种各样的意外事件，还有隐藏的NPC与资源。路边的废墟基本都有隐藏的地下室，巨人车队的马车里总会有个放着装备的宝箱，熟悉的宝石结晶虫会掉落各式各样的战灰技能，路边的小屋和地图的角落都可能会有NPC给你出售物资和战灰。时不时还会有NPC叫住你，给你激活一个有回报的支线任务：可能是帮助变成树的亚人裁缝，可能是替宁格福姆的正统领主夺回要塞，可能是同森林深处长啸的狼人打个响指，每个任务都会通向更宏大的后续故事。你甚至会发现一些逃课的技巧，例如可以跳到教堂的墙上用弓箭或魔法干掉大树守卫，或者跳到树枝上干掉晚上才会出现的黑夜骑兵——咦，这些boss怎么“恰巧”不会攻击到这个高度的技能呢？当然，这都是法环的游戏设计师们刻意留下的设计彩蛋，是留给爱思考的玩家和内容创作者们发现的。虽然这些彩蛋不会作为一个“问号”出现在玩家们的地图上，却造成了疯狂的二次传播效果：法环里几乎每个地点或者“逃课”游戏技巧都会变成一个油管/B站视频，提供数以万计、甚至几十万计的点击量。这些巨大的游戏设计量是值得的，没有它们，就没有法环今天的成功。</p>\n<p data-pid=\"CFi_W6GG\">法环的开放世界到底提供了如何多样的内容量？如果我们按照传统开放世界式的引导，将和噩兆BOSS配套的宁姆格福（西区）标满提示点，那么这张地图应该是下面这样的：</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-188081b2d0ef86e9f9c5020b2aaab7ab_b.jpg\" data-size=\"normal\" data-rawwidth=\"2535\" data-rawheight=\"1363\" class=\"origin_image zh-lightbox-thumb\" width=\"2535\" data-original=\"https://pic4.zhimg.com/v2-188081b2d0ef86e9f9c5020b2aaab7ab_r.jpg\"><figcaption>本图片鸣谢法环互动攻略地图</figcaption></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"o4IsxfeT\">我想强调的是，上面绝大多数的回报（例如装备、骨灰、战灰、魔法等等），全都是独特的；而绝大多数点位的设计，也是非常多变的。同样的遗迹和营地，有的可能由王国骑士主打，有的可能是蛮族骑兵，有的可能是亡灵骷髅，有的可能有南瓜头战士，甚至可能有飞龙从天而降，几乎每个点都会给玩家展示一种新的敌人类型，并提供一种独特的专属回报。仅仅这一个新手区，如果让育碧来做，可能就会标记出超过40个问号——里面很多设计质量甚至比刺客信条里明确打上问号的任务地点还高！</p>\n<p data-pid=\"1czIzuYa\">如果你不满足于只观光出生点附近的地图，试图往远处探索，肯定会对整个交界地地图的规模感到震惊。上面这张作为玩家出生点的宁格福姆（西部），实际上大概只有整个游戏1/15左右的内容；你完全可以不打噩兆或任何强制BOSS战斗，来探索到整个游戏50%的内容。正常的玩家会向南探索，找到“真正的新手村”啜泣半岛，在摩恩城感受到传统魂系游戏第一关的正常难度；聪明的玩家会越过史东威尔城旁边的小道，偷渡进入利耶尼亚湖区，在卡利亚王室的领地中找到冻壳斧和冻霜踏地；跟随视频攻略的玩家可能向东或者通过传送陷阱进入被猩红腐败覆盖的高等级区域盖利德，搞到陨石杖或者干掉老龙来积累第一桶金。追求速通的玩家比这些都要激进，他们会通过魔法学院深处的捕人少女，传送到火山深处，直接到达游戏的中期场景火山和亚坛高原。所有这些，都不需要玩家打败任何一个强制boss，可以完全依靠娴熟的跑酷来推进，充分展现了游戏设计上的自由度；很多强大的战灰、武器、魔法、祷告直接放在没有任何敌人要打的地方，简直可以说是“宫崎英高的怜悯”。这些各种各样的“跑酷收集”视频，又构成了法环玩家创作的一个主要类型，不管在B站还是在油管上都有上万个之多，玩家在下面各抒己见，讨论着怎样的“逃课”才是最有效的。</p>\n<p data-pid=\"qH4bpzTt\">如果你进入那些在探索中发现的墓地、洞窟、要塞，开始探索这些拥有独立赐福的关卡，会逐渐体验到更多的惊喜。在新手区的前几个墓地、洞窟看起来都很简单，似乎和在上古卷轴或者辐射里看到的毫无区别；但随着地图逐渐扩大，这些看起来很像的墓地迅速变成了困扰你的谜团。</p>\n<ul>\n<li data-pid=\"I_oSmSgv\">为什么一个墓地或者洞窟会没有boss？为什么要塞的门被锁上了？啊，原来喷火塔是可以跳上去的？原来铡刀陷阱也可以跳上去？什么，连泥头车都可以跳上去？！这个泥头车居然还可以用陷阱炸掉？</li>\n<li data-pid=\"26JYYrvp\">咦，这个无底深渊原来可以跳下去的？跳下去原来还要挑选跳跃位置？什么，连电梯井都可以跳下去？这个地图看起来都是素材复用，地图看起来也太相似了，迷路了找不到boss……什么，这看起来完全一模一样的地图居然是完全不同的两层，我根本不是迷路？完全不同的两层居然还有隐藏门？ </li>\n<li data-pid=\"pcRgF2Xq\">这个洞窟找不到路了……咦，原来房顶是可以这样跳上去的？看似装饰的原木也可以这样跳上去？这个看似绝对跳不上去的低矮帐篷，原来在旁边放一块砖就可以跳上去了吗？！</li>\n</ul>\n<p data-pid=\"7MOO753H\">如果你舔图舔得比较彻底，这里每一个问题都可以对应到至少一个关卡里（有些点子会对应到好几个关卡，而这些关卡本身的应用甚至还有梯队结构，会在不同的关卡里以不同难度用好几次加深玩家的印象）。而且，法环居然能做到每一个有赐福的独立小地点都有至少一个BOSS（有些有两个），以及与之对应的至少一样独特奖励（有些有好几个）！就算没有赐福的野外地点，通常也至少有一样独特的、标志性的新敌人，或者一样独有的回报作为玩家探索的报酬。在初期，甚至有一个小型洞窟关卡的boss，著名的系列小丑NPC帕奇会直接转化为商人，他还会卖给玩家一个可以控制噩兆行动硬直的可使用道具，保证猴子也能用它打过噩兆……整个游戏50多个拥有独立赐福的小型场景，几乎每个都做到了有独特BOSS、有独特回报、有独特逻辑和核心设计理念的关卡设计，完成度和工作量之大都令人叹服。</p>\n<p data-pid=\"1cFz1NFK\">不知不觉，十几个小时已经过去了。当你完成了十几个大大小小的洞窟墓地，跑过了啜泣半岛、盖利德、利耶尼亚湖甚至火山，打倒了十几个比噩兆好打的BOSS积累了操作经验，用各种流派的武器、装备、战灰、咒文、祈祷把自己武装到牙齿之后，你终于再一次回到了噩兆面前。现在你可以召唤强大的、甚至是传奇的骨灰灵体，和NPC罗杰尔并肩作战，道具栏里血瓶翻了一倍，还放着可以制服噩兆的专属道具；你已经看过了七八个不同流派的逃课攻略，从陨石杖、灵刀、老寒腿、狮子火、大剑跳劈到双头剑出血全都已经成型。果不其然，噩兆在你的力量面前，连三分钟都没有支持到——于是很大一部分普通玩家切换出去，给法环打了个好评，已经完全忘记了一开始那“宫崎英高毫无进步”的想法。</p>\n<p data-pid=\"6KK0jEvS\">另外很大一部分玩家，会被接下来他们将见到的第一个大型关卡“史东威尔城”的完成度说服。法环里大中型关卡和小型关卡的分类是非常清楚的：大型关卡一般会有五个以上的赐福，中型关卡是三到四个，小型关卡一般只有一个入口赐福。我个人认为，法环里有几个大型关卡，是有资格竞争魂系列乃至关卡设计历史之最的：结构最精巧、复杂的风暴城堡史东威尔，审美水准最高的双重关卡永恒之城诺克隆恩-希芙拉河，以及可能是整个游戏历史上规模最庞大的多层关卡罗德尔王城-王城下水道。城堡一直就是宫崎英高乃至整个魂系列团队最擅长的关卡场景，历代作品中他们也做出了好几个经典无比的城堡，例如恶魔之魂的王城，黑暗之魂1的王城和只狼的苇名城；但他们都没有史东威尔城这样庞大、难度合理、路线丰富而又高低错落。文字描述是乏力的，而视频攻略又是繁冗的；幸好，我在polygon站上找到了一张巧妙的拓扑攻略图，在这里为各位读者引用一下，大家如果感兴趣可以去原始站点看这份攻略。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-6df2f59cd38225bc3434d0ebd04000f1_b.jpg\" data-size=\"normal\" data-rawwidth=\"1200\" data-rawheight=\"1315\" class=\"origin_image zh-lightbox-thumb\" width=\"1200\" data-original=\"https://pic2.zhimg.com/v2-6df2f59cd38225bc3434d0ebd04000f1_r.jpg\"><figcaption>本图片鸣谢polygon</figcaption></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"kSERtyZm\">这张地图对一个传统魂系玩家来说是极为精巧的：地图横截面积并不大，如果你走正门路线，一路打翻投石车和火焰喷射器，整个关卡可能只需要10分钟（从右下角的绿色入口一路打到接肢boss）。但如果你选择普通玩家的攻略路线，也就是左侧的城墙塔路线，这张地图就充满了魂味：每个场景都有明确的入口、明确的出口、明确的敌人，但同时也会隐藏至少一条隐藏路线和适当数量的伏击，并且大多数路线最后都会汇总到城墙塔、餐厅和中庭这几个枢纽来。而所有这些路线，都会通过标准路线上无法到达的光点或资源进行提示：为什么对面的房顶上有个紫光道具？为什么升降机的开关不能搬动？为什么门不能从这一边打开？为什么墙边会有个通向外面的阳台或者堆高的沙袋？</p>\n<p data-pid=\"3I2bSHEy\">当你开始思考这些问题的时候，你会发现游戏真的有对应的关卡设计，而且这些关卡设计真的通向一条你之前没有想到过的通路！而且，从高处开始很多道路是单向通行的，探索中间也有足够多数量的赐福火堆，确保玩家不会因为一次探索时间过长、难度过高或反复死亡受到太大的挫折。我甚至怀疑，史东威尔这张地图就是法环的核心团队做给团队中其他人学习的样板地图，你能看到无数的手法在游戏中的其他关卡内反复使用，它就像是一座关于关卡设计多样性的博物馆，值得每个对法环关卡设计感兴趣的人多体验几遍。</p>\n<p data-pid=\"ajTEVVN_\">从某种意义上来说，罗德尔王城-下水道就像是一个超级放大版的史东威尔城，但在这放大的过程中，史东城那种“所见即提示”的精妙性，被过于密集的怪物、过于恶意的场景重复设计和太过宏大的尺度所破坏了。当我沿着癫火遗迹的跳台一路到达深根时，并没有终于找到通向史东威尔城最下层时那种快感，而是感觉“哎哟这跳跳乐我可算死够了”。但不管怎么说，史东威尔有足够的资格作为下一代大型关卡的设计范例，法环也已经证明了这样的关卡设计水平是可以在开放世界游戏中大规模复制的，这为未来的游戏设计师们指出了一条可执行的道路。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-51228c6026f41e529d1b76392e954478_b.jpg\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"720\" class=\"origin_image zh-lightbox-thumb\" width=\"1280\" data-original=\"https://pic1.zhimg.com/v2-51228c6026f41e529d1b76392e954478_r.jpg\"><figcaption>我也抓了七八张但是都没有人家拍的好，全怪4K HDR</figcaption></figure><p data-pid=\"yn_ZFZv0\">我上面说的，能代表魂系列历史上审美最高水平的关卡“诺克隆恩-希芙拉河”，我想用一张图来说明这个关卡的审美水平——那个留言大家都能猜出来，是“前有绝景”。这张图上几乎所有你能看到的地方，你都可以到达，从远处闪烁红光的蒙格温神庙、右侧的高价引水道、前方的黑夜神域，乃至在这所有建筑脚下的希芙拉河地底，构成了这个庞大的多层关卡。当然，纯说关卡设计，这个图没有史东威尔那么多变，上下层和远处的神庙为了审美牺牲了，并不直接连通，只能通过完全不同的路线进来——但谁让它美呢！为了美牺牲一些设计也是难免的啊！稍有遗憾的是，这样一张审美上十分震撼的地图，却缺少同等级的boss设计：两个祖灵都是传送后战斗且和主线故事缺少联系，龙人士兵和双石像鬼用的都是强化版精英怪的模组缺少识别度，仿生泪滴这种boss放在哪里区别都不大……我严重怀疑繁星弃子本来应该是放在诺克隆恩的boss，但因为做不完对应的内容才挪去了腐败湖的。老实说繁星弃子放在腐败湖后面完全不搭，应该把女武神玛莲尼亚从圣树移动过来才对吧？圣树就老老实实放米凯拉不好吗？应该是因为做不完和地图品质低才调整成这种结构的吧？</p>\n<p data-pid=\"kmhDgGhh\">像史东威尔城和诺克隆恩-希芙拉河这样规模的大型关卡，在法环中有整整9个之多（史东威尔、魔法学院、火山牢狱、王城、王城下水道、诺克隆恩-希芙拉河、诺克史黛拉-安瑟尔河、圣树、天空城）；拥有2-4个赐福火堆的中型场景，也有整整9个之多（摩恩城、红狮子城、瑟利亚镇、仪典镇、卡利亚城寨、日荫城、索尔城、蒙格温王朝、深根）。这18个大中型关卡，加起来的内容量和总长度应该凌驾于黑魂1或血源整个游戏之上，关卡的审美、规模、隐藏路线、多样性都令人赞叹；在自由度设计上也非常慷慨，几乎所有的中型关卡都是支线关卡，很多大型关卡也不是主线必须的。如此数量和多样化的大型关卡，也同样是大多数公式化开放世界游戏没有的东西。你可以回忆Far Cry里面的敌方据点，或者对马岛之鬼里面的蒙古大营，来和法环里这些大型关卡对比。你会发现，无论是敌人、审美还是关卡设计，法环都是在追求“用有限的素材构造多样性”，而非将体验类似的模块在大地图上复制。在同样建筑风格，材质和模型也非常相似的区域里，法环团队就真能通过不同的敌人、关卡和解谜，将每个大型关卡每个区域的体验划出不同的节奏；而很多开放世界团队，或许动用了更多不同风格的材质和模型，但游戏体验却非常类似。</p>\n<p data-pid=\"cEmdtUwR\">当然，对多样性的追求，必定会导致一些副作用，无论是在玩法还是在内容方面。我在之前的文章中说过，恶魂-黑魂系统的设计核心是“战斗距离控制”，不同武器和战技的选择就代表着对不同距离下战斗方针的选择，某种程度上甚至可以看作一种动作回合制；而传统上，这一系统的核心动作模组一般是近战中等距离武器，也就是直剑，所以会有“拿到直剑魂就简单了三成”的传统说法。但法环的玩法多样性极大扩张，BOSS数量也极大增加，这导致从中期开始直剑这些朴素的战法就脱离了平衡性的中心。大量中后期BOSS AI大量设计了中距离AOE甚至远距离、超远距离AOE，大量针对翻滚、施法、道具使用甚至远距离马战的专门AI设计，导致传统的距离控制直剑系或格挡系战技吃苦次数大大增加。同样，很多关卡明显也受到了追求多样性的影响。像下水道、化圣雪原、蒙格温王朝这样的后期隐藏地图，为了追求和其他地图不同的体验和节约工期，用了一些明显会有争议的设计手段，比如低可见度地图、多倍堆怪、小规模重复素材复用等等，不可避免要受到玩家的差评（我甚至怀疑团队知道哪些关卡品质不好，这些关卡几乎全都在远离主线的角落里，很难相信不是故意的）。但这些可能是必须要付出的代价：如果要追求开放世界体验的丰富性，就不可避免要允许体验可能较差的关卡。如果让我在“玩法和关卡很流畅，但是体验重复度很高的开放世界游戏”和“一小部分关卡和玩法体验不好，但能体验到足够自由多样的玩法和关卡”两者之间选择，我会毫不犹豫地选择后者。</p>\n<p data-pid=\"-1sMF_-m\">写到这里，我们已经可以做出总结了：一直坚定地追求体验的多样性、独特性，这才是法环如此吸引人，宫崎拿破仑能王者归来的核心。玩家可能会在探索完盖利德大沼泽，被碎星感动的时候打下好评；可能会在走出希芙拉河地下电梯，抬头仰望星空的时候打下好评；也可能在冲过王城高墙，回头眺望亚坛高原落日的时候打下好评。之所以好评率会越来越高，是因为玩家们在探索交界地的体验中、在观看B站抖音油管老鼠台的过程中，不停发现研发团队留下的多样性和设计深度，这一切都令他们觉得这个游戏的价值越来越高。法环的难度固然很高，易用性和引导确实也很少，当然也有一部分玩法和内容完成度相对较低；但游戏玩法和内容的多样性，足以支撑玩家们杀过噩兆，渡过湖泊，攀爬火山，飞越王城，点燃雪山，用他们的好评和游戏销量去淹没少数反对的力量。</p>\n<p data-pid=\"JoWBd3Qy\"><b>制造多样性：如何在一个大型团队中战胜重复</b></p>\n<p data-pid=\"WUV8aI5z\">体验的多样性，这是一个直指开放世界本质的答案。开放世界的本质是一种内容展现形式，而非一种结构或者UI。只是把近似的内容复制N份并不是玩家所要的东西，多样性的体验才是玩家真正需要的东西。只要做到了多样性的体验，玩家和内容创作者甚至会主动创作大量的内容，来帮助游戏传播、提高口碑、延长游戏的生命——这是老头环做到了的事情。</p>\n<p data-pid=\"W2F7GZxG\">但我还想从这里更深入一步：他们到底是怎么做到这种体验的多样性的？大多数“公式化开放世界”为什么做不到？艾尔登法环是一个其他开放世界团队可以复制的例子吗？</p>\n<p data-pid=\"0g32q57n\">从某种意义上来说，“公式化开放世界”的问题，是必然出现的：现代大型游戏开发过程本身，就是一种大型的“公式化开发”。如果团队没有刻意追求多样性，这样的开发流程必然会导致游戏体验重复，大量的中间件和组织优化甚至激化了这个问题。</p>\n<p data-pid=\"wgCfUw_0\">开放世界游戏是怎么做出来的？那就像一座工厂，或者一支军队，由数以百计的资深游戏设计师、美术设计师和程序设计师构成。他们中最出色的被称作“核心小组”，负责决定游戏的制作规程、核心玩法、垂直切片，对游戏内容进行取舍；而更多的小组则根据他们的决策复制这一体验，将核心玩法复制到开放世界的每个角落。这样说或许过于抽象，我们可以用法环的团队名单作为范例。这座庞大的工厂中，From的核心员工有318名，他们指挥着数十家协作公司里的超过700名外包和协同人员（顺带一提，光这1000多个人开发五年，研发成本至少是大几千万美元等级了）。29个游戏、服务器和图形程序员支撑着祖传的引擎和核心玩法，4个核心玩法设计师和10个系统设计师在上面规划玩法和游戏结构，这些人决定了游戏整体的玩法和体验。真正将这些核心体验扩增成现在这个超级开放世界的，是30名研发程序员、12名战斗设计师和16名关卡设计师、总计超过120名的环境美术师、角色美术师、动画师、CG师，以及数百名支持这些执行分队的外包。如果你读过旗舰以前的文章，会知道在所有开放世界游戏里，这318人甚至是一个相对来说很少的数字。荒野大镖客2的上述核心团队超过1050人，GTA5超过980人，赛博朋克2077超过650人……这些超级项目区分出数以十计的平行小组，将那些庞大开放世界的内容填满。</p>\n<p data-pid=\"R6eC5_CB\">这样庞大的工作人数，必然会导致团队管理上的模块化；团队管理的模块化，非常容易产生游戏体验上的重复——是的，这才是隐藏在那些“易用性和引导UI”表象之下，真正问题的成因。再好玩的核心体验、再多样性的系统，往往也抵挡不住体验的重复；如果核心玩法本身可扩展性就不强，或者关卡设计留下的变通余地不多，那这种重复性会到来得更快、更猛。</p>\n<p data-pid=\"_qZSftKm\">传统上来说，大多数公式化开放世界游戏选择用叙事、系统和数值设计来解决这个问题。核心玩法比较坚固而多样、剧情制作丰富而高水平的游戏，玩家就会比较能容忍体验的重复，比如上古卷轴5、辐射新维加斯或者巫师3，部分体验的重复基本不影响游戏整体的出色。但是，如果一个开放世界没有那么出色的叙事，系统和数值也不够独特，不管是因为什么原因，玩家都会开始抗议和愤怒。赛博朋克2077因为研发周期原因，叙事不足和完成度不高饱受诟病，看门狗3过于激进地使用了过程生成技术，导致系统、数值极度重复，用户同样投下了愤怒的反对票。很多二线开放世界游戏错误地将开放世界内容理解为传统RPG中的等级条，完成类似的任务只提供等级条、资源或技能点一类的东西，更是被玩家们愤怒地喷在了墙上，我能想起来的有龙腾世纪3、Rage2和真三国无双8，等等。“让各个小团队按照核心玩法生产内容”本身，就是个极易降低体验的组织形式，专业分工越彻底，体验重复度就越高。育碧可能是受到这一专业分工模式影响最大的公司了：它的专业分工水平细到了有专门的团队负责游戏中的植被、动物、城市建筑和据点设计，这样专业、高效的分工直接导致了刺客信条英灵殿或Far Cry 6这样的作品经常被玩家们吐槽为“最没有惊喜的开放世界”；如果你要找一个技术毁灭体验的例子，我会强力推荐看门狗3。在育碧的游戏中，两个据点可能美术资源、艺术风格、NPC剧情完全不同，但游戏体验的过程是高度相似的。在过去这些年中，开放世界游戏们默认了这些结论：如果要拥有足够丰富的体验，只能拿出更多的资源，制作更庞大、繁复完整的剧情；或者拿出更长的时间、更丰富的创意打磨核心玩法，让核心玩法更加多变，以便支持更庞大的世界不陷入重复性的诅咒。</p>\n<p data-pid=\"oSZIei9z\">艾尔登法环则提出了第三条路：我们能不能直接用足够多样的独特内容，把整个开放世界填满？如果每个地点都有独特的体验，这事情不就成了嘛？这就是宫崎英高对上古卷轴和2077们的回答：我们不选核心系统的扩张，也不选叙事内容的填充；我们选择将多样性本身作为开发的核心指导方针，让团队里所有人投身在不同内容的生产上！</p>\n<p data-pid=\"3bF3J3jq\">这条新的路径真的很吓人；一般玩家如果不统计，根本意识不到法环量的内容有多么庞大，我几乎是跪着数完整个游戏的清单的。不算外包只有300多人的法环团队，做出的东西之多，令人叹为观止，从物理上比三代魂加起来的制作量还大！为了将数百个地点、50多个小型关卡、18个大中型关卡（还没有计算必然会有的中途被取消或修改的大量内容）全部填满，法环团队排出了一份丰富到恐怖的内容生产表。玩家可用的近战远程武器加起来超过300种，而且每一种都有独特的战斗模组设置，其中40多种甚至有专属战技——这全都是要做动作模组动画的独立武器！几乎每个NPC、骨灰、红灵、人型敌人，甚至只在背景设定中出现的角色，都设计了玩家可以穿的对应套装，加起来超过150套！各种战斗技能和流派的数量甚至更加惊人：战灰至少有98种，魔法至少70种，祷告至少有101种，骨灰召唤物至少有64种，还有超过100种可以制造的战斗道具！每种战技、魔法、骨灰、祈祷、战斗道具，都不是纯数值型的区别，而是有独立动作模组、战斗体系和特效的成体系玩法。自游戏发售以来，主播和up主们几乎每天都在提出新的战斗体系并进行验证，大家发现甚至连同名战灰和魔法的动作模组和设定数值都不是完全一样的。如果我们以其他游戏的开发经验来估计，法环还应该有20-30%额外没有实际做出来或者做到一半的废案（实际上，玩家已经解包出了相当数量没有出现在游戏中的额外资源）。</p>\n<p data-pid=\"iMe4G2VM\">每个做过游戏研发的人，都能理解到上面这些数字有多么恐怖：如果用普通的管理方式，这起码需要千人级别的核心团队才有可能完成——你们可以对比一下，同为开放世界ARPG，战神或者地平线有多少种敌人、技能和武器，某个大家都知道的游戏每次版本更新又能更新多少敌人、技能和武器。如果说《赛博朋克2077》证明了受到预算和周期限制做不完的开放世界会导向很糟糕的结果，《艾尔登法环》就提出了一个更高的需求：你不仅要保证能够在预算和周期内完成整个产品，还要生产出足够多样性的内容来将它填满，才能满足玩家的需求！这次宫崎英高真的给整个行业立下了一个极其“内卷”的案例：我们这么大内容量、玩法和内容如此多样的产品，能靠300人核心团队做完，才卖60美元，你们其他公司能做到吗？如果做不到，你们就等着被玩家的差评淹没吧——在不远的将来，我预言更多的游戏会撞到这个靶子上，大家可以拭目以待。</p>\n<p data-pid=\"YH0Sf_za\">所以，全世界的开放世界游戏团队，在法环之后都需要更新制作流程：多样性会是其中最醒目的目标。最重要的是在每个环节上都鼓励内容团队去创新，而不只是核心团队思考核心玩法，各个小团队复制玩法，最后依靠系统和数值设计去挽救整体结构。为了体验多样性的提高，法环给我们提供了很多经验可以参考：</p>\n<ul>\n<li data-pid=\"y9kcfnbz\">哪怕有些勉强，每个关卡都必须设计至少一个核心理念或者审美，并且围绕着它来执行。</li>\n<li data-pid=\"MJ_sif6n\">比起修改和返工，内容量本身才应该是第一优先级。哪怕做的不好后面拿掉，也比反复修改但是体验重复来得有价值。</li>\n<li data-pid=\"zAcXe8y7\">视频推广时代的玩家需要的是丰富的横向体验，而不是纵向的数值成长；一个不平衡的寒冰踏地能吸引来的新玩家数量，可能比辛辛苦苦做的买量视频还要多，为了多样性可以容忍不平衡。</li>\n<li data-pid=\"dXeIzUW_\">一个成功的核心设计理念或审美可以复用多次，形成挑战阶梯同时降低设计、制作成本，比如像沼泽和腐败湖，一个有马，一个没马；法师镇和仪典镇，一个间隔隐身，一个永久隐身。</li>\n<li data-pid=\"-IX7WZeb\">哪怕是From也没有能力用完全不同的设计填满整个游戏，但要保证玩家每次遭遇都有新的、升级的体验，例如噩兆和噩兆王，黑剑眷属和黑剑。</li>\n<li data-pid=\"q9SyfebR\">创新的点子和执行权可以下放到每个制作小组，让每个关卡设计师、动作设计师、环境设计师都大胆完成自己提出的独特内容，例如各种逃课小设计。</li>\n<li data-pid=\"PyDoD4sS\">核心玩法小组需要在核心玩法阶段就规划好整个内容的扩展结构，让每个内容组都能最大化激活自己的创意和提出理念，哪怕其中某些理念完成度不高也值得鼓励。</li>\n</ul>\n<p data-pid=\"Sgm_UIlF\">这些事情难吗？这当然很难。但既然已经有人实际做了出来，这就会是玩家们心中认可的新标准。游戏行业就是一个这样残酷的行业：只要前面有GTA5，玩家们就会骂2077；只要前面有巫师3，玩家们就会骂Far Cry 6。玩家永远不会同情无法达到品类巅峰的团队，不管这个团队曾经多么辉煌，加班多么辛苦，能力多么有限，有多少个设计保守和执行保守的合理理由。</p>\n<p data-pid=\"vKSGYjv2\">写到这里，我忍不住想起了《只狼》里面剑圣苇名一心掏出的那把连发火枪——从制作理念和执行方针来说，《艾尔登法环》就是宫崎英高对其他开放世界团队掏出的那把火枪。</p>\n<p data-pid=\"tX-5rYT8\">“大人，时代变了。各位开放世界团队的内容储备，还足够吗？”</p>\n<p data-pid=\"VEpJ2P2n\">只有答案是“足够”的团队，才能到达下一个时代。这很难，但是绝非不可能。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/necromanov?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Necromanov</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/485618682?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：Nothing 手机公布、NVIDIA 发布全新显卡等","date":"2022-03-24 00:45:43","description":"微软面向 Chrome 推出全新扩展程序、诺基亚贝尔完成 5G 下行三载波聚合应用等。<a href=\"https://sspai.com/post/72261\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72261"},{"title":"想要五步成诗？这是我的写诗方法论","date":"2022-03-23 09:20:28","description":"也许有一天，社会中的每个人都拥有强大的审美和鉴赏能力，许多人从事着不啻于达芬奇、莎士比亚的创作工作；也许有一天，再也没有人会觉得孤独，再也没有自卑和嘲笑，人们的精神像如今的物质一样充实饱满。也许有一天，农夫可以拥有他的每一颗稻谷，与金黄的秋色。牧羊人则可以为羊群讲述天上所有星星的故事；也许有一天，诗能够成为一切艺术的骨干，化作容身于每个复杂故事背后的精巧载体。<a href=\"https://sspai.com/post/71712\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/71712"},{"title":"一套键鼠跨平台、跨设备使用，除了通用控制还有哪些软硬件方案？","date":"2022-03-23 08:00:00","description":"除了通用控制，还有这些值得一试的跨平台键鼠共享方案。<a href=\"https://sspai.com/post/72143\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72143"},{"title":"跳绳计数、在线对战、勋章挑战…… 用跃动为健康增值：YaoYao","date":"2022-03-23 06:41:59","description":"YaoYao 这款主打跳绳计数的 app 能让你在跃动的过程中更加专注于运动本身，应用主要针对 Apple Watch 进行开发，并在不断地更新迭代过程中将智能设备的便利性发挥到了极致。<a href=\"https://sspai.com/post/71936\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/71936"},{"title":"出色不如走运 (VII)?","date":"2022-03-23 05:47:18","description":"\n<p data-pid=\"Z9sGZvQI\"><b>摘要：</b>Bayesian approach to multiple tests.</p>\n<h2><b>1 引言</b></h2>\n<p data-pid=\"D-1FgQC5\"><i>p</i>-value，这个人们在检验因子和异象收益率时绕不过的指标，正逐渐退去“光环”。</p>\n<p data-pid=\"1eCzr7ib\">2019 年，美国统计协会的官方期刊 <i>The American Statistician</i> 推出了一期名为 Statistical Inference in the 21st Century: A World Beyond p &lt; 0.05 的专刊[1]，用多达 40 篇文章“声讨”了 <i>p</i>-value 如何被错误使用，并给出了可行的替代办法。</p>\n<p data-pid=\"ScU6ZgCR\">事实上，美国统计协会对 <i>p</i>-value 的“敲打”由来已久，而很多顶级期刊，包括 <i>Econometrica</i> 和 <i>American Economic Review</i>，也都已经在其期刊 policy 里写明不鼓励使用人们熟悉的小星星 —— *、**、*** —— 来表示统计显著性。然而在这期专刊中，美国统计协会更是直接建议禁止使用“统计上显著”。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-98caa9c27cfebadf4ea0f5b49e3a030f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"612\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-98caa9c27cfebadf4ea0f5b49e3a030f_r.jpg\"></figure><p data-pid=\"_XoZaZVN\">我们不难理解美国统计协会的这个主张（对于他们的论述请自行查阅原文，这个专刊都是 open access）。当人们过度强调统计显著性时，自然而然的就把 <i>p</i>-value 推到了聚光灯之下。从研究来看，一个 <i>p</i>-value = 0.049 的结果和另一个 <i>p</i>-value = 0.051 的结果也许没有太大差别，但是一旦人们意识到前者可以被加上 ** 而后者通常只能被加上一个 * 的时候（从而增加论文被发表的几率），一切就发生了变化。人们会有意识（或无意识）地操纵数据、朝着两个 ** 而努力，而这就引出了《出色不如走运》系列的主题 <i>p</i>-hacking。而多重假设检验的存在，无疑更是让 <i>p</i>-hacking 雪上加霜。</p>\n<p data-pid=\"EtiUYld9\">为了降低 <i>p</i>-hacking 的影响，我们在研究因子和异象的时候需要考虑多重假设检验问题。《出色不如走运》系列的前几篇文章介绍了实证资产定价领域这方面最新的研究成果，例如 Chordia, Goyal and Saretto (2020) 以及 Harvey and Liu (2020) 等。此外，Harvey, Liu and Saretto (2020) 一文则回顾了更为常见的 Bonferroni、Holm 以及 StepM 等方法[2]。</p>\n<p data-pid=\"ZAgjNnr8\">不过，以上介绍的大部分方法，都是频率主义方法。这些方法依赖于引入 overall error rates（例如 FWER 或 FDR），并以此为目标调整单一假设检验的 <i>p</i>-value。与频率主义方法相对应的，是贝叶斯方法。顾名思义，贝叶斯方法允许我们引入从经济学理论得出的关于因子是否为真的先验。此外，贝叶斯方法还自带奥卡姆剃刀效应（Ockham’s razor effect），它能根据同时被检验的因子的个数自动调整因子为真的后验概率（看完下一节你就会明白这句话的含义）。</p>\n<p data-pid=\"wbL-GpIz\">今天我们就通过 Campbell Harvey 的几篇文章，给应对 <i>p</i>-hacking 的贝叶斯方法开个头。</p>\n<h2><b>2 完整的贝叶斯框架</b></h2>\n<p data-pid=\"dM_89BqI\">我们从 Harvey, Liu and Zhu (2016) 谈起，这篇文章把实证资产定价研究中多重假设检验问题的严重性摆上了台面，至此之后，人们也不再使用传统的 <i>t</i>-statistic = 2.0 阈值，而是使用更高的阈值（例如 3.0）。不过，这篇文章的正文介绍的依然是频率主义方法。</p>\n<p data-pid=\"BV9p7SpR\">不过，该文的附录 B 介绍了一个贝叶斯框架下的 hierarchical model，它是一个完整的贝叶斯框架。该贝叶斯框架源自 Scott and Berger (2006)。Harvey, Liu and Zhu (2016) 的附录以及 Scott and Berger (2006) 都非常值得一读，不过前者是在实证资产定价的角度介绍该 hierarchical model，论述的更清晰一些。</p>\n<p data-pid=\"1IK64TqI\">该 hierarchical model 分为三层。</p>\n<p data-pid=\"QlYIFCMe\">第一层： <img src=\"https://www.zhihu.com/equation?tex=%28X_i%7C%5Cmu_i%2C%5Csigma%5E2%2C%5Cgamma_i%29+%5Coverset%7B%5Ctext%7Biid%7D%7D%7B%5Csim%7D%5Cmathcal%7BN%7D%28%5Cgamma_i%5Cmu_i%2C%5Csigma%5E2%29\" alt=\"(X_i|\\mu_i,\\sigma^2,\\gamma_i) \\overset{\\text{iid}}{\\sim}\\mathcal{N}(\\gamma_i\\mu_i,\\sigma^2)\" eeimg=\"1\"></p>\n<p data-pid=\"NjANXKyM\">其中 <img src=\"https://www.zhihu.com/equation?tex=X_i\" alt=\"X_i\" eeimg=\"1\"> 表示因子 <img src=\"https://www.zhihu.com/equation?tex=i\" alt=\"i\" eeimg=\"1\"> 的平均收益率， <img src=\"https://www.zhihu.com/equation?tex=%5Cmu_i\" alt=\"\\mu_i\" eeimg=\"1\"> 表示未知的因子收益率均值，<img src=\"https://www.zhihu.com/equation?tex=%5Csigma%5E2\" alt=\"\\sigma^2\" eeimg=\"1\">表示方差（注意，此处方差没有加下标 <img src=\"https://www.zhihu.com/equation?tex=i\" alt=\"i\" eeimg=\"1\"> ，因而暗含的假设是所有因子平均收益率的方差相同），<img src=\"https://www.zhihu.com/equation?tex=%5Cgamma_i\" alt=\"\\gamma_i\" eeimg=\"1\">是一个二分变量（取值为 1 意味着因子是真正的；取值为 0 意味着因子为虚假的）。</p>\n<p data-pid=\"RzHdWsyf\">在上述模型中，等方差这个假设并没有听上去那么不合理；例如，在实际中，我们总可以通过调整杠杆来让所有因子投资组合等波动。不过，另一个关键假设，即收益率满足 conditionally IID 则多少有些苛刻。不过正如 Harvey, Liu and Zhu (2016) 所言，条件独立性对于贝叶斯框架和构造似然函数至关重要。</p>\n<p data-pid=\"8Za1MCVD\">在上述假设下，似然函数为（令 <img src=\"https://www.zhihu.com/equation?tex=%5Cpmb%7BX%7D\" alt=\"\\pmb{X}\" eeimg=\"1\"> 、 <img src=\"https://www.zhihu.com/equation?tex=%5Cpmb%7B%5Cmu%7D\" alt=\"\\pmb{\\mu}\" eeimg=\"1\"> 以及 <img src=\"https://www.zhihu.com/equation?tex=%5Cpmb%7B%5Cgamma%7D\" alt=\"\\pmb{\\gamma}\" eeimg=\"1\"> 分别表示对应 <img src=\"https://www.zhihu.com/equation?tex=X_i\" alt=\"X_i\" eeimg=\"1\"> 、 <img src=\"https://www.zhihu.com/equation?tex=%5Cmu_i\" alt=\"\\mu_i\" eeimg=\"1\"> 以及 <img src=\"https://www.zhihu.com/equation?tex=%5Cgamma_i\" alt=\"\\gamma_i\" eeimg=\"1\"> 的向量）：</p>\n<p data-pid=\"Uct39rUR\"><img src=\"https://www.zhihu.com/equation?tex=%5Cdisplaystyle+f%28%5Cpmb%7BX%7D%7C%5Csigma%5E2%2C%5Cpmb%7B%5Cmu%7D%2C%5Cpmb%7B%5Cgamma%7D%29%3D%5Cprod_i%5Cleft%5B%5Cfrac%7B1%7D%7B%5Csqrt%7B2%5Cpi%5Csigma%5E2%7D%7D%5Cexp%5Cleft%28%5Cfrac%7B-%28X_i-%5Cgamma_i%5Cmu_i%29%5E2%7D%7B2%5Csigma%5E2%7D%5Cright%29%5Cright%5D\" alt=\"\\displaystyle f(\\pmb{X}|\\sigma^2,\\pmb{\\mu},\\pmb{\\gamma})=\\prod_i\\left[\\frac{1}{\\sqrt{2\\pi\\sigma^2}}\\exp\\left(\\frac{-(X_i-\\gamma_i\\mu_i)^2}{2\\sigma^2}\\right)\\right]\" eeimg=\"1\"></p>\n<p data-pid=\"gJrg3pkB\">第二层： <img src=\"https://www.zhihu.com/equation?tex=%5Cmu_i%7C%5Ctau%5E2%5Coverset%7B%5Ctext%7Biid%7D%7D%7B%5Csim%7D%5Cmathcal%7BN%7D%280%2C%5Ctau%5E2%29%2C~%5Cgamma_i%7Cp_0%5Coverset%7B%5Ctext%7Biid%7D%7D%7B%5Csim%7D%5Cmbox%7BBer%7D%281-p_0%29\" alt=\"\\mu_i|\\tau^2\\overset{\\text{iid}}{\\sim}\\mathcal{N}(0,\\tau^2),~\\gamma_i|p_0\\overset{\\text{iid}}{\\sim}\\mbox{Ber}(1-p_0)\" eeimg=\"1\"></p>\n<p data-pid=\"PjEdAoDP\">模型的第一层描绘了在给定 <img src=\"https://www.zhihu.com/equation?tex=%5Cmu_i\" alt=\"\\mu_i\" eeimg=\"1\"> 和 <img src=\"https://www.zhihu.com/equation?tex=%5Cgamma_i\" alt=\"\\gamma_i\" eeimg=\"1\"> 下，因子平均收益率的分布，不过并没有说 <img src=\"https://www.zhihu.com/equation?tex=%5Cmu_i\" alt=\"\\mu_i\" eeimg=\"1\"> 和 <img src=\"https://www.zhihu.com/equation?tex=%5Cgamma_i\" alt=\"\\gamma_i\" eeimg=\"1\"> 是怎么来的，这就是模型的第二层。模型假设 <img src=\"https://www.zhihu.com/equation?tex=%5Cmu_i\" alt=\"\\mu_i\" eeimg=\"1\"> 满足 IID 正态分布（均值为零，方差为 <img src=\"https://www.zhihu.com/equation?tex=%5Ctau%5E2\" alt=\"\\tau^2\" eeimg=\"1\"> ），而 <img src=\"https://www.zhihu.com/equation?tex=%5Cgamma_i\" alt=\"\\gamma_i\" eeimg=\"1\"> 满足参数为 <img src=\"https://www.zhihu.com/equation?tex=p_0\" alt=\"p_0\" eeimg=\"1\"> 的伯努利分布，即 <img src=\"https://www.zhihu.com/equation?tex=%5Cgamma_i%3D0\" alt=\"\\gamma_i=0\" eeimg=\"1\"> 的概率为 <img src=\"https://www.zhihu.com/equation?tex=p_0\" alt=\"p_0\" eeimg=\"1\"> ，<img src=\"https://www.zhihu.com/equation?tex=%5Cgamma_i%3D1\" alt=\"\\gamma_i=1\" eeimg=\"1\">的概率为 <img src=\"https://www.zhihu.com/equation?tex=1-p_0\" alt=\"1-p_0\" eeimg=\"1\"> 。</p>\n<p data-pid=\"0WE4LAfh\">在前两层的基础上，为了使上述贝叶斯框架变得完整，我们还需要最后一步，即 <img src=\"https://www.zhihu.com/equation?tex=%5Ctau\" alt=\"\\tau\" eeimg=\"1\"> 、 <img src=\"https://www.zhihu.com/equation?tex=%5Csigma\" alt=\"\\sigma\" eeimg=\"1\"> 和 <img src=\"https://www.zhihu.com/equation?tex=p_0\" alt=\"p_0\" eeimg=\"1\"> 的先验分布。</p>\n<p data-pid=\"7h1GjXoX\">第三层： <img src=\"https://www.zhihu.com/equation?tex=%28%5Ctau%5E2%2C%5Csigma%5E2%29%5Csim%5Cpi_1%28%5Ctau%5E2%2C%5Csigma%5E2%29%2C~p_0%5Csim%5Cpi_2%28p_0%29\" alt=\"(\\tau^2,\\sigma^2)\\sim\\pi_1(\\tau^2,\\sigma^2),~p_0\\sim\\pi_2(p_0)\" eeimg=\"1\"></p>\n<p data-pid=\"5apwNLum\">在这一步，人们可以根据自己的偏好选择参数的先验分布 <img src=\"https://www.zhihu.com/equation?tex=%5Cpi_1\" alt=\"\\pi_1\" eeimg=\"1\"> 和 <img src=\"https://www.zhihu.com/equation?tex=%5Cpi_2\" alt=\"\\pi_2\" eeimg=\"1\"> 。在没有充分先验知识的情况下，一组推荐使用的先验分布为（Scott and Berger 2006）：</p>\n<p data-pid=\"xriFoanK\"><img src=\"https://www.zhihu.com/equation?tex=%5Cpi_1%28%5Ctau%5E2%2C%5Csigma%5E2%29%5Cpropto%28%5Ctau%5E2%2B%5Csigma%5E2%29%5E%7B-2%7D\" alt=\"\\pi_1(\\tau^2,\\sigma^2)\\propto(\\tau^2+\\sigma^2)^{-2}\" eeimg=\"1\"></p>\n<p data-pid=\"gj0kIpcU\"><img src=\"https://www.zhihu.com/equation?tex=%5Cpi_2%28p_0%29%3D%281%2B%5Calpha%29p_0%5E%7B%5Calpha%7D\" alt=\"\\pi_2(p_0)=(1+\\alpha)p_0^{\\alpha}\" eeimg=\"1\"></p>\n<p data-pid=\"UkfC7W0v\">对于 <img src=\"https://www.zhihu.com/equation?tex=%5Cpi_1\" alt=\"\\pi_1\" eeimg=\"1\"> 的合理性，Scott and Berger (2006) 中花了一定的篇幅，感兴趣的读者请阅读原文。在 <img src=\"https://www.zhihu.com/equation?tex=%5Cpi_2\" alt=\"\\pi_2\" eeimg=\"1\"> 中，<img src=\"https://www.zhihu.com/equation?tex=%5Calpha\" alt=\"\\alpha\" eeimg=\"1\">是一个控制其分布中心的参数（例如，当 <img src=\"https://www.zhihu.com/equation?tex=%5Calpha%3D0\" alt=\"\\alpha=0\" eeimg=\"1\"> 时，<img src=\"https://www.zhihu.com/equation?tex=%5Cpi_2\" alt=\"\\pi_2\" eeimg=\"1\">变为 uniform distribution）。由定义可知，参数 <img src=\"https://www.zhihu.com/equation?tex=p_0\" alt=\"p_0\" eeimg=\"1\"> 控制了每个因子为假的概率（回忆一下，<img src=\"https://www.zhihu.com/equation?tex=%5Cgamma_i%3D0\" alt=\"\\gamma_i=0\" eeimg=\"1\">的概率为 <img src=\"https://www.zhihu.com/equation?tex=p_0\" alt=\"p_0\" eeimg=\"1\"> ）。也许我们没有足够的先验知识准确地描绘 <img src=\"https://www.zhihu.com/equation?tex=p_0\" alt=\"p_0\" eeimg=\"1\"> 的分布，但常识告诉我们大部分因子应该是虚假的，因此 <img src=\"https://www.zhihu.com/equation?tex=p_0\" alt=\"p_0\" eeimg=\"1\"> 的取值应该接近 1。</p>\n<p data-pid=\"fTAlwOrs\">此外，当同时考察的因子个数增大时，我们也可以根据先验知识进一步调整 <img src=\"https://www.zhihu.com/equation?tex=%5Calpha\" alt=\"\\alpha\" eeimg=\"1\"> 从而控制 <img src=\"https://www.zhihu.com/equation?tex=p_0\" alt=\"p_0\" eeimg=\"1\"> 的分布（使其分布更加靠近 1）。利用上述贝叶斯框架，我们也可以计算出每个因子为真的后验概率，即<img src=\"https://www.zhihu.com/equation?tex=p_i%5Cequiv%5Cmbox%7Bprob%7D%28%5Cgamma_i%3D1%7C%5Cpmb%7BX%7D%29\" alt=\"p_i\\equiv\\mbox{prob}(\\gamma_i=1|\\pmb{X})\" eeimg=\"1\">。由后验概率可知，随着同时检验的假设个数（即因子个数）的增加，后验概率 <img src=\"https://www.zhihu.com/equation?tex=p_i\" alt=\"p_i\" eeimg=\"1\"> 将更加接近零。换句话说，随着噪声信号（虚假因子）个数的增多，真实因子传递出来的证据也会随之而降低。这正是贝叶斯框架自带奥卡姆剃刀效应，即根据同时被检验的因子的个数自动调整因子为真的后验概率的原因。</p>\n<p data-pid=\"mLuBZYFn\">下表展示了来自 Scott and Berger (2006) 的一个例子。无论采用哪种 <img src=\"https://www.zhihu.com/equation?tex=p_0\" alt=\"p_0\" eeimg=\"1\"> 的先验分布，当噪声信号个数 <img src=\"https://www.zhihu.com/equation?tex=n\" alt=\"n\" eeimg=\"1\"> 增多时（取值从 25 上升至 5000），原始信号为真的后验概率随之而降低，体现了频率主义方法中对多重假设检验的惩罚。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-1e672f755b8a5d174c01bf3158debcc4_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1814\" data-rawheight=\"978\" class=\"origin_image zh-lightbox-thumb\" width=\"1814\" data-original=\"https://pic1.zhimg.com/v2-1e672f755b8a5d174c01bf3158debcc4_r.jpg\"></figure><p data-pid=\"aii2TrZB\">虽然完整的贝叶斯框架听上去很不错，但实操起来也有很多问题。首先正如前文所述，它的假设（尤其条件独立性方面的假设）太过苛刻。第二就是计算方面的问题，当同时考虑的因子个数很多时，计算每个因子为真的后验概率极具挑战。</p>\n<h2><b>3 最小贝叶斯因子</b></h2>\n<p data-pid=\"zqBdBmvK\">第二篇要谈的文章是 Harvey (2017)，即 Campbell Harvey 在 AFA 年会做的主席演讲。该文通过贝叶斯统计和原始 <i>p</i>-value，构造了一个后验贝叶斯 <i>p</i>-value[3]。</p>\n<p data-pid=\"trIQwdex\">由贝叶斯统计可知，先验机会比（prior odds ratio）、后验机会比（posterior odds ratio）以及贝叶斯因子（Bayes factor）之间满足如下关系：</p>\n<p data-pid=\"QRLhZMR4\"><img src=\"https://www.zhihu.com/equation?tex=%5Cmbox%7Bposterior+odds+ratio%7D%3D%5Cmbox%7Bprior+odds+ratio%7D%5Ctimes%5Cmbox%7BBayes+factor%7D\" alt=\"\\mbox{posterior odds ratio}=\\mbox{prior odds ratio}\\times\\mbox{Bayes factor}\" eeimg=\"1\"></p>\n<p data-pid=\"9R9SZ3SR\">在我们的上下文中，令 <img src=\"https://www.zhihu.com/equation?tex=H_0\" alt=\"H_0\" eeimg=\"1\"> 和 <img src=\"https://www.zhihu.com/equation?tex=H_1\" alt=\"H_1\" eeimg=\"1\"> 代表关于因子预期收益率的原假设和备择假设，则 Bayes factor 定义为两个似然函数之比</p>\n<p data-pid=\"lxS40qgB\"><img src=\"https://www.zhihu.com/equation?tex=%5Cmbox%7BBayes+factor%7D%3D%5Cfrac%7Bf%28data%7CH_0%29%7D%7Bf%28data%7CH_1%29%7D\" alt=\"\\mbox{Bayes factor}=\\frac{f(data|H_0)}{f(data|H_1)}\" eeimg=\"1\"></p>\n<p data-pid=\"LIA3_YdE\">令 <img src=\"https://www.zhihu.com/equation?tex=%5Ctheta_0\" alt=\"\\theta_0\" eeimg=\"1\"> 表示 <img src=\"https://www.zhihu.com/equation?tex=H_0\" alt=\"H_0\" eeimg=\"1\"> 的参数。在检验因子预期收益率时，通常原假设为零，因此可以将 <img src=\"https://www.zhihu.com/equation?tex=H_0\" alt=\"H_0\" eeimg=\"1\"> 写成 <img src=\"https://www.zhihu.com/equation?tex=%5Ctheta_0%3D0\" alt=\"\\theta_0=0\" eeimg=\"1\"> 。但是对于备择假设，为了让分析更具一般性，往往认为在 <img src=\"https://www.zhihu.com/equation?tex=H_1\" alt=\"H_1\" eeimg=\"1\"> 下，对应的参数 <img src=\"https://www.zhihu.com/equation?tex=%5Ctheta_1\" alt=\"\\theta_1\" eeimg=\"1\"> 服从先验分布 <img src=\"https://www.zhihu.com/equation?tex=%5Cpi_A%28%5Ctheta_1%29\" alt=\"\\pi_A(\\theta_1)\" eeimg=\"1\"> 。在这种情况下，其似然函数为 <img src=\"https://www.zhihu.com/equation?tex=%5Cint+f%28data%7C%5Ctheta_1%29%5Cpi_A%28%5Ctheta_1%29d%5Ctheta_1\" alt=\"\\int f(data|\\theta_1)\\pi_A(\\theta_1)d\\theta_1\" eeimg=\"1\"> ，因此 Bayes factor 可以变为</p>\n<p data-pid=\"Z9UH-o7g\"><img src=\"https://www.zhihu.com/equation?tex=%5Cmbox%7BBayes+factor%7D%3D%5Cfrac%7Bf%28data%7C%5Ctheta_0%29%7D%7B+%5Cint+f%28data%7C%5Ctheta_1%29%5Cpi_A%28%5Ctheta_1%29d%5Ctheta_1%7D\" alt=\"\\mbox{Bayes factor}=\\frac{f(data|\\theta_0)}{ \\int f(data|\\theta_1)\\pi_A(\\theta_1)d\\theta_1}\" eeimg=\"1\"></p>\n<p data-pid=\"S12ssDds\">毫无疑问，对于检验因子来说，后验机会比是我们真正关注的问题。因为它告诉我们原假设和备择假设后验概率的高低 —— 一个特别低的后验机会比意味着原假设的后验概率很低，因此我们可以安全地拒绝原假设，即认为因子是真实的。</p>\n<p data-pid=\"69sbwu7i\">不过，想要计算后验机会比，就必须要先算出 Bayes factor。但从上面的定义可知，计算 Bayes factor 需要我们指定备择假设下的先验分布，但这往往非常困难。不过好消息是，在众多 Bayes factor 的取值中，有一个特殊的取值，它就是 Harvey (2017) 提出的最小贝叶斯因子（minimum Bayes factor，MBF）。</p>\n<p data-pid=\"uBDVVmtK\">为了直观理解 MBF，我们来回顾一下</p>\n<p data-pid=\"YgKfyKvr\"><img src=\"https://www.zhihu.com/equation?tex=%5Cmbox%7Bposterior+odds+ratio%7D%3D%5Cmbox%7Bprior+odds+ratio%7D%5Ctimes%5Cmbox%7BBayes+factor%7D\" alt=\"\\mbox{posterior odds ratio}=\\mbox{prior odds ratio}\\times\\mbox{Bayes factor}\" eeimg=\"1\"></p>\n<p data-pid=\"hq3ZXtGE\">上式可以理解为，对于 <img src=\"https://www.zhihu.com/equation?tex=H_0\" alt=\"H_0\" eeimg=\"1\"> 和 <img src=\"https://www.zhihu.com/equation?tex=H_1\" alt=\"H_1\" eeimg=\"1\"> 来说，我们从先验机会比出发，通过（乘以）Bayes factor 得到后验机会比。当给定先验机会比时，Bayes factor 越小（因而后验机会比越低），则说明相对于先验，我们在后验中对原假设仍然持有的信念就越弱；Bayes factor 越大（因而后验机会比越高），则说明相对于先验，我们在后验中对原假设仍然持有的信念就越强。因此，Bayes factor 衡量了，在我们看到样本数据之后，会在多大程度上偏离先验机会比，而 MBF 提供了对于原假设来说最强烈程度的偏离。</p>\n<blockquote data-pid=\"OKTRBALN\"><i>MBF is the Bayes factor that provides the strongest evidence against the null hypothesis.</i></blockquote>\n<p data-pid=\"B6Xv18lW\">直观理解 MBF 之后，我们便能够顺水推舟地搞懂如何计算它，因为 MBF 对应着一个特殊的备择假设下的先验分布。考虑下面这个例子，假设我们有 1000 个收益率观测值，其样本均值为 4%。假设先验机会比为 3/7，即先验中我们认为原假设为真的概率是 30%。那么在什么情况下我们会得到 MBF 呢？这个问题的答案是：在备择假设的先验分布中，所有的数据都集中在 4% 这个样本均值：</p>\n<blockquote data-pid=\"BfW5N8BX\"><i>It occurs when the density of the prior distribution of alternative hypothesis concentrates at the maximum likelihood estimate of data.</i></blockquote>\n<p data-pid=\"SA6u6ZV6\">通过以上论述可知，MBF 允许我们计算原假设后验概率的 lower bound，更关键的是它回答的是人们真正关心的问题，即给定数据时原假设为真的条件概率是多少。利用原始 <i>p</i>-value 或者 <i>t</i>-statistic，我们可以很容易地计算出 MBF（Harvey 2017 给出了两种计算方法）。</p>\n<p data-pid=\"TZhUXuVc\">此外，利用 <img src=\"https://www.zhihu.com/equation?tex=%5Cmbox%7Bposterior+odds+ratio%7D%3D%5Cmbox%7Bprior+odds+ratio%7D%5Ctimes%5Cmbox%7BBayes+factor%7D+\" alt=\"\\mbox{posterior odds ratio}=\\mbox{prior odds ratio}\\times\\mbox{Bayes factor} \" eeimg=\"1\"> 并经过简单代数运算，可以方便的求出原假设的后验概率，Harvey (2017) 称其为 Bayesianized p-value：</p>\n<p data-pid=\"8YnXaOfW\"><img src=\"https://www.zhihu.com/equation?tex=%5Cmbox%7BBayesianized+%24p%24-value%7D%3D%5Cfrac%7B%5Cmbox%7BMBF%7D%5Ctimes%5Cmbox%7Bprior+odds+ratio%7D%7D%7B1%2B%5Cmbox%7BMBF%7D%5Ctimes%5Cmbox%7Bprior+odds+ratio%7D%7D\" alt=\"\\mbox{Bayesianized $p$-value}=\\frac{\\mbox{MBF}\\times\\mbox{prior odds ratio}}{1+\\mbox{MBF}\\times\\mbox{prior odds ratio}}\" eeimg=\"1\"></p>\n<p data-pid=\"8sX2J5ju\">为了在实际操作中应用 Bayesianized <i>p</i>-value，除了需要知道 MBF 之外，还需要指定 prior odds ratio。为此 Harvey (2017) 给出了一些经验法则：（1）对于一看就没什么道理的因子，prior odds ratio = 49:1；（2）对于似是而非的因子，prior odds ratio = 4:1；（3）对于具备经济学理论依据的因子，prior odds ratio = 1:1。</p>\n<p data-pid=\"S0LHISsV\">相比于本文介绍的完整贝叶斯框架，基于 MBF 的方法更具可操作性。</p>\n<h2><b>4 Double-Bootstrap</b></h2>\n<p data-pid=\"7BYNRpXt\">最后是 Harvey and Liu (2020)。</p>\n<p data-pid=\"NQeKHVXW\">这篇文章（以及其后续文章 Harvey and Liu 2021）也并非传统意义上的贝叶斯方法，但是它们都通过一个先验参数 <img src=\"https://www.zhihu.com/equation?tex=p_0\" alt=\"p_0\" eeimg=\"1\"> 控制真实因子的比例。</p>\n<p data-pid=\"XGx5PEIP\">其实<a href=\"https://zhuanlan.zhihu.com/p/348966374\" class=\"internal\">《出色不如走运(V)?》</a>一文已经对 Harvey and Liu (2020) 进行了详细的介绍。之所以再次提它，原因是搞懂这篇文章中关于 <img src=\"https://www.zhihu.com/equation?tex=p_0\" alt=\"p_0\" eeimg=\"1\"> 的贝叶斯解释（下图）正是促使我对这系列文章进行梳理并写下此文的原因。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-c3833eac43c2e4357db9c3504ce47e62_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1543\" data-rawheight=\"886\" class=\"origin_image zh-lightbox-thumb\" width=\"1543\" data-original=\"https://pic3.zhimg.com/v2-c3833eac43c2e4357db9c3504ce47e62_r.jpg\"></figure><p data-pid=\"pvDymIL-\">希望至此，你也和我一样，不再有困惑。</p>\n<p data-pid=\"ZPPtN_FC\">我个人很喜欢 Harvey and Liu (2020) 的 double-bootstrap 框架，也基于它做了很多实证分析。该方法通过引入 <img src=\"https://www.zhihu.com/equation?tex=p_0\" alt=\"p_0\" eeimg=\"1\"> 和 double-bootstrap 让人们表达先验，并且在控制 Type I error rate 的同时也能够权衡 Type II error rate。这在 Type II error 的成本越来越高的今天显得尤为重要。</p>\n<h2><b>5 结束语</b></h2>\n<p data-pid=\"eNUv4VMS\">本文借 Campbell Harvey 的几篇文章梳理了贝叶斯统计在 <i>p</i>-hacking 问题上的应用。需要强调的是，全文并没有强调贝叶斯方法就比频率主义方法更好（或更差）。只不过对于需要注入经济学理论的实证资产定价研究来说，利用合理的先验，并回答正确的问题（不要再盯着 <i>p</i>-value 尤其是 <i>p</i>-hacking 出来的 <i>p</i>-value 不放），注定能够带给我们一些新的思考和启发。</p>\n<p data-pid=\"yQSwRNcJ\">Harvey and Liu (2021) 的分析表明，由于我们只观测到了被发表的因子，而不知道人们到底尝试了多少因子，因此这个问题是未识别的（lack of identification）。而正因如此，对 <i>p-</i>hacking 的研究确实存在主观的一面。与其深究各种（存在问题的）贝叶斯方法，不如承认这个计量上的系统问题，并通过合理的先验得到令人信服的结论。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"FS9YMu3a\"><b>备注：</b></p>\n<ol>\n<li data-pid=\"zN4OnvrI\">见 <a href=\"https://link.zhihu.com/?target=https%3A//www.tandfonline.com/toc/utas20/73/sup1\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">tandfonline.com/toc/uta</span><span class=\"invisible\">s20/73/sup1</span><span class=\"ellipsis\"></span></a>\n</li>\n<li data-pid=\"AiHchbX0\">见<a href=\"https://zhuanlan.zhihu.com/p/189302345\" class=\"internal\">《常见多重检验方法及其实证 (I)》</a>。</li>\n<li data-pid=\"M0Yi_Chq\">见<a href=\"https://zhuanlan.zhihu.com/p/38663777\" class=\"internal\">《在追逐 p-value 的道路上狂奔，却在科学的道路上渐行渐远》</a>。</li>\n</ol>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"7Zr9WxxG\"><b>参考文献</b></p>\n<ul>\n<li data-pid=\"U3svDbLN\">Chordia, T., A. Goyal, and A. Saretto (2020). Anomalies and false rejections. <b><i>Review of Financial Studies</i></b> <i>33</i>(5), 2134 – 2179.</li>\n<li data-pid=\"CD87bKTr\">Harvey, C. R. (2017). Presidential address: The scientific outlook in financial economics. <b><i>Journal of Finance</i></b> <i>72</i>(4), 1399 – 1440.</li>\n<li data-pid=\"T9CCjUzB\">Harvey, C. R. and Y. Liu (2020). False (and missed) discoveries in financial economics. <i><b>Journal of Finance</b> 75</i>(5), 2503 – 2553.</li>\n<li data-pid=\"mclHBbjj\">Harvey, C. R. and Y. Liu (2021). Uncovering the iceberg from its tip: A model of publication bias and p-hacking. Working paper.</li>\n<li data-pid=\"MpkJ39Jm\">Harvey, C. R., Y. Liu, and A. Saretto (2020). An evaluation of alternative multiple testing methods for finance applications. <b><i>Review of Asset Pricing Studies</i></b> <i>10</i>(2), 199 – 248.</li>\n<li data-pid=\"V5bXd-9h\">Harvey, C. R., Y. Liu, and H. Zhu (2016). … and the cross-section of expected returns. <i><b>Review of Financial Studies </b>29</i>(1), 5 – 68.</li>\n<li data-pid=\"k-_e6wnO\">Scott, J. G. and J. O. Berger (2006). An exploration of aspects of Bayesian multiple testing. <b><i>Journal of Statistical Planning and Inference</i></b> <i>136</i>(7), 2144 – 2162.</li>\n<li data-pid=\"wrBy4wg1\">Wasserstein, R. L., A. L. Schirm, and N. A. Lazar (2019). Moving to a world beyond “p &lt;0.05”. <b><i>The American Statistician</i></b> <i>73</i>(sup1), 1 – 19.</li>\n</ul>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"Zmwd8aN2\"><b>免责声明：</b>入市有风险，投资需谨慎。在任何情况下，本文的内容、信息及数据或所表述的意见并不构成对任何人的投资建议。在任何情况下，本文作者及所属机构不对任何人因使用本文的任何内容所引致的任何损失负任何责任。除特别说明外，文中图表均直接或间接来自于相应论文，仅为介绍之用，版权归原作者和期刊所有。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"gsln3LNp\">原创不易，请保护版权。如需转载，请联系获得授权，并注明出处。已委托“维权骑士”(<a href=\"https://link.zhihu.com/?target=http%3A//rightknights.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">维权骑士-版权保护 版权知识 原创检测 识别字体 著作权登记</a>) 为进行维权行动。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/mitcshi?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">石川</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/476007400?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"投资领袖和他们的思想之光","date":"2022-03-23 03:56:09","description":"\n<p data-pid=\"E_S9r2Nz\"><b>摘要：</b>这些先行者的杰出工作和重要贡献塑造了如今人们对投资的认知。</p>\n<h2><b>引言</b></h2>\n<p data-pid=\"ffaR7A3Q\">前不久，借着 Vertin Award 颁发 25 年之际，CFA 协会推出了题为 Investment Luminaries and Their Insights 的特刊（对，本文的标题参考了这个题目），回顾了 25 年来评选的获奖者们对投资业界的巨大贡献。</p>\n<p data-pid=\"-o-mPUdf\"><a href=\"https://link.zhihu.com/?target=https%3A//www.cfainstitute.org/en/research/foundation/2021/twenty-five-years-rf-vertin-award\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">cfainstitute.org/en/res</span><span class=\"invisible\">earch/foundation/2021/twenty-five-years-rf-vertin-award</span><span class=\"ellipsis\"></span></a></p>\n<p data-pid=\"VKrSEJGt\">下图列出了截至 2021 年的获奖者，各个如雷贯耳。他们虽然有些来自学界，有些扎根业界，但共同点是其杰出工作和重要贡献都塑造了人们如今对投资的认知和对市场的理解。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-a15d889a137e2ab697b88a98fea285b5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1313\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic2.zhimg.com/v2-a15d889a137e2ab697b88a98fea285b5_r.jpg\"></figure><p data-pid=\"e5cokrph\">对每位获奖者（除去已故获奖者），特刊从以下几个方面进行了介绍：</p>\n<ol>\n<li data-pid=\"MNnPBL-Z\">主要成就；</li>\n<li data-pid=\"vypvEpCR\">代表文献以及对其影响最大的文献；</li>\n<li data-pid=\"3jUmNHXg\">最重要的投资心得；</li>\n<li data-pid=\"X8CF5R_C\">对未来的看法；</li>\n<li data-pid=\"hGNXk01Y\">是否有职业遗憾。</li>\n</ol>\n<p data-pid=\"4nKR1hhg\">通过前两方面的介绍，我们能够了解大佬们自身对投资的贡献，而第三、第四点则传递出他们关于投资非常深刻的 insights，读来颇有启发。比如，关于重要的投资心得，我们能够听到：</p>\n<blockquote data-pid=\"ucog1S4f\"><i>\"Alpha is like a mushroom: when exposed to the light, it withers.\"</i></blockquote>\n<p data-pid=\"V30cJblH\">以及这样：</p>\n<blockquote data-pid=\"WXVBcF6s\"><i>\"In the long run, we’re all dead, but make sure the short run doesn't kill you first.\"</i></blockquote>\n<p data-pid=\"0EW1bAoF\">还有这样：</p>\n<blockquote data-pid=\"oI0c1RJf\"><i>\"Investment suc­cess requires a healthy appreciation of markets and a deep understanding of when each model will and will not work.\"</i></blockquote>\n<p data-pid=\"ilf6HcI0\">鉴于此，本文挑一些我最感兴趣的大佬进行介绍（仅仅反映了我个人的偏好），依照获奖顺序，他们包括：William Sharpe、Andrew Lo、Clifford Asness、Campbell Harvey、Robert Shiller、Richard Grinold、Ronald Kahn、Kenneth French、Terrance Odean 以及 Maureen O'Hara。</p>\n<p data-pid=\"rsP2CQdM\">在叙述中，我只会在某些“代表文献”环节稍加评论或补充信息。此外，“最重要的投资心得”和“对未来的看法”两部分会保留英文、不做翻译（相信各位已经从上面的“剧透”中体会到大佬金句的精妙了）。</p>\n<h2><b>William F. Sharpe</b></h2>\n<p data-pid=\"Dy6y44iX\"><b>成就：</b>CAPM 发明者之一，Sharpe Ratio（无需多言），1990 年诺贝尔经济学奖获得者。</p>\n<p data-pid=\"NnV060CT\"><b>代表文献：</b></p>\n<ul>\n<li data-pid=\"53azW6xj\">Sharpe, W. F. (1964). Capital asset prices: A theory of market equilibrium under conditions of risk. <b><i>Journal of Finance</i></b> <i>19</i>(3), 425 – 442.</li>\n<li data-pid=\"UeFlRgUk\">Sharpe, W. F. (1992). Asset allocation: Management style and performance measurement. <b><i>Journal of Portfolio Management</i></b> <i>18</i>(2), 7 – 19.</li>\n<li data-pid=\"DqRx4Zb2\">Sharpe, W. F. (1966). Mutual fund performance. <i><b>Journal of Business</b></i> <i>39</i>(1), 119 – 138.</li>\n</ul>\n<p data-pid=\"BNWMyAIb\">第一篇是 CAPM，就不说了；第二篇则拉开了投资组合风格分析的序幕，而 Sharpe 也因该文获得了 2015  Wharton-Jacobs Levy Prize；第三篇关于 Sharpe Ratio 是我补充的。</p>\n<p data-pid=\"80Snn2vW\"><b>对其影响最大的文献：</b></p>\n<ul>\n<li data-pid=\"O4B7JzWN\">Markowitz, H. (1952). Portfolio selection. <b><i>Journal of Finance</i></b> <i>7</i>(1), 77 – 91.</li>\n<li data-pid=\"6fbwDWir\">Arrow, K. J. (1964). The role of securities in the optimal allocation of risk-bearing. <b><i>Review of Economic Studies</i></b> <i>31</i>(2), 91 – 96.</li>\n</ul>\n<p data-pid=\"5j3tDScW\"><b>最重要投资心得：</b>The importance of diversification in investment management.</p>\n<p data-pid=\"rKuAjOt_\"><b>对未来的看法：</b>Growing importance of life cycle investing.</p>\n<p data-pid=\"joNHLO7m\"><b>是否有任何职业上的遗憾：</b>没有产生任何重大后果的遗憾。</p>\n<h2><b>Andrew W. Lo</b></h2>\n<p data-pid=\"kAeZWXpp\"><b>成就：</b>MIT 教授，提出适应性市场假说（Adaptive Markets Hypothesis）。</p>\n<p data-pid=\"VK1_1l2f\"><b>代表文献：</b></p>\n<ul>\n<li data-pid=\"Jn4kSzma\">Lo, A. W. and A. C. MacKinlay (1988). Stock market prices do not follow random walks: Evidence from a simple specification test. <b><i>Review of Financial Studies</i></b> <i>1</i>(1), 41 – 66.</li>\n<li data-pid=\"4NLJiKkN\">Campbell, J. Y., A. W. Lo, and A. C. MacKinlay (1997). <i>The Econometrics of Financial Markets</i>. Princeton, NJ: Princeton University Press.</li>\n<li data-pid=\"3STfJX11\">Lo, A. W. (2017). <i>Adaptive Markets: Financial Evolution at the Speed of Thought</i>. Princeton, NJ: Princeton University Press.</li>\n</ul>\n<p data-pid=\"Da4F3qSr\"><b>对其影响最大的文献：</b></p>\n<ul>\n<li data-pid=\"tAdCOddV\">Merton, R. C. (1981). 15.415 Lecture notes, Spring 1981. Cambridge, MA: MIT Sloan School of Management.</li>\n<li data-pid=\"7AjPMkPt\">Merton, R. C. (1992). <i>Continuous Time Finance</i>. London, UK: Blackwell.</li>\n<li data-pid=\"jYAo2Bqs\">Wilson, E. O. (1975). <i>Sociobiology: A New Synthesis</i>. Cambridge, MA: Harvard University Press.</li>\n</ul>\n<p data-pid=\"8D0LTZ9g\"><b>最重要投资心得：</b>(1) Markets can stay irrational longer than you can stay solvent. (2) In the long run, we're all dead, but make sure the short run doesn't kill you first. (3) It's amazing how much more you can accomplish if it doesn't matter who gets the credit.</p>\n<p data-pid=\"Nnqz8OMq\"><b>对未来的看法：</b>Markets will become far more adaptive in the future, and technological innovations will play a bigger role in creating new opportunities as well as new challenges.</p>\n<p data-pid=\"ZvapsKRc\"><b>是否有任何职业上的遗憾：</b>要是能够更早和学界和业界的同事展开合作该有多好！我从每个合作者那里学到了很多东西，我们取得了更快的进步，这也比独自研究要有趣得多！</p>\n<h2><b>Clifford S. Asness</b></h2>\n<p data-pid=\"O0vM60P9\"><b>成就：</b>AQR 的联合创始人。</p>\n<p data-pid=\"1mYli2qD\"><b>代表文献：</b>这部分我建议感兴趣的小伙伴参考 AQR 出版的 20 for 20，那本书里收录了 AQR 最重要的 20 篇文章，其中不少都有 Asness 的身影。</p>\n<p data-pid=\"RdT92zjA\"><b>对其影响最大的文献：</b></p>\n<ul>\n<li data-pid=\"oA0YiNp2\">Fama, E. F. (1976). <i>Foundations of Finance</i>. New York: Basic Books.</li>\n<li data-pid=\"aRad5yXP\">Fama, E. F. and K. R. French (1992). The cross-section of expected stock returns. <b><i>Journal of Finance</i></b> <i>47</i>(2), 427 – 465.</li>\n<li data-pid=\"HmSh-G3Y\">Fama, E. F. and K. R. French (1993). Common risk factors in the returns of stocks and bonds. <b><i>Journal of Financial Economics</i></b> <i>33</i>(1), 3 – 56.</li>\n</ul>\n<p data-pid=\"oPbe_avX\">确实对得起“<a href=\"https://zhuanlan.zhihu.com/p/68850512\" class=\"internal\">Eugene Fama</a> 过去 20 年最优秀的学生”这个 comment。另外，Asness 在这部分还补充了“Anything by Jack Bogle”。</p>\n<p data-pid=\"4AVv7hIu\"><b>最重要投资心得：</b>Finding an investment strategy you believe in for the long term turned out to be the easy part. Sticking with it through its ups and downs turned out to be the hard (but doable) part.</p>\n<p data-pid=\"nxAY_qBN\"><b>对未来的看法：</b>Lower long-term returns on traditional stocks and bonds than we’ve grown used to. Higher long-term returns on out-of-favor simple strategies like international diversification and a value tilt.</p>\n<p data-pid=\"cUo_irw3\"><b>是否有任何职业上的遗憾：</b>如果我认为自己是对的，我从来不会回避任何分歧，而是总是全力以赴。是的，你可能会对同样的事情感到最自豪和最后悔。有时你需要为坚持你所引以为豪的事而付出代价！</p>\n<h2><b>Campbell R. Harvey</b></h2>\n<p data-pid=\"ZB_quyco\"><b>成就：</b>Duke 教授，前 AFA 主席。</p>\n<p data-pid=\"RW_a_LEc\"><b>代表文献：</b></p>\n<ul>\n<li data-pid=\"vkDZxngK\">Harvey, C. R. (2017). Presidential address: The scientific outlook in financial economics. <b><i>Journal of Finance</i></b> <i>72</i>(4), 1399 – 1440.</li>\n<li data-pid=\"P5JeCfcf\">Graham, J. R., C. R. Harvey, and S. Rajgopal (2005). The economic implications of corporate financial reporting. <b><i>Journal of Accounting and Economics</i></b> <i>40</i>(1-3), 3 – 73.</li>\n<li data-pid=\"ZLKvlJFl\">Claude, B. E. and C. R. Harvey (2006). The strategic and tactical value of commodity futures. <b><i>Financial Analysts Journal</i></b> <i>62</i>(2), 69 – 97.</li>\n</ul>\n<p data-pid=\"mbc_xEDB\">在 Harvey 教授的诸多研究中，我最喜欢的是他对于 <i>p</i>-hacking 问题的关注和发现，见<a href=\"https://zhuanlan.zhihu.com/p/476007400\" class=\"internal\">《出色不如走运》</a>系列，以及<a href=\"https://zhuanlan.zhihu.com/p/157792508\" class=\"internal\">《Tortured Data》</a>。</p>\n<p data-pid=\"p-AL75KO\"><b>对其影响最大的文献：</b></p>\n<ul>\n<li data-pid=\"CUiQz4m4\">Russell, B. (1931). <i>Scientific Outlook</i>. London, UK: George Allen and Unwin Ltd.</li>\n<li data-pid=\"J_v9mg3c\">Markowitz, H. (1952). Portfolio selection. <b><i>Journal of Finance</i></b> <i>7</i>(1), 77 – 91.</li>\n<li data-pid=\"8TBrjg-o\">Nakamoto, S. (2008). Bitcoin: A peer-to-peer electronic cash system. </li>\n</ul>\n<p data-pid=\"EBynmJlp\">Markowitz (1952) 二度被提及。</p>\n<p data-pid=\"OPXgKxhi\"><b>最重要投资心得：</b>The importance of economic incentives in shap­ing research.</p>\n<p data-pid=\"LOhSpbDi\"><b>对未来的看法：</b>My new book, DeFi and the Future of Finance (with Ashwin Ramachandran and Joey Santoro), sketches a vision of finance in the future where the traditional banks, brokers, and insurance companies are replaced by decentralized algorithms.</p>\n<p data-pid=\"x1JchZ8I\"><b>是否有任何职业上的遗憾：</b>仅是读博的时候在 UChicago 呆了三年。时光转瞬即逝，有太多的东西来不及学习。</p>\n<h2><b>Robert J. Shiller</b></h2>\n<p data-pid=\"HBDpt-yp\"><b>成就：</b>Yale 教授，前 AEA 主席，2013 诺贝尔经济学奖获得者，行为金融学奠基人。</p>\n<p data-pid=\"hjSdhfzS\"><b>代表文献：</b></p>\n<ul>\n<li data-pid=\"TF37NdIC\">Shiller, R. J. (2000). <i>Irrational Exuberance</i>. Princeton, NJ: Princeton University Press.</li>\n<li data-pid=\"e7ehxTVI\">Akerlof, G. A. and R. J. Shiller (2010). <i>Animal Spirits: How Human Psychology Drives the Economy, and Why It Matters for Global Capitalism</i>. Princeton, NJ: Princeton University Press.</li>\n<li data-pid=\"rKA1Kah5\">Akerlof, G. A. and R. J. Shiller (2016). <i>Phishing for Phools: The Economics of Manipulation and Deception</i>. Princeton, NJ: Princeton University Press.</li>\n<li data-pid=\"Ev4ttgUw\">Shiller, R. J. (2019). <i>Narrative Economics</i>. Princeton, NJ: Princeton University Press.</li>\n<li data-pid=\"GLrwIPU1\">Shiller, R. J. (1981). Do Stock Prices Move Too Much to Be Justified by Subsequent Changes in Dividends? <b><i>American Economic Review</i></b> <i>71</i>(3), 421 – 436.</li>\n<li data-pid=\"iwZG4CuC\">Shiller, R. J. (1984). Stock prices and social dynamics. <b><i>Brookings Papers on Economic Activity</i></b> <i>1984</i>(2), 457 – 510.</li>\n<li data-pid=\"2Ed8ffDi\">Case, K. E. and R. J. Shiller (1989). The efficiency of the market for single-family homes. <i><b>American Economic Review</b></i> <i>79</i>(1), 125 – 137.</li>\n</ul>\n<p data-pid=\"gCiI9-mn\">Shiller 的众多畅销书无需多言。作为行为金融学的奠基人，Shiller (1981) 通过 variance ratio tests 指出价格的方差比未来股息折现值之和的方差要大得多；而 Shiller (1984) 则提出了噪声交易者模型和套利限制，拉开了行为金融学研究的大幕。此外 Case-Shiller Housing Index 也是家喻户晓。</p>\n<p data-pid=\"7DO4BdE8\"><b>对其影响最大的文献：</b></p>\n<ul>\n<li data-pid=\"sa5V9UPE\">Smith, A. (1759). <i>The Theory of Moral Sentiments</i>. London: George Bell and Sons.</li>\n<li data-pid=\"WAtIECRd\">Wilson, E. O. (1998). <i>Consilience: The Unity of Knowledge</i>. New York: Vintage Books.</li>\n<li data-pid=\"Xn1E-96-\">Markowitz, H. (1952). Portfolio selection. <b><i>Journal of Finance</i></b> <i>7</i>(1), 77 – 91.</li>\n</ul>\n<p data-pid=\"FPUZhMqs\">Markowitz (1952) 第三次被提及！</p>\n<p data-pid=\"pbodPivU\"><b>最重要投资心得：</b>As Adam Smith recounted in 1759, we can nor­mally rely on others because of a desire among normal adults for praiseworthiness, not just a desire for comforts or a desire to be praised. One must judge the character of investment advisers to see if they express this normal sentiment. As Akerlof and I wrote in Phishing for Phools, there are so many opportunities for manipulation and deception in business that we must rely on this better side of human nature.</p>\n<p data-pid=\"fQB8I3wj\"><b>对未来的看法：</b>At this point in history, August 2021, I see an unusually left-skewed probability distribution of future real returns in the United States and some other countries for all three major asset classes: stocks, bonds, and real estate.</p>\n<p data-pid=\"DHGSrmAt\"><b>是否有任何职业上的遗憾：</b>我希望有更多的时间享受职业生涯中的美好时刻，有更多的时间让我与学生和其他同僚变得更加密切。我还要引用古代诗人贺拉斯的不朽名言：carpe diem（活在当下，及时行乐）！</p>\n<h2><b>Richard C. Grinold</b></h2>\n<p data-pid=\"uWgqTP7F\"><b>成就：</b>业界巨作 Active Portfolio Management 作者之一，曾任Global Director of Research at Barclays Global Investors，曾任 Director of Research/President of BARRA。</p>\n<p data-pid=\"yjjk_Qfh\"><b>代表文献：</b></p>\n<ul>\n<li data-pid=\"LshzfwpE\">Grinold, R. (1989). The fundamental law of active management. <b><i>Journal of Portfolio Management</i></b> <i>15</i>(3), 30 – 38.</li>\n<li data-pid=\"GiEhS1oR\">Grinold, R. (1994). <a href=\"https://link.zhihu.com/?target=http%3A//mp.weixin.qq.com/s%3F__biz%3DMzIyMDEwNDk1Mg%3D%3D%26mid%3D2650876182%26idx%3D1%26sn%3D6ebae2aa85c915f61efd0b1f475daffc%26chksm%3D8c249881bb531197c6ea273e271547ce01f69ef57272e81479bfb0a3ca7f94c0b8e56c86c754%26scene%3D21%23wechat_redirect\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Alpha is volatility times IC times score</a>. <i><b>Journal of Portfolio Management</b></i> <i>20</i>(4), 9 – 16.</li>\n<li data-pid=\"CciB42cr\">Grinold, R. (2007). Dynamic portfolio analysis. <b><i>Journal of Portfolio Management</i></b> <i>34</i>(1), 12 – 26.</li>\n<li data-pid=\"0o8xNE2r\">Grinold, R. C. and Ronald N. Kahn (2000). <i>Active Portfolio Management: A Quantitative Approach for Producing Superior Returns and Controlling Risk</i>. New York: McGraw-Hill.</li>\n<li data-pid=\"-nf_dTp6\">Grinold, R. C. and Ronald N. Kahn (2019). <i>Advances in Active Portfolio Management: New Developments in Quantitative Investing</i>. New York: McGraw-Hill.</li>\n</ul>\n<p data-pid=\"Iyfensip\">无论是 Grinold (1989) 还是 Grinold (1994) 都对业界影响深远，刊载这样的文章本是 JPM 的初衷。再想想如今 JPM 上一篇篇的“无病呻吟”，实在令人唏嘘。Grinold and Kahn (2000) 的 Active Portfolio Management（这已是第二版，第一版是 1994）更是业界人手一本。两位在 2019 也又推出了该书的最新版。</p>\n<p data-pid=\"KKIGv9Ba\"><b>对其影响最大的文献：</b></p>\n<ul>\n<li data-pid=\"1_pA9k65\">Sharpe, W. F. (1991). The arithmetic of active management.<i><b>Financial Analysts Journal</b></i> <i>47</i>(1), 7 – 9.</li>\n<li data-pid=\"ORBCI8Hu\">Arrow, K. J. (1971). <i>Essays in the Theory of Risk Bearing</i>. Chicago: Markham Publishing.</li>\n<li data-pid=\"tjlfaJAA\">Cox, J. C. and M. Rubinstein (1985). <i>Options Markets</i>. Hoboken, NJ: Prentice Hall.</li>\n</ul>\n<p data-pid=\"Jqe-nRnp\"><b>最重要投资心得：</b>Alpha is like a mushroom: when exposed to the light, it withers.</p>\n<p data-pid=\"otwIhvJd\"><b>对未来的看法：</b>There is a lot of room to improve the service and reduce the cost of retail and institutional invest­ment management.</p>\n<p data-pid=\"S_h-znH5\"><b>是否有任何职业上的遗憾：</b>我曾预感到 2007 年量化危机发生的可能性，但我并没有采取行动。</p>\n<h2><b>Ronald N. Kahn</b></h2>\n<p data-pid=\"KDA_rHZ8\"><b>成就：</b>业界巨作 Active Portfolio Management 作者之一，Global head of systematic equity research at BlackRock，曾任 Director of Research of BARRA。</p>\n<p data-pid=\"BIYW77jC\"><b>代表文献：</b></p>\n<ul>\n<li data-pid=\"pzWIw8gI\">Kahn, R. N. and A. Rudd (1995). Does historical performance predict future performance? <b><i>Financial Analysts Journal</i></b> <i>51</i>(6), 43 – 52.</li>\n<li data-pid=\"luQ-d3I8\">Kahn, R. N., M. H. Scanlan, and L. B. Siegel (2006). Five myths about fees. <b><i>Journal of Portfolio Management</i></b> <i>32</i>(3), 56 – 64.</li>\n<li data-pid=\"xA-kPZmE\">Grinold, R. C. and Ronald N. Kahn (2000). The efficiency gains of long-short investing. <b><i>Financial Analysts Journal</i></b> <i>56</i>(6), 40 – 53.</li>\n<li data-pid=\"pqSJXdVm\">Grinold, R. C. and Ronald N. Kahn (2000). <i>Active Portfolio Management: A Quantitative Approach for Producing Superior Returns and Controlling Risk.</i> New York: McGraw-Hill.</li>\n<li data-pid=\"eUAHdXhB\">Grinold, R. C. and Ronald N. Kahn (2019). <i>Advances in Active Portfolio Management: New Developments in Quantitative Investing.</i> New York: McGraw-Hill.</li>\n</ul>\n<p data-pid=\"ogxu3AqN\"><b>对其影响最大的文献：</b></p>\n<ul>\n<li data-pid=\"Q9o83Voe\">Sharpe, W. F. (1991). The arithmetic of active management. <b><i>Financial Analysts Journal</i></b> <i>47</i>(1), 7 – 9.</li>\n<li data-pid=\"7mT9eN6-\">Grossman, S. J. and J. E. Stiglitz (1980). On the impossibility of informationally efficient markets. <b><i>American Economic Review</i></b> <i>70</i>(3), 393 – 408.</li>\n<li data-pid=\"i_Y_Schp\">McLean, R. D. and J. Pontiff (2016). Does academic research destroy stock market predictability? <b><i>Journal of Finance</i></b> <i>71</i>(1), 5 – 32.</li>\n<li data-pid=\"a4X8CGfP\">Christensen, C. (1997). <i>The Innovator’s Dilemma: When New Technologies Cause Great Firms to Fail.</i> Boston, MA: Harvard Business School Press.</li>\n</ul>\n<p data-pid=\"UHmTqYOT\"><b>最重要投资心得：</b>We build quantitative investment mod­els designed to work on average over time. Consistent investment success, however, requires us to navigate through unexpected and unprecedented environments. Investment suc­cess requires a healthy appreciation of markets and a deep understanding of when each model will and will not work.</p>\n<p data-pid=\"vnSahRoI\"><b>对未来的看法：</b>The current explosive growth in unstructured data and associated analytics is the biggest opportunity for active management in at least the past decade.</p>\n<p data-pid=\"maspItZG\"><b>是否有任何职业上的遗憾：</b>唯一后悔的是没能更早地投入到量化投资这个令人兴奋的事业当中。</p>\n<h2><b>Kenneth R. French</b></h2>\n<p data-pid=\"bUmSW6Nu\"><b>成就：</b>Dartmouth 教授，前 AFA 主席，实证资产定价的代表人物之一。</p>\n<p data-pid=\"v7rd_IAf\"><b>代表文献：</b></p>\n<ul>\n<li data-pid=\"HUuC60zF\">Fama, E. F. and K. R. French (1992). The cross-section of expected stock returns. <b><i>Journal of Finance</i></b> <i>47</i>(2), 427 – 465.</li>\n<li data-pid=\"7XZQ3-ak\">Fama, E. F. and K. R. French (1993). Common risk factors in the returns on stocks and bonds. <b><i>Journal of Financial Economics</i></b> <i>33</i>(1), 3 – 56.</li>\n<li data-pid=\"lf_EXAnd\">Fama, E. F. and K. R. French (2015). A five-factor asset pricing model. <i><b>Journal of Financial Economics</b></i> <i>116</i>(1), 1 – 22.</li>\n</ul>\n<p data-pid=\"Hh0KAnTh\">光听这个名字就知道不用太多介绍了。Ken French 和 <a href=\"https://zhuanlan.zhihu.com/p/68850512\" class=\"internal\">Eugene Fama</a> 合作的经典文章自然不止这些，它们都值得反复读。</p>\n<p data-pid=\"pLwU9Oil\"><b>对其影响最大的文献：</b></p>\n<ul>\n<li data-pid=\"e7p-ORCT\">Fama, E. F. (1970). Efficient capital markets: A review of theory and empirical work. <b><i>Journal of Finance</i></b> <i>25</i>(2), 383 – 417.</li>\n<li data-pid=\"577AxIdW\">Black, F. and M. Scholes (1973). The pricing of options and corporate liabilities. <b><i>Journal of Political Economy</i></b> <i>81</i>(3), 637 – 654.</li>\n<li data-pid=\"CpFUoLy7\">Merton, R. C. (1973). The intertemporal Capital Asset Pricing Model. <b><i>Econometrica</i></b> <i>41</i>(5), 867 – 887.</li>\n<li data-pid=\"-Pfp1vDO\">Shleifer, A. and R. W. Vishny (1997). The limits of arbitrage. <i><b>Journal of Finance</b></i> <i>52</i>(1), 33 – 55.</li>\n</ul>\n<p data-pid=\"JvELguVo\"><b>最重要投资心得：</b>The high volatility of realized equity returns obscures their information about expected returns. As a result, 5, 10, even 20 years of past returns may say little about the cross-section of future returns. A good strategy for inves­tors is to presume that patterns in past equity returns are just noise and to require a compel­ling model and robust evidence to reject that hypothesis.</p>\n<p data-pid=\"0D2UdTP-\"><b>对未来的看法：</b>Financial markets will remain volatile, with lots of unexpected challenges and opportunities, and the turbulence will continue to provide great new topics for researchers like me.</p>\n<p data-pid=\"psh8lROw\"><b>是否有任何职业上的遗憾：</b>我有很多遗憾，不过除我之外没人会对它们感兴趣。</p>\n<h2><b>Terrance Odean</b></h2>\n<p data-pid=\"GGixlmH8\"><b>成就：</b>UC Berkeley 教授，最早研究个人投资者的<a href=\"https://link.zhihu.com/?target=https%3A//www.factorwar.com/littlebook/behavioral-finance/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">行为金融学</a>学者之一。</p>\n<p data-pid=\"EiBFbO5l\"><b>代表文献：</b></p>\n<ul>\n<li data-pid=\"DZ4bE69N\">Odean, T. (1998). Are investors reluctant to realize their losses? <b><i>Journal of Finance</i></b> <i>53</i>(5), 175 – 1798.</li>\n<li data-pid=\"C1vNL2Ub\">Barber, B. M. and T. Odean (2001). Boys will be boys: Gender, overconfidence, and common stock investment. <b><i>The Quarterly Journal of Economics</i></b> <i>116</i>(1), 261 – 292.</li>\n<li data-pid=\"Vy30rXCX\">Barber, B. M. and T. Odean (2008). All that glitters: The effect of attention and news on the buying behavior of individual and institutional investors. <b><i>Review of Financial Studies</i></b> <i>21</i>(2), 785 – 818.</li>\n</ul>\n<p data-pid=\"_bdCxtjB\">Odean 和其合作者 Brad Barber 是最早使用投资者账户数据分析投资者行为的学者。此外，通过和其他研究者分享数据，他们极大促进了这一细分但非常重要领域的研究进展。</p>\n<p data-pid=\"FyHhGXOG\"><b>对其影响最大的文献：</b></p>\n<ul>\n<li data-pid=\"67MW_4WK\">Kahneman, D. and D. Lovallo (1993). Timid choices and bold forecasts: A cognitive perspective on risk taking. <b><i>Management Science</i></b> <i>39</i>(1), 17 – 31.</li>\n<li data-pid=\"dZiDepsd\">\n<a href=\"https://zhuanlan.zhihu.com/p/38610013\" class=\"internal\">Thaler, R</a>. (1985). Mental accounting and consumer choice. <b><i>Marketing Science</i></b> <i>4</i>(3), 199 – 214.</li>\n</ul>\n<p data-pid=\"PspRbC5j\">Odean 曾是 Kahneman 的学生。根据 <a href=\"https://zhuanlan.zhihu.com/p/356536296\" class=\"internal\">The Undoing Project</a> 一书中的描述，在 2002 年 10 月 9 日这个注定成为传奇的日子，Kahneman 正坐在桌边热情洋溢地为 Odean 写推荐信，而就在此时，一通来自瑞典的电话打破了深夜的宁静。</p>\n<p data-pid=\"s9Z19bJL\"><b>最重要投资心得：</b>Markets need heterogeneity.</p>\n<p data-pid=\"b_dV72fg\"><b>对未来的看法：</b>We need to change the defined contribution pension model.</p>\n<p data-pid=\"DBmCwhJX\"><b>是否有任何职业上的遗憾：</b>曾花了大量精力研究如下课题，即通过面向对象的包含个人和机构投资者的股票市场模拟来研究行为偏差对资产定价的影响，然而却未能将其发表。</p>\n<h2><b>Maureen O'Hara</b></h2>\n<p data-pid=\"B8_bwa3J\"><b>成就：</b>Cornell 教授，前 AFA 主席（首位女性 AFA 主席），研究市场微观结构的权威，提出 PIN/VPIN 模型。</p>\n<p data-pid=\"cR5DbN3B\"><b>代表文献：</b></p>\n<ul>\n<li data-pid=\"zPq_MwZK\">O'Hara, M. (1995). <i>Market Microstructure Theory</i>. Hoboken, NJ: Blackwell.</li>\n<li data-pid=\"W0WMx3Td\">Easley, D. and M. O'Hara (1987). Price, trade size, and information in securities markets. <b><i>Journal of Financial Economics</i></b> <i>19</i>(1), 69 – 90.</li>\n<li data-pid=\"Rx6Cv6p4\">Easley, D., N. M. Kiefer, and M. O'Hara (1997). One day in the life of a very common stock. <b><i>Review of Financial Studies</i></b> <i>10</i>(3), 805 – 835.</li>\n<li data-pid=\"NoSSQO8F\">Easley, D., S. Hvidkjaer, and M. O'Hara (2002). Is information risk a determinant of asset returns? <b><i>Journal of Finance</i></b> <i>57</i>(5), 2185 – 2221.</li>\n<li data-pid=\"59WSLOwv\">O'Hara, M. (2003). Presidential address: Liquidity and price discovery. <b><i>Journal of Finance</i></b> <i>58</i>(4), 1335 – 1354.</li>\n<li data-pid=\"UukuIiWQ\">Easley, D., M. M. Lopez de Prado, and M. O'Hara (2012). Flow toxicity and liquidity in a high-frequency world. <b><i>Review of Financial Studies</i></b> <i>25</i>(5), 1457 – 1493.</li>\n</ul>\n<p data-pid=\"pzWlkoNr\"><b>对其影响最大的文献：</b></p>\n<ul>\n<li data-pid=\"l5IdRT6l\">Bagehot, W. (1971). The only game in town. <b><i>Financial Analysts Journal</i></b> <i>27</i>(2), 12 – 14, 22.</li>\n<li data-pid=\"n_gafAL2\">Almgren, R. and N. Chriss (2000). Optimal execution of portfolio transactions. <b><i>Journal of Risk</i></b> <i>3</i>(2), 5 – 39.</li>\n</ul>\n<p data-pid=\"MidEE7uv\">BTW，上述第一篇中 Walter Bagehot 是一个笔名，该作者真正的名字是 Jack Treynor。</p>\n<p data-pid=\"8VsmQ7NM\"><b>最重要投资心得：</b>Market structures change, but they still have to provide liquidity and price discovery — and the details of market design matter.</p>\n<p data-pid=\"lc8MLGL0\"><b>对未来的看法：</b>Changes in fixed income trading, new ETF structures, and the evolution of cryptocurrency microstructures present huge opportunities for investment management.</p>\n<p data-pid=\"tMcc4VmO\"><b>是否有任何职业上的遗憾：</b>无。</p>\n<hr>\n<p data-pid=\"3BWtDm9Z\">除了上述这些大佬，最后再介绍两位已故大佬：Jack Treynor 和 John Bolge。在专刊中，对于他们的介绍都是由其他人主笔的，我从中挑选了“成就”、“代表文献”以及“别人能从他的贡献中学到什么”三部分。</p>\n<h2><b>Jack L. Treynor</b></h2>\n<p data-pid=\"up9vjGgr\"><b>成就：</b>CAPM 发明者之一，<a href=\"https://zhuanlan.zhihu.com/p/113041724\" class=\"internal\">Fischer Black</a> 的引路人（没错，这是我的私心）。</p>\n<p data-pid=\"VuZI9i3X\"><b>代表文献：</b></p>\n<ul>\n<li data-pid=\"ijrblUVi\">Treynor, J. L. (1961). Market value, time, and risk. Unpublished manuscript. Rough Draft dated 8/8/61, #95-209.</li>\n<li data-pid=\"sO-w-KRS\">Treynor, J. L. (1962). Toward a theory of market value of risky assets. Unpublished manuscript. Rough Draft dated by Treynor to the fall of 1962. A final version was published in 1999, in Asset Pricing and Portfolio Performance. R. A. Korajczyk (editor), London: Risk Books, 15 – 22.</li>\n<li data-pid=\"QkK5YtAz\">Treynor, J. L. and F. Black (1973). How to use security analysis to improve portfolio selection. <b><i>Journal of Business</i></b> <i>46</i>(1), 66 – 68.</li>\n</ul>\n<p data-pid=\"hE9hV8IC\">关于 Treynor 和 CAPM 的故事，见<a href=\"https://zhuanlan.zhihu.com/p/39455532\" class=\"internal\">《CAPM 的一小段历史》</a>。Fischer Black 赞其为第一个发明 CAPM 的人。在上世纪 60 到 70 年代，Treynor 和 Black 合作并共同发表了很多论文，它们为量化投资管理提供了最初的框架和必要的模块。</p>\n<p data-pid=\"AGVqmFgj\"><b>别人能从他的贡献中学到：</b>Incorporating risk into discount rates, return expectations, performance measurement, along with implications for portfolio management, market making, and corporate and pension investment decision making.</p>\n<h2><b>John C. Bogle</b></h2>\n<p data-pid=\"WgBWNLme\"><b>成就：</b>Founder of Vanguard，指数基金之父。</p>\n<p data-pid=\"fZzfrQsn\"><b>代表文献：</b></p>\n<ul>\n<li data-pid=\"rN5-Cw_i\">Bogle, J. C. (2000). <i>Common Sense on Mutual Funds: New Imperatives for the Intelligent Investor</i>. Hoboken, NJ: Wiley.</li>\n<li data-pid=\"fRbHq34t\">Bogle, J. C. (2007). <i>The Little Book of Common-Sense Investing: The Only Way to Guarantee Your Fair Share of Stock Market Returns</i>. Hoboken, NJ: Wiley.</li>\n</ul>\n<p data-pid=\"AYTUUFn1\">Vanguard！指数基金！这些标签足以让人铭记 John Bogle。</p>\n<p data-pid=\"WQJ93zj3\"><b>别人能从他的贡献中学到：</b>Jack was an ardent proponent of long-term thinking, patient investment style, and prudent fund design. He believed chasing market returns with high turnover investment approaches wipes out most or all of the gains an investor would otherwise earn. He practiced what he preached with the Vanguard family of mutual funds focusing on no-load, low-cost, low-turn­over portfolios — many of which are passively managed.</p>\n<h2><b>结语</b></h2>\n<p data-pid=\"JYRhNheb\">除了本文节选出来的很少的一部分，在特刊中，每位获奖者还对自己多年的投资研究和实践以及在这个过程中体会到的深刻感悟进行了总结，感兴趣的小伙伴请阅读特刊。通过进一步阅读，我们也不难看出他们之间的共同点：</p>\n<p data-pid=\"Wm9NlSit\"><b>1.</b> 每个获奖者都非常谦逊，在“遗憾”环节，我们听到的最多的是“我希望有时间能够学习更多的东西”；</p>\n<p data-pid=\"BEbLW-Rk\"><b>2.</b> 他们都认可模型都有自身的限制，依赖的假设可能很危险，而人的行为充满着意外；</p>\n<p data-pid=\"UIdxbtp6\"><b>3.</b> 对于在业界获得成功的获奖者来说，他们都清醒的认识到投资中的恐惧和贪婪，并清楚地知道他们在哪些方面具备优势，而在哪些方面应该绕道而行。</p>\n<p data-pid=\"u21YDqHj\">他们所表现出来的坚持、毅力以及永不满足的好奇心塑造了我们今天所看到的投资实践，而也正是这些素质让人们为以后投资方法和实践的一个又一个新的突破做好准备。</p>\n<p data-pid=\"rIECZ2AI\">BTW，如果你问我最喜欢的名言是哪一句，答案就是 Ken French 说的：</p>\n<blockquote data-pid=\"7RICdo4c\"><i>\"The high volatility of realized equity returns obscures their information about expected returns. As a result, 5, 10, even 20 years of past returns may say little about the cross-section of future returns.\"</i></blockquote>\n<p data-pid=\"8ILuzkYh\">More to come…</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"0zW4UI8p\"><b>免责声明：</b>入市有风险，投资需谨慎。在任何情况下，本文的内容、信息及数据或所表述的意见并不构成对任何人的投资建议。在任何情况下，本文作者及所属机构不对任何人因使用本文的任何内容所引致的任何损失负任何责任。除特别说明外，文中图表均直接或间接来自于相应论文，仅为介绍之用，版权归原作者和期刊所有。</p>\n<p data-pid=\"U7ljZW1P\">原创不易，请保护版权。如需转载，请联系获得授权，并注明出处。已委托“维权骑士”(<a href=\"https://link.zhihu.com/?target=http%3A//rightknights.com/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">维权骑士-版权保护 版权知识 原创检测 识别字体 著作权登记</a>) 为进行维权行动。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/mitcshi?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">石川</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/483040741?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"在 2022 年重新寻找 GB 游戏的乐趣：Analogue Pocket 体验","date":"2022-03-23 03:21:00","description":"这台主机就是有一种很单纯地能让你想要在上面不停地玩游戏的魔力，这种魔力完全不会因为游戏本身的老旧而衰减。<p>[......]</p>\n<a href=\"https://sspai.com/prime/story/sr03-analogue-pocket-gaming-experience\" target=\"_blank\">查看全文</a><p>本文为会员文章，出自<a href=\"https://sspai.com/prime/precog/sr03-remaking-a-gameboy\" target=\"_blank\">《在廿一世纪再造一台 Game Boy》</a>，订阅后可阅读全文。</p>\n","link":"https://sspai.com/prime/story/sr03-analogue-pocket-gaming-experience"},{"title":"派早报：realme 发布真我 GT Neo3、石头科技发布自清洁扫拖机器人 G10S 系列等","date":"2022-03-23 01:04:03","description":"英伟达推出面向数据中心的 AI 图形处理芯片，高通宣布将与 Square Enix 在 XR 领域展开深度合作等。<a href=\"https://sspai.com/post/72245\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72245"},{"title":"悬疑剧情向解谜游戏《三伏》于 3 月 21 日推出试玩版，体验如何？","date":"2022-03-22 09:08:40","description":"\n<p data-pid=\"dB4vzMF2\">好久不见！</p>\n<p data-pid=\"4Gtfs_Gp\">距离上一次在知乎发言过去快一年了吧，当时《烟火》发售后，看到很多朋友热烈讨论，也有批评建议。</p>\n<p data-pid=\"OO1bGtu3\">那时我说，《烟火》的好坏与否都是过去式，工作室会不断追求新的东西。</p>\n<p data-pid=\"m0JmNrfo\">这次我带来了新作《三伏》的DEMO，不知道大家是否已经体验过。</p>\n<p data-pid=\"pOf96Bqr\">关于DEMO本身就不解析太多，所有悬念都留到正式版，说一说这一年我在追求<b>“新”</b>上做出的努力吧。</p>\n<p><br></p>\n<p><br></p>\n<p data-pid=\"WYS86jEa\"><b>·终于没有纸人了！</b></p>\n<p data-pid=\"_DeAnfB4\">这是一位玩家朋友体验完DEMO后给我的反馈。</p>\n<p data-pid=\"NRyXN7OQ\">我相信很多朋友体验完DEMO，也会发现这个号称是中式悬疑的游戏竟然没有出现纸人、花圈、冥币等等中式民俗元素。</p>\n<p data-pid=\"PdAgX981\">因为一些众所周知的原因，大家想到中式悬疑游戏，会下意识想到纸人、鬼怪、花圈等等元素，并且产生过一些争议。</p>\n<p data-pid=\"tnicp2bo\">立项《三伏》时，我对项目定下的目标，就是想突破大众对中式悬疑游戏有些的固有认知，我想证明不加入这些民俗元素也能讲好一个故事。</p>\n<p data-pid=\"LoS3FnMs\">放弃民俗元素，又想做出中式味是一个非常大的挑战。在开发《三伏》时，我也尝试了一些更现代化的元素，比如三眼神兔、服装塑料模特、都市怪谈等等，并且把故事背景放到了代入感更强的城市中，实现从农村走向城市（？）</p>\n<p data-pid=\"gRQZZXLE\">其次在角色设计上，我也尝试让每个角色的身份更具本土特色——无论是狡猾的犯罪团伙，还是精明的商人，亦或是道士、调查员的奇妙组合，都在尝试向玩家传输一个信息——这是一个只能发生在本土的奇妙故事。</p>\n<p data-pid=\"JESSWcym\">至于效果如何，要看玩家的评价了。</p>\n<p><br></p>\n<p><br></p>\n<p data-pid=\"qOBFQ5I5\"><b>·回归群像剧</b></p>\n<p data-pid=\"hy3OR76U\">这里用到了回归，熟悉工作室的小伙伴应该知道，工作室第一部作品《黑森町绮谭》就是一部时代群像剧，游戏是双女主，讲述她们在黑森町的奇幻冒险之旅，而她们也并非是故事的主角，每一章都有着重刻画的角色。</p>\n<p><img src=\"https://pica.zhimg.com/v2-1ef1a87385fafdd042981e17088296d3_720w.jpg?source=b1748391?rss\" data-caption=\"工作室第一部作品《黑森町绮谭》\" data-size=\"normal\" data-rawwidth=\"1215\" data-rawheight=\"627\" data-watermark=\"watermark\" data-original-src=\"v2-1ef1a87385fafdd042981e17088296d3\" data-watermark-src=\"v2-9b718c059bc0c2f966f52d0daece710a\" data-private-watermark-src=\"v2-40015326f21b0460a3afbcd1a8f990db\"></p>\n<p data-pid=\"3xr8jW0Y\">《三伏》的商店宣传语提到，整个游戏是“时代的缩影”，而任何一个发生在时代大背景下的故事，出场的角色都不可能只是配角，因此这次《三伏》回归了群像剧，故事中大部分角色都很重要，他们的互动既是个人选择，也是时代的必然结果。</p>\n<p data-pid=\"vY70dqV7\">而相比较《黑森》，《三伏》中的角色刻画不再那么全年龄向。我希望这个群像剧更真实，更深沉，让玩家能从在角色的嬉笑怒骂中感受到赤裸裸的成年人生存法则。</p>\n<p><br></p>\n<p><br></p>\n<p data-pid=\"T-ooet0g\"><b>·不用摸黑探索了！</b></p>\n<p data-pid=\"8Yuv2Wr2\">这次DEMO给玩家最直观的感受，应该就是不那么恐怖了（当然《烟火》后期其实也不恐怖），</p>\n<p data-pid=\"NIKibrV7\">甚至全程都很亮，整个游戏的配色饱和度也非常高。</p>\n<p data-pid=\"w9PqZ3H6\">某种意义上这也是我尝试突破大众对中式悬疑游戏的固有认知——很多朋友心目中的恐怖游戏可能都是白森森的，运用大量红光白光绿光营造恐怖氛围（烟火躺枪）。</p>\n<p data-pid=\"AttFpqJd\">而《三伏》有些背其道而行，运用了高饱和度的配色、非常明亮的场景设计，这也与《三伏》想要表达的整体视觉风格有关——荒诞、怀旧。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4f39773a00a4ff7f211f38068ca5580d_720w.jpg?source=b1748391?rss\" data-caption=\"算是DEMO中比较黑的场景了\" data-size=\"normal\" data-rawwidth=\"1700\" data-rawheight=\"955\" data-watermark=\"watermark\" data-original-src=\"v2-4f39773a00a4ff7f211f38068ca5580d\" data-watermark-src=\"v2-3fa7e413d152b9908a8a74cfa2c9c400\" data-private-watermark-src=\"v2-c866dd1c9c419fb9b925c33829524dbe\"></p>\n<p data-pid=\"9fo740RO\"><br></p>\n<p><br></p>\n<p data-pid=\"6wXSk2Bb\">关于游戏的“新”点到为止，更多新的东西需要大家去发现，欢迎体验游玩，如果有什么意见也可以进群反馈交流。</p>\n<p data-pid=\"VLub400J\">非常感谢大家对《黑森》《烟火》《三伏》的支持。</p>\n<p data-pid=\"w46HU2fv\">如果《三伏》DEMO没有辜负大家的期待，是我的荣幸；如果觉得还不够味，我也会努力做得更好！</p>\n<p><img src=\"https://pic3.zhimg.com/v2-4d1d8fb4b05a0c6c319735b0a44bd0f9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1958\" data-rawheight=\"1140\" data-watermark=\"watermark\" data-original-src=\"v2-4d1d8fb4b05a0c6c319735b0a44bd0f9\" data-watermark-src=\"v2-cad4abde54e3cd66a1b455cb75732a89\" data-private-watermark-src=\"v2-fee18acb94c09214af5fdb107c2dc24f\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/yue-guang-zhang-lang-23?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">月光蟑螂</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/520957436/answer/2401850037?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">34 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/409968870?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">steam有没有能和网友一起玩的密室逃脱和解谜类游戏？</a><br><a href=\"http://www.zhihu.com/question/24383417?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">有什么RPG游戏的法术十分有趣？</a><br>\n","link":"http://www.zhihu.com/question/520957436/answer/2401850037?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"汽车保养完大脚油门正常吗？","date":"2022-03-22 08:32:46","description":"\n<h3>加完机油之后点火正常，大脚油门不正常。</h3>\n<p data-pid=\"vYDm1sct\"><b>为什么加完机油之后要点火怠速？</b></p>\n<p data-pid=\"a7Cf-cSQ\">在更换机油时，要把旧机油全部从油底壳放出来，并且要放干净，也就是放完油之后发动机内部只有极少的机油，起不到润滑作用。</p>\n<p data-pid=\"EBGNmZj5\"><b>加完新机油，启动发动机的目的就是让机油泵把机油泵到零部件表面</b>，使摩擦件表面附上一层油膜，所以加完机油之后点火是对的。</p>\n<p data-pid=\"M0L-bReS\">从机油加注口添加机油也不能把机油送到发动机内部各个部件的表面，必须要用机油泵给机油加压，通过油道送到发动机的主要摩擦零件的表面，比如曲轴、凸轮轴等，这也是润滑系统的主要润滑方式，叫做压力润滑。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-074802786d47f8d0e23db7626178df33_720w.png?source=b1748391?rss\" data-caption=\"发动机润滑系统\" data-size=\"normal\" data-rawwidth=\"620\" data-rawheight=\"488\" data-watermark=\"watermark\" data-original-src=\"v2-074802786d47f8d0e23db7626178df33\" data-watermark-src=\"v2-bfdd624f9c841e9c186e2f117fc8a488\" data-private-watermark-src=\"v2-f66334d5aca1dd633dc2809048dc16b1\"></p>\n<p data-pid=\"b9zjXLB2\"><b>为什么大脚油门不正常？</b></p>\n<p data-pid=\"J5D_C1ie\">大脚油门可能会使机油还未到达摩擦件表面时，摩擦件就开始剧烈工作，这样会使两摩擦件之间的磨损加剧。</p>\n<p data-pid=\"71XsmgNn\">不过就现在的情况来说，不论是4S店还是维修厂，为了节省时间，保养完之后基本都是大脚油门，不会给你慢慢的怠速。</p>\n<p></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhang-xiao-5-34-17?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">张立晨</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/523093932/answer/2401790243?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">5 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/313941472?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">10年科鲁兹发动机下面圈圈这里漏油是什么原因？</a><br><a href=\"http://www.zhihu.com/question/282815439?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">发动机脏了，有必要清理吗？</a><br>\n","link":"http://www.zhihu.com/question/523093932/answer/2401790243?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"Optiver波动率预测金牌方案解读","date":"2022-03-22 02:48:34","description":"\n<p data-pid=\"sbyhAkLz\">Optiver公司于1986年在荷兰阿姆斯特丹成立，是全球领先的金融衍生品做市商和程序化交易公司。在过去的30年间，集团分别在阿姆斯特丹、芝加哥、悉尼、上海、香港和台湾设立了地区性总部和分支机构，各自活跃于各大主要金融衍生品交易所，积极参与期权、期货、股权、债券等交易，全球拥有超过1000名员工。 </p>\n<p data-pid=\"K4lVcXkf\">2020年7月，Optiver联合Kaggle举办波动率预测比赛，目的是预测各交易品种的波动率。比赛官网地址：<a href=\"https://link.zhihu.com/?target=https%3A//www.kaggle.com/c/optiver-realized-volatility-prediction\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Optiver Realized Volatility Prediction</a>。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-6172011866c513fa72aed8ec2325ef8e_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"291\" class=\"origin_image zh-lightbox-thumb\" width=\"1269\" data-original=\"https://pic3.zhimg.com/v2-6172011866c513fa72aed8ec2325ef8e_r.jpg\"></figure><h3>1）背景介绍</h3>\n<p data-pid=\"u1NzP8EK\">波动率预测对于投资交易较为重要，结合波动率，可以制定不同类型的交易策略。更详细的解释可以参考如下链接。</p>\n<p data-pid=\"FuO53hl1\"><a href=\"https://www.zhihu.com/question/29043350\" class=\"internal\">市场波动率的研究意义到底何在？</a></p>\n<p data-pid=\"qIJLU4au\"><a href=\"https://link.zhihu.com/?target=https%3A//www.math.pku.edu.cn/teachers/lidf/course/fts/ftsnotes/html/_ftsnotes/fts-garchapp.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">波动率模型的应用 | 金融时间序列分析讲义</a></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>2）数据特点</h3>\n<p data-pid=\"_RQQ03Ar\">这个比赛的一大特点，是类似于高频量化交易，数据频次可以精准到秒级别。</p>\n<ul><li data-pid=\"VyvGz6Xf\">数据收集过程</li></ul>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-8be13159a37d11fe6e83600fd47fc78b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"408\" data-rawheight=\"178\" class=\"content_image\" width=\"408\"></figure><p data-pid=\"ncaHuZJO\">这题的数据设计方式较为科学，也在一定程度上限制了数据泄露。针对某个stock_id，选取30min作为取样周期，其中前10min用于计算训练样本，中间10min用于计算target，最后10min不做使用。目的就是使用前10min的数据，预测下10min的波动率。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<ul><li data-pid=\"xfWa-iF6\">自变量</li></ul>\n<p data-pid=\"RCrnyKf0\">数据主要包括两部分，报价数据和成交数据。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-6b5327ad13087f4c2430b5d470b38011_b.jpg\" data-size=\"normal\" data-rawwidth=\"366\" data-rawheight=\"164\" class=\"content_image\" width=\"366\"><figcaption>https://www.kaggle.com/code/jiashenliu/introduction-to-financial-concepts-and-data</figcaption></figure><p data-pid=\"TxKPLqH0\">上图是成交和报价数据，bid代表买，ask代表卖；当买价和卖价打成一致的时候，会出现成交。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-11557a8aa00d37d849ac1f385a052fda_b.jpg\" data-size=\"normal\" data-rawwidth=\"909\" data-rawheight=\"246\" class=\"origin_image zh-lightbox-thumb\" width=\"909\" data-original=\"https://pic3.zhimg.com/v2-11557a8aa00d37d849ac1f385a052fda_r.jpg\"><figcaption>https://www.kaggle.com/code/chumajin/optiver-realized-eda-for-starter-english-version</figcaption></figure><p data-pid=\"yGbk_c64\">这个图中包括五条曲线，从上到下依次是卖二、卖一、成交价、买一、买二。这条曲线充分反应了交易过程中报价和成交的动态变化过程。横轴代表时间，0-600s，即10min；纵轴代表价格。<br></p>\n<ul><li data-pid=\"arsYoQS7\">因变量：实际波动率</li></ul>\n<p data-pid=\"QnMfdKQO\">这个比赛使用成交均价计算收益率，再使用收益率计算波动率，这里我贴原图方便大家理解。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-d716cf2d0efe12c03b9d95969bb75b44_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"899\" data-rawheight=\"137\" class=\"origin_image zh-lightbox-thumb\" width=\"899\" data-original=\"https://pic1.zhimg.com/v2-d716cf2d0efe12c03b9d95969bb75b44_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<h3>3）解决方案</h3>\n<ul><li data-pid=\"fCCZm6aW\">特征部分</li></ul>\n<p data-pid=\"OGAue1y-\">这个比赛的数据精准到了秒级别，每1min数据又包括了60s的报价和成交数据。所以基于此，我们可以做出大量的aggregation特征。当然也可以设计cnn或者rnn专门去处理这些序列数据，不过对建模能力有较高的水准要求。</p>\n<p data-pid=\"_dfRYRKL\">这里我列一下重点的特征。</p>\n<table data-draft-node=\"block\" data-draft-type=\"table\" data-size=\"normal\" data-row-style=\"normal\"><tbody>\n<tr>\n<th>特征名</th>\n<th>解释</th>\n</tr>\n<tr>\n<td>stock_id</td>\n<td>股票代码</td>\n</tr>\n<tr>\n<td>log_return_realized_volatility</td>\n<td>过去10min基于买一和卖一报价计算的实现波动率</td>\n</tr>\n<tr>\n<td>log_return_realized_volatility_300</td>\n<td>过去5min基于买一和卖一报价计算的实现波动率</td>\n</tr>\n<tr>\n<td>trade_seconds_in_bucket_count_unique_300</td>\n<td>过去5min发生的交易的时刻数</td>\n</tr>\n<tr>\n<td>price_spread_mean</td>\n<td>交易价差</td>\n</tr>\n<tr>\n<td>trade_seconds_in_bucket_count_unique</td>\n<td>过去10min发生的交易的时刻数</td>\n</tr>\n<tr>\n<td>price_spread_mean_300</td>\n<td>过去5min交易价差</td>\n</tr>\n<tr>\n<td>trade_log_return_realized_volatility</td>\n<td>过去10min基于成交价计算的实现波动率</td>\n</tr>\n<tr>\n<td>trade_log_return_realized_volatility_300</td>\n<td>过去5min基于成交价计算的实现波动率</td>\n</tr>\n<tr>\n<td>log_return2_realized_volatility</td>\n<td>过去10min基于买二和卖二报价计算的实现波动率</td>\n</tr>\n<tr>\n<td>log_return2_realized_volatility_300</td>\n<td>过去5min基于买二和卖二报价计算的实现波动率</td>\n</tr>\n<tr>\n<td>wap_balance_mean</td>\n<td>过去10min的成交均价价差</td>\n</tr>\n<tr>\n<td>wap_balance_mean_300</td>\n<td>过去5min的成交均价价差</td>\n</tr>\n<tr>\n<td>trade_size_sum</td>\n<td>过去10min的交易量</td>\n</tr>\n<tr>\n<td>trade_size_sum_300</td>\n<td>过去5min的交易量</td>\n</tr>\n<tr>\n<td>ask_spead_mean</td>\n<td>基于卖方报价的价差</td>\n</tr>\n<tr>\n<td>bid_spead_mean</td>\n<td>基于买方报价的价差</td>\n</tr>\n<tr>\n<td>bid_ask_spead_mean</td>\n<td>基于买方和卖方报价的价差</td>\n</tr>\n</tbody></table>\n<p data-pid=\"rHmrfHVX\"><a href=\"https://link.zhihu.com/?target=https%3A//www.kaggle.com/code/tommy1028/lightgbm-starter-with-feature-engineering-idea\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">LightGBM starter with feature engineering idea</a> 更多特征可以参考该文档。</p>\n<p data-pid=\"WwNSbJw-\">除了上述特征外，这个比赛还有两个重要的特征工程技巧，每个技巧都可以大幅提高比赛得分；分别是基于time_id的KNN和基于stock_id的kmeans。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-f5774f2108427f16ff0d94beddec0c1c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"532\" data-rawheight=\"489\" class=\"origin_image zh-lightbox-thumb\" width=\"532\" data-original=\"https://pic1.zhimg.com/v2-f5774f2108427f16ff0d94beddec0c1c_r.jpg\"></figure><p data-pid=\"ayXxk1Y5\">基于time_id的KNN：使用knn算法找到相近的timeid，并把上述的重要的特征重新聚集一遍；反映时间特征。</p>\n<p data-pid=\"18vfUT8B\">基于stock_id的kmeans：使用corr+kmeans，找到相近的stockid，并把上述的重要的特征重新聚集一遍；反映行业特征。</p>\n<p data-pid=\"bc3_YesN\">更详细的可以参考optiver第一名解决方案<a href=\"https://link.zhihu.com/?target=https%3A//www.kaggle.com/c/optiver-realized-volatility-prediction/discussion/274970\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Optiver Realized Volatility Prediction</a>。</p>\n<ul><li data-pid=\"FrYpeSaK\">模型部分</li></ul>\n<p data-pid=\"96bR0rJn\">模型部分使用常见的lgb、nn模型即可处理。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>总结</h3>\n<p data-pid=\"4uHgNnRV\">1 这个比赛的数据精准到了秒级别，数据量较大，是难得的高频量化比赛。</p>\n<p data-pid=\"0bko55UM\">2 参赛者可以通过一系列特征工程和模型算法，感受如何使用ML和DL方法去解决金融问题。</p>\n<p data-pid=\"p4WVJYJr\">3 这个比赛还是存在数据泄露的trick的，参赛这一旦发现了计算相似time_id的trick，得分就会有较大的提升。如果当时开发了API接口，可以避免这个问题。另外，如果不是这两个强特，这个比赛的波动实际上是挺大的。</p>\n<p data-pid=\"v1eAmCjq\">4 数据切分方式：这个比赛的数据收集设计比较严谨，不会出现train和valid时间交叉的问题，使用简单的kfold或者groupkfold即可。</p>\n<p data-pid=\"pdBUSXXL\">5 至于要不要把stock_id作为特征加进去，这里要分问题而定。如果是预测收益率，建议不加，如果是预测波动率，建议加。原因大概是因为有些品种确实存在较大的波动性，把stock_id作为category变量加进去可以让模型学到。</p>\n<p data-pid=\"-cpunjdh\">6 行业特征和相邻时间特征，不止在这个比赛上比较重要，在实际量化中，也都十分重要。</p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/berserker408?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Light</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/473531503?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\n    return new Date(date.toLocaleString('en-US', { timeZone }))\n}\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        timeZone\n    })\n    return {\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\n        convert (date) {\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\n        }\n    }\n}\n\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\n    return converter.convert(new Date(secDate), tzName) - secDate\n}\n\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\ncmn-Hans-SG = 中文普通话-简体-新加坡\ncmn-Hant-TW = 中文普通话-繁体-台湾\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\ncmn = 中文普通话\n\nzh-Hans = 中文-简体\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\n}\n\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long'\n}\nconst now = new Date()\n\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\n\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\n\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\n\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\n\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\n\nzhCNFormatter.format(now) // 2021年10月13日星期三\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\n\njaFormatter.format(now) // 2021年10月13日水曜日\njaAltFormatter.format(now) // 令和3年10月13日水曜日\n\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\n// {locale: 'zh-CN', calendar: 'gregory', …}\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\n     // 基于一个固定日期计算，这里选择 1970.1.1\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\n    const base = new Date(1970, 0, 1).getTime()\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\n    return Array.from({ length: 7 }, (_, day) =&gt; (\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\n    ))\n}\n\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n}).formatToParts(new Date())\n// [\n//     { type: 'year', value: '2021' },\n//     { type: 'literal', value: '年' },\n//     { type: 'month', value: '10' },\n//     { type: 'literal', value: '月' },\n//     { type: 'day', value: '13' },\n//     { type: 'literal', value: '日' },\n//     { type: 'weekday', value: '星期三' },\n//     { type: 'literal', value: ' ' },\n//     { type: 'dayPeriod', value: '上午' },\n//     { type: 'hour', value: '1' },\n//     { type: 'literal', value: ':' },\n//     { type: 'minute', value: '00' },\n//     { type: 'literal', value: ':' },\n//     { type: 'second', value: '00' }\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\n}\n\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\n  timeZone: 'America/Los_Angeles',\n  year: 1995,\n  month: 12,\n  day: 7,\n  hour: 3,\n  minute: 24,\n  second: 30,\n  millisecond: 0,\n  microsecond: 3,\n  nanosecond: 500,\n  calendar: 'iso8601'\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote>\n<p>周六不放假休息，还在这加班搞 CTF？</p>\n</blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/86535/11/24318/75037/622032a8E4f94d4ae/89703ccc122cf4e0.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"从 Google Analytics 的统计代码说起 —— 谈谈 script 标签的 async 和 defer 属性","date":"2020-10-13 09:25:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/80291/2/16552/19311/622032b3Eb300c2aa/66748fc8124a01c5.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/script-async-defer/\">https://blog.skk.moe/post/script-async-defer/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/script-async-defer/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将 […]","link":"https://flyhigher.top/develop/2160.html"}]