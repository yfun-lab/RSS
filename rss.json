[{"title":"派评 | 近期值得关注的 App","date":"2022-03-28 10:30:00","description":"你可以通过文章目录快速跳转到你感兴趣的内容。如果发现了其它感兴趣的 App 或者关注的话题，也欢迎在评论区和我们进行讨论。<a href=\"https://sspai.com/post/72347\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72347"},{"title":"零基础也可以写歌吗？纸片人 AI 或许能帮忙","date":"2022-03-28 09:51:39","description":"只有歌词不会编曲怎么办，你可以试试「ACE 虚拟歌姬」。<a href=\"https://sspai.com/post/72344\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72344"},{"title":"一日一技｜巧用「远程同乐」，让次世代 Xbox 支持旧手柄","date":"2022-03-28 08:34:24","description":"巧用 Android 模拟器，实现次世代 Xbox 的手柄拓展。<a href=\"https://sspai.com/post/72265\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72265"},{"title":"如何优雅地参与开源开发？","date":"2022-03-28 06:50:12","description":"\n<p data-pid=\"v4aUOym2\">文： 胡渊鸣 (<a href=\"https://link.zhihu.com/?target=https%3A//github.com/yuanming-hu\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">yuanming-hu</a>)，2022 年 3 月</p>\n<p data-pid=\"jL085fwH\">写在前面：最近疫情形势又逐渐紧张起来。我本人也因为一两周前去上海出差，回到北京后也被社区要求在家隔离。因祸得福，多出了一些时间思考、一个人想安静地写一些文章。打开知乎草稿箱，翻到这篇 2020 年中开始写的文章，居然因为种种原因鸽了快两年都没写完。看着窗外阳光明媚，门口贴着一纸封条，仿佛回到了 2020 年在波士顿躲新冠期间每天和网友们（比如当时同样悲惨地在日本东京隔离的 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/261344b5b53cb2b3a14faa4844cf0175\" data-hash=\"261344b5b53cb2b3a14faa4844cf0175\" data-hovercard=\"p$b$261344b5b53cb2b3a14faa4844cf0175\">@k-ye</a>）一起愉快地写 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/taichi-dev/taichi\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Taichi</a> 的时光。既然出不去，干脆把文章这篇写完吧！也希望这波疫情能够快点过去，也祝大家都能够身体健康、早日恢复平淡而珍贵的正常生活。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-d6b7b0b59e5040f809b2be76e4a1b1b6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1360\" data-rawheight=\"161\" class=\"origin_image zh-lightbox-thumb\" width=\"1360\" data-original=\"https://pic3.zhimg.com/v2-d6b7b0b59e5040f809b2be76e4a1b1b6_r.jpg\"></figure><p data-pid=\"itx-cee1\"><a href=\"https://link.zhihu.com/?target=https%3A//github.com/taichi-dev/taichi\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Taichi</a> 开源社区一直承蒙大家的关注，我们也在努力摸索如何能将社区建设得更好。本文为一系列中的第一篇（希望以后不要鸽...），主要聊聊参与开源社区之前需要了解的一些基本知识和跨国、跨文化团队合作技巧。部分内容来自 Taichi 的贡献者指南：</p>\n<a href=\"https://link.zhihu.com/?target=https%3A//docs.taichi.graphics/lang/articles/contributor_guide\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Taichi contribution guidelines</a><p data-pid=\"NIMnXVIe\"><i>(基本上是 2020 年的时候写的了，居然一直用到现在... 我们社区也算不上最完善、成熟的社区，这些指南也仅仅是我们在实践中总结出的小 tips，本文权当抛砖引玉，欢迎各位开源大佬批评指正。）</i></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-a27714934ac9d906370f0ceaad850e04_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"400\" class=\"content_image\" width=\"400\"></figure><h2>Intro</h2>\n<p data-pid=\"fdOroMJy\">和小规模兴趣项目 (hobby project) 不一样，开源项目随着开发者社区的成长，不可避免地会需要标准化工作流程与合作方式。对于合作方式的共识对于开源社区成员之间高效合作是非常必要的，但是刚刚加入开源社区的同学可能也会因为对社区规则和文化的不熟悉，对参与开源望而却步。</p>\n<p data-pid=\"xb2UiMTK\"><a href=\"https://link.zhihu.com/?target=https%3A//github.com/taichi-dev/taichi\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Taichi</a> 项目的开发始于清华大学紫荆学生公寓 2 号楼。项目由我于 2016 年在 GitHub 以 MIT 协议的开源软件，至今已经过去 6 个年头，其源代码也会在未来永远保持公开。目前 Taichi 由全球近 200 名开发者共同开发、维护。既然是社区的项目，那么维护一个互相尊重、让人愿意参与的社区就是至关重要的。本文主要聊聊<b>如何优雅地参与开源开发。</b></p>\n<p data-pid=\"eAJeZxqz\">不同的社区工作流程上稍有差别，不过我相信本文大部分内容对参与别的开源社区、甚至日常生活中的别的类型的团队合作也有帮助。本文的适用范围既包括开源社区，也包括各类需要团队合作（特别是跨国、跨文化）的场景。</p>\n<p data-pid=\"tOvW85-3\">本文主要会浅浅地讨论三个问题：</p>\n<ol>\n<li data-pid=\"fRItsAfb\">为什么参与开源开发？</li>\n<li data-pid=\"3gRMa6mw\">(Taichi) 开源社区的文化是什么样的？</li>\n<li data-pid=\"9UStiawl\">在开源社区如何做到有效沟通？</li>\n</ol>\n<hr>\n<h2>为什么参与开源开发？</h2>\n<p data-pid=\"oQoUd39T\">不可否认，参与开源项目开发会占用很多原本可以用来打游戏、看动漫等娱乐项目的时间，通常也不会获得物质方面的回报。即便如此，还是有很多同学乐于参加开源开发，原因通常有以下几点：</p>\n<p data-pid=\"WHI7_68w\"><b>提高编程能力。</b>这一点大概是最为直接的收获了。开源社区的每一份贡献都会收到其他社区成员的代码评审 (Code review)。在这个过程中，能够收获到很多在学校里学不到的编程经验。</p>\n<p data-pid=\"yj0l4d1z\">一些刚从学校编程作业转战 Taichi 社区的同学，第一个 PR 的几乎每一行代码都会因为规范性有待提升收到修改意见，一个 PR 里面有超过 50 个修改意见也不少见。千万不要受到打击，reviewer 只是在帮忙 :-) 但是他们在后续的 PR 中，代码质量就会有很大改进。这其实是一个很好的学习过程。事实上，在开源社区学到这一课，远比上班第一天被 leader 上这一课要好的多 :-)</p>\n<p data-pid=\"6n5VFq4x\">在 Taichi 开源的几年之中，我们也见证了很多社区参与者的快速成长。社区 maintainers 也在一个个 PR 中投入了大量的精力，与开发者一起成长。这本质上是一种互惠互利的过程，而开源社区本身也在这种双向的发展过程中逐渐壮大。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-9b2b218284b817b5c38c520042501558_b.jpg\" data-size=\"normal\" data-rawwidth=\"521\" data-rawheight=\"454\" class=\"origin_image zh-lightbox-thumb\" width=\"521\" data-original=\"https://pic1.zhimg.com/v2-9b2b218284b817b5c38c520042501558_r.jpg\"><figcaption>别怕，社区的同学带你一起学... (source: reddit)</figcaption></figure><p data-pid=\"x08VpBZc\"><b>通过设计决策解决实际问题的能力。</b>俗话说“小孩子才做选择，大人根本没得选。” 稍微复杂一些的实际问题中完美的解法往往是不存在的。悲观点说，设计决策就是权衡利弊，特别是项目具备一定规模以后。软件开发者需要在 “这也不行，那也不行” 中找出最不差的解决方案，从全局视角以最为实用主义（pragmatic）的精神进行设计，从而 <b>解决问题</b>。即使在开源社区，要真正做出有人关注的软件，大家通常想的也是解决问题，而不是炫技。</p>\n<p data-pid=\"GEmTbUEB\"><b>领域特定知识。</b>在 Taichi 社区主要的领域特定知识是编译器、计算机图形学、高性能计算等等。不同的社区有不同的领域特定知识，如 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/pingcap/tidb\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">TiDB</a> 社区很明显就是围绕数据库展开的。毋庸置疑，每个社区都聚集着相应领域的大佬。</p>\n<p data-pid=\"1u9UJ5J9\"><b>团队合作能力。</b>我们汉字文化圈自古以来就强调集体为先，但是教育中却相对缺乏关于合作的教育（毕竟各种考试的时候一定是单兵作战嘛）。这意味着我们在 GitHub 上与世界各地的伙伴合作时，更要注意充分沟通、有效合作。</p>\n<p data-pid=\"1pfRWcfX\"><b>朋友。</b>比如 Taichi 开发者社区中既有潜力无限的中学生，也有身经百战的工程师。其中不乏清华/北大/MIT/CMU 等学校的本科生、研究生和研究人员、Google、Facebook 的专业软件工程师、IOI/NOI 金牌获得者等等。“三人行必有我师”，GitHub 作为 “全球最大（同性）交友平台” ，自然有不少自带闪光点的程序猿、程序媛出没，与他们合作本身就是一种乐趣。</p>\n<p data-pid=\"PUXwnF2Q\">我和匡冶（<a href=\"https://link.zhihu.com/?target=https%3A//github.com/k-ye\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">@k-ye</a>）就是在 GitHub 上认识的，经过一年时间我们在 GitHub 上一起编写了大量代码，建立了深厚的信任，最后决定出来创业，在此之前我们线下没有见过一面。Taichi 社区早期的绝大多数开发者都相互之间成了很好的朋友。毕竟程序员最喜欢的就是以码会友嘛。</p>\n<p data-pid=\"9OoJ-M6Z\"><b>成就感</b>。为流行的开源项目贡献代码，本身就是一种有成就感的事情，因为你的代码会被大量的用户所使用，为社会创造出价值。</p>\n<p data-pid=\"zkeWI0ke\">从实用主义的角度来说，如果成为知名开源项目的贡献者，这个经历会成为简历上的一个亮点。我相信不少公司的技术团队在招聘的时候是会看应聘者的 GitHub 的。我们就收到过一份海外图形学研究者的简历上赫然写着 “给 Taichi 社区开过 30 多个 issues。” </p>\n<hr>\n<h2>开源社区的文化</h2>\n<p data-pid=\"gNuaSnEk\">不同的开源社区有不同的文化，但是 <b>同理心、相互尊重、坦诚交流 </b>可能是开源文化中很重要的一点，也在很多社区被反复提及。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-8eb33f0bc85379084e72fdd231e2f14f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"960\" data-rawheight=\"513\" class=\"origin_image zh-lightbox-thumb\" width=\"960\" data-original=\"https://pic4.zhimg.com/v2-8eb33f0bc85379084e72fdd231e2f14f_r.jpg\"></figure><p data-pid=\"XnaQ7VI5\">首先要明确的是，开源社区其实并 <b>没有 </b>强制社区参与者回复 issue、review PR、merge PR 的能力，因为绝大多数贡献者都是被热爱驱动来参与社区贡献的。即使项目的原作者，往往也有自己的本职工作（比如我在开发 Taichi 的时候是在校学生），除了对项目和社区本身的热爱之外，没有人能够强制他们参与开源活动。</p>\n<p data-pid=\"FIGL0l6D\">很多开发者开发开源项目也只是为了在工作之余做一些自己真正感兴趣的事情，获得成就感。当然，对于项目的 “亲生父母” 来说，开源项目往往倾注了他们大量的心血，他们也选择了为社区 “捐出” 代码，出于责任心也会把项目维护好，为社区留下一个好项目。</p>\n<p data-pid=\"G5v8r4ca\">在这个前提之下，维护一个让人能够乐在其中、身心愉快的社区至关重要，甚至直接影响到社区的发展：谁愿意在自己原本可以自由支配的时间中，参与一个自己不那么喜欢的社区呢？</p>\n<hr>\n<p data-pid=\"XX6_abvh\">具体来说，类似其他开源社区，在 Taichi 社区我们会遵循如下文化：</p>\n<p data-pid=\"LqepYwuy\"><b>团队为先。</b>Again，开源的软件开发与单兵作战式的小项目有所不同，往往需要多考虑合作者的感受，而不能只顾自己“写得爽”。某种意义上说，<b>代码是写给别的程序员看的，而不是写给自己或者机器看的</b>。前者是专业软件开发的指导思想，后者是在学校或业余软件开发的指导思想。虽然两种指导思想都在各自的领域解决了问题，没有高下之分。但是如果希望将自己喜欢的编程作为安身立命之本，特别是要参与开源社区、和别的开发者合作，不妨在编程的时候注重代码质量。这其中就包括遵循命名规范、代码风格，编写清晰可读的 PR 描述和 commit message 等。</p>\n<p data-pid=\"Hv-4CwUu\"><b>质量大于数量，珍惜社区资源。</b>Reviewer 的时间就是社区最宝贵的资源之一，因此在 PR 被要求修改的时候尽量一步到位。举个例子， review 提出修改意见 apple 要换成 banana ，结果代码里改了，文档没改；又 review 一轮，文档改了注释没改；又 review 一轮，注释改了文件名标题没改。长此以往，reviewer 内心也很崩溃，很快就不乐意继续主动 review 你以后的 PR 了。（“社区还有这么多有意思的事情可以做，为啥要在一棵树上吊死呢？”）</p>\n<p data-pid=\"2qq9XFrC\"><b>谦逊、包容、冷静、理性，尊重社区的每一位成员。</b> 有话好好说 :-) 极端情绪、语言大多数情况下是不必要的。开源社区参与者就事论事，基于事实进行理性讨论，而不是诉诸情感。千万不要因为一些很小的分歧就中伤、攻击其他社区成员。实际上，任何形式的人身攻击（不管是社区内还是社区外），都是不可接受的。这一点几乎所有开源社区的 Code of conduct 都会提及。</p>\n<p data-pid=\"mGQnsGr9\"><b>礼貌、有效地沟通。</b>进行开发之前，需要与社区（通常是相关的 maintainer）及时沟通，这样才能避免重复开发、防止误入歧途，最好地利用自己和社区的宝贵时间。这一点文章后续也会提到。</p>\n<p data-pid=\"d-wkeekm\"><b>充分讨论，尊重决策机制。</b>某些时候做出决定本身比决定的内容更重要。与其无止境地争执，不如在有限的信息下基于决策机制勇敢决策。独断制，如 Linus 之于 Linux Kernel、退休前的 Guido 之于 Python；committee 制等等都是好的决策机制。这里无关独裁与民主孰优孰劣：无论如何一定要有一个最终拍板（并为结果负责）的人或团体来推动决策的进行，不然任何事情都会止步不前。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"j2RLqeBm\">我作为 Taichi 项目原作者和目前的主要 maintainers 之一，有构建、维护良好社区秩序和文化的职责，因此保留关闭（或要求修改）不友好或不符合社区文化、发展路径的 Issue / PR / comment 的权力。当然，迫不得已使用这些权力对于 maintainer 来说往往也是比较痛苦的过程，属于开源活动之中最不愉快、但又不得不面对的事情之一。和其他项目的维护者一样，我希望这些权力永远不被使用 :-) </p>\n<p data-pid=\"IHLUQ_01\">参与开源社区绝大多数时候是非常让人享受的过程，其中与社区其他开发者、用户的交互扮演了重要角色。有效的沟通其实还是需要不少技巧的，下面就这一点展开谈谈。</p>\n<hr>\n<h2>与社区的有效沟通</h2>\n<p data-pid=\"wm1-sTtW\">了解了参与开源的意义、开源社区的文化，应该不少同学都对加入开源社区有了一定的兴趣，也期待能够为开源软件提交自己的代码，造福社区和用户。在开源社区，<b>有效沟通</b>的能力是和技术实现能力同等重要的。只有掌握了沟通技巧，才能确保自己的参与方式在正确的道路上，才能确保自己付出的努力最终能够成为开源软件的一部分。因此这部分值得单独讨论。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-1ce65a91abd17ab1b81febc5cca25aa1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"960\" data-rawheight=\"605\" class=\"origin_image zh-lightbox-thumb\" width=\"960\" data-original=\"https://pic2.zhimg.com/v2-1ce65a91abd17ab1b81febc5cca25aa1_r.jpg\"></figure><p data-pid=\"afSRrmID\">开源项目的开发往往是通过提交 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/taichi-dev/taichi/pulls\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Pull request (PR)</a> 来实现的。一个 PR 说白了就是一个代码片段，有的地方也叫做 Merge request （MR）。每个 PR 都会被 reviewer 评审，质量合格、符合社区 roadmap 的 PR 就会被合并到代码的（主）分支中，成为一个 commit。这些概念我会在下一篇文章中详细介绍。这里主要讲讲有效沟通在开源社区的重要性。</p>\n<h3>沟通技巧</h3>\n<p data-pid=\"YyxUvhII\">有效沟通的最重要的一点是：应该尽可能站在<b>读者</b>（而不是写者）的角度考虑表达方式。比如：</p>\n<ul>\n<li data-pid=\"m_6nQW4t\">对方能否理解我的表达？（准确）</li>\n<li data-pid=\"CiTzbO2U\">我的表达是否会冒犯对方？（礼貌）</li>\n<li data-pid=\"EVzYWgSR\">我的表达是否对解决问题有帮助？（建设性）</li>\n<li data-pid=\"dmtIU9PT\">进阶技巧：对方是否容易回答我的问题？（在自己这边预先进行充分的思考，不为难对方）</li>\n</ul>\n<p data-pid=\"x7ZcqSOh\"><b>常见缩略语：</b></p>\n<ul>\n<li data-pid=\"EpFqIbGP\">LGTM: looks good to me (“看起来好对我”/ “我觉得这看起来不错”，一般用于表示批准PR)</li>\n<li data-pid=\"YbiKMgHP\">SGTM: sounds good to me (“听起来好对我”/ “我觉得这听起来不错”，一般用于表示赞同观点)</li>\n<li data-pid=\"ilNxgf6z\">IIUC: if I understand correctly (“如果我理解正确的话”，表示略微弱化结论)</li>\n<li data-pid=\"jbdyuM01\">IIRC:  if I remember correctly (“如果我记得对的话”，表示略微弱化结论)</li>\n<li data-pid=\"9y-VSn2B\">...</li>\n</ul>\n<p data-pid=\"kbmpdPfF\">值得注意的是，在使用别的缩略语之前，请确认它是否是英语环境中广泛接受的缩略语。通常没有必要发明新的缩略语，因为那样做只会让读者感到困惑，并不能让沟通更有效。每一位社区成员都应该明确的是，我们打了多少字不重要，重要的是其中有多少能够被读者理解和接受。</p>\n<p data-pid=\"FKZtLyuw\">Taichi 社区的贡献者来自地球上的各个角落，大家都用英语沟通。这里的一个技巧是<b>使用一个 spellchecker。</b>（我一般使用 Grammarly，如果大家有别的推荐的 spellchecker 欢迎在评论中指出。谢谢！）实际上，即使是 native speaker 也需要 spellchecker。</p>\n<h3>及时和社区交流</h3>\n<p data-pid=\"0bbduixX\">大部分情况下，及时和社区交流能够消除很多误解。开 PR 的大忌，就是看到社区用户或者自己有需求，就开始自己一声不吭地暗暗开发一个大功能，不和社区讨论，几天之后开出一个大 PR。开动之前至少要和社区打声招呼呀，哈哈 :-）</p>\n<p data-pid=\"zvXxmSsU\">事实上这样不但不能给社区一个”惊喜“，反而会导致 PR 难以被 review、无法被 merge。这种 “憋大招”、只顾自己写得爽的参与方式，往往是不可取的。这样事情经常在各种社区发生，是一个常见的误区，因此值得仔细讨论。比如，Linux Fundation 就专门<a href=\"https://link.zhihu.com/?target=https%3A//www.linuxfoundation.org/tools/participating-in-open-source-communities/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">讨论</a>过这个问题：</p>\n<blockquote data-pid=\"WrNLBrSJ\">\n<b>Include the community early and often.</b> Some organizations make the mistake of developing big chunks of code in house and then dumping them into the open source project, which is almost never seen as a positive way to engage with the community. The reality is that open source projects can be complex, and what seems like an obvious change might have far reaching side effects in other parts of the project. Any significant change is likely to require some community discussion before it moves to implementation to make sure that there are no side effects and that the solution is aligned with the broader goals for the project. While you discuss it with the community, it can help to focus on the problem, rather than a specific solution, before you invest too much time in the creation of a body of code. (See Jon Corbet’s guide on <a href=\"https://link.zhihu.com/?target=https%3A//www.linux.com/publications/how-participate-linux-community\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">How to Participate in the Linux Kernel Community</a>)</blockquote>\n<p data-pid=\"nENkBchR\">翻译成中文：（大意）</p>\n<blockquote data-pid=\"qUcrhEYq\">（贡献者应该）尽早和社区建立关系。很多组织和贡献者会犯的错误，是闭门造车开发大量的代码，然后把它们 “倾倒” 进开源项目。这几乎从来不被认为是参与社区的正确方式。事实上，开源项目往往比较复杂，即使是看起来很显然的改动也会对项目其他部分产生深远的影响。任何较大的改动往往偶需要先和社区讨论好，再开始实现，以确保改动没有副作用并且和项目更长远的目标所吻合。和社区讨论的过程也能帮助开发者们专注于问题本身而不是一个解法，这可以有效地防止开发者们投入太多（无效的）时间编写一大段代码。</blockquote>\n<p data-pid=\"F-8RQgbX\">刨去一次提交大量代码难以 review、保证正确性以外，这种独自开发的行为本质上和 ”开源“ 的原则是矛盾的。（感谢 tison 的博客指引我到这段经典的话，很推荐对开源有兴趣的同学阅读 tison 的文章：<a href=\"https://link.zhihu.com/?target=https%3A//tisonkun.org/\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">tisonkun.org/</span><span class=\"invisible\"></span></a>）</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"dl0idyHF\">遇到这样的 PR，maintainer 也会被迫处于一个三难的境地。他们</p>\n<ol>\n<li data-pid=\"wgLBYxCq\">要么花费大量的时间和精力去和 PR author 沟通来确保 PR 内容符合项目未来发展的蓝图；</li>\n<li data-pid=\"pmzPQDbE\">要么不情愿地合并偏离开发路线的 PR；</li>\n<li data-pid=\"8PEIpq-Q\">要么直截了当地说明 “请按照社区的开发规则来进行开发以确保项目的健康发展”。</li>\n</ol>\n<p data-pid=\"Z0pArOaK\">不论是哪种情况，对于参与者的体验都是有损害的。我们社区的 maintainers 通常比较 nice，不好意思拒绝别人，因此通常会采用前两种方式处理，但这样往往会伤害 maintainers 的开源体验（别忘了 maintainers 自己也是开源贡献者）、使得项目偏离既定的发展路线。因此，作为开发者应当做好有效的沟通，才能最大程度上用好自己宝贵的时间和能力。这也是同理心的体现之一。</p>\n<p data-pid=\"lsk05edH\">最后，为了开源项目的健康发展，maintainer 必须有所判断、有所取舍。不少 PR 注定是要面临无法被 merge、 被 close 的命运。这在每个社区都是很正常的事情。Maintainer 必须有大局意识，如果真的遇到了上述情况，不能为了一个开发者的感受牺牲项目长远的发展，这一点也几乎是所有成熟开源社区的共识。Maintainer 要有明确的方向感，不能为了短期的情感被开发者带偏。当然，只要大家都遵守合理的规则（比如做到有效沟通），这样的情况就会很少发生。另外，作为开源贡献者，也完全有 fork 出一个自己版本的自由。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-aa1adfeddfcd09db411ad0e5e660f352_b.jpg\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"185\" data-thumbnail=\"https://pic3.zhimg.com/v2-aa1adfeddfcd09db411ad0e5e660f352_720w.jpg?source=d16d100b\" class=\"content_image\" width=\"300\"><figcaption>技术好当然是很重要的，但是确保项目能够沿着正确的方向发展，或许更加重要...</figcaption></figure><h2>总结</h2>\n<p data-pid=\"LAMvSPo4\">开源社区因为贡献者出于兴趣参与，没有强制机制，所以理想中每一位成员都应该维护社区的参与体验，才能让社区健康发展。这其中，同理心是开源社区正常运行的关键。推己及人，将心比心：你怎么对待别人，别人也会倾向于以同样的方式对待你。社区成员应当保持积极、友好，珍惜他人的时间。同时也要对社区伙伴有足够的包容（别忘了很多同学有自己的主要工作）。</p>\n<p data-pid=\"kI_Vuowr\">当然，Taichi 主仓库目前也就 166 个开发者，相对来说还不算是特别大的社区。我们也在不断努力提高开源社区的质量，也欢迎大家积极参与进来，和我们一起成长。也欢迎其他开源社区的小伙伴来我们社区逛逛。</p>\n<hr>\n<h2>扩展阅读</h2>\n<p data-pid=\"EGVTQswm\">不知不觉居然写了个万字长文，其实还有很多内容没有涉及到。如果想进一步了解开源社区，在知乎、各个博客上也有很多很棒的文章，这里列举一些。其中的不少对本文的撰写也起到了很大的启发作用：</p>\n<ul>\n<li data-pid=\"UC_gadx7\"><a href=\"https://link.zhihu.com/?target=https%3A//tisonkun.org/2021/12/05/effective-open-source-participant/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">高效参与开源的诀窍</a></li>\n<li data-pid=\"FYamXFkB\">如何让我的 PR 尽快被 merge？</li>\n<ul>\n<li data-pid=\"OF78CQDY\"><a href=\"https://link.zhihu.com/?target=https%3A//testing.googleblog.com/2017/06/code-health-too-many-comments-on-your.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Code Health: Too Many Comments on Your Code Reviews?</a></li>\n<li data-pid=\"-hDE9Yox\"><a href=\"https://link.zhihu.com/?target=https%3A//testing.googleblog.com/2019/11/code-health-respectful-reviews-useful.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Code Health: Respectful Reviews == Useful Reviews</a></li>\n</ul>\n<li data-pid=\"-j_WJXxN\">Rust 社区的 <a href=\"https://link.zhihu.com/?target=https%3A//www.rust-lang.org/policies/code-of-conduct\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Code of conduct</a>\n</li>\n<li data-pid=\"30X9GBTi\"><a href=\"https://zhuanlan.zhihu.com/p/26235066\" class=\"internal\">TiDB：如何从零开始参与大型开源项目</a></li>\n<li data-pid=\"RRUwvpCm\"><a href=\"https://www.zhihu.com/question/21965679\" class=\"internal\">中国开源现状如何？</a></li>\n</ul>\n<p data-pid=\"K0nWfqjQ\">本系列的下一篇文章会详细讲解 Issue、Pull request (PR)、Code review、Continuous integration (CI) 等入门开源社区常见的概念，并手把手带大家在 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/taichi-dev/taichi\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Taichi 社区</a> 开一个简单的 PR。</p>\n<hr>\n<p data-pid=\"A62ocTk1\">最后也介绍一下 Taichi。Taichi 是一个嵌入在 Python 中的开源并行编程语言，面向 GPGPU 等并行计算应用，力求实现优雅开发，高效运行，随处部署。更多技术介绍可以参见 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/taichi-dev/taichi\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">GitHub</a> 和 <a href=\"https://link.zhihu.com/?target=https%3A//dev.taichi.graphics/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">网站</a>。想了解 Taichi 背后的故事，请移步<a href=\"https://zhuanlan.zhihu.com/p/97700605\" class=\"internal\">99行代码的《冰雪奇缘》</a>。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"cMns073G\">还没有用过 Taichi 的同学欢迎安装 Taichi：</p>\n<p data-pid=\"9gY0gcQp\"><code>python3 -m pip install --upgrade taichi</code> </p>\n<p data-pid=\"z5fu6xSO\">并执行</p>\n<p data-pid=\"g7rzm3SR\"><code>python3 -m taichi gallery</code> </p>\n<p data-pid=\"WCtOHG8O\">体验各种 Taichi demo 呀！(需要最新的 v0.9.2 版本)</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-28d857209f510b8c8728c9999a0caefe_b.jpg\" data-size=\"normal\" data-rawwidth=\"1108\" data-rawheight=\"680\" class=\"origin_image zh-lightbox-thumb\" width=\"1108\" data-original=\"https://pic3.zhimg.com/v2-28d857209f510b8c8728c9999a0caefe_r.jpg\"><figcaption>0.9.2 版本的 gallery 功能。点击即可运行各种 Taichi demo 并打印相关代码到终端。</figcaption></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"_KElz-_L\">如果你已经迫不及待想要来一起写代码了，最近手上还真有一个适合 CUDA/LLVM 玩家上手的小任务欢迎大家来搞一搞：<a href=\"https://link.zhihu.com/?target=https%3A//github.com/taichi-dev/taichi/issues/4631\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">[RFC] [SIMT] Add CUDA warp-level intrinsics to Taichi · Issue #4631 · taichi-dev/taichi</a> </p>\n<p data-pid=\"Mnak0tT9\">（内容：给 Taichi 加入 CUDA warp-level intrinsics，每个 PR 应该 10-30 行代码就能写完。第一次贡献 PR 的同学会获得 Taichi 周边哦！）</p>\n<p data-pid=\"VNmg3cvH\">也可以关注一下我们的 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/taichi-dev/taichi/labels/good%2520first%2520issue\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">good-first-issues</a> 和 <a href=\"https://link.zhihu.com/?target=https%3A//github.com/taichi-dev/taichi/issues%3Fq%3Dis%253Aopen%2Blabel%253A%2522welcome%2Bcontribution%2522\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">welcome-contribution</a> :-)</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-175892b56f2659ab1a5cc72e8e4c29fb_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"909\" class=\"origin_image zh-lightbox-thumb\" width=\"1080\" data-original=\"https://pic4.zhimg.com/v2-175892b56f2659ab1a5cc72e8e4c29fb_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"cClHYKD2\">Most importantly, have fun! :-)</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://zhuanlan.zhihu.com/p/204492805?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\">知乎用户（登录查看详情）</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/204492805?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"爱人怀孕期间，准奶爸应该做什么？","date":"2022-03-28 03:22:13","description":"祝愿每个怀孕的妈妈都可以健康顺遂，得到应有的关爱和呵护。<a href=\"https://sspai.com/post/69905\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/69905"},{"title":"《三国杀》中有哪些历史小细节设计的特别精妙？","date":"2022-03-28 02:36:13","description":"\n<p data-pid=\"VDmyTOUz\">仅举一例：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c9526015bb1e79c134557fbc9f64b8dd_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"136\" data-rawheight=\"182\" data-watermark=\"watermark\" data-original-src=\"v2-c9526015bb1e79c134557fbc9f64b8dd\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"BahmwPW9\">一件兵器，但是这件兵器其实背后故事挺多的，文明系列和帝国时代系列，都把诸葛连弩手作为中国文明的特色兵种。</p>\n<p data-pid=\"gtIy2Iq0\">考古学家曾经在山西发现了一个大约距今今天30000年前的石头箭头，说明至少30000年前在中国生活的古人类就开始使用弓箭。从古文献的记载来看，《吴越春秋》里楚国的神射手陈音阐述了弓弩的来源，说明弩来源于弓。</p>\n<p data-pid=\"4GQOsDXD\">到了战国中晚期，弩开始大量装备于军队。与弓相比弩的优势是可以把拉弓蓄能和瞄准射击两个程序分开。射弓箭要在拉弓的同时瞄准，弩箭则是把弦拉好挂在弩机的“牙”上，然后射手就可以专心的瞄准。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-3fda4fae62cf3538b309708425690179_720w.jpg?source=b1748391?rss\" data-caption=\"青铜弩机 秦代 国家博物馆藏\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"299\" data-watermark=\"watermark\" data-original-src=\"v2-3fda4fae62cf3538b309708425690179\" data-watermark-src=\"v2-4adb2789ff2ac6edc8361f5f74144137\" data-private-watermark-src=\"v2-0128f80718afab7273cdf8c37c75a983\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-13369bc7a78a0ec62af3fb491eecd3de_720w.jpg?source=b1748391?rss\" data-caption=\"弩结构图\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"387\" data-watermark=\"watermark\" data-original-src=\"v2-13369bc7a78a0ec62af3fb491eecd3de\" data-watermark-src=\"v2-b59d2c7094360030942433c1c98521f6\" data-private-watermark-src=\"v2-729f3400fe92e609d6386969f3879223\"></p>\n<p data-pid=\"1FDNi-tg\">看上面的弩的结构图，我们可以发现有个部件叫做“望山”，这是弩箭用来瞄准的工具，和现代步枪用来瞄准的照门原理类似</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4982f6ed0b109c633c9cc7ef5a29ebfd_720w.jpeg?source=b1748391?rss\" data-caption=\"步枪瞄准示意图，引用自https://www.zhihu.com/question/20027389/answer/24410269\" data-size=\"normal\" data-rawwidth=\"571\" data-rawheight=\"157\" data-watermark=\"watermark\" data-original-src=\"v2-4982f6ed0b109c633c9cc7ef5a29ebfd\" data-watermark-src=\"v2-5e0073498084cfc7b8bcb859040835d1\" data-private-watermark-src=\"v2-69ac2e9db4e21cabe038bbc32e11ee4e\"></p>\n<p data-pid=\"1HLrN9Om\">到了汉代，弩箭的望山高度有所增加，有的望山上甚至标明了刻度，提高了弩箭射击的精确度。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-35d4cd3ccbdb282e698343c30cd2cdf8_720w.jpeg?source=b1748391?rss\" data-caption=\"望山带刻度的青铜弩机 西汉 河北博物院收藏\" data-size=\"normal\" data-rawwidth=\"361\" data-rawheight=\"268\" data-watermark=\"watermark\" data-original-src=\"v2-35d4cd3ccbdb282e698343c30cd2cdf8\" data-watermark-src=\"v2-5c6c3ddf4aba8c694bdeefc1473f5004\" data-private-watermark-src=\"v2-ac94792c0e5c98774d674bd74d22105c\"></p>\n<p data-pid=\"thRhG98E\">到了三国时期，弩机上出现了工匠名字来进行流程追踪，南京石门坎曾经出土一件三国纪年的青铜弩机，上面有“正始二年五月十日，左尚方造，监作吏<b>鼍泉，</b>牙匠马*，师陈耳，臂匠江<i>，</i>师**。”可见各个不同部位都有专门的匠人负责制造，有专人负责验收。</p>\n<p data-pid=\"Z6mUpPCN\">弩箭不如弓的方面是射速慢，给弩上弦比拉弓认箭速率慢。所以《三国志》记载，“（诸葛亮）又损益连弩，谓之元戎，以铁为矢，矢长八寸，一弩十矢俱发。”</p>\n<p data-pid=\"W4ahbdR0\">等等，损益连弩？说明诸葛亮不是发明，而是改进连弩。</p>\n<p data-pid=\"k9kMohy7\">事实上，连弩在战国时期就已经出现了，考古学家在湖北江陵战国楚墓中发现了连弩实物。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c7a0b6055ed4f00b96262e44b17c7715_720w.webp?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"612\" data-watermark=\"watermark\" data-original-src=\"v2-c7a0b6055ed4f00b96262e44b17c7715\" data-watermark-src=\"v2-afdc20be2baea7c36468d1bd89d8508b\" data-private-watermark-src=\"v2-8435266a5bd0bc9c8b6ea6c9b4b6fd02\"></p>\n<p data-pid=\"r5hvnaLh\">连弩的样子像平常的弩上面加了个木匣子，木匣子里面放弩箭，前面有两个射击口可以同时发射两支箭。专家推测木匣子和弩体之间的有活动的木臂，可以自动完成弩箭进入发射槽然后射击。不过，连弩的弩箭很短，只有不到15厘米，力量也不强，应该是近距离防身用的，无法射远。</p>\n<p data-pid=\"fJHI0-b0\">在《三国演义》里，诸葛亮临终之前，把连弩技术传给了姜维，“<b>“吾有连弩之法，不曾用得。其法矢长八寸，一弩可发十矢，皆画成图本。汝可依法造用。</b>”不过，诸葛亮的连弩特点是火力加强，<b>一弩可发十矢是一次发十矢还是连发十矢没有交代清楚，不过参照《三国志》的记载，应该是一次发十矢。</b></p>\n<p data-pid=\"YxfmIUQa\"><b>《三国杀》的诸葛连弩设计明显以战国连弩为原本，无限打“杀”的设定借鉴了连弩可以连续射击的特点，射程1借鉴了连弩射程近的特点，在牌面威力上形成了很好的平衡，又能找到考古实物的证据源头，我觉得还是挺能以小见大的。</b></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/luo-xuan-zhen-li?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">螺旋真理</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/523235899/answer/2410875769?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">4 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/417515519?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如果三国杀要设计一个只能在游戏结束时发动的技能，可以如何设计？</a><br><a href=\"http://www.zhihu.com/question/287855557?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《三国杀》的设计可以有多用心？</a><br>\n","link":"http://www.zhihu.com/question/523235899/answer/2410875769?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：欧盟就数字市场法案达成一致；3·15 晚会曝光企业受罚等","date":"2022-03-28 00:55:46","description":"你可能错过的新鲜事欧盟就《数字市场法案》达成一致，要求科技巨头开放互通新华社报道，3月24日，欧洲议会、欧洲理事会和欧盟委员会就《数字市场法案》达成一致，旨在限制被认定为「看门人」的科技巨头的某些行为 ...<a href=\"https://sspai.com/post/72322\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72322"},{"title":"看懂设计里的门道：区分字体的 16 种特征","date":"2022-03-27 07:47:25","description":"\n<p><strong>本文包含以下知识点：</strong></p>\n<ul>\n<li>有什么办法快速对比字体特征？</li>\n    <li>英文字体的特征是否能用在中文字体上？</li>\n    <li>找到身边的英文字体，特征是怎样的？</li>\n    <li>中英文字体可以对应吗？</li>\n    <li>字体的特征之间是否互相影响？</li>\n</ul>\n<p>[......]</p>\n<a href=\"https://sspai.com/post/71957\" target=\"_blank\">查看全文</a><p>本文为付费栏目文章，出自<a href=\"https://sspai.com/series/269\" target=\"_blank\">《100 小时后请叫我设计师》</a>，订阅后可阅读全文。</p>\n","link":"https://sspai.com/post/71957"},{"title":"[送码] 给居家植人的礼物，我为家里的花花草草写了一个 App：植物宝","date":"2022-03-27 05:39:51","description":"如果你也养花养草，并且欣赏一款实用、安静、不打扰的工具类 App，欢迎你来试试《植物宝》。我很期待能够从养花养草的同伴那里学到东西。<a href=\"https://sspai.com/post/72260\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72260"},{"title":"如何评价动画《新秦时明月》第 19 集？","date":"2022-03-26 07:01:38","description":"\n<p data-pid=\"BDwDL3-r\">大家好，《新秦时明月》已经播出第十九集。</p>\n<p data-pid=\"LWawMjqq\">天明出门遇到了小高雪女，这里天明依然还不知道自己父亲就是荆轲。墨家虽然计划屠龙，推翻暴政，但是在孩子面前并没有引导天明向复仇的方向发展，墨家主张非攻兼爱，天明也因此得到了健康成长的机会，没有从小就活在复仇扭曲的世界里，他的成长会更多围绕着爱展开吧。</p>\n<p><img src=\"https://pica.zhimg.com/v2-b4da5f22dfddc93e055dc578af18d3bb_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"714\" data-watermark=\"watermark\" data-original-src=\"v2-b4da5f22dfddc93e055dc578af18d3bb\" data-watermark-src=\"v2-254ae6ba06626fbf0bad96bb0d31f254\" data-private-watermark-src=\"v2-84a998053c9199cc26234957b00659e4\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-2663c15a8d8fe0396203826aafccf7ab_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"711\" data-watermark=\"watermark\" data-original-src=\"v2-2663c15a8d8fe0396203826aafccf7ab\" data-watermark-src=\"v2-b64d96ff99c0e27da9ce88c9ce422a21\" data-private-watermark-src=\"v2-1f8696250246b8ffaed09f398af53870\"></p>\n<p data-pid=\"1vXWtFCt\">练剑池这里的篇幅比较长一些，对于天明为何会知道咸阳宫，会记得见过天问，我其实也一直很好奇。天明离开咸阳宫的时候还很小，理应并不会有这些记忆，但是一些碎片化的画面会从脑海中浮现，这里显然说明天明的确在某种原因下对咸阳宫保有一些印象。我记得有个科普知识讲过，为何我们都不会记得2岁前的事物，它的理论是我们如果要清晰的记住某件事情，需要具备必要的几个要素，作为类似索引的作用，然而因为太小的时候人并不具备明确的认知，所以索引无法建立，导致大脑没有办法成功提取2岁前的记忆。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-55e84028e0a5eeb33be21b37de1e9eaf_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"710\" data-watermark=\"watermark\" data-original-src=\"v2-55e84028e0a5eeb33be21b37de1e9eaf\" data-watermark-src=\"v2-c43ca08db59dd68923f9fb7108999e66\" data-private-watermark-src=\"v2-0d3b06575b881adf8373e8277786eab5\"></p>\n<p data-pid=\"-R07H2sW\">这里名剑排行榜的知识又做了一次科普，不知道大家最喜欢的是哪柄名剑呢？</p>\n<p data-pid=\"xNhZ-0qE\">我个人比较喜欢小高的剑，寒冰加持后真的很帅~</p>\n<p><img src=\"https://pic2.zhimg.com/v2-9aa43f9a4e1b1179bfa9c900f3d51eb2_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"715\" data-watermark=\"watermark\" data-original-src=\"v2-9aa43f9a4e1b1179bfa9c900f3d51eb2\" data-watermark-src=\"v2-da37b8d9347e788173427e6f86e24d31\" data-private-watermark-src=\"v2-a6b3c872f7d72e614382840812a99bea\"></p>\n<p data-pid=\"gZ5nEYj6\">鲨齿虽然与第二名的渊虹不相上下，但是因为太凶太妖没被例入剑谱内，是持剑之人决定着兵器的命运呢？还是兵器决定了小庄？</p>\n<p><img src=\"https://pica.zhimg.com/v2-119799187bf6b62150e76a5aed1be9dc_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1269\" data-rawheight=\"711\" data-watermark=\"watermark\" data-original-src=\"v2-119799187bf6b62150e76a5aed1be9dc\" data-watermark-src=\"v2-c1ff349eddf5786cc87df78effdb6ece\" data-private-watermark-src=\"v2-11563557aff66bb8c13587deea7e6f3b\"></p>\n<p data-pid=\"y5dW7bXb\">在家隔离这段时间我把之前一直没看的奥浩哉老师的《杀戮重生犬屋敖》漫画看了一遍，人没有简单的正与恶，黑与白，那么卫庄呢？ </p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/xie-xiao-ming-98-74?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">薛小明</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/524206401/answer/2408090381?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">3 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/519999486?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价动画《新秦时明月》第 16 集？ ?</a><br><a href=\"http://www.zhihu.com/question/518604100?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价动画《新秦时明月》第 15 集？</a><br>\n","link":"http://www.zhihu.com/question/524206401/answer/2408090381?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"边听歌边写稿：送给新作者们的写稿歌单","date":"2022-03-26 07:00:00","description":"一起来听歌写稿吧！<a href=\"https://sspai.com/post/72302\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72302"},{"title":"如何评价游戏《艾尔登法环》最终 BOSS 拉达冈？","date":"2022-03-26 05:12:35","description":"\n<p data-pid=\"ExFaHsck\">提醒：本文涉及大量剧透。</p>\n<p data-pid=\"W_WMHVDg\"><br>一直以来，魂系作品的剧情都以其谜语的特点闻名于世，这次法环请来马丁写世界观后，谜语的特征有增无减，复杂程度和可挖掘的空间倒是更上一层。</p>\n<p data-pid=\"eICb29s4\">在艾尔登法环里，玩家大部分时候依然只能靠对话和物品说明来拼凑出一个个故事的全貌，漏了一段对话，漏收集一个物品，都会对故事的理解造成影响。</p>\n<p data-pid=\"AQDTUhoF\">这也是游戏前期半狼布莱泽舔狗说风靡的原因，很多玩家直接去做了菈妮支线，看到的结果就是你和菈妮好上了，狼哥疯了，但实际上如果你先做了狼哥的支线，按流程遇到铁匠后，铁匠会告诉你狼哥和菈妮从小一起长大，是姐弟关系。</p>\n<p><img src=\"https://pica.zhimg.com/v2-6c3793fcadd4c337e1b2aeeda62c48f1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"793\" data-rawheight=\"116\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-fe2ba735da193308893711183c7f5e69_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"847\" data-rawheight=\"148\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"YEhiacv3\">同理，黑剑也是玛莉卡的结拜弟弟。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-04a7edab5682498bf8a1770df7ba7d6a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"677\" data-rawheight=\"869\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"K2c5sIZb\">因此，越是复杂的问题，参考的内容就越零碎，解读的方向可能就越是多样。</p>\n<p data-pid=\"c4kCfGBC\">其中，“拉达冈就是玛莉卡”这一点，可能是包括我在内最多人想深究的一件事。</p>\n<p data-pid=\"gbrvfAcB\">考虑到目前我被推送到的剧情讲解内容，在拉达冈的问题上多少都有误读或遗漏，而越是研究，越是能感觉到这个人物的反差其实很大，甚至很悲情，我决定把所能收集到的资料汇合在一起，做一个相对完整的人物考据和猜想。</p>\n<p data-pid=\"BxprKOoD\">当然，其中很多猜想还缺乏足够有利的证据支持，也希望这篇文章发出后能获得更多的补充信息。</p>\n<h2>\n<br>背景信息</h2>\n<p><img src=\"https://pic3.zhimg.com/v2-4b6eea15822e30d48415a4bd58f3bdc0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1796\" data-rawheight=\"991\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"K2DznsZP\"><br>第一次听到拉达冈这个名字，应该是在结缘教堂的龟龟那边，龟龟会告诉你“过去黄金树与月，双方王室为求和平共存。‘红发’拉达冈和‘满月’蕾娜菈，两位大人就是在这座教堂缔结契约。至今这座教堂与王城黄金树、以及雷亚鲁卡利亚学院仍有联系。拉达冈是一头红发的英雄，率领黄金树的军队来到此地，在战场上邂逅了蕾娜菈，随后对发起侵略战争一事真心忏悔，和卡利亚女王蕾娜菈结为伴侣。但是在初始艾尔登之王葛孚雷被逐出交界地之后，拉达冈抛弃了蕾娜菈，回到黄金树王城，成为玛莉卡女王的第二任丈夫和第二任艾尔登之王。”</p>\n<p data-pid=\"ZDmf9LKQ\">这就是游戏里少数关于拉达冈的直接信息了。</p>\n<p data-pid=\"kpE95JRV\">随后，玩家根据流程会需要去雷亚鲁卡利亚学院，在那里，你需要击败满月女王蕾娜菈。可是，此时的满月女王已经神志不清，全无战意，所以，是为了保护母亲的女儿菈妮制造了女王全盛期的幻影来与玩家作战。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-865a902de7c61bebaaaa97d5cd8e4891_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"684\" data-rawheight=\"880\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"ymosFkdT\">到这里，构成了绝大部分玩家对这两个人物的印象：为事业抛妻弃子的负心汉拉达冈，以及堂堂一个人类最强英雄之一，却区区因为男人跑了就失心疯的恋爱脑蕾娜菈。</p>\n<p data-pid=\"twZ5BTEK\">那么，事实果真如此吗？</p>\n<h2>拉达冈和玛丽卡是否共用一个身体？</h2>\n<p><img src=\"https://pica.zhimg.com/v2-eeca98ed7b152d77929a93fbf70cb4dd_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2240\" data-rawheight=\"1132\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"mGGZ8dsV\">任何一名通关玩家，一定都看过最终BOSS的登场动画，其中玛莉卡掉下来变成了拉达冈。</p>\n<p data-pid=\"Uh11WgA8\">如果你做了黄金律法这条支线，会知道，拉达冈的秘密就是“拉达冈就是玛莉卡”。</p>\n<p data-pid=\"7XHqEmfA\">那么问题来了，他们真的共用一个身体吗？玛莉卡和葛孚雷的婚姻存续期间，拉达冈和满月女王是夫妻关系，两对夫妻都生了三个孩子。所以，玛莉卡真的同时维持着两段婚姻？雌雄同体的话，拉达冈和玛莉卡后来的两个孩子米凯拉与玛莲妮亚又是怎么来的呢？</p>\n<p data-pid=\"xRwVnhAb\">首先，我个人没有找到任何拉达冈和玛莉卡同时分开出现的描述，所以两人一体论目前在我看来很难被完全否定。</p>\n<p data-pid=\"Xcj62p1U\">至于一体如何产子其实不是问题，看了希腊神话就知道，神的繁殖行为凡人不用思考太多。</p>\n<p><img src=\"https://pica.zhimg.com/v2-905e24d95fe1613f0e2525c56e3cd522_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"702\" data-rawheight=\"784\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"7GLVrrEq\">并且，离婚后拉达冈留给了满月一个无法出生的第四子的大卢恩，它的描述是“无缘诞生者”，如果通常的怀孕生产行为是满月进行，为何这个孩子会无缘诞生？这里我有几个假设，一是孩子是死婴，大卢恩让它始终在即将诞生的状态下存续；二是将成为半神的孩子会需要通过某个特定的仪式才能真正完成自己的诞生，类似命定之死才能给神带来真正的死亡。三就是，这些神和半神的诞生方式和人类的怀孕生产过程完全不同，若是如此，玛莉卡自己跟自己生两个孩子也不见得就做不到。</p>\n<p data-pid=\"hSO6EsAp\">但是，我个人并不支持两人一体说，依据是游戏中玛莉卡的箴言：</p>\n<blockquote data-pid=\"CXfGM5AY\">“噢，拉达冈啊，黄金律法的忠犬啊。”<br>“你还不是我，还不是神祇。”<br>“我的半身啊！击碎彼此吧！”</blockquote>\n<p data-pid=\"3c8Fwqic\">这里的“‘还’不是我”，在我看来说明了这种融合其实经历了过程。如果拉达冈从一开始就是玛莉卡，玛莉卡为什么要对他说“你还不是神祇”？</p>\n<p data-pid=\"dX6jlGa9\">所以综上所述，我认为他们过去确实是作为两个个体单独行动的。</p>\n<p data-pid=\"85S3wIa8\">网上另有一种说法，结合玛莉卡与永恒之城的联系，以及拉达冈在向蕾娜菈立誓永志不渝的爱之前用星星泪滴沐浴忏悔的行为，认为拉达冈是玛丽卡的有独立个人意识的泪滴，这个根据游戏解包出来关于泪滴的设定废案来看，倒也不无可能性。</p>\n<h2>拉达冈是何时出现的？</h2>\n<p data-pid=\"lK26Y_HQ\">毫无疑问，拉达冈和玛莉卡是完全敌对的关系，拉达冈是黄金律法的坚定捍卫者，而玛莉卡后期一心想砸环。</p>\n<p data-pid=\"jbrClqu_\">关于玛莉卡，已经有大量的考据论证了她和永恒之城存在关系，是稀人，那么，假设拉达冈是黄金律法用来控制玛莉卡的工具人，那他是何时出现的呢？</p>\n<p data-pid=\"Qpzy1fKE\">最早关于拉达冈的描述，就是他来打蕾娜菈然后一见钟情与其结婚了，也有不少玩家解读为拉达冈打不过蕾娜菈，只好改成联姻骗婚。亦有人提出，拉达冈的存在，或许就是为了解决蕾娜菈势力而被分出来的。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-8631f9eb2d4021bba831432d88d8e91d_720w.jpg?source=b1748391?rss\" data-caption=\"有一说一，满月女王爱上拉达冈完全合情合理\" data-size=\"normal\" data-rawwidth=\"794\" data-rawheight=\"910\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"iC6IagOb\">但是，我在研究关于拉达冈的物品位置时，发现事情应该并非如此。</p>\n<p data-pid=\"VuVlXlwD\">游戏中冠名拉达冈的护符有三个，分别是拉达冈肖像、拉达冈的烙印和拉达冈的糜烂烙印。</p>\n<p data-pid=\"jFjmkK5p\">拉达冈的肖像在法师学院里，这个很好理解，毕竟是他和前妻曾经的爱巢。</p>\n<p data-pid=\"BMP4KR56\">拉达冈的糜烂烙印在法洛斯要塞，我没找到关于这个要塞或者位置的更多信息，但这个地方能获取开启通往黄金树的迪可达斯符节，所以逻辑上也说得通。</p>\n<p data-pid=\"8NdfOhOC\">比较有趣的就是拉达冈的烙印了，这个护符在出生地附近的啜泣半岛，打赢封印监牢的萨米尔的古英雄后可以获取。我后来搜了一下萨米尔这个地方，发现了萨米尔废墟位于雪山，巨人山顶附近，靠近巨人战争的地下墓地，这应该是拉达冈也参与了巨人战争的证据。</p>\n<p data-pid=\"BRXK2khi\">在打败火焰巨人后，可以在它的物品描述里看到，“拉达冈对自己的红发感到绝望，也许是巨人设下的诅咒”。</p>\n<p><img src=\"https://pica.zhimg.com/v2-5a9892c393dcd1edbda95c1374792370_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"698\" data-rawheight=\"879\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"1nM56pHV\">在结缘教堂龟龟那里可以得知，拉达冈是以英雄的身份和蕾娜菈结婚的，当时他的称号是“红发”，也就是说，拉达冈在作为英雄出名或者获得称号的时候，就已经是红发了，这再次证明了他确实参与了巨人战争。</p>\n<p data-pid=\"keEiVXXo\">那么问题来了，巨人战争最初的发起人是玛莉卡，葛孚雷是奉命出征者，原因只是巨人们威胁到了黄金树，那这个阶段的玛莉卡对黄金律法应该仍是忠诚的，那么拉达冈为什么在这个阶段（或更早之前）就出现了呢？</p>\n<p data-pid=\"wHxUlMHM\">并且，既然葛孚雷才是主打人，玛莉卡是发起人，为什么最后被诅咒的是拉达冈呢？</p>\n<p data-pid=\"vKcXh6Xi\">我个人的猜测是，最初拉达冈的诞生并不是为了监管玛莉卡，而是为了把巨人对玛莉卡的诅咒分离到新的个体上。</p>\n<h2>拉达冈有人性吗？</h2>\n<p data-pid=\"DIk_tyyG\">读物品说明的时候，你可以很清晰地感觉到一个奇怪的现象，完美律法的修复卢恩中提到“目前黄金律法的不完美，是因为神有喜怒哀乐”，也处处暗示是玛莉卡的人性引发了之后的混乱与悲剧，拉达冈好像是冷酷无情的秩序维护AI。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-867b69995db9e7617a90cdfd76883438_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"690\" data-rawheight=\"886\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"vbfuJzY-\">但是，游戏里的人性展现几乎都集中在拉达冈身上。</p>\n<p data-pid=\"y6fDqwKp\">首先，游戏的说明里多次提到他努力想成为完美的英雄，跟蕾娜菈结婚的时候学魔法，和玛莉卡结婚的时候又学了祷告。</p>\n<p><img src=\"https://pica.zhimg.com/v2-8c3bc1a4ed6c65ac7067ec7e17e3b110_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1402\" data-rawheight=\"1675\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"ou-6cO6K\">其次，他和自己的孩子关系融洽，米凯拉赠予他祷告，碎星以他为豪。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-89cac69c246ec550931a7cc60877c10f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1370\" data-rawheight=\"1465\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Miexfnox\">对蕾娜菈，他确实有辜负，但马丁早在冰与火之歌就写了大把的联姻真爱了，这里拉达冈对满月也不一定没感情:</p>\n<p data-pid=\"GXhTQn15\">结婚前他带了黄金缝衣针，简直从英雄摇身一变成被美色蛊惑无心恋战的日子人去了。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-a1ae370e9514c1c8eede498eca912105_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1389\" data-rawheight=\"1550\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Jqd6tIb9\">离婚时，送了满月一个大卢恩。</p>\n<p data-pid=\"eu00_m7v\">在打满月女王之前，必先经历一个BOSS叫拉达冈的红狼（游戏中的红狼BOSS有多个，但冠名拉达冈的红狼的似乎就这一只？不确定，欢迎补充）。王城里倒是一只红狼都没有。也就是说，拉达冈人是走了，宠物却留给前妻看门。</p>\n<p data-pid=\"OevMZU0R\">离婚后，黄金律法大剑上，有前妻送的大剑（这里指得应该是暗月大剑，卡利亚女王赐予配偶的武器）的影子。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-ed20b12eda3385312b5fd71391eb90d1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"811\" data-rawheight=\"1042\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"MOGZHMDf\">而且，从结果推论，从外面破碎战争打成一片，到玩家出山开始一路杀红了眼，有大卢恩被软禁，却在事实上一直被魔法封印好好保护着安然无事的也就满月女王一个人。</p>\n<p data-pid=\"bfhix1eO\">综合以上种种，要说拉达冈一直都是纯纯律法走狗机器人，多少有些矛盾。</p>\n<p data-pid=\"_6eWWRuu\">根据这些信息，我这里有以下几种推想。</p>\n<h3>1.事业优先说</h3>\n<p data-pid=\"Mwo2sqWK\">这是比较容易得出的一种结论，既，无论最初拉达冈和蕾娜菈结婚的出发点是什么，拉达冈确实爱过蕾娜菈，但是王城出烂摊子他必须回去善后，比起事业，他选择了舍弃儿女私情。而蕾娜菈因为深爱拉达冈，不能接受这一点所以出现了精神问题，不再是英雄的她就此被软禁在学院里。</p>\n<h3>2.纯纯PUA说</h3>\n<p data-pid=\"mvNa4qt9\">这个就是比较无情的版本了。</p>\n<p data-pid=\"VRrt_BkP\">即，拉达冈和满月没什么感情，只是骗了满月跟自己结婚，目的就是生下下一位神人。</p>\n<p data-pid=\"TNbx7WtW\">他们其实依然是王+神的配置生子，只不过玛莉卡+葛孚雷是女神+男王，蕾娜菈+拉达冈是女王+男神。毕竟以蕾娜菈之前的实力来说，确实够得上王格。</p>\n<p data-pid=\"aPjPKo1b\">但是生完了三个孩子后，发现孩子情况不符合黄金律法要求，所以拉达冈打算跑路，临走前为了防止力量强大的蕾娜菈搞事，故意留了个大卢恩琥珀把她整疯。</p>\n<p data-pid=\"bYeK5Roo\">这个版本比较难解释律法大剑上为什么会有蕾娜菈赠物的影子，我们姑且当做是律法忠犬拉达冈觉得“这么好的武器必须有黄金律法版本”吧。</p>\n<h3>3.无上意志夺舍说</h3>\n<p data-pid=\"OIIx-F-6\">这个就是比较纯爱的版本。</p>\n<p data-pid=\"7E4BVpmX\">和第一个说法一样，拉达冈和蕾娜菈最初就是自由恋爱，真实一见钟情。毕竟男帅女靓，还都是强者，擦出爱火也没什么可稀奇的。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-e48cc247d24d38631c954b16471c0e41_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1745\" data-rawheight=\"1134\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"QlW-Wu8I\">但是后来，拉达冈被逼无奈要回王城。</p>\n<p data-pid=\"-xxOoNyj\">在无缘诞生者的大卢恩上，在英文原文里用的词是拉达冈遗赠（bequeathed），什么情况下需要用到“遗赠”这样的词呢，简直就像是拉达冈留给了蕾娜菈自己的遗物。</p>\n<p data-pid=\"j4og2xwN\">所以，这个时候拉达冈在道别蕾娜菈时，或许感觉到了这是某种意义上的死别。</p>\n<p data-pid=\"u5Gq0tgO\">在菈妮支线的最后，被无上意志控制的布莱泽会发疯，那么无上意志是否也可以在一定程度上控制“还没有成为神，还没有成为玛莉卡”的拉达冈呢？</p>\n<p data-pid=\"UHP81sB2\">我们在最终BOSS战见到的拉达冈一言不发，仿佛空壳，但有强大的神性威慑力，与之前物品说明里的“人性化”的印象差异巨大，这很可能就是被无上意志抹消个人意志的结果。</p>\n<p data-pid=\"to33fdrN\">因而，从蕾娜菈的角度而言，她的痛苦不见得是源于被抛弃，而是心爱的丈夫已经在事实意义上亡故，他们最后的孩子将无缘诞生，多重打击下才会是现在精神失常的状态。</p>\n<p data-pid=\"Xf6vJ_HA\">甚至很有可能，蕾娜菈是知道拉达冈的秘密的。毕竟在大书库里就有拉达冈的雕像，假设满月真的不知情，那负心汉的雕像放在自己眼前天天看多少还是会膈应的吧。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-fa0cfcd3626691abada2e2ecd9b810fc_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1552\" data-rawheight=\"1023\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"NDf4N-1P\">满月女王之所以还在睹物思人，一定是因为拉达冈还有值得思念的地方。</p>\n<h2>拉达冈为什么要和玛莉卡生子？</h2>\n<p data-pid=\"suBkI_73\">最初很多人的认知里，拉达冈会和满月结婚，一方面是为了拉拢这一方的势力，另一方面是为了借肚子生娃。他和满月的三个孩子，拉塔恩、拉卡德、菈妮，在破碎战争前基本都是SSR卡级别的，也确实很拿得出手。反观玛莉卡和荷莱露的孩子，就只有长子葛德文能打。</p>\n<p data-pid=\"jcK2TN-x\">按照一王一神的配置，到这里如果没有变数的话，下一届的神很可能是菈妮，王是葛德文。但是菈妮显然跟妈更亲，搞魔法的这批势力，有自己拥戴的力量，不太会成为黄金树的傀儡，因而，无上意志需要一个新的神。</p>\n<p data-pid=\"LeMeOmsP\">问题来了，玛莉卡和荷莱露的孩子越生越不行，拉达冈和满月就算继续生出有潜力成神的人，估计还是会被亲妈带跑，世界上也没有第三个够得上王格的英雄了，那没办法，自己搞自己吧。</p>\n<p data-pid=\"q0_gVzw4\">所以拉达冈急匆匆跑回来当王，其实是奉命生子。事实上他和玛莉卡生下的米凯拉和玛莲妮亚，确实也都很出色，尤其米凯拉，是最有成为神机会的一个，并且就像拉达冈就是玛莉卡一样，米凯拉就是托莉娜。巧了，也是扶她。</p>\n<p data-pid=\"mE5XaeEV\">根据游戏中一个白魂的台词，米凯拉和葛德文是朋友，所以米凯拉出生的时候黑刀之夜一定还没有发生，玛莉卡也没开始砸环，拉达冈和玛莉卡是纯纯要被迫完成配种任务。</p>\n<p data-pid=\"ilAEFdNM\">那么，到这里，未来的一王一神最初可能的组合其实是葛德文+米凯拉。</p>\n<p data-pid=\"U-hziHyt\">接着，黑刀之夜来了。</p>\n<p data-pid=\"ttzRfHmR\">菈妮要逃离自己的命运很好理解，根据玛莉卡留下的箴言，这场大型家庭伦理剧的本质是养蛊——</p>\n<blockquote data-pid=\"NJ0cb9TC\">“半神啊，我可爱的孩子啊。”<br>“你们能成为任何存在──<br>能成为王者，也能当上神祇。”<br>“但是当你们没有成为任一存在，就会被抛弃……”<br>“并且，成为祭品。”</blockquote>\n<p data-pid=\"gbgAgAGv\">可以成为王，也可以当上神，但如果都没成功，就只能做祭品。</p>\n<p data-pid=\"2kUVuo6p\">米凯拉的出现让菈妮横竖没戏唱了，既然不想做祭品，就只能反抗命运。</p>\n<p data-pid=\"62qDh9kT\">接下来的问题在群众之中有很大分歧，有一说认为菈妮没有杀葛德文的动机，这里我个人持保留意见。</p>\n<p data-pid=\"bTuIn6AI\">我个人的想法是，菈妮杀自己肉身是为了自己润，杀葛德文灵魂，则是为了搞出一个没有下一任王的局面。</p>\n<p data-pid=\"4iYGaoqc\">否则，她自己润到一半，新的王带着新的神发布了新的律法，或是继续拥护本来的律法，她也还是达不到自己的目的。</p>\n<p data-pid=\"VmS-inuV\">事实上，破碎战争里菈妮确实达到了自己的目的，剩下所有有资格抢夺王称号的全都打成了一片，各显神通。</p>\n<p data-pid=\"J4brUb7c\">血王之所以拐跑米凯拉躲到地下，也是因为他认为王是神的伴侣，米凯拉成神几率最大，那他只要先成为米凯拉的伴侣就等于成为了王，另辟蹊径的倒推逻辑了属于是。</p>\n<p data-pid=\"54UYYO_8\">拉达冈的二婚生子行为，本质是制造一个他和玛莉卡的替代品，他们被替换了以后会是什么结局，自然不必多说。</p>\n<p data-pid=\"K-zJviBs\">再回过头来看玛莉卡砸环的原因，</p>\n<p data-pid=\"r-E24Awq\">从最人性化的角度出发，是玛莉卡看见儿子死了大受打击，不想看自己的后代们在现在的律法下不得不自相残杀争夺新的王位，所以怒而砸环。</p>\n<p data-pid=\"jm1A16Z5\">从比较自私的角度去看，是玛莉卡不愿意自己被替代，基于和菈妮类似的理由，奋起对抗命运。</p>\n<p data-pid=\"K-LmEe5-\">但是，无论任何一种情况，拉达冈回王城的结局其实是确定的，他基于不可抗力，已经不可能再继续做他过去的日子人了，作为玛莉卡的分身想普通终老也不可能了。</p>\n<p data-pid=\"9OOxakPJ\">无论他多么努力试图去修补，过去的一切美好也终究注定像他的身体那样，随着一次次敲击裂成碎片。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4f709fef233b38f77c70241d48ddfc1f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1905\" data-rawheight=\"938\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\" data-tags=\"porn\"></p>\n<p data-pid=\"relXBrgy\">老头兽不评价了：就你会游泳是吧？</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/cynerdean?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">蓝莲安</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/518457267/answer/2408132666?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">3 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/462390025?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如果你能从游戏 《黑暗之魂 3》中带出一个角色，你会选谁？</a><br><a href=\"http://www.zhihu.com/question/459264956?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">你觉得游戏《黑暗之魂 3》中颜值最高的角色是哪个？</a><br>\n","link":"http://www.zhihu.com/question/518457267/answer/2408132666?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"三国杀设计师在设计皮肤的时候会考虑植入彩蛋么？彩蛋数量会有做预估么？","date":"2022-03-26 04:50:58","description":"\n<p data-pid=\"2Uu7IDZi\">在策划将皮肤需求文档写好后，插画师根据文档要求进行创作，在这个过程中，策划可能对皮肤的主题或情境有规定，这个阶段是否植入彩蛋的需求要看能否想到契合上述需求的内容。不同角色跟其他角色的关系、技能涉及的元素、历史故事等都有不同程度的差别，因此需求里通常会规定一个关键情境或情绪，但不会在每张皮肤需求中都提出彩蛋的要求。此外画师在绘制时偶尔也会加入自己的想法，创作出令人惊喜的细节，有时候连策划也未曾想到。</p>\n<p data-pid=\"0YrBeqrw\">皮肤通常是指单角色的异画插图，除主体角色外能承载的信息量有限，最多一两个作为点缀，而在一些较广的画幅——如节日纪念插图和多人场景中会更容易见得彩蛋，我这几年对于创作或欣赏多人合集的“集合绘”类型插图颇有兴趣，一幅画能看很久是一种享受。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/kayak777?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">KayaK</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/523235885/answer/2407987325?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">13 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/442206362?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">我这个终极无敌大孙笨是不是特别弱？</a><br><a href=\"http://www.zhihu.com/question/399772484?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">三国杀小乔可以转伤害给伤害来源不？</a><br>\n","link":"http://www.zhihu.com/question/523235885/answer/2407987325?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"为什么《进击的巨人》中巨人的身材比例不一样？","date":"2022-03-26 04:38:32","description":"\n<p data-pid=\"dr61iYbR\">前些天在<a href=\"https://www.zhihu.com/question/523295110/answer/2404884808\" class=\"internal\">《进击的巨人》中法尔科的颚之巨人真的能飞起来吗？</a>这个回答中提到了《进击的巨人》中<b>不同巨人身材比例不同</b>的问题，在这里把坑填上。</p>\n<p data-pid=\"tSZEdsvk\"><b>还是那句话，写这类回答的意义并不是为了抠漫画设定的细节（巨人世界观中的很多事实根本无法用现代科学来解释），只是借助这个载体，演示一下如何使用最简单的数学模型，来理解生活中的有意思的物理现象。</b></p>\n<p data-pid=\"tCgT1kG-\">就图一乐，不用较真。</p>\n<hr>\n<p data-pid=\"yBQKmHTs\">下面做一点简单的计算，只用到了初中数学知识。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-69dd6d28146103335456d1f916e88a8d_720w.jpg?source=b1748391?rss\" data-caption=\"巨人艾伦找不到他的腿了，你能帮帮他吗？\" data-size=\"normal\" data-rawwidth=\"506\" data-rawheight=\"800\" data-watermark=\"watermark\" data-original-src=\"v2-69dd6d28146103335456d1f916e88a8d\" data-watermark-src=\"v2-ec97caf275748a5746e1e22776186234\" data-private-watermark-src=\"v2-de4c973f253a99f11d382623812a956d\" data-tags=\"porn\"></p>\n<p data-pid=\"J2JRYY1U\">假设巨人的身高为 <img src=\"https://www.zhihu.com/equation?tex=h\" alt=\"h\" eeimg=\"1\"> ，身体平均截面积为 <img src=\"https://www.zhihu.com/equation?tex=S\" alt=\"S\" eeimg=\"1\"> ，腿骨平均半径为 <img src=\"https://www.zhihu.com/equation?tex=r\" alt=\"r\" eeimg=\"1\"> ，密度为<img src=\"https://www.zhihu.com/equation?tex=%5Crho\" alt=\"\\rho\" eeimg=\"1\">，重力加速度为 <img src=\"https://www.zhihu.com/equation?tex=g\" alt=\"g\" eeimg=\"1\"> 。则其质量为 <img src=\"https://www.zhihu.com/equation?tex=M%3D%5Crho+hS\" alt=\"M=\\rho hS\" eeimg=\"1\"> 。</p>\n<p data-pid=\"LqWMGslW\">我们定义一个量为 <img src=\"https://www.zhihu.com/equation?tex=A%3D%5Cfrac%7Bh%7D%7Br%7D\" alt=\"A=\\frac{h}{r}\" eeimg=\"1\"> ,即巨人身体高度与腿骨半径之比。<b>假设越高的巨人身体也等比例增大，那么 <img src=\"https://www.zhihu.com/equation?tex=A\" alt=\"A\" eeimg=\"1\"> 为一个常数。</b></p>\n<p data-pid=\"DL3ncBJs\">根据压强的定义，底部横截面所受到的压强为</p>\n<p data-pid=\"pve5DAVL\"><img src=\"https://www.zhihu.com/equation?tex=p%3D%5Cfrac%7B%5Crho+hSg%7D%7B2%5Cpi+r%5E2%7D%3D%5Cfrac%7B%5Crho+g%7D%7B2%5Cpi%7D%5Cfrac%7BSA%5E+2%7D%7Bh%7D\" alt=\"p=\\frac{\\rho hSg}{2\\pi r^2}=\\frac{\\rho g}{2\\pi}\\frac{SA^ 2}{h}\" eeimg=\"1\"></p>\n<p data-pid=\"0i1mGPFS\"><b>巨人的身体等比例增大时， <img src=\"https://www.zhihu.com/equation?tex=A\" alt=\"A\" eeimg=\"1\"> 为常数</b>， <img src=\"https://www.zhihu.com/equation?tex=S%5Cpropto+h%5E2\" alt=\"S\\propto h^2\" eeimg=\"1\"> ，所以 <img src=\"https://www.zhihu.com/equation?tex=p%5Cpropto+h\" alt=\"p\\propto h\" eeimg=\"1\"> 。这个比例关系与我们初中学到的压强公式 <img src=\"https://www.zhihu.com/equation?tex=p%3D%5Crho+g+h\" alt=\"p=\\rho g h\" eeimg=\"1\"> 本质上是一致的。<b>也就是说，巨人身高越大，其腿部承受的负荷就越大。</b></p>\n<p data-pid=\"0ClLW_xq\">换一个思路，我们将压强公式变换一下：</p>\n<p data-pid=\"Zrgc_F7K\"><img src=\"https://www.zhihu.com/equation?tex=p%3D%5Cfrac%7B%5Crho+hSg%7D%7B2%5Cpi+r%5E2%7D%3D%5Crho+g%5Cfrac%7BhS%7D%7B2%5Cpi+r%5E2%7D\" alt=\"p=\\frac{\\rho hSg}{2\\pi r^2}=\\rho g\\frac{hS}{2\\pi r^2}\" eeimg=\"1\"></p>\n<p data-pid=\"UuQdVYcK\">怎么理解呢？假定对于不同大小的巨人，它的<b>腿骨单位面积的承受能力是相同的话</b>， <img src=\"https://www.zhihu.com/equation?tex=p\" alt=\"p\" eeimg=\"1\"> 就是一个定值。那么<b>随着高度h的增大，身体平均截面积与腿骨截面积的比值就必然减小。</b></p>\n<p data-pid=\"XtXNrl7Q\">翻译一下就是，<b>越高的巨人，其腿骨相对于躯干就越粗。</b></p>\n<p data-pid=\"jm22Z_u_\">从下图我们也可以看到，60米的超大型巨人，50米的地鸣巨人，它们的腿部都<b>不成比例地粗壮</b>。而那个<b>超恶心</b>的罗德·雷斯巨人的腿较为纤细，势必无法支撑其体重，所以只能在地上爬行。</p>\n<p><img src=\"https://pica.zhimg.com/v2-10c7db6d6d8fbf9532473e93a05c8b1d_720w.jpg?source=b1748391?rss\" data-caption=\"《进击的巨人》中不同巨人的身材比例示意\" data-size=\"normal\" data-rawwidth=\"580\" data-rawheight=\"326\" data-watermark=\"watermark\" data-original-src=\"v2-10c7db6d6d8fbf9532473e93a05c8b1d\" data-watermark-src=\"v2-4f866ded0e80d2279c4bb5ec23833839\" data-private-watermark-src=\"v2-62abf53cd2e30793f76c79736279f1da\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-8aa642ae4ec75042b9583061e11cb849_720w.jpg?source=b1748391?rss\" data-caption=\"地鸣巨人\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"454\" data-watermark=\"watermark\" data-original-src=\"v2-8aa642ae4ec75042b9583061e11cb849\" data-watermark-src=\"v2-ac700f912282170f82fb23f5e654daae\" data-private-watermark-src=\"v2-58674abdc403c21e9c2170abd2959935\"></p>\n<p data-pid=\"FT0p1Uef\">在日常生活中，<b>用几何相似地放大（或缩小）的倍数去推论其后果，往往会带来错误的结果。</b>比如，猫咪从低楼层跌落可以安然无恙，不是因为猫有九条命，而是因为它们体型较小，<b>单位骨骼截面上承担的负荷比人类小得多。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-38935346a5d9112645ac43815c49dab9_720w.jpg?source=b1748391?rss\" data-caption=\"图源网络\" data-size=\"normal\" data-rawwidth=\"600\" data-rawheight=\"400\" data-watermark=\"watermark\" data-original-src=\"v2-38935346a5d9112645ac43815c49dab9\" data-watermark-src=\"v2-247acbb1d340124dde04976747beea0b\" data-private-watermark-src=\"v2-e6b07dbbd39a1e886038afbe13d65692\"></p>\n<p data-pid=\"AoKKVTiu\">物体的尺寸变化时，长度呈线性变化，面积呈平方变化，而体积呈立方变化。<b>对于体型较小的动物来说，同样比例的东西就会轻很多。</b>比如，蚂蚁凭借纤细的腿，可以举起一百倍于自己体重的负荷，而人类举起两倍于自己体重的东西就几乎已经是极限了。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-896849db9939d49297c874dc77825364_720w.jpg?source=b1748391?rss\" data-caption=\"祝贺军神\" data-size=\"normal\" data-rawwidth=\"557\" data-rawheight=\"378\" data-watermark=\"watermark\" data-original-src=\"v2-896849db9939d49297c874dc77825364\" data-watermark-src=\"v2-996840754548c0c6bfb1720b4d44636e\" data-private-watermark-src=\"v2-28106027cd7001fe53f0e51f9a49ecc4\"></p>\n<p data-pid=\"MRPTyEHM\">下面结合刚才的讨论，说几个有意思的现象。</p>\n<ul><li data-pid=\"YmHAwLci\"><b>为什么巨人的身体那么脆？</b></li></ul>\n<p data-pid=\"xvhOvgmo\">第一次看巨人的读者，都会有一个印象：巨人的身体非常“脆“。艾伦巨人、女巨人这种15米级的巨人搏斗时，四肢非常容易折断，而且是<b>直接脆断的那种断</b>。<b>这种情况在人类尺度的搏斗中是几乎不存在的。</b></p>\n<p data-pid=\"3GoyO9eK\">这就是因为这类巨人的身材比例与人类几乎相同，但身体增大了近十倍，所以即使密度有所减小，<b>其四肢横截面上单位面积所承受的动态负荷依然很大</b>，当然就非常容易折断。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-f0638ee39e9a73c5502b6e2a3e459268_720w.jpg?source=b1748391?rss\" data-caption=\"艾伦第一次巨人化\" data-size=\"normal\" data-rawwidth=\"2314\" data-rawheight=\"1274\" data-watermark=\"watermark\" data-original-src=\"v2-f0638ee39e9a73c5502b6e2a3e459268\" data-watermark-src=\"v2-6f6ff2254c8936d6d6917ce5f2a32a33\" data-private-watermark-src=\"v2-83695056c37dd277d77fc8ffba2ccca9\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-4f8d9bee77897e023b403cecf76386fe_720w.jpg?source=b1748391?rss\" data-caption=\"艾伦vs女巨人\" data-size=\"normal\" data-rawwidth=\"2332\" data-rawheight=\"1178\" data-watermark=\"watermark\" data-original-src=\"v2-4f8d9bee77897e023b403cecf76386fe\" data-watermark-src=\"v2-095c1af5fc50103649be839dbac9496c\" data-private-watermark-src=\"v2-84254d98f2dc2da0a0475c4669b34d76\" data-tags=\"porn\"></p>\n<ul><li data-pid=\"bY2EZ9Jd\"><b>为什么巨人的反应迟缓？</b></li></ul>\n<p data-pid=\"gNOLyo_l\">在玛利亚之墙保卫战的开始，莱纳被兵长刺穿脖子，由于抢先一步把意识送往全身，才捡回一命。我们从动画第一季中的“现在可能公开的情报”也可以看到，<b>巨人的神经系统和人类非常相似</b>，因此我们推算神经信号依然是依靠电脉冲与神经突触来传播。<b>人类大脑内的神经信号大部分是以约30m/s的速度传播</b>，这个速度对于人类的尺度来说已经足够快，但是<b>对于15米级、甚至60米级的超大型巨人来说，就是一个不小的时延。</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-da6255365313b8c2048d213e20a927d0_720w.jpg?source=b1748391?rss\" data-caption=\"迫害莱纳\" data-size=\"normal\" data-rawwidth=\"2324\" data-rawheight=\"1212\" data-watermark=\"watermark\" data-original-src=\"v2-da6255365313b8c2048d213e20a927d0\" data-watermark-src=\"v2-ded20efa96d20170a647a9780f7c7d4f\" data-private-watermark-src=\"v2-1fd9f1b70609bf3617837d0dc6a198aa\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-898efa963910bd95218d5146d5618409_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1438\" data-rawheight=\"718\" data-watermark=\"watermark\" data-original-src=\"v2-898efa963910bd95218d5146d5618409\" data-watermark-src=\"v2-b4ffb41d2446d349b7256df814c4e83e\" data-private-watermark-src=\"v2-545c052f948578756bd356033106ac0f\"></p>\n<p data-pid=\"bJ-v-gLd\">最后，总结一下吧。</p>\n<h3><b>你看，谏山老师就总是这样。</b></h3>\n<p data-pid=\"XF8Yizg5\">你看到他对巨人身材比例的设定，惊叹于他超懂物理，结果，他让几十米的巨人飞起来了。</p>\n<p data-pid=\"sZF3m5fe\">你看到他布下草蛇灰线，惊叹于他不世出的编剧能力，结果，他画了一个有巨大争议的结局。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-ff38d9c1f1393c845c9b26b42e06413f_720w.jpg?source=b1748391?rss\" data-caption=\"那种事情不要啊！\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"324\" data-watermark=\"watermark\" data-original-src=\"v2-ff38d9c1f1393c845c9b26b42e06413f\" data-watermark-src=\"v2-f27f65b406491b56cd43746808fba9c6\" data-private-watermark-src=\"v2-6d856605f9ced6faed82de5af9210e55\"></p>\n<p data-pid=\"TdyiQeZn\"><b>相关回答：</b></p>\n<a href=\"https://www.zhihu.com/question/523295110/answer/2404884808\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-8ba5f0d19445d5266567431c5e18b9c3_qhd.jpg?source=b1748391\" data-image-width=\"1818\" data-image-height=\"1440\" class=\"internal\">《进击的巨人》中法尔科的颚之巨人真的能飞起来吗？</a><a data-draft-node=\"block\" data-draft-type=\"ad-link-card\" data-ad-id=\"fee_00c3f6bb68825344a7a8d80bfcbbe081\"></a><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/question/523798811/answer/2407852679?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\">知乎用户（登录查看详情）</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>延伸阅读：<br><a href=\"http://www.zhihu.com/question/332647162?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">进击的巨人、超大型巨人和铠之巨人，哪一个更有用？</a><br><a href=\"http://www.zhihu.com/question/341302348?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如果你是作者，会怎样写《进击的巨人》结局?</a><br>\n","link":"http://www.zhihu.com/question/523798811/answer/2407852679?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"你的输入法，原来也可以当作效率和知识管理工具？","date":"2022-03-26 03:31:18","description":"其实，不管是输入字词还是输入符号，核心要义就是通过自定义的方式，将我们常用、惯用的各种内容同输入法预设的排布分离开来， 而这也就是之前一直所说的「排除干扰、流畅输入」。<a href=\"https://sspai.com/post/71703\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/71703"},{"title":"什么是汽车HMI设计？未来的发展方向是什么样的？","date":"2022-03-25 10:07:09","description":"\n<p data-pid=\"tsdongAU\">首先跟大家推荐一下我的知乎专栏，这两个专栏应该是全网最全的关于汽车HMI的内容平台了，大家如果想迅速了解汽车HMI，可以关注下。</p>\n<a href=\"https://www.zhihu.com/column/automotiveHMI\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-33c576c892c63ea300332acdb69b32ed_l.jpg?source=b1748391\" data-image-width=\"300\" data-image-height=\"300\" class=\"internal\">汽车HMI</a><a href=\"https://www.zhihu.com/column/automotiveUXD\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic3.zhimg.com/v2-b85557d4398a87cf2357fa5d43fc4ba5_l.jpg?source=b1748391\" data-image-width=\"197\" data-image-height=\"197\" class=\"internal\">智能座舱用户体验设计</a><h2>\n<br><b>关于定义</b>\n</h2>\n<p data-pid=\"CukuhHO8\"><b>HMI即人机交互，人机交互的本质就是人与机器之间互动反馈的过程。</b><br>HMI全称是Human Machine Interface （Interaction），狭义的汽车HMI设计主要是界面设计（interface），更多强调的是系统和用户之间进行交互和信息交换的媒介， 比如说中控屏、数字仪表还有语音交互，关注的是信息在不同媒介之前的信息流转，包括中控的布局、按钮、仪表的显示及语音交互界面设计等，广义的交互（interaction）更加宏观，更加强调不同技术、不同媒介、不同座舱布局等宏观信息给用户带来的主观感受，侧重的是人与自动驾驶系统、人与车机界面、人与其他车内硬件的交互体验。</p>\n<p><img src=\"https://pica.zhimg.com/v2-4be9b68b379043fb7ba655ef65e724d6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"361\" data-watermark=\"watermark\" data-original-src=\"v2-4be9b68b379043fb7ba655ef65e724d6\" data-watermark-src=\"v2-c24c1c97ef49c409eda7592365cb07cf\" data-private-watermark-src=\"v2-23a23f94ada313006b771e0e73d7f541\"></p>\n<p data-pid=\"_lmmsd6d\">HMI 并不新。上世纪八九十年代，普通车辆能够执行的功能数量正在迅速增加，设计人员的任务之一是提供允许驾驶员管理新功能的控件，一个具有动态内容的屏幕出现，这个系统的设计灵感来自飞机。</p>\n<p><img src=\"https://pica.zhimg.com/v2-a1af97057cd1a329c014808a82caafb3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"960\" data-rawheight=\"464\" data-watermark=\"watermark\" data-original-src=\"v2-a1af97057cd1a329c014808a82caafb3\" data-watermark-src=\"v2-b93bf5ad8b56514c131938048c0ab4e2\" data-private-watermark-src=\"v2-86e4390fd73589fa752806981aa4681f\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-baa700a1c0a4ea24623ca0c043b59268_720w.jpg?source=b1748391?rss\" data-caption=\"1986 年别克 Riviera HMI \" data-size=\"normal\" data-rawwidth=\"960\" data-rawheight=\"601\" data-watermark=\"watermark\" data-original-src=\"v2-baa700a1c0a4ea24623ca0c043b59268\" data-watermark-src=\"v2-2942d9941c902fd943fc5615811f5205\" data-private-watermark-src=\"v2-72d00635f1a8f844f17ce9669fa39840\"></p>\n<p data-pid=\"Pji3sQT_\">日产在 1985 年推出了 CUE-X 概念车，该系统提供带有图形界面的彩色触摸屏，功能控件的设计和位置与现代车辆非常相似，非常超前。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-dc6f6b956c68f14790a15f66aa8d0f01_720w.jpg?source=b1748391?rss\" data-caption=\"日产汽车\" data-size=\"normal\" data-rawwidth=\"960\" data-rawheight=\"720\" data-watermark=\"watermark\" data-original-src=\"v2-dc6f6b956c68f14790a15f66aa8d0f01\" data-watermark-src=\"v2-a98cc331903eddf85f127a544241bca5\" data-private-watermark-src=\"v2-06fdc0c70e053f985d8eb3024800567f\"></p>\n<p data-pid=\"2pqNJJBY\">接下来就是Tesla Model 3，标志性意义的中控设计，成为汽车业内一个颠覆式创新。采用极简的内饰设计，精简了物理按键，甚至连仪表都不复存在，所有的一切控制都集中在中控大屏上，也引领了电动汽车的HMI设计，目前来看无出其右。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-10d63592070eb74934c1b2bf4268acd1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"960\" data-rawheight=\"720\" data-watermark=\"watermark\" data-original-src=\"v2-10d63592070eb74934c1b2bf4268acd1\" data-watermark-src=\"v2-a757ed37ac37c789bc0a1d47409843d9\" data-private-watermark-src=\"v2-b36a0ff8bac656ab9ef76e73839ec2dd\"></p>\n<h3>\n<br>汽车HMI设计的流程/设计范畴/设计原则等</h3>\n<p data-pid=\"15uDDPYf\">目前主机厂的HMI设计已经相对成熟，一个基础的共识是：<b>HMI设计需要车企内部跨部门合作</b>，以交叉的形式来完成，通常会有一到两个部门牵头组建HMI设计团队，比如造型部门，比如软件部门。或者整车集成部门，通过项目的形式进行HMI的设计和开发工作。<a href=\"https://www.zhihu.com/search?q=%E5%B8%82%E5%9C%BA%E9%94%80%E5%94%AE&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A547687723%7D\" class=\"internal\">市场销售</a>部提供市场的用户画像，电子电气和软件工程部负责交互底层的软件及编程实现，设计或整车集成部提供完整的UX/UI设计内容，每一个HMI设计背后都有多个部门的协同开发。<br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-b82f3c3582b1e0ddbe58941c3b08d519_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"886\" data-rawheight=\"667\" data-watermark=\"watermark\" data-original-src=\"v2-b82f3c3582b1e0ddbe58941c3b08d519\" data-watermark-src=\"v2-6e0ceb37735987311df2585c8668a63b\" data-private-watermark-src=\"v2-78d88e330483458c33aa622d3aee81bc\"></p>\n<h3>以人为中心的HMI设计</h3>\n<ul>\n<li data-pid=\"04iYJ6ut\">\n<b>安全仍是第一目标：</b>HMI界面的设计上，最重要的考虑仍是安全因素，信息的布局、色彩、图标的呈现都为了让用户更快地理解信息并完成交互，而不是视觉上的美化。</li>\n<li data-pid=\"HqSluPMc\">\n<b>清晰的视觉对比：</b>清晰的色彩对比、适当的字体设计有助于用户快速地完成操作，避免视觉注意力长时间停留引起安全隐患。</li>\n<li data-pid=\"gfbKGvE8\">\n<b>一眼就懂的界面：</b>不要让用户思考，直接呈现最关键的信息。</li>\n<li data-pid=\"PQ0Dq0Yo\">\n<b>设计的一致性：</b>仪表、中控及整个车机的HMI设计风格、色彩</li>\n</ul>\n<p data-pid=\"SnUqZRLS\">部分国产品牌车载大屏设计同质化现象严重，提前进入了类似移动端更换主题的换肤时代，车载大屏视觉和交互设计，如何在体现品牌价值和商业价值同时，最大化保证驾驶安全，是每位汽车HMI设计师思考的问题。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-b52edcce2be4241f602d2ea0ae49c98f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"345\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h3><b>视觉设计原则</b></h3>\n<p data-pid=\"npy2SCCh\">全自动驾驶来临之前，人依旧是驾驶过程当中的主要操控者，驾驶仍是一项复杂的信息处理过程。为了确保驾驶安全，提高驾驶者的信息获取效率，在视觉界面的设计中，设计师格外需要注意与安全相关信息的展示、视觉警告、文字易读性和显示眩光等视觉显示问题。同时，随着自动驾驶等级的发展，汽车驾舱的设计逐渐加重了数字化和智能化的比重，新的视觉设计关注点和之前忽视的视觉设计点开始成为讨论的焦点。</p>\n<h3><b>1. 视觉显示</b></h3>\n<p data-pid=\"o6gc7YdE\">视觉形态在驾驶任务中占有重要的地位，并且为各种不同的感官维度服务。例如颜色、亮度和对比度，又比如刺激维度，如位置、尺寸、形状和周期性 (例如，闪光)。此外，视觉是用于呈现内容信息的通道，因此对于涉及语义内容的消息来说是最合适的信息呈现方式。</p>\n<p data-pid=\"ZB1iKAbJ\"><b>文字和易读文本特征</b></p>\n<p data-pid=\"X0fRIJIE\">在对超宽一体屏使用文本时要考虑的关键性因素是：将文本的字数保持在最低限度，尽可能的避免出现成段的文字信息，以此来保证信息的可读性。一般而言， 汽车仪表与驾驶者的距离在60cm-85cm之间，仪表屏物理尺寸也各有不同，在仪表盘设计中字体有着举足轻重的作用。所以在设计中仪表上的重要信息一定要以足够清晰的大小显示，不可虚化或混淆。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-9a458095aa3e7fda780d49c361888ef9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"888\" data-rawheight=\"546\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"0QfV5pyE\"><b>显示眩光和颜色选择关系</b></p>\n<p data-pid=\"bovw7aoJ\">大量的汽车用户界面都选择了深色背景，是因为它们不那么分散注意力并能够减少眩光。实际上大多数汽车用户界面都选择了深灰色、深蓝作为背景色，因为深黑色对于较浅的像素来说对比度过高，而对比度较高的文本会导致用户的阅读困难。</p>\n<p data-pid=\"kSr_MU9m\">在汽车制造业逐渐智能化的今天，汽车驾舱的视觉设计中加入了主题选择功能，设计师为用户提供更多的选择和个性化的定制。但万变不离其宗的是，为了减少显示眩光，让用户以最便捷迅速的方式获取信息，用户界面颜色的最佳选择范围永远在深色上。</p>\n<p data-pid=\"r8m_YnJb\"><b>安全相关信息的可视化类型</b></p>\n<p data-pid=\"W6DLp2io\">超宽一体屏的仪表区域依然可用于传递警告和其他信息。在仪表区域的视觉设计中，要考虑存在大量潜在的信息需要传达，包括与其他车辆位置或状态有关的安全警告；道路危险，如迫在眉睫的弯道或合并情况；以及驾驶性能，如燃油效率。选择信息呈现方式主要考虑的因素是信息内容类型。</p>\n<ul>\n<li data-pid=\"K8WHJqvS\">连续性或带有等级的图标，可以用持续增强或减弱的递进式传达，例如崩溃警告信息或进展信息。</li>\n<li data-pid=\"Yk7-kA6V\">符号或简单图标可以增强对信息的理解，不需要解释说明，适用于单一状态信息。</li>\n<li data-pid=\"2EHIfjiK\">空间维度信息适合于用地图的形式展现，凸显交叉口和车道变化或合线警告。</li>\n<li data-pid=\"M9flb1fZ\">具象化图标可用于向司机提供有关车辆系统或状态的功能状态的信息。</li>\n</ul>\n<p><img src=\"https://pic1.zhimg.com/v2-b435a7bf03a6a9147841106adca8fcc4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\"></p>\n<p data-pid=\"_qqNAcF9\"><b>基于新技术的视觉呈现设计</b></p>\n<p data-pid=\"hcUi8D_R\">随着车联网和智能科技的发展，车与社会上所有不同角色之间的联系也将愈加复杂，这当中的角色再也不仅仅局限在人，车也会和车，甚至周边环境产生联系。为了顺应未来数字化智能驾舱的发展，在视觉呈现设计上，需要考虑新技术带来的更多样的表达形式。当视觉设计与新型智能科技达到完美融合的时候，超宽一体屏才能带给驾驶者更好的用户体验与服务。</p>\n<p><img src=\"https://pica.zhimg.com/v2-04f35fa2f2d363aa90904212142c1e4d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"570\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h3><b>2. 品牌化设计</b></h3>\n<p data-pid=\"tF_dAxS_\">品牌是车辆和驾驶体验的重要组成部分。但这个概念在人机交互界面中被忽略了。在汽车的其他地方才能体现出品牌DNA，例如，在判断一辆跑车出自哪个品牌时，主要的判断依据是LOGO、 车身形状和内部工艺水平。人机交互界面作为用户与品牌的主要接触点之一，对于糟糕的体验与混乱的一致性并不会为品牌和驾驶者带来利益。设计师有责任在品牌展示与和成熟的设计间找到微妙的平衡，在人机交互界面中展现出品牌的特色。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-cff9219b1bcd020c5a2a96f0fd217c5d_720w.jpg?source=b1748391?rss\" data-caption=\"奔驰MBUX系统\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"457\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h3><b>3. 基于自动驾驶的视觉呈现设计</b></h3>\n<p data-pid=\"CzHU25xT\">自动驾驶阶段中，由于双手与注意力都得到解放，将大大增加驾驶者的空闲时间。驾驶者变成普通乘客后，将在互联设备上花费更多时间，除了考虑到乘客会在视频、音乐等的内容诉求，还需要考虑到乘客会享受前所未有的沉浸式体验，如学习、互动社交、互动游戏等等。</p>\n<p data-pid=\"w2v_mgpG\">针对不同种类的用户群体和车型，产生了各种多样化的需求，未来超宽一体屏的视觉呈现方向分为各大类型：娱乐型、商务办公型、家庭关怀型等。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-0cdef9cf8898dbdb6d14f0d4f35b59db_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"749\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h3><b>交互方式的设计原则</b></h3>\n<p data-pid=\"-DGev0dh\">在对超宽一体屏驾舱的人机交互进行讨论时，需要从硬件和软件这两个维度上去考虑。硬件方面，布局和多种操作方式是被着重考虑的；而软件方面，系统框架、操作反馈以及信息提示（尤其是安全相关信息）是重点考虑对象。此外，针对未来智能化驾舱，在屏幕的设计中还需要考虑到个性化等用户体验设计元素。</p>\n<p data-pid=\"utcvscbd\"><b>1. 布局合理性</b></p>\n<p data-pid=\"Tdlwi4_P\">在对超宽一体屏的驾舱的人机交互进行讨论时，需要从硬件和软件这两个维度上去考虑。</p>\n<p data-pid=\"32VBiMTV\">首先是一体屏这个硬件的的安装位置。从人体生物原理的角度进行分析，人单眼的水平视角最大可达156度，双眼的水平视角最大可达188度。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-bc9ea1acf764888db43576f88d8a27d3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"988\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"IypLvpuu\">1.人眼能够看到一个超过180度鱼眼镜头的188度环形平面，类似于近期比较流行的环形电影屏幕。</p>\n<p data-pid=\"rk1x1eE7\">2.人两眼重合视域有124度，并且只有这124度两眼重合视域内观看到的物体才有立体感。</p>\n<p data-pid=\"W4qV0gyG\">3.单眼舒适视区域为60度。是指单眼的60度范围内的物体能够看清楚，人眼才能够聚焦，而超过水平方向视野角30度的周边部分称为诱导视野，俗称眼睛的余光，在人眼并不敏感的范围，人是无法看清楚的。</p>\n<p data-pid=\"R1q-sBJD\">4.人视觉在10度是敏感区，10 ～20度可以正确识别信息，20～30度对动态东西比较敏感。当图像的垂直方向视角为20度，水平方向的视角为36度时，就会有非常好的视觉临场感，而且也不因为频繁转动眼球造成疲倦。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-2b2f0b6cde61415c79d56111bfa2be3c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"981\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"_CtWBXz3\">为此，屏幕的安装位置应该是符合人体工程学的，在手动驾驶的场景下能够给与驾驶者最优的视线范围，帮助其在驾驶时以最合适的角度获取相应的驾驶信息。</p>\n<p data-pid=\"EIL166r8\"><b>2. 架构合理性</b></p>\n<p data-pid=\"aqDDXESC\">伴随着自动驾驶的发展，驾驶者在车舱内的多样丰富的需求得到了满足，与其同时，大量的信息数据也由此产生，信息过载会使驾驶人的认知能力下降，从而实质上导致驾驶安全性降低。为此，生态人机界面的设计要考虑到驾驶人的状态意识，建立符合人机交互、人机共生的驾驶作业界面。</p>\n<p data-pid=\"Vxh33FwS\">第二类，自适应功能分配：考虑的是“谁在什么时候该做什么”的策略，是动态的功能分配。因为交通运行随时间变化，驾驶行为将会因为心理和生理原因逐渐变差，为保证车辆行驶安全，有必要对人机功能动态地进行再分配。第三类，生态功能分配：考虑的是“谁在什么时候做什么，该怎么做”的策略，是动态的、智能化的、实时的功能分配。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-cbf07386b3d9448b225ab42101d94f5a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"292\" data-watermark=\"watermark\" data-original-src=\"v2-cbf07386b3d9448b225ab42101d94f5a\" data-watermark-src=\"v2-0400938ea6e44efffb82712a1334a067\" data-private-watermark-src=\"v2-14153d42148cbd89fa9d6e99bede5e43\"></p>\n<p data-pid=\"qNwwmpk0\">据数据显示，人们对一个手眼合作活动的期望反馈时间是100毫秒，对一个因果关系（比如单击一个按钮然后发生某事）的期望反馈时间是1秒，他们对任何反馈时间为5秒以上的事都会觉得沮丧和困惑。由此看出，重要的反馈，层级应该放在最高优秀级的位置上，以方便驾驶者及时作出反馈，减少交通安全事故。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-9fd316c1b0af16b83d24d8b91698c48d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1054\" data-rawheight=\"576\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"aa7eVWYS\"><b>3. 消息特征和安全信息</b></p>\n<p data-pid=\"XSYnvJzc\">增强消息可理解性对驾驶者的意义重大，理解是指驾驶者通过DVI（Digital Visual Interface）所给出的车辆信息含义的感知和认知过程。驾驶者正确快速地回应即时性关键信息的能力在很大程度上取决于他们理解信息含义的速度。</p>\n<p data-pid=\"aPDoBXB4\">消息理解有三个阶段：提取，识别和解释</p>\n<p><img src=\"https://pic2.zhimg.com/v2-4407018ba269d02f563868fb319a2b81_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"568\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"dPLGa10A\"><b>消息复杂性</b></p>\n<p data-pid=\"rlx-GeUm\">DVI消息中的复杂性通常是指消息中提供的信息量，但也包括如何让驾驶者使用信息，以及信息对驾驶者的价值。大体而言，向驱动程序提供过于复杂的DVI消息的后果可能包括：中断驾驶任务的注意力、增加眼睛越野时间、增加驾驶者工作量和可能分心，以及增加对关键道路事件的响应时间。</p>\n<p data-pid=\"vS3cQNEA\">视觉信息的复杂性：增加DVI信息的复杂性会增加认知需求。</p>\n<p data-pid=\"eS6BHaPH\"><b>可视消息最适合呈现非安全关键的更复杂信息，不需要立即采取行动，可用于：</b></p>\n<ul>\n<li data-pid=\"wHNgCnub\">提供连续（不间断地呈现旅行段，旅行或甚至更长时间段内的信息）低优先级信息，例如导航相关或警示信息。</li>\n<li data-pid=\"j7vh5e71\">提供空间信息。在这方面，平视显示器（HUD）和高头显示器（HHDD）也具有呈现关键信息的潜力，特别是如果消息具有空间分量（例如，相对于驾驶者车辆的空间位置）。</li>\n<li data-pid=\"WLfKZjPt\">提供主要听觉或触觉信息附带的冗余或补充信息。</li>\n<li data-pid=\"QBX_B9ls\">在合理预期驾驶者能够看到视觉警告的情况下提供主要警告信息，作为常规信息获取过程的一部分（例如，在后视镜和侧视镜上或在A柱上呈现的LCW系统的视觉即将发生的碰撞警告）。</li>\n</ul>\n<p data-pid=\"PY7xVHAk\"><b>听觉消息能够快速捕获驾驶者的注意力，并可用于：</b></p>\n<ul>\n<li data-pid=\"t_d6dAlv\">提供简短，简单的消息，需要快速或立即采取行动。</li>\n<li data-pid=\"VlbndzaZ\">提出高优先级警报和警告（例如即将发生的碰撞警告）;在这种情况下，可以结合使用</li>\n<li data-pid=\"NSDR0qTL\">视觉（或触觉）消息为驾驶者提供冗余提示。</li>\n<li data-pid=\"y_mpuWtj\">在驾驶者可能分心或远离视觉的情况下向驾驶者提供重要信息显示（注意：这也可能适用于触觉消息）。</li>\n<li data-pid=\"u3e9U64x\">直接关注潜在碰撞威胁的位置。</li>\n<li data-pid=\"myPkG2s7\">表示系统故障或限制的开始。</li>\n<li data-pid=\"5XS0WzsU\">在非时间紧急的情况下增加视觉警告。</li>\n</ul>\n<p><img src=\"https://pic3.zhimg.com/v2-21cbafeb8de34ba9b8bd81816a46436e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"720\" data-rawheight=\"440\" data-watermark=\"watermark\" data-original-src=\"v2-21cbafeb8de34ba9b8bd81816a46436e\" data-watermark-src=\"v2-5291c030c84ab447b09795958bea0ac3\" data-private-watermark-src=\"v2-36739c8de6327049122cf01faada1808\"></p>\n<p data-pid=\"8Ef3VlVN\"><b>触觉消息能够快速捕获驾驶者的注意力，并且可以在以下情况下使用：</b></p>\n<ul>\n<li data-pid=\"4gYYcYjH\">听觉信息不太可能有效（例如，如果驾驶者的听觉工作量过大，如果听觉警告是广泛用于另一个CWS设备，或者如果环境噪声太高）。</li>\n<li data-pid=\"bm5eHGNo\">驾驶者可能与触觉反馈源接触（例如，驾驶者通常会感觉到座椅振动，但他们可能没有感觉到加速踏板反馈）。</li>\n<li data-pid=\"CHRQCuMk\">关于各种类型的驾驶信息和信号的视觉和听觉模式的选择已经写了很多。许多作者依赖于Deatherage的原始作品，他为协助设计师完成这项任务制定了一系列有用的规则。下表列出了Deatherage的原始八条规则，为选择听觉和视觉模式演示提供指导。</li>\n<li data-pid=\"VxHhmWZW\">选择听觉与视觉显示模式的一般规则。</li>\n</ul>\n<p><img src=\"https://pic2.zhimg.com/v2-fc70af163c6f9d08ec67c8d0983b4d33_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"539\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"UzX7-G0V\"><br></p>\n<h2>汽车HMI的未来发展方向</h2>\n<p data-pid=\"XNVjPYGM\">下一个十年，更多数字化技术将会完美融入到智能座舱的HMI设计中，智能座舱也势会以更全新的形式呈现出来！</p>\n<h3>01 <b>从被动到主动的交互模式</b>\n</h3>\n<p data-pid=\"M_EqMQgh\">真实驾驶场景中，驾驶者视线与双手被驾驶任务占据，但驾驶员拥有与外界交互的需求，在人车交互体系中，驾驶员的核心注意力一定是被“开车”这件事占据的。所以，驾驶人员和车机系统进行“沉浸式”的交互短时间内并不现实。</p>\n<p data-pid=\"VITYmEM6\">除了注意力这种无形的交互限制外，驾驶人员的双手和视线两个重要的交互通道也被占用了。驾驶员可以偶尔单手操作，但可交互的距离被限制在了臂长范围内，同时，由于路面可能会颠簸、单手操作时的肘部是悬空的，这些都会导致操控的精准度下降。</p>\n<p><img src=\"https://pica.zhimg.com/v2-ab35be65a7206d24d47ff9150352bcbb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"630\" data-rawheight=\"355\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"08jq2H9b\">而另一方面，驾驶员的视线无法离开路面超过3秒，尤其是在高速驾驶的场景下，1秒钟内汽车的移动距离最高可达30多米，眨眼间，可能就会造成惨剧。</p>\n<p data-pid=\"QBQzz16R\">但是，人们其实很难在驾驶过程中老老实实的，双手握好方向盘，视线紧盯路面，别的什么都不做。但用户在开车时会做很多事情，比如看看路况、听听音乐、和朋友聊聊天，甚至下班的路上顺便定个外卖，到家刚好能吃上。</p>\n<p data-pid=\"hvkafHYn\">在这个数字化的智能时代，我们不可能让驾驶人员一坐进车里就突然断掉与外界的一切沟通，不去处理任何生活和工作的相关信息，只做开车这一件事。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-43c978afc311619c374c52676754c797_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\"></p>\n<p data-pid=\"8gnYYyNh\">结合前面说的驾驶场景下的交互特点，就会发现被动式交互是不适合在车内使用的。</p>\n<p data-pid=\"1C1ivoMc\"><b>用户需要发起和推进每一个节点，这样会导致视线需要频繁从路面上移开，不仅带来不安全的隐患，整个过程也是非常低效的。</b>汽车能不能在我需要的时候主动的把对应的服务放到我面前，而不再需要我在开车时手忙脚乱的去找。这样美好的体验设想，就是“主动式交互”。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-69a54ac355dc72a8ca3ce127ec0f32bb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\"></p>\n<p data-pid=\"tH_oYnBd\">主动式交互特点：</p>\n<p data-pid=\"DWOg1c7z\"><b>智能化：</b>随着技术，硬件和成本的发展，车里会越来越智能，智能化对交互方式影响是机器会增加担任主动输入的能力，所以随着车越来越智能化，车主在输入方面投入加少，效率更快。</p>\n<p data-pid=\"9mymxHRh\"><b>自动化：</b>随着自动驾驶的技术越来越成熟和普及，车主会逐渐释放注意力资源和手眼，可以更多投入车舱更多的娱乐操作当中。也会导致在输入输出反馈中更好利用视觉反馈。</p>\n<p data-pid=\"Yf6IvC2H\"><b>电子化：</b>去掉实体控件，科技感，简化内饰，降低成本，变成一种趋势。但是无论是触摸屏还是语音，都没有办法完美取代实体控件交互。然而，趋势仍然是站在触摸屏这边的。所以这也导致在车舱里交互的变化。</p>\n<p data-pid=\"BQupYhkj\">我们把车舱交互阶段抽象归纳为3个阶段进程，<b>用户主动式交互---机器建议式交互---机器主动式交互。</b>我们目前处于用户主动式交互到机器建议式交互到过渡期。而我们能推理出用户输入，机器输出/反馈和场景信息采集在这3个阶段进程里的趋势。</p>\n<h3><b>多模态交互</b></h3>\n<p data-pid=\"RhJa8EXN\">随着科技发展和车主的期望，车内外的信息和功能越来越多，作为HMI设计师的任务就是让车主减少注意力资源占用，减少驾驶分神，所以交互方式由此产生阶段性变化：<b>物理旋钮/按键——数字触屏——语音控制——多模态交互。</b></p>\n<p data-pid=\"O20eZ2xg\">车内信息和功能随着越来越多，物理旋钮/按键的交互方式已经满足不了内容的扩展，数字界面由此在车内出现。但是当网联化后，娱乐信息成为了车内一大内容，数字界面的弊端也逐渐暴露出来了。界面层级导致操作效率的下降，而数字组件控件虽然解决了空间，成本，扩展迭代的问题，但是同时也<b>缺失了物理旋钮/按键原本的触感反馈，易定位性及效率精细操作等优势</b>，一定程度上影响到驾驶安全。</p>\n<p><img src=\"https://pica.zhimg.com/v2-d4e6279f1e8073bb4063f494f4a399bf_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\"></p>\n<p data-pid=\"MyxyAxbJ\">未来，车里还可以准确地识别人脸更多细节信息，如<b>表情，微表情，精神状态</b>（是否疲劳，是否专注），视线注意等，以判断人的情绪，疲劳状态，专注度等，并在情感互动，疲劳驾驶预警，专注力监测与应对等场景发挥作用。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-56f0405758d57733634006588acc05f0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-7b550e9fef51db13bb18a5e75329dd7f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\"></p>\n<h3>03 <b>智能互联，多场景衔接</b>\n</h3>\n<p data-pid=\"mmw2KXz4\">未来，将会打破单车智能的孤岛效应，形成一个互联智能场景。在此场景下，设备之间将互联互通，场景直接实现无缝衔接：一种情况是一个大脑（中控）连接并控制多个终端，例如通过智能中控，控制家里空调，窗帘等等。通过设备互通，场景融合，形成数据交互，共享的崭新智慧生态，共同提升人们的生活品质。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-069b09f8f2bb5b8cff8c4e9776cc8d05_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"604\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"L3rLy8rH\">多终端协同，车辆调度形成体系，提高出行效率，通过大规模精准的车辆调度运营，实现出行需求和供给的高效匹配，提高车辆和城市道路资源的利用率。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-0fe869a3ff22830925f2b6f8cbf2835c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"880\" data-rawheight=\"550\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h3>04 <b>AR-HUD等新兴交互技术的成熟与普及</b>\n</h3>\n<p data-pid=\"DiLeKTkW\">在未来三年内有量产基础的八项交互新技术中，AR-hud、智能机器人、智能表面、空中手势等技术正在逐渐成熟。HUD抬头显示中，可以有效发挥车载AR在智能车舱中的应用价值。</p>\n<p data-pid=\"NXZ_DGg8\">不同用户如单一用户或多用户如驾驶员、副驾驶、车内乘客，针对不同的信息内容维度：安全、导航、车辆监控、娱乐交流工作等，在不同的驾驶模式下等都呈现出非常大的设计空间。分享相应的内容到HUD屏幕上，通过AR地图导航技术叠加眼动跟踪技术，可以让驾驶员体验到更加逼真的导航服务。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c9ca53e230c13dc8404f7bf39debe763_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"896\" data-rawheight=\"462\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h3><b>总结：</b></h3>\n<p data-pid=\"MpVF-k5A\">随着5G和车联网技术的发展，科技与智能，正在重新定义未来智能座舱HMI新体验。更多HMI的趋势、方向、设计及技术探讨，请关注：</p>\n<a href=\"https://zhuanlan.zhihu.com/p/71071750\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-4920b8ca85296bad6613a2ccab3e4f99_qhd.jpg?source=b1748391\" data-image-width=\"1831\" data-image-height=\"1080\" class=\"internal\">王亚辉：车载大屏进入换肤时代，视觉和交互设计如何突破？</a><a href=\"https://zhuanlan.zhihu.com/p/69575723\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-218286414ab518afee04ea891143b6c6_qhd.jpg?source=b1748391\" data-image-width=\"1920\" data-image-height=\"1041\" class=\"internal\">王亚辉：场景驱动的汽车HMI设计策略</a><a href=\"https://zhuanlan.zhihu.com/p/141339932\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-ccc4d8abec25a24fc6638c5191892bdc_qhd.jpg?source=b1748391\" data-image-width=\"720\" data-image-height=\"271\" class=\"internal\">王亚辉：智能座舱里最理想的交互体系是什么？</a><hr>\n<p data-pid=\"K5NzOHfs\"><b>我是<a href=\"https://www.zhihu.com/people/wyhdesign\" class=\"internal\">王亚辉</a>，清华大学汽车人机交互方向博士后，高校副研究员，也是汽车技术公司产品创新总监，如果你对智能座舱、自动驾驶、汽车用户体验感兴趣，请关注我。</b></p>\n<p data-pid=\"O819cvkV\"><b>另欢迎对汽车人因学、汽车HMI、Human-AI Interaction感兴趣的同学报考研究生。</b></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wyhdesign?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">王亚辉</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/515370941/answer/2406910588?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">1 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/507654327?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如果汽车可以自动避免各种事故，是不是就没事了？</a><br><a href=\"http://www.zhihu.com/question/452481907?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如果未来汽车可以作为我们的宠物，你觉得它们最接近于现在哪一种宠物?</a><br>\n","link":"http://www.zhihu.com/question/515370941/answer/2406910588?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"格式错误挥之即去，中英留白呼之即来——Markdown 检查器入门","date":"2022-03-25 10:00:59","description":"会写 Markdown 的人很多，但写得好 Markdown 的人却很少。有没有什么工具能充当「秘书」，检查文件中的 Markdown 语法和风格，并且提出解决方案、自动修复问题，甚至自动补齐中英文之间的「盘古之白」呢？本文介绍的 Markdown 语法检查器（linter）就能做到。<p>[......]</p>\n<a href=\"https://sspai.com/prime/story/markdown-linter-a-primer\" target=\"_blank\">查看全文</a><p>本文为会员文章，出自<a href=\"https://sspai.com/prime/precog/single\" target=\"_blank\">《单篇文章》</a>，订阅后可阅读全文。</p>\n","link":"https://sspai.com/prime/story/markdown-linter-a-primer"},{"title":"如何评价任天堂 Switch 独占游戏《星之卡比 探索发现》？","date":"2022-03-25 06:41:21","description":"\n<p data-pid=\"5VFqs0Ig\">卡比在 NS 平台的全新 3D 平台冒险游戏《<b><i>星之卡比 探索发现</i></b>》中回归。在这款游戏里，卡比被传送到了另一个世界，远离他的家乡波普之星，来到一片看起来很像地球的区域（至少在前期关卡里是这样）。<b>以下是 Game Informer 早前的游戏前瞻内容：</b></p>\n<p data-pid=\"0_gIE9eq\">在这片名义上的「遗忘之地」里，卡比必须用上他全部珍贵的复制能力以及一些新技能（例如造梗无数的「塞满嘴」变身形态），在陌生的环境中探索生存。本周，我有幸能亲身试玩这款游戏的第一世界，内容类似于 Switch 用户可从任天堂 eShop 里下载到的新 Demo 版本。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-f3d4a503dd2cf31d49e5ba2e7ffcacab_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1219\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"XmnXOCMS\">卡比来到这个充满后启示录风格的世界里，尽管文明的完全缺失有些细思极恐，但风景依然令人感到赏心悦目。我可以游玩整个第一世界，里头有一块被称为「草原建筑」的杂草丛生的荒废都市区域。</p>\n<p data-pid=\"aYxsKq_D\">尽管建筑和街道都年久失修，但在城镇和购物中心等关卡里仍然存在着大量生命迹象。苔藓、藤蔓和青草侵蚀了大片的钢筋水泥，而曾经打造这些建筑或生活其中的人们，则被可爱的狗狗敌人所取代。许多墙壁和街道都脆弱开裂，有充分的空间让卡比去撞塌或凿开，从而发现隐藏区域和神秘道具。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-e38b6b8b4a972d2f8923be1f997cb574_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"450\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"-sJfKQWh\">虽然这款全新的卡比冒险游戏突破了本系列的 2D 传统，选择了 3D 场景塑造，但它玩起来更像是《超级马力欧 3D 世界》，而非《超级马力欧：奥德赛》。卡比的基础动作和以往差不多，可以跑、跳或给自己充气升到空中，抵达更高更远的区域。当然，卡比依旧可以通过吸入和吐出对其他敌人造成伤害，游戏中过关斩将的方式本质上是线性的，从头到尾引导着卡比去闯过平台关卡或解决场景谜题，一路吞噬敌人，获取力量。</p>\n<p data-pid=\"uJQCsjgg\">我原本很担心卡比自带的漂浮操作该如何融入复杂的 3D 环境，但上手《星之卡比 探索发现》没几分钟后，我就把这种担忧完全抛在脑后了。卡比所做的每一件事（跑、跳、飘和吸）都严丝合缝，并且在大多数情况下都很精准，这很关键，毕竟卡比需要通过复制以及全新的「塞满嘴」变身来获得各种能力。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4f417c3214d4b040040c12ad08259073_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"900\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"wYGxKP0z\">「塞满嘴」变身正如预告片里看到的一样好玩，通过这个技能，卡比可以吞下一些大到他吃不下的特定物体，让自己的粉色皮肤将其包裹覆盖，以某种方法控制这块尺寸过大的「零食」。卡比首次使用「塞满嘴」模式就吞下了一辆锈迹斑斑的汽车，只见他伸展开整个身体，包裹住车身和引擎罩，但将底盘和轮胎暴露在外。从此刻起，我就可以在关卡里驾驶汽车，冲破开裂的墙壁，利用车轮加速飞跃过缺口。</p>\n<p data-pid=\"1KUp0U0S\">不过，卡比永不满足的胃口可不局限于汽车，试玩关卡里到处都是可以塞进嘴里的大家伙。卡比可以吞进一台自动贩卖机把自己变成一个摇摇晃晃的大盒子，然后从嘴里发射一定数量的汽水罐；卡比还可以把一段楼梯塞进肚里，挪动到原先无法触及的平台面前重新放置，也可以推翻或压碎木箱和敌人（毕竟没人规定楼梯只能用来上楼）。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b6943fca2cca195f1373a92a31ddcbc8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"900\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"U56QcrkG\">「塞满嘴」变身模式乍一看只是个肤浅的噱头，但玩到现在，我发现该能力其实是解谜内容中一个相当有趣的组成部分。我很少长期保持变身形态，因为许多形态都会极大地限制卡比的行动能力。但好在即便处于「塞满嘴」模式里，卡比最重要的武器（也就是他的复制能力）依旧可以使用。</p>\n<p data-pid=\"1eTWaPeI\">敌人所拥有的能力或元素道具同样可以被我们的主角吞下复制，尽管与此前作品中的设计相比存在一些细节上的差异，但那些经典复制能力如烈火、弯刀、利剑、冰冻和炸弹等都出现在了本作中。</p>\n<p data-pid=\"5CK_sTsL\">例如，在装备炸弹时按下攻击键，可以向卡比面朝的任意方向发射爆炸球，为了获得更大的乐趣和破坏性，我会转着圈儿丢炸弹；站立不动（或在半空中）按住攻击键可触发有十字准星的弧线瞄准，这样我就可以精确地指哪炸哪。本作中几乎每一种复制能力都具有多用途和适用于各种情景，探索和使用的过程充满乐趣。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-60e17ee5a53736421c9cd9f198842233_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1200\" data-rawheight=\"628\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"YPek2e1Z\">在前期关卡里，我们还可以玩到一种新卡比复制能力，为卡比配备一把类似手枪的武器，朝任意方向射击。此外还有一种充能攻击，卡比可以将弹药瞄准任何方向，并在指定区域内引爆大型炮弹。这是一种巧妙且独特的设计，玩家在打靶场景里可以充分利用它来解锁关卡秘密，或对远处怪物先发制人。其中有个叫「Treasure Road」的挑战关卡就充分测试了我对这方面技能的掌握程度。</p>\n<p data-pid=\"Ldfk9D91\">试玩中一共有七个「Treasure Road」关卡，卡比需要使用特定的复制能力或「塞满嘴」技能在限定时间内通关。其中有个挑战设置了一系列可以远程射击的移动目标，时不时也会有大炮或敌人从远处攻击你；另一个三星挑战则是让卡比吞一个交通锥来捅穿大水管，然后你可以乘着小喷泉上升到关卡的下一环节。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-fc6ced6b362f24a913b055acc1668e8e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1800\" data-rawheight=\"900\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\" data-tags=\"porn\"></p>\n<p data-pid=\"HQoiOgfM\">有些关卡有充足的时间去完成，不需要在意技能等级，但有一些则要求玩家在一分钟内通关。顺利完成挑战后，玩家可以获取一种彩色星星晶体，用来在瓦豆鲁迪镇里升级复制能力。</p>\n<p data-pid=\"A8l1G2VR\">卡比在每个关卡里的主要目标就是解救关卡终点处的瓦豆鲁迪们，也有不少瓦豆鲁迪被放在关键路径上，很难错过，还有一部分小家伙们被藏在隐藏通道或需要特定复制能力触发的场景机关里。此外，在关卡里完成特定任务同样可以获得瓦豆鲁迪，例如让一定数量的花朵开放，或是在汽车变身模式下行驶且不掉下悬崖。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-64c95ea5164144842f57f81d8c8e15b8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1196\" data-rawheight=\"675\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"z7Cg3wfw\">所有被拯救的瓦豆鲁迪都会聚集在瓦豆鲁迪镇，他们会帮忙重建这个被毁灭的小镇。我在第一世界期间重建的建筑有个武器工坊，卡比可以在这里升级或进化每一种复制能力，需要花费蓝图、稀有石头和星币等主要收集品。这些升级可以大幅改变卡比的能力，例如进化后的弯刀技能可投掷更多数量的攻击武器，并且改变卡比的帽子款式和他拿在手里的武器。</p>\n<p data-pid=\"7LZ9SOfx\">这款游戏有如此多关卡可以探索，有那么多隐藏宝藏等着我们去征服，有多种能力可供升级，以及许多瓦豆鲁迪建筑等着我们去建设，我心中感到无比期待。我的《星之卡比 探索发现》早期游戏体验充满了美好回忆，不过我希望这些初期关卡只是个开场，后面能有更多充满挑战性的动荡大冒险。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-40821860d559cd6c70e086edd34359c5_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"-ZZOJ6sP\">我所体验的五个主要关卡均提供了丰富的可探索内容，过程惊险刺激，甚至有几次差点被打空血。但我在试玩流程结尾遇到的那只名为「猩猛霸」的大猩猩 Boss 却有点无聊，一旦摸清他的攻击套路，剩下的就只需要照脸丢一大堆炸弹无脑输出即可。</p>\n<p data-pid=\"HyMaQJ1r\">我希望卡比的首款 3D 冒险能再给玩法添加点深度，并且提供更多稀奇古怪且充满乐趣的「塞满嘴」变身。如果这两方面的后续内容都能保持水准，我有预感《星之卡比 探索发现》将会是一次非常愉快的冒险之旅。</p>\n<blockquote data-pid=\"4GBlQK5m\">文/ John Carson<br>译/ 夜猫 校/ Zoe<br>Game Informer 中华地区独家授权，转载请征得同意</blockquote>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/you-xi-gou-huo-ying-di?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">篝火营地</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/523597688/answer/2406692475?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">10 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/312259327?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价ns游戏《耀西的手工世界》？</a><br><a href=\"http://www.zhihu.com/question/270785125?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么一年了任天堂Switch的游戏还是这么少？</a><br>\n","link":"http://www.zhihu.com/question/523597688/answer/2406692475?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价任天堂 Switch 独占游戏《星之卡比 探索发现》？","date":"2022-03-25 06:41:18","description":"\n<p data-pid=\"ti9y012B\">下面是我们对《星之卡比 探索发现》的视频评测内容：</p>\n<a href=\"https://www.zhihu.com/zvideo/1490695569857638400\">【IGN】《星之卡比 探索发现》评测：疯狂的大嘴</a><p data-pid=\"RXTa-tW0\">卡比对于改玩法这件事一点也不陌生。他不光能变成各种形状和大小，《星之卡比》系列还经常实验各种各样的设定和花样，像是在《触摸！卡比》里用 DS 触控笔滚动没有四肢的卡比，在《星之卡比：机械星球》里开机甲，或是在《毛线卡比》里体验一种画风完全不同的变形系统。</p>\n<p data-pid=\"QU8PDA7l\"> 乍看之下，《星之卡比 探索发现》的名字似乎也能和这几位前辈并列在一起，毕竟，这可是《星之卡比》系列第一次用 3D 关卡。但实际玩下来，这个平台跳跃游戏并没有颠覆传统，而是为传统卡比游戏带来了一次巨大进步，并将我喜欢的卡比元素巧妙地放进了一个新的（但依然让人感到熟悉的）视角。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-117815c5237aa47ddb33a6cd287e2636_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-117815c5237aa47ddb33a6cd287e2636\" data-watermark-src=\"v2-ceb3d935918ae16251fe0dd45326a0ea\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"ZcqGJ2Pf\">放以前，我怎么都不会把《星之卡比》跟「后启示录」联系在一起，但是在一个虫洞在噗噗噗之国上空开启后，我们的粉红主角还真就穿越到了一个像是人类世界废墟的地方。</p>\n<p data-pid=\"su_WN6hw\"> 在这个世界里，荒废的建筑上有着斑斑锈迹，疯长的植物看着赏心悦目，而一群瓦豆鲁迪正想在新家安顿下来……至少，如果不是一下子就被绑架了，他们原本是这么打算的。介绍完这个简单有效的设定之后，卡比就要踏上冒险，穿越破旧的世界，救援瓦豆鲁迪，帮助他们重建家园。</p>\n<p data-pid=\"AoZFAlYH\"> 为此，你要在一系列线性关卡中悬浮，把各种敌人吸进肚子来偷取它们的能力，顺便寻找沿途的秘密。从 2D 变 3D 以后，这些事情干起来自然和以前不太一样，但是移动、战斗、发现隐藏路线和道具的方式，全都让人感到熟悉和满意——有人说它和《超级马力欧 3D 世界》很像，我觉得这种说法不无道理。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-d65d2e68d3f5fbc29779e0bfe039ed91_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-d65d2e68d3f5fbc29779e0bfe039ed91\" data-watermark-src=\"v2-452c49b633dad21857919be185e0a33f\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"cDYE8-zK\">寻找藏在小路和洞穴里的瓦豆鲁迪是种享受，而且随着瓦豆鲁迪的人口增加，镇子里还会出现新的建筑，方便你购买 buff 物品或是解锁能力升级，甚至可以玩钓鱼等可爱的小游戏。</p>\n<p data-pid=\"KAlYext_\"> 关卡本身将平台跳跃解谜和战斗融合在了一起，而敌人提供的十多种复制能力在这两个方面都很有作用。战斗比较简单，不过复制能力提供了充足的多样性，不管是用火烧敌人还是用一把小枪射它们，这些能力都可以让战斗保持有趣。 平台跳跃方面，冰能力可以让你用滑冰安全穿过危险地形，而剑可以砍断一些绳子解锁新道路。关卡设计自始至终都能巧妙运用这些能力，每个关卡都会鼓励你活用不同能力以应对不同的情况或是进入封闭区域。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-f5cb3efa89fd243a57e64db205a80a76_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-f5cb3efa89fd243a57e64db205a80a76\" data-watermark-src=\"v2-306b2c563778d8708f644f94cbb9760b\" data-private-watermark-src=\"\" data-tags=\"porn\"></p>\n<p data-pid=\"DlmBTesC\">《探索发现》不是一个特别难的游戏（包括难度更高的「狂暴模式」），但也绝对不是一个无脑通关的游戏——不会像《耀西的手工世界》那样，游戏是很有意思，但个别关卡只要摇杆一直往右推就能到终点。在《探索发现》里，较难的敌人会促使你四处移动与之周旋，让你充分利用每种变形的招式，特别是在几个非常有创意的 Boss 战里。</p>\n<p data-pid=\"InDyZDi0\"> 发现隐藏要素的难度从「约等于没藏」到「藏得出奇好」不等。在我大约 10 小时的通关时间里，我只死了一两次，但除了前两关以外，我很少能一遍就 100%全收集，这经常诱惑我重来一次，尝试找到错过的东西。有时候不太好分清一个地方究竟是隐藏道路还是有隐形墙的地形装饰，但这只是偶尔出现的不便之处，无伤大雅。</p>\n<p><img src=\"https://pica.zhimg.com/v2-1519223b97a299a569f0147de0d25c49_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"720\" data-watermark=\"watermark\" data-original-src=\"v2-1519223b97a299a569f0147de0d25c49\" data-watermark-src=\"v2-f920a8a9be603f23a2c1abe021456575\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"h-DX6iR5\">根据每个关卡所在「世界」的不同，这些地形装饰以及周围的机制也会有不同主题，有的世界是以水为主的海滩，有的是被雪覆盖的英伦建筑，甚至还有一个灯光闪耀的嘉年华游乐场。《探索发现》有时候漂亮到远超预期，特别是在非常有个性的过场动画里。</p>\n<p data-pid=\"KqGzF-GY\"> 整个游戏的色彩运用都非常棒，还有一些非常精致的场景，像是复杂的马戏团游乐设施和老商场的内部。虽然每个世界都很有多样性，也全都很令人享受，但这个游戏的后启示录设定不是特别能让人兴奋起来。卡比会穿过各个世界里各种风格的生锈屋顶和破败街道，但这个后启示录世界远远比不过他自己世界里的奇异地点。</p>\n<p data-pid=\"4O8dxkEM\"> 卡比的「塞满嘴变形」能力或多或少也有同样的问题。那个已经催生了不少梗图的汽车就是一种叫「汽车塞满嘴」的能力。这些都是卡比一口吞不下去的日常物品，但为了使用能力，卡比会改变身体形状，用嘴裹住这些物品。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-25cb4aaddf3683dfbea7ca2ea9c48784_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-25cb4aaddf3683dfbea7ca2ea9c48784\" data-watermark-src=\"v2-5a878c885cc0602b63e8c3e54cfadabe\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"LodhMarG\">可能是我老土了吧，不过我觉得卡比变成售货机还是挺怪的，要不是它的能力还比较好玩，我肯定不觉得这是个新奇有趣的设计。汽车赛满嘴可以让你快速通过一些专为速度而设计的赛道，变成售货机以后可以从嘴里快速射出罐子，有一个搞笑的圆形物品可以把卡比变成空气炮，可以用空气转动风扇、打晕敌人，或是为小帆船提供动力。我不知道开发商 Hal Laboratory 是怎么做到的，但他们居然把三角锥、举升机，乃至大号金属管都做成了特别有趣的变形。</p>\n<p data-pid=\"Pvo1Kn-S\"> 在主要关卡之间还有挑战关卡「宝藏之路」，玩家可以用它们检验一下自己对各种能力的熟悉度（包括塞满嘴变形）。这些额外关卡会提供一种特定的能力，玩家需要用能力克服障碍，争取尽快达到终点。如果完成地足够快就可以获得一种特殊的星星，如果耗时低于目标时间的话，还可以再额外获得一些硬币。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-1b795f4f475eb9d71dc7f1b139bbb340_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-1b795f4f475eb9d71dc7f1b139bbb340\" data-watermark-src=\"v2-6efc5a00c55caacef7fbf83a834bf991\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"MUFLZ2sw\">宝藏之路最后成了《探索发现》我最喜欢的部分，这些小巧的挑战不仅可以快速完成，还用非常聪明的办法发挥了每种变形的潜力。比如说弯刀变身的回旋镖，在普通关卡里，回旋镖飞回来的时候只能造成一点点额外伤害，但在宝藏之路里面，这兴许就决定了你能不能达到目标时间。达到目标时间后的硬币奖励其实不多，但这并没有阻止我不断改良操作，不断挑战自己。</p>\n<p data-pid=\"ef5JAMDL\"> 那些星星还可以用于一个不错的新系统：关卡中藏有设计图（或是在大战后直接奖励），获得设计图后，玩家可以用星星和硬币来升级复制能力，例如将弯刀的回旋镖数量从一个增加到两个。虽然这基本上不会改变能力的用法，但对维持新鲜度很有帮助，让玩家自始至终都不会觉得这些能力乏味。</p>\n<p><img src=\"https://pica.zhimg.com/v2-ced839af098fc81486055e89283bb6f2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-ced839af098fc81486055e89283bb6f2\" data-watermark-src=\"v2-676d72652d3a117f1ba4a9129cd9b426\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"iGGNwqUr\">由于我清图清得比较彻底，除了最后面以外，我每次拿到设计图之后都有足够的星星和硬币用于解锁，所以专门跑回镇子升级主要是为了仪式感——不过，嘿，重点是我的火焰能力让我看着像头火龙。</p>\n<p data-pid=\"IxZxNr6D\"> 《探索发现》也有合作游玩模式，不过它是这部游戏少有的败笔之一。第二位玩家几乎随时都可以加入游戏，这听上去不错，但实际玩起来感觉像是「带弟弟妹妹一起玩」模式。2P 玩家要操控拿着长矛的头巾瓦豆鲁迪，但令人失望的是，他不能使用任何复制能力。而在过去的很多部《星之卡比》里面，2P 玩家也可以吞下敌人、使用它们的能力。 更糟糕的是，镜头几乎永远对着卡比，2P 玩家经常会掉出画面然后被传送到卡比身边，跟玩悠悠球似的。话虽如此，两人一起闯关打 Boss 依旧妙趣横生，只不过这远远称不上是《星之卡比》系列最好的合作体验。  </p>\n<p><img src=\"https://pic3.zhimg.com/v2-4c070dfc5b1cba2b271d255977f5f8eb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"720\" data-watermark=\"watermark\" data-original-src=\"v2-4c070dfc5b1cba2b271d255977f5f8eb\" data-watermark-src=\"v2-9a1175a08a4d15a56e38dd151a72b076\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"sZjeQtTV\"><b>总结</b></p>\n<p data-pid=\"3yJUPr0v\"> 在《星之卡比》系列中，基于复制能力的战斗、平台跳跃和隐藏要素收集一直相映成趣，而《星之卡比 探索发现》成功地将这种乐趣传送进了 3D 世界。后启示录世界或许没波普之星那么有趣，但它依然活泼可爱，而且设计精妙的关卡一直能巧妙运用卡比的复制能力。虽然视角变了，但《探索发现》保留了大部分我最喜欢的经典卡比元素，如果粉色大胃王将来还会踏上 3D 冒险的话，我会把它们开心地一口吞下去。</p>\n<h3>优点</h3>\n<ul>\n<li data-pid=\"QFsP_RY5\">成功将系列魅力延续到 3D 世界</li>\n<li data-pid=\"Ac7MZ1rd\">各种变形设计创意十足，玩法多样</li>\n<li data-pid=\"cOKmH1Ok\">难度适中，内容丰富</li>\n</ul>\n<h3>缺点</h3>\n<ul><li data-pid=\"FDojuWtA\">合作模式体验糟糕</li></ul>\n<h3>评测成绩</h3>\n<p data-pid=\"EuE9yScd\">在《星之卡比》系列中，基于复制能力的战斗、平台跳跃和隐藏要素收集一直相映成趣，而《星之卡比 探索发现》成功地将这种乐趣传送进了 3D 世界。后启示录世界或许没波普之星那么有趣，但它依然活泼可爱，而且设计精妙的关卡一直能巧妙运用卡比的复制能力。虽然视角变了，但《探索发现》保留了大部分我最喜欢的经典卡比元素，如果粉色大胃王将来还会踏上 3D 冒险的话，我会把它们开心地一口吞下去。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c7774285dae9670c35081cd41bf8499e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2836\" data-rawheight=\"554\" data-watermark=\"watermark\" data-original-src=\"v2-c7774285dae9670c35081cd41bf8499e\" data-watermark-src=\"v2-f8897d6c90a95f33773615615b51a3f5\" data-private-watermark-src=\"\" data-tags=\"porn\"></p>\n<blockquote data-pid=\"rqmb7Xbz\"><span class=\"nolink\">本文编译自 IGN US 相关内容，原作者 Tom Marks，未经授权禁止转载。</span></blockquote>\n<hr>\n<p data-pid=\"JQOXN6YR\"><b>以下是原回答中关于本作的最终前瞻：</b></p>\n<p data-pid=\"_iJj8i_U\">你想象过卡比会变成一台自动售货机，然后向可怜又毫无防备的敌人投掷苏打水吗？或是一架从天而降把敌人压扁的梯子？反正我是没想到的，不过这样的变身确实令人惊喜。</p>\n<p data-pid=\"JX0XJAQS\">在本次《星之卡比探索发现》的试玩中，我探索了卡比的最新冒险旅程，其中包括一场艰巨的 Boss 战。另外我还尝试了几个限时挑战区，从中收获了一些收集品，这个过程自然少不了将卡比变身成好几种形态，真是一次充满愉悦的游玩体验。</p>\n<p><img src=\"https://pica.zhimg.com/v2-f14abb2406052b335f4cf918d42aaf97_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"amRGNmrv\">每一款卡比游戏的重头戏，都是他能从不同敌人身上吸收各种能力，《星之卡比探索发现》也不例外。大部分早期关卡是分开的，有时甚至会在半途空降一个小 Boss，但在所有关卡中，卡比都有机会接触到多种能力用于对抗他的敌人。这一次，「选择」是关键，因为游戏中几乎从来不会强迫玩家使用某个特定能力，甚至在面对 Boss 时，你也能从几种能力中挑选一个展开战斗。</p>\n<p data-pid=\"HIcDOGq0\">复制能力的体验依旧很棒，尽管试玩版中出现的暂时都是前作里的经典能力，但值得一提的是，本作新增了一个「塞满嘴」模式，虽然复制能力依旧乐趣满满，但「塞满嘴」这一次着实抢尽风头。我在早期预告片中就见过卡比以汽车形态出现，实操之后发现它和我想象中的一样好玩。玩家可以「驾驶」汽车上蹿下跳，撞向敌人或障碍物，甚至用它发现秘密，这种玩法永不过时。此外，汽车形态并非「塞满嘴」模式的唯一选项。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-5906ebad42b132d330520ec44d4039e4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"720\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"5J_uluH2\">仅在试玩关卡中，卡比就能获得约 6、7 种「塞满嘴」变形。他能变成一组楼梯，不仅可以压碎敌人，还能用于通往先前难以到达的区域；他还可以变成交通锥，用尖端突刺敌人造成高伤害，还能凿破地面和管道的裂缝；他甚至可以变成以苏打水为弹药的自动售货机。试想一下，如果你穿越回 1992 年去告诉当时在 GB 上玩《星之卡比》的玩家，卡比有一天会变成自动售货机，他们会作何反应？</p>\n<p data-pid=\"pdtB19yQ\">「塞满嘴」模式并非某些场景中的特定能力，玩家其实常会用到，而且进入该模式并不会使你丧失正在使用的复制能力，所以只要场景条件允许，你可以随时让卡比变成一个交通锥。不过它的作用并不仅仅是主角强大的能力提升，你还能看到卡比吞噬部分环境物品来移动障碍物，比如变成水塔的顶部并将其打开，或变成一组储物柜并将其翻倒，从而露出隐藏的秘密。</p>\n<p><img src=\"https://pica.zhimg.com/v2-4e9a84d904551184df7899fd6d3ddfd9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Hs8aUqlE\">不仅如此，游戏的关卡之间会用世界地图连接，但只要按下一个键，卡比就会被传送到瓦豆鲁迪镇。这是一个类似游戏大厅的地方，里头设施丰富，包括一个可购买雕像的自动售卖机，甚至还有武器工坊。你将逐步解锁这个小镇的更多功能，比如钓鱼小游戏，以及卡比的小屋。</p>\n<p data-pid=\"o0OIQAfO\">在武器工坊里，你可以进化此前已经收集过的复制能力，提升其威力。比如曾经的喷火器可以变成火山能量，使卡比能发射出巨石熔岩，你可以使用沙袋来测试新技能的威力。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-0504439bc36f942b5fef18985680b8b2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"mHlXpZAf\">武器作工坊、新的瓦豆鲁迪镇建筑，以及游戏进度都与在关卡中发现的收集品有关，《超级马力欧 3D 世界》的粉丝们在《星之卡比探索发现》中应该会感到熟悉。这不是一款横向卷轴游戏，但却是个具有华丽场景的半 3D 世界，你不一定要按照从 A 走到 B 的流程来玩，因为每个关卡都散布着收集品和待发现的秘密，每一处谜题都潜藏着挑战。</p>\n<p data-pid=\"yJlREQIP\">其中有个场景需要你用卡比的喷火能力点燃灯笼，还有一个需要你撕下通缉海报。但并不是所有收集品都会奖励梦寐以求的瓦豆鲁迪，有时可能会以挑战的形式出现，比如在不把车开落悬崖的情况下通关，或是无伤打败 Boss。</p>\n<p><img src=\"https://pica.zhimg.com/v2-8249936c37c137dfda2e5d2d3007e509_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"ymsao4_J\">游戏中的很多挑战也由此而来。不出意料，这款游戏正如该系列的多部前作一样，呈现出许多难度限制，尤其是在游戏初期。游戏中有两种难度选项，你可以随时变更，然而就算选择了更困难一些的游戏模式，我仍然可以在多数关卡中无伤通关（尽管我感觉玩到中后期游戏难度会大不一样）。</p>\n<p data-pid=\"U3kY9Bdk\">与前作有所不同，大部分挑战来自于寻觅出巧妙隐藏的秘宝。正如在《超级马力欧 3D 世界》或《麻布仔大冒险》里的那样，游戏通过视角隐藏了许多可以让卡比挤进去寻找隐藏物品的区域。每当我完成关卡后发现自己错过了一两个瓦豆鲁迪，总会恨不得马上重玩关卡找到它们。</p>\n<p><img src=\"https://pica.zhimg.com/v2-bb229484497c07afb8d991d2b9131592_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"VsWtGK5h\">在完成世界地图上的各类关卡和挑战之后，你可以挑战当前世界的 Boss。在第一世界的草原建筑里，Boss 是一只大猩猩，如果一个不小心你可能会被它命中多次。此外，正如我之前所提，如果想收集所有瓦豆鲁迪，就需要无伤击败它从而通过附加挑战。</p>\n<p data-pid=\"ww0Ue-eB\">我在多次尝试之后做到了，不禁对未来即将面对的挑战充满期待。尽管有的 Boss 战相当容易，但由于我的完美主义强迫症会迫使我找到每个收集品，所以我为游戏接下来的挑战充满热情。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-7d5ad1ef81ab01c4f7348a328009d41a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1200\" data-rawheight=\"675\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"osu6uUvK\">对于那些追求难度的玩家来说，游戏流程里不乏有一些困难。毕竟卡比会飞，所以满是洞的平台场景绝不能称得上是挑战。但他无法自由地飞到场景高处，所以仍伴随着传统的平台解谜玩法。在可被解锁的挑战室里，你可以掌握卡比的每种能力。通关或许简单，但如果你想获得额外的星星用于武器升级，就需要在相当紧迫的时间限制下完成关卡。</p>\n<p data-pid=\"DtDGugFY\">《星之卡比探索发现》是一款完全出乎我意料的游戏。当我通过第一关时，很担心接下来的游戏体验会停留在直线通道里打各种虾兵蟹将，但游戏后来的流程不断地向我证明此前的担心是多余的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-2ea41a7856e374260bc5cb952632ba0f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"2B1BUXhh\">通过那些巧妙隐藏的收集品、具有挑战的瓦豆鲁迪收集方式以及宝藏挑战关卡，《星之卡比探索发现》为爱好挑战的玩家们带来了一连串惊喜。我已经迫不及待地想缩短完美通关时间，与 NS 好友们一较高下了。我相信目前体验到的卡比变身形态只是冰山一角，尽管已经挺丰富了，但我仍等不及想看到更多令人惊艳的绝妙点子。</p>\n<blockquote data-pid=\"NB304H8c\">本文编译自 IGN US 相关内容，原作者 Mark Medina，未经授权禁止转载</blockquote>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/ignzhong-guo?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">IGN中国</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/523597688/answer/2406682001?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">10 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/312259327?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价ns游戏《耀西的手工世界》？</a><br><a href=\"http://www.zhihu.com/question/270785125?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么一年了任天堂Switch的游戏还是这么少？</a><br>\n","link":"http://www.zhihu.com/question/523597688/answer/2406682001?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"滴滴答答的？","date":"2022-03-25 04:34:27","description":"\n<p data-pid=\"BHW8OOkR\">三毛说：不管她这辈子爱过多少男人，她与荷西在一起的时候，她觉得彼此是相互唯一的人。与其说是三毛成全了荷西，还不如说是荷西造就了三毛，有了荷西的三毛才算是一个完整而又浪漫的三毛。</p>\n<p data-pid=\"szVLXLYZ\">三毛，著名作家、旅行家1943年3月26日生，浙江省定海县人。她的足迹遍及世界各地，她的作品也在全球的华人社会广为流传，生平著作和译作十分丰富。1943年的3月26日，作家三毛出生。她的父亲曾说，三毛不在意生命的长短，只在意是否痛快的活过。毋庸置疑，她痛快、潇洒，虽然仅有短短的四十八年。</p>\n<p data-pid=\"9bWIH0yJ\">她的文字触动人心，她与荷西的爱情更是一场爱与痛的佳话。</p>\n<p data-pid=\"VtNDO8nl\"><b>等六年过去了我就娶你</b></p>\n<p data-pid=\"oPmHYgDs\">1967年，年仅24岁的三毛孤身前往西班牙马德里文哲学院求学。那年的圣诞节夜晚，她在朋友家邂逅了未来的丈夫——荷西。两人相识以后，荷西便经常约三毛外出散步、聊天。一次约会时，荷西认真地看着三毛的眼睛说：“Echo，你再等我六年，我读大学四年，服兵役两年，等六年过去了，我就娶你，好吗？”</p>\n<p data-pid=\"AgS_5yes\">那时，荷西尚在念高三。看着这个英俊可爱的小弟弟，三毛笑了，她回答道：“好啊，既然这样，我们就疏远一点，不要常常见面好了。”于是，荷西笑逐颜开地跑了，他手里拿着一顶从未戴过的法国礼帽，倒退着跑，一边跑一边开心地挥手：“Echo，再见”那次分别以后，两人信守承诺，再也没有联系过。</p>\n<p data-pid=\"3ULYRwnR\"><b>这一辈子我只嫁给他</b></p>\n<p data-pid=\"dLm4Zz_-\">因为未婚夫的突然离世，三毛为了抚平内心的伤痛，再次回到西班牙。在那里，她突然间想起荷西，那个跟她有着六年之约的男孩。而那时，六年之约刚刚到期，她拿起笔，决定写信给他。一天，三毛刚刚回到公寓，就接到朋友的电话，说有急事，请她立马赶过去。三毛放下电话，一路飞驰赶往朋友那里，而她的朋友把三毛带进一个房间，让她闭上眼睛，随后就关上门悄悄出去了。</p>\n<p data-pid=\"jM8Bay9c\">过了一会儿房门开了，一对温暖有力的手臂从三毛身后将她环了起来，等三毛睁开眼睛后，才发现对方是一个长得十分高大、留着满脸胡子的西班牙青年——他正是六年以后的荷西！房间的四壁上，挂满了三毛的放大照片。想到这个苦恋她的西班牙少年，三毛感动得流下眼泪。她在心里暗暗说道：“这一辈子，我只嫁给他！”</p>\n<p data-pid=\"C4U6aIs0\"><b>橄榄树是行走的方向</b></p>\n<p data-pid=\"q9aTKAuf\">为了三毛，荷西放弃了向往已久的大海和潜水，随她来到干巴巴的撒哈拉沙漠。1973年7月，三毛与荷西在撒哈拉沙漠的阿尤恩小镇登记结婚。</p>\n<p data-pid=\"u59OqNAZ\">就在去小镇的法院公证结婚之前，荷西手捧一个纸盒子送到三毛面前。当三毛打开盒子时，才发现那不是花束，而是一个完整的骆驼头骨。这可真是一份意外的、豪华的结婚礼物。荷西他几乎跑遍整个撒哈拉沙漠，最终在滚烫的沙子里找到这副完整的骆驼头骨。对于骆驼头骨，三毛喜欢极了，她把它放到书架上当作宝贝一样珍藏。</p>\n<p data-pid=\"uRMb4bx9\">多年以后，三毛因健康问题回台湾休养，在那期间，她参加诗人余光中发起的“让现代诗与音乐结婚”的活动，发表过一首叫作《橄榄树》的诗。有人会问，橄榄树是什么？那是生长在西班牙南部的一种植物，而那里也正是荷西的故乡。或许，就是在那个时候，三毛明白了行走的意义——荷西。</p>\n<p data-pid=\"C6C0VYT2\"><b>战争中的离别与欢笑</b></p>\n<p data-pid=\"dQVPqtDO\">1975年，因为战争原因，三毛不得不暂时告别荷西，并且永远离开了那片“花开成海”的撒哈拉沙漠。10月22日，三毛先一步离开阿尤恩小镇，到临近沙漠的大加纳利岛等候荷西。</p>\n<p data-pid=\"Wo_nZMc8\">经过十天十夜音讯全无的等待，三毛的内心感到焦虑与恐惧，也是在这十天的煎熬之中，她才意识到自己有多么爱那个“大胡子”。幸好，第十一天的上午，三毛远远地看到荷西驾着一辆汽车赶来。</p>\n<p data-pid=\"ZtewOrpi\">而且，他不但人来了，车来了，就连抹布、化石、骆驼头骨都带来了。三毛看到这一车子的东西，喜极而泣，她紧紧地抱住荷西，一下子觉得他就是这个世界上最了不起的青年。</p>\n<p data-pid=\"3nmNY2bx\"><b>他们在一起的最后一晚</b></p>\n<p data-pid=\"Q2olK4he\">经历了沙漠的欢声笑语和战火的洗礼，三毛终于死心塌地地爱上了荷西。离开沙漠以后，三毛和荷西居住在非洲西北部的大加纳利岛上。转眼三年过去，三毛又跟随荷西来到拉芭玛岛。小岛上风景如画，气候宜人，干净的海水冲上沙滩，令人心旷神怡。</p>\n<p data-pid=\"n14uXom1\">这一年，三毛与荷西已结婚六年，在结婚纪念日那天，荷西用加班费给三毛买了一只老式女表。他握着三毛的双手说：“以后的一分一秒你都不能忘掉我，让它来替你数。”1979年9月，三毛的父母到欧洲旅行，特地绕道小岛看望他们夫妇。二老在小岛游玩几日便要离去，三毛便陪伴父母到伦敦坐飞机。</p>\n<p data-pid=\"TaezDom9\">三毛住在伦敦的那晚，夜里，突然有人来电，像是有什么心灵感应，三毛接起电话，连连向对方发问：“是不是荷西死了，你是不是要告诉我荷西死了……”不幸的是，她的感应是对的。</p>\n<p data-pid=\"WtgyI0yw\">当荷西的尸体被打捞出来的时候，正是中秋节，三毛向打捞人员咆哮，她不信这是荷西！那晚，她独自走进停放荷西尸体的房间，为他守灵，她拉住已经过世两天的荷西的手，像平常两个人双手互握的习惯一样。她一边诉说两人的过往，一边为自己抹眼泪。那一晚，是他们在一起的最后一晚。</p>\n<p data-pid=\"3i5BkKXC\">三毛说：不管她这辈子爱过多少男人，她与荷西在一起的时候，她觉得彼此是相互唯一的人。与其说是三毛成全了荷西，还不如说是荷西造就了三毛，有了荷西的三毛才算是一个完整而又浪漫的三毛。</p>\n<p data-pid=\"bpBg6e4B\">三毛，著名作家、旅行家1943年3月26日生，浙江省定海县人。她的足迹遍及世界各地，她的作品也在全球的华人社会广为流传，生平著作和译作十分丰富。1943年的3月26日，作家三毛出生。她的父亲曾说，三毛不在意生命的长短，只在意是否痛快的活过。毋庸置疑，她痛快、潇洒，虽然仅有短短的四十八年。</p>\n<p data-pid=\"Sjg3IM9f\">她的文字触动人心，她与荷西的爱情更是一场爱与痛的佳话。</p>\n<p data-pid=\"ZqaZMWSu\"><b>等六年过去了我就娶你</b></p>\n<p data-pid=\"Mk5rXATY\">1967年，年仅24岁的三毛孤身前往西班牙马德里文哲学院求学。那年的圣诞节夜晚，她在朋友家邂逅了未来的丈夫——荷西。两人相识以后，荷西便经常约三毛外出散步、聊天。一次约会时，荷西认真地看着三毛的眼睛说：“Echo，你再等我六年，我读大学四年，服兵役两年，等六年过去了，我就娶你，好吗？”</p>\n<p data-pid=\"P-1YGP6s\">那时，荷西尚在念高三。看着这个英俊可爱的小弟弟，三毛笑了，她回答道：“好啊，既然这样，我们就疏远一点，不要常常见面好了。”于是，荷西笑逐颜开地跑了，他手里拿着一顶从未戴过的法国礼帽，倒退着跑，一边跑一边开心地挥手：“Echo，再见”那次分别以后，两人信守承诺，再也没有联系过。</p>\n<p data-pid=\"wQQ7KBVK\"><b>这一辈子我只嫁给他</b></p>\n<p data-pid=\"n7Eowdug\">因为未婚夫的突然离世，三毛为了抚平内心的伤痛，再次回到西班牙。在那里，她突然间想起荷西，那个跟她有着六年之约的男孩。而那时，六年之约刚刚到期，她拿起笔，决定写信给他。一天，三毛刚刚回到公寓，就接到朋友的电话，说有急事，请她立马赶过去。三毛放下电话，一路飞驰赶往朋友那里，而她的朋友把三毛带进一个房间，让她闭上眼睛，随后就关上门悄悄出去了。</p>\n<p data-pid=\"Y5Dz3oUp\">过了一会儿房门开了，一对温暖有力的手臂从三毛身后将她环了起来，等三毛睁开眼睛后，才发现对方是一个长得十分高大、留着满脸胡子的西班牙青年——他正是六年以后的荷西！房间的四壁上，挂满了三毛的放大照片。想到这个苦恋她的西班牙少年，三毛感动得流下眼泪。她在心里暗暗说道：“这一辈子，我只嫁给他！”</p>\n<p data-pid=\"aM2NTP20\"><b>橄榄树是行走的方向</b></p>\n<p data-pid=\"65jnSI5D\">为了三毛，荷西放弃了向往已久的大海和潜水，随她来到干巴巴的撒哈拉沙漠。1973年7月，三毛与荷西在撒哈拉沙漠的阿尤恩小镇登记结婚。</p>\n<p data-pid=\"7E-fN58K\">就在去小镇的法院公证结婚之前，荷西手捧一个纸盒子送到三毛面前。当三毛打开盒子时，才发现那不是花束，而是一个完整的骆驼头骨。这可真是一份意外的、豪华的结婚礼物。荷西他几乎跑遍整个撒哈拉沙漠，最终在滚烫的沙子里找到这副完整的骆驼头骨。对于骆驼头骨，三毛喜欢极了，她把它放到书架上当作宝贝一样珍藏。</p>\n<p data-pid=\"uYXRp-gJ\">多年以后，三毛因健康问题回台湾休养，在那期间，她参加诗人余光中发起的“让现代诗与音乐结婚”的活动，发表过一首叫作《橄榄树》的诗。有人会问，橄榄树是什么？那是生长在西班牙南部的一种植物，而那里也正是荷西的故乡。或许，就是在那个时候，三毛明白了行走的意义——荷西。</p>\n<p data-pid=\"iIzkNOvA\"><b>战争中的离别与欢笑</b></p>\n<p data-pid=\"SjEsEOKV\">1975年，因为战争原因，三毛不得不暂时告别荷西，并且永远离开了那片“花开成海”的撒哈拉沙漠。10月22日，三毛先一步离开阿尤恩小镇，到临近沙漠的大加纳利岛等候荷西。</p>\n<p data-pid=\"WZpHOiVD\">经过十天十夜音讯全无的等待，三毛的内心感到焦虑与恐惧，也是在这十天的煎熬之中，她才意识到自己有多么爱那个“大胡子”。幸好，第十一天的上午，三毛远远地看到荷西驾着一辆汽车赶来。</p>\n<p data-pid=\"fDXZvUN8\">而且，他不但人来了，车来了，就连抹布、化石、骆驼头骨都带来了。三毛看到这一车子的东西，喜极而泣，她紧紧地抱住荷西，一下子觉得他就是这个世界上最了不起的青年。</p>\n<p data-pid=\"cF7IRJ-M\"><b>他们在一起的最后一晚</b></p>\n<p data-pid=\"5w3vVdcu\">经历了沙漠的欢声笑语和战火的洗礼，三毛终于死心塌地地爱上了荷西。离开沙漠以后，三毛和荷西居住在非洲西北部的大加纳利岛上。转眼三年过去，三毛又跟随荷西来到拉芭玛岛。小岛上风景如画，气候宜人，干净的海水冲上沙滩，令人心旷神怡。</p>\n<p data-pid=\"WWMCjESq\">这一年，三毛与荷西已结婚六年，在结婚纪念日那天，荷西用加班费给三毛买了一只老式女表。他握着三毛的双手说：“以后的一分一秒你都不能忘掉我，让它来替你数。”1979年9月，三毛的父母到欧洲旅行，特地绕道小岛看望他们夫妇。二老在小岛游玩几日便要离去，三毛便陪伴父母到伦敦坐飞机。</p>\n<p data-pid=\"3zVEWQSJ\">三毛住在伦敦的那晚，夜里，突然有人来电，像是有什么心灵感应，三毛接起电话，连连向对方发问：“是不是荷西死了，你是不是要告诉我荷西死了……”不幸的是，她的感应是对的。</p>\n<p data-pid=\"b7FcRXCF\">当荷西的尸体被打捞出来的时候，正是中秋节，三毛向打捞人员咆哮，她不信这是荷西！那晚，她独自走进停放荷西尸体的房间，为他守灵，她拉住已经过世两天的荷西的手，像平常两个人双手互握的习惯一样。她一边诉说两人的过往，一边为自己抹眼泪。那一晚，是他们在一起的最后一晚。</p>\n<p data-pid=\"wzMXJ3sd\">三毛说：不管她这辈子爱过多少男人，她与荷西在一起的时候，她觉得彼此是相互唯一的人。与其说是三毛成全了荷西，还不如说是荷西造就了三毛，有了荷西的三毛才算是一个完整而又浪漫的三毛。</p>\n<p data-pid=\"z2hv1BW7\">三毛，著名作家、旅行家1943年3月26日生，浙江省定海县人。她的足迹遍及世界各地，她的作品也在全球的华人社会广为流传，生平著作和译作十分丰富。1943年的3月26日，作家三毛出生。她的父亲曾说，三毛不在意生命的长短，只在意是否痛快的活过。毋庸置疑，她痛快、潇洒，虽然仅有短短的四十八年。</p>\n<p data-pid=\"bydaLbJi\">她的文字触动人心，她与荷西的爱情更是一场爱与痛的佳话。</p>\n<p data-pid=\"SJ7WziB8\"><b>等六年过去了我就娶你</b></p>\n<p data-pid=\"cc_0m1WJ\">1967年，年仅24岁的三毛孤身前往西班牙马德里文哲学院求学。那年的圣诞节夜晚，她在朋友家邂逅了未来的丈夫——荷西。两人相识以后，荷西便经常约三毛外出散步、聊天。一次约会时，荷西认真地看着三毛的眼睛说：“Echo，你再等我六年，我读大学四年，服兵役两年，等六年过去了，我就娶你，好吗？”</p>\n<p data-pid=\"o-jtjcIC\">那时，荷西尚在念高三。看着这个英俊可爱的小弟弟，三毛笑了，她回答道：“好啊，既然这样，我们就疏远一点，不要常常见面好了。”于是，荷西笑逐颜开地跑了，他手里拿着一顶从未戴过的法国礼帽，倒退着跑，一边跑一边开心地挥手：“Echo，再见”那次分别以后，两人信守承诺，再也没有联系过。</p>\n<p data-pid=\"CLHMRjKy\"><b>这一辈子我只嫁给他</b></p>\n<p data-pid=\"lieAh9Vu\">因为未婚夫的突然离世，三毛为了抚平内心的伤痛，再次回到西班牙。在那里，她突然间想起荷西，那个跟她有着六年之约的男孩。而那时，六年之约刚刚到期，她拿起笔，决定写信给他。一天，三毛刚刚回到公寓，就接到朋友的电话，说有急事，请她立马赶过去。三毛放下电话，一路飞驰赶往朋友那里，而她的朋友把三毛带进一个房间，让她闭上眼睛，随后就关上门悄悄出去了。</p>\n<p data-pid=\"yHiNiuTp\">过了一会儿房门开了，一对温暖有力的手臂从三毛身后将她环了起来，等三毛睁开眼睛后，才发现对方是一个长得十分高大、留着满脸胡子的西班牙青年——他正是六年以后的荷西！房间的四壁上，挂满了三毛的放大照片。想到这个苦恋她的西班牙少年，三毛感动得流下眼泪。她在心里暗暗说道：“这一辈子，我只嫁给他！”</p>\n<p data-pid=\"3CkjP3i5\"><b>橄榄树是行走的方向</b></p>\n<p data-pid=\"tPe_e9_F\">为了三毛，荷西放弃了向往已久的大海和潜水，随她来到干巴巴的撒哈拉沙漠。1973年7月，三毛与荷西在撒哈拉沙漠的阿尤恩小镇登记结婚。</p>\n<p data-pid=\"rY76z19-\">就在去小镇的法院公证结婚之前，荷西手捧一个纸盒子送到三毛面前。当三毛打开盒子时，才发现那不是花束，而是一个完整的骆驼头骨。这可真是一份意外的、豪华的结婚礼物。荷西他几乎跑遍整个撒哈拉沙漠，最终在滚烫的沙子里找到这副完整的骆驼头骨。对于骆驼头骨，三毛喜欢极了，她把它放到书架上当作宝贝一样珍藏。</p>\n<p data-pid=\"9eVXOOzG\">多年以后，三毛因健康问题回台湾休养，在那期间，她参加诗人余光中发起的“让现代诗与音乐结婚”的活动，发表过一首叫作《橄榄树》的诗。有人会问，橄榄树是什么？那是生长在西班牙南部的一种植物，而那里也正是荷西的故乡。或许，就是在那个时候，三毛明白了行走的意义——荷西。</p>\n<p data-pid=\"VQ9nyrwn\"><b>战争中的离别与欢笑</b></p>\n<p data-pid=\"b1s2uKCx\">1975年，因为战争原因，三毛不得不暂时告别荷西，并且永远离开了那片“花开成海”的撒哈拉沙漠。10月22日，三毛先一步离开阿尤恩小镇，到临近沙漠的大加纳利岛等候荷西。</p>\n<p data-pid=\"HrZNL4UO\">经过十天十夜音讯全无的等待，三毛的内心感到焦虑与恐惧，也是在这十天的煎熬之中，她才意识到自己有多么爱那个“大胡子”。幸好，第十一天的上午，三毛远远地看到荷西驾着一辆汽车赶来。</p>\n<p data-pid=\"mWxNLiAh\">而且，他不但人来了，车来了，就连抹布、化石、骆驼头骨都带来了。三毛看到这一车子的东西，喜极而泣，她紧紧地抱住荷西，一下子觉得他就是这个世界上最了不起的青年。</p>\n<p data-pid=\"zuc7bfyp\"><b>他们在一起的最后一晚</b></p>\n<p data-pid=\"z-7NeXw3\">经历了沙漠的欢声笑语和战火的洗礼，三毛终于死心塌地地爱上了荷西。离开沙漠以后，三毛和荷西居住在非洲西北部的大加纳利岛上。转眼三年过去，三毛又跟随荷西来到拉芭玛岛。小岛上风景如画，气候宜人，干净的海水冲上沙滩，令人心旷神怡。</p>\n<p data-pid=\"GlwDdZmU\">这一年，三毛与荷西已结婚六年，在结婚纪念日那天，荷西用加班费给三毛买了一只老式女表。他握着三毛的双手说：“以后的一分一秒你都不能忘掉我，让它来替你数。”1979年9月，三毛的父母到欧洲旅行，特地绕道小岛看望他们夫妇。二老在小岛游玩几日便要离去，三毛便陪伴父母到伦敦坐飞机。</p>\n<p data-pid=\"T4USC5uX\">三毛住在伦敦的那晚，夜里，突然有人来电，像是有什么心灵感应，三毛接起电话，连连向对方发问：“是不是荷西死了，你是不是要告诉我荷西死了……”不幸的是，她的感应是对的。</p>\n<p data-pid=\"hPnVQlui\">当荷西的尸体被打捞出来的时候，正是中秋节，三毛向打捞人员咆哮，她不信这是荷西！那晚，她独自走进停放荷西尸体的房间，为他守灵，她拉住已经过世两天的荷西的手，像平常两个人双手互握的习惯一样。她一边诉说两人的过往，一边为自己抹眼泪。那一晚，是他们在一起的最后一晚。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/yike-kai-hua-de-shu-40?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">是小狐狸呀</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>延伸阅读：<br><a href=\"http://www.zhihu.com/question/411765050?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">女生天天带着袖套防晒打扮的严严实实的，露着腿，腿不需要防晒吗？</a><br><a href=\"http://www.zhihu.com/question/272038568?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">给猫化妆算不算动物虐待？</a><br>\n","link":"http://www.zhihu.com/question/508061182/answer/2367548529?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\n    return new Date(date.toLocaleString('en-US', { timeZone }))\n}\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        timeZone\n    })\n    return {\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\n        convert (date) {\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\n        }\n    }\n}\n\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\n    return converter.convert(new Date(secDate), tzName) - secDate\n}\n\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\ncmn-Hans-SG = 中文普通话-简体-新加坡\ncmn-Hant-TW = 中文普通话-繁体-台湾\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\ncmn = 中文普通话\n\nzh-Hans = 中文-简体\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\n}\n\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long'\n}\nconst now = new Date()\n\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\n\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\n\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\n\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\n\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\n\nzhCNFormatter.format(now) // 2021年10月13日星期三\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\n\njaFormatter.format(now) // 2021年10月13日水曜日\njaAltFormatter.format(now) // 令和3年10月13日水曜日\n\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\n// {locale: 'zh-CN', calendar: 'gregory', …}\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\n     // 基于一个固定日期计算，这里选择 1970.1.1\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\n    const base = new Date(1970, 0, 1).getTime()\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\n    return Array.from({ length: 7 }, (_, day) =&gt; (\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\n    ))\n}\n\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n}).formatToParts(new Date())\n// [\n//     { type: 'year', value: '2021' },\n//     { type: 'literal', value: '年' },\n//     { type: 'month', value: '10' },\n//     { type: 'literal', value: '月' },\n//     { type: 'day', value: '13' },\n//     { type: 'literal', value: '日' },\n//     { type: 'weekday', value: '星期三' },\n//     { type: 'literal', value: ' ' },\n//     { type: 'dayPeriod', value: '上午' },\n//     { type: 'hour', value: '1' },\n//     { type: 'literal', value: ':' },\n//     { type: 'minute', value: '00' },\n//     { type: 'literal', value: ':' },\n//     { type: 'second', value: '00' }\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\n}\n\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\n  timeZone: 'America/Los_Angeles',\n  year: 1995,\n  month: 12,\n  day: 7,\n  hour: 3,\n  minute: 24,\n  second: 30,\n  millisecond: 0,\n  microsecond: 3,\n  nanosecond: 500,\n  calendar: 'iso8601'\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote>\n<p>周六不放假休息，还在这加班搞 CTF？</p>\n</blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/86535/11/24318/75037/622032a8E4f94d4ae/89703ccc122cf4e0.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"从 Google Analytics 的统计代码说起 —— 谈谈 script 标签的 async 和 defer 属性","date":"2020-10-13 09:25:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/80291/2/16552/19311/622032b3Eb300c2aa/66748fc8124a01c5.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/script-async-defer/\">https://blog.skk.moe/post/script-async-defer/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/script-async-defer/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将 […]","link":"https://flyhigher.top/develop/2160.html"}]