[{"title":"怎样去选择与自己车子相匹配的机油？","date":"2022-04-06 10:04:07","description":"\n<p data-pid=\"6d7OofU_\"></p>\n<p data-pid=\"6d7OofU_\"><b>选机油就跟谈恋爱一样，好不好不重要，最重要的是合适。</b></p>\n<p data-pid=\"tRrtZ88z\">那么哪些地方要合适呢?</p>\n<p data-pid=\"8ga5T1aj\">往大了说6、7万的车没必要上全合成，半合成或者矿物油足以，开个30多万的车，加矿物油就不合适了。</p>\n<p data-pid=\"QoaNdDRj\">往小了说机油油品、等级（API）、粘度（SAE）等都要符合厂家的标准，也就是使用保养手册上规定的标准。</p>\n<p><img src=\"https://pica.zhimg.com/v2-08963d934da11524a89fa6c316d44276_720w.jpg?source=b1748391?rss\" data-rawwidth=\"720\" data-rawheight=\"406\" data-size=\"normal\" data-caption=\"马自达保养手册\" data-watermark=\"watermark\" data-original-src=\"v2-08963d934da11524a89fa6c316d44276\" data-watermark-src=\"v2-fc3d5ccb9d97423c5c91dd0592ac13e0\" data-private-watermark-src=\"v2-95ec195e3252f36fc4b32755d08886f9\"></p>\n<p data-pid=\"3gRpu02m\">找到保养手册，通过目录翻到机油那一页，找到厂家对于SN、SAE的要求，上图画框的部分就是厂家对于SN、SAE的要求。</p>\n<p data-pid=\"3djiV7wl\">好一点的车，比如BBA，都会有厂家认证的机油标准。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-a4c79526e655c9ac65d227eed099a2c0_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1269\" data-rawheight=\"403\" data-size=\"normal\" data-caption=\"奔驰保养手册\" data-watermark=\"watermark\" data-original-src=\"v2-a4c79526e655c9ac65d227eed099a2c0\" data-watermark-src=\"v2-97781088e0edf4e586b13f30d2b2a277\" data-private-watermark-src=\"v2-4f031c5780524c048517d3e71d7e0d4e\"></p>\n<p data-pid=\"sJUv0SB1\">比如这辆奔驰，厂家认证的等级就是MB229.5/229.6，除此之外粘度(SAE)要求是0W-40或5W-40。</p>\n<p data-pid=\"_GIcPKHN\">从保养手册上获得API、SAE以及机油等级的信息之后，直接对应到机油壳上就可以选择到合适的机油啦。</p>\n<p><img src=\"https://pica.zhimg.com/v2-da733fb21c7888dfa99b82ffa3f1128f_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"1401\" data-size=\"small\" data-caption=\"马自达原厂油\" data-watermark=\"watermark\" data-original-src=\"v2-da733fb21c7888dfa99b82ffa3f1128f\" data-watermark-src=\"v2-0ee1a07941ba427bccbddca95b95f1ee\" data-private-watermark-src=\"v2-90f190d20dafffd6ef5f05b861bc960e\"></p>\n<p></p>\n<a data-draft-node=\"block\" data-draft-type=\"ad-link-card\" data-ad-id=\"fee_ed738f18b8becbc84659cc10797a3fbf\"></a><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhang-xiao-5-34-17?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">张立晨</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/57394330/answer/2424718099?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">5 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/266403361?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">请问我的车子4个月前换的机油，现在要开800公里想要换机油或者带上机油吗？</a><br><a href=\"http://www.zhihu.com/question/64932840?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">机油如果加混了怎么处理？</a><br>\n","link":"http://www.zhihu.com/question/57394330/answer/2424718099?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"智能座舱最理想的交互模式应该是什么样的？目前己经发展到了哪个阶段？","date":"2022-04-06 10:03:57","description":"\n<p data-pid=\"7RMD9iNE\">刚拜读完 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/bdccf5497f35d71f2eab387e9c0c6138\" data-hash=\"bdccf5497f35d71f2eab387e9c0c6138\" data-hovercard=\"p$b$bdccf5497f35d71f2eab387e9c0c6138\">@李星宇</a> 的回答，非常专业，全面，但是我想做一些补充，也是我最近一段时间的思考。</p>\n<p data-pid=\"W15N1Ng-\">我的其中一个研究方向是“Human AI Interaction”(HAAI)，这个概念是伴随着人工智能的兴起而不断发展起来的一个新方向，大的背景是2019年，MIT领衔，哈佛、耶鲁联合微软、谷歌、Facebook等公司的多位研究者，在 Nature 发表了一篇以 “Machine behaviour”为题的文章，宣告“机器行为学”诞生。</p>\n<p data-pid=\"C6X9-FBV\">有意思的是，该学科将人工智能视为一系列有自己行为模式及生态反应的个体，认为机器行为会反作用于人的行为，同时人与人工智能之间也会派生出合作行为，“机器行为学”与HAAI密不可分，汽车作为智能自动化机器和多种人机交互技术的载体，是HAAI纯天然的研究对象。</p>\n<p data-pid=\"mfCO7BMq\">先说说智能化，大家猜一猜，<b>我们的智能汽车的智商有多高？</b></p>\n<p data-pid=\"hfwx1VZ1\">我在清华大学做过一个智能体的智商、共情能力和拟人化的研究，目前还在进行，中间我们把市面上的语音助手、车机助手做过简单的评测，从智力上来看，目前的<b>语音助手（包括车机）智商与3-4年级的儿童等级类似，共情能力和拟人化较低（总分10分，均值在6以下）</b>。</p>\n<p data-pid=\"2LB5bmeu\">这意味着目前的<b>智能座舱“不足够智能”，或者说处于“弱人工智能”阶段，拟人化也处于比较初级的“形象拟人”而非“灵魂拟人”阶段，我们把智能座舱的“智能”高估了。</b></p>\n<p data-pid=\"3KQfJRIM\">如果把智能座舱的阶段抽象归纳为3个阶段进程的话，可以归纳成：<b>用户主动式交互---机器建议式交互---机器主动式交互</b>，我们目前处于用户主动式交互到机器建议式交互到过渡期。而我们能推理出用户输入，机器输出/反馈和场景信息采集在这3个阶段进程里的曲线趋势如图所示。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-24e3b620168af99c1a1b7fb161fcf7db_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"687\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-24e3b620168af99c1a1b7fb161fcf7db\" data-watermark-src=\"v2-c461631d1cab4e79effa0289cb5d7451\" data-private-watermark-src=\"v2-267d8a3f68238f5823c8e55cd63e2b59\"></p>\n<p data-pid=\"j1niNrK9\">再回到汽车人机交互上来，<b>我们做过研究，人机交互的种类非常多</b>（视听触嗅），交互的方式、预警的方式并不是越多越好，我们的研究结果表明，预警方式视听触三通道预警和听触双通道预警的区别不大，而车内交互方式并非越多越好（2-3种），<b>从研究的角度看，我希望“交互看不见”、“返璞归真”。</b></p>\n<h3>让“交互看不见”</h3>\n<p data-pid=\"BhM7pLb8\">为什么都2022年了，还没有一个好的国产车机产品？就是因为我们在“满足五感”的刺激，而非把交互关在智能后面。</p>\n<p data-pid=\"bxqx_w13\"><a href=\"https://www.zhihu.com/search?q=%E4%BA%BA%E6%9C%BA%E4%BA%A4%E4%BA%92&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A%22817528452%22%7D\" class=\"internal\">人机交互</a><b>的本质，仍然是通过智能化及数字化交互技术，进一步加强和延伸人与周围事物的自然交互能力，所有人机交互方式都是在扩展人的感觉和知觉能力，从而实现自然流畅的互动。</b></p>\n<p data-pid=\"YFhrD06q\">人工智能时代到来，人与机器的关系、人与数据的关系、人与信息的关系在发生着本质的变化，在这个数字化的智能时代，传统的<b>基于从命令到反馈的人机交互方式</b>正在被打破。被动交互的逻辑很简单，由人给机器发号施令，机器执行并输出结果反馈给人。<b>整个过程直接高效，但是并不智能。</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-a7d78bce37a1906e32d88b9ab33e5820_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1000\" data-rawheight=\"640\" data-size=\"normal\" data-caption=\"GUI\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Tndxbpob\">基于大数据并融合多传感器信息的<b>“主动交互”，与被动交互相反，由机器为起点，主动输出执行结果或使用建议给用户，用户根据结果或提供的建议完成具体的交互任务，在这个过程中，机器通过分析传感器获得的大数据信息，主动的从外界的信息中做出判断，</b>计算出用户在当前情境下用户需要的信息，不再需要人来输入或下达命令，而这个过程的输入和输出完全由机器来完成。</p>\n<p data-pid=\"ttb-zZC9\">我个人也比较认同“宁静技术”（Calm technology）的人机交互方向，<b>人机交互逐渐变得隐匿和不可见（invisible），通过对用户的情景感知（contextual awareness）能力，最小化用户的注意力，让计算设备在背景中运行。</b></p>\n<h3>\n<br>“返璞归真”</h3>\n<p data-pid=\"ADxDdsBR\"><br>汽车的根本，就是把我们安全、高效的（再加个舒适）从A运到B，目前对于安全我们还没有完全弄明白，就开始内卷到各种大屏、视觉显示、垃圾功能的“堆料”上面。</p>\n<p data-pid=\"7KS1u8RB\">乱花渐欲迷人眼，浅草才能没马蹄。人是欲望的动物，不要指望在给予了“视觉刺激”、“自动化依赖”后，用户能够一哆嗦从梦中回来，机器的行为会重塑人的大脑、重塑人的行为，很多时候并不可逆。大屏和大屏背后的内容就是视觉刺激，内容越丰富，对用户的安全影响越大，智能辅助驾驶也一样，适度依赖和绝对依赖之间的界限并不清晰。</p>\n<p data-pid=\"kz1C897d\">所以我们需要返璞归真，少制造噱头，多想想用户安全。</p>\n<p data-pid=\"4Ug7xs45\">另外说一下我的专栏：</p>\n<a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://zhuanlan.zhihu.com/p/153143673\" data-size=\"small\" data-image=\"https://pic2.zhimg.com/v2-75def099865f6e6fdc7be513c1a07a74_r.jpg?source=b1748391\" data-entity-type=\"article\" class=\"internal\">当我们提到汽车HMI设计时，我们到底在设计什么？</a><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://www.zhihu.com/column/automotiveHMI\" data-image=\"https://pic1.zhimg.com/v2-33c576c892c63ea300332acdb69b32ed_l.jpg?source=b1748391\" data-image-width=\"300\" data-image-height=\"300\" class=\"internal\">汽车HMI</a><a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://zhuanlan.zhihu.com/p/141339932\" data-size=\"small\" data-image=\"https://pic2.zhimg.com/v2-ccc4d8abec25a24fc6638c5191892bdc_720w.jpg?source=b1748391\" data-entity-type=\"article\" class=\"internal\">智能座舱里最理想的交互体系是什么？</a><p data-pid=\"ZOaAFklh\"><b>以上只是补充，给大家提个醒。</b></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wyhdesign?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">王亚辉</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/515398912/answer/2418504377?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">20 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/26977271?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">现在的智能家居方案，符合你的预期吗？你理想中的智能家是什么样的？</a><br><a href=\"http://www.zhihu.com/question/266636086?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">大家理想中的智能汽车钥匙是什么样的？</a><br>\n","link":"http://www.zhihu.com/question/515398912/answer/2418504377?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"送码 | 为了在 Safari 中愉快地摘录文章，我开发了一个 Obsidian 插件","date":"2022-04-06 09:30:03","description":"这款扩展一直都是我配合 Obsidian 使用的利器，但是自从我将 safari 当做主流浏览器（没错它现在很棒了）后就遇到麻烦了，由于有大量的文章需要摘录，就会不停的在两个浏览器来回切换，为了解决这个问题，我就想有没有可能在 Safari 中实现同样的扩展。于是就开始着手研究如何开发 Safari 浏览器扩展，经过一番折腾，终于顺利上架 Mac App Store，所以今天就在少数派跟大家介绍一下插件的使用。<a href=\"https://sspai.com/post/72231\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72231"},{"title":"如何评价《境界触发者》漫画第221、222话？","date":"2022-04-06 09:07:51","description":"\n<p data-pid=\"LiRptHRS\">话不多说，直接进入正题吧。本月更新的《境界触发者》漫画221-222话基本还是在给模拟测试的第二天各支队伍做总结。</p>\n<hr>\n<h2>一、221-222话内容汇总</h2>\n<p><img src=\"https://pic3.zhimg.com/v2-0a49b89cfe7dc14ccac870ac5396dadb_720w.jpg?source=b1748391?rss\" data-caption=\"承接220话结尾\" data-size=\"normal\" data-rawwidth=\"573\" data-rawheight=\"546\" data-watermark=\"watermark\" data-original-src=\"v2-0a49b89cfe7dc14ccac870ac5396dadb\" data-watermark-src=\"v2-ba6fcfa6a98adf0fb494ff3ffa020d1b\" data-private-watermark-src=\"v2-e665e356ddbe69f9ad82ff1339bdede2\"></p>\n<p data-pid=\"hcygYGyM\">221话开头承接了220话结尾了，对比220话20P讲解5支队伍的当日总结，221-222话倒是将38P的内容展开到了4支队伍上，横向对比各支队伍的内容更加充裕了，也花了相当多的笔墨着重在了柿崎、水上的队伍上。</p>\n<p data-pid=\"mbNSSps8\">之前青稚218-219话分析内容中预测柿崎、来马队终于如愿登场。</p>\n<p data-pid=\"7Fpdgsrd\">221话主要还是围绕在第二天的特别课题回答人选的反馈上，二宫、柿崎两只队伍都算是在这个人选上获得了负反馈，包括且不限于绘马的碎碎念、太一双目失去了生活的希望。</p>\n<p data-pid=\"K_hbE_ul\">222话则是变成了对水上的声讨会和弓场的自我声讨。</p>\n<p data-pid=\"ndJzNHiB\">最终在模拟测试第三天的到来，水上的原队友隐岐看穿了“幕后黑手”水上作为本月漫画的结尾。</p>\n<p><br></p>\n<h2>二、队长们眼中的远征测试选拔</h2>\n<p><img src=\"https://pic3.zhimg.com/v2-16bb671c6880290cbd38e4676369ed85_720w.jpg?source=b1748391?rss\" data-caption=\"不同人对测试的不同看法\" data-size=\"normal\" data-rawwidth=\"336\" data-rawheight=\"241\" data-watermark=\"watermark\" data-original-src=\"v2-16bb671c6880290cbd38e4676369ed85\" data-watermark-src=\"v2-2d4facc86801ccf997e44f209d45f66f\" data-private-watermark-src=\"v2-f66dfa88c051ef462cf7e45240ff90ac\"></p>\n<p data-pid=\"BHKeMVpb\">221话中借东队长的口，说出了不同人对于远征测试选拔的不同看待方式。二宫眼中的测试选拔，是锻炼新人。柿崎眼中的测试选拔，除了让犬饲和影浦带动队伍战力，也有另外的考量。水上虽然骚操作不断，但对于队伍的走向有着清晰的认识。诹访不止一次刷新了读者对他的观感。220话中王子也说课题分数不重要，有趣才最重要。村上队伍如同学霸们的一场学习研讨会。歌川队就像是兄弟姐妹的家庭交流。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-4c67fc2491ef7709013f5db0309c133b_720w.jpg?source=b1748391?rss\" data-caption=\"队长原因不明确的若村\" data-size=\"normal\" data-rawwidth=\"365\" data-rawheight=\"231\" data-watermark=\"watermark\" data-original-src=\"v2-4c67fc2491ef7709013f5db0309c133b\" data-watermark-src=\"v2-92c8ae19297e1b902ea596d44f8552a1\" data-private-watermark-src=\"v2-ac0c25cbb6659b0abe817638a837dcd7\"></p>\n<p data-pid=\"VIhmf5kN\">除了现在依旧不太明朗的若村、北添，其他队伍的队长（包括古寺和来马）似乎对于这一场远征测试选拔都有自己不同的看法。</p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-deff9392239a8cdff91ce44ac7c2a409_720w.jpg?source=b1748391?rss\" data-caption=\"若村不像带有任务的样子\" data-size=\"normal\" data-rawwidth=\"568\" data-rawheight=\"375\" data-watermark=\"watermark\" data-original-src=\"v2-deff9392239a8cdff91ce44ac7c2a409\" data-watermark-src=\"v2-cfbdea03ac979cf06b53572e57799b4d\" data-private-watermark-src=\"v2-f0fb014680f2880d771c6e7d83a13d93\"></p>\n<p data-pid=\"ZZMEbDJf\">之前我在 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/79ebfff6feb3423ea6ab16f6550454ac\" data-hash=\"79ebfff6feb3423ea6ab16f6550454ac\" data-hovercard=\"p$b$79ebfff6feb3423ea6ab16f6550454ac\">@云吞花卷</a> 的想法下评论，感觉队长们似乎都带着某种任务、目的参与了这场远征测试。但细想一番，这个观点似乎不太可论证，原因是在众多队长里，若村是这个观点最大的漏洞，总不会就若村一个人没有任务吧？</p>\n<p><img src=\"https://pica.zhimg.com/v2-6e1b1fb456064a10e99ed051242b187c_720w.jpg?source=b1748391?rss\" data-caption=\"个个都是“懂事长”\" data-size=\"normal\" data-rawwidth=\"567\" data-rawheight=\"223\" data-watermark=\"watermark\" data-original-src=\"v2-6e1b1fb456064a10e99ed051242b187c\" data-watermark-src=\"v2-f56d2e26a308e5eb4a281e4cedabf77a\" data-private-watermark-src=\"v2-22bfffb912bc8f54e40b58da15622eaf\"></p>\n<p data-pid=\"qDUgbxSg\">因此转念一想，每个队长的看待方式，更像是这群智商超过200点的优秀队员们对于边境高层设置远征测试选拔的目的有了一个清晰的认知。毕竟连边境高层们对于队员也点评为“太懂事了”。这一圈“懂事长”应该对远征测试做了不少的思考，从而将他们的想法付之于测试的环节中。</p>\n<p><br></p>\n<h2>三、特别课题的延申</h2>\n<p><img src=\"https://pica.zhimg.com/v2-6d186a32a5886f33945656ee0a774f62_720w.jpg?source=b1748391?rss\" data-caption=\"虚心请教\" data-size=\"normal\" data-rawwidth=\"242\" data-rawheight=\"355\" data-watermark=\"watermark\" data-original-src=\"v2-6d186a32a5886f33945656ee0a774f62\" data-watermark-src=\"v2-307799f33f05076995329230d4a42e27\" data-private-watermark-src=\"v2-b792b02b6d2d9c5f428c84095344cfc3\"></p>\n<p data-pid=\"EYD9XoCY\">221话中，木虎听从了奥寺的建议，虚心向东队请教特别课题答案的差异。从东队的回应上看，东队是在木虎对于1对1的认知基础上进行了延申，加深了3队混合对战后带来的战术增益。这个增益对于边境的优秀成员是一个正向的补充，让成员更加飞速成长。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-bfd48af74b53928c70875d769d16b1d1_720w.jpg?source=b1748391?rss\" data-caption=\"思考解题的全面性\" data-size=\"normal\" data-rawwidth=\"688\" data-rawheight=\"265\" data-watermark=\"watermark\" data-original-src=\"v2-bfd48af74b53928c70875d769d16b1d1\" data-watermark-src=\"v2-59a4e865aaea7c631e1371a0ae7d2d48\" data-private-watermark-src=\"v2-f87e04fa46ec85e4c43e430784652f95\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-4bf54bddee19d98702b9b3b837711a3c_720w.jpg?source=b1748391?rss\" data-caption=\"单一观点的深入解析\" data-size=\"normal\" data-rawwidth=\"731\" data-rawheight=\"405\" data-watermark=\"watermark\" data-original-src=\"v2-4bf54bddee19d98702b9b3b837711a3c\" data-watermark-src=\"v2-f31a25270e61312e2dc0d62460379c21\" data-private-watermark-src=\"v2-1f27c5651ad4d999979de8d1e56d8fa9\"></p>\n<p data-pid=\"hRyRNRMR\">这里面能看出木虎和东两人思考问题的不同，木虎是从题干明面上进行的反向推导，务求追寻全面的解答。东队则是从其中一个点进行延申，这种做法类似我们生活中常说的，精于某一个领域或方向。这恰好也展现了木虎作为精英部队的全面性，而东队则是边境战术/狙击手的传授员。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-c69cf179cad2e1d94646533982c5f888_720w.jpg?source=b1748391?rss\" data-caption=\"面授机宜\" data-size=\"normal\" data-rawwidth=\"682\" data-rawheight=\"461\" data-watermark=\"watermark\" data-original-src=\"v2-c69cf179cad2e1d94646533982c5f888\" data-watermark-src=\"v2-ecd5bdf2022d48d4f0d3ed16e17729e0\" data-private-watermark-src=\"v2-93ad9d4c44fc935ff9e8e3964592ce18\"></p>\n<p data-pid=\"QWppJp9Z\">当然，受到木虎和绘马二人的反馈，东队也开始了他自我定位的导师作用，开始向“徒孙”绘马面授机宜。</p>\n<p><br></p>\n<h2>四、犬影之争，殃及太一</h2>\n<p><img src=\"https://pic1.zhimg.com/v2-53f2bee1633bcc973c08b4a2a347900f_720w.jpg?source=b1748391?rss\" data-caption=\"被选剩下的太一\" data-size=\"normal\" data-rawwidth=\"288\" data-rawheight=\"333\" data-watermark=\"watermark\" data-original-src=\"v2-53f2bee1633bcc973c08b4a2a347900f\" data-watermark-src=\"v2-5c181a077414ce01e31edc1ac6a8b73f\" data-private-watermark-src=\"v2-aebf40fd936c7272327e76504d76707f\"></p>\n<p data-pid=\"KylVMS5F\">太一失去希望其实在204话就有铺垫，太一当时就被队长们选人公开处刑，给太一本话“黑化”埋下了伏笔。真正让太一彻底眼神空洞则是犬饲在影浦在场选择“直言不讳”、柿崎在下决断选择犬饲三重的因素下所导致的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-03c2fcf50e71a2f07a374f782f2fee04_720w.jpg?source=b1748391?rss\" data-caption=\"对比柿崎的做法，来马更懂得照顾他人的情绪\" data-size=\"normal\" data-rawwidth=\"611\" data-rawheight=\"212\" data-watermark=\"watermark\" data-original-src=\"v2-03c2fcf50e71a2f07a374f782f2fee04\" data-watermark-src=\"v2-6490e56c62901e1b45c567091e155587\" data-private-watermark-src=\"v2-1fa866056648803ae98c02c5ff593df2\"></p>\n<p data-pid=\"jueHzm0u\">这段剧情也可以反向证明为何铃鸣第一最受尊重的是佛系的来马队长。柿崎虽暖，但他容易摇摆不定，做出决定也容易接收一时的建议。来马队长虽然佛系，但对于所有队员的情绪都非常照顾，太一此刻的情绪不对，来马会先解决太一所表现出来的情绪问题。（也可以参考钢情绪低落时来马的处理方式）</p>\n<p><img src=\"https://pica.zhimg.com/v2-df8599217c9c6735914409c88d22390e_720w.jpg?source=b1748391?rss\" data-caption=\"柿崎的做法也不能说是错误的\" data-size=\"normal\" data-rawwidth=\"645\" data-rawheight=\"610\" data-watermark=\"watermark\" data-original-src=\"v2-df8599217c9c6735914409c88d22390e\" data-watermark-src=\"v2-b8a002a263bdff80a26eb8f1311de489\" data-private-watermark-src=\"v2-b95ee806be80c27f319dcef60a95c0b4\"></p>\n<p data-pid=\"MLAkpsq7\">但柿崎有柿崎的做法，柿崎及时调停了犬影之争，安抚太一并不能说是错的。柿崎的性格里有容易摇摆的倾向，也需要犬饲这样能够帮助下决断的队员，柿崎也不是忽略太一的情绪，只是说因为前文阐述的三重因素的影响下，让太一有点钻牛角尖了。</p>\n<p data-pid=\"Oid8kuI3\">影的表现跟他平常护犊子的形象一致，队友想要做什么事情，就让他做好了，做好还是没做好不重要。这点在北添和绘马身上都有一样的体现。</p>\n<p data-pid=\"RrQhL5HU\">犬饲的劝说则有点二宫的风格，虽然事实都对，却不看场合。按之前的人设来说，犬饲虽然有些腹黑，但与人相处还是稍微有些圆滑的。只能说这次的“直言不讳”跟影浦在场有很大关联了，犬饲极力在调和维护自己跟影浦的关系，但这次不幸殃及到了太一身上了。</p>\n<p><br></p>\n<h2>五、“吹牛大王”水上的第一次大危机</h2>\n<p><img src=\"https://pic2.zhimg.com/v2-bdc45d10a3d612960c2f7054b096d27b_720w.png?source=b1748391?rss\" data-caption=\"水上声讨会\" data-size=\"normal\" data-rawwidth=\"399\" data-rawheight=\"327\" data-watermark=\"watermark\" data-original-src=\"v2-bdc45d10a3d612960c2f7054b096d27b\" data-watermark-src=\"v2-fe35fef46edecd972ae670384ec5658a\" data-private-watermark-src=\"v2-62343d8be32fe49c1c4a1fedec2fc92f\"></p>\n<p data-pid=\"Dg3NO-JS\">水上队伍的危机、照屋敏锐的洞察力，我已经说了不下三次了。此次水上险些被戳破漏洞，还是靠水上不太圆滑的危机处理勉强逃过一劫。但也因为这个处理不够圆滑，遭到了大姐头今的训斥。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-2b4e1234347d11da0483e36d67672a37_720w.png?source=b1748391?rss\" data-caption=\"虽然干了坏事，但也知道坏事的后果\" data-size=\"normal\" data-rawwidth=\"614\" data-rawheight=\"511\" data-watermark=\"watermark\" data-original-src=\"v2-2b4e1234347d11da0483e36d67672a37\" data-watermark-src=\"v2-64374126a273117cf285095a25202e46\" data-private-watermark-src=\"v2-62f3cd904b06781766f2a3df874ce284\"></p>\n<p data-pid=\"LEAkVcT8\">水上面对今和荒船倒是直言自己做了坏事，却不愿意将事实拖出，其实也是水上自己对自己的行为有清晰的考虑。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-219a1ae4213f5b07cc36065f8c5aa8a3_720w.png?source=b1748391?rss\" data-caption=\"“完全不对”却“干得漂亮”\" data-size=\"normal\" data-rawwidth=\"598\" data-rawheight=\"248\" data-watermark=\"watermark\" data-original-src=\"v2-219a1ae4213f5b07cc36065f8c5aa8a3\" data-watermark-src=\"v2-8933d1a0835be00576bf74dc5e46287f\" data-private-watermark-src=\"v2-57cdba5be6d75ad38d4020fae42f6ef3\"></p>\n<p data-pid=\"5b-b0Ndr\">一本正经的今、樫尾在这个队伍中确实能给“没有一句实话”的水上做合格的辅助，这也是为什么水上来了一句“完全不对”却“干得漂亮”评价樫尾，荒船资深的带队经验也是这支队伍最大的主心骨。</p>\n<p data-pid=\"J9DXukII\">然而，部分队伍已经看穿了水上的骚操作，因此后续5天的模拟对战，水上也难以再如同第二天一样保持不败，反馈到当日的成绩中，届时照屋还是会质疑水上的行为，荒船和今已经知道水上干坏事了，也不会偏袒水上，所以水上队长的职责危机还会出现，一旦被抓住实锤，水上就容易被正经的队员们孤立了。</p>\n<p><br></p>\n<h2>六、严于律人严于律己</h2>\n<p><img src=\"https://pic3.zhimg.com/v2-f300759db8ba33993b959cba3f77e594_720w.png?source=b1748391?rss\" data-caption=\"你告诉我上面的“顺毛”和下面Q版的“翘毛”是同一个人？\" data-size=\"normal\" data-rawwidth=\"606\" data-rawheight=\"514\" data-watermark=\"watermark\" data-original-src=\"v2-f300759db8ba33993b959cba3f77e594\" data-watermark-src=\"v2-db6d5bb19c1ff0997375cfb6720fe452\" data-private-watermark-src=\"v2-2bf81d5566ad65122fd5733fcfdf7ad4\"></p>\n<p data-pid=\"zgtEp3Xn\">恶鬼副官弓场一板一眼的性格读者们都见识过了，所以看到弓场的表现并不意外，前文就说来马的佛性与照顾别人情绪让队员大受尊重，对较真的弓场来说更像一种责任的托付。读者们意外的是小荒井非触力能体的发型，原本跳脱活跃的小荒井非触力能体居然像个安静的小孩是所有读者都没想到。</p>\n<p><br></p>\n<h2>七、水上的秘密不再是秘密</h2>\n<p><img src=\"https://pic3.zhimg.com/v2-ead9024cdca23a28f10377d792d95eab_720w.png?source=b1748391?rss\" data-caption=\"来自于雀友的察觉\" data-size=\"normal\" data-rawwidth=\"655\" data-rawheight=\"446\" data-watermark=\"watermark\" data-original-src=\"v2-ead9024cdca23a28f10377d792d95eab\" data-watermark-src=\"v2-1b19900cf2e04c053fa47f478503e527\" data-private-watermark-src=\"v2-9b350170c44f690586bc87bd979921a5\"></p>\n<p data-pid=\"TBbcxedn\">其实这个在216-217话中已有暗示，当时修提出水上整齐划一的行动时，诹访已有察觉。（毕竟是一起打麻将的雀友）</p>\n<p data-pid=\"YdA5EUFW\">而这个秘密一旦被识破，其他队伍就会有效仿或针对的方向了，一些队伍可以合理分工，进一步提升获取分数的效率，一些队伍可以反过来针对一个人控制太多战旗的弊端（例如操作员同时兼顾4名防御人员的负担），从而打破水上的不败金身。</p>\n<p data-pid=\"jM0MqjGz\">但这也必须说一句，仅仅1天且对战过一局比赛，就能敏锐觉察到队伍的战术风格，从而推导出幕后的真相，边境的聪明人确实太多了。</p>\n<p><br></p>\n<h2>八、223-234话的预测</h2>\n<p data-pid=\"X4dkv_sC\">到此本话内容结束，细节方面我们一会再说，青稚先对6月号的剧情进行一波猜测。</p>\n<p data-pid=\"ANO-4a3M\">首先，223话肯定会延续本话结尾，将上述水上的做法进行合理的分析利用。</p>\n<p data-pid=\"LHBnaFpr\">其次是220话中导致歌川队落败的若村队已经三话没有出现了，若村队的谜题不比其他队伍少。仅若村队排名垫底，第三天就必须有所调整，加上若村队这场唯一的胜迹就有疑点，若村、休斯、半崎之间隐隐约约存在矛盾伏笔，日佐人情商虽高，却无法照顾到队伍里其他三名成员，若村本人的队长疑云至今也没有解释。作为远征测试选拔重点刻画的队伍之一，连续四、五话不出现是不合清理的，那么223、224话，若村队出现应该是显而易见的。</p>\n<p data-pid=\"B2xr-sSu\">220、221、222话没有出现的北添队估计会酌情在223、224话略有提及，但不一定提及，毕竟北添队的成员目前来讲，笔墨着重在操作员小华上，其他成员在未来未必有很大的影响力，因为我预计只有20%的概率会有北添队的刻画。</p>\n<p data-pid=\"QiNOpuOW\">而内容应该着重在队伍的分工分派上。毕竟经过了2天的磨合，各支队伍也能看出模拟战斗、特别课题才是封闭测试的关键，所以重新分配安排将是223、224的一个看点。</p>\n<p><br></p>\n<p data-pid=\"LWqjhB_r\">本话内容分析与猜测就到此为止，下面还是惯例一些漫画的细节和幽默一刻。</p>\n<h2>九、有趣的细节</h2>\n<p><img src=\"https://pic2.zhimg.com/v2-314941522e87ab4150dd56c63420bbdc_720w.png?source=b1748391?rss\" data-caption=\"“知人善用”还是专项补习？\" data-size=\"normal\" data-rawwidth=\"328\" data-rawheight=\"396\" data-watermark=\"watermark\" data-original-src=\"v2-314941522e87ab4150dd56c63420bbdc\" data-watermark-src=\"v2-c59c846e6dce36213ff07f98985c96d0\" data-private-watermark-src=\"v2-63049604d43eee775a32e8e87c33b4d0\"></p>\n<p data-pid=\"l1buMmp7\">1、另一个方面的“知人善用”</p>\n<p><img src=\"https://pic2.zhimg.com/v2-886c5540baf984086f9bf7ee1492a3c6_720w.png?source=b1748391?rss\" data-caption=\"“布布”为赢\" data-size=\"normal\" data-rawwidth=\"647\" data-rawheight=\"340\" data-watermark=\"watermark\" data-original-src=\"v2-886c5540baf984086f9bf7ee1492a3c6\" data-watermark-src=\"v2-22e27c1990a7aa08351e111385448047\" data-private-watermark-src=\"v2-53c7bbe06fe7e60917612e74d8da4b04\"></p>\n<p data-pid=\"rT1JIwHF\">2、战术猜拳</p>\n<p><img src=\"https://pica.zhimg.com/v2-e0f8ecc6ea107e6a59c40bf000430c49_720w.png?source=b1748391?rss\" data-caption=\"三个感觉派狙击手\" data-size=\"normal\" data-rawwidth=\"325\" data-rawheight=\"275\" data-watermark=\"watermark\" data-original-src=\"v2-e0f8ecc6ea107e6a59c40bf000430c49\" data-watermark-src=\"v2-a893d19b2cb5abd5d5e8d3a5496ea916\" data-private-watermark-src=\"v2-af0efd8b80226df949cab8e5a4f00dac\"></p>\n<p data-pid=\"yFQ9tPYo\">3、白鸟：来自队友的背刺</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ef63bfb1573f70c361a36713faa78cf0_720w.png?source=b1748391?rss\" data-caption=\"徒弟和“徒孙”\" data-size=\"normal\" data-rawwidth=\"646\" data-rawheight=\"233\" data-watermark=\"watermark\" data-original-src=\"v2-ef63bfb1573f70c361a36713faa78cf0\" data-watermark-src=\"v2-4c84b73214597b0697e140fa0a89083d\" data-private-watermark-src=\"v2-4bb1da50f38aa7c2e0b46ba97a687885\"></p>\n<p data-pid=\"nUQPm8DN\">4、第三代徒弟：奥寺；不知道第几代的徒孙：古寺（东-奈良坂-古寺）</p>\n<p><img src=\"https://pic4.zhimg.com/v2-b5728dca0c849563b870ab442f6a7814_720w.png?source=b1748391?rss\" data-caption=\"失去了希望的眼神\" data-size=\"normal\" data-rawwidth=\"645\" data-rawheight=\"283\" data-watermark=\"watermark\" data-original-src=\"v2-b5728dca0c849563b870ab442f6a7814\" data-watermark-src=\"v2-f4b8448593dfd8cfd02719fe2772a9e8\" data-private-watermark-src=\"v2-3421e73366739798fe9d477553f8d1af\"></p>\n<p data-pid=\"3nO7z9d-\">5、备受打击的太一</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b88ba83e338d3270b4bd8b2531f149b5_720w.png?source=b1748391?rss\" data-caption=\"我的忍道就是有话直说\" data-size=\"normal\" data-rawwidth=\"495\" data-rawheight=\"411\" data-watermark=\"watermark\" data-original-src=\"v2-b88ba83e338d3270b4bd8b2531f149b5\" data-watermark-src=\"v2-b4841ba0ab4eb3d02d8f097c3d390144\" data-private-watermark-src=\"v2-12bf46dcfb5f2727206fc811332ce3b9\"></p>\n<p data-pid=\"I_Vsq7j1\">6、伤我最痛的人，我还极力维持这段友谊。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-34bf10b806ce83e5a274185119db34a1_720w.png?source=b1748391?rss\" data-caption=\"水上模仿秀\" data-size=\"normal\" data-rawwidth=\"611\" data-rawheight=\"390\" data-watermark=\"watermark\" data-original-src=\"v2-34bf10b806ce83e5a274185119db34a1\" data-watermark-src=\"v2-4a8e9523590e6acd3652571cfe99fefd\" data-private-watermark-src=\"v2-f1468550174312d605e7aa8e32c50d5a\"></p>\n<p data-pid=\"JABlGzxd\">7、不愧是生驹的队友</p>\n<p><img src=\"https://pic2.zhimg.com/v2-478794ee6000ddad77b0790665d0b6be_720w.png?source=b1748391?rss\" data-caption=\"一切为了战术\" data-size=\"normal\" data-rawwidth=\"197\" data-rawheight=\"322\" data-watermark=\"watermark\" data-original-src=\"v2-478794ee6000ddad77b0790665d0b6be\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"YLx9pMdQ\">8、战术性干坏事</p>\n<p><img src=\"https://pic1.zhimg.com/v2-c248da148706ecc4fdbaaf5befdd2f61_720w.png?source=b1748391?rss\" data-caption=\"说服我自己\" data-size=\"normal\" data-rawwidth=\"604\" data-rawheight=\"456\" data-watermark=\"watermark\" data-original-src=\"v2-c248da148706ecc4fdbaaf5befdd2f61\" data-watermark-src=\"v2-7ba3a01d2d5c298dee1059f16c8984e6\" data-private-watermark-src=\"v2-19e7aad82a385fc4aa49392644169aa3\"></p>\n<p data-pid=\"U8naOT33\">9、“樫尾，干得漂亮”</p>\n<p><img src=\"https://pic3.zhimg.com/v2-48b27c0675e06bed41ae6fbd3dca3d1a_720w.png?source=b1748391?rss\" data-caption=\"别在意，你就是菜\" data-size=\"normal\" data-rawwidth=\"606\" data-rawheight=\"288\" data-watermark=\"watermark\" data-original-src=\"v2-48b27c0675e06bed41ae6fbd3dca3d1a\" data-watermark-src=\"v2-ac01427b62683651dbccddbcc92bd6c7\" data-private-watermark-src=\"v2-0126200e6ab0377688560bf25e9c108c\"></p>\n<p data-pid=\"DJzjzYo7\">10、孩子，瞎说什么大实话呢，面前可是魔鬼副官</p>\n<p><img src=\"https://pic2.zhimg.com/v2-50bea8a78f2a2ef04e455c3d1c078298_720w.png?source=b1748391?rss\" data-caption=\"诹访圈粉（1/1）\" data-size=\"normal\" data-rawwidth=\"343\" data-rawheight=\"291\" data-watermark=\"watermark\" data-original-src=\"v2-50bea8a78f2a2ef04e455c3d1c078298\" data-watermark-src=\"v2-6cb1ad40f81ff08293bea40aa8aa9e85\" data-private-watermark-src=\"v2-d9e126437f6e2d65d9a57b9740ba43b5\"></p>\n<p data-pid=\"L6Pg0mrO\">11、不止修一个有同感，广大的读者也是这么想的。</p>\n<p><br></p>\n<hr>\n<p data-pid=\"Ll-zKpUm\">本话结束，下个月6月号再见。</p>\n<p data-pid=\"Vv0lTnvs\"><sup data-text=\"境界触发者漫画221话\" data-url=\"https://manga.bilibili.com/mc24770/734008?from=manga_detail\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\">[1]</sup><sup data-text=\"境界触发者漫画222话\" data-url=\"https://manga.bilibili.com/mc24770/734009?from=manga_detail\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"2\">[2]</sup></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/qing-zhi-han-bing?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">青稚寒冰</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/525999662/answer/2426086965?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">1 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/34365116?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价《冷面天使》这部漫画？？</a><br><a href=\"http://www.zhihu.com/question/437799299?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价漫画《铂金终局》的结尾?</a><br>\n","link":"http://www.zhihu.com/question/525999662/answer/2426086965?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"化身语音效果最自然的听书工具：Edge 100 稳定版亮点功能速览","date":"2022-04-06 08:00:00","description":"就在上周，微软也正式发布了 Edge 100 稳定版更新，相比前几个以安全更新为主的版本，Edge 100 在移动端和桌面端都带来了不少值得关注的新功能。<a href=\"https://sspai.com/post/72480\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72480"},{"title":"博采众长也不忘初心，笔记+日程管理应用 Agenda 14.0 带来了什么变化？","date":"2022-04-06 06:40:34","description":"公允地说，由于这两年 Notion、Obsidian 等笔记应用，或称知识管理应用的兴起，Agenda 的上述更新很难说得上多么创新。但是，对我这种忠实的 Agenda 用户来说，新补足的功能为这款小而美的应用增加了更多的亮点，让它原本的功用发挥出了更大的价值，日臻完美。<a href=\"https://sspai.com/post/72479\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72479"},{"title":"手中有粮，心里不慌：如何储备自己的物资「大后方」","date":"2022-04-06 03:30:00","description":"生存危机未必只发生在远离文明世界的地方。（各种突发事件）将切断所有的日常服务和食物供应。……在大城市，商店的食品架上将空空如也……公园和花园里的植物皮将会被剥光……（在正常的秩序恢复前）你只有依靠自身 ...<a href=\"https://sspai.com/post/72477\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72477"},{"title":"为什么从数据上看，宝马五系比三系宽的不多，但坐进去之后感觉宽很多呢？","date":"2022-04-06 02:59:42","description":"\n<p data-pid=\"F77CoZkp\">补个视频版：</p>\n<a href=\"https://www.zhihu.com/video/1494307622509088768\"></a><p><br></p>\n<p data-pid=\"XDQiyDcG\">先放结论：<b>车辆外廓宽度只能决定我们乘坐空间的上限，而不能决定它的下限</b><br>再放个阅读提示哈：<i>都是小儿科的科普，车辆工程或汽车从业者应该不用看</i></p>\n<p data-pid=\"RB7Cyomk\">下限的不同就导致：<br>有些看起来很宽的车，坐起来还真不一定就宽。<br>有些车看起来没宽多少，坐起来却宽了不少。<br>就像3系与5系的一样<br>外廓尺寸对比：三系宽1827，五系宽1868，明明只宽了4厘米， 内部实际空间的实际体验差距却很大。</p>\n<p data-pid=\"qjyXcPAi\">上限基本一致，下限却相差比较大<br></p>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-20496ed82e1e242c9e48182763312a2c_720w.jpg?source=b1748391?rss\" data-caption=\"图片\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"756\" data-watermark=\"watermark\" data-original-src=\"v2-20496ed82e1e242c9e48182763312a2c\" data-watermark-src=\"v2-f234ac0124a9ca10211801022cc45845\" data-private-watermark-src=\"v2-ca0b3472b5f87133d2a760fcab71aa39\"></p>\n<p><br></p>\n<p data-pid=\"4N_Z7EV3\">具体为什么会这样，下面一些我臆测的原因。<br>仅供您参考，或者供您看着一乐</p>\n<ul>\n<li data-pid=\"1QrpxkuN\">1.有哪些因素会对实际的乘坐宽度产生影响</li>\n<li data-pid=\"xc1aF9EG\">2.其实不一定是它真的宽，而是你觉得宽</li>\n<li data-pid=\"EEBJr563\">3.这套臆测的理论，套进3系与5系里，是什么样的呢，能验证题设的结论吗？</li>\n<li data-pid=\"lSHq2LKy\">4.对实际操作有没有啥用</li>\n</ul>\n<h2>1.决定乘坐宽度的还有哪些关键要素</h2>\n<p data-pid=\"HGNcZr9E\">我们先来看看一个内部简陋的示意图呗<br></p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-61bb3aef6d838b0a0c79f2cf10c53093_720w.jpg?source=b1748391?rss\" data-caption=\"图片\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"746\" data-watermark=\"watermark\" data-original-src=\"v2-61bb3aef6d838b0a0c79f2cf10c53093\" data-watermark-src=\"v2-2d75be0bc7b50bef3bc7bfd55b7a1d26\" data-private-watermark-src=\"v2-a3bf46cf32e758499ba00e7cb92e004e\"></p>\n<p><br></p>\n<p data-pid=\"2ILAy0aO\">从图中我们首先可以看到，真正的内部空间是由外廓-减去钣金厚度-再减去内饰板的厚度<br>你看到这里上限减了不少了吧（不过这个大家可能都知道哈），我们继续。</p>\n<p data-pid=\"sJ6k6Fj3\">内部空间是定了，但不同位置的空间大小是不一样了。<br>这个位置在哪，才真正决定了我们实际乘坐时的大小。<br><b>画重点了：屁股决定脑袋，位置决定横向空间的下限</b></p>\n<p><br></p>\n<p><img src=\"https://pica.zhimg.com/v2-799cb05d566095eff2bf78d4515db105_720w.jpg?source=b1748391?rss\" data-caption=\"图片\" data-size=\"normal\" data-rawwidth=\"520\" data-rawheight=\"700\" data-watermark=\"watermark\" data-original-src=\"v2-799cb05d566095eff2bf78d4515db105\" data-watermark-src=\"v2-b08c8699c91e225a14b3298546e92b4d\" data-private-watermark-src=\"v2-d543a4de2d2db0c3789d22e0ca356cb5\"></p>\n<p><br></p>\n<p data-pid=\"RYhxwznZ\">而位置又分为纵向与垂向。<br><b>垂向的：</b>比较简单，我们再看一个剖面。地板往上，一般的轿车都是宽度越来越小的。<br>所以，理论上低一点坐，空间能够更宽一点。</p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-63c131f789e532ccf9a07bf1b06e02a2_720w.jpg?source=b1748391?rss\" data-caption=\"图片\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"399\" data-watermark=\"watermark\" data-original-src=\"v2-63c131f789e532ccf9a07bf1b06e02a2\" data-watermark-src=\"v2-8bc4b7d05d03160f1415fe935eae6c2d\" data-private-watermark-src=\"v2-31958ca95dc0d2dc4f567287d81fc656\"></p>\n<p><br></p>\n<p data-pid=\"JpeE2wbo\"><b>纵向的：</b>主要是与后排轮拱之间的关系。因为要放置车轮，轮拱会一定程度上地侵占车辆的内部空间。<br></p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-23082058f47efb3839cb54103322ff56_720w.jpg?source=b1748391?rss\" data-caption=\"图片\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"351\" data-watermark=\"watermark\" data-original-src=\"v2-23082058f47efb3839cb54103322ff56\" data-watermark-src=\"v2-d103d4f9590e26c9f71eb359932db407\" data-private-watermark-src=\"v2-48875adc9f58a0ae6676b6811d8c4279\"></p>\n<p><br></p>\n<p data-pid=\"KYZ9csrR\">而如果座椅的位置与轮拱重叠的越厉害的话，就会越多的限制乘坐空间。<br>关键还在重叠与不重叠的那个暧昧的区域，空间大小差别是非常大的。<br></p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-9268c21718cb7b2d5761ab2fa6805b23_720w.jpg?source=b1748391?rss\" data-caption=\"图片\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"656\" data-watermark=\"watermark\" data-original-src=\"v2-9268c21718cb7b2d5761ab2fa6805b23\" data-watermark-src=\"v2-98c960804deeb467bc37678a3287a746\" data-private-watermark-src=\"v2-8ba635a6f7be4f8c0b1f3499cec1eb43\"></p>\n<p><br></p>\n<blockquote data-pid=\"czZfUkcK\">所以总结来说，乘坐空间的横向宽度的下限：由车身/饰板的厚度、座椅的高度、座椅的前后距离共同决定。<br>(表格)</blockquote>\n<p data-pid=\"TS72xG27\">不过以上只是我自己的判断，缺少充分的工程依据<br><b>极其渴望有总布置或者人机工程的大佬来教育我，当面反驳我，狠狠的打我的脸</b></p>\n<h2>2.我要你觉得，我不要我觉得</h2>\n<p data-pid=\"cAUF9ZGG\">而，其实有些时候我们感知到的和实际的会有一定的偏差。<br>有些车只是我们觉得宽，有些车只是我们觉得窄。<br>当然这种感知的偏差仅限于：<b>物理尺寸的悬殊没有特别大的时候</b>。</p>\n<p data-pid=\"dqrUeOmX\">然后这种感知偏差的来源，我按照自己的体感来说主要是由：<b>光线视野的开扬程度与头顶的压抑程度决定的。</b></p>\n<blockquote data-pid=\"x58I2DWT\">越开扬，越不压抑。对横向空间会有精神上的Buff</blockquote>\n<h3>光线视野的开扬程度：</h3>\n<p data-pid=\"Qbtq2hpF\">一部分与座椅本身的位置相关，高了相对会开扬一点。但是这里又和前面说的座椅低一点横向宽度会高有一点打架了，所以要结合具体车型来看。如果是一个1Box，那座椅高一点其实横向宽度也没多大变化，就可以高一点来获得更多的横向宽度。</p>\n<p data-pid=\"kweqvF55\">另外就是由于前排座椅/车窗玻璃所限定的后排视野相关。理论上前排座椅小一点，离后排远一点那视野的开扬感会更好。车窗越大开扬感也会越好。</p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-8d439438a338a211416e647c8108793f_720w.jpg?source=b1748391?rss\" data-caption=\"图片\" data-size=\"normal\" data-rawwidth=\"865\" data-rawheight=\"487\" data-watermark=\"watermark\" data-original-src=\"v2-8d439438a338a211416e647c8108793f\" data-watermark-src=\"v2-f9e94a1daa563d3f5e951933d921e102\" data-private-watermark-src=\"v2-eb2ee2ccb8bc2adceea8bdea9fb1cd5c\"></p>\n<p><br></p>\n<h3>头顶的压抑感：</h3>\n<p data-pid=\"Z74uzNcG\">头顶比较简单。<br>头顶越压抑了，身体越不能拉直。身体就会去找横向或者纵向要空间。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-c3774929ce92c85e6b5cb4d749d39830_720w.jpg?source=b1748391?rss\" data-caption=\"图片\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"watermark\" data-original-src=\"v2-c3774929ce92c85e6b5cb4d749d39830\" data-watermark-src=\"v2-a7ba70068a0622e7f0351166accb88d3\" data-private-watermark-src=\"v2-fdcaf2abfb4ca08057b52e308f8b6a97\"></p>\n<p><br></p>\n<p data-pid=\"fNYKYglD\">另外应该还有一些颜色搭配光影效果能够更好地显大的技巧的。<br>我不懂就不说了。</p>\n<p data-pid=\"9p0ftxiE\">我私以为，在物理空间和总布置相对受限的前提下，能够让你觉得宽可能也是很重要的一个技能。<br>因为做得好的话，这样可以较少的花费成本，也不用对汽车其他性能产生太多的牵连影响。<br>要知道总布置对车来说是牵一发动全身的，要改个1mm都要吵架半天、找一大半的部门问有没有相关的影响。</p>\n<p data-pid=\"TVw_pKP1\">最后总结下来：<br><b>绝对的物理尺寸→总布置的优化→一些技巧上的补偿</b><br>重要性依次降低，最好都是能满足。<br>如果不能满足，也就只能八仙过海了。</p>\n<p data-pid=\"cGHtbqNr\">如果你知道哪些车实际上没有特别宽，但是坐起来感觉还是挺宽的，请一定告诉我啊。<br>我要偷师去。</p>\n<h2>3.放在3系和5系上有哪些能套用的</h2>\n<p data-pid=\"76nMtf6W\">来到题设的具体车型，看看以上我臆测的理论有哪些能套用的。</p>\n<p data-pid=\"EG70BFjC\">绝对的物理空间</p>\n<ul>\n<li data-pid=\"Ix1u0coN\">宽度高度 ：5系大了41mm<br>\n</li>\n<li data-pid=\"DlQqTvUT\">长度：5系大了387mm</li>\n<li data-pid=\"vZ9iReDi\">轴距： 5系大254mm<br>\n</li>\n</ul>\n<p><br></p>\n<p><img src=\"https://pic1.zhimg.com/v2-f3ccf7015d76870b9f3548c365441e0a_720w.jpg?source=b1748391?rss\" data-caption=\"图片\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"497\" data-watermark=\"watermark\" data-original-src=\"v2-f3ccf7015d76870b9f3548c365441e0a\" data-watermark-src=\"v2-69b7f56edca0620c0c4ed266525d3171\" data-private-watermark-src=\"v2-31b2acff13d5aefdce1b9bc2c9cb94ac\"></p>\n<p><br></p>\n<p data-pid=\"X0WErf7m\">总布置上：</p>\n<ul>\n<li data-pid=\"58jtqxdC\">座椅高度：<br>没有查数据，应该差不多吧</li>\n<li data-pid=\"mtGp1VvL\">座椅纵向位置：<br><b>与轮拱重叠的程度应该是显著降低了，这应该是一个很大的原因。</b>\n</li>\n</ul>\n<p data-pid=\"2-xR72hs\">开扬感：</p>\n<ul>\n<li data-pid=\"NTkhMXyJ\">前排座椅：轴距加长导致前排座椅离后排座椅更远了</li>\n<li data-pid=\"pYNv6UBV\">后排座椅高度：同样假设没变</li>\n<li data-pid=\"ReXqMyk4\">车窗：大了</li>\n</ul>\n<p data-pid=\"4TqHPSwe\">前排座椅的位置和车窗都能提高开扬感，应该也是坐起来宽的一个重大利好因素</p>\n<p data-pid=\"PT2msGuj\">头部空间：</p>\n<ul><li data-pid=\"0l17Rq0N\">假设座椅高度没变，车高高了，应该头部的压抑程度会减少很多。</li></ul>\n<p><br></p>\n<p><img src=\"https://pica.zhimg.com/v2-949997a20b5e35eb861ae1ca5992b5c3_720w.jpg?source=b1748391?rss\" data-caption=\"图片\" data-size=\"normal\" data-rawwidth=\"890\" data-rawheight=\"501\" data-watermark=\"watermark\" data-original-src=\"v2-949997a20b5e35eb861ae1ca5992b5c3\" data-watermark-src=\"v2-a19812d040a5024376450a2e5a69a8d8\" data-private-watermark-src=\"v2-f3bab720772f5ea0c6dc98ce0a775ce3\"></p>\n<p><br></p>\n<p data-pid=\"y2DuU0Ci\"><b>所以5系对3系来说，为什么会有较大的乘坐空间上的体感差别。</b></p>\n<p><br></p>\n<p><br></p>\n<blockquote data-pid=\"pH02Jbob\">很有可能是因为轴距加大了以后带来了总布置上更大的灵活性，+相应的人体感官上更加宽敞的附加精神Buff共同引起的</blockquote>\n<p><br></p>\n<h2>4.对实际操作有没有啥用</h2>\n<p data-pid=\"Uiyl_AEk\">题解完了，可以尝试着用着去做键盘侠，在网络上预测下不同车的后排乘坐宽度。<br>但如果光看图的话，还是很难做出准确的判断，信息量太少。</p>\n<p data-pid=\"uQoxi0kx\">最好还是自己去实际体验下，重点是带日后坐后排的人去实际感受下。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/lin-jian-chao-66?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">小林</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/518627250/answer/2421402360?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">13 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/317766100?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">宝马标轴3系能买吗？买出厂日期18.3月的特价库存车会有什么影响？</a><br><a href=\"http://www.zhihu.com/question/515379778?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">宝马125跟宝马320i那个好呢？</a><br>\n","link":"http://www.zhihu.com/question/518627250/answer/2421402360?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"比亚迪这么着急停产燃油车是出于什么考虑？为什么这么突然？","date":"2022-04-06 02:57:58","description":"\n<p data-pid=\"KUdcB8ru\">从数据来看，2019年-2021年，比亚迪燃油车终端上险数据217617台、214518台和  193998台，长期处于20万左右。2022年前两个月上险数据分别为8813台和3464台，而从车型来看，主力车型是F3、宋和宋Pro，后面两台车其实都是和DM-i、纯电动同平台的。从2021年10月开始，比亚迪停产旗下F3车型，其他燃油车未来将视情况逐步停产。随着DM-i的订单逐步上扬，这个时间基本定下来，也就是说把单纯燃油车的这部分给停掉了。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-a36d4025a824cdc890d1c35bccd438d9_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1290\" data-rawheight=\"732\" data-watermark=\"watermark\" data-original-src=\"v2-a36d4025a824cdc890d1c35bccd438d9\" data-watermark-src=\"v2-2072b1693f79dc1d0ef120b36da3b2d4\" data-private-watermark-src=\"v2-9e922d14c2ba3d7aafd04d71c574ad97\"></p>\n<p data-pid=\"6tdO5yGo\">在投资者交流中，有介绍比亚迪目前累计在手未交付 40 万台（2022年目标150万，按照Q1来看后续要继续拉量），在这里很大一部分都是DM-i的需求，由于PHEV基本和燃油车混线生产，从订单积累和后续发展来看，现在把燃油车停掉，商业利益没有受损失，当然获益最大的还是在品牌角度，从一个燃油车时代的品牌开始进入全新能源汽车的企业，从形象上来看，是挺Cool的。</p>\n<p><img src=\"https://pica.zhimg.com/v2-5e18dbc917b41c54bd933c28078ff9d0_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1727\" data-watermark=\"watermark\" data-original-src=\"v2-5e18dbc917b41c54bd933c28078ff9d0\" data-watermark-src=\"v2-fbe520dd6d9fde14c6f45119b31d7c37\" data-private-watermark-src=\"v2-ab7820819cd29167a7aa37ec84da02de\"></p>\n<p data-pid=\"70fR9_zM\">结合之前时代周刊给比亚迪的TOP 100的全球公司定位，这次有一定的主动公关成分（挺赞的，点个赞）。</p>\n<p><img src=\"https://pica.zhimg.com/v2-899c380828c0000986b375226acc0f85_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1056\" data-rawheight=\"444\" data-watermark=\"watermark\" data-original-src=\"v2-899c380828c0000986b375226acc0f85\" data-watermark-src=\"v2-d395d08b783ecb1a8d69c1156eee5fcd\" data-private-watermark-src=\"v2-945e7aef04589d355b1b29b272889c52\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhu-yu-long-2?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">朱玉龙</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/525831043/answer/2421844670?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">146 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/507185353?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">比亚迪汽车给人感觉就是新能源汽车才是王道，说到燃油车，很多人都好奇比亚迪有燃油车吗？想听听大家的评价？</a><br><a href=\"http://www.zhihu.com/question/437279187?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何看待广汽蔚来宣布成为中国首家支持比特币支付车款的车企？对未来新能源汽车行业有何影响？</a><br>\n","link":"http://www.zhihu.com/question/525831043/answer/2421844670?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"李想解释理想汽车涨价原因「碳酸锂会跟石油一样，不再按成本计算」，这种说法依据是什么？你认可这个观点吗？","date":"2022-04-06 02:54:04","description":"\n<p data-pid=\"DZNyS0F4\">尽管碳酸锂和石油一样都是大宗商品，价格在供需关系之外还有一层金融属性的影响……<b>但碳酸锂和石油是不一样的</b>。</p>\n<p data-pid=\"RRYGL6zr\">首先，碳酸锂和石油尽管听起来分别用在电动车和燃油车上，但两者在能源循环中的作用大不一相同：<b>锂不会被消耗，更可以被再次回收成碳酸锂或氢氧化锂，</b>不仅如此，新能源所涉及的「知名」元素：如<b>钴、镍、锂、铜、硅</b>，都不会被消耗。<b>但石油会被消耗</b>。</p>\n<blockquote data-pid=\"z2hAJTYi\">\n<b>石油和煤炭作为一次能源，本质上是「碳」循环的载体：</b>碳链的生长来固定太阳能，再通过碳链打破能量的释放，将「碳」以二氧化碳的形式还原到大气，而<b>石油本身是不可循环的</b>。<br><b>新能源，即「电」和「氢」是二次能源，上述钴、镍、锂、铜、硅等元素均用于制造二次能源存储和转化的介质，是可循环的。</b>\n</blockquote>\n<h3><b>或者略不严谨地说：从地球的时间尺度看，石油煤炭和绿电绿氢，本质上能量都来自于太阳能，只不过能量载体不同，石油的载体需要数百万年循环，而二次能源的载体只需要数年至数十年的循环。</b></h3>\n<p data-pid=\"fJxxbof3\">——而数年至数十年的时间尺度，就让绿电载体的<b>电池回收对人类有了意义</b>。</p>\n<p><img src=\"https://pica.zhimg.com/v2-3d7e140470d2df744bad6032097e829b_720w.png?source=b1748391?rss\" data-caption=\"从大的时间尺度看，自然生成的一次能源和人类制造的二次能源本质上都没有湮灭任何元素，只不过元素循环的时间尺度不同，图片自制\" data-size=\"normal\" data-rawwidth=\"1864\" data-rawheight=\"559\" data-watermark=\"watermark\" data-original-src=\"v2-3d7e140470d2df744bad6032097e829b\" data-watermark-src=\"v2-58f34e38181593a2fcb3cea3abdb9464\" data-private-watermark-src=\"v2-4831cb5a56e6a2f79ac7199f49e2e75b\"></p>\n<p data-pid=\"E5q8EDMA\"><b>我不太同意一些回答中提到对电池回收的不看好，事实其实完全相反：</b></p>\n<blockquote data-pid=\"cIA0bq8t\">尽管当下电池回收存在一定的乱象，但正规的三元电池回收在当下就是<b>有利可图</b>的。</blockquote>\n<p data-pid=\"yIGjzmxs\">在中国、美国、欧洲，锂电池回收的产业链都正在逐步形成，但都处于较早的蛮荒阶段（可以认为比电动汽车的发展周期慢了8年，也就是EV与电池的寿命）。在中、美、欧三地的锂电池回收商业模式都是存在差别的，未来也可能会动态变化，而其中对于回收商最为「微利」的就是中国：</p>\n<blockquote data-pid=\"1HVGkHEK\">中国的电池回收商需要先<b>购入</b>退役电池，再进行回收，将<b>产物</b>售出。</blockquote>\n<p data-pid=\"z011rLhc\">废旧电池的售价是按电池种类（111/523/622）再结合当时的大宗商品定价打折计算得来的，售出时的产物（无论是硫酸镍、硫酸钴、碳酸锂或是前驱体）也都需要结合市场价格，所以一定程度上利润空间被锁定了。<b>盈利与否就取决于规模与工艺的精细程度</b>。仅考虑单位质量的工艺流程，即便是在「微利」的中国，利润率亦可以达到10-15%。</p>\n<p data-pid=\"Q2sIb2Pe\"><b>值得注意的是，采用湿法冶金工艺，镍、钴、铜的回收率可以达到95%以上，锂的回收率也可以达到70%。</b>不少企业如格林美更会将回收材料直接制备成前驱体。这意味着——</p>\n<blockquote data-pid=\"5Xd9KlaQ\"><b>退役电池将是具有天然元素配比的电池原料。</b></blockquote>\n<p data-pid=\"oTtgdwTM\">这一战略价值令电动车价值链下游的巨头们不得不认真考虑部署电池回收，从而降低未来对矿产的依赖：</p>\n<ul>\n<li data-pid=\"9IF-3V2z\">宁德时代收购湖南邦普布局电池回收，与蔚来合资电池管理公司合作电池回收；</li>\n<li data-pid=\"UPY6CkEO\">特斯拉早就在加州与retriev合作回收电池，在欧洲又与Umicore合作回收电池；</li>\n<li data-pid=\"Qpt4GO3P\">大众在德国的电池工厂就部署了电池回收工厂，不同于欧洲主流的火法冶金，这座工厂也采用与湿法冶金工艺，用以获得更高的回收比例。</li>\n</ul>\n<p><img src=\"https://pic1.zhimg.com/v2-01f3c641af9e21d6c865170738d96f18_720w.png?source=b1748391?rss\" data-caption=\"大众的新电池回收工厂工艺流程简述，来源：大众\" data-size=\"normal\" data-rawwidth=\"1510\" data-rawheight=\"849\" data-watermark=\"watermark\" data-original-src=\"v2-01f3c641af9e21d6c865170738d96f18\" data-watermark-src=\"v2-7dae59028e768a2027f9ec23d65b4e6e\" data-private-watermark-src=\"v2-7fd48a7ca267a60ec21f88349d84e29b\"></p>\n<p data-pid=\"p8A572gI\">但正如前文所述，电池回收工艺本身的门槛并不高，高门槛的是要有稳定的<b>退役电池流</b>从而保障规模。因而就又需要投资足够充沛的<b>回收渠道网络</b>来触达退役电池。</p>\n<p data-pid=\"0IORy4rI\">对主机厂来说，经销商门店或许是一个选择；对电池厂商来说，布局换电站或许就是一个有助于电池回收的方式：</p>\n<blockquote data-pid=\"f_Ot2p-m\"><b>宁德的巧克力电池换电策略一定程度上保证了所有电池可追溯可管理，同步能够解决电池回收的追踪和渠道问题。</b></blockquote>\n<p><img src=\"https://pica.zhimg.com/v2-4011438a761662cf85e7940e565ac099_720w.png?source=b1748391?rss\" data-caption=\"宁德的换电战略对于电池回收也同样有意义\" data-size=\"normal\" data-rawwidth=\"1801\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-4011438a761662cf85e7940e565ac099\" data-watermark-src=\"v2-7ed9e9fc3e909f0f7c4e8bb8bfebc391\" data-private-watermark-src=\"v2-db51fa7c5e19134090323cf7b13c39e9\"></p>\n<p><br></p>\n<p data-pid=\"Idp7-CtO\">说些题外话。很多事情在当下是看不明白，甚至令人困惑的。但是短期内的扰动因素是很多的，<b>以第三者的视角预测未来几乎是不切实际的</b>。一方面，任何行业在早期一定是乱象不止，但伴随着供需的真正打开，政策和商业化资源的持续加码投入，会促进一整个行业的有序化和快速发展；另一方面，<b>事在人为</b>，很多时候行业能否兴起、事情能否做成，取决于都是谁在做。</p>\n<p data-pid=\"RJuge8b9\">我想电池回收就是这样一个行业。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/yaocs10?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">姚昌晟</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/524618092/answer/2422448433?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">29 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/278084966?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">石油用人民币交易后，对新能源汽车发展有影响吗？</a><br><a href=\"http://www.zhihu.com/question/438419554?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">湖南宁乡一电池回收厂发生爆炸，系宁德时代孙公司，事故原因可能是什么？新能源汽车废旧电池也有安全隐患吗？</a><br>\n","link":"http://www.zhihu.com/question/524618092/answer/2422448433?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"宇宙中的大尺度密度涨落从何而来？【物理学短知识02】","date":"2022-04-06 02:52:31","description":"\n<p data-pid=\"kGkffu_F\">大家可能知道，我们的宇宙中有各种大尺度的天体结构，比如星系、星系团、还有更大尺度上的纤维结构。现代宇宙学认为，宇宙在演化的过程中形成这些大尺度天体结构的前提是——<b>在宇宙早期存在大尺度的密度涨落</b>。</p>\n<p data-pid=\"HlEJc71x\">什么叫密度涨落呢？大家可以看下面这张宇宙微波背景辐射的图片，它反映了<b>现在的</b>整个可观测宇宙<b>在138亿年前</b>的物质分布。在138亿年前，宇宙中的各种天体都还没形成，物质以一堆高温粒子的形式存在。然后有的地方粒子密集，有的地方粒子稀疏，就像海面一样有的地方涨高有的地方低落，这就是所谓的密度涨落。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-c2888256a1ff46babaa8887c3fe48ae4_b.jpg\" data-size=\"normal\" data-rawwidth=\"2311\" data-rawheight=\"1154\" class=\"origin_image zh-lightbox-thumb\" width=\"2311\" data-original=\"https://pic1.zhimg.com/v2-c2888256a1ff46babaa8887c3fe48ae4_r.jpg\"><figcaption>图1 微波背景辐射就是宇宙大爆炸遗留下来的光，它们形成于宇宙诞生后大约38万年，分布在全宇宙当中，反映了现在的整个可观测宇宙在那时的物质分布。把探测卫星对准天空的各个方向，就可以接收到这些背景辐射，然后像画世界地图一样画出背景辐射在整个天空或者说天球上的分布，正如这张图中所展示的。</figcaption></figure><p data-pid=\"IqGxo83s\">那么什么叫大尺度的密度涨落呢？你可以把密度涨落视为均匀背景上的一些波动的叠加，其中<b>波长很长的分量就是大尺度涨落</b>。就好比海洋中有波长几十米的小波浪，也有波长数百公里的大波浪。早期宇宙中的这些大尺度密度涨落作为最初的种子，使得粒子向密度大的区域聚集，最终演化形成了星系、星系团这样大尺度的天体结构。</p>\n<p data-pid=\"8ESVRHwC\">大尺度的密度涨落究竟可以有多大尺度呢？让我们再回顾一下上面的宇宙微波背景辐射图。这张图绘制的是<b>现在的</b>可观测宇宙在138亿年前的物质分布，而可观测宇宙的尺度是在随时间增大的（你可以理解为由于光速有限，时间越长观察者就可以看到越远处的东西）。也就是说，<b>138亿年前可观测宇宙的范围其实比这张图要小得多</b>，大约只占这张图的几万分之一，几个像素点那么大。然而，我们从图中可以很明显地看到，有许多涨落（冷暖色块）的尺度都要远大于几个像素点。这意味在宇宙微波背景形成之时（宇宙诞生后38万年左右），那些大尺度涨落的波长甚至可以比当时的整个可观测宇宙的尺度还要大得多。</p>\n<p data-pid=\"G9x4JHa2\">这就很匪夷所思了，因为某个时刻可观测宇宙的半径，其实就是此时物质之间能够发生关联的最远距离。如果两个粒子之间的距离超过了那一时刻可观测宇宙的半径，那它们之间是无法发生相互作用的。所以按理说，<b>如果物质的密度涨落是粒子之间的相互作用导致的，那它的最大波长也不能超过当时可观测宇宙的半径</b>。但我们在宇宙微波背景辐射中却实实在在地看到了，比那时的可观测宇宙尺度还要大的密度涨落。这是怎么回事呢？</p>\n<p data-pid=\"72uTKIRQ\">其实，<b>密度涨落的波长是会被宇宙膨胀“拉长”的</b>。就像下面的图2所展示的，一开始一列波的尺度（两相邻波节之间的距离）小于当时可观测宇宙的边界（<b>视界</b>），如果宇宙膨胀导致这两个相邻波节之间相互远离的“退行”速度超过了可观测宇宙视界扩张的速度，那么这列波就可以随宇宙膨胀被拉长至远超可观测宇宙的尺度。请注意这里的前提：<b>宇宙膨胀导致原本在视界内的两点之间的退行速度超过视界扩张的速度</b>。必须在这个条件下，密度涨落的尺度才会被拉出视界，否则视界扩张比膨胀导致的退行快，就永远都出不了视界。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-c86bb3fb8a2bb24a056f6f061ab068bd_b.jpg\" data-size=\"normal\" data-rawwidth=\"2388\" data-rawheight=\"1256\" class=\"origin_image zh-lightbox-thumb\" width=\"2388\" data-original=\"https://pic2.zhimg.com/v2-c86bb3fb8a2bb24a056f6f061ab068bd_r.jpg\"><figcaption>图2 宇宙膨胀会导致宇宙中的一切都相互远离，由此也会将密度涨落的波长拉长。如果膨胀导致原本在视界内的两点之间的退行速度超过视界扩张的速度，那么密度涨落就会被拉长至远超可观测宇宙的尺度。实现这一过程的前提是：宇宙曾发生过一段膨胀速率越来越快的“暴胀”过程。（注：此图是二维版的宇宙）</figcaption></figure><p data-pid=\"6cMSZONx\">那么，在什么情形下才会导致退行速度超过视界扩张速度呢？答案是：如果宇宙曾经历过一段<b>膨胀速率越来越快</b>的剧烈膨胀过程，例如宇宙的尺度 <img src=\"https://www.zhihu.com/equation?tex=a\" alt=\"a\" eeimg=\"1\"> 作为时间 <img src=\"https://www.zhihu.com/equation?tex=t\" alt=\"t\" eeimg=\"1\"> 的指数函数 <img src=\"https://www.zhihu.com/equation?tex=a%5Csim+e%5E%7BHt%7D\" alt=\"a\\sim e^{Ht}\" eeimg=\"1\"> ，就可以实现这一点。证明如下：</p>\n<blockquote data-pid=\"XbFMzwSE\">1. 先给宇宙定义一个尺度函数a(t)，宇宙在膨胀意味着a随t增大。<br>2. 宇宙膨胀会导致空间两点之间有一个相互远离的退行速度v，这就是哈勃定律v=Hd，其中d是两点之间的距离，H是被称为哈勃系数的比例系数，它被定义为H(t)=a'(t)/a(t). 这意味着，同一时刻相距越远的两点之间的退行速度v越快。<br>3. 哈勃定律意味着，某时刻总会有一个距离上限，使得宇宙空间中两点的间距超过这个上限时，它们之间的退行速度超过光速。而退行速度超过光速意味着原则上不可观测，因此我们把这个距离上限定义为可观测宇宙的视界半径r. 这个半径会随着时间扩张，r~t（时间越久看得越远）。对于空间中某点P，以r为半径可以定义出一个作为球面的视界，某时刻刚好处于此视界处的物体，相对P的退行速度就是光速。<br>4. 给定某种尺度函数a(t)，相距为d(t)的两点之间的退行速度v(t)随时间的变化趋势可以被估计为v(t)=Hd~a'(t)/a(t)*a(t)~a'(t)，这里我们假设了d~a，相当于忽略了原始距离以及非宇宙膨胀导致的速度。<br>5. 对于均匀膨胀的宇宙，a~t，退行速度估计为v(t)~a'(t)~常数。也就是说，在均匀膨胀的宇宙中，两点之间的退行速度不随时间改变。因此，如果一开始两点互相处于对方的视界之内（退行速度小于光速），那么它们就会永远处于视界之内，不会因为退行超光速而退出视界。<br>6. 对于减速膨胀的宇宙，比如a~t^(1/2)，退行速度估计为v(t)~a'(t)~t^(-1/2). 这意味着两点之间的退行速度随时间减小。一个原本处于视界外的物体（退行速度超光速）就可以随着时间演化而进入视界之内（退行速度小于光速）。<br>7. 对于加速膨胀的宇宙，比如a~exp(Ht)，退行速度v(t)~a'(t)~e^t，是随时间增大的。一个原本处于视界内的物体（退行速度小于光速）就可以随着时间演化而退出视界（退行速度超过光速）。因此，对于一个涨落或波动，加速膨胀可以把它的波长从小于视界拉长至远超视界的尺度。证毕。</blockquote>\n<p data-pid=\"_aFGir7D\">宇宙学家们将这种剧烈的指数膨胀过程称为“<b>暴胀</b>”。目前有许多天文观测证据支持这种剧烈的指数膨胀发生过。相关研究表明，暴胀发生在宇宙诞生后大约 <img src=\"https://www.zhihu.com/equation?tex=10%5E%7B-30%7D\" alt=\"10^{-30}\" eeimg=\"1\"> 秒内，在这么短的时间内，宇宙的尺度急剧膨胀了至少 <img src=\"https://www.zhihu.com/equation?tex=e%5E%7B50%5Csim60%7D\" alt=\"e^{50\\sim60}\" eeimg=\"1\"> 倍（一亿亿亿倍）。这样骤然的指数膨胀使得一开始在宇宙视界之内产生的微小涨落，甚至是量子涨落，可以随着膨胀被拉长至远远超过那时的整个可观测宇宙的尺度。这就是宇宙中大尺度密度涨落的起源。这些尺度远超视界大小的涨落，后来随着宇宙膨胀的减慢，又慢慢回到视界之内，成为了形成星系、星系团的种子。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-93229ec91e6cd25c4ae21673a0d77821_b.jpg\" data-size=\"normal\" data-rawwidth=\"1287\" data-rawheight=\"546\" class=\"origin_image zh-lightbox-thumb\" width=\"1287\" data-original=\"https://pic2.zhimg.com/v2-93229ec91e6cd25c4ae21673a0d77821_r.jpg\"><figcaption>图3 一块宇宙区域（浅蓝色）的膨胀与视界（虚线）的扩张。在暴胀之前，A点和B点都在视界之内；暴胀期间A B两点随剧烈的加速膨胀被拉出视界之外；在暴胀结束之后宇宙转为减速膨胀，A B两点间的退行速度逐渐减慢，最终赶不上视界扩张的速度，两点又回到了视界之内。（图引用自《今日天文》）</figcaption></figure><p data-pid=\"Rc5GTQUH\">暴胀过程不仅为宇宙带来了大尺度的密度涨落，它还抹平了宇宙空间的一切不平坦之处，使得我们现在察觉不到宇宙在极大尺度上的空间曲率。此外，暴胀也为宇宙带来了巨量的物质，现在宇宙中几乎所有的物质都起源于这个过程。所以可以说暴胀是整个宇宙历史中最为壮观的一个事件，这也是<b>当前的宇宙学理论能追溯到的宇宙中最早发生的一个事件</b>。至于暴胀之前发生了什么，我们就不知道了。其实，对于暴胀本身我们也是知之甚少。我们只知道宇宙大概率经历过这样一个指数膨胀过程，但这个过程的细节、导致它的具体物理机制等等我们都是不确定的。这些问题还有待将来更精确的天文观测与更深入的理论计算来给出答案。</p>\n<p data-pid=\"ALCTfoR_\">就写这些吧，如果大家喜欢这篇文章，可以点个关注点个赞。看的人多的话，我开一个暴胀理论的系列科普，详细聊一聊当前的宇宙学对极早期宇宙和物质起源的认识。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wang-qing-yang-68-26?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">王清扬</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/491106772?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"比亚迪宣布自2022年3月起停止燃油汽车的整车生产，此举对比亚迪发展有何意义？燃油车车主会受影响吗？","date":"2022-04-06 02:50:05","description":"\n<p data-pid=\"zYBtqR-t\">2022年3月，当听到比亚迪停止燃油车的新闻时，<b>我想到了2020年的广州车展的新能源重磅发布会上，比亚迪发布了一款发动机</b>！</p>\n<p data-pid=\"pxNOENo8\">魔幻吗？ <b>停售燃油车的15个月之前，比亚迪重磅发布了一款发动机</b>！ </p>\n<p data-pid=\"ahsJOflv\">要知道，这是发生在新能源发布会上的事情，而且是在停售燃油车的15个月之前。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-accba345b42a845f9e2117fd9b77d88e_720w.jpg?source=b1748391?rss\" data-rawwidth=\"617\" data-rawheight=\"610\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-accba345b42a845f9e2117fd9b77d88e\" data-watermark-src=\"v2-60a052b2cbe53fbf4b531ef6f5303cb2\" data-private-watermark-src=\"v2-55dafecc9cd1be01f802a52ef6d394fd\"></p>\n<p data-pid=\"Kw2LQ6F6\">其实，一点也不魔幻 ——<b> 因为这款骁云1.5L发动机是一个「瘸腿将军」，这款插混专用发动机，不能用于燃油车上</b>。</p>\n<p data-pid=\"sE84ZakO\">不仅如此，还给它移胎换骨，去掉了一些东西，加上了一些电动化技术。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-74d2ee9b9c21982445ebc156b4d407a4_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1259\" data-rawheight=\"473\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-74d2ee9b9c21982445ebc156b4d407a4\" data-watermark-src=\"v2-75508477a61a1873831ba893affc4edd\" data-private-watermark-src=\"v2-31472d548fc85a804d0148817a23cfc2\"></p>\n<p data-pid=\"I67GZ-P0\">当时我的评价是：<b>比亚迪对于汽车电动化历史进程中的发动机技术路线的理解是完全正确的。</b></p>\n<p data-pid=\"Zvx0QWQK\"><b>汽车电动化并不一定是要革发动机的命，</b>而应该在电动化的新平台上为发动机“全面减负”，将其打造成“偏科的优等生”，从而实现更高的系统效率。</p>\n<p data-pid=\"QuEj5WK_\"><b>这种打造「瘸腿将军」的思路是完全正确的，它既是给发动机续命，也是在革燃油车的命。</b></p>\n<p data-pid=\"KXjK511z\"><b>这就像君主立宪一样: 它既是削弱皇权，也是给女王续命。</b>伊丽傻白女王，挺住！</p>\n<p><img src=\"https://pic1.zhimg.com/v2-97340d350bd2e25803727ae2cc0fe974_720w.gif?source=b1748391?rss\" data-rawwidth=\"500\" data-rawheight=\"281\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-97340d350bd2e25803727ae2cc0fe974\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"lyhzZcPP\">日产e-Power也采取了比亚迪相似的思路，而且它的「瘸腿将军」要更专用一些，目标是定点运行：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-f8fd2ac2c4821f6a915d4239bba61d42_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1001\" data-rawheight=\"485\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-f8fd2ac2c4821f6a915d4239bba61d42\" data-watermark-src=\"v2-ffb38785f92c09ffb4ca6c0b651cc6b7\" data-private-watermark-src=\"v2-752da9085fe90cec66c42dc55f4cb6d9\"></p>\n<h2>1. DM-i作为PHEV，达到了HEV的油耗</h2>\n<p data-pid=\"lKsYGnKS\">曾经，汽车分成四大类。每个车企需要协调这四大类，来制定未来3-5年的技术路线：</p>\n<ul>\n<li data-pid=\"UCvDhI1l\">\n<b>纯燃油</b>： 成本低，油耗相对高。依赖发动机与变速箱技术。</li>\n<li data-pid=\"1q0bUwYQ\">\n<b>HEV</b>： 成本略高，油耗非常低。</li>\n<li data-pid=\"m3uQLr-d\">\n<b>PHEV</b>：成本更高（随电池成本降低而降低），馈电油耗甚至比燃油车高。</li>\n<li data-pid=\"Zp1sjX37\">\n<b>纯电动</b>：成本高，使用成本极低，但补能相对不便。</li>\n</ul>\n<p data-pid=\"Zdoumndw\">比亚迪DM-i的意义是什么呢？ <b>它抹平了PHEV的馈电油耗高劣势，使馈电油耗达到一流HEV的水平</b>！</p>\n<p data-pid=\"HNTYgWKa\">就这么一辆DM-i，平时用电，长途用油，馈电油耗还低！ </p>\n<p data-pid=\"Un2U2I1C\"><b>DM-i既打击了传统HEV市场，又打击了传统PHEV市场；同时，DM-i又与纯电动、传统HEV、传统PHEV联手，一起打击燃油车市场</b>。</p>\n<p data-pid=\"LVDgYvSy\"><b>妥妥的燃油车一生宿敌了</b>！</p>\n<h2>2. 产能、销售达到饱合</h2>\n<p data-pid=\"Jjw4BUDP\">DM-i、EV两条电动化路线全面开花之后，比亚迪完全不愁卖，他愁的是啥呢？</p>\n<ul>\n<li data-pid=\"Mt8Wk6pA\">\n<b>一是产能</b>，现在供不应求，交付周期很长。你现在下定，都要等几个月。</li>\n<li data-pid=\"TyV1DqQK\">\n<b>二是销售与售后</b>，销量猛增之后，对本就不太好的售后服务更是考验。</li>\n</ul>\n<p data-pid=\"pH82bQNK\">这时候就要有取舍了，把鸡肋一般的燃油车给扔了吧。</p>\n<h2>3. 品牌上升的需要</h2>\n<p data-pid=\"6JtWElMT\">首先，DM-i与EV的车价要高一个级别，平均车价高上去了，品牌自然而然地也要上升一些。</p>\n<p data-pid=\"Du4XzN2T\">其次，比亚迪很早就高喊“新能源汽车领导者”，但十几年以来被外界质疑：<b>身在曹营心在汉吧！一个卖F3燃油车起车的，嘴上高喊新能源，销售大头一直是燃油车</b>。</p>\n<p data-pid=\"Wr9ktP9F\">这种质疑是有道理的，因为事实就是如此。比亚迪一直等待一个反击的机会，那就是现在。这么一个反击，使比亚迪品牌立得更稳、品牌形象更好，从企业整体来说是有利的！</p>\n<p data-pid=\"zGQ8Csd7\"><b>特别是，这是全球第一个官宣放弃燃油车的传统车企，对欧美日的传统车企的心理冲击肯定也不小</b>。同时，这也是对国家双碳战略的实际支持，也是自主品牌的担当。</p>\n<p data-pid=\"q2jR6kcV\">而且，比亚迪是有备而来，想要把品牌搞上去。记得最近传播的话题吗：</p>\n<a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://www.zhihu.com/question/525596696/answer/2419973558\" data-image=\"https://pic3.zhimg.com/v2-fe928b9ff317bc630fef4cd2ae04d10a_l.jpg?source=b1748391\" data-image-width=\"1080\" data-image-height=\"1244\" class=\"internal\">王传福承认比亚迪名字是瞎编的，称「当时怪名容易通过注册」，车企命名还有哪些不为人知的秘密？</a><p data-pid=\"ho2488sa\"><b>将比亚迪品牌名称解读为“瞎编的”，要比解释为“Build Your Dream”，更容易走向高端。</b></p>\n<h2>4. 为什么是比亚迪？</h2>\n<p data-pid=\"CeVtjUL4\"><b>回顾20年历史，我们可以发现，一鸣惊人的企业往往有一个共同点：坚持自主研发</b>。</p>\n<p data-pid=\"WN0dzSEz\">十几年前，比亚迪就坚持“垂直整合”的战略：<b>电机、电池、发动机全都自研自造</b>。这一战略的好处容易理解：自家东西，价格便宜一些，供货也足一些。</p>\n<p data-pid=\"Q0Mmuvpk\">但是，这一战略实际上是违背汽车产业的惯例的：<b>万一自己研发的零部件是个垃圾，再难也要含泪用光啊！</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-3b0f694d7fd2bf19792aee550c6b4e52_720w.gif?source=b1748391?rss\" data-rawwidth=\"242\" data-rawheight=\"340\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-3b0f694d7fd2bf19792aee550c6b4e52\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"mAkckeVe\"><b>华为启动芯片自研的时候，自家手机不也必须得用失败的K3V2芯片吗</b>？</p>\n<p><img src=\"https://pic1.zhimg.com/v2-9bcefecc0ec91799b621ab26d2a4176b_720w.jpg?source=b1748391?rss\" data-rawwidth=\"641\" data-rawheight=\"347\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-9bcefecc0ec91799b621ab26d2a4176b\" data-watermark-src=\"v2-af74d044447bcf498aafb2788e07d5c5\" data-private-watermark-src=\"v2-fe078a0b4d2f5fb86ba2ed55e46b2cce\"></p>\n<p data-pid=\"i4dswqu0\"><b>这种自研自产的阵痛，可以说是独立自主的必然代价。</b></p>\n<p data-pid=\"80XZwAAA\">十年寒窗之后，方能迎来收获 —— <b>大家有没有留意到一个问题，2021年的主流电动车中，这什么只有特斯拉和比亚迪汉用上了SiC半导体器件、使得电驱动效率提高不少</b>？</p>\n<p data-pid=\"H-6kmAhh\">原因很简单：<b>特斯拉吃掉了2021年全球SiC半导体器件的几乎全部产能，其它车企要想用，只能等两年再说了</b>！</p>\n<p data-pid=\"fTQjqsYC\">那比亚迪为啥可以用上，它有什么牛逼的采购关系吗？ <b>原因也很简单：比亚迪这其实也买不到，但它可以自己造</b>。</p>\n<p data-pid=\"SpgKTOPK\">自己造这件事情说起来容易，做起来难。<b>从2005年组建IGBT团队到2020年的SiC器件，足足花了15年啊！</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-78915a9ce8fa89369bbdba8423ed2fac_720w.jpg?source=b1748391?rss\" data-rawwidth=\"730\" data-rawheight=\"309\" data-size=\"normal\" data-caption=\"\" data-watermark=\"original\" data-original-src=\"v2-78915a9ce8fa89369bbdba8423ed2fac\" data-watermark-src=\"v2-f6a7b0e6b88beb7bb5455143b87a7110\" data-private-watermark-src=\"v2-167ee7da561e89e47e21e9e8d54dce0e\"></p>\n<p data-pid=\"2a50bmkw\">近几年经历芯片风波之后，大家都知道这种“人有我无”产品的供应风险很大 —— <b>如果是自动驾驶芯片断供了，我们大不了人工开车；如果是IGBT断供了，那我们就要被迫回到燃油车的老路上去了</b>！</p>\n<p data-pid=\"PzY5gRnK\">注意了，所谓欧美的“卡脖子”，卡的就是那些他们能造而中国造不了的东西 —— <b>比亚迪自己能造IGBT和SiC器件，说小了是对自己有利，说大了是断了欧美“卡脖子”的念想，对全行业都有利。</b></p>\n<p data-pid=\"SPSDxsWI\"><b>当年</b><a href=\"https://www.zhihu.com/search?q=%E8%81%94%E6%83%B3%E9%9B%86%E5%9B%A2&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2351496000%7D\" class=\"internal\">联想集团</a><b>风风光光的时候，比亚迪还只是一个容易被人忽略的企业。但联想放弃了艰难的“技工贸”路子，走了速成的“贸工技”之路，十几年后它与比亚迪、华为的地位已经互换了</b>。</p>\n<p data-pid=\"l2oIXQkM\">SiC器件只是一个例子，比亚迪的看家本领还挺多，比如说：</p>\n<ul>\n<li data-pid=\"aP7spAyk\">\n<b>电 池</b>： 弗迪电池的刀片电池，让<a href=\"https://www.zhihu.com/search?q=%E7%A3%B7%E9%85%B8%E9%93%81%E9%94%82%E7%94%B5%E6%B1%A0&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2351496000%7D\" class=\"internal\">磷酸铁锂电池</a>重焕青春。</li>\n<li data-pid=\"Z2ODTqgr\">\n<b>半导体</b>： 比亚迪半导体，IGBT与SiC器件。</li>\n<li data-pid=\"iS6V5VPN\">\n<b>电驱动</b>： 扁线电机，八合一电驱系统。</li>\n<li data-pid=\"c6MG0g3K\">\n<b>发动机</b>： 热效率43%的骁云发动机，比亚迪Dmi系统的核心部件。</li>\n<li data-pid=\"awVEnyIm\">\n<b>口 罩</b>： 世界最大的口罩制造商。</li>\n</ul>\n<p data-pid=\"BVNaJJKU\">中国消费者，从小听着“科学技术是第一生产力”、“坚持独立自主是改革开放的基本立场之一”、“落后就要挨打”这些口号长大，他们是非常迷信核心技术的自主突破的 ——<b>比亚迪造出了半导体功率器件、电池、电机、发动机，使中国少被卡几次脖子</b>？</p>\n<p data-pid=\"juULKGqQ\"><b>就冲这点，还不值得你给比亚迪点个赞吗？</b></p>\n<a href=\"https://www.zhihu.com/zvideo/1489162305354698752\">比亚迪为什么突然风评反转了？</a>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhangkangkang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">张抗抗</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/525821174/answer/2422475982?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">386 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/507185353?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">比亚迪汽车给人感觉就是新能源汽车才是王道，说到燃油车，很多人都好奇比亚迪有燃油车吗？想听听大家的评价？</a><br><a href=\"http://www.zhihu.com/question/525842659?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">比亚迪正式宣布停止燃油汽车的整车生产，是真的玩纯电还是在燃油车上推不动认输？</a><br>\n","link":"http://www.zhihu.com/question/525821174/answer/2422475982?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"多强的封控政策，才能防住奥密克戎？","date":"2022-04-06 02:38:39","description":"\n<p data-pid=\"Ao04BwWZ\">2022虎年春节过后，中国开始应对奥密克戎变异的挑战。从1月的安阳、天津津南疫情，到2月的深圳、东莞、防城港、呼和浩特疫情，再到3月的上海、吉林、山东以及全国各地渐渐展开的疫情，我们不难发现，<b>奥密克戎变异导致的疫情，与之前的疫情有着很大不同。以前行之有效的防控方式，似乎失效了。</b></p>\n<p data-pid=\"4i9LeFqa\">在2021年和之前的每一次疫情中，我们的应对手段其实归根结底就是三条——<b>发现与监测；流调与溯源；管控与重点人群核酸</b>。当发现和监测落后于病例传播，流调与溯源手段也无法穷尽病例时，立刻停止整个城市或者城市部分高风险区域的运作，开展全员核酸，就成了最后一道，也是最行之有效的一道防线。</p>\n<h2><b>▍「封城」对疫情控制的作用</b></h2>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"-s1eCjgH\">在奥密克戎变异之前，<b>「封城」</b>对疫情的控制能够起到什么样的效果？使用国家卫健委公布的每天各城市的本土病例数量和本土无症状感染者数量，以及每个城市从2020年至今每天的人流量数据，我们可以完成一个简单的计算。下图是我们使用的各城市疫情数据来源。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-ea3bb5953ae0027637e39b6781d2aeab_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1651\" data-rawheight=\"1431\" class=\"origin_image zh-lightbox-thumb\" width=\"1651\" data-original=\"https://pic4.zhimg.com/v2-ea3bb5953ae0027637e39b6781d2aeab_r.jpg\"></figure><p data-pid=\"lTgtwgdW\"><i>图表1：每日新增本土病例</i></p>\n<p data-pid=\"fDfesDVF\">我们的人流量是通过当地商圈的人流量监测和到店消费分天数据综合计算得到的。下图列出了西安市从2020年2月至今的每日人流量指数。可以看到，西安曾经有过四个因疫情造成的凹陷，前三次分别是2021年1月的石家庄疫情，2021年8月南京疫情，2021年10月兰州疫情导致的输入病例。这几次疫情都没有出现大规模的本土感染，但西安都做了一些预防性的防疫工作，例如为了应对南京疫情可能造成的输入，在2021年7月30日关闭了华清池和兵马俑。但西安的最大考验出现在图中的第四个凹陷，也就是2021年12月的西安本地疫情中。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-68ad04093be46bdee22177149cf17f38_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1233\" data-rawheight=\"810\" class=\"origin_image zh-lightbox-thumb\" width=\"1233\" data-original=\"https://pic1.zhimg.com/v2-68ad04093be46bdee22177149cf17f38_r.jpg\"></figure><p data-pid=\"YJ9M903f\"><i>图表2：西安市人流量</i></p>\n<p data-pid=\"xs9PqQFD\">我们将西安的人流量数据聚焦于2021年12月1日到2022年1月31日。西安本轮疫情的第一例本土病例出现在12月9日，<b><u>但西安并没有立刻做出反馈，而是在12月16日左右开始进行较大规模的防控</u></b>。而最后西安的疫情也较为严重，一直到1月底时，西安市人流量也只恢复到疫情前的70%。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-0f0e0cad636238cb3d35f1073c449250_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1234\" data-rawheight=\"809\" class=\"origin_image zh-lightbox-thumb\" width=\"1234\" data-original=\"https://pic1.zhimg.com/v2-0f0e0cad636238cb3d35f1073c449250_r.jpg\"></figure><p data-pid=\"JHwj0M3U\"><i>图表 3：西安疫情期间人流量</i></p>\n<p data-pid=\"jga6-ogO\">在和西安疫情几乎相同的时刻，12月5日在宁波市出现了3例阳性病例。宁波的反应非常快，<b><u>12月6日便暂停了疫情出现地点镇海区的所有文旅体活动，镇海区停课停学</u></b>。下图列出了宁波市的人流量指数变化情况。可以看到，宁波通过快速的反馈和封控控制了疫情，当地人流量在10天后即达到谷底，随后回升。宁波市此次疫情最后仅有76个病例，用时一个月不到，当地人流量就达到了疫情前的水平。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-e9a36fb5af4aaf91aa1e377885c51e56_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1234\" data-rawheight=\"809\" class=\"origin_image zh-lightbox-thumb\" width=\"1234\" data-original=\"https://pic3.zhimg.com/v2-e9a36fb5af4aaf91aa1e377885c51e56_r.jpg\"></figure><p data-pid=\"gUS33xF8\"><i>图表 4：宁波市疫情期间人流量</i></p>\n<p data-pid=\"THjMJeXI\">从这样两个例子的比较看，<b>「及时封城」</b>，确实是对<b>「控制疫情」</b>有比较好的作用。我们可以试着从统计上证明这一点。</p>\n<p data-pid=\"2Ei2Zs0T\">首先，用T表示用天计算的时间。如果一座城市从T-5到T-1这五天内均没有出现病例，而在T时刻出现了本土病例，那么我们将疫情的「爆发」定义在T时间点。<b>在这种定义下，一些城市会出现多段疫情，我们将每一段疫情的爆发起始点均算作一个数据点。</b></p>\n<p data-pid=\"i6qUd6G6\">其次，将<b>「封控强度」</b>定义为一个城市的人流量的变化。<b>用T+4、T+5、T+6时刻的当地人流量平均值，除以T-1时刻的当地人流量，定义为一个地区「封控强度」。T+4、T+5、T+6时刻的人流量相比疫情前下降得越多，说明该地区的封控越快，越严格。</b>对西安12月9日的疫情来说，这个数字接近1，也就是没有在五天内采取任何封城措施；对宁波12月5日的疫情来说，这个数字大约是0.87，即人流量因封控下降了13%。</p>\n<p data-pid=\"U_MvtKu5\">再次，<b>将「控制疫情」定义为一个城市T+14、T+15、T+16三天的新增病例与T+4、T+5、T+6三天的新增病例的比值</b>。这里的病例包括了确诊病例和无症状感染者。如果疫情爆发半个月后的当日新增病例比起疫情爆发第四到六时的新增病例要少，说明疫情得到了控制。这个数字越低，说明疫情控制得越好。</p>\n<p data-pid=\"T8A25OVF\">最后，<b>将「封控强度」和「控制疫情」取对数</b>，</p>\n<p data-pid=\"pqi99mvK\"><u><b>在非奥密克戎变异疫情，和奥密克戎变异疫情下，分别用「封城」去解释「控制疫情」。两者相关性越高，越能够说明及时、快速的「封城」可以快速控制疫情。</b></u></p>\n<h2><b>▍非奥密克戎变异疫情</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-1e17efb30fbc0c43be2486ad169164e7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2640\" data-rawheight=\"1920\" class=\"origin_image zh-lightbox-thumb\" width=\"2640\" data-original=\"https://pic4.zhimg.com/v2-1e17efb30fbc0c43be2486ad169164e7_r.jpg\"></figure><p data-pid=\"umsQ2A9R\"><i>图表 5：Omicron之前的疫情</i></p>\n<p data-pid=\"xuGy8dnI\">上图列出了在奥密克戎变异前的历次疫情中<b>疫情后人流量（横坐标）</b>和<b>病例增长速度（纵坐标）</b>的关系。可以看到，两者之间存在着<b>显著的相关性</b>，其中越靠右的点，代表其封控强度更轻，靠左边的点则有更加严格且快速的封城行动。靠上的点表示疫情衰减越慢（0以下）或者增长越快（0以上）。两者的拟合显示，<b><u>当封控强度（即人流量减少程度）增加1%时，病例增长速度会减少2.55%，在1%的水平上显著。</u></b></p>\n<p data-pid=\"UwRKnThk\">在上图中，西安是最靠右上角的点，代表在这次疫情中，西安确实在封城上反应更慢，且半个月后的病例增速增长越快。石家庄则是最靠左下的点之一，其疫情后人流量的对数值为-0.75，即疫情前的47%，而病例增长速度的对数值等于-2，代表其半个月后的新增病例是疫情爆发后5天新增病例的13.5%。</p>\n<p data-pid=\"amMKnUMY\">在上图中，75%的疫情出现在红线下方，代表四分之三的城市15天之后的新增病例已经比5天时的新增病例要更少。<b>如果这个城市对疫情进行了一定防控，即疫情之后人流量变化低于0，则该城市在半个月后继续出现病例增长的概率就只有10%</b>。</p>\n<h2><b>▍奥密克戎变异疫情</b></h2>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-1f12c32b6d6a269f76b49e8a7a0b6214_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2640\" data-rawheight=\"1920\" class=\"origin_image zh-lightbox-thumb\" width=\"2640\" data-original=\"https://pic1.zhimg.com/v2-1f12c32b6d6a269f76b49e8a7a0b6214_r.jpg\"></figure><p data-pid=\"EcvP7SKY\"><i>图表 6：Omicron变异疫情</i></p>\n<p data-pid=\"NgLlFaQ8\">上图列出了奥密克戎变异疫情下的历次疫情中疫情后人流量（横坐标）和病例增长速度（纵坐标）的关系。两者之间仍然存在<b>显著的正相关</b>，</p>\n<p data-pid=\"wLAPSV9v\"><b><u>当封城的程度（即人流量减少程度）增加1%时，病例增长速度会减少2.78%，在1%的水平上显著。</u></b></p>\n<p data-pid=\"r8kOF6fN\">不难注意到，在这张图中，最右边出现了深圳。读者也许会问，深圳的疫情明明已经控制住了，为什么会出现在疫情半个月后病例上升的区间呢？其实只要仔细阅读深圳的病例就知道，深圳的首个本土病例，并不是3月出现的，而是2月12日出现的。从2月16日到2月18日时，深圳分别有8、3、3个本土病例。半个月后，2月26日到2月28日的深圳本土病例猛增至30、36、28个本土病例，病例不仅没有衰减，反而大幅度上升了。深圳采取比较严格的封城措施，已经是三月初的时候。从2月中旬到3月初，深圳的人流量下降并不明显，幸运的是，深圳在这个阶段也没有出现病例的大规模传播，给3月初才开始进行的大规模封控提供了条件。在奥密克戎变异疫情下，有一半以上的城市出现在了红线上方，即疫情爆发半个月后病例还在继续增长。</p>\n<p data-pid=\"Xb_wUXo9\"><b>在奥密克戎变异疫情中，如果一个城市对疫情进行了一定防控，即疫情之后人流量变化低于0，则该城市在半个月后继续出现病例增长的概率仍然高达51%</b>。</p>\n<h2><b>▍防控的效果出现了什么变化？</b></h2>\n<p data-pid=\"nxCSLv5v\">非奥密克戎疫情，封城程度每提升1%可以降低2.55%的病例增长速度；在奥密克戎变异疫情下，封城程度每提升1%可以降低2.78%的病例增长速度。从这个对比看，封城依然是有效的，而且在奥密克戎变异下效果更好。</p>\n<p data-pid=\"vxgN9cUb\">那么为什么在奥密克戎前的疫情只要做了一些防控，就可以将疫情扩散的概率控制在10%，而在奥密克戎变异下，同样程度的防控，疫情扩散概率却增长到了51%呢？我们将前两张图合并在一起，就能看出问题所在——两者的截距有极大差异。：</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-5c546163c98bc48a0dd81840929fe26a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2640\" data-rawheight=\"1920\" class=\"origin_image zh-lightbox-thumb\" width=\"2640\" data-original=\"https://pic3.zhimg.com/v2-5c546163c98bc48a0dd81840929fe26a_r.jpg\"></figure><p data-pid=\"CMEEfY0U\"><i>图表 7：所有疫情的防控效果</i>非奥密克戎疫情下，我们用国内各城市疫情拟合出的直线表达式是：</p>\n<p data-pid=\"QKw8ptob\"><img src=\"https://www.zhihu.com/equation?tex=ln%28%5Cfrac%7B%E7%88%86%E5%8F%91%E5%8D%8A%E6%9C%88%E5%90%8E%E7%97%85%E4%BE%8B%E5%A2%9E%E9%95%BF%E4%B8%89%E6%97%A5%E5%B9%B3%E5%9D%87%7D%7B%E7%88%86%E5%8F%91%E4%BA%94%E5%A4%A9%E5%90%8E%E7%97%85%E4%BE%8B%E5%A2%9E%E9%95%BF%E4%B8%89%E6%97%A5%E5%B9%B3%E5%9D%87%7D%29%3D2.56%5Ctimes+ln%28%5Cfrac%7B%E7%96%AB%E6%83%85%E7%88%86%E5%8F%91%E4%BA%94%E5%A4%A9%E5%90%8E%E4%BA%BA%E6%B5%81%E9%87%8F%7D%7B%E7%96%AB%E6%83%85%E7%88%86%E5%8F%91%E4%B8%80%E5%A4%A9%E5%89%8D%E4%BA%BA%E6%B5%81%E9%87%8F%7D%29-0.502\" alt=\"ln(\\frac{爆发半月后病例增长三日平均}{爆发五天后病例增长三日平均})=2.56\\times ln(\\frac{疫情爆发五天后人流量}{疫情爆发一天前人流量})-0.502\" eeimg=\"1\"></p>\n<p data-pid=\"rkmDpi6p\">而在奥密克戎变异疫情下，该表达式变成了：</p>\n<p data-pid=\"VrPJqrnw\"><img src=\"https://www.zhihu.com/equation?tex=ln%28%5Cfrac%7B%E7%88%86%E5%8F%91%E5%8D%8A%E4%B8%AA%E6%9C%88%E5%90%8E%E7%97%85%E4%BE%8B%E5%A2%9E%E9%95%BF%E4%B8%89%E6%97%A5%E5%B9%B3%E5%9D%87%7D%7B%E7%88%86%E5%8F%91%E4%BA%94%E5%A4%A9%E5%90%8E%E7%97%85%E4%BE%8B%E5%A2%9E%E9%95%BF%E4%B8%89%E6%97%A5%E5%B9%B3%E5%9D%87%7D%29%3D2.78%5Ctimes+ln%28%5Cfrac%7B%E7%96%AB%E6%83%85%E7%88%86%E5%8F%91%E4%BA%94%E5%A4%A9%E5%90%8E%E4%BA%BA%E6%B5%81%E9%87%8F%7D%7B%E7%96%AB%E6%83%85%E7%88%86%E5%8F%91%E4%B8%80%E5%A4%A9%E5%89%8D%E4%BA%BA%E6%B5%81%E9%87%8F%7D%29%2B1.259\" alt=\"ln(\\frac{爆发半个月后病例增长三日平均}{爆发五天后病例增长三日平均})=2.78\\times ln(\\frac{疫情爆发五天后人流量}{疫情爆发一天前人流量})+1.259\" eeimg=\"1\"></p>\n<p data-pid=\"Q_QtUDUl\">两者的斜率类似，但两者的截距，一个是-0.502，一个是1.259，也就是说，在同样的防控力度下，奥密克戎变异疫情的病例增长对数，将比非奥密克戎变异疫情的病例增长对数高出1.761。</p>\n<p data-pid=\"BefBuor6\">将自然对数作为底数计算，这意味着<b><u>在同样的初始爆发条件和同样的防控力度下，奥密克戎变异疫情在半个月后的每日新增病例，将比非奥密克戎疫情在半个月后的每日新增病例高出5.82倍。</u></b></p>\n<p data-pid=\"uFWgdSws\">换一种表述，如果要让疫情得到控制，那么奥密克戎变异疫情后的人流量对数，需要比非奥密克戎疫情后的人流量对数，低0.648。将自然对数作为底数计算，这意味着<b><u>要将半个月后的疫情控制在同样的程度下，奥密克戎变异需要比非奥密克戎变异，压低额外的52%的人流量。</u></b></p>\n<p data-pid=\"YLX_4w4D\">2021年时将人流量减少到80%可以控制的疫情，现在需要将人流量减少到38.2%（即80%×（1-52%）=38.2%）才能达到同样的效果。</p>\n<h2><b>▍举个例子：长春</b></h2>\n<p data-pid=\"sB6GSPWM\">我们在之前的一个视频<a href=\"https://www.zhihu.com/zvideo/1484954241484120064\" class=\"internal\">【透过数据看世界】 * 疫情之下 * 哪些城市经济更扛“造”？</a>中曾经提到，长春是一个能够从疫情中快速恢复的好例子。</p>\n<p data-pid=\"t-F_Ve0U\">2021年1月15日到2021年2月16日，长春爆发了一次105个病例的中等规模疫情。第一个病例于2021年1月16日报告，长春市立刻定位至疫情原发地公主岭市，1月18日开展第一轮长春下辖的公主岭市的全员核酸，要求<b>「所有居民居家隔离，严禁出户，生活必需品由村屯、社区、小区值守人员代买」</b>，并且对相关区域封城封区。第一轮核酸完毕后，长春将包围圈缩小至范家屯镇，在范家屯镇连续进行了4轮全员核酸。此时长春疫情已经得到了有效控制。再过一周，长春在1月30在公主岭市进行了第二轮全员核酸。接下来的所有新增病例都在隔离管控中发现。</p>\n<p data-pid=\"L9Bdk2iv\">在2021年这一轮疫情中，长春市用雷霆手段，精准对个别区域进行全员核酸，实施严格封控，疫情一周就得到控制，两周就实现了社会面清零，后续经济也就快速恢复了。</p>\n<p data-pid=\"N-ia3R_W\">从线上、线下人流量数据中可以看到，长春的线上消费用了29天恢复到疫情前水平，线下人流量只用了35天就恢复到了疫情前水平。从下图的病例和人流量指数可以看到，长春整体的人流量下降并不明显，防控措施在1月26日左右达到顶峰时，<b><u>当地的人流量也只是下降到了疫情前的76%，却也成功控制住了疫情。</u></b></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-681f22e6390283d787c73f4cae5f3cc9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"751\" data-rawheight=\"452\" class=\"origin_image zh-lightbox-thumb\" width=\"751\" data-original=\"https://pic2.zhimg.com/v2-681f22e6390283d787c73f4cae5f3cc9_r.jpg\"></figure><p data-pid=\"CD26vY92\"><i>图表 8：长春非奥密克戎变异疫情病例与人流量指数</i></p>\n<p data-pid=\"vMRihOmp\">那么，在这一轮奥密克戎变异疫情中，长春又呈现了怎样的变化呢？</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-cfcc841d8172ead4920917a423a75dc6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"752\" data-rawheight=\"452\" class=\"origin_image zh-lightbox-thumb\" width=\"752\" data-original=\"https://pic3.zhimg.com/v2-cfcc841d8172ead4920917a423a75dc6_r.jpg\"></figure><p data-pid=\"1PxlWLds\"><i>图表 9：长春奥密克戎变异疫情病例与人流量指数</i></p>\n<p data-pid=\"gLIzraI2\">从图中可以看到，本次长春疫情，3月4号出现第一例病例，3月5日长春的人流量就开始下降，一直下降到3月16日，<b><u>长春的人流量已经降低到疫情前的4%</u></b>，无论从速度、下降幅度还是持续时间上，长春本轮疫情的封控强度都已经远远超过了2021年1月时的疫情。但从结果看，每日病例仍然在继续上升。4月2日，长春新增确诊病例和无症状感染者合计3823人，再次创下奥密克戎变异疫情以来的当地最高峰。</p>\n<h2><b>▍写在最后</b></h2>\n<p data-pid=\"Y8Xvnnhv\">从武汉疫情之后，中国一共出现了124次非奥密克戎疫情以及215次奥密克戎疫情，匹配人口流量数据后，我们可以获得其中<b>55次非奥密克戎疫情</b>和<b>70次奥密克戎疫情</b>的防控程度和疫情扩散率，从中可以得出两点结论：</p>\n<p data-pid=\"fhaO2YgO\"><b>一， 在相同防控程度下，奥密克戎变异疫情的扩散速度要比非奥密克戎疫情快5.82倍。</b></p>\n<p data-pid=\"d3qKeS4S\"><b>二， 要控制住疫情的扩散，奥密克戎变异袭击的城市需要在原有封控强度上再额外减少52%的人流量，才能取得非奥密克戎疫情下相同水平的防控成果。</b></p>\n<p data-pid=\"YNp-arX_\">奥密克戎变异的高传播性使得以往行之有效的防控手段失去了作用。</p>\n<p data-pid=\"FI5vXg6s\">那么，我们应该做到什么程度，才能够防控奥密克戎变异呢？如果只是去看个别数据，可能会让我们得到偏颇的结论。</p>\n<p data-pid=\"ER8gnYFH\">要是只看<b>深圳</b>，你可能会成为一个乐观主义者，认为即使疫情已经发展了半个月，仍有机会用「长痛不如短痛」的封控来解决疫情。</p>\n<p data-pid=\"Ez6wAyTn\">要是盯着<b>长春</b>，你又会成为一个悲观主义者，认为只要疫情一旦扩散，就再也无法通过封控的手段来解决，一个月的封城也无法阻止病例的继续上升。</p>\n<p data-pid=\"QAhd3PYo\">这也是为什么我们需要去看更多的数据点。从我们的数据观察，有62个地区在奥密克戎变异疫情出现后采取了一定的防控手段。</p>\n<p data-pid=\"t7edBdJn\">这些防控手段如果用在<b>奥密克戎变异之前</b>的疫情中，可以有<b>92%的可能控制住疫情</b>，即使病例继续上升，也极少出现爆发性增长的状况。</p>\n<p data-pid=\"w_G1nMFD\">但在<b>奥密克戎疫情中，同样程度的防控措施，控制住疫情的概率只剩下51%</b>。在那些没有控制住疫情的地区，更是有一部分出现了病例的爆发式的指数增长和传播。</p>\n<p data-pid=\"EFX-8Yfu\">因此，若要用较大把握防控奥密克戎变异疫情，我们不得不采取更加严格的措施，<b>唯一能够百分之百保证疫情不出现大规模扩散的方法，出现在上文图7的左边——在第一例病例出现后，立刻采取最为严格的封控。</b>图7左方的天津津南、河南安阳、山东威海，都是通过异常严格的手段，短期内大幅度降低人流量，才换来了新增病例的下降。</p>\n<p data-pid=\"sMxD-QDU\">如今，越来越多的城市也意识到了这一点。4月2日，海南三亚报告了1例确诊病例和4例无症状感染者，这是三亚市一个月以来第一次出现确诊病例。同日，4月2日晚上17:00，三亚便暂停了整个城市的客运、公交、出租车、游船运营。</p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-f08f704be9cb7a449a30fed2328e509f_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1160\" data-rawheight=\"1756\" class=\"origin_image zh-lightbox-thumb\" width=\"1160\" data-original=\"https://pic4.zhimg.com/v2-f08f704be9cb7a449a30fed2328e509f_r.jpg\"></figure><p data-pid=\"kFx88Qf1\">这，也许才是我们防控奥密克戎变异疫情时，唯一能够保证成功的手段。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/chenqin?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">chenqin</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/492703994?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"《进击的巨人》中超大型巨人的爆炸当量有多大？","date":"2022-04-06 01:55:46","description":"\n<p data-pid=\"NdeGe9BV\">在《进击的巨人》中，巨人化的过程往往都会伴随着剧烈的爆炸。</p>\n<p data-pid=\"AGrpa1kp\">超大型巨人，常常被称作“<b>核爆巨</b>”，这是因为其变身所产生的爆炸效果堪比核弹，和其他巨人完全不可同日而语。</p>\n<p data-pid=\"a_jKQ9CS\">但是，<b>超大型巨人的爆炸能量真的堪比核弹吗？</b></p>\n<p data-pid=\"8B1-zF0g\">我们来做一下简单的计算。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-2f4af490f39ba1cec56cf75016331f6d_720w.jpg?source=b1748391?rss\" data-caption=\"TAFIOBOY (YouTube）\" data-size=\"normal\" data-rawwidth=\"2014\" data-rawheight=\"1128\" data-watermark=\"watermark\" data-original-src=\"v2-2f4af490f39ba1cec56cf75016331f6d\" data-watermark-src=\"v2-3e314f22e213a97520242c10d63fb815\" data-private-watermark-src=\"v2-22e2866ecf2326d5be2df35f9b2a4827\"></p>\n<hr>\n<p data-pid=\"FIbLd5Ib\">首先，请大家思考一个很有意思的问题，<b>超大型巨人在变身时释放的能量是可控的吗？</b></p>\n<p data-pid=\"594iWFDd\"><b>从贝尔托特的四次变身我们可以很清楚地看到，偷摸变身和彻底释放出来的能量完全不是一个数量级。</b></p>\n<p data-pid=\"oWOn_Qy2\">举个例子，贝尔托特在托洛斯特区变身的时候，就是偷偷摸摸变身，几乎没有爆炸特效，只是在艾伦后面吹了点风。变身地点离艾伦等人非常近，却没有对他们造成任何伤害。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-835bf70dc9492beb7df60a6745022549_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1262\" data-rawheight=\"1436\" data-watermark=\"watermark\" data-original-src=\"v2-835bf70dc9492beb7df60a6745022549\" data-watermark-src=\"v2-f4cb7beb97e8571ec2f7b667dc8f4310\" data-private-watermark-src=\"v2-6704ca3c73e4a63c83386e77996b149a\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-18e6bb4090b0503b79c2f3672a41b59d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1178\" data-rawheight=\"886\" data-watermark=\"watermark\" data-original-src=\"v2-18e6bb4090b0503b79c2f3672a41b59d\" data-watermark-src=\"v2-b19335f50c1cb846935a1c96885af079\" data-private-watermark-src=\"v2-86d1334459eb10b437f2f5f81421ada7\"></p>\n<p data-pid=\"XKfXhWW1\">再比如，《叛变神曲》的时候，由于顾及到莱纳和艾伦，贝尔托特变身时并没有完全释放爆炸能量，依然只有一小阵冲击波，而且也没有变成完全体。</p>\n<p><img src=\"https://pica.zhimg.com/v2-d276fbdc5ec71b3e05562971e5214373_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1638\" data-rawheight=\"1244\" data-watermark=\"watermark\" data-original-src=\"v2-d276fbdc5ec71b3e05562971e5214373\" data-watermark-src=\"v2-44b19bb44788e9f3e531dcd0142ebe54\" data-private-watermark-src=\"v2-60b1b3cb155fde9fa9f17c73bb48eafb\"></p>\n<p data-pid=\"IjN9M4K9\">然而，<b>自玛利亚之墙开始，“核爆”突然成了超大型巨人的重要技能。</b>到了玛利亚之墙夺回战的时候，贝尔托特炸出了一块蘑菇云，还造成了很大范围的破坏，直接导致了调查兵团的重大伤亡。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-5d8a15b5cbba332bd7e2892f9824880c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1054\" data-rawheight=\"1602\" data-watermark=\"watermark\" data-original-src=\"v2-5d8a15b5cbba332bd7e2892f9824880c\" data-watermark-src=\"v2-a03f282b35ce15be8da44af0780bf8bf\" data-private-watermark-src=\"v2-206e015d820fe5f6a71f311f2b9bd665\" data-tags=\"politic\"></p>\n<p data-pid=\"Rmp-B4bC\">阿尔敏炸马莱军港的时候，也是出现了类似核弹爆炸的巨型冲击波，不仅军舰都被炸到半空，连周边的居民区都被炸得一片狼藉。</p>\n<p><img src=\"https://pica.zhimg.com/v2-15296eb886f2af4122547b306ea4a2d3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1000\" data-rawheight=\"718\" data-watermark=\"watermark\" data-original-src=\"v2-15296eb886f2af4122547b306ea4a2d3\" data-watermark-src=\"v2-bc137e01c93765b67393f85afc68438e\" data-private-watermark-src=\"v2-c564f9bdd46c619b1835e3d369b3361b\"></p>\n<p data-pid=\"qHZ806IV\">在救世篇的最后，阿尔敏的超大型巨人也成为了不用则已、一用惊人的杀手锏、最终武器，用来炸掉艾伦的蜈蚣巨人。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-5cbcff39ea2114d1dd6355d832384776_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"641\" data-rawheight=\"481\" data-watermark=\"watermark\" data-original-src=\"v2-5cbcff39ea2114d1dd6355d832384776\" data-watermark-src=\"v2-5e7baaa92684eb3f17b4732d58827953\" data-private-watermark-src=\"v2-e9b6a45794aae361ce44c12ce945a58d\"></p>\n<p data-pid=\"WCoiROBP\">因此，我产生了一个猜想，<b>超大型巨人的“核爆”能力很有可能是谏山创在中间添上的设定</b>，毕竟之前从来没用过，后面突然出现，以至于为了强调这一点，在马莱篇还专门加了一格来讲解。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-5cb05e7bb4308a4268c11732e13699d1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"630\" data-rawheight=\"712\" data-watermark=\"watermark\" data-original-src=\"v2-5cb05e7bb4308a4268c11732e13699d1\" data-watermark-src=\"v2-2c87daa8e4aa11d8d33b2757a9d1d251\" data-private-watermark-src=\"v2-c7a0a9d655e38231e4f27a0e2949e0bf\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-05245707dbe5eab3c56d27ecc115d4d3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"638\" data-rawheight=\"948\" data-watermark=\"watermark\" data-original-src=\"v2-05245707dbe5eab3c56d27ecc115d4d3\" data-watermark-src=\"v2-0a1925bc2b7678fbc9ea9e9b62ba31fa\" data-private-watermark-src=\"v2-8a58b9b7903e5ac6469eee5000c94cf5\"></p>\n<p data-pid=\"3ev1ecqk\">阿尔敏等人被困在地下室的时候，科尼问阿尔敏可不可以变身，阿尔敏说的是“<b>没办法，我只能把这城镇炸飞</b>”，后面还加了一句来解释：“超大型巨人无法做出那么细腻的动作，像艾伦那样。”</p>\n<p data-pid=\"bGYWMc43\">注意，阿尔敏说的不是“我怕伤到你们”，直接就是“我怕把城镇炸飞”，听起来似乎和贝尔托特有所不同，仿佛无法实现可控的变身过程与能量释放。</p>\n<p><img src=\"https://pica.zhimg.com/v2-a1555c440d5f8c7db043c4c43e17663c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"514\" data-rawheight=\"530\" data-watermark=\"watermark\" data-original-src=\"v2-a1555c440d5f8c7db043c4c43e17663c\" data-watermark-src=\"v2-bb33d5caeb3ff38716ecb1b0d88f9c4d\" data-private-watermark-src=\"v2-93b9c430f221420dac092e8d0aaaf16c\" data-tags=\"porn\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-1ab57bb8b72bd4a9437fa83d232bdd45_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"972\" data-rawheight=\"292\" data-watermark=\"watermark\" data-original-src=\"v2-1ab57bb8b72bd4a9437fa83d232bdd45\" data-watermark-src=\"v2-d1253848ef2fa7da97915e0231a17e80\" data-private-watermark-src=\"v2-740eb92d04336c7ee5ea0f3913af8f99\"></p>\n<p data-pid=\"FQ0RYo0X\">而阿尔敏之所以被很多读者诟病，有一方面就是因为他身藏超大巨，却在很多战斗中都无法成为有效战力；而他之所以成为不了有效战力，<b>就是因为他说的这几句话，超大型巨人的爆炸力限制了其适用场景。</b></p>\n<h3><b>当然，还有另外一种可能，阿尔敏的超大型巨人和贝尔托特的是不同的，阿尔敏没这能力。</b></h3>\n<p data-pid=\"sR2kXmNT\">所以，关于超大型巨人的爆炸能力，有以下两种可能性：</p>\n<ol>\n<li data-pid=\"UpK5Hoqp\"><b>谏山创吃书了，中间改了设定。</b></li>\n<li data-pid=\"yuPHjSdm\"><b>阿尔敏的超大型巨人没有调节爆炸当量的能力。</b></li>\n</ol>\n<h3>基于第二点，我们可以进一步推断：<b>阿尔敏的超大型巨人是“核爆能力特化”后的结果。</b>\n</h3>\n<p data-pid=\"Tbni_eui\">听我慢慢解释。</p>\n<p data-pid=\"B-bCV2TO\">从下图我们可以看到，虽然身高相同，但是阿尔敏超大巨（左）明显要比贝尔托特超大巨“瘦”一圈。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-762f86f3f9b87eae7ce86f610f4e3147_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"755\" data-rawheight=\"774\" data-watermark=\"watermark\" data-original-src=\"v2-762f86f3f9b87eae7ce86f610f4e3147\" data-watermark-src=\"v2-0a05d73eb1d1c023797cfc2f03a24ec3\" data-private-watermark-src=\"v2-dcaa9b6c3aa3f32c02f0fc64248dbd63\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-6e4f74ce5af281c701c7f5ef5bba524d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"720\" data-watermark=\"watermark\" data-original-src=\"v2-6e4f74ce5af281c701c7f5ef5bba524d\" data-watermark-src=\"v2-499529bf50f184184966792814893ea8\" data-private-watermark-src=\"v2-30bd29931f8cb603cec49f765906c357\"></p>\n<p data-pid=\"FIGhss5f\">上面这幅动画中的特写对比也显示出，<b>阿尔敏超大巨的肌肉量比贝尔托特少很多</b>。在玛利亚之墙篇中我们知道，贝尔托特的<b>超大型巨人会通过消耗肌肉来释放蒸汽。</b></p>\n<h3><b>因此，阿尔敏的超大型巨人的肌肉量这么少的原因，很可能正是通过牺牲一部分体型（肌肉量）而特化了爆炸能力。</b></h3>\n<p data-pid=\"Xo-DTz7e\">接下来，对阿尔敏超大型巨人的爆炸当量做一下具体计算。</p>\n<p data-pid=\"Ow7-enyF\">首先算一下在马莱军港的那一次变身。</p>\n<p data-pid=\"bQiNgsH2\">我们假设那艘被炸起的军舰是日本<b>Kuma轻巡洋舰</b>，其舰长162.1m，占15像素。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-bb0db0b02799825cb762c1f2f65bf5fb_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1722\" data-rawheight=\"1280\" data-watermark=\"watermark\" data-original-src=\"v2-bb0db0b02799825cb762c1f2f65bf5fb\" data-watermark-src=\"v2-84540b0fdfcba7e9061402a56bc9e019\" data-private-watermark-src=\"v2-56dfc524b90c804855cfa3d73aeea9dc\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-9ba0a4985b9e88b066a638ad972d7aec_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"658\" data-rawheight=\"634\" data-watermark=\"watermark\" data-original-src=\"v2-9ba0a4985b9e88b066a638ad972d7aec\" data-watermark-src=\"v2-47991da302496b22fb7c0751dd6375df\" data-private-watermark-src=\"v2-01df8d15a51226cd91b2ab6abd319dbd\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-ab68661111bbf5321dd286899c565ecf_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2812\" data-rawheight=\"1688\" data-watermark=\"watermark\" data-original-src=\"v2-ab68661111bbf5321dd286899c565ecf\" data-watermark-src=\"v2-1cc27b09fdeedc6a5eae6b6d2d6b63d4\" data-private-watermark-src=\"v2-7a6741c06e67d3c1ed078f45990afccf\"></p>\n<p data-pid=\"3f0q8qyT\">则爆炸半径的长度为</p>\n<p data-pid=\"mKzKpW-x\"><img src=\"https://www.zhihu.com/equation?tex=%5Cfrac%7B162.1%7D%7B15%7D%5Ctimes137%3D1480.4%5C+m\" alt=\"\\frac{162.1}{15}\\times137=1480.4\\ m\" eeimg=\"1\"></p>\n<p data-pid=\"tSf2GAuu\"><b>爆炸当量</b>又称“<b>TNT当量</b>”，是指炸药的爆炸造成的威力，相当于多少质量单位的三硝基甲苯（TNT）爆炸所造成的威力相同。一克的 TNT 爆炸会释放出来4184 焦耳（Joule）左右的能量。</p>\n<p data-pid=\"yH-ZYeXL\">我们借助一个叫 Nukemap 的网站来计算其爆炸当量。</p>\n<a href=\"http://link.zhihu.com/?target=https%3A//nuclearsecrecy.com/nukemap/\" data-draft-node=\"block\" data-draft-type=\"link-card\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">nuclearsecrecy.com/nuke</span><span class=\"invisible\">map/</span><span class=\"ellipsis\"></span></a><p><img src=\"https://pic2.zhimg.com/v2-791d5264814bbe3be64e3653ceacc06c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3816\" data-rawheight=\"1820\" data-watermark=\"watermark\" data-original-src=\"v2-791d5264814bbe3be64e3653ceacc06c\" data-watermark-src=\"v2-fa639b169dc4be55f6a46aade4139dab\" data-private-watermark-src=\"v2-78655eca5ff8bf696f37e66746654581\"></p>\n<p data-pid=\"trw2dk10\">在这里的计算其实是反过来的，<b>输入爆炸当量，可以算出不同程度的爆炸范围</b>。比如<b>火球半径（fireball radius），轰爆半径（heavy blast damage radius），辐射半径（radiation radius）</b>等等。</p>\n<p data-pid=\"CR2iOyvZ\">比如，我们假定图中的光球为轰爆半径所对应的范围，可以输入一些爆炸当量进行尝试。当“yield”一栏输入315千吨时，轰爆半径为我们所计算的1.48 km。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-981474f8fac43814109ccce830547f51_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"832\" data-rawheight=\"876\" data-watermark=\"watermark\" data-original-src=\"v2-981474f8fac43814109ccce830547f51\" data-watermark-src=\"v2-2a3dcda556188768a6dd70dc37fff6f1\" data-private-watermark-src=\"v2-a7b2b92cdce6a341788b6009b3fc5ebe\"></p>\n<p data-pid=\"dwZWyHOr\">因此推算，<b>阿尔敏超大型巨人的核爆当量为315千吨（31.5万吨）TNT。</b></p>\n<p data-pid=\"Le8IPdpm\">对比一下，1945年8月6日，投于日本广岛的核弹大约等于1.3万吨的TNT，现代的战略核武器大约都相当于数万吨到数百万吨TNT，战术核武器则约一千吨到数万吨炸药，曾试爆过最大的核弹是俄国5800万吨的沙皇炸弹，最小的是美国的约十吨大卫克罗无后座力炮<sup data-text=\"\" data-url=\"https://en.wikipedia.org/wiki/TNT_equivalent\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"1\">[1]</sup>。</p>\n<p data-pid=\"Wsl6vMIv\"><b>因此，阿尔敏的核爆已经相当于一个中等战略核武器的规模，爆炸威力相当于数十个“小男孩”。</b></p>\n<p data-pid=\"cEBaJmcW\"><b>再来看最后炸艾伦的那一次爆炸。</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-7d9c50ce30691f45e4a3a4b5f75a01b3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2128\" data-rawheight=\"1040\" data-watermark=\"watermark\" data-original-src=\"v2-7d9c50ce30691f45e4a3a4b5f75a01b3\" data-watermark-src=\"v2-9f3920db058204019848e1f07e448d20\" data-private-watermark-src=\"v2-b0596ad56a6ab6dcd62b58fbdccf1b43\"></p>\n<p data-pid=\"a9HdyYAA\">假设超大型巨人的头部长度为3m (27像素)，爆炸坑的直径为262.57m (2341像素)，深度为25.35m（226像素）。我们把数据输入一个叫做 Spherical Dome Calculator 的网站，计算得出爆炸坑的体积为694851立方米。</p>\n<a href=\"http://link.zhihu.com/?target=https%3A//monolithicdome.com/spherical-dome-calculator%3Fd%3D262.57%26h%3D25.35%26w%3D0%26l%3D0%26o%3Dperson%26u%3Dm%26commit%3DGo\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-546f416ed465b6e65842d849ad1282da_qhd.jpg?source=b1748391\" data-image-width=\"1600\" data-image-height=\"549\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Spherical Dome Calculator</a><p><img src=\"https://pic3.zhimg.com/v2-337fbef74c7ee135e97ad864c4cfbc81_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2160\" data-rawheight=\"1102\" data-watermark=\"watermark\" data-original-src=\"v2-337fbef74c7ee135e97ad864c4cfbc81\" data-watermark-src=\"v2-2882aa0b87d821cc9cb427974de4d0b1\" data-private-watermark-src=\"v2-9f1e330246f4749a56838bfb83ed405d\"></p>\n<p data-pid=\"blZjznz0\">将1立方厘米岩石粉碎需要的能量约为214.35焦<sup data-text=\"\" data-url=\"https://character-level.fandom.com/wiki/Calculations\" data-draft-node=\"inline\" data-draft-type=\"reference\" data-numero=\"2\">[2]</sup>，所以把这一块体积的岩石彻底炸碎所需的能量为 <img src=\"https://www.zhihu.com/equation?tex=1.49%5Ctimes10%5E%7B14%7D%5C+J\" alt=\"1.49\\times10^{14}\\ J\" eeimg=\"1\"> ，即35.6千吨TNT当量。</p>\n<p data-pid=\"Kp4i2hxG\"><b>这个数字比军港那次爆炸小了很多，但依然是战略核武器的级别。</b></p>\n<p data-pid=\"kqF8YBEx\">这一次爆炸，阿尔敏很可能是对艾伦留了一手，保存一点肌肉用于后面的搏斗（这或许也是阿尔敏走了那么远都没有着急解除巨人化的原因）。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-c776c521a246781c3b2367ff664ed7f3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1088\" data-rawheight=\"884\" data-watermark=\"watermark\" data-original-src=\"v2-c776c521a246781c3b2367ff664ed7f3\" data-watermark-src=\"v2-3a1106e68f6670b9abd0dded32c658bf\" data-private-watermark-src=\"v2-bc9089a12892064c50f7717602f6cd8f\"></p>\n<h2><b>推荐阅读</b></h2>\n<a href=\"https://www.zhihu.com/question/524277410/answer/2413636802\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-8e730e33ff319fa9266b4a35d211ed18_l.jpg?source=b1748391\" data-image-width=\"1406\" data-image-height=\"1286\" class=\"internal\">《进击的巨人》到底有多少地鸣巨人？</a><a href=\"https://www.zhihu.com/question/523798811/answer/2407852679\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-f0638ee39e9a73c5502b6e2a3e459268_qhd.jpg?source=b1748391\" data-image-width=\"2314\" data-image-height=\"1274\" class=\"internal\">为什么《进击的巨人》中巨人的身材比例不一样？</a><a href=\"https://www.zhihu.com/question/523295110/answer/2404884808\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-8ba5f0d19445d5266567431c5e18b9c3_qhd.jpg?source=b1748391\" data-image-width=\"1818\" data-image-height=\"1440\" class=\"internal\">《进击的巨人》中法尔科的颚之巨人真的能飞起来吗？</a><a data-draft-node=\"block\" data-draft-type=\"ad-link-card\" data-ad-id=\"fee_00c3f6bb68825344a7a8d80bfcbbe081\"></a><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/heroblast?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">英雄王爆破</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>延伸阅读：<br><a href=\"http://www.zhihu.com/question/453404448?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何看待《进击的巨人》139 话的「烂尾」？</a><br><a href=\"http://www.zhihu.com/question/332647162?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">进击的巨人、超大型巨人和铠之巨人，哪一个更有用？</a><br>\n","link":"http://www.zhihu.com/question/525278924/answer/2421178810?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：WWDC22 将于 6 月 6 日至 10 日举行、Twitter 任命马斯克为董事会成员等","date":"2022-04-06 00:45:27","description":"微软宣布将为 Windows 11 带来多项新功能，五大 Android 应用商店宣布共同推进 64 位应用升级等。<a href=\"https://sspai.com/post/72482\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72482"},{"title":"合上电脑，与三星 DeX 度过一周","date":"2022-04-05 07:00:29","description":"三星 DeX 的产品形态并非首创，但它却是现阶段我们能够用上的、为数不多的移动设备桌面化体验之一——只是在一个分崩离析的软件生态中， 它缺点也被成倍放大了。<a href=\"https://sspai.com/post/72475\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72475"},{"title":"保险公司倒闭保单会受影响吗？细数保险公司的十大安全机制","date":"2022-04-05 02:32:06","description":"保险公司如果倒了，保单失效理赔不了，交的保费是不是也就此打了水漂？今天我们就来聊聊保险公司的十大安全机制。<a href=\"https://sspai.com/post/72358\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72358"},{"title":"Matrix Talk丨从一线回到家乡二线城市定居，你后悔了吗？","date":"2022-04-04 07:00:00","description":"关于MatrixTalk在少数派Matrix社区聚集着一批分享者，你可能经常看他们分享数字生活的心得体验，但你大概还不熟悉他们。为了拉近大家的距离，我们策划了MatrixTalk栏目，将不定期邀请Ma ...<a href=\"https://sspai.com/post/72376\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72376"},{"title":"不会游泳还想玩潜水，这是一个旱鸭子的潜水考证之旅","date":"2022-04-04 04:45:30","description":"Matrix首页推荐Matrix是少数派的写作社区，我们主张分享真实的产品体验，有实用价值的经验与思考。我们会不定期挑选Matrix最优质的文章，展示来自用户的最真实的体验和观点。文章代表作者个人观点 ...<a href=\"https://sspai.com/post/72334\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72334"},{"title":"试播集 04 | 少数派作者们最近读完了啥（下）","date":"2022-04-03 04:29:34","description":"旧书店的萧条虽令人惋惜、痛苦，但情绪如此悠长深沉，苦涩中掺着难以言状的甘蜜之味。<a href=\"https://sspai.com/post/72353\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72353"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\n    return new Date(date.toLocaleString('en-US', { timeZone }))\n}\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        timeZone\n    })\n    return {\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\n        convert (date) {\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\n        }\n    }\n}\n\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\n    return converter.convert(new Date(secDate), tzName) - secDate\n}\n\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\ncmn-Hans-SG = 中文普通话-简体-新加坡\ncmn-Hant-TW = 中文普通话-繁体-台湾\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\ncmn = 中文普通话\n\nzh-Hans = 中文-简体\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\n}\n\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long'\n}\nconst now = new Date()\n\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\n\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\n\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\n\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\n\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\n\nzhCNFormatter.format(now) // 2021年10月13日星期三\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\n\njaFormatter.format(now) // 2021年10月13日水曜日\njaAltFormatter.format(now) // 令和3年10月13日水曜日\n\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\n// {locale: 'zh-CN', calendar: 'gregory', …}\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\n     // 基于一个固定日期计算，这里选择 1970.1.1\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\n    const base = new Date(1970, 0, 1).getTime()\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\n    return Array.from({ length: 7 }, (_, day) =&gt; (\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\n    ))\n}\n\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n}).formatToParts(new Date())\n// [\n//     { type: 'year', value: '2021' },\n//     { type: 'literal', value: '年' },\n//     { type: 'month', value: '10' },\n//     { type: 'literal', value: '月' },\n//     { type: 'day', value: '13' },\n//     { type: 'literal', value: '日' },\n//     { type: 'weekday', value: '星期三' },\n//     { type: 'literal', value: ' ' },\n//     { type: 'dayPeriod', value: '上午' },\n//     { type: 'hour', value: '1' },\n//     { type: 'literal', value: ':' },\n//     { type: 'minute', value: '00' },\n//     { type: 'literal', value: ':' },\n//     { type: 'second', value: '00' }\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\n}\n\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\n  timeZone: 'America/Los_Angeles',\n  year: 1995,\n  month: 12,\n  day: 7,\n  hour: 3,\n  minute: 24,\n  second: 30,\n  millisecond: 0,\n  microsecond: 3,\n  nanosecond: 500,\n  calendar: 'iso8601'\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote>\n<p>周六不放假休息，还在这加班搞 CTF？</p>\n</blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/86535/11/24318/75037/622032a8E4f94d4ae/89703ccc122cf4e0.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"从 Google Analytics 的统计代码说起 —— 谈谈 script 标签的 async 和 defer 属性","date":"2020-10-13 09:25:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/80291/2/16552/19311/622032b3Eb300c2aa/66748fc8124a01c5.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/script-async-defer/\">https://blog.skk.moe/post/script-async-defer/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/script-async-defer/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将 […]","link":"https://flyhigher.top/develop/2160.html"}]