[{"title":"本周看什么丨最近值得一看的一大把作品","date":"2022-04-22 09:55:20","description":"☕️TL;DR近期佳作推荐：[英剧]九号秘事第七季、[国产剧]亲爱的小孩、[动画]辉夜大小姐想让我告白第三季、[动画]古见同学有交流障碍症第二季、[电影]羽毛、[美剧]朱莉娅、[纪录片]DV计划、[动 ...<a href=\"https://sspai.com/post/72839\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72839"},{"title":"App+1丨想把食材吃出花样？《隔离食用手册》值得一试","date":"2022-04-22 08:30:00","description":"人在生活，柴米油盐少不了。居家生活之中，最常见到的一个场景就是，打开冰箱，然后啪地一下关上，随后嘟囔一句「不知道吃什么」。每当说起这话的时候，要多无奈就有多无奈。无他，因为超市里面一年到头卖的蔬菜总共 ...<a href=\"https://sspai.com/post/72815\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72815"},{"title":"行业十年——聊聊【密室逃脱】、【剧本杀】、【线下实景RPG游戏】的那些事","date":"2022-04-22 08:29:18","description":"\n<p data-pid=\"5bgaPKDP\">这两年来，一直都挺感叹</p>\n<p data-pid=\"t6lwWOAL\">感叹为什么老有一些人区分不了【密室逃脱】和【剧本杀】呢？</p>\n<p data-pid=\"l0GEJYC_\">很多文化圈的大佬，指着【密室逃脱】告诉我说，这个剧本杀是个好项目；</p>\n<p data-pid=\"xiIG68Qm\">很多商业圈的大佬，拉着告诉我，他们商场要引进一个剧本杀，每个人要换装，每个人要领任务，我说那个不叫剧本杀，那个叫【线下实景RPG游戏】；</p>\n<p data-pid=\"CV-gY9no\">很多创业者，甚至搞不清楚【密室逃脱】、【剧本杀】、【线下实景RPG游戏】都是什么，有着什么样的市场和用户定位。</p>\n<p data-pid=\"yNt7CH0w\">可能有的朋友会说，有什么关系嘛，都是游戏，玩就行了……</p>\n<p data-pid=\"V-9SfMY3\">但是如果真的就只是一样的游戏不同的叫法，那也就罢了，可偏偏他们就不是一种游戏，从底层逻辑、用户群体、市场适用性、投资回报、产业结构都有较大的差异。</p>\n<p data-pid=\"-FNqzdaG\">所以区分它们，是义不容辞，甚至是为了更好的发展实景游戏所必须要面对的一个本质问题——由此，行业十年，实景游戏不断发展，有些事我们得聊一聊，所以在下不才，斗胆写下文章，立下了话题。</p>\n<p data-pid=\"ItPDdex2\">文章字数较多，请根据情况阅读——</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"2RpVr35m\">作者简单介绍——</p>\n<p data-pid=\"NGJbTqiw\">肥熊大师，游戏行业做了二十年，从电子游戏、网络游戏、桌游棋牌到实景游戏都有丰富的设计和开发经验。在实景游戏摸爬滚打了十年，开创了恐怖类型密室、线下实景RPG游戏等，对于设计、机关、建造、经营都有丰富的经验，视带领新人闭坑、推动行业发展为己任。</p>\n<p data-pid=\"Ppi2MDja\"><b>1.【密室逃脱】、【剧本杀】、【线下实景RPG游戏】的底层逻辑和核心区别</b></p>\n<p data-pid=\"gh2a0huG\">很多从业者、老玩家其实对于这个话题而言，是很容易区分的，但是这种区分又只停留在感觉层面，而不是系统化的认知，所以我们可以先从最基础最干净的底层上去探寻这几个类型的区别。</p>\n<p data-pid=\"MyFp3BaM\"><b>【密室逃脱】的底层核心，是用户通过自身意识行为，按照设定的动线，突破关卡障碍，以达到最终目的是游戏形式。</b></p>\n<p data-pid=\"F_nd5Frh\">这里有几个关键点——</p>\n<p data-pid=\"tQeUnLvG\"><b>a.自身意识行为，</b>玩家是有自己的操作意识的，是和游戏产生互动的，这样的情况我们称之为有了游戏的动作，即参与。以此区别了游览类体验、沉浸式剧场等被动观看的行为现象。</p>\n<p data-pid=\"4qPNsN7H\"><b>b.设定的动线，</b>密室逃脱有一个比较明确的动线设定，无论是分组同时行动，还是集体行动，玩家的行为都被很精准的设定在一条明确的动线上，玩家不大可能超越动线，否则将导致游戏无法按照预定完成。这样的动线就达到了控制游戏节奏的目的。</p>\n<p data-pid=\"J5kBXEdj\"><b>c.关卡障碍，</b>密室逃脱另外一个绝对核心就是关卡，从密室逃脱这个类别的名字上看，玩家表面是在密室房间中逃脱，其实背后逻辑就是从预设的关卡之中越过障碍达成目的。</p>\n<p data-pid=\"fYzXklc1\">综上所述，我们可以看到，密室逃脱的内核是关卡性、动线明确的游戏，如何设计关卡，制造游戏障碍，并且以有趣的方式完成这些障碍，是密室逃脱的命门。而一些朋友说密室就是解密，这里所谓的解密，其实只是关卡的一种元素，并不能代表其特性。</p>\n<p data-pid=\"Z4-IqfSM\">一些剧本杀作品中也存在解密，有的人就说这是一个密室+剧本杀新型产品，其实这种说法不科学，好比一个添加了草莓调味剂的巧克力，我们不能说这是个草莓+巧克力的新物种。真正的说法是，这是一种含有解密或者密室逃脱元素的剧本杀。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"4OssH3Td\"><b>【剧本杀】的底层核心，是用户通过规则和限定，收集到线索片段，并通过各种形式的推理，找到故事真相来达成某种目的的游戏形式。</b></p>\n<p data-pid=\"Q5oXnHY1\">这里也有几个关键点——</p>\n<p data-pid=\"Oufb10LO\"><b>a.规则和限定，</b>剧本杀的游戏形式很难拥有动线，用户们以一种空间中相对自由形式进行参与游戏，而自由的游戏就一定具有机制，这种机制就是剧本杀中具备的规则和限定，让用户的自由变成相对性的，从而控制游戏的节奏和方式。</p>\n<p data-pid=\"FX-i0RTu\"><b>b.收集线索片段，</b>剧本杀游戏推动的另外一个要素，就是线索。线索不仅是推进游戏阶段的手段，也是游戏阶段目的的一种机制奖励。</p>\n<p data-pid=\"ArP6JUrU\"><b>c.推理故事真相，</b>是剧本杀绝对核心，几乎所有的剧本杀都必须掩盖真相，然后让用户找到真相以达成游戏成就感，而找到真相的方式，一定是通过线索的收集，进行故事的还原和重组。</p>\n<p data-pid=\"XTGpzDk8\">综上所述，剧本杀几乎就是推理型游戏。设计中，将线索分散并藏在规则和机制之中，玩家达成条件后，给予线索作为奖励物，当线索达到某种程度，或者游戏机制达到某种程度时，用户们可以找到真相。</p>\n<p data-pid=\"J7P0hbDe\">随着时代发展，一些剧本杀开始发生很多改变，比如加入了更多复杂的机制、或者和其他题材进行融合。但是我们只探寻内核，如果还是以推理为核心的，那么它依然属于剧本杀，而对于那些已经主导进行机制玩法的游戏，它或许已经是一个新的类型。</p>\n<p data-pid=\"Fe3BGti4\">这里有个比较有趣的案例，有一些剧本杀已经变成了玩机制（避嫌不举例了），从学术定义或者历史来看，它们其实是一种大概10年前就出现过的，称之为实景桌游的类型，只是经营者为其套了一层剧本杀的皮而已。这种实景桌游你可以理解为，三国杀要求玩家们穿上武将衣服，将杀和闪变成直接的行为动作之类的作品（三国杀可能离谱了一点，但是举这个例子大家可能会更容易变白），在当年桌游界的一些奇才真的试图通过这种方式来力挽桌游行业的衰退，而作者则有幸参加过几次……</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"fX-aJwhJ\">【线下实景RPG游戏】在讲它的底层核心前，需要特别科普一下。本身来说这个类别属于市面上比较小众的一个类型，小众并不是说它的消费人群很小众，而是产品太少。因为投资规模大、运营难度极高，真正能做起来的几乎都在一二线城市，且都是大品牌在运作。</p>\n<p data-pid=\"G2xafV97\">但是这个类型属于实景游戏中非常有想象空间的一个类型，当它出现时，一度让【密室逃脱】、【剧本杀】都往它身上去靠，且至今有大量的人分不起【线下实景RPG游戏】和【密室逃脱】、【剧本杀】到底区别在哪里。</p>\n<p data-pid=\"Q1uGvdIU\">而【线下实景RPG游戏】中比较知名的产品都比较纯粹诸如，《鬼夜锦衣行》《龙门客栈》《簋唐楼》《锦绣江湖》等等，玩过的人一定也不在少数。</p>\n<p data-pid=\"x6o37QoC\"><b>【线下实景RPG游戏】的底层核心，是用户通过角色扮演和代入，融入到开放的空间中，自由的达成自己的目的的游戏形式。</b></p>\n<p data-pid=\"D2zkkcrI\">这里也有几个关键点——</p>\n<p data-pid=\"0y1nh8QW\"><b>a.角色扮演和代入，</b>是RPG游戏的一种唯一展现方式，既然叫做RPG游戏，其实就是角色扮演。而这种角色扮演有别于所有其他类别，它是需要从外形、价值观、世界观都完全的融入到游戏之中的，游戏角色即是用户本身，这样的方式才能推动RPG游戏的发展。</p>\n<p data-pid=\"hmZ6d5bl\"><b>b.开放的空间，</b>是RPG游戏的核心载体，也表明了这个类型的场景和空间是没有限制性的，空间不再是单纯的展示和限制用户，而更多的是服务和衬托用户。</p>\n<p data-pid=\"ewvyyXya\"><b>c.自由的达成目的，</b>是RPG游戏的绝对核心，用户在不同阶段中没有明确的动线限制（区域限制是存在的），用户的行为和意识是自由的，对于游戏本身的探索和主张是游戏中最大的精髓所在，也是设计中的重点。</p>\n<p data-pid=\"Mhsl_ZES\">综上所述，线下实景RPG游戏其实更像是一个大型的家家酒游戏或者沙盘类的沉浸式扮演游戏，在设计好的剧情背景、场景、人物关系等条件下，让用户进行参与和发挥自己在这样环境下的作用性。从而达到推动游戏发展，享受游戏体验的过程。</p>\n<p data-pid=\"1wv11RIk\">当然大多数的RPG游戏都拥有比较强大的游戏机制作为内核的推动力，而并非单纯的扮演一个人，在场景中生活那么简单，强大的机制会推动和刺激用户不断的参与游戏，从而获得乐趣。</p>\n<p data-pid=\"SzwKq8_k\">这里需要明确区别的是，沉浸式密室或者沉浸式剧本并不是RPG游戏，很多游戏一旦有换装有扮演，有NPC互动就说是RPG游戏明显是不对的，因为换装也好，NPC互动也好，它们只是游戏的一种表达方式和形式，内核的玩法上，还是本质的密室和剧本。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"5-de8r2X\">分析完了三个类型，不知道大家有没有一些概念和想法了，但是目前可以认知，这些类型的分类中，没有因为是否谁更注重剧情、谁更注重机制、谁NPC用得更多、谁空间大小来分类。因为这些都只是产品的因素，从没有规定剧本杀就一定是重剧情，线下实景RPG就一定是重NPC的投入，一个优秀的作品，各种因素会很合理的拿捏。所以我们的分类就不会受到这些因素的干扰。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"8hqUHTaa\">PS：有一些朋友会问【不眠之夜】【知音号】这种产品属于以上哪个类型，抱歉的是他们都不属于，甚至他们也不属于实景游戏的范畴，他们的定义叫做实景演绎剧场或者实景真人表演互动，反正名字我也不算很清楚，但是它们和游戏没有关系，是以观赏的方式，近距离和表演工作者发生接触。没有我们所谓的游戏属性的存在。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"gyaZrEoz\"><b>2.【密室逃脱】、【剧本杀】、【线下实景RPG游戏】的历史背景和发展轨迹</b></p>\n<p data-pid=\"P96s64qE\">先说了分类，让大家有所认知之后，我们再回过头看看这些不同类型是如何进入中国，在中国市场发展的，这将有助于我们在后面更清晰的了解他们背后的市场环境。</p>\n<p data-pid=\"oDS9mUsL\">实景游戏其实并非是这十年才开始发展，更早的时候甚至可以追溯到上个世纪90年代。最早在中国实现广泛落地的商业化的实景游戏是【鬼屋】，其背后的类型应该叫做【游览游戏】。</p>\n<p data-pid=\"Ykg6nyct\">注：有人会疑问，游园活动、游乐场算是实景游戏吗？其实我们区别实景游戏，不是说在现实中玩的游戏或者体验的游戏设备，就叫做实景游戏，而是指利用真实场景作为游戏载体，并依附相应规则和玩法的游戏体验。所以以前我们所谓的游园之类的活动，只是传统游戏。游乐场则属于完全不同的另外一个行业了。</p>\n<p data-pid=\"Z8MovUHh\">鬼屋在中国发展到衰落用了接近十多年的时间，之后还有【真人射击游戏】【拓展训练游戏】等等各种类型持续的发展，但是这些类型都未真正的介入到游戏的深度，进而我们更多称之为靠接设备进行的场景游戏体验。直到【密室逃脱】出现，才真正意义上，将游戏和场景开始逐渐融合。</p>\n<p data-pid=\"hn3KoasV\">【密室逃脱】什么时候出现在中国，有很多说法，而最早进行商业应用的应该在2010-2011年之间。2012年全国各地开始大规模的商业行为发生，创业者多半都是以小体量的个体商户存在，而且大多数最原始的密室，往往是和桌游店进行结合的，桌游店老板们神奇的经营思路，最后意外的发现了密室比桌游赚钱得多得多，以至于后来很多桌游成功转型成为了密室逃脱最早的一批门店，这也是为什么很多年前，大多数的密室店都提供桌游的原因——这是个历史问题，而现在随着密室娱乐的专业化，桌游才慢慢消失。</p>\n<p data-pid=\"_4dEKPna\">而密室的由来，普遍说到是源于美国硅谷的一群天才，将电子游戏的密室逃脱以实际场景进行还原而诞生。我们姑且认为这是事实吧，毕竟没有第二个诞生的说法了。</p>\n<p data-pid=\"ewTwziLI\">密室的发展，从1.0强调解密为关卡核心，到2.0提升了机关电路的应用并融入到关卡中，再到3.0关卡开始围绕着剧情进行展开，最后到目前的4.0关卡以及不再是人机互动，而变成人人互动的模式，这10年的时间，密室不断的升级迭代，相对以及成熟了起来，市场用户也逐渐打开。至于1.0到4.0的密室模型具体有哪些区别，我们可以等待以后专门开一篇文章来讲。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"shhdLzLj\">【剧本杀】最开始是源于国外贵族、大学生之间联谊时经常进行的杀人推理游戏，在进入中国的时候它们也还不叫剧本杀，而是叫做推理游戏。最早的时候也是由桌游店老板们发起的，神奇的桌游店老板们永远是这个时代最值得尊重的开拓者。</p>\n<p data-pid=\"yw4gqo5U\">2013-2014年间，一些在国外比较知名的盒装推理游戏被走私到国内后，万能的桌游店老板们开始通过人工翻译成中文，并组织桌游爱好者们一起参与生硬的推理游戏。蹩脚的翻译、奇奇怪怪的机制、拉跨的扮演也掩盖不了这种游戏的魅力。</p>\n<p data-pid=\"mLbPKsZ0\">所幸那个时代，桌游店老板们都是人才，每个人对于这些游戏都充满了热情，人人都是极其游戏的DM，加上玩家群体也都是发烧友，很快的推理游戏被推到了台前。一些早期错过了密室逃脱这趟车的老板们，开始动起脑筋，找到了推理游戏的发财之道。</p>\n<p data-pid=\"fU6d9545\">2014-2015年，第一批推理游戏店在全国一些城市逐渐推广开（可能会有更早的，只是大规模出现在这个时候），那个时候所有的剧本几乎都是国外的翻译本。一些有经验的老板也开始根据国外的翻译本的结构，开始设计自己的剧本，渐渐有了专业的剧本设计师。</p>\n<p data-pid=\"nVf6okIC\">之后的剧本也开始出现了分化，更专注于推理、机制内核的取证类型，以及更倾向于场景体验、NPC互动的搜证类型。在题材上也分化出了诸如本格、变格之类的。而随着场景、市场、用户喜好等需求的增多，现在还分出了更偏向于某种属性的剧本，比如以喝酒为核心机制的酒本，以“交友”为核心的XX本等等。</p>\n<p data-pid=\"1ZmbBdPd\">剧本杀什么时候开始被叫做剧本杀，其实我也没有更加精准的一个说法，希望各位同行来补充。但是剧本杀的推广和发髻，做大的贡献者还是愿意芒果TV的一档综艺节目《明星大侦探》，凭借流量明星，高超的编导水平、平台的推广，很快将剧本杀乃至实景游戏的模式展现给更多的用户群体以及社会各界认知。</p>\n<p data-pid=\"8Ks8_vMc\">PS：曾经的狼人杀的火热也是同样靠接综艺节目带货，不得不说明星带货威力无穷。只是狼人杀先天的劣势存在，导致最终还是躺下了（有空也可以巴拉巴拉这段历史）</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"YmqeVW47\">【线下实景RPG游戏】相对于密室和剧本来说，则就算是一个妥妥的后辈了，但是正因为它是后辈，所以习得了前辈所长，但留下了一身贵族病。</p>\n<p data-pid=\"8FhBeKJd\">早在2015年甚至更早的时候，在密室圈里就开始发声一些牛逼的事情，某个或者某几个大的密室品牌开始尝试在密室产品中加入NPC，创造了第一批4.0的密室（其中就包括了我们），这些给了后来陷入创作瓶颈的密室设计师们一些思路，渐渐的设计出了一种新的类别——沉浸式演绎密室。</p>\n<p data-pid=\"oUQUop3a\">也就是将具备表演演技的NPC大量的投入到密室中，代替了机关的语音和假人。虽然成本突然猛增，但是用户则大量涌入和聚集，形成了头部品牌。</p>\n<p data-pid=\"Qz6yV3I4\">2017年末，真正意义上的线下实景RPG游戏才诞生，它其实就是不断基因突变发展的沉浸式演绎密室的进化体。在这个产品里，设计师们意识到关卡对于游戏体验的阻碍是可以移除的，转而将游戏的目标以任务、事件、剧情命运、人物关系的方式推出，就完全形成了一种新的体验，其中也得到了电子游戏和网络游戏的一些灵感。</p>\n<p data-pid=\"xtI6zOoO\">用户们发现，这样的产品下没有了动线、没有了固定的剧情，反而可以放开手脚做自己的时候，便更好的沉浸到了游戏世界之中，逐渐上瘾。</p>\n<p data-pid=\"okFUyil4\">数据表明，一个优秀的RPG游戏作品，某些玩家可以复刷到100次以上，而密室和剧本则基本只有1.2~1.5次。这个量级的差异，让RPG游戏有了突破实景游戏客流天花板的可能性，也是后面几年，很多品牌一直在摸索的方向。</p>\n<p data-pid=\"SfX_BRJG\">不过为什么说RPG游戏留了一身贵族病呢？就是因为大量专业NPC的介入、巨大的场景、大量精致的服装和道具，一时间让RPG游戏的成本高增，不仅投入大，维护成本和管理成本也高居不下。很多优质的作品，都是因为成本过高而倒闭，非常可惜。这也是为什么RPG游戏如此优秀，却在市场保有量较低的原因。</p>\n<p data-pid=\"fEfWVgo1\">不过随着这两年文旅市场和实景游戏的接轨，RPG游戏的天然劣势，在文旅市场就不再是问题，后面我们讲到不同类型产品的市场的时候，会着重说到。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"bXlKXnaV\">所以，这三大实景游戏巨头的发展历程如此所见，密室逃脱像是大哥，剧本杀像是出圈的小妹，RPG游戏像是最小的傲娇弟弟，当然之前的还有叔叔级别的鬼屋、真人射击之类的……而在国外其实还有很多类型迥异的实景游戏，它们或者因为文化差异水土不服，或者因为引入成本过高，等等各种原因我们还未接触，但是这个行业的精彩远不止于此。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"-7IijkcV\"><b>3.【密室逃脱】、【剧本杀】、【线下实景RPG游戏】的用户属性</b></p>\n<p data-pid=\"Ev0OZ3Yt\">我们再来看看三种产品，市场用户的差异化。这一点很重要，如果你是想要进入这个行业的店铺投资人，还是即将加入这个行业的设计师，甚至是文旅、地产的大佬，对它们用户的分类的了解都相当重要。</p>\n<p data-pid=\"C-pjYVUJ\">不可否认的是，三种类型的产品都有重叠的用户群体，这些用户群体往往是大量的资深老玩家、从业者，他们不会挑剔游戏的类型，更注重游戏的内核。但是除此以外还有更多的新进用户，他们无法区别产品类型，只是根据市场推荐随意的进行游戏，此刻他们的性向不稳，什么适合自己并无认知，错误的进入也可能导致他们放弃这个行业。</p>\n<p data-pid=\"QivmjYLz\">所以我们先绕开重叠用户，对每种类型的倾向性用户进行分析——</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"X0vrEn4x\"><b>【密室逃脱】用户分析</b></p>\n<p data-pid=\"tS8BhBRZ\">我们往往说密室逃脱的用户是最直接的实景游戏消费人群，潜在用户相对庞大，这是由密室逃脱的属性决定的。</p>\n<p data-pid=\"Ymr8TXP8\">如今的密室逃脱早已发展成不再解密为核心，更多的是通过沉浸演绎和互动体验来构筑关卡，最终以剧情、声光电效果、表演来给予玩家体验升华。</p>\n<p data-pid=\"cFABUZ5P\">这样的产品下，不会以阻碍玩家为目的而制造成就感，而是以玩家充沛的情感感受为成就感，那么门槛就下降到非常低的地步，任何用户都可以轻松的参加游戏和享受游戏，即便是所谓的酱油玩家，在不参与任何关卡的时候，只作为旁观者就可以享受到体验，这样的用户门槛势必更容易吸纳潜在用户。</p>\n<p data-pid=\"5-Pd7IGZ\">同时，密室逃脱的产品，体验时长一般在1小时到1.5小时为准，时间上不长也不短，时候休闲娱乐的碎片时间，很好的重组了玩家在商圈里多层娱乐消费中间的空白档期。进一步加强了对潜在用户的转化和吸客能力。很多用户在短暂的时间碎片周期里，会更容易选择到密室产品。</p>\n<p data-pid=\"evOSXSpz\">所以密室的用户比较全面化，无论是碎片用户、新进用户、目标用户还是资深用户（这里指普遍的一些密室，而非一直高端专精于高档沉浸演绎的密室）</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"ev-8JjjS\"><b>【剧本杀】用户分析</b></p>\n<p data-pid=\"LSiU_Clm\">普遍剧本杀的特性更适合资深用户，因为剧本杀的游戏方式以推理为核心，且用户之间存在极高的互动性，通过交流、算计、交易等各种方式，共享或者夺取线索，在使自己快速的掌握真相。这一切的玩法看起来都丰富且有趣，但却都建立在玩家足够的参与度，以及专注力、智商、情商之上。</p>\n<p data-pid=\"w8WgWVsk\">这样的产品结构天生就不太适合新进用户，因为太费脑力，加上游戏开始前大量的阅读和记忆，导致很多用户在开始的时候容易懵逼。而在游戏过程之中，也需要高强度的专注力，往往也让摸不着头脑的新进用户疲惫不堪。</p>\n<p data-pid=\"iHm-cDKe\">所以剧本杀很多的新用户都是靠老用户带领入门入坑的，如果没有手把手的教育，新进用户很容易在第一次体验之后流失。</p>\n<p data-pid=\"JGvxoBAf\">而碎片用户其实也不适合，关键问题就在于剧本杀的时间和情感投入时间周期太长，一般剧本的时间都在2.5小时左右。因为从获得线索、交流到推理，甚至理解到剧本的设计巧妙，太短的时间是无法支撑这场体验升华的。但是对于很多在商圈玩的客群来说，他们很难凑出2.5小时以上的时间来参加一个游戏（加上入场和复盘，很多剧本时间一般在4小时左右）</p>\n<p data-pid=\"hlQ0P3Dg\">那么剧本杀的用户群体主要还是以有过剧本经验，且有直接消费目标的人群为主。而且渐渐的这类用户形成了一个圈层，他们不喜欢和新用户玩剧本，而一直都在圈层内进行组队，然后疯狂的刷着各种不同的本子。</p>\n<p data-pid=\"FE03b-tQ\">圈层文化的背后是对设计创意的快速消耗，如今剧本的生命周期从早期的2-3年，快速被压榨到了现在1-2个月，这个消耗的原因除了盗版抄袭以外，还有就在于剧本和服务人群的比例失衡，说白点就是，剧本的创作速度已经远远大于了市场的开发速度。</p>\n<p data-pid=\"7EaQkTMH\">PS：当然最新出现的一些特殊属性剧本都在降低这个门槛，比如喝酒本，大家也可以了解一下。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"3MWM8_2U\"><b>【线下实景RPG游戏】用户分析</b></p>\n<p data-pid=\"wCZbGabp\">RPG游戏非常鲜明的优点是用户很直接能感受到的，它体验上更加自由，玩法更加多样化，个人成就感很容易形成，且沉浸代入感爆棚。不仅是面对新进用户，还是资深用户，都能在同一个产品中找到不同的快乐，而且两者之间也容易形成交互合作，也就是更适合社交属性。</p>\n<p data-pid=\"o9lKv-eL\">另外RPG游戏的自由性和低门槛，很容易让用户形成成长过度的体验感，用户初次接触看得懂游戏如何玩，玩深入之后发现游戏还可以千变万化，这种体验是独特的，因为用户和游戏都在成长，所以就有了复刷100次的玩家存在。</p>\n<p data-pid=\"S3i354cj\">但之前说到RPG游戏就是个贵族，成本极其高昂，这就导致了一场RPG游戏的成本远超了密室和剧本，自然票价就很高了。所以市场开发的用户并不是因为产品不好玩而流失，而是因为高昂的门票而流失。这就导致目前能盈利的RPG游戏基本都在一线城市。</p>\n<p data-pid=\"t01Juwkc\">另外在文旅及商业市场模块，我们也发现这些板块的天然用户和RPG游戏的用户属性高度重合，所以用RPG游戏开发这类场景的时候，相对于密室和剧本杀，则更加容易获得用户的认可和欢迎。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"XsZuxikv\"><b>4.【密室逃脱】、【剧本杀】、【线下实景RPG游戏】的市场投资价值和应用特性</b></p>\n<p data-pid=\"eKR9akCX\">最后在这个模块，我们将深度的探讨市场上这三种类型的投资特点和投资价值，以及他们的投入方向。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"3tGdtEVX\"><b>【密室逃脱】的商业和市场逻辑</b></p>\n<p data-pid=\"-x_Fxcjm\">密室逃脱的每次产品升级，除了体验的升级以外，也是成本的升级。从1.0只需要在一个居民楼房间里就可以搭建出来的小游戏产品，到现在4.0场景已经布置得更个电影舞台一样的互动游戏剧，其成本可能已经从本质上上升了20-50倍，特别是在一二线城市，投资规模过百万属于入门级别，甚至一些三到五线成本，平均投入都轻松过百万。</p>\n<p data-pid=\"u76Hlsts\">这样的高门槛成本，如今几乎无法让单薄的个体户创业者加入行业。如果失败，巨大的亏损也是摆在面前，很多新的有想法的年轻人会因为成本过高而收起了步伐，这就导致入局者往往只剩单纯天真的投资人。而结果就是各种作死或者各种被骗，现在新出现的高质量新品牌越来越少就证明了这个问题。</p>\n<p data-pid=\"QqjfTVje\">另外密室不单单是产品为王，密室这个行业早已过了野蛮生长的黄金期，不是随便拿个破葫芦就可以卖好价钱，现在行业里哪怕金葫芦都不一定能卖好价钱。</p>\n<p data-pid=\"VDHq2b2o\">因为市场已经很成熟，和很多传统实体经济一样，产品是一方面，经营管理、成本效率、营销宣传都起到了不输于产品的作用。另外很现实的是，股权的问题也逐渐成为了拉跨品牌的另外一个要素。这些综合问题之下，想要步步为营的存活下去，难度可见之大。</p>\n<p data-pid=\"MjUyilsB\">不过依然值得庆幸的是，密室逃脱始终掌握着用户的流量入口，而且竞争的天平开始逐渐平衡，优质的产品、好的运营管理等因素会越来越明确的直接对等于门店的收益，这是一个行业逐渐成熟的标志。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"Zd9BUX23\"><b>【剧本杀】的商业和市场逻辑</b></p>\n<p data-pid=\"eTGE0b2h\">我个人关于剧本杀行业的认知来看，我觉得是显然的行业臃肿的状态，俗称内卷严重。虽然密室也严重，但是完全不及剧本杀行业三成。</p>\n<p data-pid=\"AI3rrhcI\">剧本杀本来是一个非常优质的行业，创作能力强且丰富，用户群体稳定且健康，门店投入收入比平衡。</p>\n<p data-pid=\"IE7FXx7k\">创作能力强，且远远大于密室，原因在于剧本的机制相对简单，只需要故事出彩就可以很容易形成优质作品。而密室除了剧情，还需要机关、关卡等各种要素，相对难度大很多，且专业性要求也高。所以大量的设计创作者都投身到剧本杀行业里去。</p>\n<p data-pid=\"mvq0stpG\">用户群体稳定且健康，之前分析过用户的圈层问题，这样的圈层很容易将好的剧本推上热度，也容易形成用户群体的规则和氛围，进而很适合深度挖掘用户的可能性，说白了就是做营销性价比特别高。</p>\n<p data-pid=\"6vAXcJuE\">门店投入收入比平衡，在于剧本的投资一般只需要10-40万就可以开店，相对密室和RPG游戏，成本低到任何人都可以创业。而且票价合理，运营成本较低，赚钱相对来说比较轻松和容易，自然容易创造出财富神话。加上一些剧本开门店的人，最终目的都是成为设计师，那么设计还可以进一步提高个人收益。</p>\n<p data-pid=\"ngmnRZjz\">……</p>\n<p data-pid=\"o78LN3Wo\">不过以上是在剧本杀初期的状态，如今的剧本杀行业已经有点魔幻了。</p>\n<p data-pid=\"vRs8LjJ2\">创作难度低，导致任何阿猫阿狗都可以写剧本，抄袭本、魔改本多如牛毛，这些作品大幅度的冲击了本来优秀，或者准优秀的作品。有人可能会反驳，剧本圈内的用户是可以辨别真伪的，但是新进用户他们如何辨别呢。他们有幸参与剧本杀，但随便开个本一玩，结果呵呵哒，妥妥的流失掉，这就是目前剧本杀市场获客的常态。</p>\n<p data-pid=\"74sKsLLm\">那么高质量的创作去哪里了？他们依然存在，但是都在服务于圈层内的用户，这些用户数量有多少，以重庆这样的城市为例，不过千余人。他们玩完了高质量的本子后一定会催促老板再引进新的本子，恶性循环，再经典的本子也会渐渐生灰。最后你会发现，每个剧本杀门店都在养自己的老客户，为他们而筹备新产品，而老客户的忠诚度往往在于本子，谁家有好本，他们就是谁的客户，那么门店老板要活下去，要么拼命买新本和好本，要么悄悄走盗版本。</p>\n<p data-pid=\"rP4X1xy-\">一个本再优秀，也只有1-2个月的高光期，再如何挣扎也难超过1年，这样 的情况下，创作者虽然能赚钱，但是对于他们创作的压榨也是致命的，当创意行业的数量打败质量的时候，其结果只剩悲哀。当然谁是背后的推手，谁在真正的赚钱，剧本杀的环境真相究竟如何，我以后也可能会专门开篇来讲。</p>\n<p data-pid=\"dydL7IX9\">所以剧本杀的门店要面临的风险就是大量的竞争。从你开店开始，你会发现其实你的核心并不是长久的耕耘，虽然剧本杀门店的经营和管理也重要，产品也重要。但是作为经营者的安全感是非常差的，没日没夜的掏本，没日没夜的培训DM又防止他跳槽，没日没夜的呵护你的客户防止他们去隔壁。等到月底算账的时候，可能发现自己几乎没赚钱，决定写本出道，然后发现自己进入了另外一个大坑，这就是剧本杀的商业环境。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"l7Tfeu2y\"><b>【线下实景RPG游戏】的商业和市场逻辑</b></p>\n<p data-pid=\"rluYjSUx\">RPG游戏的用户虽然群体广阔，但是投资成本非常高，一般按照主题算，单主题的建造面积都超过300平，大的甚至上千，投入成本自然在百万级别，而这只是一个主题的投入。且不谈回本数据，光是这样的高昂成本，就足够让很多投资者怯步了。</p>\n<p data-pid=\"aWLZJJbX\">另外RPG游戏需要配套的其他资源也非常多，比如强大的NPC演员团队、管理团队、培训团队等等，为了这个产品你往往需要养出超过十个人以上的演员团队和管理团队，加上经营的前台、维护等人员，动辄每个月就破十万的开销在人工上。</p>\n<p data-pid=\"IdixRCg7\">这样的情况下为什么依然有品牌会建设RPG游戏呢，那是因为这样的产品具有极高的经营价值和战略意义。如果经营得体，还是很容易赚钱的，毕竟RPG游戏的稀缺性导致竞争特别小，加上用户群体大，那么客流就完全不是问题。其次这类产品在用户群体中的反响会比较好，对品牌来说具有极高的宣传和用户定位的作用，如果用来做其他产品的引流，则可以起到很好的效果。</p>\n<p data-pid=\"4KFk7JoM\">这样看下来，RPG游戏其实有点像是一个品牌手中的实景游戏核武器，高额的研发和制造成本，以及高额的维护成本，但是对品牌、设计师个人的加持特别明显，同时也具有相应的战斗能力（营收），且鲜有对手。</p>\n<p data-pid=\"tVJFO1xH\">不过核武器虽强，也不是每个人都能拥有，什么样的人适合呢——除了资金雄厚、产品研发能力突出以外，还需要具有丰富实景游戏运营经验的团队，这些条件也都不简单，基本同时拥有的，都是现在的一些大品牌公司。</p>\n<p data-pid=\"g01N-3VI\">RPG游戏在实体经济中确实受限很多，有着高额的成本支出，但是在一些新的领域和赛道，它就会完全的放开手脚，比如提到的文旅和商业地产。</p>\n<p data-pid=\"VzLs64-t\">文旅和商业地产在面临到越来越强烈的市场压缩后，大量的闲置地图和应用场景被释放出来，这些地方已经拥有成型的外壳，且租赁成本极低。在一些文旅和商业项目中，本身都雇佣了大量的演绎或者其他工作人员，他们都可以被很好的二次开发成为游戏工作者。</p>\n<p data-pid=\"6zNwx3J3\">这些属性不仅很好的遮盖了RPG游戏本身的投入成本和运营成本，而且RPG游戏的用户类型边界又可以很好的照顾到文旅和商业地产项目本身的客群，同时强引流的RPG游戏属性也会持续的为文旅和商业地产输血，看似这就是一种比较好的双赢局面。</p>\n<p data-pid=\"JpHaCY_r\">不过难点依然存在——</p>\n<p data-pid=\"ZJoKh6SJ\">a.文旅和商业地产对于内容的限制性很强，设计者很难放开手脚</p>\n<p data-pid=\"flQlAotQ\">b.过于偏僻的文旅和商业地产，是靠RPG游戏也无法拉动的，注意闭坑</p>\n<p data-pid=\"a0ldO9Wc\">c.管理难度远大于门店，因为地理位置、复杂的背景关系，都将大幅提升管理的沟通成本</p>\n<p data-pid=\"Ve4Pjqxp\">d.文旅和商业地产的耐心很差，一旦收益无法保证，很快就会失去耐心</p>\n<p data-pid=\"xhn9iTI-\">e.合作谈判的破冰期特别长，做好长久谈判的准备</p>\n<p data-pid=\"vShGoeVa\">f.责权利的界限容易比较模糊，一旦出现问题可能不好收场</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"WIQL3WyE\">巴拉巴拉这么多，以上就是对于三个类型的一些个人的分析，不算太深度，一些观点仅代表个人见解，欢迎大家多交流，如有不对，希望指正。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/xiong-ye-g?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">肥熊大师</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/498993111?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"想在五线城市开一个密室逃脱，需要多少钱？","date":"2022-04-22 08:28:23","description":"\n<p data-pid=\"0xJdcVRn\">这个问题的开始，首先需要你自己确定，你的密室逃脱门店想怎么开。不同类型的产品，不同规模的门店都有不同的投入方式。当然这个“怎么开”也不是想当然的，它需要一些依据，以我个人的经验，开店前你需要搞清楚几件事：</p>\n<p data-pid=\"0hN3FWUA\">1.城市人口</p>\n<p data-pid=\"jU8_EPEV\">一个城市的人口直接决定了你的生意盘有多大，最简单的算法就是基础人口的25%是你的潜在用户，也就是18-35周岁的年轻且具有消费能力的人群，而在这里面能转换的用户基础比例是10%-20%。也就是说，如果你的城市拥有100万人，那么消费人群就是100万X25%X(10%~20%)=大约就在2.5万到5万人是你近几年的消费人群。不过这个数值指的不是你的门店接待的量，而是指你的一个产品，我们姑且计算没有复购，只能游玩一次用户就不会再玩的情况下，那么每个产品就能开发2.5万到5万的用户，你如果门店拥有4个产品主题，那么上线就会到10万~20万的用户。</p>\n<p data-pid=\"CYloeMPi\">不过这个数值一般是理论数值，具体的还要继续参考下面的几个因素。</p>\n<p data-pid=\"-0nkY2bB\">2.城市娱乐等级和消费力</p>\n<p data-pid=\"h44dMjrd\">城市能否为娱乐消费，就得看城市的娱乐等级，也就是说人们有闲钱的时候，这个城市的消费主要是放着哪些方面，且比例是多少。举例这个城市内普遍的年轻人，每月可支配的消费金额是1000，分配比例大致是聚餐50%、购物20%、休闲娱乐20%，其他10%，那么大概率就可以算出他在休闲娱乐领域每月的投入和消费的频次，以此可以算出用户的门票投入、转换比例之类的数值。</p>\n<p data-pid=\"_9SaZV-U\">如果娱乐等级较高的城市，城市人口的开发程度就会大幅度提升，比如上海的转化率就远远高于了20%</p>\n<p data-pid=\"ew2FVIma\">3.城市文化水平和传播能力</p>\n<p data-pid=\"KNgnEtDs\">这个数值主要是看用户的转化效率有多高，影响的是营销成本和变现周期。一个城市学生群体、外来高级打工群体越多，相对来说传播力就越快。投入的营销成本、或者口口相传的成本就会越低。那么这个数值就会直接影响到你这个城市开发用户人口是用多久的时间，也以此可以算出，你的产品多久迭代更新，门店的折损大致控制在多少。</p>\n<p data-pid=\"z1Id2Q_V\">4.市场竞争力</p>\n<p data-pid=\"MoPNoWEy\">以上的数据都是市场综合数据，但是竞争力却是核心的，毕竟这个市场不止你一家在经营，用户是可以流动到每个竞争者手中的。虽然用户可以玩了别人再来玩你家的产品，但是介于城市娱乐等级的限制，用户的消费频次是有限的，而且还有衰减的作用，所以如果你不能成为市场用户进入时，用户首先考虑的门店，那么大概率你的转化周期会因为用户进入的频次拉长，而很长时间开发不了你的预计人群。</p>\n<p data-pid=\"RITLhyx8\">这就是为什么市场再大，依然我们看重竞争的原因。所以你必须关注你的竞争对手的产品矩阵，重组出避开直接竞争的自家产品线，才能避开重复开发用户的风险。</p>\n<p data-pid=\"40ZBWAHS\">以上，这些内容就是你了解市场的本质，所以我无法告知你花多少钱，前提是你自己城市的状况，你的想法，还有你到底有多少资源，这些都会影响你的门店投资水平。</p>\n<p data-pid=\"bxM_5f9U\">但是在一些原则上的建议还是可以给的</p>\n<p data-pid=\"TZoe4dad\">1.市场活跃的产品类型，不一定就是好的类型</p>\n<p data-pid=\"vneqyiOO\">因为竞争太白热化，用户已经被过度开发，当你觉得还不错时，已经有无数人和你一样的思维，他们也许是用户，已经产生了疲惫感；也许是商家，正准备下场。你也加入的话，指不定就是新的一轮炮灰。</p>\n<p data-pid=\"gjkwG_2r\">2.听用户，而不是你自己</p>\n<p data-pid=\"lwkjRvnL\">太多创业者以自己的喜好来判断市场，创业不是玩，市场真实的情况才是做生意的关键核心。而了解市场真实情况又往往麻烦且结局不一定是你喜欢的，所以很多人下意识里无视了这些客观事实，最终导致灭亡。</p>\n<p data-pid=\"Omgh4V9u\">3.钱不是万能的，一切能用钱解决的问题，那最后一定都是问题</p>\n<p data-pid=\"xr-KMiRa\">很多创业者觉得自己钱多，就瞎来。装修用最好的，产品买最好的，NPC要最多，服务要最极致的。羊毛出在羊身上，你的羊愿意为你的这些东西买单吗，你其实都没思考过。最后算账血本无归的时候才恍然大悟。</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/xiong-ye-g?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">肥熊大师</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/526587289/answer/2435758804?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">8 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/457787144?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">二三线城市开一个密室逃脱需要多少钱?</a><br><a href=\"http://www.zhihu.com/question/335473339?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">玩一个密室逃脱要多少钱？</a><br>\n","link":"http://www.zhihu.com/question/526587289/answer/2435758804?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"手机里的芯片到底有什么用？为什么大家都想要「更强」","date":"2022-04-22 07:00:00","description":"用人体结构类比的方式，来给大家讲讲芯片和智能手机之间的关系。<a href=\"https://sspai.com/post/72758\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72758"},{"title":"特斯拉一季度净利润飙升 255%，日赚 2.7 亿人民币，卖「碳」收入翻倍，哪些信息值得关注？","date":"2022-04-22 06:46:44","description":"\n<p data-pid=\"MqdhvJCE\">看来这两年特斯拉过得不错啊。遥想2020年，特斯拉全年出售碳积分获利14亿美元，全年利润才7.21亿美元，整个公司都靠碳积分养着。现在不仅一个季度的积分收入已经接近2020年之前半年的量（意味着产能大大扩张），而且净利润已经是积分收入的5倍，彻彻底底名利双收，形成正向现金流了。</p>\n<p data-pid=\"DjBAEcXu\">市占率上升、利润大涨很多答案都说了，我重点说说碳积分收入。</p>\n<p data-pid=\"In1gubRr\">不知道特斯拉为什么可以卖积分，为什么能赚这么多钱的，欢迎点击2020年的前情提要：</p>\n<a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"https://www.zhihu.com/question/442527845\" class=\"internal\">如何看待特斯拉首次盈利不是靠卖车，而是通过出售碳排放额度？为何众多华尔街投行看好特斯拉，其高管却减持？</a><blockquote data-pid=\"hDH5Xpv8\">简单的说，在这些州出售的汽车的车企，按照车企传统燃油车的销量乘以一定的比例，有一个新能源车的积分要求。车企需要销售对应的新能源车获得积分，如果自己卖不了那么多的新能源车，就要从别的车企买新能源车积分。这个制度起到倒逼传统车企转型的作用。<br>在特斯拉发展早期，这个积分的收入占了特斯拉几乎10%的收入。不过随着特斯拉营收增加，虽然ZEV本身收入也在增加，但占比是不断降低。（2019年是2.4%）</blockquote>\n<p data-pid=\"0_vhpRIb\">和两年前相比，特斯拉卖碳积分最大的变化来自于中国市场。</p>\n<p data-pid=\"_J6MsD9L\">工信部2018年开始实施新能源积分交易试点，2020年重新修订了规则，首次对油耗和新能源积分进行正式“双考核”的阶段，业界普遍把<b>2020年交易期看作是积分管理实施阶段有真正意义上的交易年份</b>。</p>\n<p data-pid=\"L3KHkhhM\">上海工厂从2020年投产，正好和双积分大规模实施同步。2020年特斯拉获得27万个积分，当年一个积分平均1200元，整个市场供需比2：1，就按市场平均情况来看，特斯拉在中国卖积分就赚了1.6亿人民币。</p>\n<p><img src=\"https://pica.zhimg.com/v2-4e2d4227a0654f2f0ebef727149eb18f_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"543\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-4e2d4227a0654f2f0ebef727149eb18f\" data-watermark-src=\"v2-deaac3b55a877a2bfcc07196a2a2562b\" data-private-watermark-src=\"v2-78dec3fcd335df74f2681e6b1b869913\"></p>\n<p data-pid=\"_QbZ7cod\">到了2021年，特斯拉已经打翻比亚迪，坐上了新能源正积分的头把交椅，狂揽86万分。而且市场第一次出现了积分供不应求的情况，平均1个积分可以卖2100元。<b>假设特斯拉全部出售正积分，能够获利超过18亿人民币。</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-e22692805b9b63059057243d6afa31d1_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"546\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-e22692805b9b63059057243d6afa31d1\" data-watermark-src=\"v2-35c29e3ffdd76a5b05129117ada8c2b3\" data-private-watermark-src=\"v2-7d928ed2c08b8d840ccc862841e4e90b\"></p>\n<blockquote data-pid=\"fCoUPAXZ\">2020年度油耗负积分在2019年基础上翻了一倍以上，首次达到了-1171万分以上；而整个汽车行业的新能源汽车负积分在2019年85万分的基础继续恶化到了107万分以上。<br>这些大幅增长的负积分使得2020年的积分市场出现了自《双积分办法》颁布以来最困难的一年。加上作为“硬通货”的新能源汽车积分主要集中在几家主流新能源汽车手里，<b>新能源汽车积分交易史上第一次出现了供小于求的状况。</b><br>根据笔者与多位企业人士交流以及后续监管部门陆续披露的信息倒推分析<b>，2020年新能源汽车积分的实际供需比已经小于了1:1的水平，笔者估计实际供需比大约在0.7-0.8：1之间，这与行业普遍认为的正常供需比1.3:1才能维持供需基本平衡相比有了不小的差距。</b>\n</blockquote>\n<a data-draft-node=\"block\" data-draft-type=\"link-card\" href=\"http://link.zhihu.com/?target=http%3A//www.ev.com/archives/3591\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">盘点4年双积分交易后预测：2022积分价格低于2000元</a><p data-pid=\"bDyzDVwW\">国家推动新能源的决心是很大的，新能源积分会给新能源创造很大的利润，对传统车企会造成很大压力。大家都喜欢的五菱宏光mini ev 一定程度也是应对积分的产物，车的售价低不赚钱不要紧，关键是有积分补贴。不过国家也在调整积分的细节，会通过积分规则影响产业布局。研究汽车行业的研究员，除了要看车的制造销售本身，也要认真盯着国家双积分政策了。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/chen-zhi-bin-66?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">月球人</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/529210655/answer/2451997925?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">64 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/513710570?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">特斯拉 2021 年净利涨超六倍，每天净赚近一亿元人民币，财报发布后股价却跌近 12 %，这是为什么？</a><br><a href=\"http://www.zhihu.com/question/34393643?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">Tesla 每辆电动汽车亏损超过 4000 美元是如何算的？</a><br>\n","link":"http://www.zhihu.com/question/529210655/answer/2451997925?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"Glass：属于摄影爱好者的下一个 Instagram？","date":"2022-04-22 06:27:28","description":"如果你只想纯粹地浏览和发布摄影作品，且可以接受为摄影社区付费，那 Glass 非常值得尝试。<a href=\"https://sspai.com/post/72747\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72747"},{"title":"为什么有些人换了一辆车就不会开车了？","date":"2022-04-22 05:47:58","description":"\n<p data-pid=\"49Yy3Ktj\">谢邀，我个人倾向于认为，是因为参照没了。</p>\n<p data-pid=\"ZDwCpEHg\">换个说法可能题主就能理解了，在学生时代，一个只会套公式的学生，和一个知道公式怎么来的，甚至可以自己推导公式的学生，在面对曾经遇到过的问题时，都能顺利解答。但是一旦碰到新问题，两者之间的差异就会体现。如果只会套公式，在面对新题时就不知道应该套哪个公式，该不该套公式，而后者则能利用现有的知识，灵活运用，并得到答案。</p>\n<p data-pid=\"-SXIYdCN\">大家在驾校里应该都有这个经验，驾校路上的一块石头，一个烟头，一条裂缝等等，任何一个不起眼的小标识都会成为参考。同理，车上也有诸如此类的特征，比如机盖上的某条筋，雨刮器的位置，B柱，以至于驾驶员自身相对车辆的位置，都会成为一种参考。</p>\n<p data-pid=\"a2wS_syE\">但是如果换了一台车，以上的所有参考就都变了。比方说原本是利用B柱与墙齐平作为倒车停止的参照，换了一台更长的车意味着不知道应该在哪里停车，自然就不会开车了。</p>\n<p data-pid=\"5Ocktr8M\">对此，我认为，换车之后就不会开车，是驾驶技术存在欠缺的体现。如果驾驶技术不能具有普适性，就不应该得到驾驶证。比方说驾校里99.9%的人（包括我），都会利用这种投机取巧的办法通过考试，或者说教练自始至终教的就是这个，因此即便毕业之后真正上路或者需要停车，还是需要从头学起，悟性好的或许可以无师自通，悟性差点的就只能“研发”属于自己的参照物，去套回到驾校的一系列操作之中，因此也就和车型形成了绑定关系。</p>\n<p data-pid=\"d6lZ6COi\">如果想要彻底摆脱这种困局，最根本的要求是培养车感。比方说利用车辆通过路面颠簸的反馈去感知四个车轮的具体方位，又比如利用倒车影像或者倒车雷达去修正车辆前后方的距离与目视距离之间的映射关系，再比如调整视线，实现真正意义上的走直等等。随着车感的提升，适应一台新车的速度也会随之加快。可能原本要半小时，车感提升之后1分钟就能搞定了。</p>\n<p data-pid=\"SbYipi9C\"><b>我并不是想说死记硬背公式的方法不正确，在日常驾驶过程中，借用各种参考就像是考试套用公式一样，可以大幅节省大脑的工作量，并且避免出错，是一种行之有效的方法，但是在此之前，一定要确保自己知道公式是怎么来的，才算是掌握了这个知识点。</b></p>\n<p><br></p>\n<p data-pid=\"CbgNOtcz\">在赛道上，也是一样的，我见过形形色色的车手（当然都是业余层面的，职业车手另当别论），也分为以上两种流派。第一种是开自己车贼快，但是一换车就完全开不来。第二种是只要摸到方向盘就能发挥出这台车的极限，无论是什么车。哦对，赛车上还有另外一个变量，就是赛道，这里也会分为两种车手，第一种是只有在主场贼快，或者需要大量的练习才能把圈速提升到一个比较快的水平，第二种是随便到哪，两三圈的练习就能做出个人最快圈相近的成绩（提前模拟器熟悉赛道的情况下）。</p>\n<p data-pid=\"bawMDpJO\">道理是一样的，第一种车手更依赖大脑中已有的概念。自己的车开得多了，对于车辆的性能，反馈，动态都会比较了解，甚至在做出动作之前就能猜到之后车子会发生什么事情。熟悉赛道同理，通过一次次的试错，去寻找正确的刹车点，然后找到参照物，就算是攻略了一个弯道。</p>\n<p data-pid=\"3EDrFYkZ\">第二种车手则更多是依靠“感觉”，开车时脑海中会出现一秒以后车辆的状态，所以可以更好的打出提前量。对于不同的车辆，基本摸上一把过一两个弯就可以判断个十有八九（动画片头文字D里拓海开池谷，阿树的车很快就能上手），去到全新的赛道也能根据弯道的角度，车辆的刹车性能，预估出一个大致的刹车点，往往也会大差不离。所以感觉派车手不需要依赖练习，就能做出不错的圈速，WRC选手大抵就是这方面的金字塔尖端了吧。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/kang-yining?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">康贱猫</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/529257859/answer/2451907237?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">13 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/480687038?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">你觉得开车最安全最有效是速度慢下来吗？</a><br><a href=\"http://www.zhihu.com/question/22476695?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">新手上路，害怕紧张开车太折磨怎么办?</a><br>\n","link":"http://www.zhihu.com/question/529257859/answer/2451907237?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"灰太狼的刀疤是哪来的？","date":"2022-04-22 05:32:52","description":"\n<p data-pid=\"eauqfURz\">这个问题下的其他回答解释了怎么来的问题，也就是灰太狼的刀疤到底是怎样的故事。但是没有解释为什么反派角色脸上要有刀疤这回事。</p>\n<p data-pid=\"tYDwgMtW\">灰太狼的角色设计并不完全来自猫和老鼠，其故事结果更像是《蓝精灵》，属于非对称性对抗游戏设定的一种。但在《蓝精灵》里，作为反派角色的格格巫具有超大体型的优势，灰太狼则是科技优势，虽然总是捕捉失败，但依然在刻画一个类型化的反派。</p>\n<p data-pid=\"y-w0WmUh\">其实很多经典影视作品里，反派角色都有疤痕，比如弗兰肯斯坦、伏地魔、海德先生，当然还有动画经典作品《狮子王》里的刀疤（Scar）。</p>\n<p data-pid=\"JDAqrjPf\">在论文《Dermatologic Features of Classic Movie VillainsThe Face of Evil》<a href=\"http://link.zhihu.com/?target=https%3A//jamanetwork.com/journals/jamadermatology/fullarticle/2614259\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Dermatologic Features of Classic Movie Villains: The Face of Evil</a>  中就曾经总结过10位经典美国影坛的正面和反面人物的脸部特征，得到的结论是，反派角色里至少有6位面部都有明显的问题。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-78193746d4c6a3588598ab2cb5240506_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"523\" data-rawheight=\"588\" data-watermark=\"original\" data-original-src=\"v2-78193746d4c6a3588598ab2cb5240506\" data-watermark-src=\"v2-6782a677caef7588ea7971407066f86a\" data-private-watermark-src=\"v2-bb380ce5e7e62eb00ea7f36ed4be1e33\"></p>\n<blockquote data-pid=\"76Hlyiso\">\n<b>Question</b>  Are dermatologic conditions found in disproportionate frequencies in the all-time top 10 American film villains when compared with the all-time top 10 American film heroes?<br><b>Findings</b>  In this cross-sectional study, the top 10 villains display a significantly higher incidence of dermatologic findings than the top 10 heroes (60% vs 0%), which include alopecia, periorbital hyperpigmentation, deep rhytides on the face, scars on the face, verruca vulgaris on the face, and rhinophyma.<br><b>Meaning</b>  Dermatologic conditions are used in film to elucidate the dichotomy of good and evil through visual representation, which may contribute to a tendency toward prejudice in our culture and facilitate misunderstanding of particular disease entities among the general public.</blockquote>\n<p data-pid=\"XXQPayYG\">2018年的英国学者在30部最卖座的12A评级电影里进行研究，数据基本维持不变：</p>\n<blockquote data-pid=\"C_o9VpJd\">研究者发现，76.5% 的坏人存在皮肤问题，包括疤痕、斑秃和重度皱纹；相比之下，这一比例在好人里仅为 25.9%。——<a href=\"http://link.zhihu.com/?target=http%3A//www.qdaily.com/articles/54288.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">面对歧视指控，好莱坞还在用疤痕区分好人和坏人_娱乐_好奇心日报</a> </blockquote>\n<p data-pid=\"UTUgG3QV\">所谓12A，就是适合全家观看的作品，这也意味着<b>疤痕＝坏人</b>的意识形态认知是符合影视产业既定认知的，同时也会影响观看者对其的图像接受。</p>\n<p data-pid=\"kC9D5PcZ\"><b>疤痕＝坏人</b>是一个根深蒂固的宗教性标记，意味着身心统一，即健全的身体等同于健全的精神，反之亦然，所以在宗教故事里，坏人大多面部结构是残缺状态。这也符合普诺丁对恶和善之间关系的认知：善是完满的认知，而恶是善的缺失。</p>\n<p data-pid=\"mUKoJ8bq\">从苏珊桑塔格的《疾病的隐喻》到福柯米歇尔的《疯癫与文明》，都在对这种已经成为思维定势的<b>身心统一</b>进行反思。在他们的反思中，发现“邪恶-疾病”这组关系的双重性寓意，即邪恶的施与者同时也是邪恶的受害者，具有强大破坏力的同时也具有异于常人的孱弱。生病的人虽然身体是孱弱的，但同时也是被邪恶所附着的，更进一步的说，抵抗能力的减弱让更强大的邪恶所控制，同时既成为疾病（邪恶）的传播途径，又让身体病变得与“正常的文明人”相去甚远。</p>\n<p data-pid=\"tHrpeZ5f\">当然，这个逻辑链还可以再扩展。苏珊桑塔格就说，疾病同时还被想象成为贫困、匮乏的疾病，死亡也被美化为过分热情，也就是“疯癫”——这也是很多作品里，反派给不出成为反派的理由之一。因为反派本来就是疯癫的、邪恶的，而不是理性的，一个有理由的反派，是不会成为反派的。</p>\n<p data-pid=\"AHavTSPV\">而灰太狼原版里脸上的刀疤，原本是可以不用被解释的。因为在羊村守护者系列之前，他就是纯粹的、毫无疑问的反派。而当时制作组进行解释本身，又是摒弃转化为善良可能的叙事。</p>\n<p data-pid=\"CqnWvKu8\">简单说，灰太狼脸上的伤疤，是二次重回过去，规避掉羊免遭灭绝的未来，而被自己的父亲武大狼所划伤的。</p>\n<p data-pid=\"wnU--VOP\">在这个解释故事里，我们会发现三个重要的隐喻节点：<br>①灰太狼虽然在客观上起到拯救羊群的作用，但毁灭羊群的也是它。它也并没有为拯救羊群展现善意。<br>②灰太狼的刀疤超脱了时间回溯的设定，成为了一个逾越时空的反派标记符号。<br>③灰太狼脸上出现的刀疤，是来自自己的父亲的伤害，意味着动物的自然属性（种族矛盾）与社会属性（亲子矛盾）之间的冲突。</p>\n<p data-pid=\"Blv3sjAg\">而在新版故事里，虽然灰太狼还是有刀疤，但是绘制过程中，做了一定程度的萌化处理，同时将其负面隐喻进行了消解，变成灰太狼的独特标记。</p>\n<p data-pid=\"myxnYPpr\">我们以《筐出未来》为例，不管是萌化画面还是凌厉画面，都尽力在展现灰太狼刀疤和脸型的融合而不是违和。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-3e973ef5f1ff19c150346f2a577cbc86_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"834\" data-rawheight=\"425\" data-watermark=\"original\" data-original-src=\"v2-3e973ef5f1ff19c150346f2a577cbc86\" data-watermark-src=\"v2-76cd6ef37619abc0c649147d91aa0cf8\" data-private-watermark-src=\"v2-817973fa21eada78dabd585ae688cf56\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/dandoliya?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">但愿君</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/311763237/answer/2447501697?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">2 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/351991778?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《喜羊羊与灰太狼》中，美羊羊是不是喜欢喜羊羊？</a><br><a href=\"http://www.zhihu.com/question/337395776?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">请问你是几零后？你知道喜羊羊与灰太狼吗？</a><br>\n","link":"http://www.zhihu.com/question/311763237/answer/2447501697?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"Wordle 玩累了，你也可以试试这两款「中文版」","date":"2022-04-22 03:31:40","description":"自「Wordle」年初在国外大火以来，很多富有创造力的中文开发者们开启了中文版 Wordle 的探索。今天介绍的就是其中最为出彩的两个。<a href=\"https://sspai.com/post/72765\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72765"},{"title":"如何评价刚刚全球首发的宝马全新一代 7 系和 i7？","date":"2022-04-22 03:28:49","description":"\n<p data-pid=\"iNSF7HSq\">你能想象么，全球最强的汽车设计团队之一，在新能源时代能做出来的产品是这样的：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-ead28da68723b6f0fdc6f5e733be1ee9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1400\" data-rawheight=\"1050\" data-watermark=\"watermark\" data-original-src=\"v2-ead28da68723b6f0fdc6f5e733be1ee9\" data-watermark-src=\"v2-a86fea9f63fe7638c03db253f8bb2dcb\" data-private-watermark-src=\"v2-2b6c66e3da5c268664479fd982bd5b5b\"></p>\n<p data-pid=\"-GGnJ7l1\">像个大方盒子。</p>\n<p data-pid=\"hnxbUdtS\">G70新7系的最大关注点在于前脸采用了分灯的设计，并<b>放弃了宝马坚持了20年的天使眼位置灯</b>。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6994860c7f5ff51e11d27163583ac3cf_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"960\" data-watermark=\"watermark\" data-original-src=\"v2-6994860c7f5ff51e11d27163583ac3cf\" data-watermark-src=\"v2-2958bcf7e5d8e6274c38ffacb04a793e\" data-private-watermark-src=\"v2-709b3a2e1681e69b1b684e330c5d3dfb\"></p>\n<p data-pid=\"cpb-mmO5\">我看到有采访设计师说，单体的头灯尺寸太大了，限制了设计的发挥，所以选择了DRL和远近光单元分开的设计形式（which is新能源厂商都在用的布局）…所以这就是宝马的设计师想要的？</p>\n<p data-pid=\"Djm9jrzR\">分体灯并不很自由，因为近光灯有一个离地大于500mm的法规要求，也就是说，远近光模组并不能像我们想象中的完美的塞进原来属于雾灯的位置，它必须有相当的高度。<b>以轿车的前脸大小来说，传统大灯在眼睛的位置，而分灯的远近光模组因为法规的高度限制，它不在酒窝上，而是在颧骨上</b>。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-2ea9f66b5803c1e5532f97c7c00ce1ce_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1680\" data-rawheight=\"1050\" data-watermark=\"watermark\" data-original-src=\"v2-2ea9f66b5803c1e5532f97c7c00ce1ce\" data-watermark-src=\"v2-6be79e44d52a43fb5190423cf9d7eab4\" data-private-watermark-src=\"v2-0332cd4d5ad68ee75710e8e639bedaf6\"></p>\n<p data-pid=\"tfm3O-n5\">从结果来看，这样的一个车灯组合难道不是更大的限制甚至说是一个更大的坑么？</p>\n<p><img src=\"https://pic2.zhimg.com/v2-6f6c78f8ce0e7cc10c60c24cc490d189_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3636\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-6f6c78f8ce0e7cc10c60c24cc490d189\" data-watermark-src=\"v2-3de0afb4dc5e9524d885a21ec3d6ee60\" data-private-watermark-src=\"v2-7fe75255d470bb1bcd5fbd4a87567e6f\"></p>\n<p data-pid=\"MnLRa-YP\">新老对比。新的两个车灯加起来比老的一个灯可大多了吧？？？</p>\n<p><img src=\"https://pic1.zhimg.com/v2-7d8bfe4bed87e8a7042cd74232544127_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1400\" data-rawheight=\"1050\" data-watermark=\"watermark\" data-original-src=\"v2-7d8bfe4bed87e8a7042cd74232544127\" data-watermark-src=\"v2-af876b7bf727ecf060de4b2895654f15\" data-private-watermark-src=\"v2-b1fc2e51280accd11be95fcfbe53e15e\"></p>\n<p data-pid=\"hxOckv4z\">上面的DRL，据宣传是和施华洛世奇合作的。但一台百万级的宝马7系，大家不妨猜测一下，它的客户怎么看施华洛世奇这个品牌呢？</p>\n<p><img src=\"https://pica.zhimg.com/v2-96b920cbb5fb4fd284803bf16efda3e7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-96b920cbb5fb4fd284803bf16efda3e7\" data-watermark-src=\"v2-b9bf2f7953a11c63c04f5c7bc724b64f\" data-private-watermark-src=\"v2-61806e72812adaf69cc4a3062477e3cc\"></p>\n<p data-pid=\"zp4dJ-To\">新的7系即使从官方的sketch上来看，也称不上好看，由于零部件太小而琐碎，车头车尾厚重得不知道如何形容……其实这就好比，同样的一张脸，眼睛太小了会显得脸大一样。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-8fadcfe5d57baea10d8c7e07b46767ea_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1452\" data-rawheight=\"924\" data-watermark=\"watermark\" data-original-src=\"v2-8fadcfe5d57baea10d8c7e07b46767ea\" data-watermark-src=\"v2-e0eb498bc0d9b836b4bae941d3979fc1\" data-private-watermark-src=\"v2-390eddb49b5807a92d8dd2087ec20cb5\"></p>\n<p data-pid=\"OvsBp9F4\">新老对比。其实从大轮廓上来看，新一代的7系并没有颠覆原来的大比例与姿态，Y0线也基本上继承。只是因为头尾过分缩小了车灯的尺寸，而显得头尾的“肉”有些多，进而显得头尾很厚重。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-3f293f780e589088b1c2f09409c89f07_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-3f293f780e589088b1c2f09409c89f07\" data-watermark-src=\"v2-13a2dcd849c7b88480112c59dc1aff47\" data-private-watermark-src=\"v2-2198be94cc586ecc3122ac5a6231a32b\"></p>\n<p data-pid=\"uUiRMEk_\">以车尾来说，上一代7系相当成功的贯穿式尾灯也扔掉不用，为了所谓的“新”尾灯就剩一根红条…所有的设计精力似乎都集中于下保和排气口，为了夸张而夸张。</p>\n<p data-pid=\"rwzD9MXU\">这个外饰真的无力吐槽，为了新而新，为了打破而打破。我不知道过三年以后我们会如何重新评价这样的宝马，但今天我的观点就是这样的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-b5e88779aed6db460cf660d53077090c_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"1200\" data-watermark=\"watermark\" data-original-src=\"v2-b5e88779aed6db460cf660d53077090c\" data-watermark-src=\"v2-5aa3eac3fdf7266dd7f58e3b7596ac94\" data-private-watermark-src=\"v2-5df3f77b6fe52a94253985b2e267f469\"></p>\n<p data-pid=\"f43COlk-\">另外760i告别了V12发动机，转而搭载4.4L双涡轮V8，536马力。应该叫做S68，和新X7 M60i的一样。</p>\n<h3>内饰总体是好评的</h3>\n<p data-pid=\"hjzoWDxT\">内饰解决了宝马多年以来没有解决的抽屉感问题，造型上非常简洁。而且引入了相当多黑科技。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-b4d0bfb1b73720f58569cabfd9937b4d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"1200\" data-watermark=\"watermark\" data-original-src=\"v2-b4d0bfb1b73720f58569cabfd9937b4d\" data-watermark-src=\"v2-3dd05369163a6138e81912334874f51e\" data-private-watermark-src=\"v2-393b0511095b7c88b1a3a920a91c7376\"></p>\n<p data-pid=\"aXQL6db5\">最显眼的，一整条可以变色的内饰饰板，人机啊、交互啦，感性啊，反正都是这些词吧。以上面这张图来说，可以理解为副驾的空调在吹冷风，中间的出风口在吹热风，是个很妙的设计。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-0b20068534f90216663f46a3774ca022_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"1200\" data-watermark=\"watermark\" data-original-src=\"v2-0b20068534f90216663f46a3774ca022\" data-watermark-src=\"v2-38658bb482fc239b9da6d0ffca907752\" data-private-watermark-src=\"v2-562d5780674d9730283f5756c9ec49a2\"></p>\n<p data-pid=\"XH5qrr_2\">这是和头灯一样的水晶化lens，内部再加上RGB光源甚至OLED屏幕，以实现变色交互效果。相比之下，花了相当多心思做的B&amp;W的喇叭罩都显得平淡了。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-1af6dd3593fd469d671569227379b1ad_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"1200\" data-watermark=\"watermark\" data-original-src=\"v2-1af6dd3593fd469d671569227379b1ad\" data-watermark-src=\"v2-9c87de032556d2b6ad6086cd5362b0d8\" data-private-watermark-src=\"v2-4abdcd4e086dd51c803c74d03dd49500\"></p>\n<p data-pid=\"bczotyM1\">细节效果突出，可以说是内饰氛围灯和饰板的革命性进化。这里也可以看到空调出风口的超级狭窄，工程能力了得。</p>\n<p data-pid=\"wRYsVI8W\">新7系真的很喜欢水晶：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-3f7c5e23304fa592ecd0690e1edd4fa1_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"1200\" data-watermark=\"watermark\" data-original-src=\"v2-3f7c5e23304fa592ecd0690e1edd4fa1\" data-watermark-src=\"v2-7041d0d2838c6c040412046e6c15cf9f\" data-private-watermark-src=\"v2-bcbcf13265cd1cf420a91d159a6f2142\"></p>\n<p data-pid=\"9mx8tOvU\">大概宝马希望他们的客户坐在一个水晶宫里吧。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-7ccdf31237f517da2a4add4dbc8bb4f1_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"1200\" data-watermark=\"watermark\" data-original-src=\"v2-7ccdf31237f517da2a4add4dbc8bb4f1\" data-watermark-src=\"v2-08ec366597e6c7137b2ebb7f034b10cc\" data-private-watermark-src=\"v2-fd390d05cf08d60b851c72773ad4e1a0\"></p>\n<p data-pid=\"x1LLU_f1\">后排给安排了一个电视，中国的老板可以在后座看极光TV、银河奇异果了…</p>\n<p data-pid=\"2rS9Ad6Y\">车门扶手上的多媒体屏幕（下方中间图），是对新时代人机交互的一种探索。奥迪在全年的概念车上也有类似的在主驾车门侧做的交互设计。</p>\n<p data-pid=\"CLplwXcl\">顶棚用了一些LED的灯条，这是宝马版的星空顶。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-7197a1ed48b357cdbbc70bb4671b6c11_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1400\" data-rawheight=\"1050\" data-watermark=\"watermark\" data-original-src=\"v2-7197a1ed48b357cdbbc70bb4671b6c11\" data-watermark-src=\"v2-4e9ba5a68e023229f94ab2bbbf75d3e8\" data-private-watermark-src=\"v2-347556f92ba24333e0494e1ad284d009\"></p>\n<p data-pid=\"FHSA7MyY\">iDrive操作组合面板更新。造型更简洁，除了旋钮外全面触摸化——比扔掉MMI大旋钮的奥迪强。</p>\n<p><img src=\"https://pica.zhimg.com/v2-fc89ce85d3ff9e064806ddf21e792051_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"1200\" data-watermark=\"watermark\" data-original-src=\"v2-fc89ce85d3ff9e064806ddf21e792051\" data-watermark-src=\"v2-2fc09482262c637fe63d170d39568c5f\" data-private-watermark-src=\"v2-1f85ba66f98a8b7b91d4dd78dc8e2f26\"></p>\n<p data-pid=\"ZrF0d2tr\">当然了，宝马的图一向很厉害的。你可以永远相信宝马设计师画的骚图。</p>\n<h3>自动驾驶和新能源的技术上来说，它还是对得起品牌旗舰的定位的。</h3>\n<p><img src=\"https://pic3.zhimg.com/v2-f7076fb5448aaa533676997dd0fe35a8_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"3130\" data-rawheight=\"1200\" data-watermark=\"watermark\" data-original-src=\"v2-f7076fb5448aaa533676997dd0fe35a8\" data-watermark-src=\"v2-96ececf550f81a0999bdc6a75198a2e0\" data-private-watermark-src=\"v2-88aa3204dfbd3ddc9fec8cb27657d29d\"></p>\n<p data-pid=\"zaAyqwUz\">燃油7系和纯电i7，一套底盘两个布置。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-90b537342ba21ac5f9ad4f66f18af744_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"1200\" data-watermark=\"watermark\" data-original-src=\"v2-90b537342ba21ac5f9ad4f66f18af744\" data-watermark-src=\"v2-5c3d17631b13f94c8cc3a9eb3fe01d85\" data-private-watermark-src=\"v2-4fce20c3a058fda5cfdaa3a9ce77cab0\"></p>\n<p data-pid=\"hQtrmrtO\">L3的自动驾驶、更高级智能的自适应悬挂。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-edd16ebaddebd628a61dbef4040de578_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1600\" data-rawheight=\"1200\" data-watermark=\"watermark\" data-original-src=\"v2-edd16ebaddebd628a61dbef4040de578\" data-watermark-src=\"v2-b2c030a65192b12bb2a3c688df1b0c70\" data-private-watermark-src=\"v2-9e4a55a3a5b0360ed8bbd127dd454623\"></p>\n<p data-pid=\"A0vH4g_H\">i7则搭载了总功率544马力的双电机，电池101.7千瓦时，WLTP续航625公里（按照i4的表现，这个公里数是比较实的）。支持195千瓦快充，10分钟可以充170公里的电量。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-cad24925a1491525268e1167e9ce7146_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1280\" data-rawheight=\"960\" data-watermark=\"watermark\" data-original-src=\"v2-cad24925a1491525268e1167e9ce7146\" data-watermark-src=\"v2-959a10eaf7635c1458a1c074983ddb02\" data-private-watermark-src=\"v2-605f92fd5567c96741c81da614e4500a\"></p>\n<p data-pid=\"y5e0c8NB\"><b>在结尾，让我们一起回忆一下2001年班戈时代的E65 7系。没那么夸张但不怒自威的7系。</b></p>\n<p><br></p>\n<p data-pid=\"TikaWEga\">以上</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/DesignerZhao?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">赵英男</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/529064619/answer/2451038369?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">183 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/61104007?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">捷豹XJ2.0和宝马新5系530，以及奔驰e300l？</a><br><a href=\"http://www.zhihu.com/question/53662704?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">宝马 7 系、奥迪 A8L、奔驰 S 级，作为德国三大豪华品牌的旗舰，各自有什么特点？</a><br>\n","link":"http://www.zhihu.com/question/529064619/answer/2451038369?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：一加发布 Ace 系列新机、B&amp;O 推出主动降噪无线耳机 Beoplay EX","date":"2022-04-22 01:02:35","description":"小米发布 Civi 1S 手机和小米智能家庭屏 10，戴尔发布多款 AMD 锐龙处理器的游戏本和台式机等<a href=\"https://sspai.com/post/72830\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72830"},{"title":"2022 年了，新能源汽车的保值率怎么样了？","date":"2022-04-21 13:12:09","description":"\n<p data-pid=\"Wrn59Iws\">新能源对标燃油车谈保值率，就像燃油车对标新能源谈保养费用，这样的话题刚起个头就聊不下去了。各自的相对劣势都是由产品特性决定的，并不像价格、服务这些因素可以通过调整提升竞争力。</p>\n<p data-pid=\"fMQNqA6T\">电池在新能源汽车中占很大成本且属于持续损耗部件，所以保值率很难和一些同级燃油车对比。其实也没有比的必要，保值率直接影响二手车交易，但仔细想一想，即使同级燃油车卖的价格更高，但车主在使用生涯中也明显付出了更高的养护费用。</p>\n<p data-pid=\"s9cdumTM\">在新能源汽车刚起步的阶段，其保值率会受产品受众、品质做工、续航长短、燃料类型等各方面的影响，但随着时间的推移，很多之前的问题也就不是问题了，比如整车品质、续航、用户群体，所以如果现在查一下新能源的保值率情况，其实并没有那么难看，甚至还比标致雪铁龙这类保值率低的品牌略强一些。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-110b4891d91c57a8430b8f5e6054f395_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"809\" data-rawheight=\"317\" data-watermark=\"watermark\" data-original-src=\"v2-110b4891d91c57a8430b8f5e6054f395\" data-watermark-src=\"v2-9c25771562b8b2b90a5f136b6955409b\" data-private-watermark-src=\"v2-642f3b26e54165ee51500c71f0a7bdd0\"></p>\n<p data-pid=\"ojOfc9eD\">综合来看，这两年的燃油车保值率是有所下滑的，反观一些热门新能源汽车的保值率却在提升，当然这是两者在各自领域的数据变化，如果互相对标的话，除了一些被调侃成“理财产品”的车型，整体而言新能源的保值率还是没法和燃油车相比。</p>\n<p><img src=\"https://pica.zhimg.com/v2-525c4745549c6ca441592f690736c4a6_720w.jpeg?source=b1748391?rss\" data-caption=\"我不理解，但很震撼\" data-size=\"normal\" data-rawwidth=\"671\" data-rawheight=\"434\" data-watermark=\"watermark\" data-original-src=\"v2-525c4745549c6ca441592f690736c4a6\" data-watermark-src=\"v2-029650a036acce7912d3ad3ec29fe228\" data-private-watermark-src=\"v2-cc2e7c03170a36ec9640f107937fc0d7\"></p>\n<p data-pid=\"gv-7bgnT\">另外，在低价新能源代步车领域，有相关经验的朋友告诉我这类车型的保值率会更好一些，因为需求纯粹、场景有限、电池费用不高等因素，在二手车市场流通也更顺利一些。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-54252dfdf9003cf1017761bdbb73d857_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1202\" data-rawheight=\"497\" data-watermark=\"watermark\" data-original-src=\"v2-54252dfdf9003cf1017761bdbb73d857\" data-watermark-src=\"v2-a282b58a407bd0d32d8f4884784d146a\" data-private-watermark-src=\"v2-4082b5d95835882794ada11a4bd44c6e\"></p>\n<p data-pid=\"KxTFpVO8\">其实还是那句话，如果硬要把新能源和燃油车放在一起对标的话，那么当前阶段新能源会淡化保值率因素，燃油车会淡化养护费用因素，毕竟都是自身相比对方没有优势的属性。</p>\n<p data-pid=\"IfEFifwD\">但单独看待新能源汽车的保值率，在排除“理财产品”和“PPT产品”这两种特例之外，主流热门的车型保值率是有所提升的，至少已经不是低到令车主脸色发绿的地步，可能再过几年就能达到正常受众普遍可以接受的程度了。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/vulry?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">张凝澈</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/529025280/answer/2450906601?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">13 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/353092015?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">新能源二手车保值率低？有什么解决办法吗？</a><br><a href=\"http://www.zhihu.com/question/330726029?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">过分看中汽车的保值率有意义吗？</a><br>\n","link":"http://www.zhihu.com/question/529025280/answer/2450906601?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何看待动画《新秦时明月》第23集？","date":"2022-04-21 12:21:14","description":"\n<p data-pid=\"tW1I2iF8\">大家好，《新秦时明月》已经播出第二十三集了。</p>\n<p data-pid=\"ut-Wuloy\">今天这集主要表现的是天明要翻过数十丈的悬崖。有看过的小伙伴可能觉得这个进度有些慢，但我想说的是这部分的剧情其实非常重要。一方面，这里表现出了一直挡在天明身前关心、保护他的大叔，第一次“放手”，让天明自己一个人去闯过这段悬崖峭壁。这是大叔对天明态度的第一次转变。另一方面，这也是天明第一次一个人去面对生死危机，之前不是有大叔保护，就是和少羽一起面对。这次他只能靠自己，一不留神就会粉身碎骨。这是天明从一个不涉世事，调皮捣蛋的少年，学会独立的第一步。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-842fd0282e72d6b9860dbf1bffb469d7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"608\" data-watermark=\"watermark\" data-original-src=\"v2-842fd0282e72d6b9860dbf1bffb469d7\" data-watermark-src=\"v2-a3f1d3c136b1b90dd584263b5ca5c6a1\" data-private-watermark-src=\"v2-4a4264fa89f8dfc9cfe38cc481c7e1c3\"></p>\n<p data-pid=\"Z5QEGXHH\">关于大家质疑大叔前后对待天明遇到险情的态度问题。其实这里大叔是为了保护天明不受毒气侵害的情形下，做出的判断和选择。这段话大叔说得很明白，我就不重复了。就一些细节：天明爬悬崖时，聂大叔的表情虽然平静，但从细微眼神可看出他其实一直在倾听天明的声音，他也希望天明自己可以克服恐惧爬过去，不然他就无法成长。相信如果天明真的有危险，我相信大叔一定会一剑劈开铁窗，跳出去救天明的吧。</p>\n<p data-pid=\"1-mDLjrd\">这里悄悄说一句，大叔对天明的这种态度，其实非常适合现在的奶爸、奶妈。现在的孩子都被大人保护得太好，其实有时候，让他们自己去面对一些危险和困难，对他们的成长，反而更有帮助。</p>\n<p data-pid=\"oN-DP9ZK\"><b>说一些幕后：</b></p>\n<p data-pid=\"hxl9gU4B\">最近我们启动了远程制作办公，但制作难度还是很大。最主要的一个麻烦就是频繁有远程机器死机。本来我们这现有的远程机器资源就有限。为了尽可能抢进度，我们已经安排了早班和晚班，两个班次来分批使用远程账号制作。这宕机一台，就等同于损失2位同事的产能，这两天每天死一台，导致4位同事没办法远程继续推进。随着时间的推移，上海有效的远程机器资源在持续减少。如果下个月还不能解封，真的要愁人了~</p>\n<p><img src=\"https://pic2.zhimg.com/v2-3f94ddd694f70874b9f0b769c64f401f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1366\" data-rawheight=\"767\" data-watermark=\"watermark\" data-original-src=\"v2-3f94ddd694f70874b9f0b769c64f401f\" data-watermark-src=\"v2-774855c60a0a98918ebfae2676d6d8ef\" data-private-watermark-src=\"v2-668777e9e0fe775c16150be005373613\"></p>\n<p data-pid=\"Sc2UrHo1\">然后是配音问题<b>，</b>最近总能看到李立群老师的抖音视频，同样因疫情封闭在上海的家中不能出去。李老师配的老版本公输仇还是蛮有特色的；但现在因为疫情的关系，很多人都没办法正常工作，配音这部分也影响蛮大。卫庄的声优吴磊配音的时候，为了躲避杂音的干扰，就是躲在衣柜里录的。各位声优老师为了确保正常播出，也是突破局限各种妙招频出。如果某一集大家发现配音不太好了之类的还请多多包容哈。 </p>\n<p><img src=\"https://pic2.zhimg.com/v2-32be69ab086a54f5587431f82ea94986_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1366\" data-rawheight=\"764\" data-watermark=\"watermark\" data-original-src=\"v2-32be69ab086a54f5587431f82ea94986\" data-watermark-src=\"v2-b28bf3502ca7b84f1238b39943597fa6\" data-private-watermark-src=\"v2-2a45f7e5355ae529b33feae9bead87e1\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-f5fa3fb28e4c93302dd60f523cd346c8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1365\" data-rawheight=\"765\" data-watermark=\"watermark\" data-original-src=\"v2-f5fa3fb28e4c93302dd60f523cd346c8\" data-watermark-src=\"v2-527479432cc97c7cdb0eba99c39f0ca9\" data-private-watermark-src=\"v2-68ff40f1ccbfe84847bf2da9b3017dd6\"></p>\n<p data-pid=\"8RRdF3IE\">居家办公期间也体会到了5G建设的重要性。如果网络提升到足够快的，像我们这种互联网依赖性比较高的工作，几乎可以在任何地方同步公司机器进行远程制作，对空间地域的要求就会小很多，未来也许并不需要把一群人聚在一个办公环境下办公；但是目前，延迟感觉还是一直存在，这种感觉对制作的影响还是蛮明显的，口型制作就可能因此错位（因为每个人延迟的时间都不一样，甚至同一个人同样的内容，前一次制作和后一次修改的延迟时间也不一样，所以这个真的是太难了）。</p>\n<p data-pid=\"U6bzfAtg\">另外为了节省带宽，降低流量占用，音频也会被压缩较大。随着未来科技发展突破，我相信这些问题都可以解决吧，只希望这一天快点到来，只希望上海快好起来，疫情快点过去，大家快点回到正轨。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/xie-xiao-ming-98-74?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">薛小明</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/529273418/answer/2450845457?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">7 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/322167288?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么好多人认为《秦时明月》中的星魂强于《天行九歌》中的卫庄？</a><br><a href=\"http://www.zhihu.com/question/294732892?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">天行九歌是在为秦时明月正片填坑吗？</a><br>\n","link":"http://www.zhihu.com/question/529273418/answer/2450845457?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"创作者请回答｜李鸿政医生：像侦探一样，书写医学科普故事","date":"2022-04-21 10:21:54","description":"\n<p data-pid=\"vcPx_2EK\">在故事档案局，局长收录的众多故事里，医疗故事是最令人揪心的。</p>\n<p data-pid=\"PlJu4nPm\">急诊抢救，就是在跟死神赛跑。看病，有时候像探案，医生们需要用强大的专业知识，在有限的时间里找出真正的病因。</p>\n<p data-pid=\"fTU08r27\">疾病与死亡，似乎离我们又近又远。在知乎，有这样一位医生，他用自己的亲身经历，给我们讲述那些真实发生在医院里的故事。他就是 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/19a13805e24e655eaee38f1851be41a0\" data-hash=\"19a13805e24e655eaee38f1851be41a0\" data-hovercard=\"p$b$19a13805e24e655eaee38f1851be41a0\">@李鸿政医生</a>。</p>\n<p data-pid=\"62NkRnpS\">有读者评价他：<b>「医生里讲故事讲的最好，作家里医术最高。」</b>（ <a class=\"member_mention\" href=\"https://www.zhihu.com/people/c68f36617c8fd67e49d13e8f53ca4094\" data-hash=\"c68f36617c8fd67e49d13e8f53ca4094\" data-hovercard=\"p$b$c68f36617c8fd67e49d13e8f53ca4094\">@朱辉</a> ）</p>\n<p data-pid=\"o3f8M64e\">这天，局长请来了李鸿政医生，听他讲讲那些惊心动魄的急救故事，看医生们是如何像侦探一样，找出复杂病症背后的真相。</p>\n<p data-pid=\"eX0orLhT\">顺便，我们一起学习一下那些「关键时刻能救命」的医学常识！快拿出小本本记下来吧。</p>\n<figure data-size=\"small\"><img src=\"https://pic3.zhimg.com/v2-bbab72a971dad27779d9e517cc791052_b.jpg\" data-rawwidth=\"690\" data-rawheight=\"657\" data-size=\"small\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"690\" data-original=\"https://pic3.zhimg.com/v2-bbab72a971dad27779d9e517cc791052_r.jpg\"></figure><h2>像「侦探」一样的医生们</h2>\n<p data-pid=\"wCKaWHD0\">重症医学科的李鸿政医生很忙。</p>\n<p data-pid=\"5TZu8S35\">他每天下班后没有应酬和饭局，也不唱歌打游戏。回家就是围着老婆孩子转，仅剩的一点私人时间，李医生用来在知乎写文章。</p>\n<p data-pid=\"W5SSt2tN\">他把写文章当成自己的副业，但这份副业其实仍然和主业强绑定，因为他写的是医疗科普故事。可以说，李鸿政医生的主业是救人，他的副业依然是在救人。</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-d1d4722c7df2a8086fa4bccd50c20aa9_b.jpg\" data-rawwidth=\"1382\" data-rawheight=\"747\" data-size=\"normal\" class=\"origin_image zh-lightbox-thumb\" width=\"1382\" data-original=\"https://pic2.zhimg.com/v2-d1d4722c7df2a8086fa4bccd50c20aa9_r.jpg\"><figcaption>李鸿政医生的知乎账号</figcaption></figure><p data-pid=\"qBMO46a1\">他笔下的内容，从小病小痛到大病重症，从预防到诊疗，一概涵括。他分享过让人提心吊胆的诊疗经历，也为知乎网友提出的疑难杂症答疑解惑。</p>\n<p data-pid=\"GyRfPg6N\">李鸿政医生将自己亲身见闻的诊疗案例，以推理探案故事的形式演绎出来，这些真实生动的故事，在知乎上吸引、积累了大量读者。而他写出这些故事的初衷，也是希望能让更多人具备重症急救常识。</p>\n<p data-pid=\"vncMLsih\">李医生的医疗故事里总是充满了「反转」，许多人希望他能把文章整理出来，出书、拍剧，期待能够拍出中国版的《豪斯医生》。</p>\n<p data-pid=\"oMIoSeLJ\">但对他而言，现实中的每一次急救，医生们最担心的就是出现「反转」。<b>每一次反转都是性命攸关，都是在和死神赛跑。</b></p>\n<h2>一杯奶茶会让人差点丧命吗？</h2>\n<p data-pid=\"qJE2D2nO\">李鸿政医生在知乎讲述过一位病人因一杯奶茶差点丢了性命的故事。</p>\n<p data-pid=\"3r6S3-OB\">起初，38 岁的梁女士突然胃口大增，一餐要吃 2-3 顿的饭量，吃不饱就冒冷汗。但奇怪的是，她不仅没有变胖，还变瘦了。</p>\n<p data-pid=\"WHh0Frhq\">原本她还洋洋得意，自己怎么吃都不胖，但是丈夫却有点担心。因为梁女士本身是一名乙肝携带者，万一这是肝癌的征兆，那就麻烦了。</p>\n<p data-pid=\"oaA0YA0Y\">夫妻俩想到这慌了神，来到医院检查，抽血查乙肝两对半、肝功能。</p>\n<p data-pid=\"CD3h6cEu\">结果全部正常。</p>\n<p data-pid=\"YPX-cPjO\">梁女士和医生说了自己的症状，医生怀疑是甲亢，又做了相关检查，但还是一切正常。</p>\n<p data-pid=\"11P0I9XQ\"><b>以上都不是，那是不是意味着没病？</b></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-f0fe2eb91686c9458eee9b968ae07a85_b.jpg\" data-rawwidth=\"640\" data-rawheight=\"377\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"640\" data-original=\"https://pic2.zhimg.com/v2-f0fe2eb91686c9458eee9b968ae07a85_r.jpg\"></figure><p data-pid=\"cHjUvPLM\">当天，梁女士刚好喝了一杯奶茶，却被送进了当地三甲医院的急诊科。</p>\n<p data-pid=\"Zqw7VJZg\">刚进抢救科，患者就「哇」的呕吐了一次。医生说，很有可能发生了糖尿病急性并发症——酮症酸中毒，这是有可能出人命的。</p>\n<p data-pid=\"ZTNNa1_d\">经过大量补液、使用胰岛素等处理，梁女士的病情逐渐好转，最终住入了内分泌科。在内分泌科，查了糖化血红蛋白，指数为 7.9%，这说明她最近 3 个月的血糖都是很差的了。</p>\n<p data-pid=\"wsnzX-yx\">事实上，梁女士这段时间都有口渴症状，只不过她没想到这是身体发出的异常信号，就没跟医生讲。直到医生跟她说，口渴也是血糖高的一个表现，她这才意识到。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-9f2a665487d87b460a1a2ba3cdcdc048_b.jpg\" data-rawwidth=\"720\" data-rawheight=\"431\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"720\" data-original=\"https://pic1.zhimg.com/v2-9f2a665487d87b460a1a2ba3cdcdc048_r.jpg\"></figure><p data-pid=\"WACi_MES\">还有一次，李鸿政医生遇到一个因胸痛入院的 52 岁中年女性。</p>\n<p data-pid=\"iH3CRI_X\">该患者在胸痛持续了两天以后，因为晚间疼痛加剧，在半夜去了急诊。</p>\n<p data-pid=\"2jxk8Yxn\">胸痛无论在心内科还是急诊科，都被「如临大敌」一样地对待，毕竟这一症状的成因有不少可能，比如心肌梗死，主动脉夹层，肺栓塞，气胸……<b>但这位患者的病因却不太寻常。</b></p>\n<p data-pid=\"ThhmOxYH\">在经历了抽血查心肌酶排除心肌梗死、用听诊器仔细听双肺排除气胸等操作后，李医生排除了其他致命原因，给病人开了抗炎镇痛药洛索洛芬，让患者先作休息。</p>\n<p data-pid=\"ch4XCkGJ\">但之后主任查房，查看该患者胸背状况，观察到患者左乳房下缘有几个淡红色的皮疹，呈带状分布，判断患者的胸痛其实是因为带状疱疹引起的。</p>\n<p data-pid=\"mUq6XvuL\">李鸿政医生随后请了皮肤科会诊，并按照皮肤科意见给用了激素口服、外用抗病毒药物治疗，患者的状况逐渐好转。</p>\n<p data-pid=\"PycMB1yJ\">身体出问题，病因可能很复杂。医生看病有时也如同侦探破案一般，需要在多种可能性中奋力探查出真正的病因。</p>\n<h2>写出与众不同的医学故事</h2>\n<p data-pid=\"Lc748y-w\">李鸿政医生与知乎的结缘要从十年前说起。</p>\n<p data-pid=\"uUMndJwG\">当时还在医院实习的李鸿政医生，从朋友那儿听说了知乎。「作为一个知识分享型平台，有很多「高手」在上面无偿分享知识，内容质量非常高。」</p>\n<p data-pid=\"CixXl1-n\">朋友邀请李鸿政医生入驻知乎，他回答的第一个问题是「如何健康吃早餐？」</p>\n<p data-pid=\"0nHn7s33\">是不是可以考虑做科普？可是知乎上相似的内容并不缺。</p>\n<p data-pid=\"WdFAyPr1\">那时，李鸿政医生还没有什么明确的职业规划，只是在按部就班地过着日子，对于在知乎上做分享这件事，也还没有太明确的思路。</p>\n<p data-pid=\"ZcREtDxs\">直到有天，他把工作中遇到的事写成医学故事，分享在了知乎上，一下收获到很多的评论与关注。李鸿政医生意识到，或许这就是自己可以做的，跟别人不一样的东西。</p>\n<p data-pid=\"neCvigAb\">有人好奇：李鸿政医生为什么会有那么多病例可以写？</p>\n<p data-pid=\"9tCA9sAA\">他在知乎上解释：「如果你也在医院呆了十年，并且跟我一样好学，别人的病例你也忍不住凑过去看几眼，看起劲了然后意识上把自己当管床医生，那么你这十年看过处理过的病例就是普通人的 2-3 倍。」</p>\n<p data-pid=\"xIg6QmNI\">李鸿政医生从小喜欢看小说，长大了学医也喜欢刨根究底，喜欢挖掘疾病内外的故事和逻辑。而虽然病例各有各有的模样，但原则却是共通的。只有看的多了，才会有经验积累。</p>\n<p data-pid=\"FOpSvJV5\">李鸿政医生分享这些案例和故事，一方面是提醒许多医学新人，为他们的学医之路提供更多经验；另一方面也是为普通人讲解相关常识，呼吁大家健康作息，在诊疗时尽可能告知过往病史，不要因为难为情而对医生有所隐瞒。</p>\n<h2>一位医生的职业生涯得以拓宽</h2>\n<p data-pid=\"JygykJfK\">李鸿政医生这种故事化科普医学知识的方式，一方面给自己积累了读者，成为医学话题下的优秀答主，收获了认同感；另一方面，他所科普的知识也因为广泛传播，帮助了许多患者及时就医，避免病情的扩大。</p>\n<p data-pid=\"cyyv3Jh_\">重要的是，围观抢救现场，可以帮助读者换位思考，对待医生有更客观科学的理解。多一分理解，就少一分误会。</p>\n<p data-pid=\"K87poxDJ\">李鸿政医生出版了图书<a href=\"https://www.zhihu.com/pub/book/120202629\" class=\"internal\">《生命的反转：急重症科医生手记》</a>，用一本书讲透35种急重症常识。在知乎，他还开设了盐选专栏<a href=\"https://www.zhihu.com/xen/market/remix/paid_column/1419263074604343296\" class=\"internal\">《急诊见闻：生命抢救倒计时》</a><a href=\"https://www.zhihu.com/xen/market/remix/paid_column/1451572214999486464\" class=\"internal\">《诊室手记：别拿小病不当事儿》</a>，用通俗的语言普及了多类常见重疾症相关医学知识，以及日常中适用的急救知识。</p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-c2353aca0401d6ad2256703d0cee0ae8_b.jpg\" data-rawwidth=\"1383\" data-rawheight=\"533\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"1383\" data-original=\"https://pic1.zhimg.com/v2-c2353aca0401d6ad2256703d0cee0ae8_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-8e9a07f57de2d8644bb939a744e8d38b_b.jpg\" data-rawwidth=\"1362\" data-rawheight=\"812\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"1362\" data-original=\"https://pic4.zhimg.com/v2-8e9a07f57de2d8644bb939a744e8d38b_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-0834b39376b20cfe774b32f1b8aec1a0_b.jpg\" data-rawwidth=\"1354\" data-rawheight=\"794\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"1354\" data-original=\"https://pic1.zhimg.com/v2-0834b39376b20cfe774b32f1b8aec1a0_r.jpg\"></figure><p data-pid=\"IAKUxb5D\">另外，李鸿政医生还在第三季知乎故事大赛中，获得了年度总冠军的荣誉。</p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-4bb3cd88549b73713c2d98ac804c6412_b.jpg\" data-rawwidth=\"1377\" data-rawheight=\"646\" data-size=\"normal\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"1377\" data-original=\"https://pic3.zhimg.com/v2-4bb3cd88549b73713c2d98ac804c6412_r.jpg\"></figure><p data-pid=\"YWcnmfz0\">在知乎分享的历程，让李鸿政医生得到了大量的积极正面的反馈，也进一步影响了他对自己的职业生涯规划。</p>\n<p data-pid=\"BhYm8Gns\">现在，李鸿政医生更希望自己以后能会成为一个专职的医学科普作家，写更多的文章，出版更多形式多样的科普书籍，比如适合儿童阅读的，适合老人阅读的，适合年轻人阅读的；故事型的，单纯干货型的……此外，写医学小说、拍摄医疗主题的电视剧，也在他未来的计划中。</p>\n<p data-pid=\"ChQX3tYA\">李鸿政曾经想过，如果没有在知乎上做答主，不擅长研究和写论文的自己，可能顶多能够成为医院的一个小有名气的医生，做到全国知名却不太可能。正是借由知乎这个平台，李鸿政医生职业发展的可能性得以拓展开来。</p>\n<p data-pid=\"I9CHFWlc\">听李医生讲完，局长对于「医生」这个职业的理解，又增添了一丝神圣和崇拜。</p>\n<p data-pid=\"99CdIhTk\"><b>李医生不仅在现实意义上做到了「治病救人」，他的科普故事，也帮助普通人了解到更多医学知识，是另一种意义上的「救人」。这便是医学科普的魅力所在，也是真实故事的力量所在。</b></p>\n<p data-pid=\"D4N8eXlA\">希望每个人都能健康平安地度过每一天！</p>\n<figure data-size=\"small\"><img src=\"https://pic2.zhimg.com/v2-1029d9eadc22231bf5e2697014531001_b.jpg\" data-rawwidth=\"610\" data-rawheight=\"575\" data-size=\"small\" data-caption=\"\" class=\"origin_image zh-lightbox-thumb\" width=\"610\" data-original=\"https://pic2.zhimg.com/v2-1029d9eadc22231bf5e2697014531001_r.jpg\"></figure><p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/gu-shi-dang-an-ju-71?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">故事档案局</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/502409715?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"一派·在线沙龙 08：阅读，不该只在读书日","date":"2022-04-21 09:57:59","description":"欢迎参加 4 月 22 日（本周五）20 点举办的「一派·在线沙龙」直播活动。<a href=\"https://sspai.com/post/72789\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72789"},{"title":"为什么电动汽车很少听说加价销售？","date":"2022-04-21 09:53:18","description":"\n<p data-pid=\"Qr6fzSCS\">先放结论：<b>不管是什么原因，最终都是由供需关系决定的。</b></p>\n<p data-pid=\"HN33mDLP\">忘了哪位投资大神曾经说过类似以下的话：<br><b>一个商品的价格不是由它的使用价值决定的，也不是由它的情绪价值决定的，也不是由它的成本决定的，甚至与以上这些一点关系都没有。</b><br><b>价格就是价格，它仅仅就是根据市场当前的供需关系决定的。</b><br></p>\n<p><br></p>\n<p><img src=\"https://pica.zhimg.com/v2-09b2987721471f5a30cb94263e3e1f8b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"608\" data-watermark=\"watermark\" data-original-src=\"v2-09b2987721471f5a30cb94263e3e1f8b\" data-watermark-src=\"v2-368457c42e1b05553c70050565438fe5\" data-private-watermark-src=\"v2-244b3e3c980f9209244b848513ba3691\"></p>\n<p><br></p>\n<p data-pid=\"l6d2xs5G\">说回电车，以我浅薄的认知，跟车价关系相关的可能有以下几个因素</p>\n<ul>\n<li data-pid=\"15Qc85Kq\">1.上游成本</li>\n<li data-pid=\"K_ZhWyfh\">2.政策</li>\n<li data-pid=\"82XqTnq0\">3.电车制造的成熟程度</li>\n<li data-pid=\"nEasKj4q\">4.市场的接受程度</li>\n<li data-pid=\"THN0EDTd\">5.这些因素这么决定供需关系的</li>\n<li data-pid=\"aO85ASmM\">6.过去、现在、将来</li>\n</ul>\n<blockquote data-pid=\"yvLPr9qA\">这些因素组合起来，会决定最终的供需关系，也就决定了车价。</blockquote>\n<p data-pid=\"4qFGDT8f\">所以电车也不一定一直不加价的，<b>只不过在过去的一段时间里面大部分因素都导致没到供过于求的程度，才会让我们误以为电车加价相对较少</b>。</p>\n<p data-pid=\"N6iU2yX0\">那一个一个来拆拆上面的几个因素</p>\n<h2>1、上游成本</h2>\n<p data-pid=\"VmjJR_6p\">上游成本由两个层次组成：第一层Tier 1~Tier 3的供货价格，第二层更上游的原材料的价格</p>\n<h3>先说第一层：</h3>\n<p data-pid=\"wkzMOkLh\">对于电车这个目前在正在小荷才露尖尖角的新兴产业，各个Tier的成本正随着渗透率的不断提升而逐渐形成<b>成本上的规模效应。</b></p>\n<p data-pid=\"JtlbWNOq\">不管是真正意义上的产业规模化，还是政策导向的过度扩张。<br>都实实在在的拉低了电车所需的特有的各个部件的成本。</p>\n<p data-pid=\"TZh5YF2w\"><b>拿电车里成本占比最大的动力电池来说，从2010年到2020年已经降了90%</b><br></p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-723c6e4bccaec59e5f8e6d7afd632409_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"watermark\" data-original-src=\"v2-723c6e4bccaec59e5f8e6d7afd632409\" data-watermark-src=\"v2-c1f52059c5873683243475b5920b5246\" data-private-watermark-src=\"v2-94f37d550c1d8bc6c15a15f453a3b2bf\"></p>\n<p><br></p>\n<p data-pid=\"dj2_WVZ4\">在这一层：</p>\n<blockquote data-pid=\"gKxww85y\">以肉眼可见的渗透率不断的提升，成本会继续下降。</blockquote>\n<h3>再说第二层：</h3>\n<p data-pid=\"zFJsuIG6\">上游的原材料成本。<br>虽然会因为开采工艺及技术的提升能够一定程度的降低成本，但在有限资源的部分因为越采越少的原因，形不成<b>成本上的规模效应。</b><br>不过好的地方是，这一部分在原本全球化的充分分工协作的市场上，如果没有天灾人祸的话<b>价格是相对可控的。</b></p>\n<p data-pid=\"DZpTsScP\">这里为什么说是<b>可控而不是稳定。</b><br>因为原材料作为大宗商品肯定会<b>有一定的周期性的，所以不稳定。</b><br>但是厂家会通过<b>期货期权等进行对冲，所以价格还基本可控。</b><br></p>\n<p><br></p>\n<p><img src=\"https://pica.zhimg.com/v2-eff6bf6f38fee09d59444628785d1420_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"watermark\" data-original-src=\"v2-eff6bf6f38fee09d59444628785d1420\" data-watermark-src=\"v2-76e7f311f96e8c2d2e07288dac5f56d0\" data-private-watermark-src=\"v2-ccb3e7d5fc4fa8592c7f34bf0a05f8e0\"></p>\n<p><br></p>\n<p data-pid=\"Yen7WGn_\">而原本上游原材料的成本离主机厂之间的链条还很长，而且还有对冲提供的安全垫。<br>如果没有发生啥不可抗力，<b>基本能够熨平大部分的周期。让TierX们的成本规模效应继续往前跑。</b></p>\n<p data-pid=\"rVxU3fIw\">但，<b>万一</b>，如果因为一些机缘巧合的因素，导致上游原材料的成本如果急剧上升，而且短期内不能恢复的话。<br>在消耗完之前通过对冲来垫起的安全垫之后，就会不可避免的导致各层Tier的成本上升。<br>一开始还可以为了顾忌与主机厂的长期合作稳定性而不一定会提高供货成本，但是在入不敷出的时候也只能先保证自己活下去，主机厂的进货成本也就会上升。</p>\n<p data-pid=\"RwsWP12n\">在这一层：</p>\n<blockquote data-pid=\"sRVmfkZk\">虽然隔着远，但是没有规模效应，而且波动的程度反而会高一点</blockquote>\n<p><img src=\"https://pica.zhimg.com/v2-d26f91a9eca62dc00abba4ac8e5ea9c6_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1254\" data-rawheight=\"530\" data-watermark=\"watermark\" data-original-src=\"v2-d26f91a9eca62dc00abba4ac8e5ea9c6\" data-watermark-src=\"v2-9ae7d0661b6f9811092bf1d45bd5d597\" data-private-watermark-src=\"v2-f3b93800f6fe1b146c7fb13b9af05e91\"></p>\n<h2>2、政策</h2>\n<p data-pid=\"B3YLjwq_\">这部分比较简单，主要是国家对电车的补贴力度。<br>补贴力度越大，越能够给主机厂提供价格调整的安全垫，<b>从而可以在更大的纵深内去执行与实施战略，而不用因为一时的现金流断流而被迫平仓出局。</b></p>\n<p data-pid=\"QJDU7LS5\">虽然即使补贴了以后也有可能亏本卖，<b>但是亏本卖了一定规模以后没准就过了转亏为盈的阈值了。</b><br>政策给的安全垫厚的时候，企业也可以视自己的情况来决定让利多少给消费者，主动性更高。</p>\n<p data-pid=\"mdzWQo7Q\">而，如果补贴越来越少的话，就大大削薄了主机厂可以辗转腾挪的空间。<br>很有可能就不得不因为一时的五斗米而涨价，<b>反脆弱性急剧下降。</b><br></p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-218ebddf0467a8f7f557fdf6f3e9b82c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"973\" data-rawheight=\"456\" data-watermark=\"watermark\" data-original-src=\"v2-218ebddf0467a8f7f557fdf6f3e9b82c\" data-watermark-src=\"v2-c82e387132430e74185c4cd1f125623b\" data-private-watermark-src=\"v2-a31175c6518d81a55a2c0957bbb37904\"></p>\n<p><br></p>\n<p data-pid=\"t1YanPYy\">在政策这一部分：</p>\n<blockquote data-pid=\"dPq4HZHU\">我们国内对的政策导向给了电车野蛮发育一个很好的温床，在可以一定程度上或者最小程度上考虑成本的温床。</blockquote>\n<h2>3、电车制造的成熟程度</h2>\n<p data-pid=\"49gbDQ8D\">电车制造的成熟度也可以分为两层：第一层同样是制造工艺和技术提升后对的成本的持续下降，第二层是成熟度提升消费者对电车这新物种的接受度提升。</p>\n<p data-pid=\"_5JnMHbD\">第一层：<br>很简单，结论与Tier X们一致，还在青壮年的电车只要不懈怠，成本还可以肉眼可见的下降。<br></p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-993046aded32f5887c1fc55c6ea3aaab_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"650\" data-rawheight=\"547\" data-watermark=\"watermark\" data-original-src=\"v2-993046aded32f5887c1fc55c6ea3aaab\" data-watermark-src=\"v2-3ef24f6fed15f9b7ad3f8dd21695ed84\" data-private-watermark-src=\"v2-f24eb1763f00717822b94f36ea71f8f3\"></p>\n<p><br></p>\n<p data-pid=\"z5fFl7AI\">第二层：<br>如果产品成熟能够提升消费者的接受度，就会逐渐拥有一定程度的定价权。<br>有了定价权以后，价格就会逐渐接近价值甚至超过价值。<br>但是，制造成熟程度只是消费者接受电车的<b>一个必要不充分条件</b>，其他条件我们放到第4部分说。</p>\n<h2>4、市场接受程度</h2>\n<p data-pid=\"0zQH3rKi\">市场接受程度除了产品本身的成熟度，对电车来说还与基础设施的普及程度及燃油车的购买惯性何时消除相关。</p>\n<h3>先说基础设施：</h3>\n<p data-pid=\"vnFnQCTl\">现在道路加油站到处都是，但是充电站就不一定了，超级充电站就更不一定了。<br>如果在你里程极度焦虑的时候，周围找不到一个充电站的话，你可能一辈子都不会再想买电动车。</p>\n<p data-pid=\"GJaoIk-F\">对家庭的用车门槛来说，可能会需要一个专用车位，而且小区物业允许你安装充电桩。<br>现在全国各地对的政策不一致，有些小区要安个充电桩会比登天还难。<br></p>\n<p><br></p>\n<p><img src=\"https://pica.zhimg.com/v2-e9b3e5345a9c826b8462664aa8aefb05_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"960\" data-rawheight=\"684\" data-watermark=\"watermark\" data-original-src=\"v2-e9b3e5345a9c826b8462664aa8aefb05\" data-watermark-src=\"v2-9d9e94837449a6eb118f9a1dd9b91d93\" data-private-watermark-src=\"v2-bee18b4ff6684ab9f50b2a9091318bb7\"></p>\n<p><br></p>\n<h3>然后，购燃油车的惯性</h3>\n<p data-pid=\"JChc0NmA\">这个说不好什么时候拐点来，拐点一旦来了电车的购车需求会井喷是爆发。<br>也许是明年，也许是后年，也有可能是在某年的冬季的。<br><b>虽然一定回来，但是很大概率会迟到。</b></p>\n<h2>5.与供需关系间的玄学</h2>\n<p data-pid=\"Wj_07huD\">以上的四点共同决定的供需关系的平衡，也就决定了车价</p>\n<p data-pid=\"JeCO3BUO\">比如：<br>在制造工艺和上游成本没有得到充分平摊之前，电车的车价相对燃油车是没有一点竞争力的。<b>这时即使有供也无求</b>这个时候别说涨价，先烧钱铺市占率养市场才是王道。</p>\n<p data-pid=\"H3UoIGo4\">然后政策给一点补贴给一些限牌也能够在一定程度上调整供需关系，<b>会有一定特定群体的求，但是还不能覆盖所有的供。</b></p>\n<p data-pid=\"wvKqjvzq\">然后制造成熟度提升可以让厂家持续稳定的、自己又能活下去的、又能提供给消费者在相同价格下基本等同于油车是使用体验，甚至是超出，又或者能够差异性的车的话。<b>求的部分就又对多很多，稳定很多。</b></p>\n<p data-pid=\"Zwg8ZW1M\">然后在市场接受程度上<br>电车这个之前及现在都还处于开荒的时期的愣头青是没有资格拥有定价权的，因为消费者还没接受你，更不要说需要你。<i>你看美团滴滴支付宝都是前期疯狂的补贴，只有在产品到了用户有一定使用粘性以后才敢开始提价的灰度测试。</i></p>\n<p data-pid=\"_oIw7xEA\">消费者认知的逐步转变，基础设施的不断普及。慢慢的可以让消费者很安心的去买电车。这时候的<b>求就有可能能大于供了。</b><br>这个之后所谓的产能不足，品牌溢价才会出现。</p>\n<p data-pid=\"Gqy55-wF\">以上种种因素的变化，会导致供需的天平不断的踩跷跷板。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-c07755910a216a461ffff94645864da7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"617\" data-watermark=\"watermark\" data-original-src=\"v2-c07755910a216a461ffff94645864da7\" data-watermark-src=\"v2-1decde557b08046ea43462689be53c3a\" data-private-watermark-src=\"v2-8b3142917122580fc73c327c3e62286a\"></p>\n<p><br></p>\n<h2>6、过去、现在、未来</h2>\n<h3>过去</h3>\n<p data-pid=\"kVwH37y0\"><b>Tier X们的供货价格</b>：开始很高，然后持续稳定的快速下降中<br><b>原材料</b>：基本稳定<br><b>政策</b>：很高<br><b>制造程度</b>：大部分很垃圾<br><b>市场接受程度</b>：基本很难接受</p>\n<h3>我们在一个什么样的当下</h3>\n<p data-pid=\"xlyAlgGv\"><b>Tier X们的供货价格</b>：然后持续稳定的中速下降中</p>\n<p data-pid=\"HAGKo5TJ\"><b>原材料</b>：急剧上涨<br><i>在逆全球化的、地缘政治风险不断升级的当下。</i><br><i>而又有个别原材料只集中在少数的几个国家的现实下。又加上这恼人的疫情。</i><br><i>原材料的价格就不再是可控的了，可能急涨急跌。</i><br><i>我们什么时候见过跌到0元以下的原油，之后又绝地反击的。</i></p>\n<p data-pid=\"b7VKMea5\"><b>政策</b>：缓慢滑坡→极速滑坡<br><b>制造程度</b>：逐渐成熟，个别优秀<br><b>市场接受程度</b>：逐渐开始接受，隐隐看到拐点、</p>\n<h3>会有什么样的未来</h3>\n<p data-pid=\"Qb7lnswj\"><b>Tier X们的供货价格</b>：牙膏应该是挤不太出来了，基本维持稳定<br><b>原材料</b>：不知道，最差也差不过现在了<br><b>政策</b>：基本不会有补贴<br><b>制造程度</b>：普遍城市，优秀案例被Copy<br><b>市场接受程度</b>：成为新的购车惯性</p>\n<p data-pid=\"ghdF-xNt\">大概率逃不过一个行业内卷的宿命：<b>今天很残酷，明天很美好，后天还是很残酷。</b></p>\n<p data-pid=\"wRfIk60S\">会有一段电车拐点来临之后整个行业蛋糕变大，然后大家都有汤喝，都可以加价的时代。<br>之后就会进入红海厮杀，，普通玩家逐渐出清，一将功成万骨枯，谁都不敢加价。<br>再之后真寡头形成，消费者没的选，寡头间又有默契，随便收割消费者的加价。<br>然后又进入死亡循环。</p>\n<p data-pid=\"TYkVwUvw\">总结起来就是如下面这张图，这是全文唯二张我自己XJB画的图，看个意思就行啦。</p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-868898bafada3a608201944b4addebf4_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"539\" data-watermark=\"watermark\" data-original-src=\"v2-868898bafada3a608201944b4addebf4\" data-watermark-src=\"v2-b895c91e9ade1f5d9c1b90522ae8e186\" data-private-watermark-src=\"v2-5cfed891172edb63d0f5e2660349a109\"></p>\n<p><br></p>\n<p data-pid=\"s87Hvs4e\">而我们才刚刚看到电车这个新变种刚刚冒头的那么短短的一小个阶段。<br><b>还没有穿越几个牛熊，还不知道未来这个跷跷板会怎样。</b><br>以上只是我浅薄的认知下的无责任胡扯，不一定对，很有可能错。</p>\n<p data-pid=\"hajEWnOS\">（图片来自网络，侵删）</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/lin-jian-chao-66?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">小林</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/528890987/answer/2449518474?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">13 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/64373033?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">做一名超级跑车销售该从何入手？发展前景怎样？</a><br><a href=\"http://www.zhihu.com/question/297365223?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">19年A6l明年开始销售，到底该买18年A6l还是买19年A6l。？</a><br>\n","link":"http://www.zhihu.com/question/528890987/answer/2449518474?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"一派·Podcast 番外｜一名文科生的愿望，是做程序员","date":"2022-04-21 09:31:49","description":"和 @100gle 来聊聊他的故事，看看他是如何从一名社会学学生起步，最终达成了自己的愿望，以程序员的身份度过了四年的职业生涯。<a href=\"https://sspai.com/post/72769\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72769"},{"title":"处理器简史 05 | 七年抗辩官司和解，一朝发难反目成仇","date":"2022-04-21 09:07:56","description":"AMD 没有被 1987 年的一纸诉状拖垮，反而在英特尔的围追堵截下开始了自研之路。多年的卧薪尝胆之后，AMD 终于具备了与英特尔抗衡的实力——法槌落定，商场变成了战场，而这场博弈还远未结束。<a href=\"https://sspai.com/prime/story/sv-anecdotes-05\" target=\"_blank\">查看全文</a><p>本文为会员文章，出自<a href=\"https://sspai.com/prime/precog/single\" target=\"_blank\">《单篇文章》</a>，订阅后可阅读全文。</p>\n","link":"https://sspai.com/prime/story/sv-anecdotes-05"},{"title":"新玩意 102｜少数派的编辑们最近买了啥？","date":"2022-04-21 08:31:02","description":"低成本的「全员磁吸」方案。<a href=\"https://sspai.com/post/72821\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/72821"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\n    return new Date(date.toLocaleString('en-US', { timeZone }))\n}\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        timeZone\n    })\n    return {\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\n        convert (date) {\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\n        }\n    }\n}\n\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\n    return converter.convert(new Date(secDate), tzName) - secDate\n}\n\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\ncmn-Hans-SG = 中文普通话-简体-新加坡\ncmn-Hant-TW = 中文普通话-繁体-台湾\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\ncmn = 中文普通话\n\nzh-Hans = 中文-简体\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\n}\n\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long'\n}\nconst now = new Date()\n\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\n\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\n\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\n\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\n\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\n\nzhCNFormatter.format(now) // 2021年10月13日星期三\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\n\njaFormatter.format(now) // 2021年10月13日水曜日\njaAltFormatter.format(now) // 令和3年10月13日水曜日\n\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\n// {locale: 'zh-CN', calendar: 'gregory', …}\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\n     // 基于一个固定日期计算，这里选择 1970.1.1\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\n    const base = new Date(1970, 0, 1).getTime()\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\n    return Array.from({ length: 7 }, (_, day) =&gt; (\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\n    ))\n}\n\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n}).formatToParts(new Date())\n// [\n//     { type: 'year', value: '2021' },\n//     { type: 'literal', value: '年' },\n//     { type: 'month', value: '10' },\n//     { type: 'literal', value: '月' },\n//     { type: 'day', value: '13' },\n//     { type: 'literal', value: '日' },\n//     { type: 'weekday', value: '星期三' },\n//     { type: 'literal', value: ' ' },\n//     { type: 'dayPeriod', value: '上午' },\n//     { type: 'hour', value: '1' },\n//     { type: 'literal', value: ':' },\n//     { type: 'minute', value: '00' },\n//     { type: 'literal', value: ':' },\n//     { type: 'second', value: '00' }\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\n}\n\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\n  timeZone: 'America/Los_Angeles',\n  year: 1995,\n  month: 12,\n  day: 7,\n  hour: 3,\n  minute: 24,\n  second: 30,\n  millisecond: 0,\n  microsecond: 3,\n  nanosecond: 500,\n  calendar: 'iso8601'\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote>\n<p>周六不放假休息，还在这加班搞 CTF？</p>\n</blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/86535/11/24318/75037/622032a8E4f94d4ae/89703ccc122cf4e0.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"从 Google Analytics 的统计代码说起 —— 谈谈 script 标签的 async 和 defer 属性","date":"2020-10-13 09:25:00","description":"\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/80291/2/16552/19311/622032b3Eb300c2aa/66748fc8124a01c5.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/script-async-defer/\">https://blog.skk.moe/post/script-async-defer/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/script-async-defer/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将 […]","link":"https://flyhigher.top/develop/2160.html"}]