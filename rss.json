[{"title":"国际视野下中国企业债券违约的若干法律问题研究（一）","date":"2022-07-05 05:19:11","description":"\n<p data-pid=\"S8WgiA1L\">俄乌站争与疫情封控等等种种因素叠加，中国资本市场也是暗流涌动。为吸引国际资本，2022年5月27日，中国人民银行、中国证监会、国家外汇管理局发布了联合公告〔2022〕第4号（关于进一步便利境外机构投资者投资中国债券市场有关事宜），自2022年6月30日起施行。这也是体现领导层提出的“中国开放的大门只会越开越大”。当然，除了加快完善债券基础设施、形成统一市场之外，债券相关的法律制度也需要接轨，而这方面，需要做的还有很多。因此应景地把发表过的一篇文章贴出来，英文版也已经发表在Capital Markets Law Journal.</p>\n<p data-pid=\"PdF0WICT\"><b>国际视野下中国企业债券违约的若干法律问题研究（一）</b></p>\n<p data-pid=\"hdbddvZU\">FU Wang</p>\n<p data-pid=\"g-puaKrx\">摘要：从2014年开始中国掀起了一波公司债券违约浪潮，这表明无风险的债券市场已经不复存在。全球范围内，债券违约中的法律问题无外乎三个主要方面，一是债券受托管理人的权责，二是违约事件和加速到期的确定，三是集体行动机制。本文重点考察了中国2020年债券违约法律框架的变化，涵盖了法律，法规，司法解释和市场文件等方面；并指出我国在借鉴了英美等发达市场经验的基础上，于上述三个核心问题都取得了进步、提升了与国际标准的兼容性，但对比之下，仍存在需要改进的不足之处。</p>\n<p data-pid=\"hjk3SFfw\"> 关键词：债券违约 债券受托管理人 加速到期 集体行动条款</p>\n<h2>一、 中国债券违约与法律框架的升级</h2>\n<p data-pid=\"hBzBtl6F\">债券最初是为了资助战争而发明的，在接下来的几个世纪中，西方国家如英国对其进行了现代化改造，帮助政府融资用于各项支出。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn1\" class=\"internal\">[1]</a>如今，发行债券已成为为一个国家或企业筹集资金的最重要和最有效的方法之一。我国财政部从1981年开始发行债券，债券市场随着改革开放政策的发展也迅速扩大规模。截至2016年底，中国债券市场已成为仅次于美国的第二大债券市场。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn2\" class=\"internal\">[2]</a> 本文所指的“企业债券”是一个概括性用语，用于描述具有企业信用的实体发行的债券，不包括政府债券和金融债券。它主要包含以下几种类型的债券：<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn3\" class=\"internal\">[3]</a> （1）<b>企业债</b>：由国家发展和改革委员会批准并在银行间市场和交易所市场交易，由中央国债登记结算有限责任公司登记结算；（2）<b>公司债：</b>中国证监会监管，仅在交易所债券市场交易；（3）<b>银行间市场各类公司债券</b>，例如短期融资券、中期票据、永续债券，定向债务融资工具、资产支持票据，项目收益票据，等等。这些债券发行与交易由中国人民银行主管的中国银行间市场交易商协会（以下简称“NAFMII”）监管，并由上海清算所登记结算。</p>\n<p data-pid=\"dHdc_Xg0\">中国债券市场曾经的低违约率助力了市场的蓬勃发展。在资本市场不断开放的背景下，外国投资者不断涌入我国债券市场。2016年2月，中国人民银行取消了外国机构投资者的配额限制，允许他们在银行间债券市场进行更多投资。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn4\" class=\"internal\">[4]</a> 许多国家的负利率也相应使得中国市场更有吸引力。比如2018年中国10年期国债的收益率为3.62％，企业债券的平均收益率为4.78％。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn5\" class=\"internal\">[5]</a> 截至2018年3月，外资在我国境内债券的持有量达到了13.6亿元人民币，同比增长超过60％。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn6\" class=\"internal\">[6]</a> 当然，在这个过程中，中国债券市场也受到外国投资者的批评，比如债券回购业务不发达以及债券期货交易缺乏对手方，导致债券缺乏流动性。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn7\" class=\"internal\">[7]</a> 不过，有一点是西方发达市场所不具备的，即投资者通常无需担心债券违约，从而享受着无风险回报。但这一不败神话，终于在2014年被打破。此后一波违约潮开始让债券违约处置机制成为投资者和法律界关注的焦点。</p>\n<h2>(一) 债券违约率不断上升引发关注</h2>\n<p data-pid=\"0NX2Fda_\">2014年3月4日，上海超日太阳能科技股份有限公司宣布无法向投资者支付债券利息，宣告了我国国内市场首次债券违约。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn8\" class=\"internal\">[8]</a> 通常情况下，发行人如果出现财务困难，当地政府往往会提供救助，俗称“刚性兑付”。这种作法扭曲了市场机制，并给投资者带来了幻想。但在经济下行和资金紧张的背景下，刚性兑付计划无法再覆盖所有陷入困境的发行人，于是违约率不断上升。统计数据显示，绝大多数国内市场债券违约是非国有企业的违约，按发行人的数量计算，占违约的86.7％，按本金计算，占90％。”<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn9\" class=\"internal\">[9]</a> 此外，离岸违约也意外出现。国有企业青海省投资集团在香港发行了美元债券，但在2009年2月拖欠了1,090万美元的利息，这是20年来的首次离岸违约。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn10\" class=\"internal\">[10]</a></p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-77f96d4c82a48950cd6a9952d6d86cd2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"844\" data-rawheight=\"391\" class=\"origin_image zh-lightbox-thumb\" width=\"844\" data-original=\"https://pic3.zhimg.com/v2-77f96d4c82a48950cd6a9952d6d86cd2_r.jpg\"></figure><p data-pid=\"SRPvC3Na\">（资料来源：标普全球）。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn11\" class=\"internal\">[11]</a></p>\n<p data-pid=\"ALVNroyD\">笔者认为，从积极的角度来看，债券违约对我国而言实际上是一件好事。与美国债券市场相比，我国的债券违约率仍然很低，比如2018年我国市场风险较高的高收益债券和所有企业债券的违约率分别为0.95％和0.33％，而美国高收益债券的违约率则高于2％。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn12\" class=\"internal\">[12]</a> 没有违约的市场无法正常运作，因为无风险的环境会造成错觉，让投资者无法有效地对风险定价与投资。违约潮使得投资者更加关注两个方面：债券信用评级和违约处置机制。我国评级机构评级相对宽松，因为80％的发行人一直被评为AA或更高等级，高于标普、穆迪等全球性机构的评级。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn13\" class=\"internal\">[13]</a> 至于违约处置机制的不完善也引发了投资者的报怨，相关报道显示债务回收比率从2016年的46％下降至2020年的13％。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn14\" class=\"internal\">[14]</a></p>\n<h2>(二) 债券违约处置的法律框架升级与实务难题</h2>\n<p data-pid=\"v0WX9gJ8\">面对债券违约的浪潮和投资者的批评，2019年，我国修改了法律、法规以及市场文件，针对现有的债券违约法律框架进行了重要升级。搭建新框架的相关法律及文件于2019年年底左右出台，并于2020年生效。为说明这种变化，本文将债券违约法律框架以2020年作为分界点，概括为两个阶段：2020年之前框架和2020年新框架。</p>\n<h3>1. 2020年之前框架</h3>\n<p data-pid=\"a_XEmKDv\">交易所债券市场主要由《中华人民共和国证券法》所规范，但2019年该法修订之前，只有一个条款涉及债券违约，即禁止违约发行人发行新债券。中国证监会在其2015年颁布的《公司债券发行与交易管理办法》<i><b><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn15\" class=\"internal\">[15]</a></b></i>中规定，发行人应当在债券募集说明书（以下简称“债券说明书”）中约定构成债券违约的情形、违约责任及其承担方式以及公司债券发生违约后的诉讼、仲裁或其他争议解决机制。发行人应当为债券持有人聘请债券受托管理人，并订立债券受托管理协议；在债券存续期限内，由债券受托管理人按照规定或协议的约定维护债券持有人的利益。债券受托管理人由本次发行的承销机构或其他经中国证监会认可的机构担任。同时还规定债券受托管理人负责召集债券持有人会议，在发行人不能偿还债务时可以接受全部或部分债券持有人的委托，以自己名义代表债券持有人提起民事诉讼、参与重组或者破产的法律程序。</p>\n<p data-pid=\"YCFV-_Cj\"> 银行间债券市场的主要规范性文件是中国人民银行2008年发布的《银行间债券市场非金融企业债务融资工具管理办法》<i><b><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn16\" class=\"internal\">[16]</a></b></i>，该办法搭建了发行框架，NAFMII则进一步完善了相关规则。比如颁布了《银行间债券市场非金融企业债务融资工具持有人会议规程》（2013年修订）》<i><b><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn17\" class=\"internal\">[17]</a></b></i>（以下简称“《2013年会议规程》”），旨在明确债券违约后的持有人会议机制，通过会议提出解决方案。 </p>\n<p data-pid=\"jJqiwJpR\">与证监会管辖的交易所市场相比，银行间市场并没有给债券受托管理人留有一席之地。如果发生违约，召集人应召集债券持有人会议通过决议以采取进一步行动，例如诉讼或重组。实践中，会议召集人通常是债券承销商。《2013年会议规程》还提出了除债券说明书另有约定外，会议决议标准为66%+75%，即会议生效需要三分之二以上表决权数额持有人出席，决议生效则需要出席会议的持有人所持表决权的四分之三以上通过。</p>\n<p data-pid=\"YvE5gFbZ\">至于与债券相关的司法诉讼，我国并没有特别的立法，所适用的法律规则与其他商事纠纷并无特别不同，比如《中华人民共和国民事诉讼法》和《中华人民共和国企业破产法》等等。这些法律中没有关于债券违约的特定规则，立法机关也并未预料到在2014年开始出现的这一波债券违约。</p>\n<h3>2. 框架陈旧带来的实务难题</h3>\n<p data-pid=\"tU76pOWT\">债券违约引发了大量案件，不断对2020年之前的框架进行检验，从而发现了比较突出的三个法律问题。 </p>\n<p data-pid=\"YFoyUcaK\">第一个问题是谁应当在债券违约后的程序中起主导作用。这些程序包括持有人会议程序与针对发行人的司法程序。</p>\n<p data-pid=\"yJvO276b\">在交易所市场中，出现违约之时，作为债券受托管理人的承销商并不愿意召开债券持有人会议，因为它本身可能成为债券持有人怨气发泄的目标。着急的债券持有人往往指责承销商在债券说明书中存在虚假陈述，以及未预料到发行人的违约。这一利益冲突有时会使得债券受托管理人的架构瘫痪，出现无人负责的局面。即使债券受托管理人希望启动诉讼程序要求发行人承担义务，民事诉讼规则也未明确允许它以自己的名义提起民事诉讼。</p>\n<p data-pid=\"LOSjzSRn\">在银行间市场中，由于并未设置债券受托管理人，因此债券持有人必须独自提起诉讼。但根据我国的民事诉讼规则<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn18\" class=\"internal\">[18]</a>，在未明确约定管辖法院的情况下，“接收货币一方所在地为合同履行地”，成为管辖连接点，于是债券持有人往往在其住所地法院提起诉讼，导致同一笔债券违约的案件散布在我国各地，据测算到2019年底全国法院已受理400多起案件。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn19\" class=\"internal\">[19]</a>这些诉讼不仅增加了纠纷解决成本，而且不同法院针对同一批债券可能作出不同判决。可以说，缺乏一个主导者来代表债券持有人统一行事，造成了债券违约处置的拖延。比如，根据相关统计数据，截至2019年8月底，在300余笔违约债券中，只有53笔被成功处置。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn20\" class=\"internal\">[20]</a></p>\n<p data-pid=\"R84clGcp\">第二个问题与债券说明书约定的违约事件和加速到期相关。我国债券发行文件中约定的违约事件通常仅限于延迟支付本息和发行人破产。实务中，发行人延迟付款时，由于轮候查封制度的存在，较为心急的单个债券持有人为了抢首轮查封以保护其利益，往往立刻启动诉讼程序并申请冻结发行人资产。这样一来，反而会迫使发行人进入破产程序，降低了债券重组的可能性，使得发行人难以摆脱困境。除此之外，即便没有出现违约事件，有些恐慌的投资者还可能以其他理由主张债券加速到期，比如援引合同法“预期违约”制度或者主张债券说明书“存在虚假陈述”，甚至对一些永续债券也要求加速到期。 </p>\n<p data-pid=\"EhbGcXt3\">第三个问题是债券持有人如何通过协商实现集体行动。《2013年会议规程》在司法程序中也受到质疑，比如有的持有人会主张这些会议规程仅仅是合同条款而非法律法规。即便持有人会议通过一项决议，不满意的债券持有人也往往以会议规程系格式条款、未尽到提示说明义务、不公平等理由主张决议无效。除此之外，对于持有人会议召开的法定人数和决议通过条件，也存在不同观点。 </p>\n<h3>3. 2020新框架</h3>\n<p data-pid=\"OUlXZG5I\">上述问题暴露出债券违约处置机制的内在缺陷，也引发了市场的呼声。为此，相应的法律文件陆续出台，逐步形成2020年新框架。对于交易所债券市场，《中华人民共和国证券法》于2019年进行了修订，并于2020年3月1日生效。该法律从更高层级上明确了债券受托管理人的地位，其中第92条规定：公开发行公司债券的，发行人应当为债券持有人聘请债券受托管理人，受托管理人应当由本次发行的承销机构或者其他经国务院证券监督管理机构认可的机构担任。债券发行人未能按期兑付债券本息的，债券受托管理人可以接受全部或者部分债券持有人的委托，以自己名义代表债券持有人提起、参加民事诉讼或者清算程序。</p>\n<p data-pid=\"svUdx5M3\">对于银行间市场的债券，NAMFII于2019年12月发布了《银行间债券市场非金融企业债务融资工具受托管理人业务指引（试行）》（以下简称“《管理人业务指引》”），并修改了会议规程（以下简称“《2019年会议规程》”），两项文件的生效日期均为2020年7月1日<i><b><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn21\" class=\"internal\">[21]</a></b></i>。 </p>\n<p data-pid=\"zNObSHT8\">《管理人业务指引》首次将债券受托管理人引入了银行间市场，可以被指定为债券受托管理人的机构包括“（一）已取得债务融资工具主承销商业务资质的金融机构；（二）持有金融许可证的金融资产管理公司；（三）已取得债务融资工具承销商业务资质的信托公司；（四）具备债务融资工具业务经验，最近1 年内为债务融资工具注册发行出具过法律意见书的律师事务所”，前提是它们已在NAFMII中备案。发行人必须通过签署受托管理协议来指定债券受托管理人。在获得全部或部分债券持有人的授权后，债券受托管理人可以积极参与违约相关事务。 </p>\n<p data-pid=\"IPFOuywD\">《2019年会议规程》也带来了一些重大变化。首先，违约债券的承销商是会议的召集人，而债券受托管理人必须出席该会议。其次，决议对参会及未参会的债券持有人产生相同的影响和约束力，无论他们是否出席会议以及如何投票。第三，会议的法定人数和决议条件已修改。除法律法规另有规定或发行文件另有约定外，出席持有人会议的债务融资工具持有人所持有的表决权数额应超过本期债务融资工具总表决权数额的50%，会议方可生效。普通的决议应当由持有本期债务融资工具表决权超过总表决权数额50%的持有人同意后方可生效；针对特别议案的决议，则需要90%。特别议案的是导致债券等关键条款（如本金、利息、付款时间表、增信安排等）发生重大变化的议案。</p>\n<p data-pid=\"e1_93UFh\">与此同时，2019年12月，最高人民法院在与中国人民银行，中国证监会举行会议专门讨论债券违约问题，随后发布了会议纪要草案以征询公众意见。2020年7月15日，最高法院正式发布了《全国法院审理债券纠纷案件座谈会纪要》（以下简称“债券纪要”），总共34条，涉及债券违约的方方面面。比如，《债券纪要》解决了管辖权问题，明确普通债券违约由发行人住所地人民法院管辖。该纪要也明确承认债券受托管理人的作用，提出债券持有人会议通过的合法决议对所有债券持有人具有约束力，并规定了关于加速到期的一些裁判原则。</p>\n<p data-pid=\"BS-Rf7Ee\">在笔者看来，通过建立2020年新框架，债券违约的处置机制得到了全面升级，尤其是在三个方面：债券发行架构，违约事件与加速到期，集体行动机制。这较大地弥补了目前市场的缺陷，为投资者注入了信心。在建立新框架的过程中，中国或多或少地借鉴了国际资本市场相关法律。在当前国际资本市场上，最盛行的准据法为普通法。许多国家的债券通常根据英国法律或纽约州法律发行。准据法与发行的交易所所在地关系并不大，大量选择英国法的欧元债券在卢森堡发行上市<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn22\" class=\"internal\">[22]</a>。有学者研究了2006-2013年期间欧元区的主权债券发行，发现在金融危机期间，选择英国法或纽约法而不是发行人的国内法，有助于降低主权债务融资成本<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn23\" class=\"internal\">[23]</a>。为此，笔者认为，新框架建立之后，我们仍应进一步研究与对比国外发达市场债券违约处置的普通法规则，以提高中国市场规则的兼容性。</p>\n<h2>二、 债券受托人的思考</h2>\n<p data-pid=\"yLdIn40V\">债券发行涉及不同的中介机构，如经理行、承销商、受托管理人、财务代理人等，由此形成不同架构。对于普通法国家，债券受托管理人（bond trustee）是其债券市场的主要特征。比如，根据英国法律，发行人通常通过信托契据（Trust Deed）指定债券受托管理人的权利、义务，明确债券受托管理人服务于债券持有人的利益。</p>\n<p data-pid=\"XM6RapEO\">对于大陆法国家，由于信托制度不被承认或者不够发达，则转而采用财务代理人（fiscal agent）架构。财务代理人通过签定代理协议担任发行人的代理人，负责向债券持有人支付本息。与债券受托管理人不同，财务代理人不代表债券持有人利益，因此在这个架构之下，债券持有人自己必须对违约的发行人采取法律行动。 </p>\n<p data-pid=\"bk5huzUb\">相比之下，债券受托管理人架构因更加灵活而受到欢迎。在这种信托结构中，受托人管理由债券付款本息及其他收益组成的信托财产，债券持有人则作为受益人，从实务操作角度而言较为便利：对于发行人而言，与代表众多债券持有人的受托管理人打交道将降低交易成本。受托管理人将行使其酌情处置权以应对诸如违约事件或者债券中其他可能触发违约的复杂条款，而不是动辄宣布违约并主张加速到期。如果债券需要担保，受托管理人可以直接将担保权登记于其名下，最大程度地减少了分别登记至债券持有人的麻烦。在发行人违约的情况下，受托管理人将在违约处置法律程序中起主导作用，而债券持有人通常无需采取任何行动，除非受托管理人应当作为而不作为。有学者曾评价：“如果没有受托人，则诉讼权属于债券持有人，债券持有人需要承担多重诉讼的风险，并且不听话的债券持有人会采取不适当的行动。”<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn24\" class=\"internal\">[24]</a></p>\n<p data-pid=\"FVQIFWML\">作为合同安排，受托管理人的权力由《信托契据》明确。例如，《欧洲中期债券信托契据》（Euro Medium Term Note(EMTN) Trust Deed）规定，受托管理人可以“在其酌情决定权下，不另行通知，采取它认为适合的针对发行人的程序和/或其他行动，以督促发行人履行在本债券及契据项下的义务”。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn25\" class=\"internal\">[25]</a> 该《信托契据》同时明确，该权力仅限于受托管理人行使，债券持有人无权行使。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn26\" class=\"internal\">[26]</a> 受托管理人在行使权力时具有“绝对自由裁量权”（absolute discretion），但受到“谨慎义务”（duty of care）的约束，这要求受托人“表现出谨慎和尽职”以避免“任何过失，违约，违反责任或违反信任”。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn27\" class=\"internal\">[27]</a>同时，为了制衡受托管理人此种权力，债券持有人可以通过“特别议案决议”（Extraordinary Resolution），迫使受托管理人对发行人采取法律程序，或罢免受托管理人。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn28\" class=\"internal\">[28]</a> </p>\n<p data-pid=\"ayr5L8YI\">债券受托管理人架构在英国债券市场占主导地位，统计数据显示，2016年和2017年分别有88％和90％的英国债券发行人使用这种结构。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn29\" class=\"internal\">[29]</a>在其他普通法国家中，这种结构得到了广泛使用，甚至受到立法的强制要求。比如在美国，根据1939年《信托契据法》（Trust Indenture Act）的要求，在所有SEC注册的债券中，必须设置受托管理人。该法律不仅为受托管理人的角色和职责设定了标准，而且还规定了其报酬和补偿机制。除了普通法国家外，一些欧洲国家甚至伊拉克在主权债务发行中也采用了普通法为准据法，相应也设置了债券受托管理人结构。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn30\" class=\"internal\">[30]</a></p>\n<h2>(一) 中国债券受托管理人VS普通法债券受托管理人 </h2>\n<p data-pid=\"B8oO8phr\">债券受托管理人架构提供了一种处理债券违约的便捷方法，受托管理人在违约事务中起主导作用，避免债券持有人直接被拖入一场漫长复杂的司法程序中。我国借鉴了这一制度，在2020年新框架中正式将债券受托管理人的概念纳入证券法。但我国债券受托管理人，与普通法国家的债券受托管理人存在许多不同之处。因此，需要进一步辨析。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn31\" class=\"internal\">[31]</a> </p>\n<p data-pid=\"QqA0upgf\">首先，我国债券受托管理人确实可以代表债券持有人行事。但是，我国债券受托管理人是否属于《中华人民共和国信托法》（以下简称“《信托法》”）所规定的受托人，其实争议不少。该法第二条规定：本法所称信托，是指委托人基于对受托人的信任，将其财产权委托给受托人，由受托人按委托人的意愿以自己的名义，为受益人的利益或者特定目的，进行管理或者处分的行为。</p>\n<p data-pid=\"nuDp1DtP\">对于中国的信托法，著名的英国金融法学者与律师Philip Wood曾评价到：“中国于2001年颁布了一部信托法，这可能是过去25年世界法律中最重要的法律事件之一”。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn32\" class=\"internal\">[32]</a> 在普通法概念下，信托涉及到信托财产的转移，由受托人持有资产。但我国信托法在立法时有意淡化了财产所有权转移的特征，因为担心普通百姓会担心失去对财产的控制权，从而抵制立法。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn33\" class=\"internal\">[33]</a> 于是立法使用了“委托给”这样模糊的词语而不是“转移给”，容易在实务中造成混乱。市场上涉及有形资产作为信托财产时，更是自行创设出各种“财产收益权”以回避所有权转移的问题以及因此引发的税赋。我国债券在存托清算系统中是直接登记在债券持有人名下的，债券受托管理人并未持有信托财产，如果直接界定为信托法下的管理人会受到较大争议。 </p>\n<p data-pid=\"om6fbiEc\">其次，我国《信托法》<i>第</i>11条明确规定的信托无效情形之一是“专以诉讼或者讨债为目的设立信托”。如果严格解释这一法律条文，则债券受托管理人不应被视为《信托法》规定的受托人，因为该债券受托管理人的主要义务在于代表债券持有人提起司法程序要求发行人或者担保人偿还债券本息，即“诉讼”加“讨债”。</p>\n<p data-pid=\"tX3AnRMz\">第三，在英国债券受托管理人架构下，并不允许债券持有人直接对发行人提起诉讼，仅有受托管理人具有这种​​权力。在<i>Elektrim SA v Vivendi Holdings 1 Corp [2008] EWCA Civ 1178</i>中，债券持有人Vivendi在佛罗里达州提起一个法律诉讼中，主张发行人Elektrim公司存在欺诈行为，并声称受托管理人Law Debenture Trust Corporation Plc违反了其信托义务。发行人则起诉到英国高等法院（England and Wales High Court）申请要求反诉讼禁令，禁止Vivendi提起该法律诉讼。英国高等法院同意了发行人的申请并颁布了反诉讼禁令，Elektrim公司不服提起上诉，但被英国上诉法院（England and Wales Court of Appeal）驳回。在裁判文书中，Collins法官写到：</p>\n<p data-pid=\"PhRq5QeK\">“受托管理人制度的目的是确保所有债券持有人都通过受托管理人行事。这确保了债券持有人之间没有竞争，在投资回报中享有平等的份额。在全部债券持有人受到损失时，如果允许单个债券持有人自主提出索赔，则会引发受托管理人和单个债券持有人的多重诉讼或重复诉讼”。“信托契据第10.2条中的“强制履行”（enforce performance of）债券一词并不限于主张特定履行（specific performance）,必须至少扩大到对不偿还债券本息所造成损失的各类索赔。该用语应包括任何旨在维护债券持有人权利的主张（笔者注：即不仅是合同诉讼，还包括以欺诈为由的侵权诉讼）。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn34\" class=\"internal\">[34]</a></p>\n<p data-pid=\"cJ4ervBJ\">可以说，通过受托管理人主张权利是英国法项下该架构的本质特征。但我国债券受托管理人并没有相应的独立自主权，发生违约时，它必须先获得所有或部分债券持有人的授权，然后再采取任何法律行动。从这个意思上来说，更象是代理律师。</p>\n<p data-pid=\"3tDh6rTW\">第四，债券受托管理人的任职资格和利益冲突规定有所不同。英国债券市场中，尽管对债券受托管理人没有法定的门槛，但通常的做法是，由获得授权的信托公司来充当受托管理人。此类提供公司信托服务的信托公司必须在英国或欧盟成立，并在英国设有营业地，最低股本为25万英镑，其中超过10万英镑必须以现金支付。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn35\" class=\"internal\">[35]</a>在美国，债券的受托管理人必须是获得美国SEC许可的机构，且资本和盈余不少于150,000美元。更重要的是，为了避免利益冲突，受托管理人不能是债券的承销商，也不得直接或间接地由承销商控制。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn36\" class=\"internal\">[36]</a></p>\n<p data-pid=\"g_n06q5d\">在我国2020年新框架中，并没有提到债券受托管理人的资本门槛。但这并不重要，从实务角度看，即使适用英国或美国的同等资本要求，这些候选机构（主承销商、金融资产管理公司、信托公司、律师事务所）很轻松就能越过这个门槛。但我国2020年新框架似乎忽略了利益冲突，直接允许债券承销商成为债券受托管理人的第一层次候选人，在笔者看来这并不妥当。在我国债券市场中，债券发行中的其他功能（如存托和清算）由中央结算公司或上海清算所等法定存管机构执行，债券承销商主要职责之一是准备债券说明书。许多承销商是大型银行或证券公司。当违约发生时，债券投资者更愿意从这些财大气粗的中介机构中挽回损失，而并不寄过多希望于那些已经陷入困境中的发行人。国际市场亦是如此，持有人往往主张债券说明书中存在虚假陈述甚至欺诈，将承销商诉至法院。例如，在美国1976年的Escott v. BarChris Construction Corporation案中，地区法官Mclean就明确了这种因果关系：</p>\n<p data-pid=\"pitcshFa\">“承销商说，债券说明书是发行人公司的说明书，而不是承销商的说明书。毫无疑问，这是他们习惯地对待它的方式。但是美国证券法没有承认这种区别。如果债券说明书虚假，承销商与发行人同样要负责，因为潜在的投资者在确定是否购买证券时信赖了承销商的声誉。” <a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn37\" class=\"internal\">[37]</a></p>\n<p data-pid=\"Y-WbpgvN\">我国的投资者已经依葫芦画瓢，比如投资者已经将无法偿还的五洋建设债券的承销商德邦证券有限公司于2019年5月诉至浙江杭州中级法院，成为追究债券承销商责任的首例案件。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn38\" class=\"internal\">[38]</a>因此，如果忽视这种利益冲突，笔者认为可能会使承销商无法发挥其作为债券受托管理人的作用。</p>\n<h2>(二) 改进我国债券受托管理人的建议 </h2>\n<p data-pid=\"I_9OSdhF\">债券受托管理人架构作为普通法债券市场的基石，目的在于代表债券持有人的不同利益，以便实现快速集体行动的目标。但我国债券受托管理人的设计能否实现这一目的还有待观察。由于种种原因，债券受托管理人更像是诉讼代理人，而不像《信托法》中的受托人。前者需要债券持有人的授权才能采取行动，而后者则可以依照信托文件自主享有酌处权。律师事务所作为债券受托管理人的候选机构之一，从另一方面可以印证这一观点。我国引入债券受托管理人，比以往有较大进步，因为管理人要起到主导作用，提升了债券违约后的响应能力，较好地解决了一些程序性问题，但是不足之处在于当债券受托管理人试图处理违约时，缺乏酌处权可能会阻止它采取明智的行动，而利益冲突可能会阻止它迅速采取行动。此外，受托管理人还可能不得不与那些急于查封资产的“独狼”型债券持有人竞争。 </p>\n<p data-pid=\"_181Tuxy\">笔者认为，债券市场瞬息万变，法律亦需不断发展升级，这样才能增强投资者的信心。我国已迈出了第一步，放弃了一种不太适应的财务代理人结构，应该考虑更进一步，对《信托法》进行修订，以适应债券市场的需求。毕竟，《信托法》颁布之时，还不存在债券违约。比如对于信托财产的界定，随着信托的观念慢慢被社会接收，以前的担心已经显得过时，不如及时明确概念。法律也是不断变化以适应市场的，即使在普通法管辖区，也有学者注意到债券信托也与正常的信托有所区别，因为信托财产是间接的（circular）。在新西兰，立法者甚至试图用“监督人”（supervisor）代替“受托人”(trustee)一词，以便将债券受托管理人与其他受托人区分开。<a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftn39\" class=\"internal\">[39]</a> 当然，名称是什么并不是最重要的，最重要的是债券受托管理人的权力和职责。因此我们可以加以改进兼容国际标准，以使得我们的市场对外国投资者更加有吸引力。</p>\n<p data-pid=\"EnOoFMsS\">（未完待续）<br></p>\n<hr>\n<p data-pid=\"8fwlKqce\"><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref1\" class=\"internal\">[1]</a> Stephen G Cecchetti and Kermit L Schoenholtz, Money, Banking, and Financial Markets (Fifth Edition, McGraw-Hill Education 2017) ，第134页。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref2\" class=\"internal\">[2]</a> Grace Xing Hu, Jun Pan and Jiang Wang, ‘Chinese Capital Market: An Empirical Overview’ [2017] SSRN Electronic Journal &lt;<a href=\"https://link.zhihu.com/?target=https%3A//www.ssrn.com/abstract%3D3095056\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">ssrn.com/abstract=30950</span><span class=\"invisible\">56</span><span class=\"ellipsis\"></span></a>&gt; 访问时间 2020年6月10日。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref3\" class=\"internal\">[3]</a> Chi Zhang, ‘The Segmented Regulatory System of the Bond Markets in China: Current Situation, Causes and Reform’ (2020年) 15 Capital Markets Law Journal 175。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref4\" class=\"internal\">[4]</a> 中国人民银行公告〔2016〕第3号。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref5\" class=\"internal\">[5]</a> James Kynge, ‘Default Risk Casts Shadow over Foreign Demand for China Bonds’ Financial Times (2018年6月27日) &lt;<a href=\"https://link.zhihu.com/?target=https%3A//www.ft.com/content/3ecb0f98-7a12-11e8-8e67-1e1a0846c475\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">ft.com/content/3ecb0f98</span><span class=\"invisible\">-7a12-11e8-8e67-1e1a0846c475</span><span class=\"ellipsis\"></span></a>&gt; 访问时间2020年6月6日。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref6\" class=\"internal\">[6]</a> 同上注。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref7\" class=\"internal\">[7]</a> Daniela Gabor, ‘China Should Not Remake Its Bond Markets in US Image’ <i>Financial Times</i> (2019年6月13日) &lt;<a href=\"https://link.zhihu.com/?target=https%3A//www.ft.com/content/892aeeb8-8d31-11e9-b8cb-26a9caa9d67b\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">ft.com/content/892aeeb8</span><span class=\"invisible\">-8d31-11e9-b8cb-26a9caa9d67b</span><span class=\"ellipsis\"></span></a>&gt; 访问时间 2020年6月6日。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref8\" class=\"internal\">[8]</a> Jamil Anderlini, ‘China Suffers First Corporate Bond Default’ Financial Times (7 March 2014) &lt;<a href=\"https://link.zhihu.com/?target=https%3A//www.ft.com/content/d4ccd956-a5cb-11e3-9818-00144feab7de\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">ft.com/content/d4ccd956</span><span class=\"invisible\">-a5cb-11e3-9818-00144feab7de</span><span class=\"ellipsis\"></span></a>&gt; 访问时间 2020年6月6日。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref9\" class=\"internal\">[9]</a> Edward White, ‘Chinese Corporate Bond Defaults Hit Record High, Fitch Says’ Financial Times (2019年1月21日) &lt;<a href=\"https://link.zhihu.com/?target=https%3A//www.ft.com/content/0bf4a6e8-1d31-11e9-b126-46fc3ad87c65\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">ft.com/content/0bf4a6e8</span><span class=\"invisible\">-1d31-11e9-b126-46fc3ad87c65</span><span class=\"ellipsis\"></span></a>&gt; 访问时间 2020年6月6日。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref10\" class=\"internal\">[10]</a> Don Weinland, ‘China Local Governments Sound Alarm on Debt Obligations’ Financial Times (2019年9月5日) &lt;<a href=\"https://link.zhihu.com/?target=https%3A//www.ft.com/content/5093658a-ced1-11e9-b018-ca4456540ea6\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">ft.com/content/5093658a</span><span class=\"invisible\">-ced1-11e9-b018-ca4456540ea6</span><span class=\"ellipsis\"></span></a>&gt; 访问时间 2020年6月6日。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref11\" class=\"internal\">[11]</a> Umesh Desai, ‘Record Bond Defaults as China Lifts Credit Allocation’ Asia Times (2020年1月7日) &lt;<a href=\"https://link.zhihu.com/?target=https%3A//asiatimes.com/2020\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">asiatimes.com/2020</span><span class=\"invisible\"></span></a>年/01/record-bond-defaults-as-china-lifts-credit-allocation/&gt; 访问时间 2020年6月9日。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref12\" class=\"internal\">[12]</a> McCabe Adam, ‘Why China’s Bond Defaults Are Actually a Good Thing’ Financial Times (2018年12月19日) &lt;<a href=\"https://link.zhihu.com/?target=https%3A//www.ft.com/content/da80aa2a-03a5-11e9-9d01-cd4d49afbbe3\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">ft.com/content/da80aa2a</span><span class=\"invisible\">-03a5-11e9-9d01-cd4d49afbbe3</span><span class=\"ellipsis\"></span></a>&gt; 访问时间 2020年6月6日。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref13\" class=\"internal\">[13]</a> Hudson Lockett and Yizhen Jia, ‘China’s Bond Market Is Opening — but Are the Rating Agencies Ready?’ Financial Times (2019年4月4日) &lt;<a href=\"https://link.zhihu.com/?target=https%3A//www.ft.com/content/e6ea3c7c-55f8-11e9-91f9-b6515a54c5b1\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">ft.com/content/e6ea3c7c</span><span class=\"invisible\">-55f8-11e9-91f9-b6515a54c5b1</span><span class=\"ellipsis\"></span></a>&gt; 访问时间 2020年6月6日。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref14\" class=\"internal\">[14]</a> Sun Yu, ‘China Bond Investors Battle to Claim Cash after Defaults’ Financial Times (2020年1月9日) &lt;<a href=\"https://link.zhihu.com/?target=https%3A//www.ft.com/content/09dda1e4-31e8-11ea-9703-eea0cae3f0de\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">ft.com/content/09dda1e4</span><span class=\"invisible\">-31e8-11ea-9703-eea0cae3f0de</span><span class=\"ellipsis\"></span></a>&gt; 访问时间 2020年6月9日。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref15\" class=\"internal\">[15]</a> 中国证券监督管理委员会令第113号。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref16\" class=\"internal\">[16]</a> 中国人民银行令（〔2008〕第1号）。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref17\" class=\"internal\">[17]</a> 中国银行间市场交易商协会公告[2013]12号。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref18\" class=\"internal\">[18]</a> 参见《最高人民法院关于适用〈中华人民共和国民事诉讼法〉的解释》第18条。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref19\" class=\"internal\">[19]</a> Qinqin Peng, ‘In Depth: China Responds to Default Wave With New Legal Frameworks’ Caixin (2019年12月30日) &lt;<a href=\"https://link.zhihu.com/?target=https%3A//www.caixinglobal.com/2019-12-30/in-depth-china-responds-to-default-wave-with-new-legal-frameworks-101499147.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">caixinglobal.com/2019-1</span><span class=\"invisible\">2-30/in-depth-china-responds-to-default-wave-with-new-legal-frameworks-101499147.html</span><span class=\"ellipsis\"></span></a>&gt; 访问时间 2020年6月15日。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref20\" class=\"internal\">[20]</a> 同上<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref21\" class=\"internal\">[21]</a> 中国银行间市场交易商协会公告[2019]25号。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref22\" class=\"internal\">[22]</a> Patrick BG van der Wansem, Lars Jessen and Diego Rivetti, ‘Issuing International Bonds：A Guidance Note’ [2019] MTI Global Practice &lt;<a href=\"https://link.zhihu.com/?target=http%3A//documents1.worldbank.org/curated/en/491301554821864140/pdf/Issuing-International-Bonds-A-Guidance-Note.pdf\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">documents1.worldbank.org</span><span class=\"invisible\">/curated/en/491301554821864140/pdf/Issuing-International-Bonds-A-Guidance-Note.pdf</span><span class=\"ellipsis\"></span></a>&gt;2020年9月28日访问。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref23\" class=\"internal\">[23]</a> <i>Foreign-Law Bonds: Can They Reduce Sovereign Borrowing Costs?</i> (Publications Office 2018) &lt;<a href=\"https://link.zhihu.com/?target=https%3A//data.europa.eu/doi/10.2866/789348\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">data.europa.eu/doi/10.2</span><span class=\"invisible\">866/789348</span><span class=\"ellipsis\"></span></a>&gt; 2020年9月28日访问。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref24\" class=\"internal\">[24]</a> Andrew Haynes, Law Relating to International Banking (Bloomsbury Professional 2018) 128页.<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref25\" class=\"internal\">[25]</a>  ‘EMTN Trust Deed’ (Practical Law) &lt;<a href=\"https://link.zhihu.com/?target=http%3A//uk.practicallaw.thomsonreuters.com/0-201-8282%3Fcomp%3Dpluk%26transitionType%3DDefault%26contextData%3D%28sc.Default%29\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">uk.practicallaw.thomsonreuters.com</span><span class=\"invisible\">/0-201-8282?comp=pluk&amp;transitionType=Default&amp;contextData=(sc.Default)</span><span class=\"ellipsis\"></span></a>&amp;firstPage=true&amp;bhcp=1&amp;OWSessionId=NA&amp;skipAnonymous=true&gt; 访问时间 2020年6月15日, 第10.1条。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref26\" class=\"internal\">[26]</a> 同上注第11.2条。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref27\" class=\"internal\">[27]</a> 同上注第15.1和15.17条。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref28\" class=\"internal\">[28]</a> 同上注第11.1和21.2条。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref29\" class=\"internal\">[29]</a> ICMA-NAFMII Working Group, ‘International Practices of Bond Trustee Arrangements’ &lt;<a href=\"https://link.zhihu.com/?target=https%3A//www.icmagroup.org/assets/documents/About-ICMA/APAC/ICMA-NAFMII-WG-International-Practices-of-Bond-Trustee-Arrangements-031218.pdf\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">icmagroup.org/assets/do</span><span class=\"invisible\">cuments/About-ICMA/APAC/ICMA-NAFMII-WG-International-Practices-of-Bond-Trustee-Arrangements-031218.pdf</span><span class=\"ellipsis\"></span></a>&gt;.<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref30\" class=\"internal\">[30]</a> 同上<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref31\" class=\"internal\">[31]</a> 在中国法律当中，叫管理人的还存在其他概念，比如破产管理人。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref32\" class=\"internal\">[32]</a> Philip Wood ‘Commercial Notions and Equitable Potions’ in Sarah Worthington (ed), Commercial Law and Commercial Practice (Hart 2003).<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref33\" class=\"internal\">[33]</a> 江平口述，陈夏红整理：《沉浮与枯荣：八十自述》，法律出版社2010年9月第1版，415页。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref34\" class=\"internal\">[34]</a><i>Elektrim SA v Vivendi Holdings 1 Corp [2008] EWCA Civ 1178</i>，第91,92段。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref35\" class=\"internal\">[35]</a> Trustee Act 1925 s. 68, Public Trustee Act 1906, The Public Trustee (Custodian Trustee) Rules 1975.<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref36\" class=\"internal\">[36]</a> Trust Indenture Act of 1939, s. 310.<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref37\" class=\"internal\">[37]</a> 283 F. Supp. 643 (S.D.N.Y. 1976).<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref38\" class=\"internal\">[38]</a> 朱琳娜：全国首例公司债券欺诈发行民事赔偿案开庭'，《上海<i>证券报》（2019年5</i>月16日）报道。<a href=\"https://link.zhihu.com/?target=http%3A//stock.cnstock.com/stock/smk_zq/201905/4375881.htm\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://</span><span class=\"visible\">stock.cnstock.com/stock</span><span class=\"invisible\">/smk_zq/201905/4375881.htm</span><span class=\"ellipsis\"></span></a>.访问时间2020年6月20日。<br><br><a href=\"https://zhuanlan.zhihu.com/p/525592382/edit#_ftnref39\" class=\"internal\">[39]</a> Benjamin Liu, ‘The Contractual Nature of Bond Trusts and Security Trusts’ (2017) 8 Journal of Business Law 680-697.<br><br></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/fuwangezy?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">FU Wang</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/525592382?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"「妖镍」事件终局：华尔街失算，摩根大通 1.2 亿美元认亏出局， 谁是「妖镍大战」真正的幕后黑手？","date":"2022-07-05 05:18:48","description":"\n<p data-pid=\"F2rBn2vG\">：</p>\n<p data-pid=\"NF6ff0Tp\">ldhx谢邀。<a class=\"member_mention\" href=\"http://www.zhihu.com/people/c1418655229d76810a29140097813936\" data-hash=\"c1418655229d76810a29140097813936\" data-hovercard=\"p$b$c1418655229d76810a29140097813936\">@看山不是山</a> </p>\n<p data-pid=\"OdbuE6bV\">这个帖子真真假假，照搬了一些外媒的新闻,然后偷偷加上了一些爱国解读（不管是无意还是有意），却没有搞清楚各种交易对手关系，容易误导读者。 </p>\n<p><br></p>\n<p data-pid=\"dc6De8xi\">按这个贴子，整个故事，就是私营企业加大杠杆去赌一把镍，输了就国家汇集四面八方的力量帮他对抗华尔街，让华尔街大鳄铩羽而归，这个故事看上去多么吸引眼球。但你想想看，如果这个私营企业赌赢了，钱会归国家吗？你买的房房贷还不上的时候，国家会帮你还吗？因此并非正规财经媒体的解读，还是多长点心眼。 </p>\n<p data-pid=\"nbE6wzcU\">目前，青山控股集团确实是退出了伦敦金属交易所（LME）的大部分镍空头头寸。持仓规模已经缩减至3万吨左右，远低于事发时的超15万吨的峰值。但是，目前的持有是直接持有，而不是通过摩根大通持有。 </p>\n<p data-pid=\"yUYDxOAy\">这里面就要了解相关交易法律关系，在LME你可以进行场内交易，也可以进行场外交易。 场内交易交易所自然能看到你的持仓空单情况，不会允许你乱开巨量空单。场外交易的透明度就差很多了， 因此很多青山控股巨量空单持仓，是通过摩根大通持有的。现在这事搞大之后， LME开始下决心取消彻底取消场外交易了。 </p>\n<p data-pid=\"PlQF0E0M\">什么叫通过摩根大通持有呢?其实这里面就是摩根大通只是一个中间商。也就是说假定青山控股跟他签订一个合约，约定下个月100元1吨镍卖给他，他跟青山控股签合约之后立马再找另外一个交易对手方ABC公司，也签订一个同样的合约把这个镍再卖给ABC，摩根大通在这当中就赚一点手续费。这种作法的原因是摩根大通并不愿意承担直接与青山控股赌镍价涨跌这样的风险敞口。当然这个模型已经是非常简单化，但原理是差不多的。 </p>\n<p data-pid=\"TFM-kqTV\">大量的衍生品合约都是这么干的，再到后来就出现了中央对手方这种机制。因为即便青山控股违约，ABC公司找的是摩根大通，你摩根大通总归是跑不掉的。ABC公司可能不知道青山控股的存在，因为ABC公司相信和依赖的是摩根大通会履行合约。那摩根大通在当中还能赚一些钱，就是保证金融资。在LME这种法律环境下，与我们的期货交易法律制度设定有不同。青山控股在交易的时候不一定需要实缴保证金，可以做credit trading。 </p>\n<p data-pid=\"HObzlVqE\">青山控股在3月份的时候，开了那么多空单，结果镍的价格涨了250%，保证金不足顶不住了要爆仓了，摩根大通以及背后的一系列银行，算是撑了他一把，谈判同意在一定时期内不要求青山控股追加保证金（margin call）。 </p>\n<p data-pid=\"b_7ZmJwE\">摩根大通撑你青山控股，但摩根大通的另外一个交易对手ABC公司，却不见得会放过摩根大通，因此摩根大通总归是要亏的。至于是实打实的结算，还是谈判一个数字了结，这就不得而知了。反正确实是亏了，财报显示1.2亿美元的损失，这样摩根大通就可以从这次场外交易中脱身而出。当然摩根大通的追责与反思才刚刚开始。至于他跟青山控股如何结算，新闻没有报道，等着去看青山控股的财报。在3月份那种剧烈波动的行情下，青山控股的盯市损失，2天就达到了100亿美元，后来还好镍价下来不少。 </p>\n<p data-pid=\"aD8vtOBA\">因此，在某种意义上，摩根大通是青山的友军，新闻报道说是他们是多年的老朋友。在2019年，摩根大通帮青山进行期货交易，并从中赚得了1亿美元的利润，可以说是大赚一票。</p>\n<p data-pid=\"OnfvW7Jj\">至于做多的另一方是谁呢，很多读者一定要打破砂锅问到底，据bloomberg的披露，是大众、嘉能可，以及一些基金，比如起诉LME的这几家基金。这些公司是真正的对手方，而不是法律合约上的对手方。</p>\n<p data-pid=\"kTQsGQqm\">有兴趣的看具体报道如下：</p>\n<h2>The Longs: VW, Glencore, Hedge Funds</h2>\n<p data-pid=\"gwzhisdd\">While Xiang stands out as the big short, there’s no single trader or investor on the other end that gets the credit (or blame) for driving prices higher. But several market participants held sizable long positions that contributed to the rally.</p>\n<p data-pid=\"dgGXk-uh\"><b>Volkswagen AG </b>has one of the largest long positions in the market, at the equivalent of over 100,000 tons, according to a person familiar with the matter. The position is spread over nine years of forward contracts as a hedge against raw-material costs — nickel is a key ingredient in electric-vehicle batteries.</p>\n<p data-pid=\"sLJdKg3L\">Trader and miner <b>Glencore </b>Plc is another large long-position holder and has at times controlled more than half of the available inventories in LME warehouses. The company’s overall position in LME nickel is short —  it uses the exchange to protect against price risk on the metal it ships around the world. But it bought LME stocks to deliver the nickel from the exchange warehouses to its customers after a surge in freight costs made shipping metal from Asia to Europe and the U.S. much more expensive, according to a person familiar with the matter.</p>\n<p data-pid=\"dguU8DaL\">Then there are the hedge funds, drawn to nickel as a bet on the EV revolution and more recently on worries about interruptions to Russian supplies. Collectively, investment funds lifted their bullish bets on nickel to the highest on record on Feb. 18, the week before Russia’s invasion of Ukraine. Their net position was equivalent to about 250,000 tons of nickel, although most of the increase came before this year.</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/fuwangezy?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">FU Wang</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/541434384/answer/2558738508?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">10 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/534340650?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">美股银行龙头上修业绩指引，股价暴涨逾 7%，上涨的原因是什么？该公司未来发展前景如何？</a><br><a href=\"http://www.zhihu.com/question/509947401?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">华尔街传奇投资者说「黄金将大涨 20% 突破 2160 美元，美股恐暴跌近 20%」，原因是什么？</a><br>\n","link":"http://www.zhihu.com/question/541434384/answer/2558738508?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"我开发了时间管理工具 Polytime，期待用它和世界建立连接","date":"2022-07-05 03:30:00","description":"究其根本，所谓时间管理不过是为了能把更多时间留给真正重要的人和事。<a href=\"https://sspai.com/post/74034\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74034"},{"title":"WBGvsTES复盘：BP背后的策略变化，为何优势总被翻盘？","date":"2022-07-05 03:26:00","description":"\n<p data-pid=\"3_dXc_WP\">我看完比赛第一感想是：WBG和TES这俩队，上辈子一定是亲兄弟吧。</p>\n<p data-pid=\"-WhOX__K\">在LPL里，战术思路类似的队伍有，但水平往往有差距。水平近似的队伍有，但对版本则各有理解。就算开局思路一致，中后期也会在运营思路上发生分歧。</p>\n<p data-pid=\"Zt0B3eYQ\">但WBG和TES不一样，这两队的比赛进程太相似了。</p>\n<p data-pid=\"0x_IKalz\">前期中野都想做事，都选择一样的目标，SofM和Tian总是一起出现在地图的各个角落，就比谁的中野更快；中期都没法抓对面视野漏洞，也都没法在兵线运营上压制对方，优势方总会被劣势方拖住；后期一定有人开始搞，而且都是前期优势的队伍开搞，送给对手一场大翻盘。</p>\n<p data-pid=\"uXRwEhY_\">两边好像在和镜子里的自己做搏斗，赢都是一样的赢，输都是一样的输。所以如果一局一局来分析，很容易变成关键词替换。第一局写“SofM开搞了，TES翻盘了”，第二局搜索替换一下就是“JackeyLove开搞了，WBG翻盘了”，第三局就是“TheShy开搞了，TES翻盘了”。你看，多么无趣。</p>\n<p data-pid=\"a_v-yT37\">因此，我将转而从认知角度入手，来复盘一下BP和局内表现。</p>\n<hr>\n<h2>一、BP博弈的背后，是自我认知的升华</h2>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>1、第一局的BP</h3>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-8919fddf569b9282adc3a06907618897_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2836\" data-rawheight=\"1582\" class=\"origin_image zh-lightbox-thumb\" width=\"2836\" data-original=\"https://pic4.zhimg.com/v2-8919fddf569b9282adc3a06907618897_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"96Oefw2E\">一上来，WBG一轮ban塞拉斯、赛娜、武器，TES一轮ban猴子、泽丽、格温。</p>\n<p data-pid=\"iAPlqgxu\">赛娜是TES夏季赛被ban最多的英雄，达到了71%的总被ban率，赛娜塔姆组合能完美发挥JackeyLove的压制能力，同时规避他太过激进/太省技能的弊端。而格温则是WBG被ban最多的英雄，有74%的总被ban率，这英雄很契合TheShy对线压制+打伤害的风格，并且W技能也能提升TheShy的生存率，因为他也挺激进的。</p>\n<p data-pid=\"vY2H0riB\">塞拉斯一是针对左手，二是WBG希望前三手出冰女/卡牌。武器这版本定位是应对青钢影和格温，以WBG英雄池来看，蓝3手ban武器大概率是威胁TES对ban格温，给到自己佛耶戈。TES红色方常规性地承担掉猴子和泽丽，并不打算来解op英雄。这里TES的考虑可能是，两队实力接近，开op去解反而冒险，不如用常规内英雄来互殴。</p>\n<p data-pid=\"FKL0bU6R\">WBG拿下佛耶戈，TES对出烈娜塔+盲僧，烈娜塔一出，下路大概率配厄斐琉斯或滑板鞋，希望下路给到对线压力，这里也有拆WBG英雄池的意图，ON近期也有不少烈娜塔使用。WBG反手立刻出招，天使先选，确定上单大核；再抢冰女，揭开塞拉斯的伏笔，要和TES打前期节奏。</p>\n<p data-pid=\"VjD_lADG\">到这，WBG想在前期起节奏的意图很明显，双方接下来就是围绕这一点进行攻防。</p>\n<p data-pid=\"L05AfK3H\">TES先观望一下，拿个猪妹，猪妹配合打野很好杀天使，打野不来猪妹也能抗压发育。随后二轮ban掉EZ和洛，EZ没了以后，版本最好的AD英雄只剩滑板鞋和厄斐琉斯。洛则是对ON的封锁，ON的英雄池前三就是泰坦、烈娜塔、洛。在自己第四手大概率选厄斐琉斯补伤害的情况下，TES意图非常明显：逼WBG选滑板鞋+泰坦。</p>\n<p data-pid=\"2tUbXeCt\">WBG则非常专一，针对中路支援英雄，ban掉瑞兹、加里奥，确保自己的冰女一定能起节奏。</p>\n<p data-pid=\"8_suOSMk\">双方这里的分歧就是，TES认为自己中野能拖住，所以下路要保障后期，现有阵容后期不好处理手长的EZ，可以给滑板鞋让WBG后期缺乏AD支点；WBG认为自己中野能起节奏，所以下路可以选前期英雄，也无所谓TES下路选大核，提速不给厄斐琉斯发力就好。</p>\n<p data-pid=\"XQQRNZDL\">二轮大家心照不宣地互选完下路，TES第五手掏出岩雀，这是他们认定自己可以打中野对抗的底牌，岩雀的支援很快，6级后可以领先冰女节奏。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-11d36c905ae14f67b839ff3e35a64f31_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1740\" data-rawheight=\"968\" class=\"origin_image zh-lightbox-thumb\" width=\"1740\" data-original=\"https://pic2.zhimg.com/v2-11d36c905ae14f67b839ff3e35a64f31_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"2ahK4YtK\">这把的主基调是中野对抗，双方边路都有强力自保手段免于被越塔，围绕线上很难起节奏，野区和大小龙坑会是主要战场。丽桑卓主打控制稳定，岩雀主打支援更快，就看双方中单的兵线处理，双方打野的线野协同。</p>\n<p data-pid=\"xUMCRZdq\">前期和中期都是WBG更强，冰女+佛耶戈双收割打小规模团太强了，还有天使R+滑板鞋R两个强力反手保人技能。TES唯一稳定先手是猪妹R，很容易被WBG规避，厄斐琉斯的曲线也很靠后。这把WBG围绕下路会更容易起势，尤其是打4v4的小龙团，TES很难开出完美烈娜塔R，WBG大招combo就好放太多了。</p>\n<p data-pid=\"mvwvhauw\">但到了后期，WBG会极度依赖天使的个人发挥，TES上野前排成型后能吃掉WBG第一波先手，厄斐琉斯在烈娜塔的保护下输出环境很安全，TES操作会更容易一些。TES中期需要利用岩雀R给WBG边线威胁或者抓单，拼命拖厄斐琉斯三件套，一旦前排猪妹+后排厄斐琉斯同时成型，就会是TES巅峰期。</p>\n<p data-pid=\"GhsisCeA\">好，这一局BP就说到这里。透过BP，我们能发现，双方的自我认知都非常明确。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>2、双方的自我认知</h3>\n<p data-pid=\"cMt7gSuE\">为什么WBG会主动选节奏中野？为什么TES能在后期取胜？</p>\n<p data-pid=\"Jz35VsXO\">WBG夏季赛是一支非常极端的滚雪球队伍，场均10分钟经济差是联盟第二位，仅次于TT（TT不愧是前期的神）。而且WBG的视野数据都很好，分均做眼、分均真眼、分均排眼都是联盟前三，优势-雪球-视野压制，是WBG基本赢游戏的方式。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-1ba0523673bce2767b95f5c4a2f819a6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"732\" data-rawheight=\"582\" class=\"origin_image zh-lightbox-thumb\" width=\"732\" data-original=\"https://pic3.zhimg.com/v2-1ba0523673bce2767b95f5c4a2f819a6_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"WcJjSxVK\">所以WBG的体系，围绕着中野节奏+下路提速展开。</p>\n<p data-pid=\"CIHv_Ou2\">大家注意，WBG三项视野数据都是前三，但TES更极端，他们分均做眼倒数，但分均真眼和分均排眼都是第一。</p>\n<p data-pid=\"u5C_GyWU\">难道TES现在转性玩运营了吗？</p>\n<p data-pid=\"BGI813q7\">是的，TES这赛季更多打防守反击，他们场均时长联盟第三，一龙率第三，控龙率第一，是一支主打中后期的队伍。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-a3f993a4be6aadb812e61084dcb8cc62_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"548\" data-rawheight=\"576\" class=\"origin_image zh-lightbox-thumb\" width=\"548\" data-original=\"https://pic3.zhimg.com/v2-a3f993a4be6aadb812e61084dcb8cc62_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"34xip9jw\">TES并非主动抛弃曾经擅长的速攻体系，而是这版本打不出来。夏季赛TES顺畅的前期进攻很少（打LNG、JDG的第二局），前期劣势的局很多（打iG的两局，打JDG的Game1＆3，打FPX的第二局），打BLG、打FP的X第三局、打LNG的第一局，则处于前期相持。</p>\n<p data-pid=\"mCcO5X2T\">为啥这版本打不出来？因为耐久度提升了。夏季赛，TES或主动或被动，也在调整打法。比如打JDG第三把，有一次非常脑瘫的4越2；打FPX第二把，野区打小团结果左手阿狸魅惑空掉，这些就属于被动调整。TES的大脑还想激进去打小团，但操作/版本不允许了，所以变相开始积累后期团战经验。</p>\n<p data-pid=\"VMq0z3_s\">所以这一局，TES跟WBG狂拖，拖到自己厄斐琉斯成型，利用自己后期团战的经验，击溃对手。</p>\n<p data-pid=\"vilahbJP\">明确两支队伍的认知以后，看后续的BP就无比清晰了。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>3、第二局和第三局的BP</h3>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-186b3eb9e275d3d1a29d735e5f1fb4e6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2836\" data-rawheight=\"1578\" class=\"origin_image zh-lightbox-thumb\" width=\"2836\" data-original=\"https://pic3.zhimg.com/v2-186b3eb9e275d3d1a29d735e5f1fb4e6_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"p3kAufRc\">TESban烈娜塔（这英雄配滑板鞋、厄斐琉斯都很舒服），ban天使（从上一场感受到了压力），ban泽丽这个选择很有趣，WBG前两手没管猴子泽丽，TES猜测WBG很可能想双开，TES不愿意接受各拿一个的局面，于是自己ban泽丽。现在难题抛给WBG，猴子不ban滔搏就选猴，ban猴TES就抢佛耶戈。</p>\n<p data-pid=\"8hNM6QBL\">卢锡安是本赛季WBG自ban最多的英雄，他们下路没有卢娜体系储备。前两手没管猴子+泽丽，其实有个隐藏的含义：下路降速。因为版本多数都是用大核应对泽丽，比如金克丝或老鼠，极少数才会选滑板鞋/德莱文。在TES出招ban泽丽以后，WBG选择ban滑板鞋，给TES猴子，自己选厄斐琉斯+佛耶戈。</p>\n<p data-pid=\"DeykexTs\">TES这把BP从逻辑上说很完美。下路出EZ，上路选格温，既有poke又有AOE，中后期都能兼顾。对面出洛自己出蕾欧娜，既是counter也是Mark自信英雄。WBG二轮自己ban掉塞拉斯，场上没好打冰女的英雄，TES先出冰女。阵容先手充足，手也不短，前中后期都有伤害。</p>\n<p data-pid=\"flgTU0ij\">TES的BP确实好，但大家看下来应该会发现问题，为啥WBG自己ban掉塞拉斯以后，不主动先选冰女？场上辅助泰坦洛都在，先抢一个洛的性价比并不会非常高。</p>\n<p data-pid=\"ryqWWyHV\">我的判断是，WBG就是想让TES选冰女，自己用乌鸦来应对。他们希望TES步他们第一局的后尘，把阵容基调往前中期去靠，赌TES中期没法突破自己。而自己进行变速，阵容往中后期靠，在TES更擅长的后期靠阵容战胜对方。WBG前三手没选任何提速、打节奏的英雄，就是想拖发育，乌鸦这一手越往后越肉，越让TES的EZ+冰女的双C绝望。</p>\n<p data-pid=\"y95w8-GB\">这一局WBG的认知已经调整了，而TES呢？他们选择了一个更偏前中期节奏的阵容。</p>\n<p data-pid=\"0vs03kVz\">可能有人会觉得，Wayward的格温不是后期核心吗？这里可以单独聊一下，其实TES这队伍，上单从来不会成为后期支点。</p>\n<p data-pid=\"AQ7iLDbm\">这不是黑他，我先表个态，这把最大战犯一定是JackeyLove。我的意思仅仅只是，TES没有上单C的体系。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-d76e6019ae4ea094d77d10834eeea678_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2828\" data-rawheight=\"1580\" class=\"origin_image zh-lightbox-thumb\" width=\"2828\" data-original=\"https://pic1.zhimg.com/v2-d76e6019ae4ea094d77d10834eeea678_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"jThWh-F5\">看一下伤害数据，官方这张图很好，我直接拿过来用。Wayward在分均伤害，伤害占比，伤转三项数据的表现，都是联盟中下游的水准。从英雄上来看，Wayward本赛季6场格温，4场猪妹，3场船长，这个伤害数据匹配猪妹没问题，但匹配格温船长就比较一般了。</p>\n<p data-pid=\"mBOevyjV\">除开Wayward对输出位置的理解和手法差距以外，TES队内也不会给他额外倾斜经济。他的经济占比和伤害占比都是队内第三位，可谓吃多少钱打多少伤害。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-cc43f8af103538986459ef47a49a40fc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1094\" data-rawheight=\"192\" class=\"origin_image zh-lightbox-thumb\" width=\"1094\" data-original=\"https://pic1.zhimg.com/v2-cc43f8af103538986459ef47a49a40fc_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"r0ljU0uo\">我们来对比一下，第一局、第二局双方上单的装备。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-32f0bc25589b5b185ceb3b41d8213e21_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1204\" data-rawheight=\"792\" class=\"origin_image zh-lightbox-thumb\" width=\"1204\" data-original=\"https://pic2.zhimg.com/v2-32f0bc25589b5b185ceb3b41d8213e21_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"QGPIjphZ\">第一局是天使vs猪妹，大后期TheShy装备领先。第二局是格温vs纳尔，依旧是TheShy装备领先。我们用冰女来做标尺，这英雄常规在中后期是让经济的。第一把，冰女装备落后天使半件，第二把，冰女和格温装备持平，我相信大家已经能看出，TES不会给上单让经济了。</p>\n<p data-pid=\"bm56Q8aW\">总结：TES一般承担伤害责任的是中下，队伍经济也更多给中下。他们既不会给Wayward倾斜经济，也通常不会让他自己承担后期输出责任，这是TES整体风格决定的。</p>\n<p data-pid=\"8fJSfFcx\">讲到这大家应该能明白，并非格温不能承担后期核心，而是Wayward从定位上，就不是TES的后期核心。所以就算他选了后期英雄，这把TES依旧要靠前中期决胜。一旦拖到后期，Wayward的装备，以及他的手法，都不足以在后期拯救队伍。</p>\n<p data-pid=\"Hdgvw-Gz\">我们来看第三局。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-112ef6b05e7b64f39853bdd43d0a7ed8_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2836\" data-rawheight=\"1580\" class=\"origin_image zh-lightbox-thumb\" width=\"2836\" data-original=\"https://pic1.zhimg.com/v2-112ef6b05e7b64f39853bdd43d0a7ed8_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"KKT9RdrI\">在第一局输掉以后，WBG醒悟了，在第二局输掉后，TES醒悟了。他们都明白三件事情：</p>\n<ol>\n<li data-pid=\"ep3TP2Ri\">我们这个队，前期优势中期一定有人搞</li>\n<li data-pid=\"JY7GWRuh\">我们前期拿到优势后，中期没办法找到对面的突破口赢得比赛。</li>\n<li data-pid=\"OY7jg24e\">这个bo3，决胜还要看后期团战</li>\n</ol>\n<p data-pid=\"njWN-HNv\">所以这一场TES红色方直接猴子泽丽双开，泽丽开出来的情况下，大概率双方都会选到后期下路。最终结果也一样，双方都拿后期大核对打。WBG在先手选中单的情况下，先出飞机，让TheShy对着猪妹拿奥恩，组一个后期阵地打团体系。TES对着出维克托，一样拖后期。</p>\n<p data-pid=\"8Wja-P08\">到这里，本场BO3的BP变化就说完了。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>4、总结</h3>\n<p data-pid=\"isfmUjHZ\">第三场的BP博弈也是有的，比如TES面对猴子，第三手选璐璐打保排，面对无位移的老鼠，第四手出猪妹来限制。WBG第四手出飞机、第五手出奥恩，因为TES有璐璐克制进场，所以要把进攻距离拉开，搞一些TES反手难以限制的英雄。</p>\n<p data-pid=\"945wOXtj\">但我没有过多去展开，因为站在更高一层来看，双方第三局重点体现了彼此的认知变化。</p>\n<p data-pid=\"5rULulDI\">更快一步的是WBG，他们第二局果断抛弃了自己滚雪球的打法，跟TES玩后期，所以他们第二局赢了。TES第二局选到猴子后，希望尝试前中期节奏，这是他们春季赛的看家本领。但事实证明，在12.11，实力接近的两个队伍，要么互爆节奏（也就都是攻强守弱），要么就相持到大后期，速攻无论是WBG还是TES，都玩不来。</p>\n<p data-pid=\"EM4ORt7x\">不过，第三局双方认知趋同，都拼后期以后，TES这块的基本功还是更胜一筹。第三局最后一波团，双方五五开的局势，TES的团战配合明显比WBG更好。WBG现在就是，一旦双方开始均势相持，WBG自己出事的可能性更高，因为上野辅三个点子王，选手喜欢激进寻求机会的特点，决定了WBG不够稳定。</p>\n<hr>\n<h2>二、局内表现</h2>\n<h3>1、第一局：WBG对Tian的三轮防守</h3>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"06KLghpf\">第一场主要来看WBG如何取得优势，他们前期对Tian的防守非常完美。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-2dc7d26c6c4dae723bf545923750cab9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"410\" data-rawheight=\"410\" class=\"content_image\" width=\"410\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"60TFNUPq\">先看前期布置，WBG下路双人组1级入侵，打出厄斐琉斯闪现以后，顺手在TES的蓝野区做了眼。</p>\n<p data-pid=\"M_L9FTw8\">这个眼能看到蓝+蛤蟆，可以完整盯防盲僧的前期动向，从这里开始，WBG就已经领先TES野区信息了。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-2dcbd7fa995f0a0f8fe4a9a6ade835f7_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"406\" data-rawheight=\"406\" class=\"content_image\" width=\"406\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"GgjsjLds\">在明确知道盲僧路线的情况下，TheShy于2分45在草丛做眼，之前被人反思维2分50抓过以后，TheShy现在的防gank眼给的非常早。</p>\n<p data-pid=\"54UZBGNy\">虽然TES有ping天使可能给眼，但Tian第一波往上刷，且兵线往TES塔下走，这波盲僧一定会来尝试gank。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-fde6ca05653bcc17e31e44ce37555494_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"406\" data-rawheight=\"402\" class=\"content_image\" width=\"406\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"mE_6oQW8\">双方打野都非常清楚彼此的位置，SofM知道盲僧在打石甲虫，Tian知道佛耶戈在打河道蟹。</p>\n<p data-pid=\"S9bVgzyq\">互ping位置谁赚？SofM赚。因为双方打野都往上刷，但河道蟹是SofM的，Tian的节奏也没法在上路起，对于天使+佛耶戈来说，能让盲僧+猪妹没节奏，已经很赚了。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-466ae39f76c7028acee33f3c6d85e221_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1284\" data-rawheight=\"1290\" class=\"origin_image zh-lightbox-thumb\" width=\"1284\" data-original=\"https://pic2.zhimg.com/v2-466ae39f76c7028acee33f3c6d85e221_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"rlXFaRKS\">双方上野第一波交手，Tian的节奏被防住，SofM完美刷野路线。</p>\n<p data-pid=\"8AN9fqGD\">来看第二波刷野节奏。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-79b5e7912830602c7c3303473e836aa9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"414\" data-rawheight=\"408\" class=\"content_image\" width=\"414\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"mu_AmhBd\">随后，双方打野开始第二波刷野，此时JackeyLove一级被打闪的弊端出现了：没有线权。Tian被迫放掉下河道蟹，直接去上。</p>\n<p data-pid=\"1rUHr02D\">但这个路线也被SofM算到，甚至准确ping出了盲僧的位置。Tian本来的想法是，下河蟹给你，我利用这段时间直接去抓上。但在SofM完全清楚位置的情况下，Tian的gank就很难成功。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-01ef1606e578df7aec6fc5dee4f5a132_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2264\" data-rawheight=\"1118\" class=\"origin_image zh-lightbox-thumb\" width=\"2264\" data-original=\"https://pic3.zhimg.com/v2-01ef1606e578df7aec6fc5dee4f5a132_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"3LwyYtPx\">看，当Tian刷到上半区，在没被视野看到的时候，TheShy已经站在很靠后的位置。</p>\n<p data-pid=\"BnY_yMkl\">在上路草丛一个真眼一个假眼的情况下，Tian很难在上半区打开局势，但这一把下路6级前不好配合，中单冰女又很难抓死，Tian唯一能动的就是上路，于是他决定再试试看。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-f017a12d119b5910e9967e8b60f6e53a_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"422\" data-rawheight=\"408\" class=\"origin_image zh-lightbox-thumb\" width=\"422\" data-original=\"https://pic3.zhimg.com/v2-f017a12d119b5910e9967e8b60f6e53a_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"tgwa3OC4\">Tian的心态完全被SofM算到。</p>\n<p data-pid=\"hyxkkFwW\">Tian在被视野看到以后，选择绕一下，从线上草丛蹲进去。但这样耗时间的蹲人，恰好给到SofM刷完自己上半区来反蹲的机会，Tian的节奏继续断档。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-d1d4d1174609a823e21dd0fa48598eed_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"412\" data-rawheight=\"408\" class=\"content_image\" width=\"412\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"X6pbrTGc\">可能有人疑惑，这一局左手选到岩雀以后，为什么前期0节奏？</p>\n<p data-pid=\"aSnt_IUj\">因为岩雀一直在纠结，到底是跟打野节奏去上，还是去照顾自己弱势的下路。在上路打野互相蹲伏的时候，下路WBG双人组做掉烈娜塔。如果Knight第一时间往下走，说不定有机会反打，但他选择跟打野节奏往上，此时TheShy已经退到塔后，岩雀这波游走无功而返。</p>\n<p data-pid=\"U7iwHsHq\">来看第三波刷野节奏。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-5d70046f8a5f33bc4d2b37a14665a50b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"412\" data-rawheight=\"408\" class=\"content_image\" width=\"412\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"F6IBIZM5\">打野全都回家，Tian出来时利用下路回推线刷掉第一条小龙。在打完小龙以后，Tian从线上走，去了上半区。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-e7bf28d07a46935c228e737cdd055ac6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1282\" data-rawheight=\"1118\" class=\"origin_image zh-lightbox-thumb\" width=\"1282\" data-original=\"https://pic3.zhimg.com/v2-e7bf28d07a46935c228e737cdd055ac6_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"lz6XAW4b\">随后，SofM带着中单，过来做了个真眼，被TES的视野看到。</p>\n<p data-pid=\"tUYOoup9\">此时，WBG知道TES打野在上，TES知道WBG打野在上，下一波节奏注定还在上路，且双方可能还会继续无功而返。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-d31e9efa9e432386fbfe6950eff1f357_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"414\" data-rawheight=\"416\" class=\"content_image\" width=\"414\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"-dPYFe97\">但TES上中野发生了一波非常严重的误判，Knight清完兵线后，选择往下走。</p>\n<p data-pid=\"xdNhT97w\">这波TES上中野一定有人判断，己方上野两人不会被WBG三人越塔，不然岩雀不会往下走。但这种判断是完全错误的，冰女+天使的大招，越塔太轻松了，TES上野最多换掉一个。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-df63c5fa35bd4c98b8253e3ed4cc7696_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1460\" data-rawheight=\"1088\" class=\"origin_image zh-lightbox-thumb\" width=\"1460\" data-original=\"https://pic3.zhimg.com/v2-df63c5fa35bd4c98b8253e3ed4cc7696_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"vbGNkoFd\">上野全部出事。</p>\n<p data-pid=\"MTndShLV\">这一局，WBG的前期处理堪称完美，SofM永远和Tian出现在同一个位置，Tian三轮刷野结束，一次机会都没有，反而是最终被WBG打了个中单错位。TES的节奏一直被压制，岩雀跟打野节奏也没法取得优势，不跟打野节奏直接炸裂。</p>\n<p data-pid=\"8mVszJL7\">好，前期就说到这，来看WBG为什么能在一万经济优势下，被TES翻盘。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-249d2ad426397affd907b384eb8969b5_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1894\" data-rawheight=\"1066\" class=\"origin_image zh-lightbox-thumb\" width=\"1894\" data-original=\"https://pic2.zhimg.com/v2-249d2ad426397affd907b384eb8969b5_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"5PCQtc4f\">28分钟，WBG带着大龙buff前推，拆掉了TES下二塔。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-baa3dcc94d3d7da5cdfa6dedcafebfe9_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"412\" data-rawheight=\"412\" class=\"content_image\" width=\"412\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"xgtCC2MC\">随后，WBG全员转上二塔，ON因为没眼所以回家补眼。</p>\n<p data-pid=\"cT3YI-Zg\">此时，WBG重心在上，打野往上走，AD在压中线，冰女和天使应该及时后撤，从安全的位置走到上半区。TheShy这波压线非常抽象，辅助已经回家，发育非常好的AD打野不在，只有一个发育不良的冰女在看他，为什么敢压线呢？</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-b378b40bcc2168bd94370ef66a33ef3d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1724\" data-rawheight=\"1474\" class=\"origin_image zh-lightbox-thumb\" width=\"1724\" data-original=\"https://pic2.zhimg.com/v2-b378b40bcc2168bd94370ef66a33ef3d_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"2eqGKRN0\">送给厄斐琉斯两个人头，天使的是600块终结，一波1200，直接让厄斐琉斯加速拿到自己的无尽。</p>\n<p data-pid=\"D5zTSidh\">这波是TES最重要的转折点，他们的核心输出位从发育一般，直接提速到三件套成型，TES从此开始，有反手接团的底气了。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-d3a9bef9fdd6381c7ddd5d62dc19498b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1650\" data-rawheight=\"1040\" class=\"origin_image zh-lightbox-thumb\" width=\"1650\" data-original=\"https://pic4.zhimg.com/v2-d3a9bef9fdd6381c7ddd5d62dc19498b_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"4IjGvIwh\">然后是SofM开搞的一波。</p>\n<p data-pid=\"MLqAkf2O\">这波也挺怪的，一开始WBG野辅视野有看到TES的野辅，JackeyLove在中清线，WBG知道对面最起码有三个人在上野区。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-7ca70c7221135f33434abc499e4274df_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"404\" data-rawheight=\"406\" class=\"content_image\" width=\"404\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"N2TeUkXX\">然后SofM就一个人顶进去了。</p>\n<p data-pid=\"PtZi7XV2\">看小地图，冰女还在上路，AD还在中清线，并且TES还有线眼知道你AD在中。天使、泰坦都在另外一侧，为什么SofM敢跑到那个位置？</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-d9627f11da3ce897e805a7b446a7d8cd_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1290\" data-rawheight=\"1118\" class=\"origin_image zh-lightbox-thumb\" width=\"1290\" data-original=\"https://pic2.zhimg.com/v2-d9627f11da3ce897e805a7b446a7d8cd_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"R6tPYfF0\">WBG这时间段，发育最好的是AD、上单、打野，结果打野第一时间残血跑路，上单AD全都吃到恶意收购，活活把自己家辅助A死。</p>\n<p data-pid=\"WtUmuqI1\">就没啥好说的，TheShy和SofM一人送一波，一波送给TES关键装备，一波送给TES胜利。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>2、第二局：TES中期为何断掉节奏？</h3>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"wdElBS6_\">这一局我们来看，为什么TES的冰女+猴子的开团节奏，中期断掉了。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-9310302157053ece5954850179170cb0_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"410\" data-rawheight=\"406\" class=\"content_image\" width=\"410\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"hA5L3tSX\">起因就是19分钟这波，TES多人去下抓纳尔，让WBG拆掉自己的中一塔。</p>\n<p data-pid=\"7F281H3o\">TES这波问题出在哪呢，一是他们花费太多人力去抓下，导致中一塔失守；二是在下路做掉纳尔以后，他们没有排干净自己身后的红色方视野，反而是让Knight继续深入推线。</p>\n<p data-pid=\"WCrG2wxI\">假眼其实都还好，这个真眼TES自己从这上面路过，我不知道他们为什么不排。。。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-def3af0cba8269aa08abc8e34b80996d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"416\" data-rawheight=\"408\" class=\"content_image\" width=\"416\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"lu-wya1n\">随后，TES上和AD已经在线上露头，但冰女还在非常深入的带线，这就是不想活的行为了。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-9ba5c5ee7fba06aebd7c8ec4de020b83_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1262\" data-rawheight=\"1100\" class=\"origin_image zh-lightbox-thumb\" width=\"1262\" data-original=\"https://pic4.zhimg.com/v2-9ba5c5ee7fba06aebd7c8ec4de020b83_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"0WNjuOK7\">冰女被抓，下一塔被WBG的先锋推掉。</p>\n<p data-pid=\"z6rdfksz\">TES本来优势非常巨大，但这个轮次结束以后，反而掉了自己的中一塔和下一塔，从此，WBG在下半区将不会受到TES的视野压制，TES再也没法给WBG小龙压力。这对TES来说是致命的，他们手里有两条龙，后续赢比赛的方式就是利用小龙给压力，逼对面来河道打团，现在这一公式就不成立了。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-1a7b20a3d6a164a33ba7f4a9666d2826_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2262\" data-rawheight=\"1220\" class=\"origin_image zh-lightbox-thumb\" width=\"2262\" data-original=\"https://pic3.zhimg.com/v2-1a7b20a3d6a164a33ba7f4a9666d2826_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"kXOc5Jjr\">三龙，WBG视野优势，TES没法落位。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-fad6988dcef2464ec9b4ee5e225e506b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1652\" data-rawheight=\"1086\" class=\"origin_image zh-lightbox-thumb\" width=\"1652\" data-original=\"https://pic4.zhimg.com/v2-fad6988dcef2464ec9b4ee5e225e506b_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"TNIyZqWf\">四龙，WBG视野不差，TES只能卡一个比较远的视野死角，但冰女先手R被佛耶戈大招顶掉，后续伤害控制都没能跟上。</p>\n<p data-pid=\"68zyxHF7\">TES冰女节奏就是这么断的，本来只要中下视野优势，冰女猴子站住河道，WBG谁来谁吃先手。但是19分钟那波轮次打完，中下防御塔全掉，视野拿不到优势，小龙压力给不到，那先手阵容就会很难打。</p>\n<p data-pid=\"LVt8paxX\">问题是，你节奏断了，WBG厄斐琉斯发育一直没断，时间往后走，伴随着厄斐琉斯发育越来越好，局势已经慢慢被WBG拖成了均势。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-0476d721f83bff4de5e107dfcabf6f54_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1082\" data-rawheight=\"1056\" class=\"origin_image zh-lightbox-thumb\" width=\"1082\" data-original=\"https://pic1.zhimg.com/v2-0476d721f83bff4de5e107dfcabf6f54_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"6-pXx07V\">这波就是从均势转劣势，JackeyLove的暴毙，从18年到现在我真看习惯了。。。。</p>\n<p data-pid=\"elFyVBez\">这波打完WBG拿下大龙，局势全面转为WBG优势，在乌鸦发育起来、厄斐琉斯有复活甲的情况下，TES很难给到WBG双c致命威胁。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-01ccd4472d8b78fa6e9e1c7a96494f9b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1584\" data-rawheight=\"1086\" class=\"origin_image zh-lightbox-thumb\" width=\"1584\" data-original=\"https://pic4.zhimg.com/v2-01ccd4472d8b78fa6e9e1c7a96494f9b_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"1nC5xU-0\">最后一波，TES绕开乌鸦，倾尽全力，打掉了厄斐琉斯复活甲。Huanfeng复活起来后闪现拉开距离，完成收割。</p>\n<p data-pid=\"ZDaLxWbC\">这版本选冰女的很多，因为这英雄配猴子、佛耶戈、盲僧都非常好，多数队伍拿到冰女都能在前中期起节奏。但是这个中路很需要滚雪球，如果队伍雪球没能滚起来，在耐久度更新的大环境下，冰女带后期会变成徒有控制、伤害不足的英雄，需要合适的开团时机，或者是队友补上伤害。</p>\n<p data-pid=\"OcqehfKY\">问题就是多数队伍，他们前期有节奏，但中期没法滚雪球，后期也没有足够的配合。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-d1a41786d2e6215b03845921dcb8cee2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1404\" data-rawheight=\"854\" class=\"origin_image zh-lightbox-thumb\" width=\"1404\" data-original=\"https://pic3.zhimg.com/v2-d1a41786d2e6215b03845921dcb8cee2_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"0VOH45FP\">12.11，冰女出场13次，胜3次，负10次。</p>\n<p data-pid=\"MERBFXRi\">目前唯二能用冰女赢的队，是RNG和JDG，RNG是团队配合太好了，JDG是野区雪球思路很成熟。其他队伍目前都卡在前期优势，但中期滚不起雪球的门槛上。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<h3>3、第三局：TES的决策/团战致胜</h3>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"MauBZChV\">第三局还是WBG前期优势，然后TES中后期翻盘，我们来看看TES是如何做到的。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-32c0649acf0d476d480d1220e072542d_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"2328\" data-rawheight=\"1216\" class=\"origin_image zh-lightbox-thumb\" width=\"2328\" data-original=\"https://pic2.zhimg.com/v2-32c0649acf0d476d480d1220e072542d_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"N5uZBrLT\">这把第一个关键转折点，发生在22分钟。</p>\n<p data-pid=\"J49VqJzJ\">此时，小龙快要刷新，WBG经济优势，且飞机拿到炸药包，中线压住，局势大好。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-bf2882ca090e2c72d8f8064c6c7c84fc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"400\" data-rawheight=\"398\" class=\"content_image\" width=\"400\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"IL0Cb9K8\">但是呢，WBG的视野做的很一般，TES反而视野很好。上半区，TES有三个眼看大龙附近，下半区，TES在小龙坑里还有一个眼。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-5da859ce62e36d716d511591caddfad6_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1760\" data-rawheight=\"1226\" class=\"origin_image zh-lightbox-thumb\" width=\"1760\" data-original=\"https://pic3.zhimg.com/v2-5da859ce62e36d716d511591caddfad6_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"hBM0u73B\">这波视野成为TES最关键的决策支撑点，在WBG打小龙的时候，TES利用视野信息，果断决定清中线，然后转大龙。</p>\n<p data-pid=\"hHaqXhcj\">WBG的唯一问题，就是打小龙前没有先清掉视野，给到TES足够的决策、沟通时间和信息。但这个转大龙的决策，确实是TES的神来之笔。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-4b63e620d1927702978f05a9b217e428_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1710\" data-rawheight=\"1104\" class=\"origin_image zh-lightbox-thumb\" width=\"1710\" data-original=\"https://pic1.zhimg.com/v2-4b63e620d1927702978f05a9b217e428_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"Cs1tpngq\">而且在探视野的时候，WBG出现了非常离谱的阵型脱节，在TheShy快要进草丛，挨打的第一时间，Huanfeng选择回头，想要从河道上面绕进去。</p>\n<p data-pid=\"x55Eeb_o\">这波阵型脱节的结果是什么？</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-25b4ff3dd1cfcbfcde427492d89a8f1c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1524\" data-rawheight=\"1046\" class=\"origin_image zh-lightbox-thumb\" width=\"1524\" data-original=\"https://pic1.zhimg.com/v2-25b4ff3dd1cfcbfcde427492d89a8f1c_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"pTmpkAIN\">看，团战第一时间，TES阵型拉开，三个人站后排，上野顶前面，五个人围着打奥恩。而WBG的几个人站在一起，飞机、老鼠，都没有足够的射程去威胁到TES后排。奥恩虽然能抗，但这段时间毫无伤害，等于白抗。</p>\n<p data-pid=\"P6l8yhwZ\">要么是TheShy走太快，要么是Huanfeng走太慢，二选一。</p>\n<p data-pid=\"XTHCLRKX\">这波打完，TES从小劣转为均势。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-04e47cbdc5b60f0692d5ae7cd1ced125_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1510\" data-rawheight=\"1176\" class=\"origin_image zh-lightbox-thumb\" width=\"1510\" data-original=\"https://pic2.zhimg.com/v2-04e47cbdc5b60f0692d5ae7cd1ced125_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"DzNrGsVj\">而最后一波，是TES的致胜团。</p>\n<p data-pid=\"rwlJLJLG\">SofM这波开团就没啥道理，一个有双招、有璐璐的泽丽，猴子这么开是肯定接不上控制链的。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-d514808941a4a85d83d228d118b26c0c_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1414\" data-rawheight=\"1264\" class=\"origin_image zh-lightbox-thumb\" width=\"1414\" data-original=\"https://pic1.zhimg.com/v2-d514808941a4a85d83d228d118b26c0c_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"TUFjDIZQ\">JackeyLove第一时间E过墙，奥恩大招空掉。而Wayward成功盯防飞机，Knight的维克托作为团队腿最短的点，有非常安全的输出环境。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-c44ab422b7ee52a9e980b238c38d0a85_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1224\" data-rawheight=\"1184\" class=\"origin_image zh-lightbox-thumb\" width=\"1224\" data-original=\"https://pic2.zhimg.com/v2-c44ab422b7ee52a9e980b238c38d0a85_r.jpg\"></figure><p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"JuQrHaLx\">等到猪妹单人打出飞机复活甲时，TES这波团已经不可能输了。</p>\n<p data-pid=\"3kv_hw6h\">我个人复盘，一般不太分析团战操作。因为团战操作是瞬间发生的，纯看选手的本能和团队平时的默契，复盘没有价值。但这一局基本就是一波团决胜，而在这考验瞬时反应、默契积累的关口，WBG表现不如TES。</p>\n<hr>\n<h2>三、总结</h2>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"HGx6LKcj\">如果要对这三局做个总结，这两队是真的镜像。</p>\n<p data-pid=\"cQE4CWYb\">三局走向一模一样，前期优势的队，中/后期一定会出事。前期劣势的队，中/后期一定会翻盘。两队打野在第一局实现了完全对位的打野路线，SofM完美盯防Tian。TES第二局给机会，断掉自己的节奏。WBG第三把团战出问题，两波团都没打好。</p>\n<p data-pid=\"cwNkZX5Z\">但哪怕这样，这个bo3也是近期质量较高的对决，双方失误都较少，而且红色方都有一套自己的解题办法。</p>\n<p data-pid=\"OUp_AIJX\">我对这个版本的比赛质量判定标准是，只有能在红色方给蓝色方造成威胁，甚至出现红破蓝，才能称得上是高质量对抗。近期能跟这场质量接近的，我的印象包括：FPXvsJDG，ALvsV5，RNGvsOMG等等。在这个红蓝极度不均衡的版本，红色方表现才是衡量强队的硬性标准。</p>\n<p data-pid=\"bMP4TvBK\">常规赛共九周半，现在是第五周，留给战队的前期调整时间已经过去，后面的比赛会越来越血腥、越来越激烈。希望WBG和TES都能从这场比赛中获得提升，以应对接下来激烈的排位战。</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/YInTIanCLANG?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">尹天</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/536964215?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"派早报：华为举办夏季新品发布会，小米发布小米 12S 系列新机等","date":"2022-07-05 01:02:32","description":"微软提醒 Windows Server 2012/2012 R2 即将停止支持，星纪时代正式收购魅族等<a href=\"https://sspai.com/post/74121\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74121"},{"title":"派评 | 近期值得关注的 App","date":"2022-07-04 09:45:00","description":"你可以通过文章目录快速跳转到你感兴趣的内容。如果发现了其它感兴趣的 App 或者关注的话题，也欢迎在评论区和我们进行讨论。<a href=\"https://sspai.com/post/74114\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74114"},{"title":"拉伸真的有用吗？","date":"2022-07-04 08:00:00","description":"我们了解拉伸，才发现它不仅形式多样，而且作用还不少，是日常运动和锻炼必不可少一个环节。<a href=\"https://sspai.com/post/74069\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74069"},{"title":"「E3 月」点评：好玩的游戏那么多，值得关注的有哪些？","date":"2022-07-04 07:30:00","description":"梳理了过去一个月花样繁多的发布会日程后，本文将总结个人最感兴趣也最值得探讨的相关内容，希望能帮助你接触到需要的信息。<a href=\"https://sspai.com/post/74107\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74107"},{"title":"北京有哪些景点是属于世界遗产级的？","date":"2022-07-04 07:05:06","description":"\n<p></p>\n<p><img src=\"https://pic2.zhimg.com/v2-70187b1aab12a469fed0e2cd55bea51f_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"187\" data-watermark=\"original\" data-original-src=\"v2-70187b1aab12a469fed0e2cd55bea51f\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-e58766456570662d9a2524f14f3e2e52_720w.jpg?source=b1748391?rss\" data-caption=\"©Vitalyedush/dreamstime/图虫创意\" data-size=\"normal\" data-rawwidth=\"857\" data-rawheight=\"1280\" data-watermark=\"original\" data-original-src=\"v2-e58766456570662d9a2524f14f3e2e52\" data-watermark-src=\"v2-b8f60ef55a2fa6a3cd2eaa464a323698\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"R5ELNhiz\">自2017年启动中轴线申报世界遗产程序以来，目前，<b>北京中轴线</b>申遗文本已经由北京市政府提交国家文物局，正等待专家审核。计划在2023年年初，正式向联合国教科文组织世界遗产中心提交申报文件，争取在2024年的世界遗产大会上，讨论北京中轴线的申遗。</p>\n<p data-pid=\"BgIqgxEm\"><b>北京</b>有遍地的“国字号”和文化遗产，中国世界遗产总数达到56处，其中北京一城即占据<b>7项</b>。这一次，LP从人类起源处开始，与你一起打卡北京的世界遗产清单。</p>\n<p><br></p>\n<h2><b>01 周口店北京人遗址</b></h2>\n<p data-pid=\"mVfo4v1s\"><i><b>1987年12月被列入《世界遗产名录》</b></i></p>\n<blockquote data-pid=\"_KLUEvcz\">周口店遗址不仅是有关远古时期亚洲大陆人类社会的一个罕见的历史证据，而且也阐明了人类进化的进程。——摘自UNESCO World Heritage（<a href=\"http://link.zhihu.com/?target=http%3A//www.unesco.org\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">unesco.org</span><span class=\"invisible\"></span></a>）</blockquote>\n<p><img src=\"https://pica.zhimg.com/v2-c872da2e1be494160563985a9edbbe40_720w.png?source=b1748391?rss\" data-caption=\"©Jun Mu/Shutterstock\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1621\" data-watermark=\"original\" data-original-src=\"v2-c872da2e1be494160563985a9edbbe40\" data-watermark-src=\"v2-11c29fa222ab5883ca1b659fd92ce8c1\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"nmDhkWC6\">早在70万年前，远古人类就已在<b>周口店龙骨山一带</b>繁衍生息。随着20世纪初开始的考古发现，大量古人类化石、动物化石、石制品和用火遗迹得以重见天日。这里的遗存涵盖了<b>直立人</b>、<b>早期智人</b>和<b>晚期智人</b>三个古人类阶段，在世界范围内的古人类遗址中绝无仅有。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-57c0c468b32646ec0a232d6e61d5d831_720w.jpg?source=b1748391?rss\" data-caption=\"©Siyuwj, CC BY-SA 3.0 &amp;lt;https://creativecommons.org/licenses/by-sa/3.0&amp;gt;,via Wikimedia Commons\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"original\" data-original-src=\"v2-57c0c468b32646ec0a232d6e61d5d831\" data-watermark-src=\"v2-177c9ced56fb62c3b8b1fb5aab9c6a53\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"fmWlcxVC\">周口店遗址分为两部分：<b>遗址公园</b>和<b>博物馆</b>。前者是文物的出土地点，后者则是它们的展示场所。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5a475c58bcc8a8384418cd8ef78d7e05_720w.jpg?source=b1748391?rss\" data-caption=\"©Yan Li, CC BY-SA 3.0 &amp;lt;https://creativecommons.org/licenses/by-sa/3.0&amp;gt;,via Wikimedia Commons\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-5a475c58bcc8a8384418cd8ef78d7e05\" data-watermark-src=\"v2-0e3762f8f66ea9b6413d8a4f341e0b37\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"nq3dZtjr\">走进<b>周口店遗址博物馆</b>，首先你会看到举世闻名的“第一地点”<b>沙盘</b>——1929年，中国考古学家裴文中正是在这里发现了第一颗完整的“北京人”头盖骨。 </p>\n<p><img src=\"https://pica.zhimg.com/v2-afc46c2403d7b85f54992a4c1efa261a_720w.jpg?source=b1748391?rss\" data-caption=\"©xiquinhosilva, CC BY 2.0 &amp;lt;https://creativecommons.org/licenses/by/2.0&amp;gt;,via Wikimedia Commons\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"721\" data-watermark=\"original\" data-original-src=\"v2-afc46c2403d7b85f54992a4c1efa261a\" data-watermark-src=\"v2-c01554bd0e08b94a000b602caaf72030\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"d1NP2OSq\">沿参观路线进入<b>地下一层</b>，这里集中复原了“北京人”用火、制造石器、狩猎等生活场景，铺满整面墙的500余件石器展示非常壮观，同时你还能在上古野生动物的演化变迁图中，见识到他们的生存竞争对手（也可能是食物）。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5b3f27cd57f669c053f668c0c6f09122_720w.jpg?source=b1748391?rss\" data-caption=\"©BleachedRice, CC BY-SA 4.0 &amp;lt;https://creativecommons.org/licenses/by-sa/4.0&amp;gt;,via Wikimedia Commons\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"original\" data-original-src=\"v2-5b3f27cd57f669c053f668c0c6f09122\" data-watermark-src=\"v2-fdd911dfdced99cf293da42629eda0ae\" data-private-watermark-src=\"\" data-tags=\"porn\"></p>\n<p data-pid=\"012b98kN\">继续往下走，能看到丰富的动物化石、“山顶洞人”和“田园洞人”等不同时期智人的生活遗迹和化石标本，其中属于<b>晚期智人</b>的3块趾骨，证明“田园洞人”可能是最早穿上鞋的“现代人”。 </p>\n<p><img src=\"https://pic1.zhimg.com/v2-deb6a4ee759ef7fed299748c80b03a06_720w.jpg?source=b1748391?rss\" data-caption=\"周口店遗址公园入口;©Siyuwj, CC BY-SA 3.0 &amp;lt;https://creativecommons.org/licenses/by-sa/3.0&amp;gt;,via Wikimedia Commons\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"original\" data-original-src=\"v2-deb6a4ee759ef7fed299748c80b03a06\" data-watermark-src=\"v2-06a6577c00e63708dc0bbe8ed6b2cedf\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"TFVGP2QG\"><b>周口店遗址公园</b>在博物馆西北侧600米处，进公园大门拾级而上，很快就能到达举世闻名的“猿人洞” ，在这个东西长约140米的天然石灰岩溶洞穴里，你很难想象“北京人”是如何生存了20万年。 </p>\n<p><br></p>\n<h2><b>02 长 城</b></h2>\n<p data-pid=\"1NCojcPV\"><i><b>1987年12月被列入《世界遗产名录》</b></i></p>\n<blockquote data-pid=\"EJrKf4BJ\">公元前约220年，秦始皇下令将早期修建的一些分散的防御工事连接成一个完整的防御系统，用以抵抗来自北方的侵略。长城的修建一直持续到明代，终于建成为世界上最大的军事设施。长城在建筑学上的价值，足以与其在历史和战略上的重要性相媲美。——摘自UNESCO World Heritage（<a href=\"http://link.zhihu.com/?target=http%3A//www.unesco.org\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">unesco.org</span><span class=\"invisible\"></span></a>）</blockquote>\n<p><img src=\"https://pica.zhimg.com/v2-fa0d53bea0570448b4dbebadd73bd855_720w.jpg?source=b1748391?rss\" data-caption=\"©David Parker/Adobe Stock/图虫创意\" data-size=\"normal\" data-rawwidth=\"852\" data-rawheight=\"1280\" data-watermark=\"original\" data-original-src=\"v2-fa0d53bea0570448b4dbebadd73bd855\" data-watermark-src=\"v2-09305e58c68952d69148878c5b482f2d\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"qhokPKRV\">如果你是<b>初次到访</b>，建议先去八达岭、慕田峪、居庸关等成熟景区，对长城有一定认识之后，再去拜会那些未开发的长城。此外要提醒你，作为全人类的珍贵遗产，长城上的一砖一木都需要我们<b>悉心呵护</b>。</p>\n<p><br></p>\n<p data-pid=\"dbLmZDK7\"><b>八达岭长城</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-db084f74987202874d38dcbf52cae54f_720w.png?source=b1748391?rss\" data-caption=\"©feiyuezhangjie/Shutterstock\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1628\" data-watermark=\"original\" data-original-src=\"v2-db084f74987202874d38dcbf52cae54f\" data-watermark-src=\"v2-851545854fd733c34755c6d58239d02d\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"kURkc3Eh\">主登城口两侧有5门古炮，昭示着长城的防御功能，其中最大的一门大炮叫<b>“神威大将军”</b>，射程达500米。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-6955d8ead80a3c78a8f1c043f1193467_720w.png?source=b1748391?rss\" data-caption=\"©aphotostory/Shutterstock\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"721\" data-watermark=\"original\" data-original-src=\"v2-6955d8ead80a3c78a8f1c043f1193467\" data-watermark-src=\"v2-1e4215767426905e5c892cad9de5956d\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"c0WPLKUY\">以<b>瓮城</b>为中心，八达岭长城分为南北走向的两条线路。<b>北线</b>由于敌楼多，地形相对缓和，是大多数游客选择的路线。人们通常会在北四楼的“好汉坡” 和“好汉碑” 前争相留影后，选择下山。我们建议你继续向上，问鼎长城最高的敌楼——海拔888.9米高的北八楼，“好汉中的好汉”可以继续向北十二楼进发。</p>\n<p><img src=\"https://pica.zhimg.com/v2-a6da950848ba5d67e84920f0bca51496_720w.jpg?source=b1748391?rss\" data-caption=\"2020年十一国庆期间的北京八达岭长城风光;©seasky/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"719\" data-watermark=\"original\" data-original-src=\"v2-a6da950848ba5d67e84920f0bca51496\" data-watermark-src=\"v2-5757d7e2e3764a308fcfe2701bb8930f\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"oiiLfmE_\">如果你想远离嘈杂的人群，获得更开阔优美的视野，<b>南线</b>会是个好选择。“好汉碑”在南线也有一座。 </p>\n<p><br></p>\n<p data-pid=\"EMzlOvkF\"><b>居庸关长城</b></p>\n<p><img src=\"https://pic4.zhimg.com/v2-9db29e8cc003d5b12a74618a2de911f8_720w.jpg?source=b1748391?rss\" data-caption=\"北京昌平居庸关;©长城摄影师杨东/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"608\" data-watermark=\"original\" data-original-src=\"v2-9db29e8cc003d5b12a74618a2de911f8\" data-watermark-src=\"v2-4bb09d6ae034f505b9683588b08ac464\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"-TYfUdzK\">这座雄伟关城就在八达岭长城东南20公里处，是著名的<b>“内三关”</b>之一。在军事上，居庸关是京师西北门户，沿峻岭而建，地势绝险，八达岭长城只不过是它的北部防线。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-30f49273618bbbd647ec3f28d117f90c_720w.jpg?source=b1748391?rss\" data-caption=\"北京昌平居庸关云台，是元代过街塔的基座，始建于元至正二年（1342年）;©杨东/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"726\" data-watermark=\"original\" data-original-src=\"v2-30f49273618bbbd647ec3f28d117f90c\" data-watermark-src=\"v2-bff9d24481c090a12ce9e680be19120c\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"FnO38YWq\">现在所说的居庸关长城，其实只是居庸关的<b>外城墙</b>。从造型上看来，它是一个周长4公里的封闭城圈，控扼了整个峡谷。要想环行一圈不仅需要时间，更需要体力，所以更多的人是择西段或东段而行。</p>\n<p><img src=\"https://pica.zhimg.com/v2-e973e712ceda4179d1939b00079e2dfd_720w.jpg?source=b1748391?rss\" data-caption=\"花海列车;©蓝染天际/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"original\" data-original-src=\"v2-e973e712ceda4179d1939b00079e2dfd\" data-watermark-src=\"v2-2a132fb0d4d4b097cc4bcbb7d26a17fc\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"mYM6hE_C\">西去的陡坡随着山势上升而成了加强版的“好汉坡”，东行则相对平缓，春季杏花盛开时还能俯瞰<b>花海列车</b>。 </p>\n<p><br></p>\n<p data-pid=\"G8JckTNt\"><b>慕田峪长城</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-51f6e9b755458bd0625864dc152e1230_720w.jpg?source=b1748391?rss\" data-caption=\"秋日北京怀柔慕田峪长城层林浸染;©杨东/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"718\" data-watermark=\"original\" data-original-src=\"v2-51f6e9b755458bd0625864dc152e1230\" data-watermark-src=\"v2-206fd04c48f30598260e26af44bb4e4b\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"p4gz1aKu\">慕田峪是<b>最受国外旅行者青睐</b>的长城景区，也是不少影视剧的取景地，最出名的要数拍过《非诚勿扰2》的15号敌楼。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5f66ba6546baeae5ba3d67a1de8b04fc_720w.jpg?source=b1748391?rss\" data-caption=\"秋日北京怀柔慕田峪长城层林浸染;©杨东/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"713\" data-watermark=\"original\" data-original-src=\"v2-5f66ba6546baeae5ba3d67a1de8b04fc\" data-watermark-src=\"v2-076ce81aa6fe776f625fee0634793df5\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"m-6WACaZ\">这里游客量虽然不小，但与八达岭相比，还是清静许多，加上山林葱郁的幽雅环境、索道缆车和人气十足的滑道，非常<b>适合全家出行</b>。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-a9255f035da680abce29dd1740aa75ce_720w.jpg?source=b1748391?rss\" data-caption=\"由Riosee提供\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-a9255f035da680abce29dd1740aa75ce\" data-watermark-src=\"v2-a3e7b703911a7929158b0c0f0710b4c8\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"gF3lQ76x\">这段明长城由明朝开国大将徐达督建而成，东连<b>古北口</b>，西接<b>居庸关</b>，短短3公里就建有26座敌楼。除了少有的密集防御布局，独特的关台、内外支城、双面垛口等以险制扼的建造特点，也让它在北京界内的长城中独树一帜。 </p>\n<p><br></p>\n<p data-pid=\"5fPrpVDe\"><b>箭扣长城</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-e1cac139dea060c2e0b7d9ffdaa3ff16_720w.jpg?source=b1748391?rss\" data-caption=\"中国特色的长城风光，雄伟的箭扣长城云海;©潘李亮/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"748\" data-watermark=\"original\" data-original-src=\"v2-e1cac139dea060c2e0b7d9ffdaa3ff16\" data-watermark-src=\"v2-fcd908d1e3b217d9600086d9a9d9b67f\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"X2r2R_nV\">箭扣是北京未开放长城中名头最响的，作为明长城最著名的<b>险段</b>之一，无数震撼人心的摄影佳作吸引着来自各方的长城爱好者前来探险。 </p>\n<p><img src=\"https://pic1.zhimg.com/v2-7d8c8c9173942fa126a94a9440c5ead8_720w.jpg?source=b1748391?rss\" data-caption=\"©PeterLau1203/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"original\" data-original-src=\"v2-7d8c8c9173942fa126a94a9440c5ead8\" data-watermark-src=\"v2-f5e510eba322f72518e6ae17cf09fc69\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"2RnvGTSP\">多数人以怀柔的<b>西栅子村</b>作为徒步箭扣的起点，从这里向东经“小布达拉”“正北楼”“牛角边”到慕田峪长城，大约需要3小时。向西造访“鹰飞倒仰”“北京结”再下山则需要6小时以上。另外，也有人选择从南边的<b>田仙峪</b>出发，从这里徒步到箭扣脚下要花2小时。</p>\n<p><br></p>\n<p data-pid=\"wVE71TVl\"><b>司马台长城</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-43a332f1b174722ca08c5b901b399bc2_720w.jpg?source=b1748391?rss\" data-caption=\"夕阳下的司马台长城;©胡光荣/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"719\" data-watermark=\"original\" data-original-src=\"v2-43a332f1b174722ca08c5b901b399bc2\" data-watermark-src=\"v2-3541644ddd5f1714ba0fa55a8b00ecf6\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"k8M8OSeh\">被鸳鸯湖水库分为东西两段的司马台长城，基于北齐长城修筑而成，是中国唯一一处<b>保存明代原貌</b>的古长城。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5e83c9d91667d494cbc462a85a52ab07_720w.jpg?source=b1748391?rss\" data-caption=\"司马台长城夜景;©胡光荣/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"606\" data-watermark=\"original\" data-original-src=\"v2-5e83c9d91667d494cbc462a85a52ab07\" data-watermark-src=\"v2-79d439ab6700439c5b8b854acef9d916\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Y8xPhWnA\">长期以来，司马台长城都没有正式成为景区。从2015年起，司马台长城被纳入<b>古北水镇</b>景区，开放了较为安全的一部分（东段的1-10楼），如果你想体验原汁原味的古长城，又不愿太冒险，那这里就是最合适不过的选择。 </p>\n<p><br></p>\n<p data-pid=\"0mC19NeB\"><b>黄花城水长城</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-f55dd532597049214d86c8e50ce2ee26_720w.jpg?source=b1748391?rss\" data-caption=\"黄花城长城吊桥;©Shanshan533/dreamstime/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"809\" data-watermark=\"original\" data-original-src=\"v2-f55dd532597049214d86c8e50ce2ee26\" data-watermark-src=\"v2-6cbd1b15421946a8e75ac7718b661d1c\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"vgGvC3sk\">古老的明长城被<b>灏明湖</b>截为三段，形成了非常独特的“长城戏水”景观。相比其他近郊的长城，这里游人不多，玩法却不少。 </p>\n<p><img src=\"https://pica.zhimg.com/v2-bcfc579c6b804fe2c0ce2aa38c031193_720w.jpg?source=b1748391?rss\" data-caption=\"黄花城长城水库大坝;©Shanshan533/dreamstime/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"808\" data-watermark=\"original\" data-original-src=\"v2-bcfc579c6b804fe2c0ce2aa38c031193\" data-watermark-src=\"v2-398d1923301f851ac9303d5c4210ccf6\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"N1CkTHzV\">春天可乘船在湖中畅游，夏天能享受水上飞降、攀岩带来的肾上腺素飙升，秋季可到<b>明代板栗园</b>体验采摘乐趣，冬季能一睹冰瀑奇观。喜欢徒步的话可以攀爬<b>盘山栈道</b>，寻找俯瞰黄花城水库和长城的最佳视角。</p>\n<p><br></p>\n<p data-pid=\"0SMxuZSY\"><b>河防口长城</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-a86543e401656bc0d5c92d01148cf2f3_720w.jpg?source=b1748391?rss\" data-caption=\"©N509FZ, CC BY-SA 4.0 &amp;lt;https://creativecommons.org/licenses/by-sa/4.0&amp;gt;, via Wikimedia Commons\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"original\" data-original-src=\"v2-a86543e401656bc0d5c92d01148cf2f3\" data-watermark-src=\"v2-ef14cfec5fe1a74e45fff22e7766d6c5\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"ZHPtgVVC\">河防口长城位于怀柔区以北20多公里的<b>怀北镇</b>，这段始建于南北朝，改建于明隆庆年间的长城，因年久失修损毁严重。2011年开始的重金修缮，完全采用古代工艺，算是基本保持了长城的原有形制。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-4a723129fb3848006a85c76810e93100_720w.jpg?source=b1748391?rss\" data-caption=\"鲤鱼背;©梅白, CC BY-SA 3.0 &amp;lt;https://creativecommons.org/licenses/by-sa/3.0&amp;gt;, via Wikimedia Commons\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-4a723129fb3848006a85c76810e93100\" data-watermark-src=\"v2-3ac34eca76176069f798b2603f44ef30\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"K6WqkHMd\">著名的<b>“鲤鱼背”</b>是一段裸露的岩石峭壁。有400多米长，必须克服恐高，手脚并用才能爬过去。在众多敌楼中，请留意独一无二的“夹扁楼”，狭长的山脊决定了它独特的形状。此外，这里的多数路段都只有面向关外的一侧有城墙，即“单边墙”。 </p>\n<p><br></p>\n<h2>03 明 清 故 宫（北京故宫、沈阳故宫）</h2>\n<p data-pid=\"JPffxqfr\"><i><b>北京故宫于1987年12月被列入《世界遗产名录》</b></i></p>\n<p data-pid=\"DXngXNQj\"><i>*沈阳故宫作为其扩展项目于2004年被列入其中。</i></p>\n<blockquote data-pid=\"7_n-HBWm\">北京故宫作为五个世纪（1416-1911）最高皇权的皇宫， 包含近一万间房间及其家具陈设与工艺，众多殿宇及花园景观， 是明清两朝中华文明的无价见证。——摘自UNESCO World Heritage（<a href=\"http://link.zhihu.com/?target=http%3A//www.unesco.org\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">unesco.org</span><span class=\"invisible\"></span></a>）</blockquote>\n<p><img src=\"https://pica.zhimg.com/v2-ccb7b8a392859774c54af9d82b34fec2_720w.jpg?source=b1748391?rss\" data-caption=\"©一只懒人/图虫创意\" data-size=\"normal\" data-rawwidth=\"875\" data-rawheight=\"1280\" data-watermark=\"original\" data-original-src=\"v2-ccb7b8a392859774c54af9d82b34fec2\" data-watermark-src=\"v2-af117fc562b2ef627ce5f731c20dd5b4\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"z7evq7XW\">无论北京城如何“幅散”，<b>故宫</b>永远都是它的<b>中心</b>。明清两代24位“天子”造就了中国建筑的最高建制，也留下了无数奇珍异宝；600年浮沉后，帝国的背影渐远，昔日的紫禁城早已游人络绎。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-2e721c700223fd5e0fe97668131288c9_720w.jpg?source=b1748391?rss\" data-caption=\"中国首都北京故宫延禧宫水晶宫遗址;©健忘的行摄世界/图虫创意\" data-size=\"normal\" data-rawwidth=\"854\" data-rawheight=\"1280\" data-watermark=\"original\" data-original-src=\"v2-2e721c700223fd5e0fe97668131288c9\" data-watermark-src=\"v2-2ab4e93996535ebc5c6ecac4dc8986ab\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"aGD2Flv3\">先进的VR技术已经可以让你窥探此间的每个角落，但只有置身于被历史真实触摸过的一砖一瓦、一草一木之中，你才能真切地感受到彼时的<b>盛世天光</b>。</p>\n<p><br></p>\n<p data-pid=\"xfX2JZFh\"><b>| 故宫四时游</b></p>\n<p><img src=\"https://picx.zhimg.com/v2-c519356bc93c4a737047102ad7d94332_720w.jpg?source=b1748391?rss\" data-caption=\"北京故宫坤宁宫杏花;©鲲鹏之志HF/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"718\" data-watermark=\"original\" data-original-src=\"v2-c519356bc93c4a737047102ad7d94332\" data-watermark-src=\"v2-6b3dd7ac4fa15c6a3e5bcdda4b2354c9\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Y0AVjr_Z\"><b>春季</b> 3月玉翠亭的杏花、文华殿的海棠， 4月承乾宫的梨花、武英殿的丁香， 5月慈宁宫的牡丹芍药、御花园的紫藤花，都美得让人挪不开眼。</p>\n<p><img src=\"https://pica.zhimg.com/v2-df098fdd583b0a0eac7b9df070a65391_720w.jpg?source=b1748391?rss\" data-caption=\"故宫的排水系统“千龙吐水”;©そらみみ, CC BY-SA 4.0 &amp;lt;https://creativecommons.org/licenses/by-sa/4.0&amp;gt;, via Wikimedia Commons\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-df098fdd583b0a0eac7b9df070a65391\" data-watermark-src=\"v2-f5f0c440e22e115f20c12e6802feed31\" data-private-watermark-src=\"\" data-tags=\"politic\"></p>\n<p data-pid=\"hL5xkxLX\"><b>夏季</b> 雨水丰沛，有机会的话在太和殿可以看到千龙吐水的壮景。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-e2a7d0f9b802e847d924065b0c24f414_720w.jpg?source=b1748391?rss\" data-caption=\"故宫的秋天;©筱盈莹/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-e2a7d0f9b802e847d924065b0c24f414\" data-watermark-src=\"v2-e12b601663350ca1f54b3c43ad31c499\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"MbHAQtiL\"><b>秋季 </b>断虹桥往北有故宫最大的银杏林，延禧宫、慈宁宫花园分别有最大、最年长的银杏树，文华殿的银杏规模也不小，是秋日赏景拍照的好去处。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-8fe8bc4dfd6d4ef92914f04a17a2741f_720w.jpg?source=b1748391?rss\" data-caption=\"北京雪后的故宫;©菁华/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"692\" data-watermark=\"original\" data-original-src=\"v2-8fe8bc4dfd6d4ef92914f04a17a2741f\" data-watermark-src=\"v2-3e4abc45e91a2c69859c7cd84cd320f5\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"toNE8Z8z\"><b>冬季</b> 冬至午时前以及正午十二点，太和殿的“建极绥猷”匾和乾清宫的“正大光明”匾会被金光点亮，是一年中难得一见的奇观。</p>\n<p><br></p>\n<p data-pid=\"OIB-BTCY\"><b>| 故宫亮点</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-6c7eb3b3cd69f7ce9fa311e298a33663_720w.jpg?source=b1748391?rss\" data-caption=\"西雁翅楼，从中山公园拍摄;©維基小霸王, CC BY-SA 4.0 &amp;lt;https://creativecommons.org/licenses/by-sa/4.0&amp;gt;, via Wikimedia Commons\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"original\" data-original-src=\"v2-6c7eb3b3cd69f7ce9fa311e298a33663\" data-watermark-src=\"v2-702f9ea8cd82344075b16db7f1215444\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"TjJHoVOb\"><b>雁翅楼 </b>故宫最大的展厅，不定期举办高规格特展。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-82bbfc47a78685622f065c62b3c4d5e2_720w.jpg?source=b1748391?rss\" data-caption=\"武英殿;©秋水平湖, CC BY-SA 3.0 &amp;lt;https://creativecommons.org/licenses/by-sa/3.0&amp;gt;, via Wikimedia Commons\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"original\" data-original-src=\"v2-82bbfc47a78685622f065c62b3c4d5e2\" data-watermark-src=\"v2-937db37d4693f85a925d9c092996d6af\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"kTmrGJHT\"><b>武英殿</b> 追根溯源，尽览八千年中国陶瓷之美。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-7118b2fe29b196f24f7b2b97b5e5a079_720w.jpg?source=b1748391?rss\" data-caption=\"故宫博物院慈宁宫;©月色/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"719\" data-watermark=\"original\" data-original-src=\"v2-7118b2fe29b196f24f7b2b97b5e5a079\" data-watermark-src=\"v2-adb5a38daa4de8fd0de7b9b1210a338e\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"DCxFBRoq\"><b>慈宁宫</b> 汇集千年雕塑精品，一部古代雕塑的浓缩史。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-466891960904495b6d14a8acf3c13612_720w.jpg?source=b1748391?rss\" data-caption=\"断虹桥;©Terre Arctica, CC BY-SA 4.0 &amp;lt;https://creativecommons.org/licenses/by-sa/4.0&amp;gt;, via Wikimedia Commons\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"original\" data-original-src=\"v2-466891960904495b6d14a8acf3c13612\" data-watermark-src=\"v2-46e48a9f701c8bd90dd464f8838d3c10\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"ShfLIWHf\"><b>断虹桥 </b>宫里唯一的元代遗迹，在这里邂逅憨萌石狮。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-8bf5ef6082361392782978c804c8f7c5_720w.jpg?source=b1748391?rss\" data-caption=\"©evenstarlsj/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"721\" data-watermark=\"original\" data-original-src=\"v2-8bf5ef6082361392782978c804c8f7c5\" data-watermark-src=\"v2-b3b632e13f88339449c0f656f2087f8d\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"-F0wwm47\"><b>宫猫</b> 常出没在御花园、慈宁宫花园等静谧的角落。</p>\n<p><br></p>\n<h2>04 颐 和 园</h2>\n<p data-pid=\"i3C7jbOs\"><i><b>1998年11月被列入《世界遗产名录》</b></i></p>\n<blockquote data-pid=\"tvK6D0CC\">北京颐和园，始建于1750年，1860年在战火中严重损毁，1886年在原址上重新进行了修缮。其亭台、长廊、殿堂、庙宇和小桥等人工景观与自然山峦和开阔的湖面相互和谐地融为一体，具有极高的审美价值，堪称中国风景园林设计中的杰作。——摘自UNESCO World Heritage（<a href=\"http://link.zhihu.com/?target=http%3A//www.unesco.org\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">unesco.org</span><span class=\"invisible\"></span></a>）</blockquote>\n<p><img src=\"https://pic1.zhimg.com/v2-a6c2ff303d77cb19efc05019dfd5a987_720w.png?source=b1748391?rss\" data-caption=\"©gong hangxu/GettyImages\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-a6c2ff303d77cb19efc05019dfd5a987\" data-watermark-src=\"v2-e739f4a5bd439ecd5e3fc6191ecaf00e\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"3IDbwA1A\">乾隆年间一项引水入京的水利建设工程，使北京西北部的这片湿地逐步变成了一座290公顷的顶级皇家园林。粗略一看不过一山一湖，但290公顷的<b>皇家顶级园林</b>其实大有乾坤，仔细打量，佛寺、廊桥、亭台、楼阁、园林的精巧细节和故事说道如百科全书般浩瀚。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-99dac9268a52a8f1e5aad8be7de371ba_720w.jpg?source=b1748391?rss\" data-caption=\"春节期间的颐和园长廊挂起红灯笼并开放景观灯;©高晨翔/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"718\" data-watermark=\"original\" data-original-src=\"v2-99dac9268a52a8f1e5aad8be7de371ba\" data-watermark-src=\"v2-d9d9e696c3b5f3ef1844860e78d77c54\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"JGm8Gqtg\">乾隆皇帝将它命名为<b>清漪园</b>，把对江南西湖的情思寄托于这里的昆明湖，又在万寿山修建了寺庙、居所，作为寿礼献给母亲。如今你可以漫步园林，也可以泛舟湖中，一年四季皆有所赏。</p>\n<p><br></p>\n<p data-pid=\"SnazXWZm\"><b>万寿山</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-b6683fcaf037afa618a57e4d8c749887_720w.jpg?source=b1748391?rss\" data-caption=\"©shizhao, CC BY-SA 2.0 &amp;lt;https://creativecommons.org/licenses/by-sa/2.0&amp;gt;, via Wikimedia Commons\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"561\" data-watermark=\"original\" data-original-src=\"v2-b6683fcaf037afa618a57e4d8c749887\" data-watermark-src=\"v2-0d55b09e782f5e099148ca41747ab2eb\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"3-q7Msqq\">乾隆皇帝为祝母亲六十大寿，把瓮山更名为万寿山，但万寿山现存的建筑大多是光绪年间为慈禧祝寿重修的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-59914e3f865074cce0de1d2abacbebf3_720w.jpg?source=b1748391?rss\" data-caption=\"夏季的颐和园佛香阁，风云变幻阴晴霞蔚;©光影的记忆/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"706\" data-watermark=\"original\" data-original-src=\"v2-59914e3f865074cce0de1d2abacbebf3\" data-watermark-src=\"v2-cac3ff520a378b7d7ed0d5704fb252c8\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"JyLVNBXT\">前山的<b>佛香阁景区</b>是颐和园最显赫的建筑群，从山脚的牌楼，到慈禧举行庆寿典礼的排云殿，再到山顶八面三层四重檐的佛香阁，一座座建筑沿轴线层层上升。</p>\n<p><img src=\"https://pica.zhimg.com/v2-4f04290d1cf41f57d539dbe65093392c_720w.png?source=b1748391?rss\" data-caption=\"©Lonely Planet\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1621\" data-watermark=\"original\" data-original-src=\"v2-4f04290d1cf41f57d539dbe65093392c\" data-watermark-src=\"v2-ca0bbef554b28efb150b5adfc3efde52\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Ise6QJPo\">出佛香阁便是后山，青绿琉璃外墙的<b>智慧海</b>（无量殿）和汉藏混合式建筑群<b>四大部洲</b>，象征佛教中的须弥灵境。</p>\n<p><br></p>\n<p data-pid=\"Iwx2f-eo\"><b>昆明湖</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-36b55cb0adf7b887302a23fb55b04ec5_720w.jpg?source=b1748391?rss\" data-caption=\"©肥挺超级肥/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"718\" data-watermark=\"original\" data-original-src=\"v2-36b55cb0adf7b887302a23fb55b04ec5\" data-watermark-src=\"v2-fab7613e625e5d6e7ce875066f5042fb\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"LJ_l1Z1l\">万寿山下的昆明湖原是一片浅湖。乾隆年间兴修水利，这里彻底被清淤、疏浚，面积扩大了两倍。从昆明湖挖出的土垒成了万寿山，形成了山高水阔的园林雏形。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-919c502cde0208d02c73270c79322f9e_720w.png?source=b1748391?rss\" data-caption=\"©Lonely Planet\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1621\" data-watermark=\"original\" data-original-src=\"v2-919c502cde0208d02c73270c79322f9e\" data-watermark-src=\"v2-e0a358d9e5aae8a2efa243334e2483e2\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"u2t_83YI\">同样有六座桥的西堤是仿照<b>西湖苏堤</b>建造的，除三四月桃红柳绿的时节，西堤是游人最少的漫步佳境。<b>绣漪桥</b>是西堤和东堤的连接点，也是昆明湖与长河的交汇处。<b>十七孔桥</b>连接了东堤和南湖岛，乾隆和慈禧曾分别在岛上的涵虚堂检阅过当朝的水军操演。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-5909865878c7a31256bb4d1ab806bd46_720w.png?source=b1748391?rss\" data-caption=\"©aphotostory/GettyImages\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"original\" data-original-src=\"v2-5909865878c7a31256bb4d1ab806bd46\" data-watermark-src=\"v2-2a336fdfff80773f9157c158d43a518c\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"pMc1ZOAD\">东堤北边，<b>知春亭</b>因每年春天湖水从此地开始解冻而得名。昆明湖北岸，全长728米的长廊是中国园林中最长的画廊。</p>\n<p><img src=\"https://pica.zhimg.com/v2-b22aedfcc74931caa2efec5d572d1856_720w.png?source=b1748391?rss\" data-caption=\"©Shootdiem/Shutterstock\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"736\" data-watermark=\"original\" data-original-src=\"v2-b22aedfcc74931caa2efec5d572d1856\" data-watermark-src=\"v2-8c092d66b3477dc47ade2c1667e95b71\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"VUj4TdlZ\">每年3月下旬至11月上旬，湖周有5处码头可租乘小船游湖，大型的画舫船有固定航线往来于南湖岛、排云殿、铜牛和清晏舫码头间。<b>清晏舫</b>也叫石舫，是一座石质的船形建筑，也是颐和园唯一一座西洋式建筑。</p>\n<p><br></p>\n<p data-pid=\"ZNk3c7EG\"><b>宫廷区</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-b0971b4b66d0aeaca3f6077244f5c4f8_720w.jpg?source=b1748391?rss\" data-caption=\"颐和园仁寿殿;©x1nbly_s2/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"540\" data-watermark=\"original\" data-original-src=\"v2-b0971b4b66d0aeaca3f6077244f5c4f8\" data-watermark-src=\"v2-9241ee1f97f1f67aac59a5341d95e1da\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"xUNSGtoD\">昆明湖东北岸的宫廷区分为东侧用于理政和接待外国使臣的<b>仁寿殿</b>，以及西侧的寝宫区，后者包括皇帝住的<b>玉澜堂</b>、皇后住的<b>宜芸馆</b>和慈禧太后居住的<b>乐寿堂</b>。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-c04bf110afd6c91ed2cdd3c9e4f34af3_720w.jpg?source=b1748391?rss\" data-caption=\"颐和园文昌阁;©caoyadong, CC BY-SA 3.0 &amp;lt;https://creativecommons.org/licenses/by-sa/3.0&amp;gt;, via Wikimedia Commons\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"original\" data-original-src=\"v2-c04bf110afd6c91ed2cdd3c9e4f34af3\" data-watermark-src=\"v2-2c0cc5ec49f192f09140139089f38e01\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"CfQeBcMP\"><b>乐寿堂</b>殿前还能看见象征“六和太平”的铜鹿、铜鹤、大铜瓶，堂前种着慈禧钟爱的白玉兰，每年春天依然盛开。东宫门处的<b>文昌阁</b>常常被游客忽略，这里能看见颐和园收藏陈列的文物及宫廷珍宝。</p>\n<p><br></p>\n<h2>05 天 坛</h2>\n<p data-pid=\"YM2FXwUX\"><i><b>1998年11月被列入《世界遗产名录》</b></i></p>\n<blockquote data-pid=\"c9KW40cx\">天坛，建于15世纪上半叶，座落在皇家园林当中，四周古松环抱，是保存完好的坛庙建筑群。无论在整体布局还是单一建筑上，都反映出天地之间（即人神之间）的关系，而这一关系在中国古代宇宙观中占据着核心位置。同时，这些建筑还体现出帝王在这一关系中所起的独特作用。——摘自UNESCO World Heritage（<a href=\"http://link.zhihu.com/?target=http%3A//www.unesco.org\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">unesco.org</span><span class=\"invisible\"></span></a>）</blockquote>\n<p><img src=\"https://pic3.zhimg.com/v2-88ba7ad6f7907544fcb8a901eff11129_720w.jpg?source=b1748391?rss\" data-caption=\"©M_丫丫/图虫创意\" data-size=\"normal\" data-rawwidth=\"958\" data-rawheight=\"1280\" data-watermark=\"original\" data-original-src=\"v2-88ba7ad6f7907544fcb8a901eff11129\" data-watermark-src=\"v2-004bc13f766636d01576be5d46c1ecb8\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"0sVxMdG3\">这里有世界最大的<b>祭天建筑群</b>。明清时期皇帝最重要的祭祀活动就在这里举行。春分时在北边以祈年殿为中心的祈谷坛，祈祷丰年；冬至日在以圜丘为中心的圜丘坛，感恩天赐。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-261c7c66a6274f253c4ae6a7dbb0b592_720w.jpg?source=b1748391?rss\" data-caption=\"北京市天坛公园丹陛桥;©海峰/图虫创意\" data-size=\"normal\" data-rawwidth=\"853\" data-rawheight=\"1280\" data-watermark=\"original\" data-original-src=\"v2-261c7c66a6274f253c4ae6a7dbb0b592\" data-watermark-src=\"v2-9c11f75d9ba3344006231dc052023cb9\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"h9pZAOSM\">两坛以<b>丹陛桥</b>相连，形成一条南北长1200米的轴线。每年春分、秋分日出日落时，可观赏到祈年殿的“悬日”美景。四五月间，园子西北区次第盛开的杏花、丁香和遍地绽放的二月兰也是一景。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-d43c722d8084c7f9ffa51583f9792f19_720w.jpg?source=b1748391?rss\" data-caption=\"奔跑在天坛公园;©三小洲/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"original\" data-original-src=\"v2-d43c722d8084c7f9ffa51583f9792f19\" data-watermark-src=\"v2-615044bb75a9bd51405120c7678c80c9\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"tzVNu1FM\">天坛的面积是故宫的4倍。<b>外坛</b>的东门和游廊周边是北京老年人的活动场所，唱咏器乐、操拳舞蹈之外，还有各式绝活儿，可以慢慢溜达看个新鲜。 </p>\n<p><img src=\"https://pic3.zhimg.com/v2-f20ee292cfca3aa2d1a850717236e5c6_720w.jpg?source=b1748391?rss\" data-caption=\"圜丘;©Herbert wie, CC BY-SA 4.0 &amp;lt;https://creativecommons.org/licenses/by-sa/4.0&amp;gt;, via Wikimedia Commons\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"716\" data-watermark=\"original\" data-original-src=\"v2-f20ee292cfca3aa2d1a850717236e5c6\" data-watermark-src=\"v2-1eea115e03dd5dfcc4959defabe8680b\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"opxDsu3b\">如果时间有限，就只游览内坛——<b>祈年殿</b>、<b>圜丘</b>和<b>回音壁</b>，这些构成了天坛核心的建筑，不仅承载了祭祀文化的精髓，也造就了中国声学建筑的奇迹。</p>\n<p><br></p>\n<h2>06 明 十 三 陵</h2>\n<p data-pid=\"ON7J7ipA\"><i><b>2003年7月作为明清皇家陵寝的扩展项目被正式列入《世界遗产名录》</b></i></p>\n<blockquote data-pid=\"39jSIGqJ\">明清皇陵与大自然有机融合，是人类的杰作，也是中国历史上最后两个封建王朝（明朝和清朝）文化和建筑传统的独特见证。它们是结合了汉族和满族文明的建筑艺术的精品。——摘自UNESCO World Heritage（<a href=\"http://link.zhihu.com/?target=http%3A//www.unesco.org\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">unesco.org</span><span class=\"invisible\"></span></a>）</blockquote>\n<p><img src=\"https://pic2.zhimg.com/v2-93d7ac6cb18886dcb261eb9bb438a6dd_720w.png?source=b1748391?rss\" data-caption=\"©Lonely Planet\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1621\" data-watermark=\"original\" data-original-src=\"v2-93d7ac6cb18886dcb261eb9bb438a6dd\" data-watermark-src=\"v2-e490033e2b358b114e9681ee21a802b1\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"CbGVNdZC\">明十三陵，是明朝十三位皇帝的龙眠之所。至明朝灭亡时，陵区总面积超过当时的北京城，达到120平方公里，堪称明朝的另一座“紫禁城”。目前只有<b>长陵</b>、<b>定陵</b>、<b>昭陵</b>3座陵墓对外开放。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-807781550251d5fb713a314a31203acf_720w.jpg?source=b1748391?rss\" data-caption=\"明十三陵神道入口及大宫门;©Charlie fong, CC BY-SA 4.0 &amp;lt;https://creativecommons.org/licenses/by-sa/4.0&amp;gt;, via Wikimedia Commons\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"original\" data-original-src=\"v2-807781550251d5fb713a314a31203acf\" data-watermark-src=\"v2-8af85a9abfa99ea46f16c189fbbf23a5\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"Pj7YHfH4\">我们推荐你在<b>旅游淡季</b>造访这个热门景点，穿行在苍松翠柏与红墙碧瓦之间，流连于出土珍宝和“明朝那些事儿”，继而走入宏大又阴森的地宫感受帝王的孤独，不失为一场全方位的游览体验。 </p>\n<p><br></p>\n<p data-pid=\"W7XHOeL1\"><b>定陵</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-686e96e90a9ec8418a56f02a505296b4_720w.jpg?source=b1748391?rss\" data-caption=\"©超级走动的蚂蚁小哥/图虫创意\" data-size=\"normal\" data-rawwidth=\"856\" data-rawheight=\"1280\" data-watermark=\"original\" data-original-src=\"v2-686e96e90a9ec8418a56f02a505296b4\" data-watermark-src=\"v2-c521e9e0f2aa11f40b0f1fdb173f40bc\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"YFdUKtta\">定陵是<b>明神宗朱翊钧</b>和孝端、孝靖两位皇后的陵墓。60多年前那次震惊世界也颇有争议的考古发掘打开了神秘的地宫，跟随“中央新影”纪录片的镜头，万历皇帝、皇后的棺椁，以及随葬的无数奇珍异宝一下成了万众瞩目的焦点，也让规模并非最大的定陵成为中国唯一被官方开掘的帝陵。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-a3598fdabc71d183e4e8f3845e7b71a7_720w.jpg?source=b1748391?rss\" data-caption=\"定陵;©Gary Todd from Xinzheng, China, CC0, via Wikimedia Commons\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1715\" data-watermark=\"original\" data-original-src=\"v2-a3598fdabc71d183e4e8f3845e7b71a7\" data-watermark-src=\"v2-9bf19fe0bec5fcb16755f21c775633fc\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"ElSwZ4wk\">定陵为明帝陵规制的<b>前方后圆</b>三进式格局。你的参观路线大体上也是顺时针一周。1957年进行考古挖掘时，第一个进入地宫的不是考古工作者，而是用来试探毒气机关的大公鸡。</p>\n<p><br></p>\n<p data-pid=\"mAGPgfrf\"><b>长陵</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-a9857838c06416547d9b61bf2db75ba3_720w.jpg?source=b1748391?rss\" data-caption=\"明长陵内明成祖像;©Anagoria, CC BY 3.0 &amp;lt;https://creativecommons.org/licenses/by/3.0&amp;gt;, via Wikimedia Commons\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1438\" data-watermark=\"original\" data-original-src=\"v2-a9857838c06416547d9b61bf2db75ba3\" data-watermark-src=\"v2-7653b440fe1926f805936e3f2e47b52c\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"7mkt7v6K\">长陵是<b>明成祖朱棣</b>和皇后徐氏的陵寝，为明十三陵之首，建筑年代最早，规模最大，用料也最为奢华。 </p>\n<p><img src=\"https://pic3.zhimg.com/v2-a8f8f87ab6e883756f85443fb0d8da4f_720w.png?source=b1748391?rss\" data-caption=\"裬恩殿;©Lonely Planet\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"original\" data-original-src=\"v2-a8f8f87ab6e883756f85443fb0d8da4f\" data-watermark-src=\"v2-cbcf383d5cc8734e2c52e4b459615aa8\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"MQ3GseJj\">穿过陵门，之后就是坐落在三层汉白玉须弥座上的主殿<b>裬恩殿</b>。这座仿明代紫禁城奉天殿（太和殿前身）而建的大殿，在规模上仅次于故宫太和殿和太庙享殿，殿内60根金丝楠木柱是中国现存古建中的“顶配”。殿顶沥粉贴金坐龙图案的天花，也可与太和殿媲美。 </p>\n<p><br></p>\n<p data-pid=\"SxR2ZlTM\"><b>昭陵</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-68403e5d3267eb209213c1b6d5edee06_720w.jpg?source=b1748391?rss\" data-caption=\"明昭陵明楼;©Can Zhao, CC BY-SA 3.0 &amp;lt;https://creativecommons.org/licenses/by-sa/3.0&amp;gt;, via Wikimedia Commons\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"715\" data-watermark=\"original\" data-original-src=\"v2-68403e5d3267eb209213c1b6d5edee06\" data-watermark-src=\"v2-dd05c2c7d163c7e0b3051ceaa33fbec2\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"fsZa0sqX\">昭陵是开放的三座帝陵中最小的一座，为<b>明穆宗朱载垕</b>和他的三位皇后的陵寝，布局与前面两个帝陵一致，但很多建筑都是20世纪八九十年代复建的。 </p>\n<p data-pid=\"Iu3EIPr8\"><b>神路</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-1a386222f2ebdd8ca7c86d6dcb0fc1c5_720w.jpg?source=b1748391?rss\" data-caption=\"北京明十三陵神路;©静图摄影/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"original\" data-original-src=\"v2-1a386222f2ebdd8ca7c86d6dcb0fc1c5\" data-watermark-src=\"v2-6b100bb929967879bfd6c23af3612a22\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"KT2w9oTI\">神路南起<b>石牌坊</b>，北至长陵，全长7公里，以前专为长陵而筑，如今你可以将它视作通往十三陵的门户。 </p>\n<p><img src=\"https://pic1.zhimg.com/v2-1a20f16ffc6defb00454798ff9ce8c4a_720w.jpg?source=b1748391?rss\" data-caption=\"©Gary Todd from Xinzheng, China, CC0, via Wikimedia Commons\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1620\" data-watermark=\"original\" data-original-src=\"v2-1a20f16ffc6defb00454798ff9ce8c4a\" data-watermark-src=\"v2-e55f531a8e9dfefca26162ffb5786287\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"R_g1nn4Q\">神路景区全长1.5公里，从长陵<b>神功圣德碑亭</b>开始，以棂星门结束。碑亭中的<b>龙子赑屃</b>背负着中国现存最大的石碑，全碑原为红漆覆体，现已完全脱落。在这条神路上走一遭，犹如穿梭于人神两界，昔日帝王的权力与威仪尽收眼底。 </p>\n<p><br></p>\n<h2>07 大 运 河</h2>\n<p data-pid=\"qGdEhn6j\"><i><b>2014年6月被列入《世界遗产名录》</b></i></p>\n<blockquote data-pid=\"gbyghgKJ\">中国大运河的开凿始于公元前5世纪，7世纪完成第一次全线贯通，是世界上唯一一个为确保粮食运输（“漕运”）安全，以达到稳定政权、维持帝国统一的目的，由国家投资开凿和管理的巨大工程体系，在国家统一、政权稳定、经济繁荣、文化交流和科技发展等方面发挥了不可替代的作用。——摘自大运河遗产官网（<a href=\"http://link.zhihu.com/?target=http%3A//www.chinagrandcanal.com\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">chinagrandcanal.com</span><span class=\"invisible\"></span></a>）</blockquote>\n<p><img src=\"https://pica.zhimg.com/v2-710a0e079423e5bd5831eab912140db0_720w.png?source=b1748391?rss\" data-caption=\"©TonyV3112/Shutterstock\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-710a0e079423e5bd5831eab912140db0\" data-watermark-src=\"v2-4c7e7d49d9a94d8cc937ffcc84341bab\" data-private-watermark-src=\"\"></p>\n<p><br></p>\n<p data-pid=\"XyvqtKQE\"><b>| 在京城的海里寻觅运河踪迹</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-ba70cbd0165f1d6f3dccb8eed7ee67f0_720w.png?source=b1748391?rss\" data-caption=\"银锭桥;©Richard Ross/GettyImages\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"original\" data-original-src=\"v2-ba70cbd0165f1d6f3dccb8eed7ee67f0\" data-watermark-src=\"v2-3360b4fec62da80ca22656aba3871497\" data-private-watermark-src=\"\"></p>\n<p><br></p>\n<p data-pid=\"rWEvpHKX\"><b>前海</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-9b64ed2479f209b15e68d6f9c5442f7c_720w.jpg?source=b1748391?rss\" data-caption=\"万宁桥;©N509FZ, CC BY-SA 4.0 &amp;lt;https://creativecommons.org/licenses/by-sa/4.0&amp;gt;, via Wikimedia Commons\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"720\" data-watermark=\"original\" data-original-src=\"v2-9b64ed2479f209b15e68d6f9c5442f7c\" data-watermark-src=\"v2-d41a4f7b3884d82f82a3eef073cb18a2\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"OO5WBtXw\">从最热闹的<b>银锭桥</b>开始，一直向东南方向延伸至平安大街，广阔的水域都是前海的范围，这片湖泊连通了后海与北海。从南岸沿湖穿过婆娑的柳林，尽头的<b>万宁桥</b>是当初<b>京杭大运河</b>的起点，时至今日仍可行车。</p>\n<p><br></p>\n<p data-pid=\"xKFu1cLr\"><b>什刹海</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-6b64a41e89f627443c16698a967faf83_720w.jpg?source=b1748391?rss\" data-caption=\"什刹海的早晨;©随意走走/图虫创意\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"721\" data-watermark=\"original\" data-original-src=\"v2-6b64a41e89f627443c16698a967faf83\" data-watermark-src=\"v2-37d40c88cd92c29a1ba2c4534c5de548\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"VNYmID-V\">早在元代，忽必烈的元大都便是依托这片水域为中心，在东岸确定了都城建设的中轴线。当初为了加强大都的漕运，开凿了<b>通惠河</b>，让<b>京杭大运河</b>流入城内，形成了一个巨大的湖泊，当时这一整片宽而长的水域被称作“积水潭”，成为漕运的总码头，来自杭州的船能直接行驶到这里，东北岸边的烟袋斜街和钟鼓楼一带也因此成为大都城中最为繁华的闹市。</p>\n<p><img src=\"https://pica.zhimg.com/v2-24e718877060c31851edaedb569391bf_720w.jpg?source=b1748391?rss\" data-caption=\"©赵德柱先生/图虫创意\" data-size=\"normal\" data-rawwidth=\"853\" data-rawheight=\"1280\" data-watermark=\"original\" data-original-src=\"v2-24e718877060c31851edaedb569391bf\" data-watermark-src=\"v2-15fa56591bb99f164a3fbe160745b1e1\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"FH4gIs8I\">明代兴建皇城时，为保证皇家用水，将流经元代皇城东墙外的运河圈入城内。从此，通惠河与积水潭的联系被切断，湖面缩小，逐渐形成现在的西海、后海、前海三个“藕断丝连”的海子。</p>\n<p><br></p>\n<p><br></p>\n<p data-pid=\"NdiGtVbE\"><b>看完LP的这份世遗清单</b></p>\n<p data-pid=\"oEkDWwyh\"><b>你对北京有哪些新的了解？</b></p>\n<p data-pid=\"I3S-0N3C\"><b>你还知道哪些世遗目的地？</b></p>\n<p data-pid=\"4lti-v2L\"><b>快来评论区和我们一起分享吧~</b></p>\n<p><br></p>\n<p><br></p>\n<p><img src=\"https://pic3.zhimg.com/v2-cbf1844fb432df9744797aa4aa24084a_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"small\" data-rawwidth=\"1080\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-cbf1844fb432df9744797aa4aa24084a\" data-watermark-src=\"v2-9720179a44a8c6bd051c8ae678dd7e48\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-396906c2e59f13369405545b726e9782_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1102\" data-rawheight=\"318\" data-watermark=\"original\" data-original-src=\"v2-396906c2e59f13369405545b726e9782\" data-watermark-src=\"v2-4158ca18cc9c1a74f01699586bce94fb\" data-private-watermark-src=\"\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-c9231231e87b9f4e31965423b40aa53b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"827\" data-watermark=\"original\" data-original-src=\"v2-c9231231e87b9f4e31965423b40aa53b\" data-watermark-src=\"v2-9c6d027312f99deece34bcb8b35879b8\" data-private-watermark-src=\"\" data-qrcode-action=\"none\" data-qrcode-value=\"http://weixin.qq.com/r/1kjz63TEJylYrTCI9x3E\" data-tags=\"qrcode\"></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/lonelyplanet-15?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">LonelyPlanet</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>延伸阅读：<br><a href=\"http://www.zhihu.com/question/534890260?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">北京有哪些景点的风景类似世外仙境？</a><br><a href=\"http://www.zhihu.com/question/521054543?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">密云区有哪些知名度高的人文景点值得一去？</a><br>\n","link":"http://www.zhihu.com/question/497862110/answer/2557628102?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"当我在拍照时，我在思考什么？","date":"2022-07-04 06:29:57","description":"当你觉得有趣，当你为之心动，当你觉得这就是内心的追寻，当你愿意把有限的时间停留在照片定格的这一刻时，这大概就是拍摄一张照片的意义所在。<a href=\"https://sspai.com/post/74083\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74083"},{"title":"苹果 Safari 浏览器突破 10 亿用户大关，该浏览器都有哪些亮点？","date":"2022-07-04 06:01:28","description":"\n<h2>前端快爆</h2>\n<ul>\n<li data-pid=\"OUzipIUr\">\n<a href=\"http://link.zhihu.com/?target=https%3A//developer.chrome.com/blog/new-in-chrome-103/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Chrome 103 发布</a>，主要有以下新功能：</li>\n<ul>\n<li data-pid=\"mEnLzufd\">支持 103 HTTP 响应码导航，当 103 响应内容中包含 <code>&lt;link rel=preload&gt;</code> 或其他链接标头时，Chrome 会在收到最终响应之前尝试预加载、预连接、预取指定资源，开发者可以利用该特性优化核心网页指标，比如 LCP（最大面积渲染时间）。</li>\n<li data-pid=\"68dyGXGj\">支持了 <code><a href=\"http://link.zhihu.com/?target=https%3A//developer.mozilla.org/en-US/docs/Web/API/AbortSignal/timeout%23browser_compatibility\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">AbortSignal.timeout()</a></code>，可以在异步 API 上实现更简单的超时方法。此前 Firefox 100、Safari 16、Node.js 17.3.0 已经支持。</li>\n</ul>\n</ul>\n<div class=\"highlight\"><pre><code class=\"language-js\"><span></span><span class=\"c1\">// 之前</span>\n<span class=\"kr\">const</span> <span class=\"nx\">controller</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">AbortController</span><span class=\"p\">();</span>\n<span class=\"kr\">const</span> <span class=\"nx\">signal</span> <span class=\"o\">=</span> <span class=\"nx\">controller</span><span class=\"p\">.</span><span class=\"nx\">signal</span><span class=\"p\">;</span>\n<span class=\"kr\">const</span> <span class=\"nx\">resp</span> <span class=\"o\">=</span> <span class=\"nx\">fetch</span><span class=\"p\">(</span><span class=\"nx\">url</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">signal</span> <span class=\"p\">});</span>\n\n<span class=\"nx\">setTimeout</span><span class=\"p\">(()</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// abort the fetch after 6 seconds</span>\n  <span class=\"nx\">controller</span><span class=\"p\">.</span><span class=\"nx\">abort</span><span class=\"p\">();</span>\n<span class=\"p\">},</span> <span class=\"mi\">6000</span><span class=\"p\">);</span>\n\n<span class=\"c1\">// 使用 AbortSignal.timeout() 后</span>\n<span class=\"kr\">const</span> <span class=\"nx\">signal</span> <span class=\"o\">=</span> <span class=\"nx\">AbortSignal</span><span class=\"p\">.</span><span class=\"nx\">timeout</span><span class=\"p\">(</span><span class=\"mi\">6000</span><span class=\"p\">);</span>\n<span class=\"kr\">const</span> <span class=\"nx\">resp</span> <span class=\"o\">=</span> <span class=\"nx\">fetch</span><span class=\"p\">(</span><span class=\"nx\">url</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">signal</span> <span class=\"p\">});</span>\n</code></pre></div>\n<ul><ul><li data-pid=\"Hcvsr-AQ\">支持了 <a href=\"http://link.zhihu.com/?target=https%3A//web.dev/i18n/zh/local-fonts/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Local Font Access API</a>，可以在网页中获取用户安装在本地的字体列表并访问本地字体的 table 数据。</li></ul></ul>\n<div class=\"highlight\"><pre><code class=\"language-js\"><span></span><span class=\"k\">try</span> <span class=\"p\">{</span>\n  <span class=\"kr\">const</span> <span class=\"nx\">pickedFonts</span> <span class=\"o\">=</span> <span class=\"nx\">await</span> <span class=\"nb\">window</span><span class=\"p\">.</span><span class=\"nx\">queryLocalFonts</span><span class=\"p\">();</span>\n  <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kr\">const</span> <span class=\"nx\">fontData</span> <span class=\"k\">of</span> <span class=\"nx\">pickedFonts</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">fontData</span><span class=\"p\">.</span><span class=\"nx\">postscriptName</span><span class=\"p\">);</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">fontData</span><span class=\"p\">.</span><span class=\"nx\">fullName</span><span class=\"p\">);</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">fontData</span><span class=\"p\">.</span><span class=\"nx\">family</span><span class=\"p\">);</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">fontData</span><span class=\"p\">.</span><span class=\"nx\">style</span><span class=\"p\">);</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span> <span class=\"k\">catch</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">.</span><span class=\"nx\">name</span><span class=\"p\">,</span> <span class=\"nx\">err</span><span class=\"p\">.</span><span class=\"nx\">message</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<ul><ul>\n<li data-pid=\"7XfETEnz\">支持了新的压缩格式 “deflate-raw”，开发者可以访问没有任何文件头/脚的原始 deflate 流，可用于压缩文件的读写。</li>\n<li data-pid=\"noaELoBV\">新的原创试验功能：凭证管理联盟，允许用户使用联盟账户登录网站，以保护用户的隐私。</li>\n<li data-pid=\"k7lwB9ZM\">DevTools 的拾色器现在可以吸取浏览器窗口外颜色了（<a href=\"http://link.zhihu.com/?target=https%3A//chromium-review.googlesource.com/c/devtools/devtools-frontend/%2B/3134563\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">By 一丝</a>），<a href=\"http://link.zhihu.com/?target=https%3A//webkit.org/blog/12992/release-notes-for-safari-technology-preview-148/%23%3A~%3Atext%3Dadded%2520eyedropper%2520to%2520the%2520color%2520picker\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Safari Technology Preview 148</a> 紧随其后，也支持了该功能。</li>\n</ul></ul>\n<p><img src=\"https://pic3.zhimg.com/v2-66e6daec69eb94744b56e7d4737199b7_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1156\" data-rawheight=\"1000\" data-watermark=\"watermark\" data-original-src=\"v2-66e6daec69eb94744b56e7d4737199b7\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<ul>\n<li data-pid=\"hCtuNlXj\">在 WWDC22 上，<a href=\"http://link.zhihu.com/?target=https%3A//webkit.org/blog/12824/news-from-wwdc-webkit-features-in-safari-16-beta/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Safari 16 Beta 发布</a>，主要有以下新功能：</li>\n<ul><li data-pid=\"y497bdNs\">\n<b>CSS Container Queries</b>（容器查询），允许根据容器的大小而不是视口的大小来调整网页上特定元素的布局或样式。</li></ul>\n</ul>\n<p><img src=\"https://pic3.zhimg.com/v2-693717596452efc82c08f6c705c3cb7c_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-693717596452efc82c08f6c705c3cb7c\" data-watermark-src=\"v2-e594fd3911f8700757fa29a036eb7c62\" data-private-watermark-src=\"\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<ul><ul>\n<li data-pid=\"Bbmrl9Or\">\n<b>CSS Subgrid</b>，Subgrid 将 Grid 布局提升到了一个新的层次，它提供了一种简单的方法，将网格容器的孙子元素放置在网格中，使得在不受HTML结构的限制的前提下，实现更复杂的布局成为可能。</li>\n<li data-pid=\"ezcX8m18\">支持了 <b><a href=\"http://link.zhihu.com/?target=https%3A//developer.mozilla.org/en-US/docs/Web/CSS/offset-path\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CSS Offset Path</a></b> (Motion Path) ，为 CSS 带来了全新的基于路径的动画（注意该版本是初步实现，在<a href=\"http://link.zhihu.com/?target=https%3A//webkit.org/blog/12992/release-notes-for-safari-technology-preview-148/%23%3A~%3Atext%3Dclass%2520%28250424%2540main%29-%2Cimplemented%2520ray%28%29%2C-shape%2520in%2520offset\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">后续版本中</a>会有更多特性的支持）。</li>\n<li data-pid=\"CyXI8O9X\">支持了 <b><a href=\"http://link.zhihu.com/?target=https%3A//developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">CSS Overscroll Behavior</a></b>，当用户在一个可滚动的元素内滚动并到达末尾时，您现在可以控制在页面的其余部分上是否停止或允许继续滚动。</li>\n<li data-pid=\"-N_lJ0sc\">支持了 <b>Web Push</b>，网站和 Web 应用程序可以远程用户发送通知，即使 Safari 没有运行，也可以发送这些通知。它使用与其他浏览器相同的 Web 标准组合：<a href=\"http://link.zhihu.com/?target=https%3A//developer.mozilla.org/en-US/docs/Web/API/Push_API\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Push API</a> 和 <a href=\"http://link.zhihu.com/?target=https%3A//developer.mozilla.org/en-US/docs/Web/API/Notifications_API\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Notifications API</a>，以及 <a href=\"http://link.zhihu.com/?target=https%3A//developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Service Worker API</a>。</li>\n<li data-pid=\"cNY54aED\">开发者工具增加了<b> Flexbox 可视化调试工具</b>，可以更加方便的调试 Flexbox 布局。</li>\n</ul></ul>\n<p><br></p>\n<ul>\n<li data-pid=\"y-lbUf0T\">2022 年 6 月 22 日，第 123 届 Ecma 大会批准了 <a href=\"http://link.zhihu.com/?target=https%3A//2ality.com/2022/06/ecmascript-2022.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">ECMAScript 2022</a> 语言规范。主要包含：</li>\n<ul>\n<li data-pid=\"NDHuesdv\">\n<a href=\"http://link.zhihu.com/?target=https%3A//github.com/tc39/proposal-class-fields\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">声明类的字段</a>（Class Fields）：类字段可以在类的顶层被定义和初始化。</li>\n<li data-pid=\"Gkd9TeoJ\">新增 <code>#</code>标识符来定义<a href=\"http://link.zhihu.com/?target=https%3A//github.com/tc39/proposal-private-methods\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">私有方法和字段</a>。</li>\n<li data-pid=\"wGNaQfz9\">\n<a href=\"http://link.zhihu.com/?target=https%3A//github.com/tc39/proposal-static-class-features\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">类的静态公共方法和字段</a>：在上述的类的字段（Class Fields）和私有方法提案的基础上，增加了<b>静态公共字段</b>、<b>静态私有方法</b>和<b>静态私有字段</b>的特性。</li>\n<li data-pid=\"qe2NaD2Q\">Top-level await：允许在 <code>async</code> 函数外部使用 <code>await</code> 字段。</li>\n<li data-pid=\"E6hBmJUb\">Error Cause：为 Error 构造函数增加了<code>cause</code> 属性，通过这个属性为抛出的错误附加错误原因，来清晰的跨越多个调用栈传递错误上下文信息。（这是首个由中国提出并进入规范的提案，由阿里的「吞吞」提出）。</li>\n</ul>\n</ul>\n<div class=\"highlight\"><pre><code class=\"language-js\"><span></span><span class=\"k\">try</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"nx\">await</span> <span class=\"nx\">fetch</span><span class=\"p\">(</span><span class=\"s1\">'foo'</span><span class=\"p\">)</span> <span class=\"c1\">// 抛出一个 low level 错误</span>\n    <span class=\"p\">.</span><span class=\"k\">catch</span><span class=\"p\">(</span><span class=\"nx\">err</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n      <span class=\"c1\">// 将 low level 错误包装成一个 high level、易懂的错误</span>\n      <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nb\">Error</span><span class=\"p\">(</span><span class=\"s1\">'Download raw resource failed'</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"nx\">cause</span><span class=\"o\">:</span> <span class=\"nx\">err</span> <span class=\"p\">})</span>\n    <span class=\"p\">})</span>\n<span class=\"p\">}</span> <span class=\"k\">catch</span> <span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">)</span>\n  <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"s1\">'Caused by'</span><span class=\"p\">,</span> <span class=\"nx\">err</span><span class=\"p\">.</span><span class=\"nx\">cause</span><span class=\"p\">)</span>\n  <span class=\"c1\">// Error: Download raw resource failed</span>\n  <span class=\"c1\">// Caused by TypeError: Failed to fetch</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<ul><ul>\n<li data-pid=\"yqKYtumS\">String、Array 和 TypedArray 新增 <code>.at()</code> 方法，允许负数索引。</li>\n<li data-pid=\"jdx6Y3Lh\">\n<code>Object.hasOwn()</code>，可以用来替代 <code>Object.prototype.hasOwnProperty()</code>。</li>\n<li data-pid=\"_BRyNBEc\">增加<code>/d</code> 正则表达式匹配索引，为匹配的子字符串提供开始和结束索引。</li>\n</ul></ul>\n<p><br></p>\n<ul><li data-pid=\"pqvKePYo\">再见 IE，Internet Explorer 的最后一个版本 11 已于 2022 年 6 月 15 日<a href=\"http://link.zhihu.com/?target=https%3A//docs.microsoft.com/en-us/lifecycle/announcements/internet-explorer-11-end-of-support\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">正式停止维护</a>。</li></ul>\n<p><br></p>\n<ul><li data-pid=\"lBeoiPeW\">\n<a href=\"http://link.zhihu.com/?target=https%3A//groups.google.com/a/chromium.org/g/blink-dev/c/n4zf_3FWmAA\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Chrome 即将正式发布 MathML</a>，MathML 是一种基于 XML 标准的规范，在网页中轻松描述和显示复杂的数学公式。MathML 历史悠久，从 Safari 5.1 起就开始支持。曾经和 Safari 同属 WebKit 内核的 Chrome 24 也昙花一现的支持过，但很快在 2013 年 2 月发布的 Chrome 25 中<a href=\"http://link.zhihu.com/?target=https%3A//chromereleases.googleblog.com/2013/02/stable-channel-update_21.html\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">由于安全原因禁用</a>了。如今，九年过去了，在 <a href=\"http://link.zhihu.com/?target=https%3A//mathml.igalia.com/project/\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Igalia</a> 公司的不断努力下，终于让网页中的数学排版再次迎来曙光。</li></ul>\n<p><img src=\"https://pica.zhimg.com/v2-e307176e4269adb0b2ce2c71f2a42326_720w.gif?source=b1748391?rss\" data-caption=\"图片来源：https://people.igalia.com/fwang/2022-blinkon-16-remainder-estimate-for-mathml-integration/#/23\" data-size=\"normal\" data-rawwidth=\"802\" data-rawheight=\"300\" data-watermark=\"watermark\" data-original-src=\"v2-e307176e4269adb0b2ce2c71f2a42326\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<h2>优秀 Demo</h2>\n<ul><li data-pid=\"5i9OgmL5\"><a href=\"http://link.zhihu.com/?target=https%3A//codepen.io/jh3y/pen/jOzNQyG\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">3D 气球和房子</a></li></ul>\n<p><img src=\"https://picx.zhimg.com/v2-0d77f5e8e279d5b6c994ba1219da8b20_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1038\" data-rawheight=\"726\" data-watermark=\"watermark\" data-original-src=\"v2-0d77f5e8e279d5b6c994ba1219da8b20\" data-watermark-src=\"v2-fc522958e9c9af90e526db83ad940e53\" data-private-watermark-src=\"\"></p>\n<ul><li data-pid=\"H6YgUBiA\"><a href=\"http://link.zhihu.com/?target=https%3A//twitter.com/MikkoH/status/1541529590652456964\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">Safari 通过 &lt;model&gt; 元素支持 3D 渲染</a></li></ul>\n<p><img src=\"https://pic1.zhimg.com/v2-639d50aa7ec48a637bc42e644ad2726c_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1170\" data-rawheight=\"558\" data-watermark=\"watermark\" data-original-src=\"v2-639d50aa7ec48a637bc42e644ad2726c\" data-watermark-src=\"v2-eae37ece4077394cda12b0c2e594310f\" data-private-watermark-src=\"\"></p>\n<hr>\n<p data-pid=\"Rh8UrAXy\">本期编辑：@一丝；审阅：@墨尘 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/3ec3b166992a5a90a1083945d2490d38\" data-hash=\"3ec3b166992a5a90a1083945d2490d38\" data-hovercard=\"p$b$3ec3b166992a5a90a1083945d2490d38\">@贺师俊</a> <a class=\"member_mention\" href=\"http://www.zhihu.com/people/49d887d9671861f21479a6cdcca81d51\" data-hash=\"49d887d9671861f21479a6cdcca81d51\" data-hovercard=\"p$b$49d887d9671861f21479a6cdcca81d51\">@紫云飞</a> </p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/ysbl?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">一丝</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/535493086/answer/2557197309?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">8 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/535583817?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">苹果 Safari 浏览器用户数突破 10 亿，这意味着什么？</a><br><a href=\"http://www.zhihu.com/question/535620964?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">报告显示苹果 Safari 浏览器突破 10 亿用户大关，这一报告说明了什么？</a><br>\n","link":"http://www.zhihu.com/question/535493086/answer/2557197309?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"随时待命的听歌识曲，这项 Pixel 独占功能现在你也可以体验","date":"2022-07-04 03:30:00","description":"借助 Ambient Music Mod 这个开源项目，我们得以把 Pixel 独占的「闻曲知音」功能带到其他 Android 设备上来。<a href=\"https://sspai.com/post/74109\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74109"},{"title":"派早报：欧盟通过控制加密资产新规，显卡缺货显缓解趋势等","date":"2022-07-04 00:48:44","description":"你可能错过的新鲜事欧盟通过控制加密资产新规据新华网转载外媒报道，当地时间6月30日，欧洲议会和欧盟理事会就一系列新规达成协议，旨在终结加密货币交易的匿名性，使得加密资产用作非法活动支付工具的犯罪分子更 ...<a href=\"https://sspai.com/post/74102\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74102"},{"title":"消毒剂选购不完全指南","date":"2022-07-03 03:55:47","description":"在这篇文章中，我想带你搞懂日常清洁卫生能用到的消毒剂怎么买怎么用。除了要知道基础的消毒剂分类知识、消毒效果之外，最重要的是一定要了解消毒产品的有效消毒成分含量以及对应的使用配比。另外，还会对比市售消毒剂的浓度差别，帮你在之后选购消毒剂的时候能够找到更合适的那一款。那么就一步一步来吧。<p>[......]</p>\n<a href=\"https://sspai.com/prime/story/disinfectant\" target=\"_blank\">查看全文</a><p>本文为会员文章，出自<a href=\"https://sspai.com/prime/precog/single\" target=\"_blank\">《单篇文章》</a>，订阅后可阅读全文。</p>\n","link":"https://sspai.com/prime/story/disinfectant"},{"title":"如何评价动画《开心宝贝》（又名开心超人）？","date":"2022-07-02 08:36:54","description":"\n<p data-pid=\"SGwYnncc\">       大家好！我是黄伟明，《开心超人》的总导演，一名动画和漫画创作人。可能大家会更熟悉我的另一部作品《喜羊羊与灰太狼》，但其实“开心超人”这个IP在今年也迈入了第12周年，今天（7月2日）正是《开心超人》的12岁生日，在这里首先要感谢关观众朋友们对我们明星动画团队这部作品的支持和喜爱。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-8db6711a76093ea35beb8bd60a925ef0_720w.jpg?source=b1748391?rss\" data-rawwidth=\"4250\" data-rawheight=\"7559\" data-size=\"normal\" data-watermark=\"watermark\" data-original-src=\"v2-8db6711a76093ea35beb8bd60a925ef0\" data-watermark-src=\"v2-697168fe06574f23a86d46e8676e0d67\" data-private-watermark-src=\"v2-9513714ae42070d225a3ae64e2a3f2c9\"></p>\n<p data-pid=\"OevcAAXH\">        12周年看上去似乎很长，自2010年首播起，“开心超人”已经积累了19部TV动画剧集，超过1000集内容，还陆续出了3部大电影。能够延续不断地产出新的作品，离不开观众朋友们对我们的支持与肯定；而对于一个作品来说，时间长河的考验永不停息，12周年其实也仅仅一轮，“开心超人”这个IP仍存在很大上升空间，系列动画还将继续更新，和观众们一起不断成长，为大家带来更好的内容，也衷心地希望观众朋友们还可以陪我们继续走下去。就像粉丝们经常说的——“开联永不毕业”，我们也将不忘初心，坚持创作下去。</p>\n<p data-pid=\"EXps66fw\"><b>创作初衷——中国的“有血有肉”的超人故事</b></p>\n<p data-pid=\"8eMlhEze\">      谈起创作“开心超人”的契机，其实源于我自己从小的一个“超人梦”。当年在创作了《喜羊羊与灰太狼》这个童话冒险类型的动画系列之后，我想做一个科幻超人类型故事的动画片，尝试全新的类型。当时是2009年，那时中国还没有自己的超人，一说到超人可能就会想到美国或者是日本的超人，我就想能不能创作一个不一样的超人系列，希望能够创作出一个独属于中国小朋友的正能量的超级英雄。于是我和团队一起创作了现在的开心超人、甜心超人、花心超人、粗心超人、小心超人等五个超人，他们各自代表着一种精神力量——勇敢、善良、自信、宽容、坚毅。在“开心超人”的故事中，超人们都拥有神奇的超能力，但同时每个超人也都会有自己的缺点，都是不完美的，就像每个普通人一样有血有肉，我们相信在这样立体丰满的人物背景之下，他们的正义善良的正能量也更加能够引人共情。也许有些人会认为“超人打怪兽”仿佛就能够概括“开心超人”的故事，但是，我相信一直追下来的观众们一定知道，我们想要表达的远不止于此。</p>\n<p><img src=\"https://pica.zhimg.com/v2-00d398ab0e2ef20413552b4d4f899032_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1366\" data-rawheight=\"768\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-00d398ab0e2ef20413552b4d4f899032\" data-watermark-src=\"v2-ebd9fe5c870c970d863c5790ee2a19c6\" data-private-watermark-src=\"v2-ab3b3c2b7b0f28eefeb81ed47f81fdc8\"></p>\n<p data-pid=\"kefpdCj8\"><b>十二周年——内容为王，名场面辈出</b></p>\n<p data-pid=\"pBA1fB9-\">       我记得曾经有个粉丝给我发了一张照片，照片上是他们一群小伙伴在地铁站台一起看地铁信息屏幕里播放的《开心宝贝》动画片，他们欢快的笑容正是对我们创作者最好的嘉奖。</p>\n<p><img src=\"https://pica.zhimg.com/v2-ea15c29b1580157ca8a46ff5ef4377f4_720w.jpg?source=b1748391?rss\" data-rawwidth=\"480\" data-rawheight=\"637\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-ea15c29b1580157ca8a46ff5ef4377f4\" data-watermark-src=\"v2-f07eebf4f690ef887b0747fb808f7677\" data-private-watermark-src=\"v2-22ecccd2eb2b6ea9d9525a1898ab1461\"></p>\n<p data-pid=\"QU7Wn6l6\">         从第一季“开心超人”（《开心宝贝》）开始，这个系列就一直坚持着我和团队最擅长的喜剧风格，以超人和怪兽的冲突为主线，开启爆笑日常单元剧集模式，而这个剧情风格，在欢快的主题曲《开心往前飞》的加持下，创造了很多观众童年的欢乐时刻。至今《开心往前飞》在抖音b站这样的年轻人平台中依然热度不减，被大家称为“刻进DNA里的旋律”。很多粉丝都笑称“这对小学生来说可能有点幼稚，对大学生来说刚刚好。”</p>\n<p data-pid=\"7GA2qcEn\">         十二周年之际，我们发布了《开心往前飞》12周年纪念MV中也选取了一部分剧集中讨论度非常高的、粉丝们印象深刻的“名场面”——</p>\n<p><img src=\"https://pica.zhimg.com/v2-31547c09133d6c5cccc39c7497078368_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"第一季《开心宝贝》中，开心超人的第一次变身\" data-watermark=\"watermark\" data-original-src=\"v2-31547c09133d6c5cccc39c7497078368\" data-watermark-src=\"v2-7fa809a4d97ac94b6fd0a0ae531ad450\" data-private-watermark-src=\"v2-9ce1d95f242f4d5e916cbe25681a8890\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-22d743df81a9966e695a8e45918cff38_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"第三季《开心超人大作战》中，伽罗的初登场\" data-watermark=\"watermark\" data-original-src=\"v2-22d743df81a9966e695a8e45918cff38\" data-watermark-src=\"v2-7f998eddfd7d21781cbf6d9cad6ca5b0\" data-private-watermark-src=\"v2-6f018334fab1457c7ba482e55cba9b0b\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-ce795d8a6e5f210efb4113e16baa6560_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\" 大电影1“开心超人”中，大小怪的搞笑耍宝\" data-watermark=\"watermark\" data-original-src=\"v2-ce795d8a6e5f210efb4113e16baa6560\" data-watermark-src=\"v2-bf8085d92070cce79e8d00b1427f61a2\" data-private-watermark-src=\"v2-b6429930dfa19b17483b5dcde26dc8ab\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-1f873e8191e0e4e263ca06e09c8963bd_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"第十一季《星际危机》中，花心超人的帅气时刻\" data-watermark=\"watermark\" data-original-src=\"v2-1f873e8191e0e4e263ca06e09c8963bd\" data-watermark-src=\"v2-dd343e0c8f1844ebecc282cd41261152\" data-private-watermark-src=\"v2-eac49486e7261e3a5dd3fe6ed76204ac\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-9879a221430542cf866d603f9147de81_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"第十三季《能源核守护者》中，甜心超人的高光表现\" data-watermark=\"watermark\" data-original-src=\"v2-9879a221430542cf866d603f9147de81\" data-watermark-src=\"v2-2510eaac1d3c42a70fbe99102e3ed904\" data-private-watermark-src=\"v2-a426392670393600cd9c391833329297\"></p>\n<p><img src=\"https://pica.zhimg.com/v2-2dfc6f8506d9dbc365128fbb68669e2b_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"最新季《异星迷航》中，五超人与灵光星五人的破釜沉舟\" data-watermark=\"watermark\" data-original-src=\"v2-2dfc6f8506d9dbc365128fbb68669e2b\" data-watermark-src=\"v2-a53f88d8890a20ba5931450e104970f8\" data-private-watermark-src=\"v2-1127eac8d27336f17a4a03786617302b\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-467d20d05cd037a71cc074dfd3e5425d_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-467d20d05cd037a71cc074dfd3e5425d\" data-watermark-src=\"v2-b0157ee56e3e1500cf00584bcb787523\" data-private-watermark-src=\"v2-4a7f1f6d3ab70f7fef601d94090bae3b\"></p>\n<p data-pid=\"OWjARSYm\">这些“名场面”也展现了我们一路走来的历程。</p>\n<p data-pid=\"a2WJP-7z\"><b>成长升级——创新和挑战永不止步</b></p>\n<p data-pid=\"kOJ1cH80\">时代不断向前发展，市场的需求也在不断地变化，观众也陪伴着我们一起成长，12年以来，“开心超人”已然经历了多次的创新和升级。</p>\n<p data-pid=\"FXSzpJey\">在2016年，随着第十季《开心超人联盟之英雄归来》动画的开播，在延续爆笑剧情的前提之下，我们在画风上做了大胆的尝试与创新，那时品牌已经6岁了，突如其来的画风巨变必然是一次巨大的冒险。为了更多元的剧情展现方式，也为了让更多人能够看到这部作品，我们选择和观众们一起“长大”，从小短腿，变为更长身，也为超人们增加了不少细节设计。刚播出的时候可能会有部分观众感到不适应，但后来观众们的积极评价与豆瓣9.1分的评分都告诉我们，生动的人物塑造、精彩流畅的打戏和丰富的剧情，都是观众所期待和看好的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-a9412e765eef4705d81573b6807cd01f_720w.jpg?source=b1748391?rss\" data-rawwidth=\"978\" data-rawheight=\"1156\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-a9412e765eef4705d81573b6807cd01f\" data-watermark-src=\"v2-bbd19cf59dc604426378126a07e651c5\" data-private-watermark-src=\"v2-a6a9dc2a901ab93b850ad84c51ffb9e4\"></p>\n<p data-pid=\"48xSacRm\">       同时，从第十季开始，我们也开始尝试轻连续剧情，第十一和第十二季则逐步深入地刻画剧情，直到第十三季《能源核守护者》，剧情模式真正转化为带有贯穿全季主线的连续剧情模式，当然，为了电视观众的断续观看习惯，我们也会在此基础上保持每一集仍为一个独立的故事。单集独立让观众可以无负担地入坑，连续的伏笔也能吸引大家持续追到完结。</p>\n<p data-pid=\"qrzHH8zK\">        客观上说，近年来短视频的爆发改变了人们观看视频的习惯，从大数据上看人们似乎开始倾向于短平快的内容，但我和团队始终相信内容为王才是作品的核心，片长不是枷锁，连续剧情带来的更丰富的故事体验，是观众追剧时期待收获的。整整十七季剧集加两个番外篇，超人们从守护星星球到开始去其他星球执行守护任务，我们不断地挖掘新的故事内容，拓展“开联宇宙”的世界观，保持长期高质量的更新。</p>\n<p data-pid=\"-b9kXeOJ\">        今年5月20日首播的第十七季《开心超人联盟之异星迷航》，讲述了星星球遭遇由未知的木马程序导致的机器人大混乱，开心超人穿越到过去的灵光星星寻找能清除木马程序的和平代码的故事。又是一次全新的旅途，也有全新的角色——灵光星五人的登场，他们各自的经历随着剧情展开，引人入胜。《异星迷航》在首播三周的时间内迅速全网点击破亿，目前已经全集登陆bilibili，依旧热度不减。</p>\n<p><img src=\"https://pica.zhimg.com/v2-3f75d8963bc64c4d99cb02389a48b587_720w.jpg?source=b1748391?rss\" data-rawwidth=\"5760\" data-rawheight=\"3240\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-3f75d8963bc64c4d99cb02389a48b587\" data-watermark-src=\"v2-1d98b9ddd6198b124e20b02914e80219\" data-private-watermark-src=\"v2-d319a57cfb16c049df5496bd7de654ab\"></p>\n<p data-pid=\"5luMbzdP\">       好的收视数据足以说明观众对创新内容的期待与认可。在今年暑假即将上映的《开心超人之英雄的心》大电影，是“开心超人”睽违大荧幕8年的回归之作，也将延续创新的剧情，同时它也是我和团队的第一次全三维大电影的尝试，在电影中，超人们的形象有较大的升级和创新。</p>\n<p data-pid=\"wHAhNL6f\">       这次尝试无论对我还是对团队来说都是巨大的挑战，最终呈现的结果也许还有许多的不足，但是也是团队一起多个彻夜努力不休的诚意之作，我们希望能够通过三维技术达到的立体的画面和逼真的特效效果，让观众在大荧幕上能够体验到身临其境之感，为大家带来一视听盛宴。如果还能有下一次的机会，我们也会再度升级，努力做得更好。</p>\n<p data-pid=\"_xcCBFvI\">       这次的大电影不仅仅有画面的升级，剧情上也有不少惊喜。我希望在剧情上也能够让人耳目一新，打破“动画片只是给小朋友看”的刻板印象，做出无论什么年龄层的观众都能够看的“全年龄”作品。影片具体精彩的剧情希望大家能到电影院中一看究竟，它将在7月22日正式上映，现每周六、周日都在持续点映中。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-e3ce237dc06b5d6c525e4e9a32c85cc8_720w.jpg?source=b1748391?rss\" data-rawwidth=\"8661\" data-rawheight=\"4872\" data-size=\"normal\" data-caption=\"\" data-watermark=\"watermark\" data-original-src=\"v2-e3ce237dc06b5d6c525e4e9a32c85cc8\" data-watermark-src=\"v2-ba25e0e347277e24b53afaa660587b4b\" data-private-watermark-src=\"v2-0bf5aa2b0f2d23accf38e13cc44e810c\"></p>\n<p data-pid=\"vtTQb7k9\">      十二周年，1000多集内容19部TV剧集，3部大电影，“开心超人”系列已经过十二年的历练，成为观众们认可的常青IP，而观看“开心超人”的孩子们也已经长大，“不论几岁开心万岁”，我们也将继续守护大家的“开心童心”，保持创作初心，砥砺前行，努力创新，继续进步，不断“破圈”，希望下一个十二年、以后的每一年，大家继续陪我们一起走下去！</p>\n<p data-pid=\"l9pLYa3O\">再度感谢大家的支持与陪伴！</p>\n<p data-pid=\"5y5Rkpx8\">一起祝《开心超人》12岁生日快乐！</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/huang-wei-ming-leohuang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">黄伟明</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/40589001/answer/2554854471?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">75 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/535215878?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">你觉得最能代表动画《喜羊羊与灰太狼》的角色是谁？</a><br><a href=\"http://www.zhihu.com/question/523189123?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">动画《喜羊羊与灰太狼》有哪些名场面？</a><br>\n","link":"http://www.zhihu.com/question/40589001/answer/2554854471?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"大家都说好的蛋白粉，我们应该如何取舍","date":"2022-07-02 07:00:00","description":"声明：本文与任何品牌或产品均无利益相关警示信息：本文中出现的蛋白质摄入量推荐值和推荐高值仅适用于健康人群。目前没有证据表明蛋白粉有明确的副作用，但蛋白质摄入量总体超标有潜在健康风险。某些慢性疾病患者需 ...<a href=\"https://sspai.com/post/74090\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74090"},{"title":"堵车时，发动机频繁启停会对发动机寿命造成严重的不良影响吗？","date":"2022-06-30 10:18:07","description":"\n<p data-pid=\"qPoOwFX5\">自动启停（怠速起停）系统，在城市拥堵路段时，在临时停车的时刻（拥堵、红绿灯），发动机熄火，不再空转耗油（怠速空转3分钟，约等于1公里行驶的耗油量），不再排放污染气体。待到需要的时候，再次启动发动机驱动车辆。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-cdd9644a25e07e566c5dd75076a798cb_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"550\" data-rawheight=\"318\" data-watermark=\"watermark\" data-original-src=\"v2-cdd9644a25e07e566c5dd75076a798cb\" data-watermark-src=\"v2-448da35c632106aa8afb3509d19b7070\" data-private-watermark-src=\"v2-7cdb1c4320729467eaaadc7e9ab132fe\"></p>\n<p data-pid=\"FDMvYEt_\">装配自动启停的车辆，在城市拥堵路段的时候，根据启停频次/时间，可以节省3%-15%的燃油，还能减少有关碳/氮的污染气体的排放。</p>\n<p data-pid=\"3mgmekIr\">它的工作原理实际还是有一点复杂：</p>\n<p><img src=\"https://pic3.zhimg.com/v2-522c7fa2256be05c34388adb6b540cea_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"763\" data-rawheight=\"400\" data-watermark=\"watermark\" data-original-src=\"v2-522c7fa2256be05c34388adb6b540cea\" data-watermark-src=\"v2-ce59c3582fb1609371bbd761cd9746fa\" data-private-watermark-src=\"v2-a43cc4a5ac2a00646a4bcfde68848ead\"></p>\n<p data-pid=\"qMbjNYq6\"><b>1、开启了自动启停后</b>，当驾驶人需要短暂停车的时候（如红灯），驾驶人踩下制动踏板（深踩不放），车辆完全停止。</p>\n<p data-pid=\"xW3flQZn\"><b>2、Start/Stop系统开始检测。</b></p>\n<p data-pid=\"f3kw54HW\">1）发动机空转，转速较低</p>\n<p data-pid=\"vuC1tf8S\">2）防锁定系统的车轮转速传感器显示为零</p>\n<p data-pid=\"msjIXgHh\">3）电池传感器显示有足够的能量进行下一次发动机启动</p>\n<p data-pid=\"s1YOeU_N\">以上是三个基础条件，还有其他的一些判断细则。</p>\n<p data-pid=\"qmyKo60N\">比如发动机的转速还比较高，需要时间缓冲，不能立即熄火。比如是车刚开不久，蓄电池还没有充到足够的电量来供给下一次的发动机启动，发动机也不会熄火。或者车内外温差较大（车外温度过高或者过低），开启空调的状态（或者系统判断需要开空调的状态），这个时候都不能关闭发动机，因为蓄电池没有发动机的不停充电，是无法负荷大功率的车内电子电器的。另外环境温度过低，对电池和打火有影响，这个时候也不会关闭发动机。</p>\n<p><img src=\"https://pica.zhimg.com/v2-35bead6e85063525937e2091e8cd06b3_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"645\" data-rawheight=\"205\" data-watermark=\"watermark\" data-original-src=\"v2-35bead6e85063525937e2091e8cd06b3\" data-watermark-src=\"v2-989ea3c2b0b017aad50f602ed4186eee\" data-private-watermark-src=\"v2-dcb0c8fa6beabb9091f7b8a369db1512\"></p>\n<p data-pid=\"kFo1bhjA\">另外有的车型把安全措施放入检测环节，如驾驶员脱下安全带，车门打开，引擎盖打开，坡度是斜坡等情况，自动启停不工作，不会关闭发动机。</p>\n<p data-pid=\"ZrY7qv0c\">以上大概可以解释一下消费者的迷惑之处了，为什么明明自动启停明明开了，但是刹车踩了，发动机依旧不熄火。</p>\n<p data-pid=\"wlMfbMOK\"><b>3、挂挡/踩油门（离合）或松开刹车后</b>，专用启停电池开始点火，发动机启动，开始驱动车辆。</p>\n<p><br></p>\n<p data-pid=\"evPeo31X\"><b>说了启停的过程和原理，回到发动机频繁启停会对发动机寿命造成严重的影响吗？</b></p>\n<p data-pid=\"XcxIDwOR\">我们从汽油发动机的<b>点火系统、润滑系统、燃料供给系统</b>入手，看下自动启停对发动机的寿命是否有影响。</p>\n<p><br></p>\n<h3><b>点火系统</b></h3>\n<p data-pid=\"dB-Xnqf0\">按照发动机的各缸的需求（ECU判定），将电源供给的低压电转变为高压电，配送给各缸的火花塞，产生电火花，点燃气缸内的可燃气体。</p>\n<p><img src=\"https://pica.zhimg.com/v2-153b59e86a5d9354ddef27e6cbe0bf78_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"791\" data-rawheight=\"517\" data-watermark=\"watermark\" data-original-src=\"v2-153b59e86a5d9354ddef27e6cbe0bf78\" data-watermark-src=\"v2-4fb5ae2b81718de69377cbcd7e42d9cf\" data-private-watermark-src=\"v2-13002de4b097aa70eb348215ce6e0f92\"></p>\n<p data-pid=\"O_JhB_6A\">如果发动机频繁点火，则会对<b>电瓶</b>造成消耗。</p>\n<p data-pid=\"3WZhLPcG\">所以，为了应付这种频繁启动，有自动启停的车辆一般都会配高频次、高强度充放电的<b>AGM电池</b>。（普通电瓶寿命1-2万次，AGM电瓶使用寿命在6万次以上）</p>\n<p><img src=\"https://picx.zhimg.com/v2-36498f922a8b0a7737d2e38e9bf7d4dc_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"708\" data-rawheight=\"462\" data-watermark=\"watermark\" data-original-src=\"v2-36498f922a8b0a7737d2e38e9bf7d4dc\" data-watermark-src=\"v2-48248b17c4bf4386d6da1cfd50eedb33\" data-private-watermark-src=\"v2-169ebb578a4cf4da518828814f91e497\"></p>\n<p data-pid=\"I3LzUeo_\">这里小小强调一下，普通电瓶（价格一两百）是不能充当自动启停电瓶（价格一般上千）的。高频次高强度充放电下，普通电瓶寿命很难撑过一年。当然，如果上车就把启停关掉，那么普通电瓶也可以在装载了自动启停的车上正常使用。</p>\n<p data-pid=\"lVnXIuAg\">所以，发动机频繁启停，实际在专配电瓶的辅助下，没啥大的不良影响。</p>\n<p><br></p>\n<h3><b>润滑系统</b></h3>\n<p data-pid=\"uVQI71-p\">发动机工作时，机油（润滑剂）传送到到各摩擦件（如活塞环与气缸壁之间），在摩擦表面之间形成油膜，减少摩擦阻力，降低功耗损耗，减轻磨损，延长发动机使用寿命。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-02b00328188402d1f5768104e53ae3d2_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"705\" data-rawheight=\"430\" data-watermark=\"watermark\" data-original-src=\"v2-02b00328188402d1f5768104e53ae3d2\" data-watermark-src=\"v2-d66a1eb459bc8bd6f937a0816de870bd\" data-private-watermark-src=\"v2-e0c2a1ee3b16adbc86c44e827f208987\"></p>\n<p data-pid=\"vGzG46mh\">大家都知道汽油发动机的冷启动，如果在低温环境下车辆停放过久，比如冬天在室外停了一晚上，早上启动的时候，因为机油粘度增加，发动机温度没有升高，机油无法在摩擦表面有效形成油膜的时候，车辆最好是要热一下车再走，否则就会加剧发动机的磨损。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-d8044454f29d3265d22ead685f1cf871_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"909\" data-rawheight=\"577\" data-watermark=\"watermark\" data-original-src=\"v2-d8044454f29d3265d22ead685f1cf871\" data-watermark-src=\"v2-aeb4409e15601916a643b69872594476\" data-private-watermark-src=\"v2-171f556e27180f7704f0abda27d110a3\"></p>\n<p data-pid=\"sLQJe2Vp\">而实际这个就是我们经常所担心的源头。甚至有一些说法是，冷启动一次就相当于50-100公里的发动机磨耗。</p>\n<p data-pid=\"gnQOcpLi\">那么自动启停的时候，经常把发动机停了，是不是也会造成润滑的缺失，使得发动机损耗增加？</p>\n<p data-pid=\"j9zHwBjA\">答案是的确会有影响，但是影响非常小。</p>\n<p data-pid=\"Y9lYT4fw\">因为自动启停的时间基本都非常短，几十秒或者两三分钟，这个时间的间隔，发动机本身的温度依旧较高（发动机刚启动的时候，不会开启自动启停，一个是因为蓄电池还需要充电，另一个是发动机/蓄电池低温下可能有打火困难的现象），而机油也会残余在摩擦件的表面。但的确停的时间越久，机油的润滑效果就会变得较差，对发动机内部的摩擦件会有额外的损耗。</p>\n<p data-pid=\"aZZMp-gl\">但这种损耗对于车企入门级的车型，都敢公开表示百万公里质保的发动机来说，即便损耗10%，90万公里的路程，也是99.9999%的车主无法企及的路程了。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-c72298eb53df58e7fc15e0d77e28a4cb_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"756\" data-rawheight=\"135\" data-watermark=\"watermark\" data-original-src=\"v2-c72298eb53df58e7fc15e0d77e28a4cb\" data-watermark-src=\"v2-9d2756424f911a39f8c2c9354a638371\" data-private-watermark-src=\"v2-d4860e890095616992f2be238ca934d6\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-d936aa45f35c88dd3e3aee883a1df78e_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"699\" data-rawheight=\"133\" data-watermark=\"watermark\" data-original-src=\"v2-d936aa45f35c88dd3e3aee883a1df78e\" data-watermark-src=\"v2-ae0df020ecf182b478e88b5dda62cf83\" data-private-watermark-src=\"v2-17fedca2ceede628e98bd80eb1449b32\"></p>\n<p data-pid=\"J714Eid-\">所以，因为频繁启停造成的润滑系统不给力，产生的摩擦损害虽然有，但是对于消费者来说，发动机本身的冗长使用寿命就足够覆盖这些弊病了。</p>\n<p><br></p>\n<h3>燃料供给系统</h3>\n<p data-pid=\"8nvxZt12\">根据发动机不同工况，配置一定量（比例）的可燃混合气体，供给气缸使用。</p>\n<p data-pid=\"hxidlNXb\">有些人说自动启停，频繁启动发动机，就会造成积碳，伤害发动机的说法。我觉得这个也和冷启动的概念有所混淆。</p>\n<p data-pid=\"uKaHPKKg\">在冷启动的时候，因为发动机本身温度低，在低温下，汽油雾化效果较差，而为了达到正常的动力，原有的喷油量不足，那么燃油供给系统就会增大喷油量，质不行量来凑，来弥补燃烧不充分，提供能量不足的弊端。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-94cc6a2a4c25c156e706023280aac366_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"560\" data-rawheight=\"336\" data-watermark=\"watermark\" data-original-src=\"v2-94cc6a2a4c25c156e706023280aac366\" data-watermark-src=\"v2-9454a03ea90fde292bc57ae0ac7c2a93\" data-private-watermark-src=\"v2-bcfafefe809d092c85e8e62aefcfb453\"></p>\n<p data-pid=\"zIgz8iMq\">量又大，还燃烧不充分，自然就会产生大量积碳。这也是为什么天冷的地区，车型往往容易积碳的原因之一了。</p>\n<p data-pid=\"a8QOAydQ\">而自动启停下的停止怠速空转，反而会减少积碳。</p>\n<p data-pid=\"BJXiQ3Zi\">因为怠速下，供给的燃料很难完全燃烧。而停止了怠速空转，这就避免了怠速的积碳。等到几十秒，一两分钟后的重新启动，发动机温度还是高温状态（发动机温度过低，也不会开启自动启停，关闭发动机），燃油供给系统照常喷混合可燃气，也不会出现雾化不足的现象，也就还是正常的充分燃烧，也不会产生额外的积碳了。</p>\n<p><br></p>\n<p data-pid=\"Ub_7D_px\">（图片来源网络，侵删！）</p>\n<p><br></p>\n<p data-pid=\"gkIPKbk2\">参考资料：</p>\n<p data-pid=\"FVlh9c8c\">1、<a href=\"http://link.zhihu.com/?target=https%3A//www.qcwxjs.com/qicheyuanli/236480.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">qcwxjs.com/qicheyuanli/</span><span class=\"invisible\">236480.html</span><span class=\"ellipsis\"></span></a> </p>\n<p data-pid=\"V7q_dWsd\">2、<a href=\"http://link.zhihu.com/?target=https%3A//www.yoojia.com/article/9397918747582781984.html\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">yoojia.com/article/9397</span><span class=\"invisible\">918747582781984.html</span><span class=\"ellipsis\"></span></a></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/538637976/answer/2552123746?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">38 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/529662161?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">车辆空调开启时发动机转速不变化是怎么回事？</a><br><a href=\"http://www.zhihu.com/question/529672105?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">车辆空调开启时发动机转速不变化是什么原因造成的？</a><br>\n","link":"http://www.zhihu.com/question/538637976/answer/2552123746?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何让发动机用更少的油得到更多的动力？","date":"2022-06-30 10:15:44","description":"\n<p data-pid=\"2YtsU3zG\">如何让发动机用更少的油得到更多的动力，实际就是发动机的<b>节能技术</b>的运用。</p>\n<p data-pid=\"BxYswhR4\">综合来说，发动机节能技术有以下五个方向。</p>\n<ul>\n<li data-pid=\"CK8cT-oX\"><b>提高充气效率</b></li>\n<li data-pid=\"UE1Hgihk\"><b>提高发动机的机械效率</b></li>\n<li data-pid=\"iOnlKU_Q\"><b>可燃混合气含量与发动机工况的合理匹配</b></li>\n<li data-pid=\"tw2TFdIP\"><b>提高循环热效率</b></li>\n<li data-pid=\"S78ovWJm\"><b>提高发动机的压缩比</b></li>\n</ul>\n<p data-pid=\"yIYoC0lJ\">下面就选几个车企日常宣讲的改善方向，简单讲下。</p>\n<h3><b>提高充气效率</b></h3>\n<p data-pid=\"LVdno4Td\">发动机的原理，就是化学能转化为机械能，利用汽油的燃烧做功来驱动汽车。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-6ec4c5b32ac5781c2526716fdd4ebccf_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"300\" data-rawheight=\"465\" data-watermark=\"watermark\" data-original-src=\"v2-6ec4c5b32ac5781c2526716fdd4ebccf\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"BIta0H4q\">喷入气缸的可燃混合气效率越高，意味着发动机进气行程时，在同样大小的气缸容积下，进入气缸内的量越足，发动机的功率越大。</p>\n<p data-pid=\"TTORL3Tl\">另一方面，进入气缸的空气越多，供氧越多，燃烧就越充分，化学能转机械能就越彻底。</p>\n<p data-pid=\"5M6eK6yD\">这也是为啥燃油发动机去了高海波低氧的环境下动力明显不足的原因，就是进气压力低，充气量不足，且因为低气温造成了压缩温度降低。</p>\n<p data-pid=\"IwX1HRfR\">所以提高充气效率，就能有利经济性能的提高。</p>\n<p data-pid=\"3p_P4rZg\">一般来说，提高充气效率，在机械结构上，<b>需要减小进气系统的流动损失，减少排气系统的阻力，合理选择配气相位，减少进气环节的被动加热。</b></p>\n<p data-pid=\"5MwJDd5D\">如何减小进气系统的流动损失，实际要看<b>流通截面的优化</b>。从<b>空气滤清器、进气管、进气道、气门、气门座</b>这些流通环节来看，<b>气门座的流通截面积是最小的</b>，对进气流通的阻碍则是最大的。而解决气门座的流动阻力，就是见效最高的一个改善点。</p>\n<p data-pid=\"6K6UjS34\">现在采用的普遍方法就是增加气门的数目，采用<b>多气门（小气门）的结构</b>，比如三气门、四气门、五气门的架构，来增大进气门的流通面积，降低进气损失。多气门的控制一般来说有两种方式：1）通过凸轮或摇臂控制气门开关。2）进气道中设置旋转阀门，开关该气门的进气通道。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-a8fa43854c34f1c0631a4ca6f45971dc_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"watermark\" data-original-src=\"v2-a8fa43854c34f1c0631a4ca6f45971dc\" data-watermark-src=\"v2-afb1540091f13f2cc2d5d122fa3c3d02\" data-private-watermark-src=\"v2-c2fba3cc6a0978ee9a127f5024721389\"></p>\n<p data-pid=\"GLwot1r8\">现在的众多车型（汽车、大排量摩托车）很多都采用的四气门结构，可以形成屋脊形燃烧室，使得燃烧室结构更紧凑，燃烧更彻底，还能减少爆燃倾向。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-cb0b601cafb67958a9be1b3de9bbc4cf_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"907\" data-rawheight=\"239\" data-watermark=\"watermark\" data-original-src=\"v2-cb0b601cafb67958a9be1b3de9bbc4cf\" data-watermark-src=\"v2-a6409c895b66873fe7e06a891c003731\" data-private-watermark-src=\"v2-9a54b3aeb548700375405939071b9663\"></p>\n<p data-pid=\"sX7cfsvE\">另外，采用匹配发动机不同工况的<b>可变进气道系统</b>也是保障燃油经济性的有效手段。</p>\n<p data-pid=\"w-NF9fN1\">在不同工况下，<b>可变进气道采用不同长度和容积的进气管</b>向缸内充气，以便能形成惯性充气效应和谐振脉冲波效应，提高充气效率和发动机的动力性能。比如高速时，采用短且大直径的进气管，减少高速流动损失。低速时，采用较长且小直径的进气管，利用进气压力动态波动效应来提高充气效率。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-23545583eb8c9b9dde489179e498bb47_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"759\" data-rawheight=\"296\" data-watermark=\"watermark\" data-original-src=\"v2-23545583eb8c9b9dde489179e498bb47\" data-watermark-src=\"v2-452b4d75dac1e7feacd88925e15ad646\" data-private-watermark-src=\"v2-47ec72a116050caa0ca1ff5acf21f679\"></p>\n<p><br></p>\n<h3><b>提高发动机的机械效率</b></h3>\n<p data-pid=\"LpUZixmc\">提高机械效率的途径就是减少机械损失，让机械能尽量用在驱动车辆上，有效提高燃油的经济性。</p>\n<p data-pid=\"7IJTlmkn\">发动机的机械损失主要发生在三个环节：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-14421aed10eef4395cf620e9a101998b_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"953\" data-rawheight=\"507\" data-watermark=\"watermark\" data-original-src=\"v2-14421aed10eef4395cf620e9a101998b\" data-watermark-src=\"v2-36cd9a281cd87b08025cf16152bb4a4d\" data-private-watermark-src=\"v2-f6e4a3bb3a50770e4a9818581b1adcdf\"></p>\n<p data-pid=\"DGJrcFPz\"><b>1）机械摩擦损失</b></p>\n<p data-pid=\"6H9KGgGu\">指主机运动件的<b>机械摩擦、搅油及空气动力损失。</b></p>\n<p data-pid=\"LJnlC3uI\">其中最大的摩擦损失就是活塞环面、活塞裙面及活塞销三部分的摩擦损失造成。该摩擦损失接近整体机械损失的一小半。</p>\n<p data-pid=\"Q4AGu-KO\">活塞的环面需要和缸套紧密连接状态下滑动，活塞环面与缸壁的相对滑动摩擦是最大的消耗摩擦源。</p>\n<p><img src=\"https://pica.zhimg.com/v2-8afb45fd11abd198be147d89d1094e64_720w.png?source=b1748391?rss\" data-caption=\"磨损的活塞\" data-size=\"normal\" data-rawwidth=\"646\" data-rawheight=\"348\" data-watermark=\"watermark\" data-original-src=\"v2-8afb45fd11abd198be147d89d1094e64\" data-watermark-src=\"v2-f3b90a7a2dd55b3c8d6545f424697662\" data-private-watermark-src=\"v2-df7bcfc9a6da628cffb61e0e0f9a4994\"></p>\n<p data-pid=\"GXJnOEsi\">现在减少该处摩擦损失方法是减少活塞环的数目（三环减为两环）、减薄活塞环的厚度，减少活塞裙部的接触面积，增加裙部润滑等。</p>\n<p><img src=\"https://pica.zhimg.com/v2-4bd71efb7eaf91b776e3c8aced18ebb0_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"908\" data-rawheight=\"605\" data-watermark=\"watermark\" data-original-src=\"v2-4bd71efb7eaf91b776e3c8aced18ebb0\" data-watermark-src=\"v2-d51ffa790ee5c6d7dbc93f050579926c\" data-private-watermark-src=\"v2-9576006bc197dd3fa4f8b817cc3ad7ac\"></p>\n<p data-pid=\"-wOnk-IK\">其他机械摩擦损失还有轴承的摩擦、配气机构的摩擦和齿轮、链、带传动损失等。</p>\n<p data-pid=\"nvgbJPh5\"><b>2）附件消耗损失</b></p>\n<p data-pid=\"LcwoKbkb\">发动机运转时的辅助机构做功，如风冷、水冷、增压、调速、点火等需要的驱动功率等。这里就是整合附件减少消耗，并能和发动机进行联动，多功率可调整。</p>\n<p data-pid=\"iL6j_ohp\"><b>3）泵气损失</b></p>\n<p data-pid=\"kz0KhBq3\">进排气冲程中，节流和摩擦造成的能量损失。改善措施是减少流动摩擦带来的能量损失。</p>\n<p><br></p>\n<h3><b>提高发动机的压缩比</b></h3>\n<p data-pid=\"VM18uruZ\">发动机的压缩比是指<b>压缩前气缸内的最大容积与压缩后气缸内的最小容积的比值</b>。</p>\n<p><img src=\"https://picx.zhimg.com/v2-49c35d8ea219b349644c38eba0a1f54a_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"426\" data-watermark=\"watermark\" data-original-src=\"v2-49c35d8ea219b349644c38eba0a1f54a\" data-watermark-src=\"v2-195672b2f077028321752dc43167927a\" data-private-watermark-src=\"v2-223f0191f8ceddb219072c35762d1578\"></p>\n<p data-pid=\"iDXpMvXN\"><b>发动机的热效率是随压缩比的提高而提高的</b>。</p>\n<p data-pid=\"wkdBVjk9\">因为随着压缩比的增加，在气缸内的混合气体的温度/压力上升使得燃烧更加充分，可燃气体膨胀更大（做功更充分），化学能转驱动汽车的机械能更彻底，发动机的热效能也就更大了。</p>\n<p data-pid=\"nVZcCw_Z\">所以，同排量的发动机，如果压缩比高，那么肯定保障动力的同时就会更省油了。</p>\n<p><img src=\"https://pica.zhimg.com/v2-d4259a33ab7893193169080de1e26d75_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"736\" data-rawheight=\"184\" data-watermark=\"watermark\" data-original-src=\"v2-d4259a33ab7893193169080de1e26d75\" data-watermark-src=\"v2-6369975c5649d8903018a5950ea71847\" data-private-watermark-src=\"v2-dd760c793606e6af6a64c855adc0b5a2\"></p>\n<p data-pid=\"qUf_wBzp\">但压缩比虽然是越高越好，但是却和燃料的辛烷值密切相关。</p>\n<p data-pid=\"zeXqXnDA\">如果压缩比过高，辛烷值偏低，那么高压缩的燃气在未点火之前，就会因温度升高产生自燃现象，那么就很容易发生气缸爆燃现象，对发动机造成损害，严重甚至会发生金属敲击，破坏活塞，火花塞，对发动机内部构造产生永久性机械损坏。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-fc2ae5a5f4f82c78e48e3a229e8737c7_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"427\" data-watermark=\"watermark\" data-original-src=\"v2-fc2ae5a5f4f82c78e48e3a229e8737c7\" data-watermark-src=\"v2-67303ac989553bc4b381f439117bfe03\" data-private-watermark-src=\"v2-e1f3f343dba525ed4df779a1f57922f2\"></p>\n<p data-pid=\"kDbd4S0u\">这就是为什么有些车型需要加95号汽油，而有些车型只需要加92号汽油，就是因为越高的标号就代表着辛烷值越高（抗爆性越好），承受的压缩比越高。92号汽油就是要求研究法辛烷值不低于92号，95号汽油就是要求研究法辛烷值不低于95号。</p>\n<p data-pid=\"Bn9vs626\">之前写的一篇吉利的甲醇发动机，因为甲醇的比如甲醇的研究法辛烷值（RON）达112，马达法辛烷值（MON）为106。甲醇和汽油调和后的<a href=\"https://www.zhihu.com/search?q=%E8%BE%9B%E7%83%B7%E5%80%BC&amp;search_source=Entity&amp;hybrid_search_source=Entity&amp;hybrid_search_extra=%7B%22sourceType%22%3A%22answer%22%2C%22sourceId%22%3A2547100112%7D\" class=\"internal\">辛烷值</a>也比较高。</p>\n<a href=\"https://www.zhihu.com/question/539092380/answer/2547100112\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-c7f10b3e8a243715ed5d2bd0305bd2b0_qhd.jpg?source=b1748391\" data-image-width=\"1200\" data-image-height=\"800\" class=\"internal\">醇电混动专用发动机的工作原理是什么？未来醇电混动会取代燃油混动吗？</a><p data-pid=\"5bWnHvvx\">燃气辛烷值高，意味着可以承受的压缩比高。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-1a429f21948b5667123a832bc5d64119_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"920\" data-rawheight=\"329\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<blockquote data-pid=\"QG0LvEPx\">第4代帝豪醇电混动轿车搭载了吉利独创的四大节能技术。在硬件层面，全新一代1.8L醇电混动专用发动机赋予了汽车强大心脏，该发动机采用<b>12.5高压缩比设计</b>，搭配低摩擦技术，热效率达到41.5%，明显优于日系1.8L混动发动机。</blockquote>\n<p data-pid=\"xqAQTfI1\">所以，对于高辛烷值的燃油，可以采用高压缩比的设计，来提升燃油的经济性。</p>\n<p data-pid=\"pmJ3NfyQ\">说到这里，实际又涉及到<b>一个适配问题。</b></p>\n<p data-pid=\"G1adJDJ_\"><b>就是高压缩比的发动机能否加低标号油？</b></p>\n<p data-pid=\"fSZ9EPgR\"><b>低压缩比的发动机能否加高标号油呢？</b></p>\n<p data-pid=\"LgZeskMw\">实际发动机和辛烷值是应该搭配的，低压缩比发动机使用高辛烷值汽油时，反而因为适配度不好，会导致动力不足（高辛烷值的汽油无法在这个压缩比下充分燃烧），体现在加速的时候缓慢（整体燃烧过程推迟），且油耗并不会偏低。如果厂家发动机的适配度低。还会造成低压缩比的发动机的一些配件，如缸垫、气门产生烧蚀，对发动机造成损伤。</p>\n<p data-pid=\"cjPwLCUS\">高压缩比的发动机用低辛烷值汽油的时候，因为<b>低辛烷值加高压缩比会导致爆燃现象</b>。</p>\n<p data-pid=\"nurOpYvf\">在不该点燃的时候，低辛烷值汽油已经开始自燃，剧烈膨胀向下挤压活塞。而此时活塞还在按原计划上行压缩，两者力量相怼，使得气缸内的压力、温度急剧增加，导致末端未燃的混合气受到更强烈的热压缩，连锁反应导致更剧烈的不控制燃烧，甚至会对气缸内部产生十倍，乃至几十倍的正常燃烧的冲击力，从而损坏发动机。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-1b3eb1d14b8c14e411c22f75149bed81_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"697\" data-rawheight=\"481\" data-watermark=\"watermark\" data-original-src=\"v2-1b3eb1d14b8c14e411c22f75149bed81\" data-watermark-src=\"v2-f3cc1e9ac96a7326ffc1e65afcf972de\" data-private-watermark-src=\"v2-42c5e5befd6e81802334b181ad293c53\"></p>\n<p data-pid=\"sl1wRqZ3\">这也是为什么汽车说明要用95的油，结果加油站不小心加了92的，就得赶紧处理，否则开一段时间，就可能要修发动机了。</p>\n<p><br></p>\n<p data-pid=\"afPbAIgP\">（图片来源网络，侵删）</p>\n<p><br></p>\n<p data-pid=\"9Ba26yZP\">参考资料：</p>\n<p data-pid=\"jMBNw16r\">1、汽车节能技术与原理/刘玉梅主编  北京：机械工业出版社 2017.6</p>\n<p data-pid=\"RGsg0oK_\">2、<a href=\"http://link.zhihu.com/?target=https%3A//www.fx361.com/page/2020/0926/7212913.shtml\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://www.</span><span class=\"visible\">fx361.com/page/2020/092</span><span class=\"invisible\">6/7212913.shtml</span><span class=\"ellipsis\"></span></a> </p>\n<p data-pid=\"Oo2iaUKL\">3、<a href=\"http://link.zhihu.com/?target=http%3A//www.360doc.com/content/16/0805/15/31778043_581004214.shtml\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">http://www.</span><span class=\"visible\">360doc.com/content/16/0</span><span class=\"invisible\">805/15/31778043_581004214.shtml</span><span class=\"ellipsis\"></span></a></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/538030795/answer/2548950607?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">18 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/538567821?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为了在提高发动机性能同时并改善燃油经济性，汽车工程师们都做了哪些技术创新？</a><br><a href=\"http://www.zhihu.com/question/538650414?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">有哪些类似「可变气门」的技术可以提升发动机的燃油经济性？</a><br>\n","link":"http://www.zhihu.com/question/538030795/answer/2548950607?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"醇电混动专用发动机的工作原理是什么？未来醇电混动会取代燃油混动吗？","date":"2022-06-30 10:13:08","description":"\n<p data-pid=\"RQGw8Izg\"><b>醇电混动。</b></p>\n<p data-pid=\"UpOiBLr1\">这个词语对于习惯打拼音的我来说是真的别扭，一不小心就打成了“纯电混动”……</p>\n<p data-pid=\"woq4ivUO\">啥叫醇电，我们要先了解下这个<b>“醇”</b>是啥意思。</p>\n<p data-pid=\"399Fg7QE\">比如吉利的醇电混动，这里的“醇”指的是<b>甲醇（CH3OH）。</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-7224f5ac3fefafad641c1052efd55f76_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"646\" data-rawheight=\"306\" data-watermark=\"watermark\" data-original-src=\"v2-7224f5ac3fefafad641c1052efd55f76\" data-watermark-src=\"v2-48dad05802a272e4ef217cfe05602202\" data-private-watermark-src=\"v2-1135a545c6db07749f1e1396a4587f5c\"></p>\n<p data-pid=\"QAzWyPgL\">甲醇汽车就是以甲醇为主要燃料，掺烧汽油或者纯甲醇的两种模式。</p>\n<p data-pid=\"M6OBIhcZ\">现在一般用M15,M30,M85,M100来代表甲醇的纯度，M85表示85%的燃料是甲醇（15%是汽油），而M100就表示纯甲醇100%作为燃料。</p>\n<p data-pid=\"QUCAxJA7\">国家工信部把甲醇汽车定义为“<b>符合GB/T3730.1中汽车定义，装用专门设计开发的适用车用甲醇（M85或M100）燃料或甲醇-柴（汽）油双燃料的发动机。</b>”</p>\n<p data-pid=\"qxTP7CGT\">甲醇用于载具的研究早在百年前就已经开始了，在第一次世界大战的时候，就出现了甲醇燃料战车。但后来因为甲醇的毒性，容易伤害到人体，腐蚀金属和橡胶，后面甲醇就用在了火箭的助推剂上面。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4e5db7542f525f57cae7f83a6bb8351a_720w.jpg?source=b1748391?rss\" data-caption=\"以液氧和甲醇为燃料的德国火箭\" data-size=\"normal\" data-rawwidth=\"636\" data-rawheight=\"353\" data-watermark=\"watermark\" data-original-src=\"v2-4e5db7542f525f57cae7f83a6bb8351a\" data-watermark-src=\"v2-4f18ccef688a33ec7406235b35c1e9c8\" data-private-watermark-src=\"v2-500f2fdd7976b68f716f0356c32723b3\"></p>\n<p data-pid=\"J_myIOyx\">后面随着科技发展，和石油危机的影响，甲醇作为汽车燃料又一次被提出来。</p>\n<blockquote data-pid=\"5RJ4CHXk\">1975年，瑞典提出甲醇可以成为汽车代用燃料，并成立国家级甲醇开发公司；1976年在瑞典召开的第一次国际醇燃料会议（ISAF），推动了醇燃料的发展；德国于1979年制定了醇类燃料研究计划，组织6家汽车工厂、1000多辆燃醇汽车投入运行，并在国内主要城市建立M15加油站，形成全国供应甲醇汽油网络；1995年，美国DOE能源中心投入12700辆汽车进行甲醇汽油实验。</blockquote>\n<p data-pid=\"iYFKKRo5\">国内研究甲醇汽车起步较晚，2012年，工信部、发改委、科技部进行了一个1024辆甲醇汽车的大规模试点工作。后续多个省市也加入了试点，标志着政府对甲醇汽车开始了规模化扶持。</p>\n<p data-pid=\"dat4tU4t\">那么为什么要开发甲醇发动机……因为<b>甲醇便宜啊</b>……</p>\n<p data-pid=\"BUI2FIBt\">众所周知，我们日常在加油站里面加的油，很多都是加了醇类的。</p>\n<p><img src=\"https://pica.zhimg.com/v2-5a92bb84d495b3ffbbe27d8a9e6a72ef_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"759\" data-rawheight=\"503\" data-watermark=\"watermark\" data-original-src=\"v2-5a92bb84d495b3ffbbe27d8a9e6a72ef\" data-watermark-src=\"v2-59004d9158f5c6e1debfa4dc764f7a89\" data-private-watermark-src=\"v2-1abafded95f9b0efed62789c930adf10\"></p>\n<p data-pid=\"vSehikRT\">我们常见的这种打折厉害的，很多注意看标识，卖的都是乙醇汽油。</p>\n<p data-pid=\"7PWi2aP3\">比如E92,E95标识的，基本就是汽油里面加了10%-15%的乙醇。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-95ffdbde89520fef4e22bcb223f70cfc_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"500\" data-rawheight=\"354\" data-watermark=\"watermark\" data-original-src=\"v2-95ffdbde89520fef4e22bcb223f70cfc\" data-watermark-src=\"v2-e113699536ac4fca747653cc4ef1e3a1\" data-private-watermark-src=\"v2-e8ea43215bd745ba336e18196234723e\"></p>\n<p data-pid=\"AfOzN7df\"><b>汽油每吨大概7000-9000元，改性乙醇每吨大概4000-5000元，改性甲醇每吨2000-3000元。</b></p>\n<p data-pid=\"5bWnHvvx\">醇类汽油有一些优点，比如抗爆性强。比如甲醇的研究法辛烷值（RON）达112，马达法辛烷值（MON）为106。甲醇和汽油调和后的辛烷值也比较高。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-6f4e163d198bf7c89c3719bdf17a471a_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"920\" data-rawheight=\"329\" data-watermark=\"watermark\" data-original-src=\"v2-6f4e163d198bf7c89c3719bdf17a471a\" data-watermark-src=\"v2-1a429f21948b5667123a832bc5d64119\" data-private-watermark-src=\"v2-600e1ecd90e192503ce816d0d5d72847\"></p>\n<p data-pid=\"zHPFnknp\">排放尾气更清洁（含氧量高，燃烧充分，少排放碳），比如可以溶解汽油的一些副产物胶质和杂质（但如果是老车，开始使用醇类汽油，则容易造成溶解物过于粘稠而堵塞油路管道），但缺点也很明显。</p>\n<ul><li data-pid=\"cF42ihr1\">\n<b>醇类的热值比汽油要低很多</b>，甲醇的热值为19.60MJ/kg,汽油大概为43.50MJ/kg,甲醇的热值大概只有汽油的一小半左右。同样加50L的汽油和50L的掺醇类汽油，明显纯汽油的续航要长。</li></ul>\n<p><br></p>\n<ul><li data-pid=\"XgnQiRgJ\">\n<b>醇类这种有机溶剂，吸水性好</b>，意味着醇类汽油必须要抓紧用，因为放着不用，吸收水分，燃料里面水分过多，则会对燃油发动机造成伤害。一般我们现在加醇类汽油，如15%浓度醇类的汽油，用的普通发动机，一般都要在30天内用完。如果当地湿度大，则要在两周到三周内用完。</li></ul>\n<p><br></p>\n<ul><li data-pid=\"dR_g5JIT\">\n<b>醇类沸点低</b>，只有78℃，在汽油还未转成气态的时候，醇类可能就会转成气态，抢占发动机的汽油输送管道，容易造成汽车动力不足，甚至夏天打不着火的情况。</li></ul>\n<p><br></p>\n<ul><li data-pid=\"RiiMK1RI\">\n<b>醇类对橡胶的溶胀性较强，</b>对密封垫等合成橡胶破坏性大、对树脂滤芯破坏性大。</li></ul>\n<p><br></p>\n<ul><li data-pid=\"FtY_DOWe\">\n<b>醇类金属的腐蚀性较强</b>，甲醇比汽油的导电性强，容易形成电位差的金属腐蚀。产生的氧化物，如甲酸对铝、铅、铸铁合金等金属表面有侵蚀。</li></ul>\n<p><br></p>\n<ul><li data-pid=\"-PMi6UT-\">\n<b>醇类低温性能和冷启动性能差</b>，纯甲醇在汽油机中的燃烧的理论空燃比为6.45，比汽油的理论空燃比低得多，导致在低温条件下，甲醇发动机不易启动。</li></ul>\n<p data-pid=\"jDJXDRfB\">如果注意上面几点，使用较低比例的醇类混合汽油的燃料，是不需要对发动机进行过多改造的。比如早在上个世纪，德国采用的M15汽油，是可以直接加到汽油发动机内的。但是如果使用高比例的醇类汽油混合燃料，则就需要定制专门的发动机了。</p>\n<p data-pid=\"1wvuzR6S\">而汽车甲醇发动机则是针对着上述说的缺点，进行专门优化的醇类发动机。整体原理还是和汽油发动机一致。</p>\n<p data-pid=\"SrBMdAO7\"><b>甲醇燃料喷入气缸，经过压缩达到一定的温度和压力后，用专用火花塞点燃，使得气体膨胀做工。把化学能转为机械能。</b></p>\n<p data-pid=\"Ekjm8qDH\">国内的甲醇发动机已经达到了国际的一流水准，定制的甲醇发动机解决了<b>燃料系统材料的耐腐蚀溶胀，提高了油泵、油管、油滤、油箱的耐醇性，关键零部件及特殊润滑油的搭配，整车启动和燃烧控制，开发专用醇类发动机ECU，解决冷启动困难，添加油路增压管等等。</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-c7f10b3e8a243715ed5d2bd0305bd2b0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1200\" data-rawheight=\"800\" data-watermark=\"watermark\" data-original-src=\"v2-c7f10b3e8a243715ed5d2bd0305bd2b0\" data-watermark-src=\"v2-621c0831cbeddfef7de5cb6771ee1b28\" data-private-watermark-src=\"v2-e951fe83f5b8acc0dc9d2dcecfccb9c1\"></p>\n<p data-pid=\"GposjI6w\">国内现在力推<b>甲醇汽车</b>的应该就是吉利独家了，2022年6月22日，吉利在山西晋中基地的甲醇重卡正式开始量产。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-a99ba5cad8b0527ef07cbb2d42044b6b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"636\" data-rawheight=\"444\" data-watermark=\"watermark\" data-original-src=\"v2-a99ba5cad8b0527ef07cbb2d42044b6b\" data-watermark-src=\"v2-167ecfbf2c51706eceab78f098f1b70b\" data-private-watermark-src=\"v2-7743897be0514e2549f2e3fd323250a0\"></p>\n<p data-pid=\"y_6kJ4f5\">最后说回到醇电混动，实际这个和油电混动一样的。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-fd64642e412655900d25fe6bef4b6e68_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"421\" data-watermark=\"watermark\" data-original-src=\"v2-fd64642e412655900d25fe6bef4b6e68\" data-watermark-src=\"v2-c46e265055333e9f12e2baf34ba5fe75\" data-private-watermark-src=\"v2-0cb49bd6c50d2c40dc2093e850dfd410\"></p>\n<p data-pid=\"AjcAIZ2i\">只是油电混动汽车里面的加汽油，变成了醇电混动里面加M100的甲醇燃料。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-cf4eaef223eedfeba3179b33d7703202_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"687\" data-watermark=\"watermark\" data-original-src=\"v2-cf4eaef223eedfeba3179b33d7703202\" data-watermark-src=\"v2-fd9277b99363878b82eb3a674dcbf106\" data-private-watermark-src=\"v2-8c7858917553300da8e59079b6d2d3ed\"></p>\n<p data-pid=\"-q_JdNT7\">原理和吉利的油电混动一样，还是让甲醇专用发动机在最佳工作区间里面养得白白胖胖的，用电机来进行单独驱动（或发动机混合联动）那一套了。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-f4391f655117217343b09e57a40b0208_720w.jpg?source=b1748391?rss\" data-caption=\"左图为普通发动机工况，右图为混动的专用发动机工况\" data-size=\"normal\" data-rawwidth=\"651\" data-rawheight=\"202\" data-watermark=\"watermark\" data-original-src=\"v2-f4391f655117217343b09e57a40b0208\" data-watermark-src=\"v2-dfd2dfd7ceb0a9c9752f22b1e59f62fb\" data-private-watermark-src=\"v2-75ca76432d57688e8c9aa3974d305f22\"></p>\n<h3><b>至于未来醇电混动会取代油电混动吗？</b></h3>\n<p data-pid=\"0fchFSuW\">因为甲醇比汽油便宜，就如同之前的加气比加油便宜一样。如果甲醇加注点有保障的话，冲着这个“便宜”两字，一堆消费者去改发动机加甲醇或者买醇电混动的车，真的还是个趋势。</p>\n<p data-pid=\"IX3s50SD\">但这个趋势的前提就是没有纯电车的存在，随着纯电车的发展，续航增加，热管理进步，安全性提升，纯电车的市场渗透率肯定越来越大。</p>\n<p data-pid=\"i2w7Fzqe\"><b>2022年5 月新能源乘用车销售42.7万辆，渗透率达26.3%。</b></p>\n<p data-pid=\"hC9LGEfT\"><b>其中纯电乘用车销量为32.7万辆，渗透率为20.1%。插混乘用车销量为10万辆，渗透率为6.2%。</b></p>\n<p data-pid=\"jX63neSx\">我之前的一个回答就说过，在纯电车（乘用车）这股大势面前，混合动力可能就是个过渡方案。只是这个过渡可能是三五年，也可能是更长一段时间。但最终，还是纯电车（乘用车）会拥有现今燃油车的绝对统治地位。</p>\n<a href=\"https://www.zhihu.com/question/491450256/answer/2543400786\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-370dae246e2c40fbc1a1e54ac120e44a_qhd.jpg?source=b1748391\" data-image-width=\"720\" data-image-height=\"411\" class=\"internal\">为什么说插电式混合动力车型是过渡产品？</a><p data-pid=\"Qh2IwZR0\">所以，醇电混合会有发展。但油电混动已经作为了市场混动的主流，在基建、投入、研发、供应链已经成熟的现阶段，醇电混动大概率作为一条国家能源的发展路线，是国家新能源计划的分支之一，作为国家主流路线的补充，不大可能取代现在已经成熟的油电混合，更不会对纯电车的发展有所阻拦了。</p>\n<p><br></p>\n<p data-pid=\"JdOx2XdM\">（图片来源网络，侵删！）</p>\n<p><br></p>\n<p data-pid=\"0phRFhBT\">参考资料：</p>\n<p data-pid=\"OzhIMNGE\">1、<a href=\"http://link.zhihu.com/?target=https%3A//baijiahao.baidu.com/s%3Fid%3D1728781220358362186%26wfr%3Dspider%26for%3Dpc\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">baijiahao.baidu.com/s?</span><span class=\"invisible\">id=1728781220358362186&amp;wfr=spider&amp;for=pc</span><span class=\"ellipsis\"></span></a> </p>\n<p data-pid=\"be73mPAT\">2、<a href=\"http://link.zhihu.com/?target=https%3A//baijiahao.baidu.com/s%3Fid%3D1636924293038756741%26wfr%3Dspider%26for%3Dpc\" class=\" external\" target=\"_blank\" rel=\"nofollow noreferrer\"><span class=\"invisible\">https://</span><span class=\"visible\">baijiahao.baidu.com/s?</span><span class=\"invisible\">id=1636924293038756741&amp;wfr=spider&amp;for=pc</span><span class=\"ellipsis\"></span></a></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/will-liu-16?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">Will.liu</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/539092380/answer/2547100112?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">4 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/274686078?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">请问油电混动汽车的节能原理是什么？</a><br><a href=\"http://www.zhihu.com/question/539093645?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">吉利第 4 代帝豪醇电混动轿车搭载的全新一代 1.8L 醇电混动专用发动机是什么技术？</a><br>\n","link":"http://www.zhihu.com/question/539092380/answer/2547100112?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"《明日方舟》SideStory「绿野幻梦」活动先导 PV 已出 ，有哪些值得关注的信息？","date":"2022-06-30 07:11:20","description":"\n<h2>前言</h2>\n<p data-pid=\"MkQDUeN8\">看完PV，建筑生狂喜！</p>\n<p data-pid=\"on4jav8g\">很明显本次SideStory是围绕莱茵生命展开的，PV中对莱茵生命实验室的室内外都做了较多展示。更为重要的是，这些建筑效果图有很明显的风格倾向，包含许多建筑学常用的形式语言。从中可以窥探到一些鹰角对莱茵生命这个机构的功能定位，下面我谈一下我个人的见解。</p>\n<h2>原型推测</h2>\n<h3>1.莱茵生命办公室</h3>\n<p data-pid=\"zN_v4f8m\">原型：约翰迪尔总部-美国（John Deere headquarters）</p>\n<p data-pid=\"GvtJFkIr\">建筑师：埃罗·沙里宁（Eero Saarinen）/凯文·罗奇（Kevin Roche）</p>\n<p><img src=\"https://pic3.zhimg.com/v2-085ff2f89af2e725f6a9c6b17a48f691_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1365\" data-rawheight=\"574\" data-watermark=\"original\" data-original-src=\"v2-085ff2f89af2e725f6a9c6b17a48f691\" data-watermark-src=\"v2-a71037e868078fa399ac14723e472a29\" data-private-watermark-src=\"v2-2b06f4652d5f68f20f6fe4a84e3f2bf1\"></p>\n<p><img src=\"https://picx.zhimg.com/v2-9d87d5a8cde9d4e8481d06364e15e99d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"472\" data-rawheight=\"333\" data-watermark=\"original\" data-original-src=\"v2-9d87d5a8cde9d4e8481d06364e15e99d\" data-watermark-src=\"v2-101c25343b66f034878acdc888fea518\" data-private-watermark-src=\"v2-1e5f1d358be0bbc0e3a6bfc5fb6e363e\"></p>\n<p data-pid=\"SlCEBBLZ\">受当时社会思潮影响，凯文·罗奇认为，办公室的组织方式应该和工厂类似，必须规律地组织起来以发挥员工的最大生产力。可以看到，办公桌椅、文件柜都死板地形成矩形阵列，而主要照明也来自于天花板的满铺区域光。此外，大平层，无隔断和方形立柱都是它的特点。</p>\n<p data-pid=\"3j4PdNk-\">最近热门的 Backrooms 系列，或许也受到一些影响</p>\n<p><img src=\"https://pic2.zhimg.com/v2-384a86e626cdbda6d42564dfa2eeaef8_720w.jpg?source=b1748391?rss\" data-caption=\"Level 9997\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"600\" data-watermark=\"original\" data-original-src=\"v2-384a86e626cdbda6d42564dfa2eeaef8\" data-watermark-src=\"v2-674f2832ef492a48155fc2c477e2e26e\" data-private-watermark-src=\"v2-024cc090b7c08b055a86e3df3db15c14\"></p>\n<p data-pid=\"ozkCd5Vn\">很明显，在这样的环境下办公，员工很容易产生压抑，紧张等情绪，过度的人工照明使得员工产生被监视感。想必不需要多长时间，员工们就会产生精神问题。</p>\n<p><img src=\"https://pica.zhimg.com/v2-5980e22c5371ad765cb4f3f16c791c61_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1362\" data-rawheight=\"569\" data-watermark=\"original\" data-original-src=\"v2-5980e22c5371ad765cb4f3f16c791c61\" data-watermark-src=\"v2-4d6059490110ee30293cb288bf9fd7d3\" data-private-watermark-src=\"v2-7ac736267825ac15606f343ed454315d\"></p>\n<p data-pid=\"S6mjgrQC\">莱茵生命的办公室则进一步强化了这种感觉。相比于约翰迪尔总部，虽然较为明智地取消了满铺区域光，但是竟然让天花板的亮度比地面还暗，直接一步到位，压抑感拉满。其工位密度更是超级加倍，恐怕在工作日连转身都十分困难。</p>\n<p data-pid=\"tsoe2MYx\">种种细节表明，莱茵生命普通员工的工作环境极差，虽然有着现代风格的内部装修，但是工作强度恐怕不止996这么轻松。</p>\n<h3>2. 特里蒙街景</h3>\n<p><img src=\"https://pic3.zhimg.com/v2-2e76788ed029258a1d3eec0a5c664c79_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1365\" data-rawheight=\"539\" data-watermark=\"original\" data-original-src=\"v2-2e76788ed029258a1d3eec0a5c664c79\" data-watermark-src=\"v2-46e24b2765b5a5ce909c24c2ab69e495\" data-private-watermark-src=\"v2-56fa127f5303ab347a03e0184abf14f6\"></p>\n<p data-pid=\"F2ISpWO8\">从左到右，分别介绍三个主要建筑</p>\n<p data-pid=\"hDmN1j75\">2.1 克里斯托奥禾洛教堂-乌拉圭（Church of Cristo Obrero）</p>\n<p data-pid=\"PjPpJ74o\">建筑师：埃拉迪奥·迪斯特（Eladio Dieste）</p>\n<p><img src=\"https://pic3.zhimg.com/v2-8e4d7853afb90f6805a436837693a667_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"253\" data-rawheight=\"303\" data-watermark=\"original\" data-original-src=\"v2-8e4d7853afb90f6805a436837693a667\" data-watermark-src=\"v2-57212b66c00e36819f3f7e12ed070c2c\" data-private-watermark-src=\"v2-7ce019adb9144a9763a8e899d0c7dfa5\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-ddacd5cf63b9ebbafb20681a734328b9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"441\" data-rawheight=\"434\" data-watermark=\"original\" data-original-src=\"v2-ddacd5cf63b9ebbafb20681a734328b9\" data-watermark-src=\"v2-fbb81de32ec7fd3b3dc7b295c65d05ae\" data-private-watermark-src=\"v2-de58d5daa240bbff57fc20cf701eeae5\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-bea889f812a16ed1a84d86dd98d8ee57_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"910\" data-rawheight=\"862\" data-watermark=\"original\" data-original-src=\"v2-bea889f812a16ed1a84d86dd98d8ee57\" data-watermark-src=\"v2-eb908a20b40ec610e1b6a574f36cc168\" data-private-watermark-src=\"v2-d067ad5b1e94d60544403fb6471ce2b3\"></p>\n<p data-pid=\"b8TO6ghY\">本案例的建筑学意义更侧重于当地材料与构造，某种程度上的反对工业材料、反对现代主义。与PV中的建筑物的相似性，恐怕只有形式上了。</p>\n<p data-pid=\"4upaEprT\">2.2 迪奥 迈阿密店-美国（Dior Shop In Miami）</p>\n<p data-pid=\"mzzWIJQN\">建筑事务所：<span class=\"nolink\">Barbarito Bancel Architects</span></p>\n<p><img src=\"https://pic2.zhimg.com/v2-ee09a5885f17a6891ae38e28a73bdaf7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"235\" data-rawheight=\"240\" data-watermark=\"original\" data-original-src=\"v2-ee09a5885f17a6891ae38e28a73bdaf7\" data-watermark-src=\"v2-78af61d97a5b3537ac4be946341b4f37\" data-private-watermark-src=\"v2-1d51d90849ecbab1d77bb8cd4a6b7dab\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-d3a9d61feb16104bc44b7d58a2e713c2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"890\" data-watermark=\"original\" data-original-src=\"v2-d3a9d61feb16104bc44b7d58a2e713c2\" data-watermark-src=\"v2-239c9264a0a720eae3287cfedce53996\" data-private-watermark-src=\"v2-f19f6dec10916569c4901809e480f0a6\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-60f47f9bb28c2add739a654bbcec4317_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"800\" data-rawheight=\"860\" data-watermark=\"original\" data-original-src=\"v2-60f47f9bb28c2add739a654bbcec4317\" data-watermark-src=\"v2-2c0f80b08254ed0ed37d0f7997c2c797\" data-private-watermark-src=\"v2-df3300e905cdd4dbdd600bb8bd6ea0ef\"></p>\n<p data-pid=\"z7T_E6c0\">外立面像素级复刻，没啥好说的。堂堂特里蒙，哥伦比亚的科学与技术中心，这么好的地理位置，有个奢侈品店那不是合情合理吗？</p>\n<p data-pid=\"tGYHqFVD\">（安全声明：没有任何指责抄袭的意思。本来嘛，在建筑设计行业，抄来抄去就很正常，何况还是建筑用到游戏PV里，更是鸡毛蒜皮都算不上。）</p>\n<p data-pid=\"L85M6oMD\">2.3 St. Francis de Sales Catholic Church-美国</p>\n<p data-pid=\"VdI6bN7W\">建筑师：Marcel Breuer</p>\n<p><img src=\"https://picx.zhimg.com/v2-b1f24e7a80e835ea1a5dc69019fb18f9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"278\" data-rawheight=\"458\" data-watermark=\"original\" data-original-src=\"v2-b1f24e7a80e835ea1a5dc69019fb18f9\" data-watermark-src=\"v2-1a2a4ef0e0ab939d59d91c829e674833\" data-private-watermark-src=\"v2-212569117d26bfe4acc9242e04798441\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-3e2d7ef73f4aaceb7158f4ca1b35116e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"819\" data-rawheight=\"1024\" data-watermark=\"original\" data-original-src=\"v2-3e2d7ef73f4aaceb7158f4ca1b35116e\" data-watermark-src=\"v2-c37a0fbeb10977729afb1231e7822720\" data-private-watermark-src=\"v2-188680e5ef79ad5d2165daf62aa3f680\"></p>\n<p data-pid=\"Hs6jsKl8\">粗野主义的几大特征，在本案例中清晰地表现出来：钢、混凝土、极简主义、几乎没有装饰。由于是天主教堂，本案例还综合了贫穷、信仰、宣誓和禁欲主义。</p>\n<p data-pid=\"7SJV2gk_\">不过，粗野主义的另一个普遍印象是政府机关。</p>\n<p data-pid=\"B-7x0Ixz\">原本是代表廉价，亲民的材料：混凝土，却渐渐地变成了强权，排外，保守和官僚主义的象征：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-ca9dad1062b6a3ca4465c743c5b533b6_720w.jpg?source=b1748391?rss\" data-caption=\"波士顿市政厅\" data-size=\"normal\" data-rawwidth=\"640\" data-rawheight=\"427\" data-watermark=\"original\" data-original-src=\"v2-ca9dad1062b6a3ca4465c743c5b533b6\" data-watermark-src=\"v2-10038d96b03996b7682aa3cf5c14fdf8\" data-private-watermark-src=\"v2-6178a3339de6f118b243230af5348bae\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-0954cdafdfa27aa3a399232710290e8c_720w.jpg?source=b1748391?rss\" data-caption=\"波士顿市政厅\" data-size=\"normal\" data-rawwidth=\"1540\" data-rawheight=\"944\" data-watermark=\"original\" data-original-src=\"v2-0954cdafdfa27aa3a399232710290e8c\" data-watermark-src=\"v2-b9eeaa240337a8153e86339a291618a2\" data-private-watermark-src=\"v2-458bc0b39ce8f0331db8ffa58235b799\"></p>\n<p data-pid=\"oJYvwxsN\">可惜，找不到与PV中的建筑相似的案例。</p>\n<p data-pid=\"blx2ZE8B\">现代主义建筑也有类似的立面：</p>\n<p data-pid=\"9UbDca_r\">2.3 AON CENTER-美国</p>\n<p data-pid=\"d3hLqHG8\">建筑师：<span class=\"nolink\">Edward Durell Stone &amp; Associates</span>,<span class=\"nolink\">Perkins+Will</span></p>\n<p><img src=\"https://picx.zhimg.com/v2-6331096b4e785d9886a89d505cff7f9c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1325\" data-rawheight=\"2000\" data-watermark=\"original\" data-original-src=\"v2-6331096b4e785d9886a89d505cff7f9c\" data-watermark-src=\"v2-7f24ba291bf626821d6a392229295248\" data-private-watermark-src=\"v2-b8d87b4b7c6270e64cb8b3729ee914d5\"></p>\n<p data-pid=\"UzW-U7wS\">现代主义的建筑，相比粗野主义，多了轻盈感，少了一些肃穆压抑和咄咄逼人的气势，不过按照PV里遮阳板和雨棚的厚度，应该是粗野主义建筑没跑。</p>\n<h3>3. 莱茵生命实验室 外景人视图</h3>\n<p data-pid=\"9DzO8Lqr\">东京新国立竞技场-日本（New Tokyo National Stadium）</p>\n<p data-pid=\"cJvRmQh5\">建筑师：扎哈·哈迪德（Zaha Hadid）</p>\n<p data-pid=\"Urhw8b4G\">与</p>\n<p data-pid=\"HTdOXGFX\">The Exchange-澳大利亚</p>\n<p data-pid=\"4M5dCjat\">建筑师：隈研吾（Kengo Kuma）</p>\n<p><img src=\"https://pic1.zhimg.com/v2-3ee91e30100968a46e06051b795b8dd3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1368\" data-rawheight=\"578\" data-watermark=\"original\" data-original-src=\"v2-3ee91e30100968a46e06051b795b8dd3\" data-watermark-src=\"v2-c87089836a1a19c024c6bdbcef8600de\" data-private-watermark-src=\"v2-277bc9c0f7db98428052eef461e08c96\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-85c9d78715cdefec993454e6bdc2a1e7_720w.jpg?source=b1748391?rss\" data-caption=\"东京新国立竞技场\" data-size=\"normal\" data-rawwidth=\"2060\" data-rawheight=\"1236\" data-watermark=\"original\" data-original-src=\"v2-85c9d78715cdefec993454e6bdc2a1e7\" data-watermark-src=\"v2-5a47f4e141c6ecbd7d17ae267da2a91c\" data-private-watermark-src=\"v2-e20ffaccf3abc640921f7f2e8b4943c3\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-9e9d361d62c25da3dbee629f06b4eea4_720w.jpg?source=b1748391?rss\" data-caption=\"The Exchange\" data-size=\"normal\" data-rawwidth=\"2359\" data-rawheight=\"2179\" data-watermark=\"original\" data-original-src=\"v2-9e9d361d62c25da3dbee629f06b4eea4\" data-watermark-src=\"v2-59e936554a2a2b8cfedfbf4a3343f991\" data-private-watermark-src=\"v2-da29263d78f4aeb00945d021f2c53dbe\"></p>\n<p data-pid=\"FlrhhcRJ\">好消息：全缝上了</p>\n<p data-pid=\"qjq0Dles\">坏消息：你说你一个实验室，为啥要做得像个体育馆？</p>\n<h3>4. 莱茵生命实验室裙房</h3>\n<p data-pid=\"wB3uxdvr\">Musée Atelier Audemars Piguet-瑞士</p>\n<p data-pid=\"KtfVzL8_\">建筑师：BIG - Bjarke Ingels Group</p>\n<p data-pid=\"HLlfCZhl\">与</p>\n<p data-pid=\"KElu77kx\">TOUR &amp; TAXIS -比利时</p>\n<p data-pid=\"kcVXDACx\">建筑师：Vincent Callebaut Architectures</p>\n<p><img src=\"https://pica.zhimg.com/v2-886e1f9f05264b339b56678d4053ff76_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"528\" data-rawheight=\"281\" data-watermark=\"original\" data-original-src=\"v2-886e1f9f05264b339b56678d4053ff76\" data-watermark-src=\"v2-3d57da00026eadc34c5f21ff3afe73b3\" data-private-watermark-src=\"v2-bc812bab9bdf7b0df07754dd710c1d28\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-713c9b94347486c31af4f0ff5782a303_720w.jpg?source=b1748391?rss\" data-caption=\"Musée Atelier Audemars Piguet\" data-size=\"normal\" data-rawwidth=\"1620\" data-rawheight=\"779\" data-watermark=\"original\" data-original-src=\"v2-713c9b94347486c31af4f0ff5782a303\" data-watermark-src=\"v2-9d6be79e99b14e2c291d67c074347162\" data-private-watermark-src=\"v2-946d34e0a2872481eb376f3fbb5a7bb7\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-d56593a417ef7823a4dd4df6de90f469_720w.jpg?source=b1748391?rss\" data-caption=\"TOUR &amp; TAXIS\" data-size=\"normal\" data-rawwidth=\"1541\" data-rawheight=\"547\" data-watermark=\"original\" data-original-src=\"v2-d56593a417ef7823a4dd4df6de90f469\" data-watermark-src=\"v2-763056a0cb08ec2f612b14f5d509b97e\" data-private-watermark-src=\"v2-9096821ce979fc6e95cfa4dbda7d16bf\"></p>\n<p data-pid=\"DYpLPanM\">非常常见的生态城市与地景建筑手法，这年头屋顶不种点草都不好意思往生态那方面扯。基于现代主义的全面空间和流动空间，结合通透的大面积落地窗，形态上再加入一些曲线——挖，绿色建筑！</p>\n<p data-pid=\"yaEkaV8a\">巧了，咱莱茵生命不就是新式生化实验室吗？那看来头上必须得带点绿了。</p>\n<p><img src=\"https://picx.zhimg.com/v2-21d84a4b6cca38fa5eafa8049793c789_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1367\" data-rawheight=\"578\" data-watermark=\"original\" data-original-src=\"v2-21d84a4b6cca38fa5eafa8049793c789\" data-watermark-src=\"v2-7555f076e26ba683163d79ce9cbcee7f\" data-private-watermark-src=\"v2-ea4c556c8979fbf8bae80f06c5e3471d\"></p>\n<p data-pid=\"4_9WcnkW\">刚才还在纠结为啥像体育馆，看到这个图的时候，我释然了：你看画面右边的大台阶，屋顶的梁，过于豪华的前台接待... 看来，莱茵生命实验室确实是个体育馆，或者，它曾经是个体育馆。</p>\n<p><br></p>\n<p><img src=\"https://pic2.zhimg.com/v2-21a3a935dec12f6eb2d632371f6e54ca_720w.jpg?source=b1748391?rss\" data-caption=\"说实话，这个没看出来\" data-size=\"normal\" data-rawwidth=\"1367\" data-rawheight=\"577\" data-watermark=\"original\" data-original-src=\"v2-21a3a935dec12f6eb2d632371f6e54ca\" data-watermark-src=\"v2-d0b4b6aaa86f55e5250c4464836f40eb\" data-private-watermark-src=\"v2-74f7f1527540abfe8bc9286b9dcf439e\"></p>\n<h3>5. 多萝西摄影棚</h3>\n<p data-pid=\"FPAT1kqL\">安德鲁斯大楼（Andrews Building）-加拿大</p>\n<p data-pid=\"SKaYNnmw\">建筑师：约翰·安德鲁斯（John Andrews）</p>\n<p><img src=\"https://pica.zhimg.com/v2-60af84067d650c99be08f34e44c2c8b3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1349\" data-rawheight=\"575\" data-watermark=\"original\" data-original-src=\"v2-60af84067d650c99be08f34e44c2c8b3\" data-watermark-src=\"v2-e2b3699084eebb8bb266e3dad7255ae9\" data-private-watermark-src=\"v2-43a23501274de786dc54b421a91719d0\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-34a85f68e16ccc98bd1f53a01ba31a28_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1361\" data-rawheight=\"573\" data-watermark=\"original\" data-original-src=\"v2-34a85f68e16ccc98bd1f53a01ba31a28\" data-watermark-src=\"v2-a81d410258d653d324ea3d5a99db2a3c\" data-private-watermark-src=\"v2-b5d945132602798852ec933e00ca5452\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-7894fef1d3799a6a02879170cd677173_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1039\" data-rawheight=\"718\" data-watermark=\"original\" data-original-src=\"v2-7894fef1d3799a6a02879170cd677173\" data-watermark-src=\"v2-c7aac6f92eb10c89a55d8dd2c0f1b40f\" data-private-watermark-src=\"v2-1b3755edff0e0e2d01b01680c8f2b8d4\"></p>\n<p><img src=\"https://pic3.zhimg.com/v2-b14bfae03a5dd315b1bc490e22af037b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"288\" data-rawheight=\"340\" data-watermark=\"original\" data-original-src=\"v2-b14bfae03a5dd315b1bc490e22af037b\" data-watermark-src=\"v2-0bfbf9d008331401b8b2e8b88af9b225\" data-private-watermark-src=\"v2-4d63d0b1f125ec6a0d871d1b7ab1d39a\"></p>\n<p data-pid=\"m8sfhSqm\">还是经典的粗野主义建筑，只不过PV中，材料从混凝土变成了石膏板或者哑光塑料一样的东西。猜测是为了减少粗野主义网格梁的严肃和压抑的氛围。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-7c774e4da87117eb473a9cbe44699c4e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1146\" data-rawheight=\"717\" data-watermark=\"original\" data-original-src=\"v2-7c774e4da87117eb473a9cbe44699c4e\" data-watermark-src=\"v2-3338a5a8ac0fa662634d497d8a1304a2\" data-private-watermark-src=\"v2-83d46d50f5713033d9b40fde47db2bf1\"></p>\n<p data-pid=\"mWSoVeF-\">头顶是呆滞冰冷的建筑结构，脚下是生机盎然的杂草灌木，中间是我们的多萝西。</p>\n<p data-pid=\"ylwSP8Ig\">我想暗示已经很明显了，本次SideStory又是一个关于人文与科技，现代与原始，工业与自然之间的矛盾的故事，多萝西要在两者之间找到她的道路。</p>\n<p data-pid=\"cKAwUDDU\">自工业革命以来，建筑学界就一直在讨论类似的问题，此消彼长，有来有回，直至今日。每当生产力和材料性能有突破性进展，这个话题就会更加深刻和明晰，矛盾的双方也逐渐从对立走向和解</p>\n<p data-pid=\"7tifidX9\">在这片充斥着天灾和源石病的泰拉大地上，具备源石技艺的干员们又会有怎样的思考？我期待鹰角为大家呈现令人耳目一新的解释。</p>\n<h2>结语</h2>\n<p data-pid=\"KOV-iQrt\">1.莱茵生命普通员工的工作环境堪忧</p>\n<p data-pid=\"BDOJVcZf\">2.莱茵生命实验室的前身可能是一个体育场</p>\n<p data-pid=\"YozH8_H4\">3.莱茵生命可能存在官僚主义作风</p>\n<p data-pid=\"swc4shaJ\">总之，一起期待本次SideStory的剧情吧！</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/fu-lan-lu-nuo?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">梦符佳月</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/540527597/answer/2551358619?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">18 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/520900558?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价《明日方舟》全新活动 SideStory「吾导先路」预告 PV？</a><br><a href=\"http://www.zhihu.com/question/522234157?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何看待《明日方舟：终末地》首款 PV，透露了哪些信息？</a><br>\n","link":"http://www.zhihu.com/question/540527597/answer/2551358619?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"优化博客的累计布局偏移（CLS）问题","date":"2022-06-07 17:24:00","description":"\n<p>距离上一篇文章发布已有四个月了，是时候写几篇文章给博客除草了。上一次我介绍了我如何迁移、重构了我的博客的架构，这次我想来谈谈我在重构中优化和打磨访客体验时解决的一个问题。我的博客优化之旅 图片 lazyload 的学问和在 Hexo 上的最佳实践 我的博客有多快？ 天下武功，唯快不破 —— 我是这样优化博客的 再快一点，再快一点 ......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/206311/26/14625/38940/629f7f81Eb11312de/b1e67f07b1cc9bc7.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/fix-blog-cls/\">https://blog.skk.moe/post/fix-blog-cls/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/fix-blog-cls/"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012 年的、由 Node.j......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\r\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\r\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\r\n    return new Date(date.toLocaleString('en-US', { timeZone }))\r\n}\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\r\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\r\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\r\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\r\n        year: 'numeric',\r\n        month: '2-digit',\r\n        day: '2-digit',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: '2-digit',\r\n        hour12: false,\r\n        timeZone\r\n    })\r\n    return {\r\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\r\n        convert (date) {\r\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\r\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\r\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\r\n        }\r\n    }\r\n}\r\n\r\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\r\n\r\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\r\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\r\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\r\n    return converter.convert(new Date(secDate), tzName) - secDate\r\n}\r\n\r\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\r\ncmn-Hans-SG = 中文普通话-简体-新加坡\r\ncmn-Hant-TW = 中文普通话-繁体-台湾\r\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\r\ncmn = 中文普通话\r\n\r\nzh-Hans = 中文-简体\r\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\r\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\r\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\r\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\r\n}\r\n\r\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long'\r\n}\r\nconst now = new Date()\r\n\r\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\r\n\r\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\r\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\r\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\r\n\r\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\r\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\r\n\r\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\r\n\r\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\r\n\r\nzhCNFormatter.format(now) // 2021年10月13日星期三\r\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\r\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\r\n\r\njaFormatter.format(now) // 2021年10月13日水曜日\r\njaAltFormatter.format(now) // 令和3年10月13日水曜日\r\n\r\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\r\n// {locale: 'zh-CN', calendar: 'gregory', …}\r\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\r\n     // 基于一个固定日期计算，这里选择 1970.1.1\r\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\r\n    const base = new Date(1970, 0, 1).getTime()\r\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\r\n    return Array.from({ length: 7 }, (_, day) =&gt; (\r\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\r\n    ))\r\n}\r\n\r\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\r\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\r\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\r\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    weekday: 'long',\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    second: 'numeric',\r\n}).formatToParts(new Date())\r\n// [\r\n//     { type: 'year', value: '2021' },\r\n//     { type: 'literal', value: '年' },\r\n//     { type: 'month', value: '10' },\r\n//     { type: 'literal', value: '月' },\r\n//     { type: 'day', value: '13' },\r\n//     { type: 'literal', value: '日' },\r\n//     { type: 'weekday', value: '星期三' },\r\n//     { type: 'literal', value: ' ' },\r\n//     { type: 'dayPeriod', value: '上午' },\r\n//     { type: 'hour', value: '1' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'minute', value: '00' },\r\n//     { type: 'literal', value: ':' },\r\n//     { type: 'second', value: '00' }\r\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\r\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\r\n}\r\n\r\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\r\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\r\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\r\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\r\n  timeZone: 'America/Los_Angeles',\r\n  year: 1995,\r\n  month: 12,\r\n  day: 7,\r\n  hour: 3,\r\n  minute: 24,\r\n  second: 30,\r\n  millisecond: 0,\r\n  microsecond: 3,\r\n  nanosecond: 500,\r\n  calendar: 'iso8601'\r\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<p>2020 年 11 月 11 日，苹果在本年度最后一次 Apple Events 上发布了全新的 ARM 芯片 M1、以及三款搭载了 M1 的 Mac：MacBook Air、MacBook Pro 13‘ 和 Mac Mini。在 WWDC 2020 库克宣布 Apple Silicon 后，这次 Apple Events 再一次掀起了热潮，不少 KOL 都把 M1 奉若神明，不少人也不以为然。本文通过 8 个问题来简单聊聊 M1 和 ARM Mac。M1 芯片的性能如何？本文写就时，搭载 M1 的 Mac 尚未开始发货，我们能看到的只有 GeekBench 上流出的跑分。所以，让我们先从跑分开始看起？...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote>\n<p>周六不放假休息，还在这加班搞 CTF？</p>\n</blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/86535/11/24318/75037/622032a8E4f94d4ae/89703ccc122cf4e0.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"\n<p>WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将其表述为 \"An API for accessing Public Key Credentials\"，即“一个用于访问公钥凭证的 API”。WebAuthn 很强大，强大到被认为是 Web 身份认证的未来（当然，也很复杂）。你有想过通过指纹或者面部识别来登录网站吗？WebAuthn 就能在保证安全和隐私的情况下让这样的想法成为现实。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/wwa.gif\" alt=\"通过 WebAuthn 调起 Windows Hello 登录网站\" width=\"1912\" height=\"966\" class=\"aligncenter size-full wp-image-2215\"></a>\n<p>你可以在<a href=\"https://webauthn.io/\" rel=\"noopener\">这个网站</a>自行体验 WebAuthn。或者，如果你有一个使用 WordPress 的站点，可以尝试一下 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WP-WebAuthn</a> 这款插件，它可以为你的站点启用 WebAuthn 登录。这是我为了写这篇文章而练手开发的插件，本文中的部分示例代码也来自这款插件。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"wp-webauthn\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/wp-webauthn\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>WebAuthn Level 1 标准已在 2019 年 3 月成为 W3C 推荐标准，而 Level 2 标准目前也已进入编辑草案阶段，但互联网上有关它的中文资料却仍然很少，国内也鲜有网站支持这一新标准。于是，在抱着各种英文资料和标准啃了几天以后，我折腾出了这篇文章。</p>\n<p>在这篇文章里，我将会从最基本的概念开始，逐渐深入 WebAuthn，直到解码公钥等深层细节。这可能是你能找到的有关 WebAuthn 最详细最基础的中文文章，也很可能是最长的。在开始之前，<strong>我强烈建议你打开菜单中的文章目录浏览一遍，以对这篇文章涉及的内容有所了解。</strong>如果你只是想了解如何简单地在你的项目中添加对 WebAuthn 的支持，那么“<a href=\"https://flyhigher.top/#webauthn-overview\">浅谈 WebAuthn</a>”部分就是你要找的；如果你想了解更多关于 WebAuthn 的底层细节，那么你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分。</p>\n<p>由于在本文写作时 WebAuthn Level 2 规范尚未定稿，<strong>这篇文章我们将只专注于 Level 1 规范。</strong></p>\n<p>这篇文章最后更新于 2020.9 ，在你读到这篇文章时，部分事实可能已经发生改变，请注意判断。</p>\n<p><strong>更新日志：</strong></p>\n<ul>\n<li>2021.1.16 添加 Chrome 开发工具信息</li>\n<li>2020.9.17 更新 iOS/iPad OS 兼容性信息</li>\n<li>2020.5.20 添加部分无用户名认证的平台兼容性内容</li>\n<li>2020.5.15 添加部分 <code>extensions</code> 相关内容与链接；添加全局凭证 ID 唯一内容；添加凭证 ID 查找相关内容；添加“从 U2F 认证迁移”一节</li>\n<li>2020.4.13 更新与修正 <code>userVerification</code> 相关内容；添加部分 Firefox 相关内容</li>\n<li>2020.3.23 文章发布</li>\n</ul>\n<p>那么让我们开始吧。<span></span></p>\n<h1>浅谈 WebAuthn</h1>\n<p>在这个部分里，我们将会从基础概念开始，了解有关 WebAuthn 和密码学的一些基础知识，并最终使用第三方库实现基础的 WebAuthn 认证。如果你已经对这些内容有所了解了，可以跳到“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”继续阅读。</p>\n<h2>为什么使用 WebAuthn</h2>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/2.png\" alt=\"钓鱼邮件\" width=\"709\" height=\"693\" class=\"aligncenter size-full wp-image-2162\"></a>\n<p>相信你一定收到过类似的邮件吧？只要你点进那个最显眼的链接，你就会进入一个设置好的圈套——钓鱼网站。如果你一时糊涂在这类网站上填写了你的账号和密码，bingo，你的账号就不再是你的账号了。</p>\n<p>不过，就算你警惕心再强，也无法避免密码泄露事件。Twitter, Facebook 等都爆出过明文密码泄露事件，证明再大的公司或组织也无法避免密码泄露问题。雪上加霜的是，很大一部分用户都非常喜欢使用重复密码，这就导致一次密码泄露会牵连很多网站，用户的账户安全性完全无法得到保证。</p>\n<p>那么，有什么办法解决这些问题吗？<strong>彻底解决的方法只有一个，那就是抛弃密码。</strong>可是没有密码还怎么验证用户身份呢？这就是 WebAuthn 的用武之地了。</p>\n<p><del>没有密码的好时代，来临力！</del></p>\n<h2>什么是 WebAuthn</h2>\n<p>那么到底什么是 WebAuthn 呢？如开头所说，WebAuthn 是“一个用于访问公钥凭证的 API”，网站可以通过这个 API 进行一些高安全性的身份验证。WebAuthn 一个最常见的应用就是用于网站登录时的 2FA（双重因素验证）甚至是无密码登录。通过网页调用 WebAuthn，在不同平台下，<strong>我们可以实现通过 USB Key、指纹、面部甚至虹膜扫描来认证身份，同时确保安全和隐私。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/4-3.png\" alt=\"WebAuthn 可使用的各种身份认证方式\" width=\"1294\" height=\"566\" class=\"aligncenter size-full wp-image-2213\"></a>\n<p>WebAuthn 标准是 FIDO2 标准的一部分，而 FIDO2 则是由 FIDO 联盟和 W3C 共同推出的 U2F（现称作 FIDO1）的后继标准，旨在增强网络认证的安全性。</p>\n<blockquote><p>你可能了解过 U2F，那么 U2F 和 FIDO2 的区别在哪里呢？从名字上可以看出，U2F，即“通用第二因素协议”，是专注于作为密码后的第二道屏障的，而 FIDO2 增加了单因素认证功能，这意味着使用 FIDO2 可以完全替代密码，真正实现无密码登录。</p></blockquote>\n<p>FIDO2 标准主要包括四个部分，其一是用于网站和访客设备交互的 WebAuthn，而 Client to Authenticator Protocol 2（CTAP2，客户端-认证器协议）作为 WebAuthn 的补充，则是用于访客的设备和认证器交互的协议。标准的其他两个部分则是 U2F 和 UAF 规范。在这篇文章中，我们只关心 WebAuthn，不会涉及 CTAP, U2F 和 UAF 的相关知识。如果你对这段话中的一些概念不了解，不要紧张，接下来我们就来谈谈 WebAuthn 中一些常用的术语和概念。</p>\n<blockquote><p>WebAuthn 只能在安全上下文中使用，也就是说，页面需要使用 HTTPS 协议或是处于 <code>localhost</code> 中。</p></blockquote>\n<h2>常用术语和概念</h2>\n<p>WebAuthn 中有许多不常碰到的术语，不过我只会在这里介绍一些常用的术语和概念——如果你只是希望做出一个简单的实现，那么了解这一段中的一些概念就足够了。同时，由于我实在没能找到一部分术语的通用翻译，有一些术语我按着自己的理解尽可能地翻译了，有任何问题请告诉我。</p>\n<p>在一个完整的 WebAuthn 认证流程中，通常有这么几个角色：</p>\n<ul>\n<li>Relying Party 依赖方 (RP) ：指服务提供方，即网站</li>\n<li>User 用户：正准备登录的你</li>\n<li>Authenticator 认证器：通常指 USB Key 或是设备内置的指纹扫描器、虹膜扫描器、面部识别装置等，正是它们在使用流程中代替了密码甚至是用户名</li>\n<li>User Agent 用户代理：通常指浏览器或系统，负责与认证器交互</li>\n</ul>\n<p>认证过程通常分为两种：</p>\n<ul>\n<li>Registration Ceremony 注册仪式：用户向账户上添加认证器</li>\n<li>Authentication Ceremony 验证仪式：用户通过已注册的认证器验证身份</li>\n</ul>\n<p>同时，认证过程中还会产生这些内容：</p>\n<ul>\n<li>Challenge 挑战：通常是一串随机字符串</li>\n<li>Public Key Credential 公钥凭证：由认证器产生的凭证，在技术上代替了密码</li>\n<li>Attestation 证明：注册时认证器产生的验证数据</li>\n<li>Assertion 断言：验证时认证器产生的验证数据</li>\n</ul>\n<blockquote><p><strong>请注意区分证明 (Attestation) 和断言 (Assertion)</strong>，特别是在这两个单词有些相似的情况下。在 WebAuthn 中，它们是不同过程中的类似概念，但并不相同。</p></blockquote>\n<p>如果你对于这些内容不是很理解，没有关系，我们会在“<a href=\"https://flyhigher.top/#how-to-webauthn\">使用流程</a>”一节中将这些概念放到实际情况中解释，你只要先区分这些概念即可。</p>\n<h2>安全性的基础</h2>\n<p>WebAuthn 为什么安全？和 HTTPS 一样，WebAuthn 使用非对称加密的思路来保证安全性，但侧重点又有所不同。要理解 WebAuthn 的认证流程，我们必须对非对称加密有所了解。如果你对非对称加密比较熟悉了，就直接跳到下一段吧。</p>\n<p>WebAuthn 的核心在于“认证”，即保证产生了凭证的认证器是用户的认证器，而不是第三方在伪造凭证。但为什么要使用非对称加密呢？我们可以先来看看对称加密。</p>\n<p>让我们假设小明和小红相互写信，见不到对方。这天小红突然想，给自己写信的人是不是真的小明呢？于是小红要求对方向小红证明自己是小明。怎么证明呢？他们商量出来这么一套方案：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明和小红商量一个统一的密码和密钥</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明用提前和小红商量好的密码和密钥加密文本后发回给小红</li>\n<li>小红使用相同的密码和密钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和密钥</li>\n</ol>\n<blockquote><p>在密码学中，我们通常把“加密算法”称为密码 (code)，和通常登录时用的密码 (password) 并非同一个概念。</p></blockquote>\n<p>在这种情况下，<strong>只要密钥不泄露</strong>，即拥有正确密钥的只有小明和小红，那么小红就能确定对方一定是小明。但这样的问题也很明显，如果小明和小红不能见面，那么他们就必须先以明文交换密码——<strong>在这个过程中一旦有人窃取到了密码，这个认证就无效了。</strong></p>\n<p>这时我们就需要使用<strong>非对称加密</strong>来拯救破碎的信任了。非对称加密的基础是一对密钥，也就是公钥和私钥，它们是互相关联但（几乎）无法互相推导的。在非对称加密的过程中，选择相同的密码后，使用私钥加密明文得到的密文只能由对应的公钥解密，无法使用私钥解密，同时这个过程反过来也是成立的。</p>\n<blockquote><p>本文的核心并不是非对称加密算法，因此不会详述非对称加密在数学上的证明，若有兴趣可以自行了解。</p></blockquote>\n<p>这就完美解决密钥泄露的问题了。让我们回过头来看之前的例子。现在小明和小红决定使用非对称加密来证明身份，过程如下：</p>\n<ol>\n<li>在小明的身份已经验证的情况下，小明提前生成一对公私钥，将公钥发送给小红，私钥自己保管，同时商量好统一的密码</li>\n<li>一段时间后，在小红要求小明验证身份时，小红发送一段文本给小明</li>\n<li>小明使用商量好的密码和自己的私钥加密文本，发送给小红</li>\n<li>小红使用相同的密码和小明的公钥解密文本，如果得到文本和之前发送的一致，就表明对方拥有正确的密码和私钥</li>\n</ol>\n<p>在这种情况下，<strong>只要私钥不泄露</strong>，那么小红解密得到的文本和之前发送的一致，那么就可以证明收到的密文一定是由小明加密后发送过来的。而在整个过程中，私钥都没有离开过小明，更没有经过传输，也就几乎没有泄露的可能了。这时，小红终于可以确定对面和她通信的人的确是小明了。</p>\n<p>题外话：HTTPS 虽然也应用了非对称加密，但 HTTPS 更侧重于“加密”而非“认证”，因此思路上会有些许差异。要了解关于 HTTPS 和非对称加密的更多信息，你可以阅读我之前写的这篇文章：</p>\n<p></p>\n<div class=\"mdx-post-cot\" data-mdxposturl=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdx-post-wait-out-c2\"><div class=\"mdx-post-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://flyhigher.top/develop/1093.html\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<span></span>\n<h2>使用流程</h2>\n<p>了解了非对称加密，我们就可以来看看 WebAuthn 的认证流程了。</p>\n<p>和普通的密码一样，<strong>使用 WebAuthn 分为两个部分，注册和验证。</strong>注册仪式会在依赖方中将认证器的一些信息和用户建立关联；而验证仪式则是验证这些信息以登确保是用户本人在登录。根据上一节的思路，我们可以知道，注册仪式就是认证器生成一对公私钥，然后将公钥交给依赖方；而验证仪式是依赖方发送给认证器一段文本，要求认证器用自己的私钥加密后发回以验证。</p>\n<p>在实际情况中，WebAuthn 是基于<strong>挑战-应答模型</strong>工作的。要更好地理解，我们直接来看具体流程。先来看看注册的流程。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc1.png\" alt=\"WebAuthn 注册流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2224\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的注册请求</li>\n<li>依赖方向浏览器发送挑战、依赖方信息和用户信息</li>\n<li>浏览器向认证器发送挑战、依赖方信息、用户信息和客户端信息以请求创建公钥凭证</li>\n<li>认证器请求用户动作，随后创建一对公私钥，并使用私钥签名挑战（即证明），和公钥一起交给浏览器</li>\n<li>浏览器将签名后的挑战和公钥发送给依赖方</li>\n<li>依赖方用公钥验证挑战是否与发送的一致，如果成功则将公钥与用户绑定，注册完成</li>\n</ol>\n<p>我也做了一个交互式的 Demo，你可以对照流程来更好地理解。</p>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\">开始注册</button> <span></span></p>\n<div></div>\n<blockquote><p>注意，这个 Demo 和下方的 Demo 都只是一个本地模拟的简单示例，没有任何数据会被上传，当然也不会对数据进行验证。</p></blockquote>\n<p>而之后的验证流程如下：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/lc2.png\" alt=\"WebAuthn 验证流程\" width=\"1100\" height=\"604\" class=\"aligncenter size-full wp-image-2226\"></a>\n<ol>\n<li>浏览器向依赖方发送某个用户的验证请求</li>\n<li>依赖方向浏览器发送挑战</li>\n<li>浏览器向认证器发送挑战、依赖方信息和客户端信息以请求获取公钥凭证</li>\n<li>认证器请求用户动作，随后通过依赖方信息找到对应私钥，并使用私钥签名挑战（即断言），交给浏览器</li>\n<li>浏览器将签名后的挑战发送给依赖方</li>\n<li>依赖方用之前存储的公钥验证挑战是否与发送的一致，一致则验证成功</li>\n</ol>\n<p><button class=\"mdui-btn mdui-btn-raised mdui-ripple mdui-color-theme-accent\" disabled>开始验证</button> <span>在上方注册后才能验证</span></p>\n<div></div>\n<p>可以看到，WebAuthn 不仅在理论上是安全的，同时<strong>在整个过程中并没有隐私数据被传输</strong>——用户信息实际上只包含用户名和用户 ID。因此我们完全可以说 WebAuthn 是安全且私密的。</p>\n<blockquote><p>为了避免用户在不同依赖方之间被追踪，认证器通常会为每个依赖方和用户的组合都创建一对公私钥。不过，由于认证器的存储空间有限，认证器通常不会存储每一个私钥，而是会通过各类信息和烧录在认证器内的主密钥“算”出对应的私钥以实现无限对公私钥。具体算法根据不同厂商会有所不同。对于 Yubikey，你可以在<a href=\"https://developers.yubico.com/U2F/Protocol_details/Key_generation.html\">这里</a>了解更多。</p></blockquote>\n<blockquote><p>如果依赖方需要，用户同意后，发送给依赖方的公钥凭证中可以包含用于辨认认证器型号的信息，不过这对隐私的影响微乎其微。</p></blockquote>\n<h2>浏览器接口</h2>\n<p>要使用 WebAuthn，我们必须要依靠浏览器作为媒介和验证器进行交互，而这就需要浏览器对于 WebAuthn 的支持了。绝大多数新版本的现代浏览器都为 WebAuthn 提供了统一的接口，而在这一段中我们会了解如何使用相关的接口。但是在开始之前，我们可以先来看看浏览器的支持程度（2020.9）。</p>\n<div class=\"mdui-table-fluid\"><table class=\"mdui-table\">\n<thead><tr>\n<th>浏览器</th>\n<th>支持情况</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>桌面端 Chrome</td>\n<td>67+</td>\n</tr>\n<tr>\n<td>移动端 Chrome</td>\n<td>67+<sup>[1]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Firefox</td>\n<td>60+</td>\n</tr>\n<tr>\n<td>移动端 Firefox</td>\n<td>不支持<sup>[2]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Edge</td>\n<td>18+</td>\n</tr>\n<tr>\n<td>移动端 Edge</td>\n<td>不支持<sup>[3]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Safari</td>\n<td>13+</td>\n</tr>\n<tr>\n<td>移动端 Safari</td>\n<td>13.3+<sup>[4]</sup>\n</td>\n</tr>\n<tr>\n<td>桌面端 Opera</td>\n<td>54+</td>\n</tr>\n<tr>\n<td>移动端 Opera</td>\n<td>不支持</td>\n</tr>\n</tbody>\n</table></div>\n<p><sup>[1]</sup> 受平台限制，Chrome 在 iOS 平台上不支持 WebAuthn，在 Android 平台上支持大部分 WebAuthn 功能，但仍不支持部分特性（如 <code>userVerification</code>）。<br><sup>[2]</sup> 移动端 Firefox 80 以下的版本支持 WebAuthn 但似乎会忽略 <code>authenticatorAttachment</code> 等一部分参数，同时移动端 Firefox Beta 80 以下的版本支持 WebAuthn 但无法成功调用。自 80 版本起移动端 Firefox 暂时取消了对 WebAuthn 的支持（可能是 Bug）。<br><sup>[3]</sup> 移动端 Edge 似乎支持 WebAuthn 但无法成功调用。<br><sup>[4]</sup> Safari iOS/iPad OS 13 仅支持外部认证器，无法调用 Touch ID 或 Face ID；自 iOS/iPad OS 14 起 Safari 已支持全功能 WebAuthn，可以调用 Touch ID/Face ID</p>\n<p>当然，一众国产浏览器，包括 Samsung Browser 和 Yandex Browser，目前都不支持 WebAuthn。此外，由于 WebAuthn 涉及外部验证器和 TPM 可信平台模块等，用户的操作系统也会对 WebAuthn 的可用性造成影响。以下是一些需要注意的信息：</p>\n<ul>\n<li>Windows 10 1903 以下版本仅 Edge 能提供完整支持，其他浏览器只能使用 USB Key 等外部认证器；1903+ 中所有浏览器都可以通过 Windows Hello 带来完整的 WebAuthn 支持</li>\n<li>Android 需要安装并开启 Google 服务</li>\n<li>iOS/iPad OS 13.3 以下的版本不支持 WebAuthn，iOS/iPad OS 14 以下的版本支持有限（参考上文），iOS/iPad OS 14 开始 Safari 已支持全功能 WebAuthn（功能完整度甚至超过了 Android）</li>\n</ul>\n<p>可以看出，WebAuthn 的发展之路仍然很漫长，但好在桌面端对它的支持已经比较完善了，在一些情况下我们完全有理由使用它。</p>\n<hr>\n<p>来看看浏览器提供了怎么样的接口吧。要使用 WebAuthn，我们可以使用 <code>navigator.credentials.create()</code> 请求认证器生成公钥凭证和 <code>navigator.credentials.get()</code> 请求获取公钥凭证。</p>\n<blockquote><p>你或许已经对 Credential Management API 有所了解了。通过这些 API，我们还可以实现一些有趣的特性，不过这值得另开一篇文章来讲了。</p></blockquote>\n<p>对于一个基础的实现，<code>navigator.credentials.create()</code> 需要传入的参数如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        challenge,\r\n        rp: {\r\n            id,\r\n            name\r\n        },\r\n        user: {\r\n            id,\r\n            name,\r\n            displayName\r\n        },\r\n        pubKeyCredParams: [\r\n            {\r\n                type: \"public-key\",\r\n                alg\r\n            }\r\n        ],\r\n        authenticatorSelection: {\r\n            authenticatorAttachment,\r\n            userVerification\r\n        },\r\n        excludeCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>在 <code>navigator.credentials.create()</code> 方法中，我们必须传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值。这指明了我们需要创建公钥凭证，而非普通的密码凭证。然后，在 <code>publicKey</code> 对象中设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rp: Object</code>：依赖方信息，其中有一项为必须：\n<ul>\n<li>\n<code>rp.id: String</code>：（可选）依赖方 ID，必须为当前域名或为当前域名的子集的域名（不是子域名）。如域名为 <code>test.123.example.com</code>，则依赖方 ID 可以是 <code>test.123.example.com</code>, <code>123.example.com</code> 或 <code>example.com</code>。不指定则默认使用当前域名</li>\n<li>\n<code>rp.name: String</code>：依赖方名称，用于方便用户辨认</li>\n</ul>\n</li>\n<li>\n<code>user: Object</code>：用户信息，其中有三项为必须：\n<ul>\n<li>\n<code>user.id: Uint8Array</code>：转换为 <code>Uint8Array</code> 的字符串。<strong>出于安全考量，这应尽可能不与任何用户信息相关联，如不要包含用户名、用户邮箱等</strong>\n</li>\n<li>\n<code>user.name: String</code>：登录用户名</li>\n<li>\n<code>user.dispalyName: String</code>：用于显示的用户名称，显示与否的具体行为取决于浏览器</li>\n</ul>\n</li>\n<li>\n<code>pubKeyCredParams: Array</code>：一个算法列表，指明依赖方接受哪些签名算法。列表的每一项都是一个对象，拥有两个属性：\n<ul>\n<li>\n<code>pubKeyCredParams[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>pubKeyCredParams[].alg: Number</code>：一个负整数，用于标明算法。具体算法对应的数字可以在 <a href=\"https://www.iana.org/assignments/cose/cose.xhtml#algorithms\">COSE</a> 找到</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection: Object</code>：（可选）用于过滤正确的认证器，这里介绍常用的一个参数：\n<ul>\n<li>\n<code>authenticatorSelection.authenticatorAttachment: String</code>：（可选）指定要求的认证器类型。如果没有满足要求的认证器，认证可能会失败。该参数可以为 <code>null</code>（表示接受所有类型的认证器）或是以下两个值之一：\n<ul>\n<li>\n<code>platform</code>：表示仅接受平台内置的、无法移除的认证器，如手机的指纹识别设备</li>\n<li>\n<code>cross-platform</code>：表示仅接受外部认证器，如 USB Key</li>\n</ul>\n</li>\n<li>\n<code>authenticatorSelection.userVerification: String</code>：（可选）指定认证器是否需要验证“用户为本人 (User Verified, UV)”，否则只须“用户在场 (User Present, UP)”。具体验证过程取决于认证器（不同认证器的认证方法不同，也有认证器不支持用户验证），而对验证结果的处理情况则取决于依赖方。该参数可以为以下三个值之一：\n<ul>\n<li>\n<code>required</code>：依赖方要求用户验证</li>\n<li>\n<code>preferred</code>：（默认）依赖方希望有用户验证，但也接受用户在场的结果</li>\n<li>\n<code>discouraged</code>：依赖方不关心用户验证。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>excludeCredentials: Array</code>：（可选）用于标识要排除的凭证，可以避免同一个用户多次注册同一个认证器。如果用户试图注册相同的认证器，用户代理会抛出 <code>InvalidStateError</code> 错误。数组中的每一项都是一个公钥凭证对象，包含以下属性：\n<ul>\n<li>\n<code>excludeCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>excludeCredentials[].id: Uint8Array</code>：要排除的凭证 ID</li>\n<li>\n<code>excludeCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，超时后将强制终止 <code>create()</code> 并抛出错误。若不设置，将使用用户代理的默认值；若太大或太小，则使用最接近的用户代理默认值范围中的值。推荐值为 5000-120000</li>\n</ul>\n<blockquote><p>对于 <code>pubKeyCredParams</code>，通常我们只需添加 ES256 (alg: -7) 算法即可兼容大部分外部认证器，此外，再添加 RS256 (alg: -257) 算法即可兼容大部分平台内置认证器（如 Windows Hello）。当然，前端添加算法之后，后端也需要相应的算法支持。</p></blockquote>\n<blockquote><p>对于 <code>userVerification</code>，由于默认值 \"preferred\" 并不能很好地被所有设备支持，因此无论在 <code>create()</code> 中还是 <code>get()</code> 中不指定该参数都会在 Chrome 中触发一条警告。具体请参阅<a href=\"https://chromium.googlesource.com/chromium/src/+/master/content/browser/webauth/uv_preferred.md\">这个页面</a>。</p></blockquote>\n<p>调用 <code>create()</code> 之后，我们就可以拿到一个 <code>Promise</code>，并可以在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>create()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAttestationResponse {\r\n        attestationObject: ArrayBuffer(390) {},\r\n        clientDataJSON: ArrayBuffer(121) {}\r\n    },\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\",\r\n    type: \"public-key\"\r\n}</pre>\n<p>其中有：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：<code>AuthenticatorAttestationResponse</code> 对象，是 <code>PublicKeyCredential</code> 的主要部分，包含以下两个内容：\n<ul>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n<li>\n<code>response.attestationObject: ArrayBuffer</code>：CBOR 编码的认证器数据，包含凭证公钥、凭证 ID、签名（如果有）、签名计数等信息</li>\n</ul>\n</li>\n</ul>\n<p>然后将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串，我们就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证与注册了。具体怎么操作，我们会在下文详细讨论。当然，别忘了 <code>catch()</code> 注册过程中抛出的任何错误。</p>\n<blockquote><p>你可能会认为在所有情况下，注册时认证器都会对挑战进行签名。实际上在大部分情况下（同时也是默认情况），<strong>注册时认证器并不会对挑战进行签名</strong>，<code>attestationObject</code> 并不会包含签名后的挑战。只有依赖方明确要求证明且用户同意（部分浏览器要求）后认证器才会对挑战进行签名（具体实现据情况会有所不同）。对此，<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion#Attestation\">MDN 解释道</a>“大部分情况下，用户注册公钥时我们会使用「初次使用时信任模型」(TOFU) ，此时验证公钥是没有必要的。”要了解更多关于证明的内容，请参阅“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>而对于 <code>navigator.credentials.get()</code>，我们可以传入如下的参数：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.get({\r\n    publicKey: {\r\n        challenge,\r\n        rpId,\r\n        userVerification,\r\n        allowCredentials: [\r\n            {\r\n                id,\r\n                transports: [],\r\n                type: \"public-key\"\r\n            }\r\n        ],\r\n        timeout\r\n    }\r\n})</pre>\n<p>和 <code>create()</code> 一样，对于 <code>get()</code> 我们需要传入一个对象，其中只有一对名为 <code>publicKey</code> 的键值，指明我们需要获取的是公钥凭证而非普通的密码凭证。在 <code>publicKey</code> 对象中我们可以设置这些常用参数：</p>\n<ul>\n<li>\n<code>challenge: Uint8Array</code>：转换为 <code>Uint8Array</code> 的挑战，长度至少为 16，建议为 32</li>\n<li>\n<code>rpID: String</code>：（可选）依赖方 ID，需要和注册认证器时的一致。规则和上述的 <code>rp.id</code> 一致，不指定默认使用当前域名</li>\n<li>\n<code>userVerification: String</code>：和上文一样，只是需要注意它这次不在 <code>authenticatorSelection</code> 中了</li>\n<li>\n<code>allowCredentials: Array</code>：（可选）用于标识允许的凭证 ID，使用户代理找到正确的认证器。只有符合这个列表中凭证 ID 的凭证才能被成功返回。数组中的每一项都是对象，包含以下属性：\n<ul>\n<li>\n<code>allowCredentials[].type: String</code>：值只能为 \"public-key\"</li>\n<li>\n<code>allowCredentials[].id: Uint8Array</code>：允许的凭证 ID</li>\n<li>\n<code>allowCredentials[].transports: Array</code>：（可选）用于指定该凭证所需的认证器与用户代理的通信方式，可以包含以下的一或多个字符串：\n<ul>\n<li>\n<code>usb</code>：可以通过 USB 连接的认证器</li>\n<li>\n<code>nfc</code>：可以通过 NFC 连接的认证器</li>\n<li>\n<code>ble</code>：可以通过蓝牙连接的认证器</li>\n<li>\n<code>internal</code>：平台内置的、无法移除的认证器</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<code>timeout: Number</code>：（可选）方法超时时间的毫秒数，和上面的一样，推荐值为 5000-120000</li>\n</ul>\n<p>嗯，要传入的参数少多了。之后，和 <code>create()</code> 一样，调用 <code>get()</code> 之后，我们就可以拿到一个 <code>Promise</code> 并在 <code>then</code> 中获得认证器返回的 <code>PublicKeyCredential</code> 对象。以下是一个 <code>get()</code> 返回的 <code>PublicKeyCredential</code> 对象的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">PublicKeyCredential {\r\n    rawId: ArrayBuffer(32) {},\r\n    response: AuthenticatorAssertionResponse {\r\n        authenticatorData: ArrayBuffer(37) {},\r\n        signature: ArrayBuffer(256) {},\r\n        userHandle: ArrayBuffer(64) {},\r\n        clientDataJSON: ArrayBuffer(118) {}\r\n    }\r\n    id: \"VByF2w2hDXkVsevQFZdbOJdyCTGOrI1-sVEzOzsNnY0\"\r\n    type: \"public-key\"\r\n}</pre>\n<p>这里的东西就比 <code>create()</code> 时拿到的要多了。看看我们拿到了什么吧：</p>\n<ul>\n<li>\n<code>id: String</code>：Base64URL 编码的凭证 ID</li>\n<li>\n<code>rawId: ArrayBuffer</code>：<code>ArrayBuffer</code> 的原始凭证 ID</li>\n<li>\n<code>type: String</code>：一定是 \"public-key\"</li>\n<li>\n<code>response: Object</code>：对于验证流程，认证会返回 <code>AuthenticatorAssertionResponse</code> 而不是 <code>AuthenticatorAttestationResponse</code> 对象，这个对象包含以下 4 个属性：\n<ul>\n<li>\n<code>response.authenticatorData: ArrayBuffer</code>：认证器信息，包含认证状态、签名计数等</li>\n<li>\n<code>response.signature: ArrayBuffer</code>：被认证器签名的 <code>authenticatorData</code> + <code>clientDataHash</code>（<code>clientDataJSON</code> 的 SHA-256 hash）</li>\n<li>\n<code>response.userHandle: ArrayBuffer</code>：<code>create()</code> 创建凭证时的用户 ID <code>user.id</code>。许多 U2F 设备不支持这一特性，这一项将会是 <code>null</code>\n</li>\n<li>\n<code>response.clientDataJSON: ArrayBuffer</code>：客户端数据，包含 origin（即凭证请求来源）、挑战等信息</li>\n</ul>\n</li>\n</ul>\n<p>同样地，我们将 <code>ArrayBuffer</code> 们以合适的方式编码成字符串后就可以把 <code>PublicKeyCredential</code> 发送给依赖方以供验证了。至于具体怎么做，别急，马上就来讲一讲。</p>\n<h2>简单实现</h2>\n<p>了这么多，我们终于可以实现一个简单的 WebAuthn 认证页面了。由于在实际操作中 WebAuthn 相关的数据解码和密码计算比较复杂，在服务器端我们可以使用第三方库来帮我们做这些脏活累活，我们只需专注于具体流程就可以了。</p>\n<p>要寻找可用的第三方库，你可以在 <a href=\"https://webauthn.io/\">webauthn.io</a> 上找到适用于各种语言的第三方库——除了 PHP（笑）。不过好在你可以在 GitHub 上找到几个不错的 PHP WebAuthn 库，比如 <a href=\"https://github.com/web-auth/webauthn-framework\">web-auth/webauthn-framework</a>。</p>\n<p>在我们的这个例子中，我们关心的主要是前端逻辑；而后端我们可以使用各类几乎已经做到开箱即用的第三方库，这样我们可以专注于流程而不必关心细节。当然如果你想了解后端的解码细节，可以阅读“<a href=\"https://flyhigher.top/#webauthn-decode\">手动解个码</a>”一节。</p>\n<hr>\n<p>让我们先从注册开始吧。现在，用户点击了注册认证器的按钮，一个请求被发送给服务器（也就是依赖方）。在最简单的情况中，依赖方需要将三个内容发送给浏览器：<strong>挑战、用户信息和用户已注册的凭证 ID 列表（即 <code>excludeCredentials</code>）</strong>。当然依赖方也可以自由选择发送更多信息，只要最终前端能构建合法的参数即可。</p>\n<p>挑战最终会被转换为 <code>Uint8Array</code>，即一组 0-255 的整数。如果使用 PHP，在后端我们可以这样生成 Base64 编码的挑战：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"php\">$challenge = \"\";\r\nfor($i = 0; $i \n<p>对于用户信息，我们需要登录名、显示名称和 ID 三项内容。我们可以从数据库中取出用户信息，也可以新建一份。需要注意的是，<strong>出于安全和隐私的考量，ID 不应该包含用户的任何信息，比如用户邮箱等。</strong>推荐的做法是和挑战一样，生成一个随机字符串/一组随机数，并将其于用户关联起来以供之后使用。</p>\n<p>发送已注册的凭证 ID 列表是为了防止用户重复注册同一个认证器。正确设置该列表后，如果用户试图注册同一个认证器，浏览器会中止流程并抛出 <code>InvalidStateError</code>。</p>\n<p>最后，别忘了将挑战等一些后续可能会用到的信息临时存储起来。Session 就是一个很好的选择。</p>\n<p>将所有信息发送到浏览器之后，我们应该可以构建出新建凭证所需的参数了。由于有多个参数需要以 <code>Uint8Array</code> 的形式传入，我们可以准备一个简单的工具函数帮我们将 Base64 的字符串转为 <code>Uint8Array</code>。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function str2ab(str){\r\n    return Uint8Array.from(window.atob(str), c=&gt;c.charCodeAt(0));\r\n}</pre>\n<p>除了 <code>challenge</code>, <code>rp</code>, <code>user</code> 和 <code>excludeCredentials</code> 几部分需要你根据具体情况设置外，上文提到的其他参数一般可以这么设置：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">publicKey: {\r\n    challenge, // 自行设置\r\n    rp, // 自行设置\r\n    user, // 自行设置\r\n    pubKeyCredParams: [\r\n        {\r\n            type: \"public-key\",\r\n            alg: -7 // ES256\r\n        },\r\n        {\r\n            type: \"public-key\",\r\n            alg: -257 // RS256\r\n        }\r\n    ],\r\n    authenticatorSelection: {\r\n        userVerification: \"discouraged\",\r\n        authenticatorAttachment: null // 除非用户指定，大部分情况下无需指定\r\n    },\r\n    excludeCredentials, // 自行设置\r\n    timeout: 60000\r\n}</pre>\n<p>然后就是传入 <code>navigator.credentials.create()</code>，拿到 <code>PublicKeyCredential</code>。如果一切顺利，接下来我们就需要考虑如何将返回的内容传回依赖方了。由于我们拿到的很多都是 <code>ArrayBuffer</code>，我们需要将其进行编码。再准备一个工具函数吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function array2b64String(a) {\r\n    return window.btoa(String.fromCharCode(...a));\r\n}</pre>\n<p>然后适当处理，我们就可以得到一个方便传输的 JSON 字符串了：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({publicKey}).then((credentialInfo) =&gt; {\r\n    const publicKeyCredential = {\r\n        id: credentialInfo.id,\r\n        type: credentialInfo.type,\r\n        rawId: array2b64String(new Uint8Array(credentialInfo.rawId)),\r\n        response: {\r\n            clientDataJSON: array2b64String(new Uint8Array(credentialInfo.response.clientDataJSON)),\r\n            attestationObject: array2b64String(new Uint8Array(credentialInfo.response.attestationObject))\r\n        }\r\n    };\r\n    return publicKeyCredential;\r\n}).then(JSON.stringify).then((authenticatorResponseJSON) =&gt; {\r\n    // 可以发送了\r\n}).catch((error) =&gt; {\r\n    console.warn(error); // 捕获错误\r\n})</pre>\n<p>依赖方收到数据以后，还需要做三件事：验证挑战、存储凭证 ID 和存储公钥。如果数据解码顺利，且收到的挑战和之前发送的一致，就可以认为注册成功，将凭证 ID 及公钥与用户关联起来。这一步有很多第三方库可以帮我们做，对于基础实现我们就不深入探究了。</p>\n<blockquote><p>由于不同厂商的认证器的实现方式不同，<strong>我们并不能保证凭证 ID 一定是全局唯一的</strong>，也就是说，凭证 ID 有可能碰撞——即使这些凭证实际上是不同的。依赖方在实现凭证 ID 的存储及查找时，需要注意和用户 ID 结合进行存储或查找，或是直接在注册认证器时在服务器端对比阻止相同的凭证 ID。</p></blockquote>\n<hr><p>接下来就可以进行验证了。某天，用户点击了验证按钮准备登录，于是浏览器发送了验证请求到依赖方，同时附上要登录的用户名。接下来依赖方至少需要发送两项内容给浏览器：<strong>挑战和用户已绑定的凭证 ID 列表（即 <code>allowCredentials</code>）。</strong></p>\n<p>之后前端的处理流程就和注册时基本一致了。只是需要注意验证流程中获取到的 <code>PublicKeyCredential</code> 的结构和注册时的稍有不同。</p>\n<p>当浏览器将数据传回后，依赖方需要做的事情就比之前要麻烦一些了。依赖方需要验证挑战，并用之前存储的公钥验证签名和签名计数。同样地，这一步有很多第三方库可以帮我们做。最后，如果验证全部通过，我们就可以允许用户登录了。</p>\n<p>到目前为止，我们已经实现了一个简单的 WebAuthn 验证服务。不过这只是一个最基础的实现，对于很多高安全要求的身份认证这是远远不够的。因此，我们需要摆脱对第三方库的依赖，深入了解 WebAuthn。你可以继续阅读“<a href=\"https://flyhigher.top/#deep-into-webauthn\">深入了解 WebAuthn</a>”部分，不过对于基础的 WebAuthn 实现，我们的旅程就到这里了。</p>\n<h2>拓展阅读</h2>\n<p>如果你的目标只是快速了解如何开发 WebAuthn，那么你阅读到这里就可以了。同时，上一节例子中的部分代码来自于我为了这篇文章开发的 WordPress 插件 WP-WebAuthn，这个插件可以为你的 WordPress 启用 WebAuthn 无密码登录（并非二步验证），你可以查阅插件的 <a href=\"https://github.com/yrccondor/wp-webauthn\">GitHub 存储库</a>了解更多，也可以自己安装试一试。</p>\n<p>如果你正在使用 Chrome 开发，Chrome 87+ 版本添加了一个 WebAuthn 开发者面板，可以帮助你在没有任何实体验证器的情况下开发 WebAuthn 功能。你可以在 Google 的<a href=\"https://developers.google.com/web/tools/chrome-devtools/webauthn\">这篇文章</a>中了解更多。不够，如果你正在使用 Firefox，很遗憾目前我还没有找到对应的开发工具或是浏览器扩展可用。</p>\n<p>如果你希望了解更多关于非对称加密的数学证明，可以查阅阮一峰老师的<a href=\"http://www.ruanyifeng.com/blog/2013/06/rsa_algorithm_part_one.html\">这篇文章</a>。</p>\n<p>如果你希望了解更多关于 Credential Management API 的信息，可以查阅<a href=\"https://medium.com/dev-channel/sign-in-on-the-web-credential-management-api-and-best-practices-d21aed14b6fe\">这篇文章</a>（英文）。</p>\n<p>如果你希望了解更多 WebAuthn 的细节，可以继续往下阅读。<span></span></p>\n<h1>深入了解 WebAuthn</h1>\n<p>如上文所说，如果摆脱对第三方库的依赖，或是要实现更安全的 WebAuthn，我们必须深入了解 WebAuthn。在这一部分中，我们会详细讨论上文没有提到的一些概念和参数，并了解 WebAuthn 中各类数据的结构以实现解码与验证。先来看一看一些进阶的选项吧。</p>\n<h2>进阶选项</h2>\n<p>没错，上文提到的传入 <code>navigator.credentials.create()</code> 和 <code>navigator.credentials.get()</code> 方法的参数其实只是所有参数的一部分。对于 <code>create()</code>，我们还可以配置这些可选内容（上文提及的已省略）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">navigator.credentials.create({\r\n    publicKey: {\r\n        rp: {\r\n            icon\r\n        },\r\n        user: {\r\n            icon\r\n        },\r\n        attestation,\r\n        authenticatorSelection: {\r\n            requireResidentKey\r\n        },\r\n        extensions\r\n    }\r\n})</pre>\n</pre>\n<ul>\n<li>\n<code>rp.icon: String</code> 和 <code>user.icon</code>：是的，你可以为依赖方和用户设置图标，可以使用 HTTPS URL 或 Base64，一般长度不能超过 128 字节，不过大部分浏览器不会显示图标，或是有非常小的图片体积限制，所以一般没有使用这一属性的必要</li>\n<li>\n<code>attestation: String</code>：表明依赖方是否需要证明。可选三个值：\n<ul>\n<li>\n<code>none</code>：（默认）不需要证明。如上文所述，依赖方不关心证明，因此认证器不会签名。对于 iOS/iPad OS 13，必须设置为此值，否则验证将失败</li>\n<li>\n<code>indirect</code>：依赖方需要证明，但证明方式可由认证器选择。在支持匿名证明的认证器上，认证器会通过匿名证明的方式签名挑战，并向依赖方提供签名方式等信息</li>\n<li>\n<code>direct</code>：依赖方要求直接证明。此时认证器会使用烧录在认证器中的公钥进行签名，同时向依赖方提供签名方式等信息以供依赖方验证认证器是否可信。更多信息可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节</li>\n</ul>\n</li>\n<li>在 <code>authenticatorSelection</code> 中，我们还可以设置两个可选属性：\n<ul>\n<li>\n<code>authenticatorSelection.requireResidentKey: Boolean</code>：是否要求将私钥钥永久存储于认证器中。默认值为 <code>false</code>。对于 iOS/iPad OS 13，必须设置为 <code>false</code>，否则验证将失败</li>\n</ul>\n</li>\n</ul>\n<li>\n<code>extensions: Object</code>：WebAuthn 扩展，可以提供规范之外的配置和响应。由于实际情况中很少会使用这一特性，我们不会在这篇文章中讨论它</li>\n\n<blockquote><p>将 <code>requireResidentKey</code> 设置为 <code>true</code> 可以实现无用户名的登录，即认证器同时替代了用户名和密码。需要注意的是，尽管大部分认证器可以实现无限对公私钥，<strong>但能永久存储的私钥数量是有限的</strong>（对于 Yubikey，这通常是 25），因此只应在真正需要的时候启用此特性。我们会在“<a href=\"https://flyhigher.top/#login-without-username\">无用户名登录</a>”一节中详细讨论原因。</p></blockquote>\n<blockquote><p><strong>如果你没有高安全需求（如银行交易等），请不要向认证器索取证明</strong>，即将 <code>attestation</code> 设置为 \"none\"。对于普通身份认证来说，要求证明不必要的，且会有浏览器提示打扰到用户。</p></blockquote>\n<blockquote><p>Android 暂时无法实施用户验证，进而会导致依赖方验证失败。你可以在<a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=997538\">这里</a>追踪这个特性的实现情况。</p></blockquote>\n<blockquote>\n<p>对于 <code>extensions</code>，由于目前浏览器支持和应用范围有限，我们不会在这篇文章中涉及，不过你可以看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    uvm: true, // 要求认证器返回用户进行验证的方法\r\n    txAuthSimple: \"Please proceed\" // 在认证器上显示与交易有关的简短消息\r\n}</pre>\n<p>你可以在<a href=\"https://www.w3.org/2019/01/webauthn-extensions.html\">这个页面</a>了解更多关于 <code>extensions</code> 的信息。</p>\n</blockquote>\n<p>对于 <code>get()</code>，我们其实只有一个可选内容没讲了，即 <code>extensions</code>。和上文一样，我们不会在这篇文章中讨论它。</p>\n<p>就这些了！<span></span></p>\n<h2>手动解个码</h2>\n<p>是时候看看如何手动解码了。我们将会在这一节中讨论认证器返回的数据的结构以及如何正确地解码它们。</p>\n<p>首先我们来看看如何处理注册过程中认证器发回的数据。假设所有 <code>ArrayBuffer</code> 类型的值都被正确地以 Base64 编码，且后端已经将 JSON 的字符串解析为字典。先来复习一下，我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"ZRBkDBCEtq...9XY8atOcbg\",\r\n    type: \"public-key\",\r\n    rawId: \"ZRBkDBCEtq...9XY8atOcbg==\",\r\n    response: {\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...i5jcmVhdGUifQ==\",\r\n        attestationObject: \"o2NmbXRkbm9uZWd...xNHuAMzz2LxZA==\"\r\n    }\r\n}</pre>\n<p>这里的 <code>id</code> 就是凭证的 ID，如果验证正确，我们最终要将它存储起来并于用户关联。同时可以看到 Base64 编码后的 <code>rawId</code> 其实和 <code>id</code> 是一致的（不过 <code>id</code> 是 Base64URL 编码的）。而 <code>type</code> 则一定是 \"public-key\"。</p>\n<p>不过，我们主要关心的还是 <code>respose</code> 中的两项内容。首先是 <code>clientDataJSON</code>。它的处理比较简单，看名字就知道，它应该是一个 JSON 字符串。</p>\n<blockquote><p>小技巧：如果你看到一个 Base64 编码的字符串以 \"ey\" 开头，那么它大概率是一个 Base64 编码的 JSON。</p></blockquote>\n<p>将<code>clientDataJSON</code> Base64 解码再 JSON 解码之后我们就能得到一个字典：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"NI4i1vsNmP2KHcmyFnBCKRVQPfHgg34SsYZUOPZY2lM\",\r\n    extra_keys_may_be_added_here: \"do not compare clientDataJSON against a template. See https://goo.gl/yabPex\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>结构一目了然。在这里，我们需要验证三项内容：</p>\n<ul>\n<li>\n<code>challenge</code> 和之前发送的一致</li>\n<li>\n<code>origin</code> 为创建凭证的页面的源（协议+主机名+端口号，并非 URL）</li>\n<li>\n<code>type</code> 为 \"webauthn.create\"</li>\n</ul>\n<p>同时可以注意到有一个奇怪的 <code>extra_keys_may_be_added_here</code>。这其实是 Google 在 Chrome 中搞的一点小把戏，有一定概率会出现，提醒我们需要将 JSON 解析后再验证键值以防额外插入的键值影响验证。具体信息你可以访问那个 URL 看一看。</p>\n<p>对于 Firefox，我们会多得到两项 <code>clientExtensions</code> 和 <code>hashAlgorithm</code> ，分别指明了客户端扩展数据和签名算法。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"3-4\">{\r\n    challenge: \"dg6ost6ujhAA0g6WqLe-SOOH-tbhvjW9Sp90aPKlLJI\",\r\n    clientExtensions: {},\r\n    hashAlgorithm: \"SHA-256\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.create\"\r\n}</pre>\n<p>由于本文不考虑扩展数据，因此我们可以不考虑 <code>clientExtensions</code>。同时由于目前规范中指定的签名算法只有 SHA-256 一种，因此现阶段我们也可以简单地忽略 <code>hashAlgorithm</code>。</p>\n<p><code>clientDataJSON</code> 很简单地就处理完了。接下来我们要来看看 <code>attestationObject</code>。先来看看 <code>attestationObject</code> 的结构图示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s1-3.png\" alt=\"attestationObject 的结构\" width=\"1056\" height=\"532\" class=\"aligncenter size-full wp-image-2245\"></a>\n<p><code>attestationObject</code> 是 CBOR 编码后再被 Base64 编码的，因此我们需要额外对其进行 CBOR 解码。</p>\n<blockquote><p>CBOR (Concise Binary Object Representation, 简明二进制对象表示) 是一种多应用于物联网领域的编码方式，你可以将它看作体积更小、更方便物联网传输的二进制 JSON。大部分语言都可以找到对应的 CBOR 解码库。</p></blockquote>\n<p>我们当然不会手解 CBOR，直接来看看解开之后的样子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"none\",\r\n    attStmt: {},\r\n    authData: [211, 217, 43, 24, 199, ..., 97, 238, 166, 67, 107]\r\n}</pre>\n<p>这些键值的含义如下：</p>\n<ul>\n<li>\n<code>fmt</code>：标明证明的格式。WebAuthn 预定义了几种格式，分别为：\n<ul>\n<li>\n<code>none</code>：没有证明</li>\n<li>\n<code>packed</code>：为 WebAuthn 优化的证明格式</li>\n<li>\n<code>android-safetynet</code>：Android 使用的格式</li>\n<li>\n<code>android-key</code>：又是 Android 使用的格式</li>\n<li>\n<code>fido-u2f</code>：FIDO U2F 认证器使用的格式</li>\n<li>\n<code>tpm</code>：TPM 可信平台模块使用的格式</li>\n</ul>\n</li>\n<li>\n<code>attStmt</code>：证明对象，具体格式根据 <code>fmt</code> 的不同会有所不同</li>\n<li>\n<code>authData</code>：包含公钥、签名计数等来自认证器的数据</li>\n</ul>\n<p>诶，例子里的 <code>attStmt</code> 怎么是空的？还记得之前说的吗？大部分情况下，<strong>如果依赖方不要求证明，那么认证器不会签名挑战</strong>，于是 <code>fmt</code> 会变为 \"none\"，<code>attstmt</code> 会为空。如果不是高安全要求，我们可以只对这一种情况做支持。</p>\n<blockquote><p>注意，部分情况下 Firefox 会在不要求证明（即 <code>attestation</code> 为 \"none\"）时会返回 <code>fmt</code> 为 \"packed\" 的证明。<strong>这是符合规范的。</strong>此时认证器会进行自证明，你可以视情况进行处理。具体可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。</p></blockquote>\n<p>对于非 \"none\" 的 <code>fmt</code> 我们稍后再谈，现在我们先来看看 <code>authData</code>。来复习一下 <code>authData</code> 的结构：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s2-3.png\" alt=\"authData 的结构\" width=\"1056\" height=\"384\" class=\"aligncenter size-full wp-image-2240\"></a>\n<p>对于它的解码比较简单粗暴，我们要做的就是根据图示将它切开，然后适当地转换类型。其中各部分的含义如下：</p>\n<ul>\n<li>\n<code>rpIdHash</code>：如其名，SHA-256 的 <code>rpId</code>，长度 32 字节</li>\n<li>\n<code>flags</code>：标识认证状态，长度 1 字节。其中 8 位分别为：\n<ul>\n<li>\n<code>ED</code>：是否有扩展数据</li>\n<li>\n<code>AT</code>：是否包含 <code>attestedCredentialData</code>。通常注册认证器时会包含 <code>attestedCredentialData</code>，而验证时不包含</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>保留位</li>\n<li>\n<code>UV</code>：用户是否已验证</li>\n<li>保留位</li>\n<li>\n<code>UP</code>：用户是否在场</li>\n</ul>\n</li>\n<li>\n<code>signCount</code>：签名计数，长度 4 字节</li>\n<li>\n<code>attestedCredentialData</code>：包含公钥等凭据数据，变长。其结构如下：\n<ul>\n<li>\n<code>aaguid</code>：认证器的 AAGUID (Authenticator Attestation GUID)，对于同一型号的认证器，它们的 AAGUID 是相同的</li>\n<li>\n<code>credentialIdLength</code>：标识 <code>credentialId</code> 的长度，长度 2 字节</li>\n<li>\n<code>credentialId</code>：凭证 ID，和 <code>rawId</code> 一致，长度由 <code>credentialIdLength</code> 定义</li>\n<li>\n<code>credentialPublicKey</code>：CBOR 编码的 COSE 格式的凭证公钥，变长</li>\n</ul>\n</li>\n<li>\n<code>extensions</code>：扩展数据，变长，本文不讨论</li>\n</ul>\n<blockquote><p>出于隐私考虑，如果不要求证明，认证器会以 0 填充 AAGUID。</p></blockquote>\n<p>如果你的后端在使用 Node.js，这里有个工具函数可以帮你完成这一步（不考虑 <code>extensions</code>）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function parseAuthData(buffer){\r\n    let rpIdHash = buffer.slice(0, 32);\r\n    buffer = buffer.slice(32);\r\n  \r\n    let flagsBuf = buffer.slice(0, 1);\r\n    buffer = buffer.slice(1);\r\n\r\n    let flagsInt = flagsBuf[0];\r\n    let flags = {\r\n        up: !!(flagsInt &amp; 0x01),\r\n        uv: !!(flagsInt &amp; 0x04),\r\n        at: !!(flagsInt &amp; 0x40),\r\n        ed: !!(flagsInt &amp; 0x80),\r\n        flagsInt\r\n    }\r\n\r\n    let counterBuf = buffer.slice(0, 4);\r\n    buffer = buffer.slice(4);\r\n  \r\n    let counter = counterBuf.readUInt32BE(0);\r\n\r\n    let aaguid = undefined;\r\n    let credID = undefined;\r\n    let COSEPublicKey = undefined;\r\n\r\n    if(flags.at) {\r\n        aaguid = buffer.slice(0, 16);\r\n        buffer = buffer.slice(16);\r\n\r\n        let credIDLenBuf = buffer.slice(0, 2);\r\n        buffer = buffer.slice(2);\r\n\r\n        let credIDLen = credIDLenBuf.readUInt16BE(0);\r\n        credID = buffer.slice(0, credIDLen);\r\n\r\n        buffer = buffer.slice(credIDLen);\r\n        COSEPublicKey = buffer;\r\n    }\r\n\r\n    return {rpIdHash, flagsBuf, flags, counter, counterBuf, aaguid, credID, COSEPublicKey}\r\n}</pre>\n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>解开后，依赖方至少需要做四件事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>存储签名计数</li>\n<li>存储公钥</li>\n</ol>\n<blockquote><p>签名计数不一定从 0 开始。</p></blockquote>\n<p>对于公钥，也就是 <code>credentialPublicKey</code>，我们需要多一次 CBOR 解码，然后就可以得到类似这样的公钥：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    kty: \"EC\",\r\n    alg: \"ECDSA_w_SHA256\",\r\n    crv: \"P-256\",\r\n    x: \"ZGQALNfqo0L7HFYQHFHCS/X5db49z0ePnuQEs3w3X8w=\",\r\n    y: \"6qYxhnjYuez/Q8N6vX7nIIGfxFWdZ25NzQfZYuYOalA=\"\r\n}</pre>\n<p>然后可以选择适当的方法将其存储起来，之后的步骤本文就不再赘述了。现在，将目光拉回来，让我们看看包含证明的 <code>attestationObject</code> 是怎么样的。我们来看一个例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    fmt: \"packed\",\r\n    attStmt: {\r\n        alg: -7,\r\n        sig: [48, 70, 2, 33, 0, ..., 132, 78, 46, 100, 21],\r\n        x5c: [\r\n            [48, 130, 2, 189, 48, 130, 1, 165, 160, 3, ..., 177, 48, 125, 191, 145, 24, 225, 169, 41, 248]\r\n        ]\r\n    },\r\n    authData: [211, 217, 43, 24, 199, ..., 158, 54, 87, 126, 54]\r\n}</pre>\n<p>这里有一个使用 \"packed\" 格式的证明。此时，<code>attStmt</code> 中包含三个值：</p>\n<ul>\n<li>\n<code>alg</code>：签名算法</li>\n<li>\n<code>sig</code>：签名值</li>\n<li>\n<code>x5c</code>：X.509 编码的证书链</li>\n</ul>\n<p>我们不会在这一节中详述对签名的验证。要了解更多信息，你可以阅读“<a href=\"https://flyhigher.top/#verify-authenticator\">验证认证器</a>”一节。现在，让我们来看看如何处理验证过程中认证器发回的数据。我们得到的数据应该是这样的（数据较长，已省略一部分）：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    id: \"hmqdxPLit9...BWeVxZqdvU\",\r\n    type: \"public-key\",\r\n    rawId: \"hmqdxPLit9V...BWeVxZqdvU=\",\r\n    response: {\r\n        authenticatorData: \"09krGMcWTf...UFAAAABA==\",\r\n        clientDataJSON: \"eyJjaGFsbGVuZ2U...XRobi5nZXQifQ==\",\r\n        signature: \"UsXZV3pvT3np8btj6V0g...WBkaqyt88DrD40qh+A==\",\r\n        userHandle: \"MmYxNWYzZjQyZjM...Tg2ZDY4NzhlNw==\"\r\n    }\r\n}</pre>\n<p><code>id</code>, <code>rawId</code> 和 <code>type</code> 和之前一样，这里就不再赘述了。让我们来看看 <code>response</code>。首先是 <code>clientDataJSON</code>，和之前的解法一样，要验证的内容也一样，只是 <code>type</code> 从 \"webauthn.create\" 变成了 \"webauthn.get\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    challenge: \"bnkd2CmrEuvKnAFXs2QlC3SKlg4XFvGtP4HJL1yEWyU\",\r\n    origin: \"https://dev.axton.cc\",\r\n    type: \"webauthn.get\"\r\n}</pre>\n<p>然后是 <code>userHandle</code>。前面讲过，这是认证器在创建凭证时的用户 ID。如果用户在使用 U2F 认证器，很可能这一项为空，所以大部分情况下我们不关心这一项。</p>\n<p>接着来看 <code>authenticatorData</code>。这其实就是之前的 <code>attestedCredentialData</code>，只是这次不包含公钥。以相同的方式切开数据，我们应该可以得到 <code>rpIdHash</code>, <code>flags</code>和 <code>signCount</code> 三项。此时，依赖方至少需要做这三样事情：</p>\n<ol>\n<li>验证 <code>rpIdHash</code> 和预期的一致</li>\n<li>按预期检查用户在场和用户验证状态</li>\n<li>验证签名计数大于之前存储的计数，并更新存储的计数</li>\n</ol>\n<blockquote><p>如果签名计数比之前的小，那么这个认证器很可能是伪造的，应该中止验证并返回验证失败。同时，签名计数不一定每次按 1 递增，通常只要计数比此前的大就认为计数检查通过。</p></blockquote>\n<p>最后，我们来看 <code>signature</code>，也就是签名。不过这个签名不是简单的对挑战的签名，具体算法如图所示：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/s3-2.png\" alt=\"签名过程\" width=\"1034\" height=\"587\" class=\"aligncenter size-full wp-image-2231\"></a>\n<p>计算签名时，认证器会将 <code>authenticatorData</code> 与 <code>clientDataHash</code>（也就是 <code>clientDataJSON</code> 的 SHA-256 Hash）拼接起来，并使用对应的私钥签名。依赖方应该使用对应的公钥将其解密，并验证内容是否是 <code>authenticatorData</code> 与 <code>clientDataHash</code> 的拼接。这部分的计算不在本文的讨论范围内。</p>\n<p>最后，如果全部验证通过，返回验证成功。<span></span></p>\n<h2>验证认证器</h2>\n<p>WebAuthn 已经很安全了，但有的时候我们还要让它更安全一点。比如，如果用户在使用伪造的或是自制的认证器，认证器的安全性就得不到保证。此时，依赖方就需要验证认证器是否是可信的认证器。</p>\n<blockquote><p>这一过程仅发生在注册认证器时。此时，如果认证器验证通过，就可以存储公钥，后续步骤和之前描述的一致。</p></blockquote>\n<blockquote><p>再次说明，如果不是对安全性有极高的要求，向认证器索取证明以验证认证器是否可信是没有必要的。此外，验证认证器需要依赖方自行维护可信认证器列表，大大增加了维护的复杂性。</p></blockquote>\n<p>在调用 <code>navigator.credentials.create()</code> 时，我们可以将 <code>attestation</code> 设置为非 \"none\" 来向认证器索取证明。除无证明外，WebAuthn 定义了四种证明方式：</p>\n<ul>\n<li>Basic Attestation (Basic) ：基础的证明方式，认证器会使用认证器私钥签名</li>\n<li>Self Attestation (Self) ：自证明，认证器会使用凭证私钥签名</li>\n<li>Attestation CA (AttCA) ：认证器会使用多个证明私钥之一签名</li>\n<li>Elliptic Curve based Direct Anonymous Attestation (ECDAA) ：通过 <a href=\"https://en.wikipedia.org/wiki/Direct_Anonymous_Attestation\">DAA</a> 实现的匿名证明</li>\n</ul>\n<blockquote><p>和验证过程一样，这里签名的目标是 <code>authenticatorData</code> 和 <code>clientDataHash</code> 的连接。</p></blockquote>\n<p>还记得 <code>create()</code> 时 <code>attestation</code> 可选的三个值吗？这个值会决定认证器最终使用哪种方式进行证明。复习一下：</p>\n<ul>\n<li>\n<code>none</code>：大部分情况下认证器会选择不进行证明，部分认证器会进行自证明。此时 AAGUID 会被 0 填充</li>\n<li>\n<code>indirect</code>：认证器会试图通过替换 AAGUID 和选择合适的证明方式来进行匿名证明，具体方式由认证器选择</li>\n<li>\n<code>direct</code>：认证器会提供最直接的证明信息</li>\n</ul>\n<p>注意，大部分情况下，当认证器需要向依赖方证明自己可信时需要提供认证器公钥，<strong>这会触发浏览器提示，只有用户同意后认证器才会进行证明，否则认证器将不提供证明。</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/5.png\" alt=\"浏览器提示\" width=\"446\" height=\"283\" class=\"aligncenter size-full wp-image-2217\"></a>\n<blockquote><p>为什么浏览器会说“安全密钥的品牌和型号”？事实上，为了避免用户通过认证器证书被跨依赖方追踪，FIDO 要求使用相同认证器证书的认证器的数量不能少于 100,000。于是大部分认证器厂商会选择<strong>让同一型号的认证器共用同一份证书。</strong>因此，浏览器的会询问用户是否同意“查看安全密钥的品牌和型号”。</p></blockquote>\n<blockquote><p>Android Safety Net 不会向用户询问是否同意，而是会静默进行证明。</p></blockquote>\n<p>当证明不为空时，依赖方收到数据后根据 <code>attestationObject.fmt</code> 的不同，需要选择不同的验证方式来验证认证器的可信情况。出于篇幅原因，这里我们不会讨论每一种 <code>fmt</code> 的验证方式，更多信息你可以查阅 <a href=\"https://www.w3.org/TR/webauthn/#defined-attestation-formats\">W3C 文档</a>。</p>\n<p>当 <code>fmt</code> 为 <code>packed</code> 时，<code>attestationObject.attStmt</code> 可能会有三种格式：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">// 自证明\r\n{\r\n    alg, // 算法\r\n    sig // 签名\r\n}\r\n// 基础或证明 CA 证明\r\n{\r\n    alg,\r\n    sig,\r\n    x5c // X.509 证书链\r\n}\r\n// 椭圆曲线证明\r\n{\r\n    alg,\r\n    sig,\r\n    ecdaaKeyId // ECDAA-Issuer 公钥标识符\r\n}</pre>\n<p>此时，依赖方需要检查证书符合预期格式并检查证书是否在可信链上。首先，如果证明中既没有 <code>ecdaaKeyId</code> 也没有 <code>x5c</code>，就说明这个证明使用的是自证明，只需使用认证器提供的公钥验证即可；如果有 <code>x5c</code>，那么就需要验证 <code>x5c</code> 中的证书是否在可信链上。将 <code>x5c</code> 中的每个证书以 Base64 编码，按 64 个字符切开，并在头尾加上 <code>-----BEGIN CERTIFICATE-----</code> 和 <code>-----END CERTIFICATE-----</code>就能得到一个证书字符串了。之后，依赖方需要验证证书是否可信。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">function base64ToPem(b64cert){\r\n    let pemcert = '';\r\n    for(let i = 0; i \n<p>这段代码来自 <a href=\"https://gist.github.com/herrjemand/dbeb2c2b76362052e5268224660b6fbc\">herrjemand</a></p>\n<p>至于 <code>ecdaaKeyId</code>，由于目前应用较少，处理方法可能需要你另寻资料了。检查证书的具体步骤已经超出了本文的范围，具体可以查阅<a href=\"https://medium.com/@herrjemand/verifying-fido2-packed-attestation-a067a9b2facd\">这篇文章</a>（英文）。</p>\n<blockquote><p>你可以在 <a href=\"https://fidoalliance.org/metadata/\">FIDO Metadata Service</a> 找到各大厂商认证器的可信证书链。</p></blockquote>\n<p>当在 Android 上调起 WebAuthn 时，大部分情况下 <code>fmt</code> 将会为 <code>safety-net</code>。此时 <code>attestationObject.attStmt</code> 的结构会是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    ver: \"200616037\",\r\n    response: {\r\n        type: \"Buffer\",\r\n        data: [101, 121, 74, 104, 98, ..., 115, 104, 104, 82, 65]\r\n    }\r\n}</pre>\n<p>此时，<code>clientDataJSON</code> 中还会出现 <code>androidPackageName</code> 键，值是调起 WebAuthn 验证的应用的包名，如 Chrome 就是 \"com.android.chrome\"。</p>\n<p>在这个证明中，<code>data</code> 其实是一个 JWT 字符串，我们可以将它编码为字符串并将其按照 JWT 进行解码（别忘了验证 JWT 签名）。最终我们会得到一个类似这样的 Payload：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    nonce: \"0QAurN4F9wik6GEkblDJhGuf4kuaqZn5zaaxlvD1hlA=\",\r\n    timestampMs: 1584950686460,\r\n    apkPackageName: \"com.google.android.gms\",\r\n    apkDigestSha256: \"2BQHno+bmWWwdLUYylS8HLt5ESJzci3nt2uui71ojyE=\",\r\n    ctsProfileMatch: true,\r\n    apkCertificateDigestSha256: [\r\n        \"8P1sW0EPicslw7UzRsiXL64w+O50Ed+RBICtay2g24M=\"\r\n    ],\r\n    basicIntegrity: true,\r\n    evaluationType: \"BASIC\"\r\n}</pre>\n<p>其中包含了有关设备状态的一些信息。比如说，如果 <code>ctsProfileMatch</code> 为 <code>false</code>，那么该设备很有可能被 root 了。对于高安全要求的场景，我们可以视情况进行验证。</p>\n<p>同时我们可以在 JWT Header 中验证证明的有效性。我们应该能取得这样的 Header：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">{\r\n    alg: \"RS256\",\r\n    x5c: [\r\n        \"MIIFkzCCBHugAwIBAgIR...uvlyjOwAzXuMu7M+PWRc\",\r\n        \"MIIESjCCAzKgAwIBAgIN...UK4v4ZUN80atnZz1yg==\"\r\n    ]\r\n}</pre>\n<p>这里的结构就和上方的 <code>x5c</code> 验证类似了。具体步骤可以参考<a href=\"https://medium.com/@herrjemand/verifying-fido2-safetynet-attestation-bd261ce1978d\">这篇文章</a>（英文）。</p>\n<p>其他所有格式的验证方式也都可以在<a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">这篇文章</a>（英文）中找到。<span></span></p>\n<h2>无用户名登录</h2>\n<p>认证器已经代替了密码，可是这还不够！在进行第一因素认证（即使用 WebAuthn 登录）时，我们还是需要输入用户名，然后才能进行身份认证。懒惰是第一生产力，我们能不能不输入用户名就进行身份认证呢？实际上，大部分认证器都允许我们无用户名登录。<strong>而这一特性的核心就是 Resident Key 客户端密钥驻留。</strong></p>\n<p>你可以思考一下，为什么普通的 WebAuthn 为什么不能实现无用户名登录？事实上，大部分认证器为了实现无限对公私钥，会将私钥通过 Key Warp 等技术加密后包含在凭证 ID 中发送给依赖方，这样认证器本身就不用存储任何信息。不过，这就导致需要身份认证时，依赖方必须通过用户名找到对应的凭证 ID，将其发送给认证器以供其算出私钥。</p>\n<blockquote><p>Yubikey 实现了一个基于 HMAC 的算法，认证器可以在私钥不离开认证器的前提下（常规的 Key Warp 算法中实际上私钥离开了认证器）通过一些输入和凭证 ID 重新计算私钥，你可以阅读<a href=\"https://www.yubico.com/blog/yubicos-u2f-key-wrapping/\">这篇文章</a>了解更多。</p></blockquote>\n<blockquote><p>客户端通过凭证 ID 查找对应认证器的算法根据系统的不同是不同的。通常凭证 ID 中会包含认证器信息，因此系统可以通过凭证 ID 找到对应的认证器。</p></blockquote>\n<p>要避免输入用户名，我们可以要求认证器将私钥在自己的内存中也存储一份。这样，依赖方无需提供凭证 ID，认证器就可以通过依赖方 ID 找到所需的私钥并签名公钥。以下是具体流程：</p>\n<p>注册时：</p>\n<ol>\n<li>依赖方请求新建凭证，同时要求启用客户端密钥</li>\n<li>认证器生成一对公私钥，并将私钥存储在永久内存中且与依赖方 ID 及用户 ID 绑定，随后将公钥发送给依赖方以供存储</li>\n<li>依赖方将用户 ID 即公钥与用户绑定</li>\n</ol><p>验证时：</p>\n<ol>\n<li>依赖方请求验证，但不必提供除依赖方 ID 以外的更多信息</li>\n<li>用户选择认证器</li>\n<li>认证器根据依赖方 ID 找到对应私钥</li>\n<li>如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录</li>\n<li>确定私钥后，认证器签名挑战并将其返回，同时返回用户 ID</li>\n<li>依赖方通过用户 ID 找到对应用户并用对应公钥检查签名，正确则允许对应用户登录</li>\n</ol><blockquote><p>可以看到，这个特性同时要求认证器存储用户 ID，即上面提到过的 <code>userHandle</code>。依赖方需要根据此信息找到对应用户，因此不支持 <code>userHandle</code> 的 U2F 认证器无法进行无用户名登录。</p></blockquote>\n<blockquote><p>如之前所说，<strong>认证器能永久存储的私钥数量是有限的</strong>，因此只应在真正需要无用户名登录的时候启用此特性。</p></blockquote>\n<blockquote><p>目前暂时没有办法检测认证器是否支持客户端密钥驻留，因此在无用户名验证失败时应 fallback 至常规的 WebAuthn 验证，即向用户询问用户名。</p></blockquote>\n<p>现在让我们来看看如何实现这一特性吧。首先，调用 <code>navigator.credentials.create()</code> 时我们需要注意两个参数：<code>requireResidentKey</code> 必须为 <code>true</code>，<code>userVerification</code> 必须为 \"required\"。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"5-6\">navigator.credentials.create({\r\n    publicKey: {\r\n        ...\r\n        authenticatorSelection: {\r\n            requireResidentKey: true,\r\n            userVerification: \"required\"\r\n            ...\r\n        },\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Windows Hello <strong>似乎</strong>会存储所有已注册的凭据，因此无论是否指定 <code>requireResidentKey</code>，你都可以通过 Windows Hello 进行无用户名登录。</p></blockquote>\n<p>随后，浏览器会询问用户是否允许认证器存储私钥。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/03/3.png\" alt=\"浏览器提示\" width=\"445\" height=\"285\" class=\"aligncenter size-full wp-image-2208\"></a>\n<p>如果用户同意，认证器会存储私钥，并和普通的 WebAuthn 一样返回信息。不过，依赖方收到数据之后，只需将公钥、用户 ID 与用户关联起来，而不必再将凭证 ID 与用户关联起来。至此注册完成。</p>\n<p>之后，在用户请求登录时，无需再向依赖方提供用户名。同时在传入 <code>navigator.credentials.get()</code> 的参数中也有两个需要注意：<code>userVerification</code> 必须为 \"required\"，同时 <code>allowCredentials</code> 必须为空。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\" data-enlighter-highlight=\"4-5\">navigator.credentials.get({\r\n    publicKey: {\r\n        ...\r\n        userVerification: \"required\",\r\n        allowCredentials: [],\r\n        ...\r\n    }\r\n})</pre>\n<blockquote><p>Android 暂不支持无用户名验证，空的 <code>allowCredentials</code> 会导致浏览器返回 <code>NotSupportedError</code> 错误。</p></blockquote>\n<p>此时，认证器会根据依赖方 ID 找到对应的私钥。如果有多个对应私钥，认证器会询问用户应该使用哪个身份信息登录。用户选择后，认证器就会使用对应的私钥签名挑战并将其返回。此时，<code>userHandle</code> 一定不为空。</p>\n<p>依赖方收到数据后，需要将 <code>userHandle</code> 作为用户 ID 找到对应的用户，并使用对应的公钥验证签名。如果验证成功，则认为对应的用户身份认证成功，依赖方可以允许其登录。至此验证结束。</p>\n<blockquote><p>有的时候你可能会需要清除认证器中的密钥。绝大多数认证器都提供了对应的软件以供清除存储的密钥，但大部分情况下这会重置整个认证器，这意味着相关认证器此前的所有凭证均会失效。因此建议不要将日常使用的认证器作为开发测试用的认证器。</p></blockquote>\n<h2>从 U2F 认证迁移</h2>\n<p>如果你的服务此前提供了 U2F 第二因素认证，你可能会希望在将依赖方从 U2F 升级到 WebAuthn 时用户此前注册的 U2F 认证器仍然可用而无需重新注册。由于 WebAuthn 向后兼容 U2F 设备，用户是可以继续使用原有的 U2F 认证器的。不过，由于 WebAuthn 的依赖方 ID 与 U2F 的 <code>appid</code> 并不一定相同，你需要将原有的 U2F <code>appid</code> 随 WebAuthn 流程一起传递给认证器，认证器才能使用正确的私钥进行响应。</p>\n<p>要实现这一点，我们只需要在注册及认证仪式中使用 WebAuthn 的 <code>appid</code> 扩展。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">extensions: {\r\n    appid: \"https://example.com\" //U2F appid\r\n}</pre>\n<p>此时认证器便可以得到正确的私钥，之后的流程与正常情况一致；依赖方除了正常的 WebAuthn 流程外，不需要再做任何其它操作。</p>\n<h2>拓展阅读</h2>\n<p>我们的 WebAuthn 之旅到这里就真的结束了。不过，你仍然可以自行探究，了解更多。<strong>本文只是一个粗浅的使用指南</strong>，而被称为“Web 身份认证的未来”的 WebAuthn 的深层还要很多细节值得我们挖掘学习，不过本文不会再继续讨论了。</p>\n<p>如果你想了解更多关于 WebAuthn 的信息，最好的方法是直接阅读 <a href=\"https://www.w3.org/TR/webauthn\">W3C 规范</a>。此外，Yubico 也提供了不错的 <a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn 文档</a>。</p>\n<p>要了解更多认证器存储凭证的信息，你可以阅读<a href=\"https://duo.com/labs/tech-notes/how-security-keys-store-credentials\">这篇文章</a>（英文）。</p>\n<p>如果你想了解更多 Android Safety Net 是怎样运作的，可以观看<a href=\"https://youtu.be/8lv_9mydrjg\">这个视频</a>，并通过 <a href=\"https://developer.android.com/training/safetynet/attestation\">Google 的文档</a>了解 Android Safety Net 的更多信息。</p>\n<p>如果你想方便地调试 WebAuthn，<a href=\"https://webauthn.me/\">webauthn.me</a> 提供了一个非常直观方便的<a href=\"https://webauthn.me/debugger\">调试器</a>。</p>\n<h1>参考资料</h1>\n<p><a href=\"https://www.w3.org/TR/webauthn\">WebAuthn Level 1 规范 - W3C</a><br><a href=\"https://github.com/w3c/webauthn\">WebAuthn Level 2 草案 - W3C</a><br><a href=\"https://blog.techbridge.cc/2019/08/17/webauthn-intro/\">一起来了解Web Authentication - TechBridge 技术共笔部落格</a><br><a href=\"https://medium.com/@herrjemand/introduction-to-webauthn-api-5fd1fb46c285\">Introduction to WebAuthn API - Medium</a><br><a href=\"https://medium.com/@herrjemand/verifying-fido2-responses-4691288c8770\">WebAuthn/FIDO2: Verifying responses - Medium</a><br><a href=\"https://obeta.me/posts/2019-03-01/WebAuthn%E4%BB%8B%E7%BB%8D%E4%B8%8E%E4%BD%BF%E7%94%A8\">WebAuthn介绍与使用 - obeta</a><br><a href=\"https://webauthn.io/\">webauthn.io</a><br><a href=\"https://webauthn.guide/\">webauthn.guide</a><br><a href=\"https://webauthn.me/\">webauthn.me</a><br><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Authentication_API/Attestation_and_Assertion\">Attestation and Assertion - MDN</a><br><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Authentication_API\">Web Authentication API - MDN</a>（顺便翻译了一半）<br><a href=\"https://fidoalliance.org/fido-technotes-the-truth-about-attestation/\">FIDO TechNotes: The Truth about Attestation - FIDO Alliance</a><br><a href=\"https://developers.yubico.com/WebAuthn/WebAuthn_Developer_Guide/\">WebAuthn Developer Guide - Yubico</a><br><a href=\"https://en.wikipedia.org/wiki/WebAuthn\">WebAuthn - Wikipedia</a><br><a href=\"https://techcommunity.microsoft.com/t5/identity-standards-blog/all-about-fido2-ctap2-and-webauthn/ba-p/288910\">All about FIDO2, CTAP2 and WebAuthn - Microsoft Tech Community</a><br><a href=\"https://webauthn-doc.spomky-labs.com/\">Webauthn Framework</a><br><a href=\"https://zhuanlan.zhihu.com/p/25279015\">如何开发支持 FIDO U2F 登录的网站 - 知乎专栏</a><br></p></pre>\n","link":"https://flyhigher.top/develop/2160.html"},{"title":"NLP 找门：用朴素贝叶斯进行文本分类","date":"2020-01-29 11:39:58","description":"\n<blockquote>\n<p>有一天，神收到了一封垃圾邮件，于是世界上就有了朴素贝叶斯算法。</p>\n<footer>——我瞎编的</footer>\n</blockquote>\n<p>为什么这篇文章的标题是 NLP 找门呢？因为如果你看完了这篇文章，你就可以<strong>准备入门</strong>自然语言处理 (<strong>N</strong>atural <strong>L</strong>anguage <strong>P</strong>rocessing) 了。我会把这篇文章当作一篇彻彻底底的 NLP 入门文章来写，尽量避免“专业高端”词汇和“全是奇怪符号”的式子，这样<strong>只要你有高中数学基础</strong>，就能毫无压力地看完这篇文章，学会使用朴素贝叶斯分类算法分类文本。</p>\n<p>让我们开始吧。</p>\n<h1>所以，啥是朴素贝叶斯？</h1>\n<p>简单来说，朴素贝叶斯 (Naïve Bayes) <strong>是一个简单但高效的分类算法</strong>，在进行不复杂的文本分类时高效且拥有不低的准确度，判断垃圾邮件就是用朴素贝叶斯进行文本分类的一个经典例子。当然朴素贝叶斯分类不仅能用在 NLP 中，在许多分类问题中朴素贝叶斯也有非常好的效果，但我们今天只关注它在 NLP 中的应用。</p>\n<p>要了解朴素贝叶斯，我们要先来了解一下贝叶斯定理。</p>\n<blockquote>\n<p>每增加一个数学公式都会使读者减半。</p>\n<footer>——霍金</footer>\n</blockquote>\n<p>那么，就让我们先来看看贝叶斯定理的公式吧（笑</p>\n<p>$$P(A|B) = \\frac{P(AB)}{P(B)} = \\frac{P(B|A)P(A)}{P(B)}$$</p>\n<p>其实还是很简单的，运用高中的条件概率知识就能理解。本质上，贝叶斯定理给出了一种方法，使得我们可以在 \\(P(A|B)\\) 和 \\(P(B|A)\\) 之间互相转换，因为通常情况下它们是不一样的。</p>\n<p>要更好地理解，请考虑这样一个例子：</p>\n<blockquote><p>假设有一个学校图书馆，图书管理员正为找不到某本书而发愁。已知老师有 70% 的意愿借走这本书，而是学生的意愿是 30%，这个学校的师生比例是 1:10，那么借走这本书的人是老师的概率有多大？</p></blockquote>\n<p>设学校总人数为 \\(T\\)，我们可以很容易地写出这样的一个式子：</p>\n<p>$$\\begin{align} P &amp; = \\frac{T\\cdot\\frac{1}{11}\\cdot 70\\%}{T\\cdot\\frac{1}{11}\\cdot 70\\%+T\\cdot\\frac{10}{11}\\cdot 30\\%} \\\\ &amp; = \\frac{70\\%}{70\\%+10\\times30\\%} \\\\ &amp; = \\frac{7}{37} \\end{align}$$</p>\n<p>这就是贝叶斯定理了！等等，你可能会挠挠头，这哪里是贝叶斯了？别急，如果我们把最上面的式子换个字母的话...</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>在这里，\\(H\\) 指 Hypothesis，即假设，而 \\(E\\) 指 Evidence，即证据。这样，这个式子就很好理解了，在我们上面的例子里，借走书是证据，那么 \\(P(E)\\) 就是某个人选择借走这本书的概率；这个人是老师是假设，那么这个人是老师的概率是 \\(P(H)\\)。<strong>注意这里的概率指在学校中抽一个人是老师的概率，并不是“在借走书的前提下”这个人是老师的概率</strong>，而“在借走书的前提下”这个人是老师的概率应该是 \\(P(H|E)\\)，也正是我们要求的概率。同样地，而“这个人是老师”的前提下借走书的概率就是 \\(P(E|H)\\) 了。</p>\n<p>那么再来看看上面我们凭小学知识就列出的计算式，如果把里面的具体数据换成概率来表示的话，这个式子就会变成...</p>\n<p>$$P(H|E) = \\frac{T\\cdot P(E|H)P(H)}{T\\cdot P(E|H)P(H) + T\\cdot P(E|\\neg H)P(\\neg H)}$$</p>\n<p>好吧，这里解释一下，\\(\\neg\\) 符号表示“非”，所以 \\(P(E|\\neg H)\\) 表示在“这个人不是老师”的前提下借走书的概率。而 \\(T\\cdot P(E|H)P(H)\\) + \\(T\\cdot P(E|\\neg H)P(\\neg H)\\)，即“可能借走书的老师的数量 + 可能借走书的学生的数量”，就是“可能借走书的人的数量”了，也就是 \\(T\\cdot P(E)\\)。上下消去 \\(T\\)，我们就能得到上面的式子了。</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)}$$</p>\n<p>这就是贝叶斯了定理。如果你还是不太清楚，可以去看看 3Blue1Brown 的<a href=\"https://www.bilibili.com/video/av84799361\">这个视频</a>，图形化的讲解会清晰很多。</p>\n<p>这里我要提一下这个式子里各部分的专有名称了（“专业高端”词汇警告），你可以不记住，直接看后面。</p>\n<ul>\n<li>\\(P(H|E)\\) 叫做 \\(H\\) 的<strong>后验概率</strong>，反之亦然</li>\n<li>\\(P(H)\\) 叫做 \\(H\\) 的<strong>先验概率</strong>，反之亦然</li>\n<li>特别地，我们把 \\(P(E|H)\\) 称作<strong>“似然值”</strong>，即 likelihood</li>\n</ul>\n<p>那什么是朴素贝叶斯呢？按上面所说的，朴素贝叶斯是一种分类算法。简单来说，朴素贝叶斯将一个对象的各个特征考虑为互相独立，然后根据这些特征的概率的乘积来判断对象所属的分类。基本原理如下：</p>\n<p>$$P(H|E) = \\frac{P(E|H)P(H)}{P(E)} \\propto P(E|H)P(H) = P(H)\\prod_{i}P(W_i|H)$$</p>\n<p>在这里，\\(W_i\\) 指某一对象的第 \\(i\\) 个特征，对于文本分类来说，这就是一段文本中的某个单词。</p>\n<p>朴素贝叶斯之所以“朴素”，是因为它要求<strong>各个特征间是独立的</strong>，在文本分类中也就是各个单词之间互不干扰。虽然思路简单的代价是适用范围变窄，不过由于这样的简化在很多情况下已经足够了，因此实际上朴素贝叶斯的应用范围非常广。<del>你看朴素贝叶斯 <strong>N</strong>aïve <strong>B</strong>ayes 的缩写都是 NB 了，能不厉害吗（逃</del></p>\n<h1>那么，咋分类啊</h1>\n<p>看来你这下完全听懂了呢（笑），是时候看看如何在 NLP 中应用朴素贝叶斯了。和上面一样，我们用一个具体的例子来说明。我们的目标是让电脑学会分类美国共和党和民主党的演讲稿，由于两个党派的演讲风格不同，所以这样的分类在理论上是可行的。</p>\n<div class=\"wp-block-file\">\n<a href=\"https://acdn.flyhigher.top/nlp/material.zip\" download>material.zip</a><a href=\"https://acdn.flyhigher.top/nlp/material.zip\" class=\"wp-block-file__button\" download>下载</a>\n</div>\n<p>上面我们要用到的数据集，你可以下载下来一起动手玩一玩。先说一下数据集的数据结构吧，压缩包里有两个文件，<code>train.txt</code> 将会被当作训练数据集，而 <code>test.txt</code> 则会作为训练结束后的验证数据集。两个文本文件里数据的结构是类似的，就像这样：</p>\n<pre class=\"EnlighterJSRAW\">BLUE WELL I AM SO HONORED AND PERSONALLY UNKNOWNWORD TO BE HERE...\r\nRED THANK YOU . THIS IS QUITE AN INSTITUTION . IT'S GOOD TO BE...</pre>\n<p>每行都是一篇演讲稿，每行的第一个单词指明了这篇演讲稿所属的党派，<code>RED</code> 指共和党，而 <code>BLUE</code> 指民主党。所有单词和符号都已经被转为大写并由空格分隔方便处理。<code>train.txt</code> 有共和党演讲稿和民主党演讲稿各 23 篇，<code>test.txt</code> 有 6 篇共和党演讲稿，12 篇民主党演讲稿。</p>\n<p>明白了？那我们就开始吧。</p>\n<h2>捋捋思路</h2>\n<p>首先，我们需要考虑如何在文本分类中应用朴素贝叶斯。很简单，按朴素贝叶斯的思路，<strong>计算每个词在某一分类下的出现概率，然后将某篇文章的所有词的概率相乘，再乘以该分类的先验概率，就可以得到某篇文章在某一分类下的概率。</strong></p>\n<p>$$P(Class|Article) = P(Class)\\prod_{i}P(Word_i|Class)$$</p>\n<p>各个分类概率都计算完成后，概率最高的那个分类就是这篇文章可能所属的分类。这个思路的核心就是用词决定了文本风格，文本的不同类别用词会有差异，只要能量化这些差异就可以分类文本。在我们的例子中，我们可以从 <code>train.txt</code> 中统计各个词汇的出现情况，然后用 <code>test.txt</code> 中的数据按上面的算法验证我们算法的准确性。</p>\n<p>这个思路很简单也很清晰，但还有一些问题需要解决。<strong>第一，有的时候，我们的测试数据集中可能会出现一个在训练数据集中没有出现过的词语。这个时候，朴素贝叶斯的计算结果会是 0。</strong>如果我们把 0 乘进式子中，那就别想得到正常的结果了。所以，我们还需要对计算某一单词在某一分类中的式子稍加改进。使用拉普拉斯平滑，就可以避免出现概率为 0 的情况。别被名字吓到，拉普拉斯平滑是一种非常简单的平滑方法：在分子上 +1，在分母上加整个取值范围，这样就可以给整个分式加上非常微小的偏移，避免出现 0。</p>\n<p>$$\\begin{align} P(Word_i|Class) &amp; = \\frac{Word_iCountInClass}{AllWordCountInClass} \\\\ &amp; \\approx \\frac{Word_iCountInClass + 1}{AllWordCountInClass + UniqueWordCount} \\end{align}$$</p>\n<p><strong>第二，对于长文本，大部分词语在某一分类中的出现概率是远小于 1 的，加上长文本词汇量大，往往概率相乘的结果会非常小。</strong>受限于计算机处理浮点数的原理，精确处理这么小的数字是很麻烦的。幸好，运用一些简单的数学知识就可以将其转化为更精确的表达，<strong>那就是取对数。</strong></p>\n<p>首先，将概率计算结果取对数并不影响我们的计算结果。因为取对数是一个单调递增的操作，而我们计算概率只是为了排序选择概率最高的分类，因此取对数是不影响我们排序的。而把多项式取对数，等于把多项式的每一项取对数后相加。所以我们有：</p>\n<p>$$\\lg{\\Big(P(Class)\\prod_{i}P(Word_i|Class)\\Big)} = \\lg{P(Class)} + \\sum_i\\lg{P(Word_i|Class)}$$</p>\n<p>大部分情况下，在每一次取对数的时候，要取对数的数字的大小，即 \\(P(Word_i|Class)\\) 尚还在计算机能处理的范围内，<strong>因此我们可以放心地使用取对数的方法</strong>，避免计算机精度不够影响结果。</p>\n<p><strong>第三就是在某些情况下，可能会有部分词语干扰计算结果</strong>，如 and, is 这类的被大量使用的中性词。如果希望得到更好的结果，我们可以维护一个停用词表，在计算时排除停用词即可。或者，我们可以在计算完每个单词的出现数量后，排除数量最多的前 \\(N\\) 个单词，避免这些单词过多地影响计算。</p>\n<h2>写点代码</h2>\n<p>现在我们终于可以开始实战，写点代码了。我会用简单的 Python 来表达思路。好了，理一理思绪，第一步我们要做的，是统计训练数据集中的用词情况。具体来说，根据上面的思考，我们需要统计的有：</p>\n<ul>\n<li>每个单词在各分类中出现的数量</li>\n<li>各分类中的不重复词数量</li>\n</ul>\n<p>用 Python 简单表示如下：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\"># 读入数据过程略...\r\ndata_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ndata_blue = []\r\ndata_red = []\r\nword_count_blue = {}\r\nword_count_red = {}\r\n\r\nfor line_data in data_raw:\r\n    word_list = line_data.split(\" \") # 分隔单词\r\n    if word_list[0] == \"BLUE\":\r\n        for i in range(1,len(word_list)):\r\n            if not is_excluded(word_list[i]): # 判断是否为停用词\r\n                data_blue.append(word_list[i])\r\n                # 统计单词出现次数\r\n                word_count_blue.setdefault(word_list[i], 0)\r\n                word_count_blue[word_list[i]] += 1\r\n    elif word_list[0] == \"RED\":\r\n        # Class = red 时同理...\r\n\r\n#统计非重复词\r\nunique_words_blue = list(set(data_blue))\r\nunique_words_red = list(set(data_red))</pre>\n<p>训练过程到这里就结束了，计算机已经知道了各政党演讲的用词习惯。很简单吧？接下来我们就要使用测试数据集来测试准确度了。<strong>这里开始就涉及到朴素贝叶斯的计算了</strong>，可能会稍微复杂一点点。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"python\">import math\r\n#读入测试数据过程略...\r\ntest_data_raw = \"读入的数据\".split('\\n') # 按行分隔\r\ntest_data = []\r\n\r\nfor line_data in test_data_raw:\r\n    if line_data[0] == \"BLUE\":\r\n        content_data = line_data.split(\" \").pop(0)\r\n        test_data.append({\"class\": \"blue\", \"content\": content_data})\r\n    elif line_data[0] == 'RED':\r\n        # ...\r\n\r\nfor line_data in test_data:\r\n    posibility_blue = 0\r\n    for word in line_data[\"content\"]:\r\n        # 计算各单词概率，取对数后相加，使用了拉普拉斯平滑\r\n        if word in word_count_blue:\r\n            posibility_blue += math.log((word_count_blue[word]+1)/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n        else:\r\n            posibility_blue += math.log(1/(len(data_blue)+len(unique_words_blue)+len(unique_words_red)))\r\n    # 最后加上该分类概率的对数\r\n    posibility_blue += math.log(len(data_blue)/(len(data_blue)+len(data_red)))\r\n\r\n    # 计算 Red 同理...</pre>\n<p>计算完成后，我们就得到每篇演讲稿在各分类下的概率了。之后，简单的比较就能得出推断的分类：如果 \\(P(Red|Article)\\) 大于 \\(P(Blue|Article)\\)，那么这篇演讲稿就更可能是共和党的演讲稿，反之则是民主党的演讲稿。</p>\n<p>很好理解吧？那么这么简单的思路，准确性怎么样呢？对于我们的例子，这是我设置了个别停用词后的结果：</p>\n<pre class=\"EnlighterJSRAW\">+-----+-------+--------------+--------------+-------+-------+\r\n|   ID|  Class|        P(Red)|       P(Blue)|  Guess| Status|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|    1|   Blue|  -23204.68377|  -22998.67066|   Blue|      √|\r\n|    2|   Blue|  -16438.44625|  -16137.48257|   Blue|      √|\r\n|    3|   Blue|  -33468.81214|  -32567.61801|   Blue|      √|\r\n|    4|   Blue|    -8606.2193|   -8601.50426|   Blue|      √|\r\n|    5|   Blue|  -12430.97436|  -11935.70662|   Blue|      √|\r\n|    6|   Blue|  -44033.02883|  -43877.55367|   Blue|      √|\r\n|    7|   Blue|   -16947.2851|  -16758.57542|   Blue|      √|\r\n|    8|   Blue|  -26957.26997|  -26889.62444|   Blue|      √|\r\n|    9|   Blue|  -27503.73985|  -27249.21828|   Blue|      √|\r\n|   10|   Blue|   -20528.4457|   -19991.1248|   Blue|      √|\r\n|   11|   Blue|  -20337.96493|  -19860.12831|   Blue|      √|\r\n|   12|   Blue|  -28409.28489|  -28118.98017|   Blue|      √|\r\n|   13|    Red|  -13756.01015|  -14488.11751|    Red|      √|\r\n|   14|    Red|  -17221.22732|  -17710.15936|    Red|      √|\r\n|   15|    Red|  -17397.45136|  -17899.98659|    Red|      √|\r\n|   16|    Red|  -10724.69095|  -11092.77837|    Red|      √|\r\n|   17|    Red|  -10402.40027|  -10859.48681|    Red|      √|\r\n|   18|    Red|   -9371.53792|    -9669.6769|    Red|      √|\r\n+-----+-------+--------------+--------------+-------+-------+\r\n|                                      Total: 18/18, 100.0% |\r\n+-----------------------------------------------------------+</pre>\n<p><strong>100% 的准确率哦！</strong>事实上，对于我们的这个例子，就算不设置停用词，我们仍能达到 100% 的分类准确率。朴素贝叶斯分类的确很 NB 呢。</p>\n<h1>更进一步</h1>\n<p>我们的探索到这里就结束了，但如果你有兴趣，完全可以继续探索下去。我们的例子是一个非常简化的例子，在实际情况中，还有很多问题需要解决。比如，对于中文及类似语言，不存在拉丁语系的天然分词结构，而朴素贝叶斯的文本分类是基于单词的，那么<strong>中文的分词就会是个问题；</strong>再比如，对于朴素贝叶斯分类来说，<strong>词语之间的顺序是不影响分类结果的</strong>，但这就会导致“今天心情很好，但昨天不好”和“昨天心情很好，但今天不好”在朴素贝叶斯看来是一样的，要想获得更好的结果，我们必须<strong>考虑词语的顺序。</strong></p>\n<p>这些问题，今天我们就不再深究了，但你可以自己探索。比如，引入思路同样很简洁的马尔科夫链，我们就可以让计算机学会考虑词语间的顺序，不过那就会是另一个话题了。</p>\n","link":"https://flyhigher.top/develop/1989.html"},{"title":"MDx 中增强页面可访问性的细节","date":"2020-01-25 16:45:04","description":"\n<blockquote><p>这篇文章本来是打算发在 <a href=\"https://mdxblog.flyhigher.top/\">MDx Blog</a> 的，不过写到后来发现这篇文章相对来说还是有价值的，于是就将这篇文章转移到了无垠，MDx Blog 则不再发表这篇文章。</p></blockquote>\n<p>从 MDx 开发之初，增强页面的可访问性就被列为了一个重要目标。从 HTML 语义化，到 ARIA 地标，再到 <code>prefers-reduced-motion</code>，随着浏览器对于增强页面可访问性的支持功能越来越多，MDx 也在不断地更新，让更多的人都能毫无困难地浏览、查看由 MDx 渲染的网页。本文会详细说明一些 MDx 中增强页面可访问性的细节，<strong>如果你希望增强自己开发的网页的可访问性，本文可能会对你有所帮助。</strong></p>\n<h1>基础性增强</h1>\n<p>增强可访问性，最重要也是最基础的一点就是 HTML 语义化。通过使用 HTML 5 语义化标签和 ARIA Role 标签，我们可以很方便地<strong>将整个网页在语义上分为几部分，而这将有效地改善屏幕阅读器对网页的分析质量，使视力障碍用户更好地浏览网页。</strong></p>\n<h2>HTML 语义化</h2>\n<p><strong>HTML 语义化属于增强页面可访问性的基础中的基础。</strong>通过使用语义化的 HTML 标签，我们可以方便地为网页中的各部分标记功能而不影响页面样式。随着符合 HTML 5 的现代化网页成为主流，语义化标签已被很大一部分网站所支持，我也不过多赘述了。就举几个常用的“地标性”标签吧：</p>\n<ul>\n<li>\n<code>header</code> 标签标记页眉，默认样式同 <code>div</code>，不要把它和 <code>head</code> 搞混了</li>\n<li>\n<code>main</code> 标签标记页面的主要内容，默认样式同 <code>div</code>\n</li>\n<li>\n<code>article</code> 标签标记文章（在 HTML 5 中它指任何独立或可复用的文本），默认样式同 <code>div</code>\n</li>\n<li>\n<code>footer</code> 标签标记页脚，默认样式同 <code>div</code>\n</li>\n<li>\n<code>nav</code> 标签标记页面导航栏区域，默认样式同 <code>div</code>\n</li>\n<li>\n<code>aside</code> 标签标记侧栏，默认样式同 <code>div</code>\n</li>\n<li>\n<code>section</code> 标签标记“一组内容”，你可以把它看作是划定网页中一块区域的通用标签，默认样式同 <code>div</code>\n</li>\n</ul>\n<p>只要用这些标签替代 <code>div</code> 而不是无脑使用 <code>div</code> 就能提高页面的可访问性。MDx 使用了这些标签来增强页面的可访问性。</p>\n<h2>下一步，ARIA</h2>\n<p>有的时候，出于一些原因，我们没法使用语义化的 HTML 标签，或者没有合适的语义化标签来标记内容，这时候<strong>我们就需要使用 ARIA (Accessible Rich Internet Applications，可访问的富互联网应用)。</strong>ARIA 的基础用法很简单，只要在相应元素上加上 <code>role</code> 属性指定该元素的功能即可。下面是一个简单的例子：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;div role=\"navigation\"&gt;\r\n  &lt;ul&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page A&lt;/a&gt;&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page B&lt;/li&gt;\r\n    &lt;li&gt;&lt;a href=\"#\"&gt;Page C&lt;/a&gt;&lt;/li&gt;\r\n  &lt;/ul&gt;\r\n&lt;/div&gt;</pre>\n<p>通过 <code>role=\"navigation\"</code>，我们把一个 <code>div</code> 标记为了导航栏区域。实际上，对屏幕阅读器来说，这和 <code>nav</code> 标签在语义上是一致的。上一节中的例子都可以分别用以下 ARIA Role 表示：</p>\n<ul>\n<li><code>role=\"heading\"</code></li>\n<li><code>role=\"main\"</code></li>\n<li><code>role=\"article\"</code></li>\n<li><code>role=\"contentinfo\"</code></li>\n<li><code>role=\"navigation\"</code></li>\n<li><code>role=\"complementary\"</code></li>\n<li><code>role=\"region\"</code></li>\n</ul>\n<p>除此以外，MDx 还使用了 <code>role=\"banner\"</code> 和 <code>role=\"search\"</code> 来分别标记页面中的顶部栏和搜索表单。另外，<strong>有的时候 <code>role</code> 属性还需配合 <code>aria-*</code> 属性一同使用</strong>，具体规则比较复杂，我就不在这里赘述了，具体可参考 <a href=\"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles\">WAI-ARIA Roles - MDN</a>。</p>\n<h1>媒体查询来帮忙</h1>\n<p>CSS 的媒体查询其实是一个非常强大的特性，<strong>妥善利用其中的一些特性，我们可以在网页外观上大大增强网页的可访问性。</strong>除了已经烂大街的“对浏览器窗口大小”响应的媒体查询，我会介绍 3 个很少有网站充分利用的媒体查询。</p>\n<h2>print</h2>\n<p><code>print</code> 媒体查询其实已经“历史悠久”了，<strong>只要使用 <code>@media print {...}</code> 就可以创建只在打印页面时生效的样式。</strong>通过这种方式，我们可以让页面在打印时应用一套为打印优化的样式，增强页面在物理纸张上的可访问性。</p>\n<blockquote><p>维基百科是对打印样式做了单独适配的著名例子。</p></blockquote>\n<p><strong>由于在打印的情况下，页面已经离开了“可交互”的范围，还有分页这种在屏幕中无需考虑的问题，要让页面在物理纸张上仍能被轻松地阅读，我们需要做一些特殊的适配。</strong>直接来看一个例子吧。以下是 MDx 针对打印情况进行的一些特殊优化，样式的具体理由已经写在了注释中。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media print {\r\n    /*隐藏不必要的元素*/\r\n    header, .mdx-ad-after-article, .mdx-ad-in-article, .mdx-post-money, .page-footer-nav, .mdx-same-posts, .spanout button, .mdui-drawer, .mdui-overlay, .mdui-menu, .mdx-share-img-dialog, .mdx-share-wechat-dialog {\r\n        display: none!important;\r\n    }\r\n\r\n    /*使用下划线标记链接*/\r\n    article a {\r\n        text-decoration: underline!important;\r\n    }\r\n    /*由于纸张不可交互，在链接后显示链接到的 URL*/\r\n    article a::after {\r\n        content: \"(\" attr(href) \")\";\r\n    }\r\n\r\n    /*强制白底黑字*/\r\n    html &gt; body {\r\n        background-color: white!important;\r\n    }\r\n    article p {\r\n        color: rgba(0,0,0,.8)!important;\r\n    }\r\n\r\n    /*对于纸张上的长文章，衬线字体拥有更好的可读性。以下字体列表来自 fonts.css*/\r\n    article {\r\n        font: 13pt Georgia, \"Nimbus Roman No9 L\", \"Songti SC\", \"Noto Serif CJK SC\", \"Source Han Serif SC\", \"Source Han Serif CN\", STSong, \"AR PL New Sung\", \"AR PL SungtiL GB\", NSimSun, SimSun, \"TW\\-Sung\", \"WenQuanYi Bitmap Song\", \"AR PL UMing CN\", \"AR PL UMing HK\", \"AR PL UMing TW\", \"AR PL UMing TW MBE\", PMingLiU, MingLiU, serif!important;\r\n    }\r\n\r\n    /*除部分元素外，禁止在元素内部分页*/\r\n    * {\r\n        page-break-inside: avoid;\r\n    }\r\n    article p, article a, #comments, article {\r\n        page-break-inside: auto;\r\n    }\r\n}</pre>\n<p>MDx 自 1.9.3 版本起已经包含了对文章页的打印样式优化。可以很容易地看出，优化后的样式在物理纸张上将更容易阅读。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/6.jpg\" alt=\"\" width=\"1345\" height=\"1602\" class=\"aligncenter size-full wp-image-1959\"></a>\n<h2>prefers-color-scheme</h2>\n<p><code>prefers-color-scheme</code> 是最近才被浏览器广泛支持的一个媒体查询，但它的功能却很强大：<strong>响应系统级黑暗模式。</strong>这样，我们可以在开启黑暗模式的系统中让网页具有更好的可读性。不过由于这个媒体查询直到最近才被广泛支持，因此大部分网站对此并没有进行适配。</p>\n<blockquote><p>一些适配这一特性的网站：少数派、微信公众平台（文章页）等。</p></blockquote>\n<p>通过像这样的媒体查询，我们可以在系统启用黑暗模式时让页面实时响应：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    body {\r\n        background-color: #212121;\r\n        color: rgba(255, 255, 255, .7);\r\n    }\r\n}</pre>\n<p><code>prefers-color-scheme</code> 一共有 3 个可能值：<code>no-preference</code>, <code>light</code> 和 <code>dark</code>。你也可以不像上面的例子那样默认使用亮色样式并在黑暗模式下启用黑暗样式，而可以反过来将黑暗样式作为默认，用亮色样式覆盖。在不支持的浏览器上将会显示默认样式（即媒体查询不会生效）。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<h2>prefers-reduced-motion</h2>\n<p>看名字就猜得出，<code>prefers-reduced-motion</code> 是和 <code>prefers-color-scheme</code> 师出同门的媒体查询。因此，和 <code>prefers-color-scheme</code> 一样，它也是在最近才获得了浏览器的广泛支持。它的作用也很强大：<strong>响应系统的“减弱动态效果”模式。</strong>这对某些不喜欢甚至无法接受动画的用户可能很有帮助。要知道，对有些用户来说这甚至是医疗上的必要。使用如下的媒体查询，我们可以在系统启用减弱动态效果模式时让页面实时响应，减弱动画：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-reduced-motion: reduce) {\r\n    /*只是一个示例，实际情况中可以保留一些淡入淡出效果*/\r\n    * {\r\n        transition: all 0s!important;\r\n        transform: none!important;\r\n    }\r\n}</pre>\n<p><code>prefers-reduced-motion</code> 只有 2 个可能值：<code>no-preference</code> 和 <code>reduce</code>，在不支持的浏览器上该媒体查询不会生效。</p>\n<p>MDx 已经在 1.9.6 版本中包含对这一媒体查询的支持。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/5.jpg\" alt=\"\" width=\"792\" height=\"515\" class=\"aligncenter size-full wp-image-1962\"></a>\n<h1>黑暗模式适配</h1>\n<p>黑暗模式可不是简单地切换到黑底白字这么简单。<strong>单纯地使用黑底白字会导致页面元素之间对比度过高，文字刺眼，反而降低了页面的可访问性。</strong>我在下面总结了几条应用在了 MDx 中的黑暗模式优化规则和 Google 推荐的优化规则：</p>\n<p><strong>一是避免黑底白字。</strong>黑底白字看起来真的很难受，事实上，深灰和浅灰是黑暗模式最好的配色。比较下方例子里的两段文本，毫无疑问深灰色背景和浅灰色文字搭配的样式的可读性要比黑底白字高很多。（p.s. 有时候这条规则在白底黑字时也适用）</p>\n<p><strong>二是更改部分元素的亮度和对比度以增强可读性。</strong>你可能已经注意到了，下面优化的例子里标题文字的颜色改变了。很明显，未优化的黑暗模式中标题可读性不如优化的版本。在实际中，我们通常可以通过 CSS 滤镜来实现这一更改。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    h1 {\r\n        /*反相颜色后再将色相旋转 180 度，使亮度反相*/\r\n        filter: invert(1) hue-rotate(180deg);\r\n    }\r\n}</pre>\n<p><strong>三是避免让图片过亮。</strong>未经处理的图片通常会导致过高的对比度，降低可读性。在 MDx 中，我选择降低图片的亮度来避免图片刺眼，而 Google 的建议则是使图片灰度，不过这会影响图片的整体观感。无论是哪一种方案，都可以使用 CSS 滤镜来轻松实现。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"css\">@media (prefers-color-scheme: dark) {\r\n    img { \r\n        /*MDx 方案*/\r\n        filter: brightness(.8);\r\n        /*Google 方案*/\r\n        filter: grayscale(.5);\r\n    }\r\n}</pre>\n<div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是未优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n<div>\n<h1>Cats\n</h1>\n<p>这里是经过优化的黑暗模式预览。接下来，让我们来看点可爱的猫猫吧。</p>\n<p><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/demo.jpg\"></p>\n</div>\n</div>\n<h1>其他细节</h1>\n<p>还有一些细节，虽然简单，但不可或缺。我把一部分没有在上文提到的 MDx 中的细节列在了这里。</p>\n<p><strong>一是允许页面缩放。</strong>在开发响应式页面时，很多网站会在页面头部添加这样一个 <code>meta</code>：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no\"&gt;</pre>\n<p>这样的 <code>meta</code> 设定了页面的宽度，却也固定了页面的缩放比例，用户难以手动放大网页。<strong>这样的设置对一部分视力障碍用户非常不友好</strong>，以至于苹果决定在自家的浏览器上忽略禁止缩放的 <code>meta</code>。按照 Google 的推荐，如果你在 MDx 设置中启用了“允许页面缩放”，那么 MDx 会输出这样的 <code>meta</code> 标签，允许页面进行五倍以内的缩放：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"html\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=5\"&gt;</pre>\n<p><strong>尽管很多时候放大页面会导致页面结构被破坏，但这大大增强了页面的可访问性，利大于弊。</strong>因此，在 MDx 中，“允许页面缩放”是默认启用的。</p>\n<p><strong>二是在跨设备阅读时同步阅读记录。</strong>这属于 MDx 的“元老级”功能之一。注意到页面右上角的那个“在其他设备上继续阅读”的按钮了吗？如果你滚动页面后重新点击它，你会发现二维码发生变化了。通过在二维码中记录阅读进度，用户在扫描二维码切换设备阅读时，MDx 在新设备上会自动滚动到和原设备上一致的位置——好吧，目前基于百分比的算法在某些情况下可能不太准，但我已经设计了一个更复杂但更精确的阅读进度记录算法，之后就会更新到 MDx 中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/8.jpg\" alt=\"\" width=\"1000\" height=\"574\" class=\"aligncenter size-full wp-image-1976\"></a>\n<p><strong>三是避免 Web 字体阻塞渲染。</strong>如果你在页面中使用了 Web 字体，在字体加载完成之前，浏览器可能不会渲染任何文本，这就导致用户可能需要等待一段时间才能开始浏览网页。Google 推荐使用 <code>font-display: swap;</code> 来向浏览器指定网页的 Web 字体渲染策略。这一规则会提供一个比较短的等待周期，如果在这段时间内 Web 字体没有完成加载，那么浏览器会以 fallback 字体渲染文本。任意时刻一旦 Web 字体完成渲染，浏览器就会使用 Web 字体重新渲染文本。这在大多数情况下都能满足可访问性的需求。</p>\n<p><strong>四是确保 html 元素具有合适的 <code>lang</code> 属性。</strong>这一属性声明了页面的主要语言，浏览器可以据此调整渲染策略，或者触发自动翻译；屏幕阅读器也能更好地阅读网页。</p>\n<p><strong>五是确保页面主要内容在丢失/禁用了 Javascript 甚至 CSS 的情况下仍然可用。</strong>作为一个以内容为主的网站，MDx 在禁用了 Javascript 的情况下页面主要内容仍然可用。这不只是为了 SEO，更是为了保证页面的可访问性。的确，目前的情况下，如果开启了 Lazyload，MDx 在禁用 Javascript 的情况下图片的确无法显示，但我会在后续版本中尽可能的优化这一问题。</p>\n<h1>附录：媒体查询开发技巧</h1>\n<p>有的时候，光有 CSS 响应媒体查询还不够，我们可能需要在 Javascript 中实时响应媒体查询。用如下代码就可以很简单地响应媒体查询：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">let mql = window.matchMedia(\"(prefers-reduced-motion: reduce)\");\r\nmql.addListener(handleMediaChange);\r\n\r\n//在添加监听后先调用一次，获得当前查询结果\r\nhandleMediaChange(mql);\r\n\r\nfunction handleMediaChange(mql){\r\n    if(mql.matches){\r\n        //查询匹配\r\n    }else{\r\n        //查询不匹配\r\n    }\r\n}</pre>\n<p>在开发上述媒体查询的过程中，我们需要频繁地切换系统的相应模式或者调出打印窗口。<strong>实际上，Chrome 提供了更简单的调试方法：</strong></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1946\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2333.jpg\" alt=\"\" width=\"723\" height=\"681\"></a>\n<p>只要在这里更改模式，相关媒体查询就能实时生效。这不会影响其他标签页，在关闭开发者工具之后也会自动恢复系统设置。</p>\n","link":"https://flyhigher.top/develop/1912.html"},{"title":"MDx Blog 现已随 MDx 1.9.5 发布","date":"2020-01-22 17:54:11","description":"<p>随着 MDx 发布 1.9.5 更新，<a href=\"https://mdxblog.flyhigher.top/\" rel=\"noopener noreferrer\" target=\"_blank\">MDx Blog</a> 现已建立。我将会在 MDx Blog 中分享一些开发故事并发布 MDx 更新日志。</p>","link":"https://flyhigher.top/diary/1905.html"},{"title":"GitHub 2019 统计无垠版","date":"2020-01-12 13:02:00","description":"\n<h1>缘起</h1>\n<p>2019 年底，我突发奇想想要自己统计一番 GitHub 上存储库的一些信息。尽管 GitHub 有自己的<a href=\"https://octoverse.github.com/\" target=\"_blank\" rel=\"noopener noreferrer\">年度统计</a>，我还是想试着自己爬取一下，说不定能挖出什么有意思的信息，何况这是我第一次有机会处理比较大量的数据，也算是一种学习的过程吧。于是花了一下午写了个简单的爬虫（时间都花在增加 Rate Limit 上了...），然后扔在了两台服务器上开始跑（GitHub  API 真是好文明）。</p>\n<p>从 2019.11.21 3 时到 2020.1.12 24 时的 52 天 21 小时内，我的爬虫一共爬取了<strong>与 2,024,705 个用户有关<sup>*</sup>的 14,651,923 个公共存储库的基础信息</strong>，平均每秒爬取 3.2 个存储库。据 GitHub 的官方数据计算，我爬取了大约 15% 的存储库信息，但由于封禁库和私有库的数量未知，我暂时无法确定我爬取的存储库占公共库的比例。同时由于存储库数量较多，基本可以认为爬取到的样本在时间尺度上已经足够随机，可以通过统计得出一般结论。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/1.jpg\" alt=\"\" width=\"700\" height=\"606\" class=\"aligncenter size-full wp-image-1892\"></a>\n<p>爬到自己了，合影.jpg</p>\n<p>那么下面就来看看统计出来的一些结果吧。爬虫的技术细节和数据集下载放在文末。</p>\n<p>* 指这些用户拥有至少一个库</p>\n<h1>统计信息</h1>\n<p><strong>以下统计结果均基于已放于文末的数据集。</strong>由于爬虫爬取的时间跨度长，加上我并没有完整爬取 GitHub 所有存储库，因此我<strong>不能保证以下统计结果符合真实情况</strong>，各位可以下载数据集或自行爬取进行验证。</p>\n<h2>一些数据</h2>\n<div>\n<div>\n<div>\n<span>3,120,930</span><br>总爬取用户数</div>\n<div>\n<span>44.7%</span><br>的存储库创建<br>自 Fork</div>\n<div>\n<span>6.59%</span><br>的账户被删除或<br>封禁<sup>1</sup>\n</div>\n<div>\n<span>23,913</span><br>单用户拥有最大<br>库数量<sup>2</sup>\n</div>\n</div>\n</div>\n<p><sup>1</sup> 基于用户 ID 规律合理推断<br><sup>2</sup> 统计范围仅限于当前数据集</p>\n<p>比较出乎我意料的是创建自 Fork 的存储库的占比。我预估这样的存储库占比不会太低，但没有想到能接近一半。此外单用户拥有最大库数量也大大超出了我的预期，<a href=\"https://github.com/pombredanne\" rel=\"noopener noreferrer\" target=\"_blank\">pombredanne</a> 这个用户名下拥有将近 24k 的存储库，不过绝大多数都是 Fork 来的，在情理之中。此外<strong>这个数据集中</strong>拥有最多存储库的账户其实是一个组织 <a href=\"https://github.com/gitpan\" rel=\"noopener noreferrer\" target=\"_blank\">gitpan</a>，这个组织拥有 36,377 个存储库。</p>\n<h2>语言</h2>\n<p><canvas></canvas><br>\n首先必须要说明的是，在这个榜单中我<strong>排除了 HTML 和 CSS</strong>，因为在严格意义上它们不属于“编程语言”。如果把它们计算进来的话，分别有 640,368 个和 361,425 个存储库的主要语言分别是 HTML 和 CSS，这样在这份榜单中它们可以排到第 6 和 第 10 名。JavaScript 毫无疑问获得第一，第二名 Python 的热度则和 JavaScript 相差将近一半。<strong>此外还有 2,448,486 个存储库未能识别出语言，占比 16.7%。</strong>在上面的榜单之外，与机器学习和数据科学相关的语言还有 Jupyter Notebook 排名第 13，R 排名 20，Julia 排名 43。</p>\n<p>说实话这份排名和 GitHub 官方的排名<strong>差别很大</strong>，除了前三名，后面的基本都不太一样。我的排名统计结果完全基于 GitHub 对于存储库的主要语言识别，加上我的存储库数据不完整，和官方的数据不同是很正常的，可以做一个参考，但大概率还是官方排名更加准确。</p>\n<h2>许可证</h2>\n<p><canvas></canvas></p>\n<p>自 GitHub 推出许可证功能以来，拥有许可证的存储库比例升升降降，却始终没有超过一半。<strong>选择一个合适的许可证对项目的良好发展真的很有帮助</strong>，要了解如何选择合适的许可证，请参阅<a href=\"https://www.runoob.com/w3cnote/open-source-license.html\" rel=\"noopener noreferrer\" target=\"_blank\">这篇文章</a>。</p>\n<p><canvas></canvas></p>\n<p>对于拥有许可证的存储库，MIT<del> 麻省理工许可证 </del>总是占比最大的；第二则是 Apache-2.0 许可证。此外，WTFPL 许可证也挤入了前 15 名。</p>\n<h2>星标</h2>\n<p><canvas></canvas><br>\nStar 数量毫无疑问是一个存储库受欢迎程度的体现，而 Star 数高的项目基本上大家都了解过。<strong>截至爬取结束时间</strong>，GitHub 中 Star 数最多的库是 <a href=\"https://github.com/freeCodeCamp/freeCodeCamp\" rel=\"noopener noreferrer\" target=\"_blank\">freeCodeCamp</a> <del>非常完美的驼峰命名法</del>，其次则是著名项目 <a href=\"https://github.com/996icu/996.ICU\" rel=\"noopener noreferrer\" target=\"_blank\">996.ICU</a>。<a href=\"https://github.com/vuejs/vue\" rel=\"noopener noreferrer\" target=\"_blank\">Vue</a> 现在的 Star 数已经稳压 <a href=\"https://github.com/facebook/react\" rel=\"noopener noreferrer\" target=\"_blank\">React</a> 一头，Vue YES! 此外 <a href=\"https://github.com/sindresorhus/awesome\" rel=\"noopener noreferrer\" target=\"_blank\">awesome</a> 也挤进第七名。<br><canvas></canvas><br>\n由于 Star 需要时间积累，新项目的 Star 数量很可能是比不过老项目的，这就会导致有实力的新项目无法出现在榜单中。因此我还统计了日均 Star 数，试图通过日均 Star 数来反映项目受欢迎的程度。<strong>由于正热门的项目会比老牌热门项目有优势，这一项的统计范围是 2020-01-01 之前的所有存储库。</strong>996.ICU 和 freeCodeCamp 再次出现在前 10 名，而最近的热门项目 <a href=\"https://github.com/wenyan-lang/wenyan\" rel=\"noopener noreferrer\" target=\"_blank\">wenyan</a> 则飙升至第 2 名。此外还有 <a href=\"https://github.com/menzi11/BullshitGenerator\" rel=\"noopener noreferrer\" target=\"_blank\">BullshitGenerator</a>，即最近热门的“狗屁不通文章生成器”和 <a href=\"https://github.com/evil-huawei/evil-huawei\" rel=\"noopener noreferrer\" target=\"_blank\">evil-huawei</a> 分列第 3 和第 5 名。<br><canvas></canvas><br>\n说实话这个曲线<strong>比我预估的陡多了。</strong>你可能已经注意到了，这个图表的横轴不是均匀缩放的，实际上曲线要比看起来陡很多。同时受爬取方式的影响，GitHub 中 Star 数较少的存储库数量远比我爬取到的多。也就是说，<strong>实际情况下曲线远比这个图表上的陡。</strong>拿点 Star 不容易啊。</p>\n<h2>名称</h2>\n<p><canvas></canvas><br>\n终于知道了原来存储库的名称是有长度限制的...尽管最长有 100 位，<strong>大部分人还是喜欢 8 位长的存储库名。</strong>此外 1 位长的名称也比我预估的要多一些。举几个存储库名称长度为 100 的例子吧。</p>\n<ul>\n<li>testing-something-elsetesting-something-elsetesting-something-elsetesting-something-elsetesting-some</li>\n<li>acts_as_validated_config_so_app_will_not_run_in_random_situation_and_qa_gays_will_not_cry_to_you_whe</li>\n<li>............................................________-....................................-.---......</li>\n<li>----------------------------------------------------------------------------------------------------</li>\n<li>nyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyannyan</li>\n</ul>\n<p>...创造力有够丰富的。</p>\n<p><canvas></canvas></p>\n<p>最近 GitHub 上有一种奇怪的风气，那就是建立 Awesome 合集<del>骗 Star</del>。看起来 Awesome 存储库满地都是，甚至还出现了关于 Awesome 的 Awesome 合集这种迷惑行为。于是我统计了一下，<del>还好，</del>占比<del>才</del> 0.5% 不到<del>，Awesomer 们任重而道远呐</del>。</p>\n<p><canvas></canvas></p>\n<p>尽管要在 github.io 上托管网站，存储库不一定要以 .github.io 结尾，但我还是统计了一下。拥有这类存储库的用户比我预想的要少一些，看来还有很多人没有完全发挥 GitHub 的完整实力啊<del>（比如我 Doge）</del>。同时<strong>这类存储库在所有存储库中占比 1.12%</strong>，看起来不多<del>，不过至少比 Awesome 多</del>。<br><canvas></canvas><br>\n看得出来 GitHub 对于用户名长度的限制是 1-40 位。用户名最短的 27 位占据了 <code>A-Z</code> 外加 <code>-</code> 的所有可能，而用户名最长的则是一个组织 <a href=\"https://github.com/UOIT-RESEARCH-database-information-group\" rel=\"noopener noreferrer\" target=\"_blank\">UOIT-RESEARCH-database-information-group</a>。不知道是巧合还是某种规律，<strong>最受欢迎的用户名长度和存储库名称长度一样，都是 8</strong>，有点意思。</p>\n<h2>创建时间</h2>\n<p><canvas></canvas><br>\n由于我并没有完整爬取所有存储库，我只能以相对值来统计每月新增存储库数量的变化趋势。<strong>在这个图表中，我将 2017-09 的数据设为了 100%。</strong>你一定一眼就能注意到 2017 年 6,7,8 月的“一柱擎天”。<del datetime=\"2020-02-05T09:18:30+00:00\">我第一次看到这个数据的时候的确愣了一下，不过就着这条新闻看就能明白为什么了：<strong>2017 年 6 月微软收购 GitHub。</strong></del></p>\n<blockquote><p>重新确认了一下，微软收购 GitHub 比这个高峰晚了一年，目前我对这个高峰没有什么很好的解释，如果你有什么思路的话欢迎评论。</p></blockquote>\n<p><strong>需要注意的是这张图表中我排除了 Fork 存储库</strong>，因为 Fork 存储库在 API 中的创建时间是原始存储库的时间，会影响整体趋势。此外，GitHub 中还有一个创建于 2007 年 10 月 29 日的存储库，那就是 <code>id: 1</code> 的...</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"mojombo\" data-mdxgithubp=\"grit\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/mojombo/grit\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>而它的创建者正是 GitHub 的创始人之一 Tom Preston-Werner。</p>\n<h1>一些有趣的结果</h1>\n<p>当初打算自己爬的目的之一就是想看看能不能挖出什么有意思的信息，结果真的有一些不挖不知道的信息。</p>\n<h2>奇怪的存储库</h2>\n<p>在爬取到的所有存储库中，<strong>有 3 个存储库是“无主”的</strong>，即它们的 owner 属性为空。这三个存储库的基本信息如下。</p>\n<div class=\"mdui-table-fluid mdui-table-hoverable\"><table class=\"mdui-table\">\n<thead><tr>\n<th>ID</th>\n<th>名称</th>\n<th>Forked</th>\n<th>Star</th>\n<th>语言</th>\n<th>许可证</th>\n<th>创建于</th>\n</tr></thead>\n<tbody>\n<tr>\n<td>72385291</td>\n<td>vscode-redprl</td>\n<td>否</td>\n<td>10</td>\n<td>TypeScript</td>\n<td>apache-2.0</td>\n<td>2016-10-31 08:50:01</td>\n</tr>\n<tr>\n<td>181218346</td>\n<td>electron-sys</td>\n<td>否</td>\n<td>10</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-14 03:20:56</td>\n</tr>\n<tr>\n<td>181391880</td>\n<td>node-sys</td>\n<td>否</td>\n<td>6</td>\n<td>Rust</td>\n<td>other</td>\n<td>2019-04-15 09:33:08</td>\n</tr>\n</tbody>\n</table></div>\n<p><strong>更奇怪的是这三个存储库“无主”的情况还不一样。</strong>第一个存储库可以通过 <code>/repositories</code> 这个 GitHub API 找到， <a href=\"https://api.github.com/repositories?since=72385290\" target=\"_blank\" rel=\"noopener noreferrer\">这个链接</a>中的第一个存储库就是它；而其余两个存储库甚至无法在 <code>/repositories</code> API 中找到。不过就算能在 API 中找到第一个存储库，它的 <code>html_url</code>，即 <code>https://github.com//vscode-redprl</code> 仍然是不可访问的。这可能是 GitHub 早期的一个 Bug 导致的，不过我仍然对爬虫是如何找到这三个存储库的以及这些 Stars 是哪里来的感到好奇。</p>\n<h2>奇怪的用户名</h2>\n<p>在爬虫爬了一段时间以后，API 中突然开始出现大量的以 fdp 开头的 18 位乱码作为用户名的用户。这些用户拥有的存储库和 starred 的存储库都为 0，而他们的 <code>html_url</code> 为 404。以下是几个例子。</p>\n<ul>\n<li>fdpEpolGCEdQX4ZlRJ</li>\n<li>fdp8XaVrdtmDZnO5pR</li>\n<li>fdp8XRAGnwAOkTr2Ya</li>\n</ul>\n<p>由于我的爬虫并没有超过 Rate Limit，所以我排除了这是污染数据的可能。我怀疑这可能是某种 Bot 账户，于是一边更新爬虫过滤掉了这些用户，一边给 GitHub 支持发邮件问了具体情况。过了两天 GitHub 回复我说这些是<strong>被自动判为可疑进而被封禁的用户</strong>（原话是 they have been flagged by our automated measures for detecting suspicious behavior）。<del>想到我正在疯狂爬取 GitHub，突然害怕.webp</del></p>\n<p>行吧。</p>\n<h1>技术细节</h1>\n<p>爬虫使用 Python3 编写，数据库使用 MySQL。爬虫共使用了 4 个 API Token，在两台服务器上分布式爬取。爬取思路为：</p>\n<ol>\n<li>通过 <code>/users</code> API 遍历用户，每个请求最多获取 30 个用户信息</li>\n<li>循环 30 个用户，分别获取 <code>/users/&lt;user_name&gt;/starred</code> 和 <code>/users/&lt;user_name&gt;/repos</code> API 中的存储库信息，每个请求最多获取 100 个存储库信息，超过 100 个的分页获取</li>\n<li>提取存储库信息，插入数据库。对于已存在的存储库，更新数据</li>\n<li>获取下 30 个用户信息</li>\n</ol>\n<p>由于爬取过程中我多次调整了爬虫逻辑，爬虫爬取到的用户 ID 区间并非连续的，具体区间为1-839586, 14800001-14885493 及 28965251-31161101。</p>\n<h1>免责声明</h1>\n<p>本站会尽可能地提供准确信息，但本站不对此文章中信息的准确性和即时性及带来的任何影响负责。</p>\n<p>本站不代表 GitHub 官方，本文仅供学习之用，请不要将本文内容直接用于任何商业项目中。</p>\n<h1>数据集下载</h1>\n<p>导出的 SQL 文件大约为 1.38GB，全部放在了 GitHub 上（在危险的边缘试探.webp</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"github-analysis-2019\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/github-analysis-2019\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>此外我也提供了 MEGA 下载，链接<a href=\"https://mega.nz/#F!juxm3A6T!7Vwpzi82W1OFrqTLu1A1pQ\">在这里</a>。</p>\n","link":"https://flyhigher.top/develop/1564.html"},{"title":"Milkice 跨年红包解谜 Writeup 及无垠跨年红包解谜答案","date":"2020-01-02 04:29:19","description":"\n<blockquote><p><del>又到了水文章的时间呢</del></p></blockquote>\n<p>先说明一下，这篇文章原本不是在计划中的，而原来说好的「在路上的两篇」文章<del>绝对不会咕</del>。我自己的红包答案本来打算直接塞在年度总结里的，结果发现稍微有些长，再加上我还花了一些时间解了<a href=\"https://milkice.me/\">奶冰</a>的红包解谜游戏，就打算把两个解谜过程放在一起单独写一篇文章。<del>真是个水文章的好理由</del>（被打死</p>\n<h1>奶<del> 子 </del>冰的红包</h1>\n<p>奶冰的红包题目比我的难多了，所以让我们先从难的开始吧。首先看一下<a href=\"https://milkice.me/2019/12/31/2019-summary/\">题目</a>：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1524\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-2.jpg\" alt=\"\" width=\"746\" height=\"410\"></a>\n<p>入口是 <code>happy.2020.milkice.me</code>，扔到浏览器里面表示找不到 IP，那么大概率就是 DNS 的 TXT 记录了，查一下得到 <code>nb2hi4dthixs63ljnrvwsy3ffzwwkl3tivrvezluomxxg5dsmvqw2ltqmnqxa3th</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1525\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-3.jpg\" alt=\"\" width=\"896\" height=\"278\"></a>\n<p>第一眼没看出来是什么编码，直觉是 BaseXX 系列的编码，加上提示“不只有 Base64”，可以推断出是 Base32，转大写解码得到 <code>https://milkice.me/sEcRets/stream.pcapng</code>。是个 URL，下载得到一个 Wireshark 文件，打开一看是和某 USB 设备的通讯抓包。<del>不会做，不做了。</del></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1526\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-4.jpg\" alt=\"\" width=\"1500\" height=\"813\"></a>\n<p>奶冰提示我“Google 上搜得到”，结合第二条提示搜索“wacom pcapng”找到了<a href=\"https://blogs.tunelko.com/2017/02/05/bitsctf-tom-and-jerry-50-points/\">这篇文章</a>（<del>这™就是答案啊</del>）。看起来是一样的套路，即通过解析数据得到数位板上画的内容，于是按文章的思路筛选出数位板发给主机的数据，导出，然后再用 tshark 导出文本数据。本来我想直接用文章中的 POC 的，结果折腾半天因为源的蜜汁原因库没装上，于是按文章中给出的数据结构自己写了段代码，分别导出 X、Y 轴数据扔进 Excel 画散点图。（<del>别问我为什么用 Excel，因为我手边没有更好的工具了</del>）</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1528\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8.jpg\" alt=\"\" width=\"1280\" height=\"530\"></a>\n<p><span>翻车现场之一</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1539\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-13.jpg\" alt=\"\" width=\"1000\" height=\"286\"></a>\n<p><span>懵逼奶冰.webp</span></p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1533\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-1.jpg\" alt=\"\" width=\"1500\" height=\"462\"></a>\n<p>看得出有手写文字，不过是上下颠倒的，翻转图片得 <code>https://milkice.me/2020/uso.zip</code>。是个 zip，下载打开一看，有密码。<del>不会解，不做了。</del> 第一反应是暴力解密码，但是暴力跑了 15 分钟还是没有跑出来。暴力太不优雅了，肯定不是正确思路，但奶冰什么都不肯说了。不过在这时我终于发现第一个红包口令码就藏在压缩包的注释中，Get。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1544\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-15.jpg\" alt=\"\" width=\"806\" height=\"593\"></a>\n<p>然而题还没解完，回去看提示，看到提供了 osu 谱面下载，于是打算不管怎么样先下载来看看。然而 osu 谱面下载要登录，只好又花了几分钟找到第三方站点，成功下载。这时候可以注意到 uso.zip 里有个同名文件（432314 Mike Greene - Bill Nye the Science Guy Theme Song (Chinese Intro).osz），可以联想到是明文攻击。好吧，上 ARCHPR，十秒解出。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1530\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-5.jpg\" alt=\"\" width=\"462\" height=\"643\"></a>\n<p><span>现场还原.jpg</span></p>\n<p>.osz 文件并不是明文，猜测是压缩包（和 .pptx 一个思路嘛），于是改后缀 .zip 顺利打开。然后红包口令码就藏在奶冰的 .osu 文件中了，由提示可知是明文，打开即可得到。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1542\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-14.jpg\" alt=\"\" width=\"457\" height=\"255\"></a>\n<h1>我的红包</h1>\n<p>相比起来<a href=\"https://flyhigher.top/diary/1464.html\">我的题目</a>就简单很多了嘛...三天时间一共发出了 25 个红包，包括一位重复领取的🌚，比前几年还是多了一些的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-16.jpg\" alt=\"\" width=\"500\" height=\"306\" class=\"aligncenter size-full wp-image-1554\"></a>\n<p><span>这位同学以后请不要多次领取🌚</span></p>\n<p>那么来看看答案吧。</p>\n<h2>第一阶段</h2>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>首先观察字符串，可以发现 <code>.</code> <code>/</code> <code>_</code> 等一些 ASCII 字符原样留在了字符串中，而其他字符被由 <code>=</code> 和十六进制构成的某种编码所替代。如果你正好有所了解，你应该能认出这是 Quoted-printable 编码，这是一种常用于邮件中的编码，可以用<a href=\"https://mothereff.in/quoted-printable\">这个页面</a>解码。如果你不了解，你也应该可以发现这种编码和 URL 编码非常相似。如果你把 <code>=</code> 替换为 <code>%</code>，那么你就可以用各种方法顺利地把它按 URL 编码来进行解码，最后可以得到 <code>αхtоn.іm/соdе_оf_2020_⒈mρз</code>。这个字符串里大部分字符都不是 ASCII 字符，只是长得像而已。根据第一个提示“全是 ASCII 字符”，按样子把字符串用 ASCII 字符抄一遍，可以得到最终 URL 为 <code>axton.im/code_of_2020_1.mp3</code>。</p>\n<h2>第二阶段</h2>\n<p>下载音频，可以听出音频是经过某种处理的白噪音。白噪音的特点是各频段的功率都均匀分布，在白噪音上做文章，很容易就可以联想到线索藏在频谱中。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1534\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-8-1.jpg\" alt=\"\" width=\"1200\" height=\"719\"></a>\n<p>频谱被处理成了 24x3 的网格，结合第二条提示“24x3，横向读取”可以推断出是将频谱当作二进制读取，得到 <code>01111001 01110010 01100011 00101110 01101101 01100101 00101111 00110010 00110000</code>，转为 ASCII 字符可得 <code>yrc.me/20</code>。</p>\n<h2>第三阶段</h2>\n<p>打开上一步得到的页面，提示要求输入十位数密码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1536\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-10.jpg\" alt=\"\" width=\"663\" height=\"460\"></a>\n<p>如果你在上一步注意到了这个音频文件奇怪的属性，你可以反应过来这里的密码就是 <code>2000202020</code>。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1537\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-11.jpg\" alt=\"\" width=\"421\" height=\"651\"></a>\n<p>如果你没有注意到，查看页面代码可以看到一条注释 <code>&lt;!-- Tips: the attribute of the audio --&gt;</code> 将你引导向音频文件的属性。输入密码，解锁即可进入下一步。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1535\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-9.jpg\" alt=\"\" width=\"397\" height=\"223\"></a>\n<h2>第四阶段</h2>\n<p>可以看到是一张图片，内容为“<del>.JPG</del>”和“.ZIP”。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter size-large wp-image-1532\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/2020-1-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n<p>和去年一样的套路，下载图片，将后缀名改为 .zip 然后打开，可以看到 README.txt。</p>\n<h2>最后一步</h2>\n<p>查看 README.txt 的内容，可以了解到需要去 🤔.axton.cc 获取红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1538\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-12.jpg\" alt=\"\" width=\"1131\" height=\"278\"></a>\n<p>扔到浏览器里会出现奶冰同款找不到 IP，于是可以联想到 TXT 记录。唯一的问题是 🤔 这个 Emoji 需要如何处理。域名使用 Punycode 将 Unicode 字符转换为 ASCII 字符，特点是以 <code>xn--</code> 开头。如果你把上面这个域名扔进浏览器，你会发现它变成了 <code>xn--wp9h.axton.cc</code>。然后查询 TXT 记录，即可得到红包口令码。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\"><img loading=\"lazy\" class=\"aligncenter size-full wp-image-1527\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/01/rp-7.jpg\" alt=\"\" width=\"804\" height=\"557\"></a>\n","link":"https://flyhigher.top/develop/1519.html"},{"title":"无垠 2019 年度总结","date":"2019-12-29 12:25:52","description":"\n<p>又是时间飞快的一年...写 2018 总结的情景似乎还在眼前，转眼居然已经到 2019 年末了。</p>\n<p>2019 年，发生了太多事情，包括真的转折了人生的高考，这也导致我博客更新的不多（难以置信居然才更了两篇...），不过两篇技术性文章已经在路上了，可以期待一下。</p>\n<p>2019 年我也学了不少东西（单指技术方面），比如终于认真学了 Vue（但是还要练手）。书买了一大堆，看完的倒是没几本orz</p>\n<p>呼，好吧，是时候回顾一下充满坎坷的这一年了。2019 年还剩下最后两天，希望 2020 年，我能做得更好。</p>\n<h1>一些数据</h1>\n<p>照惯例先来看看一些数据吧。今年是统计系统完整统计了的第二年，终于可以和去年的数据比较一下了。以下数据的统计范围是 2019年1月1日0时至 2019年12月29日20时。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 26,901 (<span>+4%</span>)，年 PV 76,583 (<span>+3%</span>)，日均 UV 73.7，平均停留时间 5分13秒 (<span>-13.8%</span>)，平均跳出率 53% (<span>+20.5%</span>)。一年有效文章数 2 (<span>-50%</span>)，新增评论 439 条。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/fh.jpg\" alt=\"\" width=\"1000\" height=\"1143\" class=\"aligncenter size-full wp-image-1511\"></a>\n<p>有趣的是今年文章数腰斩，访问数反而小有提升。<del>如果我哪天不更新了，访问数是不是可以无限大呢？</del></p>\n<p>今年博客最大的改动就是把整体风格切换到了 Material Design 2（当然这是 <a href=\"https://flyhigher.top/develop/788.html\">MDx</a> 中的可选功能，给自己打个广告2333），此外还有比较失败的 WebP 改造计划，因为和缓存冲突已经回滚了。<a href=\"https://flyhigher.top/develop/1245.html\">ABS 系统</a>进展不大，主要是真的没有太多时间，还是要再学习一个。</p>\n<h2>个人主页</h2>\n<p>虽然个人主页的 TODO List 列了老长，但今年完全没有更新，也没有推广，从今年 8 月底开始还莫名被某墙认证了，直到 11 月底才恢复，于是今年总访问量比去年少了很多，</p>\n<p>有多少呢？这么少：总 UV 2,141 (<span>-65.9%</span>)，总 PV 2,744 (<span>-66.6%</span>)，日均 UV 6 (<span>-65.9%</span>)，平均停留时间 62秒 (<span>+19.2%</span>)。主要来源是知乎和 V2EX，还有一些甚至是从微信来的。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/axton.jpg\" alt=\"\" width=\"1000\" height=\"1103\" class=\"aligncenter size-full wp-image-1512\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 8 次，新增 171 commits，2 种语言的翻译，Star 数增加了 175，现有 408。感谢所有人的支持，尤其是 <a href=\"https://github.com/Sn0bzy\" rel=\"noopener noreferrer\" target=\"_blank\">Hasan CAN</a>, <a href=\"https://github.com/yechs\" rel=\"noopener noreferrer\" target=\"_blank\">Ye Shu</a>, <a href=\"https://github.com/StarryLeo\" rel=\"noopener noreferrer\" target=\"_blank\">StarryLeo</a>, <a href=\"https://github.com/DCTewi\" rel=\"noopener noreferrer\" target=\"_blank\">冻葱Tewi</a>, <a href=\"https://github.com/syfxlin\" rel=\"noopener noreferrer\" target=\"_blank\">Otstar Lin</a> 等为 MDx 做出了不小贡献的你们。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：<a href=\"https://flyhigher.top/photograph/1309.html\">上手</a> DJI OSMO Pocket</li>\n<li>四月：最后一次参加浙江省普通高中学业水平考试</li>\n<li>五月：MDx 喜提 300 Stars</li>\n<li>六月：高考 <del>炸了，差亿点点上浙大</del>\n</li>\n<li>六月：入手了 Oneplus 7 Pro</li>\n<li>六月：和同学一起去成都重庆旅行</li>\n<li>六月：第一次近距离感受到地震</li>\n<li>六月：<a href=\"https://flyhigher.top/diary/1411.html\">入手</a>了一台雷蛇灵刃 15，目前是主力机</li>\n<li>七月：参与组织 THE Hack 2019 活动</li>\n<li>七月：面基了 <a href=\"https://itroy.cc/\" rel=\"noopener noreferrer\" target=\"_blank\">Tory</a>, Bie Shi 和 <a href=\"https://oxz.me/\" rel=\"noopener noreferrer\" target=\"_blank\">FHYunCai</a>\n</li>\n<li>八月：一个人去厦门武汉转了一圈，拍了自己的第一个 Vlog</li>\n<li>八月：入手了一个 Kindle Paperwhite 4，没有泡面可以压，于是用来看英文小说了</li>\n<li>八月：加入 TEDxNingbo 志愿者团队</li>\n<li>八月：和 Ralph 面基</li>\n<li>八月：入手了一个 Yubikey</li>\n<li>九月：人生第一次参加雅思考试 <del>7分，蛮开心的</del>\n</li>\n<li>十月：入手了一个 Samsung Galaxy Watch Active 2 <del>觉得不值</del>\n</li>\n<li>十一月：MDx 达到 400 Stars</li>\n<li>十一月：为 TEDxNingbo 设计开发的 H5 上线</li>\n<li>十一月：入手了第一台胶片相机，试图入坑胶片摄影</li>\n<li>十一月：参加 TEDxNingbo 2019 大会</li>\n<li>十二月：<del>我 Cytus II 入门了</del>\n</li>\n</ul>\n<h1>跨年红包</h1>\n<p>这算「传统习俗」了。和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2020年1月2日。</p>\n<p>今年的解谜旅程，从下面这个字符串开始。</p>\n<p><code>=CE=B1=D1=85t=D0=BEn.=D1=96m/=D1=81=D0=BEd=D0=B5_=D0=BEf_2020_=E2=92=88m=CF=81=D0=B7</code></p>\n<p>由于今年的题目比以前稍微难了一些，所以今年的红包金额还是比较大的，而且不限量，尽你所能试一试吧。</p>\n<p>一点你可能用得上的提示：URL 里全是 ASCII 字符 / 24x3，横向读取。</p>\n<p><a href=\"https://flyhigher.top/develop/1519.html\">答案</a>已公布。</p>\n<h1>跨年海报</h1>\n<p>这算是另一个「传统习俗」（笑）。因为我有做跨年海报的习惯，所以以下就是今年份的海报啦。</p>\n<p>用了 C4D+PS，还有我的一整个下午。</p>\n<p>提前祝各位新年快乐！</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg\"><img loading=\"lazy\" class=\"aligncenter wp-image-1467 size-large\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2019/12/2020-f-web-scaled.jpg?imageView2/1/w/724/h/1024/interlace/1/q/90#\" alt=\"\" width=\"724\" height=\"1024\"></a>\n","link":"https://flyhigher.top/diary/1464.html"}]