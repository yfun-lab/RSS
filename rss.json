[{"title":"把握浏览器的「门面」：少数派作者们都在用什么启动页？","date":"2022-07-16 07:30:00","description":"作为「网上冲浪」的第一站，浏览器启动页向来是许多人热衷于展现个性的地方。每个人对浏览器启动页的需求都不尽相同，有人偏爱实用、有人则更注重「颜值」。因此，我们邀请了6位少数派作者来分享一下他们自己在用什 ...<a href=\"https://sspai.com/post/74276\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74276"},{"title":"真正的新生力量：从金曲奖最佳新人入围者看乐坛新风向","date":"2022-07-16 03:00:00","description":"金曲奖向来是华语乐坛中分量最重、甚至是唯一真正有广泛影响力的音乐奖项。进入分众时代后，金曲奖可能选不出曾经红极华语世界的歌王歌后，作为审美在线的奖项，他们在发掘新人这件事上焕发了新的生机，许多来自小公司甚至独立发片的艺人依靠优质的作品收获了金曲奖的青睐，一朝提名天下知。这篇文章，我就借着疫情之后的第 31 至 33 届金曲奖最佳新人奖入围名单，聊聊我眼里这几年的风向变化。<a href=\"https://sspai.com/post/74289\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74289"},{"title":"《喜羊羊与灰太狼之奇妙大营救》开播，有哪些值得关注的点？","date":"2022-07-15 13:25:01","description":"\n<p data-pid=\"BRVALA4G\">       今天，大家期待的《羊村守护者》系列回归了！这次羊狼们将到来全新的国度——妙狗国，展开一场妙趣横生又惊险刺激的冒险之旅。虽然一路上困难重重，险象环生，但羊羊们历经千辛万苦终于重新集结，并且还收获了新的力量。然而这看似利好局面的背后却隐藏着更大的阴谋。羊狼们将如何在逆境中突破自己，再次拯救家园？7月15日起，《喜羊羊与灰太狼之奇妙大营救》在金鹰卡通频道全国首播，优酷、芒果TV、腾讯视频、爱奇艺四大网络平台同日更新，期待和你一起追剧，挖彩蛋！</p>\n<p><img src=\"https://pic1.zhimg.com/v2-0ac5e79a9df03543e7afc87aa030e62b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1920\" data-watermark=\"watermark\" data-original-src=\"v2-0ac5e79a9df03543e7afc87aa030e62b\" data-watermark-src=\"v2-61a9ba209a47d8a0907d30d3505be91a\" data-private-watermark-src=\"v2-f6de27d45bf3ad0c66112d0dfcf9b00e\"></p>\n<p data-pid=\"YqTdtlGZ\">       这次《喜羊羊与灰太狼之奇妙大营救》的故事是承接《异国大营救》的故事，记得在当时在《异国大营救》播出后，我们收到了好多粉丝的反馈说很喜欢羊羊们猫化的形象，觉得他们的反差的性格特点特别萌，调皮霸气喜猫猫，酷飒的美猫猫，爱干净沸猫猫（我不听）、懒懒的暖猫猫和搞笑担当慢猫猫。</p>\n<p data-pid=\"NThUvhzT\">这次故事中我们再次让羊羊们猫化，除了保留了角色原有的猫化性格，同时也出现了更多的情感起伏，性格情绪的碰撞给小羊们的冒险之旅增添了不少麻烦，但同时也带来了更多笑料，希望大家能从感受到情感共鸣，在笑泪中感受成长。还有什么爆笑故事，大家亲自在妙狗国的冒险中体会吧！</p>\n<p><img src=\"https://pic2.zhimg.com/v2-9079266192edfd0769d1feeae20fd7f9_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-9079266192edfd0769d1feeae20fd7f9\" data-watermark-src=\"v2-3168d483c6e6a5ab468c94ad3404241b\" data-private-watermark-src=\"v2-a9778d9389b6af14a757535e8c887b04\"></p>\n<p data-pid=\"SoTkQe1P\">     大家所期待的懒羊羊猫化形态也将首次登场，憨态可掬，十分可爱！，懒羊羊猫化会是什么样的性格呢？期待大家分享自己心中的懒猫猫形象。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-51b495a88a72ca3c6f22afb77a24af4b_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-51b495a88a72ca3c6f22afb77a24af4b\" data-watermark-src=\"v2-8395ddd76da8bcb5ac112c2e1b69524f\" data-private-watermark-src=\"v2-9caa62215d894fe5c9598f7c2b74deae\"></p>\n<p data-pid=\"39FpL-Lw\">另一方面，我也收到很多留言说“希望狼王灰太狼能变强”，自从《羊村守护者》羊狼正式成为好朋友，灰太狼收起了“抓羊”的心，羊狼联手闯关走过了许多冒险。在这次冒险中，灰太狼有着非常重要的任务，他将潜入狗国内部，从底层做起，上演了一出励志“升职记”，同时在暗地里还要收集情报 “曲线救猫”！对随时暴露身份的威胁，还有狗国士兵，将军的重重压力，还能坚守本心，拯救大家吗？让我们拭目以待！</p>\n<p><img src=\"https://pica.zhimg.com/v2-d4c2626b6218ce1e77e96e3820ad0d1e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-d4c2626b6218ce1e77e96e3820ad0d1e\" data-watermark-src=\"v2-19c0a66bb44b653dda8197e53897e528\" data-private-watermark-src=\"v2-dd1fb53497faae59bed1ab39d16edd34\"></p>\n<p data-pid=\"cm3KNNs3\">感谢大家对《羊村守护者》系列的喜爱和支持！《羊村守护者》希望传递出来的是决不放弃，勇敢向前的不屈意志；是直面自己，克服缺点的励志精神；也是羊狼和平相处，携手共进的真挚友情。在《奇妙大营救》中，跟随守护者游历异国，在热血中见证成长。7月15日起17:30，锁定金鹰卡通频道全国首播，同日在优酷、芒果TV、腾讯视频、爱奇艺四大网络平台播出。   </p>\n<p><img src=\"https://pica.zhimg.com/v2-533131df68c8ead08c75f99776d1a33c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1980\" data-rawheight=\"1114\" data-watermark=\"watermark\" data-original-src=\"v2-533131df68c8ead08c75f99776d1a33c\" data-watermark-src=\"v2-eac2f134faa0cd9e2aaaa76d5b791847\" data-private-watermark-src=\"v2-0cdb22390bbed8051c2ed374611bc6e6\"></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/huang-wei-ming-leohuang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">黄伟明</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/543486924/answer/2576409939?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">4 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/517749959?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《喜羊羊与灰太狼之筐出未来》发布的守护梦想版特别视频有什么亮点？</a><br><a href=\"http://www.zhihu.com/question/510632201?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">《喜羊羊与灰太狼之筐出未来》为什么值得期待？</a><br>\n","link":"http://www.zhihu.com/question/543486924/answer/2576409939?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"本周看什么丨最近值得一看的 8 部作品","date":"2022-07-15 10:08:46","description":"☕️TL;DR近期佳作推荐：[动画]外星也难民第三季、[美剧]黑鸟、[电影]旋涡、[动画]异世界舅舅、[美剧]生化危机、[动画]彻夜之歌、[电影]仙后座、[电影]刀剑神域-进击篇-无星之夜的咏叹调几则 ...<a href=\"https://sspai.com/post/74288\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74288"},{"title":"第一次独居？我们为你准备了一份「租房攻略合订本」","date":"2022-07-15 07:59:43","description":"身外之物的丰盈或缺失并不足以削弱一个人的热爱，只要认真生活，租来的房子也会有家的归属感。<a href=\"https://sspai.com/post/74285\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74285"},{"title":"App+1 | 能与腾讯会议联动的腾讯日历 2.0，真的足够好用了吗？","date":"2022-07-15 06:31:30","description":"考虑到不少人（比如我）没有体验过腾讯日历 1.x，这篇文章中我们将腾讯日历 2.0 作为一个全新的产品，介绍它的主要亮点，与 Calendly 作简单对比，最后分享一点我的个人看法。<a href=\"https://sspai.com/post/74256\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74256"},{"title":"你热爱旅行吗？旅行对你来说意味着什么？","date":"2022-07-15 06:16:54","description":"\n<p data-pid=\"YOCJejKO\"><b>先说结论，旅行让我富有底气去创造我的人生。</b></p>\n<p data-pid=\"wyQsPJul\">旅行 12年，去过 48 个国家，350 座城市，自驾 40 国。<b>旅行改变了我，它让我的认知不再局限，它让我看待世界的角度更加多元，它让我的生活富有创意有趣，它让我的人生拥有了更多的可能性。旅行已经融入我的生活，成为我的一部分。</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-b8f65f7017ba3616819ed9b986d17fba_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"638\" data-rawheight=\"511\" data-watermark=\"watermark\" data-original-src=\"v2-b8f65f7017ba3616819ed9b986d17fba\" data-watermark-src=\"v2-3920cb80af43a323bda4bb88147b925f\" data-private-watermark-src=\"v2-058b4fb88d93b37736ef99638af8ddbe\"></p>\n<h2><b>我与旅行</b></h2>\n<p data-pid=\"vbXJ6tOj\"><i>美国作家亨利·米勒 Henry Miller 说：“One’s destination is never a place, but a new way of seeing things” ，一个旅行目的地永远不是某个地方，而是一种看待事物的新方式。</i></p>\n<p data-pid=\"7UJoVb3C\">其实，我也不是天生的旅行者。在我旅行的这 十几年中，前 4 年，我都在旅游。报旅游团，或和朋友一起照着别人的攻略玩，没有什么明确的目的，只为了到那些风景名胜打个卡，在旅途中到此一游。后来随着我的经验日益丰富，我开始尝试独自旅行，从 3、5 天的短途，到十几天的远途旅行，再到如今去某个目的地生活个一段时间。<b>我试着去感受自然，感知文化，感悟人生，把一切都视为人生的一种经历，一种体验，在旅途中自我修行。</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-7e085722de7ec61908087d90f53da2be_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"810\" data-watermark=\"watermark\" data-original-src=\"v2-7e085722de7ec61908087d90f53da2be\" data-watermark-src=\"v2-6fda5aac8c68891e60005f5ce97a92a3\" data-private-watermark-src=\"v2-8a47386e184050885f4842c10083cc2e\"></p>\n<p data-pid=\"uDXcs34-\">这几年，我开始不满足于旅行书，别人攻略上的那些玩法，而是给自己旅行制定很多新鲜的主题，去发掘更有意思或对我有意义的地方，努力的去 be a local。比如我会疯狂的去打卡博物馆美术馆，去看那些世界名画。去我喜欢作家生活的地方走走，因为我很好奇到底是什么样的环境，什么样的文化，能够孕育出这些富有创作力的人。又独自一人在意大利旅行了一段时间，去学如何揉面团做 pizza，如何配比奶油和糖做 gelato，去学习意大利人丰富的手语表达。甚至是我三次前往巴尔干地区，只因为我想了解宗教冲突与文化融合。而我的旅途，也从坐飞机火车，到搭轮船长途巴士，再到自己考了驾照开始自驾旅行，<b>我尝试通过不同的出行方式来拓展旅行的自由度、维度和深度。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-01e4b7f5521bfd6237b9a1fd7744ea30_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1350\" data-watermark=\"watermark\" data-original-src=\"v2-01e4b7f5521bfd6237b9a1fd7744ea30\" data-watermark-src=\"v2-31727ad2aa642855ae08a4be6f9915eb\" data-private-watermark-src=\"v2-7f52031b82675c204e4c4389aaa9c30c\"></p>\n<p data-pid=\"UfRYKODG\">在过去十几年里一次次的旅行中，我明显的感觉到了自己的变化。<b>当我已经可以收放自如的制定旅行计划、得心应手的规划线路，我的对信息归纳总结能力，及逻辑性整体把握力，得到了提高。当我在旅途中迷路时，翻地图查阅网上信息甚至是去问人，这个时候我的搜索能力和与人交谈能力，得到了提高。当我在旅途中做了很多计划外的事情，于是慢慢的就变得不再害怕‘未知’和冷静的解决‘突发事件’，我的随机应变的能力，也在提高。</b></p>\n<p data-pid=\"nqScxiOd\">靠一场旅行就改变人生，我认为是不现实的。旅行中大部分的“所见所闻”多半不会立马起到效用，但它能给人带来成长，这是个很慢的过程，却终会在某一时刻起到作用。也许是工作中突然闪现的想法，或者是解决问题的方式，提高效率的办法，更或者是沟通能力。</p>\n<p><br></p>\n<h2>我的旅行与工作</h2>\n<p data-pid=\"p6Qfs6Om\"><i>You can either travel or read, but either your body or soul must be on the way. “要么读书，要么旅行，身体和灵魂总有一个在路上”，《罗马假日 Roman Holiday》。</i></p>\n<p data-pid=\"syZXV2U6\">很多人问我，我一直在旅行，我是靠什么来生存和支持我的旅行的。相比起那些给与我旅游达人、KOL这些title，<b>其实，我真正的身份是一名广告公关人</b>。2014 年我毕业，正值中国新媒体迅速崛起。我去了广告公司，接触到了社交媒体，从做原创编辑，品牌策划，到媒介购买，公关咨询，我主要服务的都是文旅类客户，包括酒店、航司、旅游局。我的日常工作是和品牌甲方爸爸们沟通，和媒体老师们沟通，和上面政策机构沟通，策划线上线下活动，写各种 ppt，新闻稿，新媒体软文，对接 KOL等等等等。<b>工作带给我的，是我就对文旅类客户有了直接的接触，深层次的了解品牌需求，市场需求、以及洞悉旅游行业变化。</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-1829c6d04ed09705b6cf7308de337154_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-1829c6d04ed09705b6cf7308de337154\" data-watermark-src=\"v2-8511994d9c65b3c94e4b405df4f8dff7\" data-private-watermark-src=\"v2-aaca0cbfba745cf0fe7363f6ce551e0b\"></p>\n<p data-pid=\"eZtCf2Hn\">而下班后的我是一个自媒体人。其实起初我也就是做着玩玩，更新我的旅行故事在微博微信上。后来我无意间写了几个爆款，就是所谓的 10w+，得到了很多人的共鸣，和鼓励，让我知道，原来我写的文字是有力量的，我有了粉丝，于是就更坚定我经营自己的社交媒体平台。这几年，只要新出现一个平台，我就去开设账号，通过更新我的内容去了解平台属性、定位以及用户喜好，同时我也切身感知到市场推广形式的变化，新兴的营销方式，了解那些爆款背后的运作。</p>\n<p data-pid=\"HOpDD8Qd\">所以，在旅游这个大行业里，从 BtoB 到 BtoC，从 online 到 offline，从图文到视频，从大神网红自媒体，我都有所接触，也有了一套自己的工作模式和逻辑。而且，在打理我自己自媒体平台时所了解的，也成为了我在社交媒体领域的经验和洞察，并最直接的运用到我的工作中，这也使得我总能很快的捕捉到行业的变化，提出很多新的思路，产生富有创造力的 idea，也有了我客户对我能力的认可我，让我做实了一个广告人的身份。</p>\n<p data-pid=\"vvrNrIXB\">而我始终都在我擅长的领域和行业与时俱进着。如今我负责的项目是每年在澳门举办的，《十四五旅游业发展规划》中提及的Global Tourism Economic Forum 世界旅游经济论坛。这几年的工作中，对接了很多旅游业内人士及相关企业，我们都相信旅行是世界各地许多人赖以生活和生计的根本组成部分，旅游业终会复苏，尤其是看到疫情后国内的旅游业的显著恢复及消费潜能的释放，也看好未来。</p>\n<p data-pid=\"boWWcjGJ\">因为旅行与工作的关系，我也受邀作为嘉宾出席包括TEDx的很多演讲，分享我的故事和见解，也让我得以用我自己的方式，让更多人了解这个行业，鼓励更多人走出去。我一直说，我不想做全才，我想做专才。社交媒体+旅游行业，是我想要钻研的领域。我不想做一个单纯的旅游达人，我更想成为一个专注旅游行业的专业广告人，在我擅长的领域和行业与时俱进着。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-8b2d821d31bad2626277dd4362923b8e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"812\" data-watermark=\"watermark\" data-original-src=\"v2-8b2d821d31bad2626277dd4362923b8e\" data-watermark-src=\"v2-ac2d1d14b94f450fce921a8b253505af\" data-private-watermark-src=\"v2-7fb013b609a5bd9316642718e2e8c8d3\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-0a53c9de51be7a6365b93a92e8b21260_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1198\" data-rawheight=\"898\" data-watermark=\"watermark\" data-original-src=\"v2-0a53c9de51be7a6365b93a92e8b21260\" data-watermark-src=\"v2-fb27cbab1c6a037f69d4e0aa029039d2\" data-private-watermark-src=\"v2-62e7f5651061dadbc5be2770fb66858f\"></p>\n<p><img src=\"https://pic1.zhimg.com/v2-e23f39aee59b4d842cc84e22eb0eddcd_720w.jpeg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-e23f39aee59b4d842cc84e22eb0eddcd\" data-watermark-src=\"v2-d5956bdc0bc2b213b3dfa72764ff824d\" data-private-watermark-src=\"v2-e05aa911f04164ec7525a6ad2f81f400\"></p>\n<p data-pid=\"6I_zlnvd\"><b>通过旅行，可以让我接受新兴事物，适应不同的环境，打破固化思维的界限，建立多维度思考和分析能力，继而为工作和生活，带来新的想法，这也是我创造力的来源。只能说，我从事的广告行业与我热爱的旅行，是相互的相辅相成的。旅行改变了我，旅行也成就了我，它给了我职业方向，更给了我独一无二的竞争力。</b></p>\n<p><br></p>\n<h2><b>我的旅行与生活</b></h2>\n<p data-pid=\"n0gylQQW\"><i>古罗马时期的思想家圣奥古斯丁 Saint Augustine 说：“The world is a book and those who do nottravel read only a page” ，世界就是一本书，那些不旅行的人只能读一页。</i></p>\n<p data-pid=\"rZqY0MG6\">其实在 10 年前，可能是个更早，我对我人生的设想是 23 岁大学毕业，26 岁有个不错的稳定职场，27、8 岁结婚，30 岁生孩子，过按部就班的人生。可现实呢，<b>当旅行成为我生活的一部分，这个爱好彻底改变了我的人生轨迹。</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-d0649b28f69ce3ce9bfb91cafa0e0f57_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1439\" data-watermark=\"watermark\" data-original-src=\"v2-d0649b28f69ce3ce9bfb91cafa0e0f57\" data-watermark-src=\"v2-ec57d864f33cc1011cab80f87e51a103\" data-private-watermark-src=\"v2-9c45b5544cef7dfa92cccb2fe88b9e91\"></p>\n<p data-pid=\"TgCIK85C\">在旅途中，我遇见了太多的人，看了太多不一样的人生：有完成 Gap Year 旅行的背包客姐妹；开着改装房车环游世界的情侣；走遍欧洲的美国硅谷码农，一边旅行一边敲代码；45 岁从法国巴黎出发骑行去土耳其的大叔；拿着退休金在罗马尼亚开青旅的加拿大老太太；沿着英国海岸线一路走一路给慈善机构筹钱的退伍军人和他的狗；在挪威私人山谷中经营农场的同性恋人；还有很多很多，这些人一直在我脑海中挥之不去，这些人的人生和生活方式让我无比向往。</p>\n<p data-pid=\"JbXPoSkj\"><b>有很多时候我都在觉得，走的越多，看的越多，我却越觉得自己无知和渺小，却又更加对世界跃跃欲试。我也想创造属于自己的人生啊。</b></p>\n<p data-pid=\"b2nMSyJM\">于是，我并没有按照原先的设想生活，在 23 岁时我申请了研究生，26 岁的我已经辞职又入职。27 岁的我经常带着行李箱去上班，搭红眼航班启程新的目的地，又拖着行李箱搭最早的航班返回公司直奔工位。28岁的我一边在职场厮杀，一边又疯狂的去旅行，练就了不用倒时差的技能，把那些我想去的地方变成去过的地方。29 岁呢，我选择裸辞做一个自由职业者，疯狂的起飞降落 32 次，去了 23 个国家，带着电脑在全世界工作。如今31岁的我，选择重返职场，在疫情后时代，希望能对旅游复苏献出自己力所能及的力量。同时，我也蓄势待发着，等着奔赴下一场畅快淋漓的旅行。我找到了属于自己的生活节奏和快乐。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-4ac8e8277449d03992d9a61f1f95717d_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1072\" data-rawheight=\"1009\" data-watermark=\"watermark\" data-original-src=\"v2-4ac8e8277449d03992d9a61f1f95717d\" data-watermark-src=\"v2-3057b192a03782bd9e5d04b1c220197b\" data-private-watermark-src=\"v2-62c2db6b071a2075766860d9c6a163a8\"></p>\n<p data-pid=\"Rf0MVJ-D\">我们总会用外界的很多‘既定标准’去比较，谁比谁挣的多，谁买了房换了车，谁嫁的好娶的妙... 习惯用这些‘别人的完美人生’来衡量自己，但又何尝不是一种束缚呢... 可认真审视自我时，我总会问自己：别人的人生我向往吗，说实话有羡慕的，但真的适合我吗？</p>\n<p data-pid=\"wQvkWLJ7\">我开始承认我不完美，也意识到我不会完美，但这就是我，真实的我。<b>与其选择坐在那里自怨自艾感叹时运不济，不如走出去看看外面的世界，遵从自己的内心，当眼界越开阔，就会越清楚自己的位置，更加接纳自己，知道自己想要什么，适合什么。当我开始可以真正悦纳自己时，我才是拥有真正的自由，过属于我的人生。</b></p>\n<p data-pid=\"tniA9-cG\">Curiosity is the truth and the way of creative living.</p>\n<p data-pid=\"TkaGe_AH\">Make something, do something, do anything.</p>\n<p data-pid=\"pq2t2faC\">Dream, think, and create.</p>\n<p data-pid=\"7AJju4q_\">To travel is to live. 旅行即生活。</p>\n<p data-pid=\"yfIDDAKS\"><b>旅行让我富有底气去创造我的人生。</b></p>\n<p><img src=\"https://pica.zhimg.com/v2-85dbe5dd75b55b307292fe9736af2fe8_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1080\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-85dbe5dd75b55b307292fe9736af2fe8\" data-watermark-src=\"v2-2935d0652fa6485882cf9f2b8f2a080f\" data-private-watermark-src=\"v2-d9d18da30f2228ee757973293540da24\"></p>\n<p><br></p>\n<h2>关于我</h2>\n<p data-pid=\"xCAhlP2C\">以「一人一车一行李箱」的方式，去过48个国家400+城市的红唇姑娘</p>\n<p data-pid=\"ksk6lqbM\">公众号 SkaeyMin</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/skaeytravelstudio?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">游旻Skaey</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/461860087/answer/2573922543?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">97 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/531476686?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">你喜欢什么样的旅行?</a><br><a href=\"http://www.zhihu.com/question/542558295?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">什么时候你想来一场说走就走的旅行？</a><br>\n","link":"http://www.zhihu.com/question/461860087/answer/2573922543?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"watchOS 9 推出首个公测版，这些新功能值得尝鲜","date":"2022-07-15 03:32:06","description":"最近，Apple终于放出了watchOS9的首个公测版本（PublicBeta）。watchOS9带来了3款全新表盘，在健康方面还新增了用药提醒和更多体能训练数据。作为Apple生态的一环，watch ...<a href=\"https://sspai.com/post/74223\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74223"},{"title":"一派·PowerUp 05 | 用 MoneyWiz 完成个人记账","date":"2022-07-15 03:00:00","description":"如果你是生活在都市的年轻人，夏日里来一杯奶茶（加奶盖的那种），再请朋友们吃支雪糕，晚上吃顿海底捞，晚上再补一块「罪恶的」网红中式点心。这样的一天，怎么也算不上「奢华」吧？直到你月底查看了自己的银行余额 ...<a href=\"https://sspai.com/post/74279\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74279"},{"title":"派早报：蒸汽平台召开游戏发布会、Android 13 将支持蓝牙 LE Audio 技术等","date":"2022-07-15 00:56:36","description":"尼康尼克尔 Z 卡口 400mm ƒ/4.5 VR S 镜头开售，任天堂收购 CG 动画工作室等<a href=\"https://sspai.com/post/74280\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74280"},{"title":"性能小提升，外观大变样——M2 版 MacBook Air 上手体验","date":"2022-07-14 13:00:45","description":"告别卡顿，告别发热，告别风扇狂转——美好的数字生活在向你招手。<a href=\"https://sspai.com/post/74235\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74235"},{"title":"新玩意 112｜少数派的作者们最近买了啥？","date":"2022-07-14 09:21:00","description":"好看就完事儿了。<a href=\"https://sspai.com/post/74271\" target=\"_blank\">查看全文</a>\n","link":"https://sspai.com/post/74271"},{"title":"如何评价国产动画《紫川》第 32 集的制作表现？","date":"2022-07-14 05:26:13","description":"\n<p data-pid=\"ztKzKBWN\">      谢邀，以下言论涉嫌剧透，请捂眼观看。</p>\n<p data-pid=\"AYudQ5sH\">       我觉得本集的核心表达是“情义”。   </p>\n<p data-pid=\"qqJqBBXV\">       首先是兄弟情义，斯特林不想辜负手下们的信任，决定和他们共进退，却劝紫川秀找机会独自离开帕伊。</p>\n<p data-pid=\"Ua2uTjlb\">       而紫川秀笑看生死，胡搅蛮缠“赖”着和斯特林同生死。帝林得知两兄弟深陷重围，破口大骂两人是笨蛋，然后镇定地做了一个不理智的决定--飞蛾扑火，做第三个笨蛋。</p>\n<p data-pid=\"fQdIz3fV\">       相信很多观众曾经都被帝林的这句“我是第三个笨蛋”触动过，所谓真正的兄弟，从来都不是嘴上说说。</p>\n<p data-pid=\"VpGHdeLB\">        其次是家族情义，魔族大军压城，城内士兵内讧，哥应星的枉死让中央军对雷洪叛军杜克等人怀恨在心，和维护杜克等人的秀字营大打出手，后来在主将的劝解下，双方和解。我想，促使他们和解的更深层次的原因，是他们都是人类，都是紫川家族，这些“叛徒”不远万里，不顾生死，为救同族而来，这些已经足够说明一切。</p>\n<p data-pid=\"JAQ5U90w\">      最后是同胞情义，魔族学习帝林的冷血策略，遣派人类俘虏作为先锋，对于重感情的人族来说，这是一个很难抉择的事情，他们没有办法射杀自己的同胞，但是如果不射杀同胞，他们会慢慢将护城河填平，城内的军队就会被蚕食掉，如果射杀，那谁又能背负“杀害同胞”这样的罪责？ 魔族的残暴让部分人类俘虏意识到，哪怕替魔族趟平了道路，害死自己的同胞，最后也难逃一死，于是他们奋起反抗，但蜉蝣撼树般的局面，以及更多涌向帕伊的俘虏们，最终让斯特林眼含热泪，下令放箭，作为主将的他主动背负起枷锁，给了自己同胞一个仇恨的宣泄口，也撕破了战争的僵局。所有的眼泪嘶吼，不舍不愿都只因为他们是人类，是自己的同胞。</p>\n<p data-pid=\"SrCdRmKV\">      本集其实只是怕伊保卫战的一个起点，后续几周将持续高能攻城，各位观众老爷，敬请期待。 </p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/wu-ming-19-61-10?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">无名</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/542864354/answer/2570655130?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">31 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/512153694?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价国产动画《紫川》的制作呈现？</a><br><a href=\"http://www.zhihu.com/question/510345665?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价国产动画《紫川》首创隐藏互动剧集？</a><br>\n","link":"http://www.zhihu.com/question/542864354/answer/2570655130?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价国产动画《紫川》第 32 集的制作表现？","date":"2022-07-14 05:26:06","description":"\n<p data-pid=\"JnSbYgQO\">谢邀。</p>\n<p data-pid=\"GoIr3MPZ\">本市闹疫情，今晚有空躲在家里把积攒下来的紫川动画给看了一遍，赶到了最新的帕依围城进度。</p>\n<p data-pid=\"oH9NLFr1\">不知道其他网文作者看到自己书的被改编是什么感觉，但对我来说，最大的感觉是怪异感，还有深深的怀疑：这样激动又热血的内容，真是我写出来的么？世上莫非还有另一头叫老猪的家伙？</p>\n<p data-pid=\"RULkbOeo\">真的，随着年纪的增长，人最不能面对的，是镜子里鬓角忽然冒出的雪白，还有过去的自己。</p>\n<p data-pid=\"Hk6fQFtv\">《紫川》写于2001年4月，开始写书的时候，猪还是一名大四下学期准备拿毕业证即将走向社会的大学生。看着动画，我看到了一面镜子，镜子里是二十年前的自己，那时的我，兜里穷得叮当响，去网吧只敢充五毛钱的时间，胸中却怀着无限的壮志和豪气。那时候的我，相信人性本善，相信明天会更美好，相信努力奋斗就能换来成功。</p>\n<p data-pid=\"EGfOUDYm\">二十年前的2001年，那是个多么美好的年纪，多么充满希望的年代啊！我的同学，我的朋友，我深恋过的女孩子，你们都还好吧？那些校园里的往事，依然历历在目，梦魂牵绕。</p>\n<p data-pid=\"ECYWCYjY\">二十年过去了，很多事变了，很多人也变了，但我依然坚信，世间有着真挚的兄弟情谊，和至死不渝的真正爱情。经历了二十年的风风雨雨，面对一生的挚友们，我依然能问心无愧地说出“我是第三个笨蛋”。</p>\n<p data-pid=\"bpQD4Xg4\">回望这些年，这是最让我欣慰的事了。</p>\n<p data-pid=\"8Ac_s-po\">感谢腾讯视频动漫，也感谢制作团队，这部动画就凝固了我青春时的幻想和憧憬，让我再次看到了年青时候的自己，重温了当年的心境。</p>\n<p data-pid=\"s0-p7LXk\">看到自己当年的书，回想起当年大学时的往事，感触良多，心绪杂乱，有点语无伦次了，大伙儿见谅。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/lao-zhu-xian-sheng-43?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">老猪先生</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/542864354/answer/2573249309?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">31 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/512153694?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价国产动画《紫川》的制作呈现？</a><br><a href=\"http://www.zhihu.com/question/510345665?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价国产动画《紫川》首创隐藏互动剧集？</a><br>\n","link":"http://www.zhihu.com/question/542864354/answer/2573249309?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"「非常规历史开题报告」活动开始——征集历史相关的有趣问题，提问赢大奖！","date":"2022-07-14 03:38:17","description":"\n<p data-pid=\"q_QHwIPI\">是否有一瞬间，熟悉的历史看起来有点陌生？</p>\n<p data-pid=\"yxg0V1NQ\">「这么看感觉历史好怪！」</p>\n<p data-pid=\"-LZqYCEk\">「但是很有趣！」</p>\n<p data-pid=\"xQqMqnZw\">和 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/c167dea2f593c4315cfff1e9ea6d023a\" data-hash=\"c167dea2f593c4315cfff1e9ea6d023a\" data-hovercard=\"p$b$c167dea2f593c4315cfff1e9ea6d023a\">@历史环游记</a> 一起，提出你的问题，向奇奇怪怪的历史发起进攻！</p>\n<p data-pid=\"opQ8Jeip\">更可关注 <a href=\"https://www.zhihu.com/topic/25852331/hot\" class=\"internal\">#问题青年#</a> 话题，加入 #问题青年# 计划！</p>\n<p data-pid=\"49W5NBA8\">本计划致力于「好」问题的提出，会不断推出有趣的提问活动～</p>\n<figure data-size=\"normal\"><img src=\"https://pic2.zhimg.com/v2-cb3e29ec78ec63e5e58082a187ef4bf1_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1042\" data-rawheight=\"414\" class=\"origin_image zh-lightbox-thumb\" width=\"1042\" data-original=\"https://pic2.zhimg.com/v2-cb3e29ec78ec63e5e58082a187ef4bf1_r.jpg\"></figure><h2>参赛指南</h2>\n<h3>活动页面</h3>\n<p data-pid=\"gRGvy_MC\"> ⬇️（7 月 14 日开放）</p>\n<p data-pid=\"CgYXptRl\"><a href=\"https://www.zhihu.com/xen/market/ecom-page/1512070356176756736\" class=\"internal\"><span class=\"invisible\">https://www.</span><span class=\"visible\">zhihu.com/xen/market/ec</span><span class=\"invisible\">om-page/1512070356176756736</span><span class=\"ellipsis\"></span></a></p>\n<h3>活动时间</h3>\n<p data-pid=\"LOPsaPpL\">2022 年 7 月14 日 —— 2022 年 7 月 30 日</p>\n<h3>活动玩法</h3>\n<p data-pid=\"x77TpV12\">2022-07-14 至 2022-07-30，在社区内进行非匿名提问，提问时绑定 #非常规历史开题报告# 话题，有效提问 3 个以上问题。活动结束后预计抽取 10 名幸运参赛者，赠送「会员季卡」一张！</p>\n<h3>提问方法</h3>\n<ol><li data-pid=\"aBR9oPIH\">在 APP/PC 端找到提问按钮并点击</li></ol>\n<figure data-size=\"small\"><img src=\"https://pic2.zhimg.com/v2-7866481ca398e3c9122ba8eee47f7d5d_b.jpg\" data-size=\"small\" data-rawwidth=\"1440\" data-rawheight=\"284\" class=\"origin_image zh-lightbox-thumb\" width=\"1440\" data-original=\"https://pic2.zhimg.com/v2-7866481ca398e3c9122ba8eee47f7d5d_r.jpg\"><figcaption>点击蓝色加号</figcaption></figure><figure data-size=\"small\"><img src=\"https://pic4.zhimg.com/v2-3a56e71ca024a43797ba7564c119c70f_b.jpg\" data-size=\"small\" data-rawwidth=\"1440\" data-rawheight=\"414\" class=\"origin_image zh-lightbox-thumb\" width=\"1440\" data-original=\"https://pic4.zhimg.com/v2-3a56e71ca024a43797ba7564c119c70f_r.jpg\"><figcaption>点击「提个问题」卡片</figcaption></figure><p data-pid=\"luHhyfk7\">2. 绑定话题时，搜索 <a href=\"https://www.zhihu.com/topic/25852333/hot\" class=\"internal\">#非常规历史开题报告#</a> 话题并绑定</p>\n<figure data-size=\"small\"><img src=\"https://pic3.zhimg.com/v2-532eb98a52a83c4aa691b65736b73732_b.jpg\" data-size=\"small\" data-rawwidth=\"1267\" data-rawheight=\"2560\" class=\"origin_image zh-lightbox-thumb\" width=\"1267\" data-original=\"https://pic3.zhimg.com/v2-532eb98a52a83c4aa691b65736b73732_r.jpg\"><figcaption>输入问题后，点击添加话题</figcaption></figure><figure data-size=\"small\"><img src=\"https://pic1.zhimg.com/v2-5571d762e95ca2716c7de6949a729e2c_b.jpg\" data-size=\"small\" data-rawwidth=\"1440\" data-rawheight=\"826\" class=\"origin_image zh-lightbox-thumb\" width=\"1440\" data-original=\"https://pic1.zhimg.com/v2-5571d762e95ca2716c7de6949a729e2c_r.jpg\"><figcaption>搜索「非常规历史开题报告」并添加</figcaption></figure><p data-pid=\"nt7tyql2\">3. 如问题在此期间收获「50+」有效回答，或自然冲上热榜，给参与「会员季卡」活动的同时，更有另外优质历史实体书籍赠送！</p>\n<p data-pid=\"8M1TOjkt\">书籍清单如下，随机发放：</p>\n<p data-pid=\"jzFIIQUv\">半小时漫画世界史➡️\t<a href=\"https://www.zhihu.com/pub/book/119608427\" class=\"internal\"><span class=\"invisible\">https://www.</span><span class=\"visible\">zhihu.com/pub/book/1196</span><span class=\"invisible\">08427</span><span class=\"ellipsis\"></span></a></p>\n<p data-pid=\"KXmoxj6a\"> 张宏杰「简读中国史」系列➡️  <a href=\"https://www.zhihu.com/pub/book/120095533\" class=\"internal\"><span class=\"invisible\">https://www.</span><span class=\"visible\">zhihu.com/pub/book/1200</span><span class=\"invisible\">95533</span><span class=\"ellipsis\"></span></a></p>\n<p data-pid=\"FAAttt-O\"> 清朝与中华传统文化➡️ <a href=\"https://www.zhihu.com/pub/book/120286736\" class=\"internal\"><span class=\"invisible\">https://www.</span><span class=\"visible\">zhihu.com/pub/book/1202</span><span class=\"invisible\">86736</span><span class=\"ellipsis\"></span></a> </p>\n<p data-pid=\"ZYu0QJmh\">一看就懂的史记➡️ <a href=\"https://www.zhihu.com/pub/book/120256858\" class=\"internal\"><span class=\"invisible\">https://www.</span><span class=\"visible\">zhihu.com/pub/book/1202</span><span class=\"invisible\">56858</span><span class=\"ellipsis\"></span></a> </p>\n<p data-pid=\"pPIg_YNf\">历史的温度 6：站在十字路口➡️ <a href=\"https://www.zhihu.com/pub/book/120282555\" class=\"internal\"><span class=\"invisible\">https://www.</span><span class=\"visible\">zhihu.com/pub/book/1202</span><span class=\"invisible\">82555</span><span class=\"ellipsis\"></span></a> </p>\n<p data-pid=\"tb2YO4uL\"><b><i>什么？等不及了？点击链接即可在知乎阅读以上全部电子书。</i></b></p>\n<hr>\n<h2>提问参考书</h2>\n<h3>方向指引</h3>\n<p data-pid=\"dSfk4oSa\">原则上，只要是和「历史」相关的问题皆为有效问题。可以是人物志，也可以涉及有关历史变迁的关键节点，更可以集中于史书中某个细节。</p>\n<p data-pid=\"GUzBQOOd\">只要你想得到，历史自然会呈现出万千面孔。</p>\n<h3>高热关键词</h3>\n<figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-4bf9d5d401cb5e4b4f8d5a21afc1c517_b.jpg\" data-size=\"normal\" data-rawwidth=\"751\" data-rawheight=\"515\" class=\"origin_image zh-lightbox-thumb\" width=\"751\" data-original=\"https://pic4.zhimg.com/v2-4bf9d5d401cb5e4b4f8d5a21afc1c517_r.jpg\"><figcaption>高热词云参考</figcaption></figure><h3>历史真题</h3>\n<figure data-size=\"normal\"><img src=\"https://pic1.zhimg.com/v2-60dc3017cb6f97018661764f8c2b03cc_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"751\" data-rawheight=\"655\" class=\"origin_image zh-lightbox-thumb\" width=\"751\" data-original=\"https://pic1.zhimg.com/v2-60dc3017cb6f97018661764f8c2b03cc_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic4.zhimg.com/v2-7f98f96bd15539fc0261eec07f4cc40b_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"751\" data-rawheight=\"471\" class=\"origin_image zh-lightbox-thumb\" width=\"751\" data-original=\"https://pic4.zhimg.com/v2-7f98f96bd15539fc0261eec07f4cc40b_r.jpg\"></figure><figure data-size=\"normal\"><img src=\"https://pic3.zhimg.com/v2-efaea4c3262ef13685be258bd8e4f6d2_b.jpg\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"751\" data-rawheight=\"536\" class=\"origin_image zh-lightbox-thumb\" width=\"751\" data-original=\"https://pic3.zhimg.com/v2-efaea4c3262ef13685be258bd8e4f6d2_r.jpg\"></figure><hr>\n<h2>活动规则</h2>\n<p data-pid=\"dmNZw1Lz\">参赛内容需符合本次活动主题要求，不得违反相关法律法规、社会公序良俗，不得违反社区管理规范等，出现如上情况，知乎有权取消个人参赛资格。</p>\n<p data-pid=\"af2K2q_l\">鼓励运用知乎邀请、分享等方式给予提问更多曝光，严禁刷赞、刷播、营销推广等不正当行为，一经发现取消获奖资格。</p>\n<p data-pid=\"_S9Arw6Y\">获奖名单将于活动结束后 21 个工作日内，由历史环游记官方账号发布，公示一周并发放奖品。</p>\n<p data-pid=\"KhvTcDxV\">本次活动最终解释权归知乎所有。</p>\n<p class=\"ztext-empty-paragraph\"><br></p>\n<p data-pid=\"t82v2560\">快来参与活动吧！</p>\n<p data-pid=\"iI7wsLki\">别忘了关注 <a class=\"member_mention\" href=\"https://www.zhihu.com/people/c167dea2f593c4315cfff1e9ea6d023a\" data-hash=\"c167dea2f593c4315cfff1e9ea6d023a\" data-hovercard=\"p$b$c167dea2f593c4315cfff1e9ea6d023a\">@历史环游记</a>  ，参与活动不迷路！</p>\n<p></p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/li-shi-huan-you-ji?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">历史环游记</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br>\n","link":"http://zhuanlan.zhihu.com/p/540788961?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何看待知乎《拆车实验室》拆理想 one 座椅未发现水银却发现大面积生锈？","date":"2022-07-12 10:28:24","description":"\n<a href=\"https://www.zhihu.com/zvideo/1404203986858168320\">拆完了！理想ONE水银没有，生锈一大片</a><p data-pid=\"9P00Bom2\"><b>人在拆车实验室，拆完了，直接说结论：</b></p>\n<ol>\n<li data-pid=\"CfknEOfn\"><b>水银，确实没有拆出来。这在意料之中。</b></li>\n<li data-pid=\"jsyXhrtV\"><b>金属骨架有大面积的锈蚀。这一点，算是个意外的发现，要知道座椅的出厂日期仅2周啊。</b></li>\n</ol>\n<a href=\"https://www.zhihu.com/zvideo/1403175948645261312\">「直播回放」拆车实验室 | 拆解理想ONE座椅，未发现水银，却发现大面积生锈</a><p><img src=\"https://pic2.zhimg.com/v2-478184177acc31d5beb4ac49c9d6c075_720w.jpg?source=b1748391?rss\" data-rawwidth=\"720\" data-rawheight=\"405\" data-size=\"normal\" data-caption=\"\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"2qru02ix\"><b>后续2：</b><br>在直播结束之后，理想的工作人员与我取得了联系，他们的回复是这样的，供参考。「使用过程中」这几个字有点尴尬，毕竟这车当时一共就开了几十公里，从4S到演播间而已。我这使用强度是有多废椅子。。。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1dc23749f805971a41f40d2554317c93_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1170\" data-rawheight=\"1694\" data-size=\"normal\" data-caption=\"\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"V5pi4rA4\"><b>后续3：</b><br>直播后的第2天，网上陆续看到了一些讨论和解读。其中有些平台的内容，还挺火。<a href=\"http://link.zhihu.com/?target=https%3A//www.163.com/dy/article/GG0S48E10547LOCG.html%23post_comment_area\" class=\" wrap external\" target=\"_blank\" rel=\"nofollow noreferrer\">5万多条评论，还生生造了一个新词「优锈」</a>，看到我乐死~</p>\n<p><img src=\"https://pica.zhimg.com/v2-b9f4deab8de86ab94b56f2ec2926817b_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1108\" data-rawheight=\"1160\" data-size=\"normal\" data-caption=\"\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"JbWl5ekJ\">同时也有网友和自媒体，质疑我们的车辆购买流程是否规范，出厂日期是否是最新的。请放心，全程真实可信！从提车到直播，间隔不超过48小时。<br><b>附：座椅骨架生产日期：2021年6月8日</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-2abd40af949480d6c9081f09828d29e4_720w.jpg?source=b1748391?rss\" data-rawwidth=\"2400\" data-rawheight=\"1080\" data-size=\"normal\" data-caption=\"\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"nfU484y8\"><b>座椅线束生产日期：2021年7月5日</b></p>\n<p><img src=\"https://pic2.zhimg.com/v2-b6f06fd66098aab59510b2d16e38976c_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"2400\" data-size=\"normal\" data-caption=\"\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"bKyYtERk\">另外，座椅海绵生产日期是2021年7月12日，忘了拍照了。这个证明，整个座椅至少是在7月12日以后生产的。<br><b>最后是车辆生产日期：2021年7月19日。如合格证。</b></p>\n<p><img src=\"https://pic3.zhimg.com/v2-56758ee6cefd7bd0bf840e77d30059ac_720w.jpg?source=b1748391?rss\" data-rawwidth=\"1080\" data-rawheight=\"1470\" data-size=\"normal\" data-caption=\"\" data-watermark=\"\" data-original-src=\"\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/bin7576?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">三青</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/475149068/answer/2027259245?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">30 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/520196188?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">贝尔顿拆车工具性价比高吗？</a><br><a href=\"http://www.zhihu.com/question/543438019?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">你相信汽车的底盘可以360度无死角看到车下面的吗？</a><br>\n","link":"http://www.zhihu.com/question/475149068/answer/2027259245?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"为什么汽车不能设计成快撞车就自动刹车？","date":"2022-07-12 10:25:31","description":"\n<h2><b>这盛世如你所愿。但还是要提醒你，这个功能千万不要依赖，不稳定。</b></h2>\n<p data-pid=\"uKV_FttI\">这个问题的提问时间是2012年，知乎刚刚成立，不禁感慨。想必你当年也是一个爱思考的青年，现在已经通过思考和实践，让世界变得更好了吧。</p>\n<p data-pid=\"L4TiBcyD\">作为关注这个问题的晚辈，我兴奋地跟你汇报一下：这盛世如你所愿！其实这样的功能，即AEB功能已经出现，即自动紧急制动(Automatic Emergency Braking)。你所提到的「提示」功能，也属于其中的一部分，叫做FCW,即Forward Collision Warning (FCW)前方碰撞预警系统。</p>\n<p data-pid=\"_2pMGQ4C\">这是我们最近做的一次AEB横评测试，我们找来了市面上6款搭载AEB功能的车型，并制定了一整套打分标准。希望用最真实的画面，告诉大家，这些车型在AEB层面的实际能力。</p>\n<p><img src=\"https://pica.zhimg.com/v2-955125cbfd9beb4e39b69572f365e6d5_720w.jpg?source=b1748391?rss\" data-caption=\"从左到右：长安UNI-T、长安UNI-K、广汽传祺GS4 Plus、思皓QX、广汽埃安Y、岚图FREE\" data-size=\"normal\" data-rawwidth=\"2322\" data-rawheight=\"974\" data-watermark=\"watermark\" data-original-src=\"v2-955125cbfd9beb4e39b69572f365e6d5\" data-watermark-src=\"v2-5d6e388d8024abd50a45766f6be9f98e\" data-private-watermark-src=\"v2-8f3cbfa81e17d35876d28f4754f70aa7\"></p>\n<p><img src=\"https://pic2.zhimg.com/v2-bf1e0f3bde189041758c39e27c4c2a11_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1440\" data-rawheight=\"1080\" data-watermark=\"watermark\" data-original-src=\"v2-bf1e0f3bde189041758c39e27c4c2a11\" data-watermark-src=\"v2-4e9121a173e7557fe5fac3b7c43e30be\" data-private-watermark-src=\"v2-e112b28039afbb6ac7158eb71f159dbf\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"GZxhXBO9\">这是我们第一次做横评，其中测试的标准，大量参考了C-NCAP、 Euro NCAP等机构的评测标准，设定了三大主要测试场景：1.车对道路弱势群体；2.车对车；3.车对道路常见障碍物  。</p>\n<p data-pid=\"Ni-lOnL0\">并对车辆的 识别、警示、制动及是否可以成功刹停，设置不同权重，通过更多过程分数，让测试结果更客观。并最终简化到一个总分，让大家一眼看懂。</p>\n<p data-pid=\"WDQWpvfz\">希望我们浅薄的认知+努力的实践，没有白费。话不多说，视频在这里，希望对大家有一点帮助。</p>\n<a href=\"https://www.zhihu.com/zvideo/1434512714249506816\">拆车实验室 | 6款车AEB主动刹车横评 亲测实证 切勿依赖</a>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/bin7576?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">三青</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/20498808/answer/2176579917?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">852 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/507192432?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么开车走神一瞬间前车就会准时踩下急刹车？</a><br><a href=\"http://www.zhihu.com/question/533668823?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">为什么开车的时候明明是踩油门往前开，但是推背感却让觉得在开倒车？</a><br>\n","link":"http://www.zhihu.com/question/20498808/answer/2176579917?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何评价《原神》提瓦特篇幕间 PV「冬夜愚戏」？","date":"2022-07-12 03:49:42","description":"\n<p data-pid=\"X8r8jkSV\">首先请允许我表达一下自己激动的心情……怎么也想不到制作组会突然放一波大招，直接用一部幕间 PV 把我们带往仍在旅途远方的极冬之国，在肃穆的「女士」葬礼上一口气披露了所有愚人众执行官，同时也为即将到来的须弥故事埋下了楔子，预示了旅行者与「博士」的交锋以及一场充满「亵渎」的大阴谋的到来。</p>\n<p><img src=\"https://picx.zhimg.com/v2-e10d4eab5944a9618e1f0afb0e4ad7e6_720w.jpg?source=b1748391?rss\" data-caption=\"愚人众执行官齐聚一堂，在这冬夜为牺牲的同僚驻足，哀悼着她的逝去。然而，肃穆的静思背后，隐匿着的却是众人各自翻涌的思绪\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-e10d4eab5944a9618e1f0afb0e4ad7e6\" data-watermark-src=\"v2-61e1b87188180a88f11626fdef79b529\" data-private-watermark-src=\"v2-6851c92d69309a45ed79634e5afce2e3\"></p>\n<p data-pid=\"y0y_b863\">整部短片蕴含的信息量不可不谓爆炸，如果展开解读那能说的可太多了。这里我姑且想一边按顺序和大家一起把短片过一遍，一边具体聊聊其中值得关注的细节。</p>\n<hr>\n<h2>棋盘之上</h2>\n<p data-pid=\"8ElTCevv\">短片开场，伴随圣洁而凄婉的女声吟唱响起，一只红莲蛾在风雪中艰难飞行，这象征着「女士」一直以来对于命运的抗争。尽管拼命向上飞行，但在迎面而来的凌冽风雪的摧残下，红莲蛾很快显出疲态，预示女士最终还是在命运的螺旋中走向自我毁灭，因所作所为付出沉重的代价，迎来了人生的终点。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-82909dae8f07a28ba5e791f730ce6950_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-82909dae8f07a28ba5e791f730ce6950\" data-watermark-src=\"v2-eb798be2d26aced3c36f868ae8154504\" data-private-watermark-src=\"v2-701e1631955da288d32972da70974a81\"></p>\n<p data-pid=\"27XoSJVe\">随后画面一转，红莲蛾飞到了国际象棋的棋盘上，而棋盘前的那位执棋手，正是愚人众的缔造者与统括官 ——「丑角」皮耶罗。可以看到，棋盘上不仅有着普通的棋子，象征神之权柄的两枚「神之心」也赫然位于其上，一方面这证实了一直以来对于神之心设计参考了国际象棋的猜想（岩风神之心分别对应白棋的战车与皇后），一方面也说明，至冬女皇与愚人众正在下着一盘真正的大棋。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5df3dbf5727eedf4f083cc289f70882f_720w.jpg?source=b1748391?rss\" data-caption=\"执黑棋者，是为「愚人」，那么棋盘对面、那位执白棋的看不见的对手，自然就是高天之上睥睨众生的「天理」了。这宏大棋局的棋盘乃是世界，这非凡棋局的结果决定了世界的命运，就连高高在上的神明，也不过是棋盘上的棋子\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-5df3dbf5727eedf4f083cc289f70882f\" data-watermark-src=\"v2-87cad6925b07ec8cf65e4e5499fada0b\" data-private-watermark-src=\"v2-c069e9833f9670a1370df957d83dc6cd\"></p>\n<p data-pid=\"RFsXnryU\">棋盘上白马吃掉黑卒代表了「女士」在稻妻被雷电将军斩杀这一事件。尽管白白损失一子，但皮耶罗却说「战局没有所谓的弃子」，红莲蛾停在黑子上的画面与一句「将杀并非是终点」似乎是在暗示：同僚的牺牲并非没有意义，战局仍在掌控之中。</p>\n<p><img src=\"https://pica.zhimg.com/v2-966a457ed67a65e4a389a5048c26577e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-966a457ed67a65e4a389a5048c26577e\" data-watermark-src=\"v2-d53fb305f6bf4a31ffeca7fd33cf7022\" data-private-watermark-src=\"v2-85432136bf813ea2270c344459e7ecd8\"></p>\n<blockquote data-pid=\"XcKzpkXQ\">\n<b>PS：</b>米在细节上的把控着实令人惊叹。短片中「丑角」所下的这盘棋并非胡乱摆成，而是一盘真正的棋局，很有可能暗示着未来主线剧情的走向。<br><br>目前已有原友对棋局进行了还原，得出的结论是白方（天理）以马（雷神）吃黑方（至冬）的兵（女士）是一步极差的臭棋，在原本占优的情况下反过来成就了黑方（至冬）的优势局面。若继续进行推演，这盘棋最终大概率将是黑方（至冬）checkmate 白方（天理）。<br>因为个人不是很懂棋，这里仅说个结论。具体分析强烈推荐大家去阅读下附的这篇精彩回答：</blockquote>\n<a href=\"https://www.zhihu.com/question/542662634/answer/2569266663\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pica.zhimg.com/v2-72b174348aa929b98bd82e26e0d85fe8_l.jpg?source=b1748391\" data-image-width=\"721\" data-image-height=\"723\" class=\"internal\">如何评价《原神》提瓦特篇幕间 PV「冬夜愚戏」？</a><p><img src=\"https://pic1.zhimg.com/v2-db273d2ad24c5bcb123fd2f0e0d3360c_720w.jpg?source=b1748391?rss\" data-caption=\"这步棋带有很强烈的「帮助黑方获胜」的刻意感，显然经过了巧妙的设计，那么便存在两种可能：一是「丑角」老谋深算，刻意安排了「女士」的牺牲来实现破局；二是执政官们在暗合冰神对抗天理的计划，故意放水为至冬创造优势条件。至于哪一种才是真相，还需要等待未来慢慢揭晓\" data-size=\"small\" data-rawwidth=\"727\" data-rawheight=\"726\" data-watermark=\"original\" data-original-src=\"v2-db273d2ad24c5bcb123fd2f0e0d3360c\" data-watermark-src=\"v2-79d1e9132df7e6568a0a3a8613892b8d\" data-private-watermark-src=\"v2-718b4d11c57394b9f0cf6633abe68fbf\"></p>\n<p data-pid=\"Asx5_tdQ\">皮耶罗也于此宣告：「贤者自以为无所不知，我等才明白此等愚行背后的道义」。此处提及的「贤者」，很可能是指身负「黄金」之名的坎瑞亚大炼金术师莱茵多特。莱茵多特是 500 年前坎瑞亚覆灭时引发大灾难「漆黑灾厄」的罪魁祸首，她既创造了席卷大陆的无数魔兽，也是「白垩之子」阿贝多的「母亲」，如今正为了某个未知的目的在大陆上游荡。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-a76378188f30b582929e6725eeaa62ef_720w.jpg?source=b1748391?rss\" data-caption=\"「贤者自以为无所不知，我等才明白此等愚行背后的道义」\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-a76378188f30b582929e6725eeaa62ef\" data-watermark-src=\"v2-6f72e2b4bd1975725ce4d02a0e40d378\" data-private-watermark-src=\"v2-c40b31e3441c68c3f7d9e7f19be85fa3\"></p>\n<p data-pid=\"AvMtp4ob\">同为坎瑞亚残留在世的权臣，皮耶罗曾自嘲自己的才能无法与「黄金的贤者」相比拟（详见「苍白之火 - 嗤笑之面」），但这里却说贤者「自以为无所不知」，说明两人在对抗天理、改写世界命运的道路上已经分道扬镳，选择了不同的道路。</p>\n<p data-pid=\"GlUFv-qQ\">从种种线索来看，莱茵多特应该是将希望寄托于理性，孜孜不倦追寻着「原初之人」（即法涅斯，提瓦特的创世神、「第一王座」）的奥秘；而皮耶罗则选择效忠于能够理解他的伤痛的至冬女皇，以「愚人」之姿嘲笑命运的可憎，采用更加激进的方式对抗天理的不公。</p>\n<blockquote data-pid=\"wsmtkk2S\">骄傲的愚人同士们，心怀怒火与永恒的寒冬吧。<br>既然我们彼此都见识过世界定理的荒谬与冷漠，<br>那就一同戴上嗤笑世界的面具，去改写天理吧。</blockquote>\n<p data-pid=\"m51l6GUM\">画面再度变化来到了一座大教堂中，「女士」的灵柩停放于此（估计是衣冠冢，毕竟按剧情演出来看罗莎琳已经在将军的雷霆一击中灰飞烟灭了。不过不排除那只是游戏限于年龄分级的隐晦表现手法，棺椁中可能真有罗莎琳被回收的尸身）。执行官们开始逐一登场，对同僚牺牲一事发表评价。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-a5bcae1f32aa623cfb0effd34a3ca9da_720w.jpg?source=b1748391?rss\" data-caption=\"教堂地面上出现了巨大的八角雪花纹样，这个图案在 PV 中多次出现，应该与蒙德的风车与璃月的天平一样，是象征着至冬的国家标志\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-a5bcae1f32aa623cfb0effd34a3ca9da\" data-watermark-src=\"v2-635c61c25522f93dca39e294944b037e\" data-private-watermark-src=\"v2-4879129fdf865876c2e0deaf01f5a49c\"></p>\n<h2>执行官们</h2>\n<h3>「少女」哥伦比娅</h3>\n<p data-pid=\"8z2zyFCE\">首先映入我们眼帘的是趴在「女士」灵柩上的执行官 ——「少女」哥伦比娅。女孩的面容上看不出有半丝悲伤，倒像是在浅浅的微笑，沐浴在月光中的她恬静地吟唱着动听的歌谣，显得圣洁而美丽。</p>\n<p data-pid=\"M6MqjdYS\">不过千万不要小看面前这位看似柔弱的少女，她可是位列执行官第三席的真正强者。在「公子」的评价中，尽管对于「少女」的实力与排名感到质疑，却也无法否认这名同僚身上隐藏着一些不对劲的、深不可测的秘密。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-3148dd9f3bcfdc4f7a41bd75af1940aa_720w.jpg?source=b1748391?rss\" data-caption=\"「少女」的发饰像是天使的六翼，而众所周知，六翼正是基督教神学中身为神之使者中最高位存在、天使之首炽天使「撒拉弗」的重要特征。这似乎是在暗示「少女」非同寻常的出身和实力\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-3148dd9f3bcfdc4f7a41bd75af1940aa\" data-watermark-src=\"v2-dd93cf7b7e3f6b7369f850859d3c8f83\" data-private-watermark-src=\"v2-8470eeac76a79e2f917084f19e079201\"></p>\n<h3>「公鸡」普契涅拉</h3>\n<p data-pid=\"C3ARtqdQ\">接下来登场的是位列执行官第五席的「公鸡」普契涅拉。从尖耳长鼻的特征来看，这位不是纯种人类而是精灵种（应该是矮精灵，也就是拉布列康）。「公鸡」不仅是愚人众执行官，也是管理至冬城的市长（从这点来看，身居高位的至冬女皇只操纵大局，似乎并不直接统治人民，这倒符合女皇「再也不会去爱人」的设定）。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-d08e2bf2b8c5d0b5c426f37c3a8e556b_720w.jpg?source=b1748391?rss\" data-caption=\"虽然「公子」将「公鸡」评价为一位温厚的老者，说他对自己视同己出，在「公子」离开至冬的这段时间里也非常照顾他的弟弟妹妹，但这一切可能都是假象。「公鸡」的性格可能是极度伪善的，这点从他言谈中流露出的资本家做派以及抛弃层岩巨渊愚人众士兵的行径上就可见一斑\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-d08e2bf2b8c5d0b5c426f37c3a8e556b\" data-watermark-src=\"v2-4e18e690c4b1a3a5cc4b05ca1321c5bf\" data-private-watermark-src=\"v2-e38bd47add0a053c5808c27f0d7919ca\"></p>\n<h3>「富人」潘塔罗涅</h3>\n<p data-pid=\"vu9o-SBY\">对于「女士」之死，「公鸡」市长发表了「值得足足半日的停工缅怀」的评价，可以说是非常资本家的发言了。这番言论很快就受到了执行官中另一位资本家的讥讽，位列第九席的「富人」潘塔罗涅如此回敬：「都说北国银行周转的是血泪与哀嚎，市长您的价值观比我这银行家还要扭曲啊」。</p>\n<p><img src=\"https://picx.zhimg.com/v2-c8a27f3089b7bf5aca9a2a6ab16b8aa7_720w.jpg?source=b1748391?rss\" data-caption=\"「都说北国银行周转的是血泪与哀嚎，市长您的价值观比我这银行家还要扭曲啊」\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-c8a27f3089b7bf5aca9a2a6ab16b8aa7\" data-watermark-src=\"v2-349a3307fa884f036ffcca433ba0e734\" data-private-watermark-src=\"v2-a6d00cf2cf50c65ff95409414d83aa3c\"></p>\n<p data-pid=\"9tq-VIip\">这里虽然是潘塔罗涅第一次以真实面貌出现在我们眼前，但他却称得上是我们的「老熟人」了。游戏中已经有很多剧情文本提及到了这位以金钱作为武器的执行官，他因曾经极度贫困，对金钱产生了扭曲的价值观与病态的执着，又因未能获得神的青睐取得神之眼，愤然于本应属于世俗的金钱都是神所掌管的权能（因提瓦特的流通货币摩拉是岩神摩拉克斯的神力造物），故而燃起了对抗神明秩序的意志。</p>\n<blockquote data-pid=\"Fx1hg9Ky\">在这些金币发源地的人们无比重视「契约」一事。<br>以金钱的名义，我会遵守我们之间的「契约」——<br>用尽一切手段，让我等成为流通世界的钱的心脏。<br>然后在必要的时刻，让心脏能以我等的意志停摆。</blockquote>\n<p data-pid=\"_sHUQNCm\">潘塔罗涅主管至冬经济，是北国银行的缔造者，他用不择手段操纵着全大陆的经济命脉，让金钱不断流入至冬，并以金融战手段颠覆他国（他在璃月开设北国银行分行，目的就是渗透作为提瓦特金融中心的璃月）。不仅如此，他甚至还妄图染指货币的发行权，通过垄断货币来一劳永逸地收割提瓦特诸国。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-5a72683e501beb18a7182b9cd2c6e504_720w.jpg?source=b1748391?rss\" data-caption=\"「眯眯眼都是怪物」定律会在潘塔罗涅身上得到印证吗？\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-5a72683e501beb18a7182b9cd2c6e504\" data-watermark-src=\"v2-058e9ff171db266e9e5a998e6deaf0f4\" data-private-watermark-src=\"v2-d03a00de4a36f6afd57dc0c0293a05fe\"></p>\n<p data-pid=\"po1O8Lsn\">潘塔罗涅是一位极度膨胀的野心家，在他眼中，掌握着财富与货币发行的岩神便是其一生之敌，后续我们也许可以期待一下与他相关的精彩经济战剧情。</p>\n<h3>「仆人」阿蕾奇诺</h3>\n<p data-pid=\"Mmy5aMFw\">对于「公鸡」与「富人」两位腹黑之人间的相互嘲讽，执行官「仆人」阿蕾奇诺展开了她的批评。她认为「公鸡」与「富人」只是找借口龟缩在至冬的富商政要，远逊于为了贯彻女皇的意志而在异国他乡不幸陨落的罗莎琳，他们应该为自己的懦弱感到羞耻并立刻闭嘴。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-6efae57cd7210a230844d24d81a658a9_720w.jpg?source=b1748391?rss\" data-caption=\"「不然孩子们会哭的」\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-6efae57cd7210a230844d24d81a658a9\" data-watermark-src=\"v2-8ff0d3e9babbb03a2c1c0da80796d8c4\" data-private-watermark-src=\"v2-2fec5331a40d3701273fb1349de47b1c\"></p>\n<p data-pid=\"MNAgbHNd\">虽说嘴上大谈「同理心」，言谈中也似乎是在表达对牺牲同僚的高度认可，还面露悲痛地表示「孩子们会哭泣」，但这位看似充满「人情味」的女性绝非善茬。实际上，「仆人」在至冬经营着一家福利院，表面上是在收养战争孤儿，实际却是将他们培养成为国家机器效忠的死士（可可利亚既视感），一大批愚人众兵士就是从她的福利院中走出来的（例如层岩巨渊底层的那位雷莹术士与她的弟弟）。</p>\n<p data-pid=\"wMdZur-y\">并且根据「公子」的评价，「仆人」加入愚人众就是为了获得更多争斗的机会，当眼中暗藏疯癫的她确信背叛能够获得收益时，甚至「会毫不留情地向女皇大人挥剑」。可以说，「仆人」是一位极度危险的人物，恐怕也将是旅行者未来必需面对的劲敌。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-ef138d832ce4864b4f447710dbe5a9ec_720w.jpg?source=b1748391?rss\" data-caption=\"「仆人」的御姐形象估计戳中了不少人，有种黑化版优菈的感觉，红色交叉十字瞳孔则暗含着一股狂气\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-ef138d832ce4864b4f447710dbe5a9ec\" data-watermark-src=\"v2-f2846cd0a7833a83fbff74210388ac5a\" data-private-watermark-src=\"v2-7b21917628fba39f723da369572c60f9\"></p>\n<h3>「公子」达达利亚</h3>\n<p data-pid=\"iWT9AkBb\">下一位发言的执行官「公子」达达利亚可算是大家的老熟人了，想必无需太多言语进行介绍。连一向武痴的公子都忍不住站出来，无奈地表示：「这可不是适合争斗的场合吧？」，足见他的这群同僚间剑拔弩张的气氛了（当然公子也许只是想接个话茬凸出些存在感……）。</p>\n<p><img src=\"https://pica.zhimg.com/v2-8eb4530f63c5435fc5746212ccc02838_720w.jpg?source=b1748391?rss\" data-caption=\"恭喜公子，在三别冬都后终于重返家乡了！\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-8eb4530f63c5435fc5746212ccc02838\" data-watermark-src=\"v2-e56378cb72e6f70643897778061db04d\" data-private-watermark-src=\"v2-0ec8e8546f4a23f9f1fd83274c1e0032\"></p>\n<h3>「木偶」桑多涅</h3>\n<p data-pid=\"FDPm1twL\">接下来登场的执行官外观上就十分引人注目 —— 巨大机器人与端坐在其手上的哥特少女。有关执行官「木偶」桑多涅的信息目前还极为稀少（早先仅在「百无禁忌」PV 中有过提及），但不难猜测她专精的应该是制造傀儡一类的机械技术，再结合背景设定（枫丹是个擅长制造机械、工程技术发达的国度）以及机器傀儡的造型特点（礼帽与领巾），可以进一步推测「木偶」的故乡可能是枫丹。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-bde049b724eea555348a3c8408aca68e_720w.jpg?source=b1748391?rss\" data-caption=\"「机器加少女」的造型一下就让我想起《星穹铁道》中克拉拉与史瓦罗的组合了。托起「木偶」的傀儡的身体零件具有明显的遗迹机器特征，游戏文本中也提到至冬具有拆解遗迹守卫进行研究的科技能力，再加上有「丑角」这样的坎瑞亚幸存者指导，因此至冬很可能部分继承了坎瑞亚的技术\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-bde049b724eea555348a3c8408aca68e\" data-watermark-src=\"v2-c789ce2911e8171a164c8411a8392965\" data-private-watermark-src=\"v2-070cb0e6d5dacf2457424ab86d5604a5\"></p>\n<p data-pid=\"td2GxsLk\">「公子」对「木偶」的评价中提到，她非常痴迷于自己的研究，待人冷淡，性格似乎不太好。这点在短片中也有体现：面对同僚们的争执，「木偶」只是冷冷说了一句「荒谬可笑」。</p>\n<p data-pid=\"QxZ1t7DI\">值得一提的是，提瓦特世界中存在极其先进的人偶制造技术，造物甚至能够做到与真人近乎无异，最典型的例子便是冒险家协会中负责接待的凯瑟琳小姐。考虑到冒险家协会的总部就在至冬，猜测届时也会有相关剧情进行展开，为我们揭晓凯瑟琳诞生的秘密，并且大概率会与「木偶」有关。</p>\n<h3>「队长」卡皮塔诺</h3>\n<p data-pid=\"k5edgVVJ\">站在「木偶」一旁的便是「队长」卡皮塔诺了。相比其他忙于在葬礼上勾心斗角或是表现得十分散漫的执行官，「队长」给人的感觉就要正派得多。他评价道：尽管「女士」的举止不甚光明，有失荣耀，但同僚的牺牲依然令人感到痛心与惋惜，愚人众绝不会不会停滞不前，一定会继续前进。算是第一位不打官腔、真心悼念同僚的执行官。</p>\n<p data-pid=\"NLLb41lK\">实际上，因为恪守原则、治军严明且体恤下属，「队长」在愚人众军中风评极佳，颇受人尊敬敬仰，西风大教堂的愚人众使节维克多就曾表达过想跳槽追随「队长」的愿望。以吐槽同僚居多的「公子」也给予了「队长」非常高的正面评价，称呼其为「好同志」，并赞美了他在战场上的强悍表现，希望能得到他的注视。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-37719fdb1175ff33f0f38ceff7befeee_720w.jpg?source=b1748391?rss\" data-caption=\"「队长」的面罩很黑完全看不清脸面，猜测可能是个伏笔。也许队长的种族不是纯人类，而是面目凶狠的兽人，甚至是黑蛇骑士一样被诅咒的存在，所以才要进行遮挡？\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-37719fdb1175ff33f0f38ceff7befeee\" data-watermark-src=\"v2-277eb64656eab058f01a2b81aab2ac3e\" data-private-watermark-src=\"v2-b527c81f8f198ae5d4f6c614242481d8\"></p>\n<p data-pid=\"zAaFd8VQ\">应该说，「队长」这个角色很大程度上是想往敌营侧中的「铮铮铁汉」与「义士」的方向去塑造的，文艺作品中这类人物通常会给他添上点不知变通的性格弱点，估计最后会和旅行者不打不相识，结下惺惺相惜的战士友谊吧。</p>\n<h3>「博士」多托雷</h3>\n<p data-pid=\"lSFHACqz\">简单缅怀完「女士」，「队长」开始询问起执行官中叛逃失踪的那一位 ——「斯卡拉姆其」（「Scaramouche」的音译，即「散兵」）的情况，而询问的对象便是执行官「博士」多托雷。虽然游戏已实装剧情中提及很少，但相信看过原神漫画的朋友一定对「博士」这位重量级角色印象深刻，他可以说是目前游戏所有已知角色中坏得最彻底的一位。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-1ce18567be652113ad965c61797330ec_720w.jpg?source=b1748391?rss\" data-caption=\"有一说一，漫画中「博士」形象给人的印象就是举止浮夸又神经质的「疯狂科学家」，颇令人厌恶；但这次短片中登场的「博士」却透露出一股沉稳感，阴沉中带有一种坏坏的魅力，还……蛮帅的。果然是人靠衣装马靠鞍，声音同样也在很大程度上决定了印象啊\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-1ce18567be652113ad965c61797330ec\" data-watermark-src=\"v2-ab2bfd4606818b1b780fdbbeca797e32\" data-private-watermark-src=\"v2-bb059d61b815fb083c8d1b492109edc9\"></p>\n<p data-pid=\"6gbfr_-c\">在「苍白之火 - 贤医之羽」的记述中，多托雷少年求学期间便因执着于人体改造这样的「邪魔外道」而被永远逐出教令院，直到循着异端传闻而来的「丑角」在须弥沙漠中找到了他。面对这位对世人的迂腐无知感到失望与不屑的天才少年，「丑角」抛出了橄榄枝，从此「博士」便诞生了。</p>\n<blockquote data-pid=\"ccdJANml\">所谓的「人」，不过是足够复杂的机器。<br>如果将某个部位拆开，对某个地方进行修改。<br>那这台机器的性能，就能轻易得到大幅提升。<br>无论是否拥有神之眼，无论体质与武艺如何，<br>「优化过的人」都能展现超出常理的力量吧……</blockquote>\n<p data-pid=\"TLXgSZcf\">缺乏法律与道德的约束，又有至冬提供的充足资源，「博士」终于可以大展拳脚，毫无顾忌地开展研究工作，期间进行了大量惨无人道的人体实验，但取得成果也是异常丰硕的：</p>\n<p data-pid=\"eU4_E1e4\">可以让任何人自由驾驭元素力，足以与「神之眼」媲美的「邪眼」；将魔神残渣植入人体获取力量的实验（即将在须弥登场的角色柯莱曾经就因这种实验历经苦难，具体剧情可参见原神漫画）；如今横扫大陆的愚人众兵团，入伍的士兵们也多接受了「博士」人体改造技术的「优化」。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-6dfe86726f96910e4afe94b52314e5ca_720w.jpg?source=b1748391?rss\" data-caption=\"典型如雷萤术士后背植入的生物回路，使其作为普通人也可引导元素力\" data-size=\"small\" data-rawwidth=\"620\" data-rawheight=\"768\" data-watermark=\"original\" data-original-src=\"v2-6dfe86726f96910e4afe94b52314e5ca\" data-watermark-src=\"v2-297c9c42555a8d688ffc8285d9b4f379\" data-private-watermark-src=\"v2-54d8c245c715f8bdaeccc690187f6268\"></p>\n<blockquote data-pid=\"VMXenj0Q\">仅仅是「优化过的人」吗 ——<br>如果贵国能够提供足够的物资、应允足够的时间。<br>就连你们所谓的「神」，我也能制造出来。如何？</blockquote>\n<p data-pid=\"B2cR5G38\">回到「队长」的提问上来，「博士」给出了这样的答复：</p>\n<blockquote data-pid=\"FkKzNpnK\">世间常理都觉得「神之灵知」是理性无法理解的神圣知识，在征服「神之目光」以后，他会迈出新的一步。</blockquote>\n<p data-pid=\"MPLbgviz\">其中，所谓「神之灵知」即是指「神之心」，二者英文均为「Gnosis」，这是一个源于诺斯替主义（Gnosticism，也译为「灵知派」）的神秘学概念，代表一种神圣知识或是对人类神圣本质的洞察力。事实上，原神的基础世界观设定就确凿地参考了诺斯替主义（参见《PASH！》杂志的开发者访谈），在名词设定与剧情设计等方面存在千丝万缕的联系。</p>\n<p data-pid=\"31yfip66\">由于诺斯替主义相关的内容解释起来过于晦涩复杂（其实也是因为我也讲不好，orz），这里就不过度进行展开了，希望可以通过下面这段简要描述，来帮助大家建立对诺斯替宇宙观的基本认识：</p>\n<blockquote data-pid=\"jteHtKvc\">我们世界其实是一个监狱。创造了七重天并居于其上的造物主（Demiurge，德缪哥/巨匠造物主/物质世界的控制者）是一个堕落的蠢货以及冒牌货，只不过是神的低级碎片 —— 真正的神隐藏在不可知的帷幕之后，不可能用尘世的方式去认知。人们回归本源即通往神的道路被无情的看守把持着，也就是掌权者（Archons，尘世七执政所对应的英文），星体化为的神灵（邪灵）；不是每个人都能获得拯救，只有少数「属灵的人」才能通过灵知（Gnosis，神之心对应的英文）得到启示。</blockquote>\n<p><img src=\"https://picx.zhimg.com/v2-ffe217eb1aa0bf2f81992e4692d710a3_720w.jpg?source=b1748391?rss\" data-caption=\"诺斯替主义的宇宙观：虚假的物质世界被包裹在「蛋壳」中，人类所见的只是「虚假的星天」，方有打破不可知的帷幕，才能获得「真知」\" data-size=\"normal\" data-rawwidth=\"2400\" data-rawheight=\"1871\" data-watermark=\"original\" data-original-src=\"v2-ffe217eb1aa0bf2f81992e4692d710a3\" data-watermark-src=\"v2-47defd0a47dac735254552ef9da171fa\" data-private-watermark-src=\"v2-c91f412afbf5d45f549bf97e4793d8d8\"></p>\n<p data-pid=\"y12ngPuO\">至于「博士」接下来提到的「神之目光」（Divine Gaze），虽然很容易联想到「神之眼」（Vision），但个人以为其应该别有含义，而《足迹》PV 中就有类似的表述，由戴因所说的那句「但在神明视线（God's Gaze）的死角下，仍有人想要做梦」可以推测，所谓「征服神之目光」应当就是指找寻可以避开天空岛监视的场所或方法。</p>\n<p data-pid=\"16BaRCmz\">当然也有理论认为，「神之眼」本身就意味着神明对于人类梦想的凝望与窥伺，是禁止人类做梦的虚假幻象，一如笼罩提瓦特的虚假星空，也是束缚人类的甜美毒药。若想自由掌控命运，就必须彻底切断自己与神之眼的联系，但这一点很难真正做到。</p>\n<p data-pid=\"NX38cnyX\">总的来看，「博士」所说的这段话其实还是非常的「谜语人」，提炼之下我们只能获知夺取雷神「神之心」的散兵已经「做好进入下一阶段的准备」。至于什么是「下一阶段」，是登神还是其他什么含义，只有等待后续剧情为我们揭晓，这个时刻相信距离我们也并不遥远了。</p>\n<h3>「丑角」皮耶罗</h3>\n<p data-pid=\"Aaxdim5W\">执行官已悉数登场，背景音乐也随之升上高潮，愚人众的缔造者与统括官 ——「丑角」皮耶罗此时自黑暗中缓缓步入礼堂，面朝全体执行官，为这冬夜里的葬礼与愚戏献上最后的致辞：</p>\n<blockquote data-pid=\"Vm0q7agF\">夜晚的愚戏该结束了，此刻你们没有观众。<br>所有崇高的牺牲，都将铭刻于坚冰之上，于国长存。<br>在高洁的冰之女皇麾下，我们将攫取众神的权柄！</blockquote>\n<p><img src=\"https://pic1.zhimg.com/v2-71a3d773cfa654a9111d158c31d4fb06_720w.jpg?source=b1748391?rss\" data-caption=\"虽然自称「丑角」，但老爷子的气场还是很足的\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-71a3d773cfa654a9111d158c31d4fb06\" data-watermark-src=\"v2-c6b9839a3f0c1ef3a49aaf9ac4cc2592\" data-private-watermark-src=\"v2-9a54999293e033e0feb9039bcd49f622\"></p>\n<p data-pid=\"1SIAz3q9\">有关「丑角」皮耶罗的情报，我已经在「棋盘之上」一节中做了一些描述。此刻这位神秘老者终于展现了他真正的面目，与我们的老朋友凯亚与戴因斯雷布一样，皮耶罗也拥有星形瞳孔，这是坎瑞亚人的象征，也是代表着无法逃离的痛苦与诅咒。</p>\n<p data-pid=\"pwuqmvYX\">我们不清楚皮耶罗当年究竟是如何逃脱由天理对坎瑞亚国民降下的因果律级的「诅咒」，也无从得知他是否与戴因斯雷布一样，在使用「那样东西」（主线「回响渊底的安魂曲」中提及的神秘道具）一边拖延「诅咒」的发作一边日夜承受着「诅咒」带来的痛苦。但我们知道，这位老者内心交织着悔恨与愤怒的火焰五百年来从未熄灭，他相信终有一天，他会实现那伟大的复仇。</p>\n<blockquote data-pid=\"scJ-x-kw\">\n<b>PS：</b>不正经吐槽时间。除去暂时摸鱼的凯亚，现存在世的三位坎瑞亚权臣：戴因斯雷布、莱茵多特与皮耶罗，几乎是在奉行三种完全不同的道路：<br><br>「没有人比我更懂诅咒」的戴因似乎已经放弃激烈的抗争，跻身鸽派，问他就是「到旅途尽头你一定会懂」，虽然未必是在摆烂，但看来是将一切命运都寄托在旅行者双子身上了；<br>曾引导坎瑞亚撕开深罪纱笼（深渊）结果招来神怒，而后铸成漆黑浪潮之重罪的莱茵多特则坚持在走学术路线，希望通过探寻世界的本质来发现扭转之法，目前依然是神秘度最高的人物；<br>一腔热血的皮耶罗大爷反倒是其中最刚的，心态已经变成「当我是小丑也无所谓，本人就是不服」，现在在理解他的冰神支持下，准备集合力量夺取众神权柄，直接正面朝天理举起叛旗。<br><br>不知道这三人的路线到最后会不会殊途同归，但我很好奇，坎瑞亚残留在世的人本就屈指可数，为什么这仨人不聚一聚交换交换情报，一起多商量商量呢？</blockquote>\n<h2>葬仪之末</h2>\n<p data-pid=\"LlaQ0EvE\">画面转到教堂外景，繁星与极光闪耀的冬夜天幕下，壮观的女士纪念堂与其中的灵柩被迅速冰封，一切归于永恒的安宁。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-f7b7ff65e88bc5261e29b5a99a4e281e_720w.jpg?source=b1748391?rss\" data-caption=\"未来地图更新到至冬后，我们应该能在游戏中实地参观这座「女士」陵墓\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-f7b7ff65e88bc5261e29b5a99a4e281e\" data-watermark-src=\"v2-e8d3c61c62a64f77496f7a5aef137960\" data-private-watermark-src=\"v2-009fbcdeff059e2cb854da74da2dcbf0\"></p>\n<p data-pid=\"GP5nCoNN\">相信至冬的文化原型为沙皇俄国这点已经众所周知，而此次短片中出现的这座至冬教堂也完全符合国家原型，为具有明显东欧风格的建筑，参考原型应是位于俄罗斯莫斯科的「基督救世主主教座堂」（Храм Христа Спасителя），其既是世界上最高的东正教教堂，也是最大的东正教教堂之一，现实中就是为感谢耶稣基督并纪念在战争中牺牲的人民而修建，游戏中更是成为「女士」一人的安眠之所，这是毫无疑问的国葬级待遇。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-b5d8f06171220ee50fcb5ec1cb163e45_720w.jpg?source=b1748391?rss\" data-caption=\"基督救世主主教座堂（Храм Христа Спасителя）\" data-size=\"normal\" data-rawwidth=\"1274\" data-rawheight=\"953\" data-watermark=\"original\" data-original-src=\"v2-b5d8f06171220ee50fcb5ec1cb163e45\" data-watermark-src=\"v2-d8a464248b6ebee5d5b37e6cc188d0c4\" data-private-watermark-src=\"v2-a7a90c5c680643802aff92467fcb88f1\"></p>\n<p data-pid=\"CJal_8Le\">安宁的冰宫内，「女士」的灵柩被反射着美丽光彩的重重坚冰包围，飞舞的红莲蛾最终轻轻停在灵柩之上，化为火星飘散而去。一如彼时向少女许下定会带她见证纯白无暇国度诞生的诺言（妄念），「丑角」再度郑重宣誓，不公的旧世界必将燃尽，定要让整个旧世界为她陪葬。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-5bc369537c5d876e8a9bff621ca5d7c6_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-5bc369537c5d876e8a9bff621ca5d7c6\" data-watermark-src=\"v2-205265e6d8e74e86bf927ef86fe39314\" data-private-watermark-src=\"v2-1a438492260536a04d950e664ee3f528\"></p>\n<p data-pid=\"Sv_usZZ-\">这里其实不难感受到，「丑角」是真的把同僚当成了一起并肩作战的战友，绝不仅是大家所以为的利用关系而已。当年遇见那位生命之火几乎枯竭的不甘少女时，「丑角」大抵也是发自内心地在同情，因为在少女身上，他看到了自己的当年被冷血的诸神与不公正的命运夺走一切幸福的身影。</p>\n<blockquote data-pid=\"X1OoC0fg\">一处细节：除了可能只是在惺惺作态的「仆人」外，「丑角」是众人中罕见地用「女士」的名字 ——「罗莎琳」来称呼她的人。作为亲自将「女士」带入组织的引路人，也是「女士」的绝对上级，尽管执行官中不喜欢这个性格狂妄又举止跋扈的女人的人不在少数，但「丑角」是真切地把她当作重要的伙伴在看待。</blockquote>\n<p><img src=\"https://pic4.zhimg.com/v2-489b650369fea9cc771ec423804ce03c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-489b650369fea9cc771ec423804ce03c\" data-watermark-src=\"v2-6c9399ac3ecd026f12a71938956ea763\" data-private-watermark-src=\"v2-acb9e1f098be9c0c550d95a2eab8d4a1\"></p>\n<h2>火焰与亵渎</h2>\n<p data-pid=\"gGO0pzF0\">「女士」的葬礼已经结束，但短片并未就此完结。接下来出现的一系列彩蛋画面信息量极大，为即将到来的须弥剧情做好了重要铺垫。</p>\n<p data-pid=\"D-tpWDwf\">首先是黑屏中响起的一段与「博士」相关的值得玩味的对话：</p>\n<blockquote data-pid=\"oMYxL8Bo\">博士，今天的你看起来很年轻啊。<br>你知道的，这句话对我来说可不算什么奉承。<br>那全盛时期的「切片」，此刻又在哪里呢？</blockquote>\n<p data-pid=\"mA075x2j\">这段对话其实隐晦地揭晓了「博士」身上的一项重大秘密，结合「公子」的评价我们可以得知：作为疯狂科学家，「博士」不仅用别人做实验，也拿自己做实验，他以年龄为界，将不同时期的自己做成假体（即「切片」），每一个都被指派了不同的任务。有复数个「自己」在同时活动对于常人而言也许不可想象也难以接受，但对「博士」这种狂人而言，这既是最高效完成目标的选择，也是确保自己不会被轻易消灭的万全保险。</p>\n<p><img src=\"https://pica.zhimg.com/v2-54f0e487fecfb00b63cea93891a975e6_720w.jpg?source=b1748391?rss\" data-caption=\"这也解释了为何漫画中与短片中「博士」的形象差距会这么大，因为两者是不同时期「博士」的「切片」\" data-size=\"normal\" data-rawwidth=\"1024\" data-rawheight=\"576\" data-watermark=\"original\" data-original-src=\"v2-54f0e487fecfb00b63cea93891a975e6\" data-watermark-src=\"v2-c3504c6d36f708b4aa4173dc31b398df\" data-private-watermark-src=\"v2-f8f9890fd04c0eb403c856335cb46049\"></p>\n<p data-pid=\"DQyUm_lF\">那么，对话中所提及的「博士全盛时期的切片」究竟去往了哪里呢？</p>\n<p data-pid=\"6nLjc7_6\">答案是「在一场关于亵渎的实验」中。暂时还无法确认伴随这个答案出现的画面中有如末日般景象的含义，燃烧的巨树既可能是直接预示「博士」在须弥进行的一次可怕破坏，他将设法点燃灵树，摧毁须弥人赖以生活的土地，以最激进的形式彰显对七神秩序的轻蔑与鄙夷，也可能代表着他更进一步的、更加亵渎的破坏欲望 —— 燃烧贯穿世界的巨树，摧毁维系世界的地脉，让旧世界在火焰中迎来净化与毁灭。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-8239d57d7d1fffb0894b8b960dbe7f6b_720w.jpg?source=b1748391?rss\" data-caption=\"「博士」：我要成为癫火之王！（错乱ing）\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-8239d57d7d1fffb0894b8b960dbe7f6b\" data-watermark-src=\"v2-cba5c329f368eb6788b14f4aa7fc9e08\" data-private-watermark-src=\"v2-3097dd931465a0e948d6d49b633c7ed9\"></p>\n<p data-pid=\"NJiG3_9A\">说起「燃烧的巨树」，相信很多朋友会联想到北欧神话中的著名传说「诸神的黄昏」（Ragnarök）。</p>\n<blockquote data-pid=\"CbNOzDsn\">传说在那末日神战的终末，发狂的火焰巨人「苏尔特尔」（Surtr）将把手中的炎之魔剑「莱瓦汀」（Laevatain）投向天空，在红莲般的熊熊烈焰之中，人类世界「中庭/米德加尔德」（Midgard）与其他八个世界化作一片火海，烈火柱贯穿宇宙，浓烟卷没山顶，支撑宇宙的「世界树/尤克特拉希尔」（Yggdrasill）也被火焰吞没而崩倒。整个世界轰然毁灭，一切重归混沌。<br><br>但是，世界并未就此终结，一切仍会重生。在已毁灭的宇宙极南端，有一片未有人至的纯净蓝天，末日之劫过后，残存的神来到这里，从他们脚下的大海涌出新的土地。这片经过海水净化的土地陆续长出比以前更绿、更茂盛的植物，大地渐渐恢复了生机。两位人类也幸运地从中浩劫幸存，成为人类新的始祖，与残存的神一起加入到重建新世界的工作中。</blockquote>\n<p data-pid=\"UYEKo-F2\">原神所参考的诺斯替主义世界观中也存在类似的「毁灭，然后迎接新生」思想，故而在描写提瓦特创世历史的书籍《日月前事》中出现了「世界如果要被创造，蛋壳必须被打破」的描述，一如黑塞在其著作《德米安》（Demian）中写下的那句名言「鸟要挣脱出壳，蛋就是世界。人要诞于世上，就得摧毁这个世界」（原文：Der Vogel kämpft sich aus dem Ei. Das Ei ist die Welt. Wer geboren werden will, muß eine Welt zerstören.）</p>\n<p><img src=\"https://pic1.zhimg.com/v2-fc10163fe9846b1b0c9ab6cb2726387e_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-fc10163fe9846b1b0c9ab6cb2726387e\" data-watermark-src=\"v2-61e759ebe37bc475ca0be26a7150a5f6\" data-private-watermark-src=\"v2-967f0e815b91347d53db4f0c26689432\"></p>\n<p data-pid=\"yImpxfdg\">轰轰烈烈地将腐朽的旧秩序推入火焰燃烧殆尽，然后在旧世界的灰烬上缔造纯白无暇的崭新世界，这个结局正是冰之女皇、「丑角」与愚人众追求的终极理想。</p>\n<blockquote data-pid=\"uDtLysII\">须知一切的尽毁将是全新秩序的肇始。<br>在坏灭的终点迎来的将是无垢的黎明。</blockquote>\n<p data-pid=\"ocXwBI8x\">但是，摧毁旧世界所带来的创伤，真的能轻易被新世界的创造抚平吗？又是否存在让世界不再陷入火海的方法呢？这份答案，将由旅行者双子给出，因为他们早已肩负命运赠予的预言：</p>\n<blockquote data-pid=\"Vzan19K0\">维系者正在死去，创造者尚未到来。<br>但世界不会再度灼烧，因为你，将登上神之座。</blockquote>\n<p data-pid=\"Wnu34cOv\">当然，火光之事尚未发生，一切终归还只是一场噩梦。名为「柯莱」的少女从须弥一间树屋中猛然惊醒，她无法理解刚才小憩时梦中所见的景象，也不愿相信这番景象会在家乡出现。此时比起疑惑怪梦，门外的师傅的呼唤还是更要紧一些，少女起身准备离去，她估计不会想到，很快，一位远道而来的金发旅人就将把她卷入到一场关乎须弥命运的冒险中。</p>\n<p><img src=\"https://pic2.zhimg.com/v2-d9c9d2923f9d5122beecba7058e6d815_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-d9c9d2923f9d5122beecba7058e6d815\" data-watermark-src=\"v2-8ff3d39216a43b83322767b84ab4e328\" data-private-watermark-src=\"v2-dc78b2f2ce8e5ee24d81da9db101f40a\"></p>\n<blockquote data-pid=\"tcmYCYfP\">\n<b>PS：</b>这里非常推荐大家去阅读一下原神官方前传漫画，篇幅不算太长，很快就能看完，通过漫画你可以了解到下面这些内容：柯莱的身世与过去悲惨的遭遇，安柏如何拯救柯莱并与她结下深厚友谊，博士和其爪牙卑鄙恶劣行径的冰山一角，凯亚对付愚人众的计策与出乎意料的手段，迪卢克为什么会退出西风骑士团以及晨曦酒庄中那只奇怪花瓶的来历。<br><br>看到漫画中的小可怜虫柯莱如今已经成长为亭亭玉立、受人信赖的少女其实挺让人感到高兴的。柯莱的形象会有如此大的转变，人长大会打扮了自然是一方面原因，不过更重要的还是经历磨难、接受帮助、战胜软弱后所锤炼而出的坚强之心对人的精气神产生的影响，也不禁让人感叹友谊力量的可贵。</blockquote>\n<p><img src=\"https://pic3.zhimg.com/v2-0e6aadabd123e628ec9d6b8852c857f0_720w.jpg?source=b1748391?rss\" data-caption=\"柯莱神之眼上悬挂的饰物非常像安柏的发带\" data-size=\"normal\" data-rawwidth=\"1920\" data-rawheight=\"1080\" data-watermark=\"original\" data-original-src=\"v2-0e6aadabd123e628ec9d6b8852c857f0\" data-watermark-src=\"v2-99a6451afa63607294697cba9e4c6427\" data-private-watermark-src=\"v2-b613e1c6f81976fb6b7634a979f7aeac\"></p>\n<hr>\n<h2>几句结语</h2>\n<p data-pid=\"SyeKbkbH\">到这里本文差不多也该结束了，讲实话，直到现在我都为官方突然扔出这个王炸幕间 PV 感到震惊，毕竟这可相当于一口气将预告进度快进到 7.0 版本以后了。</p>\n<p data-pid=\"4BEow7UC\">其实光从标题中带有的前缀「原神 · 提瓦特篇」就不难理解这部 PV 的重磅程度，毕竟上次冠以此前缀的 PV 可就是那部起总预告篇作用的《足迹》了。《足迹》让我们纵览七国与主线章节顺序，这次《冬夜愚戏》则一次性揭晓了全部愚人众执行官的信息，代表「舞台」的七国加上制造「矛盾」的愚人众，两种故事要素的互补，让原神整体的故事轮廓变得愈发清晰起来。相信在未来很长一段时期内，《冬夜愚戏》都将是各位原学家常需翻看和引用的资料了。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-7375a3556a55538320d88dc54d231f72_720w.jpg?source=b1748391?rss\" data-caption=\"取材自「意大利即兴喜剧与威尼斯面具」的十一位愚人众执行官，如今已全部揭晓\" data-size=\"normal\" data-rawwidth=\"1464\" data-rawheight=\"3180\" data-watermark=\"original\" data-original-src=\"v2-7375a3556a55538320d88dc54d231f72\" data-watermark-src=\"v2-b8a8bccd5f33774e12c12b7553430f40\" data-private-watermark-src=\"v2-a3a3cfd821b5c23c4682ee5da9f7b8fa\"></p>\n<p data-pid=\"K6UV2lDH\">数据方面，《冬夜愚戏》也的确收获到了匹配其重磅程度的成绩。截至 PV 发布到现在不过一天时间，《冬夜愚戏》便已毫无悬念地冲上了 B 站热榜第一、获得 800W+ 次的播放；油管上同样顺利冲上热榜第三，英版加日版总播放量也已达 700W，点赞总数则高达 77W。可以预见这些数字后续还会继续提升，千万级播放也只是时间问题。更别提 PV 在推特等社区中热火朝天的讨论了。</p>\n<p data-pid=\"Axmx4SUK\">我们在提瓦特的旅途已经过半，之前就猜测须弥作为旅行者旅途的中点很可能会成为主线剧情的重要转折点，如今《冬夜愚戏》适逢这个时机发布，无疑也是印证了这个想法。当然各位也无需急躁，先好好享受 2.8 版本的海岛假期，然后收拾好行装，准备正式开启我们的雨林与沙漠之行吧。</p>\n<p></p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/ai-luo-38?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">呆罗</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/542662634/answer/2570371038?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">449 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/542666835?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何评价《原神·提瓦特篇》幕间PV-「冬夜愚戏」？有哪些新信息？</a><br><a href=\"http://www.zhihu.com/question/542729891?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何解读《原神》提瓦特篇幕间 PV「冬夜愚戏」中丑角的棋局？</a><br>\n","link":"http://www.zhihu.com/question/542662634/answer/2570371038?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"如何度过一个充实有料的夏天？","date":"2022-07-11 10:24:50","description":"\n<p data-pid=\"qCp_MHRT\">炎炎夏日如何安排？知乎想陪你一起过！<br><br>今年的夏天，除了宅家吹空调、吃西瓜，怎么才能过得「有趣有料」？7 月 11 日起，知乎将为大家送出一场为期两月的暑期休闲盛宴，快来查收这份「有料」的夏日指南吧。<br><br>活动期间，知乎将上线三档自制节目和多个领域活动，聚焦当下青年群体在成长过程中的关注点进行全方位的内容放送，为今年的夏天增添一份料。上知乎，搜「过夏天」，或戳 链接进入主会场，一起烦恼勿扰，快乐充电，收获更好的自己！<br></p>\n<a href=\"https://www.zhihu.com/xen/market/ecom-page/1528851887721418752\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic2.zhimg.com/v2-632d1c5de75ce9b54b3afb54be93682f_qhd.jpg?source=b1748391\" data-image-width=\"750\" data-image-height=\"400\" class=\"internal\">2022 过夏天</a><p><br></p>\n<h2>多领域活动来袭 <br>带你过「有料」夏天<br>\n</h2>\n<p data-pid=\"nhnph83X\">如果你是电竞达人、热爱电子竞技，想感受这个夏天不一样的热血辣评，那一定要来知乎边聊边看。 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/0d97af543e406fb42d089c544964e6b7\" data-hash=\"0d97af543e406fb42d089c544964e6b7\" data-hovercard=\"p$b$0d97af543e406fb42d089c544964e6b7\">@知乎电竞</a>  将带你开启一场属于游戏者们的狂欢！</p>\n<p data-pid=\"AJvKY8em\">如果你喜欢看动画，那 7 月正是夏季新番登场的时候了。对这一季的动画，你有哪些期待？动画又会有什么惊喜？ <a class=\"member_mention\" href=\"http://www.zhihu.com/people/8ffae4888922f9b3c55120a189def658\" data-hash=\"8ffae4888922f9b3c55120a189def658\" data-hovercard=\"p$b$8ffae4888922f9b3c55120a189def658\">@知乎动画</a>  带你开始追番修仙之旅，看看谁是本季霸权。<br><br>如果你喜欢看电影，那一定要来知乎看「影视十级学者们」的好片推荐、热剧点评 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/686ea820389dfee3a19b36964cf9212e\" data-hash=\"686ea820389dfee3a19b36964cf9212e\" data-hovercard=\"p$b$686ea820389dfee3a19b36964cf9212e\">@知乎电影</a>  将与你一起看今年夏天最值得入坑的新片佳作，好剧热综。<br><br>如果你正在处于怦然心动的恋爱中，想学习一些约会攻略，想记录下恋爱经历的那些点点滴滴，那么就来和 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/f10b78873aa69d9bccc0c5ef9ef2d904\" data-hash=\"f10b78873aa69d9bccc0c5ef9ef2d904\" data-hovercard=\"p$b$f10b78873aa69d9bccc0c5ef9ef2d904\">@知乎情感君</a>  一起过个怦然心动的夏天吧！<br><br>如果你热爱时尚，想在这个夏天变美变潮，从新手小白到行家大神，来一次全新的蜕变。这个夏天， <a class=\"member_mention\" href=\"http://www.zhihu.com/people/155b1d06c7855de75422b7e66c50a79b\" data-hash=\"155b1d06c7855de75422b7e66c50a79b\" data-hovercard=\"p$b$155b1d06c7855de75422b7e66c50a79b\">@知乎时尚</a> <a class=\"member_mention\" href=\"http://www.zhihu.com/people/62541ea1e6fe9d5ffabec334a9bc0841\" data-hash=\"62541ea1e6fe9d5ffabec334a9bc0841\" data-hovercard=\"p$b$62541ea1e6fe9d5ffabec334a9bc0841\">@知乎美妆</a>  邀你领取限时任务，争做一名合格的时髦尖子生！<br><br>如果你喜欢旅行，想趁着大好时光出去走走， <a class=\"member_mention\" href=\"http://www.zhihu.com/people/614f573dea8647f30ed0bcfc03866e3a\" data-hash=\"614f573dea8647f30ed0bcfc03866e3a\" data-hovercard=\"p$b$614f573dea8647f30ed0bcfc03866e3a\">@知乎旅行</a>  能带你一起领略全国各地最值得打卡的游玩胜地。<br><br>以上活动详情，皆可关注相关官方机构号 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/0d97af543e406fb42d089c544964e6b7\" data-hash=\"0d97af543e406fb42d089c544964e6b7\" data-hovercard=\"p$b$0d97af543e406fb42d089c544964e6b7\">@知乎电竞</a>  、 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/8ffae4888922f9b3c55120a189def658\" data-hash=\"8ffae4888922f9b3c55120a189def658\" data-hovercard=\"p$b$8ffae4888922f9b3c55120a189def658\">@知乎动画</a>  、 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/686ea820389dfee3a19b36964cf9212e\" data-hash=\"686ea820389dfee3a19b36964cf9212e\" data-hovercard=\"p$b$686ea820389dfee3a19b36964cf9212e\">@知乎电影</a>、 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/2d2fd0c88bed7d3d0aebaf116d26bbe2\" data-hash=\"2d2fd0c88bed7d3d0aebaf116d26bbe2\" data-hovercard=\"p$b$2d2fd0c88bed7d3d0aebaf116d26bbe2\">@知乎剧综</a>、 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/f10b78873aa69d9bccc0c5ef9ef2d904\" data-hash=\"f10b78873aa69d9bccc0c5ef9ef2d904\" data-hovercard=\"p$b$f10b78873aa69d9bccc0c5ef9ef2d904\">@知乎情感君</a>  、 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/614f573dea8647f30ed0bcfc03866e3a\" data-hash=\"614f573dea8647f30ed0bcfc03866e3a\" data-hovercard=\"p$b$614f573dea8647f30ed0bcfc03866e3a\">@知乎旅行</a>  、 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/155b1d06c7855de75422b7e66c50a79b\" data-hash=\"155b1d06c7855de75422b7e66c50a79b\" data-hovercard=\"p$b$155b1d06c7855de75422b7e66c50a79b\">@知乎时尚</a>  、 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/62541ea1e6fe9d5ffabec334a9bc0841\" data-hash=\"62541ea1e6fe9d5ffabec334a9bc0841\" data-hovercard=\"p$b$62541ea1e6fe9d5ffabec334a9bc0841\">@知乎美妆</a>  查看 ，期待你的参与。</p>\n<p><br></p>\n<h2>\n<b>三档「有料」自制节目 知乎独播</b><br><b>陪你快乐充电</b>\n</h2>\n<p><br></p>\n<p data-pid=\"2irRizlG\">为了给大家带来全新的内容体验 ， <a class=\"member_mention\" href=\"http://www.zhihu.com/people/6660bd66328d917daf74c4a6c36cdcc7\" data-hash=\"6660bd66328d917daf74c4a6c36cdcc7\" data-hovercard=\"p$b$6660bd66328d917daf74c4a6c36cdcc7\">@知乎出品</a>  在今年夏天准备了三档自制节目，希望能为当代年轻人的困惑提供更多的视角，和这一代年轻人共同成长。<br><br>这三档节目都将于 8 月和大家见面，一起来抢先了解下吧！</p>\n<p data-pid=\"SfA4DepD\"><b>《我的高考笑忘书》</b><br>知乎首档高考纪实人物访谈节目</p>\n<p><img src=\"https://pic3.zhimg.com/v2-f68d2eac34a18c19c79c065850b6f3c4_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1081\" data-rawheight=\"1920\" data-watermark=\"original\" data-original-src=\"v2-f68d2eac34a18c19c79c065850b6f3c4\" data-watermark-src=\"v2-745846a211739542708c6ceb1345fcab\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"VxakPpUU\">12 个真实的高考过来人的故事，12 个变失为利、寻找自我、逆风成长的故事，如何面对人生的失利，这些高考过来人的经历或许能给你不一样的答案！</p>\n<p data-pid=\"1WqJ9nEk\"><b>《荒野会谈》</b><br>知乎首档荒野系青年谈话节目</p>\n<p><img src=\"https://pic1.zhimg.com/v2-8f1962101e67f0b59b27928e17ec0e44_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"964\" data-rawheight=\"1710\" data-watermark=\"original\" data-original-src=\"v2-8f1962101e67f0b59b27928e17ec0e44\" data-watermark-src=\"v2-800e96c95c8d155bb062f726b9d81b07\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"ca3t4exJ\">李雪琴、李松蔚、章若楠、席瑞、李浩源、刘博洋、蒋先贵带你远离城市回归荒野，在轻松聊天中探讨「 Z 世代年轻人到底如何认识世界」？<br><br><b>《我所向往的职业啊》</b><br>知乎首档职场青年纪实观察节目</p>\n<p><img src=\"https://pica.zhimg.com/v2-05df41409cd288e7d331c426bb25fe73_720w.png?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"8000\" data-rawheight=\"4501\" data-watermark=\"original\" data-original-src=\"v2-05df41409cd288e7d331c426bb25fe73\" data-watermark-src=\"v2-79678e0b516187a37f3b04008f610f34\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"-Koiz8uK\">你向往的职业是什么样的？我们寻找到各行业优秀青年，记录了他们的真实工作日常，并将拟邀杨天真、陈铭、夏鹏、崔璀等一起观察、讨论，分享职场有用知识。和我们一起跟随优秀职场青年，探寻向往职业的真相吧！<br><br>关注 <a class=\"member_mention\" href=\"http://www.zhihu.com/people/6660bd66328d917daf74c4a6c36cdcc7\" data-hash=\"6660bd66328d917daf74c4a6c36cdcc7\" data-hovercard=\"p$b$6660bd66328d917daf74c4a6c36cdcc7\">@知乎出品</a>  官方账号，观看节目更多花絮。这个 8 月，我们不见不散！<br><br>希望我们都度过一个「有料」的夏天～</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhi-hu-14-94-58?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">知乎</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/542718098/answer/2569400484?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">21 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/511311713?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">大学生在大学里如何过的充实？</a><br><a href=\"http://www.zhihu.com/question/515152913?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">如何充实的过每一天？</a><br>\n","link":"http://www.zhihu.com/question/542718098/answer/2569400484?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"比亚迪推出了 DM-i、吉利推出了雷神、长城有了柠檬 DHT，国产混动技术究竟是什么水平？","date":"2022-07-11 05:34:51","description":"\n<p data-pid=\"UpDeP3c7\">有兴趣可以先看一下我写的比亚迪DM-i技术详解：</p>\n<a href=\"https://www.zhihu.com/question/432584257/answer/1619236358\" data-draft-node=\"block\" data-draft-type=\"link-card\" data-image=\"https://pic1.zhimg.com/v2-6fe426789451890ff0c21a0410ff5e7d_qhd.jpg?source=b1748391\" data-image-width=\"1096\" data-image-height=\"704\" class=\"internal\">如何评价比亚迪秦PLUS搭载的DM-i混动技术，为何被称之为「超级混动」？</a><p data-pid=\"kB0mGCkw\"><b>下面从混动技术发展史的角度来缕一缕。</b>从混动诞生到七八年前这段时间，混动界的一句话是成立的：世界上只有两种混动，一种是丰田THS，另一种是其它。</p>\n<p data-pid=\"htU3GE6f\"><b>曾经的这句话，是对丰田THS技术水平和历史地位的夸赞！</b></p>\n<p data-pid=\"S0L0BIzp\">这句话的意思是说丰田THS成熟最早，构型从第1代到第4代就没怎么变过；相比之下<b>「其它」的内涵非常丰富，可以说是八仙过海，各显神通</b>。</p>\n<p data-pid=\"fRO9JNNI\">不少技术路线还淹没在历史长河中，不再被人记起。比如说，现在大家只记得本田iMMD，谁还记得更早的本田IMA？ 现在DM-i如雷贯耳，谁还会买DM1、DM2、DM3的产品呢？</p>\n<p><img src=\"https://pica.zhimg.com/v2-a57523ee27a6e71612325a4c08cc9fc3_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"1832\" data-rawheight=\"1118\" data-watermark=\"original\" data-original-src=\"v2-a57523ee27a6e71612325a4c08cc9fc3\" data-watermark-src=\"v2-b8209e957c27d105345e313bc452ae0d\" data-private-watermark-src=\"v2-cd85fcf5a574c803729b2113840ac2c0\"></p>\n<p data-pid=\"GF3eCEJK\">那个年代，混动的头部基本上就是日系三强在打架：<b> 丰田THS出手即巅峰，一直领先；本田一路波折，终于在iMMD上开花结果；日产剑走偏锋，走出了e-POWER的路子</b>。此时的自主品牌，还处于技术积累打磨阶段。</p>\n<p data-pid=\"Yp_lZkvp\">如今，情况大有变化，但混动领域依然可以用一句话来概括：<b>世界上还是只有两种混动，一种是THS，另一种串并联DHT（包括比亚迪DM–i，只是命名不同)。</b></p>\n<p data-pid=\"clzZOFF7\"><b>类似的一句话，放在今天不再是对丰田THS的夸赞了，只是表明技术路线的“特立独行” —— 后来者都不跟进丰田THS，而是走了DHT路线，这是为什么呢？</b></p>\n<p data-pid=\"BIIcZyZR\"><b>二者实力此消彼长，竞争格局已经发生了巨大变化了！</b></p>\n<p data-pid=\"wmJe6XMg\">THS阵营多了一个实力强大的老法师、擅长搞各种黑科技的通用汽车：<b>一个行星齿轮不过瘾，它要用两个；模式太少不过瘾，它要加4个离合器。</b></p>\n<p data-pid=\"-_ll5Rc7\"><b>这也可以说是一种技术狂热者的终极方案，但最终在产品上未形成气候，也就不为人所知了。</b></p>\n<p><img src=\"https://pic1.zhimg.com/v2-3903371a2be020b84cd21fc5342ad5b7_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"886\" data-rawheight=\"652\" data-watermark=\"original\" data-original-src=\"v2-3903371a2be020b84cd21fc5342ad5b7\" data-watermark-src=\"v2-4ed9060110b67199033ed3ad27ca9835\" data-private-watermark-src=\"v2-f58976ac4feb9bcd58f1d6c5d5c67176\"></p>\n<p data-pid=\"pxB972J2\"><b>串并联DHT分很多种，构成了自主品牌混动百花齐放的局面:</b></p>\n<p data-pid=\"fHEoXle_\">就比如说，<b>本田iMMD、比亚迪DM-i和岚图梦想家插混版，是发动机单档直驱的DHT</b>：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-97e57947a820f8859d8247c63778407f_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"744\" data-rawheight=\"465\" data-watermark=\"original\" data-original-src=\"v2-97e57947a820f8859d8247c63778407f\" data-watermark-src=\"v2-273f92a4644e6628302e03b12d5dc1bb\" data-private-watermark-src=\"v2-caccd6bc3bd10ca6607801516c4c7f9c\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"PksZuOS3\"><b>长城柠檬DHT、广汽传祺GMC，是发动机两档直驱的DHT</b>：</p>\n<p><img src=\"https://pic2.zhimg.com/v2-c7df2b8cd933b8f60058c20dea28d0f0_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"865\" data-rawheight=\"453\" data-watermark=\"original\" data-original-src=\"v2-c7df2b8cd933b8f60058c20dea28d0f0\" data-watermark-src=\"v2-b4cc12761956a94ba69a446207f5886e\" data-private-watermark-src=\"v2-3c7f84d6ba79f154e6ff6bfcb938deae\"></p>\n<p data-pid=\"xbtqWPWb\"><b>吉利雷神混动，则为三档直驱的DHT</b>。图没画。</p>\n<p data-pid=\"gTL-bJbE\"><b>至于理想ONE、岚图FREE、问界M5、日产e-POWER，可以理解为发动机零档直驱（不能直驱）的DHT</b>：</p>\n<p><img src=\"https://pic1.zhimg.com/v2-99b2832983fc1d432b4f2705c97ca2ef_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"961\" data-rawheight=\"597\" data-watermark=\"original\" data-original-src=\"v2-99b2832983fc1d432b4f2705c97ca2ef\" data-watermark-src=\"v2-11f828d3ffb2ec8ad73ab1d73a28b442\" data-private-watermark-src=\"v2-7219ae51a2be937f5b5ae23ec192e0e6\" data-qrcode-action=\"none\" data-tags=\"qrcode\"></p>\n<p data-pid=\"lu8-IuIJ\">可以看到，除了THS的技术路线之外，其它的混动技术路线走到最后，不约而同都来到了串并联的终点。那么，我们关心的问题其实只有三个了：</p>\n<ol>\n<li data-pid=\"X2t6Lxnv\">和THS相比，串并联有何优劣？</li>\n<li data-pid=\"QyJyrFIX\">单档、两档、三档的串并联相比，有何优劣？</li>\n<li data-pid=\"E1NmcwM2\">增程式作为“零档”串并联，有何优劣？</li>\n</ol>\n<h3>1. 和THS相比，串并联有何优劣</h3>\n<p data-pid=\"pGgpoDXV\">THS历史非常悠久，那时候电池、电机技术都很一般，而且也比较贵。<b>所以丰田THS是一种以发动机为核心的混动方案 —— 电池、电机都只是打杂的，就像Dota、LOL的5号位辅助一样，性能差一点、成本高一点也无所谓</b>。</p>\n<p data-pid=\"C_YeYKHd\">只要团队配置合理（混动构型精妙），作为一个整体就能赢。</p>\n<p><img src=\"https://pic4.zhimg.com/v2-59152fb96d18067d9260a128b9eb2fab_720w.gif?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"480\" data-rawheight=\"372\" data-watermark=\"original\" data-original-src=\"v2-59152fb96d18067d9260a128b9eb2fab\" data-watermark-src=\"\" data-private-watermark-src=\"\"></p>\n<p data-pid=\"V7JXuRsc\">打Dota的时候，像这种配合特别精妙的英雄组合，就怕被BAN。比如说光法与精灵的组合，选不到精灵，光法不就是个憨憨吗？<b> 丰田THS的优势在于精妙，劣势也在于精妙 —— 它很难单独强化某一方面的性能，也很难充分吸收行业发展的红利</b>。就比如说，丰田HEV车卖得很好，口碑不错；但丰田PHEV就感觉是一个政策产物，卖得不咋样。</p>\n<p data-pid=\"M8SuUkPr\"><b>廉颇老矣，尚能饭否？</b></p>\n<p data-pid=\"4cZy8e1-\"><b>串并联不一样，可以灵活配置</b>。就比如说，DM-i的纯电续航就有60公里、120公里、240公里多个版本 ——<b> 从前电池贵，纯电续航就短一些；现在电池便宜了，把电池怼上去也有消费者买单啊！</b>其实，本田iMMD也可以这么做，只是它没这么做。而丰田THS就不太好这么做。</p>\n<p data-pid=\"AKgEeDbv\">DM-i加一个P4电机成了DM-p，动力性能瞬间也上去了。其它串并联也可以这么做，丰田THS就不太好这么做。</p>\n<p data-pid=\"VsabhSca\">所以说，丰田THS从一开始就没什么问题， 现在作为HEV也没什么问题。只不过，时代变化太快了，电池价格便宜到就连增程式都能卖出去了，那丰田THS作为一种过于精妙而不好乱改的混动构型，优势缩小、劣势渐显，攻守之势异也。</p>\n<p data-pid=\"ff0u-NdH\">说起来，串并联和丰田THS相比，最大的优势就是配置灵活性，可以很快地利用汽车电动化带来的红利。你可能觉得，灵活性也配叫做技术优势？ <b>这话可不能这么说，</b><b>灵活性又叫环境适应性，优胜劣汰的自然选择中，活到最后的往往不是最强大的，而是最灵活的</b>。</p>\n<h2>2. 一档、二档、三档DHT分别有何优劣？</h2>\n<p data-pid=\"fTfwGLg_\">从1档变成2档、3档，优势是显而易见的：</p>\n<ul>\n<li data-pid=\"73btMBlN\">\n<b>动力直驱档</b>：速比较大，动力较强，在车速35-65公里/小时介入时，既提高经济性也提高动力性；更高车速下的加速工况下也可介入，以提高动力性。</li>\n<li data-pid=\"wHB430vb\">\n<b>经济直驱档</b>：速比较小，在65公里/小时以上时介入，可以提高经济性、降低发动机噪音。</li>\n</ul>\n<p data-pid=\"uWh5jjPl\">概括来说就是：<b>中低速时采用动力档直驱，中高速时采用经济档直驱，以提高经济性；无论中低速还是中高速，急加速时都采用动力档直驱，以提高动力性</b>。</p>\n<p><img src=\"https://pic3.zhimg.com/v2-32d59f5a5045377f9b901adb2a4225d2_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"692\" data-rawheight=\"519\" data-watermark=\"original\" data-original-src=\"v2-32d59f5a5045377f9b901adb2a4225d2\" data-watermark-src=\"v2-df748a3dd233ac3a45ce9ae0ab349cb7\" data-private-watermark-src=\"v2-c30660c09d6b5630373464af3ab4982f\"></p>\n<p data-pid=\"PtN5rLd1\">相比1档，2档、3档可以同时提高动力性与经济性，这要基于一个前提：<b> 换档没有代价</b>。</p>\n<p data-pid=\"so3hQAXP\">实际情况是，换档是有代价的：</p>\n<ul>\n<li data-pid=\"HJS7r4mV\">\n<b>成本上</b>：多个档，多一些机械结构，成本要高。</li>\n<li data-pid=\"5nfYF0vW\">\n<b>可靠性</b>：更复杂一些，出问题的可能性也更大。</li>\n<li data-pid=\"FwgCweKO\">\n<b>平顺性</b>：换档时如何做到驾驶员毫无感知，就像纯电车一样？ 这需要大量的技术经验</li>\n</ul>\n<p data-pid=\"6Fr2wP6w\">可以看到，<b>成本、可靠性、平顺性</b>都是需要技术积累的，需要犯错后才能改进的。所以，新势力不可能搞2档、3档，只能传统车企来搞。</p>\n<p data-pid=\"IOHhCtsp\">当然，具体搞得怎么样，还要看最终产品的体验。不能说2档、3档一定就好。</p>\n<h2>3. 增程式作为“零档”串并联，有何优劣？</h2>\n<p data-pid=\"_pd-qHOT\"><b>增程式作为发动机不直驱的混动形式，根本的优势是可以更加自由地设计发动机</b>：就比如日产e-POWER，它以放弃直连为代价，获得了发动机进一步的专用化、获得更高的热效率（<b>日产目标是实现50%的超高热效率，但站在旁观的角度，不知道这个目标能否实现，何时能实现</b>）。</p>\n<p><img src=\"https://pic1.zhimg.com/v2-aee8e92a44efcd51a8aed2b619dfea5c_720w.jpg?source=b1748391?rss\" data-caption=\"\" data-size=\"normal\" data-rawwidth=\"749\" data-rawheight=\"363\" data-watermark=\"original\" data-original-src=\"v2-aee8e92a44efcd51a8aed2b619dfea5c\" data-watermark-src=\"v2-c69ee796c9238506fe2893eeed0c5532\" data-private-watermark-src=\"v2-57c875ea19d3fa6aa8890daf4c3dd82b\"></p>\n<p data-pid=\"eHQtM4b0\">显然，新势力并不是因为这个原因才使用增程式的，它们主要是想规避增加发动机直驱档位带来的<b>成本、可靠性、平顺性</b>问题。</p>\n<p data-pid=\"Jzg3paFR\">这些问题，对新势力来说是问题，对传统车企来说也是问题。只不过，对二者来说，问题的难度不一样，所以就做出了不同的选择。</p>\n<br><br>\n来源：知乎 www.zhihu.com<br>\n    \n作者：<a href=\"http://www.zhihu.com/people/zhangkangkang?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=author\">张抗抗</a><br><br>\n【知乎日报】千万用户的选择，做朋友圈里的新鲜事分享大牛。\n        <a href=\"http://daily.zhihu.com/?utm_source=rssyanwenzi&amp;utm_campaign=tuijian&amp;utm_medium=rssnormal\" target=\"_blank\">点击下载</a><br><br>\n此问题还有 <a href=\"http://www.zhihu.com/question/531029649/answer/2554718172?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">51 个回答，查看全部。</a><br>\n                延伸阅读：<br><a href=\"http://www.zhihu.com/question/539819879?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">长城汽车称「柠檬混动 DHT 车型年底登陆巴西市场」，该车型会有哪些亮点？对此你期待吗？</a><br><a href=\"http://www.zhihu.com/question/540391559?utm_campaign=rss&amp;utm_medium=rss&amp;utm_source=rss&amp;utm_content=title\" target=\"_blank\">长城汽车柠檬混动 DHT 车型年底登陆巴西市场，你觉得该车型会不会畅销？</a><br>\n","link":"http://www.zhihu.com/question/531029649/answer/2554718172?utm_campaign=rss&utm_medium=rss&utm_source=rss&utm_content=title"},{"title":"优化博客的累计布局偏移（CLS）问题","date":"2022-06-07 17:24:00","description":"\n<p>距离上一篇文章发布已有四个月了，是时候写几篇文章给博客除草了。上一次我介绍了我如何迁移、重构了我的博客的架构，这次我想来谈谈我在重构中优化和打磨访客体验时解决的一个问题。我的博客优化之旅 图片 lazyload 的学问和在 Hexo 上的最佳实践 我的博客有多快？ 天下武功，唯快不破 —— 我是这样优化博客的 再快一点，再快一点 ......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/206311/26/14625/38940/629f7f81Eb11312de/b1e67f07b1cc9bc7.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/fix-blog-cls/\">https://blog.skk.moe/post/fix-blog-cls/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/fix-blog-cls/"},{"title":"使用 Next.js + Hexo 重构我的博客","date":"2022-03-17 16:24:00","description":"\n<p>在咕咕了一整年、只发布了三篇文章（其中两篇还是译文）之后，我决定还是稍微花一点时间好好折腾一下自己的博客，以 React 作为抓手，通过 Next.js 和 Hexo 深度共建，对标 Gatsby，打通静态 HTML 与用户交互之间的垂直领域屏障，实现多维矩阵闭环，为个人博客赋能（咳咳咳），然后水出 2022 年第一篇文章（逃）技术选型：Gatsby vs Next.js我使用 Hexo 驱动博客已经三年之久了，之前写过一个 开源的 Hexo 主题，后来还成为了 Hexo 的 Core Team Member、为 Hexo 贡献了不少代码。Hexo 是一个诞生于 2012 年的、由 Node.j......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/218492/18/14257/25439/6227858fE1517791d/63119f6e39dc9389.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/\">https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/use-nextjs-and-hexo-to-rebuild-my-blog/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Node.js","date":"2022-01-14 10:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h2>\n<ul>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li>\n<li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-nodejs\">安装 Node.js</a></li>\n</ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Node.js 官网 (<a href=\"https://node.js.org/\">https://node.js.org</a>)</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/image-20220114174925675.png\" alt=\"image-20220114174925675\"></p>\n<p>下载 Node.js 安装包（推荐下载 LTS 版本）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175645.png\" alt=\"image-20220114175645642\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175750.png\" alt=\"image-20220114175749822\"></p>\n<p>勾选同意协议，点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175835.png\" alt=\"image-20220114175835742\"></p>\n<p>修改文件安装位置，点击 <code>Next</code>。（也可以不用改）</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114175929.png\" alt=\"image-20220114175929226\"></p>\n<p>点击 <code>Next</code>。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180010.png\" alt=\"image-20220114180010036\"></p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180044.png\" alt=\"image-20220114180043895\"></p>\n<p>点击 <code>Install</code> 开始安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180108.png\" alt=\"image-20220114180107827\"></p>\n<p>等待安装完成。<img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180122.png\" alt=\"image-20220114180122728\"></p>\n<p>点击 <code>Finish</code> 完成安装。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180206.png\" alt=\"image-20220114180206024\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>打开 <code>Git Bash</code>.</p>\n<blockquote><p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。<br>或是在开始菜单中找到 Git Bash.</p></blockquote>\n<p>输入 <code>node -v</code> 和 <code>npm -v</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://unpkg.zhimg.com/ocoke-osg@0.0.14/rawimg/20220114180458.png\" alt=\"image-20220114180458685\"></p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-nodejs/"},{"title":"2022: 新年快乐！","date":"2021-12-31 16:00:00","description":"\n<p>转眼间，2021 年已经过去。这一年非常忙碌，以至于博客一周年的纪念来不及写，许多文章计划停留在了 To Do 里。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%8D%9A%E5%AE%A2\" class=\"headerlink\" title=\"博客\"></a>博客</h2>\n<p>由于 Cloudflare Web Analytics 是在 2021 年 4 月份启用的，再加上后来又将统计代码去除，所以关于访问量的信息不可用。</p>\n<p>截止至 2021 年 12 月 31 日，博客共发布 15 篇文章，其中 2021 年发布 11 篇文章，原创文章 10 篇。</p>\n<p>目前采用 <code>LeanCloud + Waline</code> 的评论方式，自 7 月份被刷评论后将评论权限改为登录（支持 <code>GitHub</code> 登录），还有部分评论在迁移中丢失，实在抱歉。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%BB%E9%A2%98\" class=\"headerlink\" title=\"主题\"></a>主题</h2>\n<p>博客自 2021 年 1 月 13 日将主题改为 <code>Miracle</code>，这是一款简洁、轻量的单栏 Hexo 主题。</p>\n<p><code>Miralce</code> 目前的版本是 <code>2.0.1</code>，全新的版本去除 jQuery，进一步提升性能。</p>\n<p>GitHub 仓库：<a href=\"https://github.com/hifun-team/hexo-theme-miracle\">https://github.com/hifun-team/hexo-theme-miracle</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%9B%B4%E5%A4%9A\" class=\"headerlink\" title=\"更多\"></a>更多</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">=&gt; ...</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2022/"},{"title":"无垠 2021 年度总结","date":"2021-12-31 08:36:10","description":"\n<p>真是忙碌的一年啊。转眼 2021 已经过去，2022 即将到来。又到了该总结这一年的时候了。</p>\n<h1>统计数据</h1>\n<p>年度总结的第一部分仍然是一些统计数据。以下数据截止 2021 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 29,073 (<span>+0.6%</span>)，年 PV 67,688 (<span>-11.61%</span>)，日均 UV 79.65，平均停留时间 3分34秒 (<span>-13.7%</span>)，平均跳出率 55% (<span>-9.8%</span>)。一年有效文章数 1 (<span>-80%</span>)，新增评论 109 条 (<span>-54.96%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg\" alt=\"\" width=\"515\" height=\"620\" class=\"aligncenter size-full wp-image-2537\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/blog-249x300.jpg 249w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>除了 UV 较去年提高 100 多之外，其他数据全部下滑。主要原因还是因为今年实在太过忙碌，只更新了一篇博客，评论区也没有怎么维护。不过目前已经有两篇新的文章在路上了，希望可以尽快写完吧。</p>\n<h2>个人主页</h2>\n<p>个人页总 UV 3,515 (<span>-18.12%</span>)，总 PV 3,929 (<span>-4.56%</span>)，日均 UV 9.63，平均停留时间 55秒 (<span>-12.7%</span>)。访问的主要来源是知乎和 GitHub。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg\" alt=\"\" width=\"515\" height=\"647\" class=\"aligncenter size-full wp-image-2538\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton.jpg 515w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/axton-239x300.jpg 239w\" sizes=\"(max-width: 515px) 100vw, 515px\"></a>\n<p>仍然是没有更新个人主页的一年，我也没有继续宣传这个页面，统计数据下滑大概是正常的。</p>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 4 次，新增 149 commits (<span>-54.57%</span>)，Star 数增加了 174，现有 788。</p>\n<p>终于，MDx 2.0 发布了。但是因为今年的过于忙碌，MDx 并没有得到足够的维护，版本发布周期也拉得比较长，很多 Bug 没能及时修复。希望明年可以把更多的时间花在维护 MDx 上。无论如何，还是感谢各位对于 MDx 的支持！</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>2021 大事记</h1>\n<p>说起来，2021 真的太多“第一次”了...</p>\n<ul>\n<li>一月：由于电脑电池鼓包，第一次用 iPad 外接屏幕远程桌面到服务器来考期末🌚太痛苦了</li>\n<li>一月：MDx 喜提 600 Stars</li>\n<li>三月：第一次测核酸（真的酸）</li>\n<li>三月：第一次坐上 A350！(B-309W）</li>\n<li>三月：第一次来到英国</li>\n<li>六月：第一次来到伦敦</li>\n<li>六月：第一次去猫咖撸猫🐱</li>\n<li>六月：第一次坐上 B777！(B-2025）</li>\n<li>七月：酒店隔离十四天🌚</li>\n<li>七月：MDx 喜提 700 Stars</li>\n<li>七月：第一次和猫一起住（时刻有猫撸真的爽😆）</li>\n<li>七月：入职<a href=\"https://75.team/\">奇舞团</a>实习</li>\n<li>八月：北京景点怎么这么多</li>\n<li>九月：北京景点怎么还有这么多</li>\n<li>九月：<a href=\"https://flyhigher.top/develop/2160.html\">谈谈 WebAuthn</a> 被 <a href=\"https://weibo.com/1893751011/KyipM3tOM\" rel=\"noopener noreferrer\">w3c中国微博转发</a><del>（虽然并没有人看）</del>\n</li>\n<li>九月：从奇舞团<del>跑路</del>\n</li>\n<li>九月：整了个 Stackoverflow 的复制粘贴键盘<del>，太好用了</del>\n</li>\n<li>十月：终于买了心心念念的 MSFS</li>\n<li>十一月：终于买了一台新相机</li>\n<li>十一月：第一次坐上 A380！(B-6140）</li>\n<li>十二月：第一次来到爱丁堡并和 <a href=\"https://diygod.me/\">@DIYgod</a> 面基</li>\n</ul>\n<section><div class=\"set-images-div\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg\" alt=\"和猫一起住的唯一问题就是手机很快会被猫片塞满\" width=\"730\" height=\"1500\" class=\"aligncenter size-full wp-image-2518\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats.jpg 730w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-146x300.jpg 146w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cats-498x1024.jpg 498w\" sizes=\"(max-width: 730px) 100vw, 730px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg\" alt=\"看到你在写前端，猫猫很担心你\" width=\"1004\" height=\"1500\" class=\"aligncenter size-full wp-image-2523\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat.jpg 1004w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-201x300.jpg 201w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-685x1024.jpg 685w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cat-768x1147.jpg 768w\" sizes=\"(max-width: 1004px) 100vw, 1004px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg\" alt=\"高效开发工具（确信\" width=\"1500\" height=\"1019\" class=\"aligncenter size-full wp-image-2519\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-300x204.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-1024x696.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/cv-768x522.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg\" alt=\"和 Ralph 在天坛\" width=\"947\" height=\"1500\" class=\"aligncenter size-full wp-image-2524\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt.jpg 947w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-189x300.jpg 189w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-646x1024.jpg 646w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/tt-768x1216.jpg 768w\" sizes=\"(max-width: 947px) 100vw, 947px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg\" alt=\"380!\" width=\"1500\" height=\"874\" class=\"aligncenter size-full wp-image-2517\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/380.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-300x175.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-1024x597.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/380-768x447.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a>\n</div>\n<div class=\"set-images-div2\">\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg\" alt=\"到处玩.jpg\" width=\"1500\" height=\"1080\" class=\"aligncenter size-full wp-image-2521\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2.jpg 1500w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-300x216.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-1024x737.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play2-768x553.jpg 768w\" sizes=\"(max-width: 1500px) 100vw, 1500px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg\" alt=\"还是到处玩.jpg\" width=\"977\" height=\"1500\" class=\"aligncenter size-full wp-image-2520\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/play.jpg 977w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-195x300.jpg 195w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-667x1024.jpg 667w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/play-768x1179.jpg 768w\" sizes=\"(max-width: 977px) 100vw, 977px\"></a><br><a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg\" alt=\"380 上的星空\" width=\"1002\" height=\"1500\" class=\"aligncenter size-full wp-image-2522\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars.jpg 1002w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-200x300.jpg 200w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-684x1024.jpg 684w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/stars-768x1150.jpg 768w\" sizes=\"(max-width: 1002px) 100vw, 1002px\"></a>\n</div>\n</section><p><span>点击图片查看描述</span></p>\n<p>对了，对于可爱的猫猫们，我整了一个 Telegram 贴纸包，你可以在这里获取：<a href=\"https://telegram.me/addstickers/huanAndDan\">https://telegram.me/addstickers/huanAndDan</a>。</p>\n<h1>跨年红包</h1>\n<p>今年的解题之旅，从下面这张图片开始：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/b.jpg\" alt=\"\" width=\"1510\" height=\"1250\" class=\"aligncenter size-full wp-image-2556\"></a>\n<p>不过，鉴于今年的题目较以往对于认真解题的人更难，我还准备了隐藏红包，在解题中收集线索即可发现隐藏红包。共有 20 个普通红包和 10 个隐藏红包。</p>\n<p>解题计划持续到东八区 2022.02.03 23:59:59 或红包被领完为止，之后我会发布题解。不过由于去年情况混乱，今年在解题过程中我一旦发现有不正常的现象就会立即停止活动。Anyway，新年快乐！祝玩得开心。</p>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报用到了 PS 和 Adobe 家的新玩具 Dimension。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg\" alt=\"\" width=\"707\" height=\"1000\" class=\"aligncenter size-full wp-image-2547\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1.jpg 1414w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-212x300.jpg 212w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-724x1024.jpg 724w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-768x1086.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/12/2022-in-post-1-1086x1536.jpg 1086w\" sizes=\"(max-width: 707px) 100vw, 707px\"></a>\n<p>那么祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2507.html"},{"title":"[译] 不，Web3 不是去中心化","date":"2021-12-14 14:01:00","description":"加密货币社区对元宇宙和 Web3 的狂热仍在继续，大量投资人和开发者前仆后继加入其中。但是，Web3 真的能实现支持者们的种种愿景吗？亦或是另一个镜中月、水中花？也许让历史照进现实，能给我们答案。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/123139/11/24965/54827/62215eedE5e3da14a/80c24408e97057dd.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/web3-is-not-decentralization/\">https://blog.skk.moe/post/web3-is-not-decentralization/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/web3-is-not-decentralization/"},{"title":"[译] 捍卫自由的互联网，对 Web3 说不","date":"2021-12-12 13:40:00","description":"作为一个充满泡沫和噱头的新概念，Web3 和元宇宙在区块链的社区中掀起了一波浪潮。鼓吹者坚信 Web3 就是互联网的未来、不惜砸下大把的金钱和精力、希望能在未来中捞一杯羹；而大部分人保持观望的态度。是时候来一点 Web3 的反对意见了。<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/87908/13/23797/13415/622032afE3a2f9e9f/95c01e98cd4a707a.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/\">https://blog.skk.moe/post/keep-web-free-say-no-to-web3/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/keep-web-free-say-no-to-web3/"},{"title":"2021 年 JavaScript Promise 性能对比","date":"2021-12-07 08:19:00","description":"\n<p>我们正生活在一个「Any application that can be written in JavaScript, will eventually be written in JavaScript」的时代。作为一门兼具动态性和简单性的语言，JavaScript 已经占领了客户端、服务端，甚至在机器学习中也占据一席之地；不可避免的，异步执行也逐渐成为这门语言不可缺少的一部分。TL; DR Bluebird 依然是速度最快、内存占用最少的 Promise 实现 Runtime 的 async / await 实现越来越快、顺序执行的性能已经超过 Native Promise，占用的内存也更少 对于平行并发执行的 Promise，Bluebird 的性能依然一骑绝尘。......</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/157404/28/28495/143414/622032b2Ef7b495fd/6a9bd02e79392c9d.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/promise-performance-benchmark/\">https://blog.skk.moe/post/promise-performance-benchmark/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/promise-performance-benchmark/"},{"title":"在 Windows 上快速安装 Hexo · 安装 Git","date":"2021-11-12 13:30:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p><strong>本文未经允许，禁止转载！</strong></p>\n<p><strong>视频教程正在制作，等待更新。</strong></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"文章目录\"></a>文章目录</h3>\n<ul><li><a href=\"https://blog.yfun.top/posts/hexo-blog/install-git\">安装 Git</a></li></ul>\n<blockquote><p>更多文章等待更新...</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%B8%8B%E8%BD%BD\" class=\"headerlink\" title=\"下载\"></a>下载</h2>\n<p>前往 Git 官网 (<a href=\"https://git-scm.com/\">https://git-scm.com</a>).</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112204849.png\"></p>\n<p>点击页面中的 <code>Download For Windows</code> 下载 Windows 版本。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211507.png\"></p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<p>双击运行安装文件。</p>\n<p>点击 <code>Next</code>，同意协议。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211528.png\"></p>\n<p>修改程序安装位置，点击 <code>Next</code>（直接装在 C 盘也不是不行）。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211604.png\"></p>\n<p>组件选项，可选桌面快捷键、右键菜单、LFS 支持、自动检查更新等。</p>\n<p>点击 <code>Next</code> 进入下一步。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211609.png\"></p>\n<p>开始菜单文件夹名，保持默认就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211613.png\"></p>\n<p>默认编辑器，保持 Vim 就可以，点击 <code>Next</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211616.png\"></p>\n<p>环境变量，选择第 2 个，点击 <code>Next</code>。</p>\n<blockquote><p>如果选择第 1 个，则只能在 Git Bash 中使用，可能会出现问题</p></blockquote>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211619.png\"></p>\n<p>剩下的都可以保持默认，一路 Next，然后点击 <code>Install</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211622.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211624.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211627.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211630.png\"><br><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/20211112211633.png\"></p>\n<p>等待安装完毕。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2>\n<p>在文件夹处右击，点击 <code>Git Bash Here</code> 进入 Git Bash。</p>\n<p>（或是在开始菜单中找到 Git Bash）</p>\n<p>输入 <code>git --version</code> 查看版本，正确输出版本信息即代表安装成功。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.11/rawimg/7ec315b7764cc.png\"></p>\n<p>大功告成！</p>\n","link":"https://blog.yfun.top/posts/hexo-blog/install-git/"},{"title":"前端时间国际化 101","date":"2021-10-14 15:58:23","description":"\n<blockquote>\n<p>时间只是幻觉。</p>\n<footer>—— 阿尔伯特·爱因斯坦</footer>\n</blockquote>\n<p>最近在开发一个需要完善国际化方案的前端项目，在处理时间国际化的时候遇到了一些问题。于是花了一些时间研究，有了这篇文章。不过由于网上关于 JavaScript 中 <code>Date</code> 对象的坑的文章已经一抓一大把了，<strong>因此这篇文章不是 JavaScript 中 <code>Date</code> 对象的使用指南，而是只专注于前端时间国际化。</strong></p>\n<h1>从时区说起</h1>\n<p>要想处理时间，UTC 是一个绕不开的名字。协调世界时（Coordinated Universal Time）是目前通用的世界时间标准，计时基于原子钟，但并不等于 TAI（国际原子时）。TAI 不计算闰秒，但 UTC 会不定期插入闰秒，因此 UTC 与 TAI 的差异正在不断扩大。UTC 也接近于 GMT（格林威治标准时间），但不完全等同。可能很多人都发现近几年 GMT 已经越来越少出现了，这是因为 GMT 计时基于地球自转，由于地球自转的不规则性且正在逐渐变慢，目前已经基本被 UTC 所取代了。</p>\n<blockquote><p>JavaScript 的 <code>Date</code> 实现不处理闰秒。实际上，由于闰秒增加的不可预测性，Unix/POSIX 时间戳完全不考虑闰秒。在闰秒发生时，Unix 时间戳会重复一秒。这也意味着，一个时间戳对应两个时间点是有可能发生的。</p></blockquote>\n<p>由于 UTC 是标准的，我们有时会使用 UTC+/-N 的方式表达一个时区。这很容易理解，但并不准确。中国通行的 <code>Asia/Shanghai</code> 时区<strong>大部分</strong>情况下可以用 UTC+8 表示，但英国通行的 <code>Europe/London</code> 时区并不能用一个 UTC+N 的方式表示——由于夏令时制度，<code>Europe/London</code> 在夏天等于 UTC+1，在冬天等于 UTC/GMT。</p>\n<blockquote><p>一个时区与 UTC 的偏移并不一定是整小时。如 <code>Asia/Yangon</code> 当前为 UTC+6:30，而 <code>Australia/Eucla</code> 目前拥有奇妙的 UTC+8:45 的偏移。</p></blockquote>\n<p>夏令时的存在表明<strong>时间的表示不是连续的</strong>，时区之间的时差也并不是固定的，我们并不能用固定时差来处理时间，这很容易意识到。但一个不容易意识到的点是，时区还包含了其历史变更信息。中国目前不实行夏令时制度，那我们就可以放心用 UTC+8 来表示中国的时区了吗？你可能已经注意到了上一段中描述 <code>Asia/Shanghai</code> 时区时我使用了<strong>大部分</strong>一词。<code>Asia/Shanghai</code> 时区在历史上实行过夏令时，因此 <code>Asia/Shanghai</code> 在部分时间段可以使用 UTC+9 来表示。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1988-04-18 00:00:00')\n// Mon Apr 18 1988 00:00:00 GMT+0900 (中国夏令时间)</pre>\n<blockquote><p>夏令时已经够混乱了，但它实际上比你想象得更混乱——部分穆斯林国家一年有四次夏令时切换（进入斋月时夏令时会暂时取消），还有一些国家使用混沌的 15/30 分钟夏令时而非通常的一小时。</p></blockquote>\n<blockquote><p><strong>不要总是基于 <code>00:00</code> 来判断一天的开始。</strong>部分国家使用 0:00-1:00 切换夏令时，这意味着 23:59 的下一分钟有可能是 1:00。</p></blockquote>\n<p>事实上，虽然一天只有 24 个小时，但当前（2021.10）正在使用的时区有超过 300 个。<strong>每一个时区都包含了其特定的历史。</strong>虽然有些时区在现在看起来是一致的，但它们都包含了不同的历史。时区也会创造新的历史。由于政治、经济或其他原因，一些时区会调整它们与 UTC 的偏差（萨摩亚曾经从 UTC-10 切换到 UTC+14，导致该国 2011.12.30 整一天都消失了），或是启用/取消夏令时，甚至有可能导致一个时区重新划分为两个。因此，为了正确处理各个时区，我们需要一个数据库来存放时区变更信息。还好，已经有人帮我们做了这些工作。目前大多数 *nix 系统和大量开源项目都在使用 <a href=\"https://www.iana.org/time-zones\" rel=\"noopener\">IANA 维护的时区数据库</a>（IANA TZ Database），其中包含了自 Unix 时间戳 0 以来各时区的变更信息。当然这一数据库也包含了大量 Unix 时间戳 0 之前的时区变更信息，但并不能保证这些信息的准确性。IANA 时区数据库会定期更新，以反映新的时区变更和新发现的历史史实导致的时区历史变更。</p>\n<blockquote><p>Windows 不使用 IANA 时区数据库。微软为 Windows 自己维护了一套<a href=\"https://docs.microsoft.com/zh-cn/troubleshoot/windows-client/system-management-components/daylight-saving-time-help-support\" rel=\"noopener\">时区数据库</a>，这有时会导致在一个系统上合法的时间在另一系统上不合法。</p></blockquote>\n<p>既然我们不能使用 UTC 偏移来表示一个时区，那就只能为每个时区定义一个标准名称。通常地，我们使用 <code>/</code> 来命名一个时区。这里的城市一般为该时区中人口最多的城市。于是，我们可以将中国的通行时区表示为 <code>Asia/Shanghai</code>。也有一些时区有自己的别名，如太平洋标准时间 <code>PST</code> 和协调世界时 <code>UTC</code>。</p>\n<blockquote><p>时区名称使用城市而非国家，是由于国家的变动通常比城市的变动要快得多。</p></blockquote>\n<blockquote><p><strong>城市不是时区的最小单位。</strong>有很多城市同时处于多个时区，甚至澳大利亚<a href=\"https://en.wikipedia.org/wiki/Gold_Coast_Airport\" rel=\"noopener\">有一个机场</a>的跑道两端处于不同的时区。</p></blockquote>\n<h1>处理时区困难重重</h1>\n<p>几个月前的一天，<a href=\"https://milkice.me/\" rel=\"noopener\">奶冰</a>在他的 Telegram 频道里发了这样的一条消息：</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\"><img src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg\" alt=\"奶冰频道的消息\" width=\"500\" class=\"aligncenter size-medium wp-image-2490\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1.jpg 800w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-244x300.jpg 244w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-1-768x944.jpg 768w\" sizes=\"(max-width: 800px) 100vw, 800px\"></a>\n<p>你想的没错，这个问题正是由时区与 UTC 偏移的不同造成的。<code>Asia/Shanghai</code> 时区在 1940 年前后和 1986 年前后曾实行过夏令时，<strong>而夏令时的切换会导致一小时的出现和消失。</strong>具体来说，启用夏令时当天会有一个小时消失，如 2021.3.28 英国启用夏令时，1:00 直接跳到 3:00，导致 <code>2021-03-28 01:30:00</code> 在 <code>Europe/London</code> 时区中是不合法的；取消夏令时当天又会有一个小时重复，如 2021.10.31 英国取消夏令时，2:00 会重新跳回 1:00 一次，导致 <code>2021-10-31 01:30:00</code> 在 <code>Europe/London</code> 时区中对应了两个时间点。而在奶冰的例子中，<code>1988-04-10 00:46:50</code> 正好处于因夏令时启用而消失的一小时中，因此系统会认为此时间字符串不合法而拒绝解析。</p>\n<blockquote><p>你可能会注意到在历史上 1988.4.10 这一天 <code>Asia/Shanghai</code> 时区实际上是去掉了 1:00-2:00 这一小时而不是 0:00-1:00。上文问题更深层次的原因是，在 IANA TZDB 2018a 及更早版本中，IANA 因缺乏历史资料而设置了错误的夏令时规则，规则设定了夏令时交界于 0:00-1:00 从而导致上文问题发生。而随后社区<a href=\"http://mm.icann.org/pipermail/tz/2018-August/026760.html\" rel=\"noopener\">发现了更准确的史实</a>，因此 IANA 更新了数据库。上文的问题在更新了系统的时区数据库后便解决了。</p></blockquote>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg\" alt=\"IANA TZDB 2018a 及之前版本的错误数据\" width=\"1750\" height=\"595\" class=\"aligncenter size-full wp-image-2491\" srcset=\"https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2.jpg 1750w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-300x102.jpg 300w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1024x348.jpg 1024w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-768x261.jpg 768w, https://acdn.flyhigher.top/wp-content/uploads/2021/10/time-2-1536x522.jpg 1536w\" sizes=\"(max-width: 1750px) 100vw, 1750px\"></a>\n<p><span>IANA TZDB 2018a 及之前版本的错误数据</span></p>\n<p>再来考虑另一种情况。你的应用的某位巴西用户在 2018 年保存了一个未来时间 <code>2022-01-15 12:00</code>（按当时的规律那应该是个夏令时时间），不巧那时候你的应用是以格式化的时间字符串形式保存的时间。之后你发现巴西已经于 2019 年 4 月宣布彻底取消夏令时制度，那么 <code>2022-01-15 12:00</code> 这个时间对应的 Unix 时间戳发生了变化，变得不再准确，要正确处理这一字符串就需要参考这一字符串生成的时间（或生成时计算的 UTC 偏移）来做不同的处理。<strong>因此，应用从一开始就应该避免使用字符串来传输、存储时间，而是使用 Unix 时间戳。</strong>如果不得不使用字符串存储时间，请尽可能：</p>\n<ul>\n<li>使用 UTC 描述时间，你永远不会知道本地时区在未来会发生什么</li>\n<li>如果需要以当地时间描述时间，一定带上当前 UTC 偏移</li>\n</ul>\n<p>时区历史带来的问题往往意想不到而且远比想象得多。实际上时区历史数据非常详细而繁多且跨设备不一致，并没有简单而统一的处理方法。在需要严谨处理时区时可能需要在应用程序中内嵌一套各端统一的时区数据库，但这样的方案放在前端又会带来不少问题：</p>\n<ul>\n<li>体积过大。moment.js 曾经设计过<a href=\"https://github.com/moment/moment-timezone/blob/develop/data/packed/2021a.json\" rel=\"noopener\">一种简洁的 TZDB 表示</a>，但尽管已经尽可能压缩整个文件仍然达到了 180+KB。在性能优先的 Web 应用中这是不可接受的</li>\n<li>需要持续更新。时区数据一直在变动，需要在时区数据更新时尽快更新应用内的时区数据，这带来了额外的维护成本</li>\n</ul>\n<p>ES6 为我们带来了 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl\" rel=\"noopener\"><code>Intl</code> 命名空间</a>。在这里，JavaScript 运行时提供了不少时间相关的国际化能力。因此，在不使用额外数据的情况下准确处理时区是可能的，但这并不完美：</p>\n<ul>\n<li>各端不统一。浏览器提供的时区数据受浏览器版本、系统版本等可能变化，最新的时区更新可能无法快速反映到所有设备上</li>\n<li>实现复杂。<code>JavaScript</code> 中 <code>Date</code> 对象的不良设计导致实现完善的时区处理并不容易，且 <code>Intl</code> 命名空间下的对象实例化性能开销较大，需要额外优化</li>\n</ul>\n<blockquote><p><code>Intl</code> 命名空间下还有很多实用的国际化相关方法，值得我们另开一篇文章来讲讲了。</p></blockquote>\n<p>在真实开发中，这需要取舍。目前主流的 JavaScript 时间处理库都已转向浏览器内置方法，并在需要时通过 Polyfill 保证跨端一致性。在这篇文章中，我们将尝试在不使用第三方库的情况下实现基本的时间国际化处理。此外，还有一些诸如需要使用 Unix 时间戳才能正确地在各端交换时间等细节需要注意。</p>\n<h1>时区转换</h1>\n<p>JavaScript 中的 <code>Date</code> 并不是不包含时区信息——实际上，<code>Date</code> 对象表示的一定是当前时区。通过尝试：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Date('1970-01-01T00:00:00Z')\n// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</pre>\n<p>就可以知道，JavaScript 运行时其实知道当前时区，并会在需要的时候将其他时区的时间转换为当前时区的时间。那么，如何将本地时间转换为其他时区的时间呢？从 <code>Date</code> 的角度看，这并不行，因为我们无法设置一个 <code>Date</code> 对象的时区。但我们可以“投机取巧”：将 <code>Date</code> 对象的时间加上/减去对应的时差，尽管 <code>Date</code> 对象仍然认为自己在本地时区，但这样不就可以正确显示了嘛！但我们会碰到上文提到的问题：时区之间的时间差并不固定，在没有额外数据的情况下很难正确计算。</p>\n<p>还好，ES6 基于 <code>Intl</code> 命名空间扩展了 <code>Date.prototype.toLocaleString()</code> 方法，使其可以接受时区参数并按指定时区格式化时间。如果你在搜索引擎中搜索如何使用 JavaScript 转换时区，你大概率会在 StackOverflow 上找到类似这样的答案：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const convertTimeZone = (date, timeZone) =&gt; {\n    return new Date(date.toLocaleString('en-US', { timeZone }))\n}\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\nconvertTimeZone(now, 'Europe/London') // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<p>很好理解，我们使用 <code>en-US</code> 的区域设置要求 JavaScript 运行时以我们指定的时区格式化时间，再将时间字符串重新解析为时间对象。这里的 <code>timeZone</code> 就是诸如 <code>Asia/Shanghai</code> 等的 IANA TZDB 时区名称。这个字符串确实需要自己提供，但这就是我们唯一需要自己准备的数据了！只要提供了时区名称，浏览器就会自动计算正确的时间，无需我们自行计算。</p>\n<blockquote><p>对于时区名称，你可以考虑使用 <a href=\"https://github.com/vvo/tzdb/\" rel=\"noopener\">@vvo/tzdb</a>。这是一个声称为自动更新的 IANA TZDB 的 JSON 导出，并已被数个大型项目使用。你可以从这个包中导出所有时区名称。</p></blockquote>\n<p>这个方法看起来还不错，对吧？但实际上，它有两个问题：</p>\n<ul>\n<li>指定了区域设置和时区的 <code>toLocaleString()</code> 实际上每次调用都会在 JavaScript 运行时中创建新的 <code>Intl.DateTimeFormat</code> 对象（在后文详述），而后者会带来昂贵的性能开销（在 Node 14 中，实例化一次会在 V8 中增加内存使用约 46.3Kb。但这是符合预期的，详见 <a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=6528\" rel=\"noopener\">V8 Issue</a>）。因此，在密集调用的情况下需要考虑计算并缓存时差，并在一定时间后或需要时进行更新</li>\n<li>使用 <code>toLocaleString()</code> 并使用 <code>en-US</code> 区域设置格式化的默认时间格式类似于 <code>10/13/2021, 1:00:00 AM</code>。这可以被大部分浏览器正确解析，<strong>但这是不规范的，不同浏览器有可能产生不同结果。</strong>你也可以自行配置格式（同下文的 <code>Intl.DateTimeFormat</code>），但仍然无法构造出规范的字符串</li>\n</ul>\n<p>因此，更佳的方案是，我们需要建立一个可反复使用的格式化器以避免重复创建 <code>Intl.DateTimeFormat</code> 带来的额外开销，并需要手动构造出符合规范的时间字符串，并将其重新解析为 <code>Date</code> 对象。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const timeZoneConverter = (timeZone) =&gt; {\n    // 新建 DateTimeFormat 对象以供对同一目标时区重用\n    // 由于时区属性必须在创建 DateTimeFormat 对象时指定，我们只能为同一时区重用格式化器\n    const formatter = new Intl.DateTimeFormat('zh-CN', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n        hour12: false,\n        timeZone\n    })\n    return {\n        // 提供 conver 方法以将提供的 Date 对象转换为指定时区\n        convert (date) {\n            // zh-CN 的区域设置会返回类似 1970/01/01 00:00:00 的字符串\n            // 替换字符即可构造出类似 1970-01-01T00:00:00 的 ISO 8601 标准格式时间字符串并被正确解析\n            return new Date(formatter.format(date).replace(/\\//g, '-').replace(' ', 'T').trim())\n        }\n    }\n}\n\nconst toLondonTime = timeZoneConverter('Europe/London') // 对于同一时区，此对象可重用\n\nconst now = new Date() // Wed Oct 13 2021 01:00:00 GMT+0800 (中国标准时间)\ntoLondonTime.convert(now) // Tue Oct 12 2021 18:00:00 GMT+0800 (中国标准时间)</pre>\n<blockquote><p>目前 <code>zh-CN</code> 的区域设置会产生类似 <code>1970/01/01 00:00:00</code> 的格式化字符串。这一格式目前跨端一致，但由于规范没有指定时间格式，<strong>这个格式在未来有可能变更。</strong>更好的方案是使用 <code>formatToParts()</code> 方法（在后文详述）获取时间字符串的各部分并手动拼接出标准格式的字符串，但在这个例子中直接 <code>replace</code> 拥有更好的性能。</p></blockquote>\n<p>现在，尝试反复转换时间至同一时区 1000 次，耗时从 <code>toLocaleString()</code> 1.5 秒降低到了 0.04 秒。尽管代码长了点，但这次重写在最好的情况下为我们带来了超过 20 倍的性能提升。</p>\n<p>需要注意的是，虽然这看起来就算最终方案了，但这个方案依然不完美。主要有以下两个问题：</p>\n<ul>\n<li>在需要密集转换为不同时区时，由于无法重用格式化器，性能依然较差且难以进一步优化</li>\n<li>由于 <code>Intl.DateTimeFormat</code> 不支持格式化毫秒，在格式化字符串的过程中毫秒会丢失，导致最终结果可能会与期望结果产生最高 999ms 的误差，需要额外处理。比如需要计算时差时，我们可能需要这么写：\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const calcTimeDiff = (date, converter) =&gt; {\n    const secDate = date - date.getMilliseconds() // 去掉毫秒，避免转换前后精度差异\n    return converter.convert(new Date(secDate), tzName) - secDate\n}\n\ncalcTimeDiff(new Date(), timeZoneConverter('Europe/London')) // -25200000</pre>\n</li>\n</ul>\n<p>无论如何，在折腾一番后我们还是把时区正确转换了。接下来准备格式化时间字符串了吗？不过在此之前，我们得先来聊聊语言、文字和区域。</p>\n<h1>语言文字区域傻傻分不清</h1>\n<blockquote><p>如何在计算机中表示中文？</p></blockquote>\n<p>“这不简单，”你可能会说，“用 <code>zh</code> 啊。”</p>\n<blockquote><p>那简体中文呢？</p></blockquote>\n<p>“<code>zh-CN</code>。”你或许会说出这个答案。</p>\n<blockquote><p>那用于新加坡的简体中文和用于中国大陆的简体中文该如何区分呢？</p></blockquote>\n<p>嗯……好问题。</p>\n<p>要能正确区分不同的简体中文，我们还得先回到定义上。实际上，“国际化”并不只是语言的翻译而已，国际化包含的是一整套对于各个<strong>区域</strong>的本地化方案。要准确表示一个国际化方案，我们实际至少需要确定三个属性：语言（Language）、文字（Script）和区域（Locale）。</p>\n<ul>\n<li>\n<strong>语言</strong>通常指的是<strong>声音语言</strong>。不同的语言都有一套自己的发音规则，很难互通。如中文和英语都属于语言</li>\n<li>\n<strong>文字</strong>对应的是某个语言的书写方式，同样的语言可能会有多种书写方案。如中文主要有简体和繁体两种书写方案</li>\n<li>\n<strong>区域</strong>指国际化面向的地区，相同的语言和文字，在不同地区也有可能会有不同的使用习惯。如新加坡和中国大陆都使用简体中文，但两地的用词习惯等有些许差异</li>\n</ul>\n<p>只有确定了这三个属性，我们才能正确定义一个国际化方案（或者说<strong>区域设置</strong>）。当然，还有很多其他属性可以更准确的表达某个区域设置，但通常有语言、文字和区域就已经足够了。</p>\n<p>于是，基于 <a href=\"https://tools.ietf.org/rfc/bcp/bcp47.txt\" rel=\"noopener\">BCP 47</a>，我们可以知道：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN = 中文普通话-简体-中国大陆\ncmn-Hans-SG = 中文普通话-简体-新加坡\ncmn-Hant-TW = 中文普通话-繁体-台湾\nyue-Hant-HK = 中文粤语-繁体-香港</pre>\n<p>等等，这都是啥？还有 BCP 47 又是啥？BCP 是 IETF 发布的“最佳当前实践”文档，而 BCP 47 是一些国际化相关的 ISO 和备忘录的集合，也是目前事实上由 HTML 和 ECMAScript 所使用的表达区域设置的标准。BCP 47 定义的区域设置标签实际上比较复杂，但对于大部分简单使用情况，上文示例中的格式已经完全够用了。简单来说，<strong>要表达一个区域设置，我们会使用 <code>语言[-文字][-区域]</code> 的格式，而文字和区域都是可选的。</strong>而对于每个部分的具体代码，BCP 47 也有做具体定义。其中：</p>\n<ul>\n<li>语言使用 ISO 639-1 定义的两位字母代码（如中文为 <code>zh</code>，英文为 <code>en</code>）或 <a href=\"https://iso639-3.sil.org/code_tables/639/data\" rel=\"noopener\">ISO 639-2/3</a> 定义的三位字母代码（如中文普通话为 <code>cmn</code>，英文为 <code>eng</code>），通常小写</li>\n<li>文字使用 <a href=\"https://unicode.org/iso15924/iso15924-codes.html\" rel=\"noopener\">ISO 15924</a> 定义的四位字母代码，通常首字母大写。如简体中文是 <code>Hans</code>，繁体中文是 <code>Hant</code>\n</li>\n<li>区域通常使用 <a href=\"https://www.iso.org/iso-3166-country-codes.html\" rel=\"noopener\">ISO 3166-1</a> 定义的两位字母代码，通常大写，如中国大陆为 <code>CN</code>，英国为 <code>GB</code>\n</li>\n</ul>\n<blockquote><p>ISO 639-1/2/3 的关系实际是：ISO 639-1 是最早制定的规范，使用两位字母表示语言，但语言数量之多并不能只用两位代码表示。因此后来修订了 ISO 639-2 和 3，使用三位字母表示了更多语言。通常 639-1 代码和 ISO-2/3 代码是一对多的关系。如中文 <code>zh</code> 其实是中文普通话 <code>cmn</code> 的宏语言（macrolanguage），同样使用 <code>zh</code> 为宏语言的语言还有 <code>wuu</code>（中文吴语）、<code>hak</code>（中文客家话）、<code>yue</code>（中文粤语）等数十种。<strong>从规范上我们现在应该使用 ISO 639-2/3 代码来替代 ISO 639-1 代码了</strong>，但由于历史阻力和真实需求中分类无需如此细致等原因，<strong>使用 ISO 639-1 指定语言仍然非常常见而且完全可以接受。</strong>此外，特别地，我们在 ISO 639-3 中定义未指明的语言为 <code>und</code>。</p></blockquote>\n<p>因此，对于这一节开头的两个问题，在 BCP 47 中正确答案其实是：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">zh = 中文\ncmn = 中文普通话\n\nzh-Hans = 中文-简体\ncmn-Hans = 中文普通话-简体</pre>\n<p>而 <code>zh-CN</code> 实际是指在中国大陆使用的中文，当然也包含在中国大陆使用的繁体中文。<strong>不过，由于大部分情况下一个区域只会通用一种文字，很多情况下我们可以忽略文字这一项</strong>，即使用 <code>zh-CN</code>（或者 <code>cmn-CN</code>）来表示中国大陆的简体中文普通话——毕竟在大部分业务中在中国大陆使用繁体和非普通话的情况非常少。</p>\n<blockquote><p>事实上，类似 <code>zh-Hans</code> 和 <code>zh-Hant</code> 开头的区域设置名称已经被标记为 <code>redundant 废弃</code>，因此尽可能只使用 <code>zh-CN</code> 或者 <code>cmn-Hans-CN</code> 这样的区域设置名称。所有区域设置名称的列表可以在 <a href=\"https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\" rel=\"noopener\">IANA</a> 找到。</p></blockquote>\n<p>现在我们可以准确定义一个区域设置了。不过我们还有一些小小的需求。比如我们想在 <code>cmn-Hans-CN</code> 的区域设置中使用农历来表示日期，但显然我们上文定义的表示方法并不能表达这一需求。好在，Unicode 为 BCP 47 提供了 u 扩展。在区域设置名称后面加上 <code>-u-[选项]</code> 就可以表达更细致的变体了。所以我们有：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"raw\">cmn-Hans-CN-u-ca-chinese = 中文普通话-简体-中国大陆-u-日历-中国农历\njpn-Jpan-JP-u-ca-japanese = 日语-日文汉字/平假名/片假名-日本-u-日历-日本日历\ncmn-Hans-CN-u-nu-hansfin = 中文普通话-简体-中国大陆-u-数字-简体大写数字</pre>\n<p>u 扩展的具体可选项可以在 <a href=\"https://www.unicode.org/reports/tr35/tr35-21.html#Unicode_locale_identifier\" rel=\"noopener\">Unicode 网站</a>上找到。而多个 u 扩展还可以连接——于是我们甚至可以写出 <code>cmn-Hans-CN-u-ca-chinese-nu-hansfin</code> 这种丧心病狂的区域设置名称。当然，相信你现在已经可以看懂这个区域设置的意思了。</p>\n<blockquote><p>不同地区可能会有不同的日历使用习惯，如中国有使用农历的需求，泰国有使用佛历的需求，我们可以通过 u 扩展指定不同的日历。不过，大部分情况下我们会使用标准的 ISO 8601 日历（gregory），JavaScript 的 <code>Date</code> 对象也只支持这种日历。</p></blockquote>\n<blockquote><p>你可以使用 <a href=\"https://r12a.github.io/app-subtags/\" rel=\"noopener\">BCP47 language subtag lookup</a> 工具快速检查你编写的 BCP 47 区域标签是否规范。</p></blockquote>\n<p>终于我们可以正确表达一个完美符合我们需求的区域设置了。接下来，让我们开始格式化时间吧。</p>\n<h1>格式化时间</h1>\n<p>这题我会！</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const formatDate(date) =&gt; {\n    return `${date.getFullYear()}-${`${date.getMonth() + 1}`.padStart(2, '0')}-${`${date.getDate()}`.padStart(2, '0')} ${`${date.getHours()}`.padStart(2, '0')}:${`${date.getMinutes()}`.padStart(2, '0')}:${`${date.getSeconds()}`.padStart(2, '0')}`\n}\n\nformatDate(new Date()) // 2021-10-13 01:00:00</pre>\n<p>就完事了……吗？先不论这样的格式化代码难以阅读，尽管上文这样的日期格式国际通用，<strong>但并非所有区域都习惯于这样的日期表示方法。</strong>比如英语国家/地区在很多时候习惯在日期中加入星期，而阿拉伯语国家/地区在部分情况下习惯使用阿拉伯语数字（而非常用的阿拉伯-印度数字）；再比如美式英语国家/地区习惯月-日-年的日期表示法，而英式英语国家/地区习惯日-月-年的日期表示法……不同区域在时间表示格式习惯上的差异是巨大的，<strong>我们很难通过一个简单的方法来正确地、国际化地格式化一个日期。</strong></p>\n<p>好在 ES6 早就为我们铺平了道路。还记得上文提到过的 <code>Intl.DateTimeFormat</code> 吗？我们通过它来实例化一个日期格式化器并用进行日期的国际化。</p>\n<p>直接来看例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long'\n}\nconst now = new Date()\n\nconst enUSFormatter = new Intl.DateTimeFormat('en-US', options)\n\nconst zhCNFormatter = new Intl.DateTimeFormat('zh-CN', options)\nconst zhCNAltFormatter = new Intl.DateTimeFormat('zh-CN-u-ca-chinese', options)\nconst zhCNAlt2Formatter = new Intl.DateTimeFormat('zh-CN-u-ca-roc-nu-hansfin', options)\n\nconst jaFormatter = new Intl.DateTimeFormat('ja', options)\nconst jaAltFormatter = new Intl.DateTimeFormat('ja-JP-u-ca-japanese', options)\n\nconst arEGFormatter = new Intl.DateTimeFormat('ar-EG', options)\n\nenUSFormatter.format(now) // Wednesday, Oct 13, 2021\n\nzhCNFormatter.format(now) // 2021年10月13日星期三\nzhCNAltFormatter.format(now) // 2021辛丑年九月8星期三\nzhCNAlt2Formatter.format(now) // 民国壹佰壹拾年拾月拾叁日星期三\n\njaFormatter.format(now) // 2021年10月13日水曜日\njaAltFormatter.format(now) // 令和3年10月13日水曜日\n\narEGFormatter.format(now) // الأربعاء، ١٣ أكتوبر ٢٠٢١</pre>\n<blockquote><p>在这里我们使用 ISO 639-1 代码来表示语言，是由于事实上 ISO 639-1 代码更加常见与通用。在大部分支持 <code>Intl.DateTimeFormat</code> 的 JavaScript 运行时中我们也可以使用 ISO 639-2/3 代码来表示语言（但实际会 fallback 至对应的 ISO 639-1 代码）。</p></blockquote>\n<blockquote><p>你也可以通过在 <code>options</code> 中设置 <code>calendar</code> 属性和 <code>numberingSystem</code> 属性来替换区域设置名称中对 u 扩展的使用。这也是推荐方式。</p></blockquote>\n<p>这非常直观，我们可以指定区域设置和格式化选项来初始化一个格式化器，并在之后使用格式化器对象的 <code>format</code> 方法来格式化一个 <code>Date</code> 对象。这里的格式化选项其实非常灵活，能格式化的不只是日期，时间也可以被灵活地格式化，有非常多的组合可以选择。我们不会在这里详细解释每一个选项，你可以访问 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\" rel=\"noopener\">MDN 文档</a>来了解更多。</p>\n<blockquote><p>如前文所述，<code>Intl.DateTimeFormat</code> 无法格式化毫秒。</p></blockquote>\n<p>不过需要注意的是，<strong>JavaScript 运行时不一定支持所有区域设置，也不一定支持所有格式化选项。</strong>在遇到不支持的情况时，<code>Intl.DateTimeFormat</code> 默认会静默 fallback 到最匹配的支持项，因此在处理不常见的区域设置或选项时，你可能需要再额外检查。你可以通过 <code>Intl.DateTimeFormat.supportedLocalesOf()</code> 静态方法判断当前运行时是否支持指定的区域设置，也可以在实例化格式化器后在对象上调用 <code>resolvedOptions()</code> 方法来检查运行时的解析结果是否与预期一致。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('yue-Hant-CN').resolvedOptions()\n// {locale: 'zh-CN', calendar: 'gregory', …}\n// fallback 至 zh-CN，与 yue-CN 的预期不一致</pre>\n<p>此外，正如你所看到的，各种语言在日期格式化中使用的文本 JavaScript 运行时都已经帮我们内置了。因此，我们甚至可以利用这些国际化特性来为我们的应用减少一点需要翻译的字符串——打包进应用的翻译越少，应用体积也就越小了嘛——比如说获取一周七天对应的名字：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getWeekdayNames = (locale) =&gt; {\n     // 基于一个固定日期计算，这里选择 1970.1.1\n     // 不能使用 0，因为 Unix 时间戳 0 在不同时区的日期不一样\n    const base = new Date(1970, 0, 1).getTime()\n    const formatter = new Intl.DateTimeFormat(locale, { weekday: 'short' })\n    return Array.from({ length: 7 }, (_, day) =&gt; (\n        formatter.format(new Date(base + 3600000 * 24 * (-4 + day))) // 1970.1.1 是周四\n    ))\n}\n\ngetWeekdayNames('en-US') // ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat']\ngetWeekdayNames('zh-CN') // ['周日', '周一', '周二', '周三', '周四', '周五', '周六']\ngetWeekdayNames('ja') // ['日', '月', '火', '水', '木', '金', '土']\ngetWeekdayNames('ar-EG') // ['الأحد', 'الاثنين', 'الثلاثاء', 'الأربعاء', 'الخميس', 'الجمعة', 'السبت']</pre>\n<p>当然，如果你还是不喜欢运行时为你提供的格式，我们还有上文提到过的 <code>formatToParts()</code> 方法可以用。来看一个简单的例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">new Intl.DateTimeFormat('zh-CN', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    weekday: 'long',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n}).formatToParts(new Date())\n// [\n//     { type: 'year', value: '2021' },\n//     { type: 'literal', value: '年' },\n//     { type: 'month', value: '10' },\n//     { type: 'literal', value: '月' },\n//     { type: 'day', value: '13' },\n//     { type: 'literal', value: '日' },\n//     { type: 'weekday', value: '星期三' },\n//     { type: 'literal', value: ' ' },\n//     { type: 'dayPeriod', value: '上午' },\n//     { type: 'hour', value: '1' },\n//     { type: 'literal', value: ':' },\n//     { type: 'minute', value: '00' },\n//     { type: 'literal', value: ':' },\n//     { type: 'second', value: '00' }\n// ]</pre>\n<p>随后，你就可以自己解析这个数组来构造出你想要的时间格式了。最后，我们还可以使用 <code>Intl.RelativeTimeFormat</code> 来格式化相对日期。当然我们不会在这里详细讲解这个 API，你可以参考 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Intl/RelativeTimeFormat\" rel=\"noopener\">MDN 文档</a>。直接来看一个简单例子吧：</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const getRelativeTime = (num, unit, locale) =&gt; {\n    return new Intl.RelativeTimeFormat(locale, { numeric: 'auto' }).format(num, unit)\n}\n\ngetRelativeTime(-3, 'day', 'en-US') // 3 days ago\ngetRelativeTime(-1, 'day', 'zh-CN') // 昨天\ngetRelativeTime(0, 'second', 'zh-CN') // 现在\ngetRelativeTime(3, 'hour', 'ja') // 3 時間後</pre>\n<blockquote><p><code>Intl.RelativeTimeFormat</code> 是一个相对较晚进入标准的对象，因此浏览器支持程度较差，可能需要使用 <a href=\"https://formatjs.io/docs/polyfills/intl-relativetimeformat\" rel=\"noopener\">Polyfill</a>。不过目前（2021.10）主流浏览器的最新版本均已支持此 API。</p></blockquote>\n<h1>未来</h1>\n<p>我希望这篇文章时区转换的部分可以很快过时——这并非无稽之谈，目前（2021.10）TC39 的 <a href=\"https://github.com/tc39/proposal-temporal\" rel=\"noopener\"><code>Temporal</code> 提案</a>已经进入 Stage 3 了。<strong><code>Temporal</code> 提案定义了一个新的、时区友好的 <code>Temporal</code> 命名空间，并期望在不久后就能进入标准并最终应用于生产环境。</strong><code>Temporal</code> 定义了完整的时区、时间段、日历规则的处理，且拥有简单明了的 API。那时候，JavaScript 的时区处理就不会再如此痛苦了。由于目前 <code>Temporal</code> 提案还未进入标准，API 暂未稳定，我们无法将其用于生产环境，但我们可以来看一个简单的例子感受一下这个 API 的强大。</p>\n<pre class=\"EnlighterJSRAW\" data-enlighter-language=\"js\">const zonedDateTime = Temporal.ZonedDateTime.from({\n  timeZone: 'America/Los_Angeles',\n  year: 1995,\n  month: 12,\n  day: 7,\n  hour: 3,\n  minute: 24,\n  second: 30,\n  millisecond: 0,\n  microsecond: 3,\n  nanosecond: 500,\n  calendar: 'iso8601'\n}) // 1995-12-07T03:24:30.0000035-08:00[America/Los_Angeles]</pre>\n<p>如果你希望立刻开始使用 <code>Temporal</code>，现在已有 Polyfill 可用。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"js-temporal\" data-mdxgithubp=\"temporal-polyfill\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/js-temporal/temporal-polyfill\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<p>不过，时区问题不会消失，各地区的习惯也很难融合到一起。时间的国际化处理是<a href=\"https://yourcalendricalfallacyis.com/\" rel=\"noopener\">极其复杂</a>的，前端中的时间国际化仍然值得我们认真关注。</p>\n","link":"https://flyhigher.top/develop/2482.html"},{"title":"使用 Python 爬取故宫壁纸","date":"2021-07-17 05:55:00","description":"\n<p>我非常喜欢故宫壁纸，但是一张一张下载的速度就太慢了。</p>\n<p>于是，我就写了个简单的 Python 小程序自动爬取故宫壁纸。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"代码\"></a>代码</h2>\n<p>首先，我们通过简单的查看，知道故宫壁纸的页面并没有使用 JavaScript 载入。</p>\n<p>但是故宫壁纸很多，所以还需要分类。</p>\n<p>故宫壁纸大多都是以分类开头，如 <code>爱上紫禁城 紫藤</code>, <code>清   虚谷紫藤金鱼图轴（局部）</code> 等等，所以一般只需要做个简单的 <code>startswith()</code> 判断就 OK 了。</p>\n<p>很多壁纸的标题都是一样的，所以还可以使用 <code>random</code> 库在文件名末尾追加一个随机数。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests, bs4, time, random</span><br><span class=\"line\">path = <span class=\"string\">\"./wallpaper/爱上紫禁城\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">catch = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">119</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    url = <span class=\"string\">\"https://www.dpm.org.cn/lights/royal/p/{}.html\"</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">    <span class=\"comment\"># 发送请求</span></span><br><span class=\"line\">    response = requests.get(url)</span><br><span class=\"line\">    <span class=\"comment\"># 设定页面编码为 UTF-8</span></span><br><span class=\"line\">    response.encoding = <span class=\"string\">\"UTF-8\"</span></span><br><span class=\"line\">    <span class=\"comment\"># 从 HTML 中解析数据</span></span><br><span class=\"line\">    soup = bs4.BeautifulSoup(response.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">    image = soup.find_all(name=<span class=\"string\">\"div\"</span>, class_=<span class=\"string\">\"pic\"</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 循环输出图片</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> image:</span><br><span class=\"line\">        catch = catch + <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"comment\"># 获得壁纸名称</span></span><br><span class=\"line\">        <span class=\"comment\"># 分类，不是以【爱上紫禁城】开头的壁纸都忽略</span></span><br><span class=\"line\">        img_name = n.a.img[<span class=\"string\">\"title\"</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> img_name.startswith(<span class=\"string\">\"明\"</span>):</span><br><span class=\"line\">            print(<span class=\"string\">\"{}. {}\"</span>.<span class=\"built_in\">format</span>(catch, n.a.img[<span class=\"string\">\"title\"</span>]))</span><br><span class=\"line\">            <span class=\"comment\"># 组合获得壁纸页面</span></span><br><span class=\"line\">            url_1080 = <span class=\"string\">\"https://www.dpm.org.cn\"</span> + n.a[<span class=\"string\">\"href\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 请求高清版网页</span></span><br><span class=\"line\">            response_img = requests.get(url_1080)</span><br><span class=\"line\">            <span class=\"comment\"># 再次解析</span></span><br><span class=\"line\">            soup_img = bs4.BeautifulSoup(response_img.text, <span class=\"string\">\"lxml\"</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 获取页面中的图片</span></span><br><span class=\"line\">            data = soup_img.find_all(name=<span class=\"string\">\"img\"</span>)[<span class=\"number\">0</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 获得壁纸图片的链接</span></span><br><span class=\"line\">            img_url = data[<span class=\"string\">\"src\"</span>]</span><br><span class=\"line\">            <span class=\"comment\"># 保存图片</span></span><br><span class=\"line\">            pic = requests.get(img_url).content</span><br><span class=\"line\">            file_name = path + img_name + <span class=\"string\">\"-\"</span> + <span class=\"built_in\">str</span>(random.randint(<span class=\"number\">100000</span>, <span class=\"number\">999999</span>)) + <span class=\"string\">\".jpg\"</span></span><br><span class=\"line\">            <span class=\"comment\"># 写入文件</span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file_name, <span class=\"string\">\"wb\"</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">                file.write(pic)</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"!Ignore: \"</span> + img_name)</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>我把一些我下载下来的壁纸放在了 <a href=\"https://t.yfun.top/dpm-wallpaper\">这里</a>，可以直接预览并下载。</p>\n<p><del>OK，又水了一篇文（</del></p>\n","link":"https://blog.yfun.top/posts/2021/dpm-wallpaper/"},{"title":"使用 Prettier 格式化代码","date":"2021-07-15 06:45:00","description":"\n<p>格式化代码可以提高代码的可读性，使代码更加美观。</p>\n<p>Prettier 支持：</p>\n<ul>\n<li>JavaScript (including experimental features)</li>\n<li>JSX</li>\n<li>Angular</li>\n<li>Vue</li>\n<li>Flow</li>\n<li>TypeScript</li>\n<li>CSS, Less, and SCSS</li>\n<li>HTML</li>\n<li>JSON</li>\n<li>GraphQL</li>\n<li>Markdown, including GFM and MDX</li>\n<li>YAML</li>\n</ul>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%AE%89%E8%A3%85\" class=\"headerlink\" title=\"安装\"></a>安装</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%8F%92%E4%BB%B6\" class=\"headerlink\" title=\"插件\"></a>插件</h3>\n<p>你可以很方便的在 VSCode 等 IDE 上安装插件，插件名为 <code>Prettier</code>.</p>\n<p>以 VSCode 为例：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/6a3ad0ea42d55.png\"></p>\n<blockquote><p>如果安装了其他格式化插件，则需要点击 [格式化文档的方式]，选择 <code>Prettier</code>。</p></blockquote>\n<h3>\n<a href=\"https://blog.yfun.top/#CLI\" class=\"headerlink\" title=\"CLI\"></a>CLI</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo npm i -g prettier</span><br></pre></td></tr></table></figure><p>相关的文档可参见官网: <a href=\"https://prettier.io/docs/en/cli.html\">https://prettier.io/docs/en/cli.html</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">prettier --write . <span class=\"comment\"># 格式化当前文件夹的所有文件</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%85%8D%E7%BD%AE\" class=\"headerlink\" title=\"配置\"></a>配置</h2>\n<p>参见官方文档：</p>\n<ul>\n<li><p><a href=\"https://prettier.io/docs/en/configuration.html\">https://prettier.io/docs/en/configuration.html</a></p></li>\n<li><p><a href=\"https://prettier.io/docs/en/options.html\">https://prettier.io/docs/en/options.html</a></p></li>\n</ul>\n<p>Prettier 的配置文件有多种写法：</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.10/rawimg/a4cc583d84c12.png\"></p>\n<p>以使用 <code>YAML</code> 书写的 <code>.prettierrc</code> 为例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单行最长字符数</span></span><br><span class=\"line\"><span class=\"attr\">printWidth:</span> <span class=\"number\">80</span></span><br><span class=\"line\"><span class=\"comment\"># 制表符长度</span></span><br><span class=\"line\"><span class=\"attr\">tabWidth:</span> <span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"comment\"># 是否使用 Tab</span></span><br><span class=\"line\"><span class=\"attr\">useTabs:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\"># 是否加入分号</span></span><br><span class=\"line\"><span class=\"attr\">semi:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\"># 单引号</span></span><br><span class=\"line\"><span class=\"attr\">singleQuote:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E6%95%88%E6%9E%9C\" class=\"headerlink\" title=\"效果\"></a>效果</h2>\n<p>格式化前：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>).then(<span class=\"function\"><span class=\"params\">res</span>=&gt;</span>res.json()).then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {<span class=\"built_in\">console</span>.log(content);<span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++){<span class=\"built_in\">console</span>.log(content[i][<span class=\"string\">'title'</span>] + <span class=\"string\">\" --- https://blog.yfun.top\"</span> + content[i][<span class=\"string\">'url'</span>])}})</span><br></pre></td></tr></table></figure><p>格式化后：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">fetch(<span class=\"string\">\"https://blog.yfun.top/search.json\"</span>)</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">res</span>) =&gt;</span> res.json())</span><br><span class=\"line\">    .then(<span class=\"function\">(<span class=\"params\">content</span>) =&gt;</span> {</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(content);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; content.length; i++) {</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(</span><br><span class=\"line\">                content[i][<span class=\"string\">\"title\"</span>] +</span><br><span class=\"line\">                    <span class=\"string\">\" --- https://blog.yfun.top\"</span> +</span><br><span class=\"line\">                    content[i][<span class=\"string\">\"url\"</span>]</span><br><span class=\"line\">            );</span><br><span class=\"line\">        }</span><br><span class=\"line\">    });</span><br></pre></td></tr></table></figure>\n","link":"https://blog.yfun.top/posts/2021/format-code-using-prettier/"},{"title":"树莓派超频","date":"2021-06-25 07:50:00","description":"\n<div class=\"note note-info\">            <p>本文操作系统为 Ubuntu Server 20.04，其他操作系统可能有所不同。</p>          </div>\n<div class=\"note note-warning\">            <p>超频是有风险的，温度也会更高，需要比较良好的散热。</p>          </div>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>登录树莓派，进入 <code>/boot/firmware/</code> 目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /boot/firmware/</span><br></pre></td></tr></table></figure><div class=\"note note-warning\">            <p>网上很多教程让你修改 <code>config.txt</code> 文件，但注释里已经很明确的写了：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\"># Please DO NOT modify this file; if you need to modify the boot config, the</span><br><span class=\"line\"># \"usercfg.txt\" file is the place to include user changes. Please refer to</span><br><span class=\"line\"># the README file for a description of the various configuration files on</span><br><span class=\"line\"># the boot partition.</span><br></pre></td></tr></table></figure>\n</div>\n<p>我们修改 <code>usercfg.txt</code> 文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo vim usercfg.txt</span><br></pre></td></tr></table></figure><p>在文件末尾追加配置信息，以下是我的，仅供参考：</p>\n<div class=\"note note-danger\">            <p>我使用的是 <code>Raspberry Pi 4 (4GB)</code>，并且有小风扇和散热片。<br>请根据自己的需要和配置进行更改。</p>          </div>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">force_turbo=0</span><br><span class=\"line\">arm_freq=1850</span><br><span class=\"line\">over_voltage=6</span><br><span class=\"line\">gpu_freq=650</span><br><span class=\"line\">core_freq=650</span><br><span class=\"line\">gpu_mem=620</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E9%87%8D%E5%90%AF\" class=\"headerlink\" title=\"重启\"></a>重启</h2>\n<p>保存文件，使用命令重启：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>重启完毕后，再使用 <code>lscpu</code> 命令看看 CPU 状况。</p>\n","link":"https://blog.yfun.top/posts/1445549919/"},{"title":"加速 GitHub 下载","date":"2021-06-18 09:30:00","description":"\n<p>GitHub 在国内的访问情况不太稳定，仓库克隆速度也非常慢。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E2%9C%88%EF%B8%8F\" class=\"headerlink\" title=\"✈️\"></a>✈️</h2>\n<p>不必多说。</p>\n<p>例如 <a href=\"http://127.0.0.1:7890/\">http://127.0.0.1:7890</a> 为代理地址，你可以使用下方的命令更改：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global http.proxy http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>如果有一天不需要了，输入下面代码取消：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#FastGit\" class=\"headerlink\" title=\"FastGit\"></a>FastGit</h2>\n<p>使用 <a href=\"https://fastgit.org/\">FastGit</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://hub.fastgit.org/\">https://hub.fastgit.org</a></p>\n<p>支持 HTTPS 克隆，并且提供 raw.githubusercontent.com 的镜像，地址为 <a href=\"https://raw.fastgit.org/\">https://raw.fastgit.org</a></p>\n<h2>\n<a href=\"https://blog.yfun.top/#CNPM\" class=\"headerlink\" title=\"CNPM\"></a>CNPM</h2>\n<p>使用 <a href=\"https://cnpmjs.org/\">CNPM</a> 提供的 GitHub 镜像。</p>\n<p>镜像地址：<a href=\"https://github.com.cnpmjs.org/\">https://github.com.cnpmjs.org</a></p>\n<p>支持 HTTPS 克隆。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Hosts\" class=\"headerlink\" title=\"Hosts\"></a>Hosts</h2>\n<p>通过更改 Hosts 文件的方式解决，但大有可能失效：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"code\"><pre><span class=\"line\">199.232.69.194  github.global.ssl.fastly.net</span><br><span class=\"line\">140.82.113.4    github.com</span><br></pre></td></tr></table></figure><p>GitHub 上的 <a href=\"https://github.com/521xueweihan/GitHub520\">521xueweihan/GitHub520</a> 项目提供了更多关于 GitHub Hosts 列表。</p>\n<blockquote><p><a href=\"https://github.com/521xueweihan/GitHub520/issues/53\">521xueweihan/GitHub520 #53</a></p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#Gitee\" class=\"headerlink\" title=\"Gitee\"></a>Gitee</h2>\n<p>网上挺多教程，使用 Gitee 的「从 GitHub 导入」功能。</p>\n<p>不过 Gitee 限制仓库 500MB。。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2>\n<p>进入 Coding 控制台，点击「创建项目」。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/k7uHJm.png\"></p>\n<p>项目模版选择「代码托管」就好，仅做下载的话无需开启太多。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bEO0vX.png\"></p>\n<p>填写项目基本信息，如名称、标识等。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/N4xjSv.png\"></p>\n<p>新建一个镜像仓库。</p>\n<p>「Git 仓库 URL」填写 GitHub 公开仓库 HTTPS 克隆地址，如：<a href=\"https://github.com/twbs/bootstrap.git\">https://github.com/twbs/bootstrap.git</a></p>\n<p>创建完成后请稍等，系统就会自动导入。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/YxnnDj.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/FmfWkf.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/OV7w4v.png\"></p>\n<p>导入完成后，点击「克隆」就能找到克隆地址。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.9/rawimg/bWszbu.png\"></p>\n<p>克隆速度挺快的：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cloning into <span class=\"string\">'bootstrap'</span>...</span><br><span class=\"line\">remote: Enumerating objects: 169214, <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Counting objects: 100% (169214/169214), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">remote: Compressing objects: 100% (51634/51634), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">Receiving objects:  57% (96728/169214), 90.58 MiB | 6.83 MiB/s </span><br></pre></td></tr></table></figure><p>此外，Coding 还支持自动同步，可以设置每天的同步时间。</p>\n","link":"https://blog.yfun.top/posts/2517388641/"},{"title":"GitHub Action 监测京东商品价格","date":"2021-05-18 10:32:00","description":"\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%89%8D%E8%A8%80\" class=\"headerlink\" title=\"前言\"></a>前言</h2>\n<p>我会在京东上买些电子产品和文具，那么如何获得商品降价信息，使用更低的价格购买呢？</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%BC%80%E5%A7%8B\" class=\"headerlink\" title=\"开始\"></a>开始</h2>\n<p>新建一个 <code>GitHub</code> 仓库，创建 <code>main.py</code> , <code>notify.py</code> 和 <code>.github/workflows/auto.yml</code> 三个文件，内容如下：</p>  <details class=\"post-details\"><summary><code>main.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># 导入模块</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, random, json, notify</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 商品列表</span></span><br><span class=\"line\">check = [</span><br><span class=\"line\">    <span class=\"comment\"># 闪迪（SanDisk）64GB TF（MicroSD）存储卡</span></span><br><span class=\"line\">    <span class=\"string\">'1887526'</span>,</span><br><span class=\"line\">    <span class=\"comment\"># 晨光(M&amp;G)文具 0.5mm 黑色中性笔</span></span><br><span class=\"line\">    <span class=\"string\">'277393'</span></span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 价格列表，用于临时存储获取到的价格数据</span></span><br><span class=\"line\">price = {}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取上次的价格文件</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode=<span class=\"string\">'r'</span>)</span><br><span class=\"line\">    lastPrice = json.loads(file.readlines()[<span class=\"number\">0</span>])</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"读取文件时出现错误！\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 遍历列表，比对价格</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> itemId <span class=\"keyword\">in</span> check:</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求 URL</span></span><br><span class=\"line\">    <span class=\"comment\"># http://p.3.cn/prices/mgets?skuIds=J_</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://p.3.cn/prices/mgets?skuIds=J_{}'</span>.<span class=\"built_in\">format</span>(itemId)</span><br><span class=\"line\">    <span class=\"comment\"># User-Agent 列表</span></span><br><span class=\"line\">    ua = [<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.90 Safari/537.36'</span>,<span class=\"string\">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36 OPR/26.0.1656.60'</span>,<span class=\"string\">'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>,<span class=\"string\">'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50'</span>]</span><br><span class=\"line\">    <span class=\"comment\"># 随机获得一个 User-Agent，如不带 User-Agent 请求，就会被拒绝。</span></span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: ua[random.randint(<span class=\"number\">0</span>,<span class=\"number\">4</span>)]</span><br><span class=\"line\">    }</span><br><span class=\"line\">    <span class=\"comment\"># 组合请求参数</span></span><br><span class=\"line\">    request = urllib.request.Request(url = url, headers = headers)</span><br><span class=\"line\">    <span class=\"comment\"># 向京东发起请求</span></span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    <span class=\"comment\"># 将获得的数据转为 JSON</span></span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    thisPrice = <span class=\"built_in\">float</span>(page_text[<span class=\"number\">0</span>][<span class=\"string\">'p'</span>])</span><br><span class=\"line\">    <span class=\"comment\"># 将价格输入至价格变量</span></span><br><span class=\"line\">    price[itemId] = thisPrice</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 尝试对比价格</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> thisPrice &gt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 涨价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\"></span><br><span class=\"line\">            print(thisPrice - lastPrice[itemId])</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">0</span>, thisPrice - lastPrice[itemId], thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> thisPrice &lt; lastPrice[itemId]:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 降价\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">            print(lastPrice[itemId] - thisPrice)</span><br><span class=\"line\">            notify.notify(itemId, <span class=\"number\">2</span>, lastPrice[itemId] - thisPrice, thisPrice)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> lastPrice[itemId] == thisPrice:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 价格不变\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"{0} 未知错误\"</span>.<span class=\"built_in\">format</span>(itemId))</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        print(<span class=\"string\">\"无法进行比对\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 将 JSON 转为 字符串</span></span><br><span class=\"line\">priceStr = json.dumps(price)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 写入价格文件，便于下次查询</span></span><br><span class=\"line\"><span class=\"keyword\">try</span>:</span><br><span class=\"line\">    file = <span class=\"built_in\">open</span>(<span class=\"string\">'./price.json'</span>, mode = <span class=\"string\">'w'</span>)</span><br><span class=\"line\">    file.write(priceStr)</span><br><span class=\"line\">    file.close()</span><br><span class=\"line\"><span class=\"keyword\">except</span>:</span><br><span class=\"line\">    print(<span class=\"string\">\"写入文件时出现错误\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">print(price)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>notify.py</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request, json, urllib.parse, ssl</span><br><span class=\"line\">ssl._create_default_https_context = ssl._create_unverified_context</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">提醒的服务，支持 `wechat` 与 `qmsg`。</span></span><br><span class=\"line\"><span class=\"string\">需要在下方进行下一步的配置</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">server = [<span class=\"string\">'qmsg'</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">WeChat 采用的是 Server 酱 (https://sc.ftqq.com/3.version) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Server 酱提供的 Token，必填。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">wechat = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Qmsg 采用的是 Qmsg 酱 (https://qmsg.zendee.cn/) 提供的服务</span></span><br><span class=\"line\"><span class=\"string\">key：Qmsg 酱提供的 KEY，必填。</span></span><br><span class=\"line\"><span class=\"string\">qid：接收消息的 QQ 号（不支持 QQ 群），可以添加多个，以半角逗号分割，如：`10001,10002`（必须均在您的 Qmsg 酱 QQ 号列表中）。</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">qmsg = {</span><br><span class=\"line\">    <span class=\"string\">\"key\"</span>: <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"qid\"</span>: <span class=\"string\">\"\"</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">wechat_send</span>(<span class=\"params\">key, title, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://sc.ftqq.com/{0}.send?text={1}&amp;desp={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(title), urllib.parse.quote(text))</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'errno'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">qmsg_send</span>(<span class=\"params\">key, <span class=\"built_in\">id</span>, text</span>):</span></span><br><span class=\"line\">    url = <span class=\"string\">'http://qmsg.zendee.cn/send/{0}?msg={1}&amp;qq={2}'</span>.<span class=\"built_in\">format</span>(key, urllib.parse.quote(text), <span class=\"built_in\">id</span>)</span><br><span class=\"line\">    headers = {</span><br><span class=\"line\">        <span class=\"string\">'User-Agent'</span>: <span class=\"string\">\"Check Price Bot\"</span></span><br><span class=\"line\">    }</span><br><span class=\"line\">    request = urllib.request.Request(url=url, headers=headers)</span><br><span class=\"line\">    response = urllib.request.urlopen(request)</span><br><span class=\"line\">    page_text = json.loads(response.read().decode(<span class=\"string\">'utf-8'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> page_text[<span class=\"string\">'code'</span>] == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">notify</span>(<span class=\"params\"><span class=\"built_in\">id</span>,<span class=\"built_in\">type</span>,price,nowPrice</span>):</span></span><br><span class=\"line\">    <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">    type:</span></span><br><span class=\"line\"><span class=\"string\">        0: 涨价</span></span><br><span class=\"line\"><span class=\"string\">        1: 无变化</span></span><br><span class=\"line\"><span class=\"string\">        2: 降价</span></span><br><span class=\"line\"><span class=\"string\">    id: 商品 ID</span></span><br><span class=\"line\"><span class=\"string\">    price: 差价</span></span><br><span class=\"line\"><span class=\"string\">    nowPrice: 现价</span></span><br><span class=\"line\"><span class=\"string\">    '''</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> svId <span class=\"keyword\">in</span> server:</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">send</span>(<span class=\"params\">title,content</span>):</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'wechat'</span>:</span><br><span class=\"line\">                wechat_send(wechat[<span class=\"string\">\"key\"</span>],title,content)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> svId == <span class=\"string\">'qmsg'</span>:</span><br><span class=\"line\">                qmsg_send(qmsg[<span class=\"string\">\"key\"</span>],qmsg[<span class=\"string\">\"qid\"</span>],title + <span class=\"string\">\"\\n\"</span> + content)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 涨价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 涨价咯！价格相较于上次监测，高了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>,price,nowPrice)</span><br><span class=\"line\">            send(title,content)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">1</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"价格没有变化，不推送通知。\"</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">type</span> == <span class=\"number\">2</span>:</span><br><span class=\"line\">            title = <span class=\"string\">\"商品 {0} 降价!\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>)</span><br><span class=\"line\">            content = <span class=\"string\">\"您关注的商品 {0} 降价咯！价格相较于上次监测，低了 {1} 元，现价 {2} 元。商品详情：https://item.jd.com/{0}.html\"</span>.<span class=\"built_in\">format</span>(<span class=\"built_in\">id</span>, price,nowPrice)</span><br><span class=\"line\">            send(title, content)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n</div></details><details class=\"post-details\"><summary><code>.github/workflows/auto.yml</code> (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Check</span> <span class=\"string\">Price</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">master</span></span><br><span class=\"line\">  <span class=\"attr\">schedule:</span></span><br><span class=\"line\">    <span class=\"comment\"># 每 1 小时运行一次</span></span><br><span class=\"line\">    <span class=\"bullet\">-</span> <span class=\"attr\">cron:</span> <span class=\"string\">\"0 * * * *\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">check:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Clone</span> <span class=\"string\">repository</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">'Set up Python'</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-python@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">python-version:</span> <span class=\"number\">3.7</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Run</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">python</span> <span class=\"string\">main.py</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--local</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">date</span> <span class=\"string\">+\"%Y-%m-%d</span> <span class=\"string\">%H:%M:%S.%N\"</span> <span class=\"string\">&gt;</span> <span class=\"string\">date.txt</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-am</span> <span class=\"string\">\"Update price.json\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E6%B3%A8%E6%84%8F\" class=\"headerlink\" title=\"注意\"></a>注意</h2>\n<p>计划任务语法有 5 个字段，中间用空格分隔，每个字段代表一个时间单位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌───────────── 分钟 (0 - 59)</span><br><span class=\"line\">│ ┌───────────── 小时 (0 - 23)</span><br><span class=\"line\">│ │ ┌───────────── 日 (1 - 31)</span><br><span class=\"line\">│ │ │ ┌───────────── 月 (1 - 12 或 JAN-DEC)</span><br><span class=\"line\">│ │ │ │ ┌───────────── 星期 (0 - 6 或 SUN-SAT)</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">│ │ │ │ │</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure><p>每个时间字段的含义：</p>\n<table>\n<thead><tr>\n<th align=\"center\">符号</th>\n<th align=\"center\">描述</th>\n<th align=\"center\">举例</th>\n</tr></thead>\n<tbody>\n<tr>\n<td align=\"center\"><code>*</code></td>\n<td align=\"center\">任意值</td>\n<td align=\"center\">\n<code>* * * * *</code> 每天每小时每分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>,</code></td>\n<td align=\"center\">值分隔符</td>\n<td align=\"center\">\n<code>1,3,4,7 * * * *</code> 每小时的 1 3 4 7 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>-</code></td>\n<td align=\"center\">范围</td>\n<td align=\"center\">\n<code>1-6 * * * *</code> 每小时的 1-6 分钟</td>\n</tr>\n<tr>\n<td align=\"center\"><code>/</code></td>\n<td align=\"center\">每</td>\n<td align=\"center\">\n<code>*/15 * * * *</code> 每隔 15 分钟</td>\n</tr>\n</tbody>\n</table>\n<blockquote><p>注：由于 GitHub Actions 的限制，如果设置为 <code>* * * * *</code> 实际的执行频率为每 5 分执行一次。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%90%8E\" class=\"headerlink\" title=\"后\"></a>后</h2>\n<p>新建文件 并 配置 <code>notify.py</code> 后，GitHub Action 就会定时执行代码。如果有降价或涨价，就会按照 <code>notify.py</code> 的配置进行通知。</p>\n<p>京东也有降价提醒的功能，但我实在是不想给 京东 开通知权限，经常推送商品广告。</p>\n<p>本文部分内容参考：<a href=\"https://github.com/justjavac/auto-green#readme\">justjavac/auto-green#readme</a></p>\n","link":"https://blog.yfun.top/posts/1238639652/"},{"title":"我的图床解决方案","date":"2021-05-08 10:30:00","description":"\n<p>博客的文章经常需要插入图片，如果我将文档与图片放在一起，那么图片的加载速度将会很慢，于是我使用了图床。</p>\n<p>图床的选择有很多，<a href=\"https://blog.yfun.top/posts/3867215122/\">笔者之前写过一篇关于免费图床的汇总</a>，本文就来介绍下我采用的方案：NPM。</p>\n<blockquote><p>本文假设您已有 NPM 账号、GitHub 账号。</p></blockquote>\n<h2>\n<a href=\"https://blog.yfun.top/#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E6%96%B0%E5%BB%BA%E4%BB%93%E5%BA%93\" class=\"headerlink\" title=\"新建仓库\"></a>新建仓库</h3>\n<p>新建一个 GitHub 仓库，公开或是私人都可以，此处不再赘述。</p>\n<p>在 Git 仓库中新建 <code>rawimg/.gitkeep</code> 与 <code>webpimg/.gitkeep</code> 两个文件。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%8E%B7%E5%8F%96%E4%BB%A4%E7%89%8C\" class=\"headerlink\" title=\"获取令牌\"></a>获取令牌</h3>\n<p>登录 <a href=\"https://npmjs.com/\">https://npmjs.com</a> ，点击右上角的头像，进入 <code>Access Token</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/1Xbrlw.png\"></p>\n<p>点击页面中的 <code>Generate New Token</code> 获取新的令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OQMmsB.png\"></p>\n<p>选择 <code>Automation</code>，点击 <code>Generate Token</code> 生成令牌。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/4Ob3xs.png\"></p>\n<p>将生成的令牌复制下来。</p>\n<p>进入 GitHub 仓库，点击 <code>Settings</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UfBqld.png\"></p>\n<p>点击菜单栏中的 <code>Secrets</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/SStNlF.png\"></p>\n<p>点击 <code>New repository secret</code> 新建一个 Secret。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/UYSnao.png\"></p>\n<p>Secret Name 为 <code>NPM_TOKEN</code>，Value 是你的 NPM 令牌，点击 <code>Add secret</code> 添加。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/OY4C6A.png\"></p>\n<p>在仓库中新建 <code>package.json</code> 文件，参考如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">{</span><br><span class=\"line\">  <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"ocoke-osg\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.0.0\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Somewhere to save the file from @oCoke\"</span>,</span><br><span class=\"line\">  <span class=\"attr\">\"author\"</span>: <span class=\"string\">\"YFun(@oCoke)\"</span></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure><h2>\n<a href=\"https://blog.yfun.top/#%E5%9B%BE%E7%89%87%E8%BD%AC%E6%8D%A2%E4%B8%8E%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"图片转换与发布\"></a>图片转换与发布</h2>\n<p>为了方便多端写作，我使用 GitHub 临时存储所需的图片，GitHub Action 发布 NPM 包。</p>\n<p>WebP 可以大大缩减图片的尺寸，我们还可以借助 GitHub Action 在发布前自动转换。</p>  <details class=\"post-details\"><summary>GitHub Action 代码 (点击展开)</summary><div class=\"details-content\">  <figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">NPM</span> <span class=\"string\">&amp;</span> <span class=\"string\">WebP</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 在 Release 发布时 或手动执行</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">release:</span></span><br><span class=\"line\">     <span class=\"attr\">types:</span></span><br><span class=\"line\">       <span class=\"bullet\">-</span> <span class=\"string\">published</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">workflow_dispatch:</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">publish-npm:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"comment\"># Clone 仓库</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v2</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">ref:</span> <span class=\"string\">master</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装 Node.js    </span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Setup</span> <span class=\"string\">Node</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v1</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">\"12.x\"</span></span><br><span class=\"line\">          <span class=\"attr\">registry-url:</span> <span class=\"string\">https://registry.npmjs.org/</span></span><br><span class=\"line\">        </span><br><span class=\"line\">      <span class=\"comment\"># rawimg/ 作为原始图片存储，webpimg/ 作为压缩图片存储处，最后合并。</span></span><br><span class=\"line\">      <span class=\"comment\"># 安装相关插件，转换图片。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">&amp;</span> <span class=\"string\">Convert</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">install</span> <span class=\"string\">-g</span> <span class=\"string\">webp-batch-convert</span></span><br><span class=\"line\">          <span class=\"string\">cwebp-batch</span> <span class=\"string\">--in</span> <span class=\"string\">rawimg</span> <span class=\"string\">--out</span> <span class=\"string\">webpimg</span> <span class=\"string\">-q</span> <span class=\"number\">75</span> <span class=\"string\">-quiet</span></span><br><span class=\"line\">          <span class=\"string\">mv</span> <span class=\"string\">webpimg/*.webp</span> <span class=\"string\">rawimg/</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 发布 NPM 包</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Publish</span> <span class=\"string\">Package</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.email</span> <span class=\"string\">\"icolabot@e.yfun.top\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">config</span> <span class=\"string\">--global</span> <span class=\"string\">user.name</span> <span class=\"string\">\"iColaBot\"</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">version</span> <span class=\"string\">patch</span></span><br><span class=\"line\">          <span class=\"string\">npm</span> <span class=\"string\">publish</span></span><br><span class=\"line\">        <span class=\"attr\">env:</span></span><br><span class=\"line\">          <span class=\"attr\">NODE_AUTH_TOKEN:</span> <span class=\"string\">${{secrets.npm_token}}</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"comment\"># 删除 rawimg/ 和 webpimg/ 下的所有文件</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Delete</span> <span class=\"string\">Files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">webpimg/*</span></span><br><span class=\"line\">          <span class=\"string\">rm</span> <span class=\"string\">-rf</span> <span class=\"string\">rawimg/*</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">webpimg/.gitkeep</span></span><br><span class=\"line\">          <span class=\"string\">touch</span> <span class=\"string\">rawimg/.gitkeep</span></span><br><span class=\"line\">          </span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Push</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">add</span> <span class=\"string\">-A</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">commit</span> <span class=\"string\">-m</span> <span class=\"string\">\"Publish\"</span></span><br><span class=\"line\">          <span class=\"string\">git</span> <span class=\"string\">push</span> <span class=\"string\">origin</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n</div></details><h2>\n<a href=\"https://blog.yfun.top/#%E4%BD%BF%E7%94%A8\" class=\"headerlink\" title=\"使用\"></a>使用</h2>\n<h3>\n<a href=\"https://blog.yfun.top/#%E4%B8%8A%E4%BC%A0\" class=\"headerlink\" title=\"上传\"></a>上传</h3>\n<p>将图片文件上传至仓库的 <code>rawimg/</code> 文件夹下即可。</p>\n<p>当然也可以使用 PicGo / UPic / HexoPlusPlus 等工具上传。</p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E5%8F%91%E5%B8%83\" class=\"headerlink\" title=\"发布\"></a>发布</h3>\n<p>在 GitHub 中新建 Release，将自动修改版本号并发布 NPM 包，无需手动修改 <code>package.json</code>。</p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/t2afFy.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/npm/ocoke-osg@0.0.8/rawimg/0wAmRV.png\"></p>\n<h3>\n<a href=\"https://blog.yfun.top/#%E8%AE%BF%E9%97%AE\" class=\"headerlink\" title=\"访问\"></a>访问</h3>\n<h4>\n<a href=\"https://blog.yfun.top/#%E6%8E%A8%E8%8D%90%E7%9A%84%E9%95%9C%E5%83%8F\" class=\"headerlink\" title=\"推荐的镜像\"></a>推荐的镜像</h4>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/  <span class=\"comment\"># jsDelivr</span></span><br><span class=\"line\">https://unpkg.zhimg.com/ <span class=\"comment\"># 知乎</span></span><br><span class=\"line\">https://code.bdstatic.com/npm/ <span class=\"comment\"># 百度 (不推荐)</span></span><br><span class=\"line\">https://shadow.elemecdn.com/npm/ <span class=\"comment\"># 饿了么</span></span><br><span class=\"line\">https://unpkg.com/ <span class=\"comment\"># Unpkg</span></span><br></pre></td></tr></table></figure><p>镜像推荐选择访问速度快的，比较稳定的，拉取速度快的。</p>\n<p>我选择的是 jsDelivr，国内外速度都很优秀。</p>\n<h4>\n<a href=\"https://blog.yfun.top/#%E9%93%BE%E6%8E%A5\" class=\"headerlink\" title=\"链接\"></a>链接</h4>\n<p>以 jsDelivr 为例，原图链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].[suffix]</span><br></pre></td></tr></table></figure><p>WebP 图片链接为：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://cdn.jsdelivr.net/npm/[package-name]@[version]/rawimg/[filename].webp</span><br></pre></td></tr></table></figure><table>\n<thead><tr>\n<th>[值]</th>\n<th>说明</th>\n</tr></thead>\n<tbody>\n<tr>\n<td><code>package-name</code></td>\n<td>NPM 包的名称 (<code>package.json</code> 文件中 <code>name</code> 的值)</td>\n</tr>\n<tr>\n<td><code>version</code></td>\n<td>当前版本 (<code>package.json</code> 文件中 <code>version</code> 的值，通常需要在发布 Release 1 分钟后更新)</td>\n</tr>\n<tr>\n<td><code>filename</code></td>\n<td>文件名</td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td>文件后缀名</td>\n</tr>\n</tbody>\n</table>\n","link":"https://blog.yfun.top/posts/2876015612/"},{"title":"使用 JS 检测网址能否正常加载","date":"2021-04-09 12:42:00","description":"\n<p>有时我们需要判断用户能否加载某些网页或服务，如 Google、Disqus 等。</p>\n<p>而我们可以用 JavaScript 来实现这样的检测功能。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%B8%80\" class=\"headerlink\" title=\"方法一\"></a>方法一</h2>\n<p>使用 JavaScript 创建一个图片，设置图片的链接为 检测网址 + <code>favicon.ico</code>。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建一个图片</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> img = <span class=\"keyword\">new</span> Image();</span><br><span class=\"line\"><span class=\"comment\">// 设置图片的链接</span></span><br><span class=\"line\">img.src = <span class=\"string\">\"https://google.com/favicon.ico\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">img.onerror = img.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">img.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">img.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\"><span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"无法加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"可以加载\"</span>);</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure><p>缺点：不是每一个网站都存在 <code>/favicon.ico</code> 文件，但如果加载特定文件的话挺好的。</p>\n<h2>\n<a href=\"https://blog.yfun.top/#%E6%96%B9%E6%B3%95%E4%BA%8C\" class=\"headerlink\" title=\"方法二\"></a>方法二</h2>\n<p>使用 JavaScript 创建一个 iframe 标签，设置标签的链接为 检测网址。</p>\n<p><code>onerror</code> 事件触发不能加载的事件，<code>onload</code> 事件触发可以加载的事件，并使用 <code>setTimeout</code> 设置超时时间。</p>\n<p>代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 新建 iframe 标签</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> iframe = <span class=\"built_in\">document</span>.createElement(<span class=\"string\">\"iframe\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设置 iframe 标签的网址</span></span><br><span class=\"line\">iframe.src=<span class=\"string\">\"https://google.com\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 设定超时事件，延迟 3000 毫秒</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> timeout = <span class=\"built_in\">setTimeout</span>(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 清除 onerror 和 onload 事件</span></span><br><span class=\"line\">    iframe.onerror = iframe.onload = <span class=\"literal\">null</span>;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"time out.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">},<span class=\"number\">3000</span>);</span><br><span class=\"line\"><span class=\"comment\">// 设定错误事件</span></span><br><span class=\"line\">iframe.onerror = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"load error.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行无法加载的事件</span></span><br><span class=\"line\">    canNotLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定可以加载的事件</span></span><br><span class=\"line\">iframe.onload = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">// 先清除超时事件</span></span><br><span class=\"line\">    <span class=\"built_in\">clearTimeout</span>(timeout);</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"ok.\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 执行可以加载的事件</span></span><br><span class=\"line\">    canLoad();</span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canNotLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">canLoad</span>(<span class=\"params\"></span>) </span>{</span><br><span class=\"line\">    <span class=\"comment\">/* code here */</span></span><br><span class=\"line\">}</span><br><span class=\"line\"><span class=\"comment\">// 设定为不可见</span></span><br><span class=\"line\">iframe.style = <span class=\"string\">\"display: none!important;\"</span>;</span><br><span class=\"line\"><span class=\"comment\">// 向 body 添加 iframe</span></span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(iframe);</span><br></pre></td></tr></table></figure><p>缺点：页面上的其他外部链接也会被一并的加载过来，例如 JS 文件，CSS 文件，统计代码。</p>\n<p>您也可以 <a href=\"https://codepen.io/ocoke-the-decoder/pen/dyNZEwq\">点击此链接</a> 前往 CodePen 体验。</p>\n","link":"https://blog.yfun.top/posts/856484826/"},{"title":"无垠 2020 年度总结","date":"2020-12-29 21:04:02","description":"\n<p>2020 即将过去，2021 已在眼前。2020 实在是多灾多难的一年，新冠疫情可以说是严重打乱了我的生活计划，希望新的一年，一切都可以变好吧。</p>\n<p>2020 还剩下最后两天，是时候总结一下这一年了。</p>\n<h1>统计数据</h1>\n<p>依然是一些统计数据。以下数据截止 2020 年 12 月 29 日 23:39:59。</p>\n<h2>博客主站</h2>\n<p>无垠博客主站，年 UV 28,888 (<span>+7.4%</span>)，年 PV 76,583 (<span>-1.66%</span>)，日均 UV 79.36，平均停留时间 4分8秒 (<span>-21.4%</span>)，平均跳出率 51% (<span>-3.77%</span>)。一年有效文章数 5 (<span>+150%</span>)，新增评论 242 条 (<span>-44.9%</span>)。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/blog-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2432\"></a>\n<p>文章数提升，访问量也有所提升，但 PV 和停留时间却下降了，或许我还需要继续提高文章的质量...</p>\n<h2>个人主页</h2>\n<p>个人主页依然是几乎没有更新过。什么时候能把 TODO List 上的东西做了呢？我也不知道。不过访问量倒是比去年上升了不少。</p>\n<p>个人页总 UV 3,515 (<span>+64.2%</span>)，总 PV 3,929 (<span>+43.2%</span>)，日均 UV 9.9 (<span>+65%</span>)，平均停留时间 63秒 (<span>+1.6%</span>)。和去年一样，主要来源是知乎和 V2EX。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/axton-2020.png\" alt=\"\" width=\"515\" height=\"670\" class=\"aligncenter size-full wp-image-2433\"></a>\n<h2>MDx</h2>\n<p>一年中，MDx 更新了 7 次，新增 328 commits (<span>+91.8%</span>)，Star 数增加了 306，现有 614。感谢所有人的支持。当然，虽然 2.0 咕咕咕了很久（甚至离最早的承诺已经过去将近一年半了），但我已经在对 2.0 进行最后的完善（改动确实比较大）。相信在 2021 的开头，MDx 2.0 就能顺利发布了。</p>\n<div class=\"mdx-github-cot\" data-mdxgithuba=\"yrccondor\" data-mdxgithubp=\"mdx\" data-mdxgithubg=\"https://api.github.com/\"><div class=\"mdx-github-wait-out-c2\"><div class=\"mdx-github-wait-out-c mdui-valign\"><div class=\"mdx-github-wait-out\"><div class=\"mdx-github-wait\"><a href=\"https://github.com/yrccondor/mdx\"><div class=\"mdui-spinner\"></div></a></div></div></div></div></div>\n<h1>大事记</h1>\n<ul>\n<li>一月：我经历过的最长的“寒假”开始了</li>\n<li>二月：GitHub followers 换虚拟币，成功换到 3.5k CNY 没有翻车</li>\n<li>三月：<a href=\"https://flyhigher.top/develop/2160.html\">WP-WebAuthn</a> 插件成功上线 <a href=\"https://wordpress.org/plugins/wp-webauthn/\">WordPress 插件目录</a>\n</li>\n<li>四月：Cytus II 主线大结局<del>，我当场通关 </del>\n</li>\n<li>五月：开始学车</li>\n<li>五月：MDx 达到 500 Stars</li>\n<li>七月：第一次实习，公司的前端技术栈和我熟悉的完全一致<del>，于是愉快地在公司里写了一个半月的各种表格 </del>\n</li>\n<li>八月：实习结束，部门同事都很棒，确实学到了很多</li>\n<li>九月：和 Ralph 面基一整天</li>\n<li>九月：入手树莓派 4B</li>\n<li>十月：搬家</li>\n<li>十月：和宁诺合作的 H5 上线</li>\n<li>十一月：TEDxNingbo 年度大会，H5 上线<del>，持续摸鱼中 </del>\n</li>\n<li>十一月：终于买了块副屏，<del> 秃头 </del>写代码更快乐了</li>\n<li>十二月：MDx 喜提 600 Stars</li>\n</ul>\n<h1>跨年红包</h1>\n<p><del>传统艺能时间！和以前一样，红包不是白拿的，你需要一点点技术力来解密拿到红包。有效期截至 2021 年 1 月 1 日 22 时。</del></p>\n<p>今年的解谜旅程，从下面这段颜文字开始。</p>\n<pre>ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)={ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] }; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\\\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) ('_')</pre>\n<p><del>和去年一样，红包限时不限量。</del>为了保持解谜乐趣，请不要将答案透露给他人，也请不要重复领取红包，否则视情况活动可能会提前结束。</p>\n<p>由于出现大量重复领取/未解题即领取红包的现象，红包解谜活动立即结束，当前红包领完后将不再更新新的红包口令码。<strong>我发起红包解谜活动是为了解题的乐趣而不是发钱，请各位理解。</strong>以下是详细信息。</p>\n<p>出于对参与者的信任，今年的题目中没有对参与者是否已完成前序步骤进行任何验证，但在最后的 WebSocket 中我记录下了所有成功连接的 IP。今年共发出了 32 个红包，但最后一个步骤的日志只记录到了 25 个不重复 IP（鉴于第一批 10 个红包领完时只记录到了四个 IP，实际人数应该小于 25）。查阅支付宝的红包领取记录可以发现有多位用户多次领取了红包，还有一些用户疑似是从他人处获取答案并直接领取的。鉴于活动已经完全失去意义，我选择提前结束了红包解谜活动。</p>\n<h2>红包答案</h2>\n<p>现在，让我们来看看答案吧。今年的题目难度不高，由于事情比较多，我的准备时间确实不多。</p>\n<p>第一阶段非常简单，这段颜文字就是 Javascript，只是使用了著名的 aaencode 将其编码为了颜文字<del>（多亏了 js 优秀的自动类型转换）</del>。将这段颜文字扔进浏览器控制台即可得到 <code>https://rp.dlij.site/2021/</code>。</p>\n<p>前往这个 URL，可以看到这张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/index.png\" alt=\"\" width=\"2000\" height=\"1125\" class=\"aligncenter size-full wp-image-2444\"></a>\n<p>今年八月宝塔面板 7.4.2 的 phpMyAdmin 未授权访问漏洞很多人都知道了，如果你不清楚，搜索“宝塔面板 7.4.2”也能找到相关信息。首先找到 <code>rp.dlij.site</code> 对应的 IP 是 <code>121.196.27.125</code>，访问 <code>http://121.196.27.125:888/pma</code> 即可看到一个 phpMyAdmin 的界面（为了把这个页面扒下来我还装了一个真的宝塔面板...）。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/pma.jpg\" alt=\"\" width=\"1600\" height=\"867\" class=\"aligncenter size-full wp-image-2448\"></a>\n<p>可以看到信息是 <code>7972632E6D652F6738546D444A3132</code>。和前年一样，这其实是十六进制的 ASCII 码，每两位转为 ASCII 字符即可得到 <code>yrc.me/g8TmDJ12</code>。访问这个页面，可以看到如下信息。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/apl.jpg\" alt=\"\" width=\"1500\" height=\"248\" class=\"aligncenter size-full wp-image-2447\"></a>\n<p>这是 APL，一种有趣的函数式编程语言。你可能不了解它，但只要你搜索网页的 <code>title</code>，就能找到这个在线运行 APL 的页面：<a href=\"https://tryapl.org/\">TryAPL</a>。在这个页面中粘贴这段代码，即可得到 <code>https://rp.dlij.site/2021/2554038.75</code>。访问这个 URL，可以看到一张图。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021-b.jpg\" alt=\"\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2445\"></a>\n<p>连续三年的传统艺能了，压缩包藏在了图片里。下载图片，将后缀改为 .zip 然后打开，可以看到一个 README.md。其中要求我们去 <code>ws://121.196.27.125:8080/NvAhoZ9@H2Au</code> 获取最终红包口令码。这是一个 WebSocket 协议的地址，在浏览器中开一个新 Console，执行 <code>new WebSocket('ws://121.196.27.125:8080/NvAhoZ9@H2Au')</code> 即可在 Network 选项卡中看见服务器下发的红包口令码。当然，别忘了将其反转。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/message.jpg\" alt=\"\" width=\"475\" height=\"179\" class=\"aligncenter size-full wp-image-2446\"></a>\n<h1>跨年海报</h1>\n<p>依然是传统艺能，今年的海报只用到了 PS。</p>\n<a href=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\"><img loading=\"lazy\" src=\"https://acdn.flyhigher.top/wp-content/uploads/2020/12/2021.jpg\" alt=\"2021\" width=\"720\" height=\"960\" class=\"aligncenter size-full wp-image-2407\"></a>\n<p>提前祝各位新年快乐！</p>\n","link":"https://flyhigher.top/diary/2405.html"},{"title":"[译] HentaiVerse 建议和指导","date":"2020-12-24 22:31:00","description":"\n<p>著名的同人本资源集散地 E-hentai 有一个完全没有人在意的角落 ——「HentaiVerse」，一个纯文字网页 RPG 游戏。虽然这个游戏应该不会有太多新玩家了，不过还是翻译一篇给新玩家的指导文吧。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/209138/1/18651/50218/622032acEf83a8d68/fc6db86aebb679ff.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hentaiverse-advice/\">https://blog.skk.moe/post/hentaiverse-advice/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hentaiverse-advice/"},{"title":"ZSH 自动读取 macOS 系统代理配置并设置环境变量","date":"2020-12-07 02:47:00","description":"\n<p>和其它 Linux 的 DE 一样，macOS 也支持在「系统偏好设置」中设置 HTTP 代理、HTTPS 代理，但是 macOS 并不会在终端（Terminal、iTerm）的 shell 中自动生效系统代理配置。为了方便日常使用，我决定好好研究一下 macOS 的系统代理。macOS 系统代理的行为和 Linux 和 Windows 只有一种系统代理配置不同，macOS 为每一种网络设备（Wi-Fi、Ethernet、Bluetooth PAN 等）维护了独立的网络配置，包括代理配置在内。因此当切换网络设备时，macOS 会使用不同的代理配置；如果同时连接了多个网络设备，则操作系统会优先采用在「系统偏好设置」网络「Service Order」靠上的设备的代理配置：...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/207910/19/18573/59096/622032b0E05c1d4be/5d89d557f7889730.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/\">https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/macos-auto-read-proxy-settings-zsh/"},{"title":"谈谈 Apple M1 芯片、ARM、ARM Mac 和黑苹果的未来","date":"2020-11-11 16:13:00","description":"\n<p>2020 年 11 月 11 日，苹果在本年度最后一次 Apple Events 上发布了全新的 ARM 芯片 M1、以及三款搭载了 M1 的 Mac：MacBook Air、MacBook Pro 13‘ 和 Mac Mini。在 WWDC 2020 库克宣布 Apple Silicon 后，这次 Apple Events 再一次掀起了热潮，不少 KOL 都把 M1 奉若神明，不少人也不以为然。本文通过 8 个问题来简单聊聊 M1 和 ARM Mac。M1 芯片的性能如何？本文写就时，搭载 M1 的 Mac 尚未开始发货，我们能看到的只有 GeekBench 上流出的跑分。所以，让我们先从跑分开始看起？...</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/138186/40/23101/50775/622032b3Efa9053d7/df3a819d044a9455.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/talk-about-arm-m1-mac/\">https://blog.skk.moe/post/talk-about-arm-m1-mac/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/talk-about-arm-m1-mac/"},{"title":"USTC Hackergame 2020（中科大信安赛）write up","date":"2020-11-06 22:00:00","description":"\n<p>作为一只 CS 零基础、信安零基础、CTF 零基础的菜狐狐，苏卡卡今年又来参加 USTC Hackergame 啦！由于一边做题一边总结思路（指写 Write Up），所以苏卡卡应该是第一个发布非官方的 USTC Hackergame 2020 Write Up 的吧（嘿嘿）。</p>\n<blockquote>\n<p>题图来自 USTC Hackergame 2019「Happy LUG」</p>\n</blockquote>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/90743/25/22680/55545/622032abE6ef31d51/cfc4cb389c994c17.png\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/hackergame-2020-write-up/\">https://blog.skk.moe/post/hackergame-2020-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/hackergame-2020-write-up/"},{"title":"Bilibili 2020「1024 程序员节」CTF Write Up","date":"2020-10-25 09:44:00","description":"\n<blockquote>\n<p>周六不放假休息，还在这加班搞 CTF？</p>\n</blockquote>\n<p>10 月 24 日不睡觉、凌晨两点钟我还在水群，结果在 USTC@LUG 的群里看见有人在打 Bilibili 的 CTF。我刚刚好一年（指 370 天）没有打过 CTF 了（上一次打正式的 CTF 还是去年参加的 <a href=\"https://blog.skk.moe/post/hackergame-2019-write-up/\">USTC Hackergame 2019</a>），所以想着来玩玩。虽然 CTF 结束之前不应该分享和公开 Write Up 和题解，不过 Bilibili 这 CTF 既然这么离谱，那我也没必要按照常理出牌。</p>\n<img src=\"https://img10.360buyimg.com/ddimg/jfs/t1/86535/11/24318/75037/622032a8E4f94d4ae/89703ccc122cf4e0.jpg\"><br><p>请前往 <a href=\"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/\">https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/</a> 阅读全文</p>\n","link":"https://blog.skk.moe/post/2020-bilibili-1024-ctf-write-up/"},{"title":"谈谈 WebAuthn","date":"2020-03-23 14:57:59","description":"WebAuthn，即 Web Authentication，是一个用于在浏览器上进行认证的 API，W3C 将 […]","link":"https://flyhigher.top/develop/2160.html"}]